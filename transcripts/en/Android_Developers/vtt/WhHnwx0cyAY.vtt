WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.856
[MUSIC PLAYING]

00:00:11.484 --> 00:00:12.900
BILL SCHILIT: More
and more, we're

00:00:12.900 --> 00:00:17.130
seeing machine learning as
a part of everyday things--

00:00:17.130 --> 00:00:21.049
in your car, in your
cameras, in your doorbell.

00:00:21.049 --> 00:00:22.590
NHAT VU: We wanted
to build something

00:00:22.590 --> 00:00:26.130
to showcase the technologies
and the power of Android Things.

00:00:26.130 --> 00:00:30.450
And so we decided to build a
garden that can kind of react

00:00:30.450 --> 00:00:32.310
and interact with the user.

00:00:32.310 --> 00:00:34.590
BILL SCHILIT: Android
Things is a way

00:00:34.590 --> 00:00:38.610
to experiment with machine
learning and devices,

00:00:38.610 --> 00:00:40.490
and do it very rapidly.

00:00:40.490 --> 00:00:43.830
We're brainstorming
about how flowers could

00:00:43.830 --> 00:00:47.250
become responsive to people.

00:00:47.250 --> 00:00:50.550
And one of the effects that
we see in the natural world

00:00:50.550 --> 00:00:53.130
is flowers that follow the sun.

00:00:53.130 --> 00:00:57.822
So we had this idea that the
flowers could follow people.

00:00:57.822 --> 00:01:00.600
NHAT VU: The Emotion Flower is
just basically a smart flower

00:01:00.600 --> 00:01:04.680
that reacts to a user's
facial expressions, that

00:01:04.680 --> 00:01:08.670
will open when you're smiling,
or when you're winking at it,

00:01:08.670 --> 00:01:14.110
it will turn shy, and close,
and turn sort of pink.

00:01:14.110 --> 00:01:16.320
BILL SCHILIT: So
we added a camera

00:01:16.320 --> 00:01:21.120
in the head of the flower,
and it detected faces.

00:01:21.120 --> 00:01:25.660
And then the algorithm that did
the face detection controlled

00:01:25.660 --> 00:01:29.970
the motors in the flower
body, and slowly turned

00:01:29.970 --> 00:01:33.780
it to face people that
were standing there,

00:01:33.780 --> 00:01:37.260
and be a little bit
reactive and responsive.

00:01:37.260 --> 00:01:40.260
We wanted to just engage
people with something

00:01:40.260 --> 00:01:43.140
that was aesthetically
pleasing, beautiful.

00:01:43.140 --> 00:01:46.980
And so we had a lot of
flowers that had lights,

00:01:46.980 --> 00:01:48.900
leaves built around them.

00:01:48.900 --> 00:01:51.420
These were active
and interactive,

00:01:51.420 --> 00:01:54.630
and people could stand
in front of them.

00:01:54.630 --> 00:01:58.230
So we had another section where
we showed the Android Things

00:01:58.230 --> 00:02:02.640
processor, and the motors,
and the cables, and the spine,

00:02:02.640 --> 00:02:05.100
and the vertebrae
of this flower.

00:02:05.100 --> 00:02:09.840
And we even let them control the
flower using game controllers.

00:02:09.840 --> 00:02:11.340
NHAT VU: We also
used stuff that you

00:02:11.340 --> 00:02:13.920
can get from the hardware
store, like copper

00:02:13.920 --> 00:02:16.020
piping for the stem.

00:02:16.020 --> 00:02:20.640
And really it's a matter of
how we put them all together

00:02:20.640 --> 00:02:24.630
to make it look like this flower
that's not something you'd

00:02:24.630 --> 00:02:26.610
see in nature, but also
it conveyed the idea

00:02:26.610 --> 00:02:27.954
that it is a flower.

00:02:27.954 --> 00:02:29.370
BILL SCHILIT:
There's a spine that

00:02:29.370 --> 00:02:33.240
runs up the center of
the continuum robot.

00:02:33.240 --> 00:02:36.900
And we finally found something
called a flex cable that was

00:02:36.900 --> 00:02:38.970
available for a weed whacker.

00:02:38.970 --> 00:02:41.970
And we were able to
build the spines which

00:02:41.970 --> 00:02:43.870
hold the vertebrae on.

00:02:43.870 --> 00:02:46.360
The spines were printed plastic.

00:02:46.360 --> 00:02:48.870
And then we had to figure
out how to write the software

00:02:48.870 --> 00:02:50.370
to control this robot.

00:02:50.370 --> 00:02:54.060
And so we went back to
seventh grade trigonometry

00:02:54.060 --> 00:02:59.220
to figure out how much
to move the wire caused

00:02:59.220 --> 00:03:02.560
how much to move
the continuum robot.

00:03:02.560 --> 00:03:06.210
What we wanted to do was
make it super-responsive.

00:03:06.210 --> 00:03:08.820
If you go up to the
cloud and come back,

00:03:08.820 --> 00:03:10.440
you have a little bit of a lag.

00:03:10.440 --> 00:03:13.350
And we wanted our flowers
to be organic and natural,

00:03:13.350 --> 00:03:14.472
and not to show that lag.

00:03:14.472 --> 00:03:15.930
NHAT VU: And really
the whole thing

00:03:15.930 --> 00:03:18.330
is powered by Android Things.

00:03:18.330 --> 00:03:22.410
And so the idea is you
have sensor inputs.

00:03:22.410 --> 00:03:26.550
In our case, it's just the
camera that senses the scene.

00:03:26.550 --> 00:03:29.350
And then on-device processing.

00:03:29.350 --> 00:03:32.460
BILL SCHILIT: So we started with
the face recognition software

00:03:32.460 --> 00:03:34.410
library that Google has.

00:03:34.410 --> 00:03:40.020
We then were interested in
how quickly could we recognize

00:03:40.020 --> 00:03:42.630
faces in a video stream.

00:03:42.630 --> 00:03:45.390
NHAT VU: On the
Raspberry Pi, we detect

00:03:45.390 --> 00:03:46.650
that there's a face there.

00:03:46.650 --> 00:03:50.040
And then there's a neural
net that infers your emotion.

00:03:50.040 --> 00:03:52.980
And so depending on
what the emotion is,

00:03:52.980 --> 00:03:57.240
we change the LED lights or we
move the several motors to kind

00:03:57.240 --> 00:03:59.117
of close and open the petals.

00:03:59.117 --> 00:04:01.200
BILL SCHILIT: The platforms
that we have running--

00:04:01.200 --> 00:04:04.140
the hardware that we have
running in the Android Things

00:04:04.140 --> 00:04:06.120
system is quite capable.

00:04:06.120 --> 00:04:08.280
It has a multi-core processor.

00:04:08.280 --> 00:04:13.980
And it can really be responsive
to changes in a video stream.

00:04:13.980 --> 00:04:16.680
NHAT VU: Anyone
who has any inkling

00:04:16.680 --> 00:04:22.300
to tinker or to sort of do these
DIY hobby-type projects, you

00:04:22.300 --> 00:04:25.300
should just go
and give it a try.

00:04:25.300 --> 00:04:28.740
I think you'll be surprised at
how quickly you can build sort

00:04:28.740 --> 00:04:31.410
of fun, wacky,
interesting gadgets,

00:04:31.410 --> 00:04:34.680
and then maybe hopefully
you'll do something useful.

00:04:34.680 --> 00:04:37.390
We wanted to
showcase both the AI

00:04:37.390 --> 00:04:41.320
and the robotics-like
capabilities.

00:04:41.320 --> 00:04:43.650
But the idea is to
have something that's

00:04:43.650 --> 00:04:47.520
approachable, not
intimidating, but also provide

00:04:47.520 --> 00:04:49.410
a delightful experience.

00:04:49.410 --> 00:04:52.860
And so we thought about
trying to sort of scale down

00:04:52.860 --> 00:04:57.090
the complexity, both physically
and also in the software,

00:04:57.090 --> 00:04:59.430
to make it into
sort of a project

00:04:59.430 --> 00:05:00.860
that we can open-source.

00:05:00.860 --> 00:05:03.410
There is a Hackster.io page--

00:05:03.410 --> 00:05:07.020
sort of described the entire
process in very fine details,

00:05:07.020 --> 00:05:09.750
of how to solder LEDs
and things like that,

00:05:09.750 --> 00:05:11.970
where you can build your
own little flower that

00:05:11.970 --> 00:05:13.080
sits on your desk.

00:05:13.080 --> 00:05:15.490
We've kind of carried on
sort of the work a little bit

00:05:15.490 --> 00:05:19.170
afterward to make sure
that what we've done

00:05:19.170 --> 00:05:21.870
is available for the community.

00:05:21.870 --> 00:05:25.820
[MUSIC PLAYING]

