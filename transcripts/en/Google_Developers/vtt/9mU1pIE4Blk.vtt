WEBVTT
Kind: captions
Language: en

00:08:08.430 --> 00:08:11.650
Codelabs            
(Stands by)               

00:08:11.651 --> 00:08:13.651
 (Standing by)  

00:10:33.349 --> 00:10:35.349
» (Standing by).  

00:13:21.837 --> 00:13:23.837
Building apps

00:13:26.499 --> 00:13:28.499
 for the Google Assistant.   
(Standing by)

00:13:50.676 --> 00:13:53.524
 amp theater             
amphitheater    

00:21:18.651 --> 00:21:20.651
 Sundar       

00:29:17.589 --> 00:29:19.589
. 
» Well, good morning and welcome

00:29:20.016 --> 00:29:22.555
.    
(Applause). 

00:29:22.556 --> 00:29:26.825
» You know, whenever I give a 
talk at I/O     I/O I always ask

00:29:27.426 --> 00:29:30.947
 to be first thing in the 
morning because I know only the 

00:29:30.948 --> 00:29:36.594
most motivated smartest best 
looking audience comes.  Give 

00:29:36.595 --> 00:29:41.779
yourselves a round of applause 
for     for being here.    

00:29:41.780 --> 00:29:42.617
(Applause). 
» So we are going to talk about 

00:29:42.618 --> 00:29:45.303
building apps for the Google 
Assistant.  If you know nothing 

00:29:45.304 --> 00:29:49.723
about building apps for the 
Google Assistant you're in the 

00:29:49.724 --> 00:29:53.512
right place.  This is meant to 
be an orientation talk, to give 

00:29:53.513 --> 00:29:57.727
you a sense for what scenarios 
work, how to accomplish it.  

00:29:57.728 --> 00:30:01.421
Hopefully at the end of this 
talk we will intrigue you to 

00:30:01.422 --> 00:30:05.052
want to drill in more and find 
out more formation.  I'm Brad 

00:30:05.053 --> 00:30:10.798
Abrams.  I'm the product manager
 on the Google Assistant team.  

00:30:10.799 --> 00:30:14.201
I'm Vera Tzoneva  
                 .   .  

00:30:14.202 --> 00:30:18.938
» VERA TZONEVA:  I'm Vera 
Tzoneva.  

00:30:18.939 --> 00:30:21.039
» ADAM COIMBA:  I'm Adam Coimba.

00:30:21.040 --> 00:30:31.013
» When Sundar launched it it was
 to provide an interface for all

00:30:31.014 --> 00:30:35.804
 Google regardless of what 
device you're in or what task 

00:30:35.805 --> 00:30:40.790
you're trying to accomplish.  
The way we think about the 

00:30:40.791 --> 00:30:45.116
Assistant it's a conversation 
between you and Google designed 

00:30:45.117 --> 00:30:48.880
to help you get things done in 
your world.  And one of the 

00:30:48.881 --> 00:30:53.352
reasons I'm personally so 
excited about the Assistant is 

00:30:53.353 --> 00:30:58.850
it builds s on blg        s on 
Google's long history of 

00:30:58.851 --> 00:31:02.720
creating ecosystems.  History 
started with Google search where

00:31:02.934 --> 00:31:07.031
 we created a strong ecosystem 
between publishers s and reader

00:31:07.780 --> 00:31:13.175
s.  It continues s with      s 
with      s with YouTube where 

00:31:13.176 --> 00:31:16.495
we have a strong ecosystem 
between creators s and their 

00:31:16.496 --> 00:31:19.917
viewers   ers.  Many of you know
 on Play we created an ecosystem

00:31:20.171 --> 00:31:26.192
 between Android app developers
   ers and their use     users. 

00:31:26.947 --> 00:31:31.530
 It's that same system that we 
are creating with Google 

00:31:31.531 --> 00:31:37.227
Assistant.  And that's by action
        actions s on Google.  

00:31:37.228 --> 00:31:41.529
You may be interested on actions
 s on Google because it enables 

00:31:41.675 --> 00:31:46.024
s you to connect with a whole 
set of users in different 

00:31:46.025 --> 00:31:51.606
contexts s and different places 
everywhere the Google Assistant 

00:31:51.607 --> 00:31:54.710
is.  You can it is              
 You can also connect new and 

00:31:54.711 --> 00:32:00.359
existing users.  And it GI us
          it gives you an 

00:32:00.360 --> 00:32:04.586
opportunity to innovate this 
domain of conversational 

00:32:04.587 --> 00:32:07.640
interface which we will talk 
more about in this talk.  So 

00:32:07.641 --> 00:32:09.572
since we launched the platform 
in December          December we

00:32:09.573 --> 00:32:12.848
 couldn't          couldn't be 
more happy with the variety and 

00:32:12.849 --> 00:32:16.263
creativity of apps for the 
Assistant that we have seen, 

00:32:16.264 --> 00:32:22.863
whether you want to order a Piza
        a pizza from dominos

00:32:23.982 --> 00:32:27.825
         domino's, you can do a 
wide variety of activities.  I 

00:32:27.826 --> 00:32:31.523
want to drill in on one 
particular today to give you the

00:32:31.524 --> 00:32:34.824
 anatomy of one     one of these
 Assistant apps.  How do they 

00:32:34.825 --> 00:32:38.099
work, what is really under the 
covers s.  So some of you may 

00:32:38.100 --> 00:32:43.578
have noticed in addition to the 
Android version of the Google 

00:32:43.579 --> 00:32:46.405
I/O     I/O app we now have a 
Google Assistant I/O     I/O app

00:32:46.825 --> 00:32:48.825
 as well.  So you're able

00:32:51.498 --> 00:32:55.497
 to talk to your Assistant and 
say okay Google talk to I/O

00:32:55.930 --> 00:32:58.839
        to I/O 17, and the 
Assistant looks at all the ways 

00:32:58.840 --> 00:33:02.653
it could possibly respond, all 
the context, all the possible 

00:33:02.654 --> 00:33:06.760
different options, and picks the
 very best one for this user at 

00:33:06.761 --> 00:33:11.555
this time.  In this case because
 the user used the app name. 

00:33:11.556 --> 00:33:16.369
»           name explicitly, I/O
     I/O 17, then that's like a 

00:33:16.370 --> 00:33:21.798
URL or    or tapping on a 
shortcut on the desk top.  And 

00:33:21.799 --> 00:33:26.874
it brings us directly in to our 
Google I/O     I/O 17 app.  The 

00:33:26.875 --> 00:33:31.583
user          The user hears s 
the s       s the Assistant give

00:33:32.689 --> 00:33:37.755
 an introduction and     and 
hearse            and here's    

00:33:38.509 --> 00:33:42.910
    here's an ear con.  It's a 
visual audio distinction to help

00:33:43.833 --> 00:33:46.182
 the users understand there's a 
transition happening.  And 

00:33:46.183 --> 00:33:50.141
there's a change in the voice 
and the icons s change.  Now 

00:33:50.142 --> 00:33:52.660
there's a two-way dialogue 
between the Google I/O     I/O 

00:33:52.661 --> 00:33:57.873
app and the user.  And that 
two-way dialogue continues until

00:33:58.437 --> 00:34:03.571
 either party is ready to exit. 
 That's how it looks on Google 

00:34:03.572 --> 00:34:06.617
home.  We were launching for 
phones here at the event so we 

00:34:06.618 --> 00:34:09.978
wanted to make it work well on 
the phone.  There you see it 

00:34:09.979 --> 00:34:14.679
working on the phones.  Suggest 
chips.                   .  

00:34:14.680 --> 00:34:17.531
Suggestion chips and images s 
and what not.  In addition to 

00:34:17.532 --> 00:34:20.804
that we also wanted to let you 
book      book seats s.  Some of

00:34:21.284 --> 00:34:24.733
 you may have noticed the 
sessions yesterday were kind of 

00:34:24.734 --> 00:34:27.455
full.  You can increase
                  You can 

00:34:27.456 --> 00:34:29.300
reserve seats to the sessions.  
We wanted to           wanted to

00:34:29.301 --> 00:34:34.309
 let you do that transaction as 
well to book a seat so when a 

00:34:34.310 --> 00:34:39.765
session comes up you can reserve
 a seat.  If you click that we 

00:34:39.766 --> 00:34:44.903
use our     our seem less
           seamless account 

00:34:44.904 --> 00:34:48.245
linking.  With just two taps you
 can create an a opportunity.   

00:34:48.372 --> 00:34:53.782
Then you see your receipt and 
it's free to reserve a seat.  

00:34:53.783 --> 00:34:57.192
And the transaction is complete.
  So actually what we are going 

00:34:57.193 --> 00:35:00.076
to do is walk through the end to
 end experience of building that

00:35:00.270 --> 00:35:03.585
 app I just showed you in this 
suggestion.  I'm going to start 

00:35:03.586 --> 00:35:07.106
off by talking about the design 
process, how did we come up with

00:35:07.530 --> 00:35:12.390
 that app, what was the design 
that went      went into it.  

00:35:12.391 --> 00:35:16.936
Adam is going to go through the 
hard core development of it, 

00:35:16.937 --> 00:35:20.664
both the natural language 
understanding part as well as 

00:35:20.665 --> 00:35:22.744
the transactionat part and

00:35:22.745 --> 00:35:24.938
as the transactional part and 
show you in code how to build 

00:35:24.939 --> 00:35:29.829
that.  Ver     Vera is going to 
show you how to make that app

00:35:30.466 --> 00:35:34.063
     app discoverable, how to 
use that app.  Let's drill into 

00:35:34.064 --> 00:35:36.599
design.   
First do we need design at all? 

00:35:37.026 --> 00:35:39.999
 I mean these conversational 
apps, these       these 

00:35:40.000 --> 00:35:46.528
Assistant appears         apps 
they're just chat box, right?  

00:35:46.529 --> 00:35:48.882
It's text input, text output, 
there's no            there's no

00:35:48.883 --> 00:35:53.678
 images s, no forms.  Do you 
need design at all?  Well, 

00:35:53.679 --> 00:35:57.471
consider a very simple case.  
Say we wanted to reserve a 

00:35:57.472 --> 00:36:01.287
number of seats, a number of 
seats at a restaurant.  How 

00:36:01.288 --> 00:36:05.504
might we handle this case?  We 
say     say for how many, look 

00:36:05.505 --> 00:36:09.742
at the wide variety of ways that
 a user might respond to this 

00:36:09.743 --> 00:36:11.847
query.  How are we supposed to
             supposed to handle 

00:36:11.848 --> 00:36:17.767
each one of these cases?  Well 
the answer of course is in the 

00:36:17.768 --> 00:36:20.539
design            the design.  
But what is the nature of design

00:36:20.922 --> 00:36:23.253
 for these           for these 
Assistant apps?    

00:36:23.254 --> 00:36:31.701
Well, or    oren Jacob coined 
this phrase interactive screen 

00:36:31.702 --> 00:36:35.453
writing which is what we are 
trying to build with these 

00:36:35.454 --> 00:36:40.277
Assistant apps.  When you build 
an Assistant app it's kind of 

00:36:40.278 --> 00:36:45.412
like writing a screen play for a
 movie or TV show where you're 

00:36:45.413 --> 00:36:51.395
writing dialogue except you get 
to write lines 1, 3, 5 and 7, 

00:36:51.396 --> 00:36:56.251
and somebody you have no control
 over gets to write lines 2, 4, 

00:36:56.252 --> 00:36:59.610
6 and 8.  And you have to use 
that to come together with a 

00:36:59.611 --> 00:37:02.216
beautiful experience.  To do 
that you have to pull together 

00:37:02.217 --> 00:37:05.446
design elements s from two 
different disciplines.  One is 

00:37:05.447 --> 00:37:07.559
the Lin Knar Marashian
                           is 

00:37:07.560 --> 00:37:10.307
the linear narrative design.  
That's where we learn about  

00:37:10.461 --> 00:37:16.080
           learn about character
, storytelling, dialogue from 

00:37:16.081 --> 00:37:19.606
books s, TV shows and movies.  
We have to merge that with what 

00:37:19.607 --> 00:37:22.641
we learned from interactive 
design, what we get there grams 

00:37:22.983 --> 00:37:26.656
                get from Gambs
            from games and     

00:37:26.657 --> 00:37:31.513
and mobile web app design.  So 
we need to bring those things 

00:37:31.514 --> 00:37:34.259
together.  So let's          So 
let's talk about how we do that 

00:37:34.260 --> 00:37:38.759
here.  We looked at all of our 
Assistant apps and found out the

00:37:38.760 --> 00:37:42.102
 element that they had in 
common, the     , the ones that 

00:37:42.103 --> 00:37:46.744
got the most re    retentions, 
they had a strong persona so we 

00:37:46.745 --> 00:37:48.686
wanted to           wanted to 
build that for our app.  So what

00:37:48.687 --> 00:37:53.909
 we did is we actually thought 
about you, what would you want 

00:37:53.910 --> 00:37:57.008
out of the app.  We benefitted 
from having the marketing team 

00:37:57.009 --> 00:37:59.865
that we could work with but you 
don't need a marketing team.  

00:37:59.866 --> 00:38:03.106
And really sat down and 
understood the brand attributes 

00:38:03.318 --> 00:38:07.603
s and the design principals s.  
And from that we distilled the 

00:38:07.604 --> 00:38:10.921
style guide.  And this style 
guide helped us write the 

00:38:10.922 --> 00:38:15.650
dialogue for our Assistant app. 
 There are actually several of 

00:38:15.651 --> 00:38:19.459
us writing dialogue.  By 
actually having a guide like 

00:38:19.460 --> 00:38:23.901
this, I literally had a version 
of this that we kept up while we

00:38:23.902 --> 00:38:27.813
 were writing dialogue.  It kept
 the persona tight and crisp 

00:38:27.814 --> 00:38:31.780
even though different people 
were writing.   

00:38:31.781 --> 00:38:35.852
So just to tell you, we also 
wanted to launch for the phone 

00:38:35.853 --> 00:38:41.225
so we knew we wanted both visual
 and eyes-free experience.  And 

00:38:41.226 --> 00:38:46.016
so we wanted to make sure we had
 the similar content.  So one 

00:38:46.017 --> 00:38:49.713
Assistant           Assistant 
but similar content so the chat 

00:38:49.714 --> 00:38:53.195
bubbles are a subset of the 
spoken text.  And that's because

00:38:53.388 --> 00:38:59.254
 we could use suggestion chips 
which we just fell in love with 

00:38:59.255 --> 00:39:01.833
as an easy way to navigate 
through your Assistant app.  

00:39:01.834 --> 00:39:03.834
User Darwinian have     
                User didn't have

00:39:04.141 --> 00:39:08.018
 to guess at what our app could 
do.  We could put the most 

00:39:08.019 --> 00:39:12.587
prominent things there and users
 could sift through kwekly.     

00:39:13.259 --> 00:39:16.765
              through quickly.  
We also found a visual 

00:39:16.766 --> 00:39:18.794
description really helped bring 
more life.   

00:39:18.795 --> 00:39:23.895
So while that was a whirl wind 
tour of design for 

00:39:23.896 --> 00:39:27.142
conversational apps, there's way
 more to be said about it.  I 

00:39:27.143 --> 00:39:29.937
hope you'll take an opportunity 
to drill into more of the 

00:39:29.938 --> 00:39:34.853
sessions here at I/O     I/O or 
catch       catch them on 

00:39:34.854 --> 00:39:37.631
YouTube after.  Adam is going to
 talk about building these 

00:39:37.632 --> 00:39:39.632
things.  Adam.  
» BRAD ABRAMS: 

00:39:40.091 --> 00:39:41.969
                    .  
» ADAM COIMBA:  Thanks, brat.  I

00:39:41.970 --> 00:39:45.913
 work               , Brad.   . 
 Our mission is to help develop

00:39:46.068 --> 00:39:49.614
ers   ers and partners s like 
you launch on the ace           

00:39:49.974 --> 00:39:51.329
 on the Shutterstock
                     on the 

00:39:51.330 --> 00:39:52.814
Assistant.  I couldn't
            I couldn't be more 

00:39:52.815 --> 00:39:56.941
excited to show some of these 
awesome new features that we are

00:39:57.365 --> 00:40:02.863
 launching   ing.  A couple 
slides back Brad showed some 

00:40:02.864 --> 00:40:06.205
really good screen shots of this
 Assistant app for Google I/O

00:40:06.357 --> 00:40:09.395
     I/O that let you reserve a 
seat and sign in.  Today I'm 

00:40:09.396 --> 00:40:12.094
going to try to build it with 
you right now.    

00:40:12.095 --> 00:40:13.445
So let's          
So let's look at some of the 

00:40:13.446 --> 00:40:16.228
steps that we tubing           
we took to do that and you can 

00:40:16.229 --> 00:40:20.225
try yourself.  First       First
 wee     we create a project on 

00:40:20.226 --> 00:40:26.385
the actions s console.  We then 
connect a natural language tool 

00:40:26.386 --> 00:40:34.243
like API,      API AI.  If you 
have your own tool you can 

00:40:34.244 --> 00:40:40.462
connect that right to our API 
  API.

00:40:40.463 --> 00:40:49.357
 We then connect a web book.  
Again we like noticed         

00:40:49.358 --> 00:40:57.127
noticed              like node 
detective          JK but      

00:40:59.074 --> 00:41:03.648
JS but you can use any.  In the 
actions s console you can try it

00:41:05.214 --> 00:41:07.813
 on on your Google home, (audio 
fading in and out) or      

00:41:08.987 --> 00:41:12.287
                        , 
Android or iPhone.    

00:41:12.288 --> 00:41:18.012
We      
Finally we enable that seamless 

00:41:18.013 --> 00:41:23.680
sign in flow and the ordering 
experience by integrateing with 

00:41:23.681 --> 00:41:26.888
the transactions API.  Once we 
have all this done how does it 

00:41:26.889 --> 00:41:30.132
happen that a user can saying 
snog the Assistant              

00:41:30.644 --> 00:41:32.415
                 can saying 
something to the Assistant and 

00:41:32.416 --> 00:41:34.930
it triggers the     s the app?  
The user says something like 

00:41:34.931 --> 00:41:39.552
that you can              that 
you can to Google I/O     I/O 17

00:41:39.939 --> 00:41:44.629
 to their enabled d device like 
Google.  It's streamed through 

00:41:44.630 --> 00:41:50.474
and transcribed d as text.  The 
Assistant uses the user as 

00:41:50.475 --> 00:41:54.441
context                     the 
user's con tekd           's 

00:41:54.442 --> 00:42:00.144
context to understand that oip 
app              that I/O     

00:42:00.145 --> 00:42:04.653
I/O app is the right service for
 that request.  The API agent 

00:42:04.654 --> 00:42:08.596
understands an intent to defined
 there that you defined.  It 

00:42:08.597 --> 00:42:11.304
then calls the web book to talk 
to the I/O            to the I/O

00:42:11.305 --> 00:42:15.738
 API and get some data.  And 
formulates s a conversational 

00:42:15.739 --> 00:42:21.215
response which is sent all the 
way back through to API AI to 

00:42:21.216 --> 00:42:25.257
the sis sus                   AI
 to the Assistant and     and 

00:42:25.258 --> 00:42:28.970
out to the users.  We mentioned 
that the actions s console is 

00:42:28.971 --> 00:42:32.052
like the starting point.  We are
 excited about this.  We 

00:42:32.053 --> 00:42:35.256
launched it yesterday.  It's a 
really focused way to develop 

00:42:35.257 --> 00:42:39.201
and manage your Assistant app.  
The three main things it does is

00:42:39.820 --> 00:42:44.533
 one allowing to configure
              to configure and 

00:42:44.534 --> 00:42:48.325
set up the            set up the
 metadata.   .  It then allows s

00:42:48.326 --> 00:42:52.071
 you to manage the testing and 
deployment process in a fine 

00:42:52.072 --> 00:42:56.071
grained way.  Once live it 
givers you analytics s so you 

00:42:56.072 --> 00:42:58.709
can track how it's doing in the 
weerl           the real world 

00:42:58.710 --> 00:43:01.297
with the real user s.      s.  
Then we connect

00:43:04.801 --> 00:43:10.620
 to API AI or other tools.   .  
We define intents s and entities

00:43:12.681 --> 00:43:15.355
.  We can understand  
              can understand in 

00:43:15.356 --> 00:43:18.288
a structured d way tw        d 
way what the user wants.  

00:43:18.289 --> 00:43:20.741
Entities are structured d pacts 
s have text that let         

00:43:20.961 --> 00:43:25.563
                 d packets of 
text.  Once we have these deep 

00:43:25.564 --> 00:43:31.093
find we                    these
 defined we can write responses 

00:43:31.094 --> 00:43:35.383
to user requests.  Now that we 
have our basic model set up we 

00:43:35.384 --> 00:43:41.575
can use training in API AI to 
improve the dialogue over time f

00:43:41.576 --> 00:43:46.459
 the user were to say what 
Android sessions there are, API 

00:43:46.460 --> 00:43:50.167
AI is going to list that 
incident and it's going to send 

00:43:50.168 --> 00:43:54.403
a request down to the web hook 
and trigger a function there.  

00:43:54.404 --> 00:43:59.364
Let's look at the web hook.  Now
 you can build a web hook using 

00:43:59.365 --> 00:44:06.553
any web server framework.  We 
like node JS.  You can get that 

00:44:06.554 --> 00:44:10.665
with one command, and basically 
we have a bit of boiler plate 

00:44:10.666 --> 00:44:15.720
and we have a handler for this 
list session         session 

00:44:15.721 --> 00:44:20.638
intent, list topics s incident. 
 We are getting a structured d 

00:44:20.639 --> 00:44:24.059
set of categories and 
formulating a conversational 

00:44:24.060 --> 00:44:29.278
response.  The topics s covered 
are dot, do.       , dot, dot.  

00:44:29.279 --> 00:44:32.777
Frf      .    
Now we went to test this ut   

00:44:32.943 --> 00:44:36.780
      this out.  We have a sim 
plateor               a 

00:44:36.781 --> 00:44:41.448
simulator.  It's super important
 to test on device.  Just by 

00:44:41.449 --> 00:44:44.124
clicking test on actions s 
console you can take your device

00:44:44.320 --> 00:44:47.469
 and say talk to my app and 
you're going to be able to test 

00:44:47.470 --> 00:44:50.889
it out just like that.    
So I'm going to go over to my 

00:44:50.890 --> 00:44:55.721
demo one machine and we are 
going to try this out with the 

00:44:55.722 --> 00:44:57.722
real I/O     I/O app.   

00:45:02.724 --> 00:45:05.469
.  We can see it's already set 
up with the I/O         the I/O 

00:45:05.470 --> 00:45:10.328
demo app.  We have some app 
information set up there.  Which

00:45:10.551 --> 00:45:14.677
 is basically branding 
information.  And it's already 

00:45:14.678 --> 00:45:20.078
connect         connected to an 
API AI project.  And we have 

00:45:20.079 --> 00:45:23.489
some intents s set up.  We have 
a welcome incident which handles

00:45:23.628 --> 00:45:27.216
 s the case where it triggers s 
the app.  We have the choose 

00:45:27.217 --> 00:45:30.172
session intent which let's the 
user get details about a session

00:45:30.374 --> 00:45:34.337
 and a couple others.  I've been
 around I/O     I/O yesterday 

00:45:34.338 --> 00:45:37.604
and     and heard some develop
ers   ers wondering what the 

00:45:37.605 --> 00:45:41.563
free stuff was this year.  Why 
don't we make this app useful 

00:45:41.564 --> 00:45:46.327
saying what is the swag at I/O
     I/O and get a useful 

00:45:46.328 --> 00:45:52.855
response.  We will create an 
intent, call it s      it the 

00:45:52.856 --> 00:45:57.470
swag intent and add a query, 
what is the swag at I/O     I/O.

00:45:57.471 --> 00:46:02.231
  We can find a response with 
the tool.  It's Google home.  

00:46:02.232 --> 00:46:08.678
And $700 in cloud credits s.  
Awesome.  And so we just hit 

00:46:08.679 --> 00:46:12.995
save.  We go to the actions s on
 Google integration.  And we 

00:46:12.996 --> 00:46:18.177
click test.  Just like that we 
can try this out in our web 

00:46:18.178 --> 00:46:22.003
simulator.    
So we say talk to I/O        to 

00:46:22.004 --> 00:46:27.827
I/O demo.  Then we have of to 
log in                   have to

00:46:27.828 --> 00:46:31.844
 log in.  It    It invokes this 
app and we    we can say what is

00:46:32.552 --> 00:46:38.703
 the Zwag          the swag at 
I/O     I/O?  And it's a Google 

00:46:38.704 --> 00:46:42.474
home and 700 in cloud credits s.
  Now that we have some of the 

00:46:42.475 --> 00:46:45.607
wafshg            the basic 
wirings s set up we can talk 

00:46:45.608 --> 00:46:50.649
about making this work really 
nicely on mobile.  So back here

00:46:56.008 --> 00:47:01.387
.  So to make it work really 
nicely on mobile we want to add 

00:47:01.388 --> 00:47:09.937
visual responses with API to AI 
and with our web hook.  API AI 

00:47:09.938 --> 00:47:12.734
provides build in card building 
interfails.  And this is really 

00:47:12.735 --> 00:47:17.651
nice, it let's us easily define 
cards and chips and car sells

00:47:23.712 --> 00:47:28.463
 carosouls and lists.  You can 
create dynamic responses.  So 

00:47:28.464 --> 00:47:31.865
that's a really nice useful 
feature we have added.    

00:47:31.866 --> 00:47:36.393
Let's look at how we do fwrit
          do it from the web 

00:47:36.394 --> 00:47:40.215
hooks.  There's two important 
things.  The first is we are 

00:47:40.216 --> 00:47:43.947
checking whether the user has a 
screen.  We need to be aware of 

00:47:43.948 --> 00:47:46.660
the user's modality and

00:47:49.917 --> 00:47:53.201
 tailor accordingly.  We show a 
rich card populated with data 

00:47:53.202 --> 00:47:57.255
about the session.  Now I can 
head back over to the machine 

00:47:57.256 --> 00:48:01.818
and show adding that right into 
the I/O         the I/O app.   

00:48:13.550 --> 00:48:20.263
Heading back over the the demo 
one machine, great.  Okay.  So 

00:48:20.264 --> 00:48:23.628
we have this session that this 
intent that handles s the moment

00:48:23.778 --> 00:48:26.973
 when the user has asked for 
information specific information

00:48:26.974 --> 00:48:30.796
 about a session.  So this is 
the choose session intent.  And 

00:48:30.797 --> 00:48:38.795
what we can do is add suggestion
 chips right there with the API 

00:48:38.796 --> 00:48:42.822
to AI response builder.  So we 
add some suggestion chips and 

00:48:42.823 --> 00:48:48.412
add that reserve a seat chip.  
We can add some others like next

00:48:48.547 --> 00:48:53.176
 session, other topics s, and 
hit save.  Now to add that rich 

00:48:53.177 --> 00:48:58.481
card that's dynamically 
populated we need to turn over 

00:48:58.482 --> 00:49:01.607
to the web book and         
            to the web hook and 

00:49:01.608 --> 00:49:06.646
update it.  This is the web hook
 code.  We have a controller for

00:49:06.647 --> 00:49:11.151
 our app.  It has a pointer that
      that triggers s a function

00:49:11.346 --> 00:49:16.648
 in the noticed             the 
node JS code.  It's doing a 

00:49:16.649 --> 00:49:20.480
simple thing, calling to I/O  
      to I/O API and creating a 

00:49:20.481 --> 00:49:23.746
simple text response.  So we 
have that woed           that 

00:49:23.747 --> 00:49:26.788
code that we showed before 
prepared here and we can add it 

00:49:26.789 --> 00:49:29.990
in and we are checking whether 
there's streen output,

00:49:33.418 --> 00:49:33.983
 whether the user has a screen. 
 If they do then we add this 

00:49:33.984 --> 00:49:37.117
rich response.  Otherwise we can
 fall back on this text response

00:49:41.091 --> 00:49:45.647
.  And my web hook will 
automatically update and I can 

00:49:45.648 --> 00:49:47.648
go and update

00:49:53.572 --> 00:49:57.721
.  And test.  Now we are head 
can back               heading 

00:49:57.722 --> 00:50:04.113
back to the simulator.    
And let's say I'm interested in 

00:50:04.114 --> 00:50:10.721
the what's new in Android 
session.  So I'll get this rich 

00:50:10.722 --> 00:50:13.964
card with a link and with 
suggest chips.  That was pretty 

00:50:13.965 --> 00:50:20.180
easy, right?  Okay.  So the last
 part then heading back into the

00:50:20.181 --> 00:50:25.411
 deck is to add this transaction
al experience where the user can

00:50:25.412 --> 00:50:28.990
 sign in and they can actually 
make an order.  So we are so 

00:50:28.991 --> 00:50:35.383
excited about the transactions 
API.  It released for developer 

00:50:35.384 --> 00:50:39.979
pre      er preview yesterday.  
It let's you except purchases 

00:50:39.980 --> 00:50:44.377
and orders from your users with 
your app.  We make this great 

00:50:44.378 --> 00:50:49.325
experience on the Assistant with
 first providing a seamless 

00:50:49.326 --> 00:50:52.931
building experience between the 
user and the app.  Once the user

00:50:53.086 --> 00:50:58.398
 has this information and     
and approved d the purchase we 

00:50:58.399 --> 00:51:02.171
give you a way to reengage.  We 
can send          can send 

00:51:02.172 --> 00:51:06.005
updates to the receipt.  You can
 reengage and get the user back 

00:51:06.006 --> 00:51:09.712
into your app that way.  To 
integrate with the transactions 

00:51:09.713 --> 00:51:13.282
API there are five steps.  First
 building out a basket and 

00:51:13.283 --> 00:51:18.239
shopping cart.  This can be as 
simple as a suggestion chip or 

00:51:18.240 --> 00:51:22.390
complicated as a menu ordering 
experience with lots of choices 

00:51:22.391 --> 00:51:27.355
and     and customizations s.  
You might need for information 

00:51:27.356 --> 00:51:31.312
about the user like their 
delivery address so we give you 

00:51:31.313 --> 00:51:34.461
an API to request that.  Once 
your order is all set up you 

00:51:34.462 --> 00:51:38.409
need to propose to it the user 
and get their authorization so 

00:51:38.410 --> 00:51:42.544
we provide a propose order API 
that let's the user preview what

00:51:42.935 --> 00:51:45.942
 you're asking them to buy and 
approve it.  Once they have 

00:51:45.943 --> 00:51:49.216
approved it you need to confirm 
the order.  Let them know it's 

00:51:49.217 --> 00:51:53.850
active and provide a receipt.  
Lastly many transactional 

00:51:53.851 --> 00:51:57.427
experiences require the user's 
identity.  We provide the 

00:51:57.428 --> 00:52:02.152
ability to integrate with a web 
server and provide a seamless 

00:52:02.153 --> 00:52:06.010
log in flow for the user.   
Let's take a deeper look into 

00:52:06.011 --> 00:52:08.298
that.  So many of you hopefully 
are familiar

00:52:13.482 --> 00:52:20.234
 with it, it's pretty standard. 
 You can figure the usual off 

00:52:20.235 --> 00:52:23.262
two stuff there.  And that let's
 us know how to talk to your 

00:52:23.263 --> 00:52:27.771
server.  And then in dialogue 
you call an API to trigger the 

00:52:27.772 --> 00:52:32.050
sign in flow.  So you can do 
that from API

00:52:37.871 --> 00:52:41.045
.AI      API.AI or to the web 
hook.  We are building a 

00:52:41.046 --> 00:52:43.046
structure d   d ordered

00:52:49.726 --> 00:52:51.499
  We are building a structured 
ordered object and            

00:52:51.500 --> 00:52:55.387
object.  Once the order has been
 pro     proposed we get a new 

00:52:55.388 --> 00:52:57.301
request saying the user excepted
 the              excepted the 

00:52:57.302 --> 00:53:00.386
order,                        
      the user accepted the or

00:53:00.473 --> 00:53:04.276
        the order, now you need 
to confirm it.  We say the 

00:53:04.277 --> 00:53:08.574
status is con tirmd           
confirmed, we provide a receipt 

00:53:08.575 --> 00:53:12.798
and sent          and send it to
 the user just like any other 

00:53:12.799 --> 00:53:15.260
visual response.  One more time 
going back to the machine and we

00:53:15.261 --> 00:53:17.295
 are going to add this into our 
app.   

00:53:23.708 --> 00:53:31.152
 he had           we    we had 
this suggestion chip.  We can 

00:53:31.153 --> 00:53:34.407
create the reserve a seat intent
 and it will be         will be 

00:53:34.408 --> 00:53:38.432
triggered when if user        
      when the user says reserve

00:53:38.759 --> 00:53:42.367
 a seat.  We want to immediately
 call the sign in API.  So 

00:53:42.368 --> 00:53:45.525
there's            So there's a 
little bit of code we    we need

00:53:46.104 --> 00:53:50.421
 to put in to API.AI to trigger 
that and we can trigger that and

00:53:50.577 --> 00:53:55.288
 add it here and hit save.  With
 that we are calling the sign in

00:53:55.289 --> 00:54:02.312
 POI POI            in API.AI to
 log in the user.  We    We     

00:54:02.498 --> 00:54:06.672
.  Going back into the console 
we can see what we did.  We have

00:54:06.851 --> 00:54:13.399
 this account linking session.  
We can edit it.  There's a 

00:54:13.400 --> 00:54:18.675
couple extra steps that we take 
in our server to make the 

00:54:18.676 --> 00:54:23.397
integration seem less and it's 
easy to do and we highly 

00:54:23.398 --> 00:54:28.151
recommend everyone does it.  We 
have an intent to handle when 

00:54:28.152 --> 00:54:31.629
the user says reserve a seat.  
What happens when if         

00:54:31.630 --> 00:54:35.854
when the user signs in?  We have
 this intent that passes that 

00:54:35.855 --> 00:54:40.106
event through to our webhook.  
We are then going to call the 

00:54:40.107 --> 00:54:44.259
proposed order API.  Once the 
order is proposed we get another

00:54:45.479 --> 00:54:48.767
 request to API.AI saying the 
user          the user accepts 

00:54:49.120 --> 00:54:55.150
s, you have to confirm the order
.  That is here.  That's passed 

00:54:55.151 --> 00:55:00.577
through to the webhook and then 
we are done.  The last thing is 

00:55:00.578 --> 00:55:04.768
to add this code into our 
webhook.  We see we have the 

00:55:04.769 --> 00:55:07.877
controller for our app and we 
have the handle sign in and hand

00:55:08.721 --> 00:55:13.346
      handle order handlers s.  
We see they're empty right now 

00:55:13.347 --> 00:55:15.347
so we can add in that code.   

00:55:22.375 --> 00:55:26.988
look familiar, we are building 
an order object, proposing it to

00:55:26.989 --> 00:55:30.290
 the user with this call right 
here.  For handle decision this 

00:55:30.291 --> 00:55:32.585
is where the user has already 
accepted the              

00:55:32.586 --> 00:55:36.093
accepted the order and we want 
to provide a receipt.  So we can

00:55:36.094 --> 00:55:41.186
 add that code.  And it should 
automatically update.  So that's

00:55:41.187 --> 00:55:46.165
 it.  That's all it took.  Now 
we can test this out on my demo 

00:55:46.166 --> 00:55:50.601
two device.    
Just have to update the project

00:56:05.031 --> 00:56:08.650
.  Cool.  So we are going to go 
over to the demo two device and 

00:56:08.651 --> 00:56:16.271
we can say I/O     I/O demo.  
What is new in Android? 

00:56:21.299 --> 00:56:24.242
 We can tap the reserve a seat 
chip. 

00:56:34.419 --> 00:56:39.372
er preview.  (Laughter).   
We can do one thing and I think 

00:56:39.373 --> 00:56:42.781
it will make it work.  Thank you
.  Thank you           Thank 

00:56:42.782 --> 00:56:44.330
you.   
(Applause). 

00:56:44.331 --> 00:56:48.094
» We appreciate it.  So I think 
it will work if I can just do 

00:56:48.095 --> 00:56:53.887
this.  Might have been user 
error.  (Laughter).   

00:56:53.888 --> 00:56:56.250
Okay.  So let's          So 
let's try one more time.  I/O

00:56:56.474 --> 00:56:58.474
     I/O demo. 

00:57:01.451 --> 00:57:03.451
 What's new in Android? 

00:57:11.836 --> 00:57:13.836
 Hmm.  There we

00:57:15.415 --> 00:57:19.702
 go.  Cool.    
And we see with just two taps 

00:57:19.703 --> 00:57:23.551
I'm creating an account on this 
server.  And we proposed the

00:57:23.774 --> 00:57:26.580
              proposed the order
 to the user, what's        

00:57:26.581 --> 00:57:29.888
what's new in Android, zero 
dollars, I approve.  And we get 

00:57:29.889 --> 00:57:33.586
our receipt.  Cool.  So that's 
all it took.  We did that in 

00:57:33.587 --> 00:57:35.815
like ten minutes prch (applause)
                             ten

00:57:35.816 --> 00:57:37.940
 minutes.   
(Applause).   

00:57:37.941 --> 00:57:42.019
A transition              
A transition              

00:57:42.020 --> 00:57:46.225
A transactional experience.  Let
 me do a quick recap on what we 

00:57:46.226 --> 00:57:48.630
did.   
So we created a rich model 

00:57:48.631 --> 00:57:50.631
experience                 
        a rich mobile experience

00:57:51.250 --> 00:57:54.174
 for finding out about I/O     
I/O sessions.  We added a chip 

00:57:54.175 --> 00:57:59.435
to let the user reserve a chip 
and we used the transactions API

00:57:59.929 --> 00:58:03.514
 to pro        to propose if 
reservation and get the user

00:58:04.752 --> 00:58:07.970
          the user's acceptance 
and get a seat.  I believe all 

00:58:07.971 --> 00:58:12.309
of you     you can build apps 
right now and I'm excited to

00:58:12.519 --> 00:58:14.764
                I'm excited to 
see what you do.  With that I'm 

00:58:14.765 --> 00:58:18.824
going to hand it over to Vera.  
» VERA TZONEVA:  Thank you.  

00:58:18.825 --> 00:58:23.125
Thanks, Adam.  I'm Vera and I'm 
here to tell you how your app 

00:58:23.126 --> 00:58:25.458
can be discovered once you build
.  I have the opportunity to 

00:58:25.459 --> 00:58:28.650
talk to partners s like you 
every day and this is one of the

00:58:28.859 --> 00:58:31.942
        of the primary things 
that we hear.  Let's actually 

00:58:31.943 --> 00:58:35.826
start by admitting that we live 
in a pretty amazing time in 

00:58:35.827 --> 00:58:39.470
technology.  People are asking 
computers to do things for them.

00:58:39.471 --> 00:58:42.468
  They are asking them to help 
them plan their day, to get from

00:58:43.280 --> 00:58:46.207
 one place to another and to 
even clean their apartment in a 

00:58:46.208 --> 00:58:50.025
mess.  And they're asking for 
the little things like my little

00:58:50.361 --> 00:58:53.496
 brother despite being 22 
recently          recently asked

00:58:55.067 --> 00:58:57.985
 the Google Assistant how to 
make scrambled eggs for our pam

00:58:58.162 --> 00:59:01.478
             for our family.  We
 know that if you're building a 

00:59:01.479 --> 00:59:05.967
productivity app or a recipe app
 or smart home app your users 

00:59:05.968 --> 00:59:09.307
are out there looking for you.  
And if there's one thing that we

00:59:09.483 --> 00:59:12.482
 learned about discovery over 
the years is that the best way 

00:59:12.483 --> 00:59:17.317
to find users who want your 
service is for them to find you.

00:59:19.981 --> 00:59:24.040
actual little a very different 
world.  No longer does the user 

00:59:24.041 --> 00:59:27.680
have to know that your app 
exists or have to download it or

00:59:28.038 --> 00:59:31.883
 even have to set it up.  All 
they have to do is say okay 

00:59:31.884 --> 00:59:35.205
Google or long press on home on 
their mobile skwis              

00:59:35.206 --> 00:59:37.730
mobile device and they have 
access to your service and 

00:59:37.731 --> 00:59:40.676
that's on over 100 million plus 
devices s.    

00:59:40.677 --> 00:59:44.133
And I'll be honest, we are still
 getting started.  There's a ton

00:59:44.386 --> 00:59:49.257
 of work to do.  But that's a 
pretty exciting thing.  Our goal

00:59:49.759 --> 00:59:52.915
 at Google is to help connect 
you to your users.  Today we are

00:59:53.283 --> 00:59:56.496
 starting with three primary 
ways of enables         enabling

00:59:58.205 --> 01:00:00.965
 discovery of the Google app 
through your Assistant.  The 

01:00:00.966 --> 01:00:03.923
first is through dial leg so 
directly in conversation with 

01:00:03.924 --> 01:00:06.377
the user.  The he could he could
                       The 

01:00:06.378 --> 01:00:10.129
second is through the siscy  cy 
director.                       

01:00:10.130 --> 01:00:15.241
the Assistant directory, and the
 third is through links you can 

01:00:15.242 --> 01:00:18.681
share.  First we will start with
 dialogue.  The most reliable 

01:00:18.682 --> 01:00:22.685
way that a user can get to your 
Assistant app is by explicitly 

01:00:22.686 --> 01:00:28.312
asking for it, meaning we have a
 set of pre-established phrases,

01:00:28.537 --> 01:00:34.740
 things like talk to, speak to, 
    to, that one said with the 

01:00:34.741 --> 01:00:38.494
name of your Assistant app we 
introduce you and you own the 

01:00:38.495 --> 01:00:43.473
dialogue end to end.  A user can
 also deep link directly to an 

01:00:43.474 --> 01:00:49.338
answer so to extend a demo that 
Adam just did a user can say hey

01:00:49.871 --> 01:00:54.019
 Google let's talk to I/O       
 to I/O 17           to I/O 17 

01:00:54.020 --> 01:00:58.000
and we introduce the app.  It 
can also say something like hey 

01:00:58.001 --> 01:01:04.659
Google ask I/O     I/O 17 about
       about what was announced 

01:01:04.660 --> 01:01:08.931
and we can take you to the 
answer.  Some examples are let's

01:01:08.932 --> 01:01:12.151
 speak to dominos and we 
introduce           introduce 

01:01:12.152 --> 01:01:14.969
dominos and     and dominos 
comes

01:01:18.411 --> 01:01:24.344
                                                  Domino's
 and we introduce Domino's and 

01:01:18.411 --> 01:01:23.062
Domino's comes in.  Or hey 
Google and            Google 

01:01:23.063 --> 01:01:25.063
akinateor

01:01:28.454 --> 01:01:32.496
         Akinator        
Akinator or hey ask Dr. Doggie 

01:01:32.497 --> 01:01:37.858
if dogs can eat chocolate.  It's
 very similar to typing a URL 

01:01:37.859 --> 01:01:42.306
and getting to a website or 
tapping on an app icon and going

01:01:42.571 --> 01:01:44.812
 inside the            inside 
the app.   

01:01:44.813 --> 01:01:49.613
The next way to introduce your 
Assistant app in dialogue is 

01:01:49.614 --> 01:01:52.592
through implesmt          
implicit triggering.  I'm 

01:01:52.593 --> 01:01:55.683
excited about this because it 
starts showing the promise of 

01:01:55.684 --> 01:01:58.175
the platform.  We know that 
users are asking the Google 

01:01:58.176 --> 01:02:02.827
Assistant a whole set of things.
  They're asking hey tell me a 

01:02:02.828 --> 01:02:07.341
joke or I want to play a game or
 I want to work out.  And we at 

01:02:07.342 --> 01:02:09.172
Google through                
Google look at    at all the 

01:02:09.173 --> 01:02:13.935
apps that can fulfill on that 
and suggest them to the users.  

01:02:13.936 --> 01:02:17.230
This already works today.  You 
can say hey Google I want to 

01:02:17.231 --> 01:02:22.711
work out and we introduce fit 
star which has a great guided 

01:02:22.712 --> 01:02:27.328
work out.  All you have to do is
 add an invocation grammar to 

01:02:27.329 --> 01:02:30.804
your app in API.AI or whatever 
natural language solution that 

01:02:30.805 --> 01:02:34.104
you use.  I want to show you 
what that looks like because 

01:02:34.105 --> 01:02:39.682
it's super easy.   
If we go to the demo one device.

01:02:39.683 --> 01:02:48.741
  Maybe?  Ms.      ?    
Can we go to the demo one 

01:02:48.742 --> 01:02:51.718
device, the computer, please?   

01:02:59.972 --> 01:03:03.740
If not maybe we will pause for a
 second.  Here we are.  Awesome.

01:03:03.741 --> 01:03:07.786
  We are here in the swag intent
 that Adam created and you can 

01:03:07.787 --> 01:03:10.045
see his what's        what's the
 swag at I/O     I/O.  Let's say

01:03:10.191 --> 01:03:14.447
 you want to add something more 
colloquial like what is the 

01:03:14.448 --> 01:03:19.781
freebie at I/O     I/O?  Type it
 in.  You can scroll down, the 

01:03:19.782 --> 01:03:24.218
answer is still the same.  You 
guys got a home and 700 in cloud

01:03:24.724 --> 01:03:30.574
 credits s, it's awesome.  Make 
sure the conversation you save 

01:03:30.575 --> 01:03:33.790
and that's really it.  You're 
able to test it by going to 

01:03:33.791 --> 01:03:38.226
integrations s, actions s on 
Google.  Make sure you select 

01:03:38.227 --> 01:03:45.382
the swag intent here.  And then 
once you hit test, that's it.   

01:03:47.467 --> 01:03:49.987
So let's go to the demo two 
device and try it out.  So in 

01:03:49.988 --> 01:03:51.988
this

01:03:54.064 --> 01:03:59.368
 case Adam      Adam what is 
your... what is your password?  

01:03:59.369 --> 01:04:02.901
(Laughter).   
What is it

01:04:06.108 --> 01:04:14.083
?  You're logged in?  Do you 
want to unlock it?  We can do 

01:04:14.084 --> 01:04:17.933
the test later but basically 
what happens is you say what is 

01:04:17.934 --> 01:04:21.726
the freebie at I/O     I/O and 
we introduce the Google I/O     

01:04:21.727 --> 01:04:29.148
I/O 17 app.  Let's say you never
 heard of it before.  And then 

01:04:29.149 --> 01:04:33.389
the Google I/O     I/O 17 app is
 able to say your freebie at I/O

01:04:33.499 --> 01:04:39.403
     I/O is the Google home and 
1700 dlardz                 and 

01:04:39.404 --> 01:04:43.017
$700 in app credits s.  One of 
the primary questions that we 

01:04:43.018 --> 01:04:50.098
get about implicit triggering is
 how are you     you goes going 

01:04:50.099 --> 01:04:54.753
to ring.  We are looking at a 
ton of different signals s.  One

01:04:55.154 --> 01:04:57.315
 of the primary things we are 
going to look at is the quality 

01:04:57.316 --> 01:05:01.603
of your app as well as things 
like      like the user         

01:05:01.776 --> 01:05:04.928
 the user's context or 
preferences s.  And we will 

01:05:04.929 --> 01:05:06.808
experiment significantly over 
time.   

01:05:06.809 --> 01:05:11.990
The next way for you to grow 
discovery of your Assistant app 

01:05:11.991 --> 01:05:14.944
is through the Assistant 
director.  We launched this with

01:05:15.810 --> 01:05:17.810
 the goal of letting a user try

01:05:21.198 --> 01:05:25.398
  We launched this with the goal
 of letting a user try out new 

01:05:21.198 --> 01:05:27.756
apps, browse apps.  The way that
 a user gets to the Assistant 

01:05:27.757 --> 01:05:32.685
director on Android is by long 
pressing on home and tapping the

01:05:32.686 --> 01:05:38.085
 upper right and corner icon.  
On iOS they get there by going 

01:05:38.086 --> 01:05:42.321
to the Assistant app and same 
thing, , tapping on the upper 

01:05:42.322 --> 01:05:46.100
right corner icon and there's 
also a web link for the 

01:05:46.101 --> 01:05:50.660
directory.  They can scroll 
different categories, they can 

01:05:50.661 --> 01:05:54.672
try the app, they can rate the 
app.  And then they can also set

01:05:54.909 --> 01:05:58.403
 their own personal preferences 
s with the app.  We have this 

01:05:58.404 --> 01:06:02.319
concept of voice shortcuts.  
This is where a user can go 

01:06:02.320 --> 01:06:07.563
directly to your Assistant app. 
  .  Mine says hey Google it's 

01:06:07.564 --> 01:06:13.957
chill out time and then Netflix 
starts playing on my chrome cast

01:06:14.497 --> 01:06:16.497
.   .  I have one another
         another that

01:06:17.506 --> 01:06:21.043
              another that says 
it's party time and can't touch 

01:06:21.044 --> 01:06:25.395
this starts playing on my home 
device on Spotify.  The way that

01:06:26.217 --> 01:06:30.082
 you can improve visibility of 
your app within the directory is

01:06:30.973 --> 01:06:34.639
 by again keep the quality of 
your app really, really high.  

01:06:34.640 --> 01:06:37.764
This is what is going to help 
with ranking and reviews s.  And

01:06:38.213 --> 01:06:42.390
 then two, submit which images 
s, well written descriptions s, 

01:06:42.391 --> 01:06:46.958
this is going to encourage the 
user to try out the app and re

01:06:47.225 --> 01:06:49.225
engage with it again in the 
future.   

01:06:59.890 --> 01:07:03.579
and grow awareness of your 
Assistant app.  We engorge you 

01:07:03.912 --> 01:07:06.834
            encourage to you do 
this by sharing through social 

01:07:06.835 --> 01:07:08.835
media, encourage your user

01:07:12.742 --> 01:07:18.909
s to take this.  Promote through
 your own site or apps.  

01:07:18.910 --> 01:07:21.627
Encourage users to use your 
service across different 

01:07:21.628 --> 01:07:24.760
platforms s.  And then three, 
encourage press to drive traffic

01:07:25.198 --> 01:07:29.397
 to your Assistant app.  Allow 
other sites to link to it.  

01:07:29.398 --> 01:07:31.398
Enable awareness that way. 

01:07:37.523 --> 01:07:39.962
 Let's go to device three and I 
can show you what it looks like 

01:07:39.963 --> 01:07:41.963
as well

01:07:49.945 --> 01:07:54.918
.  You tap on the upper 
right-hand corner, we scroll 

01:07:54.919 --> 01:07:57.930
down to education refugees 
reasons, talk                 

01:07:58.696 --> 01:08:01.478
                    to education
 reference.  You can hit share. 

01:08:02.166 --> 01:08:08.521
  .  Let's actually tweet it.  
This is live.  Which is awesome.

01:08:13.942 --> 01:08:15.942
 You can say we are live at I/O
     I/O. 

01:08:19.731 --> 01:08:25.058
 And actually tweet it.  Once a 
user taps on that link they go 

01:08:25.059 --> 01:08:29.166
directly to your landing page 
within the directory.  Awe 

01:08:29.167 --> 01:08:32.119
soment.               Awesome.  
Go back to the slides, please.  

01:08:35.000 --> 01:08:38.721
can grow discovery of your 
Assistant app is one, in 

01:08:38.722 --> 01:08:42.230
dialogue.  So directly in the 
conversation with the user both 

01:08:42.231 --> 01:08:46.222
implicitly and explicitly.  Two 
through the Assistant directory.

01:08:46.223 --> 01:08:49.745
  And three through links that 
you share.  So we know if you're

01:08:49.746 --> 01:08:54.194
 ilg            you're building 
a recipe app that helps you book

01:08:54.602 --> 01:08:58.855
 breakfast for your family or a 
fitness app that helps someone 

01:08:58.856 --> 01:09:03.767
keep their routine         
routine your use     users are 

01:09:03.768 --> 01:09:07.138
looking for you and our goal is 
to help you connect with the 

01:09:07.139 --> 01:09:12.409
users.  With that      that I'll
 hand it to Brad to wrap up.  

01:09:12.410 --> 01:09:16.266
(Applause). 
» BRAD ABRAMS:  We showed you a 

01:09:16.267 --> 01:09:20.036
ton of stuff today, doing 
transactions and getting your 

01:09:20.037 --> 01:09:25.048
app discovered.  You're now 
ready to participate in our app 

01:09:25.049 --> 01:09:30.098
development challenges.  Tons of
 great       great prizes s.  

01:09:30.099 --> 01:09:33.196
But let's keep this conversation
 going.  We are going to be at 

01:09:33.197 --> 01:09:36.324
the Assistant both which is kind
 of in the main area on the 

01:09:36.325 --> 01:09:40.924
walkway there.  Come by and talk
 to us with more questions, ton 

01:09:40.925 --> 01:09:47.447
of other talks.  A special 
thanks to sajit who if he

01:09:47.771 --> 01:09:51.108
           who helped us build 
the appear.  So thank you.   

01:09:51.514 --> 01:09:54.685
.    
(Applause).                     

01:09:58.890 --> 01:10:01.111
(Session concluded).  

01:10:06.674 --> 01:10:07.563
.    
.    

01:10:07.564 --> 01:10:08.503
.    
.    

01:10:08.504 --> 01:10:10.504
.   

01:10:13.578 --> 01:10:14.486
.    
.    

01:10:14.487 --> 01:10:16.487
.   

01:10:34.120 --> 01:10:41.662
 May 18, 2017.     . 
9:30 a.m.-                :17. 

01:10:41.663 --> 01:10:43.663
9:30 a.m.-10:30 a.m.  

01:30:05.173 --> 01:30:07.027
(Applause). 
» Great to see you.  Thanks for 

01:30:07.028 --> 01:30:10.639
being here.  I like the people 
in the second section getting an

01:30:10.640 --> 01:30:15.455
 update on VR and AR, and a good
 suntan at the same time.  

01:30:15.456 --> 01:30:20.307
That's cool.  Good job.  So 
hopefully you caught the news 

01:30:20.308 --> 01:30:26.881
yesterday.   .  A great momentup
 with apps on daydream, more 

01:30:26.882 --> 01:30:31.489
daydream ready phones on the way
.  Stand alone headsets s.  

01:30:31.490 --> 01:30:38.616
Super precise indoor location 
service, , and an update to sped

01:30:38.894 --> 01:30:43.031
dations                to 
expeditions s.  The people on 

01:30:43.032 --> 01:30:45.763
our team are leading many of the
 projects you're going to be 

01:30:45.764 --> 01:30:48.256
hearing about today.  Before I 
do that I wanted to             

01:30:48.257 --> 01:30:51.534
I wanted to put what we are 
doing in VR and AR in Google at 

01:30:51.535 --> 01:30:56.833
context, kind of put some had of
             some of the puzzle 

01:30:56.834 --> 01:31:00.051
pieces together so you can 
understand what we are doing.  

01:31:00.052 --> 01:31:03.198
And as developers   ers what you
 can expect from us.  If you 

01:31:03.199 --> 01:31:07.002
follow what we have been up to 
over the past several years 

01:31:07.003 --> 01:31:09.233
you're        you're    
          years you've seen a 

01:31:09.234 --> 01:31:14.045
bunch of different pieces, VR 
apps, we are working in VR, 

01:31:14.046 --> 01:31:17.515
doing work in AR.  What is going
 on here?  How do you think 

01:31:17.516 --> 01:31:21.373
about this?    
So first of all terminology.  

01:31:21.374 --> 01:31:25.727
Over the past year especially 
I've seen so many debates about 

01:31:25.728 --> 01:31:32.007
VR versus AR, which is going to 
win?  What vocab to use.  To us 

01:31:32.008 --> 01:31:34.008
these terms

01:31:36.032 --> 01:31:38.465
 don't represent two sprays
        sprays and             

01:31:40.753 --> 01:31:45.626
   two separate and distinct 
things.  The spuk trem     

01:31:45.808 --> 01:31:48.729
          The spectrum of 
immersive computing

01:31:52.037 --> 01:31:59.265
.  Virtual Reality, and     and 
real reality is at the other end

01:31:59.421 --> 01:32:04.150
 of the spectrum.  There's not 
specific labels s but this whole

01:32:04.352 --> 01:32:08.192
 spectrum and we are doing work 
across it.  But why invest in 

01:32:08.193 --> 01:32:16.518
this?   ?  Why is it important? 
 VR, AR, immersive computing, 

01:32:16.519 --> 01:32:21.530
they enable us to experience 
computing much like the real 

01:32:21.531 --> 01:32:24.751
world.  We think it's a big idea
 and really important because 

01:32:24.752 --> 01:32:27.004
every time computers s have 
started to            started to

01:32:27.005 --> 01:32:29.441
 work                 started to
 work more like we do, good 

01:32:29.442 --> 01:32:32.528
things have happened.  If you 
think about moving from punch 

01:32:32.529 --> 01:32:37.284
cards to the command line to the
 gooey              to the guy

01:32:38.316 --> 01:32:41.129
            to the gooey to 
touch screens

01:32:44.905 --> 01:32:46.978
                      GUI to 
touch screens and we think VR 

01:32:46.979 --> 01:32:49.768
and AR will push this even 
further.  It anticipates

01:32:49.921 --> 01:32:54.159
                It opens access 
to more information, information

01:32:55.263 --> 01:32:58.748
 that's ang core      core     
            that's anchored to 

01:32:58.749 --> 01:33:02.142
the real world.  In a time it's 
going to change how we play and 

01:33:02.143 --> 01:33:05.363
live and learn.  We want to help
 push this forward in two ways

01:33:05.514 --> 01:33:09.378
      ways.  First platforms s. 
 Just as Chrome made the web 

01:33:09.379 --> 01:33:15.261
faster, more secure             
more secure, powerful, and as 

01:33:15.262 --> 01:33:21.020
Android made mobile computing 
more available.  Our geel

01:33:21.187 --> 01:33:25.773
          Our goal is to raise 
all by doing a lot of the heavy 

01:33:25.774 --> 01:33:31.725
lifting in the core system 
software and SD    SDK's.    

01:33:32.176 --> 01:33:35.239
The second part is building 
blocks.  I mean the enabling 

01:33:35.240 --> 01:33:40.356
technologies like tango, web VR,
 code samples s and more

01:33:44.938 --> 01:33:45.551
                                    Tango,
 web VR, code samples and more. 

01:33:45.552 --> 01:33:50.522
  .  We also think of the apps 
we built as building blocks.  

01:33:50.523 --> 01:33:54.101
They're examples of VR apps to 
look at and learn from.  This 

01:33:54.102 --> 01:33:57.726
morning is about these two 
things, platforms s and building

01:33:57.812 --> 01:34:01.494
 blocks.  With that I'd like to 
turn it over to Johnny Lee, the 

01:34:01.495 --> 01:34:05.971
founder of the tanko project
                      of    of 

01:34:05.972 --> 01:34:09.174
the Tango project to talk about 
one of our most important 

01:34:09.175 --> 01:34:11.912
building blocks.  Thanks.  
(Applause). 

01:34:11.913 --> 01:34:14.380
» JOHNNY LEE:  Hi, everyone, 
great to be here.  My name is 

01:34:14.381 --> 01:34:19.473
Johnny Lee.  I'm the engineering
 director of Tango.   .  In 2013

01:34:19.764 --> 01:34:22.440
 a small group of us got 
together with the belief that 

01:34:22.441 --> 01:34:27.000
one day our devices s were able 
to sense 3D motion and space 

01:34:27.001 --> 01:34:30.534
just like we can.  So with the 
right combination of hardware 

01:34:30.535 --> 01:34:34.712
and software, Tango can give our
 devices s this 3D sense of 

01:34:34.713 --> 01:34:39.192
motion sensing capabilitys s as 
well as the ability to recognize

01:34:39.777 --> 01:34:44.380
 places        places its been 
before.  This establishes a 

01:34:44.381 --> 01:34:46.451
shared sense of space and 
physical movement between people

01:34:46.681 --> 01:34:51.619
 and our sdwoiss s.  It allowed 
us to begin creating experiences

01:34:51.620 --> 01:34:58.018
 that give us an early glimpse 
of how we can interact with

01:35:01.108 --> 01:35:06.702
 a visual object in a physical 
way               

01:35:07.009 --> 01:35:17.875
                                                                                                                                  devices.
  It allowed us to begin 

01:35:07.009 --> 01:35:11.075
creating experiences that give 
us an early glimpse of how we 

01:35:07.009 --> 01:35:10.742
can interact with a visual 
object in a physical way.  A 

01:35:07.009 --> 01:35:11.034
sense of 3D tracking is a 
fundamental part of the user 

01:35:11.035 --> 01:35:15.190
experience.  Tango is involved 
in technology that is everything

01:35:15.560 --> 01:35:19.407
 we are doing in daydream.  
Yesterday           Yesterday 

01:35:19.408 --> 01:35:24.114
you heard Clay about about 
support for stand alone headsets

01:35:34.665 --> 01:35:38.865
  Yesterday you heard Clay about
 about support for stand alone 

01:35:34.665 --> 01:35:40.894
headsets.  We can enable a 
headset with the user es head 

01:35:40.895 --> 01:35:44.318
without                         
 the user's head without all the

01:35:44.319 --> 01:35:46.574
 cables s and we call this world
       world

01:35:51.183 --> 01:35:53.273
     WorldSense      
    WorldSense.  There's two 

01:35:53.274 --> 01:35:58.698
wide angle cameras s that detect
 the movement of    of features 

01:35:58.699 --> 01:36:01.321
in the room, it might be      
    might be the corners s of 

01:36:01.322 --> 01:36:04.995
the desk or items on the table. 
 And it tracks s the movement of

01:36:05.568 --> 01:36:09.187
 these features over time to get
 the sense of its position in 

01:36:09.188 --> 01:36:11.722
the room.  We take this 
information with the motion 

01:36:11.723 --> 01:36:14.552
sensors s on the phone 
             s on the phone to 

01:36:14.553 --> 01:36:21.363
provide robust low latency 
tracking and do this         do 

01:36:21.364 --> 01:36:24.646
this in less      less than five
 millisecond    

01:36:24.799 --> 01:36:27.504
        -milliseconds s.  At the
 same time the system is 

01:36:27.505 --> 01:36:31.405
building a 3D mobile of   
        model of the scene so it

01:36:32.049 --> 01:36:37.492
 can correct any drift that may 
occur over time.  You may have 

01:36:37.493 --> 01:36:44.929
heard this referred to as slam 
or simultaneous localization and

01:36:45.135 --> 01:36:47.135
 mapping

01:36:49.196 --> 01:36:50.800
 or simultaneous localization 
and mapping.  Now in smartphone 

01:36:50.801 --> 01:36:55.346
AR, AR applications s require 
sensing even more of the 

01:36:55.347 --> 01:36:58.376
environment.  To be able to 
place visual objects in front of

01:36:58.510 --> 01:37:03.773
 us to seem as though they 
physically exist.  Today Tango 

01:37:03.774 --> 01:37:11.540
phones use richer sensors s.  We
 have a dedicated depth sensor 

01:37:11.541 --> 01:37:14.640
that allows games to understand 
the difference between the floor

01:37:14.778 --> 01:37:18.980
, the table and the walls s.  
And even let's characters s hide

01:37:20.121 --> 01:37:23.910
 behind things like couches.  We
 have a wide angle cram       

01:37:24.185 --> 01:37:28.545
     angle camera that gives us 
the best features of the room 

01:37:28.546 --> 01:37:33.548
and this improves s or ability 
to quickly relocalious

01:37:36.693 --> 01:37:41.113
relocalious letting you see SR
        see AR con dent     

01:37:41.316 --> 01:37:44.001
        AR content that was left
 there before.  With all of this

01:37:44.788 --> 01:37:46.076
 technology put together I 
wanted to             I wanted 

01:37:46.077 --> 01:37:49.378
to share with you this project 
we have been dong      doing 

01:37:49.379 --> 01:37:53.632
with the Singapore arts science 
museum.    

01:37:53.633 --> 01:37:57.191
We have audio for the video?  (
Music playing). 

01:37:57.192 --> 01:38:00.737
» Most people living in cities 
have never been to a rain forest

01:38:01.854 --> 01:38:05.782
.  We decided to bring a rain 
forest to a city and make it 

01:38:05.783 --> 01:38:09.453
accessible for everyone.  For 
that we needed a new Google 

01:38:09.454 --> 01:38:14.238
technology.  We were able to map
 10,000 square feet of museum 

01:38:14.239 --> 01:38:18.562
space into a rain important
                  a rain forest.

01:38:18.563 --> 01:38:22.167
  This is the experience of what
 it's like to walk through a ran

01:38:22.562 --> 01:38:25.897
 forest              a rain 
forest

01:38:29.629 --> 01:38:34.242
.  We are able to launch this 
experience on the first Tango 

01:38:34.243 --> 01:38:39.419
enabled d device and bring AR at
 scale to everyone making into 

01:38:39.420 --> 01:38:42.183
the wild the largest AR 
experience in the world.   

01:38:47.007 --> 01:38:50.910
» JOHNNY LEE:  Sorry about 
missing -- thanks.  (Applause). 

01:38:56.201 --> 01:38:59.328
 thousands of visitors s to come
 and experience a digital rain 

01:38:59.329 --> 01:39:04.842
forest.  When they pledge a 
donation to the world wile     

01:39:04.978 --> 01:39:08.841
              to the world 
wildlife fund they are able to 

01:39:08.842 --> 01:39:13.258
plant a tree and it expands s 
over time as visitors s see the 

01:39:13.259 --> 01:39:17.296
xhibt.              the exhibit.
  We are still in the early days

01:39:17.470 --> 01:39:20.826
 s of seeing this evolve.  This 
is just a glimpse to what is 

01:39:20.827 --> 01:39:27.532
possible today.  The first phone
 featuring Tango enabled d 

01:39:27.533 --> 01:39:35.556
capabilities was Lenovo.  The 
second phone is the Zen phone 

01:39:35.557 --> 01:39:42.212
that customers s can experience 
in    in Verizon stores later 

01:39:42.213 --> 01:39:46.208
this summer.  I really believe 
this is the beginning.   

01:39:46.209 --> 01:39:49.320
We have seen a variety of great 
applications s again to appear 

01:39:49.321 --> 01:39:52.808
that take advantage of these new
 capabilities.  For example we 

01:39:52.809 --> 01:39:56.715
have tools that can help you 
measure the size of a table in 

01:39:56.716 --> 01:40:01.327
case you're interested in buying
 one for your dining room or you

01:40:01.328 --> 01:40:04.470
 can do things like walk around 
your house with the tracking and

01:40:04.795 --> 01:40:10.264
 depth sensor to generate a heat
 map of the Wi-Fi           the 

01:40:10.265 --> 01:40:13.825
Wi-Fi signal strength of your 
apartment or building and this 

01:40:13.826 --> 01:40:20.051
helps you find dead spots.  You 
can even              You can 

01:40:20.052 --> 01:40:23.505
even estimate          estimate 
the square footage of your 

01:40:23.506 --> 01:40:25.935
apartment which might come in 
handy if you're thinking about 

01:40:25.936 --> 01:40:29.734
moving into a new place or 
renegotiating your rent.  

01:40:29.735 --> 01:40:34.536
There's games that allow you to 
carry a toy box right in your 

01:40:34.537 --> 01:40:37.752
bokt           your pocket.  
Yesterday you heard about the 

01:40:37.753 --> 01:40:42.235
visual positions service from 
Clay which opens s up many new 

01:40:42.236 --> 01:40:45.526
experiences around indoor 
navigation and location.  We use

01:40:46.086 --> 01:40:49.747
 the wide angle camera and the 
Tango phone to give us a broad 

01:40:49.748 --> 01:40:54.151
view of the environment and this
 allows s us to generate large 

01:40:54.152 --> 01:40:56.922
scale descriptions s of the 
space.  This enables s 

01:40:56.923 --> 01:41:00.536
centimeter scale accurate 
positions within the building.  

01:41:00.537 --> 01:41:03.515
It's at lot like GPS but rather 
than talking to            

01:41:03.516 --> 01:41:06.356
talking to satellites s it's 
using features that are are just

01:41:06.971 --> 01:41:09.778
 a few       a few feet away to 
calculate its position.  This is

01:41:09.779 --> 01:41:14.258
 what we use in the art science 
museum that allows s us to 

01:41:14.259 --> 01:41:16.791
anchor trees in the environment.
  In stores like Lowe's it can 

01:41:16.792 --> 01:41:21.024
get you walking directions 
directly to an item sitting on 

01:41:21.025 --> 01:41:24.996
the shelf.  So even at home we 
started shopping with our phones

01:41:25.223 --> 01:41:28.846
 more and more.  And having 
confidence in what you're       

01:41:28.847 --> 01:41:31.832
 you're with      with about   
                you're about to 

01:41:31.833 --> 01:41:37.503
buy is more important than of.  
Another area where shopping for 

01:41:37.504 --> 01:41:41.794
close           for clothes is 
challenging.  Retailers   ers 

01:41:41.795 --> 01:41:45.942
know that buying clothes are 
sometimes difficult and 

01:41:45.943 --> 01:41:49.034
customers often return those 
items but this is expensive for 

01:41:49.035 --> 01:41:52.351
the retailer to process those 
returns as well as time 

01:41:52.352 --> 01:41:56.902
consuming for you as a consumer 
to try on those items.  It would

01:41:56.903 --> 01:42:00.090
 be nice to get a sense of 
whether a product will fit 

01:42:00.091 --> 01:42:03.883
before you buy it.  Let me give 
you a demo of the dressing room 

01:42:03.884 --> 01:42:05.884
app by gap

01:42:09.641 --> 01:42:11.641
   Gap. 

01:42:13.828 --> 01:42:19.375
 So what we have here I have the
 Zen phone AR.  And the Gap app 

01:42:19.376 --> 01:42:24.336
has a small jar here with some 
clothing options.  And we are 

01:42:24.337 --> 01:42:28.623
going on a trip in just a few 
months and I'm trying to wear 

01:42:28.624 --> 01:42:30.870
lighter clothes for the 
summertime and my brother is 

01:42:30.871 --> 01:42:34.447
going on a trip as well so we 
would like to have matching 

01:42:34.448 --> 01:42:41.036
white cotton shirts.  I'm going 
to drag over this man     

01:42:41.037 --> 01:42:45.507
mannequin with this clothing 
item.  It asks what is the body 

01:42:45.508 --> 01:42:50.517
size?  Like me my brother is a 
little bit at the extra large 

01:42:50.518 --> 01:42:55.264
end of the scale.  When we put 
try it on -- whoops, let me try 

01:42:55.265 --> 01:42:57.265
it again.   

01:43:02.102 --> 01:43:04.102
Let me try that again

01:43:17.135 --> 01:43:22.628
.  Oh.  We'll switch back to the
 video.   

01:43:37.830 --> 01:43:40.941
 It was working fine just before
 the demo.  I don't know what 

01:43:40.942 --> 01:43:43.825
happened.    
We are still in the early days s

01:43:43.826 --> 01:43:46.872
 of what we feel like would be 
possible with these technologies

01:43:47.389 --> 01:43:49.456
 and it let's us see things in 
new ways that we couldn't

01:43:49.696 --> 01:43:53.562
          couldn't see before.  
So it helps us learn more about 

01:43:53.563 --> 01:43:57.626
the environment, it helps us 
find our way through spaces and 

01:43:57.627 --> 01:44:01.022
share knowledge with other 
people        people.  But one 

01:44:01.023 --> 01:44:04.853
of the things that it helps us 
do is learn better especially 

01:44:04.854 --> 01:44:06.922
when we are able to make 
connections s with those who are

01:44:07.329 --> 01:44:10.210
 seeing the same thing at the 
same time from their own unique 

01:44:10.211 --> 01:44:13.442
perspective.  And this way the 
power of AR isn't          AR 

01:44:13.443 --> 01:44:15.641
isn't just adding digital 
objects to            objects to

01:44:15.642 --> 01:44:19.039
 the camera view in front of us 
but it could be adding shared 

01:44:19.040 --> 01:44:21.792
meaning to the interaction 
between people.  So to tell you 

01:44:21.793 --> 01:44:25.606
more about how shared AR 
experiences can help in the 

01:44:25.607 --> 01:44:31.027
classroom led me hand it off to 
Jen Holland.  Thank you.    

01:44:31.028 --> 01:44:38.023
(Applause). , everyone.  Thanks,
 Johnny.  I'm Jennifer Holland 

01:44:38.024 --> 01:44:42.330
and I'm the education program 
manager on Daydream.  Johnny 

01:44:42.331 --> 01:44:46.284
shared some updates about the 
applications s of Tango as well 

01:44:46.285 --> 01:44:49.977
as areas where we think AR can 
have a big       a big immediate

01:44:50.443 --> 01:44:55.066
 impact.  Education is just one 
of those areas.  And my team 

01:44:55.067 --> 01:44:58.924
took advantage of Tango sensor
        sensor stack and built a

01:44:58.925 --> 01:45:02.299
 tool for schools so that 
teachers could create immersive 

01:45:02.300 --> 01:45:05.134
experiences with their students.
  And that's the same technology

01:45:05.563 --> 01:45:08.906
 that's actually available to 
all of you.    

01:45:08.907 --> 01:45:13.965
Two years ago we launched 
expeditions s VR.  And we built 

01:45:13.966 --> 01:45:16.931
more than 600 tours       tours 
and we heard from thousands of 

01:45:16.932 --> 01:45:21.139
kids from around the world who 
have sent us personal letters 

01:45:21.140 --> 01:45:26.046
sharing house expeditions s has 
inspired d them.  We have 

01:45:26.047 --> 01:45:28.076
learned a great deal from 
talking to            talking to

01:45:28.077 --> 01:45:31.279
 the over 2 million teachers and
 students who have actually used

01:45:31.551 --> 01:45:35.401
 it.  And one of the most 
important things that my team 

01:45:35.402 --> 01:45:38.801
learned was that you really need
 to embrace the key functions of

01:45:39.465 --> 01:45:43.660
 a classroom.  That is, students
 engaging, interacting and 

01:45:43.661 --> 01:45:48.201
learning with each other as well
 as their teacher.   

01:45:48.202 --> 01:45:50.514
Tango's camera and sensor are 
what

01:45:53.832 --> 01:45:55.628
 makes this interaction possible
 in real      realtime.  And I 

01:45:55.629 --> 01:46:01.258
promise you those kids are not 
taking selfies in their class.  

01:46:01.259 --> 01:46:04.505
Teachers are able to accurately 
map the physical classroom and 

01:46:04.506 --> 01:46:07.826
place       place 3D objects s 
like one of Mike Jazayeri

01:46:08.765 --> 01:46:11.817
                      one of 
Michael            of Michael 

01:46:11.818 --> 01:46:15.567
anglo's statutes s so the 
students can look at the statute

01:46:15.742 --> 01:46:17.742
 together in realtime

01:46:19.586 --> 01:46:27.252
                                                                              anglo's
 statutes so the students can 

01:46:19.586 --> 01:46:21.371
look at the statute together in 
realtime.  You can see up close 

01:46:21.372 --> 01:46:27.368
or take a step back and be able 
to point out new discovers on a 

01:46:27.369 --> 01:46:30.848
statute together.  And that's 
powerful because it's not each 

01:46:30.849 --> 01:46:35.091
individual student looking at 
their own object like a while 

01:46:35.092 --> 01:46:36.915
category five hurricane
           hurricane.  It's as 

01:46:36.916 --> 01:46:40.159
if you actually brought the 
hurricane into the classroom.   

01:46:43.449 --> 01:46:47.698
from a strand of DN    DNA to 
one of Saturn           of 

01:46:47.699 --> 01:46:50.790
Saturn's rings together and 
those objects s don't disappear 

01:46:50.791 --> 01:46:54.486
when the students look away.  
And a teacher is able to point 

01:46:54.487 --> 01:46:59.229
out specific things on the 
object to suit the lesson.  Just

01:46:59.513 --> 01:47:03.375
 think       think how cool it 
would be for a teacher to 

01:47:03.376 --> 01:47:07.542
transform their entire classroom
 into a world class art museum

01:47:08.042 --> 01:47:13.435
        museum and display the 
works of Van Gogh, Monet, or 

01:47:13.436 --> 01:47:18.394
even the Mona Lisa right on the 
same classroom walls.  As an 

01:47:18.395 --> 01:47:21.372
education product team we are 
committed to leveraging the same

01:47:21.559 --> 01:47:26.166
 Tango technology available to 
you and tweaking it slightly to 

01:47:26.167 --> 01:47:30.354
give teachers a tool to create 
immersive experiences each and 

01:47:30.355 --> 01:47:33.324
every day in their classroom.   

01:47:33.325 --> 01:47:38.324
And just like we did with 
editions vcht                   

01:47:38.550 --> 01:47:42.673
 with expeditions s VR we are 
going to be bringing it to 

01:47:42.674 --> 01:47:46.234
schools through the pioneer 
program.  If you're a developer 

01:47:46.235 --> 01:47:50.273
really excited about building AR
 lessons s with us, let us know 

01:47:50.274 --> 01:47:54.704
by expressing interest on our 
partner page.   

01:47:54.705 --> 01:47:59.176
That's expeditions s AR.  That 
is just one thing that you can 

01:47:59.177 --> 01:48:01.177
do with                 you can 
do with Tango and we are really 

01:48:01.178 --> 01:48:03.271
excited to            excited to
 see what all of you come up 

01:48:03.272 --> 01:48:06.972
with.  Now let's switch gears 
and talk about another part of 

01:48:06.973 --> 01:48:10.429
the immersive computing spectrum
.  Let me welcome Mike to tell 

01:48:10.430 --> 01:48:14.551
you the latest about Daydream.  
Our platform for high 

01:48:15.819 --> 01:48:19.541
performance mobile VR.    
(Applause) snis     . 

01:48:19.542 --> 01:48:22.554
» MIKE JAZAYERI:  Hi, good 
morning, everyone.  I'm Mike 

01:48:22.555 --> 01:48:25.907
Jazayeri and I'm the director of
 product management for Daydream

01:48:26.394 --> 01:48:30.216
.  Daydream serves as the 
foundation of our investments s 

01:48:30.217 --> 01:48:37.394
in immersive computing.  We 
began working on Daydream in 

01:48:37.395 --> 01:48:38.667
2015.  Today I'm excited to
                I'm excited to 

01:48:38.668 --> 01:48:41.857
tell you about what is next for 
Daydream but first a quick 

01:48:41.858 --> 01:48:45.735
refresher on how we got here.  
The first version of Daydream 

01:48:45.736 --> 01:48:48.887
launched in November and was 
built on three core elements s. 

01:48:49.570 --> 01:48:53.077
 The Daydream ready spec for 
phones

01:48:56.145 --> 01:48:59.851
, a high performance   
        performance.  We 

01:48:59.852 --> 01:49:02.487
promised to             promised
 to create a large ecosystem of 

01:49:02.488 --> 01:49:07.335
Daydream devices s.  In six 
months there are eight Daydream-

01:49:08.368 --> 01:49:15.688
ready devices s.  Samsung's 
flagship SA and SA plus will 

01:49:15.689 --> 01:49:20.401
soon be Daydream ready.  They're
 fantastic phones and you're 

01:49:20.402 --> 01:49:25.226
going to love the Daydream 
experience on them.  LG's next 

01:49:25.227 --> 01:49:29.431
flagship phone       phone will 
also be Daydream ready.  In 

01:49:29.432 --> 01:49:33.599
addition to these new partners 
s, existing partners will have 

01:49:33.600 --> 01:49:37.263
more Daydream-ready phones.  So 
when you put all that you 

01:49:37.264 --> 01:49:41.750
together there will be         
will be tens of millions s of 

01:49:41.751 --> 01:49:45.456
Daydream-ready phones in 
consumers hands.  I want to you 

01:49:45.457 --> 01:49:48.550
thank you on partners s who have
 been working hard on that.   

01:49:48.551 --> 01:49:51.169
(Applause).   
So that's the start.  What is 

01:49:51.170 --> 01:49:54.590
coming next?  This year at 
Google I/O     I/O we are a 

01:49:54.591 --> 01:49:59.131
nouns         announcing two new
 events s.  The first is a brand

01:49:59.740 --> 01:50:04.312
 new category of    of stand 
alone headsets s, second is an 

01:50:04.313 --> 01:50:09.649
update to the software flat form
.  We are going to call it 

01:50:09.650 --> 01:50:11.650
Daydream

01:50:13.508 --> 01:50:16.444
 Euphrates.  The stand alone 
headset tanks       takes 

01:50:16.445 --> 01:50:19.300
everything we love about 
smartphone VR and make      

01:50:19.301 --> 01:50:23.700
makes it even better.  The 
hardware is in one integrated

01:50:24.127 --> 01:50:27.453
            integrated device.  
And you can get into VR in just 

01:50:27.454 --> 01:50:31.662
seconds.  Just put the headset 
on, you're ready to go.  No 

01:50:31.663 --> 01:50:34.683
extra wires, PC or set up 
required.  For these stand alone

01:50:35.852 --> 01:50:38.177
 headsets s we wanted to    
       wanted to create a large 

01:50:38.178 --> 01:50:42.753
ecosystem of devices s and 
content.  Doing so requires 

01:50:42.754 --> 01:50:47.430
great hardware.  We partnered 
with Qualcomm.  This is 

01:50:47.431 --> 01:50:50.185
featuring the incident happen
                     the snap 

01:50:50.186 --> 01:50:57.035
dragen        dragon chip set 
and     and high e   eperforming

01:50:57.558 --> 01:51:03.487
                  high 
performing sensors s.  A 

01:51:03.488 --> 01:51:06.045
reference             A 
reference headset isn't       

01:51:06.046 --> 01:51:09.201
isn't all we are doing.  We are 
partnering with two          

01:51:09.202 --> 01:51:14.737
with two device makers s.    s. 
 Hvs       s.  HTC needs no 

01:51:14.738 --> 01:51:17.950
introduction in the world of    
of VR.  They're going to bring 

01:51:17.951 --> 01:51:24.027
their expertise in headset 
design and building high 

01:51:25.191 --> 01:51:30.263
performance to Daydream.  Our 
other partner is    is Lenovo. 

01:51:31.289 --> 01:51:35.168
  .  They're already a pioneer 
in AR and they are going to 

01:51:35.169 --> 01:51:39.991
bring that same pioneering 
experience to Daydream.  

01:51:39.992 --> 01:51:44.394
Powerful hardware also requires 
powerful software.  That's where

01:51:45.400 --> 01:51:52.974
 the next version of Daydream, 
Daydream Euphrates comes in.  

01:51:52.975 --> 01:51:55.680
It's making VR content front and
 center, the content that you 

01:51:55.681 --> 01:52:00.375
build.  And it's making it easy 
for users to share that VR 

01:52:00.376 --> 01:52:04.404
content with friends and family 
whether they're         they're 

01:52:04.405 --> 01:52:08.794
sitting next to them or around 
the world.  Daydream Euphrates 

01:52:08.795 --> 01:52:14.862
takes advantage of even deeper 
support for Android VR.  If you 

01:52:14.863 --> 01:52:19.137
think about it, Android phones 
have been designed for device or

01:52:19.313 --> 01:52:26.014
 Android have been designed for 
sgiss           for devices s 

01:52:26.015 --> 01:52:32.036
primarily on touch screens.  We 
had to build a new VR manager 

01:52:32.037 --> 01:52:36.569
where all the system VI will be
         I will be accessible on

01:52:36.570 --> 01:52:41.918
 VR.  Also we are updating the 
home experience.  First we are 

01:52:41.919 --> 01:52:45.227
going to make it easy to 
discover the best content in VR.

01:52:45.228 --> 01:52:51.427
  You'll see a list of 
continuously updated content 

01:52:51.428 --> 01:52:55.954
mixing thousands of videos, 
experience, games and apps.  

01:52:55.955 --> 01:52:58.682
Once you're in the experience we
 don't want to break that sense 

01:52:58.683 --> 01:53:03.415
of immersion so Daydream 
Euphrates has a dashboard and it

01:53:03.727 --> 01:53:07.124
 appears s right on top of any 
app.  It's super fast to load 

01:53:07.125 --> 01:53:09.955
and let's you stay in VR.  You 
don't have to leave the 

01:53:09.956 --> 01:53:13.536
experience to check a 
notification, change settings or

01:53:13.695 --> 01:53:17.516
 even to switch apps.  Now that 
we meade          we made it 

01:53:17.517 --> 01:53:20.852
he's dwroi stay in         
           easy to stay in VR we

01:53:21.045 --> 01:53:24.269
 want to make         to let you
 share that experience with 

01:53:24.270 --> 01:53:29.088
others.  Cast support is coming 
to Daydream.    

01:53:29.089 --> 01:53:30.704
(Applause). 
» Thank you.  It's one of our 

01:53:30.705 --> 01:53:34.244
top-requested features.  With 
this feature you'll be able to 

01:53:34.245 --> 01:53:39.294
pull up the dashboard and select
 a casting destination.   .  As 

01:53:39.295 --> 01:53:45.826
you go from app to app your 
castzation            cast 

01:53:45.827 --> 01:53:50.190
station stays.  It goes from 
individual experience to shared 

01:53:50.191 --> 01:53:54.443
experience.  Casting is good for
 people physically near you but 

01:53:54.444 --> 01:53:59.094
what about everybody else?  We 
are adding the ability to cam 

01:53:59.095 --> 01:54:03.554
tour screen                    
to capture screen shot or short 

01:54:03.555 --> 01:54:08.876
video and share it.  Thank you. 
 Frf (applause)                 

01:54:09.085 --> 01:54:10.645
.    
(Applause). 

01:54:10.646 --> 01:54:13.337
» Thank you.  In addition to 
this there's many other features

01:54:13.862 --> 01:54:18.783
 including many for developers. 
 You can learn more about that 

01:54:18.784 --> 01:54:22.481
in our other situations or on 
our developer website.  We have 

01:54:22.482 --> 01:54:26.331
tens of millions s of Daydream 
ready phones by the end of the 

01:54:26.332 --> 01:54:32.583
year, a new class of stand alone
 headsets s and a upgrade to 

01:54:32.584 --> 01:54:37.347
Daydream Euphrates for both 
smartphone VR and stand alone 

01:54:37.520 --> 01:54:42.578
headsets s.  I speak about 
making it easier to share your 

01:54:42.579 --> 01:54:46.680
experience with others.  We 
think it's critical for users to

01:54:46.681 --> 01:54:51.979
 keep them engaged.  Let me 
welcome Erin from the YouTube VR

01:54:52.224 --> 01:54:58.169
 team who is going to tell you 
about nings the YouTube VR team 

01:54:58.170 --> 01:55:00.149
is doing.  Thank you.    
(Applause). 

01:55:00.150 --> 01:55:06.981
» ERIN TEAGUE:  Hi, Erin.  I'm 
Erin.  I'm a product manager 

01:55:06.982 --> 01:55:12.430
from the VR team at YouTube.  We
 made an early bet on 360 degree

01:55:12.431 --> 01:55:17.287
 and 3D video and thought a lot 
about how to build the YouTube 

01:55:17.288 --> 01:55:20.452
VR app from the ground up on 
Daydream.  It does everything 

01:55:20.453 --> 01:55:26.385
you love about upt but in   
         YouTube but in a way 

01:55:26.386 --> 01:55:30.234
that feels natural.  Since we 
launched, people's responses 

01:55:30.235 --> 01:55:35.224
have blown us away.  Every time 
I pop in there's something new 

01:55:35.225 --> 01:55:37.924
to splors               new to 
explore from sports highlights 

01:55:38.288 --> 01:55:42.240
s, deep      deep sea dives to 
learning about dinosaurs s.  No 

01:55:42.241 --> 01:55:45.273
matter what you're passionate 
about YouTube in VR can take you

01:55:45.699 --> 01:55:48.947
 there thanks to the huge 
library of hundreds s of 

01:55:48.948 --> 01:55:51.580
thousands of immersive videos.  

01:55:51.581 --> 01:55:54.732
So there are all these amazing 
places you can go, see and learn

01:55:54.733 --> 01:55:58.434
 about.  You probably want to 
share these experiences with 

01:55:58.435 --> 01:56:03.922
other people.  It's just better 
that way.  From co-watching 

01:56:03.923 --> 01:56:08.482
partys to creators s engageing 
with their fans, YouTube already

01:56:08.902 --> 01:56:13.081
 has an incredible community 
build around its content and we 

01:56:13.082 --> 01:56:16.706
want to bring that to VR.  So 
here is a sneak peak into 

01:56:16.707 --> 01:56:20.348
something that we are working 
on.  Later this year we will be 

01:56:20.349 --> 01:56:24.580
rolling out an update that let's
 you co-watch YouTube videos 

01:56:24.581 --> 01:56:29.132
with other people.  Talk about 
them live.  And share the 

01:56:29.133 --> 01:56:32.987
experience all in the same 
virtual room.  Everyone will be 

01:56:32.988 --> 01:56:36.196
able to            be able to 
customize the way they look in 

01:56:36.197 --> 01:56:42.178
VR.  And with just a click you 
can sync in to what others are 

01:56:42.179 --> 01:56:47.570
watching too.  Anyone can 
correct with other Gore      

01:56:47.571 --> 01:56:53.197
gorillas s fans to watch a 
virtual video in the front row. 

01:56:53.441 --> 01:56:58.722
 It goes way beyond games, 
entertainment and music.  So 

01:56:58.723 --> 01:57:05.030
many creators s use VR to 
inspire em path         empathy 

01:57:05.031 --> 01:57:06.566
and compassion.  There's no
            There's no other 

01:57:06.567 --> 01:57:09.310
technology that let's you walk 
in someone else's shoes, 

01:57:09.311 --> 01:57:13.204
experience things you can't in 
real life, and gain a new 

01:57:13.205 --> 01:57:15.482
perspective on important Tom pib
                      on 

01:57:15.483 --> 01:57:20.443
important topics s.  With this 
update to YouTube VR and the 

01:57:20.444 --> 01:57:25.760
addition of casting there will 
soon be more ways for you to 

01:57:25.761 --> 01:57:30.116
enjoy VR together.  Now let me 
pass this off to Andrey who is 

01:57:30.117 --> 01:57:34.715
going to talk to you about tools
 for VR and developers.  Thank 

01:57:34.716 --> 01:57:36.663
you.   
(Applause). 

01:57:36.664 --> 01:57:42.226
» ANDREY DORONICHEV:  Good 
morning, everyone.  I'm Andrey. 

01:57:42.976 --> 01:57:46.909
 I lead apps and developers   er
 tools at Daydream.  So much 

01:57:46.910 --> 01:57:50.131
exciting progress on AR and VR 
platform side but of course flat

01:57:50.328 --> 01:57:54.555
 forms                      of 
course plat farms            

01:57:54.556 --> 01:57:58.125
platforms are defined by the 
best experiences built by 

01:57:58.126 --> 01:58:02.372
developers   ers like you.  To 
build great stuff and great 

01:58:02.373 --> 01:58:11.511
tools.  I want to talk about new
 tools that it rate faster, 

01:58:11.512 --> 01:58:15.382
better graphics and immersive 
experience to the whole web.  

01:58:15.383 --> 01:58:18.576
First let's talk about iteration
 time.  It's early days s of 

01:58:18.577 --> 01:58:22.773
immersive computing so it's all 
about experimenting.  You need 

01:58:22.774 --> 01:58:27.717
to be able to try many new ideas
 as quickly as possible.  To 

01:58:27.718 --> 01:58:31.839
evaluate VR content you need to 
experience it first hand in the 

01:58:31.840 --> 01:58:38.539
target hardware.  From many 
model            many mobile 

01:58:38.540 --> 01:58:44.139
developers   ers it may take 
minutes to when you make the 

01:58:44.140 --> 01:58:50.085
change on the editor to when you
 see the device.  I can hit 

01:58:50.086 --> 01:58:54.569
build, go toast myself a bagel 
and come back before it's done 

01:58:54.570 --> 01:58:58.642
deploying.  We knew we had to 
take the iteration time down 

01:58:58.643 --> 01:59:02.589
from minutes to seconds s.  And 
that is why we built instant 

01:59:02.590 --> 01:59:06.064
preview.  This is a tool that 
let's you make changes in your 

01:59:06.065 --> 01:59:11.810
desk top and instantly see them 
in your VR device.  Thank you.  

01:59:15.395 --> 01:59:19.163
Instant preview is deeply 
integrated in both the editor 

01:59:19.164 --> 01:59:24.148
and the mobile device.   .  We 
send the sensor data

01:59:27.538 --> 01:59:30.336
 to the PC which emulates s and 
renders the     s the scene and 

01:59:30.337 --> 01:59:34.143
the result is sent back to the 
device.  And the cool          

01:59:34.144 --> 01:59:39.023
the cool thing is we can do it 
with low latency so you can use 

01:59:39.024 --> 01:59:42.349
it in VR while teaking 
interactions in real time     

01:59:42.530 --> 01:59:46.089
      realtime.  The result is a
 continuous uninterrupted 

01:59:46.090 --> 01:59:51.315
development flow.  Instant 
preview is launching today      

01:59:51.559 --> 01:59:54.529
 today.  You can download it 
right now.  Check it out.   

01:59:54.530 --> 01:59:58.723
(Applause).   
Now, let's talk about graphics 

01:59:59.837 --> 02:00:04.105
s.  VR makes you feel like 
you're somewhere else so the 

02:00:04.106 --> 02:00:07.922
visual fidelity of the virtual 
environment matters a lot.  And 

02:00:07.923 --> 02:00:10.413
of course with six degrees
         degrees of freedom 

02:00:10.414 --> 02:00:14.015
devices s you can't get away 
with wrapping

02:00:17.250 --> 02:00:19.260
 a 360 panorama          
panorama as a background.  

02:00:19.261 --> 02:00:23.639
However what you can render in 
realtime depends on the amount 

02:00:23.640 --> 02:00:26.472
of power you have available.  
There's a huge gap to what

02:00:29.704 --> 02:00:34.554
 you can do on a four watt model
 device, 400 watt PC.  But what 

02:00:34.555 --> 02:00:39.442
if we could bridge this gap?  
What if we could achieve desk 

02:00:39.443 --> 02:00:44.856
top level on graphics s on a 
mobile head      headset like 

02:00:44.857 --> 02:00:48.366
our stand alone.  We can't 
change laws of physics s.  I 

02:00:48.367 --> 02:00:50.367
want to introduce

02:00:52.210 --> 02:00:54.210
 a new tool called sur

02:00:56.331 --> 02:01:00.361
   Seurat      Seurat after the 
great French painter.  You can 

02:01:00.362 --> 02:01:04.855
took a tool and run it in mobile
 VR in realtime.  How does this 

02:01:04.856 --> 02:01:10.870
work?  As a developer you define
 the volume within which you 

02:01:10.871 --> 02:01:15.359
want the user to move around and
 use a scene.  You also define 

02:01:15.360 --> 02:01:20.027
target parameters s like number 
of polygons s and then you let 

02:01:20.028 --> 02:01:26.050
the tool do its magic.  It takes
 dozens s of images s and then 

02:01:26.051 --> 02:01:30.764
it automatically generates s an 
entirely new 3D scene that looks

02:01:31.476 --> 02:01:35.537
 identical to the original but 
is dramatically simplified.    

02:01:35.538 --> 02:01:38.450
(Applause).   
Yeah, it's pretty cool.  And you

02:01:38.675 --> 02:01:41.788
 still can have dynamic 
interactive elements s in it.  

02:01:41.789 --> 02:01:46.982
So yeah it's pretty cool.  But 
wait a minute.  If we can do 

02:01:46.983 --> 02:01:51.164
something like this why would 
you stop at desk top dprafks 

02:01:51.350 --> 02:01:55.499
            topographics s?  
What                     top 

02:01:57.004 --> 02:02:01.755
graphics.  What if you take 
something from a movie.  Let me 

02:02:01.756 --> 02:02:07.894
show you a project we worked on 
with ILMX

02:02:13.188 --> 02:02:16.814
  X lab.  One of the goals is to
 take you inside of star warts

02:02:16.977 --> 02:02:19.550
            Star Wars.  Let's 
see what they have been able to 

02:02:19.551 --> 02:02:22.331
do with Seurat.  Let's role the 
video

02:02:26.407 --> 02:02:30.167
.  
» ILM X lab's mission is to 

02:02:30.168 --> 02:02:36.837
create immersive premium story 
based experiences and our goal 

02:02:36.838 --> 02:02:38.915
is for people to step inside the
            inside the worlds of

02:02:39.193 --> 02:02:42.468
 our stories and in this case 
into the world of Star Wars.  

02:02:42.469 --> 02:02:46.468
» When there are events s, 
locations, characters s, 

02:02:46.469 --> 02:02:51.447
something that has to be 
fabricated, they turn to visual 

02:02:51.448 --> 02:02:55.479
facts for that imagery.  
» The depth of the world that we

02:02:55.480 --> 02:03:00.597
 would like to you step into is 
as thoughtful and creative

02:03:00.762 --> 02:03:05.792
          creative and exacting 
as anything we might put into 

02:03:05.793 --> 02:03:08.220
our films.  
» This new technology is 

02:03:08.221 --> 02:03:11.261
enabling us to do something we 
have been trying to do for pay 

02:03:11.262 --> 02:03:14.577
while.                        to
 do for a while.  

02:03:14.578 --> 02:03:20.005
» When X lab was approached by 
Google they said they can take 

02:03:20.006 --> 02:03:25.934
our ILM renders s and make them 
run in realtime.  Turns out it's

02:03:25.935 --> 02:03:29.191
 true.  
» You can have very dense 

02:03:29.192 --> 02:03:31.861
complex scenes with 
sophisticated shading that 

02:03:31.862 --> 02:03:35.579
traditionally can't run in 
realtime in an enjoin           

02:03:35.580 --> 02:03:41.049
an engine.  
» When I see people looking at 

02:03:41.050 --> 02:03:44.448
the floor I really think we are 
on to something.  

02:03:44.449 --> 02:03:46.449
» That potentially opens the 
door

02:03:49.903 --> 02:03:54.406
 to cinematic realizeism in VR. 

02:03:54.407 --> 02:03:56.407
(Applause)

02:03:59.352 --> 02:04:03.975
. 
» MIKE JAZAYERI:  So ILM X lab 

02:04:03.976 --> 02:04:09.946
brought this world       world 
on to our mobile head settle.   

02:04:10.134 --> 02:04:14.370
        settle             
headset.  This scene is around 

02:04:14.371 --> 02:04:16.141
50 million triangles           
triangles.  Normally each frame 

02:04:16.142 --> 02:04:22.148
takes an hour to render off line
 on a high performance machine. 

02:04:22.357 --> 02:04:26.052
 However after processing with 
Seurat it takes 13 millisecond

02:04:26.231 --> 02:04:28.953
            -milliseconds s per 
frame on a mobile GPU.    

02:04:28.954 --> 02:04:30.954
(Applause)

02:04:43.396 --> 02:04:45.862
.   
And it looks as good         as 

02:04:45.863 --> 02:04:50.102
good as the original.  How cool 
is that?  Well, with that 

02:04:50.103 --> 02:04:54.972
technology you as a developer 
will be able to build visually 

02:04:54.973 --> 02:04:56.973
stunning

02:04:59.504 --> 02:05:01.570
 on a mobile GPU.  
(Applause). 

02:04:59.504 --> 02:05:03.370
And it looks as good as the 
original.  How cool is that?  

02:04:59.504 --> 02:05:03.637
Well, with that technology you 
as a developer will be able to 

02:04:59.504 --> 02:05:00.932
build visually stunning 
experiences while still target

02:05:00.933 --> 02:05:05.919
ing mobile VR hardware.  We are 
currently experimenting with a 

02:05:05.920 --> 02:05:08.567
small         a small set of 
partners.  We will start rolling

02:05:08.914 --> 02:05:13.559
 out the tool later this year so
 please stay tuned.   

02:05:13.560 --> 02:05:19.287
Let's talk about the world's 
largest developer ecosystem, the

02:05:19.288 --> 02:05:23.987
 web.  Three years ago we 
coauthored web VR spec.  It 

02:05:23.988 --> 02:05:28.782
allows s developers   ers to 
build immersive 3D applications 

02:05:28.783 --> 02:05:36.862
with Javascript and Web GL and 
run them in the browser.  It 

02:05:36.863 --> 02:05:40.477
adapts s to different kinds of 
devices s and it's easy to 

02:05:40.478 --> 02:05:44.544
distribute it with a link.  
Imagine you're a user in a VR 

02:05:44.545 --> 02:05:48.286
headset.  Where do you go to 
discover a web VR experience?  

02:05:48.287 --> 02:05:51.579
How do you surf the web in    in
 VR?  I'm excited to

02:05:51.881 --> 02:05:53.521
                I'm excited to 
announce we are bringing the 

02:05:53.522 --> 02:05:57.582
full Chrome browser in VR.  Let 
me show you a preview.    

02:05:57.583 --> 02:06:02.258
(Applause).   
You'll be able to use Daydream 

02:06:02.259 --> 02:06:06.605
controller to follow links.  And
 for web VR experiences you just

02:06:06.874 --> 02:06:10.253
 get transported into fully 
immersive worlds.  And of course

02:06:10.413 --> 02:06:14.569
 you'll be able to watch any wed
 video in                  any 

02:06:14.570 --> 02:06:18.575
web     web video in a theatre-
like environment with a large 

02:06:18.576 --> 02:06:25.789
screen.  It's the same app for 
browsing in two D     2 D   2 D 

02:06:25.790 --> 02:06:29.859
which means all of my Bookmarks 
and tabs are already there.  

02:06:29.860 --> 02:06:34.109
Things just work.  Browsing in 
VR feels brat            feels 

02:06:34.110 --> 02:06:38.325
great and it's coming to Chrome 
for Android later this year.  

02:06:38.326 --> 02:06:43.341
But Web is not only for Virtual 
Reality.  We    We actually see 

02:06:43.342 --> 02:06:47.934
big potential in the context of 
augmented reality, too.  You see

02:06:48.348 --> 02:06:53.081
 web connects s world's 
information.  And AR connects s 

02:06:53.082 --> 02:06:55.646
information with the physical 
world.  So together they can be 

02:06:55.647 --> 02:06:59.951
applied for solving real life 
problems.  I want to show you 

02:06:59.952 --> 02:07:04.043
what AR features in the browser 
could look like.   

02:07:04.044 --> 02:07:07.392
Let's say you're searching for a
 new coffee table.  You're 

02:07:07.393 --> 02:07:10.840
probably browsing online stores 
and looking at some pictures on 

02:07:10.841 --> 02:07:14.675
your phone but you don't want 
pictures of the phone, you want 

02:07:14.676 --> 02:07:17.492
the furniture in your room.  
This is one example where 

02:07:17.493 --> 02:07:21.357
connecting physical world and 
information would be very handy.

02:07:21.358 --> 02:07:27.118
  With AR-enabled d browser your
 favorite website could ask you 

02:07:27.119 --> 02:07:29.357
to mark the physical space you 
have available and it would only

02:07:29.563 --> 02:07:33.203
 show you the items that fit in 
this area.  And of course you'll

02:07:33.781 --> 02:07:38.672
 be able to preview search 
results in the context of your 

02:07:38.673 --> 02:07:44.216
actual room from any angle.     
le.    

02:07:44.217 --> 02:07:46.948
(Applause). 
» ANDREY DORONICHEV:  Thank you.

02:07:46.949 --> 02:07:49.790
  You didn't have to install a 
new app just for that.  Everyone

02:07:50.222 --> 02:07:53.857
 you see here           
             .  Everything is 

02:07:53.858 --> 02:07:58.885
see     see here is built with 
JavaScript and running on an 

02:07:58.886 --> 02:08:04.846
experimental browser.  We are 
enable        enable developers

02:08:05.003 --> 02:08:09.396
   ers to integrate it into 
existing websites.  Just like we

02:08:09.986 --> 02:08:15.142
    we did with Web VR we are 
starting an experimental build 

02:08:15.143 --> 02:08:18.700
of Chromium.  It's available 
today.  You can download it from

02:08:19.011 --> 02:08:23.147
 git hub.  I'm excited to see 
what the community does with it.

02:08:23.148 --> 02:08:29.918
  Our goal is to make Web VR and
 Web AR first class citizens s 

02:08:29.919 --> 02:08:33.927
in all browsers s.  And that is 
it for developer tools.  Thanks 

02:08:33.928 --> 02:08:36.719
so much for spending some of 
your morning with us.  We look 

02:08:36.720 --> 02:08:39.856
forward to partnering with you, 
making sure you have both 

02:08:39.857 --> 02:08:43.204
platforms s and the tools to 
bring your next great idea to 

02:08:43.205 --> 02:08:46.700
life.  Make sure you check out 
our other talks and come over to

02:08:46.701 --> 02:08:50.500
 Tango booth to check out the 
demo.  Thank you, very much.    

02:08:50.501 --> 02:08:52.501
(Applause)

02:08:55.195 --> 02:08:58.190
.   
(Session concluded)

02:09:13.742 --> 02:09:14.571
.   
.    

02:09:14.572 --> 02:09:15.343
.    
.    

02:09:15.344 --> 02:09:16.350
.    
.    

02:09:16.351 --> 02:09:18.351
.    

02:09:21.292 --> 02:09:25.070
.  Google I/O               
.    

02:09:25.071 --> 02:09:30.450
Google I/O     I/O 2017.     . 
May 18, 2017.  

02:09:37.015 --> 02:09:40.844
10:30 a.m.   
Zero to app:  Develop with 

02:09:40.845 --> 02:09:42.845
Firebase.   
(Standing by)

02:22:31.244 --> 02:22:34.139
 Firebase          football

02:22:37.431 --> 02:22:40.194
        Firebase         
football          Firebase

02:22:40.863 --> 02:22:43.060
         .  

02:29:29.449 --> 02:29:31.364
   .
» Good morning everyone and 

02:29:31.365 --> 02:29:35.044
welcome to the second day of 
Google I/O     I/O.  Hopefully 

02:29:35.045 --> 02:29:38.530
you met a lot of really great 
people, learned about the cool

02:29:38.813 --> 02:29:43.560
est technology and seen some 
great product launches.  But 

02:29:43.561 --> 02:29:48.125
there's one launch that you 
haven't seen.  And I'm so       

02:29:48.126 --> 02:29:50.821
 I'm so confident in this launch
 that on stage at Google I/O

02:29:54.093 --> 02:29:58.093
     I/O I'm announcing I'm 
leaving Google to start a start 

02:29:54.093 --> 02:29:59.313
up to build this app.  And in 
short, this idea is so 

02:29:59.314 --> 02:30:04.817
revolutionary, I want you all of
 you to share your story       

02:30:04.818 --> 02:30:09.241
story with your friends, with 
your family, with everyone on 

02:30:09.242 --> 02:30:12.043
the snaet              on the 
internet.  You deserve to share 

02:30:12.044 --> 02:30:15.759
your story.  Nobody has done 
this before.  Actually         

02:30:15.946 --> 02:30:20.096
  .  Absolutely nobody.  I'm 
confident we will tb first      

02:30:20.464 --> 02:30:23.760
            we will westbound
                   we will be 

02:30:23.761 --> 02:30:26.797
the first to market.  We have 
meetings scheduled an hour from 

02:30:26.798 --> 02:30:31.475
now.  But I think I was a little
 too confident.  We actually 

02:30:31.476 --> 02:30:34.049
don't have anything yet so I 
have this great idea but in 

02:30:34.050 --> 02:30:38.041
order to get funding I need to 
show that it's a viable concept.

02:30:38.042 --> 02:30:44.833
  I need an Android app, iOS app
 and Web app to prove that we 

02:30:44.834 --> 02:30:46.834
can get users.  So I have

02:30:51.546 --> 02:30:55.812
 a bunch of really smart people 
at Google and they told me build

02:30:51.546 --> 02:30:52.525
 an app that looks like this.  
So have an application, your Web

02:30:52.526 --> 02:30:56.965
 app, your mobile app, that 
talks to some database server 

02:30:56.966 --> 02:31:03.369
and that database server proxies
 all the app requests.  That 

02:31:03.370 --> 02:31:07.701
server is going to have all of 
my authentication logic, 

02:31:07.702 --> 02:31:10.560
business logic.  It will control
 who can read and write the 

02:31:10.561 --> 02:31:13.612
stories, and where those stories
 get sent.  But that sounds like

02:31:13.840 --> 02:31:16.612
 just a ton of work and I 
scheduled meetings for like 45

02:31:16.978 --> 02:31:21.504
    45 minutes from now so I 
can't build this alone.  I've 

02:31:21.505 --> 02:31:26.379
asked a couple of my friends to 
come out and help he.  Jenny, 

02:31:26.380 --> 02:31:31.448
Frank and Kat, can you guys help
 me?    

02:31:31.449 --> 02:31:33.449
(Applause)

02:31:36.290 --> 02:31:38.277
. 
» Love it.  We all have a friend

02:31:38.278 --> 02:31:41.657
 like that, right, who comes up 
with this great app idea and 

02:31:41.658 --> 02:31:45.446
then sort of gives you 30 
minutes to build it because how 

02:31:45.447 --> 02:31:49.287
hard is it to build an app, 
especially live here on stage?  

02:31:49.288 --> 02:31:52.187
So it's a tricky situation.  We 
have to build three applications

02:31:52.375 --> 02:31:55.736
              applications and 
we have what did he say?  30 

02:31:55.737 --> 02:31:59.534
minutes?    
So      

02:31:59.535 --> 02:32:03.349
We are going to be using 
Firebase to build these 

02:32:03.350 --> 02:32:07.030
applications s.  And that means 
that the application code talks 

02:32:07.031 --> 02:32:12.069
directly to our powerful managed
 services.  This means that 

02:32:12.070 --> 02:32:15.783
Firebase takes care of all the 
things like scaleability and 

02:32:15.784 --> 02:32:18.311
security.             security 
so that we can focus on building

02:32:18.925 --> 02:32:21.315
 the features that our users 
love.   

02:32:21.316 --> 02:32:24.580
It takes a bit of time to set 
everything up so while the team 

02:32:24.581 --> 02:32:28.293
is prepping on their lab tops s,
 I'm going                    

02:32:28.715 --> 02:32:31.619
          on their laptops I'm 
going to talk about Firebase and

02:32:31.845 --> 02:32:35.128
 building this application.  
Remember we are building a story

02:32:35.205 --> 02:32:39.495
-sharing app so we are taking a 
picture on our phone, selecting 

02:32:39.496 --> 02:32:43.351
a picture on our lap-top, and 
then sharing it with the other 

02:32:43.352 --> 02:32:46.954
users of the app.  First things 
we need no         need to do is

02:32:47.421 --> 02:32:50.808
 allow the users to sign in and 
we are using Firebase 

02:32:50.809 --> 02:32:54.010
application with that.  Second 
we need a place where we can 

02:32:54.011 --> 02:32:58.463
store and share the photos so 
for that we are using Cloud 

02:32:58.464 --> 02:33:04.230
storage.  Finally we need a way 
to store and synchronize 

02:33:04.231 --> 02:33:07.523
metadata and that's the Firebase
 database.  We are going to go 

02:33:07.524 --> 02:33:10.632
through each of these feature, 
I'm going to explain how we use 

02:33:10.976 --> 02:33:13.507
it in the app then then switch 
over to the code and see how it 

02:33:13.508 --> 02:33:16.341
works in practice.   
So you're going to be 

02:33:16.342 --> 02:33:20.872
experiencing first hand how easy
 it is to build an app with 

02:33:20.873 --> 02:33:24.785
Firebase.  First up Firebase 
authentication.   

02:33:24.786 --> 02:33:30.612
It's our secure serverless sign 
in solution.  We have taken all 

02:33:30.613 --> 02:33:34.404
the complexity of storing e-mail
 addresses and passwords and 

02:33:34.405 --> 02:33:40.645
wrapped them in a single cross 
platform API.  That means that 

02:33:40.646 --> 02:33:49.138
your users can sign in with 
Google, Facebook, Twitter, 

02:33:49.139 --> 02:33:58.607
GitHub.  We also support phone 
authentication.  Even if your 

02:33:58.608 --> 02:34:02.609
users don't have an account, 
they can sign in from your phone

02:34:03.422 --> 02:34:05.966
 and continue using the 
application.  To speed things up

02:34:06.345 --> 02:34:11.728
 we are going to be using 
Firebase UI which is our     our

02:34:12.492 --> 02:34:17.144
 open source library for 
authentication.  It handles s 

02:34:17.145 --> 02:34:22.906
this is a new users, returning 
use,      user do they want to 

02:34:22.907 --> 02:34:27.091
sign in with Facebook.  It 
handles s a lot.  It's an open 

02:34:27.092 --> 02:34:30.236
source library built by the 
identity experts at Google and 

02:34:30.237 --> 02:34:35.461
it includes years of experience 
and best practices for signin 

02:34:35.462 --> 02:34:38.627
flows.  I think that's pretty 
much what we need to know.  Can 

02:34:38.628 --> 02:34:42.157
we switch to the split screen to
 do some coding?    

02:34:42.158 --> 02:34:47.137
Okay.  So to speed things up we 
are going to be building all 

02:34:47.138 --> 02:34:49.535
three applications              
applications at the same time.  

02:34:49.536 --> 02:34:53.839
So let's          So let's see. 
  .  At the top left you see 

02:34:53.840 --> 02:34:58.615
Mike's screen and he's building 
the iOS version of our fire 

02:34:58.616 --> 02:35:03.800
stories app.  Kat is working on 
the web vehicles.   

02:35:04.494 --> 02:35:06.287
                     on the web 
version.  On the top right you 

02:35:06.288 --> 02:35:09.343
see Jenny's screen.  That 
doesn't         doesn't look 

02:35:09.344 --> 02:35:13.183
like Java code that I'm used to.
  Did you switch over last night

02:35:13.340 --> 02:35:15.409
?
&gt;&gt; Yes I switched it last night.

02:35:19.433 --> 02:35:22.750
code that you need to write for 
this.  They have already built 

02:35:22.751 --> 02:35:25.443
the basic framework for the 
application so they have added 

02:35:25.444 --> 02:35:28.175
the layouts s they need to stair
 the stories and                

02:35:28.513 --> 02:35:32.747
          to share the stories 
and the bottom where they can 

02:35:32.748 --> 02:35:38.358
send it.  If we now run the app,
 we can access the devices s 

02:35:38.359 --> 02:35:41.324
camera or the local file brower 
and we can take other select

02:35:45.596 --> 02:35:49.053
 a picture.   
But if we hit send, nothing 

02:35:49.054 --> 02:35:54.126
happens.  That's because we are 
not using Firebase yet.  So in 

02:35:54.127 --> 02:35:56.695
the bottom right you see the 
Firebase console.  This is where

02:35:57.243 --> 02:36:00.820
 you manage all of your Firebase
 projects.  We have already 

02:36:00.821 --> 02:36:05.602
skreeated           created a 
project that will serve       

02:36:05.603 --> 02:36:08.546
serve as the back end for this 
application.  All these 

02:36:08.547 --> 02:36:11.817
applications are talking against
 the same back end so they share

02:36:12.505 --> 02:36:15.448
 the same list of users, the 
same file storage and the say 

02:36:15.449 --> 02:36:20.563
database.  That is great because
 that means they're sharing all 

02:36:20.564 --> 02:36:24.614
their states.  They have taken 
the configuration data of this 

02:36:24.615 --> 02:36:29.072
project and added it to each of 
the platforms s so the apps can 

02:36:29.073 --> 02:36:31.073
find their services

02:36:33.368 --> 02:36:36.454
 on the Google surfers   ers.  
We                            on

02:36:36.455 --> 02:36:41.076
 the Google servers s.  We add d
 script includes.  So with that 

02:36:41.077 --> 02:36:44.637
I think we are ready to start 
coding.   

02:36:44.638 --> 02:36:48.722
First thing we need to do is we 
take the features that we are 

02:36:48.723 --> 02:36:53.138
using about Firebase and impart 
them from the SD        the SDK 

02:36:53.139 --> 02:36:57.559
into our code.  We do this in 
one goal for all three features

02:36:57.696 --> 02:37:02.213
          features we are using,
 off, storage and database.  You

02:37:02.214 --> 02:37:05.422
 can see the code looks exactly 
the same for every feature so we

02:37:05.633 --> 02:37:09.091
 have a cross feature 
consistency with Firebase.  

02:37:09.092 --> 02:37:12.116
That's great because it allows 
you to start using new features 

02:37:12.117 --> 02:37:15.802
quickly.  If you glance from 
screen to screen you see that 

02:37:15.803 --> 02:37:19.700
it's really also very similar 
between platforms s.  And that 

02:37:19.701 --> 02:37:23.207
is great because it means that 
you learn Firebase on one 

02:37:23.208 --> 02:37:25.937
platform and then when you 
switch to another flat      

02:37:25.938 --> 02:37:28.817
platform you     you take what 
you've learned and use it ton

02:37:29.932 --> 02:37:33.834
        it on the new platform 
also.  I think          .  

02:37:33.835 --> 02:37:38.296
Firebase authentication, let's 
get to that.  First we need to 

02:37:38.297 --> 02:37:40.771
configure Firebase for the 
providers we want to use.    

02:37:41.124 --> 02:37:44.471
So today we are only using 
Google on sign-in because we 

02:37:44.472 --> 02:37:50.413
only have a few minutes left.  
We also in the Firebase console 

02:37:50.414 --> 02:37:55.736
enabled d this provider.  Next 
we are going to wait until the 

02:37:55.737 --> 02:37:59.852
user clicks the     s the sign-
in button and when they      

02:37:59.853 --> 02:38:04.075
they do we start the sign-in 
flow.  It triggers s all the 

02:38:04.076 --> 02:38:09.624
complex flows that you can 
imagine.   .  If users signs in 

02:38:09.625 --> 02:38:13.170
on an iOS tomorrow but an 
Android device the same after 

02:38:13.171 --> 02:38:17.864
they still have the say stories.
  When they want to sign in with

02:38:17.865 --> 02:38:22.208
 Facebook today but Google 
tomorrow it handles s all 

02:38:22.209 --> 02:38:25.111
account linking for you.  What 
we need to do is          to do 

02:38:25.112 --> 02:38:28.590
is listen for when the 
authentication state changes.  

02:38:28.591 --> 02:38:33.639
When it does it's either 1 of 2 
things.  Either        Either 

02:38:33.640 --> 02:38:37.497
authentication succeeded or the 
user did not signed in.  If the 

02:38:37.498 --> 02:38:43.055
user signed in we hide the sign 
in button and enable any other 

02:38:43.056 --> 02:38:47.926
UI elements s that required an 
authenticated d users.  That's 

02:38:47.927 --> 02:38:53.437
all we need to do.  We have sign
 in working.  Let's see who gets

02:38:53.773 --> 02:38:57.816
 there first.  I think Kat is 
already signing in.  You can see

02:38:57.939 --> 02:39:04.007
 that you get pop ups s, we get 
to pick our account.  We get an 

02:39:04.008 --> 02:39:07.615
account picker.  All that is 
handled for us with the minimum 

02:39:07.616 --> 02:39:10.619
code that you just saw.  But 
just signing in on an app is not

02:39:10.962 --> 02:39:13.600
 very interesting so let's
          so let's switch back 

02:39:13.601 --> 02:39:17.212
to slides and see how you're 
going to be using cloud storage.

02:39:22.015 --> 02:39:27.460
storage before you know it's our
 petabyte scale storage solution

02:39:27.639 --> 02:39:34.836
.  It provides a SD      a SDK 
that allows s you to upload 

02:39:34.837 --> 02:39:39.393
files securely directly from 
your device.  You can ensure 

02:39:39.394 --> 02:39:43.090
only authorized d users have 
access to those files from their

02:39:43.231 --> 02:39:46.719
 device.  Within every you 
upload a new file through 

02:39:46.720 --> 02:39:51.518
Firebase you also get a download
 URL.  This is an unguessible 

02:39:51.519 --> 02:39:56.099
URL that provides read-only 
access to that same file and 

02:39:56.100 --> 02:39:59.554
that is great for our         
for our fire stories app today 

02:39:59.555 --> 02:40:04.214
because we can use that to share
 the image between all the 

02:40:04.215 --> 02:40:06.622
users.  I think there's nothing 
more we need no         need no 

02:40:06.623 --> 02:40:09.784
know about                    
need to know about Cloud storage

02:40:10.190 --> 02:40:13.819
.  Let's switch back to the code
.  We are back in the code.  

02:40:13.820 --> 02:40:17.334
Remember we already imparted the
 feature                      

02:40:17.335 --> 02:40:20.978
imported the feature sow we have
 a local file what the user took

02:40:21.156 --> 02:40:23.156
 with

02:40:24.429 --> 02:40:24.654
 we have a local file what the 
user took with a camera or 

02:40:24.655 --> 02:40:28.580
selected with the file browser. 
 We need too          need to 

02:40:28.581 --> 02:40:31.144
figure out where we are going to
 store that file in Cloud 

02:40:31.145 --> 02:40:33.310
storage.  It's going to 
assistance of two pieces        

02:40:33.311 --> 02:40:37.497
pieces.  The first piece is the 
user's UID      's UID.  This is

02:40:37.498 --> 02:40:40.244
 the I dents indication of   
                        the 

02:40:40.245 --> 02:40:43.916
identification of the 
authenticated d user.  We make 

02:40:43.917 --> 02:40:47.150
sure what the files from the 
various users end up in 

02:40:47.151 --> 02:40:50.296
different locations.  That is 
great because that means we can 

02:40:50.297 --> 02:40:55.577
use Firebase's security rules to
 ensure that only authorized d 

02:40:55.578 --> 02:41:00.520
user has access to their files. 
 So if Mike uploads a new story 

02:41:00.521 --> 02:41:03.633
only he can change that picture.
  The second part of the path is

02:41:03.634 --> 02:41:06.918
 really just a nung        a 
unique file name.  Since we are 

02:41:06.919 --> 02:41:11.896
writing to the same Cloud 
storage application we    we 

02:41:11.897 --> 02:41:18.841
want      want to make sure we 
don't overlap files.  To take 

02:41:18.842 --> 02:41:21.508
the storage reference           
reference we juste       just 

02:41:21.509 --> 02:41:24.632
created we tell the Firebase to 
put the file to that laeks

02:41:25.092 --> 02:41:27.450
               to that location.
  That is all we need to do to 

02:41:27.451 --> 02:41:29.413
start the upload in the 
backgrounds.   

02:41:29.414 --> 02:41:32.699
Now think of all the things we 
did not have to do here.  We did

02:41:33.634 --> 02:41:37.203
 not spin up any threads, there 
were no connectors s, no 

02:41:37.204 --> 02:41:41.599
background tasks s.  All we did 
was tell Firebase to start 

02:41:41.600 --> 02:41:45.656
uploading the file and it went 
to work.  All we have to do is 

02:41:45.657 --> 02:41:50.025
wait for          wait for the 
upload to complete.  And when it

02:41:50.194 --> 02:41:54.149
 does, 1 of 2 things can happen.
  Either the upload succeeded or

02:41:54.426 --> 02:41:58.279
 it failed.  If it failed we 
take the error message we get 

02:41:58.280 --> 02:42:02.662
from Firebase and show it to the
 user.  If the upload succeeded 

02:42:02.663 --> 02:42:06.396
we take the downloaded URL of 
the file that was uploaded and 

02:42:06.397 --> 02:42:10.214
display that on the local 
screen.   

02:42:10.215 --> 02:42:15.238
This is all we need.  So if you 
now run this app we will be able

02:42:16.366 --> 02:42:18.596
 to up employed                
to upload files to clout

02:42:19.528 --> 02:42:22.326
          to sloud          to 
Cloud storage.  I see Kat is 

02:42:22.327 --> 02:42:27.843
already selecting an image.  We 
don't really see a lot yet.  If 

02:42:27.844 --> 02:42:32.127
in the console we switch to the 
storage tab in the Firebase 

02:42:32.128 --> 02:42:36.805
console on the bottom right, Kat
, can you switch on the console?

02:42:41.320 --> 02:42:46.936
 Can we go back to the split 
screen?  Thank you.    

02:42:46.937 --> 02:42:50.972
So we have files here now.  
These files were just uploaded 

02:42:50.973 --> 02:42:54.018
but not a really impressive way 
of up employed             

02:42:54.019 --> 02:42:57.498
uploading a file but there is a 
really cute dog in there.   

02:42:57.499 --> 02:43:01.417
So clearly we can upload files 
to the Cloud, not really what we

02:43:01.537 --> 02:43:06.976
 wanted yet.  Nothing we   
          .  So we are going to 

02:43:06.977 --> 02:43:09.144
be using the third Firebase 
feature to share the information

02:43:09.145 --> 02:43:13.277
 between our users.  Let's 
switch back to the presentation.

02:43:20.111 --> 02:43:23.831
est feature and it's still one 
of our most popular services.  

02:43:23.832 --> 02:43:26.707
We have hundreds of thousands of
 applications that rely on our 

02:43:26.708 --> 02:43:31.363
database every day.  The 
Firebase database is a cloud-

02:43:31.554 --> 02:43:38.819
hosted no SQL database.   .  And
 if you've ever modeled your 

02:43:38.820 --> 02:43:43.075
data with JSON you know it's 
very flexible.  This is a data 

02:43:43.076 --> 02:43:45.632
model that we are using today.  
At the top level you see we have

02:43:47.345 --> 02:43:52.189
 a note called stories.  Under 
that we have a note for each 

02:43:52.190 --> 02:43:57.154
individual story.  And for each 
of those stories we keep the 

02:43:57.155 --> 02:44:02.913
download URL.  We keep the title
           the title that the 

02:44:02.914 --> 02:44:07.908
user entered for that story.  We
 keep if user              keep 

02:44:07.909 --> 02:44:13.207
the user ID    ID of the user 
that created the story.  Having 

02:44:13.208 --> 02:44:17.079
the user ID    ID allows s us to
 access the story           the 

02:44:17.080 --> 02:44:20.646
story with security rules.  That
 is great because it means when 

02:44:20.647 --> 02:44:23.735
Kat enters a story only she can 
change the tight of             

02:44:24.372 --> 02:44:28.003
 the title of that store.   
       story.  We call our 

02:44:28.004 --> 02:44:33.010
database a realtime database.  
We do that because of the way 

02:44:33.011 --> 02:44:36.795
you read your data from it.  
With most daebs you    

02:44:37.118 --> 02:44:41.485
            most databases s you
 do something like select from 

02:44:41.486 --> 02:44:45.992
story.  With Firebase you attach
 a listener or observer to the 

02:44:45.993 --> 02:44:49.452
story's notes and from that 
moment on Firebase will tell you

02:44:49.735 --> 02:44:52.644
 when ever something changes 
under the story's note.  So when

02:44:53.275 --> 02:44:58.832
 Jen uploads a new story, Kat 
and Mike get informed of that I 

02:44:58.833 --> 02:45:03.064
instantly. 
             instantly.  And 

02:45:03.065 --> 02:45:08.798
when Jen responds to the story, 
Mike gets the updates s.  This 

02:45:08.799 --> 02:45:13.616
is realtime synchronization.  
It's really easy.  Let's switch 

02:45:13.617 --> 02:45:19.903
back to the code and add the 
final feature to the app.    .  

02:45:19.904 --> 02:45:22.879
We already imparted the database
.  We are going to go       to 

02:45:22.880 --> 02:45:24.948
go back to where we uploaded the
              uploaded the file 

02:45:24.949 --> 02:45:28.113
and added it to the local 
screen.  First we are going to 

02:45:28.114 --> 02:45:30.114
remove that

02:45:34.714 --> 02:45:38.980
 the database.  We are going to 
go back to where we uploaded the

02:45:34.714 --> 02:45:38.914
 file and added it to the local 
screen.  First we are going to 

02:45:34.714 --> 02:45:37.792
remove that code.  We create a 
reference to the story's note in

02:45:38.126 --> 02:45:41.996
 the database.  Since we point 
to that same note in each of the

02:45:41.997 --> 02:45:45.625
 apps, they're going to be 
writing to the same location in 

02:45:45.626 --> 02:45:50.999
the same database.  That makes 
data sharing really easy.  But 

02:45:51.000 --> 02:45:53.792
since they're writing to the 
same location we also need to 

02:45:53.793 --> 02:45:58.039
make sure we have a unique ID   
 ID for the story we are create 

02:45:58.040 --> 02:46:04.096
can.  We are              can.  
With that we are ready to write 

02:46:04.097 --> 02:46:07.365
the metadata.  We take the 
reference that we just created 

02:46:07.366 --> 02:46:12.634
and write the values of our 
story to it.  So we write the 

02:46:12.635 --> 02:46:16.398
download URL that everyone can 
display, we write the text that 

02:46:16.399 --> 02:46:21.636
the user entered, we write the 
UID         the UID so the user 

02:46:21.637 --> 02:46:24.834
can secure access to the story. 
 We write the path in the Cloud 

02:46:24.835 --> 02:46:26.564
storage because I think that 
might be               that 

02:46:26.565 --> 02:46:31.421
might come in handy but I'm not 
sure where yet, I just have a 

02:46:31.422 --> 02:46:36.058
feeling.  Now we can run the app
 again.  We    We pick a story, 

02:46:36.540 --> 02:46:39.404
it will write that data to the 
database.  If you look at the 

02:46:39.405 --> 02:46:42.179
bottom right you see we have 
open a database panel in the 

02:46:42.180 --> 02:46:44.612
Firebase console.  Now we are 
going to wait for             to

02:46:44.613 --> 02:46:46.613
 wait for the stories to pour in

02:46:50.282 --> 02:46:55.507
.  I see that Mike is already 
selecting an image.  Kat is 

02:46:55.508 --> 02:46:58.757
working.  You can see that the 
database lights up as the new 

02:46:58.758 --> 02:47:04.446
stories come in.  That is great.
  But just one problem left.  

02:47:04.447 --> 02:47:09.426
Smile, you're on camera.  
There's one problem left.  It 

02:47:09.427 --> 02:47:12.807
doesn't         doesn't show on 
the local screens anymore.  So 

02:47:12.808 --> 02:47:15.527
that's the final step we need to
 take in our code.  We are 

02:47:15.528 --> 02:47:19.553
almost done here, folks s.  We 
are going to attach a listener 

02:47:19.554 --> 02:47:23.545
to the same note that we had 
before to the story's note.  And

02:47:23.695 --> 02:47:26.893
 we are going to ask Firebase 
for the last ten stories        

02:47:28.834 --> 02:47:32.625
 stories.  Now, from that moment
 on when ever a new stories edit

02:47:32.929 --> 02:47:37.605
, Firebase will fire the added 
event.  And with that event we 

02:47:37.606 --> 02:47:42.283
get a snapshot of the story.  So
 we take the value out of the 

02:47:42.284 --> 02:47:45.354
snapshot, that's the slaul
                  that's the 

02:47:45.355 --> 02:47:49.332
value we just      just wrote 
and we display it on the local 

02:47:49.333 --> 02:47:53.751
screen again by calling it 
displayed story.  That's it.  We

02:47:53.752 --> 02:47:57.590
 are going to do one extra one 
because I've been telling about 

02:47:57.591 --> 02:48:00.398
changing the story so securely 
so much that I want to make sure

02:48:00.873 --> 02:48:04.470
 it works, too.  We are also 
going to listen for changes to 

02:48:04.471 --> 02:48:10.460
the stories which works with a 
child changed event.  When 

02:48:10.461 --> 02:48:14.221
somebody changes a story we get 
a snapshot of the updated story.

02:48:14.222 --> 02:48:18.828
  We take the value and the key 
of that story and update to 

02:48:18.829 --> 02:48:21.406
display on the local screen.  I 
think we are ready to run

02:48:33.621 --> 02:48:35.520
.    
So now you can see that if we 

02:48:35.521 --> 02:48:39.315
run the app, stories that we 
just created actually are 

02:48:39.316 --> 02:48:43.822
already showing on each local 
screen.  So that child added 

02:48:43.823 --> 02:48:46.877
event that we were talking about
 fires immediately for any 

02:48:46.878 --> 02:48:51.723
existing children.  But now as 
they're taking more pictures and

02:48:51.969 --> 02:48:55.963
 writing more stories, those 
stories show up on all screens 

02:48:55.964 --> 02:49:00.092
within milliseconds.  This is 
how you build a multi user story

02:49:00.865 --> 02:49:05.168
-sharing application with 
Firebase.  In fact, I'm not sure

02:49:05.493 --> 02:49:08.653
, I think we are pretty much 
done here, Mike.  And it took 

02:49:08.654 --> 02:49:13.936
what, like 15 minutes?  I think 
we have like 40 minutes left to 

02:49:13.937 --> 02:49:17.440
go play in the bull pit?  Was 
was it?

02:49:17.441 --> 02:49:22.325
&gt;&gt; What's        What is wrong?
&gt;&gt; I'm getting a call, it's our 

02:49:22.326 --> 02:49:26.856
VC.  Our VC says there's already
 a bunch of apps that do 

02:49:26.857 --> 02:49:32.310
basically this thing.  Wait.  
You want what?   ?  Oh my gosh. 

02:49:32.648 --> 02:49:36.878
 Frank, we need to pivot like 
now.  Good thing we have 20 

02:49:36.879 --> 02:49:42.030
minutes left.  So turns out if 
you go back to the slides, it 

02:49:42.031 --> 02:49:45.450
turns out that there are a lot 
of apps out there already that 

02:49:45.451 --> 02:49:50.085
do really thyme                 
do realtime communication and it

02:49:50.291 --> 02:49:52.876
 turns out that's so a few years
 ago.  And people are interested

02:49:53.595 --> 02:49:58.056
 in new stuff now.  Specifically
 people are tired of reading 

02:49:58.057 --> 02:50:00.745
texts s and looking at their 
pictures.  Instead they want to 

02:50:00.746 --> 02:50:04.374
look at their pictures and look 
at other tiny pictures next to 

02:50:04.375 --> 02:50:13.429
their big pictures.  So we need 
to e mojyfy our app  

02:50:14.641 --> 02:50:16.611
             mojyfy our app 
today       today.  It's okay.  

02:50:16.612 --> 02:50:21.698
Pivots s or    s are hard but we
 are thinking ahead.  Our team 

02:50:21.699 --> 02:50:25.665
has thought of this and created 
e moej

02:50:31.110 --> 02:50:32.250
     mojification 
            emojification 

02:50:32.251 --> 02:50:38.893
outcome.  We are prifting.      
       pifting.  We             

02:50:38.894 --> 02:50:42.770
 pivoting.  I think it has 
something to do with the bunsy 

02:50:42.962 --> 02:50:46.755
          the bouncy castle in 
the break room.  Anyway we have 

02:50:46.756 --> 02:50:51.394
to take our original 
emojification algorithm and 

02:50:51.395 --> 02:50:56.047
write it once so we don't have 
to import it to all the 

02:50:56.048 --> 02:51:01.294
platforms s.  Another thing is 
our emojification platform is 

02:51:01.295 --> 02:51:05.252
great but it consumes s a lot of
 resources.  Although mobile 

02:51:05.253 --> 02:51:08.649
devices are faster than ever 
before the battery life has been

02:51:09.363 --> 02:51:12.156
 flat over the last few years 
and we knee to make sure        

02:51:12.497 --> 02:51:16.460
              we need to make 
sure we save      save our user

02:51:17.192 --> 02:51:21.713
's batteries.  And finely       
     And finally security.  We 

02:51:21.714 --> 02:51:25.964
have our proprietary 
emojification algorithm but as 

02:51:25.965 --> 02:51:29.816
you build out an application you
 end up with      with secrets s

02:51:29.817 --> 02:51:34.635
 that are part of your app.  If 
you put them in to your app and 

02:51:34.636 --> 02:51:40.184
deploy them to the world some of
 your nefarious users are going 

02:51:40.185 --> 02:51:43.010
to find that information and do 
bad things with it.  We don't 

02:51:43.011 --> 02:51:46.074
want that information to leaning
            to leak out because 

02:51:46.075 --> 02:51:49.358
that would ruin us.  It's even 
more okay because the same skunk

02:51:51.322 --> 02:51:54.492
 works engineering team has also
 come up with a solution to the 

02:51:54.493 --> 02:51:57.732
problem.   
Turns out Cloud functions are 

02:51:57.733 --> 02:52:01.898
the solution to the problem.  So
 Cloud functions allow us to 

02:52:01.899 --> 02:52:08.798
take our already written 
JavaScript emojification along 

02:52:08.799 --> 02:52:14.333
rim           along rim  
         algorithm and deploy to

02:52:14.334 --> 02:52:20.586
 it the Cloud.  We only have to 
write it once and deploy it to 

02:52:20.587 --> 02:52:27.785
all our apps.  It also allows s 
us to run on Google servers s in

02:52:28.976 --> 02:52:31.529
 the Cloud.  And since it's 
deploy             it's deployed

02:52:31.530 --> 02:52:34.186
 to the Cloud we don't have to 
worry about people extracting 

02:52:34.187 --> 02:52:38.761
information from our deployed 
apps.    

02:52:38.762 --> 02:52:42.618
So we have a conclusion, we have
 a plan and we have some jaef

02:52:44.327 --> 02:52:48.299
           some JavaScript.  The
 first thing to do is update the

02:52:48.300 --> 02:52:50.300
 architecture

02:52:51.518 --> 02:52:55.293
 slide.  We have our application
 on one side that this is all th

02:52:55.494 --> 02:52:58.104
e different applications s, all 
the platforms s.  They're using 

02:52:58.105 --> 02:53:03.046
the Firebase SDQ     SDQ to 
communicate                    

02:53:03.047 --> 02:53:04.946
SDK to communicate with the 
database and storage.  We are 

02:53:04.947 --> 02:53:09.110
going to shift the apps up a 
little bit and plop Cloud 

02:53:09.111 --> 02:53:13.496
functions right here.  Cloud 
functions kind of act like 

02:53:13.497 --> 02:53:18.133
another client.  It's like a 
super client that's there all 

02:53:18.134 --> 02:53:21.311
the time and can always wrach  
                can always watch

02:53:21.764 --> 02:53:24.388
 for changes that happened, make
 all those heavy lifting 

02:53:24.389 --> 02:53:28.919
operations and push them back to
 Firebase to the database and to

02:53:28.920 --> 02:53:33.162
 storage where the clients will 
automatically be notified just 

02:53:33.163 --> 02:53:37.195
like as if another client did 
the update.  So I can talk about

02:53:37.612 --> 02:53:42.943
 this all day.  But why don't I 
just show you with some code?  

02:53:42.944 --> 02:53:47.883
Sound good?   ?  Switch back to 
the code.  So here we are.  And 

02:53:47.884 --> 02:53:53.482
we have down in the lower corner
 Kat is our JavaScript wiz and 

02:53:53.483 --> 02:53:57.329
she was the one who helped us 
with this and she will take the 

02:53:57.330 --> 02:54:00.474
helm today.  She started out 
with a few imparts         

02:54:00.475 --> 02:54:04.549
imparts like our emojification 
along rim but               

02:54:04.550 --> 02:54:08.359
along       algorithm but she's 
kwet            she's ready to 

02:54:08.360 --> 02:54:11.035
get coding.  This is where you 
wire it up to       up to the 

02:54:11.036 --> 02:54:14.709
Firebase database.  Here you can
 see it has a path to Firebase 

02:54:14.710 --> 02:54:19.167
and it's listening for rights on
 that location.  Because they're

02:54:19.649 --> 02:54:22.794
 integrating with already 
existing app, this is the same 

02:54:22.795 --> 02:54:25.318
location          location where
 our stories appear today.  It's

02:54:25.319 --> 02:54:29.138
 going to behave just like an 
app.  We are going to have a 

02:54:29.139 --> 02:54:32.828
snapshot handy.  Next we are 
going to unpack the title with 

02:54:32.829 --> 02:54:37.587
borg           with boring old 
texts from the snapshot.  Then 

02:54:37.588 --> 02:54:42.194
we are going to do the magic, 
take that title and pass it off 

02:54:42.195 --> 02:54:46.072
to our emojification algorithm 
which will take the title in and

02:54:47.314 --> 02:54:51.357
 a wonderful stream of emoji 
will come out.  We are going to 

02:54:51.358 --> 02:54:58.669
take that e moejfyd           e 
moejfied

02:55:04.318 --> 02:55:06.732
         mojified title.  The 
behavior for functions is 

02:55:06.733 --> 02:55:09.327
different than on the clients.  
It will trigger for each right 

02:55:09.328 --> 02:55:13.636
than on the slightly more 
specific child event so we are 

02:55:13.637 --> 02:55:19.121
going to add a short circuit to 
the top to make sure we don't re

02:55:19.418 --> 02:55:23.551
e moejfy something that it's 
already processed.  We are are 

02:55:23.552 --> 02:55:25.555
ready           ready to deploy

02:55:34.431 --> 02:55:38.231
 something that it's already 
processed.  We are ready to 

02:55:34.431 --> 02:55:39.746
deploy.  We don't have to deploy
 the apps, we can just run it 

02:55:39.747 --> 02:55:44.870
and all the new titles that get
     get added are going to be e

02:55:44.871 --> 02:55:49.847
 moejfyd d and people can be 
super happy looking at those 

02:55:49.848 --> 02:55:52.583
pictures

02:55:53.661 --> 02:55:57.927
emojifyd and people can be super
 happy looking at those pictures

02:55:53.661 --> 02:55:55.661
 and that's great, right

02:55:58.335 --> 02:56:02.401
 and people can be super happy 
looking at those pictures and 

02:55:58.335 --> 02:56:00.496
that's great, right?
&gt;&gt; Hold on.  My friend dog is 

02:56:00.497 --> 02:56:03.382
calling.  And my friend dog says
          dog says been miss 

02:56:03.383 --> 02:56:08.871
labeling dogs.  People are 
really bad on identifying dogs 

02:56:08.872 --> 02:56:12.766
and calling them sheep and 
bananas.  What's that?  You're 

02:56:12.767 --> 02:56:16.915
afraid people will upload bad 
photos?  

02:56:16.916 --> 02:56:19.915
» Who would do bad things on the
 internet.  

02:56:19.916 --> 02:56:24.674
» You can see the temptation.  
It looks like we have some more 

02:56:24.675 --> 02:56:26.752
work cut out for us so let's
          so let's go back to 

02:56:26.753 --> 02:56:31.947
the slides because I've got an 
idea.  We'll be able to use 

02:56:31.948 --> 02:56:37.727
machine learning.  We will be 
able to fix this problem and I 

02:56:37.728 --> 02:56:42.081
bet we'll be able to get the V
C's on board if we can say we 

02:56:42.082 --> 02:56:45.459
are using machine learning.  How
 can we use it?  Well we'll 

02:56:45.460 --> 02:56:49.174
still have people upload their 
photos s same as before but 

02:56:49.175 --> 02:56:52.061
instead of making them type in 
the title we will just figure 

02:56:52.062 --> 02:56:57.289
out what is in the image and 
perform image verification on 

02:56:57.290 --> 02:57:01.028
that.  While we are there people
 seem to really en joip not 

02:57:01.029 --> 02:57:03.962
having                    enjoy 
not everything to read.  In fact

02:57:05.359 --> 02:57:10.469
 I'm not sure my friend dog can 
read or type so getting ready of

02:57:10.951 --> 02:57:14.792
 the title is probably a great 
move.  We can also get rid of 

02:57:14.793 --> 02:57:18.502
the complicated images s and 
keep the super simple beautiful 

02:57:18.503 --> 02:57:24.488
emoji.  So it looks something 
like this.  Just a giant stream 

02:57:24.489 --> 02:57:29.495
of emoji.  It will be fantastic.
  We spent all of our time 

02:57:29.496 --> 02:57:33.421
engineering on the emojification
 algorithm and haven't spent any

02:57:33.644 --> 02:57:37.514
 time on machine learning.  Well
 good thing we are at Google I/O

02:57:37.747 --> 02:57:42.447
     I/O and Cloud has some APIs
 that can help us with this.  

02:57:42.448 --> 02:57:46.151
Let's just put a Cloud on it.  
Every Firebase project is also a

02:57:46.152 --> 02:57:49.641
 Cloud project.  That means we 
can use the same project to 

02:57:49.642 --> 02:57:54.641
access the cloud APIs s and the 
Cloud SD    SDK's.  In this case

02:57:55.153 --> 02:57:58.618
 let's make use of the vision 
API     API which will allow us 

02:57:58.619 --> 02:58:02.448
to look at an image, determine 
what is in that and based on 

02:58:02.449 --> 02:58:08.464
that we will be able to perform 
our emojification algorithm and 

02:58:08.465 --> 02:58:11.904
spin out a stream of emoji.  
Where is the architecture 

02:58:11.905 --> 02:58:17.173
diagram?  We have koud clungs
                  have Cloud 

02:58:17.174 --> 02:58:19.972
functions now that can listen to
 Firebase.  Now we just need a 

02:58:19.973 --> 02:58:26.026
little bit of room to fit in    
in one more icon so we will 

02:58:26.027 --> 02:58:30.366
shift everything over and bam we
 have      have room for a Cloud

02:58:31.409 --> 02:58:34.336
 vision API.  We will create a 
new Cloud function which run-ins

02:58:35.073 --> 02:58:37.529
 a secure environment so we can 
put in our project information 

02:58:37.530 --> 02:58:40.638
so we can talk directly to the 
Cloud vision Pay API doshgs

02:58:41.587 --> 02:58:46.855
                       vision 
API and run it back sta         

02:58:47.221 --> 02:58:48.811
 back to the babies
               to the database. 

02:58:48.812 --> 02:58:51.640
 So let's          So let's code
 one last time.  The first thing

02:58:51.764 --> 02:58:54.184
 we are going the nt  
            going the to want to

02:58:54.185 --> 02:58:56.230
 do here is hook up to       up 
to the vision

02:58:59.209 --> 02:59:02.185
here is hook up to the vision 
API.  You'll        You'll want 

02:59:02.186 --> 02:59:06.729
to be focusing here on the 
bottom left.  We are using the 

02:59:06.730 --> 02:59:11.750
same ID    ID and going to make 
use of the Cloud SD    SDK as 

02:59:11.751 --> 02:59:16.716
well, the Cloud storage SDK as 
well.  Now that we hooked up our

02:59:16.942 --> 02:59:20.072
 API we are going to go ahead 
and define a new function.  It's

02:59:20.073 --> 02:59:24.025
 list he ening          he en
ing                    It's 

02:59:24.026 --> 02:59:27.660
listening to the same place in 
the database because we want to 

02:59:27.661 --> 02:59:31.453
pick up the same images s.  We 
can fire up multiple functions 

02:59:31.454 --> 02:59:36.073
from the same place.  Instead of
 grabbing the title which we no 

02:59:36.074 --> 02:59:41.488
longer have we want to grab the 
image using the file path that 

02:59:41.489 --> 02:59:45.798
Frank so kindly snuck in for us 
earlier.  Once we have the file 

02:59:45.799 --> 02:59:49.656
path we will be able         be 
able to use the storage sd

02:59:49.869 --> 02:59:52.535
                the storage SD
    SDK to grab a reference to 

02:59:52.536 --> 02:59:55.927
that file.  With that new 
reference we will be able to go 

02:59:55.928 --> 03:00:00.651
ahead and pass that to the 
vision API to detect labels s 

03:00:00.652 --> 03:00:03.317
and find out what is in our 
image.   

03:00:03.318 --> 03:00:07.282
Once we have the labels s, the 
response from the vision API, we

03:00:07.453 --> 03:00:11.182
 want to filter out just the 
labels s.  And then we can e 

03:00:11.183 --> 03:00:13.183
moej

03:00:16.511 --> 03:00:19.746
     mojify       emojify just 
our labels s.  Once we have the 

03:00:19.747 --> 03:00:23.283
emoji we need to write it back 
     back to our database

03:00:23.524 --> 03:00:27.548
                 to our database
.  Here instead of writing to 

03:00:27.549 --> 03:00:30.249
the same location we are going 
to write to a new location, 

03:00:30.250 --> 03:00:35.253
emojis s.  This allows s us to 
differenceiant                  

03:00:35.973 --> 03:00:39.005
 to differentiate between who 
can write and view stories, 

03:00:39.006 --> 03:00:43.942
versus who can look at the emoji
s s.  Honestly everyone deserves

03:00:44.262 --> 03:00:49.188
 s emojis s so we are going to 
open this up to the world.  We 

03:00:49.189 --> 03:00:53.758
will deploy our new function and
 any new images will new get 

03:00:53.759 --> 03:00:58.997
emojifyd d and labeled 
automatically.  We'll update the

03:00:58.998 --> 03:01:04.656
 clients so that they now list 
tone      tone           listen 

03:01:04.657 --> 03:01:08.574
to the emoji's field instead of 
the story's field.   

03:01:16.611 --> 03:01:25.142
emoji.  A nice definitely 
comprehensible stream of emoji. 

03:01:25.424 --> 03:01:28.531
 So what do you think, Mike?  Do
 you think we are going to be 

03:01:28.532 --> 03:01:33.610
able to get that funding we need
?  

03:01:33.611 --> 03:01:38.675
» MIKE McDONALD:  I don't know, 
Kat.  I'd sea         I'd say 

03:01:38.676 --> 03:01:42.154
let's let our first couple users
 to take a crack at it and see 

03:01:42.155 --> 03:01:47.458
what they think.  Mean time we 
will do a quick recap.  Can you 

03:01:47.459 --> 03:01:49.073
switch back to the slides, 
please.   

03:01:49.074 --> 03:01:52.020
At the beginning of the talk I 
presented this problem.  How do 

03:01:52.021 --> 03:01:55.903
we build an app in under an hour
 that we can present to our 

03:01:55.904 --> 03:01:59.449
investors s?  And Frank came on 
stage and showed us the easiest 

03:01:59.450 --> 03:02:03.973
way to do that, to use Firebase,
 Google' mobile platform to 

03:02:03.974 --> 03:02:07.517
build your application for 
Android, iOS and the Web.  He 

03:02:07.518 --> 03:02:11.353
used Firebase authentication to 
securely sign in our users.  

03:02:11.354 --> 03:02:14.888
Cloud storage to upload and 
share those files.  And the real

03:02:15.437 --> 03:02:17.437
 time database

03:02:18.602 --> 03:02:22.286
 to synchronize file metadata 
across all of our clients.  

03:02:22.287 --> 03:02:25.423
Firebase let's you build your 
app quickly without everything 

03:02:25.424 --> 03:02:28.888
to worry about managing servers 
s or infrastructure, writing 

03:02:28.889 --> 03:02:34.758
your own code          own auto 
thent                own 

03:02:34.759 --> 03:02:39.271
authentication code.  Then Jen 
and Kat showed us how to extend 

03:02:39.272 --> 03:02:46.384
or apps functionality using 
Cloud function and Cloud vision 

03:02:46.385 --> 03:02:49.933
API.  It let's us protect our 
proprietary

03:02:53.878 --> 03:02:58.380
 emojification algorithms s and 
then enhance them with the power

03:02:58.808 --> 03:03:03.368
 of machine learning.  Since you
 don't work with Kat, Jenny and 

03:03:03.369 --> 03:03:06.084
Frank we provided a number of 
other tools in Firebase to 

03:03:06.085 --> 03:03:09.674
provide that level of support 
when you have to go and build 

03:03:09.675 --> 03:03:13.937
your application and pitch to 
your investors s.  Fbs       s. 

03:03:13.938 --> 03:03:20.905
 Fbs       s.  Firebase offers 
high quality application, dev 

03:03:20.906 --> 03:03:25.437
tools and high quality free 
technical support.  If you're 

03:03:25.438 --> 03:03:29.389
interested in diving deeper to 
any of these concepts with 

03:03:29.390 --> 03:03:34.337
Firebase there are a number of 
other talks available today and 

03:03:34.338 --> 03:03:39.451
tomorrow on stage seven in the 
main area.  And all of us and 

03:03:39.452 --> 03:03:42.639
our team members will be        
 will be available in sandbox H 

03:03:42.640 --> 03:03:45.255
if you have any additional 
questions.  Let's check in on 

03:03:45.256 --> 03:03:50.124
those users again, let me give 
them a call.    

03:03:50.125 --> 03:03:52.251
Hay       
Hey, what did you think of the 

03:03:52.252 --> 03:03:57.511
app?  Hmm.  So you don't think a
 stream of e moejib          

03:03:57.512 --> 03:04:01.434
emoji is a particularly useful
        useful app?  That's not 

03:04:01.435 --> 03:04:06.208
great news, team.  What are you 
doing, Kat?  

03:04:06.209 --> 03:04:08.345
» KAT FANG:  I'm coding.  
» MIKE McDONALD:  Can you speed 

03:04:08.346 --> 03:04:10.502
that up?  We have fine minutes. 

03:04:10.503 --> 03:04:13.946
» KAT FANG:  I'm done.  
» MIKE McDONALD:  How did you 

03:04:13.947 --> 03:04:16.903
finish so fast?  
» KAT FANG:  I'm really quick.  

03:04:16.904 --> 03:04:19.958
» MIKE McDONALD:  Let's see what
 Kat did.  We need to prove to 

03:04:19.959 --> 03:04:23.506
our investors s that this app 
has traction.  So I need 

03:04:23.507 --> 03:04:25.507
everyone in the audience

03:04:31.200 --> 03:04:34.236
 to go to mojiac.io and start 
playing around with the app.  

03:04:34.237 --> 03:04:36.237
Can we switch back to screen 
upper

03:04:41.114 --> 03:04:45.314
 and start playing around with 
the app.  Can we switch back to 

03:04:41.114 --> 03:04:43.646
screen upper one, please.  Let's
 see what Kat wripd           

03:04:43.647 --> 03:04:47.115
Kat whipped up in that 30 
seconds.  That was really 

03:04:47.116 --> 03:04:50.661
impressive, Kat.  
» KAT FANG:  Yeah, I know it.  

03:04:50.662 --> 03:04:52.662
» MIKE McDONALD:  Or

03:04:55.867 --> 03:04:59.699
 go to mojaic.io, sign in with 
your Google account.  Take a 

03:04:59.700 --> 03:05:03.339
toto              .  I was 
talking to            talking to

03:05:03.340 --> 03:05:07.538
 some of our investors s earlier
 and they told me that mobile 

03:05:07.539 --> 03:05:10.907
social viral gaming is really 
popular for some reason so I 

03:05:10.908 --> 03:05:15.648
guess that's what Kat did, , she
 created a social game where you

03:05:15.861 --> 03:05:19.452
 build, thank you all by the way
 for helping fill this in, a 

03:05:19.453 --> 03:05:22.107
larger emoji because that's    
    that's what the world needs.

03:05:22.108 --> 03:05:26.011
  So hopefully this goes well.  
And we will         we'll be 

03:05:26.012 --> 03:05:32.648
able to get a giant ball pitiful
 of gummy bears s at our start 

03:05:32.649 --> 03:05:35.387
up.  Thank you very much and 
enjoy the rest of I/O     I/O.  

03:05:39.919 --> 03:05:42.131
(Session concluded).  

03:08:42.264 --> 03:08:43.048
.    
.    

03:08:43.049 --> 03:08:43.906
.    
.    

03:08:43.907 --> 03:08:45.001
.    
.    

03:08:45.002 --> 03:08:47.002
.    
.   

03:08:56.123 --> 03:09:01.346
   . 
11:30 a.m.                   

03:09:01.347 --> 03:09:05.327
11:30 a.m.    
What's new in Android 

03:09:05.328 --> 03:09:07.328
development tools.  

03:09:13.886 --> 03:09:15.886
Development Tools    
(Standing by).  

03:09:21.731 --> 03:09:23.845
» TOR NORBYE:                 
» XAVIER DUCROHET: 

03:29:56.522 --> 03:29:58.697
pplause). 
» So, good morning.  Welcome to 

03:29:58.698 --> 03:30:00.698
our session

03:30:02.274 --> 03:30:05.574
 on what's new in Android 
development tools.  My name is 

03:30:05.575 --> 03:30:13.858
Jamal.  I'm here with with 
Xavier and Tor.  As you know, 

03:30:13.859 --> 03:30:20.108
Android studio is the official 
for developing apps provided by 

03:30:20.109 --> 03:30:24.298
Google.  We work hand in hand to
 ensure all the features are 

03:30:24.299 --> 03:30:30.832
tightly integrated inside of 
Android studio.  Its      .  

03:30:30.833 --> 03:30:32.935
It's our teams mission to ensure
 that he                   to 

03:30:32.936 --> 03:30:35.931
ensure that we are are efficient
 and productive developers   

03:30:36.123 --> 03:30:39.545
ers.  I thank you for your 
feedback so far in making 

03:30:39.546 --> 03:30:41.546
Android studio

03:30:43.245 --> 03:30:44.262
 great.  Before we jump into the
 new features I want to spend a 

03:30:44.263 --> 03:30:47.081
few moments talking about the 
features we launched since we 

03:30:47.082 --> 03:30:49.995
last spoke with you last year in
 case you missed them.  Last 

03:30:49.996 --> 03:30:54.196
year I/O gave you a preview of 
Android studioone           

03:30:54.197 --> 03:30:57.105
studio 2.2 which included

03:31:00.481 --> 03:31:05.752
 new things.  At around November
 we gave you a preview of 

03:31:05.753 --> 03:31:10.957
Android studio 2.3 which 
included instant run update, 

03:31:10.958 --> 03:31:18.185
lint baseline and constraint 
layout.  And this is            

03:31:19.362 --> 03:31:26.029
 And this past March we had a 
few releases of Android studio 

03:31:26.030 --> 03:31:30.637
2.4.  We are not going to be 
releases 2.4.  Instead we are 

03:31:30.638 --> 03:31:35.069
releasing Android studio 3.0.   

03:31:35.070 --> 03:31:37.070
(Applause)

03:31:39.432 --> 03:31:40.855
. 
» JAMAL EASON:  So we made the 

03:31:40.856 --> 03:31:42.807
shift twor                the 
shift for two reasons.  As we 

03:31:42.808 --> 03:31:47.495
are developing features we 
realized all the work going 

03:31:47.496 --> 03:31:52.834
inside this release didn't seem 
indicative of one

03:31:56.265 --> 03:32:00.970
 change.  A change allows s us 
to scale how faster we build 

03:32:00.971 --> 03:32:06.431
speeds.  We have features across
 the entire range of feature 

03:32:06.432 --> 03:32:09.923
sets from buildings           
building, testing and optmation

03:32:10.078 --> 03:32:13.667
           optimizing your 
application.  I'm going to 

03:32:13.668 --> 03:32:21.029
invite Tor up to go over the 
cool features of Android 3.0    

03:32:22.068 --> 03:32:27.201
 3.0 and after that have      
have sav come

03:32:30.939 --> 03:32:33.688
        Xav come up.  
» TOR NORBYE:  We picked up tons

03:32:34.100 --> 03:32:38.066
 of great features that I'm not 
going to have time to show.  

03:32:38.067 --> 03:32:41.731
I'll highlight           
highlight a couple.  There's 

03:32:41.732 --> 03:32:45.886
parameter hints.  And there's 
emojis s in comments.  Sometimes

03:32:46.079 --> 03:32:48.953
 when you're communitying on 
slow code you want to use a 

03:32:48.954 --> 03:32:54.173
snail emoticon.  Anyway the big 
news for us is we are supporting

03:32:54.712 --> 03:32:57.806
 call in.  So in the -- yeah.  
(Applause)

03:33:00.873 --> 03:33:04.463
.   
In the new project wis yard     

03:33:04.648 --> 03:33:10.164
     wizard there's a check box 
or in an existing project and it

03:33:10.165 --> 03:33:14.879
 will walk you through upgrading
 your project         project 

03:33:14.880 --> 03:33:20.712
depend sis.               depend
cies.  Or you can take an 

03:33:20.713 --> 03:33:24.965
existing class and run it 
through a converter.  Sometimes 

03:33:24.966 --> 03:33:29.269
it does a fantastic job like 
here it realized I want        I

03:33:29.270 --> 03:33:33.357
 want stream interpolation and 
it uses structuring declarations

03:33:33.797 --> 03:33:37.621
 s here.  It sometimes gets 
warnings.  It's not always 

03:33:37.622 --> 03:33:40.898
perfect.  Here is another e
xample.  Here we have a data 

03:33:40.899 --> 03:33:44.585
class in Java.  There's a one 
line version of this you could 

03:33:44.850 --> 03:33:48.142
write in call in but if you run 
it through the convert you     

03:33:48.143 --> 03:33:52.814
you end up with code that is 
completely accurate but not the 

03:33:52.815 --> 03:33:55.192
most optimal.  It's really a 
great starting point. 

03:33:58.512 --> 03:34:01.934
 And typically you massage it a 
bit more.  So here is a call in

03:34:02.054 --> 03:34:05.656
    in file showing several 
language features.  You have the

03:34:05.657 --> 03:34:09.127
 four loop with ranges.  You 
have a let statement with a 

03:34:09.128 --> 03:34:13.999
lambda and a when statement.  We
 don't have time to cover the 

03:34:14.000 --> 03:34:17.888
language today.  There's going 
to be talks tomorrow that you 

03:34:17.889 --> 03:34:20.356
don't want to miss.  We might 
start             might start 

03:34:20.357 --> 03:34:26.323
dauk            start talking 
about performance.    

03:34:26.324 --> 03:34:31.100
So you can invoke the show byte 
code window.  This is going to 

03:34:31.101 --> 03:34:34.647
show the byte code for the 
current statement.  If you read 

03:34:34.648 --> 03:34:39.880
byte code, that's great.  If you
 don't, there's a really great 

03:34:39.881 --> 03:34:42.947
decompile           decompile 
button.  When you click on this 

03:34:42.948 --> 03:34:46.325
I get the equivalent Java code. 
 Now I can look at this and say 

03:34:46.326 --> 03:34:51.464
that range loop turns into a 
pure why loop and the let 

03:34:51.465 --> 03:34:56.406
statement is an if check.  So 
don't prema             don't 

03:34:56.407 --> 03:35:00.682
prematurely ily let it president
 mice in                      it

03:35:01.063 --> 03:35:03.063
 optimize in your head

03:35:08.198 --> 03:35:12.331
and the let statement is an if 
check.  So don't prematurelily 

03:35:08.198 --> 03:35:10.089
let it optimize in your head.  
All the Android link checks that

03:35:10.090 --> 03:35:13.770
 ran on Java files, there's 
about 80 of those, they're all 

03:35:13.771 --> 03:35:17.801
running on call in as well.  
There's no            There's no

03:35:17.802 --> 03:35:20.987
 gap.    
(Applause).   

03:35:20.988 --> 03:35:26.072
Let's talk about the layout 
editors s.  So we launched the 

03:35:26.073 --> 03:35:29.768
new layout he had ters     
        editor last year at I/O

03:35:29.988 --> 03:35:34.695
     I/O and continued work on 
it.  There's a better handling 

03:35:34.696 --> 03:35:37.113
of errors and skon straint
                  and 

03:35:37.114 --> 03:35:41.001
concentrate layout.  First we 
recently had     had chain.  A 

03:35:41.002 --> 03:35:44.394
chain is a way       a way to 
distribute widget yoit

03:35:45.196 --> 03:35:50.654
             widgets s.    s.  
Say I want to create a 

03:35:50.655 --> 03:35:52.875
horizontal chain.  There's a 
beautiful chain graphic here.  

03:35:52.876 --> 03:35:58.806
And I can align this 
horizontally.  Now there's a 

03:35:58.807 --> 03:36:03.206
chain cycle button.  I can click
 on this to explore how the 

03:36:03.207 --> 03:36:10.304
chains are behaving.  Another 
feature is constraint 1.1.  In 

03:36:10.305 --> 03:36:13.784
1.1 we have barriers s.  The 
easiest way to explain it is to 

03:36:13.785 --> 03:36:16.692
show it.  If I can move this 
widget you can see this line 

03:36:16.693 --> 03:36:20.603
next to it basically we    we 
make sure we don't every lap 

03:36:20.604 --> 03:36:23.710
with it.  It's a good way to 
make layouts s that respond 

03:36:23.711 --> 03:36:28.038
correctly.  And that's actually 
all I'm going to say about 

03:36:28.039 --> 03:36:30.705
constraint layout because 
there's a whole talk about it in

03:36:31.179 --> 03:36:33.570
 a couple of hours that you 
don't want the miss.  Another 

03:36:33.571 --> 03:36:37.250
feature we    we added in the 
support for sample data.  In 

03:36:37.251 --> 03:36:40.187
your apps you might have a list 
for your

03:36:44.133 --> 03:36:44.795
 recycle         recycle view, 
it's pretty common, and it looks

03:36:44.796 --> 03:36:49.801
 like nothing the layout editor 
when you run.  So a couple years

03:36:50.003 --> 03:36:55.337
 ago we added some support to 
deal with this with design time 

03:36:55.338 --> 03:36:58.670
attributes.  You can put string 
in and start approximateing what

03:36:59.613 --> 03:37:02.748
 your app is going to do.  But 
that's terrible.  So we 

03:37:02.749 --> 03:37:07.130
continued enhancing this.  So 
now we have this new sample 

03:37:07.131 --> 03:37:13.615
resource type so for example I 
can pull in some text or pull in

03:37:14.588 --> 03:37:20.845
 let's say date of the week.  
But the real power of this is 

03:37:20.846 --> 03:37:25.658
when you define your own data.  
Here is this new JSON file that 

03:37:25.659 --> 03:37:30.667
I've created in my project.  
This is for a fitness app.  

03:37:30.668 --> 03:37:35.268
There's various activities that 
this app is modeling.  Biking 

03:37:35.269 --> 03:37:39.407
and walking and so forth.  We 
even of         even have some 

03:37:39.408 --> 03:37:42.566
icons.  I can go into my item 
layout that I'm using in the 

03:37:42.567 --> 03:37:46.018
list and start binding these 
things.  So code completion 

03:37:46.019 --> 03:37:52.320
works here for the app sample 
tag.  Picking out all     all 

03:37:52.321 --> 03:37:55.474
the attributes.  I can hook up 
the description property to this

03:37:55.946 --> 03:37:59.633
 next text vusmt when I come 
back to this         to this I 

03:37:59.634 --> 03:38:03.992
get a layout that looks much 
more like the real app.   

03:38:07.931 --> 03:38:08.071
(Applause)                       
                                                                          iew.

03:38:08.072 --> 03:38:12.272
  When I come back to this I get
 a layout that looks much more 

03:38:08.072 --> 03:38:09.461
like the real app. 
(Applause).   

03:38:09.462 --> 03:38:12.521
The last feature I'm     I'm 
going to show is support for 

03:38:12.522 --> 03:38:17.698
downloadable fonts.  In O you 
can declare downloadable fants

03:38:17.898 --> 03:38:21.581
       fonts, there's lots of 
advantages.  The way this works 

03:38:21.582 --> 03:38:26.043
is I select a text view and in 
the layout editor.  In the font 

03:38:26.044 --> 03:38:29.157
family chooser there's a more 
font      font item on the bosmt

03:38:29.598 --> 03:38:32.335
 when I invoke that I can 
produces                I can 

03:38:32.336 --> 03:38:37.990
browse the online available 
fonts.  In search I can pick my 

03:38:37.991 --> 03:38:41.750
favorite.  You can see I get 
this new font resource in my 

03:38:41.751 --> 03:38:47.998
project and it works the way you
 would expect.  Another O 

03:38:47.999 --> 03:38:52.534
feature we added is support for 
adaptive eye sons s.  In        

03:38:52.701 --> 03:38:56.813
       icons s.  We now help you
 create these so we help you 

03:38:56.814 --> 03:39:00.510
with the foreground lay     lay
er.  You can modify the 

03:39:00.511 --> 03:39:04.350
background layer.  I don't know 
if you can tell from the screen 

03:39:04.351 --> 03:39:07.969
but there's also options to show
 safe zones s, grid and so forth

03:39:08.179 --> 03:39:10.665
.  So this hopefully helps you 
put all

03:39:13.738 --> 03:39:17.494
 the right bits in the right 
places.  There's a device 

03:39:17.495 --> 03:39:22.234
explorer now finally.  So here 
you can go in and explore files 

03:39:22.235 --> 03:39:25.191
on your file system.  You can 
click on files to see them 

03:39:25.192 --> 03:39:29.706
locally.  And you can right 
click on folders s to upload and

03:39:30.974 --> 03:39:33.426
 download and that kind of thick
               kind of thing.  

03:39:33.427 --> 03:39:35.487
Thank you.    
(Applause).   

03:39:35.488 --> 03:39:40.290
Let's talk about instant apps.  
So we have a lot of support for 

03:39:40.291 --> 03:39:43.300
instant apps.  We have support 
in the build system which I 

03:39:43.301 --> 03:39:47.088
think Xav will talk about.  We 
have new whizard   ard for 

03:39:47.089 --> 03:39:54.498
creating feature modules.  The 
hardest part is         part is 

03:39:54.499 --> 03:39:58.185
to break up your monolithic app.
  I'm going to take this simple 

03:39:58.186 --> 03:40:01.834
example first.  Here I have a 
class, I'm going to extract it 

03:40:01.835 --> 03:40:06.823
so I invoke the margin factoring
.  You can see it offers s to 

03:40:06.824 --> 03:40:10.983
pull four classes out into this 
new module and that's because 

03:40:10.984 --> 03:40:15.188
this class depends on three 
other classes.  You'll pull 

03:40:15.189 --> 03:40:21.244
along with it resources and 
manifest.  Here are          

03:40:21.245 --> 03:40:26.037
Here is a more realistic example
.  I'm going to try to pull this

03:40:26.038 --> 03:40:29.714
 activity into its own module.  
Here you can see it's pulling a 

03:40:29.715 --> 03:40:33.232
lot.  We have spa get         
spaghetti because my class 

03:40:33.233 --> 03:40:37.328
depends on this class which is 
then pointing at some other 

03:40:37.329 --> 03:40:43.091
stuff.  This is real spaghetti 
so what you have to decide now 

03:40:43.092 --> 03:40:47.232
is where to cut the spaghetti.  
You have to fix the code 

03:40:47.233 --> 03:40:51.719
afterwards.  We have an initial 
version of this in canary one 

03:40:51.720 --> 03:40:54.345
but this is a feature we are 
still working on.   

03:40:54.346 --> 03:40:59.533
We also improved d the APK and 
lies                  d the APK 

03:40:59.534 --> 03:41:02.261
and             d the APK 
analyzer.  What I can do here is

03:41:02.458 --> 03:41:08.650
 load in an APK that is a 
release binary.  Last year we 

03:41:08.651 --> 03:41:11.820
launched this and had a lot of 
support for resources.  This 

03:41:11.821 --> 03:41:20.478
year we added a bunch of support
 for code and decks.  So I can 

03:41:20.479 --> 03:41:25.004
right click on a class and we 
disassemble the byte code for 

03:41:25.005 --> 03:41:30.815
you.  You can notice that the 
packaging here is A dot A dot A.

03:41:30.816 --> 03:41:35.704
  We didn't write the code that 
way.  This is because this      

03:41:35.705 --> 03:41:41.309
this is a pro-guarded APK.  Now 
we have the button for the 

03:41:41.310 --> 03:41:45.446
mapping file.  When we do that, 
let me find if mapping          

03:41:46.006 --> 03:41:50.313
          me find the mapping 
file, you can see we now show 

03:41:50.314 --> 03:41:53.945
the original links instead in 
the next file which is pretty 

03:41:53.946 --> 03:41:56.611
handy.   
(Applause).   

03:41:56.612 --> 03:42:03.414
There are some more      more 
featureser here        here I 

03:42:03.415 --> 03:42:07.218
can right click and we have a 
compare           a compare 

03:42:07.219 --> 03:42:10.506
button on the right.  I need to 
keep this class xor           

03:42:10.507 --> 03:42:14.123
class for the release.  Or 
conversely I might be           

03:42:14.124 --> 03:42:14.413
 I might be surprise    
                 I might be 

03:42:14.414 --> 03:42:20.725
surprised this clays in   
            this class is in the

03:42:20.726 --> 03:42:24.367
 release.  We have another 
feature for APKs s and that is 

03:42:24.368 --> 03:42:30.157
APK debugging.  The way this 
works is from the welcome screen

03:42:30.412 --> 03:42:35.312
 or from this here you can point
 to a random APK.  Let's see.  I

03:42:35.313 --> 03:42:41.829
 don't know why it's not showing
 my home folder.  I think I'm 

03:42:41.830 --> 03:42:47.361
having network issues.  This is 
very sad.  All right.  I'm just 

03:42:47.362 --> 03:42:51.493
going to talk through it.  
Basically if you're a game 

03:42:51.494 --> 03:42:55.381
developer we give you a way to 
point to an APK and we make a 

03:42:55.382 --> 03:42:58.886
shell project for you based on 
the APK analyzer where we show 

03:42:58.887 --> 03:43:00.966
you the sources inside the  
          inside the APK on the 

03:43:00.967 --> 03:43:05.268
left and let you map sources, 
the Java source code as well as 

03:43:05.269 --> 03:43:07.131
the shared               as the 
shared libraries.  We let you 

03:43:07.132 --> 03:43:13.365
drop in an SO with            an
 SO with debugable symbols s.  

03:43:13.366 --> 03:43:15.606
So I'm really sad that didn't 
work.   

03:43:15.607 --> 03:43:19.403
All right.  Next I should talk 
about the profiler.  This is a 

03:43:19.404 --> 03:43:22.956
really big feature for us with 
lots of people working on it.  

03:43:22.957 --> 03:43:26.678
Here is how it works.  I've 
started running my app, it's an 

03:43:26.679 --> 03:43:29.418
image app.  In fact you probably
 see this in the keynote.  I 

03:43:29.419 --> 03:43:34.771
started running it.  The way the
 profiler work is I can open up 

03:43:34.772 --> 03:43:41.091
the profiler tab and it will 
attach to the process.  No 

03:43:41.092 --> 03:43:43.092
connected devices 

03:43:45.134 --> 03:43:47.134
s.  I'm going to run it again

03:43:52.489 --> 03:43:57.223
.  It's very unhappy.  I'm going
 to kill it and start over.   

03:44:08.315 --> 03:44:10.315
television, isn't       isn't it
? 

03:44:14.020 --> 03:44:18.444
 All right.  It should work on 
making that image system boot 

03:44:18.445 --> 03:44:24.184
faster.    
(Applause).   

03:44:24.185 --> 03:44:28.582
All right.  So here we have it. 
 And no connected devices s.  

03:44:28.583 --> 03:44:32.598
Wow.    
(Laughter).   

03:44:32.599 --> 03:44:36.206
You know what, I say we -- there
 we go.    

03:44:36.207 --> 03:44:38.207
(Applause).  

03:44:44.669 --> 03:44:47.724
it's attach             it's 
attached to this process and 

03:44:47.725 --> 03:44:50.776
it's showing me what is 
happening with the CPU, memory 

03:44:50.777 --> 03:44:54.053
and network.  Let's make some 
stuff happen in the app.  I'll 

03:44:54.054 --> 03:45:02.199
click on an image and, wow, 
network is very unhappy.  Okay. 

03:45:02.458 --> 03:45:07.056
 All right.  Super slow.  Anyway
 it works because if we look at 

03:45:07.057 --> 03:45:10.413
the background here and I click 
on the memory profiler here we 

03:45:10.414 --> 03:45:15.645
have the CPU, memory and network
.  The purple dots are my touch 

03:45:15.646 --> 03:45:18.907
events s.  You can see the 
activities happening, things 

03:45:18.908 --> 03:45:22.692
like stopped and destroyed, it's
 very small but it's listing 

03:45:22.693 --> 03:45:25.299
activity names up here.  Let's 
start with the network.  This is

03:45:25.958 --> 03:45:29.592
 a timeline I can scroll in so 
I'm going to click down in the 

03:45:29.593 --> 03:45:32.693
network area and here I can see 
the network traffic and radio 

03:45:32.694 --> 03:45:35.857
traffic that happened in this 
time interval.  I can zoom in on

03:45:35.858 --> 03:45:38.921
 something like this and it will
 show me if network calls that 

03:45:38.922 --> 03:45:43.111
happened during that time and I 
can click on flar         on 

03:45:43.112 --> 03:45:45.112
particular network requests

03:45:47.539 --> 03:45:52.478
.   .  You have to opt in this 
so go to your run configure and

03:45:52.658 --> 03:45:57.052
               config and     
and there's a profiling tab.  We

03:45:57.249 --> 03:46:03.105
 look for usages s of HTTP URL 
connection.  If your app is 

03:46:03.106 --> 03:46:10.718
using that or anything based on 
it, and we               on it. 

03:46:13.132 --> 03:46:18.450
We also added support in Android
 O for basically doing this 

03:46:18.451 --> 03:46:21.044
snumentation      
instrumentation   

03:46:21.402 --> 03:46:23.161
                           this 
instrumentation on the fly that.

03:46:23.162 --> 03:46:27.889
  Will be         Will be 
enabled in an upcoming build of 

03:46:27.890 --> 03:46:34.266
Android studio.  Let's look at 
the CPU profileer.  I'm going to

03:46:34.267 --> 03:46:37.408
 click in here.  I can see the 
thread activity.  I'm going to 

03:46:37.409 --> 03:46:42.037
jump to be live again.  And then
 I'm going to do some stuff.  So

03:46:42.284 --> 03:46:46.416
 I'll click on this image.  I 
forget what I want to do is 

03:46:46.417 --> 03:46:49.499
start collecting samples.  I'm 
clicking on the recording and 

03:46:49.500 --> 03:46:51.696
now it's gathering more 
information.  Then then I'll

03:46:52.614 --> 03:46:56.873
                And then I'll do
 some snuff the app like      

03:46:57.211 --> 03:46:59.723
                      do some 
stuff in the app and now I'll 

03:46:59.724 --> 03:47:02.703
stop recording.   
So now the timeline is showing 

03:47:02.704 --> 03:47:06.008
me here that during this inter 
      interval we had more 

03:47:06.009 --> 03:47:10.258
information and I can stop, I 
can click on a particular thread

03:47:10.504 --> 03:47:13.578
 so the thread display there's
         there's the middle and 

03:47:13.579 --> 03:47:16.210
you can see that three looks 
interesting.  I'm click on that.

03:47:16.211 --> 03:47:22.279
  You can see a flame chart on 
the bottom.  This is based on --

03:47:22.879 --> 03:47:25.477
 I can narrow my focus on what 
I'm particularly interested in. 

03:47:25.730 --> 03:47:30.255
 We also have a -- this is the 
flame chart.  And we have top 

03:47:30.256 --> 03:47:34.549
down and bottom up displays s of
 the frames.  Here I can sort in

03:47:34.707 --> 03:47:39.156
 descending order of method 
calls, , for example.  There's

03:47:39.516 --> 03:47:45.498
          .  That's the CPU 
profileer.  Last but not     not

03:47:45.499 --> 03:47:48.070
 least we have the network
             the network 

03:47:48.071 --> 03:47:53.606
profiler.  I think I was told 
about five mega bytes per hour 

03:47:53.607 --> 03:47:57.599
is what this cost.  Now I'm 
going to go live and we are are 

03:47:57.600 --> 03:48:00.750
going to look at memory.  I'm 
going to go inside the

03:48:00.928 --> 03:48:02.570
                  to go inside 
the app and skit to clear

03:48:02.571 --> 03:48:06.170
                   and skit to 
clear all                       

03:48:06.171 --> 03:48:10.121
and skit to clear              
     and skit          and ask 

03:48:10.122 --> 03:48:15.095
it to clear all of its cashes
            its catches        

03:48:15.256 --> 03:48:18.706
     its caches s.  This is 
showing you the memory of the 

03:48:18.707 --> 03:48:23.977
app right noup.  And let's start
 collecting allocation stack 

03:48:23.978 --> 03:48:27.365
choice.  This means any type of 
allocation in the app is going 

03:48:27.366 --> 03:48:32.800
to record where it's done.   .  
Now I'm going to do more memory 

03:48:32.801 --> 03:48:36.072
intensive activities.  You can 
see in the background the 

03:48:36.073 --> 03:48:40.160
metrics are scrolling as its 
realizing the heap is larger.  

03:48:40.161 --> 03:48:45.420
Now let's go in and grab a heap 
dump here.  So now it's fetching

03:48:46.201 --> 03:48:48.503
 a heech         a heap dump.  
And that should be           

03:48:48.504 --> 03:48:52.860
should be fast.  So here      
here we can see basically a 

03:48:52.861 --> 03:48:56.226
summary of the objects s in the 
heap.  If I click on for example

03:48:58.730 --> 03:49:01.412
 the bit map there's 76  
          there's 76 bit maps, I

03:49:01.413 --> 03:49:05.965
 can see those objects s.  I can
 click on a bit map class.  I 

03:49:05.966 --> 03:49:08.724
can now start chasing down the 
references if I want to look for

03:49:08.725 --> 03:49:13.479
 a leak.  I can also see which 
bit map is this.  Or if this was

03:49:14.352 --> 03:49:18.321
 allocated during my allocation 
tracking run I can see the 

03:49:18.322 --> 03:49:22.700
allocation stack choice where 
this came from.  And for other 

03:49:22.701 --> 03:49:27.256
classes for example string we 
show the actual string.  That's 

03:49:27.257 --> 03:49:30.121
the new profiler.  We hope it 
makes your apps better.   

03:49:30.122 --> 03:49:32.481
(Applause).  

03:49:38.327 --> 03:49:43.148
over to Xav who is going to show
 you how we make your builds 

03:49:43.149 --> 03:49:46.321
perform faster.  
» XAVIER DUCROHET:  Thank you.  

03:49:47.503 --> 03:49:54.467
» XAVIER DUCROHET:  Let's start 
with a story.  Finally the URL 

03:49:54.468 --> 03:49:59.708
is made on Google droth
                 on Google.com. 

03:49:59.914 --> 03:50:04.129
  .  You can use the Google 
shock so it's much easier.  You 

03:50:04.130 --> 03:50:08.073
don't have to remember the URL. 
 We are publishing all the super

03:50:08.523 --> 03:50:12.063
 libraries through the story and
 we have applauded all the 

03:50:12.064 --> 03:50:15.638
triggers s version of the sue 
better lie greater             

03:50:15.639 --> 03:50:18.513
library.  You can start using

03:50:23.649 --> 03:50:26.549
 library.  You can start using 
it.  We know it's a big

03:50:26.733 --> 03:50:31.198
            it's a big problem 
for developers   ers.  We spent 

03:50:31.199 --> 03:50:34.528
the last few quarters folks
       focusing          

03:50:34.529 --> 03:50:41.594
focusing on that.  We looked at 
the bigger ones that take the 

03:50:41.595 --> 03:50:46.480
longest to run and looked at 
what we can do to make them 

03:50:46.481 --> 03:50:54.577
incremental.  As of 3.5 it's by 
default.  It doesn't           

03:50:54.708 --> 03:50:58.551
  .  It's something we are 
working with to fix.  Decks

03:51:01.784 --> 03:51:03.784
   xing    

03:51:05.869 --> 03:51:09.930
  Dexing works with -- that will
 make a big difference.  Finally

03:51:11.164 --> 03:51:18.248
 APK packaging in 2.2 we have 
incremental paneling          

03:51:18.249 --> 03:51:22.009
paneling          panelingic    
        paneling          

03:51:22.010 --> 03:51:26.945
paneling          packages.  We 
made a lot of progress for the 

03:51:26.946 --> 03:51:34.973
final 3.0.  And if you're using 
shrinking in order            

03:51:35.174 --> 03:51:41.382
ing, we have an incremental sh
rinker so you can use that just 

03:51:41.383 --> 03:51:45.453
for debug.    
So the second thing I want to 

03:51:45.454 --> 03:51:50.575
talk about is the build cache.  
Greater in 3.5 released         

03:51:50.576 --> 03:51:54.649
 released build cache that works
 at the task level so it looks 

03:51:54.650 --> 03:52:01.520
at the hash of all your inputs s
 and now it can use that cache 

03:52:01.521 --> 03:52:03.521
as a key in the cache

03:52:06.115 --> 03:52:10.248
 of all your inputs and now it 
can use that cache as a key in 

03:52:06.115 --> 03:52:09.939
the cache.  It's going to get 
the output from the cache rather

03:52:09.940 --> 03:52:12.255
 than rerun the cache so it 
should be           should be 

03:52:12.256 --> 03:52:16.096
faster.    
There's a different version of 

03:52:16.097 --> 03:52:18.689
the cache, the first one is 
local.  So it's good when you're

03:52:18.879 --> 03:52:20.879
 switching between branches

03:52:25.029 --> 03:52:30.444
 and then      then the other 
one is the distributed one share

03:52:30.445 --> 03:52:35.830
 with team mates and build 
server.  They have a limitation 

03:52:35.831 --> 03:52:45.219
that you can use, , gradle 
enterprise.  And a API

03:52:45.948 --> 03:52:50.714
 for your back end.    
We are planning to role out more

03:52:51.057 --> 03:52:55.734
 of those and most of them by 
the time 3.0 is final so that 

03:52:55.735 --> 03:52:59.543
should make a big improvement.  
Another thing is how should I 

03:52:59.544 --> 03:53:03.584
organize            I organize 
my project?  How many modules?  

03:53:03.585 --> 03:53:06.485
So generally more modules mean 
you can go around

03:53:09.882 --> 03:53:12.193
 increment in some of the tasks 

03:53:16.282 --> 03:53:21.331
s.  If you want to have better 
control of API and dependcies, 

03:53:21.332 --> 03:53:26.823
your business logic should 
probably not have -- with 

03:53:26.824 --> 03:53:33.380
cacheing in particular having 
more modules means having more 

03:53:33.381 --> 03:53:36.582
to a cache and that's better.  
In     

03:53:39.611 --> 03:53:43.394
.  There's a talk today at 5:30 
talking about               

03:53:43.395 --> 03:53:46.126
talking about building up speed 
and they will talk about that at

03:53:46.357 --> 03:53:50.166
 that point.    
While I'm adding more modules 

03:53:50.167 --> 03:53:54.195
and my build is smaller, what 
gives?  This is really what we 

03:53:54.196 --> 03:53:59.741
focused on in 3.0.  The first 
thing we looked at was the 

03:53:59.742 --> 03:54:03.300
startup cost.  The configuration
 time that happens every time 

03:54:03.301 --> 03:54:06.719
you want to do build or sync.  
We have a project from a develop

03:54:07.706 --> 03:54:13.066
er, about twon      135 modules
         modules and it took 

03:54:13.067 --> 03:54:19.267
almost 200 to configure.  We 
figuresd d that      d that

03:54:20.262 --> 03:54:24.150
                  We fixed that 
but there are still things we 

03:54:24.151 --> 03:54:26.151
shouldn't           shouldn't be
 doing and we couldn't          

03:54:26.152 --> 03:54:29.194
couldn't really fix it properly 
without a lot of the new APIs s.

03:54:29.195 --> 03:54:31.195
  In

03:54:33.227 --> 03:54:36.850
 3.0 we finally fixed that.  
There's still room for 

03:54:36.851 --> 03:54:39.566
improvement but we will do that 
later.  The other thing we 

03:54:39.567 --> 03:54:44.989
looked at was bottle neck when 
you have a lot of modules.  It's

03:54:44.990 --> 03:54:49.186
 something we worked closely 
with the team and finally we can

03:54:49.187 --> 03:54:52.494
 fix that.  Let's look at an 
example here.  Here on the left 

03:54:52.495 --> 03:54:57.013
we have tasks that belong to an 
app that consumes a library and 

03:54:57.014 --> 03:54:59.274
a task on the right.  Let's go 
through what happened in the 

03:54:59.275 --> 03:55:01.936
build and we are going to 
basically build all the elements

03:55:02.114 --> 03:55:10.279
 s of the app of the library and
 package them and unzip that

03:55:10.469 --> 03:55:15.251
      that AAR and consume it on
 the app.  Again with those new 

03:55:15.252 --> 03:55:19.609
APIs s we that have we can 
public lush all         

03:55:19.732 --> 03:55:25.941
            can publish all 
those elements s and the build 

03:55:25.942 --> 03:55:29.743
can look something like that.  
As soon as it's slabl        

03:55:30.534 --> 03:55:31.081
       as it's available
                   as it's 

03:55:31.082 --> 03:55:36.829
available we can keep building 
the library but you can start 

03:55:36.830 --> 03:55:40.009
billing the app                 
              you can start 

03:55:40.010 --> 03:55:42.010
building the app, too

03:55:49.393 --> 03:55:52.740
.  All right.  Let's talk about 
new build features.  I want to 

03:55:52.741 --> 03:55:57.143
mention that it's just the first
 day.  We are not staying

03:55:57.282 --> 03:56:01.158
             not saying it's 
going to fix everything.  It's 

03:56:01.159 --> 03:56:07.866
just like a first stepped.  Some
 new build features.  First is 

03:56:07.867 --> 03:56:10.858
Java         is Java

03:56:14.153 --> 03:56:16.153
 eight language features

03:56:18.612 --> 03:56:23.223
.  All you have to set up is the
 source compatibility and the 

03:56:23.224 --> 03:56:28.117
target compatibility.  The build
 looks something like this.  We 

03:56:28.118 --> 03:56:34.710
go from Java C to convert that 
to Java seven byte      byte 

03:56:34.711 --> 03:56:43.084
code and transform that and to 
dexing.  Just as a heads up 

03:56:43.085 --> 03:56:49.020
later in 3.1 we are going to do 
those steps and do the transform

03:56:49.825 --> 03:56:55.413
 after.  The second feature I 
want to talk about is dependency

03:56:55.575 --> 03:57:00.133
 management.  There's a lot of 
changes here in 3.0.  If you 

03:57:00.134 --> 03:57:04.662
have an app and a library right 
now the library or the app only 

03:57:04.663 --> 03:57:07.886
consumed d the latest version of
 the library.  So on the right 

03:57:07.887 --> 03:57:11.257
you have the configuration of 
the library and then you have 

03:57:11.258 --> 03:57:17.911
the configuration of the app, 
debug, release and compile 

03:57:17.912 --> 03:57:23.845
packaging.  You can go through 
that manually but it doesn't 

03:57:24.077 --> 03:57:29.201
        doesn't quite work very 
well.  In 3.0 things are more

03:57:29.516 --> 03:57:32.288
      more xil indicated, what

03:57:32.289 --> 03:57:38.728
complicated             more 
complicated.  We have debug 

03:57:38.729 --> 03:57:47.181
element and untime element.  We 
finally fixed that in 3.0 and 

03:57:47.182 --> 03:57:49.888
now the step goes auto      
automatically where you don't 

03:57:49.889 --> 03:57:53.475
have to try to make that work.  
Let's see how it works.  

03:57:53.476 --> 03:57:57.296
Basically we have the ability to
 set up attributes on the 

03:57:57.297 --> 03:58:04.213
configuration object.  We 
created an attribute and debug 

03:58:04.214 --> 03:58:11.304
matches debug and release 
matches release.  If you have 

03:58:11.305 --> 03:58:16.631
flavor, the big matches the 
flavor.  Now of course if you 

03:58:16.632 --> 03:58:20.212
don't have the same number of 
flavor everywhere it going to 

03:58:20.213 --> 03:58:24.293
work like if you don't have them
 in the library, blue debig is 

03:58:24.690 --> 03:58:27.704
going to match with debug 
automatically

03:58:31.717 --> 03:58:32.677
going to match with debug 
automatically.  If you have a 

03:58:32.678 --> 03:58:37.115
library with flavors s but you 
don't ever a flavor in the 

03:58:37.116 --> 03:58:41.249
application you have to fix it. 
 It's called flavor selection.  

03:58:41.250 --> 03:58:45.015
We are going do that where you 
tell the build I want to pick 

03:58:45.016 --> 03:58:47.987
blue instead of orange and then 
it just works.   

03:58:47.988 --> 03:58:51.348
Now if you switch to 3.0 and you
 have              and you have 

03:58:51.349 --> 03:58:55.536
flavors s you're likely to run 
into that error of saying flavor

03:58:56.132 --> 03:59:01.234
 dimension is not required but 
not if you have a singular 

03:59:01.235 --> 03:59:05.502
dimension.  Fixing it is very 
easy.  You have your code and 

03:59:05.503 --> 03:59:10.229
you fix it with that.  You don't
 need to put it in flavor one or

03:59:10.230 --> 03:59:12.744
 flavor two block because 
there's only one dimension.  We 

03:59:12.745 --> 03:59:16.506
fix that for you.  The big 
question is why can't we just

03:59:16.710 --> 03:59:20.711
      just pick up the random 
default value?  Let's go through

03:59:21.048 --> 03:59:24.874
 an example.   .  Here we have 
an app        an app and it 

03:59:24.875 --> 03:59:29.291
requires debug orange.  We have 
a library, one with two flavors

03:59:29.570 --> 03:59:33.843
         flavors, and you can 
see that's not the same orange. 

03:59:33.979 --> 03:59:36.563
 When the app says orange it's 
like I don't know which orange 

03:59:36.564 --> 03:59:41.185
you want.  So that's why we ask 
you to name those dimensions 

03:59:41.186 --> 03:59:44.388
because we are going to use that
 as the name of the attribute.  

03:59:44.389 --> 03:59:50.066
And name of the attribute is 
color blue, color orange, fruit 

03:59:50.067 --> 03:59:53.441
straw       strawberry and we 
can make the right collection

03:59:53.571 --> 03:59:56.069
                      the right 
selection.  You have flavor    

03:59:56.268 --> 04:00:00.558
    flavor selection and you 
need to not just give us plu    

04:00:00.935 --> 04:00:05.601
    us blue but color blue and 
then it works out of the box.   

04:00:05.993 --> 04:00:09.712
Okay.  Let's talk about instant 
apps.  Let's say you have

04:00:13.418 --> 04:00:16.534
 an app that the application 
module, some library module and 

04:00:16.535 --> 04:00:21.303
you want to make some of these 
libraries as features for your 

04:00:21.304 --> 04:00:24.055
instant app.  The first thing 
you're going to do is change 

04:00:24.056 --> 04:00:28.049
some of these plugins s to be 
not library but the feature.  

04:00:28.050 --> 04:00:31.320
And what is nice about that 
feature plug in is that it uses 

04:00:31.321 --> 04:00:35.051
the     s the attribute that 
somebody just talked about so 

04:00:35.052 --> 04:00:37.052
that it publishes both

04:00:40.596 --> 04:00:44.390
 an AR and a feature APK.  When 
an app says hey I depend on you,

04:00:44.608 --> 04:00:48.894
 give me your artifact, it adds 
saying I'm an app and it going 

04:00:48.895 --> 04:00:51.892
to link to it the right 
configuration and consume the 

04:00:51.893 --> 04:00:55.400
feature plug in or as an AR.  
When you have another module 

04:00:55.401 --> 04:00:59.672
that is an instant app and the 
goal of that instant app is not 

04:00:59.673 --> 04:01:04.302
to build anything, it's just to 
package, to grab all of the 

04:01:04.303 --> 04:01:09.384
feature APK then the feature 
plug in will build a feature APK

04:01:09.385 --> 04:01:14.669
 something that you can 
distribute to your phone.  And 

04:01:14.670 --> 04:01:16.836
that's where you can really 
share code without having

04:01:20.875 --> 04:01:23.454
 to do some weird search, just 
change the flug          the 

04:01:23.455 --> 04:01:27.892
plug in and that's it.  If you 
want more information about 

04:01:27.893 --> 04:01:31.820
Android plugs there's a talk at 
3:30 today.  With that, back to 

04:01:31.821 --> 04:01:33.821
Jamal.    

04:01:36.084 --> 04:01:37.694
(Applause). 
» JAMAL EASON:  All right.  So 

04:01:37.695 --> 04:01:40.861
now you've developed and built 
your application.  Now it's time

04:01:41.421 --> 04:01:48.876
 to test.  So we offer a new 
Android emulateor which released

04:01:48.984 --> 04:01:54.666
 about a year half ago         
        a year and a half ago.  

04:01:54.667 --> 04:01:59.679
After launching we talked about 
two pain points for developers

04:01:59.818 --> 04:02:03.349
   ers.  They want to try out 
their end to end flow.  What 

04:02:03.350 --> 04:02:08.068
does the experience look like 
when my user download my app.  

04:02:08.069 --> 04:02:12.179
Or what is the experience of an 
in-app purchase?  The second was

04:02:12.180 --> 04:02:19.439
 around Gap     Google+         
Google Play services.  We added 

04:02:19.440 --> 04:02:24.035
the Google Play store to the 
emulator.    

04:02:24.036 --> 04:02:26.036
(Applause)

04:02:27.473 --> 04:02:30.574
 frf    .   
Now this small step was a lot of

04:02:31.308 --> 04:02:35.675
 work.  There was a lot of 
quality and performance 

04:02:35.676 --> 04:02:40.350
enhancements s.  Along with that
 we also added support for open 

04:02:40.351 --> 04:02:42.351
GL,

04:02:44.370 --> 04:02:48.388
 ES 3.0.  And lastly we    we we
 added proxy support

04:02:54.904 --> 04:02:58.964
.  I want to talk         to 
talk about the impact and 

04:02:58.965 --> 04:03:01.432
applications s of the Play Store

04:03:05.449 --> 04:03:09.146
.  There's access to the 
operating system and your app by

04:03:09.449 --> 04:03:14.729
 everything elevator privileges.
  By adding the Google Play 

04:03:14.730 --> 04:03:19.461
store we have a new edition 
called the Google Play he had

04:03:19.687 --> 04:03:24.181
dation              edition.  If
 you want Google Play and Google

04:03:24.722 --> 04:03:28.279
 APIs s just use the Google Play
 edition.  If you want the deep 

04:03:28.280 --> 04:03:33.513
access and root access you still
 have the edition that's still 

04:03:33.514 --> 04:03:37.964
available.  There's a new app 
bug reporting system.  We heard 

04:03:37.965 --> 04:03:43.216
from some people like I want a 
quick way to have a bug report. 

04:03:43.217 --> 04:03:45.838
 Noi      .  Now with 1 or 2 
clicks        clicks you can 

04:03:45.839 --> 04:03:52.293
create a bug report, do a repo 
step.  It should make it quicker

04:03:53.886 --> 04:03:57.420
 for user development.   
Lastly for those of how do 

04:03:57.421 --> 04:04:00.633
Android Wear development, as you
 heard with Android ware

04:04:01.256 --> 04:04:05.894
              Android Wear we 
added a feature to test that all

04:04:06.114 --> 04:04:09.394
 inside the            inside 
the Android emulator.  Lastly 

04:04:09.395 --> 04:04:16.079
about debugging is the layout in
    inspector.  We have a rich 

04:04:16.080 --> 04:04:22.143
new layout editor which allows s
 you to do new things with your 

04:04:22.144 --> 04:04:27.545
application.  Many times
             .  We went into 

04:04:27.546 --> 04:04:34.076
layout inspector last year to 
help debug your layouts s for 

04:04:34.077 --> 04:04:39.565
Android app.  Lastly optimize.  
So as you heard during the 

04:04:39.566 --> 04:04:43.168
keynote we talked about Android 
vitals, what this really is 

04:04:43.169 --> 04:04:48.003
about is the system health of 
your phone and the apps on it.  

04:04:48.004 --> 04:04:51.115
The way you think about this is 
akin to information that's 

04:04:51.116 --> 04:04:53.771
available.  As you get system 
health information now available

04:04:53.924 --> 04:04:57.369
 through the Google Play console
 or Firebase now you have a list

04:04:57.811 --> 04:05:01.948
 of systems s of               
of symptoms s of what might be

04:05:02.209 --> 04:05:04.513
          might be going on with
 your application.  There's a 

04:05:04.514 --> 04:05:08.428
deeper understanding of what is 
going on.  As Tor showed you 

04:05:08.429 --> 04:05:13.497
this is the Android profiler.  I
 hope you take advantage of all 

04:05:13.498 --> 04:05:16.742
these various tools to 
understand what is going on with

04:05:17.902 --> 04:05:20.777
 the CPU, the memory usage to 
understand what is going on with

04:05:22.425 --> 04:05:28.447
 the memory, and lastly the 
network profiler.    

04:05:28.448 --> 04:05:32.333
The last topic I want to talk 
about is around APK size.  So as

04:05:32.334 --> 04:05:36.335
 you heard on the keynote 
yesterday we announced Android 

04:05:36.336 --> 04:05:42.930
go            Android go.  Many 
times your APK you might have 

04:05:42.931 --> 04:05:46.737
legacy code or things going out 
that you don't remember puting 

04:05:46.738 --> 04:05:52.862
into the app.  We have now added
 additional capable to the APK 

04:05:52.863 --> 04:05:54.863
analyzer

04:05:56.278 --> 04:06:01.944
.  As demonstrated we added 
support, better byte code 

04:06:01.945 --> 04:06:07.298
support and much more.    
And lastly I want to call out a 

04:06:07.299 --> 04:06:12.500
big feature around vector assets
.  I'm a big fanned        fan 

04:06:12.501 --> 04:06:22.093
of using vector assets.  We 
added WebP support.  You can 

04:06:22.094 --> 04:06:27.311
save upwards of 25% in your file
 size which is a huge savings 

04:06:27.312 --> 04:06:31.797
for APK.  If you right       
right click it will auto convert

04:06:32.004 --> 04:06:38.718
 it to webP and you can convert 
it back.  With that, that's 

04:06:38.719 --> 04:06:41.844
Android studio.  So we talked 
about a range of features from 

04:06:41.845 --> 04:06:49.854
develop, adding support, better 
support into the guild system 

04:06:49.855 --> 04:06:51.855
and

04:06:53.000 --> 04:06:56.674
 a whole suite of opzation tools
                   of 

04:06:56.675 --> 04:07:00.171
optimization tools for you.  
With that, that's our talk.  

04:07:00.172 --> 04:07:02.172
Thank you so much.    
(Applause)

04:07:05.094 --> 04:07:08.960
 system and a whole suite of 
optimization tools for you.  

04:07:05.094 --> 04:07:08.360
With that, that's our talk.  
Thank you so much.  

04:07:05.094 --> 04:07:07.094
(Applause).   
(Session concluded)

04:13:17.733 --> 04:13:19.733
.  

04:13:23.604 --> 04:13:25.230
.    
.    

04:13:25.231 --> 04:13:25.493
.    
.    

04:13:25.494 --> 04:13:26.470
.    
.    

04:13:26.471 --> 04:13:28.471
.    
.   

04:13:39.530 --> 04:13:45.869
Twesm           . 
12:30 p.m.  

04:13:52.966 --> 04:13:59.096
What's new in Google Play at I/O
     I/O 2017.         

04:13:59.097 --> 04:14:02.109
(Standing pie)      by).  

04:27:00.717 --> 04:27:02.717
(Music)

04:27:22.030 --> 04:27:24.030
.    

04:28:27.263 --> 04:28:28.881
Eye.   
(Applause)                      

04:28:28.882 --> 04:28:32.761
   .   
(Applause). 

04:28:32.762 --> 04:28:36.355
» Wow, that was fun, wasn't   
     wasn't it?  Good afternoon.

04:28:36.356 --> 04:28:44.368
  Hello.  Hello, everyone.  All 
right.  I'm Purnima             

04:28:44.369 --> 04:28:46.461
I'm Purnima Kochikar and my team
 has the privilege of working 

04:28:46.462 --> 04:28:50.499
with apps and games developers
   ers globally.  The animation 

04:28:50.500 --> 04:28:56.661
you just saw is inspired by the 
amazing content you create which

04:28:56.662 --> 04:29:03.727
 gives people super powers s and
 helps us move the mobile 

04:29:03.728 --> 04:29:07.510
ecosystem forward.    
Thank you.    

04:29:07.511 --> 04:29:11.960
Before we jump into what is new 
on Google Play, let's take a 

04:29:11.961 --> 04:29:15.799
moment to look back at the 
amazing growth we have seen 

04:29:15.800 --> 04:29:20.605
since we met at I/O     I/O a 
year ago.  You heard at the 

04:29:20.606 --> 04:29:25.598
keynote that Android and Play 
are being used by increasing 

04:29:25.599 --> 04:29:30.310
number of users around the world
 and there is now active on 2 

04:29:30.311 --> 04:29:35.982
billion devices         devices 
monthly, and an astounding 80 

04:29:35.983 --> 04:29:37.983
billion apps              
billion apps have been installed

04:29:38.028 --> 04:29:41.570
 from Google Play in the last 12
 months.    

04:29:41.571 --> 04:29:46.476
This is translating into more 
developers   ers finding success

04:29:47.006 --> 04:29:51.312
 on Google Play.  In the last 
year alone, the number of 

04:29:51.313 --> 04:29:55.625
developers   ers with more than 
1 million installs          

04:29:55.626 --> 04:30:01.374
installs grew by 35%.  This is 
phenomenal.  And makes me truly 

04:30:01.375 --> 04:30:04.523
happy.  Give yourselves a very 
big hand.   

04:30:04.524 --> 04:30:06.524
(Applause)

04:30:07.532 --> 04:30:11.764
.   
We are are also investing to 

04:30:11.765 --> 04:30:15.687
enable everyone to pay for your 
apps and games using forms of 

04:30:15.688 --> 04:30:20.466
payment that they prefer.  For 
example, Americans s prefer 

04:30:20.467 --> 04:30:30.141
credit cards, Japanese prefer D
   DCB     DCB, Germans s prefer

04:30:30.660 --> 04:30:37.934
 pay     PayPal.   .  The sheer 
scale of a payment platform that

04:30:38.173 --> 04:30:41.483
 you see behind me continues s 
to amaze me.  As a result we are

04:30:41.914 --> 04:30:45.905
 seeing that increased number of
 people paying for your apps and

04:30:45.906 --> 04:30:52.025
 games than ever before.  In the
 last year alone, the number of 

04:30:52.026 --> 04:30:57.117
new buyers on Play grew by 30%. 
 In particular, we are seeing 

04:30:57.118 --> 04:30:59.314
great traction for the sub 
strappings 

04:31:02.935 --> 04:31:03.809
                       for the 
subscription

04:31:03.810 --> 04:31:05.892
                      for the 
subscription business model.  62

04:31:06.198 --> 04:31:09.241
    62 percent of            
percent of the subscribers s 

04:31:09.242 --> 04:31:13.471
telling us they use their app at
 least once a day.  Beyond 

04:31:13.472 --> 04:31:18.756
payments are he always in   
           also      also invest

04:31:18.944 --> 04:31:23.893
ing in capables s to help you 
reach users in new way

04:31:30.964 --> 04:31:36.097
                                      ilities
 to help you reach users in new 

04:31:30.964 --> 04:31:36.940
way.  Last year in I/O     I/O 
we previewed Android instant 

04:31:36.941 --> 04:31:41.002
apps.  This allows s users to 
get access to your app without 

04:31:41.003 --> 04:31:44.279
the hurdle of having to install 
the app.  We are grateful to 

04:31:44.280 --> 04:31:49.281
many of you I can see you in the
 audience here to worked us   

04:31:49.434 --> 04:31:52.683
                here to worked 
with us to make that vision a 

04:31:52.684 --> 04:31:56.472
reality.  Today we open our 
instant apps to everyone.  I 

04:31:56.473 --> 04:31:58.524
hope you'll all start working on
 them.  

04:32:07.852 --> 04:32:13.751
yesterday we previewed Android 
go    go which is an optimized d

04:32:13.752 --> 04:32:18.006
 version of Android for imaging 
marketing devices.  As you know 

04:32:18.007 --> 04:32:21.551
there are billions of people in 
images        imaging market 

04:32:21.552 --> 04:32:24.850
whose are coming on to mobile 
for the first time.  Please take

04:32:25.465 --> 04:32:27.647
 the time to look at the 
building for billions guidelines

04:32:28.015 --> 04:32:30.785
 to help you gild          you 
build for these sdweess 

04:32:31.546 --> 04:32:33.934
                  for these 
devices s.  Above all, we are 

04:32:33.935 --> 04:32:38.976
taking into account quality in 
every decision we are making on 

04:32:38.977 --> 04:32:43.045
the Play Store.  Through 
programs like early access, we 

04:32:43.046 --> 04:32:51.469
are bringing you dedicated and 
highly motivated 23 million plus

04:32:51.470 --> 04:32:56.191
 people who are willing to test 
your apps and give you feedback 

04:32:56.192 --> 04:32:59.155
while they're still in 
development before you put it up

04:32:59.616 --> 04:33:01.616
 for production.  We are 
engaging

04:33:04.237 --> 04:33:06.780
 with      with Indies around 
the world to find the best

04:33:10.185 --> 04:33:13.299
 quality games and on the Indie 
corner.  And we are also taking 

04:33:13.300 --> 04:33:17.716
into account engage nent
             engagement in all 

04:33:17.717 --> 04:33:22.363
that shape or          shape our
 top charts.  And today this 

04:33:22.364 --> 04:33:26.466
evening we will host the second 
annual Google Play awards

04:33:29.552 --> 04:33:33.362
.  We will be celebrating the 
best of the best, acknowledging 

04:33:33.363 --> 04:33:36.544
great quality in apps and games.
  I hope to see you there.  

04:33:36.545 --> 04:33:41.074
Please come.  Be inspired d.  
And come to celebrate what makes

04:33:41.413 --> 04:33:48.915
 great apps and games.    
So, just as your apps are giving

04:33:49.358 --> 04:33:53.119
 people super powers s, our 
engineering and product teams 

04:33:53.120 --> 04:33:57.549
are working on capabilitys to 
give you the super powers s to 

04:33:57.550 --> 04:34:02.370
succeed on Google Play.    
So are you ready to see what 

04:34:02.371 --> 04:34:06.172
they have been cooking?    
You can do better than that.  A

04:34:06.353 --> 04:34:10.156
ll right.  Put your hands 
together for Matt Henderson, 

04:34:10.157 --> 04:34:12.832
group product manager.    
(Applause). 

04:34:12.833 --> 04:34:20.045
» MATT HENDERSON:  All right.  
Thanks, Purnima.  Hi, everyone

04:34:23.652 --> 04:34:27.123
.  In your organizations who 
else besides you cares about the

04:34:27.124 --> 04:34:30.943
 success of your app?  Who else 
contributes s to the success of 

04:34:30.944 --> 04:34:35.502
your app?  A lot of people, 
right?  And a variety of roles 

04:34:36.217 --> 04:34:40.072
s.    
Have a think about who else in 

04:34:40.073 --> 04:34:42.759
your organization should be
           should be using the 

04:34:42.760 --> 04:34:47.709
Play console.  When we    we 
started the console five years 

04:34:47.710 --> 04:34:51.584
ago, it was a means to get an 
app from A to B #679            

04:34:51.959 --> 04:34:55.317
 A to B.  From developer to the 
phone.  But over the years it's 

04:34:55.318 --> 04:35:02.316
been much more than that.  With 
a variety of users and a variety

04:35:02.672 --> 04:35:09.715
 of features the Play console is
 playing a much broader role in 

04:35:09.716 --> 04:35:16.890
the success of your app.  With 
more features the user base has 

04:35:16.891 --> 04:35:19.437
broadens          broadened to 
different roles in your 

04:35:19.438 --> 04:35:23.168
organizations.  Our users now 
are product managers, marketing 

04:35:23.169 --> 04:35:27.766
managers, test engineers s and 
of course they're Android 

04:35:27.767 --> 04:35:31.168
developers.   
So think about who else in your 

04:35:31.169 --> 04:35:34.257
organization should be          
 should be using the Play 

04:35:34.258 --> 04:35:39.669
console.  Now with that growth 
in the variety of features UI 

04:35:39.670 --> 04:35:42.277
design needs to keep things 
organized so in addition to 

04:35:42.278 --> 04:35:44.119
talking about features today I 
wanted to             I wanted 

04:35:44.120 --> 04:35:49.149
to touch on the UI look and feel
 of the console.  You may have 

04:35:49.150 --> 04:35:52.702
noticed some changes.  We have 
launched a new cleaner and 

04:35:52.703 --> 04:35:57.923
clearer material design based 
play console.  And it has a new 

04:35:57.924 --> 04:36:01.692
name.  The play developer 
console is now just the play 

04:36:01.693 --> 04:36:06.219
console.  This reflects s the 
fact that although all of your 

04:36:06.220 --> 04:36:10.582
organizations develop apps, 
knots all of              , not 

04:36:10.583 --> 04:36:14.136
all of you are developers   ers.
  The user base is    is getting

04:36:14.552 --> 04:36:17.883
 more and more diverse and we 
are playing a more diverse role 

04:36:17.884 --> 04:36:22.428
in the success of your app.  
Early feedback about the UI 

04:36:22.429 --> 04:36:27.600
suggests we are on the right 
track such as this from the E 

04:36:27.601 --> 04:36:29.601
commerce

04:36:33.147 --> 04:36:35.460
 app Zalando.
 It's more intuitive, more 

04:36:35.461 --> 04:36:39.867
structured d, more convenient.  
But of course in addition to a 

04:36:39.868 --> 04:36:43.852
new design we are being hard at 
work with new functionality.  So

04:36:44.024 --> 04:36:47.561
 here are some highlights s of 
launches from the past 12 months

04:36:47.794 --> 04:36:52.329
        months.  There's been 
features to help app quality 

04:36:52.330 --> 04:36:56.314
like beta testing and the pre
launch report.  There's new 

04:36:56.315 --> 04:37:01.663
tools to manage the release 
process.  There's also new 

04:37:01.664 --> 04:37:05.806
reporting and pricing features 
to help you identify and take 

04:37:05.807 --> 04:37:10.696
advantage of opportunities to 
grow your business.  And now at 

04:37:10.697 --> 04:37:13.903
this I/O     I/O we are 
announcing important new and 

04:37:13.904 --> 04:37:18.806
updated features in all of these
 areas that go even further at 

04:37:18.807 --> 04:37:24.303
helping you create high quality 
app experiences but go even 

04:37:24.304 --> 04:37:26.986
further at helping you might 
gate risk in                   

04:37:27.181 --> 04:37:29.987
     you mitigate risk and help 
you go further into

04:37:30.776 --> 04:37:32.843
                 go further in 
achieving business success.  I'm

04:37:32.844 --> 04:37:36.342
 going to hand you over to more 
of the team to give you a 

04:37:36.343 --> 04:37:38.879
snapshot of each of these 
different features.  Starting

04:37:42.282 --> 04:37:45.591
 with Fergus from the player 
team in London. 

04:37:51.445 --> 04:37:54.907
to know the see kwet
              the secret to 

04:37:54.908 --> 04:38:00.962
getting a five star app on 
Google Play?  We fund         We

04:38:01.095 --> 04:38:05.316
 found that 50% of all the one 
star reviews are talking about 

04:38:05.317 --> 04:38:08.533
stability issues so if you want 
to increase your star rating and

04:38:08.913 --> 04:38:13.009
 reduce the number of one star 
ratings, the number one thing 

04:38:13.010 --> 04:38:16.380
you can do is focus on stability
 of your application.  Okay.  

04:38:16.381 --> 04:38:18.483
Once you fix those stability 
issue what's do you

04:38:19.699 --> 04:38:23.461
                     issues what
 do you do to increase it to 

04:38:23.462 --> 04:38:26.182
five stars       stars?  Well 
you focus on design, usability 

04:38:26.183 --> 04:38:31.305
and speed.    
Yesterday in the keynote you 

04:38:31.306 --> 04:38:35.649
might have seen Android vitals 
s.  This is our initiative at 

04:38:35.650 --> 04:38:38.070
Google to help you understand 
the performance and stability of

04:38:38.492 --> 04:38:44.454
 your applications s.  We had 
hundreds of millions s of users 

04:38:44.455 --> 04:38:50.529
who opted in to share their 
device diagnostics s with Google

04:38:50.720 --> 04:38:55.277
 so we can help partners s like 
you to have better experiences

04:38:58.990 --> 04:39:02.020
.  We are starting with three 
perform mabs                    

04:39:02.021 --> 04:39:05.625
three performance areas, 
stability, battery and rendering

04:39:05.923 --> 04:39:10.498
.  We are going to be expanding 
to many more over the course of 

04:39:10.499 --> 04:39:14.345
the next year so stay tuned for 
those.  As we expand there's a 

04:39:14.346 --> 04:39:18.317
lot of data to understand.  How 
do we simplify it for you?  We 

04:39:18.318 --> 04:39:22.887
are chooseing this concept of 
bad behaviors.  It's when your 

04:39:22.888 --> 04:39:30.550
app falls within the lowest 25% 
of appears            % of apps 

04:39:30.551 --> 04:39:33.766
for that metrics and you'll be 
able to understand              

04:39:33.903 --> 04:39:37.181
 to understand that you should 
prioritize fixing your app in 

04:39:37.182 --> 04:39:40.013
that area.  The first area is 
stability.  This is all about 

04:39:40.014 --> 04:39:44.785
providing a robust and stable 
experience to your users that is

04:39:44.932 --> 04:39:48.037
 reliability                is 
reliable.  There are two 

04:39:48.038 --> 04:39:52.229
performance metrics within this 
area.  The first is your AN    

04:39:52.230 --> 04:39:55.542
ANR rate, application not 
responding rate.  This      This

04:39:55.695 --> 04:40:01.781
 is when your app freezes for 
more than five seconds.  Second 

04:40:01.782 --> 04:40:05.968
is crash rate.  The second 
performance area is battery.  

04:40:05.969 --> 04:40:10.662
This is where your app is using 
the radios s or the CPU 

04:40:10.663 --> 04:40:14.146
unnecessarily.  And the two 
performance metrics that      

04:40:14.147 --> 04:40:16.147
that were focused on here are

04:40:18.592 --> 04:40:23.386
 stuck wake lock, it's where you
 hold a wake locks for more than

04:40:24.327 --> 04:40:28.690
 an hour when it's supposed to 
be idle.  The second is wake ups

04:40:29.013 --> 04:40:34.776
 s.  The perj performance area 
is rendering.  So this is 

04:40:34.777 --> 04:40:36.777
providing users with

04:40:39.856 --> 04:40:43.656
area is rendering.  So this is 
providing users with that 

04:40:39.856 --> 04:40:45.381
significant                  
that silky smooth        smooth 

04:40:45.382 --> 04:40:49.490
experience on your device so 
it's clear and fluid.  There's 

04:40:49.491 --> 04:40:55.546
slow rendering, it's when 50% of
 your frames take more than 60 

04:40:55.547 --> 04:40:59.387
milliseconds                 60 
milliseconds.  And the second 

04:40:59.388 --> 04:41:06.210
one     one is frozen frames.  
This is where 0.    0.1% of your

04:41:06.211 --> 04:41:09.139
 frames take more than seven 
hundred milliseconds  

04:41:09.412 --> 04:41:11.246
                          700 
milliseconds to render.  Both of

04:41:11.247 --> 04:41:15.747
 these are shown in the Play 
developer console alongside all 

04:41:15.748 --> 04:41:17.700
the other five behaviors
           behaviors that I 

04:41:17.701 --> 04:41:20.685
mentioned.  You can go to the 
play developer console as of 

04:41:20.686 --> 04:41:23.782
right now and see this data for 
your application and then you 

04:41:23.783 --> 04:41:27.527
can be able to focus on 
improving their core metrics.  

04:41:27.528 --> 04:41:29.594
For each one we provide links to
 develop

04:41:35.709 --> 04:41:38.792
er.Android          er.Android
.com.  Finally if you don't care

04:41:38.793 --> 04:41:43.371
 about your star rating which 
I'm sure most of you do, we also

04:41:43.372 --> 04:41:45.978
 have other reasons why you 
should care      care about this

04:41:47.193 --> 04:41:50.275
 performance area.  We are 
starting to it use in the 

04:41:50.276 --> 04:41:52.611
promoteability in the store 
itself and other things we are 

04:41:52.612 --> 04:41:56.240
going to talk about later on 
today at 5:30 in a talk on the 

04:41:56.241 --> 04:41:59.462
top ten things        things to 
improve the stability of your 

04:41:59.463 --> 04:42:02.782
application.  You can be able to
 learn more about how we are 

04:42:02.783 --> 04:42:06.605
improving the Play Store to be 
able to use this performance 

04:42:06.606 --> 04:42:11.666
data.  I'll talk about the field
 data and welcome Ricardo on 

04:42:11.667 --> 04:42:14.692
stage who is going to talk about
 how you can understand the 

04:42:14.693 --> 04:42:16.896
performance of your application 
before you launch it.   

04:42:16.897 --> 04:42:22.567
(Applause). 
» Rick cardo            Ricardo:

04:42:22.568 --> 04:42:25.406
  Thank you.  Hi, everyone, 
great to be here today.  Today I

04:42:25.407 --> 04:42:27.407
 want to talk

04:42:29.474 --> 04:42:33.126
 to you about the prelaunch 
report.  The prelaunch report 

04:42:33.127 --> 04:42:38.181
summarizes s issues when testing
 against a wide range of devices

04:42:38.459 --> 04:42:47.529
 s.  Prelunch          Prelaunch
 report contributes 

04:42:48.685 --> 04:42:56.444
s to better ops.  The key aspect
 of prelaunch report is app 

04:42:56.445 --> 04:43:02.957
stability testing.  We 
automatically test alpha or beta

04:43:03.305 --> 04:43:07.288
 channels s in the Play console 
against several physical

04:43:08.145 --> 04:43:11.027
          physical Android 
diseases s.                     

04:43:11.028 --> 04:43:15.793
Android devices s.  You can fix 
the crash before it reaches 

04:43:15.794 --> 04:43:21.570
production and your users will 
not leave a one star review 

04:43:21.571 --> 04:43:25.151
because of that.  In the last 
year prelaunch rarpt            

04:43:25.433 --> 04:43:31.920
launch report has seen great 
multipleum.                     

04:43:31.921 --> 04:43:33.921
great momentum

04:43:39.309 --> 04:43:43.992
.  In 85    85% of the cases 
when prelaunch report found a 

04:43:43.993 --> 04:43:46.700
crash the app was not later push
      pushed to production which

04:43:46.883 --> 04:43:50.454
 means that millions s of users 
have not experienced crashs that

04:43:50.975 --> 04:43:53.787
 would have otherwise affected 
them      them which is pretty 

04:43:53.788 --> 04:43:56.852
nice.   
So we continue to improv pre

04:43:57.668 --> 04:43:59.700
launch report to make it even 
better

04:44:04.793 --> 04:44:09.408
report to make it even better.  
It can now provide test 

04:44:09.409 --> 04:44:12.772
credentials s.  Prelaunch

04:44:18.414 --> 04:44:22.288
 report using if knowledge of 
Google's own security teams.  

04:44:22.289 --> 04:44:26.100
Now we detect over 30 different 
types of vulnerabilities and 

04:44:26.101 --> 04:44:33.163
privacy issues from using 
obsolete libraries to known 

04:44:33.164 --> 04:44:35.164
identifiers s.  Pre

04:44:38.353 --> 04:44:45.068
       s.  We now take into 
account the structure of your 

04:44:45.069 --> 04:44:49.189
app such as activity and 
transition to better capture 

04:44:49.190 --> 04:44:54.705
screen shots intelligently and 
this gives you a better view at 

04:44:54.706 --> 04:44:58.790
a glance which is great for 
spotting visual inconsistencies.

04:45:02.104 --> 04:45:03.972
the most.  We added new devices 
to                new devices to

04:45:03.973 --> 04:45:09.999
 the floor including the Google 
pixel run on Android O preview 

04:45:10.000 --> 04:45:15.021
much                O preview. 
  .  You can check Android O and

04:45:15.525 --> 04:45:18.560
 be ready for when it launches 
later this year.  You can upload

04:45:19.226 --> 04:45:22.551
 an APK right now to the Play 
console and there's a good 

04:45:22.552 --> 04:45:26.048
chance that by the end of this 
talk you'll get a sense of how 

04:45:26.049 --> 04:45:30.759
your app performs s on snoid
          s on Android O.  

04:45:30.760 --> 04:45:34.148
That's all I have for you today.
  I have the prelaunch report

04:45:34.487 --> 04:45:41.973
        report with that sense 
of security and I will like to 

04:45:41.974 --> 04:45:46.094
introduce James Smith, project 
manager on play.  Thank you.    

04:45:46.095 --> 04:45:50.263
(Applause).  
» James Smith:  Thanks, Rick 

04:45:50.264 --> 04:45:55.461
yard           Ricardo.  Hi 
everyone.  One of the        of 

04:45:55.462 --> 04:45:56.509
the most important things you 
have to             you have to 

04:45:56.510 --> 04:46:02.752
look after is your app sign-in 
key because your app sign-in key

04:46:03.262 --> 04:46:09.465
 ensures s the integrity of your
 app.  Your private key is 

04:46:09.466 --> 04:46:12.193
required for signing all 
versions of your app.  If you 

04:46:12.194 --> 04:46:15.793
lose or misplace your key, you 
will not be able to publish 

04:46:15.794 --> 04:46:20.603
updates to your app.  Your only 
option would be to publish a new

04:46:20.604 --> 04:46:23.994
 app under a new package name 
and ask all of your users to 

04:46:23.995 --> 04:46:28.154
move across.  This would be 
obviously a terrible experience.

04:46:28.155 --> 04:46:31.680
  So that's why we are very 
excited to be launching Google 

04:46:31.681 --> 04:46:37.492
Play app signing.   
(Applause).   

04:46:37.493 --> 04:46:40.337
If you join this program Google+
                 program Google 

04:46:40.338 --> 04:46:45.711
Play will manage your key on 
your behalf and sign your app 

04:46:45.712 --> 04:46:49.364
before delivering it to years
          to users.  First you 

04:46:49.365 --> 04:46:53.827
securely upload your app sign-in
 key to Google Play.  That means

04:46:55.183 --> 04:46:59.398
 it's now safe on Google
           on Google servers s 

04:46:59.399 --> 04:47:02.627
and you don't need to worry 
about security and access to 

04:47:02.628 --> 04:47:06.386
your key.  You can even delete 
it.  To make sure that updates 

04:47:06.387 --> 04:47:11.512
to your app come from you, the 
authorized d developer, any new 

04:47:11.513 --> 04:47:14.548
APKs s you upload will be
         will be signed with an 

04:47:14.549 --> 04:47:18.782
upload key that Google uses to 
verify your identity.  The 

04:47:18.783 --> 04:47:25.454
upload key with          key can
 be re-set.  We have had several

04:47:26.252 --> 04:47:31.449
 partners s using Google Play 
app signing for pay while and 

04:47:31.450 --> 04:47:33.450
the feedback has been positive

04:47:36.777 --> 04:47:41.910
                                            a
 while and the feedback has been

04:47:36.777 --> 04:47:38.777
 positive

04:47:42.013 --> 04:47:47.997
.  Now, once Google Play signs 
your app, we can go one step 

04:47:47.998 --> 04:47:51.440
further and we can provide 
optimization services at your 

04:47:51.441 --> 04:47:55.454
request.  The first optimization
 we have decided to            

04:47:55.455 --> 04:47:59.194
decided to focus on is making 
apps smaller.  We know that 

04:47:59.195 --> 04:48:04.590
developers   ers care about app 
size because users do.  APK size

04:48:04.792 --> 04:48:08.779
 is correlated d with download 
success and with uninstall rate.

04:48:12.764 --> 04:48:15.911
that developers   ers include 
native libraries and different 

04:48:15.912 --> 04:48:20.419
architectures s and draw ables 
           drawables s so that 

04:48:20.420 --> 04:48:23.647
apps look and run their best on 
every device.  But this means 

04:48:23.648 --> 04:48:27.102
that a lot of the contents s of 
an APK is unnecessary

04:48:28.008 --> 04:48:30.598
             unnecessary for 
every device.  If I have a phone

04:48:30.805 --> 04:48:38.594
 with a 32 bit architecture and
     and     and screen then I 

04:48:38.595 --> 04:48:46.303
only need the contents s in blue
.  With app optimizations s 

04:48:46.304 --> 04:48:49.984
playable delivered just the 
right content for each device.  

04:48:49.985 --> 04:48:54.571
You give us a universe
            a universal APK and 

04:48:54.572 --> 04:48:58.141
we will create optimized d APKs 
s for different devices.  

04:49:03.543 --> 04:49:07.249
exploreing this area and     and
 it's still early but we tried 

04:49:07.250 --> 04:49:09.121
it with app there's         
there's the early access prop 

04:49:09.122 --> 04:49:12.558
and we sfekt the average signing
                              we

04:49:12.785 --> 04:49:21.674
 expect the average signing to 
be about 15%.  Deliveroo was 33%

04:49:21.675 --> 04:49:26.377
 smaller and the seven minute 
workout was nearly half smaller 

04:49:26.378 --> 04:49:29.393
at 48%.  So when can you get 
these benefits?  Well

04:49:34.555 --> 04:49:41.730
, app signing is available today
.  We hope to widen the beta in 

04:49:41.731 --> 04:49:44.128
the near future f you're 
interested in optimizations s 

04:49:44.129 --> 04:49:46.367
please enroll in app signing 
today.  If you would like to 

04:49:46.368 --> 04:49:50.439
nind         to find out more 
about these topics s please come

04:49:50.905 --> 04:49:55.717
 to our talk at    at 2:30 this 
afternoon                this 

04:49:55.718 --> 04:50:00.439
afternoon.  I had like to invite
 Mike to talking about device 

04:50:00.440 --> 04:50:02.987
catalog which is also available 
today.   

04:50:02.988 --> 04:50:04.988
(Applause).  
» Mike

04:50:10.760 --> 04:50:16.710
:  Thanks, James.  So, as we saw
 at the start of this talk the 

04:50:16.711 --> 04:50:19.896
Android he can seesm     
         ecosystem is    is 

04:50:19.897 --> 04:50:21.413
seeing significant grout
                   significant 

04:50:21.414 --> 04:50:25.100
growth and this is in part due 
to the diversity of Android 

04:50:25.101 --> 04:50:27.636
devices s with a range of 
different capabilities and price

04:50:27.810 --> 04:50:32.045
 points.  We hear that you love 
the reach this brings but 

04:50:32.046 --> 04:50:35.597
understanding this device space 
and targeting the right devices 

04:50:36.452 --> 04:50:40.872
s can sometimes be a bit of a 
challenge.  And so to help with 

04:50:40.873 --> 04:50:45.090
this, we have launched a new 
device catalog section in the 

04:50:45.091 --> 04:50:49.186
Google Play console.  Thank you.

04:50:49.187 --> 04:50:53.019
(Applause).   
Using everything that we know 

04:50:53.020 --> 04:50:58.089
about Android we have gone from 
this long list of device codes 

04:50:58.090 --> 04:51:01.804
to a rich full featured d device
 catalog.  Looks pretty awesome,

04:51:01.938 --> 04:51:06.524
 right?  So what can this do for
 you?  First of all, we provide 

04:51:06.525 --> 04:51:12.679
detailed device specks including
 RAM, system on chip, GPU, scre

04:51:12.863 --> 04:51:17.939
en size and OS version for every
 one of the thousands of Android

04:51:18.765 --> 04:51:23.808
 devices s certified by Google. 
 We group them into models s to 

04:51:23.809 --> 04:51:28.506
understand the variations 
between them.  To help navigate 

04:51:28.507 --> 04:51:31.629
this device space we provide 
search and filter options allow

04:51:31.900 --> 04:51:36.792
ing to you slice and     and 
dice the cat         the catalog

04:51:37.096 --> 04:51:41.821
.  For example you can use this 
to quickly find all SD    SDK 

04:51:41.822 --> 04:51:48.889
level 24 devices with a snap 
dragon 8-10 sock.  All devices s

04:51:48.890 --> 04:51:52.759
 manufactured by Google with 
more than two giga ram.  This is

04:51:52.985 --> 04:51:57.661
 more than just device specks w 
any     any       w          

04:51:57.662 --> 04:52:01.620
specks        specks.  With any 
filter we provide key metrics 

04:52:01.621 --> 04:52:05.408
for how your app performs on 
these devices s such as installs

04:52:06.212 --> 04:52:11.386
 s and revenue.  In addition to 
this we introduced another new 

04:52:11.387 --> 04:52:14.645
feature             new feature 
called device exclusion rules.  

04:52:14.646 --> 04:52:18.529
This allows you to exclude your 
app from a specific targeted set

04:52:18.530 --> 04:52:23.037
 of devices s use key device 
performance indicators s.  For 

04:52:23.038 --> 04:52:26.313
example if you're developing a 
rich graphics s game you could 

04:52:26.314 --> 04:52:31.974
use this to only target devices 
s with more than a gig of ram.  

04:52:31.975 --> 04:52:35.689
You could also create a rule to 
exclude all devices s with a 

04:52:35.690 --> 04:52:41.052
particular system on chip.  This
 can allow you to temporarily 

04:52:41.053 --> 04:52:44.419
prevent deployment of your app 
to a specific set of problematic

04:52:45.025 --> 04:52:47.088
 devices until you can push a 
fix.   

04:52:47.089 --> 04:52:50.408
When ever you create an 
exclusion rule we would always 

04:52:50.409 --> 04:52:53.501
show you which devices will be
         s will be excluded d.  

04:52:53.502 --> 04:52:58.401
Along with installs and revenue 
metrics to help you make this 

04:52:58.402 --> 04:53:00.402
important decision with 
confidence. 

04:53:05.345 --> 04:53:09.545
 along with installs and revenue
 metrics to help you make this 

04:53:05.345 --> 04:53:07.745
important decision with 
confidence. 

04:53:05.345 --> 04:53:10.777
As you can see games have found 
a great way of incore        

04:53:10.778 --> 04:53:13.792
incorporateing device tools.  To
 hear more about this new device

04:53:14.324 --> 04:53:17.007
 catalog feature along with 
other release management tools 

04:53:17.008 --> 04:53:20.784
you can check out the recording 
of this talk that was presented 

04:53:20.785 --> 04:53:27.095
yesterday.  Also please swing by
 the Play con              the 

04:53:27.096 --> 04:53:32.274
Play console sandbags          
sandbox area where we are 

04:53:32.275 --> 04:53:35.804
available to give demos s, 
answer questions and give 

04:53:35.805 --> 04:53:41.149
feedback.  And with that I'm 
going to hand you over to 

04:53:41.150 --> 04:53:44.778
Suzanne to tell us about even 
more new ways we have to release

04:53:45.193 --> 04:53:46.729
 with conversation.    
(Applause)              

04:53:46.730 --> 04:53:47.956
                      with 
confidence.   

04:53:47.957 --> 04:53:53.346
(Applause). 
» Suzanne:  Thank you.  Thanks, 

04:53:53.347 --> 04:53:58.165
Mike.  I'll walk you through  
       through the release 

04:53:58.166 --> 04:54:00.784
dashboard which we announced 
yesterday.  You want to make 

04:54:00.785 --> 04:54:04.659
sure that your production 
release is successful.  We have 

04:54:04.660 --> 04:54:10.245
always been ahead of the curve 
to prepare great releases.  

04:54:10.246 --> 04:54:16.794
Think about the prelaunch report
 and our afl         our alpha 

04:54:16.795 --> 04:54:21.678
and beta channels s.  Out of the
 box without a need for an SD

04:54:22.050 --> 04:54:25.282
           for an SDK.  This 
data is offered in low latency 

04:54:25.283 --> 04:54:28.354
and can help you     you make 
decisions about your role out 

04:54:28.355 --> 04:54:32.600
sooner and with more confidence.
  Let me shoal you              

04:54:32.601 --> 04:54:36.094
me show you a few highlights s. 
 When you push a new release you

04:54:36.308 --> 04:54:41.030
 care about crashes.  We give 
you absolute numbers s as well 

04:54:41.031 --> 04:54:43.602
as crashes for a thousand 
devices s to put those numbers 

04:54:43.603 --> 04:54:48.239
in context.  The default shown 
here offers a comparison between

04:54:48.702 --> 04:54:52.383
 your current release and the 
aggregate of all app versions 

04:54:52.384 --> 04:54:54.384
that you have in production

04:55:01.825 --> 04:55:06.693
.  Releases aren't all about 
crashes.  You also      also 

04:55:06.694 --> 04:55:10.187
want to see ratings and reviews 
s that are specific to your 

04:55:10.188 --> 04:55:13.485
latest version         version. 
 When a rating for your latest 

04:55:13.486 --> 04:55:16.800
version is lower than that of 
your overall rating you may want

04:55:17.348 --> 04:55:21.407
 to start looking in to your 1 
and 2 star reviews to see what 

04:55:21.408 --> 04:55:25.183
is going on and possibly hold 
your release.   

04:55:25.184 --> 04:55:27.184
What if you could

04:55:28.523 --> 04:55:32.420
 see install         install 
events s broken down by new 

04:55:32.421 --> 04:55:39.795
installs s and updates s.  This
        s.  Think about the 

04:55:39.796 --> 04:55:44.009
power of knowing how much 
uninstalls s came from updated 

04:55:44.010 --> 04:55:48.103
devices s.    
Are you losing existing 

04:55:48.104 --> 04:55:50.898
customers because your latest 
version isn't       isn't 

04:55:50.899 --> 04:55:55.167
performing well?  Clay has these
 numbers                        

04:55:55.168 --> 04:55:58.595
Clay       ?  Play has these 
numbers s for you out of the box

04:55:58.811 --> 04:56:02.109
.  I encourage you to think 
about what makes a healthy 

04:56:02.110 --> 04:56:07.926
release.  Your crash tool may 
warn you if you have a huge 

04:56:07.927 --> 04:56:11.915
spike.  What about subtle but 
significant changes across 

04:56:11.916 --> 04:56:15.536
metrics?  Would you ever notice 
if you didn't see them all in 

04:56:15.537 --> 04:56:22.077
one place?  And to empower your 
decision making even further we 

04:56:22.078 --> 04:56:25.582
also let you compare your 
release against the previous 

04:56:25.583 --> 04:56:29.738
release of your choice.  This 
gives you even more context.  

04:56:29.739 --> 04:56:35.651
You don't only have fewer 
crashes and AN    ANR's, you    

04:56:35.930 --> 04:56:41.711
 you don't only have the impact 
of your en installs            

04:56:42.125 --> 04:56:47.308
      your uninstalls s but you 
can see how they're considered 

04:56:47.309 --> 04:56:52.793
successful, all in one place 
within hours of release starting

04:56:54.021 --> 04:56:58.806
.  So next time you roll a new 
version out, monitor it with the

04:56:58.807 --> 04:57:03.092
 release dashboard.  It is the 
new item on the release 

04:57:03.093 --> 04:57:08.363
management.  Now over to Preston
, engineering manager, to talk 

04:57:08.364 --> 04:57:11.407
you through new statistics s 
pages.  Thank you.    

04:57:11.408 --> 04:57:17.761
(Applause). 
» Preston:  Thanks, Suzanne.  Hi

04:57:17.978 --> 04:57:21.350
, everyone.  We have been hard 
at work this year addressing 

04:57:21.351 --> 04:57:24.364
your the     the requests in 
play stfshgs              play 

04:57:24.365 --> 04:57:29.799
statistics s.  Lied        s.  I
 had like to introduce the new 

04:57:29.800 --> 04:57:33.755
Play statistics s page.  You can
 start to feel the magnitude 

04:57:33.756 --> 04:57:41.055
that we put behind the statics s
 brand since the last I/O     

04:57:41.056 --> 04:57:44.422
I/O.  First let's drill down in 
to date selection.  As you can 

04:57:44.423 --> 04:57:49.597
see we still have the pre-set 
date ranges but these pre-sets 

04:57:49.598 --> 04:57:55.302
are not     not sufficient for 
all business needs       needs 

04:57:55.303 --> 04:58:00.123
so I'm happy to say we added a 
custom date range selection to 

04:58:00.124 --> 04:58:04.674
help you choose the date range 
you're most interested in.  We 

04:58:04.675 --> 04:58:08.835
know many of you manually 
compare data in the console with

04:58:08.959 --> 04:58:12.772
 data from previous time periods
.  We made that much simpler by 

04:58:12.773 --> 04:58:16.684
plotting a comparison time 
period right alongside your date

04:58:16.685 --> 04:58:20.511
 range.  This allows you to see 
trends that will highlight the 

04:58:20.512 --> 04:58:24.071
impact of releases, marketing 
campaigns s and even public 

04:58:24.072 --> 04:58:27.474
holidays.    
But time periods amp            

04:58:27.799 --> 04:58:30.376
 periods aren't the only thing 
we want to compare.  Now on the 

04:58:30.377 --> 04:58:34.127
Play statistics s page you can 
select multiple metrics to 

04:58:34.128 --> 04:58:37.211
compare at the same time.  When 
you can easily compare related 

04:58:37.212 --> 04:58:42.088
metrics such as crashes in 
ratings you can start to uncover

04:58:42.353 --> 04:58:45.178
 relationships in your data that
 are are specific to your app 

04:58:45.179 --> 04:58:48.319
and to your market.  The last 
thing I would like to mention is

04:58:48.440 --> 04:58:52.154
    is hourly data.  We are 
introducing new hourly stats to 

04:58:52.155 --> 04:58:55.400
help you understand the behavior
 of your app throughout the day.

04:58:55.401 --> 04:59:01.463
  This knowledge will hoe you as
 you plan time sensitive events 

04:59:01.648 --> 04:59:05.922
s such as releases.  You want to
 have wait until tomorrow to 

04:59:05.923 --> 04:59:07.923
start to see data

04:59:11.653 --> 04:59:15.786
 you as you plan time sensitive 
events such as releases.  You 

04:59:11.653 --> 04:59:15.919
want to have wait until tomorrow
 to start to see data for today.

04:59:11.653 --> 04:59:15.145
  We made      made Play 
statistics s more useful to help

04:59:15.755 --> 04:59:22.435
 you build apps.   .  I'd invite
 to you come to the sandbox to 

04:59:22.436 --> 04:59:24.874
talk about more w that I'll hand
 it over

04:59:28.130 --> 04:59:30.109
 to Tamzin to talk about 
acquisition.    

04:59:30.110 --> 04:59:32.110
Nauz        

04:59:36.451 --> 04:59:38.607
(Applause). 
»Tamzin:   Thank you.  So once 

04:59:38.608 --> 04:59:43.406
you're confident that your apps 
health and performance is 

04:59:43.407 --> 04:59:47.509
optimal you probably want to 
drive new valuable users to your

04:59:47.745 --> 04:59:53.215
 app, right?  Well, in my job I 
talk to developers   ers every 

04:59:53.216 --> 04:59:56.906
day and they tell me how 
critical it is to understand how

04:59:57.721 --> 05:00:01.825
 effective their marketing 
channels are at acquiring and 

05:00:01.826 --> 05:00:06.909
retaining new valuable users.  
They tell me they need more data

05:00:07.308 --> 05:00:11.689
 to make the right decision 
about where to spend their money

05:00:11.811 --> 05:00:15.185
 and where to spend their time 
and effort in optimizing their 

05:00:15.186 --> 05:00:19.555
growth strategies.  Since last 
I/O     I/O we launched two 

05:00:19.556 --> 05:00:21.272
improvement             
improvements to the user 

05:00:21.273 --> 05:00:24.327
acquisition report to make this 
area of the console even more 

05:00:24.328 --> 05:00:27.438
useful for you.    
Now just      just to remind you

05:00:28.121 --> 05:00:30.444
 the user acquisition report 
shows you how much user

05:00:33.523 --> 05:00:36.340
s go to your            s go to 
your install listing page, how 

05:00:36.341 --> 05:00:41.203
many install your app, and how 
many buy and buy again.  So the 

05:00:41.204 --> 05:00:44.831
first improvement was we added 
country to the user acquisition 

05:00:44.832 --> 05:00:47.896
traffic break down.  This is 
really critical because we want 

05:00:47.897 --> 05:00:53.599
you to expand and succeed and 
reach those 2 billion monthly 

05:00:53.600 --> 05:00:56.362
active Android devices around 
the world.   

05:00:56.363 --> 05:00:59.803
Now this report is great because
 it will show you where the 

05:00:59.804 --> 05:01:03.461
unrealized opportunities so that
 you can prioritize your 

05:01:03.462 --> 05:01:06.408
international expansion.    
The second improvement is that 

05:01:06.409 --> 05:01:10.609
we'll added peer benchmarks.  
Now this let's you see how your 

05:01:10.610 --> 05:01:16.832
app conversion compares to 
similar apps in the same 

05:01:16.833 --> 05:01:20.646
category.  Now this is available
 both in the acquisition report 

05:01:20.647 --> 05:01:27.353
and in the country report.  So 
it let's you see obvious areas 

05:01:27.354 --> 05:01:31.768
for improvement, it let's you 
see areas to further invest to 

05:01:31.769 --> 05:01:35.466
acquisition, and let's you 
celebrate your team success.    

05:01:35.707 --> 05:01:38.774
Now I'm pretty            I'm 
pretty confident that most of 

05:01:38.775 --> 05:01:41.936
you here care about building 
long-term customer relationships

05:01:42.393 --> 05:01:45.302
, right?  So today I'm really 
excited to            excited to

05:01:45.303 --> 05:01:48.127
 announce version two of the 
funnel.  Especially for 

05:01:48.128 --> 05:01:52.292
businesses like yours who have a
 strong focus on user retention.

05:01:52.293 --> 05:01:56.936
  It shows retention periods 
which are critical metrics for 

05:01:56.937 --> 05:02:00.564
understanding which channels are
 bringing you your most loyal 

05:02:00.565 --> 05:02:04.672
users.  And this is your 
retained installer base.  It 

05:02:04.673 --> 05:02:08.592
shows you the opportunity to 
country retention using 

05:02:08.593 --> 05:02:12.874
notifications and e-mail or 
increasing your app quality.  So

05:02:13.433 --> 05:02:17.159
 from today you'll be able to 
identify which channels s I'm 

05:02:17.160 --> 05:02:21.704
bringing you your most      most
 valuable users, which countries

05:02:22.452 --> 05:02:25.957
 they're coming from and you'll 
be able to identify the 

05:02:25.958 --> 05:02:28.927
opportunities you had to 
increase your install and buy 

05:02:28.928 --> 05:02:32.109
conversion and increase your 
user retention.  All of these 

05:02:32.110 --> 05:02:36.926
reports help you optimize growth
 strategies not just for 

05:02:36.927 --> 05:02:39.472
installs s but for long-term 
business success.  So regardless

05:02:39.741 --> 05:02:45.382
 of the way you monetize we have
 an acquisition report that can 

05:02:45.383 --> 05:02:48.900
help you grow your business.  If
 you want to learn more about 

05:02:48.901 --> 05:02:53.722
this or the release dashboard or
 the new stafshgs s page       

05:02:53.723 --> 05:02:56.006
statistics s page you 
should            you should 

05:02:56.007 --> 05:03:01.100
come to stage one at 1:30 right 
after this.  So come and see us.

05:03:04.737 --> 05:03:08.870
 page you should come to stage 
one at 1:30 right after this.  

05:03:04.737 --> 05:03:06.737
So come and see us.  Now I would
 like to welcome back

05:03:10.425 --> 05:03:12.425
 on stage Fergus..   
(Applause)

05:03:17.279 --> 05:03:19.814
» Fergus:   Great so I'm back 
again to help those people who

05:03:20.004 --> 05:03:24.279
     who had their hand up 
earlier about trying to get a 

05:03:24.280 --> 05:03:29.866
five star rating on Play.  
There's improvements s we made 

05:03:29.867 --> 05:03:33.040
and we just announced.  One 
thing we announced at Google I/O

05:03:33.258 --> 05:03:36.775
     I/O last year was reviews 
analysis.  This enables s you to

05:03:36.776 --> 05:03:39.636
 be able to see the topics that 
people are talking about in your

05:03:39.787 --> 05:03:44.407
 reviews s on Google Play and 
prioritize which topics are 

05:03:44.408 --> 05:03:47.491
having the largest negative and 
positive impact on your rateing 

05:03:47.492 --> 05:03:51.922
in the store.  You've heard from
 developers   ers they are using

05:03:52.393 --> 05:03:56.284
 this to prior to ties 
                 to prioritize

05:03:56.601 --> 05:03:59.040
               to prioritize 
their feature development.  You 

05:03:59.041 --> 05:04:02.809
can understand what people in 
geographys that have your app 

05:04:02.810 --> 05:04:06.379
available in but don't speak 
your language are saying about 

05:04:06.380 --> 05:04:11.048
your application.  The second 
most popular language on Play is

05:04:11.374 --> 05:04:14.454
 Spanish.  As of yesterday we 
have sfan initials              

05:04:14.593 --> 05:04:22.529
      have Spanish topics s.  We
 also support Japanese topics s.

05:04:22.530 --> 05:04:28.941
  We are putting Google's 
machine learning to you so we 

05:04:28.942 --> 05:04:34.138
can understand your users and 
what they're saying.  A 

05:04:34.139 --> 05:04:39.441
limitation on Google Play has 
been when users update        s 

05:04:39.442 --> 05:04:43.945
update their reviews s you're 
only able to see the latest 

05:04:43.946 --> 05:04:49.926
update of the review.  Now you 
can see the full history.  This 

05:04:49.927 --> 05:04:53.089
enables s you to have a fluid 
conversation with your users and

05:04:53.576 --> 05:04:55.628
 communicate with them 
effectively.   

05:04:55.629 --> 05:04:58.652
So once you start engaging with 
your users and start responding 

05:04:58.653 --> 05:05:01.122
to               responding to 
reviews s, how do you understand

05:05:01.322 --> 05:05:04.730
 if it's working for you?  We 
have updated rating section.  

05:05:04.731 --> 05:05:08.158
This is where we show you what 
is the change in rating for 

05:05:08.159 --> 05:05:10.943
reviews s you have responded to 
versus ones you haven't 

05:05:10.944 --> 05:05:14.665
responded to.  We see that 
developers are seeing major 

05:05:14.666 --> 05:05:19.360
results in improving their star 
rating of the app by engaging 

05:05:19.361 --> 05:05:22.892
with users because they      
they update their rateing to a 

05:05:22.893 --> 05:05:25.833
positive rating as a result of 
engaging with them.   

05:05:25.834 --> 05:05:28.578
Finally another improvement we 
are makeing to the reviews s 

05:05:28.579 --> 05:05:31.604
area is the ability to be able 
to flag reviews s that have 

05:05:31.605 --> 05:05:35.073
passed through our first level 
of flagging that we do 

05:05:35.074 --> 05:05:38.672
internally of reviews s where if
 you think that one of the 

05:05:38.673 --> 05:05:42.455
reviews s that is posted on your
 app does not match our posting 

05:05:42.456 --> 05:05:46.123
guidelines and is being filtered
 through you can flag it and we 

05:05:46.124 --> 05:05:49.618
will do another manual review 
check and evaluation of that 

05:05:49.619 --> 05:05:52.627
review to be able to determine 
if it matches our posting 

05:05:52.628 --> 05:05:54.541
guidelines.  If it doesn't
         doesn't, we will remove

05:05:54.542 --> 05:05:58.255
 that.  This is already being 
rolled out to a percentage of 

05:05:58.256 --> 05:06:01.120
play developers   ers and will 
be rolled out to the rest of all

05:06:01.293 --> 05:06:03.904
 developers   ers over the next 
couple months.  If you want to 

05:06:03.905 --> 05:06:07.113
learn more about the secret
            the secrets s to get

05:06:07.720 --> 05:06:15.237
 a higher rated app on play and 
increase your usere       user

05:06:15.521 --> 05:06:22.205
      user retention come to the
 talk later at 5:30.  I'd like 

05:06:22.206 --> 05:06:27.357
to wk       to welcome Tom who 
is a product manager to come on 

05:06:27.358 --> 05:06:29.430
stage and talk about 
subscriptions.   

05:06:29.431 --> 05:06:31.925
Nauz        
(Applause). 

05:06:31.926 --> 05:06:35.840
» Tom.  Good afternoon, everyone
.  I'm sewer excited to be here.

05:06:35.841 --> 05:06:37.841
  So jets

05:06:42.249 --> 05:06:47.062
here.  So let's          So 
let's imagine you've used all 

05:06:47.063 --> 05:06:50.738
the great tools from this 
I/O     I/O.  How do you 

05:06:50.739 --> 05:06:55.641
monetize them?  We think one of 
the best ways to do that is to 

05:06:55.642 --> 05:06:59.107
use subscriptions on Google Play
.  One of the reasons we think 

05:06:59.108 --> 05:07:05.970
that is because subscriptions 
are growing fastly.  We heard 

05:07:05.971 --> 05:07:12.333
from Purnima early on that the 
number of active subscribers s 

05:07:12.334 --> 05:07:20.162
on Play has doubled.  That's 
great.  Consumers spend on 

05:07:20.163 --> 05:07:24.900
subscriptions on Play has gone 
up ten times in the last three 

05:07:24.901 --> 05:07:27.928
years.  That's an amazing 
opportunity for developers   ers

05:07:27.929 --> 05:07:33.274
 like you to make more money, 
more regularly, and more relinl

05:07:33.792 --> 05:07:37.250
        reliable y.  I'm going 
to go out on a limb and say that

05:07:37.459 --> 05:07:40.065
 probably sounds pretty good to 
quite a            to quite a 

05:07:40.066 --> 05:07:43.424
lot of you.  And quite a        
 quite a lot of us at Google 

05:07:43.425 --> 05:07:46.811
have been trying to help you.  
Have been really working to 

05:07:46.812 --> 05:07:51.546
power your sub     subscription 
businesses.  So today I'm going 

05:07:51.547 --> 05:07:55.704
to share a few of the new 
features that we are launching 

05:07:55.705 --> 05:07:58.623
at I/O     I/O this year.  These
 are features to help you guys. 

05:07:58.845 --> 05:08:02.424
 Now we know that to run a 
successful subscription business

05:08:02.685 --> 05:08:07.614
 you need really good data.  So 
I'm really happy to say earlier 

05:08:07.615 --> 05:08:12.352
this week we launched a brand 
new part of a Play con sole    

05:08:12.535 --> 05:08:17.359
             a Play console, the
 subscriptions dashboard.  This 

05:08:17.360 --> 05:08:21.815
pulls together key metrics s and
 information and puts it's all 

05:08:21.816 --> 05:08:25.594
in one place.  At a glance you 
can see your total number of 

05:08:25.595 --> 05:08:29.558
subscriptions, your new act
         new activations s and 

05:08:29.559 --> 05:08:35.523
cancelations s, your daily 
revenue and even your top 

05:08:35.524 --> 05:08:42.009
performing subs.  This is    is 
a great way to get a look at 

05:08:42.010 --> 05:08:49.060
what you're doing.  When you    
 you identify an and nolly 

05:08:49.061 --> 05:08:53.500
you're                     an 
anomaly you're going to want to 

05:08:53.501 --> 05:08:58.158
know more.  We are launching 
three brand nucleic-          

05:08:58.159 --> 05:09:04.077
new click-through reports.  The 
acquisition report, the 

05:09:04.078 --> 05:09:07.742
retention report and the churn, 
the cancellation report.  Let's 

05:09:07.743 --> 05:09:12.492
look at them quickly.    
The acquisition report builds on

05:09:12.493 --> 05:09:14.493
 the wonderful funnelss  

05:09:16.955 --> 05:09:20.812
ss that Tamzin showed earlier.  
Now it's especially tailored for

05:09:20.813 --> 05:09:27.274
 your business.  You'll see 
which drive the largest number 

05:09:27.275 --> 05:09:32.811
of free trialists s and which 
eventually drive the largest 

05:09:32.812 --> 05:09:37.385
number of high value, repeat 
paying subscribers s.  If you 

05:09:37.386 --> 05:09:39.936
care about putting your money 
and effort into the channels 

05:09:39.937 --> 05:09:44.417
that give you the highest value 
in subscriptions, this is the 

05:09:44.418 --> 05:09:48.045
report for you.  Secondly, 
there's retention report.  This 

05:09:48.046 --> 05:09:51.560
powerful new report allows s to 
you compare different cohorts 

05:09:51.561 --> 05:09:55.921
from different subscriptions.  
So if you've got a brand new sub

05:09:56.194 --> 05:09:59.363
 that you're experimenting with 
and you want to see if it 

05:09:59.364 --> 05:10:03.467
outperforms s others, you can 
quick and easily plot it and 

05:10:03.468 --> 05:10:06.555
make that decision to make it a 
primary one that you sell.  Or 

05:10:06.556 --> 05:10:11.474
if you try to use some of our 
and advance features like 

05:10:11.475 --> 05:10:14.397
introductory pricing for 
instance you can see the impact 

05:10:14.398 --> 05:10:19.051
it has.  This is a good place to
 inform your product decisions 

05:10:19.052 --> 05:10:23.174
to increase your retention.    
And lastly there's the churn 

05:10:23.175 --> 05:10:26.357
report.  So let's          So 
let's be honest.  When someone 

05:10:26.358 --> 05:10:30.714
cancels s your subscription it 
sucks.  But this report rocks.  

05:10:30.715 --> 05:10:33.566
And the reason I love this 
report is because for the first 

05:10:33.567 --> 05:10:37.711
time on the Play con sole       
               on the Play 

05:10:37.712 --> 05:10:40.624
console you can see the exact 
days that people choose to 

05:10:40.625 --> 05:10:43.808
cancel your subscriptions.  This
 means you can start seeing the 

05:10:43.809 --> 05:10:48.346
impact of that release that you 
made to try to lower your      

05:10:48.347 --> 05:10:52.605
your cancellation rate or you 
can use it to start building a 

05:10:52.606 --> 05:10:55.040
business model behind that 
feature that you think is being 

05:10:55.041 --> 05:10:57.787
to keep people around for longer
.  Taken together these three 

05:10:57.788 --> 05:11:01.672
reports         reports and the 
dashboard give you a view in 

05:11:01.673 --> 05:11:05.068
your business that you've never 
been able to have on the Play 

05:11:05.069 --> 05:11:08.793
console before but we know that 
the insights s you derive from 

05:11:08.794 --> 05:11:11.681
these are only the beginning of 
the story because those insights

05:11:11.996 --> 05:11:14.462
 s drive your decisions and 
those decisions drive what tools

05:11:14.820 --> 05:11:18.820
 you choose to use.  So I'm also
 happy to say this I/O     I/O 

05:11:18.821 --> 05:11:24.251
we are announcing a brand new 
tool.  This will allow you to 

05:11:24.252 --> 05:11:28.530
know when a user's payment has 
failed which is one of the 

05:11:28.531 --> 05:11:32.332
leading causes of    of 
subscription cancellation.  It 

05:11:32.333 --> 05:11:37.997
will allow               You can
 say hey there's been a problem 

05:11:37.998 --> 05:11:43.134
with your payments, go into Play
 and fix it.  The user will have

05:11:43.602 --> 05:11:47.166
 30 days to fix their payment 
failure.  We have been working 

05:11:47.167 --> 05:11:51.020
and trying this feature out and 
we have seen a 25% increase in 

05:11:51.021 --> 05:11:57.093
retention rates.    
So I account hold and new 

05:11:57.094 --> 05:11:58.594
subscription                  
new subscription dashboard are 

05:11:58.595 --> 05:12:00.595
two of the many features

05:12:02.723 --> 05:12:06.523
 hold and new subscription 
dashboard are two of the many 

05:12:02.723 --> 05:12:06.382
features that teams are creating
 to help you build successful 

05:12:06.383 --> 05:12:11.411
businesses.  If you want to know
 more I encourage you to come to

05:12:11.412 --> 05:12:15.728
 stage one tomorrow          
tomorrow at 10:30 as we delve 

05:12:15.729 --> 05:12:21.025
deeply into how to use more 
money into subscriptions on 

05:12:21.026 --> 05:12:25.709
Google Play.  With that I would 
like to invite Purnima and Matt 

05:12:25.710 --> 05:12:27.731
to round the session out.  Thank
 you, very much.   

05:12:27.732 --> 05:12:30.956
Nauz        
(Applause). 

05:12:30.957 --> 05:12:36.390
» MATT HENDERSON:  Thanks, Tom. 
 So much new stuff.  So in 

05:12:36.391 --> 05:12:44.161
addition to making use of the 
stations please go online, you 

05:12:44.162 --> 05:12:48.223
can read much more about all of 
this new stuff there.  And think

05:12:48.224 --> 05:12:50.952
 about who else in your 
organization can become a user 

05:12:50.953 --> 05:12:55.935
of the Play console.    
And also if you haven't already,

05:12:56.797 --> 05:13:01.783
 I do encourage you to download 
the play book app.  We released 

05:13:01.784 --> 05:13:05.947
a new beta with a whole lot of 
new content.  It's a great way 

05:13:05.948 --> 05:13:11.477
to stay informed of all of our 
announcements s and blogs to 

05:13:11.478 --> 05:13:17.225
understand the features.  
» PURNIMA KOCHIKAR:  All right. 

05:13:17.414 --> 05:13:21.828
 Hopefully that whetted your 
appetite to try to build amazing

05:13:22.154 --> 05:13:24.640
 apps and games.  I hope to see 
you this evening at the Google 

05:13:24.641 --> 05:13:29.361
Play awards at 6:30 where we are
 celebrating all the wonderful 

05:13:29.362 --> 05:13:33.511
work that has happened over the 
last year.  I want to thank you 

05:13:33.512 --> 05:13:38.330
for challenging us to continue 
usefully innovate for adopting 

05:13:38.331 --> 05:13:41.652
the features that we invest in, 
and creating things that 

05:13:41.653 --> 05:13:45.747
actually provide super powers s 
to your users.  So thank you 

05:13:45.748 --> 05:13:49.466
very much for being here.  And I
 hope to see up at the Google 

