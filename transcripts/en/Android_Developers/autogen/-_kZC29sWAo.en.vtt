WEBVTT
Kind: captions
Language: en

00:00:01.440 --> 00:00:09.009
[Music]

00:00:09.009 --> 00:00:09.019
[Music]
 

00:00:09.019 --> 00:00:13.879
[Music]
everybody as they say the best goes last

00:00:13.879 --> 00:00:13.889
everybody as they say the best goes last
 

00:00:13.889 --> 00:00:17.599
everybody as they say the best goes last
and here we are to talk about testing

00:00:17.599 --> 00:00:17.609
and here we are to talk about testing
 

00:00:17.609 --> 00:00:20.779
and here we are to talk about testing
Android apps at scale my name is Stefan

00:00:20.779 --> 00:00:20.789
Android apps at scale my name is Stefan
 

00:00:20.789 --> 00:00:22.279
Android apps at scale my name is Stefan
insula and I'm a software engineer at

00:00:22.279 --> 00:00:22.289
insula and I'm a software engineer at
 

00:00:22.289 --> 00:00:25.579
insula and I'm a software engineer at
Google and with me backstage is Vishal

00:00:25.579 --> 00:00:25.589
Google and with me backstage is Vishal
 

00:00:25.589 --> 00:00:27.889
Google and with me backstage is Vishal
Satya who's also a software engineer at

00:00:27.889 --> 00:00:27.899
Satya who's also a software engineer at
 

00:00:27.899 --> 00:00:31.549
Satya who's also a software engineer at
Google said Google we believe in

00:00:31.549 --> 00:00:31.559
Google said Google we believe in
 

00:00:31.559 --> 00:00:34.130
Google said Google we believe in
diversity and inclusion and we build our

00:00:34.130 --> 00:00:34.140
diversity and inclusion and we build our
 

00:00:34.140 --> 00:00:36.380
diversity and inclusion and we build our
products for everyone but for us

00:00:36.380 --> 00:00:36.390
products for everyone but for us
 

00:00:36.390 --> 00:00:38.840
products for everyone but for us
developers this means we also have to

00:00:38.840 --> 00:00:38.850
developers this means we also have to
 

00:00:38.850 --> 00:00:41.450
developers this means we also have to
test for everyone so let me tell you a

00:00:41.450 --> 00:00:41.460
test for everyone so let me tell you a
 

00:00:41.460 --> 00:00:43.279
test for everyone so let me tell you a
little bit how we develop and test

00:00:43.279 --> 00:00:43.289
little bit how we develop and test
 

00:00:43.289 --> 00:00:47.509
little bit how we develop and test
software at Google but before I start I

00:00:47.509 --> 00:00:47.519
software at Google but before I start I
 

00:00:47.519 --> 00:00:49.610
software at Google but before I start I
want to talk a little bit about the

00:00:49.610 --> 00:00:49.620
want to talk a little bit about the
 

00:00:49.620 --> 00:00:51.290
want to talk a little bit about the
scale that we do Android development

00:00:51.290 --> 00:00:51.300
scale that we do Android development
 

00:00:51.300 --> 00:00:53.930
scale that we do Android development
here at Google we have about a hundred

00:00:53.930 --> 00:00:53.940
here at Google we have about a hundred
 

00:00:53.940 --> 00:00:56.779
here at Google we have about a hundred
plus Android apps this includes all the

00:00:56.779 --> 00:00:56.789
plus Android apps this includes all the
 

00:00:56.789 --> 00:00:59.149
plus Android apps this includes all the
billion user apps Shutts such as Google

00:00:59.149 --> 00:00:59.159
billion user apps Shutts such as Google
 

00:00:59.159 --> 00:01:03.319
billion user apps Shutts such as Google
photos maps YouTube Gmail search we have

00:01:03.319 --> 00:01:03.329
photos maps YouTube Gmail search we have
 

00:01:03.329 --> 00:01:05.810
photos maps YouTube Gmail search we have
a combined two billion lines of code and

00:01:05.810 --> 00:01:05.820
a combined two billion lines of code and
 

00:01:05.820 --> 00:01:08.690
a combined two billion lines of code and
we run twenty thousand Android builds

00:01:08.690 --> 00:01:08.700
we run twenty thousand Android builds
 

00:01:08.700 --> 00:01:10.969
we run twenty thousand Android builds
every single day and we have a

00:01:10.969 --> 00:01:10.979
every single day and we have a
 

00:01:10.979 --> 00:01:14.330
every single day and we have a
staggering 27 million test invocations

00:01:14.330 --> 00:01:14.340
staggering 27 million test invocations
 

00:01:14.340 --> 00:01:18.859
staggering 27 million test invocations
per day so how do we create these high

00:01:18.859 --> 00:01:18.869
per day so how do we create these high
 

00:01:18.869 --> 00:01:20.899
per day so how do we create these high
quality apps and how do we maintain this

00:01:20.899 --> 00:01:20.909
quality apps and how do we maintain this
 

00:01:20.909 --> 00:01:25.100
quality apps and how do we maintain this
quality over such a long time I think

00:01:25.100 --> 00:01:25.110
quality over such a long time I think
 

00:01:25.110 --> 00:01:27.679
quality over such a long time I think
one of the key things here is our

00:01:27.679 --> 00:01:27.689
one of the key things here is our
 

00:01:27.689 --> 00:01:31.340
one of the key things here is our
engineering culture a typical developer

00:01:31.340 --> 00:01:31.350
engineering culture a typical developer
 

00:01:31.350 --> 00:01:32.959
engineering culture a typical developer
workflow at Google looks a little bit

00:01:32.959 --> 00:01:32.969
workflow at Google looks a little bit
 

00:01:32.969 --> 00:01:36.529
workflow at Google looks a little bit
like this we have a strong code review

00:01:36.529 --> 00:01:36.539
like this we have a strong code review
 

00:01:36.539 --> 00:01:39.380
like this we have a strong code review
in cultured code you use are very very

00:01:39.380 --> 00:01:39.390
in cultured code you use are very very
 

00:01:39.390 --> 00:01:42.260
in cultured code you use are very very
thorough and before you can actually

00:01:42.260 --> 00:01:42.270
thorough and before you can actually
 

00:01:42.270 --> 00:01:45.109
thorough and before you can actually
submit your change or pull requests you

00:01:45.109 --> 00:01:45.119
submit your change or pull requests you
 

00:01:45.119 --> 00:01:47.599
submit your change or pull requests you
have to get at least reviewed by one of

00:01:47.599 --> 00:01:47.609
have to get at least reviewed by one of
 

00:01:47.609 --> 00:01:51.370
have to get at least reviewed by one of
your peers another important thing is

00:01:51.370 --> 00:01:51.380
your peers another important thing is
 

00:01:51.380 --> 00:01:54.170
your peers another important thing is
that all development happens at hat and

00:01:54.170 --> 00:01:54.180
that all development happens at hat and
 

00:01:54.180 --> 00:01:56.929
that all development happens at hat and
everything is built from source and we

00:01:56.929 --> 00:01:56.939
everything is built from source and we
 

00:01:56.939 --> 00:01:59.719
everything is built from source and we
have a large mono repo which allows us

00:01:59.719 --> 00:01:59.729
have a large mono repo which allows us
 

00:01:59.729 --> 00:02:03.709
have a large mono repo which allows us
to easily search for code reuse code but

00:02:03.709 --> 00:02:03.719
to easily search for code reuse code but
 

00:02:03.719 --> 00:02:05.779
to easily search for code reuse code but
it also allows us to keep the repo

00:02:05.779 --> 00:02:05.789
it also allows us to keep the repo
 

00:02:05.789 --> 00:02:08.029
it also allows us to keep the repo
healthy by sending SUSE called

00:02:08.029 --> 00:02:08.039
healthy by sending SUSE called
 

00:02:08.039 --> 00:02:11.990
healthy by sending SUSE called
large-scale changes we also have a very

00:02:11.990 --> 00:02:12.000
large-scale changes we also have a very
 

00:02:12.000 --> 00:02:14.510
large-scale changes we also have a very
strong testing culture

00:02:14.510 --> 00:02:14.520
strong testing culture
 

00:02:14.520 --> 00:02:17.030
strong testing culture
at Google if you have a change you have

00:02:17.030 --> 00:02:17.040
at Google if you have a change you have
 

00:02:17.040 --> 00:02:20.120
at Google if you have a change you have
to have tests and even more importantly

00:02:20.120 --> 00:02:20.130
to have tests and even more importantly
 

00:02:20.130 --> 00:02:23.690
to have tests and even more importantly
all of those tests have to pass before

00:02:23.690 --> 00:02:23.700
all of those tests have to pass before
 

00:02:23.700 --> 00:02:28.040
all of those tests have to pass before
you submit your change to run tests we

00:02:28.040 --> 00:02:28.050
you submit your change to run tests we
 

00:02:28.050 --> 00:02:30.340
you submit your change to run tests we
use a large-scale distributed CI system

00:02:30.340 --> 00:02:30.350
use a large-scale distributed CI system
 

00:02:30.350 --> 00:02:33.560
use a large-scale distributed CI system
which does not only run your tests but

00:02:33.560 --> 00:02:33.570
which does not only run your tests but
 

00:02:33.570 --> 00:02:35.690
which does not only run your tests but
also all of the tests from code that

00:02:35.690 --> 00:02:35.700
also all of the tests from code that
 

00:02:35.700 --> 00:02:38.870
also all of the tests from code that
depends on your change another thing

00:02:38.870 --> 00:02:38.880
depends on your change another thing
 

00:02:38.880 --> 00:02:40.880
depends on your change another thing
that is very unique about Google is that

00:02:40.880 --> 00:02:40.890
that is very unique about Google is that
 

00:02:40.890 --> 00:02:43.490
that is very unique about Google is that
we have a strong engineering

00:02:43.490 --> 00:02:43.500
we have a strong engineering
 

00:02:43.500 --> 00:02:45.620
we have a strong engineering
productivity culture so that means we

00:02:45.620 --> 00:02:45.630
productivity culture so that means we
 

00:02:45.630 --> 00:02:48.530
productivity culture so that means we
have dedicated teams that only work on

00:02:48.530 --> 00:02:48.540
have dedicated teams that only work on
 

00:02:48.540 --> 00:02:51.470
have dedicated teams that only work on
infrastructure tools and api's to make

00:02:51.470 --> 00:02:51.480
infrastructure tools and api's to make
 

00:02:51.480 --> 00:02:57.770
infrastructure tools and api's to make
developers productive we are part of

00:02:57.770 --> 00:02:57.780
developers productive we are part of
 

00:02:57.780 --> 00:03:00.470
developers productive we are part of
such a team and we've been working on

00:03:00.470 --> 00:03:00.480
such a team and we've been working on
 

00:03:00.480 --> 00:03:03.560
such a team and we've been working on
testing Android apps or Android app

00:03:03.560 --> 00:03:03.570
testing Android apps or Android app
 

00:03:03.570 --> 00:03:08.570
testing Android apps or Android app
testing at Google so I want to take you

00:03:08.570 --> 00:03:08.580
testing at Google so I want to take you
 

00:03:08.580 --> 00:03:11.270
testing at Google so I want to take you
a walk down memory lane what we have

00:03:11.270 --> 00:03:11.280
a walk down memory lane what we have
 

00:03:11.280 --> 00:03:13.450
a walk down memory lane what we have
done at Google to scale Android testing

00:03:13.450 --> 00:03:13.460
done at Google to scale Android testing
 

00:03:13.460 --> 00:03:17.330
done at Google to scale Android testing
so in about 2011 a lot of teams at

00:03:17.330 --> 00:03:17.340
so in about 2011 a lot of teams at
 

00:03:17.340 --> 00:03:19.820
so in about 2011 a lot of teams at
Google actually started to build for

00:03:19.820 --> 00:03:19.830
Google actually started to build for
 

00:03:19.830 --> 00:03:21.980
Google actually started to build for
Android because Android was becoming

00:03:21.980 --> 00:03:21.990
Android because Android was becoming
 

00:03:21.990 --> 00:03:24.860
Android because Android was becoming
more and more popular so at the time

00:03:24.860 --> 00:03:24.870
more and more popular so at the time
 

00:03:24.870 --> 00:03:26.449
more and more popular so at the time
they were just using the standard tool

00:03:26.449 --> 00:03:26.459
they were just using the standard tool
 

00:03:26.459 --> 00:03:28.550
they were just using the standard tool
chain they were using ant to build their

00:03:28.550 --> 00:03:28.560
chain they were using ant to build their
 

00:03:28.560 --> 00:03:30.530
chain they were using ant to build their
apps and they were using Eclipse as an

00:03:30.530 --> 00:03:30.540
apps and they were using Eclipse as an
 

00:03:30.540 --> 00:03:33.290
apps and they were using Eclipse as an
editor but with a growing number of

00:03:33.290 --> 00:03:33.300
editor but with a growing number of
 

00:03:33.300 --> 00:03:35.090
editor but with a growing number of
teams we also added support to our

00:03:35.090 --> 00:03:35.100
teams we also added support to our
 

00:03:35.100 --> 00:03:37.400
teams we also added support to our
internal build system one of the

00:03:37.400 --> 00:03:37.410
internal build system one of the
 

00:03:37.410 --> 00:03:40.490
internal build system one of the
problems that became obvious very early

00:03:40.490 --> 00:03:40.500
problems that became obvious very early
 

00:03:40.500 --> 00:03:44.020
problems that became obvious very early
on was the need for scalable testing and

00:03:44.020 --> 00:03:44.030
on was the need for scalable testing and
 

00:03:44.030 --> 00:03:46.940
on was the need for scalable testing and
so we actually started off very simple

00:03:46.940 --> 00:03:46.950
so we actually started off very simple
 

00:03:46.950 --> 00:03:49.449
so we actually started off very simple
by building a small ho sight test runner

00:03:49.449 --> 00:03:49.459
by building a small ho sight test runner
 

00:03:49.459 --> 00:03:51.800
by building a small ho sight test runner
that would run on the host and in fact

00:03:51.800 --> 00:03:51.810
that would run on the host and in fact
 

00:03:51.810 --> 00:03:55.250
that would run on the host and in fact
it was just a J unit 3 test suite they

00:03:55.250 --> 00:03:55.260
it was just a J unit 3 test suite they
 

00:03:55.260 --> 00:03:57.650
it was just a J unit 3 test suite they
would literally scan an apk list the

00:03:57.650 --> 00:03:57.660
would literally scan an apk list the
 

00:03:57.660 --> 00:03:59.720
would literally scan an apk list the
tests and give it to our instrumentation

00:03:59.720 --> 00:03:59.730
tests and give it to our instrumentation
 

00:03:59.730 --> 00:04:01.460
tests and give it to our instrumentation
test runner that was running on the

00:04:01.460 --> 00:04:01.470
test runner that was running on the
 

00:04:01.470 --> 00:04:05.600
test runner that was running on the
device to execute the test once we had

00:04:05.600 --> 00:04:05.610
device to execute the test once we had
 

00:04:05.610 --> 00:04:07.550
device to execute the test once we had
that we actually build it into our

00:04:07.550 --> 00:04:07.560
that we actually build it into our
 

00:04:07.560 --> 00:04:10.580
that we actually build it into our
continuous integration system one of the

00:04:10.580 --> 00:04:10.590
continuous integration system one of the
 

00:04:10.590 --> 00:04:12.490
continuous integration system one of the
key decisions that we made very early on

00:04:12.490 --> 00:04:12.500
key decisions that we made very early on
 

00:04:12.500 --> 00:04:15.199
key decisions that we made very early on
was to use emulators we call them

00:04:15.199 --> 00:04:15.209
was to use emulators we call them
 

00:04:15.209 --> 00:04:17.860
was to use emulators we call them
virtual devices to run tests at scale

00:04:17.860 --> 00:04:17.870
virtual devices to run tests at scale
 

00:04:17.870 --> 00:04:20.180
virtual devices to run tests at scale
because obviously it makes more sense

00:04:20.180 --> 00:04:20.190
because obviously it makes more sense
 

00:04:20.190 --> 00:04:23.240
because obviously it makes more sense
because you can scale a data center but

00:04:23.240 --> 00:04:23.250
because you can scale a data center but
 

00:04:23.250 --> 00:04:25.219
because you can scale a data center but
you can probably not scale I use be

00:04:25.219 --> 00:04:25.229
you can probably not scale I use be
 

00:04:25.229 --> 00:04:27.340
you can probably not scale I use be
happy so easily

00:04:27.340 --> 00:04:27.350
happy so easily
 

00:04:27.350 --> 00:04:29.530
happy so easily
so we wrote this little Python script

00:04:29.530 --> 00:04:29.540
so we wrote this little Python script
 

00:04:29.540 --> 00:04:31.390
so we wrote this little Python script
probably just 20 lines of code and I'm

00:04:31.390 --> 00:04:31.400
probably just 20 lines of code and I'm
 

00:04:31.400 --> 00:04:34.120
probably just 20 lines of code and I'm
sure many of you have been there that

00:04:34.120 --> 00:04:34.130
sure many of you have been there that
 

00:04:34.130 --> 00:04:36.610
sure many of you have been there that
boots up an emulator for us that allows

00:04:36.610 --> 00:04:36.620
boots up an emulator for us that allows
 

00:04:36.620 --> 00:04:38.800
boots up an emulator for us that allows
us to run the tests and shut it down

00:04:38.800 --> 00:04:38.810
us to run the tests and shut it down
 

00:04:38.810 --> 00:04:42.970
us to run the tests and shut it down
afterwards so while we were working on

00:04:42.970 --> 00:04:42.980
afterwards so while we were working on
 

00:04:42.980 --> 00:04:44.860
afterwards so while we were working on
infrastructure our engineers actually

00:04:44.860 --> 00:04:44.870
infrastructure our engineers actually
 

00:04:44.870 --> 00:04:47.470
infrastructure our engineers actually
started started to write tests and he

00:04:47.470 --> 00:04:47.480
started started to write tests and he
 

00:04:47.480 --> 00:04:50.530
started started to write tests and he
wrote a lot of them a key problem here

00:04:50.530 --> 00:04:50.540
wrote a lot of them a key problem here
 

00:04:50.540 --> 00:04:52.870
wrote a lot of them a key problem here
was especially around functional UI

00:04:52.870 --> 00:04:52.880
was especially around functional UI
 

00:04:52.880 --> 00:04:55.420
was especially around functional UI
testing and as many of you will remember

00:04:55.420 --> 00:04:55.430
testing and as many of you will remember
 

00:04:55.430 --> 00:04:57.790
testing and as many of you will remember
in the early days you only had the

00:04:57.790 --> 00:04:57.800
in the early days you only had the
 

00:04:57.800 --> 00:04:59.950
in the early days you only had the
low-level framework api's we had

00:04:59.950 --> 00:04:59.960
low-level framework api's we had
 

00:04:59.960 --> 00:05:03.130
low-level framework api's we had
activity monitor to track activities you

00:05:03.130 --> 00:05:03.140
activity monitor to track activities you
 

00:05:03.140 --> 00:05:05.770
activity monitor to track activities you
had instrumentation run on UI thread or

00:05:05.770 --> 00:05:05.780
had instrumentation run on UI thread or
 

00:05:05.780 --> 00:05:08.440
had instrumentation run on UI thread or
the infamous wait until idle sync and

00:05:08.440 --> 00:05:08.450
the infamous wait until idle sync and
 

00:05:08.450 --> 00:05:12.330
the infamous wait until idle sync and
even though these methods these api's

00:05:12.330 --> 00:05:12.340
even though these methods these api's
 

00:05:12.340 --> 00:05:16.660
even though these methods these api's
were were easy to use developer

00:05:16.660 --> 00:05:16.670
were were easy to use developer
 

00:05:16.670 --> 00:05:17.740
were were easy to use developer
struggled a lot

00:05:17.740 --> 00:05:17.750
struggled a lot
 

00:05:17.750 --> 00:05:20.920
struggled a lot
writing the reliable UI tests and at the

00:05:20.920 --> 00:05:20.930
writing the reliable UI tests and at the
 

00:05:20.930 --> 00:05:24.190
writing the reliable UI tests and at the
time we thought okay maybe we could find

00:05:24.190 --> 00:05:24.200
time we thought okay maybe we could find
 

00:05:24.200 --> 00:05:25.780
time we thought okay maybe we could find
something better and we actually found

00:05:25.780 --> 00:05:25.790
something better and we actually found
 

00:05:25.790 --> 00:05:28.270
something better and we actually found
that in a community with Robottom so we

00:05:28.270 --> 00:05:28.280
that in a community with Robottom so we
 

00:05:28.280 --> 00:05:31.390
that in a community with Robottom so we
brought Robottom into google and it

00:05:31.390 --> 00:05:31.400
brought Robottom into google and it
 

00:05:31.400 --> 00:05:33.340
brought Robottom into google and it
improved things and we used it for about

00:05:33.340 --> 00:05:33.350
improved things and we used it for about
 

00:05:33.350 --> 00:05:37.000
improved things and we used it for about
a year until the end of 2012 but it had

00:05:37.000 --> 00:05:37.010
a year until the end of 2012 but it had
 

00:05:37.010 --> 00:05:39.520
a year until the end of 2012 but it had
its own issues with the API surface and

00:05:39.520 --> 00:05:39.530
its own issues with the API surface and
 

00:05:39.530 --> 00:05:41.830
its own issues with the API surface and
it didn't solve one of our key issues

00:05:41.830 --> 00:05:41.840
it didn't solve one of our key issues
 

00:05:41.840 --> 00:05:44.320
it didn't solve one of our key issues
which was synchronization and that's

00:05:44.320 --> 00:05:44.330
which was synchronization and that's
 

00:05:44.330 --> 00:05:45.820
which was synchronization and that's
when we started to work on espresso

00:05:45.820 --> 00:05:45.830
when we started to work on espresso
 

00:05:45.830 --> 00:05:48.010
when we started to work on espresso
because we wanted a framework that was

00:05:48.010 --> 00:05:48.020
because we wanted a framework that was
 

00:05:48.020 --> 00:05:50.110
because we wanted a framework that was
easy to use for developers but more

00:05:50.110 --> 00:05:50.120
easy to use for developers but more
 

00:05:50.120 --> 00:05:52.210
easy to use for developers but more
importantly was hiding all the

00:05:52.210 --> 00:05:52.220
importantly was hiding all the
 

00:05:52.220 --> 00:05:54.700
importantly was hiding all the
complexity of instrumentation testing

00:05:54.700 --> 00:05:54.710
complexity of instrumentation testing
 

00:05:54.710 --> 00:05:59.350
complexity of instrumentation testing
from the developer so at that point we

00:05:59.350 --> 00:05:59.360
from the developer so at that point we
 

00:05:59.360 --> 00:06:00.880
from the developer so at that point we
kind of had a decent set up for

00:06:00.880 --> 00:06:00.890
kind of had a decent set up for
 

00:06:00.890 --> 00:06:03.100
kind of had a decent set up for
instrumentation tests but we still had

00:06:03.100 --> 00:06:03.110
instrumentation tests but we still had
 

00:06:03.110 --> 00:06:04.720
instrumentation tests but we still had
to solve the unit testing problem

00:06:04.720 --> 00:06:04.730
to solve the unit testing problem
 

00:06:04.730 --> 00:06:07.360
to solve the unit testing problem
because as you remember at the time all

00:06:07.360 --> 00:06:07.370
because as you remember at the time all
 

00:06:07.370 --> 00:06:09.100
because as you remember at the time all
of your unit tests you usually ran them

00:06:09.100 --> 00:06:09.110
of your unit tests you usually ran them
 

00:06:09.110 --> 00:06:11.950
of your unit tests you usually ran them
on the device but that is expensive and

00:06:11.950 --> 00:06:11.960
on the device but that is expensive and
 

00:06:11.960 --> 00:06:14.260
on the device but that is expensive and
they tend to be slower than running

00:06:14.260 --> 00:06:14.270
they tend to be slower than running
 

00:06:14.270 --> 00:06:17.440
they tend to be slower than running
under JVM so again we reached for a

00:06:17.440 --> 00:06:17.450
under JVM so again we reached for a
 

00:06:17.450 --> 00:06:19.090
under JVM so again we reached for a
solution that the community had already

00:06:19.090 --> 00:06:19.100
solution that the community had already
 

00:06:19.100 --> 00:06:21.400
solution that the community had already
built at the time which was robolectric

00:06:21.400 --> 00:06:21.410
built at the time which was robolectric
 

00:06:21.410 --> 00:06:24.250
built at the time which was robolectric
and robolectric allowed our developers

00:06:24.250 --> 00:06:24.260
and robolectric allowed our developers
 

00:06:24.260 --> 00:06:26.770
and robolectric allowed our developers
to do fast iterative local development

00:06:26.770 --> 00:06:26.780
to do fast iterative local development
 

00:06:26.780 --> 00:06:29.410
to do fast iterative local development
and it's actually still one of the most

00:06:29.410 --> 00:06:29.420
and it's actually still one of the most
 

00:06:29.420 --> 00:06:31.330
and it's actually still one of the most
popular frameworks for unit testing

00:06:31.330 --> 00:06:31.340
popular frameworks for unit testing
 

00:06:31.340 --> 00:06:36.700
popular frameworks for unit testing
within Google so in 2014 we actually had

00:06:36.700 --> 00:06:36.710
within Google so in 2014 we actually had
 

00:06:36.710 --> 00:06:38.350
within Google so in 2014 we actually had
built a lot of experience in testing

00:06:38.350 --> 00:06:38.360
built a lot of experience in testing
 

00:06:38.360 --> 00:06:40.810
built a lot of experience in testing
api's but we were seeing

00:06:40.810 --> 00:06:40.820
api's but we were seeing
 

00:06:40.820 --> 00:06:43.180
api's but we were seeing
that the community was struggling you

00:06:43.180 --> 00:06:43.190
that the community was struggling you
 

00:06:43.190 --> 00:06:44.890
that the community was struggling you
know from the same problems that we did

00:06:44.890 --> 00:06:44.900
know from the same problems that we did
 

00:06:44.900 --> 00:06:47.530
know from the same problems that we did
that's why we decided to bundle all of

00:06:47.530 --> 00:06:47.540
that's why we decided to bundle all of
 

00:06:47.540 --> 00:06:49.510
that's why we decided to bundle all of
our libraries together in the Android

00:06:49.510 --> 00:06:49.520
our libraries together in the Android
 

00:06:49.520 --> 00:06:51.490
our libraries together in the Android
testing support library which then

00:06:51.490 --> 00:06:51.500
testing support library which then
 

00:06:51.500 --> 00:06:53.290
testing support library which then
quickly became the default library for

00:06:53.290 --> 00:06:53.300
quickly became the default library for
 

00:06:53.300 --> 00:06:54.850
quickly became the default library for
developers to write instrumentation

00:06:54.850 --> 00:06:54.860
developers to write instrumentation
 

00:06:54.860 --> 00:06:59.560
developers to write instrumentation
tests fast forward to today we just

00:06:59.560 --> 00:06:59.570
tests fast forward to today we just
 

00:06:59.570 --> 00:07:03.370
tests fast forward to today we just
launched Android X test one at zero it's

00:07:03.370 --> 00:07:03.380
launched Android X test one at zero it's
 

00:07:03.380 --> 00:07:05.860
launched Android X test one at zero it's
not only our first stable release it's

00:07:05.860 --> 00:07:05.870
not only our first stable release it's
 

00:07:05.870 --> 00:07:08.100
not only our first stable release it's
also the first time where we ship

00:07:08.100 --> 00:07:08.110
also the first time where we ship
 

00:07:08.110 --> 00:07:11.200
also the first time where we ship
unified api's that allow you to write

00:07:11.200 --> 00:07:11.210
unified api's that allow you to write
 

00:07:11.210 --> 00:07:15.190
unified api's that allow you to write
tests once and run them anywhere and by

00:07:15.190 --> 00:07:15.200
tests once and run them anywhere and by
 

00:07:15.200 --> 00:07:16.540
tests once and run them anywhere and by
the way we just achieved a major

00:07:16.540 --> 00:07:16.550
the way we just achieved a major
 

00:07:16.550 --> 00:07:19.000
the way we just achieved a major
milestone here at Google we now run 10

00:07:19.000 --> 00:07:19.010
milestone here at Google we now run 10
 

00:07:19.010 --> 00:07:22.120
milestone here at Google we now run 10
billion unit and instrumentation tests

00:07:22.120 --> 00:07:22.130
billion unit and instrumentation tests
 

00:07:22.130 --> 00:07:27.250
billion unit and instrumentation tests
every year on our infrastructure so

00:07:27.250 --> 00:07:27.260
every year on our infrastructure so
 

00:07:27.260 --> 00:07:30.190
every year on our infrastructure so
looking back at those seven years what

00:07:30.190 --> 00:07:30.200
looking back at those seven years what
 

00:07:30.200 --> 00:07:32.710
looking back at those seven years what
would we do differently there's a couple

00:07:32.710 --> 00:07:32.720
would we do differently there's a couple
 

00:07:32.720 --> 00:07:35.410
would we do differently there's a couple
of things I want to mention here so we

00:07:35.410 --> 00:07:35.420
of things I want to mention here so we
 

00:07:35.420 --> 00:07:37.960
of things I want to mention here so we
would probably design for any build

00:07:37.960 --> 00:07:37.970
would probably design for any build
 

00:07:37.970 --> 00:07:41.020
would probably design for any build
system we made some key decisions very

00:07:41.020 --> 00:07:41.030
system we made some key decisions very
 

00:07:41.030 --> 00:07:42.790
system we made some key decisions very
early on that tightly coupled us to

00:07:42.790 --> 00:07:42.800
early on that tightly coupled us to
 

00:07:42.800 --> 00:07:44.980
early on that tightly coupled us to
Google's internal build system but it

00:07:44.980 --> 00:07:44.990
Google's internal build system but it
 

00:07:44.990 --> 00:07:47.050
Google's internal build system but it
quickly became a problem because even at

00:07:47.050 --> 00:07:47.060
quickly became a problem because even at
 

00:07:47.060 --> 00:07:48.640
quickly became a problem because even at
Google not everybody's using Google's

00:07:48.640 --> 00:07:48.650
Google not everybody's using Google's
 

00:07:48.650 --> 00:07:50.380
Google not everybody's using Google's
internal build system and we weren't

00:07:50.380 --> 00:07:50.390
internal build system and we weren't
 

00:07:50.390 --> 00:07:52.990
internal build system and we weren't
able to share our builds our hosted

00:07:52.990 --> 00:07:53.000
able to share our builds our hosted
 

00:07:53.000 --> 00:07:55.600
able to share our builds our hosted
infrastructure with them but also not

00:07:55.600 --> 00:07:55.610
infrastructure with them but also not
 

00:07:55.610 --> 00:07:57.310
infrastructure with them but also not
with the community and we couldn't

00:07:57.310 --> 00:07:57.320
with the community and we couldn't
 

00:07:57.320 --> 00:08:01.180
with the community and we couldn't
open-source it similarly we didn't build

00:08:01.180 --> 00:08:01.190
open-source it similarly we didn't build
 

00:08:01.190 --> 00:08:02.920
open-source it similarly we didn't build
some of the tools that we've built

00:08:02.920 --> 00:08:02.930
some of the tools that we've built
 

00:08:02.930 --> 00:08:05.170
some of the tools that we've built
weren't cross-platform so they only

00:08:05.170 --> 00:08:05.180
weren't cross-platform so they only
 

00:08:05.180 --> 00:08:08.940
weren't cross-platform so they only
worked on Linux but not Mac and Windows

00:08:08.940 --> 00:08:08.950
worked on Linux but not Mac and Windows
 

00:08:08.950 --> 00:08:11.890
worked on Linux but not Mac and Windows
another thing that we would probably do

00:08:11.890 --> 00:08:11.900
another thing that we would probably do
 

00:08:11.900 --> 00:08:13.750
another thing that we would probably do
differently even though retrospectively

00:08:13.750 --> 00:08:13.760
differently even though retrospectively
 

00:08:13.760 --> 00:08:15.100
differently even though retrospectively
it probably was a good thing that we

00:08:15.100 --> 00:08:15.110
it probably was a good thing that we
 

00:08:15.110 --> 00:08:17.410
it probably was a good thing that we
started off small and then scaled up our

00:08:17.410 --> 00:08:17.420
started off small and then scaled up our
 

00:08:17.420 --> 00:08:20.200
started off small and then scaled up our
testing but while the apps grew and the

00:08:20.200 --> 00:08:20.210
testing but while the apps grew and the
 

00:08:20.210 --> 00:08:22.390
testing but while the apps grew and the
ecosystem grew there were more and more

00:08:22.390 --> 00:08:22.400
ecosystem grew there were more and more
 

00:08:22.400 --> 00:08:24.130
ecosystem grew there were more and more
requirements and we usually just built

00:08:24.130 --> 00:08:24.140
requirements and we usually just built
 

00:08:24.140 --> 00:08:26.710
requirements and we usually just built
them into our infrastructure but we

00:08:26.710 --> 00:08:26.720
them into our infrastructure but we
 

00:08:26.720 --> 00:08:29.140
them into our infrastructure but we
didn't have a mechanism for teams to

00:08:29.140 --> 00:08:29.150
didn't have a mechanism for teams to
 

00:08:29.150 --> 00:08:31.840
didn't have a mechanism for teams to
customize this infrastructure it's led

00:08:31.840 --> 00:08:31.850
customize this infrastructure it's led
 

00:08:31.850 --> 00:08:33.670
customize this infrastructure it's led
to a point where we suffered from high

00:08:33.670 --> 00:08:33.680
to a point where we suffered from high
 

00:08:33.680 --> 00:08:36.070
to a point where we suffered from high
code complexity it was hard to maintain

00:08:36.070 --> 00:08:36.080
code complexity it was hard to maintain
 

00:08:36.080 --> 00:08:38.830
code complexity it was hard to maintain
and some features couldn't be removed

00:08:38.830 --> 00:08:38.840
and some features couldn't be removed
 

00:08:38.840 --> 00:08:41.520
and some features couldn't be removed
but they weren't used anymore

00:08:41.520 --> 00:08:41.530
but they weren't used anymore
 

00:08:41.530 --> 00:08:43.600
but they weren't used anymore
the last thing I wanna mention is

00:08:43.600 --> 00:08:43.610
the last thing I wanna mention is
 

00:08:43.610 --> 00:08:46.150
the last thing I wanna mention is
configuration our hosted infrastructure

00:08:46.150 --> 00:08:46.160
configuration our hosted infrastructure
 

00:08:46.160 --> 00:08:47.860
configuration our hosted infrastructure
was getting configuration from many

00:08:47.860 --> 00:08:47.870
was getting configuration from many
 

00:08:47.870 --> 00:08:51.010
was getting configuration from many
different sources so we had Flags system

00:08:51.010 --> 00:08:51.020
different sources so we had Flags system
 

00:08:51.020 --> 00:08:53.380
different sources so we had Flags system
environment variables in config files

00:08:53.380 --> 00:08:53.390
environment variables in config files
 

00:08:53.390 --> 00:08:54.210
environment variables in config files
and his

00:08:54.210 --> 00:08:54.220
and his
 

00:08:54.220 --> 00:08:57.990
and his
very hard to track down box in the

00:08:57.990 --> 00:08:58.000
very hard to track down box in the
 

00:08:58.000 --> 00:09:00.329
very hard to track down box in the
infrastructure itself so about a year

00:09:00.329 --> 00:09:00.339
infrastructure itself so about a year
 

00:09:00.339 --> 00:09:03.600
infrastructure itself so about a year
ago our team sat down with app teams in

00:09:03.600 --> 00:09:03.610
ago our team sat down with app teams in
 

00:09:03.610 --> 00:09:06.590
ago our team sat down with app teams in
Google and we wanted to learn about

00:09:06.590 --> 00:09:06.600
Google and we wanted to learn about
 

00:09:06.600 --> 00:09:09.660
Google and we wanted to learn about
about the past and the future and

00:09:09.660 --> 00:09:09.670
about the past and the future and
 

00:09:09.670 --> 00:09:11.040
about the past and the future and
especially how the Android testing

00:09:11.040 --> 00:09:11.050
especially how the Android testing
 

00:09:11.050 --> 00:09:14.429
especially how the Android testing
landscape had changed and so what we

00:09:14.429 --> 00:09:14.439
landscape had changed and so what we
 

00:09:14.439 --> 00:09:16.230
landscape had changed and so what we
came up with to solve some of the

00:09:16.230 --> 00:09:16.240
came up with to solve some of the
 

00:09:16.240 --> 00:09:17.960
came up with to solve some of the
problems that came out of the discussion

00:09:17.960 --> 00:09:17.970
problems that came out of the discussion
 

00:09:17.970 --> 00:09:21.569
problems that came out of the discussion
was project nitrogen project nitrogen is

00:09:21.569 --> 00:09:21.579
was project nitrogen project nitrogen is
 

00:09:21.579 --> 00:09:24.150
was project nitrogen project nitrogen is
our new unified testing platform which

00:09:24.150 --> 00:09:24.160
our new unified testing platform which
 

00:09:24.160 --> 00:09:26.460
our new unified testing platform which
we first talked about at i/o this year

00:09:26.460 --> 00:09:26.470
we first talked about at i/o this year
 

00:09:26.470 --> 00:09:30.590
we first talked about at i/o this year
and which will ship to you in 2019

00:09:30.590 --> 00:09:30.600
and which will ship to you in 2019
 

00:09:30.600 --> 00:09:33.389
and which will ship to you in 2019
project nitrogen is currently used by a

00:09:33.389 --> 00:09:33.399
project nitrogen is currently used by a
 

00:09:33.399 --> 00:09:36.090
project nitrogen is currently used by a
small number of apps inside of Google

00:09:36.090 --> 00:09:36.100
small number of apps inside of Google
 

00:09:36.100 --> 00:09:38.819
small number of apps inside of Google
and we're slowly scaling it up to some

00:09:38.819 --> 00:09:38.829
and we're slowly scaling it up to some
 

00:09:38.829 --> 00:09:41.340
and we're slowly scaling it up to some
of the biggest apps in the world and the

00:09:41.340 --> 00:09:41.350
of the biggest apps in the world and the
 

00:09:41.350 --> 00:09:43.079
of the biggest apps in the world and the
reason why we're doing this is simply

00:09:43.079 --> 00:09:43.089
reason why we're doing this is simply
 

00:09:43.089 --> 00:09:45.929
reason why we're doing this is simply
because we want to battle test it first

00:09:45.929 --> 00:09:45.939
because we want to battle test it first
 

00:09:45.939 --> 00:09:48.420
because we want to battle test it first
before we ship it to you but the point

00:09:48.420 --> 00:09:48.430
before we ship it to you but the point
 

00:09:48.430 --> 00:09:50.699
before we ship it to you but the point
being here is we want to give all this

00:09:50.699 --> 00:09:50.709
being here is we want to give all this
 

00:09:50.709 --> 00:09:52.590
being here is we want to give all this
infrastructure that we use to run ten

00:09:52.590 --> 00:09:52.600
infrastructure that we use to run ten
 

00:09:52.600 --> 00:09:58.410
infrastructure that we use to run ten
billion tests to you so nitrogen solves

00:09:58.410 --> 00:09:58.420
billion tests to you so nitrogen solves
 

00:09:58.420 --> 00:10:01.049
billion tests to you so nitrogen solves
many problems but two of the key issues

00:10:01.049 --> 00:10:01.059
many problems but two of the key issues
 

00:10:01.059 --> 00:10:03.090
many problems but two of the key issues
that we're trying to solve with nitrogen

00:10:03.090 --> 00:10:03.100
that we're trying to solve with nitrogen
 

00:10:03.100 --> 00:10:06.420
that we're trying to solve with nitrogen
is first we want to create a unified

00:10:06.420 --> 00:10:06.430
is first we want to create a unified
 

00:10:06.430 --> 00:10:09.290
is first we want to create a unified
entry point into Android development and

00:10:09.290 --> 00:10:09.300
entry point into Android development and
 

00:10:09.300 --> 00:10:12.240
entry point into Android development and
secondly we want you to n able to write

00:10:12.240 --> 00:10:12.250
secondly we want you to n able to write
 

00:10:12.250 --> 00:10:14.879
secondly we want you to n able to write
tests with the unified API and move them

00:10:14.879 --> 00:10:14.889
tests with the unified API and move them
 

00:10:14.889 --> 00:10:17.519
tests with the unified API and move them
between layers if you think about

00:10:17.519 --> 00:10:17.529
between layers if you think about
 

00:10:17.529 --> 00:10:20.309
between layers if you think about
Android testing today it looks a little

00:10:20.309 --> 00:10:20.319
Android testing today it looks a little
 

00:10:20.319 --> 00:10:23.249
Android testing today it looks a little
bit like this right you have tools on

00:10:23.249 --> 00:10:23.259
bit like this right you have tools on
 

00:10:23.259 --> 00:10:25.319
bit like this right you have tools on
the left-hand side such as Android

00:10:25.319 --> 00:10:25.329
the left-hand side such as Android
 

00:10:25.329 --> 00:10:27.780
the left-hand side such as Android
studio Gradle you have your CI server

00:10:27.780 --> 00:10:27.790
studio Gradle you have your CI server
 

00:10:27.790 --> 00:10:31.319
studio Gradle you have your CI server
and maybe even another build system such

00:10:31.319 --> 00:10:31.329
and maybe even another build system such
 

00:10:31.329 --> 00:10:33.509
and maybe even another build system such
as basil on the other end of the

00:10:33.509 --> 00:10:33.519
as basil on the other end of the
 

00:10:33.519 --> 00:10:35.639
as basil on the other end of the
spectrum you have all the different

00:10:35.639 --> 00:10:35.649
spectrum you have all the different
 

00:10:35.649 --> 00:10:38.879
spectrum you have all the different
runtimes that you want to run on we call

00:10:38.879 --> 00:10:38.889
runtimes that you want to run on we call
 

00:10:38.889 --> 00:10:42.509
runtimes that you want to run on we call
runtime device devices in nitrogen so

00:10:42.509 --> 00:10:42.519
runtime device devices in nitrogen so
 

00:10:42.519 --> 00:10:43.590
runtime device devices in nitrogen so
you want to run your tests on a

00:10:43.590 --> 00:10:43.600
you want to run your tests on a
 

00:10:43.600 --> 00:10:46.319
you want to run your tests on a
simulated device or a virtual or

00:10:46.319 --> 00:10:46.329
simulated device or a virtual or
 

00:10:46.329 --> 00:10:48.629
simulated device or a virtual or
physical device or even on a remote

00:10:48.629 --> 00:10:48.639
physical device or even on a remote
 

00:10:48.639 --> 00:10:50.999
physical device or even on a remote
device that runs in a device labs such

00:10:50.999 --> 00:10:51.009
device that runs in a device labs such
 

00:10:51.009 --> 00:10:54.329
device that runs in a device labs such
as firebase test lab but in order to do

00:10:54.329 --> 00:10:54.339
as firebase test lab but in order to do
 

00:10:54.339 --> 00:10:56.759
as firebase test lab but in order to do
so you have many different entry points

00:10:56.759 --> 00:10:56.769
so you have many different entry points
 

00:10:56.769 --> 00:10:58.799
so you have many different entry points
and it looks a little bit like this you

00:10:58.799 --> 00:10:58.809
and it looks a little bit like this you
 

00:10:58.809 --> 00:11:00.720
and it looks a little bit like this you
have a different configuration for every

00:11:00.720 --> 00:11:00.730
have a different configuration for every
 

00:11:00.730 --> 00:11:02.429
have a different configuration for every
tool you have different roles you have

00:11:02.429 --> 00:11:02.439
tool you have different roles you have
 

00:11:02.439 --> 00:11:05.309
tool you have different roles you have
different tasks and it just becomes a

00:11:05.309 --> 00:11:05.319
different tasks and it just becomes a
 

00:11:05.319 --> 00:11:07.710
different tasks and it just becomes a
nightmare to maintain and

00:11:07.710 --> 00:11:07.720
nightmare to maintain and
 

00:11:07.720 --> 00:11:08.999
nightmare to maintain and
actually what we see in Google is

00:11:08.999 --> 00:11:09.009
actually what we see in Google is
 

00:11:09.009 --> 00:11:10.920
actually what we see in Google is
because it's so hard to move from one to

00:11:10.920 --> 00:11:10.930
because it's so hard to move from one to
 

00:11:10.930 --> 00:11:13.470
because it's so hard to move from one to
the other they would school towards one

00:11:13.470 --> 00:11:13.480
the other they would school towards one
 

00:11:13.480 --> 00:11:17.699
the other they would school towards one
type of a test or another so what we

00:11:17.699 --> 00:11:17.709
type of a test or another so what we
 

00:11:17.709 --> 00:11:19.590
type of a test or another so what we
want to do with nitrogen is we want to

00:11:19.590 --> 00:11:19.600
want to do with nitrogen is we want to
 

00:11:19.600 --> 00:11:22.559
want to do with nitrogen is we want to
have a unified entry point and nitrogen

00:11:22.559 --> 00:11:22.569
have a unified entry point and nitrogen
 

00:11:22.569 --> 00:11:26.189
have a unified entry point and nitrogen
itself is just a standalone binary a

00:11:26.189 --> 00:11:26.199
itself is just a standalone binary a
 

00:11:26.199 --> 00:11:29.730
itself is just a standalone binary a
standalone tool which infrastructure

00:11:29.730 --> 00:11:29.740
standalone tool which infrastructure
 

00:11:29.740 --> 00:11:31.679
standalone tool which infrastructure
developers can use to really customize

00:11:31.679 --> 00:11:31.689
developers can use to really customize
 

00:11:31.689 --> 00:11:35.040
developers can use to really customize
their infrastructure but obviously

00:11:35.040 --> 00:11:35.050
their infrastructure but obviously
 

00:11:35.050 --> 00:11:37.110
their infrastructure but obviously
there's also all these auto developers

00:11:37.110 --> 00:11:37.120
there's also all these auto developers
 

00:11:37.120 --> 00:11:38.999
there's also all these auto developers
who don't work on infrastructure and

00:11:38.999 --> 00:11:39.009
who don't work on infrastructure and
 

00:11:39.009 --> 00:11:42.059
who don't work on infrastructure and
work on actual lab code for them we want

00:11:42.059 --> 00:11:42.069
work on actual lab code for them we want
 

00:11:42.069 --> 00:11:45.540
work on actual lab code for them we want
to provide integrations into all the

00:11:45.540 --> 00:11:45.550
to provide integrations into all the
 

00:11:45.550 --> 00:11:47.970
to provide integrations into all the
tools on the left-hand side to make it

00:11:47.970 --> 00:11:47.980
tools on the left-hand side to make it
 

00:11:47.980 --> 00:11:51.300
tools on the left-hand side to make it
easy to run tests and at that point if

00:11:51.300 --> 00:11:51.310
easy to run tests and at that point if
 

00:11:51.310 --> 00:11:53.160
easy to run tests and at that point if
you have a single entry point and a

00:11:53.160 --> 00:11:53.170
you have a single entry point and a
 

00:11:53.170 --> 00:11:56.040
you have a single entry point and a
unified test it fits very well within

00:11:56.040 --> 00:11:56.050
unified test it fits very well within
 

00:11:56.050 --> 00:11:58.079
unified test it fits very well within
your developer workflow because you can

00:11:58.079 --> 00:11:58.089
your developer workflow because you can
 

00:11:58.089 --> 00:12:01.619
your developer workflow because you can
do local fast iterative development on a

00:12:01.619 --> 00:12:01.629
do local fast iterative development on a
 

00:12:01.629 --> 00:12:05.340
do local fast iterative development on a
simulated device then in pre submit

00:12:05.340 --> 00:12:05.350
simulated device then in pre submit
 

00:12:05.350 --> 00:12:06.929
simulated device then in pre submit
before you actually submit your change

00:12:06.929 --> 00:12:06.939
before you actually submit your change
 

00:12:06.939 --> 00:12:10.249
before you actually submit your change
you can run on an emulator matrix and

00:12:10.249 --> 00:12:10.259
you can run on an emulator matrix and
 

00:12:10.259 --> 00:12:13.559
you can run on an emulator matrix and
lastly in post submit you can run on a

00:12:13.559 --> 00:12:13.569
lastly in post submit you can run on a
 

00:12:13.569 --> 00:12:16.499
lastly in post submit you can run on a
remote device a physical device in

00:12:16.499 --> 00:12:16.509
remote device a physical device in
 

00:12:16.509 --> 00:12:19.949
remote device a physical device in
firebase test lab and that's really what

00:12:19.949 --> 00:12:19.959
firebase test lab and that's really what
 

00:12:19.959 --> 00:12:21.840
firebase test lab and that's really what
we're trying to do with

00:12:21.840 --> 00:12:21.850
we're trying to do with
 

00:12:21.850 --> 00:12:23.819
we're trying to do with
nitrogen-nitrogen

00:12:23.819 --> 00:12:23.829
nitrogen-nitrogen
 

00:12:23.829 --> 00:12:27.179
nitrogen-nitrogen
allows you to run tests at scale it is

00:12:27.179 --> 00:12:27.189
allows you to run tests at scale it is
 

00:12:27.189 --> 00:12:29.939
allows you to run tests at scale it is
highly configurable it was built with

00:12:29.939 --> 00:12:29.949
highly configurable it was built with
 

00:12:29.949 --> 00:12:33.230
highly configurable it was built with
customization and extensibility in mind

00:12:33.230 --> 00:12:33.240
customization and extensibility in mind
 

00:12:33.240 --> 00:12:36.210
customization and extensibility in mind
you can execute unit and instrumentation

00:12:36.210 --> 00:12:36.220
you can execute unit and instrumentation
 

00:12:36.220 --> 00:12:40.590
you can execute unit and instrumentation
tests it vastly improves reporting and

00:12:40.590 --> 00:12:40.600
tests it vastly improves reporting and
 

00:12:40.600 --> 00:12:43.920
tests it vastly improves reporting and
therefore debugging and maybe one of the

00:12:43.920 --> 00:12:43.930
therefore debugging and maybe one of the
 

00:12:43.930 --> 00:12:45.720
therefore debugging and maybe one of the
most exciting things as it ships with

00:12:45.720 --> 00:12:45.730
most exciting things as it ships with
 

00:12:45.730 --> 00:12:47.460
most exciting things as it ships with
its own virtual device management

00:12:47.460 --> 00:12:47.470
its own virtual device management
 

00:12:47.470 --> 00:12:51.170
its own virtual device management
solution that manages devices for you

00:12:51.170 --> 00:12:51.180
solution that manages devices for you
 

00:12:51.180 --> 00:12:53.670
solution that manages devices for you
and that's actually something I think a

00:12:53.670 --> 00:12:53.680
and that's actually something I think a
 

00:12:53.680 --> 00:12:55.650
and that's actually something I think a
lot of people in the community I've been

00:12:55.650 --> 00:12:55.660
lot of people in the community I've been
 

00:12:55.660 --> 00:13:00.119
lot of people in the community I've been
asking for us for quite a while so

00:13:00.119 --> 00:13:00.129
asking for us for quite a while so
 

00:13:00.129 --> 00:13:03.509
asking for us for quite a while so
nitrogen is cross-platform and we really

00:13:03.509 --> 00:13:03.519
nitrogen is cross-platform and we really
 

00:13:03.519 --> 00:13:05.249
nitrogen is cross-platform and we really
build it from the ground up with all the

00:13:05.249 --> 00:13:05.259
build it from the ground up with all the
 

00:13:05.259 --> 00:13:08.699
build it from the ground up with all the
experience that we have seven years in

00:13:08.699 --> 00:13:08.709
experience that we have seven years in
 

00:13:08.709 --> 00:13:11.480
experience that we have seven years in
ho site and device that infrastructure

00:13:11.480 --> 00:13:11.490
ho site and device that infrastructure
 

00:13:11.490 --> 00:13:13.949
ho site and device that infrastructure
it will support Mac Windows and Linux

00:13:13.949 --> 00:13:13.959
it will support Mac Windows and Linux
 

00:13:13.959 --> 00:13:17.699
it will support Mac Windows and Linux
and is written in Kaplan and we really

00:13:17.699 --> 00:13:17.709
and is written in Kaplan and we really
 

00:13:17.709 --> 00:13:20.549
and is written in Kaplan and we really
build it in a way such that we hopefully

00:13:20.549 --> 00:13:20.559
build it in a way such that we hopefully
 

00:13:20.559 --> 00:13:21.510
build it in a way such that we hopefully
that

00:13:21.510 --> 00:13:21.520
that
 

00:13:21.520 --> 00:13:23.490
that
hopefully going to be good for the next

00:13:23.490 --> 00:13:23.500
hopefully going to be good for the next
 

00:13:23.500 --> 00:13:29.280
hopefully going to be good for the next
seven years nitrogen as I was saying

00:13:29.280 --> 00:13:29.290
seven years nitrogen as I was saying
 

00:13:29.290 --> 00:13:33.780
seven years nitrogen as I was saying
it's just a standalone tool so it can be

00:13:33.780 --> 00:13:33.790
it's just a standalone tool so it can be
 

00:13:33.790 --> 00:13:36.390
it's just a standalone tool so it can be
easily integrated into any build system

00:13:36.390 --> 00:13:36.400
easily integrated into any build system
 

00:13:36.400 --> 00:13:39.300
easily integrated into any build system
and we're working on integrations for

00:13:39.300 --> 00:13:39.310
and we're working on integrations for
 

00:13:39.310 --> 00:13:44.550
and we're working on integrations for
Gradle basal and basal we're adding

00:13:44.550 --> 00:13:44.560
Gradle basal and basal we're adding
 

00:13:44.560 --> 00:13:48.530
Gradle basal and basal we're adding
sharding and parallel test execution and

00:13:48.530 --> 00:13:48.540
sharding and parallel test execution and
 

00:13:48.540 --> 00:13:50.700
sharding and parallel test execution and
continuous integration support will be

00:13:50.700 --> 00:13:50.710
continuous integration support will be
 

00:13:50.710 --> 00:13:54.630
continuous integration support will be
there from the start on the device side

00:13:54.630 --> 00:13:54.640
there from the start on the device side
 

00:13:54.640 --> 00:13:57.150
there from the start on the device side
we're initially planning to have support

00:13:57.150 --> 00:13:57.160
we're initially planning to have support
 

00:13:57.160 --> 00:13:59.430
we're initially planning to have support
for at least simulated virtual and

00:13:59.430 --> 00:13:59.440
for at least simulated virtual and
 

00:13:59.440 --> 00:14:03.540
for at least simulated virtual and
physical devices as well as device labs

00:14:03.540 --> 00:14:03.550
physical devices as well as device labs
 

00:14:03.550 --> 00:14:07.410
physical devices as well as device labs
such as firebase test lab and you can

00:14:07.410 --> 00:14:07.420
such as firebase test lab and you can
 

00:14:07.420 --> 00:14:10.350
such as firebase test lab and you can
even add your custom devices if you have

00:14:10.350 --> 00:14:10.360
even add your custom devices if you have
 

00:14:10.360 --> 00:14:14.520
even add your custom devices if you have
custom hardware so let's switch gears a

00:14:14.520 --> 00:14:14.530
custom hardware so let's switch gears a
 

00:14:14.530 --> 00:14:16.650
custom hardware so let's switch gears a
little bit and talk a little bit about

00:14:16.650 --> 00:14:16.660
little bit and talk a little bit about
 

00:14:16.660 --> 00:14:19.370
little bit and talk a little bit about
the high-level architecture of nitrogen

00:14:19.370 --> 00:14:19.380
the high-level architecture of nitrogen
 

00:14:19.380 --> 00:14:22.230
the high-level architecture of nitrogen
so nitrogen is basically split into two

00:14:22.230 --> 00:14:22.240
so nitrogen is basically split into two
 

00:14:22.240 --> 00:14:25.590
so nitrogen is basically split into two
parts we have a host side infrastructure

00:14:25.590 --> 00:14:25.600
parts we have a host side infrastructure
 

00:14:25.600 --> 00:14:27.960
parts we have a host side infrastructure
that is all the coasts all the code that

00:14:27.960 --> 00:14:27.970
that is all the coasts all the code that
 

00:14:27.970 --> 00:14:31.080
that is all the coasts all the code that
runs on a host and we've done something

00:14:31.080 --> 00:14:31.090
runs on a host and we've done something
 

00:14:31.090 --> 00:14:32.550
runs on a host and we've done something
new we also have an on device

00:14:32.550 --> 00:14:32.560
new we also have an on device
 

00:14:32.560 --> 00:14:34.770
new we also have an on device
infrastructure which basically means

00:14:34.770 --> 00:14:34.780
infrastructure which basically means
 

00:14:34.780 --> 00:14:37.200
infrastructure which basically means
we've moved some of our infrastructure

00:14:37.200 --> 00:14:37.210
we've moved some of our infrastructure
 

00:14:37.210 --> 00:14:39.720
we've moved some of our infrastructure
on third on to the device which is a

00:14:39.720 --> 00:14:39.730
on third on to the device which is a
 

00:14:39.730 --> 00:14:42.300
on third on to the device which is a
much saner environment to reason about

00:14:42.300 --> 00:14:42.310
much saner environment to reason about
 

00:14:42.310 --> 00:14:44.700
much saner environment to reason about
and the device is also the main

00:14:44.700 --> 00:14:44.710
and the device is also the main
 

00:14:44.710 --> 00:14:48.990
and the device is also the main
abstraction that we use in nitrogen for

00:14:48.990 --> 00:14:49.000
abstraction that we use in nitrogen for
 

00:14:49.000 --> 00:14:52.800
abstraction that we use in nitrogen for
different runtimes so the host side

00:14:52.800 --> 00:14:52.810
different runtimes so the host side
 

00:14:52.810 --> 00:14:56.220
different runtimes so the host side
runner is mostly responsible for finding

00:14:56.220 --> 00:14:56.230
runner is mostly responsible for finding
 

00:14:56.230 --> 00:14:58.440
runner is mostly responsible for finding
a device for you setting up the device

00:14:58.440 --> 00:14:58.450
a device for you setting up the device
 

00:14:58.450 --> 00:15:02.310
a device for you setting up the device
for test execution and then requesting a

00:15:02.310 --> 00:15:02.320
for test execution and then requesting a
 

00:15:02.320 --> 00:15:05.400
for test execution and then requesting a
test run it can be easily configured

00:15:05.400 --> 00:15:05.410
test run it can be easily configured
 

00:15:05.410 --> 00:15:09.090
test run it can be easily configured
with a proto buffer configuration and it

00:15:09.090 --> 00:15:09.100
with a proto buffer configuration and it
 

00:15:09.100 --> 00:15:12.210
with a proto buffer configuration and it
allows you to customize things like the

00:15:12.210 --> 00:15:12.220
allows you to customize things like the
 

00:15:12.220 --> 00:15:15.950
allows you to customize things like the
test executor and the whole test harness

00:15:15.950 --> 00:15:15.960
test executor and the whole test harness
 

00:15:15.960 --> 00:15:19.830
test executor and the whole test harness
to decouple the host from the device we

00:15:19.830 --> 00:15:19.840
to decouple the host from the device we
 

00:15:19.840 --> 00:15:22.710
to decouple the host from the device we
have a new Orchestrator service you can

00:15:22.710 --> 00:15:22.720
have a new Orchestrator service you can
 

00:15:22.720 --> 00:15:25.050
have a new Orchestrator service you can
think of it as the brain of test

00:15:25.050 --> 00:15:25.060
think of it as the brain of test
 

00:15:25.060 --> 00:15:27.570
think of it as the brain of test
execution that runs on a device and it's

00:15:27.570 --> 00:15:27.580
execution that runs on a device and it's
 

00:15:27.580 --> 00:15:30.750
execution that runs on a device and it's
responsible for discovery filtering and

00:15:30.750 --> 00:15:30.760
responsible for discovery filtering and
 

00:15:30.760 --> 00:15:34.680
responsible for discovery filtering and
sorting and execution

00:15:34.680 --> 00:15:34.690
sorting and execution
 

00:15:34.690 --> 00:15:38.610
sorting and execution
an Orchestrator service is just a G RPC

00:15:38.610 --> 00:15:38.620
an Orchestrator service is just a G RPC
 

00:15:38.620 --> 00:15:41.309
an Orchestrator service is just a G RPC
service that can be implemented by any

00:15:41.309 --> 00:15:41.319
service that can be implemented by any
 

00:15:41.319 --> 00:15:44.879
service that can be implemented by any
device and we in fact use G RPC to

00:15:44.879 --> 00:15:44.889
device and we in fact use G RPC to
 

00:15:44.889 --> 00:15:46.470
device and we in fact use G RPC to
communicate between the host and the

00:15:46.470 --> 00:15:46.480
communicate between the host and the
 

00:15:46.480 --> 00:15:48.600
communicate between the host and the
device which does not give us

00:15:48.600 --> 00:15:48.610
device which does not give us
 

00:15:48.610 --> 00:15:50.819
device which does not give us
performance and speed it also gives us a

00:15:50.819 --> 00:15:50.829
performance and speed it also gives us a
 

00:15:50.829 --> 00:15:53.550
performance and speed it also gives us a
lot of stability and it allows us to

00:15:53.550 --> 00:15:53.560
lot of stability and it allows us to
 

00:15:53.560 --> 00:15:55.800
lot of stability and it allows us to
stream test results back to the host in

00:15:55.800 --> 00:15:55.810
stream test results back to the host in
 

00:15:55.810 --> 00:15:59.850
stream test results back to the host in
real time we also have a lot of

00:15:59.850 --> 00:15:59.860
real time we also have a lot of
 

00:15:59.860 --> 00:16:02.790
real time we also have a lot of
extension points so we'll have host

00:16:02.790 --> 00:16:02.800
extension points so we'll have host
 

00:16:02.800 --> 00:16:05.369
extension points so we'll have host
plugins that allow you to run code on a

00:16:05.369 --> 00:16:05.379
plugins that allow you to run code on a
 

00:16:05.379 --> 00:16:08.280
plugins that allow you to run code on a
host and we'll also have device plugins

00:16:08.280 --> 00:16:08.290
host and we'll also have device plugins
 

00:16:08.290 --> 00:16:11.749
host and we'll also have device plugins
that allow you to run code on a device

00:16:11.749 --> 00:16:11.759
that allow you to run code on a device
 

00:16:11.759 --> 00:16:13.920
that allow you to run code on a device
so let's dive into each of these

00:16:13.920 --> 00:16:13.930
so let's dive into each of these
 

00:16:13.930 --> 00:16:19.379
so let's dive into each of these
sections as I mentioned before we use a

00:16:19.379 --> 00:16:19.389
sections as I mentioned before we use a
 

00:16:19.389 --> 00:16:21.660
sections as I mentioned before we use a
single protocol figuration with a

00:16:21.660 --> 00:16:21.670
single protocol figuration with a
 

00:16:21.670 --> 00:16:25.920
single protocol figuration with a
declarative set of proto's this allows

00:16:25.920 --> 00:16:25.930
declarative set of proto's this allows
 

00:16:25.930 --> 00:16:29.509
declarative set of proto's this allows
you to define devices your test fixtures

00:16:29.509 --> 00:16:29.519
you to define devices your test fixtures
 

00:16:29.519 --> 00:16:32.490
you to define devices your test fixtures
so you can define things like apks that

00:16:32.490 --> 00:16:32.500
so you can define things like apks that
 

00:16:32.500 --> 00:16:34.530
so you can define things like apks that
you want to install data dependencies

00:16:34.530 --> 00:16:34.540
you want to install data dependencies
 

00:16:34.540 --> 00:16:36.090
you want to install data dependencies
that you want to push on the device and

00:16:36.090 --> 00:16:36.100
that you want to push on the device and
 

00:16:36.100 --> 00:16:38.490
that you want to push on the device and
it can declare your host and device

00:16:38.490 --> 00:16:38.500
it can declare your host and device
 

00:16:38.500 --> 00:16:42.720
it can declare your host and device
plug-ins we initially will have support

00:16:42.720 --> 00:16:42.730
plug-ins we initially will have support
 

00:16:42.730 --> 00:16:45.569
plug-ins we initially will have support
for single device executors parallel

00:16:45.569 --> 00:16:45.579
for single device executors parallel
 

00:16:45.579 --> 00:16:49.230
for single device executors parallel
device executors to run on multiple

00:16:49.230 --> 00:16:49.240
device executors to run on multiple
 

00:16:49.240 --> 00:16:52.290
device executors to run on multiple
devices in parallel and we'll also have

00:16:52.290 --> 00:16:52.300
devices in parallel and we'll also have
 

00:16:52.300 --> 00:16:55.559
devices in parallel and we'll also have
a new multi device executor which will

00:16:55.559 --> 00:16:55.569
a new multi device executor which will
 

00:16:55.569 --> 00:16:57.889
a new multi device executor which will
allow you to do things like

00:16:57.889 --> 00:16:57.899
allow you to do things like
 

00:16:57.899 --> 00:16:59.879
allow you to do things like
orchestrating a test run between a

00:16:59.879 --> 00:16:59.889
orchestrating a test run between a
 

00:16:59.889 --> 00:17:02.579
orchestrating a test run between a
device and a device or a device and a

00:17:02.579 --> 00:17:02.589
device and a device or a device and a
 

00:17:02.589 --> 00:17:05.370
device and a device or a device and a
watch which is something that we

00:17:05.370 --> 00:17:05.380
watch which is something that we
 

00:17:05.380 --> 00:17:09.449
watch which is something that we
increasingly see as a requirement the

00:17:09.449 --> 00:17:09.459
increasingly see as a requirement the
 

00:17:09.459 --> 00:17:12.539
increasingly see as a requirement the
good news is if you're just an app

00:17:12.539 --> 00:17:12.549
good news is if you're just an app
 

00:17:12.549 --> 00:17:15.539
good news is if you're just an app
developer you usually don't have to deal

00:17:15.539 --> 00:17:15.549
developer you usually don't have to deal
 

00:17:15.549 --> 00:17:18.029
developer you usually don't have to deal
with any of this configuration because

00:17:18.029 --> 00:17:18.039
with any of this configuration because
 

00:17:18.039 --> 00:17:20.340
with any of this configuration because
it's built in in the tool integration

00:17:20.340 --> 00:17:20.350
it's built in in the tool integration
 

00:17:20.350 --> 00:17:22.049
it's built in in the tool integration
but if you're an infrastructure

00:17:22.049 --> 00:17:22.059
but if you're an infrastructure
 

00:17:22.059 --> 00:17:24.240
but if you're an infrastructure
developer this is where it gets really

00:17:24.240 --> 00:17:24.250
developer this is where it gets really
 

00:17:24.250 --> 00:17:26.189
developer this is where it gets really
interesting for you because you can

00:17:26.189 --> 00:17:26.199
interesting for you because you can
 

00:17:26.199 --> 00:17:31.669
interesting for you because you can
customize every single bit of nitrogen

00:17:31.669 --> 00:17:31.679
 

00:17:31.679 --> 00:17:35.279
let's talk a little bit about plugins so

00:17:35.279 --> 00:17:35.289
let's talk a little bit about plugins so
 

00:17:35.289 --> 00:17:37.020
let's talk a little bit about plugins so
host plugins are plugins they can

00:17:37.020 --> 00:17:37.030
host plugins are plugins they can
 

00:17:37.030 --> 00:17:39.960
host plugins are plugins they can
execute code on a host plugins that

00:17:39.960 --> 00:17:39.970
execute code on a host plugins that
 

00:17:39.970 --> 00:17:41.730
execute code on a host plugins that
we've already built our the android

00:17:41.730 --> 00:17:41.740
we've already built our the android
 

00:17:41.740 --> 00:17:43.740
we've already built our the android
plug-in they just encapsulate all the

00:17:43.740 --> 00:17:43.750
plug-in they just encapsulate all the
 

00:17:43.750 --> 00:17:47.070
plug-in they just encapsulate all the
code that allows us to run Android tests

00:17:47.070 --> 00:17:47.080
code that allows us to run Android tests
 

00:17:47.080 --> 00:17:48.240
code that allows us to run Android tests
on a device

00:17:48.240 --> 00:17:48.250
on a device
 

00:17:48.250 --> 00:17:50.880
on a device
we have a data plugin that allows us to

00:17:50.880 --> 00:17:50.890
we have a data plugin that allows us to
 

00:17:50.890 --> 00:17:54.120
we have a data plugin that allows us to
stage data on to the device or a fixer

00:17:54.120 --> 00:17:54.130
stage data on to the device or a fixer
 

00:17:54.130 --> 00:17:56.700
stage data on to the device or a fixer
script plug-in which allows us to

00:17:56.700 --> 00:17:56.710
script plug-in which allows us to
 

00:17:56.710 --> 00:18:00.980
script plug-in which allows us to
execute fixer scripts on a device and

00:18:00.980 --> 00:18:00.990
execute fixer scripts on a device and
 

00:18:00.990 --> 00:18:04.560
execute fixer scripts on a device and
you can have your custom plugins custom

00:18:04.560 --> 00:18:04.570
you can have your custom plugins custom
 

00:18:04.570 --> 00:18:06.510
you can have your custom plugins custom
plugins can have their own configuration

00:18:06.510 --> 00:18:06.520
plugins can have their own configuration
 

00:18:06.520 --> 00:18:10.490
plugins can have their own configuration
and with host plugins you can actually

00:18:10.490 --> 00:18:10.500
and with host plugins you can actually
 

00:18:10.500 --> 00:18:13.830
and with host plugins you can actually
run before the test suite start and

00:18:13.830 --> 00:18:13.840
run before the test suite start and
 

00:18:13.840 --> 00:18:17.340
run before the test suite start and
after the test with is finish the reason

00:18:17.340 --> 00:18:17.350
after the test with is finish the reason
 

00:18:17.350 --> 00:18:19.710
after the test with is finish the reason
why we do it this way is because we want

00:18:19.710 --> 00:18:19.720
why we do it this way is because we want
 

00:18:19.720 --> 00:18:22.049
why we do it this way is because we want
to avoid the chattiness between the host

00:18:22.049 --> 00:18:22.059
to avoid the chattiness between the host
 

00:18:22.059 --> 00:18:26.370
to avoid the chattiness between the host
and the device if you look at the after

00:18:26.370 --> 00:18:26.380
and the device if you look at the after
 

00:18:26.380 --> 00:18:28.860
and the device if you look at the after
all method you will also get access to

00:18:28.860 --> 00:18:28.870
all method you will also get access to
 

00:18:28.870 --> 00:18:32.340
all method you will also get access to
the whole test suite result which is

00:18:32.340 --> 00:18:32.350
the whole test suite result which is
 

00:18:32.350 --> 00:18:33.539
the whole test suite result which is
great if you want to do any

00:18:33.539 --> 00:18:33.549
great if you want to do any
 

00:18:33.549 --> 00:18:36.240
great if you want to do any
post-processing of your test results and

00:18:36.240 --> 00:18:36.250
post-processing of your test results and
 

00:18:36.250 --> 00:18:39.120
post-processing of your test results and
you even can submit an edit request back

00:18:39.120 --> 00:18:39.130
you even can submit an edit request back
 

00:18:39.130 --> 00:18:41.370
you even can submit an edit request back
to us if you want to attach new

00:18:41.370 --> 00:18:41.380
to us if you want to attach new
 

00:18:41.380 --> 00:18:46.220
to us if you want to attach new
artifacts to the test suite result

00:18:46.220 --> 00:18:46.230
 

00:18:46.230 --> 00:18:50.279
device plugins on the other hand like

00:18:50.279 --> 00:18:50.289
device plugins on the other hand like
 

00:18:50.289 --> 00:18:52.320
device plugins on the other hand like
the name is saying Vani are running on

00:18:52.320 --> 00:18:52.330
the name is saying Vani are running on
 

00:18:52.330 --> 00:18:55.380
the name is saying Vani are running on
an actual device which is a much more

00:18:55.380 --> 00:18:55.390
an actual device which is a much more
 

00:18:55.390 --> 00:18:57.960
an actual device which is a much more
sane environment to reason about and in

00:18:57.960 --> 00:18:57.970
sane environment to reason about and in
 

00:18:57.970 --> 00:19:01.560
sane environment to reason about and in
fact most of our host site code that we

00:19:01.560 --> 00:19:01.570
fact most of our host site code that we
 

00:19:01.570 --> 00:19:03.750
fact most of our host site code that we
used to configure the device is now

00:19:03.750 --> 00:19:03.760
used to configure the device is now
 

00:19:03.760 --> 00:19:07.049
used to configure the device is now
moved to the device with a device plugin

00:19:07.049 --> 00:19:07.059
moved to the device with a device plugin
 

00:19:07.059 --> 00:19:09.539
moved to the device with a device plugin
so plugins that we've already built our

00:19:09.539 --> 00:19:09.549
so plugins that we've already built our
 

00:19:09.549 --> 00:19:12.450
so plugins that we've already built our
a Lochhead plugin that gives you a

00:19:12.450 --> 00:19:12.460
a Lochhead plugin that gives you a
 

00:19:12.460 --> 00:19:15.630
a Lochhead plugin that gives you a
scoped lock hat per test method a screen

00:19:15.630 --> 00:19:15.640
scoped lock hat per test method a screen
 

00:19:15.640 --> 00:19:18.180
scoped lock hat per test method a screen
shot plugin that takes screenshots in

00:19:18.180 --> 00:19:18.190
shot plugin that takes screenshots in
 

00:19:18.190 --> 00:19:21.210
shot plugin that takes screenshots in
case your tests fail or a permission

00:19:21.210 --> 00:19:21.220
case your tests fail or a permission
 

00:19:21.220 --> 00:19:24.060
case your tests fail or a permission
plug-in was pretty awesome because you

00:19:24.060 --> 00:19:24.070
plug-in was pretty awesome because you
 

00:19:24.070 --> 00:19:26.640
plug-in was pretty awesome because you
can now grant and revoke runtime

00:19:26.640 --> 00:19:26.650
can now grant and revoke runtime
 

00:19:26.650 --> 00:19:30.049
can now grant and revoke runtime
permissions which was not able before

00:19:30.049 --> 00:19:30.059
permissions which was not able before
 

00:19:30.059 --> 00:19:33.390
permissions which was not able before
and you can obviously also have your

00:19:33.390 --> 00:19:33.400
and you can obviously also have your
 

00:19:33.400 --> 00:19:37.590
and you can obviously also have your
custom plugins so the difference from a

00:19:37.590 --> 00:19:37.600
custom plugins so the difference from a
 

00:19:37.600 --> 00:19:40.529
custom plugins so the difference from a
device plug into a host plug-in is that

00:19:40.529 --> 00:19:40.539
device plug into a host plug-in is that
 

00:19:40.539 --> 00:19:44.190
device plug into a host plug-in is that
it runs on a device but this allows us

00:19:44.190 --> 00:19:44.200
it runs on a device but this allows us
 

00:19:44.200 --> 00:19:47.549
it runs on a device but this allows us
to do things like that we can give you a

00:19:47.549 --> 00:19:47.559
to do things like that we can give you a
 

00:19:47.559 --> 00:19:50.880
to do things like that we can give you a
call back before a single test method is

00:19:50.880 --> 00:19:50.890
call back before a single test method is
 

00:19:50.890 --> 00:19:53.720
call back before a single test method is
executed and after it's finished and

00:19:53.720 --> 00:19:53.730
executed and after it's finished and
 

00:19:53.730 --> 00:19:56.190
executed and after it's finished and
this is great because we can avoid all

00:19:56.190 --> 00:19:56.200
this is great because we can avoid all
 

00:19:56.200 --> 00:19:58.380
this is great because we can avoid all
the chattiness between a host and the

00:19:58.380 --> 00:19:58.390
the chattiness between a host and the
 

00:19:58.390 --> 00:20:01.890
the chattiness between a host and the
device and it gives you a lot of control

00:20:01.890 --> 00:20:01.900
device and it gives you a lot of control
 

00:20:01.900 --> 00:20:04.080
device and it gives you a lot of control
and if you think about it I don't know

00:20:04.080 --> 00:20:04.090
and if you think about it I don't know
 

00:20:04.090 --> 00:20:06.000
and if you think about it I don't know
how you set up your test fixtures now

00:20:06.000 --> 00:20:06.010
how you set up your test fixtures now
 

00:20:06.010 --> 00:20:08.130
how you set up your test fixtures now
but usually you would basically use

00:20:08.130 --> 00:20:08.140
but usually you would basically use
 

00:20:08.140 --> 00:20:10.710
but usually you would basically use
something like epi for class or at

00:20:10.710 --> 00:20:10.720
something like epi for class or at
 

00:20:10.720 --> 00:20:14.790
something like epi for class or at
before at after at after class or if you

00:20:14.790 --> 00:20:14.800
before at after at after class or if you
 

00:20:14.800 --> 00:20:17.010
before at after at after class or if you
want something more reusable you would

00:20:17.010 --> 00:20:17.020
want something more reusable you would
 

00:20:17.020 --> 00:20:20.150
want something more reusable you would
probably reach for a Jaina troll or

00:20:20.150 --> 00:20:20.160
probably reach for a Jaina troll or
 

00:20:20.160 --> 00:20:22.410
probably reach for a Jaina troll or
there's some things you can't do with

00:20:22.410 --> 00:20:22.420
there's some things you can't do with
 

00:20:22.420 --> 00:20:25.320
there's some things you can't do with
these api's and then you have to have

00:20:25.320 --> 00:20:25.330
these api's and then you have to have
 

00:20:25.330 --> 00:20:27.780
these api's and then you have to have
your custom runner and I think the great

00:20:27.780 --> 00:20:27.790
your custom runner and I think the great
 

00:20:27.790 --> 00:20:29.910
your custom runner and I think the great
thing about this is we give you a whole

00:20:29.910 --> 00:20:29.920
thing about this is we give you a whole
 

00:20:29.920 --> 00:20:34.830
thing about this is we give you a whole
new way of writing plugins that actually

00:20:34.830 --> 00:20:34.840
new way of writing plugins that actually
 

00:20:34.840 --> 00:20:37.310
new way of writing plugins that actually
run on a device and allow you to execute

00:20:37.310 --> 00:20:37.320
run on a device and allow you to execute
 

00:20:37.320 --> 00:20:43.799
run on a device and allow you to execute
code on it so let's move on to execution

00:20:43.799 --> 00:20:43.809
code on it so let's move on to execution
 

00:20:43.809 --> 00:20:46.200
code on it so let's move on to execution
so as I was saying we moved the

00:20:46.200 --> 00:20:46.210
so as I was saying we moved the
 

00:20:46.210 --> 00:20:49.830
so as I was saying we moved the
execution to the actual device and we

00:20:49.830 --> 00:20:49.840
execution to the actual device and we
 

00:20:49.840 --> 00:20:52.049
execution to the actual device and we
created a whole new Orchestrator service

00:20:52.049 --> 00:20:52.059
created a whole new Orchestrator service
 

00:20:52.059 --> 00:20:55.440
created a whole new Orchestrator service
and protocol what this does it

00:20:55.440 --> 00:20:55.450
and protocol what this does it
 

00:20:55.450 --> 00:20:57.600
and protocol what this does it
standardizes the communication between

00:20:57.600 --> 00:20:57.610
standardizes the communication between
 

00:20:57.610 --> 00:21:02.430
standardizes the communication between
the host and the device and it can be

00:21:02.430 --> 00:21:02.440
the host and the device and it can be
 

00:21:02.440 --> 00:21:04.650
the host and the device and it can be
implemented by any device which means if

00:21:04.650 --> 00:21:04.660
implemented by any device which means if
 

00:21:04.660 --> 00:21:06.360
implemented by any device which means if
you have a custom device you can

00:21:06.360 --> 00:21:06.370
you have a custom device you can
 

00:21:06.370 --> 00:21:09.990
you have a custom device you can
implement the same protocol and you can

00:21:09.990 --> 00:21:10.000
implement the same protocol and you can
 

00:21:10.000 --> 00:21:12.240
implement the same protocol and you can
still integrate with the house side

00:21:12.240 --> 00:21:12.250
still integrate with the house side
 

00:21:12.250 --> 00:21:15.720
still integrate with the house side
easily on Android the orchestrator

00:21:15.720 --> 00:21:15.730
easily on Android the orchestrator
 

00:21:15.730 --> 00:21:17.490
easily on Android the orchestrator
service is implemented by the Android

00:21:17.490 --> 00:21:17.500
service is implemented by the Android
 

00:21:17.500 --> 00:21:21.600
service is implemented by the Android
test Orchestrator and once you request

00:21:21.600 --> 00:21:21.610
test Orchestrator and once you request
 

00:21:21.610 --> 00:21:24.890
test Orchestrator and once you request
the test run on the host it will then go

00:21:24.890 --> 00:21:24.900
the test run on the host it will then go
 

00:21:24.900 --> 00:21:28.410
the test run on the host it will then go
discover all the tests apply any filters

00:21:28.410 --> 00:21:28.420
discover all the tests apply any filters
 

00:21:28.420 --> 00:21:32.100
discover all the tests apply any filters
and sorting that you want and then it

00:21:32.100 --> 00:21:32.110
and sorting that you want and then it
 

00:21:32.110 --> 00:21:35.490
and sorting that you want and then it
will do either isolated or batched test

00:21:35.490 --> 00:21:35.500
will do either isolated or batched test
 

00:21:35.500 --> 00:21:38.970
will do either isolated or batched test
execution it will also call all your

00:21:38.970 --> 00:21:38.980
execution it will also call all your
 

00:21:38.980 --> 00:21:41.940
execution it will also call all your
device plug-ins and it will stream

00:21:41.940 --> 00:21:41.950
device plug-ins and it will stream
 

00:21:41.950 --> 00:21:47.780
device plug-ins and it will stream
results back in real time to the hosts

00:21:47.780 --> 00:21:47.790
 

00:21:47.790 --> 00:21:50.820
so the last thing that I want to talk

00:21:50.820 --> 00:21:50.830
so the last thing that I want to talk
 

00:21:50.830 --> 00:21:54.900
so the last thing that I want to talk
about is reporting so when nitrogen we

00:21:54.900 --> 00:21:54.910
about is reporting so when nitrogen we
 

00:21:54.910 --> 00:21:57.030
about is reporting so when nitrogen we
will give you unified inconsistent

00:21:57.030 --> 00:21:57.040
will give you unified inconsistent
 

00:21:57.040 --> 00:22:01.530
will give you unified inconsistent
reporting as I'm sure many of you have

00:22:01.530 --> 00:22:01.540
reporting as I'm sure many of you have
 

00:22:01.540 --> 00:22:04.140
reporting as I'm sure many of you have
seen this command at the top what it

00:22:04.140 --> 00:22:04.150
seen this command at the top what it
 

00:22:04.150 --> 00:22:06.480
seen this command at the top what it
does is it runs an instrumentation test

00:22:06.480 --> 00:22:06.490
does is it runs an instrumentation test
 

00:22:06.490 --> 00:22:09.360
does is it runs an instrumentation test
from the command line if you use the -

00:22:09.360 --> 00:22:09.370
from the command line if you use the -
 

00:22:09.370 --> 00:22:13.610
from the command line if you use the -
our option which is where both mode

00:22:13.610 --> 00:22:13.620
our option which is where both mode
 

00:22:13.620 --> 00:22:16.640
our option which is where both mode
you will get an output like this as you

00:22:16.640 --> 00:22:16.650
you will get an output like this as you
 

00:22:16.650 --> 00:22:20.000
you will get an output like this as you
can see it's not very human readable I

00:22:20.000 --> 00:22:20.010
can see it's not very human readable I
 

00:22:20.010 --> 00:22:23.660
can see it's not very human readable I
would say and it's also quite chatty

00:22:23.660 --> 00:22:23.670
would say and it's also quite chatty
 

00:22:23.670 --> 00:22:25.549
would say and it's also quite chatty
because this is just showing a single

00:22:25.549 --> 00:22:25.559
because this is just showing a single
 

00:22:25.559 --> 00:22:29.450
because this is just showing a single
test and this is showing a passing test

00:22:29.450 --> 00:22:29.460
test and this is showing a passing test
 

00:22:29.460 --> 00:22:31.730
test and this is showing a passing test
if it fails the only thing that it gives

00:22:31.730 --> 00:22:31.740
if it fails the only thing that it gives
 

00:22:31.740 --> 00:22:34.820
if it fails the only thing that it gives
you an addition is a stack trace so

00:22:34.820 --> 00:22:34.830
you an addition is a stack trace so
 

00:22:34.830 --> 00:22:36.380
you an addition is a stack trace so
there's not really a lot of information

00:22:36.380 --> 00:22:36.390
there's not really a lot of information
 

00:22:36.390 --> 00:22:41.090
there's not really a lot of information
or actionable data here to why that has

00:22:41.090 --> 00:22:41.100
or actionable data here to why that has
 

00:22:41.100 --> 00:22:46.100
or actionable data here to why that has
failed with nitrogen we want to we want

00:22:46.100 --> 00:22:46.110
failed with nitrogen we want to we want
 

00:22:46.110 --> 00:22:47.750
failed with nitrogen we want to we want
to move to something like this a

00:22:47.750 --> 00:22:47.760
to move to something like this a
 

00:22:47.760 --> 00:22:50.660
to move to something like this a
structured data format which gives you

00:22:50.660 --> 00:22:50.670
structured data format which gives you
 

00:22:50.670 --> 00:22:53.270
structured data format which gives you
access to the properties of the test

00:22:53.270 --> 00:22:53.280
access to the properties of the test
 

00:22:53.280 --> 00:22:57.260
access to the properties of the test
case the status of the test and a list

00:22:57.260 --> 00:22:57.270
case the status of the test and a list
 

00:22:57.270 --> 00:23:00.110
case the status of the test and a list
of artifacts that were collected during

00:23:00.110 --> 00:23:00.120
of artifacts that were collected during
 

00:23:00.120 --> 00:23:05.560
of artifacts that were collected during
a test run things like screenshots video

00:23:05.560 --> 00:23:05.570
a test run things like screenshots video
 

00:23:05.570 --> 00:23:09.110
a test run things like screenshots video
locket and any custom artifacts that you

00:23:09.110 --> 00:23:09.120
locket and any custom artifacts that you
 

00:23:09.120 --> 00:23:14.450
locket and any custom artifacts that you
add in your post-processing again this

00:23:14.450 --> 00:23:14.460
add in your post-processing again this
 

00:23:14.460 --> 00:23:16.310
add in your post-processing again this
will also be integrated in Android

00:23:16.310 --> 00:23:16.320
will also be integrated in Android
 

00:23:16.320 --> 00:23:18.799
will also be integrated in Android
studio and we will surface this in the

00:23:18.799 --> 00:23:18.809
studio and we will surface this in the
 

00:23:18.809 --> 00:23:23.330
studio and we will surface this in the
Android studio UI if you run tests the

00:23:23.330 --> 00:23:23.340
Android studio UI if you run tests the
 

00:23:23.340 --> 00:23:25.850
Android studio UI if you run tests the
last thing before I wrap up what I want

00:23:25.850 --> 00:23:25.860
last thing before I wrap up what I want
 

00:23:25.860 --> 00:23:27.950
last thing before I wrap up what I want
to mention is we also have support for

00:23:27.950 --> 00:23:27.960
to mention is we also have support for
 

00:23:27.960 --> 00:23:31.490
to mention is we also have support for
custom reports so you can do things like

00:23:31.490 --> 00:23:31.500
custom reports so you can do things like
 

00:23:31.500 --> 00:23:34.970
custom reports so you can do things like
Jane at XML or even your custom report

00:23:34.970 --> 00:23:34.980
Jane at XML or even your custom report
 

00:23:34.980 --> 00:23:37.160
Jane at XML or even your custom report
that integrates better with your own

00:23:37.160 --> 00:23:37.170
that integrates better with your own
 

00:23:37.170 --> 00:23:40.430
that integrates better with your own
infrastructure and with that I want to

00:23:40.430 --> 00:23:40.440
infrastructure and with that I want to
 

00:23:40.440 --> 00:23:43.370
infrastructure and with that I want to
hand over to the shell who is going to

00:23:43.370 --> 00:23:43.380
hand over to the shell who is going to
 

00:23:43.380 --> 00:23:46.100
hand over to the shell who is going to
talk about device management all right

00:23:46.100 --> 00:23:46.110
talk about device management all right
 

00:23:46.110 --> 00:23:50.470
talk about device management all right
thanks to fun

00:23:50.470 --> 00:23:50.480
 

00:23:50.480 --> 00:23:52.910
running any kind of Android UI test

00:23:52.910 --> 00:23:52.920
running any kind of Android UI test
 

00:23:52.920 --> 00:23:54.950
running any kind of Android UI test
generally happens in devices there are

00:23:54.950 --> 00:23:54.960
generally happens in devices there are
 

00:23:54.960 --> 00:23:56.210
generally happens in devices there are
two different device types where you

00:23:56.210 --> 00:23:56.220
two different device types where you
 

00:23:56.220 --> 00:23:57.650
two different device types where you
could run your test either on a physical

00:23:57.650 --> 00:23:57.660
could run your test either on a physical
 

00:23:57.660 --> 00:23:59.990
could run your test either on a physical
device or a virtual device regardless of

00:23:59.990 --> 00:24:00.000
device or a virtual device regardless of
 

00:24:00.000 --> 00:24:01.640
device or a virtual device regardless of
which device type you run your test on

00:24:01.640 --> 00:24:01.650
which device type you run your test on
 

00:24:01.650 --> 00:24:04.100
which device type you run your test on
it each of them has its own sets of pros

00:24:04.100 --> 00:24:04.110
it each of them has its own sets of pros
 

00:24:04.110 --> 00:24:06.920
it each of them has its own sets of pros
and cons let's just do a quick show of

00:24:06.920 --> 00:24:06.930
and cons let's just do a quick show of
 

00:24:06.930 --> 00:24:09.200
and cons let's just do a quick show of
hands how many people around here have

00:24:09.200 --> 00:24:09.210
hands how many people around here have
 

00:24:09.210 --> 00:24:11.630
hands how many people around here have
had setup something like this you know

00:24:11.630 --> 00:24:11.640
had setup something like this you know
 

00:24:11.640 --> 00:24:14.480
had setup something like this you know
testing on physical devices looks like

00:24:14.480 --> 00:24:14.490
testing on physical devices looks like
 

00:24:14.490 --> 00:24:17.720
testing on physical devices looks like
part of you the follow-up question how

00:24:17.720 --> 00:24:17.730
part of you the follow-up question how
 

00:24:17.730 --> 00:24:21.700
part of you the follow-up question how
easy was it to manage them hard yeah

00:24:21.700 --> 00:24:21.710
easy was it to manage them hard yeah
 

00:24:21.710 --> 00:24:24.170
easy was it to manage them hard yeah
another follow-up question did you ever

00:24:24.170 --> 00:24:24.180
another follow-up question did you ever
 

00:24:24.180 --> 00:24:25.940
another follow-up question did you ever
end up using a fire extinguisher next to

00:24:25.940 --> 00:24:25.950
end up using a fire extinguisher next to
 

00:24:25.950 --> 00:24:28.970
end up using a fire extinguisher next to
it seriously hope not I have a funny

00:24:28.970 --> 00:24:28.980
it seriously hope not I have a funny
 

00:24:28.980 --> 00:24:30.440
it seriously hope not I have a funny
story to share that happened a few years

00:24:30.440 --> 00:24:30.450
story to share that happened a few years
 

00:24:30.450 --> 00:24:32.390
story to share that happened a few years
ago at Google when one of the teams

00:24:32.390 --> 00:24:32.400
ago at Google when one of the teams
 

00:24:32.400 --> 00:24:34.490
ago at Google when one of the teams
decided that they wanted to test their

00:24:34.490 --> 00:24:34.500
decided that they wanted to test their
 

00:24:34.500 --> 00:24:36.560
decided that they wanted to test their
stuff on physical devices they procured

00:24:36.560 --> 00:24:36.570
stuff on physical devices they procured
 

00:24:36.570 --> 00:24:38.540
stuff on physical devices they procured
a bunch of devices load them onto the

00:24:38.540 --> 00:24:38.550
a bunch of devices load them onto the
 

00:24:38.550 --> 00:24:41.180
a bunch of devices load them onto the
wall and and integrated with their CI

00:24:41.180 --> 00:24:41.190
wall and and integrated with their CI
 

00:24:41.190 --> 00:24:42.890
wall and and integrated with their CI
infrastructure everything was running

00:24:42.890 --> 00:24:42.900
infrastructure everything was running
 

00:24:42.900 --> 00:24:45.440
infrastructure everything was running
reasonably well until one fine day when

00:24:45.440 --> 00:24:45.450
reasonably well until one fine day when
 

00:24:45.450 --> 00:24:47.000
reasonably well until one fine day when
the engineers came back to work on a

00:24:47.000 --> 00:24:47.010
the engineers came back to work on a
 

00:24:47.010 --> 00:24:48.770
the engineers came back to work on a
Monday morning and things were timing

00:24:48.770 --> 00:24:48.780
Monday morning and things were timing
 

00:24:48.780 --> 00:24:51.500
Monday morning and things were timing
out if you were to guess what went wrong

00:24:51.500 --> 00:24:51.510
out if you were to guess what went wrong
 

00:24:51.510 --> 00:24:59.720
out if you were to guess what went wrong
what would be your guess look like okay

00:24:59.720 --> 00:24:59.730
what would be your guess look like okay
 

00:24:59.730 --> 00:25:01.880
what would be your guess look like okay
so turned out to be an air conditioner

00:25:01.880 --> 00:25:01.890
so turned out to be an air conditioner
 

00:25:01.890 --> 00:25:05.240
so turned out to be an air conditioner
problem so what apparently happened was

00:25:05.240 --> 00:25:05.250
problem so what apparently happened was
 

00:25:05.250 --> 00:25:07.340
problem so what apparently happened was
the air conditioners in building in San

00:25:07.340 --> 00:25:07.350
the air conditioners in building in San
 

00:25:07.350 --> 00:25:09.680
the air conditioners in building in San
Francisco went bad and because the air

00:25:09.680 --> 00:25:09.690
Francisco went bad and because the air
 

00:25:09.690 --> 00:25:11.150
Francisco went bad and because the air
conditioners went bad the facilities

00:25:11.150 --> 00:25:11.160
conditioners went bad the facilities
 

00:25:11.160 --> 00:25:13.340
conditioners went bad the facilities
decided that they want to switch off the

00:25:13.340 --> 00:25:13.350
decided that they want to switch off the
 

00:25:13.350 --> 00:25:14.600
decided that they want to switch off the
air conditioner so that they could fix

00:25:14.600 --> 00:25:14.610
air conditioner so that they could fix
 

00:25:14.610 --> 00:25:16.430
air conditioner so that they could fix
it but tests were continuously running

00:25:16.430 --> 00:25:16.440
it but tests were continuously running
 

00:25:16.440 --> 00:25:18.440
it but tests were continuously running
on those devices and the heat produced

00:25:18.440 --> 00:25:18.450
on those devices and the heat produced
 

00:25:18.450 --> 00:25:20.540
on those devices and the heat produced
in those devices caused the glue to peel

00:25:20.540 --> 00:25:20.550
in those devices caused the glue to peel
 

00:25:20.550 --> 00:25:22.460
in those devices caused the glue to peel
off from them from the wall and all the

00:25:22.460 --> 00:25:22.470
off from them from the wall and all the
 

00:25:22.470 --> 00:25:25.030
off from them from the wall and all the
devices fell off to the ground

00:25:25.030 --> 00:25:25.040
devices fell off to the ground
 

00:25:25.040 --> 00:25:27.290
devices fell off to the ground
managing physical devices are hard you

00:25:27.290 --> 00:25:27.300
managing physical devices are hard you
 

00:25:27.300 --> 00:25:28.670
managing physical devices are hard you
just want to give out a huge shout-out

00:25:28.670 --> 00:25:28.680
just want to give out a huge shout-out
 

00:25:28.680 --> 00:25:30.950
just want to give out a huge shout-out
to the firebase test lab team that makes

00:25:30.950 --> 00:25:30.960
to the firebase test lab team that makes
 

00:25:30.960 --> 00:25:32.900
to the firebase test lab team that makes
testing on firebase test lab so much

00:25:32.900 --> 00:25:32.910
testing on firebase test lab so much
 

00:25:32.910 --> 00:25:35.600
testing on firebase test lab so much
easier for you folks how do we solve

00:25:35.600 --> 00:25:35.610
easier for you folks how do we solve
 

00:25:35.610 --> 00:25:38.210
easier for you folks how do we solve
this at Google at Google we use the

00:25:38.210 --> 00:25:38.220
this at Google at Google we use the
 

00:25:38.220 --> 00:25:40.220
this at Google at Google we use the
virtual device infrastructure the test

00:25:40.220 --> 00:25:40.230
virtual device infrastructure the test
 

00:25:40.230 --> 00:25:42.170
virtual device infrastructure the test
environment that we use is extremely

00:25:42.170 --> 00:25:42.180
environment that we use is extremely
 

00:25:42.180 --> 00:25:44.000
environment that we use is extremely
stable the number that you look at the

00:25:44.000 --> 00:25:44.010
stable the number that you look at the
 

00:25:44.010 --> 00:25:46.370
stable the number that you look at the
right is distributed ratio of our test

00:25:46.370 --> 00:25:46.380
right is distributed ratio of our test
 

00:25:46.380 --> 00:25:48.250
right is distributed ratio of our test
environment and that's right it's

00:25:48.250 --> 00:25:48.260
environment and that's right it's
 

00:25:48.260 --> 00:25:52.160
environment and that's right it's
99.9999% the continuous integration in

00:25:52.160 --> 00:25:52.170
99.9999% the continuous integration in
 

00:25:52.170 --> 00:25:53.750
99.9999% the continuous integration in
the virtual device infrastructure that

00:25:53.750 --> 00:25:53.760
the virtual device infrastructure that
 

00:25:53.760 --> 00:25:56.630
the virtual device infrastructure that
we use has the ability to run locally or

00:25:56.630 --> 00:25:56.640
we use has the ability to run locally or
 

00:25:56.640 --> 00:25:59.030
we use has the ability to run locally or
in a CI environment and it supports over

00:25:59.030 --> 00:25:59.040
in a CI environment and it supports over
 

00:25:59.040 --> 00:26:00.890
in a CI environment and it supports over
500 different device configurations

00:26:00.890 --> 00:26:00.900
500 different device configurations
 

00:26:00.900 --> 00:26:03.450
500 different device configurations
let's dig in a little deeper to see what

00:26:03.450 --> 00:26:03.460
let's dig in a little deeper to see what
 

00:26:03.460 --> 00:26:06.870
let's dig in a little deeper to see what
its current state at Google it's used by

00:26:06.870 --> 00:26:06.880
its current state at Google it's used by
 

00:26:06.880 --> 00:26:08.940
its current state at Google it's used by
over 100 first party apps such as Google

00:26:08.940 --> 00:26:08.950
over 100 first party apps such as Google
 

00:26:08.950 --> 00:26:11.940
over 100 first party apps such as Google
Photos search YouTube and so on and so

00:26:11.940 --> 00:26:11.950
Photos search YouTube and so on and so
 

00:26:11.950 --> 00:26:15.270
Photos search YouTube and so on and so
forth just in 2018 it had a staggering

00:26:15.270 --> 00:26:15.280
forth just in 2018 it had a staggering
 

00:26:15.280 --> 00:26:18.420
forth just in 2018 it had a staggering
2.4 billion invitations and that number

00:26:18.420 --> 00:26:18.430
2.4 billion invitations and that number
 

00:26:18.430 --> 00:26:19.650
2.4 billion invitations and that number
is growing year-over-year

00:26:19.650 --> 00:26:19.660
is growing year-over-year
 

00:26:19.660 --> 00:26:22.770
is growing year-over-year
there are over 120,000 targets that use

00:26:22.770 --> 00:26:22.780
there are over 120,000 targets that use
 

00:26:22.780 --> 00:26:25.620
there are over 120,000 targets that use
this infrastructure having a great test

00:26:25.620 --> 00:26:25.630
this infrastructure having a great test
 

00:26:25.630 --> 00:26:27.510
this infrastructure having a great test
infrastructure is a must if you want to

00:26:27.510 --> 00:26:27.520
infrastructure is a must if you want to
 

00:26:27.520 --> 00:26:29.700
infrastructure is a must if you want to
release high quality apps you'd be

00:26:29.700 --> 00:26:29.710
release high quality apps you'd be
 

00:26:29.710 --> 00:26:31.140
release high quality apps you'd be
thinking this is great infrastructure

00:26:31.140 --> 00:26:31.150
thinking this is great infrastructure
 

00:26:31.150 --> 00:26:34.470
thinking this is great infrastructure
how does this fit in with nitrogen if

00:26:34.470 --> 00:26:34.480
how does this fit in with nitrogen if
 

00:26:34.480 --> 00:26:37.500
how does this fit in with nitrogen if
you remember from slides that Stefan

00:26:37.500 --> 00:26:37.510
you remember from slides that Stefan
 

00:26:37.510 --> 00:26:39.570
you remember from slides that Stefan
presented a little bit earlier nitrogen

00:26:39.570 --> 00:26:39.580
presented a little bit earlier nitrogen
 

00:26:39.580 --> 00:26:42.870
presented a little bit earlier nitrogen
has this concept of device providers so

00:26:42.870 --> 00:26:42.880
has this concept of device providers so
 

00:26:42.880 --> 00:26:45.390
has this concept of device providers so
if you want to run a UI test you invoke

00:26:45.390 --> 00:26:45.400
if you want to run a UI test you invoke
 

00:26:45.400 --> 00:26:47.730
if you want to run a UI test you invoke
nitrogen nitrogen in turn would invoke a

00:26:47.730 --> 00:26:47.740
nitrogen nitrogen in turn would invoke a
 

00:26:47.740 --> 00:26:49.290
nitrogen nitrogen in turn would invoke a
device provider which in this case it's

00:26:49.290 --> 00:26:49.300
device provider which in this case it's
 

00:26:49.300 --> 00:26:50.850
device provider which in this case it's
going to be the virtual device provider

00:26:50.850 --> 00:26:50.860
going to be the virtual device provider
 

00:26:50.860 --> 00:26:53.670
going to be the virtual device provider
which launches the device does a bunch

00:26:53.670 --> 00:26:53.680
which launches the device does a bunch
 

00:26:53.680 --> 00:26:55.710
which launches the device does a bunch
of smart setup returns the control back

00:26:55.710 --> 00:26:55.720
of smart setup returns the control back
 

00:26:55.720 --> 00:26:57.720
of smart setup returns the control back
to nitrogen which Act which actually

00:26:57.720 --> 00:26:57.730
to nitrogen which Act which actually
 

00:26:57.730 --> 00:26:59.940
to nitrogen which Act which actually
goes and executes the test and once the

00:26:59.940 --> 00:26:59.950
goes and executes the test and once the
 

00:26:59.950 --> 00:27:01.890
goes and executes the test and once the
test is done it goes and tears down the

00:27:01.890 --> 00:27:01.900
test is done it goes and tears down the
 

00:27:01.900 --> 00:27:04.050
test is done it goes and tears down the
device so in that case you get a

00:27:04.050 --> 00:27:04.060
device so in that case you get a
 

00:27:04.060 --> 00:27:05.850
device so in that case you get a
completely stable environment which

00:27:05.850 --> 00:27:05.860
completely stable environment which
 

00:27:05.860 --> 00:27:07.920
completely stable environment which
which is launched by nitrogen runs the

00:27:07.920 --> 00:27:07.930
which is launched by nitrogen runs the
 

00:27:07.930 --> 00:27:11.190
which is launched by nitrogen runs the
test and shuts it down so while

00:27:11.190 --> 00:27:11.200
test and shuts it down so while
 

00:27:11.200 --> 00:27:12.660
test and shuts it down so while
designing this particular infrastructure

00:27:12.660 --> 00:27:12.670
designing this particular infrastructure
 

00:27:12.670 --> 00:27:14.850
designing this particular infrastructure
there were four key things that we kept

00:27:14.850 --> 00:27:14.860
there were four key things that we kept
 

00:27:14.860 --> 00:27:16.530
there were four key things that we kept
in mind that the virtual device

00:27:16.530 --> 00:27:16.540
in mind that the virtual device
 

00:27:16.540 --> 00:27:18.740
in mind that the virtual device
infrastructure needs to be simple to use

00:27:18.740 --> 00:27:18.750
infrastructure needs to be simple to use
 

00:27:18.750 --> 00:27:22.860
infrastructure needs to be simple to use
needs to be extremely stable you should

00:27:22.860 --> 00:27:22.870
needs to be extremely stable you should
 

00:27:22.870 --> 00:27:25.230
needs to be extremely stable you should
be it should be reproducible regardless

00:27:25.230 --> 00:27:25.240
be it should be reproducible regardless
 

00:27:25.240 --> 00:27:26.550
be it should be reproducible regardless
of which environment it runs in whether

00:27:26.550 --> 00:27:26.560
of which environment it runs in whether
 

00:27:26.560 --> 00:27:27.780
of which environment it runs in whether
you're running it locally or whether

00:27:27.780 --> 00:27:27.790
you're running it locally or whether
 

00:27:27.790 --> 00:27:28.740
you're running it locally or whether
you're running it in your CI

00:27:28.740 --> 00:27:28.750
you're running it in your CI
 

00:27:28.750 --> 00:27:30.690
you're running it in your CI
infrastructure and it needs to be

00:27:30.690 --> 00:27:30.700
infrastructure and it needs to be
 

00:27:30.700 --> 00:27:33.150
infrastructure and it needs to be
extremely fast let's dig into a little

00:27:33.150 --> 00:27:33.160
extremely fast let's dig into a little
 

00:27:33.160 --> 00:27:35.070
extremely fast let's dig into a little
deeper as to how did we achieve each of

00:27:35.070 --> 00:27:35.080
deeper as to how did we achieve each of
 

00:27:35.080 --> 00:27:36.870
deeper as to how did we achieve each of
these four goals in building a virtual

00:27:36.870 --> 00:27:36.880
these four goals in building a virtual
 

00:27:36.880 --> 00:27:41.490
these four goals in building a virtual
device management solution so the what

00:27:41.490 --> 00:27:41.500
device management solution so the what
 

00:27:41.500 --> 00:27:43.950
device management solution so the what
the virtual device infrastructure has a

00:27:43.950 --> 00:27:43.960
the virtual device infrastructure has a
 

00:27:43.960 --> 00:27:46.110
the virtual device infrastructure has a
very simple protocol figuration what

00:27:46.110 --> 00:27:46.120
very simple protocol figuration what
 

00:27:46.120 --> 00:27:47.670
very simple protocol figuration what
does that mean it's just a configuration

00:27:47.670 --> 00:27:47.680
does that mean it's just a configuration
 

00:27:47.680 --> 00:27:49.830
does that mean it's just a configuration
file where you could go and add the

00:27:49.830 --> 00:27:49.840
file where you could go and add the
 

00:27:49.840 --> 00:27:51.180
file where you could go and add the
characteristics of the device for

00:27:51.180 --> 00:27:51.190
characteristics of the device for
 

00:27:51.190 --> 00:27:53.040
characteristics of the device for
example what's the horizontal screen

00:27:53.040 --> 00:27:53.050
example what's the horizontal screen
 

00:27:53.050 --> 00:27:54.480
example what's the horizontal screen
resolution what's the vertical screen

00:27:54.480 --> 00:27:54.490
resolution what's the vertical screen
 

00:27:54.490 --> 00:27:55.860
resolution what's the vertical screen
resolution what's the memory of the

00:27:55.860 --> 00:27:55.870
resolution what's the memory of the
 

00:27:55.870 --> 00:27:58.080
resolution what's the memory of the
device so for each of these different

00:27:58.080 --> 00:27:58.090
device so for each of these different
 

00:27:58.090 --> 00:28:01.860
device so for each of these different
device types like Nexus and pixel the

00:28:01.860 --> 00:28:01.870
device types like Nexus and pixel the
 

00:28:01.870 --> 00:28:03.240
device types like Nexus and pixel the
virtual device management solution

00:28:03.240 --> 00:28:03.250
virtual device management solution
 

00:28:03.250 --> 00:28:05.220
virtual device management solution
already has pre-baked in all of these

00:28:05.220 --> 00:28:05.230
already has pre-baked in all of these
 

00:28:05.230 --> 00:28:06.690
already has pre-baked in all of these
different device configurations so you

00:28:06.690 --> 00:28:06.700
different device configurations so you
 

00:28:06.700 --> 00:28:08.250
different device configurations so you
don't have to go and figure out the

00:28:08.250 --> 00:28:08.260
don't have to go and figure out the
 

00:28:08.260 --> 00:28:10.230
don't have to go and figure out the
different device resolutions for each of

00:28:10.230 --> 00:28:10.240
different device resolutions for each of
 

00:28:10.240 --> 00:28:13.350
different device resolutions for each of
those devices it supports over 500

00:28:13.350 --> 00:28:13.360
those devices it supports over 500
 

00:28:13.360 --> 00:28:14.870
those devices it supports over 500
different device configurations and

00:28:14.870 --> 00:28:14.880
different device configurations and
 

00:28:14.880 --> 00:28:17.190
different device configurations and
because it's a configuration file it's

00:28:17.190 --> 00:28:17.200
because it's a configuration file it's
 

00:28:17.200 --> 00:28:19.230
because it's a configuration file it's
matter of just adding or removing the

00:28:19.230 --> 00:28:19.240
matter of just adding or removing the
 

00:28:19.240 --> 00:28:22.470
matter of just adding or removing the
changes to the configuration file and it

00:28:22.470 --> 00:28:22.480
changes to the configuration file and it
 

00:28:22.480 --> 00:28:24.029
changes to the configuration file and it
supports several different form factors

00:28:24.029 --> 00:28:24.039
supports several different form factors
 

00:28:24.039 --> 00:28:26.460
supports several different form factors
such as phones tablets TV devices and

00:28:26.460 --> 00:28:26.470
such as phones tablets TV devices and
 

00:28:26.470 --> 00:28:29.269
such as phones tablets TV devices and
very devices but how is it simple

00:28:29.269 --> 00:28:29.279
very devices but how is it simple
 

00:28:29.279 --> 00:28:31.529
very devices but how is it simple
launching it is as simple as calling the

00:28:31.529 --> 00:28:31.539
launching it is as simple as calling the
 

00:28:31.539 --> 00:28:33.779
launching it is as simple as calling the
virtual device binary and specifying the

00:28:33.779 --> 00:28:33.789
virtual device binary and specifying the
 

00:28:33.789 --> 00:28:35.340
virtual device binary and specifying the
name of the device if you want to launch

00:28:35.340 --> 00:28:35.350
name of the device if you want to launch
 

00:28:35.350 --> 00:28:38.129
name of the device if you want to launch
a pixel tool you just say virtual device

00:28:38.129 --> 00:28:38.139
a pixel tool you just say virtual device
 

00:28:38.139 --> 00:28:40.409
a pixel tool you just say virtual device
device equals pixel to and on what API

00:28:40.409 --> 00:28:40.419
device equals pixel to and on what API
 

00:28:40.419 --> 00:28:41.539
device equals pixel to and on what API
level you don't have to worry about

00:28:41.539 --> 00:28:41.549
level you don't have to worry about
 

00:28:41.549 --> 00:28:43.860
level you don't have to worry about
creating a V de specifying

00:28:43.860 --> 00:28:43.870
creating a V de specifying
 

00:28:43.870 --> 00:28:45.450
creating a V de specifying
configurations and things like that

00:28:45.450 --> 00:28:45.460
configurations and things like that
 

00:28:45.460 --> 00:28:48.769
configurations and things like that
that makes things extremely simple

00:28:48.769 --> 00:28:48.779
that makes things extremely simple
 

00:28:48.779 --> 00:28:51.090
that makes things extremely simple
stability this is probably one of the

00:28:51.090 --> 00:28:51.100
stability this is probably one of the
 

00:28:51.100 --> 00:28:52.889
stability this is probably one of the
biggest problems most of the Android app

00:28:52.889 --> 00:28:52.899
biggest problems most of the Android app
 

00:28:52.899 --> 00:28:55.320
biggest problems most of the Android app
developers face like running your tests

00:28:55.320 --> 00:28:55.330
developers face like running your tests
 

00:28:55.330 --> 00:28:58.350
developers face like running your tests
and ANR pops up and that ANR might not

00:28:58.350 --> 00:28:58.360
and ANR pops up and that ANR might not
 

00:28:58.360 --> 00:28:59.879
and ANR pops up and that ANR might not
even necessarily be the app that you are

00:28:59.879 --> 00:28:59.889
even necessarily be the app that you are
 

00:28:59.889 --> 00:29:01.710
even necessarily be the app that you are
testing we had the same problem

00:29:01.710 --> 00:29:01.720
testing we had the same problem
 

00:29:01.720 --> 00:29:04.820
testing we had the same problem
internally as well how did we solve this

00:29:04.820 --> 00:29:04.830
internally as well how did we solve this
 

00:29:04.830 --> 00:29:09.149
internally as well how did we solve this
well sorry I know it has a nifty service

00:29:09.149 --> 00:29:09.159
well sorry I know it has a nifty service
 

00:29:09.159 --> 00:29:11.220
well sorry I know it has a nifty service
called as activity controller that lets

00:29:11.220 --> 00:29:11.230
called as activity controller that lets
 

00:29:11.230 --> 00:29:13.259
called as activity controller that lets
you suppress ANR's whenever it sees them

00:29:13.259 --> 00:29:13.269
you suppress ANR's whenever it sees them
 

00:29:13.269 --> 00:29:16.019
you suppress ANR's whenever it sees them
this is the exact same service that

00:29:16.019 --> 00:29:16.029
this is the exact same service that
 

00:29:16.029 --> 00:29:18.210
this is the exact same service that
Android monkey uses violet runs monkey

00:29:18.210 --> 00:29:18.220
Android monkey uses violet runs monkey
 

00:29:18.220 --> 00:29:20.549
Android monkey uses violet runs monkey
tests this increased our stability of

00:29:20.549 --> 00:29:20.559
tests this increased our stability of
 

00:29:20.559 --> 00:29:22.470
tests this increased our stability of
our tests tremendously like one of the

00:29:22.470 --> 00:29:22.480
our tests tremendously like one of the
 

00:29:22.480 --> 00:29:24.149
our tests tremendously like one of the
things that I forgot to say when we

00:29:24.149 --> 00:29:24.159
things that I forgot to say when we
 

00:29:24.159 --> 00:29:25.110
things that I forgot to say when we
started with this particular

00:29:25.110 --> 00:29:25.120
started with this particular
 

00:29:25.120 --> 00:29:27.299
started with this particular
infrastructure our stability was around

00:29:27.299 --> 00:29:27.309
infrastructure our stability was around
 

00:29:27.309 --> 00:29:29.250
infrastructure our stability was around
95% but that's no good when you're

00:29:29.250 --> 00:29:29.260
95% but that's no good when you're
 

00:29:29.260 --> 00:29:31.769
95% but that's no good when you're
running things at scale so the first

00:29:31.769 --> 00:29:31.779
running things at scale so the first
 

00:29:31.779 --> 00:29:33.600
running things at scale so the first
thing that we saw were ANR's

00:29:33.600 --> 00:29:33.610
thing that we saw were ANR's
 

00:29:33.610 --> 00:29:35.129
thing that we saw were ANR's
and once we fixed that our stability

00:29:35.129 --> 00:29:35.139
and once we fixed that our stability
 

00:29:35.139 --> 00:29:36.870
and once we fixed that our stability
increased but still not to the level

00:29:36.870 --> 00:29:36.880
increased but still not to the level
 

00:29:36.880 --> 00:29:40.440
increased but still not to the level
that we wanted the next flaky things

00:29:40.440 --> 00:29:40.450
that we wanted the next flaky things
 

00:29:40.450 --> 00:29:43.110
that we wanted the next flaky things
that we saw was the boot up a device but

00:29:43.110 --> 00:29:43.120
that we saw was the boot up a device but
 

00:29:43.120 --> 00:29:45.149
that we saw was the boot up a device but
the screen is not unlocked and if the

00:29:45.149 --> 00:29:45.159
the screen is not unlocked and if the
 

00:29:45.159 --> 00:29:46.889
the screen is not unlocked and if the
screen is not unlocked all the key

00:29:46.889 --> 00:29:46.899
screen is not unlocked all the key
 

00:29:46.899 --> 00:29:48.509
screen is not unlocked all the key
events that you inject does not even

00:29:48.509 --> 00:29:48.519
events that you inject does not even
 

00:29:48.519 --> 00:29:50.610
events that you inject does not even
reach your app and if the key events

00:29:50.610 --> 00:29:50.620
reach your app and if the key events
 

00:29:50.620 --> 00:29:52.289
reach your app and if the key events
don't reach your app your app is

00:29:52.289 --> 00:29:52.299
don't reach your app your app is
 

00:29:52.299 --> 00:29:53.850
don't reach your app your app is
actually not getting tested and yet has

00:29:53.850 --> 00:29:53.860
actually not getting tested and yet has
 

00:29:53.860 --> 00:29:56.039
actually not getting tested and yet has
starting to fail and it turned out when

00:29:56.039 --> 00:29:56.049
starting to fail and it turned out when
 

00:29:56.049 --> 00:29:58.289
starting to fail and it turned out when
the device boots up the screen is not

00:29:58.289 --> 00:29:58.299
the device boots up the screen is not
 

00:29:58.299 --> 00:30:01.980
the device boots up the screen is not
locked so in screen is not unlocked in a

00:30:01.980 --> 00:30:01.990
locked so in screen is not unlocked in a
 

00:30:01.990 --> 00:30:04.379
locked so in screen is not unlocked in a
free level 23 I believe Android added an

00:30:04.379 --> 00:30:04.389
free level 23 I believe Android added an
 

00:30:04.389 --> 00:30:07.080
free level 23 I believe Android added an
API from for our window manager where

00:30:07.080 --> 00:30:07.090
API from for our window manager where
 

00:30:07.090 --> 00:30:08.519
API from for our window manager where
you could dismiss the key guard and that

00:30:08.519 --> 00:30:08.529
you could dismiss the key guard and that
 

00:30:08.529 --> 00:30:10.350
you could dismiss the key guard and that
would unlock the screen so every time he

00:30:10.350 --> 00:30:10.360
would unlock the screen so every time he
 

00:30:10.360 --> 00:30:12.149
would unlock the screen so every time he
booted the device we would call the

00:30:12.149 --> 00:30:12.159
booted the device we would call the
 

00:30:12.159 --> 00:30:14.190
booted the device we would call the
window manager API to unlock the screen

00:30:14.190 --> 00:30:14.200
window manager API to unlock the screen
 

00:30:14.200 --> 00:30:15.870
window manager API to unlock the screen
and this increase trust ability

00:30:15.870 --> 00:30:15.880
and this increase trust ability
 

00:30:15.880 --> 00:30:20.220
and this increase trust ability
furthermore a few years ago Android

00:30:20.220 --> 00:30:20.230
furthermore a few years ago Android
 

00:30:20.230 --> 00:30:22.490
furthermore a few years ago Android
changed the file system from yaffs2

00:30:22.490 --> 00:30:22.500
changed the file system from yaffs2
 

00:30:22.500 --> 00:30:25.799
changed the file system from yaffs2
another flash file system to ext4

00:30:25.799 --> 00:30:25.809
another flash file system to ext4
 

00:30:25.809 --> 00:30:27.930
another flash file system to ext4
this was a great improvement but it had

00:30:27.930 --> 00:30:27.940
this was a great improvement but it had
 

00:30:27.940 --> 00:30:30.909
this was a great improvement but it had
its own set of problems ext4 was known

00:30:30.909 --> 00:30:30.919
its own set of problems ext4 was known
 

00:30:30.919 --> 00:30:33.190
its own set of problems ext4 was known
was prone to disruption during a hard

00:30:33.190 --> 00:30:33.200
was prone to disruption during a hard
 

00:30:33.200 --> 00:30:35.590
was prone to disruption during a hard
shutdown so whenever we would shut down

00:30:35.590 --> 00:30:35.600
shutdown so whenever we would shut down
 

00:30:35.600 --> 00:30:37.690
shutdown so whenever we would shut down
the device if it was not correctly shut

00:30:37.690 --> 00:30:37.700
the device if it was not correctly shut
 

00:30:37.700 --> 00:30:39.460
the device if it was not correctly shut
down and it had disk errors your

00:30:39.460 --> 00:30:39.470
down and it had disk errors your
 

00:30:39.470 --> 00:30:41.440
down and it had disk errors your
subsequent boot of the virtual device

00:30:41.440 --> 00:30:41.450
subsequent boot of the virtual device
 

00:30:41.450 --> 00:30:45.249
subsequent boot of the virtual device
would fail leading to test flakiness how

00:30:45.249 --> 00:30:45.259
would fail leading to test flakiness how
 

00:30:45.259 --> 00:30:47.409
would fail leading to test flakiness how
did we solve this problem well all we

00:30:47.409 --> 00:30:47.419
did we solve this problem well all we
 

00:30:47.419 --> 00:30:49.779
did we solve this problem well all we
had to do was call in F sake to the disk

00:30:49.779 --> 00:30:49.789
had to do was call in F sake to the disk
 

00:30:49.789 --> 00:30:52.359
had to do was call in F sake to the disk
image that was unmounted and this kind

00:30:52.359 --> 00:30:52.369
image that was unmounted and this kind
 

00:30:52.369 --> 00:30:53.830
image that was unmounted and this kind
of guaranteed that when the disk was

00:30:53.830 --> 00:30:53.840
of guaranteed that when the disk was
 

00:30:53.840 --> 00:30:56.649
of guaranteed that when the disk was
unmounted it had no disk errors and if

00:30:56.649 --> 00:30:56.659
unmounted it had no disk errors and if
 

00:30:56.659 --> 00:30:57.729
unmounted it had no disk errors and if
there were no disk errors your

00:30:57.729 --> 00:30:57.739
there were no disk errors your
 

00:30:57.739 --> 00:31:00.029
there were no disk errors your
subsequent boot would come up just fine

00:31:00.029 --> 00:31:00.039
subsequent boot would come up just fine
 

00:31:00.039 --> 00:31:03.460
subsequent boot would come up just fine
this increased the stability of our test

00:31:03.460 --> 00:31:03.470
this increased the stability of our test
 

00:31:03.470 --> 00:31:06.729
this increased the stability of our test
environment to close to 99% but that's

00:31:06.729 --> 00:31:06.739
environment to close to 99% but that's
 

00:31:06.739 --> 00:31:08.799
environment to close to 99% but that's
still no good when you're running at 2.4

00:31:08.799 --> 00:31:08.809
still no good when you're running at 2.4
 

00:31:08.809 --> 00:31:10.869
still no good when you're running at 2.4
billion invitations of one person

00:31:10.869 --> 00:31:10.879
billion invitations of one person
 

00:31:10.879 --> 00:31:13.119
billion invitations of one person
failure is 24 million that's still a

00:31:13.119 --> 00:31:13.129
failure is 24 million that's still a
 

00:31:13.129 --> 00:31:15.940
failure is 24 million that's still a
huge number as you can see there were a

00:31:15.940 --> 00:31:15.950
huge number as you can see there were a
 

00:31:15.950 --> 00:31:17.889
huge number as you can see there were a
bunch of optimizations that we did to

00:31:17.889 --> 00:31:17.899
bunch of optimizations that we did to
 

00:31:17.899 --> 00:31:19.389
bunch of optimizations that we did to
increase the stability I'm not going to

00:31:19.389 --> 00:31:19.399
increase the stability I'm not going to
 

00:31:19.399 --> 00:31:22.060
increase the stability I'm not going to
talk about all of them but there's one

00:31:22.060 --> 00:31:22.070
talk about all of them but there's one
 

00:31:22.070 --> 00:31:24.789
talk about all of them but there's one
final thing that I want to talk about we

00:31:24.789 --> 00:31:24.799
final thing that I want to talk about we
 

00:31:24.799 --> 00:31:27.460
final thing that I want to talk about we
would launch the device but for and the

00:31:27.460 --> 00:31:27.470
would launch the device but for and the
 

00:31:27.470 --> 00:31:29.289
would launch the device but for and the
virtual device would set a boot properly

00:31:29.289 --> 00:31:29.299
virtual device would set a boot properly
 

00:31:29.299 --> 00:31:30.489
virtual device would set a boot properly
saying that the device is completely

00:31:30.489 --> 00:31:30.499
saying that the device is completely
 

00:31:30.499 --> 00:31:32.799
saying that the device is completely
booted up but for whatever reasons the

00:31:32.799 --> 00:31:32.809
booted up but for whatever reasons the
 

00:31:32.809 --> 00:31:35.649
booted up but for whatever reasons the
launcher would not kick in now so how

00:31:35.649 --> 00:31:35.659
launcher would not kick in now so how
 

00:31:35.659 --> 00:31:37.479
launcher would not kick in now so how
did we solve that problem well all we

00:31:37.479 --> 00:31:37.489
did we solve that problem well all we
 

00:31:37.489 --> 00:31:39.460
did we solve that problem well all we
had to do was send out an intent to the

00:31:39.460 --> 00:31:39.470
had to do was send out an intent to the
 

00:31:39.470 --> 00:31:41.919
had to do was send out an intent to the
launcher if it was already launched then

00:31:41.919 --> 00:31:41.929
launcher if it was already launched then
 

00:31:41.929 --> 00:31:44.320
launcher if it was already launched then
was a no op if it wasn't launched then

00:31:44.320 --> 00:31:44.330
was a no op if it wasn't launched then
 

00:31:44.330 --> 00:31:46.269
was a no op if it wasn't launched then
it started the launcher and then we

00:31:46.269 --> 00:31:46.279
it started the launcher and then we
 

00:31:46.279 --> 00:31:47.349
it started the launcher and then we
would return the control back to

00:31:47.349 --> 00:31:47.359
would return the control back to
 

00:31:47.359 --> 00:31:50.259
would return the control back to
nitrogen which would then go and run the

00:31:50.259 --> 00:31:50.269
nitrogen which would then go and run the
 

00:31:50.269 --> 00:31:52.419
nitrogen which would then go and run the
test doing a bunch of optimizations like

00:31:52.419 --> 00:31:52.429
test doing a bunch of optimizations like
 

00:31:52.429 --> 00:31:57.509
test doing a bunch of optimizations like
this help us get to 99.9999% stability

00:31:57.509 --> 00:31:57.519
this help us get to 99.9999% stability
 

00:31:57.519 --> 00:32:01.720
this help us get to 99.9999% stability
the next big pillar the next big pillar

00:32:01.720 --> 00:32:01.730
the next big pillar the next big pillar
 

00:32:01.730 --> 00:32:04.210
the next big pillar the next big pillar
that we had in mind was reproducibility

00:32:04.210 --> 00:32:04.220
that we had in mind was reproducibility
 

00:32:04.220 --> 00:32:06.340
that we had in mind was reproducibility
a lot of times when users were running

00:32:06.340 --> 00:32:06.350
a lot of times when users were running
 

00:32:06.350 --> 00:32:08.080
a lot of times when users were running
their tests in CI environment if their

00:32:08.080 --> 00:32:08.090
their tests in CI environment if their
 

00:32:08.090 --> 00:32:09.999
their tests in CI environment if their
tests failed for whatever reasons they

00:32:09.999 --> 00:32:10.009
tests failed for whatever reasons they
 

00:32:10.009 --> 00:32:12.190
tests failed for whatever reasons they
had no way of debugging it locally so

00:32:12.190 --> 00:32:12.200
had no way of debugging it locally so
 

00:32:12.200 --> 00:32:13.869
had no way of debugging it locally so
are the virtual device environment that

00:32:13.869 --> 00:32:13.879
are the virtual device environment that
 

00:32:13.879 --> 00:32:16.149
are the virtual device environment that
we built had to make sure that the

00:32:16.149 --> 00:32:16.159
we built had to make sure that the
 

00:32:16.159 --> 00:32:17.919
we built had to make sure that the
environment was reproducible regardless

00:32:17.919 --> 00:32:17.929
environment was reproducible regardless
 

00:32:17.929 --> 00:32:19.690
environment was reproducible regardless
of where they are running so the virtual

00:32:19.690 --> 00:32:19.700
of where they are running so the virtual
 

00:32:19.700 --> 00:32:21.999
of where they are running so the virtual
device management solution helps you

00:32:21.999 --> 00:32:22.009
device management solution helps you
 

00:32:22.009 --> 00:32:24.039
device management solution helps you
launch things locally or on the cloud

00:32:24.039 --> 00:32:24.049
launch things locally or on the cloud
 

00:32:24.049 --> 00:32:27.399
launch things locally or on the cloud
and one of the big the big things about

00:32:27.399 --> 00:32:27.409
and one of the big the big things about
 

00:32:27.409 --> 00:32:29.680
and one of the big the big things about
this environment is the device starts in

00:32:29.680 --> 00:32:29.690
this environment is the device starts in
 

00:32:29.690 --> 00:32:31.779
this environment is the device starts in
a clean pristine State for every

00:32:31.779 --> 00:32:31.789
a clean pristine State for every
 

00:32:31.789 --> 00:32:33.789
a clean pristine State for every
invocation so there is no state carry

00:32:33.789 --> 00:32:33.799
invocation so there is no state carry
 

00:32:33.799 --> 00:32:35.200
invocation so there is no state carry
forward between different and vacations

00:32:35.200 --> 00:32:35.210
forward between different and vacations
 

00:32:35.210 --> 00:32:37.239
forward between different and vacations
making sure like tests are going to be

00:32:37.239 --> 00:32:37.249
making sure like tests are going to be
 

00:32:37.249 --> 00:32:39.669
making sure like tests are going to be
extremely stable and not failed because

00:32:39.669 --> 00:32:39.679
extremely stable and not failed because
 

00:32:39.679 --> 00:32:43.790
extremely stable and not failed because
of the device itself

00:32:43.790 --> 00:32:43.800
 

00:32:43.800 --> 00:32:45.950
a nutshell there are several teams

00:32:45.950 --> 00:32:45.960
a nutshell there are several teams
 

00:32:45.960 --> 00:32:48.470
a nutshell there are several teams
within Google that write NDK code like

00:32:48.470 --> 00:32:48.480
within Google that write NDK code like
 

00:32:48.480 --> 00:32:50.210
within Google that write NDK code like
when you're writing native code and they

00:32:50.210 --> 00:32:50.220
when you're writing native code and they
 

00:32:50.220 --> 00:32:52.490
when you're writing native code and they
wanted to test their native code but to

00:32:52.490 --> 00:32:52.500
wanted to test their native code but to
 

00:32:52.500 --> 00:32:54.110
wanted to test their native code but to
test a native code they wanted to boot

00:32:54.110 --> 00:32:54.120
test a native code they wanted to boot
 

00:32:54.120 --> 00:32:56.360
test a native code they wanted to boot
up arm devices and booting up arm

00:32:56.360 --> 00:32:56.370
up arm devices and booting up arm
 

00:32:56.370 --> 00:32:58.700
up arm devices and booting up arm
devices were extremely slow for example

00:32:58.700 --> 00:32:58.710
devices were extremely slow for example
 

00:32:58.710 --> 00:33:00.920
devices were extremely slow for example
on Mugen booting up an arm device takes

00:33:00.920 --> 00:33:00.930
on Mugen booting up an arm device takes
 

00:33:00.930 --> 00:33:02.630
on Mugen booting up an arm device takes
about 10 minutes and this was slowing

00:33:02.630 --> 00:33:02.640
about 10 minutes and this was slowing
 

00:33:02.640 --> 00:33:05.090
about 10 minutes and this was slowing
things down tremendously this helped

00:33:05.090 --> 00:33:05.100
things down tremendously this helped
 

00:33:05.100 --> 00:33:06.470
things down tremendously this helped
this made us go back to the drawing

00:33:06.470 --> 00:33:06.480
this made us go back to the drawing
 

00:33:06.480 --> 00:33:07.730
this made us go back to the drawing
board to see what could we do to

00:33:07.730 --> 00:33:07.740
board to see what could we do to
 

00:33:07.740 --> 00:33:10.670
board to see what could we do to
increase the to decrease the time it

00:33:10.670 --> 00:33:10.680
increase the to decrease the time it
 

00:33:10.680 --> 00:33:16.730
increase the to decrease the time it
takes to boot up those devices so we

00:33:16.730 --> 00:33:16.740
takes to boot up those devices so we
 

00:33:16.740 --> 00:33:19.100
takes to boot up those devices so we
ended up going and created a mini boot

00:33:19.100 --> 00:33:19.110
ended up going and created a mini boot
 

00:33:19.110 --> 00:33:20.510
ended up going and created a mini boot
mode in the virtual device

00:33:20.510 --> 00:33:20.520
mode in the virtual device
 

00:33:20.520 --> 00:33:22.910
mode in the virtual device
what does mini boot mode mean we like

00:33:22.910 --> 00:33:22.920
what does mini boot mode mean we like
 

00:33:22.920 --> 00:33:24.590
what does mini boot mode mean we like
for testing native code you don't need

00:33:24.590 --> 00:33:24.600
for testing native code you don't need
 

00:33:24.600 --> 00:33:26.330
for testing native code you don't need
the entire Android stack to be up and

00:33:26.330 --> 00:33:26.340
the entire Android stack to be up and
 

00:33:26.340 --> 00:33:28.100
the entire Android stack to be up and
running all you need is technically the

00:33:28.100 --> 00:33:28.110
running all you need is technically the
 

00:33:28.110 --> 00:33:30.080
running all you need is technically the
Linux kernel and if the kernel is up and

00:33:30.080 --> 00:33:30.090
Linux kernel and if the kernel is up and
 

00:33:30.090 --> 00:33:32.060
Linux kernel and if the kernel is up and
running you could test your native API

00:33:32.060 --> 00:33:32.070
running you could test your native API
 

00:33:32.070 --> 00:33:34.550
running you could test your native API
so we ended up and we ended up adding a

00:33:34.550 --> 00:33:34.560
so we ended up and we ended up adding a
 

00:33:34.560 --> 00:33:35.990
so we ended up and we ended up adding a
mini boot mode to our virtual device

00:33:35.990 --> 00:33:36.000
mini boot mode to our virtual device
 

00:33:36.000 --> 00:33:38.450
mini boot mode to our virtual device
launcher which would come up in less

00:33:38.450 --> 00:33:38.460
launcher which would come up in less
 

00:33:38.460 --> 00:33:41.210
launcher which would come up in less
than 30 seconds and that would help the

00:33:41.210 --> 00:33:41.220
than 30 seconds and that would help the
 

00:33:41.220 --> 00:33:43.400
than 30 seconds and that would help the
the NDK developers to tested in native

00:33:43.400 --> 00:33:43.410
the NDK developers to tested in native
 

00:33:43.410 --> 00:33:46.700
the NDK developers to tested in native
code much more quickly by Google we make

00:33:46.700 --> 00:33:46.710
code much more quickly by Google we make
 

00:33:46.710 --> 00:33:48.590
code much more quickly by Google we make
a lot of data-driven decisions so

00:33:48.590 --> 00:33:48.600
a lot of data-driven decisions so
 

00:33:48.600 --> 00:33:50.510
a lot of data-driven decisions so
because we were running things at scale

00:33:50.510 --> 00:33:50.520
because we were running things at scale
 

00:33:50.520 --> 00:33:52.760
because we were running things at scale
we were looking very very spending bulk

00:33:52.760 --> 00:33:52.770
we were looking very very spending bulk
 

00:33:52.770 --> 00:33:54.800
we were looking very very spending bulk
of our time while running our tests and

00:33:54.800 --> 00:33:54.810
of our time while running our tests and
 

00:33:54.810 --> 00:33:57.130
of our time while running our tests and
turned out 50% of our time was spent in

00:33:57.130 --> 00:33:57.140
turned out 50% of our time was spent in
 

00:33:57.140 --> 00:34:00.290
turned out 50% of our time was spent in
booting up the emulator 30% of the time

00:34:00.290 --> 00:34:00.300
booting up the emulator 30% of the time
 

00:34:00.300 --> 00:34:02.150
booting up the emulator 30% of the time
was spent in installing an app because

00:34:02.150 --> 00:34:02.160
was spent in installing an app because
 

00:34:02.160 --> 00:34:03.680
was spent in installing an app because
of a process called list x2o

00:34:03.680 --> 00:34:03.690
of a process called list x2o
 

00:34:03.690 --> 00:34:06.650
of a process called list x2o
and 20% of the time was spent in running

00:34:06.650 --> 00:34:06.660
and 20% of the time was spent in running
 

00:34:06.660 --> 00:34:09.830
and 20% of the time was spent in running
the test itself Android made a change

00:34:09.830 --> 00:34:09.840
the test itself Android made a change
 

00:34:09.840 --> 00:34:12.620
the test itself Android made a change
with between lollipop and a new Girt

00:34:12.620 --> 00:34:12.630
with between lollipop and a new Girt
 

00:34:12.630 --> 00:34:14.180
with between lollipop and a new Girt
where they wanted to do ahead of time

00:34:14.180 --> 00:34:14.190
where they wanted to do ahead of time
 

00:34:14.190 --> 00:34:16.250
where they wanted to do ahead of time
compilation using a tool called is text

00:34:16.250 --> 00:34:16.260
compilation using a tool called is text
 

00:34:16.260 --> 00:34:20.090
compilation using a tool called is text
to old and so what we so because the app

00:34:20.090 --> 00:34:20.100
to old and so what we so because the app
 

00:34:20.100 --> 00:34:22.520
to old and so what we so because the app
installation times were so huge what we

00:34:22.520 --> 00:34:22.530
installation times were so huge what we
 

00:34:22.530 --> 00:34:24.800
installation times were so huge what we
ended up doing was you have the exact

00:34:24.800 --> 00:34:24.810
ended up doing was you have the exact
 

00:34:24.810 --> 00:34:26.840
ended up doing was you have the exact
same device the exact same app under

00:34:26.840 --> 00:34:26.850
same device the exact same app under
 

00:34:26.850 --> 00:34:28.880
same device the exact same app under
test that's being tested and the exact

00:34:28.880 --> 00:34:28.890
test that's being tested and the exact
 

00:34:28.890 --> 00:34:30.860
test that's being tested and the exact
same next to old file that the exact

00:34:30.860 --> 00:34:30.870
same next to old file that the exact
 

00:34:30.870 --> 00:34:33.110
same next to old file that the exact
same old file being generated for every

00:34:33.110 --> 00:34:33.120
same old file being generated for every
 

00:34:33.120 --> 00:34:35.570
same old file being generated for every
test invocation what we said was what if

00:34:35.570 --> 00:34:35.580
test invocation what we said was what if
 

00:34:35.580 --> 00:34:38.870
test invocation what we said was what if
we move this as a single action as a on

00:34:38.870 --> 00:34:38.880
we move this as a single action as a on
 

00:34:38.880 --> 00:34:41.480
we move this as a single action as a on
a on the basal Bell graph and reuse the

00:34:41.480 --> 00:34:41.490
a on the basal Bell graph and reuse the
 

00:34:41.490 --> 00:34:43.340
a on the basal Bell graph and reuse the
old file that was generated for all your

00:34:43.340 --> 00:34:43.350
old file that was generated for all your
 

00:34:43.350 --> 00:34:45.860
old file that was generated for all your
test runs this significantly reduced the

00:34:45.860 --> 00:34:45.870
test runs this significantly reduced the
 

00:34:45.870 --> 00:34:48.050
test runs this significantly reduced the
app install time from over three minutes

00:34:48.050 --> 00:34:48.060
app install time from over three minutes
 

00:34:48.060 --> 00:34:50.350
app install time from over three minutes
for one of the apps to under a minute

00:34:50.350 --> 00:34:50.360
for one of the apps to under a minute
 

00:34:50.360 --> 00:34:53.060
for one of the apps to under a minute
if you were here earlier today when the

00:34:53.060 --> 00:34:53.070
if you were here earlier today when the
 

00:34:53.070 --> 00:34:55.040
if you were here earlier today when the
emulator team presented about snapshots

00:34:55.040 --> 00:34:55.050
emulator team presented about snapshots
 

00:34:55.050 --> 00:34:57.390
emulator team presented about snapshots
where you could boot up an emulator

00:34:57.390 --> 00:34:57.400
where you could boot up an emulator
 

00:34:57.400 --> 00:34:59.160
where you could boot up an emulator
safety snapshot and then shut down the

00:34:59.160 --> 00:34:59.170
safety snapshot and then shut down the
 

00:34:59.170 --> 00:35:01.170
safety snapshot and then shut down the
emulator and when you restart it it

00:35:01.170 --> 00:35:01.180
emulator and when you restart it it
 

00:35:01.180 --> 00:35:03.600
emulator and when you restart it it
restarts back from the same state valve

00:35:03.600 --> 00:35:03.610
restarts back from the same state valve
 

00:35:03.610 --> 00:35:05.580
restarts back from the same state valve
we integrated the snapshot feature back

00:35:05.580 --> 00:35:05.590
we integrated the snapshot feature back
 

00:35:05.590 --> 00:35:06.990
we integrated the snapshot feature back
into virtual device launcher

00:35:06.990 --> 00:35:07.000
into virtual device launcher
 

00:35:07.000 --> 00:35:09.180
into virtual device launcher
where you boot up a device take a

00:35:09.180 --> 00:35:09.190
where you boot up a device take a
 

00:35:09.190 --> 00:35:11.760
where you boot up a device take a
snapshot shut it down and then reuse it

00:35:11.760 --> 00:35:11.770
snapshot shut it down and then reuse it
 

00:35:11.770 --> 00:35:14.040
snapshot shut it down and then reuse it
when the test actually runs this

00:35:14.040 --> 00:35:14.050
when the test actually runs this
 

00:35:14.050 --> 00:35:15.720
when the test actually runs this
significantly reduced our Tusk test

00:35:15.720 --> 00:35:15.730
significantly reduced our Tusk test
 

00:35:15.730 --> 00:35:18.420
significantly reduced our Tusk test
runtimes by over 30% just imagine when

00:35:18.420 --> 00:35:18.430
runtimes by over 30% just imagine when
 

00:35:18.430 --> 00:35:20.640
runtimes by over 30% just imagine when
you run tests at 2.4 billion in

00:35:20.640 --> 00:35:20.650
you run tests at 2.4 billion in
 

00:35:20.650 --> 00:35:22.980
you run tests at 2.4 billion in
vacations reducing test times by 30%

00:35:22.980 --> 00:35:22.990
vacations reducing test times by 30%
 

00:35:22.990 --> 00:35:26.370
vacations reducing test times by 30%
would yield a huge number of like you'd

00:35:26.370 --> 00:35:26.380
would yield a huge number of like you'd
 

00:35:26.380 --> 00:35:29.700
would yield a huge number of like you'd
save huge amounts of CPU resources one

00:35:29.700 --> 00:35:29.710
save huge amounts of CPU resources one
 

00:35:29.710 --> 00:35:30.780
save huge amounts of CPU resources one
of the other features that we are going

00:35:30.780 --> 00:35:30.790
of the other features that we are going
 

00:35:30.790 --> 00:35:33.780
of the other features that we are going
to work probably next year is a cloud

00:35:33.780 --> 00:35:33.790
to work probably next year is a cloud
 

00:35:33.790 --> 00:35:35.370
to work probably next year is a cloud
snapshots which is combination of

00:35:35.370 --> 00:35:35.380
snapshots which is combination of
 

00:35:35.380 --> 00:35:37.860
snapshots which is combination of
texture on the cloud and snapshots call

00:35:37.860 --> 00:35:37.870
texture on the cloud and snapshots call
 

00:35:37.870 --> 00:35:42.030
texture on the cloud and snapshots call
it cloud snapshots but this we come to

00:35:42.030 --> 00:35:42.040
it cloud snapshots but this we come to
 

00:35:42.040 --> 00:35:43.830
it cloud snapshots but this we come to
our end of our talk where with nitrogen

00:35:43.830 --> 00:35:43.840
our end of our talk where with nitrogen
 

00:35:43.840 --> 00:35:45.900
our end of our talk where with nitrogen
you'd be able to run your tested scale

00:35:45.900 --> 00:35:45.910
you'd be able to run your tested scale
 

00:35:45.910 --> 00:35:48.240
you'd be able to run your tested scale
in a completely stable environment with

00:35:48.240 --> 00:35:48.250
in a completely stable environment with
 

00:35:48.250 --> 00:35:50.670
in a completely stable environment with
all of these different pillars this is

00:35:50.670 --> 00:35:50.680
all of these different pillars this is
 

00:35:50.680 --> 00:35:52.650
all of these different pillars this is
our next-generation platform that will

00:35:52.650 --> 00:35:52.660
our next-generation platform that will
 

00:35:52.660 --> 00:35:56.820
our next-generation platform that will
help you test in this talk we did do a

00:35:56.820 --> 00:35:56.830
help you test in this talk we did do a
 

00:35:56.830 --> 00:35:59.010
help you test in this talk we did do a
lot of technical stuff like deck stomp

00:35:59.010 --> 00:35:59.020
lot of technical stuff like deck stomp
 

00:35:59.020 --> 00:36:00.000
lot of technical stuff like deck stomp
f6

00:36:00.000 --> 00:36:00.010
f6
 

00:36:00.010 --> 00:36:02.040
f6
activity controller you don't have to

00:36:02.040 --> 00:36:02.050
activity controller you don't have to
 

00:36:02.050 --> 00:36:03.900
activity controller you don't have to
worry about any of those things because

00:36:03.900 --> 00:36:03.910
worry about any of those things because
 

00:36:03.910 --> 00:36:04.950
worry about any of those things because
all of these things are already

00:36:04.950 --> 00:36:04.960
all of these things are already
 

00:36:04.960 --> 00:36:07.410
all of these things are already
incorporated in nitrogen as well as the

00:36:07.410 --> 00:36:07.420
incorporated in nitrogen as well as the
 

00:36:07.420 --> 00:36:08.970
incorporated in nitrogen as well as the
virtual device management solution and

00:36:08.970 --> 00:36:08.980
virtual device management solution and
 

00:36:08.980 --> 00:36:10.980
virtual device management solution and
all you would have to do is like use

00:36:10.980 --> 00:36:10.990
all you would have to do is like use
 

00:36:10.990 --> 00:36:14.310
all you would have to do is like use
this so we are hoping to release

00:36:14.310 --> 00:36:14.320
this so we are hoping to release
 

00:36:14.320 --> 00:36:18.930
this so we are hoping to release
nitrogen alpha in q1 of next year the

00:36:18.930 --> 00:36:18.940
nitrogen alpha in q1 of next year the
 

00:36:18.940 --> 00:36:20.850
nitrogen alpha in q1 of next year the
virtual device management solution is

00:36:20.850 --> 00:36:20.860
virtual device management solution is
 

00:36:20.860 --> 00:36:22.020
virtual device management solution is
going to be released around the same

00:36:22.020 --> 00:36:22.030
going to be released around the same
 

00:36:22.030 --> 00:36:23.930
going to be released around the same
time as well with an alpha release

00:36:23.930 --> 00:36:23.940
time as well with an alpha release
 

00:36:23.940 --> 00:36:26.100
time as well with an alpha release
firebase test lab is actually

00:36:26.100 --> 00:36:26.110
firebase test lab is actually
 

00:36:26.110 --> 00:36:28.320
firebase test lab is actually
integrating with nitrogen as well to run

00:36:28.320 --> 00:36:28.330
integrating with nitrogen as well to run
 

00:36:28.330 --> 00:36:30.690
integrating with nitrogen as well to run
your tests one of the things that's

00:36:30.690 --> 00:36:30.700
your tests one of the things that's
 

00:36:30.700 --> 00:36:32.040
your tests one of the things that's
different pointed out earlier about

00:36:32.040 --> 00:36:32.050
different pointed out earlier about
 

00:36:32.050 --> 00:36:34.440
different pointed out earlier about
integration of my Android studio and

00:36:34.440 --> 00:36:34.450
integration of my Android studio and
 

00:36:34.450 --> 00:36:37.140
integration of my Android studio and
Gradle with nitrogen just imagine you're

00:36:37.140 --> 00:36:37.150
Gradle with nitrogen just imagine you're
 

00:36:37.150 --> 00:36:38.820
Gradle with nitrogen just imagine you're
sitting in front of your Android studio

00:36:38.820 --> 00:36:38.830
sitting in front of your Android studio
 

00:36:38.830 --> 00:36:41.130
sitting in front of your Android studio
you hit the run test button which

00:36:41.130 --> 00:36:41.140
you hit the run test button which
 

00:36:41.140 --> 00:36:43.080
you hit the run test button which
actually invokes nitrogen which could

00:36:43.080 --> 00:36:43.090
actually invokes nitrogen which could
 

00:36:43.090 --> 00:36:44.670
actually invokes nitrogen which could
actually launch the virtual device to

00:36:44.670 --> 00:36:44.680
actually launch the virtual device to
 

00:36:44.680 --> 00:36:46.710
actually launch the virtual device to
run your test and give you results back

00:36:46.710 --> 00:36:46.720
run your test and give you results back
 

00:36:46.720 --> 00:36:50.670
run your test and give you results back
on your Android studio itself and that's

00:36:50.670 --> 00:36:50.680
on your Android studio itself and that's
 

00:36:50.680 --> 00:36:52.600
on your Android studio itself and that's
farted thank you very much

00:36:52.600 --> 00:36:52.610
farted thank you very much
 

00:36:52.610 --> 00:36:59.640
farted thank you very much
[Applause]

00:36:59.640 --> 00:36:59.650
[Applause]
 

00:36:59.650 --> 00:37:04.109
[Applause]
that it alright well hey everyone I

00:37:04.109 --> 00:37:04.119
that it alright well hey everyone I
 

00:37:04.119 --> 00:37:06.609
that it alright well hey everyone I
wanted to thank you all for coming and

00:37:06.609 --> 00:37:06.619
wanted to thank you all for coming and
 

00:37:06.619 --> 00:37:10.020
wanted to thank you all for coming and
attending the Android dev summit it is

00:37:10.020 --> 00:37:10.030
attending the Android dev summit it is
 

00:37:10.030 --> 00:37:12.730
attending the Android dev summit it is
really really amazing to be able to do

00:37:12.730 --> 00:37:12.740
really really amazing to be able to do
 

00:37:12.740 --> 00:37:14.530
really really amazing to be able to do
this again we really want to know what

00:37:14.530 --> 00:37:14.540
this again we really want to know what
 

00:37:14.540 --> 00:37:16.240
this again we really want to know what
you think and this is really important

00:37:16.240 --> 00:37:16.250
you think and this is really important
 

00:37:16.250 --> 00:37:18.940
you think and this is really important
so all of you should by now or very soon

00:37:18.940 --> 00:37:18.950
so all of you should by now or very soon
 

00:37:18.950 --> 00:37:21.190
so all of you should by now or very soon
we'll get a survey in your inbox please

00:37:21.190 --> 00:37:21.200
we'll get a survey in your inbox please
 

00:37:21.200 --> 00:37:22.900
we'll get a survey in your inbox please
please please fill it out

00:37:22.900 --> 00:37:22.910
please please fill it out
 

00:37:22.910 --> 00:37:25.750
please please fill it out
because it is we so much wanted to make

00:37:25.750 --> 00:37:25.760
because it is we so much wanted to make
 

00:37:25.760 --> 00:37:27.910
because it is we so much wanted to make
this event amazing should we ever do it

00:37:27.910 --> 00:37:27.920
this event amazing should we ever do it
 

00:37:27.920 --> 00:37:30.820
this event amazing should we ever do it
again we really want to know what worked

00:37:30.820 --> 00:37:30.830
again we really want to know what worked
 

00:37:30.830 --> 00:37:32.530
again we really want to know what worked
and what didn't work what what you liked

00:37:32.530 --> 00:37:32.540
and what didn't work what what you liked
 

00:37:32.540 --> 00:37:34.240
and what didn't work what what you liked
what you didn't like less Dan Galpin

00:37:34.240 --> 00:37:34.250
what you didn't like less Dan Galpin
 

00:37:34.250 --> 00:37:37.630
what you didn't like less Dan Galpin
maybe you know second thing is we are

00:37:37.630 --> 00:37:37.640
maybe you know second thing is we are
 

00:37:37.640 --> 00:37:39.310
maybe you know second thing is we are
gonna we have these QR codes which we

00:37:39.310 --> 00:37:39.320
gonna we have these QR codes which we
 

00:37:39.320 --> 00:37:40.330
gonna we have these QR codes which we
might be able to put up one more time

00:37:40.330 --> 00:37:40.340
might be able to put up one more time
 

00:37:40.340 --> 00:37:43.599
might be able to put up one more time
hopefully and though these are how you

00:37:43.599 --> 00:37:43.609
hopefully and though these are how you
 

00:37:43.609 --> 00:37:45.070
hopefully and though these are how you
rate the sessions and so we want to know

00:37:45.070 --> 00:37:45.080
rate the sessions and so we want to know
 

00:37:45.080 --> 00:37:47.440
rate the sessions and so we want to know
what sessions you loved what sessions

00:37:47.440 --> 00:37:47.450
what sessions you loved what sessions
 

00:37:47.450 --> 00:37:51.280
what sessions you loved what sessions
you only liked what sessions you sat

00:37:51.280 --> 00:37:51.290
you only liked what sessions you sat
 

00:37:51.290 --> 00:37:53.050
you only liked what sessions you sat
through because they were there in the

00:37:53.050 --> 00:37:53.060
through because they were there in the
 

00:37:53.060 --> 00:37:54.520
through because they were there in the
same room and you we're kind of

00:37:54.520 --> 00:37:54.530
same room and you we're kind of
 

00:37:54.530 --> 00:37:57.190
same room and you we're kind of
comfortable in your seat so please also

00:37:57.190 --> 00:37:57.200
comfortable in your seat so please also
 

00:37:57.200 --> 00:37:58.570
comfortable in your seat so please also
fill out these surveys and let us know

00:37:58.570 --> 00:37:58.580
fill out these surveys and let us know
 

00:37:58.580 --> 00:38:00.220
fill out these surveys and let us know
it worked I know it's a lot of work but

00:38:00.220 --> 00:38:00.230
it worked I know it's a lot of work but
 

00:38:00.230 --> 00:38:03.400
it worked I know it's a lot of work but
I really appreciate that and ultimately

00:38:03.400 --> 00:38:03.410
I really appreciate that and ultimately
 

00:38:03.410 --> 00:38:05.050
I really appreciate that and ultimately
if you missed anything

00:38:05.050 --> 00:38:05.060
if you missed anything
 

00:38:05.060 --> 00:38:07.800
if you missed anything
all of these talks are actually up today

00:38:07.800 --> 00:38:07.810
all of these talks are actually up today
 

00:38:07.810 --> 00:38:10.870
all of these talks are actually up today
right now okay I guess that's gone all

00:38:10.870 --> 00:38:10.880
right now okay I guess that's gone all
 

00:38:10.880 --> 00:38:12.700
right now okay I guess that's gone all
the talks that we have are up on the

00:38:12.700 --> 00:38:12.710
the talks that we have are up on the
 

00:38:12.710 --> 00:38:14.820
the talks that we have are up on the
Android developers YouTube channel and

00:38:14.820 --> 00:38:14.830
Android developers YouTube channel and
 

00:38:14.830 --> 00:38:18.370
Android developers YouTube channel and
and so again I think and from yesterday

00:38:18.370 --> 00:38:18.380
and so again I think and from yesterday
 

00:38:18.380 --> 00:38:19.930
and so again I think and from yesterday
and most of them from today are already

00:38:19.930 --> 00:38:19.940
and most of them from today are already
 

00:38:19.940 --> 00:38:22.150
and most of them from today are already
going up and by I think the end of

00:38:22.150 --> 00:38:22.160
going up and by I think the end of
 

00:38:22.160 --> 00:38:23.530
going up and by I think the end of
tonight all of them will be up on the

00:38:23.530 --> 00:38:23.540
tonight all of them will be up on the
 

00:38:23.540 --> 00:38:24.970
tonight all of them will be up on the
channel so you'll be able to even go

00:38:24.970 --> 00:38:24.980
channel so you'll be able to even go
 

00:38:24.980 --> 00:38:26.200
channel so you'll be able to even go
home tonight if you haven't had enough

00:38:26.200 --> 00:38:26.210
home tonight if you haven't had enough
 

00:38:26.210 --> 00:38:29.320
home tonight if you haven't had enough
Android dev summit by now you can even

00:38:29.320 --> 00:38:29.330
Android dev summit by now you can even
 

00:38:29.330 --> 00:38:31.240
Android dev summit by now you can even
have more from the comfort of your very

00:38:31.240 --> 00:38:31.250
have more from the comfort of your very
 

00:38:31.250 --> 00:38:35.980
have more from the comfort of your very
own history museum and and finally we

00:38:35.980 --> 00:38:35.990
own history museum and and finally we
 

00:38:35.990 --> 00:38:38.980
own history museum and and finally we
have a little bit of a final reel here

00:38:38.980 --> 00:38:38.990
have a little bit of a final reel here
 

00:38:38.990 --> 00:38:41.980
have a little bit of a final reel here
of just some of what was going on here

00:38:41.980 --> 00:38:41.990
of just some of what was going on here
 

00:38:41.990 --> 00:38:43.720
of just some of what was going on here
that we'll have we should we'll share to

00:38:43.720 --> 00:38:43.730
that we'll have we should we'll share to
 

00:38:43.730 --> 00:38:47.020
that we'll have we should we'll share to
you as you think about wandering out

00:38:47.020 --> 00:38:47.030
you as you think about wandering out
 

00:38:47.030 --> 00:38:49.540
you as you think about wandering out
here and going back to the real world so

00:38:49.540 --> 00:38:49.550
here and going back to the real world so
 

00:38:49.550 --> 00:38:53.600
here and going back to the real world so
thank you so much for coming again

00:38:53.600 --> 00:38:53.610
 

00:38:53.610 --> 00:38:57.890
welcome to the 2018 Android developer

00:38:57.890 --> 00:38:57.900
welcome to the 2018 Android developer
 

00:38:57.900 --> 00:39:00.380
welcome to the 2018 Android developer
summits this is an event for developers

00:39:00.380 --> 00:39:00.390
summits this is an event for developers
 

00:39:00.390 --> 00:39:07.350
summits this is an event for developers
by developers

00:39:07.350 --> 00:39:07.360
 

00:39:07.360 --> 00:39:11.070
with over two billion devices three

00:39:11.070 --> 00:39:11.080
with over two billion devices three
 

00:39:11.080 --> 00:39:14.160
with over two billion devices three
quarters of a trillion apps downloaded

00:39:14.160 --> 00:39:14.170
quarters of a trillion apps downloaded
 

00:39:14.170 --> 00:39:16.440
quarters of a trillion apps downloaded
every year androids developer community

00:39:16.440 --> 00:39:16.450
every year androids developer community
 

00:39:16.450 --> 00:39:18.870
every year androids developer community
is growing hugely we saw it more than

00:39:18.870 --> 00:39:18.880
is growing hugely we saw it more than
 

00:39:18.880 --> 00:39:21.040
is growing hugely we saw it more than
double just in the past few years

00:39:21.040 --> 00:39:21.050
double just in the past few years
 

00:39:21.050 --> 00:39:35.530
double just in the past few years
[Music]

00:39:35.530 --> 00:39:35.540
[Music]
 

00:39:35.540 --> 00:39:38.990
[Music]
so the Android app bundle makes it much

00:39:38.990 --> 00:39:39.000
so the Android app bundle makes it much
 

00:39:39.000 --> 00:39:41.780
so the Android app bundle makes it much
simpler with no additional developer

00:39:41.780 --> 00:39:41.790
simpler with no additional developer
 

00:39:41.790 --> 00:39:44.180
simpler with no additional developer
work needed the app bundle now makes

00:39:44.180 --> 00:39:44.190
work needed the app bundle now makes
 

00:39:44.190 --> 00:39:47.210
work needed the app bundle now makes
apps an average of 8 percent smaller to

00:39:47.210 --> 00:39:47.220
apps an average of 8 percent smaller to
 

00:39:47.220 --> 00:39:51.830
apps an average of 8 percent smaller to
download for m+ devices we simply could

00:39:51.830 --> 00:39:51.840
download for m+ devices we simply could
 

00:39:51.840 --> 00:40:02.550
download for m+ devices we simply could
not do this thank you so thank you

00:40:02.550 --> 00:40:02.560
 

00:40:02.560 --> 00:40:11.829
[Music]

