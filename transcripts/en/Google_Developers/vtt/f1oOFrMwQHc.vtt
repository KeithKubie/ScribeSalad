WEBVTT
Kind: captions
Language: en

00:00:01.050 --> 00:00:03.409
&gt;&gt;Chris DiBona: Hi, everyone.
Welcome to I think the last segment of the

00:00:03.409 --> 00:00:07.250
day; right?
I hope you have had a great time here at I/O.

00:00:07.250 --> 00:00:10.300
It's something that we put a lot of work into
as a company.

00:00:10.300 --> 00:00:15.530
I mean, not me personally, but we put a lot
of work into it as a company, and it represents

00:00:15.530 --> 00:00:22.530
the end of -- not the end, but, well, an important
point in a lot of our release schedules and

00:00:22.539 --> 00:00:27.479
careers and the rest, as you saw with this
morning's discussion about Froyo.

00:00:27.479 --> 00:00:33.329
&gt;&gt;&gt; (Speaking off mic)
&gt;&gt;Chris DiBona: No, a high point. It's all

00:00:33.329 --> 00:00:37.140
downhill from here, David.
What I would like to do is I would like to

00:00:37.140 --> 00:00:42.679
have the esteemed panel introduce themselves
very quickly, starting with David.

00:00:42.679 --> 00:00:47.230
&gt;&gt;Dave Sparks: Dave Sparks. I am the lead
on the Android Media Framework.

00:00:47.230 --> 00:00:53.230
&gt;&gt;San Mehat: I am on the Android Kernel Team.
&gt;&gt;Michael Morrissey: Michael Morrissey. I

00:00:53.230 --> 00:00:57.339
am the director of Android Services.
&gt;&gt;Dan Morrill: I am Dan Morrill. I am the

00:00:57.339 --> 00:01:00.269
open source and compatibility lead.
&gt;&gt;Dan Bornstein: I am Dan Bornstein. I am

00:01:00.269 --> 00:01:03.789
the tech lead for the Dalvik team.
&gt;&gt;Xavier Ducrohet: I am Xavier Ducrohet. I

00:01:03.789 --> 00:01:07.580
am the lead for the SDK and developer tools.
&gt;&gt;Brian Swetland: Brian Swetland. I am the

00:01:07.580 --> 00:01:11.120
Android systems kernel lead.
&gt;&gt;Mike Cleron: Mike Cleron, and I work on

00:01:11.120 --> 00:01:17.000
application framework and system UI.
&gt;&gt;Chris DiBona: Oh, and this is an Android,

00:01:17.000 --> 00:01:21.520
so.... They couldn't see it over on the other
side. So it's a huge plush Android.

00:01:21.520 --> 00:01:26.020
&gt;&gt;Dave Sparks: Isn't that Andy Rubin?
&gt;&gt;Chris DiBona: This is Andy Rubin.

00:01:26.020 --> 00:01:29.550
Actually, Andy and a lot of the team are in
the back. Scream out, "Yo!"

00:01:29.550 --> 00:01:34.560
&gt;&gt;&gt;Yo!
&gt;&gt;Chris DiBona: Yo.

00:01:34.560 --> 00:01:39.890
So they are all here in case there is something
we can't answer, or answer incredibly poorly,

00:01:39.890 --> 00:01:45.090
they will be here for that.
We have got questions on the bit.ly link there,

00:01:45.090 --> 00:01:47.820
and we also have mics in the room. So if you
have question at this point, you are better

00:01:47.820 --> 00:01:52.990
off going to the mic. So let's get started.
I am Chris DiBona. I run a number of open

00:01:52.990 --> 00:01:56.690
source programs at the company, and I work
with the Android team.

00:01:56.690 --> 00:02:03.100
So there you go.
What can Google do to improve the transparency

00:02:03.100 --> 00:02:07.610
of Android core code development, deployment
and design? Google code trackers are full

00:02:07.610 --> 00:02:13.630
of questionable actions: Tickets closed without
remarks or defects closed as work-as-intended.

00:02:13.630 --> 00:02:19.970
So this is sort of a softer question.
This isn't really like how do you power on

00:02:19.970 --> 00:02:26.970
this rail.
San, you look like you want to say something.

00:02:27.630 --> 00:02:34.630
&gt;&gt;San Mehat: There's a lot of stuff on the
issue tracker, and I think that -- we as developers

00:02:36.840 --> 00:02:41.200
do our best to keep track of stuff and we
have our internal bug tracker as well as external

00:02:41.200 --> 00:02:47.069
bug trackers and sometimes for various reasons
it may not make sense to update one versus

00:02:47.069 --> 00:02:53.020
another but I think we are trying to do better
at that. So I think you are going to find

00:02:53.020 --> 00:02:57.870
there is a concerted effort being made by
engineering to get more involved in that.

00:02:57.870 --> 00:03:04.870
&gt;&gt;Dan Morrill: So I don't know when this question
was entered, but you may have noticed that

00:03:06.720 --> 00:03:11.510
last night we pushed a new version of the
source.Android.com site which addresses actually

00:03:11.510 --> 00:03:15.420
some of these issues.
As San pointed out, this is not something

00:03:15.420 --> 00:03:19.900
this is not something that's news to us. We
have known for some time that the contents

00:03:19.900 --> 00:03:24.600
of the source.Android.com site have been a
little not up-to-date.

00:03:24.600 --> 00:03:29.750
So we refreshed all that content for calm
of different reasons. Someone to include compatibility

00:03:29.750 --> 00:03:35.970
information about the Android compatibility
program, but also to include a refreshed version

00:03:35.970 --> 00:03:42.000
of the kind of, you know, basics of the open
source project that is Android in terms of

00:03:42.000 --> 00:03:46.780
how we do code reviews and so on.
In addition to that, we are also spinning

00:03:46.780 --> 00:03:50.080
up a bunch of different work that you will
start see rolling out over the coming months,

00:03:50.080 --> 00:03:53.810
including some ways to do better about handling
our issue tracker.

00:03:53.810 --> 00:03:59.849
As many of you probably know, like any OEM,
we have our internal issue tracker where we

00:03:59.849 --> 00:04:04.500
use to track issues with the devices that
we work on and so on. And one thing we are

00:04:04.500 --> 00:04:09.020
working on doing is synchronizing the public
and internal system so we can have better

00:04:09.020 --> 00:04:14.160
consistency between the two and so on.
So take a look at the site. There is a lot

00:04:14.160 --> 00:04:17.109
of stuff on that site, so I guess I will just
defer to the stuff that we wrote recently.

00:04:17.109 --> 00:04:21.859
I am happy to take follow-up questions or
see you guys online and so on.

00:04:21.859 --> 00:04:25.559
&gt;&gt;Chris DiBona: Why don't we take a question
from this microphone.

00:04:25.559 --> 00:04:32.559
&gt;&gt;&gt; Thanks. Right now anybody can go out and
download some paid apps on online because

00:04:36.219 --> 00:04:42.020
they have been pirated. What are the plans
to improve copyright protection in the Android

00:04:42.020 --> 00:04:47.389
marketplace for apps?
&gt;&gt;Michael Morrissey: That's a very good question

00:04:47.389 --> 00:04:51.490
and one we hear a lot, and I don't want to
pre-announce anything, but we are working

00:04:51.490 --> 00:04:56.169
on things internally to address those problems.
So stay tuned. I think you will hear more

00:04:56.169 --> 00:05:00.800
in the near future.
&gt;&gt;Chris DiBona: Let's go to this microphone

00:05:00.800 --> 00:05:04.469
on the left.
&gt;&gt;&gt; My name is Frank maker. I am a graduate

00:05:04.469 --> 00:05:08.879
student at U.C. Davis.
I do a lot of work with Android and eclipse

00:05:08.879 --> 00:05:13.240
is really painful. So I was wondering if you
guys had any thoughts on how to --

00:05:13.240 --> 00:05:18.099
[ Applause ]
&gt;&gt;&gt; I am seriously considering getting a new

00:05:18.099 --> 00:05:23.240
computer just because, you know, if you work
on eclipse for three or four hours, you have

00:05:23.240 --> 00:05:25.909
to restart it.
So I know you guys know this is a problem

00:05:25.909 --> 00:05:28.800
so I am wondering if you have any thoughts
right now on how to update it.

00:05:28.800 --> 00:05:33.300
And the other question I had real quick is
how close you are to putting Android back

00:05:33.300 --> 00:05:40.300
into the Linux kernel tree.
&gt;&gt;Brian Swetland: Let's answer the second

00:05:42.919 --> 00:05:45.210
question first.
&gt;&gt;Chris DiBona: Totally.

00:05:45.210 --> 00:05:50.620
&gt;&gt;Brian Swetland: Well, I mean, my -- I don't
use eclipse. I am a kernel engineer, so I

00:05:50.620 --> 00:05:53.849
can't help you with the first part. Somebody
else can dive in afterwards.

00:05:53.849 --> 00:06:00.699
We are actively working with the Linux kernel
community to try to move more stuff upstream.

00:06:00.699 --> 00:06:05.990
If you have been following on the Linux kernel
mailing list, there's been four weeks of discussion

00:06:05.990 --> 00:06:12.990
around the last six rewrites of the wakelock
or suspend lock or API. If it's going to get

00:06:13.860 --> 00:06:20.400
merged, it's going to get merged. We are putting
some effort into working with upstream folks.

00:06:20.400 --> 00:06:24.789
But, you know, it will get there when it gets
there.

00:06:24.789 --> 00:06:29.580
&gt;&gt;Chris DiBona: Yeah, I mean one of the realities
of the kernel is it's hard to hurry, you know.

00:06:29.580 --> 00:06:36.409
But we kind of came to a meeting of minds
of some sort at the Linux convention a couple

00:06:36.409 --> 00:06:43.409
of -- what was that? A month ago now? Yeah.
And it was a good meeting.

00:06:43.699 --> 00:06:47.879
But I anticipated it would take much longer
to get to this point so I am cautiously optimistic

00:06:47.879 --> 00:06:53.409
at this point. Whereas before I was, oh, it's
open source. Huh.

00:06:53.409 --> 00:06:59.899
And about Eclipse. Who wants to hate on Eclipse?
&gt;&gt;Xavier Ducrohet: We are aware that Eclipse

00:06:59.899 --> 00:07:04.139
requires a lot of resources, and that's why
we are paying a lot of attention to make sure

00:07:04.139 --> 00:07:07.360
you have another way of developing for Android.
You don't have to use Eclipse.

00:07:07.360 --> 00:07:13.149
We provide an Ant script. DDMS works as a
developer application tool. We are making

00:07:13.149 --> 00:07:17.680
sure that you can do everything outside of
Eclipse if you don't want to use it. And then

00:07:17.680 --> 00:07:22.020
after, I mean if you want, you can try to
use net bins. There's the plug-in for it.

00:07:22.020 --> 00:07:26.369
IntelliJ has two part for it. If you really
want an ID, you can try something else. But

00:07:26.369 --> 00:07:30.149
we can't support all of them, so we are going
to pay more attention to Eclipse at this time,

00:07:30.149 --> 00:07:35.499
but we are also making sure that you can use
either VI or whatever you want.

00:07:35.499 --> 00:07:39.899
&gt;&gt;&gt; I think to that effect, it would really
help if you pointed out some of those options

00:07:39.899 --> 00:07:44.159
because I am familiar with those because only
after being frustrated with Eclipse I went

00:07:44.159 --> 00:07:47.330
and looked for something else. But I think
a lot of people don't know there are other

00:07:47.330 --> 00:07:50.499
options so you might want to make those options
available.

00:07:50.499 --> 00:07:54.469
&gt;&gt;Xavier Ducrohet: Yeah, we can probably link
from our developer site to those.

00:07:54.469 --> 00:07:57.789
&gt;&gt;&gt; Thank you.
&gt;&gt;Chris DiBona: And the question that's likely

00:07:57.789 --> 00:08:03.740
for Dave Sparks, what plans are there to improve
the media experience on Android, lack of equalizer,

00:08:03.740 --> 00:08:07.589
limited video CODECs, stock music and video
players, browser quite limited.

00:08:07.589 --> 00:08:13.330
&gt;&gt;Dave Sparks: I didn't hear you will of that.
&gt;&gt;Chris DiBona: You know where that one is

00:08:13.330 --> 00:08:18.199
going.
&gt;&gt;Dave Sparks: We actually, in the previous

00:08:18.199 --> 00:08:21.479
thing I was in about an hour ago or something
like that, we were talking about some of the

00:08:21.479 --> 00:08:28.479
roadmap stuff, and we are going to be supporting
open SL ES as an API. So this is in the Khronos

00:08:28.819 --> 00:08:35.250
open standard. And that includes effects processing.
You will start to see effects processing in

00:08:35.250 --> 00:08:37.490
the next release.
&gt;&gt;Chris DiBona: And plug-ins for the effects

00:08:37.490 --> 00:08:42.680
if you decide to go write them and put them
on the market. It's actually really nice because

00:08:42.680 --> 00:08:49.250
on Android we will have one of the first fully
open sourced SL ES implementations, which

00:08:49.250 --> 00:08:51.269
we are hoping will drive innovation across
platforms.

00:08:51.269 --> 00:08:56.130
Yeah.
Let's take another one from the room. This

00:08:56.130 --> 00:09:00.240
fellow here.
&gt;&gt;&gt; Hello. I live in Switzerland, and I also

00:09:00.240 --> 00:09:06.250
come from Sweden and I was wondering when
I can create a merchandise account for Sweden

00:09:06.250 --> 00:09:10.740
and/or Switzerland.
And I have a second question. I have an application

00:09:10.740 --> 00:09:17.740
deployed on the market that, for some reasons,
a couple of users can't see, even though I

00:09:18.930 --> 00:09:25.930
have it from SDK 1.5 and for all languages.
&gt;&gt;Chris DiBona: I couldn't hear the first

00:09:27.160 --> 00:09:31.660
question. The second one sounds like he have
has an application he targeted in 1.5 but

00:09:31.660 --> 00:09:33.870
some users are still not seeing it on the
market.

00:09:33.870 --> 00:09:37.160
So it might be about market selectivity based
on the platform?

00:09:37.160 --> 00:09:42.040
Anything?
This is kind of like -- actually, in some

00:09:42.040 --> 00:09:45.350
ways I would recommend office hours for this
kind of question because it's hard to drill

00:09:45.350 --> 00:09:48.110
down to your particular application in this
environment. So maybe talk to them afterwards

00:09:48.110 --> 00:09:50.079
about that one.
What was your first question again?

00:09:50.079 --> 00:09:57.079
&gt;&gt;&gt; When can I create a merchandise account
in Switzerland and/or Sweden for earning money

00:09:58.160 --> 00:10:04.540
for applications on Android Market.
&gt;&gt;Michael Morrissey: So we're actively working

00:10:04.540 --> 00:10:11.540
to expand market seller and buyer support
in many different currencies and countries.

00:10:13.379 --> 00:10:19.470
Right now, I think we have buyer support in
13 countries and seller support in ten, and

00:10:19.470 --> 00:10:24.180
we are looking to expand that a lot.
There is a lot of complicated issues around

00:10:24.180 --> 00:10:28.230
that, but we are doing it as fast as possible
and we are prioritizing based on geography

00:10:28.230 --> 00:10:32.980
and the number of devices and the number of
developers in each country.

00:10:32.980 --> 00:10:36.930
&gt;&gt;&gt; Would it be possible to get a date for
Switzerland?

00:10:36.930 --> 00:10:40.509
Laugh.
&gt;&gt;Michael Morrissey: No, I'm sorry, not right

00:10:40.509 --> 00:10:41.899
now.
&gt;&gt;Chris DiBona: Thanks.

00:10:41.899 --> 00:10:47.490
How about the fellow in red right here.
&gt;&gt;&gt; A little while back we wanted to have

00:10:47.490 --> 00:10:53.620
our app call out to another third-party app.
It was quite painful searching around. I finally

00:10:53.620 --> 00:10:58.430
ended up going to their forums and posting
up the questions to see what kind of intents

00:10:58.430 --> 00:11:03.850
their app listened to on the device.
So I finally got that answer, but what can

00:11:03.850 --> 00:11:08.649
Google do to facilitate that third-party integration
between apps in the future?

00:11:08.649 --> 00:11:11.720
&gt;&gt;&gt;
&gt;&gt;Chris DiBona: So corralling the intents.

00:11:11.720 --> 00:11:18.720
Dan, want to take that one?
&gt;&gt;Dan Morrill: So, again, this is something

00:11:20.860 --> 00:11:27.860
that we are aware of. And what we would like
to do is create a -- well, there's really

00:11:28.250 --> 00:11:34.259
two parts to this question. What it really
boils down to is that, in fact, we talk about

00:11:34.259 --> 00:11:41.259
this in the compatibility definition document
on the source.Android.com site, but basically

00:11:42.480 --> 00:11:47.560
intents as a group or a concept represent
essentially sort of the soft API and we need

00:11:47.560 --> 00:11:53.699
to make sure that devices that are -- well,
intents are provided by applications. We need

00:11:53.699 --> 00:11:57.870
to make sure that devices that are implementing
Android all provide the same set of intents

00:11:57.870 --> 00:12:00.370
but we also want to extend that to third-party
apps.

00:12:00.370 --> 00:12:04.000
So the challenge that we have, and this is
something that I am actually thinking over,

00:12:04.000 --> 00:12:08.519
although I don't have any necessarily concrete
plans here yet, is to come up with a kind

00:12:08.519 --> 00:12:15.519
of site or service where developers can publish
the intents that their applications expose

00:12:16.290 --> 00:12:20.500
essentially for use by other applications.
And in the same site, include the standard

00:12:20.500 --> 00:12:25.120
system intents so developers have a one stop
shop for finding this kind of information.

00:12:25.120 --> 00:12:29.149
Like I said, that's not something that we
have, you know, ready for launch or anything

00:12:29.149 --> 00:12:31.120
like that.
It's not clear whether that belongs in the

00:12:31.120 --> 00:12:33.810
SDK documentation or a separate site or something
like that.

00:12:33.810 --> 00:12:35.670
But it's definitely something we're thinking
about.

00:12:35.670 --> 00:12:39.379
&gt;&gt;Chris DiBona: All right.
&gt;&gt;&gt; (Off mike).

00:12:39.379 --> 00:12:42.569
&gt;&gt;&gt; Open Intents is what this fellow said,
in case nobody caught that.

00:12:42.569 --> 00:12:46.529
&gt;&gt;Dan Morrill: Sorry.
I didn't catch that.

00:12:46.529 --> 00:12:49.870
&gt;&gt;&gt; (Off mike.)
&gt;&gt;Dan Morrill: That's true, openintents.org

00:12:49.870 --> 00:12:54.600
actually does have a good database as a start.
And we've been looking at that as well.

00:12:54.600 --> 00:12:59.810
I actually haven't looked at it terribly recently.
But they're a good resource for starters.

00:12:59.810 --> 00:13:06.810
&gt;&gt;Chris DiBona: Thanks.
So the Android Market is growing at an exponential

00:13:07.449 --> 00:13:09.720
rate.
But the payoff is that most of the growth

00:13:09.720 --> 00:13:14.100
is coming from spammers.
I don't know that I agree.

00:13:14.100 --> 00:13:18.540
eg, quote, app developers.
Does the Android team plan to do something

00:13:18.540 --> 00:13:24.660
about it, maybe let the user filter out apps/developers?
Like an I hate button.

00:13:24.660 --> 00:13:31.660
&gt;&gt;Michael Morrissey: I reject the premise
that most of the growth is coming from spammers.

00:13:32.389 --> 00:13:38.889
&gt;&gt;Chris DiBona: One person's book production
mechanism is another person's spammer.

00:13:38.889 --> 00:13:41.579
You know.
&gt;&gt;Michael Morrissey: Good point, Chris.

00:13:41.579 --> 00:13:48.579
But, yes, we're always looking for ways to
improve discoverability in -- of applications

00:13:48.829 --> 00:13:53.129
in the Android Market.
And that means, you know, ranking things lower

00:13:53.129 --> 00:13:57.620
that aren't good for people and ranking things
higher that a lot of people like.

00:13:57.620 --> 00:14:01.879
So we're always tweaking those algorithms
and looking for ways to improve.

00:14:01.879 --> 00:14:04.999
&gt;&gt;Chris DiBona: Thanks.
Over here I think.

00:14:04.999 --> 00:14:10.480
&gt;&gt;&gt; Hi.
I have three small questions about the Android

00:14:10.480 --> 00:14:12.600
future.
The first one is Froyo --

00:14:12.600 --> 00:14:17.550
&gt;&gt;Chris DiBona: Make it all one question,
one big, complicated question, then.

00:14:17.550 --> 00:14:23.709
Because there are a lot of people.
&gt;&gt;&gt; Just ask for three feature, the first

00:14:23.709 --> 00:14:29.079
is about FM radio support.
The second is more about radio telephony support.

00:14:29.079 --> 00:14:34.379
And the last one is support multiple display
hardware, for example, two LCD.

00:14:34.379 --> 00:14:40.339
&gt;&gt;Chris DiBona: Okay.
The first one was what?

00:14:40.339 --> 00:14:42.329
Sorry.
&gt;&gt;&gt; About FM radio support.

00:14:42.329 --> 00:14:44.790
&gt;&gt;Chris DiBona: Actually, we have FM radio
support in the EVO?

00:14:44.790 --> 00:14:49.459
&gt;&gt;David Sparks: Manufacturers are doing their
own thing on FM radio.

00:14:49.459 --> 00:14:56.459
We've looked at a couple of proposals from
 -- from a couple different partners.

00:14:57.699 --> 00:15:02.740
We don't have anything we like yet.
But I think we'll probably have something

00:15:02.740 --> 00:15:04.149
next year.
&gt;&gt;Chris DiBona: Number two?

00:15:04.149 --> 00:15:07.660
&gt;&gt;David Sparks: Number two was -- was it,
like, DTV or something like that?

00:15:07.660 --> 00:15:11.490
&gt;&gt;&gt; About radio telephony.
&gt;&gt;David Sparks: VT?

00:15:11.490 --> 00:15:14.949
&gt;&gt;&gt; Yeah.
&gt;&gt;David Sparks: So we don't have anything

00:15:14.949 --> 00:15:21.949
specific if you're talking about, like, H324M.
We are definitely looking at video chat interfaces.

00:15:23.620 --> 00:15:29.050
But I think what we'll be able to do in the
very near future, probably the next release,

00:15:29.050 --> 00:15:35.220
is enable those sorts of applications where
you provide your own VT stack and you can

00:15:35.220 --> 00:15:38.610
integrate with a media framework.
&gt;&gt;Chris DiBona: And then multiple screens

00:15:38.610 --> 00:15:39.639
was the other one?
&gt;&gt;&gt; Yeah.

00:15:39.639 --> 00:15:43.589
&gt;&gt;David Sparks: So multiple screens is a longer-term
problem.

00:15:43.589 --> 00:15:48.199
And I don't know if I should let Mike talk
 -- there's framework issues and there's the

00:15:48.199 --> 00:15:53.370
 -- the low-level issues.
It's a complicated problem which affects the

00:15:53.370 --> 00:15:58.139
entire stack if you're going to do it correctly.
So there's stuff that we have to do on the

00:15:58.139 --> 00:16:00.790
framework side and there's stuff we have to
do on the system-level side.

00:16:00.790 --> 00:16:07.430
We'll probably do something in the interim
to enable specific applications like playing

00:16:07.430 --> 00:16:12.290
video on an external display, but not deal
with the -- trying to run applications across

00:16:12.290 --> 00:16:17.350
multiple displays at the same time.
&gt;&gt;Mike Cleron: In general, we're trying to

00:16:17.350 --> 00:16:24.350
support the center of gravity for device profiles.
So we have broadened our support for application

00:16:24.519 --> 00:16:28.759
 -- for devices a lot over the last year.
We're continuing to look at what the new and

00:16:28.759 --> 00:16:34.319
emerging device profiles are that are coming.
For multiple screens, that's on our radar,

00:16:34.319 --> 00:16:36.269
but I wouldn't say it's quite the center of
gravity yet.

00:16:36.269 --> 00:16:40.740
So I think what we're going to aim for there
is some kind of, you know, minimal support

00:16:40.740 --> 00:16:47.740
that enables OEMs to -- to run with it, but
we may not provide that as core functionality

00:16:49.610 --> 00:16:50.939
of the platform.
&gt;&gt;&gt; Okay.

00:16:50.939 --> 00:16:53.360
Thanks.
&gt;&gt;Chris DiBona: What does the Android team

00:16:53.360 --> 00:16:56.709
have planned with regards to implementing
hardware and peripheral functionality like

00:16:56.709 --> 00:17:03.709
HID and USB host/on the go?
&gt;&gt;Brian Swetland: do you mean USB HID or 

00:17:08.770 --> 00:17:14.130
-- Oh, this was off the -- I guess they can't
tell me.

00:17:14.130 --> 00:17:16.130
Oh, well.
&gt;&gt;Chris DiBona: I'm not coming up with these

00:17:16.130 --> 00:17:18.880
questions, you know.
&gt;&gt;Brian Swetland: I'm easily confused.

00:17:18.880 --> 00:17:23.190
&gt;&gt;Chris DiBona: Bluetooth HID.
&gt;&gt;Brian Swetland: So Bluetooth HID we experimented

00:17:23.190 --> 00:17:26.560
with before.
I think we'll see it in an upcoming release.

00:17:26.560 --> 00:17:32.750
Certification for Bluetooth is fairly involved.
So getting it going so it'll start working

00:17:32.750 --> 00:17:36.010
and getting it actually certifiable is a bit
more work.

00:17:36.010 --> 00:17:43.010
But it'll be coming in the future, I believe.
USB OTG is also -- there's ongoing work around

00:17:44.270 --> 00:17:47.830
it.
I think both these things are likely to turn

00:17:47.830 --> 00:17:52.660
up in the Gingerbread time frame.
But, you know, it's the future.

00:17:52.660 --> 00:17:56.050
&gt;&gt;Chris DiBona: I think we're on this side
now, yeah.

00:17:56.050 --> 00:18:01.690
&gt;&gt;&gt; Thank you.
In my opinion, it seems like the maps API

00:18:01.690 --> 00:18:06.600
is ripe for some improvements.
There are a lot of things that developers

00:18:06.600 --> 00:18:11.190
all across the ecosystem are having to reimplement.
It seems like it would be nice to be able

00:18:11.190 --> 00:18:18.190
to register overlay tile servers with the
framework and have it manage the cache of

00:18:18.450 --> 00:18:24.340
the tiles since it has to manage a cache of
tiles for the base map, seems like scatters

00:18:24.340 --> 00:18:27.590
of points are logical things.
There's lots of new features showing up in

00:18:27.590 --> 00:18:31.620
the map application that seems like they would
be nice to expose to developers.

00:18:31.620 --> 00:18:34.680
So I was wondering if you could address the
plans for the maps API.

00:18:34.680 --> 00:18:39.870
&gt;&gt;Mike Cleron: Yes, you're right.
You're right on all points.

00:18:39.870 --> 00:18:46.350
That's an area that has been a little underserved.
And we now have someone there that that's

00:18:46.350 --> 00:18:51.500
his job is to bring that up to the level that
we want it to have.

00:18:51.500 --> 00:18:55.210
So we're -- that's something that we've just
put a lot more energy into.

00:18:55.210 --> 00:18:57.700
And you should be seeing results of that in
the next platform release.

00:18:57.700 --> 00:19:01.190
&gt;&gt;Chris DiBona: Okay.
Thanks.

00:19:01.190 --> 00:19:03.220
I think the push question was sort of answered
this morning.

00:19:03.220 --> 00:19:07.000
So you.
&gt;&gt;&gt; So I'm a strong believer of Android.

00:19:07.000 --> 00:19:12.430
However, I saw some competition from Chrome.
I'm wondering, is there any plan to improve

00:19:12.430 --> 00:19:19.050
the compatibility between two platforms, for
instance, running Android apps at Chrome or

00:19:19.050 --> 00:19:22.520
running a full Android -- Chrome browser at
Android platform.

00:19:22.520 --> 00:19:28.950
Thank you.
&gt;&gt;David Sparks: So I mean, it's really, really

00:19:28.950 --> 00:19:34.880
early in this, but we're definitely talking
with the Chrome team, particularly thinking

00:19:34.880 --> 00:19:39.520
about native client and how that might apply
to Android.

00:19:39.520 --> 00:19:45.290
But this is way -- this is not the next release.
This is probably sometime next year.

00:19:45.290 --> 00:19:49.240
But we're definitely thinking about that issue.
We want to make it easy for application developers

00:19:49.240 --> 00:19:55.320
to port to Chrome, Chrome OS, and Android,
and minimize the amount of work you need to

00:19:55.320 --> 00:19:57.400
do.
I don't think we can make it completely go

00:19:57.400 --> 00:20:01.500
away, because you have different platforms
you have to deal with.

00:20:01.500 --> 00:20:06.720
The idea of having an application that can
run seamlessly on a small device and a television

00:20:06.720 --> 00:20:10.250
or something like that.
You'll get some functionality.

00:20:10.250 --> 00:20:13.380
There's probably some work that you'll need
to do.

00:20:13.380 --> 00:20:16.090
But we do want to make it easy to port the
app.

00:20:16.090 --> 00:20:19.220
&gt;&gt;Chris DiBona: I think the market question
was kind of answered this morning.

00:20:19.220 --> 00:20:21.450
Do you guys want to say anything about market
improvements?

00:20:21.450 --> 00:20:26.610
You're good?
Let it rest.

00:20:26.610 --> 00:20:28.480
Also, will Froyo be available in the Nexus
One?

00:20:28.480 --> 00:20:32.790
&gt;&gt;&gt; Will it?
&gt;&gt;Chris DiBona: Yeah.

00:20:32.790 --> 00:20:35.530
So there's your answer.
Oh, when.

00:20:35.530 --> 00:20:37.670
Sorry, sorry.
[ Laughter ]

00:20:37.670 --> 00:20:41.830
&gt;&gt;Chris DiBona: Sorry.
It's the hot lights, you know.

00:20:41.830 --> 00:20:43.360
When?
&gt;&gt;Dan Bornstein: Soon.

00:20:43.360 --> 00:20:50.360
&gt;&gt;&gt; Soon.
&gt;&gt;David Sparks: We traditionally put out the

00:20:50.910 --> 00:20:56.540
SDK not too long before it goes to devices.
So that should give you a clue.

00:20:56.540 --> 00:21:00.570
We aren't in complete control of everything,
because we have to work with carriers and

00:21:00.570 --> 00:21:03.790
things like that.
&gt;&gt;Mike Cleron: Before it starts getting cold

00:21:03.790 --> 00:21:09.500
again.
&gt;&gt;Chris DiBona: We kind of already answered

00:21:09.500 --> 00:21:13.590
the copy protection question.
Currently, copy protection doubles your APK

00:21:13.590 --> 00:21:16.220
size and protected apps.
It routinely is hacked.

00:21:16.220 --> 00:21:19.910
We kind of answered that already.
Let's go to this side, stripey.

00:21:19.910 --> 00:21:26.150
It's a striped shirt.
I can't see much from here.

00:21:26.150 --> 00:21:30.390
&gt;&gt;&gt; Okay.
So I was wondering why the framework API,

00:21:30.390 --> 00:21:35.070
like, isn't separate from the entire platform
and if, like, at some point in the future

00:21:35.070 --> 00:21:39.640
we can see, like, updates of the API that
don't rely on, like, carriers updating their,

00:21:39.640 --> 00:21:46.020
like, code and, like, sending out updates,
sort of like how we have Java or dot net on

00:21:46.020 --> 00:21:50.330
a Windows platform that are pretty much independent
of the OS, like, to some degree at least.

00:21:50.330 --> 00:21:57.330
&gt;&gt;Mike Cleron: If I understood the question,
it was why is the framework bound to OS releases?

00:21:57.890 --> 00:21:59.890
&gt;&gt;&gt; The API, basically.
The API.

00:21:59.890 --> 00:22:06.240
So, like, if -- if at some point, like, the
API will, like -- we'll have new APIs that

00:22:06.240 --> 00:22:11.170
we can just install on, like, Android -- 
like, version 2.2, like we can install later

00:22:11.170 --> 00:22:14.210
versions even if, like, someone else is running
2.5.

00:22:14.210 --> 00:22:21.210
&gt;&gt;Mike Cleron: Well, we're making an active
effort to separate the applications from the

00:22:21.210 --> 00:22:24.340
framework.
So you'll be seeing application updates coming

00:22:24.340 --> 00:22:29.210
much more frequently than OS updates.
But from our perspective, the framework is

00:22:29.210 --> 00:22:33.940
the OS.
And we -- they're not separable for us at

00:22:33.940 --> 00:22:37.940
a technical level right now.
We can't really change the -- you know, the

00:22:37.940 --> 00:22:42.730
activity API without changing the activity
manager, which is part of the OS.

00:22:42.730 --> 00:22:46.070
So those two are going to remain bundled together,
probably forever.

00:22:46.070 --> 00:22:49.590
&gt;&gt;Chris DiBona: Other stripey.
&gt;&gt;&gt; Hi.

00:22:49.590 --> 00:22:55.160
Yeah, I guess this goes back to the question
about device profiles and your discussion

00:22:55.160 --> 00:22:58.720
on that.
I'm from Intrinsic and we imported Android

00:22:58.720 --> 00:23:03.150
to a number of non-phone devices.
So struggled with some of the architectural

00:23:03.150 --> 00:23:08.380
problems like you mentioned about multiscreens,
and, specifically, devices that might not

00:23:08.380 --> 00:23:12.820
have a modem or have a modem that's not always
powered on and you might want to power it

00:23:12.820 --> 00:23:19.390
off while the device is in standby.
And there's a number of other issues like

00:23:19.390 --> 00:23:23.470
that, like different screen technologies that
might not be LCD-based screens.

00:23:23.470 --> 00:23:28.990
So are there any approaches towards devices
that aren't sort of phone-based, especially

00:23:28.990 --> 00:23:34.640
given the Google TV thing this morning?
&gt;&gt;Brian Swetland: To take part of the question,

00:23:34.640 --> 00:23:39.300
powering the modem off while on standby is
doable today.

00:23:39.300 --> 00:23:44.420
It's a policy decision you can make, if --
&gt;&gt;&gt; Perhaps based on whether the application

00:23:44.420 --> 00:23:47.520
needs data or not.
When the phone is actually on or when the

00:23:47.520 --> 00:23:49.970
device is on.
I shouldn't say phone, because it's a nonphone

00:23:49.970 --> 00:23:52.420
device.
When the device is on and you don't want to

00:23:52.420 --> 00:23:55.760
have the modem powered up, but only when you
need it for data.

00:23:55.760 --> 00:23:57.820
&gt;&gt;Brian Swetland: Okay. I don't think I understand
the question, then.

00:23:57.820 --> 00:24:01.850
&gt;&gt;Chris DiBona: I think he wants more flexibility
around program ability and subparts.

00:24:01.850 --> 00:24:06.920
&gt;&gt;&gt;Profile of the device, assuming that there's
a modem there.

00:24:06.920 --> 00:24:13.010
&gt;&gt;Chris DiBona: It's kind of an unanswerable
question, you know, because a lot of their

00:24:13.010 --> 00:24:17.690
work is going to concentrate on sort of the
very mobile experiences.

00:24:17.690 --> 00:24:19.960
So that's sort of the result of the profiles.
So that's sort of the result of the profiles.

00:24:19.960 --> 00:24:26.220
You've seen other companies, Barnes &amp; Noble,
Archos, and others, address other niches,

00:24:26.220 --> 00:24:29.820
and in some cases quite well.
If you look at the NOOK, it does multiple

00:24:29.820 --> 00:24:32.590
screens and very odd power profiles.
But it's a custom device.

00:24:32.590 --> 00:24:35.010
&gt;&gt;&gt; That was actually our work in doing the
platform.

00:24:35.010 --> 00:24:35.750
&gt;&gt;Chris DiBona: That was your work?
Great.

00:24:35.750 --> 00:24:41.620
&gt;&gt;&gt; Well, in doing some of the platform porting.
So of the -- the way that the modem is controlled.

00:24:41.620 --> 00:24:45.280
But there's actually a lot of architectural
change you have to make in order to do that.

00:24:45.280 --> 00:24:51.160
So I was just wondering if you're actually
targeting devices that aren't phone or phone-oriented?

00:24:51.160 --> 00:24:58.160
&gt;&gt;Mike Cleron: I'll take a stab at this.
We have two conflicting goals, which are both

00:25:01.170 --> 00:25:06.570
positive things but they don't always align.
We want to maximize the reach of Android for

00:25:06.570 --> 00:25:11.740
the greatest number of devices possible, and
we don't want all the developers in the room

00:25:11.740 --> 00:25:16.630
to have their heads explode trying to support
every possible configuration.

00:25:16.630 --> 00:25:23.380
So if somebody manages to get Android running
on their tennis shoe, you know, good for them.

00:25:23.380 --> 00:25:27.640
But we're probably not going to support, you
know, tennis shoe-specific APIs in the framework,

00:25:27.640 --> 00:25:34.640
because we'll have app compatibility problems.
So CTS is kind of the tool that we use to

00:25:35.120 --> 00:25:38.190
define that.
That's where we're saying that this is what

00:25:38.190 --> 00:25:42.770
is the essence of Android.
In order to be Android device, you need to

00:25:42.770 --> 00:25:47.320
support all the APIs in CTS.
I'm maybe speaking a little bit out of turn,

00:25:47.320 --> 00:25:51.770
but we're always trying to improve that and
tighten the focus of that so we capture the

00:25:51.770 --> 00:25:54.780
things that matter versus the things that
don't matter.

00:25:54.780 --> 00:25:59.780
So there's -- Android is running on a surprising
number of devices, or at least surprising

00:25:59.780 --> 00:26:01.790
to me.
Every day on Gizmodo, I see it running on

00:26:01.790 --> 00:26:05.620
something else I didn't expect.
&gt;&gt;Chris DiBona: Microwave.

00:26:05.620 --> 00:26:11.650
&gt;&gt;Mike Cleron: Microwave, yes.
So I think over time, we'll try to improve

00:26:11.650 --> 00:26:18.610
the ability of innovation to happen in the
field by not requiring things that don't matter

00:26:18.610 --> 00:26:21.750
to the core of the platform, but we're always
going to be tempering that by making sure

00:26:21.750 --> 00:26:27.120
that developers have a clear path to knowing
when they're done and knowing what the range

00:26:27.120 --> 00:26:30.600
of devices they have to support is.
We're always trying to navigate that.

00:26:30.600 --> 00:26:34.380
We can look to the developer community to
help us with that, you know, if we get a message

00:26:34.380 --> 00:26:38.080
from you that there's an emerging class of
devices, there's an emerging problem that

00:26:38.080 --> 00:26:42.950
we're not serving well, then that's feedback
we can take and we can try and extend the

00:26:42.950 --> 00:26:48.230
platform to match that or extend CTS to match
the problems that you're trying to solve.

00:26:48.230 --> 00:26:53.040
&gt;&gt;Dan Morrill: Yeah, and just to kind of follow
up on that, there's actually -- this is the

00:26:53.040 --> 00:26:57.610
compatibility-related content that I referred
to earlier that's on source.android.com.

00:26:57.610 --> 00:27:00.600
So there's actually two things that you can
take a look at if you want to see this spelled

00:27:00.600 --> 00:27:06.200
out in detail.
There's a new page on the SDK developer.android.com

00:27:06.200 --> 00:27:11.160
site if you're an app developer that may be
of interest which summarizes -- it's called

00:27:11.160 --> 00:27:14.830
compatibility considerations for developers.
But it summarizes what you have to do to make

00:27:14.830 --> 00:27:19.180
sure that your app will run as widely as possible.
And also kind of explains from a developer

00:27:19.180 --> 00:27:20.880
point of view what the compatibility strategy
is.

00:27:20.880 --> 00:27:25.490
And then, of course, there's this compatibility
section on the new site that talks in toilet

00:27:25.490 --> 00:27:30.490
gory detail about all this stuff.
But, in general, basically, we just have two

00:27:30.490 --> 00:27:34.980
key mechanisms that we use.
We use this compatibility definition document,

00:27:34.980 --> 00:27:41.470
you know, which basically says what devices
can do and not do to be considered compatible,

00:27:41.470 --> 00:27:47.150
and then there's a CTS which, you know, verifies
that -- and helps them make sure that their

00:27:47.150 --> 00:27:52.720
devices are behaving correctly.
And these two things together are the foundation

00:27:52.720 --> 00:27:56.620
for what we call an Android compatible device.
So Android is open source, and people are

00:27:56.620 --> 00:28:02.160
welcome to use it for whatever they want.
We love when we see that. But from our point

00:28:02.160 --> 00:28:05.590
of view, that kind of thing exists outside
the application ecosystem.

00:28:05.590 --> 00:28:11.460
&gt;&gt;Chris DiBona: There's a question on the
thing about when were we going to see proxies,

00:28:11.460 --> 00:28:16.960
HTTP proxying. And battery optimization.
So proxies.

00:28:16.960 --> 00:28:23.350
&gt;&gt;&gt; Support for?
&gt;&gt;Chris DiBona: Support for.

00:28:23.350 --> 00:28:27.710
He uses exclamation points.
&gt;&gt;&gt; They are question marks, Chris.

00:28:27.710 --> 00:28:32.690
&gt;&gt;Chris DiBona: Oh, question marks. They are
like curlier exclamation points.

00:28:32.690 --> 00:28:39.690
&gt;&gt;San Mehat: I don't have an update from the
connectivity team on that, but we can certainly

00:28:43.110 --> 00:28:47.640
dig into it.
&gt;&gt;Chris DiBona: Okay.

00:28:47.640 --> 00:28:52.130
There was a battery optimizing but it dropped
down. Do you want to talk about power optimization,

00:28:52.130 --> 00:28:58.630
anyone? It's not good enough, I guess.
It's hard sometimes to synthesize a real question

00:28:58.630 --> 00:29:01.400
from a half question, so why don't we just
go to you.

00:29:01.400 --> 00:29:08.400
&gt;&gt;&gt; Hi. I work for a company who is an OHA
member. As a developer, do you have any benefit

00:29:10.740 --> 00:29:16.420
being an OHA member? What additional information
I get compared to a normal developer?

00:29:16.420 --> 00:29:21.200
&gt;&gt;San Mehat: You didn't get the card?
&gt;&gt;Chris DiBona: Can you speak up a bit?

00:29:21.200 --> 00:29:27.950
&gt;&gt;&gt; I said I work for a company who is a OHA
member. As a developer, what additional benefit

00:29:27.950 --> 00:29:34.270
I get in the Android forum?
&gt;&gt;Chris DiBona: Why use Android over something

00:29:34.270 --> 00:29:37.950
else? Is that what you are asking?
&gt;&gt;&gt; Open hand set alliance.

00:29:37.950 --> 00:29:41.780
&gt;&gt;Chris DiBona: Oh, what's the point of being
an OHA member. Is that right?

00:29:41.780 --> 00:29:44.780
&gt;&gt;&gt; Yes.
&gt;&gt;Chris DiBona: Sorry. It's the bounce sound

00:29:44.780 --> 00:29:47.760
thing.
What's that?

00:29:47.760 --> 00:29:54.760
Yeah, we're not really OHA folks. So it's
hard for us to answer that. I'm sorry.

00:29:56.029 --> 00:30:01.080
&gt;&gt;&gt; Okay. I have one more question.
&gt;&gt;Dave Sparks: You probably want to contact

00:30:01.080 --> 00:30:04.600
either Eric Chu or Angana Ghosh. They are
here somewhere.

00:30:04.600 --> 00:30:06.680
&gt;&gt;Chris DiBona: Eric, are you here? Raise
your hand.

00:30:06.680 --> 00:30:11.860
I guess he is not in the room.
&gt;&gt;Dave Sparks: Bailed on us.

00:30:11.860 --> 00:30:14.820
But they can give you a breakdown on what
OHA is about.

00:30:14.820 --> 00:30:21.820
I think it's really, it's a commitment to
Android and the idea of CTS and Market and

00:30:23.390 --> 00:30:28.440
really growing the Android ecosystem. That's
what it's all about. It's a commitment from

00:30:28.440 --> 00:30:35.440
those companies to push Android.
&gt;&gt;&gt; Okay. I have one more question. Cupcake,

00:30:36.600 --> 00:30:42.930
Donut and Eclair and now Froyo. Android has
moved a bit. However, it's still stuck with

00:30:42.930 --> 00:30:49.570
2.6.29. And I see there are a lot of developers
who are migrating to 2.6.3 on their own and

00:30:49.570 --> 00:30:55.100
there are a lot of duplicative efforts being
spent. Is there any reason why Google has

00:30:55.100 --> 00:31:01.590
not moved to 2.6.31?
&gt;&gt;&gt; I did not catch --

00:31:01.590 --> 00:31:08.590
&gt;&gt;San Mehat: Oh, the kernel? Oh, you are wondering
why we haven't snapped our kernel forward

00:31:11.590 --> 00:31:13.980
to 2.6.31?
&gt;&gt;&gt; That's right.

00:31:13.980 --> 00:31:18.860
&gt;&gt;Chris DiBona: Bryan?
&gt;&gt;Brian Swetland: Why what about 31?

00:31:18.860 --> 00:31:25.860
&gt;&gt;San Mehat: They want to know --
&gt;&gt;Brian Swetland: We try to aggressively track

00:31:25.900 --> 00:31:32.080
and snap up to the main line as it rolls forward,
but this has to happen relative to release

00:31:32.080 --> 00:31:37.680
cycles.
The software -- We don't finish Froyo and

00:31:37.680 --> 00:31:41.120
then OTA it the next day, it pencils down
the next day.

00:31:41.120 --> 00:31:48.120
There's a stabilization period on a release
that could be a month or two. We will tend

00:31:48.260 --> 00:31:54.770
 -- We will probably never ship a production
device against a kernel that's not final.

00:31:54.770 --> 00:32:01.770
We won't ship against RC3 or something.
So we will tend to ship against the latest

00:32:02.410 --> 00:32:06.630
main line kernel that hit --
&gt;&gt;Chris DiBona: Four months ago, five months

00:32:06.630 --> 00:32:08.720
ago.
&gt;&gt;Brian Swetland: Well, that was released

00:32:08.720 --> 00:32:13.090
before we hit the last, say, month or two
of stabilization for the release cycle.

00:32:13.090 --> 00:32:20.090
So the Froyo software image for Nexus One
is based on 2.6.32. We are actively developing

00:32:24.910 --> 00:32:31.910
against 2.6.34 RC. We will be snapping up
to 34 momentarily. Gingerbread this fall will

00:32:32.820 --> 00:32:38.340
probably be at least against 35, maybe 36,
depending on where the schedule falls.

00:32:38.340 --> 00:32:45.340
But we try to track it aggressively, but we
do stabilize the kernel before we ship. And

00:32:45.460 --> 00:32:51.310
oftentimes, well, the rapid progress of the
main line brings in great bug fixes that we

00:32:51.310 --> 00:32:57.060
want to pick up and new features, various
subsystems can destabilize as well or code

00:32:57.060 --> 00:33:01.060
needs to shift around to compensate for it.
So just timing.

00:33:01.060 --> 00:33:04.070
&gt;&gt;&gt; Timing.
&gt;&gt;Dan Bornstein: And actually you see this

00:33:04.070 --> 00:33:11.070
throughout Android. At the higher levels,
for things like ICU, and open SSL, and there's

00:33:14.240 --> 00:33:18.580
all sorts of libraries at every layer.
And we won't get, if it was released yesterday,

00:33:18.580 --> 00:33:24.770
it's not going to make it into Froyo today.
There's definitely a time period of making

00:33:24.770 --> 00:33:29.300
sure that the new version is stable enough
and it's going to work, and it's really, you

00:33:29.300 --> 00:33:34.860
know, -- it is a matter of months between
a stable release of an external library until

00:33:34.860 --> 00:33:40.740
it, like, lands in Android.
&gt;&gt;Brian Swetland: The one thing I would say,

00:33:40.740 --> 00:33:46.350
and I have said this to a number of OEMs and
silicon vendors who ask me about this, nothing

00:33:46.350 --> 00:33:52.170
stops you from using a later spin of the kernel
if you like for your release. But I suspect

00:33:52.170 --> 00:33:59.000
that most entities that do software release
for consumer products go through a similar

00:33:59.000 --> 00:34:03.660
stabilization period.
Actually, a lot of consumer gear I see shipping

00:34:03.660 --> 00:34:10.660
Linux I think still uses, like, 2.4, early
2.6. I think we are fairly aggressive at tracking

00:34:11.090 --> 00:34:17.600
main line compared to a lot of efforts.
&gt;&gt;&gt; It's John Cory at US Naviguide.

00:34:17.600 --> 00:34:22.820
There are a lot of Web sites like Circuit
and AndroLib that use the market APIs kind

00:34:22.820 --> 00:34:28.540
of under the hood. What are you are thoughts
on opening up both the web-based market API

00:34:28.540 --> 00:34:35.520
and the device API for the market to users
 -- to developers?

00:34:35.520 --> 00:34:42.520
&gt;&gt;Michael Morrissey: As you saw this morning
in this morning's keynote, we are building

00:34:44.159 --> 00:34:47.990
our own Web site, and that's something that's
very important to us. And along with that,

00:34:47.990 --> 00:34:52.540
we do want to expose more data to sites in
the form of feeds.

00:34:52.540 --> 00:34:58.000
That's something that we're looking at, and
we'll definitely let people know as soon as

00:34:58.000 --> 00:35:01.120
we have that.
&gt;&gt;&gt; What about on the device itself?

00:35:01.120 --> 00:35:07.260
There's one developer came up with this really
kind of great idea for checking to see if

00:35:07.260 --> 00:35:11.880
an app had actually been downloaded from the
Market. It's like a license check. It's very

00:35:11.880 --> 00:35:18.240
simple. All you do is ask the Market, are
you my source? And if the answer is yes, then

00:35:18.240 --> 00:35:23.150
it's a valid app. If the answer is no, then
it's a pirated app.

00:35:23.150 --> 00:35:29.190
He is using some under-the-hood stuff that's
not exposed publicly.

00:35:29.190 --> 00:35:34.550
It sounds like a really good, simple way to
solve the piracy problem, or at least part

00:35:34.550 --> 00:35:37.950
of it.
And I wouldn't use it because it's not public,

00:35:37.950 --> 00:35:42.650
but if it was made public, I think that could
be a really easy way to solve part of the

00:35:42.650 --> 00:35:47.520
piracy problem.
&gt;&gt;Michael Morrissey: Right. So as I said earlier,

00:35:47.520 --> 00:35:52.040
there's some things that we're working on
internally right now to combat the piracy

00:35:52.040 --> 00:35:55.940
issue, and we'll definitely announce that
as soon as we have something that developers

00:35:55.940 --> 00:35:57.260
can use.
&gt;&gt;&gt; Thank you.

00:35:57.260 --> 00:36:02.850
&gt;&gt;Chris DiBona: There's a question. It feels
like it's really for Eric Chu's panel earlier

00:36:02.850 --> 00:36:09.850
about adoption curves for 2.2. Should we just
leave that for -- Yeah, sorry.

00:36:10.590 --> 00:36:17.240
Why don't we go with a question -- did I go
that side last time? Here, yeah.

00:36:17.240 --> 00:36:22.980
&gt;&gt;&gt; I wanted to know if you have thought of
using the GPU to enhance the user experience.

00:36:22.980 --> 00:36:26.680
For example, for the Android system and for
the browser.

00:36:26.680 --> 00:36:33.640
&gt;&gt;Mike Cleron: Yes, and that's his job right
there (indicating.)

00:36:33.640 --> 00:36:38.330
&gt;&gt;Chris DiBona: It's all his fault.
&gt;&gt;Mike Cleron: We want to dramatically up

00:36:38.330 --> 00:36:44.400
our game in terms of the animation speed,
performance frame rate of our drawing system.

00:36:44.400 --> 00:36:50.470
We have got our best guys on it, so that's
something we're working on right now.

00:36:50.470 --> 00:36:53.730
&gt;&gt;&gt; It's going to happen after Froyo?
&gt;&gt;Chris DiBona: It's going to be happening

00:36:53.730 --> 00:36:57.140
for the (inaudible) product. That's not the
kind of thing that's going to happen with

00:36:57.140 --> 00:37:00.430
any one release.
&gt;&gt;Mike Cleron: He said he wants a vacation,

00:37:00.430 --> 00:37:06.140
so I don't know.
&gt;&gt;&gt; I am fine with that. Thanks.

00:37:06.140 --> 00:37:10.180
&gt;&gt;Dan Bornstein: Sir.
&gt;&gt;&gt; On the marketplace, you have basically

00:37:10.180 --> 00:37:17.180
got a one-direction channel of communication
from the users in the form of comments, and

00:37:17.230 --> 00:37:23.630
no real good way to communicate back to them
or, you know, really reply to them. Somebody

00:37:23.630 --> 00:37:30.630
says, oh, it's not working. How do you get
the connection to them to say, well, let me

00:37:30.650 --> 00:37:36.290
help fix that?
&gt;&gt;&gt; (speaking off mic).

00:37:36.290 --> 00:37:42.400
&gt;&gt;Michael Morrissey: So I think one of the
best approaches that you can take is to fill

00:37:42.400 --> 00:37:47.180
out your developer information, the contact
information that it does appear in Market.

00:37:47.180 --> 00:37:52.840
So with every listing in Market, you can add
Web sites for support and things like that,

00:37:52.840 --> 00:37:59.670
and I think that's the way that most developers
find is the most effective to talking back

00:37:59.670 --> 00:38:04.190
to their users.
&gt;&gt;&gt; Well, I have done that. Admittedly, I

00:38:04.190 --> 00:38:10.240
don't have all that many downloads. But I
have gotten, I think, one comment through

00:38:10.240 --> 00:38:16.290
that mechanism, and a number of comments in
the marketplace.

00:38:16.290 --> 00:38:20.860
So I don't think the users are clicking through
on those very much.

00:38:20.860 --> 00:38:24.380
&gt;&gt;Chris DiBona: Darn users.
[ Laughter ]

00:38:24.380 --> 00:38:29.460
&gt;&gt;Chris DiBona: Yeah.
&gt;&gt;&gt; Are there plans to compete with the iPad?

00:38:29.460 --> 00:38:32.230
&gt;&gt;Chris DiBona: You mean take flash off of
2.2?

00:38:32.230 --> 00:38:36.380
[ Applause ]
&gt;&gt;Chris DiBona: Oh, a....

00:38:36.380 --> 00:38:43.380
Or do you mean to slow it down?
[ Laughter ]

00:38:43.870 --> 00:38:48.070
&gt;&gt;Chris DiBona: I don't think that -- you
know, whatever.

00:38:48.070 --> 00:38:51.560
[ Laughter ]
&gt;&gt;Chris DiBona: Does anyone actually want

00:38:51.560 --> 00:38:55.670
to touch this? No.
&gt;&gt;Mike Cleron: I would, but I haven't heard

00:38:55.670 --> 00:39:00.400
of that product, so sorry.
&gt;&gt;Chris DiBona: Sorry. We're not going to

00:39:00.400 --> 00:39:04.840
go down that -- We are Android people. Ask
Apple what they are going to do with the iPad

00:39:04.840 --> 00:39:06.349
and compete with us.
[ Laughter ]

00:39:06.349 --> 00:39:12.470
&gt;&gt;&gt; Okay. First of all, I would like to encourage
Android add tennis shoes issues because that

00:39:12.470 --> 00:39:17.890
would give us the actual real realization
of the shoe phone.

00:39:17.890 --> 00:39:24.890
Second of all, I have a question about hardware
access on the devices. Maybe I am just not

00:39:26.060 --> 00:39:33.060
looking in the right place, how to have some
R &amp; D projects, some friends and colleagues

00:39:33.840 --> 00:39:39.820
that I work with who were interested in hooking
up various sensors to our devices. There are

00:39:39.820 --> 00:39:44.940
admittedly very hackie ways and very convoluted
back-flippy kind of ways to do this.

00:39:44.940 --> 00:39:51.940
Are there plans to make this easier? So we've
got generic I/O API calls even at the lower

00:39:54.670 --> 00:39:57.790
level.
&gt;&gt;Chris DiBona: I would point out the Bluetooth

00:39:57.790 --> 00:40:01.350
RM interfaces is the standardized API now;
right, Dan?

00:40:01.350 --> 00:40:04.490
&gt;&gt;Dan Morrill: Yeah.
&gt;&gt;Chris DiBona: That's a limb hackie. You

00:40:04.490 --> 00:40:08.170
can just do serial over Bluetooth. But there
are a lot of people who mess around.

00:40:08.170 --> 00:40:14.570
&gt;&gt;Brian Swetland: Are you talking about access
to on-device peripherals or access to outbound

00:40:14.570 --> 00:40:17.770
peripherals?
&gt;&gt;&gt; Access on device peripherals. Like we

00:40:17.770 --> 00:40:24.770
would like to hook up sensors to something
that speaks TTL serial to a USB to foo bridge

00:40:27.850 --> 00:40:32.790
and then USB on the device to --
&gt;&gt;Brian Swetland: So we --

00:40:32.790 --> 00:40:36.080
&gt;&gt;&gt; Understand where I am heading; right?
&gt;&gt;Brian Swetland: We definitely have been

00:40:36.080 --> 00:40:42.380
thinking about this. We don't have a concrete
timeline or plan, but some of the ideas that

00:40:42.380 --> 00:40:48.480
we have kicked around and may explore in upcoming
releases involve we could expose sort of a

00:40:48.480 --> 00:40:55.480
USB gadget API up even to the Java layer for
most, like, bulk USP. You don't need to be

00:40:55.920 --> 00:41:01.650
that fast in order to do useful things with
it.

00:41:01.650 --> 00:41:06.770
With the NDK, you are capable of just doing
the POSIX I/O, so you could bolt a little

00:41:06.770 --> 00:41:13.190
library on to open and do I/O control calls
to things. We've occasionally kicked around

00:41:13.190 --> 00:41:19.700
the idea of just having a sort of generic
device object, open/close I/O control at the

00:41:19.700 --> 00:41:26.700
Java level, with the idea that platform integrators
could create -- could bolt these on and you

00:41:27.390 --> 00:41:32.280
could ask for them by name, and it would be
kind of a generic way to get at arbitrary

00:41:32.280 --> 00:41:37.880
generic add-on devices.
These are all directions that we've thought

00:41:37.880 --> 00:41:40.960
about. As I said, though, there's not a current
plan.

00:41:40.960 --> 00:41:43.690
&gt;&gt;Chris DiBona: Like a B-box style breakout
board?

00:41:43.690 --> 00:41:47.820
&gt;&gt;Brian Swetland: We are not planning on a
37-pin header at this point.

00:41:47.820 --> 00:41:51.920
&gt;&gt;&gt; But definitely, that's the direction I
would like to see it go.

00:41:51.920 --> 00:41:54.890
&gt;&gt;Chris DiBona: He wants it.
&gt;&gt;Brian Swetland: I think it's a totally reasonable

00:41:54.890 --> 00:42:00.540
request and it is something we are thinking
about for upcoming releases. But further suggestions

00:42:00.540 --> 00:42:02.250
are always welcome.
&gt;&gt;&gt; Okay. Thank you.

00:42:02.250 --> 00:42:07.510
&gt;&gt;Chris DiBona: Any way to have access to
staging server to push applications to before

00:42:07.510 --> 00:42:12.360
they are submitted to the Android Market?
The goal is to test the update before it is

00:42:12.360 --> 00:42:18.090
available to a large audience.
So like a private -- my own market channel.

00:42:18.090 --> 00:42:21.800
&gt;&gt;Michael Morrissey: Yeah, this is --
&gt;&gt;Chris DiBona: A lot of implications for

00:42:21.800 --> 00:42:26.600
the enterprise.
&gt;&gt;Michael Morrissey: Yes, this is an often-requested

00:42:26.600 --> 00:42:30.390
feature and one that we are definitely prioritizing.
&gt;&gt;Chris DiBona: Cool.

00:42:30.390 --> 00:42:36.200
Which side did I use last time? You.
&gt;&gt;&gt; There's a tremendous amount of fragmentation

00:42:36.200 --> 00:42:40.140
in OS version that different device manufacturers
and carriers are using.

00:42:40.140 --> 00:42:43.080
&gt;&gt;Dan Morrill: I would thank you not to use
the "F" word in my presence; okay?

00:42:43.080 --> 00:42:50.080
No, no. I don't spend a whole a lot of time
thinking about fragmentation because the problem

00:42:51.330 --> 00:42:54.250
is this word means something different to
everybody.

00:42:54.250 --> 00:43:01.250
I will see blogs say Android is fragmented
because 1.5 and 1.6 are out at the same time.

00:43:02.590 --> 00:43:07.150
If you consider something like desktop Windows,
nobody ever -- there are certainly legitimate

00:43:07.150 --> 00:43:11.400
complaints about having, say, Windows 95 and
Windows XP available at the same time, but

00:43:11.400 --> 00:43:15.380
nobody ever called that fragmentation.
So I don't treat this word as something that

00:43:15.380 --> 00:43:19.320
I spend a lot of time thinking about.
What I think about is really kind of two sorts

00:43:19.320 --> 00:43:25.970
of things. One is whether or not applications
that are written to the Android APIs will

00:43:25.970 --> 00:43:31.160
run across devices, and then the other is,
you know, whether they --

00:43:31.160 --> 00:43:35.760
&gt;&gt;Chris DiBona: Everyone's 6 machine.
&gt;&gt;Dan Morrill: It's basically cross-device

00:43:35.760 --> 00:43:41.950
capability and forward capability.
If you write an application for Android 1.5,

00:43:41.950 --> 00:43:48.030
it's going to run on 1.6, 2.1, 2.2, and so
on. So the way I like to explain this is,

00:43:48.030 --> 00:43:54.600
I imagine a highway, and you're a developer
driving a car down this highway.

00:43:54.600 --> 00:43:59.800
Some platforms will say, okay. Here's a perfectly
manicured highway, perfectly paved. There

00:43:59.800 --> 00:44:04.130
are no potholes.
But it's two lanes wide, and there's traffic

00:44:04.130 --> 00:44:07.860
cops every 75 feet, you know, to make sure
that you don't go faster than they want you

00:44:07.860 --> 00:44:10.590
to go.
I like to think of Android as more of something

00:44:10.590 --> 00:44:15.660
like a five-lane highway where the middle
three or four lanes are totally clear and

00:44:15.660 --> 00:44:18.760
you can kind of do your thing.
But if you want to go really fast and be on

00:44:18.760 --> 00:44:23.160
the bleeding edge, you can be on the left-hand
lane. And if you want to be conservative,

00:44:23.160 --> 00:44:28.110
you can be on the right-hand lane or the shoulder,
but the highway is not going to be as well

00:44:28.110 --> 00:44:32.840
maintained there, so there's a risk.
But what we do is make sure those middle three

00:44:32.840 --> 00:44:38.420
lanes are well paved and developers who are
just writing apps that are using the public

00:44:38.420 --> 00:44:43.100
APIs, these will work in future versions.
So that's really kind of the commitment we

00:44:43.100 --> 00:44:47.110
make, and that's what we think of when we
think of device compatibility and so on.

00:44:47.110 --> 00:44:50.770
So I don't use this fragmentation word very
much, because it's diluted, but --

00:44:50.770 --> 00:44:52.850
&gt;&gt;Chris DiBona: But it's fun to use against
all platforms, though.

00:44:52.850 --> 00:44:57.300
You can talk about crapping iPad apps into
iPhones going back to the first-generation

00:44:57.300 --> 00:45:01.210
iPhones and they're not going to run.
You can do this up and down Windows mobile

00:45:01.210 --> 00:45:06.130
whatever version they're on now, the Kin.
So you get into this spot where fragmentation

00:45:06.130 --> 00:45:11.340
happens, and as developers, we have to deal.
But our job is to make that dealing not so

00:45:11.340 --> 00:45:15.980
horrible, you know.
&gt;&gt;Mike Cleron: Just to add to what Dan said,

00:45:15.980 --> 00:45:19.900
two things.
Where we are not meeting that objective, where

00:45:19.900 --> 00:45:23.470
something doesn't run on all 1.6 devices,
we definitely want to hear about that.

00:45:23.470 --> 00:45:27.760
Where you wrote something against 1.6, you
did it all right and didn't cheat and use

00:45:27.760 --> 00:45:31.560
APIs that you weren't supposed to use.
And it was written cleanly against the SDK

00:45:31.560 --> 00:45:37.230
and broke in 2.0, that's on us to fix and
we want to hear about it.

00:45:37.230 --> 00:45:44.230
But the other connotation of fragmentation,
1.5 to 1.6 to 2.0 to 2.1 to 2.2, I prefer

00:45:44.400 --> 00:45:47.470
the term "progress" over "fragmentation" for
that phenomenon.

00:45:47.470 --> 00:45:54.470
&gt;&gt;&gt; A couple of questions.
Is there an SDK for Google TV that -- is there

00:46:01.960 --> 00:46:05.560
a box or is there an emulator?
How do you develop for it?

00:46:05.560 --> 00:46:10.960
&gt;&gt;Chris DiBona: You're not going to see much
about that until it looks like late this year

00:46:10.960 --> 00:46:14.780
or early next year, including open source
release of the full platform.

00:46:14.780 --> 00:46:17.900
So patience is the only thing we can count
on.

00:46:17.900 --> 00:46:24.900
&gt;&gt;&gt; And a short real question for Dave.
So currently, the only way of playing back

00:46:24.920 --> 00:46:31.920
streaming video from what I've seen you talk
about online is RTSP/RTP.

00:46:32.040 --> 00:46:36.230
When is that going to change?
Is there any different in Froyo?

00:46:36.230 --> 00:46:40.220
&gt;&gt;David Sparks: No, there isn't anything changed
in Froyo.

00:46:40.220 --> 00:46:47.220
In fact, Froyo for RTSP stack is the same
as the previous one, Eclair.

00:46:49.920 --> 00:46:55.590
But in the next release, we're planning to
support some things, like we're looking at

00:46:55.590 --> 00:47:01.050
live streaming, we're looking at exposing
the stacks so you can do your own network

00:47:01.050 --> 00:47:07.300
streaming protocol on top of the codecs.
So, essentially, expose the top of the codecs,

00:47:07.300 --> 00:47:11.520
send elementary streams to the codecs, and
have the framework take care of AV sync and

00:47:11.520 --> 00:47:14.580
all the rest of it.
So this is definitely something we want to

00:47:14.580 --> 00:47:16.550
support.
&gt;&gt;&gt; Okay.

00:47:16.550 --> 00:47:20.410
Thank you.
&gt;&gt;&gt; The 2.2 SDK came out today.

00:47:20.410 --> 00:47:21.630
Thank you.
That's great.

00:47:21.630 --> 00:47:26.970
But I guess in addition to that, some fixes
were made to methods that didn't change but

00:47:26.970 --> 00:47:30.530
the documentation was just crummy, such as
service intents.

00:47:30.530 --> 00:47:34.340
In the future, could you not do that, like,
just push the fixes out to the documentation

00:47:34.340 --> 00:47:39.859
as fast as possible?
&gt;&gt;Chris DiBona: Docs are out of date compared

00:47:39.859 --> 00:47:43.660
to the SDK.
And he wants you to stop doing that.

00:47:43.660 --> 00:47:50.660
[ Laughter ]
&gt;&gt;Xavier Ducrohet: Can you repeat the question?

00:47:52.369 --> 00:47:54.300
Sorry.
&gt;&gt;Chris DiBona: Your Docs are out of date

00:47:54.300 --> 00:47:57.690
to the SDK.
&gt;&gt;Xavier Ducrohet: So we're --

00:47:57.690 --> 00:47:58.970
&gt;&gt;Chris DiBona: We're playing telephone.
Go ahead.

00:47:58.970 --> 00:48:03.170
&gt;&gt;&gt; There were fixes made to the SDK, but,
like, those fixes were bundled with the version

00:48:03.170 --> 00:48:09.220
released for 2.2.
And it seems like that fix could have come

00:48:09.220 --> 00:48:12.030
as soon as it was made and not on a big release
date like Google I/O.

00:48:12.030 --> 00:48:14.460
&gt;&gt;Xavier Ducrohet: Do you have an example
of that fix?

00:48:14.460 --> 00:48:18.170
&gt;&gt;&gt; Service intents.
And in an earlier session today, they gave

00:48:18.170 --> 00:48:22.710
an example where it was just one paragraph
and nobody knew how to use it, and --

00:48:22.710 --> 00:48:24.690
&gt;&gt;Xavier Ducrohet: Oh, for the documentation.
&gt;&gt;&gt; Intent service.

00:48:24.690 --> 00:48:28.010
Excuse me.
&gt;&gt;Xavier Ducrohet: We can definitely update

00:48:28.010 --> 00:48:32.450
the online version more often.
We can also update the offline version more

00:48:32.450 --> 00:48:36.180
often now.
I think that there's a lot of things on the

00:48:36.180 --> 00:48:39.930
developer side that is not documented properly,
and I think we are just catching up with that

00:48:39.930 --> 00:48:43.869
at this point.
So whenever we have, like, new API documentation,

00:48:43.869 --> 00:48:46.500
it's mostly also catching up with the new
ones for the next version.

00:48:46.500 --> 00:48:52.170
So if that ever slows down a little bit, maybe
we'll be able to go back and improve that.

00:48:52.170 --> 00:48:54.940
It's mostly bandwidth issue at this point.
&gt;&gt;&gt; Thank you.

00:48:54.940 --> 00:48:59.130
&gt;&gt;Chris DiBona: I'm going to combine the next
two questions from the computer.

00:48:59.130 --> 00:49:03.190
Will the G1 ever been updated to 21st or higher,
and talk about testing on -- to 2.1 or higher?

00:49:03.190 --> 00:49:04.210
And talk about testing, what are your pain
points?

00:49:04.210 --> 00:49:11.210
&gt;&gt;Dan Bornstein: You need big pockets.
Multiple devices.

00:49:11.790 --> 00:49:18.790
[ Laughter ]
&gt;&gt;Chris DiBona: Do you have a better answer?

00:49:18.840 --> 00:49:25.800
So Froyo on G1s?
&gt;&gt;David Sparks: Technically not really feasible.

00:49:25.800 --> 00:49:30.630
The problem is that Flash space on the G1
is too small.

00:49:30.630 --> 00:49:37.630
So we just can't get Froyo to fit on Flash.
&gt;&gt;Brian Swetland: Basically, yeah, it would

00:49:37.920 --> 00:49:41.200
require removing existing features to make
room.

00:49:41.200 --> 00:49:44.730
You know, you're going to have to cut or you're
going to have to do some drastic things.

00:49:44.730 --> 00:49:50.950
I suspect what will happen is you'll see the
external community building some different

00:49:50.950 --> 00:49:55.480
custom ROMs for it.
The difficulty with the device that's around

00:49:55.480 --> 00:50:00.810
two years old now and, again, due to the Flash
size limits, it's hard to roll in the new

00:50:00.810 --> 00:50:06.600
release without potentially removing functionality
that existing users, end users, expect to

00:50:06.600 --> 00:50:08.160
have.
&gt;&gt;Chris DiBona: Yeah.

00:50:08.160 --> 00:50:12.140
And this is a legitimate roll for them to
have.

00:50:12.140 --> 00:50:17.190
This is one of the reasons why we open sourced
it, was to help folks like that with old hardware.

00:50:17.190 --> 00:50:23.590
So do you want to talk about how painful it
is to support multiple devices?

00:50:23.590 --> 00:50:29.359
There's 50 of them out.
&gt;&gt;&gt; It takes forever to build on them all.

00:50:29.359 --> 00:50:32.340
&gt;&gt;Chris DiBona: You can hit the button at
once.

00:50:32.340 --> 00:50:33.180
You don't have to wait --
&gt;&gt;&gt; The.

00:50:33.180 --> 00:50:37.050
&gt;&gt;David Sparks: The question is how difficult
it is for the platform to work across multiple

00:50:37.050 --> 00:50:41.980
devices?
&gt;&gt;&gt; I think it might be more about the application

00:50:41.980 --> 00:50:45.940
side.
&gt;&gt;David Sparks: We rely on manufacturers to

00:50:45.940 --> 00:50:50.930
do their own application testing.
We recommend things that we actually -- I

00:50:50.930 --> 00:50:55.920
think the developer relations team has done
a pretty good job of figuring out these are

00:50:55.920 --> 00:50:58.290
the top 100 apps, you should probably work
with those.

00:50:58.290 --> 00:51:05.290
CTs is does a lot of that work for us.
And in cases where we've seen an app that

00:51:05.990 --> 00:51:10.680
was broken in a release and CTS didn't catch
it, we try to go back and fix CTS so that

00:51:10.680 --> 00:51:17.650
it will catch it next time.
But we can't go out and test, you know, 55

00:51:17.650 --> 00:51:21.770
devices or whatever the number is today, so
we do have to rely on the manufacturers.

00:51:21.770 --> 00:51:27.840
What we do is, through our partner relations
group, if we get a report that there's a problem,

00:51:27.840 --> 00:51:31.200
we work directly with the manufacturer to
help them fix it, help them understand what

00:51:31.200 --> 00:51:36.240
the problem is, and push out a release.
&gt;&gt;Mike Cleron: So I think for the application

00:51:36.240 --> 00:51:40.230
side of that, there's a very impressive cabinet
full of devices.

00:51:40.230 --> 00:51:44.520
It's not our intent that you have to buy one
of those and try your application on every

00:51:44.520 --> 00:51:46.550
single one, because --
&gt;&gt;Chris DiBona: I mean, if you want to.

00:51:46.550 --> 00:51:50.460
&gt;&gt;Mike Cleron: Don't let me stop you.
But they might come out faster than you can

00:51:50.460 --> 00:51:54.410
actually test them.
You may never actually catch up to the number

00:51:54.410 --> 00:51:59.060
of devices being manufactured.
Instead, I think the right approach is to

00:51:59.060 --> 00:52:05.820
look at the different axes in the test matrix.
So there's MDPI devices and HDPI devices,

00:52:05.820 --> 00:52:08.830
there's with and without hard keyboard, portrait
and landscape.

00:52:08.830 --> 00:52:14.609
And if you cover that, which you can do with
maybe two devices or a couple devices in the

00:52:14.609 --> 00:52:17.810
emulator, then you have pretty high confidence
that you're going to run everywhere.

00:52:17.810 --> 00:52:22.700
MDPI on one device is the same as MDPI on
another.

00:52:22.700 --> 00:52:24.900
Landscape on one is the same as landscape
on another.

00:52:24.900 --> 00:52:28.510
That's what I was talking about earlier about
trying to keep the surface area relatively

00:52:28.510 --> 00:52:32.530
compact even if we want to support a lot of
variations on the theme.

00:52:32.530 --> 00:52:37.369
So you don't by any means have to test exhaustively
on every piece of hardware.

00:52:37.369 --> 00:52:43.730
It's not possible.
&gt;&gt;Chris DiBona: So what are -- what are the

00:52:43.730 --> 00:52:48.570
plans to support streaming H264 content, not
just local, but streaming.

00:52:48.570 --> 00:52:50.410
I know one of the answers is you can do it
Flash now.

00:52:50.410 --> 00:52:55.500
&gt;&gt;&gt; Streaming.
&gt;&gt;Chris DiBona: I guess from a Web site or

00:52:55.500 --> 00:52:57.210
something.
&gt;&gt;David Sparks: Streaming in general?

00:52:57.210 --> 00:53:04.210
We support HTP progressive streaming already.
I talked earlier about live streaming, something

00:53:04.310 --> 00:53:09.210
we're looking at.
And RTSP, I'm not sure what else you're looking

00:53:09.210 --> 00:53:14.359
for.
Like I say, with the next release, we're expecting

00:53:14.359 --> 00:53:19.840
to be able to allow applications to put their
own protocol stack in place.

00:53:19.840 --> 00:53:23.090
And this will solve some of the problems.
There are a lot of people running proxy servers

00:53:23.090 --> 00:53:28.310
on device so they can do whatever protocol
they want to do.

00:53:28.310 --> 00:53:30.609
We should theoretically eliminate that in
the next release.

00:53:30.609 --> 00:53:37.609
&gt;&gt;&gt; This morning in the Google TV demo, we
saw a lot of new UI controls, and I've also

00:53:39.210 --> 00:53:43.869
heard a lot of news about major manufacturers
kind of stepping up their tablet initiatives.

00:53:43.869 --> 00:53:46.520
I know you can't talk in depth about what's
in Gingerbread.

00:53:46.520 --> 00:53:52.859
But can you speak a little bit to the strategies
for possibly different sets of UI widgets

00:53:52.859 --> 00:53:57.109
for the different kind of environments that
Android will be running in?

00:53:57.109 --> 00:54:04.109
&gt;&gt;Chris DiBona: UI widget theming?
&gt;&gt;Mike Cleron: Yesterday, Jim Palmer spoke

00:54:05.119 --> 00:54:10.050
about UX in general.
We're looking to do ongoing refreshes of our

00:54:10.050 --> 00:54:13.800
UI.
I think our philosophy is more to make something

00:54:13.800 --> 00:54:20.020
that works across the span of devices rather
than have, you know, a small phone UI, a big

00:54:20.020 --> 00:54:25.350
phone UI, potentially one day a tablet UI,
a TV UI, things like that.

00:54:25.350 --> 00:54:27.960
Because that will just make the developers'
lives harder.

00:54:27.960 --> 00:54:32.760
Because if they want to soffit with the system
theme, that gives one more axis that they

00:54:32.760 --> 00:54:35.820
have to vary on.
So we're looking to have something that can

00:54:35.820 --> 00:54:38.720
work well across a range of devices and a
range of screen sizes.

00:54:38.720 --> 00:54:45.720
&gt;&gt;&gt; Thanks.
&gt;&gt;&gt; Regarding the communication with the Android

00:54:46.550 --> 00:54:53.550
developers and the contributions from the
community, yesterday, I got approved one small

00:54:54.520 --> 00:55:00.630
patch to the Android OS system.
I really appreciate that, and I really appreciate

00:55:00.630 --> 00:55:04.300
the work of JPQ and the other people who are
integrating these patches.

00:55:04.300 --> 00:55:11.300
The only point is that it took a little bit
more than one year to get reviewed and integrated.

00:55:14.160 --> 00:55:20.420
So I would like to know if Google has plans
to improve the situation to -- well, to work

00:55:20.420 --> 00:55:25.390
more tightly with the community.
&gt;&gt;Chris DiBona: So bringing down the patch

00:55:25.390 --> 00:55:29.460
flow from a year to 11 months.
&gt;&gt;Brian Swetland: Less than a year would definitely

00:55:29.460 --> 00:55:35.320
be good.
JBQ's team is actively working to improve

00:55:35.320 --> 00:55:37.020
that.
We've been staffing up that team.

00:55:37.020 --> 00:55:41.000
JBQ, you know, started by himself, and he
has some other folks helping him now.

00:55:41.000 --> 00:55:47.530
And we're also working to get core team engineers
involved in reviews of external patches.

00:55:47.530 --> 00:55:52.580
We definitely want to improve the process
of getting external contributions in.

00:55:52.580 --> 00:55:59.240
It's good for everybody to do so.
&gt;&gt;Dan Morrill: Yeah, and kind of beyond that,

00:55:59.240 --> 00:56:03.070
right now -- well, the first thing I understand
that Android isn't just a single project.

00:56:03.070 --> 00:56:08.810
It's actually, I think, the current number
is something close to 230 projects, many of

00:56:08.810 --> 00:56:11.060
which are external, meaning that we pull them
from upstream.

00:56:11.060 --> 00:56:15.480
But most of the rest are ours.
But we've got at least, like, probably 150,

00:56:15.480 --> 00:56:20.250
I think, you know, unique projects that are
Android projects.

00:56:20.250 --> 00:56:27.050
Right now, our development process is that
those are all what I'll say, like, the work

00:56:27.050 --> 00:56:31.400
occurs first in our internal server and then
gets periodically pushed to the external server.

00:56:31.400 --> 00:56:37.150
Over time, we're actually moving some of the
 -- some of the individual projects to the

00:56:37.150 --> 00:56:40.330
external tree.
In fact, the SDK team just switched not long

00:56:40.330 --> 00:56:43.270
ago.
That work was done on the open tree first.

00:56:43.270 --> 00:56:47.290
So that will speed some of these up.
You specifically referred to the patches.

00:56:47.290 --> 00:56:54.290
JBQ actually, as it happens, last week and
through this week has made a big pass on those.

00:56:55.540 --> 00:57:00.280
And I think right now he said there's about
180 that are still open.

00:57:00.280 --> 00:57:05.590
And I think at one point, there were -- I
think the peak was somewhere about 500.

00:57:05.590 --> 00:57:10.030
And so it is true that it certainly does take
some time for us to get to some patches.

00:57:10.030 --> 00:57:12.400
But these are the things that we're doing
to kind of work on that.

00:57:12.400 --> 00:57:17.480
We're moving some projects open, which reduces
the sort of impedance mismatch between code

00:57:17.480 --> 00:57:19.170
that we're writing and code that people are
contributing.

00:57:19.170 --> 00:57:26.170
And we're also working to get more -- more
of the engineers looking at the public issue

00:57:27.220 --> 00:57:33.650
 -- or the public garrote instance.
Another thing that we actually just did, this

00:57:33.650 --> 00:57:36.710
site relaunch that I keep mentioning. One
thing that we also turned on was a couple

00:57:36.710 --> 00:57:43.170
new lists. One thing we discovered was a bit
problematic is we only had one list, mailing

00:57:43.170 --> 00:57:48.520
list, I mean, whose purpose was to discuss
patches and manage this kind of thing. And

00:57:48.520 --> 00:57:51.910
it filled up with noise because if you only
have one list, then everything gets discussed

00:57:51.910 --> 00:57:55.050
in one list.
So we actually created two new mailing lists

00:57:55.050 --> 00:57:59.170
the other day, and I hope maybe perhaps you
will consider joining them. But one of them

00:57:59.170 --> 00:58:04.480
is called Android building which is specifically
for questions about how to build the source

00:58:04.480 --> 00:58:09.730
tree and about the build system. And the intent
here is let's move all that discussion, which

00:58:09.730 --> 00:58:13.700
turns out to be a pretty percentage of the
chatter on Android platform, into that list.

00:58:13.700 --> 00:58:19.660
And, similarly, we created a list called Android
Contrib which is for contributors specifically

00:58:19.660 --> 00:58:24.510
discussing patches. And hopefully by this
way, what we will allow -- or what we will

00:58:24.510 --> 00:58:29.340
enable is to make it easier for the engineers
to actually triage this work, and instead

00:58:29.340 --> 00:58:36.099
of having to troll through this gigantic morass
of e-mail messages, 80% which have don't interest

00:58:36.099 --> 00:58:40.420
them, they can specifically look at these
lists which are maintained as working lists.

00:58:40.420 --> 00:58:43.760
It's a bit of an experiment. We're going to
try and we're going to be super aggro about

00:58:43.760 --> 00:58:47.670
moderating these things. We're not going to
really tolerate any off-topic discussions

00:58:47.670 --> 00:58:51.810
on these two lists to keep the signal-to-noise
ratio high so work can get done.

00:58:51.810 --> 00:58:57.070
So we are aware of this. It's something we
are spending more time trying to improve that

00:58:57.070 --> 00:58:59.890
flow and get patches in from the outside.
&gt;&gt;&gt;Thank you.

00:58:59.890 --> 00:59:02.410
&gt;&gt;Chris DiBona: We probably only have time
for one last question.

00:59:02.410 --> 00:59:08.950
&gt;&gt;&gt; My question is about in order to get the
AOSP working on an actual device, that generally

00:59:08.950 --> 00:59:14.200
means needing hardware drivers that aren't
open source, and that's not exactly Android's

00:59:14.200 --> 00:59:19.490
problem or Google's problem, but is there
anything that your team is doing or encouraging

00:59:19.490 --> 00:59:23.790
manufacturers or anything in order to reduce
the barrier to getting the AOSP on a device

00:59:23.790 --> 00:59:27.590
when you are not a big company that can swing
deals with other big companies?

00:59:27.590 --> 00:59:33.910
&gt;&gt;Dan Morrill: Yeah, it is actually my extreme
pleasure -- We totally hear that. In fact,

00:59:33.910 --> 00:59:39.270
this has been a huge, huge issue getting AOSP
to run vanilla on a device for a long time.

00:59:39.270 --> 00:59:43.230
Froyo goes an extremely long way towards that
goal.

00:59:43.230 --> 00:59:47.220
The reality is that we had some technical
problems in the actual code that made this

00:59:47.220 --> 00:59:50.990
a difficult proposition in Eclair. But when
the Froyo source code is released, which will

00:59:50.990 --> 00:59:56.609
be in the coming weeks, it will be vastly
easier. And, in fact, you can do it. You can

00:59:56.609 --> 01:00:02.660
build a full vanilla Android open source tree,
install it on a Nexus One. There are some

01:00:02.660 --> 01:00:08.090
binaries that you still need because, unfortunately,
not all software can be open sourced, but

01:00:08.090 --> 01:00:12.470
you can build a vanilla tree with the Froyo
source code and boot it and run and make a

01:00:12.470 --> 01:00:15.230
phone call.
So it's a huge milestone for us and we're

01:00:15.230 --> 01:00:16.260
super excited about it.
&gt;&gt;Brian Swetland: That's the result of a number

01:00:16.260 --> 01:00:22.420
of things. We are actively working with the
silicon vendors like Qualcomm, and T.I., and

01:00:22.420 --> 01:00:29.420
so on, to encourage them to support GPLV2,
like as many drivers as possible open source.

01:00:30.770 --> 01:00:37.770
And also, to -- when that's not possible,
we're trying to work with them to enable the

01:00:38.780 --> 01:00:43.410
delivery of things like the user space OpenGL
library, which is a common component that

01:00:43.410 --> 01:00:49.710
for various reasons is rarely open, but to
make it available to community developers

01:00:49.710 --> 01:00:51.480
so you don't have to jump through a lot of
hoops.

01:00:51.480 --> 01:00:58.480
I think in particular, Nexus One, the number
of closed binary packages is remarkably small

01:00:59.470 --> 01:01:02.920
for --
&gt;&gt;Chris DiBona: Down to nine for 2.1. I don't

01:01:02.920 --> 01:01:06.980
know if it's smaller than that now.
&gt;&gt;Brian Swetland: There are reportedly much

01:01:06.980 --> 01:01:10.250
more open devices that I have seen 20, 30,
40 --

01:01:10.250 --> 01:01:13.980
&gt;&gt;Chris DiBona: 90.
&gt;&gt;Brian Swetland: -- as far as lists of binary

01:01:13.980 --> 01:01:18.020
packages.
So it's definitely not perfect. We would love

01:01:18.020 --> 01:01:22.599
to see a world where the entire thing would
build completely open. But we are actively

01:01:22.599 --> 01:01:27.570
working with the various OHA partners and
other contributors to get as close as we possibly

01:01:27.570 --> 01:01:28.760
can.
&gt;&gt;&gt; Thank you.

01:01:28.760 --> 01:01:35.760
&gt;&gt;Chris DiBona: And that's where we end today's
fireside, so....

01:01:38.170 --> 01:01:44.589
[ Applause ]

