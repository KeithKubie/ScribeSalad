WEBVTT
Kind: captions
Language: en

00:00:00.870 --> 00:00:02.690
PENG YING: Hi, my
name is Peng Ying.

00:00:02.690 --> 00:00:04.690
And I work on the
Google Wallet team.

00:00:04.690 --> 00:00:06.890
I'm here to talk about
the Wallet Objects

00:00:06.890 --> 00:00:09.370
API for native Android.

00:00:09.370 --> 00:00:12.280
I used to have a keychain full
of these-- different loyalty

00:00:12.280 --> 00:00:15.540
cards to take advantage
of discounts and rewards.

00:00:15.540 --> 00:00:19.480
And these I usually just end up
leaving at home unfortunately.

00:00:19.480 --> 00:00:21.880
I could've saved so much money!

00:00:21.880 --> 00:00:25.000
I don't think anyone but
the most dedicated savers

00:00:25.000 --> 00:00:28.990
carry around all their loyalty
cards and offers all the time.

00:00:28.990 --> 00:00:32.420
To make it easier for everyone
to carry around everything,

00:00:32.420 --> 00:00:35.320
Google provides the
Wallet Objects platform.

00:00:35.320 --> 00:00:38.290
Wallet Objects is a concept
of digitizing and storing

00:00:38.290 --> 00:00:41.090
all of your items in
your wallet in the Cloud

00:00:41.090 --> 00:00:43.390
and making them
accessible from anywhere.

00:00:43.390 --> 00:00:45.010
And combined with
the mobile app that

00:00:45.010 --> 00:00:48.940
has contextual information,
we can make these items smart

00:00:48.940 --> 00:00:51.140
so they appear
when you need them.

00:00:51.140 --> 00:00:53.230
For example, I
have a test object

00:00:53.230 --> 00:00:55.310
with the geofence
of this building.

00:00:55.310 --> 00:00:58.780
Whenever I enter the geofence,
my Wallet Object appears now.

00:00:58.780 --> 00:01:01.010
And it can notify me that
it's available to use

00:01:01.010 --> 00:01:03.990
through an Android system
level notification.

00:01:03.990 --> 00:01:06.360
And we fine-tune the
contextual triggers

00:01:06.360 --> 00:01:09.510
so that these notifications
won't trigger when say, I'm

00:01:09.510 --> 00:01:12.260
just driving by the office.

00:01:12.260 --> 00:01:14.090
This functionality
allows developers

00:01:14.090 --> 00:01:15.970
to do interesting things.

00:01:15.970 --> 00:01:18.610
Let's say you have an
existing mobile user base,

00:01:18.610 --> 00:01:20.790
and you want to convert
users from mobile

00:01:20.790 --> 00:01:22.570
to another physical medium.

00:01:22.570 --> 00:01:25.400
One example, it's a
mobile game and you

00:01:25.400 --> 00:01:27.310
want to convert the
user to a console.

00:01:27.310 --> 00:01:30.230
In the game you can add a
geolocated Wallet Objects

00:01:30.230 --> 00:01:34.390
offer for a console title
to incentivize user action.

00:01:34.390 --> 00:01:36.070
With the offers
saved, the next time

00:01:36.070 --> 00:01:39.150
the user goes to a geolocation
you specified-- whether it's

00:01:39.150 --> 00:01:43.770
Fry's, GameStop, or Best Buy,
or some other retailer-- Wallet

00:01:43.770 --> 00:01:47.612
will notify the user that the
offer is available to use.

00:01:47.612 --> 00:01:49.590
They buy the title and boom!

00:01:49.590 --> 00:01:51.800
Now they're playing your
game in the living room

00:01:51.800 --> 00:01:54.290
in addition to on mobile.

00:01:54.290 --> 00:01:57.300
Wallet Objects can help
with retail as well.

00:01:57.300 --> 00:01:59.100
Instead of all the
coupons and offers

00:01:59.100 --> 00:02:01.700
that you need to remember to
bring when you go shopping,

00:02:01.700 --> 00:02:04.290
you should just be able to
save those offers from an app

00:02:04.290 --> 00:02:06.540
or from the web, and
have them notify you

00:02:06.540 --> 00:02:08.050
when they're relevant.

00:02:08.050 --> 00:02:10.220
Let's say I walked past
a store in the mall,

00:02:10.220 --> 00:02:12.140
and my phone notifies
me I have a coupon

00:02:12.140 --> 00:02:14.200
to save $20 off of purchase.

00:02:14.200 --> 00:02:16.500
I'm going to try to take
advantage of that savings,

00:02:16.500 --> 00:02:17.920
and check out if
there's anything

00:02:17.920 --> 00:02:19.540
in the store that interests me.

00:02:19.540 --> 00:02:20.960
Cool.

00:02:20.960 --> 00:02:23.110
So you want to
integrate it, right?

00:02:23.110 --> 00:02:26.890
Let's go over how to
create and save an object.

00:02:26.890 --> 00:02:29.180
The Wallet Objects
flow is simple.

00:02:29.180 --> 00:02:31.520
You need to find the data
representing the object

00:02:31.520 --> 00:02:35.040
and add a Save to Google button
that calls our function create

00:02:35.040 --> 00:02:38.452
Wallet Object with
the object to save.

00:02:38.452 --> 00:02:40.160
The rendering is based
on a template that

00:02:40.160 --> 00:02:42.610
gets populated by the
information you define.

00:02:42.610 --> 00:02:45.010
To reduce redundancy,
Wallet Objects

00:02:45.010 --> 00:02:47.230
stores data in two forms.

00:02:47.230 --> 00:02:49.670
It's somewhat analogous
to programming.

00:02:49.670 --> 00:02:51.480
The class data
represents information

00:02:51.480 --> 00:02:54.920
that's common to all users,
like merchant details.

00:02:54.920 --> 00:02:57.110
The object data
represents information

00:02:57.110 --> 00:02:59.000
that's specific
to a single user,

00:02:59.000 --> 00:03:01.890
like a specific
discount or a bar code.

00:03:01.890 --> 00:03:05.730
All this information is merged
then fills into the template.

00:03:05.730 --> 00:03:08.410
We have a number of fields
here in this template,

00:03:08.410 --> 00:03:10.930
and any section without
data is going to be hidden.

00:03:10.930 --> 00:03:12.940
Let's check out the code.

00:03:12.940 --> 00:03:15.180
First, we need to
create the class.

00:03:15.180 --> 00:03:17.150
This code defines
an offer class.

00:03:17.150 --> 00:03:20.450
We set the merchant and some
offer details, some images,

00:03:20.450 --> 00:03:23.930
some subsections, and
lat long geolocations.

00:03:23.930 --> 00:03:26.240
Finally, we insert the class.

00:03:26.240 --> 00:03:29.680
Inserting the class needs to
use a server-side REST API.

00:03:29.680 --> 00:03:31.535
Once you've created
and inserted the class,

00:03:31.535 --> 00:03:36.020
you can create the object
data in your Android app.

00:03:36.020 --> 00:03:38.070
This may look like
a big wall of code,

00:03:38.070 --> 00:03:41.390
but it's your standard builder
pattern defining an object.

00:03:41.390 --> 00:03:43.560
Here I'm referencing a
class I just created.

00:03:43.560 --> 00:03:45.750
I'm overriding
some class fields,

00:03:45.750 --> 00:03:48.240
and defining information
that's specific to a user,

00:03:48.240 --> 00:03:50.600
such as barcode and messages.

00:03:50.600 --> 00:03:54.770
Once I have that, we can tie
the object to a create Wallet

00:03:54.770 --> 00:03:58.940
Objects call, and tie that
to an image button click.

00:03:58.940 --> 00:04:01.330
And we're done.

00:04:01.330 --> 00:04:03.540
So if you want to
remind and incentivize

00:04:03.540 --> 00:04:06.430
actions for your users,
integrate the Wallet Objects

00:04:06.430 --> 00:04:09.030
API into your app today.

00:04:09.030 --> 00:04:10.730
For more information
on integration

00:04:10.730 --> 00:04:13.000
and a step-by-step
tutorial, check out

00:04:13.000 --> 00:04:15.390
our developer documentation.

00:04:15.390 --> 00:04:17.470
I can't wait to
see what you build.

00:04:17.470 --> 00:04:18.480
I'm Peng Ying.

00:04:18.480 --> 00:04:20.500
And thanks for watching.

