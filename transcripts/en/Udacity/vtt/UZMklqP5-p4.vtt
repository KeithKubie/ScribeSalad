WEBVTT
Kind: captions
Language: en

00:00:00.100 --> 00:00:01.560
So, the last operator that I want to introduce

00:00:01.560 --> 00:00:06.560
you to is unwind. Unwind is really cool. So

00:00:06.560 --> 00:00:08.440
you know that we can have fields that have

00:00:08.440 --> 00:00:11.810
arrays as their values in Mongo DB. Well, what

00:00:11.810 --> 00:00:15.210
unwind does for us, is, for every value

00:00:15.210 --> 00:00:18.210
of an array field on which we're using unwind,

00:00:18.210 --> 00:00:22.490
it will create an instance of the document containing

00:00:22.490 --> 00:00:25.340
that array field, for every value in the array.

00:00:26.420 --> 00:00:29.250
So, in this example, we would get three different documents,

00:00:29.250 --> 00:00:32.600
I'm representing the additional fields here using ellipses. But each of

00:00:32.600 --> 00:00:36.880
the individual values for this particular field would be broken out

00:00:36.880 --> 00:00:40.000
one by one into each of these three documents. All of

00:00:40.000 --> 00:00:42.330
the other fields would be exactly the same in each

00:00:42.330 --> 00:00:44.740
of the three documents. Now the value of doing something like

00:00:44.740 --> 00:00:48.600
this is, well we could run a groupby stage as the

00:00:48.600 --> 00:00:51.560
next stage of the pipeline, where we actually care about what

00:00:51.560 --> 00:00:54.410
the individual values are and want to group on those individual

00:00:54.410 --> 00:00:56.930
values. Now where would we want to do this? Well, one

00:00:56.930 --> 00:00:59.990
example would be, if wanted to group based on the hash

00:00:59.990 --> 00:01:03.910
tags included in individual tweets. Hash tags in that data set

00:01:03.910 --> 00:01:06.870
are rolled up into an array. We could unwind them, using

00:01:06.870 --> 00:01:10.380
Unwind. And do a groupby in the next stage. So that's

00:01:10.380 --> 00:01:13.360
our overview of aggregation operators. As we move through the rest

00:01:13.360 --> 00:01:16.710
of this lesson we'll be looking at each of these operators in

00:01:16.710 --> 00:01:20.480
more detail with some very concrete examples, using the Twitter data set.

