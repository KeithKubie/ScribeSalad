WEBVTT
Kind: captions
Language: en

00:00:00.110 --> 00:00:00.620
DAN GALPIN: All right.

00:00:00.620 --> 00:00:02.520
So first of all, I
want a show of hands.

00:00:02.520 --> 00:00:04.980
How many people in the
audience here have any kind

00:00:04.980 --> 00:00:06.884
of engineering background?

00:00:06.884 --> 00:00:08.550
All right, it's quite
a lot of you here.

00:00:08.550 --> 00:00:10.008
One of the questions
that was asked

00:00:10.008 --> 00:00:12.936
is, should I actually show
some of the technical slides

00:00:12.936 --> 00:00:14.810
that I have here, and
I'm going to show them.

00:00:14.810 --> 00:00:17.434
But I'll go really fast through
them for all of you who aren't.

00:00:17.434 --> 00:00:20.850
So when I thought about the
future of gaming at Google

00:00:20.850 --> 00:00:23.160
and I saw all the things
that were going on here

00:00:23.160 --> 00:00:26.450
at Play time, what I realized
is that you are already

00:00:26.450 --> 00:00:29.270
seeing a lot of the future
in these other talks.

00:00:29.270 --> 00:00:31.230
You're seeing the
really cool stuff

00:00:31.230 --> 00:00:34.960
that we're doing around tooling,
all of the great improvements

00:00:34.960 --> 00:00:38.750
we've made to Android Studio,
the addition of the NDK,

00:00:38.750 --> 00:00:41.300
better performance tools
for game developers

00:00:41.300 --> 00:00:42.800
and that's obviously
to continue.

00:00:42.800 --> 00:00:44.466
You're seeing the
great stuff that we're

00:00:44.466 --> 00:00:46.750
doing with Player
Analytics and you're

00:00:46.750 --> 00:00:49.030
seeing all of the work
that is being built on

00:00:49.030 --> 00:00:50.620
to give you more and
more data to help

00:00:50.620 --> 00:00:53.265
you optimize your engagement.

00:00:53.265 --> 00:00:54.890
So when I always
think about the future

00:00:54.890 --> 00:00:56.635
I want to make
sure, first of all,

00:00:56.635 --> 00:00:58.260
that we're covering
all the other stuff

00:00:58.260 --> 00:01:01.560
that that's in the fringe
that you might not know about.

00:01:01.560 --> 00:01:03.820
So here's about me.

00:01:03.820 --> 00:01:06.280
I have been a
developer for years

00:01:06.280 --> 00:01:09.640
and I'm a gamer and I
like animating slides.

00:01:09.640 --> 00:01:12.350
So to reiterate here, we have
a billion Android devices

00:01:12.350 --> 00:01:14.550
and I just love this picture
so I'm putting it up.

00:01:14.550 --> 00:01:18.050
But more importantly,
most of these devices

00:01:18.050 --> 00:01:20.330
are obviously
phones and tablets.

00:01:20.330 --> 00:01:23.499
But the future of Android is
not just phones and tablets,

00:01:23.499 --> 00:01:25.290
it is that device we
have sitting upstairs.

00:01:25.290 --> 00:01:28.550
If you've had a chance to play
with it, it is Android TV.

00:01:28.550 --> 00:01:30.960
And the idea being
here is very simple.

00:01:30.960 --> 00:01:34.560
We create one platform and
one distribution system

00:01:34.560 --> 00:01:37.150
and we allow it to use the
same middleware, the same store

00:01:37.150 --> 00:01:39.437
front, pretty much all
the same technology they

00:01:39.437 --> 00:01:41.020
you're using today
to build your games

00:01:41.020 --> 00:01:42.710
with a little bit
of incremental work

00:01:42.710 --> 00:01:44.710
and bring it to a
whole new ecosystem.

00:01:44.710 --> 00:01:48.139
So part of the future
is saying, hey,

00:01:48.139 --> 00:01:49.930
let's leverage all of
this work that you're

00:01:49.930 --> 00:01:52.510
doing to target these billion
users that we're talking

00:01:52.510 --> 00:01:55.040
about here on another platform.

00:01:55.040 --> 00:01:57.390
And of course, we're building
a whole big ecosystem

00:01:57.390 --> 00:01:58.160
around here.

00:01:58.160 --> 00:02:00.670
And some of you may have seen
this slide before but there is

00:02:00.670 --> 00:02:02.878
just an amazing amount of
stuff--not only do you have

00:02:02.878 --> 00:02:05.200
TV's that have integrated--
we've got these great over

00:02:05.200 --> 00:02:07.940
the top boxes and micro consoles
and if you haven't played with

00:02:07.940 --> 00:02:10.080
the NVIDIA box, it is awesome.

00:02:10.080 --> 00:02:12.330
And then we have these
integrated service boxes

00:02:12.330 --> 00:02:14.705
that are just coming to people's
houses for a massive far

00:02:14.705 --> 00:02:17.320
[INAUDIBLE] and
LGU plus in Korea

00:02:17.320 --> 00:02:20.480
so it is a really cool thing, I
wanted to do a little shout out

00:02:20.480 --> 00:02:23.900
here before I started talking
about the rest of the future.

00:02:23.900 --> 00:02:28.694
All right so basically
we have a couple

00:02:28.694 --> 00:02:30.110
of different groups
at Google that

00:02:30.110 --> 00:02:32.290
are doing kind of neat
stuff for game devs.

00:02:32.290 --> 00:02:33.664
Now how many of
you have actually

00:02:33.664 --> 00:02:36.170
heard of Fun Propulsion
Labs, by a show of hands?

00:02:36.170 --> 00:02:37.200
All right.

00:02:37.200 --> 00:02:39.190
So it is a team
at Google that is

00:02:39.190 --> 00:02:43.410
passionate about creating
cool, cross-platform game

00:02:43.410 --> 00:02:44.190
technologies.

00:02:44.190 --> 00:02:48.150
And basically, here's
what they do, OK?

00:02:48.150 --> 00:02:50.140
They iterate.

00:02:50.140 --> 00:02:51.690
They build games.

00:02:51.690 --> 00:02:55.100
They release game components,
tools, and all that source,

00:02:55.100 --> 00:02:58.630
and then they repeat,
see animations.

00:02:58.630 --> 00:03:00.660
So here's how they got started.

00:03:00.660 --> 00:03:02.620
They went and they
created this really,

00:03:02.620 --> 00:03:04.949
really, cool library
called LiquidFun.

00:03:04.949 --> 00:03:06.990
Now how many of you have
ever heard of LiquidFun,

00:03:06.990 --> 00:03:08.090
by show of hands?

00:03:08.090 --> 00:03:08.590
OK.

00:03:08.590 --> 00:03:10.860
LiquidFun is actually
a really, really,

00:03:10.860 --> 00:03:14.410
cool 2D particle
simulation library.

00:03:14.410 --> 00:03:16.620
And they wanted it to be
P's-- Portable, Performant,

00:03:16.620 --> 00:03:17.712
and Practical.

00:03:17.712 --> 00:03:19.170
And what do I mean
when I say that?

00:03:19.170 --> 00:03:23.470
So what I mean about portable,
it is basically everywhere.

00:03:23.470 --> 00:03:26.031
We have ported it ourselves
to just about every platform

00:03:26.031 --> 00:03:26.530
out there.

00:03:26.530 --> 00:03:31.290
It is integrated into major
game SDK's like [INAUDIBLE] SDK.

00:03:31.290 --> 00:03:34.070
It is available on
Windows and the Mac.

00:03:34.070 --> 00:03:36.919
And it's performant
because we are

00:03:36.919 --> 00:03:39.210
really smart about the way
we deal with these thousands

00:03:39.210 --> 00:03:40.700
and thousands of particles.

00:03:40.700 --> 00:03:43.110
Basically we look at the
diameter of the particles,

00:03:43.110 --> 00:03:45.320
we put things into really
cool data structures

00:03:45.320 --> 00:03:47.300
so that we can actually
figure out, OK.

00:03:47.300 --> 00:03:49.340
If we're this particle,
how many other places do

00:03:49.340 --> 00:03:50.900
we actually have
to do calculations

00:03:50.900 --> 00:03:52.600
for these collisions-- which
is what's expensive when you

00:03:52.600 --> 00:03:53.766
build a particle simulation.

00:03:53.766 --> 00:03:55.690
And you might say
all right, just

00:03:55.690 --> 00:03:57.792
based upon the
diameter you'd actually

00:03:57.792 --> 00:03:59.250
be able to look at
these particles.

00:03:59.250 --> 00:04:01.050
And then we do them in
order, so by the time

00:04:01.050 --> 00:04:03.550
we get to particle seven, we're
actually only really looking

00:04:03.550 --> 00:04:04.300
at particle nine.

00:04:04.300 --> 00:04:06.570
So that's how we
make things fast.

00:04:06.570 --> 00:04:08.200
And it's practical
and you know what?

00:04:08.200 --> 00:04:10.720
And by practical, we
built it on top of Box2D,

00:04:10.720 --> 00:04:13.190
so it just literally slots in.

00:04:13.190 --> 00:04:14.770
If you're already
using Box2D and you

00:04:14.770 --> 00:04:17.050
want to add really cool
particle simulations that

00:04:17.050 --> 00:04:20.320
can flow around all of your
existing box to the objects,

00:04:20.320 --> 00:04:22.320
you can just integrate
this library in and boom.

00:04:22.320 --> 00:04:25.200
All of a sudden you've got
water and cool liquid effects

00:04:25.200 --> 00:04:26.205
on top of it.

00:04:26.205 --> 00:04:28.580
So this will give you a whole
bunch of additional options

00:04:28.580 --> 00:04:30.590
as game developers
and designers.

00:04:30.590 --> 00:04:36.234
So I'm going to play a video
now which is from the game

00:04:36.234 --> 00:04:38.525
that we built. We actually
built two games around this.

00:04:38.525 --> 00:04:41.630
And as you can see, these
particle simulations

00:04:41.630 --> 00:04:46.010
can affect both
themselves, but also they

00:04:46.010 --> 00:04:47.420
can affect the Box2D object.

00:04:47.420 --> 00:04:50.200
So as our hero
moves, he actually

00:04:50.200 --> 00:04:53.586
can be transported by these
little fountains of water.

00:04:53.586 --> 00:04:55.460
And it's actually a part
of the whole physics

00:04:55.460 --> 00:04:56.870
simulation of the game.

00:04:56.870 --> 00:04:59.270
And again, all the source
code of that is all available.

00:04:59.270 --> 00:05:00.980
So that's one thing we're doing.

00:05:00.980 --> 00:05:02.490
That was our first game.

00:05:02.490 --> 00:05:05.864
The second thing was this
thing called Pie Noon.

00:05:05.864 --> 00:05:07.280
And this is when
we really started

00:05:07.280 --> 00:05:09.210
to get into the
groove of things.

00:05:09.210 --> 00:05:11.014
So we actually started
to put together

00:05:11.014 --> 00:05:12.430
a whole bunch of
technologies that

00:05:12.430 --> 00:05:15.300
are all available
as pieces that you

00:05:15.300 --> 00:05:17.440
can integrate into your games.

00:05:17.440 --> 00:05:20.050
And the first piece of
this that we integrate

00:05:20.050 --> 00:05:22.550
into the game--well I'll
show you the game first,

00:05:22.550 --> 00:05:24.346
that's probably the
important thing.

00:05:24.346 --> 00:05:26.220
So if you haven't
seen this, this

00:05:26.220 --> 00:05:31.480
is a cool pie flinging
simulation done sort of, 3D.

00:05:34.170 --> 00:05:38.270
It really was a chance for us
to see how these technologies

00:05:38.270 --> 00:05:39.720
actually work in a real game.

00:05:39.720 --> 00:05:42.690
Of course, we have play game
services and other stuff,

00:05:42.690 --> 00:05:47.590
let's continue on to
talking about this.

00:05:47.590 --> 00:05:48.960
So what did we do?

00:05:48.960 --> 00:05:51.710
So first of all, we wanted to
make sure the game was small.

00:05:51.710 --> 00:05:53.790
Making your game small
is extremely important.

00:05:53.790 --> 00:05:57.870
As you know, we now support
up to 100 megabyte APK's yay.

00:05:57.870 --> 00:06:01.080
But even with that,
you still want

00:06:01.080 --> 00:06:04.120
to make it small because
the smaller your game is,

00:06:04.120 --> 00:06:05.280
the more downloads it has.

00:06:05.280 --> 00:06:08.090
And WEBP is actually pretty
cool for making your game a very

00:06:08.090 --> 00:06:11.070
small package online.

00:06:11.070 --> 00:06:14.217
So a lot of people
see this, it says web

00:06:14.217 --> 00:06:15.800
and they assume it's
only for the web.

00:06:15.800 --> 00:06:20.070
But actually all these libraries
are available on mobile devices

00:06:20.070 --> 00:06:20.660
as well.

00:06:20.660 --> 00:06:23.280
And we actually show you how to
do it inside of all the source

00:06:23.280 --> 00:06:24.356
code for Pie Noon.

00:06:25.350 --> 00:06:25.870
All right.

00:06:25.870 --> 00:06:28.620
It supports lossy and
lossless compression,

00:06:28.620 --> 00:06:31.271
with lossless alpha channel
support in both cases.

00:06:31.271 --> 00:06:33.270
And it'll give you
considerable size improvement

00:06:33.270 --> 00:06:35.900
over things like
jpeg, and png files.

00:06:35.900 --> 00:06:38.925
So again, making your
game small is important.

00:06:38.925 --> 00:06:39.800
So how do we do this?

00:06:39.800 --> 00:06:43.000
We started off with TARGA files,
which of course were enormous.

00:06:43.000 --> 00:06:45.370
We then created
lossless pngs and then

00:06:45.370 --> 00:06:49.720
we compressed those to WEBP
inside of our tool chain.

00:06:49.720 --> 00:06:51.810
So what did this actually
look like in real terms?

00:06:51.810 --> 00:06:53.559
So our TARGA files are
obviously enormous.

00:06:53.559 --> 00:06:55.510
You'd never want to
ship those on mobile.

00:06:55.510 --> 00:06:57.940
Our png files were
relatively small,

00:06:57.940 --> 00:07:00.950
but when we got down to WEBP,
that's what we're looking at.

00:07:00.950 --> 00:07:01.802
So you'd be shocked.

00:07:01.802 --> 00:07:03.010
We actually did some studies.

00:07:03.010 --> 00:07:06.250
And we found-- you'd be
amazed how many developers

00:07:06.250 --> 00:07:08.740
are actually shipping png's
for all of their assets.

00:07:08.740 --> 00:07:10.860
And the truth is
you might as well

00:07:10.860 --> 00:07:13.470
go with something like this.

00:07:13.470 --> 00:07:15.070
So here's actually
what it looks like.

00:07:15.070 --> 00:07:19.497
You probably can't tell, based
upon this projection, actually

00:07:19.497 --> 00:07:20.580
the difference in quality.

00:07:20.580 --> 00:07:22.038
With these, believe
it or not, that

00:07:22.038 --> 00:07:24.845
is the png, that is the WEBP,
this is another lossy WEBP,

00:07:24.845 --> 00:07:26.470
and this is-- In this
one, you can just

00:07:26.470 --> 00:07:28.362
start to see there's
a little less detail.

00:07:28.362 --> 00:07:29.820
If you look really
closely, there's

00:07:29.820 --> 00:07:31.562
a little fringe,
almost impossible

00:07:31.562 --> 00:07:32.520
to tell the difference.

00:07:32.520 --> 00:07:34.520
However, we wanted
to look perfect,

00:07:34.520 --> 00:07:36.360
so we chose that
one there, almost

00:07:36.360 --> 00:07:39.180
no distinguishing
differences at all.

00:07:39.180 --> 00:07:41.540
Of course, this doesn't
get you off the hook

00:07:41.540 --> 00:07:43.566
from using
GPU-optimized textures.

00:07:43.566 --> 00:07:45.690
Because they are smaller,
they take less fill rate.

00:07:45.690 --> 00:07:48.350
I'm not saying everyone should
use WEBP for everything,

00:07:48.350 --> 00:07:52.280
but if you're using pngs
to ship textures already,

00:07:52.280 --> 00:07:55.100
really think about
using it instead.

00:07:55.100 --> 00:07:55.600
All right.

00:07:55.600 --> 00:07:56.880
Let's talk a little
bit about maths.

00:07:56.880 --> 00:07:58.463
And the next thing
we did is we needed

00:07:58.463 --> 00:07:59.737
to create a library for math.

00:07:59.737 --> 00:08:02.070
And actually we were doing
this independent of Pie Noon.

00:08:02.070 --> 00:08:04.080
But Pie Noon just
gave us an opportunity

00:08:04.080 --> 00:08:05.714
to actually take
advantage of it.

00:08:05.714 --> 00:08:07.380
A lot of people are
like, god, we really

00:08:07.380 --> 00:08:09.850
want a cool math
library for Android.

00:08:09.850 --> 00:08:11.630
And this is awesome
because it can

00:08:11.630 --> 00:08:14.510
be used for physics or geometry,
and use a SIMD compiler

00:08:14.510 --> 00:08:15.330
intrinsics.

00:08:15.330 --> 00:08:18.880
And that's really important
because using compiler

00:08:18.880 --> 00:08:20.980
intrinsics, we actually
made it five times as

00:08:20.980 --> 00:08:23.000
fast when running
on our Nexus devices

00:08:23.000 --> 00:08:24.958
or actually when you're
running on the desktop.

00:08:24.958 --> 00:08:26.787
It's just ludicrously fast.

00:08:26.787 --> 00:08:28.870
So it's streamlined which
means it doesn't contain

00:08:28.870 --> 00:08:33.699
that, the kitchen sink, yeah.

00:08:33.699 --> 00:08:36.240
And you know so it's not useful
for doing things like protein

00:08:36.240 --> 00:08:37.710
folding or something like that.

00:08:37.710 --> 00:08:39.210
But it is really good for games.

00:08:39.210 --> 00:08:42.750
And we actually used it to
calculate the arc, for example,

00:08:42.750 --> 00:08:45.270
of our pies as they get thrown.

00:08:45.270 --> 00:08:47.490
Parabolic pie pass, it's great.

00:08:47.490 --> 00:08:49.550
And it all begins with p.

00:08:49.550 --> 00:08:51.895
So we talked a little bit
about the next thing we built

00:08:51.895 --> 00:08:53.270
was something
called FlatBuffers.

00:08:53.270 --> 00:08:57.550
Now when we designed
Voltaire, we actually

00:08:57.550 --> 00:09:00.609
ran into a huge problem, is that
it took forever to load levels.

00:09:00.609 --> 00:09:03.150
And that's partially because
the system that we were building

00:09:03.150 --> 00:09:04.820
was not optimized for games.

00:09:04.820 --> 00:09:07.320
And I'm not even going to tell
you what we used to build it.

00:09:07.320 --> 00:09:09.466
But trust me, it was amazing.

00:09:09.466 --> 00:09:10.840
So we wanted to
make sure when we

00:09:10.840 --> 00:09:12.256
did our next game
that we actually

00:09:12.256 --> 00:09:13.620
didn't have this problem.

00:09:13.620 --> 00:09:16.254
So we decided to look, first
of all, at protocol buffers.

00:09:16.254 --> 00:09:17.670
We thought, those
are pretty cool.

00:09:17.670 --> 00:09:19.990
But they're kind of
heavyweight, still, for games.

00:09:19.990 --> 00:09:22.010
And we thought we
could do better.

00:09:22.010 --> 00:09:24.510
So we actually developed this
technology called FlatBuffers.

00:09:24.510 --> 00:09:27.380
And I'm excited to say this has
actually gotten a lot of play

00:09:27.380 --> 00:09:28.410
even outside of games.

00:09:28.410 --> 00:09:31.530
There was a great post
recently by Facebook,

00:09:31.530 --> 00:09:34.300
where they're actually
using FlatBuffers inside

00:09:34.300 --> 00:09:36.160
of their Android application.

00:09:36.160 --> 00:09:37.930
And they talk about
how great it is.

00:09:37.930 --> 00:09:41.460
So what's great about this is
it's really memory efficient.

00:09:41.460 --> 00:09:43.170
The code base is really small.

00:09:43.170 --> 00:09:45.250
And it's super flexible.

00:09:45.250 --> 00:09:50.160
So a lot of you-- you don't have
to be embarrassed about this.

00:09:50.160 --> 00:09:52.290
But a lot of people are
actually shipping JSON

00:09:52.290 --> 00:09:53.642
to and from their applications.

00:09:53.642 --> 00:09:55.350
They're actually
storing this in the app.

00:09:55.350 --> 00:09:59.050
And that's really, really
bad for a lot of reasons.

00:09:59.050 --> 00:10:03.080
One reason why it's
bad is for example,

00:10:03.080 --> 00:10:05.524
it's really hard to
optimize, because your JSON

00:10:05.524 --> 00:10:08.190
[? partition ?] has no idea that
those are actually [? enons ?].

00:10:08.190 --> 00:10:10.064
And it actually has to
store them as strings.

00:10:10.064 --> 00:10:11.860
That's really slow and
really heavy weight.

00:10:11.860 --> 00:10:13.454
And you get things
like this number.

00:10:13.454 --> 00:10:15.620
What does that number, and
what does that type mean?

00:10:15.620 --> 00:10:19.960
So it's, by definition,
pretty inefficient.

00:10:19.960 --> 00:10:21.010
But it's human readable.

00:10:21.010 --> 00:10:22.674
And so people love it.

00:10:22.674 --> 00:10:24.590
So what we did for
FlatBuffers is very simple.

00:10:24.590 --> 00:10:26.330
We save a schema.

00:10:26.330 --> 00:10:29.360
And we generate
C++ code from that.

00:10:29.360 --> 00:10:31.890
And we actually support more
than just C++, by the way,

00:10:31.890 --> 00:10:34.230
but that was the original
language we supported.

00:10:34.230 --> 00:10:37.580
And then-- we then
can take an object

00:10:37.580 --> 00:10:40.880
and turn it into a
[? bitarray ?] or vice versa,

00:10:40.880 --> 00:10:42.950
pretty straightforward.

00:10:42.950 --> 00:10:46.070
So the best part is no
JSON, except for the fact

00:10:46.070 --> 00:10:48.220
that people still
like using JSON,

00:10:48.220 --> 00:10:50.570
so you can actually build
that schema with JSON if you

00:10:50.570 --> 00:10:51.420
want to.

00:10:51.420 --> 00:10:54.090
If that's not confusing.

00:10:54.090 --> 00:10:55.760
So what's great
about this is now

00:10:55.760 --> 00:10:57.830
you can take JSON, use
it to find your schema,

00:10:57.830 --> 00:11:00.580
generate the CPP file,
[? bitarray ?] and everyone

00:11:00.580 --> 00:11:03.070
is happy.

00:11:03.070 --> 00:11:05.630
So of course this doesn't take
away all of your other game

00:11:05.630 --> 00:11:06.290
loading stuff.

00:11:06.290 --> 00:11:08.970
But basically by comparison
to JSON, it's like this.

00:11:08.970 --> 00:11:11.710
And if you're actually
looking at network size,

00:11:11.710 --> 00:11:14.630
it's like 400 times faster
than actually parsing the JSON.

00:11:14.630 --> 00:11:17.650
And if you're looking at
network stuff, it's huge.

00:11:17.650 --> 00:11:20.220
So once again,
anything we can do

00:11:20.220 --> 00:11:23.820
to make less network traffic,
to make the game smaller,

00:11:23.820 --> 00:11:27.520
to make the game load faster,
we know all of these things

00:11:27.520 --> 00:11:29.750
lead to better retention.

00:11:29.750 --> 00:11:30.250
All right.

00:11:30.250 --> 00:11:31.280
We also do audio.

00:11:31.280 --> 00:11:33.446
And I'm not going to get
into great deal about this.

00:11:33.446 --> 00:11:36.420
But mostly this deals with
sound bank management,

00:11:36.420 --> 00:11:39.030
some very cool things which
SDL doesn't normally do,

00:11:39.030 --> 00:11:41.660
and that's what we're
building our stuff on top of.

00:11:41.660 --> 00:11:43.977
We of course have an
animation framework.

00:11:43.977 --> 00:11:45.810
All this stuff we had
to build for Pie Noon.

00:11:45.810 --> 00:11:47.200
We actually build
performance tools.

00:11:47.200 --> 00:11:48.780
So in addition to the great
performance tools that

00:11:48.780 --> 00:11:51.470
are built into the platform
now, the stuff the indicate team

00:11:51.470 --> 00:11:53.290
is working on, we
have our own set here,

00:11:53.290 --> 00:11:56.430
which actually gives these
great graphs and visualizations

00:11:56.430 --> 00:11:58.350
to what's going on.

00:11:58.350 --> 00:12:00.780
And we actually build some
build scripts to do it.

00:12:00.780 --> 00:12:03.540
So again, this stuff
was all open sourced

00:12:03.540 --> 00:12:05.480
with the Pie Noon project.

00:12:05.480 --> 00:12:07.569
The question is, where
we go from there?

00:12:07.569 --> 00:12:08.235
[VIDEO PLAYBACK]

00:12:08.235 --> 00:12:10.026
-With this new release,
we want to show you

00:12:10.026 --> 00:12:11.760
how to take advantage
of the unique kinds

00:12:11.760 --> 00:12:13.712
of multi-screen game
experiences you can make.

00:12:13.712 --> 00:12:15.170
DAN GALPIN: So one
of the things we

00:12:15.170 --> 00:12:16.920
did is when we're looking
at Android TV, we said--

00:12:16.920 --> 00:12:18.961
-We turned our original
fast-paced pie throwing

00:12:18.961 --> 00:12:19.460
simulation--

00:12:19.460 --> 00:12:20.793
DAN GALPIN: I'll let them speak.

00:12:20.793 --> 00:12:22.080
---into a strategy game.

00:12:22.080 --> 00:12:24.320
You plan your moves in
secret on your phone,

00:12:24.320 --> 00:12:27.450
then watch the action
happen on your TV screen.

00:12:27.450 --> 00:12:29.180
Check out Pie Noon
on Google Play,

00:12:29.180 --> 00:12:31.500
and give multi-screen
gameplay a try.

00:12:31.500 --> 00:12:33.830
Then take a look at our
source code on GitHub

00:12:33.830 --> 00:12:37.870
to see how you can use nearby
connections in your own games.

00:12:37.870 --> 00:12:39.010
Happy gaming.

00:12:39.010 --> 00:12:40.439
[END PLAYBACK]

00:12:40.439 --> 00:12:42.480
DAN GALPIN: So one of the
things that we actually

00:12:42.480 --> 00:12:46.050
did to help Android TV, and
it's actually part of Play Games

00:12:46.050 --> 00:12:47.780
but only sort of
part of Play Games

00:12:47.780 --> 00:12:49.741
is actually called
Nearby Connections.

00:12:49.741 --> 00:12:51.990
And Nearby Connections allows
you to very, very easily

00:12:51.990 --> 00:12:53.790
use your phone as a controller.

00:12:53.790 --> 00:12:57.480
It allows you to go and find
other devices that are actually

00:12:57.480 --> 00:13:00.970
potential controllers,
that are near your TV.

00:13:00.970 --> 00:13:03.160
And of course, we
implemented this in Pie Noon

00:13:03.160 --> 00:13:04.920
as part of a second experience.

00:13:04.920 --> 00:13:06.430
And that's available
now as well.

00:13:06.430 --> 00:13:08.810
We also have a Cardboard
version of Pie Noon,

00:13:08.810 --> 00:13:09.910
which is pretty cool.

00:13:09.910 --> 00:13:12.000
I'm not going to
talk about that here.

00:13:12.000 --> 00:13:13.430
But it's a pretty
cool code base,

00:13:13.430 --> 00:13:15.888
that shows you a whole bunch
of different ways in which you

00:13:15.888 --> 00:13:18.780
can gauge users from
a fairly simple game.

00:13:18.780 --> 00:13:19.680
All right.

00:13:19.680 --> 00:13:20.820
So what's the future?

00:13:20.820 --> 00:13:23.750
So this is a preview
of what we're

00:13:23.750 --> 00:13:25.160
going to be shooting next.

00:13:25.160 --> 00:13:29.930
This is shot very, very low
resolution, off of my device

00:13:29.930 --> 00:13:31.840
just a few hours ago.

00:13:31.840 --> 00:13:33.820
And basically what
you see is we've

00:13:33.820 --> 00:13:35.730
taken the engine we
built for Pie Noon.

00:13:35.730 --> 00:13:38.440
We've actually added full
blown 3-D. We actually

00:13:38.440 --> 00:13:41.500
have skeletal animation
system built into it.

00:13:41.500 --> 00:13:42.120
And again.

00:13:42.120 --> 00:13:44.425
We're taking-- this is
a Cardboard based game

00:13:44.425 --> 00:13:45.800
and it's going to
be pretty cool.

00:13:45.800 --> 00:13:48.216
I'm not going to talk too much
about what we're doing next

00:13:48.216 --> 00:13:51.440
here, mostly because I don't
want to steal their thunder.

00:13:51.440 --> 00:13:54.080
But as an initial preview,
that's what's coming next.

00:13:54.080 --> 00:13:56.030
So again, we're taking
all these technologies

00:13:56.030 --> 00:13:58.920
and we're extending them
to build cooler stuff.

00:13:58.920 --> 00:14:01.770
Here's a whole
bunch of links where

00:14:01.770 --> 00:14:03.710
you can find out about it.

00:14:03.710 --> 00:14:05.600
And again, FlatBuffers
is really cool.

00:14:05.600 --> 00:14:07.420
I really recommend
taking a look at it.

00:14:07.420 --> 00:14:10.690
We actually have a C
sharp binding for it now.

00:14:10.690 --> 00:14:12.085
We have Java bindings for it.

00:14:12.085 --> 00:14:14.650
It is very, very cool.

00:14:14.650 --> 00:14:15.679
All right.

00:14:15.679 --> 00:14:17.970
I still haven't really talked
about much of the future.

00:14:17.970 --> 00:14:21.470
Let me talk about one more
thing before I get to that.

00:14:21.470 --> 00:14:24.170
How many of you know
about Firebase here?

00:14:24.170 --> 00:14:24.880
That's nice.

00:14:24.880 --> 00:14:25.780
I like that.

00:14:25.780 --> 00:14:27.720
OK, so Firebase is
actually something

00:14:27.720 --> 00:14:30.570
we acquired last year.

00:14:30.570 --> 00:14:32.640
And why did we acquire it?

00:14:32.640 --> 00:14:36.510
Because it was used in Nest
and because it was awesome.

00:14:36.510 --> 00:14:40.290
It is a very, very cool
product, that allows

00:14:40.290 --> 00:14:42.430
you to do all of these things.

00:14:42.430 --> 00:14:44.430
And it's used by a lot
of different companies

00:14:44.430 --> 00:14:46.230
to do real time stuff.

00:14:46.230 --> 00:14:46.820
So what is it?

00:14:46.820 --> 00:14:49.410
Well first of all, as its
name sounds, it's a database.

00:14:49.410 --> 00:14:52.780
It's a NoSQL data-store that
you interface with JSON,

00:14:52.780 --> 00:14:54.030
from a RESTful API.

00:14:54.030 --> 00:14:56.680
And most importantly,
it's a real time database.

00:14:56.680 --> 00:14:58.880
So as you make changes,
updates are automatically

00:14:58.880 --> 00:15:01.720
sent to every client
that's listening.

00:15:01.720 --> 00:15:03.340
And it's really,
really easy to use.

00:15:03.340 --> 00:15:04.720
Like seriously,
once you actually

00:15:04.720 --> 00:15:09.570
have set up a
Firebase instance, you

00:15:09.570 --> 00:15:11.950
can literally just set values
into it and start using it.

00:15:11.950 --> 00:15:14.510
So it is really awesome
for prototyping.

00:15:14.510 --> 00:15:16.250
And I actually,
even if this isn't

00:15:16.250 --> 00:15:19.210
the final backend you want to
use, although for me it is.

00:15:19.210 --> 00:15:22.855
It is really, really great
just to prototype stuff.

00:15:22.855 --> 00:15:24.730
And the other thing that
is cool that it does

00:15:24.730 --> 00:15:28.620
is it actually has both of the
mobile SDKs actually support

00:15:28.620 --> 00:15:29.720
synchronization.

00:15:29.720 --> 00:15:32.120
So if you go through
a tunnel, your data

00:15:32.120 --> 00:15:33.450
still gets sent up to Firebase.

00:15:33.450 --> 00:15:35.283
If you want to actually
build a full offline

00:15:35.283 --> 00:15:37.950
mode for your game, which is
really cool because it turns

00:15:37.950 --> 00:15:39.520
out that a lot of
people get really

00:15:39.520 --> 00:15:41.930
annoyed if your game
only works online.

00:15:41.930 --> 00:15:44.190
So this actually allows
you to do all of that.

00:15:44.190 --> 00:15:47.479
It has most of the hooks
to do that built into it.

00:15:47.479 --> 00:15:48.645
Of course, it supports auth.

00:15:48.645 --> 00:15:50.440
That's really important.

00:15:50.440 --> 00:15:54.230
And it also has a security model
that allows you to say, OK.

00:15:54.230 --> 00:15:56.110
I've got access to
this part of Firebase

00:15:56.110 --> 00:15:58.590
depending on how we auth.

00:15:58.590 --> 00:16:01.010
And it's in the cloud, as
you'd expect from something

00:16:01.010 --> 00:16:02.840
that we're hosting.

00:16:02.840 --> 00:16:04.570
It's production grade.

00:16:04.570 --> 00:16:06.940
It has things like
CDN cached assets

00:16:06.940 --> 00:16:10.900
as well that come with it, as
well as one click rollbacks,

00:16:10.900 --> 00:16:12.030
which is cool.

00:16:12.030 --> 00:16:15.040
So this is a multiplayer
version of "Asteroids."

00:16:15.040 --> 00:16:18.430
And this was just running in two
different tabs on my desktop.

00:16:18.430 --> 00:16:21.190
And you can see, even
for this, again this

00:16:21.190 --> 00:16:22.940
is not optimized to
play "Asteroids."

00:16:22.940 --> 00:16:25.670
I will say this firmly.

00:16:25.670 --> 00:16:36.580
It is not doing stuff like
using potentially lossy

00:16:36.580 --> 00:16:38.639
networking, lossy networking.

00:16:38.639 --> 00:16:40.430
But if you want to play
with this actually,

00:16:40.430 --> 00:16:42.460
you just go to
mmoasteroids@firebaseapp.com.

00:16:42.460 --> 00:16:45.540
Everyone in this room can
actually play together.

00:16:45.540 --> 00:16:48.250
It supports lots and lots of
simultaneous players blowing

00:16:48.250 --> 00:16:49.110
themselves up.

00:16:49.110 --> 00:16:51.735
And you can actually look at the
code and see how it was built.

00:16:51.735 --> 00:16:54.730
This was built in an
afternoon with Firebase.

00:16:54.730 --> 00:16:56.840
And it's pretty cool.

00:16:56.840 --> 00:16:57.340
All right.

00:16:57.340 --> 00:16:59.336
Actually I've got
more than this.

00:16:59.336 --> 00:17:01.210
I'd like to say, we--
because we haven't even

00:17:01.210 --> 00:17:02.467
got to the future yet, right?

00:17:02.467 --> 00:17:04.300
So let's talk a little
bit about the future.

00:17:04.300 --> 00:17:06.319
So this is really, really cool.

00:17:09.170 --> 00:17:12.109
You guys have seen the
Cardboard stuff upstairs.

00:17:12.109 --> 00:17:15.180
But this video here was
actually done by Volvo.

00:17:15.180 --> 00:17:18.440
And it was done in
partnership with Google.

00:17:18.440 --> 00:17:21.920
And it really
shows what it means

00:17:21.920 --> 00:17:28.109
to have the VR platform that has
absolutely no limits in terms

00:17:28.109 --> 00:17:30.830
of how easy it is
to get to people.

00:17:30.830 --> 00:17:34.840
So Goo-- so Volvo was actually
able to give anyone a Cardboard

00:17:34.840 --> 00:17:38.160
unit, get them into this
experience with the XC90

00:17:38.160 --> 00:17:39.195
right away.

00:17:39.195 --> 00:17:41.320
And you know what's great
about having an open spec

00:17:41.320 --> 00:17:42.950
like this too is
that we literally

00:17:42.950 --> 00:17:45.840
have people that are building
their own Cardboard units out

00:17:45.840 --> 00:17:49.690
of whatever boxes they
happen to have around.

00:17:49.690 --> 00:17:53.670
And of course, we're also
making a specification.

00:17:53.670 --> 00:17:55.520
We've actually
updated our Cardboard

00:17:55.520 --> 00:17:57.350
to Cardboard 2.0,
which is more rugged.

00:17:57.350 --> 00:17:59.710
It has better optics,
especially if you've

00:17:59.710 --> 00:18:01.120
seen the most recent ones.

00:18:01.120 --> 00:18:03.622
And it also uses
the touch screen,

00:18:03.622 --> 00:18:06.080
instead of using the magnet,
which was a brilliant solution

00:18:06.080 --> 00:18:08.740
if you saw the original,
which has better compatibility

00:18:08.740 --> 00:18:10.575
and reduced latency.

00:18:10.575 --> 00:18:12.950
Of course, you know about our
partnership with Viewmaster

00:18:12.950 --> 00:18:14.810
That's all been announced
to bring Cardboard

00:18:14.810 --> 00:18:16.390
to a whole new audience.

00:18:16.390 --> 00:18:21.531
So clearly VR is a big part of
the future of games at Google.

00:18:21.531 --> 00:18:23.780
But we're doing more than
that, because you can't just

00:18:23.780 --> 00:18:26.650
build a spec for
VR, you actually

00:18:26.650 --> 00:18:28.230
have to help build content.

00:18:28.230 --> 00:18:30.530
So if you-- how many of
you saw this at Google IO.

00:18:30.530 --> 00:18:34.510
But basically we partnered
with GoPro to build this rig.

00:18:34.510 --> 00:18:37.520
And then more importantly,
we build really, really cool

00:18:37.520 --> 00:18:40.960
software that takes that video
that's recorded by that ring

00:18:40.960 --> 00:18:44.067
and turns it into
true stereo VR video.

00:18:44.067 --> 00:18:45.900
And of course, once
you're built that video,

00:18:45.900 --> 00:18:47.510
you need a place to host it.

00:18:47.510 --> 00:18:51.070
So of course YouTube has
built in hosting for VR video

00:18:51.070 --> 00:18:53.630
with YouTube 360.

00:18:53.630 --> 00:18:55.217
And finally, if
you're building apps,

00:18:55.217 --> 00:18:56.800
you need to have a
place to find them.

00:18:56.800 --> 00:18:59.000
And it turns out that
place is Google Play.

00:18:59.000 --> 00:19:03.900
So we have marketing and
promotion for Cardboard

00:19:03.900 --> 00:19:05.460
apps today.

00:19:05.460 --> 00:19:09.860
So once again, this is
something that is really

00:19:09.860 --> 00:19:12.657
already happening, but it's just
getting more and more exciting

00:19:12.657 --> 00:19:14.240
as we see more and
more people jumping

00:19:14.240 --> 00:19:17.387
onto the bandwagon of VR.

00:19:17.387 --> 00:19:19.970
Now the next thing we're doing,
of course, is computer vision.

00:19:19.970 --> 00:19:22.344
How many of you got to play
with the Tango demonstrations

00:19:22.344 --> 00:19:23.410
upstairs?

00:19:23.410 --> 00:19:23.930
OK.

00:19:23.930 --> 00:19:26.096
I know some people might
be watching us and be like,

00:19:26.096 --> 00:19:27.730
what's going on upstairs?

00:19:27.730 --> 00:19:29.050
But it's really really cool.

00:19:29.050 --> 00:19:32.120
Because this is an exploration
into the future of computer

00:19:32.120 --> 00:19:33.330
vision.

00:19:33.330 --> 00:19:37.210
And what's exciting to me
is that we just recently

00:19:37.210 --> 00:19:41.160
made Project Tango development
kits available in Denmark,

00:19:41.160 --> 00:19:44.900
Finland, France, Germany,
Ireland, Italy, Norway, Sweden,

00:19:44.900 --> 00:19:47.610
Switzerland, and of
course, here in the UK.

00:19:47.610 --> 00:19:50.620
So we finally have
gotten these kits out

00:19:50.620 --> 00:19:53.854
to more of the rest of the
world, which is awesome.

00:19:53.854 --> 00:19:55.770
It's basically a technology
that gives devices

00:19:55.770 --> 00:19:58.060
a human scale understanding
of their surroundings.

00:19:58.060 --> 00:20:01.510
So there are three basic
technologies that it combines.

00:20:01.510 --> 00:20:05.740
One is it has motion tracking
and 6 degrees of freedom.

00:20:05.740 --> 00:20:07.340
It has depth
perception, so that it

00:20:07.340 --> 00:20:09.540
can read the depths
of its surrounding,

00:20:09.540 --> 00:20:13.640
which is important for mapping
3-D spaces and area learning.

00:20:13.640 --> 00:20:18.300
So this all combines
to build a view of what

00:20:18.300 --> 00:20:22.720
it sees, detailed and accurate
internal representation

00:20:22.720 --> 00:20:24.614
of its surroundings.

00:20:24.614 --> 00:20:26.780
And it can be used for
things like indoor WayFinding

00:20:26.780 --> 00:20:30.284
and augmented reality, and
also things like room capture

00:20:30.284 --> 00:20:30.950
and measurement.

00:20:30.950 --> 00:20:34.210
A lot of people are interested
in using this to build content.

00:20:34.210 --> 00:20:35.540
And so what can you do with it?

00:20:35.540 --> 00:20:39.630
Well, this is one of
those waves of innovation

00:20:39.630 --> 00:20:41.230
that may start with games.

00:20:41.230 --> 00:20:43.230
But it's going to
go way beyond that.

00:20:43.230 --> 00:20:45.610
Imagine being able to
scan in your furniture,

00:20:45.610 --> 00:20:47.560
and view it in a
possible new home.

00:20:47.560 --> 00:20:51.210
Or home furnishing ads or
sales that are linked to stuff

00:20:51.210 --> 00:20:53.570
like that, or being able to
quickly preview flooring,

00:20:53.570 --> 00:20:55.049
tiling, and other
jobs while doing

00:20:55.049 --> 00:20:57.590
things like generating estimates
and [? bill of ?] materials.

00:20:57.590 --> 00:20:59.760
All these kinds of
things are possible even

00:20:59.760 --> 00:21:01.720
beyond the gaming
applications of it,

00:21:01.720 --> 00:21:04.490
which means that
obviously people

00:21:04.490 --> 00:21:07.360
are going to want to have
this in their devices.

00:21:07.360 --> 00:21:07.860
OK.

00:21:07.860 --> 00:21:09.440
One final thing I
wanted to mention.

00:21:09.440 --> 00:21:12.860
I don't know how many of you
have heard of Project Soli?

00:21:12.860 --> 00:21:14.630
OK, well, I'll play
this video here.

00:21:14.630 --> 00:21:16.209
Because this is
pretty cool stuff.

00:21:16.209 --> 00:21:18.000
We actually talked
about this in Google IO.

00:21:18.000 --> 00:21:19.458
I'm not going to
say anything more.

00:21:19.458 --> 00:21:21.554
Other than to play the video.

00:21:21.554 --> 00:21:22.220
[VIDEO PLAYBACK]

00:21:22.220 --> 00:21:23.362
-My name is Ivan Poupyrev.

00:21:23.362 --> 00:21:25.570
And I work for advanced
technology and projects group

00:21:25.570 --> 00:21:27.550
at Google.

00:21:27.550 --> 00:21:29.700
The hand is the
ultimate input device.

00:21:29.700 --> 00:21:31.080
It's extremely precise.

00:21:31.080 --> 00:21:32.457
It's extremely fast.

00:21:32.457 --> 00:21:34.540
And it's very [INAUDIBLE]
for us to use it, right?

00:21:34.540 --> 00:21:37.170
Capturing the
possibilities of human hand

00:21:37.170 --> 00:21:39.390
was one of my passions.

00:21:39.390 --> 00:21:41.580
How can we take this
incredible capability,

00:21:41.580 --> 00:21:46.260
finesse of human actions,
finesse of using our hands,

00:21:46.260 --> 00:21:48.170
but apply it to
the virtual world?

00:21:50.930 --> 00:21:54.710
We use [? Radio ?] [? Free ?]
spectrum, which is radars,

00:21:54.710 --> 00:21:56.794
to truck human hand.

00:21:56.794 --> 00:21:58.960
The radars have been used
for many different things,

00:21:58.960 --> 00:22:02.560
to track cars, big objects,
satellites and planes.

00:22:02.560 --> 00:22:06.420
We're using them to track
micro motions, twitches

00:22:06.420 --> 00:22:09.549
of human hands, then use that
to interact with wearables,

00:22:09.549 --> 00:22:11.840
and [? internal ?] things,
and other computing devices.

00:22:15.237 --> 00:22:18.850
-Our team is focused on
taking radar hardware

00:22:18.850 --> 00:22:21.960
and turning it into
adjuster sensor.

00:22:21.960 --> 00:22:24.890
Radar is a technology
which transmits a radio

00:22:24.890 --> 00:22:28.420
wave towards a target, and
then the receiver of a radar

00:22:28.420 --> 00:22:32.370
intercepts the reflected
energy from that target.

00:22:32.370 --> 00:22:35.250
The reason why we're able to
interpret so much from this one

00:22:35.250 --> 00:22:38.490
radar signal is because of
the full gesture recognition

00:22:38.490 --> 00:22:42.270
pipeline that we've built. The
various stages of this pipeline

00:22:42.270 --> 00:22:46.010
are designed to extract
specific gesture information

00:22:46.010 --> 00:22:48.830
from this one radar signal
that we receive at a high frame

00:22:48.830 --> 00:22:51.320
rate.

00:22:51.320 --> 00:22:54.690
-From these strange foreign
range Doppler signals,

00:22:54.690 --> 00:22:59.202
we're actually
interpreting human intent.

00:22:59.202 --> 00:23:01.630
-Radar has some
unique properties

00:23:01.630 --> 00:23:04.330
when compared to
cameras, for example.

00:23:04.330 --> 00:23:07.550
It has very high
positional accuracy,

00:23:07.550 --> 00:23:09.675
which means that you can
sense the tiniest motions.

00:23:12.670 --> 00:23:14.634
-We arrived at this
idea of virtual tools

00:23:14.634 --> 00:23:16.050
because we recognized
that there's

00:23:16.050 --> 00:23:19.540
certain archetypes of
controls, like a volume knob

00:23:19.540 --> 00:23:23.610
or physical slider,
volume slider.

00:23:23.610 --> 00:23:27.260
Imagine a button between your
thumb and your index finger.

00:23:27.260 --> 00:23:30.210
And the button is not
there, but pressing

00:23:30.210 --> 00:23:31.980
this is a very clear action.

00:23:31.980 --> 00:23:34.140
And there's a natural
physical haptic feedback

00:23:34.140 --> 00:23:36.190
that occurs as you
perform that action.

00:23:36.190 --> 00:23:39.520
The hand can both
embody that virtual tool

00:23:39.520 --> 00:23:42.320
and it can also be acting
on that virtual tool

00:23:42.320 --> 00:23:43.260
at the same time.

00:23:43.260 --> 00:23:45.500
So if we can
recognize that action,

00:23:45.500 --> 00:23:48.420
we have an interesting
direction for interacting

00:23:48.420 --> 00:23:50.620
with technology.

00:23:50.620 --> 00:23:54.440
-So when we started this
project, me and my team,

00:23:54.440 --> 00:23:57.100
we looked at the project idea.

00:23:57.100 --> 00:23:59.650
And we thought, are we
going to make it or not?

00:23:59.650 --> 00:24:00.680
We don't know.

00:24:00.680 --> 00:24:03.180
But we have to do it,
because unless you do it,

00:24:03.180 --> 00:24:04.840
you don't know.

00:24:04.840 --> 00:24:08.512
-What I think I'm most proud
of about our project, is we

00:24:08.512 --> 00:24:11.670
have pushed the processing
power of the electronics

00:24:11.670 --> 00:24:14.780
itself further out to do
the sensing part for us.

00:24:17.650 --> 00:24:20.580
-The radar has a properties
which no other technology has.

00:24:20.580 --> 00:24:23.595
It can work through materials,
can embed into objects.

00:24:23.595 --> 00:24:25.970
It's allowed us to track really
precise motions, and what

00:24:25.970 --> 00:24:27.930
is most exciting
about it, is that you

00:24:27.930 --> 00:24:31.560
can shrink the entire radar
and put it in a tiny chip.

00:24:31.560 --> 00:24:34.530
That's what makes this
approach so promising.

00:24:34.530 --> 00:24:36.000
It's extremely reliable.

00:24:36.000 --> 00:24:37.440
There's nothing to break.

00:24:37.440 --> 00:24:38.580
There's no moving parts.

00:24:38.580 --> 00:24:39.354
There's no lenses.

00:24:39.354 --> 00:24:40.020
There's nothing.

00:24:40.020 --> 00:24:41.522
It's a piece of
sound on your board.

00:24:44.152 --> 00:24:46.610
-Now we're at the point where
we have the hardware where we

00:24:46.610 --> 00:24:48.790
can sense these interactions.

00:24:48.790 --> 00:24:50.420
And we can put them to work.

00:24:50.420 --> 00:24:53.230
We can explore how
well they work,

00:24:53.230 --> 00:24:54.990
and how well they
might work in products.

00:25:00.170 --> 00:25:03.184
-Blows your mind, usually
when you see things people do.

00:25:03.184 --> 00:25:05.100
And that's what I'm
really looking forward to.

00:25:05.100 --> 00:25:06.670
I'm really looking
forward to releasing

00:25:06.670 --> 00:25:07.670
to developing community.

00:25:07.670 --> 00:25:11.550
And I really want them to be
excited and motivated to do

00:25:11.550 --> 00:25:15.880
something cool with it, right?

00:25:15.880 --> 00:25:17.644
[END PLAYBACK]

00:25:17.644 --> 00:25:18.560
DAN GALPIN: All right.

00:25:18.560 --> 00:25:23.260
So to conclude, from the
evolution of advanced analytics

00:25:23.260 --> 00:25:25.870
to help your business from
play games you've heard about

00:25:25.870 --> 00:25:28.430
in previous talks, to
leveraging your Android

00:25:28.430 --> 00:25:32.190
investment across phones,
TV, VR, and even wearables,

00:25:32.190 --> 00:25:33.980
to technology that
helps you make better

00:25:33.980 --> 00:25:35.580
games with native
android tooling

00:25:35.580 --> 00:25:38.670
and open source game tech
from fun propulsion labs,

00:25:38.670 --> 00:25:41.570
to power a Firebase
real time cloud,

00:25:41.570 --> 00:25:44.880
and the future of computer
vision and sensor hardware.

00:25:44.880 --> 00:25:48.240
So Google's future
and your future

00:25:48.240 --> 00:25:50.380
have definitely got game.

00:25:50.380 --> 00:25:52.310
And now really, thank you.

00:25:52.310 --> 00:25:55.610
[APPLAUSE]

00:25:55.610 --> 00:25:57.160
[MUSIC PLAYING]

