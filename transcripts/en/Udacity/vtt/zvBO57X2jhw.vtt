WEBVTT
Kind: captions
Language: en

00:00:00.090 --> 00:00:02.810
The image backing a canvas is represented in

00:00:02.810 --> 00:00:06.140
Javascript with an Image Data object.

00:00:06.140 --> 00:00:10.480
It contains values for the width, and height of the source image in pixels,

00:00:10.480 --> 00:00:15.110
along with the data array containing the red, green, blue and

00:00:15.110 --> 00:00:17.120
alpha values for each pixel.

00:00:17.120 --> 00:00:22.850
The data property is usually represented by a U int eight clamped array.

00:00:22.850 --> 00:00:25.180
Now I know that sounds a little bit confusing.

00:00:25.180 --> 00:00:26.750
Let's break it down a bit.

00:00:26.750 --> 00:00:32.400
The U means that their rate is unsigned or contains only positive values.

00:00:32.400 --> 00:00:36.258
Int eight indicates that it will store 8-bit numbers.

00:00:36.258 --> 00:00:40.586
8-bit positive numbers range from zero to 255.

00:00:40.586 --> 00:00:43.540
If JavaScript was making it easy for

00:00:43.540 --> 00:00:48.980
us, the data for one pixel would be separated from all the others like this.

00:00:48.980 --> 00:00:53.940
Instead, it's one giant list you have to parse when you apply effects.

00:00:53.940 --> 00:00:58.790
We can retrieve or modify the image data by calling one of these functions.

00:00:58.790 --> 00:01:04.000
Create image data initializes a blank image data object that you can modify.

00:01:04.000 --> 00:01:10.110
Getimagedata and putimagedata will retrieve or store data to a backing canvas.

00:01:10.110 --> 00:01:12.430
So let's start with something simple.

00:01:12.430 --> 00:01:14.840
Let's say we wanted to create an image and

00:01:14.840 --> 00:01:18.890
make every tenth pixel a solid green color.

00:01:18.890 --> 00:01:21.170
What code will we have to write to do that?

00:01:21.170 --> 00:01:22.970
After you're finished, click here when you're done.

