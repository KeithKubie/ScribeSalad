WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:01.510
One of the considerations you have for

00:00:01.510 --> 00:00:03.530
wearables is that some
watches are round,

00:00:03.530 --> 00:00:06.870
and this is a new screen shape that
has never been dealt with before.

00:00:06.870 --> 00:00:10.210
So if you're designing a wearable app,
you could have a round watch, or

00:00:10.210 --> 00:00:11.270
a square watch.

00:00:11.270 --> 00:00:12.810
There are two ways to deal with this.

00:00:12.810 --> 00:00:16.870
You could design separate layouts for
round, and square watches.

00:00:16.870 --> 00:00:20.670
Or you could design everything for
a square, and use what we call a box

00:00:20.670 --> 00:00:24.710
insert layout to ensure that the content
always fits within the circle.

00:00:24.710 --> 00:00:27.820
The down side is that it wastes
this space, on the edges.

00:00:27.820 --> 00:00:31.060
The nice part about box insert
layout is that it provides a box for

00:00:31.060 --> 00:00:32.250
your app to draw in, and

00:00:32.250 --> 00:00:36.180
it promises that it will never make
the square leak outside the round area.

00:00:36.180 --> 00:00:38.280
There is a sample code
delayed confirmation,

00:00:38.280 --> 00:00:39.650
that uses box insert layout.

00:00:39.650 --> 00:00:41.598
Let's start the sample up.

00:00:41.598 --> 00:00:43.444
File.
Import Sample.

00:00:43.444 --> 00:00:45.278
Delayed Confirmation.

00:00:45.278 --> 00:00:45.975
Next.

00:00:45.975 --> 00:00:48.608
And then,,
create the sample with the defaults.

00:00:48.608 --> 00:00:49.970
The sample is a bit tricky to run,

00:00:49.970 --> 00:00:53.190
since it was not meant to be used
without the phone app triggering it off.

00:00:53.190 --> 00:00:56.170
You cannot run it,
using the green play button like usual.

00:00:56.170 --> 00:00:59.679
If you try to run it, it'll prompt you
to select the default activity, but

00:00:59.679 --> 00:01:00.638
it can't find one.

00:01:00.638 --> 00:01:02.425
This is the error
message that you'll get.

00:01:02.425 --> 00:01:05.569
So to fix this, we need to load
up the Android manifest file, and

00:01:05.569 --> 00:01:07.150
make a correction.

00:01:07.150 --> 00:01:11.120
We add android exported equals true for
the activity, and

00:01:11.120 --> 00:01:12.955
now it will be able to be found.

00:01:12.955 --> 00:01:16.640
So we're going to run it,
we also specify the default activity.

00:01:16.640 --> 00:01:20.610
So we select the Main Activity here,
and now we can run it on the device.

00:01:20.610 --> 00:01:22.080
We select that device, and we hit OK.

00:01:23.200 --> 00:01:26.450
So you can see there's an added padding
to the top for the round display, but

00:01:26.450 --> 00:01:27.890
not anywhere else.

00:01:27.890 --> 00:01:30.501
Let's open up the layout
main_activity.xml.

00:01:30.501 --> 00:01:33.729
You can see there is an app
layout box equals top here.

00:01:33.729 --> 00:01:37.510
If you change it to all,
it will box all sides of the display.

00:01:37.510 --> 00:01:38.470
If you set it to none, or

00:01:38.470 --> 00:01:41.440
forget to add this,
the box insert layout will do nothing.

00:01:41.440 --> 00:01:43.180
So, make sure you get this right.

00:01:43.180 --> 00:01:44.358
Let's run it again, now.

00:01:44.358 --> 00:01:49.373
After making this change, you can see
it working, and now boxing all sides.

00:01:49.373 --> 00:01:52.620
An easy, but inefficient way of
designing is to always design for

00:01:52.620 --> 00:01:53.564
a round shape, and

00:01:53.564 --> 00:01:57.190
never ever put anything in any
of the corners on the edges.

00:01:57.190 --> 00:01:59.948
This is easy because you only
need to maintain a single layout.

00:01:59.948 --> 00:02:03.700
However, the downside is that the unused
corners on the square watch might look

00:02:03.700 --> 00:02:05.381
weird, and it waste a lot of space.

00:02:05.381 --> 00:02:07.380
So, this is probably not a great idea.

00:02:07.380 --> 00:02:09.758
Finally, the most complete way
to do layouts for round and

00:02:09.758 --> 00:02:12.550
square, is to use WatchViewStub.

00:02:12.550 --> 00:02:14.980
This layout will inflate
either the rectLayout, or

00:02:14.980 --> 00:02:17.690
the roundLayout depending
on the screen shape.

00:02:17.690 --> 00:02:20.350
You can specify two
separate layout files, and

00:02:20.350 --> 00:02:23.288
do a completely independent layout for
both types.

00:02:23.288 --> 00:02:26.836
The sample that we compiled, and
ran at the start of this lesson used

00:02:26.836 --> 00:02:30.832
WatchViewStub to show either hollow
round world, or hollow square world.

00:02:30.832 --> 00:02:34.871
The catch with this layout is that you
need to carefully maintain both layouts,

00:02:34.871 --> 00:02:37.720
making sure that the same IDs
are present in both files.

