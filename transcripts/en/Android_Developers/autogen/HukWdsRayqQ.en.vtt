WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:02.140
 Adam Chambi: Hello, my name is Adam Chambi, 

00:00:02.140 --> 00:00:04.940
 I am the product manager of the Google Cast software development group 

00:00:04.940 --> 00:00:07.590
 And Cast extensions with OEM TV partners. 

00:00:07.590 --> 00:00:08.701
 Sasha is here with me. 

00:00:08.701 --> 00:00:10.450
 Sasha Brouter: I'm Sacha Brouter. 

00:00:10.450 --> 00:00:12.840
 I'm the head of the Android TV team, 

00:00:12.840 --> 00:00:15.150
 This is not my Twitter account. 

00:00:15.150 --> 00:00:17.890
 So be gentle with whom you will communicate. 

00:00:21.310 --> 00:00:24.190
 Who among you is here for the session, 

00:00:24.190 --> 00:00:26.860
 It is among you in this room to order 

00:00:26.860 --> 00:00:29.750
 Shadow and air conditioning? 

00:00:29.750 --> 00:00:30.960
 Well, no hand raised. 

00:00:30.960 --> 00:00:34.200
 Who are you here to get free devices? 

00:00:34.200 --> 00:00:34.700
 very good, 

00:00:34.700 --> 00:00:36.557
 Because there are no free devices. 

00:00:36.557 --> 00:00:38.140
 If we talk to you a little 

00:00:38.140 --> 00:00:40.011
 Today for the living room. 

00:00:40.011 --> 00:00:43.010
 Adam will talk about Cast, and I'll talk shortly afterwards 

00:00:43.010 --> 00:00:43.810
 About Android TV. 

00:00:43.810 --> 00:00:45.099
 Here is Adam. 

00:00:45.099 --> 00:00:45.890
 ADAM CHAMBI: Great 

00:00:45.890 --> 00:00:48.460
 Well, we'll talk about building built-in experiences 

00:00:48.460 --> 00:00:49.500
 For the living room. 

00:00:49.500 --> 00:00:53.507
 Many of you may not think that the chances of success are great. 

00:00:53.507 --> 00:00:55.090
 But let me tell you about a scenario 

00:00:55.090 --> 00:00:56.990
 You may have passed it. 

00:00:56.990 --> 00:01:00.430
 Millions of people will return to their homes tonight or tomorrow 

00:01:00.430 --> 00:01:02.380
 They will turn on the TV. 

00:01:02.380 --> 00:01:04.780
 If they are not lucky at all, 

00:01:04.780 --> 00:01:08.770
 They may end up seeing between 5 to 7 loops 

00:01:08.770 --> 00:01:12.710
 One of the worst serial reality exists. 

00:01:12.710 --> 00:01:14.710
 The scary thing is that you often 

00:01:14.710 --> 00:01:17.220
 You know the serial I'm talking about, 

00:01:17.220 --> 00:01:20.650
 Or you have thought of three to four candidates. 

00:01:20.650 --> 00:01:23.620
 Today we talk about experience 

00:01:23.620 --> 00:01:25.160
 It should be easier for consumers 

00:01:25.160 --> 00:01:27.700
 From running TV and struggling to watch something. 

00:01:27.700 --> 00:01:29.730
 Today we are talking about our perception 

00:01:29.730 --> 00:01:34.100
 For the living room, which Google Cast unites. 

00:01:34.100 --> 00:01:37.580
 Google Cast is a technology that connects mobile phones 

00:01:37.580 --> 00:01:41.260
 Owned by billions of people, with entertainment. 

00:01:41.260 --> 00:01:43.680
 Whether they're extended devices like Chrome Cast, 

00:01:43.680 --> 00:01:46.170
 Or built-in devices such as Android TV 

00:01:46.170 --> 00:01:48.300
 Or what we'll talk about soon, Cast TV. 

00:01:48.300 --> 00:01:51.340
 What these devices are doing is that they bring entertainment from the smallest 

00:01:51.340 --> 00:01:54.090
 Screens that you own, to the most beautiful screens 

00:01:54.090 --> 00:01:55.490
 In your home. 

00:01:55.490 --> 00:01:58.440
 And sound to the best speakers you own. 

00:01:58.440 --> 00:02:00.300
 More specifically, if that were not the case 

00:02:00.300 --> 00:02:03.760
 A bit confusing for some, Google Cast is focused 

00:02:03.760 --> 00:02:07.070
 On the mobile phone experience, take mobile web applications 

00:02:07.070 --> 00:02:10.490
 And expand its content to screens and speakers 

00:02:10.490 --> 00:02:11.430
 Larger. 

00:02:11.430 --> 00:02:14.716
 So focus on this technology if you are a developer of mobile applications. 

00:02:14.716 --> 00:02:17.720
 Android TV focuses on transferring the full capabilities of Android 

00:02:17.720 --> 00:02:20.620
 And achieved in the form of a television, is controlled 

00:02:20.620 --> 00:02:22.852
 Via a standard controller. 

00:02:22.852 --> 00:02:25.310
 Sasha will tell you more about Android N updates 

00:02:25.310 --> 00:02:26.351
 Within a few minutes. 

00:02:29.053 --> 00:02:30.886
 The aim of the Cast experience for those who did not 

00:02:30.886 --> 00:02:33.350
 They tell you, centered around the idea 

00:02:33.350 --> 00:02:36.080
 Send button, which moves applications 

00:02:36.080 --> 00:02:40.840
 Which you know and love to a large screen. 

00:02:40.840 --> 00:02:43.050
 So when you press this button, the video will be transferred 

00:02:43.050 --> 00:02:44.190
 To the screen. 

00:02:44.190 --> 00:02:46.510
 Or when you press this button, it moves the music 

00:02:46.510 --> 00:02:48.370
 To your speakers. 

00:02:48.370 --> 00:02:51.150
 Millions of people like it. 

00:02:51.150 --> 00:02:53.450
 Also amazing in this matter, is that we did 

00:02:53.450 --> 00:02:54.961
 Enable thousands of applications. 

00:02:54.961 --> 00:02:56.960
 To identify the apps we've enabled, 

00:02:56.960 --> 00:02:59.490
 Visit the link: g.co/castapps 

00:02:59.490 --> 00:03:02.650
 These are the same applications that users upload 

00:03:02.650 --> 00:03:06.380
 And use them on their mobile phones, with Cast added. 

00:03:06.380 --> 00:03:09.960
 The user does not have to do anything for applications. 

00:03:09.960 --> 00:03:12.510
 For everyone in this room, this is often enough. 

00:03:12.510 --> 00:03:15.360
 Where you can discover a way to make this experience 

00:03:15.360 --> 00:03:17.330
 They work excellently, but there are many who 

00:03:17.330 --> 00:03:20.480
 They did not attend an I / O conference or in different places 

00:03:20.480 --> 00:03:23.580
 They view broadcasting technology as very far-fetched. 

00:03:23.580 --> 00:03:26.860
 They see it as an HDMI link and they say 

00:03:26.860 --> 00:03:29.540
 They do not want to connect any device to their devices. 

00:03:29.540 --> 00:03:32.910
 Or they look at the experience of switching portals, 

00:03:32.910 --> 00:03:35.580
 They say this is a disastrous recipe. 

00:03:35.580 --> 00:03:39.060
 Because everything works before I press the input button. 

00:03:39.060 --> 00:03:40.780
 But when you press the input button, 

00:03:40.780 --> 00:03:42.830
 Something else happens. There is a possibility 

00:03:42.830 --> 00:03:44.830
 One of four to do it wrong, 

00:03:44.830 --> 00:03:47.530
 Due to the presence of four entrances in the television. 

00:03:47.530 --> 00:03:51.120
 So we took this message seriously and worked with a team of 

00:03:51.120 --> 00:03:55.752
 Vizio to build the first built-in TV with the Cast feature. 

00:03:55.752 --> 00:03:58.330
 In particular, this one. 

00:03:58.330 --> 00:04:00.510
 This beautiful screen of P series 

00:04:00.510 --> 00:04:04.520
 Supports 4K transmission and Dolby image transmission. 

00:04:04.520 --> 00:04:07.480
 This is the first built-in device to do this. 

00:04:07.480 --> 00:04:08.900
 It is a wonderful beauty. 

00:04:08.900 --> 00:04:12.060
 We can also see them in the protection mode. 

00:04:12.060 --> 00:04:16.510
 What we did was make the same software development package 

00:04:16.510 --> 00:04:20.610
 Used by developers capable of enabling television 

00:04:20.610 --> 00:04:22.160
 From cast to Cast. 

00:04:22.160 --> 00:04:24.390
 So once you hit the Cast button, 

00:04:24.390 --> 00:04:27.080
 Instead of wishing you had been hit by the doorway, 

00:04:27.080 --> 00:04:29.630
 It is an unmatched experience for the user. 

00:04:29.630 --> 00:04:31.620
 Vizio applied this technique 

00:04:31.620 --> 00:04:36.020
 On TVs as well as speakers and audio tapes. 

00:04:36.020 --> 00:04:38.340
 We are also proud to announce today 

00:04:38.340 --> 00:04:40.740
 About Google Cast TV. 

00:04:40.740 --> 00:04:45.760
 Extending the spread of this technology to Toshiba, Philips and Magnavox products 

00:04:45.760 --> 00:04:49.250
 And Polariod, which convey this technique 

00:04:49.250 --> 00:04:52.100
 To millions of new users. 

00:04:52.100 --> 00:04:53.890
 As for the developer community, 

00:04:53.890 --> 00:04:57.380
 Now you can reach millions of end points, 

00:04:57.380 --> 00:05:00.570
 Not only on Chrome Cast or Android TV, 

00:05:00.570 --> 00:05:04.200
 But in a class of devices that integrate with the Cast feature alone, 

00:05:04.200 --> 00:05:05.300
 Just Cast. 

00:05:05.300 --> 00:05:07.230
 The wonderful thing about it is that it is 

00:05:07.230 --> 00:05:12.120
 Same transmission feature you talked about in the first experiment. 

00:05:12.120 --> 00:05:14.280
 Many, if not all, of these devices, 

00:05:14.280 --> 00:05:16.620
 Another feature will include, an idea 

00:05:16.620 --> 00:05:18.380
 It will be enabled by the Cast button. 

00:05:18.380 --> 00:05:20.290
 That is, when you press this button, 

00:05:20.290 --> 00:05:24.570
 The TV will run without the need for the user to do anything. 

00:05:24.570 --> 00:05:27.830
 So, instead of having to find the controller and the TV, 

00:05:27.830 --> 00:05:29.930
 Wishing to be connected to the right entrance, will be 

00:05:29.930 --> 00:05:33.640
 Just click the Cast button to see what you love. 

00:05:33.640 --> 00:05:36.480
 If such a user trip, draw the attention of a larger number of individuals 

00:05:36.480 --> 00:05:38.747
 To the developer community. 

00:05:38.747 --> 00:05:40.580
 But what is also proud of his announcement today 

00:05:40.580 --> 00:05:45.550
 The new Google Cast software development group, this is our first major update 

00:05:45.550 --> 00:05:46.850
 A few years ago. 

00:05:46.850 --> 00:05:49.010
 It is based on many observations 

00:05:49.010 --> 00:05:52.810
 Which tells us how Cast works. 

00:05:52.810 --> 00:05:54.690
 One of the things you might think is-- 

00:05:54.690 --> 00:05:57.680
 I explained a very simple user experience model, 

00:05:57.680 --> 00:06:00.670
 When you press a small button, the video moves from a small device 

00:06:00.670 --> 00:06:02.950
 To a large device. 

00:06:02.950 --> 00:06:06.270
 There are a lot of special cases, culprits and things 

00:06:06.270 --> 00:06:09.470
 Which developers should think about in that experience. 

00:06:09.470 --> 00:06:11.910
 Historically and honestly our software development group has made 

00:06:11.910 --> 00:06:14.620
 Guided you to think about these things. 

00:06:14.620 --> 00:06:17.260
 What we seek in our new group, which will be issued 

00:06:17.260 --> 00:06:20.160
 In the next few weeks, is that we bear the burden 

00:06:20.160 --> 00:06:23.810
 Apply all of Cast's user experience guidelines 

00:06:23.810 --> 00:06:26.710
 Which are these side cases, better management 

00:06:26.710 --> 00:06:28.290
 Practices. 

00:06:28.290 --> 00:06:31.270
 In addition, we believe that we can significantly reduce the development period, 

00:06:31.270 --> 00:06:33.500
 Not only provide it, but also provide 

00:06:33.500 --> 00:06:36.580
 The right abstraction between what you develop and what you provide 

00:06:36.580 --> 00:06:37.935
 Cast Software Development Group. 

00:06:37.935 --> 00:06:39.950
 I'll explain it to you a bit. 

00:06:39.950 --> 00:06:43.360
 For more information on all of this, visit our conversation at 9 am 

00:06:43.360 --> 00:06:45.685
 Friday, if you do not wake up at nine 

00:06:45.685 --> 00:06:49.120
 On Fridays, the conversation will be recorded. 

00:06:49.120 --> 00:06:52.870
 I'll explain a bit about the Cast life cycle 

00:06:52.870 --> 00:06:56.761
 If you do not attend Friday, it consists of four basic steps, 

00:06:56.761 --> 00:06:59.010
 Three of them are realized almost all the time and one 

00:06:59.010 --> 00:07:00.280
 Somewhat optional. 

00:07:00.280 --> 00:07:01.790
 The first is discovery, try 

00:07:01.790 --> 00:07:05.760
 Find out if I have a TV or Chromecast, 

00:07:05.760 --> 00:07:08.897
 Do I have Android TV on my network? 

00:07:08.897 --> 00:07:11.480
 This is an attempt to determine how to detect devices again. 

00:07:11.480 --> 00:07:13.820
 The next step is to contact them. 

00:07:13.820 --> 00:07:16.570
 And running the so-called receiver application. 

00:07:16.570 --> 00:07:18.450
 The third step is control, 

00:07:18.450 --> 00:07:21.650
 Because in the Cast model all the video and broadcast is directed 

00:07:21.650 --> 00:07:24.670
 Directly from the cloud storage to the device 

00:07:24.670 --> 00:07:28.010
 You send small messages back and forth. 

00:07:28.010 --> 00:07:30.120
 Historically this has been confusing, 

00:07:30.120 --> 00:07:31.952
 Because if it's done correctly, it's excellent. 

00:07:31.952 --> 00:07:33.910
 If not done correctly, there is a great difficulty 

00:07:33.910 --> 00:07:36.340
 In reconnecting, when you lose wireless connectivity, 

00:07:36.340 --> 00:07:38.330
 Or if the user left and then returned, 

00:07:38.330 --> 00:07:40.114
 Or when you change the network. 

00:07:40.114 --> 00:07:41.530
 Some of these steps may be 

00:07:41.530 --> 00:07:46.110
 Very complicated for the end-user experience. 

00:07:46.110 --> 00:07:48.460
 We also made it complicated for the developer. 

00:07:48.460 --> 00:07:51.320
 We have made you aware of each step 

00:07:51.320 --> 00:07:54.280
 In this process. 

00:07:54.280 --> 00:07:57.960
 So the life cycle of your applications is equal to the life cycle of our addition. 

00:07:57.960 --> 00:07:59.940
 At first, it's simple 

00:07:59.940 --> 00:08:03.130
 You may be invited to the Cast software development group and copy some scripts 

00:08:03.130 --> 00:08:04.910
 Basic to your applications. 

00:08:04.910 --> 00:08:07.370
 When you do this for the first time, 

00:08:07.370 --> 00:08:08.700
 It's very easy. 

00:08:08.700 --> 00:08:12.620
 However, if we make any modifications or updates, 

00:08:12.620 --> 00:08:16.080
 It becomes very difficult for you to manage the two 

00:08:16.080 --> 00:08:17.480
 Start making changes, 

00:08:17.480 --> 00:08:20.200
 And also external factors that affect both 

00:08:20.200 --> 00:08:22.160
 These options. 

00:08:22.160 --> 00:08:23.820
 What we did in the new group, 

00:08:23.820 --> 00:08:26.910
 Is that we have implemented a much better abstraction, 

00:08:26.910 --> 00:08:30.820
 Where Cast transfers status, 

00:08:30.820 --> 00:08:35.409
 It also provides default user interfaces for this very unique type of interaction model 

00:08:35.409 --> 00:08:38.760
 Between the phone and a larger device. 

00:08:38.760 --> 00:08:42.350
 More specifically, we are offering you two main areas 

00:08:42.350 --> 00:08:44.750
 Versus case management and user experience. 

00:08:44.750 --> 00:08:47.760
 In case management, you will now find what is called the Cast Context. 

00:08:47.760 --> 00:08:50.570
 It is a single layer 

00:08:50.570 --> 00:08:54.350
 Manages all phases of the situation, from discovery 

00:08:54.350 --> 00:08:57.060
 Through calling and even launching the application 

00:08:57.060 --> 00:08:57.740
 receiver. 

00:08:57.740 --> 00:09:00.306
 We also offer an optional reconnection service, 

00:09:00.306 --> 00:09:01.930
 For those who do not want you to deal 

00:09:01.930 --> 00:09:04.750
 With an attempt to discover if it is still there 

00:09:04.750 --> 00:09:07.474
 Chromecast or Cast TV is still connected to the network. 

00:09:07.474 --> 00:09:09.140
 This is an optional service because some of you 

00:09:09.140 --> 00:09:11.350
 Has already developed a lot in this area. 

00:09:11.350 --> 00:09:14.010
 So you can choose to use it or not. 

00:09:14.010 --> 00:09:16.650
 In terms of user experience, we now provide it 

00:09:16.650 --> 00:09:19.050
 The user clicks the Cast button, 

00:09:19.050 --> 00:09:23.390
 All the different Cast steps beyond that click, 

00:09:23.390 --> 00:09:25.806
 So do not worry about callbacks 

00:09:25.806 --> 00:09:28.430
 Try to discover the user's status, 

00:09:28.430 --> 00:09:31.000
 Did he enter or exit this flow? 

00:09:31.000 --> 00:09:33.970
 We also added for optional use 

00:09:33.970 --> 00:09:35.800
 What we call the expanded controller 

00:09:35.800 --> 00:09:39.254
 And microcontroller, which are part of our user experience guidelines. 

00:09:39.254 --> 00:09:40.670
 In addition to our philosophy that 

00:09:40.670 --> 00:09:44.920
 What is within the user experience guidelines, the group must provide. 

00:09:44.920 --> 00:09:46.990
 We will see this in the next few slides. 

00:09:46.990 --> 00:09:50.370
 For the new Cast button - and as you can see there are Android and iOS, 

00:09:50.370 --> 00:09:53.820
 This new button is fully provided by our software development kit. 

00:09:53.820 --> 00:09:55.320
 In an interview on Friday, we will talk 

00:09:55.320 --> 00:09:57.220
 Add a Cast button 

00:09:57.220 --> 00:10:00.460
 And all media broadcast details. 

00:10:00.460 --> 00:10:04.380
 The software development group now fully supports drawing and management 

00:10:04.380 --> 00:10:06.910
 All roots, including the highest level to see what 

00:10:06.910 --> 00:10:09.190
 Which you should do with the background, then 

00:10:09.190 --> 00:10:11.830
 The next stage (B) to describe the procedure 

00:10:11.830 --> 00:10:13.080
 Which the user will do. 

00:10:13.080 --> 00:10:16.590
 The third stage (C), a specific device selection, 

00:10:16.590 --> 00:10:17.653
 And stage (D) it may be 

00:10:18.716 --> 00:10:19.780
 Nothing happens on this device. 

00:10:19.780 --> 00:10:23.079
 You do not have to worry about any of these situations at all. 

00:10:23.079 --> 00:10:24.620
 You basically have a software method 

00:10:24.620 --> 00:10:26.760
 To learn which color you should have the Cast button, 

00:10:26.760 --> 00:10:28.670
 It is ready. 

00:10:28.670 --> 00:10:30.990
 The next part we did was we built 

00:10:30.990 --> 00:10:33.030
 Controllers are adjustable again. 

00:10:33.030 --> 00:10:34.700
 So at the bottom of the screen, you'll see 

00:10:34.700 --> 00:10:39.489
 A microcontroller, a microcontroller for play / pause 

00:10:39.489 --> 00:10:41.280
 But you can already select any buttons 

00:10:41.280 --> 00:10:43.250
 More useful to your application. 

00:10:43.250 --> 00:10:45.580
 This always allows the user 

00:10:45.580 --> 00:10:48.230
 Control the broadcast. 

00:10:48.230 --> 00:10:50.220
 If you have a direct transfer application or music 

00:10:50.220 --> 00:10:53.000
 I was very interested in moving to the next or the buttons of admiration 

00:10:53.000 --> 00:10:55.490
 Or lack of admiration or the buttons of the heart and star, 

00:10:55.490 --> 00:10:58.390
 This was the most important thing for your application, 

00:10:58.390 --> 00:11:00.290
 You can put it in the microcontroller. 

00:11:00.290 --> 00:11:02.650
 We also offer an optional extended controller, 

00:11:02.650 --> 00:11:05.860
 Which applies the best practices of full screen control, 

00:11:05.860 --> 00:11:07.560
 It allows us to similarly control 

00:11:07.560 --> 00:11:09.260
 In the existing buttons. 

00:11:09.260 --> 00:11:11.230
 Again, these two services are optional 

00:11:11.230 --> 00:11:15.390
 On both Android and iOS, we can connect case transitions 

00:11:15.390 --> 00:11:16.980
 To your controllers, if you have already done so 

00:11:16.980 --> 00:11:19.030
 Invest enough time 

00:11:19.030 --> 00:11:23.300
 In determining the user experience model that best suits your users. 

00:11:23.300 --> 00:11:26.080
 On the other hand - I will use Android as an example, 

00:11:26.080 --> 00:11:28.170
 We also provide small controllers, controllers 

00:11:28.170 --> 00:11:30.870
 Extended, plus lock screen controllers. 

00:11:30.870 --> 00:11:33.680
 These lock screen controllers also work with Android Wear watches. 

00:11:33.680 --> 00:11:35.830
 So if you're literally not leaving your sofa, 

00:11:35.830 --> 00:11:38.280
 You can not even pick up the remote control, 

00:11:38.280 --> 00:11:43.470
 You can press the power button or pause your watch. 

00:11:43.470 --> 00:11:46.040
 This is the last screen 

00:11:46.040 --> 00:11:49.570
 It's for those of you who try to present the fact that Cast is now in their application, 

00:11:49.570 --> 00:11:53.360
 Or for those who have changed the location of the Cast button slightly 

00:11:53.360 --> 00:11:58.050
 In their app, or something similar, we offer you the Android-friendly notification feature 

00:11:58.050 --> 00:11:59.346
 Which specifies the location of the Cast button. 

00:11:59.346 --> 00:12:00.720
 You might think at first that this 

00:12:00.720 --> 00:12:04.609
 It is in the interests of the Cast team, by mentioning Cast more. 

00:12:04.609 --> 00:12:06.900
 But we could only have done it if it was really useful 

00:12:06.900 --> 00:12:07.910
 Community of developers. 

00:12:07.910 --> 00:12:09.701
 And what we found in applications that 

00:12:09.701 --> 00:12:12.820
 We have experienced this concept as leading to longer sessions, 

00:12:12.820 --> 00:12:16.390
 As well as greater commitment to the application itself. 

00:12:16.390 --> 00:12:19.460
 We show this as an optional behavior style 

00:12:19.460 --> 00:12:21.760
 You can call it on Android and iOS. 

00:12:26.780 --> 00:12:29.060
 As to timing, we will launch these features 

00:12:29.060 --> 00:12:30.920
 In the next few weeks. 

00:12:30.920 --> 00:12:33.550
 The applications you see are fully experimental applications, 

00:12:33.550 --> 00:12:36.630
 Where you will be able to go into the same script. 

00:12:36.630 --> 00:12:40.012
 So by mid-June, you'll see the core software development package. 

00:12:40.012 --> 00:12:41.470
 By the middle of the summer, 

00:12:41.470 --> 00:12:44.200
 You will be able to access the controllers to be fully customizable. 

00:12:44.200 --> 00:12:46.470
 We'll release iOS and Android versions first, 

00:12:46.470 --> 00:12:49.710
 Then we add as layers the possibilities of the web sender, 

00:12:49.710 --> 00:12:52.180
 As well as a new Web future 

00:12:52.180 --> 00:12:54.790
 Compatible with all this. 

00:12:54.790 --> 00:13:01.360
 All of the above is provided by the Cast application. 

00:13:01.360 --> 00:13:04.300
 I will move here. 

00:13:04.300 --> 00:13:09.730
 The cool thing about the Cast app is that you can not 

00:13:09.730 --> 00:13:13.840
 Explore content, but you can control all of your devices. 

00:13:13.840 --> 00:13:18.372
 As you can see, I have Cast TV as well as Chromecast. 

00:13:18.372 --> 00:13:19.830
 The first device back 

00:13:19.830 --> 00:13:22.540
 The Nexus player is Android TV. 

00:13:22.540 --> 00:13:24.040
 To talk more about Android, 

00:13:24.040 --> 00:13:25.816
 I'll leave talking to Sasha. 

00:13:27.955 --> 00:13:29.038
 Sasha Brouter: Thank you. 

00:13:33.630 --> 00:13:35.280
 Thanks Adam. 

00:13:35.280 --> 00:13:37.430
 We'll talk a little bit about Android TV now. 

00:13:37.430 --> 00:13:40.230
 I think this shows how Google looks at a room 

00:13:40.230 --> 00:13:41.930
 Sit on it as one integrated system. 

00:13:41.930 --> 00:13:45.879
 We combine other platforms into the integrated Cast system. 

00:13:45.879 --> 00:13:47.670
 We also want to make Android TV 

00:13:47.670 --> 00:13:49.820
 Basic end point in Cast. 

00:13:49.820 --> 00:13:53.980
 We spent a lot of time making sure it was already. 

00:13:53.980 --> 00:13:59.520
 One of the things Adam mentioned simply, 

00:13:59.520 --> 00:14:06.630
 Is that since Cast is an experience based on mobile devices 

00:14:06.630 --> 00:14:09.990
 In enabling the user to stream content to the TV, 

00:14:09.990 --> 00:14:14.010
 With traditional Android TV control via remote control, 

00:14:14.010 --> 00:14:15.520
 It is a comfortable experience. 

00:14:15.520 --> 00:14:17.200
 Where you relax on the couch and pick up 

00:14:17.200 --> 00:14:19.910
 Control from the table, 

00:14:19.910 --> 00:14:21.540
 And starts displaying the content. 

00:14:21.540 --> 00:14:24.320
 But with Cast in a compact way, what we see 

00:14:24.320 --> 00:14:26.760
 Often in families, for example, 

00:14:26.760 --> 00:14:31.360
 Children prefer to broadcast content from iPads 

00:14:31.360 --> 00:14:34.030
 Or Android phones to your Android TV device, 

00:14:34.030 --> 00:14:37.607
 While parents prefer to use the remote control. 

00:14:37.607 --> 00:14:39.190
 So be nice on Android TV 

00:14:39.190 --> 00:14:41.240
 Is the integration of different methods 

00:14:41.240 --> 00:14:44.370
 To interact with television, 

00:14:44.370 --> 00:14:48.530
 It also provides developers of user experience the ability to build new experiences 

00:14:48.530 --> 00:14:52.740
 And distinctive on that television. 

00:14:52.740 --> 00:14:54.900
 One of the things I want to clarify, 

00:14:54.900 --> 00:14:58.680
 I will not spend much time with these marketing segments. 

00:14:58.680 --> 00:15:00.470
 But what I want to explain well, 

00:15:00.470 --> 00:15:02.990
 Is that Android TV is not something built for television 

00:15:02.990 --> 00:15:06.470
 External and Android merged further. 

00:15:06.470 --> 00:15:10.240
 It is already expanding the Android kernel framework 

00:15:10.240 --> 00:15:12.990
 To make TV a top-class Android citizen. 

00:15:12.990 --> 00:15:16.380
 This is important, because it is the only way that gives you as a developer 

00:15:16.380 --> 00:15:21.160
 Ensuring that the APIs for Android will be 

00:15:21.160 --> 00:15:27.020
 Always available to you to serve TV content. 

00:15:27.020 --> 00:15:31.760
 Your application will not crash with updates from Android. 

00:15:31.760 --> 00:15:33.580
 No, but with every new Android version. 

00:15:33.580 --> 00:15:35.130
 You'll already get new features. 

00:15:38.240 --> 00:15:42.962
 For those who have seen this meeting in the agenda of the Conference, 

00:15:42.962 --> 00:15:45.170
 And thought to stay away from the sun by sitting here, 

00:15:45.170 --> 00:15:47.870
 Or for those wishing to have free devices, 

00:15:47.870 --> 00:15:48.980
 Here's a very quick summary. 

00:15:48.980 --> 00:15:50.770
 What is Android TV really? 

00:15:50.770 --> 00:15:53.816
 It's really a TV platform like Android has always been 

00:15:53.816 --> 00:15:54.940
 Platform for mobile phones. 

00:15:54.940 --> 00:15:58.970
 Android TV is a platform for TVs 

00:15:58.970 --> 00:16:01.790
 Let you interact with them as a developer using all 

00:16:01.790 --> 00:16:05.170
 The traditional tools you know through development 

00:16:05.170 --> 00:16:06.960
 For Android on mobile phones. 

00:16:06.960 --> 00:16:10.100
 The same software development package, the same developer tools, 

00:16:10.100 --> 00:16:15.380
 You can activate a variety of device categories on Android TV. 

00:16:15.380 --> 00:16:19.920
 With built-in smart TVs with Android TV, 

00:16:19.920 --> 00:16:22.350
 We have seen great success worldwide for TV receivers 

00:16:22.350 --> 00:16:23.090
 paid up. 

00:16:23.090 --> 00:16:26.790
 Where cable TV, satellite or Internet TV service providers 

00:16:26.790 --> 00:16:30.150
 Providing you with their own Android TV receivers. 

00:16:30.150 --> 00:16:32.760
 So you can run your applications on them, 

00:16:32.760 --> 00:16:36.270
 You also have the content of cable or satellite channels. 

00:16:36.270 --> 00:16:40.380
 As our other classification of course, broadcast devices and gaming platforms, 

00:16:40.380 --> 00:16:43.210
 Such as Nvidia Shield for example 

00:16:43.210 --> 00:16:45.370
 Currently on the market. 

00:16:45.370 --> 00:16:49.500
 These are excellent devices that allow users 

00:16:49.500 --> 00:16:51.710
 Applications and games. 

00:16:51.710 --> 00:16:53.485
 All on the same platform. 

00:16:56.820 --> 00:16:59.950
 Let's talk a bit about what happened last year 

00:16:59.950 --> 00:17:02.340
 With Android TV as well. 

00:17:02.340 --> 00:17:03.460
 Integrated system grows. 

00:17:03.460 --> 00:17:07.994
 We have more and more partners joining Android TV. 

00:17:07.994 --> 00:17:09.410
 I think it's a very good story 

00:17:09.410 --> 00:17:11.910
 To see partners who have already announced their support 

00:17:11.910 --> 00:17:15.210
 In the first year of Android TV they are now back in support 

00:17:15.210 --> 00:17:18.550
 And expand their Android TV models 

00:17:18.550 --> 00:17:20.240
 For this year. 

00:17:20.240 --> 00:17:23.849
 We are talking here about Sony, Sharp and Philips who are entering 

00:17:23.849 --> 00:17:25.310
 New models to market. 

00:17:25.310 --> 00:17:29.470
 But it is also nice to see new competitors in particular 

00:17:29.470 --> 00:17:33.430
 With new areas like TCL, VESTEL, RCA or Beko 

00:17:33.430 --> 00:17:38.320
 They launch Android TV devices in weeks 

00:17:38.320 --> 00:17:40.950
 And the coming months. 

00:17:40.950 --> 00:17:45.120
 We are also pleased to welcome a new partner 

00:17:45.120 --> 00:17:47.590
 In the Android TV platform. 

00:17:47.590 --> 00:17:51.340
 You see that orange logo there. 

00:17:51.340 --> 00:17:54.130
 In fact we are very excited to announce 

00:17:54.130 --> 00:17:56.410
 Become the new Android TV Partner 

00:17:56.410 --> 00:17:59.640
 Xiaomi, with their first Android device 

00:17:59.640 --> 00:18:03.200
 Their own in the US on Android TV. 

00:18:03.200 --> 00:18:07.090
 Xiaomi will soon launch the Mi Box here in the United States, 

00:18:07.090 --> 00:18:09.540
 It is the first Android TV product. 

00:18:09.540 --> 00:18:13.985
 It is a very powerful device. 

00:18:13.985 --> 00:18:17.420
 It supports 4K and HDR technology. 

00:18:17.420 --> 00:18:20.390
 That means you get all the high-definition content from 4K technology 

00:18:20.390 --> 00:18:24.520
 And accurately HDR content from Youtube, Netflix and others. 

00:18:24.520 --> 00:18:27.280
 It supports all these features. 

00:18:27.280 --> 00:18:30.880
 Comes with a stylish controller that supports voice commands 

00:18:30.880 --> 00:18:32.075
 Bluetooth. 

00:18:36.770 --> 00:18:40.780
 An additional accessory will also be available as a game controller, 

00:18:40.780 --> 00:18:47.090
 You can enjoy Android TV games on your Mi Box. 

00:18:47.090 --> 00:18:53.140
 To learn more about this, starting tomorrow 

00:18:53.140 --> 00:18:56.610
 At 12:30, we will be hosting some people from Xiaomi. 

00:18:56.610 --> 00:18:59.580
 So tomorrow at 12:30, Hyogo Bara will be from Xiaomi 

00:18:59.580 --> 00:19:02.960
 With us at the Android TV corner there. 

00:19:02.960 --> 00:19:06.760
 You will be able to experience the device, 

00:19:06.760 --> 00:19:08.290
 And play it a bit. 

00:19:08.290 --> 00:19:10.430
 Hyogo will also speak about the device. 

00:19:10.430 --> 00:19:12.220
 You may have to take a personal photo with him 

00:19:12.220 --> 00:19:14.832
 If you want to see the device, but it is up to you. 

00:19:18.060 --> 00:19:21.170
 Let's move from the devices and let's talk a bit 

00:19:21.170 --> 00:19:23.340
 About Content. 

00:19:23.340 --> 00:19:25.900
 Because in the end, what matters to you on the TV. 

00:19:25.900 --> 00:19:28.180
 Is content. 

00:19:28.180 --> 00:19:30.750
 We're very excited to grow App Store on Android TV 

00:19:30.750 --> 00:19:33.120
 During the past year. 

00:19:33.120 --> 00:19:35.930
 We have a lot of new applications 

00:19:35.930 --> 00:19:38.920
 Content and games on the platform. 

00:19:38.920 --> 00:19:40.750
 In the coming weeks, we will see 

00:19:40.750 --> 00:19:42.250
 Many of the newly arrived. 

00:19:42.250 --> 00:19:45.170
 We are very happy to join ESPN 

00:19:45.170 --> 00:19:46.950
 Native app on Android TV. 

00:19:46.950 --> 00:19:53.160
 We also have additions from CNN, MTV, Disney and Comedy Central 

00:19:53.160 --> 00:19:57.050
 And Crunchy Roll, all of which will launch their applications on Android TV during 

00:19:57.050 --> 00:20:01.090
 In the coming weeks, or in fact some of them will be launched this week. 

00:20:01.090 --> 00:20:04.300
 Increasing global content was also very important 

00:20:04.300 --> 00:20:04.800
 Our. 

00:20:04.800 --> 00:20:08.380
 For example, we are very pleased to launch Spotify 

00:20:08.380 --> 00:20:10.470
 To apply to Android TV. 

00:20:10.470 --> 00:20:11.820
 We also became our Deezer and others. 

00:20:11.820 --> 00:20:14.020
 So, the integrated system grows 

00:20:14.020 --> 00:20:15.660
 Also on the content level, 

00:20:15.660 --> 00:20:17.195
 This is very gratifying 

00:20:19.810 --> 00:20:23.266
 If, you already knew from Dave 

00:20:23.266 --> 00:20:24.890
 This morning a little bit about 

00:20:24.890 --> 00:20:29.220
 The new Android N has already explained to you 

00:20:29.220 --> 00:20:32.390
 A new feature in his main speech, but I want to spend some time 

00:20:32.390 --> 00:20:38.830
 Talking about new features related to Android N. 

00:20:38.830 --> 00:20:43.030
 One of our main concerns was that when looking at Android N 

00:20:43.030 --> 00:20:45.950
 Especially from a consumer perspective, 

00:20:45.950 --> 00:20:48.920
 We thought it was very easy on Android TV 

00:20:48.920 --> 00:20:50.690
 Disconnect your content. 

00:20:50.690 --> 00:20:54.340
 If you see something, 

00:20:54.340 --> 00:20:56.150
 The video was full-screen mode, 

00:20:56.150 --> 00:20:58.060
 If you just want to find something 

00:20:58.060 --> 00:20:59.890
 For content or search for 

00:20:59.890 --> 00:21:04.504
 Other preferences you may have, 

00:21:04.504 --> 00:21:06.420
 The content will be disconnected immediately. 

00:21:06.420 --> 00:21:08.730
 Especially if you are an active user 

00:21:08.730 --> 00:21:10.200
 I was moving fast 

00:21:10.200 --> 00:21:11.880
 Among different types of content applications, 

00:21:11.880 --> 00:21:18.895
 Such as moving between Live TV and Netflix or between Youtube and Hulu, 

00:21:18.895 --> 00:21:20.520
 The system has not dealt with this well. 

00:21:20.520 --> 00:21:22.310
 So one of the things we did was 

00:21:22.310 --> 00:21:24.890
 Provide reasons as you know them 

00:21:24.890 --> 00:21:28.700
 Of mobile phones, but in a manner suitable for remote controls. 

00:21:28.700 --> 00:21:31.370
 Watch this video to see how it looks. 

00:21:35.760 --> 00:21:37.710
 You know the traditional Android TV interface 

00:21:37.710 --> 00:21:40.700
 Smooth content with easy storage. 

00:21:40.700 --> 00:21:43.700
 If you are moving a lot between different applications, 

00:21:43.700 --> 00:21:45.200
 If you are looking for a Youtube section here, 

00:21:45.200 --> 00:21:49.440
 Then go back to Live TV to look for apps, 

00:21:49.440 --> 00:21:51.670
 The "recent" option allows you to browse all applications 

00:21:51.670 --> 00:21:54.829
 Which you recently used and move smoothly through the remote control. 

00:21:54.829 --> 00:21:56.370
 If you do not like an option, 

00:21:56.370 --> 00:22:00.130
 You can close it quickly, 

00:22:00.130 --> 00:22:02.130
 Then you can go to the application 

00:22:02.130 --> 00:22:03.580
 You want to see content on. 

00:22:03.580 --> 00:22:04.470
 its very easy. 

00:22:04.470 --> 00:22:06.760
 We spent a lot of time thinking about a model 

00:22:06.760 --> 00:22:09.840
 Appropriate interaction if you have a remote control. 

00:22:09.840 --> 00:22:11.800
 You do not want any special button, 

00:22:11.800 --> 00:22:15.300
 You do not want anything complicated to use. 

00:22:15.300 --> 00:22:20.180
 So we think we've come up with a good solution here, 

00:22:20.180 --> 00:22:23.610
 It will be available for every device running Android TV. 

00:22:27.500 --> 00:22:31.780
 Another very related topic 

00:22:31.780 --> 00:22:35.570
 What I said earlier when you talked about losing communication 

00:22:35.570 --> 00:22:38.100
 With content, or for you 

00:22:38.100 --> 00:22:39.900
 As application developers or content providers, 

00:22:39.900 --> 00:22:45.600
 Loss of communication with the user at the moment to decide 

00:22:45.600 --> 00:22:47.960
 He wanted to find something. 

00:22:47.960 --> 00:22:49.700
 One of the things we wanted to invest in 

00:22:49.700 --> 00:22:54.260
 Were watching more than one source of content, 

00:22:54.260 --> 00:22:55.320
 On one screen. 

00:22:55.320 --> 00:22:57.492
 So we have a picture style inside an image, 

00:22:57.492 --> 00:22:58.950
 Which will enable you to stay connected 

00:22:58.950 --> 00:23:01.400
 Including what you were watching during your search 

00:23:01.400 --> 00:23:04.300
 About new content. 

00:23:04.300 --> 00:23:07.276
 Watch this video to see how this looks. 

00:23:13.630 --> 00:23:15.190
 that's cool. 

00:23:15.190 --> 00:23:18.410
 If we have converted all our offers to videos, 

00:23:18.410 --> 00:23:19.950
 Because presentations always fail. 

00:23:25.170 --> 00:23:30.080
 If next year, we will provide offline status for Youtube. 

00:23:30.080 --> 00:23:34.024
 For example, you see Live TV, 

00:23:34.024 --> 00:23:35.940
 And hear something interesting to you. 

00:23:35.940 --> 00:23:38.180
 For example here, report 

00:23:38.180 --> 00:23:42.570
 For a game just released on Android, 

00:23:42.570 --> 00:23:44.040
 Think that this is interesting, 

00:23:44.040 --> 00:23:46.840
 Why do not I try to find her? 

00:23:46.840 --> 00:23:48.360
 The search opens, 

00:23:48.360 --> 00:23:52.244
 And looking using voice search for "PAC-MAN", you find that 

00:23:52.244 --> 00:23:54.660
 You can install and play them on your Android TV device 

00:23:54.660 --> 00:23:55.190
 You have. 

00:23:55.190 --> 00:23:57.520
 But throughout this time, content continues to display. 

00:23:57.520 --> 00:23:59.860
 You have not been disconnected from what you see, 

00:23:59.860 --> 00:24:02.900
 We believe this is a very important experience. 

00:24:02.900 --> 00:24:06.520
 Especially as content increases 

00:24:06.520 --> 00:24:07.650
 You are on the podium. 

00:24:12.290 --> 00:24:16.360
 What we have allowed you to do as developers 

00:24:16.360 --> 00:24:19.980
 The picture-in-picture feature is enabled 

00:24:19.980 --> 00:24:23.090
 In your applications. 

00:24:23.090 --> 00:24:27.300
 You can basically install the video in a section. 

00:24:27.300 --> 00:24:31.310
 You can also add a special button 

00:24:31.310 --> 00:24:36.570
 To the media controllers in the control bar, if you select this, 

00:24:36.570 --> 00:24:38.290
 Easily move to an image-in-picture style 

00:24:38.290 --> 00:24:41.760
 For devices that do not contain 

00:24:41.760 --> 00:24:42.460
 Button dedicated to it. 

00:24:42.460 --> 00:24:44.730
 There are some devices such as smart TVs, 

00:24:44.730 --> 00:24:47.920
 Already contains a picture-in-picture button, 

00:24:47.920 --> 00:24:49.470
 But we wanted the interface design 

00:24:49.470 --> 00:24:51.380
 Make you use all standard controllers 

00:24:51.380 --> 00:24:54.530
 Able to activate this experience. 

00:24:54.530 --> 00:24:58.710
 You can activate the picture-in-picture mode 

00:24:58.710 --> 00:25:02.060
 Easily within your application, just add 

00:25:02.060 --> 00:25:06.820
 This feature to your application files. 

00:25:06.820 --> 00:25:09.310
 There is an activity in changing the picture-in-picture style. 

00:25:09.310 --> 00:25:11.935
 All you need is to apply it and be ready. 

00:25:16.030 --> 00:25:19.970
 Something else we've been working on from the start, 

00:25:19.970 --> 00:25:24.340
 Is to support traditional TV functions. 

00:25:24.340 --> 00:25:27.280
 I know we all love apps and games, 

00:25:27.280 --> 00:25:30.240
 We like to have as many applications as possible on TVs. 

00:25:30.240 --> 00:25:34.230
 But still a large proportion of watching TV at home 

00:25:34.230 --> 00:25:35.470
 For traditional TV. 

00:25:35.470 --> 00:25:36.930
 So from the beginning of Android TV 

00:25:36.930 --> 00:25:39.500
 Since Android L, we've implemented something 

00:25:39.500 --> 00:25:40.750
 The TV entrance frame is called. 

00:25:40.750 --> 00:25:45.340
 Which deals with things like switching HDMI inputs, 

00:25:45.340 --> 00:25:50.770
 Or control the cable TV cable. 

00:25:50.770 --> 00:25:54.530
 Applications also have the ability to deploy channels through this interface. 

00:25:54.530 --> 00:25:57.960
 In version L, it was a simple change in channels, 

00:25:57.960 --> 00:26:00.230
 Key channel data, and software directory. 

00:26:00.230 --> 00:26:02.640
 We've expanded this on Android M by adding capabilities 

00:26:02.640 --> 00:26:03.350
 Skip time. 

00:26:03.350 --> 00:26:05.710
 So if your content is on a live channel, 

00:26:05.710 --> 00:26:08.460
 You can take advantage of time skipping. 

00:26:08.460 --> 00:26:11.400
 On Android M, we're adding sign-ups, 

00:26:11.400 --> 00:26:15.050
 So, you'll become a content provider on your channel 

00:26:15.050 --> 00:26:19.260
 To offer easy recording capabilities 

00:26:19.260 --> 00:26:25.030
 The user also knows it from any old recording device. 

00:26:25.030 --> 00:26:32.510
 Watch this video to see how it looks. 

00:26:32.510 --> 00:26:35.000
 This is a simple receiver. 

00:26:35.000 --> 00:26:37.510
 This is as a device with a MOLV receiver. 

00:26:37.510 --> 00:26:39.310
 You can browse the directory, you know all of it. 

00:26:39.310 --> 00:26:42.410
 By the way, these are geometric designs for the user experience. 

00:26:42.410 --> 00:26:46.420
 I struggled so much to introduce them to you. 

00:26:46.420 --> 00:26:50.600
 So I mean I did not ask her from our user experience design expert. 

00:26:50.600 --> 00:26:53.007
 If this is not the final version we will launch, 

00:26:53.007 --> 00:26:55.090
 However, we will provide an update to the Live Channels app 

00:26:55.090 --> 00:26:56.310
 In the Play Store for apps. 

00:26:56.310 --> 00:26:57.970
 You can see all standard things 

00:26:57.970 --> 00:27:00.380
 Such as registration and scheduling management. 

00:27:00.380 --> 00:27:04.700
 You can delete and schedule registrations, 

00:27:04.700 --> 00:27:08.910
 Just as you would in any traditional recording device. 

00:27:08.910 --> 00:27:10.480
 As a content provider, you can 

00:27:10.480 --> 00:27:13.870
 Choose to provide these experiences. 

00:27:13.870 --> 00:27:18.960
 Here is an example of how sub-features work as an accelerator 

00:27:18.960 --> 00:27:20.870
 The display returns the display. 

00:27:20.870 --> 00:27:25.630
 We also have additional components for this in our media controllers. 

00:27:25.630 --> 00:27:29.140
 So it's very straightforward and you can try it 

00:27:29.140 --> 00:27:31.660
 As part of the Android software development package presentation. 

00:27:39.180 --> 00:27:43.440
 As I mentioned earlier, we provide a standard set 

00:27:43.440 --> 00:27:48.430
 Such as scheduling and starting and stopping the registry 

00:27:48.430 --> 00:27:51.540
 And display recordings including key channel data. 

00:27:51.540 --> 00:27:53.110
 This can be managed from the TV application. 

00:27:53.110 --> 00:27:55.410
 At Google, we provide a single TV app, 

00:27:55.410 --> 00:27:58.370
 It is available on NVIDIA Shield, Nexus player and others, 

00:27:58.370 --> 00:28:00.570
 Which is the application of direct channels. 

00:28:00.570 --> 00:28:03.690
 Some TV manufacturers offer their own application, 

00:28:03.690 --> 00:28:06.990
 But they all support the TV front frame. 

00:28:06.990 --> 00:28:09.290
 As a developer, 

00:28:09.290 --> 00:28:11.610
 If you want to provide content on live channels 

00:28:11.610 --> 00:28:13.400
 Make them recordable, 

00:28:13.400 --> 00:28:16.400
 You can add this by applying a session session class 

00:28:16.400 --> 00:28:17.220
 New. 

00:28:17.220 --> 00:28:22.080
 This is explained as part of the documentation documentation for the software development kit 

00:28:22.080 --> 00:28:23.370
 For Android N. 

00:28:23.370 --> 00:28:26.730
 Also from the things we'll show a trial version with, 

00:28:26.730 --> 00:28:32.510
 Is that we will provide support for connecting an external USB mulch 

00:28:32.510 --> 00:28:34.820
 As an open source model, where you can 

00:28:34.820 --> 00:28:37.110
 Connect USB mulph and antenna synthesizer 

00:28:37.110 --> 00:28:39.470
 With your Nexus player, for example. 

00:28:39.470 --> 00:28:41.900
 The content will go directly to your Nexus player 

00:28:41.900 --> 00:28:47.380
 You can try recording and everything you mentioned 

00:28:47.380 --> 00:28:49.080
 With regard to broadcasting management. 

00:28:49.080 --> 00:28:51.260
 We will provide this as an open source demo 

00:28:51.260 --> 00:28:53.450
 As part of the Direct Channels application. 

00:28:59.200 --> 00:29:03.050
 Another very important topic for us in Android N, 

00:29:03.050 --> 00:29:07.730
 Is to support HDR, or a high-level dynamic property properly, 

00:29:07.730 --> 00:29:12.430
 As you know, with the spread of new TVs that support ultra-clear images 

00:29:12.430 --> 00:29:14.970
 HDR has become an important topic. 

00:29:14.970 --> 00:29:20.560
 They give the possibility of viewing 

00:29:20.560 --> 00:29:27.580
 Wide range of colors, with natural color schemes 

00:29:27.580 --> 00:29:28.300
 Right. 

00:29:28.300 --> 00:29:32.740
 One of the problems we encountered 

00:29:32.740 --> 00:29:35.060
 It provides several HDR standards 

00:29:35.060 --> 00:29:35.810
 Different. 

00:29:35.810 --> 00:29:38.950
 For example, you have HDR 10 and Dolby Vision, 

00:29:38.950 --> 00:29:43.070
 And Hybrid Log-Gamma. 

00:29:43.070 --> 00:29:46.380
 For both developer and consumer, 

00:29:46.380 --> 00:29:47.390
 This is confusing. 

00:29:47.390 --> 00:29:51.827
 Because how will I know which criterion I support? 

00:29:51.827 --> 00:29:53.660
 If I have a content app I wanted to introduce 

00:29:53.660 --> 00:29:58.120
 Beautiful 4K content in HDR format, 

00:29:58.120 --> 00:29:59.510
 What criteria should I use? 

00:29:59.510 --> 00:30:02.240
 How do I know what the device supports? 

00:30:02.240 --> 00:30:08.460
 On Android N, we add new APIs that support HDR, 

00:30:08.460 --> 00:30:10.560
 We process two cases: 

00:30:10.560 --> 00:30:12.900
 The first is the case of hardware manufacturers, 

00:30:12.900 --> 00:30:15.870
 So they can add 

00:30:15.870 --> 00:30:20.440
 Their HDR adapter is well connected to the system and send signals to it, 

00:30:20.440 --> 00:30:25.400
 And advertising that they support HDR standards. 

00:30:25.400 --> 00:30:30.490
 As for content developers, for example Netflix, 

00:30:30.490 --> 00:30:34.460
 They can query the system and see 

00:30:34.460 --> 00:30:37.270
 On the standards supported by the device, 

00:30:37.270 --> 00:30:40.340
 Then they choose the way they want to broadcast. 

00:30:40.340 --> 00:30:43.010
 This may be one of the criteria, 

00:30:43.010 --> 00:30:45.147
 Such as their broadcast streams for this device, 

00:30:45.147 --> 00:30:46.230
 Or they can make a decision. 

00:30:46.230 --> 00:30:49.140
 This device does not support the HDR center that I need, 

00:30:49.140 --> 00:30:54.400
 So I will be broadcasting 4K with its initial image. 

00:30:54.400 --> 00:30:57.220
 We also added APIs to HDR capabilities 

00:30:57.220 --> 00:31:00.220
 So that applications can query possibilities 

00:31:00.220 --> 00:31:01.170
 this device. 

00:31:03.880 --> 00:31:05.760
 There are some important things here. 

00:31:05.760 --> 00:31:08.430
 That the converter's potential would be vulnerable, 

00:31:08.430 --> 00:31:11.471
 We have some requirements for this purpose. 

00:31:11.471 --> 00:31:16.406
 The HDR requires 10 HEVC adapters to support, 

00:31:16.406 --> 00:31:22.570
 The Dolby Vision requires a special HEVC switch 

00:31:22.570 --> 00:31:26.710
 The hybrid log gamma requires VP9 version 2. 

00:31:26.710 --> 00:31:29.870
 By the way, this is the version that Youtube announced 

00:31:29.870 --> 00:31:32.160
 At the beginning of this year they will support HDR and its jurisprudence. 

00:31:36.400 --> 00:31:38.160
 Another important topic, especially 

00:31:38.160 --> 00:31:42.850
 In the I / O Developers Conference, it is a Leanback library. 

00:31:42.850 --> 00:31:47.820
 The Leanback Library is our toolkit for enabling application development 

00:31:47.820 --> 00:31:50.060
 Extremely easy on Android TV. 

00:31:50.060 --> 00:31:53.940
 If you're familiar with developing Android apps 

00:31:53.940 --> 00:31:57.290
 On cell phones, tablets, or others, 

00:31:57.290 --> 00:31:59.760
 With the Leanback Support Library, 

00:31:59.760 --> 00:32:02.550
 We give you a set of tools to easily move your application 

00:32:02.550 --> 00:32:05.870
 From mobile phone to big screen. 

00:32:05.870 --> 00:32:08.840
 Over the past year, we've seen a lot of developers 

00:32:08.840 --> 00:32:11.445
 They use our toolkit, and we get a lot of notes. 

00:32:11.445 --> 00:32:13.570
 There were some missing things. 

00:32:13.570 --> 00:32:15.670
 There were cases of use that we did not envision 

00:32:15.670 --> 00:32:17.430
 Initially. 

00:32:17.430 --> 00:32:22.440
 And for a while we listened, and we will 

00:32:22.440 --> 00:32:26.250
 Provide an update to the Leanback library very soon. 

00:32:26.250 --> 00:32:28.460
 It is almost in the final stage of completion. 

00:32:28.460 --> 00:32:31.490
 For example, we add support for custom segments 

00:32:31.490 --> 00:32:32.805
 In browsing fragmentation. 

00:32:32.805 --> 00:32:35.180
 Fragmentation browsing is one of the things you allow 

00:32:35.180 --> 00:32:39.340
 You can view multiple lists of content in your app 

00:32:39.340 --> 00:32:40.380
 Very easily. 

00:32:40.380 --> 00:32:43.140
 But we have a strict trend in this regard. 

00:32:43.140 --> 00:32:45.820
 We had one idea basically about how it should look. 

00:32:45.820 --> 00:32:48.920
 And we get a lot of feedback that supports the idea of ​​browsing itself 

00:32:48.920 --> 00:32:50.480
 Good, but they want in their applications 

00:32:50.480 --> 00:32:52.105
 To be a little different. 

00:32:52.105 --> 00:32:54.070
 Where they wanted different key data 

00:32:54.070 --> 00:32:56.810
 Or a different arrangement. 

00:32:56.810 --> 00:32:59.100
 And build a dedicated segmentation 

00:32:59.100 --> 00:33:02.140
 Inside the browser fragmentation will greatly help, 

00:33:02.140 --> 00:33:05.790
 Without having to reinvent the wheel. 

00:33:05.790 --> 00:33:09.470
 We also greatly improved the media player 

00:33:09.470 --> 00:33:10.680
 To support the ad hoc procedures. 

00:33:10.680 --> 00:33:13.080
 We get the details of media procedures specifically, 

00:33:13.080 --> 00:33:15.790
 If you have an app with great content 

00:33:15.790 --> 00:33:20.780
 Needs to display many of the main data of the content 

00:33:20.780 --> 00:33:25.250
 And interacting with it during playback, this will help you. 

00:33:25.250 --> 00:33:26.950
 We also made brands easier. 

00:33:26.950 --> 00:33:31.240
 Many of the notes that we received included 

00:33:31.240 --> 00:33:35.370
 If you use the Leanback library as a default library to build your application, 

00:33:35.370 --> 00:33:39.870
 It will be a little difficult to enter your brand in it, 

00:33:39.870 --> 00:33:43.560
 And make your app slightly different from other applications. 

00:33:43.560 --> 00:33:47.310
 We made some modifications to allow you to enter your tag easily, 

00:33:47.310 --> 00:33:50.300
 Without having to re-invent and build everything 

00:33:50.300 --> 00:33:50.950
 Yourself again. 

00:33:53.660 --> 00:33:56.000
 For this, this was just a high-level thriller 

00:33:56.000 --> 00:33:57.266
 For what is happening here. 

00:33:57.266 --> 00:33:59.890
 There is another session this week, and we will hear later those meetings 

00:33:59.890 --> 00:34:04.460
 Which delves deeply into the Leanback Library and its operations 

00:34:04.460 --> 00:34:05.160
 Internal. 

00:34:05.160 --> 00:34:07.880
 So if you're a developer who wants to develop apps for Android TV, 

00:34:07.880 --> 00:34:09.320
 It will be a very wonderful session for you. 

00:34:09.320 --> 00:34:14.060
 Three of our developers will talk about a range of usage cases 

00:34:14.060 --> 00:34:15.909
 They will explain some of these news 

00:34:15.909 --> 00:34:17.500
 And how Leanback actually works 

00:34:17.500 --> 00:34:19.710
 Inside Android TV. 

00:34:23.460 --> 00:34:29.179
 If with all these new things, how can you 

00:34:29.179 --> 00:34:29.980
 To deal with it? 

00:34:29.980 --> 00:34:35.000
 As you heard in the main talk, the pilot version of the developers 

00:34:35.000 --> 00:34:36.670
 Of Android N is already available. 

00:34:36.670 --> 00:34:39.824
 So you can download it now. 

00:34:39.824 --> 00:34:41.520
 You have to start with that. 

00:34:41.520 --> 00:34:43.679
 All Android TV features are included as part of a development group 

00:34:43.679 --> 00:34:44.960
 Android standard software. 

00:34:44.960 --> 00:34:47.179
 There is nothing special about television, 

00:34:47.179 --> 00:34:48.810
 But only Android. 

00:34:48.810 --> 00:34:51.850
 So, if you download the beta version of developers, 

00:34:51.850 --> 00:34:54.060
 The Leanback Library will be included, 

00:34:54.060 --> 00:34:56.620
 As well as all the new TV features. 

00:34:56.620 --> 00:34:59.910
 We also updated the documentation files 

00:34:59.910 --> 00:35:02.850
 And some application models as part of it. 

00:35:02.850 --> 00:35:07.560
 We also got some feedback regarding the TV simulator 

00:35:07.560 --> 00:35:10.450
 Its content was very bad, 

00:35:10.450 --> 00:35:12.660
 The reviews were fair, because 

00:35:12.660 --> 00:35:14.960
 Because his performance was already very bad. 

00:35:14.960 --> 00:35:16.900
 We updated it a bit, 

00:35:16.900 --> 00:35:18.470
 We think it is much better now. 

00:35:18.470 --> 00:35:23.310
 It has become usable as a standard development tool. 

00:35:23.310 --> 00:35:27.340
 You do not have to use the devices anymore. 

00:35:27.340 --> 00:35:29.920
 For those who have a Nexus Player of yours, 

00:35:29.920 --> 00:35:34.000
 You can register or upload a demo version of the developers 

00:35:34.000 --> 00:35:35.100
 Android N. 

00:35:35.100 --> 00:35:37.780
 You can download the image in Flash, 

00:35:37.780 --> 00:35:42.410
 Or register for a copy that comes directly to the device from the Internet. 

00:35:45.490 --> 00:35:49.240
 Another important thing, we have a lot of 

00:35:49.240 --> 00:35:52.300
 Sessions that give more details than the overview 

00:35:52.300 --> 00:35:53.140
 At this meeting. 

00:35:53.140 --> 00:35:56.270
 If you are interested, especially if you are 

00:35:56.270 --> 00:36:01.530
 You're working on media streaming apps, join the XO Player session 

00:36:01.530 --> 00:36:03.850
 Valid for mobile phones and TVs today. 

00:36:03.850 --> 00:36:05.475
 We have office hours for the living room, 

00:36:05.475 --> 00:36:09.130
 For Cast and Android TV tomorrow at 10pm, 

00:36:09.130 --> 00:36:12.230
 As for the talk I mentioned a little while ago it is at three o'clock in the afternoon 

00:36:12.230 --> 00:36:15.990
 About diving deep into Leanback's support library. 

00:36:15.990 --> 00:36:19.710
 At nine o'clock I think it's time to talk and explain 

00:36:19.710 --> 00:36:22.450
 Cast Software Development Group. 

00:36:22.450 --> 00:36:24.280
 I and Jay will talk on Friday at 11 

00:36:24.280 --> 00:36:27.770
 About moving live content to Android TV, 

00:36:27.770 --> 00:36:29.670
 In much more detail than this session. 

00:36:29.670 --> 00:36:32.640
 At two o'clock on Friday there is a wonderful meeting, 

00:36:32.640 --> 00:36:34.390
 If you have a mobile phone application you wonder 

00:36:34.390 --> 00:36:35.796
 About how he was transferred to television. 

00:36:35.796 --> 00:36:37.420
 How does the transfer actually take place? 

00:36:37.420 --> 00:36:38.620
 What are best practices? 

00:36:38.620 --> 00:36:40.390
 What is the easiest way? 

00:36:40.390 --> 00:36:44.580
 Then this will be a wonderful meeting to prepare for. 

00:36:44.580 --> 00:36:46.540
 As we have support communities, 

00:36:46.540 --> 00:36:49.850
 And developer communities, you can see links here. 

00:36:49.850 --> 00:36:55.550
 So I think it's time for questions. 

00:36:55.550 --> 00:36:59.050
 I think we have microphones here somewhere 

00:36:59.050 --> 00:37:00.321
 If there are any questions. 

00:37:00.321 --> 00:37:01.820
 Supposed to be on both sides. 

00:37:01.820 --> 00:37:05.130
 I see one there, the other on the other. 

00:37:05.130 --> 00:37:10.890
 So, if you have any question, get up and ask the question. 

00:37:10.890 --> 00:37:14.790
 If there are no questions, I do not mind. 

00:37:14.790 --> 00:37:17.530
 ADAM CHAMBI: For your information, our trial box is a distance away 

00:37:17.530 --> 00:37:20.210
 About 100 yards from here, we'll be there 

00:37:20.210 --> 00:37:24.790
 For long times of day, tomorrow and Friday. 

00:37:24.790 --> 00:37:30.470
 Audience: Hello, I have a question. 

00:37:30.470 --> 00:37:33.340
 Can you hear me? 

00:37:33.340 --> 00:37:38.060
 In fact all this talk about the sitting room and about 

00:37:38.060 --> 00:37:40.494
 Google Cast and Android TV. 

00:37:40.494 --> 00:37:44.210
 I am a former education technician in fact, 

00:37:44.210 --> 00:37:48.440
 I wonder about interactive content streaming 

00:37:48.440 --> 00:37:52.880
 To the smart panels in the rows. 

00:37:52.880 --> 00:37:59.421
 Do you support formats other than video and audio? 

00:37:59.421 --> 00:38:00.150
 For broadcast? 

00:38:02.802 --> 00:38:04.010
 ADAM CHAMBI: I can answer. 

00:38:04.010 --> 00:38:06.200
 Can those who leave 

00:38:06.200 --> 00:38:09.160
 Have a little rest for a second? 

00:38:09.160 --> 00:38:12.570
 The main factor of the interaction or the main factor of the class 

00:38:12.570 --> 00:38:14.820
 It can be presented in two different ways. 

00:38:14.820 --> 00:38:17.610
 If you have a mobile app that wants to show something 

00:38:17.610 --> 00:38:20.790
 On the big screen, as a video or voting content 

00:38:20.790 --> 00:38:22.580
 Of different students in the class, 

00:38:22.580 --> 00:38:25.030
 The Cast model is so excellent. 

00:38:25.030 --> 00:38:28.030
 You can continue the discussion on Friday, 

00:38:28.030 --> 00:38:29.905
 Where we can talk a little more about it. 

00:38:34.180 --> 00:38:36.840
 Jaguar: I'm talking about custom content. 

00:38:36.840 --> 00:38:40.090
 For example HTML5 or Flash. 

00:38:40.090 --> 00:38:41.700
 Adam Chambi: We currently support Cast 

00:38:41.700 --> 00:38:44.681
 HTML5 player and some formats 

00:38:44.681 --> 00:38:45.680
 Different media. 

00:38:45.680 --> 00:38:47.554
 I will be happy to talk to you after the hearing 

00:38:47.554 --> 00:38:49.454
 More specifically about it. 

00:38:49.454 --> 00:38:50.620
 I'll ask you out immediately. 

00:38:55.886 --> 00:38:58.820
 Audience: App Store in Android TV is a bit bad. 

00:39:02.530 --> 00:39:04.560
 My application is buried at the bottom of the menu 

00:39:04.560 --> 00:39:07.820
 There is no way people can download it, 

00:39:07.820 --> 00:39:11.450
 Because you have to continue to scroll to the right, 

00:39:11.450 --> 00:39:14.790
 No one will move more than 3 or 4 

00:39:14.790 --> 00:39:18.340
 Or up to 5 apps at the bottom of the list. 

00:39:18.340 --> 00:39:21.470
 Because you are using the Leanback Library for the App Store as well 

00:39:21.470 --> 00:39:22.580
 I think so. 

00:39:22.580 --> 00:39:25.360
 Will there be any improvement in that? 

00:39:25.360 --> 00:39:27.880
 To discover my application? 

00:39:27.880 --> 00:39:30.410
 Sasha Brouter: I mean, now and while the application store is full 

00:39:30.410 --> 00:39:33.580
 With more and more applications, it's a little bit like 

00:39:33.580 --> 00:39:35.050
 With a mobile phone, right? 

00:39:35.050 --> 00:39:37.360
 You can not expect millions of apps 

00:39:37.360 --> 00:39:40.400
 Each application should be on the first page. 

00:39:40.400 --> 00:39:42.640
 No one scrolls through millions of apps, 

00:39:42.640 --> 00:39:46.930
 So we focus more on showing the ratings more, 

00:39:46.930 --> 00:39:50.600
 You will do some work on distinctive applications, 

00:39:50.600 --> 00:39:52.820
 As well as improved search. 

00:39:52.820 --> 00:39:57.080
 But so far it is only a passing model with thousands of applications 

00:39:57.080 --> 00:40:00.000
 In the store, so no model will be back. 

00:40:00.000 --> 00:40:02.430
 What we are trying to do soon 

00:40:02.430 --> 00:40:04.470
 Is to try to find a model based on classifications, 

00:40:04.470 --> 00:40:08.340
 To search within different types of applications is easier 

00:40:08.340 --> 00:40:09.340
 For the user. 

00:40:09.340 --> 00:40:12.300
 Then the discovery will be by browsing labels 

00:40:12.300 --> 00:40:13.914
 Depending on who wants to search for it 

00:40:13.914 --> 00:40:15.080
 A little easier. 

00:40:15.080 --> 00:40:15.705
 Audience: Awesome 

00:40:15.705 --> 00:40:18.570
 Is there a way to distinguish applications that are not Netflix 

00:40:18.570 --> 00:40:21.570
 Like all large applications, maybe with some supervision 

00:40:21.570 --> 00:40:24.310
 We try to raise small applications 

00:40:24.310 --> 00:40:25.040
 There? 

00:40:25.040 --> 00:40:29.660
 Sasha Brouter: We have guidance if you look at 

00:40:29.660 --> 00:40:33.740
 android.com/tv, we have a way to example guidelines 

00:40:33.740 --> 00:40:40.130
 The user experience must be achieved to take the application into account in the discrimination. 

00:40:40.130 --> 00:40:41.986
 It also depends on the region 

00:40:41.986 --> 00:40:43.860
 Where your application is available, what is its content, 

00:40:43.860 --> 00:40:45.340
 And your competition. 

00:40:45.340 --> 00:40:48.160
 We can always distinguish or market 

00:40:48.160 --> 00:40:50.720
 Very small number of applications. 

00:40:50.720 --> 00:40:54.880
 So we are working more on mobility according to the classification, 

00:40:54.880 --> 00:40:58.460
 More discovery options are available at the Andriond TV application store 

00:40:58.460 --> 00:40:59.080
 And research. 

00:40:59.080 --> 00:41:00.038
 Audience: Great, thanks. 

00:41:05.080 --> 00:41:07.040
 Sasha Brouter: Thank you very much. 

