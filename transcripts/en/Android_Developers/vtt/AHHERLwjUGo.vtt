WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.410
[MUSIC PLAYING]

00:00:03.302 --> 00:00:05.010
HEATHER SEAL: Our
vision for Android Auto

00:00:05.010 --> 00:00:09.360
is to bring a safe and seamless
experience to every car, which

00:00:09.360 --> 00:00:11.100
means we provide
a way for people

00:00:11.100 --> 00:00:15.330
to connect their digital
lives seamlessly into the car.

00:00:15.330 --> 00:00:17.340
So the same apps
and services you

00:00:17.340 --> 00:00:20.160
use on your phones
and other devices

00:00:20.160 --> 00:00:25.370
are available just as
easily in your car.

00:00:25.370 --> 00:00:28.130
If you attended our session
yesterday or have been paying

00:00:28.130 --> 00:00:31.340
attention to what we've been
up to, you'll know that we have

00:00:31.340 --> 00:00:33.270
two in-car platforms--

00:00:33.270 --> 00:00:35.930
Android Auto and
Android Automotive OS.

00:00:39.150 --> 00:00:42.690
The first of these
platforms, Android Auto,

00:00:42.690 --> 00:00:46.500
runs on the phone and
integrates with compatible cars.

00:00:46.500 --> 00:00:48.780
This means your
apps and services

00:00:48.780 --> 00:00:53.570
will be available on the screen
in a driving-optimized way.

00:00:53.570 --> 00:00:56.750
You can interact with these
apps through your car's screen

00:00:56.750 --> 00:01:01.520
and controls, but everything
is running from the phone.

00:01:01.520 --> 00:01:05.780
We initially previewed
Android Auto at I/O in 2014

00:01:05.780 --> 00:01:10.350
and launched to
consumers in early 2015.

00:01:10.350 --> 00:01:13.110
We are proud to say
that Android Auto is now

00:01:13.110 --> 00:01:17.460
available in 36 markets in
more than 500 different car

00:01:17.460 --> 00:01:21.950
models from 50-plus brands.

00:01:21.950 --> 00:01:24.830
And we have thousands of
apps already compatible

00:01:24.830 --> 00:01:30.250
with Android Auto, and continue
to see growth in this area.

00:01:30.250 --> 00:01:31.900
Our partnership
with developers is

00:01:31.900 --> 00:01:35.550
a key reason for the
success of Android Auto.

00:01:35.550 --> 00:01:38.890
And we hope to bring those apps
to our newest platform, Android

00:01:38.890 --> 00:01:39.895
Automotive OS.

00:01:42.710 --> 00:01:45.550
So the second platform,
Android Automotive OS,

00:01:45.550 --> 00:01:48.880
is what we are going
to talk about today.

00:01:48.880 --> 00:01:51.520
With Automotive OS,
Android is running

00:01:51.520 --> 00:01:54.970
as the embedded infotainment
platform in the car,

00:01:54.970 --> 00:01:58.690
enabling a much deeper,
more seamless experience

00:01:58.690 --> 00:02:01.810
from everything from
navigating with Google Maps,

00:02:01.810 --> 00:02:04.960
to listening to music
with Spotify, to adjusting

00:02:04.960 --> 00:02:07.450
your climate temperature.

00:02:07.450 --> 00:02:10.600
And unlike Android Auto,
the apps and services

00:02:10.600 --> 00:02:14.330
are running directly
in your car.

00:02:14.330 --> 00:02:17.400
And it doesn't matter what
kind of phone you have.

00:02:17.400 --> 00:02:21.450
We previewed Automotive OS
the last couple years at I/O

00:02:21.450 --> 00:02:24.780
and announced a few weeks ago
that the first consumer vehicle

00:02:24.780 --> 00:02:27.510
to launch with the
embedded platform

00:02:27.510 --> 00:02:31.870
will be available in the
Polestar 2 launching in 2020.

00:02:31.870 --> 00:02:33.630
And you can check that
out in our sandbox,

00:02:33.630 --> 00:02:34.588
if you haven't already.

00:02:37.900 --> 00:02:40.850
So we hear from user surveys
that there are four key things

00:02:40.850 --> 00:02:42.890
people like to do in the cars--

00:02:42.890 --> 00:02:48.350
navigate between locations,
communicate with phone calls

00:02:48.350 --> 00:02:52.820
or messages, listen
to music via Spotify,

00:02:52.820 --> 00:02:55.550
and control various
aspects of the car,

00:02:55.550 --> 00:02:59.480
such as adjusting
their seat position.

00:02:59.480 --> 00:03:01.370
With a platform like
Android in the car,

00:03:01.370 --> 00:03:05.150
we intend to enable app
developers to develop apps

00:03:05.150 --> 00:03:07.380
in many of these categories.

00:03:07.380 --> 00:03:10.250
In fact, we anticipate
that you'll develop apps

00:03:10.250 --> 00:03:12.500
beyond these
categories, and we want

00:03:12.500 --> 00:03:15.620
to enable you to do that
thoughtfully and over time.

00:03:18.753 --> 00:03:20.670
So today, we're going
to take you on a journey

00:03:20.670 --> 00:03:26.010
through the app development
process, starting with design.

00:03:26.010 --> 00:03:29.440
So we know that the automotive
space is very complex.

00:03:29.440 --> 00:03:33.880
There are a myriad of screen
sizes, shapes, resolutions,

00:03:33.880 --> 00:03:38.940
different input modalities,
and countless regulations.

00:03:38.940 --> 00:03:43.470
And we know that we want
to prioritize the driver.

00:03:43.470 --> 00:03:46.410
Their primary responsibility
is to focus on the road.

00:03:46.410 --> 00:03:50.600
Everything else is secondary.

00:03:50.600 --> 00:03:53.675
So the first vertical which
we want to enable is media.

00:03:53.675 --> 00:03:55.300
And we have borrowed
a lot of learnings

00:03:55.300 --> 00:03:58.547
from Android Auto over
the past few years

00:03:58.547 --> 00:04:00.130
where the user
experience is developed

00:04:00.130 --> 00:04:03.640
by Google in collaboration
with app developers.

00:04:03.640 --> 00:04:07.390
And it will be
customizable by car makers.

00:04:07.390 --> 00:04:11.440
So media will enable developers
to have a consistent experience

00:04:11.440 --> 00:04:14.560
across Android Auto and
Android Automotive OS

00:04:14.560 --> 00:04:18.029
so that the two
platforms are similar.

00:04:18.029 --> 00:04:21.380
It will enable developers to
maintain their apps branding,

00:04:21.380 --> 00:04:23.330
not worry about
driver distraction

00:04:23.330 --> 00:04:26.810
or making sure that it works
across the myriad of screen

00:04:26.810 --> 00:04:28.980
sizes.

00:04:28.980 --> 00:04:30.610
And for car makers,
it will allow

00:04:30.610 --> 00:04:33.610
them to customize the media
experience based on the system

00:04:33.610 --> 00:04:34.690
design and branding.

00:04:38.140 --> 00:04:40.150
So now I'm going to walk
through four key themes

00:04:40.150 --> 00:04:42.820
that we think about when
designing for automotive.

00:04:42.820 --> 00:04:44.860
These are the principles
that we used in order

00:04:44.860 --> 00:04:47.400
to design for media.

00:04:47.400 --> 00:04:49.590
The best part is,
as developers, you

00:04:49.590 --> 00:04:51.285
don't have to worry
about any of these.

00:04:51.285 --> 00:04:52.785
And I'll go through
these in detail.

00:04:55.480 --> 00:04:58.710
So the first theme is our
driver distraction guidelines.

00:04:58.710 --> 00:05:01.890
We take the complexity out
of designing for automotive.

00:05:01.890 --> 00:05:05.190
Here's a sample of
what we consider.

00:05:05.190 --> 00:05:08.160
Information should be
timely and relevant.

00:05:08.160 --> 00:05:10.220
Targets should be easy to touch.

00:05:10.220 --> 00:05:13.770
And we shouldn't distract the
driver with complex animation

00:05:13.770 --> 00:05:15.265
or video.

00:05:15.265 --> 00:05:16.890
And we want to
encourage people to keep

00:05:16.890 --> 00:05:17.970
their hands on the wheel.

00:05:20.730 --> 00:05:23.590
So the second theme is
our adaptive framework.

00:05:23.590 --> 00:05:25.650
And as I mentioned
earlier, the car landscape

00:05:25.650 --> 00:05:27.630
isn't getting any simpler.

00:05:27.630 --> 00:05:30.390
So we're working with
car makers globally

00:05:30.390 --> 00:05:33.060
to roll out a framework
across their cars

00:05:33.060 --> 00:05:35.730
in a way that keeps it
consistent for developers.

00:05:38.270 --> 00:05:41.000
Third is a
voice-optimized UI, which

00:05:41.000 --> 00:05:44.270
supports hands-free
driving with features

00:05:44.270 --> 00:05:47.840
like voice-optimized
search with speech-to-text,

00:05:47.840 --> 00:05:50.900
and the Google Assistant,
which will provide users

00:05:50.900 --> 00:05:52.880
quick access to
apps and content,

00:05:52.880 --> 00:05:58.300
without having to interact
directly with their screens.

00:05:58.300 --> 00:06:02.050
And finally, we want to make
sure the content is recognized

00:06:02.050 --> 00:06:06.550
by your users through the use
of your app's branding, icon,

00:06:06.550 --> 00:06:07.090
and colors.

00:06:10.140 --> 00:06:12.560
So that's all the stuff
that we've done for you.

00:06:12.560 --> 00:06:15.640
Now, I'm going to talk about
how to design media apps.

00:06:20.030 --> 00:06:22.400
So first, define
your architecture

00:06:22.400 --> 00:06:25.590
and determine the
primary navigation items.

00:06:25.590 --> 00:06:29.480
Design an icon and
label for each.

00:06:29.480 --> 00:06:33.290
Next, choose how you want
your content to be displayed.

00:06:33.290 --> 00:06:36.050
Should it appear in
a grid, or a list?

00:06:36.050 --> 00:06:38.480
This will likely be determined
by the type of content

00:06:38.480 --> 00:06:39.840
that you have.

00:06:39.840 --> 00:06:43.460
For example, you may want
to use a grid for content

00:06:43.460 --> 00:06:46.340
across categories, and
you may want to use a list

00:06:46.340 --> 00:06:49.990
to depict songs in an album.

00:06:49.990 --> 00:06:53.260
Third, customize your
playback controls,

00:06:53.260 --> 00:06:55.860
such as forward and
back 30 seconds,

00:06:55.860 --> 00:07:00.010
a thumbs-up or thumbs-down
to signify like or dislike.

00:07:00.010 --> 00:07:05.840
And make sure you design your
icons to represent each state.

00:07:05.840 --> 00:07:08.950
So fourth, design a
sign-in screen, if needed.

00:07:08.950 --> 00:07:11.980
And we recommend
using a dark theme.

00:07:11.980 --> 00:07:18.940
You may choose to implement
sign-in via Bluetooth, a PIN,

00:07:18.940 --> 00:07:22.105
username, or password, or
any combination of these.

00:07:25.310 --> 00:07:26.900
Next, design your settings.

00:07:26.900 --> 00:07:33.230
And again, we recommend
using a dark theme for this.

00:07:33.230 --> 00:07:36.380
Settings should include things
like accounts and profile

00:07:36.380 --> 00:07:40.400
information, app preferences
related to driving,

00:07:40.400 --> 00:07:44.900
and sign-in and
sign-out functions.

00:07:44.900 --> 00:07:47.500
And finally, provide
your branding elements--

00:07:47.500 --> 00:07:49.900
an app icon, which will be
used on all screens that

00:07:49.900 --> 00:07:53.620
depict content, an accent color
which a car maker may choose

00:07:53.620 --> 00:07:57.250
to implement, navigation
icons and labels,

00:07:57.250 --> 00:07:59.965
and any custom controls
that you wish to include.

00:08:03.340 --> 00:08:06.520
So to recap, we take care
of driver distraction

00:08:06.520 --> 00:08:08.930
so that you don't need
to worry about it.

00:08:08.930 --> 00:08:10.900
We have an adaptive
framework that makes it

00:08:10.900 --> 00:08:13.270
so that your content
is displayed correctly

00:08:13.270 --> 00:08:15.130
across screens.

00:08:15.130 --> 00:08:19.210
We optimize for voice
to make driving safe.

00:08:19.210 --> 00:08:23.290
And we make sure that your brand
is recognized by your users,

00:08:23.290 --> 00:08:27.690
and designing for
Automotive is easy.

00:08:27.690 --> 00:08:30.340
So to get more details
and more information,

00:08:30.340 --> 00:08:34.340
go to our UX guidelines
in the link on the screen.

00:08:34.340 --> 00:08:35.929
So thank you, very much.

00:08:35.929 --> 00:08:38.443
Now that I've talked to you
about designing for media apps,

00:08:38.443 --> 00:08:39.860
I'm going to hand
it over to Igor,

00:08:39.860 --> 00:08:42.905
who's going to talk about
developing for media apps.

00:08:42.905 --> 00:08:44.765
[APPLAUSE]

00:08:48.302 --> 00:08:49.760
IGOR RAZUMEIKO:
Thank you, Heather.

00:08:49.760 --> 00:08:50.427
Hello, everyone.

00:08:50.427 --> 00:08:52.100
My name is Igor Razumeiko.

00:08:52.100 --> 00:08:55.240
I'm a tech-lead working
on enabling applications

00:08:55.240 --> 00:08:59.740
to run on Android Automotive OS.

00:08:59.740 --> 00:09:03.250
So as Heather mentioned,
Android Automotive OS

00:09:03.250 --> 00:09:06.280
is where your applications
run natively inside of a car.

00:09:06.280 --> 00:09:08.267
And a phone is not needed.

00:09:08.267 --> 00:09:09.850
Also, she mentioned
that we are taking

00:09:09.850 --> 00:09:12.550
care of some driver
distractions,

00:09:12.550 --> 00:09:14.350
so you don't have to.

00:09:14.350 --> 00:09:16.330
So my part of the
talk is going to be

00:09:16.330 --> 00:09:18.490
about what you, as
a developer, need

00:09:18.490 --> 00:09:21.190
to do to enable your
application in the car.

00:09:21.190 --> 00:09:24.430
And we are starting
with media apps.

00:09:24.430 --> 00:09:26.440
So first of all,
Android Automotive OS

00:09:26.440 --> 00:09:30.910
is a different platform, but it
is very similar to Android Auto

00:09:30.910 --> 00:09:33.100
when it comes to
integrations of media apps.

00:09:33.100 --> 00:09:37.240
In fact, we kept almost all
integration points from Android

00:09:37.240 --> 00:09:40.390
Auto to Android Automotive OS.

00:09:40.390 --> 00:09:42.700
So let me go through
the steps that you

00:09:42.700 --> 00:09:47.350
need to do to enable your
application for a car.

00:09:47.350 --> 00:09:49.910
Well, first of all, you need
to build your audio service.

00:09:49.910 --> 00:09:51.910
And this part of
the talk, I'm not

00:09:51.910 --> 00:09:53.983
going to explain to
you how to do it,

00:09:53.983 --> 00:09:55.150
because it's totally on you.

00:09:58.700 --> 00:10:01.735
If your application uses
Google Play services,

00:10:01.735 --> 00:10:03.610
that's great, because
you still can use them,

00:10:03.610 --> 00:10:06.910
because we kept them
in the car as well.

00:10:06.910 --> 00:10:09.580
We removed some models that
didn't make sense in the car.

00:10:09.580 --> 00:10:12.000
But if we removed something
that you deeply care about,

00:10:12.000 --> 00:10:14.680
please talk to us and we'll
consider bringing them back.

00:10:17.590 --> 00:10:20.350
Some of Google Play
service's models,

00:10:20.350 --> 00:10:22.210
we already adapted for a car.

00:10:22.210 --> 00:10:23.800
Like things with
heavy UI, you'll

00:10:23.800 --> 00:10:25.180
be already riding in the car.

00:10:25.180 --> 00:10:30.970
And you'll have UI that is
themed for a specific car.

00:10:30.970 --> 00:10:36.030
So now, step two is familiar
for those of you who already did

00:10:36.030 --> 00:10:37.900
adaptation for Android Auto.

00:10:37.900 --> 00:10:39.550
You need to integrate
with MediaSession

00:10:39.550 --> 00:10:41.500
and implement
MediaBrowserService.

00:10:41.500 --> 00:10:44.290
And MediaSession
is basically how

00:10:44.290 --> 00:10:46.290
you control your
music playback--

00:10:46.290 --> 00:10:48.820
previous, next, pause, play.

00:10:48.820 --> 00:10:53.650
And this is how it will be
integrated with car hardware.

00:10:53.650 --> 00:10:57.270
MediaBrowserService is needed if
you want to expose the content,

00:10:57.270 --> 00:11:00.160
but you want to provide
to user to play.

00:11:00.160 --> 00:11:03.370
So this is how you build
your tree structure, which

00:11:03.370 --> 00:11:07.040
user can navigate to find the
right music to play or right

00:11:07.040 --> 00:11:09.320
podcast to play.

00:11:09.320 --> 00:11:13.168
So if you integrated
with Android Auto,

00:11:13.168 --> 00:11:14.210
you already have done it.

00:11:14.210 --> 00:11:16.548
So all these steps,
we already covered

00:11:16.548 --> 00:11:17.590
in our previous sessions.

00:11:17.590 --> 00:11:18.965
There is plenty
of documentations

00:11:18.965 --> 00:11:21.360
online on our developer
site how to do it.

00:11:24.670 --> 00:11:27.490
Some specifics when you
integrate in MediaSession

00:11:27.490 --> 00:11:28.900
specifically for a car.

00:11:28.900 --> 00:11:32.360
Well first of all, when
your service is created,

00:11:32.360 --> 00:11:34.430
you need to create a
MediaSession immediately.

00:11:34.430 --> 00:11:37.055
So it will be ready to
play when the car starts.

00:11:39.640 --> 00:11:43.870
And to prepare a music to
play faster when the user hits

00:11:43.870 --> 00:11:47.720
a key, so you react
to onPrepare(),

00:11:47.720 --> 00:11:52.752
and you set your
MediaSession to STATE_PAUSED.

00:11:52.752 --> 00:11:54.710
You don't need to start
playback automatically.

00:11:54.710 --> 00:11:57.570
Your car will tell you
when it's ready to play,

00:11:57.570 --> 00:12:01.460
because it keeps
the state of what

00:12:01.460 --> 00:12:04.310
was happening in music
if user paused it

00:12:04.310 --> 00:12:07.400
before leaving the car
or if user was playing

00:12:07.400 --> 00:12:09.940
when they left their car.

00:12:09.940 --> 00:12:14.860
And also framework will
remember which application was

00:12:14.860 --> 00:12:16.350
playing the media last time.

00:12:16.350 --> 00:12:18.570
So it will resume
exactly same application

00:12:18.570 --> 00:12:22.290
when driver gets
back into the car.

00:12:22.290 --> 00:12:25.770
So to recap-- these
two steps, building

00:12:25.770 --> 00:12:28.460
a service and implementation
of MediaSession

00:12:28.460 --> 00:12:31.320
and MediaBrowserService,
is exactly the same steps

00:12:31.320 --> 00:12:35.090
that you would have done for
integrating with Android Auto.

00:12:35.090 --> 00:12:37.057
So it should be known to you.

00:12:37.057 --> 00:12:38.890
So now let's talk about
things that are new,

00:12:38.890 --> 00:12:42.630
that are specific for
Android Automotive OS.

00:12:42.630 --> 00:12:45.120
First of all, you need to
declare your application that

00:12:45.120 --> 00:12:47.730
is done for cars.

00:12:47.730 --> 00:12:48.880
And this is pretty simple.

00:12:48.880 --> 00:12:52.180
You just add these two lines to
your manifest, and you're done.

00:12:52.180 --> 00:12:54.602
This way also you have a
Play Store in your car.

00:12:54.602 --> 00:12:57.060
It will recognize that your
application was done for a car,

00:12:57.060 --> 00:13:00.180
and it will be available
for users to install.

00:13:03.360 --> 00:13:06.420
Next step is, it could be
easy or it could be hard.

00:13:06.420 --> 00:13:09.840
If your application
is [INAUDIBLE] already

00:13:09.840 --> 00:13:12.840
with your playback services
separate from your user

00:13:12.840 --> 00:13:17.820
interface, you just need to
exclude your mobile activities

00:13:17.820 --> 00:13:20.730
from a packet that you're
going to be making for a car,

00:13:20.730 --> 00:13:23.550
because mobile activities
are not designed for a car.

00:13:23.550 --> 00:13:25.680
They are not
distraction-optimized,

00:13:25.680 --> 00:13:28.148
so they will not be
allowed in your car,

00:13:28.148 --> 00:13:29.940
except with a couple
of exceptions that I'm

00:13:29.940 --> 00:13:31.023
going to talk about later.

00:13:33.950 --> 00:13:35.690
One exception is
sign-in activity,

00:13:35.690 --> 00:13:37.400
because you don't
have your phone

00:13:37.400 --> 00:13:38.690
to start playing in the car.

00:13:38.690 --> 00:13:41.670
You need your user
to sign in somehow.

00:13:41.670 --> 00:13:48.200
And so you implement activity
which is designed for a car.

00:13:48.200 --> 00:13:52.010
And since you don't have
any other activities,

00:13:52.010 --> 00:13:53.660
you don't launch it yourself.

00:13:53.660 --> 00:13:55.390
The framework will
launch it for you.

00:13:55.390 --> 00:13:58.370
And the way you do it--
you will set an error state

00:13:58.370 --> 00:14:03.080
on MediaSession, and
you set specific extra

00:14:03.080 --> 00:14:10.910
with the resolution intent to
take you to a sign-in activity.

00:14:10.910 --> 00:14:15.230
So you set extra, and
you set playback session

00:14:15.230 --> 00:14:18.410
into an error state, saying
authentication required.

00:14:21.370 --> 00:14:23.250
Settings activity is optional.

00:14:23.250 --> 00:14:25.490
If you need to control
playback, for example--

00:14:25.490 --> 00:14:27.740
maybe you need to
download music,

00:14:27.740 --> 00:14:31.040
and you need to set
a playback quality--

00:14:31.040 --> 00:14:34.220
settings activity is optional.

00:14:34.220 --> 00:14:37.070
The way you declared it,
it's pretty standard.

00:14:37.070 --> 00:14:41.060
You just say, intent filter
applications preferences,

00:14:41.060 --> 00:14:42.770
and this will be
automatically recognized

00:14:42.770 --> 00:14:44.300
by the platform itself.

00:14:44.300 --> 00:14:48.660
And it will display an icon,
so user can go to settings.

00:14:48.660 --> 00:14:53.330
Sign-in and settings activity
are driver distraction

00:14:53.330 --> 00:14:53.980
not optimized.

00:14:53.980 --> 00:14:57.020
So will only be allowed
when the car is parked.

00:15:00.140 --> 00:15:00.640
All right.

00:15:00.640 --> 00:15:02.742
Some things to consider.

00:15:02.742 --> 00:15:04.450
When you're implementing
your activities,

00:15:04.450 --> 00:15:08.697
don't set them to any
specific orientation.

00:15:08.697 --> 00:15:09.780
You can't rotate your car.

00:15:13.140 --> 00:15:14.940
Avoid using notifications.

00:15:14.940 --> 00:15:21.060
Notifications are not
optimized for driving,

00:15:21.060 --> 00:15:22.450
and the user might miss one.

00:15:22.450 --> 00:15:25.260
So only important
notifications will

00:15:25.260 --> 00:15:29.190
be displayed when the user is
driving, and everything else--

00:15:29.190 --> 00:15:33.260
just be mindful when
using notifications.

00:15:33.260 --> 00:15:36.230
Those are even harder
to see in a car

00:15:36.230 --> 00:15:39.080
because drivers are
focusing on the road mostly.

00:15:39.080 --> 00:15:41.000
So don't use those.

00:15:41.000 --> 00:15:44.260
In the future, we might
even disable them.

00:15:44.260 --> 00:15:50.665
Permissions, also like not
really a great idea to ask,

00:15:50.665 --> 00:15:52.540
as a user is driving,
to ask for permissions.

00:15:52.540 --> 00:15:55.780
If you absolutely have
to ask for permission,

00:15:55.780 --> 00:15:59.290
do it in your settings
and sign-in activity.

00:15:59.290 --> 00:16:02.780
And car screens
could be very large.

00:16:02.780 --> 00:16:08.200
So if you provide graphics
to an infotainment system,

00:16:08.200 --> 00:16:10.420
provide all the vector
images where possible.

00:16:10.420 --> 00:16:12.100
Because some screens
are very large,

00:16:12.100 --> 00:16:15.040
and your bitmaps might
not look very great.

00:16:20.330 --> 00:16:24.440
So let's recap.

00:16:24.440 --> 00:16:27.470
So you build your audio
service, which you probably

00:16:27.470 --> 00:16:28.880
already know how to do it.

00:16:28.880 --> 00:16:33.440
You implement MediaSession and
MediaBrowserService interfaces.

00:16:33.440 --> 00:16:36.140
And you implement
all the steps that I

00:16:36.140 --> 00:16:38.470
was talking about that
are specific for a car.

00:16:41.660 --> 00:16:44.870
So now, Roberto is going
to talk to you about tools

00:16:44.870 --> 00:16:48.440
that we built in for working
with applications for cars.

00:16:48.440 --> 00:16:51.080
And he will also go for
some practical demo,

00:16:51.080 --> 00:16:54.738
how to build a music
application for a car.

00:16:54.738 --> 00:16:56.160
[APPLAUSE]

00:16:59.010 --> 00:17:00.400
ROBERTO PEREZ: Thank you, Igor.

00:17:00.400 --> 00:17:01.870
My name is Roberto
Perez, and I'm

00:17:01.870 --> 00:17:03.850
going to walk you
through the changes we

00:17:03.850 --> 00:17:05.859
have done to the
Android Elementals

00:17:05.859 --> 00:17:06.970
to support Automotive OS.

00:17:09.520 --> 00:17:12.579
Some of the changes we've
done are on Android Studio.

00:17:12.579 --> 00:17:15.490
What we have included
are new code templates

00:17:15.490 --> 00:17:18.250
that are going to allow you
to develop for Automotive OS

00:17:18.250 --> 00:17:20.744
more easily.

00:17:20.744 --> 00:17:22.119
The first template
I want to talk

00:17:22.119 --> 00:17:25.810
is the new project template.

00:17:25.810 --> 00:17:27.940
This is going to
create a project that

00:17:27.940 --> 00:17:32.420
contains support for both
Android Auto an Automotive OS.

00:17:32.420 --> 00:17:35.990
And it also includes a
skeleton of a media service.

00:17:35.990 --> 00:17:39.130
You will have to do the work
of implementing your business

00:17:39.130 --> 00:17:41.080
logic and your
streaming, but it's

00:17:41.080 --> 00:17:45.510
going to give you a
framework where to start.

00:17:45.510 --> 00:17:50.400
The second template is a new
module Automotive template.

00:17:50.400 --> 00:17:53.430
This is in the case that you
already have an application,

00:17:53.430 --> 00:17:55.800
and this application
already implements

00:17:55.800 --> 00:17:57.940
all the necessary
pieces for Android Auto,

00:17:57.940 --> 00:18:01.800
and you want to extend it
to support Automotive OS.

00:18:01.800 --> 00:18:05.190
The template is going to add
a new module, the declarations

00:18:05.190 --> 00:18:07.410
to indicate that
this application is

00:18:07.410 --> 00:18:09.630
meant to be run on the car.

00:18:09.630 --> 00:18:16.560
And you can then connect it to
your existing business logic.

00:18:16.560 --> 00:18:20.270
Now, when it gets to the
point of testing your code,

00:18:20.270 --> 00:18:24.200
we don't expect you to go and
buy cars to be able to test it.

00:18:24.200 --> 00:18:27.530
The best option is to
use an Android emulator.

00:18:27.530 --> 00:18:29.510
And to that end,
we are including

00:18:29.510 --> 00:18:33.510
two new virtual devices
that you can use.

00:18:33.510 --> 00:18:37.550
The first one is a generic
Automotive OS virtual device.

00:18:37.550 --> 00:18:40.640
This contains a reference
implementation of the media

00:18:40.640 --> 00:18:46.460
experience, and
Google's Play services,

00:18:46.460 --> 00:18:49.010
and all the necessary
pieces for you

00:18:49.010 --> 00:18:51.690
to be able to test
your application.

00:18:51.690 --> 00:18:56.150
You can also see the same
system image in the Codelabs

00:18:56.150 --> 00:18:58.880
here in I/O where
you can play with it.

00:19:01.980 --> 00:19:06.750
The second virtual device is
actually provided by Volvo.

00:19:06.750 --> 00:19:09.030
It's the same experience
that you're going

00:19:09.030 --> 00:19:11.400
to see in the Polestar 2 car.

00:19:11.400 --> 00:19:15.330
You actually can see this
in action in our garage,

00:19:15.330 --> 00:19:19.650
and it contains the
Polestar version

00:19:19.650 --> 00:19:22.260
of the media experience.

00:19:22.260 --> 00:19:24.540
Instructions on how to
download it and install it

00:19:24.540 --> 00:19:25.950
are in the link on the screen.

00:19:28.540 --> 00:19:31.960
And of course, as we introduce
new features, more form factors

00:19:31.960 --> 00:19:34.400
come into play,
different screen sizes,

00:19:34.400 --> 00:19:38.760
we are going to be updating
the list of emulators.

00:19:38.760 --> 00:19:41.550
The tools I just described
are available today

00:19:41.550 --> 00:19:45.380
as part of the Android
Studio 3.5 beta.

00:19:45.380 --> 00:19:47.490
Just a note-- the
Automotive features

00:19:47.490 --> 00:19:49.530
are behind the feature flag.

00:19:49.530 --> 00:19:51.870
Instructions on
how to enable them

00:19:51.870 --> 00:19:55.860
are on the link on the screen.

00:19:55.860 --> 00:19:58.160
So now it's time
to do some demo.

00:19:58.160 --> 00:20:01.440
And from the framework
that Igor presented,

00:20:01.440 --> 00:20:04.670
the three steps on how
to build a media app,

00:20:04.670 --> 00:20:06.890
I am going to focus
on the third one--

00:20:06.890 --> 00:20:10.200
the Automotive-specific
features.

00:20:10.200 --> 00:20:12.340
So to fast-forward
my demo, I'm going

00:20:12.340 --> 00:20:15.270
to start from an
existing project.

00:20:15.270 --> 00:20:19.790
This project is a simplified
version of the universal media

00:20:19.790 --> 00:20:21.710
sample app.

00:20:21.710 --> 00:20:24.650
This sample application
is provided by Google.

00:20:24.650 --> 00:20:27.860
It's publicly
available on GitHub.

00:20:27.860 --> 00:20:32.823
It contains all the pieces of
a complete media application.

00:20:32.823 --> 00:20:34.740
It does the streaming,
implements MediaSession

00:20:34.740 --> 00:20:35.990
and MediaBrowserService.

00:20:35.990 --> 00:20:38.960
So I'm going to start
from here, and I'm

00:20:38.960 --> 00:20:44.060
going to use the Android
Studio template to add

00:20:44.060 --> 00:20:46.580
Automotive support.

00:20:46.580 --> 00:20:49.350
I'm going to test
it on the emulator.

00:20:49.350 --> 00:20:52.340
And in the end, we're going
to have a fully-fleshed media

00:20:52.340 --> 00:20:56.180
application running
on Automotive OS.

00:20:56.180 --> 00:20:57.970
So now, if we can
switch to my laptop.

00:21:04.410 --> 00:21:05.530
So this is my project.

00:21:05.530 --> 00:21:08.190
It contains two modules.

00:21:08.190 --> 00:21:10.290
One of them is mobile.

00:21:10.290 --> 00:21:13.170
This module contains all
the assets for the phone.

00:21:13.170 --> 00:21:17.340
So it contains sign-in
activities, all the activities

00:21:17.340 --> 00:21:18.840
that you see on the phone.

00:21:18.840 --> 00:21:22.250
And it's the one that generates
the .apk that powers Android

00:21:22.250 --> 00:21:24.580
Auto.

00:21:24.580 --> 00:21:28.690
The second module
is called media.

00:21:28.690 --> 00:21:33.190
It contains a music service,
which does all the business

00:21:33.190 --> 00:21:36.910
logic for playback and
implementation of MediaSession

00:21:36.910 --> 00:21:38.770
and MediaBrowserService.

00:21:38.770 --> 00:21:41.630
So as you can see, I'm
starting from a good place.

00:21:41.630 --> 00:21:45.133
It contains all the pieces
for supporting Android Auto.

00:21:45.133 --> 00:21:47.050
So what I'm going to do
is I'm going to extend

00:21:47.050 --> 00:21:49.940
it to support Automotive OS.

00:21:49.940 --> 00:21:52.805
I'm going to use the
new module template.

00:21:56.200 --> 00:22:00.120
I'm going to select
Automotive, and I'm

00:22:00.120 --> 00:22:01.530
going to complete the form.

00:22:01.530 --> 00:22:04.300
The first thing, I need to
give my application a name.

00:22:04.300 --> 00:22:06.300
This is the name that
is going to appear

00:22:06.300 --> 00:22:09.250
to the users on
the app selector.

00:22:09.250 --> 00:22:10.510
I'm going to say, Aural.

00:22:10.510 --> 00:22:13.360
This is the fake
application name

00:22:13.360 --> 00:22:16.030
we've been using for the demos.

00:22:16.030 --> 00:22:19.060
I'm going to rename
my module Automotive,

00:22:19.060 --> 00:22:21.340
to make it clear
that this is where

00:22:21.340 --> 00:22:24.100
all the Automotive-specific
things are going to go,

00:22:24.100 --> 00:22:28.140
like all the vehicle-optimized
activities and assets.

00:22:28.140 --> 00:22:31.820
And I need to change
my package name

00:22:31.820 --> 00:22:35.950
to match the code
I already have.

00:22:35.950 --> 00:22:37.900
The wizard is going
to ask me if I want

00:22:37.900 --> 00:22:40.120
to create a new media service.

00:22:40.120 --> 00:22:43.020
And the truth is, we already
have one in the share module,

00:22:43.020 --> 00:22:44.020
so I'm going to say, no.

00:22:46.720 --> 00:22:49.690
And now we just need to wait
for Gradle to do its thing,

00:22:49.690 --> 00:22:52.390
and we get our third module.

00:22:52.390 --> 00:22:54.790
If we look a little
deeper, we can

00:22:54.790 --> 00:22:59.410
see that this manifest includes
the declarations to say

00:22:59.410 --> 00:23:04.140
that this is an
Automotive OS application.

00:23:04.140 --> 00:23:05.860
But my module is empty.

00:23:05.860 --> 00:23:08.750
There's no code here,
and that's because we

00:23:08.750 --> 00:23:13.060
said we are going to use the
content of the media module

00:23:13.060 --> 00:23:14.630
that we already have.

00:23:14.630 --> 00:23:18.250
So for that, I need
to add a dependency.

00:23:18.250 --> 00:23:20.960
I'm going to add a line
to this Gradle file.

00:23:26.790 --> 00:23:29.210
And this is going to tell
the Automotive module

00:23:29.210 --> 00:23:34.250
to reuse the media service that
we have on the media module.

00:23:34.250 --> 00:23:36.950
My media module uses
Java 8, so I also

00:23:36.950 --> 00:23:39.370
need to copy this
deceleration over there.

00:23:42.140 --> 00:23:43.260
And that's it.

00:23:43.260 --> 00:23:46.410
This is all the code I need
to have an Automotive OS

00:23:46.410 --> 00:23:47.710
application.

00:23:47.710 --> 00:23:50.820
Now, in order to test it, I
said before, the best option

00:23:50.820 --> 00:23:53.220
is to use an emulator.

00:23:53.220 --> 00:23:57.580
And this is where we added some
new features to Android Studio.

00:23:57.580 --> 00:24:00.450
We have a new
section, Automotive.

00:24:00.450 --> 00:24:04.110
And here's where we have
the two new virtual devices.

00:24:04.110 --> 00:24:10.940
So I'm going to
complete this wizard,

00:24:10.940 --> 00:24:13.460
and we have a new virtual
device ready to launch.

00:24:17.730 --> 00:24:19.580
So here, we have the
emulator running.

00:24:19.580 --> 00:24:24.130
While this is booting, I'm
going to complete my code.

00:24:24.130 --> 00:24:26.200
All I need to do
is to compile it.

00:24:26.200 --> 00:24:30.460
Now, you're going to notice
there is this red cross here.

00:24:30.460 --> 00:24:32.550
And that's because
Android Studio

00:24:32.550 --> 00:24:35.690
is complaining that there's
no activity to launch.

00:24:35.690 --> 00:24:39.520
And that's actually by
design because, in our case,

00:24:39.520 --> 00:24:42.850
this application doesn't
have a launcher activity.

00:24:42.850 --> 00:24:45.280
The application is going
to be launched by the media

00:24:45.280 --> 00:24:48.240
experience by the system.

00:24:48.240 --> 00:24:50.642
So I'm going to
select nothing here.

00:24:50.642 --> 00:24:52.600
So this is going to tell
Android Studio to just

00:24:52.600 --> 00:24:54.970
compile and install it,
but not to launch it.

00:24:58.240 --> 00:25:03.350
And I want to show you
the media experience.

00:25:03.350 --> 00:25:06.670
These are the applications
we have by default.

00:25:06.670 --> 00:25:09.055
And if I compile--

00:25:14.062 --> 00:25:15.770
we just need to wait
a couple of seconds.

00:25:18.670 --> 00:25:21.840
Android Studio just told me
that it's compiled successfully

00:25:21.840 --> 00:25:23.470
and installed successfully.

00:25:23.470 --> 00:25:26.350
So now, we have our
new application here.

00:25:26.350 --> 00:25:29.860
If I click on it, we have
an application working.

00:25:29.860 --> 00:25:31.300
I can select a song.

00:25:31.300 --> 00:25:35.110
This is going to start playing,
and we have our application

00:25:35.110 --> 00:25:38.490
working on Automotive OS.

00:25:38.490 --> 00:25:40.590
I want to show this
same application, how

00:25:40.590 --> 00:25:44.230
it looks on the Polestar.

00:25:44.230 --> 00:25:49.990
So I'm going to
select the Polestar 2,

00:25:49.990 --> 00:25:53.335
and I'm going to launch
that virtual device.

00:25:56.940 --> 00:26:02.768
While this is booting, we
can start compiling again.

00:26:02.768 --> 00:26:04.736
Oh, I need to wait.

00:26:10.140 --> 00:26:10.640
OK.

00:26:17.550 --> 00:26:18.860
Application is ready.

00:26:21.800 --> 00:26:24.150
And we can see this
same application,

00:26:24.150 --> 00:26:26.250
how it looks a little
different, because this

00:26:26.250 --> 00:26:28.020
is using the
customizations that Volvo

00:26:28.020 --> 00:26:29.720
has done on their own system.

00:26:32.444 --> 00:26:36.560
OK, and that's the demo.

00:26:36.560 --> 00:26:39.217
Can we switch back
to the presentation?

00:26:43.040 --> 00:26:44.890
OK, that went well.

00:26:44.890 --> 00:26:46.786
Thank you.

00:26:46.786 --> 00:26:50.490
[APPLAUSE]

00:26:50.490 --> 00:26:53.040
Now with our code ready,
we are ready to publish

00:26:53.040 --> 00:26:53.790
our application.

00:26:53.790 --> 00:26:56.610
And for that, what
we're going to be using

00:26:56.610 --> 00:26:58.540
is using app bundles.

00:26:58.540 --> 00:27:00.990
App bundles is a
format that allows

00:27:00.990 --> 00:27:04.770
you to package all your
assets, both for the phone

00:27:04.770 --> 00:27:07.500
and for the car, in a
single package that you can

00:27:07.500 --> 00:27:09.525
upload to Google Play Store.

00:27:09.525 --> 00:27:11.400
Then, Google Play Store
is going to take care

00:27:11.400 --> 00:27:16.360
to distribute the corresponding
package to each device.

00:27:16.360 --> 00:27:21.785
This is going to streamline the
way you manage your uploads.

00:27:21.785 --> 00:27:24.160
Google Play Store is going to
start receiving submissions

00:27:24.160 --> 00:27:27.340
later this year.

00:27:27.340 --> 00:27:30.150
So to summarize, I want
to give you a roadmap,

00:27:30.150 --> 00:27:33.235
depending on where you are
on your development process.

00:27:33.235 --> 00:27:35.110
Let's say that you are
starting from scratch.

00:27:35.110 --> 00:27:36.810
You don't have an
application yet.

00:27:36.810 --> 00:27:40.110
Then, there are two
options where to start.

00:27:40.110 --> 00:27:43.290
One is you can use the
templates that I showed you

00:27:43.290 --> 00:27:45.840
on Android Studio.

00:27:45.840 --> 00:27:48.330
This is going to give
you the skeleton,

00:27:48.330 --> 00:27:50.848
the necessary structure
to start from,

00:27:50.848 --> 00:27:52.890
but you will have to
implement all their business

00:27:52.890 --> 00:27:55.450
logic yourself.

00:27:55.450 --> 00:27:57.730
The other option is to start
from the other end, that

00:27:57.730 --> 00:28:00.820
is using this universal
media player sample app.

00:28:00.820 --> 00:28:02.350
This contains all the code.

00:28:02.350 --> 00:28:05.710
It implements support for all
the form factors in Android,

00:28:05.710 --> 00:28:08.050
including Automotive OS.

00:28:08.050 --> 00:28:10.840
And it has all the
implementation and solutions

00:28:10.840 --> 00:28:13.150
for common problems
while dealing with media.

00:28:15.830 --> 00:28:18.110
Then, maybe you already
have an application,

00:28:18.110 --> 00:28:21.230
but it doesn't implement
Media Service yet.

00:28:21.230 --> 00:28:24.753
So you can use the Automotive
Media Service template.

00:28:24.753 --> 00:28:27.170
This is going to give you the
skeleton of a Media Service.

00:28:27.170 --> 00:28:29.220
It's going to add
it to your project.

00:28:29.220 --> 00:28:33.920
You will need to hook that up
to your existing business logic.

00:28:33.920 --> 00:28:37.790
Or maybe you already have
an Android Auto application,

00:28:37.790 --> 00:28:40.740
but it's built as a
monolithic codebase.

00:28:40.740 --> 00:28:43.760
So in that case, you will need
to work on modularizing it.

00:28:43.760 --> 00:28:46.940
And by that, I mean
separating your phone assets

00:28:46.940 --> 00:28:48.723
from the Media Service.

00:28:48.723 --> 00:28:51.140
That way, you are going to be
able to reuse use your Media

00:28:51.140 --> 00:28:54.140
Service for Automotive.

00:28:54.140 --> 00:28:57.330
If you got to this point,
you are almost done.

00:28:57.330 --> 00:29:00.260
All you need to do is
to add the declaration

00:29:00.260 --> 00:29:02.390
to support Automotive OS.

00:29:02.390 --> 00:29:05.120
And if your application
needs sign-in or settings,

00:29:05.120 --> 00:29:08.630
you need to develop
vehicle-optimized activities

00:29:08.630 --> 00:29:13.400
and configure it, as
Igor explained before.

00:29:13.400 --> 00:29:16.850
In the end, we expect a
project similar to this--

00:29:16.850 --> 00:29:19.190
one module dedicated
to the phone that

00:29:19.190 --> 00:29:22.340
is going to power both the phone
experience and the Android Auto

00:29:22.340 --> 00:29:25.670
experience, and a module
for Automotive that

00:29:25.670 --> 00:29:28.850
is going to contain
vehicle-optimized assets

00:29:28.850 --> 00:29:30.860
meant to be run on the car.

00:29:30.860 --> 00:29:32.300
And then a third
module containing

00:29:32.300 --> 00:29:34.223
most of your business logic--

00:29:34.223 --> 00:29:35.640
the implementation
of MediaSession

00:29:35.640 --> 00:29:38.270
and MediaBrowserService-- as a
shared module between the two.

00:29:40.790 --> 00:29:43.490
We have updated the
Android developers website

00:29:43.490 --> 00:29:49.860
with step-by-step instructions
on how to get this done.

00:29:49.860 --> 00:29:52.880
And if you want to
get your hands dirty,

00:29:52.880 --> 00:29:57.590
we have the Codelabs here at
I/O with these little bench

00:29:57.590 --> 00:29:59.220
units where you
can test creating

00:29:59.220 --> 00:30:00.515
an application from scratch.

00:30:03.410 --> 00:30:07.200
Later today, we're going
to be hosting Office Hours,

00:30:07.200 --> 00:30:09.230
and we would love
to hear from you.

00:30:09.230 --> 00:30:12.560
If you have any questions
on what we presented today,

00:30:12.560 --> 00:30:15.920
or if you have any other
ideas on the Automotive space,

00:30:15.920 --> 00:30:18.200
we would love to hear you.

00:30:18.200 --> 00:30:21.260
In the same area,
we have two cars.

00:30:21.260 --> 00:30:25.550
One of them is the Polestar 2
running the system experience

00:30:25.550 --> 00:30:27.330
that I presented before.

00:30:27.330 --> 00:30:33.000
So come and see
Automotive OS in action.

00:30:33.000 --> 00:30:34.250
So this is it.

00:30:34.250 --> 00:30:37.130
Here are all the links
that we presented

00:30:37.130 --> 00:30:39.140
during today's session.

00:30:39.140 --> 00:30:42.170
We are hoping to see your
applications hitting the road.

00:30:42.170 --> 00:30:43.250
Thank you, for coming.

00:30:43.250 --> 00:30:43.850
[APPLAUSE]

00:30:43.850 --> 00:30:46.000
[MUSIC PLAYING]

