WEBVTT
Kind: captions
Language: en

00:00:00.220 --> 00:00:02.222
&gt;&gt; All right, Michael. So I, all I have written up

00:00:02.222 --> 00:00:06.030
here for you is, are a maximum a posteriori equation, right?

00:00:06.030 --> 00:00:10.394
So the best hypothesis is the one that maximizes this expression.

00:00:10.394 --> 00:00:13.576
Nothing new, right? So I want to do a little trick, the

00:00:13.576 --> 00:00:16.860
same trick that you did before. So, you noticed that when

00:00:16.860 --> 00:00:19.160
we had E to the something, that we could use the

00:00:19.160 --> 00:00:23.250
natural log on E to get rid of everything. So I

00:00:23.250 --> 00:00:25.300
am going to try to do the same thing here. In the

00:00:25.300 --> 00:00:26.940
nat, why did the natural log work again?

00:00:26.940 --> 00:00:30.360
&gt;&gt; Well, it's the inverse of the E, but it let us turn products into sums.

00:00:30.360 --> 00:00:33.120
&gt;&gt; Right. And the other reason it worked is because it's a.

00:00:33.120 --> 00:00:34.320
&gt;&gt; Oh, it's monotonic.

00:00:34.320 --> 00:00:35.470
&gt;&gt; Right, it's a monotonic function and

00:00:35.470 --> 00:00:37.580
so it doesn't change the argmax. So, I'm

00:00:37.580 --> 00:00:40.710
going to do the log of both sides here. But this time I'm going to do

00:00:40.710 --> 00:00:43.200
log base 2, for no particular reason other

00:00:43.200 --> 00:00:45.970
than it'll turn out to help later. So,

00:00:45.970 --> 00:00:47.470
I'm just going to take the log of

00:00:47.470 --> 00:00:50.340
this entire expression, which, because it turns products

00:00:50.340 --> 00:00:53.350
into sums, gives me this. And by the way for

00:00:53.350 --> 00:00:54.980
those of you who haven't noticed, I drew in a little

00:00:54.980 --> 00:00:57.804
bit of notation here. When you write just LG, it's just

00:00:57.804 --> 00:01:01.640
log base 2. Okay, so, we agree that the answer to

00:01:01.640 --> 00:01:04.190
this equation and the answer to this equation is the same.

00:01:04.190 --> 00:01:06.310
And now I'm going to do one other little trick, exactly

00:01:06.310 --> 00:01:08.440
the trick that you used before. I'm going to change my

00:01:08.440 --> 00:01:12.380
max into a min, by simply multiplying everything by minus 1.

00:01:12.380 --> 00:01:14.160
&gt;&gt; Okay, I don't quite see where you're going here.

00:01:14.160 --> 00:01:15.370
&gt;&gt; But you agree that

00:01:15.370 --> 00:01:16.710
we haven't changed the answer.

00:01:16.710 --> 00:01:17.910
&gt;&gt; I agree that we haven't changed the answer.

00:01:17.910 --> 00:01:20.012
&gt;&gt; Okay. Do a log in there, do a minus

00:01:20.012 --> 00:01:21.490
sign in there that took us from a max to a

00:01:21.490 --> 00:01:26.900
min, but I haven't changed the answer. Now, do you recognize anything

00:01:26.900 --> 00:01:31.790
about these expressions? I'll give you a hint. Information theory.

00:01:31.790 --> 00:01:35.070
&gt;&gt; Okay. So, information theory is usually entropy,

00:01:35.070 --> 00:01:37.920
which is like sum of P log P stuff.

00:01:37.920 --> 00:01:38.430
&gt;&gt; Right.

00:01:38.430 --> 00:01:40.650
&gt;&gt; I'm not seeing that.

00:01:40.650 --> 00:01:42.530
&gt;&gt; Well, there you, there's your log and there's your P.

00:01:42.530 --> 00:01:43.516
&gt;&gt; Sure. [LAUGH]

00:01:43.516 --> 00:01:43.880
&gt;&gt; [LAUGH]

00:01:43.880 --> 00:01:45.320
&gt;&gt; It's not P times that though.

00:01:45.320 --> 00:01:49.100
&gt;&gt; That's true. But we know from information theory, based exactly on this

00:01:49.100 --> 00:01:55.040
notion of entropy, that the optimal code for some event with probability P has

00:01:55.040 --> 00:02:01.990
length minus log base 2 of P. So, that just comes straight out of information

00:02:01.990 --> 00:02:05.760
theory. That's where all the entropy stuff comes from. Okay. So, if we

00:02:05.760 --> 00:02:08.740
have some event that has some particular probability P of happening,

00:02:08.740 --> 00:02:12.360
the best code for it has this structure, minus log of P.

00:02:12.360 --> 00:02:13.480
&gt;&gt; Okay.

00:02:13.480 --> 00:02:16.140
&gt;&gt; So, if we take this fact that we know, and

00:02:16.140 --> 00:02:20.748
we apply it to here, what is this actually saying? This is

00:02:20.748 --> 00:02:26.432
saying that, in order to find the maximum a posteriori hypothesis,

00:02:26.432 --> 00:02:31.234
we want to some how minimize two terms that can be described

00:02:31.234 --> 00:02:32.399
as lengths.

00:02:32.399 --> 00:02:34.540
&gt;&gt; Okay. I can see that.

00:02:34.540 --> 00:02:38.560
&gt;&gt; So my question to you is, given that this definition over here, that an

00:02:38.560 --> 00:02:41.173
event with probability P has some length minus

00:02:41.173 --> 00:02:43.180
log P, what is this the length of?

00:02:43.180 --> 00:02:44.870
&gt;&gt; So that would be the length of

00:02:44.870 --> 00:02:46.840
the probability of the data given the hypothesis.

00:02:46.840 --> 00:02:47.723
&gt;&gt; Mm-hm.

00:02:47.723 --> 00:02:51.200
&gt;&gt; And the length of the hypothesis, or the probability of the hypothesis.

00:02:51.200 --> 00:02:52.530
&gt;&gt; Well no, it's just the length of that hypothesis.

00:02:52.530 --> 00:02:54.390
&gt;&gt; Oh, because the event is what has the length.

00:02:54.390 --> 00:02:56.990
Oh, I see. So it's the length of the data,

00:02:56.990 --> 00:02:59.260
given the hypothesis, and the length of the hypothesis.

00:02:59.260 --> 00:03:01.405
&gt;&gt; Right. So let's write that out.

00:03:01.405 --> 00:03:04.134
&gt;&gt; But I was just doing, like, pattern matching

00:03:04.134 --> 00:03:05.950
there. It's not clear to me what a length

00:03:05.950 --> 00:03:08.870
of a hypothesis is. Hypotheses are functions. I don't

00:03:08.870 --> 00:03:10.440
know how to take a tape measure to a function.

00:03:10.440 --> 00:03:14.260
&gt;&gt; That's fair. So this is the length of the hypothesis. Right?

00:03:14.260 --> 00:03:14.730
&gt;&gt; Yep.

00:03:14.730 --> 00:03:19.160
&gt;&gt; So, you said you don't know what that means. But, let's think about

00:03:19.160 --> 00:03:22.022
that out loud for a moment. What does it mean to have a length of

00:03:22.022 --> 00:03:24.730
a hypothesis? That's really sort of the number of

00:03:24.730 --> 00:03:27.540
bits you need to describe a particular hypothesis, right?

00:03:27.540 --> 00:03:28.090
&gt;&gt; Okay.

00:03:28.090 --> 00:03:30.101
&gt;&gt; Okay. And in fact, that's exactly what it means.

00:03:30.101 --> 00:03:32.681
That's why we use log base 2. So, if we want

00:03:32.681 --> 00:03:35.801
to minimize the length of a hypothesis, what does that mean,

00:03:35.801 --> 00:03:38.950
the number of bits that we need to represent the hypothesis?

00:03:38.950 --> 00:03:42.915
&gt;&gt; The number of bits that we need to represent the hypothesis is, I guess,

00:03:42.915 --> 00:03:45.385
in some representation, or, so in this case

00:03:45.385 --> 00:03:48.370
I guess it would be some optimal representation.

00:03:48.370 --> 00:03:52.570
We are taking all the different hypotheses and writing them out. The ones

00:03:52.570 --> 00:03:55.790
that are more likely have a higher P of H, because that's the

00:03:55.790 --> 00:03:59.840
prior. And those are going to have smaller lengths than the optimal code.

00:03:59.840 --> 00:04:02.460
And the ones that are less common are going to have longer codes.

00:04:02.460 --> 00:04:03.860
&gt;&gt; Well, let's make it more concrete.

