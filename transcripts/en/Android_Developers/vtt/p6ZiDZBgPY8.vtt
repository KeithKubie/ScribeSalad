WEBVTT
Kind: captions
Language: en

00:00:03.095 --> 00:00:03.970
JOANNA SMITH: OK, hi.

00:00:03.970 --> 00:00:05.404
Good morning, everybody.

00:00:05.404 --> 00:00:08.070
I'm Joanna Smith, and here we're
going to talk about Idle Modes.

00:00:08.070 --> 00:00:09.800
I know you're all really
excited and you definitely

00:00:09.800 --> 00:00:11.920
don't hate these and you're
definitely not frustrated.

00:00:11.920 --> 00:00:14.295
So this is going to be a very
pleasant experience for all

00:00:14.295 --> 00:00:15.520
of us, right?

00:00:15.520 --> 00:00:16.309
Right?

00:00:16.309 --> 00:00:17.240
OK, great.

00:00:17.240 --> 00:00:20.575
So the greatest thing about
the next, like, half hour,

00:00:20.575 --> 00:00:21.950
45 minutes of your
life is you're

00:00:21.950 --> 00:00:23.366
going to sit here
and listen to me

00:00:23.366 --> 00:00:24.820
talk and not get
to say anything,

00:00:24.820 --> 00:00:26.250
and then you're going to walk
out of the room thinking,

00:00:26.250 --> 00:00:26.750
great.

00:00:26.750 --> 00:00:29.020
I don't have to do anything.

00:00:29.020 --> 00:00:31.220
I'm exactly at my status
quo from before the talk.

00:00:31.220 --> 00:00:33.702
So definitely a productive
use of your time.

00:00:33.702 --> 00:00:35.910
And the reason you're going
to want to listen to me--

00:00:35.910 --> 00:00:37.618
you could read my
online bio if you want.

00:00:37.618 --> 00:00:40.120
I don't really care--
but specifically, I've

00:00:40.120 --> 00:00:41.970
been a Developer
Advocate for Android

00:00:41.970 --> 00:00:44.660
and I've been working a lot
on trying to educate people

00:00:44.660 --> 00:00:46.591
about best practices.

00:00:46.591 --> 00:00:48.090
We have a lot of
resources out there

00:00:48.090 --> 00:00:51.030
for you to learn how to use
an API when it's launched

00:00:51.030 --> 00:00:52.810
or how it works,
but nobody's really

00:00:52.810 --> 00:00:56.170
trying to teach people when to
choose an API or how to, like,

00:00:56.170 --> 00:00:57.970
use multiple pieces together.

00:00:57.970 --> 00:01:00.040
And so that's why
myself and Ian Lake,

00:01:00.040 --> 00:01:03.010
who's speaking right after me,
launched Android Development

00:01:03.010 --> 00:01:03.540
Patterns.

00:01:03.540 --> 00:01:06.000
So we have a series of
videos and pro tips online

00:01:06.000 --> 00:01:08.170
so that you can learn
how to bust bad behavior

00:01:08.170 --> 00:01:10.860
and how to make your app better.

00:01:10.860 --> 00:01:13.790
We also created the Advanced
Android App Development Udacity

00:01:13.790 --> 00:01:14.530
Course.

00:01:14.530 --> 00:01:16.239
So if you are trying
to tweak your skills

00:01:16.239 --> 00:01:18.279
or work with something a
little more complicated,

00:01:18.279 --> 00:01:20.660
or you want to have a whole
lesson on how widgets work,

00:01:20.660 --> 00:01:21.875
we're your people.

00:01:21.875 --> 00:01:23.250
And then the other
thing I wanted

00:01:23.250 --> 00:01:26.370
to say about me personally
is I started learning Android

00:01:26.370 --> 00:01:28.380
in February of 2014.

00:01:28.380 --> 00:01:30.987
So I'm not even quite at two
years, and yet I'm up here,

00:01:30.987 --> 00:01:32.820
you know, representing
our Engineering team,

00:01:32.820 --> 00:01:35.270
trying to teach other
people about best behavior.

00:01:35.270 --> 00:01:37.859
And I say that because
a lot of people

00:01:37.859 --> 00:01:40.400
get really intimidated learning
a new language or a new skill

00:01:40.400 --> 00:01:42.920
set or, you know, if you
come from a Java background,

00:01:42.920 --> 00:01:45.464
Android's, you know, lifecycle
doesn't make a lot of sense

00:01:45.464 --> 00:01:47.380
and it can be overwhelming,
especially when we

00:01:47.380 --> 00:01:48.870
change everything every year.

00:01:48.870 --> 00:01:51.370
And so I just want to let you
know, like, don't give up hope

00:01:51.370 --> 00:01:52.170
or don't get frustrated.

00:01:52.170 --> 00:01:53.790
Like, there's a lot
out there, but you

00:01:53.790 --> 00:01:56.750
can be really exceptional
without understanding

00:01:56.750 --> 00:01:59.150
everything back to
Froyo, basically.

00:01:59.150 --> 00:01:59.880
OK.

00:01:59.880 --> 00:02:01.310
So let's get started.

00:02:01.310 --> 00:02:03.530
The reason that I'm here
today, specifically,

00:02:03.530 --> 00:02:06.230
is because battery is one of the
most important things that we

00:02:06.230 --> 00:02:08.990
need to talk about, both
from our side as providing

00:02:08.990 --> 00:02:11.500
an operating system and from
your side as developers.

00:02:11.500 --> 00:02:12.030
Right?

00:02:12.030 --> 00:02:13.613
This is the biggest
problem in mobile.

00:02:13.613 --> 00:02:15.217
People get so
frustrated about this.

00:02:15.217 --> 00:02:17.300
They're constantly trying
to measure their battery

00:02:17.300 --> 00:02:19.227
as a consumer or
figure out what's

00:02:19.227 --> 00:02:21.310
eating all of their battery
or why their phone has

00:02:21.310 --> 00:02:22.610
to be charged twice in a day.

00:02:22.610 --> 00:02:24.062
Users hate this.

00:02:24.062 --> 00:02:25.520
And then they hate
you because they

00:02:25.520 --> 00:02:26.550
don't understand
what you're doing

00:02:26.550 --> 00:02:28.630
or why you're coming
up on top all the time.

00:02:28.630 --> 00:02:30.580
And then they hate us and they
want to get a whole new phone,

00:02:30.580 --> 00:02:31.260
right?

00:02:31.260 --> 00:02:33.610
So there's a lot of press
about battery, tons of studies

00:02:33.610 --> 00:02:35.526
that you can find just
from any kind of search

00:02:35.526 --> 00:02:38.400
on your favorite web
engine, and it's a problem

00:02:38.400 --> 00:02:39.915
that everybody wants to solve.

00:02:39.915 --> 00:02:42.290
But the problem is, like, when
somebody tries to give you

00:02:42.290 --> 00:02:43.990
blanket advice, they'll
tell you things like,

00:02:43.990 --> 00:02:45.500
just don't have
lingering services

00:02:45.500 --> 00:02:47.708
and don't do background
services and don't use memory

00:02:47.708 --> 00:02:50.190
and basically don't be
an app, when the truth is

00:02:50.190 --> 00:02:51.400
you want all of those things.

00:02:51.400 --> 00:02:53.400
A device naturally will
launch an activity,

00:02:53.400 --> 00:02:55.910
and that activity should be
using background services.

00:02:55.910 --> 00:02:57.910
One of the most important
things to keep in mind

00:02:57.910 --> 00:03:00.076
when building an app is
that we call our main thread

00:03:00.076 --> 00:03:01.830
the UI thread for a reason.

00:03:01.830 --> 00:03:04.240
Everything that you do there
affects what the users see,

00:03:04.240 --> 00:03:06.390
and if you hang, if you
miss your frame rate,

00:03:06.390 --> 00:03:08.181
they're going to
uninstall you because they

00:03:08.181 --> 00:03:09.010
think you're janky.

00:03:09.010 --> 00:03:10.360
They don't realize that
you missed your framework

00:03:10.360 --> 00:03:12.310
because you're
working really hard.

00:03:12.310 --> 00:03:13.980
And we can't educate
users, so you just

00:03:13.980 --> 00:03:16.790
have to, like, fake it
till you make it, right?

00:03:16.790 --> 00:03:19.500
So my point here is that
background services aren't bad.

00:03:19.500 --> 00:03:22.180
What's bad is when every
app has their own background

00:03:22.180 --> 00:03:24.600
service over time
triggering willy-nilly.

00:03:24.600 --> 00:03:26.462
We need to coalesce
these together so

00:03:26.462 --> 00:03:28.670
that we can create a good
experience for the battery.

00:03:28.670 --> 00:03:31.310
Because if you only use
the radio twice in a day,

00:03:31.310 --> 00:03:33.180
but you use it separate
from everybody else,

00:03:33.180 --> 00:03:35.180
the radio never gets a break.

00:03:35.180 --> 00:03:38.210
And that's not good for network,
that's not good for the device.

00:03:38.210 --> 00:03:41.100
And so because we can't
really teach people

00:03:41.100 --> 00:03:42.600
how to do this work
with other apps,

00:03:42.600 --> 00:03:44.558
because you don't have
insight into other apps,

00:03:44.558 --> 00:03:47.190
we're going to force you into
my favorite mental model.

00:03:47.190 --> 00:03:48.592
And that's what Doze is for.

00:03:48.592 --> 00:03:50.050
So get comfortable
with this image.

00:03:50.050 --> 00:03:52.430
I know it's really complicated
and hard to remember,

00:03:52.430 --> 00:03:54.726
and you're not going to
see it again, so, you know,

00:03:54.726 --> 00:03:56.684
you really have to work
hard, but the idea here

00:03:56.684 --> 00:03:59.450
is over time I want every
app's background job and sync

00:03:59.450 --> 00:04:00.720
to line up in batches.

00:04:00.720 --> 00:04:02.900
Because then we can
turn the radio on once.

00:04:02.900 --> 00:04:05.230
It doesn't particularly
matter for most apps

00:04:05.230 --> 00:04:07.560
if their sync happens
at 6:00 PM or 8:00 PM,

00:04:07.560 --> 00:04:10.180
so let's take advantage
of that flexibility.

00:04:10.180 --> 00:04:12.450
And that's what Doze is for.

00:04:12.450 --> 00:04:14.320
So we'll go over that first.

00:04:14.320 --> 00:04:16.454
Doze was introduced
in Marshmallow,

00:04:16.454 --> 00:04:17.829
but it doesn't
really matter what

00:04:17.829 --> 00:04:20.070
API you're targeting
because Doze is going

00:04:20.070 --> 00:04:21.700
to affect every
Marshmallow device,

00:04:21.700 --> 00:04:24.320
even if you're still
rockin' that Lollipop.

00:04:24.320 --> 00:04:24.840
OK.

00:04:24.840 --> 00:04:26.610
So you have to get understanding
[INAUDIBLE] of this,

00:04:26.610 --> 00:04:29.200
because you have no control over
what device your users have,

00:04:29.200 --> 00:04:30.110
right?

00:04:30.110 --> 00:04:32.360
So you would think that with
something as big as Doze,

00:04:32.360 --> 00:04:33.693
we'd have a lot of goals for it.

00:04:33.693 --> 00:04:35.880
But the truth is,
we only have one.

00:04:35.880 --> 00:04:38.310
We want to preserve the
user's battery life.

00:04:38.310 --> 00:04:39.700
That's our one goal here.

00:04:39.700 --> 00:04:42.189
We want to create a better
user experience by making sure

00:04:42.189 --> 00:04:44.730
that when the user puts their
tablet down and, like, goes off

00:04:44.730 --> 00:04:47.240
to Cabo for a week, they come
back, pick their tablet up,

00:04:47.240 --> 00:04:48.640
and it's still alive.

00:04:48.640 --> 00:04:50.540
They weren't using
it, so why did it die?

00:04:50.540 --> 00:04:52.050
Like, that doesn't
make any sense,

00:04:52.050 --> 00:04:53.480
and so we're here for that.

00:04:53.480 --> 00:04:56.725
But the truth is, like I
said, we can't really, like,

00:04:56.725 --> 00:04:58.350
get you to work kindly
with other apps,

00:04:58.350 --> 00:05:00.650
because that's not really,
like, a possible situation here.

00:05:00.650 --> 00:05:02.740
So we forced you, and people
don't really like that.

00:05:02.740 --> 00:05:04.490
And that's why there's
a lot of, you know,

00:05:04.490 --> 00:05:06.530
very kind comments on
Twitter that definitely

00:05:06.530 --> 00:05:09.219
aren't frustrating at all.

00:05:09.219 --> 00:05:11.510
And so before we can really
get into, like, more of the

00:05:11.510 --> 00:05:15.550
why here, I need to explain my
goal for you, which is this.

00:05:15.550 --> 00:05:17.970
You aren't as important
as you probably

00:05:17.970 --> 00:05:20.650
think your app is,
because as a developer,

00:05:20.650 --> 00:05:23.130
your mind is in the zone of
thinking about your app all day

00:05:23.130 --> 00:05:23.400
long.

00:05:23.400 --> 00:05:25.330
You kind of go to sleep
thinking about that problem

00:05:25.330 --> 00:05:27.663
you want to fix, and you wake
up thinking, oh, gosh, no.

00:05:27.663 --> 00:05:28.510
This bugged, too.

00:05:28.510 --> 00:05:30.090
Like, it never leaves your head.

00:05:30.090 --> 00:05:32.590
Whereas with your user, they're
not going to use it all day,

00:05:32.590 --> 00:05:33.330
every day, right?

00:05:33.330 --> 00:05:36.430
And you need to come to terms
with that as a developer.

00:05:36.430 --> 00:05:40.020
So my best example of
this is a success metric.

00:05:40.020 --> 00:05:42.340
So our fearless
leader is Larry Page.

00:05:42.340 --> 00:05:43.300
He's pretty great.

00:05:43.300 --> 00:05:47.500
And he defines success inside of
Google by a toothbrush metric.

00:05:47.500 --> 00:05:49.970
So if your product
is used twice a day

00:05:49.970 --> 00:05:51.760
for about a minute
each time, you

00:05:51.760 --> 00:05:53.850
are insanely successful
and worth investing, like,

00:05:53.850 --> 00:05:55.309
a quarter of Google's
resources in.

00:05:55.309 --> 00:05:56.808
Like, that is
something that's going

00:05:56.808 --> 00:05:59.040
to hit home and be great
and change the world.

00:05:59.040 --> 00:06:01.510
So that's two
minutes a day, right?

00:06:01.510 --> 00:06:03.130
Which means that
there are 23 hours

00:06:03.130 --> 00:06:05.080
and 58 minutes
that the user isn't

00:06:05.080 --> 00:06:07.530
using your app or your
product, and you're still

00:06:07.530 --> 00:06:09.610
a grand success that
Alphabet would invest in.

00:06:09.610 --> 00:06:10.110
Right?

00:06:10.110 --> 00:06:12.037
Like, that's perspective, right?

00:06:12.037 --> 00:06:14.120
And it's hard to keep that
in mind when all you do

00:06:14.120 --> 00:06:15.840
is create your app.

00:06:15.840 --> 00:06:18.390
So 23 hours and 58 minutes.

00:06:18.390 --> 00:06:20.800
You have to be willing to
recognize that, like, users

00:06:20.800 --> 00:06:22.580
exist outside of you
for all of that time

00:06:22.580 --> 00:06:25.250
and you can be a little bit
more flexible about when exactly

00:06:25.250 --> 00:06:27.200
your background
sync is happening.

00:06:27.200 --> 00:06:30.010
That being said, let's go
into exactly what Doze is.

00:06:30.010 --> 00:06:32.590
Doze is when your
device is fully "idle,"

00:06:32.590 --> 00:06:34.500
but, like, not really
sure what that means.

00:06:34.500 --> 00:06:37.530
So what happens in Doze mode?

00:06:37.530 --> 00:06:39.790
First, network
access is suspended.

00:06:39.790 --> 00:06:42.500
The whole point here is we
don't want the radio going off.

00:06:42.500 --> 00:06:43.870
We don't want it going
off every five minutes,

00:06:43.870 --> 00:06:45.703
we don't want it going
off every 15 minutes,

00:06:45.703 --> 00:06:48.350
we want to do this in a
controlled setting when we can.

00:06:48.350 --> 00:06:49.547
So network is off.

00:06:49.547 --> 00:06:51.630
Like, you're just going
to have to deal with that.

00:06:51.630 --> 00:06:54.660
The second is we don't
care about your wake logs.

00:06:54.660 --> 00:06:57.200
The device isn't being
used, therefore you really

00:06:57.200 --> 00:06:58.611
shouldn't be doing anything.

00:06:58.611 --> 00:07:00.610
Like, this isn't I'm going
to send notifications

00:07:00.610 --> 00:07:01.776
to get the user's attention.

00:07:01.776 --> 00:07:03.590
This is they're not
even in the room.

00:07:03.590 --> 00:07:04.770
Like, it's not happening.

00:07:04.770 --> 00:07:06.145
They don't care
about the device.

00:07:06.145 --> 00:07:08.850
You shouldn't care either.

00:07:08.850 --> 00:07:11.192
So along that same vein,
all your alarms are delayed.

00:07:11.192 --> 00:07:13.400
And we understand that alarms
are a great way for you

00:07:13.400 --> 00:07:15.300
to control the flow of
your app, so we're not

00:07:15.300 --> 00:07:17.666
deleting your alarms, we're
not dropping your alarms,

00:07:17.666 --> 00:07:19.040
we're just going
to hold them off

00:07:19.040 --> 00:07:21.552
until the Doze mode is over,
and then they'll all trigger

00:07:21.552 --> 00:07:23.635
and you can react to each
one the way you normally

00:07:23.635 --> 00:07:25.365
would in a nice batch.

00:07:25.365 --> 00:07:26.740
And then the most
important part.

00:07:26.740 --> 00:07:28.360
Syncs and jobs are
not going to run.

00:07:28.360 --> 00:07:29.497
But this is the same deal.

00:07:29.497 --> 00:07:31.580
We aren't deleting your
background jobs and syncs.

00:07:31.580 --> 00:07:33.070
We're not making sure
your app doesn't ever

00:07:33.070 --> 00:07:34.044
get a chance to exist.

00:07:34.044 --> 00:07:36.210
We're just controlling when
they're going to happen,

00:07:36.210 --> 00:07:38.890
which is when the
device is active.

00:07:38.890 --> 00:07:41.462
We also-- I have to mention--
have these periodic maintenance

00:07:41.462 --> 00:07:43.170
windows that I'll go
into further detail,

00:07:43.170 --> 00:07:46.060
so that prolonged Doze periods
still get a chance for you

00:07:46.060 --> 00:07:48.770
to run periodic updates
at least once a day.

00:07:48.770 --> 00:07:51.470
OK, so then now that you're
all worried and you're like,

00:07:51.470 --> 00:07:52.880
wow, they hate us and
my app's going to die,

00:07:52.880 --> 00:07:54.796
let me tell you how we
even get into Doze mode

00:07:54.796 --> 00:07:57.390
and why it still doesn't
matter for your app.

00:07:57.390 --> 00:07:59.970
Doze is going to be triggered
when the device is not

00:07:59.970 --> 00:08:00.700
charging, right?

00:08:00.700 --> 00:08:02.130
Because we care about battery.

00:08:02.130 --> 00:08:04.000
So if we're plugged in, we
don't care about any of this.

00:08:04.000 --> 00:08:05.820
We're not at risk, we're not
worried, we're not concerned.

00:08:05.820 --> 00:08:07.520
There's power coming
from somewhere.

00:08:07.520 --> 00:08:09.540
So the device is not
charging, it's out there

00:08:09.540 --> 00:08:11.980
draining the battery, and the
screen has been turned off.

00:08:11.980 --> 00:08:13.480
So probably they're
not interacting.

00:08:13.480 --> 00:08:15.444
But most importantly,
it's not moving.

00:08:15.444 --> 00:08:17.360
There's a difference
between having your phone

00:08:17.360 --> 00:08:19.440
in your pocket and it going
idle, which would be awful

00:08:19.440 --> 00:08:20.960
when you need to
navigate somewhere,

00:08:20.960 --> 00:08:22.419
and having it down
on the counter

00:08:22.419 --> 00:08:24.960
as you come up here to give an
hour-long presentation, right?

00:08:24.960 --> 00:08:27.126
One of them, I'm going to
respond to a text message.

00:08:27.126 --> 00:08:29.420
And the other one, probably not.

00:08:29.420 --> 00:08:30.230
OK.

00:08:30.230 --> 00:08:31.777
So these three states.

00:08:31.777 --> 00:08:33.610
We've really put a lot
of thought into this,

00:08:33.610 --> 00:08:36.617
and you'll see why as I
continue to talk to you.

00:08:36.617 --> 00:08:38.450
So let's take a look
at this beautiful image

00:08:38.450 --> 00:08:40.740
that you probably recognize from
our documentation about Doze,

00:08:40.740 --> 00:08:42.510
because you totally
read all of our docs

00:08:42.510 --> 00:08:44.010
and you're really
excited about it.

00:08:44.010 --> 00:08:47.430
This is an estimation of, like,
a timeline of how Doze works.

00:08:47.430 --> 00:08:50.056
We have this nice long period if
we're idle, right, at the end,

00:08:50.056 --> 00:08:52.555
and these nice orange bars which
represent those maintenance

00:08:52.555 --> 00:08:54.600
windows that you'll start
to understand later on.

00:08:54.600 --> 00:08:56.808
And then we have these crazy
spikes at the beginning.

00:08:56.808 --> 00:08:59.050
And all those crazy spikes
represent normal usage

00:08:59.050 --> 00:09:00.692
of the device, and
that's the period

00:09:00.692 --> 00:09:02.150
when the user is
using it and we're

00:09:02.150 --> 00:09:04.400
trying to determine if
we have reached idle mode

00:09:04.400 --> 00:09:06.525
and if we're there yet,
and, like, how confident we

00:09:06.525 --> 00:09:09.160
are that we really
should be idle right now.

00:09:09.160 --> 00:09:11.525
So normal usage, which
if it happened all day,

00:09:11.525 --> 00:09:13.150
would drain the
battery in, like, what?

00:09:13.150 --> 00:09:14.600
Hours?

00:09:14.600 --> 00:09:15.330
OK.

00:09:15.330 --> 00:09:18.454
So the reason we have this nice
long period of normal usage

00:09:18.454 --> 00:09:20.620
even after we might have
started thinking about Doze

00:09:20.620 --> 00:09:22.620
is because we want to hit
that confidence level.

00:09:22.620 --> 00:09:24.476
And to do that, we have States.

00:09:24.476 --> 00:09:26.600
So we don't just jump
straight from Active to Idle,

00:09:26.600 --> 00:09:28.220
we walk ourselves into it.

00:09:28.220 --> 00:09:30.782
And we do that with a Device
Idle Controller Class.

00:09:30.782 --> 00:09:32.990
So this class was introduced
in the Marshmallow code,

00:09:32.990 --> 00:09:35.500
it's pretty fantastic,
and it's part of the AOSP.

00:09:35.500 --> 00:09:38.210
So you can read about it and
figure out what's going on

00:09:38.210 --> 00:09:40.669
and understand everything on
your own, or you can trust me,

00:09:40.669 --> 00:09:42.793
or you can find someone
else who wrote a blog on it

00:09:42.793 --> 00:09:43.821
and read their blog.

00:09:43.821 --> 00:09:44.320
OK.

00:09:44.320 --> 00:09:45.760
So there are several states.

00:09:45.760 --> 00:09:48.080
The first and easiest
is Active, right?

00:09:48.080 --> 00:09:50.382
Because if we're Active, then
we know that everything's

00:09:50.382 --> 00:09:51.840
working properly
and, like, they're

00:09:51.840 --> 00:09:53.256
using their device
and your app is

00:09:53.256 --> 00:09:55.970
going to run exactly as
expected and that's just great.

00:09:55.970 --> 00:09:57.490
Then we hit
Inactive, and this is

00:09:57.490 --> 00:09:59.310
when we've noticed
that the screen is off

00:09:59.310 --> 00:10:02.870
and the device isn't moving and
all those conditions for Doze

00:10:02.870 --> 00:10:05.266
have been met, but, like, we
don't really know why yet.

00:10:05.266 --> 00:10:06.390
We're just like, OK, great.

00:10:06.390 --> 00:10:07.098
We're not Active.

00:10:07.098 --> 00:10:08.890
We're just chill with this.

00:10:08.890 --> 00:10:10.700
And then comes an
Idle Pending State,

00:10:10.700 --> 00:10:12.160
which is, OK, we weren't Active.

00:10:12.160 --> 00:10:13.110
It's been a period of time.

00:10:13.110 --> 00:10:14.068
We're still not Active.

00:10:14.068 --> 00:10:16.092
Let's-- one vote of confidence.

00:10:16.092 --> 00:10:17.550
Like, we're getting
close to there.

00:10:17.550 --> 00:10:19.966
And we have to go through this
before we can ever even get

00:10:19.966 --> 00:10:20.890
to our Idle State.

00:10:20.890 --> 00:10:21.390
Right?

00:10:21.390 --> 00:10:22.806
And the beautiful
thing about this

00:10:22.806 --> 00:10:24.445
is you can read the
class in the AOSP,

00:10:24.445 --> 00:10:25.820
and you can see
how we get there.

00:10:25.820 --> 00:10:28.680
And it's really easy because
Device Idle Controller

00:10:28.680 --> 00:10:31.330
has an Alarm Manager that
triggers its own alarm so

00:10:31.330 --> 00:10:33.140
that it can track
its own progress.

00:10:33.140 --> 00:10:35.970
And so we wait about 30
minutes between each alarm

00:10:35.970 --> 00:10:37.420
to see have we
gotten out of this?

00:10:37.420 --> 00:10:38.120
Like, are we good?

00:10:38.120 --> 00:10:39.070
Like, did something happen?

00:10:39.070 --> 00:10:39.653
Are we moving?

00:10:39.653 --> 00:10:41.560
Like, is there some
new foreground service?

00:10:41.560 --> 00:10:42.940
Like, what's going on?

00:10:42.940 --> 00:10:45.304
And then we use those
half-hour periods to see, like,

00:10:45.304 --> 00:10:46.220
do we need to back up?

00:10:46.220 --> 00:10:47.360
Or do we move forward?

00:10:47.360 --> 00:10:49.750
So there's a very long
time to be comfortable

00:10:49.750 --> 00:10:51.280
if the user's really
not interested

00:10:51.280 --> 00:10:52.610
before we get to idle.

00:10:52.610 --> 00:10:54.940
And that way, you can
trust our Comfort Levels.

00:10:54.940 --> 00:10:56.810
You can know if they're
comfortable that the user's not

00:10:56.810 --> 00:10:58.650
coming, I can be comfortable
the user's not coming,

00:10:58.650 --> 00:10:59.850
and I don't have
to panic and think

00:10:59.850 --> 00:11:01.160
my app is going to be ignored.

00:11:01.160 --> 00:11:03.420
Because we care about
our developers, even when

00:11:03.420 --> 00:11:04.500
you're upset with us.

00:11:04.500 --> 00:11:05.170
OK.

00:11:05.170 --> 00:11:07.060
There's also a state
called Idle Maintenance.

00:11:07.060 --> 00:11:08.360
And this one's really
cool because this

00:11:08.360 --> 00:11:10.140
is that Maintenance
window that we get to.

00:11:10.140 --> 00:11:11.684
So we have a really
long Doze period.

00:11:11.684 --> 00:11:13.600
We understand that you
probably want to, like,

00:11:13.600 --> 00:11:16.330
have updated information for
whenever the user comes back,

00:11:16.330 --> 00:11:19.154
so we let you run your jobs
and syncs all in a batch

00:11:19.154 --> 00:11:21.320
to get to our beautiful
timeline of our mental model

00:11:21.320 --> 00:11:22.736
that you definitely
memorized even

00:11:22.736 --> 00:11:24.186
though it was so complicated.

00:11:24.186 --> 00:11:26.560
And we're going to be able to
batch run all these jobs so

00:11:26.560 --> 00:11:29.500
that you're up-to-date when we
finally get out of Idle Mode.

00:11:29.500 --> 00:11:30.570
OK.

00:11:30.570 --> 00:11:32.200
So those are Batch Windows.

00:11:32.200 --> 00:11:33.866
That's what that Idle
Maintenance means,

00:11:33.866 --> 00:11:37.579
these nice orange,
thick spikes later on.

00:11:37.579 --> 00:11:39.370
And your Mental Model,
because I've got it.

00:11:39.370 --> 00:11:39.660
Right?

00:11:39.660 --> 00:11:40.260
You all forgot it?

00:11:40.260 --> 00:11:41.750
The super complicated
Mental Model

00:11:41.750 --> 00:11:43.291
of what we're trying
to get over time

00:11:43.291 --> 00:11:45.770
is these batch syncs and jobs
from different activities.

00:11:45.770 --> 00:11:47.099
So this is our ideal world.

00:11:47.099 --> 00:11:48.890
And you definitely
won't see this again, so

00:11:48.890 --> 00:11:50.436
memorize it this time.

00:11:50.436 --> 00:11:51.810
Now, all of those
being said, you

00:11:51.810 --> 00:11:53.862
want to know how these
states work, right?

00:11:53.862 --> 00:11:56.070
Like, you want to see for
sure that you can trust us.

00:11:56.070 --> 00:11:58.460
And we've made this
super cool ADB service

00:11:58.460 --> 00:12:01.716
that you can step your app into
them and see what's going on.

00:12:01.716 --> 00:12:02.840
And it's super easy to run.

00:12:02.840 --> 00:12:05.050
You just need a Marshmallow
device or emulator,

00:12:05.050 --> 00:12:08.640
your app needs to be running,
and then you need to tell the,

00:12:08.640 --> 00:12:10.262
you know, ADB, like,
unplug so we're

00:12:10.262 --> 00:12:11.470
outside of the charging mode.

00:12:11.470 --> 00:12:12.820
And then Dump Sys,
you've probably

00:12:12.820 --> 00:12:14.096
seen before, it's
a binary that let's

00:12:14.096 --> 00:12:15.610
you call other services by name.

00:12:15.610 --> 00:12:18.250
And then Device Idle,
that's your new service.

00:12:18.250 --> 00:12:20.790
And you can step through each
state, see what's going on,

00:12:20.790 --> 00:12:21.790
or you can ask for help.

00:12:21.790 --> 00:12:24.200
With any other, like, command
line service, it's so easy.

00:12:24.200 --> 00:12:25.309
It's super easy to use.

00:12:25.309 --> 00:12:27.350
And you can test your code
to be like, OK, great.

00:12:27.350 --> 00:12:28.460
They weren't lying.

00:12:28.460 --> 00:12:30.000
And you can also, you
know, look for surprises

00:12:30.000 --> 00:12:31.680
to see whether or not we
really did mess you up

00:12:31.680 --> 00:12:34.013
and then you can go on Twitter
and yell at me some more.

00:12:34.013 --> 00:12:34.550
OK.

00:12:34.550 --> 00:12:36.970
So how do you get
out of Doze mode?

00:12:36.970 --> 00:12:39.240
Well, it exits when
pretty much the reverse

00:12:39.240 --> 00:12:41.505
of everything else that
caused us to enter happens.

00:12:41.505 --> 00:12:42.880
When we plug it
in, so everything

00:12:42.880 --> 00:12:44.400
gets released from Doze
mode because battery's

00:12:44.400 --> 00:12:45.260
totally safe now.

00:12:45.260 --> 00:12:47.640
Or we pick the device up
because the user has come back

00:12:47.640 --> 00:12:49.000
and they want to
see what's going on.

00:12:49.000 --> 00:12:51.320
Or, and this is the cool one,
an alarm is going to go off.

00:12:51.320 --> 00:12:53.190
And I don't mean an
alarm like Alarm Manager,

00:12:53.190 --> 00:12:54.605
because now you're
wondering if I lied before,

00:12:54.605 --> 00:12:55.340
and you're like, wait.

00:12:55.340 --> 00:12:56.798
You said you don't
listen to those.

00:12:56.798 --> 00:12:57.832
I mean, like, an alarm.

00:12:57.832 --> 00:12:59.790
Like, I set my alarm
clock and I need to, like,

00:12:59.790 --> 00:13:02.420
remember to get back to work by,
like, the time for my meeting,

00:13:02.420 --> 00:13:03.395
otherwise I'm going
to get in trouble.

00:13:03.395 --> 00:13:05.270
Or I'm going to miss my
doctor's appointment.

00:13:05.270 --> 00:13:06.330
Like, users need alarms.

00:13:06.330 --> 00:13:09.010
So what we do is when we have an
alarm clock pending by our app

00:13:09.010 --> 00:13:10.468
or one of your
apps, like something

00:13:10.468 --> 00:13:12.302
that's registered
as an alarm, then we

00:13:12.302 --> 00:13:13.760
wake up from Doze
mode a little bit

00:13:13.760 --> 00:13:16.844
before, everybody runs their
sync, then the alarm goes off,

00:13:16.844 --> 00:13:18.510
the user wakes up
from their nap and can

00:13:18.510 --> 00:13:21.160
see all of their updated
news, weather, and traffic.

00:13:21.160 --> 00:13:21.660
Right?

00:13:21.660 --> 00:13:22.810
Look how smart we were?

00:13:22.810 --> 00:13:23.340
See?

00:13:23.340 --> 00:13:24.049
We hear you guys.

00:13:24.049 --> 00:13:25.923
You just, you know, are
still a little upset.

00:13:25.923 --> 00:13:26.620
So it's OK.

00:13:26.620 --> 00:13:28.870
So how do you not do anything?

00:13:28.870 --> 00:13:31.120
Well, you know, your app
should work like I told you.

00:13:31.120 --> 00:13:32.800
Nothing gets dropped,
nothing gets delayed,

00:13:32.800 --> 00:13:33.440
nothing gets deleted.

00:13:33.440 --> 00:13:35.398
So it's all, like, maybe
a couple of hours off,

00:13:35.398 --> 00:13:38.090
but the user didn't notice
and you won't notice, right?

00:13:38.090 --> 00:13:39.300
Like, everything's good.

00:13:39.300 --> 00:13:42.240
But if you have something
special, you can adapt.

00:13:42.240 --> 00:13:42.740
Right?

00:13:42.740 --> 00:13:45.260
A couple simple things that
you probably don't need to do,

00:13:45.260 --> 00:13:47.520
but I'm going to tell you
how to do them anyway.

00:13:47.520 --> 00:13:49.100
So the first is
you need to think

00:13:49.100 --> 00:13:50.420
about your app's architecture.

00:13:50.420 --> 00:13:51.780
You need to understand
what it's doing

00:13:51.780 --> 00:13:53.650
and what it's expecting,
because if you have something

00:13:53.650 --> 00:13:55.970
kind of weird, like your
server relies on your client

00:13:55.970 --> 00:13:58.705
to check in every day at
6:00 PM for an update, then

00:13:58.705 --> 00:14:01.080
probably that's not going to
be great because if you miss

00:14:01.080 --> 00:14:03.090
that because you're in
Doze mode at 6:00 PM,

00:14:03.090 --> 00:14:04.560
then your server's
going to panic.

00:14:04.560 --> 00:14:07.150
But then again, you shouldn't
be doing that anyway.

00:14:07.150 --> 00:14:09.320
So that's on you.

00:14:09.320 --> 00:14:11.069
And you should use
downstream messaging.

00:14:11.069 --> 00:14:12.610
This is just a
general best practice.

00:14:12.610 --> 00:14:14.901
That way your client is always
the one reacting instead

00:14:14.901 --> 00:14:15.844
of each server.

00:14:15.844 --> 00:14:18.260
But if you're using downstream
messaging, and specifically

00:14:18.260 --> 00:14:21.050
Google Cloud Messaging, which
you should be using anyway,

00:14:21.050 --> 00:14:22.670
and I can tell you
about that later,

00:14:22.670 --> 00:14:24.962
then you can add a
High Priority Tag.

00:14:24.962 --> 00:14:26.420
And this is great,
because anything

00:14:26.420 --> 00:14:28.880
with a high priority,
the system will receive

00:14:28.880 --> 00:14:30.700
and they'll be able
to say, OK, great.

00:14:30.700 --> 00:14:31.950
Temporary wake up for the app.

00:14:31.950 --> 00:14:33.730
They can react to this
high priority message

00:14:33.730 --> 00:14:35.070
and be able to
respond appropriately

00:14:35.070 --> 00:14:37.672
in case it actually is something
important, like, you know,

00:14:37.672 --> 00:14:39.757
a text message if you're,
like, a messaging app.

00:14:39.757 --> 00:14:41.840
Because something from
your mom you might actually

00:14:41.840 --> 00:14:43.491
want to work out here.

00:14:43.491 --> 00:14:45.740
Now people are probably going
to think, this is great,

00:14:45.740 --> 00:14:47.620
I'll add high priority
to every message I send.

00:14:47.620 --> 00:14:49.995
And I say, you suck and you're
ruining the whole process.

00:14:49.995 --> 00:14:51.590
So please don't do that.

00:14:51.590 --> 00:14:53.704
Great anecdote for
you to keep in mind.

00:14:53.704 --> 00:14:55.120
If it's a high
priority, then it's

00:14:55.120 --> 00:14:57.050
worth getting the
user's attention, right?

00:14:57.050 --> 00:14:59.008
Which means stopping a
developer for a minute--

00:14:59.008 --> 00:15:00.670
and think about
your user self-- are

00:15:00.670 --> 00:15:02.430
you going to get up
out of that chair,

00:15:02.430 --> 00:15:04.513
cross to that side of the
room, pick your phone up

00:15:04.513 --> 00:15:06.470
off the table and
look at it and groan?

00:15:06.470 --> 00:15:07.630
Or be like, OK, good.

00:15:07.630 --> 00:15:08.417
Nice to know.

00:15:08.417 --> 00:15:10.500
Because if you have to
walk all the way over there

00:15:10.500 --> 00:15:12.285
to look at a notification
and it's just something

00:15:12.285 --> 00:15:14.410
about, like, you got a hundred
new points in your game,

00:15:14.410 --> 00:15:16.493
you're going to be really
frustrated with that app

00:15:16.493 --> 00:15:17.950
and probably
uninstall it, right?

00:15:17.950 --> 00:15:19.210
But if you walk over there
because your mom wants

00:15:19.210 --> 00:15:20.750
to know what kind of pie
you want for Thanksgiving

00:15:20.750 --> 00:15:23.250
and she's baking it tonight,
then that's important.

00:15:23.250 --> 00:15:24.630
That's super important, right?

00:15:24.630 --> 00:15:26.770
So there's your method to
tell is it high priority?

00:15:26.770 --> 00:15:28.726
Do I walk across the
room and I'm upset?

00:15:28.726 --> 00:15:30.100
And you as
developers, you really

00:15:30.100 --> 00:15:31.180
don't want to get up
from your computer

00:15:31.180 --> 00:15:32.390
and stop coding, right?

00:15:32.390 --> 00:15:33.182
That's your metric.

00:15:33.182 --> 00:15:34.556
And if you can
keep that in mind,

00:15:34.556 --> 00:15:36.300
you're going to be
super successful.

00:15:36.300 --> 00:15:37.040
OK.

00:15:37.040 --> 00:15:38.200
So the other thing
you can do is--

00:15:38.200 --> 00:15:40.650
I kind of lied when I said we
ignore all of the Alarm Manager

00:15:40.650 --> 00:15:41.240
alarms.

00:15:41.240 --> 00:15:43.620
We actually have
these exceptions.

00:15:43.620 --> 00:15:45.240
Your Set and your
Set Exact methods

00:15:45.240 --> 00:15:48.720
have a new counterpart called
Set And Allow While Idle or Set

00:15:48.720 --> 00:15:51.520
Exact And Allow While
Idle, which-- surprise,

00:15:51.520 --> 00:15:53.740
surprise-- allows the
alarm to go off while we're

00:15:53.740 --> 00:15:55.150
in an Idle Mode, right?

00:15:55.150 --> 00:15:56.880
Super great naming.

00:15:56.880 --> 00:15:57.420
OK.

00:15:57.420 --> 00:15:59.254
So these are really
great if you actually do

00:15:59.254 --> 00:16:00.461
have something time critical.

00:16:00.461 --> 00:16:02.070
Like, maybe you want
your calendar app

00:16:02.070 --> 00:16:04.070
or, like, you're going
to trigger a notification

00:16:04.070 --> 00:16:07.310
in advance of some event that
is really important to the user

00:16:07.310 --> 00:16:09.007
and they can't miss that.

00:16:09.007 --> 00:16:10.340
So we give you this opportunity.

00:16:10.340 --> 00:16:11.490
Wake up your app a little.

00:16:11.490 --> 00:16:12.690
You still don't
have network access

00:16:12.690 --> 00:16:14.731
and you still can't run
your background services,

00:16:14.731 --> 00:16:17.090
but you can wake up, react,
produce a notification,

00:16:17.090 --> 00:16:19.624
trigger a sound, everything
that the user would care about.

00:16:19.624 --> 00:16:22.040
So as far as the user can tell
and as far as you can tell,

00:16:22.040 --> 00:16:23.742
there's no change
in app behavior,

00:16:23.742 --> 00:16:25.950
but you're still able to do
and accomplish everything

00:16:25.950 --> 00:16:28.780
you want, and we're still
able to preserve our battery.

00:16:28.780 --> 00:16:30.485
So the other thing
to know about these

00:16:30.485 --> 00:16:33.110
is you can't just go willy-nilly
changing every alarm you have,

00:16:33.110 --> 00:16:34.600
because if you're one of
those apps that has, like,

00:16:34.600 --> 00:16:36.700
an alarm going off
every two minutes,

00:16:36.700 --> 00:16:39.230
this isn't going to help you
because we've throttled these.

00:16:39.230 --> 00:16:39.750
Sorry.

00:16:39.750 --> 00:16:40.490
Going to have to live it it.

00:16:40.490 --> 00:16:41.800
We care about battery.

00:16:41.800 --> 00:16:43.830
So one alarm will go off
in a 15-minute period.

00:16:43.830 --> 00:16:45.770
So if you trigger two
right after each other

00:16:45.770 --> 00:16:46.700
or, like, in a
five-minute window,

00:16:46.700 --> 00:16:48.790
there's going to be a 15-minute
delay before the second one

00:16:48.790 --> 00:16:49.540
triggers.

00:16:49.540 --> 00:16:50.900
Which actually is fine.

00:16:50.900 --> 00:16:52.300
Most apps won't affect this.

00:16:52.300 --> 00:16:54.383
Like, a calendar event
notification and 15 minutes

00:16:54.383 --> 00:16:56.972
before and, like, at the
moment, that's about right.

00:16:56.972 --> 00:16:58.680
Two minutes before
and one minute before,

00:16:58.680 --> 00:16:59.970
that's a little spammy.

00:16:59.970 --> 00:17:02.250
So, again, you really
shouldn't have to change much

00:17:02.250 --> 00:17:03.940
but maybe add a
couple of characters.

00:17:03.940 --> 00:17:06.410
And these methods
aren't any different.

00:17:06.410 --> 00:17:08.920
The only thing that changes
in creating the whole alarm,

00:17:08.920 --> 00:17:11.310
getting it an instance,
actually setting it,

00:17:11.310 --> 00:17:13.905
is these extra And Allow
While Idle letters.

00:17:13.905 --> 00:17:15.030
That's the only difference.

00:17:15.030 --> 00:17:16.821
All of the parameters
are exactly the same.

00:17:16.821 --> 00:17:19.619
All of you wake up and timing,
everything is exactly the same.

00:17:19.619 --> 00:17:21.254
The method behaves
exactly the same,

00:17:21.254 --> 00:17:22.920
but our system will
acknowledge that you

00:17:22.920 --> 00:17:24.180
have something important
and we'll give you

00:17:24.180 --> 00:17:25.530
the chance to act on that.

00:17:25.530 --> 00:17:27.890
Because, believe it or
not, we don't hate you.

00:17:27.890 --> 00:17:28.462
Right?

00:17:28.462 --> 00:17:30.670
Like, we're trying to do
the best thing for the user,

00:17:30.670 --> 00:17:32.330
and since nobody can
really listen to us,

00:17:32.330 --> 00:17:34.746
we're going to force you to
do it with us, but in a really

00:17:34.746 --> 00:17:35.310
kind way.

00:17:35.310 --> 00:17:36.010
OK.

00:17:36.010 --> 00:17:38.260
And then the other thing you
might want to do to adapt

00:17:38.260 --> 00:17:39.560
is to test your app.

00:17:39.560 --> 00:17:42.210
But seriously, you should
have been doing this anyway,

00:17:42.210 --> 00:17:44.440
so this isn't actually
adding to your to do list.

00:17:44.440 --> 00:17:47.330
So at most, you've got, like,
two halves of a step to do.

00:17:47.330 --> 00:17:49.355
Like, a high priority
and And Allow While Idle.

00:17:49.355 --> 00:17:50.730
That's not really
that much work,

00:17:50.730 --> 00:17:52.130
and you could have done it
while you were listening to me

00:17:52.130 --> 00:17:52.720
and already be done.

00:17:52.720 --> 00:17:54.178
So you can still
leave the room not

00:17:54.178 --> 00:17:55.660
having changed anything, right?

00:17:55.660 --> 00:17:56.540
Everybody's calm?

00:17:56.540 --> 00:17:57.930
Everybody's good?

00:17:57.930 --> 00:17:59.420
OK.

00:17:59.420 --> 00:18:01.420
I'm also supposed to
mention that we technically

00:18:01.420 --> 00:18:02.840
have a whitelist,
but I'm supposed

00:18:02.840 --> 00:18:05.048
to remind you that you
probably don't qualify for it.

00:18:05.048 --> 00:18:07.440
And you need to be really
careful about trying to use it

00:18:07.440 --> 00:18:10.630
because we have a very, very
few special use cases that

00:18:10.630 --> 00:18:12.316
are spelled out in
our documentation

00:18:12.316 --> 00:18:14.440
and are subjected to a Play
store developer policy.

00:18:14.440 --> 00:18:16.590
And it's really probably
not applicable to you,

00:18:16.590 --> 00:18:19.022
because we want to get to
this beautiful mental model

00:18:19.022 --> 00:18:20.480
that I told you to
memorize, right?

00:18:20.480 --> 00:18:22.621
And we can't do that
if we have one or two

00:18:22.621 --> 00:18:25.120
apps exempted from that that
are constantly using the radio.

00:18:25.120 --> 00:18:26.800
It undermines the
entire process.

00:18:26.800 --> 00:18:29.220
So they're being really kind
of mean about the whitelist.

00:18:29.220 --> 00:18:31.530
But you don't need it anyway,
because I already convinced you

00:18:31.530 --> 00:18:34.210
that your app isn't going to be
destroyed by Doze mode, right?

00:18:34.210 --> 00:18:36.550
Like, nobody's scared anymore.

00:18:36.550 --> 00:18:37.180
Right?

00:18:37.180 --> 00:18:37.510
Right?

00:18:37.510 --> 00:18:39.010
You might still be angry,
but you can Tweet at me,

00:18:39.010 --> 00:18:39.676
and that's fine.

00:18:39.676 --> 00:18:40.650
I'll take it.

00:18:40.650 --> 00:18:43.840
So let's shift gears and
we'll talk about App Standby.

00:18:43.840 --> 00:18:44.980
It's kind of Doze's cousin.

00:18:44.980 --> 00:18:46.540
It was also introduced
in Marshmallow.

00:18:46.540 --> 00:18:47.990
And it's also going to
affect you no matter

00:18:47.990 --> 00:18:50.448
what you're targeting, because
it affects every Marshmallow

00:18:50.448 --> 00:18:51.220
device.

00:18:51.220 --> 00:18:52.910
Now, the cool thing
about App Standby

00:18:52.910 --> 00:18:55.572
is it has the exact
same goals as Doze does.

00:18:55.572 --> 00:18:56.780
It's really easy to remember.

00:18:56.780 --> 00:18:58.071
We just care about the battery.

00:18:58.071 --> 00:19:00.450
We care about a
beautiful user experience

00:19:00.450 --> 00:19:03.620
and making sure that we
can get that at all times.

00:19:03.620 --> 00:19:05.775
Because this is that mental
model that you totally

00:19:05.775 --> 00:19:06.650
forgot by now, right?

00:19:06.650 --> 00:19:07.830
Because it's so complicated.

00:19:07.830 --> 00:19:09.538
Over time, we want
every background thing

00:19:09.538 --> 00:19:10.960
to be happening in batches.

00:19:10.960 --> 00:19:13.430
And if the user's still
using their device actively,

00:19:13.430 --> 00:19:15.130
we never get into
Doze mode, we still

00:19:15.130 --> 00:19:17.220
want to be able to
optimize for them.

00:19:17.220 --> 00:19:21.200
So we've done is we've made
a slight comparison, which

00:19:21.200 --> 00:19:24.520
stands out in the sense
that it affects apps.

00:19:24.520 --> 00:19:26.070
It doesn't affect
the whole device.

00:19:26.070 --> 00:19:27.361
The device is still functional.

00:19:27.361 --> 00:19:29.250
But if an app hasn't
been used in a while,

00:19:29.250 --> 00:19:31.000
then we're going
to kind of decrease

00:19:31.000 --> 00:19:32.360
when that app has access.

00:19:32.360 --> 00:19:35.801
[INAUDIBLE] we're trying to
optimize all of the quiet ones.

00:19:35.801 --> 00:19:36.300
OK.

00:19:36.300 --> 00:19:37.800
So other things you want to
know about the difference

00:19:37.800 --> 00:19:39.909
before we go into this
is that we're definitely

00:19:39.909 --> 00:19:42.200
restricting network access,
because we care about that.

00:19:42.200 --> 00:19:44.290
Except now we're doing
it on the app level

00:19:44.290 --> 00:19:45.730
instead of on the device level.

00:19:45.730 --> 00:19:47.699
We're still delaying
all your jobs and syncs.

00:19:47.699 --> 00:19:48.740
They'll get their chance.

00:19:48.740 --> 00:19:50.420
I promise they'll
get their chance,

00:19:50.420 --> 00:19:52.800
but it's going to be
in a controlled way.

00:19:52.800 --> 00:19:54.579
We're going honor
wake locks, though.

00:19:54.579 --> 00:19:56.620
We're going to, like,
adhere to your wake clocks,

00:19:56.620 --> 00:19:58.036
respect your wake
locks, and we're

00:19:58.036 --> 00:20:00.300
going to respect your
alarms from Alarm Manager.

00:20:00.300 --> 00:20:02.540
And these two things
at the end, that's

00:20:02.540 --> 00:20:04.900
what's going to have
all of the difference,

00:20:04.900 --> 00:20:09.440
because App Standby is triggered
differently than Doze is.

00:20:09.440 --> 00:20:12.670
So it's triggered when, again,
the user's not using your app.

00:20:12.670 --> 00:20:14.390
So this is a similar
idea to the device,

00:20:14.390 --> 00:20:15.930
except they just aren't
opening your app.

00:20:15.930 --> 00:20:17.305
They haven't opened
it all month.

00:20:17.305 --> 00:20:19.210
They're not really
that interested in it.

00:20:19.210 --> 00:20:21.970
And, I'm sorry, like, not
every app is used every day.

00:20:21.970 --> 00:20:23.300
Remember the toothbrush test.

00:20:23.300 --> 00:20:24.190
OK.

00:20:24.190 --> 00:20:25.780
Then the other thing
is that maybe you

00:20:25.780 --> 00:20:28.114
don't have any active activities
or foreground services.

00:20:28.114 --> 00:20:29.904
Like, nothing in the
foreground is running.

00:20:29.904 --> 00:20:31.410
If you're streaming
music, like, we

00:20:31.410 --> 00:20:32.850
get that, that that's
kind of important,

00:20:32.850 --> 00:20:34.180
and, like, they're not
interacting with your app,

00:20:34.180 --> 00:20:36.500
but they're listening to it for
the whole course of the party.

00:20:36.500 --> 00:20:38.030
It shouldn't cut
out in the middle.

00:20:38.030 --> 00:20:39.710
So foreground services
and activities,

00:20:39.710 --> 00:20:40.610
those are respected.

00:20:40.610 --> 00:20:42.790
And even more than that,
we respect your foreground

00:20:42.790 --> 00:20:45.350
services and activities if they
were launched by another app.

00:20:45.350 --> 00:20:46.720
It doesn't have to be
launched by the user,

00:20:46.720 --> 00:20:48.899
but if your, you know,
app behaves in response

00:20:48.899 --> 00:20:50.440
to another app, we
respect that, too.

00:20:50.440 --> 00:20:52.470
Anything in the
foreground is safe.

00:20:52.470 --> 00:20:54.190
But this is where our
differences matter.

00:20:54.190 --> 00:20:56.770
There are no pending
notifications in the lock tray

00:20:56.770 --> 00:20:57.830
or on the lock screen.

00:20:57.830 --> 00:21:00.170
Sorry, notification
tray or the lock screen.

00:21:00.170 --> 00:21:02.580
Which means that you actually
have this really cool way

00:21:02.580 --> 00:21:04.470
of getting yourself
out of App Standby

00:21:04.470 --> 00:21:06.820
when it matters to your app.

00:21:06.820 --> 00:21:08.439
So let's talk about
how to do that.

00:21:08.439 --> 00:21:10.980
So App Standby is going to end
when, you know, the user wants

00:21:10.980 --> 00:21:11.646
to use your app.

00:21:11.646 --> 00:21:13.210
That's a very
clear signal to us.

00:21:13.210 --> 00:21:14.793
They want to interact
with you, you're

00:21:14.793 --> 00:21:15.970
going to interact with them.

00:21:15.970 --> 00:21:18.053
Or the device is plugged
in, because, again, we're

00:21:18.053 --> 00:21:19.350
doing all of this for battery.

00:21:19.350 --> 00:21:21.617
So if we're plugged into the
wall, everything is free.

00:21:21.617 --> 00:21:23.700
Everything is released
from App Standy, Doze ends.

00:21:23.700 --> 00:21:25.116
Like, everything
is free to behave

00:21:25.116 --> 00:21:27.420
as they want as long as
we have power coming.

00:21:27.420 --> 00:21:30.290
But the most important is
that maybe your Alarm Manager

00:21:30.290 --> 00:21:32.390
set an alarm, and that
alarm is going to go off.

00:21:32.390 --> 00:21:33.680
And then because
the alarm went off,

00:21:33.680 --> 00:21:35.810
you're going to do some sort
of work in response to that

00:21:35.810 --> 00:21:37.700
and you're going to create
a notification to the user

00:21:37.700 --> 00:21:38.840
that something's up-to-date.

00:21:38.840 --> 00:21:40.370
Maybe at 6:00 PM
there are new levels

00:21:40.370 --> 00:21:41.310
for their game available.

00:21:41.310 --> 00:21:43.430
Or maybe, you know, like,
there's new information

00:21:43.430 --> 00:21:44.471
that you want to present.

00:21:44.471 --> 00:21:47.210
So anything that would be worthy
of creating a notification,

00:21:47.210 --> 00:21:47.760
that's fine.

00:21:47.760 --> 00:21:49.040
Like, you can behave
as you normally

00:21:49.040 --> 00:21:51.350
would in response to a time
or, like, maybe new information

00:21:51.350 --> 00:21:52.790
or some sort of trigger
or, like, you just

00:21:52.790 --> 00:21:54.590
have some ads you want
to display so you bring

00:21:54.590 --> 00:21:55.790
your user back into your app.

00:21:55.790 --> 00:21:56.456
Like, we get it.

00:21:56.456 --> 00:21:57.370
You have to monetize.

00:21:57.370 --> 00:21:59.745
But all of that means that
you can create a notification,

00:21:59.745 --> 00:22:01.610
present it to the user,
which, again, you're

00:22:01.610 --> 00:22:02.609
getting their attention.

00:22:02.609 --> 00:22:04.390
So remember the walk
across the room test.

00:22:04.390 --> 00:22:05.370
But as soon as you
do that, you're

00:22:05.370 --> 00:22:07.703
released from App Standby,
because if you have a pending

00:22:07.703 --> 00:22:09.270
notification, the
user is probably

00:22:09.270 --> 00:22:11.020
going to come your way
pretty soon, right?

00:22:11.020 --> 00:22:12.070
Like, they're, like,
going to look at that

00:22:12.070 --> 00:22:12.630
and be like, oh, yeah.

00:22:12.630 --> 00:22:13.940
I need to interact with you.

00:22:13.940 --> 00:22:16.090
So we respect that that means
that you don't need to be able

00:22:16.090 --> 00:22:18.250
right now, and you probably
need to have access

00:22:18.250 --> 00:22:20.249
to, like, your background
services or your syncs

00:22:20.249 --> 00:22:22.930
or the network so you can be
ready when they open your app.

00:22:22.930 --> 00:22:23.550
See?

00:22:23.550 --> 00:22:24.490
We get you.

00:22:24.490 --> 00:22:26.110
You don't think we get you,
but we thought really hard

00:22:26.110 --> 00:22:26.985
about our developers.

00:22:26.985 --> 00:22:28.210
I promise.

00:22:28.210 --> 00:22:28.880
OK.

00:22:28.880 --> 00:22:30.662
So see this?

00:22:30.662 --> 00:22:32.620
This beautiful mental
model that you definitely

00:22:32.620 --> 00:22:33.880
forgot because I've
only showed it to you,

00:22:33.880 --> 00:22:35.130
like, four times already?

00:22:35.130 --> 00:22:37.171
We want to get to this
ideal world with batching.

00:22:37.171 --> 00:22:39.870
And so what we did is we
created App Standby, like,

00:22:39.870 --> 00:22:41.850
we bothered with
this whole effort of,

00:22:41.850 --> 00:22:43.700
like, making you upset with us
so you Tweet at us that you're

00:22:43.700 --> 00:22:45.990
mad and then we have to explain
to you, like, why it's OK.

00:22:45.990 --> 00:22:47.573
We went through all
of this because we

00:22:47.573 --> 00:22:50.860
can achieve this mental model
with App Standby offering

00:22:50.860 --> 00:22:52.796
periodic maintenance windows.

00:22:52.796 --> 00:22:54.420
So maybe your app
isn't used every day.

00:22:54.420 --> 00:22:56.295
Maybe you're like a
once-a-month kind of app.

00:22:56.295 --> 00:22:58.090
That's fine, but you
still need to be ready

00:22:58.090 --> 00:22:59.280
when they open your
app, because they're

00:22:59.280 --> 00:23:00.955
going to come back
to you at some point.

00:23:00.955 --> 00:23:01.455
Right?

00:23:01.455 --> 00:23:03.200
So we guarantee you
a maintenance window

00:23:03.200 --> 00:23:05.025
at least once a day,
if not more often.

00:23:05.025 --> 00:23:07.400
So that even if it's been 20
days since you've been used,

00:23:07.400 --> 00:23:08.530
you're ready and
you're up-to-date

00:23:08.530 --> 00:23:10.660
and you're, at most, just
a couple hours behind

00:23:10.660 --> 00:23:11.540
in information.

00:23:11.540 --> 00:23:12.090
Right?

00:23:12.090 --> 00:23:14.000
So a guaranteed periodic
maintenance window

00:23:14.000 --> 00:23:16.800
for every app in App Standby
means they all run together

00:23:16.800 --> 00:23:19.300
with one use of the radio.

00:23:19.300 --> 00:23:21.770
That is a huge
achievement for battery.

00:23:21.770 --> 00:23:23.220
And so sorry if
you don't like it,

00:23:23.220 --> 00:23:25.100
but it's going to work really
well for your app, I promise.

00:23:25.100 --> 00:23:26.559
And it's great for
our users, which

00:23:26.559 --> 00:23:29.224
means it's going to be great for
you and the 18 different phones

00:23:29.224 --> 00:23:30.710
and tablets you
have in your house.

00:23:30.710 --> 00:23:31.370
Right?

00:23:31.370 --> 00:23:32.390
OK.

00:23:32.390 --> 00:23:34.790
So an anecdote about
why we did this.

00:23:34.790 --> 00:23:36.490
Like, let's consider
a successful app

00:23:36.490 --> 00:23:39.530
that you might not use every
day, like a movie streaming app

00:23:39.530 --> 00:23:41.800
or like a movie purchase
and ticketing app.

00:23:41.800 --> 00:23:44.050
These kinds of things
you don't use every day.

00:23:44.050 --> 00:23:45.950
You probably wait until
you're in the car,

00:23:45.950 --> 00:23:48.310
like, stuck like you're still a
seven-year-old in the back seat

00:23:48.310 --> 00:23:49.770
while your parents drive
to your grandparents' house

00:23:49.770 --> 00:23:50.450
for Thanksgiving.

00:23:50.450 --> 00:23:51.340
Which will probably happen what?

00:23:51.340 --> 00:23:52.130
Tomorrow?

00:23:52.130 --> 00:23:53.270
Like, that's a
situation nobody wants

00:23:53.270 --> 00:23:54.540
to be in, especially
as an adult.

00:23:54.540 --> 00:23:56.120
So you're going to pull out your
phone while everybody else is

00:23:56.120 --> 00:23:57.953
arguing and start, like,
watching, you know,

00:23:57.953 --> 00:23:59.870
whatever streaming
you're in the middle of,

00:23:59.870 --> 00:24:02.100
and you probably haven't
used it since like, what?

00:24:02.100 --> 00:24:02.712
October?

00:24:02.712 --> 00:24:05.170
And so the difference is when
you're dealing with something

00:24:05.170 --> 00:24:07.390
like digital content, you need
to make sure that everything

00:24:07.390 --> 00:24:08.889
is up-to-date, like
new information,

00:24:08.889 --> 00:24:10.830
new shows, new
movies, are all there

00:24:10.830 --> 00:24:12.210
and available on the list.

00:24:12.210 --> 00:24:14.120
Or, more importantly,
that, like,

00:24:14.120 --> 00:24:16.550
the licenses for any digital
content that was purchased

00:24:16.550 --> 00:24:17.534
have been refreshed.

00:24:17.534 --> 00:24:19.950
Because otherwise the app has
to legally delete it, right?

00:24:19.950 --> 00:24:21.557
So those like once
a day guaranteed

00:24:21.557 --> 00:24:23.390
maintenance windows
means that you're always

00:24:23.390 --> 00:24:26.060
ready in any kind of situation
no matter what your app's use

00:24:26.060 --> 00:24:26.994
case is, right?

00:24:26.994 --> 00:24:28.160
So we thought long and hard.

00:24:28.160 --> 00:24:29.000
I really promise.

00:24:29.000 --> 00:24:30.690
And if you don't believe me,
you can throw any use case

00:24:30.690 --> 00:24:32.065
that you want at
me, and I'll try

00:24:32.065 --> 00:24:33.630
to come up with a good answer.

00:24:33.630 --> 00:24:34.360
OK.

00:24:34.360 --> 00:24:35.700
But this is our goal.

00:24:35.700 --> 00:24:37.950
Everyone agrees that, like,
we're getting to our goal.

00:24:37.950 --> 00:24:40.190
So you're starting to see
why we had a good reason

00:24:40.190 --> 00:24:42.080
and you only hate
me, like, 20% now.

00:24:42.080 --> 00:24:42.580
OK.

00:24:42.580 --> 00:24:44.109
So how do you adapt
to App Standby?

00:24:44.109 --> 00:24:45.650
Because you have no
control over this

00:24:45.650 --> 00:24:47.240
and you don't know when you're
an App Standby and that's

00:24:47.240 --> 00:24:47.950
kind of scary.

00:24:47.950 --> 00:24:48.470
I get that.

00:24:48.470 --> 00:24:49.250
Right?

00:24:49.250 --> 00:24:52.702
So, again, you shouldn't
have to do anything, right?

00:24:52.702 --> 00:24:54.910
Your alarms are honored,
your wake locks are honored,

00:24:54.910 --> 00:24:56.620
and your jobs and syncs
will run at least once

00:24:56.620 --> 00:24:58.620
a day, which means you'll
have network access at least

00:24:58.620 --> 00:24:59.120
once a day.

00:24:59.120 --> 00:25:01.400
So, like, you're good
until you're being used.

00:25:01.400 --> 00:25:03.930
But if something does
come up, we get that.

00:25:03.930 --> 00:25:05.362
So, hello GCM.

00:25:05.362 --> 00:25:06.570
It's your best friend, right?

00:25:06.570 --> 00:25:07.700
Like, you're totally
convinced that you

00:25:07.700 --> 00:25:10.200
love downstream messaging
with our super great service,

00:25:10.200 --> 00:25:12.197
and the high priority stance.

00:25:12.197 --> 00:25:14.780
Any message that comes through
to the system with a High Party

00:25:14.780 --> 00:25:17.250
tag will mean that your app
is given a temporary reprieve

00:25:17.250 --> 00:25:18.940
from Idle Mode to react to that.

00:25:18.940 --> 00:25:21.640
And so if that reaction includes
a notification that you create,

00:25:21.640 --> 00:25:21.960
great.

00:25:21.960 --> 00:25:22.800
You're out of Idle Mode.

00:25:22.800 --> 00:25:24.320
But if it's just something
that you need to do to,

00:25:24.320 --> 00:25:25.730
like, speak with your
server, then great.

00:25:25.730 --> 00:25:27.980
You're still in Idle Mode,
but at least you're informed.

00:25:27.980 --> 00:25:29.960
Your client can rely on
all your communication

00:25:29.960 --> 00:25:31.647
from your server
that's time sensitive.

00:25:31.647 --> 00:25:33.230
And anything that's
not time sensitive

00:25:33.230 --> 00:25:35.385
is just held for you until
your maintenance window.

00:25:35.385 --> 00:25:37.760
So no matter what, you're not
missing anything important.

00:25:37.760 --> 00:25:38.570
Like, you're good.

00:25:38.570 --> 00:25:40.320
You guys are good to go.

00:25:40.320 --> 00:25:41.380
You're going to be great.

00:25:41.380 --> 00:25:42.450
It's going to be awesome.

00:25:42.450 --> 00:25:43.130
OK.

00:25:43.130 --> 00:25:45.180
So now you've been
listening to me for awhile,

00:25:45.180 --> 00:25:46.388
and you're probably confused.

00:25:46.388 --> 00:25:47.180
You're like, wait.

00:25:47.180 --> 00:25:47.890
What I do?

00:25:47.890 --> 00:25:50.692
Because my app use case has
totally not been talked about.

00:25:50.692 --> 00:25:53.025
And, like, you really shouldn't
have done this Idle Mode

00:25:53.025 --> 00:25:53.800
in the first place, you guys.

00:25:53.800 --> 00:25:55.091
Like, battery was totally fine.

00:25:55.091 --> 00:25:55.780
OK.

00:25:55.780 --> 00:25:57.134
Well, that's not true.

00:25:57.134 --> 00:25:58.050
And this is happening.

00:25:58.050 --> 00:25:58.550
It's done.

00:25:58.550 --> 00:25:59.920
It's mandatory.

00:25:59.920 --> 00:26:02.620
Any device on Marshmallow, so
time to live in our new world.

00:26:02.620 --> 00:26:05.203
I know you're really excited and
you're not frustrated at all.

00:26:05.203 --> 00:26:09.350
But what you actually need
to do here is believe us.

00:26:09.350 --> 00:26:10.180
This Mental Model.

00:26:10.180 --> 00:26:11.920
See, you totally forgot it
so I put it back up here

00:26:11.920 --> 00:26:13.180
because it's so complicated.

00:26:13.180 --> 00:26:15.096
Over time, we want
everything done in a batch.

00:26:15.096 --> 00:26:16.942
We want to turn the
radio on only maybe,

00:26:16.942 --> 00:26:19.150
like, a couple times a day
if that device isn't used.

00:26:19.150 --> 00:26:21.430
Or only, like, once a day
if it's being used while,

00:26:21.430 --> 00:26:23.570
like, everyone else is,
like, doing their job sync.

00:26:23.570 --> 00:26:25.720
And we just want to do
one batch for all of that.

00:26:25.720 --> 00:26:27.490
Like, let the user
have some control here.

00:26:27.490 --> 00:26:29.720
And remember, understand
when you are important

00:26:29.720 --> 00:26:31.530
and when you are not
as far as a life.

00:26:31.530 --> 00:26:32.890
A day in a life goes.

00:26:32.890 --> 00:26:36.780
So one app trying to
be an exception to this

00:26:36.780 --> 00:26:38.350
undermines the
whole process, which

00:26:38.350 --> 00:26:41.045
is why this is now mandatory
and forced on all of you

00:26:41.045 --> 00:26:43.170
because that's the only
way we can achieve success.

00:26:43.170 --> 00:26:45.253
And you're totally going
to forgive us because I'm

00:26:45.253 --> 00:26:46.660
really great, and you like me.

00:26:46.660 --> 00:26:47.430
OK.

00:26:47.430 --> 00:26:49.990
But, again, your to
do list here basically

00:26:49.990 --> 00:26:51.570
includes rethinking some stuff.

00:26:51.570 --> 00:26:53.460
You need to understand
what has changed.

00:26:53.460 --> 00:26:54.390
Wake locks and alarms.

00:26:54.390 --> 00:26:56.639
Their behavior may or may
not be trustworthy depending

00:26:56.639 --> 00:26:57.931
on whether you're in Doze mode.

00:26:57.931 --> 00:26:59.888
Your alarms will trigger,
but maybe not exactly

00:26:59.888 --> 00:27:01.075
right on the moment, right?

00:27:01.075 --> 00:27:02.950
In App Standby, you can
still count on these.

00:27:02.950 --> 00:27:04.450
But, again, the
behavior has shifted

00:27:04.450 --> 00:27:05.940
so that changes the way
you think about some

00:27:05.940 --> 00:27:07.981
of the assumptions you
made in your architecture.

00:27:07.981 --> 00:27:09.760
And then your jobs
and your syncs

00:27:09.760 --> 00:27:11.529
might happen a
couple hours late,

00:27:11.529 --> 00:27:12.820
and that has to be OK with you.

00:27:12.820 --> 00:27:14.990
Like, you need to make
sure that your system is

00:27:14.990 --> 00:27:17.300
able to react to that.

00:27:17.300 --> 00:27:20.520
So this is what's changed,
but at the same time,

00:27:20.520 --> 00:27:22.890
nothing has actually changed,
because, like I said,

00:27:22.890 --> 00:27:24.562
we're not deleting
your jobs and syncs,

00:27:24.562 --> 00:27:26.770
they're just a couple hours
late, which for most apps

00:27:26.770 --> 00:27:29.171
is not a noticeable difference
because most apps use

00:27:29.171 --> 00:27:31.170
downstream messaging and
they rely on the client

00:27:31.170 --> 00:27:32.770
to speak to the
server to get updates

00:27:32.770 --> 00:27:34.186
and then the
server's probably not

00:27:34.186 --> 00:27:37.150
expecting, like, a one specific
moment of the day check-in.

00:27:37.150 --> 00:27:38.910
So you're probably OK.

00:27:38.910 --> 00:27:40.630
I guarantee you that
you're probably OK.

00:27:40.630 --> 00:27:44.750
But let's revisit
our to do list.

00:27:44.750 --> 00:27:47.560
Think about your app
architecture, right?

00:27:47.560 --> 00:27:49.700
Update time-critical
alarms that actually matter

00:27:49.700 --> 00:27:51.540
with in And Allow While Idle.

00:27:51.540 --> 00:27:52.530
It's the only change.

00:27:52.530 --> 00:27:53.460
It's like, what?

00:27:53.460 --> 00:27:55.379
40 characters in your
whole codebase probably.

00:27:55.379 --> 00:27:55.920
You're great.

00:27:55.920 --> 00:27:57.110
Like, totally easy.

00:27:57.110 --> 00:27:59.900
You might not even have to.

00:27:59.900 --> 00:28:02.640
Add high priority flags
to any downstream messages

00:28:02.640 --> 00:28:05.352
through GCM, which technically
isn't an Android change so you

00:28:05.352 --> 00:28:07.060
can still kind of
chalk that up to, like,

00:28:07.060 --> 00:28:08.350
a server-level change.

00:28:08.350 --> 00:28:10.416
So again, your to do list
is basically nothing.

00:28:10.416 --> 00:28:11.790
But then the most
important thing

00:28:11.790 --> 00:28:13.500
is you just need
to test your app.

00:28:13.500 --> 00:28:16.680
You need to walk through what's
going on in your application,

00:28:16.680 --> 00:28:18.270
step through with
our ADB service,

00:28:18.270 --> 00:28:20.060
see what the behavior
is getting into

00:28:20.060 --> 00:28:22.430
and out of the Idle modes,
and most importantly,

00:28:22.430 --> 00:28:24.020
make sure that you
aren't surprised.

00:28:24.020 --> 00:28:26.090
Because if you're surprised
by some sort of behavior,

00:28:26.090 --> 00:28:27.480
something that doesn't
happen when it should

00:28:27.480 --> 00:28:29.938
or something that happens when
it shouldn't, then your user

00:28:29.938 --> 00:28:32.780
is going to be surprised, and
surprised users uninstall apps

00:28:32.780 --> 00:28:34.180
because they don't
understand what's happening

00:28:34.180 --> 00:28:35.880
and then they think that you're
stealing their information

00:28:35.880 --> 00:28:37.020
or training their battery.

00:28:37.020 --> 00:28:38.270
You don't want to be that app.

00:28:38.270 --> 00:28:38.770
OK.

00:28:38.770 --> 00:28:40.186
And then when
you've done all this

00:28:40.186 --> 00:28:42.800
and you found something that
you don't like, you just repeat.

00:28:42.800 --> 00:28:43.450
See?

00:28:43.450 --> 00:28:44.562
Test your app.

00:28:44.562 --> 00:28:46.020
You notice how this
is kind of just

00:28:46.020 --> 00:28:47.629
your development flow normally?

00:28:47.629 --> 00:28:49.170
So there really
isn't a change, which

00:28:49.170 --> 00:28:50.700
is why I'm convincing
you that you can walk out

00:28:50.700 --> 00:28:51.750
of the room being
like, OK, good.

00:28:51.750 --> 00:28:52.460
Status quo.

00:28:52.460 --> 00:28:53.440
No difference.

00:28:53.440 --> 00:28:53.940
Right?

00:28:53.940 --> 00:28:54.730
Right?

00:28:54.730 --> 00:28:56.470
You don't seem like
you're convinced,

00:28:56.470 --> 00:28:59.580
but here's the, again,
how to test your app.

00:28:59.580 --> 00:29:02.700
What you've got here are two
super, super sweet ADB services

00:29:02.700 --> 00:29:05.390
that we created with
Marshmallow that I

00:29:05.390 --> 00:29:08.320
told you step through Doze
mode or super even easier

00:29:08.320 --> 00:29:11.280
than that is the set Inactive
Service for App Standby you

00:29:11.280 --> 00:29:12.950
just said True or False.

00:29:12.950 --> 00:29:14.579
Set Inactive, let's
see what goes on.

00:29:14.579 --> 00:29:15.370
Set Inactive False.

00:29:15.370 --> 00:29:15.870
OK, great.

00:29:15.870 --> 00:29:16.350
We're out of it.

00:29:16.350 --> 00:29:17.610
Let's see what happens now.

00:29:17.610 --> 00:29:19.700
You also want to test your
actions and look for surprises.

00:29:19.700 --> 00:29:21.241
And if you're not
surprised, then you

00:29:21.241 --> 00:29:22.729
can just call it
a week on Tuesday

00:29:22.729 --> 00:29:24.270
and go home and be
like, turkey time.

00:29:24.270 --> 00:29:27.470
And if you are surprised,
you can be like crap.

00:29:27.470 --> 00:29:29.660
I'm going to go on Twitter
and yell at that girl.

00:29:29.660 --> 00:29:31.300
But hopefully, your apps
are going to be surviving

00:29:31.300 --> 00:29:32.508
and they're going to be fine.

00:29:32.508 --> 00:29:33.820
And if they don't, that's OK.

00:29:33.820 --> 00:29:36.290
You can, like I said,
come and yell at me.

00:29:36.290 --> 00:29:38.222
This is how you find
me on G+ or on Twitter.

00:29:38.222 --> 00:29:40.680
And if you have a use case that
actually does kind of stand

00:29:40.680 --> 00:29:42.305
out, I will go and
I will fight for you

00:29:42.305 --> 00:29:44.782
to our PM to see, like, what
his expected reaction was.

00:29:44.782 --> 00:29:46.990
But for the most part, every
app has a solution here,

00:29:46.990 --> 00:29:48.760
and it's not that difficult.

00:29:48.760 --> 00:29:50.660
So this is my whole
30 minute talk.

00:29:50.660 --> 00:29:52.980
That's 15 minutes while
I'll be standing right here

00:29:52.980 --> 00:29:54.560
and you can come
say your mean things

00:29:54.560 --> 00:29:56.660
or ask me your really
good questions.

00:29:56.660 --> 00:29:59.880
But I hope you guys have a great
day, and thanks for listening.

