WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
Now we've got a grammar, and we've got a parser. Let's see what it's good for.

00:00:04.000 --> 00:00:07.000
Here's an example of parsing URLs.

00:00:07.000 --> 00:00:11.000
Here's an official specification from the W3--the World Wide Web Consortium.

00:00:11.000 --> 00:00:15.000
There's a definition on their page. It's not quite in the right format that we use.

00:00:15.000 --> 00:00:20.000
But it was very easy to take their format and translate it into our format.

00:00:20.000 --> 00:00:22.000
I just sort of went down their rules one-by-one.

00:00:22.000 --> 00:00:26.000
Some of them you copy verbatim. Some of them I had to fix up a little bit.

00:00:26.000 --> 00:00:30.000
You can see here is the whole specification of the grammar.

00:00:30.000 --> 00:00:34.000
It's 40 lines or so. It's fairly involved and verbose.

00:00:34.000 --> 00:00:36.000
But it handles URLs.

00:00:36.000 --> 00:00:40.000
It was straightforward to go from the specification that they had on their website

00:00:40.000 --> 00:00:43.000
to one that could be parsed by the simple parser we built.

00:00:43.000 --> 00:00:46.000
Now, I have to say that as I was doing this, I didn't get it all right the first time.

00:00:46.000 --> 00:00:50.000
I made a couple of types that made my grammar not work,

00:00:50.000 --> 00:00:54.000
and I found this function very useful. I wrote this function to verify a grammar.

00:00:54.000 --> 00:01:00.000
What it does is it finds all the tokens that are on the left-hand side and on the right-hand side,

00:01:00.000 --> 00:01:02.000
and then it shows them to me.

00:01:02.000 --> 00:01:04.000
It shows me the nonterminals, the things that are on the left-hand side.

00:01:04.000 --> 00:01:08.000
It shows me the terminals that are the right-hand side but not on the left-hand side.

00:01:08.000 --> 00:01:11.000
Those should be the regular expressions. It shows me some suspects. What's a suspect?

00:01:11.000 --> 00:01:16.000
That's a something that looks like it's the name and should appear on the left-hand side,

00:01:16.000 --> 00:01:19.000
so it's alphanumeric characters, but doesn't.

00:01:19.000 --> 00:01:22.000
If they've done that, it's probably because I spelled it wrong in one place

00:01:22.000 --> 00:01:26.000
and tried to have the same word used twice and spelled it wrong in one place.

00:01:26.000 --> 00:01:28.000
Then there are the orphans.

00:01:28.000 --> 00:01:32.000
Those are the things that appear on the left-hand side but don't appear on the right-hand side.

00:01:32.000 --> 00:01:35.000
They're useless. They're defined, but they aren't called anywhere.

00:01:35.000 --> 00:01:39.000
As I was writing this grammar, I would call this function and say, oops, there's an error.

00:01:39.000 --> 00:01:44.000
I fixed it and called the function and say, oops, there's another error. Then I got it right.

