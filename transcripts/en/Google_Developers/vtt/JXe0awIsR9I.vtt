WEBVTT
Kind: captions
Language: en

00:00:03.000 --> 00:00:03.968
Jeff:
Okay, thank you.

00:00:04.033 --> 00:00:05.167
Welcome everyone.

00:00:05.234 --> 00:00:07.734
Thank you for joining
"Developing Innovative

00:00:07.801 --> 00:00:09.767
Custom Business Solutions
with Google Apps".

00:00:09.834 --> 00:00:11.200
My name is Jeff Ragusa.

00:00:11.267 --> 00:00:13.534
I look after the channel program
for Google Apps,

00:00:13.601 --> 00:00:15.467
and I'm going to be joined
in a bit by David Hoff

00:00:15.534 --> 00:00:17.467
from Cloud Sherpas,
who's one of our partners,

00:00:17.534 --> 00:00:20.200
who's done quite a bit
of work in this area.

00:00:20.267 --> 00:00:21.567
So what are we
talking about?

00:00:21.634 --> 00:00:23.100
Specifically in this session,

00:00:23.167 --> 00:00:24.934
we're talking about developing
solutions for business customers

00:00:25.000 --> 00:00:27.834
who are also customers
of Google Apps;

00:00:27.901 --> 00:00:29.267
and we're talking
about customization,

00:00:29.334 --> 00:00:32.634
so custom solutions to fit
a particular business use case.

00:00:32.701 --> 00:00:35.367
So those are
the underlying threads.

00:00:35.434 --> 00:00:38.567
Some things that I would
like you to take away:

00:00:38.634 --> 00:00:42.634
#1 is that developers have
the tools to be quite flexible

00:00:42.701 --> 00:00:44.367
in terms of the business
solutions

00:00:44.434 --> 00:00:47.100
that they are able to create
for their customers,

00:00:47.167 --> 00:00:50.634
and with a little creativity,
are really in power to solve

00:00:50.701 --> 00:00:55.434
a wide variety of business
problems with those customers.

00:00:55.501 --> 00:00:57.601
#2, customizations
can be lightweight,

00:00:57.667 --> 00:01:00.100
lightweight in terms of the
investment required to ramp up,

00:01:00.167 --> 00:01:02.033
and in terms of
the investment required

00:01:02.100 --> 00:01:03.868
to actually develop
customizations,

00:01:03.934 --> 00:01:06.667
but then we can also
attack more complex

00:01:06.734 --> 00:01:07.868
enterprise scenarios as well,

00:01:07.934 --> 00:01:09.367
so it really depends
on the problem at hand,

00:01:09.434 --> 00:01:10.701
the nature of the problem,

00:01:10.767 --> 00:01:14.200
and how much energy investment
you want to put into it.

00:01:14.267 --> 00:01:15.501
And then #3,
there's a business here.

00:01:15.567 --> 00:01:19.000
So I mentioned I look after
the partner program.

00:01:19.067 --> 00:01:21.100
We'll talk about
our partners

00:01:21.167 --> 00:01:22.968
and we'll talk about the role
that they play here.

00:01:23.033 --> 00:01:24.601
And when I say partners,

00:01:24.667 --> 00:01:28.133
I'm talking about third party
integrators and developers.

00:01:28.200 --> 00:01:29.767
But you don't have to be
a partner to partake

00:01:29.834 --> 00:01:31.234
and for this
to be useful.

00:01:31.300 --> 00:01:32.901
Certainly you can be
a developer

00:01:32.968 --> 00:01:34.567
and end user
at a Google Apps organization

00:01:34.634 --> 00:01:38.634
to extend and customize
your Google Apps instance.

00:01:38.701 --> 00:01:40.167
So, brief agenda.

00:01:40.234 --> 00:01:42.067
We're going to set the table and
talk about a brief background

00:01:42.133 --> 00:01:44.100
on Google Apps,
and then we'll talk about

00:01:44.167 --> 00:01:47.334
the bigger picture IT landscape
that this all fits into,

00:01:47.400 --> 00:01:48.901
and then we'll talk
about our partners

00:01:48.968 --> 00:01:52.067
and the landscape there
and the role that they play,

00:01:52.133 --> 00:01:53.200
then we'll talk about
some of the tools

00:01:53.267 --> 00:01:55.467
that are typically
used to customize

00:01:55.534 --> 00:01:57.601
and integrate Google Apps.

00:01:57.667 --> 00:02:01.100
And we're not going to go
too much in depth on the tools.

00:02:01.167 --> 00:02:03.934
There are sessions at Google IO
that dive into each of the tools

00:02:04.000 --> 00:02:05.567
that I'm going to talk about
in more depth.

00:02:05.634 --> 00:02:07.334
I just wanted to
briefly touch on them

00:02:07.400 --> 00:02:12.367
and really give an idea of the
breadth of possibilities here.

00:02:12.434 --> 00:02:13.868
And then we're going
to intersperse

00:02:13.934 --> 00:02:16.133
that with discussions
of some examples

00:02:16.200 --> 00:02:18.734
of what we're seeing
in the wild,

00:02:18.801 --> 00:02:20.834
and particularly for
illustrative purposes,

00:02:20.901 --> 00:02:22.868
we'll use our partners
and some of the experiences

00:02:22.934 --> 00:02:25.400
that they've had
with their customers.

00:02:25.467 --> 00:02:27.234
And then, as mentioned,
David will come up,

00:02:27.300 --> 00:02:30.234
and will go more in depth
into an example,

00:02:30.300 --> 00:02:33.667
that Cloud Sherpas--a scenario
that Cloud Sherpas recently had

00:02:33.734 --> 00:02:35.667
with one of their customers.

00:02:35.734 --> 00:02:36.868
So let's talk about
Google Apps.

00:02:36.934 --> 00:02:38.567
What is Google Apps?

00:02:38.634 --> 00:02:41.968
To level set, Google Apps is our
suite of business applications

00:02:42.033 --> 00:02:44.968
for providing employees
powerful messaging

00:02:45.033 --> 00:02:46.767
and collaboration tools.

00:02:46.834 --> 00:02:49.067
So, as a set of tools,
it's really anchored

00:02:49.133 --> 00:02:52.067
on the messaging/communications
side by Gmail,

00:02:52.133 --> 00:02:55.801
which acts as the communications
hub for users.

00:02:55.868 --> 00:02:58.133
And then it's anchored
on the collaboration side

00:02:58.200 --> 00:03:01.567
by Google Docs
and Google Sites,

00:03:01.634 --> 00:03:05.033
which acts as
a collaboration umbrella,

00:03:05.100 --> 00:03:07.467
often for teams
and projects and so forth.

00:03:07.534 --> 00:03:10.033
So, a set of other tools,
all hosted by Google,

00:03:10.100 --> 00:03:12.667
and then accessible
by end users and customers

00:03:12.734 --> 00:03:16.000
through their web browser
or any web-capable device.

00:03:16.067 --> 00:03:17.767
What I want to talk about
specifically for developers--

00:03:17.834 --> 00:03:18.968
a couple points.

00:03:19.033 --> 00:03:20.367
First, there's a ton
of users on this.

00:03:20.434 --> 00:03:23.467
Over 3 million businesses
using Google Apps today,

00:03:23.534 --> 00:03:27.234
and comprising over
30 million active end users.

00:03:27.300 --> 00:03:28.934
So you have an audience
here as a developer,

00:03:29.000 --> 00:03:32.100
and it's a rapidly
growing audience.

00:03:32.167 --> 00:03:34.801
Also, this suite as a platform
is growing pretty rapidly,

00:03:34.868 --> 00:03:37.400
so we released
218 features last year,

00:03:37.467 --> 00:03:41.367
and many of these are related
to the developer interfaces

00:03:41.434 --> 00:03:44.734
and tools that are available
to you.

00:03:44.801 --> 00:03:47.968
And then
there's a 99.9% uptime SLA,

00:03:48.033 --> 00:03:49.234
so what this means
for developers is,

00:03:49.300 --> 00:03:52.801
you can hitch your wagon
to Google Apps,

00:03:52.868 --> 00:03:55.300
and not have to worry
so much about the reliability

00:03:55.367 --> 00:04:00.167
of your dependent components,
which is important.

00:04:00.234 --> 00:04:02.467
So if you want to learn more
or get an account,

00:04:02.534 --> 00:04:05.634
learn more about Google Apps,
google.com/a.

00:04:05.701 --> 00:04:08.234
Another piece of the puzzle
here is, about two years ago,

00:04:08.300 --> 00:04:10.334
we launched a channel program
around this,

00:04:10.400 --> 00:04:12.601
and because of the economics
of Google Apps,

00:04:12.667 --> 00:04:13.901
this was really
designed to attract

00:04:13.968 --> 00:04:16.000
service-oriented partners
who were really involved

00:04:16.067 --> 00:04:20.434
in handling all aspects
of the customer life cycle.

00:04:20.501 --> 00:04:21.734
And the design point
of the program

00:04:21.801 --> 00:04:23.634
is really to enable partners
and facilitate partners

00:04:23.701 --> 00:04:26.033
to be able to be the face
of the technology

00:04:26.100 --> 00:04:28.534
and the face of the innovation
for their customers.

00:04:28.601 --> 00:04:30.934
And so we've seen partners
embrace this role,

00:04:31.000 --> 00:04:34.100
and use that to create
comprehensive solutions

00:04:34.167 --> 00:04:36.200
for their customers
involving multiple products

00:04:36.267 --> 00:04:37.534
and multiple vendors,

00:04:37.601 --> 00:04:39.734
and then pulling those
together into solutions,

00:04:39.801 --> 00:04:42.634
and then providing consulting
and support around that.

00:04:42.701 --> 00:04:44.000
And then, more recently,
what we're seeing is a trend

00:04:44.067 --> 00:04:46.501
toward adding custom development
into the mix,

00:04:46.567 --> 00:04:48.901
where they're building
their development skills,

00:04:48.968 --> 00:04:51.968
and then using that to integrate
and extend the solutions

00:04:52.033 --> 00:04:53.400
that they're able to create.

00:04:53.467 --> 00:04:56.133
And I think this is where
the IO audience in particular

00:04:56.200 --> 00:04:59.000
is going to be able to play
a part and get a leg up.

00:04:59.067 --> 00:05:01.100
So you want to partake or
learn more about the partner

00:05:01.167 --> 00:05:07.868
program around Google Apps,
google.com/apps/resellers.

00:05:07.934 --> 00:05:09.267
Okay.

00:05:09.334 --> 00:05:10.701
And then the last piece of
the puzzle here is our vision,

00:05:10.767 --> 00:05:13.801
really, for where we see
businesses going.

00:05:13.868 --> 00:05:18.801
In this world, it's what
we refer to as 100% web.

00:05:18.868 --> 00:05:21.667
It's really this world
where applications and data

00:05:21.734 --> 00:05:23.467
are stored centrally,
and then served out

00:05:23.534 --> 00:05:26.000
over a scale-able,
multi-teneted infrastructure,

00:05:26.067 --> 00:05:27.601
delivered out
over the Internet,

00:05:27.667 --> 00:05:31.701
and then consumed by users
purely through a web browser.

00:05:31.767 --> 00:05:34.167
And so, this vision really
allows the young customer

00:05:34.234 --> 00:05:36.934
and their partners, frankly,
to be able to focus

00:05:37.000 --> 00:05:39.167
on the specific logic
and processes

00:05:39.234 --> 00:05:42.300
to separate that business
and move that business forward.

00:05:42.367 --> 00:05:44.667
We have a set of tools
to support this vision.

00:05:44.734 --> 00:05:46.234
I talked a little bit
about Google Apps,

00:05:46.300 --> 00:05:49.000
on the left-hand side there,
as a suite of applications

00:05:49.067 --> 00:05:51.133
that you can buy from Google.

00:05:51.200 --> 00:05:52.634
Over on the right hand side

00:05:52.701 --> 00:05:55.400
in the form of
the Google Apps Marketplace,

00:05:55.467 --> 00:05:57.767
we have a marketplace of
third party web applications,

00:05:57.834 --> 00:06:01.267
over 300 vendors,
and these are web applications

00:06:01.334 --> 00:06:02.701
that are already integrated
in with Google Apps

00:06:02.767 --> 00:06:03.801
in various ways.

00:06:03.868 --> 00:06:05.033
And there's a session,
I believe,

00:06:05.100 --> 00:06:06.534
right before this in here,
that went into depth

00:06:06.601 --> 00:06:09.367
on the marketplace
and how to leverage that.

00:06:09.434 --> 00:06:11.467
But then in the middle you have,
customers are able to create

00:06:11.534 --> 00:06:13.567
custom applications,
using the various tools

00:06:13.634 --> 00:06:15.167
of our development platform.

00:06:15.234 --> 00:06:16.367
This is where I'm going
to spend the majority

00:06:16.434 --> 00:06:18.534
of the rest of the time here.

00:06:18.601 --> 00:06:20.267
We have all
these applications

00:06:20.334 --> 00:06:24.000
on this web platform, served up
using HTML as a platform,

00:06:24.067 --> 00:06:26.834
and then with Chrome
and Android and Chrome OS,

00:06:26.901 --> 00:06:29.000
we provide the tools to be able
to access these applications

00:06:29.067 --> 00:06:32.200
from anywhere
and any device.

00:06:32.267 --> 00:06:33.534
So you put those together,

00:06:33.601 --> 00:06:34.968
and we have our developers
and the resellers,

00:06:35.033 --> 00:06:36.200
and our partner,

00:06:36.267 --> 00:06:37.501
and now we're really
in a prime position

00:06:37.567 --> 00:06:40.234
to drive customers toward
this 100% web vision,

00:06:40.300 --> 00:06:44.868
and they're really playing
at least three roles in this.

00:06:44.934 --> 00:06:46.300
First, they're playing
the traditional role

00:06:46.367 --> 00:06:48.801
of value-added reseller,
or managed service provider,

00:06:48.868 --> 00:06:50.100
and this involves bringing
Google Apps

00:06:50.167 --> 00:06:52.334
as an application suite
to their customers,

00:06:52.400 --> 00:06:54.033
and implementing
and providing consulting

00:06:54.100 --> 00:06:55.334
and support around that,

00:06:55.400 --> 00:06:57.601
as well as sourcing
complementary applications,

00:06:57.667 --> 00:06:58.868
from other vendors,
for example,

00:06:58.934 --> 00:07:00.067
from the marketplace,

00:07:00.133 --> 00:07:03.234
and then building multi-vendor
solutions there.

00:07:03.300 --> 00:07:05.133
Secondly, they're playing
the role of systems integrator,

00:07:05.200 --> 00:07:06.801
where they're using
the development tools

00:07:06.868 --> 00:07:09.167
of our platform to create
the custom logic

00:07:09.234 --> 00:07:11.367
and custom interfaces to tie
together applications

00:07:11.434 --> 00:07:15.567
from Google and third parties
into comprehensive solutions.

00:07:15.634 --> 00:07:16.868
And then, third,
they're playing the role

00:07:16.934 --> 00:07:17.901
of the independent
software vendor,

00:07:17.968 --> 00:07:20.667
using those same
developer tools

00:07:20.734 --> 00:07:22.834
and building stand-alone
applications.

00:07:22.901 --> 00:07:27.067
So what we're seeing is a trend
where former pure-play VARs,

00:07:27.133 --> 00:07:28.901
or service providers,
are expanding their business,

00:07:28.968 --> 00:07:31.067
they're growing
their developers' skills,

00:07:31.133 --> 00:07:34.934
and they're starting by creating
custom integration practices

00:07:35.033 --> 00:07:36.234
and custom development
practices,

00:07:36.300 --> 00:07:37.334
and then some of them
are starting

00:07:37.400 --> 00:07:38.634
to productize
that work as well.

00:07:38.701 --> 00:07:40.601
And there's recurring
revenue opportunities

00:07:40.667 --> 00:07:43.601
across each
of these roles.

00:07:43.667 --> 00:07:45.434
Okay. So let's talk now about,
what are the tools?

00:07:45.501 --> 00:07:49.834
So the tools that we're seeing
typically used by customers to--

00:07:49.901 --> 00:07:52.534
by partners and developers
to provide custom logic

00:07:52.601 --> 00:07:54.067
and then integrate that
into Google Apps

00:07:54.133 --> 00:07:55.567
and create custom solutions.

00:07:55.634 --> 00:07:57.334
We'll look at it from the lens
of looking at Google Apps,

00:07:57.400 --> 00:07:59.567
and then examining the ways
in which you can customize

00:07:59.634 --> 00:08:01.167
and extend.

00:08:01.234 --> 00:08:02.267
So one of the first things
you need to do,

00:08:02.334 --> 00:08:03.300
or one of the things
you need to do,

00:08:03.367 --> 00:08:07.200
is to create
custom business logic.

00:08:07.267 --> 00:08:10.300
So an example here would be
if you want to code up

00:08:10.367 --> 00:08:12.167
a custom business process--
so, for example,

00:08:12.234 --> 00:08:16.300
approval work flow for procuring
office supplies.

00:08:16.367 --> 00:08:18.033
So a couple different tools
that we see typically used:

00:08:18.100 --> 00:08:20.300
one is Google App Engine,
which is a full stack

00:08:20.367 --> 00:08:23.801
for developing and hosting
web applications,

00:08:23.868 --> 00:08:25.501
and another
is Google Apps Script,

00:08:25.567 --> 00:08:27.467
which is a lightweight
scripting framework.

00:08:27.534 --> 00:08:29.167
Both of these provide
the ability to host

00:08:29.234 --> 00:08:33.801
and develop custom logic
on Google infrastructure,

00:08:33.868 --> 00:08:37.667
and then from there, being able
to do various things.

00:08:37.734 --> 00:08:39.467
Another--and we're going to
dive into these tools

00:08:39.534 --> 00:08:41.734
and go into some examples--
but another thing

00:08:41.801 --> 00:08:42.968
that you'll
often need to do

00:08:43.033 --> 00:08:45.400
is to create
a custom user interface.

00:08:45.467 --> 00:08:47.267
So in the procurement work
flow example,

00:08:47.334 --> 00:08:49.734
what you need to do is an
employee needs to be able to go

00:08:49.801 --> 00:08:53.434
somewhere to browse the tools,
to browse what's available,

00:08:53.501 --> 00:08:55.834
and then to make
procurement requests.

00:08:55.901 --> 00:08:58.300
So we've got--and this could be
stand-alone user interfaces,

00:08:58.367 --> 00:09:00.701
or it could be custom--
it could be actually integrated

00:09:00.767 --> 00:09:03.300
in within the Google Apps
user experience.

00:09:03.367 --> 00:09:06.834
So a couple tools here,
or sets of options here.

00:09:06.901 --> 00:09:11.100
One is Gadgets, so Gadgets are
HTML and JavaScript components

00:09:11.167 --> 00:09:12.868
that are portable,

00:09:12.934 --> 00:09:15.067
and you're able to customize
your user interface there.

00:09:15.133 --> 00:09:17.767
Another is Google Web Toolkit,
which is a toolkit

00:09:17.834 --> 00:09:22.100
for creating more complex,
interactive UI components.

00:09:22.167 --> 00:09:23.567
Another thing you'll want
to be able to do is

00:09:23.634 --> 00:09:24.834
you'll want to integrate
with Google Apps,

00:09:24.901 --> 00:09:26.501
at the data layer,
and be able to actually modify

00:09:26.567 --> 00:09:28.934
and manipulate the business
objects underlying Google Apps.

00:09:29.000 --> 00:09:31.234
And Apps Script can
certainly help you here,

00:09:31.300 --> 00:09:33.067
and we'll talk about
some examples there,

00:09:33.133 --> 00:09:35.501
but then also there is
a set of Google data APIs

00:09:35.567 --> 00:09:37.767
that pertain specifically
to Google Apps,

00:09:37.834 --> 00:09:40.100
and allow you to read
and write business objects

00:09:40.167 --> 00:09:42.567
under Google Apps.

00:09:42.634 --> 00:09:44.434
And then finally,
you want to bring together

00:09:44.501 --> 00:09:46.100
a more seamless
experience for users.

00:09:46.167 --> 00:09:49.601
You really need to integrate
on the administrative level

00:09:49.667 --> 00:09:51.400
as well, and so you want
to be able to share

00:09:51.467 --> 00:09:54.167
a common language
around a user account store,

00:09:54.234 --> 00:09:56.000
common authentication
systems,

00:09:56.067 --> 00:09:59.434
and if you have property pages
or other ways of configuring

00:09:59.501 --> 00:10:01.167
your customizations,
then you want that to be tied in

00:10:01.234 --> 00:10:04.400
to the Apps administrative
experience as well.

00:10:04.467 --> 00:10:05.767
So we'll talk
about these things.

00:10:05.834 --> 00:10:09.367
We'll start on the custom
business logic layer.

00:10:09.434 --> 00:10:11.300
So you saw this yellow icon
appearing a bunch

00:10:11.367 --> 00:10:12.734
in that graphic.

00:10:12.801 --> 00:10:15.434
So that speaks to the power
and flexibility of Apps Script,

00:10:15.501 --> 00:10:17.501
and it's really lightweight
and easy to learn.

00:10:17.567 --> 00:10:20.033
I think it's one of the reasons
that we're seeing our partners

00:10:20.100 --> 00:10:21.367
gravitate toward it.

00:10:21.434 --> 00:10:25.000
So Apps Script is a
cloud-scripting framework,

00:10:25.067 --> 00:10:27.067
standard JavaScript,
executed on the server side.

00:10:27.133 --> 00:10:30.200
It provides the flexibility
to automate business logic

00:10:30.267 --> 00:10:33.167
and multi-step work flows
across products.

00:10:33.234 --> 00:10:35.667
So what can you do, briefly,
with Apps Script?

00:10:35.734 --> 00:10:38.734
Well first, you can host
custom logic, as I mentioned.

00:10:38.801 --> 00:10:40.434
If you can code something up
in JavaScript,

00:10:40.501 --> 00:10:42.734
then you're off
and running there.

00:10:42.801 --> 00:10:44.501
Next thing is, you want to be
able to trigger that logic,

00:10:44.567 --> 00:10:47.100
so you can create
custom user interface

00:10:47.167 --> 00:10:49.534
panels using Apps Script,
and then surface those panels

00:10:49.601 --> 00:10:51.367
through something
like Google Sites,

00:10:51.434 --> 00:10:52.934
one of the applications.

00:10:53.000 --> 00:10:55.534
And then from there,
capture user information

00:10:55.601 --> 00:10:58.968
and validate the user inputs
and so forth.

00:10:59.033 --> 00:11:00.234
Another thing you want
to be able to do

00:11:00.300 --> 00:11:03.200
is to modify and integrate
with Google Apps,

00:11:03.267 --> 00:11:06.033
and so with Apps Script, and
again these are JavaScript APIs,

00:11:06.100 --> 00:11:08.267
you can interact
with Google Sites,

00:11:08.334 --> 00:11:10.400
be able to create
sites and pages,

00:11:10.467 --> 00:11:12.601
Google Docs, be able to update
spreadsheet cells,

00:11:12.667 --> 00:11:14.701
update a user's
Google calendar,

00:11:14.767 --> 00:11:16.334
and so on and so forth.

00:11:16.400 --> 00:11:18.334
And then, this can also go
the other direction,

00:11:18.400 --> 00:11:22.667
so you can respond
to event triggers.

00:11:22.734 --> 00:11:24.133
So for example,
within a spreadsheet form,

00:11:24.200 --> 00:11:26.334
you can actually trigger
your Apps Script logic

00:11:26.400 --> 00:11:28.901
that way as well.

00:11:28.968 --> 00:11:31.000
And then, you also,
with Apps Script,

00:11:31.067 --> 00:11:32.701
you're able to interact
with Internet services

00:11:32.767 --> 00:11:33.934
outside of
the Google Apps realm,

00:11:34.000 --> 00:11:35.667
so be able to send HTTP
requests, and send email,

00:11:35.734 --> 00:11:38.334
make web service requests,
and so forth.

00:11:38.400 --> 00:11:39.834
So we'll look
at a couple examples,

00:11:39.901 --> 00:11:41.667
and then we'll look at
some of the other technologies.

00:11:41.734 --> 00:11:43.767
So Revevol is one of
our early Google Apps partners,

00:11:43.834 --> 00:11:45.968
and as they built up
their operation,

00:11:46.033 --> 00:11:49.167
they found that they were
providing this service

00:11:49.234 --> 00:11:52.400
of training customers,
and they wound up having to

00:11:52.467 --> 00:11:55.167
schedule a volume
of these training sessions.

00:11:55.234 --> 00:11:57.100
And each training session
would be in a specific location

00:11:57.167 --> 00:11:59.667
with a specific trainer,
and specific trainer skill sets,

00:11:59.734 --> 00:12:01.767
a language,
and a time and so forth.

00:12:01.834 --> 00:12:03.901
And so they put out a form
to capture this information,

00:12:03.968 --> 00:12:06.400
to capture requests from users,
but then what happened was

00:12:06.467 --> 00:12:08.501
they had to manually respond
to those form requests,

00:12:08.567 --> 00:12:13.334
and match up
and find trainers.

00:12:13.400 --> 00:12:14.634
So what they did was
they addressed this

00:12:14.701 --> 00:12:16.400
with Google Apps Script,
end to end.

00:12:16.467 --> 00:12:19.901
First they used the UI
component creation features

00:12:19.968 --> 00:12:22.467
to be able to create
a custom form, as we see here,

00:12:22.534 --> 00:12:25.267
actually surfaced
that in a Google site.

00:12:25.334 --> 00:12:28.133
But this form allows
a requester to go in

00:12:28.200 --> 00:12:30.534
and request a trainer.

00:12:30.601 --> 00:12:32.934
The Apps script is then behind
that "show trainers" button,

00:12:33.000 --> 00:12:34.300
and then what that does is
it does a look-up

00:12:34.367 --> 00:12:37.534
into a spreadsheet,
which effectively acts

00:12:37.601 --> 00:12:40.400
as a database of trainers.

00:12:40.467 --> 00:12:41.734
So you've got Apps Script
creating the UI,

00:12:41.801 --> 00:12:43.667
and doing the look-up.

00:12:43.734 --> 00:12:46.234
And then in response to that,
what they do is they show

00:12:46.300 --> 00:12:47.801
a list of results
on the left-hand side,

00:12:47.868 --> 00:12:50.634
an interactive list display,

00:12:50.701 --> 00:12:52.133
and because there's address
information in there,

00:12:52.200 --> 00:12:55.534
they're able to
also show that on a map,

00:12:55.601 --> 00:12:57.267
so both of these user
interface panels

00:12:57.334 --> 00:12:58.734
and the integration
with maps,

00:12:58.801 --> 00:13:00.968
all done using Apps Script.

00:13:01.033 --> 00:13:03.000
And then the user is
able to select a subset

00:13:03.067 --> 00:13:06.033
of those trainers
and send a proposal to them,

00:13:06.100 --> 00:13:10.133
and of course sending
a proposal, in this case,

00:13:10.200 --> 00:13:12.367
manifests itself
as adding an event

00:13:12.434 --> 00:13:15.200
to that trainer's
Google Calendar.

00:13:15.267 --> 00:13:17.634
So a really nice example tying
together multiple products,

00:13:17.701 --> 00:13:19.100
and all of the logic
and the work flow

00:13:19.167 --> 00:13:20.467
and the user interface
components behind this

00:13:20.534 --> 00:13:23.501
are all built using
Apps Script.

00:13:23.567 --> 00:13:26.133
Another example: Newmind Group
is another one of our partners,

00:13:26.200 --> 00:13:29.701
with Google Apps,
and they've seen success

00:13:29.767 --> 00:13:32.734
going vertical into
the construction industry.

00:13:32.801 --> 00:13:34.501
And one of the issues they have
in the construction industry

00:13:34.567 --> 00:13:37.701
is coordination between
subcontractors and contractors,

00:13:37.767 --> 00:13:42.100
and particularly, example
around coordinating deliveries.

00:13:42.167 --> 00:13:45.400
And of course, traditionally
this is done offline.

00:13:45.467 --> 00:13:48.267
So, Newmind decided to tackle
this with their client,

00:13:48.334 --> 00:13:49.801
Wadman Corporation.

00:13:49.868 --> 00:13:51.934
What they did was, again,
they created a custom form,

00:13:52.000 --> 00:13:54.000
which they actually created
Google sites

00:13:54.067 --> 00:13:56.400
for each of the construction
job projects,

00:13:56.467 --> 00:13:58.801
and then they pushed
this form out,

00:13:58.868 --> 00:14:00.501
and it allows the subcontractor
to go in there

00:14:00.567 --> 00:14:01.934
and submit a request.

00:14:02.000 --> 00:14:03.834
The form, the UI,
is powered by Apps Script,

00:14:03.901 --> 00:14:06.868
and then when you go ahead
and make a request,

00:14:06.934 --> 00:14:10.267
using more script,
it sends out notifications

00:14:10.334 --> 00:14:12.501
to the general contractor

00:14:12.567 --> 00:14:15.267
with a link back
to this approval queue,

00:14:15.334 --> 00:14:18.133
which is another custom UI
created using Script.

00:14:18.200 --> 00:14:19.968
The general contractor
comes in

00:14:20.033 --> 00:14:22.968
and is able to view
the deliveries,

00:14:23.033 --> 00:14:24.400
what's pending
and what's been approved,

00:14:24.467 --> 00:14:25.634
is able to modify
the request,

00:14:25.701 --> 00:14:29.100
and then go ahead
and approve the delivery.

00:14:29.167 --> 00:14:31.367
And again, there's Apps Script
behind this,

00:14:31.434 --> 00:14:32.634
and basically
once it approves,

00:14:32.701 --> 00:14:34.100
it sends notifications
in both directions,

00:14:34.167 --> 00:14:38.000
and then also updates
the shared delivery schedule.

00:14:38.067 --> 00:14:40.868
So another nice example
of Apps Script on the UI side,

00:14:40.934 --> 00:14:45.667
and of the logic behind it.

00:14:45.734 --> 00:14:48.667
Another example: Knowledge
and Innovation Networks.

00:14:48.734 --> 00:14:52.634
This is a member community
that uses Google Sites

00:14:52.701 --> 00:14:55.367
to share documents and share
event information amongst

00:14:55.434 --> 00:14:57.667
their member community,

00:14:57.734 --> 00:15:01.267
and they hold about 30 or 40
of these events per year.

00:15:01.334 --> 00:15:02.901
And so, what they had was--

00:15:02.968 --> 00:15:05.801
Phil Ridout
is a consultant for them,

00:15:05.868 --> 00:15:07.400
and he saw this
and decided,

00:15:07.467 --> 00:15:10.334
"There has to be a better way
of handling the event promotion

00:15:10.400 --> 00:15:11.601
and registration,
versus the manual,

00:15:11.667 --> 00:15:13.400
error-prone process
that they were using."

00:15:13.467 --> 00:15:14.534
And the interesting point here

00:15:14.601 --> 00:15:15.801
is that Phil had
no JavaScript experience,

00:15:15.868 --> 00:15:17.467
so he had to learn
everything on the fly,

00:15:17.534 --> 00:15:20.367
including
the base language.

00:15:20.434 --> 00:15:23.267
So what he did was he created
this spreadsheet template,

00:15:23.334 --> 00:15:24.968
which allows event organizers
to go in,

00:15:25.033 --> 00:15:27.334
and he was able to capture
event information

00:15:27.400 --> 00:15:29.367
in a structured way.

00:15:29.434 --> 00:15:32.334
And then, he added a custom
menu item on the spreadsheet.

00:15:32.400 --> 00:15:34.667
So this is powered
by Apps Script,

00:15:34.734 --> 00:15:36.501
so you can actually customize
and add menu items

00:15:36.567 --> 00:15:37.801
to a spreadsheet.

00:15:37.868 --> 00:15:39.868
And that menu item allows
an event organizer--

00:15:39.934 --> 00:15:42.067
again, in a standardized
way across events--

00:15:42.133 --> 00:15:44.033
to be able to take
the event information

00:15:44.100 --> 00:15:47.901
and create a brand new Google
Sites landing page

00:15:47.968 --> 00:15:49.567
for the event,
take the event information

00:15:49.634 --> 00:15:51.968
and push it
to an event calendar,

00:15:52.033 --> 00:15:56.634
and then push out to an
announcement feed for the event.

00:15:56.701 --> 00:15:59.434
And then he's able to handle
event confirmation emails,

00:15:59.501 --> 00:16:02.701
and event reminder emails,
and so forth.

00:16:02.767 --> 00:16:05.534
So, a really nice example,
and again, you know,

00:16:05.601 --> 00:16:09.834
this was Phil's starter project
to run JavaScript.

00:16:09.901 --> 00:16:11.868
Okay, so leaving Apps Script,
the other place that you can

00:16:11.934 --> 00:16:13.367
create custom logic
and host custom logic,

00:16:13.434 --> 00:16:16.000
of course,
is App Engine.

00:16:16.067 --> 00:16:19.667
So, App Engine is all about
fast and easy development

00:16:19.734 --> 00:16:22.767
and deployment of
web applications,

00:16:22.834 --> 00:16:24.167
simple administration.

00:16:24.234 --> 00:16:27.634
There are both Java and Python
run-time environments,

00:16:27.701 --> 00:16:29.334
which allows you as a developer
to take advantage

00:16:29.400 --> 00:16:32.234
of the common libraries
and tools and frameworks

00:16:32.300 --> 00:16:34.701
created for those environments.

00:16:34.767 --> 00:16:37.100
But then, and similar
to Apps Script,

00:16:37.167 --> 00:16:40.133
it allows you to leverage
Google accounts

00:16:40.200 --> 00:16:41.868
for authentication
and for authorization.

00:16:41.934 --> 00:16:44.968
So what you can do is you
can create your custom logic,

00:16:45.033 --> 00:16:47.801
your custom application;
you can restrict access

00:16:47.868 --> 00:16:51.367
to the individual users
or individual employees

00:16:51.434 --> 00:16:53.667
of a particular customer.

00:16:53.734 --> 00:16:55.534
And then, like Apps Script,
you can interact

00:16:55.601 --> 00:16:59.100
with web services and email
and HTTP requests and so forth.

00:16:59.167 --> 00:17:01.300
So developers typically
have a choice,

00:17:01.367 --> 00:17:05.601
and often you can use one
or the other of these tools.

00:17:05.667 --> 00:17:06.934
The way I look at it is,

00:17:07.000 --> 00:17:08.901
Apps Script is a little bit
more lightweight,

00:17:08.968 --> 00:17:11.200
and App Engine is a little bit
more flexible.

00:17:11.267 --> 00:17:14.033
So one example is, if you have
the need to create statefulness

00:17:14.100 --> 00:17:18.267
in your custom application, and
persist state across requests,

00:17:18.334 --> 00:17:20.400
App Engine or Persista,
in-memory caching

00:17:20.467 --> 00:17:22.033
and that kind of thing,
App Engine will give you

00:17:22.100 --> 00:17:24.467
a little bit more flexibility
there.

00:17:24.534 --> 00:17:27.067
So we'll talk about a simple
App Engine example in a second,

00:17:27.133 --> 00:17:29.634
but I want to flip up
to the UI layer,

00:17:29.701 --> 00:17:32.767
and at the UI kind of
building block layer,

00:17:32.834 --> 00:17:34.167
we have Google Web Toolkit.

00:17:34.234 --> 00:17:35.801
And Web Toolkit is an
open-source toolkit

00:17:35.868 --> 00:17:38.033
for building
web application UIs,

00:17:38.100 --> 00:17:41.033
and it's really optimized
for performance

00:17:41.100 --> 00:17:43.400
and for browser compatibility.

00:17:43.467 --> 00:17:44.567
And the interesting thing
here is,

00:17:44.634 --> 00:17:47.267
an increasing number
of Google properties

00:17:47.334 --> 00:17:48.567
are actually using
Web Toolkit.

00:17:48.634 --> 00:17:50.968
So, Google engineers are
using this, underlying,

00:17:51.033 --> 00:17:55.567
to be able to create
their own UIs.

00:17:55.634 --> 00:17:57.767
Now, I showed this
right after App Engine,

00:17:57.834 --> 00:17:59.901
because if you're using
the Java version of App Engine,

00:17:59.968 --> 00:18:01.834
this is a really
convenient tool,

00:18:01.901 --> 00:18:04.767
and a lot of our Enterprise
developers are skilled

00:18:04.834 --> 00:18:07.100
with Java,
but with Web Toolkit,

00:18:07.167 --> 00:18:08.267
what it allows you to do is

00:18:08.334 --> 00:18:10.534
you're actually developing
your UI in Java,

00:18:10.601 --> 00:18:13.434
and then compiling
that down to JavaScript.

00:18:13.501 --> 00:18:17.167
So the end distribution
is JavaScript in HTML,

00:18:17.234 --> 00:18:18.701
but the development
environment is Java,

00:18:18.767 --> 00:18:22.567
and there's actually a plug-in
for Eclipse that allows you

00:18:22.634 --> 00:18:27.701
to be able to develop your
client project in Web Toolkit,

00:18:27.767 --> 00:18:29.467
and then right alongside
your server,

00:18:29.534 --> 00:18:31.701
say, Google App Engine Java
project,

00:18:31.767 --> 00:18:33.667
and then be able to not only
have a nice, consistent

00:18:33.734 --> 00:18:36.267
development environment,
but also be able to debug,

00:18:36.334 --> 00:18:41.067
and it's a really neat way of
doing client server debugging.

00:18:41.133 --> 00:18:43.200
So, a simple example that ties
in both of those things,

00:18:43.267 --> 00:18:44.934
and this is something
that will be available

00:18:45.000 --> 00:18:49.701
to our Apps partners soon,
if any are in the room here.

00:18:49.767 --> 00:18:53.234
What we needed was
we needed to create effectively

00:18:53.300 --> 00:18:55.434
a mash-up that allowed
our Apps partners

00:18:55.501 --> 00:18:58.334
to be able to have an on-demand
ticket management system--

00:18:58.400 --> 00:19:01.234
so, allow them to see
and modify the tickets

00:19:01.300 --> 00:19:02.567
that they have
submitted to Google,

00:19:02.634 --> 00:19:04.334
support tickets that they have
submitted to Google,

00:19:04.400 --> 00:19:07.033
as well as the tickets
that their customers submitted

00:19:07.100 --> 00:19:08.434
directly to Google.

00:19:08.501 --> 00:19:13.334
This information was available
across different systems,

00:19:13.400 --> 00:19:14.667
and so we had to pull these
together,

00:19:14.734 --> 00:19:16.968
and so what we did was,
we created an App Engine app,

00:19:17.033 --> 00:19:21.167
with a Google Web Toolkit
user interface.

00:19:21.234 --> 00:19:23.801
And so, Google Web Toolkit
allows us to create a nice,

00:19:23.868 --> 00:19:27.133
custom user interface
to our own look and feel,

00:19:27.200 --> 00:19:29.934
with a nice Ajax
responsiveness.

00:19:30.000 --> 00:19:33.467
And then that calls down
into Google App Engine,

00:19:33.534 --> 00:19:35.767
which actually pulls the data
from multiple data sources,

00:19:35.834 --> 00:19:39.200
and creates the logic
to create the display.

00:19:39.267 --> 00:19:41.934
I mentioned this earlier, but
a nice, certainly, end use here,

00:19:42.000 --> 00:19:44.400
is we leveraged Google
for authentication

00:19:44.467 --> 00:19:46.667
and authorization;
we leveraged Google accounts.

00:19:46.734 --> 00:19:48.868
In this case, these are our
partners that are using this.

00:19:48.934 --> 00:19:50.467
They already have
Google Apps accounts,

00:19:50.534 --> 00:19:52.968
because they're using it to
manage their partner console,

00:19:53.033 --> 00:19:54.167
but if you think about it,

00:19:54.234 --> 00:19:55.701
any Google Apps customization
you do,

00:19:55.767 --> 00:19:56.968
if a customer is using
Google Apps,

00:19:57.033 --> 00:19:58.501
they're going to have
Google accounts,

00:19:58.567 --> 00:19:59.868
and you want to be able
to leverage that.

00:19:59.934 --> 00:20:01.267
You don't want to
have to force them

00:20:01.334 --> 00:20:03.334
to create a new username and
password for your custom logic.

00:20:03.400 --> 00:20:06.000
Really easy to do that
with App Engine.

00:20:06.067 --> 00:20:07.901
So, a nice example,
and it's a very typical example

00:20:07.968 --> 00:20:12.367
of Web Toolkit
on top of App Engine.

00:20:12.434 --> 00:20:14.300
Okay.

00:20:14.367 --> 00:20:17.868
Another option at
the UI layer is Gadgets.

00:20:17.934 --> 00:20:21.100
So Gadgets are custom HTML
or JavaScript components,

00:20:21.167 --> 00:20:24.334
supportable web applications
that you can then embed

00:20:24.400 --> 00:20:27.767
in various webpages
or in Google properties,

00:20:27.834 --> 00:20:30.367
Google properties
known as Gadget containers.

00:20:30.434 --> 00:20:32.734
So really, it is a way
in which you can customize

00:20:32.801 --> 00:20:36.300
the Google Apps UI
through these containers.

00:20:36.367 --> 00:20:37.701
So we'll talk about
a few of them.

00:20:37.767 --> 00:20:42.033
One of the gadget containers
is Gmail.

00:20:42.100 --> 00:20:44.334
So a couple different options
with Gmail,

00:20:44.400 --> 00:20:45.767
but one of the things
you can do, simply,

00:20:45.834 --> 00:20:50.834
is to have your customers
install a gadget into Gmail

00:20:50.901 --> 00:20:53.467
as a sidebar gadget,
and expose your custom HTML

00:20:53.534 --> 00:20:55.367
and JavaScript
right within the sidebar,

00:20:55.434 --> 00:20:58.501
the margin of Gmail,
which is really convenient,

00:20:58.567 --> 00:20:59.868
a convenient access point
for users

00:20:59.934 --> 00:21:02.934
who are in Gmail
all day long.

00:21:03.000 --> 00:21:04.334
But another,
more powerful example

00:21:04.400 --> 00:21:06.968
is Gmail contextual gadgets.

00:21:07.033 --> 00:21:08.300
So these are gadgets
that actually live

00:21:08.367 --> 00:21:10.667
within email itself,
within an email itself,

00:21:10.734 --> 00:21:13.868
and they're triggered to appear
based on clues from that email,

00:21:13.934 --> 00:21:15.968
so like, who the email is from,
who it's to,

00:21:16.033 --> 00:21:18.634
the content of the message,
and the subject, and so forth.

00:21:18.701 --> 00:21:20.467
And then the gadget within
the email can actually

00:21:20.534 --> 00:21:25.200
use those clues to provide
a custom interface display,

00:21:25.267 --> 00:21:27.167
custom logic,
and so forth.

00:21:27.234 --> 00:21:29.434
So really cool, and we have
to look at an example here.

00:21:29.501 --> 00:21:31.634
So, Appirio is another
one of our Apps partners,

00:21:31.701 --> 00:21:34.300
and they're also
a salesforce.com partner.

00:21:34.367 --> 00:21:35.901
So what they noticed
with Salesforce,

00:21:35.968 --> 00:21:37.734
with Salesforce CRM,
is that it's really great

00:21:37.801 --> 00:21:39.567
for allowing sales reps
to manage

00:21:39.634 --> 00:21:42.167
their customer information,

00:21:42.234 --> 00:21:44.601
but those same sales reps
are also using Google Apps,

00:21:44.667 --> 00:21:45.701
and they tend to spend
a lot of their time

00:21:45.767 --> 00:21:47.400
in Google Apps
and in Gmail.

00:21:47.467 --> 00:21:50.400
And so they wanted a way to
bring these experiences together

00:21:50.467 --> 00:21:54.934
in such a way to accelerate
decision making, and so forth.

00:21:55.000 --> 00:21:57.133
And so, what they did was
they created this tool set

00:21:57.200 --> 00:21:58.734
called Cloud Works,
which is really meant

00:21:58.801 --> 00:22:01.000
to facilitate common
interactions

00:22:01.067 --> 00:22:03.000
between applications.

00:22:03.067 --> 00:22:04.400
And what we're looking at here,
one of the fruits of this,

00:22:04.467 --> 00:22:07.234
is this Gmail contextual gadget
that we're looking at,

00:22:07.300 --> 00:22:09.868
so this is a Gmail interface
that we're looking at.

00:22:09.934 --> 00:22:12.300
On the top half of the screen
is an email that came in,

00:22:12.367 --> 00:22:15.467
and then at the bottom half
here is this contextual gadget

00:22:15.534 --> 00:22:17.901
that is surfaced
by Cloud Works,

00:22:17.968 --> 00:22:19.501
and what it's doing
is it's looking at--

00:22:19.567 --> 00:22:22.667
it appears because of some rule
that was embedded around

00:22:22.734 --> 00:22:24.534
who the email was to
and who it was from--

00:22:24.601 --> 00:22:27.100
and what it does is it actually
looks into sales calls out

00:22:27.167 --> 00:22:28.601
and looks into
Salesforce CRM,

00:22:28.667 --> 00:22:30.701
and then pulls appropriate
accounts and opportunities

00:22:30.767 --> 00:22:32.801
and contacts and so forth,
surfaces that information

00:22:32.868 --> 00:22:34.334
right within the email,

00:22:34.400 --> 00:22:35.801
and then not only
allows the user

00:22:35.868 --> 00:22:37.100
to see that information
conveniently,

00:22:37.167 --> 00:22:39.367
but also allows them to go ahead
and take action

00:22:39.434 --> 00:22:42.200
right within the email.

00:22:42.267 --> 00:22:46.901
And it's amazing to what degree
this can speed up productivity.

00:22:46.968 --> 00:22:48.767
Really nice way to streamline
business processes

00:22:48.834 --> 00:22:52.234
and help people
get things done.

00:22:52.300 --> 00:22:53.701
So, other types of
gadget containers:

00:22:53.767 --> 00:22:55.200
Google Calendar,
similar to Gmail.

00:22:55.267 --> 00:22:58.367
You can have sidebar gadgets,
and you can surface

00:22:58.434 --> 00:22:59.968
your custom functionality
right there,

00:23:00.033 --> 00:23:04.467
particularly functionality
that's temporarily relevant.

00:23:04.534 --> 00:23:06.767
But then also, with Calendar,
you can have event gadgets.

00:23:06.834 --> 00:23:10.334
So these are gadgets that are
tied to a particular date,

00:23:10.400 --> 00:23:13.100
and so you can think of them
as custom events,

00:23:13.167 --> 00:23:14.367
essentially, for
a user's calendar.

00:23:14.434 --> 00:23:16.834
And so an example here is
that you can integrate

00:23:16.901 --> 00:23:19.367
a user's calendar, with, say
a travel reservations system,

00:23:19.434 --> 00:23:22.434
and say that the user goes
and creates a reservation

00:23:22.501 --> 00:23:26.267
on that system,
their flight times and so forth

00:23:26.334 --> 00:23:29.501
show up as events
on their calendar.

00:23:29.567 --> 00:23:30.834
Another example
is Google Sites.

00:23:30.901 --> 00:23:32.434
A lot of the examples
I talked about earlier

00:23:32.501 --> 00:23:34.567
on Apps Script was
actually using Google Sites.

00:23:34.634 --> 00:23:37.434
Google Sites is this
collaboration umbrella.

00:23:37.501 --> 00:23:39.634
It's a really popular place
to surface user

00:23:39.701 --> 00:23:42.200
interface components
for multiple systems,

00:23:42.267 --> 00:23:43.501
creating dashboards
and so forth.

00:23:43.567 --> 00:23:46.033
And so we saw some examples
where Apps Script forms

00:23:46.100 --> 00:23:47.701
are surfaced through
Google Sites.

00:23:47.767 --> 00:23:51.734
That was using the Sites Gadgets
framework.

00:23:51.801 --> 00:23:53.601
And then, Google Docs is another
interesting piece,

00:23:53.667 --> 00:23:55.467
so this is--particularly
Google Spreadsheets.

00:23:55.534 --> 00:23:57.234
This actually goes
the other direction,

00:23:57.300 --> 00:23:59.734
so you can actually use
a spreadsheet as a data source,

00:23:59.801 --> 00:24:01.868
to populate a gadget,
and then that gadget

00:24:01.934 --> 00:24:04.567
becomes a custom visualization
of that data.

00:24:04.634 --> 00:24:06.534
And then, you can take
that custom visualization,

00:24:06.601 --> 00:24:10.334
and export that out to other
websites and properties.

00:24:10.400 --> 00:24:11.734
So, a simple example here is,

00:24:11.801 --> 00:24:13.868
let's say you have a spreadsheet
of addresses.

00:24:13.934 --> 00:24:15.267
You create a custom
visualization,

00:24:15.334 --> 00:24:18.200
which is essentially a mapping
view of those addresses,

00:24:18.267 --> 00:24:20.267
and then you take that map
and you put it on your website,

00:24:20.334 --> 00:24:26.667
and now you have a simple
store locator, for example.

00:24:26.734 --> 00:24:28.868
Okay, so last thing
we'll look at.

00:24:28.934 --> 00:24:30.234
How are we doing on time?

00:24:30.300 --> 00:24:31.634
Last thing we'll look at is
the ability to modify

00:24:31.701 --> 00:24:33.300
Google Apps
business objects.

00:24:33.367 --> 00:24:35.334
We talked about Google Apps
script quite a bit here,

00:24:35.400 --> 00:24:38.734
the ability to add events to
a user's Calendar for example,

00:24:38.801 --> 00:24:41.901
but I wanted to touch
on the Google data APIs.

00:24:41.968 --> 00:24:43.901
So Google Data APIs
are rest-based APIs

00:24:43.968 --> 00:24:47.400
for reading and writing data,
stored by Google Apps.

00:24:47.467 --> 00:24:51.434
It's XML sent over HTTP
using common HTTP methods

00:24:51.501 --> 00:24:53.133
like "get" and "post".

00:24:53.200 --> 00:24:55.033
But then, that's at
the protocol layer,

00:24:55.100 --> 00:24:58.300
but then there are
various client libraries

00:24:58.367 --> 00:24:59.734
that are built above that
in various languages

00:24:59.801 --> 00:25:03.434
to allow users to use these
more conveniently.

00:25:03.501 --> 00:25:05.200
There are dozens of
Google Data APIs,

00:25:05.267 --> 00:25:07.801
but specifically relating
to Google Apps,

00:25:07.868 --> 00:25:09.901
there's more or less
Data APIs associated

00:25:09.968 --> 00:25:12.501
with each of the applications
at the application layer,

00:25:12.567 --> 00:25:15.267
so allowing users to create
documents programatically,

00:25:15.334 --> 00:25:20.834
to create sites and site pages,
to read and write to cells

00:25:20.901 --> 00:25:22.234
on a Google spreadsheet,

00:25:22.300 --> 00:25:24.767
to add to a Google user's
calendar,

00:25:24.834 --> 00:25:27.200
or update a user's contact list
and so forth.

00:25:27.267 --> 00:25:28.534
And then at the administrative
layer,

00:25:28.601 --> 00:25:32.267
there's a set of options there,

00:25:32.334 --> 00:25:33.534
including being able
to create users,

00:25:33.601 --> 00:25:35.133
to be able to do
usage reporting,

00:25:35.200 --> 00:25:38.567
and things like that.

00:25:38.634 --> 00:25:42.167
Okay, so a quick example here
now, of the Google Data APIs,

00:25:42.234 --> 00:25:43.968
particular the Google
Spreadsheets API--

00:25:44.033 --> 00:25:46.200
and this will actually also
touch on Google Web Toolkit

00:25:46.267 --> 00:25:48.601
and Google App Engine as well.

00:25:48.667 --> 00:25:50.167
So again, internally
within Google,

00:25:50.234 --> 00:25:53.367
we had this need to create
ad hoc performance reports.

00:25:53.434 --> 00:25:55.234
So reporting on
partner performance,

00:25:55.300 --> 00:25:57.267
or product performance,
or our, like,

00:25:57.334 --> 00:25:59.033
marketing campaign
performance,

00:25:59.100 --> 00:26:00.934
and so we needed to create
and run these reports,

00:26:01.000 --> 00:26:03.868
and then we need to analyze
the data in interesting ways,

00:26:03.934 --> 00:26:06.868
including maybe being analyzed
by multiple people.

00:26:06.934 --> 00:26:10.000
And so what we did was,
first we used Google Web Toolkit

00:26:10.067 --> 00:26:12.033
to create this ad hoc
report-builder interface,

00:26:12.100 --> 00:26:13.934
where you can pull the different
fields you want to see,

00:26:14.000 --> 00:26:15.634
and the constraints,
and the format you want to see

00:26:15.701 --> 00:26:18.567
the result in, and so forth
in Google Web Toolkit.

00:26:18.634 --> 00:26:22.067
Then, that calls down into
an App Engine module,

00:26:22.133 --> 00:26:24.467
which then calls out into
the various data sources--

00:26:24.534 --> 00:26:26.834
Cloud non-premise data sources--
to pull in the data

00:26:26.901 --> 00:26:28.601
and then share it
and actually do the work

00:26:28.667 --> 00:26:30.534
of generating the report.

00:26:30.601 --> 00:26:33.334
But then, the key part is then,
from there, what that does

00:26:33.400 --> 00:26:34.567
is that it pushes
that report data

00:26:34.634 --> 00:26:36.133
out to a Google spreadsheet,
and this is where

00:26:36.200 --> 00:26:38.934
the Google Spreadsheets Data API
comes in.

00:26:39.000 --> 00:26:41.100
And the reason why we do that
is because now the end user

00:26:41.167 --> 00:26:43.834
can use a spreadsheet
to view the results,

00:26:43.901 --> 00:26:46.267
and take advantage of
all the built-in features

00:26:46.334 --> 00:26:47.634
and functions
of Google Spreadsheets,

00:26:47.701 --> 00:26:50.868
particularly
the rich visualization tools,

00:26:50.934 --> 00:26:53.167
charts and gadgets
and so forth,

00:26:53.234 --> 00:26:55.601
as well as the sharing model,
the access control model,

00:26:55.667 --> 00:26:57.968
to be able to share this
report data, you know,

00:26:58.033 --> 00:26:59.367
amongst users.

00:26:59.434 --> 00:27:00.868
So it's a nice way of tying
these things together

00:27:00.934 --> 00:27:04.968
and a really nice way
of not reinventing the wheel.

00:27:05.033 --> 00:27:07.934
Okay, so, with that, what
I'm going to do is pass

00:27:08.000 --> 00:27:10.734
it over to David Hoff
from Cloud Sherpas,

00:27:10.801 --> 00:27:13.367
and David's going to go
into a little bit more depth

00:27:13.434 --> 00:27:19.200
on an example, customer scenario
that Cloud Sherpas recently had.

00:27:19.267 --> 00:27:20.501
David:
Thank you, Jeff.

00:27:20.567 --> 00:27:22.501
Jeff: Sure.
David: I will wait here.

00:27:22.567 --> 00:27:24.334
As Jeff mentioned,
I want to give you

00:27:24.400 --> 00:27:29.000
just a very, very brief
introduction into Cloud Sherpas,

00:27:29.067 --> 00:27:33.000
so you can understand
the context of our discussion.

00:27:33.067 --> 00:27:34.133
I think Jeff pointed out

00:27:34.200 --> 00:27:36.100
that there were
kind of three categories:

00:27:36.167 --> 00:27:38.767
the MSP,
the ISV, and the SI.

00:27:38.834 --> 00:27:42.234
And, Cloud Sherpas
was founded by myself

00:27:42.300 --> 00:27:45.133
and a few other partners
about three years ago,

00:27:45.200 --> 00:27:47.200
focused on
exactly this trifecta,

00:27:47.267 --> 00:27:51.133
so, the ability to provide
managed services,

00:27:51.200 --> 00:27:55.634
the ability to build custom
extensions to those services,

00:27:55.701 --> 00:28:00.200
and the ability to deploy
everything seamlessly

00:28:00.267 --> 00:28:01.701
in an enterprise.

00:28:01.767 --> 00:28:05.300
So, what we wanted to do today
is talk a little bit

00:28:05.367 --> 00:28:09.167
about a project that we started
about a year ago

00:28:09.234 --> 00:28:12.200
for an organization
called CHEP.

00:28:12.267 --> 00:28:15.801
And CHEP is a multinational
organization

00:28:15.868 --> 00:28:19.300
with roughly around
10,000 users.

00:28:19.367 --> 00:28:23.300
And they came to us as part
of their Google Apps deployment

00:28:23.367 --> 00:28:27.167
and said, "We have
some large challenges

00:28:27.234 --> 00:28:30.133
in regards to a share-point
deployment.

00:28:30.200 --> 00:28:33.133
We have multiple
disparate technologies

00:28:33.200 --> 00:28:35.968
that are scattered
all over the enterprise."

00:28:36.033 --> 00:28:38.634
And these are all typical
on-premise technologies

00:28:38.701 --> 00:28:41.901
that took a great deal
of investment to deploy,

00:28:41.968 --> 00:28:45.968
but because of the local
nature of each of them,

00:28:46.033 --> 00:28:48.567
they didn't effectively reach
the entire organization

00:28:48.634 --> 00:28:50.501
as a whole.

00:28:50.567 --> 00:28:52.234
So you can see,
I've got up here:

00:28:52.300 --> 00:28:56.100
They had pockets of open text,
they had pockets of share point,

00:28:56.167 --> 00:28:58.968
and they even had
localized file servers.

00:28:59.033 --> 00:29:01.934
So this is one area where,
Jeff, where we can plus one

00:29:02.000 --> 00:29:04.901
a little bit to say,
you also have the opportunity

00:29:04.968 --> 00:29:07.801
to integrate things like
the Google search appliance.

00:29:07.868 --> 00:29:10.601
So this is another great tool
that is in kind of

00:29:10.667 --> 00:29:13.834
your developer's toolbox
of things

00:29:13.901 --> 00:29:17.434
that can help solve problems.

00:29:17.501 --> 00:29:21.801
Ultimately, the discussions
that we had

00:29:21.868 --> 00:29:25.400
centered around these
four or five key issues.

00:29:25.467 --> 00:29:29.534
There was a significant mismatch
between the tools

00:29:29.601 --> 00:29:32.767
that were available
and the information

00:29:32.834 --> 00:29:36.200
that the users could access.

00:29:36.267 --> 00:29:40.234
So IT was needed for very
simple, simple requests.

00:29:40.300 --> 00:29:41.601
If you're on Google Apps,

00:29:41.667 --> 00:29:43.367
you're already comfortable
with the fact

00:29:43.434 --> 00:29:46.434
that you can go out and
within a click or two,

00:29:46.501 --> 00:29:48.601
you can create
a Google site.

00:29:48.667 --> 00:29:49.868
Within their organization,

00:29:49.934 --> 00:29:52.300
this was roughly
a two-week process,

00:29:52.367 --> 00:29:55.601
and it had to go in front
of a governance board

00:29:55.667 --> 00:29:58.400
that consisted of people
in different geographies,

00:29:58.467 --> 00:30:01.834
and it really slowed down
the process

00:30:01.901 --> 00:30:05.767
of disseminating information
in the organization.

00:30:05.834 --> 00:30:08.033
In addition
because of this scale,

00:30:08.100 --> 00:30:10.667
it made the information
become outdated.

00:30:10.734 --> 00:30:14.133
So it was complex,
it was unattended over time,

00:30:14.200 --> 00:30:19.267
and one of our applications
directors there at CHEP,

00:30:19.334 --> 00:30:21.400
had this quote:
"It was like a large building

00:30:21.467 --> 00:30:23.534
with no residents."

00:30:23.601 --> 00:30:27.701
And so, we met with them
and we talked about

00:30:27.767 --> 00:30:31.133
what their vision
for the Internet was,

00:30:31.200 --> 00:30:32.834
and this was the slide

00:30:32.901 --> 00:30:36.634
that we all kind of
ultimately agreed upon,

00:30:36.701 --> 00:30:38.734
and it was founded
out of two things.

00:30:38.801 --> 00:30:42.133
It was founded out of a vision
of what they wanted

00:30:42.200 --> 00:30:44.634
to see in their intranet,

00:30:44.701 --> 00:30:48.067
but it was also governed by the
reality of what was happening

00:30:48.133 --> 00:30:51.234
within their organization.

00:30:51.300 --> 00:30:55.033
So what I mean by that is they
had found their users

00:30:55.100 --> 00:30:59.667
were already using Google Docs
and using Google Sites.

00:30:59.734 --> 00:31:03.601
These were tools that their
end users had picked up

00:31:03.667 --> 00:31:06.801
on their own
and found so valuable

00:31:06.868 --> 00:31:11.067
that they had gone outside
the scope of the IT department,

00:31:11.133 --> 00:31:14.133
so IT had to recognize this,
and figure out a way--

00:31:14.200 --> 00:31:18.868
how do we incorporate
all of these collaborative tools

00:31:18.934 --> 00:31:21.300
in a way that we feel
comfortable managing it

00:31:21.367 --> 00:31:24.067
from an information
technology perspective.

00:31:24.133 --> 00:31:26.534
So again, if we started
at the bottom of the pyramid,

00:31:26.601 --> 00:31:28.968
that's where Google Docs
comes in.

00:31:29.067 --> 00:31:31.868
Anybody can go out
and create Google Docs.

00:31:31.934 --> 00:31:34.567
You don't necessarily have
to be a part of Google Apps.

00:31:34.634 --> 00:31:37.901
And this is a great entrance
into the technology.

00:31:37.968 --> 00:31:40.167
When we go live
with Google Apps,

00:31:40.234 --> 00:31:43.901
we now have the ability to bring
all of that under one umbrella.

00:31:43.968 --> 00:31:47.300
So it's all within
Google Apps,

00:31:47.367 --> 00:31:50.434
and we get extended
functionality with Google Sites.

00:31:50.501 --> 00:31:53.968
So that's kind of the
second tier from the bottom,

00:31:54.033 --> 00:31:57.100
where we've now introduced
this capability to our users,

00:31:57.167 --> 00:31:59.968
to be able to go out
and create Google sites,

00:32:00.033 --> 00:32:04.267
with just a click or two,
and this produced a challenge

00:32:04.334 --> 00:32:06.667
for their IT organization.

00:32:06.734 --> 00:32:08.567
You know, a group
that was comfortable

00:32:08.634 --> 00:32:12.934
and in control because
they could approve and deny

00:32:13.000 --> 00:32:17.467
the ability to create sites,
has now kind of lost that.

00:32:17.534 --> 00:32:19.968
So during our discussions,
we had to back up a little bit

00:32:20.033 --> 00:32:23.000
and we had to say, "Why do you
want to control these sites?

00:32:23.067 --> 00:32:27.400
What is the business rationale
that makes it valuable for you

00:32:27.467 --> 00:32:30.367
to be able to have control
over these sites?"

00:32:30.434 --> 00:32:34.000
And as we kind of peeled back
some of the layers of the onion,

00:32:34.067 --> 00:32:36.367
it was more a concern
that we don't want people

00:32:36.434 --> 00:32:39.501
creating sites and sharing them
externally.

00:32:39.567 --> 00:32:42.601
We want to have some control
over the public image,

00:32:42.667 --> 00:32:45.434
and the reality is, we really
don't need to get involved,

00:32:45.501 --> 00:32:46.667
from an IT perspective,

00:32:46.734 --> 00:32:49.067
in the internal creation
of content.

00:32:49.133 --> 00:32:51.300
So you can see about
midway up in the pyramid,

00:32:51.367 --> 00:32:53.701
we start to have a break.

00:32:53.767 --> 00:32:56.334
And then this is where
the IT department

00:32:56.400 --> 00:32:59.267
and the governance committee
start to have control

00:32:59.334 --> 00:33:00.968
over the content.

00:33:01.033 --> 00:33:02.534
So at the very top,
we have things

00:33:02.601 --> 00:33:04.801
like the corporate intranet.

00:33:04.868 --> 00:33:07.267
We wanted to have
a more structured process

00:33:07.334 --> 00:33:10.434
within this content,
so that it's audited,

00:33:10.501 --> 00:33:12.467
so that it's logged,
so that it's reviewed

00:33:12.534 --> 00:33:15.133
by multiple people before,
you know, someone goes out

00:33:15.200 --> 00:33:17.067
and posts,
"Hey, today's a holiday.

00:33:17.133 --> 00:33:19.901
Everybody take the day off."

00:33:19.968 --> 00:33:24.767
So this was the vision,
and this was the result.

00:33:24.834 --> 00:33:28.567
So, you guys think this is
a good-looking Google site?

00:33:28.634 --> 00:33:31.667
Clap if you want.

00:33:31.734 --> 00:33:33.133
I personally love it.

00:33:33.200 --> 00:33:35.767
I think this is a beautiful
example of what you can do

00:33:35.834 --> 00:33:37.267
with Google Sites.

00:33:37.334 --> 00:33:40.734
So often, people get kind of
in the daily grind

00:33:40.801 --> 00:33:44.200
of just creating a site
and not building a template,

00:33:44.267 --> 00:33:46.834
and they wind up
with the left-hand nav,

00:33:46.901 --> 00:33:50.400
and it just has
a very common flavor to it.

00:33:50.467 --> 00:33:52.634
What we set out to do here
was build something

00:33:52.701 --> 00:33:55.667
that not only was
very, very useful,

00:33:55.734 --> 00:33:58.567
but it was also
very visually appealing,

00:33:58.634 --> 00:34:01.934
and if you were to see
this actually live,

00:34:02.000 --> 00:34:05.934
you would see that there are
animations going on,

00:34:06.000 --> 00:34:09.167
there is an embedded MP3

00:34:09.234 --> 00:34:13.901
that gives you a verbal
walk-through of the intranet.

00:34:13.968 --> 00:34:17.300
You would see that we have got
actionable quick links

00:34:17.367 --> 00:34:20.234
that are in that little
drop-down menu.

00:34:20.300 --> 00:34:22.000
The name of their intranet
is Walter,

00:34:22.067 --> 00:34:24.200
so they gave it
a little personalization.

00:34:24.267 --> 00:34:26.601
And again, this is
another opportunity for you

00:34:26.667 --> 00:34:29.934
as application developers
to get involved

00:34:30.000 --> 00:34:33.567
and bring some new I-skills
to make something

00:34:33.634 --> 00:34:36.367
that is very visually
attractive.

00:34:36.434 --> 00:34:38.767
What we're going to do from here
is we're going to dig in

00:34:38.834 --> 00:34:42.934
to some of the content elements
that build up this page,

00:34:43.000 --> 00:34:45.868
some of the gadgets.

00:34:45.934 --> 00:34:49.634
So we kind of came up with
this idea of managed gadgets.

00:34:49.701 --> 00:34:50.868
How many of you guys
in the room

00:34:50.934 --> 00:34:53.100
could write
a piece of JavaScript

00:34:53.167 --> 00:34:57.033
that said "Hello, world"?
Okay.

00:34:57.100 --> 00:34:58.367
So everybody look around
at the folks

00:34:58.434 --> 00:34:59.767
that have their hands up.

00:34:59.834 --> 00:35:02.267
These are the people that can
build you custom gadgets.

00:35:02.334 --> 00:35:04.434
If you can write "Hello, world"
in JavaScript,

00:35:04.501 --> 00:35:06.934
that's all you need to know
how to do.

00:35:07.000 --> 00:35:10.934
And the great thing about that
is, gadgets are what give you

00:35:11.000 --> 00:35:15.534
the capability to build
dynamic content in Google Sites.

00:35:15.601 --> 00:35:18.000
It's part of the security
infrastructure

00:35:18.067 --> 00:35:20.701
that you can't just go
embedding dynamic stuff

00:35:20.767 --> 00:35:23.701
in the regular HTML
of the Google site.

00:35:23.767 --> 00:35:25.400
Gadgets gives you
that capability

00:35:25.467 --> 00:35:27.734
and that flexibility.

00:35:27.801 --> 00:35:30.834
What's also nice about Gadgets
is they're centrally controlled

00:35:30.901 --> 00:35:32.868
and centrally managed.

00:35:32.934 --> 00:35:34.567
So when you work
with an organization

00:35:34.634 --> 00:35:37.801
and they say, perhaps,
"I don't want to see

00:35:37.868 --> 00:35:42.901
a particular gadget available
to my users," right?

00:35:42.968 --> 00:35:44.033
In a Google Apps environment,

00:35:44.100 --> 00:35:47.434
we can go turn those gadgets
on and off.

00:35:47.501 --> 00:35:49.267
Furthermore, we can
start to create things

00:35:49.334 --> 00:35:51.501
like private gadgets.

00:35:51.567 --> 00:35:54.834
Let's say you have a gadget
that's an SAP orders fee.

00:35:54.901 --> 00:35:56.567
You want to be able
to take that gadget

00:35:56.634 --> 00:35:59.934
and you want to expose it
to your users.

00:36:00.000 --> 00:36:02.367
This now becomes
kind of a managed gadget

00:36:02.434 --> 00:36:06.434
within your organization
that takes all the complexity

00:36:06.501 --> 00:36:10.901
out of building you know
an SAP portlet if you will,

00:36:10.968 --> 00:36:12.567
and puts it
right into the power

00:36:12.634 --> 00:36:16.267
and right into the hands
of an end user.

00:36:16.334 --> 00:36:20.667
So the centrally managed feature
is a huge value,

00:36:20.734 --> 00:36:23.934
and really what that provides
is consistent content.

00:36:24.000 --> 00:36:27.000
So if you've ever tried to build
a large-scale

00:36:27.067 --> 00:36:28.934
Google Sites project,

00:36:29.000 --> 00:36:31.367
you'll notice that that can be
a bit of a challenge,

00:36:31.434 --> 00:36:34.567
to have one piece of content
that is presented

00:36:34.634 --> 00:36:36.968
in multiple Google sites.

00:36:37.033 --> 00:36:41.200
And that's the ideal situation
to use a Google gadget.

00:36:41.267 --> 00:36:44.267
So, if we go out
and we create one gadget,

00:36:44.334 --> 00:36:47.400
we can publish that
in multiple sites,

00:36:47.467 --> 00:36:50.767
and then a single update
to the source of that gadget

00:36:50.834 --> 00:36:52.567
is now automatically
disseminated

00:36:52.634 --> 00:36:59.901
into all the various places
that are consuming that content.

00:36:59.968 --> 00:37:01.167
So I'm going to zoom in
a little bit.

00:37:01.234 --> 00:37:05.534
This is the top half
of the intranet page

00:37:05.601 --> 00:37:07.033
that you were looking at,

00:37:07.100 --> 00:37:09.467
and we're going to dissect it
a little bit.

00:37:09.534 --> 00:37:10.767
We can see,
I mentioned

00:37:10.834 --> 00:37:13.501
that there was
an embedded audio file.

00:37:13.567 --> 00:37:16.400
So in the upper left corner,
we see Walter.

00:37:16.467 --> 00:37:19.334
There is actually an embedded
audio player

00:37:19.400 --> 00:37:21.767
that's available
to the user.

00:37:21.834 --> 00:37:25.100
Right below that,
there's the quick links,

00:37:25.167 --> 00:37:28.801
and again this is something
that is managed centrally,

00:37:28.868 --> 00:37:31.234
so if they want to update
a quick link

00:37:31.300 --> 00:37:34.234
into any of the applications
that are using it,

00:37:34.300 --> 00:37:38.434
it's going to get published
out to all those sites.

00:37:38.501 --> 00:37:41.267
On the "Jim Ritchie's Blog"
corner,

00:37:41.334 --> 00:37:42.767
this is a flash animation.

00:37:42.834 --> 00:37:47.334
You might notice the series of,
I think, five green boxes.

00:37:47.400 --> 00:37:49.467
It scrolls
from left to right

00:37:49.534 --> 00:37:52.000
with rotating banner
announcements through it,

00:37:52.067 --> 00:37:55.067
promoting different things
within the organization.

00:37:55.133 --> 00:37:57.567
So again, this is just
another gadget.

00:37:57.634 --> 00:37:59.367
In this case,
it's a very simple gadget

00:37:59.434 --> 00:38:01.634
that is really
just an I-frame.

00:38:01.701 --> 00:38:04.868
It allows you to bring in
some rich visual content

00:38:04.934 --> 00:38:07.100
into the homepage.

00:38:07.167 --> 00:38:10.601
A little further down,
we have breaking news,

00:38:10.667 --> 00:38:14.367
and again, this is another
great way to use gadgets.

00:38:14.434 --> 00:38:16.300
We publish multiple feeds,

00:38:16.367 --> 00:38:18.334
so feeds that are
contextually relevant

00:38:18.400 --> 00:38:21.334
to different individuals
within the organization.

00:38:21.400 --> 00:38:24.567
So let's say that I work
in a plant in Sydney,

00:38:24.634 --> 00:38:26.968
and it's a manufacturing
plant.

00:38:27.033 --> 00:38:30.000
I could have news
that is tailored to me,

00:38:30.067 --> 00:38:31.300
versus if I'm a truck driver

00:38:31.367 --> 00:38:34.701
and I work for one of the plants
in the Americas.

00:38:34.767 --> 00:38:38.334
So, again, a gadget is
a great consumer of that feed.

00:38:38.400 --> 00:38:40.267
The last one on the top half
of that page

00:38:40.334 --> 00:38:41.767
is called People Search,

00:38:41.834 --> 00:38:44.300
and we're going to dig a little
further into that gadget

00:38:44.367 --> 00:38:47.467
and kind of how it works.

00:38:47.534 --> 00:38:50.033
So if you were to look
at that same exact page

00:38:50.100 --> 00:38:52.601
that we just looked
at above the fold,

00:38:52.667 --> 00:38:55.601
this is what happens if you
throw that same Google site page

00:38:55.667 --> 00:38:57.167
into edit mode.

00:38:57.234 --> 00:38:58.601
All you see are gadgets.

00:38:58.667 --> 00:39:02.400
You see, I think there's
two hard-coded links at the top.

00:39:02.467 --> 00:39:05.734
One is to edit
your profile information,

00:39:05.801 --> 00:39:09.033
and the other is to switch to
one of the sister companies'

00:39:09.100 --> 00:39:12.801
intranets, but everything else
on this page is dynamic.

00:39:12.868 --> 00:39:16.667
So you can see the logo gadget
that we've got there.

00:39:16.734 --> 00:39:20.801
Again, a great capability
to reuse content.

00:39:20.868 --> 00:39:24.067
We've got the quick links gadget
that I mentioned

00:39:24.133 --> 00:39:27.968
that allows you to publish URLs,
you know,

00:39:28.033 --> 00:39:31.100
consistently from
a central console.

00:39:31.167 --> 00:39:33.167
The news and the video,

00:39:33.234 --> 00:39:37.501
and then finally down in the
lower right, the People Search.

00:39:37.567 --> 00:39:40.133
And I'm just going to advance
a little bit

00:39:40.200 --> 00:39:44.767
and step into People Search.

00:39:44.834 --> 00:39:47.033
This is, again, one of many
of the components

00:39:47.100 --> 00:39:51.634
that builds out the intranet,
and at Cloud Sherpas,

00:39:51.701 --> 00:39:55.801
we're a pure-play Google shop,
so pretty much everything we do

00:39:55.868 --> 00:39:59.133
is using a Google technology,
and I think People Search

00:39:59.200 --> 00:40:02.033
touches on just about
every one of them.

00:40:02.100 --> 00:40:08.934
So, People Search is actually
a Google App Engine application.

00:40:09.000 --> 00:40:13.267
And for the user interface,
it uses GWT.

00:40:13.334 --> 00:40:15.701
This is again,
as Jeff was mentioning,

00:40:15.767 --> 00:40:18.634
a great user interface
technology

00:40:18.701 --> 00:40:21.400
that gives you a lot
of flexibility in presentation

00:40:21.467 --> 00:40:25.167
between, you know, a browser
and a mobile device.

00:40:25.234 --> 00:40:27.834
The great part about all this
is that it's reusable,

00:40:27.901 --> 00:40:31.033
so you saw the one screen shot
of it,

00:40:31.100 --> 00:40:33.267
there in the homepage
of the intranet,

00:40:33.334 --> 00:40:35.601
but it's also used
in other places

00:40:35.667 --> 00:40:38.133
within individual Google sites,

00:40:38.200 --> 00:40:42.267
regional sites,
and departmental sites.

00:40:42.334 --> 00:40:45.234
The one area that CHEP came back
and they said,

00:40:45.300 --> 00:40:49.534
"We want a very, very robust
search infrastructure."

00:40:49.601 --> 00:40:54.334
And as you know, search comes
as part of Google Sites,

00:40:54.400 --> 00:40:56.701
but the challenge there
was a little bigger.

00:40:56.767 --> 00:41:00.067
In addition to migrating content
out of their other repositories

00:41:00.133 --> 00:41:03.567
into Google Sites,
we also had the challenge

00:41:03.634 --> 00:41:07.434
of their local file systems,
and this is where

00:41:07.501 --> 00:41:10.868
we were able to integrate
Google Search,

00:41:10.934 --> 00:41:13.400
specifically the Google
Search appliance,

00:41:13.467 --> 00:41:16.601
to index all of their
local file servers,

00:41:16.667 --> 00:41:19.567
and aggregate and federate
all that content

00:41:19.634 --> 00:41:21.234
with everything
that you're seeing here.

00:41:21.300 --> 00:41:24.300
So, when we start
talking about search,

00:41:24.367 --> 00:41:29.667
we can go in and use People
Search to locate an individual.

00:41:29.734 --> 00:41:33.334
And as part of the result set,
we're also going to see content

00:41:33.400 --> 00:41:36.701
that is associated
with that individual.

00:41:36.767 --> 00:41:40.300
So part of this is going to be
a directory profile

00:41:40.367 --> 00:41:43.367
about that individual,
information that's pulled

00:41:43.434 --> 00:41:46.934
from active directory
in this case,

00:41:47.000 --> 00:41:48.634
and part of it is going
to be information

00:41:48.701 --> 00:41:51.167
that the use
has self-edited.

00:41:51.234 --> 00:41:53.400
So, you remember
at the very top,

00:41:53.467 --> 00:41:55.234
in the upper right corner
of the intranet,

00:41:55.300 --> 00:41:58.367
there was
an "edit my profile" page.

00:41:58.434 --> 00:42:01.934
And what this allows
the end users to do,

00:42:02.000 --> 00:42:05.234
they can click on that link,
and they can fill in

00:42:05.300 --> 00:42:08.267
some of the information
about themselves

00:42:08.334 --> 00:42:10.434
directly in the directory.

00:42:10.501 --> 00:42:12.801
Now, we've got several fields
that are locked down

00:42:12.868 --> 00:42:15.634
and not available for the user
to edit,

00:42:15.701 --> 00:42:18.334
but for the ones that they can,
it's relatively free-form,

00:42:18.400 --> 00:42:20.934
and they can enter
particular skill sets,

00:42:21.000 --> 00:42:23.634
particular industries,
anything about them

00:42:23.701 --> 00:42:27.767
that might be relevant
in the context of a search.

00:42:27.834 --> 00:42:29.567
So one of the last
Google technologies,

00:42:29.634 --> 00:42:32.634
and I'd highly encourage you
guys to take a look at this one.

00:42:32.701 --> 00:42:35.701
It is something that you can
build out of the box

00:42:35.767 --> 00:42:38.868
in probably about
ten minutes.

00:42:38.934 --> 00:42:41.634
It's the Google
Visualizations API.

00:42:41.701 --> 00:42:45.601
And we did that to build
a dynamic org chart,

00:42:45.667 --> 00:42:48.767
and if you want, I challenge you
after the session

00:42:48.834 --> 00:42:51.868
to go out and create
a Google spreadsheet

00:42:51.934 --> 00:42:55.934
and insert the visualizations
org chart component,

00:42:56.000 --> 00:42:58.033
and what it will allow you to do
is very quickly

00:42:58.100 --> 00:43:00.534
take that spreadsheet,
and display it

00:43:00.601 --> 00:43:04.501
just as you see here
with the dynamic org chart.

00:43:04.567 --> 00:43:06.267
So it's a very powerful
technology,

00:43:06.334 --> 00:43:10.334
and I'll step in a little
further with People Search.

00:43:10.400 --> 00:43:12.000
And again, stick around
for questions.

00:43:12.067 --> 00:43:18.033
We'll have some Q&amp;A
at the end of the session.

00:43:18.100 --> 00:43:19.901
But from a people search
perspective,

00:43:19.968 --> 00:43:21.834
the data flows--

00:43:21.901 --> 00:43:24.601
everything starts
in Active Directory.

00:43:24.667 --> 00:43:28.434
And from Active Directory,
we use a tool that's provided

00:43:28.501 --> 00:43:32.033
as part of Google Apps, called
Google Apps Directory Sync.

00:43:32.100 --> 00:43:36.167
It's a free tool,
and it allows a one-way push

00:43:36.234 --> 00:43:40.934
from Active Directory
to your Google user profiles.

00:43:41.000 --> 00:43:43.667
So if you have an existing
set of phone numbers,

00:43:43.734 --> 00:43:47.167
of fax numbers, of locations,
of all this data,

00:43:47.234 --> 00:43:49.634
using the GADS tool,
you can seamlessly push that

00:43:49.701 --> 00:43:52.234
into your Google
user profiles.

00:43:52.300 --> 00:43:54.934
So that's the first step
in the chain.

00:43:55.000 --> 00:43:59.767
The next step is to take all of
that user profile information

00:43:59.834 --> 00:44:03.200
and feed it into our
App Engine application.

00:44:03.267 --> 00:44:06.100
So here we're using
the Google APIs,

00:44:06.167 --> 00:44:08.868
specifically
the user profile API,

00:44:08.934 --> 00:44:11.467
to programatically
retrieve all that information

00:44:11.534 --> 00:44:14.167
that originally started
in Active Directory.

00:44:14.234 --> 00:44:16.567
It moved into Google Profiles,
and now we're pulling it

00:44:16.634 --> 00:44:21.400
into our app, and from there,
we expose that information

00:44:21.467 --> 00:44:23.000
and allow the user
to augment it

00:44:23.067 --> 00:44:25.267
with some additional fields.

00:44:25.334 --> 00:44:29.634
So they can do direct self-edits
of this personal data,

00:44:29.701 --> 00:44:32.934
and we all have confidence
that we're not going to corrupt

00:44:33.000 --> 00:44:35.534
Active Directory,
and we're not going to

00:44:35.601 --> 00:44:40.400
create any infrastructure
challenges for the IT team.

00:44:40.467 --> 00:44:44.033
The last result in this entire
chain of events is,

00:44:44.100 --> 00:44:47.000
we take all that information
that we've aggregated,

00:44:47.067 --> 00:44:49.534
and we publish it
as a direct feed

00:44:49.601 --> 00:44:52.133
to a Google search appliance.

00:44:52.200 --> 00:44:53.934
All that results
in the search screen

00:44:54.000 --> 00:44:56.000
that you see
down at the bottom,

00:44:56.067 --> 00:44:58.167
where we've queried
for a particular user,

00:44:58.234 --> 00:45:00.667
and we can start
to see their photo,

00:45:00.734 --> 00:45:03.167
we can start to see
their profile information,

00:45:03.234 --> 00:45:04.734
we can even seen content

00:45:04.801 --> 00:45:09.434
associated
with those individuals.

00:45:09.501 --> 00:45:10.968
We talked a little bit
about the pyramid,

00:45:11.033 --> 00:45:13.534
and I'm not going to go
into a great deal of depth here,

00:45:13.601 --> 00:45:15.100
but I highly
encourage everyone--

00:45:15.167 --> 00:45:18.300
there's a session tomorrow
that's going to talk about

00:45:18.367 --> 00:45:21.634
Google Apps Script
and work flow processes,

00:45:21.701 --> 00:45:24.067
and this is essentially
what we have here

00:45:24.133 --> 00:45:27.534
for the Google Sites
creation work flow.

00:45:27.601 --> 00:45:30.667
Again, if you think
of the bottom of that pyramid,

00:45:30.734 --> 00:45:35.434
we wanted to give the ability
for users to create user sites

00:45:35.501 --> 00:45:38.567
but we needed an approval
process to promote that site

00:45:38.634 --> 00:45:41.601
up into the upper echelon
of the pyramid.

00:45:41.667 --> 00:45:43.901
And this is how
it's accomplished.

00:45:43.968 --> 00:45:46.701
So the user goes out,
and they click a link

00:45:46.767 --> 00:45:48.667
to get their site approved.

00:45:48.734 --> 00:45:50.968
In this case
I'm creating a new site

00:45:51.033 --> 00:45:53.968
from one of the company-approved
templates.

00:45:54.033 --> 00:45:57.100
And this is a nice place
to use App Script.

00:45:57.167 --> 00:45:59.300
We've got the ability to say,

00:45:59.367 --> 00:46:02.133
there may be a whole bunch
of templates out there,

00:46:02.200 --> 00:46:05.434
but only a handful of them
are sanctioned for use

00:46:05.501 --> 00:46:07.601
kind of in this upper echelon
of the pyramid.

00:46:07.667 --> 00:46:11.100
So my App Script
reads the templates,

00:46:11.167 --> 00:46:15.367
and filters out just the ones
that are appropriate.

00:46:15.434 --> 00:46:17.701
All of this is routed
through email,

00:46:17.767 --> 00:46:21.200
and the results are actually
managed in a Google spreadsheet.

00:46:21.267 --> 00:46:23.334
And a Google spreadsheet
is a great container

00:46:23.400 --> 00:46:26.067
for keeping
all of this information

00:46:26.133 --> 00:46:28.868
when you're building
these work flows.

00:46:28.934 --> 00:46:32.767
So, a couple of lessons learned:
in this project,

00:46:32.834 --> 00:46:35.667
it's essential to involve
stakeholders,

00:46:35.734 --> 00:46:38.167
and it's essential
to keep them involved,

00:46:38.234 --> 00:46:40.267
and build a regular
release cycle

00:46:40.334 --> 00:46:43.334
of getting this information
out to users.

00:46:43.400 --> 00:46:46.868
Google Apps is constantly
introducing new features,

00:46:46.934 --> 00:46:48.200
so you need to prioritize.

00:46:48.267 --> 00:46:50.701
What is it
that we need to go live,

00:46:50.767 --> 00:46:53.767
and what are the nice-to-have
things that we can roll in?

00:46:53.834 --> 00:46:56.567
And maybe Google
even will release those

00:46:56.634 --> 00:46:59.200
as native features.

00:46:59.267 --> 00:47:02.234
Another lesson learned:
you're going to be,

00:47:02.300 --> 00:47:05.033
especially in a large
enterprise environment,

00:47:05.100 --> 00:47:08.801
promoting this content
between your various production

00:47:08.868 --> 00:47:11.234
and staging sites
on a regular basis,

00:47:11.300 --> 00:47:14.334
so make sure you build
a consistent process

00:47:14.400 --> 00:47:18.934
to get that content published,
and that's going to facilitate

00:47:19.000 --> 00:47:21.200
releasing that content
on a regular basis.

00:47:21.267 --> 00:47:24.667
So automate that process,
make it easier for everyone,

00:47:24.734 --> 00:47:26.534
so that when you're ready
to say,

00:47:26.601 --> 00:47:27.934
"Hey, take a look
at the new version,"

00:47:28.000 --> 00:47:30.601
everybody's got it.

00:47:30.667 --> 00:47:31.868
I mentioned gadgets.

00:47:31.934 --> 00:47:34.200
Everything in Sites that
you want to do dynamically

00:47:34.267 --> 00:47:38.868
is going to require gadgets,
so go ahead and invest some time

00:47:38.934 --> 00:47:41.501
in learning
Google Gadgets.

00:47:41.567 --> 00:47:42.701
I would especially recommend

00:47:42.767 --> 00:47:44.367
looking at the open
social containers,

00:47:44.434 --> 00:47:47.634
these give you
a lot more flexibility.

00:47:47.701 --> 00:47:50.033
If you haven't started
building gadgets yet,

00:47:50.100 --> 00:47:52.000
it's very easy.

00:47:52.067 --> 00:47:55.100
Go out and Google it,
but you'll see

00:47:55.167 --> 00:47:58.033
there's an IDE that's right
in the browser,

00:47:58.100 --> 00:48:01.901
so you can actually go to
a webpage, build a gadget,

00:48:01.968 --> 00:48:03.334
and start with
something simple.

00:48:03.400 --> 00:48:05.434
Just build a gadget
that has quick links,

00:48:05.501 --> 00:48:10.734
or URLs to other applications.

00:48:10.801 --> 00:48:14.634
An additional lesson learned
is, register a master user

00:48:14.701 --> 00:48:18.934
for all of your projects
within Google Apps.

00:48:19.000 --> 00:48:22.200
So, create a Google Apps account
that's dedicated to owning

00:48:22.267 --> 00:48:24.234
all of this content,

00:48:24.300 --> 00:48:26.033
and that way
you don't have to worry

00:48:26.100 --> 00:48:28.534
as much about changes
in developers

00:48:28.601 --> 00:48:30.033
and who's working on what.

00:48:30.100 --> 00:48:32.634
You know all the security
permissions will be accurate

00:48:32.701 --> 00:48:36.234
for this master administrator.

00:48:36.300 --> 00:48:39.200
Finally, App Engine
is the ideal hosting platform

00:48:39.267 --> 00:48:41.801
for all of these
custom gadgets.

00:48:41.868 --> 00:48:44.534
So in this organization
they were moving away

00:48:44.601 --> 00:48:47.567
from on-premise infrastructure,

00:48:47.634 --> 00:48:49.434
and as you start to build
a lot of these gadgets,

00:48:49.501 --> 00:48:50.767
you need a place
to put them.

00:48:50.834 --> 00:48:53.300
You need a place for
those applications to live.

00:48:53.367 --> 00:48:55.400
And App Engine
is perfect for that.

00:48:55.467 --> 00:48:58.868
It's pre-built
and ready to go.

00:48:58.934 --> 00:49:02.734
And finally, consider and test
security at every phase.

00:49:02.801 --> 00:49:04.767
From time to time,
you'll want to understand

00:49:04.834 --> 00:49:07.701
the security models
around a gadget,

00:49:07.767 --> 00:49:12.234
and how the content is displayed
in regards to authentication.

00:49:12.300 --> 00:49:14.467
So, in multi-domain
environments,

00:49:14.534 --> 00:49:17.968
this becomes an even more
important consideration.

00:49:18.033 --> 00:49:20.534
Look at your users
from the different organizations

00:49:20.601 --> 00:49:22.434
within Google Apps,
and make sure

00:49:22.501 --> 00:49:26.000
that they have access
to the content that they need.

00:49:26.067 --> 00:49:27.567
So again, I appreciate
everyone's time,

00:49:27.634 --> 00:49:29.934
and I think we'll
turn it over now to Q&amp;A.

00:49:30.000 --> 00:49:33.567
If you could,
there's a microphone back here,

00:49:33.634 --> 00:49:35.434
and if you could step up
to the microphone

00:49:35.501 --> 00:49:38.067
when you have questions,
and...

00:49:38.133 --> 00:49:43.534
Jeff: Perfect. Thank you.
[applause]

00:49:47.133 --> 00:49:51.067
Or hands.
That'll work as well.

00:49:51.133 --> 00:49:53.300
man: The question is--
is this on?

00:49:53.367 --> 00:49:55.467
David:
Yep.

00:49:55.534 --> 00:49:56.801
man: Just waiting
for the crowd to clear.

00:49:56.868 --> 00:50:01.133
I think people are smelling
food or something.

00:50:01.200 --> 00:50:03.534
The question I have is about
contextual gadgets.

00:50:03.601 --> 00:50:07.834
There was an indication
of custom content extractors,

00:50:07.901 --> 00:50:11.000
but they're not available,
and it's been there forever

00:50:11.067 --> 00:50:13.033
saying they will be available
at some point.

00:50:13.100 --> 00:50:16.067
Is there any idea of when
custom content extractors

00:50:16.133 --> 00:50:18.901
will be available,
or we could write our own?

00:50:18.968 --> 00:50:22.467
David: When you say
that custom content extractors

00:50:22.534 --> 00:50:26.767
should be there now,
is there a specific use case?

00:50:26.834 --> 00:50:29.434
man: Well, for example,
I might, in an email message,

00:50:29.501 --> 00:50:31.901
want to extract something
out of a header

00:50:31.968 --> 00:50:33.801
that's not currently
available.

00:50:33.868 --> 00:50:35.901
Currently I can extract
the subject, the from,

00:50:35.968 --> 00:50:37.634
the to, things like that,

00:50:37.701 --> 00:50:38.634
but there might be
something else

00:50:38.701 --> 00:50:40.367
I want to extract
out of a header

00:50:40.434 --> 00:50:42.701
and currently
I'm just limited

00:50:42.767 --> 00:50:45.000
to the pre-defined
content extractors,

00:50:45.067 --> 00:50:48.067
but there's a note there
on the page that says

00:50:48.133 --> 00:50:49.968
they will be available
at some point, custom,

00:50:50.033 --> 00:50:51.634
that you can write your own,

00:50:51.701 --> 00:50:54.100
but I haven't seen
any change to that,

00:50:54.167 --> 00:50:55.467
so I just wondered
if there's any word

00:50:55.534 --> 00:50:58.033
about if developers
will be able to write

00:50:58.100 --> 00:51:02.434
our own custom content
extractors.

00:51:02.501 --> 00:51:04.968
David: Good question, and it may
be something more for--

00:51:05.033 --> 00:51:06.968
Jeff:
Yeah, and I can just say,

00:51:07.033 --> 00:51:11.133
certainly these Gmail contextual
gadgets, I think they're not--

00:51:11.200 --> 00:51:12.601
they haven't been in use.

00:51:12.667 --> 00:51:14.400
We haven't done a really great
job of marketing them

00:51:14.467 --> 00:51:15.934
even to the developer
community.

00:51:16.000 --> 00:51:17.968
I think they're a lot more
powerful than people realize.

00:51:18.033 --> 00:51:21.100
But having said that,
and what that means is,

00:51:21.167 --> 00:51:25.167
that we are still investing
quite a bit in expanding that,

00:51:25.234 --> 00:51:29.434
and also these
additional extractors

00:51:29.501 --> 00:51:31.534
and the ability to do
custom content extractors

00:51:31.601 --> 00:51:33.067
is one kind of axes.

00:51:33.133 --> 00:51:35.234
Another way
is more flexible ways

00:51:35.300 --> 00:51:41.400
to install and acquire
these contextual Gmail gadgets.

00:51:41.467 --> 00:51:42.701
So there is development work
going on.

00:51:42.767 --> 00:51:44.400
I don't know
the specific status of that,

00:51:44.467 --> 00:51:49.033
but it's actively
being built out for sure.

00:51:49.100 --> 00:51:52.968
man:
Okay. Thank you.

00:51:53.033 --> 00:51:54.801
man: Hi.
Great example of an intranet.

00:51:54.868 --> 00:51:59.367
What I was wondering about is
statement of the empty building.

00:51:59.434 --> 00:52:02.901
How did you convince business
sort of people

00:52:02.968 --> 00:52:07.234
who had to pay to rebuild
everything?

00:52:07.300 --> 00:52:09.133
David:
Say that again.

00:52:09.200 --> 00:52:11.167
man:
Assuming the empty building?

00:52:11.234 --> 00:52:12.300
Assuming everything
has been built,

00:52:12.367 --> 00:52:14.467
but nobody's been using
the applications

00:52:14.534 --> 00:52:17.033
or the existing intranet.

00:52:17.100 --> 00:52:20.000
How did you get sponsored?

00:52:20.067 --> 00:52:21.100
David:
How did we get sponsored?

00:52:21.167 --> 00:52:23.100
man:
Yeah.

00:52:23.167 --> 00:52:26.133
David: Actually,
that was relatively easy.

00:52:26.200 --> 00:52:29.868
This particular customer
was in the midst of looking

00:52:29.934 --> 00:52:33.734
at a share point deployment,

00:52:33.801 --> 00:52:37.033
which had a very, very
significant price tag,

00:52:37.100 --> 00:52:41.133
and in comparison
to Google Apps,

00:52:41.200 --> 00:52:46.100
since Google Apps was already
part of the messaging plan,

00:52:46.167 --> 00:52:50.033
it was essentially
a no-cost addition,

00:52:50.100 --> 00:52:54.067
so it was more about being able
to prove to the customer

00:52:54.133 --> 00:52:58.634
that we could provide all
the functionality they needed

00:52:58.701 --> 00:53:01.267
within the Google Sites
container,

00:53:01.334 --> 00:53:05.901
so they had a list of
probably 18 core tenets

00:53:05.968 --> 00:53:09.667
that they wanted to see,
and we took a few days,

00:53:09.734 --> 00:53:12.367
built up some mock-ups,
some wire-frames,

00:53:12.434 --> 00:53:14.834
and some demos,
and showed them that yes,

00:53:14.901 --> 00:53:18.801
we could indeed
embed the types of content.

00:53:18.868 --> 00:53:20.901
Once we were able
to do that,

00:53:20.968 --> 00:53:23.767
they were solely caring
about function,

00:53:23.834 --> 00:53:29.567
and it made the rest of the
decisions kind of a no-brainer.

00:53:29.634 --> 00:53:34.033
But it did take some executive
commitment and sponsorship,

00:53:34.100 --> 00:53:38.200
and I certainly would suggest
to everyone that that is an area

00:53:38.267 --> 00:53:40.901
that you want to spend time on,
you know,

00:53:40.968 --> 00:53:42.801
showing people
sophisticated sites,

00:53:42.868 --> 00:53:47.067
and getting that commitment
from the executive group.

00:53:47.133 --> 00:53:50.267
man: You did that
as a commercial effort?

00:53:50.334 --> 00:53:51.501
The first demo?

00:53:51.567 --> 00:53:52.667
David:
Say that again?

00:53:52.734 --> 00:53:54.334
man: Did you do that
as a commercial effort,

00:53:54.400 --> 00:53:57.968
from your company's side,
to do the first initial days,

00:53:58.033 --> 00:54:02.400
or was that already
part of the paid produce?

00:54:02.467 --> 00:54:03.968
David: I didn't quite
pick up on that.

00:54:04.033 --> 00:54:08.901
man: So you have to demonstrate
somehow your skills?

00:54:08.968 --> 00:54:10.167
David:
Yeah.

00:54:10.234 --> 00:54:13.701
man: Is that part of
your commercial offering

00:54:13.767 --> 00:54:16.000
before you start getting paid,
or is that--?

00:54:16.067 --> 00:54:20.133
David: Absolutely.
So, we created an--

00:54:20.200 --> 00:54:21.901
my Internet access
is a little slow here,

00:54:21.968 --> 00:54:24.667
but I could show you
the demo site that we created

00:54:24.734 --> 00:54:28.000
that addressed
these 18 core tenets,

00:54:28.067 --> 00:54:30.501
and we went in front
of their governance board.

00:54:30.567 --> 00:54:33.501
We showed them how,
in most cases--

00:54:33.567 --> 00:54:35.067
I mean, I think
we had three days

00:54:35.133 --> 00:54:40.467
to put together the demo site,
but as we went through it,

00:54:40.534 --> 00:54:43.400
we showed them how we could
address the core requirements,

00:54:43.467 --> 00:54:46.067
and then for the things
that took a little more effort,

00:54:46.133 --> 00:54:48.033
we kind of scoped out
what they would look like

00:54:48.100 --> 00:54:54.434
and built some wire frames.

00:54:54.501 --> 00:54:55.701
Jeff:
And that can certainly vary

00:54:55.767 --> 00:54:57.334
depending on
the customer segment.

00:54:57.400 --> 00:54:59.100
They're working with,
what was it?

00:54:59.167 --> 00:55:00.734
6,000 employees,
or something?

00:55:00.801 --> 00:55:02.634
David: Yeah.
Jeff: It'll certainly vary.

00:55:02.701 --> 00:55:03.968
It'll certainly vary
if you're working

00:55:04.033 --> 00:55:05.400
with a small business.

00:55:05.467 --> 00:55:08.834
Often their partners wind up
being the trusted advisor,

00:55:08.901 --> 00:55:10.367
and it's basically saying,
"Look, here's the way

00:55:10.434 --> 00:55:13.934
that we can address
your business problems,

00:55:14.000 --> 00:55:15.801
the business problems
and objectives that you have."

00:55:15.868 --> 00:55:17.934
Don't worry about the fact
that it's Google Apps

00:55:18.000 --> 00:55:20.133
and other technologies
behind the scenes,

00:55:20.200 --> 00:55:25.434
but when you're positioned
as a true solution provider,

00:55:25.501 --> 00:55:28.934
then whether it's bringing
the technology to bear

00:55:29.000 --> 00:55:31.167
and implementing,
or it's actually developing,

00:55:31.234 --> 00:55:32.501
custom solutions,

00:55:32.567 --> 00:55:36.000
there's kind of much more
of a gray area there.

00:55:36.067 --> 00:55:37.701
And so you're able
to build out solutions

00:55:37.767 --> 00:55:41.801
and make proposals
to customers more easily.

00:55:41.868 --> 00:55:43.467
David: And existing content
is a great way,

00:55:43.534 --> 00:55:45.968
so if you build
a reference site, you know,

00:55:46.033 --> 00:55:48.801
because it's Google Sites,
it doesn't cost you anything,

00:55:48.868 --> 00:55:50.868
and you can use
that in your sales process

00:55:50.934 --> 00:55:52.400
over and over again,
so, you know,

00:55:52.467 --> 00:55:55.000
throw a few gadgets in there,
make sure people understand

00:55:55.067 --> 00:55:59.300
and get the vision of what
you can do with the platform.

00:55:59.367 --> 00:56:00.901
Jeff:
Okay.

00:56:00.968 --> 00:56:03.334
If there are no more questions,
we'll let people go to lunch,

00:56:03.400 --> 00:56:05.567
but thank you,
thank you again for joining.

