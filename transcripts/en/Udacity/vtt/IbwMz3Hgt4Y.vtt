WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.862
Now that we know the inputs and the outputs,

00:00:02.862 --> 00:00:04.900
the procedure almost writes itself,

00:00:04.915 --> 00:00:06.862
especially since we already know the code

00:00:06.862 --> 00:00:10.000
that we want to execute before we define the procedure.

00:00:10.000 --> 00:00:14.000
I am going to write the procedure by modifying the code here.

00:00:14.000 --> 00:00:18.077
First, what we're going to do is make a little space,

00:00:18.077 --> 00:00:23.000
erasing the code that's not part of the four lines that we want to turn into the procedure.

00:00:23.000 --> 00:00:26.000
So, I haven't modified the code at all.

00:00:26.000 --> 00:00:30.000
What I have is almost exactly what I need for the body of the procedure.

00:00:30.000 --> 00:00:31.677
This is what we want to do.

00:00:31.677 --> 00:00:34.000
What we need to do is modify that to get in the inputs

00:00:34.015 --> 00:00:36.000
and turn it into a procedure.

00:00:36.000 --> 00:00:41.000
To make it a procedure, we need to use the "def" name syntax.

00:00:41.000 --> 00:00:44.000
We're going to define the procedure "get&amp;#95;next&amp;#95;target."

00:00:44.000 --> 00:00:49.000
We need our input, and we decided what the input should be.

00:00:49.000 --> 00:00:51.231
Now we need our parameters.

00:00:51.231 --> 00:00:54.000
The parameters are the inputs to the procedure.

00:00:54.000 --> 00:00:57.754
We decided what the inputs should be are the web contents—

00:00:57.754 --> 00:01:00.000
that's a string giving the contents of the web page.

00:01:00.000 --> 00:01:03.000
That's what we had in the variable "page"—and

00:01:03.000 --> 00:01:05.308
we can call that "page" again here.

00:01:05.323 --> 00:01:07.523
That's what we're passing in as our input.

00:01:07.523 --> 00:01:09.569
Now we have the body of the procedure.

00:01:09.569 --> 00:01:11.858
The code is exactly the same as the code we had before,

00:01:11.858 --> 00:01:15.615
but instead of "page" being whatever it was here,

00:01:15.615 --> 00:01:19.108
"page" is whatever we pass in as the input to the procedure.

00:01:19.108 --> 00:01:20.554
We can change the name of "page."

00:01:20.554 --> 00:01:23.000
It makes sense to change that name.

00:01:23.000 --> 00:01:25.000
This code works no matter what we pass in.

00:01:25.000 --> 00:01:27.000
It doesn't have to be a web page.

00:01:27.000 --> 00:01:29.723
Any string that we pass in, this code will find it.

00:01:29.723 --> 00:01:33.000
It makes more sense to give it a slightly more generic name.

00:01:33.000 --> 00:01:35.477
We'll change the name to "S."

00:01:35.477 --> 00:01:36.846
If we change the name of the parameter,

00:01:36.846 --> 00:01:39.200
well everywhere that we use page,

00:01:39.200 --> 00:01:41.631
now we don't have the value of "page."

00:01:41.631 --> 00:01:43.354
What we have is the value of "S,"

00:01:43.354 --> 00:01:45.223
which is the name of the parameter.

00:01:45.223 --> 00:01:48.000
We'll change all of those to "S's" as well.

00:01:48.000 --> 00:01:50.000
We're almost done.

00:01:50.000 --> 00:01:52.000
There's one big thing that we have left to do,

00:01:52.000 --> 00:01:54.000
and that's how do we get the outputs.

00:01:54.000 --> 00:01:57.262
We said what we want the outputs to be is the URL

00:01:57.262 --> 00:02:02.000
and the value of "end_quote," so we need some way of getting those back.

00:02:02.000 --> 00:02:04.508
The way that you do that is to use "return."

00:02:04.508 --> 00:02:06.615
"Return" is a special construct in Python.

00:02:06.615 --> 00:02:09.615
We have the keyword "return,"

00:02:09.631 --> 00:02:14.000
followed by a list of all the things that we want to "return" from the procedure.

00:02:14.000 --> 00:02:17.431
What we return is a list of any number of expressions,

00:02:17.431 --> 00:02:19.746
separated by commas.

00:02:19.746 --> 00:02:24.000
We can have zero "return" expressions; that would mean there's no output.

00:02:24.000 --> 00:02:28.000
It actually is useful to have procedures with no outputs sometimes.

00:02:28.000 --> 00:02:32.000
That's not true if we just think of procedures as things that map inputs to outputs,

00:02:32.000 --> 00:02:34.000
but procedures can also do other things.

00:02:34.000 --> 00:02:35.769
They can do what we call "side effects."

00:02:35.769 --> 00:02:40.446
Side effects are things that we can see but that aren't the outputs.

00:02:40.446 --> 00:02:44.169
An example of a side effect would be if we printed something out,

00:02:44.169 --> 00:02:47.077
we would see that "result" happen.

00:02:47.077 --> 00:02:50.000
We see everything that happens when the code and procedure runs—

00:02:50.000 --> 00:02:52.354
but we wouldn't get it as an output.

00:02:52.354 --> 00:02:55.538
In this case, we do want to have outputs from "get&amp;#95;next&amp;#95;target."

00:02:55.538 --> 00:03:00.000
We want to "return" results so we know how to continue.

00:03:00.000 --> 00:03:04.000
We decided what the outputs should be, are the value of the url

00:03:04.000 --> 00:03:09.000
We want to find the string that's the next target and the value of the end quote,

00:03:09.000 --> 00:03:11.385
so we know the position where it was found.

00:03:11.385 --> 00:03:15.000
Let's see if you can figure out how to finish the return statement.

00:03:15.000 --> 00:03:18.000
Your goal is to figure out the code that we need after the return to

00:03:18.000 --> 00:03:21.000
to finish this procedure.

