WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
So let's start coding this up.

00:00:02.000 --> 00:00:05.000
There's our first grammar rule, expression goes to expression + expression.

00:00:05.000 --> 00:00:08.000
Our second grammar rule, very similar but for the minus.

00:00:08.000 --> 00:00:11.000
All right, so here I actually have quite a bit of Python code,

00:00:11.000 --> 00:00:14.000
and we're going to walk through it together, and then you're going to

00:00:14.000 --> 00:00:17.000
help me finish it out, so here's our definition of our grammar.

00:00:17.000 --> 00:00:21.000
It has 4 rewrite rules, and where I'm going to need your help

00:00:21.000 --> 00:00:26.000
is given a list of tokens and a grammar,

00:00:26.000 --> 00:00:32.000
I want to find all possible ways to expand it using those rules.

00:00:32.000 --> 00:00:34.000
Let me just show you what I mean by that.

00:00:34.000 --> 00:00:39.000
Here's our grammar again, and let's say that we started with "a exp."

00:00:39.000 --> 00:00:40.000
I would want us to come out with "a exp + exp,"

00:00:40.000 --> 00:00:46.000
"a exp - exp," "a ( exp )," and "a num."

00:00:46.000 --> 00:00:50.000
For each of these possible token positions and for each grammar rule,

00:00:50.000 --> 00:00:55.000
we removed the starting token and replaced it with the right-hand side of the grammar rule.

00:00:55.000 --> 00:01:00.000
This is the way we're going to enumerate all of the valid strings in the grammar.

00:01:00.000 --> 00:01:04.000
Now, you'll notice that I've made more expressions in many of these cases,

00:01:04.000 --> 00:01:07.000
so I could go from here and start and expand it again

00:01:07.000 --> 00:01:11.000
and get a few more strings until eventually I'm full entirely of terminals.

00:01:11.000 --> 00:01:14.000
I'm going to call the number of times I do this the depth.

00:01:14.000 --> 00:01:18.000
If we start with a exp and we expand it to depth 1,

00:01:18.000 --> 00:01:21.000
we get 4 new utterances, 4 new sentences.

00:01:21.000 --> 00:01:24.000
You're going to have to help me write that expansion procedure.

00:01:24.000 --> 00:01:27.000
Down here I've got some code to help us print it out.

00:01:27.000 --> 00:01:31.000
For now, we're only going to enumerate things up to a depth of 1,

00:01:31.000 --> 00:01:35.000
and we're going to start with just expression,

00:01:35.000 --> 00:01:39.000
and then we're going to use your expand procedure to make many more utterances,

00:01:39.000 --> 00:01:43.000
many more sentences starting from expression, probably 4 more,

00:01:43.000 --> 00:01:45.000
so then we'll have a total of 5, and then at the end of the day

00:01:45.000 --> 00:01:47.000
we print them all out.

00:01:47.000 --> 00:01:51.000
If you do it correctly, this is the output you expect to see,

00:01:51.000 --> 00:01:55.000
our original sentence, but then it's been expanded

00:01:55.000 --> 00:01:58.000
with 4 more, expression + expression, expression - expression,

00:01:58.000 --> 00:02:00.000
open expression close and num.

00:02:00.000 --> 00:02:05.000
And in fact, if we go back up here and change this to a exp,

00:02:05.000 --> 00:02:07.000
the example we worked through in the comments,

00:02:07.000 --> 00:02:09.000
we get the expected output.

00:02:09.000 --> 00:02:14.000
A is unchanged because there's no rewrite rule in our grammar for dealing with it,

00:02:14.000 --> 00:02:18.000
but a exp becomes a expression + expression, a expression - expression,

00:02:18.000 --> 00:02:21.000
a open expression close, and a num.

00:02:21.000 --> 00:02:25.000
Your job, submit via the interpreter the correct definition

00:02:25.000 --> 00:02:28.000
for the expand procedure so that it does this.

00:02:28.000 --> 00:02:31.000
Here's a hint. You're going to need yield with high probability,

00:02:31.000 --> 00:02:35.000
and you may also want to end up using list comprehensions.

00:02:35.000 --> 00:02:37.000
By the way, this is a very tricky quiz.

00:02:37.000 --> 00:02:39.000
This is not easy to get right the first time,

00:02:39.000 --> 00:02:42.000
so you should not feel bad if something goes wrong.

00:02:42.000 --> 09:59:59.000
Give this your all, but it is very difficult compared to what we've been up to so far.

