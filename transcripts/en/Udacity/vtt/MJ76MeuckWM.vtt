WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.730
So Dave is also a computer scientist

00:00:02.730 --> 00:00:05.160
just like Alice, Bob, and Carol,

00:00:05.160 --> 00:00:07.550
and he is working in Logistics,

00:00:07.550 --> 00:00:09.410
and the problem that he is working on is

00:00:09.410 --> 00:00:11.560
optimizing the delivery routes

00:00:11.560 --> 00:00:13.850
for the mail trucks of his company.

00:00:13.850 --> 00:00:17.660
So basically, the problem that Dave has to solve each day is the following:

00:00:17.660 --> 00:00:19.890
Here's the headquarter of his company

00:00:19.890 --> 00:00:21.840
where each day, the mail arrives,

00:00:21.840 --> 00:00:24.190
so maybe the mail arrives by an airplane,

00:00:24.190 --> 00:00:27.340
and that airplane delivers letters each day,

00:00:27.340 --> 00:00:29.690
and then this delivery truck here

00:00:29.690 --> 00:00:31.800
has to deliver those letters to all of the houses

00:00:31.800 --> 00:00:33.230
that receive mail that day.

00:00:33.230 --> 00:00:35.330
So let's say it's those 7 houses here where

00:00:35.330 --> 00:00:37.080
this truck has to deliver the mail.

00:00:37.080 --> 00:00:39.760
Now of course, the roads that connect the houses,

00:00:39.760 --> 00:00:42.250
so not every house is connected to each other house directly,

00:00:42.250 --> 00:00:44.700
and the roads also have different length,

00:00:44.700 --> 00:00:46.610
and I'm going to specify this in minutes,

00:00:46.610 --> 00:00:49.680
so if I write a 40 here, it means you need 40 minutes to get from

00:00:49.680 --> 00:00:51.570
this house to this house,

00:00:51.570 --> 00:00:53.610
and then 14 from this house to this house,

00:00:53.610 --> 00:00:56.210
and 13 from this house to this house, and so on.

00:00:56.210 --> 00:00:58.950
So you can already see that this looks very much like

00:00:58.950 --> 00:01:01.380
a graph except that the edges now have

00:01:01.380 --> 00:01:04.200
a certain distance or time attached to them.

00:01:04.200 --> 00:01:08.470
Now the problem that Dave has to solve is a problem that we will call shortest tour.

00:01:08.470 --> 00:01:10.520
We will say that as an optimization problem for now,

00:01:10.520 --> 00:01:15.030
we will later work with the decision problem to show NP completeness of this problem.

00:01:15.030 --> 00:01:16.220
The truck starts out here

00:01:16.220 --> 00:01:18.520
at the headquarters,

00:01:18.520 --> 00:01:20.090
and then, Dave is supposed to figure out

00:01:20.090 --> 00:01:23.260
the fastest way for the truck to visit all houses

00:01:23.260 --> 00:01:25.700
and then get back to the base, so it starts out here,

00:01:25.700 --> 00:01:27.510
has to visit all houses.

00:01:27.510 --> 00:01:29.350
It can visit a house more than once,

00:01:29.350 --> 00:01:31.810
in case you're wondering, and then it has to get back to base.

00:01:31.810 --> 00:01:34.380
So let's say the truck starts here

00:01:34.380 --> 00:01:38.870
and let's say the first road it takes down is this one here.

00:01:38.870 --> 00:01:41.340
What I would like you to tell me is

00:01:41.340 --> 00:01:43.580
in which order should the truck

00:01:43.580 --> 00:01:45.480
visit the other houses?

00:01:45.480 --> 00:01:48.120
So this is the first house that the truck is visiting,

00:01:48.120 --> 00:01:52.450
and I want you to enter a 2, 3, 4, 5, 6, and 7 here,

00:01:52.450 --> 00:01:56.700
so if the house travels from House 1 to House 2 then to House 2 and so on,

00:01:56.700 --> 99:59:59.000
it's taking the fastest possible route to visit all houses.

