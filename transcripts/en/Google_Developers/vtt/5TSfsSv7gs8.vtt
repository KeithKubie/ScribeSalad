WEBVTT
Kind: captions
Language: en

00:00:07.762 --> 00:00:08.970
PETE FRISELLA: Hi, everybody.

00:00:08.970 --> 00:00:09.730
Welcome.

00:00:09.730 --> 00:00:10.830
My name is Pete Frisella.

00:00:10.830 --> 00:00:13.770
I'm a developer advocate on
the Google Analytics team.

00:00:13.770 --> 00:00:15.770
Today, I just wanted to
give you a quick update.

00:00:15.770 --> 00:00:18.440
There's quite a few things that
happened the last month or so,

00:00:18.440 --> 00:00:19.670
and I thought it would be
good to share the highlights

00:00:19.670 --> 00:00:20.920
with you and give you
an overview of all

00:00:20.920 --> 00:00:22.295
the great new
things that we have

00:00:22.295 --> 00:00:25.327
available for you
in Google Analytics.

00:00:25.327 --> 00:00:27.160
Well, the first thing
I wanted to start with

00:00:27.160 --> 00:00:29.120
was the Dimensions
and Metrics Explorer.

00:00:29.120 --> 00:00:32.580
We just released a new version
of this tool just a few days

00:00:32.580 --> 00:00:35.142
ago, actually, and it adds a
whole bunch of new features.

00:00:35.142 --> 00:00:36.600
So let's just go
right to the tool,

00:00:36.600 --> 00:00:38.930
and we'll take a look at what
some of these great features

00:00:38.930 --> 00:00:39.210
are.

00:00:39.210 --> 00:00:41.130
So this is actually coming live
from the internet right now,

00:00:41.130 --> 00:00:43.588
and this is what's deployed
and currently available for you

00:00:43.588 --> 00:00:44.640
to take a look at.

00:00:44.640 --> 00:00:47.290
So there's a few new things
that we added to this tool.

00:00:47.290 --> 00:00:49.430
So one, what this tool
does is it gives you

00:00:49.430 --> 00:00:51.513
an overview of all the
dimensions and metrics that

00:00:51.513 --> 00:00:53.600
are available in the
Core Reporting API.

00:00:53.600 --> 00:00:56.530
It helps you understand what
the valid combinations are,

00:00:56.530 --> 00:00:58.830
the descriptions of these
different dimensions metrics.

00:00:58.830 --> 00:01:01.020
It provides a whole
bunch of information

00:01:01.020 --> 00:01:04.517
to help you navigate all
these different data points.

00:01:04.517 --> 00:01:06.350
So one of the first new
things that we added

00:01:06.350 --> 00:01:08.490
was an ability to switch modes.

00:01:08.490 --> 00:01:11.440
So prior to this update,
there was only really one way

00:01:11.440 --> 00:01:14.000
to look at this data,
which was the API names.

00:01:14.000 --> 00:01:17.020
And now we have two additional
modes that are web and app.

00:01:17.020 --> 00:01:19.320
So if I go here and
expand all of these,

00:01:19.320 --> 00:01:21.960
you'll see this is a list
of all the dimensions

00:01:21.960 --> 00:01:23.700
and metrics that we have.

00:01:23.700 --> 00:01:25.406
And now when we
switch to web mode,

00:01:25.406 --> 00:01:27.780
we'll now get a full list of
all the different dimensions

00:01:27.780 --> 00:01:30.360
and metrics, but also
include web names.

00:01:30.360 --> 00:01:33.735
So this is brand new, and we
also have apps, of course.

00:01:33.735 --> 00:01:36.110
So you can come here and try
this out and give it a whirl

00:01:36.110 --> 00:01:37.360
yourself.

00:01:37.360 --> 00:01:41.910
There's also a new feature here
called Only Allow In Segments.

00:01:41.910 --> 00:01:44.110
So this will only show
you dimensions and metrics

00:01:44.110 --> 00:01:45.770
that are allowed in segments.

00:01:45.770 --> 00:01:47.962
So if you click
the check box, it

00:01:47.962 --> 00:01:49.670
will eliminate any
dimensions and metrics

00:01:49.670 --> 00:01:51.640
that can't be used in segments.

00:01:51.640 --> 00:01:54.000
And of course, you can
do search capability.

00:01:54.000 --> 00:01:57.070
So if you're only looking for
specific dimensions or metrics,

00:01:57.070 --> 00:01:58.810
you can definitely
search for those,

00:01:58.810 --> 00:02:08.320
and it automatically
adjusts the search results

00:02:08.320 --> 00:02:10.110
based on your query.

00:02:10.110 --> 00:02:11.799
Secondly, there's
another big feature

00:02:11.799 --> 00:02:12.840
around the detailed view.

00:02:12.840 --> 00:02:16.090
So if you click into
any dimension or metric,

00:02:16.090 --> 00:02:18.970
you'll see a very detailed view
of that particular dimension

00:02:18.970 --> 00:02:19.850
or metric.

00:02:19.850 --> 00:02:23.480
So for example, we now include
the web name, the app name,

00:02:23.480 --> 00:02:25.920
and we also have these
additional attributes like data

00:02:25.920 --> 00:02:28.260
type and whether it's
allowed in segments.

00:02:28.260 --> 00:02:29.760
And if you go to
the top, we can see

00:02:29.760 --> 00:02:32.051
how this might look for
something that's very detailed.

00:02:32.051 --> 00:02:35.300
So for example, the custom
variables or columns,

00:02:35.300 --> 00:02:38.220
for example, has quite a
few different attributes,

00:02:38.220 --> 00:02:41.480
things like index range and
the premium index range.

00:02:41.480 --> 00:02:44.250
So all this information is now
available through this tool.

00:02:44.250 --> 00:02:47.300
And it's a lot faster
since once it loads,

00:02:47.300 --> 00:02:48.800
you don't have page
reloads anymore.

00:02:48.800 --> 00:02:51.569
It just automatically will load
different views very quick.

00:02:51.569 --> 00:02:53.110
You can see how
quick it is to switch

00:02:53.110 --> 00:02:55.420
between these different views.

00:02:55.420 --> 00:02:57.490
And then finally,
this has all been

00:02:57.490 --> 00:02:59.820
updated to use the Metadata API.

00:02:59.820 --> 00:03:03.330
So we recently relaunched
this Metadata API

00:03:03.330 --> 00:03:07.150
back in early October.

00:03:07.150 --> 00:03:08.800
And this gives
programmatic access

00:03:08.800 --> 00:03:10.230
to dimensions and metrics.

00:03:10.230 --> 00:03:12.550
And this tool was actually
built using this API,

00:03:12.550 --> 00:03:14.540
so it automatically
will update itself

00:03:14.540 --> 00:03:16.327
when we release new data.

00:03:16.327 --> 00:03:18.660
So that was the first update
I wanted to share with you.

00:03:18.660 --> 00:03:21.542
The next one is
the Query Explorer.

00:03:21.542 --> 00:03:23.750
So a lot of you are probably
familiar with this tool.

00:03:23.750 --> 00:03:26.600
It's a great way to explore your
reporting data from the Core

00:03:26.600 --> 00:03:27.620
Reporting API.

00:03:27.620 --> 00:03:30.630
And it gives you access to
all the dimensions and metrics

00:03:30.630 --> 00:03:33.480
and you can query up to seven
dimensions and 10 metrics

00:03:33.480 --> 00:03:34.040
in a query.

00:03:34.040 --> 00:03:36.165
So it gives you a lot of
data that you can pull out

00:03:36.165 --> 00:03:38.560
of the Core Reporting API.

00:03:38.560 --> 00:03:39.810
So this is what it looks like.

00:03:39.810 --> 00:03:40.980
I think probably a lot of
you are familiar with it.

00:03:40.980 --> 00:03:43.560
So let's just take a
look at the tool itself.

00:03:43.560 --> 00:03:46.460
This is another,
again, a live view.

00:03:46.460 --> 00:03:48.437
So I think this is
something that you probably

00:03:48.437 --> 00:03:50.770
wouldn't notice that we've
updated this, but some of you

00:03:50.770 --> 00:03:52.010
may have caught it.

00:03:52.010 --> 00:03:55.950
But we've actually updated this
tool to use the Metadata API.

00:03:55.950 --> 00:03:57.930
So again, this was a new
API that we released,

00:03:57.930 --> 00:03:59.304
and it allows
programmatic access

00:03:59.304 --> 00:04:01.040
to dimensions and metrics.

00:04:01.040 --> 00:04:02.510
Prior to this,
the Query Explorer

00:04:02.510 --> 00:04:06.250
was using kind of a static
weight to bring in this data,

00:04:06.250 --> 00:04:08.730
and now it's actually all
being dynamically loaded

00:04:08.730 --> 00:04:10.394
into the Query Explorer.

00:04:10.394 --> 00:04:12.060
So what you're going
to notice, and it's

00:04:12.060 --> 00:04:13.210
a little bit different
for you guys,

00:04:13.210 --> 00:04:14.490
is that you get a
little bit more data

00:04:14.490 --> 00:04:16.320
for each particular
dimension or metric.

00:04:16.320 --> 00:04:20.339
You'll see on the right
hand side, in this view,

00:04:20.339 --> 00:04:22.210
you'll see how it's
changing as we scroll

00:04:22.210 --> 00:04:24.140
over different
dimensions and metrics.

00:04:24.140 --> 00:04:26.170
This is all actually being
generated dynamically

00:04:26.170 --> 00:04:27.846
and coming from
the Metadata API.

00:04:27.846 --> 00:04:29.220
So the good thing
for you guys is

00:04:29.220 --> 00:04:32.470
that it's giving you a little
bit more data, such as the data

00:04:32.470 --> 00:04:34.220
type and whether it's
allowed in segments.

00:04:34.220 --> 00:04:36.860
So this information's now
available through the Query

00:04:36.860 --> 00:04:37.380
Explorer.

00:04:37.380 --> 00:04:38.860
And this is
something that's new.

00:04:38.860 --> 00:04:40.860
It wasn't really publicly
announced or anything,

00:04:40.860 --> 00:04:43.105
but this is a great,
great little update

00:04:43.105 --> 00:04:44.980
that gives you a little
bit more information.

00:04:44.980 --> 00:04:46.438
And it's a good
way to showcase how

00:04:46.438 --> 00:04:47.810
you can use the Metadata API.

00:04:47.810 --> 00:04:50.006
If you're interested in
this kind of information

00:04:50.006 --> 00:04:52.380
such as dimensions or metrics,
both of these tools really

00:04:52.380 --> 00:04:54.980
highlight how you can build
these applications using

00:04:54.980 --> 00:04:55.921
the Metadata API.

00:04:55.921 --> 00:04:57.420
So if you're
interested in that, you

00:04:57.420 --> 00:04:59.080
can definitely visit
our developer site

00:04:59.080 --> 00:05:00.830
and learn a little bit
more about that API

00:05:00.830 --> 00:05:02.870
and how it works.

00:05:02.870 --> 00:05:03.680
Great.

00:05:03.680 --> 00:05:06.320
So those are two
quick ones, but pretty

00:05:06.320 --> 00:05:08.430
big changes for some
of you, I think,

00:05:08.430 --> 00:05:12.406
in terms of getting access to
all the core reporting data.

00:05:12.406 --> 00:05:14.030
So let's go back into
the presentation.

00:05:14.030 --> 00:05:16.385
A new parameter that we
introduced into the Core

00:05:16.385 --> 00:05:20.855
Reporting API this past month,
it's called the Sampling Level.

00:05:20.855 --> 00:05:23.230
And this is kind of an effort
to bring the Core Reporting

00:05:23.230 --> 00:05:26.400
API to be a little bit more
consistent with the experience

00:05:26.400 --> 00:05:28.420
that you have in the web
interface, for example.

00:05:28.420 --> 00:05:30.490
And this is kind of important.

00:05:30.490 --> 00:05:33.097
So, some of you, you've probably
been in the web interface.

00:05:33.097 --> 00:05:34.930
You've done a report,
maybe a custom report,

00:05:34.930 --> 00:05:37.260
or seen some query,
and you'll notice

00:05:37.260 --> 00:05:40.130
that it says that it's
actually sampled, but based

00:05:40.130 --> 00:05:41.980
on a certain number
of visits, right?

00:05:41.980 --> 00:05:44.462
And if you click
this little icon

00:05:44.462 --> 00:05:46.670
on the top right-hand corner,
you get this drop-down,

00:05:46.670 --> 00:05:49.440
and you're actually able to
slide this little control back

00:05:49.440 --> 00:05:51.990
and forth to either go for
faster processing or higher

00:05:51.990 --> 00:05:52.750
precision.

00:05:52.750 --> 00:05:55.390
So this actually controls
the sampling rate

00:05:55.390 --> 00:05:57.127
for your particular query.

00:05:57.127 --> 00:05:58.960
This was not available
in the Core Reporting

00:05:58.960 --> 00:06:01.130
API prior this
update, and now we've

00:06:01.130 --> 00:06:03.880
added a new
parameter that brings

00:06:03.880 --> 00:06:05.780
this consistency across the two.

00:06:05.780 --> 00:06:07.792
So what does this actually mean?

00:06:07.792 --> 00:06:10.250
So from your perspective, if
you're querying using the Core

00:06:10.250 --> 00:06:12.800
Reporting API, there's now
this new parameter called

00:06:12.800 --> 00:06:15.510
&amp;samplingLevel=, which you
are able to set when you make

00:06:15.510 --> 00:06:17.529
a request to the
Core Reporting API.

00:06:17.529 --> 00:06:19.320
And this is again very
consistent with what

00:06:19.320 --> 00:06:20.620
you see in the web interface.

00:06:20.620 --> 00:06:22.950
So you can set it at
three different levels.

00:06:22.950 --> 00:06:27.220
One is faster, or you
can use a default value,

00:06:27.220 --> 00:06:28.820
or you can use higher precision.

00:06:28.820 --> 00:06:31.985
So default is, if you don't
provide this query parameter,

00:06:31.985 --> 00:06:33.610
it will just use a
default value, which

00:06:33.610 --> 00:06:34.985
is what would be
the same as what

00:06:34.985 --> 00:06:37.810
you'd see in the web interface.

00:06:37.810 --> 00:06:40.870
And then you can also set it
to faster or higher precision.

00:06:40.870 --> 00:06:42.230
This is also important.

00:06:42.230 --> 00:06:44.960
We get a lot of requests
from people or questions

00:06:44.960 --> 00:06:48.210
from people around their
queries not matching the result

00:06:48.210 --> 00:06:50.390
that they see in
the web interface.

00:06:50.390 --> 00:06:53.010
And there's usually two main
reasons why this happens,

00:06:53.010 --> 00:06:54.940
why these requests
are not the same.

00:06:54.940 --> 00:06:59.080
One is that either the actually
query's a little bit different.

00:06:59.080 --> 00:07:01.950
So there's some queries in the
UI that cannot be reproduced

00:07:01.950 --> 00:07:05.459
through the API, and that would
result in a different result,

00:07:05.459 --> 00:07:07.500
a different response from
the Core Reporting API,

00:07:07.500 --> 00:07:10.170
so you might have different
numbers for certain queries.

00:07:10.170 --> 00:07:13.000
The other reason why you
might get different responses

00:07:13.000 --> 00:07:16.610
from the Core Reporting API is
because of the sampling level.

00:07:16.610 --> 00:07:18.806
And prior to this query
parameter being available,

00:07:18.806 --> 00:07:20.930
there was really no way
for you to set the sampling

00:07:20.930 --> 00:07:22.750
level in the Core Reporting API.

00:07:22.750 --> 00:07:24.950
So it was harder
to match what you

00:07:24.950 --> 00:07:27.040
would see in the web interface.

00:07:27.040 --> 00:07:28.920
So this brings it
back in parity now,

00:07:28.920 --> 00:07:33.152
and definitely if you
use this query parameter,

00:07:33.152 --> 00:07:34.860
you'll see the response
that you get back

00:07:34.860 --> 00:07:37.320
from the Core Reporting API
is just a little bit different

00:07:37.320 --> 00:07:40.590
and includes a couple
new parameters for you.

00:07:40.590 --> 00:07:42.930
So what will happen is,
you make the request,

00:07:42.930 --> 00:07:45.420
you set the sampling level,
and in your response,

00:07:45.420 --> 00:07:47.617
you'll see these
different fields,

00:07:47.617 --> 00:07:49.700
these different properties
that are now available.

00:07:49.700 --> 00:07:53.035
One is the containsSampledData,
and this just lets you know,

00:07:53.035 --> 00:07:54.410
and this isn't
new, but this lets

00:07:54.410 --> 00:07:56.460
you know whether the
response that you got

00:07:56.460 --> 00:07:59.010
contained data that
was sampled or not.

00:07:59.010 --> 00:08:01.360
So this has always been
there, it's nothing new,

00:08:01.360 --> 00:08:04.422
but what is new is we've added
two different properties here

00:08:04.422 --> 00:08:06.630
to give you additional
information about the sampling

00:08:06.630 --> 00:08:07.850
that took place.

00:08:07.850 --> 00:08:09.930
The first one is
the sample size.

00:08:09.930 --> 00:08:13.120
The sampleSize just indicates
how many visits were actually

00:08:13.120 --> 00:08:17.060
used to calculate this
particular data that you're

00:08:17.060 --> 00:08:19.830
seeing that's been returned back
from the Core Reporting API.

00:08:19.830 --> 00:08:22.630
And the sampleSpace
lets you know

00:08:22.630 --> 00:08:25.410
what was the total number of
samples that were actually

00:08:25.410 --> 00:08:27.950
available to make this query.

00:08:27.950 --> 00:08:31.590
So for example, there might
have been 21 million sessions

00:08:31.590 --> 00:08:33.220
or samples available.

00:08:33.220 --> 00:08:38.250
We only use, in this example,
385,000 of those to get you

00:08:38.250 --> 00:08:40.190
data you need and
respond that back to you.

00:08:40.190 --> 00:08:42.690
So the reason we do this is
it's a lot quicker to bring back

00:08:42.690 --> 00:08:45.740
data, and statistically,
it actually

00:08:45.740 --> 00:08:49.300
is very close to the
correct responses

00:08:49.300 --> 00:08:51.574
that you would get for
the larger sample size.

00:08:51.574 --> 00:08:52.990
But it just makes
it a lot quicker

00:08:52.990 --> 00:08:55.830
and gives you
reports very quick.

00:08:55.830 --> 00:08:57.945
So these two numbers are
new, and a lot of you

00:08:57.945 --> 00:09:00.810
have asked for this data
because it helps you, again,

00:09:00.810 --> 00:09:03.450
bring consistency between the
web interface and the Core

00:09:03.450 --> 00:09:04.590
Reporting API.

00:09:04.590 --> 00:09:06.420
So what do I mean by that?

00:09:06.420 --> 00:09:08.290
Well, if you use
the web interface,

00:09:08.290 --> 00:09:10.400
you would see this
kind of result.

00:09:10.400 --> 00:09:13.860
You would have this little
tooltip or notification when

00:09:13.860 --> 00:09:16.049
you have a sample report,
and it would show you

00:09:16.049 --> 00:09:17.840
this report is based
on this number visits,

00:09:17.840 --> 00:09:19.527
and it would give
you a percentage.

00:09:19.527 --> 00:09:21.860
And this just lets you know
that the report was sampled,

00:09:21.860 --> 00:09:25.160
and this is kind of what we're
using to calculate this data.

00:09:25.160 --> 00:09:28.110
So let's see how this would
apply to these new fields

00:09:28.110 --> 00:09:30.700
that we have through
the Core Reporting API.

00:09:30.700 --> 00:09:33.020
So one, the
containsSampledData is kind of

00:09:33.020 --> 00:09:35.369
equivalent to seeing this
little notification bar.

00:09:35.369 --> 00:09:36.910
So this gives you
the same indication

00:09:36.910 --> 00:09:38.840
that the data that you're
looking at right now

00:09:38.840 --> 00:09:40.684
is sampled.

00:09:40.684 --> 00:09:41.850
The other one's pretty easy.

00:09:41.850 --> 00:09:43.460
We have the sampleSize.

00:09:43.460 --> 00:09:45.452
And this corresponds to
that particular number

00:09:45.452 --> 00:09:47.160
you would see in the
web interface, which

00:09:47.160 --> 00:09:50.005
is the number of visits
that the report is based on.

00:09:50.005 --> 00:09:52.407
So these are very consistent
now between the two.

00:09:52.407 --> 00:09:53.990
And finally is that
you may want to be

00:09:53.990 --> 00:09:56.142
able to calculate
this 1.77%, so you

00:09:56.142 --> 00:09:58.350
want to calculate this kind
of coverage or percentage

00:09:58.350 --> 00:10:00.040
of visits that are used.

00:10:00.040 --> 00:10:03.029
And we can use a sampleSpace
to figure out this calculation.

00:10:03.029 --> 00:10:04.320
And it's quite straightforward.

00:10:04.320 --> 00:10:06.730
We know the sampleSize and
we know the sampleSpace,

00:10:06.730 --> 00:10:08.104
so it's just a
matter of dividing

00:10:08.104 --> 00:10:12.380
these two to get your percentage
of visits that are used.

00:10:12.380 --> 00:10:15.590
So with this new parameter
and these new properties

00:10:15.590 --> 00:10:17.260
that we have available
in the response,

00:10:17.260 --> 00:10:18.670
you can be consistent with.

00:10:18.670 --> 00:10:19.645
If you're building
an application

00:10:19.645 --> 00:10:21.740
and you want to be able
to expose this information

00:10:21.740 --> 00:10:24.860
to your users, these
properties allow to do that.

00:10:29.510 --> 00:10:31.550
Another thing that we
released this past month

00:10:31.550 --> 00:10:34.444
was relative dates in
the Core Reporting API.

00:10:34.444 --> 00:10:35.860
So again, this was
another feature

00:10:35.860 --> 00:10:38.820
that was requested
by some users,

00:10:38.820 --> 00:10:40.420
and it actually is
pretty powerful,

00:10:40.420 --> 00:10:42.730
and it helps if you're
trying to build reports that

00:10:42.730 --> 00:10:44.500
are kind of ongoing,
and you want

00:10:44.500 --> 00:10:47.440
them to be relative to a
specific date, for example.

00:10:47.440 --> 00:10:50.405
So how this works is, whenever
you make a request to the Core

00:10:50.405 --> 00:10:52.267
Reporting API, there's
always two parameters

00:10:52.267 --> 00:10:54.850
that you-- so there's a couple
parameters you need to provide,

00:10:54.850 --> 00:10:56.700
and two of them
are the start-date

00:10:56.700 --> 00:10:59.550
and the end-date So
what period of time

00:10:59.550 --> 00:11:01.590
would you like this data for?

00:11:01.590 --> 00:11:04.130
So the acceptable
values have always been,

00:11:04.130 --> 00:11:06.390
of course, the year,
month, day, which

00:11:06.390 --> 00:11:09.160
is what everybody's been using
since the inception of the Core

00:11:09.160 --> 00:11:10.680
Reporting API.

00:11:10.680 --> 00:11:12.480
And we've added three
new different values

00:11:12.480 --> 00:11:16.800
that you can provide in place of
the standard year, month, day.

00:11:16.800 --> 00:11:20.190
They are today,
yesterday, and NdaysAgo.

00:11:20.190 --> 00:11:22.720
So with these three
values, you can basically

00:11:22.720 --> 00:11:25.980
create any query you'd
like with relative dates

00:11:25.980 --> 00:11:27.200
for any period of time.

00:11:27.200 --> 00:11:30.800
It gives you that kind of
flexibility to do that.

00:11:30.800 --> 00:11:33.210
And I'll show you what that
means in a second here.

00:11:33.210 --> 00:11:35.715
So for example, just
say you have a report,

00:11:35.715 --> 00:11:37.340
and you don't want
it to be a set date.

00:11:37.340 --> 00:11:39.006
You just want it to
be every seven days.

00:11:39.006 --> 00:11:40.530
So anytime you
query for this data,

00:11:40.530 --> 00:11:42.930
you just want the last
seven days worth of data.

00:11:42.930 --> 00:11:44.350
So with these new
parameters, you

00:11:44.350 --> 00:11:47.740
could set the start-date to,
for example, seven days ago,

00:11:47.740 --> 00:11:49.150
and the end-date to yesterday.

00:11:49.150 --> 00:11:50.350
And this would give
you the last seven

00:11:50.350 --> 00:11:51.760
days starting from yesterday.

00:11:51.760 --> 00:11:53.995
And it would always give
you that last seven days

00:11:53.995 --> 00:11:55.870
no matter when you query
it because now we're

00:11:55.870 --> 00:11:59.160
using relative dates.

00:11:59.160 --> 00:12:01.972
Again, last 10 days
would be very similar.

00:12:01.972 --> 00:12:03.680
The end-date would be
today, for example,

00:12:03.680 --> 00:12:05.480
and the start-date
would be nine days ago.

00:12:05.480 --> 00:12:06.650
So you've got to
be careful here,

00:12:06.650 --> 00:12:08.358
and something you'll
want to make note of

00:12:08.358 --> 00:12:11.360
is that when you're looking for
something like the last 10 days

00:12:11.360 --> 00:12:13.774
and you're including
today, intuitively, you

00:12:13.774 --> 00:12:15.190
might think that
it's 10 days ago,

00:12:15.190 --> 00:12:17.356
but it's actually nine days
ago, to actually include

00:12:17.356 --> 00:12:18.574
that full 10 days.

00:12:18.574 --> 00:12:19.990
So just something
to keep in mind,

00:12:19.990 --> 00:12:21.670
when you're making these
queries and setting them up,

00:12:21.670 --> 00:12:23.320
make sure you're actually
getting the correct number

00:12:23.320 --> 00:12:24.900
of days that you
think you're getting

00:12:24.900 --> 00:12:28.830
based on the NdaysAgo parameter.

00:12:28.830 --> 00:12:31.080
And then finally, just a
simple example, but if you're

00:12:31.080 --> 00:12:32.400
going to do today now,
you can do something like,

00:12:32.400 --> 00:12:33.990
you always want today's data.

00:12:33.990 --> 00:12:36.435
Then you would just
set the start-date

00:12:36.435 --> 00:12:38.620
to today and the
end-date to today,

00:12:38.620 --> 00:12:41.214
and you would get the
data always from today.

00:12:41.214 --> 00:12:42.630
Another important
thing to note is

00:12:42.630 --> 00:12:44.860
that this is based on
the time zone that's

00:12:44.860 --> 00:12:47.630
set in your particular
profile, so if you

00:12:47.630 --> 00:12:50.420
are set for Pacific
time in your profile,

00:12:50.420 --> 00:12:52.920
these relative dates will
be resolved to real dates

00:12:52.920 --> 00:12:54.430
based on that time zones.

00:12:54.430 --> 00:12:56.445
So just something to
keep in mind again,

00:12:56.445 --> 00:12:58.610
that's how it works.

00:12:58.610 --> 00:13:01.672
Pretty straightforward,
simple feature, but definitely

00:13:01.672 --> 00:13:03.380
something that gives
you more flexibility

00:13:03.380 --> 00:13:05.380
in terms of how you want
to set up your reports.

00:13:08.530 --> 00:13:10.660
And then recently, we
released some new data

00:13:10.660 --> 00:13:11.800
in a Core Reporting API.

00:13:11.800 --> 00:13:14.250
Another, again,
feature or data points

00:13:14.250 --> 00:13:16.260
that people were asking
for for quite some time,

00:13:16.260 --> 00:13:19.640
it was one of our top feature
requests on our issue tracker,

00:13:19.640 --> 00:13:20.790
was AdSense data.

00:13:20.790 --> 00:13:23.769
So we've added a whole bunch
of new AdSense metrics.

00:13:23.769 --> 00:13:25.810
You can visit the Dimensions
and Metrics Explorer

00:13:25.810 --> 00:13:28.780
to look at those metrics and
see what they are and learn more

00:13:28.780 --> 00:13:30.880
about them.

00:13:30.880 --> 00:13:35.660
We also added a few more
time dimensions, ga:isoYear,

00:13:35.660 --> 00:13:37.770
and isoYearIsoWeek.

00:13:37.770 --> 00:13:41.375
And again, these work with
the isoWeek dimensions,

00:13:41.375 --> 00:13:43.250
and they should be used
together and not used

00:13:43.250 --> 00:13:45.220
with the Gregorian
calendar entries.

00:13:45.220 --> 00:13:48.911
Like gaWeek should not
be used with these ones.

00:13:48.911 --> 00:13:50.660
But again, these were
features that people

00:13:50.660 --> 00:13:52.480
have been asking
for for a long time,

00:13:52.480 --> 00:13:54.146
so if you didn't know
we released those,

00:13:54.146 --> 00:13:56.200
you can definitely take
a look at those now.

00:13:56.200 --> 00:13:57.970
And then finally, we
added a new AdWords,

00:13:57.970 --> 00:14:00.960
the adKeywordMatchType,
which basically shows you

00:14:00.960 --> 00:14:02.740
which keyword
types were applied,

00:14:02.740 --> 00:14:05.432
or which match types were
applied to a specific keyword.

00:14:05.432 --> 00:14:07.640
Again, these are all available
through the Dimensions

00:14:07.640 --> 00:14:08.515
and Metrics Explorer.

00:14:08.515 --> 00:14:09.660
You can check them out.

00:14:09.660 --> 00:14:13.590
And they're available, of
course, in the Query Explorer,

00:14:13.590 --> 00:14:15.575
so you can go in
there and try the data

00:14:15.575 --> 00:14:16.700
and see what it looks like.

00:14:19.470 --> 00:14:21.430
All right, so this
is kind of a wrap-up.

00:14:21.430 --> 00:14:23.721
Those are the big features
we released this past month.

00:14:23.721 --> 00:14:25.459
There was a lot of
data that we released.

00:14:25.459 --> 00:14:28.000
There was a new Dimensions and
Metrics Explorer and the Query

00:14:28.000 --> 00:14:30.425
Explorer and, of course, a
new sampling level parameter.

00:14:33.060 --> 00:14:35.580
You can learn more about this
from the Core Reporting API

00:14:35.580 --> 00:14:37.090
reference.

00:14:37.090 --> 00:14:39.430
And of course, you can
visit the tools themselves

00:14:39.430 --> 00:14:42.270
at the resources that
we've provided here.

00:14:42.270 --> 00:14:45.070
And then also going forward,
how do you stay up to date?

00:14:45.070 --> 00:14:48.600
So we release a lot of things
in the API developer relations.

00:14:48.600 --> 00:14:50.590
We do our best to make
sure you guys understand

00:14:50.590 --> 00:14:52.450
what's coming out
and what features

00:14:52.450 --> 00:14:54.370
might be relevant to you.

00:14:54.370 --> 00:14:57.360
But you can always visit our
blog at analytics.blogspot.com

00:14:57.360 --> 00:14:59.150
and get updates there.

00:14:59.150 --> 00:15:01.635
We have our Google
Analytics G+ profile.

00:15:01.635 --> 00:15:04.200
And of course, you
follow me @pfrisella,

00:15:04.200 --> 00:15:06.190
and I usually will
post things that we've

00:15:06.190 --> 00:15:08.820
released so everybody
can learn about them.

00:15:08.820 --> 00:15:10.560
And then of course,
I really recommend

00:15:10.560 --> 00:15:11.893
you subscribe to our changelogs.

00:15:11.893 --> 00:15:13.392
We have a great
set of changelogs,

00:15:13.392 --> 00:15:15.475
especially if you're using
the Core Reporting API,

00:15:15.475 --> 00:15:17.200
the management API.

00:15:17.200 --> 00:15:19.760
We have some detailed
changelogs for you,

00:15:19.760 --> 00:15:23.340
and you can subscribe to
them through RSS feeds,

00:15:23.340 --> 00:15:26.770
or you can just visit the
page itself and take a look.

00:15:26.770 --> 00:15:27.270
Great.

00:15:27.270 --> 00:15:29.520
With that, I'd like to thank
you for joining me today.

00:15:29.520 --> 00:15:31.519
It was quick, but the
update has been completed,

00:15:31.519 --> 00:15:34.480
so thank you very much and
I'll see you next time.

