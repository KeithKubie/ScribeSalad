WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.519
[Music]

00:00:07.519 --> 00:00:07.529
[Music]
 

00:00:07.529 --> 00:00:09.470
[Music]
my name is Carmen and I'm on the Android

00:00:09.470 --> 00:00:09.480
my name is Carmen and I'm on the Android
 

00:00:09.480 --> 00:00:11.360
my name is Carmen and I'm on the Android
performance team and today I'm going to

00:00:11.360 --> 00:00:11.370
performance team and today I'm going to
 

00:00:11.370 --> 00:00:12.980
performance team and today I'm going to
show you some examples of analyzing

00:00:12.980 --> 00:00:12.990
show you some examples of analyzing
 

00:00:12.990 --> 00:00:16.250
show you some examples of analyzing
performance using systrace before I do I

00:00:16.250 --> 00:00:16.260
performance using systrace before I do I
 

00:00:16.260 --> 00:00:18.470
performance using systrace before I do I
want to remind you that your app is not

00:00:18.470 --> 00:00:18.480
want to remind you that your app is not
 

00:00:18.480 --> 00:00:20.480
want to remind you that your app is not
an island it's running on top of several

00:00:20.480 --> 00:00:20.490
an island it's running on top of several
 

00:00:20.490 --> 00:00:22.130
an island it's running on top of several
layers you know the phone hardware the

00:00:22.130 --> 00:00:22.140
layers you know the phone hardware the
 

00:00:22.140 --> 00:00:24.349
layers you know the phone hardware the
android framework libraries that you're

00:00:24.349 --> 00:00:24.359
android framework libraries that you're
 

00:00:24.359 --> 00:00:26.390
android framework libraries that you're
incorporating a/b tests so you might

00:00:26.390 --> 00:00:26.400
incorporating a/b tests so you might
 

00:00:26.400 --> 00:00:27.800
incorporating a/b tests so you might
think you know what your code is doing

00:00:27.800 --> 00:00:27.810
think you know what your code is doing
 

00:00:27.810 --> 00:00:29.900
think you know what your code is doing
but the reality might actually surprise

00:00:29.900 --> 00:00:29.910
but the reality might actually surprise
 

00:00:29.910 --> 00:00:32.780
but the reality might actually surprise
you and this is where systrace comes in

00:00:32.780 --> 00:00:32.790
you and this is where systrace comes in
 

00:00:32.790 --> 00:00:34.610
you and this is where systrace comes in
so systrace is a tool that lets you

00:00:34.610 --> 00:00:34.620
so systrace is a tool that lets you
 

00:00:34.620 --> 00:00:36.560
so systrace is a tool that lets you
collect precise timing information about

00:00:36.560 --> 00:00:36.570
collect precise timing information about
 

00:00:36.570 --> 00:00:38.060
collect precise timing information about
what's going on on your device and then

00:00:38.060 --> 00:00:38.070
what's going on on your device and then
 

00:00:38.070 --> 00:00:40.459
what's going on on your device and then
visualize it it records down to the

00:00:40.459 --> 00:00:40.469
visualize it it records down to the
 

00:00:40.469 --> 00:00:43.369
visualize it it records down to the
individual CPU time slice on the Android

00:00:43.369 --> 00:00:43.379
individual CPU time slice on the Android
 

00:00:43.379 --> 00:00:45.080
individual CPU time slice on the Android
performance team it's the most important

00:00:45.080 --> 00:00:45.090
performance team it's the most important
 

00:00:45.090 --> 00:00:46.610
performance team it's the most important
tool we have for debugging performance

00:00:46.610 --> 00:00:46.620
tool we have for debugging performance
 

00:00:46.620 --> 00:00:48.740
tool we have for debugging performance
issues Tim Murray and I have given some

00:00:48.740 --> 00:00:48.750
issues Tim Murray and I have given some
 

00:00:48.750 --> 00:00:50.389
issues Tim Murray and I have given some
talks about how to use systrace in the

00:00:50.389 --> 00:00:50.399
talks about how to use systrace in the
 

00:00:50.399 --> 00:00:51.830
talks about how to use systrace in the
past and if you want to know more about

00:00:51.830 --> 00:00:51.840
past and if you want to know more about
 

00:00:51.840 --> 00:00:54.680
past and if you want to know more about
that google for his i/o talk but today

00:00:54.680 --> 00:00:54.690
that google for his i/o talk but today
 

00:00:54.690 --> 00:00:55.880
that google for his i/o talk but today
I'm going to focus on showing you what

00:00:55.880 --> 00:00:55.890
I'm going to focus on showing you what
 

00:00:55.890 --> 00:00:57.380
I'm going to focus on showing you what
kind of issues you can find in your app

00:00:57.380 --> 00:00:57.390
kind of issues you can find in your app
 

00:00:57.390 --> 00:01:00.139
kind of issues you can find in your app
when you use systrace so I took traces

00:01:00.139 --> 00:01:00.149
when you use systrace so I took traces
 

00:01:00.149 --> 00:01:02.029
when you use systrace so I took traces
of three apps that I don't work on but I

00:01:02.029 --> 00:01:02.039
of three apps that I don't work on but I
 

00:01:02.039 --> 00:01:04.009
of three apps that I don't work on but I
could still quickly find potential

00:01:04.009 --> 00:01:04.019
could still quickly find potential
 

00:01:04.019 --> 00:01:06.350
could still quickly find potential
improvements to their startup time so

00:01:06.350 --> 00:01:06.360
improvements to their startup time so
 

00:01:06.360 --> 00:01:09.380
improvements to their startup time so
let's jump in with the first app when I

00:01:09.380 --> 00:01:09.390
let's jump in with the first app when I
 

00:01:09.390 --> 00:01:12.050
let's jump in with the first app when I
look at the trace 3 different activity

00:01:12.050 --> 00:01:12.060
look at the trace 3 different activity
 

00:01:12.060 --> 00:01:14.480
look at the trace 3 different activity
starts jumped out at me right away there

00:01:14.480 --> 00:01:14.490
starts jumped out at me right away there
 

00:01:14.490 --> 00:01:16.280
starts jumped out at me right away there
are a lot of reasons to use trampoline

00:01:16.280 --> 00:01:16.290
are a lot of reasons to use trampoline
 

00:01:16.290 --> 00:01:18.200
are a lot of reasons to use trampoline
activities I see them a lot when

00:01:18.200 --> 00:01:18.210
activities I see them a lot when
 

00:01:18.210 --> 00:01:19.820
activities I see them a lot when
developers are trying to show a splash

00:01:19.820 --> 00:01:19.830
developers are trying to show a splash
 

00:01:19.830 --> 00:01:21.710
developers are trying to show a splash
screen or do a permissions check

00:01:21.710 --> 00:01:21.720
screen or do a permissions check
 

00:01:21.720 --> 00:01:23.630
screen or do a permissions check
something like that but they definitely

00:01:23.630 --> 00:01:23.640
something like that but they definitely
 

00:01:23.640 --> 00:01:25.910
something like that but they definitely
impact your launch time and depending on

00:01:25.910 --> 00:01:25.920
impact your launch time and depending on
 

00:01:25.920 --> 00:01:26.990
impact your launch time and depending on
what you're trying to do there might be

00:01:26.990 --> 00:01:27.000
what you're trying to do there might be
 

00:01:27.000 --> 00:01:28.880
what you're trying to do there might be
a better way so if you're trying to make

00:01:28.880 --> 00:01:28.890
a better way so if you're trying to make
 

00:01:28.890 --> 00:01:30.410
a better way so if you're trying to make
a splash screen you could set up a

00:01:30.410 --> 00:01:30.420
a splash screen you could set up a
 

00:01:30.420 --> 00:01:32.600
a splash screen you could set up a
special launch theme or for permissions

00:01:32.600 --> 00:01:32.610
special launch theme or for permissions
 

00:01:32.610 --> 00:01:34.219
special launch theme or for permissions
you could refactor your code so that you

00:01:34.219 --> 00:01:34.229
you could refactor your code so that you
 

00:01:34.229 --> 00:01:35.660
you could refactor your code so that you
only open the separate activity if you

00:01:35.660 --> 00:01:35.670
only open the separate activity if you
 

00:01:35.670 --> 00:01:38.120
only open the separate activity if you
need to I don't know why this app has

00:01:38.120 --> 00:01:38.130
need to I don't know why this app has
 

00:01:38.130 --> 00:01:40.100
need to I don't know why this app has
these activities and maybe they are

00:01:40.100 --> 00:01:40.110
these activities and maybe they are
 

00:01:40.110 --> 00:01:42.649
these activities and maybe they are
critical but if they don't that's a 160

00:01:42.649 --> 00:01:42.659
critical but if they don't that's a 160
 

00:01:42.659 --> 00:01:46.310
critical but if they don't that's a 160
millisecond in the same app I also

00:01:46.310 --> 00:01:46.320
millisecond in the same app I also
 

00:01:46.320 --> 00:01:47.660
millisecond in the same app I also
browse through the names of the views

00:01:47.660 --> 00:01:47.670
browse through the names of the views
 

00:01:47.670 --> 00:01:49.880
browse through the names of the views
being inflated by this app based on the

00:01:49.880 --> 00:01:49.890
being inflated by this app based on the
 

00:01:49.890 --> 00:01:51.050
being inflated by this app based on the
name of this highlighted view in the

00:01:51.050 --> 00:01:51.060
name of this highlighted view in the
 

00:01:51.060 --> 00:01:52.550
name of this highlighted view in the
second row it looks like it's a drawer

00:01:52.550 --> 00:01:52.560
second row it looks like it's a drawer
 

00:01:52.560 --> 00:01:54.800
second row it looks like it's a drawer
view your views are always a bit of a

00:01:54.800 --> 00:01:54.810
view your views are always a bit of a
 

00:01:54.810 --> 00:01:56.240
view your views are always a bit of a
conundrum because they often have a lot

00:01:56.240 --> 00:01:56.250
conundrum because they often have a lot
 

00:01:56.250 --> 00:01:57.830
conundrum because they often have a lot
of child views and they take a long time

00:01:57.830 --> 00:01:57.840
of child views and they take a long time
 

00:01:57.840 --> 00:02:00.289
of child views and they take a long time
to inflate but sometimes we need them

00:02:00.289 --> 00:02:00.299
to inflate but sometimes we need them
 

00:02:00.299 --> 00:02:02.060
to inflate but sometimes we need them
immediately for UX reasons

00:02:02.060 --> 00:02:02.070
immediately for UX reasons
 

00:02:02.070 --> 00:02:04.340
immediately for UX reasons
if this app can pull this inflate out of

00:02:04.340 --> 00:02:04.350
if this app can pull this inflate out of
 

00:02:04.350 --> 00:02:05.690
if this app can pull this inflate out of
the critical path of startup they could

00:02:05.690 --> 00:02:05.700
the critical path of startup they could
 

00:02:05.700 --> 00:02:10.040
the critical path of startup they could
save 42 more milliseconds so this second

00:02:10.040 --> 00:02:10.050
save 42 more milliseconds so this second
 

00:02:10.050 --> 00:02:11.330
save 42 more milliseconds so this second
app is following the pattern for app

00:02:11.330 --> 00:02:11.340
app is following the pattern for app
 

00:02:11.340 --> 00:02:13.180
app is following the pattern for app
startups that I would expect in the top

00:02:13.180 --> 00:02:13.190
startups that I would expect in the top
 

00:02:13.190 --> 00:02:15.070
startups that I would expect in the top
there's no extra activities or services

00:02:15.070 --> 00:02:15.080
there's no extra activities or services
 

00:02:15.080 --> 00:02:17.140
there's no extra activities or services
being started I dug in a little more

00:02:17.140 --> 00:02:17.150
being started I dug in a little more
 

00:02:17.150 --> 00:02:18.370
being started I dug in a little more
clicked on the views that were being

00:02:18.370 --> 00:02:18.380
clicked on the views that were being
 

00:02:18.380 --> 00:02:20.170
clicked on the views that were being
inflated and the names of the widgets

00:02:20.170 --> 00:02:20.180
inflated and the names of the widgets
 

00:02:20.180 --> 00:02:22.060
inflated and the names of the widgets
that I could see matched up with what

00:02:22.060 --> 00:02:22.070
that I could see matched up with what
 

00:02:22.070 --> 00:02:24.640
that I could see matched up with what
was visible when the app started so far

00:02:24.640 --> 00:02:24.650
was visible when the app started so far
 

00:02:24.650 --> 00:02:27.010
was visible when the app started so far
so good but then I saw this gap in

00:02:27.010 --> 00:02:27.020
so good but then I saw this gap in
 

00:02:27.020 --> 00:02:28.780
so good but then I saw this gap in
activity inside bind application that

00:02:28.780 --> 00:02:28.790
activity inside bind application that
 

00:02:28.790 --> 00:02:31.060
activity inside bind application that
takes up 30 milliseconds when I click on

00:02:31.060 --> 00:02:31.070
takes up 30 milliseconds when I click on
 

00:02:31.070 --> 00:02:32.440
takes up 30 milliseconds when I click on
that trace point I'll see that it's

00:02:32.440 --> 00:02:32.450
that trace point I'll see that it's
 

00:02:32.450 --> 00:02:33.940
that trace point I'll see that it's
monitor contention and I get more

00:02:33.940 --> 00:02:33.950
monitor contention and I get more
 

00:02:33.950 --> 00:02:37.270
monitor contention and I get more
information so monitor contention is

00:02:37.270 --> 00:02:37.280
information so monitor contention is
 

00:02:37.280 --> 00:02:38.830
information so monitor contention is
another way of saying lot contention

00:02:38.830 --> 00:02:38.840
another way of saying lot contention
 

00:02:38.840 --> 00:02:40.630
another way of saying lot contention
where the owner of the lock is the

00:02:40.630 --> 00:02:40.640
where the owner of the lock is the
 

00:02:40.640 --> 00:02:42.880
where the owner of the lock is the
thread pool 3 thread 1 so that's in the

00:02:42.880 --> 00:02:42.890
thread pool 3 thread 1 so that's in the
 

00:02:42.890 --> 00:02:45.310
thread pool 3 thread 1 so that's in the
top row and so I scrolled down and I did

00:02:45.310 --> 00:02:45.320
top row and so I scrolled down and I did
 

00:02:45.320 --> 00:02:47.500
top row and so I scrolled down and I did
in fact see activity in pool 3 thread 1

00:02:47.500 --> 00:02:47.510
in fact see activity in pool 3 thread 1
 

00:02:47.510 --> 00:02:49.780
in fact see activity in pool 3 thread 1
during this time and then it's given me

00:02:49.780 --> 00:02:49.790
during this time and then it's given me
 

00:02:49.790 --> 00:02:51.760
during this time and then it's given me
a pointer to the stack so I wasn't

00:02:51.760 --> 00:02:51.770
a pointer to the stack so I wasn't
 

00:02:51.770 --> 00:02:53.260
a pointer to the stack so I wasn't
familiar with realms so I looked it up

00:02:53.260 --> 00:02:53.270
familiar with realms so I looked it up
 

00:02:53.270 --> 00:02:54.790
familiar with realms so I looked it up
and it's like a mobile database library

00:02:54.790 --> 00:02:54.800
and it's like a mobile database library
 

00:02:54.800 --> 00:02:56.680
and it's like a mobile database library
like sequel so the function names kind

00:02:56.680 --> 00:02:56.690
like sequel so the function names kind
 

00:02:56.690 --> 00:02:59.500
like sequel so the function names kind
of make sense here and this one may or

00:02:59.500 --> 00:02:59.510
of make sense here and this one may or
 

00:02:59.510 --> 00:03:01.000
of make sense here and this one may or
may not be something that you can fix as

00:03:01.000 --> 00:03:01.010
may not be something that you can fix as
 

00:03:01.010 --> 00:03:02.410
may not be something that you can fix as
an app developer because you might need

00:03:02.410 --> 00:03:02.420
an app developer because you might need
 

00:03:02.420 --> 00:03:04.540
an app developer because you might need
to coordinate with the realm library but

00:03:04.540 --> 00:03:04.550
to coordinate with the realm library but
 

00:03:04.550 --> 00:03:05.890
to coordinate with the realm library but
if you had a monitor contention between

00:03:05.890 --> 00:03:05.900
if you had a monitor contention between
 

00:03:05.900 --> 00:03:07.570
if you had a monitor contention between
two threads that you wrote in your say

00:03:07.570 --> 00:03:07.580
two threads that you wrote in your say
 

00:03:07.580 --> 00:03:09.550
two threads that you wrote in your say
map it would look the same

00:03:09.550 --> 00:03:09.560
map it would look the same
 

00:03:09.560 --> 00:03:11.830
map it would look the same
either way this is another potential 30

00:03:11.830 --> 00:03:11.840
either way this is another potential 30
 

00:03:11.840 --> 00:03:13.390
either way this is another potential 30
millisecond opportunity for this app

00:03:13.390 --> 00:03:13.400
millisecond opportunity for this app
 

00:03:13.400 --> 00:03:14.350
millisecond opportunity for this app
where they could get a start up

00:03:14.350 --> 00:03:14.360
where they could get a start up
 

00:03:14.360 --> 00:03:15.670
where they could get a start up
improvement by resolving the slot

00:03:15.670 --> 00:03:15.680
improvement by resolving the slot
 

00:03:15.680 --> 00:03:19.449
improvement by resolving the slot
contention in this app there are two

00:03:19.449 --> 00:03:19.459
contention in this app there are two
 

00:03:19.459 --> 00:03:20.710
contention in this app there are two
activities being started

00:03:20.710 --> 00:03:20.720
activities being started
 

00:03:20.720 --> 00:03:21.940
activities being started
but there's another potential

00:03:21.940 --> 00:03:21.950
but there's another potential
 

00:03:21.950 --> 00:03:23.949
but there's another potential
improvement here too you see that I

00:03:23.949 --> 00:03:23.959
improvement here too you see that I
 

00:03:23.959 --> 00:03:25.420
improvement here too you see that I
included the thread name over on the

00:03:25.420 --> 00:03:25.430
included the thread name over on the
 

00:03:25.430 --> 00:03:27.010
included the thread name over on the
left on the screenshot this is the UI

00:03:27.010 --> 00:03:27.020
left on the screenshot this is the UI
 

00:03:27.020 --> 00:03:28.720
left on the screenshot this is the UI
thread so if we scroll down and see

00:03:28.720 --> 00:03:28.730
thread so if we scroll down and see
 

00:03:28.730 --> 00:03:30.100
thread so if we scroll down and see
what's going on on the other threads in

00:03:30.100 --> 00:03:30.110
what's going on on the other threads in
 

00:03:30.110 --> 00:03:32.110
what's going on on the other threads in
this app we can see these background

00:03:32.110 --> 00:03:32.120
this app we can see these background
 

00:03:32.120 --> 00:03:34.660
this app we can see these background
threads running a CPU 0 CPU one CPU 2

00:03:34.660 --> 00:03:34.670
threads running a CPU 0 CPU one CPU 2
 

00:03:34.670 --> 00:03:36.610
threads running a CPU 0 CPU one CPU 2
and it's awesome that the app developers

00:03:36.610 --> 00:03:36.620
and it's awesome that the app developers
 

00:03:36.620 --> 00:03:38.080
and it's awesome that the app developers
made background threads to do some of

00:03:38.080 --> 00:03:38.090
made background threads to do some of
 

00:03:38.090 --> 00:03:40.210
made background threads to do some of
their work but there's a potential

00:03:40.210 --> 00:03:40.220
their work but there's a potential
 

00:03:40.220 --> 00:03:41.860
their work but there's a potential
performance issue here that jumps out at

00:03:41.860 --> 00:03:41.870
performance issue here that jumps out at
 

00:03:41.870 --> 00:03:43.360
performance issue here that jumps out at
me as well which is that these

00:03:43.360 --> 00:03:43.370
me as well which is that these
 

00:03:43.370 --> 00:03:44.560
me as well which is that these
background threads are doing a lot of

00:03:44.560 --> 00:03:44.570
background threads are doing a lot of
 

00:03:44.570 --> 00:03:46.600
background threads are doing a lot of
blocking i/o so that's the orange

00:03:46.600 --> 00:03:46.610
blocking i/o so that's the orange
 

00:03:46.610 --> 00:03:48.610
blocking i/o so that's the orange
sections in the CPU activity bars on the

00:03:48.610 --> 00:03:48.620
sections in the CPU activity bars on the
 

00:03:48.620 --> 00:03:51.040
sections in the CPU activity bars on the
trace they're kind of hard to see so you

00:03:51.040 --> 00:03:51.050
trace they're kind of hard to see so you
 

00:03:51.050 --> 00:03:52.570
trace they're kind of hard to see so you
can see there's some i/o happening on

00:03:52.570 --> 00:03:52.580
can see there's some i/o happening on
 

00:03:52.580 --> 00:03:54.850
can see there's some i/o happening on
all three of these threads now it turns

00:03:54.850 --> 00:03:54.860
all three of these threads now it turns
 

00:03:54.860 --> 00:03:56.470
all three of these threads now it turns
out that on a lot of devices we have to

00:03:56.470 --> 00:03:56.480
out that on a lot of devices we have to
 

00:03:56.480 --> 00:03:58.000
out that on a lot of devices we have to
be concerned about i/o contention

00:03:58.000 --> 00:03:58.010
be concerned about i/o contention
 

00:03:58.010 --> 00:04:00.250
be concerned about i/o contention
there's not necessarily more than one IO

00:04:00.250 --> 00:04:00.260
there's not necessarily more than one IO
 

00:04:00.260 --> 00:04:02.260
there's not necessarily more than one IO
channel to use to access the disk at

00:04:02.260 --> 00:04:02.270
channel to use to access the disk at
 

00:04:02.270 --> 00:04:04.330
channel to use to access the disk at
once so these background threads may

00:04:04.330 --> 00:04:04.340
once so these background threads may
 

00:04:04.340 --> 00:04:05.800
once so these background threads may
actually be slowing down the i/o

00:04:05.800 --> 00:04:05.810
actually be slowing down the i/o
 

00:04:05.810 --> 00:04:08.680
actually be slowing down the i/o
requests from the UI thread so that

00:04:08.680 --> 00:04:08.690
requests from the UI thread so that
 

00:04:08.690 --> 00:04:10.120
requests from the UI thread so that
section is highlighted down below we

00:04:10.120 --> 00:04:10.130
section is highlighted down below we
 

00:04:10.130 --> 00:04:11.979
section is highlighted down below we
scroll up we see the busy for 10

00:04:11.979 --> 00:04:11.989
scroll up we see the busy for 10
 

00:04:11.989 --> 00:04:13.750
scroll up we see the busy for 10
milliseconds overlaps with these

00:04:13.750 --> 00:04:13.760
milliseconds overlaps with these
 

00:04:13.760 --> 00:04:15.940
milliseconds overlaps with these
activity starts by viewing the thread

00:04:15.940 --> 00:04:15.950
activity starts by viewing the thread
 

00:04:15.950 --> 00:04:17.710
activity starts by viewing the thread
time slices in aggregate we can see that

00:04:17.710 --> 00:04:17.720
time slices in aggregate we can see that
 

00:04:17.720 --> 00:04:19.210
time slices in aggregate we can see that
in this section we spend a hundred and

00:04:19.210 --> 00:04:19.220
in this section we spend a hundred and
 

00:04:19.220 --> 00:04:21.550
in this section we spend a hundred and
seven milliseconds in blocking i/o we

00:04:21.550 --> 00:04:21.560
seven milliseconds in blocking i/o we
 

00:04:21.560 --> 00:04:22.870
seven milliseconds in blocking i/o we
could potentially shorten this amount of

00:04:22.870 --> 00:04:22.880
could potentially shorten this amount of
 

00:04:22.880 --> 00:04:24.430
could potentially shorten this amount of
time significantly if we move that

00:04:24.430 --> 00:04:24.440
time significantly if we move that
 

00:04:24.440 --> 00:04:25.779
time significantly if we move that
background activity to overlap with

00:04:25.779 --> 00:04:25.789
background activity to overlap with
 

00:04:25.789 --> 00:04:27.180
background activity to overlap with
something else

00:04:27.180 --> 00:04:27.190
something else
 

00:04:27.190 --> 00:04:29.380
something else
all I needed to do to collect these

00:04:29.380 --> 00:04:29.390
all I needed to do to collect these
 

00:04:29.390 --> 00:04:31.180
all I needed to do to collect these
traces was to clone the catapult get

00:04:31.180 --> 00:04:31.190
traces was to clone the catapult get
 

00:04:31.190 --> 00:04:33.550
traces was to clone the catapult get
repo and run this trace command you can

00:04:33.550 --> 00:04:33.560
repo and run this trace command you can
 

00:04:33.560 --> 00:04:35.380
repo and run this trace command you can
just open the output HTML file in your

00:04:35.380 --> 00:04:35.390
just open the output HTML file in your
 

00:04:35.390 --> 00:04:37.030
just open the output HTML file in your
browser and see everything that I showed

00:04:37.030 --> 00:04:37.040
browser and see everything that I showed
 

00:04:37.040 --> 00:04:39.430
browser and see everything that I showed
you today and this barely scratches the

00:04:39.430 --> 00:04:39.440
you today and this barely scratches the
 

00:04:39.440 --> 00:04:41.080
you today and this barely scratches the
surface of what you can do with systrace

00:04:41.080 --> 00:04:41.090
surface of what you can do with systrace
 

00:04:41.090 --> 00:04:43.510
surface of what you can do with systrace
I was able to identify these potential

00:04:43.510 --> 00:04:43.520
I was able to identify these potential
 

00:04:43.520 --> 00:04:45.250
I was able to identify these potential
opportunities in apps I don't work on

00:04:45.250 --> 00:04:45.260
opportunities in apps I don't work on
 

00:04:45.260 --> 00:04:47.380
opportunities in apps I don't work on
using only the trace points provided by

00:04:47.380 --> 00:04:47.390
using only the trace points provided by
 

00:04:47.390 --> 00:04:49.420
using only the trace points provided by
the system when you look at a trace of

00:04:49.420 --> 00:04:49.430
the system when you look at a trace of
 

00:04:49.430 --> 00:04:50.890
the system when you look at a trace of
your own app with the expertise you

00:04:50.890 --> 00:04:50.900
your own app with the expertise you
 

00:04:50.900 --> 00:04:52.900
your own app with the expertise you
already have it's gonna make a hundred

00:04:52.900 --> 00:04:52.910
already have it's gonna make a hundred
 

00:04:52.910 --> 00:04:55.750
already have it's gonna make a hundred
times more sense to you and you can even

00:04:55.750 --> 00:04:55.760
times more sense to you and you can even
 

00:04:55.760 --> 00:04:57.370
times more sense to you and you can even
add your own trace points inside your

00:04:57.370 --> 00:04:57.380
add your own trace points inside your
 

00:04:57.380 --> 00:04:59.290
add your own trace points inside your
app codes so you can see the context of

00:04:59.290 --> 00:04:59.300
app codes so you can see the context of
 

00:04:59.300 --> 00:05:00.880
app codes so you can see the context of
what's running in your app from within

00:05:00.880 --> 00:05:00.890
what's running in your app from within
 

00:05:00.890 --> 00:05:04.990
what's running in your app from within
the trace thank you

00:05:04.990 --> 00:05:05.000
the trace thank you
 

00:05:05.000 --> 00:05:13.370
the trace thank you
[Music]

00:05:13.370 --> 00:05:13.380
 

00:05:13.380 --> 00:05:19.810
[Music]

