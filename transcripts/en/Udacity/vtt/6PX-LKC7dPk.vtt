WEBVTT
Kind: captions
Language: en

00:00:00.070 --> 00:00:02.860
So that's kind of it for the main portion of this lecture. there,

00:00:02.860 --> 00:00:05.230
there's not going to be another quiz. But I just want to show you some

00:00:05.230 --> 00:00:08.189
more pieces and, and, and what would be a, a, a kind of

00:00:08.189 --> 00:00:11.660
a full web stack for a major website. That we haven't really talked

00:00:11.660 --> 00:00:14.120
about yet. So we've spent a lot of time in this lecture

00:00:14.120 --> 00:00:15.550
talking about the app servers and

00:00:15.550 --> 00:00:18.120
databases and cache. And the relationship between

00:00:18.120 --> 00:00:21.670
all these things. We also mentioned briefly a load balancer. There's some more

00:00:21.670 --> 00:00:25.780
pieces in here that a large website may have. So right now requests

00:00:25.780 --> 00:00:29.750
go from the Load Balancer to the Apps servers, who then

00:00:29.750 --> 00:00:32.000
go to the DBs, or to the Cache. What if we

00:00:32.000 --> 00:00:34.950
get so much traffic that one Load Balancer can't handle it?

00:00:34.950 --> 00:00:37.490
Well then we can add a second Load Balancer. But what

00:00:37.490 --> 00:00:42.160
load balances the Load Balancer? Well generally you something called DNS

00:00:42.160 --> 00:00:44.570
round robin. And what this means is DNS is the system

00:00:44.570 --> 00:00:47.230
that converts a domain name into a IP address, and that

00:00:47.230 --> 00:00:51.400
generally doesn't happen on your machines. Or that's rather, that's cached all

00:00:51.400 --> 00:00:54.130
over the internet. There are DNS machines all over

00:00:54.130 --> 00:00:56.720
the internet that all cache each other's information. So what

00:00:56.720 --> 00:00:58.330
you would do is you would give, you know, a

00:00:58.330 --> 00:01:02.230
website like udacity.com instead of mapping to, you know, one

00:01:02.230 --> 00:01:05.970
IP, it may map to, you know, multiple IPs,

00:01:05.970 --> 00:01:09.810
one for each load balancer. And then different machines in

00:01:09.810 --> 00:01:12.010
different parts of the world or different times of day

00:01:12.010 --> 00:01:17.000
or different requests might get sent to different load balancers.

00:01:17.000 --> 00:01:18.830
And that's one way to vary, vary high level

00:01:18.830 --> 00:01:22.510
to spread huge amounts of traffic across multiple load balancers.

00:01:22.510 --> 00:01:25.990
Another thing you may have either behind your load balancers

00:01:25.990 --> 00:01:29.370
or in front of them is another cache. And the,

00:01:29.370 --> 00:01:31.816
and this is like basically a just a, just an

00:01:31.816 --> 00:01:36.150
HTML cache. And this cache may, in, intercept requests before

00:01:36.150 --> 00:01:37.650
they even get to the app server. And this may

00:01:37.650 --> 00:01:42.160
cache HTML and images you know, all sorts of stuff

00:01:42.160 --> 00:01:44.800
that we know are not going to change for this user. Say,

00:01:44.800 --> 00:01:47.330
say it's a, a request comes in with no cookie, so no,

00:01:47.330 --> 00:01:49.850
the user isn't logged in. We don't have to do any dynamic

00:01:49.850 --> 00:01:52.240
request, we don't have to do anything special, well, we can just

00:01:52.240 --> 00:01:55.790
cache the entire result of the page. You know, the, all, all

00:01:55.790 --> 00:01:58.490
of the HTML we're going to turn not just the database query. Some

00:01:58.490 --> 00:02:03.050
examples of this technology are Varnish is a really popular one. We

00:02:03.050 --> 00:02:07.170
use this at a, Reddit and Hitmunk, it's really nice. Squid is

00:02:07.170 --> 00:02:09.900
another one. And a lot of people build their own because

00:02:09.900 --> 00:02:12.540
if you're at this scale you prob you, there's a high likelihood

00:02:12.540 --> 00:02:15.250
that you need a custom solution here. But you can have,

00:02:15.250 --> 00:02:17.920
basically more caches in front of your app server. Another thing you

00:02:17.920 --> 00:02:20.610
can do is use what's called a CDN. And say you,

00:02:20.610 --> 00:02:23.380
you know, you have got the whole internet here and CDN is

00:02:23.380 --> 00:02:27.235
basically a content delivery network. And

00:02:27.235 --> 00:02:29.520
these are usually third party companies

00:02:29.520 --> 00:02:31.920
that you would pay to cache your content all over the internet.

00:02:31.920 --> 00:02:35.520
So they would intercept your DNS requests. You know, they

00:02:35.520 --> 00:02:38.310
have, they have machines all over the world. You have your

00:02:38.310 --> 00:02:41.072
you basically have your DNS instead of pointing at your

00:02:41.072 --> 00:02:44.780
load balancers, point at the CDN. And it may point at,

00:02:44.780 --> 00:02:47.060
you know, may-, maybe do some round robin thing to

00:02:47.060 --> 00:02:50.520
different machines and that sort of thing. But basically these machines are

00:02:50.520 --> 00:02:53.730
just big caches, just kind of like this varnish cache here that

00:02:53.730 --> 00:02:56.990
say, okay, before I even send that request to my customer,

00:02:56.990 --> 00:03:01.050
do I already have it cached and these are basically just

00:03:01.050 --> 00:03:04.530
a big cache. So the name of the game is caching and

00:03:04.530 --> 00:03:06.780
the question is you know at what level do you cache

00:03:06.780 --> 00:03:09.610
and we've only been talking about caching DB requests but you can

00:03:09.610 --> 00:03:13.468
also cache you know, entire responses or you can pay somebody

00:03:13.468 --> 00:03:16.010
else to cache the entire response all over the internet and a

00:03:16.010 --> 00:03:18.850
lot of the biggest websites do this. You know Reddit pays a

00:03:18.850 --> 00:03:22.040
third party company to do so you know, Facebook and Google have

00:03:22.040 --> 00:03:24.650
data centers all over the world. And so, they do it themselves.

00:03:24.650 --> 00:03:28.290
But you know, as you grow and grow and grow, the challenges, you

00:03:28.290 --> 00:03:31.460
know, how much of this content actually is different on every request

00:03:31.460 --> 00:03:34.250
and how much is the same. And content that is the same can

00:03:34.250 --> 00:03:36.750
be cached. And you push that cache further and further away from

00:03:36.750 --> 00:03:39.710
you and closer and closer to your customer to get higher and higher

00:03:39.710 --> 00:03:43.450
speeds. And, when the content can't be cached, you know, you need

00:03:43.450 --> 00:03:47.260
to add lots of app servers and internal caches and internal, you know,

00:03:47.260 --> 00:03:50.210
custom systems for dealing with this type of load. So, that's kind of

00:03:50.210 --> 00:03:54.010
how the whole picture may look, you know, once you're at a huge scale.

00:03:54.010 --> 00:03:56.400
So, I hope you enjoyed this lecture. A lot of the stuff in

00:03:56.400 --> 00:03:59.380
this lecture I kind of learned the heard way, on Reddit, doing you know,

00:03:59.380 --> 00:04:01.395
starting with one machine, and then.

00:04:01.395 --> 00:04:03.410
Two machines and splitting apart the services

00:04:03.410 --> 00:04:05.680
on all of that. We made a lot of mistakes along the way and

00:04:05.680 --> 00:04:08.760
actually in unit seven is, is when I'll talk specifically about the process we

00:04:08.760 --> 00:04:12.620
went through of going from one machine to many machines as we were growing.

