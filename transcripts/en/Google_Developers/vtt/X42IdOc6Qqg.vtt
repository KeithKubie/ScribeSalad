WEBVTT
Kind: captions
Language: en

00:00:07.470 --> 00:00:08.080
Hey, everyone.

00:00:08.080 --> 00:00:10.350
Welcome to Abstract
Video Tutorials.

00:00:10.350 --> 00:00:11.730
Today, we're going to be
looking at how you can

00:00:11.730 --> 00:00:14.450
automatically send emails
from a spreadsheet.

00:00:14.450 --> 00:00:15.490
All right.

00:00:15.490 --> 00:00:19.430
Now, the tutorial actually
resides in our dev site at

00:00:19.430 --> 00:00:22.300
developers.googl
e.com/appsscript.

00:00:22.300 --> 00:00:25.420
If you go to this intermediate
tutorial section here and go

00:00:25.420 --> 00:00:27.070
to Send Emails With a

00:00:27.070 --> 00:00:29.900
Spreadsheet, here's a tutorial.

00:00:29.900 --> 00:00:31.300
Now, as it says here,
it takes 10 minutes.

00:00:31.300 --> 00:00:32.750
But it's actually much
quicker than that.

00:00:32.750 --> 00:00:34.796
So we'll run through that
really quickly.

00:00:34.796 --> 00:00:37.050
I'm going to get rid of
these extra tabs.

00:00:37.050 --> 00:00:39.200
Now, this is a container-bound
script.

00:00:39.200 --> 00:00:41.390
So it lives within
a spreadsheet.

00:00:41.390 --> 00:00:43.520
So first, we need to go to
Drive and create a new

00:00:43.520 --> 00:00:46.390
spreadsheet.

00:00:46.390 --> 00:00:47.826
We'll give it an appropriate
name.

00:00:52.200 --> 00:00:53.200
All right.

00:00:53.200 --> 00:00:56.530
In order to paste this code
snippet in, we need to access

00:00:56.530 --> 00:00:58.910
the script editor, which
you get to from

00:00:58.910 --> 00:01:01.300
Tools, Script Editor.

00:01:01.300 --> 00:01:04.690
Let's grab this code here.

00:01:04.690 --> 00:01:08.880
And once the script editor
opens, this will paste the

00:01:08.880 --> 00:01:17.250
code here from the tutorial and
give this a name as well--

00:01:17.250 --> 00:01:20.178
if I can spell correctly,
but it doesn't matter.

00:01:20.178 --> 00:01:21.030
Save it.

00:01:21.030 --> 00:01:24.280
Now, the tutorial says that the
set up for the script is

00:01:24.280 --> 00:01:27.970
you need some fake data in your
spreadsheet so that you

00:01:27.970 --> 00:01:29.330
can test it out.

00:01:29.330 --> 00:01:31.430
So let's say, for this example,
we're planning a

00:01:31.430 --> 00:01:36.220
party and we get together in a
room and in a spreadsheet, we

00:01:36.220 --> 00:01:37.890
decide who does what.

00:01:37.890 --> 00:01:44.590
In this email, we have an
Email Address column.

00:01:44.590 --> 00:01:49.540
And then we also have
a Message column.

00:01:49.540 --> 00:01:52.660
Now, because this is a test,
we're going to be sending all

00:01:52.660 --> 00:01:54.070
the emails to a test account.

00:01:54.070 --> 00:01:58.100
But as you can imagine,
this could go to

00:01:58.100 --> 00:01:59.350
various different people.

00:01:59.350 --> 00:02:01.890
So let's just send
two emails here.

00:02:01.890 --> 00:02:06.730
And the message will be "Pick
up the balloons." And then

00:02:06.730 --> 00:02:11.640
this one will be "Invite
guests." So if this works

00:02:11.640 --> 00:02:15.370
properly, this person will
get an email saying, as a

00:02:15.370 --> 00:02:17.260
reminder, to pick up the
balloons, and this person will

00:02:17.260 --> 00:02:19.330
get an invite guests reminder.

00:02:19.330 --> 00:02:21.990
We'll go here into our
script editor and run

00:02:21.990 --> 00:02:23.300
the send emails function.

00:02:26.150 --> 00:02:30.470
Now, you need to authorize it to
use Gmail to send messages

00:02:30.470 --> 00:02:31.200
on your behalf.

00:02:31.200 --> 00:02:33.976
So I'll go ahead and
do that here.

00:02:33.976 --> 00:02:37.870
I'll go ahead and
run it again.

00:02:37.870 --> 00:02:39.790
Now, it ran.

00:02:39.790 --> 00:02:43.910
When we go to our Gmail, we'll
see the two messages from the

00:02:43.910 --> 00:02:45.000
current time.

00:02:45.000 --> 00:02:49.180
And the first message is "Invite
guests." And the next

00:02:49.180 --> 00:02:52.970
one is "Pick up the balloons,"
as we expected.

00:02:52.970 --> 00:02:55.520
And now, an extension to the
script that's noted in the

00:02:55.520 --> 00:03:00.580
tutorial-- let's go ahead
and delete the old data.

00:03:00.580 --> 00:03:02.075
Actually, we didn't
need to do that.

00:03:04.810 --> 00:03:11.750
Grab this other code right here
and just copy paste over

00:03:11.750 --> 00:03:13.000
the existing code.

00:03:15.940 --> 00:03:19.180
Now, this will give you a
Send Emails To method.

00:03:19.180 --> 00:03:22.940
When you run it, you'll see that
in the spreadsheet, it

00:03:22.940 --> 00:03:25.220
marks a third column
with EMAIL_SENT.

00:03:25.220 --> 00:03:29.240
This is so that if you wanted
to resume running the script

00:03:29.240 --> 00:03:30.930
at a later date, it's not
going to send these same

00:03:30.930 --> 00:03:32.250
emails to these same
people again.

00:03:32.250 --> 00:03:33.590
It'll mark it as done.

00:03:33.590 --> 00:03:36.180
And if you go back to your
inbox, you'll see two more

00:03:36.180 --> 00:03:39.510
emails arrive.

00:03:39.510 --> 00:03:43.940
As just a proof, if you click
it again, because it already

00:03:43.940 --> 00:03:45.810
has that EMAIL_SENT column,
you're not going to see any

00:03:45.810 --> 00:03:47.470
more emails come through.

00:03:47.470 --> 00:03:48.850
That, in a nutshell, is it.

00:03:48.850 --> 00:03:51.780
Now, let me just briefly walk
you through the code here.

00:03:51.780 --> 00:03:54.090
All it does is it gets the
active spreadsheet.

00:03:54.090 --> 00:03:56.780
It says that the start
row is 2 because you

00:03:56.780 --> 00:03:58.440
have a header row.

00:03:58.440 --> 00:04:02.310
And it gets the data from that
sheet as a 2D array.

00:04:02.310 --> 00:04:07.240
And within this, it goes through
that array and assigns

00:04:07.240 --> 00:04:09.950
each of the columns to a
variable here-- email address

00:04:09.950 --> 00:04:11.870
variable and the message
variable.

00:04:11.870 --> 00:04:13.550
And this is the advanced
example.

00:04:13.550 --> 00:04:15.510
So it also has the EMAIL_SENT
variable to

00:04:15.510 --> 00:04:17.320
mark that third column.

00:04:17.320 --> 00:04:20.459
And basically, all it does is
MailApp.sendEmail, specifying

00:04:20.459 --> 00:04:23.830
the address, the subject of
the message, and then the

00:04:23.830 --> 00:04:27.060
actual message itself, and
then sends that through.

00:04:27.060 --> 00:04:30.730
And here, what you see is it's
marking the third column with

00:04:30.730 --> 00:04:34.280
the value in emailSent which,
if you scroll up, is

00:04:34.280 --> 00:04:36.330
EMAIL_SENT.

00:04:36.330 --> 00:04:38.750
And that's it-- as
simple as that.

00:04:38.750 --> 00:04:39.910
I hope you enjoyed it.

00:04:39.910 --> 00:04:41.940
Tune back for some of
our other tutorials.

00:04:41.940 --> 00:04:43.650
My name, again, is
Kalyan Reddy.

00:04:43.650 --> 00:04:44.900
Goodbye.

