WEBVTT
Kind: captions
Language: en

00:00:00.852 --> 00:00:03.616
MANDY WAITE: Last week I had to
rename an entity kind name

00:00:03.616 --> 00:00:05.568
for Google App Engine Java.

00:00:05.568 --> 00:00:09.900
I had to write one time code in
my application to duplicate

00:00:09.900 --> 00:00:13.250
each entity to the new kind
name, delete old instances,

00:00:13.250 --> 00:00:16.370
then remove the one time code
and re-deploy the application.

00:00:16.370 --> 00:00:17.620
Is there an easier way
of doing this?

00:00:20.730 --> 00:00:23.210
FRED SAUER: I think
this is a little

00:00:23.210 --> 00:00:26.700
bit of a longer question.

00:00:26.700 --> 00:00:29.490
But I think the person who asked
it is actually on the

00:00:29.490 --> 00:00:31.080
right track in how to do this.

00:00:31.080 --> 00:00:33.690
So first let me contrast this
with how you would do things

00:00:33.690 --> 00:00:37.050
in a relational database world,
where you have a fixed

00:00:37.050 --> 00:00:38.690
schema for your database.

00:00:38.690 --> 00:00:42.770
So if you have, for example, a
table in a relational database

00:00:42.770 --> 00:00:45.830
that was called Customer and you
decide for whatever reason

00:00:45.830 --> 00:00:48.780
you want to restructure that
and you want to call it

00:00:48.780 --> 00:00:51.450
Customer 2, what you would
actually have to do is you

00:00:51.450 --> 00:00:53.430
would have to declare a
maintenance window.

00:00:53.430 --> 00:00:55.490
You'd have to take
the website down.

00:00:55.490 --> 00:00:58.760
And you would then perform
the database maintenance.

00:00:58.760 --> 00:01:02.010
You would rename that table,
which locks the entire table

00:01:02.010 --> 00:01:03.380
and all data in it.

00:01:03.380 --> 00:01:05.870
You would modify the code in
the application server.

00:01:05.870 --> 00:01:07.550
You'd bring everything
back up.

00:01:07.550 --> 00:01:10.820
And maybe half an hour later,
maybe a few hours later, you'd

00:01:10.820 --> 00:01:13.920
be up and running.

00:01:13.920 --> 00:01:17.600
And that was maybe acceptable
a number of years ago when

00:01:17.600 --> 00:01:19.780
websites regularly went
under maintenance.

00:01:19.780 --> 00:01:24.350
And a lot of systems were
just 8:00 to 5:00.

00:01:24.350 --> 00:01:26.740
But now, we live in a world
where everyone is connected to

00:01:26.740 --> 00:01:28.110
the internet.

00:01:28.110 --> 00:01:31.450
It's always 5:00 somewhere.

00:01:31.450 --> 00:01:33.280
Everyone needs to get to
your site all the time.

00:01:33.280 --> 00:01:36.470
And so what you really want is
a system where you can make

00:01:36.470 --> 00:01:39.760
changes while the system's
up and running.

00:01:39.760 --> 00:01:42.490
And part of the question
actually has the answer here

00:01:42.490 --> 00:01:44.220
in how you do this.

00:01:44.220 --> 00:01:48.060
So the specific question was,
how do I rename an entity?

00:01:48.060 --> 00:01:50.870
But you can generalize
the question.

00:01:50.870 --> 00:01:54.430
What if you wanted to add new
required properties to a

00:01:54.430 --> 00:01:56.760
particular entity in
the data store?

00:01:56.760 --> 00:01:58.030
Or you wanted to restructure?

00:01:58.030 --> 00:02:00.740
You're going from three separate
entities and you're

00:02:00.740 --> 00:02:03.545
kind of combining them into this
new data structure where

00:02:03.545 --> 00:02:05.780
you put everything
in one entity.

00:02:05.780 --> 00:02:07.830
And these are common
refactorings that will happen

00:02:07.830 --> 00:02:09.210
with your application.

00:02:09.210 --> 00:02:12.760
And so the way to do this is
to think about this live

00:02:12.760 --> 00:02:15.290
system that's always handling
transactions.

00:02:15.290 --> 00:02:18.250
And it's actually sort of
a three step process.

00:02:18.250 --> 00:02:21.370
In the first step, what you
want to do is change your

00:02:21.370 --> 00:02:25.510
application so that any time
that you write out an entity,

00:02:25.510 --> 00:02:29.570
you're writing it out in the
new format or with the new

00:02:29.570 --> 00:02:32.150
entity name, with the new
properties, the new

00:02:32.150 --> 00:02:33.360
constraints.

00:02:33.360 --> 00:02:36.340
But at the same time, that every
time you do a read, you

00:02:36.340 --> 00:02:38.850
first look for the new
kind of entity.

00:02:38.850 --> 00:02:42.210
And if you don't find it, you
look for the old kind.

00:02:42.210 --> 00:02:43.870
And you deploy that.

00:02:43.870 --> 00:02:47.340
And as soon as you deploy that,
your application will

00:02:47.340 --> 00:02:49.020
slowly begin migrating data.

00:02:49.020 --> 00:02:52.410
Any user that logs in and
touches their data, those

00:02:52.410 --> 00:02:55.640
entities, those rows in
the data store, will

00:02:55.640 --> 00:02:57.230
begin to get migrated.

00:02:57.230 --> 00:03:00.570
And now actually, you're in
a perfectly happy state.

00:03:00.570 --> 00:03:02.560
Your application will continue
to function.

00:03:02.560 --> 00:03:05.930
There's a little bit of extra
read overhead for people as

00:03:05.930 --> 00:03:06.930
they're migrating.

00:03:06.930 --> 00:03:10.490
But you now have all the time in
the world to make the full

00:03:10.490 --> 00:03:12.260
migration happen.

00:03:12.260 --> 00:03:14.400
You're still serving
live traffic.

00:03:14.400 --> 00:03:18.510
And now, depending on what you
want to do, you can either

00:03:18.510 --> 00:03:20.380
say, we'll just leave
it like that.

00:03:20.380 --> 00:03:23.490
But oftentimes, that extra code
there is complexity you

00:03:23.490 --> 00:03:24.510
don't want.

00:03:24.510 --> 00:03:27.980
And you might want to
get rid of that.

00:03:27.980 --> 00:03:32.460
And so what you do is then you
run what we call a MapReduce.

00:03:32.460 --> 00:03:35.730
But you essentially iterate over
all the entities of the

00:03:35.730 --> 00:03:36.835
old kind in the data store.

00:03:36.835 --> 00:03:38.390
And you just touch each one.

00:03:38.390 --> 00:03:40.490
You can do that in application
logic.

00:03:40.490 --> 00:03:43.330
And as soon as you touch
each one, it's

00:03:43.330 --> 00:03:45.470
migrated to the new structure.

00:03:45.470 --> 00:03:48.310
And you can take an hour
to do that, a day.

00:03:48.310 --> 00:03:51.595
You can take weeks or months,
really, however long it takes.

00:03:51.595 --> 00:03:54.300
And once everything's been
migrated, then you go back

00:03:54.300 --> 00:03:57.210
into your application and you
just remove that extra code in

00:03:57.210 --> 00:03:58.520
the read handler.

00:03:58.520 --> 00:04:00.050
And your app's migrated.

00:04:00.050 --> 00:04:03.330
And many developers have many of
these migrations kind of in

00:04:03.330 --> 00:04:05.030
place at once.

00:04:05.030 --> 00:04:07.820
They might introduce a few
migrations incrementally.

00:04:07.820 --> 00:04:10.650
And then maybe once a quarter,
do a clean up and get rid of

00:04:10.650 --> 00:04:12.470
some of the code.

00:04:12.470 --> 00:04:15.210
It's not the case that you have
to migrate everything in

00:04:15.210 --> 00:04:16.690
a short window.

00:04:16.690 --> 00:04:19.486
Think about doing things
live and in real time.

00:04:19.486 --> 00:04:20.130
MANDY WAITE: Wow, OK.

00:04:20.130 --> 00:04:21.680
That's cool.

