WEBVTT
Kind: captions
Language: en

00:00:06.049 --> 00:00:09.259
hi my name is Chris P I'm a developer

00:00:09.259 --> 00:00:09.269
hi my name is Chris P I'm a developer
 

00:00:09.269 --> 00:00:11.390
hi my name is Chris P I'm a developer
advocate on the Google cast team in this

00:00:11.390 --> 00:00:11.400
advocate on the Google cast team in this
 

00:00:11.400 --> 00:00:13.070
advocate on the Google cast team in this
episode of dev bytes I'm going to cover

00:00:13.070 --> 00:00:13.080
episode of dev bytes I'm going to cover
 

00:00:13.080 --> 00:00:14.540
episode of dev bytes I'm going to cover
some of the essentials of creating a

00:00:14.540 --> 00:00:14.550
some of the essentials of creating a
 

00:00:14.550 --> 00:00:17.320
some of the essentials of creating a
cast web sender app that runs in Chrome

00:00:17.320 --> 00:00:17.330
cast web sender app that runs in Chrome
 

00:00:17.330 --> 00:00:19.939
cast web sender app that runs in Chrome
currently the Google cast SDK is

00:00:19.939 --> 00:00:19.949
currently the Google cast SDK is
 

00:00:19.949 --> 00:00:21.920
currently the Google cast SDK is
available for three platforms Chrome

00:00:21.920 --> 00:00:21.930
available for three platforms Chrome
 

00:00:21.930 --> 00:00:25.340
available for three platforms Chrome
Android and iOS in this video I will

00:00:25.340 --> 00:00:25.350
Android and iOS in this video I will
 

00:00:25.350 --> 00:00:27.529
Android and iOS in this video I will
focus exclusively on the SDK for Chrome

00:00:27.529 --> 00:00:27.539
focus exclusively on the SDK for Chrome
 

00:00:27.539 --> 00:00:30.980
focus exclusively on the SDK for Chrome
in order to build a Google cast web

00:00:30.980 --> 00:00:30.990
in order to build a Google cast web
 

00:00:30.990 --> 00:00:32.779
in order to build a Google cast web
sender application you will need to

00:00:32.779 --> 00:00:32.789
sender application you will need to
 

00:00:32.789 --> 00:00:34.790
sender application you will need to
install the Google Chrome browser and

00:00:34.790 --> 00:00:34.800
install the Google Chrome browser and
 

00:00:34.800 --> 00:00:38.000
install the Google Chrome browser and
the Google cast Chrome extension

00:00:38.000 --> 00:00:38.010
the Google cast Chrome extension
 

00:00:38.010 --> 00:00:39.319
the Google cast Chrome extension
if you already have chrome installed

00:00:39.319 --> 00:00:39.329
if you already have chrome installed
 

00:00:39.329 --> 00:00:41.809
if you already have chrome installed
make sure you are on version 32 or

00:00:41.809 --> 00:00:41.819
make sure you are on version 32 or
 

00:00:41.819 --> 00:00:44.809
make sure you are on version 32 or
higher to get the cast extension visit

00:00:44.809 --> 00:00:44.819
higher to get the cast extension visit
 

00:00:44.819 --> 00:00:46.669
higher to get the cast extension visit
the Google Chrome Web Store and search

00:00:46.669 --> 00:00:46.679
the Google Chrome Web Store and search
 

00:00:46.679 --> 00:00:49.369
the Google Chrome Web Store and search
for google cast the cast extension is

00:00:49.369 --> 00:00:49.379
for google cast the cast extension is
 

00:00:49.379 --> 00:00:51.079
for google cast the cast extension is
what allows web centers to communicate

00:00:51.079 --> 00:00:51.089
what allows web centers to communicate
 

00:00:51.089 --> 00:00:53.569
what allows web centers to communicate
with cast receivers with chrome

00:00:53.569 --> 00:00:53.579
with cast receivers with chrome
 

00:00:53.579 --> 00:00:55.279
with cast receivers with chrome
installed and the cast extension ready

00:00:55.279 --> 00:00:55.289
installed and the cast extension ready
 

00:00:55.289 --> 00:00:57.139
installed and the cast extension ready
to go let's take a peek at the cast

00:00:57.139 --> 00:00:57.149
to go let's take a peek at the cast
 

00:00:57.149 --> 00:00:59.329
to go let's take a peek at the cast
sender lifecycle for a moment once a

00:00:59.329 --> 00:00:59.339
sender lifecycle for a moment once a
 

00:00:59.339 --> 00:01:00.949
sender lifecycle for a moment once a
cast sender application has been loaded

00:01:00.949 --> 00:01:00.959
cast sender application has been loaded
 

00:01:00.959 --> 00:01:03.289
cast sender application has been loaded
the Apple detected initialized the cast

00:01:03.289 --> 00:01:03.299
the Apple detected initialized the cast
 

00:01:03.299 --> 00:01:05.539
the Apple detected initialized the cast
api's get notified about available

00:01:05.539 --> 00:01:05.549
api's get notified about available
 

00:01:05.549 --> 00:01:07.429
api's get notified about available
receivers connect to a receiver and

00:01:07.429 --> 00:01:07.439
receivers connect to a receiver and
 

00:01:07.439 --> 00:01:09.109
receivers connect to a receiver and
begin exchanging messages over the

00:01:09.109 --> 00:01:09.119
begin exchanging messages over the
 

00:01:09.119 --> 00:01:11.300
begin exchanging messages over the
established connection closing out the

00:01:11.300 --> 00:01:11.310
established connection closing out the
 

00:01:11.310 --> 00:01:12.889
established connection closing out the
life cycle is disconnection from a

00:01:12.889 --> 00:01:12.899
life cycle is disconnection from a
 

00:01:12.899 --> 00:01:14.870
life cycle is disconnection from a
receiver device let's take a closer look

00:01:14.870 --> 00:01:14.880
receiver device let's take a closer look
 

00:01:14.880 --> 00:01:17.569
receiver device let's take a closer look
at each phase of the lifecycle chrome

00:01:17.569 --> 00:01:17.579
at each phase of the lifecycle chrome
 

00:01:17.579 --> 00:01:19.340
at each phase of the lifecycle chrome
sender applications are constructed

00:01:19.340 --> 00:01:19.350
sender applications are constructed
 

00:01:19.350 --> 00:01:22.550
sender applications are constructed
using HTML javascript and CSS sender

00:01:22.550 --> 00:01:22.560
using HTML javascript and CSS sender
 

00:01:22.560 --> 00:01:24.020
using HTML javascript and CSS sender
apps can be hosted locally during

00:01:24.020 --> 00:01:24.030
apps can be hosted locally during
 

00:01:24.030 --> 00:01:25.370
apps can be hosted locally during
development and then moved to production

00:01:25.370 --> 00:01:25.380
development and then moved to production
 

00:01:25.380 --> 00:01:28.069
development and then moved to production
servers when publishing a Google hosted

00:01:28.069 --> 00:01:28.079
servers when publishing a Google hosted
 

00:01:28.079 --> 00:01:30.679
servers when publishing a Google hosted
cast sender JavaScript resource provides

00:01:30.679 --> 00:01:30.689
cast sender JavaScript resource provides
 

00:01:30.689 --> 00:01:32.660
cast sender JavaScript resource provides
the API that your sender application

00:01:32.660 --> 00:01:32.670
the API that your sender application
 

00:01:32.670 --> 00:01:34.489
the API that your sender application
uses to communicate with the cast

00:01:34.489 --> 00:01:34.499
uses to communicate with the cast
 

00:01:34.499 --> 00:01:36.770
uses to communicate with the cast
extension which manages the interaction

00:01:36.770 --> 00:01:36.780
extension which manages the interaction
 

00:01:36.780 --> 00:01:39.440
extension which manages the interaction
with cast receivers a chrome sender

00:01:39.440 --> 00:01:39.450
with cast receivers a chrome sender
 

00:01:39.450 --> 00:01:41.239
with cast receivers a chrome sender
application must detect and initialize

00:01:41.239 --> 00:01:41.249
application must detect and initialize
 

00:01:41.249 --> 00:01:43.370
application must detect and initialize
the cast API before communicating with

00:01:43.370 --> 00:01:43.380
the cast API before communicating with
 

00:01:43.380 --> 00:01:46.399
the cast API before communicating with
the cast receiver prior to using the

00:01:46.399 --> 00:01:46.409
the cast receiver prior to using the
 

00:01:46.409 --> 00:01:48.289
the cast receiver prior to using the
cast API is the web sender application

00:01:48.289 --> 00:01:48.299
cast API is the web sender application
 

00:01:48.299 --> 00:01:49.459
cast API is the web sender application
needs to first check that they are

00:01:49.459 --> 00:01:49.469
needs to first check that they are
 

00:01:49.469 --> 00:01:51.559
needs to first check that they are
available this is accomplished by

00:01:51.559 --> 00:01:51.569
available this is accomplished by
 

00:01:51.569 --> 00:01:53.809
available this is accomplished by
looking for the existence of chrome cast

00:01:53.809 --> 00:01:53.819
looking for the existence of chrome cast
 

00:01:53.819 --> 00:01:56.239
looking for the existence of chrome cast
JavaScript namespace and checking the

00:01:56.239 --> 00:01:56.249
JavaScript namespace and checking the
 

00:01:56.249 --> 00:01:59.139
JavaScript namespace and checking the
chromecast dot is available boolean flag

00:01:59.139 --> 00:01:59.149
chromecast dot is available boolean flag
 

00:01:59.149 --> 00:02:00.889
chromecast dot is available boolean flag
depending on how the web sender

00:02:00.889 --> 00:02:00.899
depending on how the web sender
 

00:02:00.899 --> 00:02:03.260
depending on how the web sender
application loads its resources it may

00:02:03.260 --> 00:02:03.270
application loads its resources it may
 

00:02:03.270 --> 00:02:05.359
application loads its resources it may
need to set up a retry timeout to detect

00:02:05.359 --> 00:02:05.369
need to set up a retry timeout to detect
 

00:02:05.369 --> 00:02:08.900
need to set up a retry timeout to detect
the cast api's with the detection out of

00:02:08.900 --> 00:02:08.910
the cast api's with the detection out of
 

00:02:08.910 --> 00:02:10.699
the cast api's with the detection out of
the way the web sender application is

00:02:10.699 --> 00:02:10.709
the way the web sender application is
 

00:02:10.709 --> 00:02:13.240
the way the web sender application is
now ready to initialize the cast API

00:02:13.240 --> 00:02:13.250
now ready to initialize the cast API
 

00:02:13.250 --> 00:02:14.750
now ready to initialize the cast API
initialization connects

00:02:14.750 --> 00:02:14.760
initialization connects
 

00:02:14.760 --> 00:02:16.670
initialization connects
web sender to the cast extension and

00:02:16.670 --> 00:02:16.680
web sender to the cast extension and
 

00:02:16.680 --> 00:02:18.470
web sender to the cast extension and
let's the extension know that the web

00:02:18.470 --> 00:02:18.480
let's the extension know that the web
 

00:02:18.480 --> 00:02:20.780
let's the extension know that the web
app is cast enabled performing the

00:02:20.780 --> 00:02:20.790
app is cast enabled performing the
 

00:02:20.790 --> 00:02:22.520
app is cast enabled performing the
initialization consists of creating a

00:02:22.520 --> 00:02:22.530
initialization consists of creating a
 

00:02:22.530 --> 00:02:24.199
initialization consists of creating a
send a request object that holds the

00:02:24.199 --> 00:02:24.209
send a request object that holds the
 

00:02:24.209 --> 00:02:26.240
send a request object that holds the
application ID of the receiver that will

00:02:26.240 --> 00:02:26.250
application ID of the receiver that will
 

00:02:26.250 --> 00:02:29.270
application ID of the receiver that will
launch then constructing a new API

00:02:29.270 --> 00:02:29.280
launch then constructing a new API
 

00:02:29.280 --> 00:02:31.250
launch then constructing a new API
config object which takes the session

00:02:31.250 --> 00:02:31.260
config object which takes the session
 

00:02:31.260 --> 00:02:33.050
config object which takes the session
request object as well as a session

00:02:33.050 --> 00:02:33.060
request object as well as a session
 

00:02:33.060 --> 00:02:35.289
request object as well as a session
listener and receiver listener callbacks

00:02:35.289 --> 00:02:35.299
listener and receiver listener callbacks
 

00:02:35.299 --> 00:02:38.089
listener and receiver listener callbacks
lastly the web sender calls the

00:02:38.089 --> 00:02:38.099
lastly the web sender calls the
 

00:02:38.099 --> 00:02:40.690
lastly the web sender calls the
chromecast initialize function and

00:02:40.690 --> 00:02:40.700
chromecast initialize function and
 

00:02:40.700 --> 00:02:43.670
chromecast initialize function and
provides the API config object along

00:02:43.670 --> 00:02:43.680
provides the API config object along
 

00:02:43.680 --> 00:02:46.789
provides the API config object along
with the success and ere call back when

00:02:46.789 --> 00:02:46.799
with the success and ere call back when
 

00:02:46.799 --> 00:02:49.099
with the success and ere call back when
the success callback is invoked the web

00:02:49.099 --> 00:02:49.109
the success callback is invoked the web
 

00:02:49.109 --> 00:02:51.050
the success callback is invoked the web
application has successfully initialized

00:02:51.050 --> 00:02:51.060
application has successfully initialized
 

00:02:51.060 --> 00:02:53.509
application has successfully initialized
the cast api's however there is one more

00:02:53.509 --> 00:02:53.519
the cast api's however there is one more
 

00:02:53.519 --> 00:02:55.339
the cast api's however there is one more
thing that the application needs to wait

00:02:55.339 --> 00:02:55.349
thing that the application needs to wait
 

00:02:55.349 --> 00:02:56.830
thing that the application needs to wait
on before proceeding

00:02:56.830 --> 00:02:56.840
on before proceeding
 

00:02:56.840 --> 00:03:00.020
on before proceeding
looking at the API config instructor the

00:03:00.020 --> 00:03:00.030
looking at the API config instructor the
 

00:03:00.030 --> 00:03:01.910
looking at the API config instructor the
receiver listener passed in performs an

00:03:01.910 --> 00:03:01.920
receiver listener passed in performs an
 

00:03:01.920 --> 00:03:03.740
receiver listener passed in performs an
important role in the discovery of cast

00:03:03.740 --> 00:03:03.750
important role in the discovery of cast
 

00:03:03.750 --> 00:03:06.920
important role in the discovery of cast
devices cast web sender applications

00:03:06.920 --> 00:03:06.930
devices cast web sender applications
 

00:03:06.930 --> 00:03:08.899
devices cast web sender applications
delegate the management of available

00:03:08.899 --> 00:03:08.909
delegate the management of available
 

00:03:08.909 --> 00:03:10.550
delegate the management of available
cast receiver devices to the cast

00:03:10.550 --> 00:03:10.560
cast receiver devices to the cast
 

00:03:10.560 --> 00:03:13.039
cast receiver devices to the cast
extension the API config that the app

00:03:13.039 --> 00:03:13.049
extension the API config that the app
 

00:03:13.049 --> 00:03:14.780
extension the API config that the app
creates is passed along to the cast

00:03:14.780 --> 00:03:14.790
creates is passed along to the cast
 

00:03:14.790 --> 00:03:16.759
creates is passed along to the cast
extension and the receiver listener is

00:03:16.759 --> 00:03:16.769
extension and the receiver listener is
 

00:03:16.769 --> 00:03:19.430
extension and the receiver listener is
invoked the receiver listener is passed

00:03:19.430 --> 00:03:19.440
invoked the receiver listener is passed
 

00:03:19.440 --> 00:03:20.869
invoked the receiver listener is passed
a string parameter that should be

00:03:20.869 --> 00:03:20.879
a string parameter that should be
 

00:03:20.879 --> 00:03:23.539
a string parameter that should be
checked for the available value any

00:03:23.539 --> 00:03:23.549
checked for the available value any
 

00:03:23.549 --> 00:03:25.580
checked for the available value any
other values should be treated as no

00:03:25.580 --> 00:03:25.590
other values should be treated as no
 

00:03:25.590 --> 00:03:27.920
other values should be treated as no
receiver devices available the receiver

00:03:27.920 --> 00:03:27.930
receiver devices available the receiver
 

00:03:27.930 --> 00:03:29.539
receiver devices available the receiver
listener will be invoked whenever there

00:03:29.539 --> 00:03:29.549
listener will be invoked whenever there
 

00:03:29.549 --> 00:03:30.979
listener will be invoked whenever there
is a change in the availability of

00:03:30.979 --> 00:03:30.989
is a change in the availability of
 

00:03:30.989 --> 00:03:33.470
is a change in the availability of
receiver devices the web sender should

00:03:33.470 --> 00:03:33.480
receiver devices the web sender should
 

00:03:33.480 --> 00:03:35.360
receiver devices the web sender should
display the cast icon when the receiver

00:03:35.360 --> 00:03:35.370
display the cast icon when the receiver
 

00:03:35.370 --> 00:03:37.460
display the cast icon when the receiver
listener reports cast receivers are

00:03:37.460 --> 00:03:37.470
listener reports cast receivers are
 

00:03:37.470 --> 00:03:40.729
listener reports cast receivers are
available now that the application knows

00:03:40.729 --> 00:03:40.739
available now that the application knows
 

00:03:40.739 --> 00:03:43.099
available now that the application knows
when to show a cast icon to the user we

00:03:43.099 --> 00:03:43.109
when to show a cast icon to the user we
 

00:03:43.109 --> 00:03:46.099
when to show a cast icon to the user we
can explore how to request a session on

00:03:46.099 --> 00:03:46.109
can explore how to request a session on
 

00:03:46.109 --> 00:03:48.680
can explore how to request a session on
a cast receiver device it's actually

00:03:48.680 --> 00:03:48.690
a cast receiver device it's actually
 

00:03:48.690 --> 00:03:51.080
a cast receiver device it's actually
quite simple the sender can call on

00:03:51.080 --> 00:03:51.090
quite simple the sender can call on
 

00:03:51.090 --> 00:03:54.199
quite simple the sender can call on
chromecast request session and provide a

00:03:54.199 --> 00:03:54.209
chromecast request session and provide a
 

00:03:54.209 --> 00:03:56.960
chromecast request session and provide a
success in air callback the success

00:03:56.960 --> 00:03:56.970
success in air callback the success
 

00:03:56.970 --> 00:03:58.879
success in air callback the success
callback will be passed a cast session

00:03:58.879 --> 00:03:58.889
callback will be passed a cast session
 

00:03:58.889 --> 00:04:01.399
callback will be passed a cast session
object that can be decorated with update

00:04:01.399 --> 00:04:01.409
object that can be decorated with update
 

00:04:01.409 --> 00:04:04.159
object that can be decorated with update
listeners the session card success

00:04:04.159 --> 00:04:04.169
listeners the session card success
 

00:04:04.169 --> 00:04:06.259
listeners the session card success
callback is dependent on user action and

00:04:06.259 --> 00:04:06.269
callback is dependent on user action and
 

00:04:06.269 --> 00:04:09.099
callback is dependent on user action and
may not be invoked let's take a look

00:04:09.099 --> 00:04:09.109
may not be invoked let's take a look
 

00:04:09.109 --> 00:04:11.449
may not be invoked let's take a look
use the receiver listener as a way to

00:04:11.449 --> 00:04:11.459
use the receiver listener as a way to
 

00:04:11.459 --> 00:04:13.309
use the receiver listener as a way to
determine if the web sender application

00:04:13.309 --> 00:04:13.319
determine if the web sender application
 

00:04:13.319 --> 00:04:15.189
determine if the web sender application
should show the cast icon to the user

00:04:15.189 --> 00:04:15.199
should show the cast icon to the user
 

00:04:15.199 --> 00:04:18.199
should show the cast icon to the user
when the user clicks the cast icon the

00:04:18.199 --> 00:04:18.209
when the user clicks the cast icon the
 

00:04:18.209 --> 00:04:20.149
when the user clicks the cast icon the
cast extension will show a list of

00:04:20.149 --> 00:04:20.159
cast extension will show a list of
 

00:04:20.159 --> 00:04:22.430
cast extension will show a list of
available cast receiver devices that can

00:04:22.430 --> 00:04:22.440
available cast receiver devices that can
 

00:04:22.440 --> 00:04:25.490
available cast receiver devices that can
be connected to by the sender if the

00:04:25.490 --> 00:04:25.500
be connected to by the sender if the
 

00:04:25.500 --> 00:04:27.920
be connected to by the sender if the
user closes the list without selecting a

00:04:27.920 --> 00:04:27.930
user closes the list without selecting a
 

00:04:27.930 --> 00:04:28.640
user closes the list without selecting a
device

00:04:28.640 --> 00:04:28.650
device
 

00:04:28.650 --> 00:04:31.040
device
the request session air callback will be

00:04:31.040 --> 00:04:31.050
the request session air callback will be
 

00:04:31.050 --> 00:04:33.530
the request session air callback will be
invoked otherwise if the user selects a

00:04:33.530 --> 00:04:33.540
invoked otherwise if the user selects a
 

00:04:33.540 --> 00:04:35.330
invoked otherwise if the user selects a
cast receiver device then the extension

00:04:35.330 --> 00:04:35.340
cast receiver device then the extension
 

00:04:35.340 --> 00:04:36.890
cast receiver device then the extension
will communicate with the cast receiver

00:04:36.890 --> 00:04:36.900
will communicate with the cast receiver
 

00:04:36.900 --> 00:04:39.469
will communicate with the cast receiver
to set up a communication channel once

00:04:39.469 --> 00:04:39.479
to set up a communication channel once
 

00:04:39.479 --> 00:04:41.390
to set up a communication channel once
complete the success callback of the

00:04:41.390 --> 00:04:41.400
complete the success callback of the
 

00:04:41.400 --> 00:04:44.200
complete the success callback of the
request session function will be invoked

00:04:44.200 --> 00:04:44.210
request session function will be invoked
 

00:04:44.210 --> 00:04:46.400
request session function will be invoked
with the connection established the

00:04:46.400 --> 00:04:46.410
with the connection established the
 

00:04:46.410 --> 00:04:48.469
with the connection established the
sender application may now communicate

00:04:48.469 --> 00:04:48.479
sender application may now communicate
 

00:04:48.479 --> 00:04:49.879
sender application may now communicate
with the connected cast receiver

00:04:49.879 --> 00:04:49.889
with the connected cast receiver
 

00:04:49.889 --> 00:04:52.250
with the connected cast receiver
application messages are exchanged

00:04:52.250 --> 00:04:52.260
application messages are exchanged
 

00:04:52.260 --> 00:04:53.960
application messages are exchanged
between the sender and receiver using

00:04:53.960 --> 00:04:53.970
between the sender and receiver using
 

00:04:53.970 --> 00:04:56.870
between the sender and receiver using
namespaces also called protocols these

00:04:56.870 --> 00:04:56.880
namespaces also called protocols these
 

00:04:56.880 --> 00:04:58.760
namespaces also called protocols these
messages are used to invoke behaviors on

00:04:58.760 --> 00:04:58.770
messages are used to invoke behaviors on
 

00:04:58.770 --> 00:05:01.070
messages are used to invoke behaviors on
the receiver application and to update

00:05:01.070 --> 00:05:01.080
the receiver application and to update
 

00:05:01.080 --> 00:05:02.960
the receiver application and to update
the sender application as to the state

00:05:02.960 --> 00:05:02.970
the sender application as to the state
 

00:05:02.970 --> 00:05:06.050
the sender application as to the state
of the receiver app one example of

00:05:06.050 --> 00:05:06.060
of the receiver app one example of
 

00:05:06.060 --> 00:05:08.029
of the receiver app one example of
message exchange would be to load some

00:05:08.029 --> 00:05:08.039
message exchange would be to load some
 

00:05:08.039 --> 00:05:10.370
message exchange would be to load some
media onto the cast receiver the cast

00:05:10.370 --> 00:05:10.380
media onto the cast receiver the cast
 

00:05:10.380 --> 00:05:12.590
media onto the cast receiver the cast
API is come bundled with a media API

00:05:12.590 --> 00:05:12.600
API is come bundled with a media API
 

00:05:12.600 --> 00:05:15.080
API is come bundled with a media API
that enables a sender app to tell the

00:05:15.080 --> 00:05:15.090
that enables a sender app to tell the
 

00:05:15.090 --> 00:05:17.990
that enables a sender app to tell the
receiver to load and playback media such

00:05:17.990 --> 00:05:18.000
receiver to load and playback media such
 

00:05:18.000 --> 00:05:20.930
receiver to load and playback media such
as video in this case the media info

00:05:20.930 --> 00:05:20.940
as video in this case the media info
 

00:05:20.940 --> 00:05:22.879
as video in this case the media info
object gets created that bundles the

00:05:22.879 --> 00:05:22.889
object gets created that bundles the
 

00:05:22.889 --> 00:05:25.010
object gets created that bundles the
information about the media this object

00:05:25.010 --> 00:05:25.020
information about the media this object
 

00:05:25.020 --> 00:05:26.870
information about the media this object
is then used to create a load request

00:05:26.870 --> 00:05:26.880
is then used to create a load request
 

00:05:26.880 --> 00:05:29.659
is then used to create a load request
object that gets passed to a session

00:05:29.659 --> 00:05:29.669
object that gets passed to a session
 

00:05:29.669 --> 00:05:31.969
object that gets passed to a session
function called load media the load

00:05:31.969 --> 00:05:31.979
function called load media the load
 

00:05:31.979 --> 00:05:33.950
function called load media the load
media function serializes the data and

00:05:33.950 --> 00:05:33.960
media function serializes the data and
 

00:05:33.960 --> 00:05:35.210
media function serializes the data and
communicates with the receiver

00:05:35.210 --> 00:05:35.220
communicates with the receiver
 

00:05:35.220 --> 00:05:37.150
communicates with the receiver
application over the media namespace

00:05:37.150 --> 00:05:37.160
application over the media namespace
 

00:05:37.160 --> 00:05:39.440
application over the media namespace
sender and receiver applications must

00:05:39.440 --> 00:05:39.450
sender and receiver applications must
 

00:05:39.450 --> 00:05:41.270
sender and receiver applications must
agree on the supported namespaces in

00:05:41.270 --> 00:05:41.280
agree on the supported namespaces in
 

00:05:41.280 --> 00:05:44.210
agree on the supported namespaces in
order to communicate with each other the

00:05:44.210 --> 00:05:44.220
order to communicate with each other the
 

00:05:44.220 --> 00:05:45.770
order to communicate with each other the
last part of life cycle is the

00:05:45.770 --> 00:05:45.780
last part of life cycle is the
 

00:05:45.780 --> 00:05:47.990
last part of life cycle is the
disconnection from a receiver when a

00:05:47.990 --> 00:05:48.000
disconnection from a receiver when a
 

00:05:48.000 --> 00:05:50.629
disconnection from a receiver when a
session first is first established the

00:05:50.629 --> 00:05:50.639
session first is first established the
 

00:05:50.639 --> 00:05:52.330
session first is first established the
session app is passed a session object

00:05:52.330 --> 00:05:52.340
session app is passed a session object
 

00:05:52.340 --> 00:05:54.620
session app is passed a session object
adding an update listener to the session

00:05:54.620 --> 00:05:54.630
adding an update listener to the session
 

00:05:54.630 --> 00:05:56.240
adding an update listener to the session
object allows the sender app to know

00:05:56.240 --> 00:05:56.250
object allows the sender app to know
 

00:05:56.250 --> 00:05:58.460
object allows the sender app to know
when a session has ended the session

00:05:58.460 --> 00:05:58.470
when a session has ended the session
 

00:05:58.470 --> 00:06:00.350
when a session has ended the session
listener function has passed a boolean

00:06:00.350 --> 00:06:00.360
listener function has passed a boolean
 

00:06:00.360 --> 00:06:02.960
listener function has passed a boolean
value if this value is false then there

00:06:02.960 --> 00:06:02.970
value if this value is false then there
 

00:06:02.970 --> 00:06:05.540
value if this value is false then there
is no connection the user can initiate a

00:06:05.540 --> 00:06:05.550
is no connection the user can initiate a
 

00:06:05.550 --> 00:06:06.950
is no connection the user can initiate a
disconnect by clicking the cast

00:06:06.950 --> 00:06:06.960
disconnect by clicking the cast
 

00:06:06.960 --> 00:06:09.469
disconnect by clicking the cast
extension and choosing stop casting this

00:06:09.469 --> 00:06:09.479
extension and choosing stop casting this
 

00:06:09.479 --> 00:06:11.020
extension and choosing stop casting this
will trigger a session update listener

00:06:11.020 --> 00:06:11.030
will trigger a session update listener
 

00:06:11.030 --> 00:06:14.390
will trigger a session update listener
when the session is torn down and there

00:06:14.390 --> 00:06:14.400
when the session is torn down and there
 

00:06:14.400 --> 00:06:16.339
when the session is torn down and there
you have it the life cycle of a cast web

00:06:16.339 --> 00:06:16.349
you have it the life cycle of a cast web
 

00:06:16.349 --> 00:06:18.710
you have it the life cycle of a cast web
sender we're very excited to see what

00:06:18.710 --> 00:06:18.720
sender we're very excited to see what
 

00:06:18.720 --> 00:06:20.810
sender we're very excited to see what
you build with Google cast to get you

00:06:20.810 --> 00:06:20.820
you build with Google cast to get you
 

00:06:20.820 --> 00:06:22.310
you build with Google cast to get you
going we are providing a number of

00:06:22.310 --> 00:06:22.320
going we are providing a number of
 

00:06:22.320 --> 00:06:24.290
going we are providing a number of
resources you can discover more about

00:06:24.290 --> 00:06:24.300
resources you can discover more about
 

00:06:24.300 --> 00:06:27.820
resources you can discover more about
the details of the google cast sdk at

00:06:27.820 --> 00:06:27.830
the details of the google cast sdk at
 

00:06:27.830 --> 00:06:31.189
the details of the google cast sdk at
developers.google.com/plus we'll go a

00:06:31.189 --> 00:06:31.199
developers.google.com/plus we'll go a
 

00:06:31.199 --> 00:06:32.990
developers.google.com/plus we'll go a
long way in guiding you down the path to

00:06:32.990 --> 00:06:33.000
long way in guiding you down the path to
 

00:06:33.000 --> 00:06:34.219
long way in guiding you down the path to
creating great second screen

00:06:34.219 --> 00:06:34.229
creating great second screen
 

00:06:34.229 --> 00:06:36.649
creating great second screen
applications you can find sample cast

00:06:36.649 --> 00:06:36.659
applications you can find sample cast
 

00:06:36.659 --> 00:06:38.810
applications you can find sample cast
sender and receiver apps at github comm

00:06:38.810 --> 00:06:38.820
sender and receiver apps at github comm
 

00:06:38.820 --> 00:06:42.020
sender and receiver apps at github comm
slash google cast you stackoverflow

00:06:42.020 --> 00:06:42.030
slash google cast you stackoverflow
 

00:06:42.030 --> 00:06:43.790
slash google cast you stackoverflow
questions and comments tag them with

00:06:43.790 --> 00:06:43.800
questions and comments tag them with
 

00:06:43.800 --> 00:06:46.700
questions and comments tag them with
Google - passed in future Deb bites we

00:06:46.700 --> 00:06:46.710
Google - passed in future Deb bites we
 

00:06:46.710 --> 00:06:48.350
Google - passed in future Deb bites we
will dive deeper into the cast sender

00:06:48.350 --> 00:06:48.360
will dive deeper into the cast sender
 

00:06:48.360 --> 00:06:50.660
will dive deeper into the cast sender
SDK for each platform and the cast

00:06:50.660 --> 00:06:50.670
SDK for each platform and the cast
 

00:06:50.670 --> 00:06:53.240
SDK for each platform and the cast
receiver SDK join the Google cast

00:06:53.240 --> 00:06:53.250
receiver SDK join the Google cast
 

00:06:53.250 --> 00:06:55.760
receiver SDK join the Google cast
developer community on Google+ for pro

00:06:55.760 --> 00:06:55.770
developer community on Google+ for pro
 

00:06:55.770 --> 00:06:58.190
developer community on Google+ for pro
tips and share your experiences it's now

00:06:58.190 --> 00:06:58.200
tips and share your experiences it's now
 

00:06:58.200 --> 00:06:59.690
tips and share your experiences it's now
up to you to go out and create great

00:06:59.690 --> 00:06:59.700
up to you to go out and create great
 

00:06:59.700 --> 00:07:02.120
up to you to go out and create great
Chrome web sender applications happy

00:07:02.120 --> 00:07:02.130
Chrome web sender applications happy
 

00:07:02.130 --> 00:07:04.610
Chrome web sender applications happy
casting

