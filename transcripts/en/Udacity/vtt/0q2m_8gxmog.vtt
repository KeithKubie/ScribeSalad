WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.250
What I already mentioned to you is that this is of course just a worse case view.

00:00:04.250 --> 00:00:06.330
So this is what you just calculated here

00:00:06.330 --> 00:00:08.980
if we were to consider a billion different possible solutions.

00:00:08.980 --> 00:00:10.570
And the numbers would of course get much higher

00:00:10.570 --> 00:00:15.090
if we said we are ready to consider 10 billion or 100 billion possible solutions,

00:00:15.090 --> 00:00:17.330
but still they would not be in the thousands.

00:00:17.330 --> 00:00:19.100
And that's actually the surprising thing

00:00:19.100 --> 00:00:23.010
because if we look how well those algorithms perform in practice,

00:00:23.010 --> 00:00:24.910
they perform dramatically better.

00:00:24.910 --> 00:00:31.620
So for independent set and clique you can usually solve instances far over 1000 vertices,

00:00:31.620 --> 00:00:34.280
and for 3 SAT there are even annual competitions

00:00:34.280 --> 00:00:37.730
in which participants solve instances with, I would say,

00:00:37.730 --> 00:00:40.540
almost in the tens of thousands of variables.

00:00:40.540 --> 00:00:43.320
This varies by competition, so there are some competitions

00:00:43.320 --> 00:00:45.790
where it's in the hundreds, in the thousands,

00:00:45.790 --> 00:00:48.130
but you can solve instances up to 10000.

00:00:48.130 --> 00:00:52.790
And the reason for that is that it seems like most of the instances

00:00:52.790 --> 00:00:57.050
or inputs to NP complete problems that we encounter in practice

00:00:57.050 --> 00:00:59.600
are, in a way, well behaved.

00:00:59.600 --> 00:01:01.070
They rarely tend to be worst cases instances

00:01:01.070 --> 00:01:03.710
that force our algorithms to run in their maximum time.

00:01:03.710 --> 00:01:07.310
And there is also, besides search trees, other very interesting techniques

00:01:07.310 --> 00:01:10.780
that you can use to further improve your running time of your algorithms.

00:01:10.780 --> 00:01:13.010
I would now like to introduce to you preprocessing

00:01:13.010 --> 99:59:59.000
as another technique to deal with NP completeness.

