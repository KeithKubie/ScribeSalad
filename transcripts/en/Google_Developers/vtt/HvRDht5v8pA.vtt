WEBVTT
Kind: captions
Language: en

00:00:00.480 --> 00:00:01.540
CHRIS BROADFOOT: Hi everyone.

00:00:01.540 --> 00:00:02.480
I'm Chris Broadfoot.

00:00:02.480 --> 00:00:05.250
I'm an engineer on the Google
Maps Developer Relations team.

00:00:05.250 --> 00:00:06.330
MARCELO CAMELO: Hi,
I'm Marcelo.

00:00:06.330 --> 00:00:08.370
I'm the Lead Engineer
on the Places API.

00:00:08.370 --> 00:00:10.860
CHRIS BROADFOOT: Now, as part of
developer relations, I talk

00:00:10.860 --> 00:00:13.840
to a lot of developers, and I
meet many that use the Google

00:00:13.840 --> 00:00:15.300
Places API.

00:00:15.300 --> 00:00:17.900
Some of them have a few
questions, and it's great to

00:00:17.900 --> 00:00:19.540
have you today.

00:00:19.540 --> 00:00:22.050
So the first question is, when
do I need to provide my

00:00:22.050 --> 00:00:23.060
developer key?

00:00:23.060 --> 00:00:25.120
MARCELO CAMELO: So you always
have to provide a developer

00:00:25.120 --> 00:00:28.560
key when using the
Web Services API.

00:00:28.560 --> 00:00:31.630
You don't have to use the key
when you're using the JSAPI,

00:00:31.630 --> 00:00:33.510
but you can use it if you're
on the [INAUDIBLE] usage on

00:00:33.510 --> 00:00:34.400
the developer console.

00:00:34.400 --> 00:00:35.270
CHRIS BROADFOOT: OK, cool.

00:00:35.270 --> 00:00:37.790
So you mentioned the
JavaScript API.

00:00:37.790 --> 00:00:39.510
What's the difference between
the JavaScript

00:00:39.510 --> 00:00:41.250
API and the Web Service?

00:00:41.250 --> 00:00:42.920
MARCELO CAMELO: So the main
difference is that the

00:00:42.920 --> 00:00:46.420
JavaScript API can be used
directly within the browser.

00:00:46.420 --> 00:00:48.760
And the Web Service on the other
hand, can be accessed

00:00:48.760 --> 00:00:50.560
from any platform using
the programming

00:00:50.560 --> 00:00:52.490
language of your choice.

00:00:52.490 --> 00:00:56.245
Some services like Place
Reports, Check-Ins and Events

00:00:56.245 --> 00:00:59.290
are only accessible via the
Web Service API though.

00:00:59.290 --> 00:01:00.940
CHRIS BROADFOOT: OK, so another
one I get frequently

00:01:00.940 --> 00:01:03.920
is, can I call the Places API
endpoints directly from my

00:01:03.920 --> 00:01:04.564
mobile app?

00:01:04.564 --> 00:01:06.190
MARCELO CAMELO: Well,
technically you can.

00:01:06.190 --> 00:01:10.170
Most mobile development
platforms allow you create the

00:01:10.170 --> 00:01:11.750
Web Service directly.

00:01:11.750 --> 00:01:15.670
But doing this may risk leaking
your developer key.

00:01:15.670 --> 00:01:19.710
And you don't want that to
happen because it may lead to

00:01:19.710 --> 00:01:22.790
someone else using your key,
and using up your quota or

00:01:22.790 --> 00:01:23.740
spamming your service.

00:01:23.740 --> 00:01:26.490
CHRIS BROADFOOT: So speaking
of quota, how do I get more

00:01:26.490 --> 00:01:28.640
than the courtesy limit of
1,000 requests per day?

00:01:28.640 --> 00:01:30.340
MARCELO CAMELO: Well, you have
to go to the developer

00:01:30.340 --> 00:01:32.760
consoles and then enable
billing on

00:01:32.760 --> 00:01:34.290
your Place API project.

00:01:34.290 --> 00:01:37.740
Doing so will lift your quota
to 100,000 requests per day.

00:01:37.740 --> 00:01:40.440
The developer console will ask
for your credit card details,

00:01:40.440 --> 00:01:43.510
but we only use that for
identification purposes.

00:01:43.510 --> 00:01:44.350
CHRIS BROADFOOT: OK,
so will my credit

00:01:44.350 --> 00:01:45.665
card ever be charged?

00:01:45.665 --> 00:01:48.960
MARCELO CAMELO: So no, we do not
charge for the access to

00:01:48.960 --> 00:01:50.100
the Places API.

00:01:50.100 --> 00:01:53.240
If at any point in the future,
we start offering an option to

00:01:53.240 --> 00:01:57.170
pay for extra quota, that'll be
done on top of the existing

00:01:57.170 --> 00:02:00.770
free quotas, and you have to
explicitly sign up for it.

00:02:00.770 --> 00:02:03.760
CHRIS BROADFOOT: OK, so since I
can't buy more quota today,

00:02:03.760 --> 00:02:06.490
what if my app's really popular,
and I need more than

00:02:06.490 --> 00:02:07.985
100,000 requests per day?

00:02:07.985 --> 00:02:09.449
MARCELO CAMELO: Well, if that's
the case, you can

00:02:09.449 --> 00:02:11.280
request additional quota.

00:02:11.280 --> 00:02:16.320
And to do that, you search for
the quota uplift form.

00:02:16.320 --> 00:02:18.400
And we receive those
requests, we look

00:02:18.400 --> 00:02:19.320
through each one of them.

00:02:19.320 --> 00:02:21.110
We love getting them because it
means people are using the

00:02:21.110 --> 00:02:23.130
Places API and liking it.

00:02:23.130 --> 00:02:25.400
And we try to reply to
everything single one.

00:02:25.400 --> 00:02:29.450
CHRIS BROADFOOT: OK, so say
I have a lot of Places.

00:02:29.450 --> 00:02:31.485
Can I add them in bulk
through the API?

00:02:31.485 --> 00:02:33.470
MARCELO CAMELO: So that's not
exactly the use case of the

00:02:33.470 --> 00:02:34.440
Places API.

00:02:34.440 --> 00:02:37.810
We don't have a functionality
for bulk upload of Places.

00:02:37.810 --> 00:02:41.990
And the main purpose of the
API is to get input

00:02:41.990 --> 00:02:43.160
from the end user.

00:02:43.160 --> 00:02:44.640
CHRIS BROADFOOT: Another
one I get really often

00:02:44.640 --> 00:02:45.880
is from store managers.

00:02:45.880 --> 00:02:49.170
They have really good data
about all the stores.

00:02:49.170 --> 00:02:51.925
So how can they make sure they
get them into Google+ Local?

00:02:51.925 --> 00:02:53.790
MARCELO CAMELO: Again, this is
not the main use case of

00:02:53.790 --> 00:02:54.750
Places API.

00:02:54.750 --> 00:02:57.270
If you have good data about
your stores, you have to

00:02:57.270 --> 00:03:00.000
upload them through the Google
Places Manager's Tool on

00:03:00.000 --> 00:03:02.500
place.google.com/manage.

00:03:02.500 --> 00:03:05.230
CHRIS BROADFOOT: Another one
people get about usage is, how

00:03:05.230 --> 00:03:07.045
do I use the sensor parameter?

00:03:07.045 --> 00:03:07.610
MARCELO CAMELO: All right.

00:03:07.610 --> 00:03:10.560
So the idea with the sensor
parameter is to tell us where

00:03:10.560 --> 00:03:12.500
you get your location
data from.

00:03:12.500 --> 00:03:15.280
So if you're doing a search,
and the location came from,

00:03:15.280 --> 00:03:18.950
say, the phone GPS or Wi-Fi
location service, you would

00:03:18.950 --> 00:03:20.950
set the sensor to True.

00:03:20.950 --> 00:03:22.840
On the other hand, if the search
location is not coming

00:03:22.840 --> 00:03:27.090
from a sensor-- for instance,
if the user is pointing a

00:03:27.090 --> 00:03:28.420
location on a map--

00:03:28.420 --> 00:03:31.110
you should be setting
the sensor to False.

00:03:31.110 --> 00:03:35.170
We only use that value for
information purposes only, and

00:03:35.170 --> 00:03:38.540
it will not influence your
results in any way.

00:03:38.540 --> 00:03:40.470
CHRIS BROADFOOT: A lot of
queries to the Places API

00:03:40.470 --> 00:03:43.250
returns references and
IDs, and they both

00:03:43.250 --> 00:03:44.380
appear to be unique.

00:03:44.380 --> 00:03:45.390
What's the difference?

00:03:45.390 --> 00:03:48.070
MARCELO CAMELO: So that's
a question we get a lot.

00:03:48.070 --> 00:03:51.840
On the Places API, we split the
Place ID into two separate

00:03:51.840 --> 00:03:52.410
attributes--

00:03:52.410 --> 00:03:54.910
the Place Reference,
and the Place ID.

00:03:54.910 --> 00:03:59.070
The place reference you use to
fetch details of a place or to

00:03:59.070 --> 00:04:01.410
reference a place when you're
doing a Check-In or adding an

00:04:01.410 --> 00:04:02.870
Event to it.

00:04:02.870 --> 00:04:05.430
The Place ID you use to tell
whether two places are the

00:04:05.430 --> 00:04:09.305
same and also for indexing
content to a place.

00:04:09.305 --> 00:04:11.830
CHRIS BROADFOOT: So I noticed
the reference changes on each

00:04:11.830 --> 00:04:14.220
request I do to the API.

00:04:14.220 --> 00:04:18.180
So I'll probably use the ID as
a foreign key, and use the

00:04:18.180 --> 00:04:20.390
reference to retrieve
more details.

00:04:20.390 --> 00:04:22.735
Should I storing other
Place data as well?

00:04:22.735 --> 00:04:24.620
MARCELO CAMELO: You could
cache Place data

00:04:24.620 --> 00:04:26.250
for up to 30 days.

00:04:26.250 --> 00:04:29.470
But you don't really want to
keep the data for much longer

00:04:29.470 --> 00:04:32.630
than that because it goes out
of date really quickly.

00:04:32.630 --> 00:04:36.425
And you can use the reference
to refresh your data.

00:04:36.425 --> 00:04:36.710
CHRIS BROADFOOT: OK.

00:04:36.710 --> 00:04:41.060
So another thing I notice is, I
get attributions from where

00:04:41.060 --> 00:04:42.340
the data came from.

00:04:42.340 --> 00:04:43.995
Do I need to display these?

00:04:43.995 --> 00:04:45.560
MARCELO CAMELO: Only if you want
to be compliant to your

00:04:45.560 --> 00:04:48.010
terms of service, and I
recommend that you do.

00:04:48.010 --> 00:04:50.610
That's the first thing we're
going to look, if you apply

00:04:50.610 --> 00:04:52.200
for a quota uplift.

00:04:52.200 --> 00:04:52.720
CHRIS BROADFOOT: OK.

00:04:52.720 --> 00:04:56.020
So another great feature of
the API are Check-Ins.

00:04:56.020 --> 00:04:58.090
So developers ask me, what
are they for, what

00:04:58.090 --> 00:04:59.015
can I use them for?

00:04:59.015 --> 00:05:01.440
MARCELO CAMELO: So the Check-Ins
give the Places API

00:05:01.440 --> 00:05:03.790
extra signals about the
relevance of a place.

00:05:03.790 --> 00:05:06.840
And we can use those signals to
improve search results and

00:05:06.840 --> 00:05:09.010
make them more relevant
to users.

00:05:09.010 --> 00:05:13.200
So developers should send a
Check-In whenever the users

00:05:13.200 --> 00:05:17.090
has executed an action that
tells us that a Places result

00:05:17.090 --> 00:05:18.020
is usable for them.

00:05:18.020 --> 00:05:20.270
CHRIS BROADFOOT: So I might
get more relevant search

00:05:20.270 --> 00:05:22.710
results if I used Check-Ins.

00:05:22.710 --> 00:05:24.790
How are search results
ranked usually?

00:05:24.790 --> 00:05:28.360
MARCELO CAMELO: So by default
we use a ranking algorithm

00:05:28.360 --> 00:05:29.940
called [INAUDIBLE].

00:05:29.940 --> 00:05:31.720
And it uses a number
different signals.

00:05:31.720 --> 00:05:34.490
For instance, how popular a
place is, the number of

00:05:34.490 --> 00:05:38.140
reviews it has, its ratings,
number of Check-Ins, and other

00:05:38.140 --> 00:05:38.860
stuff as well.

00:05:38.860 --> 00:05:40.770
CHRIS BROADFOOT:OK, so there's a
bit of magic going on there.

00:05:40.770 --> 00:05:41.515
MARCELO CAMELO: Absolutely.

00:05:41.515 --> 00:05:43.830
CHRIS BROADFOOT: So some
developers don't want magic,

00:05:43.830 --> 00:05:46.370
and they just want to find
the closest place.

00:05:46.370 --> 00:05:47.440
How can they do that?

00:05:47.440 --> 00:05:50.080
MARCELO CAMELO: That actually
also requires magic.

00:05:50.080 --> 00:05:56.190
But there is a switch that we
call the rank-by switch, and

00:05:56.190 --> 00:05:59.580
you can use it to toggle between
getting results ranked

00:05:59.580 --> 00:06:00.300
by [INAUDIBLE]

00:06:00.300 --> 00:06:01.960
or getting results ranked
by distance.

00:06:01.960 --> 00:06:04.515
CHRIS BROADFOOT: Magic seems to
be what Google's good at.

00:06:04.515 --> 00:06:05.575
MARCELO CAMELO: We try.

00:06:05.575 --> 00:06:08.160
CHRIS BROADFOOT: So one of
my favorite features is

00:06:08.160 --> 00:06:09.320
autocomplete.

00:06:09.320 --> 00:06:12.120
Developers ask me how can I
customize the look and feel of

00:06:12.120 --> 00:06:12.540
autocomplete?

00:06:12.540 --> 00:06:16.610
MARCELO CAMELO: So we use CSS
to do all our styling.

00:06:16.610 --> 00:06:18.980
So developers can overwrite a
[INAUDIBLE] container and

00:06:18.980 --> 00:06:19.500
[INAUDIBLE]

00:06:19.500 --> 00:06:23.280
item classes in their CSS to
change the look and feel of

00:06:23.280 --> 00:06:24.020
autocomplete.

00:06:24.020 --> 00:06:27.190
CHRIS BROADFOOT: OK, so that's
it for developer questions.

00:06:27.190 --> 00:06:30.330
I just have one of my own,
while I've got you here.

00:06:30.330 --> 00:06:32.600
So that is, what are the kind of
apps that you'd like to see

00:06:32.600 --> 00:06:33.845
developers build?

00:06:33.845 --> 00:06:36.800
MARCELO CAMELO: OK, so we do
have the expectations that the

00:06:36.800 --> 00:06:39.800
Places API will enable an
entire ecosystem of

00:06:39.800 --> 00:06:41.270
location-based apps.

00:06:41.270 --> 00:06:44.220
I'd love to see developers going
beyond just offering

00:06:44.220 --> 00:06:49.400
suggestions for restaurants and
dealing with places like

00:06:49.400 --> 00:06:52.740
art galleries, maybe about
urban graffiti, apps for

00:06:52.740 --> 00:06:56.980
families, apps for kids, maybe
apps about sports.

00:06:56.980 --> 00:06:59.540
I also want to see apps that
help users accomplish very

00:06:59.540 --> 00:07:00.970
specific tasks.

00:07:00.970 --> 00:07:05.210
And especially, I'm looking for
apps where developers have

00:07:05.210 --> 00:07:07.220
put their local expertise
and knowledge

00:07:07.220 --> 00:07:08.105
into the Place results.

00:07:08.105 --> 00:07:08.800
CHRIS BROADFOOT: Great.

00:07:08.800 --> 00:07:11.520
I'm really looking forward to
developers create these kind

00:07:11.520 --> 00:07:12.600
of applications.

00:07:12.600 --> 00:07:15.600
I think the Google Places API is
a really great way to add a

00:07:15.600 --> 00:07:19.810
dimension of local data
to applications.

00:07:19.810 --> 00:07:22.660
Thanks so much for answering
these developer questions.

00:07:22.660 --> 00:07:25.110
I'm really looking forward in
the future to see what you add

00:07:25.110 --> 00:07:26.430
to the Google Places API.

00:07:26.430 --> 00:07:27.680
MARCELO CAMELO: Thanks, Chris.

