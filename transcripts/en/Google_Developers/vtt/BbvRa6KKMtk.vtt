WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.680
DANNY HERMES: All right, it
looks like we've reached a

00:00:02.680 --> 00:00:03.410
critical mass.

00:00:03.410 --> 00:00:05.220
So let's get started.

00:00:05.220 --> 00:00:06.500
Hi, everyone.

00:00:06.500 --> 00:00:08.119
I'm Danny Hermes.

00:00:08.119 --> 00:00:12.470
I am a member of Developer
Relations here at Google.

00:00:12.470 --> 00:00:14.070
I don't know If you
can see that.

00:00:14.070 --> 00:00:16.329
It says Developer Relations.

00:00:16.329 --> 00:00:18.390
It's our nifty logo on our
documentation, if you

00:00:18.390 --> 00:00:20.780
recognize it.

00:00:20.780 --> 00:00:24.990
I'm the guy that supports you
all in the forum and gets your

00:00:24.990 --> 00:00:28.880
requests to the product
teams and figures

00:00:28.880 --> 00:00:29.880
out everything else.

00:00:29.880 --> 00:00:32.930
I also, on the side, like to
work on the client libraries

00:00:32.930 --> 00:00:35.070
and things like that that
make your life easier.

00:00:35.070 --> 00:00:38.860
So I want to get started here.

00:00:38.860 --> 00:00:42.940
We had some questions from
Caroline McLean that I want to

00:00:42.940 --> 00:00:44.640
let her ask.

00:00:44.640 --> 00:00:46.110
And then from there,
we'll open the

00:00:46.110 --> 00:00:48.620
floor for more questions.

00:00:48.620 --> 00:00:51.675
Who knows, this is may be the
shortest weekly Hangout we've

00:00:51.675 --> 00:00:54.500
had so far, based on the
questions that I've seen

00:00:54.500 --> 00:00:55.930
leading up to it.

00:00:55.930 --> 00:00:56.530
But who knows.

00:00:56.530 --> 00:00:59.330
This is also the most people
we've had at once.

00:00:59.330 --> 00:01:02.440
So let's see how it goes.

00:01:02.440 --> 00:01:05.019
So Caroline, go ahead and
ask your question.

00:01:05.019 --> 00:01:05.280
CAROLINE MCLEAN: All right.

00:01:05.280 --> 00:01:08.630
Let me start off with the first
one I think is the most

00:01:08.630 --> 00:01:11.720
critical to us.

00:01:11.720 --> 00:01:14.560
We are a software as a service,
and we support many,

00:01:14.560 --> 00:01:15.780
many merchants.

00:01:15.780 --> 00:01:18.880
And we're starting with a single
merchant and their

00:01:18.880 --> 00:01:21.690
existing account and
information.

00:01:21.690 --> 00:01:24.560
And the last thing we want to
do is put their account in a

00:01:24.560 --> 00:01:27.640
bad state from testing some
of this functionality.

00:01:27.640 --> 00:01:30.800
What's the best way to
start our testing?

00:01:30.800 --> 00:01:31.140
DANNY HERMES: Yeah.

00:01:31.140 --> 00:01:34.370
So I don't know how much you
or your team have gotten a

00:01:34.370 --> 00:01:35.710
chance to check out our Docs.

00:01:35.710 --> 00:01:36.542
But our Docs at developers.googl

00:01:36.542 --> 00:01:41.940
e.com/shopping-content are
really a great resource.

00:01:41.940 --> 00:01:46.900
In particular, the Getting
Started page lists some

00:01:46.900 --> 00:01:49.590
options that you have with
respect to this.

00:01:49.590 --> 00:01:56.100
The first one is not the best
way to keep from bad things

00:01:56.100 --> 00:01:57.310
happening, from bad
data quality.

00:01:57.310 --> 00:02:00.690
But the first is what's called
a warnings parameter.

00:02:00.690 --> 00:02:06.400
And if you simply append just
the word "warnings" as a query

00:02:06.400 --> 00:02:07.250
parameter--

00:02:07.250 --> 00:02:10.410
a query parameter with no
actual parameter value--

00:02:10.410 --> 00:02:15.770
to the end of any API request
that you're making, then

00:02:15.770 --> 00:02:19.720
you'll get back warnings
in the API response.

00:02:19.720 --> 00:02:25.680
So you won't necessarily have
errors, but something where

00:02:25.680 --> 00:02:30.040
you don't include an attribute
that we recommend, or you have

00:02:30.040 --> 00:02:31.790
an attribute that might
be too short.

00:02:31.790 --> 00:02:34.700
Something that's more powerful
and stronger for you as you're

00:02:34.700 --> 00:02:37.030
testing out implementation
is what's

00:02:37.030 --> 00:02:39.500
called the dry-run parameter.

00:02:39.500 --> 00:02:42.760
The dry-run parameter can be
sent simultaneously with the

00:02:42.760 --> 00:02:45.560
warnings parameter, or
it can be sent as-is.

00:02:45.560 --> 00:02:49.590
And it's sent the exact same
way, just the keyword dry-run,

00:02:49.590 --> 00:02:53.900
appended as a query parameter
with no query value on the end

00:02:53.900 --> 00:02:56.280
of every request.

00:02:56.280 --> 00:02:59.670
And when you send a request
dry-run, your inserts aren't

00:02:59.670 --> 00:03:03.250
actually inserted, your updates
aren't actually

00:03:03.250 --> 00:03:05.480
updated, and your deletes
aren't actually deleted.

00:03:05.480 --> 00:03:09.440
So what happens is the server
validates the request, makes

00:03:09.440 --> 00:03:13.670
sure it looks exactly how it
should and that it would be

00:03:13.670 --> 00:03:19.080
accepted, and then it gives you
the simulated response.

00:03:19.080 --> 00:03:21.300
So that is the perfect way
for you to do testing.

00:03:21.300 --> 00:03:25.430
It is literally a sandbox,
literally a dry run.

00:03:25.430 --> 00:03:27.430
One small caveat there.

00:03:27.430 --> 00:03:32.030
If you try to delete or update
an item that does not exist,

00:03:32.030 --> 00:03:33.800
the dry-run side will
not actually

00:03:33.800 --> 00:03:35.360
tell you it's an error.

00:03:35.360 --> 00:03:38.520
Because in order to make dry-run
fast, in order to make

00:03:38.520 --> 00:03:41.890
it really a sandbox, we don't
actually check against your

00:03:41.890 --> 00:03:43.700
current data for updates
and deletes.

00:03:43.700 --> 00:03:45.885
We really just check the format
of the response, that

00:03:45.885 --> 00:03:48.300
it will work as an update
or a delete.

00:03:48.300 --> 00:03:51.990
But that's a very small caveat
when you're just getting

00:03:51.990 --> 00:03:54.470
started, like you said, with
a proof of concept with the

00:03:54.470 --> 00:03:55.210
first merchant.

00:03:55.210 --> 00:03:59.190
I hope that is a sufficient
answer for you.

00:03:59.190 --> 00:04:00.210
CAROLINE MCLEAN: No, that's
awesome, thanks.

00:04:00.210 --> 00:04:01.780
I had not found--

00:04:01.780 --> 00:04:03.980
I'm not sure I found that
set of documentation.

00:04:03.980 --> 00:04:05.490
I'm kind of all over
the place.

00:04:05.490 --> 00:04:09.810
We're using the .NET wrapper,
and I didn't see that in the

00:04:09.810 --> 00:04:13.680
DLL, both the dry run
as well as the--

00:04:13.680 --> 00:04:14.620
what was the other program?

00:04:14.620 --> 00:04:14.863
DANNY HERMES: Yeah.

00:04:14.863 --> 00:04:17.640
So I'm actually updating--

00:04:17.640 --> 00:04:21.589
the .NET client library is a
little behind some of the

00:04:21.589 --> 00:04:27.980
other languages, and there are
not really good ways-- so I

00:04:27.980 --> 00:04:28.490
checked it out.

00:04:28.490 --> 00:04:30.520
Dry-run and warnings are
really only enabled for

00:04:30.520 --> 00:04:33.000
queries, which doesn't
help you.

00:04:33.000 --> 00:04:33.610
Right?

00:04:33.610 --> 00:04:36.330
You don't care about a query,
because a query isn't actually

00:04:36.330 --> 00:04:37.140
going to do anything to you.

00:04:37.140 --> 00:04:38.840
CAROLINE MCLEAN: Right, it's
not going to hurt anything.

00:04:38.840 --> 00:04:41.020
DANNY HERMES: So I'm
enabling that.

00:04:41.020 --> 00:04:43.420
I'm changing some of
the functions.

00:04:43.420 --> 00:04:46.360
Right now, the only signature
for the function on the

00:04:46.360 --> 00:04:49.200
service object takes an
entry and a feed.

00:04:49.200 --> 00:04:50.440
But in reality, we don't really

00:04:50.440 --> 00:04:52.290
need a feed for inserting.

00:04:52.290 --> 00:04:56.150
That might be true for some of
the other APIs in the family

00:04:56.150 --> 00:05:00.390
of GData APIs, but in our API
it isn't that relevant.

00:05:00.390 --> 00:05:03.610
I was not a part of the original
implementation, and I

00:05:03.610 --> 00:05:07.780
have been submitting patches
for much of 2012.

00:05:07.780 --> 00:05:09.850
But hopefully in the next
week or two, we'll

00:05:09.850 --> 00:05:11.030
see a lot more patches.

00:05:11.030 --> 00:05:14.090
And then I'm going to release
a developer's guide.

00:05:14.090 --> 00:05:17.130
There's a developer's guide
right now for Python and Java,

00:05:17.130 --> 00:05:20.280
to give you an idea what
it'll look like.

00:05:20.280 --> 00:05:22.630
And there's one for PHP that'll
probably be published

00:05:22.630 --> 00:05:24.170
this week or early next week.

00:05:24.170 --> 00:05:26.660
And so .NET is last in line.

00:05:26.660 --> 00:05:28.540
And it's not because
I don't like .NET.

00:05:28.540 --> 00:05:31.990
It's just because I'm not
as good with .NET.

00:05:31.990 --> 00:05:35.090
I don't have a working Windows
instance at work.

00:05:35.090 --> 00:05:37.445
I have one at home, but I never
touch it, because I

00:05:37.445 --> 00:05:37.910
prefer Linux--

00:05:37.910 --> 00:05:39.730
sorry guys.

00:05:39.730 --> 00:05:44.120
So I've been developing C# in
Mono on my Mac at work, and it

00:05:44.120 --> 00:05:45.050
just takes a little longer.

00:05:45.050 --> 00:05:48.070
But it's something I appreciate,
and it's something

00:05:48.070 --> 00:05:51.940
I've really looked
at recently.

00:05:51.940 --> 00:06:00.950
So I'll say for sending the
dry-run and sending warnings

00:06:00.950 --> 00:06:04.780
parameters, you can actually
specify, using the native URL

00:06:04.780 --> 00:06:07.430
object type-- you can actually
specify the URL in your

00:06:07.430 --> 00:06:10.750
request explicitly.

00:06:10.750 --> 00:06:13.420
And that may be the way
to go temporarily.

00:06:13.420 --> 00:06:17.390
Or you could just wait until
I get this fixed out.

00:06:17.390 --> 00:06:20.270
I don't know what your timeline
is, but I'm trying to

00:06:20.270 --> 00:06:22.960
get this done as quickly as
possible, because I'm starting

00:06:22.960 --> 00:06:25.420
to prepare for Google I/O, and
that's about to take up my

00:06:25.420 --> 00:06:26.040
entire life.

00:06:26.040 --> 00:06:28.610
So if I don't get this done
quick, it will be July 1

00:06:28.610 --> 00:06:29.840
before it gets done.

00:06:29.840 --> 00:06:30.145
CAROLINE MCLEAN: Oh, no.

00:06:30.145 --> 00:06:32.900
OK.

00:06:32.900 --> 00:06:34.120
DANNY HERMES: So did you have
any other questions?

00:06:34.120 --> 00:06:36.710
I think you had a third
one, right?

00:06:36.710 --> 00:06:38.700
CAROLINE MCLEAN: I think
I had multiples.

00:06:38.700 --> 00:06:41.020
I didn't write them down,
because I gave them to you.

00:06:41.020 --> 00:06:41.672
DANNY HERMES: I could check,
let me mute myself so you

00:06:41.672 --> 00:06:41.800
don't hear my typing.

00:06:41.800 --> 00:06:43.600
CAROLINE MCLEAN: No, you sent
me the answer to the other

00:06:43.600 --> 00:06:48.060
one, which was how to support
some of those fields that are

00:06:48.060 --> 00:06:52.060
not in the wrapper yet,
like the sale price.

00:06:52.060 --> 00:06:55.070
DANNY HERMES: Let me address
that, for posterity and for

00:06:55.070 --> 00:06:55.660
the other viewers.

00:06:55.660 --> 00:07:01.300
So part of the question was,
is the sale price field in

00:07:01.300 --> 00:07:03.680
there, and I can't
just find it?

00:07:03.680 --> 00:07:05.530
And if it's not, what do I do?

00:07:05.530 --> 00:07:08.290
So the answer the first question
was no, it's not

00:07:08.290 --> 00:07:10.180
actually implemented yet
as part of the library.

00:07:10.180 --> 00:07:11.470
It's one of the newer
attributes.

00:07:11.470 --> 00:07:14.400
So it wasn't part of the
original implementation.

00:07:14.400 --> 00:07:19.140
And the answer to the second
question is you can still send

00:07:19.140 --> 00:07:21.610
it, but it has to be sent
as a custom attribute.

00:07:21.610 --> 00:07:25.630
So in our Getting Started page,
we do describe a little

00:07:25.630 --> 00:07:27.740
bit how to use custom
attributes.

00:07:27.740 --> 00:07:32.240
It's in the SC namespace,
Structured Content namespace.

00:07:32.240 --> 00:07:35.550
And the name of the attribute
is just "attribute." And you

00:07:35.550 --> 00:07:42.430
can send units and the actual
name as a keyword, as well as

00:07:42.430 --> 00:07:44.910
the type as a keyword, and then,
of course, you can send

00:07:44.910 --> 00:07:45.440
your value.

00:07:45.440 --> 00:07:50.400
So since SCP, sale price, is not
enabled, you can just send

00:07:50.400 --> 00:07:54.120
SC attribute, with the name of
sale price, and still use

00:07:54.120 --> 00:08:00.890
units, US dollars, or pounds,
or any other value, euros.

00:08:00.890 --> 00:08:03.950
And then, of course, send
the dollar amount.

00:08:03.950 --> 00:08:06.880
So that's just, like I
said, for posterity.

00:08:06.880 --> 00:08:09.590
I'm going to let you ask your
other question, and I'm going

00:08:09.590 --> 00:08:12.785
to actually go on mute real
quick while I type and look

00:08:12.785 --> 00:08:16.090
for the rest of your post.

00:08:16.090 --> 00:08:16.920
CAROLINE MCLEAN: Thank you.

00:08:16.920 --> 00:08:19.560
Just to add to that, too, if
anybody's curious, Danny

00:08:19.560 --> 00:08:21.400
responded to that
in the forum.

00:08:21.400 --> 00:08:24.360
So you can see the full response
with the code sample

00:08:24.360 --> 00:08:28.050
in the forum, if anybody
else wanted it.

00:08:28.050 --> 00:08:29.670
I'm trying to remember what
the other one was too, so

00:08:29.670 --> 00:08:31.730
hopefully Danny will find
it faster than I do.

00:08:46.700 --> 00:08:50.630
Oh, I do have one that's not
on there too, which is just

00:08:50.630 --> 00:08:53.190
one of the questions that I saw
somebody recently post was

00:08:53.190 --> 00:08:54.790
about inventory running out.

00:08:54.790 --> 00:08:59.150
And I think I read somewhere
that as long as when they come

00:08:59.150 --> 00:09:01.470
to the page, it says it's out
of inventory, it's OK.

00:09:01.470 --> 00:09:03.540
But everything I've been reading
recently says, no, get

00:09:03.540 --> 00:09:06.770
it out of your feed ASAP.

00:09:06.770 --> 00:09:12.080
And I'm not sure to what
degree that's critical.

00:09:12.080 --> 00:09:15.080
Meaning if it's gone in 24
hours, is that OK, or does it

00:09:15.080 --> 00:09:18.460
really need to be gone the
minute inventory is out,

00:09:18.460 --> 00:09:22.910
either automagically through
the API or [INAUDIBLE]?

00:09:22.910 --> 00:09:25.810
DANNY HERMES: I can't comment
directly on that, because I

00:09:25.810 --> 00:09:28.450
don't specifically work
side-by-side with the Data

00:09:28.450 --> 00:09:30.010
Quality folks, and I don't
like to comment

00:09:30.010 --> 00:09:31.260
on that stuff anyhow.

00:09:31.260 --> 00:09:36.690
But what I will say, it's
relatively easy for you to do.

00:09:36.690 --> 00:09:39.000
That is the great thing
about the API.

00:09:39.000 --> 00:09:42.660
If you're used to the feeds
files world, then in order to

00:09:42.660 --> 00:09:45.690
change the inventory for one
product, you've got to send

00:09:45.690 --> 00:09:47.890
your entire feed again.

00:09:47.890 --> 00:09:48.980
But you don't have
to do that here.

00:09:48.980 --> 00:09:52.770
So if you make some hooks, with
either your merchants

00:09:52.770 --> 00:09:55.710
sending you new data, or if
you have some internal

00:09:55.710 --> 00:09:59.210
tracking system, if you make
some hooks you can instantly

00:09:59.210 --> 00:10:02.050
send the update the second
it happens, and it's no

00:10:02.050 --> 00:10:03.280
skin off your back.

00:10:03.280 --> 00:10:07.230
So it's something that's easy
to stay up-to-date with.

00:10:07.230 --> 00:10:10.990
And there will be penalties
if it is out of sync.

00:10:10.990 --> 00:10:12.760
I don't know what the
time range is.

00:10:12.760 --> 00:10:16.250
I would say 24 hours is
reasonable, but I can't

00:10:16.250 --> 00:10:17.780
guarantee that.

00:10:17.780 --> 00:10:20.100
Maybe it's something that
happens on a schedule.

00:10:20.100 --> 00:10:23.890
So if you do it at noon, and it
just so happens, instead of

00:10:23.890 --> 00:10:26.295
having 24 hours, you
only had three--

00:10:26.295 --> 00:10:27.790
I don't really know
how it works.

00:10:27.790 --> 00:10:30.360
And it's something that--

00:10:30.360 --> 00:10:34.170
it's a level of functionality
that is perfectly enabled by

00:10:34.170 --> 00:10:36.740
the API for you to be
able to address it

00:10:36.740 --> 00:10:39.620
the second it happens.

00:10:39.620 --> 00:10:41.830
I do have your other
questions.

00:10:41.830 --> 00:10:46.520
Let me zoom in on this,
so people can see.

00:10:46.520 --> 00:10:48.160
Hopefully, that's big enough.

00:10:52.830 --> 00:11:01.470
So you say you're relatively
new, you liked the overview--

00:11:01.470 --> 00:11:08.290
ah, bulk inserts, and also
policy infringement errors,

00:11:08.290 --> 00:11:10.290
and things like that.

00:11:10.290 --> 00:11:15.140
So bulk inserts is another thing
which the more you read

00:11:15.140 --> 00:11:18.950
the documentation, the
more you'll learn.

00:11:18.950 --> 00:11:20.890
But we support batching.

00:11:20.890 --> 00:11:24.150
So, what a batch is--

00:11:24.150 --> 00:11:26.210
typically, when you send inserts
and updates you're

00:11:26.210 --> 00:11:30.820
using the Atom entry XML element
to send everything.

00:11:30.820 --> 00:11:33.660
So there's actually an Atom
feed element which you can

00:11:33.660 --> 00:11:37.550
send a list of entry elements
in to do batching.

00:11:37.550 --> 00:11:41.380
So you could send an insert,
an update, and a delete all

00:11:41.380 --> 00:11:44.440
the same time, or you could
send hundreds of them

00:11:44.440 --> 00:11:45.170
all the same time.

00:11:45.170 --> 00:11:48.660
From what I hear, people who do
batch inserts, 150 products

00:11:48.660 --> 00:11:51.750
is about the most you can get
in one batch, because

00:11:51.750 --> 00:11:53.620
we cap it at 1MB.

00:11:53.620 --> 00:11:57.300
But it's very easy to do bulk
inserts using batching.

00:11:57.300 --> 00:12:01.330
But there are some
size limitations.

00:12:01.330 --> 00:12:05.410
Your other question about
registering for--

00:12:05.410 --> 00:12:06.666
CAROLINE MCLEAN: Danny, can
I just back you up?

00:12:06.666 --> 00:12:08.690
Just one more clarifying
question on that.

00:12:08.690 --> 00:12:11.280
And I'm pretty I saw on the
forums people asking to up

00:12:11.280 --> 00:12:12.800
that limit, and it
doesn't seem like

00:12:12.800 --> 00:12:13.870
it's an easy process.

00:12:13.870 --> 00:12:17.160
Seems easier to try and
batch it on your side.

00:12:17.160 --> 00:12:18.900
DANNY HERMES: It's not that's
it's a more difficult process.

00:12:18.900 --> 00:12:24.660
It's that this API is part of a
family of APIs, and to make

00:12:24.660 --> 00:12:28.070
a change for just us is not
really that possible.

00:12:28.070 --> 00:12:31.230
But also, in addition to that,
you want to keep the API fast.

00:12:31.230 --> 00:12:36.770
The average response time for
you to get your response back

00:12:36.770 --> 00:12:38.930
from us is 300 milliseconds.

00:12:38.930 --> 00:12:42.400
So the larger we make the
request, the longer it takes

00:12:42.400 --> 00:12:47.000
to return those responses, A.
And B, the greater the chances

00:12:47.000 --> 00:12:49.480
that it can drop in between,
or that some

00:12:49.480 --> 00:12:50.940
packets can drop, right?

00:12:50.940 --> 00:12:55.240
So it's actually more beneficial
to cap these

00:12:55.240 --> 00:12:58.410
batches at something that's
reasonable, given the

00:12:58.410 --> 00:13:00.950
pipelines that's sending
the data.

00:13:00.950 --> 00:13:01.980
CAROLINE MCLEAN: I guess I
didn't realize it was a

00:13:01.980 --> 00:13:03.210
synchronous process, too.

00:13:03.210 --> 00:13:04.940
So everything's synchronous,
meaning you get

00:13:04.940 --> 00:13:06.340
your immediate response?

00:13:06.340 --> 00:13:07.070
DANNY HERMES: Yes.

00:13:07.070 --> 00:13:12.090
And its formatted in exactly the
same way that it was sent,

00:13:12.090 --> 00:13:14.060
except there are a few
extra attributes.

00:13:14.060 --> 00:13:16.640
Like, we don't ask you to send
a published attribute, but we

00:13:16.640 --> 00:13:20.480
give you back a published
attribute for when the item

00:13:20.480 --> 00:13:22.610
was published.

00:13:22.610 --> 00:13:27.610
So can you comment on what you
mean by how to register for

00:13:27.610 --> 00:13:29.990
and process policy infringement
errors

00:13:29.990 --> 00:13:30.570
programmatically?

00:13:30.570 --> 00:13:32.490
CAROLINE MCLEAN: I saw some
event handlers, but it may

00:13:32.490 --> 00:13:35.400
have been more in the Google
API part than the actual

00:13:35.400 --> 00:13:36.560
Shopping API.

00:13:36.560 --> 00:13:38.430
So I think you may have answered
it there, that maybe

00:13:38.430 --> 00:13:43.130
when you do your batch insert,
would it come back and say,

00:13:43.130 --> 00:13:48.750
this product is lacking, this
brand, maybe it doesn't have

00:13:48.750 --> 00:13:51.930
this brand or it
doesn't have--

00:13:51.930 --> 00:13:55.370
would those be immediate, or
is there some way to--

00:13:55.370 --> 00:13:57.680
DANNY HERMES: So if it's a
required attribute, then it

00:13:57.680 --> 00:13:59.750
will come back immediately.

00:13:59.750 --> 00:14:03.460
And if you send an individual
request, you'll get the error

00:14:03.460 --> 00:14:07.460
in that individual request. If
it's in a batch request and

00:14:07.460 --> 00:14:09.430
some of the other ones succeed,
you'll still get

00:14:09.430 --> 00:14:12.710
successes for those, and you'll
just get an error block

00:14:12.710 --> 00:14:14.290
in the one that failed.

00:14:14.290 --> 00:14:18.980
There is a second round
of processing,

00:14:18.980 --> 00:14:20.900
let's say, that happens.

00:14:20.900 --> 00:14:24.320
And in that round, some other
errors can be found.

00:14:24.320 --> 00:14:26.940
And so there are other ways
to deal with that.

00:14:26.940 --> 00:14:28.980
We actually have a new data
quality, feed where you can

00:14:28.980 --> 00:14:33.670
see which items you have that
are in violation of certain

00:14:33.670 --> 00:14:36.280
data quality policies.

00:14:36.280 --> 00:14:36.370
CAROLINE MCLEAN: Cool.

00:14:36.370 --> 00:14:38.800
Is there documentation on
that data quality feed?

00:14:38.800 --> 00:14:39.300
DANNY HERMES: There is.

00:14:39.300 --> 00:14:43.320
On the left bar, you can see
all the main topics in the

00:14:43.320 --> 00:14:46.080
little drop-down boxes.

00:14:46.080 --> 00:14:47.330
CAROLINE MCLEAN: Awesome.

00:14:50.910 --> 00:14:51.590
DANNY HERMES: OK.

00:14:51.590 --> 00:14:55.330
So I think that wraps up the
questions you have, yeah?

00:14:55.330 --> 00:14:56.740
CAROLINE MCLEAN: I think
you're right.

00:14:56.740 --> 00:14:57.600
DANNY HERMES: OK.

00:14:57.600 --> 00:15:00.930
So I will stop sharing
that screen.

00:15:00.930 --> 00:15:03.300
And I will answer Mary
Kate's question.

00:15:03.300 --> 00:15:04.640
Mary Kate, do you not
have a microphone?

00:15:07.420 --> 00:15:08.670
I take it she does not.

00:15:08.670 --> 00:15:10.330
OK, she says no.

00:15:10.330 --> 00:15:13.220
So our question in chat, for
those who can't see the chat

00:15:13.220 --> 00:15:16.540
bar on the side, she says, "I
know you can't call within a

00:15:16.540 --> 00:15:17.850
specific category.

00:15:17.850 --> 00:15:20.180
I was curious if there's a way
to hone in on categories

00:15:20.180 --> 00:15:21.140
another way.

00:15:21.140 --> 00:15:23.890
Some areas I'm interested in
are great with queries, but

00:15:23.890 --> 00:15:25.360
others are incredibly cluttered

00:15:25.360 --> 00:15:26.650
with unrelated products.

00:15:26.650 --> 00:15:29.320
It's incredibly time-consuming
to clean those areas up.

00:15:29.320 --> 00:15:31.420
Category restriction would
be the best solution."

00:15:31.420 --> 00:15:35.130
So this seems to be a search
API question, not a content

00:15:35.130 --> 00:15:35.970
API question.

00:15:35.970 --> 00:15:37.220
Is this correct?

00:15:39.610 --> 00:15:41.470
I'm waiting for her to
respond in chat.

00:15:44.370 --> 00:15:48.310
OK, so I will address
it shortly.

00:15:48.310 --> 00:15:51.250
But this was mainly intended
for content

00:15:51.250 --> 00:15:53.190
API community today.

00:15:53.190 --> 00:15:55.970
But many of the content API
community also uses the search

00:15:55.970 --> 00:15:59.000
API, so it's a relevant
question nonetheless.

00:15:59.000 --> 00:16:04.740
So as you mentioned, it's not
possible to make requests by

00:16:04.740 --> 00:16:09.760
category for the public version
of the search API--

00:16:09.760 --> 00:16:12.500
that is, the search
API for Shopping.

00:16:12.500 --> 00:16:16.230
So sometimes you do have
unrelated products, and that's

00:16:16.230 --> 00:16:17.800
unfortunate.

00:16:17.800 --> 00:16:21.980
I don't really have any solution
for you for how to

00:16:21.980 --> 00:16:26.370
use category, other than if you
do have an idea of what

00:16:26.370 --> 00:16:30.670
the category is, then there
relevant keywords that you can

00:16:30.670 --> 00:16:32.830
use to strengthen your query.

00:16:32.830 --> 00:16:40.360
And if you are able to obtain
things like a GTIN, a Global

00:16:40.360 --> 00:16:44.930
Trade ID Number, for your items,
that can also really

00:16:44.930 --> 00:16:46.380
strengthen your search
results.

00:16:46.380 --> 00:16:49.320
But it's a feature we're
certainly aware of.

00:16:49.320 --> 00:16:51.590
And it's something that
we've considered.

00:16:51.590 --> 00:16:58.190
But I don't know that support
for searching and refining

00:16:58.190 --> 00:17:00.240
searches by category
is something

00:17:00.240 --> 00:17:01.120
that's going to be enabled.

00:17:01.120 --> 00:17:02.370
So I'm sorry about that.

00:17:06.589 --> 00:17:07.220
Yes, you're welcome.

00:17:07.220 --> 00:17:08.609
She says thank you
in the chat.

00:17:08.609 --> 00:17:10.960
So Andrew also--

00:17:10.960 --> 00:17:12.740
for those who can't see the
chat-- while I was talking

00:17:12.740 --> 00:17:16.380
about batch inserts mentioned
that you can do lots of

00:17:16.380 --> 00:17:21.960
deletes as well in the same
batch request. Since deletes

00:17:21.960 --> 00:17:24.160
tend to be small, you
can often get

00:17:24.160 --> 00:17:25.680
more than 150 deletes.

00:17:25.680 --> 00:17:28.440
Because to send a delete in
batch, you really only need

00:17:28.440 --> 00:17:33.220
two XML attributes, one being
the attribute that says your

00:17:33.220 --> 00:17:36.833
batch operation is delete, and
the other being the ID of the

00:17:36.833 --> 00:17:38.083
item you're deleting.

00:17:40.330 --> 00:17:44.570
And he's also saying you can
have more than one request

00:17:44.570 --> 00:17:45.860
sent out at the same time.

00:17:45.860 --> 00:17:50.050
So even if you can only send
150 items in one batch

00:17:50.050 --> 00:17:53.630
request, you can potentially
fire off five of those batch

00:17:53.630 --> 00:17:55.670
requests at the same time.

00:17:55.670 --> 00:17:58.160
But there's a caveat there that
he didn't mention that I

00:17:58.160 --> 00:18:01.250
will, that there is rate
limiting for queries per

00:18:01.250 --> 00:18:01.980
second as well.

00:18:01.980 --> 00:18:05.900
So if you send too many queries
in parallel, then you

00:18:05.900 --> 00:18:09.030
may get some of them rejected
for that rate limiting.

00:18:09.030 --> 00:18:13.840
So that wraps up all the pending
questions and comments

00:18:13.840 --> 00:18:16.970
we have. Does anybody else
have any other questions?

00:18:16.970 --> 00:18:22.790
AUDIENCE: Yes, I have my usual
four, approximately.

00:18:22.790 --> 00:18:26.910
On some of these attributes,
like age group, you're showing

00:18:26.910 --> 00:18:28.070
all lowercase letters
for those.

00:18:28.070 --> 00:18:30.250
You want those sent
in all lower case?

00:18:30.250 --> 00:18:30.520
DANNY HERMES: Yeah.

00:18:30.520 --> 00:18:37.740
So, the attribute names are
going to be explicit, that is,

00:18:37.740 --> 00:18:41.700
exactly how they are in
the documentation.

00:18:41.700 --> 00:18:44.070
You're actually referring to
the attribute name, not the

00:18:44.070 --> 00:18:45.650
value of the attribute, yes?

00:18:45.650 --> 00:18:46.400
AUDIENCE: I mean the value.

00:18:46.400 --> 00:18:49.590
Because like in the age group,
you have "kids" and "adults",

00:18:49.590 --> 00:18:51.904
or condition, things
like that.

00:18:54.420 --> 00:18:56.980
DANNY HERMES: I believe "kids"
and "adult" are the only

00:18:56.980 --> 00:18:58.130
accepted values there.

00:18:58.130 --> 00:18:59.640
I don't know off the
top of my head.

00:18:59.640 --> 00:19:00.380
Let me get back to you.

00:19:00.380 --> 00:19:03.420
Let me write this
down real quick.

00:19:03.420 --> 00:19:05.410
AUDIENCE: I just noticed when
I post products and when I

00:19:05.410 --> 00:19:08.180
look at the listing in Merchant
Center, we're sending

00:19:08.180 --> 00:19:10.880
some stuff that's got a
capitalized first letter like

00:19:10.880 --> 00:19:12.075
it's a color or something.

00:19:12.075 --> 00:19:13.800
And next to that, you'll see
something like age group, and

00:19:13.800 --> 00:19:15.835
of course, I'm sending
that all lowercase.

00:19:15.835 --> 00:19:17.970
I don't know if that
matters or not.

00:19:17.970 --> 00:19:20.730
DANNY HERMES: I don't know that
it matters most the time.

00:19:20.730 --> 00:19:23.350
But for something like
age group, there is a

00:19:23.350 --> 00:19:25.850
predetermined set of accepted
attributes.

00:19:25.850 --> 00:19:27.600
And I don't know if case
is relevant there.

00:19:27.600 --> 00:19:30.310
But that's actually going to be
the same irrespective of if

00:19:30.310 --> 00:19:33.820
you're using feeds or if you're
using the content API.

00:19:33.820 --> 00:19:41.660
It's the same data quality
rules, I guess, that apply to

00:19:41.660 --> 00:19:42.100
those values.

00:19:42.100 --> 00:19:44.360
So I don't know off
the top my head.

00:19:44.360 --> 00:19:46.680
I have written this question
down, and I'm going to try to

00:19:46.680 --> 00:19:49.992
get it answered within the next
hour or two, and then

00:19:49.992 --> 00:19:51.090
I'll post something
on the forum.

00:19:51.090 --> 00:19:52.570
AUDIENCE: I guess maybe I was
more concerned, just because

00:19:52.570 --> 00:19:55.540
you know how you feel like
this is customer-facing

00:19:55.540 --> 00:19:57.390
eventually, in product
search results.

00:19:57.390 --> 00:19:59.950
So you're just wondering, is the
customer going to end up

00:19:59.950 --> 00:20:03.550
seeing some stuff uppercase,
some stuff is lowercase.

00:20:03.550 --> 00:20:06.330
DANNY HERMES: So I don't believe
age group is actually

00:20:06.330 --> 00:20:07.240
customer-facing.

00:20:07.240 --> 00:20:13.060
I think that's more of an
attribute that enhances the

00:20:13.060 --> 00:20:17.850
quality of our search results
and the ability to categorize

00:20:17.850 --> 00:20:19.990
those products based
on age group.

00:20:19.990 --> 00:20:23.660
AUDIENCE: OK, so another
thing is going back to

00:20:23.660 --> 00:20:24.030
[? the enjoyment ?]

00:20:24.030 --> 00:20:26.950
we have with sale price and
sale price effective.

00:20:26.950 --> 00:20:30.820
So I looked up in product feed
specifications and they're

00:20:30.820 --> 00:20:35.210
showing sale_price and
sale_price_effective_date.

00:20:35.210 --> 00:20:38.470
And you say that's showing over
there in the g namespace,

00:20:38.470 --> 00:20:41.030
but you're saying submit those
in the sc namespace?

00:20:41.030 --> 00:20:45.680
DANNY HERMES: So the g namespace
is for if you want

00:20:45.680 --> 00:20:48.610
to send an XML feeds file.

00:20:48.610 --> 00:20:49.940
It's not a namespace.

00:20:49.940 --> 00:20:53.040
And calling it g or sc is kind
of arbitrary, right?

00:20:53.040 --> 00:20:57.840
Those are just aliases for
an actual XML spec.

00:20:57.840 --> 00:21:02.090
But that namespace doesn't have
anything to do with the

00:21:02.090 --> 00:21:03.280
content API.

00:21:03.280 --> 00:21:05.940
AUDIENCE: As far as using the
.NET client library, when I

00:21:05.940 --> 00:21:08.936
submit it, it's going to
automatically just add sc to

00:21:08.936 --> 00:21:09.985
the tag itself, right?

00:21:09.985 --> 00:21:11.460
DANNY HERMES: It would
if sale price were

00:21:11.460 --> 00:21:14.856
enabled, but it's not.

00:21:14.856 --> 00:21:16.870
AUDIENCE: I think we've done a
custom one before, so I'm not

00:21:16.870 --> 00:21:17.495
sure what--

00:21:17.495 --> 00:21:19.450
DANNY HERMES: I posted to the
forum with sample code.

00:21:19.450 --> 00:21:24.490
So on each product entry, there
is an attribute called

00:21:24.490 --> 00:21:25.550
CustomAttributes--

00:21:25.550 --> 00:21:28.540
that's camel case, so capital
Custom, capital A in

00:21:28.540 --> 00:21:29.760
Attributes.

00:21:29.760 --> 00:21:32.830
And that's an extension
list property--

00:21:32.830 --> 00:21:35.660
or I think that's what it's
called, extension something,

00:21:35.660 --> 00:21:38.240
extension property or
something like this.

00:21:38.240 --> 00:21:41.750
And so what you want to do,
you want to instantiate a

00:21:41.750 --> 00:21:43.710
custom attribute object.

00:21:43.710 --> 00:21:44.990
And there are three
constructors.

00:21:44.990 --> 00:21:48.380
There's the constructor with no
arguments, and then you can

00:21:48.380 --> 00:21:50.790
set the attributes after
constructing it.

00:21:50.790 --> 00:21:53.540
There's a constructor with two
arguments, which takes a name

00:21:53.540 --> 00:21:55.260
and a value of the attribute.

00:21:55.260 --> 00:21:57.060
And then there's a constructor
which takes all four

00:21:57.060 --> 00:21:57.880
arguments--

00:21:57.880 --> 00:22:01.480
name, value, unit, and type.

00:22:01.480 --> 00:22:06.300
So you could either use the
fourth one, and send type as

00:22:06.300 --> 00:22:08.685
null for sale price, because
there's no type for sale

00:22:08.685 --> 00:22:10.820
price, but there is a unit.

00:22:10.820 --> 00:22:13.150
Or you could use the other
one, where you just

00:22:13.150 --> 00:22:16.570
instantiate the value in the
name, and then after the fact

00:22:16.570 --> 00:22:21.700
set the unit to whatever your
units are on your price.

00:22:21.700 --> 00:22:23.700
AUDIENCE: I'm not sure if the
data quality people are going

00:22:23.700 --> 00:22:26.060
to be upset with me or not,
because what I'm doing now is

00:22:26.060 --> 00:22:27.860
I'm monitoring when an
item goes on sale.

00:22:27.860 --> 00:22:30.070
As soon as one of my merchants
marks it on sale, I

00:22:30.070 --> 00:22:33.180
immediately post an update with
the sale price as the

00:22:33.180 --> 00:22:34.170
price of the item.

00:22:34.170 --> 00:22:34.700
DANNY HERMES: That's fine.

00:22:34.700 --> 00:22:36.920
That's perfectly fine.

00:22:36.920 --> 00:22:39.280
Sale price and sale price
effective date are more for

00:22:39.280 --> 00:22:45.660
local stores, for the kinds of
things that you can have via

00:22:45.660 --> 00:22:47.040
local search and things
like that.

00:22:47.040 --> 00:22:50.020
We don't actually have sale
price and sale price effective

00:22:50.020 --> 00:22:55.330
date on our Docs for the
main items feed.

00:22:55.330 --> 00:23:00.590
We really only include them
on the local products feed

00:23:00.590 --> 00:23:04.130
documentation, but
there are many

00:23:04.130 --> 00:23:05.910
similarities between the two.

00:23:05.910 --> 00:23:08.110
AUDIENCE: I was just more
confused about if they go to

00:23:08.110 --> 00:23:11.330
review the product and they
arrive on the landing page,

00:23:11.330 --> 00:23:13.370
they're going to want
to see the price--

00:23:13.370 --> 00:23:15.070
if the item is currently
on sale, they

00:23:15.070 --> 00:23:16.220
want that to be reflected.

00:23:16.220 --> 00:23:19.215
It has to be reflected either
as the price or as the sale

00:23:19.215 --> 00:23:22.450
price inside of the effective
date, right, or they're going

00:23:22.450 --> 00:23:23.710
to reject the product.

00:23:23.710 --> 00:23:24.740
DANNY HERMES: Yeah.

00:23:24.740 --> 00:23:28.700
And that's why a lot of times a
sale price and a sale price

00:23:28.700 --> 00:23:32.210
effective date are more relevant
towards brick and

00:23:32.210 --> 00:23:34.100
mortar stores, rather
than online stores.

00:23:34.100 --> 00:23:36.790
Online stores we can just kind
of push a button and things

00:23:36.790 --> 00:23:39.990
change, whereas brick and mortar
you at least need to go

00:23:39.990 --> 00:23:43.590
the whole day with the price,
or usually at least.

00:23:43.590 --> 00:23:45.250
AUDIENCE: Is it your
understanding that when we do

00:23:45.250 --> 00:23:48.080
put the sale price and price
effective date, that we can

00:23:48.080 --> 00:23:51.570
leave the price attribute
as the list price?

00:23:51.570 --> 00:23:52.970
So even if we're showing
the price--

00:23:52.970 --> 00:23:55.290
let's say we're inside the
effective date, and we give a

00:23:55.290 --> 00:23:58.390
sale price that's lower than
list, and we leave the list

00:23:58.390 --> 00:23:59.660
price at whatever the
regular price is.

00:23:59.660 --> 00:24:01.440
When they arrive on the landing
page of the product,

00:24:01.440 --> 00:24:04.290
and it reflects the sale price,
they're OK with that

00:24:04.290 --> 00:24:08.070
list price still being entered
as the regular price, right?

00:24:08.070 --> 00:24:09.390
DANNY HERMES: I don't know
off the top of my head.

00:24:09.390 --> 00:24:10.850
I'll have to check with
you on that one.

00:24:10.850 --> 00:24:14.640
I'm going to say
it's likely no.

00:24:14.640 --> 00:24:21.700
It's likely no that that gives
you protection like that.

00:24:21.700 --> 00:24:25.340
I think sale price effective
date is more like a

00:24:25.340 --> 00:24:31.130
forward-looking attribute,
rather than a guard against

00:24:31.130 --> 00:24:31.970
your current state.

00:24:31.970 --> 00:24:33.690
AUDIENCE: So what do you want us
to submit for price, then?

00:24:33.690 --> 00:24:35.400
Because right now it's in
the.NET client library--

00:24:35.400 --> 00:24:36.060
DANNY HERMES: The
current price.

00:24:36.060 --> 00:24:37.990
AUDIENCE: --That's
all it gives you.

00:24:37.990 --> 00:24:40.200
DANNY HERMES: Submit
the current price.

00:24:40.200 --> 00:24:41.780
So like I said, sale price
is more like a

00:24:41.780 --> 00:24:42.730
forward-looking thing.

00:24:42.730 --> 00:24:45.440
So let's say it goes on sale
May 5, and you want

00:24:45.440 --> 00:24:46.650
people to know that.

00:24:46.650 --> 00:24:48.040
That's how you would do it.

00:24:48.040 --> 00:24:51.340
But then May 5, when the price
changes, set it to the price

00:24:51.340 --> 00:24:51.820
that it is.

00:24:51.820 --> 00:24:53.370
But I'll double-check
on that for you.

00:24:53.370 --> 00:24:54.960
CAROLINE MCLEAN: Yeah, Danny,
could you post that when you

00:24:54.960 --> 00:24:55.520
find it out?

00:24:55.520 --> 00:24:57.240
Because that was not
my impression.

00:24:57.240 --> 00:25:00.670
My impression was that was to
help you with rapidly changing

00:25:00.670 --> 00:25:03.580
items, to help you
manage that.

00:25:03.580 --> 00:25:06.460
DANNY HERMES: So, actually,
another thing that many people

00:25:06.460 --> 00:25:09.840
in here may already know, but
you won't know yet, Caroline,

00:25:09.840 --> 00:25:12.190
because you're new--

00:25:12.190 --> 00:25:15.690
Well, no, it's not something
that's really--

00:25:15.690 --> 00:25:17.070
or it's not that visible.

00:25:17.070 --> 00:25:19.930
But we have something called
the express pipeline.

00:25:19.930 --> 00:25:24.280
So when you send a change, when
you update a product--

00:25:24.280 --> 00:25:28.060
not a new product-- but you're
updating an existing product,

00:25:28.060 --> 00:25:29.450
and you change--

00:25:29.450 --> 00:25:33.550
it's a very limited set of
attributes, like availability,

00:25:33.550 --> 00:25:36.850
sale price, quantity,
things like that.

00:25:36.850 --> 00:25:39.610
Things that are really easy to
validate and really easy to

00:25:39.610 --> 00:25:43.640
check differences, it goes
in the express pipeline.

00:25:43.640 --> 00:25:46.220
So I mentioned before there
are sort of two stages of

00:25:46.220 --> 00:25:47.600
validation on our side.

00:25:47.600 --> 00:25:50.700
One is the initial validation,
when we're saying whether we

00:25:50.700 --> 00:25:52.920
accept or reject a request. But
then there's another one,

00:25:52.920 --> 00:25:55.950
where we're sort of checking
things in more detail.

00:25:55.950 --> 00:25:59.830
So in the case that you're only
checking the price, we're

00:25:59.830 --> 00:26:03.020
able to bypass that second stage
of checking-- or not

00:26:03.020 --> 00:26:05.820
bypass it, but we're really able
to speed it up, to turn

00:26:05.820 --> 00:26:08.080
into express mode.

00:26:08.080 --> 00:26:10.630
And in those cases,
your updates can

00:26:10.630 --> 00:26:13.130
go in within minutes.

00:26:13.130 --> 00:26:17.040
But for the majority of cases
it's not always like that.

00:26:17.040 --> 00:26:22.970
But sale price doesn't enhance
or decrease the speed with

00:26:22.970 --> 00:26:26.970
which the update is
going forward.

00:26:26.970 --> 00:26:27.070
AUDIENCE: OK.

00:26:27.070 --> 00:26:30.145
I guess I programmed that
right by mistake, just--

00:26:30.145 --> 00:26:33.620
firing the current price in
"price," and as soon as a

00:26:33.620 --> 00:26:35.485
merchant makes a change
over here, I fire it.

00:26:35.485 --> 00:26:37.990
And then as soon as it goes off
sale price on my system, I

00:26:37.990 --> 00:26:38.880
fire the price.

00:26:38.880 --> 00:26:40.060
DANNY HERMES: Yeah,
that's perfect.

00:26:40.060 --> 00:26:43.000
You have the ability to do
that because one, you're

00:26:43.000 --> 00:26:46.000
back-end, and because, two,
the API lets you.

00:26:46.000 --> 00:26:47.980
That's not always true
of a merchant.

00:26:47.980 --> 00:26:51.520
But there's no reason--

00:26:51.520 --> 00:26:53.860
if you're not limited by
computing resources, if you're

00:26:53.860 --> 00:26:57.820
not limited by resources on our
end actually allowing you

00:26:57.820 --> 00:27:00.470
to send it, there's no reason
not to keep your data is as

00:27:00.470 --> 00:27:02.406
up-to-date as you
know it to be.

00:27:02.406 --> 00:27:02.790
AUDIENCE: OK.

00:27:02.790 --> 00:27:04.510
And number three, you ready?

00:27:04.510 --> 00:27:04.970
DANNY HERMES: Yeah.

00:27:04.970 --> 00:27:05.560
AUDIENCE: OK.

00:27:05.560 --> 00:27:07.650
Now, this has nothing to do with
what I was working on,

00:27:07.650 --> 00:27:09.560
but I noticed the behavior, and
I just wanted to hear your

00:27:09.560 --> 00:27:10.580
comment on it.

00:27:10.580 --> 00:27:16.240
When I send a product up, and
it looks like it shows a

00:27:16.240 --> 00:27:18.076
creation date--

00:27:18.076 --> 00:27:20.830
I'm talking about inside the
Merchant Center console--

00:27:20.830 --> 00:27:21.590
it shows a creation date.

00:27:21.590 --> 00:27:23.370
I think it shows maybe
an updated date.

00:27:23.370 --> 00:27:25.970
But within like 5 minutes, or 20
minutes, or something, that

00:27:25.970 --> 00:27:29.570
display changes and it says
"posted on." And then when I

00:27:29.570 --> 00:27:34.740
pull an item query on it, the
updated property shows the

00:27:34.740 --> 00:27:36.000
current date time.

00:27:36.000 --> 00:27:37.810
So if I pull it every 15
minutes, I keep getting the

00:27:37.810 --> 00:27:40.740
current date time in
the updated date.

00:27:40.740 --> 00:27:42.910
Is that normal behavior?

00:27:42.910 --> 00:27:44.520
DANNY HERMES: I've never
inspected that before.

00:27:44.520 --> 00:27:45.620
I'm not sure about that.

00:27:45.620 --> 00:27:50.620
This one would actually be a
question for our engineers.

00:27:50.620 --> 00:27:51.751
AUDIENCE: It doesn't matter
to me in terms of what

00:27:51.751 --> 00:27:52.330
I'm trying to do.

00:27:52.330 --> 00:27:55.170
I just noticed that.

00:27:55.170 --> 00:27:56.710
DANNY HERMES: I don't know
why that would be.

00:27:56.710 --> 00:27:59.830
AUDIENCE: I sort of compare my
own internal last modified

00:27:59.830 --> 00:28:02.740
product date time to the current
date time to determine

00:28:02.740 --> 00:28:04.440
whether or not I need to
fire it as an update.

00:28:04.440 --> 00:28:06.920
So I'm not even using Google
data to know whether I need to

00:28:06.920 --> 00:28:08.610
update or not, I'm using
my own internal.

00:28:08.610 --> 00:28:09.370
DANNY HERMES: Right.

00:28:09.370 --> 00:28:12.500
AUDIENCE: OK, I just wanted
to ask that question.

00:28:12.500 --> 00:28:14.760
DANNY HERMES: So your
application is truly RESTful.

00:28:14.760 --> 00:28:17.510
You're not reconstructing
items on the fly, you're

00:28:17.510 --> 00:28:20.493
actually doing GETs first before
sending them back, huh?

00:28:20.493 --> 00:28:21.850
AUDIENCE: That's correct.

00:28:21.850 --> 00:28:25.200
It took me two days and maybe
24 hours [INAUDIBLE].

00:28:25.200 --> 00:28:26.035
DANNY HERMES: I admire that.

00:28:26.035 --> 00:28:26.710
That's great.

00:28:26.710 --> 00:28:29.500
I mean, like I said, that is
REST. Other than the fact that

00:28:29.500 --> 00:28:34.540
we're using a POST request for
batch when we we're sending

00:28:34.540 --> 00:28:38.570
batch requests that do more
than just insert.

00:28:38.570 --> 00:28:41.910
But other than that fact--

00:28:41.910 --> 00:28:43.360
it's mostly RESTful.

00:28:43.360 --> 00:28:44.850
So the thing about it is--

00:28:44.850 --> 00:28:47.202
and on my far right
here, Andrew at

00:28:47.202 --> 00:28:49.100
Zazzle can tell you--

00:28:49.100 --> 00:28:50.650
once you get to a certain
size, you

00:28:50.650 --> 00:28:53.470
can't be truly RESTful.

00:28:53.470 --> 00:28:54.490
It just isn't feasible.

00:28:54.490 --> 00:28:57.960
So it's something you should
consider as you get bigger,

00:28:57.960 --> 00:29:01.035
because it effectively doubles
the number of requests you

00:29:01.035 --> 00:29:02.390
need to make.

00:29:02.390 --> 00:29:05.910
Not exactly, like a delete you
probably don't need to

00:29:05.910 --> 00:29:09.000
actually do a request, because
in order to do the request,

00:29:09.000 --> 00:29:10.700
you need to know the item ID.

00:29:10.700 --> 00:29:14.940
So you're not going to gain
anything to do the delete.

00:29:14.940 --> 00:29:17.870
But for subsequent updates and
things like that, it may not

00:29:17.870 --> 00:29:19.170
be possible to stay RESTful.

00:29:19.170 --> 00:29:20.450
I admire it right now.

00:29:20.450 --> 00:29:21.230
I do.

00:29:21.230 --> 00:29:23.540
But it's something to keep in
mind. going forward, it may

00:29:23.540 --> 00:29:24.470
not be scalable.

00:29:24.470 --> 00:29:27.070
AUDIENCE: I did program it to
monitor the quota limits and

00:29:27.070 --> 00:29:27.880
[INAUDIBLE]

00:29:27.880 --> 00:29:29.260
the QPS, the re-fire.

00:29:29.260 --> 00:29:30.195
I did all that programming.

00:29:30.195 --> 00:29:32.210
So it'll run, like you
say, for a while--

00:29:32.210 --> 00:29:32.780
DANNY HERMES: More power, man.

00:29:32.780 --> 00:29:36.140
AUDIENCE: --before it starts
to break down.

00:29:36.140 --> 00:29:38.510
The last question is, how can
I get one of those cool

00:29:38.510 --> 00:29:43.320
Developer Relation Google
hoodies there?

00:29:43.320 --> 00:29:44.505
DANNY HERMES: You're going to
have to come to some event we

00:29:44.505 --> 00:29:46.790
host. I don't know off
the top of my head.

00:29:46.790 --> 00:29:48.850
As far as I know, the only
people that have them are

00:29:48.850 --> 00:29:49.940
people in DevRel.

00:29:49.940 --> 00:29:51.880
They're relatively new.

00:29:51.880 --> 00:29:57.550
But we do give swag away pretty
often, so just keep

00:29:57.550 --> 00:30:00.766
your ear towards me, and maybe
something will come up.

00:30:00.766 --> 00:30:01.110
AUDIENCE: Let me know.

00:30:01.110 --> 00:30:02.270
All right, thanks a lot.

00:30:02.270 --> 00:30:03.180
DANNY HERMES: Sure.

00:30:03.180 --> 00:30:04.430
Any other questions?

00:30:06.560 --> 00:30:07.580
AARON: Hey, Daniel.

00:30:07.580 --> 00:30:09.920
DANNY HERMES: Hey.

00:30:09.920 --> 00:30:10.750
AARON: I've got a question.

00:30:10.750 --> 00:30:12.710
Could you elaborate on--

00:30:12.710 --> 00:30:14.720
you talked about the
rate limiting?

00:30:14.720 --> 00:30:16.780
DANNY HERMES: This is Aaron
speaking, I presume?

00:30:16.780 --> 00:30:17.360
AARON: Yes, it is.

00:30:17.360 --> 00:30:18.654
Sorry about that.

00:30:18.654 --> 00:30:19.640
DANNY HERMES: No worries.

00:30:19.640 --> 00:30:21.710
AARON: I work with Caroline.

00:30:21.710 --> 00:30:22.960
DANNY HERMES: Oh, OK.

00:30:24.980 --> 00:30:28.940
AARON: Is that the rate
applied per login?

00:30:32.660 --> 00:30:33.810
DANNY HERMES: So you don't
really think of

00:30:33.810 --> 00:30:34.890
it in terms of logins.

00:30:34.890 --> 00:30:36.650
So when you send a
request, you're

00:30:36.650 --> 00:30:38.250
signing it with a token.

00:30:38.250 --> 00:30:39.810
So you can get tokens--

00:30:39.810 --> 00:30:42.120
right now, there are four ways
to get tokens with Google.

00:30:42.120 --> 00:30:46.070
You can get OAuth 1.0 tokens,
OAuth 2.0 tokens, AuthSub

00:30:46.070 --> 00:30:48.020
tokens, or ClientLogin tokens.

00:30:48.020 --> 00:30:49.340
I think that's all.

00:30:49.340 --> 00:30:52.210
I highly recommend going with
OAuth 2.0, because the other

00:30:52.210 --> 00:30:54.300
three are being deprecated over
the next three years.

00:30:54.300 --> 00:30:58.690
So it doesn't make sense to tie
yourself to a ship that's

00:30:58.690 --> 00:30:59.720
not going to be a
ship anymore.

00:30:59.720 --> 00:31:02.310
I'm not going to call
it a sinking ship.

00:31:02.310 --> 00:31:07.770
But anyway, so it's not
really about a login.

00:31:07.770 --> 00:31:11.630
If you were referring to a
particular account, then yes,

00:31:11.630 --> 00:31:13.560
a QPS is account-based.

00:31:13.560 --> 00:31:16.740
And that would be like the
account that you sign in with

00:31:16.740 --> 00:31:18.380
Google, not the merchant ID.

00:31:18.380 --> 00:31:21.590
So if you have a multi-client
account, and you're making

00:31:21.590 --> 00:31:26.650
requests to hundreds of
sub-accounts, but with the

00:31:26.650 --> 00:31:29.790
same account, then all those
requests will fall under the

00:31:29.790 --> 00:31:30.770
same limit.

00:31:30.770 --> 00:31:34.800
The limit is not
that stringent.

00:31:34.800 --> 00:31:36.320
It's pretty flexible.

00:31:36.320 --> 00:31:40.540
But with any service offered
to the world, you have to

00:31:40.540 --> 00:31:42.950
protect against
denial-of-service.

00:31:42.950 --> 00:31:45.840
So that's just in place for
us to protect against

00:31:45.840 --> 00:31:46.690
denial-of-service.

00:31:46.690 --> 00:31:51.940
And if you run into it,
exponential backoff is usually

00:31:51.940 --> 00:31:56.620
relatively easy, and a lot of
times, the QPS errors you get

00:31:56.620 --> 00:32:00.810
go away within 15 seconds
or 30 seconds.

00:32:00.810 --> 00:32:02.550
There is a second bit
of quota that you

00:32:02.550 --> 00:32:03.570
might be asking about.

00:32:03.570 --> 00:32:06.070
You have a daily quota.

00:32:06.070 --> 00:32:09.480
And that one, if you get to a
size enough to where you're

00:32:09.480 --> 00:32:12.730
exceeding it legitimately, just
let us know, and we will

00:32:12.730 --> 00:32:14.150
increase it.

00:32:14.150 --> 00:32:17.010
But if there's anything else I
didn't cover, let me know.

00:32:20.110 --> 00:32:21.030
AARON: That's does it, thanks.

00:32:21.030 --> 00:32:22.280
DANNY HERMES: Sure.

00:32:23.960 --> 00:32:26.480
Yeah, I don't know if anyone
looked at the Python doc that

00:32:26.480 --> 00:32:28.050
I just published last week.

00:32:28.050 --> 00:32:31.380
I'm going to doubt it, based on
the number of downloads and

00:32:31.380 --> 00:32:34.450
things like that.

00:32:34.450 --> 00:32:38.550
But I do strongly encourage in
that doc to move to OAuth 2.0

00:32:38.550 --> 00:32:39.390
if you're not already there.

00:32:39.390 --> 00:32:41.310
We announced--

00:32:41.310 --> 00:32:45.580
what is it, about
12 days ago now?

00:32:45.580 --> 00:32:46.550
Or maybe it's 5.

00:32:46.550 --> 00:32:47.820
Either 5 12 days ago.

00:32:47.820 --> 00:32:50.630
I don't recall which
Friday it was now.

00:32:50.630 --> 00:32:54.950
But we announced that OAuth 1.0,
AuthSub and ClientLogin

00:32:54.950 --> 00:32:56.460
are all being deprecated
as auth

00:32:56.460 --> 00:32:59.180
mechanisms, for various reasons.

00:32:59.180 --> 00:33:01.760
OAuth 1.0 just because OAuth 2.0
is an improvement on it.

00:33:01.760 --> 00:33:04.650
And AuthSub and ClientLogin--

00:33:04.650 --> 00:33:07.230
well, ClientLogin is being
deprecated mostly because

00:33:07.230 --> 00:33:10.960
keeping passwords in the clear
is never a good idea.

00:33:10.960 --> 00:33:14.620
So like I said, you have three
years to make it there, but

00:33:14.620 --> 00:33:18.530
it'd be nice to start
the process now.

00:33:18.530 --> 00:33:21.810
And if people work on that over
the next two weeks and

00:33:21.810 --> 00:33:25.320
have questions at the next
Hangout that we have on May

00:33:25.320 --> 00:33:30.830
16, I'd be happy to talk
about them then.

00:33:30.830 --> 00:33:32.250
So do we have any
other questions?

00:33:32.250 --> 00:33:33.720
Andrew, any questions
from you?

00:33:33.720 --> 00:33:35.250
ANDREW: I have a feature
request.

00:33:35.250 --> 00:33:37.430
DANNY HERMES: OK.

00:33:37.430 --> 00:33:42.270
ANDREW: So I love the
API dashboard.

00:33:42.270 --> 00:33:48.720
And especially because last
week, I suddenly ran into bad

00:33:48.720 --> 00:33:50.100
categories.

00:33:50.100 --> 00:33:53.162
Which, I guess I was using old
categories, and they changed,

00:33:53.162 --> 00:33:57.370
and I had to change it in the
database, and all that stuff.

00:33:57.370 --> 00:34:01.260
But it went on like that for
two days, even though I was

00:34:01.260 --> 00:34:04.790
having about a 40%
failure rate.

00:34:04.790 --> 00:34:06.200
DANNY HERMES: What went
on like that?

00:34:06.200 --> 00:34:08.760
ANDREW: Oh, I was sending
bad categories--

00:34:08.760 --> 00:34:09.710
DANNY HERMES: Oh, I gotcha.

00:34:09.710 --> 00:34:11.360
ANDREW: --behind the scenes.

00:34:11.360 --> 00:34:13.710
It wasn't until somebody
noticed, actually, a decline

00:34:13.710 --> 00:34:17.219
in linkovers that I
got to check it.

00:34:17.219 --> 00:34:20.780
I was wondering if there would
be any way-- like there used

00:34:20.780 --> 00:34:25.679
to be emails that would be sent,
for the feed-based ones.

00:34:25.679 --> 00:34:27.409
So you guys could send a rate?

00:34:30.790 --> 00:34:33.010
DANNY HERMES: This was an issue
that people on the forum

00:34:33.010 --> 00:34:34.190
were kind of upset about.

00:34:34.190 --> 00:34:38.030
And I just said, it's
out of my hands.

00:34:38.030 --> 00:34:39.550
Go over to the Merchant
Center forum.

00:34:39.550 --> 00:34:41.090
I don't know off the
top of my head.

00:34:41.090 --> 00:34:44.920
I can update some of those
threads, if you like, and I'll

00:34:44.920 --> 00:34:47.550
CC you on the email when
I update those threads.

00:34:47.550 --> 00:34:49.639
I don't know off the top of my
head what they came up with,

00:34:49.639 --> 00:34:53.330
but the team realized there
was sort of insufficient

00:34:53.330 --> 00:34:56.080
communication going
forward for those.

00:34:56.080 --> 00:34:58.990
So I'll let you know if they
came up with anything or what

00:34:58.990 --> 00:35:00.130
they came up with.

00:35:00.130 --> 00:35:02.030
ANDREW: Yeah, I was thinking--

00:35:02.030 --> 00:35:03.670
that's a different thing.

00:35:03.670 --> 00:35:06.670
The problem that was happening
is kind of unrelated here to

00:35:06.670 --> 00:35:08.640
my feature request. I was
wondering if there would be

00:35:08.640 --> 00:35:12.380
some way that emails could be
triggered at a certain error

00:35:12.380 --> 00:35:18.170
percentage or something
on API requests.

00:35:18.170 --> 00:35:22.680
I realize that with the
feed-based emails, that's kind

00:35:22.680 --> 00:35:23.560
of easier for you guys.

00:35:23.560 --> 00:35:25.730
Because as soon as the feed's
processed, you can send an

00:35:25.730 --> 00:35:31.040
email, and it's all real
clear and synchronous.

00:35:31.040 --> 00:35:32.500
DANNY HERMES: Without going into
too much detail, I'll let

00:35:32.500 --> 00:35:37.790
you know that we have a big
dashboard of most frequent

00:35:37.790 --> 00:35:39.290
requesters and things
like that.

00:35:39.290 --> 00:35:43.940
And when people mess up
something, when people

00:35:43.940 --> 00:35:49.220
introduce a bug, or when
people are just getting

00:35:49.220 --> 00:35:53.900
started out, and they're doing
things, or hundreds of other

00:35:53.900 --> 00:35:58.710
situations, we see error rates
over 90% pretty frequently.

00:35:58.710 --> 00:36:02.900
So off the top of my head, I
don't know how much something

00:36:02.900 --> 00:36:03.820
like that makes sense.

00:36:03.820 --> 00:36:07.670
Maybe as an opt-in, it does.

00:36:07.670 --> 00:36:11.840
I'll certainly toss it around
with the eng team, and see

00:36:11.840 --> 00:36:12.760
what they have to say.

00:36:12.760 --> 00:36:15.090
But I don't know off the
top of my head if

00:36:15.090 --> 00:36:15.790
that's the best way.

00:36:15.790 --> 00:36:20.060
There might be a better
way, like some sort of

00:36:20.060 --> 00:36:23.910
account-level API,
where you can get

00:36:23.910 --> 00:36:25.190
various stats like that.

00:36:25.190 --> 00:36:28.720
But I don't know if an
email is the best

00:36:28.720 --> 00:36:29.340
way to go about it.

00:36:29.340 --> 00:36:30.640
But I hear you.

00:36:30.640 --> 00:36:32.220
I appreciate it.

00:36:32.220 --> 00:36:34.780
And it certainly does
make sense.

00:36:34.780 --> 00:36:38.750
I'm surprised you don't have
a monitor for failure rate.

00:36:38.750 --> 00:36:41.830
ANDREW: Well, do now.

00:36:41.830 --> 00:36:45.400
But yeah, I get a lot
of random errors.

00:36:45.400 --> 00:36:47.194
DANNY HERMES: Every programmer
assumes he never fails, right?

00:36:47.194 --> 00:36:48.570
That's how I am, too.

00:36:48.570 --> 00:36:49.980
ANDREW: Well, no, it's actually
the other way around.

00:36:49.980 --> 00:36:55.490
I get a lot of 1 per 10,000,
or something like that.

00:36:55.490 --> 00:36:57.830
And I didn't want to be
overwhelmed by those.

00:36:57.830 --> 00:37:00.690
But I know Google is all about
statistics, and I thought

00:37:00.690 --> 00:37:03.820
maybe you guys could have
a cool algorithm,

00:37:03.820 --> 00:37:05.600
or something that--

00:37:05.600 --> 00:37:07.600
DANNY HERMES: Yeah,
I'll let you know.

00:37:07.600 --> 00:37:11.040
Like if you go from 95%
acceptance to 60% acceptance

00:37:11.040 --> 00:37:11.670
it's kind of--

00:37:11.670 --> 00:37:14.310
ANDREW: Yeah, I think that's
kind of Amazon's works.

00:37:14.310 --> 00:37:17.610
Because Amazon never sends me
an email unless there's

00:37:17.610 --> 00:37:21.610
something really bad, and then
they send something.

00:37:21.610 --> 00:37:24.200
But there may be human
intervention on that side, for

00:37:24.200 --> 00:37:25.450
all I know.

00:37:28.700 --> 00:37:30.870
DANNY HERMES: I'll let you
know how that chat goes.

00:37:34.510 --> 00:37:36.710
I'm going to open a feature
request on the external

00:37:36.710 --> 00:37:45.180
shopping-APIs-issues list of
feature requests, and bug

00:37:45.180 --> 00:37:47.280
reports, and things like that.

00:37:47.280 --> 00:37:51.740
And I'll pin you with it,
so you can watch it.

00:37:51.740 --> 00:37:55.700
All right, does anybody else
have other questions?

00:37:55.700 --> 00:37:57.020
AUDIENCE: There's nothing
like this for Google

00:37:57.020 --> 00:37:58.175
Checkout, is there?

00:37:58.175 --> 00:38:01.970
They don't have a point
person like you?

00:38:01.970 --> 00:38:02.600
DANNY HERMES: No.

00:38:02.600 --> 00:38:04.870
There are people on my team
that support it, but

00:38:04.870 --> 00:38:08.860
Checkout's actually being
deprecated, the API is.

00:38:08.860 --> 00:38:09.480
And?

00:38:09.480 --> 00:38:11.500
There are other ones
coming in place.

00:38:11.500 --> 00:38:14.770
But I don't--

00:38:18.240 --> 00:38:22.760
AUDIENCE: I posted something to
their code, a bug report,

00:38:22.760 --> 00:38:23.990
and it just sits there.

00:38:23.990 --> 00:38:27.640
It's the only issue, and
they don't respond.

00:38:27.640 --> 00:38:30.580
DANNY HERMES: Yeah, if you want
to ping that to me, I can

00:38:30.580 --> 00:38:35.650
push it through internally,
and see where that is.

00:38:35.650 --> 00:38:38.080
They have DevRel, but they don't
really have dedicated

00:38:38.080 --> 00:38:41.640
DevRel who are actively pushing
product forward, doing

00:38:41.640 --> 00:38:43.602
Hangouts, things like that.

00:38:43.602 --> 00:38:45.330
AUDIENCE: OK.

00:38:45.330 --> 00:38:46.210
DANNY HERMES: But they
are on my team.

00:38:46.210 --> 00:38:48.380
I'm part of the Commerce
umbrella.

00:38:48.380 --> 00:38:53.830
So pretty much anything
related to Commerce I

00:38:53.830 --> 00:38:56.105
tangentially know about,
in some way or another.

00:38:56.105 --> 00:38:58.330
AUDIENCE: I could mention to
you real briefly, if a

00:38:58.330 --> 00:39:00.710
customer goes to Checkout, and
let's say they're not signed

00:39:00.710 --> 00:39:02.160
into Google.

00:39:02.160 --> 00:39:04.700
They're going to get your
Shopping Cart in one frame,

00:39:04.700 --> 00:39:05.230
and then in the other frame
it's going to be

00:39:05.230 --> 00:39:05.603
[UNINTELLIGIBLE]--

00:39:05.603 --> 00:39:06.350
DANNY HERMES: There's
an iframe, right?

00:39:06.350 --> 00:39:07.150
AUDIENCE: --form, right?

00:39:07.150 --> 00:39:10.510
If they hit the Back button,
it reloads the Cart only in

00:39:10.510 --> 00:39:12.790
the upper frame, and takes
up a lot of the page.

00:39:12.790 --> 00:39:15.300
DANNY HERMES: That's
being changed.

00:39:15.300 --> 00:39:16.310
AUDIENCE: OK.

00:39:16.310 --> 00:39:20.520
DANNY HERMES: The issue there
is if you do what's called a

00:39:20.520 --> 00:39:21.640
light box--

00:39:21.640 --> 00:39:23.830
I don't know if you're familiar
with the term in

00:39:23.830 --> 00:39:27.180
design and development--
but a light box is--

00:39:27.180 --> 00:39:29.890
I'm trying to think of a website
you might have seen.

00:39:29.890 --> 00:39:31.540
A lot of times, sites
do this with ads.

00:39:31.540 --> 00:39:33.330
When you come to their page, and
they want to show you an

00:39:33.330 --> 00:39:35.870
ad and nothing else, they'll
put the ad in the center of

00:39:35.870 --> 00:39:38.450
the screen, and then everything
else they put a

00:39:38.450 --> 00:39:40.680
black transparent background
on top of.

00:39:40.680 --> 00:39:44.475
So you can see it, but it's sort
of dark, and the thing in

00:39:44.475 --> 00:39:45.400
the front is light.

00:39:45.400 --> 00:39:46.360
So that's the light box.

00:39:46.360 --> 00:39:48.700
And so what happens with light
boxes most of the time is

00:39:48.700 --> 00:39:51.240
people use an iframe to
point to another page.

00:39:51.240 --> 00:39:55.850
Well if you do that with
payments, then there are some

00:39:55.850 --> 00:39:59.440
security risks that people don't
actually know what page

00:39:59.440 --> 00:40:02.060
they're saying they're signing
in with and giving their

00:40:02.060 --> 00:40:03.470
credit card information to.

00:40:03.470 --> 00:40:08.460
So it's a hard problem to get
right and make really

00:40:08.460 --> 00:40:10.060
user-friendly, and it's
something they're still

00:40:10.060 --> 00:40:11.920
iterating on.

00:40:11.920 --> 00:40:12.700
AUDIENCE: But you're
saying that whole

00:40:12.700 --> 00:40:13.750
display might change?

00:40:13.750 --> 00:40:15.340
Or that whole process
might change?

00:40:15.340 --> 00:40:17.420
DANNY HERMES: It's something
that is not set in stone.

00:40:17.420 --> 00:40:20.170
I don't know if it will change
or not, but it is something

00:40:20.170 --> 00:40:23.440
they're always looking for
ways to make better, and

00:40:23.440 --> 00:40:25.990
they're trying to think of the
best way to go about it.

00:40:25.990 --> 00:40:28.510
AUDIENCE: I just thought maybe
not loading that in two frames

00:40:28.510 --> 00:40:29.100
would solve that.

00:40:29.100 --> 00:40:31.870
Load the cart, and then
load the sign-in page

00:40:31.870 --> 00:40:33.230
below on the same page.

00:40:33.230 --> 00:40:35.370
But, they must've had
a reason why.

00:40:35.370 --> 00:40:36.420
DANNY HERMES: I don't know.

00:40:36.420 --> 00:40:37.600
I don't work with that
team closely.

00:40:37.600 --> 00:40:39.630
So I don't know what's been
decided up until now.

00:40:42.360 --> 00:40:45.850
So it seems like that's
everything for today.

00:40:45.850 --> 00:40:47.110
It was a nice crowd.

00:40:47.110 --> 00:40:51.000
We even had some viewers of
the Hangout outside of the

00:40:51.000 --> 00:40:53.320
Hangout earlier, which
may have been some of

00:40:53.320 --> 00:40:54.380
these folks, may not.

00:40:54.380 --> 00:40:58.240
But it's the first time we've
had external viewers, in our

00:40:58.240 --> 00:40:59.010
third Hangout now.

00:40:59.010 --> 00:41:02.300
So it's growing, and
I like to see that.

00:41:02.300 --> 00:41:04.310
So thanks, everybody.

00:41:04.310 --> 00:41:06.510
And I will see you next week.

00:41:06.510 --> 00:41:08.690
Or, I guess two weeks.

00:41:08.690 --> 00:41:09.230
Cheers.

00:41:09.230 --> 00:41:10.110
AUDIENCE: Cheers.

00:41:10.110 --> 00:41:10.920
CAROLINE MCLEAN: Danny,
thanks for your help.

00:41:10.920 --> 00:41:12.170
DANNY HERMES: Sure thing.

