WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.493
[MUSIC PLAYING]

00:00:07.990 --> 00:00:09.410
AYLIN ALTIOK: Hello, everyone.

00:00:09.410 --> 00:00:12.800
We are very excited to
have you all here today.

00:00:12.800 --> 00:00:15.340
My name is Aylin, and
I'm a product manager

00:00:15.340 --> 00:00:17.206
for Actions on Google.

00:00:17.206 --> 00:00:18.580
NICK FELKER: And
I'm Nick Felker.

00:00:18.580 --> 00:00:20.740
I'm a developer programs
engineer for the Google

00:00:20.740 --> 00:00:23.026
Assistant and IoT.

00:00:23.026 --> 00:00:24.400
AYLIN ALTIOK:
Today, we will talk

00:00:24.400 --> 00:00:28.240
about best practices
for testing your actions

00:00:28.240 --> 00:00:32.240
and the tools we have built
to make it easier for you.

00:00:32.240 --> 00:00:34.540
But before getting
into details I

00:00:34.540 --> 00:00:38.840
want to mention why
testing is so important.

00:00:38.840 --> 00:00:43.200
It's important because
your users care about it.

00:00:43.200 --> 00:00:46.060
How do w know that?

00:00:46.060 --> 00:00:52.150
By looking at f reviews,
we noticed 42% of the users

00:00:52.150 --> 00:00:56.980
mention app stability and
bugs in their one-star review.

00:00:59.810 --> 00:01:04.040
And 62% of the users
uninstall the app

00:01:04.040 --> 00:01:10.040
if they notice crash,
freeze, or an error.

00:01:10.040 --> 00:01:14.780
On the flip side,
though, 73% of the users

00:01:14.780 --> 00:01:18.680
mention speed,
design, and usability

00:01:18.680 --> 00:01:21.620
in their five-star review.

00:01:21.620 --> 00:01:26.390
So this tells us users
want five-star apps.

00:01:26.390 --> 00:01:28.280
And this has been
the trend we have

00:01:28.280 --> 00:01:31.100
been seeing in mobile world.

00:01:31.100 --> 00:01:34.820
And it's no different
when it comes to actions.

00:01:34.820 --> 00:01:38.990
So today, we will walk you
through some tips and tools

00:01:38.990 --> 00:01:44.010
that will let you build
your own five-star actions.

00:01:44.010 --> 00:01:47.040
Our journey today
starts with Jane.

00:01:47.040 --> 00:01:48.990
Jane is a Node.js developer.

00:01:48.990 --> 00:01:52.900
She works in a startup, and she
wants to build her own action.

00:01:55.480 --> 00:01:58.030
Her action is
called Trail Blazer.

00:01:58.030 --> 00:02:02.020
And Trail Blazer will
return nearby bike trails

00:02:02.020 --> 00:02:03.370
for a given user location.

00:02:06.130 --> 00:02:11.330
So together, we'll start our
journey designing and building

00:02:11.330 --> 00:02:14.550
Trail Blazer with Dialogflow.

00:02:14.550 --> 00:02:19.390
Then we will test it
locally by using simulator.

00:02:19.390 --> 00:02:22.710
And we'll show you how you
can write your own unit

00:02:22.710 --> 00:02:29.140
test for your actions by using
automated testing library.

00:02:29.140 --> 00:02:32.140
And we'll show you how
you can test your actions

00:02:32.140 --> 00:02:36.220
with your own users by
using alpha and beta release

00:02:36.220 --> 00:02:38.530
environments.

00:02:38.530 --> 00:02:41.710
This is something we
just announced yesterday,

00:02:41.710 --> 00:02:45.370
and we are super excited to
show you the details later today

00:02:45.370 --> 00:02:47.450
in this session.

00:02:47.450 --> 00:02:51.020
And once you deploy our
action to production,

00:02:51.020 --> 00:02:53.920
we'll show you some tools
like health analytics

00:02:53.920 --> 00:02:58.090
and Stackdriver logging to
make sure your actions remain

00:02:58.090 --> 00:03:03.240
healthy throughout
the lifecycle.

00:03:03.240 --> 00:03:03.990
Awesome.

00:03:03.990 --> 00:03:06.400
Let's start with
design and build.

00:03:06.400 --> 00:03:08.690
So we'll do that
with Dialogflow.

00:03:08.690 --> 00:03:13.020
Dialogflow enables you to
build rich conversational

00:03:13.020 --> 00:03:14.700
experiences.

00:03:14.700 --> 00:03:16.540
How does it do that?

00:03:16.540 --> 00:03:20.850
It gives you major language
processing out of the box.

00:03:20.850 --> 00:03:24.900
So it takes unstructured
user response,

00:03:24.900 --> 00:03:28.470
and it automatically matches
that to intents and entities

00:03:28.470 --> 00:03:29.700
you defined.

00:03:29.700 --> 00:03:33.450
And you can handle this
in your own server.

00:03:33.450 --> 00:03:35.340
So as a developer,
you don't need

00:03:35.340 --> 00:03:37.680
to worry about
knowing or writing

00:03:37.680 --> 00:03:40.080
your own machine
learning models.

00:03:40.080 --> 00:03:43.800
It just works for you
if you use Dialogflow.

00:03:43.800 --> 00:03:46.620
Let's see what it
means for Trail Blazer.

00:03:46.620 --> 00:03:49.590
So as you can see,
Dialogflow sits

00:03:49.590 --> 00:03:52.960
in between Assistant
server and your own server.

00:03:52.960 --> 00:03:56.100
So for Trail Blazer, we
use Google Cloud Platform

00:03:56.100 --> 00:03:59.200
to build our own server logic.

00:03:59.200 --> 00:04:03.140
So when user says,
talk to Trail Blazer,

00:04:03.140 --> 00:04:06.280
Assistant server
takes that response,

00:04:06.280 --> 00:04:09.190
and takes our welcome
intent from Dialogflow,

00:04:09.190 --> 00:04:11.586
and returns back to user.

00:04:11.586 --> 00:04:14.490
So after that
point, user may say,

00:04:14.490 --> 00:04:18.060
find me nearby bike trails,
or where are the nearby bike

00:04:18.060 --> 00:04:21.310
trails, and multiple other
variations of these type

00:04:21.310 --> 00:04:23.640
of text responses.

00:04:23.640 --> 00:04:26.040
And then Dialogflow
automatically

00:04:26.040 --> 00:04:28.810
matches that to
intent we defined.

00:04:28.810 --> 00:04:30.990
Let's call it find trails.

00:04:30.990 --> 00:04:35.670
And that intent may be reading
the logic from our own server.

00:04:35.670 --> 00:04:38.550
Our own server, we may
have the location services,

00:04:38.550 --> 00:04:41.640
we find the trails, and
we respond back to user.

00:04:41.640 --> 00:04:47.600
And we don't need to worry about
nature of language processing.

00:04:47.600 --> 00:04:48.650
NICK FELKER: Thank you.

00:04:48.650 --> 00:04:50.960
So now you've built your action.

00:04:50.960 --> 00:04:52.640
How do you start testing it?

00:04:52.640 --> 00:04:54.770
Well, the first step
is to use the Actions

00:04:54.770 --> 00:04:57.640
on Google simulator.

00:04:57.640 --> 00:05:01.150
And this works on your
laptop or your desktop.

00:05:01.150 --> 00:05:05.590
And you also test on your device
if you have a Home or a phone.

00:05:05.590 --> 00:05:10.030
You can enter text or
you can just talk to it.

00:05:10.030 --> 00:05:12.100
And you'll get the
response that you expect.

00:05:12.100 --> 00:05:14.308
And you can do extra things,
like changing the user's

00:05:14.308 --> 00:05:18.160
language and their location.

00:05:18.160 --> 00:05:19.415
How does this work?

00:05:19.415 --> 00:05:20.290
Let's go to the demo.

00:05:29.733 --> 00:05:33.990
All right, let's go to the demo
and click on the Simulator tab

00:05:33.990 --> 00:05:35.140
here.

00:05:35.140 --> 00:05:37.860
I'm going to jump right
here into the action.

00:05:37.860 --> 00:05:40.650
We're going to say,
talk to Trail Blazer.

00:05:40.650 --> 00:05:41.940
All right.

00:05:41.940 --> 00:05:45.930
We can say, find trails nearby.

00:05:45.930 --> 00:05:47.577
You notice, I did
make a typo there,

00:05:47.577 --> 00:05:49.410
but Dialogflow is going
to be able to map it

00:05:49.410 --> 00:05:52.780
to the intent regardless.

00:05:52.780 --> 00:05:54.780
And you can look, we have
a Request and Response

00:05:54.780 --> 00:05:56.520
tab on the side.

00:05:56.520 --> 00:06:00.490
And that will help you
debug your actions.

00:06:00.490 --> 00:06:02.510
We'll say yes,
show the location.

00:06:02.510 --> 00:06:04.190
You notice in the
top right corner,

00:06:04.190 --> 00:06:08.000
I've actually mapped it to
my hometown of Glassboro.

00:06:08.000 --> 00:06:11.930
So you can actually show the
different types of locations

00:06:11.930 --> 00:06:13.100
as well.

00:06:13.100 --> 00:06:15.110
In the Display tab,
you notice that it

00:06:15.110 --> 00:06:20.150
has picked park that is pretty
close to where I used to live.

00:06:23.060 --> 00:06:25.990
And that's a very basic overview
of how the simulator works.

00:06:25.990 --> 00:06:29.480
Let's go back to the
slides for a second.

00:06:29.480 --> 00:06:33.010
So you can do this and mainly
test your actions every time

00:06:33.010 --> 00:06:34.300
you make a change.

00:06:34.300 --> 00:06:36.670
But as actions grow
more complicated,

00:06:36.670 --> 00:06:38.440
you want to make sure
that users continue

00:06:38.440 --> 00:06:41.090
to have a reliable experience.

00:06:41.090 --> 00:06:43.460
And to make this easier,
we're introducing

00:06:43.460 --> 00:06:47.310
the automated testing library
for Actions on Google.

00:06:47.310 --> 00:06:49.550
So if you're familiar
with Node.js,

00:06:49.550 --> 00:06:52.470
then you'll be familiar with
using this testing library.

00:06:52.470 --> 00:06:53.880
It's written with Node.js.

00:06:53.880 --> 00:06:57.200
It supports all of the
Actions on Google locales.

00:06:57.200 --> 00:07:00.360
And it works with your existing
testing infrastructure,

00:07:00.360 --> 00:07:05.000
whether that's [INAUDIBLE]
or continuous integration.

00:07:05.000 --> 00:07:07.610
All those things
work out of the box.

00:07:07.610 --> 00:07:11.660
So there's three key
features that this library

00:07:11.660 --> 00:07:14.510
will do for developers.

00:07:14.510 --> 00:07:17.450
First, you can send text
queries to your action.

00:07:17.450 --> 00:07:19.610
And this can be unstructured
queries, exactly what

00:07:19.610 --> 00:07:20.870
the user would say.

00:07:20.870 --> 00:07:23.112
And this is important,
because users can say anything

00:07:23.112 --> 00:07:25.070
to your conversation,
and you want to make sure

00:07:25.070 --> 00:07:27.240
that you can handle that.

00:07:27.240 --> 00:07:29.840
You're going to get
back SSML, text,

00:07:29.840 --> 00:07:33.500
rich responses, and everything
else that you would expect.

00:07:33.500 --> 00:07:36.050
And it uses your account
to send the queries.

00:07:36.050 --> 00:07:38.390
So things like user
storage and the last time

00:07:38.390 --> 00:07:42.710
you visited the action
will be exactly what

00:07:42.710 --> 00:07:45.740
it would be for yourself.

00:07:45.740 --> 00:07:47.900
How is this going to work
for you as a developer?

00:07:47.900 --> 00:07:52.330
Let's switch over to the
demo, and I'll show you.

00:07:52.330 --> 00:07:56.130
So you notice I've got
this test.js file here.

00:07:56.130 --> 00:07:58.800
And we will just go down.

00:07:58.800 --> 00:08:02.684
So first we import the library.

00:08:02.684 --> 00:08:04.100
And we're going
to instantiate it.

00:08:04.100 --> 00:08:06.300
We're going to pass in
my user credentials.

00:08:06.300 --> 00:08:10.100
So it's going to talk to
this action as myself.

00:08:10.100 --> 00:08:11.440
And we start a test.

00:08:11.440 --> 00:08:13.940
And we get to test a name.

00:08:13.940 --> 00:08:15.690
We can also set things
like the location.

00:08:15.690 --> 00:08:18.800
So we can change the location
and see how the action performs

00:08:18.800 --> 00:08:20.680
in different areas.

00:08:20.680 --> 00:08:22.430
And then we're going
to start by returning

00:08:22.430 --> 00:08:26.820
a promise that will start the
conversation with Trail Blazer.

00:08:26.820 --> 00:08:31.460
We're going to go out and send
this query, find trails nearby.

00:08:31.460 --> 00:08:36.120
And then we're going to send yes
after it asks for our location.

00:08:36.120 --> 00:08:39.500
You make sure you also try
no and test different flows

00:08:39.500 --> 00:08:41.800
with different permissions.

00:08:41.800 --> 00:08:44.080
At the very end, we're
going to get back text

00:08:44.080 --> 00:08:46.040
to speech and chords.

00:08:46.040 --> 00:08:48.350
And you can do assertions
to verify that those

00:08:48.350 --> 00:08:49.990
are exactly what we'd expect.

00:08:49.990 --> 00:08:53.779
At the very end,
you end the test.

00:08:53.779 --> 00:08:54.570
How does this work?

00:08:54.570 --> 00:08:58.010
Let's go over here
and run npm test.

00:09:01.050 --> 00:09:02.690
OK, so now we've
started our test.

00:09:05.810 --> 00:09:11.270
And in a few seconds, it's going
to send talk to Trail Blazer.

00:09:11.270 --> 00:09:13.700
And we're going to
get back a response.

00:09:13.700 --> 00:09:14.330
OK.

00:09:14.330 --> 00:09:18.490
And you see a variety of
parameters in that response.

00:09:18.490 --> 00:09:22.500
Is the mic open, text to
speech, SSML cards, et cetera.

00:09:22.500 --> 00:09:25.070
OK, so we send
found trails nearby.

00:09:25.070 --> 00:09:26.600
We're going to get
back that thing.

00:09:26.600 --> 00:09:29.630
It's going to to ask for our
permission to use our location.

00:09:29.630 --> 00:09:30.770
We'll say yes.

00:09:30.770 --> 00:09:34.750
OK, and then at the end,
you see we've got the card,

00:09:34.750 --> 00:09:36.740
we've got the text,
and everything else

00:09:36.740 --> 00:09:37.880
from our action.

00:09:37.880 --> 00:09:42.300
At the very bottom, you see
that it says, one test passes.

00:09:42.300 --> 00:09:43.830
All right, there you go.

00:09:43.830 --> 00:09:50.410
So using this tool, you will
be able to more easily verify

00:09:50.410 --> 00:09:54.172
that your actions do
exactly what you'd expect.

00:09:54.172 --> 00:09:55.630
So let's switch
back to the slides.

00:10:00.820 --> 00:10:01.750
AYLIN ALTIOK: Awesome.

00:10:01.750 --> 00:10:05.740
So far, we built Trail Blazer,
and we tested it locally

00:10:05.740 --> 00:10:07.480
in our simulator.

00:10:07.480 --> 00:10:10.330
And we wrote our own
unit test, and made

00:10:10.330 --> 00:10:13.090
sure they were all green.

00:10:13.090 --> 00:10:16.090
But it is always
important as a developer

00:10:16.090 --> 00:10:19.820
to test your actions
with your own users.

00:10:19.820 --> 00:10:20.470
Why?

00:10:20.470 --> 00:10:22.990
Because they may find
bugs and usability

00:10:22.990 --> 00:10:26.830
issues that you didn't
think or you didn't catch.

00:10:26.830 --> 00:10:30.880
Let's see how you can do it
by utilizing our new alpha

00:10:30.880 --> 00:10:34.550
and beta release environments.

00:10:34.550 --> 00:10:39.830
So alpha is the quickest
way to test your actions.

00:10:39.830 --> 00:10:42.020
Once you submit
alpha, it doesn't

00:10:42.020 --> 00:10:44.210
go through the review process.

00:10:44.210 --> 00:10:48.170
So it can be live just
in a couple hours.

00:10:48.170 --> 00:10:52.370
And you can invite your friends,
family, and your teammates

00:10:52.370 --> 00:10:54.530
up to 20 testers.

00:10:54.530 --> 00:10:57.770
And you can iterate by
releasing alpha, and acting

00:10:57.770 --> 00:11:00.920
on the feedback from your
users, and keep this iteration

00:11:00.920 --> 00:11:05.740
going on until you have
the stable version.

00:11:05.740 --> 00:11:07.650
And once you have
the stable version,

00:11:07.650 --> 00:11:10.500
you can submit that
for beta release.

00:11:10.500 --> 00:11:15.910
Beta is live after going through
regular Google review process.

00:11:15.910 --> 00:11:18.030
So your actions
would be live if that

00:11:18.030 --> 00:11:19.980
are approved after the review.

00:11:19.980 --> 00:11:22.320
But once they are
approved, you don't

00:11:22.320 --> 00:11:24.330
need to go through
additional review

00:11:24.330 --> 00:11:26.920
to deploy those to production.

00:11:26.920 --> 00:11:29.940
So as a developer,
you can decide

00:11:29.940 --> 00:11:33.240
to deploy this to
a public audience

00:11:33.240 --> 00:11:36.920
at your own flexible timing.

00:11:36.920 --> 00:11:39.320
And you can invite
wider audience

00:11:39.320 --> 00:11:42.080
for your beta release,
up to 200 users.

00:11:44.580 --> 00:11:45.080
Awesome.

00:11:45.080 --> 00:11:47.610
Let's see how that
works in action.

00:11:47.610 --> 00:11:50.530
Let's go back to demo mode.

00:11:50.530 --> 00:11:51.030
Perfect.

00:11:53.940 --> 00:11:57.330
So let's take it from where
we left off in simulator.

00:11:57.330 --> 00:12:01.620
So now you can see
a new release tab

00:12:01.620 --> 00:12:05.400
in the left-hand side navigation
in the Actions console.

00:12:05.400 --> 00:12:08.930
Let's go ahead and click that.

00:12:08.930 --> 00:12:11.870
And you'll see, aside
from production,

00:12:11.870 --> 00:12:14.620
we also have now alpha
and beta release.

00:12:14.620 --> 00:12:16.030
These are totally optional.

00:12:16.030 --> 00:12:17.710
You don't need to utilize those.

00:12:17.710 --> 00:12:19.780
But since you are in
the session today,

00:12:19.780 --> 00:12:22.090
I'm sure you care about
testing our actions

00:12:22.090 --> 00:12:24.680
with your own users.

00:12:24.680 --> 00:12:26.860
And before getting into
the details of alpha,

00:12:26.860 --> 00:12:29.570
I just want to show you
the versions I already

00:12:29.570 --> 00:12:30.980
deployed before.

00:12:30.980 --> 00:12:34.040
So currently, I have
three different versions--

00:12:34.040 --> 00:12:37.940
once in alpha, once in beta,
and once in production--

00:12:37.940 --> 00:12:41.510
that is already
deployed to my users.

00:12:41.510 --> 00:12:44.990
So let's go ahead and
deploy an alpha together.

00:12:44.990 --> 00:12:48.920
But before doing so, let's
change something in our actions

00:12:48.920 --> 00:12:53.360
so we can tell our users if
they like the new change.

00:12:53.360 --> 00:12:56.970
So now you see the actions
under the build section.

00:12:56.970 --> 00:12:59.870
I'll go ahead and click that.

00:12:59.870 --> 00:13:02.430
And if you are familiar
with the Action console,

00:13:02.430 --> 00:13:06.260
you may notice that we just
redesigned the whole UI for you

00:13:06.260 --> 00:13:09.280
to make it easier
for your navigation.

00:13:09.280 --> 00:13:11.590
So we'll see our
default welcome intent

00:13:11.590 --> 00:13:14.530
here that we already
built with Dialogflow.

00:13:14.530 --> 00:13:16.630
I'll click on that, and
it gives me the option

00:13:16.630 --> 00:13:20.110
to edit that in Dialogflow.

00:13:20.110 --> 00:13:21.890
Let's see how that looks like.

00:13:21.890 --> 00:13:24.520
So this is my welcome
intent, but we also

00:13:24.520 --> 00:13:28.060
have other interns that I
mentioned to you before that we

00:13:28.060 --> 00:13:31.370
can handle in our server.

00:13:31.370 --> 00:13:36.470
So I'll go back and go to
default welcome intent.

00:13:36.470 --> 00:13:39.650
So right now, our welcome
message to the users

00:13:39.650 --> 00:13:42.230
says, good day
from Trail Blazer.

00:13:42.230 --> 00:13:46.280
Let's change that and let's
see if our alpha testers

00:13:46.280 --> 00:13:47.990
would like it.

00:13:47.990 --> 00:13:51.350
So instead of Trail
Blazer, let's say,

00:13:51.350 --> 00:13:57.420
good day from Google
IO stage seven.

00:13:57.420 --> 00:14:01.550
So I'll save this.

00:14:01.550 --> 00:14:04.150
And after it is
saved, I can go ahead

00:14:04.150 --> 00:14:08.840
and see how that works by
clicking the right-hand side.

00:14:08.840 --> 00:14:11.280
And this is going
to bring my draft

00:14:11.280 --> 00:14:15.930
version into the simulator to
see the changes that I just

00:14:15.930 --> 00:14:16.430
did.

00:14:16.430 --> 00:14:18.610
So let's see talk
to Trail Blazer.

00:14:24.920 --> 00:14:27.195
And let's make sure it's
reading from the draft.

00:14:33.390 --> 00:14:36.460
Let's try it again.

00:14:36.460 --> 00:14:37.470
Awesome.

00:14:37.470 --> 00:14:41.680
So it says, good day from Google
IO stage seven, as we expected.

00:14:41.680 --> 00:14:44.430
So we want to test it
with our alpha users,

00:14:44.430 --> 00:14:47.370
and see if they're going to
like this response instead

00:14:47.370 --> 00:14:49.020
of the previous version.

00:14:49.020 --> 00:14:51.000
And also please
note that you can

00:14:51.000 --> 00:14:53.490
see all your versions
here and test

00:14:53.490 --> 00:14:55.480
them to see the difference.

00:14:58.180 --> 00:15:00.450
So I'll just click down.

00:15:00.450 --> 00:15:06.050
I'll go ahead and click
on the release tab now.

00:15:06.050 --> 00:15:09.910
And on the release tab,
let's push this version

00:15:09.910 --> 00:15:12.190
into our alpha testers.

00:15:12.190 --> 00:15:14.940
So while my production
on beta remains

00:15:14.940 --> 00:15:17.330
like a different
outcome that says,

00:15:17.330 --> 00:15:19.705
welcome come to Trail
Blazer, our alpha

00:15:19.705 --> 00:15:22.060
is going to be
taking this version

00:15:22.060 --> 00:15:24.460
and changing the
welcome response.

00:15:24.460 --> 00:15:29.146
So we just need to click that
we tested it in simulator,

00:15:29.146 --> 00:15:30.520
we've gone through
the checklist,

00:15:30.520 --> 00:15:33.020
and we are complying
with policies.

00:15:33.020 --> 00:15:35.090
And once we submit,
this is going

00:15:35.090 --> 00:15:38.230
to run our pre-submit
checks, and we'll

00:15:38.230 --> 00:15:40.700
be done in a few seconds.

00:15:40.700 --> 00:15:42.390
And while it is doing that--

00:15:42.390 --> 00:15:43.990
oh, it's already done.

00:15:43.990 --> 00:15:50.240
So you can see now
that our version

00:15:50.240 --> 00:15:52.940
will be in deploying state.

00:15:52.940 --> 00:15:53.470
Perfect.

00:15:53.470 --> 00:15:56.540
So we created version seven.

00:15:56.540 --> 00:15:59.600
And now it's being in
the deploying state.

00:15:59.600 --> 00:16:02.150
And it will be deployed
just in a few hours

00:16:02.150 --> 00:16:04.380
and live to your testers.

00:16:04.380 --> 00:16:07.230
But how do we invite
our own testers?

00:16:07.230 --> 00:16:09.260
You'll see a Manage
Alpha Testers.

00:16:09.260 --> 00:16:11.090
And same applies to
beta, by the way.

00:16:11.090 --> 00:16:13.040
The only difference
if we did beta,

00:16:13.040 --> 00:16:16.140
we would see the
status as under review.

00:16:16.140 --> 00:16:19.520
So we'll go ahead and
click on Manage Testers.

00:16:19.520 --> 00:16:22.760
So in this section, you
can add your own testers

00:16:22.760 --> 00:16:24.680
to make sure they
are whitelisted

00:16:24.680 --> 00:16:27.080
to receive your alpha version.

00:16:27.080 --> 00:16:33.940
So we can just add
this to my list.

00:16:33.940 --> 00:16:37.720
And I already had some
other emails before.

00:16:37.720 --> 00:16:40.570
And once I hit Save,
All these users

00:16:40.570 --> 00:16:44.710
are listed to get
my alpha version.

00:16:44.710 --> 00:16:46.780
Just a couple
things to note here.

00:16:46.780 --> 00:16:50.140
The users you are adding should
have Wallet Google account,

00:16:50.140 --> 00:16:53.420
either Gmail or
Google Apps user.

00:16:53.420 --> 00:16:56.350
Otherwise, you would see
that a validation would fail,

00:16:56.350 --> 00:17:00.180
and you can't remove
and add the new users.

00:17:00.180 --> 00:17:02.810
So the last step as
a developer for you

00:17:02.810 --> 00:17:05.660
is to invite your own testers.

00:17:05.660 --> 00:17:08.750
So you see in here,
there is an opt in link.

00:17:08.750 --> 00:17:12.300
And this is a static
link that directs users

00:17:12.300 --> 00:17:15.210
to your directory page.

00:17:15.210 --> 00:17:18.030
So if your users are
already using your action

00:17:18.030 --> 00:17:21.540
in their mobile, they can
just search your action name,

00:17:21.540 --> 00:17:25.040
like Trail Blazer, and they
would see your invitation

00:17:25.040 --> 00:17:27.030
in the action directed page.

00:17:27.030 --> 00:17:28.990
But if they are not
familiar with that,

00:17:28.990 --> 00:17:30.820
you can just share this link.

00:17:30.820 --> 00:17:33.390
And once they click this
link on their mobile phone,

00:17:33.390 --> 00:17:37.560
either iOS or Android, they
would land into your directory.

00:17:37.560 --> 00:17:39.970
Let's see how that
experience looks like.

00:17:39.970 --> 00:17:41.910
Let's go back to our slides.

00:17:47.490 --> 00:17:48.270
Perfect.

00:17:48.270 --> 00:17:51.420
So we now created
an alpha release,

00:17:51.420 --> 00:17:54.480
and we took the opt in link,
shared with our tester.

00:17:54.480 --> 00:17:58.140
So the first thing here
is the place they land in.

00:17:58.140 --> 00:18:01.720
So this is my action
directory page on mobile.

00:18:01.720 --> 00:18:03.750
And when they scroll
down, they see

00:18:03.750 --> 00:18:07.600
that the invitation that
I added them to my beta,

00:18:07.600 --> 00:18:10.170
or same applies to alpha.

00:18:10.170 --> 00:18:16.500
And once they are all OK to be
your alpha tester, they say,

00:18:16.500 --> 00:18:17.460
I'm in.

00:18:17.460 --> 00:18:19.890
And after that point,
they will start

00:18:19.890 --> 00:18:22.350
talking to your test version.

00:18:22.350 --> 00:18:25.410
And at any time,
they can opt out

00:18:25.410 --> 00:18:27.870
or they can switch
between alpha and beta

00:18:27.870 --> 00:18:30.990
if you invited them
to both channels.

00:18:30.990 --> 00:18:31.860
How cool is that?

00:18:36.080 --> 00:18:38.180
This feature was a
top developer quest,

00:18:38.180 --> 00:18:42.600
and we are so excited to
actually make it happen.

00:18:42.600 --> 00:18:46.110
So let's recap what we
have been doing so far.

00:18:46.110 --> 00:18:51.140
So Jane builds her Trail
Blazer action with Dialogflow.

00:18:51.140 --> 00:18:53.510
She tested locally
with simulator,

00:18:53.510 --> 00:18:56.900
and also she was able to test
it with her own device that

00:18:56.900 --> 00:19:01.370
was connected to
her preview account.

00:19:01.370 --> 00:19:05.060
And she wrote her unit test
by using automated testing

00:19:05.060 --> 00:19:06.200
library.

00:19:06.200 --> 00:19:11.000
And once everything was green,
she moved it to her teammates

00:19:11.000 --> 00:19:12.980
and made an alpha release.

00:19:12.980 --> 00:19:15.410
Her teammates gave
her feedback, and she

00:19:15.410 --> 00:19:19.400
was able to iterate and make
her actions more stable.

00:19:19.400 --> 00:19:22.570
And then she released
it to her beta testers

00:19:22.570 --> 00:19:24.710
to a more wider audience.

00:19:24.710 --> 00:19:28.880
And once she made sure
her actions were stable,

00:19:28.880 --> 00:19:30.620
she's ready to go
for production.

00:19:33.310 --> 00:19:35.590
But before going
to production, I

00:19:35.590 --> 00:19:38.590
would like to share some
best practices while you

00:19:38.590 --> 00:19:42.120
are testing your actions.

00:19:42.120 --> 00:19:44.300
So as a developer,
we always think

00:19:44.300 --> 00:19:48.200
about end-to-end journeys, and
trying to capture those use

00:19:48.200 --> 00:19:50.910
cases in our test.

00:19:50.910 --> 00:19:54.140
But what does it even mean
in a conversational space?

00:19:57.900 --> 00:20:03.350
So in Assistant world, your
users may be in multiple modes.

00:20:03.350 --> 00:20:07.910
And these modes are
determined by input and output

00:20:07.910 --> 00:20:10.200
of your device.

00:20:10.200 --> 00:20:15.080
So if a user is talking to a
Trail Blazer in Google Home,

00:20:15.080 --> 00:20:17.780
they would only get voice.

00:20:17.780 --> 00:20:21.890
But if they're talking to Trail
Blazer on their mobile phone,

00:20:21.890 --> 00:20:25.070
not only they would get
voice, but they would also

00:20:25.070 --> 00:20:28.460
get image of the
nearby bike trails.

00:20:28.460 --> 00:20:31.930
So as a developer, it's
important to think about where

00:20:31.930 --> 00:20:35.060
our users may be interacting
with our actions,

00:20:35.060 --> 00:20:37.970
and handle these test
cases accordingly

00:20:37.970 --> 00:20:42.170
to make sure their experience
is smooth in all devices

00:20:42.170 --> 00:20:43.490
that actions are offered.

00:20:46.600 --> 00:20:48.760
And the second
important point is

00:20:48.760 --> 00:20:53.950
to make sure your users are
able to enter your actions.

00:20:53.950 --> 00:20:56.290
So it's good to test
your invocations.

00:20:56.290 --> 00:20:59.200
They can invoke your
app in multiple ways,

00:20:59.200 --> 00:21:03.360
either explicitly by saying,
talk to a Trail Blazer,

00:21:03.360 --> 00:21:05.950
ask Trail Blazer,
or you may also

00:21:05.950 --> 00:21:10.600
have some built-in intents or
some implicit invocation that

00:21:10.600 --> 00:21:14.710
may be triggered in a different
way, let's say, play a game

00:21:14.710 --> 00:21:16.315
or find the nearby bike trails.

00:21:19.800 --> 00:21:24.940
So actions on Google today are
offered in multiple languages.

00:21:24.940 --> 00:21:27.760
And it becomes even
more important to test

00:21:27.760 --> 00:21:31.720
your users' languages in
a conversational world.

00:21:31.720 --> 00:21:35.170
So this is a great one to be
able to test programmatically

00:21:35.170 --> 00:21:39.460
by using unit tests or in
simulator, as well as you

00:21:39.460 --> 00:21:44.440
can offer your alpha and beta
environments to the user that

00:21:44.440 --> 00:21:50.560
speaks one of these languages,
and see if they can navigate.

00:21:50.560 --> 00:21:52.970
And same applies to location.

00:21:52.970 --> 00:21:56.210
Today, Nick pointed out
that in simulator, you

00:21:56.210 --> 00:21:59.240
are able to change
your location and see

00:21:59.240 --> 00:22:00.980
how your action responds back.

00:22:04.310 --> 00:22:07.990
And actions on Google offers
multiple functionalities

00:22:07.990 --> 00:22:13.120
to developers, like facilitated
payments, account linking,

00:22:13.120 --> 00:22:17.000
reengagement, order
updates, push notifications.

00:22:17.000 --> 00:22:21.100
Some of these may be hard
to test programmatically.

00:22:21.100 --> 00:22:24.560
For example, let's take
payment as an example.

00:22:24.560 --> 00:22:27.220
So this may be a
perfect use case

00:22:27.220 --> 00:22:31.690
to test with your alpha or
beta testers, and make sure

00:22:31.690 --> 00:22:34.180
that they can get
the functionality

00:22:34.180 --> 00:22:37.080
that you want to be.

00:22:37.080 --> 00:22:40.280
And last but not
least, our action

00:22:40.280 --> 00:22:42.900
may be touching
into multiple stack.

00:22:42.900 --> 00:22:45.510
So Trail Blazer
rebuilds not only

00:22:45.510 --> 00:22:49.260
have Dialogflow and
Assistant on the client side,

00:22:49.260 --> 00:22:51.420
but we also built
our own server.

00:22:51.420 --> 00:22:55.350
So it's important to make
sure and handle all the cases

00:22:55.350 --> 00:23:00.380
in each of these stacks
in the architecture.

00:23:00.380 --> 00:23:03.530
NICK FELKER: All right,
so you've designed, built,

00:23:03.530 --> 00:23:05.120
and tested your reaction.

00:23:05.120 --> 00:23:08.842
Now you've deployed it to users,
but it doesn't stop there.

00:23:08.842 --> 00:23:10.550
You have to continue
to ensure that users

00:23:10.550 --> 00:23:12.200
have a great experience.

00:23:12.200 --> 00:23:15.000
And we have a couple of
tools to help you do that.

00:23:15.000 --> 00:23:17.570
The first of which is the
Health Analytics section

00:23:17.570 --> 00:23:18.930
in the console.

00:23:18.930 --> 00:23:20.870
And this will show you
graphs for the number

00:23:20.870 --> 00:23:23.270
of errors that users
are experiencing

00:23:23.270 --> 00:23:25.250
as well as the latency.

00:23:25.250 --> 00:23:28.890
And we do periodic
checks on your action.

00:23:28.890 --> 00:23:31.580
And if we determine
that they are unhealthy,

00:23:31.580 --> 00:23:33.830
we'll let you know
over an email.

00:23:33.830 --> 00:23:35.720
And if it continues
to be unhealthy,

00:23:35.720 --> 00:23:38.810
it will actually be disabled
until it becomes healthy again.

00:23:41.360 --> 00:23:44.395
So let's switch
over to the demo.

00:23:49.380 --> 00:23:52.520
So here we are in
the analytics page.

00:23:52.520 --> 00:23:54.950
You can jump over to Health.

00:23:54.950 --> 00:23:57.110
And here's the errors
that are happening.

00:23:57.110 --> 00:23:59.450
And let's go ahead and
jump to over the last three

00:23:59.450 --> 00:24:01.195
months, what kind of
errors have we had?

00:24:01.195 --> 00:24:02.570
All right, and
you see that there

00:24:02.570 --> 00:24:06.070
are a couple of errors that
started out a few weeks ago.

00:24:06.070 --> 00:24:08.540
We can go ahead and look at
the errors themselves-- invalid

00:24:08.540 --> 00:24:11.902
response, timeout,
unknown error.

00:24:11.902 --> 00:24:14.360
And we can learn a little more
about why these errors might

00:24:14.360 --> 00:24:15.650
be happening.

00:24:15.650 --> 00:24:18.170
We can also filter these
out and see, OK, well,

00:24:18.170 --> 00:24:21.290
people might be having a
different experience on a phone

00:24:21.290 --> 00:24:23.804
compared to a Google Home.

00:24:23.804 --> 00:24:25.220
And it seems like
all these errors

00:24:25.220 --> 00:24:27.950
relate to mobile devices.

00:24:27.950 --> 00:24:29.570
We can also look at the latency.

00:24:29.570 --> 00:24:32.060
And you see for 50%
of users, they're

00:24:32.060 --> 00:24:34.470
getting about 200 milliseconds.

00:24:34.470 --> 00:24:36.500
And that's a pretty
good response time.

00:24:36.500 --> 00:24:40.660
As we jump out towards
the 95th percentile,

00:24:40.660 --> 00:24:41.660
it gets a little higher.

00:24:41.660 --> 00:24:44.720
And so we want to see
what kinds of things

00:24:44.720 --> 00:24:47.230
are happening for
some of those users

00:24:47.230 --> 00:24:50.430
to help reduce that latency.

00:24:50.430 --> 00:24:54.050
And there's more graphs as well.

00:24:54.050 --> 00:24:58.150
Now, the second part in making
sure you have reliable action

00:24:58.150 --> 00:24:59.410
is Stackdriver.

00:24:59.410 --> 00:25:01.750
And to show you how
to do that, I'm going

00:25:01.750 --> 00:25:03.730
to go back to the simulator.

00:25:03.730 --> 00:25:07.390
And we talked a little bit
about finding bike trails.

00:25:07.390 --> 00:25:10.630
But there's also a
bug in our action.

00:25:10.630 --> 00:25:16.020
So if I say, give me a tip.

00:25:16.020 --> 00:25:17.730
It's actually going to crash.

00:25:17.730 --> 00:25:20.790
And that's intentional
for this demo.

00:25:20.790 --> 00:25:23.130
OK, so it says, final
response must be set.

00:25:23.130 --> 00:25:24.630
Now, you might have
experienced this

00:25:24.630 --> 00:25:27.600
when you're using the
simulator, but you might not

00:25:27.600 --> 00:25:28.782
know what this means.

00:25:28.782 --> 00:25:30.240
If you click this
View Logs button,

00:25:30.240 --> 00:25:32.710
we're going to jump
directly into Stackdriver,

00:25:32.710 --> 00:25:35.610
which is our logging tool.

00:25:35.610 --> 00:25:39.330
And it'll show all the things
that happened, all of the logs,

00:25:39.330 --> 00:25:41.110
for our action.

00:25:41.110 --> 00:25:45.090
We can go ahead and filter
something like errors.

00:25:45.090 --> 00:25:47.250
So we'll find all the
errors that have happened.

00:25:47.250 --> 00:25:48.791
All right, you see
right now, we just

00:25:48.791 --> 00:25:51.680
got this, file
response must be set.

00:25:51.680 --> 00:25:53.280
There's a lot of
information here.

00:25:53.280 --> 00:25:56.650
But what exactly does this mean?

00:25:56.650 --> 00:25:59.280
Well, since we're
using Cloud Functions,

00:25:59.280 --> 00:26:03.160
we actually also log what's
happening there as well.

00:26:03.160 --> 00:26:06.220
And we have this error
in our Cloud Function.

00:26:06.220 --> 00:26:08.310
It says, reference
error trail tips

00:26:08.310 --> 00:26:13.500
is not defined at
index.js, line 30.

00:26:13.500 --> 00:26:14.077
OK.

00:26:14.077 --> 00:26:15.660
Well, let's just
jump over to our code

00:26:15.660 --> 00:26:19.470
and figure out what's happening.

00:26:19.470 --> 00:26:23.280
OK, index.js, line 30 says--

00:26:26.440 --> 00:26:29.940
well, this is actually correct.

00:26:29.940 --> 00:26:33.240
OK, so you might see that
there is a syntax error

00:26:33.240 --> 00:26:35.800
in our index.js file.

00:26:35.800 --> 00:26:39.220
And once you figure out
that this is a problem,

00:26:39.220 --> 00:26:40.910
we can go ahead and
make the change.

00:26:40.910 --> 00:26:44.100
And we'll do another
Firebase deploy.

00:26:48.012 --> 00:26:53.280
And then the next time we run
our tool and do the simulator

00:26:53.280 --> 00:26:57.330
or through [INAUDIBLE] testing,
it will work as we expect.

00:26:57.330 --> 00:27:00.710
So let's jump back to the slides
and recap what just happened.

00:27:04.360 --> 00:27:07.300
So with Stackdriver logging,
you can examine error logs

00:27:07.300 --> 00:27:08.710
for your fulfillment.

00:27:08.710 --> 00:27:13.210
And you can filter these
logs based on types of errors

00:27:13.210 --> 00:27:16.180
and anything else
that might be logging.

00:27:16.180 --> 00:27:19.630
And what's really cool is that
no custom code is required.

00:27:19.630 --> 00:27:22.030
If you're using Actions on
Google, you get those logs.

00:27:22.030 --> 00:27:23.530
And if you're using
Cloud Functions,

00:27:23.530 --> 00:27:25.070
you get those logs as well.

00:27:30.134 --> 00:27:31.050
AYLIN ALTIOK: Awesome.

00:27:31.050 --> 00:27:34.170
So this concludes
our journey today.

00:27:34.170 --> 00:27:38.860
So let's review what we
have been doing together.

00:27:38.860 --> 00:27:40.560
So it started with Jane.

00:27:40.560 --> 00:27:45.610
And Jane had an idea for an
action called Trail Blazer.

00:27:45.610 --> 00:27:49.590
She Built that with Dialogflow.

00:27:49.590 --> 00:27:53.580
And once she was done with
designing and building,

00:27:53.580 --> 00:27:57.120
she moved it to her
simulator, and tested locally

00:27:57.120 --> 00:28:00.450
on her device and on the
simulator on the Actions

00:28:00.450 --> 00:28:02.220
on Google web.

00:28:02.220 --> 00:28:04.530
And then she wrote
her own unit test

00:28:04.530 --> 00:28:08.370
by using automated
testing library.

00:28:08.370 --> 00:28:12.430
And once it was all
good and tested,

00:28:12.430 --> 00:28:15.550
she released it to her
alpha and beta testers

00:28:15.550 --> 00:28:20.240
to make sure she
gets a stable action.

00:28:20.240 --> 00:28:23.120
And once she got that,
she was able to deploy it

00:28:23.120 --> 00:28:26.480
to public, all Assistant users.

00:28:26.480 --> 00:28:29.120
And she was able to
grow her audience.

00:28:29.120 --> 00:28:31.790
And she was able to
get more engagement.

00:28:31.790 --> 00:28:34.310
And throughout this
journey, once her action

00:28:34.310 --> 00:28:37.430
was in production, she
was able to monitor it

00:28:37.430 --> 00:28:40.100
by looking at the health
analytics in Actions

00:28:40.100 --> 00:28:43.490
on Google console, or
Stackdriver logging that

00:28:43.490 --> 00:28:47.960
comes out of the box, and was
able to check, and monitor,

00:28:47.960 --> 00:28:52.040
and catch the box if her
production users have

00:28:52.040 --> 00:28:53.480
been seeing any issues.

00:28:53.480 --> 00:28:55.640
So she was able to
fix those, and make

00:28:55.640 --> 00:28:59.300
sure her action was healthy.

00:28:59.300 --> 00:29:02.270
And as a result,
Jane was able to get

00:29:02.270 --> 00:29:06.210
her own five-star actions.

00:29:06.210 --> 00:29:09.060
And we want to make
sure that all the tools

00:29:09.060 --> 00:29:11.580
and tips we'll share
today would help you

00:29:11.580 --> 00:29:14.380
get your own five-star actions.

00:29:14.380 --> 00:29:16.500
Thank you so much for coming.

00:29:16.500 --> 00:29:18.300
And we would love
to hear from you.

00:29:18.300 --> 00:29:22.710
So if you can go and provide us
feedback in this link up here,

00:29:22.710 --> 00:29:25.380
we would be so happy.

00:29:25.380 --> 00:29:29.730
And also, please visit
actions.google.com

00:29:29.730 --> 00:29:33.010
if you want to learn more about
the things we talked today.

00:29:33.010 --> 00:29:37.770
And Nick and I will be available
after the session in sandbox

00:29:37.770 --> 00:29:39.390
if you have any questions.

00:29:39.390 --> 00:29:41.670
And we would love
to hear from you

00:29:41.670 --> 00:29:45.030
either through our developer
channels or in person in IO.

00:29:45.030 --> 00:29:45.780
NICK FELKER: Yeah.

00:29:45.780 --> 00:29:47.400
So make sure you
follow us on Twitter.

00:29:47.400 --> 00:29:49.290
And make sure you follow
Actions on Google.

00:29:49.290 --> 00:29:51.422
And use the hashtag AoGDevs.

00:29:51.422 --> 00:29:55.806
[MUSIC PLAYING]

