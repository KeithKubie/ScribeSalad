WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.610
PROFESSOR: So we come now to
the topic of induction, which

00:00:03.610 --> 00:00:05.730
is a standard part of a
high school curriculum

00:00:05.730 --> 00:00:08.760
and you've probably seen
before, but is nevertheless

00:00:08.760 --> 00:00:11.730
worth looking at at
the level that we

00:00:11.730 --> 00:00:14.670
look at things in this class.

00:00:14.670 --> 00:00:17.530
So the idea of induction
can be-- one way

00:00:17.530 --> 00:00:19.100
to explain it is this way.

00:00:19.100 --> 00:00:21.510
Suppose that I plan
to be assigning colors

00:00:21.510 --> 00:00:24.930
to the non-negative integers
like, say, in this example,

00:00:24.930 --> 00:00:29.400
I color zero blue and one red
and two blue and three red

00:00:29.400 --> 00:00:33.110
and four and five green,
and it goes on somehow.

00:00:33.110 --> 00:00:33.930
OK.

00:00:33.930 --> 00:00:37.600
Now I'm going to describe to you
a coloring that I have in mind,

00:00:37.600 --> 00:00:41.320
and we'll see whether you
can figure out what it is.

00:00:41.320 --> 00:00:44.070
Here are the properties
that my coloring has.

00:00:44.070 --> 00:00:46.940
First of all, I've
colored zero red,

00:00:46.940 --> 00:00:49.250
and I've also
continued the coloring

00:00:49.250 --> 00:00:51.570
satisfying the following rule.

00:00:51.570 --> 00:00:55.470
If I have an integer that's
next to a red integer,

00:00:55.470 --> 00:00:57.990
then it's red also.

00:00:57.990 --> 00:01:01.150
Any integer next to a
red integer is red also.

00:01:01.150 --> 00:01:02.840
So what's my coloring?

00:01:02.840 --> 00:01:07.010
Well, you obviously realize
that they're all red.

00:01:07.010 --> 00:01:08.850
They have to be.

00:01:08.850 --> 00:01:11.090
And there they are.

00:01:11.090 --> 00:01:11.720
OK.

00:01:11.720 --> 00:01:13.975
This is actually a statement.

00:01:13.975 --> 00:01:17.580
It can be read as a statement
of the rule of induction.

00:01:17.580 --> 00:01:21.760
It's kind of a self-evident
axiom about numbers,

00:01:21.760 --> 00:01:24.190
but let's state it abstractly.

00:01:24.190 --> 00:01:28.010
So first of all, what
induction is assuming

00:01:28.010 --> 00:01:31.130
is that you have some
property of numbers.

00:01:31.130 --> 00:01:35.830
Call it red, R. And R
of zero you're told,

00:01:35.830 --> 00:01:39.310
and you're also told that
R of zero implies R of 1,

00:01:39.310 --> 00:01:43.460
and that R of 1 implies R of
2, and R of 2 implies R of 3,

00:01:43.460 --> 00:01:47.810
and in general R of n implies
R of n plus 1, and so on.

00:01:47.810 --> 00:01:50.560
So we've written it out
this way as an infinite set

00:01:50.560 --> 00:01:53.170
of implications to
emphasize that that's

00:01:53.170 --> 00:01:56.740
what the rule that I stated,
that if an integer is

00:01:56.740 --> 00:02:00.630
next to a red integer then
it's red, is shorthand for.

00:02:00.630 --> 00:02:03.040
It's really a shorthand
for this infinite number

00:02:03.040 --> 00:02:05.920
of different implications,
each of which

00:02:05.920 --> 00:02:08.680
has to hold in order for
you to be able to apply

00:02:08.680 --> 00:02:10.229
the rule of induction.

00:02:10.229 --> 00:02:12.890
Well, what can you conclude
if all of these things hold?

00:02:12.890 --> 00:02:17.380
Well, then you can conclude
that zero is red and one is red

00:02:17.380 --> 00:02:19.440
and two is red and
n is red, and so on.

00:02:19.440 --> 00:02:20.210
OK.

00:02:20.210 --> 00:02:24.190
Now of course, there's
a much more concise way

00:02:24.190 --> 00:02:28.190
to express both these
antecedents above the line

00:02:28.190 --> 00:02:31.540
and the conclusion below
the line using quantifiers,

00:02:31.540 --> 00:02:34.390
namely the antecedents
could simply

00:02:34.390 --> 00:02:37.610
be said by two predicate
formulas, R of 0,

00:02:37.610 --> 00:02:41.590
comma, for all n, R of
n implies R of n plus 1.

00:02:41.590 --> 00:02:44.940
That's really a summary of what
we said on the first slide,

00:02:44.940 --> 00:02:48.740
that if an integer is less than
a red integer, then it's red.

00:02:48.740 --> 00:02:50.820
That is, n plus 1 is next to n.

00:02:50.820 --> 00:02:53.380
If n is red, then
n plus 1 is red.

00:02:53.380 --> 00:02:58.820
Similarly, the stuff below the
line, that R of zero, R of one

00:02:58.820 --> 00:03:02.201
and so on hold is simply
expressed as for all m, R of m

00:03:02.201 --> 00:03:02.700
holds.

00:03:02.700 --> 00:03:05.510
And this is the form
of the induction rule.

00:03:05.510 --> 00:03:08.320
It's read that if
you've proved R of 0

00:03:08.320 --> 00:03:10.700
and you've proved that,
for every n, R of n

00:03:10.700 --> 00:03:15.260
implies R of n plus 1, then you
can conclude that for every m,

00:03:15.260 --> 00:03:18.080
R of m holds, where the
variables are all ranging

00:03:18.080 --> 00:03:19.870
over the non-negative integers.

00:03:19.870 --> 00:03:22.700
By the way, notice that I
used n for the variable name

00:03:22.700 --> 00:03:24.710
above the line in
the antecedent,

00:03:24.710 --> 00:03:28.860
and m for the variable line
below in the consequent.

00:03:28.860 --> 00:03:31.940
I can use any names that I
like for bound variables,

00:03:31.940 --> 00:03:34.960
just as in when you define
a procedure you can name

00:03:34.960 --> 00:03:37.110
the parameters of the
procedure anything you like,

00:03:37.110 --> 00:03:38.670
because they're local variables.

00:03:38.670 --> 00:03:41.995
And I've used an m in the
bottom and an n in the top just

00:03:41.995 --> 00:03:45.360
to emphasize that those
variables have nothing

00:03:45.360 --> 00:03:49.040
to do with each other, which is
a point that sometimes confuses

00:03:49.040 --> 00:03:50.370
students.

00:03:50.370 --> 00:03:51.560
OK.

00:03:51.560 --> 00:03:53.299
Sometimes the rule
of induction is

00:03:53.299 --> 00:03:54.590
explained in terms of dominoes.

00:03:54.590 --> 00:03:56.760
You have all these dominoes
lined up next to each other.

00:03:56.760 --> 00:03:59.270
You knock one over, it knocks
over the next one, and so on.

00:03:59.270 --> 00:04:03.300
If that helps you think
about and remember dominoes,

00:04:03.300 --> 00:04:04.690
that's fine.

00:04:04.690 --> 00:04:05.280
OK.

00:04:05.280 --> 00:04:08.160
Let's apply
induction-- maybe one

00:04:08.160 --> 00:04:11.280
of the most basic and
standard applications

00:04:11.280 --> 00:04:14.180
would be to prove a
numerical identity.

00:04:14.180 --> 00:04:16.519
So let's prove one that
we've actually seen before.

00:04:16.519 --> 00:04:18.529
This is the formula
that we've previously

00:04:18.529 --> 00:04:20.740
proved using the
well-ordering principle

00:04:20.740 --> 00:04:23.310
for the sum of a geometric--
for a geometric sum.

00:04:23.310 --> 00:04:27.410
The sum of R to the 0, R
to the 1, up to R to the n.

00:04:27.410 --> 00:04:30.070
And the claim is that
that's equal to R

00:04:30.070 --> 00:04:33.130
to the n plus 1 minus
1 divided by R minus 1.

00:04:33.130 --> 00:04:35.850
So this sum of n
plus 1 terms actually

00:04:35.850 --> 00:04:40.000
can be expressed concisely
with a fairly single--

00:04:40.000 --> 00:04:41.440
a single, simple term.

00:04:41.440 --> 00:04:44.030
Of course, this only
works if R is not 1,

00:04:44.030 --> 00:04:46.406
because I can't have
the denominator be zero.

00:04:46.406 --> 00:04:47.769
All right.

00:04:47.769 --> 00:04:48.560
How do we prove it?

00:04:48.560 --> 00:04:50.080
Well, I'm going to do the proof.

00:04:50.080 --> 00:04:51.788
And at the same time
that I do the proof,

00:04:51.788 --> 00:04:53.950
I'm going to show you kind
of a standard template

00:04:53.950 --> 00:04:57.130
that you can pull out and
use for induction proofs.

00:04:57.130 --> 00:05:00.660
So the template, it's just
an organizational method

00:05:00.660 --> 00:05:02.330
to do the proof.

00:05:02.330 --> 00:05:05.340
I'm doing the
template in magenta.

00:05:05.340 --> 00:05:07.754
So that's the part that
really is form, not substance.

00:05:07.754 --> 00:05:09.670
There's no math in it,
it's just the structure

00:05:09.670 --> 00:05:11.630
that we're going to
organize the proofs in,

00:05:11.630 --> 00:05:13.340
at least in the beginning.

00:05:13.340 --> 00:05:15.140
So here we go.

00:05:15.140 --> 00:05:17.619
The first thing you
do is tell your reader

00:05:17.619 --> 00:05:19.660
that you're going to be
using proof by induction.

00:05:19.660 --> 00:05:21.550
That helps them
understand what's coming.

00:05:21.550 --> 00:05:25.320
So you begin with the line
proof by induction on n.

00:05:25.320 --> 00:05:28.352
Now n is not in magenta
because sometimes you

00:05:28.352 --> 00:05:30.310
use different variables,
and sometimes there'll

00:05:30.310 --> 00:05:32.550
be many variables
in the assertion.

00:05:32.550 --> 00:05:35.030
So you need to tell
the reader just which

00:05:35.030 --> 00:05:38.960
one is the one that you're going
to be applying induction to.

00:05:38.960 --> 00:05:39.780
All right.

00:05:39.780 --> 00:05:42.770
That said, the most
important part of the proof,

00:05:42.770 --> 00:05:45.890
the part where there's
usually a mistake-- if there's

00:05:45.890 --> 00:05:49.290
a mistake anywhere, it's usually
in the absence of the statement

00:05:49.290 --> 00:05:53.350
of an induction hypothesis, or a
misguided induction hypothesis.

00:05:53.350 --> 00:05:55.190
So the next part of
the template says

00:05:55.190 --> 00:05:59.290
the induction hypothesis P
of n is-- and in this case,

00:05:59.290 --> 00:06:02.040
our induction hypothesis is
that this equality holds.

00:06:02.040 --> 00:06:03.580
That's what we're
trying to prove.

00:06:03.580 --> 00:06:06.080
So the induction
hypothesis is P of n.

00:06:06.080 --> 00:06:09.810
The objective, then, implicitly,
when we're doing induction

00:06:09.810 --> 00:06:13.360
with this induction hypothesis,
is to prove that for all n,

00:06:13.360 --> 00:06:14.310
P of n calls.

00:06:14.310 --> 00:06:18.080
This identity works for all
non-negative integers n.

00:06:18.080 --> 00:06:18.600
OK.

00:06:18.600 --> 00:06:20.660
Having stated the
induction hypothesis,

00:06:20.660 --> 00:06:23.630
the first thing we have to
do is work on the base case.

00:06:23.630 --> 00:06:25.382
That is, prove it
for n equals 0.

00:06:25.382 --> 00:06:27.340
Now we're telling the
reader that it's n equals

00:06:27.340 --> 00:06:29.381
0 because sometimes it's
convenient to start at n

00:06:29.381 --> 00:06:31.630
equals 1 or n equals
2, and then you're

00:06:31.630 --> 00:06:35.130
just concluding that
the property holds

00:06:35.130 --> 00:06:36.890
for all n greater
than or equal to 1,

00:06:36.890 --> 00:06:39.660
or however-- all n
greater than or equal

00:06:39.660 --> 00:06:40.970
to wherever you started.

00:06:40.970 --> 00:06:44.730
So we're going to start at 0,
which is the standard place.

00:06:44.730 --> 00:06:46.290
And what do we have to check?

00:06:46.290 --> 00:06:48.860
We have to check that
the sum on the left,

00:06:48.860 --> 00:06:52.330
when n goes to-- when n is
0, is equal to the sum--

00:06:52.330 --> 00:06:55.120
to the formula on the
right when n is 0.

00:06:55.120 --> 00:06:58.130
Well the sum on the
left, when n is 0,

00:06:58.130 --> 00:07:01.050
it's really just 1, because
it's going from R to the 0

00:07:01.050 --> 00:07:02.000
to R to the 0.

00:07:02.000 --> 00:07:04.166
The R and the R squared,
they're a little misleading

00:07:04.166 --> 00:07:06.230
because they're not
really there when n is 0.

00:07:06.230 --> 00:07:10.410
So the left-hand side is
one, and the right-hand side

00:07:10.410 --> 00:07:16.770
is R minus 1 over R minus 1,
which is 1 since R is not 1.

00:07:16.770 --> 00:07:19.630
So sure enough, it
checks, and we're OK.

00:07:19.630 --> 00:07:22.740
The case n equals 0
has now been proved.

00:07:22.740 --> 00:07:26.150
So the next thing we have
to do in the template

00:07:26.150 --> 00:07:29.190
is to go to the inductive step.

00:07:29.190 --> 00:07:32.620
And that's where we
assume that P of n holds.

00:07:32.620 --> 00:07:36.270
And we're allowed to use
the P of n assumption

00:07:36.270 --> 00:07:39.120
in order to prove that
P of n plus 1 holds,

00:07:39.120 --> 00:07:41.230
where the only thing
that we know about n

00:07:41.230 --> 00:07:43.600
besides that P of
n holds is that n

00:07:43.600 --> 00:07:45.770
is greater than or equal to 0.

00:07:45.770 --> 00:07:49.330
And our proof has to work
for all possible n that

00:07:49.330 --> 00:07:51.690
are greater than or equal to 0.

00:07:51.690 --> 00:07:52.280
All right.

00:07:52.280 --> 00:07:55.909
Well, now we can start doing
the non-template method that

00:07:55.909 --> 00:07:57.950
has to do with the content
of what we're actually

00:07:57.950 --> 00:07:58.722
trying to prove.

00:07:58.722 --> 00:07:59.930
This is what I want to prove.

00:07:59.930 --> 00:08:01.400
This is P of n plus 1.

00:08:01.400 --> 00:08:05.810
It's gotten by replacing the n's
in the previous equation by n

00:08:05.810 --> 00:08:06.770
plus 1's.

00:08:06.770 --> 00:08:08.290
I'd like to have that be.

00:08:08.290 --> 00:08:08.870
OK.

00:08:08.870 --> 00:08:10.140
How do I get to that?

00:08:10.140 --> 00:08:14.030
Well, I can assume P of n, which
kind of looks like it already.

00:08:14.030 --> 00:08:16.630
It's a good head start to
getting to P of n plus 1.

00:08:16.630 --> 00:08:20.175
So I'm allowed to assume that
this equality holds for n.

00:08:20.175 --> 00:08:21.800
I don't know what n
is except that it's

00:08:21.800 --> 00:08:25.620
a non-negative integer, but
this equality holds for n.

00:08:25.620 --> 00:08:27.630
And I have to prove that
it holds for n plus 1.

00:08:27.630 --> 00:08:31.810
Well, if you look at this,
what I'm trying to prove

00:08:31.810 --> 00:08:36.700
is something about the sum that
goes up to R to the n plus 1.

00:08:36.700 --> 00:08:39.850
So given this equation, I
can turn the left-hand side

00:08:39.850 --> 00:08:41.909
into the sum that
I'm interested in.

00:08:41.909 --> 00:08:46.170
That is, the sum of powers of R
up to the n plus 1st power of R

00:08:46.170 --> 00:08:49.120
simply by adding
R to the n plus 1

00:08:49.120 --> 00:08:53.020
to both sides, an
obvious strategic move,

00:08:53.020 --> 00:08:54.520
or tactical move.

00:08:54.520 --> 00:08:55.770
OK.

00:08:55.770 --> 00:08:57.980
So doing that, I
get this equality,

00:08:57.980 --> 00:09:00.400
which I've now proved from
the induction hypothesis.

00:09:00.400 --> 00:09:03.040
Namely, the sum up
to R to the n plus 1,

00:09:03.040 --> 00:09:04.640
which is what I'm
interested in, is

00:09:04.640 --> 00:09:07.440
equal to this
algebraic expression

00:09:07.440 --> 00:09:08.940
on the right-hand side.

00:09:08.940 --> 00:09:10.850
And if I'm lucky, and
of course I will be,

00:09:10.850 --> 00:09:13.330
the right-hand side
is going to simplify

00:09:13.330 --> 00:09:17.880
to be the target expression,
with n replaced by n plus 1.

00:09:17.880 --> 00:09:21.470
So what happens is--
let's put R to the n

00:09:21.470 --> 00:09:24.690
plus 1 over this common
denominator, R minus 1.

00:09:24.690 --> 00:09:26.540
And I get the second
term, and then

00:09:26.540 --> 00:09:29.360
you can do a little bit of
algebraic simplification,

00:09:29.360 --> 00:09:31.860
trivial, and you'll realize
that, sure enough, it

00:09:31.860 --> 00:09:36.310
simplifies to R to the n
plus 1 plus 1 minus 1 over R

00:09:36.310 --> 00:09:39.680
minus 1, which was exactly
the equality that I

00:09:39.680 --> 00:09:41.190
was hoping to prove.

00:09:41.190 --> 00:09:43.790
So in fact, at this
point we can say

00:09:43.790 --> 00:09:46.700
that we've proved P
of n plus 1, and we've

00:09:46.700 --> 00:09:49.210
completed the induction proof.

00:09:49.210 --> 00:09:50.930
We're done.

00:09:50.930 --> 00:09:51.570
OK.

00:09:51.570 --> 00:09:55.770
That is the first basic
example of an induction proof.

00:09:55.770 --> 00:09:57.920
And the whole template
is now visible,

00:09:57.920 --> 00:10:02.390
except maybe there should have
been a QED or a Done statement.

00:10:02.390 --> 00:10:02.930
All right.

00:10:02.930 --> 00:10:05.520
By the way, as an aside, and
we already saw a little problem

00:10:05.520 --> 00:10:09.650
with this, the three dots
that appeared in the sum

00:10:09.650 --> 00:10:11.840
are called an ellipsis.

00:10:11.840 --> 00:10:13.850
Plural is ellipses.

00:10:13.850 --> 00:10:18.710
And they're used
where the writer

00:10:18.710 --> 00:10:21.360
is trying to tell the
reader that there's

00:10:21.360 --> 00:10:25.340
an obvious pattern that the
reader is expected to see,

00:10:25.340 --> 00:10:28.030
which I think is fairly
clear in this case.

00:10:28.030 --> 00:10:30.780
You go-- you know, it's R to
the 0, R to the 1, R to the 2,

00:10:30.780 --> 00:10:33.130
R to the 3, up to R to the n.

00:10:33.130 --> 00:10:37.940
The difficulty is that
sometimes the ellipsis

00:10:37.940 --> 00:10:39.730
can cause some confusion.

00:10:39.730 --> 00:10:42.370
For example, we had to
figure out that when n is 0,

00:10:42.370 --> 00:10:45.110
the left-hand side
actually just meant 1.

00:10:45.110 --> 00:10:47.720
It was just R to the
0, so the R and the R

00:10:47.720 --> 00:10:49.570
squared weren't really there.

00:10:49.570 --> 00:10:52.940
One way to really avoid
that kind of fence post

00:10:52.940 --> 00:10:58.100
problem where you've shown--
in order to make clear

00:10:58.100 --> 00:11:00.680
what the pattern is, you've
shown more than it may-- more

00:11:00.680 --> 00:11:03.080
of a pattern than
may always be there--

00:11:03.080 --> 00:11:06.620
is to use a precise mathematical
notation where I actually

00:11:06.620 --> 00:11:09.980
tell you the pattern
of the i-th term,

00:11:09.980 --> 00:11:13.810
and tell you that you should
sum from i equals 0 to n.

00:11:13.810 --> 00:11:16.630
So the sigma notation
is shorthand for sum,

00:11:16.630 --> 00:11:19.240
and I'm telling you that
the i-th term in the sum

00:11:19.240 --> 00:11:23.110
is R to the i, and it's going
to run from i equals 0 to n.

00:11:23.110 --> 00:11:25.100
So this is a sort of
mathematical notation

00:11:25.100 --> 00:11:29.790
for a for loop or a do loop--
do from i equals 0 to n,

00:11:29.790 --> 00:11:36.480
add R to the i plus R to
the i to the accumulator.

00:11:36.480 --> 00:11:40.690
And the sum notation is
certainly more precise.

00:11:40.690 --> 00:11:42.870
But sometimes, it's
actually harder

00:11:42.870 --> 00:11:46.600
to read than simply
showing you the pattern,

00:11:46.600 --> 00:11:51.360
because the pattern often
is visible visually.

00:11:51.360 --> 00:11:53.460
OK, now let me tell
you a little story.

00:11:53.460 --> 00:11:57.230
And it's a made-up story,
but it's kind of fun to tell.

00:11:57.230 --> 00:12:01.020
This is the familiar
building, the Stata Center.

00:12:01.020 --> 00:12:04.400
And this is actually
a design mock-up

00:12:04.400 --> 00:12:09.640
that the architects produced
for the MIT team that

00:12:09.640 --> 00:12:13.360
was overseeing the construction
and design of the building

00:12:13.360 --> 00:12:16.740
to show what the student
lobby would look like,

00:12:16.740 --> 00:12:18.620
the student street.

00:12:18.620 --> 00:12:24.170
Now the story goes that part of
the plan for the student street

00:12:24.170 --> 00:12:27.260
was to have a plaza
that was going

00:12:27.260 --> 00:12:30.070
to be built out of
unit size squares,

00:12:30.070 --> 00:12:32.140
but an uncertain number of them.

00:12:32.140 --> 00:12:34.230
There was going to be a
parameter that determined

00:12:34.230 --> 00:12:35.710
the size of the square.

00:12:35.710 --> 00:12:37.670
And the size of the
square was actually

00:12:37.670 --> 00:12:40.900
going to be a power of two
by a power of two made out

00:12:40.900 --> 00:12:43.940
of unit size tiles.

00:12:43.940 --> 00:12:45.840
So there would be
2 to the n times 2

00:12:45.840 --> 00:12:50.470
to the n unit size tiles
filling up this square plaza.

00:12:50.470 --> 00:12:53.430
And the plaza was to be
tiled with these unit tiles,

00:12:53.430 --> 00:12:58.100
but one tile space
was to be left blank

00:12:58.100 --> 00:13:01.520
so that the statue
of a-- what was then

00:13:01.520 --> 00:13:04.780
the potential donor,
Bill, could be placed

00:13:04.780 --> 00:13:06.650
in the middle as an
incentive for him

00:13:06.650 --> 00:13:09.470
to donate funds for the
completion of the building,

00:13:09.470 --> 00:13:12.110
which indeed he did.

00:13:12.110 --> 00:13:16.130
So the puzzle, then,
was put forward

00:13:16.130 --> 00:13:18.820
by the architect
Frank Gehry, who

00:13:18.820 --> 00:13:21.670
many regard, after
Frank Lloyd Wright,

00:13:21.670 --> 00:13:25.210
as the greatest architect
of the 20th century.

00:13:25.210 --> 00:13:27.670
Gehry specified for
aesthetic reasons

00:13:27.670 --> 00:13:30.220
that he wanted to
the square to be

00:13:30.220 --> 00:13:35.390
tiled with L-shaped
tiles that were made out

00:13:35.390 --> 00:13:36.660
of three unit squares.

00:13:36.660 --> 00:13:38.660
He thought that that would
give a pretty design,

00:13:38.660 --> 00:13:40.690
and it actually does.

00:13:40.690 --> 00:13:44.930
So here's an example of
tiling the n equals 3 case,

00:13:44.930 --> 00:13:47.760
[? 2 ?] [? to the-- ?] [? 2 ?]
[? cubed ?] equals 8x8 plaza

00:13:47.760 --> 00:13:49.410
with Bill in the middle.

00:13:49.410 --> 00:13:54.080
There is the 8x8 plaza tiled
with these L-shaped tiles, each

00:13:54.080 --> 00:13:56.570
consisting of three unit tiles.

00:13:56.570 --> 00:14:00.340
So the question was that
the exact size of the square

00:14:00.340 --> 00:14:03.530
was to be determined by other
architectural considerations.

00:14:03.530 --> 00:14:06.640
So it was parametrized by n,
which is going to be 2 to the n

00:14:06.640 --> 00:14:07.450
by 2 to the n.

00:14:07.450 --> 00:14:11.710
The question was, can you always
find such a tiling no matter

00:14:11.710 --> 00:14:15.800
how big the square is and
leave Bill in the middle.

00:14:15.800 --> 00:14:18.176
Well, let's try to
prove it by induction.

00:14:18.176 --> 00:14:19.800
The induction
hypothesis-- we're trying

00:14:19.800 --> 00:14:22.960
to prove a theorem that, for any
2 to the n by 2 to the n plaza,

00:14:22.960 --> 00:14:25.220
we can make Bill
and Frank happy.

00:14:25.220 --> 00:14:27.400
That is, Bill's happy
when he's in the middle,

00:14:27.400 --> 00:14:30.820
and Frank is happy when
the rest of the square

00:14:30.820 --> 00:14:32.840
is covered with L-shaped tiles.

00:14:32.840 --> 00:14:35.220
By the way, middle is
a little bit ambiguous

00:14:35.220 --> 00:14:37.270
because there are really
four middle squares.

00:14:37.270 --> 00:14:39.632
But of course, it
doesn't matter which one

00:14:39.632 --> 00:14:41.590
you fill, because if you
wanted a different one

00:14:41.590 --> 00:14:43.240
you could just rotate
the whole square

00:14:43.240 --> 00:14:46.590
and get any one of the
four middle squares

00:14:46.590 --> 00:14:50.450
empty for the Bill statue.

00:14:50.450 --> 00:14:54.530
So an induction proof
would proceed by induction

00:14:54.530 --> 00:14:55.690
on something or other.

00:14:55.690 --> 00:14:57.550
And the obvious
thing is the n that's

00:14:57.550 --> 00:14:59.320
in the statement of the theorem.

00:14:59.320 --> 00:15:02.090
And the induction hypothesis
would straightforwardly

00:15:02.090 --> 00:15:04.260
be that we can
tile to 2 to the n

00:15:04.260 --> 00:15:07.760
by 2 to the n plaza
with Bill in the middle.

00:15:07.760 --> 00:15:08.260
OK.

00:15:08.260 --> 00:15:10.410
The base case is n equals 0.

00:15:10.410 --> 00:15:12.770
That's a 2 to the
1 by 2 to the 2.

00:15:12.770 --> 00:15:15.470
It's a 1x1 square.

00:15:15.470 --> 00:15:17.640
OK, well, not a problem.

00:15:17.640 --> 00:15:19.600
You just put Bill
in the one square,

00:15:19.600 --> 00:15:21.950
and you tile the rest
with no L-shaped tiles.

00:15:21.950 --> 00:15:23.190
That fits the rules.

00:15:23.190 --> 00:15:27.590
The base case n equals
1-- n equals 0 is covered.

00:15:27.590 --> 00:15:28.320
All right.

00:15:28.320 --> 00:15:32.090
So now we come to the
double size square,

00:15:32.090 --> 00:15:34.380
the square that's of
size 2 to the n plus 1

00:15:34.380 --> 00:15:36.180
by 2 to the n plus 1.

00:15:36.180 --> 00:15:38.650
I have to tile that
with Bill in the middle,

00:15:38.650 --> 00:15:40.840
but I have a fairly
powerful induction

00:15:40.840 --> 00:15:43.660
hypothesis that I'm
allowed to assume, namely

00:15:43.660 --> 00:15:47.560
that I can tile the half
size square, the 2 to the n

00:15:47.560 --> 00:15:50.840
by 2 to the n square, and
get Bill in the middle.

00:15:50.840 --> 00:15:53.360
So obviously, the
double size square

00:15:53.360 --> 00:15:58.370
is made out of four
half-sized squares.

00:15:58.370 --> 00:16:03.216
And so I can try to fill
up the whole square that's

00:16:03.216 --> 00:16:05.840
2 to the-- the whole full-sized
square, or double-sized square,

00:16:05.840 --> 00:16:08.300
2 to the n plus 1 by
2 to the n plus 1,

00:16:08.300 --> 00:16:14.070
by working with my ability to
tile them with L-shaped tiles,

00:16:14.070 --> 00:16:19.130
leaving Bill in the middle for
each of those four subsquares.

00:16:19.130 --> 00:16:24.710
So I can assume that,
and now I'm stuck really.

00:16:24.710 --> 00:16:25.500
What do I do?

00:16:25.500 --> 00:16:29.330
How do I use this ability to
put Bill in the middle of each

00:16:29.330 --> 00:16:32.450
of those four quadrants
in order to color--

00:16:32.450 --> 00:16:35.710
to fill in the whole
thing with N-shaped tiles?

00:16:35.710 --> 00:16:37.510
I'm stuck.

00:16:37.510 --> 00:16:41.970
And the point of this
example is to show you

00:16:41.970 --> 00:16:46.580
the way to get unstuck,
which is kind of unexpected.

00:16:46.580 --> 00:16:49.170
I'm actually going
to get unstuck

00:16:49.170 --> 00:16:51.640
by proving something stronger.

00:16:51.640 --> 00:16:55.130
I'm actually going to prove
that we can find a tiling using

00:16:55.130 --> 00:16:59.650
L-shaped squares with Bill
placed in any specified square

00:16:59.650 --> 00:17:00.600
that you like.

00:17:00.600 --> 00:17:02.190
Wherever you want
to put him, I can

00:17:02.190 --> 00:17:03.990
tile the rest with
L-shaped tiles

00:17:03.990 --> 00:17:08.349
and leave the specified
single square blank for Bill

00:17:08.349 --> 00:17:11.700
to be inserted, for a statue
of Bill to be put there.

00:17:11.700 --> 00:17:13.605
So what's unintuitive
about this is that I'm

00:17:13.605 --> 00:17:14.730
proving something stronger.

00:17:14.730 --> 00:17:16.339
It ought to be harder
to prove, right?

00:17:16.339 --> 00:17:20.760
But because I'm trying to prove
a conclusion that's stronger,

00:17:20.760 --> 00:17:24.190
I also have a stronger
induction hypothesis

00:17:24.190 --> 00:17:27.060
to work with in
conducting the proof.

00:17:27.060 --> 00:17:29.950
And the net proof
actually, as you'll see,

00:17:29.950 --> 00:17:31.810
is going to be easier.

00:17:31.810 --> 00:17:35.000
So let's do it with the
stronger induction hypothesis.

00:17:35.000 --> 00:17:38.400
The theorem is, again, for any
2 to the n by 2 to the n plaza,

00:17:38.400 --> 00:17:40.580
so we can make Bill
and Frank happy.

00:17:40.580 --> 00:17:42.100
Prove by induction on n.

00:17:42.100 --> 00:17:44.690
But with a revised
induction hypothesis--

00:17:44.690 --> 00:17:46.540
I'm calling it P
of n again-- which

00:17:46.540 --> 00:17:51.200
is I can tile the square
with Bill anywhere.

00:17:51.200 --> 00:17:54.870
So the base case, n equals
0, is the same as before.

00:17:54.870 --> 00:17:55.810
It's just 1x1.

00:17:55.810 --> 00:17:58.925
So I put Bill in the
only tile that there

00:17:58.925 --> 00:18:02.190
is, which is both the middle and
the corner and everything else.

00:18:02.190 --> 00:18:04.470
And the base case
doesn't change.

00:18:04.470 --> 00:18:08.830
For the inductive step, now
I have a more powerful thing

00:18:08.830 --> 00:18:11.350
that I can assume is the
induction hypothesis.

00:18:11.350 --> 00:18:14.810
I can assume that, in any
given square of a 2 to the n

00:18:14.810 --> 00:18:18.190
by 2 to the n-- any given tile
location, unit square, of a 2

00:18:18.190 --> 00:18:21.380
to the n by 2 to
the n plaza, I can

00:18:21.380 --> 00:18:23.560
tile the rest with
L-shaped squares

00:18:23.560 --> 00:18:27.040
and get Bill where
I wanted him to be.

00:18:27.040 --> 00:18:30.220
And I have to use
that hypothesis

00:18:30.220 --> 00:18:35.765
to show that I can get Bill
anywhere that's required in a 2

00:18:35.765 --> 00:18:38.630
to the n plus 1 by 2
to the n plus 1 square.

00:18:38.630 --> 00:18:43.620
So suppose that we want to
tile Bill in that designated

00:18:43.620 --> 00:18:47.680
arbitrary square of the 2 to
the n plus 1 by 2 to the n

00:18:47.680 --> 00:18:50.910
plus 1 plaza where we
happen to choose a location

00:18:50.910 --> 00:18:53.590
where Bill is in the
upper right quadrant,

00:18:53.590 --> 00:18:56.610
in the upper right
half size square.

00:18:56.610 --> 00:18:57.270
All right.

00:18:57.270 --> 00:19:01.230
So my hypothesis, I can
fill in the purple square,

00:19:01.230 --> 00:19:03.120
that quadrant, with
L-shaped tiles,

00:19:03.120 --> 00:19:07.730
leaving Bill in the place
that he's supposed to be.

00:19:07.730 --> 00:19:08.940
Well, here's the trick.

00:19:08.940 --> 00:19:12.190
With the other three, since
I can tile them with Bill

00:19:12.190 --> 00:19:15.230
anywhere, I'm going
to tile them with Bill

00:19:15.230 --> 00:19:20.320
in the respective corners of
those three other subsquares,

00:19:20.320 --> 00:19:25.990
which meet in the center of the
full-size plaza, as shown here.

00:19:25.990 --> 00:19:28.010
And having done that,
now it's obvious

00:19:28.010 --> 00:19:30.840
how to fill up the
whole 2 to the n plus 1

00:19:30.840 --> 00:19:34.770
by 2 to the n plus 1 plaza,
because I pull those four

00:19:34.770 --> 00:19:38.130
separate pieces together to form
the full-size 2 to the n plus 1

00:19:38.130 --> 00:19:39.480
by 2 to the n plus 1 plaza.

00:19:39.480 --> 00:19:42.770
And look, I just put an
L-shaped tile in the middle

00:19:42.770 --> 00:19:46.390
to fill up those three
corner Bills, and I'm done.

00:19:46.390 --> 00:19:48.130
And the proof is complete.

00:19:48.130 --> 00:19:52.310
We have just proved by
induction that indeed you

00:19:52.310 --> 00:19:58.110
can tile any power of 2 by power
of 2 square putting-- leaving

00:19:58.110 --> 00:20:01.150
Bill wherever you want
him, and the rest filled

00:20:01.150 --> 00:20:03.480
with L-shaped tiles.

00:20:03.480 --> 00:20:06.570
Now notice that a
part of this process

00:20:06.570 --> 00:20:09.910
actually is implicitly
defining a recursive procedure

00:20:09.910 --> 00:20:12.060
to actually do the tiling.

00:20:12.060 --> 00:20:14.020
If you watch the
way the proof went,

00:20:14.020 --> 00:20:16.290
if I was going to write a
recursive procedure to do

00:20:16.290 --> 00:20:18.850
the tiling, what I
would do is say OK,

00:20:18.850 --> 00:20:20.710
you give me input
n plus 1, which

00:20:20.710 --> 00:20:23.460
are the dimensions-- the
specification of the dimensions

00:20:23.460 --> 00:20:26.560
of the plaza, input
n plus 1-- or input n

00:20:26.560 --> 00:20:28.850
means it's 2 the
n by 2 to the n.

00:20:28.850 --> 00:20:29.950
How do I do that?

00:20:29.950 --> 00:20:32.310
Well, you tell me
where you want Bill

00:20:32.310 --> 00:20:34.940
to be as another
parameter, and then I

00:20:34.940 --> 00:20:43.370
will call myself recursively
on four half size squares.

00:20:43.370 --> 00:20:46.340
So that is, call
myself to do squares

00:20:46.340 --> 00:20:50.180
with dimension parameter n minus
1 four times for each quadrant,

00:20:50.180 --> 00:20:52.780
each time specifying
in those quarters

00:20:52.780 --> 00:20:54.130
where I want Bill to be.

00:20:54.130 --> 00:20:58.530
The recursive procedure will
return an L-shaped tiling

00:20:58.530 --> 00:21:02.960
of those four pieces, and then
I take those, fit them together,

00:21:02.960 --> 00:21:07.080
tile that middle, and
I wind up with a tiling

00:21:07.080 --> 00:21:08.212
of the whole region.

00:21:08.212 --> 00:21:09.670
So what I've just
talked through is

00:21:09.670 --> 00:21:13.190
the description of a very easily
written recursive procedure

00:21:13.190 --> 00:21:17.060
that would print out a picture
of an L-shaped tiling given,

00:21:17.060 --> 00:21:19.750
as input, any number n.

00:21:19.750 --> 00:21:25.320
And that's, in fact, that
how we got the 8x8 tiling,

00:21:25.320 --> 00:21:28.300
although we did it by hand
rather than writing a program.

00:21:28.300 --> 00:21:31.250
And that's enough
of two examples

00:21:31.250 --> 00:21:34.790
of basic mathematical induction.

