WEBVTT
Kind: captions
Language: en

00:00:00.954 --> 00:00:09.540
[SWOOSHING]

00:00:09.540 --> 00:00:11.330
GUS CLASS: Hello, Google+
Developers.

00:00:11.330 --> 00:00:14.780
I'm Gus Class, and I'm on
developer relations for the

00:00:14.780 --> 00:00:15.920
Google+ team.

00:00:15.920 --> 00:00:18.490
And today, we're going to be
talking about the Python

00:00:18.490 --> 00:00:19.010
quick-start.

00:00:19.010 --> 00:00:22.363
And so naturally, we brought in
one of our Python experts

00:00:22.363 --> 00:00:25.190
from the Drive team,
Ali Afshar.

00:00:25.190 --> 00:00:26.180
ALI AFSHAR: Hi, everyone.

00:00:26.180 --> 00:00:27.840
Thanks for coming.

00:00:27.840 --> 00:00:32.710
GUS CLASS: So a little trivia
about Ali is he

00:00:32.710 --> 00:00:33.960
wrote his own IDE.

00:00:36.100 --> 00:00:39.030
ALI AFSHAR: So I wrote
two IDEs actually.

00:00:39.030 --> 00:00:40.530
They're great if you want
to check them out.

00:00:40.530 --> 00:00:42.690
One of them's called PIDA, one
of them's called Abominade.

00:00:42.690 --> 00:00:45.980
They're both written in Python,
and you can like them

00:00:45.980 --> 00:00:47.400
if you like Vim.

00:00:47.400 --> 00:00:48.420
GUS CLASS: There you go.

00:00:48.420 --> 00:00:49.710
Well, it's great to have
you here, Ali.

00:00:49.710 --> 00:00:53.240
And so let's get to the
quick-start video that we've

00:00:53.240 --> 00:00:54.700
been working on this week.

00:00:54.700 --> 00:00:56.560
And so we're going to just take
a quick look at it, and

00:00:56.560 --> 00:01:02.180
it's a screen cast that we did
to show you how quick it is.

00:01:02.180 --> 00:01:04.510
The instructions for the
Python quick-start are

00:01:04.510 --> 00:01:10.810
available on developers.googl
e.com/+/quickstart/python.

00:01:10.810 --> 00:01:13.140
The first step in the
instructions is to enable the

00:01:13.140 --> 00:01:15.100
Google+ API.

00:01:15.100 --> 00:01:17.480
This is what you do before
starting any project.

00:01:17.480 --> 00:01:23.410
Navigate to
code.google.com/apis/console.

00:01:23.410 --> 00:01:25.410
When you're here, create
a new project.

00:01:25.410 --> 00:01:29.390
And then give your project
a title for you.

00:01:29.390 --> 00:01:32.650
After you create the project,
you'll be redirected to the

00:01:32.650 --> 00:01:33.980
services pane.

00:01:33.980 --> 00:01:36.370
Inside of the services pane,
you'll need to turn on the

00:01:36.370 --> 00:01:38.870
Google+ API.

00:01:38.870 --> 00:01:42.850
After turning on the Google+
API, create a client ID and

00:01:42.850 --> 00:01:46.390
client secret by navigating
to API Access.

00:01:46.390 --> 00:01:49.320
The information that you enter
into this first window will be

00:01:49.320 --> 00:01:52.180
customer facing, so
carefully pick it.

00:01:52.180 --> 00:01:56.050
Next, set the authorized
JavaScript origin to local

00:01:56.050 --> 00:02:00.080
host port 4567, as configured
in the sample.

00:02:00.080 --> 00:02:04.650
Also, set the protocol
to HTTP.

00:02:04.650 --> 00:02:07.500
After you've created your client
ID and client secret,

00:02:07.500 --> 00:02:09.759
you're ready to clone
the project.

00:02:09.759 --> 00:02:13.710
Run the git clone command to
clone the Python quick-start

00:02:13.710 --> 00:02:15.630
from GitHub.

00:02:15.630 --> 00:02:19.070
Next, set up Python as
you would do for any

00:02:19.070 --> 00:02:21.300
other Python project.

00:02:21.300 --> 00:02:23.680
And so I'll just use Virtual
Environment.

00:02:23.680 --> 00:02:27.930
Next, go into the project
folder, and then install all

00:02:27.930 --> 00:02:34.270
of the Python requirements by
running pip install dash r

00:02:34.270 --> 00:02:35.520
requirements.txt.

00:02:38.250 --> 00:02:41.000
After the requirements are
installed, you're ready to set

00:02:41.000 --> 00:02:47.110
the client ID and client secret
in clientsecrets.JSON.

00:02:47.110 --> 00:02:51.290
Copy and paste the client ID
from the API console project

00:02:51.290 --> 00:02:56.090
you created, and copy the client
secret from the API

00:02:56.090 --> 00:02:57.340
console project.

00:03:00.540 --> 00:03:03.310
After you've put the client ID
and client secret in, you're

00:03:03.310 --> 00:03:05.000
ready to run the sample.

00:03:05.000 --> 00:03:09.400
Just run Python signin.py
to start the sample.

00:03:09.400 --> 00:03:12.690
You'll be prompted for turning
on the web server, so just

00:03:12.690 --> 00:03:14.530
make sure that you approve it.

00:03:14.530 --> 00:03:17.400
And then navigate in a web
browser to local host port

00:03:17.400 --> 00:03:21.440
4567, authorize the
application, and

00:03:21.440 --> 00:03:23.910
you will see it run.

00:03:23.910 --> 00:03:26.790
You've now run the Python
quick-start.

00:03:26.790 --> 00:03:28.100
So that's it.

00:03:28.100 --> 00:03:30.280
That's how long it takes to
run through the Python

00:03:30.280 --> 00:03:31.120
quick-start.

00:03:31.120 --> 00:03:33.080
And we timed me, and it
took me just about

00:03:33.080 --> 00:03:34.030
two and a half minutes.

00:03:34.030 --> 00:03:36.740
So it's really easy to do,
and you can see it going

00:03:36.740 --> 00:03:37.750
right out the gate.

00:03:37.750 --> 00:03:39.950
But you're probably asking, what
are the next things you

00:03:39.950 --> 00:03:41.700
can do with the Python
quick-start?

00:03:41.700 --> 00:03:44.170
And so some of the things that
we thought about doing were

00:03:44.170 --> 00:03:47.290
deploying it to a cloud hosted
service, such as

00:03:47.290 --> 00:03:49.530
Heroku or App Engine.

00:03:49.530 --> 00:03:52.650
Ali, are there any changes that
would have to be made

00:03:52.650 --> 00:03:55.660
inside of the quick-start
sample, in order to be capable

00:03:55.660 --> 00:03:57.900
of deploying it to
these solutions?

00:03:57.900 --> 00:04:00.240
ALI AFSHAR: So this is what
I really like about your

00:04:00.240 --> 00:04:02.900
quick-start sample is
that you use a web

00:04:02.900 --> 00:04:04.070
framework called Flask.

00:04:04.070 --> 00:04:07.040
It's very close to my heart,
written by a number of people

00:04:07.040 --> 00:04:09.530
I know and I've contributed
to.

00:04:09.530 --> 00:04:11.170
It's a very light framework.

00:04:11.170 --> 00:04:12.360
It's very easy to use.

00:04:12.360 --> 00:04:15.630
And of course, with Python, as
with any Python web framework,

00:04:15.630 --> 00:04:18.649
it's built on WSGI, the web
server gateway interface that

00:04:18.649 --> 00:04:22.690
is this common infrastructure
for web applications to talk

00:04:22.690 --> 00:04:24.790
to web servers.

00:04:24.790 --> 00:04:27.982
So really, no, you can just dump
that thing anywhere you

00:04:27.982 --> 00:04:29.100
like, and it will run.

00:04:29.100 --> 00:04:30.270
So it will run on App Engine.

00:04:30.270 --> 00:04:31.560
App Engine supports WSGI.

00:04:31.560 --> 00:04:32.700
It will run on Heroku.

00:04:32.700 --> 00:04:36.080
It will run on just about any
way you can host files.

00:04:36.080 --> 00:04:37.670
If you just have an Apache
server, well,

00:04:37.670 --> 00:04:39.330
that will work too.

00:04:39.330 --> 00:04:41.140
So that's what I really like--

00:04:41.140 --> 00:04:41.470
Flask.

00:04:41.470 --> 00:04:41.890
Check it out.

00:04:41.890 --> 00:04:43.965
If you haven't checked it out,
and you use Python at all-- if

00:04:43.965 --> 00:04:45.660
you use Python at all, of
course, you would have checked

00:04:45.660 --> 00:04:47.230
it out already.

00:04:47.230 --> 00:04:48.590
If you haven't, and you're
getting into

00:04:48.590 --> 00:04:49.740
that, check it out.

00:04:49.740 --> 00:04:52.160
It's like almost the
anti-Django.

00:04:52.160 --> 00:04:55.110
It's like a light, useful,
flexible framework, whereas

00:04:55.110 --> 00:05:00.110
Django is a less light
framework.

00:05:00.110 --> 00:05:01.910
GUS CLASS: Yeah, I mean in our
sample, we were really trying

00:05:01.910 --> 00:05:05.240
to get it down as narrow as
possible and make it as easy

00:05:05.240 --> 00:05:06.150
for developers to use.

00:05:06.150 --> 00:05:08.410
And it's good to hear that you
agree with some of the choices

00:05:08.410 --> 00:05:10.190
that we made.

00:05:10.190 --> 00:05:14.110
And you're on the Drive API,
so you probably have done

00:05:14.110 --> 00:05:16.600
these integrations before
between the Sign-in

00:05:16.600 --> 00:05:18.080
solution and Drive.

00:05:18.080 --> 00:05:21.210
So do you have any suggestions
for developers?

00:05:21.210 --> 00:05:23.400
And what would they do to
get Drive integrated?

00:05:23.400 --> 00:05:25.670
And then what would be something
cool that someone

00:05:25.670 --> 00:05:27.830
could do after integrating
with Drive?

00:05:27.830 --> 00:05:29.530
ALI AFSHAR: So we have
Drive quick-starts,

00:05:29.530 --> 00:05:30.810
as well, very similar.

00:05:30.810 --> 00:05:32.010
The Python one is
very similar.

00:05:32.010 --> 00:05:34.750
We actually don't need a web
server to use the Drive API.

00:05:34.750 --> 00:05:37.270
So we just have a command line
application, so it's

00:05:37.270 --> 00:05:39.310
easier in that way.

00:05:39.310 --> 00:05:42.270
Integrating + Sign-in
is very easy.

00:05:42.270 --> 00:05:45.520
You go through, and you
add the Drive Scope--

00:05:45.520 --> 00:05:47.300
that's an OAuth 2 scope.

00:05:47.300 --> 00:05:49.030
And you add that scope, and
then immediately, you can

00:05:49.030 --> 00:05:51.660
start making requests
to the Drive API.

00:05:51.660 --> 00:05:55.140
It's beautiful, because the
scopes you request when you do

00:05:55.140 --> 00:05:58.480
authorize the user, those
are all union together.

00:05:58.480 --> 00:06:01.740
So I can then get a client, an
authorized HTTP client that

00:06:01.740 --> 00:06:04.625
can make requests against the
Drive API and make requests

00:06:04.625 --> 00:06:07.500
against the + API, and make
requests against any of our

00:06:07.500 --> 00:06:08.570
APIs, really.

00:06:08.570 --> 00:06:10.300
You just have to
ask for access.

00:06:10.300 --> 00:06:13.450
So that's really, really nice.

00:06:13.450 --> 00:06:16.280
What our quick-starts do is
we just upload a file.

00:06:16.280 --> 00:06:20.010
So in your use case, I think the
most simple functionality,

00:06:20.010 --> 00:06:22.800
and you've done that really
well, is just to find out who

00:06:22.800 --> 00:06:24.910
the user is or find out
their friends or

00:06:24.910 --> 00:06:26.930
something like that.

00:06:26.930 --> 00:06:29.315
Our quick-start, we just upload
a file, so you select a

00:06:29.315 --> 00:06:34.445
file and you upload it, pretty
simple, but get on.

00:06:34.445 --> 00:06:37.310
So one extra thing I just wanted
to talk about was your

00:06:37.310 --> 00:06:38.920
use of Virtual Environment.

00:06:38.920 --> 00:06:40.840
Now I'm really, really
happy to see that.

00:06:40.840 --> 00:06:43.680
And since you brought me on to
talk about Python, I guess I

00:06:43.680 --> 00:06:48.520
should just bash my stick a bit,
which is when you run a

00:06:48.520 --> 00:06:51.460
Python sample, or when you
install a Python sample,

00:06:51.460 --> 00:06:53.700
always use Virtual
Environment.

00:06:53.700 --> 00:06:54.160
Why?

00:06:54.160 --> 00:06:55.230
Because you don't
want to actually

00:06:55.230 --> 00:06:56.890
use your system Python.

00:06:56.890 --> 00:06:59.290
The system Python is there
for the system to run.

00:06:59.290 --> 00:07:03.130
And we're well past the days
when a Ubuntu system or a Mac

00:07:03.130 --> 00:07:05.680
system wouldn't actually
need Python installed.

00:07:05.680 --> 00:07:08.930
But now these systems use
Python, and they use them, in

00:07:08.930 --> 00:07:11.450
depth, for lots of core
functionality.

00:07:11.450 --> 00:07:13.810
So when you're installing
something using pseudo-pip

00:07:13.810 --> 00:07:18.500
install, you have the ability to
really overwrite something

00:07:18.500 --> 00:07:20.640
that the system is using and
something that is critical for

00:07:20.640 --> 00:07:22.150
the function of your computer.

00:07:22.150 --> 00:07:23.570
You don't want to do that.

00:07:23.570 --> 00:07:27.640
So my takeaway for this is if
you have to run pseudo-pip

00:07:27.640 --> 00:07:29.820
anything, you're probably
doing something wrong.

00:07:29.820 --> 00:07:31.730
So check out Virtual Env.

00:07:31.730 --> 00:07:33.080
Obviously, check out pip.

00:07:33.080 --> 00:07:35.070
Pip and Virtual Env are written
by the same guy,

00:07:35.070 --> 00:07:35.650
originally.

00:07:35.650 --> 00:07:37.960
So they integrate
very, very well.

00:07:37.960 --> 00:07:38.750
One will install the other.

00:07:38.750 --> 00:07:40.590
So that's my tip to takeaway.

00:07:40.590 --> 00:07:41.990
Always use a virtual
environment.

00:07:41.990 --> 00:07:43.900
And thanks for doing that,
because that's

00:07:43.900 --> 00:07:44.640
made me very happy.

00:07:44.640 --> 00:07:46.290
GUS CLASS: Yeah, OK, good.

00:07:46.290 --> 00:07:48.880
Well, I'm glad to have
made you happy, Ali.

00:07:48.880 --> 00:07:51.970
Do you have any questions
for me about Google+?

00:07:51.970 --> 00:07:53.700
ALI AFSHAR: So tell me--

00:07:53.700 --> 00:07:54.600
I've seen it a bit.

00:07:54.600 --> 00:07:56.500
I've seen your API a bit.

00:07:56.500 --> 00:07:59.790
So just in a few lines,
tell me why + Sign-in?

00:07:59.790 --> 00:08:00.690
Why is that good for me?

00:08:00.690 --> 00:08:02.190
Why is that good for
my applications?

00:08:02.190 --> 00:08:04.310
GUS CLASS: Yeah, well, one of
the key things that we're

00:08:04.310 --> 00:08:07.426
doing in the sample is getting
that client authorized as well

00:08:07.426 --> 00:08:11.560
as the server, so you can
then, using the Google+

00:08:11.560 --> 00:08:15.800
Sign-in API, by connecting your
account with Google, what

00:08:15.800 --> 00:08:18.360
you're doing is you're
authorizing the client on

00:08:18.360 --> 00:08:20.150
JavaScript, and you're
authorizing the server.

00:08:20.150 --> 00:08:23.330
So then you can do all of those
operations that you want

00:08:23.330 --> 00:08:25.800
to do client side, as
well as server side.

00:08:25.800 --> 00:08:29.270
And because of the way that the
client libraries work, you

00:08:29.270 --> 00:08:32.640
can then, as you said, request
all the scopes that you want

00:08:32.640 --> 00:08:35.780
and then get access to the
entire suite of functionality

00:08:35.780 --> 00:08:38.539
that is available through
the Google platforms.

00:08:38.539 --> 00:08:43.780
So this is a really powerful
tool for developers to get

00:08:43.780 --> 00:08:48.280
their users integrating Google
functionality with their

00:08:48.280 --> 00:08:49.580
actual third party sites.

00:08:49.580 --> 00:08:49.820
ALI AFSHAR: That's cool.

00:08:49.820 --> 00:08:52.610
So I get authorization and I get
authentication, as well?

00:08:52.610 --> 00:08:52.980
GUS CLASS: Yeah.

00:08:52.980 --> 00:08:54.200
ALI AFSHAR: OK, awesome,
great.

00:08:54.200 --> 00:08:56.180
So I'm a real fan.

00:08:56.180 --> 00:08:58.140
It's something I've been using
in my pet projects.

00:08:58.140 --> 00:09:01.140
It's just so much easier to just
put a bit of HTML on a

00:09:01.140 --> 00:09:04.550
page and then sign-in auth
is just solved for me.

00:09:04.550 --> 00:09:06.110
So I love that, so
thanks very much.

00:09:06.110 --> 00:09:07.140
Keep that up.

00:09:07.140 --> 00:09:08.360
GUS CLASS: Yeah, for sure.

00:09:08.360 --> 00:09:11.340
And yeah, so that's pretty
much it for the Python

00:09:11.340 --> 00:09:12.870
quick-start.

00:09:12.870 --> 00:09:14.850
Inside of that quick-start,
what's happening is that the

00:09:14.850 --> 00:09:17.460
client's authorizing, it's
passing an authorization code

00:09:17.460 --> 00:09:18.970
to the server.

00:09:18.970 --> 00:09:20.910
And then the server's
authorizing, so then both are

00:09:20.910 --> 00:09:21.950
authorized.

00:09:21.950 --> 00:09:24.720
And then some of the API calls
are performed on the client,

00:09:24.720 --> 00:09:27.180
most notably the profile
retrieval.

00:09:27.180 --> 00:09:31.280
And then some of the APIs are
performed on the server, which

00:09:31.280 --> 00:09:33.410
is that Circles, the
people list.

00:09:33.410 --> 00:09:40.180
And so the sample just
highlights those two steps for

00:09:40.180 --> 00:09:42.480
using the Google+ API.

00:09:42.480 --> 00:09:45.340
ALI AFSHAR: So yeah, it was
three minutes to go through.

00:09:45.340 --> 00:09:48.130
But I think you can easily spend
a few hours picking the

00:09:48.130 --> 00:09:50.710
bits out that are useful to
you for your application.

00:09:50.710 --> 00:09:52.880
GUS CLASS: Yeah, it's really
worth mentioning that you can

00:09:52.880 --> 00:09:56.710
go to the Google APIs Explorer
to see the scope of what you

00:09:56.710 --> 00:09:59.210
can do with the APIs and
experiment with those

00:09:59.210 --> 00:10:00.420
particular API calls.

00:10:00.420 --> 00:10:03.150
So this is a great pro tip.

00:10:03.150 --> 00:10:09.310
If you go to
code.google.com/apis/explorer,

00:10:09.310 --> 00:10:12.540
you can explore the APIs and
experiment with what's there.

00:10:12.540 --> 00:10:16.500
So that's a really great place
to explore what you can do

00:10:16.500 --> 00:10:19.150
after you've got that
sample going.

00:10:19.150 --> 00:10:21.540
So that's pretty much what
we have for today.

00:10:21.540 --> 00:10:24.550
There's a couple of
announcements before we close.

00:10:24.550 --> 00:10:29.960
The first is that now the People
Search API will allow

00:10:29.960 --> 00:10:33.130
you to search for a Google+
user by email.

00:10:33.130 --> 00:10:36.710
And the next is that there has
been a recent update to the

00:10:36.710 --> 00:10:40.820
Android Google Play services
libraries that improves the

00:10:40.820 --> 00:10:43.460
experience for sharing and
signing in on Android.

00:10:43.460 --> 00:10:48.160
So for those really astute
Google+ Developers out there,

00:10:48.160 --> 00:10:49.970
make sure that you check
out the new platform

00:10:49.970 --> 00:10:50.900
functionality.

00:10:50.900 --> 00:10:54.820
And feel free to ask us
questions in the Google+

00:10:54.820 --> 00:10:56.330
Developers community.

00:10:56.330 --> 00:11:00.240
And if you're looking for the
Google+ Developers resources,

00:11:00.240 --> 00:11:02.570
the top ones will always
be listed at

00:11:02.570 --> 00:11:06.240
developers.google.com/plus.

00:11:06.240 --> 00:11:08.830
So thanks for watching, and
come back next week for

00:11:08.830 --> 00:11:10.960
another Google+ Developers
Live.

00:11:10.960 --> 00:11:11.560
ALI AFSHAR: Thanks.

00:11:11.560 --> 00:11:18.760
[SWOOSHING]

