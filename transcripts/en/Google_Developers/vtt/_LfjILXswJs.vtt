WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.889
[MUSIC PLAYING]

00:00:01.889 --> 00:00:03.180
ANDREW BROGDON: Hey, everybody.

00:00:03.180 --> 00:00:04.554
I'm Andrew from
the Flutter team,

00:00:04.554 --> 00:00:06.830
here to tell you all about
Flutter Release Preview

00:00:06.830 --> 00:00:09.440
2, which was just announced
at the Google Developer Days

00:00:09.440 --> 00:00:10.652
keynote.

00:00:10.652 --> 00:00:13.940
RP2 is the last preview
expected before Flutter hits

00:00:13.940 --> 00:00:16.340
1.0, which is pretty exciting.

00:00:16.340 --> 00:00:18.350
Plus, it's got the latest
and greatest widgets,

00:00:18.350 --> 00:00:20.820
and new versions of
the engine and tools.

00:00:20.820 --> 00:00:22.820
Let's take a look inside.

00:00:22.820 --> 00:00:25.790
The big theme for this release
is Cupertino and making

00:00:25.790 --> 00:00:28.850
sure devs using Flutter can
create apps that iOS users feel

00:00:28.850 --> 00:00:29.779
right at home with.

00:00:29.779 --> 00:00:31.820
That's something the team
has put a lot of effort

00:00:31.820 --> 00:00:33.861
into recently, and there's
a bunch of new widgets

00:00:33.861 --> 00:00:35.270
to show for it.

00:00:35.270 --> 00:00:38.270
CupertinoApp, for example,
is similar to the MaterialApp

00:00:38.270 --> 00:00:40.580
widget you may already
be familiar with.

00:00:40.580 --> 00:00:42.980
It doesn't include any code
for the material package,

00:00:42.980 --> 00:00:45.800
and it still provides text
direction, a HeroController,

00:00:45.800 --> 00:00:48.170
a navigator, and
all those other root

00:00:48.170 --> 00:00:49.880
of your app sort of widgets.

00:00:49.880 --> 00:00:52.280
If you're going for a
pure Cupertino experience,

00:00:52.280 --> 00:00:54.480
this is the way to get started.

00:00:54.480 --> 00:00:56.840
There's also
CupertinoActionSheet-- an alert

00:00:56.840 --> 00:00:59.570
that presents the user with
a set of two or more choices

00:00:59.570 --> 00:01:01.610
related to the current context.

00:01:01.610 --> 00:01:03.971
You can use actions to
define the choices presented

00:01:03.971 --> 00:01:05.720
and the event handlers
that get fired when

00:01:05.720 --> 00:01:07.760
a user makes their selection.

00:01:07.760 --> 00:01:10.190
And I don't want to forget
CupertinoSegmentedControl,

00:01:10.190 --> 00:01:13.070
either, which presents a row
of choices from which users

00:01:13.070 --> 00:01:14.360
can select a value.

00:01:14.360 --> 00:01:17.240
You just define the choices,
and since this is Flutter,

00:01:17.240 --> 00:01:19.930
provide the widgets
that it displays.

00:01:19.930 --> 00:01:23.030
Release Preview 2 contains more
than just Cupertino, though--

00:01:23.030 --> 00:01:26.030
like support for background
execution of dark code.

00:01:26.030 --> 00:01:28.940
If your app has some code
that's an execute on a schedule

00:01:28.940 --> 00:01:32.090
or in response to location
changes, making that happen

00:01:32.090 --> 00:01:33.279
is now a lot easier.

00:01:33.279 --> 00:01:34.820
One of the engineers
on the team even

00:01:34.820 --> 00:01:37.370
created a Flutter app that
automatically opens his garage

00:01:37.370 --> 00:01:40.100
door when he rolls
home on his bicycle.

00:01:40.100 --> 00:01:41.710
There are other
new widgets, too.

00:01:41.710 --> 00:01:43.910
InheritedModel, for
instance, works a lot

00:01:43.910 --> 00:01:45.710
like InheritedWidget
but allows you

00:01:45.710 --> 00:01:49.160
to specify a particular
aspect of the inherited data

00:01:49.160 --> 00:01:51.410
that your descendant
widget depends on.

00:01:51.410 --> 00:01:53.600
That way, the descendant
is only rebuilt

00:01:53.600 --> 00:01:55.310
when that particular
property or group

00:01:55.310 --> 00:01:59.715
of properties changes, and fewer
rebuilds equals a faster app.

00:01:59.715 --> 00:02:01.340
Speaking of performance,
there are also

00:02:01.340 --> 00:02:04.160
a number of under-the-hood
tweaks included in Preview 2

00:02:04.160 --> 00:02:06.560
that will help keep your
apps running smooth.

00:02:06.560 --> 00:02:08.270
For example, the
Flutter engine was

00:02:08.270 --> 00:02:11.210
updated to make clipping a
widget's children opt-in,

00:02:11.210 --> 00:02:13.520
rather than on by
default. That eliminated

00:02:13.520 --> 00:02:15.820
a whole bunch of work for
the compositing system

00:02:15.820 --> 00:02:17.930
and improved some of
our on-device benchmarks

00:02:17.930 --> 00:02:20.634
by anywhere from 30% to 100%.

00:02:20.634 --> 00:02:22.550
Now, you can see how
much smoother the new one

00:02:22.550 --> 00:02:24.650
on the right is.

00:02:24.650 --> 00:02:26.630
Flutter's impact on
your final app size

00:02:26.630 --> 00:02:27.590
has also been improved.

00:02:27.590 --> 00:02:31.430
A simple app built for Android
dropped about 2 megs in size

00:02:31.430 --> 00:02:33.597
to just over 4.7 megabytes.

00:02:33.597 --> 00:02:35.055
And because most
of that difference

00:02:35.055 --> 00:02:37.770
is in Flutter's core
multi-platform code,

00:02:37.770 --> 00:02:40.370
iOS has seen similar gains.

00:02:40.370 --> 00:02:43.550
All right, that's about
it for Release Preview 2.

00:02:43.550 --> 00:02:46.010
If you're already using
Flutter, run flutter upgrade

00:02:46.010 --> 00:02:48.590
on the command line or through
your IDE plugin of choice

00:02:48.590 --> 00:02:50.000
to get the latest code.

00:02:50.000 --> 00:02:51.950
And if you haven't yet
given Flutter a try,

00:02:51.950 --> 00:02:54.200
just head to flutter.io
to get started.

00:02:54.200 --> 00:02:57.550
[MUSIC PLAYING]

