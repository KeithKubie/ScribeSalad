WEBVTT
Kind: captions
Language: en

00:00:01.510 --> 00:00:03.902
Hi, and
welcome to another session of webcasts.

00:00:03.902 --> 00:00:04.580
I'm.

00:00:04.580 --> 00:00:05.840
&gt;&gt; I'm John.

00:00:05.840 --> 00:00:09.100
&gt;&gt; And today,
John is going to help us set up Grunt.

00:00:09.100 --> 00:00:13.660
&gt;&gt; Yeah, so for those of you who don't
really know what Grunt is, it's a task

00:00:13.660 --> 00:00:17.530
runner build tool that does like all
this super awesome stuff for us.

00:00:17.530 --> 00:00:22.280
And it's going to really make your
workflow just that much faster.

00:00:22.280 --> 00:00:25.070
It kind of takes care
of all the grunt work.

00:00:25.070 --> 00:00:26.388
Pun totally intended.

00:00:26.388 --> 00:00:29.850
&gt;&gt; [LAUGH]
&gt;&gt; It takes care of all the mundane

00:00:29.850 --> 00:00:33.310
form things that you have to do when
you're developing front-end code but

00:00:33.310 --> 00:00:35.810
don't really want to
spend all the time doing.

00:00:35.810 --> 00:00:38.610
So things like minifying your files,
right?

00:00:38.610 --> 00:00:43.450
File size is a big, big problem
in web design, and you want to

00:00:43.450 --> 00:00:46.965
get rid of all that white space and
just make it as small as possible.

00:00:46.965 --> 00:00:48.882
Grunt will handle that for you.

00:00:48.882 --> 00:00:53.060
It'll handle compiling any
sort of special code you use.

00:00:53.060 --> 00:00:58.360
So if you use any sort of CSS
pre-processors like STASH or

00:00:58.360 --> 00:01:01.440
Stylus or if you use any sort of

00:01:01.440 --> 00:01:05.480
compiled JavaScript language like
Coffee Script or TypeScript.

00:01:05.480 --> 00:01:09.381
It will handle all
the compilation of those.

00:01:09.381 --> 00:01:12.171
It will also concat your
JavaScript files together so

00:01:12.171 --> 00:01:15.776
users don't have to request a bunch
of JavaScript files all at once.

00:01:15.776 --> 00:01:16.589
They can just.

00:01:16.589 --> 00:01:18.470
&gt;&gt; So it helps with optimizations too.

00:01:18.470 --> 00:01:19.594
Yes, optimizations too.

00:01:19.594 --> 00:01:22.911
It'll optimize for you.

00:01:22.911 --> 00:01:25.778
You can even set up your
Git workflow with it.

00:01:25.778 --> 00:01:30.358
So you can link it up to GitHub,
add some Git commands into it.

00:01:30.358 --> 00:01:34.655
And then you can just type in
Grunt Git and it'll log in,

00:01:34.655 --> 00:01:37.136
push changes, merge changes.

00:01:37.136 --> 00:01:42.113
So basically, if you find yourself doing
a repetitive task over and over agian in

00:01:42.113 --> 00:01:46.739
your front end development, you could
probably get Grunt to do it for you.

00:01:46.739 --> 00:01:51.037
&gt;&gt; Okay, sorry,
I feel like there's a lag.

00:01:51.037 --> 00:01:52.680
&gt;&gt; There might be a little bit of a lag.

00:01:52.680 --> 00:01:55.770
We'll see if that comes up.

00:01:55.770 --> 00:02:00.270
But yeah, so that's kind of
the cool thing about Grunt.

00:02:00.270 --> 00:02:04.690
It just let's you really focus in on
what's the most important part and

00:02:04.690 --> 00:02:07.400
what you should really be focusing on,
which is your coding.

00:02:07.400 --> 00:02:15.400
And then you get to avoid all the boring
stuff that you don't really want to do.

00:02:15.400 --> 00:02:17.970
But there is a bit of
a learning curve to Grunt and

00:02:17.970 --> 00:02:20.760
I think a lot of people
struggle with this at first.

00:02:20.760 --> 00:02:23.600
It's actually a really simple
tool once you get it set up and

00:02:23.600 --> 00:02:25.676
once you start playing around with.

00:02:25.676 --> 00:02:29.970
And so I'm going to pretty much spend
probably the next 30 to 40 minutes

00:02:31.510 --> 00:02:34.080
going over how to install
Grunt on your system.

00:02:34.080 --> 00:02:37.240
How to set up a basic Grunt file and

00:02:37.240 --> 00:02:40.890
some other little cool things
you can do with Grunt.

00:02:40.890 --> 00:02:44.979
&gt;&gt; And then Grunt will come in handy
if our student [INAUDIBLE] for

00:02:44.979 --> 00:02:46.450
project four.

00:02:46.450 --> 00:02:48.079
&gt;&gt; Yeah, yeah.
&gt;&gt; [INAUDIBLE] to the website

00:02:48.079 --> 00:02:51.570
[INAUDIBLE] optimization n projects and
also [INAUDIBLE] project.

00:02:51.570 --> 00:02:56.001
&gt;&gt; Yeah, and I mean it's pretty much
is a fairly standard tool, Grunt, or

00:02:56.001 --> 00:02:57.970
the other popular one is Gulp.

00:02:57.970 --> 00:02:59.285
Yeah.

00:02:59.285 --> 00:03:03.935
&gt;&gt; You like that one better don't you?

00:03:03.935 --> 00:03:05.168
Yeah.

00:03:05.168 --> 00:03:08.830
And I won't dive into all
the reasons why I love Gulp better.

00:03:08.830 --> 00:03:12.560
Grunt is still is a very,
very popular task runner.

00:03:12.560 --> 00:03:15.460
It's, in fact,
more popular than Gulp still,

00:03:15.460 --> 00:03:20.550
and it's really easy to use.

00:03:20.550 --> 00:03:23.000
So how about we switch
over to my screen.

00:03:24.420 --> 00:03:25.050
&gt;&gt; Good.
&gt;&gt; And

00:03:25.050 --> 00:03:29.985
we'll start talking a little
bit about how to use Grunt.

00:03:29.985 --> 00:03:32.340
&gt;&gt; Let's start with the wallpaper.

00:03:32.340 --> 00:03:35.300
&gt;&gt; Yes that awesome wallpaper is
very motivational [INAUDIBLE].

00:03:35.300 --> 00:03:39.274
It's sucking at something is the first
step at being sort of good at something.

00:03:39.274 --> 00:03:42.900
I think that is really
how I feel about Grunt.

00:03:42.900 --> 00:03:44.780
I totally sucked at Grunt at first.

00:03:44.780 --> 00:03:46.030
I used it for one thing,

00:03:46.030 --> 00:03:49.340
I couldn't even get it it set up
the first time I ever used it.

00:03:49.340 --> 00:03:52.390
And then the more I started using it,
the better and better I got at it, and

00:03:52.390 --> 00:03:55.750
the more useful of a tool it became.

00:03:55.750 --> 00:03:58.340
&gt;&gt; So there's something to
let you all know is that we

00:03:58.340 --> 00:04:02.650
posted the Github repo that
John is going to work off of.

00:04:02.650 --> 00:04:03.930
&gt;&gt; Yeah, so

00:04:03.930 --> 00:04:09.040
in the front end broadcast section of
the discussion forum about this event.

00:04:09.040 --> 00:04:13.350
I included a, if you scroll down
a little bit, a post there.

00:04:13.350 --> 00:04:15.800
And I don't know why it's opening twice.

00:04:15.800 --> 00:04:17.362
[LAUGH]
&gt;&gt; [LAUGH]

00:04:17.362 --> 00:04:19.745
&gt;&gt; There is a Grunt workflow guide and

00:04:19.745 --> 00:04:24.261
so you can go ahead and clone this,
download it as a zip, fork it,

00:04:24.261 --> 00:04:26.230
whatever you want to do.

00:04:26.230 --> 00:04:29.310
This is going to be the repository
that I'm working through today.

00:04:30.340 --> 00:04:31.890
And.
&gt;&gt; And the link is also posted in

00:04:31.890 --> 00:04:33.160
the description section [INAUDIBLE].

00:04:33.160 --> 00:04:35.380
&gt;&gt; Yes, yes.

00:04:35.380 --> 00:04:38.170
And so, in particular, the thing you're

00:04:38.170 --> 00:04:41.220
probably going to want to look at is the
commits I'm going to be going through.

00:04:42.750 --> 00:04:46.170
So each of the commits is
a different step in what we're

00:04:46.170 --> 00:04:47.530
going to be doing today.

00:04:47.530 --> 00:04:50.400
And the first commit
is the start commit.

00:04:50.400 --> 00:04:54.910
And if you want your project
just start at this commit,

00:04:54.910 --> 00:04:57.567
I should have done this before.

00:04:59.806 --> 00:05:03.700
&gt;&gt; John, you have a student that
has the same wall paper as you.

00:05:03.700 --> 00:05:04.370
&gt;&gt; Awesome.

00:05:04.370 --> 00:05:05.220
I love it.

00:05:05.220 --> 00:05:10.130
&gt;&gt; I apologize if Tron,
I'm not sure how to pronounce.

00:05:10.130 --> 00:05:10.750
&gt;&gt; Khan.
Comtron.

00:05:10.750 --> 00:05:11.710
&gt;&gt; Comtron?

00:05:11.710 --> 00:05:12.280
&gt;&gt; Yep.

00:05:12.280 --> 00:05:13.325
I love this wallpaper.

00:05:13.325 --> 00:05:14.120
&gt;&gt; [LAUGH]
&gt;&gt; So

00:05:14.120 --> 00:05:19.030
if you want to start at the beginning
as well after you clone this repo

00:05:20.410 --> 00:05:23.040
or you download it as a zip or whatever.

00:05:23.040 --> 00:05:27.220
If you do, git actually let's
make this a little bit easier.

00:05:28.900 --> 00:05:31.560
If you go to
the Grunt Workflow Guide on here and

00:05:31.560 --> 00:05:35.880
just hit this little commits thing,
then go to the very first commit here.

00:05:35.880 --> 00:05:37.390
I'm just making this
as easy as possible.

00:05:37.390 --> 00:05:41.330
You can do it all from the command line,
using like GitLog, or GitGrapgh, and

00:05:41.330 --> 00:05:42.110
things like that.

00:05:42.110 --> 00:05:46.410
But you just copy this comment
number in the top right and

00:05:46.410 --> 00:05:50.270
you get check out, and
then comment number.

00:05:50.270 --> 00:05:54.980
And then that will get us are a lot of
give us just all the base stub files.

00:05:54.980 --> 00:06:02.680
So this pretty much just has my source
directory, which has JS and SASS folder.

00:06:02.680 --> 00:06:05.340
And in my JS folder
there's just two little

00:06:05.340 --> 00:06:08.550
JavaScript files that probably
don't do anything fun, and

00:06:08.550 --> 00:06:14.540
one little SASS file that just
has one little style in it.

00:06:14.540 --> 00:06:17.590
I kept things simple, so
we're not doing a whole lot, but

00:06:17.590 --> 00:06:23.130
it's easy to just expand these
ideas to the bigger topic.

00:06:23.130 --> 00:06:27.640
So let's take a look then at how
do we actually install Grunt.

00:06:28.650 --> 00:06:31.545
So the first thing we actually need
to do is we actually need to install

00:06:31.545 --> 00:06:33.330
Node.js.

00:06:33.330 --> 00:06:38.400
So Node.js is a fancy
asynchronous IO language that

00:06:39.980 --> 00:06:42.130
some very, very smart people wrote.

00:06:42.130 --> 00:06:44.850
It basically does
a whole bunch of stuff.

00:06:44.850 --> 00:06:46.650
I'm not going to go
into all the details.

00:06:46.650 --> 00:06:48.370
It's pretty simple to install.

00:06:48.370 --> 00:06:49.680
You just click the Install.

00:06:49.680 --> 00:06:52.300
It's going to download
something on your computer.

00:06:52.300 --> 00:06:57.790
And then you just run the, will install
it and it sets itself up pretty well.

00:06:57.790 --> 00:07:00.730
&gt;&gt; And it's pretty okay on both-
&gt;&gt; Yeah.

00:07:00.730 --> 00:07:01.740
&gt;&gt; Macs and Windows?

00:07:01.740 --> 00:07:07.220
&gt;&gt; So on Mac, it will basically install
itself right into your user bin folder.

00:07:07.220 --> 00:07:10.390
So, you can run it right from
the terminal usually from the get-go.

00:07:10.390 --> 00:07:15.890
So from here if I type, node which npm,
it tells me which npm I'm using.

00:07:15.890 --> 00:07:21.192
On Windows I believe it
installs a Node shell client,

00:07:21.192 --> 00:07:23.870
Node PowerShell.

00:07:23.870 --> 00:07:28.410
And from there you basically
just open up that Bash or GUI,

00:07:28.410 --> 00:07:30.600
whatever they call it.

00:07:30.600 --> 00:07:32.500
Been a while since I've
taken a look at it.

00:07:32.500 --> 00:07:36.190
But you basically just do all
your Node work from there.

00:07:36.190 --> 00:07:38.110
It's just like having a terminal.

00:07:38.110 --> 00:07:40.240
Most of the commands are the same.

00:07:40.240 --> 00:07:42.820
And yeah, so
that's the first thing you need.

00:07:42.820 --> 00:07:43.870
The first thing you need is Node.

00:07:45.320 --> 00:07:50.636
The next thing is, I would always say
take a look at the Grunt website.

00:07:50.636 --> 00:07:55.633
They have a great follow along,
getting started guide.

00:07:55.633 --> 00:07:58.384
But, it maybe doesn't
explain a lot of things.

00:07:58.384 --> 00:08:01.727
The most important thing though that
you need to do is you need to install

00:08:01.727 --> 00:08:03.650
the command line interface.

00:08:03.650 --> 00:08:05.410
And you do that pretty simply.

00:08:05.410 --> 00:08:09.830
After you install Node, you'll have
access to the Node package manager.

00:08:09.830 --> 00:08:10.580
&gt;&gt; Sorry to interrupt.

00:08:10.580 --> 00:08:13.600
But, this is just grunt.js.com?

00:08:13.600 --> 00:08:14.500
&gt;&gt; Yes, yes.

00:08:14.500 --> 00:08:16.080
&gt;&gt; So, if you want to open that.

00:08:17.530 --> 00:08:21.220
&gt;&gt; And so you want to do npm install,

00:08:21.220 --> 00:08:25.430
and then you can choose to
not install it globally.

00:08:25.430 --> 00:08:31.080
So this command here, this -g is going
to install this globally on my system.

00:08:32.100 --> 00:08:37.179
And, then you just type in grunt-cli,
and so, npm is the Node package manager.

00:08:37.179 --> 00:08:41.308
It's going to handle getting
all the files that you need,

00:08:41.308 --> 00:08:43.760
installing them to
the proper directories.

00:08:43.760 --> 00:08:46.600
And if you guys do you run
into any trouble at this step,

00:08:46.600 --> 00:08:50.660
for whatever reason,
like it says npm isn't defined or

00:08:50.660 --> 00:08:55.180
you're getting any kind of errors,
feel free to post in the forums.

00:08:55.180 --> 00:08:59.090
I'll be happy to help sort
of debug what's going on.

00:08:59.090 --> 00:09:01.740
It's a little hard to
do over video chat,

00:09:01.740 --> 00:09:05.922
just because it's kind of different for
every user.

00:09:05.922 --> 00:09:11.230
Sometimes your npm doesn't get installed
correctly or it does get installed,

00:09:11.230 --> 00:09:16.400
but the system variables aren't
set correctly on your environment.

00:09:16.400 --> 00:09:17.550
So then you just run this,

00:09:17.550 --> 00:09:19.450
I'm not going to do it,
because I already have it installed.

00:09:21.650 --> 00:09:26.145
And then, you'll have grunt,
or the grunt CLI.

00:09:26.145 --> 00:09:32.811
So now the first thing we want to do,
I can actually go back to my notes here,

00:09:32.811 --> 00:09:36.800
is, in our folder we want to run npm and
init.

00:09:36.800 --> 00:09:38.645
I'm going to make this a little bigger.

00:09:38.645 --> 00:09:43.565
So all the files or
all the plugins we're going to be using

00:09:43.565 --> 00:09:47.635
with Grunt are actually installed
through the Node package manager and

00:09:47.635 --> 00:09:49.095
they're all Node.js modules.

00:09:50.290 --> 00:09:54.749
So the first thing we want to do
is we want to create what's called

00:09:54.749 --> 00:10:00.171
package.JSON file, which Node basically
uses to track our tendencies.

00:10:00.171 --> 00:10:03.140
It's pretty straightforward
if you use npm init.

00:10:03.140 --> 00:10:06.026
It just kind of takes you through
this little walk-through guide.

00:10:06.026 --> 00:10:07.250
I'm going to name it that,

00:10:07.250 --> 00:10:12.280
give it that version,
my grunt demo is my description.

00:10:12.280 --> 00:10:16.660
You probably don't need to define
an entry point or test commands.

00:10:16.660 --> 00:10:18.960
That's the git repository.

00:10:18.960 --> 00:10:20.340
You can give it some keywords.

00:10:20.340 --> 00:10:24.168
You can find out what all of
these mean just by Googling npm

00:10:24.168 --> 00:10:28.880
init walkthrough or
tutorial or whatever.

00:10:28.880 --> 00:10:32.790
And you can find a little bit more
details about what all of these are on

00:10:32.790 --> 00:10:33.600
the author.

00:10:33.600 --> 00:10:36.420
Sure, let's give it and ISC license and
then it's going to basically give us

00:10:36.420 --> 00:10:41.170
this JSON and
basically a summary in JSON form.

00:10:41.170 --> 00:10:42.940
Just this, does this look good?

00:10:42.940 --> 00:10:46.490
Yeah, sure that looks good and
now, if we take a look,

00:10:46.490 --> 00:10:49.540
we see we have a package.json
file in our directory.

00:10:51.840 --> 00:10:56.710
So basically what that allows us to do
is if we share this, if I put this up on

00:10:56.710 --> 00:11:03.030
GitHub as a package.json and a user
just downloads it or clones the repo.

00:11:03.030 --> 00:11:08.008
And just types in npm install, it'll
just install all of the dependencies

00:11:08.008 --> 00:11:12.125
you need to use for
that project from the package.json file.

00:11:12.125 --> 00:11:13.910
Looks like we had a question here.

00:11:15.270 --> 00:11:19.896
&gt;&gt; So Robert was asking,
could you explain why we might

00:11:19.896 --> 00:11:23.484
need to write sudo before our commands?

00:11:23.484 --> 00:11:28.170
&gt;&gt; Okay, so sudo is basically
just like a superuser command.

00:11:28.170 --> 00:11:33.060
If you typically, it's if you
don't have administrator access or

00:11:33.060 --> 00:11:37.176
group access, you have to put
sudo before this command,

00:11:37.176 --> 00:11:43.240
because it is installing it right into
the hard drive or writing to the system.

00:11:43.240 --> 00:11:46.430
That's typically when you're
going to have to use sudo.

00:11:46.430 --> 00:11:49.021
If you own the computer,
it's probably not a problem.

00:11:49.021 --> 00:11:53.758
But if you're using a work computer and
there are certain things that are locked

00:11:53.758 --> 00:11:58.141
off and you can't install specific
software, you might have to go to your

00:11:58.141 --> 00:12:02.124
system administrator to give you
access to install these things.

00:12:02.124 --> 00:12:07.080
Typically they're pretty lax about
installing software like this,

00:12:07.080 --> 00:12:10.550
especially when you're
a front end developer.

00:12:10.550 --> 00:12:13.278
Typically why you have to use sudo
commands is just because you might not

00:12:13.278 --> 00:12:14.508
have administrator access.

00:12:14.508 --> 00:12:15.869
&gt;&gt; So that's basically [INAUDIBLE].

00:12:17.470 --> 00:12:20.420
&gt;&gt; Basically it just says I
am the admin, let's do this.

00:12:20.420 --> 00:12:23.350
And usually you'll have
to type your password in.

00:12:23.350 --> 00:12:26.349
So when you do a sudo command,
it'll just ask for your password.

00:12:26.349 --> 00:12:28.093
&gt;&gt; Okay, thanks Robert.

00:12:28.093 --> 00:12:32.915
&gt;&gt; Cool, so
we have our package.json set up.

00:12:32.915 --> 00:12:35.640
I need to go back here real quick.

00:12:35.640 --> 00:12:38.356
So now to actually install Grunt,

00:12:38.356 --> 00:12:42.579
we're going to do command
npm install --save-dev.

00:12:42.579 --> 00:12:47.638
And so the save dev thing is
basically this command is going to

00:12:47.638 --> 00:12:54.660
save this dependency to our package.json
on as a developer dependency.

00:12:54.660 --> 00:12:57.560
And so developer dependencies
are just anything that

00:12:57.560 --> 00:13:00.530
your website doesn't
necessarily need to run,

00:13:00.530 --> 00:13:04.000
but you as a developer are going to
use to develop your website.

00:13:04.000 --> 00:13:05.686
And grunt is one of those things, right,

00:13:05.686 --> 00:13:08.280
it's not a dependency that
our clients need to use.

00:13:08.280 --> 00:13:12.192
It's really only a dependency if
we're using it to to run Grunt.

00:13:12.192 --> 00:13:14.630
So I'm going to type in this command.

00:13:14.630 --> 00:13:18.340
It's going to give me a little
warning that there's no data.

00:13:18.340 --> 00:13:20.800
And then it's going to
install a bunch of stuff.

00:13:20.800 --> 00:13:24.980
If I take a look inside,
I now have a node_modules folder.

00:13:24.980 --> 00:13:29.670
And inside that node modules
folder is the Grunt Node module.

00:13:29.670 --> 00:13:32.610
All right, so we have Grunt.

00:13:32.610 --> 00:13:36.760
It can't really do anything exciting yet
because we need a Grunt file.

00:13:37.880 --> 00:13:43.340
So I'm just going to make a Grunt file
here, and it's a JavaScript file.

00:13:44.430 --> 00:13:47.740
And let's actually open up
our project in Sublime.

00:13:49.220 --> 00:13:52.630
Hopefully that is big enough for
everybody to see.

00:13:52.630 --> 00:13:55.678
I don't know if I can make my gutter,
my sidebar any bigger.

00:13:55.678 --> 00:13:57.060
&gt;&gt; No.

00:13:57.060 --> 00:13:58.350
&gt;&gt; But that's okay.

00:13:58.350 --> 00:14:03.130
So we have this Grunt file now and
there's absolutely nothing in it.

00:14:03.130 --> 00:14:05.792
And we also have, right, our JS file,

00:14:05.792 --> 00:14:09.230
we have two JavaScript scripts and
our SASS file.

00:14:09.230 --> 00:14:10.021
&gt;&gt; That's why I like this group.

00:14:10.021 --> 00:14:14.334
&gt;&gt; Yes, very advanced JavaScript
going on right here and

00:14:14.334 --> 00:14:17.250
a very advanced style going on here.

00:14:17.250 --> 00:14:20.050
This is actually a SSS file.

00:14:20.050 --> 00:14:24.967
This is sort of pre-processed CSS
which which we're going to use Grunts

00:14:24.967 --> 00:14:27.720
to convert into usable CSS.

00:14:27.720 --> 00:14:33.003
If you want to learn a lot more about
SASS, feel free to do so on your own,

00:14:33.003 --> 00:14:38.123
I'll probably post a post on
the forums detailing how to go to SASS.

00:14:38.123 --> 00:14:40.190
It's a really, really great language,
but I have to say, learn CSS first.

00:14:43.240 --> 00:14:47.399
So, scroll down my
notes here real quick.

00:14:48.480 --> 00:14:54.030
So the first thing we probably
want to do is we want to compile,

00:14:54.030 --> 00:14:55.920
like I said, our SASS and the CSS.

00:14:57.130 --> 00:14:59.230
That's going to be a great first step.

00:14:59.230 --> 00:15:02.740
And in order to do that, we're going to
have to install a Grunt plugin.

00:15:02.740 --> 00:15:05.210
So Grunt is all about plugins really.

00:15:05.210 --> 00:15:09.760
I mean you can do a lot of the stuff
in Grunt without using any plugins, but

00:15:09.760 --> 00:15:12.710
people have already written a lot
of code that do a lot of these

00:15:12.710 --> 00:15:13.410
things we want to do.

00:15:13.410 --> 00:15:16.250
And it's just easier utilizing plugins.

00:15:16.250 --> 00:15:20.720
So we go to the Gruntjs.com page and
go to their plugin section.

00:15:20.720 --> 00:15:23.860
You can search through all
the plugins that they have.

00:15:23.860 --> 00:15:28.307
And any of the ones with a star next
to them are built by the Grunt team.

00:15:28.307 --> 00:15:33.626
And they're typically fully tested,
they work, they're always up to date.

00:15:33.626 --> 00:15:36.180
And then any one that doesn't
have a star next to it

00:15:36.180 --> 00:15:37.520
is made by somebody else.

00:15:39.220 --> 00:15:41.410
But there's also some really,
really good ones.

00:15:41.410 --> 00:15:45.085
I really like the svgmin one,
I mean, for

00:15:45.085 --> 00:15:48.977
people who like using
SVG it's fantastic.

00:15:48.977 --> 00:15:53.476
As you can see, I mean,
there's Grunt plugins for everything.

00:15:53.476 --> 00:15:54.573
&gt;&gt; A lot of Grunting.

00:15:54.573 --> 00:15:57.978
&gt;&gt; There's a total of
4,403 different plugins.

00:15:57.978 --> 00:15:59.113
&gt;&gt; Wow.

00:15:59.113 --> 00:16:02.787
Yeah, and they do everything,
from watching for

00:16:02.787 --> 00:16:07.520
changes, to manipulating code,
to to accounting.

00:16:07.520 --> 00:16:09.770
And we're going to do
some of that today.

00:16:09.770 --> 00:16:16.010
So, the one we're going to want is
the Grunt Sass, what did I call it?

00:16:16.010 --> 00:16:19.970
Yeah, Grunt Sets.

00:16:19.970 --> 00:16:21.880
How, matching records.

00:16:21.880 --> 00:16:23.190
Let's try sas, there we go.

00:16:23.190 --> 00:16:24.450
&gt;&gt; Yep.
&gt;&gt; [LAUGH]

00:16:24.450 --> 00:16:25.400
&gt;&gt; Yeah, here we go.

00:16:26.880 --> 00:16:28.220
So, we're going to use this one.

00:16:28.220 --> 00:16:32.868
It's not built by the grunt team,
but I like it a little bit more.

00:16:32.868 --> 00:16:39.720
[LAUGH] And so it takes us to NPM,
the Node Package Manager website.

00:16:39.720 --> 00:16:41.800
And it gives us a little direction
here on how to install it.

00:16:41.800 --> 00:16:46.220
And also a few directions
on how to use it.

00:16:46.220 --> 00:16:50.130
So, in order to install it,
we got to go back to our terminal.

00:16:50.130 --> 00:16:56.471
And we run the command npm
install --save-dev grunt-sass.

00:16:56.471 --> 00:16:57.296
Great.

00:16:57.296 --> 00:16:57.957
Okay.

00:16:57.957 --> 00:17:02.952
So, again, this is going to save it to
our so when someone else picks up our

00:17:02.952 --> 00:17:08.040
package.json, they'll be able to
install all of our project as well.

00:17:09.140 --> 00:17:11.160
And we'll let that magic happen.

00:17:13.930 --> 00:17:15.010
A little slow.

00:17:15.010 --> 00:17:20.520
All right, and it's installing.

00:17:20.520 --> 00:17:21.700
This might take like a minute.

00:17:21.700 --> 00:17:23.579
All right.

00:17:23.579 --> 00:17:25.857
Cool.
We're all installed, we're set up and

00:17:25.857 --> 00:17:28.830
we're ready to start using Grunt's app.

00:17:28.830 --> 00:17:30.960
So, let's go back to
use of the blind text.

00:17:30.960 --> 00:17:33.190
Also, actually,
I'm going to make this full screen.

00:17:34.350 --> 00:17:39.110
And let's start with how do we
actually start the grunt file.

00:17:39.110 --> 00:17:41.890
So, it's obviously a blank slate.

00:17:41.890 --> 00:17:46.620
So, the first thing we're going to
do is we need to actually load our

00:17:46.620 --> 00:17:47.840
grunt module.

00:17:47.840 --> 00:17:53.640
And so the first thing we need
to create basically file mapper.

00:17:53.640 --> 00:17:54.310
And so

00:17:54.310 --> 00:17:58.020
this is pretty much what you're going to
start every Grunt file you create with.

00:17:59.340 --> 00:18:03.320
And this basically just imports Grunt
to make it useable in your file.

00:18:03.320 --> 00:18:05.200
This is just basically saying I

00:18:06.410 --> 00:18:11.360
may use this [INAUDIBLE] All right,
so that's pretty straightforward.

00:18:11.360 --> 00:18:13.080
That's the group wrapper.

00:18:13.080 --> 00:18:15.330
Pretty much like this, and
like I said, he wrote probably right,

00:18:15.330 --> 00:18:17.520
it's probably going to start with this.

00:18:17.520 --> 00:18:21.070
The next thing we need to do is we
actually need to load our plug in.

00:18:21.070 --> 00:18:27.966
So, to do that, we use the command
front, load and then tasks.

00:18:27.966 --> 00:18:31.862
And then grunt-sass.

00:18:31.862 --> 00:18:36.106
So, that's going to load our new node
module which is in our node module

00:18:36.106 --> 00:18:37.880
folder here on SAS.

00:18:37.880 --> 00:18:40.320
And now we can use this in our project.

00:18:42.700 --> 00:18:45.190
So, now we need to actually
configure our task.

00:18:45.190 --> 00:18:46.510
So we've loaded it.

00:18:46.510 --> 00:18:48.860
Now we need to actually
give it some directions.

00:18:48.860 --> 00:18:51.470
So we're going to do grunt.initConfig.

00:18:51.470 --> 00:18:55.838
And this defines the initial
configuration for this grunt task.

00:18:58.601 --> 00:19:01.796
So if we look back at the guide here,

00:19:01.796 --> 00:19:07.700
it gives us a little directions
on how to define things.

00:19:07.700 --> 00:19:10.300
So, we're basically just call sass.

00:19:10.300 --> 00:19:11.520
We define the sass method.

00:19:11.520 --> 00:19:15.420
And then we define our files
that we want to read from.

00:19:16.530 --> 00:19:21.300
So, in this case we're going to
make our sass configuration.

00:19:22.626 --> 00:19:26.270
We're going to say, this is
the directories we want to look in and

00:19:27.730 --> 00:19:35.840
then we have our source directory,
which will be src/sass/style.scss and

00:19:37.100 --> 00:19:44.624
the output destination is going to
be our dist/ css/style.css.

00:19:44.624 --> 00:19:49.250
&gt;&gt; So,
you have to have this folder ready?

00:19:51.130 --> 00:19:53.870
&gt;&gt; Sorry, the destination folder
doesn't need to be there.

00:19:53.870 --> 00:19:55.480
So we can see that-
&gt;&gt; It will make it for you.

00:19:55.480 --> 00:20:02.260
&gt;&gt; Yeah, it will automatically
make this dist/css/style.css

00:20:02.260 --> 00:20:03.390
&gt;&gt; File it for me.

00:20:04.390 --> 00:20:06.250
All right, so now we're configured.

00:20:06.250 --> 00:20:07.690
And now there's only one more step.

00:20:07.690 --> 00:20:09.650
We actually need to register the task.

00:20:09.650 --> 00:20:13.041
So to register the task,
what we're going to do is,

00:20:13.041 --> 00:20:16.223
we're going to say, grunt.register.task.

00:20:16.223 --> 00:20:20.669
And we're going to call
this our default task.

00:20:21.700 --> 00:20:24.710
And our default task is going to take,

00:20:24.710 --> 00:20:26.760
it takes two parameters
this task method.

00:20:26.760 --> 00:20:29.720
It takes the name,
which we're calling default.

00:20:29.720 --> 00:20:33.010
And then it takes either a list or
a function.

00:20:33.010 --> 00:20:35.100
In this case,
I'm going to pass it a list.

00:20:35.100 --> 00:20:39.385
And in my list or array,
whatever you want to call it,

00:20:39.385 --> 00:20:42.890
I'm going give it the name Sas.

00:20:42.890 --> 00:20:44.930
And this is basically just saying.

00:20:44.930 --> 00:20:45.540
Call this.

00:20:45.540 --> 00:20:47.290
Call this growth configuration.

00:20:47.290 --> 00:20:52.010
So it's going to all-
&gt;&gt; Your just surpass

00:20:52.010 --> 00:20:52.920
&gt;&gt; Where is the task?

00:20:52.920 --> 00:20:54.100
There you go.

00:20:54.100 --> 00:20:56.815
Thank you for judging my type letters.

00:20:56.815 --> 00:20:57.460
&gt;&gt; [LAUGH]
&gt;&gt; So,

00:20:57.460 --> 00:21:02.620
this is basically just saying go and
execute this task, which is

00:21:02.620 --> 00:21:08.630
basically going to load this grunt
sas task, and it's going to run it.

00:21:08.630 --> 00:21:09.990
So, let's see how we run this.

00:21:09.990 --> 00:21:15.020
So, we go back to our terminal and
all we've got to do is just say, grunt.

00:21:16.740 --> 00:21:17.880
Woo.
All right,

00:21:17.880 --> 00:21:22.130
running SAS disc SAS task,
done without errors.

00:21:22.130 --> 00:21:23.900
&gt;&gt; Okay.
&gt;&gt; All right, So,

00:21:23.900 --> 00:21:24.700
let's see what that did.

00:21:25.790 --> 00:21:30.860
So, we now have a distribution
folder and the CSS folder,

00:21:30.860 --> 00:21:35.330
and some file called about CSS So

00:21:35.330 --> 00:21:45.160
basically insert my SCSS combine it and
basically compile is your CSS.

00:21:45.160 --> 00:21:49.390
So it's really straightforward.

00:21:49.390 --> 00:21:50.780
Pretty simple!

00:21:50.780 --> 00:21:52.100
Let's try it one more thing.

00:21:52.100 --> 00:21:52.680
So.
So

00:21:52.680 --> 00:21:57.690
let's follow this pattern again, except
now, we're going to do a different task.

00:21:57.690 --> 00:22:01.450
So we're going to concatenate
our two JavaScript files.

00:22:01.450 --> 00:22:06.260
So, we have two JavaScript files, and
I want them to be one JavaScript file so

00:22:06.260 --> 00:22:08.650
our users only have to do one request.

00:22:09.890 --> 00:22:12.230
So, this is a pretty common practice.

00:22:12.230 --> 00:22:13.380
It saves space.

00:22:13.380 --> 00:22:15.610
It saves bandwidth and everything.

00:22:16.960 --> 00:22:17.670
So do this.

00:22:17.670 --> 00:22:21.379
We're going to first
install our plug-in, so

00:22:21.379 --> 00:22:25.196
we're going to say npm
Install --save-dev.

00:22:25.196 --> 00:22:30.514
And the plug-in I'm going to
use is grunt-contrib-concat.

00:22:30.514 --> 00:22:35.650
We're going to run that, and it's going
to take a couple seconds to install.

00:22:35.650 --> 00:22:37.530
Awesome.
It's ready.

00:22:37.530 --> 00:22:39.905
We're going to load or task,

00:22:39.905 --> 00:22:44.780
grunt.loadNpnTasks('grunt-contrib-conca-
t').

00:22:44.780 --> 00:22:48.725
If I could spell.

00:22:48.725 --> 00:22:49.525
&gt;&gt; [LAUGH]
&gt;&gt; And

00:22:49.525 --> 00:22:52.390
then we're going to configure our task.

00:22:52.390 --> 00:22:54.120
So we're going to have a concat task.

00:22:56.290 --> 00:22:59.920
We're going to give it a source folder.

00:23:00.990 --> 00:23:05.170
In this case we're going to give it
our jobs folder and we're going to use

00:23:05.170 --> 00:23:10.540
what's called clobbing so clobbing is
basically using a wild card characters.

00:23:10.540 --> 00:23:11.160
Excuse me.

00:23:11.160 --> 00:23:11.660
&gt;&gt; Astrid.

00:23:12.680 --> 00:23:18.000
To say I want you to look for
any file in my

00:23:18.000 --> 00:23:22.590
JavaScript directory
that ends with a .js.

00:23:22.590 --> 00:23:26.990
&gt;&gt; So it starts just telling it you
want to get all JavaScript types.

00:23:26.990 --> 00:23:27.640
&gt;&gt; Yeah.

00:23:27.640 --> 00:23:32.060
And if you want to know like what
other sort of wildcard characters you

00:23:32.060 --> 00:23:36.870
can use for globin,
you can go through google groups labs.

00:23:36.870 --> 00:23:40.690
It will give you a nice
outline of all the different

00:23:40.690 --> 00:23:42.730
the sort of target specific files.

00:23:42.730 --> 00:23:46.500
They ask for it just has to be the most
common one because usually you just want

00:23:46.500 --> 00:23:47.880
it all of those are all the files.

00:23:47.880 --> 00:23:51.330
You can also get like also
hit like all sub folders.

00:23:51.330 --> 00:23:55.748
I mean, if I had like, Js in the groups
sub folders in my base folder.

00:23:55.748 --> 00:23:57.456
I can do something like this.

00:23:57.456 --> 00:24:01.882
And this'll say our every folder
in my JavaScript folder and

00:24:01.882 --> 00:24:05.715
any file that ends in .js,
I want you to do this too.

00:24:07.090 --> 00:24:10.770
But we don't have any subfolders,
so we're not going to do that.

00:24:10.770 --> 00:24:12.440
And then we're going to
set a destination.

00:24:12.440 --> 00:24:17.025
So we're going to just put this in our
distribution folder, _dist/js/, and

00:24:17.025 --> 00:24:19.112
I don't remember what I called it.

00:24:19.112 --> 00:24:27.000
I think it was,
let's call it app.js for fun.

00:24:27.000 --> 00:24:30.450
And then the last thing is to
remember to register our task.

00:24:30.450 --> 00:24:34.388
There have been plenty of times when
I've gone through all of these steps and

00:24:34.388 --> 00:24:35.686
I forgot to register it.

00:24:35.686 --> 00:24:37.071
And I'm like why isn't it running,

00:24:37.071 --> 00:24:38.980
why isn't running and
I go back a look at my code.

00:24:38.980 --> 00:24:41.020
And I'm like everything looks right.

00:24:41.020 --> 00:24:43.400
And it's all because I simply
didn't register my task.

00:24:43.400 --> 00:24:45.800
So we'll save that.

00:24:45.800 --> 00:24:52.930
We'll go back to our terminal and
we'll type in grunt.

00:24:52.930 --> 00:24:56.100
And we see that it ran our SASS task,

00:24:56.100 --> 00:25:00.091
our concat task and
it finished without errors.

00:25:00.091 --> 00:25:03.459
And if we look back here,
we see we have that distribution folder.

00:25:04.830 --> 00:25:08.090
JS folder and
our distribution folder and an app.js,

00:25:08.090 --> 00:25:10.570
which concatenated
are two JavaScript files.

00:25:11.860 --> 00:25:14.200
So really cool, so
again right that was that one, that one,

00:25:14.200 --> 00:25:16.825
and now they're combined into one.

00:25:16.825 --> 00:25:20.415
Now if you wants to run
a task individually, so

00:25:20.415 --> 00:25:22.459
right now I have this default task.

00:25:22.459 --> 00:25:25.606
And so when I type grunt,
it automatically looks for

00:25:25.606 --> 00:25:29.282
the task named default and
runs whatever is in that.

00:25:29.282 --> 00:25:34.112
But say I just want to run my concat,
I can do grunt concat.

00:25:34.112 --> 00:25:37.962
And that will run, as we can see,
just my concat task.

00:25:37.962 --> 00:25:40.942
And that can be pretty useful when
you have really big Grunt files.

00:25:40.942 --> 00:25:44.990
Or you begin defining a lot of,
like, really complex tasks.

00:25:44.990 --> 00:25:48.850
And Grunt can become slow if you
try running a whole a Grunt file,

00:25:48.850 --> 00:25:51.200
it could take a couple minutes.

00:25:51.200 --> 00:25:54.770
And all you really wanted to
do was compile JavaScript,

00:25:54.770 --> 00:25:58.810
or compile some Coffee Script or
concatenate some JavaScript.

00:25:58.810 --> 00:26:03.664
So usually if you named your tasks
correctly, it's pretty easy to just say

00:26:03.664 --> 00:26:07.610
okay, just run the concat tasker,
just run the style test.

00:26:10.192 --> 00:26:13.030
All right, so
that's the basic setup with Grunt.

00:26:13.030 --> 00:26:17.035
You can pretty much get away
with following this workflow.

00:26:18.430 --> 00:26:22.386
It's pretty useful I think,
if you stick with the work flow but

00:26:22.386 --> 00:26:25.457
it can get really unorganized and
really messy.

00:26:25.457 --> 00:26:32.740
And you may end up with a single
Grunt file that's 10,000 lines long.

00:26:32.740 --> 00:26:36.540
Just because you're going to have to
load these tasks every time, right?

00:26:36.540 --> 00:26:37.964
Every time you install a new plugin,
you've [INAUDIBLE].

00:26:40.620 --> 00:26:44.800
It could get confusing in here,
what each of these is referencing.

00:26:44.800 --> 00:26:46.900
Is this working on my JavaScript?

00:26:46.900 --> 00:26:51.080
Is this working on my styles or
whatever?

00:26:51.080 --> 00:26:53.310
The paths can get confusing.

00:26:53.310 --> 00:26:57.094
Say I need to change a path or
something, or a file name, and

00:26:57.094 --> 00:27:00.447
then I'm referencing it
a hundred times in my file.

00:27:00.447 --> 00:27:06.877
In Sublime it's pretty easy because
I can select multiple lines,

00:27:06.877 --> 00:27:12.080
but it's kind of a pain in
the ass to do it that way.

00:27:12.080 --> 00:27:14.370
So let's modularize this a little bit.

00:27:14.370 --> 00:27:16.670
Let's make this a little
bit easier to use.

00:27:16.670 --> 00:27:20.134
So the first thing, and probably the
most useful thing I suggest everybody

00:27:20.134 --> 00:27:26.040
does, is use a plugin
called load grunt tasks.

00:27:26.040 --> 00:27:31.250
So we're going to say npm install
save-dev because we pretty much always

00:27:31.250 --> 00:27:37.749
have to do this, load-grunt-tasks,
tasks with an S.

00:27:37.749 --> 00:27:40.010
We're going to let that install.

00:27:42.550 --> 00:27:45.610
All right, so
we see these two lines up here.

00:27:45.610 --> 00:27:48.620
I probably don't want to have
to use these every time.

00:27:48.620 --> 00:27:51.220
As I start installing more plugins,
I don't have to keep saying,

00:27:51.220 --> 00:27:53.190
right, load this task.

00:27:53.190 --> 00:27:55.250
Grunt load this task.

00:27:55.250 --> 00:27:57.260
Grunt load this task.

00:27:57.260 --> 00:27:58.780
It's going to get really repetitive and
annoying.

00:28:00.210 --> 00:28:04.405
So with that new plugin,
what we can do is we can simply just say

00:28:04.405 --> 00:28:08.450
require('load-grunt-tasks') and

00:28:12.730 --> 00:28:15.210
give it our grunt object.

00:28:16.210 --> 00:28:20.278
And make sure you put a semicolon or
[INAUDIBLE] going to complain at me.

00:28:20.278 --> 00:28:25.739
[SOUND] So what this is
going to do is this actually

00:28:25.739 --> 00:28:30.524
going to look at our
Node modules folder.

00:28:30.524 --> 00:28:33.013
It's going to look for
our dependencies and

00:28:33.013 --> 00:28:37.190
it's going to import anything that's
work related into this object.

00:28:37.190 --> 00:28:39.880
&gt;&gt; So if we take a look back here,

00:28:42.140 --> 00:28:44.990
you can see that everything
runs fine just like before.

00:28:44.990 --> 00:28:47.840
And now,
anytime we have to install a plugin,

00:28:47.840 --> 00:28:49.110
we don't have to remember to login.

00:28:49.110 --> 00:28:55.663
&gt;&gt; Lovely.
&gt;&gt; So that saves easily, 1, 10, 15, 25.

00:28:55.663 --> 00:29:00.040
There's tons of plugins for that code.

00:29:00.040 --> 00:29:01.440
So that makes it really simple.

00:29:01.440 --> 00:29:05.760
And then, in that way it's
less of a step to remember.

00:29:05.760 --> 00:29:10.390
Just like having to register a task,
it's easy to forget to load a task and

00:29:10.390 --> 00:29:12.320
just like dive right
into the configuration.

00:29:13.920 --> 00:29:16.510
This saves a lot of time, I feel like.

00:29:16.510 --> 00:29:20.532
And I personally like using this
as a Grunt file, when I use Grunt.

00:29:22.360 --> 00:29:26.476
So that's the first thing you
can do is organize the code,

00:29:26.476 --> 00:29:29.330
clean it up a little bit more.

00:29:29.330 --> 00:29:33.316
Additionally what we can do is we can
create a configuration file to handle

00:29:33.316 --> 00:29:34.357
our directories.

00:29:34.357 --> 00:29:38.680
So I mentioned before, right,
if we have a bunch of tasks.

00:29:38.680 --> 00:29:43.610
And they're all referencing style.scss,
and

00:29:43.610 --> 00:29:47.290
maybe I want to change
like specific tasks.

00:29:49.010 --> 00:29:54.000
I probably am going to want to
be able to rename these quickly,

00:29:54.000 --> 00:29:55.005
make it a little easier.

00:29:55.005 --> 00:29:55.840
&gt;&gt; Mm-hm.

00:29:55.840 --> 00:29:59.960
&gt;&gt; It looks like we actually
have a lot of questions?

00:29:59.960 --> 00:30:07.350
&gt;&gt; Let's start with Steven's question,
and Steven asks, this is a make utility?

00:30:07.350 --> 00:30:08.180
&gt;&gt; A little bit.

00:30:08.180 --> 00:30:09.880
It's a little bit like a make utility.

00:30:09.880 --> 00:30:13.612
So make utilities,
if I remember correctly,

00:30:13.612 --> 00:30:18.971
are primarily from C, C++,
C# and they're more for

00:30:18.971 --> 00:30:24.680
compiling the code,
optimizing the code, things like that.

00:30:24.680 --> 00:30:27.390
So it's a little bit like a make tool.

00:30:27.390 --> 00:30:31.700
I think it's a little different though.

00:30:31.700 --> 00:30:34.750
I'm not super,
I haven't played a lot with make files.

00:30:34.750 --> 00:30:35.296
&gt;&gt; Yeah.
&gt;&gt; But

00:30:35.296 --> 00:30:37.322
it's kind of the same thing, yeah.

00:30:37.322 --> 00:30:41.040
&gt;&gt; Okay, thanks, Steven.

00:30:41.040 --> 00:30:42.830
Juan has another question.

00:30:43.890 --> 00:30:48.320
Can you explain when
would concat be useful?

00:30:48.320 --> 00:30:49.830
Would there be any performance gain?

00:30:50.880 --> 00:30:52.688
&gt;&gt; Yeah so, potentially.

00:30:52.688 --> 00:30:53.467
&gt;&gt; Mm-hm?

00:30:53.467 --> 00:30:54.640
&gt;&gt; It depends.

00:30:54.640 --> 00:30:58.235
So you may not necessarily want to
concatenate all your files together.

00:30:58.235 --> 00:31:05.000
But if you have multiple
JavaScript files, say I

00:31:06.140 --> 00:31:11.910
want to keep my production code
fairly organized and modular so

00:31:11.910 --> 00:31:16.330
I can just open up a JavaScript file and
know exactly what I'm working on.

00:31:17.632 --> 00:31:20.610
It's going to help a lot in the end
to just concatenate all those

00:31:20.610 --> 00:31:21.380
files into app.js.

00:31:21.380 --> 00:31:26.240
And that way, when the user hits,
it can request only

00:31:26.240 --> 00:31:30.950
just one JavaScript file right off
the gate, it gets cached, whatever.

00:31:30.950 --> 00:31:35.470
And then they don't have
to keep calling that.

00:31:35.470 --> 00:31:38.249
Calling for different JavaScript
files every time they're

00:31:38.249 --> 00:31:41.582
trying to run a different task,
they don't have any bunch of requests.

00:31:41.582 --> 00:31:46.441
On the flip side,
sometimes it is nice to be able to

00:31:46.441 --> 00:31:51.302
just cut little bit of fat
out if it's a JavaScript

00:31:51.302 --> 00:31:56.048
function that's not going to
get called a lot, and

00:31:56.048 --> 00:32:02.103
then just request it only when
the user I would say it depends.

00:32:02.103 --> 00:32:04.470
But typically concat is very useful.

00:32:04.470 --> 00:32:07.890
I tend to try to concat as many
files as I can to just kind of

00:32:07.890 --> 00:32:10.830
get that initial page request done.

00:32:10.830 --> 00:32:15.010
And typically you don't see a huge
hit to performance initially

00:32:15.010 --> 00:32:18.720
on the initial page load.

00:32:18.720 --> 00:32:19.380
So yeah.

00:32:19.380 --> 00:32:23.020
I say it's pretty useful for pretty much
anything we'll be doing in this class,

00:32:23.020 --> 00:32:25.485
and for
most big projects it's pretty useful.

00:32:25.485 --> 00:32:27.070
&gt;&gt; Mm-hm.
&gt;&gt; But yeah,

00:32:27.070 --> 00:32:32.670
just kind of play it by ear I guess,
and as Web often in browser performance

00:32:32.670 --> 00:32:37.890
optimization class is always saying,
measure, measure, measure, measure.

00:32:37.890 --> 00:32:39.400
Yeah.
&gt;&gt; Has a nice ring.

00:32:39.400 --> 00:32:40.030
&gt;&gt; Always measure.

00:32:41.150 --> 00:32:43.798
Thanks, man.

00:32:43.798 --> 00:32:45.818
A couple of smart questions, Sean.

00:32:45.818 --> 00:32:51.016
Jim asks,
does grunt concat work with min.js and

00:32:51.016 --> 00:32:54.210
js files too without errors?

00:32:54.210 --> 00:32:56.890
Or do we need to keep
them [INAUDIBLE] values?

00:32:56.890 --> 00:32:58.910
Are other js files separate?

00:32:58.910 --> 00:33:01.980
&gt;&gt; Yeah, so
it should work with min.js files.

00:33:01.980 --> 00:33:05.630
I haven't run into a problem with it,
with anything yet.

00:33:06.800 --> 00:33:11.601
&gt;&gt; I feel like he's asking for
a concat files that are minifying,

00:33:11.601 --> 00:33:14.480
and bugs that are not minifying.

00:33:14.480 --> 00:33:15.510
&gt;&gt; Yeah, yeah.

00:33:15.510 --> 00:33:16.956
So, that will work.

00:33:16.956 --> 00:33:20.150
I don't think I'm a very here.

00:33:20.150 --> 00:33:22.610
But basically what would
end up happening is if

00:33:22.610 --> 00:33:23.470
this was a minified file.

00:33:23.470 --> 00:33:24.670
&gt;&gt; It would basically.

00:33:24.670 --> 00:33:28.115
&gt;&gt; It would basically just shove
itself into this single line.

00:33:28.115 --> 00:33:28.790
&gt;&gt; Uh-huh.
&gt;&gt; And so

00:33:28.790 --> 00:33:31.601
line four would just be like this big,
long minified file.

00:33:31.601 --> 00:33:32.221
&gt;&gt; Uh-huh.

00:33:32.221 --> 00:33:34.920
&gt;&gt; And then this would be
sort of like the un-minified.

00:33:34.920 --> 00:33:35.480
&gt;&gt; Okay.

00:33:35.480 --> 00:33:37.815
&gt;&gt; You can use grunt to actually
do minification as well.

00:33:37.815 --> 00:33:41.024
&gt;&gt; Mm-hm?
&gt;&gt; If your file's already minified,

00:33:41.024 --> 00:33:46.231
it'll just run it through
the minifier again really fast.

00:33:46.231 --> 00:33:48.990
But yeah,
they play pretty nice together.

00:33:48.990 --> 00:33:53.190
Basically, all it does is just sort
of the JavaScript files together.

00:33:53.190 --> 00:33:55.670
There's a little bit more
that goes on there but

00:33:55.670 --> 00:33:57.481
that's sort of the rule of thumb.

00:33:57.481 --> 00:33:59.440
&gt;&gt; Okay, thanks John.

00:33:59.440 --> 00:34:00.770
Thanks John for the question.

00:34:01.800 --> 00:34:03.330
Couple of more.

00:34:03.330 --> 00:34:07.490
[INAUDIBLE] And there's two more,
so we had this question.

00:34:07.490 --> 00:34:11.409
So Richard says,
the scenes decorative but

00:34:11.409 --> 00:34:14.730
does grunt or
any dash support convention

00:34:17.340 --> 00:34:20.308
over configuration for example-
&gt;&gt; Gulp.

00:34:20.308 --> 00:34:21.007
Gulp does.

00:34:21.007 --> 00:34:22.505
&gt;&gt; Gulp does.

00:34:22.505 --> 00:34:23.686
&gt;&gt; He likes gulp.

00:34:23.686 --> 00:34:24.186
&gt;&gt; [LAUGH] Yeah.

00:34:24.186 --> 00:34:30.717
[CROSSTALK] For example, if you wanted
to use to transform images in the images

00:34:30.717 --> 00:34:37.178
folder does it support using that
convention versus declaring the source?

00:34:37.178 --> 00:34:45.320
Yeah so with Grunt you can do a little
bit just straight in js coding.

00:34:45.320 --> 00:34:49.060
However it's really all
I about a config file,

00:34:49.060 --> 00:34:54.300
grunt is very much
configuration over convention.

00:34:54.300 --> 00:34:57.139
Whereas glup if you
want to dive into gulf or

00:34:57.139 --> 00:35:01.470
interested in learning that,
that you're right, pure JavaScript.

00:35:01.470 --> 00:35:06.050
It's stripped like no JavaScript and
everything.

00:35:06.050 --> 00:35:09.878
Instead of writing this big
configuration file where I'm basically

00:35:09.878 --> 00:35:11.859
just defining a giant JSON object.

00:35:11.859 --> 00:35:13.559
&gt;&gt; Yep.

00:35:13.559 --> 00:35:16.814
&gt;&gt; Yeah, so, Grunt is pretty much

00:35:16.814 --> 00:35:21.768
the philosophy of Grunt
is configuration over.

00:35:21.768 --> 00:35:22.948
&gt;&gt; All right.

00:35:22.948 --> 00:35:25.588
Thanks, Richard.

00:35:25.588 --> 00:35:27.908
Okay.

00:35:27.908 --> 00:35:34.390
Andrew's question is I know Gulp
is something similar to grunt.

00:35:34.390 --> 00:35:35.680
How are they different?

00:35:35.680 --> 00:35:38.180
And what are some pros and cons of each?

00:35:38.180 --> 00:35:40.700
&gt;&gt; Okay.
So besides this, I think I mentioned

00:35:40.700 --> 00:35:45.960
that grunt takes the kind of
configuration over coding approach.

00:35:45.960 --> 00:35:48.900
Gulp is more you're
writing JavaScript and

00:35:48.900 --> 00:35:51.640
less about writing a giant config file.

00:35:51.640 --> 00:35:56.372
The other kind of major
differences between them two

00:35:56.372 --> 00:35:58.530
is gulp is a lot faster.

00:36:00.310 --> 00:36:05.090
Since it is all sort of running
asynchronously it really utilizes node.

00:36:05.090 --> 00:36:07.521
And it's just streaming through node.

00:36:07.521 --> 00:36:13.444
Where as Grunt, until I'm not sure
there's a, let me back track a bit.

00:36:13.444 --> 00:36:17.887
So Grunt in it's current
form is very slow.

00:36:17.887 --> 00:36:21.759
Behind the scenes it kind of sets
up a bunch of temporary holders and

00:36:21.759 --> 00:36:25.680
handles all these tasks and
there are tons of the stuffs.

00:36:25.680 --> 00:36:28.200
And kind of clears that out.

00:36:28.200 --> 00:36:32.340
And then it just runs a lot
slower because of that,

00:36:32.340 --> 00:36:34.830
because it's performing
a lot more operations.

00:36:34.830 --> 00:36:36.995
Where as gulp is just
much more streamlined.

00:36:36.995 --> 00:36:40.130
&gt;&gt; Mm-hm.

00:36:40.130 --> 00:36:43.020
&gt;&gt; However Grunt has
a much bigger community.

00:36:43.020 --> 00:36:45.580
You're probably going to more
easily find help with grunt.

00:36:45.580 --> 00:36:47.440
And there's a lot more packages.

00:36:47.440 --> 00:36:50.470
Although it's starting to
become a little bit closer as

00:36:50.470 --> 00:36:52.035
gulp is gaining popularity.

00:36:52.035 --> 00:36:53.010
&gt;&gt; Mm-hm.

00:36:53.010 --> 00:36:56.240
&gt;&gt; The only other thing I
can think of is, with grunt,

00:36:56.240 --> 00:37:00.855
it's easy to hand it over to someone
who doesn't know JavaScript that well.

00:37:00.855 --> 00:37:01.370
&gt;&gt; Mm-hm.

00:37:01.370 --> 00:37:04.510
&gt;&gt; And say like
&gt;&gt; Have them like set it up and

00:37:04.510 --> 00:37:08.800
use it whereas with gulp it's
a little bit harder to hand

00:37:08.800 --> 00:37:11.600
the file over to someone who
doesn't know JavaScript.

00:37:11.600 --> 00:37:15.745
For them to look at it and
understand what's going on.

00:37:15.745 --> 00:37:18.365
&gt;&gt; Thanks Andrew.

00:37:18.365 --> 00:37:20.094
Okay.

00:37:20.094 --> 00:37:25.299
A few more questions I guess,
Alexander wanted to know, can you pass

00:37:25.299 --> 00:37:31.080
a list of source files instead of using
wildcards when you are in [INAUDIBLE]?

00:37:31.080 --> 00:37:33.370
&gt;&gt; Yeah, I believe so,
let's take a look, let's go back.

00:37:33.370 --> 00:37:39.072
I think you can give this a list.

00:37:39.072 --> 00:37:39.734
&gt;&gt; Wow.

00:37:39.734 --> 00:37:44.000
&gt;&gt; Script1
&gt;&gt; Let's see.

00:37:44.000 --> 00:37:46.550
Source, jazz scripts.

00:37:46.550 --> 00:37:48.863
If I can spell.

00:37:48.863 --> 00:37:49.603
&gt;&gt; [LAUGH].

00:37:49.603 --> 00:37:51.820
&gt;&gt; I think that works.

00:37:51.820 --> 00:37:54.410
It's been a while since
I've tried that so see.

00:37:55.830 --> 00:37:58.820
Yeah, yeah so
you can provide them as an array.

00:37:59.900 --> 00:38:00.770
&gt;&gt; Or a list.

00:38:00.770 --> 00:38:03.300
&gt;&gt; Or a list,
whatever you want to call it.

00:38:03.300 --> 00:38:05.425
Yeah so you can do that
instead of using wildcards.

00:38:07.870 --> 00:38:11.628
Yeah, so you can be a little bit more
precise in what you're passing along.

00:38:16.349 --> 00:38:20.550
&gt;&gt; Wanted to know why not just
use NPM directly from tools?

00:38:20.550 --> 00:38:22.910
&gt;&gt; You can and
I actually recommend that.

00:38:22.910 --> 00:38:23.410
Yeah.

00:38:23.410 --> 00:38:25.720
&gt;&gt; Yeah.
It's maybe just a little bit more.

00:38:25.720 --> 00:38:31.435
I think grunt and
gulp simplify things a little bit.

00:38:31.435 --> 00:38:32.230
&gt;&gt; Mm-hm.

00:38:32.230 --> 00:38:34.790
&gt;&gt; And they do have a lot of support.

00:38:34.790 --> 00:38:36.560
They're really great tools.

00:38:36.560 --> 00:38:41.830
You can do it all from
NPM directly though.

00:38:41.830 --> 00:38:44.530
It's just a little bit more work.

00:38:44.530 --> 00:38:46.520
&gt;&gt; Okay.
All right well.

00:38:46.520 --> 00:38:50.480
&gt;&gt; It's very fast to do it that way.

00:38:50.480 --> 00:38:53.200
&gt;&gt; One last question
before we can go back.

00:38:53.200 --> 00:38:58.650
So asks, is there a grunt plugin for
adding unit discs?

00:38:58.650 --> 00:38:59.510
&gt;&gt; Yeah.

00:38:59.510 --> 00:39:02.830
Yeah.
Unit testing with grunt is possible.

00:39:02.830 --> 00:39:05.440
I don't, what is the plugin?

00:39:05.440 --> 00:39:06.480
I mean there's a bunch of them.

00:39:06.480 --> 00:39:09.178
I mean I guess it depends on what
testing environment you're using.

00:39:09.178 --> 00:39:11.578
So like if I'm using Karma.

00:39:11.578 --> 00:39:16.633
There's a Karma test runner.

00:39:16.633 --> 00:39:21.832
There's one, maybe.

00:39:21.832 --> 00:39:25.606
There's contrib-nodeunit which let's
you know which node unit unit tests.

00:39:25.606 --> 00:39:26.910
So yeah there's a bunch of them.

00:39:26.910 --> 00:39:30.300
And as you can see you
can just go through and

00:39:30.300 --> 00:39:31.830
search for all kinds of them.

00:39:31.830 --> 00:39:35.510
So yeah, there's a lot of plugins
to set up unit tests with grunt.

00:39:35.510 --> 00:39:36.010
Same with gulp.

00:39:38.260 --> 00:39:38.770
Thanks.

00:39:38.770 --> 00:39:40.231
&gt;&gt; Yeah
&gt;&gt; We're done with question so

00:39:40.231 --> 00:39:42.053
we can go back to what
we're talking about.

00:39:42.053 --> 00:39:43.393
&gt;&gt; What was I talking about?

00:39:43.393 --> 00:39:45.775
[LAUGH]
&gt;&gt; We were-

00:39:45.775 --> 00:39:46.382
&gt;&gt; Yeah so

00:39:46.382 --> 00:39:49.214
dealing with all these counts and

00:39:49.214 --> 00:39:54.048
file names that are cluttering up our-
&gt;&gt; Yes

00:39:54.048 --> 00:39:55.297
&gt;&gt; Our directory, or

00:39:55.297 --> 00:39:57.329
sorry, our direct file here.

00:39:57.329 --> 00:40:04.476
So what we can do is we can create Well,
it's a call, you know, a [INAUDIBLE].

00:40:04.476 --> 00:40:06.283
&gt;&gt; [LAUGH]
&gt;&gt; So,

00:40:06.283 --> 00:40:08.430
I'm going to make a gruntfile.yel.

00:40:08.430 --> 00:40:16.600
And this is going to be a file that I
pretty much keep all my directories in.

00:40:17.830 --> 00:40:20.750
So, I'm going to have it Cssdur.

00:40:21.780 --> 00:40:23.830
And I'm going to add a word sas.

00:40:25.410 --> 00:40:28.340
I'm going to have my
gas source directory

00:40:29.630 --> 00:40:32.275
which is going to be right source js.

00:40:32.275 --> 00:40:32.775
&gt;&gt; Mm-hm.
&gt;&gt; Okay.

00:40:33.970 --> 00:40:35.618
Really bad at typing today.

00:40:35.618 --> 00:40:37.809
&gt;&gt; [LAUGH]
&gt;&gt; Concat dir.

00:40:39.020 --> 00:40:43.170
Our distribution for our concatenation.

00:40:43.170 --> 00:40:49.230
And also my CSS directory which is
going to be my distribution for my CSS.

00:40:49.230 --> 00:40:53.315
So I'm going to find
these in my enamel file.

00:40:53.315 --> 00:40:53.976
&gt;&gt; Ok.

00:40:53.976 --> 00:40:59.230
&gt;&gt; And in my Grunt file.

00:40:59.230 --> 00:41:01.726
I'm going to import this configuration.

00:41:01.726 --> 00:41:07.470
Var config equals grunt.file.readYAML.

00:41:07.470 --> 00:41:14.055
And I'm going to read
in my grunt config.

00:41:14.055 --> 00:41:14.860
.yml.

00:41:14.860 --> 00:41:19.520
So now I have this
configuration variable which

00:41:19.520 --> 00:41:24.120
contains any sort of configuration
I can find in this file.

00:41:24.120 --> 00:41:25.350
Now you can do.
You can do allot

00:41:25.350 --> 00:41:27.390
more than just setting up
directories with this.

00:41:28.640 --> 00:41:33.950
So it's pretty portable and
makes things a little cleaner and nice.

00:41:33.950 --> 00:41:36.840
And now instead of if I have a hundred

00:41:38.000 --> 00:41:39.810
different-,
&gt;&gt; Tasks.

00:41:39.810 --> 00:41:43.420
&gt;&gt; Tasks or something and I need to
change the name or directory for

00:41:43.420 --> 00:41:47.440
something I can simply just change,
and it changes all of them in

00:41:47.440 --> 00:41:49.710
here without having to mess
around too much with everything.

00:41:49.710 --> 00:41:52.670
And if you miss one or
make a typo somewhere.

00:41:54.630 --> 00:41:59.099
So now I can just say okay,
i want this to be my source directory.

00:41:59.099 --> 00:41:59.930
&gt;&gt; Mm-hm.

00:41:59.930 --> 00:42:00.760
&gt;&gt; That's what I call it.

00:42:00.760 --> 00:42:02.750
My s.d.s.s.

00:42:02.750 --> 00:42:07.250
I'm actually going to do this
to make things a little easier.

00:42:08.320 --> 00:42:09.515
So i can see that.

00:42:09.515 --> 00:42:15.732
&gt;&gt; [LAUGH]
&gt;&gt; And then, sorry.

00:42:16.850 --> 00:42:17.550
That would be-
&gt;&gt; Yes,

00:42:17.550 --> 00:42:20.910
I want to say config because
it's my config variable.

00:42:20.910 --> 00:42:24.338
There you go.
And then the scssDir and

00:42:24.338 --> 00:42:29.512
my style.js

00:42:29.512 --> 00:42:34.170
I believe.

00:42:34.170 --> 00:42:36.240
Right, because that's
just the directory.

00:42:36.240 --> 00:42:39.380
&gt;&gt; Yeah.
&gt;&gt; That's the style.js.

00:42:39.380 --> 00:42:39.930
There we go.
And

00:42:41.750 --> 00:42:46.390
then my destination now
is just config.css.

00:42:46.390 --> 00:42:53.780
Dir+style.css except this
is not a chance file.

00:42:53.780 --> 00:43:00.618
[LAUGH] And then same thing here
we can just simply say config.

00:43:02.939 --> 00:43:07.925
And then we're going to do
our JsSrcDir+ We going to

00:43:07.925 --> 00:43:13.161
type our JS files and
then here we're going to just

00:43:13.161 --> 00:43:19.037
desk:config.jsConcatDirand that
goon be app.js.

00:43:19.037 --> 00:43:25.096
So that makes it a little
bit easier to go in and

00:43:25.096 --> 00:43:32.288
sort of change where things output or
are input from.

00:43:32.288 --> 00:43:36.200
It helps [INAUDIBLE] like I said
do a lot more and sort of your,

00:43:36.200 --> 00:43:37.825
configure your gamble file.

00:43:37.825 --> 00:43:41.650
Mm-hm
&gt;&gt; I don't know.

00:43:41.650 --> 00:43:46.450
I don't actually probably don't
want to collect grunt file.

00:43:46.450 --> 00:43:52.445
I wanted to call it Grunt conflict.

00:43:52.445 --> 00:43:53.960
&gt;&gt; [LAUGH]
&gt;&gt; Otherwise it's not

00:43:53.960 --> 00:43:56.435
going to work right because I'm.

00:43:56.435 --> 00:43:57.770
&gt;&gt; Mm-hm.
&gt;&gt; trying to print it.

00:43:57.770 --> 00:44:00.510
So now if we run grunt we
should see [CROSSTALK]

00:44:00.510 --> 00:44:01.369
&gt;&gt; Woo-hoo.

00:44:01.369 --> 00:44:02.300
All right cool.

00:44:03.880 --> 00:44:10.320
So one cool thing we can do, now that
we have this defined, we can easily

00:44:10.320 --> 00:44:15.550
lint our files as well in both sort
our source and output directory.

00:44:15.550 --> 00:44:19.520
This is good practice because
oftentimes you have coding mistakes

00:44:19.520 --> 00:44:21.490
in your source directory.

00:44:21.490 --> 00:44:25.830
Or maybe you know when
you can buy almost or

00:44:27.450 --> 00:44:31.585
something happens it breaks something
to rules and you don't want to break.

00:44:31.585 --> 00:44:34.030
&gt;&gt; Mm-hm
&gt;&gt; So we're going to install it your

00:44:34.030 --> 00:44:35.765
particular in use Janus hence.

00:44:35.765 --> 00:44:36.680
&gt;&gt; Mm-hm.

00:44:36.680 --> 00:44:39.240
&gt;&gt; So
I actually have to say this again but

00:44:39.240 --> 00:44:42.706
were going to say npm install save dev.

00:44:42.706 --> 00:44:47.447
Grunt-contrib-jshint.

00:44:47.447 --> 00:44:48.744
&gt;&gt; Mm-hm.

00:44:48.744 --> 00:44:52.930
&gt;&gt; And that's going to install.

00:44:52.930 --> 00:44:53.940
And so now, right?

00:44:53.940 --> 00:44:55.250
We don't have to load our task.

00:44:56.370 --> 00:45:01.105
We can just say we're going
to create our jshints.

00:45:01.105 --> 00:45:01.700
&gt;&gt; [LAUGH]
&gt;&gt; Yep.

00:45:03.500 --> 00:45:05.450
And we're going to say.

00:45:05.450 --> 00:45:06.260
Let's lint everything.

00:45:06.260 --> 00:45:13.340
We're going to lint our grunt file,
It's usually good practice.

00:45:13.340 --> 00:45:16.808
And we're going to lint
our source directory.

00:45:16.808 --> 00:45:18.580
&gt;&gt; Mm hm.

00:45:23.398 --> 00:45:24.080
&gt;&gt; And this jar.

00:45:24.080 --> 00:45:25.292
&gt;&gt; You need to [INAUDIBLE] jar.

00:45:25.292 --> 00:45:26.610
&gt;&gt; Yes.

00:45:26.610 --> 00:45:30.350
So we're done with all our files and
we gotta remember to register it.

00:45:30.350 --> 00:45:32.020
Otherwise it's not going to
&gt;&gt; [LAUGH]

00:45:32.020 --> 00:45:32.809
&gt;&gt; I'm going to get mad.

00:45:32.809 --> 00:45:39.010
&gt;&gt; [LAUGH]
&gt;&gt; So, now we can run grunts.

00:45:41.090 --> 00:45:41.920
We got a warning.

00:45:41.920 --> 00:45:46.410
I'm missing a semi colon in my
&gt;&gt; [CROSSTALK] Grunt file.

00:45:46.410 --> 00:45:50.160
Where am I missing my son Michael?

00:45:50.160 --> 00:45:50.660
On line 32.
Yeah.

00:45:52.330 --> 00:45:53.840
So cool I caught that.

00:45:53.840 --> 00:45:58.330
And so the nice thing about that too is
in fact you should probably call your

00:45:58.330 --> 00:46:02.215
linker first before you do any of your.

00:46:02.215 --> 00:46:05.680
&gt;&gt; Mm-hm.

00:46:05.680 --> 00:46:07.460
&gt;&gt; Other jobs for tasks.

00:46:07.460 --> 00:46:09.570
That way they don't compile.

00:46:09.570 --> 00:46:13.930
So basically this didn't run
anything because it aborted,

00:46:13.930 --> 00:46:17.080
because there was a error.

00:46:17.080 --> 00:46:18.868
So now grunt.

00:46:18.868 --> 00:46:22.500
&gt;&gt; [INAUDIBLE]
&gt;&gt; [INAUDIBLE] done without errors.

00:46:22.500 --> 00:46:23.960
Cool.

00:46:23.960 --> 00:46:27.865
Now let's say we want to enforce
a specific rule with our Linter.

00:46:27.865 --> 00:46:28.570
&gt;&gt; Mm-hm.

00:46:28.570 --> 00:46:29.130
&gt;&gt; Let's say for

00:46:29.130 --> 00:46:32.545
example we want to enforce that
we have to use triple equals.

00:46:32.545 --> 00:46:33.310
&gt;&gt; Uh-huh.

00:46:33.310 --> 00:46:34.080
&gt;&gt; All the time.

00:46:34.080 --> 00:46:37.400
Like we don't want people to
use double equals in this case.

00:46:38.580 --> 00:46:41.077
We can define in Options.

00:46:43.921 --> 00:46:44.660
Attribute.

00:46:44.660 --> 00:46:45.980
&gt;&gt; So this is within the Linter.

00:46:45.980 --> 00:46:53.621
&gt;&gt; This is within the linter class or
jshint class or jshint [INAUDIBLE].

00:46:53.621 --> 00:46:59.530
And so in this options, we're going to
give it an equal equal equal is true.

00:47:01.130 --> 00:47:08.335
So JS Hint has pretty
comprehensive documentation.

00:47:08.335 --> 00:47:10.240
&gt;&gt; Mm-hm.
&gt;&gt; On what kind of flags and

00:47:10.240 --> 00:47:11.400
options you can put up.

00:47:11.400 --> 00:47:16.490
I think if you go to their docs or
list of all JS hint options.

00:47:16.490 --> 00:47:19.330
You can go in and read about
all the rules you can enforce.

00:47:19.330 --> 00:47:21.780
And the one we're enforcing is.

00:47:21.780 --> 00:47:25.580
EQ, EQ, EQ, this option prohibits
the use of double equals and

00:47:25.580 --> 00:47:28.626
not equals in favor of
triple equal signs.

00:47:28.626 --> 00:47:31.348
&gt;&gt; Not equal equal.

00:47:31.348 --> 00:47:33.790
&gt;&gt; And not equal equal.

00:47:33.790 --> 00:47:34.850
So let's see if this worked.

00:47:34.850 --> 00:47:39.819
So let's go into our script, let's
save that, and let's run duramounts.

00:47:41.070 --> 00:47:43.290
And there we go I caught that order.

00:47:43.290 --> 00:47:48.570
It tells us that A equals,
equals B, expected triple equal.

00:47:48.570 --> 00:47:50.587
And then [INAUDIBLE] equal.

00:47:50.587 --> 00:47:54.052
So, we can go fix that, run Grunt.

00:47:54.052 --> 00:47:58.813
[INAUDIBLE] Everything runs just fine.

00:47:58.813 --> 00:48:00.866
So, that's pretty awesome.

00:48:00.866 --> 00:48:04.509
So the last thing I want to talk
about before going out today, and

00:48:04.509 --> 00:48:09.550
actually this repository I gave you guys
goes even a little further than this.

00:48:09.550 --> 00:48:13.030
But the last thing I wanted to talk
about was defining a watch task.

00:48:13.030 --> 00:48:15.780
And watch tasks are really, really cool.

00:48:15.780 --> 00:48:19.320
So as we were doing before, basically
I'd write code and then I'd go in and

00:48:19.320 --> 00:48:23.030
run Grunt every time I
wanted something to happen.

00:48:23.030 --> 00:48:26.300
But say I just wanted to
focus on coding, right?

00:48:26.300 --> 00:48:29.670
And I wanted maybe to add
some more JavaScript here and

00:48:29.670 --> 00:48:33.640
I wanted when I saved this to
automatically run my Grunt tasks.

00:48:35.200 --> 00:48:38.260
So what we can do is we can create
what are called watch tasks.

00:48:38.260 --> 00:48:40.015
And as always,
we need to install a plugin.

00:48:40.015 --> 00:48:44.582
&gt;&gt; [LAUGH]
&gt;&gt; So we're going to do npm install

00:48:44.582 --> 00:48:49.510
--save-dev grunt-contrib-watch.

00:48:49.510 --> 00:48:51.150
And we're going to let it install.

00:48:51.150 --> 00:48:53.050
It's installed, we're good to go.

00:48:53.050 --> 00:48:54.680
&gt;&gt; And you don't need to load it?

00:48:54.680 --> 00:48:58.540
&gt;&gt; Don't need to load it
because we already did that.

00:48:58.540 --> 00:49:00.910
And so now what we're going to do is
we're going to create a watch task.

00:49:02.140 --> 00:49:06.696
And so in our watch task, we're
going to have different watch tasks.

00:49:06.696 --> 00:49:10.015
In this case I'm going to
have a sass watch task.

00:49:10.015 --> 00:49:11.988
&gt;&gt; Mm-hm.
&gt;&gt; And the files that I'm going to

00:49:11.988 --> 00:49:15.840
define here are the files
that we're watching.

00:49:15.840 --> 00:49:20.790
So in this case, we're going to watch
our source, our sass directory.

00:49:20.790 --> 00:49:23.450
And we're going to be
specifically looking for

00:49:23.450 --> 00:49:28.070
anything, any subdirectory or
file that ends with scss.

00:49:30.130 --> 00:49:34.740
Then we have to define what
tasks we're going to run.

00:49:34.740 --> 00:49:37.240
Again this can be a function or

00:49:37.240 --> 00:49:41.410
I believe,
actually I think it has to be an array.

00:49:41.410 --> 00:49:43.990
And we're going to
call our sass function.

00:49:43.990 --> 00:49:47.440
We also could call another function so
I could call jshint as well out here and

00:49:47.440 --> 00:49:49.950
it will execute both
of these on a change.

00:49:49.950 --> 00:49:55.849
But obviously since we're editing
a sass file we don't need to it.

00:49:55.849 --> 00:50:00.040
So let's do that and
also don't forget to register it.

00:50:03.010 --> 00:50:07.060
So before, when we ran a task write,
it said done without errors.

00:50:07.060 --> 00:50:08.730
Let's see what happens this time.

00:50:08.730 --> 00:50:11.440
So I call Grunt, hopefully no errors.

00:50:11.440 --> 00:50:12.020
Alright, there we go.

00:50:12.020 --> 00:50:15.878
Now it says running watch task, waiting.

00:50:15.878 --> 00:50:17.713
&gt;&gt; Okay.
&gt;&gt; So let's see what happens.

00:50:17.713 --> 00:50:18.580
Let's go in here and

00:50:18.580 --> 00:50:22.420
get rid of this important tag because
we probably shouldn't be using those.

00:50:22.420 --> 00:50:29.490
I save it and we see that file
has changed running this task.

00:50:29.490 --> 00:50:32.510
Done without errors and
now it's waiting again for more change.

00:50:32.510 --> 00:50:37.580
If we take a look here, we can see that
our important has left the building.

00:50:37.580 --> 00:50:38.966
Let's add another thing.

00:50:38.966 --> 00:50:42.078
Let's say block.

00:50:42.078 --> 00:50:49.594
Let's do HTML, height 100%.

00:50:49.594 --> 00:50:50.560
Save it.

00:50:52.430 --> 00:50:54.510
Go back to our style and there we go.

00:50:55.860 --> 00:50:57.480
Automatically compiled.

00:50:57.480 --> 00:50:59.660
Grunt ran that task because
we're watching that file.

00:51:00.750 --> 00:51:02.793
So watch tasks are really
really really awesome.

00:51:02.793 --> 00:51:03.351
&gt;&gt; Yeah.

00:51:03.351 --> 00:51:08.470
&gt;&gt; You can even set up watch tasks
that will watch your JavaScript.

00:51:08.470 --> 00:51:11.780
You can set up watch tasks that'll
basically just recompile over

00:51:11.780 --> 00:51:14.920
any task you want when
certain files change.

00:51:14.920 --> 00:51:19.900
And it becomes really, really useful
when you want to just be able to focus

00:51:19.900 --> 00:51:24.950
on coding and not have to worry about
minifying everything all the time,

00:51:24.950 --> 00:51:27.189
and having to switch back and
forth between those.

00:51:29.280 --> 00:51:32.250
So that's about all we have time for
today.

00:51:32.250 --> 00:51:35.680
I had actually a lot more planned.

00:51:35.680 --> 00:51:38.070
But I'll put those up on the forum so

00:51:38.070 --> 00:51:40.790
you can feel free to follow
along with the rest.

00:51:40.790 --> 00:51:42.390
The rest is a little advanced.

00:51:42.390 --> 00:51:44.700
You don't necessarily have to do that.

00:51:44.700 --> 00:51:48.540
What I showed you here today is probably
enough to get you started with Grunt and

00:51:48.540 --> 00:51:52.020
get you using it pretty reasonably.

00:51:52.020 --> 00:51:56.250
If you have any questions, though,
feel free to post on the forum and

00:51:56.250 --> 00:51:59.329
you can add me directly
in the post @johnmav.

00:51:59.329 --> 00:52:02.341
That's J-O-H-N-M-A-V.

00:52:02.341 --> 00:52:03.160
And, yeah.

00:52:03.160 --> 00:52:06.508
Unless we have any other questions,

00:52:06.508 --> 00:52:10.288
I think we might call it a wrap for
the day.

00:52:10.288 --> 00:52:11.682
How did that go,
did I do a good job there?

00:52:11.682 --> 00:52:13.609
&gt;&gt; Yeah.
&gt;&gt; [LAUGH]

00:52:13.609 --> 00:52:14.830
&gt;&gt; It was wonderful.

00:52:14.830 --> 00:52:18.520
I hope you all felt
the same way as I did.

00:52:18.520 --> 00:52:20.520
&gt;&gt; Yeah, so like I said,
Grunt is going to be really,

00:52:20.520 --> 00:52:22.150
really useful in the future.

00:52:22.150 --> 00:52:27.410
I don't know a front end
workflow stack developer

00:52:27.410 --> 00:52:30.810
who doesn't use it or something similar.

00:52:30.810 --> 00:52:34.990
Like I said Grunt and
Gulp are the two most popular, but

00:52:34.990 --> 00:52:36.810
there's millions of them out there.

00:52:36.810 --> 00:52:38.322
I know, kind of an up and

00:52:38.322 --> 00:52:42.648
coming one that I haven't had a chance
to fully use yet is Broccoli?

00:52:42.648 --> 00:52:43.308
&gt;&gt; Yeah.

00:52:43.308 --> 00:52:46.690
&gt;&gt; But it looks pretty promising.

00:52:46.690 --> 00:52:51.679
But it's still very new and
it doesn't have a lot of support yet,

00:52:51.679 --> 00:52:55.057
so it probably is not
as easy to learn about.

00:52:55.057 --> 00:52:58.313
But there's you know hundreds
of these different [CROSSTALK]

00:52:58.313 --> 00:53:00.055
&gt;&gt; [CROSSTALK] another vegetable?

00:53:00.055 --> 00:53:00.949
I forget.

00:53:00.949 --> 00:53:02.075
&gt;&gt; There might be another vegetable one.

00:53:02.075 --> 00:53:05.070
&gt;&gt; [CROSSTALK].

00:53:05.070 --> 00:53:08.414
&gt;&gt; All these crazy [INAUDIBLE],
crazy things.

00:53:08.414 --> 00:53:08.914
Grunt, Gulp, Broccoli.

00:53:11.890 --> 00:53:13.010
&gt;&gt; Thank you Adam.

00:53:13.010 --> 00:53:14.586
Ann says great job.

00:53:14.586 --> 00:53:15.500
&gt;&gt; Thank you.

00:53:15.500 --> 00:53:16.430
All right cool.

00:53:16.430 --> 00:53:18.610
So thank you everybody for
joining us today.

00:53:19.990 --> 00:53:21.400
&gt;&gt; We'll see you next Monday?

00:53:21.400 --> 00:53:22.080
&gt;&gt; Next Monday?
Yeah.

00:53:22.080 --> 00:53:24.390
&gt;&gt; And
we're going to meet another teacher.

00:53:24.390 --> 00:53:26.140
&gt;&gt; Yeah, more teachers, woo hoo.

00:53:26.140 --> 00:53:26.880
&gt;&gt; Yep.

00:53:26.880 --> 00:53:28.450
&gt;&gt; Awesome.
All right thanks everybody.

00:53:28.450 --> 00:53:29.300
&gt;&gt; Thank you.

00:53:29.300 --> 00:53:29.800
Bye.

