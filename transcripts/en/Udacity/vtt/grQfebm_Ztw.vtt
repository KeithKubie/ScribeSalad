WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Thank you very much, and now for the answer.

00:00:02.000 --> 00:00:07.000
The answer is if we want to have correct ranges for the input variables

00:00:07.000 --> 00:00:09.000
as well as for the output variables,

00:00:09.000 --> 00:00:13.000
we need to provide these ranges when calling square root.

00:00:13.000 --> 00:00:17.000
In our case, the correct range for x is 0 to maxint.

00:00:17.000 --> 00:00:22.000
If we invoke square root with 0, and if we invoke square root with the maximum integer,

00:00:22.000 --> 00:00:26.000
what we're going to get is that x is greater or equal than 0

00:00:26.000 --> 00:00:30.000
and x is less or equal than maxint,

00:00:30.000 --> 00:00:32.000
which is actually the correct range.

00:00:32.000 --> 00:00:36.000
Likewise, we've learned that the return value is always greater or equal than 0,

00:00:36.000 --> 00:00:40.000
and it's always less or equal than the square root of maxint.

00:00:40.000 --> 00:00:44.000
If we invoke the square root with a value of 1, this won't change a lot.

00:00:44.000 --> 00:00:48.000
We will slightly expand the range, but we won't get the 0 in here.

00:00:48.000 --> 00:00:50.000
This is actually not needed.

00:00:50.000 --> 00:00:56.000
If we invoke square root with -1, then we will actually violate the implicit precondition.

00:00:56.000 --> 00:00:59.000
Let's hope that square root then will actually fail

00:00:59.000 --> 00:01:02.000
such that Daikon can then deduce that if we invoke square root

00:01:02.000 --> 00:01:04.000
with a negative number it fails. These two are the correct values.

