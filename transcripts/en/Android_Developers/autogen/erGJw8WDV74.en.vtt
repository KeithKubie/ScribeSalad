WEBVTT
Kind: captions
Language: en

00:00:01.610 --> 00:00:04.550
so by now you know that there's a lot of

00:00:04.550 --> 00:00:04.560
so by now you know that there's a lot of
 

00:00:04.560 --> 00:00:06.320
so by now you know that there's a lot of
things that go into rendering a frame on

00:00:06.320 --> 00:00:06.330
things that go into rendering a frame on
 

00:00:06.330 --> 00:00:08.240
things that go into rendering a frame on
Android and when frame rate starts to

00:00:08.240 --> 00:00:08.250
Android and when frame rate starts to
 

00:00:08.250 --> 00:00:10.400
Android and when frame rate starts to
suffer top priorities figuring out which

00:00:10.400 --> 00:00:10.410
suffer top priorities figuring out which
 

00:00:10.410 --> 00:00:13.100
suffer top priorities figuring out which
thing has gone off the rails my name is

00:00:13.100 --> 00:00:13.110
thing has gone off the rails my name is
 

00:00:13.110 --> 00:00:14.690
thing has gone off the rails my name is
Colt McAnlis and in order to help you

00:00:14.690 --> 00:00:14.700
Colt McAnlis and in order to help you
 

00:00:14.700 --> 00:00:16.430
Colt McAnlis and in order to help you
track down where your frame problems are

00:00:16.430 --> 00:00:16.440
track down where your frame problems are
 

00:00:16.440 --> 00:00:18.680
track down where your frame problems are
coming from the em release of Android

00:00:18.680 --> 00:00:18.690
coming from the em release of Android
 

00:00:18.690 --> 00:00:21.620
coming from the em release of Android
has updated its GPU profiling tool now

00:00:21.620 --> 00:00:21.630
has updated its GPU profiling tool now
 

00:00:21.630 --> 00:00:23.420
has updated its GPU profiling tool now
if you recall back in season 1 of

00:00:23.420 --> 00:00:23.430
if you recall back in season 1 of
 

00:00:23.430 --> 00:00:25.189
if you recall back in season 1 of
Android performance patterns we talked

00:00:25.189 --> 00:00:25.199
Android performance patterns we talked
 

00:00:25.199 --> 00:00:27.859
Android performance patterns we talked
about the profile GPU tool along with

00:00:27.859 --> 00:00:27.869
about the profile GPU tool along with
 

00:00:27.869 --> 00:00:29.179
about the profile GPU tool along with
the three phases of rendering pipeline

00:00:29.179 --> 00:00:29.189
the three phases of rendering pipeline
 

00:00:29.189 --> 00:00:31.099
the three phases of rendering pipeline
that it measured uh recording a display

00:00:31.099 --> 00:00:31.109
that it measured uh recording a display
 

00:00:31.109 --> 00:00:32.659
that it measured uh recording a display
list submitting it to the GPU and

00:00:32.659 --> 00:00:32.669
list submitting it to the GPU and
 

00:00:32.669 --> 00:00:34.549
list submitting it to the GPU and
waiting for the GPU to finish it work

00:00:34.549 --> 00:00:34.559
waiting for the GPU to finish it work
 

00:00:34.559 --> 00:00:36.950
waiting for the GPU to finish it work
but let's face it things are a little

00:00:36.950 --> 00:00:36.960
but let's face it things are a little
 

00:00:36.960 --> 00:00:39.170
but let's face it things are a little
bit more complex than that which is why

00:00:39.170 --> 00:00:39.180
bit more complex than that which is why
 

00:00:39.180 --> 00:00:41.360
bit more complex than that which is why
in the end release of Android this tool

00:00:41.360 --> 00:00:41.370
in the end release of Android this tool
 

00:00:41.370 --> 00:00:42.799
in the end release of Android this tool
has been expanded to show you eight

00:00:42.799 --> 00:00:42.809
has been expanded to show you eight
 

00:00:42.809 --> 00:00:44.660
has been expanded to show you eight
different sections of your rendering

00:00:44.660 --> 00:00:44.670
different sections of your rendering
 

00:00:44.670 --> 00:00:47.029
different sections of your rendering
frame conveniently and uniquely colored

00:00:47.029 --> 00:00:47.039
frame conveniently and uniquely colored
 

00:00:47.039 --> 00:00:49.729
frame conveniently and uniquely colored
for easy identification now you're

00:00:49.729 --> 00:00:49.739
for easy identification now you're
 

00:00:49.739 --> 00:00:51.680
for easy identification now you're
already familiar with the first three

00:00:51.680 --> 00:00:51.690
already familiar with the first three
 

00:00:51.690 --> 00:00:53.689
already familiar with the first three
phases here as update executes and

00:00:53.689 --> 00:00:53.699
phases here as update executes and
 

00:00:53.699 --> 00:00:54.770
phases here as update executes and
process we talked about those before

00:00:54.770 --> 00:00:54.780
process we talked about those before
 

00:00:54.780 --> 00:00:57.139
process we talked about those before
they still report the same information

00:00:57.139 --> 00:00:57.149
they still report the same information
 

00:00:57.149 --> 00:00:59.119
they still report the same information
so we're pretty much good to go here

00:00:59.119 --> 00:00:59.129
so we're pretty much good to go here
 

00:00:59.129 --> 00:01:01.069
so we're pretty much good to go here
more interesting are some of the new

00:01:01.069 --> 00:01:01.079
more interesting are some of the new
 

00:01:01.079 --> 00:01:03.250
more interesting are some of the new
stages that haven't been reported before

00:01:03.250 --> 00:01:03.260
stages that haven't been reported before
 

00:01:03.260 --> 00:01:06.560
stages that haven't been reported before
firstly is sync and upload this value

00:01:06.560 --> 00:01:06.570
firstly is sync and upload this value
 

00:01:06.570 --> 00:01:08.270
firstly is sync and upload this value
generally measures the time it takes to

00:01:08.270 --> 00:01:08.280
generally measures the time it takes to
 

00:01:08.280 --> 00:01:11.690
generally measures the time it takes to
upload bitmap information to the GPU a

00:01:11.690 --> 00:01:11.700
upload bitmap information to the GPU a
 

00:01:11.700 --> 00:01:14.179
upload bitmap information to the GPU a
large graph segment here means that your

00:01:14.179 --> 00:01:14.189
large graph segment here means that your
 

00:01:14.189 --> 00:01:15.950
large graph segment here means that your
app is spending a lot of time doing that

00:01:15.950 --> 00:01:15.960
app is spending a lot of time doing that
 

00:01:15.960 --> 00:01:17.810
app is spending a lot of time doing that
like if you suddenly grabbed 50 new

00:01:17.810 --> 00:01:17.820
like if you suddenly grabbed 50 new
 

00:01:17.820 --> 00:01:19.880
like if you suddenly grabbed 50 new
thumbnails or uploading an 8 megapixel

00:01:19.880 --> 00:01:19.890
thumbnails or uploading an 8 megapixel
 

00:01:19.890 --> 00:01:22.580
thumbnails or uploading an 8 megapixel
image shrinking this bar usually means

00:01:22.580 --> 00:01:22.590
image shrinking this bar usually means
 

00:01:22.590 --> 00:01:23.749
image shrinking this bar usually means
things like reducing the number of

00:01:23.749 --> 00:01:23.759
things like reducing the number of
 

00:01:23.759 --> 00:01:26.600
things like reducing the number of
visible images or reducing and resizing

00:01:26.600 --> 00:01:26.610
visible images or reducing and resizing
 

00:01:26.610 --> 00:01:28.910
visible images or reducing and resizing
large images before uploading them to

00:01:28.910 --> 00:01:28.920
large images before uploading them to
 

00:01:28.920 --> 00:01:31.490
large images before uploading them to
the GPU of course then there's layout

00:01:31.490 --> 00:01:31.500
the GPU of course then there's layout
 

00:01:31.500 --> 00:01:33.200
the GPU of course then there's layout
and measure phase which report exactly

00:01:33.200 --> 00:01:33.210
and measure phase which report exactly
 

00:01:33.210 --> 00:01:34.910
and measure phase which report exactly
what you'd expect the amount of time

00:01:34.910 --> 00:01:34.920
what you'd expect the amount of time
 

00:01:34.920 --> 00:01:37.310
what you'd expect the amount of time
spent per frame executing on layout and

00:01:37.310 --> 00:01:37.320
spent per frame executing on layout and
 

00:01:37.320 --> 00:01:38.899
spent per frame executing on layout and
on measure callbacks in your view

00:01:38.899 --> 00:01:38.909
on measure callbacks in your view
 

00:01:38.909 --> 00:01:41.270
on measure callbacks in your view
hierarchy high values here indicate that

00:01:41.270 --> 00:01:41.280
hierarchy high values here indicate that
 

00:01:41.280 --> 00:01:43.249
hierarchy high values here indicate that
you have a super complex view hierarchy

00:01:43.249 --> 00:01:43.259
you have a super complex view hierarchy
 

00:01:43.259 --> 00:01:45.200
you have a super complex view hierarchy
and thus performing of lots of measure

00:01:45.200 --> 00:01:45.210
and thus performing of lots of measure
 

00:01:45.210 --> 00:01:46.940
and thus performing of lots of measure
and layout phases across a bunch of

00:01:46.940 --> 00:01:46.950
and layout phases across a bunch of
 

00:01:46.950 --> 00:01:49.160
and layout phases across a bunch of
views or you might be the victim of

00:01:49.160 --> 00:01:49.170
views or you might be the victim of
 

00:01:49.170 --> 00:01:51.170
views or you might be the victim of
things like double taxation in the wrong

00:01:51.170 --> 00:01:51.180
things like double taxation in the wrong
 

00:01:51.180 --> 00:01:52.969
things like double taxation in the wrong
spot in your view hierarchy and

00:01:52.969 --> 00:01:52.979
spot in your view hierarchy and
 

00:01:52.979 --> 00:01:54.770
spot in your view hierarchy and
shrinking this bar means doing stuff

00:01:54.770 --> 00:01:54.780
shrinking this bar means doing stuff
 

00:01:54.780 --> 00:01:56.929
shrinking this bar means doing stuff
we've already talked about like reducing

00:01:56.929 --> 00:01:56.939
we've already talked about like reducing
 

00:01:56.939 --> 00:01:58.700
we've already talked about like reducing
view hierarchy complexity and using view

00:01:58.700 --> 00:01:58.710
view hierarchy complexity and using view
 

00:01:58.710 --> 00:02:00.260
view hierarchy complexity and using view
objects that can reduce the chances of

00:02:00.260 --> 00:02:00.270
objects that can reduce the chances of
 

00:02:00.270 --> 00:02:03.230
objects that can reduce the chances of
double taxation next is the animation

00:02:03.230 --> 00:02:03.240
double taxation next is the animation
 

00:02:03.240 --> 00:02:05.450
double taxation next is the animation
phase which just shows how long it took

00:02:05.450 --> 00:02:05.460
phase which just shows how long it took
 

00:02:05.460 --> 00:02:07.459
phase which just shows how long it took
to evaluate all the animators that were

00:02:07.459 --> 00:02:07.469
to evaluate all the animators that were
 

00:02:07.469 --> 00:02:09.320
to evaluate all the animators that were
running that frame the most common of

00:02:09.320 --> 00:02:09.330
running that frame the most common of
 

00:02:09.330 --> 00:02:11.210
running that frame the most common of
which being things like object animator

00:02:11.210 --> 00:02:11.220
which being things like object animator
 

00:02:11.220 --> 00:02:12.800
which being things like object animator
view property animator

00:02:12.800 --> 00:02:12.810
view property animator
 

00:02:12.810 --> 00:02:15.559
view property animator
and transitions if this number is high

00:02:15.559 --> 00:02:15.569
and transitions if this number is high
 

00:02:15.569 --> 00:02:17.750
and transitions if this number is high
like above two milliseconds or so check

00:02:17.750 --> 00:02:17.760
like above two milliseconds or so check
 

00:02:17.760 --> 00:02:19.520
like above two milliseconds or so check
to see if your app uses any custom

00:02:19.520 --> 00:02:19.530
to see if your app uses any custom
 

00:02:19.530 --> 00:02:21.770
to see if your app uses any custom
animators or if some unintended work is

00:02:21.770 --> 00:02:21.780
animators or if some unintended work is
 

00:02:21.780 --> 00:02:23.360
animators or if some unintended work is
happening as a result of your properties

00:02:23.360 --> 00:02:23.370
happening as a result of your properties
 

00:02:23.370 --> 00:02:25.250
happening as a result of your properties
being updated I mean you'd hate to end

00:02:25.250 --> 00:02:25.260
being updated I mean you'd hate to end
 

00:02:25.260 --> 00:02:26.690
being updated I mean you'd hate to end
up in a situation where updating a

00:02:26.690 --> 00:02:26.700
up in a situation where updating a
 

00:02:26.700 --> 00:02:29.120
up in a situation where updating a
property causes a pause due to disk i/o

00:02:29.120 --> 00:02:29.130
property causes a pause due to disk i/o
 

00:02:29.130 --> 00:02:31.160
property causes a pause due to disk i/o
every frame or something like that and

00:02:31.160 --> 00:02:31.170
every frame or something like that and
 

00:02:31.170 --> 00:02:32.900
every frame or something like that and
then of course there's input handling

00:02:32.900 --> 00:02:32.910
then of course there's input handling
 

00:02:32.910 --> 00:02:34.910
then of course there's input handling
this basically measures how long the

00:02:34.910 --> 00:02:34.920
this basically measures how long the
 

00:02:34.920 --> 00:02:37.070
this basically measures how long the
applications spent handling input events

00:02:37.070 --> 00:02:37.080
applications spent handling input events
 

00:02:37.080 --> 00:02:39.890
applications spent handling input events
or perhaps more accurately how long the

00:02:39.890 --> 00:02:39.900
or perhaps more accurately how long the
 

00:02:39.900 --> 00:02:41.589
or perhaps more accurately how long the
applications spent executing your code

00:02:41.589 --> 00:02:41.599
applications spent executing your code
 

00:02:41.599 --> 00:02:45.140
applications spent executing your code
inside an input event callback if this

00:02:45.140 --> 00:02:45.150
inside an input event callback if this
 

00:02:45.150 --> 00:02:46.550
inside an input event callback if this
number is high this indicates that the

00:02:46.550 --> 00:02:46.560
number is high this indicates that the
 

00:02:46.560 --> 00:02:48.710
number is high this indicates that the
app is spending a long time processing

00:02:48.710 --> 00:02:48.720
app is spending a long time processing
 

00:02:48.720 --> 00:02:50.509
app is spending a long time processing
the users input meaning that you might

00:02:50.509 --> 00:02:50.519
the users input meaning that you might
 

00:02:50.519 --> 00:02:52.670
the users input meaning that you might
want to offload or optimize that work to

00:02:52.670 --> 00:02:52.680
want to offload or optimize that work to
 

00:02:52.680 --> 00:02:55.039
want to offload or optimize that work to
a different thread and finally there's

00:02:55.039 --> 00:02:55.049
a different thread and finally there's
 

00:02:55.049 --> 00:02:58.220
a different thread and finally there's
misc time and vsync delay if you've ever

00:02:58.220 --> 00:02:58.230
misc time and vsync delay if you've ever
 

00:02:58.230 --> 00:02:59.870
misc time and vsync delay if you've ever
seen the logs from choreographer about

00:02:59.870 --> 00:02:59.880
seen the logs from choreographer about
 

00:02:59.880 --> 00:03:02.120
seen the logs from choreographer about
like missed vsync by blah blah blah

00:03:02.120 --> 00:03:02.130
like missed vsync by blah blah blah
 

00:03:02.130 --> 00:03:04.070
like missed vsync by blah blah blah
skipping blah blah blah frames that's

00:03:04.070 --> 00:03:04.080
skipping blah blah blah frames that's
 

00:03:04.080 --> 00:03:06.350
skipping blah blah blah frames that's
that's this thing basically it's the

00:03:06.350 --> 00:03:06.360
that's this thing basically it's the
 

00:03:06.360 --> 00:03:07.789
that's this thing basically it's the
stuff that might be occurring on the UI

00:03:07.789 --> 00:03:07.799
stuff that might be occurring on the UI
 

00:03:07.799 --> 00:03:10.280
stuff that might be occurring on the UI
thread between two consecutive frames of

00:03:10.280 --> 00:03:10.290
thread between two consecutive frames of
 

00:03:10.290 --> 00:03:12.259
thread between two consecutive frames of
rendering if this value is high chances

00:03:12.259 --> 00:03:12.269
rendering if this value is high chances
 

00:03:12.269 --> 00:03:13.970
rendering if this value is high chances
are you've got some callbacks and tents

00:03:13.970 --> 00:03:13.980
are you've got some callbacks and tents
 

00:03:13.980 --> 00:03:15.800
are you've got some callbacks and tents
or other work happening that might be

00:03:15.800 --> 00:03:15.810
or other work happening that might be
 

00:03:15.810 --> 00:03:18.680
or other work happening that might be
ideal to push off to another thread but

00:03:18.680 --> 00:03:18.690
ideal to push off to another thread but
 

00:03:18.690 --> 00:03:20.449
ideal to push off to another thread but
with all these colors crammed together

00:03:20.449 --> 00:03:20.459
with all these colors crammed together
 

00:03:20.459 --> 00:03:21.860
with all these colors crammed together
on the screen it's a little tough to

00:03:21.860 --> 00:03:21.870
on the screen it's a little tough to
 

00:03:21.870 --> 00:03:23.330
on the screen it's a little tough to
make out which ones are causing a

00:03:23.330 --> 00:03:23.340
make out which ones are causing a
 

00:03:23.340 --> 00:03:25.460
make out which ones are causing a
problem that's why if a frame spikes

00:03:25.460 --> 00:03:25.470
problem that's why if a frame spikes
 

00:03:25.470 --> 00:03:27.349
problem that's why if a frame spikes
above the 16 millisecond threshold

00:03:27.349 --> 00:03:27.359
above the 16 millisecond threshold
 

00:03:27.359 --> 00:03:29.000
above the 16 millisecond threshold
you'll notice that it's bar is drawn

00:03:29.000 --> 00:03:29.010
you'll notice that it's bar is drawn
 

00:03:29.010 --> 00:03:31.670
you'll notice that it's bar is drawn
more opaque and it's wider than the bars

00:03:31.670 --> 00:03:31.680
more opaque and it's wider than the bars
 

00:03:31.680 --> 00:03:33.170
more opaque and it's wider than the bars
around it this will hopefully make it a

00:03:33.170 --> 00:03:33.180
around it this will hopefully make it a
 

00:03:33.180 --> 00:03:35.300
around it this will hopefully make it a
little easier on your eyes to pick out

00:03:35.300 --> 00:03:35.310
little easier on your eyes to pick out
 

00:03:35.310 --> 00:03:37.220
little easier on your eyes to pick out
see as the platform evolves and

00:03:37.220 --> 00:03:37.230
see as the platform evolves and
 

00:03:37.230 --> 00:03:38.630
see as the platform evolves and
developers get more skilled it's only

00:03:38.630 --> 00:03:38.640
developers get more skilled it's only
 

00:03:38.640 --> 00:03:40.160
developers get more skilled it's only
natural that the tools will evolve

00:03:40.160 --> 00:03:40.170
natural that the tools will evolve
 

00:03:40.170 --> 00:03:41.930
natural that the tools will evolve
alongside it which is why you should

00:03:41.930 --> 00:03:41.940
alongside it which is why you should
 

00:03:41.940 --> 00:03:42.979
alongside it which is why you should
check out the rest of the Android

00:03:42.979 --> 00:03:42.989
check out the rest of the Android
 

00:03:42.989 --> 00:03:44.780
check out the rest of the Android
performance patterns content so you can

00:03:44.780 --> 00:03:44.790
performance patterns content so you can
 

00:03:44.790 --> 00:03:45.979
performance patterns content so you can
stay up to date with the latest

00:03:45.979 --> 00:03:45.989
stay up to date with the latest
 

00:03:45.989 --> 00:03:47.870
stay up to date with the latest
performance tools and don't forget to

00:03:47.870 --> 00:03:47.880
performance tools and don't forget to
 

00:03:47.880 --> 00:03:50.240
performance tools and don't forget to
join the Google+ community to get advice

00:03:50.240 --> 00:03:50.250
join the Google+ community to get advice
 

00:03:50.250 --> 00:03:52.970
join the Google+ community to get advice
from other great engineers so keep calm

00:03:52.970 --> 00:03:52.980
from other great engineers so keep calm
 

00:03:52.980 --> 00:03:54.620
from other great engineers so keep calm
profile your code and always remember

00:03:54.620 --> 00:03:54.630
profile your code and always remember
 

00:03:54.630 --> 00:03:57.560
profile your code and always remember
perf matters

