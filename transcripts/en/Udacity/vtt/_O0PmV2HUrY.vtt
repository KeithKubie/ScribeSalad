WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:05.012
When we interpolate the red, green, and blue colors across a triangle, we get

00:00:05.012 --> 00:00:08.682
this result. It's important to understand how the triangle rasterization part of

00:00:08.682 --> 00:00:12.876
the pipeline actually interpolates across the triangle. Essentially, whatever is

00:00:12.876 --> 00:00:17.548
put at one vertex fades off across the triangle. For example, say, instead of

00:00:17.548 --> 00:00:21.260
putting rgb, we put green at the top corner, and black at the other two corners.

00:00:22.280 --> 00:00:25.992
You can see in this case that the green is the brightest at the corner, and then

00:00:25.992 --> 00:00:30.410
fades as we approach the other two corners. If you think of green as represented

00:00:30.410 --> 00:00:35.426
by one, and black as zero, we linearly interpolate across the triangle and fade

00:00:35.426 --> 00:00:39.152
from one to zero. This works for the other two corners in a similar fashion,

00:00:39.152 --> 00:00:43.465
with blue fading to black as shown here. For comparison here's the red

00:00:43.465 --> 00:00:48.074
component. Since light is additive, the GPU uses all three of these components

00:00:48.074 --> 00:00:52.468
to display the triangle. The GPU will interpolate any data put at its vertices

00:00:52.468 --> 00:00:55.673
in this way, effect we'll use later for material shading.

