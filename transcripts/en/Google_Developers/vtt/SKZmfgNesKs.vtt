WEBVTT
Kind: captions
Language: en

00:00:00.984 --> 00:00:13.284
[MUSIC PLAYING]

00:00:20.690 --> 00:00:21.600
KALYAN REDDY: Hey, everyone.

00:00:21.600 --> 00:00:25.085
Welcome to "Google Apps
Unscripted." My name is Kalyan

00:00:25.085 --> 00:00:29.395
Reddy and this is my coworker,
Dan Lazin.

00:00:29.395 --> 00:00:29.810
DAN LAZIN: Hey, everyone.

00:00:29.810 --> 00:00:32.159
KALYAN REDDY: Sorry about the
technical difficulties.

00:00:32.159 --> 00:00:35.470
We're having a lot this morning,
so you're not going

00:00:35.470 --> 00:00:36.590
to see a Hangout link.

00:00:36.590 --> 00:00:40.290
And obviously, we're running
several minutes behind.

00:00:40.290 --> 00:00:42.920
So instead of the Hangout, just
go ahead and post all

00:00:42.920 --> 00:00:44.940
your questions on the [? Dory ?]
and then we'll look

00:00:44.940 --> 00:00:46.920
at that frequently as
we do the show.

00:00:46.920 --> 00:00:49.770
DAN LAZIN: That's just the
moderator link at the bottom

00:00:49.770 --> 00:00:55.110
of the live page at
developers.google.com/live.

00:00:55.110 --> 00:00:57.290
Go to this event and there's a
moderator link at the bottom

00:00:57.290 --> 00:00:58.180
of the page.

00:00:58.180 --> 00:01:01.020
KALYAN REDDY: So again, sorry
for the technical

00:01:01.020 --> 00:01:01.790
difficulties.

00:01:01.790 --> 00:01:04.470
We do have a lot of content,
good content here today.

00:01:04.470 --> 00:01:07.670
So I wanted to start out by
saying, if we have any new

00:01:07.670 --> 00:01:10.180
viewers, basically what is this
"Apps Script Unscripted"

00:01:10.180 --> 00:01:13.120
if you haven't seen the
last couple episodes.

00:01:13.120 --> 00:01:16.580
If you're familiar, last year we
were doing something called

00:01:16.580 --> 00:01:19.560
"Office Hours." "Office Hours"
are, basically, we come and we

00:01:19.560 --> 00:01:22.900
talk about release notes and
answer some questions people

00:01:22.900 --> 00:01:24.510
posted on the moderator.

00:01:24.510 --> 00:01:26.800
This is basically the same
thing, just re-branded.

00:01:26.800 --> 00:01:29.520
And we're doing it less
frequently so we can encourage

00:01:29.520 --> 00:01:30.680
more live participation.

00:01:30.680 --> 00:01:35.200
Unfortunately, today
we can't have that.

00:01:35.200 --> 00:01:40.420
So we have a couple of these
different kinds of episodes

00:01:40.420 --> 00:01:41.160
that we are producing.

00:01:41.160 --> 00:01:44.020
So one is called this
"Unscripted," which is what

00:01:44.020 --> 00:01:44.660
you're seeing today.

00:01:44.660 --> 00:01:46.920
And then we also have a "Crash
Course," which is like a

00:01:46.920 --> 00:01:48.870
deeper dive into
certain topics.

00:01:48.870 --> 00:01:49.590
DAN LAZIN: That's right.

00:01:49.590 --> 00:01:52.050
KALYAN REDDY: Arun Nagarajan,
our other teammate, he did a

00:01:52.050 --> 00:01:54.570
bunch, one on ScriptDb
that was really good.

00:01:54.570 --> 00:01:55.090
DAN LAZIN: Yeah, that
was really good.

00:01:55.090 --> 00:01:57.830
KALYAN REDDY: And
content service.

00:01:57.830 --> 00:02:00.140
And other than that, we also
have a new series called

00:02:00.140 --> 00:02:04.270
"Scripted," which we showcase
interactions between Google

00:02:04.270 --> 00:02:06.130
Apps Script and various other
Google properties.

00:02:06.130 --> 00:02:08.639
You know, how to tie things
together really well.

00:02:08.639 --> 00:02:12.260
So we recently did a "Scripted"
on YouTube, so that

00:02:12.260 --> 00:02:13.260
should be really exciting.

00:02:13.260 --> 00:02:13.550
DAN LAZIN: Really sucessful.

00:02:13.550 --> 00:02:16.620
KALYAN REDDY: Go and
check that out.

00:02:16.620 --> 00:02:19.780
Other than that, anything
else we have coming up?

00:02:19.780 --> 00:02:21.830
DAN LAZIN: Let's tell people
about all the changes in Apps

00:02:21.830 --> 00:02:22.880
Script in the last month.

00:02:22.880 --> 00:02:25.210
KALYAN REDDY: Oh yes, we have
lots and lots of changes.

00:02:25.210 --> 00:02:28.490
So if we can switch to
the computer here.

00:02:28.490 --> 00:02:29.660
Awesome.

00:02:29.660 --> 00:02:30.060
All right.

00:02:30.060 --> 00:02:31.303
So I guess let's start with the

00:02:31.303 --> 00:02:32.280
beginning of February here.

00:02:32.280 --> 00:02:35.270
DAN LAZIN: So we're looking at
the release notes page on

00:02:35.270 --> 00:02:37.500
developers.googl
e.com/apps-script right now.

00:02:37.500 --> 00:02:39.270
KALYAN REDDY: Right, it's all
the way at the bottom of the

00:02:39.270 --> 00:02:40.210
left side nav panel.

00:02:40.210 --> 00:02:43.120
So in case you want to refer to
that in future, go ahead.

00:02:43.120 --> 00:02:44.290
Go there.

00:02:44.290 --> 00:02:47.680
So a feature that we added in
the February 11 release was

00:02:47.680 --> 00:02:50.850
that you can attach StaticMap
objects directly to emails.

00:02:50.850 --> 00:02:51.670
So it's kind of nice.

00:02:51.670 --> 00:02:54.780
You don't have to convert it to
a BLOB and then attach it

00:02:54.780 --> 00:02:58.410
as an advance parameter
or anything like that.

00:02:58.410 --> 00:03:00.580
You just go ahead and, bam,
throw it in there.

00:03:00.580 --> 00:03:03.560
One step method to
simplify things.

00:03:03.560 --> 00:03:04.130
Let's see.

00:03:04.130 --> 00:03:06.100
We had a couple of issues
that we fixed.

00:03:06.100 --> 00:03:08.010
As you can see, the list
is pretty big.

00:03:08.010 --> 00:03:09.370
Some key things that I
wanted to highlight.

00:03:09.370 --> 00:03:11.050
We did have some issues with
the quota dashboard.

00:03:11.050 --> 00:03:13.070
We fixed that.

00:03:13.070 --> 00:03:13.850
DAN LAZIN: Now one thing.

00:03:13.850 --> 00:03:15.460
A lot of people aren't
aware that the quota

00:03:15.460 --> 00:03:16.370
dashboard even exists.

00:03:16.370 --> 00:03:18.240
You want to pop it open and
show them the link?

00:03:18.240 --> 00:03:20.440
KALYAN REDDY: Oh yeah,
that's a great idea.

00:03:20.440 --> 00:03:23.710
So here, you can go
to Dashboard.

00:03:23.710 --> 00:03:27.280
And this is a Service Health,
which tells people how our

00:03:27.280 --> 00:03:29.370
services are doing at any given
day in the last week, in

00:03:29.370 --> 00:03:31.540
case we have any problems.

00:03:31.540 --> 00:03:34.410
And here's the Quota
Limit section,

00:03:34.410 --> 00:03:36.200
where you can go and--

00:03:36.200 --> 00:03:39.650
DAN LAZIN: The quota limits is
really good for looking up

00:03:39.650 --> 00:03:42.170
whether a script that you're
building is likely to exceed

00:03:42.170 --> 00:03:46.710
the allowable quota for
your account type.

00:03:46.710 --> 00:03:50.995
Basically, that's dependent on
the sort of domain set up you

00:03:50.995 --> 00:03:53.580
have, whether you're using
Google Apps for Business or

00:03:53.580 --> 00:03:57.870
just a regular consumer account,
you get different

00:03:57.870 --> 00:03:59.990
types of limits for different
sorts of Apps Script services.

00:03:59.990 --> 00:04:02.300
KALYAN REDDY: Here, let me
give you a quick example.

00:04:02.300 --> 00:04:05.330
So Email Recipients.

00:04:05.330 --> 00:04:07.570
So this is how many different
recipients that you can send

00:04:07.570 --> 00:04:12.530
an email to on a per day
setting, which is what this

00:04:12.530 --> 00:04:13.920
quota is set to.

00:04:13.920 --> 00:04:17.440
And if you're just a consumer
account, then you can send 500

00:04:17.440 --> 00:04:18.200
recipients per day.

00:04:18.200 --> 00:04:22.200
So that's either 500
sent emails or it's

00:04:22.200 --> 00:04:25.080
500 cc's to 1 email.

00:04:25.080 --> 00:04:26.620
However you want to
divvy that up.

00:04:26.620 --> 00:04:29.020
But if you go to the Google
Apps for Business

00:04:29.020 --> 00:04:31.710
side, you get 1,500.

00:04:31.710 --> 00:04:34.490
Because there are use cases
within the domain setting

00:04:34.490 --> 00:04:36.210
where you need to send more.

00:04:36.210 --> 00:04:37.500
So we'll relax that.

00:04:37.500 --> 00:04:39.230
And the same thing applies
to various

00:04:39.230 --> 00:04:40.530
other services as well.

00:04:40.530 --> 00:04:42.340
And they're scaled up
appropriately to

00:04:42.340 --> 00:04:43.010
your account type.

00:04:43.010 --> 00:04:46.190
So check that out.

00:04:46.190 --> 00:04:47.700
And just a quick note.

00:04:47.700 --> 00:04:51.540
We are working on some
improvements to the Service

00:04:51.540 --> 00:04:52.750
Health dashboard.

00:04:52.750 --> 00:04:54.140
Stay tuned for those.

00:04:54.140 --> 00:04:56.130
Basically, we're trying to make
it so that it's a little

00:04:56.130 --> 00:05:00.180
more responsive to--.

00:05:00.180 --> 00:05:03.810
Basically, the thresholds will
more accurately reflect if

00:05:03.810 --> 00:05:05.670
we're having some problems.

00:05:05.670 --> 00:05:06.350
DAN LAZIN: That's a
really good idea.

00:05:06.350 --> 00:05:09.150
KALYAN REDDY: Yeah, a few times
in the past, we've had

00:05:09.150 --> 00:05:12.490
problems with like a method
or two here or there.

00:05:12.490 --> 00:05:16.500
Overall, the service itself
was working, but these

00:05:16.500 --> 00:05:18.810
problems didn't trigger
an update on the

00:05:18.810 --> 00:05:19.920
Service Health dashboard.

00:05:19.920 --> 00:05:22.690
So we want to fix that and we
want to get this information

00:05:22.690 --> 00:05:26.310
out to our users as soon as
possible so then they can

00:05:26.310 --> 00:05:28.420
notify their users and
then make sure

00:05:28.420 --> 00:05:28.710
everything's working smoothly.

00:05:28.710 --> 00:05:30.380
DAN LAZIN: Of course, if you're
running into a problem

00:05:30.380 --> 00:05:32.540
that you think might be a bug
with Apps Script, always a

00:05:32.540 --> 00:05:34.310
good idea to go to our
Issue Tracker.

00:05:34.310 --> 00:05:35.680
Take a look at what
issues people have

00:05:35.680 --> 00:05:37.540
been reporting lately.

00:05:37.540 --> 00:05:41.216
And see if the issues you're
running into are similar to

00:05:41.216 --> 00:05:43.550
these because we keep a very
close eye on that.

00:05:43.550 --> 00:05:46.840
Kalyan is the master of the
Issue Tracker these days.

00:05:46.840 --> 00:05:49.300
And we try to really keep
on top of the bugs.

00:05:49.300 --> 00:05:51.910
KALYAN REDDY: Yeah, just take a
look at the new issues that

00:05:51.910 --> 00:05:52.740
are still outstanding.

00:05:52.740 --> 00:05:55.120
If your issue matches, add your
support information to

00:05:55.120 --> 00:05:55.840
that thread.

00:05:55.840 --> 00:05:58.370
If there is no existing report
of an issue, go ahead and

00:05:58.370 --> 00:05:59.160
create a new one.

00:05:59.160 --> 00:06:02.630
And then please put your
project key in there.

00:06:02.630 --> 00:06:06.210
That really helps us look at the
server logs to see if the

00:06:06.210 --> 00:06:07.960
errors that you've been getting,
if we're able to

00:06:07.960 --> 00:06:08.770
catch any of those.

00:06:08.770 --> 00:06:12.730
And then we can dig in and have
our engineering team work

00:06:12.730 --> 00:06:15.060
and really investigate better.

00:06:15.060 --> 00:06:16.800
So that's key.

00:06:16.800 --> 00:06:17.660
Let's see.

00:06:17.660 --> 00:06:19.520
Back to the release
notes here.

00:06:19.520 --> 00:06:23.220
So one big thing is, you might
have noticed that your users

00:06:23.220 --> 00:06:25.050
are having problems installing
your scripts

00:06:25.050 --> 00:06:26.330
from the Script Gallery.

00:06:26.330 --> 00:06:30.010
And this is if you had onInstall
functions in there.

00:06:30.010 --> 00:06:33.830
So we looked at the issue,
and we provided a fix.

00:06:33.830 --> 00:06:37.420
And that should be good
to go right now.

00:06:37.420 --> 00:06:40.360
A couple of improvements
to Ui App.

00:06:40.360 --> 00:06:45.970
So some of the widgets there
weren't 100% in parity with

00:06:45.970 --> 00:06:47.790
their good counterparts.

00:06:47.790 --> 00:06:51.490
So for example, PopupPanel,
we added the show and hide

00:06:51.490 --> 00:06:56.360
methods so that you can
actually use it now.

00:06:56.360 --> 00:06:58.890
So setFocus.

00:06:58.890 --> 00:07:00.040
Let's see.

00:07:00.040 --> 00:07:01.960
Added client handlers
for the ListBox.

00:07:05.520 --> 00:07:06.620
That's good for this release.

00:07:06.620 --> 00:07:09.360
You want to take this February
14 release here?

00:07:09.360 --> 00:07:11.810
DAN LAZIN: Sure thing.

00:07:11.810 --> 00:07:16.450
In the February 14 release of
Apps Script, we added an

00:07:16.450 --> 00:07:20.590
openByUrl method to DocumentApp,
as you can see

00:07:20.590 --> 00:07:22.160
right here.

00:07:22.160 --> 00:07:25.500
You have noticed we've sort of
rolled that out to a variety

00:07:25.500 --> 00:07:28.955
of our services over the
last couple of months.

00:07:28.955 --> 00:07:30.570
It's just a convenience
factor.

00:07:30.570 --> 00:07:32.370
You can always open them
by ID as well.

00:07:32.370 --> 00:07:35.730
But now you don't have to snip
out the ID from the URL and

00:07:35.730 --> 00:07:36.710
paste that into Script.NET.

00:07:36.710 --> 00:07:38.330
Just grab the entire URL.

00:07:38.330 --> 00:07:42.360
It's a lot easier, especially
if you have scripts that are

00:07:42.360 --> 00:07:45.570
requiring other users to sort
of tell you what documents

00:07:45.570 --> 00:07:48.010
they want to interact with.

00:07:48.010 --> 00:07:49.920
End users sometimes don't
understand about grabbing just

00:07:49.920 --> 00:07:50.880
the key out of the URL.

00:07:50.880 --> 00:07:53.300
So now you can dump in the
entire URL as a string.

00:07:53.300 --> 00:07:53.840
Very handy.

00:07:53.840 --> 00:07:54.470
KALYAN REDDY: That's
a good point.

00:07:54.470 --> 00:07:57.280
And what he was referring to is
that we also added this to

00:07:57.280 --> 00:07:57.940
spreadsheet apps.

00:07:57.940 --> 00:08:00.940
So you can have a user just put
in their entire URL and

00:08:00.940 --> 00:08:01.620
then have it there.

00:08:01.620 --> 00:08:04.060
You don't have to do any weird
regex behind the scenes to

00:08:04.060 --> 00:08:06.230
extract after the key equals.

00:08:06.230 --> 00:08:07.140
Whatever that thing is.

00:08:07.140 --> 00:08:08.080
It's simpler.

00:08:08.080 --> 00:08:11.060
DAN LAZIN: Yep, exactly.

00:08:11.060 --> 00:08:15.080
And just a few small fixes
in this release.

00:08:15.080 --> 00:08:19.450
The makeCopy method of the file
service doesn't give you

00:08:19.450 --> 00:08:22.000
an error anymore when you're
creating a new Google form.

00:08:22.000 --> 00:08:25.080
You might have noticed, a few
weeks ago in Google Apps we

00:08:25.080 --> 00:08:31.220
rolled out a new revision of
our forms application.

00:08:31.220 --> 00:08:32.419
Much more powerful now.

00:08:32.419 --> 00:08:33.710
Much more configurable.

00:08:33.710 --> 00:08:37.132
And we're just catching up to
make sure we're supporting the

00:08:37.132 --> 00:08:38.510
same file type as them.

00:08:38.510 --> 00:08:42.830
So you can interact with those
at a basic level now through

00:08:42.830 --> 00:08:44.080
file there.

00:08:46.180 --> 00:08:49.670
And a couple more changes
to error messages.

00:08:49.670 --> 00:08:51.850
This last one here, which
was Issue 747.

00:08:51.850 --> 00:08:54.230
It's actually a really
nice change.

00:08:54.230 --> 00:08:56.830
What this says is, error
messages now specify in which

00:08:56.830 --> 00:08:59.610
code file the error occurred.

00:08:59.610 --> 00:09:02.370
So now when you're running a
script in the Script Editor

00:09:02.370 --> 00:09:04.950
and you get this red bar across
the top that says, hey,

00:09:04.950 --> 00:09:05.810
there was an error.

00:09:05.810 --> 00:09:07.350
It used to just tell you what
line number it was.

00:09:07.350 --> 00:09:09.870
But if you had multiple lines
of code, or if you had

00:09:09.870 --> 00:09:11.530
multiple code files in
your project, it

00:09:11.530 --> 00:09:12.620
wouldn't tell you--

00:09:12.620 --> 00:09:13.380
it was line 50.

00:09:13.380 --> 00:09:15.770
But you didn't know if it was
line 50 in your first file,

00:09:15.770 --> 00:09:17.280
your second file, or
your third file.

00:09:17.280 --> 00:09:19.380
Now it explicitly tells you
what file it's in as well.

00:09:19.380 --> 00:09:23.090
Makes it much easier to go
through and look for errors.

00:09:23.090 --> 00:09:23.940
KALYAN REDDY: That's
a huge change.

00:09:23.940 --> 00:09:25.720
Especially for people who are
developing these massive

00:09:25.720 --> 00:09:26.820
scripts now.

00:09:26.820 --> 00:09:30.870
And reducing the complexity by
having different files to

00:09:30.870 --> 00:09:32.030
organize your logic.

00:09:32.030 --> 00:09:34.790
Now this makes it much,
much easier.

00:09:34.790 --> 00:09:37.130
DAN LAZIN: And keep in mind
as well, that if you're--

00:09:37.130 --> 00:09:40.400
for our sort of newer users,
if you're using, if you're

00:09:40.400 --> 00:09:45.290
running into bugs, in addition
to just looking at the error

00:09:45.290 --> 00:09:48.976
message popup, there is a
debugger function in the

00:09:48.976 --> 00:09:51.490
script editor that not a lot
of new users know about.

00:09:51.490 --> 00:09:52.790
Just a little bug icon.

00:09:52.790 --> 00:09:56.910
It's like a debugger you'd find
in Visual Studio or CLIPS

00:09:56.910 --> 00:09:58.360
or any sort of real IDE.

00:09:58.360 --> 00:10:00.740
It allows you to set rate
points, walk through your

00:10:00.740 --> 00:10:02.880
stuff, inspect your variables
as they're going.

00:10:02.880 --> 00:10:04.250
It's really useful.

00:10:04.250 --> 00:10:07.880
KALYAN REDDY: And actually,
maybe the next "Crash Course"

00:10:07.880 --> 00:10:10.070
should be about the various
debugging techniques.

00:10:10.070 --> 00:10:10.730
DAN LAZIN: But that's
a great idea.

00:10:10.730 --> 00:10:11.110
There's a lot of
hidden secrets.

00:10:11.110 --> 00:10:12.260
KALYAN REDDY: Because there
is the debugger.

00:10:12.260 --> 00:10:14.620
There's other things you
can do, like if you're

00:10:14.620 --> 00:10:16.390
investigating the doGet flow.

00:10:16.390 --> 00:10:19.890
You can drive it by building
like a test function and

00:10:19.890 --> 00:10:21.220
calling it with certain
parameters.

00:10:21.220 --> 00:10:23.510
You can do that with any
function that expects

00:10:23.510 --> 00:10:25.540
parameters, by the way.

00:10:25.540 --> 00:10:27.480
So maybe we'll do another
episode later--

00:10:27.480 --> 00:10:28.530
DAN LAZIN: That's
a great idea.

00:10:28.530 --> 00:10:30.230
KALYAN REDDY: --where we show
the various methods.

00:10:30.230 --> 00:10:30.900
DAN LAZIN: Yeah, there
are lots of little

00:10:30.900 --> 00:10:31.890
secrets in Apps Script.

00:10:31.890 --> 00:10:35.980
Like even just the keyboard
shortcuts to run a function to

00:10:35.980 --> 00:10:36.990
open the logger.

00:10:36.990 --> 00:10:38.480
KALYAN REDDY: Ah,
Control-Enter.

00:10:38.480 --> 00:10:39.420
DAN LAZIN: Yeah.

00:10:39.420 --> 00:10:42.130
There's a keyboard shortcut
to automatically

00:10:42.130 --> 00:10:43.650
indent your code file.

00:10:43.650 --> 00:10:46.310
And some of these things are
great hidden secrets.

00:10:46.310 --> 00:10:49.060
So we should tell you about
those other things.

00:10:49.060 --> 00:10:49.480
KALYAN REDDY: Exactly.

00:10:49.480 --> 00:10:50.100
Let's see.

00:10:50.100 --> 00:10:51.405
We've got to get to the
moderator pretty

00:10:51.405 --> 00:10:52.220
soon, but let's see.

00:10:52.220 --> 00:10:55.360
Is there anything we want
to highlight here?

00:10:55.360 --> 00:10:58.560
Set colors up here.

00:10:58.560 --> 00:11:00.210
DAN LAZIN: The February 25
release is mostly just

00:11:00.210 --> 00:11:02.360
catching up with breakages.

00:11:02.360 --> 00:11:03.680
KALYAN REDDY: Yeah, some
bug fixes there.

00:11:03.680 --> 00:11:04.560
Some good stuff there.

00:11:04.560 --> 00:11:07.400
So if you're interested in any
of these or these issues apply

00:11:07.400 --> 00:11:09.660
to you, we try to update
each of our issue

00:11:09.660 --> 00:11:11.410
logs with the fix.

00:11:11.410 --> 00:11:15.020
And you don't necessarily get
the notification if you

00:11:15.020 --> 00:11:18.100
weren't one of the people who
originated the issue or cc'd

00:11:18.100 --> 00:11:19.840
and added your information
to the issue.

00:11:19.840 --> 00:11:21.330
So go ahead and check
the release notes.

00:11:21.330 --> 00:11:23.050
And then you'll find out
good information, like

00:11:23.050 --> 00:11:24.860
what we just said.

00:11:24.860 --> 00:11:25.150
Let's see.

00:11:25.150 --> 00:11:25.990
Let's go to the moderator.

00:11:25.990 --> 00:11:28.200
Jump to the moderator here
and see what we have.

00:11:28.200 --> 00:11:28.700
Good.

00:11:28.700 --> 00:11:30.230
We've got a couple of
questions here.

00:11:39.060 --> 00:11:39.630
OK.

00:11:39.630 --> 00:11:47.550
So it looks like we've got a
question here on ScriptApp.

00:11:47.550 --> 00:11:49.780
"Any plan or hope on
getting ScriptApp

00:11:49.780 --> 00:11:51.780
service fixed or updated?

00:11:51.780 --> 00:11:54.290
So we can manage script
versions, library versions,

00:11:54.290 --> 00:11:57.510
deploy as web app, setting who
can access, et cetera.

00:11:57.510 --> 00:12:00.970
This is a must to deploy web
apps to other domains."

00:12:00.970 --> 00:12:03.030
Good question.

00:12:03.030 --> 00:12:05.860
Good point.

00:12:05.860 --> 00:12:08.090
Off the top of my head, I don't
exactly know what the

00:12:08.090 --> 00:12:11.200
current functionality, like the
complete functionality of

00:12:11.200 --> 00:12:11.780
ScriptApp is.

00:12:11.780 --> 00:12:15.310
I've been able to do a lot of
simple stuff with ScriptApp

00:12:15.310 --> 00:12:15.990
programmatically.

00:12:15.990 --> 00:12:17.740
But maybe it's not fitting
your needs.

00:12:17.740 --> 00:12:18.710
And it's understandable.

00:12:18.710 --> 00:12:22.050
If you're managing huge domains,
there's other use

00:12:22.050 --> 00:12:25.310
cases that we might not have
anticipated previously.

00:12:25.310 --> 00:12:28.750
So if you are running into a
wall anywhere, please check

00:12:28.750 --> 00:12:29.650
the Issue Tracker.

00:12:29.650 --> 00:12:32.990
See if an enhancement request
has already been posted.

00:12:32.990 --> 00:12:35.090
And if it hasn't, bring it up.

00:12:35.090 --> 00:12:37.520
And we do monitor that.

00:12:37.520 --> 00:12:38.340
There is a big list there.

00:12:38.340 --> 00:12:40.390
But it's because we want other
users to see those as

00:12:40.390 --> 00:12:42.660
well and star them.

00:12:42.660 --> 00:12:45.230
So if there isn't an issue
originated for this, please

00:12:45.230 --> 00:12:45.800
originate it.

00:12:45.800 --> 00:12:50.050
And if you're another user who
sees this issue, raise the

00:12:50.050 --> 00:12:50.720
star count for it.

00:12:50.720 --> 00:12:53.840
Because the more stars an issue
has, the more importance

00:12:53.840 --> 00:12:57.200
that we present it to
the Eng team with.

00:12:57.200 --> 00:12:59.210
Because we'd love to implement
every one of

00:12:59.210 --> 00:13:00.130
these feature requests.

00:13:00.130 --> 00:13:03.620
But the fact is, we
have bug fixes.

00:13:03.620 --> 00:13:06.280
We have other features that
are higher priority.

00:13:06.280 --> 00:13:10.930
It's just, we need to prioritize
things such that we

00:13:10.930 --> 00:13:14.740
are using our time wisely.

00:13:14.740 --> 00:13:18.690
And we're improving the product
in the greatest

00:13:18.690 --> 00:13:20.930
amount, every iteration.

00:13:20.930 --> 00:13:21.540
DAN LAZIN: Exactly.

00:13:21.540 --> 00:13:24.900
And a reminder when you're
putting in a request for an

00:13:24.900 --> 00:13:27.580
enhancement like this, it's best
to split up sort of into

00:13:27.580 --> 00:13:28.640
individual parts.

00:13:28.640 --> 00:13:33.160
We would love to do everything
we can to make ScriptApp meet

00:13:33.160 --> 00:13:36.310
every use case possible, but if
we sort of chunk it up into

00:13:36.310 --> 00:13:38.240
smaller requests.

00:13:38.240 --> 00:13:43.260
In this question here, managing
script versions as

00:13:43.260 --> 00:13:45.510
one ScriptApp function, managing
library versions as

00:13:45.510 --> 00:13:46.660
another ScriptApp function.

00:13:46.660 --> 00:13:48.860
Those may be different amounts
of work, and we can maybe

00:13:48.860 --> 00:13:50.370
prioritize them separately.

00:13:50.370 --> 00:13:56.280
So small, really achievable
requests are our preference.

00:13:56.280 --> 00:13:57.544
KALYAN REDDY: And here's
one I was looking

00:13:57.544 --> 00:13:58.645
at this just briefly.

00:13:58.645 --> 00:14:02.680
"Hello, could you help me with
the Contacts API version 3

00:14:02.680 --> 00:14:05.910
access to users across a domain
using Apps Script?

00:14:05.910 --> 00:14:07.640
More details and sample code
in this topic." So I

00:14:07.640 --> 00:14:08.490
looked at the topic.

00:14:08.490 --> 00:14:12.340
And it's basically a posting
of trying to do two-legged

00:14:12.340 --> 00:14:17.380
OAuth in order to query
the Contacts API.

00:14:17.380 --> 00:14:19.860
I'm not that familiar with
directly querying the Contacts

00:14:19.860 --> 00:14:22.110
API, but you should
be able to.

00:14:22.110 --> 00:14:24.620
If you can do it with a web
browser, you should be able to

00:14:24.620 --> 00:14:27.120
do it similarly with the
URL fetch and other

00:14:27.120 --> 00:14:28.820
mechanisms as well.

00:14:28.820 --> 00:14:32.540
I believe your problem might
be that you might not be

00:14:32.540 --> 00:14:37.570
implementing the whole OAuth
dance process correctly.

00:14:37.570 --> 00:14:39.950
One of my coworkers,
[INAUDIBLE], he actually

00:14:39.950 --> 00:14:45.620
recently was able to come up
with a nice sample that shows

00:14:45.620 --> 00:14:46.770
how to do this whole thing.

00:14:46.770 --> 00:14:50.780
So I'll dig that up and I'll try
to get back to you on the

00:14:50.780 --> 00:14:52.000
Stack Overflow post, I guess.

00:14:52.000 --> 00:14:53.950
DAN LAZIN: Yeah, that's
a great idea.

00:14:53.950 --> 00:14:55.260
KALYAN REDDY: Maybe
that'll help you.

00:14:55.260 --> 00:14:57.420
Once you get the OAuth thing
working, then you should be

00:14:57.420 --> 00:15:00.360
able to do everything
you can normally.

00:15:00.360 --> 00:15:02.570
Let's see.

00:15:02.570 --> 00:15:05.750
"We develop many intranet
sites with Google Sites.

00:15:05.750 --> 00:15:07.750
Unfortunately, Apps Script
gadgets take a long time to

00:15:07.750 --> 00:15:10.130
initially render when embedded
in a Google site.

00:15:10.130 --> 00:15:12.700
The same gadget works much
faster outside of Sites.

00:15:12.700 --> 00:15:17.830
Do you have any plans to speed
up the execution?"

00:15:17.830 --> 00:15:22.220
So I guess this question is
saying that if you built a UI

00:15:22.220 --> 00:15:26.210
in HTML service or UI app, if
you just expose it as a web

00:15:26.210 --> 00:15:29.170
app, it's coming up much faster
than if you put it as a

00:15:29.170 --> 00:15:30.080
gadget in the site.

00:15:30.080 --> 00:15:32.220
DAN LAZIN: I haven't run into
that issue myself, but--

00:15:32.220 --> 00:15:35.080
KALYAN REDDY: I haven't come
across this reported before.

00:15:35.080 --> 00:15:38.310
So if you can actually quantify
this difference-- and

00:15:38.310 --> 00:15:43.170
it's not just one random
instance on a day which varies

00:15:43.170 --> 00:15:46.640
on server load, but it's
consistently happening--

00:15:46.640 --> 00:15:50.520
post us a small sample on the
Issue Tracker of an example UI

00:15:50.520 --> 00:15:51.500
that you're using.

00:15:51.500 --> 00:15:53.600
And we'll definitely
test it out.

00:15:53.600 --> 00:15:55.800
We'll test it as a web
app and as a site.

00:15:55.800 --> 00:15:59.000
And if there is a bottleneck,
oftentimes there are things

00:15:59.000 --> 00:16:03.940
you can do in code that makes
it render faster.

00:16:03.940 --> 00:16:07.860
We can analyze the bottlenecks
as well and get back to you

00:16:07.860 --> 00:16:08.720
with some feedback.

00:16:08.720 --> 00:16:13.290
So go ahead and distill that
down into a small sample, and

00:16:13.290 --> 00:16:14.450
then post it on the
Issue Tracker.

00:16:14.450 --> 00:16:16.470
And then we'd love to help
you out on that.

00:16:16.470 --> 00:16:20.280
DAN LAZIN: And if you're using
HTML service, there's a few

00:16:20.280 --> 00:16:23.470
tricks you can use to, not even
necessarily get the app

00:16:23.470 --> 00:16:25.030
to render faster, but appear
to be a little more

00:16:25.030 --> 00:16:26.030
responsive.

00:16:26.030 --> 00:16:29.810
If you make more dynamic
requests and there's rendering

00:16:29.810 --> 00:16:32.330
sort of a small amount and then
fetching your data later,

00:16:32.330 --> 00:16:35.320
users will at least see that
something's happening and give

00:16:35.320 --> 00:16:36.640
them a spin or something rather
than just waiting for

00:16:36.640 --> 00:16:38.220
the entire thing to load.

00:16:38.220 --> 00:16:38.650
KALYAN REDDY: Exactly.

00:16:38.650 --> 00:16:41.590
That's a great idea.

00:16:41.590 --> 00:16:45.260
Unfortunately, I think we're
out of our scheduled time.

00:16:45.260 --> 00:16:48.470
We apologize again for the
technical difficulties in

00:16:48.470 --> 00:16:49.550
starting this.

00:16:49.550 --> 00:16:53.480
Next "Apps Unscripted" will not
be quite as unscripted.

00:16:53.480 --> 00:16:54.610
DAN LAZIN: That's why we
call it "Unscripted."

00:16:54.610 --> 00:16:55.080
KALYAN REDDY: Yeah.

00:16:55.080 --> 00:16:55.680
Yeah.

00:16:55.680 --> 00:16:56.950
So tune into that.

00:16:56.950 --> 00:17:00.630
And we might actually do the
"Crash Course" on debugger.

00:17:00.630 --> 00:17:02.020
So look out for that.

00:17:02.020 --> 00:17:05.890
If you follow any of us on +
or if you follow the Google

00:17:05.890 --> 00:17:07.670
Developers channel, we're
going to post

00:17:07.670 --> 00:17:08.520
reminders for this.

00:17:08.520 --> 00:17:10.690
Put it on your calendar.

00:17:10.690 --> 00:17:13.200
And we'd love to have you
at our next episode.

00:17:13.200 --> 00:17:15.609
So thanks for joining in.

00:17:15.609 --> 00:17:17.010
DAN LAZIN: Once again,
I'm Dan Lazin.

00:17:17.010 --> 00:17:17.540
KALYAN REDDY: And I'm
Kalyan Reddy.

00:17:17.540 --> 00:17:18.609
DAN LAZIN: This is
Kalyan Reddy.

00:17:18.609 --> 00:17:20.079
He knows his own name.

00:17:20.079 --> 00:17:21.680
It's amazing, this guy.

00:17:21.680 --> 00:17:22.420
KALYAN REDDY: All right, guys,

00:17:22.420 --> 00:17:22.530
DAN LAZIN: Take care.

00:17:22.530 --> 00:17:23.780
KALYAN REDDY: See
you next time.

