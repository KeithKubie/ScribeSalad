WEBVTT
Kind: captions
Language: en

00:00:00.370 --> 00:00:03.590
For an operating system to manage processes,

00:00:03.590 --> 00:00:06.520
it has to have some kind of idea of what they are doing.

00:00:06.520 --> 00:00:10.980
If the operating system stops a process, it must know what it was doing when it

00:00:10.980 --> 00:00:15.340
was stopped so that it can restart it from the exact same point.

00:00:15.340 --> 00:00:18.820
So how does an operating system know what a process is doing?

00:00:18.820 --> 00:00:21.500
Let's think about the underlying hardware, the CPU, and

00:00:21.500 --> 00:00:24.460
think how it executes applications.

00:00:24.460 --> 00:00:29.500
Applications, before they can execute, their source code must be compiled, and

00:00:29.500 --> 00:00:30.871
a binary is produced.

00:00:30.871 --> 00:00:33.007
The binary is a sequence of instructions, and

00:00:33.007 --> 00:00:35.434
they're not necessarily executed sequentially.

00:00:35.434 --> 00:00:37.384
There may be some jumps, loops, or

00:00:37.384 --> 00:00:42.120
even there may be interrupts that will interrupt the execution of the binary.

00:00:42.120 --> 00:00:45.710
At any given point of time, the CPU needs to know where in

00:00:45.710 --> 00:00:50.420
this instruction sequence the process currently is.

00:00:50.420 --> 00:00:53.427
So we call this the program counter, PC.

00:00:53.427 --> 00:00:56.880
The program counter is actually maintained on

00:00:56.880 --> 00:01:01.340
the CPU while the process is executing in a register.

00:01:01.340 --> 00:01:04.269
And there are other registers that are maintained on the CPU.

00:01:05.400 --> 00:01:08.020
This whole value is necessary during the execution.

00:01:08.020 --> 00:01:10.940
They may have information like addresses for data.

00:01:10.940 --> 00:01:13.570
Or they may have some status information that

00:01:13.570 --> 00:01:16.570
somehow affects the execution of the sequence.

00:01:16.570 --> 00:01:19.900
So these are also part of the state of the process.

00:01:19.900 --> 00:01:22.870
Another piece of state that defines what a process is

00:01:22.870 --> 00:01:25.800
doing is the process stack.

00:01:25.800 --> 00:01:30.390
And the top of the stack is defined by the stack pointer.

00:01:30.390 --> 00:01:34.990
We need to know the top of the stack because we said the stack exhibits this

00:01:34.990 --> 00:01:41.480
last in, first out behavior, so whatever item was the last one to come on top of

00:01:41.480 --> 00:01:46.320
the stack needs to be the very first item that we can retrieve from the stack.

00:01:46.320 --> 00:01:49.710
But the stack pointer maintains this information.

00:01:49.710 --> 00:01:51.210
And similarly, there are other bits and

00:01:51.210 --> 00:01:55.670
pieces of information that help the operating system know what

00:01:55.670 --> 00:01:59.190
a process is actually doing at a particular point of time.

00:01:59.190 --> 00:02:03.430
To maintain all of this useful information for every single process,

00:02:03.430 --> 00:02:07.890
the operating system maintains what we call a process control block, or a PCB.

