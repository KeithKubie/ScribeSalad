WEBVTT
Kind: captions
Language: en

00:00:00.505 --> 00:00:02.880
SPEAKER 1: We're here at Google
I/O '19, and I'm Jessica.

00:00:02.880 --> 00:00:05.414
I'm standing right in front of
the Google Assistant Sandbox,

00:00:05.414 --> 00:00:08.039
where there's tons of cool demos
and people we could chat with.

00:00:08.039 --> 00:00:08.760
Let's go inside.

00:00:11.470 --> 00:00:14.100
We're inside the now, and
we're here with [INAUDIBLE]..

00:00:14.100 --> 00:00:16.140
[INAUDIBLE],, tell me
about Google Assistant.

00:00:16.140 --> 00:00:16.960
SPEAKER 2: Hi.

00:00:16.960 --> 00:00:21.130
So the Google Assistant is an
AI-powered digital assistant

00:00:21.130 --> 00:00:23.140
that is kind of your
own little assistant

00:00:23.140 --> 00:00:24.520
with the power of Google.

00:00:24.520 --> 00:00:27.260
And the purpose of it is to
help users get things done.

00:00:27.260 --> 00:00:27.740
SPEAKER 1: That's awesome.

00:00:27.740 --> 00:00:29.907
So how can users interact
with the Google Assistant?

00:00:29.907 --> 00:00:31.360
On what mediums?

00:00:31.360 --> 00:00:33.340
SPEAKER 2: So right now,
the Google Assistant

00:00:33.340 --> 00:00:36.310
is available across
over 1 billion devices

00:00:36.310 --> 00:00:39.050
and over 1,500 types of devices.

00:00:39.050 --> 00:00:42.070
So this is everything from
voice-activated speakers,

00:00:42.070 --> 00:00:44.675
smart displays,
wearables, headphones.

00:00:44.675 --> 00:00:46.550
SPEAKER 1: Oh my gosh,
that's super exciting.

00:00:46.550 --> 00:00:48.550
So here in the Sand
Dome today that we have,

00:00:48.550 --> 00:00:49.923
what are we showing off?

00:00:49.923 --> 00:00:51.340
SPEAKER 2: So in
this space, we're

00:00:51.340 --> 00:00:54.130
showing different device
types that developers

00:00:54.130 --> 00:00:56.590
can build for--
anything from voice-only

00:00:56.590 --> 00:00:58.030
to voice and screens.

00:00:58.030 --> 00:00:59.805
But around the
entire sandbox, we're

00:00:59.805 --> 00:01:01.180
actually showing
new integrations

00:01:01.180 --> 00:01:04.780
for everything for Android
developers, web and video

00:01:04.780 --> 00:01:07.780
developers, device
developers, and

00:01:07.780 --> 00:01:09.390
Assistant-specific developers.

00:01:09.390 --> 00:01:10.330
SPEAKER 1: Oh my gosh,
that's super cool.

00:01:10.330 --> 00:01:12.705
Thank you so much, [INAUDIBLE],,
for hanging out with us.

00:01:12.705 --> 00:01:14.425
Really appreciate it.

00:01:14.425 --> 00:01:15.800
We're here you in
the App Actions

00:01:15.800 --> 00:01:18.258
section of the Sand Dome, and
we're here with [INAUDIBLE]..

00:01:18.258 --> 00:01:20.237
[INAUDIBLE],, what
are app actions?

00:01:20.237 --> 00:01:22.320
SPEAKER 3: App Actions let
you shortcut your users

00:01:22.320 --> 00:01:23.987
into different parts
of your Android app

00:01:23.987 --> 00:01:25.740
using the power of
the Google Assistant.

00:01:25.740 --> 00:01:27.000
SPEAKER 1: Oh my gosh,
that sounds so exciting.

00:01:27.000 --> 00:01:28.542
So as an Android
developer, what do I

00:01:28.542 --> 00:01:30.530
have to do in order
to connect my Android

00:01:30.530 --> 00:01:31.690
app to Google Assistant?

00:01:31.690 --> 00:01:33.690
SPEAKER 3: Yeah, so the
steps are really simple.

00:01:33.690 --> 00:01:36.133
So first, Google has these
things called built-in intents.

00:01:36.133 --> 00:01:37.550
And what they do
is they take care

00:01:37.550 --> 00:01:39.750
of all the natural language
understanding for you,

00:01:39.750 --> 00:01:42.220
and they'll extract different
parameters on your behalf.

00:01:42.220 --> 00:01:45.672
Next, all you do is create
one file called actions.xml.

00:01:45.672 --> 00:01:47.630
And in that file, you
take different parameters

00:01:47.630 --> 00:01:49.340
that we extract from
language for you

00:01:49.340 --> 00:01:51.225
and you map them to
Android deep links.

00:01:51.225 --> 00:01:53.600
Just like that, Google Assistant
can open different parts

00:01:53.600 --> 00:01:55.933
of your app and prefill data
for users, which saves them

00:01:55.933 --> 00:01:57.017
time and saves them taps.

00:01:57.017 --> 00:01:59.100
SPEAKER 1: Oh my gosh,
that sounds super exciting,

00:01:59.100 --> 00:02:01.190
especially when it comes
to not having to handle

00:02:01.190 --> 00:02:02.390
natural language processing.

00:02:02.390 --> 00:02:04.140
Google Assistant
handles that for you.

00:02:04.140 --> 00:02:05.060
That's fantastic.

00:02:05.060 --> 00:02:06.470
So can you tell me about--

00:02:06.470 --> 00:02:09.169
how does that compare
the Android experience

00:02:09.169 --> 00:02:10.550
compared to a voice experience?

00:02:10.550 --> 00:02:12.675
What are the benefits
to that, for a user?

00:02:12.675 --> 00:02:14.300
SPEAKER 3: So for a
user, it allows you

00:02:14.300 --> 00:02:15.840
to get where you want faster.

00:02:15.840 --> 00:02:17.340
So essentially, App
Actions is going

00:02:17.340 --> 00:02:18.617
to save you time and effort.

00:02:18.617 --> 00:02:20.450
So something that might
have taken 10 taps--

00:02:20.450 --> 00:02:22.280
for example, sending
a payment to someone--

00:02:22.280 --> 00:02:24.830
by sending things in natural
language in just one sentence,

00:02:24.830 --> 00:02:26.780
you'll have to avoid saying who
you want to send the money to,

00:02:26.780 --> 00:02:28.670
how much you want
to send, and so on.

00:02:28.670 --> 00:02:30.003
SPEAKER 1: Oh, that's fantastic.

00:02:30.003 --> 00:02:31.548
I know we have a
demo of S'mores,

00:02:31.548 --> 00:02:33.090
and so I know there's
multiple steps.

00:02:33.090 --> 00:02:34.870
Can you tell me a little
bit more about that?

00:02:34.870 --> 00:02:35.030
SPEAKER 3: Yeah.

00:02:35.030 --> 00:02:37.820
So over here we set up a demo
for a s'mores ordering app,

00:02:37.820 --> 00:02:40.040
where you can customize a
delicious s'more, choosing

00:02:40.040 --> 00:02:42.123
things like graham crackers,
chocolate, et cetera.

00:02:42.123 --> 00:02:44.457
And you'll notice that going
through the entire ordering

00:02:44.457 --> 00:02:46.190
flow takes about 10 to 15 taps.

00:02:46.190 --> 00:02:49.280
But using App Actions, you can
try again and say something

00:02:49.280 --> 00:02:51.820
like-- order an Oreo s'more
from the S'mores app--

00:02:51.820 --> 00:02:54.320
and it takes you straight to
the final screen without having

00:02:54.320 --> 00:02:56.810
to go through the full ordering
flow, saving you time and taps.

00:02:56.810 --> 00:02:58.850
SPEAKER 1: Oh my gosh, I could
definitely see for the users

00:02:58.850 --> 00:02:59.670
this being really exciting.

00:02:59.670 --> 00:03:01.010
And then for
developers, this just

00:03:01.010 --> 00:03:03.620
means that users are more likely
to come back to their Android

00:03:03.620 --> 00:03:04.850
app, which is great.

00:03:04.850 --> 00:03:06.600
Thank you so much for
hanging out with us.

00:03:06.600 --> 00:03:09.540
Really appreciate it.

00:03:09.540 --> 00:03:12.170
So we're here in the [INAUDIBLE]
section for how-to guides,

00:03:12.170 --> 00:03:14.030
and I'm here with [? Eileen. ?]
[? Eileen, ?] can you tell me

00:03:14.030 --> 00:03:15.235
all about this space?

00:03:15.235 --> 00:03:17.420
SPEAKER 4: This space is
for content creators who

00:03:17.420 --> 00:03:20.690
wants to bring rich experiences
for Search and Assistant

00:03:20.690 --> 00:03:22.790
by using structured
data program.

00:03:22.790 --> 00:03:25.400
And we have two methods of
building structured data.

00:03:25.400 --> 00:03:27.735
One is web markup, and then
the other is templates.

00:03:27.735 --> 00:03:28.860
SPEAKER 1: That's exciting.

00:03:28.860 --> 00:03:30.620
So if I'm a developer,
and I have a website,

00:03:30.620 --> 00:03:33.078
and I have content on there,
how can I connect that content

00:03:33.078 --> 00:03:34.197
to Google Assistant?

00:03:34.197 --> 00:03:35.280
SPEAKER 4: Great question.

00:03:35.280 --> 00:03:38.870
So basically, all you need
to do is to use a web markup

00:03:38.870 --> 00:03:42.050
and structure your content, and
you would get rich experiences

00:03:42.050 --> 00:03:43.490
on Search and Assistant.

00:03:43.490 --> 00:03:46.118
And specifically for how-to,
we are so happy to announce

00:03:46.118 --> 00:03:48.160
our support of [? how ?]
[? to ?] [? structure ?]

00:03:48.160 --> 00:03:51.110
[? data ?] program as of
yesterday at I/O. And now,

00:03:51.110 --> 00:03:54.200
as a web developer, you can go
ahead and mark up your website

00:03:54.200 --> 00:03:57.350
with text, images, and videos,
and get these rich experiences

00:03:57.350 --> 00:03:59.200
on Search and the Assistant.

00:03:59.200 --> 00:03:59.340
SPEAKER 1: Oh my gosh.

00:03:59.340 --> 00:04:00.840
So you do this
markup language once,

00:04:00.840 --> 00:04:02.820
and it's available not
just on the system,

00:04:02.820 --> 00:04:04.880
but you get rich
displays on Search too?

00:04:04.880 --> 00:04:05.870
SPEAKER 4: Exactly.

00:04:05.870 --> 00:04:07.037
SPEAKER 1: That's fantastic.

00:04:07.037 --> 00:04:09.530
So what if I'm a content
provider or creator

00:04:09.530 --> 00:04:11.360
and I don't have
access to my website,

00:04:11.360 --> 00:04:13.063
or I have a YouTube
video and I want

00:04:13.063 --> 00:04:15.230
to connect all that information
to Google Assistant,

00:04:15.230 --> 00:04:16.138
can that happen?

00:04:16.138 --> 00:04:17.180
SPEAKER 4: Yes, actually.

00:04:17.180 --> 00:04:18.380
Amazing question.

00:04:18.380 --> 00:04:21.279
For that, we have a
solution for templates.

00:04:21.279 --> 00:04:23.600
So specifically, for
the how-to tutorials,

00:04:23.600 --> 00:04:25.610
we build a how-to
video template.

00:04:25.610 --> 00:04:28.160
If you maintain your
content mostly on YouTube,

00:04:28.160 --> 00:04:30.890
you can come and fill
in basic spreadsheet.

00:04:30.890 --> 00:04:34.550
By following the actions
in Google how-to template,

00:04:34.550 --> 00:04:38.150
you can put your YouTube URL,
anchor it by the timestamp,

00:04:38.150 --> 00:04:40.350
add the steps, and
out of the box,

00:04:40.350 --> 00:04:43.630
you would get to rich
Assistant action experiences.

00:04:43.630 --> 00:04:44.630
SPEAKER 1: That's great.

00:04:44.630 --> 00:04:47.255
And so do I have to worry about
the natural language processing

00:04:47.255 --> 00:04:49.895
when it comes to this, or does
Google handle that for me?

00:04:49.895 --> 00:04:51.853
SPEAKER 4: Actually,
Google handles it for you.

00:04:51.853 --> 00:04:53.900
Both for markup
and the templates,

00:04:53.900 --> 00:04:57.080
we take care of natural
language understanding,

00:04:57.080 --> 00:04:59.630
and also, we handle the
discovery of your content.

00:04:59.630 --> 00:05:03.470
You don't need to worry about
anything like NLU or anything

00:05:03.470 --> 00:05:04.700
to do with machine learning.

00:05:04.700 --> 00:05:05.230
SPEAKER 1: That's great.

00:05:05.230 --> 00:05:06.230
And can you tell me
a little bit more

00:05:06.230 --> 00:05:08.000
about the demo that
we have here today?

00:05:08.000 --> 00:05:09.370
SPEAKER 4: Sure, of course.

00:05:09.370 --> 00:05:11.690
So for the demo today, we
built a sample websites,

00:05:11.690 --> 00:05:13.220
how to make an origami.

00:05:13.220 --> 00:05:15.740
For the first method,
we created the website

00:05:15.740 --> 00:05:18.020
and we marked it up, and
for the second method,

00:05:18.020 --> 00:05:21.540
we built a YouTube video
and created a spreadsheet.

00:05:21.540 --> 00:05:23.690
So all the users have to
do is naturally ask how

00:05:23.690 --> 00:05:25.640
to make origami,
and they would get

00:05:25.640 --> 00:05:28.640
these rich experiences without
doing any additional custom

00:05:28.640 --> 00:05:29.300
work.

00:05:29.300 --> 00:05:33.350
And users can engage with
this in a system with voice

00:05:33.350 --> 00:05:36.220
interactions, and this gives
you out-of-the-box speech

00:05:36.220 --> 00:05:37.100
recognition.

00:05:37.100 --> 00:05:37.760
SPEAKER 1: That's fantastic.

00:05:37.760 --> 00:05:39.200
Thank you so much, [? Eileen, ?]
for hanging out with us.

00:05:39.200 --> 00:05:40.080
Really appreciate it.

00:05:40.080 --> 00:05:41.663
SPEAKER 4: Thank you
so much, Jessica.

00:05:41.663 --> 00:05:44.450
SPEAKER 1: OK, let's keep going.

00:05:44.450 --> 00:05:46.690
We're at the Interactive
Canvas section of the Dome,

00:05:46.690 --> 00:05:47.690
and I'm here with Jacob.

00:05:47.690 --> 00:05:49.320
Jacob, can you tell me
more about this space?

00:05:49.320 --> 00:05:50.150
SPEAKER 5: Yeah, absolutely.

00:05:50.150 --> 00:05:52.490
So Interactive Canvas is
a powerful new developer

00:05:52.490 --> 00:05:54.350
capability that lets
our developers get

00:05:54.350 --> 00:05:55.580
full control over
what they're putting

00:05:55.580 --> 00:05:57.080
on the screen of the device.

00:05:57.080 --> 00:05:59.080
You can do this using
existing web technologies,

00:05:59.080 --> 00:06:00.500
and we think it's really
great for building games

00:06:00.500 --> 00:06:01.560
for the Assistant.

00:06:01.560 --> 00:06:03.290
SPEAKER 1: OK, when you say
existing web technologies,

00:06:03.290 --> 00:06:04.890
what type of tools
are we talking about?

00:06:04.890 --> 00:06:05.420
SPEAKER 5: Absolutely.

00:06:05.420 --> 00:06:07.550
So anything that you have
used on the web before--

00:06:07.550 --> 00:06:10.070
[INAUDIBLE] any high-level
frameworks, like Angular--

00:06:10.070 --> 00:06:11.610
all of that works here.

00:06:11.610 --> 00:06:12.590
So if you've built
anything on the web,

00:06:12.590 --> 00:06:14.350
you'll feel right at
home building for Canvas.

00:06:14.350 --> 00:06:15.260
SPEAKER 1: That
is super exciting.

00:06:15.260 --> 00:06:16.927
So if I already have
an Action, and it's

00:06:16.927 --> 00:06:19.030
all about playing games,
can I add this onto that?

00:06:19.030 --> 00:06:19.480
SPEAKER 5: Absolutely.

00:06:19.480 --> 00:06:21.813
So you can think of Interactive
Canvas as a visual layer

00:06:21.813 --> 00:06:23.390
on top of your
conversation Actions.

00:06:23.390 --> 00:06:24.940
So to incorporate it,
it's just a matter

00:06:24.940 --> 00:06:26.230
of adding another
type of response

00:06:26.230 --> 00:06:27.080
in your existing webhook.

00:06:27.080 --> 00:06:27.955
SPEAKER 1: All right.

00:06:27.955 --> 00:06:31.042
And when it comes to designing
this, is this just touch only,

00:06:31.042 --> 00:06:32.500
is this voice, is
it a combination?

00:06:32.500 --> 00:06:33.700
What's the goal of this?

00:06:33.700 --> 00:06:35.908
SPEAKER 5: Yeah, so as you
may have seen in the demo,

00:06:35.908 --> 00:06:38.158
it offers really rich visual
experiences to our users.

00:06:38.158 --> 00:06:40.283
And we're really excited
to see what you can build,

00:06:40.283 --> 00:06:43.000
in terms of combining both voice
and touch into your Actions.

00:06:43.000 --> 00:06:43.933
SPEAKER 1: Awesome.

00:06:43.933 --> 00:06:45.850
Can you tell me more
about this specific demo?

00:06:45.850 --> 00:06:47.740
Because it's all jungle-themed,
and seems really exciting.

00:06:47.740 --> 00:06:49.100
Can you tell me more
about the design?

00:06:49.100 --> 00:06:49.870
SPEAKER 5: Yeah, absolutely.

00:06:49.870 --> 00:06:51.610
So we built this game
to showcase all the fun

00:06:51.610 --> 00:06:53.443
things you can use
Canvas for, and we did it

00:06:53.443 --> 00:06:55.660
in the context of a
jungle-themed adventure game.

00:06:55.660 --> 00:06:56.970
So you go through the jungle.

00:06:56.970 --> 00:06:58.883
You're trying to navigate
through this temple

00:06:58.883 --> 00:06:59.800
and escape eventually.

00:06:59.800 --> 00:07:01.910
But it all turns out it
was a dream all along.

00:07:01.910 --> 00:07:02.770
SPEAKER 1: Oh my gosh,
that's super exciting.

00:07:02.770 --> 00:07:04.390
Well, Jacob, thank you so
much for hanging out with us.

00:07:04.390 --> 00:07:05.070
Really appreciate it.

00:07:05.070 --> 00:07:05.836
SPEAKER 5: Thank you so much.

00:07:05.836 --> 00:07:07.169
SPEAKER 1: OK, let's keep going.

00:07:09.307 --> 00:07:11.140
So we're here in the
Local Home SDK section,

00:07:11.140 --> 00:07:12.160
and I'm here with Carl.

00:07:12.160 --> 00:07:13.880
Carl, can you tell
me about this space?

00:07:13.880 --> 00:07:14.547
SPEAKER 6: Sure.

00:07:14.547 --> 00:07:16.420
So this is the
Local Home SDK area,

00:07:16.420 --> 00:07:18.580
and we're showing a
visual representation

00:07:18.580 --> 00:07:21.220
of the life of a local
query using the local home

00:07:21.220 --> 00:07:24.565
SDK versus the normal cloud
query with the smart home API.

00:07:24.565 --> 00:07:26.440
SPEAKER 1: So what's
different for developers

00:07:26.440 --> 00:07:28.630
when it comes to the local
SDK compared to before?

00:07:28.630 --> 00:07:29.540
SPEAKER 6: Great question.

00:07:29.540 --> 00:07:30.957
So with the smart
home API, that's

00:07:30.957 --> 00:07:33.970
the primary way developers
integrate their smart devices

00:07:33.970 --> 00:07:35.083
to the Google Assistant.

00:07:35.083 --> 00:07:36.750
And that's a
cloud-to-cloud integration.

00:07:36.750 --> 00:07:39.160
Where after a system
processes that command,

00:07:39.160 --> 00:07:41.200
we send it to the
developer to, ultimately,

00:07:41.200 --> 00:07:43.030
fulfill it to the end device.

00:07:43.030 --> 00:07:45.130
With the local home
SDK, now we give them

00:07:45.130 --> 00:07:47.140
the ability to do that
same fulfillment over

00:07:47.140 --> 00:07:49.510
on the user's
local area network,

00:07:49.510 --> 00:07:51.703
providing huge increases
in speed and reliability.

00:07:51.703 --> 00:07:52.620
SPEAKER 1: Oh my gosh.

00:07:52.620 --> 00:07:54.400
I can definitely see from
the user's perspective,

00:07:54.400 --> 00:07:55.750
it'd be a lot faster, right?

00:07:55.750 --> 00:07:56.290
SPEAKER 6: Totally.

00:07:56.290 --> 00:07:58.700
Yeah, because now we don't
need to go to multiple clouds.

00:07:58.700 --> 00:08:01.127
We can do this a lot faster
on the local network.

00:08:01.127 --> 00:08:01.960
SPEAKER 1: OK, Carl.

00:08:01.960 --> 00:08:03.280
Can you show us a demo?

00:08:03.280 --> 00:08:05.050
SPEAKER 6: Absolutely.

00:08:05.050 --> 00:08:07.000
So this train
represents the life

00:08:07.000 --> 00:08:09.442
of a local query and
this train represents

00:08:09.442 --> 00:08:11.650
the one that goes from the
cloud-to-cloud integration

00:08:11.650 --> 00:08:13.210
using the smart home API.

00:08:13.210 --> 00:08:15.567
So what we see happens is
when a user says a command.

00:08:15.567 --> 00:08:16.900
For example, turn on the lights.

00:08:20.640 --> 00:08:22.260
Both go to the
Assistant server to be

00:08:22.260 --> 00:08:24.000
processed in the same way.

00:08:24.000 --> 00:08:26.550
But if we know the device
is locally controllable,

00:08:26.550 --> 00:08:29.820
we then send that JSON payload
back down to the Google Home

00:08:29.820 --> 00:08:31.740
device where we pull
up the developers

00:08:31.740 --> 00:08:34.823
JavaScript to process it,
and ultimately fulfill it.

00:08:34.823 --> 00:08:35.490
And there it is.

00:08:35.490 --> 00:08:36.559
The light is on.

00:08:36.559 --> 00:08:38.460
And what we see with
the other train is it

00:08:38.460 --> 00:08:40.900
the cloud-to-cloud
integration still works.

00:08:40.900 --> 00:08:43.210
However, it just takes longer
to get to the same point.

00:08:43.210 --> 00:08:45.660
So this really demonstrates
the increase in speed

00:08:45.660 --> 00:08:47.533
that we can get with
the local home SDK.

00:08:47.533 --> 00:08:48.450
SPEAKER 1: Oh my gosh.

00:08:48.450 --> 00:08:49.230
That's awesome, Carl.

00:08:49.230 --> 00:08:49.850
Thank you so much.

00:08:49.850 --> 00:08:50.530
That was really cool.

00:08:50.530 --> 00:08:51.580
Thanks for chatting with us.

00:08:51.580 --> 00:08:52.695
SPEAKER 6: Thanks for coming by.

00:08:52.695 --> 00:08:53.278
SPEAKER 1: OK.

00:08:53.278 --> 00:08:55.440
Let's keep going.

00:08:55.440 --> 00:08:58.285
We're at the Smart Home section
and I'm talking to [? Omar. ?]

00:08:58.285 --> 00:09:00.160
[? Omar, ?] can you tell
me about this space?

00:09:00.160 --> 00:09:01.530
SPEAKER 7: Yeah, absolutely.

00:09:01.530 --> 00:09:03.123
So what we're
showcasing over here

00:09:03.123 --> 00:09:05.040
is the new functionality
that we have come out

00:09:05.040 --> 00:09:08.430
with for our partners to
utilize to enable an Assistant

00:09:08.430 --> 00:09:10.075
experience for their products.

00:09:10.075 --> 00:09:12.450
SPEAKER 1: So this is all
about marrying kind of hardware

00:09:12.450 --> 00:09:13.770
and Google Assistant, right?

00:09:13.770 --> 00:09:14.687
SPEAKER 7: Absolutely.

00:09:14.687 --> 00:09:17.370
So this is about us being
able to-- or as a user,

00:09:17.370 --> 00:09:19.200
being able to control
the devices that we

00:09:19.200 --> 00:09:21.260
use on a daily basis
in our households.

00:09:21.260 --> 00:09:22.380
SPEAKER 1: And so if
I'm a hardware developer

00:09:22.380 --> 00:09:25.055
and I have this stuff, how do
I connect my hardware to Google

00:09:25.055 --> 00:09:25.555
Assistant?

00:09:25.555 --> 00:09:27.050
What things should
I keep in mind?

00:09:27.050 --> 00:09:27.967
SPEAKER 7: Definitely.

00:09:27.967 --> 00:09:30.030
So what we have is
we have device types

00:09:30.030 --> 00:09:30.880
and we have traits.

00:09:30.880 --> 00:09:31.380
Right.

00:09:31.380 --> 00:09:33.297
So you can think about
it from the perspective

00:09:33.297 --> 00:09:34.180
of a light bulb.

00:09:34.180 --> 00:09:37.478
A light bulb is the identity of
the device, which is the type.

00:09:37.478 --> 00:09:39.270
And you have traits,
which is functionality

00:09:39.270 --> 00:09:40.440
for that light bulb.

00:09:40.440 --> 00:09:41.670
You have brightness.

00:09:41.670 --> 00:09:42.420
You have on/off.

00:09:42.420 --> 00:09:43.410
You have color.

00:09:43.410 --> 00:09:45.060
Once you marry the
two together, you

00:09:45.060 --> 00:09:46.870
have a fairly robust product.

00:09:46.870 --> 00:09:49.650
So what we're asking
our developers to do

00:09:49.650 --> 00:09:52.890
is bring certain hardware that
enables certain functionality

00:09:52.890 --> 00:09:53.710
like that.

00:09:53.710 --> 00:09:56.430
And then using the traits
that we've offered,

00:09:56.430 --> 00:09:58.138
create an Assistant
experience around it.

00:09:58.138 --> 00:09:59.222
SPEAKER 1: That's awesome.

00:09:59.222 --> 00:10:01.420
But as a hardware developer
as I connect everything,

00:10:01.420 --> 00:10:03.470
do I have to worry about
how the user is going

00:10:03.470 --> 00:10:06.150
to interact with my action or is
that something Google Assistant

00:10:06.150 --> 00:10:07.260
handles for me?

00:10:07.260 --> 00:10:10.110
SPEAKER 7: The Google Assistant
will handle that for the user.

00:10:10.110 --> 00:10:13.800
As new languages are supported,
as new locales are enabled,

00:10:13.800 --> 00:10:16.593
all of that is inherited as
part of the smart home track.

00:10:16.593 --> 00:10:18.010
Which is the great
thing about it.

00:10:18.010 --> 00:10:18.270
SPEAKER 1: Oh my gosh.

00:10:18.270 --> 00:10:20.430
I know we have a cookie demo
here and I have a sweet tooth.

00:10:20.430 --> 00:10:22.380
So I'd love for you to talk
more about the cookie demo.

00:10:22.380 --> 00:10:23.490
SPEAKER 7: Absolutely.

00:10:23.490 --> 00:10:25.720
The cookie demo has actually
been very popular today.

00:10:25.720 --> 00:10:28.320
But what we're trying
to showcase with this

00:10:28.320 --> 00:10:31.760
is a very key feature, which
is two-factor authentication.

00:10:31.760 --> 00:10:33.720
Now two-factor
authentication is really

00:10:33.720 --> 00:10:37.170
needed for security devices
like doors, garage doors.

00:10:37.170 --> 00:10:39.540
Anything that could
be a security thing

00:10:39.540 --> 00:10:43.120
needs to have this additional
layer of security on top of it.

00:10:43.120 --> 00:10:45.000
And what we do is we
give you the ability

00:10:45.000 --> 00:10:48.817
to add 2FA to any type of
trait that you've implemented.

00:10:48.817 --> 00:10:49.900
SPEAKER 1: That's amazing.

00:10:49.900 --> 00:10:50.880
Well thank you so
much, [? Omar. ?] I

00:10:50.880 --> 00:10:52.650
really appreciate you
sharing all this with us.

00:10:52.650 --> 00:10:53.567
SPEAKER 7: Absolutely.

00:10:53.567 --> 00:10:55.243
Thank you.

00:10:55.243 --> 00:10:56.160
SPEAKER 1: Oh my gosh.

00:10:56.160 --> 00:10:56.948
That was amazing.

00:10:56.948 --> 00:10:58.740
If you're excited like
me to start building

00:10:58.740 --> 00:11:00.920
for Google Assistant,
check out our docs

00:11:00.920 --> 00:11:03.210
and I'm looking forward to
seeing you guys next year.

00:11:03.210 --> 00:11:06.560
[MUSIC PLAYING]

