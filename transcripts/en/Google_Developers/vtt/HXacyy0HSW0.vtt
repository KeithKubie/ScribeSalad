WEBVTT
Kind: captions
Language: en

00:00:01.540 --> 00:00:03.270
Your users love your app.

00:00:03.270 --> 00:00:05.030
They store all of
their content there.

00:00:05.030 --> 00:00:06.470
They share things.

00:00:06.470 --> 00:00:09.330
They literally squeal in
anticipation and delight

00:00:09.330 --> 00:00:10.945
when there's an
update available.

00:00:10.945 --> 00:00:13.500
They're all your number one fan.

00:00:13.500 --> 00:00:16.059
But then they get a new phone
and use Tap &amp; Go to transfer

00:00:16.059 --> 00:00:17.670
their account and apps across.

00:00:17.670 --> 00:00:20.860
They open up your app
but nothing's there.

00:00:20.860 --> 00:00:23.492
With an Android M, we've turned
on full updates and backup

00:00:23.492 --> 00:00:26.350
for apps, targeting the
end release and above.

00:00:26.350 --> 00:00:28.999
My name is Matthew, working
on Play Services Back

00:00:28.999 --> 00:00:31.665
Up and Restore, and I'm going to
walk you through these changes.

00:00:31.665 --> 00:00:33.600
Not to put words in
your brain, but you

00:00:33.600 --> 00:00:35.950
might be thinking that this
kind of is already handled

00:00:35.950 --> 00:00:37.650
by data syncing frameworks.

00:00:37.650 --> 00:00:39.390
There's Parse, there's
Firebase, there's

00:00:39.390 --> 00:00:42.190
the Android Sync Framework,
the Google Play Games API.

00:00:42.190 --> 00:00:43.791
It's a long list.

00:00:43.791 --> 00:00:45.290
But any data fetching
is going to be

00:00:45.290 --> 00:00:47.350
tied to some sort
of user account

00:00:47.350 --> 00:00:50.890
requiring a login before you
can start pulling down the data.

00:00:50.890 --> 00:00:52.817
Backup and Restore still
requires an account,

00:00:52.817 --> 00:00:54.650
but the account is the
user's Google account

00:00:54.650 --> 00:00:56.160
is set up elsewhere.

00:00:56.160 --> 00:01:00.164
By the time the user enters your
app, the data is already there.

00:01:00.164 --> 00:01:02.455
And then they still need to
consume any welcome screens

00:01:02.455 --> 00:01:04.980
and re-accept any
Terms of Service.

00:01:04.980 --> 00:01:07.550
When an app is restored
from an ancestral device,

00:01:07.550 --> 00:01:09.260
all of the persisted
user state that

00:01:09.260 --> 00:01:11.900
existed on a previous
device, will now

00:01:11.900 --> 00:01:14.960
exist on a new one as
an exact duplicate.

00:01:14.960 --> 00:01:17.300
If you're smart about what
configuration you persist

00:01:17.300 --> 00:01:19.715
and how you persist
it, you can drastically

00:01:19.715 --> 00:01:22.790
shorten you app's
out of box flow.

00:01:22.790 --> 00:01:24.575
The most powerful
part of this is

00:01:24.575 --> 00:01:26.700
that once you build your
app against the MSDK,

00:01:26.700 --> 00:01:28.860
it will just start backing up.

00:01:28.860 --> 00:01:31.589
Let's pause for a moment
to let this sink in.

00:01:31.589 --> 00:01:33.130
It means that with
no further effort,

00:01:33.130 --> 00:01:35.340
as soon as you download
the M developer SDK

00:01:35.340 --> 00:01:39.570
and rebuild your app against it,
your app will start backing up.

00:01:39.570 --> 00:01:42.010
Backups are run,
at most, once a day

00:01:42.010 --> 00:01:44.900
and use the Job Scheduler API
as reintroduced in Lollipop

00:01:44.900 --> 00:01:46.480
to only run when
the device is idle

00:01:46.480 --> 00:01:49.320
and connected to
Wi-Fi and power.

00:01:49.320 --> 00:01:51.720
Your app has no control
over scheduling backups.

00:01:51.720 --> 00:01:53.920
The backed up data
is encrypted at rest

00:01:53.920 --> 00:01:55.460
in the user's
Google Drive account

00:01:55.460 --> 00:01:58.900
and is not counted
against their drive quota.

00:01:58.900 --> 00:02:00.400
For now, we've
capped the data size

00:02:00.400 --> 00:02:03.800
at about 25 megabytes
per app per user.

00:02:03.800 --> 00:02:04.520
Be careful.

00:02:04.520 --> 00:02:08.389
If your app hits this limit,
it will stop backing up.

00:02:08.389 --> 00:02:10.860
Now a restore will
happen at install time.

00:02:10.860 --> 00:02:14.280
Whenever an app is installed and
we have some corresponding data

00:02:14.280 --> 00:02:16.350
present in Drive.

00:02:16.350 --> 00:02:18.224
Restore is not
restricted to apps

00:02:18.224 --> 00:02:19.390
installed by the Play Store.

00:02:19.390 --> 00:02:21.470
Side loading an
app, for example,

00:02:21.470 --> 00:02:25.980
or using a third party app store
will still initiate a restore.

00:02:25.980 --> 00:02:27.990
Whatever connection is
used for the app download

00:02:27.990 --> 00:02:30.440
is also going to be used to
download this extra restored

00:02:30.440 --> 00:02:31.860
data.

00:02:31.860 --> 00:02:32.390
All right.

00:02:32.390 --> 00:02:34.640
We've covered that all apps
targeting [INAUDIBLE] will

00:02:34.640 --> 00:02:37.160
automatically start backing
up with no further effort

00:02:37.160 --> 00:02:38.200
from anybody.

00:02:38.200 --> 00:02:40.569
Let's cover how to opt out.

00:02:40.569 --> 00:02:42.110
If you don't want
to use the feature,

00:02:42.110 --> 00:02:44.100
you can add the
application attributes,

00:02:44.100 --> 00:02:48.020
allow backup, false
to you manifest.

00:02:48.020 --> 00:02:48.520
OK.

00:02:48.520 --> 00:02:51.320
Now that all the lame-ohs have
left to go disable backups,

00:02:51.320 --> 00:02:53.010
let's get to be cool stuff.

00:02:53.010 --> 00:02:55.350
For example, what
not to back up.

00:02:55.350 --> 00:02:57.820
It's not a good idea to back
up certain pieces of data.

00:02:57.820 --> 00:03:02.410
For example, user credentials
or device-specific tokens.

00:03:02.410 --> 00:03:03.980
Let's look at Google
Cloud Messaging.

00:03:03.980 --> 00:03:07.180
When you register your app with
the Cloud Messaging back end,

00:03:07.180 --> 00:03:09.640
you get a device-specific
ID that your server

00:03:09.640 --> 00:03:12.880
uses to push notifications
to that specific device.

00:03:12.880 --> 00:03:16.300
If you try to restore this
ID onto another device,

00:03:16.300 --> 00:03:18.690
it just would not
work, or rather, it

00:03:18.690 --> 00:03:20.910
would work but your
server would just not

00:03:20.910 --> 00:03:23.736
be able to send any
messages to this new device.

00:03:23.736 --> 00:03:25.110
So you really have
to be careful.

00:03:25.110 --> 00:03:28.180
Think about the data that
you're persisting to disk

00:03:28.180 --> 00:03:30.700
and think about how well it
carries over to a completely

00:03:30.700 --> 00:03:32.430
different device.

00:03:32.430 --> 00:03:34.050
We've made it easy
to exclude data

00:03:34.050 --> 00:03:36.440
that you might not want
stored in the Cloud

00:03:36.440 --> 00:03:39.660
or that doesn't make sense
to restore across devices.

00:03:39.660 --> 00:03:42.380
You add a manifest, flag the
points of an XML resource

00:03:42.380 --> 00:03:43.340
files.

00:03:43.340 --> 00:03:44.550
The XML file is easy.

00:03:44.550 --> 00:03:47.640
It's a series of include and
exclude tags, each of which

00:03:47.640 --> 00:03:52.080
specifies either a directory or
a file, along with the domain

00:03:52.080 --> 00:03:54.280
that the data belongs to.

00:03:54.280 --> 00:03:56.290
An Exclude targets
how you would specify

00:03:56.290 --> 00:03:59.490
that you want to ignore a
specific file or directory.

00:03:59.490 --> 00:04:02.360
By default, the backup set
is produced reductively.

00:04:02.360 --> 00:04:04.460
That means you start
with everything

00:04:04.460 --> 00:04:07.640
and then you strip
things out with Excludes.

00:04:07.640 --> 00:04:09.090
Take this example.

00:04:09.090 --> 00:04:11.480
This is saying that I want
to back up my entire data

00:04:11.480 --> 00:04:15.300
directory except for the
device info database.

00:04:15.300 --> 00:04:17.850
Now, in some cases, it's
kind of inconvenient to have

00:04:17.850 --> 00:04:20.730
to enumerate every single
thing you want to exclude.

00:04:20.730 --> 00:04:22.900
So there's also an Include tag.

00:04:22.900 --> 00:04:26.140
Specifying an Include
changes the default behavior

00:04:26.140 --> 00:04:29.730
from back up everything
except whatever I explicitly

00:04:29.730 --> 00:04:34.190
took out, to only back
up the data I ask you to.

00:04:34.190 --> 00:04:35.530
Take this example.

00:04:35.530 --> 00:04:37.430
The only file that
will be backed up is

00:04:37.430 --> 00:04:39.700
my_important_file.txt.

00:04:39.700 --> 00:04:42.750
In other words, having
an Include tag changes

00:04:42.750 --> 00:04:44.820
the backup logic
from being reductive,

00:04:44.820 --> 00:04:47.846
where you start with everything
and remove, to constructive,

00:04:47.846 --> 00:04:52.310
where you start with
nothing and then you add.

00:04:52.310 --> 00:04:54.876
Next, we'll talk about exactly
what these domains are.

00:04:54.876 --> 00:04:57.376
Any time an app
creates a file, it

00:04:57.376 --> 00:04:59.000
isn't going to the
app's root directory

00:04:59.000 --> 00:05:02.160
but rather it goes into some
Files directory underneath.

00:05:02.160 --> 00:05:04.730
Similarly, when you create
a Shared Preferences object,

00:05:04.730 --> 00:05:08.430
it is persisted as an XML file
under some Shared Preference

00:05:08.430 --> 00:05:09.590
directory.

00:05:09.590 --> 00:05:13.890
Same is true for databases
and extra amount of storage.

00:05:13.890 --> 00:05:15.550
Finally, you can
also manipulate data

00:05:15.550 --> 00:05:18.930
that resides within the
root directory of the app.

00:05:18.930 --> 00:05:21.970
When specifying the data that
you want to include or exclude,

00:05:21.970 --> 00:05:23.680
you have to tell your
Backup Manager what

00:05:23.680 --> 00:05:26.600
domain it is or,
put equivalently,

00:05:26.600 --> 00:05:29.250
which directory to look in.

00:05:29.250 --> 00:05:30.280
All righty.

00:05:30.280 --> 00:05:32.250
So hopefully at this
point you're thinking,

00:05:32.250 --> 00:05:35.990
this is so cool and setting it
up up here is pretty simple,

00:05:35.990 --> 00:05:37.520
but it's a little opaque.

00:05:37.520 --> 00:05:40.370
How do I know my data is
properly being backed up?

00:05:40.370 --> 00:05:42.470
What happens if [INAUDIBLE]
is badly formed?

00:05:42.470 --> 00:05:45.820
How can I assure myself that
this thing is actually working?

00:05:45.820 --> 00:05:47.320
We have some more
resources to help.

00:05:47.320 --> 00:05:49.190
I won't get into the
details in this video

00:05:49.190 --> 00:05:51.710
but, if you're interested,
look at the video description

00:05:51.710 --> 00:05:54.930
for instructions to turn on
Verbose Logging within your app

00:05:54.930 --> 00:05:57.230
as well as how to
manually initiate a backup

00:05:57.230 --> 00:06:01.210
and restore and appoint
it to some sample code.

00:06:01.210 --> 00:06:01.800
OK.

00:06:01.800 --> 00:06:03.490
This has been fun
and, with luck,

00:06:03.490 --> 00:06:04.930
if at any point
during this video

00:06:04.930 --> 00:06:06.630
you're worried about
being backed up,

00:06:06.630 --> 00:06:08.210
you're now sitting
more comfortably.

00:06:08.210 --> 00:06:12.160
[MUSIC PLAYING]

