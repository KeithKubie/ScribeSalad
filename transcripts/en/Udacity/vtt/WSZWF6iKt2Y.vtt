WEBVTT
Kind: captions
Language: en

00:00:00.230 --> 00:00:03.530
Okay, so, so we can serve more requests concurrently. That's

00:00:03.530 --> 00:00:07.640
true. So, one of the limiting factors of a website is.

00:00:07.640 --> 00:00:11.220
How many requests a machine can handle at once? You know,

00:00:11.220 --> 00:00:14.210
each, each time a, a user connects to your machine that

00:00:14.210 --> 00:00:17.950
uses what's called a connection. The connections take memory. They

00:00:17.950 --> 00:00:20.250
take CPU to, to deal with. And of course, you know,

00:00:20.250 --> 00:00:22.560
the CPU to handle the requests. So, you know, we want to

00:00:22.560 --> 00:00:26.020
scale so we can handle more requests concurrently. Alright, how about

00:00:26.020 --> 00:00:29.170
storing more data? Yep, that can be a reason to

00:00:29.170 --> 00:00:32.180
scale. Sometimes just storing so much data that it won't fit

00:00:32.180 --> 00:00:34.830
on one machine, or in one, you know, one database.

00:00:34.830 --> 00:00:36.850
Or it won't fit in memory, or you need more disk

00:00:36.850 --> 00:00:41.040
space. You know, there's all sorts of reasons that data

00:00:41.040 --> 00:00:44.740
might be a limiting factor, memory, disk speed. And that's another

00:00:44.740 --> 00:00:47.910
reason to scale. So we're more resilient to failure. Yes,

00:00:47.910 --> 00:00:51.120
absolutely. You know, sometimes you add multiple machines into your system,

00:00:51.120 --> 00:00:53.450
you know, you have multiple databases, we talked about that in

00:00:53.450 --> 00:00:57.210
unit three. We talked about replication. You know re, replication is

00:00:57.210 --> 00:01:00.140
important for databases. So that if, if one of those machine

00:01:00.140 --> 00:01:02.550
dies or goes off flying. You don't lose any data and

00:01:02.550 --> 00:01:06.030
your website still works. Same with your application servers where, where

00:01:06.030 --> 00:01:09.690
your programs are running. Sometimes those break or, you know, go

00:01:09.690 --> 00:01:13.470
offline or become disconnected or for whatever reason aren't accessible. And

00:01:13.470 --> 00:01:16.330
so you have multiple ones, so you're resistant to failure. And,

00:01:16.330 --> 00:01:20.020
finally, to serve more requests faster. Yes, this

00:01:20.020 --> 00:01:22.050
is also an answer. It's similar to serving more

00:01:22.050 --> 00:01:26.150
requests concurrently. Which requires, you know, being, the

00:01:26.150 --> 00:01:29.930
ability to handle multiple connections or many connections. Serving

00:01:29.930 --> 00:01:32.680
requests faster, may require a bigger machine or

00:01:32.680 --> 00:01:35.990
some caching. There's lots of techniques for doing this.

00:01:35.990 --> 00:01:39.160
And that falls under the umbrella of, of scaling.

00:01:39.160 --> 00:01:41.245
So, these are all good reasons to scale. And,

00:01:41.245 --> 00:01:43.690
and they're, they're handful more. But these are the types

00:01:43.690 --> 00:01:45.400
of things we're going to be talking about in this lecture.

