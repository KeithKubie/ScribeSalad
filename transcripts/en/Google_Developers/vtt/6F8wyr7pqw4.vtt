WEBVTT
Kind: captions
Language: en

00:00:02.540 --> 00:00:03.770
PRATIP BANERJI: Sorry
for the delay.

00:00:03.770 --> 00:00:04.960
My name is Pratip Banerji.

00:00:04.960 --> 00:00:08.029
I am a product manager on the
Google eBooks team, focused on

00:00:08.029 --> 00:00:09.410
our syndication efforts.

00:00:09.410 --> 00:00:12.510
And I'm going to be joined by
Kevin Landry, who is our tech

00:00:12.510 --> 00:00:14.530
lead on the books API team.

00:00:14.530 --> 00:00:16.540
We're going to be talking to you
today about "Integrating

00:00:16.540 --> 00:00:20.340
to eBooks: APIs to Sell and Read
eBooks for Affiliates,

00:00:20.340 --> 00:00:23.010
Retailers and Device Makers."

00:00:23.010 --> 00:00:25.140
So high level, what are we
going to cover today?

00:00:25.140 --> 00:00:27.310
I'll give you a high-level
overview of what Google eBooks

00:00:27.310 --> 00:00:30.000
is, and then I'll dive into
some integration details

00:00:30.000 --> 00:00:32.590
around how affiliates, retailers
and devices use our

00:00:32.590 --> 00:00:34.500
Books APIs to integrate
with us.

00:00:34.500 --> 00:00:36.346
I'll hand it off to Kevin,
who'll walk through some of

00:00:36.346 --> 00:00:39.290
the APIs and go into a little
bit of detail around what they

00:00:39.290 --> 00:00:40.140
are and how they work.

00:00:40.140 --> 00:00:42.470
And he'll also walk through
eBook integration.

00:00:42.470 --> 00:00:44.840
And he'll hand it back to me,
and I'll walk through an

00:00:44.840 --> 00:00:47.920
affiliate example integration.

00:00:47.920 --> 00:00:50.090
So let me start off with
a quick video.

00:00:53.390 --> 00:00:55.390
[VIDEO PLAYBACK]

00:00:55.390 --> 00:00:55.890
[MUSIC PLAYING]

00:00:55.890 --> 00:01:00.166
-The book business hasn't
changed very much in

00:01:00.166 --> 00:01:02.260
the past 500 years.

00:01:02.260 --> 00:01:03.740
Someone writes a book.

00:01:03.740 --> 00:01:05.239
Someone publishes it.

00:01:05.239 --> 00:01:07.270
And you buy it and carry it
around until you're done

00:01:07.270 --> 00:01:08.520
reading it.

00:01:08.520 --> 00:01:11.370
Then, if you're a book lover,
you repeat this process for

00:01:11.370 --> 00:01:14.304
lots and lots and
lots of books.

00:01:14.304 --> 00:01:18.460
But in the past ten years, a
very big change has happened.

00:01:18.460 --> 00:01:20.290
Books have gone digital.

00:01:20.290 --> 00:01:23.000
Today there are all kinds of
eBook standards, each with

00:01:23.000 --> 00:01:25.300
their own dedicated e-reader
and their specific place to

00:01:25.300 --> 00:01:26.750
buy eBooks.

00:01:26.750 --> 00:01:30.070
And all lacking one
thing: choice.

00:01:30.070 --> 00:01:32.690
The idea behind Google eBooks
is to truly set your reading

00:01:32.690 --> 00:01:35.160
free from all these
limitations.

00:01:35.160 --> 00:01:37.940
Google eBooks stores your
library safely in the digital

00:01:37.940 --> 00:01:40.240
cloud, which means you get to
shop for all your favorite

00:01:40.240 --> 00:01:44.200
books wherever you want, and
read them wherever you go,

00:01:44.200 --> 00:01:47.651
using pretty much any device
with an internet connection.

00:01:47.651 --> 00:01:50.475
Let's say you wake up one
morning and decide to read The

00:01:50.475 --> 00:01:52.500
Girl with the Dragon Tattoo.

00:01:52.500 --> 00:01:55.210
You might begin the story at
home, on your laptop, over

00:01:55.210 --> 00:01:56.820
coffee and a pastry.

00:01:56.820 --> 00:01:58.710
You'll really be getting hooked
on your tablet on the

00:01:58.710 --> 00:01:59.450
train to work.

00:01:59.450 --> 00:02:02.212
And by noon, you'll be racing
through the chapters on your

00:02:02.212 --> 00:02:04.740
smartphone, when you head
out to grab some lunch.

00:02:04.740 --> 00:02:07.570
Now imagine if you're carrying
around not just one book, but

00:02:07.570 --> 00:02:08.620
a lot of them.

00:02:08.620 --> 00:02:10.949
Like maybe a couple
million of them.

00:02:10.949 --> 00:02:13.380
With Google eBooks, syncing
all your books with your

00:02:13.380 --> 00:02:16.630
devices isn't just simple,
it's automatic.

00:02:16.630 --> 00:02:19.100
You can take a break in the
park with some Stevenson.

00:02:19.100 --> 00:02:21.805
Reference your favorite French
cookbook at the supermarket.

00:02:21.805 --> 00:02:24.560
Get lost with Grisham on
the crosstown bus trip.

00:02:24.560 --> 00:02:27.260
Whenever you open one of your
books, we'll pick up right

00:02:27.260 --> 00:02:29.396
where you left off.

00:02:29.396 --> 00:02:31.840
With millions of books to
choose from, in every

00:02:31.840 --> 00:02:34.640
imaginable category, finding
what you want to read on

00:02:34.640 --> 00:02:36.740
Google eBooks is easy.

00:02:36.740 --> 00:02:39.650
You can check out The New York
Times bestseller list. Browse

00:02:39.650 --> 00:02:42.372
the Google eBooks store, and
find recommended titles or

00:02:42.372 --> 00:02:43.635
free eBooks.

00:02:43.635 --> 00:02:45.650
Discover up-and-coming
authors.

00:02:45.650 --> 00:02:48.600
Or buy eBooks from the growing
number of independent

00:02:48.600 --> 00:02:50.980
booksellers and retail
partners.

00:02:50.980 --> 00:02:53.670
Google eBooks is all
about choice.

00:02:53.670 --> 00:02:56.640
From what you want to read,
where you want to shop, to how

00:02:56.640 --> 00:02:57.410
you want to read.

00:02:57.410 --> 00:02:59.600
That's all your books
in one place.

00:02:59.600 --> 00:03:00.916
No matter where you go.

00:03:00.916 --> 00:03:03.800
That's truly reading unbound.

00:03:03.800 --> 00:03:10.024
Start exploring Google eBooks
at books.google.com/ebooks.

00:03:10.024 --> 00:03:12.210
[END VIDEO PLAYBACK]

00:03:12.210 --> 00:03:14.620
So that gives you a little bit
of an idea of what Google

00:03:14.620 --> 00:03:15.720
eBooks is about.

00:03:15.720 --> 00:03:19.420
But just to add to that, our
goal was to create an open,

00:03:19.420 --> 00:03:21.790
cloud-based e-commerce platform
that allows for the

00:03:21.790 --> 00:03:25.340
browsing, buying, storing
and reading of eBooks.

00:03:25.340 --> 00:03:27.980
We launched the service in
December of last year.

00:03:27.980 --> 00:03:29.860
And one of our guiding
principles was we not only

00:03:29.860 --> 00:03:33.110
wanted to allow our users access
to eBooks, we wanted to

00:03:33.110 --> 00:03:36.690
also support an open ecosystem
that lets our partners play

00:03:36.690 --> 00:03:39.710
and make money in the
digital eBook world.

00:03:39.710 --> 00:03:42.880
So some interesting stats about
our service: We have

00:03:42.880 --> 00:03:45.260
over 5,000 publishers that
have made their titles

00:03:45.260 --> 00:03:47.000
available as Google eBooks.

00:03:47.000 --> 00:03:49.840
And over 3 million Google eBooks
are available, of which

00:03:49.840 --> 00:03:52.360
hundreds of thousands are
available for sale.

00:03:52.360 --> 00:03:55.300
And we have over 200 retail
partners in the US that are

00:03:55.300 --> 00:03:58.640
selling Google eBooks today.

00:03:58.640 --> 00:04:01.220
So let's dive into some detail
around how these partners

00:04:01.220 --> 00:04:02.540
integrate with us.

00:04:02.540 --> 00:04:04.490
So first, who are these
different partners?

00:04:04.490 --> 00:04:06.170
The first set of partners
are affiliates.

00:04:06.170 --> 00:04:08.800
Affiliates are web-based
publishers that want to make

00:04:08.800 --> 00:04:11.630
money by referring their users
to Google eBooks and then

00:04:11.630 --> 00:04:14.980
getting paid a commission when
that user buys the eBook.

00:04:14.980 --> 00:04:17.940
I expect most people here are
probably interested in this

00:04:17.940 --> 00:04:20.930
affiliate program since that
is the easiest path to

00:04:20.930 --> 00:04:22.350
integrate with us.

00:04:22.350 --> 00:04:24.930
The second type of partner we
work with are retailers.

00:04:24.930 --> 00:04:28.090
Retailers are partners that want
to tightly integrate with

00:04:28.090 --> 00:04:30.560
Google eBooks and own the
customer experience.

00:04:30.560 --> 00:04:33.510
So they are taking Google eBooks
and selling them to

00:04:33.510 --> 00:04:35.020
their customers.

00:04:35.020 --> 00:04:37.910
This is a lot more integration
work, but the end result is

00:04:37.910 --> 00:04:40.430
that they maintain a customer
relationship.

00:04:40.430 --> 00:04:42.940
And the third type of partner
that we're talking about are

00:04:42.940 --> 00:04:44.430
device manufacturers.

00:04:44.430 --> 00:04:47.220
Device manufacturers are
typically hardware vendors

00:04:47.220 --> 00:04:50.610
that are looking for a way to
provide their users access to

00:04:50.610 --> 00:04:53.570
a rich set of content
from Google eBooks.

00:04:53.570 --> 00:04:55.560
To enable these partners,
we've created a set of

00:04:55.560 --> 00:04:57.430
services and APIs.

00:04:57.430 --> 00:05:01.080
We use GAN, the Google Affiliate
Network, to track

00:05:01.080 --> 00:05:04.870
when an affiliate sends us a
user and pay out commission.

00:05:04.870 --> 00:05:07.920
We use all sorts of user
authentication protocols, like

00:05:07.920 --> 00:05:11.590
OAuth, to ensure that our users
have a mechanism to

00:05:11.590 --> 00:05:15.220
authorize themselves with these
third party services.

00:05:15.220 --> 00:05:18.690
And we use Books APIs to allow
our partners to search within

00:05:18.690 --> 00:05:21.740
our catalog, as well as allowing
our users access to

00:05:21.740 --> 00:05:24.110
the library within the cloud.

00:05:24.110 --> 00:05:26.460
In addition to these services
and APIs that we've created,

00:05:26.460 --> 00:05:29.470
we rely on third party
industry standards.

00:05:29.470 --> 00:05:32.110
We use ONIX for sending catalog
information to our

00:05:32.110 --> 00:05:33.200
retailer partners.

00:05:33.200 --> 00:05:36.680
We use EPUB and PDFs
for transmitting

00:05:36.680 --> 00:05:39.050
files to hardware devices.

00:05:39.050 --> 00:05:41.590
And we use EditX for
communicating transactional

00:05:41.590 --> 00:05:45.210
information between us and
our retail partners.

00:05:45.210 --> 00:05:47.500
So with that, let's dive into
some examples of how each of

00:05:47.500 --> 00:05:49.310
these partners integrates
with us.

00:05:49.310 --> 00:05:50.730
I'll start with affiliates.

00:05:50.730 --> 00:05:54.060
So the example here is a
financial blog run by Joe.

00:05:54.060 --> 00:05:57.480
What Joe wants to do is, he
wants to provide advice to his

00:05:57.480 --> 00:05:59.290
users on finances.

00:05:59.290 --> 00:06:01.810
And every once in a while when
he's providing advice, he

00:06:01.810 --> 00:06:03.410
refers them to a book.

00:06:03.410 --> 00:06:05.540
And what he'd like to do when
he refers them to a book and

00:06:05.540 --> 00:06:07.450
this user goes and buys a book,
he'd like to make a

00:06:07.450 --> 00:06:09.560
commission on that purchase.

00:06:09.560 --> 00:06:12.150
So what Joe does is he first
sets up an account with the

00:06:12.150 --> 00:06:14.030
Google Affiliate Network.

00:06:14.030 --> 00:06:17.570
And with that account setup,
he gets access to a GAN

00:06:17.570 --> 00:06:18.480
product feed.

00:06:18.480 --> 00:06:20.870
And what this GAN product feed
gives him is a list of all the

00:06:20.870 --> 00:06:24.440
books that he can refer
to Google eBooks.

00:06:24.440 --> 00:06:26.440
If he doesn't want to use the
GAN product feed, because it

00:06:26.440 --> 00:06:29.770
is a big file that he has to
parse, he can use our Books

00:06:29.770 --> 00:06:33.650
APIs to specifically query
Google Books and find out if

00:06:33.650 --> 00:06:34.810
books are available for sale.

00:06:34.810 --> 00:06:37.100
And if those books are available
for sale, then find

00:06:37.100 --> 00:06:39.800
out what the referring link
for that book should be.

00:06:39.800 --> 00:06:43.410
So once Joe has this set up,
users can come to his site,

00:06:43.410 --> 00:06:45.390
browse his site, and when they
find a book that they're

00:06:45.390 --> 00:06:47.750
interested in buying, they click
on the link for that

00:06:47.750 --> 00:06:50.480
book, a buy link on Joe's
Financial Blog.

00:06:50.480 --> 00:06:53.090
And what that link takes them
to is the Google Affiliate

00:06:53.090 --> 00:06:57.350
Network, who tracks that this
referral was taken in, and

00:06:57.350 --> 00:07:00.180
refers them on to the
Google eBookstore.

00:07:00.180 --> 00:07:03.090
Now this happens completely
opaquely to the user.

00:07:03.090 --> 00:07:05.510
The user doesn't know they're
going through GAN.

00:07:05.510 --> 00:07:07.680
And they can end up either at
the front page of the Google

00:07:07.680 --> 00:07:10.050
eBookstore, or they can end up
at a specific "about the book"

00:07:10.050 --> 00:07:13.820
page that is tailored for the
book that Joe is recommending.

00:07:13.820 --> 00:07:16.060
So the user can browse the
site at that point, do

00:07:16.060 --> 00:07:20.050
searches, buy the book that they
got referred to, or buy

00:07:20.050 --> 00:07:21.840
another recommended book.

00:07:21.840 --> 00:07:23.490
And when they find a book they
want to purchase, they go

00:07:23.490 --> 00:07:26.050
through the standard Google
Checkout process, at which

00:07:26.050 --> 00:07:28.060
point the book is pushed
into the user's

00:07:28.060 --> 00:07:30.610
library in the cloud.

00:07:30.610 --> 00:07:33.860
In parallel after that occurs,
Google eBooks sends a message

00:07:33.860 --> 00:07:35.610
to the Google Affiliate Network
saying that that

00:07:35.610 --> 00:07:38.080
referral that came in
resulted in a sale.

00:07:38.080 --> 00:07:40.740
And then on a monthly basis, the
Google Affiliate Network

00:07:40.740 --> 00:07:44.200
pays out a commission to Joe's
Financial Blog based on the

00:07:44.200 --> 00:07:46.340
sales that they helped
generate.

00:07:46.340 --> 00:07:50.200
So in summary, what Joe's been
able to do is take this blog

00:07:50.200 --> 00:07:53.420
and monetize it, by referring
his customers to Google eBooks

00:07:53.420 --> 00:07:55.400
to buy books that he's
recommending.

00:07:55.400 --> 00:07:57.170
The integration is fairly
straightforward.

00:07:57.170 --> 00:07:59.770
It's probably a couple of days
of effort, and maybe a couple

00:07:59.770 --> 00:08:02.020
of days of waiting for all the
approvals to go through.

00:08:02.020 --> 00:08:04.280
But it's not a whole lot of
engineering effort, it's not a

00:08:04.280 --> 00:08:06.350
whole lot of time.

00:08:06.350 --> 00:08:08.310
The second type of integration
I want to walk through is a

00:08:08.310 --> 00:08:09.652
retailer integration.

00:08:09.652 --> 00:08:14.330
The example here is you have a
print retailer who wants to

00:08:14.330 --> 00:08:18.490
add eBooks to the set of
products that they're selling.

00:08:18.490 --> 00:08:21.410
So the example at the bookstore
I made up, called

00:08:21.410 --> 00:08:22.120
Fancy Books.

00:08:22.120 --> 00:08:26.070
They sell all sorts of fancy
books and the first thing that

00:08:26.070 --> 00:08:29.420
they do is get an ONIX feed
from Google eBooks.

00:08:29.420 --> 00:08:32.510
This ONIX feed is a very
detailed catalog of all the

00:08:32.510 --> 00:08:35.270
books that are available for
sale and a lot of information

00:08:35.270 --> 00:08:36.049
about those books.

00:08:36.049 --> 00:08:39.679
So metadata, publisher
information, wholesale price,

00:08:39.679 --> 00:08:41.929
discount codes, et
cetera et cetera.

00:08:41.929 --> 00:08:44.940
And what it lets Fancy Books do
is incorporate the entire

00:08:44.940 --> 00:08:48.150
Google eBook catalog into
their overall catalog.

00:08:48.150 --> 00:08:50.680
So they can provide their users
the ability to search

00:08:50.680 --> 00:08:53.300
across both sets of data.

00:08:53.300 --> 00:08:56.150
So that what happens is, if the
user's looking for a book

00:08:56.150 --> 00:08:59.340
on wine, they can find print
books, they can find eBooks,

00:08:59.340 --> 00:09:01.430
and they can find books that are
available in both formats.

00:09:01.430 --> 00:09:04.330
So it's one unified
search mechanism.

00:09:04.330 --> 00:09:06.350
The next thing that Fancy
Books can do is enable a

00:09:06.350 --> 00:09:07.850
previewing mechanism.

00:09:07.850 --> 00:09:10.860
Using our Books API, Fancy
Books can give users the

00:09:10.860 --> 00:09:13.990
option of clicking on a little
Google preview button and

00:09:13.990 --> 00:09:16.440
reading a small sample of the
book to figure out if it's

00:09:16.440 --> 00:09:18.730
really of interest to them and
if it's something that they

00:09:18.730 --> 00:09:20.900
actually want to buy.

00:09:20.900 --> 00:09:22.880
Next thing that Fancy
Books does is a

00:09:22.880 --> 00:09:24.740
transaction with the user.

00:09:24.740 --> 00:09:27.250
In this case, because it's a
retailer, the retailer is

00:09:27.250 --> 00:09:30.060
responsible for doing the
transaction, for accepting the

00:09:30.060 --> 00:09:32.720
credit card, processing
tax, all that stuff.

00:09:32.720 --> 00:09:35.390
And when that transaction is
complete, they send a message

00:09:35.390 --> 00:09:38.190
to Google eBooks using EditX
saying that somebody actually

00:09:38.190 --> 00:09:38.940
bought a book.

00:09:38.940 --> 00:09:41.950
And then the user uses OAuth
to link their Fancy Books

00:09:41.950 --> 00:09:43.875
account with their Google
eBooks account.

00:09:43.875 --> 00:09:46.950
And at that point, the book is
pushed onto the user's Google

00:09:46.950 --> 00:09:50.500
eBooks shelf, and the user has
the option of reading it on

00:09:50.500 --> 00:09:53.400
any device that's Google
eBooks-compatible.

00:09:53.400 --> 00:09:56.160
And the last thing Fancy Books
can do is, after the user's

00:09:56.160 --> 00:09:59.560
bought the book, using our
APIs, they can provide a

00:09:59.560 --> 00:10:01.560
mechanism for reading
that book on

00:10:01.560 --> 00:10:03.170
the Fancy Books website.

00:10:03.170 --> 00:10:06.040
And they can actually access all
the books that user's made

00:10:06.040 --> 00:10:09.110
available on their library
through that interface.

00:10:09.110 --> 00:10:12.820
So in summary, with this
retailer integration, they do

00:10:12.820 --> 00:10:15.240
control the end-to-end customer
experience, the

00:10:15.240 --> 00:10:17.930
retailer does, but it
is a lot more work.

00:10:17.930 --> 00:10:20.420
The amount of work required
is on the order of months,

00:10:20.420 --> 00:10:21.970
whereas an affiliate
integration is on

00:10:21.970 --> 00:10:24.560
the order of days.

00:10:24.560 --> 00:10:27.250
The last type of integration I
want to walk through is the

00:10:27.250 --> 00:10:28.190
device integration.

00:10:28.190 --> 00:10:31.270
So this is a hardware
manufacturer that wants to

00:10:31.270 --> 00:10:34.300
give their users access
to Google eBooks.

00:10:34.300 --> 00:10:37.870
So there are two parallel tracks
of integration that we

00:10:37.870 --> 00:10:39.490
have to think about when we're
thinking about a device

00:10:39.490 --> 00:10:40.330
integration.

00:10:40.330 --> 00:10:42.310
The first is a buying
experience, and the second is

00:10:42.310 --> 00:10:43.750
a reading experience.

00:10:43.750 --> 00:10:46.600
On the buying side, the first
thing that the user does is

00:10:46.600 --> 00:10:50.590
accesses a mobile web
store using HTTP.

00:10:50.590 --> 00:10:52.510
They can browse, they can
search, they can find books

00:10:52.510 --> 00:10:53.680
that they're interested in.

00:10:53.680 --> 00:10:55.600
And once they find a book they'd
like to buy, they go

00:10:55.600 --> 00:10:59.000
through the standard checkout
process, using HTTPS.

00:10:59.000 --> 00:11:01.640
And when that book is bought,
it's pushed down to the user's

00:11:01.640 --> 00:11:03.150
Google library.

00:11:03.150 --> 00:11:06.420
In parallel, to provide reading,
what the device does

00:11:06.420 --> 00:11:09.480
is it gives a user the option
of authenticating, either

00:11:09.480 --> 00:11:12.620
using client login or OAuth,
with the Google eBooks service

00:11:12.620 --> 00:11:13.650
through the device.

00:11:13.650 --> 00:11:16.960
And then using the Books API,
the device is able to download

00:11:16.960 --> 00:11:20.340
a list of all the contents
of that user's library.

00:11:20.340 --> 00:11:22.150
I mean information about the
books that are in their

00:11:22.150 --> 00:11:25.460
library, things like reading
position are provided.

00:11:25.460 --> 00:11:27.680
And then when the user wants to
read a book, and it's not

00:11:27.680 --> 00:11:29.950
already on the device, it
can be downloaded in

00:11:29.950 --> 00:11:31.190
EPUB and PDF format.

00:11:31.190 --> 00:11:32.780
And all this happens
behind the scenes.

00:11:32.780 --> 00:11:33.980
The user doesn't see it.

00:11:33.980 --> 00:11:37.000
The device actually manages
that interaction.

00:11:37.000 --> 00:11:39.500
So with that I wanted to hand
it off to Kevin, who's going

00:11:39.500 --> 00:11:42.520
to walk through some detail
around these APIs.

00:11:42.520 --> 00:11:44.900
KEVIN LANDRY: All right,
thanks a lot, Pratip.

00:11:44.900 --> 00:11:47.060
So when we talk about the APIs,
let's talk about what

00:11:47.060 --> 00:11:49.180
data we're going to be using.

00:11:49.180 --> 00:11:51.170
So one is volume information.

00:11:51.170 --> 00:11:53.000
That's basically the
book content.

00:11:53.000 --> 00:11:55.120
The metadata, title, author.

00:11:55.120 --> 00:11:56.840
Typical stuff, you know.

00:11:56.840 --> 00:11:57.890
User content.

00:11:57.890 --> 00:11:59.650
So that's what we store
for the user.

00:11:59.650 --> 00:12:00.960
The user can go on our site.

00:12:00.960 --> 00:12:01.800
They can create a review.

00:12:01.800 --> 00:12:02.920
They can rate a book.

00:12:02.920 --> 00:12:04.130
They can also create
bookshelves.

00:12:04.130 --> 00:12:06.260
So we have the My library
bookshelf.

00:12:06.260 --> 00:12:09.080
So it's My Google eBooks,
Purchased, Reviewed, Recently

00:12:09.080 --> 00:12:11.370
viewed, all those are
bookshelves and you can query

00:12:11.370 --> 00:12:13.180
those on behalf of the user.

00:12:13.180 --> 00:12:14.590
The next item is order
information.

00:12:14.590 --> 00:12:16.642
So again, if you're doing that
deep type of integration with

00:12:16.642 --> 00:12:18.660
us, you can do order type
of information.

00:12:18.660 --> 00:12:19.950
That's the EditX.

00:12:19.950 --> 00:12:20.870
And then output format.

00:12:20.870 --> 00:12:24.540
So output format is
JSON, XML, and the

00:12:24.540 --> 00:12:25.560
new industry standards.

00:12:25.560 --> 00:12:28.655
So we have the EditX and ONIX
feed that Pratip mentioned.

00:12:28.655 --> 00:12:30.060
And then also book content.

00:12:30.060 --> 00:12:31.750
So book content, obviously
they're going to read the

00:12:31.750 --> 00:12:34.270
book, so we do it
in PDF and EPUB.

00:12:34.270 --> 00:12:35.800
And then also we have
an embedded viewer.

00:12:35.800 --> 00:12:36.670
We'll get to the embedded
viewer.

00:12:36.670 --> 00:12:37.770
It's actually pretty cool.

00:12:37.770 --> 00:12:40.080
So you can actually put the
viewer right on your web page

00:12:40.080 --> 00:12:43.585
for certain eBooks.

00:12:43.585 --> 00:12:45.190
So API technology.

00:12:45.190 --> 00:12:48.900
So we announced today the
new Books Labs API.

00:12:48.900 --> 00:12:51.030
So it's a JSON response.

00:12:51.030 --> 00:12:53.540
The code site is there, so you
can go there and read up about

00:12:53.540 --> 00:12:55.900
the documentation for
how to call the API.

00:12:55.900 --> 00:12:57.900
And we also have the URL there,
so that would be the

00:12:57.900 --> 00:13:01.390
actual prefix you're going to
use to actually call the API.

00:13:01.390 --> 00:13:04.340
And the authentication, so we
do support OAuth 2.0, and

00:13:04.340 --> 00:13:06.960
OAuth 1.0, so you can use OAuth
Playground to actually

00:13:06.960 --> 00:13:08.700
go through and mimic calls
on behalf of the user.

00:13:11.740 --> 00:13:14.060
And we mentioned the industry
standard API, so we have the

00:13:14.060 --> 00:13:16.670
EditX feed and the ONIX feed.

00:13:16.670 --> 00:13:20.300
So EditX is for inquiries,
orders.

00:13:20.300 --> 00:13:22.650
And the ONIX feed is for,
again, product type of

00:13:22.650 --> 00:13:24.170
metadata information.

00:13:24.170 --> 00:13:24.960
And then book content.

00:13:24.960 --> 00:13:28.870
So we talked about the EPUB,
PDF, and it is using the Adobe

00:13:28.870 --> 00:13:30.170
Digital Editions talking
encryption.

00:13:32.940 --> 00:13:33.800
And more.

00:13:33.800 --> 00:13:35.930
So here is the embedded viewer
API, which is pretty cool.

00:13:35.930 --> 00:13:38.420
So you can actually embed
the book content.

00:13:38.420 --> 00:13:40.950
If you look there for the actual
JavaScript, there's an

00:13:40.950 --> 00:13:41.800
ISBN tag there.

00:13:41.800 --> 00:13:44.430
So you can actually put in an
ISBN, put that little viewer

00:13:44.430 --> 00:13:45.890
right on your web page,
and people can

00:13:45.890 --> 00:13:47.140
actually view that book.

00:13:49.518 --> 00:13:52.450
So what kind of integration do
we have at the eBook level?

00:13:52.450 --> 00:13:53.865
What are some of the
calls we're going

00:13:53.865 --> 00:13:55.280
to actually be making?

00:13:55.280 --> 00:13:57.850
So on behalf of the user, we
have these calls here.

00:13:57.850 --> 00:14:00.350
So we have the reading
operation, so they typically

00:14:00.350 --> 00:14:02.840
read either on the HTML side,
the JavaScript side, they're

00:14:02.840 --> 00:14:06.010
using the JavaScript reader.

00:14:06.010 --> 00:14:08.040
And then also, they can also
read on the devices.

00:14:08.040 --> 00:14:11.190
So we have the Android, IOS,
and e-Ink devices that

00:14:11.190 --> 00:14:14.070
actually read the
PDFs or EPUB.

00:14:14.070 --> 00:14:16.530
And then the third type of
integration there is the My

00:14:16.530 --> 00:14:17.760
library researching.

00:14:17.760 --> 00:14:21.080
So they can actually talk to
our APIs to grab the user's

00:14:21.080 --> 00:14:24.580
library, or actually make
queries directly to us for

00:14:24.580 --> 00:14:25.260
book content.

00:14:25.260 --> 00:14:27.860
So they can query off of text,
they can query off of the

00:14:27.860 --> 00:14:30.278
title, the author, and we can
go through some of those.

00:14:32.970 --> 00:14:34.890
What do you need to actually
talk to the Google Books API?

00:14:34.890 --> 00:14:37.340
You need a developer geek.

00:14:37.340 --> 00:14:38.780
It's similar to the
other Google APIs.

00:14:38.780 --> 00:14:41.160
So you can go to the API
console, you can actually

00:14:41.160 --> 00:14:43.580
register there and just say, I
want to use this API, and it

00:14:43.580 --> 00:14:44.890
gives you a developer key.

00:14:44.890 --> 00:14:47.170
That developer key you're
actually passing in as the key

00:14:47.170 --> 00:14:50.990
parameter on each
of the requests.

00:14:50.990 --> 00:14:52.950
You're going to make the
request, and we have two types

00:14:52.950 --> 00:14:53.660
of feeds here.

00:14:53.660 --> 00:14:55.660
So we have the volume
information feed.

00:14:55.660 --> 00:14:57.180
So the volume information
feed doesn't require

00:14:57.180 --> 00:14:58.100
authentication.

00:14:58.100 --> 00:14:59.060
And that's where you'd be doing

00:14:59.060 --> 00:15:00.800
the querying on metadata.

00:15:00.800 --> 00:15:03.930
So give me the books that
are about Mark Twain.

00:15:03.930 --> 00:15:05.630
Give me the books
about whatever.

00:15:05.630 --> 00:15:06.910
And then we also have
the bookshelf query.

00:15:06.910 --> 00:15:09.920
So this is where you would be
querying the user content.

00:15:09.920 --> 00:15:11.460
This does require
authentication.

00:15:11.460 --> 00:15:13.350
This is where you're going to
be doing the OAuth on behalf

00:15:13.350 --> 00:15:14.600
of the user.

00:15:17.400 --> 00:15:18.400
And I'll do a demo here.

00:15:18.400 --> 00:15:20.480
So this is a Chrome extension.

00:15:20.480 --> 00:15:23.771
How many of you guys have done
a Chrome extension before?

00:15:23.771 --> 00:15:24.610
A couple.

00:15:24.610 --> 00:15:24.840
OK.

00:15:24.840 --> 00:15:27.420
So I'll show you how easy it is
to do a Chrome extension.

00:15:27.420 --> 00:15:30.930
So the first thing you need is
there's a metadata description

00:15:30.930 --> 00:15:32.640
file, which you actually
create.

00:15:32.640 --> 00:15:34.980
With XML it's pretty easy.

00:15:34.980 --> 00:15:37.020
Then you actually have the
background page, and the

00:15:37.020 --> 00:15:39.560
background page stores
the content for what

00:15:39.560 --> 00:15:40.450
you're going to do.

00:15:40.450 --> 00:15:43.530
So it stores the content
across tabs.

00:15:43.530 --> 00:15:44.500
You have the content script.

00:15:44.500 --> 00:15:47.620
The content script actually runs
within each page that you

00:15:47.620 --> 00:15:49.490
have. So when you load up a web
page, the content script's

00:15:49.490 --> 00:15:50.610
going to run.

00:15:50.610 --> 00:15:51.310
And then you have the popups.

00:15:51.310 --> 00:15:53.250
So the popup gets run, in
this case, when you

00:15:53.250 --> 00:15:54.070
click on the icon.

00:15:54.070 --> 00:15:57.010
You click on the icon, the popup
will run, and go ahead

00:15:57.010 --> 00:15:58.780
and make the necessary queries
to the background page.

00:15:58.780 --> 00:16:02.190
What we're doing in this
particular example is we're

00:16:02.190 --> 00:16:04.880
actually going to be using that
query there, and we're

00:16:04.880 --> 00:16:06.360
actually passing in an ISBN.

00:16:06.360 --> 00:16:09.750
So we're going to look for the
ISBNs for a web page, group

00:16:09.750 --> 00:16:13.100
them all up, make sure they're
unique, pass them each to a

00:16:13.100 --> 00:16:15.515
query to our API, and we're
going to return results and

00:16:15.515 --> 00:16:17.270
then show it on the page.

00:16:17.270 --> 00:16:20.960
So let's get to the
example here.

00:16:20.960 --> 00:16:23.900
So I am on the San Francisco
Public Library.

00:16:23.900 --> 00:16:25.270
And let's click on new titles.

00:16:28.891 --> 00:16:31.256
Let's try that again.

00:16:31.256 --> 00:16:33.148
Ah, there we go.

00:16:33.148 --> 00:16:34.940
And new fiction titles.

00:16:34.940 --> 00:16:36.690
And let's click on
one of these.

00:16:36.690 --> 00:16:39.670
And our little extension's
running up here.

00:16:39.670 --> 00:16:41.320
So boom, it popped
up a number.

00:16:41.320 --> 00:16:42.650
What that says is there's
actually two

00:16:42.650 --> 00:16:43.860
ISBNs on this page.

00:16:43.860 --> 00:16:46.580
If you actually scroll down at
the bottom, they're both about

00:16:46.580 --> 00:16:48.330
the same book, But there's
actually two different

00:16:48.330 --> 00:16:49.425
variants of ISBNs.

00:16:49.425 --> 00:16:52.690
There's a 10-digit and
a 13-digit variant.

00:16:52.690 --> 00:16:55.250
So you actually click
on this here.

00:16:55.250 --> 00:16:58.690
What you see is, we actually
make the query to our servers,

00:16:58.690 --> 00:16:59.810
pass in the ISBNs.

00:16:59.810 --> 00:17:02.115
We understand that there's
actually two ISBNs we pass in,

00:17:02.115 --> 00:17:04.520
they actually come back with the
same result so we actually

00:17:04.520 --> 00:17:06.740
only show one result here.

00:17:06.740 --> 00:17:09.810
We can actually click on buy now
if you wanted to buy now.

00:17:09.810 --> 00:17:13.089
And you can log in and
actually purchase it.

00:17:13.089 --> 00:17:16.400
Or if you actually click on the
title or in this case the

00:17:16.400 --> 00:17:20.089
image, you can actually see the
metadata about the book.

00:17:20.089 --> 00:17:24.069
So this is our about the book
page where we have reviews,

00:17:24.069 --> 00:17:26.829
related books, all
that good stuff.

00:17:26.829 --> 00:17:29.310
So let's see what exactly
this extension is doing.

00:17:29.310 --> 00:17:34.980
So let's look at the background
page first. So it

00:17:34.980 --> 00:17:36.936
is an extension.

00:17:36.936 --> 00:17:38.430
Need developer mode.

00:17:47.358 --> 00:17:50.845
Let's see if I can actually
change some of these things so

00:17:50.845 --> 00:17:52.095
you can actually see it.

00:17:59.670 --> 00:18:01.520
Can you guys see that?

00:18:01.520 --> 00:18:01.870
Yes?

00:18:01.870 --> 00:18:02.165
No?

00:18:02.165 --> 00:18:03.230
A little, kind of?

00:18:03.230 --> 00:18:03.920
OK.

00:18:03.920 --> 00:18:05.480
So we're actually
doing it here.

00:18:05.480 --> 00:18:07.980
So the first thing we have
up here is the book tabs.

00:18:07.980 --> 00:18:11.970
That's actually our object where
we actually store the

00:18:11.970 --> 00:18:13.045
ISBNs for tabs.

00:18:13.045 --> 00:18:14.900
So every single tab, we
actually have two

00:18:14.900 --> 00:18:15.690
properties in there.

00:18:15.690 --> 00:18:18.270
One is ISBN and one is
actually the results.

00:18:18.270 --> 00:18:20.160
So if you've already done the
results for that page, we

00:18:20.160 --> 00:18:21.850
could just get the results
cache back.

00:18:21.850 --> 00:18:25.840
Otherwise you have the list of
ISBNs to actually query.

00:18:25.840 --> 00:18:28.110
This is actually our
main function.

00:18:28.110 --> 00:18:30.410
It actually gets called
down below

00:18:30.410 --> 00:18:31.660
within some of the listeners.

00:18:33.850 --> 00:18:37.570
What this method does, is it
actually sends the request--

00:18:37.570 --> 00:18:40.320
you'll see right here, there's
actually a send request call--

00:18:40.320 --> 00:18:43.490
it actually sends the request
to the actual content page.

00:18:43.490 --> 00:18:45.710
The content page has that
listener that's running from

00:18:45.710 --> 00:18:46.970
the content script.

00:18:46.970 --> 00:18:48.240
So we send the request
to the page.

00:18:48.240 --> 00:18:51.630
The page goes through, scrapes,
gets all the ISBNs,

00:18:51.630 --> 00:18:55.390
sends it back here at this
point, and then we

00:18:55.390 --> 00:18:57.120
actually store it.

00:18:57.120 --> 00:18:58.520
We don't actually make
the query until

00:18:58.520 --> 00:19:00.110
it gets on the popup.

00:19:00.110 --> 00:19:01.715
And then here you see actually
the listeners.

00:19:01.715 --> 00:19:03.630
So these are listeners
that we're actually

00:19:03.630 --> 00:19:04.495
doing for each tab.

00:19:04.495 --> 00:19:07.430
So when a tab gets opened, the
listener gets called, calls

00:19:07.430 --> 00:19:10.010
back up to the first method,
that then calls into the

00:19:10.010 --> 00:19:11.260
content script.

00:19:14.830 --> 00:19:23.870
And we can find the content
script by looking at our

00:19:23.870 --> 00:19:25.360
lovely developer tools.

00:19:25.360 --> 00:19:34.520
So as I mentioned, it gets
loaded on each page, and you

00:19:34.520 --> 00:19:35.870
can actually find it there.

00:19:35.870 --> 00:19:37.866
It actually will say Chrome
extension there for each of

00:19:37.866 --> 00:19:38.650
the extensions.

00:19:38.650 --> 00:19:41.550
In this case, the first thing
we're doing up here is routing

00:19:41.550 --> 00:19:41.970
the listener.

00:19:41.970 --> 00:19:43.850
So this is a listener where the
background page actually

00:19:43.850 --> 00:19:45.500
calls into it.

00:19:45.500 --> 00:19:47.520
And then what the listener then

00:19:47.520 --> 00:19:49.380
does, is it calls findBook.

00:19:49.380 --> 00:19:51.170
And you'll see within findBook,
there's a series of

00:19:51.170 --> 00:19:53.600
regular expressions because it
actually ends up being--

00:19:53.600 --> 00:19:56.070
there's different formatting
ways that pages can actually

00:19:56.070 --> 00:19:57.290
display an ISBN.

00:19:57.290 --> 00:19:59.930
So we actually go through each
of the regular expressions,

00:19:59.930 --> 00:20:02.880
pull out the ISBNs, and then
that's what we actually send

00:20:02.880 --> 00:20:04.130
back to the background page.

00:20:08.440 --> 00:20:11.790
And then on the popup here--

00:20:22.690 --> 00:20:27.340
So the popup has-- let's
go down here--

00:20:27.340 --> 00:20:29.660
so it actually will go
through initially

00:20:29.660 --> 00:20:30.970
and do a search page.

00:20:30.970 --> 00:20:32.630
So the search page will
actually call

00:20:32.630 --> 00:20:33.870
the background page--

00:20:33.870 --> 00:20:35.810
you see right here, get
background page--

00:20:35.810 --> 00:20:37.620
get the information about
the current tab.

00:20:37.620 --> 00:20:40.680
And here it actually decides if
there's ISBNs or if there's

00:20:40.680 --> 00:20:42.040
actually results.

00:20:42.040 --> 00:20:42.730
It's just ISBNs.

00:20:42.730 --> 00:20:45.075
Then the next thing we actually
do is go back here

00:20:45.075 --> 00:20:46.876
and we get the text
for the ISBN.

00:20:46.876 --> 00:20:49.090
So what you see here
is the actual query

00:20:49.090 --> 00:20:50.690
that's being executed.

00:20:50.690 --> 00:20:54.250
So it's googleapis.com/b
ooks/v1/volumes, passing in

00:20:54.250 --> 00:20:57.045
that key parameter that I
mentioned before, and then the

00:20:57.045 --> 00:21:00.090
query is ISBN, colon, and
then an actual ISBN.

00:21:00.090 --> 00:21:02.330
And then what happens is you
take the response text-- it's

00:21:02.330 --> 00:21:04.440
a simple XHR request--

00:21:04.440 --> 00:21:07.610
take the response text, pass
it to your JSON parser, and

00:21:07.610 --> 00:21:09.490
then actually passes
it into a method.

00:21:09.490 --> 00:21:15.720
And then the method, actually
in this case, simply goes

00:21:15.720 --> 00:21:19.230
through and pulls out each of
the identifiers, or each of

00:21:19.230 --> 00:21:20.800
the pieces of information
we need.

00:21:20.800 --> 00:21:23.430
You'll see here there's
actually a book ID.

00:21:23.430 --> 00:21:25.600
The JSON object is pretty
self-explanatory.

00:21:25.600 --> 00:21:26.680
There's an ID for the book.

00:21:26.680 --> 00:21:28.070
There's authors.

00:21:28.070 --> 00:21:29.010
There's title.

00:21:29.010 --> 00:21:30.260
And we'll get to some of that.

00:21:35.380 --> 00:21:36.840
So here's an example.

00:21:36.840 --> 00:21:38.640
This is pretty much what will
happen in the popup.

00:21:38.640 --> 00:21:41.090
So we have the get, and we're
actually passing in the key,

00:21:41.090 --> 00:21:42.340
and there's the ISBN.

00:21:42.340 --> 00:21:43.950
This is a little bit easier
to read here.

00:21:47.240 --> 00:21:50.350
And then also, each of the
responses, so as I mentioned

00:21:50.350 --> 00:21:52.010
there's a book ID.

00:21:52.010 --> 00:21:54.820
There's also the thumbnail
information that we pull out,

00:21:54.820 --> 00:21:58.230
the volume information, and
we'll get into what's exactly

00:21:58.230 --> 00:21:59.510
in that volume information.

00:21:59.510 --> 00:22:02.641
The title, as an example.

00:22:02.641 --> 00:22:06.050
So here's an actual JSON object
that can be returned

00:22:06.050 --> 00:22:07.520
for a volume query.

00:22:07.520 --> 00:22:09.610
So it actually has a bunch
of identifiers in

00:22:09.610 --> 00:22:10.595
there for the book.

00:22:10.595 --> 00:22:13.630
And the next big section in
there is the volume info.

00:22:13.630 --> 00:22:16.220
So that's the general, again,
volume metadata information we

00:22:16.220 --> 00:22:19.440
have. User information, if you
authenticate you will get the

00:22:19.440 --> 00:22:21.140
user information as well.

00:22:21.140 --> 00:22:23.340
This is what the user
has stored with us.

00:22:23.340 --> 00:22:25.680
Sale information, again, if
there's information relative

00:22:25.680 --> 00:22:28.140
to the price, we have
that as well.

00:22:28.140 --> 00:22:33.110
And access info, if there's
access information about the

00:22:33.110 --> 00:22:38.090
book relative to the country
that you're in.

00:22:38.090 --> 00:22:41.120
So volume information, so the
standard stuff again,

00:22:41.120 --> 00:22:43.570
interesting thing here is that
types, so we do have multiple

00:22:43.570 --> 00:22:44.380
types in there.

00:22:44.380 --> 00:22:49.210
So ISBN, 10 and 13 depending on
what the exact volume is.

00:22:49.210 --> 00:22:51.040
Average rating, content
version.

00:22:51.040 --> 00:22:52.970
Content version's interesting
if you're actually going to

00:22:52.970 --> 00:22:54.520
start doing the device
integration.

00:22:54.520 --> 00:22:55.890
You're actually going to want
to talk to us because the

00:22:55.890 --> 00:22:59.510
content versioning comes
into play there.

00:22:59.510 --> 00:23:00.420
And user information.

00:23:00.420 --> 00:23:02.440
So we have the review, the page
position-- so that's the

00:23:02.440 --> 00:23:05.340
position where the user
last left off--

00:23:05.340 --> 00:23:06.590
as well as if they purchased
it or not.

00:23:09.080 --> 00:23:09.750
Sale information.

00:23:09.750 --> 00:23:11.240
So this is sale information
for the book.

00:23:11.240 --> 00:23:15.090
So currently only in the US,
so it'll have the US dollar

00:23:15.090 --> 00:23:17.400
price, list price,
and the amount.

00:23:17.400 --> 00:23:19.460
And actually the buy link so you
can actually put that link

00:23:19.460 --> 00:23:22.190
on your page.

00:23:22.190 --> 00:23:24.640
And access information, so
that tells you for the

00:23:24.640 --> 00:23:27.090
country-- again we're only
in the US right now--

00:23:27.090 --> 00:23:32.060
for the EPUB, PDF downloads, as
well as if it's a sample or

00:23:32.060 --> 00:23:37.070
otherwise if it's embeddable,
public domain.

00:23:37.070 --> 00:23:37.760
And the volume query.

00:23:37.760 --> 00:23:41.400
So the volume query supports
multiple different types of

00:23:41.400 --> 00:23:42.400
parameters here.

00:23:42.400 --> 00:23:44.580
So you see the query, that's
probably the biggest one that

00:23:44.580 --> 00:23:46.280
people will be using.

00:23:46.280 --> 00:23:47.540
There's filtering, language
restrict.

00:23:50.110 --> 00:23:51.010
And bookshelf.

00:23:51.010 --> 00:23:55.110
So the URL at the top there is
actually our URL if you would

00:23:55.110 --> 00:23:58.480
hit our book site, you would
actually have that URL there.

00:23:58.480 --> 00:24:00.990
That AS collection ID is
actually the bookshelf ID.

00:24:00.990 --> 00:24:04.790
So you would replace that into
your bookshelf's URL query.

00:24:04.790 --> 00:24:06.430
And you can use OAuth playground
right now to go

00:24:06.430 --> 00:24:07.760
through and actually execute
these queries.

00:24:10.380 --> 00:24:11.400
EBook partner integration.

00:24:11.400 --> 00:24:12.440
So this a little
bit different.

00:24:12.440 --> 00:24:15.220
So we talked about the ONIX
feed and the EditX feed.

00:24:15.220 --> 00:24:18.730
So the book catalog is through
the ONIX feed, and then the

00:24:18.730 --> 00:24:22.350
website, the user can buy on the
website and actually do an

00:24:22.350 --> 00:24:24.725
EditX transactions with us,
which will actually be the

00:24:24.725 --> 00:24:26.110
order information.

00:24:26.110 --> 00:24:29.790
And then of course they can
access the APIs for doing

00:24:29.790 --> 00:24:31.480
searches against our
repository or

00:24:31.480 --> 00:24:35.020
the user's My library.

00:24:35.020 --> 00:24:37.320
Here's an example of
the ONIX catalog.

00:24:37.320 --> 00:24:40.570
So again, ONIX and actually
EditX have a section here that

00:24:40.570 --> 00:24:41.540
you can customize.

00:24:41.540 --> 00:24:43.870
So we've actually customized
some of these parameters here,

00:24:43.870 --> 00:24:45.010
some of them are in red.

00:24:45.010 --> 00:24:47.090
And you're going to want to talk
to us at this level when

00:24:47.090 --> 00:24:48.340
you start integraiton.

00:24:50.800 --> 00:24:53.600
Here's EditX again, there's some
customizable fields in

00:24:53.600 --> 00:24:56.450
here, with the order
information.

00:24:56.450 --> 00:24:58.980
And here's an example of
the actual structure

00:24:58.980 --> 00:25:03.130
of the XML for EditX.

00:25:03.130 --> 00:25:04.800
And with that, I'll hand
it back over to Pratip.

00:25:07.540 --> 00:25:08.480
PRATIP BANERJI: Thanks, Kevin.

00:25:08.480 --> 00:25:10.660
So what I want to do is quickly
walk through an

00:25:10.660 --> 00:25:13.950
example of an affiliate that's
integrated with us.

00:25:13.950 --> 00:25:16.620
The example I'm going to walk
through is a social reading

00:25:16.620 --> 00:25:18.370
site called Goodreads.

00:25:18.370 --> 00:25:20.150
Have people here used
Goodreads before?

00:25:20.150 --> 00:25:21.400
Is there anyone that's
familiar with them?

00:25:21.400 --> 00:25:22.440
That's great, so a few people.

00:25:22.440 --> 00:25:26.450
It's a site that you can go to
to see what your friends are

00:25:26.450 --> 00:25:30.530
reading, review books
or recommend books.

00:25:30.530 --> 00:25:33.920
It's really just a social
reading destination.

00:25:33.920 --> 00:25:36.000
So what I want to walk through
is a user perspective.

00:25:36.000 --> 00:25:38.470
When a user comes to Goodreads
and they browse this site, how

00:25:38.470 --> 00:25:41.880
do they actually get referred
to Google, and

00:25:41.880 --> 00:25:42.940
how does that work?

00:25:42.940 --> 00:25:45.190
So the first step is a user
comes, they're on the

00:25:45.190 --> 00:25:47.220
Goodreads site, they browse
it, they learn about what

00:25:47.220 --> 00:25:48.310
their friends are reading.

00:25:48.310 --> 00:25:50.120
And at some point, they
find a book that

00:25:50.120 --> 00:25:51.490
they're interested in.

00:25:51.490 --> 00:25:53.560
And they click on the
icon for the book.

00:25:53.560 --> 00:25:56.040
And this takes them to a
Goodreads page that has

00:25:56.040 --> 00:25:57.320
information about the book.

00:25:57.320 --> 00:25:59.010
So it's got a description.

00:25:59.010 --> 00:26:00.730
It's got ratings.

00:26:00.730 --> 00:26:03.600
All sorts of useful information
for the user.

00:26:03.600 --> 00:26:05.780
If you look over there on the
left, there's a little Google

00:26:05.780 --> 00:26:06.890
Preview button.

00:26:06.890 --> 00:26:09.580
And using our APIs, what
Goodreads has done is

00:26:09.580 --> 00:26:13.170
implemented the ability for a
user to come and actually read

00:26:13.170 --> 00:26:16.340
a subset of the book by clicking
on that button.

00:26:16.340 --> 00:26:18.090
So what that does when the
user clicks on it is a

00:26:18.090 --> 00:26:21.320
viewport opens up that lets them
read a couple of percent

00:26:21.320 --> 00:26:23.980
of the book, depending on what
the publisher allows.

00:26:23.980 --> 00:26:25.180
They can get hooked
on the book.

00:26:25.180 --> 00:26:26.780
They can figure out if
they like it or not.

00:26:26.780 --> 00:26:28.190
And if they get to the point
where they're like, you know,

00:26:28.190 --> 00:26:31.420
I do want to buy this book,
what Goodreads has done is

00:26:31.420 --> 00:26:35.110
implemented a little buy a copy
button that has, among

00:26:35.110 --> 00:26:39.400
other providers, a Google
eBook logo.

00:26:39.400 --> 00:26:41.520
Or I guess text in this case.

00:26:41.520 --> 00:26:43.540
If the user clicks on this,
if you think back to the

00:26:43.540 --> 00:26:46.890
affiliate integration
architecture that I laid out,

00:26:46.890 --> 00:26:49.270
that user is directed to the
Google Affiliate Network, who

00:26:49.270 --> 00:26:53.330
tracks that a referral came in
from Goodreads, and then GAN

00:26:53.330 --> 00:26:57.530
automatically redirects them
to the Google eBookstore.

00:26:57.530 --> 00:26:59.670
And once they get to the Google
eBookstore, the user

00:26:59.670 --> 00:27:02.850
has the option of reading more
about the book, seeing how

00:27:02.850 --> 00:27:05.360
much the book costs, which is
obviously important, and if

00:27:05.360 --> 00:27:06.860
they want to buy the
book, they click

00:27:06.860 --> 00:27:08.300
on the buy now button.

00:27:08.300 --> 00:27:09.990
And then they go through
the standard

00:27:09.990 --> 00:27:11.390
Google Checkout process.

00:27:11.390 --> 00:27:12.180
They buy the book.

00:27:12.180 --> 00:27:14.320
The book is pushed into
the user's library.

00:27:14.320 --> 00:27:16.940
And then after that happens,
Google eBooks tells GAN that

00:27:16.940 --> 00:27:19.680
this user that Goodreads sent
in actually bought the book,

00:27:19.680 --> 00:27:21.680
and then there's a
periodic payment

00:27:21.680 --> 00:27:23.460
that goes to Goodreads.

00:27:23.460 --> 00:27:26.100
So what Goodreads has done is
they've taken a social reading

00:27:26.100 --> 00:27:28.110
destination that they've created
and they found a way

00:27:28.110 --> 00:27:30.420
to monetize it, by making money
whenever one of their

00:27:30.420 --> 00:27:35.250
recommended books gets purchased
as a Google eBook.

00:27:35.250 --> 00:27:37.900
So with that, I want to close
with a few thoughts.

00:27:37.900 --> 00:27:40.080
The first is that Google eBooks
offers a brought set of

00:27:40.080 --> 00:27:43.480
APIs and services that not only
enable our users to read

00:27:43.480 --> 00:27:46.540
books, but allow partners to
participate in the digital

00:27:46.540 --> 00:27:48.000
eBook ecosystem.

00:27:48.000 --> 00:27:49.080
So what does participate mean?

00:27:49.080 --> 00:27:52.280
For affiliates, it means they
can earn money by referring

00:27:52.280 --> 00:27:54.020
customers to Google eBooks.

00:27:54.020 --> 00:27:56.680
For retailers, it means they
can make money by selling

00:27:56.680 --> 00:27:58.500
Google eBooks to their
customers.

00:27:58.500 --> 00:28:01.370
And for devices, it means that
they can add value to their

00:28:01.370 --> 00:28:04.640
device by integrating with
Google eBooks and giving their

00:28:04.640 --> 00:28:06.870
users access to rich content.

00:28:06.870 --> 00:28:09.740
If you'd like to learn more
about APIs, more detail than

00:28:09.740 --> 00:28:12.800
Kevin's gone through, please
go to our code site,

00:28:12.800 --> 00:28:17.700
code.google.com/apis/books,
and currently the Google

00:28:17.700 --> 00:28:19.510
eBooks affiliate program
is still in a

00:28:19.510 --> 00:28:20.870
invitation-only beta.

00:28:20.870 --> 00:28:22.460
But it's going to be
going live soon.

00:28:22.460 --> 00:28:24.870
And if you'd like to be notified
when it goes live,

00:28:24.870 --> 00:28:30.060
you can visit that short
link, goo.gl/2fm7q.

00:28:30.060 --> 00:28:32.330
And you can sign up to
be notified there.

00:28:32.330 --> 00:28:35.630
And last but not least, one of
our retailer partners is

00:28:35.630 --> 00:28:39.020
demoing their integration in
the Google I/O Sandbox.

00:28:39.020 --> 00:28:44.700
Powell's, which is a retailer in
Portland, has done a great

00:28:44.700 --> 00:28:45.600
job integrating with us.

00:28:45.600 --> 00:28:47.140
They'd love to show you
what they've done.

00:28:47.140 --> 00:28:48.505
They'd love to talk to you
about their experience.

00:28:48.505 --> 00:28:51.170
If you'd like to hear more about
that, please stop by

00:28:51.170 --> 00:28:54.920
their booth in the Google
I/O Sandbox.

00:28:54.920 --> 00:28:56.420
So that's what I had.

00:28:56.420 --> 00:28:59.320
Please feel free to provide
feedback using that short

00:28:59.320 --> 00:29:01.440
link, or if you've got
the Android app.

00:29:01.440 --> 00:29:04.640
And we have a few minutes, so
Kevin and I are happy to take

00:29:04.640 --> 00:29:08.160
any questions that
you have as well.

00:29:08.160 --> 00:29:11.130
[INAUDIBLE]

00:29:11.130 --> 00:29:11.340
PRATIP BANERJI: Sure.

00:29:11.340 --> 00:29:12.810
Can you come up to the
microphone when you ask your

00:29:12.810 --> 00:29:15.830
question, just so they
can capture it?

00:29:15.830 --> 00:29:22.055
So for the affiliate, the buyer
who came to the Google

00:29:22.055 --> 00:29:26.720
bookstore, does the affiliate
get credit for that particular

00:29:26.720 --> 00:29:31.400
book, or for any other book that
buyers end up buying, or

00:29:31.400 --> 00:29:35.720
is there a duration for which
that's effective and so on?

00:29:35.720 --> 00:29:37.970
PRATIP BANERJI: So as long as
they buy the book in the

00:29:37.970 --> 00:29:41.980
session that directed them to
the Google eBookstore, then

00:29:41.980 --> 00:29:42.610
they get credit.

00:29:42.610 --> 00:29:45.360
So what happens is when they
come in from GAN, there's an

00:29:45.360 --> 00:29:49.800
affiliate ID that's attached to
the Google eBook URL that

00:29:49.800 --> 00:29:50.950
they're going to.

00:29:50.950 --> 00:29:55.090
So within Google eBooks, as long
as that ID is in there,

00:29:55.090 --> 00:29:56.640
we track where they
came in from.

00:29:56.640 --> 00:29:58.980
Now if they leave the site, and
then they come back the

00:29:58.980 --> 00:30:02.890
next day, and they just go to
the bookstore directly, then

00:30:02.890 --> 00:30:05.250
the affiliate won't
get that credit.

00:30:05.250 --> 00:30:08.395
So if they keep the window
open, how long

00:30:08.395 --> 00:30:10.520
that's taking now?

00:30:10.520 --> 00:30:13.020
PRATIP BANERJI: You know, I
don't know the duration of how

00:30:13.020 --> 00:30:15.890
long that session stays open.

00:30:15.890 --> 00:30:23.090
I don't imagine that there's a
limit that's unreasonable.

00:30:23.090 --> 00:30:24.800
But I'm not completely sure.

00:30:24.800 --> 00:30:27.410
But I'm happy to find out for
you if you come up afterwards.

00:30:27.410 --> 00:30:29.520
I can find out what the duration
of time would be.

00:30:29.520 --> 00:30:32.240
Also, you mostly talk
about the API for

00:30:32.240 --> 00:30:34.180
affiliates and retailers.

00:30:34.180 --> 00:30:37.430
Are there API available for
if you want to enhance the

00:30:37.430 --> 00:30:39.190
reading experience itself.

00:30:39.190 --> 00:30:42.370
For instance, are there already
annotation service

00:30:42.370 --> 00:30:43.880
available for reading?

00:30:43.880 --> 00:30:45.550
And how is that?

00:30:45.550 --> 00:30:47.080
PRATIP BANERJI: So we don't
have annotation services.

00:30:47.080 --> 00:30:50.300
But we do have a broad
set of services

00:30:50.300 --> 00:30:52.350
available through our APIs.

00:30:52.350 --> 00:30:54.050
I don't know, Kevin, if you want
to list off the kind of

00:30:54.050 --> 00:30:54.590
things that we do have.

00:30:54.590 --> 00:30:56.800
KEVIN LANDRY: We have the
services for getting the

00:30:56.800 --> 00:30:58.770
metadata in terms of the volume
information, as well as

00:30:58.770 --> 00:30:59.970
the user's bookshelf.

00:30:59.970 --> 00:31:02.470
We don't have anything for
modifying or augmenting the

00:31:02.470 --> 00:31:05.225
content at this point.

00:31:05.225 --> 00:31:07.210
[UNINTELLIGIBLE]

00:31:07.210 --> 00:31:13.910
So let's say if I develop a
reader for reading eBooks in

00:31:13.910 --> 00:31:18.510
Google books, and obviously I
want to store the book in my

00:31:18.510 --> 00:31:22.020
library, but also as well as
any notes, annotation I may

00:31:22.020 --> 00:31:24.870
have on the book in
my library also.

00:31:24.870 --> 00:31:27.610
And that should be
cloud-synced,

00:31:27.610 --> 00:31:31.430
not on my local e-reader.

00:31:31.430 --> 00:31:31.870
PRATIP BANERJI: Yeah.

00:31:31.870 --> 00:31:32.930
That is a good idea.

00:31:32.930 --> 00:31:35.640
We're evaluating a
lot of potential

00:31:35.640 --> 00:31:37.490
places to grow the product.

00:31:37.490 --> 00:31:39.020
Thanks.

00:31:39.020 --> 00:31:41.040
Two slightly separate
questions.

00:31:41.040 --> 00:31:45.380
The first, what limits do you
have on the use of the API for

00:31:45.380 --> 00:31:47.750
number of books that can appear
on a single bookshelf,

00:31:47.750 --> 00:31:51.102
and number of full
text searches

00:31:51.102 --> 00:31:53.800
against that bookshelf.

00:31:53.800 --> 00:31:59.350
Full disclosure, I work as a
librarian at a university.

00:31:59.350 --> 00:32:01.100
We're interested in very
large numbers.

00:32:01.100 --> 00:32:01.610
KEVIN LANDRY: OK.

00:32:01.610 --> 00:32:05.250
So, in terms of the actual QPS,
the QPS number is you

00:32:05.250 --> 00:32:08.260
actually sign up, when you sign
up on the code site, you

00:32:08.260 --> 00:32:09.010
actually see the QPS.

00:32:09.010 --> 00:32:10.750
And you can actually
request more.

00:32:10.750 --> 00:32:13.260
So there's actually a process
to actually request more.

00:32:13.260 --> 00:32:16.190
We don't have anything
specific in terms of

00:32:16.190 --> 00:32:19.240
differentiating between, say, a
text query or querying on a

00:32:19.240 --> 00:32:20.960
user's bookshelf.

00:32:20.960 --> 00:32:24.530
And right now, I don't believe
there's any limitation on how

00:32:24.530 --> 00:32:27.535
many books a user can have in
their bookshelf as well.

00:32:27.535 --> 00:32:27.950
OK.

00:32:27.950 --> 00:32:29.810
That's one thing
I like to hear.

00:32:29.810 --> 00:32:32.100
The second thing is, just noting
the video at the start

00:32:32.100 --> 00:32:33.750
said that people buy
a book, and then

00:32:33.750 --> 00:32:34.920
they buy another book.

00:32:34.920 --> 00:32:39.010
It left out the part where
people borrow books, or lend

00:32:39.010 --> 00:32:40.580
their books, after they're
finished reading it, to

00:32:40.580 --> 00:32:41.480
somebody else.

00:32:41.480 --> 00:32:45.560
So that raises a question, given
Kindle and Nook having

00:32:45.560 --> 00:32:48.260
very limited, artificial
loan programs,

00:32:48.260 --> 00:32:50.740
but at least something.

00:32:50.740 --> 00:32:53.732
What sort of plans do you have
for implementing those sorts

00:32:53.732 --> 00:32:56.040
of features?

00:32:56.040 --> 00:32:58.063
PRATIP BANERJI: We don't have
that feature right now.

00:32:58.063 --> 00:32:58.950
Right.

00:32:58.950 --> 00:32:59.560
OK.

00:32:59.560 --> 00:33:00.680
Do you have any plans?

00:33:00.680 --> 00:33:01.480
PRATIP BANERJI: Um--

00:33:01.480 --> 00:33:02.680
Can't talk.

00:33:02.680 --> 00:33:03.340
That's OK.

00:33:03.340 --> 00:33:03.580
I understand.

00:33:03.580 --> 00:33:04.830
All right.

00:33:06.670 --> 00:33:11.210
Any plan to get it
out of the US?

00:33:11.210 --> 00:33:12.290
PRATIP BANERJI: We do
have plans to launch

00:33:12.290 --> 00:33:13.780
internationally this year.

00:33:13.780 --> 00:33:16.350
When?

00:33:16.350 --> 00:33:17.958
PRATIP BANERJI: Over the
course of this year.

00:33:17.958 --> 00:33:19.208
OK.

00:33:21.900 --> 00:33:23.880
Kind of a techie question.

00:33:23.880 --> 00:33:27.690
I notice that you weren't really
displaying Atom and

00:33:27.690 --> 00:33:29.355
that you were defaulting
to JSON.

00:33:29.355 --> 00:33:30.930
Is that--

00:33:30.930 --> 00:33:31.300
KEVIN LANDRY: That's
on purpose.

00:33:31.300 --> 00:33:32.670
That's on purpose?

00:33:32.670 --> 00:33:33.340
KEVIN LANDRY: Yeah.

00:33:33.340 --> 00:33:38.420
And the API is still
GData-ish?

00:33:38.420 --> 00:33:38.930
KEVIN LANDRY: No.

00:33:38.930 --> 00:33:43.630
So it is more of a REST API with
an actual JSON response.

00:33:43.630 --> 00:33:46.510
So how I went through that
object, you're actually

00:33:46.510 --> 00:33:48.350
getting a list of books back.

00:33:48.350 --> 00:33:51.700
And each of those book objects
have that volume information,

00:33:51.700 --> 00:33:52.130
write user information.

00:33:52.130 --> 00:33:54.865
So it's all through the path.

00:33:54.865 --> 00:33:55.490
KEVIN LANDRY: Yeah.

00:33:55.490 --> 00:33:58.010
It's very much object-oriented
in terms of the structure.

00:33:58.010 --> 00:34:01.520
GData kind of forces you into
a certain structure, as

00:34:01.520 --> 00:34:03.430
opposed to just having
objects.

00:34:03.430 --> 00:34:06.010
So how does that work
with the OAuth now?

00:34:06.010 --> 00:34:07.850
I didn't see an OAuth
integration.

00:34:07.850 --> 00:34:08.070
KEVIN LANDRY: Yeah.

00:34:08.070 --> 00:34:09.239
I didn't do an example
of OAuth.

00:34:09.239 --> 00:34:11.600
But you can actually go to
the OAuth Playground.

00:34:11.600 --> 00:34:13.739
So if you authenticate, and
then you go through the

00:34:13.739 --> 00:34:17.550
permissions, and you actually
paste in the URL with your

00:34:17.550 --> 00:34:20.980
bookshelf, pass in your key as
a parameter, you can actually

00:34:20.980 --> 00:34:21.949
execute it right there.

00:34:21.949 --> 00:34:23.020
It'll actually give
you the result.

00:34:23.020 --> 00:34:25.380
1.0, 2.0, signed?

00:34:25.380 --> 00:34:26.360
Sorry.

00:34:26.360 --> 00:34:27.350
KEVIN LANDRY: Yes,
yes, and yes.

00:34:27.350 --> 00:34:28.600
OK, thank you.

00:34:30.980 --> 00:34:35.389
I'm curious about the content
providers and the content that

00:34:35.389 --> 00:34:37.219
Google eBooks offers.

00:34:37.219 --> 00:34:39.000
I was surprised in the book--

00:34:39.000 --> 00:34:41.010
what was the example
book, Goodreads or

00:34:41.010 --> 00:34:42.179
whatever it's called--

00:34:42.179 --> 00:34:45.800
that I assumed when you had a
book, when you pulled it down

00:34:45.800 --> 00:34:48.989
that content was either being
published by Amazon or being

00:34:48.989 --> 00:34:49.969
published by Google.

00:34:49.969 --> 00:34:52.790
But it looks, like apparently,
there's crossover and they can

00:34:52.790 --> 00:34:54.350
be published by multiple
levels.

00:34:54.350 --> 00:34:58.270
So how do you get the
content that you're

00:34:58.270 --> 00:35:01.920
providing for e-readers?

00:35:01.920 --> 00:35:04.800
PRATIP BANERJI: So the
Goodreads site--

00:35:04.800 --> 00:35:07.320
The first part of your
question is, why does

00:35:07.320 --> 00:35:09.550
Goodreads have so many
providers listed?

00:35:09.550 --> 00:35:13.420
So, they're affiliates of
multiple reading services.

00:35:13.420 --> 00:35:15.320
That's what it boils down to.

00:35:15.320 --> 00:35:16.770
The second part of your
question, where do we get the

00:35:16.770 --> 00:35:18.100
content that we sell?

00:35:18.100 --> 00:35:21.580
We have relationships
with publishers.

00:35:21.580 --> 00:35:21.970
OK.

00:35:21.970 --> 00:35:25.070
So you're not looking
for individual--

00:35:25.070 --> 00:35:27.890
I mean, things aren't coming
from individual authors, kind

00:35:27.890 --> 00:35:30.790
of thing, as in a
publish-on-demand--

00:35:30.790 --> 00:35:33.890
obviously this is
read-on-demand, if you will--

00:35:33.890 --> 00:35:37.670
but it's all with established
large

00:35:37.670 --> 00:35:39.580
publishers, is that right?

00:35:39.580 --> 00:35:43.380
PRATIP BANERJI: We have over
5,000 publishers right now

00:35:43.380 --> 00:35:44.420
that have made their
books available.

00:35:44.420 --> 00:35:46.884
So big and small.

00:35:46.884 --> 00:35:49.230
[INAUDIBLE]

00:35:49.230 --> 00:35:49.690
PRATIP BANERJI: OK.

00:35:49.690 --> 00:35:50.460
Great.

00:35:50.460 --> 00:35:53.030
Well thank you very much, and
enjoy the rest of Google I/O.

00:35:53.030 --> 00:35:53.280
KEVIN LANDRY: One more--

00:35:53.280 --> 00:35:54.460
PRATIP BANERJI: Oh,
one more question?

00:35:54.460 --> 00:35:55.380
Sorry.

00:35:55.380 --> 00:35:56.100
Would you like to ask it?

00:35:56.100 --> 00:35:56.410
Go ahead.

00:35:56.410 --> 00:35:58.370
We still have three minutes.

00:35:58.370 --> 00:35:59.620
[INAUDIBLE]

00:36:06.220 --> 00:36:09.260
--kind of things covered?

00:36:09.260 --> 00:36:09.870
PRATIP BANERJI: This particular

00:36:09.870 --> 00:36:11.770
program is for eBooks.

00:36:11.770 --> 00:36:16.890
But the Google Affiliate Network
offers programs for

00:36:16.890 --> 00:36:18.750
all kinds of different
products.

00:36:18.750 --> 00:36:21.050
OK, so we need some process
to register, right?

00:36:21.050 --> 00:36:21.720
PRATIP BANERJI: Yep.

00:36:21.720 --> 00:36:22.520
Yep.

00:36:22.520 --> 00:36:24.200
And that'll all be documented
on a public

00:36:24.200 --> 00:36:26.100
website when it launches.

00:36:26.100 --> 00:36:27.460
KEVIN LANDRY: You can sign up
on the form to get more

00:36:27.460 --> 00:36:28.210
information later.

00:36:28.210 --> 00:36:31.350
And country's not open yet, and
the affiliate program's

00:36:31.350 --> 00:36:32.210
not there yet?

00:36:32.210 --> 00:36:34.030
PRATIP BANERJI: Right now US.

00:36:34.030 --> 00:36:35.050
Right now in the US.

00:36:35.050 --> 00:36:35.400
All right.

00:36:35.400 --> 00:36:35.650
Cool.

00:36:35.650 --> 00:36:36.470
Thanks.

00:36:36.470 --> 00:36:37.310
PRATIP BANERJI: Great.

00:36:37.310 --> 00:36:37.990
Thank you everybody.

00:36:37.990 --> 00:36:39.430
KEVIN LANDRY: Thank you.

