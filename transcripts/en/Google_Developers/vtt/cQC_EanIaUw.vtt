WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:13.000
[MUSIC PLAYING]

00:00:13.000 --> 00:00:14.930
JOANNA SMITH: Hey everybody,
and welcome to Google+

00:00:14.930 --> 00:00:15.870
Developers Live.

00:00:15.870 --> 00:00:17.080
Come code with us.

00:00:17.080 --> 00:00:19.300
I'm Joanna Smith, and
I'm a Google+

00:00:19.300 --> 00:00:21.300
Developer Programs Engineer.

00:00:21.300 --> 00:00:23.280
SILVANO LUCIANI: And I'm Silvano
Luciani, and I'm also

00:00:23.280 --> 00:00:26.030
a Developer Programs Engineer
for Google+.

00:00:26.030 --> 00:00:29.100
And what we want to do today is
show you how easy it is to

00:00:29.100 --> 00:00:32.290
integrate the Google+ Sign-In
in your application by doing

00:00:32.290 --> 00:00:34.760
some live coding demo.

00:00:34.760 --> 00:00:36.210
JOANNA SMITH: So we're very
excited to do that, but before

00:00:36.210 --> 00:00:39.160
we begin, I want to mention once
again our Google+ Sign-In

00:00:39.160 --> 00:00:41.070
boot camps that are happening
all around the globe.

00:00:41.070 --> 00:00:43.780
Silvano and I are both very,
very stoked to be able to

00:00:43.780 --> 00:00:46.870
participate in this, and we are
actually looking at nine

00:00:46.870 --> 00:00:51.550
cities, five continents, five
weeks, 180 partners, 8 and 1/2

00:00:51.550 --> 00:00:55.150
time zones, and I'm only going
to bring one pair of shoes.

00:00:55.150 --> 00:00:55.560
SILVANO LUCIANI: Wow.

00:00:55.560 --> 00:00:58.066
Google engineer truly
loves numbers, huh?

00:00:58.066 --> 00:00:59.290
JOANNA SMITH: I think we do.

00:00:59.290 --> 00:01:00.950
All right, let's go ahead
and get started.

00:01:00.950 --> 00:01:03.340
So the first thing that we need
to do is create a project

00:01:03.340 --> 00:01:04.970
on the Google API's console.

00:01:04.970 --> 00:01:07.200
And many of you have already
seen our explicit instructions

00:01:07.200 --> 00:01:09.770
for this, but we want to show
you, once again, how to do it.

00:01:09.770 --> 00:01:11.880
And we're going to create
a Client ID for our web

00:01:11.880 --> 00:01:14.680
application, and then we're
going to enable the Google+

00:01:14.680 --> 00:01:15.640
API for our project.

00:01:15.640 --> 00:01:17.030
Silvano, take it away.

00:01:17.030 --> 00:01:20.050
SILVANO LUCIANI: So let's
navigate to the console, which

00:01:20.050 --> 00:01:24.340
you can reach by
developers.google.com/console.

00:01:24.340 --> 00:01:26.750
And when you are in the console,
you can see on the

00:01:26.750 --> 00:01:30.505
top left, there is a selection
box where all your projects

00:01:30.505 --> 00:01:32.330
are listed, and all
the actions that

00:01:32.330 --> 00:01:33.390
you can do are listed.

00:01:33.390 --> 00:01:36.520
And in this case, we want to
create a brand new project for

00:01:36.520 --> 00:01:40.120
our demo, and let's
call it Demo GDL.

00:01:40.120 --> 00:01:42.940
And this is a name that you
can use to remind what the

00:01:42.940 --> 00:01:44.950
project is about.

00:01:44.950 --> 00:01:47.730
After we've done this,
the console is

00:01:47.730 --> 00:01:48.770
creating our project.

00:01:48.770 --> 00:01:52.490
Our project is now ready, and
now we need to enable the

00:01:52.490 --> 00:01:53.500
Google+ service.

00:01:53.500 --> 00:01:57.580
So we just scroll the list down
to Google+ API, and then

00:01:57.580 --> 00:02:00.290
we click on, and it's done.

00:02:00.290 --> 00:02:02.880
When you will do this for the
first time, you will be shown

00:02:02.880 --> 00:02:05.410
the terms of service
of the Google+ API.

00:02:05.410 --> 00:02:09.150
Please read our terms of service
carefully before

00:02:09.150 --> 00:02:10.320
enabling the service.

00:02:10.320 --> 00:02:12.250
JOANNA SMITH: We are going
to hold you to them.

00:02:12.250 --> 00:02:14.450
SILVANO LUCIANI: So now that
this is done, the last step is

00:02:14.450 --> 00:02:17.510
create the Client ID, and that's
really, really easy.

00:02:17.510 --> 00:02:21.660
Just go to API Access, see the
big blue button, Create an

00:02:21.660 --> 00:02:24.570
OAuth 2.0 Client ID, click it.

00:02:24.570 --> 00:02:27.920
At this point, we need
to input the branding

00:02:27.920 --> 00:02:28.620
information.

00:02:28.620 --> 00:02:31.590
So this is what your users will
see when they are shown

00:02:31.590 --> 00:02:33.380
the content dialog by Google.

00:02:33.380 --> 00:02:36.620
So please use a meaningful
name for your app, use a

00:02:36.620 --> 00:02:39.510
product logo, which I'm not
doing now for the sake of the

00:02:39.510 --> 00:02:42.310
demo, and also add the
homepage URL for your

00:02:42.310 --> 00:02:43.690
application.

00:02:43.690 --> 00:02:45.900
In the next page, we can
choose which type of

00:02:45.900 --> 00:02:48.910
application the Client
ID is for.

00:02:48.910 --> 00:02:52.800
Our demo is a web app, so
it's a web application.

00:02:52.800 --> 00:02:55.110
And very important, your
site or hostname.

00:02:55.110 --> 00:02:55.370
name.

00:02:55.370 --> 00:03:00.260
This would be used to authorize
your website as an

00:03:00.260 --> 00:03:02.630
authorized origin for
our JavaScripts.

00:03:02.630 --> 00:03:05.590
So careful with the scheme,
which is important, and

00:03:05.590 --> 00:03:07.650
careful with the hostname.

00:03:07.650 --> 00:03:11.340
In the case of our demo, this
is localhost, and it's done.

00:03:11.340 --> 00:03:14.250
Create Client ID, and
we are ready to go.

00:03:14.250 --> 00:03:16.450
JOANNA SMITH: And at this point,
it's actually very,

00:03:16.450 --> 00:03:19.510
very easy to go ahead and extend
your app to use other

00:03:19.510 --> 00:03:21.020
Google services as well.

00:03:21.020 --> 00:03:25.450
For example, to add the Google
Drive API to your project, all

00:03:25.450 --> 00:03:28.930
you have to do is enable that
under the Services tab and,

00:03:28.930 --> 00:03:30.370
later on, add the
correct scope.

00:03:30.370 --> 00:03:31.120
SILVANO LUCIANI: Let
me show you.

00:03:31.120 --> 00:03:31.710
It's faster.

00:03:31.710 --> 00:03:32.360
JOANNA SMITH: All
right, go ahead.

00:03:32.360 --> 00:03:35.110
SILVANO LUCIANI: So if you go to
Services, once again, let's

00:03:35.110 --> 00:03:37.600
scroll to Drive SDK.

00:03:37.600 --> 00:03:39.900
Let's click On, and we
are ready to go.

00:03:39.900 --> 00:03:41.360
We can use Google Drive.

00:03:41.360 --> 00:03:43.080
JOANNA SMITH: And so you see
it's really easy to get access

00:03:43.080 --> 00:03:44.790
to all of our Google services.

00:03:44.790 --> 00:03:47.900
All right, so let's go ahead
and start coding.

00:03:47.900 --> 00:03:49.880
SILVANO LUCIANI: Yeah, let's
see some code now.

00:03:49.880 --> 00:03:52.010
As you can see, this
is a very basic

00:03:52.010 --> 00:03:55.160
skeleton of our HTML page.

00:03:55.160 --> 00:03:59.240
We will now fill in the empty
spaces using code snippets

00:03:59.240 --> 00:04:00.810
from our documentation site.

00:04:00.810 --> 00:04:03.120
And as you will see,
there's very little

00:04:03.120 --> 00:04:05.330
that you need to do.

00:04:05.330 --> 00:04:09.810
So let's go to our documentation
on the Google+

00:04:09.810 --> 00:04:13.630
Sign-In, and you will find the
steps for the configuration

00:04:13.630 --> 00:04:15.000
that we just showed you--

00:04:15.000 --> 00:04:17.890
Create Client ID, Create
Client [INAUDIBLE].

00:04:17.890 --> 00:04:21.040
And now the first thing that we
need to do in our code is

00:04:21.040 --> 00:04:22.560
load our JavaScript.

00:04:22.560 --> 00:04:25.310
So we can just copy
the snippet and

00:04:25.310 --> 00:04:26.975
paste it in our source.

00:04:26.975 --> 00:04:28.090
JOANNA SMITH: And you see, these
snippets actually are

00:04:28.090 --> 00:04:30.240
littered throughout our entire
documentation, and we did that

00:04:30.240 --> 00:04:32.610
intentionally to make it as easy
as possible for all of

00:04:32.610 --> 00:04:33.660
our developers.

00:04:33.660 --> 00:04:35.290
And of course, if you want more
details, you can always

00:04:35.290 --> 00:04:37.540
check out our samples
to see more context

00:04:37.540 --> 00:04:38.530
for how they're used.

00:04:38.530 --> 00:04:40.740
But we'd love your feedback on
if these are helpful, or if

00:04:40.740 --> 00:04:41.310
these need work.

00:04:41.310 --> 00:04:42.830
Definitely let us know, because
we're trying to make

00:04:42.830 --> 00:04:45.810
sure integration is simple
for all of you.

00:04:45.810 --> 00:04:48.820
SILVANO LUCIANI: So let me make
this a bit more tidy.

00:04:51.400 --> 00:04:53.550
And now, the second step.

00:04:53.550 --> 00:04:56.620
We need to actually place
the button in the page.

00:04:56.620 --> 00:05:00.530
And again, we have a snippet
ready to do this for you.

00:05:00.530 --> 00:05:04.290
So let's copy it, let's
paste it in the

00:05:04.290 --> 00:05:06.600
body of the HTML page.

00:05:06.600 --> 00:05:09.980
As you can see, the snippet
comes preconfigured with some

00:05:09.980 --> 00:05:12.190
of the parameters that
you will need.

00:05:12.190 --> 00:05:15.170
There is only one change that
you need to do at this point,

00:05:15.170 --> 00:05:19.370
and it's using your Client ID,
the one that we just created.

00:05:19.370 --> 00:05:23.990
So let's go back to the API
console, let's go back to the

00:05:23.990 --> 00:05:26.030
API Access Pane.

00:05:30.510 --> 00:05:36.350
And now we can copy my Client
ID and paste it back in the

00:05:36.350 --> 00:05:37.870
source code.

00:05:37.870 --> 00:05:39.415
JOANNA SMITH: Now Silvano, since
we're pretty much ready

00:05:39.415 --> 00:05:41.510
to go, can you take a moment
to explain what these other

00:05:41.510 --> 00:05:42.610
attributes mean?

00:05:42.610 --> 00:05:43.630
SILVANO LUCIANI:
Yes, of course.

00:05:43.630 --> 00:05:47.870
So the class, which you can see
is g-signin, is the most

00:05:47.870 --> 00:05:52.620
important one because using this
specific class, g-signin,

00:05:52.620 --> 00:05:55.350
you're telling the library that
when the dom has finished

00:05:55.350 --> 00:05:58.510
loading, all the elements with
this class should be rendered

00:05:58.510 --> 00:06:00.440
as a Sign-In button.

00:06:00.440 --> 00:06:04.430
The callback, as we will see in
a second, is what will be

00:06:04.430 --> 00:06:07.380
called after the outflow
has been executed.

00:06:07.380 --> 00:06:10.080
And that's where you decide, for
instance, if a login has

00:06:10.080 --> 00:06:13.630
been successful and you take
actions as hiding the Sign-In

00:06:13.630 --> 00:06:16.990
button, or if there have been
problems in the login, so for

00:06:16.990 --> 00:06:20.410
instance, the user has clicked
Cancel instead of Accept, and

00:06:20.410 --> 00:06:23.240
you can show them a message
saying, you will need to click

00:06:23.240 --> 00:06:25.840
Accept if you want to do
more stuff with my app.

00:06:25.840 --> 00:06:27.910
Client ID, we already saw it.

00:06:27.910 --> 00:06:31.600
Cookie Policy, it's an
advanced parameter.

00:06:31.600 --> 00:06:34.145
You can find a lot
of documentation

00:06:34.145 --> 00:06:36.600
on it on our site.

00:06:36.600 --> 00:06:39.330
For now, just stick with
single_host_origin for the

00:06:39.330 --> 00:06:43.620
sake of this demo, and we will
probably do another GDL just

00:06:43.620 --> 00:06:46.430
on this and other sign-in and
sign-out related topics.

00:06:46.430 --> 00:06:48.430
JOANNA SMITH: Yes, definitely.

00:06:48.430 --> 00:06:53.690
SILVANO LUCIANI: Request Visible
Actions, your app will

00:06:53.690 --> 00:06:56.180
be able to write app activities
to the app activity

00:06:56.180 --> 00:07:00.000
stream of your user, and this is
where you can specify which

00:07:00.000 --> 00:07:02.730
types of app activities the
app will be able to write.

00:07:02.730 --> 00:07:04.140
JOANNA SMITH: And we actually
have a selection of 10

00:07:04.140 --> 00:07:06.080
different app activity types
right now, and they're all

00:07:06.080 --> 00:07:07.460
based on schema.org.

00:07:07.460 --> 00:07:10.220
But if you can't find one that
perfectly suits your needs,

00:07:10.220 --> 00:07:12.250
let us know in the Issue
Tracker, and we'll definitely

00:07:12.250 --> 00:07:14.365
be considering new app activity
types, just as we

00:07:14.365 --> 00:07:16.460
were considering new moment
types during our Developer

00:07:16.460 --> 00:07:17.900
Preview for History.

00:07:17.900 --> 00:07:20.430
So just keep us informed.

00:07:20.430 --> 00:07:23.120
SILVANO LUCIANI: And last, we
have this Code Parameter,

00:07:23.120 --> 00:07:26.210
which in this case is just
asking for the authorization

00:07:26.210 --> 00:07:28.390
for the plus.login scope.

00:07:28.390 --> 00:07:31.830
But at this point, we can add
Drive here, for instance.

00:07:31.830 --> 00:07:35.040
So I don't remember
the Drive scope.

00:07:35.040 --> 00:07:37.420
Let me go to the Drive docs.

00:07:37.420 --> 00:07:41.470
Drive, they have a lot of
different scopes to let you

00:07:41.470 --> 00:07:45.270
have a fine grained control
on what the app can do.

00:07:45.270 --> 00:07:48.090
We will just take the
umbrella one.

00:07:48.090 --> 00:07:52.360
And if you want to specify more
scopes, you just need to

00:07:52.360 --> 00:07:55.640
separate them with space and
add it to this parameter.

00:07:55.640 --> 00:07:57.940
And we are almost set.

00:07:57.940 --> 00:07:59.830
The only thing that is missing,
as we mentioned

00:07:59.830 --> 00:08:03.990
before, is a callback so that we
can do something after the

00:08:03.990 --> 00:08:06.490
authentication flow
has been executed.

00:08:06.490 --> 00:08:11.180
Once again, in our docs, we have
a snippet ready for you.

00:08:11.180 --> 00:08:12.970
JOANNA SMITH: This is a very
simple callback function.

00:08:12.970 --> 00:08:15.790
You should definitely be
customizing and enhancing it

00:08:15.790 --> 00:08:19.170
for your own app, but it's here
for you to get started.

00:08:19.170 --> 00:08:21.030
And that's our goal right now,
is to help you get started on

00:08:21.030 --> 00:08:23.370
your integration and see how
simple it really can be.

00:08:23.370 --> 00:08:26.750
SILVANO LUCIANI: And it's just
a matter of seconds, so let's

00:08:26.750 --> 00:08:31.730
go back to the app and copy
the callback in that.

00:08:31.730 --> 00:08:35.559
As you can see, is not doing
much at this moment.

00:08:35.559 --> 00:08:39.799
It's just checking that if we
have an access token, that

00:08:39.799 --> 00:08:42.260
means that the user is
logged in, so we can

00:08:42.260 --> 00:08:44.169
hide the Sign-In button.

00:08:44.169 --> 00:08:47.850
And otherwise, an error has
happened, and for instance we

00:08:47.850 --> 00:08:52.170
can log it to the console and
check what was wrong.

00:08:52.170 --> 00:08:55.890
So now I can save it.

00:08:55.890 --> 00:08:59.880
Last thing that I want to
do is let me add another

00:08:59.880 --> 00:09:02.700
parameter, which is the
theme for the button.

00:09:02.700 --> 00:09:06.660
And this is just because if I
specify a dark theme, the

00:09:06.660 --> 00:09:09.650
button will be red, and even if
we have a white background,

00:09:09.650 --> 00:09:11.720
it will be easier for
you to see it.

00:09:11.720 --> 00:09:14.020
JOANNA SMITH: We do offer
several options for sizes of

00:09:14.020 --> 00:09:16.960
buttons, as well as the theme,
the red versus a lighter

00:09:16.960 --> 00:09:18.670
theme, and you can see all
of them in our Branding

00:09:18.670 --> 00:09:20.430
Guidelines on our
documentation.

00:09:20.430 --> 00:09:22.940
And you can also see information
about if you

00:09:22.940 --> 00:09:24.220
wanted to make your own button,
which we're going to

00:09:24.220 --> 00:09:26.750
show you how to do at the
end of the episode.

00:09:26.750 --> 00:09:30.810
SILVANO LUCIANI: So now when I
load the demo, you can see our

00:09:30.810 --> 00:09:33.470
big red Sign-In button.

00:09:33.470 --> 00:09:37.610
And when I click over it, it's
opening the Consent dialog.

00:09:37.610 --> 00:09:40.480
This is now opened in another
window because we are in full

00:09:40.480 --> 00:09:43.230
screen, but if I wasn't in full
screen, it would be a

00:09:43.230 --> 00:09:45.260
pop-up dialog.

00:09:45.260 --> 00:09:49.430
An important thing here to
notice is in the first line,

00:09:49.430 --> 00:09:52.540
it's telling the user that the
app wants to know a name,

00:09:52.540 --> 00:09:54.780
basic info, a list
of people they're

00:09:54.780 --> 00:09:56.210
connected to on Google+.

00:09:56.210 --> 00:09:59.090
And this comes from the
plus.login scope.

00:09:59.090 --> 00:10:02.130
The second line, because we
added the Google Drive scope,

00:10:02.130 --> 00:10:04.900
is telling the user that the
app also wants to view and

00:10:04.900 --> 00:10:08.560
manage the files and documents
in their Google Drive.

00:10:08.560 --> 00:10:09.950
JOANNA SMITH: So this is
actually a good thing to note

00:10:09.950 --> 00:10:12.420
because no matter how many
Google services your app needs

00:10:12.420 --> 00:10:16.520
to use, your user only needs
to log in one time.

00:10:16.520 --> 00:10:17.400
SILVANO LUCIANI: Correct.

00:10:17.400 --> 00:10:21.650
And at this point, if we
click Accept, bam.

00:10:21.650 --> 00:10:23.200
We're done, and we
are logged in.

00:10:23.200 --> 00:10:25.580
Now, you can't see a lot
happening, because, as we saw

00:10:25.580 --> 00:10:29.210
with the callback, it's just
hiding the Sign-In button

00:10:29.210 --> 00:10:32.020
after a successful login.

00:10:32.020 --> 00:10:34.400
We can try to do something
more in the callback.

00:10:34.400 --> 00:10:39.660
So for instance, we can try to
get data on the profile of the

00:10:39.660 --> 00:10:42.510
user and show it
on the screen.

00:10:42.510 --> 00:10:48.840
So let me add to the body a pre
element where we will add

00:10:48.840 --> 00:10:50.686
the profile info.

00:10:58.502 --> 00:11:01.200
OK, there I am.

00:11:01.200 --> 00:11:04.430
Sometimes I forget how
to use a computer.

00:11:04.430 --> 00:11:08.790
And now, we can use the Google
API JavaScript Library, which

00:11:08.790 --> 00:11:15.570
is bundled when we load the
JavaScript library to render

00:11:15.570 --> 00:11:17.070
the Sign-In button.

00:11:17.070 --> 00:11:20.240
So the first thing that we need
is to load the definition

00:11:20.240 --> 00:11:25.980
of the Plus API in the client,
and we can do this in this

00:11:25.980 --> 00:11:30.360
way, and then the callback that
will be called after the

00:11:30.360 --> 00:11:31.670
library has been loaded.

00:11:31.670 --> 00:11:37.870
At this point, we can
call on the client,

00:11:37.870 --> 00:11:39.120
gapi.client.plus.people.get.

00:11:41.790 --> 00:11:47.020
And we can specify as user ID,
we can use me because the user

00:11:47.020 --> 00:11:50.130
is logged in, so this will
be resolved to the user

00:11:50.130 --> 00:11:51.780
that is logged in.

00:11:51.780 --> 00:11:56.960
And after we execute it, we
can add another callback,

00:11:56.960 --> 00:12:00.250
which will be return the result,
which is the profile

00:12:00.250 --> 00:12:04.220
info of the user connected.

00:12:04.220 --> 00:12:08.440
And now, we can add this in the
pre element that we added

00:12:08.440 --> 00:12:10.440
before to the page.

00:12:10.440 --> 00:12:16.270
So let me find it by ID,
and this is a profile,

00:12:16.270 --> 00:12:23.250
.innerHTML=, and now let's add
the stringified representation

00:12:23.250 --> 00:12:29.985
of the JSON object, result, and
we can make it a little

00:12:29.985 --> 00:12:31.235
bit prettier.

00:12:33.210 --> 00:12:34.730
JOANNA SMITH: All right,
let's take a look.

00:12:34.730 --> 00:12:39.010
SILVANO LUCIANI: So now if we
go back and we reload, I'm

00:12:39.010 --> 00:12:44.670
signed in, so if you see the
button has appeared for a

00:12:44.670 --> 00:12:46.845
while, then it's been hidden
after I was successfully

00:12:46.845 --> 00:12:49.890
logged in, and now I can
see info from my

00:12:49.890 --> 00:12:51.750
profile on the page.

00:12:51.750 --> 00:12:56.010
This is a good time to tell
you a small best practice.

00:12:56.010 --> 00:12:59.880
It would be better to hide the
button in the beginning, and

00:12:59.880 --> 00:13:02.690
then when you check if the user
is logged in, you don't

00:13:02.690 --> 00:13:03.220
do anything.

00:13:03.220 --> 00:13:06.250
If they're not logged in, you
show the button to the user.

00:13:06.250 --> 00:13:09.040
So in this way, you will avoid
this little effect

00:13:09.040 --> 00:13:09.770
that we've just seen.

00:13:09.770 --> 00:13:12.450
JOANNA SMITH: Yeah,
the little flash.

00:13:12.450 --> 00:13:15.030
So what you can see is we
have the button is fully

00:13:15.030 --> 00:13:15.650
acclimated.

00:13:15.650 --> 00:13:17.500
We've already got all that
working, and you already have

00:13:17.500 --> 00:13:21.180
user info back about the
user that logged in.

00:13:21.180 --> 00:13:23.570
But last week, we told you
guys about over the air

00:13:23.570 --> 00:13:26.290
installs, and I want to stress
again how incredibly simple it

00:13:26.290 --> 00:13:28.970
is to add these once you
have sign-in done.

00:13:28.970 --> 00:13:32.800
And so at this point, to drive
downloads for your app, for

00:13:32.800 --> 00:13:34.870
your Android app for your users,
all you have to do is

00:13:34.870 --> 00:13:37.860
add a single line of code and
make one change to the

00:13:37.860 --> 00:13:40.360
configuration of the API
console, and Silvano's going

00:13:40.360 --> 00:13:42.310
to do that for you right now.

00:13:42.310 --> 00:13:44.540
SILVANO LUCIANI: Yeah, so let
me show the steps which are,

00:13:44.540 --> 00:13:46.010
as Joanna said, really easy.

00:13:46.010 --> 00:13:49.190
Let's go back to our project
in the API console.

00:13:49.190 --> 00:13:52.290
In the same project that we
were using, we need to add

00:13:52.290 --> 00:13:55.280
another Client ID, which will
be the Client ID of our

00:13:55.280 --> 00:13:56.300
Android app.

00:13:56.300 --> 00:13:58.520
So let's click Create
Another Client ID.

00:13:58.520 --> 00:14:00.540
This time, it's not
a web application.

00:14:00.540 --> 00:14:02.630
It's an installed application,
and we can

00:14:02.630 --> 00:14:04.580
choose the Android type.

00:14:04.580 --> 00:14:07.985
At this point, all we need to
add is the Package Name for

00:14:07.985 --> 00:14:12.800
our app, which, for instance,
could be com.example.myapp,

00:14:12.800 --> 00:14:17.010
and then we will need to add
the fingerprint certificate

00:14:17.010 --> 00:14:18.370
for our application.

00:14:18.370 --> 00:14:21.910
And you can find instructions
on how to generate the

00:14:21.910 --> 00:14:26.300
certificate on our docs in the
Getting Started for Android,

00:14:26.300 --> 00:14:28.450
and it's a very easy to
follow procedure.

00:14:28.450 --> 00:14:28.890
JOANNA SMITH: It is.

00:14:28.890 --> 00:14:30.810
And this is a good time to
mention that there are three

00:14:30.810 --> 00:14:33.190
things to keep in mind when
doing over the air installs.

00:14:33.190 --> 00:14:36.460
One is that you need to own the
app that you're going to

00:14:36.460 --> 00:14:39.180
try to drive install support,
which is why you have to

00:14:39.180 --> 00:14:40.440
generate the certificate.

00:14:40.440 --> 00:14:42.760
And if it doesn't match, if the
fingerprint doesn't match

00:14:42.760 --> 00:14:46.000
the original app, then you're
not going to be able to push

00:14:46.000 --> 00:14:46.700
the over the air install.

00:14:46.700 --> 00:14:48.850
And that's why we've already
had some questions online,

00:14:48.850 --> 00:14:51.670
people trying to test over the
air installs with our sample

00:14:51.670 --> 00:14:53.810
apps, and it's not going to
work for this reason.

00:14:53.810 --> 00:14:55.950
The other thing to keep in
mind is, like Silvano

00:14:55.950 --> 00:14:58.630
mentioned, if you don't have
both of these Client IDs for

00:14:58.630 --> 00:15:01.840
installed and web applications
living in one project, they're

00:15:01.840 --> 00:15:03.740
not going to match, and so
you're not going to be able to

00:15:03.740 --> 00:15:05.630
drive the over the air
install that way.

00:15:05.630 --> 00:15:08.470
So make sure that they live in
one API console project.

00:15:08.470 --> 00:15:10.980
And finally, we do have quality
control because we are

00:15:10.980 --> 00:15:13.690
Google, and we are Google+, and
we want to make sure that

00:15:13.690 --> 00:15:15.550
we aren't crossing the
line toward anything

00:15:15.550 --> 00:15:17.180
spammy for our users.

00:15:17.180 --> 00:15:20.340
And so if you have a brand new
app, it might not work for

00:15:20.340 --> 00:15:21.700
over the air installs
right away.

00:15:21.700 --> 00:15:24.400
You do need to get some reviews
from your users and

00:15:24.400 --> 00:15:27.040
some really good ratings before
we'll start pushing

00:15:27.040 --> 00:15:27.850
that for you.

00:15:27.850 --> 00:15:30.760
But just keep trying, get
your users started,

00:15:30.760 --> 00:15:31.960
and it'll work fine.

00:15:31.960 --> 00:15:33.440
I guarantee it.

00:15:33.440 --> 00:15:35.860
SILVANO LUCIANI: And it's a
powerful way of getting your

00:15:35.860 --> 00:15:37.480
app downloaded to a
lot of devices.

00:15:37.480 --> 00:15:38.370
JOANNA SMITH: That's true.

00:15:38.370 --> 00:15:40.530
SILVANO LUCIANI: There's only
one change that is needed in

00:15:40.530 --> 00:15:42.190
the code of the Sign-In
button.

00:15:42.190 --> 00:15:45.380
So back to the code, we
just need to add the

00:15:45.380 --> 00:15:49.220
data-apackagename Parameter,
and you can do it here.

00:15:49.220 --> 00:15:52.170
Let me see, package name.

00:15:52.170 --> 00:15:56.490
And here, you will specify the
package of your Android app,

00:15:56.490 --> 00:16:04.090
so for instance,
com.example.myapp, to follow

00:16:04.090 --> 00:16:05.250
what I did before.

00:16:05.250 --> 00:16:07.330
Now, we're going to
show this to you.

00:16:07.330 --> 00:16:10.600
We have an already prepared
demo which is using an app

00:16:10.600 --> 00:16:13.990
that we already have, and it's
already passing our--

00:16:13.990 --> 00:16:14.690
JOANNA SMITH: Quality control.

00:16:14.690 --> 00:16:15.850
SILVANO LUCIANI: --quality
threshold so that we can show

00:16:15.850 --> 00:16:18.210
you how it's actually working.

00:16:18.210 --> 00:16:19.490
JOANNA SMITH: And some of you
have already seen this app.

00:16:19.490 --> 00:16:20.800
It's our PhotoHunt app.

00:16:20.800 --> 00:16:24.630
We've been using this for demos
all across Google+ and

00:16:24.630 --> 00:16:25.930
Google Developers Live.

00:16:25.930 --> 00:16:28.800
And also, you can see all of
this code in its entirety

00:16:28.800 --> 00:16:31.170
through our GitHub repository,
because we want you to be able

00:16:31.170 --> 00:16:34.220
to see an end to end
implementation.

00:16:34.220 --> 00:16:34.580
Let's take a look.

00:16:34.580 --> 00:16:35.830
SILVANO LUCIANI: So
to our sample.

00:16:40.800 --> 00:16:42.805
So I forgot to disconnect,
and this is why you

00:16:42.805 --> 00:16:44.570
didn't see the OTA.

00:16:44.570 --> 00:16:45.560
Let me do it.

00:16:45.560 --> 00:16:48.820
So I can also show how to
disconnect applications.

00:16:48.820 --> 00:16:52.540
You need to go to your Profile
page, About, and then if you

00:16:52.540 --> 00:16:56.340
scroll at the end, you will
find the apps that are

00:16:56.340 --> 00:16:58.070
connected to your profile.

00:16:58.070 --> 00:17:04.480
In this case, it's PhotoHunt,
and what I want to do is

00:17:04.480 --> 00:17:05.770
disconnect the application.

00:17:05.770 --> 00:17:09.410
So I actually need to go to the
list of apps to do that.

00:17:15.990 --> 00:17:19.619
And once I'm in the list, I can
now disconnect PhotoHunt.

00:17:23.130 --> 00:17:26.294
And sorry for this,
but we are live.

00:17:26.294 --> 00:17:27.050
JOANNA SMITH: Hold
on, Silvano.

00:17:27.050 --> 00:17:28.014
Just wait one minute.

00:17:28.014 --> 00:17:30.270
I need to make sure the tablet
is turned on before we try to

00:17:30.270 --> 00:17:31.520
show off over the
air installs.

00:17:36.360 --> 00:17:37.610
How are we looking,
[? Lewis? ?]

00:17:40.470 --> 00:17:41.870
MALE SPEAKER: The tablet
is definitely on.

00:17:41.870 --> 00:17:43.605
Little bit of screen flicker,
but it'll work for our demo.

00:17:43.605 --> 00:17:45.470
JOANNA SMITH: All right, we're
just going to show you guys

00:17:45.470 --> 00:17:48.120
the install, so it'll be fine.

00:17:48.120 --> 00:17:50.680
SILVANO LUCIANI: OK, so now when
I reload the page, I can

00:17:50.680 --> 00:17:52.940
see the Sign-In button.

00:17:52.940 --> 00:17:55.820
When I click on the Sign-In
button, this is the new

00:17:55.820 --> 00:17:58.430
Consent for PhotoHunt,
and it's similar

00:17:58.430 --> 00:18:00.190
to what we saw before.

00:18:00.190 --> 00:18:03.440
When I click Accept before,
because we have the Android

00:18:03.440 --> 00:18:07.180
app, now Google Play is telling
me, hey, we have an

00:18:07.180 --> 00:18:07.730
Android app.

00:18:07.730 --> 00:18:09.010
Do you want to download it?

00:18:09.010 --> 00:18:11.890
And it's showing me which
are my devices.

00:18:11.890 --> 00:18:14.780
So in this case, it's
a Samsung Nexus 10.

00:18:14.780 --> 00:18:16.790
If I had other devices,
it would show

00:18:16.790 --> 00:18:18.440
me a list of devices.

00:18:18.440 --> 00:18:21.245
And I finally can click Install
to have the app

00:18:21.245 --> 00:18:23.180
downloaded to my Nexus 10.

00:18:23.180 --> 00:18:25.240
Just see it.

00:18:25.240 --> 00:18:27.310
JOANNA SMITH: Fair warning, it
is flickering, but you guys

00:18:27.310 --> 00:18:28.575
can at least see the
install happen.

00:18:31.190 --> 00:18:32.020
And look at that.

00:18:32.020 --> 00:18:32.950
It's already here.

00:18:32.950 --> 00:18:34.260
I didn't touch the tablet.

00:18:34.260 --> 00:18:35.900
I didn't have to accept
anything,

00:18:35.900 --> 00:18:37.440
because I own this tablet--

00:18:37.440 --> 00:18:39.090
or Silvano owns the tablet,
and his account is

00:18:39.090 --> 00:18:40.140
associated with it--

00:18:40.140 --> 00:18:42.020
we have the app that
automatically appears on the

00:18:42.020 --> 00:18:42.790
Home screen.

00:18:42.790 --> 00:18:43.990
Whoops, shouldn't
have touched it.

00:18:43.990 --> 00:18:46.350
We also have a notification
letting us know that PhotoHunt

00:18:46.350 --> 00:18:47.990
has been successfully
installed.

00:18:47.990 --> 00:18:50.760
And it's that simple to drive
downloads for your users with

00:18:50.760 --> 00:18:51.810
your Android app.

00:18:51.810 --> 00:18:54.410
All you have to do is add one
line of code and make one

00:18:54.410 --> 00:18:57.440
configuration change, and it's
done when they log in for the

00:18:57.440 --> 00:18:58.520
first time.

00:18:58.520 --> 00:19:00.202
SILVANO LUCIANI: And I'm
a new PhotoHunt user.

00:19:00.202 --> 00:19:03.160
JOANNA SMITH: Yes,
this is great.

00:19:03.160 --> 00:19:06.080
So moving on, hey, Silvano?

00:19:06.080 --> 00:19:08.910
The Google+ Sign-In button
is really cool, but in my

00:19:08.910 --> 00:19:12.610
website, I like to fine tune
every single detail, and I

00:19:12.610 --> 00:19:14.260
have very strict requirements.

00:19:14.260 --> 00:19:16.270
Does that mean that I can't
use the button if I'm not

00:19:16.270 --> 00:19:18.740
happy with the ones that
Google provides?

00:19:18.740 --> 00:19:21.270
Said every developer ever.

00:19:21.270 --> 00:19:22.380
So how do we respond?

00:19:22.380 --> 00:19:23.440
SILVANO LUCIANI: Don't
worry, Joanna.

00:19:23.440 --> 00:19:25.310
Don't worry, every
developer ever.

00:19:25.310 --> 00:19:28.450
You can still have your own
markup, and you can still have

00:19:28.450 --> 00:19:31.270
all the functionalities
of the Sign-In button.

00:19:31.270 --> 00:19:33.410
I will show you how to do it.

00:19:33.410 --> 00:19:36.050
There's several ways
of doing it.

00:19:36.050 --> 00:19:38.360
I will now show you
the easiest one.

00:19:38.360 --> 00:19:41.590
But first, let me disconnect
the demo so that--

00:19:41.590 --> 00:19:42.350
JOANNA SMITH: We'll see
the button again.

00:19:42.350 --> 00:19:45.320
SILVANO LUCIANI: We'll
see the button again.

00:19:45.320 --> 00:19:46.490
Now, back to the code.

00:19:46.490 --> 00:19:51.410
The easiest way of doing it is
inside this pane, where you

00:19:51.410 --> 00:19:55.195
are applying the class g-signin,
you can add an image

00:19:55.195 --> 00:19:59.680
or another span or a button,
where you will style your own

00:19:59.680 --> 00:20:01.070
Sign-In button.

00:20:01.070 --> 00:20:03.890
And this will be picked up
by our JavaScript and the

00:20:03.890 --> 00:20:06.380
behavior will be attached
to that element.

00:20:06.380 --> 00:20:10.810
So in this case, I can show
you a very simple thing.

00:20:10.810 --> 00:20:14.310
I have a g+32.png.

00:20:14.310 --> 00:20:17.240
I downloaded this from our
Branding Guidelines page,

00:20:17.240 --> 00:20:21.150
where you can find a whole set
of icons that you can use for

00:20:21.150 --> 00:20:23.820
your buttons, and most
importantly, you can find the

00:20:23.820 --> 00:20:27.150
branding guidelines which you
will need to follow when

00:20:27.150 --> 00:20:30.670
customizing the markup
for your button.

00:20:30.670 --> 00:20:35.950
Now that this is done,
back to our demo.

00:20:35.950 --> 00:20:37.360
I can reload it.

00:20:37.360 --> 00:20:40.262
Let me reload the correct one.

00:20:40.262 --> 00:20:43.010
JOANNA SMITH: Good catch.

00:20:43.010 --> 00:20:44.780
SILVANO LUCIANI: And
now as you can see,

00:20:44.780 --> 00:20:46.840
the icon has changed.

00:20:46.840 --> 00:20:50.020
You will need to style
everything, so in this case,

00:20:50.020 --> 00:20:53.400
if I hover over the button, it's
not changed to a hand,

00:20:53.400 --> 00:20:56.680
it's still a cursor, but it's
very easy to do with CSS.

00:20:56.680 --> 00:20:58.780
And you can see that
if I click, all the

00:20:58.780 --> 00:21:00.220
functionalities are there.

00:21:00.220 --> 00:21:04.830
And if I add an Android app and
a valid app package name

00:21:04.830 --> 00:21:09.430
in the button, the OTA install
would pop up after

00:21:09.430 --> 00:21:12.020
accepting the app.

00:21:12.020 --> 00:21:14.070
JOANNA SMITH: It's easy quick,
just as we promised.

00:21:14.070 --> 00:21:16.720
And if you want some examples
also of some custom buttons

00:21:16.720 --> 00:21:18.480
that are already out there in
the world, you can check out

00:21:18.480 --> 00:21:21.080
any of our launch partners,
which you can find as case

00:21:21.080 --> 00:21:23.250
studies on our documentation,
to see what they did with

00:21:23.250 --> 00:21:25.420
theirs, because a lot of them
did want a custom button.

00:21:25.420 --> 00:21:26.730
It's very common.

00:21:26.730 --> 00:21:29.190
And of course, you can find
details and explanations in

00:21:29.190 --> 00:21:32.940
our documentation at
developers.google.com/plus.

00:21:32.940 --> 00:21:35.510
If you have any questions,
please don't hesitate to raise

00:21:35.510 --> 00:21:38.980
them in our Google+ Developers
community, because, like I

00:21:38.980 --> 00:21:41.340
said, we hang out there, and we
love to answer questions.

00:21:41.340 --> 00:21:45.470
And we're happy to provide
advice and let you know.

00:21:45.470 --> 00:21:47.240
And if you aren't sure if you
meet the branding guidelines,

00:21:47.240 --> 00:21:47.960
just ask us.

00:21:47.960 --> 00:21:49.520
We're more than happy to help.

00:21:49.520 --> 00:21:52.440
SILVANO LUCIANI: Or if, like
me, code is your thing and

00:21:52.440 --> 00:21:54.910
you'd like to see more examples,
check out our

00:21:54.910 --> 00:21:56.815
organization at GitHub,
github.com/organ

00:21:56.815 --> 00:21:58.065
ization/google+.

00:21:59.940 --> 00:22:02.740
We have the kick starts
for almost

00:22:02.740 --> 00:22:04.620
every existing language--

00:22:04.620 --> 00:22:09.600
Java, JavaScript, Python,
PHP, Go, Ruby, C Sharp.

00:22:09.600 --> 00:22:12.570
And also, as I mentioned before,
we added PhotoHunt,

00:22:12.570 --> 00:22:15.840
which is our end to end
sample application.

00:22:15.840 --> 00:22:20.300
You can now find Java back end
and JavaScript front end

00:22:20.300 --> 00:22:24.080
written in AngularJS and also
the two mobile clients,

00:22:24.080 --> 00:22:27.890
Android and iOS, and we are
working very hard to add more

00:22:27.890 --> 00:22:30.020
languages and more back ends.

00:22:30.020 --> 00:22:31.920
JOANNA SMITH: Yeah, so we're
looking forward to all of that

00:22:31.920 --> 00:22:34.510
and helping you guys out
as much as we can.

00:22:34.510 --> 00:22:38.270
And of course, if you have an
issue in your own development,

00:22:38.270 --> 00:22:40.510
you can raise a question on
Stack Overflow using the

00:22:40.510 --> 00:22:44.100
Google+ tag, and we check that
daily, if not more often.

00:22:44.100 --> 00:22:46.840
And finally, if you find an
actual bug in anything in the

00:22:46.840 --> 00:22:50.410
APIs, in our Quick Starts, raise
it in our Issue Tracker.

00:22:50.410 --> 00:22:51.100
Let us know.

00:22:51.100 --> 00:22:53.580
And if you find a bug someone
else found, star that issue.

00:22:53.580 --> 00:22:56.560
We use the stars to gauge how
many people are affected by a

00:22:56.560 --> 00:22:59.270
particular bug, and also how
many people are wanting the

00:22:59.270 --> 00:23:00.570
same feature request.

00:23:00.570 --> 00:23:03.140
So let us know and tell us what
you think in our Issue

00:23:03.140 --> 00:23:05.082
Tracker, and we definitely will
take a look at that and

00:23:05.082 --> 00:23:06.680
use that moving forward.

00:23:06.680 --> 00:23:09.580
SILVANO LUCIANI: And remember
that we are touring the world.

00:23:09.580 --> 00:23:11.730
We are around the world in
different locations on

00:23:11.730 --> 00:23:15.040
different dates, so check out
if any of the upcoming

00:23:15.040 --> 00:23:18.070
locations and dates are suitable
for you and come code

00:23:18.070 --> 00:23:21.070
with us, because we will be
really happy to code with you

00:23:21.070 --> 00:23:23.360
and help you build awesome
integration

00:23:23.360 --> 00:23:24.085
with Google+ Sign-In.

00:23:24.085 --> 00:23:26.590
JOANNA SMITH: It's true, so
we'll see you in the next

00:23:26.590 --> 00:23:27.840
hemisphere.

00:23:35.290 --> 00:23:41.803
[MUSIC PLAYING]

