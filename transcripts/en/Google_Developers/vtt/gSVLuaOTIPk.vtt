WEBVTT
Kind: captions
Language: en

00:00:04.995 --> 00:00:06.120
WAYNE PIEKARSKI: Hi, there.

00:00:06.120 --> 00:00:09.360
It's time to start writing
applications for Android Auto.

00:00:09.360 --> 00:00:11.250
I'm Wayne Piekarski from Google.

00:00:11.250 --> 00:00:13.140
And today, I'm going
to show you how easy it

00:00:13.140 --> 00:00:15.320
is to extend your
existing messaging

00:00:15.320 --> 00:00:18.980
application to
support Android Auto.

00:00:18.980 --> 00:00:20.920
The Android Auto software
runs on your phone

00:00:20.920 --> 00:00:23.490
and is responsible for drawing
the user interface that

00:00:23.490 --> 00:00:25.650
appears on the
vehicle's display here.

00:00:25.650 --> 00:00:29.110
So the phone connects to
the vehicle via USB cable.

00:00:29.110 --> 00:00:31.429
And if you want to learn
more about how this works,

00:00:31.429 --> 00:00:33.720
you should check out our
"Introduction to Android Auto"

00:00:33.720 --> 00:00:34.590
DevByte.

00:00:34.590 --> 00:00:36.840
Android Auto provides
extensions that

00:00:36.840 --> 00:00:39.460
allow you to easily integrate
it with your existing messaging

00:00:39.460 --> 00:00:40.500
application.

00:00:40.500 --> 00:00:42.570
These extensions allow
you to use a voice control

00:00:42.570 --> 00:00:45.160
interface optimized
for use in a car.

00:00:45.160 --> 00:00:48.220
You can use voice controls to
reply to message notifications

00:00:48.220 --> 00:00:50.130
without having to
type on your phone.

00:00:50.130 --> 00:00:52.160
This is great, because
the user's driving a car,

00:00:52.160 --> 00:00:53.786
and they need
minimal distractions,

00:00:53.786 --> 00:00:55.660
and they need to keep
their eyes on the road.

00:00:55.660 --> 00:00:57.310
And best of all,
Android Auto takes

00:00:57.310 --> 00:00:59.685
care of all the hard parts of
speech recognition for you.

00:00:59.685 --> 00:01:02.790
You just need to add a
few extra lines of code.

00:01:02.790 --> 00:01:03.420
Oh, look.

00:01:03.420 --> 00:01:05.128
Here's a message from
my colleague Brian.

00:01:05.128 --> 00:01:06.390
Let's see what he has to say.

00:01:06.390 --> 00:01:06.890
[BING]

00:01:06.890 --> 00:01:08.480
ANDROID: Here's the message.

00:01:08.480 --> 00:01:11.910
"You're late for the studio."

00:01:11.910 --> 00:01:12.810
[BING]

00:01:12.810 --> 00:01:15.630
WAYNE PIEKARSKI:
Reply to message.

00:01:15.630 --> 00:01:17.870
ANDROID: Say your message.

00:01:17.870 --> 00:01:20.692
WAYNE PIEKARSKI: I'll be
there in five minutes, Brian.

00:01:20.692 --> 00:01:21.900
ANDROID: Here's your message.

00:01:21.900 --> 00:01:23.650
"I'll be there in
five minutes, Brian."

00:01:23.650 --> 00:01:24.910
Do you want to send it?

00:01:24.910 --> 00:01:25.900
WAYNE PIEKARSKI: Yes.

00:01:25.900 --> 00:01:27.425
ANDROID: Sending message.

00:01:27.425 --> 00:01:28.550
WAYNE PIEKARSKI: All right.

00:01:28.550 --> 00:01:30.520
Well, let's head
off to the studio.

00:01:30.520 --> 00:01:32.890
Right now, your existing
messaging application

00:01:32.890 --> 00:01:35.410
will use notification
objects to tell the user

00:01:35.410 --> 00:01:37.520
when a message has arrived.

00:01:37.520 --> 00:01:40.530
So the notification is going to
contain the text of the message

00:01:40.530 --> 00:01:43.080
and providing an intent to
run when the notification is

00:01:43.080 --> 00:01:44.370
selected on the user's phone.

00:01:44.370 --> 00:01:46.082
So this is what
you already have.

00:01:46.082 --> 00:01:47.540
Now, what I'm going
to show you now

00:01:47.540 --> 00:01:50.210
is how to add some simple
notification extensions

00:01:50.210 --> 00:01:54.640
to your notification objects to
get Android Auto functionality.

00:01:54.640 --> 00:01:57.740
To enable the ability to reply
to messages from the car,

00:01:57.740 --> 00:01:59.280
the first thing
you need to do is

00:01:59.280 --> 00:02:01.299
to create a
remoteInput instance.

00:02:01.299 --> 00:02:03.340
And this is going to be
responsible for receiving

00:02:03.340 --> 00:02:07.190
and processing audio
input from Android Auto.

00:02:07.190 --> 00:02:09.919
A speech recognizer is
used on the spoken audio,

00:02:09.919 --> 00:02:11.890
and the notification
system will then

00:02:11.890 --> 00:02:16.510
deliver this as a plain string
to an intent that we provide.

00:02:16.510 --> 00:02:18.850
If you've ever done any
Android Wear extensions before,

00:02:18.850 --> 00:02:21.360
you'll notice this
is very similar.

00:02:21.360 --> 00:02:23.830
Next, we need to
provide to Android Auto

00:02:23.830 --> 00:02:26.050
the contents of any
unread messages,

00:02:26.050 --> 00:02:28.090
so that it can read
them out to the user

00:02:28.090 --> 00:02:30.200
and possibly take a reply back.

00:02:30.200 --> 00:02:34.410
To do this, you firstly create
a new UnreadConversation object

00:02:34.410 --> 00:02:37.270
from the CarExtender class
and provide four pieces

00:02:37.270 --> 00:02:39.190
of information-- the
name of the person

00:02:39.190 --> 00:02:42.040
who sent the message,
a time stamp, an intent

00:02:42.040 --> 00:02:43.800
to indicate when
a message is read,

00:02:43.800 --> 00:02:48.030
and a reply action using
the previous remote input.

00:02:48.030 --> 00:02:50.510
Your messaging
application will right now

00:02:50.510 --> 00:02:53.600
contain an array or a
list of existing messages.

00:02:53.600 --> 00:02:55.030
And you'll write
a full loop that

00:02:55.030 --> 00:02:57.780
traverses through every
unread message from the sender

00:02:57.780 --> 00:03:01.100
and add them to this
UnreadConversation object.

00:03:01.100 --> 00:03:04.680
Now you need to take your
existing notification code

00:03:04.680 --> 00:03:08.000
and add the CarExtender and
UnreadConversation objects,

00:03:08.000 --> 00:03:11.910
and then issue the notification
as you would have done before.

00:03:11.910 --> 00:03:14.160
And that's basically
it from the Java side.

00:03:14.160 --> 00:03:16.390
So you can take
your existing code,

00:03:16.390 --> 00:03:18.100
and by adding a few
extra lines, you

00:03:18.100 --> 00:03:20.916
get Android Auto
functionality as well.

00:03:20.916 --> 00:03:22.290
So to finish up,
your application

00:03:22.290 --> 00:03:25.570
needs to tell Android Auto
that it supports notifications

00:03:25.570 --> 00:03:27.490
via CarExtender.

00:03:27.490 --> 00:03:30.880
So to do this, you will need to
set up your AndroidManifest.xml

00:03:30.880 --> 00:03:33.670
to reference an XML file
with an automotiveApp

00:03:33.670 --> 00:03:37.370
tag along with a
notification attribute.

00:03:37.370 --> 00:03:39.190
Now, to test your
application, we

00:03:39.190 --> 00:03:40.950
provide a messaging
simulator that

00:03:40.950 --> 00:03:43.340
looks very similar to
the car experience.

00:03:43.340 --> 00:03:45.240
So you can run the
simulator on your phone

00:03:45.240 --> 00:03:47.570
or in the Android
emulator to test

00:03:47.570 --> 00:03:49.790
that you're using
the API correctly.

00:03:49.790 --> 00:03:53.120
It captures the notifications
and supports the CarExtender

00:03:53.120 --> 00:03:54.190
extensions.

00:03:54.190 --> 00:03:56.150
And this is great for
testing at your desk

00:03:56.150 --> 00:03:59.110
while you're doing
the development cycle.

00:03:59.110 --> 00:04:02.090
As you can see, the
fundamentals of your application

00:04:02.090 --> 00:04:04.980
remain the same here, but
you added some very simple

00:04:04.980 --> 00:04:07.150
extensions to your
notification objects

00:04:07.150 --> 00:04:09.410
to get Android Auto features.

00:04:09.410 --> 00:04:12.370
This means it'll be really
easy to extend your existing

00:04:12.370 --> 00:04:16.182
messaging application and
to get it out to your users.

00:04:16.182 --> 00:04:18.265
And what's great about
this is that the same style

00:04:18.265 --> 00:04:21.720
of extensions used in Android
Auto are used for Android Wear

00:04:21.720 --> 00:04:24.070
as well, which shows you
how extendable the Android

00:04:24.070 --> 00:04:27.820
notification system is and
how easy it is to get started.

00:04:27.820 --> 00:04:32.620
So let's get back out to
the car and finish up.

00:04:32.620 --> 00:04:34.990
You can find out more about
Android Auto by visiting

00:04:34.990 --> 00:04:38.490
the documentation site and also
joining the Google+ community,

00:04:38.490 --> 00:04:40.820
where you can share your
ideas with everybody else.

00:04:40.820 --> 00:04:43.340
I'm Wayne Piekarski, and thanks
very much for joining me.

00:04:43.340 --> 00:04:46.310
I'll see you next time.

00:04:46.310 --> 00:04:49.660
Navigate to the Googleplex.

00:04:49.660 --> 00:04:51.510
[BING]

