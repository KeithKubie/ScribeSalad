WEBVTT
Kind: captions
Language: en

00:00:00.100 --> 00:00:01.310
Here we have an example.

00:00:01.310 --> 00:00:03.530
And, what the robot is
actually going to do,

00:00:03.530 --> 00:00:05.939
is it's going to follow
this purple line.

00:00:05.939 --> 00:00:07.850
Okay?
So this is where it starts and

00:00:07.850 --> 00:00:10.150
then it goes here, and
it moves that way.

00:00:10.150 --> 00:00:12.890
What we're showing you to begin
with is a couple of things.

00:00:12.890 --> 00:00:15.620
First of all,
you see all those red dots?

00:00:15.620 --> 00:00:17.640
That's its current set of particles.

00:00:17.640 --> 00:00:20.500
In other words,
it has no idea where it actually is.

00:00:20.500 --> 00:00:26.310
The green is an example of
where it thinks it might be,

00:00:26.310 --> 00:00:29.920
in fact,
this is the locally most likely.

00:00:29.920 --> 00:00:33.020
Which is just some way of
the robot guessing where it is.

00:00:33.020 --> 00:00:36.410
Now, what I'm not showing
on this map is the, for

00:00:36.410 --> 00:00:38.760
each particle there's also a theta,
right?

00:00:38.760 --> 00:00:40.890
Particles have to represent the state.

00:00:40.890 --> 00:00:41.586
What do we say our state was?

00:00:41.586 --> 00:00:43.698
We said it was x, y, and theta.

00:00:43.698 --> 00:00:47.118
It's hard to show this in three, so
I'm only showing x and y, all right?

00:00:47.118 --> 00:00:49.982
But, for
any given theta that I think it is,

00:00:49.982 --> 00:00:54.090
then I would be sending out
a ray of sensor measurements.

00:00:54.090 --> 00:00:57.920
And I think I know where
it should hit because why?

00:00:57.920 --> 00:01:00.110
Because I have a complete map.

00:01:00.110 --> 00:01:01.110
Okay?

00:01:01.110 --> 00:01:04.239
So what happens is,
first, you're going to,

00:01:04.239 --> 00:01:08.130
your eye's just going to
naturally go to the green thing.

00:01:08.130 --> 00:01:10.930
What's going on there is
that's the set of sensor

00:01:10.930 --> 00:01:12.670
measurements that it's getting.

00:01:12.670 --> 00:01:15.130
Though, so wherever,
wherever it thinks it is,

00:01:15.130 --> 00:01:17.230
it puts down the measurements
it actually got.

00:01:17.230 --> 00:01:20.840
Now, if it's in the right place,
those measurements will actually,

00:01:20.840 --> 00:01:24.180
most of the time,
hit the wall at the right distance.

00:01:24.180 --> 00:01:26.908
Every now and then it'll go right
through the wall because it was a no

00:01:26.908 --> 00:01:28.860
return, all right?

00:01:28.860 --> 00:01:29.990
So let me just put it in motion.

00:01:29.990 --> 00:01:31.200
It's easier to, to understand.

00:01:31.200 --> 00:01:33.360
All right, so here we go,
so it's a movie.

00:01:33.360 --> 00:01:36.380
So each one of these changes,

00:01:36.380 --> 00:01:39.630
is when it thinks it is when
it takes a measurement.

00:01:39.630 --> 00:01:42.540
And you'll notice,
there's a clump of particles here, in

00:01:42.540 --> 00:01:47.000
fact that's the most likely clump, and
there's also a clump of particles there.

00:01:47.000 --> 00:01:50.500
That's a nice way of saying
the robot does not know

00:01:50.500 --> 00:01:53.810
whether it's definitely here or
definitely there.

00:01:53.810 --> 00:01:57.990
And the reason for that is
the hallway's kind of symmetric, right?

00:01:57.990 --> 00:02:01.477
There are these doors, okay, but
there's doors on both sides.

00:02:01.477 --> 00:02:04.478
So it hasn't, yet
been able to disambiguate.

00:02:04.478 --> 00:02:08.094
If this is the center of my universe,
whether it's at this area or that area.

00:02:08.094 --> 00:02:10.530
But let me put it back in motion.

00:02:10.530 --> 00:02:13.910
What's going to happen is the robot's
going to go inside, in the room.

00:02:13.910 --> 00:02:16.490
And you'll notice in this room,
in the room it's about to go into,

00:02:16.490 --> 00:02:20.100
there's a ottoman or whatever that is in
the middle that's not in the other room.

00:02:20.100 --> 00:02:22.500
So when it, once it goes in, yep.

00:02:22.500 --> 00:02:23.330
There it goes.

00:02:23.330 --> 00:02:24.190
Okay?

00:02:24.190 --> 00:02:27.470
You'll notice the particles
that are in the wrong place,

00:02:27.470 --> 00:02:29.210
they're going to disappear.

00:02:29.210 --> 00:02:29.840
Okay.

00:02:29.840 --> 00:02:33.070
Now some of the rays are still going in
the wrong direction because, they're,

00:02:33.070 --> 00:02:36.860
they're going through the walls,
but that's just the no return.

00:02:36.860 --> 00:02:40.370
And you'll notice that, by the time
we get to the end of the run,

00:02:40.370 --> 00:02:44.920
you'll notice that it has
localized itself very well.

00:02:44.920 --> 00:02:47.860
Some of the measurements still
go through the walls because

00:02:47.860 --> 00:02:49.780
I'm assuming those were no returns.

00:02:49.780 --> 00:02:53.900
But, just by taking these simple
one-dimensional measurements,

00:02:53.900 --> 00:02:56.590
several of them at a time,
and knowing the map and

00:02:56.590 --> 00:03:01.040
taking its movements, it's able
to localize exactly where it is.

00:03:01.040 --> 00:03:03.410
And that's sort of a hallmark
of particle filtering.

00:03:03.410 --> 00:03:06.830
You start off with a big unknown set,
and

00:03:06.830 --> 00:03:10.130
eventually a whole bunch of
particles go away because

00:03:10.130 --> 00:03:13.160
they're just totally inconsistent
with the measurements you get.

00:03:13.160 --> 00:03:16.330
So when they get multiplied
by p of z given x,

00:03:16.330 --> 00:03:21.680
the likelihood of that measurement is so
small that it diminishes that

00:03:21.680 --> 00:03:26.030
particles weight a lot, and the next
time you sample, let me say this again,

00:03:26.030 --> 00:03:29.450
remember very low weight particles
sometimes don't get sampled at all.

00:03:29.450 --> 00:03:34.200
So what happens is only the samples
that are near the parts of the sensor

00:03:34.200 --> 00:03:38.390
measurements that are consistent
survive and you ke, you keep iterating.

00:03:39.540 --> 00:03:41.430
Also remember we had the two lumps for

00:03:41.430 --> 00:03:44.190
awhile there because it wasn't sure
whether it was this one or that one.

00:03:44.190 --> 00:03:46.990
Because it didn't have enough
information to know yet.

00:03:46.990 --> 00:03:51.120
It wasn't until it went inside that
room that it had that information.

00:03:51.120 --> 00:03:53.960
And this is sort of the inherent
advantage of particle filtering over

00:03:53.960 --> 00:03:57.780
say, a Kalman filter that
has a single hypothesis.

00:03:57.780 --> 00:04:00.900
For those of you who have maybe heard
of multi-hypothesis tracking where you,

00:04:00.900 --> 00:04:03.200
where you end up having
multiple hypothesis.

00:04:03.200 --> 00:04:05.460
One way of thinking
a particle filter is, is,

00:04:05.460 --> 00:04:09.970
it gives me just a uniform and easy way
of doing multiple hypothesis tracking.

