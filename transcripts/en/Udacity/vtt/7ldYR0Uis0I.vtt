WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
Now, every problem is a little different,

00:00:03.000 --> 00:00:06.000
and all of the database products are a little different,

00:00:06.000 --> 00:00:09.000
so most of what I'm going to cover in this lesson applies

00:00:09.000 --> 00:00:12.000
in the general case, but not always.

00:00:12.000 --> 00:00:16.000
But one of the things that does apply in almost every general case is this notion of tables,

00:00:16.000 --> 00:00:20.000
so let's say we're building a site like Reddit that's going to take links from users,

00:00:20.000 --> 00:00:24.000
and we will store them in a database and allow users to vote on those links,

00:00:24.000 --> 00:00:26.000
and then we'll show what's the most popular.

00:00:26.000 --> 00:00:29.000
We'll probably have a table for links,

00:00:29.000 --> 00:00:32.000
and this link is made up of a number of things.

00:00:32.000 --> 00:00:34.000
It's got an ID.

00:00:34.000 --> 00:00:36.000
It's probably got a number of votes.

00:00:36.000 --> 00:00:39.000
It's got the user that submitted the link.

00:00:39.000 --> 00:00:43.000
It's got a date of when the link was submitted,

00:00:43.000 --> 00:00:45.000
and it probably has a title.

00:00:45.000 --> 00:00:49.000
This is what we'd display on the site, and a URL.

00:00:49.000 --> 00:00:52.000
These are all called columns of the database.

00:00:52.000 --> 00:00:56.000
Columns are basically the properties that

00:00:56.000 --> 00:00:59.000
make up a particular type, so in this case, our type is a link.

00:00:59.000 --> 00:01:03.000
That's what we're going to call our table, and these are columns.

00:01:03.000 --> 00:01:07.000
Now, every entry of a link in this table is called a row,

00:01:07.000 --> 00:01:09.000
so we might have a link that looks something like this.

00:01:09.000 --> 00:01:11.000
Here would be an example ID, 5.

00:01:11.000 --> 00:01:13.000
It's just an integer.

00:01:13.000 --> 00:01:15.000
The number of votes that this link has.

00:01:15.000 --> 00:01:17.000
The user that submitted it. This is an interesting column.

00:01:17.000 --> 00:01:19.000
We'll come back to this.

00:01:19.000 --> 00:01:23.000
The date of when the link was submitted and a title and a URL.

00:01:23.000 --> 00:01:26.000
Let's talk about each of these columns.

00:01:26.000 --> 00:01:30.000
Now, this thing in its entirety is called a row,

00:01:30.000 --> 00:01:35.000
and a row is one instance of an element in this table,

00:01:35.000 --> 00:01:39.000
so we'll have many, many rows for all of the links that are submitted.

00:01:39.000 --> 00:01:43.000
And my label isn't very good here, but these are the columns.

00:01:43.000 --> 00:01:45.000
Columns go down, rows go across.

00:01:45.000 --> 00:01:47.000
Let's talk about each of these columns.

00:01:47.000 --> 00:01:49.000
The ID column is important in almost all tables.

00:01:49.000 --> 00:01:51.000
Generally every row will have an ID,

00:01:51.000 --> 00:01:54.000
and this is how you refer to that row specifically.

00:01:54.000 --> 00:01:56.000
This is link #5.

00:01:56.000 --> 00:02:00.000
It's not required in most databases that you have something called an ID,

00:02:00.000 --> 00:02:05.000
but it's really helpful, and in some databases, it is, in fact, required.

00:02:05.000 --> 00:02:07.000
Usually it's an integer. It could be a string.

00:02:07.000 --> 00:02:14.000
The database on Google App Engine allows you to use integers or strings.

00:02:14.000 --> 00:02:18.000
This column here, votes, this column is also an integer.

00:02:18.000 --> 00:02:21.000
This refers to the number of votes on this link.

00:02:21.000 --> 00:02:24.000
This column here, user, is also an integer,

00:02:24.000 --> 00:02:27.000
so this is a reference to the ID of the user who submitted the link,

00:02:27.000 --> 00:02:33.000
so we may have another table called Users or User

00:02:33.000 --> 00:02:36.000
that may have its own set of columns, one of which is an ID.

00:02:36.000 --> 00:02:42.000
It may also have name and date

00:02:42.000 --> 00:02:45.000
and maybe password.

00:02:45.000 --> 00:02:49.000
There could be another table called User that stores all of our users,

00:02:49.000 --> 00:02:54.000
and this column is just a reference to this other table,

00:02:54.000 --> 00:02:57.000
and we'll come back more to these types of relationships later,

00:02:57.000 --> 00:03:00.000
but just know that this is a common way of doing things.

00:03:00.000 --> 00:03:04.000
Okay, so then we'll have our date column for the link,

00:03:04.000 --> 00:03:07.000
and this probably has a type of date.

00:03:07.000 --> 00:03:10.000
Not all databases support the date type, but the ones we'll be using in this class do,

00:03:10.000 --> 00:03:13.000
and it's really handy to store this stuff.

00:03:13.000 --> 00:03:16.000
And this is ultimately probably an integer, but depending on

00:03:16.000 --> 00:03:19.000
the sophistication of the database, they may have a real date type.

00:03:19.000 --> 00:03:21.000
And of course, we'll have the title,

00:03:21.000 --> 00:03:23.000
which is a string.

00:03:23.000 --> 00:03:27.000
This may also in some databases be known as text

00:03:27.000 --> 00:03:31.000
or varchar or there's lots of ways of referring to it,

00:03:31.000 --> 00:03:36.000
but it's basically just referring to this type, but it's just a string.

00:03:36.000 --> 00:03:39.000
And URL is the same thing. It's also a string.

00:03:39.000 --> 00:03:42.000
Our table is made up of--defined of columns,

00:03:42.000 --> 00:03:44.000
and it's filled up with rows.

00:03:44.000 --> 00:03:47.000
Every time a user submits something, we add a new row.

00:03:47.000 --> 00:03:54.000
If another submission comes in--we may have 0 votes and submitted by user 27--

00:03:54.000 --> 00:03:58.000
this table can have a lot of data in it.

00:03:58.000 --> 00:04:02.000
Before we go into specific database stuff, let's work through some

00:04:02.000 --> 00:04:05.000
examples in Python of how we might manipulate

00:04:05.000 --> 00:04:09.000
this kind of structured data programming.

