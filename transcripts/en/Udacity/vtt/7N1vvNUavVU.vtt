WEBVTT
Kind: captions
Language: en

00:00:00.350 --> 00:00:02.130
And this is what it looks like in code.

00:00:02.130 --> 00:00:07.060
Firstly, we collect the properties
of the card in a collapsed position.

00:00:07.060 --> 00:00:10.130
We expand the card and
collect the properties again.

00:00:10.130 --> 00:00:15.000
Next, we figure out the differences and
then we transform the card back.

00:00:15.000 --> 00:00:17.870
Because we made this style change
we have to wait a frame for

00:00:17.870 --> 00:00:19.940
those style changes to take effect.

00:00:19.940 --> 00:00:23.440
Otherwise, if we change them again
the browser would ignore these and

00:00:23.440 --> 00:00:24.960
we'd see no animation.

00:00:24.960 --> 00:00:26.390
Now we've waited a frame.

00:00:26.390 --> 00:00:31.146
We can switch on animations and
remove the invert, transforms, and

00:00:31.146 --> 00:00:33.610
our past two changes.

00:00:33.610 --> 00:00:37.620
All that property collection,
probably sounds quite expensive and

00:00:37.620 --> 00:00:39.290
you may be wondering how
you can afford to do it.

00:00:39.290 --> 00:00:41.750
It sounds like a lot, and it is.

00:00:41.750 --> 00:00:44.700
I mean, you're doing all
these calculations on demand

00:00:44.700 --> 00:00:47.220
whenever a user clicks or
taps on a card.

00:00:47.220 --> 00:00:51.250
Well it turns out, I was making use of
the 100 millisecond response window

00:00:51.250 --> 00:00:54.520
to do all those experts
of calculations up front.

00:00:54.520 --> 00:00:58.690
On a Nexus 5 it took around 70
milliseconds to get everything done,

00:00:58.690 --> 00:01:01.170
which is well inside that
100 millisecond boundary.

