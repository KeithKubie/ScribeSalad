WEBVTT
Kind: captions
Language: en

00:00:00.230 --> 00:00:03.490
I've shown you some graphs that suggest
the ways the models can fit the data,

00:00:03.490 --> 00:00:05.360
more or less closely.

00:00:05.360 --> 00:00:08.400
But let's have a more formal
definition of this matching.

00:00:08.400 --> 00:00:09.760
It's called error.

00:00:09.760 --> 00:00:13.230
A standard way to measure error,
is called RMS error.

00:00:13.230 --> 00:00:15.350
Let me show you how to calculate this.

00:00:15.350 --> 00:00:17.180
Let's suppose we use this data,

00:00:17.180 --> 00:00:19.860
which are these green points,
to build a model.

00:00:19.860 --> 00:00:23.350
Let's say it's a linear model like this.

00:00:23.350 --> 00:00:27.360
We can assess the model
at each real data point.

00:00:27.360 --> 00:00:29.300
For instance, at this data point.

00:00:29.300 --> 00:00:35.080
And measure the difference between the Y
value of the data point, and the model.

00:00:35.080 --> 00:00:37.130
And this difference is error.

00:00:38.240 --> 00:00:41.180
Now, we've got an error at every
single one of these data points.

00:00:41.180 --> 00:00:45.850
And what we do to measure
root mean squared error,

00:00:45.850 --> 00:00:50.400
is to take the error at each
one of these points, square it,

00:00:50.400 --> 00:00:54.110
add them together, take the average,
and take the square root of that.

00:00:54.110 --> 00:00:58.600
So that sounds kind of complicated,
but here's what it looks like.

00:00:58.600 --> 00:01:00.560
Ytest minus Ypredict.

00:01:00.560 --> 00:01:04.480
So Ytest are the actual
values of the data.

00:01:04.480 --> 00:01:07.900
Ypredict are what our model predicted.

00:01:07.900 --> 00:01:10.700
We take that difference at each point.

00:01:10.700 --> 00:01:12.160
That's this difference.

00:01:12.160 --> 00:01:15.720
Square it, sum all those together,

00:01:15.720 --> 00:01:19.040
divide by the number of points and
take the square root.

00:01:19.040 --> 00:01:21.120
And that's our root mean squared error.

00:01:21.120 --> 00:01:23.610
And what this is
an approximation of really,

00:01:23.610 --> 00:01:27.080
is sort of the average error here.

00:01:27.080 --> 00:01:31.440
But we end up emphasizing
larger errors a bit more.

