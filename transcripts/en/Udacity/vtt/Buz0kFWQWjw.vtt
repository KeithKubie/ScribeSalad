WEBVTT
Kind: captions
Language: en

00:00:00.318 --> 00:00:05.328
Today we're going to be talking about,
for the first course,

00:00:05.328 --> 00:00:11.436
just dive deep into a little more about
using the flexbox display in HTML.

00:00:11.436 --> 00:00:16.753
This is a new way of creating
very responsive grids and

00:00:16.753 --> 00:00:21.018
layout, and it's actually really easy.

00:00:21.018 --> 00:00:26.231
So this is a demo that will feature
just the basics of flexbox.

00:00:26.231 --> 00:00:31.106
So let's assume that I'm
starting my webpage from scratch.

00:00:31.106 --> 00:00:33.026
I do not want to use bootstrap.

00:00:33.026 --> 00:00:38.114
I do not want to use the ert
great layout structure, I want

00:00:38.114 --> 00:00:45.050
to be able to figure out how to create
my own custom layout using flexbox.

00:00:45.050 --> 00:00:48.950
And here's the code and
I just want to go through down here,

00:00:48.950 --> 00:00:53.942
here's basically the code here, here's
all these [INAUDIBLE] as you can see

00:00:53.942 --> 00:00:56.528
here and I've used just the basic CSS.

00:00:56.528 --> 00:01:01.277
Actually color [INAUDIBLE]
because you can clearly see what,

00:01:01.277 --> 00:01:06.769
how you will be going to actually align
a layout a nice sort of a layout or

00:01:06.769 --> 00:01:10.121
so basically in this
case I'll start off,

00:01:10.121 --> 00:01:14.010
I'll just create a budget disk and
by default.

00:01:14.010 --> 00:01:18.266
Their displays, this is called display
block, they typically pick up the whole

00:01:18.266 --> 00:01:21.380
width of the browser and
they stack on top of each other.

00:01:21.380 --> 00:01:26.730
And that's, by default,
how everything works.

00:01:26.730 --> 00:01:31.658
Now, how I would change this from the
default display from a block display to

00:01:31.658 --> 00:01:32.659
flex display,

00:01:32.659 --> 00:01:36.818
is really just this one line of
code here in my container object.

00:01:36.818 --> 00:01:39.890
Also need to make sure
that we have object here.

00:01:39.890 --> 00:01:42.902
This actually crucial to do, so

00:01:42.902 --> 00:01:48.045
a lot of web developers
use a one by container.

00:01:48.045 --> 00:01:53.445
Everything else will get control, a lot
of the rest of the elements down here.

00:01:53.445 --> 00:02:00.476
So, in my container object,
container element I will go in.

00:02:00.476 --> 00:02:05.707
Actually this and save this,

00:02:05.707 --> 00:02:11.230
and now I refresh and this is flex.

00:02:11.230 --> 00:02:12.800
So this is what it looks like now.

00:02:12.800 --> 00:02:15.288
And now you're like wait
a minute what just happened?

00:02:15.288 --> 00:02:21.574
Flex by default tries to put everything
instead of a horizontal mode,

00:02:21.574 --> 00:02:25.941
it lights up everything in
a more vertical mode so

00:02:25.941 --> 00:02:30.414
basically what we've done
is in one line of code,

00:02:30.414 --> 00:02:33.927
we're able to lay out all of our

00:02:33.927 --> 00:02:38.635
side by side instead of
stacked on top of each other.

00:02:38.635 --> 00:02:45.060
Now sometimes they're like
well that's fine, [INAUDIBLE].

00:02:45.060 --> 00:02:49.961
They are structured but I won't be able
to control the layout a little more,

00:02:49.961 --> 00:02:52.345
is there a way to control the layout?

00:02:52.345 --> 00:02:54.645
And what it is is called flex graph.

00:02:55.965 --> 00:02:58.875
It's an option in CSS called flex graph.

00:02:58.875 --> 00:03:02.445
So that's the graphing feature.

00:03:02.445 --> 00:03:03.115
And here we go.

00:03:03.115 --> 00:03:08.135
So basically it goes back to
what we've seen like with flex

00:03:08.135 --> 00:03:13.430
graph it actually if the element
doesn't fit on one row

00:03:13.430 --> 00:03:18.280
it actually wraps around
the whole web page.

00:03:18.280 --> 00:03:20.550
Then you figure out one more.

00:03:20.550 --> 00:03:22.950
I want to be able to control.

00:03:22.950 --> 00:03:29.750
I want weather and advertisement to line
out side by side, so how do I do that?

00:03:29.750 --> 00:03:34.630
And the key is to learn FLEX and
display FLEX and display FLEX graph,

00:03:34.630 --> 00:03:38.395
gives you the basic
foundation in order for

00:03:38.395 --> 00:03:42.725
you to be able to control
the width of your elements.

00:03:42.725 --> 00:03:46.885
So, let's say okay,
I won't be able to have green.

00:03:46.885 --> 00:03:50.045
This isn't that this is my weather or
outlet and

00:03:50.045 --> 00:03:56.830
my advertisements,
they'll be side by side.

00:03:56.830 --> 00:04:01.580
And they'll each take 50%
of my width of my browser.

00:04:01.580 --> 00:04:06.965
Same thing, I want my gray and
my yellow, related article and

00:04:06.965 --> 00:04:10.425
by not a related article I don't want
them to appear side by side as well.

00:04:10.425 --> 00:04:17.365
So what we simply do is we just,
this is go to here.

00:04:17.365 --> 00:04:24.385
We just set the width and flex box,
right here, this is magic.

00:04:24.385 --> 00:04:26.170
And a couple of steps.

00:04:27.680 --> 00:04:30.810
I'm able to create somewhat
of a layout for it,

00:04:30.810 --> 00:04:33.090
and as you can see, this is pretty fast.

00:04:33.090 --> 00:04:35.200
You can say, well Mark,
this is great, but

00:04:35.200 --> 00:04:39.140
I won't be able to have a very
flexible layout, in say,

00:04:39.140 --> 00:04:44.640
if a person were to load this up
in a mobile app, mobile device.

00:04:44.640 --> 00:04:50.310
So basically if I were to,
there we go, if I were to resize.

00:04:50.310 --> 00:04:52.610
As you see, I'm resizing this right now.

00:04:52.610 --> 00:04:57.280
This is basically the size
of a typical mobile phone.

00:04:57.280 --> 00:05:01.300
But you don't want them to look at
this tiny weather section here,

00:05:01.300 --> 00:05:03.220
in that tiny advertising section.

00:05:03.220 --> 00:05:05.020
You actually want them to think about,
okay.

00:05:05.020 --> 00:05:09.570
Let me just, is there a way for
me to go ahead and

00:05:09.570 --> 00:05:15.710
like lay out everything on top in my
mobile, when my viewport is this width?

00:05:15.710 --> 00:05:20.364
And then, like, have the weather
advertisements, the related article, and

00:05:20.364 --> 00:05:21.800
the.

00:05:21.800 --> 00:05:24.250
The grey, yellow, and the green and

00:05:24.250 --> 00:05:28.120
red side by side when a user
is using up your spec.

00:05:28.120 --> 00:05:31.700
Juris is [INAUDIBLE] and
you learned that in [INAUDIBLE] CSS.

00:05:31.700 --> 00:05:38.345
And what I'm going to do is I'm going to
set, I'm going to have logic says like.

00:05:38.345 --> 00:05:41.797
If the width is around,

00:05:41.797 --> 00:05:47.400
it's greater than 360 pixels.

00:05:47.400 --> 00:05:51.090
If this is just where
your [INAUDIBLE] pixels.

00:05:51.090 --> 00:05:57.990
I'm going to have you should be green or
red show side by side.

00:05:57.990 --> 00:06:02.444
And if the width is less than 360
pixels like this one is like,

00:06:02.444 --> 00:06:06.585
I'm going to have all these divs
stacked on top of eachother.

00:06:06.585 --> 00:06:11.172
What I do is I go back into my code and
I include immediate work.

00:06:11.172 --> 00:06:15.540
[SOUND] And you thought you've
learned that HTML CSS class,

00:06:15.540 --> 00:06:20.008
again reminder,
it's called media at media's cleaning.

00:06:20.008 --> 00:06:22.470
And minimum width is 316 watts.

00:06:22.470 --> 00:06:25.360
So basically if
the minimal width is 361.

00:06:25.360 --> 00:06:28.600
I want to create, so
basically if I have a big screen,

00:06:28.600 --> 00:06:30.510
if the user has a big screen.

00:06:30.510 --> 00:06:34.590
I want to green, red, grey,
yellow have a width of 50%.

00:06:34.590 --> 00:06:38.660
Otherwise I'm going have all of
them stacked on top of each other.

00:06:38.660 --> 00:06:42.890
Because by default, if you go up here,
the width is 100% for each division.

00:06:44.520 --> 00:06:46.700
So there's your fresh air.

00:06:46.700 --> 00:06:51.447
So, this is what was simulated
how you're going to simulate on

00:06:51.447 --> 00:06:52.758
a mobile phone.

00:06:52.758 --> 00:06:58.346
[INAUDIBLE] And if you think about
okay this is [INAUDIBLE] and

00:06:58.346 --> 00:07:04.626
if i increase the screen we now go
to someone with a bigger screen.

00:07:08.498 --> 00:07:13.191
That's basically a quick demo
of how you would start thinking

00:07:13.191 --> 00:07:18.154
about using these flex box properties
to learn about how to create

00:07:18.154 --> 00:07:22.600
some very robust layouts in
a very simple and elegant way.

00:07:22.600 --> 00:07:28.000
So I really would highly recommend
you check out flexbox a little more.

00:07:28.000 --> 00:07:32.810
If you want to design your
site using your own layout

00:07:32.810 --> 00:07:36.450
tools because I know we've
taught you how to use Bootstrap.

00:07:36.450 --> 00:07:40.560
Now in this session we're teaching you
how to create your own custom layout.

