WEBVTT
Kind: captions
Language: en

00:00:03.220 --> 00:00:05.520
PROFESSOR: Alright, lecture
12 is about tensegrities,

00:00:05.520 --> 00:00:07.810
like this one which you saw.

00:00:07.810 --> 00:00:11.360
And when they're rigid--
infinitesimal rigidity,

00:00:11.360 --> 00:00:16.560
and carpenter's rule theorem,
all in one quick lecture.

00:00:16.560 --> 00:00:19.610
So, just a couple questions
about tensegrities.

00:00:19.610 --> 00:00:21.530
Well first is about
infinitesimal rigidity

00:00:21.530 --> 00:00:23.630
in general.

00:00:23.630 --> 00:00:27.380
This is sort of extra, bonus.

00:00:27.380 --> 00:00:31.340
I talked about one reason why
this dot product condition

00:00:31.340 --> 00:00:35.060
is the right thing, which
is based on projection.

00:00:35.060 --> 00:00:38.340
But there are other
ways to think about it.

00:00:38.340 --> 00:00:44.520
So let's say we
have an edge, vw--

00:00:44.520 --> 00:00:46.775
actually I think I'll
draw it w on the left.

00:00:49.980 --> 00:00:52.362
So here's vw.

00:00:52.362 --> 00:00:54.550
We would think of
this point is being

00:00:54.550 --> 00:00:56.400
c of w, that's
your configuration.

00:00:56.400 --> 00:01:00.220
This point is c of e.

00:01:00.220 --> 00:01:04.090
Then we were talking about
when, if you have a velocity

00:01:04.090 --> 00:01:07.620
vector, d of w, and
a velocity vector--

00:01:14.560 --> 00:01:18.470
Say something like
this, d of v, when

00:01:18.470 --> 00:01:23.790
it preserves the length of
this bar to the first order.

00:01:23.790 --> 00:01:30.650
And the condition we had was c
of v minus c of w dot product

00:01:30.650 --> 00:01:37.190
with d of v minus
d of w equals 0.

00:01:40.380 --> 00:01:43.470
So the question--
so the way we said

00:01:43.470 --> 00:01:46.390
in class this works is if
you look at the projected

00:01:46.390 --> 00:01:48.770
length of this vector
onto the segment,

00:01:48.770 --> 00:01:50.720
that's essentially
how much shorter,

00:01:50.720 --> 00:01:54.350
in this case it gets
shorter, in this case

00:01:54.350 --> 00:01:56.610
this is how much
longer the segment

00:01:56.610 --> 00:01:57.920
gets to the first order.

00:01:57.920 --> 00:02:02.450
And that corresponds to d of v
dot product with this vector,

00:02:02.450 --> 00:02:05.020
because this vector,
c of v minus c of w

00:02:05.020 --> 00:02:09.830
is this direction here.

00:02:09.830 --> 00:02:10.971
c of v minus c of w.

00:02:10.971 --> 00:02:12.970
So if you take the dot
product with this vector,

00:02:12.970 --> 00:02:14.650
you get that projected length.

00:02:14.650 --> 00:02:17.090
You want those two dot
products to be equal.

00:02:17.090 --> 00:02:19.310
And so you want the
difference to be 0.

00:02:19.310 --> 00:02:21.870
That's one way to
think about it.

00:02:21.870 --> 00:02:26.450
But, in fact, this quantity
also has an intuitive notion,

00:02:26.450 --> 00:02:30.230
if you've done some
basic mechanics.

00:02:30.230 --> 00:02:34.980
This is the relative motion
of v with respect to w.

00:02:34.980 --> 00:02:41.040
So it's like-- well
imagine w is not moving.

00:02:41.040 --> 00:02:44.290
To do that you just subtract
d of w from all motions.

00:02:44.290 --> 00:02:47.180
Then w will remain stationary
to the first order,

00:02:47.180 --> 00:02:49.310
so all first order motions.

00:02:49.310 --> 00:02:50.680
So then what's the motion of v?

00:02:50.680 --> 00:02:54.542
Well, it's going to be
d of v minus d of w,

00:02:54.542 --> 00:02:57.130
because everything get's
subtracted by d of w.

00:02:57.130 --> 00:03:04.320
So that it is-- minus d of
w corresponds to drawing

00:03:04.320 --> 00:03:06.690
that vector in the
other direction,

00:03:06.690 --> 00:03:09.680
and then adding that
to d of w corresponds

00:03:09.680 --> 00:03:11.890
to this kind of picture.

00:03:11.890 --> 00:03:13.930
This is minus d of w.

00:03:13.930 --> 00:03:23.160
And so this vector is
d of v minus d of w.

00:03:23.160 --> 00:03:25.690
That's the sum of
those two vectors.

00:03:25.690 --> 00:03:30.060
And the claim is what we
want is for these two vectors

00:03:30.060 --> 00:03:32.400
to be perpendicular
to each other.

00:03:32.400 --> 00:03:35.010
The edge and the motion.

00:03:35.010 --> 00:03:38.480
And this makes a lot of sense,
because we're imagining w

00:03:38.480 --> 00:03:41.540
as not moving, so
it's just v moving.

00:03:41.540 --> 00:03:46.000
And we want the motion of v
to be perpendicular locally,

00:03:46.000 --> 00:03:49.960
to the segment, because that's
going to preserve the length.

00:03:49.960 --> 00:03:53.030
So that's actually, I think,
an even more intuitive way

00:03:53.030 --> 00:03:53.790
to see it.

00:03:53.790 --> 00:03:55.820
And since this video,
this lecture video,

00:03:55.820 --> 00:03:58.220
has been online for
two years, every year

00:03:58.220 --> 00:04:01.800
so I get an email saying
hey, you asked what is d of w

00:04:01.800 --> 00:04:02.990
minus d of w mean?

00:04:02.990 --> 00:04:05.730
And, yes, I didn't
realize it at the time,

00:04:05.730 --> 00:04:07.080
but it's just relative motion.

00:04:07.080 --> 00:04:09.100
And so, yeah.

00:04:09.100 --> 00:04:12.620
It's like if you're
moving along this circle,

00:04:12.620 --> 00:04:15.720
centered at w, that's where you
want to be, either straight up

00:04:15.720 --> 00:04:18.120
or straight down.

00:04:18.120 --> 00:04:20.110
Clear?

00:04:20.110 --> 00:04:21.079
Some bonus intuition.

00:04:21.079 --> 00:04:23.360
It's a little harder to
see the other conditions

00:04:23.360 --> 00:04:26.270
from this perspective, at
least I find it harder to see.

00:04:26.270 --> 00:04:30.110
But I guess I shouldn't
claim that, or else I'm

00:04:30.110 --> 00:04:33.820
going to get more
emails in the future.

00:04:33.820 --> 00:04:35.870
Let's see, if you
want it to be--

00:04:35.870 --> 00:04:38.476
what does the dot product being
greater or equal to 0 mean?

00:04:38.476 --> 00:04:39.850
It probably means
that this angle

00:04:39.850 --> 00:04:43.956
is obtuse, which means that
the lengths getting longer.

00:04:43.956 --> 00:04:45.330
And less than or
equal to 0 means

00:04:45.330 --> 00:04:47.440
that the angle is
getting non-obtuse.

00:04:47.440 --> 00:04:50.387
And if the dot product rule
of the cosine of the angle,

00:04:50.387 --> 00:04:51.970
you should be able
to figure that out.

00:04:51.970 --> 00:04:56.420
But it's a little bit
less memorized in my head.

00:04:56.420 --> 00:04:58.210
Whereas dot product
equals 0, everyone

00:04:58.210 --> 00:05:01.190
remembers that's
being perpendicular.

00:05:01.190 --> 00:05:04.075
So this was struts and cables.

00:05:10.650 --> 00:05:13.440
Next question was, a
couple questions here.

00:05:13.440 --> 00:05:17.380
One is how can you say the
tensegrity you showed is rigid?

00:05:17.380 --> 00:05:18.875
Because you can flex it.

00:05:18.875 --> 00:05:22.820
This doesn't look very
rigid, this guy here.

00:05:22.820 --> 00:05:24.342
It looks quite flexible.

00:05:24.342 --> 00:05:26.550
And then there was another
question, by someone else,

00:05:26.550 --> 00:05:29.550
saying why did you use
springs to represent bars?

00:05:29.550 --> 00:05:32.350
And these are sort
of the same question.

00:05:32.350 --> 00:05:36.320
This is flexible because
the springs are flexible.

00:05:36.320 --> 00:05:38.590
The idea with the
springs, I mean

00:05:38.590 --> 00:05:41.520
I'm just guessing why this
model is made this way,

00:05:41.520 --> 00:05:44.320
springs are nice because they do
have a natural resting length.

00:05:44.320 --> 00:05:46.840
So in that sense, they
want to be a given length.

00:05:46.840 --> 00:05:50.260
And if you pull on them they try
to restore the original length.

00:05:50.260 --> 00:05:52.160
Also if you push on
them, you can do it,

00:05:52.160 --> 00:05:54.810
but they try to restore
to there resting length.

00:05:54.810 --> 00:05:57.240
And right now these guys are
all on their resting length.

00:05:57.240 --> 00:05:58.614
And what's cool
about this is you

00:05:58.614 --> 00:06:00.340
could kind of feel
the resistance.

00:06:00.340 --> 00:06:03.230
I mean this is what happens in
any material, you pull on it,

00:06:03.230 --> 00:06:05.900
it can maybe pull a
little bit, but it

00:06:05.900 --> 00:06:10.580
gives a lot of force going
back to its original state.

00:06:10.580 --> 00:06:13.780
These-- I don't know,
these cables, probably you

00:06:13.780 --> 00:06:16.430
could stretch that material
and very tiny amount.

00:06:16.430 --> 00:06:18.680
I could feel the force,
it's a little less visible.

00:06:18.680 --> 00:06:20.250
Here you can actually
see the force

00:06:20.250 --> 00:06:23.520
and, because it's
so much smaller,

00:06:23.520 --> 00:06:25.540
it's easier to feel
what's going on in here.

00:06:25.540 --> 00:06:27.010
I think that's the intuition.

00:06:27.010 --> 00:06:30.960
You could, of course, construct
these with steel bars.

00:06:30.960 --> 00:06:32.473
It's just then it
wouldn't move, it

00:06:32.473 --> 00:06:33.806
would be a little less exciting.

00:06:33.806 --> 00:06:35.840
So it's up to you, of course.

00:06:35.840 --> 00:06:39.810
But this is just one way to
build models of tensegrities.

00:06:39.810 --> 00:06:41.460
But it's also why
it's so flexible,

00:06:41.460 --> 00:06:45.640
because these bars
are not super strong.

00:06:45.640 --> 00:06:48.750
But what's kind of fun is you
feel the equilibrium stress

00:06:48.750 --> 00:06:53.091
here, that things go back to
where they were originally.

00:06:53.091 --> 00:06:54.590
They kind of hold
in position there,

00:06:54.590 --> 00:06:57.460
because all the stresses
here balance out.

00:07:02.400 --> 00:07:09.760
And one more kind of question is
about-- sculpture-- tensegrity

00:07:09.760 --> 00:07:12.600
sculptures are cool so I
thought I'd show you a few more

00:07:12.600 --> 00:07:14.360
examples.

00:07:14.360 --> 00:07:17.110
The sort of-- the master
here is Kenneth Snelson.

00:07:17.110 --> 00:07:20.410
I think he possibly
invented tensegrities.

00:07:20.410 --> 00:07:25.150
And I showed one
example in lecture,

00:07:25.150 --> 00:07:26.660
but these are many more.

00:07:26.660 --> 00:07:29.320
He's been doing
it since the '60s.

00:07:29.320 --> 00:07:33.740
Some of them are very big, I
have some measurements here.

00:07:33.740 --> 00:07:38.974
This guy is 85 feet long and
rests on these three posts.

00:07:38.974 --> 00:07:40.890
And it's a little hard
to see the cables here,

00:07:40.890 --> 00:07:43.730
but it's all struts and cables.

00:07:43.730 --> 00:07:48.540
So using these bars
to be-- actually

00:07:48.540 --> 00:07:50.890
they might be bars
in this picture.

00:07:50.890 --> 00:07:53.200
I think they might be rigid
even when they're struts.

00:07:56.130 --> 00:07:58.080
And some more.

00:07:58.080 --> 00:08:00.620
This is one of the
longest, at 72 feet.

00:08:00.620 --> 00:08:03.920
And this is the
tallest, at 90 feet.

00:08:03.920 --> 00:08:04.820
Pretty impressive.

00:08:04.820 --> 00:08:08.580
This is a taller version of the
one that I showed last time,

00:08:08.580 --> 00:08:11.120
or in lecture.

00:08:11.120 --> 00:08:16.010
So I'm not sure how he designs
them, he's an artist by trade.

00:08:16.010 --> 00:08:18.370
Whether he uses computational
tools, or gadgets,

00:08:18.370 --> 00:08:22.620
or I'm not sure, it would
be interesting to talk

00:08:22.620 --> 00:08:23.665
to him, actually.

00:08:23.665 --> 00:08:26.630
But if you want to see more
examples of this sculpture,

00:08:26.630 --> 00:08:29.420
this is just a piece of
it, go to his website.

00:08:32.120 --> 00:08:35.350
On the design side, our
good friend, Tomohio Tachi,

00:08:35.350 --> 00:08:38.380
who do the origami
Origamizer Bunny,

00:08:38.380 --> 00:08:40.370
has also done a
tensegrity bunny.

00:08:40.370 --> 00:08:43.059
And he didn't design this by
hand, as you might imagine.

00:08:43.059 --> 00:08:45.940
He designed it with a new piece
of software that hasn't yet

00:08:45.940 --> 00:08:48.280
been released, called
Freeform Tensegrity.

00:08:48.280 --> 00:08:50.220
You start with a
polyhedron, and there's

00:08:50.220 --> 00:08:54.540
a few different initial
constructions that kind of

00:08:54.540 --> 00:08:57.600
set that thing up as
a kind of tensegrity.

00:08:57.600 --> 00:09:01.600
And then it solves
to make it balance,

00:09:01.600 --> 00:09:03.110
to have an equilibrium stress.

00:09:03.110 --> 00:09:05.340
And on the right is the stress.

00:09:05.340 --> 00:09:07.200
These are what a
structural engineer

00:09:07.200 --> 00:09:09.040
would call force polygons.

00:09:09.040 --> 00:09:12.882
It's essentially the-- it's
like if you take this graph

00:09:12.882 --> 00:09:15.340
and you rotate-- this is all
in 3D, by the way, so a little

00:09:15.340 --> 00:09:16.330
tricky.

00:09:16.330 --> 00:09:17.450
That's rotating.

00:09:17.450 --> 00:09:19.390
In this case he's
pulling on things,

00:09:19.390 --> 00:09:21.530
trying to force vertices
to come together.

00:09:21.530 --> 00:09:23.150
And the whole thing is updating.

00:09:23.150 --> 00:09:25.460
And as long as this number
down here is close to 0,

00:09:25.460 --> 00:09:27.510
here it's 10 to
the minus 20, it's

00:09:27.510 --> 00:09:29.950
a pretty good
approximation of 0,

00:09:29.950 --> 00:09:33.340
then this thing
is in equilibrium.

00:09:33.340 --> 00:09:35.250
It's again, solving
all those constraints

00:09:35.250 --> 00:09:36.240
like we have before.

00:09:41.870 --> 00:09:42.780
So force polygons.

00:09:42.780 --> 00:09:45.460
You take every edge, you
rotate it 90 degrees,

00:09:45.460 --> 00:09:48.120
and then sort of con-- imagine
constructing a little polygon

00:09:48.120 --> 00:09:50.495
around each face.

00:09:50.495 --> 00:09:53.880
So you scale the edge
by the stress in there,

00:09:53.880 --> 00:09:58.250
and those polygons should close
up to be 0, if, at the vertex,

00:09:58.250 --> 00:09:59.830
you satisfy equilibrium.

00:09:59.830 --> 00:10:01.520
And you can draw
all those polygons.

00:10:01.520 --> 00:10:03.880
Those polygons can
be joined together

00:10:03.880 --> 00:10:06.130
to make one kind of graph.

00:10:06.130 --> 00:10:08.230
And if that graph
closes up, then you

00:10:08.230 --> 00:10:09.680
have an equilibrium stress.

00:10:09.680 --> 00:10:11.840
So it's kind of a
neat way to visualize

00:10:11.840 --> 00:10:15.410
that the thing is rigid.

00:10:15.410 --> 00:10:18.349
Or rather that it would hold all
of these edges at fixed length,

00:10:18.349 --> 00:10:20.640
and you have to verify that
the bar structure is rigid,

00:10:20.640 --> 00:10:22.056
but this is
presumably constructed

00:10:22.056 --> 00:10:24.020
to have that property.

00:10:24.020 --> 00:10:26.650
So hopefully this software
will be released at some point.

00:10:26.650 --> 00:10:28.108
It definitely looks
like a cool way

00:10:28.108 --> 00:10:30.780
to play around with
tensegrities and design things.

00:10:30.780 --> 00:10:31.714
Question?

00:10:31.714 --> 00:10:33.089
AUDIENCE: Is there
any way to see

00:10:33.089 --> 00:10:37.530
what happens to the equilibrium
stresses [INAUDIBLE]?

00:10:37.530 --> 00:10:38.630
Uh.

00:10:38.630 --> 00:10:39.312
I see, yeah.

00:10:39.312 --> 00:10:40.270
That's a good question.

00:10:43.080 --> 00:10:45.810
So can you see what happens if
I-- like when that one, when

00:10:45.810 --> 00:10:47.890
I tweak it and then wobbles.

00:10:47.890 --> 00:10:48.390
Yeah.

00:10:48.390 --> 00:10:52.080
It would be nice to see that
in simulation, definitely.

00:10:52.080 --> 00:10:55.180
This software is based on
free form origami designer,

00:10:55.180 --> 00:10:56.812
and that has the
two modes, right?

00:10:56.812 --> 00:10:58.645
One where you can change
the crease pattern,

00:10:58.645 --> 00:11:01.212
and one where it tries
to stay, keep it fixed.

00:11:01.212 --> 00:11:03.420
So I'm not sure whether the
software has the same two

00:11:03.420 --> 00:11:07.230
modes, but it certainly could,
that's definitely computable.

00:11:07.230 --> 00:11:09.740
You could basically ignore
the concerns for awhile,

00:11:09.740 --> 00:11:12.470
pull on something, then let go,
let it restore the constraints

00:11:12.470 --> 00:11:13.930
without it changing
the tensegrity,

00:11:13.930 --> 00:11:15.120
like it's doing here.

00:11:15.120 --> 00:11:16.620
And you should see it wobble.

00:11:16.620 --> 00:11:18.120
In fact, in that
case you'd probably

00:11:18.120 --> 00:11:20.770
want to use a less
good numerical method.

00:11:20.770 --> 00:11:22.890
Because you don't want it
to stabilize as quickly,

00:11:22.890 --> 00:11:25.620
you'd like to see it
jiggle for a while.

00:11:25.620 --> 00:11:26.920
So it should be doable.

00:11:26.920 --> 00:11:29.350
Could be an interesting
project to extend the software,

00:11:29.350 --> 00:11:32.000
if it hasn't been
implemented yet.

00:11:32.000 --> 00:11:33.940
I could ask him.

00:11:33.940 --> 00:11:36.770
I asked him last night, he say
that the plan is to release it

00:11:36.770 --> 00:11:41.930
at some point, but not quite
ready for prime time yet.

00:11:41.930 --> 00:11:45.790
Other questions about this?

00:11:45.790 --> 00:11:49.120
So I think this would
be fun to play with.

00:11:49.120 --> 00:11:51.170
If you want to build
some tensegrities

00:11:51.170 --> 00:11:55.900
there's a couple descriptions
of how to do this out

00:11:55.900 --> 00:12:02.080
of various, easy to find,
household objects like straws,

00:12:02.080 --> 00:12:08.400
or with these wove rubber
bands, things like that.

00:12:08.400 --> 00:12:10.110
So you can check
out-- George Hart

00:12:10.110 --> 00:12:15.420
has two construction
web pages about them.

00:12:15.420 --> 00:12:20.200
They're linked from this slide,
if you go to the lecture.

00:12:20.200 --> 00:12:22.130
That was all I
had for questions.

00:12:22.130 --> 00:12:23.820
Any more questions
about this lecture?

00:12:26.830 --> 00:12:28.580
All perfectly clear?

00:12:28.580 --> 00:12:31.182
We'll be seeing a lot more
stuff about locked linkages,

00:12:31.182 --> 00:12:32.640
the carpenter's
rule part, which is

00:12:32.640 --> 00:12:35.920
at the end of class in the
next two-three lectures.

00:12:35.920 --> 00:12:41.520
AUDIENCE: Can you explain
how infinitesimal motions--

00:12:41.520 --> 00:12:46.090
Well, in general,
a linear program

00:12:46.090 --> 00:12:48.440
is something like--
you have a matrix

00:12:48.440 --> 00:12:50.803
and you multiply it by a vector.

00:12:50.803 --> 00:12:53.386
And then you have, let's say,
in our case we have greater than

00:12:53.386 --> 00:12:54.880
or equal to 0.

00:12:54.880 --> 00:12:59.547
So when I say 0 I mean 0 0 0.

00:13:03.620 --> 00:13:05.570
The dual of a linear
program is what

00:13:05.570 --> 00:13:07.760
you get by transposing
the matrix, basically.

00:13:07.760 --> 00:13:14.190
So you get-- you
rotate it 90 degrees,

00:13:14.190 --> 00:13:18.210
or actually flip around that
diagonal, so all the columns

00:13:18.210 --> 00:13:20.620
become rows, rows
become columns.

00:13:20.620 --> 00:13:23.200
So now you've got
some other thing here,

00:13:23.200 --> 00:13:27.115
which is going to be this big.

00:13:27.115 --> 00:13:30.630
It's probably going to be less
than or equal to something

00:13:30.630 --> 00:13:31.350
that big.

00:13:33.921 --> 00:13:37.650
So this is a
transpose, this is y,

00:13:37.650 --> 00:13:40.140
and this is usually
called c, this is,

00:13:40.140 --> 00:13:43.240
in general called little b.

00:13:43.240 --> 00:13:46.330
And they are relations
between these two things,

00:13:46.330 --> 00:13:48.870
is the short version.

00:13:48.870 --> 00:13:51.704
But you can kind of
see-- so in principle,

00:13:51.704 --> 00:13:53.120
if we take-- this
is, in our case,

00:13:53.120 --> 00:13:55.550
this is basically
the rigidity matrix.

00:13:55.550 --> 00:13:58.360
This is rigidity matrix
prime, in the lecture.

00:13:58.360 --> 00:14:00.720
Because if we want to write
greater than or equal to 0,

00:14:00.720 --> 00:14:02.030
struts are just fine.

00:14:02.030 --> 00:14:05.030
Cables we negate
everything in the row.

00:14:05.030 --> 00:14:08.480
Bars, where we have equality, we
need both the original version

00:14:08.480 --> 00:14:10.995
and the negated
version of that row.

00:14:10.995 --> 00:14:12.870
But if we just imagine
struts for the moment,

00:14:12.870 --> 00:14:15.211
because I mean subsets
everything-- well,

00:14:15.211 --> 00:14:17.460
can be simulated by struts
and negative struts, struts

00:14:17.460 --> 00:14:19.640
and cables.

00:14:19.640 --> 00:14:21.450
Then we had the
number of rows here,

00:14:21.450 --> 00:14:26.910
this was essentially the
number of edges in our linkage.

00:14:26.910 --> 00:14:30.111
And the number of columns
here was d times n,

00:14:30.111 --> 00:14:31.860
this was the number
of degrees of freedom.

00:14:31.860 --> 00:14:34.770
These are the coordinates
of all of our things.

00:14:34.770 --> 00:14:40.335
And then x here was actually
our velocity vectors, and so on.

00:14:40.335 --> 00:14:42.210
Well, actually, I should
probably write that.

00:14:42.210 --> 00:14:45.090
So this, what we're calling
velocity vector's, d.

00:14:45.090 --> 00:14:47.537
This is our-- It's
like conflict.

00:14:47.537 --> 00:14:48.370
This is different d.

00:14:48.370 --> 00:14:52.479
These are the d vectors,
the derivatives.

00:14:52.479 --> 00:14:53.770
So, what would these things be?

00:14:53.770 --> 00:14:58.935
Well the columns here
are going to be edges.

00:15:02.190 --> 00:15:05.460
And the rows are going
to be coordinates.

00:15:10.540 --> 00:15:14.020
And remember equilibrium
stress looks like this.

00:15:14.020 --> 00:15:18.060
Basically for every
vertex we have

00:15:18.060 --> 00:15:21.650
sum over all other
vertices, let's say

00:15:21.650 --> 00:15:34.610
v w is an edge of, what
is it, stress of vw times

00:15:34.610 --> 00:15:41.020
c of-- I forget whether c of
v minus c of w or the reverse,

00:15:41.020 --> 00:15:41.860
equals 0.

00:15:44.800 --> 00:15:49.510
So this should look good.

00:15:49.510 --> 00:15:52.810
The number of these
constraints is-- well here

00:15:52.810 --> 00:15:54.590
it says it's the
number of vertices.

00:15:54.590 --> 00:15:58.440
But in fact, when you say equals
zero, this is a vector sum,

00:15:58.440 --> 00:15:59.790
so this has d coordinates.

00:15:59.790 --> 00:16:02.490
When you say that equals
0, that's d constraints.

00:16:02.490 --> 00:16:05.530
So they're d times
n constraints.

00:16:05.530 --> 00:16:08.820
And how many things are
involved in the constraints?

00:16:08.820 --> 00:16:13.400
Well essentially the edges,
every edge has a term in here.

00:16:13.400 --> 00:16:16.954
So that's kind of
why that looks right.

00:16:16.954 --> 00:16:18.370
You have to go
through the algebra

00:16:18.370 --> 00:16:21.180
and exactly what's written here,
to see that when you transpose

00:16:21.180 --> 00:16:23.940
it, you do exactly
get this constraint.

00:16:23.940 --> 00:16:27.420
And there's the issue
of equals 0, versus

00:16:27.420 --> 00:16:28.990
greater than or equal to 0.

00:16:28.990 --> 00:16:31.380
So that's a little
bit more subtle.

00:16:35.200 --> 00:16:36.570
But that's the short version.

00:16:36.570 --> 00:16:40.400
And you also have to check that
the-- when your strut or cable,

00:16:40.400 --> 00:16:43.450
you get just a sign
constraint on this thing.

00:16:43.450 --> 00:16:44.990
That's maybe a
little less obvious.

00:16:44.990 --> 00:16:47.560
But at least a high
level, this looks right.

00:16:47.560 --> 00:16:50.420
And the relations
about the primal

00:16:50.420 --> 00:16:52.760
and the dual linear
program about--

00:16:52.760 --> 00:16:55.140
So for example,
this linear program,

00:16:55.140 --> 00:16:57.290
which is characterizing
all infinitesimal motions,

00:16:57.290 --> 00:17:01.150
if you find an infinitesimal
motion, twice that vector

00:17:01.150 --> 00:17:03.520
or the set of vectors is
also an infinitesimal motion.

00:17:03.520 --> 00:17:05.990
So the solution space
to this linear program

00:17:05.990 --> 00:17:10.050
is what's called a
convex polyhedral cone.

00:17:10.050 --> 00:17:14.140
Meaning-- I mean this is sort
of the beginning of a cone,

00:17:14.140 --> 00:17:15.390
but it goes off to infinity.

00:17:15.390 --> 00:17:17.240
You could take any
motion you find

00:17:17.240 --> 00:17:18.520
and scale it off to infinity.

00:17:18.520 --> 00:17:21.099
You always include
the origin 0, 0, 0.

00:17:21.099 --> 00:17:23.430
Because you can
always do no motion.

00:17:23.430 --> 00:17:25.450
But any motion can be scaled up.

00:17:25.450 --> 00:17:29.200
So if this thing has a solution
at all, other than the 0, 0, 0,

00:17:29.200 --> 00:17:34.370
motion, it's an unbounded lp,
meaning you go off to infinity.

00:17:34.370 --> 00:17:37.010
And when the primal
lp is unbounded

00:17:37.010 --> 00:17:42.210
you know things about
the dual, which I forget.

00:17:42.210 --> 00:17:45.670
But you cannot have one being
unbound and the other being

00:17:45.670 --> 00:17:46.440
something else.

00:17:46.440 --> 00:17:49.700
And so that guarantees that
there's an equilibrium stress.

00:17:49.700 --> 00:17:52.900
That's roughly how it works.

00:17:52.900 --> 00:17:54.620
Are there questions?

