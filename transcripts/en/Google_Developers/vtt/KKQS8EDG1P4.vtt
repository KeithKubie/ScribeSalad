WEBVTT
Kind: captions
Language: en

00:00:03.470 --> 00:00:05.390
WESLEY CHUN: Hello everybody,
welcome to Google IO.

00:00:05.390 --> 00:00:06.682
How is it so far?

00:00:06.682 --> 00:00:07.932
[APPLAUSE]

00:00:10.750 --> 00:00:12.550
WESLEY CHUN: You guys have at
least one electronic device

00:00:12.550 --> 00:00:15.380
that I don't have yet,
so I'm jealous.

00:00:15.380 --> 00:00:16.149
That's great.

00:00:16.149 --> 00:00:17.990
I'm glad you're here.

00:00:17.990 --> 00:00:20.740
I'm kind of surprised you guys
aren't going to the Pac-Man

00:00:20.740 --> 00:00:23.770
session or the App Engine
2.0 session.

00:00:23.770 --> 00:00:25.695
What are you guys here for?

00:00:25.695 --> 00:00:27.000
[INAUDIBLE].

00:00:27.000 --> 00:00:28.612
WESLEY CHUN: All right.

00:00:28.612 --> 00:00:31.820
So some of you guys know that
I give Python training

00:00:31.820 --> 00:00:35.720
classes, and I'm just going to
tell you that hey, I'm going

00:00:35.720 --> 00:00:38.620
to give this entire talk
in plain text.

00:00:38.620 --> 00:00:42.820
Any Vim or Emacs users
out there?

00:00:42.820 --> 00:00:44.260
Awesome.

00:00:44.260 --> 00:00:46.300
Well, I was going to give you
guys a demo of a really cool

00:00:46.300 --> 00:00:48.820
Python tool that I actually
have. I actually did create

00:00:48.820 --> 00:00:51.970
this presentation using plain
text because I, like you guys,

00:00:51.970 --> 00:00:54.190
am a programmer and
I prefer to do my

00:00:54.190 --> 00:00:55.340
presentations that way.

00:00:55.340 --> 00:00:57.950
But sometimes I'm not
allowed to do that.

00:00:57.950 --> 00:01:01.420
So I have a little PC that I
have in my backpack with me

00:01:01.420 --> 00:01:04.620
and I actually used that a few
minutes ago, just before I

00:01:04.620 --> 00:01:05.690
came in here.

00:01:05.690 --> 00:01:07.210
And I used that.

00:01:07.210 --> 00:01:08.840
I don't know if you guys can
see it really clearly.

00:01:08.840 --> 00:01:12.720
But I really don't work
with tools like

00:01:12.720 --> 00:01:13.860
PowerPoint really well.

00:01:13.860 --> 00:01:15.780
But I work with Python
really well.

00:01:15.780 --> 00:01:18.230
And if I can make a Python
script to actually help me

00:01:18.230 --> 00:01:24.590
build my presentation, then
that's a much cooler thing to

00:01:24.590 --> 00:01:25.930
do than to have to--

00:01:25.930 --> 00:01:26.940
like on a plane kit.

00:01:26.940 --> 00:01:29.090
Have you guys tried to do
PowerPoint on a plane?

00:01:29.090 --> 00:01:31.270
OK, it doesn't work
out really well.

00:01:31.270 --> 00:01:33.200
So skipping to the end here.

00:01:36.160 --> 00:01:37.140
Hopefully it's still going.

00:01:37.140 --> 00:01:39.770
Oh, it even does a countdown
and it actually starts the

00:01:39.770 --> 00:01:41.790
slide show and it
turns it into an

00:01:41.790 --> 00:01:44.050
IO talk too, magically.

00:01:44.050 --> 00:01:46.600
So anyway, that's
what my PC does.

00:01:46.600 --> 00:01:49.990
But it's dead now.

00:01:49.990 --> 00:01:51.680
Because I'm using a Mac.

00:01:51.680 --> 00:01:57.990
All right, so welcome
to Python at Google.

00:01:57.990 --> 00:01:59.350
A few intro stuff.

00:01:59.350 --> 00:02:02.800
So some tips on social stuff, if
you guys want to be social.

00:02:02.800 --> 00:02:06.080
You could also be antisocial
and not do anything.

00:02:06.080 --> 00:02:08.699
And a feedback link, which I'll
also give you guys the QR

00:02:08.699 --> 00:02:12.000
code as well as the
URL at the end.

00:02:12.000 --> 00:02:15.100
OK, so before I start, I just
wanted to let you guys know

00:02:15.100 --> 00:02:18.640
that this talk is going to be
slightly different than any of

00:02:18.640 --> 00:02:20.500
the other talks you're
going to.

00:02:20.500 --> 00:02:21.600
I'm glad that you
guys are here.

00:02:21.600 --> 00:02:23.430
I'm glad this is at the
end of the day.

00:02:23.430 --> 00:02:25.380
You guys have gone to
pre-technical sessions and I

00:02:25.380 --> 00:02:28.580
just want this to be more
informal, more relaxed, just

00:02:28.580 --> 00:02:33.140
for you guys to wind down the
day before the party tonight.

00:02:33.140 --> 00:02:34.930
All right, there will be
a lot of toys there.

00:02:34.930 --> 00:02:38.510
So I'm going to start out with
bringing up quotes from three

00:02:38.510 --> 00:02:42.840
really well-known people,
computer scientists.

00:02:42.840 --> 00:02:44.900
And the thing that's very
interesting about these three

00:02:44.900 --> 00:02:47.170
gentleman is that they are
experts in programming

00:02:47.170 --> 00:02:50.370
languages that are not Python.

00:02:50.370 --> 00:02:53.090
And I think they're giving us
some sort of endorsement in

00:02:53.090 --> 00:02:55.310
one way or the other.

00:02:55.310 --> 00:02:57.740
So we'll start with Larry Wall,
he's, as you know, the

00:02:57.740 --> 00:02:59.042
creator of Perl.

00:02:59.042 --> 00:03:02.720
So 13 years ago somebody else,
why is Perl worse than Python?

00:03:02.720 --> 00:03:05.000
And that was the
answer he gave.

00:03:05.000 --> 00:03:08.040
You can take it for what it's
worth, but I was pretty happy

00:03:08.040 --> 00:03:08.920
when I saw it.

00:03:08.920 --> 00:03:10.040
I think the Python community,
in general,

00:03:10.040 --> 00:03:12.630
appreciates that quote.

00:03:12.630 --> 00:03:14.500
The next one is by Bruce
Eckel, he's a pretty

00:03:14.500 --> 00:03:18.680
well-known author of Thinking
in Java, Thinking in C++.

00:03:18.680 --> 00:03:21.850
And he came up with these
phrases that actually became

00:03:21.850 --> 00:03:25.030
so popular that we decided
to use them as slogans on

00:03:25.030 --> 00:03:26.650
t-shirts at Python
conferences.

00:03:26.650 --> 00:03:30.590
So they're more cerebral, so you
might have to think about

00:03:30.590 --> 00:03:34.360
them a little bit more, but I
think he's just trying to give

00:03:34.360 --> 00:03:37.730
what his feelings were at the
time that he made the quotes.

00:03:37.730 --> 00:03:40.320
The last one is by Peter Norvig,
who's a big member of

00:03:40.320 --> 00:03:42.540
the list community.

00:03:42.540 --> 00:03:46.330
And he also has nice words to
say about Python as well.

00:03:46.330 --> 00:03:49.230
And he also works at Google
like a couple of us.

00:03:49.230 --> 00:03:51.640
All right, so this is a slide.

00:03:51.640 --> 00:03:52.710
It's the last time you're
going to be

00:03:52.710 --> 00:03:54.170
your favorite language.

00:03:54.170 --> 00:04:00.020
So just inhale, sigh, and
relax because your next

00:04:00.020 --> 00:04:02.970
favorite language
will be Python.

00:04:02.970 --> 00:04:04.460
One line.

00:04:04.460 --> 00:04:06.120
All righty, so why
are you here?

00:04:06.120 --> 00:04:08.100
Well, hopefully you heard some
good word of mouth about

00:04:08.100 --> 00:04:12.500
Python or you got involved in
some open source project or

00:04:12.500 --> 00:04:14.990
some development tool that uses
a lot of Python, like

00:04:14.990 --> 00:04:16.890
Django, App Engine.

00:04:16.890 --> 00:04:19.529
Or you found out a lot of big
companies use it, like Google

00:04:19.529 --> 00:04:24.630
and Yahoo and NASA and Lucas
Film and all those companies.

00:04:24.630 --> 00:04:27.340
And/or specifically, you want
to hear how Google uses it.

00:04:27.340 --> 00:04:29.820
Or you had no choice because you
were forced by your boss

00:04:29.820 --> 00:04:30.440
to come here.

00:04:30.440 --> 00:04:32.850
Hopefully that's not the case,
otherwise you should be

00:04:32.850 --> 00:04:33.780
smiling either way.

00:04:33.780 --> 00:04:35.600
Being forced to come to IO?

00:04:35.600 --> 00:04:37.590
Yeah, right.

00:04:37.590 --> 00:04:38.815
Great.

00:04:38.815 --> 00:04:41.480
OK, so I'm going to assume
you are a blank slate.

00:04:41.480 --> 00:04:44.090
All right, so apologies for all
of you guys out there who

00:04:44.090 --> 00:04:45.630
are Python veterans.

00:04:45.630 --> 00:04:47.080
How many Python veterans
out there more

00:04:47.080 --> 00:04:49.060
than five plus years?

00:04:49.060 --> 00:04:50.510
Wow.

00:04:50.510 --> 00:04:51.520
That's pretty good.

00:04:51.520 --> 00:04:53.690
Some of you guys have never
heard of Python before five

00:04:53.690 --> 00:04:54.990
years, right?

00:04:54.990 --> 00:04:58.370
So I'm going to get the rest
of you guys up to speed, so

00:04:58.370 --> 00:05:00.060
you veterans, you guys
can go get a drink

00:05:00.060 --> 00:05:01.410
and come back later.

00:05:01.410 --> 00:05:02.670
OK?

00:05:02.670 --> 00:05:04.270
So the rest of the talk is going
to be broken up into

00:05:04.270 --> 00:05:06.190
four main pieces.

00:05:06.190 --> 00:05:08.690
First, I'm going to do the
quickie, high level intro to

00:05:08.690 --> 00:05:09.880
what is Python.

00:05:09.880 --> 00:05:12.130
Then I'm going to show you what
other companies have been

00:05:12.130 --> 00:05:14.310
doing with it, so that's
Python not at Google.

00:05:14.310 --> 00:05:16.530
And then I'll dive into specific
Google things, and

00:05:16.530 --> 00:05:19.920
then lastly, I'll
talk about you.

00:05:19.920 --> 00:05:22.460
All right, so a little bit
of background about me.

00:05:22.460 --> 00:05:25.620
I've been a software engineer
for the last 20 years.

00:05:25.620 --> 00:05:28.910
Currently at work I'm a
developer advocate at Google

00:05:28.910 --> 00:05:32.960
representing our cloud products,
like App Engine.

00:05:32.960 --> 00:05:35.260
Outside of work I'm actually
a Python advocate.

00:05:35.260 --> 00:05:40.220
So I've been teaching for 20,
almost 30 years and at least

00:05:40.220 --> 00:05:41.390
12 of those are with Python.

00:05:41.390 --> 00:05:43.530
So I've been around
the block a lot.

00:05:43.530 --> 00:05:46.480
I have about 14.5 of Python.

00:05:46.480 --> 00:05:48.680
And more about me later.

00:05:48.680 --> 00:05:51.020
We have a special guest
in the audience.

00:05:51.020 --> 00:05:54.750
Up here at the front is Guido
van Rossum, or [? Fee-do ?]

00:05:54.750 --> 00:05:56.250
if you know how to
pronounce Dutch.

00:05:56.250 --> 00:05:59.510
He's the creator of Python
or the BDFL, Benevolent

00:05:59.510 --> 00:06:00.855
Dictator For Life.

00:06:00.855 --> 00:06:02.105
[APPLAUSE]

00:06:09.100 --> 00:06:12.140
WESLEY CHUN: And it's pretty
much due to him that set my

00:06:12.140 --> 00:06:13.010
entire career.

00:06:13.010 --> 00:06:16.610
So I owe him at least
that much.

00:06:16.610 --> 00:06:19.190
He works as a software engineer
at Google on the App

00:06:19.190 --> 00:06:22.420
Engine team, where he works on
Python libraries, API design,

00:06:22.420 --> 00:06:24.280
UI programming, and
developer tools.

00:06:24.280 --> 00:06:27.000
He has slightly a few more years
of Python experience

00:06:27.000 --> 00:06:29.590
than I have, so I'm
afraid to say.

00:06:29.590 --> 00:06:32.020
And so he's here to keep me
honest. He'll throw tomatoes

00:06:32.020 --> 00:06:34.380
at me if I say something
wrong, and he'll also

00:06:34.380 --> 00:06:36.530
help out with Q&amp;A.

00:06:36.530 --> 00:06:39.020
All right, so what is Python?

00:06:39.020 --> 00:06:39.970
In a nutshell, it's an

00:06:39.970 --> 00:06:41.900
object-oriented programming language.

00:06:41.900 --> 00:06:44.390
Some people like to immediately
say, oh, it's a

00:06:44.390 --> 00:06:45.210
scripting language.

00:06:45.210 --> 00:06:48.470
But you know, I have to say,
in the last 14 years, I've

00:06:48.470 --> 00:06:51.420
used it for a little bit
more than scripting.

00:06:51.420 --> 00:06:53.740
All the way to like servers that
do back end work that you

00:06:53.740 --> 00:06:57.290
don't see, testing, automation
frameworks, things like that.

00:06:57.290 --> 00:06:58.960
So it's more than
just scripting.

00:06:58.960 --> 00:07:01.560
Of course, that's one of
the things you can do.

00:07:01.560 --> 00:07:04.160
Like many other scripting
languages, Python is

00:07:04.160 --> 00:07:06.820
interpreted, but it's also
bytecode-compiled.

00:07:06.820 --> 00:07:08.430
So when you run your script the
first time, it's got to go

00:07:08.430 --> 00:07:10.080
through that compilation
phase.

00:07:10.080 --> 00:07:11.910
But if you don't change your
code the next time you run

00:07:11.910 --> 00:07:14.760
your script, it's not going to
have that start up penalty.

00:07:14.760 --> 00:07:19.250
The syntax is very simple, yet
robust. That makes the

00:07:19.250 --> 00:07:20.920
language easy to read.

00:07:20.920 --> 00:07:23.470
And because it's easy to read,
for beginners that makes it

00:07:23.470 --> 00:07:24.880
easy to learn.

00:07:24.880 --> 00:07:28.280
And if you're working in a
group, then it's easy to

00:07:28.280 --> 00:07:31.300
maintain because chances are
your code is going to outlive

00:07:31.300 --> 00:07:33.640
you at your current place
of employment.

00:07:33.640 --> 00:07:36.840
And one of the last things that
people say about Python

00:07:36.840 --> 00:07:38.610
is that it is batteries
included.

00:07:38.610 --> 00:07:40.730
That means that when you
download the tarball or the

00:07:40.730 --> 00:07:44.150
zip file or the MSI file, you
pretty much have everything

00:07:44.150 --> 00:07:46.320
you need to actually get
a small task done.

00:07:46.320 --> 00:07:49.690
Don't really have to go and
download anything else.

00:07:49.690 --> 00:07:52.420
Another thing that people don't
know is that Python just

00:07:52.420 --> 00:07:55.830
turned 20 two months ago.

00:07:55.830 --> 00:07:57.340
20 years old.

00:07:57.340 --> 00:07:58.080
Can you believe that?

00:07:58.080 --> 00:07:59.970
It was released on the internet
around Valentine's

00:07:59.970 --> 00:08:02.880
Day of 1991.

00:08:02.880 --> 00:08:05.600
Maybe you haven't heard of it
until recently because it's

00:08:05.600 --> 00:08:07.560
mostly been word of mouth.

00:08:07.560 --> 00:08:09.940
And that includes no word of
mouth, so a little bit more

00:08:09.940 --> 00:08:12.440
about that later.

00:08:12.440 --> 00:08:16.250
But I have to say that in my
experience, I've seen Python

00:08:16.250 --> 00:08:18.910
take a pretty significant
jump in popularity

00:08:18.910 --> 00:08:20.840
over the last decade.

00:08:20.840 --> 00:08:23.050
Especially when it comes
to job listings.

00:08:23.050 --> 00:08:25.790
I will have to say that I've
been very fortunate in my

00:08:25.790 --> 00:08:30.500
career to have been able to work
as a software engineer

00:08:30.500 --> 00:08:32.919
using Python as a primary
development tool to actually

00:08:32.919 --> 00:08:35.590
build real products
that people use.

00:08:35.590 --> 00:08:37.940
But finding those jobs is
actually pretty difficult, or

00:08:37.940 --> 00:08:41.190
at least it was 10 years ago.

00:08:41.190 --> 00:08:43.740
But that's not as much
the case anymore.

00:08:43.740 --> 00:08:46.270
A couple of years ago Safari
Books Online asked me to give

00:08:46.270 --> 00:08:49.120
a webinar on Python and it was
kind of odd for me because I'd

00:08:49.120 --> 00:08:49.810
never been asked.

00:08:49.810 --> 00:08:51.960
I've never been approached
to do that before.

00:08:51.960 --> 00:08:54.740
And I asked, why are you guys
asking me to do a talk on

00:08:54.740 --> 00:08:55.830
Python now?

00:08:55.830 --> 00:08:58.510
And they also said that we've
all noticed a jump in

00:08:58.510 --> 00:09:00.470
popularity what Python
as well.

00:09:00.470 --> 00:09:03.330
And I asked them, so what are
the top search terms that

00:09:03.330 --> 00:09:05.390
people use when they
go and look for

00:09:05.390 --> 00:09:08.170
another book to download?

00:09:08.170 --> 00:09:11.070
And they gave me the list.
You can see there, pretty

00:09:11.070 --> 00:09:14.230
interesting list. I'm expecting
Android and Chrome

00:09:14.230 --> 00:09:18.190
to have creeped into this
over the last two years.

00:09:18.190 --> 00:09:19.720
It's also become
a fan favorite.

00:09:19.720 --> 00:09:23.050
So for people that actually do
discover Python, they have

00:09:23.050 --> 00:09:24.650
really good feelings about it.

00:09:24.650 --> 00:09:29.030
So TLB is one of those marketing
things where you can

00:09:29.030 --> 00:09:31.660
either decide you like
it or you think

00:09:31.660 --> 00:09:33.570
it's complete hogwash.

00:09:33.570 --> 00:09:37.140
And so what they do is they sort
of take a measurement as

00:09:37.140 --> 00:09:39.190
far as, what is the
market share

00:09:39.190 --> 00:09:40.390
for programming language?

00:09:40.390 --> 00:09:42.400
and these things like, how
many times has it been

00:09:42.400 --> 00:09:42.960
downloaded?

00:09:42.960 --> 00:09:44.480
How many books are
out there on it?

00:09:44.480 --> 00:09:46.540
How many companies
are using it?

00:09:46.540 --> 00:09:47.230
Things like that.

00:09:47.230 --> 00:09:50.890
And so they get this list
together and they sort them in

00:09:50.890 --> 00:09:52.960
that order.

00:09:52.960 --> 00:09:56.120
You'll find at the top there's
of course, Java, all of the C

00:09:56.120 --> 00:10:00.520
type languages, like C,
C++, C sharp, PHP.

00:10:00.520 --> 00:10:03.120
And then around six and seven,
you kind of see Python

00:10:03.120 --> 00:10:05.240
alternating with objective
C as you can

00:10:05.240 --> 00:10:07.520
probably imagine why.

00:10:07.520 --> 00:10:09.470
So hopefully we end up
winning overall.

00:10:09.470 --> 00:10:13.000
But one interesting factoid is
that it's actually won the

00:10:13.000 --> 00:10:14.220
language of the year twice.

00:10:14.220 --> 00:10:16.630
It's actually the only language
that has taken that

00:10:16.630 --> 00:10:19.720
honor twice, or at least
more than once.

00:10:19.720 --> 00:10:21.935
People in the Linux community
seem to like it as well, so

00:10:21.935 --> 00:10:24.210
it's been winning a lot
of awards as of late.

00:10:24.210 --> 00:10:27.190
And so you'll probably see
that trend continuing.

00:10:27.190 --> 00:10:30.890
But Python isn't just
restricted to Linux.

00:10:30.890 --> 00:10:33.150
You can actually get Python
on most every platform.

00:10:33.150 --> 00:10:35.650
So if you have a Mac or a
Linux box, you actually

00:10:35.650 --> 00:10:37.640
already have Python installed.

00:10:37.640 --> 00:10:40.220
So the only users that
really have to go and

00:10:40.220 --> 00:10:42.620
download it our PC users.

00:10:42.620 --> 00:10:44.230
But yeah, exactly.

00:10:44.230 --> 00:10:47.410
And in all of the exotic
platforms that you can't even

00:10:47.410 --> 00:10:51.020
imagine, it kind of blew my mind
when I was told that the

00:10:51.020 --> 00:10:55.300
Sony PlayStation and Nintendo
GameCube back then had Python

00:10:55.300 --> 00:10:58.790
on it too, or people
imported it.

00:10:58.790 --> 00:11:01.240
So it's been gaining
mindshare.

00:11:01.240 --> 00:11:04.450
A couple of announcements that
came out over the last couple

00:11:04.450 --> 00:11:07.060
of years that have also kind
of made people jerk their

00:11:07.060 --> 00:11:08.510
heads, do a double-take.

00:11:08.510 --> 00:11:09.400
Like, oh, Python.

00:11:09.400 --> 00:11:11.190
Now I've heard of it.

00:11:11.190 --> 00:11:13.470
One of them was when App Engine
came out, three years

00:11:13.470 --> 00:11:16.740
ago, believe it or not, Google
App Engine is three years old.

00:11:16.740 --> 00:11:20.610
And that launch with Python as
its first language supported.

00:11:20.610 --> 00:11:22.470
And it included some of
Django, framework

00:11:22.470 --> 00:11:24.000
and it still does.

00:11:24.000 --> 00:11:28.390
Another announcement that has
been going on over the last

00:11:28.390 --> 00:11:32.300
few years, has been
a change at MIT.

00:11:32.300 --> 00:11:35.640
And their first undergraduate
course that incoming freshmen

00:11:35.640 --> 00:11:39.580
get exposed to, they have
switched their class to

00:11:39.580 --> 00:11:42.600
building robotics and
doing robotic work.

00:11:42.600 --> 00:11:46.490
And the library that they use
is written in Python.

00:11:46.490 --> 00:11:51.050
And so a lot of people were
completely shocked because the

00:11:51.050 --> 00:11:54.800
headlines were MIT Switches
from Scheme to Python.

00:11:54.800 --> 00:12:00.100
And as a computer scientist, I
definitely respect Scheme and

00:12:00.100 --> 00:12:02.180
I think it's definitely more
of a pure, functional

00:12:02.180 --> 00:12:05.030
programming language that you
should learn before going to

00:12:05.030 --> 00:12:07.650
something more practical
like Python.

00:12:07.650 --> 00:12:10.560
So that's maybe not that big of
news, but to the bloggers

00:12:10.560 --> 00:12:13.885
and the media, everybody just
grabs onto that and says, oh

00:12:13.885 --> 00:12:16.720
my gosh, Python must
be popular now.

00:12:16.720 --> 00:12:19.360
All right, so where did
Python come from?

00:12:19.360 --> 00:12:24.890
So several decades ago Guido was
at the Math and Computing

00:12:24.890 --> 00:12:26.510
Research Institute in Holland.

00:12:26.510 --> 00:12:29.360
He was working on the Amoeba
distributed operating system.

00:12:29.360 --> 00:12:32.470
And he wanted a tool to write
lots of apps with and to do

00:12:32.470 --> 00:12:34.300
system tasks and things
like that.

00:12:34.300 --> 00:12:36.690
But when you're on an
experimental operating system,

00:12:36.690 --> 00:12:38.980
there's really not
a lot of support.

00:12:38.980 --> 00:12:43.370
So his choices were either using
C or the Bourne Shell.

00:12:43.370 --> 00:12:47.880
Now, doing things in C, can
you imagine writing like a

00:12:47.880 --> 00:12:49.775
little sys admin
script using C?

00:12:49.775 --> 00:12:52.190
A little bit of overkill,
right?

00:12:52.190 --> 00:12:57.100
So before that he actually
worked on another language

00:12:57.100 --> 00:12:59.720
called ABC, which was going to
be like the next generation

00:12:59.720 --> 00:13:02.540
educational language to teach
kids how to program.

00:13:02.540 --> 00:13:06.030
And so what he really wanted to
have was something that had

00:13:06.030 --> 00:13:09.580
a simple syntax, but had the
system capabilities of C.

00:13:09.580 --> 00:13:11.680
And so that's sort of
the foundation of

00:13:11.680 --> 00:13:13.290
how Python got started.

00:13:13.290 --> 00:13:17.760
And he started working on it
around the holidays in 1989.

00:13:17.760 --> 00:13:20.470
Another interesting factoid is
that Python is named after the

00:13:20.470 --> 00:13:23.590
British Comedy Troupe and not
a snake, even though snakes

00:13:23.590 --> 00:13:26.310
appear on 85% of all Python
books out there.

00:13:29.210 --> 00:13:34.033
So I mentioned ABC and Python's
place with education.

00:13:36.880 --> 00:13:39.980
It is again, heavily inspired
by ABC, this simple, yet

00:13:39.980 --> 00:13:41.630
robust syntax.

00:13:41.630 --> 00:13:44.720
But there is a strong belief
in education as well.

00:13:44.720 --> 00:13:48.010
One of the essays that Guido
wrote back then was computer

00:13:48.010 --> 00:13:49.350
programming for everybody.

00:13:49.350 --> 00:13:50.840
And this proposal actually
ended up

00:13:50.840 --> 00:13:52.330
getting funding as well.

00:13:52.330 --> 00:13:55.760
But his belief is that
programming is a basic skill.

00:13:55.760 --> 00:13:59.700
I mean it's something that
should be taught to children

00:13:59.700 --> 00:14:00.920
at the same time they're
learning

00:14:00.920 --> 00:14:02.700
how to read and write.

00:14:02.700 --> 00:14:04.910
Now the whole purpose is not
the turn everybody into

00:14:04.910 --> 00:14:06.140
software engineers.

00:14:06.140 --> 00:14:07.720
It would be kind of scary
if the world was

00:14:07.720 --> 00:14:10.440
full of software engineers.

00:14:10.440 --> 00:14:14.360
But the thing is, look at how
you guys live every day.

00:14:14.360 --> 00:14:16.720
When you go home, your everyday
life has some sort of

00:14:16.720 --> 00:14:17.680
programming.

00:14:17.680 --> 00:14:20.240
You've got to cook your dinner
in the microwave, you've got

00:14:20.240 --> 00:14:21.390
to set your thermostat.

00:14:21.390 --> 00:14:23.550
You've got to learn how to
use your cell phone.

00:14:23.550 --> 00:14:25.990
You've got to program
your TiVo to record

00:14:25.990 --> 00:14:27.120
your favorite shows.

00:14:27.120 --> 00:14:28.800
There's some of programming.

00:14:28.800 --> 00:14:31.710
So the main idea is that you
should learn programming.

00:14:31.710 --> 00:14:34.410
Not, again, to be a software
engineer, but the fact that it

00:14:34.410 --> 00:14:38.100
is a basic skill that people
have to have every day.

00:14:38.100 --> 00:14:39.300
There was one great
story actually.

00:14:39.300 --> 00:14:41.000
I don't know how many of you
guys grew up in America.

00:14:41.000 --> 00:14:43.520
But in high school there's a
computer science advanced

00:14:43.520 --> 00:14:44.870
placement exam.

00:14:44.870 --> 00:14:47.960
And there was this instructor
from Washington D.C.

00:14:47.960 --> 00:14:49.290
area, Jeff Elkner.

00:14:49.290 --> 00:14:53.680
And he recounted the story of
how he has to take two years

00:14:53.680 --> 00:14:56.700
of C++ to teach this to high
school kids in order to

00:14:56.700 --> 00:14:58.320
prepare them for this exam.

00:14:58.320 --> 00:15:00.820
Can you imagine how excited
the kids were

00:15:00.820 --> 00:15:04.670
learning C++ for two years?

00:15:04.670 --> 00:15:07.480
So the kids were dropping out,
they were losing interest. All

00:15:07.480 --> 00:15:08.730
the girls left.

00:15:10.860 --> 00:15:13.200
And so what he did was he
actually replaced the first

00:15:13.200 --> 00:15:16.610
year with Python and the
retention was better, the

00:15:16.610 --> 00:15:19.440
morale was better, people
were able to learn.

00:15:19.440 --> 00:15:21.720
The students were able to
learn C++ much quicker.

00:15:21.720 --> 00:15:23.035
They did better on the exam.

00:15:23.035 --> 00:15:26.590
So that was a really
inspiring story.

00:15:26.590 --> 00:15:30.690
So again, related to teaching
kids how to program, people

00:15:30.690 --> 00:15:33.870
ask me, so what are some of the
programming languages that

00:15:33.870 --> 00:15:35.960
people use to teach kids
how to program?

00:15:35.960 --> 00:15:38.560
So we have Scratch, which
is based off of

00:15:38.560 --> 00:15:40.230
Squeak from Alan Kay.

00:15:40.230 --> 00:15:42.470
I don't know if you guys have
seen that, but it basically

00:15:42.470 --> 00:15:44.520
teaches you programming by
having you build jigsaw

00:15:44.520 --> 00:15:46.080
puzzles and snapping
pieces together,

00:15:46.080 --> 00:15:48.610
which is really cool.

00:15:48.610 --> 00:15:50.120
And that came out of MIT.

00:15:50.120 --> 00:15:52.870
And then Alice is another
popular language that

00:15:52.870 --> 00:15:54.750
originally came from University
of Virginia.

00:15:54.750 --> 00:15:58.140
It was written in Python and it
migrated eventually over to

00:15:58.140 --> 00:15:59.750
Carnegie Mellon.

00:15:59.750 --> 00:16:01.330
Python's in that
list of course.

00:16:01.330 --> 00:16:06.430
When I learned Basic many, many
eons ago, I learned Basic

00:16:06.430 --> 00:16:08.990
on Commodore machines.

00:16:08.990 --> 00:16:11.830
And some high schools actually
also teach kids how to program

00:16:11.830 --> 00:16:13.960
using Flash and Action Script.

00:16:13.960 --> 00:16:16.790
Now, that may make you kind of
think about it, but don't

00:16:16.790 --> 00:16:19.790
think too hard about that.

00:16:19.790 --> 00:16:23.270
And so when I go to schools and
I talk to kids, they ask

00:16:23.270 --> 00:16:26.030
me, so, what are the programming
languages that you

00:16:26.030 --> 00:16:28.480
grown-ups use to get work
done every day?

00:16:28.480 --> 00:16:30.020
So that list is up on top.

00:16:30.020 --> 00:16:32.590
So the usual C family
of languages, Java,

00:16:32.590 --> 00:16:34.200
PHP, Python, and Ruby.

00:16:34.200 --> 00:16:37.410
And of course, it's not as
surprising, you must have

00:16:37.410 --> 00:16:40.840
already noticed that Python
shows up in both lists.

00:16:40.840 --> 00:16:43.680
So the conclusion is, if you
don't know Python and it was

00:16:43.680 --> 00:16:46.740
made for children, and you're
a technical professional, I

00:16:46.740 --> 00:16:49.020
don't think it's going to be
that hard for you to be able

00:16:49.020 --> 00:16:50.180
to pick up Python.

00:16:50.180 --> 00:16:51.320
So that's the whole point.

00:16:51.320 --> 00:16:53.220
If you've never seen any Python
code before, here's a

00:16:53.220 --> 00:16:54.250
quickie demo.

00:16:54.250 --> 00:16:56.640
And again, even if you've never
seen one line of Python

00:16:56.640 --> 00:16:59.080
before, you should be able to
kind of figure out generally

00:16:59.080 --> 00:17:02.330
what this is doing.

00:17:02.330 --> 00:17:05.119
So the first thing you'll notice
is that instead of

00:17:05.119 --> 00:17:08.930
using curly braces to delimit
blocks of code width, it uses

00:17:08.930 --> 00:17:10.200
indentation.

00:17:10.200 --> 00:17:14.680
Now for me coming from C and
Java and PHP, at first that

00:17:14.680 --> 00:17:16.849
made me kind of shiver.

00:17:16.849 --> 00:17:20.390
But after four months,
I was OK again.

00:17:20.390 --> 00:17:22.540
I just needed to kind
of recover.

00:17:22.540 --> 00:17:26.250
And when you realize that it's
an impossible thing to have a

00:17:26.250 --> 00:17:26.990
dangling [? ELs ?]

00:17:26.990 --> 00:17:30.410
problem, that's when you truly
appreciate this because your

00:17:30.410 --> 00:17:30.620
[? EL ?]

00:17:30.620 --> 00:17:32.980
statement has to belong to
one of those two if.

00:17:32.980 --> 00:17:36.070
And it's the one that it lines
up closest with, or has to

00:17:36.070 --> 00:17:37.600
line up exactly with.

00:17:37.600 --> 00:17:39.660
So you can see that this
is a function.

00:17:39.660 --> 00:17:41.230
Def is the keyword the
creates a function.

00:17:41.230 --> 00:17:43.900
I'm going to create an integer
with the value 10.

00:17:43.900 --> 00:17:45.845
I don't have to predeclare
anything.

00:17:45.845 --> 00:17:47.530
It's dynamically typed.

00:17:47.530 --> 00:17:51.570
I'm going to open a
file for write.

00:17:51.570 --> 00:17:53.565
You can already use your
imagination and think, oh,

00:17:53.565 --> 00:17:56.000
this must be exception handling
in case this file

00:17:56.000 --> 00:17:57.850
can't be opened--

00:17:57.850 --> 00:17:59.850
if this disk didn't exist or I
didn't have write permissions,

00:17:59.850 --> 00:18:03.620
I'm going to get an error and
jump back from this function.

00:18:03.620 --> 00:18:06.230
Once everything goes through
OK, we have a for loop.

00:18:06.230 --> 00:18:09.280
And the for loop uses the range
built in function and if

00:18:09.280 --> 00:18:12.520
you're coming from a language
where the for loop is a

00:18:12.520 --> 00:18:15.800
traditional counting loop,
you'll be familiar with int i

00:18:15.800 --> 00:18:18.340
equals 0, i is less than
10, i plus plus.

00:18:18.340 --> 00:18:20.560
So in Python you would rewrite
the same thing by just copying

00:18:20.560 --> 00:18:22.380
those numbers down into the
range function in their

00:18:22.380 --> 00:18:23.320
appropriate slots.

00:18:23.320 --> 00:18:25.120
And you'll get the
same effect.

00:18:25.120 --> 00:18:27.490
Now the for loop in Python is
more like a shell script for

00:18:27.490 --> 00:18:30.820
each statement where you're
iterating over

00:18:30.820 --> 00:18:32.760
objects, not counting.

00:18:32.760 --> 00:18:36.730
So the range function was
created to be able to help

00:18:36.730 --> 00:18:39.330
Python simulate a
counting loop.

00:18:39.330 --> 00:18:42.650
And then we just output to
the file, i times factor.

00:18:42.650 --> 00:18:46.570
And I do a quick check to see
if i is divisible by 2.

00:18:46.570 --> 00:18:48.210
Is there a remainder?

00:18:48.210 --> 00:18:50.010
And if there isn't, then
it's an even number.

00:18:50.010 --> 00:18:51.650
If not, it's an odd number.

00:18:51.650 --> 00:18:53.390
And those of you who are really
sharp will probably

00:18:53.390 --> 00:18:55.735
notice that if I multiply any
number by 10 it's always going

00:18:55.735 --> 00:18:56.860
to be even.

00:18:56.860 --> 00:18:57.760
So double check that.

00:18:57.760 --> 00:18:59.960
And then you close the
file at the end.

00:18:59.960 --> 00:19:01.090
Fairly straightforward, right?

00:19:01.090 --> 00:19:05.260
For those of you who are new
to Python, was that OK?

00:19:05.260 --> 00:19:07.120
Everybody able to absorb it?

00:19:07.120 --> 00:19:08.090
Not too bad.

00:19:08.090 --> 00:19:10.310
I mean the code is a little bit
more crowded than I wanted

00:19:10.310 --> 00:19:13.780
to, but I wanted to show you as
many different things and

00:19:13.780 --> 00:19:16.680
not make it too overly
complex.

00:19:16.680 --> 00:19:19.170
All right, so community.

00:19:19.170 --> 00:19:21.260
So that's Guido right there
in the red if you

00:19:21.260 --> 00:19:22.150
didn't guess by now.

00:19:22.150 --> 00:19:25.420
OK, so he's a fearless leader.

00:19:25.420 --> 00:19:27.990
One of the really good things
about a programming language

00:19:27.990 --> 00:19:30.500
that nobody ever talks about
is the community.

00:19:30.500 --> 00:19:33.000
Now when you're learning a
language and getting involved

00:19:33.000 --> 00:19:36.180
and you have questions, you
don't want to get onto a

00:19:36.180 --> 00:19:39.030
newsgroup where people are
completely yelling at you,

00:19:39.030 --> 00:19:41.180
they're criticizing you, they're
laughing at you.

00:19:41.180 --> 00:19:44.300
That's not really fun.

00:19:44.300 --> 00:19:47.140
So in general, the Python
community is very open,

00:19:47.140 --> 00:19:48.390
welcome to people.

00:19:48.390 --> 00:19:50.590
Whether you're a new programmer
or you're a refugee

00:19:50.590 --> 00:19:52.260
from another programming
language like Ruby.

00:19:55.380 --> 00:20:00.150
There's one newsgroup, there's
an IRC channel, and even if

00:20:00.150 --> 00:20:02.850
you still are a little bit
timid, there's another mailing

00:20:02.850 --> 00:20:04.490
list called Tutor, which
is really great.

00:20:04.490 --> 00:20:06.440
Sometimes I volunteer on that
when I get a chance.

00:20:06.440 --> 00:20:09.150
But that's a mailing list
specifically made for people

00:20:09.150 --> 00:20:12.620
who are not only new to Python,
but also perhaps, new

00:20:12.620 --> 00:20:14.730
to programming as well.

00:20:14.730 --> 00:20:17.710
The general personality of
people in the Python

00:20:17.710 --> 00:20:20.670
community-- we don't really
fight that much, we don't say,

00:20:20.670 --> 00:20:22.430
our language is the greatest
on earth--

00:20:22.430 --> 00:20:25.020
even though it is.

00:20:25.020 --> 00:20:27.560
And we do know the flaws of
our favorite language.

00:20:27.560 --> 00:20:28.840
I think that's very important.

00:20:28.840 --> 00:20:30.820
And we do have strong debates.

00:20:30.820 --> 00:20:32.070
Hopefully they're mostly
non-destructive.

00:20:35.050 --> 00:20:37.380
And because the community is
so open and welcome, that

00:20:37.380 --> 00:20:40.440
means conferences are easily
attendable by anybody, by

00:20:40.440 --> 00:20:42.780
everybody in this audience.

00:20:42.780 --> 00:20:45.820
PyCon is the main one that we
have here in North America.

00:20:45.820 --> 00:20:49.020
But there are also localized
PyCons around the world.

00:20:49.020 --> 00:20:52.630
There's also EuroPython, which
I would recommend you guys go

00:20:52.630 --> 00:20:53.310
to if you can.

00:20:53.310 --> 00:20:54.820
It's going to be in Florence
next month.

00:20:54.820 --> 00:20:57.970
So I'm pretty excited be
going there myself.

00:20:57.970 --> 00:21:00.360
And then OSCON, The O'Reilly
Open Source Convention that

00:21:00.360 --> 00:21:02.630
takes place in Portland
in July.

00:21:02.630 --> 00:21:04.680
I'll be there as well, so if you
can't make it to Florence

00:21:04.680 --> 00:21:08.140
then go up to Portland so
I can see you guys.

00:21:08.140 --> 00:21:10.830
If you're a beginner,
tutorials are great.

00:21:10.830 --> 00:21:13.170
In fact, tutorials are so
popular that we actually

00:21:13.170 --> 00:21:15.550
started to do two days
of tutorials.

00:21:15.550 --> 00:21:18.240
I've never heard of that
at a conference before.

00:21:18.240 --> 00:21:19.970
But it could be because
I don't go to enough

00:21:19.970 --> 00:21:22.750
conferences.

00:21:22.750 --> 00:21:25.600
But all of the PyCons are
grassroots efforts; they're

00:21:25.600 --> 00:21:27.210
all done by volunteers.

00:21:27.210 --> 00:21:30.210
There's even financial aid to
help you guys afford to go

00:21:30.210 --> 00:21:33.940
there, whether it's paying for
hotel, or travel, or what not.

00:21:33.940 --> 00:21:36.030
And we also have grants because
again, we're a very

00:21:36.030 --> 00:21:39.510
open and diverse community and
want to keep it that way.

00:21:39.510 --> 00:21:42.110
All right, so some of you guys
may have heard of some of

00:21:42.110 --> 00:21:44.550
these more well-known Python
programming projects.

00:21:44.550 --> 00:21:48.090
I'm not going to go over them
all, but they kind of indicate

00:21:48.090 --> 00:21:53.760
to you what types of breadth
exist as far as software

00:21:53.760 --> 00:21:54.680
support goes.

00:21:54.680 --> 00:21:57.370
All kinds of things for
numerical processing and

00:21:57.370 --> 00:22:00.390
working in different
environments, working with

00:22:00.390 --> 00:22:03.720
databases, testing frameworks
and things like that.

00:22:03.720 --> 00:22:04.970
[INAUDIBLE]

00:22:06.950 --> 00:22:10.360
WESLEY CHUN: It's
in white font.

00:22:10.360 --> 00:22:12.030
So yeah, so that's
the only problem.

00:22:12.030 --> 00:22:14.080
What you should really should
be asking is, where are all

00:22:14.080 --> 00:22:16.770
the web frameworks?

00:22:16.770 --> 00:22:18.420
I couldn't put them on this
page, so they had

00:22:18.420 --> 00:22:19.160
to have their own.

00:22:19.160 --> 00:22:22.390
Because Python is a language
that has more web frameworks

00:22:22.390 --> 00:22:23.640
than keywords.

00:22:26.700 --> 00:22:28.330
And that quote is old.

00:22:28.330 --> 00:22:33.365
There's at least twice as many
now than he realized.

00:22:33.365 --> 00:22:35.130
So yeah, lots of different
things.

00:22:35.130 --> 00:22:38.550
And so based on all the things
that I just showed you, you

00:22:38.550 --> 00:22:41.880
can use Python for all of these
things and many things

00:22:41.880 --> 00:22:43.220
that are not listed here.

00:22:43.220 --> 00:22:45.680
I mean, I have a list
of things that

00:22:45.680 --> 00:22:46.640
completely blew my mind.

00:22:46.640 --> 00:22:48.360
When you go to a Python
conference and you hear about

00:22:48.360 --> 00:22:52.235
these things, it really makes
you wonder like how we didn't

00:22:52.235 --> 00:22:53.040
hear about these things.

00:22:53.040 --> 00:22:56.545
So Python is used to map sparse
galaxies with, it's

00:22:56.545 --> 00:22:59.250
used to analyze weather
patterns, to control

00:22:59.250 --> 00:23:02.580
underwater robots.

00:23:02.580 --> 00:23:07.020
And here's a really good one,
to help interpolate damaged

00:23:07.020 --> 00:23:11.130
musical scores from
the 19th century.

00:23:11.130 --> 00:23:13.130
Crazy stuff.

00:23:13.130 --> 00:23:16.340
And the good news is that most
of these types of apps can be

00:23:16.340 --> 00:23:18.980
done just by downloading
Python because it

00:23:18.980 --> 00:23:20.890
is batteries included.

00:23:20.890 --> 00:23:23.510
Yes, in certain cases you'll
have to go and download third

00:23:23.510 --> 00:23:25.810
party stuff, but most of the
time you don't have to.

00:23:25.810 --> 00:23:28.800
At least you can get started
without the third party stuff.

00:23:28.800 --> 00:23:30.780
All right, so now that I've
told you a lot about the

00:23:30.780 --> 00:23:32.890
language, let's talk about some

00:23:32.890 --> 00:23:34.590
places that do use Python.

00:23:34.590 --> 00:23:36.870
Not at Google first. I've used
it at lots of places.

00:23:36.870 --> 00:23:38.310
Because like I said,
I've been doing

00:23:38.310 --> 00:23:39.740
Python for like 14 years.

00:23:39.740 --> 00:23:41.290
And I've done all kinds
of crazy stuff.

00:23:41.290 --> 00:23:43.400
So one of the first things
I've done was

00:23:43.400 --> 00:23:44.640
while working at Yahoo.

00:23:44.640 --> 00:23:47.610
And now, a lot of people don't
realize this but we actually

00:23:47.610 --> 00:23:51.500
built Yahoo Mail using Python
about 14 years ago.

00:23:51.500 --> 00:23:54.810
Two-thirds of it was Python, the
back end mail store was a

00:23:54.810 --> 00:23:56.280
little bit of C++.

00:23:56.280 --> 00:23:59.640
But all of the middle ware and
all of the front end, we

00:23:59.640 --> 00:24:02.480
actually custom made our own web
framework before that term

00:24:02.480 --> 00:24:04.500
even existed.

00:24:04.500 --> 00:24:07.180
And there are only about 9 or
10 of us and we built the

00:24:07.180 --> 00:24:08.930
whole thing in about
half a year.

00:24:08.930 --> 00:24:12.560
And you're probably wondering
about the image.

00:24:12.560 --> 00:24:14.880
The original version was
called Rocket Mail.

00:24:14.880 --> 00:24:17.260
Does anybody remember that?

00:24:17.260 --> 00:24:17.650
OK.

00:24:17.650 --> 00:24:20.520
Who still uses their Rocket
Mail account?

00:24:20.520 --> 00:24:23.770
Not the refresh of it a couple
of years that Yahoo did.

00:24:23.770 --> 00:24:26.410
OK, that's great.

00:24:26.410 --> 00:24:29.470
We were working there and then
Yahoo decided they liked web

00:24:29.470 --> 00:24:32.720
based email and they acquired us
instead of Hotmail because

00:24:32.720 --> 00:24:38.000
we focused on having a better
user experience than Hotmail.

00:24:38.000 --> 00:24:40.130
So another thing that I've done
is I've worked at another

00:24:40.130 --> 00:24:42.640
company called IronPort, which
was acquired by Cisco.

00:24:42.640 --> 00:24:46.460
And they built a hardware
appliance that filtered email

00:24:46.460 --> 00:24:48.290
for spam and viruses.

00:24:48.290 --> 00:24:51.250
And we used the custom made
version of Python and we were

00:24:51.250 --> 00:24:55.050
able to process 500,000 email
messages per hour.

00:24:55.050 --> 00:24:56.960
So it was a pretty cool thing.

00:24:56.960 --> 00:24:58.260
It's not exactly this box.

00:24:58.260 --> 00:24:59.900
I can't show you a picture
of the real box.

00:24:59.900 --> 00:25:03.330
But I have some ex-coworkers in
the audience here that can

00:25:03.330 --> 00:25:05.650
vouch for this.

00:25:05.650 --> 00:25:08.100
So that's a little bit
different than--

00:25:08.100 --> 00:25:09.410
well, I guess it's related
to email as well.

00:25:09.410 --> 00:25:12.190
But more on the hardware side.

00:25:12.190 --> 00:25:13.850
Before I came to Google,
I worked at Slide.

00:25:13.850 --> 00:25:17.370
So we do Facebook games.

00:25:17.370 --> 00:25:20.840
So my career has been internet
and networking and all that

00:25:20.840 --> 00:25:23.920
stuff so far, but then the
craziest thing that I've never

00:25:23.920 --> 00:25:27.100
done with Python is to write
software for doctors to help

00:25:27.100 --> 00:25:30.910
analyze patients with
spinal fractures.

00:25:30.910 --> 00:25:32.850
Very different.

00:25:32.850 --> 00:25:36.500
I learned a lot about medicine
and I was always curious why

00:25:36.500 --> 00:25:37.090
they hired me.

00:25:37.090 --> 00:25:39.040
Because I told them I had
no medical background.

00:25:39.040 --> 00:25:40.860
And said, well, you know what?

00:25:40.860 --> 00:25:43.290
It's a lot easier to find a
Python person and teach them

00:25:43.290 --> 00:25:45.460
medical stuff than it is to
find a medical person and

00:25:45.460 --> 00:25:48.510
teach them programming.

00:25:48.510 --> 00:25:50.060
So I go OK.

00:25:50.060 --> 00:25:52.030
So anyway, if you need to know
anything about osteoporosis

00:25:52.030 --> 00:25:55.280
and your spine, come talk
to me afterwards.

00:25:55.280 --> 00:25:57.170
We also have some other
software that I wasn't

00:25:57.170 --> 00:25:59.440
responsible for that
[? thioridazine ?]

00:25:59.440 --> 00:26:03.090
knee cartilage stuff.

00:26:03.090 --> 00:26:06.400
So as a software engineer,
I'm not that great at

00:26:06.400 --> 00:26:07.600
documenting my code.

00:26:07.600 --> 00:26:10.720
So Python had to do something
really crazy to my brain in

00:26:10.720 --> 00:26:12.650
order make me want
to write a book.

00:26:15.330 --> 00:26:18.620
Yeah, it just completely
changed my life.

00:26:18.620 --> 00:26:20.866
When I was learning Python,
I never had--

00:26:20.866 --> 00:26:22.870
there were only two books
on the market.

00:26:22.870 --> 00:26:25.250
And none of them were what I was
looking for because I was

00:26:25.250 --> 00:26:26.040
a software engineer.

00:26:26.040 --> 00:26:29.100
I knew how to program in C and
Java and Tikal and Perl and I

00:26:29.100 --> 00:26:31.230
wanted to learn Python
really well.

00:26:31.230 --> 00:26:33.070
So that's the motivation.

00:26:33.070 --> 00:26:35.920
One of the books I wanted to
highlight is the Django book

00:26:35.920 --> 00:26:38.090
that I worked on with
two other authors.

00:26:38.090 --> 00:26:39.990
The thing that's interesting
about that book is that there

00:26:39.990 --> 00:26:40.940
were three of us.

00:26:40.940 --> 00:26:43.480
We had never been together
physically, when

00:26:43.480 --> 00:26:44.160
writing this book.

00:26:44.160 --> 00:26:46.090
We did the whole thing
in plain text.

00:26:46.090 --> 00:26:47.870
We used version control.

00:26:47.870 --> 00:26:50.290
We used a make file.

00:26:50.290 --> 00:26:52.190
We used markdown.

00:26:52.190 --> 00:26:54.540
And then we had Python
drive the whole book.

00:26:54.540 --> 00:26:57.960
We used Python to compile the
book, to suck in the source

00:26:57.960 --> 00:27:01.450
code, and even to run unit tests
across the source code

00:27:01.450 --> 00:27:04.440
before it embedded
it into the book.

00:27:04.440 --> 00:27:07.470
And then, we used Python to
generate the HTML and PDF that

00:27:07.470 --> 00:27:09.060
we eventually sent
to the publisher.

00:27:09.060 --> 00:27:11.510
So that's another use case
for Python that's very

00:27:11.510 --> 00:27:14.020
interesting.

00:27:14.020 --> 00:27:16.020
Python's used at lots
of other companies.

00:27:16.020 --> 00:27:18.300
Animation, it's pretty big
apparently because Disney,

00:27:18.300 --> 00:27:20.380
Pixar, and Dreamworks uses it.

00:27:20.380 --> 00:27:23.040
All of the Lucas companies
use it.

00:27:23.040 --> 00:27:26.150
Hardware oriented companies,
like VMware, Broadcom, QNX,

00:27:26.150 --> 00:27:27.280
they use it.

00:27:27.280 --> 00:27:28.960
Social companies use it.

00:27:28.960 --> 00:27:30.760
Linux companies use it.

00:27:30.760 --> 00:27:32.280
And of course, the government
uses it.

00:27:32.280 --> 00:27:34.180
And you can tell this is the
government because they're all

00:27:34.180 --> 00:27:40.030
acronyms. So the National
Oceanic and Atmospheric

00:27:40.030 --> 00:27:42.250
Administration, they run the
National Weather Service.

00:27:42.250 --> 00:27:44.300
So they're also a
primary user.

00:27:44.300 --> 00:27:46.300
And then we think that
the NSA uses it, but

00:27:46.300 --> 00:27:47.550
they won't tell us.

00:27:52.490 --> 00:27:55.810
So as you can kind of get a
sense, Python is pretty

00:27:55.810 --> 00:27:56.740
popular with startups.

00:27:56.740 --> 00:28:00.030
We've got many y-combinator
companies use it.

00:28:00.030 --> 00:28:04.400
I think for one main reason:
very, very fast development.

00:28:04.400 --> 00:28:07.930
And when you're running on
finite time, you need to be

00:28:07.930 --> 00:28:08.930
first to market.

00:28:08.930 --> 00:28:14.210
So they're the ones that are
helping adopt whatever the web

00:28:14.210 --> 00:28:16.360
framework of the day is.

00:28:16.360 --> 00:28:18.960
And a lot of companies
sort of have an

00:28:18.960 --> 00:28:20.270
anti-marketing campaign.

00:28:20.270 --> 00:28:22.670
They're really reluctant to
admit they used Python.

00:28:22.670 --> 00:28:25.030
These days you can't really do
that that much because you're

00:28:25.030 --> 00:28:26.130
actually looking
for engineers.

00:28:26.130 --> 00:28:28.130
So you actually have to put
them in your job listings.

00:28:28.130 --> 00:28:32.740
But back in the old days, when
we were at Yahoo Mail, which I

00:28:32.740 --> 00:28:35.380
was going to give a talk at
how we use Python to build

00:28:35.380 --> 00:28:37.500
Yahoo Mail with, but management

00:28:37.500 --> 00:28:38.510
pretty much said no.

00:28:38.510 --> 00:28:41.120
Because there's too much
competition out there.

00:28:41.120 --> 00:28:44.920
Like Info Seek, Lycos, Excite,
and we just don't want them to

00:28:44.920 --> 00:28:46.340
know we use it.

00:28:46.340 --> 00:28:49.350
So I was not allowed to say
anything back then.

00:28:49.350 --> 00:28:52.410
Of course since our acquisition
by Yahoo, we have

00:28:52.410 --> 00:28:55.460
since ported it to C++ and
PHP and all that stuff.

00:28:55.460 --> 00:28:59.770
But back in the old days, it was
just like well, it gave us

00:28:59.770 --> 00:29:01.490
a strategic advantage over
the competition.

00:29:01.490 --> 00:29:03.330
So we don't want to
say anything.

00:29:03.330 --> 00:29:06.630
And you would do the same too,
if you had a startup.

00:29:06.630 --> 00:29:09.490
All right, so now we get
to what you guys

00:29:09.490 --> 00:29:11.140
actually came here for.

00:29:11.140 --> 00:29:13.290
What do you want to hear about
Python and Google?

00:29:13.290 --> 00:29:15.870
So it is recognized
as an official

00:29:15.870 --> 00:29:17.365
language at the company.

00:29:17.365 --> 00:29:20.140
And what that means is that you
can deploy Python code to

00:29:20.140 --> 00:29:23.320
production servers.

00:29:23.320 --> 00:29:26.430
C++ is the primary development
language, but there also needs

00:29:26.430 --> 00:29:29.690
to be some sort of tools and
scripting language that gets

00:29:29.690 --> 00:29:30.660
paired with C++.

00:29:30.660 --> 00:29:34.030
You can't do everything
in C++.

00:29:34.030 --> 00:29:37.960
Java actually came later, so
Python and C++ were a nice

00:29:37.960 --> 00:29:39.530
pair back in the early days.

00:29:39.530 --> 00:29:42.360
In fact, believe it or not,
Python was used at Google

00:29:42.360 --> 00:29:44.510
before the company
even existed.

00:29:44.510 --> 00:29:49.060
So back in the original paper
that Larry and Sergey did,

00:29:49.060 --> 00:29:51.840
they actually mention in their
original paper that their

00:29:51.840 --> 00:29:54.080
original web crawlers
and the URL servers

00:29:54.080 --> 00:29:55.220
were done in Python.

00:29:55.220 --> 00:29:57.800
So you can get access
to the paper there.

00:29:57.800 --> 00:29:59.520
But it's very interesting to
know that Python has been

00:29:59.520 --> 00:30:03.080
around before the
company existed.

00:30:03.080 --> 00:30:06.250
Another quote, as the company
was growing, Peter Norvig

00:30:06.250 --> 00:30:08.170
again, he made a quote.

00:30:08.170 --> 00:30:10.770
And that was that, "Python has
always been an important part

00:30:10.770 --> 00:30:13.640
of Google." Actually, he even
told me in person, I was

00:30:13.640 --> 00:30:17.380
talking to him the other week,
and he said, yeah, Python was

00:30:17.380 --> 00:30:18.730
here before I got here.

00:30:18.730 --> 00:30:21.020
And I look at his employee ID
number, it's pretty low.

00:30:21.020 --> 00:30:22.310
I'm like wow.

00:30:22.310 --> 00:30:24.390
That's pretty incredible.

00:30:24.390 --> 00:30:29.170
So another thing is that a lot
of the Python community

00:30:29.170 --> 00:30:31.370
members are also Googlers
as well.

00:30:31.370 --> 00:30:34.330
Besides myself and Guido,
Alex Martelli.

00:30:34.330 --> 00:30:37.020
You may know that he's the
author of Python in a Nutshell

00:30:37.020 --> 00:30:38.210
and The Python Cookbook.

00:30:38.210 --> 00:30:39.860
He also works at Google.

00:30:39.860 --> 00:30:44.820
Jim Hugunin, he created Jython
and Iron Python.

00:30:44.820 --> 00:30:47.820
Fredrik did the current
version of the regular

00:30:47.820 --> 00:30:50.680
expression engine and the PIL,
Python Imaging Library.

00:30:50.680 --> 00:30:52.630
So many members of
the community

00:30:52.630 --> 00:30:53.760
actually work at Google.

00:30:53.760 --> 00:30:56.650
So Google has a strong
relationship with the language

00:30:56.650 --> 00:30:58.450
and the Python software
foundation.

00:30:58.450 --> 00:31:01.850
And Google is also committed to
the language because it's

00:31:01.850 --> 00:31:07.160
always sponsoring Python
conferences of various types.

00:31:07.160 --> 00:31:09.300
And even if we're not
sponsoring, we're always

00:31:09.300 --> 00:31:10.880
sending speakers to
these conferences.

00:31:10.880 --> 00:31:12.480
And of course, we also
employ the BDFL.

00:31:15.150 --> 00:31:19.270
Like Guido, like myself, like
Python, Google also believes

00:31:19.270 --> 00:31:20.620
in education.

00:31:20.620 --> 00:31:23.140
In fact, the internal
training course--

00:31:23.140 --> 00:31:26.690
internal Python training course
that some of us give--

00:31:26.690 --> 00:31:29.370
has been externalized for
the general public.

00:31:29.370 --> 00:31:31.990
So if you guys want to get
access to the labs, lectures,

00:31:31.990 --> 00:31:35.450
videos and lessons of this class
that we take inside the

00:31:35.450 --> 00:31:38.830
walls at Google, you can
go and check it out at

00:31:38.830 --> 00:31:40.330
that link up there.

00:31:40.330 --> 00:31:42.090
And there are also a bunch of
tech talks that have been

00:31:42.090 --> 00:31:45.630
given at Google about Python
over time, and you can get

00:31:45.630 --> 00:31:48.900
access to those over
there too.

00:31:48.900 --> 00:31:51.630
All right, so what are some of
the products that use Python?

00:31:51.630 --> 00:31:54.370
So there's Google, App Engine,
there's YouTube, there's

00:31:54.370 --> 00:31:58.320
code.google.com, and a bunch
of open source libraries.

00:31:58.320 --> 00:31:59.570
So these are all the
things I can say.

00:31:59.570 --> 00:32:02.690
There's of course, plenty of
things that I can't say.

00:32:02.690 --> 00:32:04.660
But let's start at the bottom,
take a look at some of these

00:32:04.660 --> 00:32:05.445
open source libraries.

00:32:05.445 --> 00:32:08.600
So Protobufs is a pretty
well-known library.

00:32:08.600 --> 00:32:11.160
If you've never heard of it
before, just think of is as

00:32:11.160 --> 00:32:13.410
being able to serialize
structured data.

00:32:13.410 --> 00:32:17.240
Kind of like XML and JSON,
but more efficient.

00:32:17.240 --> 00:32:20.160
We use it a lot for
communicating to and from

00:32:20.160 --> 00:32:22.170
client and server.

00:32:22.170 --> 00:32:24.800
And you can go and check
out the library at that

00:32:24.800 --> 00:32:26.600
link at code site.

00:32:26.600 --> 00:32:29.260
We also have the Google Data
Protocol client library

00:32:29.260 --> 00:32:32.310
written in Python, as well as
other languages like Java and

00:32:32.310 --> 00:32:35.390
C++ and .net and a bunch
of other clients.

00:32:35.390 --> 00:32:38.530
But there's also one
specifically for Python that

00:32:38.530 --> 00:32:40.090
let's you access your
Google data.

00:32:40.090 --> 00:32:42.520
You know, such as what you have
in analytics, calendar,

00:32:42.520 --> 00:32:44.300
maps, contact, spreadsheets.

00:32:44.300 --> 00:32:46.230
Even other Google
properties, like

00:32:46.230 --> 00:32:47.230
Blogger, Picasa and YouTube.

00:32:47.230 --> 00:32:50.960
And you can get access to
the GDP library there.

00:32:53.470 --> 00:32:54.650
Code.google.com.

00:32:54.650 --> 00:32:56.750
If you're not familiar with it,
you should all be because

00:32:56.750 --> 00:32:58.600
you guys are here at IO.

00:32:58.600 --> 00:33:00.020
So you guys are all
Google developers.

00:33:00.020 --> 00:33:01.770
This is the main website
for all of you guys.

00:33:01.770 --> 00:33:03.530
This is where all the
documentation is, all the

00:33:03.530 --> 00:33:06.250
tools, downloads, all
the code samples.

00:33:06.250 --> 00:33:10.830
And code.google.com also has a
source code project hosting.

00:33:10.830 --> 00:33:11.410
App Engine.

00:33:11.410 --> 00:33:13.610
So I mentioned earlier that
App Engine launched with

00:33:13.610 --> 00:33:17.720
Python back in 2008 as the
first supported language.

00:33:17.720 --> 00:33:20.170
One of the reasons why Python
was chosen was because it has

00:33:20.170 --> 00:33:23.630
a simple VM and it was easily
wrappable in C++ and be able

00:33:23.630 --> 00:33:25.370
to put in a sandbox.

00:33:25.370 --> 00:33:26.770
Also, it's easy to
get started.

00:33:26.770 --> 00:33:30.950
You know, App Engine's goal is
to take a lot of complexity of

00:33:30.950 --> 00:33:33.350
creating apps and hosting
apps away from you.

00:33:33.350 --> 00:33:36.500
And so one of the ways of doing
that in addition to all

00:33:36.500 --> 00:33:38.240
of the hardware and the
infrastructure stuff that we

00:33:38.240 --> 00:33:41.450
try to take away from you, is
having to spend a lot of times

00:33:41.450 --> 00:33:42.430
building apps.

00:33:42.430 --> 00:33:45.520
So Python again, really
encourages rapid development.

00:33:45.520 --> 00:33:49.100
So that's another way that we're
trying to help out at

00:33:49.100 --> 00:33:52.590
having you be able to create
and deploy apps quicker.

00:33:52.590 --> 00:33:56.240
And when it came out, it caused
quite a shock in the

00:33:56.240 --> 00:33:57.490
Python and Django communities.

00:33:57.490 --> 00:34:00.640
We were all blown away;
it was incredible.

00:34:00.640 --> 00:34:02.750
And one of the last things I
wanted to point out is that it

00:34:02.750 --> 00:34:05.870
really does not require you to
have a CS or an engineering

00:34:05.870 --> 00:34:07.760
degree in order to be effective
in the language.

00:34:07.760 --> 00:34:12.239
I think that's part of the open
to all type of mentality

00:34:12.239 --> 00:34:14.489
that the language has.

00:34:14.489 --> 00:34:15.420
Normally I would give a demo.

00:34:15.420 --> 00:34:17.880
I'm going to run out of time
today, so I'll skip the demo.

00:34:17.880 --> 00:34:20.489
But if you guys don't know App
Engine at all, just go to

00:34:20.489 --> 00:34:23.250
code.google.com/appengine and
you'll be able to download the

00:34:23.250 --> 00:34:24.460
stuff and be able
to play with.

00:34:24.460 --> 00:34:27.199
There's an online tutorial
as well.

00:34:27.199 --> 00:34:30.639
All right, so let's talk for a
few minutes about YouTube,

00:34:30.639 --> 00:34:32.570
They're also, a very being
user of Python.

00:34:32.570 --> 00:34:35.739
In fact, they're such a big
user of Python, almost the

00:34:35.739 --> 00:34:41.460
entire YouTube site as see
by you, uses Python.

00:34:41.460 --> 00:34:45.190
Whether you're viewing a video
or whether you have software

00:34:45.190 --> 00:34:48.719
that controls a front end and
templates for the website, or

00:34:48.719 --> 00:34:52.230
when you're administrating your
videos, all the back end

00:34:52.230 --> 00:34:55.840
API servers, the batch tools,
all the test utilities, or if

00:34:55.840 --> 00:34:58.930
you have to access any of the
YouTube canonical data, that's

00:34:58.930 --> 00:34:59.610
all done with Python.

00:34:59.610 --> 00:35:02.520
And even if something is not
Python, the glue code to put

00:35:02.520 --> 00:35:04.540
that thing together is Python.

00:35:04.540 --> 00:35:07.720
So Python is everywhere
at YouTube.

00:35:07.720 --> 00:35:12.280
In fact, like Google, Python was
around at YouTube before

00:35:12.280 --> 00:35:13.720
YouTube was at Google.

00:35:13.720 --> 00:35:16.230
There was a small team, they
really loved Python.

00:35:16.230 --> 00:35:18.630
Ironically, when I was at
IronPort, we actually worked

00:35:18.630 --> 00:35:20.170
across the street
from YouTube.

00:35:20.170 --> 00:35:23.930
So two hardcore Python companies
next to each other

00:35:23.930 --> 00:35:27.870
in San Bruno, right
off of 380.

00:35:27.870 --> 00:35:29.940
Yeah, it was a small team
that loved Python.

00:35:29.940 --> 00:35:32.980
They felt that it gave the
engineers a sense of

00:35:32.980 --> 00:35:36.860
discipline and honor without
having the compiler police

00:35:36.860 --> 00:35:39.120
there to monitor them.

00:35:39.120 --> 00:35:41.780
Their early architecture,
they used Apache with

00:35:41.780 --> 00:35:43.580
Mod_python and MySQL.

00:35:43.580 --> 00:35:46.770
Kind of similar to when I did
Yahoo Mail, we actually also

00:35:46.770 --> 00:35:47.450
had Apache.

00:35:47.450 --> 00:35:49.190
But we used the old [? POI ?]

00:35:49.190 --> 00:35:51.380
Apache module back then.

00:35:51.380 --> 00:35:53.590
And this actually lasted them
for quite a while and it would

00:35:53.590 --> 00:35:55.340
survive longer than
one would think.

00:35:55.340 --> 00:35:59.130
Until the user base grew
and they started to

00:35:59.130 --> 00:36:01.710
need to scale more.

00:36:01.710 --> 00:36:04.550
The way they scaled was, every
time they would run into a

00:36:04.550 --> 00:36:07.180
bottleneck, they would either
somehow work around it, or fix

00:36:07.180 --> 00:36:09.280
it, or get rid of it.

00:36:09.280 --> 00:36:13.160
They believe in using good
components, good open source

00:36:13.160 --> 00:36:16.160
tools that have been tried and
tested, and to further improve

00:36:16.160 --> 00:36:18.210
on them, to optimize them.

00:36:18.210 --> 00:36:22.170
They learned really well how to
balance machine resources

00:36:22.170 --> 00:36:25.900
and they did a lot of caching
and they had to scale MySQL in

00:36:25.900 --> 00:36:28.410
a horizontal way that I don't
know too much about.

00:36:28.410 --> 00:36:31.800
So I'll defer you to go
talk to a YouTube

00:36:31.800 --> 00:36:33.390
engineer about that.

00:36:33.390 --> 00:36:36.010
But they did do a lot of
Python optimization.

00:36:36.010 --> 00:36:38.520
And anytime they ran into any
type of performance issues

00:36:38.520 --> 00:36:41.560
with Python, they would port
that code directly into C.

00:36:41.560 --> 00:36:44.240
So one of the examples is they
used to do a lot of hashing

00:36:44.240 --> 00:36:45.270
using Python.

00:36:45.270 --> 00:36:48.010
Well, you just take that out,
replace it with a few lines of

00:36:48.010 --> 00:36:50.020
C and that's not an
issue anymore.

00:36:50.020 --> 00:36:52.440
Next road bump.

00:36:52.440 --> 00:36:56.470
They simplified algorithms that
should have been not as

00:36:56.470 --> 00:37:01.590
complex and they did thinks to
help improve how efficient

00:37:01.590 --> 00:37:03.160
that the developers were.

00:37:03.160 --> 00:37:06.080
When they do all of these
optimizations for scale-aware

00:37:06.080 --> 00:37:09.230
code, they actually push all
this stuff under the covers so

00:37:09.230 --> 00:37:11.840
that the regular software
engineer doesn't always have

00:37:11.840 --> 00:37:14.660
to know everything
about scaling.

00:37:14.660 --> 00:37:18.310
They get a simple call like this
that's very easy to code,

00:37:18.310 --> 00:37:21.500
very easy to understand,
and that's great.

00:37:21.500 --> 00:37:25.510
However, the thing is this
doesn't give you a right to go

00:37:25.510 --> 00:37:27.820
and be sloppy and become
a memory hog.

00:37:27.820 --> 00:37:30.710
You still have to be aware
of what you're doing.

00:37:30.710 --> 00:37:34.040
Sometimes I always tell people
that, you need to really

00:37:34.040 --> 00:37:37.032
program in a low-level language
like C or C++ in

00:37:37.032 --> 00:37:39.930
order to really appreciate all
of the memory management that

00:37:39.930 --> 00:37:42.480
Python and Java give you.

00:37:42.480 --> 00:37:46.840
So just don't be too loose
with your morals.

00:37:49.510 --> 00:37:52.910
So the bottom line at YouTube is
that Python provides a lot

00:37:52.910 --> 00:37:53.465
of flexibility.

00:37:53.465 --> 00:37:55.640
It gave them rapid development
as well.

00:37:55.640 --> 00:37:57.040
You'll hear rapid development
over and over

00:37:57.040 --> 00:37:58.410
again in this talk.

00:37:58.410 --> 00:37:59.540
And simplicity.

00:37:59.540 --> 00:38:03.550
And their secret to success is
just-in-time optimization.

00:38:03.550 --> 00:38:05.350
You run as hard as you can.

00:38:05.350 --> 00:38:07.500
When you have to optimize, you
go and do it, and then you

00:38:07.500 --> 00:38:09.690
move onto the next thing.

00:38:09.690 --> 00:38:11.960
They like to take reliable
open source software and

00:38:11.960 --> 00:38:14.760
customize and optimize
as they need.

00:38:14.760 --> 00:38:19.270
So people always question,
can Python really scale?

00:38:19.270 --> 00:38:21.290
So some stats to think
about from YouTube.

00:38:21.290 --> 00:38:23.620
They get over 2 billion
views a day.

00:38:23.620 --> 00:38:26.440
200 million of those
are mobile views.

00:38:26.440 --> 00:38:28.700
And there are about
35 hours of video

00:38:28.700 --> 00:38:29.700
uploaded every minute.

00:38:29.700 --> 00:38:31.520
And actually, the
real numbers are

00:38:31.520 --> 00:38:32.440
actually bigger than these.

00:38:32.440 --> 00:38:35.160
These are just the numbers
that we can say.

00:38:35.160 --> 00:38:39.110
So if you're curious, more
curious about how Python at

00:38:39.110 --> 00:38:42.410
YouTube scaled with Python, then
take a look at that talk

00:38:42.410 --> 00:38:44.640
given by one of the engineers
at YouTube.

00:38:44.640 --> 00:38:47.490
It's a very, much more in-depth
technical talk.

00:38:47.490 --> 00:38:50.000
So if you want to kind of dig a
little deeper, I suggest you

00:38:50.000 --> 00:38:51.250
go and check that out.

00:38:53.590 --> 00:38:55.940
So as I kind of already alluded
to on the previous

00:38:55.940 --> 00:38:58.840
slide, proceed with caution.

00:38:58.840 --> 00:39:01.910
Yes, I'm enthusiastic, now you
should be enthusiastic about

00:39:01.910 --> 00:39:04.810
Python because I made you so.

00:39:04.810 --> 00:39:08.850
But you can't just drop it in
where C++ and Java are.

00:39:08.850 --> 00:39:11.630
You can't just like swap those
out and expect everything to

00:39:11.630 --> 00:39:13.100
stay the same.

00:39:13.100 --> 00:39:15.600
Because in general, interpreted
languages just

00:39:15.600 --> 00:39:18.050
don't compare to compiled
languages.

00:39:18.050 --> 00:39:19.570
Of course, one exception
is PyPy.

00:39:19.570 --> 00:39:20.600
I don't know if you guys
have heard of that.

00:39:20.600 --> 00:39:23.030
But that is the Python
interpreter written in a

00:39:23.030 --> 00:39:25.530
restricted statically-typed
version of Python.

00:39:25.530 --> 00:39:29.030
And believe it or, no it,
actually beat C Python in most

00:39:29.030 --> 00:39:30.210
benchmarks.

00:39:30.210 --> 00:39:33.030
So keep an eye on that project
because that's probably going

00:39:33.030 --> 00:39:36.440
to be another shocking thing
that comes down the line if

00:39:36.440 --> 00:39:38.350
you've never heard
of it before.

00:39:38.350 --> 00:39:41.640
So anyway, yes, Python has big
strengths and they are

00:39:41.640 --> 00:39:43.310
flexibility and rapid
development.

00:39:43.310 --> 00:39:45.180
Those things are
the key things.

00:39:45.180 --> 00:39:49.830
Performances and scalability
are also important too, but

00:39:49.830 --> 00:39:51.430
that's not the point.

00:39:51.430 --> 00:39:55.150
The point is to be
first to market.

00:39:55.150 --> 00:39:58.770
You get there, then you port
or optimize as necessary in

00:39:58.770 --> 00:40:02.170
order for you to succeed.

00:40:02.170 --> 00:40:06.840
Other places that Python shows
up, originally the Google

00:40:06.840 --> 00:40:08.540
Build system was
done in Python.

00:40:08.540 --> 00:40:11.330
There are a gazillion system
administration tools that I

00:40:11.330 --> 00:40:14.410
can't even begin to count that
are written in Python.

00:40:14.410 --> 00:40:18.790
The code review tool that
engineers use to do review and

00:40:18.790 --> 00:40:21.390
then check-ins, that's
also done in Python.

00:40:21.390 --> 00:40:24.390
QA and testing, automation,
lots of SWIG.

00:40:24.390 --> 00:40:26.330
If you don't know what SWIG is,
that's the library that

00:40:26.330 --> 00:40:28.940
helps you wrap C and
C++ code in Python.

00:40:28.940 --> 00:40:31.410
And of course, there's lots
of App Engine apps.

00:40:31.410 --> 00:40:34.580
Many of you guys are external
App Engine developers, but

00:40:34.580 --> 00:40:37.080
believe it or not, there's a lot
of App Engine use within

00:40:37.080 --> 00:40:38.100
Google as well.

00:40:38.100 --> 00:40:41.210
And so I invite you guys to
come see Ben Fried's talk

00:40:41.210 --> 00:40:43.270
tomorrow, Coding
for the Cloud.

00:40:43.270 --> 00:40:46.930
And there, he and his team
will explain how they use

00:40:46.930 --> 00:40:50.400
Google App Engine to
build apps to help

00:40:50.400 --> 00:40:52.830
run Google, the company.

00:40:52.830 --> 00:40:54.920
I think that's tomorrow
morning.

00:40:54.920 --> 00:40:58.640
So the last part of the
talk, Python and You.

00:40:58.640 --> 00:41:01.100
So if you're new to Python, you
want to get started, of

00:41:01.100 --> 00:41:03.790
course python.org is
the main website.

00:41:03.790 --> 00:41:05.340
Don't go to python.com.

00:41:05.340 --> 00:41:09.500
I think some porn site took
it over at some point.

00:41:09.500 --> 00:41:11.590
But maybe that domain has
finally been reclaimed by

00:41:11.590 --> 00:41:13.250
something else.

00:41:13.250 --> 00:41:14.730
But all of the docs,
downloads, and

00:41:14.730 --> 00:41:16.350
tutorials are there.

00:41:16.350 --> 00:41:17.570
Book suggestions.

00:41:17.570 --> 00:41:20.990
Of course, I recommend
Core Python.

00:41:20.990 --> 00:41:25.500
Not just because I wrote it, but
the main purpose of that

00:41:25.500 --> 00:41:27.150
is to give you the most

00:41:27.150 --> 00:41:30.520
comprehensive dive into Python.

00:41:30.520 --> 00:41:32.110
I want you to learn
it quickly and as

00:41:32.110 --> 00:41:34.090
comprehensively as possible.

00:41:34.090 --> 00:41:36.885
If you don't have time for
that, my colleague, Mark

00:41:36.885 --> 00:41:39.910
Pilgrim, he's written a book
called Dive into Python.

00:41:39.910 --> 00:41:43.100
And that's what I call a quick
dive into the language.

00:41:43.100 --> 00:41:47.080
So I don't think he's here, but
Mark, you can jump up if

00:41:47.080 --> 00:41:48.730
you're here.

00:41:48.730 --> 00:41:51.610
And if you have kids or you're
a beginner and you want to

00:41:51.610 --> 00:41:53.610
learn how to program,
take a look at that

00:41:53.610 --> 00:41:54.330
book, which is great.

00:41:54.330 --> 00:41:56.570
It's called Hello World and
it's a book written by an

00:41:56.570 --> 00:41:59.790
engineer and his eight year old
son, so it's got a kid's

00:41:59.790 --> 00:42:02.020
perspective, which
is really cool.

00:42:02.020 --> 00:42:03.610
Lots of online videos.

00:42:03.610 --> 00:42:05.980
The show me do videos
are just one set.

00:42:05.980 --> 00:42:08.090
But if you look around, there's
all kinds of tutorials

00:42:08.090 --> 00:42:09.430
and videos that you can use.

00:42:09.430 --> 00:42:11.950
And for community, there's a
newsgroup like I said, the

00:42:11.950 --> 00:42:15.370
Tutor mailing list. As well as
take a look at the upcoming

00:42:15.370 --> 00:42:16.620
PyCon conferences.

00:42:16.620 --> 00:42:20.300
Like I said, the most recent
ones coming up are

00:42:20.300 --> 00:42:22.430
EuroPython and OSCON.

00:42:22.430 --> 00:42:24.910
And I think PyCon in Asia
Pacific is coming

00:42:24.910 --> 00:42:25.770
up in June as well.

00:42:25.770 --> 00:42:27.900
So if you want to go to
Singapore, hit up a Python

00:42:27.900 --> 00:42:29.150
conference.

00:42:31.410 --> 00:42:35.170
So now I have to give
you a warning.

00:42:35.170 --> 00:42:37.630
We are at the crossroads
of Python.

00:42:37.630 --> 00:42:41.160
So you guys have arrived at just
the right time, I think.

00:42:41.160 --> 00:42:43.180
There are actually two
versions of Python.

00:42:43.180 --> 00:42:45.370
There's a Python 2, which is
the current version that

00:42:45.370 --> 00:42:46.490
everybody's using.

00:42:46.490 --> 00:42:49.470
There's also Python 3, which
is the next generation.

00:42:49.470 --> 00:42:54.550
And it is evidence that Python
is continuing to evolve.

00:42:54.550 --> 00:42:58.010
Now, one of the things that
people note and people say and

00:42:58.010 --> 00:43:00.470
all of the FUD comes
up is that it's

00:43:00.470 --> 00:43:01.780
backwards-incompatible.

00:43:01.780 --> 00:43:05.630
Yes, that's really scary because
of the two big words.

00:43:05.630 --> 00:43:11.390
But the thing is, the language
isn't changing so much that if

00:43:11.390 --> 00:43:15.020
you learn Python 2 you can't
do 3, or vice versa.

00:43:15.020 --> 00:43:15.960
It's not like that.

00:43:15.960 --> 00:43:18.660
It's not like the changes are
so big that it's causing the

00:43:18.660 --> 00:43:21.190
community to fragment.

00:43:21.190 --> 00:43:21.790
It is new.

00:43:21.790 --> 00:43:23.390
It's still a little rough
on the edges,

00:43:23.390 --> 00:43:25.550
but it's usable now.

00:43:25.550 --> 00:43:28.770
And so, just don't freak out.

00:43:28.770 --> 00:43:31.460
So on the earlier slide I showed
you Hello World, but I

00:43:31.460 --> 00:43:34.510
need to show you Hello World
in Python 3 now.

00:43:34.510 --> 00:43:37.960
So obviously, if you're going
to change print from a

00:43:37.960 --> 00:43:40.620
statement to a function, that's
going to break like 95%

00:43:40.620 --> 00:43:42.620
of all the code up
there, right?

00:43:42.620 --> 00:43:44.550
So of course, it's
backwards-incompatible.

00:43:44.550 --> 00:43:46.930
But is it that hard?

00:43:46.930 --> 00:43:49.470
Is that really earth-shattering?

00:43:49.470 --> 00:43:50.670
Not really.

00:43:50.670 --> 00:43:52.560
Of course, I'd have to tell
you there's a third way of

00:43:52.560 --> 00:43:54.760
doing it and that's more lower
level if you want to really

00:43:54.760 --> 00:43:56.760
use standard in, standard
out, standard area

00:43:56.760 --> 00:43:57.170
you can do that too.

00:43:57.170 --> 00:43:59.400
But you've got to import the
sys module to do that.

00:43:59.400 --> 00:44:02.800
So there's three different ways
of doing Hello World.

00:44:02.800 --> 00:44:05.520
Python's philosophy is there
should be only one right way

00:44:05.520 --> 00:44:06.470
of doing things.

00:44:06.470 --> 00:44:10.610
So this is just one
minor exception.

00:44:10.610 --> 00:44:13.790
In other words, don't
freak out.

00:44:13.790 --> 00:44:15.540
Whether you learn Python
2 or Python 3, it

00:44:15.540 --> 00:44:17.070
doesn't really matter.

00:44:17.070 --> 00:44:17.770
Just pick one.

00:44:17.770 --> 00:44:19.920
Which one should you pick?

00:44:19.920 --> 00:44:24.460
So yeah, instead of panicking,
get excited and do stuff.

00:44:24.460 --> 00:44:27.140
We don't have time to panic.

00:44:27.140 --> 00:44:30.640
So if you want to know where to
start, if you're completely

00:44:30.640 --> 00:44:33.280
new to the language, you don't
have any dependencies, you

00:44:33.280 --> 00:44:35.570
should start with Python 3
because that is going to be

00:44:35.570 --> 00:44:37.950
the future.

00:44:37.950 --> 00:44:42.210
If you have existing software or
you have existing books and

00:44:42.210 --> 00:44:43.890
tutorials, most books
and tutorials are

00:44:43.890 --> 00:44:45.470
still in Python 2.

00:44:45.470 --> 00:44:49.440
So if you have some baggage,
then stick with Python 2.

00:44:49.440 --> 00:44:51.190
Like I said, doesn't matter.

00:44:51.190 --> 00:44:52.440
Either one is fine.

00:44:56.060 --> 00:44:58.130
What did I go over
in the talk?

00:44:58.130 --> 00:45:00.230
I mentioned that Python's a
great first language for

00:45:00.230 --> 00:45:03.910
people to learn how
to program with.

00:45:03.910 --> 00:45:06.820
Two of its greatest features are
that it encourages rapid

00:45:06.820 --> 00:45:09.200
development because of the
simplistic syntax.

00:45:09.200 --> 00:45:11.950
It's very flexible, there are
many applications that are

00:45:11.950 --> 00:45:14.520
written in Python that are
out there already.

00:45:14.520 --> 00:45:17.360
Specifically at Google, as
well as not at Google.

00:45:17.360 --> 00:45:20.960
Python is pretty popular and
will continue to be.

00:45:20.960 --> 00:45:23.010
There are many libraries and
tools that are written in

00:45:23.010 --> 00:45:24.860
Python and when you
go and download--

00:45:24.860 --> 00:45:28.470
when you go and look at the
archives and repositories of

00:45:28.470 --> 00:45:30.915
all the software, there's a lot
of variety of things that

00:45:30.915 --> 00:45:32.200
are out there.

00:45:32.200 --> 00:45:35.550
And Python has a really strong
relationship with education,

00:45:35.550 --> 00:45:37.960
and same goes from
Google as well.

00:45:37.960 --> 00:45:39.580
And of course, a big plug.

00:45:39.580 --> 00:45:41.310
Google's always hiring
strong developers.

00:45:41.310 --> 00:45:44.110
So if you're looking for work,
then come talk to one of us.

00:45:46.800 --> 00:45:47.810
I'd love to meet users.

00:45:47.810 --> 00:45:49.030
Come talk to me.

00:45:49.030 --> 00:45:51.990
I'm going to be speaking at
these conferences, I also have

00:45:51.990 --> 00:45:54.890
a Python training course in
May or later this month.

00:45:54.890 --> 00:45:57.730
But generally, I'm accessible
at lots of conferences.

00:45:57.730 --> 00:46:01.760
I'm either talking about Python
and/or App Engine.

00:46:01.760 --> 00:46:04.180
If you're curious about the
slide generator, I wrote that

00:46:04.180 --> 00:46:07.140
using the os, sys, time,
and Tkinter modules.

00:46:07.140 --> 00:46:09.780
I also used the Python
extensions for Windows, so

00:46:09.780 --> 00:46:13.310
that I could actually connect
to PowerPoints.

00:46:13.310 --> 00:46:15.650
People have been asking for this
for years, so I promise

00:46:15.650 --> 00:46:18.500
it will be in the third
edition of my book.

00:46:18.500 --> 00:46:22.140
And I'll also put it out
as open source as well.

00:46:22.140 --> 00:46:24.404
All right, thank
you very much.

00:46:24.404 --> 00:46:25.654
[APPLAUSE]

00:46:32.070 --> 00:46:33.910
WESLEY CHUN: Feel free to
come up to the mics.

00:46:33.910 --> 00:46:35.490
Feel free to ask a question.

00:46:35.490 --> 00:46:36.560
Yes, sir.

00:46:36.560 --> 00:46:37.470
Hi.

00:46:37.470 --> 00:46:40.530
So let's pretend there's a
hypothetical startup with a

00:46:40.530 --> 00:46:44.170
hypothetical team of smart
developers who are quite split

00:46:44.170 --> 00:46:48.780
on using Python or Ruby for a
software as a service, high

00:46:48.780 --> 00:46:51.350
availability, whatever,
whatever product.

00:46:51.350 --> 00:46:55.430
What are some words of wisdom
you could give to grant weight

00:46:55.430 --> 00:46:59.030
to the Python decision there?

00:46:59.030 --> 00:47:01.020
GUIDO VAN ROSSUM: Oh dang, I
was going to be completely

00:47:01.020 --> 00:47:03.120
impartial about that.

00:47:03.120 --> 00:47:03.980
You can be impartial.

00:47:03.980 --> 00:47:04.695
GUIDO VAN ROSSUM: And say with
the dynamic language

00:47:04.695 --> 00:47:05.320
you can't go wrong.

00:47:05.320 --> 00:47:06.556
That's good as well.

00:47:06.556 --> 00:47:08.630
It's all hypothetical.

00:47:08.630 --> 00:47:09.880
Maybe.

00:47:12.270 --> 00:47:13.390
WESLEY CHUN: I don't know.

00:47:13.390 --> 00:47:14.640
Do you like Rails or Django?

00:47:17.660 --> 00:47:18.910
That's a good question.

00:47:23.200 --> 00:47:24.930
I know a good number of
engineers in the community, a

00:47:24.930 --> 00:47:27.350
lot of my colleagues actually
know Python and Ruby.

00:47:27.350 --> 00:47:31.440
So they're actually a really
good audience to ask, but many

00:47:31.440 --> 00:47:35.560
of them will say, I'm pretty
flexible but most of the time

00:47:35.560 --> 00:47:38.200
I'll lean towards Python because
there isn't anything

00:47:38.200 --> 00:47:42.110
that I can't do in Python.

00:47:42.110 --> 00:47:43.720
And they're flexible.

00:47:43.720 --> 00:47:46.890
But they feel a little more at
ease with Python and they say

00:47:46.890 --> 00:47:48.710
the syntax is a little
bit easier.

00:47:48.710 --> 00:47:50.270
Some people have really
strong feelings

00:47:50.270 --> 00:47:51.840
against Ruby's syntax.

00:47:51.840 --> 00:47:53.230
I don't think it's that bad.

00:47:53.230 --> 00:47:55.520
But some people do.

00:47:55.520 --> 00:47:59.800
I will just say prototype a
medium-sized project in both

00:47:59.800 --> 00:48:02.370
and gather feedback.

00:48:02.370 --> 00:48:04.030
Thank you.

00:48:04.030 --> 00:48:05.920
GUIDO VAN ROSSUM: Another
thought about that topic is if

00:48:05.920 --> 00:48:09.480
you ever imagine doing something
that is not web

00:48:09.480 --> 00:48:13.480
programming and you imagine
maybe using some other third

00:48:13.480 --> 00:48:18.420
party software in addition to
the language, there is a very

00:48:18.420 --> 00:48:23.940
wide array of software for
Python that I think is--

00:48:23.940 --> 00:48:27.640
Python is used in many areas
besides web programming and

00:48:27.640 --> 00:48:31.220
Ruby is a little bit of a
one-trick pony in that sense.

00:48:31.220 --> 00:48:34.430
Ruby on Rails is pretty much
synonymous with Ruby.

00:48:34.430 --> 00:48:36.310
So as long as you're sure that
you're never going to do

00:48:36.310 --> 00:48:38.620
anything besides web
programming, it probably

00:48:38.620 --> 00:48:41.541
doesn't matter which language
you choose.

00:48:41.541 --> 00:48:42.680
WESLEY CHUN: Good point.

00:48:42.680 --> 00:48:44.830
Yes sir.

00:48:44.830 --> 00:48:48.540
So you've probably heard of
the Scripting Language for

00:48:48.540 --> 00:48:51.140
Android project, which has
been around for a little

00:48:51.140 --> 00:48:55.420
while, which allows for Python
apps to be made for Android.

00:48:55.420 --> 00:48:59.330
But currently, obviously not
nearly as much you can do with

00:48:59.330 --> 00:49:01.160
that as with standard
Java apps.

00:49:01.160 --> 00:49:03.830
So I was wondering if Google
has any plans of extending

00:49:03.830 --> 00:49:09.490
that or integrating it into
to Android SDK at all, or

00:49:09.490 --> 00:49:11.620
anything like that?

00:49:11.620 --> 00:49:13.100
WESLEY CHUN: That's a tough
question because we don't

00:49:13.100 --> 00:49:14.200
represent the Android.

00:49:14.200 --> 00:49:15.640
GUIDO VAN ROSSUM: Yeah.

00:49:15.640 --> 00:49:19.540
You should really ask the
Android people about that.

00:49:19.540 --> 00:49:22.560
WESLEY CHUN: We would love for
that to happen, though.

00:49:22.560 --> 00:49:24.500
Then you should try to do it.

00:49:24.500 --> 00:49:25.830
Thanks.

00:49:25.830 --> 00:49:27.650
WESLEY CHUN: Sure.

00:49:27.650 --> 00:49:28.250
Who's next?

00:49:28.250 --> 00:49:30.160
I think you're next.

00:49:30.160 --> 00:49:34.290
Yeah, will App Engine support
Python 3 at some point?

00:49:34.290 --> 00:49:35.280
WESLEY CHUN: Will App
Engine support

00:49:35.280 --> 00:49:38.390
Python 3 at some point?

00:49:38.390 --> 00:49:39.970
At some point, yes.

00:49:39.970 --> 00:49:41.750
GUIDO VAN ROSSUM:
Most likely yes.

00:49:41.750 --> 00:49:44.550
I mean unless the App Engine
product is going to go under

00:49:44.550 --> 00:49:47.790
in the next five years, it
will support Python 3.

00:49:47.790 --> 00:49:48.830
When?

00:49:48.830 --> 00:49:53.050
Well, we're looking at Python
2.7 first at the moment, which

00:49:53.050 --> 00:49:56.030
is actually quite a huge step
in the right direction.

00:49:56.030 --> 00:49:56.620
WESLEY CHUN: It is.

00:49:56.620 --> 00:49:59.570
One thing that I didn't mention
in this talk is that

00:49:59.570 --> 00:50:03.260
starting with Python 2.6,
they're rolling in a lot of

00:50:03.260 --> 00:50:04.480
Python 3 features.

00:50:04.480 --> 00:50:06.550
They're back porting
these features.

00:50:06.550 --> 00:50:09.830
So 2.6 and 2.7 are really good
tools to actually coding in a

00:50:09.830 --> 00:50:12.136
more Python 3 flavor.

00:50:12.136 --> 00:50:13.570
Why the delay?

00:50:13.570 --> 00:50:14.590
WESLEY CHUN: Pardon?

00:50:14.590 --> 00:50:16.500
Why the delay?

00:50:16.500 --> 00:50:17.750
WESLEY CHUN: Why the delay?

00:50:20.980 --> 00:50:23.340
Well, when you have a
backwards-incompatible future

00:50:23.340 --> 00:50:26.600
release, it takes a lot of
time to do this porting.

00:50:26.600 --> 00:50:29.080
You know, I'm going
to call a decade.

00:50:29.080 --> 00:50:29.790
That's 10 years.

00:50:29.790 --> 00:50:30.690
That's a lot of time.

00:50:30.690 --> 00:50:33.890
So Python 3.0 came
out in 2008.

00:50:33.890 --> 00:50:35.750
So I don't think the entire
world will be--

00:50:35.750 --> 00:50:36.970
I'm sure he wants it faster.

00:50:36.970 --> 00:50:39.270
But I don't think the entire
world will be on Python 3

00:50:39.270 --> 00:50:41.020
until 2018.

00:50:41.020 --> 00:50:44.500
So the thing is, it's not Python
2 is end of light.

00:50:44.500 --> 00:50:48.250
So the idea is that even
2.6 and 3.0 were

00:50:48.250 --> 00:50:49.320
developed in parallel.

00:50:49.320 --> 00:50:51.240
So there are actually two teams
that are working on it

00:50:51.240 --> 00:50:52.220
simultaneously.

00:50:52.220 --> 00:50:54.640
It's not like 2.7 been cut
off and it's dead now.

00:50:54.640 --> 00:50:56.340
That's not the case.

00:50:56.340 --> 00:51:00.572
So it's not as much of a delay
as it is ease of migration.

00:51:00.572 --> 00:51:03.250
Thanks.

00:51:03.250 --> 00:51:05.630
WESLEY CHUN: Go ahead.

00:51:05.630 --> 00:51:08.530
In a couple areas of the Python
community, I see that

00:51:08.530 --> 00:51:11.420
there's a lot of not invented
here syndrome.

00:51:11.420 --> 00:51:13.670
My two biggest gripes
are in web

00:51:13.670 --> 00:51:15.740
frameworks and event loops.

00:51:15.740 --> 00:51:18.315
We already have Twisted, but
we still felt the need to

00:51:18.315 --> 00:51:21.470
invent Diesel and Tornado.

00:51:21.470 --> 00:51:23.000
Frameworks I think
are even worse.

00:51:23.000 --> 00:51:25.600
People are inventing new web
frameworks every week, simply

00:51:25.600 --> 00:51:27.420
because they don't
like the way that

00:51:27.420 --> 00:51:29.430
the other one templates.

00:51:29.430 --> 00:51:30.760
What do you guys
think of that?

00:51:30.760 --> 00:51:36.870
GUIDO VAN ROSSUM: I think it's
great because it just shows

00:51:36.870 --> 00:51:40.300
how easy it is to develop
one of those things.

00:51:40.300 --> 00:51:43.160
And so I think, let there
be competition.

00:51:43.160 --> 00:51:47.580
Let lots of people try different
ways of doing the

00:51:47.580 --> 00:51:48.880
same thing.

00:51:48.880 --> 00:51:54.230
Something like Twisted is the
effective 800-pound gorilla of

00:51:54.230 --> 00:51:56.550
event handling frameworks.

00:51:56.550 --> 00:51:59.650
Anyway, it's never going to
be in the standard library

00:51:59.650 --> 00:52:03.730
because it's just a completely
different level of coding.

00:52:03.730 --> 00:52:07.790
I mean Twisted is a project
with its own release cycle

00:52:07.790 --> 00:52:13.380
that would be very hard to be
adjusted to the core Python

00:52:13.380 --> 00:52:14.330
release cycle.

00:52:14.330 --> 00:52:16.390
So it will always be
its separate thing.

00:52:16.390 --> 00:52:23.300
There's no worry that the core
will sort of take over the

00:52:23.300 --> 00:52:28.810
market for, the niche for an
event programming framework.

00:52:28.810 --> 00:52:30.390
At the same time.

00:52:30.390 --> 00:52:33.720
it's good that there's
competition that people try

00:52:33.720 --> 00:52:38.680
different ways of sort of
doing the same thing.

00:52:38.680 --> 00:52:40.840
I say let there be
more choice.

00:52:40.840 --> 00:52:41.060
WESLEY CHUN: Right.

00:52:41.060 --> 00:52:43.550
The market winner will
show up eventually.

00:52:43.550 --> 00:52:45.160
Isn't [INAUDIBLE]

00:52:45.160 --> 00:52:49.060
still in the 3.0 standard
library?

00:52:49.060 --> 00:52:49.560
WESLEY CHUN: I think so.

00:52:49.560 --> 00:52:51.410
And I think it's been
maintained.

00:52:51.410 --> 00:52:53.230
Somebody's been patching
it recently I believe.

00:52:53.230 --> 00:52:55.640
GUIDO VAN ROSSUM: That is the
only reason that is in the

00:52:55.640 --> 00:52:56.470
standard library.

00:52:56.470 --> 00:53:00.820
Is that there are some people
who use it and we don't want

00:53:00.820 --> 00:53:04.930
to sort of be gratuitously
backwards compatible.

00:53:04.930 --> 00:53:08.360
But that is certainly not what
we recommend people use.

00:53:08.360 --> 00:53:08.820
OK.

00:53:08.820 --> 00:53:09.390
Thank you.

00:53:09.390 --> 00:53:11.000
WESLEY CHUN: It was also created
by one of our ex

00:53:11.000 --> 00:53:12.310
IronPort co-workers too.

00:53:12.310 --> 00:53:14.260
Yeah, I know.

00:53:14.260 --> 00:53:15.330
WESLEY CHUN: Great, thanks.

00:53:15.330 --> 00:53:16.700
Go ahead.

00:53:16.700 --> 00:53:20.720
So clearly, Python is the
superior language and has

00:53:20.720 --> 00:53:23.550
seniority at Google.

00:53:23.550 --> 00:53:29.930
How is it that Java ended up
in Android and GWT and many

00:53:29.930 --> 00:53:32.670
other projects as opposed
to Python?

00:53:35.550 --> 00:53:38.650
GUIDO VAN ROSSUM: Is that
a serious question?

00:53:38.650 --> 00:53:40.860
Personally, I don't prefer
to develop in

00:53:40.860 --> 00:53:43.366
Java, but I love GWT.

00:53:43.366 --> 00:53:44.960
It was kind of a serious
question.

00:53:44.960 --> 00:53:47.690
WESLEY CHUN: There's Pyjamas.

00:53:47.690 --> 00:53:50.730
Well, it doesn't work well with
the GWT compiler, right?

00:53:50.730 --> 00:53:53.810
GUIDO VAN ROSSUM: Well, sort
of the reality is that the

00:53:53.810 --> 00:53:56.930
choice of language is
often a very sort of

00:53:56.930 --> 00:53:58.920
non-rational choice.

00:53:58.920 --> 00:54:06.040
And people tend to go with where
it's easiest to hire

00:54:06.040 --> 00:54:07.500
lots of programmers.

00:54:07.500 --> 00:54:12.020
And that in many cases, has sort
of forced the choice for

00:54:12.020 --> 00:54:15.440
Java in many specific
projects.

00:54:15.440 --> 00:54:16.400
OK, fair enough.

00:54:16.400 --> 00:54:18.410
Thank you.

00:54:18.410 --> 00:54:19.040
WESLEY CHUN: Sir.

00:54:19.040 --> 00:54:19.900
Yeah, hi.

00:54:19.900 --> 00:54:26.380
So with an ecosystem of Python
interpreters emerging with C

00:54:26.380 --> 00:54:30.540
Python versus PyPy and then
Unladen Swallow, whatever is

00:54:30.540 --> 00:54:31.940
going on with that.

00:54:31.940 --> 00:54:34.290
How long is the core development
going to be still

00:54:34.290 --> 00:54:38.060
done with C Python where like
PyPy is really pulling ahead

00:54:38.060 --> 00:54:40.040
in a lot of benchmarks?

00:54:40.040 --> 00:54:44.750
I know it's not future complete
yet, but are there

00:54:44.750 --> 00:54:48.460
any plans of incorporating these
other interpreters in

00:54:48.460 --> 00:54:51.830
the core development so new
features come out on them at

00:54:51.830 --> 00:54:53.520
the same time as other
interpreters?

00:54:56.630 --> 00:54:59.120
GUIDO VAN ROSSUM: That's not
really how it works.

00:54:59.120 --> 00:55:02.090
Sort of core Python development
as we currently

00:55:02.090 --> 00:55:04.880
think of it is really C
Python development.

00:55:04.880 --> 00:55:10.190
It is a group of people who
choose to work on C Python.

00:55:10.190 --> 00:55:15.580
What might eventually happen
is that more and more

00:55:15.580 --> 00:55:19.520
individuals choose to contribute
to PyPy instead of

00:55:19.520 --> 00:55:20.180
to C Python.

00:55:20.180 --> 00:55:23.170
We have a fair number of
developers who split their

00:55:23.170 --> 00:55:26.240
time between those
two versions.

00:55:26.240 --> 00:55:29.750
Some who started out as C Python
developers are now PyPy

00:55:29.750 --> 00:55:30.940
developers.

00:55:30.940 --> 00:55:36.420
What I'm still sort of waiting
for, I mean personally, I am

00:55:36.420 --> 00:55:38.710
like the opposite of
a speed freak.

00:55:38.710 --> 00:55:42.590
I don't care particularly
how fast it runs.

00:55:42.590 --> 00:55:46.010
So I'm not ever going to
contribute to something whose

00:55:46.010 --> 00:55:50.790
focus is on making it run faster
and extremely, insanely

00:55:50.790 --> 00:55:52.840
smart [INAUDIBLE]

00:55:52.840 --> 00:55:54.540
optimizations.

00:55:54.540 --> 00:55:58.450
It turns out that quite a few
users of Python sort of

00:55:58.450 --> 00:56:02.630
currently still seem to think
the same way because C Python

00:56:02.630 --> 00:56:05.270
is still more popular
than PyPy.

00:56:05.270 --> 00:56:09.470
On the other hand, we do see
sort of some users move over

00:56:09.470 --> 00:56:15.110
and I think that I don't
want the development

00:56:15.110 --> 00:56:16.430
team to drive that.

00:56:16.430 --> 00:56:17.910
I want the users
to drive that.

00:56:17.910 --> 00:56:24.120
So if the users sort of start
showing a clear trend towards

00:56:24.120 --> 00:56:30.260
PyPy, then it's possible that
eventually PyPy will sort of

00:56:30.260 --> 00:56:33.830
compete head to head with
C Python at some point.

00:56:33.830 --> 00:56:36.740
We may say, OK, there's no need
for both C Python and

00:56:36.740 --> 00:56:40.930
PyPy because they are both
sort of feature complete.

00:56:40.930 --> 00:56:42.680
Let's focus on one of them.

00:56:42.680 --> 00:56:47.270
And then sort of the one that
is more modern and runs your

00:56:47.270 --> 00:56:49.730
code faster would
be preferred.

00:56:49.730 --> 00:56:50.980
Until then--

00:56:52.940 --> 00:56:55.910
again, it's the same answer as
with the web frameworks.

00:56:55.910 --> 00:57:00.300
Hooray for competition, hooray
for diversity, let's see where

00:57:00.300 --> 00:57:02.160
it all leads.

00:57:02.160 --> 00:57:03.370
WESLEY CHUN: Great.

00:57:03.370 --> 00:57:04.080
Sir.

00:57:04.080 --> 00:57:07.090
What insight can you give us
on the choice of Django for

00:57:07.090 --> 00:57:11.020
App Engine as the web framework
that was chosen?

00:57:11.020 --> 00:57:12.270
GUIDO VAN ROSSUM: I think
it was a coincidence.

00:57:15.110 --> 00:57:17.680
Anything else?

00:57:17.680 --> 00:57:18.930
GUIDO VAN ROSSUM: I mean it
was a fine coincidence.

00:57:22.590 --> 00:57:23.130
OK.

00:57:23.130 --> 00:57:25.940
Cool.

00:57:25.940 --> 00:57:29.950
GUIDO VAN ROSSUM: We didn't do
a very careful comparison of

00:57:29.950 --> 00:57:31.110
available web frameworks.

00:57:31.110 --> 00:57:34.620
We probably would have decided
to write our own.

00:57:34.620 --> 00:57:37.300
Which sort of for 50%,
we actually did.

00:57:41.140 --> 00:57:47.840
Does Google use Psycho for any
of your projects, and do you

00:57:47.840 --> 00:57:49.780
consider it safe?

00:57:49.780 --> 00:57:53.120
Is it still being actively
developed?

00:57:53.120 --> 00:57:55.830
It seemed like it kind of
got abandoned there.

00:57:55.830 --> 00:57:58.280
GUIDO VAN ROSSUM: I think there
may be small pockets in

00:57:58.280 --> 00:58:01.330
Google that still use Psycho.

00:58:01.330 --> 00:58:04.740
I don't think that it's
very popular anymore.

00:58:04.740 --> 00:58:08.420
For App Engine I certainly would
not consider it safe.

00:58:08.420 --> 00:58:09.410
WESLEY CHUN: Same goes
for YouTube.

00:58:09.410 --> 00:58:11.810
YouTube used to be a big user of
Psycho and that has kind of

00:58:11.810 --> 00:58:14.710
wind down as well.

00:58:14.710 --> 00:58:16.430
The lead developer of
Psycho has actually

00:58:16.430 --> 00:58:18.000
gone on to do PyPy.

00:58:18.000 --> 00:58:20.700
He's a lead developer
for PyPy now.

00:58:20.700 --> 00:58:21.260
Yes sir.

00:58:21.260 --> 00:58:25.210
We learned that this morning
App Engine will

00:58:25.210 --> 00:58:27.370
also support Go.

00:58:27.370 --> 00:58:29.490
So would you like to comment
on these [INAUDIBLE]

00:58:29.490 --> 00:58:31.030
efforts within Google?

00:58:34.330 --> 00:58:35.330
WESLEY CHUN: Are there
any Go App Engine

00:58:35.330 --> 00:58:36.992
developer members here?

00:58:39.950 --> 00:58:41.670
GUIDO VAN ROSSUM: I didn't hear
the-- understand the last

00:58:41.670 --> 00:58:42.720
half of the question.

00:58:42.720 --> 00:58:45.250
WESLEY CHUN: He was just asking,
so Go was announced as

00:58:45.250 --> 00:58:48.475
a third run time, what were the
decision making process

00:58:48.475 --> 00:58:49.725
into deciding that?

00:58:52.320 --> 00:58:55.390
GUIDO VAN ROSSUM: Oh, what led
to the decision to offer Go as

00:58:55.390 --> 00:58:58.590
the third language
in App Engine?

00:58:58.590 --> 00:59:01.830
That what actually purely the
Go team being really gung-ho

00:59:01.830 --> 00:59:03.080
and doing it.

00:59:05.090 --> 00:59:10.510
App Engine has lots of sort
of different parts of

00:59:10.510 --> 00:59:13.560
infrastructure that the core App
Engine team takes care of.

00:59:13.560 --> 00:59:17.300
And it sort of turns out that
language run times are

00:59:17.300 --> 00:59:20.960
typically pushed by people who
are somewhat peripheral to the

00:59:20.960 --> 00:59:22.790
App Engine team.

00:59:22.790 --> 00:59:26.680
So the Java run time also was
initially developed by people

00:59:26.680 --> 00:59:29.470
who weren't part of the
core App Engine team.

00:59:29.470 --> 00:59:31.180
Now they are.

00:59:31.180 --> 00:59:33.680
I wouldn't be surprised if
some Go people would also

00:59:33.680 --> 00:59:36.250
become full-fledged members
of the App Engine team.

00:59:36.250 --> 00:59:39.920
But currently that's
sort of wow, people

00:59:39.920 --> 00:59:41.570
contribute to run time?

00:59:41.570 --> 00:59:43.220
Great.

00:59:43.220 --> 00:59:45.280
A new language, more choice.

00:59:45.280 --> 00:59:47.280
That's the mantra again.

00:59:47.280 --> 00:59:48.620
WESLEY CHUN: All right, that's
all we have time for.

00:59:48.620 --> 00:59:51.150
So if you guys have any other
questions, just come see us

00:59:51.150 --> 00:59:52.730
after the talk.

