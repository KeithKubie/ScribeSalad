WEBVTT
Kind: captions
Language: en

00:00:00.370 --> 00:00:04.130
So far in this course, we've answered
the question, what is computable?

00:00:04.130 --> 00:00:08.020
We modeled computability by Turing
machines, and showed that some problems,

00:00:08.020 --> 00:00:10.530
like the halting problem,
cannot be computed at all.

00:00:11.770 --> 00:00:15.300
In the next few lectures we ask,
what can we compute quickly?

00:00:15.300 --> 00:00:17.800
Some problems,
like adding a bunch of numbers or

00:00:17.800 --> 00:00:21.550
solving linear equations, we know
how to solve quickly on computers.

00:00:21.550 --> 00:00:24.380
But how about playing
the perfect game of chess?

00:00:24.380 --> 00:00:28.200
We could write a computer program that
can search the whole game tree, but that

00:00:28.200 --> 00:00:32.710
computation won't finish in our lifetime
or even a lifetime of the universe.

00:00:32.710 --> 00:00:35.830
Unlike computability, we don't have
clean theorems about efficient

00:00:35.830 --> 00:00:40.020
computation, but we can explore what
we probably can't solve quickly

00:00:40.020 --> 00:00:43.580
through what is known as
the P versus NP problem.

00:00:43.580 --> 00:00:46.621
P represents the problems
we can solve quickly like

00:00:46.621 --> 00:00:49.740
your GPS finding a short
route to your destination.

00:00:49.740 --> 00:00:52.327
NP represents problems
where we can check that

00:00:52.327 --> 00:00:56.200
a solution is correct such
as solving a Sudoku puzzle.

00:00:56.200 --> 00:00:59.360
In this lesson we will
learn about P NP and

00:00:59.360 --> 00:01:03.630
a role in helping us understand what we
may or may not be able to solve quickly.

