WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:39.400
[MUSIC PLAYING]

00:01:49.730 --> 00:01:50.200
IKAI LAN: Hi.

00:01:50.200 --> 00:01:53.210
Welcome to another edition of
YouTube Developers Live.

00:01:53.210 --> 00:01:54.710
My name is Ikai Lan.

00:01:54.710 --> 00:01:57.280
I'm based in New York City,
and I work on YouTube

00:01:57.280 --> 00:01:58.520
Developer Relations team.

00:01:58.520 --> 00:02:01.390
Jeff Posnick is also here, but
he's sitting behind the camera

00:02:01.390 --> 00:02:02.310
operating things.

00:02:02.310 --> 00:02:03.850
So say hi to Jeff.

00:02:03.850 --> 00:02:05.220
He'll be listening.

00:02:05.220 --> 00:02:06.960
Today we're going to be
talking about InVideo

00:02:06.960 --> 00:02:10.080
Programming and the InVideo
Programming API.

00:02:10.080 --> 00:02:12.570
So what's going to happen is
that we're going to talk about

00:02:12.570 --> 00:02:14.180
what InVideo Programming is.

00:02:14.180 --> 00:02:17.950
And what it is, it's a way to
promote your channel and

00:02:17.950 --> 00:02:20.610
videos you want to highlight to
get people to subscribe and

00:02:20.610 --> 00:02:22.760
watch more in your channel.

00:02:22.760 --> 00:02:24.750
And what we're going to do is
we're going to show you how to

00:02:24.750 --> 00:02:28.620
use API in Python and Java as
well as how to use the API

00:02:28.620 --> 00:02:29.760
with the Analytics API.

00:02:29.760 --> 00:02:32.440
So it's not going to be as long
as our regular shows, but

00:02:32.440 --> 00:02:34.290
I promise you, guys, it's going
to be a great show.

00:02:34.290 --> 00:02:36.250
So why don't we go ahead
and get started.

00:02:36.250 --> 00:02:38.240
I'm going to show you guys
what's on my screen.

00:02:38.240 --> 00:02:39.310
I will apologize.

00:02:39.310 --> 00:02:42.810
I'm not going to be completely
zoomed in because it turns out

00:02:42.810 --> 00:02:44.680
it's kind of a pain to zoom
back and forth on certain

00:02:44.680 --> 00:02:47.090
applications, and this is
actually my work computer.

00:02:47.090 --> 00:02:49.190
So let's go ahead and
show you guys what

00:02:49.190 --> 00:02:50.495
InVideo Programming is.

00:02:50.495 --> 00:02:52.800
I'm going to zoom in
on my browser here.

00:02:52.800 --> 00:02:53.620
Here's a channel.

00:02:53.620 --> 00:02:55.250
And you'll see Dino Dinosaur.

00:02:55.250 --> 00:02:57.760
That's a test name that I used
for my test account.

00:02:57.760 --> 00:02:59.430
And I've got a bunch
of uploads here.

00:02:59.430 --> 00:03:00.870
And they're kind of
silly uploads.

00:03:00.870 --> 00:03:03.280
They're just me kind of goofing
around, or it's me

00:03:03.280 --> 00:03:05.050
playing video games.

00:03:05.050 --> 00:03:07.480
But let's pretend that I do have
a real YouTube channel,

00:03:07.480 --> 00:03:10.260
and I want people to watch
my channel and

00:03:10.260 --> 00:03:11.170
keep watching my channel.

00:03:11.170 --> 00:03:13.160
I want people to subscribe
to my channel.

00:03:13.160 --> 00:03:15.770
So I've got a lot of different
options for promoting them,

00:03:15.770 --> 00:03:18.020
and the option we'll be talking
about today is InVideo

00:03:18.020 --> 00:03:19.120
Programming.

00:03:19.120 --> 00:03:22.270
So the problem that InVideo
Programming solves is when

00:03:22.270 --> 00:03:24.330
someone comes across
your video, you

00:03:24.330 --> 00:03:25.800
want them to subscribe.

00:03:25.800 --> 00:03:27.800
And there are lots of different
ways to do this.

00:03:27.800 --> 00:03:30.110
So one way to do it is
InVideo Programming.

00:03:30.110 --> 00:03:33.725
Other ways include things such
as advertising your channel,

00:03:33.725 --> 00:03:36.380
showing a playlist, promoting
off youtube.com.

00:03:36.380 --> 00:03:39.320
And that's all good.

00:03:39.320 --> 00:03:41.760
But really, you want people not
just to watch one video.

00:03:41.760 --> 00:03:44.710
You want them to become repeat
viewers of your channels and

00:03:44.710 --> 00:03:46.050
your content.

00:03:46.050 --> 00:03:50.060
So you'll see that right here,
I just went to the InVideo

00:03:50.060 --> 00:03:52.750
Programming tab in my admin.

00:03:52.750 --> 00:03:56.690
And I got here by going to the
top-right corner of YouTube,

00:03:56.690 --> 00:04:00.880
clicking on Video Manager, going
to Channel Settings, and

00:04:00.880 --> 00:04:02.210
InVideo Programming.

00:04:02.210 --> 00:04:05.260
And InVideo Programming is
a channel-wide setting.

00:04:05.260 --> 00:04:07.260
And that's important to
remember, because later on

00:04:07.260 --> 00:04:09.370
when we're working with the API,
we'll be looking at the

00:04:09.370 --> 00:04:10.610
Channels API.

00:04:10.610 --> 00:04:12.350
So let's take a look at
InVideo Programming.

00:04:12.350 --> 00:04:15.190
There are two options
right now.

00:04:15.190 --> 00:04:17.060
One is to feature
your channel--

00:04:17.060 --> 00:04:19.820
or a channel, really.

00:04:19.820 --> 00:04:22.750
And this lets you
set a channel.

00:04:22.750 --> 00:04:26.240
This lets you set your logo or
your branding in a certain

00:04:26.240 --> 00:04:28.940
part of the video or for all
the videos on a channel.

00:04:28.940 --> 00:04:32.640
So here I've just got a silly
icon of a Go Gopher and then a

00:04:32.640 --> 00:04:33.850
YouTube Play icon.

00:04:33.850 --> 00:04:36.110
And I'm picking that I want to
show this in the top right for

00:04:36.110 --> 00:04:36.850
the entire video.

00:04:36.850 --> 00:04:39.910
So anytime someone comes to
watch my video, they will see

00:04:39.910 --> 00:04:41.580
this logo, and they will be
able to click through and

00:04:41.580 --> 00:04:43.250
learn more about my channel.

00:04:43.250 --> 00:04:46.350
So this is pretty cool for
branding your videos without

00:04:46.350 --> 00:04:49.270
having to explicitly brand them
inside the video, and it

00:04:49.270 --> 00:04:51.770
also makes them interactive
immediately.

00:04:51.770 --> 00:04:54.380
So the next feature is
the Featured Video.

00:04:54.380 --> 00:04:58.550
And the featured video allows
you to show a preview of a

00:04:58.550 --> 00:05:01.130
different video for a
certain duration.

00:05:01.130 --> 00:05:04.190
In this case, I'm showing some
silly video in the bottom

00:05:04.190 --> 00:05:05.320
left-hand corner.

00:05:05.320 --> 00:05:08.840
I'm showing at the end of the
video, and I'm showing it for

00:05:08.840 --> 00:05:10.090
10 seconds.

00:05:10.090 --> 00:05:14.040
So what you want to put here
is a video that highlights

00:05:14.040 --> 00:05:16.630
kind of the best that you have
to offer or something recent,

00:05:16.630 --> 00:05:20.210
something that'll make the video
viewer continue watching

00:05:20.210 --> 00:05:22.740
your content and become engaged
with your channel and

00:05:22.740 --> 00:05:24.940
subscribe to your channel.

00:05:24.940 --> 00:05:28.350
So let's take a look at what
this looks like in a video.

00:05:28.350 --> 00:05:28.970
All right.

00:05:28.970 --> 00:05:30.470
Now, here's a video
I've uploaded.

00:05:30.470 --> 00:05:32.430
It's really silly.

00:05:32.430 --> 00:05:34.910
It was a day when I wore
a suit to work.

00:05:34.910 --> 00:05:38.390
And as you know, we always wear
suits to work at Google.

00:05:38.390 --> 00:05:41.890
And yes, this was a day
when I shot a show.

00:05:41.890 --> 00:05:43.920
So you'll see a show when
I'm wearing a suit, and

00:05:43.920 --> 00:05:44.620
this was that day.

00:05:44.620 --> 00:05:46.450
I was creating a bunch
of test videos.

00:05:46.450 --> 00:05:49.940
So as I'm playing this video,
you'll see two things.

00:05:49.940 --> 00:05:51.080
First off, we'll see
three things.

00:05:51.080 --> 00:05:52.480
You'll see me goofing off.

00:05:52.480 --> 00:05:55.930
And if you're watching this
show, you know that I'm not--

00:05:55.930 --> 00:05:58.640
that's something I rarely
do is goof off.

00:05:58.640 --> 00:05:59.450
And there are two things.

00:05:59.450 --> 00:06:00.760
One is that I have a logo.

00:06:00.760 --> 00:06:03.060
And this is my channel
branding.

00:06:03.060 --> 00:06:06.170
So when I click here, it takes
me to my channel so users can

00:06:06.170 --> 00:06:07.930
learn more about my channel.

00:06:07.930 --> 00:06:09.330
My channel's not very
interesting.

00:06:09.330 --> 00:06:10.550
It's a test channel.

00:06:10.550 --> 00:06:13.630
But your channel's going to look
a lot better than this.

00:06:13.630 --> 00:06:16.960
Now, the second option here is
that I'm highlighting a video.

00:06:16.960 --> 00:06:21.610
And because this video is only
4 seconds long, a 10-second

00:06:21.610 --> 00:06:24.490
end-of-video duration means that
this InVideo Programming

00:06:24.490 --> 00:06:26.340
icon shows up for the
entire video.

00:06:26.340 --> 00:06:27.920
Now, you're not always going
to want to do this because

00:06:27.920 --> 00:06:29.170
it's going to be distracting,
but this is a

00:06:29.170 --> 00:06:30.080
really short video.

00:06:30.080 --> 00:06:31.880
So it doesn't hurt
us too much.

00:06:31.880 --> 00:06:34.170
So right here is a demo video.

00:06:34.170 --> 00:06:38.300
And this is a video of a demo
that we like to do where of my

00:06:38.300 --> 00:06:41.780
the teammates, Jarek, he created
a game where you can

00:06:41.780 --> 00:06:44.850
throw ping pong balls at a
gasoline can, record and

00:06:44.850 --> 00:06:45.890
upload to YouTube.

00:06:45.890 --> 00:06:48.780
Not super interesting, but we
have found that if you're a

00:06:48.780 --> 00:06:52.470
game developer, integrating with
YouTube often has really

00:06:52.470 --> 00:06:55.440
asymmetric benefits for you
relative to the amount of work

00:06:55.440 --> 00:06:56.540
you put into it.

00:06:56.540 --> 00:06:58.140
So I'm going to click
through that.

00:06:58.140 --> 00:07:00.890
And theoretically, you want
to show off the--

00:07:00.890 --> 00:07:03.420
what are these related videos?

00:07:03.420 --> 00:07:06.390
You want to show off the content
that will make people

00:07:06.390 --> 00:07:08.050
want to keep watching
your channel.

00:07:08.050 --> 00:07:10.660
So what we might do, for
instance, on the Google

00:07:10.660 --> 00:07:13.320
Developers channel, would be to
highlight the I/O keynote,

00:07:13.320 --> 00:07:16.540
or highlight InVideo Programming
because Jeff has

00:07:16.540 --> 00:07:18.460
accessed that account.

00:07:18.460 --> 00:07:20.800
So there are a bunch of things
we can do, but what you want

00:07:20.800 --> 00:07:23.810
to show here is the content
that will likely make you

00:07:23.810 --> 00:07:25.400
click through and
keep watching.

00:07:25.400 --> 00:07:27.630
And there are ways to do this
right now with the current

00:07:27.630 --> 00:07:30.520
annotation setting, but InVideo
program is the way

00:07:30.520 --> 00:07:31.830
we're going to be doing
this going forward.

00:07:31.830 --> 00:07:34.160
And we're really excited to be
thinking about new features

00:07:34.160 --> 00:07:38.480
and ways that we can be
enhancing this functionality.

00:07:38.480 --> 00:07:42.090
OK, so here's my video of us.

00:07:42.090 --> 00:07:42.900
This is a game.

00:07:42.900 --> 00:07:44.670
This is a real game.

00:07:44.670 --> 00:07:48.330
Throwing tennis balls
at gasoline cans.

00:07:48.330 --> 00:07:49.140
And that's the video.

00:07:49.140 --> 00:07:51.820
And that's going to make me, a
regular YouTube watcher, want

00:07:51.820 --> 00:07:54.570
to subscribe to this video, or
like it, or do whatever.

00:07:54.570 --> 00:07:57.360
OK, so that's great.

00:07:57.360 --> 00:07:58.880
But we're here to talk
about the API.

00:07:58.880 --> 00:08:00.810
So now that you know what
the feature is, we

00:08:00.810 --> 00:08:03.980
can get down to business.

00:08:03.980 --> 00:08:05.450
Now I mentioned that InVideo
program is a

00:08:05.450 --> 00:08:06.680
channel-wide setting.

00:08:06.680 --> 00:08:10.430
And that's why when you're at
the YouTube API reference,

00:08:10.430 --> 00:08:15.700
you'll see developers.googl
e.com/youtube/v3.

00:08:15.700 --> 00:08:19.310
You want to go to the Channels
documentation.

00:08:19.310 --> 00:08:21.340
So the Channels documentation,
right now

00:08:21.340 --> 00:08:22.130
there are two methods--

00:08:22.130 --> 00:08:23.610
List and Update.

00:08:23.610 --> 00:08:25.510
List is a read operation,
whereas

00:08:25.510 --> 00:08:28.280
update is a write operation.

00:08:28.280 --> 00:08:31.970
And we're operating on
the Channel resource.

00:08:31.970 --> 00:08:34.900
So if you don't really follow
what we're talking about here,

00:08:34.900 --> 00:08:37.080
one show that I highly recommend
is a show we did a

00:08:37.080 --> 00:08:40.679
few weeks ago about turning the
API reference into code.

00:08:40.679 --> 00:08:45.330
And you can find this show at
youtube.com/youtubedev and

00:08:45.330 --> 00:08:48.080
just look at our playlist of
recent GDL shows where we

00:08:48.080 --> 00:08:50.780
explain how to make sense of the
API reference and how to

00:08:50.780 --> 00:08:54.760
quickly turn this into usable
code that you can put into

00:08:54.760 --> 00:08:56.822
your applications.

00:08:56.822 --> 00:08:58.810
OK, so let's scroll down.

00:08:58.810 --> 00:09:01.110
And we're working with a channel
resource, but we're

00:09:01.110 --> 00:09:03.120
working with one part of
a channel resource.

00:09:03.120 --> 00:09:05.970
And scrolling all the way down,
we're working with the

00:09:05.970 --> 00:09:08.870
invideoPromotion part of
the channel resource.

00:09:08.870 --> 00:09:11.390
And this shows some of the
different fields that a

00:09:11.390 --> 00:09:14.700
channel will return if it has
invideoPromotion set up.

00:09:14.700 --> 00:09:18.540
And more documentation on
invideoPromotion will be on

00:09:18.540 --> 00:09:20.950
the same page, on the Channels
documentation page.

00:09:20.950 --> 00:09:23.610
When you scroll all the way
down, you'll see hey, there's

00:09:23.610 --> 00:09:27.200
InVideoPromotion and there
is the promotion,

00:09:27.200 --> 00:09:29.440
timing, offset, type.

00:09:29.440 --> 00:09:31.420
And I'll talk about
these right now.

00:09:31.420 --> 00:09:34.010
So there aren't a lot of
settings for this today.

00:09:34.010 --> 00:09:37.530
But that's good because it
means the API is simple.

00:09:37.530 --> 00:09:39.830
Inside of your promotion,
you set a few things.

00:09:39.830 --> 00:09:40.820
You set a timing.

00:09:40.820 --> 00:09:44.400
And a timing consists of a type,
which is when you want

00:09:44.400 --> 00:09:45.740
this promotion to show up.

00:09:45.740 --> 00:09:48.070
And this is only for the
featured video, by the way.

00:09:48.070 --> 00:09:49.510
I should mention
that right now.

00:09:49.510 --> 00:09:52.150
Do you want it to show up at
the end of video, or do you

00:09:52.150 --> 00:09:54.900
want it to show up at
some other offset?

00:09:54.900 --> 00:09:56.430
And how many milliseconds?

00:09:56.430 --> 00:09:57.180
And this is important.

00:09:57.180 --> 00:09:58.330
This is not in seconds.

00:09:58.330 --> 00:09:59.090
This is milliseconds.

00:09:59.090 --> 00:10:02.400
I opened a bug with the
engineering team that works on

00:10:02.400 --> 00:10:05.030
this because I put in 15, and
I was wondering why my

00:10:05.030 --> 00:10:06.240
promotion never appeared.

00:10:06.240 --> 00:10:08.870
And it's because I configured
it for 15

00:10:08.870 --> 00:10:10.460
milliseconds, not 15 seconds.

00:10:10.460 --> 00:10:14.560
So 15 seconds would be 15000.

00:10:14.560 --> 00:10:16.360
The position, and the position,

00:10:16.360 --> 00:10:17.850
there are four corners--

00:10:17.850 --> 00:10:21.080
top left, top right, bottom
left, and bottom right.

00:10:21.080 --> 00:10:23.800
And you'll see that this is a
string value that allows you

00:10:23.800 --> 00:10:25.900
to pick these.

00:10:25.900 --> 00:10:30.890
Now, the next thing here is
the type and the video ID.

00:10:30.890 --> 00:10:32.860
And the type right now
is only video.

00:10:32.860 --> 00:10:36.000
And the video is just
a video ID of the

00:10:36.000 --> 00:10:37.230
video you want to promote.

00:10:37.230 --> 00:10:39.970
So you'll see that this
items is an array.

00:10:39.970 --> 00:10:41.950
Really, this only
takes one value.

00:10:41.950 --> 00:10:44.650
You can try putting in multiple
values, but the API

00:10:44.650 --> 00:10:45.770
will throw an error.

00:10:45.770 --> 00:10:48.260
So even though it's an array,
only include one

00:10:48.260 --> 00:10:50.510
object of this type.

00:10:50.510 --> 00:10:55.020
So let's go ahead to the
Try It Now button.

00:10:55.020 --> 00:10:59.280
And if you watch, again, our
show about how to turn the API

00:10:59.280 --> 00:11:01.110
reference into code, I
go into more detail

00:11:01.110 --> 00:11:02.950
about how to use this.

00:11:02.950 --> 00:11:05.600
But what you want to do is when
you're creating a request

00:11:05.600 --> 00:11:08.390
payload, the property that
you want to add is

00:11:08.390 --> 00:11:09.690
invideoProgramming.

00:11:09.690 --> 00:11:11.660
And you'll see that--
oops, excuse me.

00:11:11.660 --> 00:11:14.810
I'm using zoom on my computer.

00:11:14.810 --> 00:11:17.800
It lets you set position and
the position properties.

00:11:17.800 --> 00:11:20.900
And this is just being
crazy right now.

00:11:20.900 --> 00:11:23.420
The corner position-- and this
is a string, of course-- top

00:11:23.420 --> 00:11:25.440
left, top right, bottom
left, bottom right.

00:11:25.440 --> 00:11:27.460
That has to match the
[? store error. ?]

00:11:27.460 --> 00:11:28.245
You could set the items.

00:11:28.245 --> 00:11:31.210
And inside the items, this
is when you will add a

00:11:31.210 --> 00:11:32.310
type and a video ID.

00:11:32.310 --> 00:11:34.050
So it's a very simple API.

00:11:34.050 --> 00:11:36.470
And if you need to take a look
at what this payload might

00:11:36.470 --> 00:11:40.190
look like, again, scroll up
and look at the Channel

00:11:40.190 --> 00:11:42.890
resource to see what the
payload will look like.

00:11:42.890 --> 00:11:43.720
So the resource

00:11:43.720 --> 00:11:46.450
representation, we scroll down.

00:11:46.450 --> 00:11:49.580
We see that there's a timing
and a position and items.

00:11:49.580 --> 00:11:50.510
All right.

00:11:50.510 --> 00:11:53.010
Now let's start translating
this into code.

00:11:53.010 --> 00:11:54.630
What I'm going to do is I'm
going to show you guys the

00:11:54.630 --> 00:11:57.010
Java code of how to
run a Java sample.

00:11:57.010 --> 00:11:58.040
We've created this.

00:11:58.040 --> 00:12:00.720
It's not currently on the site,
but we will push this to

00:12:00.720 --> 00:12:02.970
YouTube API sample soon.

00:12:02.970 --> 00:12:05.030
And that'll be available at--
you could search for it at

00:12:05.030 --> 00:12:07.880
YouTube API samples.

00:12:07.880 --> 00:12:10.150
And that will be the first link
in your favorite search

00:12:10.150 --> 00:12:11.350
engine right here.

00:12:11.350 --> 00:12:14.240
So we haven't pushed it yet,
but we will push it.

00:12:14.240 --> 00:12:16.450
And once we do, this will make a
lot of sense when you can go

00:12:16.450 --> 00:12:19.280
through the code.

00:12:19.280 --> 00:12:23.440
OK, so after we go through the
Java sample, I'm going to go

00:12:23.440 --> 00:12:25.670
through the Python sample, and
we're going to go through a

00:12:25.670 --> 00:12:28.190
Python sample that shows you
how to do some stuff with

00:12:28.190 --> 00:12:29.950
Google Analytics--
or not Google,

00:12:29.950 --> 00:12:31.620
excuse me, YouTube Analytics.

00:12:31.620 --> 00:12:32.240
All right.

00:12:32.240 --> 00:12:33.490
So this is my Java ID.

00:12:33.490 --> 00:12:34.285
I use IntelliJ.

00:12:34.285 --> 00:12:37.040
I use a dark theme because I
think the light theme kind of

00:12:37.040 --> 00:12:38.370
hurts my eyes.

00:12:38.370 --> 00:12:41.520
So the first thing I'm going to
mention is that all of our

00:12:41.520 --> 00:12:42.470
samples use Maven.

00:12:42.470 --> 00:12:45.750
And there's one thing you have
to remember if you're using

00:12:45.750 --> 00:12:47.690
our samples or if you're
using Maven.

00:12:47.690 --> 00:12:51.580
It's that you have to upload
your YouTube client versions.

00:12:51.580 --> 00:12:55.960
So you'll see that I'm
using 1.15 RC.

00:12:55.960 --> 00:12:57.640
RC stands for Release
Candidate.

00:12:57.640 --> 00:13:01.000
And when I scroll down, if
you're not using variables in

00:13:01.000 --> 00:13:04.530
Maven, you're just going
to pass it in.

00:13:04.530 --> 00:13:10.200
That will go under the
com.google.apis right here--

00:13:10.200 --> 00:13:11.080
dependency.

00:13:11.080 --> 00:13:14.160
And you'll want to put that the
client version you want

00:13:14.160 --> 00:13:18.240
for the YouTube artifact
is 1.15, the release

00:13:18.240 --> 00:13:18.930
candidate for that.

00:13:18.930 --> 00:13:24.530
And the reason for that is that
our APIs that you find in

00:13:24.530 --> 00:13:27.950
the API reference, there's
what's called a Discovery doc,

00:13:27.950 --> 00:13:30.190
and the clients are all
auto-generated from the

00:13:30.190 --> 00:13:31.160
Discovery doc.

00:13:31.160 --> 00:13:33.520
So the statically
typed clients.

00:13:33.520 --> 00:13:36.380
Like Java and C#, we have to go
ahead and regenerate a new

00:13:36.380 --> 00:13:39.450
client version whenever we add
a new field in a new API.

00:13:39.450 --> 00:13:41.730
And this is a little bit
cumbersome, but it's kind of

00:13:41.730 --> 00:13:44.410
nice, because then you get
all the benefits of using

00:13:44.410 --> 00:13:49.550
statically typed languages such
as code completion and

00:13:49.550 --> 00:13:50.510
just type checking.

00:13:50.510 --> 00:13:53.170
And I found that this is
actually really helpful.

00:13:53.170 --> 00:13:55.670
Maybe I'll do a show sometime
comparing static and dynamic

00:13:55.670 --> 00:13:59.510
languages, throw some fuel
on that flame more.

00:13:59.510 --> 00:14:02.160
So again, you have to upload
this to the latest version for

00:14:02.160 --> 00:14:03.160
this to work.

00:14:03.160 --> 00:14:04.770
And what you'll see is
you'll see a couple

00:14:04.770 --> 00:14:05.840
of deprecation warnings.

00:14:05.840 --> 00:14:10.380
So I'll be updating the samples
over the next few days

00:14:10.380 --> 00:14:13.090
so that you won't see those
deprecation warnings anymore.

00:14:13.090 --> 00:14:14.840
We've changed just a few
things about how

00:14:14.840 --> 00:14:16.700
some classes work.

00:14:16.700 --> 00:14:18.680
We won't talk about
that today.

00:14:18.680 --> 00:14:24.090
OK, so after you do that, and
you do an MVN update, so I'm

00:14:24.090 --> 00:14:24.600
right here.

00:14:24.600 --> 00:14:26.630
This is the command line.

00:14:26.630 --> 00:14:29.870
And MVN update, this is just
saying Maven, update my

00:14:29.870 --> 00:14:31.120
dependencies.

00:14:33.240 --> 00:14:34.770
I guess I've done that wrong.

00:14:34.770 --> 00:14:38.340
Anyway, MVN compile will
update everything.

00:14:38.340 --> 00:14:40.390
So you'll see that I've
compiled everything.

00:14:40.390 --> 00:14:43.480
I sometimes forget what the
commands are because I switch

00:14:43.480 --> 00:14:45.550
tools so much.

00:14:45.550 --> 00:14:48.150
Little plug for myself, I've
been working with Gradle a lot

00:14:48.150 --> 00:14:49.910
recently because I've been
working on Android.

00:14:49.910 --> 00:14:51.770
And that's a really
cool build tool.

00:14:51.770 --> 00:14:54.890
You can also use Maven artifacts
and download from

00:14:54.890 --> 00:14:55.880
remote repositories.

00:14:55.880 --> 00:14:57.970
And the whole thing is just
idiomatic Groovy.

00:14:57.970 --> 00:15:01.360
So the Groovy Programming
language lets you do some

00:15:01.360 --> 00:15:03.600
pretty cool things, and I've
been a long-time advocate of

00:15:03.600 --> 00:15:05.980
build systems that
are actually DSLs

00:15:05.980 --> 00:15:07.330
of Programming languages.

00:15:07.330 --> 00:15:09.940
This gives you a lot of
power and flexibility.

00:15:09.940 --> 00:15:12.710
But again, personal opinion.

00:15:12.710 --> 00:15:14.390
End soap box.

00:15:14.390 --> 00:15:17.740
So now, let's go
back to our ID.

00:15:17.740 --> 00:15:19.750
We're going through
the Java code.

00:15:19.750 --> 00:15:21.800
And this is the Java
sample code for

00:15:21.800 --> 00:15:23.620
adding a featured video.

00:15:23.620 --> 00:15:25.410
And I've got a couple
dependencies I need to remove.

00:15:25.410 --> 00:15:28.390
I was messing around with
this yesterday.

00:15:28.390 --> 00:15:29.250
OK.

00:15:29.250 --> 00:15:31.810
So you'll see that the first
thing we do is-- this looks

00:15:31.810 --> 00:15:34.830
like a narrow sample, where
we've got to read a client's

00:15:34.830 --> 00:15:37.550
secrets, and this file contains
our client ID and

00:15:37.550 --> 00:15:38.720
client secret.

00:15:38.720 --> 00:15:42.670
We authorize, and we put the
user through a three-legged

00:15:42.670 --> 00:15:45.740
OAuth flow, which is to say
we open a browser window.

00:15:45.740 --> 00:15:50.370
A user says, OK, I want to
authorize this application.

00:15:50.370 --> 00:15:52.220
And then we go ahead and
we make the API call.

00:15:52.220 --> 00:15:53.880
And the API call looks
like this.

00:15:53.880 --> 00:15:57.110
The sample is first going to
pull up a list of all your

00:15:57.110 --> 00:16:00.260
channels and get the
very first channel.

00:16:00.260 --> 00:16:02.950
So you'll see that I'm just
getting the first channel.

00:16:02.950 --> 00:16:05.870
This is returned in
the items array.

00:16:05.870 --> 00:16:08.830
Now, once we have the channel
ID, we're going to get the

00:16:08.830 --> 00:16:10.970
playlist ID for uploads.

00:16:10.970 --> 00:16:13.960
This sample is going to take
my most recent upload and

00:16:13.960 --> 00:16:14.990
feature that video.

00:16:14.990 --> 00:16:17.870
So this is kind of cool if you
always want to be driving

00:16:17.870 --> 00:16:22.710
people to the newest video
that you've uploaded.

00:16:22.710 --> 00:16:25.340
So you can do some cool stuff
where you can make this

00:16:25.340 --> 00:16:27.760
totally automated using
push notifications.

00:16:27.760 --> 00:16:29.420
So if you want to learn a
little bit about push

00:16:29.420 --> 00:16:34.850
notifications, check out Jeff
Posnick and Yaniv's push

00:16:34.850 --> 00:16:38.350
notification talk at Google I/O.
You can also find that at

00:16:38.350 --> 00:16:40.400
youtube.com/googledevelopers.

00:16:40.400 --> 00:16:44.750
So you can make it so on some
kind of notification, say, a

00:16:44.750 --> 00:16:46.330
new video is added to
a playlist, you

00:16:46.330 --> 00:16:48.780
feature that video.

00:16:48.780 --> 00:16:52.050
So you'll see that this is kind
of cool, and this is what

00:16:52.050 --> 00:16:54.760
Java gets us, which is that
we have a channel.

00:16:54.760 --> 00:16:57.750
We're going to say
get content.

00:16:57.750 --> 00:17:00.130
Oh, jeez.

00:17:00.130 --> 00:17:03.280
Excuse me, the zoom is
kind of crazy here.

00:17:03.280 --> 00:17:05.950
I'm going to say get
content details.

00:17:05.950 --> 00:17:07.400
We go into-- yikes.

00:17:07.400 --> 00:17:08.650
We're just not going
to do that anymore.

00:17:11.089 --> 00:17:13.372
Get Related Playlists,
and we're

00:17:13.372 --> 00:17:14.420
going to say Get Uploads.

00:17:14.420 --> 00:17:17.150
And this gives us a string
representing the playlist ID

00:17:17.150 --> 00:17:18.150
for uploads.

00:17:18.150 --> 00:17:22.210
This is one of the ways you
fetch uploads nowadays.

00:17:22.210 --> 00:17:27.140
So now we have the string, which
gives us a playlist ID.

00:17:27.140 --> 00:17:33.090
So now, what we're going to do
is we are going to fetch the

00:17:33.090 --> 00:17:34.230
videos from a playlist.

00:17:34.230 --> 00:17:35.890
And we do this by just making a

00:17:35.890 --> 00:17:41.170
youtube.playlistitems API call.

00:17:41.170 --> 00:17:46.030
We go through the videos, and if
the result is not empty, we

00:17:46.030 --> 00:17:47.620
get a video ID.

00:17:47.620 --> 00:17:50.700
And this is just very standard,
get the snippet, get

00:17:50.700 --> 00:17:52.250
the resource ID, get
the video ID.

00:17:52.250 --> 00:17:53.570
And this is a string
that we're going

00:17:53.570 --> 00:17:56.140
to use in our sample.

00:17:56.140 --> 00:17:59.130
So now we're going to get to
the part that describes

00:17:59.130 --> 00:18:01.610
InVideo Programming.

00:18:01.610 --> 00:18:05.580
So what we're going to do is
this is as with any update or

00:18:05.580 --> 00:18:08.120
write operation using a Java
client, it's a little bit more

00:18:08.120 --> 00:18:11.790
verbose, and that's because we
can't just pass an arbitrary

00:18:11.790 --> 00:18:15.200
dictionary to the API like
we can in Python or Ruby.

00:18:15.200 --> 00:18:17.820
What we need to do is we need
to create typed objects that

00:18:17.820 --> 00:18:20.070
represent the data we
want to update.

00:18:20.070 --> 00:18:22.050
So this includes a position,
which we've set

00:18:22.050 --> 00:18:23.210
at the bottom left.

00:18:23.210 --> 00:18:24.220
We set the type to corner.

00:18:24.220 --> 00:18:27.040
Right now there's only corner,
but this gives us some ability

00:18:27.040 --> 00:18:28.635
to expand on this API
in the future.

00:18:28.635 --> 00:18:32.140
It makes it scalable,
so to speak.

00:18:32.140 --> 00:18:33.870
The timing, we set the timing.

00:18:33.870 --> 00:18:38.160
And this takes a big integer,
we're going to have to cast

00:18:38.160 --> 00:18:40.300
our long into a big integer.

00:18:40.300 --> 00:18:41.980
And we're going to set the
type to offsetFromEnd.

00:18:41.980 --> 00:18:43.260
There are only two
options here.

00:18:43.260 --> 00:18:46.360
You can find them in
the API reference.

00:18:46.360 --> 00:18:49.030
We're going to set the
promoted item video.

00:18:49.030 --> 00:18:50.440
Right now that's the
only option.

00:18:50.440 --> 00:18:52.780
And we're going to set
the featured video.

00:18:52.780 --> 00:18:55.070
We're going to set the video ID
to the video that we pulled

00:18:55.070 --> 00:18:58.730
back, which was the latest video
that we've uploaded.

00:18:58.730 --> 00:19:01.030
And then finally, we're going
to create the actual

00:19:01.030 --> 00:19:02.690
InVideoPromotion object.

00:19:02.690 --> 00:19:03.430
Whew!

00:19:03.430 --> 00:19:05.240
That was a lot of work
to get here.

00:19:05.240 --> 00:19:07.630
So once you create the promotion
object, we set the

00:19:07.630 --> 00:19:09.530
position, which is the
position we created--

00:19:09.530 --> 00:19:11.370
bottom left, top left,
whichever.

00:19:11.370 --> 00:19:12.740
We set the timing.

00:19:12.740 --> 00:19:16.370
We set the items, which even
though there's only one item

00:19:16.370 --> 00:19:18.940
today, you have to
pass a list.

00:19:18.940 --> 00:19:22.420
So I'm using a helper class
called Lists, which creates a

00:19:22.420 --> 00:19:24.960
new array list, which
is one item.

00:19:24.960 --> 00:19:30.600
And this takes any number of
items and creates a static--

00:19:30.600 --> 00:19:33.640
not static, but it creates
an array list.

00:19:33.640 --> 00:19:36.600
So this makes it easier than
saying list equals new array

00:19:36.600 --> 00:19:40.330
list, arraylist.add, and then
put the array list.

00:19:40.330 --> 00:19:42.630
It just saves us a few
lines of code.

00:19:42.630 --> 00:19:43.080
All right.

00:19:43.080 --> 00:19:45.780
So now that we've created the
InVideoPromotion object, we

00:19:45.780 --> 00:19:47.920
create a new channel object.

00:19:47.920 --> 00:19:50.790
And we set the ID to channel
ID we want to update.

00:19:50.790 --> 00:19:52.870
We could have also used the
channel ID that we fetched

00:19:52.870 --> 00:19:54.560
back from earlier
in the sample.

00:19:54.560 --> 00:19:58.040
I think that's probably a better
idea, and I probably am

00:19:58.040 --> 00:20:02.560
going to fix the sample so it
does that because this is just

00:20:02.560 --> 00:20:04.850
getting a little bit more
verbose than it has to be.

00:20:04.850 --> 00:20:06.450
OK.

00:20:06.450 --> 00:20:08.340
We're going to set the
InVideoPromotion to the

00:20:08.340 --> 00:20:10.450
InVideoPromotion object
we created.

00:20:10.450 --> 00:20:12.060
And then at that point,
it's easy.

00:20:12.060 --> 00:20:16.730
We say youtube.channels update,
and we want to update

00:20:16.730 --> 00:20:22.180
this part, InVideoPromotion,
and we pass the channel.

00:20:22.180 --> 00:20:23.200
We execute it.

00:20:23.200 --> 00:20:26.830
So once that's done, this will
tell us that hey, we've gone

00:20:26.830 --> 00:20:29.550
ahead and we've uploaded the--

00:20:29.550 --> 00:20:32.870
we've set the new
InVideoPromotion.

00:20:32.870 --> 00:20:35.230
So I'm going to go ahead
and run the sample for

00:20:35.230 --> 00:20:36.440
you guys right now.

00:20:36.440 --> 00:20:38.410
Live demos, be good to me.

00:20:41.850 --> 00:20:46.650
We're going to run this using
Maven again, Maven Exec Java.

00:20:46.650 --> 00:20:48.110
Let's see how this goes.

00:20:48.110 --> 00:20:49.710
Oh, I know what's going on.

00:20:49.710 --> 00:20:50.640
It's doing--

00:20:50.640 --> 00:20:53.500
zoom is using keyboard focus
to decide what to zoom on.

00:20:53.500 --> 00:20:55.000
OK, so now you'll see
that this has

00:20:55.000 --> 00:20:56.020
opened a browser window.

00:20:56.020 --> 00:20:59.500
And this is OAuth saying hey,
this application wants to run

00:20:59.500 --> 00:21:02.890
as you, and it wants your
permission to do so.

00:21:02.890 --> 00:21:04.682
So I'm going to click Accept.

00:21:04.682 --> 00:21:08.350
It gets a verification code.

00:21:08.350 --> 00:21:09.590
Oh, invalid client.

00:21:09.590 --> 00:21:11.950
It means I set this client
up incorrectly.

00:21:11.950 --> 00:21:14.030
But that's not a huge
deal because my

00:21:14.030 --> 00:21:15.990
Python sample will work.

00:21:15.990 --> 00:21:20.000
And the reason I've probably
set this up incorrectly is

00:21:20.000 --> 00:21:23.605
because I've got some
weird stuff going on

00:21:23.605 --> 00:21:25.030
with my client secrets.

00:21:25.030 --> 00:21:27.920
So I'm not going to debug that
right now, but just to show

00:21:27.920 --> 00:21:29.990
you that it will work--

00:21:29.990 --> 00:21:32.730
demo gods!

00:21:32.730 --> 00:21:36.200
OK, so now let's show you the
Python sample and what this

00:21:36.200 --> 00:21:39.900
looks like there, opening up my
favorite editor for Python,

00:21:39.900 --> 00:21:41.100
Sublime Text.

00:21:41.100 --> 00:21:42.690
We're not going to zoom in since
it's really easy to make

00:21:42.690 --> 00:21:45.560
the text bigger in
this application.

00:21:45.560 --> 00:21:47.545
And this is a very
simple sample.

00:21:47.545 --> 00:21:51.034
It looks really similar to the
other Python samples we have

00:21:51.034 --> 00:21:52.480
for the YouTube API.

00:21:52.480 --> 00:21:55.120
First off, we define a scope.

00:21:55.120 --> 00:22:00.260
We create a YouTube client,
and we call the code.

00:22:00.260 --> 00:22:03.910
And for the body, because this
is Python, we could just pass

00:22:03.910 --> 00:22:05.920
a set of nested dictionaries,
and it'll take

00:22:05.920 --> 00:22:07.160
this, and it'll work.

00:22:07.160 --> 00:22:10.620
And in this particular sample,
we are taking keyword

00:22:10.620 --> 00:22:16.040
arguments for channel ID
and a video ID to sets.

00:22:16.040 --> 00:22:18.820
So you'll see that these are
the valid offset types and

00:22:18.820 --> 00:22:19.460
valid positions.

00:22:19.460 --> 00:22:22.460
There aren't a lot of choices,
and this will default some

00:22:22.460 --> 00:22:23.390
positions for us.

00:22:23.390 --> 00:22:25.860
And you could see that the
default that this is going to

00:22:25.860 --> 00:22:27.790
do for us is going to be bottom

00:22:27.790 --> 00:22:29.390
left and for 10 seconds.

00:22:29.390 --> 00:22:32.660
But a user will be able to enter
command line arguments

00:22:32.660 --> 00:22:35.970
and set this to something
different.

00:22:35.970 --> 00:22:39.620
OK, so that's what the
sample is right now.

00:22:39.620 --> 00:22:40.720
It's very straightforward.

00:22:40.720 --> 00:22:42.970
And again, you'll see that
this payload looks very

00:22:42.970 --> 00:22:45.970
similar to what you would see
in the API reference.

00:22:45.970 --> 00:22:47.670
That is not an accident.

00:22:47.670 --> 00:22:50.150
That is almost entirely
intentional.

00:22:50.150 --> 00:22:53.310
So you can copy, paste them with
a few edits, make the API

00:22:53.310 --> 00:22:55.450
reference portable
into your code.

00:22:55.450 --> 00:22:59.130
And one thing that I'll mention
is that because the

00:22:59.130 --> 00:23:01.990
libraries for Python are
auto-generated on the fly,

00:23:01.990 --> 00:23:04.900
again from this Discovery
document, which it fetches

00:23:04.900 --> 00:23:08.310
every time you run the
application, you don't need to

00:23:08.310 --> 00:23:09.440
update the client at all.

00:23:09.440 --> 00:23:12.840
If you have a working Google API
client, you've already got

00:23:12.840 --> 00:23:15.170
everything you need to use the
newest version of the API.

00:23:15.170 --> 00:23:16.420
So it's very, very cool.

00:23:16.420 --> 00:23:20.180
But the trade-offs are that you
don't get type safety, and

00:23:20.180 --> 00:23:23.090
the other issue is that if you
are going to be doing this a

00:23:23.090 --> 00:23:26.320
lot, you usually want to do
caching of the Discovery doc.

00:23:26.320 --> 00:23:29.680
So that's out of the scope of
this particular show, but you

00:23:29.680 --> 00:23:31.900
don't want to be in a situation
where every single

00:23:31.900 --> 00:23:34.960
time you are instantiating a
client, you are making a call,

00:23:34.960 --> 00:23:36.830
especially if you're
instantiating an

00:23:36.830 --> 00:23:38.140
API client a lot.

00:23:38.140 --> 00:23:42.150
And the place where you don't
want to do this is say you are

00:23:42.150 --> 00:23:45.830
building an API for an iOS
or Android application.

00:23:45.830 --> 00:23:49.270
And what happens is you are
making an OAuth call,

00:23:49.270 --> 00:23:51.160
an OAuth API call.

00:23:51.160 --> 00:23:54.010
OAuth authorized the API call
from your server every single

00:23:54.010 --> 00:23:56.140
time this application
checks in.

00:23:56.140 --> 00:23:58.080
Now, you're going to be hitting
this Discovery doc

00:23:58.080 --> 00:24:00.970
quite a bit, and there will be
some kind of caching going on,

00:24:00.970 --> 00:24:03.130
but you're going to want to make
sure that you're caching

00:24:03.130 --> 00:24:06.860
the Discovery doc yourself so
that you are not constantly

00:24:06.860 --> 00:24:09.720
hitting the server and saying
what's the newest version of

00:24:09.720 --> 00:24:11.730
the API, what's the newest
version of API.

00:24:11.730 --> 00:24:14.040
Because the API will change,
but it's not

00:24:14.040 --> 00:24:15.420
going to be that often.

00:24:15.420 --> 00:24:16.330
All right.

00:24:16.330 --> 00:24:19.030
So back on track.

00:24:19.030 --> 00:24:21.790
This InVideoPromotion object,
we set a position,

00:24:21.790 --> 00:24:22.870
and we set the items.

00:24:22.870 --> 00:24:24.410
Looks very similar
to Java, but with

00:24:24.410 --> 00:24:26.190
a little less ceremony.

00:24:26.190 --> 00:24:28.000
So I'm going to go ahead and
run this code right now.

00:24:28.000 --> 00:24:31.900
And you'll see that over here,
I have InVideo saved.

00:24:31.900 --> 00:24:34.150
I'm calling Python,
InVideo sample.

00:24:34.150 --> 00:24:35.250
I'm passing a channel ID.

00:24:35.250 --> 00:24:37.850
This is my channel ID
and a video ID.

00:24:37.850 --> 00:24:41.610
And I got these values from
looking at my channel.

00:24:41.610 --> 00:24:43.450
And this is my Dino
Dinosaur channel.

00:24:43.450 --> 00:24:45.890
You'll see it in the URL.

00:24:45.890 --> 00:24:48.090
That's my channel ID, and I'm
just copying and pasting it

00:24:48.090 --> 00:24:49.700
into the command line.

00:24:49.700 --> 00:24:51.740
And as for the video,
I got that video,

00:24:51.740 --> 00:24:54.510
again, from the URL.

00:24:54.510 --> 00:24:57.280
OK, so let's go ahead
and run the sample.

00:24:57.280 --> 00:24:59.030
You'll see something interesting
any time you see

00:24:59.030 --> 00:25:02.450
me running Python, and that is
that I have a little prefix in

00:25:02.450 --> 00:25:04.160
my command line.

00:25:04.160 --> 00:25:07.240
I'm using something called
virtualenv, which is a Python

00:25:07.240 --> 00:25:10.240
tool that lets you build out
separate Python environments.

00:25:10.240 --> 00:25:12.540
And this is really important
because you don't always want

00:25:12.540 --> 00:25:16.600
to be what we call polluting
your global Python space.

00:25:16.600 --> 00:25:19.130
So virtualenv's a great tool.

00:25:19.130 --> 00:25:22.140
If you're writing any kind of
Python, I highly recommend it.

00:25:22.140 --> 00:25:23.230
All right.

00:25:23.230 --> 00:25:24.805
I'm going to go ahead
and run this sample.

00:25:27.700 --> 00:25:29.140
And you'll see that I've
added a featured

00:25:29.140 --> 00:25:32.240
video to the channel.

00:25:32.240 --> 00:25:36.200
So looking at the channel now,
if we refresh this page,

00:25:36.200 --> 00:25:40.040
you'll see that we are using
the newest video, and we've

00:25:40.040 --> 00:25:42.350
updated this to 10 seconds.

00:25:42.350 --> 00:25:44.960
So I'm going to set it to 5 so
you could see this at work.

00:25:44.960 --> 00:25:46.210
I'm going to hit Save.

00:25:49.090 --> 00:25:56.770
Whoops, valid time values, 05.

00:25:56.770 --> 00:25:58.610
I'm going to go ahead and update
it through the API.

00:26:03.130 --> 00:26:04.565
And you'll see that the
API has changed

00:26:04.565 --> 00:26:05.930
it back to 10 seconds.

00:26:05.930 --> 00:26:06.480
All right.

00:26:06.480 --> 00:26:09.730
So one last thing before I let
you guys go, and that is how

00:26:09.730 --> 00:26:12.320
to use InVideo Programming
with Analytics.

00:26:12.320 --> 00:26:16.570
So you can already get Analytics
via the Web Admin.

00:26:16.570 --> 00:26:21.520
And you go that by clicking on
Analytics, scroll down, and

00:26:21.520 --> 00:26:24.500
annotation says beta because
we're still working on this.

00:26:24.500 --> 00:26:26.616
And aw, no one watches
watch my channel and

00:26:26.616 --> 00:26:27.600
no one clicks through.

00:26:27.600 --> 00:26:30.660
But what you should see is that
in the annotation type,

00:26:30.660 --> 00:26:34.030
it'll say InVideo Programming
logo and featured video and

00:26:34.030 --> 00:26:35.450
the clickthrough rate.

00:26:35.450 --> 00:26:38.280
So I'm going to go ahead and run
a different sample for you

00:26:38.280 --> 00:26:41.030
guys after I go through
this code.

00:26:41.030 --> 00:26:43.420
And this sample is what
I call the InVideo

00:26:43.420 --> 00:26:44.820
with Analytics sample.

00:26:44.820 --> 00:26:50.470
And what this does is this gets
data about your InVideo

00:26:50.470 --> 00:26:52.470
Programming, about
your channel.

00:26:52.470 --> 00:26:55.620
Then it goes ahead and it prints
out, sorted by country,

00:26:55.620 --> 00:26:57.120
what has the highest
click through rate.

00:26:57.120 --> 00:27:01.050
So I have this tied to the
Google Developers channel

00:27:01.050 --> 00:27:02.600
because I want to
provide slightly

00:27:02.600 --> 00:27:03.940
more interesting data.

00:27:03.940 --> 00:27:05.850
If I just provide it with my
channel, it would just be a

00:27:05.850 --> 00:27:08.090
bunch of zeroes all
the way down.

00:27:08.090 --> 00:27:10.880
So you'll see that because this
is combining the data API

00:27:10.880 --> 00:27:12.430
and the Analytics API.

00:27:12.430 --> 00:27:16.240
In the API console, you have to
enable both the Analytics

00:27:16.240 --> 00:27:17.790
and the Data API.

00:27:17.790 --> 00:27:19.640
Once you do, you'll
see that I've

00:27:19.640 --> 00:27:20.930
defined two service names--

00:27:20.930 --> 00:27:22.910
YouTube and YouTube
Analytics--

00:27:22.910 --> 00:27:24.920
two versions.

00:27:24.920 --> 00:27:27.980
And the scopes I'm using,
if I scroll up,

00:27:27.980 --> 00:27:28.870
I'm using two scopes.

00:27:28.870 --> 00:27:31.910
I'm using the YouTube read-only
scope as well as the

00:27:31.910 --> 00:27:33.140
Analytics read-only scope.

00:27:33.140 --> 00:27:35.210
I need two scopes because
I'm working with more

00:27:35.210 --> 00:27:37.360
than one API here.

00:27:37.360 --> 00:27:39.710
Now, I'm going to go ahead,
and in the main part, main

00:27:39.710 --> 00:27:42.400
function, define a
YouTube client.

00:27:42.400 --> 00:27:47.060
I do this using the YouTube API
name and the service name

00:27:47.060 --> 00:27:48.350
as well as an Analytics
client.

00:27:48.350 --> 00:27:49.265
And this is very important.

00:27:49.265 --> 00:27:50.620
We have two clients.

00:27:50.620 --> 00:27:54.260
So these are just two
clients in code.

00:27:54.260 --> 00:27:54.900
We're going to go ahead.

00:27:54.900 --> 00:27:56.660
I'm going to fetch
all my channels.

00:27:56.660 --> 00:27:58.710
And I'm going to iterate
through each channel.

00:27:58.710 --> 00:28:00.590
And once I iterate through each
channel, I'm going to get

00:28:00.590 --> 00:28:02.930
the channel ID.

00:28:02.930 --> 00:28:06.840
And now I'm going to use
Analytics, and I'm going to

00:28:06.840 --> 00:28:08.230
query for report.

00:28:08.230 --> 00:28:09.820
I'm going to query
for the metrics.

00:28:09.820 --> 00:28:11.540
This is what's key here--

00:28:11.540 --> 00:28:13.800
the annotation clickthrough
rate and an

00:28:13.800 --> 00:28:15.660
annotation close rate.

00:28:15.660 --> 00:28:18.230
So the clickthrough rate will
tell us what percentage of

00:28:18.230 --> 00:28:19.340
people watching this
video are actually

00:28:19.340 --> 00:28:20.980
clicking on this thing.

00:28:20.980 --> 00:28:23.330
I want to sort it by country.

00:28:23.330 --> 00:28:25.890
And I want to sort by annotation
clickthrough rate

00:28:25.890 --> 00:28:26.570
descending.

00:28:26.570 --> 00:28:29.560
That's what this minus
sign means in

00:28:29.560 --> 00:28:31.290
front of this feature.

00:28:31.290 --> 00:28:33.220
And if you want to learn more
about the Analytics API, we've

00:28:33.220 --> 00:28:35.950
done a bunch of shows about
this, and there's a lot of

00:28:35.950 --> 00:28:38.000
documentation, so
check that out.

00:28:38.000 --> 00:28:40.870
I'm also doing this for
the month of March.

00:28:40.870 --> 00:28:42.690
All right, so I'm going
to execute this.

00:28:42.690 --> 00:28:44.420
I'm going to go ahead and
print things out.

00:28:44.420 --> 00:28:47.580
I am doing something kind of
tricky here, which is that I'm

00:28:47.580 --> 00:28:53.510
looking up the country code
from a tool called the ISO

00:28:53.510 --> 00:28:55.290
3166 package.

00:28:55.290 --> 00:28:57.930
You can install this using
pip or easy-install, pip,

00:28:57.930 --> 00:29:00.980
easy_install ISO 3166.

00:29:00.980 --> 00:29:03.710
I'm employing the countries
object--

00:29:03.710 --> 00:29:04.410
countries library.

00:29:04.410 --> 00:29:06.870
And you can read more about
this online in our

00:29:06.870 --> 00:29:07.580
documentation.

00:29:07.580 --> 00:29:11.370
Just look for ISO 3166 and
search for it, favorite search

00:29:11.370 --> 00:29:13.970
engine, install the package,
you're ready to go.

00:29:13.970 --> 00:29:16.470
From that, I'm fetching a
country object from the

00:29:16.470 --> 00:29:17.950
country code, fetching a name.

00:29:17.950 --> 00:29:20.600
And that's how I get the
pretty name from the

00:29:20.600 --> 00:29:23.560
two-letter country code, which
isn't always that useful.

00:29:23.560 --> 00:29:25.770
And I'm going to go ahead and
print this out in a table.

00:29:25.770 --> 00:29:28.770
So why don't I go ahead
and run this.

00:29:28.770 --> 00:29:31.100
Python, InVideo--

00:29:31.100 --> 00:29:32.250
let's see--

00:29:32.250 --> 00:29:32.870
with Analytics.

00:29:32.870 --> 00:29:36.490
Now, I've already approved this,
so I'm going to go ahead

00:29:36.490 --> 00:29:38.920
and click Run.

00:29:38.920 --> 00:29:40.710
And I'm going to zoom in and
show you guys what we're

00:29:40.710 --> 00:29:41.580
looking at here.

00:29:41.580 --> 00:29:43.750
What we're looking at now is--

00:29:43.750 --> 00:29:45.550
that looks wrong to me.

00:29:45.550 --> 00:29:49.630
What we're looking at now is
a country, followed by the

00:29:49.630 --> 00:29:53.470
number of views for that month,
followed by the InVideo

00:29:53.470 --> 00:29:54.590
Programming clickthrough rate.

00:29:54.590 --> 00:29:57.530
And it's not terribly high,
but that's fine.

00:29:57.530 --> 00:29:58.660
We can expect that.

00:29:58.660 --> 00:30:01.970
And what this allows you to do
is create dashboards as well

00:30:01.970 --> 00:30:03.980
as do some kind of testing.

00:30:03.980 --> 00:30:06.140
And right now, there aren't a
lot of features, so we'll

00:30:06.140 --> 00:30:08.150
definitely do a follow-up show
when there are more features.

00:30:08.150 --> 00:30:11.560
But one thing you could do is
you could update it daily to

00:30:11.560 --> 00:30:14.690
show the newest video, the
highest-liked video.

00:30:14.690 --> 00:30:17.190
You could do any number of
things and automate this

00:30:17.190 --> 00:30:19.590
process so that you get the
most number of people

00:30:19.590 --> 00:30:21.310
subscribing to your channel.

00:30:21.310 --> 00:30:24.400
And that's ultimately the goal
of InVideo Programming is to

00:30:24.400 --> 00:30:27.650
get your brand and your channel
in front of potential

00:30:27.650 --> 00:30:31.390
viewers that might view your one
video and become long term

00:30:31.390 --> 00:30:32.620
returning viewers.

00:30:32.620 --> 00:30:34.670
So I'm sorting it by country.

00:30:34.670 --> 00:30:37.060
And again, that's
what this does.

00:30:37.060 --> 00:30:39.620
And this is just very
standard analytics.

00:30:39.620 --> 00:30:41.980
It's using the annotation
clickthrough rate.

00:30:41.980 --> 00:30:43.480
And this-- just one warning.

00:30:43.480 --> 00:30:45.900
This is also going to include
the old-style annotations,

00:30:45.900 --> 00:30:48.820
which we're not currently
planning on providing API for.

00:30:48.820 --> 00:30:51.635
Going forward, we're going to
be focusing more on features

00:30:51.635 --> 00:30:53.420
to offer InVideo Programming.

00:30:53.420 --> 00:30:57.670
So keep a look out on our blog
as well as our release notes

00:30:57.670 --> 00:30:59.510
to see when we're uploading
and updating new

00:30:59.510 --> 00:31:00.750
features for this.

00:31:00.750 --> 00:31:04.560
So that is what I have
for you guys today.

00:31:04.560 --> 00:31:07.190
And usually this is about time
when I would ask if there are

00:31:07.190 --> 00:31:08.190
any questions.

00:31:08.190 --> 00:31:11.180
So I already know what
the question is.

00:31:11.180 --> 00:31:13.100
The question is, are
you guys hiring?

00:31:13.100 --> 00:31:15.020
And the answer is yes.

00:31:15.020 --> 00:31:18.910
So if you want to learn more
about our team and what we do,

00:31:18.910 --> 00:31:22.770
go to
developers.google.com/jobs.

00:31:22.770 --> 00:31:25.410
And you'll see lots of Google
Developer jobs.

00:31:25.410 --> 00:31:26.880
And oh, it's [? Ade ?]

00:31:26.880 --> 00:31:29.610
looking very intense, right?

00:31:29.610 --> 00:31:31.010
He posed for that.

00:31:31.010 --> 00:31:32.900
And these are some of the
different jobs that we have in

00:31:32.900 --> 00:31:35.980
Developer Relations or DevRel,
as we like to call it.

00:31:35.980 --> 00:31:38.350
So that is all I have
for you guys today.

00:31:38.350 --> 00:31:41.830
Come find us on Stack Overflow
at YouTube with the

00:31:41.830 --> 00:31:43.540
YouTube-API tag.

00:31:43.540 --> 00:31:47.150
We're also at
developers.google.com/youtube

00:31:47.150 --> 00:31:52.740
and on Twitter @youtubedev as
well as Google+ at YouTube

00:31:52.740 --> 00:31:53.600
Developers.

00:31:53.600 --> 00:31:56.500
So thank you guys for joining
me today or whenever you're

00:31:56.500 --> 00:31:57.320
watching this show.

00:31:57.320 --> 00:32:00.790
And hopefully you'll use the
InVideo Programming and

00:32:00.790 --> 00:32:04.070
promote your channel and
be hugely successful.

00:32:04.070 --> 00:32:05.070
All right.

00:32:05.070 --> 00:32:06.770
Take it easy guys,
and thank you.

