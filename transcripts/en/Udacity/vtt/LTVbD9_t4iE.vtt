WEBVTT
Kind: captions
Language: en

00:00:00.350 --> 00:00:06.640
DSM is providing the application developer with a programming model

00:00:06.640 --> 00:00:13.490
on a cluster that is akin to P threads on an SMP. It looks and feels like a

00:00:13.490 --> 00:00:16.840
shared memory threads package. That's good. But

00:00:16.840 --> 00:00:19.620
what about performance? Will the performance of

00:00:19.620 --> 00:00:22.930
a multi-threaded app. Scale up as we

00:00:22.930 --> 00:00:25.850
increase the number of processors in the cluster.

00:00:25.850 --> 00:00:28.680
Now, from an application programmer's point of view, your

00:00:28.680 --> 00:00:32.930
expectation is that, as you add more processors, you're

00:00:32.930 --> 00:00:36.390
going to get more performance. That's your expectation. And what

00:00:36.390 --> 00:00:38.990
we are doing is, we're exploiting the parallelism that is

00:00:38.990 --> 00:00:42.226
available both in the application because it's structured in

00:00:42.226 --> 00:00:44.960
that way. And in the hardware, in order to get

00:00:44.960 --> 00:00:47.670
increase performances as you increase the number of processors.

00:00:47.670 --> 00:00:50.880
But the problem is as you increase the number of

00:00:50.880 --> 00:00:54.870
processors because things are happening in software, there

00:00:54.870 --> 00:00:57.570
is increased overhead as well. And this overhead

00:00:57.570 --> 00:00:59.600
increases as the number of processors, so the

00:00:59.600 --> 00:01:02.150
actual performance is going to be actually much

00:01:02.150 --> 00:01:05.800
less than your expectation. Mitigated by the increasing

00:01:05.800 --> 00:01:08.580
overhead with the number of processors. And this

00:01:08.580 --> 00:01:11.570
buildup of overhead with a number of processes,

00:01:11.570 --> 00:01:15.900
happens in a true memory multi-processors. And this

00:01:15.900 --> 00:01:19.690
is even more true in the case of liason. Which

00:01:19.690 --> 00:01:25.220
is implementing the shared memory extraction in software on a cluster.

