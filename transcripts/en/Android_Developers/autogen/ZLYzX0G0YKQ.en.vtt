WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750
 (Louis Hector Chavez): Welcome all. 

00:00:01.750 --> 00:00:04.380
 Welcome to the Google I / O conference, named Louis Hector Chavez 

00:00:04.380 --> 00:00:07.290
 I'm one of the engineers in the Chrome OS team. 

00:00:07.290 --> 00:00:09.270
 You may have seen the announcement made earlier today 

00:00:09.270 --> 00:00:11.765
 We're bringing Android apps to Chromebooks. 

00:00:13.590 --> 00:00:14.330
 Bravo 

00:00:18.310 --> 00:00:19.950
 So I'm very excited to be here, 

00:00:19.950 --> 00:00:22.690
 Because I can finally tell you what we were working on 

00:00:22.690 --> 00:00:23.810
 In recent months. 

00:00:23.810 --> 00:00:26.094
 So it is no longer a secret anymore. 

00:00:26.094 --> 00:00:29.200
 Well, first 

00:00:29.410 --> 00:00:32.200
 Let's talk a bit about why we did this, 

00:00:32.200 --> 00:00:34.570
 And why it should be of interest to you. 

00:00:34.570 --> 00:00:37.140
 First, Chrome OS is a growing platform. 

00:00:37.140 --> 00:00:39.790
 While PC shipments are decreasing, 

00:00:39.790 --> 00:00:41.710
 The Chrome OS continues to grow. 

00:00:41.710 --> 00:00:45.460
 In fact, last year we achieved an annual increase of 32%. 

00:00:45.460 --> 00:00:47.940
 These figures are continuing to improve in certain sectors. 

00:00:47.940 --> 00:00:50.380
 For example, Chromebooks are the first 

00:00:50.380 --> 00:00:53.010
 In primary and secondary education in the United States. 

00:00:54.410 --> 00:00:56.130
 There are millions of active users, 

00:00:56.130 --> 00:00:58.980
 With more than 50 different devices from 13 original manufacturers in 44 countries, 

00:00:58.980 --> 00:01:02.400
 We have more amazing Chromebooks on the way. 

00:01:05.090 --> 00:01:07.680
 Well if, we have a large and growing platform 

00:01:07.680 --> 00:01:10.450
 With a large number of potential new users. 

00:01:10.450 --> 00:01:14.760
 Here comes your turn as an Android developer. 

00:01:14.970 --> 00:01:18.400
 All Android developers want more users. 

00:01:18.400 --> 00:01:20.890
 All Chromebook users want more apps, 

00:01:20.890 --> 00:01:22.720
 But they do not want any application. 

00:01:22.720 --> 00:01:25.739
 They want the applications they know and like. 

00:01:25.739 --> 00:01:28.610
 So we believe that bringing Android apps to your Chrombooks 

00:01:28.610 --> 00:01:32.290
 Provides a compromise that helps both groups of people. 

00:01:32.850 --> 00:01:36.250
 Well, if a developer wants to bring it to a Chromebook, 

00:01:36.250 --> 00:01:39.120
 What choices are available? 

00:01:39.120 --> 00:01:41.000
 Let's start with the possibility that there is no solution. 

00:01:41.000 --> 00:01:43.100
 You can write a Chrome OS app. 

00:01:43.100 --> 00:01:45.830
 This means writing your app twice. 

00:01:45.830 --> 00:01:49.410
 This requires learning a new platform, 

00:01:49.410 --> 00:01:52.440
 Which may produce a more original application, 

00:01:52.440 --> 00:01:53.680
 But it requires a lot of work. 

00:01:53.680 --> 00:01:54.916
 A lot of maintenance, 

00:01:54.916 --> 00:01:57.497
 Requiring the retention of two separate code bases. 

00:01:57.497 --> 00:01:59.500
 So it is not an option for most people. 

00:02:01.700 --> 00:02:05.660
 Another option is to build an HTML5 app. 

00:02:05.660 --> 00:02:10.089
 This may result in an application that looks native to Chrome OS, 

00:02:10.089 --> 00:02:13.130
 But you need an Android HTML program, 

00:02:13.130 --> 00:02:15.180
 That does not seem very original. 

00:02:15.180 --> 00:02:18.020
 It also does not benefit well 

00:02:18.020 --> 00:02:19.550
 From the primary Android system. 

00:02:19.550 --> 00:02:21.464
 So it is not a great choice either. 

00:02:24.380 --> 00:02:26.810
 Chrome Runtime ARC was another choice. 

00:02:26.810 --> 00:02:28.960
 We've released this in the Chrome OS team, 

00:02:28.960 --> 00:02:32.030
 Two years ago in 2014 as a way to launch Android apps 

00:02:32.030 --> 00:02:33.980
 On Chromebooks. 

00:02:33.980 --> 00:02:36.010
 We're running full Android cases 

00:02:36.010 --> 00:02:38.067
 In Native Client protection mode. 

00:02:38.067 --> 00:02:40.845
 Unfortunately it had some challenges for developers. 

00:02:44.177 --> 00:02:45.760
 Access to some system resources, 

00:02:45.760 --> 00:02:47.740
 It was limited by the advanced structure 

00:02:47.740 --> 00:02:49.715
 Defines native client protection. 

00:02:49.715 --> 00:02:52.370
 For example, we had to do a complete file system simulation 

00:02:52.370 --> 00:02:54.090
 Because it was not available to us. 

00:02:54.090 --> 00:02:56.310
 Some applications did not work well with it. 

00:02:58.870 --> 00:03:02.700
 Native Client has a single execution model, 

00:03:02.700 --> 00:03:06.609
 Causing some applications to not work well, 

00:03:06.609 --> 00:03:07.945
 Especially the Google Play store. 

00:03:10.140 --> 00:03:14.180
 Finally, some of the developers' delimiters, 

00:03:14.180 --> 00:03:15.840
 Such as in-app payments, 

00:03:15.840 --> 00:03:17.560
 It required more work on your part. 

00:03:20.450 --> 00:03:22.240
 After all this, 

00:03:22.240 --> 00:03:24.210
 We still believe that making Android apps work, 

00:03:24.210 --> 00:03:26.430
 As native native Chrome OS applications, 

00:03:26.430 --> 00:03:30.630
 Is the right idea, so we have made many improvements, 

00:03:30.630 --> 00:03:33.720
 We are building a whole new platform, 

00:03:33.720 --> 00:03:36.966
 To run Android apps on Chromebooks. 

00:03:36.966 --> 00:03:39.090
 Well, many of you may have missed 

00:03:39.090 --> 00:03:43.450
 View the demonstration day, so I will 

00:03:43.450 --> 00:03:44.260
 One is shorter now. 

00:03:46.840 --> 00:03:51.670
 Well, first, this is the standard Chrome OS desktop. 

00:03:51.670 --> 00:03:53.724
 But you can see that we now have a Play Store. 

00:03:53.724 --> 00:03:54.454
 Bravo. 

00:03:57.849 --> 00:03:59.390
 Of course I do not have Internet. 

00:03:59.390 --> 00:04:02.220
 So there's no Play Store. 

00:04:02.220 --> 00:04:05.750
 But fortunately I installed some applications 

00:04:05.750 --> 00:04:07.620
 Such as Gmail. 

00:04:07.620 --> 00:04:08.880
 Surprise. 

00:04:08.880 --> 00:04:10.650
 If one of the things we do here 

00:04:10.650 --> 00:04:12.760
 Is that we have support for multiple windows. 

00:04:21.160 --> 00:04:24.550
 Not only that, but we can change the window size. 

00:04:24.550 --> 00:04:28.480
 We can also grow up, and things like that. 

00:04:28.480 --> 00:04:29.420
 Stylish things. 

00:04:34.040 --> 00:04:37.680
 We also support integration with some native Chrome notifications. 

00:04:37.680 --> 00:04:40.249
 For example: 

00:04:46.459 --> 00:04:49.459
 "Hello world!" 

00:04:50.499 --> 00:04:53.040
 And of course, as I mentioned before I do not have Internet, 

00:04:53.040 --> 00:04:54.890
 So we will miss this. 

00:04:54.890 --> 00:04:56.880
 Here it is. 

00:04:56.880 --> 00:05:00.380
 If we see, we have an Internet Offline login in Android apps now. 

00:05:04.888 --> 00:05:06.304
 Well go back to the slides. 

00:05:10.590 --> 00:05:12.688
 We've seen what it really looks like. 

00:05:12.688 --> 00:05:15.146
 So let's talk a bit more about how to implement. 

00:05:18.440 --> 00:05:21.408
 First, we no longer use the Native Client anymore. 

00:05:21.408 --> 00:05:23.282
 We use a completely new protection mechanism. 

00:05:27.310 --> 00:05:30.020
 Using existing Linux namespaces, 

00:05:30.020 --> 00:05:32.610
 To separate Android and Chrome OS. 

00:05:32.610 --> 00:05:34.460
 It's already used in the Chrome OS, 

00:05:34.460 --> 00:05:36.810
 And in some of our cloud offerings. 

00:05:36.810 --> 00:05:39.749
 We use the namespace of the download, processing, user and network, 

00:05:39.749 --> 00:05:41.420
 And the IPC name space. 

00:05:43.930 --> 00:05:46.240
 Basic protection team developed new features 

00:05:46.240 --> 00:05:47.840
 For this. 

00:05:47.840 --> 00:05:49.230
 Android works directly 

00:05:49.230 --> 00:05:52.500
 On the Linux kernel, this has increased the surface of the attack 

00:05:52.500 --> 00:05:56.400
 A little more than we like it, 

00:05:56.400 --> 00:06:00.420
 The Chrome OS protection team has developed a new way to add 

00:06:00.420 --> 00:06:02.570
 Alternative syscall tables. 

00:06:02.570 --> 00:06:04.610
 This is more effective and orderly 

00:06:04.610 --> 00:06:06.940
 Of the connection filtering technologies currently on the system. 

00:06:06.940 --> 00:06:10.240
 Such as seccomp-bpf which by the way he developed 

00:06:10.240 --> 00:06:12.400
 Chrome OS Protection Team. 

00:06:13.466 --> 00:06:15.280
 Android and Chrome OS 

00:06:15.280 --> 00:06:18.115
 Their own configuration will make everything slower, 

00:06:18.115 --> 00:06:20.490
 So we have a shared configuration model, where there is a component 

00:06:20.490 --> 00:06:22.217
 One comprehensive. 

00:06:22.217 --> 00:06:24.341
 This makes things faster and more responsive. 

00:06:26.990 --> 00:06:31.640
 Finally, where we know that the goal of a lot of developers 

00:06:31.640 --> 00:06:35.400
 For ARM processor only, we provide simultaneous binary translation, 

00:06:35.400 --> 00:06:38.160
 So that their applications become the custom menu for the ARM processor 

00:06:38.160 --> 00:06:41.100
 Playable on x86 devices such as Google Chromebook Pixel 

00:06:42.340 --> 00:06:44.296
 Without any additional work on your part. 

00:06:47.569 --> 00:06:49.980
 If this new method still maintains a high level 

00:06:49.980 --> 00:06:52.520
 Of security in both operating systems. 

00:06:52.520 --> 00:06:55.610
 Where you can keep all security features in the Chrome operating system 

00:06:55.610 --> 00:06:59.085
 Such as verified root, encrypted user data and persistent updates. 

00:06:59.085 --> 00:07:01.215
 Android has existing Linux properties. 

00:07:04.060 --> 00:07:06.330
 There are no visible devices or simulations, 

00:07:06.330 --> 00:07:08.198
 So you get full native performance. 

00:07:10.570 --> 00:07:14.230
 Finally, as we are running the entire Android system, 

00:07:14.230 --> 00:07:17.841
 You can run Android Marshmallow entirely through Chrome OS. 

00:07:17.841 --> 00:07:19.490
 This includes the Google Play store. 

00:07:21.840 --> 00:07:25.200
 So part of what we learned from Chrome's Runtime application, 

00:07:25.200 --> 00:07:26.545
 Is that integration is important. 

00:07:26.545 --> 00:07:29.170
 Whenever applications are integrated with the rest of the operating system, 

00:07:29.170 --> 00:07:32.210
 The more their shape and performance the better. 

00:07:32.210 --> 00:07:34.340
 If we do not give Android direct access 

00:07:34.340 --> 00:07:35.864
 Equipment only in limited areas. 

00:07:35.864 --> 00:07:37.280
 And the rest of the time, the equipment remains 

00:07:37.280 --> 00:07:39.620
 Under Chrome OS. 

00:07:39.620 --> 00:07:42.100
 But even so, we had a lot of integration points 

00:07:42.100 --> 00:07:45.620
 In order for Android developers to still call the same APIs, 

00:07:45.620 --> 00:07:49.790
 The APIs beneath it will call the Chrome OS. 

00:07:49.790 --> 00:07:51.457
 This allows both operating systems, 

00:07:51.457 --> 00:07:52.706
 With the same perspective of the system 

00:07:52.706 --> 00:07:54.272
 Rather than having separate binoculars. 

00:07:56.620 --> 00:07:58.517
 Well, what does all this translate, 

00:07:58.517 --> 00:08:00.225
 What impact does it have on your apps? 

00:08:03.217 --> 00:08:05.050
 Since we're running a full Android system, 

00:08:05.050 --> 00:08:06.660
 This means that most applications can 

00:08:06.660 --> 00:08:09.920
 Turn on Chrome OS without any change in scripts at all. 

00:08:09.920 --> 00:08:12.310
 Of course, since this is a new platform, 

00:08:12.310 --> 00:08:14.290
 You may want to make some improvements, 

00:08:14.290 --> 00:08:15.540
 Simple adjustments. 

00:08:18.970 --> 00:08:23.690
 But your app works as a Chrome OS app. 

00:08:23.690 --> 00:08:25.940
 Most things you expect the Android system to do 

00:08:25.940 --> 00:08:29.930
 Chrome OS will now be saved instead of being restricted 

00:08:29.930 --> 00:08:31.990
 With a small window. 

00:08:31.990 --> 00:08:34.110
 Each task runs in its own window. 

00:08:34.110 --> 00:08:37.440
 You get Android alerts along with their Chrome OS counterparts. 

00:08:37.440 --> 00:08:40.373
 There is one app launcher in the shelf. 

00:08:40.373 --> 00:08:42.169
 The login information will be shared 

00:08:42.169 --> 00:08:46.360
 Between operating systems so that you do not have to sign in twice. 

00:08:46.360 --> 00:08:49.550
 You can also share files in the Downloads folder. 

00:08:52.380 --> 00:08:55.110
 The equipment is also integrated where you can get in touch 

00:08:55.110 --> 00:08:57.730
 Wi-Fi and Bluetooth. 

00:08:57.730 --> 00:09:01.306
 The camera, microphone, audio and video are also working. 

00:09:04.260 --> 00:09:06.070
 All input mechanisms in Chrome OS 

00:09:06.070 --> 00:09:08.390
 Remain integrated through the application, 

00:09:08.390 --> 00:09:10.670
 So the keyboard and touchpad events will 

00:09:10.670 --> 00:09:12.950
 Are connected to your app, 

00:09:12.950 --> 00:09:17.720
 As well as touch events if your Chromebook supports them. 

00:09:17.720 --> 00:09:19.240
 Meanwhile, your application is still 

00:09:19.240 --> 00:09:21.840
 Works as an Android app. 

00:09:22.540 --> 00:09:24.480
 Since we're running a full Android stack, 

00:09:24.480 --> 00:09:27.230
 The Marshmallow API is available to you. 

00:09:27.230 --> 00:09:29.040
 This includes Google Play services. 

00:09:29.040 --> 00:09:31.220
 So things like in-app payments 

00:09:31.220 --> 00:09:33.430
 They will be available in Chromebooks for the consumer. 

00:09:33.430 --> 00:09:35.290
 As we will not add any new APIs, 

00:09:35.290 --> 00:09:37.272
 So there is nothing to learn this time. 

00:09:40.400 --> 00:09:42.160
 All system services work, 

00:09:42.160 --> 00:09:45.160
 And all interactions between the system services and your application 

00:09:45.160 --> 00:09:47.300
 Are exactly as you expect. 

00:09:47.300 --> 00:09:50.356
 This includes things such as application lifecycle events. 

00:09:53.220 --> 00:09:55.600
 Finally, the equipment is called, 

00:09:55.600 --> 00:09:57.220
 You do not need to worry about anything. 

00:10:00.330 --> 00:10:02.890
 I will be clear, while the applications can 

00:10:02.890 --> 00:10:05.500
 To run on Chrome OS, we still need to 

00:10:05.500 --> 00:10:08.412
 Chrome OS users agree to use this feature. 

00:10:08.412 --> 00:10:10.690
 We understand that there are scenarios where people do not want to 

00:10:10.690 --> 00:10:13.780
 To do so yet. 

00:10:13.780 --> 00:10:16.290
 We also provide users from educational institutions, 

00:10:16.290 --> 00:10:19.540
 Additional policies can enforce if and which applications can work 

00:10:19.540 --> 00:10:23.440
 On the devices they manage. 

00:10:23.440 --> 00:10:25.660
 Well, when does this become available? 

00:10:25.660 --> 00:10:29.800
 For you as developers, we will do that 

00:10:29.800 --> 00:10:30.950
 On Chrome OS 53. 

00:10:30.950 --> 00:10:34.960
 This should be available on Dev Channel in June, 

00:10:34.960 --> 00:10:37.050
 And 53 should be generally available 

00:10:37.050 --> 00:10:39.346
 For all users in the fixed channel in September, 

00:10:39.346 --> 00:10:41.250
 So you still have some time to get ready. 

00:10:43.340 --> 00:10:45.790
 We will start with the support of three devices, the Asus 10-inch Flip 

00:10:45.790 --> 00:10:48.420
 And Acer Chromebook R11 

00:10:48.420 --> 00:10:51.106
 And Chromebook Pixel 2015. 

00:10:51.106 --> 00:10:52.840
 We will support more hardware gradually 

00:10:52.840 --> 00:10:55.410
 During the next major events so continue to follow us. 

00:10:55.410 --> 00:10:57.260
 This is the URL where you can inspect 

00:10:57.260 --> 00:11:01.220
 Any devices will be supported in any version. 

00:11:01.220 --> 00:11:04.140
 So follow us. 

00:11:04.140 --> 00:11:06.820
 Well, it's great that most applications will work 

00:11:06.820 --> 00:11:08.892
 Outside the box without any changes in the node, 

00:11:08.892 --> 00:11:13.080
 But take a look at best practices 

00:11:13.080 --> 00:11:17.036
 Which can be taken into account in order for your app to work 

00:11:17.036 --> 00:11:18.890
 Much better on Chromebooks. 

00:11:22.830 --> 00:11:25.640
 There's a wide variety of shape factors in your Chromebook. 

00:11:25.640 --> 00:11:28.464
 All have an actual keyboard and a touchpad. 

00:11:28.464 --> 00:11:30.330
 Most of the devices we will provide support 

00:11:30.330 --> 00:11:32.640
 It also has a touch screen. 

00:11:32.640 --> 00:11:34.380
 Some are so convertible that they can 

00:11:34.380 --> 00:11:38.470
 Switch between shape factors for laptop and tablet computer. 

00:11:38.470 --> 00:11:41.005
 While we test applications, most of them are 

00:11:41.005 --> 00:11:43.130
 We found it worked very well 

00:11:43.130 --> 00:11:45.100
 With keyboard and mouse. 

00:11:45.100 --> 00:11:47.540
 However, they did not all work. 

00:11:47.540 --> 00:11:51.140
 It is therefore advisable that you as developers 

00:11:51.140 --> 00:11:55.230
 Take the test with a keyboard and a mouse. 

00:11:55.230 --> 00:11:58.830
 And also where basically there is new equipment available to you 

00:11:58.830 --> 00:12:02.180
 Why not benefit from it as much as possible. 

00:12:02.180 --> 00:12:04.850
 If the productivity applications can support 

00:12:04.850 --> 00:12:08.580
 Such as Quick Launch Keys. 

00:12:08.580 --> 00:12:11.451
 This will make users more productive. 

00:12:11.451 --> 00:12:13.450
 Some games even adjust themselves to control them 

00:12:13.450 --> 00:12:14.990
 Using the keyboard and mouse. 

00:12:26.280 --> 00:12:29.610
 Well, now to the important part in the coding. 

00:12:29.610 --> 00:12:31.490
 By default, all Android apps 

00:12:31.490 --> 00:12:35.550
 Touch screen equipment is required. 

00:12:35.550 --> 00:12:38.260
 Now, I've mentioned before that not all Chromebooks 

00:12:38.260 --> 00:12:40.510
 It will provide a touch screen. 

00:12:40.510 --> 00:12:45.060
 So it is very important in the AndroidManifest.xml file 

00:12:45.060 --> 00:12:48.230
 That specifies the android.hardware.touchscreen property 

00:12:48.230 --> 00:12:51.071
 To be not required. 

00:12:51.071 --> 00:12:52.820
 This will allow the application to appear 

00:12:52.820 --> 00:12:54.640
 In the Play Store on all Chromebooks 

00:12:54.640 --> 00:12:57.850
 Instead of Chromebooks that only support the touch screen. 

00:12:57.850 --> 00:12:59.850
 If you exit this presentation with one command 

00:12:59.850 --> 00:13:01.190
 In your mind, let it be. 

00:13:04.650 --> 00:13:07.220
 Well, best practices for multiple windows. 

00:13:07.220 --> 00:13:09.910
 On the laptop, everyone uses multiple windows 

00:13:09.910 --> 00:13:12.180
 For productivity assuming there is more 

00:13:12.180 --> 00:13:14.400
 Pixels are available on the screen. 

00:13:14.400 --> 00:13:15.900
 Now, I mentioned several times before 

00:13:15.900 --> 00:13:19.080
 We support Marshmallow API interface, 

00:13:19.080 --> 00:13:22.810
 Marshallow has no programming interfaces for multiple windows. 

00:13:22.810 --> 00:13:25.410
 I also mentioned that we will not add new APIs. 

00:13:25.410 --> 00:13:28.329
 So how does it work? 

00:13:28.329 --> 00:13:30.870
 In order to reduce the amount of work required of all, 

00:13:30.870 --> 00:13:32.600
 We will only support some schemes 

00:13:32.600 --> 00:13:35.030
 Which your app probably supports. 

00:13:39.360 --> 00:13:40.960
 First, we have a horizontal scheme. 

00:13:40.960 --> 00:13:42.820
 This is the default schema. 

00:13:42.820 --> 00:13:47.590
 This uses the aspect ratio to the Nexus 9. 

00:13:50.450 --> 00:13:53.560
 We also support a vertical layout that works just like Nexus 5. 

00:13:56.120 --> 00:13:57.800
 We also have magnifying windows 

00:13:57.800 --> 00:14:02.970
 Which takes all the pixels available in the screen. 

00:14:02.970 --> 00:14:04.730
 Finally for the convertible devices 

00:14:04.730 --> 00:14:08.540
 We have a touch mode which is much like placing a zoom, 

00:14:08.540 --> 00:14:11.730
 But it hides window decoration and bottom shelf, 

00:14:11.730 --> 00:14:13.670
 So it's similar to the expanded Android mode. 

00:14:16.930 --> 00:14:19.590
 We added some window controls to switch between all 

00:14:19.590 --> 00:14:21.300
 Available Charts. 

00:14:21.300 --> 00:14:24.900
 This allows both users and developers 

00:14:24.900 --> 00:14:27.002
 By choosing the appropriate balance of information density 

00:14:27.002 --> 00:14:30.060
 In the sizes and schemes in which their applications were originally designed. 

00:14:31.100 --> 00:14:34.650
 Now some things you should take into consideration. 

00:14:34.650 --> 00:14:37.430
 As in the application of multiple windows in the system N 

00:14:37.430 --> 00:14:40.650
 We will not change the application lifecycle model. 

00:14:40.650 --> 00:14:43.030
 Specifically one application will be in the onResume state, 

00:14:43.030 --> 00:14:45.717
 This is the current window. 

00:14:45.717 --> 00:14:47.550
 And all remaining windows and applications 

00:14:47.550 --> 00:14:50.950
 Are in the case of onPause. 

00:14:50.950 --> 00:14:53.140
 The memory access prevention mechanism is also integrated 

00:14:53.140 --> 00:14:55.110
 With the rest of the operating system, 

00:14:55.110 --> 00:14:57.010
 And take into account the z-order of the windows 

00:14:57.010 --> 00:15:00.900
 When calculating the final assessment. 

00:15:00.900 --> 00:15:04.420
 So that applications that have been used less recently 

00:15:04.420 --> 00:15:05.380
 Will stop first. 

00:15:08.810 --> 00:15:14.090
 Well where to change direction 

00:15:14.090 --> 00:15:18.044
 Also changes the size of the window in your device, 

00:15:18.044 --> 00:15:20.690
 You need to tell the right direction for your Android screen 

00:15:20.690 --> 00:15:23.432
 So that you use only the direction you support. 

00:15:27.010 --> 00:15:28.770
 Now, it is also important 

00:15:28.770 --> 00:15:31.100
 Read this document for Handle Runtime Changes 

00:15:31.100 --> 00:15:32.815
 In official Android documentation. 

00:15:36.450 --> 00:15:38.290
 There will be things you do not expect it to be 

00:15:38.290 --> 00:15:42.630
 Will change wherever the trend changes. 

00:15:42.630 --> 00:15:44.410
 For example the width and length of the screen 

00:15:44.410 --> 00:15:46.510
 They will change in ways you do not necessarily expect 

00:15:46.510 --> 00:15:48.470
 It is on normal devices 

00:15:48.470 --> 00:15:50.830
 It changes only between them, and here 

00:15:50.830 --> 00:15:53.780
 You can have completely different values. 

00:15:53.780 --> 00:15:57.010
 Also DPI density settings can be changed 

00:15:57.010 --> 00:15:59.900
 When the trend is turned. 

00:15:59.900 --> 00:16:02.580
 And also, it is important - make sure to cancel any resources 

00:16:02.580 --> 00:16:03.914
 For cache. 

00:16:03.914 --> 00:16:05.330
 Because that's what the trend has changed 

00:16:05.330 --> 00:16:08.050
 You are actually changing the device, 

00:16:08.050 --> 00:16:10.710
 You must be careful to load the right resources 

00:16:10.710 --> 00:16:13.910
 After changing direction. 

00:16:13.910 --> 00:16:16.760
 Now these two things are important for Android N, 

00:16:16.760 --> 00:16:18.920
 So you'd better do them now. 

00:16:23.590 --> 00:16:26.366
 Also use the correct correlations for tasks. 

00:16:26.366 --> 00:16:30.410
 As explained in the presentation it is possible for a task 

00:16:30.410 --> 00:16:33.370
 To launch another activity in a new mission. 

00:16:33.370 --> 00:16:35.370
 This will display a new window. 

00:16:35.370 --> 00:16:37.890
 But if you intend to have a conditional window, 

00:16:37.890 --> 00:16:41.810
 You must put that activity in the same task. 

00:16:41.810 --> 00:16:45.245
 Otherwise the errors will reach the application 

00:16:45.245 --> 00:16:46.370
 You did not expect it. 

00:16:49.480 --> 00:16:52.450
 Finally, consider the onPaused state. 

00:16:52.450 --> 00:16:54.110
 While your app is paused, 

00:16:54.110 --> 00:16:56.207
 It is still visible, so be careful not to 

00:16:56.207 --> 00:16:57.790
 No display works because it is 

00:16:57.790 --> 00:16:59.100
 It may seem strange to the user. 

00:16:59.100 --> 00:17:01.298
 It will also consume a lot of battery. 

00:17:04.831 --> 00:17:06.990
 Use and recover backups effectively 

00:17:06.990 --> 00:17:08.781
 Is very important. 

00:17:08.781 --> 00:17:10.530
 One of the most important features of Chromebooks 

00:17:10.530 --> 00:17:14.800
 Is that users can simply get rid of their devices and buy new ones, 

00:17:14.800 --> 00:17:17.310
 They register entry, all their applications and their numbers 

00:17:17.310 --> 00:17:18.848
 Will be present. 

00:17:18.848 --> 00:17:22.589
 So it is not a very necessary condition to support backups and recover them, 

00:17:22.589 --> 00:17:25.690
 But it is a very good idea and users will love it. 

00:17:25.690 --> 00:17:27.564
 Make sure you read the official documents 

00:17:27.564 --> 00:17:30.420
 About Backup &amp; Restore. 

00:17:30.770 --> 00:17:33.561
 There are also some scenarios where Chromebooks are 

00:17:33.561 --> 00:17:35.560
 Share between a large number 

00:17:35.560 --> 00:17:36.750
 Of users. 

00:17:36.750 --> 00:17:38.750
 For example in education, 

00:17:38.750 --> 00:17:40.880
 Students do not have personal Chromebooks 

00:17:40.880 --> 00:17:43.230
 Where they are shared by students. 

00:17:43.230 --> 00:17:45.610
 So if you are writing an application for educational purposes 

00:17:45.610 --> 00:17:48.080
 Be sure to take that scenario into account 

00:17:48.080 --> 00:17:50.310
 Be aware of the local storage you are using. 

00:17:53.517 --> 00:17:56.440
 In general, Chromebooks support fewer sensors 

00:17:56.440 --> 00:17:58.620
 Compared to mobile devices. 

00:17:58.620 --> 00:18:01.370
 For example, most Android developers 

00:18:01.370 --> 00:18:05.110
 They are used to having a GPS device for accurate location information. 

00:18:06.398 --> 00:18:08.094
 Chromebooks do not have a GPS device, 

00:18:08.094 --> 00:18:09.510
 But she still has access 

00:18:09.510 --> 00:18:12.270
 On location information using Wi-Fi. 

00:18:12.270 --> 00:18:15.900
 This may be enough to find out the best restaurants around you, 

00:18:15.900 --> 00:18:18.962
 But it may not be enough to just take a Chromebook 

00:18:18.962 --> 00:18:22.390
 Then put it in your car and expect to get directions to move around step by step. 

00:18:24.220 --> 00:18:27.590
 If you are advised to be careful not to ask for equipment 

00:18:27.590 --> 00:18:30.002
 May not be available. 

00:18:30.002 --> 00:18:31.460
 Of course if your application 

00:18:31.460 --> 00:18:33.480
 Requires a hardware that 

00:18:33.480 --> 00:18:36.340
 Not available on Chromebooks We'll take your decision into consideration 

00:18:36.340 --> 00:18:39.278
 We will not show that app in the Play Store for Chromebooks. 

00:18:46.267 --> 00:18:47.850
 There are some code properties 

00:18:47.850 --> 00:18:50.660
 Which we will not support in Chrome OS. 

00:18:52.350 --> 00:18:55.680
 We want users to have an integrated Chrome OS experience, 

00:18:55.680 --> 00:18:57.990
 The applications will allocate some parts of the user interface 

00:18:57.990 --> 00:18:59.700
 Will not be available. 

00:18:59.700 --> 00:19:03.620
 Applications that provide custom input devices and widgets for applications 

00:19:03.620 --> 00:19:06.670
 Live screen backgrounds or home screens will not be supported. 

00:19:08.670 --> 00:19:11.725
 Chrome OS will also be the device manager for Android, 

00:19:11.725 --> 00:19:13.350
 So the applications you declare are 

00:19:13.350 --> 00:19:16.131
 Manage the device or users 

00:19:16.131 --> 00:19:17.130
 Will not be supported. 

00:19:23.700 --> 00:19:26.860
 We will initially ship to Android Marshmallow 

00:19:26.860 --> 00:19:31.040
 But it is a good idea to focus some effort on modernization 

00:19:31.040 --> 00:19:33.480
 To N in the end because you will bring 

00:19:33.480 --> 00:19:35.250
 Lots of properties that will improve 

00:19:35.250 --> 00:19:37.820
 Productivity desktop users. 

00:19:37.820 --> 00:19:40.020
 For example you will be able to 

00:19:40.020 --> 00:19:41.930
 Resize all activities instead of being 

00:19:41.930 --> 00:19:43.840
 Bound in one of the four schemes 

00:19:43.840 --> 00:19:45.670
 Which we now support. 

00:19:45.670 --> 00:19:49.276
 You will also be able to use drag and drop between applications. 

00:19:49.276 --> 00:19:51.650
 There will be a new API for the mouse pointer and available. 

00:19:54.270 --> 00:19:55.900
 So in order to know more about N, 

00:19:55.900 --> 00:19:59.500
 You can see these two presentations 

00:19:59.500 --> 00:20:02.720
 Which were broadcast yesterday and today here in I / O, 

00:20:02.720 --> 00:20:05.800
 "What's New in Android" and "Multi-Window Mode" 

00:20:05.800 --> 00:20:09.350
 You can also view the official Android N preview documentation. 

00:20:12.690 --> 00:20:15.800
 Well, if you have more questions about this 

00:20:15.800 --> 00:20:17.550
 Official documents may be used 

00:20:17.550 --> 00:20:20.150
 For Android apps on Chromebooks. 

00:20:20.150 --> 00:20:22.710
 You can also ask questions at Stack Overflow 

00:20:22.710 --> 00:20:24.660
 Or post questions on the Android G + Community. 

00:20:29.500 --> 00:20:32.990
 Now before I leave, many of you have tried 

00:20:32.990 --> 00:20:35.060
 Access the early day announcement 

00:20:35.060 --> 00:20:37.780
 But they could not reach it, so .. 

00:20:37.780 --> 00:20:40.970
 We will return the offer we made early today. 

00:20:40.970 --> 00:20:43.311
 If here is Katie that will offer you the previous offer. 

00:20:45.945 --> 00:20:47.055
 &lt;Applause&gt;. 

00:20:50.920 --> 00:20:52.820
 (Katy): Well thank you so much Louis. 

00:20:52.820 --> 00:20:54.736
 (Lewis): Can we change the offer? 

00:20:57.740 --> 00:20:59.310
 (Katy): Well, very good. 

00:20:59.310 --> 00:21:03.079
 If we apologize to you this morning because the place was a little tight. 

00:21:03.079 --> 00:21:05.020
 So we decided with a few extra minutes, 

00:21:05.020 --> 00:21:08.520
 To bring back your offer. 

00:21:08.520 --> 00:21:12.750
 So unfortunately, the secondary delivery will be a little different. 

00:21:13.460 --> 00:21:14.500
 Hope to be better. 

00:21:14.500 --> 00:21:19.480
 But here we have Pixel 2. 

00:21:19.480 --> 00:21:21.770
 Looks like a regular Chromebook. 

00:21:21.770 --> 00:21:23.270
 We have a Chrome browser here. 

00:21:23.270 --> 00:21:27.140
 But it is clear that you now have a Play Store on the shelf here. 

00:21:27.140 --> 00:21:29.570
 So we will advance and occupy it. 

00:21:29.570 --> 00:21:31.963
 So here we can actually review our applications. 

00:21:34.307 --> 00:21:36.890
 This looks a lot like the normal Play Store, so let's move forward 

00:21:36.890 --> 00:21:38.220
 And prove something. 

00:21:38.220 --> 00:21:41.720
 So I thought we had decided that Bejeweled was a very good game. 

00:21:41.720 --> 00:21:45.220
 To look for them and to progress and prove them. 

00:21:50.240 --> 00:21:51.740
 Look at this. 

00:21:51.740 --> 00:21:54.080
 By chance, it seems that the wife was 

00:21:54.080 --> 00:21:58.820
 She asks me to make a poster for my daughter's birthday party. 

00:21:59.990 --> 00:22:02.510
 And as a good employee I will come forward 

00:22:02.510 --> 00:22:08.930
 "I'm glad about that. 

00:22:08.930 --> 00:22:12.230
 The great thing about how we integrated Android 

00:22:12.230 --> 00:22:14.290
 Is that we get a nice internal response that 

00:22:14.290 --> 00:22:16.145
 You expect it on your tablets and phones, 

00:22:16.145 --> 00:22:18.860
 So I will forward and send this now. 

00:22:18.860 --> 00:22:19.690
 Great. 

00:22:19.690 --> 00:22:21.530
 So, let's go ahead and do this. 

00:22:21.530 --> 00:22:25.240
 You already installed Photoshop Mix from the Play Store, 

00:22:25.240 --> 00:22:26.840
 So I will come forward and occupy it now. 

00:22:26.840 --> 00:22:29.830
 If this is indeed a picture of a daughter he was, 

00:22:29.830 --> 00:22:33.750
 I think the doll is fed a little. 

00:22:33.750 --> 00:22:34.750
 It's strange. 

00:22:34.750 --> 00:22:36.660
 Anyway, I was told it 

00:22:36.660 --> 00:22:40.210
 It would be more appropriate to put ice cream here instead. 

00:22:40.210 --> 00:22:43.050
 So I'll come forward and try to find some ice cream here. 

00:22:43.050 --> 00:22:45.760
 If fortunately from Adobe stock they have .. 

00:22:45.760 --> 00:22:47.740
 Some wonderful pictures of ice cream. 

00:22:47.740 --> 00:22:50.417
 It's actually very strange, like half a napolean ice cream 

00:22:50.417 --> 00:22:52.060
 With some pistachios. 

00:22:54.320 --> 00:22:56.390
 But it looks a little big, so we did not advance 

00:22:56.390 --> 00:22:58.854
 We can use touch screen 

00:22:58.854 --> 00:22:59.770
 Just as we expect. 

00:22:59.770 --> 00:23:03.910
 We can progress and miniaturize ice cream. 

00:23:03.910 --> 00:23:07.557
 This is a little better than the pen I think. 

00:23:07.557 --> 00:23:09.640
 One of the problems here is obvious now 

00:23:09.640 --> 00:23:12.370
 That the biscuit over her hand, 

00:23:12.370 --> 00:23:14.650
 So we will progress and lack this. 

00:23:14.650 --> 00:23:17.430
 We can round up more and more little. 

00:23:17.430 --> 00:23:20.360
 We can advance and use the touch screen. 

00:23:20.360 --> 00:23:21.860
 That was a piece we did not want. 

00:23:21.860 --> 00:23:26.790
 We will advance and ... 

00:23:26.790 --> 00:23:28.140
 - Here it is. -&gt; Applause. 

00:23:30.630 --> 00:23:33.990
 This live use of Photoshop is not my best work. 

00:23:35.345 --> 00:23:37.285
 &lt;Applause&gt; 

00:23:40.370 --> 00:23:43.060
 Most likely will appear in my next performance evaluation, 

00:23:43.060 --> 00:23:45.234
 But no problem let's go ahead and keep this anyway. 

00:23:48.636 --> 00:23:49.970
 Well we keep it. 

00:23:49.970 --> 00:23:52.990
 This sounds great. 

00:23:52.990 --> 00:23:56.240
 If I'm told he wants a poster, so I will 

00:23:56.240 --> 00:23:58.840
 Open Word for this. 

00:23:58.840 --> 00:24:01.320
 The really nice thing about this is that I can now start 

00:24:01.320 --> 00:24:04.860
 I have normal Word here, I put some pictures 

00:24:04.860 --> 00:24:06.650
 For Lian's birthday. 

00:24:06.650 --> 00:24:07.980
 there he is. 

00:24:07.980 --> 00:24:10.570
 This sounds very good. 

00:24:10.570 --> 00:24:14.102
 If now I want to bring this back to his wife. 

00:24:14.102 --> 00:24:17.020
 So let's move forward and we can press that we want 

00:24:17.020 --> 00:24:20.180
 Share this as an attachment. 

00:24:20.180 --> 00:24:22.080
 Come on, open Gmail. 

00:24:22.080 --> 00:24:24.270
 We heard it was a very good product. 

00:24:24.270 --> 00:24:26.213
 We go forward and send this to Nan. 

00:24:29.810 --> 00:24:30.720
 This sounds great. 

00:24:30.720 --> 00:24:33.681
 Let's go forward and send this. 

00:24:33.681 --> 00:24:34.555
 What do we know? 

00:24:34.555 --> 00:24:38.610
 By chance one of them attacks me on Clash of Clans. 

00:24:38.610 --> 00:24:43.180
 So again, how we've integrated the Android structure 

00:24:43.180 --> 00:24:45.680
 Chat has become operational. 

00:24:45.680 --> 00:24:49.030
 This is a martyr here. 

00:24:49.030 --> 00:24:53.800
 We will move forward .. It would be nice to inspect our village. 

00:24:53.800 --> 00:24:55.730
 If Clash of Clans. 

00:24:55.730 --> 00:24:57.070
 We will move forward and close Photoshop. 

00:24:57.070 --> 00:24:58.195
 We no longer need it. 

00:25:01.700 --> 00:25:04.070
 Let's make Clash of Clans work with us. 

00:25:04.070 --> 00:25:06.570
 Oh my God. 

00:25:06.570 --> 00:25:09.231
 They have never seen a show that does not work on stage. 

00:25:13.160 --> 00:25:18.400
 We will progress .. We have a slight error known here. 

00:25:18.400 --> 00:25:23.484
 Anyway, we will move forward and continue from this. 

00:25:23.484 --> 00:25:24.280
 I apologize here. 

00:25:24.280 --> 00:25:26.280
 Another great game is Clash of Clans, 

00:25:26.280 --> 00:25:29.940
 What I like most is Galaxy on Fire. 

00:25:29.940 --> 00:25:34.577
 Here we can use the desktop GPU. 

00:25:34.577 --> 00:25:35.660
 Everything is very smooth. 

00:25:35.660 --> 00:25:38.020
 I do not know if it sounds too tired to you 

00:25:38.020 --> 00:25:42.130
 In attendance but in any case very good performance here too. 

00:25:44.220 --> 00:25:47.980
 However, I can also purchase in-app. 

00:25:47.980 --> 00:25:51.756
 So I can go straight and go to buy extras. 

00:25:51.756 --> 00:25:53.980
 I offer and press buy. 

00:25:53.980 --> 00:25:57.006
 Now this will be available on my phone ... 

00:25:57.006 --> 00:26:03.420
 The payment process worked .. great and on my tablet too. 

00:26:03.420 --> 00:26:06.150
 If again, this was just a quick look at what we did too 

00:26:06.150 --> 00:26:07.330
 By showing it this morning. 

00:26:07.330 --> 00:26:10.390
 We are, of course, very excited to work with you all 

00:26:10.390 --> 00:26:12.423
 To bring your apps to Chromebooks. 

00:26:12.423 --> 00:26:13.381
 So thank you very much. 

00:26:16.486 --> 00:26:18.546
 &lt;Applause&gt; 

00:26:21.176 --> 00:26:23.550
 (Lewis): Well that's all we have. 

00:26:23.550 --> 00:26:24.860
 Enjoy the rest of the show. 

00:26:24.860 --> 00:26:27.110
 If you have any questions to ask in the Spaces app, 

00:26:27.110 --> 00:26:29.280
 Or we will stay with you on stage. 

00:26:29.280 --> 00:26:30.000
 thank you. 

00:26:30.000 --> 00:26:31.330
 Good-bye. 

