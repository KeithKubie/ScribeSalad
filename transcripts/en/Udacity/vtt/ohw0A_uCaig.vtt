WEBVTT
Kind: captions
Language: en

00:00:04.902 --> 00:00:07.936
Like most other programming languages,

00:00:07.936 --> 00:00:12.760
JavaScript gives us evaluators to compare expressions.

00:00:12.760 --> 00:00:16.910
We can see if data are less than, greater than, equal to, or

00:00:16.910 --> 00:00:19.710
some combination of those three.

00:00:19.710 --> 00:00:22.610
For this lesson, we'll be sticking with equality.

00:00:22.610 --> 00:00:26.990
&gt;&gt; And Equal To uses three equal signs, not two.

00:00:26.990 --> 00:00:28.150
&gt;&gt; Sort of.

00:00:28.150 --> 00:00:33.820
It can use either three equal signs or two, but

00:00:33.820 --> 00:00:36.930
the three equal signed version is slightly safer.

00:00:36.930 --> 00:00:40.330
There's a link in the instructor's notes explaining the difference.

00:00:40.330 --> 00:00:44.020
Let's run through a simple if statement to check out the syntax and

00:00:44.020 --> 00:00:45.320
give evaluation a try.

00:00:46.400 --> 00:00:49.960
&gt;&gt; Like if some condition is true, then do something.

00:00:51.400 --> 00:00:54.410
There's an if statement within the parenthesis, and then if it

00:00:54.410 --> 00:00:58.380
evaluates to true, we perform whatever action comes between the curly braces.

00:00:59.570 --> 00:01:01.740
If the condition isn't equal to true,

00:01:01.740 --> 00:01:04.940
we can use an else statement to do something else.

00:01:04.940 --> 00:01:08.850
In that case we simply use the keyword else, add another curly brace, and

00:01:08.850 --> 00:01:11.630
then an alternate set of commands that performs if this

00:01:11.630 --> 00:01:13.240
original condition isn't true.

00:01:14.560 --> 00:01:18.440
This syntax for if statements follows the same patterns as if statements in

00:01:18.440 --> 00:01:21.230
Python, but notice that we have to include our conditions in

00:01:21.230 --> 00:01:25.930
parenthesis here and that the statements that perform if this condition is true,

00:01:25.930 --> 00:01:27.950
come between curly braces.

00:01:27.950 --> 00:01:31.710
Also note, there's no colon after the condition in JavaScript.

00:01:31.710 --> 00:01:33.370
&gt;&gt; Here's an example.

00:01:33.370 --> 00:01:39.170
If tired equals true, drink coffee, else, drink water.

00:01:40.200 --> 00:01:44.970
If I'm tired, I'll go get some coffee, otherwise I'll drink water.

00:01:46.710 --> 00:01:49.630
So how do you think we'll use if statements to build the resume?

00:01:51.210 --> 00:01:55.170
&gt;&gt; Looking at our header, we've got these skills which we may or

00:01:55.170 --> 00:01:57.230
may not want to include.

00:01:57.230 --> 00:02:00.900
If we do decide to include this list, we'll first need to create it and

00:02:00.900 --> 00:02:03.770
we'll need to create these skills at a glance heading.

00:02:03.770 --> 00:02:06.230
So, how can we see if we need to create the list?

00:02:06.230 --> 00:02:08.229
I think we should use an If statement.

00:02:08.229 --> 00:02:10.590
You know what, this is going to make a good quiz.

00:02:10.590 --> 00:02:12.200
&gt;&gt; Yeah, I think so too.

00:02:12.200 --> 00:02:13.770
&gt;&gt; Write an if statement that checks whether or

00:02:13.770 --> 00:02:16.630
not there are any skills in the biography object.

00:02:16.630 --> 00:02:18.300
Write an if statement that checks whether or

00:02:18.300 --> 00:02:20.930
not there are any skills in the bio object.

00:02:20.930 --> 00:02:24.820
If there are skills, the if statement should evaluate to true and

00:02:24.820 --> 00:02:28.180
then append HTMLskillsStart to the div with idheader.

00:02:28.180 --> 00:02:33.100
Once that's done, append each skill to the element with id equalsskills,

00:02:33.100 --> 00:02:36.260
by formatting them with HTMLskills.

00:02:36.260 --> 00:02:40.190
You can find HTMLskills in helper JS if you're interested in what it looks like.

00:02:40.190 --> 00:02:43.390
When you've finished up and you can see the skills on the page, check this box.

