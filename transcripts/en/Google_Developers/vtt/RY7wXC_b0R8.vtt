WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.200
[MUSIC PLAYING]

00:00:04.200 --> 00:00:05.230
TIAN LIM: Hi, everyone.

00:00:05.230 --> 00:00:10.822
Welcome to the first ever
games track at Google I/O.

00:00:10.822 --> 00:00:13.282
[APPLAUSE]

00:00:16.067 --> 00:00:17.650
I don't know if you
guys have noticed,

00:00:17.650 --> 00:00:21.350
but Google I/O is kind
of a big deal to Google.

00:00:21.350 --> 00:00:26.360
And so having our first ever
games-dedicated track is huge.

00:00:26.360 --> 00:00:31.430
This is the first of many talks
for game developers this week.

00:00:31.430 --> 00:00:34.750
So make sure to look for
the deep technical sessions,

00:00:34.750 --> 00:00:37.420
sign up for a game
review, and check out

00:00:37.420 --> 00:00:39.940
the demos in The Garage.

00:00:39.940 --> 00:00:44.770
So I'm Tian, and I run products
and UX for Google Play.

00:00:44.770 --> 00:00:47.650
Like many of you,
probably got your start

00:00:47.650 --> 00:00:50.960
in computer science
because of games.

00:00:50.960 --> 00:00:53.480
For me, I was four
years old when

00:00:53.480 --> 00:00:57.800
I started playing and
programming on an Atari 800,

00:00:57.800 --> 00:01:00.600
and it has changed my life.

00:01:00.600 --> 00:01:02.120
I've been lucky
enough to help build

00:01:02.120 --> 00:01:06.650
the Nintendo GameCube, the Xbox
360, and the Playstation 4.

00:01:06.650 --> 00:01:09.320
And it has just
been a huge pleasure

00:01:09.320 --> 00:01:13.400
to help bring better and better
games to more and more people

00:01:13.400 --> 00:01:15.470
around the planet.

00:01:15.470 --> 00:01:18.610
Now, I'm here at Google,
where, collectively, we

00:01:18.610 --> 00:01:21.610
address the largest population
of gamers on the planet.

00:01:25.500 --> 00:01:28.890
What we know as game developers
and platform developers

00:01:28.890 --> 00:01:31.400
is that games need reach.

00:01:31.400 --> 00:01:33.660
The more people you
can reach, the better

00:01:33.660 --> 00:01:35.890
your chances for success.

00:01:35.890 --> 00:01:38.760
That means being able to
get your games running

00:01:38.760 --> 00:01:40.410
wherever players are--

00:01:40.410 --> 00:01:46.450
on their phones, tablets,
laptops, TVs, everywhere.

00:01:46.450 --> 00:01:50.980
We want to help bring your
games to everyone on the planet,

00:01:50.980 --> 00:01:53.670
and we want to help
you, the developers,

00:01:53.670 --> 00:01:57.320
to be as successful as possible.

00:01:57.320 --> 00:02:00.860
We'll share how Google
Cloud can help your game

00:02:00.860 --> 00:02:03.740
scale with their
amazing infrastructure

00:02:03.740 --> 00:02:08.780
and bring new capabilities
like ML to all platforms.

00:02:08.780 --> 00:02:12.470
Then you'll also hear how
Stadia plans to change the way

00:02:12.470 --> 00:02:15.980
players access games and
how you, the developers,

00:02:15.980 --> 00:02:19.660
can reach all those players.

00:02:19.660 --> 00:02:22.930
But first, I'm going to start
with how Android and Google

00:02:22.930 --> 00:02:28.320
Play can help you reach more
devices and more people.

00:02:28.320 --> 00:02:31.380
Android is the most popular
operating system on the planet

00:02:31.380 --> 00:02:34.950
and powers the largest
game platform ever built.

00:02:34.950 --> 00:02:39.990
We reach over 2.5 billion active
devices, about half of which

00:02:39.990 --> 00:02:42.120
are playing games.

00:02:42.120 --> 00:02:44.700
This number continues
to grow as we

00:02:44.700 --> 00:02:47.340
expand the ecosystem
to new markets

00:02:47.340 --> 00:02:51.430
and bring new players
into the fold.

00:02:51.430 --> 00:02:56.630
A lot of recent growth has
come from emerging markets,

00:02:56.630 --> 00:03:00.310
such as India,
Brazil, and Indonesia.

00:03:00.310 --> 00:03:04.480
And they're not just playing
your games, they're monetizing.

00:03:04.480 --> 00:03:07.240
New paying users
in emerging markets

00:03:07.240 --> 00:03:11.200
have tripled year over
year on Google Play.

00:03:11.200 --> 00:03:14.350
Now these users may
be hard to reach.

00:03:14.350 --> 00:03:17.830
They may be using unique
payment options or devices

00:03:17.830 --> 00:03:19.120
that you haven't seen before.

00:03:19.120 --> 00:03:20.620
And of course, all
those devices are

00:03:20.620 --> 00:03:24.420
running an OS that wasn't
actually built for games.

00:03:24.420 --> 00:03:27.820
We want to help make it easier.

00:03:27.820 --> 00:03:31.110
We're committed to helping
you achieve your vision

00:03:31.110 --> 00:03:34.920
by making it simpler to
build, optimize, and monetize

00:03:34.920 --> 00:03:36.900
your games.

00:03:36.900 --> 00:03:40.200
Let's start with some recent
work in tools and performance,

00:03:40.200 --> 00:03:45.610
an area we continue to
continue to invest heavily in.

00:03:45.610 --> 00:03:47.740
It's also near and
dear to my heart.

00:03:47.740 --> 00:03:51.640
I'm an old school console
and game optimization guy.

00:03:51.640 --> 00:03:54.880
I want access to
every byte and cycle

00:03:54.880 --> 00:03:57.810
that the hardware can offer.

00:03:57.810 --> 00:04:00.900
So we're making improvements
to memory management

00:04:00.900 --> 00:04:03.270
and multicore performance.

00:04:03.270 --> 00:04:07.170
In Android Q, our new memory
compaction improvements

00:04:07.170 --> 00:04:11.790
mean your game can stay resident
longer and have more memory

00:04:11.790 --> 00:04:13.820
to work with.

00:04:13.820 --> 00:04:17.769
We're also working with OEMs to
mitigate multicore scheduling

00:04:17.769 --> 00:04:22.100
issues so their devices
can be more predictable.

00:04:22.100 --> 00:04:25.120
We know we have a lot more to
do here, especially in profiling

00:04:25.120 --> 00:04:28.300
tools, and we're working on it.

00:04:28.300 --> 00:04:31.750
Now touchscreen
games in particular

00:04:31.750 --> 00:04:34.480
can really expose input latency.

00:04:34.480 --> 00:04:38.980
Every frame and millisecond
counts for the best experience.

00:04:38.980 --> 00:04:41.590
We've been working
closely with developers

00:04:41.590 --> 00:04:45.280
like Kabam and NetEase to
understand the underlying

00:04:45.280 --> 00:04:48.330
issues with the Android
display pipeline,

00:04:48.330 --> 00:04:51.220
and we have something
new to show you today.

00:04:51.220 --> 00:04:55.300
We're launching the
Android Frame Pacing API.

00:04:55.300 --> 00:04:58.990
This synchronizes your game
code and the device's display

00:04:58.990 --> 00:05:02.770
pipeline, resulting in
lower input latencies

00:05:02.770 --> 00:05:05.770
and much smoother frame rates.

00:05:05.770 --> 00:05:09.250
This is integrated into Unity,
and you can check it out

00:05:09.250 --> 00:05:11.080
in The Garage.

00:05:11.080 --> 00:05:14.110
And also, please check
out Fran's hilarious talk

00:05:14.110 --> 00:05:17.110
on Android optimisation later.

00:05:17.110 --> 00:05:20.120
He'll go into much more detail.

00:05:20.120 --> 00:05:22.790
We're working on many,
new, exciting features

00:05:22.790 --> 00:05:27.290
to help you measure and tune
performance, so stay tuned.

00:05:27.290 --> 00:05:28.790
Let's now talk about
how we can help

00:05:28.790 --> 00:05:32.250
you get your game discovered.

00:05:32.250 --> 00:05:35.260
Now the Google Play Console
provides many tools,

00:05:35.260 --> 00:05:38.080
helping you target, optimize,
and monitor your game

00:05:38.080 --> 00:05:40.240
across the Android fleet.

00:05:40.240 --> 00:05:43.420
And while it does enough
to fill 10, 20 talks,

00:05:43.420 --> 00:05:46.450
I'm just going to focus on
a few, recent updates most

00:05:46.450 --> 00:05:49.500
relevant to all of you.

00:05:49.500 --> 00:05:52.440
Pre-registration--
it's a best practice

00:05:52.440 --> 00:05:56.040
for building pre-launch demand,
to reach players earlier

00:05:56.040 --> 00:05:57.750
in their lifecycle.

00:05:57.750 --> 00:06:01.650
We launched to general
availability at GDC,

00:06:01.650 --> 00:06:05.610
and many developers have been
using this to great success.

00:06:05.610 --> 00:06:07.350
Today, I'm pleased to
announce that we're

00:06:07.350 --> 00:06:10.140
expanding this feature
with the launch

00:06:10.140 --> 00:06:13.140
of pre-registration rewards.

00:06:13.140 --> 00:06:16.770
Now you can give users
special in-app items

00:06:16.770 --> 00:06:20.770
as a reward for
pre-registering, and this

00:06:20.770 --> 00:06:23.250
can have a powerful effect.

00:06:23.250 --> 00:06:27.310
Nexon recently used this feature
for their new game, "FAITH,"

00:06:27.310 --> 00:06:32.170
and players who received the
reward had over 20% higher

00:06:32.170 --> 00:06:33.570
retention at day 30.

00:06:37.650 --> 00:06:41.050
Now to help optimize
your acquisition funnel,

00:06:41.050 --> 00:06:43.140
custom store
listings has let you

00:06:43.140 --> 00:06:46.350
tailor your page based on
the country a visitor is

00:06:46.350 --> 00:06:48.120
coming from.

00:06:48.120 --> 00:06:50.350
We're expanding
this functionality

00:06:50.350 --> 00:06:53.700
so now you can customize based
on pre-registration state

00:06:53.700 --> 00:06:55.920
and install state.

00:06:55.920 --> 00:06:57.870
So here in the
middle is an example

00:06:57.870 --> 00:07:01.260
where a lapsed user
might be enticed back

00:07:01.260 --> 00:07:06.950
by a new game mode, and
this can drive reinstalls.

00:07:06.950 --> 00:07:09.360
We plan to launch this
in the near future

00:07:09.360 --> 00:07:13.900
and encourage you to sign
up for the EAP today.

00:07:13.900 --> 00:07:17.320
Now we've also extended
store listing experiments

00:07:17.320 --> 00:07:20.530
to work with custom
store listings

00:07:20.530 --> 00:07:24.430
so you can test and
optimize all these variants.

00:07:24.430 --> 00:07:27.790
This was the number one
feature request from our EAP,

00:07:27.790 --> 00:07:31.940
and we're very happy
to deliver it to you.

00:07:31.940 --> 00:07:34.490
Another way that we
help drive acquisition

00:07:34.490 --> 00:07:37.340
is by reducing install friction.

00:07:37.340 --> 00:07:40.640
For example, with
Google Play Instant,

00:07:40.640 --> 00:07:44.330
players can jump into a
demo of your game in seconds

00:07:44.330 --> 00:07:45.980
without installing.

00:07:45.980 --> 00:07:49.460
And we've seen that developers
who build great Instant

00:07:49.460 --> 00:07:53.720
experiences can improve
their install conversion

00:07:53.720 --> 00:07:54.380
by up to 20%.

00:07:58.480 --> 00:08:01.300
Streamlining game
delivery is another way

00:08:01.300 --> 00:08:04.250
we help reduce install friction.

00:08:04.250 --> 00:08:08.350
So we've already re-architected
how apps get delivered

00:08:08.350 --> 00:08:10.420
with the Android App Bundle.

00:08:10.420 --> 00:08:14.410
This has let us tailor
delivery to a user's device,

00:08:14.410 --> 00:08:17.200
sending only the necessary bits.

00:08:17.200 --> 00:08:21.160
And this results in
considerable size savings.

00:08:21.160 --> 00:08:27.740
Apps that switched to the Bundle
see an 11% install uplift.

00:08:27.740 --> 00:08:29.240
Now this is one way
we actually help

00:08:29.240 --> 00:08:32.840
you reach those users
in emerging markets.

00:08:32.840 --> 00:08:36.063
They often don't have as much
mobile data or storage as those

00:08:36.063 --> 00:08:37.355
of us in the developed markets.

00:08:39.900 --> 00:08:43.140
I'm happy to say that we're
extending the App Bundle now

00:08:43.140 --> 00:08:45.750
to include game assets.

00:08:45.750 --> 00:08:48.060
You publish a single
artifact containing

00:08:48.060 --> 00:08:52.170
your binary and its
assets, and Play

00:08:52.170 --> 00:08:54.210
will keep those
assets up-to-date just

00:08:54.210 --> 00:08:57.140
like we do with your binary.

00:08:57.140 --> 00:08:59.095
If you sign up
for the EAP today,

00:08:59.095 --> 00:09:00.470
you'll soon be
able to include up

00:09:00.470 --> 00:09:04.600
to a gigabyte of game
assets in your App Bundle.

00:09:04.600 --> 00:09:05.920
And we're not done.

00:09:05.920 --> 00:09:08.790
We're working hard on
additional delivery options,

00:09:08.790 --> 00:09:12.810
allowing greater flexibility,
larger game bundles,

00:09:12.810 --> 00:09:15.690
and the same optimized
device targeting

00:09:15.690 --> 00:09:19.610
that we provide elsewhere.

00:09:19.610 --> 00:09:21.920
Now reaching all
those users does

00:09:21.920 --> 00:09:25.250
nothing if your game
isn't up to snuff.

00:09:25.250 --> 00:09:29.910
Last year at I/O, we
launched category benchmarks

00:09:29.910 --> 00:09:33.440
so you could compare your
metrics with your category.

00:09:33.440 --> 00:09:37.080
We heard your feedback that
the categories were too broad,

00:09:37.080 --> 00:09:40.910
and it was hard to draw
meaningful comparisons.

00:09:40.910 --> 00:09:44.660
So today, we're introducing
developer-selected peer

00:09:44.660 --> 00:09:46.440
benchmarks.

00:09:46.440 --> 00:09:49.160
Now you can compare
your game against a set

00:09:49.160 --> 00:09:53.960
of 8 to 12 peers of your choice
and look for potential areas

00:09:53.960 --> 00:09:56.610
for improvement.

00:09:56.610 --> 00:09:58.680
Play Console is the
only place where

00:09:58.680 --> 00:10:02.320
you can find this level
of benchmarking accuracy.

00:10:02.320 --> 00:10:05.820
And we built a brand new
benchmarking platform

00:10:05.820 --> 00:10:08.415
to work with all the important
metrics across the console.

00:10:11.430 --> 00:10:14.610
Now the tools I've mentioned
help you build, promote,

00:10:14.610 --> 00:10:16.850
and distribute your games.

00:10:16.850 --> 00:10:20.240
Let me share some updates
to our billing platform.

00:10:20.240 --> 00:10:23.510
Since last I/O, we've
added seller support

00:10:23.510 --> 00:10:26.330
in over 30 new countries.

00:10:26.330 --> 00:10:30.590
We've also added 20 new
carrier-billing partnerships,

00:10:30.590 --> 00:10:35.030
expanding our DCB reach to
over a billion active devices.

00:10:35.030 --> 00:10:37.100
Again, this is
critical in helping

00:10:37.100 --> 00:10:39.320
those new users in
emerging markets

00:10:39.320 --> 00:10:42.320
transact on the platform.

00:10:42.320 --> 00:10:44.270
We're also constantly
running campaigns

00:10:44.270 --> 00:10:48.850
to optimize the purchase flow,
reduce latency, drive growth,

00:10:48.850 --> 00:10:53.280
and reduce cart abandonment.

00:10:53.280 --> 00:10:55.620
We're seeing a lot
of you see success

00:10:55.620 --> 00:10:57.690
with in-game subscriptions.

00:10:57.690 --> 00:11:00.750
Now I used to help run
a subs business at Hulu,

00:11:00.750 --> 00:11:04.680
and I learned just how hard
it is to do this really well.

00:11:04.680 --> 00:11:07.860
So at Google, we've been
building all the tricks

00:11:07.860 --> 00:11:10.260
of the trade into the platform.

00:11:10.260 --> 00:11:13.230
And tomorrow, we'll be talking
about several new features

00:11:13.230 --> 00:11:16.150
to help you manage
your subs business.

00:11:16.150 --> 00:11:18.408
If you'd like to learn more,
please attend our talks

00:11:18.408 --> 00:11:19.950
or check out the
demos in The Garage.

00:11:23.420 --> 00:11:25.320
So you've built a
high performance game.

00:11:25.320 --> 00:11:26.810
You've minimized its size.

00:11:26.810 --> 00:11:29.390
Now it's all about
getting discovered.

00:11:29.390 --> 00:11:32.420
Let me share some of the changes
we've made recently on Play

00:11:32.420 --> 00:11:35.290
to help you reach more people.

00:11:35.290 --> 00:11:38.620
Now with all the
creativity and innovation

00:11:38.620 --> 00:11:40.990
that goes into a
game, we know it's

00:11:40.990 --> 00:11:46.930
impossible to convey all of
that in a single app icon.

00:11:46.930 --> 00:11:49.330
We need to show the
actual gameplay.

00:11:49.330 --> 00:11:51.130
And today on the
Play Store, you may

00:11:51.130 --> 00:11:53.500
have to go through
many layers to see

00:11:53.500 --> 00:11:56.380
what a game is actually about.

00:11:56.380 --> 00:11:59.710
So we're doing more to
bring the soul of your game

00:11:59.710 --> 00:12:03.870
to the players right
on the Home page.

00:12:03.870 --> 00:12:06.900
We're sharing more of your
screenshots, trailers,

00:12:06.900 --> 00:12:12.330
and videos through several
new units, and it is working.

00:12:12.330 --> 00:12:14.730
In some cases, we see
click-through rates

00:12:14.730 --> 00:12:16.390
more than double.

00:12:16.390 --> 00:12:22.440
Now another important discovery
signal is your game's rating.

00:12:22.440 --> 00:12:26.340
For years, you have told us
that you want a rating based

00:12:26.340 --> 00:12:30.930
on what your game is today,
not what it was years ago.

00:12:30.930 --> 00:12:32.070
And we agree.

00:12:32.070 --> 00:12:35.130
We know how hard
and how much energy

00:12:35.130 --> 00:12:38.970
you put into improving
your games year over year.

00:12:38.970 --> 00:12:42.450
So I'm happy to share
that we're updating

00:12:42.450 --> 00:12:45.540
the way that average
rating is calculated.

00:12:45.540 --> 00:12:49.140
Instead of a lifetime
cumulative value,

00:12:49.140 --> 00:12:54.750
your new score will place
more weight on recent ratings.

00:12:54.750 --> 00:12:58.870
Now users will not see this
new rating until August,

00:12:58.870 --> 00:13:02.005
but you can all preview your
new rating in the Play Console

00:13:02.005 --> 00:13:02.505
today.

00:13:06.420 --> 00:13:10.480
We're also experimenting
with showing live ops events.

00:13:10.480 --> 00:13:12.810
This is a new way to
reach more players

00:13:12.810 --> 00:13:16.350
and drive engagements with
tournaments and sales,

00:13:16.350 --> 00:13:19.410
or after a major update.

00:13:19.410 --> 00:13:22.920
If you're interested,
please sign up for the EAP.

00:13:22.920 --> 00:13:25.200
Now I've only mentioned
a few of the many things

00:13:25.200 --> 00:13:26.580
we're doing to help you.

00:13:26.580 --> 00:13:28.350
To learn even
more, please attend

00:13:28.350 --> 00:13:32.670
the "What's New in Google
Play" tomorrow at 11:30.

00:13:32.670 --> 00:13:34.580
We hope you take
advantage of these tools

00:13:34.580 --> 00:13:37.020
and continue to share feedback
so we can continuously

00:13:37.020 --> 00:13:39.420
improve them.

00:13:39.420 --> 00:13:41.520
Now I've talked about
discovery and engagement

00:13:41.520 --> 00:13:45.900
on the Play Store, but
off-store is just as important.

00:13:45.900 --> 00:13:50.670
In 2018, over 50 billion hours
of gaming-related content

00:13:50.670 --> 00:13:55.650
was watched on YouTube by an
audience of over 200 million.

00:13:55.650 --> 00:13:58.930
Let me share some of the
interesting insights we found.

00:13:58.930 --> 00:14:02.940
So 90% of gamers turn
to YouTube every week

00:14:02.940 --> 00:14:04.950
to watch some gaming videos.

00:14:04.950 --> 00:14:06.420
I'm one of them.

00:14:06.420 --> 00:14:08.640
Thank you.

00:14:08.640 --> 00:14:11.520
And developers spend more
than a quarter billion

00:14:11.520 --> 00:14:13.920
on influencer content.

00:14:13.920 --> 00:14:16.890
By connecting what we
know about people viewing

00:14:16.890 --> 00:14:20.040
videos on YouTube with their
actual install behavior

00:14:20.040 --> 00:14:22.050
on the Play Store,
we can actually

00:14:22.050 --> 00:14:25.230
show the ROI for
these campaigns,

00:14:25.230 --> 00:14:27.750
and it's pretty amazing.

00:14:27.750 --> 00:14:31.530
For every one person who watches
a video, clicks the link,

00:14:31.530 --> 00:14:34.890
and installs a game,
there are four more

00:14:34.890 --> 00:14:37.570
that do the same without
clicking any links.

00:14:37.570 --> 00:14:40.180
They're not trackable.

00:14:40.180 --> 00:14:43.960
This 4x is an average
and depends on the game

00:14:43.960 --> 00:14:46.240
and the nature of the video.

00:14:46.240 --> 00:14:48.460
But we've seen multipliers
as high as 10x.

00:14:51.060 --> 00:14:52.920
So this is extremely
valuable, and you

00:14:52.920 --> 00:14:57.300
can expect us to build
more connective tissue

00:14:57.300 --> 00:15:01.660
between YouTube and
all our game efforts.

00:15:01.660 --> 00:15:04.030
So just giving you a small
taste of how Play is helping

00:15:04.030 --> 00:15:07.240
you reach more players
than ever before.

00:15:07.240 --> 00:15:10.630
Next, Sunil will tell
you how Google Cloud

00:15:10.630 --> 00:15:13.870
is enabling new capabilities
for game developers

00:15:13.870 --> 00:15:15.460
and helping them scale.

00:15:15.460 --> 00:15:16.600
Please welcome Sunil.

00:15:16.600 --> 00:15:17.950
[APPLAUSE]

00:15:17.950 --> 00:15:19.570
SUNIL RAYAN: Thank you, Tian.

00:15:19.570 --> 00:15:23.420
My name is Sunil Rayan, and I
lead Google Cloud for games.

00:15:23.420 --> 00:15:26.560
Tian talked a lot about
reach, and games have never

00:15:26.560 --> 00:15:28.460
reached more players
than they have today.

00:15:28.460 --> 00:15:32.560
In fact, I think we have about
2.4 billion players out there.

00:15:32.560 --> 00:15:35.230
And games have also
become so popular

00:15:35.230 --> 00:15:38.620
that it's one of the world's
foremost form of entertainment

00:15:38.620 --> 00:15:39.860
these days.

00:15:39.860 --> 00:15:43.090
But with that level of reach
comes complexity, right?

00:15:43.090 --> 00:15:46.300
So you're managing a game
across different geographies,

00:15:46.300 --> 00:15:48.375
different languages, time zones.

00:15:48.375 --> 00:15:49.750
And to reach a
player is becoming

00:15:49.750 --> 00:15:51.310
more and more challenging.

00:15:51.310 --> 00:15:55.180
Today's games are also played
across multiple platforms,

00:15:55.180 --> 00:15:59.710
and cross-platform play is going
to start to become very vital.

00:15:59.710 --> 00:16:02.980
Thirdly, the speed and
scale of your games

00:16:02.980 --> 00:16:05.020
is just growing
faster and faster.

00:16:05.020 --> 00:16:07.660
What used to take
probably months or years

00:16:07.660 --> 00:16:10.540
to get to 10 million
users, it just

00:16:10.540 --> 00:16:12.880
happens in a matter
of days right now.

00:16:12.880 --> 00:16:16.670
And lastly, your game is
just not a game anymore.

00:16:16.670 --> 00:16:21.640
It's an ecosystem of players,
content developers, viewers,

00:16:21.640 --> 00:16:24.050
audiences, et cetera, that
are engaging with your game.

00:16:24.050 --> 00:16:27.110
So you need to think about
all these different users.

00:16:27.110 --> 00:16:30.110
What does that mean, though,
for you as a developer?

00:16:30.110 --> 00:16:31.900
It means you need to
partner with somebody

00:16:31.900 --> 00:16:34.270
who can simplify the
complexity of managing all

00:16:34.270 --> 00:16:37.540
this infrastructure so you can
focus on what you love most,

00:16:37.540 --> 00:16:39.410
which is build great games.

00:16:39.410 --> 00:16:41.080
And what does that mean?

00:16:41.080 --> 00:16:43.350
We think it means a few things.

00:16:43.350 --> 00:16:47.230
One, your players who
play the game deserve

00:16:47.230 --> 00:16:50.270
to enjoy the games in the
best possible conditions.

00:16:50.270 --> 00:16:55.600
So your infrastructure needs
to be global, scalable,

00:16:55.600 --> 00:16:56.710
and reliable.

00:16:56.710 --> 00:16:58.460
And it needs to keep
up with the demand,

00:16:58.460 --> 00:17:01.150
run quickly, and run globally.

00:17:01.150 --> 00:17:04.760
But managing this infrastructure
can also take a lot of effort.

00:17:04.760 --> 00:17:06.190
It shouldn't just be scalable.

00:17:06.190 --> 00:17:09.490
It should be really easy
to manage and portable.

00:17:09.490 --> 00:17:12.220
That's why we abstract a
lot of the messy things

00:17:12.220 --> 00:17:15.339
about managing this
infrastructure so you can

00:17:15.339 --> 00:17:17.319
focus on building your game.

00:17:17.319 --> 00:17:20.440
Now on top of this
infrastructure, number two,

00:17:20.440 --> 00:17:23.290
is we also are building
platform-agnostic services

00:17:23.290 --> 00:17:27.130
so you don't have to rewrite all
the different back-end services

00:17:27.130 --> 00:17:30.310
depending on which platform your
game is actually running on.

00:17:30.310 --> 00:17:35.380
And third, because games
produce so much data--

00:17:35.380 --> 00:17:39.160
if you think about storing
events every day from games--

00:17:39.160 --> 00:17:41.710
you need to find a
way to understand more

00:17:41.710 --> 00:17:43.870
about your players and
your game performance.

00:17:43.870 --> 00:17:45.370
And you need to
have a team that can

00:17:45.370 --> 00:17:47.800
sift through all this
massive amount of data

00:17:47.800 --> 00:17:49.468
and analyze it at scale.

00:17:49.468 --> 00:17:51.010
And we want to make
it easier for you

00:17:51.010 --> 00:17:53.360
to extract these insights
from these games.

00:17:53.360 --> 00:17:56.770
So let's go deeper into
each one of these points.

00:17:56.770 --> 00:18:01.780
The basis of everything what
Google Cloud does or is doing

00:18:01.780 --> 00:18:04.310
is its global
infrastructure and network.

00:18:04.310 --> 00:18:06.730
We have invested
massive amounts of money

00:18:06.730 --> 00:18:09.070
across the globe
in building regions

00:18:09.070 --> 00:18:11.500
to support these data centers.

00:18:11.500 --> 00:18:14.150
We've got 20 cloud
regions across the world,

00:18:14.150 --> 00:18:17.980
and we have three more on the
way in Jakarta, Seoul, and Salt

00:18:17.980 --> 00:18:18.880
Lake City.

00:18:18.880 --> 00:18:21.970
And these regions are connected
with thousands and thousands

00:18:21.970 --> 00:18:24.740
of miles of privately
owned fiber optic cables.

00:18:24.740 --> 00:18:27.940
In fact, we also have 13
undersea cable investments

00:18:27.940 --> 00:18:29.860
across the world.

00:18:29.860 --> 00:18:33.980
But what does this mean in terms
for you as game developers?

00:18:33.980 --> 00:18:36.400
You want your game
servers to be running

00:18:36.400 --> 00:18:38.870
as close to your
players as possible,

00:18:38.870 --> 00:18:41.860
and this is what should be
the backbone if you're truly

00:18:41.860 --> 00:18:43.570
building a global game.

00:18:43.570 --> 00:18:46.270
And hosting these games
on global infrastructure

00:18:46.270 --> 00:18:48.880
will help ensure that your
players have a really smooth

00:18:48.880 --> 00:18:51.580
experience, see
no latency issues,

00:18:51.580 --> 00:18:55.210
and your services are
always close to the players.

00:18:55.210 --> 00:18:56.590
Some of the world's
largest games

00:18:56.590 --> 00:18:59.050
are actually running
on this infrastructure.

00:18:59.050 --> 00:19:02.650
"Apex Legends," which I'm
sure many of you have played,

00:19:02.650 --> 00:19:05.650
had a great launch by running
their game servers on Google

00:19:05.650 --> 00:19:08.110
Cloud's Compute Engine with
the help of our friends

00:19:08.110 --> 00:19:09.220
at Multiplay.

00:19:09.220 --> 00:19:11.380
Multiplay is a managed
partner of Google Cloud

00:19:11.380 --> 00:19:13.720
that provides a full
suite of services--

00:19:13.720 --> 00:19:15.430
orchestration
services and scaling

00:19:15.430 --> 00:19:18.550
tech-- to help host
your game servers.

00:19:18.550 --> 00:19:21.610
"Apex" accumulated
a million players

00:19:21.610 --> 00:19:24.490
in about eight hours and
almost 10 million players

00:19:24.490 --> 00:19:26.000
in about three days.

00:19:26.000 --> 00:19:27.820
So when talking
about reach, this

00:19:27.820 --> 00:19:30.130
is the type of
global scalability

00:19:30.130 --> 00:19:32.380
that Google Cloud
can offer your game.

00:19:32.380 --> 00:19:36.310
Seamless performance
wherever your players may be.

00:19:36.310 --> 00:19:37.600
It's not only "Apex."

00:19:37.600 --> 00:19:40.300
We also announced
at GDC Google Cloud

00:19:40.300 --> 00:19:43.300
was picked as the
cloud provider to host

00:19:43.300 --> 00:19:46.420
game servers for the
highly anticipated sequel,

00:19:46.420 --> 00:19:48.340
"The Division 2."

00:19:48.340 --> 00:19:50.680
Massive, which is a Ubisoft
studio, and Google Cloud

00:19:50.680 --> 00:19:53.590
worked together to use
the Cloud Compute Engine

00:19:53.590 --> 00:19:56.440
and deliver a smooth online
experience for these players.

00:19:56.440 --> 00:19:59.500
In fact, we had our
Google Cloud engineers

00:19:59.500 --> 00:20:03.240
sit with the Massive engineers
in the same room to make sure

00:20:03.240 --> 00:20:06.120
that they had a
successful launch.

00:20:06.120 --> 00:20:09.890
We realize also that many
of your successful games

00:20:09.890 --> 00:20:12.610
are already running on
other infrastructure.

00:20:12.610 --> 00:20:14.910
But the need for
global games really

00:20:14.910 --> 00:20:16.570
needs a different approach.

00:20:16.570 --> 00:20:18.630
We're firm believers
in giving developers

00:20:18.630 --> 00:20:21.750
flexibility to run their back
end and infrastructure where

00:20:21.750 --> 00:20:23.760
it makes most sense for you.

00:20:23.760 --> 00:20:28.560
That's why open source is
a key part of our strategy,

00:20:28.560 --> 00:20:32.250
not just in gaming, but
also in Google Cloud.

00:20:32.250 --> 00:20:34.620
We think we know a little
bit more about open source

00:20:34.620 --> 00:20:36.720
because we invented Kubernetes.

00:20:36.720 --> 00:20:39.770
For those of you who are
unfamiliar with Kubernetes,

00:20:39.770 --> 00:20:42.510
Kubernetes an open-source
system for deploying and running

00:20:42.510 --> 00:20:44.600
software at scale.

00:20:44.600 --> 00:20:46.890
Because Kubernetes
is open source,

00:20:46.890 --> 00:20:48.830
it gives you the freedom
to take advantage

00:20:48.830 --> 00:20:50.420
of running your
software, whether it's

00:20:50.420 --> 00:20:53.360
an on-premise, whether it's
in a hybrid environment,

00:20:53.360 --> 00:20:57.620
or a public cloud infrastructure
with the GCP or something else.

00:20:57.620 --> 00:21:01.640
This helps you so you don't get
locked into one cloud provider,

00:21:01.640 --> 00:21:04.340
and you can move
workloads as you wish.

00:21:04.340 --> 00:21:08.060
When you run Kubernetes though,
the best way to take advantage

00:21:08.060 --> 00:21:10.940
is to basically have the people
who actually built it run it

00:21:10.940 --> 00:21:13.320
for you as well.

00:21:13.320 --> 00:21:15.590
So we're taking this
open-source approach,

00:21:15.590 --> 00:21:18.380
and we're using it to build
game-specific services

00:21:18.380 --> 00:21:19.512
and solutions.

00:21:19.512 --> 00:21:20.720
And we're not doing it alone.

00:21:20.720 --> 00:21:24.590
We're doing it with industry
leaders like Ubisoft and Unity

00:21:24.590 --> 00:21:26.830
to bring you these
games services to life.

00:21:26.830 --> 00:21:32.240
Agones, which is a open-source
dedicated game server hosting

00:21:32.240 --> 00:21:35.120
solution, was built
on top of Kubernetes

00:21:35.120 --> 00:21:37.490
with the flexibility
to tailor to the needs

00:21:37.490 --> 00:21:39.080
of your multiplayer game.

00:21:39.080 --> 00:21:43.670
You get native capabilities
to create, run, and scale

00:21:43.670 --> 00:21:46.760
these dedicated game
servers on Kubernetes

00:21:46.760 --> 00:21:50.060
using standard Kubernetes
toolings and APIs.

00:21:50.060 --> 00:21:53.020
Building Agones on
top of Kubernetes

00:21:53.020 --> 00:21:55.710
lets you also choose where
you want this to run,

00:21:55.710 --> 00:21:57.620
whether it's
on-prem, whether it's

00:21:57.620 --> 00:21:59.880
on our cloud or other clouds.

00:21:59.880 --> 00:22:04.760
We also co-founded a
matchmaking framework

00:22:04.760 --> 00:22:06.668
called Open Match with Unity.

00:22:06.668 --> 00:22:08.210
And we call it
"framework" because we

00:22:08.210 --> 00:22:12.230
want to take away the repetitive
elements off a matchmaker

00:22:12.230 --> 00:22:14.450
so you can focus on
the main things, which

00:22:14.450 --> 00:22:15.260
is the match logic.

00:22:15.260 --> 00:22:17.030
And we give you the
flexibility for you

00:22:17.030 --> 00:22:18.640
to put your match logic in.

00:22:18.640 --> 00:22:21.170
So if you stop by
our Garage demo area,

00:22:21.170 --> 00:22:25.400
we have experts that can
talk you through both Agones

00:22:25.400 --> 00:22:27.830
as well as Open Match.

00:22:27.830 --> 00:22:31.970
We embrace open source
because we want everybody

00:22:31.970 --> 00:22:33.410
to use these solutions.

00:22:33.410 --> 00:22:36.200
You don't just have to be a
large company with hundreds

00:22:36.200 --> 00:22:39.050
of employees to use
these solutions.

00:22:39.050 --> 00:22:42.290
Supersolid, a relatively
small company,

00:22:42.290 --> 00:22:44.420
is using Agones in
their newest game,

00:22:44.420 --> 00:22:47.350
"Snake Rivals," as an example.

00:22:47.350 --> 00:22:50.430
We also want to make it easy
for you to deploy these services

00:22:50.430 --> 00:22:52.950
into your games,
so we actually have

00:22:52.950 --> 00:22:55.800
it available now in our
Google Cloud Marketplace

00:22:55.800 --> 00:22:58.170
where you can launch Agones
with just a few clicks.

00:22:58.170 --> 00:23:01.570
So I encourage you
to check it out.

00:23:01.570 --> 00:23:03.320
Once you've had your
game up and running--

00:23:03.320 --> 00:23:04.750
we talked about
infrastructure, we

00:23:04.750 --> 00:23:06.670
talked about platform
services-- but now

00:23:06.670 --> 00:23:08.650
that you have the
games up and running,

00:23:08.650 --> 00:23:09.790
you have a new challenge.

00:23:09.790 --> 00:23:11.740
I have all this
data, and how am I

00:23:11.740 --> 00:23:14.560
going to manage and optimize
my game with this data

00:23:14.560 --> 00:23:16.960
and think about
user acquisition?

00:23:16.960 --> 00:23:18.700
Today's successful
games, as you know,

00:23:18.700 --> 00:23:21.880
generate billions and
billions of events.

00:23:21.880 --> 00:23:23.680
And as developers,
you need to find a way

00:23:23.680 --> 00:23:25.180
to harness this data.

00:23:25.180 --> 00:23:28.330
But simply managing and
analyzing this data, in fact,

00:23:28.330 --> 00:23:29.560
is not enough.

00:23:29.560 --> 00:23:33.220
With BigQuery, our globally
scalable, fully managed data

00:23:33.220 --> 00:23:36.400
warehouse, you can have access
to the data warehouse that

00:23:36.400 --> 00:23:38.950
keeps up with the data
volume and velocity,

00:23:38.950 --> 00:23:42.730
enabling your data analyst
to get results really fast.

00:23:42.730 --> 00:23:48.083
Not only that, we also have ML
built into BigQuery that you

00:23:48.083 --> 00:23:50.500
can have your data analyst
start to build machine learning

00:23:50.500 --> 00:23:55.640
models without really
having a PhD in doing so.

00:23:55.640 --> 00:23:58.150
So as I said,
Google Cloud's goal

00:23:58.150 --> 00:24:01.690
is to enable everyone
to use AI and ML,

00:24:01.690 --> 00:24:04.300
so we've built a
suite of products

00:24:04.300 --> 00:24:06.580
depending on how
nascent or advanced

00:24:06.580 --> 00:24:08.500
your capabilities are in ML.

00:24:08.500 --> 00:24:10.520
So if you look on
the left-hand side,

00:24:10.520 --> 00:24:14.560
you have prepackaged, powerful
AI solutions that you can just

00:24:14.560 --> 00:24:16.000
embed within your game.

00:24:16.000 --> 00:24:18.430
So think about a translation
API that you can just

00:24:18.430 --> 00:24:22.000
have help translate your
game chats in real time.

00:24:22.000 --> 00:24:25.210
On the middle layer, we also
have built new products.

00:24:25.210 --> 00:24:28.570
For example, we launched a
product called Cloud AutoML.

00:24:28.570 --> 00:24:31.810
Because it's a technology
that helps build custom ML

00:24:31.810 --> 00:24:34.435
models for you, all you need
to do is prepare the data

00:24:34.435 --> 00:24:36.310
and set the objective
in terms of what you're

00:24:36.310 --> 00:24:38.740
trying to achieve, and
it builds the machine

00:24:38.740 --> 00:24:40.220
learning models for you.

00:24:40.220 --> 00:24:43.190
And lastly, for people who
have advanced capabilities

00:24:43.190 --> 00:24:44.440
in-house--

00:24:44.440 --> 00:24:45.940
you've got a lot
of data scientists,

00:24:45.940 --> 00:24:47.890
and ML scientists and experts--

00:24:47.890 --> 00:24:50.860
you can write your own
custom models with TensorFlow

00:24:50.860 --> 00:24:53.590
and use the Cloud
Machine Learning Engine

00:24:53.590 --> 00:24:56.080
as a platform,
which is optimized

00:24:56.080 --> 00:24:58.160
to run machine learning models.

00:24:58.160 --> 00:25:00.460
So solutions like
Cloud ML have really

00:25:00.460 --> 00:25:03.490
made AI experts
even more productive

00:25:03.490 --> 00:25:04.990
and help beginners
who are starting

00:25:04.990 --> 00:25:08.320
with ML build powerfully AI
systems that they could only

00:25:08.320 --> 00:25:09.880
dream of.

00:25:09.880 --> 00:25:12.190
Not only are we
providing tools, we also

00:25:12.190 --> 00:25:16.480
see the potential of AI and
ML across different phases

00:25:16.480 --> 00:25:18.520
in the game lifecycle.

00:25:18.520 --> 00:25:22.390
For example, whether it's game
development-- so you have NPCs,

00:25:22.390 --> 00:25:23.740
QA testing--

00:25:23.740 --> 00:25:26.260
in your user acquisition
and retention

00:25:26.260 --> 00:25:30.220
processes, as well as improving
the in-game experience.

00:25:30.220 --> 00:25:34.210
And large companies like King,
Square Enix, DeNA, Netmarble,

00:25:34.210 --> 00:25:36.850
are using Google Cloud
to get real insights

00:25:36.850 --> 00:25:39.610
and embed these AI
solutions into their game.

00:25:39.610 --> 00:25:42.130
Let's walk through some of
these use cases and examples

00:25:42.130 --> 00:25:44.290
so we bring this to life.

00:25:44.290 --> 00:25:47.680
King, famous producer
of "Candy Crush,"

00:25:47.680 --> 00:25:51.310
is using BigQuery to analyze
massive amounts of data.

00:25:51.310 --> 00:25:53.860
They have something
like 70 billion events

00:25:53.860 --> 00:25:56.530
that are produced every
day that they store,

00:25:56.530 --> 00:25:58.130
and they sift
through all the data.

00:25:58.130 --> 00:26:00.610
But one of the cool use cases
that we had seen coming out

00:26:00.610 --> 00:26:04.900
of King is they have used
this data to simulate player

00:26:04.900 --> 00:26:06.370
testing.

00:26:06.370 --> 00:26:09.760
Models are deployed to simulate
hundreds of game rounds

00:26:09.760 --> 00:26:13.960
in parallel, allowing developers
to figure out how hard or easy

00:26:13.960 --> 00:26:16.390
are the different games
based on the different skill

00:26:16.390 --> 00:26:18.010
levels of players.

00:26:18.010 --> 00:26:21.310
If they had to do this with
real players and games,

00:26:21.310 --> 00:26:25.240
this used to take
them months or weeks

00:26:25.240 --> 00:26:26.890
in order to come
up with how they

00:26:26.890 --> 00:26:29.470
should design the challenge
level by different segment

00:26:29.470 --> 00:26:30.130
types.

00:26:30.130 --> 00:26:32.330
And now they can do it
in a matter of hours.

00:26:32.330 --> 00:26:33.910
So this is the
type of things that

00:26:33.910 --> 00:26:36.520
help them save money
so they can focus more

00:26:36.520 --> 00:26:39.790
on creating as opposed to
waiting for data to load

00:26:39.790 --> 00:26:41.365
and have these tests all done.

00:26:41.365 --> 00:26:43.240
So this is one example
where King is actually

00:26:43.240 --> 00:26:45.790
using it for play testing.

00:26:45.790 --> 00:26:48.010
Another use case
that we've seen is

00:26:48.010 --> 00:26:53.680
DeNA, which, with AI,
was breathing new life

00:26:53.680 --> 00:26:55.720
into a three-year-old game.

00:26:55.720 --> 00:26:59.080
The game was
"Gyakuten Othellonia."

00:26:59.080 --> 00:27:03.560
It's a PvP strategy game where
before starting a battle,

00:27:03.560 --> 00:27:05.800
you have to construct a deck.

00:27:05.800 --> 00:27:10.060
And each deck has to
have about 16 characters.

00:27:10.060 --> 00:27:11.800
They have all these
different characters

00:27:11.800 --> 00:27:16.030
so players have to think about
3,000 different combinations.

00:27:16.030 --> 00:27:18.880
And as a result, you have
a steep learning curve,

00:27:18.880 --> 00:27:21.320
and there's a lot of churn
happening in the game.

00:27:21.320 --> 00:27:23.790
So what DeNA did
is use BigQuery,

00:27:23.790 --> 00:27:26.380
our TensorFlow
with a custom model

00:27:26.380 --> 00:27:28.630
and with Cloud Machine
Learning Engine,

00:27:28.630 --> 00:27:30.610
to help build a
recommendation engine

00:27:30.610 --> 00:27:33.640
and an AI training bot
to help onboard the users

00:27:33.640 --> 00:27:37.810
so they could guide their
users to build the right decks

00:27:37.810 --> 00:27:39.460
so they can start
to play the game.

00:27:39.460 --> 00:27:42.040
And this is in an existing
three-year-old game.

00:27:42.040 --> 00:27:44.290
So it reduced churn,
and now they've

00:27:44.290 --> 00:27:46.840
had even more downloads--
about 23 million--

00:27:46.840 --> 00:27:49.430
since they made these changes,
and it's continuing to grow.

00:27:49.430 --> 00:27:51.700
So you can embed
new life, basically,

00:27:51.700 --> 00:27:54.700
in an old game with AI as well.

00:27:54.700 --> 00:27:56.740
The last example I'm
going to talk about

00:27:56.740 --> 00:28:02.350
is Netmarble, which uses AI and
ML across a wide variety of use

00:28:02.350 --> 00:28:03.460
cases.

00:28:03.460 --> 00:28:06.490
They've actually built
an AI-dedicated team

00:28:06.490 --> 00:28:10.540
to push the boundaries of how
AI and ML can be used in games.

00:28:10.540 --> 00:28:12.190
One interesting
problem that they

00:28:12.190 --> 00:28:14.320
solved is a lot of
new game developers

00:28:14.320 --> 00:28:16.420
spend hours and
hours building games,

00:28:16.420 --> 00:28:19.400
but the last thing you want
to see is revenue leakage.

00:28:19.400 --> 00:28:22.360
So for example,
Netmarble used a model

00:28:22.360 --> 00:28:25.210
to improve their cheat
detection services.

00:28:25.210 --> 00:28:29.620
They used the same models across
both their MMORPG games as well

00:28:29.620 --> 00:28:30.940
as their strategy games.

00:28:30.940 --> 00:28:33.820
And as a result, it helped them
retain the high-spend players

00:28:33.820 --> 00:28:36.250
because they had ways
to detect anomalies

00:28:36.250 --> 00:28:40.060
in the game to protect cheats
from entering the game.

00:28:40.060 --> 00:28:41.920
So these are some
of the examples.

00:28:41.920 --> 00:28:45.460
We're still in early days
as to how AI and ML will

00:28:45.460 --> 00:28:46.692
change the game industry.

00:28:46.692 --> 00:28:48.400
But hopefully, you've
gotten a little bit

00:28:48.400 --> 00:28:51.280
of a taste of what some
of the leading companies

00:28:51.280 --> 00:28:55.320
are doing with AI and
ML on Google Cloud.

00:28:55.320 --> 00:28:58.500
So Tian talked a lot
about mobile developers

00:28:58.500 --> 00:29:01.710
and helping them reach a
broader audience than ever.

00:29:01.710 --> 00:29:03.300
I just discussed
how you can manage

00:29:03.300 --> 00:29:04.890
the complexity of
reaching an audience

00:29:04.890 --> 00:29:08.430
with global, reliable,
scalable infrastructure,

00:29:08.430 --> 00:29:11.370
and leverage new
capabilities like AI and ML

00:29:11.370 --> 00:29:13.620
across all platforms.

00:29:13.620 --> 00:29:17.220
Next, I would like to hand
it over to John Justice

00:29:17.220 --> 00:29:19.140
from Stadia to
talk about how you

00:29:19.140 --> 00:29:22.410
can reach players and
devices in new ways with PC

00:29:22.410 --> 00:29:24.030
and console-side games.

00:29:24.030 --> 00:29:25.640
Welcome, John.

00:29:25.640 --> 00:29:28.610
[APPLAUSE]

00:29:28.610 --> 00:29:31.090
JOHN JUSTICE: Hi.

00:29:31.090 --> 00:29:31.740
Hi, folks.

00:29:31.740 --> 00:29:33.060
I'm John Justice.

00:29:33.060 --> 00:29:35.580
I run the product
team for Stadia.

00:29:35.580 --> 00:29:38.145
What an exciting
time to be in games.

00:29:38.145 --> 00:29:40.770
Today, we're going to talk about
how Stadia will help you reach

00:29:40.770 --> 00:29:44.310
more users on more devices.

00:29:44.310 --> 00:29:46.890
In March at GDC, we
announced our vision

00:29:46.890 --> 00:29:50.640
for the future of games with
the Stadia platform reveal.

00:29:50.640 --> 00:29:52.740
The response from the
game development community

00:29:52.740 --> 00:29:54.880
has been remarkable.

00:29:54.880 --> 00:29:57.960
We've had thousands of
companies apply for access

00:29:57.960 --> 00:29:59.550
to our developer program.

00:29:59.550 --> 00:30:03.360
Thank you to everyone who's
applied on stadia.dev.

00:30:03.360 --> 00:30:05.100
We're rolling out
access to developers

00:30:05.100 --> 00:30:06.930
purposefully over
the coming months

00:30:06.930 --> 00:30:09.150
with a focus on making a
great experience for you

00:30:09.150 --> 00:30:12.000
no matter what the
size is of your studio.

00:30:12.000 --> 00:30:15.480
So if you signed up, we
appreciate your patience.

00:30:15.480 --> 00:30:16.980
But I want to step
back for a minute

00:30:16.980 --> 00:30:19.470
and talk about the
foundations of Stadia,

00:30:19.470 --> 00:30:21.870
why it exists as a platform.

00:30:21.870 --> 00:30:26.820
For PC and console developers,
the games you're making,

00:30:26.820 --> 00:30:28.590
they're getting more
complex, they're

00:30:28.590 --> 00:30:31.470
getting richer, higher
fidelity, and frankly,

00:30:31.470 --> 00:30:34.630
more expensive to
make than ever before.

00:30:34.630 --> 00:30:39.060
Now more than ever, you
need to reach more players.

00:30:39.060 --> 00:30:41.340
Until Stadia, that
reach has been

00:30:41.340 --> 00:30:44.220
gated by the cost of
hardware, hardware

00:30:44.220 --> 00:30:47.040
that needs to be upgraded
for hundreds or thousands

00:30:47.040 --> 00:30:49.590
of dollars every few years.

00:30:49.590 --> 00:30:54.360
That generational reset limits
your reach as developers.

00:30:54.360 --> 00:30:57.330
So until now, you've
faced a dilemma--

00:30:57.330 --> 00:31:00.570
build a game that takes
advantage of the latest tech,

00:31:00.570 --> 00:31:04.800
delivering the best visuals, the
4K visuals, the massive worlds,

00:31:04.800 --> 00:31:08.610
all of that, or maximize
reach by targeting

00:31:08.610 --> 00:31:12.940
the lowest common
denominator in your hardware.

00:31:12.940 --> 00:31:16.080
And if you wanted to reach
players on different devices,

00:31:16.080 --> 00:31:18.260
you'd usually just have
to rewrite your game.

00:31:18.260 --> 00:31:21.210
You had to write your
game multiple times.

00:31:21.210 --> 00:31:23.160
Stadia removes those dilemmas.

00:31:23.160 --> 00:31:25.560
As developers, you're
always building

00:31:25.560 --> 00:31:27.510
on the latest hardware.

00:31:27.510 --> 00:31:31.290
You only have to build your
game once to run across devices.

00:31:31.290 --> 00:31:35.670
And your players never have to
buy an expensive console or PC,

00:31:35.670 --> 00:31:38.250
and they never have to upgrade.

00:31:38.250 --> 00:31:40.410
And with Stadia's
YouTube integration,

00:31:40.410 --> 00:31:42.750
you can reach players
wherever they are

00:31:42.750 --> 00:31:45.910
and bring them into the game.

00:31:45.910 --> 00:31:48.810
Your games deserve to be
experienced by the widest

00:31:48.810 --> 00:31:52.770
audience possible on as many
devices as possible and as

00:31:52.770 --> 00:31:55.780
seamlessly as possible.

00:31:55.780 --> 00:31:57.660
So how does Stadia
actually work?

00:31:57.660 --> 00:32:01.290
And more importantly, how do you
make a game for the platform?

00:32:01.290 --> 00:32:01.900
OK.

00:32:01.900 --> 00:32:03.510
How does it work?

00:32:03.510 --> 00:32:06.090
A player presses a button
on the Stadia controller

00:32:06.090 --> 00:32:09.560
that fires the input via
Wi-Fi to the Stadia instance

00:32:09.560 --> 00:32:11.040
in the Google data center.

00:32:11.040 --> 00:32:14.220
We process that input, run the
game logic, render the frame--

00:32:14.220 --> 00:32:16.500
up to 4K 60 HDR--

00:32:16.500 --> 00:32:20.280
encode the frame, and transmit
it back to the player.

00:32:20.280 --> 00:32:22.740
If you're building a game
using back-end servers,

00:32:22.740 --> 00:32:25.050
say, multiplayer,
you can use whatever

00:32:25.050 --> 00:32:27.602
cloud provider you like
for that back-end server.

00:32:27.602 --> 00:32:29.560
But if you want the best
performance, security,

00:32:29.560 --> 00:32:32.430
and value, you'll
want to use GCP.

00:32:32.430 --> 00:32:37.600
For more on that, go talk to my
friend Sunil, who was just on.

00:32:37.600 --> 00:32:40.720
That Stadia instance, the
hardware running your game

00:32:40.720 --> 00:32:42.550
in the Google data
center, it runs

00:32:42.550 --> 00:32:45.930
Linux with Vulkan graphics.

00:32:45.930 --> 00:32:49.060
Now when you're developing for
Stadia, you'll use the tools

00:32:49.060 --> 00:32:51.250
and workflow that
you're already used to.

00:32:51.250 --> 00:32:53.350
The Stadia plugin
for Visual Studio

00:32:53.350 --> 00:32:56.950
adds a Stadia target just
like any other platform.

00:32:56.950 --> 00:32:59.920
For shaders, we worked with
Microsoft on the DirectX shader

00:32:59.920 --> 00:33:03.880
compiler to enable HLSL
to Spear V compilation

00:33:03.880 --> 00:33:06.565
to make the transition to
Vulkan as simple as possible.

00:33:09.140 --> 00:33:12.080
We've integrated the open-source
tools you already use,

00:33:12.080 --> 00:33:15.640
including the LLVM compiler,
RenderDoc for graphics

00:33:15.640 --> 00:33:19.000
debugging, Valgrind for
debugging and profiling,

00:33:19.000 --> 00:33:22.150
and GAPID, which we've
optimized with the Android team

00:33:22.150 --> 00:33:25.190
to work well for Stadia.

00:33:25.190 --> 00:33:28.730
We've also integrated a large
and continuously growing

00:33:28.730 --> 00:33:34.130
list of middleware, like Havok,
CRYENGINE, and Audiokinetic.

00:33:34.130 --> 00:33:38.600
And of course, that list
includes Unity and Unreal.

00:33:41.280 --> 00:33:44.790
Regardless of what engine you're
using, once your game is built,

00:33:44.790 --> 00:33:46.560
you upload the
Stadia game package

00:33:46.560 --> 00:33:50.760
to your development instance,
which streams it to players.

00:33:50.760 --> 00:33:54.340
For those development instances,
we give you a few choices.

00:33:54.340 --> 00:33:56.340
If you want to run
your game in our cloud,

00:33:56.340 --> 00:33:58.860
you can use instances
in our data center.

00:33:58.860 --> 00:34:00.480
If you prefer
running it locally,

00:34:00.480 --> 00:34:02.740
we have Stadia dev workstations.

00:34:02.740 --> 00:34:05.430
And if you want a
quad-instance server

00:34:05.430 --> 00:34:07.980
to be shared in your
studio for your dev team,

00:34:07.980 --> 00:34:10.810
we have those too.

00:34:10.810 --> 00:34:14.610
So whether it's your cloud,
our cloud, or at your desk,

00:34:14.610 --> 00:34:15.989
we support your workflow.

00:34:18.719 --> 00:34:21.290
As you get into testing
your games for Stadia,

00:34:21.290 --> 00:34:23.790
you'll find more of the benefits
that come with Cloud gaming

00:34:23.790 --> 00:34:24.840
development.

00:34:24.840 --> 00:34:27.449
No more pushing builds
to hundreds of testers

00:34:27.449 --> 00:34:30.179
and waiting for
them to download.

00:34:30.179 --> 00:34:33.090
Instead, you'll upload
a build to the cloud

00:34:33.090 --> 00:34:34.889
and just send out a link.

00:34:34.889 --> 00:34:37.710
The test team clicks that
link, and they're in the game.

00:34:37.710 --> 00:34:41.040
This means faster iteration,
tighter feedback loops

00:34:41.040 --> 00:34:44.130
during this critical stage.

00:34:44.130 --> 00:34:46.260
All of that's managed
through the Stadia partner

00:34:46.260 --> 00:34:48.690
portal, which you can
actually check out today

00:34:48.690 --> 00:34:52.860
live in The Garage here at I/O.

00:34:52.860 --> 00:34:54.989
So now we've covered
at a high level

00:34:54.989 --> 00:34:58.740
how do you, as a developer,
make a game for Stadia, using

00:34:58.740 --> 00:35:03.250
a single code base, reaching
desktops, laptops, tablets,

00:35:03.250 --> 00:35:06.330
phones, and TVs.

00:35:06.330 --> 00:35:08.760
If you want to dive more
into the tech behind Stadia,

00:35:08.760 --> 00:35:11.910
we have a deep dive session
coming up at 3:00 PM

00:35:11.910 --> 00:35:12.990
at The Garage.

00:35:12.990 --> 00:35:15.000
It's being given by
our playability team.

00:35:15.000 --> 00:35:16.980
It speaks directly to
the software and hardware

00:35:16.980 --> 00:35:18.480
that powers Stadia streaming.

00:35:18.480 --> 00:35:21.940
I highly recommend
you all attend.

00:35:21.940 --> 00:35:24.370
OK, so as you move
from development

00:35:24.370 --> 00:35:26.320
to testing and
finalling your game,

00:35:26.320 --> 00:35:29.890
you'll eventually want to
unleash your game on the world.

00:35:29.890 --> 00:35:31.690
When you think about
launching that game,

00:35:31.690 --> 00:35:34.330
Stadia's YouTube
integration are designed

00:35:34.330 --> 00:35:38.150
to let you reach more
players in new ways.

00:35:38.150 --> 00:35:41.510
So let's talk about how a
player finds the game today.

00:35:41.510 --> 00:35:44.710
The number one place where
they do that is YouTube.

00:35:44.710 --> 00:35:46.840
The number one
activity people do

00:35:46.840 --> 00:35:48.910
before buying a
game in the world

00:35:48.910 --> 00:35:52.630
is watch a video of
that game on YouTube.

00:35:52.630 --> 00:35:55.430
Until Stadia, after
watching that video,

00:35:55.430 --> 00:35:57.190
someone would have
to jump through hoops

00:35:57.190 --> 00:35:59.650
to buy it and then
wait to play it.

00:35:59.650 --> 00:36:05.420
With Stadia, they go from
YouTube to play within moments.

00:36:05.420 --> 00:36:08.360
And taking that further,
if you build State Share

00:36:08.360 --> 00:36:12.300
into your game, players can
not only jump into your game,

00:36:12.300 --> 00:36:15.230
but they can jump into that
exact compelling moment

00:36:15.230 --> 00:36:16.850
that they were watching.

00:36:16.850 --> 00:36:19.400
State Share enables
you, as a developer,

00:36:19.400 --> 00:36:22.190
to compile the metadata
of your game world--

00:36:22.190 --> 00:36:24.770
things like a player's
armor, or inventory,

00:36:24.770 --> 00:36:27.710
the puzzle they were on, the
opponent they were facing,

00:36:27.710 --> 00:36:29.070
any of those--

00:36:29.070 --> 00:36:31.970
all of those into
a clickable link.

00:36:31.970 --> 00:36:34.910
That link can be sent
anywhere on the internet.

00:36:34.910 --> 00:36:37.490
And someone with that link,
they'll jump into the game

00:36:37.490 --> 00:36:40.700
at that exact same spot,
the very moment that got

00:36:40.700 --> 00:36:43.700
them excited about your game.

00:36:43.700 --> 00:36:45.410
After someone's in
your game, they'll

00:36:45.410 --> 00:36:47.270
want to play with their
friends, no matter

00:36:47.270 --> 00:36:49.280
what platform they're on.

00:36:49.280 --> 00:36:52.670
With Stadia, we support
cross-platform play

00:36:52.670 --> 00:36:55.700
and cross-platform progression.

00:36:55.700 --> 00:36:57.800
We leave the choice
to you, but we

00:36:57.800 --> 00:36:59.885
will do everything we
can to make it possible.

00:37:02.710 --> 00:37:05.650
Today, we covered how you
can use Stadia to reach

00:37:05.650 --> 00:37:07.960
more users on more devices.

00:37:07.960 --> 00:37:11.110
With a single code base,
a powerful workflow that

00:37:11.110 --> 00:37:15.280
meets you where you are,
powerful YouTube integration,

00:37:15.280 --> 00:37:17.920
and open policies,
you can get your games

00:37:17.920 --> 00:37:21.070
into the hands of
players everywhere.

00:37:21.070 --> 00:37:25.160
Stadia will be launching later
this year in the US, Canada,

00:37:25.160 --> 00:37:27.077
UK, and much of Europe.

00:37:27.077 --> 00:37:29.410
If you're interested in
learning more about the platform

00:37:29.410 --> 00:37:32.120
and applying to access for
our developer platform,

00:37:32.120 --> 00:37:34.750
please go to stadia.dev
now and apply.

00:37:38.150 --> 00:37:40.970
Thank you for coming to
the first of many games

00:37:40.970 --> 00:37:44.420
tracks at I/O. No matter if
you're focused on mobile game

00:37:44.420 --> 00:37:46.610
development, scaling
your infrastructure

00:37:46.610 --> 00:37:48.500
to support a global
audience, or you're

00:37:48.500 --> 00:37:52.040
building your next great,
high end game experience,

00:37:52.040 --> 00:37:54.050
Google is dedicated
to supporting you

00:37:54.050 --> 00:37:58.530
in reaching more users
with your devices.

00:37:58.530 --> 00:38:02.090
Please be sure to stop by The
Garage at I/O to learn more.

00:38:02.090 --> 00:38:04.310
At Google, we're here
to be your partner.

00:38:04.310 --> 00:38:06.950
We won't always be perfect,
but our commitment to you

00:38:06.950 --> 00:38:10.070
is to remain vigilant, remain
humble, and always listen

00:38:10.070 --> 00:38:11.270
to your feedback.

00:38:11.270 --> 00:38:13.370
After all, without
the support of you

00:38:13.370 --> 00:38:15.650
and the rest of the game
developer ecosystem,

00:38:15.650 --> 00:38:19.310
everything you've heard
today simply would not exist.

00:38:19.310 --> 00:38:21.740
For Tian and Sunil, as
well as the rest of Google,

00:38:21.740 --> 00:38:23.240
thank you so much
for your attention

00:38:23.240 --> 00:38:24.910
today and have a great I/O.

00:38:24.910 --> 00:38:28.560
[MUSIC PLAYING]

