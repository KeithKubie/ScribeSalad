WEBVTT
Kind: captions
Language: en

00:02:37.684 --> 00:02:38.210
RAJ PARAMESWARAN: Hey.

00:02:38.210 --> 00:02:40.740
My name is Raj Parameswaran, and
I'm part of the Developer

00:02:40.740 --> 00:02:42.460
Relations Team for AdMob.

00:02:42.460 --> 00:02:44.470
I wanted to talk about getting
started with the

00:02:44.470 --> 00:02:46.140
AdMob SDK on iOS today.

00:02:48.790 --> 00:02:51.050
Just an overview of what we're
going to be talking about--

00:02:51.050 --> 00:02:54.780
I'm going to go through the
prerequisites that you need to

00:02:54.780 --> 00:02:55.660
get started.

00:02:55.660 --> 00:02:57.600
I'm going to go through our
Banner example that we have

00:02:57.600 --> 00:03:01.480
online, how to use that and how
to use that as a baseline

00:03:01.480 --> 00:03:04.660
for some of your other apps, how
to work with different ad

00:03:04.660 --> 00:03:08.450
formats with our SDK, some of
the targeting options that we

00:03:08.450 --> 00:03:11.910
have for the AdRequest object,
how to listen for

00:03:11.910 --> 00:03:12.780
different Ad Events.

00:03:12.780 --> 00:03:16.315
This is where you could do
things that are custom when an

00:03:16.315 --> 00:03:20.220
ad is received or when an ad
fails to receive, for example.

00:03:20.220 --> 00:03:23.720
I'm going to talk a little bit
about our Mediation SDK, which

00:03:23.720 --> 00:03:27.820
is the same SDK, as well
as getting going with

00:03:27.820 --> 00:03:29.070
interstitials.

00:03:30.960 --> 00:03:35.000
So the prerequisites to get
started with the AdMob SDK.

00:03:35.000 --> 00:03:38.390
You're going to need to have iOS
version 4.3 or later, as

00:03:38.390 --> 00:03:41.630
well as Xcode version
4.5 or later.

00:03:41.630 --> 00:03:44.590
You can install the Google
AdMob Ads SDK off our

00:03:44.590 --> 00:03:46.215
Developers page, which is
at developers.googl

00:03:46.215 --> 00:03:49.830
e.com/mobileadssdk.

00:03:49.830 --> 00:03:52.990
We also do recommend that you
read our documentation, which

00:03:52.990 --> 00:03:55.750
you can also find at
developers.google.com, and

00:03:55.750 --> 00:03:58.380
you're going to have to create
a Publisher account on

00:03:58.380 --> 00:04:00.800
admob.com to receive live ads.

00:04:04.270 --> 00:04:06.900
So getting started with
the Banner example.

00:04:06.900 --> 00:04:09.680
The first thing you're going
to have to do is actually

00:04:09.680 --> 00:04:13.770
include the Google AdMob Ads
SDK that you download into

00:04:13.770 --> 00:04:15.890
your Xcode project.

00:04:15.890 --> 00:04:18.860
This can be done by including
it using the right click and

00:04:18.860 --> 00:04:21.570
Add Files to BannerExample
menu.

00:04:21.570 --> 00:04:24.640
You're going to have to add
everything in the actual

00:04:24.640 --> 00:04:28.690
folder except for the add-ons
unless you are actually using

00:04:28.690 --> 00:04:29.560
one of the add-ons.

00:04:29.560 --> 00:04:32.590
The add-ons include some of
the Mediation Custom Event

00:04:32.590 --> 00:04:35.490
stuff, which I'll talk about
later on, as well as Double

00:04:35.490 --> 00:04:40.210
Click and Search Ads
header files.

00:04:40.210 --> 00:04:42.870
You're going to have reference
the necessary frameworks.

00:04:42.870 --> 00:04:45.480
We've got a list of frameworks
that you need to use in order

00:04:45.480 --> 00:04:47.610
to use AdMob.

00:04:47.610 --> 00:04:50.070
AdSupport is one of
the big ones.

00:04:50.070 --> 00:04:54.920
These are typically pretty
fundamental across the board.

00:04:54.920 --> 00:04:56.470
And the last thing that you
need to do that a lot of

00:04:56.470 --> 00:04:59.050
people actually forget is that
you've got to add this

00:04:59.050 --> 00:05:02.290
Objective C linker flag to
your Other Linker Flags

00:05:02.290 --> 00:05:05.090
section in your Build
Settings.

00:05:05.090 --> 00:05:07.390
Finally, to get up and going,
you just need to replace the

00:05:07.390 --> 00:05:11.440
AD_UNIT_ID that's actually in
the project with your own, and

00:05:11.440 --> 00:05:13.400
you should be able to
receive live ads.

00:05:13.400 --> 00:05:18.640
So let's go through an example
and see what this looks like.

00:05:18.640 --> 00:05:21.440
So here, I've got my Banner
example which I downloaded

00:05:21.440 --> 00:05:23.740
from developers.google.com.

00:05:23.740 --> 00:05:27.430
I haven't changed anything, I've
just opened it up here.

00:05:27.430 --> 00:05:29.820
When we open this, we'll see
that there's a Google AdMob

00:05:29.820 --> 00:05:32.500
Ads SDK folder with
broken references.

00:05:32.500 --> 00:05:35.070
This is just to show you that
you do need to include the

00:05:35.070 --> 00:05:36.310
AdMob Ads SDK.

00:05:36.310 --> 00:05:42.330
Let's delete this one and
add the Ads SDK that we

00:05:42.330 --> 00:05:42.800
downloaded.

00:05:42.800 --> 00:05:47.380
So this is the one that
we just downloaded.

00:05:47.380 --> 00:05:49.460
We'll include it.

00:05:49.460 --> 00:05:53.340
I forgot to not include the
add-ons folder, so I could

00:05:53.340 --> 00:05:56.430
remove that, remove
the references.

00:05:56.430 --> 00:05:58.740
So now that we've got this,
let's look into our Build

00:05:58.740 --> 00:06:01.850
Settings to make sure that we've
got all the frameworks

00:06:01.850 --> 00:06:02.990
that we need.

00:06:02.990 --> 00:06:06.320
So we've got StoreKit,
AdSupport, Foundation,

00:06:06.320 --> 00:06:08.460
CoreGraphics,
SystemConfiguration,

00:06:08.460 --> 00:06:09.780
MessageUI, AudioToolbox.

00:06:09.780 --> 00:06:11.870
That looks like all the
frameworks that we need.

00:06:11.870 --> 00:06:14.100
The other important step is to
make sure that our Linker

00:06:14.100 --> 00:06:18.510
Flags actually has Objective
C, which it does.

00:06:18.510 --> 00:06:21.560
This comes for you out of the
box once you download the

00:06:21.560 --> 00:06:23.630
Banner example, but if you're
starting a project from

00:06:23.630 --> 00:06:24.780
scratch, these are things
you're going to

00:06:24.780 --> 00:06:26.400
have to keep in mind.

00:06:26.400 --> 00:06:31.420
So we can go into our
BannerExampleViewController,

00:06:31.420 --> 00:06:34.070
and we'll see that where we
set the AD_UNIT_ID, we're

00:06:34.070 --> 00:06:35.800
going to have to replace that.

00:06:35.800 --> 00:06:37.280
There's a Sample ID
in the slides

00:06:37.280 --> 00:06:38.530
which I can copy, paste.

00:06:41.030 --> 00:06:45.770
So if I put this in here, this
should actually return slides.

00:06:45.770 --> 00:06:49.520
I'm going to request test ads
for now, just because we're

00:06:49.520 --> 00:06:50.710
working in the simulator.

00:06:50.710 --> 00:06:54.740
I'll talk about how this works
later on in the slides.

00:06:54.740 --> 00:07:03.120
So I just clean my project, I'm
going to run it, and we've

00:07:03.120 --> 00:07:06.170
got test ads.

00:07:06.170 --> 00:07:08.010
I want you guys to
pay attention to

00:07:08.010 --> 00:07:09.760
the console as well.

00:07:09.760 --> 00:07:14.710
We output this message that says
what's the ID that you

00:07:14.710 --> 00:07:16.190
have to use for testing.

00:07:16.190 --> 00:07:19.340
For the simulator, you can use
GAD Simulator ID, but for

00:07:19.340 --> 00:07:22.730
devices, you're going to
have to use this ID.

00:07:22.730 --> 00:07:25.200
And there's some Ad Events here
that we use which I'll

00:07:25.200 --> 00:07:27.630
talk about later on.

00:07:27.630 --> 00:07:30.310
So it was pretty easy
to get up and going

00:07:30.310 --> 00:07:33.440
with the Banner example.

00:07:33.440 --> 00:07:35.020
We just ran the project,
we saw it

00:07:35.020 --> 00:07:37.500
running in our simulator.

00:07:37.500 --> 00:07:39.740
Let's look a little bit at the
code and see what's going on.

00:07:39.740 --> 00:07:41.590
In our
BannerExampleViewController

00:07:41.590 --> 00:07:44.510
Header File, we define
a GADBannerView.

00:07:44.510 --> 00:07:48.710
There's a GADBannerView header
which defines this object,

00:07:48.710 --> 00:07:52.480
which basically inherits
from UI view.

00:07:52.480 --> 00:07:54.800
And in our
BannerExampleViewController

00:07:54.800 --> 00:07:57.610
implementation, we actually
initialize this view, give it

00:07:57.610 --> 00:08:00.803
an AD_UNIT_ID, a Route View
Controller, and add it into

00:08:00.803 --> 00:08:02.600
our View Hierarchy.

00:08:02.600 --> 00:08:04.370
The reason that you need
to give it a Route View

00:08:04.370 --> 00:08:07.060
Controller is so that when you
click through, it needs to

00:08:07.060 --> 00:08:09.710
know which View Controller
to come back to.

00:08:09.710 --> 00:08:14.800
I can just quickly show you
this by clicking on this.

00:08:14.800 --> 00:08:17.430
So we're presenting this modal
view on top, and when we come

00:08:17.430 --> 00:08:21.370
back, we need to know to
actually put back the original

00:08:21.370 --> 00:08:24.270
view controller that you
were working with.

00:08:24.270 --> 00:08:27.030
And the final step is to
actually load a GADRequest

00:08:27.030 --> 00:08:32.530
Object which hits our
service for an ad.

00:08:32.530 --> 00:08:36.760
So let's talk about different
ad formats that you can use.

00:08:36.760 --> 00:08:38.799
The standard banner
is the one that's

00:08:38.799 --> 00:08:40.840
used the most on phones.

00:08:40.840 --> 00:08:45.380
That is what we actually have
here, a 320 by 50 banner.

00:08:45.380 --> 00:08:48.060
We've got some tablet formats
as well, medium rectangle,

00:08:48.060 --> 00:08:50.060
which is 300 by 250.

00:08:50.060 --> 00:08:53.400
We've got the full banner
and the leader board.

00:08:53.400 --> 00:08:57.020
The leader board spans the
width of the device when

00:08:57.020 --> 00:08:58.680
you're in a tablet format.

00:08:58.680 --> 00:09:02.060
We've also got this new thing we
introduced a couple of SDK

00:09:02.060 --> 00:09:04.000
versions ago called
Smart Banner.

00:09:04.000 --> 00:09:07.270
What we tried to do with Smart
Banner is actually smartly

00:09:07.270 --> 00:09:12.700
detect the width that you're in
and extend the ad view so

00:09:12.700 --> 00:09:15.660
that it takes up that
full width.

00:09:15.660 --> 00:09:19.730
On iOS, you basically define
this using your Smart Banner

00:09:19.730 --> 00:09:23.020
Portrait or Smart Banner
Landscape constants, which

00:09:23.020 --> 00:09:27.110
tells you which orientation
you're in, and we actually do

00:09:27.110 --> 00:09:28.360
the rest for you.

00:09:31.610 --> 00:09:34.420
So let's talk about some of the
ad request options that

00:09:34.420 --> 00:09:35.670
you can actually use.

00:09:38.240 --> 00:09:41.180
One of the fundamental ones is
actually enabling Test Mode.

00:09:41.180 --> 00:09:45.220
You don't want to test with live
ads, generally, because

00:09:45.220 --> 00:09:48.610
you want to avoid generating
any false impressions.

00:09:48.610 --> 00:09:52.750
So what you do is you can
actually define identifiers

00:09:52.750 --> 00:09:56.030
that you put into your
GADRequest Object.

00:09:56.030 --> 00:09:59.460
We've got this test devices
method which takes in an array

00:09:59.460 --> 00:10:01.780
of identifiers.

00:10:01.780 --> 00:10:05.070
We do ask that if you're using
a device for testing, if your

00:10:05.070 --> 00:10:08.710
device is running iOS 6 or
greater, you use Apple's new

00:10:08.710 --> 00:10:12.150
IDFA identifier, which
is available from

00:10:12.150 --> 00:10:13.560
the Ad Support Framework.

00:10:13.560 --> 00:10:16.880
If you're using lower than iOS
6, you can actually use the

00:10:16.880 --> 00:10:18.730
UDID identifier.

00:10:18.730 --> 00:10:23.410
So if we go back to our example,
we'll see that in

00:10:23.410 --> 00:10:27.470
request.testdevices here, I've
actually talked about using

00:10:27.470 --> 00:10:31.020
the GAD simulator, and this
actually is just a constant

00:10:31.020 --> 00:10:32.270
we've defined for the
GAD simulator.

00:10:35.240 --> 00:10:39.090
If we were going to define
another device, we can

00:10:39.090 --> 00:10:50.270
actually put in, for example,
this in here, and

00:10:50.270 --> 00:10:51.520
that should work fine.

00:10:55.660 --> 00:10:56.350
Targeting.

00:10:56.350 --> 00:10:59.550
Targeting is another important
thing that you can specify to

00:10:59.550 --> 00:11:03.240
receive better adds to
your application.

00:11:03.240 --> 00:11:05.850
We do ask, though, that if
you're using location and

00:11:05.850 --> 00:11:09.280
demographic targeting
information, you only use this

00:11:09.280 --> 00:11:14.290
if your application is already
asking this information for

00:11:14.290 --> 00:11:15.120
use with your application.

00:11:15.120 --> 00:11:19.100
So if your application is
already using Maps and needs

00:11:19.100 --> 00:11:22.420
the user's current location for
that, then you'd probably

00:11:22.420 --> 00:11:25.920
be better off using location
with your ads as well, but we

00:11:25.920 --> 00:11:29.010
ask that you don't use location
just for your

00:11:29.010 --> 00:11:30.470
advertisements.

00:11:30.470 --> 00:11:34.710
We've got some pretty simple
APIs for working with these

00:11:34.710 --> 00:11:39.410
targeting options as well,
as you can see.

00:11:39.410 --> 00:11:40.580
Ad Events.

00:11:40.580 --> 00:11:42.230
So Ad Events are actually
really important.

00:11:42.230 --> 00:11:45.310
They allow us to track the life
cycle of the ad, what

00:11:45.310 --> 00:11:48.970
happens, and allows you as a
developer to do custom things

00:11:48.970 --> 00:11:51.710
when these ads are being
presented, when they fail to

00:11:51.710 --> 00:11:55.150
receive, when a user clicks
through, for example, or even

00:11:55.150 --> 00:11:58.270
when a user comes back from
having gone outside of your

00:11:58.270 --> 00:12:00.880
application because of an ad.

00:12:00.880 --> 00:12:04.790
So in GADBannerViewDelegate,
which is a protocol, you've

00:12:04.790 --> 00:12:06.460
got some of these ad methods.

00:12:06.460 --> 00:12:08.120
All these methods
are optional.

00:12:08.120 --> 00:12:11.580
You don't have to implement
any of them.

00:12:11.580 --> 00:12:14.510
The AdMob SDK will work if you
don't have any of these

00:12:14.510 --> 00:12:16.930
implemented, but we do recommend
you implement them

00:12:16.930 --> 00:12:18.390
for a number of reasons.

00:12:18.390 --> 00:12:21.030
So let's go back to our example
and take a look.

00:12:21.030 --> 00:12:23.980
As you can see here, I've
implemented Ad View Did

00:12:23.980 --> 00:12:28.080
Receive Ad, which just logs
that my ad was received

00:12:28.080 --> 00:12:28.870
successfully.

00:12:28.870 --> 00:12:32.540
I've implemented Ad View Did
Fail to Receive Ad With Error,

00:12:32.540 --> 00:12:36.150
which talks about what kind of
error came back for me not

00:12:36.150 --> 00:12:37.070
receiving an ad.

00:12:37.070 --> 00:12:38.550
Let's implement another
one here.

00:12:43.290 --> 00:12:47.910
So let's talk about
what happens if

00:12:47.910 --> 00:12:50.070
Will Present Screen.

00:12:50.070 --> 00:12:55.610
So if we actually look into
our GADBannerViewDelegate,

00:12:55.610 --> 00:13:00.540
Will Present Screen is called
just before presenting the

00:13:00.540 --> 00:13:01.470
Full Screen view.

00:13:01.470 --> 00:13:03.970
So this probably means
that the user has

00:13:03.970 --> 00:13:06.110
clicked on your ad.

00:13:06.110 --> 00:13:17.274
So if we go back, we can say,
"user has clicked on ad."

00:13:17.274 --> 00:13:20.290
So let's clean this.

00:13:20.290 --> 00:13:21.540
Let's run it again.

00:13:26.490 --> 00:13:28.680
We've got our ad
that shows up.

00:13:28.680 --> 00:13:32.170
Click on our ad.

00:13:32.170 --> 00:13:36.580
Our console says, "user has
clicked on ad." We can go

00:13:36.580 --> 00:13:38.520
back, and we can
dismiss the ad.

00:13:38.520 --> 00:13:41.670
We've also got an Ad Event
for that that you can

00:13:41.670 --> 00:13:42.920
plug into as well.

00:13:46.130 --> 00:13:47.280
So play around with that.

00:13:47.280 --> 00:13:49.140
There's a lot of power there.

00:13:49.140 --> 00:13:50.800
It's pretty easy to
get up and going.

00:13:50.800 --> 00:13:53.980
All you have to do is actually
set the Delegate on the

00:13:53.980 --> 00:13:57.820
GADBannerView to be whatever is
implementing the protocol.

00:13:57.820 --> 00:14:01.930
So just to see what that looks
like in code, we set the

00:14:01.930 --> 00:14:05.510
Delegate for the Ad Banner View
to be this Banner Example

00:14:05.510 --> 00:14:07.570
View Controller Class, and the
reason we can do that, of

00:14:07.570 --> 00:14:10.840
course, is because the Banner
Example View Controller Class

00:14:10.840 --> 00:14:11.800
conforms to the

00:14:11.800 --> 00:14:13.050
GADBannerViewDelegate Protocol.

00:14:19.440 --> 00:14:20.040
Mediation.

00:14:20.040 --> 00:14:24.390
So what mediation actually
allows you to do is work with

00:14:24.390 --> 00:14:26.750
different ad networks.

00:14:26.750 --> 00:14:29.050
When you have different ad
networks, it's a pain

00:14:29.050 --> 00:14:30.880
sometimes to get up and going,
because all of them

00:14:30.880 --> 00:14:32.440
have their own APIs.

00:14:32.440 --> 00:14:37.380
So AdMob allows you to use
different adapters or custom

00:14:37.380 --> 00:14:41.200
events to basically just use the
AdMob API to request ads

00:14:41.200 --> 00:14:42.740
from multiple ad networks.

00:14:42.740 --> 00:14:46.220
This allows you to maximize
revenue for yourself.

00:14:46.220 --> 00:14:48.130
It's very easy to get
up and going.

00:14:48.130 --> 00:14:51.480
All you have to do is hit
mediation.admob.com and

00:14:51.480 --> 00:14:53.730
configure mediation placement
for yourself.

00:14:53.730 --> 00:14:56.390
As you can see in this example,
we've set up a

00:14:56.390 --> 00:15:00.830
mediation placement which
returns AdMob network ads 50%

00:15:00.830 --> 00:15:08.880
of the time, as well as house
ads the other 50% of the time.

00:15:08.880 --> 00:15:10.980
Integrating into your example
is super easy.

00:15:10.980 --> 00:15:13.360
All you have to do is change
the AD_UNIT_ID that you're

00:15:13.360 --> 00:15:14.630
working with.

00:15:14.630 --> 00:15:20.870
So let's swap out this Mediation
ID with the ID that

00:15:20.870 --> 00:15:22.120
we were using here.

00:15:24.800 --> 00:15:29.360
And let's try to get
back live ads.

00:15:29.360 --> 00:15:32.322
On our simulator, I'm going to
comment this out for now.

00:15:32.322 --> 00:15:39.230
And if we run that like that,
you're getting back ads using

00:15:39.230 --> 00:15:42.000
our mediation system.

00:15:47.330 --> 00:15:51.380
So we've got a lot of ad
networks on board, but we

00:15:51.380 --> 00:15:52.500
don't have all of them.

00:15:52.500 --> 00:15:56.110
And there are times when
publishers come to us and say

00:15:56.110 --> 00:15:59.800
they want to integrate with Ad
Network X or Ad Network Y, or

00:15:59.800 --> 00:16:03.740
even want to do something custom
that doesn't involve an

00:16:03.740 --> 00:16:04.280
ad network.

00:16:04.280 --> 00:16:07.960
So this is where custom events
comes into play.

00:16:07.960 --> 00:16:11.230
You can set up a custom event
on your mediation placement

00:16:11.230 --> 00:16:14.300
that either integrates into an
ad network that we don't

00:16:14.300 --> 00:16:17.630
already have an adapter for,
or does something else.

00:16:17.630 --> 00:16:20.630
I'm going to show you a really
cool example now where instead

00:16:20.630 --> 00:16:23.710
of actually showing an ad from
an ad network, I'm going to

00:16:23.710 --> 00:16:28.520
try to pull in a UI image
and show that.

00:16:28.520 --> 00:16:29.770
So let's go back
to our example.

00:16:33.310 --> 00:16:37.590
So I've already got subclasses
defined, so I'm going to add

00:16:37.590 --> 00:16:40.860
that to this file.

00:16:40.860 --> 00:16:45.140
I've got some custom event
code defined, so let's

00:16:45.140 --> 00:16:46.390
look at this code.

00:16:51.020 --> 00:16:55.930
So to define a custom event,
you've got to conform to the

00:16:55.930 --> 00:16:58.370
GAD Custom Event Banner
protocol.

00:16:58.370 --> 00:17:00.280
We've got an error here
which says that

00:17:00.280 --> 00:17:01.640
protocol doesn't exist.

00:17:01.640 --> 00:17:03.860
The reason for that
is we actually

00:17:03.860 --> 00:17:05.210
removed the Add-ons folder.

00:17:05.210 --> 00:17:08.220
So let's add back the Mediation
part of that folder.

00:17:11.579 --> 00:17:15.450
If we go into Add-ons,
Mediation, we don't have to

00:17:15.450 --> 00:17:19.040
copy it in, because it's
already there.

00:17:19.040 --> 00:17:23.329
And that GAD Custom Event
Banner is there.

00:17:23.329 --> 00:17:27.560
So if we go back to this
and clean, that

00:17:27.560 --> 00:17:29.040
error should go away.

00:17:29.040 --> 00:17:31.690
So we're conforming to the GAD
Custom Event Banner protocol.

00:17:31.690 --> 00:17:33.940
We probably don't need
to conform to the

00:17:33.940 --> 00:17:37.380
GADBannerViewDelegate protocol
in this specific example.

00:17:37.380 --> 00:17:38.678
We could remove this code.

00:17:41.670 --> 00:17:43.270
And let's look at
what we do here.

00:17:43.270 --> 00:17:46.320
We've got this one method that
you need to implement, and

00:17:46.320 --> 00:17:51.720
what that method does is when
a banner is requested, it

00:17:51.720 --> 00:17:54.620
basically hits this method when
it's time for your custom

00:17:54.620 --> 00:17:56.640
event in your waterfall.

00:17:56.640 --> 00:18:02.920
In this specific example, we
create a UI image with the

00:18:02.920 --> 00:18:04.780
Image Call Custom Event ad.

00:18:04.780 --> 00:18:08.640
I've got this PNG here, which
is a 320 by 50 picture of a

00:18:08.640 --> 00:18:11.560
very cute cat.

00:18:11.560 --> 00:18:15.500
And I create an Image View with
that, and I actually call

00:18:15.500 --> 00:18:19.290
my Did Receive Ad Callback
with that Image View.

00:18:19.290 --> 00:18:21.760
What happens here is it will
get put into the View

00:18:21.760 --> 00:18:25.350
Hierarchy once this method
right here is called.

00:18:25.350 --> 00:18:28.130
So let's look at what
you have to do here.

00:18:28.130 --> 00:18:30.500
I've already set up a Mediation
Placement that

00:18:30.500 --> 00:18:32.210
actually has this.

00:18:32.210 --> 00:18:34.880
Here's the AD_UNIT_ID for it.

00:18:34.880 --> 00:18:40.600
So if I go into here and
actually change the AD_UNIT_ID

00:18:40.600 --> 00:18:42.670
here, notice that I don't
actually have to change

00:18:42.670 --> 00:18:44.940
anything with the way I'm
setting up my ad.

00:18:44.940 --> 00:18:47.560
This should just
work hopefully.

00:18:47.560 --> 00:18:54.330
So if we run this, we've got
a picture of a cute cat.

00:18:58.190 --> 00:19:00.730
So just to go over, I guess,
exactly what I did right

00:19:00.730 --> 00:19:04.050
there, we've got this
GADCustomEventBanner protocol

00:19:04.050 --> 00:19:06.860
that you've got to conform to,
and we've got this Request

00:19:06.860 --> 00:19:09.420
Banner Ad Example.

00:19:09.420 --> 00:19:12.280
You could actually give it a
parameter label as well.

00:19:12.280 --> 00:19:14.340
These are things that
you define in

00:19:14.340 --> 00:19:15.440
your AdMob front end.

00:19:15.440 --> 00:19:17.810
You can do different things with
that, depending on what

00:19:17.810 --> 00:19:22.190
kind of parameter and labels
are passed through.

00:19:22.190 --> 00:19:24.840
There are a bunch of Ad
Events that you do

00:19:24.840 --> 00:19:25.580
have to conform to.

00:19:25.580 --> 00:19:28.615
So in my specific example,
because I knew that the image

00:19:28.615 --> 00:19:32.290
would always come back, I just
called Did Receive Ad

00:19:32.290 --> 00:19:33.690
straightaway.

00:19:33.690 --> 00:19:38.260
If you remember, I just called
Did Receive Ad in my Request

00:19:38.260 --> 00:19:40.450
Banner Ad method.

00:19:40.450 --> 00:19:42.250
However, if you're implementing
another ad

00:19:42.250 --> 00:19:46.870
network, what you probably
want to do is map these

00:19:46.870 --> 00:19:49.970
methods to callbacks that the
ad network provides you.

00:19:53.760 --> 00:19:56.670
So the final thing I want to
go through is working with

00:19:56.670 --> 00:19:57.470
interstitials.

00:19:57.470 --> 00:20:00.370
Interstitials are full screen
advertisements that pop up and

00:20:00.370 --> 00:20:03.230
try to give you a rich
experience working with

00:20:03.230 --> 00:20:04.480
advertisements.

00:20:06.790 --> 00:20:10.420
Getting going with interstitials
is super easy.

00:20:10.420 --> 00:20:14.410
All you have to do is define a
GAD Interstitial, and the rest

00:20:14.410 --> 00:20:16.680
of it is very similar to
getting going with

00:20:16.680 --> 00:20:18.250
GADBannerViews.

00:20:18.250 --> 00:20:20.800
The one difference, though, is
that when you do request an

00:20:20.800 --> 00:20:25.020
interstitial in this example,
it doesn't show right away.

00:20:25.020 --> 00:20:27.960
You can see here, in
Interstitial Did Receive Ad,

00:20:27.960 --> 00:20:31.000
you actually explicitly call
the Present From Route View

00:20:31.000 --> 00:20:32.710
Controller method.

00:20:32.710 --> 00:20:40.840
So let's open up an interstitial
example here.

00:20:40.840 --> 00:20:43.490
So I've got my interstitial
example that I downloaded from

00:20:43.490 --> 00:20:44.740
developers.google.com.

00:20:49.880 --> 00:20:53.910
And exactly like last time,
we've checked to make sure

00:20:53.910 --> 00:20:56.100
that all the frameworks
are included.

00:20:56.100 --> 00:20:59.980
We haven't added the AdMob SDK
here, so let's add those.

00:21:06.700 --> 00:21:11.120
And exactly like last time, we
don't need this until we see

00:21:11.120 --> 00:21:13.920
that there's a broken reference
or something similar

00:21:13.920 --> 00:21:15.360
because of it.

00:21:15.360 --> 00:21:19.530
And if we look in our Build
Settings under Linker Flags,

00:21:19.530 --> 00:21:23.840
we've already got the Objective
C Linker Flag.

00:21:23.840 --> 00:21:28.490
So this code actually shows off
the Splash Interstitial,

00:21:28.490 --> 00:21:31.830
which is a little bit more
advanced, which I don't want

00:21:31.830 --> 00:21:36.560
to show off for the sake
of this example.

00:21:36.560 --> 00:21:37.940
So let's comment that out.

00:21:37.940 --> 00:21:39.250
And let's get an AD_UNIT_ID.

00:21:41.810 --> 00:21:45.040
I believe that my AD_UNIT_ID for
my Banner Example should

00:21:45.040 --> 00:21:48.415
work for a Test Interstitial
ad.

00:22:01.350 --> 00:22:06.690
And if we put that Interstitial
AD_UNIT_ID,

00:22:06.690 --> 00:22:12.900
notice that this is getting
called when we define here.

00:22:12.900 --> 00:22:14.590
So we could actually--

00:22:14.590 --> 00:22:16.710
instead of just calling into the
App Delegate because we're

00:22:16.710 --> 00:22:19.530
not using the Splash
Interstitial, let's just

00:22:19.530 --> 00:22:21.140
define it here.

00:22:21.140 --> 00:22:22.190
Makes it easier to see.

00:22:22.190 --> 00:22:23.900
So I've cleared that.

00:22:23.900 --> 00:22:25.560
So let's run this and see
what it looks like.

00:22:25.560 --> 00:22:30.030
Notice that here, once I load
the request in Interstitial

00:22:30.030 --> 00:22:33.400
Did Receive Ad, I actually
automatically present it.

00:22:33.400 --> 00:22:36.920
Like I said, you don't need to
present it right away, but

00:22:36.920 --> 00:22:38.170
it's definitely an
option as well.

00:22:42.370 --> 00:22:45.950
And the simulator's being used
by a GADBannerExample, so

00:22:45.950 --> 00:22:48.880
let's kill that and
run this again.

00:23:02.270 --> 00:23:02.650
Cool.

00:23:02.650 --> 00:23:06.440
So we've got an iPad simulator
up here with a Show

00:23:06.440 --> 00:23:07.640
Interstitial Button.

00:23:07.640 --> 00:23:10.070
If we look at the code for my
Show Interstitial Button, all

00:23:10.070 --> 00:23:13.630
it does is define a
GADInterstitial, set its

00:23:13.630 --> 00:23:18.380
delegate, and then load a
request, so let's do that.

00:23:22.020 --> 00:23:24.710
And here's an interstitial
example.

00:23:24.710 --> 00:23:28.990
You can typically play with
this, you can dismiss it.

00:23:28.990 --> 00:23:34.520
And if we look at the Delegate
for GADInterstitial, there are

00:23:34.520 --> 00:23:36.540
a bunch of methods which
are very similar to the

00:23:36.540 --> 00:23:39.620
GADBannerViewDelegate methods,
which means you can still do

00:23:39.620 --> 00:23:42.060
things like do something custom
when the interstitial

00:23:42.060 --> 00:23:45.300
is dismissed, do something
custom when it's shown.

00:23:45.300 --> 00:23:47.670
If you have some sort of game
play that you have, you can

00:23:47.670 --> 00:23:48.420
pause that.

00:23:48.420 --> 00:23:50.980
If you have an animation going
on in the background, probably

00:23:50.980 --> 00:23:52.230
want to pause that.

00:23:55.390 --> 00:23:59.220
So that's pretty much all you
really need to get to get up

00:23:59.220 --> 00:24:01.210
and going with the AdMob SDK.

00:24:01.210 --> 00:24:03.290
I've got some resources
listed here.

00:24:03.290 --> 00:24:05.710
If you want any further
information, you can download

00:24:05.710 --> 00:24:09.070
our SDK off the
developers.google.com page.

00:24:09.070 --> 00:24:12.900
This is also where our
documentation is as well, so

00:24:12.900 --> 00:24:14.360
feel free to check that out.

00:24:14.360 --> 00:24:17.190
We've actually got a Developer
Forum, which I want

00:24:17.190 --> 00:24:18.550
you to check out.

00:24:18.550 --> 00:24:20.720
It's actually me and some of
the other members of our

00:24:20.720 --> 00:24:23.180
Developer Relations Team that
are answering questions there,

00:24:23.180 --> 00:24:25.110
so feel free to ask
any integration

00:24:25.110 --> 00:24:26.560
questions you have.

00:24:26.560 --> 00:24:29.270
We've got a blog where we try
to post cool integrations we

00:24:29.270 --> 00:24:30.490
can come up with.

00:24:30.490 --> 00:24:34.390
Recent examples, we're working
with Cocos2d, for example.

00:24:34.390 --> 00:24:38.390
And we've got a Google Project
hosting site where we put up

00:24:38.390 --> 00:24:40.300
our own samples.

00:24:40.300 --> 00:24:41.950
Thanks and hope you have
fun trying to get

00:24:41.950 --> 00:24:43.200
started with AdMob.

