WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.482
[BEEP]

00:00:01.482 --> 00:00:06.430
[THEME MUSIC]

00:00:06.430 --> 00:00:08.644
ANDREW: So, OK, so
we're back with Dash.

00:00:08.644 --> 00:00:09.560
EMILY: Are we rolling?

00:00:09.560 --> 00:00:10.040
ANDREW: We're rolling.

00:00:10.040 --> 00:00:10.430
EMILY: Oh.

00:00:10.430 --> 00:00:12.430
ANDREW: Now we have to
restart the introduction.

00:00:12.430 --> 00:00:13.780
[LAUGHTER]

00:00:13.780 --> 00:00:15.091
EMILY: I'm sorry.

00:00:15.091 --> 00:00:15.590
Hi.

00:00:15.590 --> 00:00:18.795
ANDREW: OK, yeah.

00:00:18.795 --> 00:00:20.510
We've gone full pirate.

00:00:20.510 --> 00:00:21.280
EMILY: [CHUCKLE]

00:00:21.280 --> 00:00:24.140
ANDREW: We've gone
full pirate with Dash.

00:00:24.140 --> 00:00:28.790
So we're in here, now,
in our Dart interface.

00:00:28.790 --> 00:00:32.119
And we would like to have
this be stream-based,

00:00:32.119 --> 00:00:34.760
because that is more sort of
idiomatic to Dart and Flutter,

00:00:34.760 --> 00:00:35.480
as opposed to just polling it.

00:00:35.480 --> 00:00:36.340
EMILY: Getting a single read in.

00:00:36.340 --> 00:00:36.840
Yeah.

00:00:36.840 --> 00:00:39.014
ANDREW: If it's for C++,
polling something, a value,

00:00:39.014 --> 00:00:39.930
would make more sense.

00:00:39.930 --> 00:00:43.160
But we have streams
in Dart and Flutter.

00:00:43.160 --> 00:00:44.060
And they're great.

00:00:44.060 --> 00:00:45.790
So we would like to--

00:00:45.790 --> 00:00:47.690
we can keep all this,
that we have, I think.

00:00:47.690 --> 00:00:51.320
We just need a new method
for subscribing to a stream.

00:00:51.320 --> 00:00:53.510
And then we're going to
have to, in our Java-land,

00:00:53.510 --> 00:00:55.730
our Java code, over
here, we're going

00:00:55.730 --> 00:00:58.490
to have to find a way
to kick something out.

00:00:58.490 --> 00:01:00.110
Rather than just
setting a thing here,

00:01:00.110 --> 00:01:01.550
so that we can grab
it when we want it,

00:01:01.550 --> 00:01:03.091
we want to actually
kick a value out.

00:01:03.091 --> 00:01:05.690
So we'll need a
methodChannel, so that we

00:01:05.690 --> 00:01:10.560
can call a method in Dart.

00:01:10.560 --> 00:01:15.380
EMILY: So there's actually an
eventChannel class that allows

00:01:15.380 --> 00:01:18.236
you to hand a stream-like
object to Dart--

00:01:18.236 --> 00:01:18.860
ANDREW: Really?

00:01:18.860 --> 00:01:19.850
EMILY: --and then
you can do that.

00:01:19.850 --> 00:01:21.265
ANDREW: Is that in the
guide that I probably

00:01:21.265 --> 00:01:21.530
didn't read all of?

00:01:21.530 --> 00:01:22.127
EMILY: Yeah.

00:01:22.127 --> 00:01:23.460
That's part of the-- there's a--

00:01:23.460 --> 00:01:23.960
[TYPING]

00:01:23.960 --> 00:01:25.530
If you search--
yeah-- eventChannel.

00:01:25.530 --> 00:01:26.760
ANDREW: Hold on.

00:01:26.760 --> 00:01:28.260
EMILY: Flutter eventChannel.

00:01:30.822 --> 00:01:32.280
ANDREW: There is--
Oh, my goodness.

00:01:32.280 --> 00:01:32.930
EMILY: Docs.

00:01:32.930 --> 00:01:34.466
There we go.

00:01:34.466 --> 00:01:36.881
ANDREW: What?

00:01:36.881 --> 00:01:37.862
Whoa.

00:01:37.862 --> 00:01:39.320
[LAUGHS] That's
the Java end of it.

00:01:39.320 --> 00:01:40.040
EMILY: It's all Java!

00:01:40.040 --> 00:01:41.240
ANDREW: We're swept
in the Java doc style.

00:01:41.240 --> 00:01:43.531
I was like, are we-- did we
just go to another company?

00:01:43.531 --> 00:01:44.320
What happened?

00:01:44.320 --> 00:01:45.054
EMILY: [CHUCKLE]

00:01:45.054 --> 00:01:46.220
ANDREW: What did we just do?

00:01:46.220 --> 00:01:48.503
So there's Java involved.

00:01:48.503 --> 00:01:49.910
That's-- we know that.

00:01:49.910 --> 00:01:50.880
EMILY: Yes.

00:01:50.880 --> 00:01:53.532
ANDREW: The Dart-- there we go.

00:01:53.532 --> 00:01:54.592
A namedChannel for--

00:01:54.592 --> 00:01:55.300
EMILY: Oh, sorry.

00:01:55.300 --> 00:01:56.930
I thought you were looking
for the actual Dart version.

00:01:56.930 --> 00:01:57.560
ANDREW: No, I was not.

00:01:57.560 --> 00:01:58.518
I was looking for this.

00:01:58.518 --> 00:02:01.490
I just clicked on
the wrong thing.

00:02:01.490 --> 00:02:02.040
Interesting.

00:02:02.040 --> 00:02:05.357
I've never had call
to use this yet.

00:02:05.357 --> 00:02:06.440
This kind of drives home--

00:02:06.440 --> 00:02:08.690
we're talking about how you
won't spend that much time

00:02:08.690 --> 00:02:11.300
developing plugins, like this,
because, normally, the Flutter

00:02:11.300 --> 00:02:12.890
team is behind a
whole bunch of them.

00:02:12.890 --> 00:02:15.470
And the community
makes even more.

00:02:15.470 --> 00:02:20.360
This-- my embarrassment kind
of just drives home that point.

00:02:20.360 --> 00:02:22.790
EMILY: Well, no, I guess
it just shows that, yeah,

00:02:22.790 --> 00:02:25.610
even we're not writing
plugins most of the time.

00:02:25.610 --> 00:02:26.840
ANDREW: Yeah, that is true.

00:02:26.840 --> 00:02:29.407
Well, tell you what, why
don't we switch seats again?

00:02:29.407 --> 00:02:31.490
And you can-- why don't
you show me how it's done?

00:02:31.490 --> 00:02:31.745
EMILY: All right.

00:02:31.745 --> 00:02:32.000
Cool.

00:02:32.000 --> 00:02:32.499
ANDREW: OK.

00:02:35.875 --> 00:02:37.375
EMILY: Back on the
laptop of coding.

00:02:37.375 --> 00:02:39.270
ANDREW: [CHUCKLE]

00:02:39.270 --> 00:02:41.910
EMILY: OK, so let's
start with Dart.

00:02:41.910 --> 00:02:44.070
ANDREW: Sure.

00:02:44.070 --> 00:02:47.811
EMILY: So we're going to--

00:02:47.811 --> 00:02:48.310
wait.

00:02:48.310 --> 00:02:49.010
Is this our example?

00:02:49.010 --> 00:02:49.620
No.

00:02:49.620 --> 00:02:50.460
ANDREW: That's the app.

00:02:50.460 --> 00:02:51.150
That's the example app.

00:02:51.150 --> 00:02:51.780
EMILY: Oh, OK.

00:02:51.780 --> 00:02:57.300
Let's-- where is our Dart?

00:02:57.300 --> 00:02:57.990
Here we go.

00:02:57.990 --> 00:02:58.680
OK.

00:02:58.680 --> 00:03:00.210
So we have a methodChannel.

00:03:00.210 --> 00:03:03.250
Let's also declare
a eventChannel.

00:03:03.250 --> 00:03:07.082
Static cost eventChannel.

00:03:07.082 --> 00:03:09.956
[TYPING]

00:03:09.956 --> 00:03:12.340
ANDREW: How long have you
been working with Dart, now,

00:03:12.340 --> 00:03:12.840
actually?

00:03:17.670 --> 00:03:19.670
[LAUGHTER]

00:03:19.670 --> 00:03:22.910
EMILY: I want to say
like, not consecutively,

00:03:22.910 --> 00:03:24.470
but a total of five years.

00:03:24.470 --> 00:03:25.040
ANDREW: Wow.

00:03:25.040 --> 00:03:26.090
OK.

00:03:26.090 --> 00:03:29.100
I feel less bad for
not knowing this now,

00:03:29.100 --> 00:03:34.070
since I've been working with
Dart for like six months now.

00:03:34.070 --> 00:03:35.060
EMILY: All right.

00:03:35.060 --> 00:03:37.280
OK, so let's call this--

00:03:37.280 --> 00:03:39.919
we'll call it barometer
stream, maybe?

00:03:39.919 --> 00:03:41.210
ANDREW: Pressure stream, maybe?

00:03:41.210 --> 00:03:42.545
EMILY: Pressure stream.

00:03:42.545 --> 00:03:43.670
ANDREW: That will make us--

00:03:43.670 --> 00:03:45.340
because we're just so metal.

00:03:45.340 --> 00:03:46.889
EMILY: Yeah, it
sounds so hardcore.

00:03:46.889 --> 00:03:47.430
ANDREW: Yeah.

00:03:47.430 --> 00:03:49.580
EMILY: OK.

00:03:49.580 --> 00:03:53.110
And now-- so in our initialize--

00:03:53.110 --> 00:03:55.460
I think we also need
to initialize this.

00:03:59.100 --> 00:03:59.600
Oh, wait.

00:03:59.600 --> 00:04:01.822
ANDREW: Wait, you already
initialized it, right there.

00:04:01.822 --> 00:04:02.322
EMILY: Yes.

00:04:02.322 --> 00:04:03.520
ANDREW: Right?

00:04:03.520 --> 00:04:04.101
EMILY: Yes.

00:04:04.101 --> 00:04:04.600
Sorry.

00:04:04.600 --> 00:04:08.162
OK, so now we need to
have our Dart method that

00:04:08.162 --> 00:04:08.870
returns a stream.

00:04:08.870 --> 00:04:11.936
So just be static stream.

00:04:11.936 --> 00:04:14.380
We want a stream of the--

00:04:14.380 --> 00:04:15.880
ANDREW: Yeah, doubles
would be fine.

00:04:15.880 --> 00:04:16.890
EMILY: --readings.

00:04:16.890 --> 00:04:19.710
And then what do we
want to call this?

00:04:19.710 --> 00:04:20.959
ANDREW: This will be a getter.

00:04:23.890 --> 00:04:25.750
EMILY: Pressure stream.

00:04:25.750 --> 00:04:27.100
ANDREW: Pressure values.

00:04:27.100 --> 00:04:30.290
Pressure-- what are you--

00:04:30.290 --> 00:04:31.890
pressure stream is fine.

00:04:31.890 --> 00:04:33.790
EMILY: OK.

00:04:33.790 --> 00:04:36.887
I think, if I can type--

00:04:36.887 --> 00:04:37.720
ANDREW: So we have--

00:04:37.720 --> 00:04:41.290
OK, so we just-- we're
defining a getter.

00:04:41.290 --> 00:04:43.170
So that is a little
teeny function

00:04:43.170 --> 00:04:45.870
that will return a
stream of doubles.

00:04:45.870 --> 00:04:50.100
And the function, the getter,
itself, is that going to be

00:04:50.100 --> 00:04:51.600
asynchronous or is it going to--

00:04:51.600 --> 00:04:52.510
EMILY: It's not.

00:04:52.510 --> 00:04:53.680
Because-- yeah, sorry.

00:04:53.680 --> 00:04:55.250
I was in future mode.

00:04:55.250 --> 00:04:55.750
Yeah.

00:04:55.750 --> 00:04:57.500
No, the getter is just
returning a stream.

00:04:57.500 --> 00:04:59.835
And the stream will
receive updates and make--

00:04:59.835 --> 00:05:01.710
ANDREW: But I mean, all
our other methods are

00:05:01.710 --> 00:05:03.359
async too, right?

00:05:03.359 --> 00:05:03.900
EMILY: Right.

00:05:03.900 --> 00:05:05.441
That's why I was
initially-- but then

00:05:05.441 --> 00:05:09.760
it says that the results,
if you have async,

00:05:09.760 --> 00:05:12.094
the result has to be a future.

00:05:12.094 --> 00:05:14.010
And we don't want a
future, because the stream

00:05:14.010 --> 00:05:15.494
is going to be getting the--

00:05:15.494 --> 00:05:17.410
ANDREW: So we don't want
a future of a stream.

00:05:17.410 --> 00:05:17.720
EMILY: Yeah, I guess--

00:05:17.720 --> 00:05:19.410
ANDREW: We just want the stream.

00:05:19.410 --> 00:05:25.020
EMILY: An Interesting question
is, with this invoking method,

00:05:25.020 --> 00:05:26.310
is that asynchronous?

00:05:26.310 --> 00:05:27.317
I don't think so.

00:05:27.317 --> 00:05:29.400
ANDREW: Well, so the other
calls are asynchronous,

00:05:29.400 --> 00:05:31.109
because you have to
pass a message into--

00:05:31.109 --> 00:05:32.358
EMILY: And then it has to do--

00:05:32.358 --> 00:05:33.430
ANDREW: --the other side.

00:05:33.430 --> 00:05:34.763
But we're just going to return--

00:05:34.763 --> 00:05:37.710
I assume the eventChannel,
itself, exposes a stream?

00:05:37.710 --> 00:05:40.690
EMILY: Yeah, but we're going to
have to pass a message to Java

00:05:40.690 --> 00:05:42.612
to say, give me the stream.

00:05:42.612 --> 00:05:43.320
ANDREW: OK, but--

00:05:43.320 --> 00:05:45.250
EMILY: I think we should be able
to just get away with a stream.

00:05:45.250 --> 00:05:46.810
ANDREW: OK, let's start.

00:05:46.810 --> 00:05:51.240
And the static analysis will
let us know when we're wrong.

00:05:51.240 --> 00:05:54.540
EMILY: Or failing to get a
number, that might work, too.

00:05:54.540 --> 00:05:58.620
OK, so then, Channel--

00:05:58.620 --> 00:05:59.479
I can type.

00:05:59.479 --> 00:06:01.020
ANDREW: Wait,
eventChannel, you mean?

00:06:01.020 --> 00:06:01.985
EMILY: Thank you.

00:06:01.985 --> 00:06:04.895
You are on top of things here.

00:06:04.895 --> 00:06:06.520
ANDREW: I'm paying
attention, because I

00:06:06.520 --> 00:06:08.040
don't know what's going on.

00:06:08.040 --> 00:06:10.700
EMILY: I think--
do we just return--

00:06:10.700 --> 00:06:11.620
no.

00:06:11.620 --> 00:06:12.220
There's--

00:06:12.220 --> 00:06:14.880
ANDREW: Receive
broadcast stream?

00:06:14.880 --> 00:06:15.816
EMILY: Yeah.

00:06:15.816 --> 00:06:16.610
Yeah, maybe that.

00:06:16.610 --> 00:06:18.568
ANDREW: I'm just looking
for the word "stream."

00:06:18.568 --> 00:06:21.170
That's like a--

00:06:21.170 --> 00:06:23.910
EMILY: Now, this is going to
read-- oh, this is not VS code.

00:06:23.910 --> 00:06:26.134
I'm sorry.

00:06:26.134 --> 00:06:27.300
OK, let's see, eventChannel.

00:06:27.300 --> 00:06:29.670
ANDREW: This is the downside
to having official support

00:06:29.670 --> 00:06:30.584
for so many editors.

00:06:30.584 --> 00:06:32.500
EMILY: OK, so stream,
we just returned stream.

00:06:32.500 --> 00:06:32.710
So we just return that.

00:06:32.710 --> 00:06:34.140
ANDREW: OK, perfect.

00:06:34.140 --> 00:06:34.950
EMILY: Great.

00:06:34.950 --> 00:06:38.160
ANDREW: And is that a
typed function or are we

00:06:38.160 --> 00:06:39.582
going to get stream of dynamic?

00:06:39.582 --> 00:06:40.290
EMILY: Oh, right.

00:06:40.290 --> 00:06:42.060
So, yes.

00:06:42.060 --> 00:06:43.830
And actually-- OK,
here's a thing.

00:06:43.830 --> 00:06:47.734
I think we should have
a stream variable,

00:06:47.734 --> 00:06:48.900
and only initialize it once.

00:06:48.900 --> 00:06:50.620
Because we don't need multiple--

00:06:50.620 --> 00:06:54.240
if multiple people-- or if
we subscribe to the stream,

00:06:54.240 --> 00:06:56.070
we don't need a
separate Java object.

00:06:56.070 --> 00:06:58.320
ANDREW: And it says it's
a broadcast stream, which

00:06:58.320 --> 00:06:59.640
can handle multiple listeners.

00:06:59.640 --> 00:07:00.230
Right?

00:07:00.230 --> 00:07:00.730
EMILY: True.

00:07:00.730 --> 00:07:01.590
Yeah.

00:07:01.590 --> 00:07:06.420
So let us declare,
make everything static.

00:07:06.420 --> 00:07:09.580
This is great.

00:07:09.580 --> 00:07:13.116
It's not constant
stream, double.

00:07:13.116 --> 00:07:17.085
[TYPING]

00:07:17.085 --> 00:07:18.710
No, I was going to
say pressure stream.

00:07:18.710 --> 00:07:20.199
Yeah, pressure stream.

00:07:26.067 --> 00:07:32.794
OK, and then we'll
say it can return--

00:07:32.794 --> 00:07:38.800
oh, I'll just do a click
and return pressure stream

00:07:38.800 --> 00:07:40.270
if not null.

00:07:40.270 --> 00:07:46.340
And then we're going to
do our call, this thing.

00:07:46.340 --> 00:07:48.035
So if-- oh wait, we
need to sign that.

00:07:48.035 --> 00:07:48.660
ANDREW: I was--

00:07:48.660 --> 00:07:49.160
OK.

00:07:52.132 --> 00:07:56.110
[TYPING]

00:07:56.110 --> 00:07:56.630
EMILY: Oops.

00:07:56.630 --> 00:07:59.866
Question equals no.

00:07:59.866 --> 00:08:00.828
Conditions--

00:08:04.195 --> 00:08:07.288
ANDREW: Is there are double
question mark equals?

00:08:07.288 --> 00:08:08.686
[TYPING]

00:08:08.686 --> 00:08:09.527
That is cool.

00:08:09.527 --> 00:08:11.110
EMILY: Oh, you didn't
know about that?

00:08:11.110 --> 00:08:11.850
Oh, yeah.

00:08:11.850 --> 00:08:14.270
That's a newish
feature but, yeah.

00:08:14.270 --> 00:08:16.460
Basically it's saying,
if this is null,

00:08:16.460 --> 00:08:20.330
do the thing, otherwise,
just have the value.

00:08:20.330 --> 00:08:22.097
So now we will return--

00:08:22.097 --> 00:08:22.930
ANDREW: Interesting.

00:08:22.930 --> 00:08:24.230
EMILY: --pressure stream.

00:08:24.230 --> 00:08:25.714
That should work.

00:08:25.714 --> 00:08:27.380
OK, so now we've got
all our Dart stuff.

00:08:29.930 --> 00:08:32.360
Do we want to delve
into the Java?

00:08:32.360 --> 00:08:36.110
ANDREW: So that's-- so on the
Java side, we'll have to make--

00:08:36.110 --> 00:08:38.480
so we have methodChannels
on both sides.

00:08:38.480 --> 00:08:41.960
So we would need eventChannels
on both sides, too, right?

00:08:41.960 --> 00:08:42.559
EMILY: Yes.

00:08:42.559 --> 00:08:43.309
ANDREW: All right.

00:08:43.309 --> 00:08:47.420
EMILY: So I think
you clicked on--

00:08:47.420 --> 00:08:48.170
oh, my gosh.

00:08:48.170 --> 00:08:48.670
It's Java.

00:08:48.670 --> 00:08:51.780
ANDREW: We all find
our way eventually.

00:08:51.780 --> 00:08:52.640
EMILY: So--

00:08:52.640 --> 00:08:53.840
ANDREW: Yeah, let's--

00:08:53.840 --> 00:08:55.590
EMILY: Do a little bit of that?

00:08:55.590 --> 00:08:58.170
ANDREW: Yeah, let's--
you should keep going.

00:08:58.170 --> 00:08:58.981
EMILY: OK.

00:08:58.981 --> 00:08:59.480
All right.

00:08:59.480 --> 00:09:08.700
So in here, we're going to
register our eventChannel.

00:09:08.700 --> 00:09:09.660
Thank you.

00:09:09.660 --> 00:09:11.940
ANDREW: So we're in the
register with method.

00:09:11.940 --> 00:09:14.554
For those of you who
saw us last time,

00:09:14.554 --> 00:09:15.970
we talked about
this a little bit.

00:09:15.970 --> 00:09:19.680
This is where-- this is called--

00:09:19.680 --> 00:09:22.182
when the plug-in
is first spun up.

00:09:22.182 --> 00:09:23.640
And so this is the,
hey, get ready.

00:09:23.640 --> 00:09:25.490
I'm going to make
some calls on you.

00:09:25.490 --> 00:09:26.740
And I want some data from you.

00:09:26.740 --> 00:09:29.310
So this is where it
registers that methodChannel,

00:09:29.310 --> 00:09:33.120
so it can receive
requests to run methods.

00:09:33.120 --> 00:09:33.880
And then--

00:09:33.880 --> 00:09:34.588
EMILY: Import it.

00:09:34.588 --> 00:09:37.840
And I'm sure there's a shortcut
for this that I am not--

00:09:37.840 --> 00:09:38.940
ANDREW: Alt, Enter, yeah.

00:09:38.940 --> 00:09:40.620
EMILY: All right,
so there's that.

00:09:40.620 --> 00:09:41.895
ANDREW: I'm sure there's
one in VS code, too.

00:09:41.895 --> 00:09:42.770
EMILY: Yes, there is.

00:09:42.770 --> 00:09:43.830
ANDREW: But I don't know.

00:09:43.830 --> 00:09:46.371
I used to use Visual Studio all
the time, and then I stopped.

00:09:46.371 --> 00:09:47.700
EMILY: OK, an eventChannel.

00:09:47.700 --> 00:09:49.340
ANDREW: What do we have?

00:09:49.340 --> 00:09:51.705
EventSink, EndStreamHandler.

00:09:55.359 --> 00:09:56.900
EMILY: So here we
have our messenger.

00:09:56.900 --> 00:09:58.680
Oh, it's basically
the same stuff.

00:09:58.680 --> 00:10:10.218
So registrar.messenger and the
name of the thing that we want.

00:10:10.218 --> 00:10:12.830
Yeah, OK.

00:10:12.830 --> 00:10:17.790
And then, OK, so then we want
to set this barometer plug-in

00:10:17.790 --> 00:10:19.300
as the handler for that.

00:10:19.300 --> 00:10:22.020
So I think there
is a set something

00:10:22.020 --> 00:10:24.916
handler or stream handler.

00:10:24.916 --> 00:10:25.852
EventChannel--

00:10:29.596 --> 00:10:31.010
ANDREW: Set stream handler?

00:10:31.010 --> 00:10:31.970
EMILY: This one.

00:10:31.970 --> 00:10:34.778
It's like it's almost
just exactly what I said.

00:10:34.778 --> 00:10:39.469
EventChannel.setStreamHandler,
And it's going to be--

00:10:39.469 --> 00:10:40.010
ANDREW: This.

00:10:40.010 --> 00:10:40.820
EMILY: --this.

00:10:40.820 --> 00:10:42.420
Now-- wait a minute.

00:10:42.420 --> 00:10:47.500
So why did we do a new here
instead of-- oh, it's a static.

00:10:47.500 --> 00:10:48.155
OK.

00:10:48.155 --> 00:10:50.260
Do we want the same object?

00:10:50.260 --> 00:10:53.150
No, probably not, a
separate one in case--

00:10:53.150 --> 00:10:54.690
what I'm saying is do we want--

00:10:54.690 --> 00:10:56.300
ANDREW: Oh, I see
what you're saying.

00:10:56.300 --> 00:10:57.520
We're going to want to have--

00:10:57.520 --> 00:10:59.160
EMILY: Independent, I think so.

00:10:59.160 --> 00:11:00.659
ANDREW: Now I've
caught up with you.

00:11:00.659 --> 00:11:02.810
Yeah, so you're going
to want to capture the--

00:11:02.810 --> 00:11:03.650
wait.

00:11:03.650 --> 00:11:05.566
That's going to give us
two separate instances

00:11:05.566 --> 00:11:06.230
of the plug-in.

00:11:06.230 --> 00:11:07.120
EMILY: That's what
I was just asking.

00:11:07.120 --> 00:11:07.910
ANDREW: Yeah, no.

00:11:07.910 --> 00:11:09.245
What I was going to say
is we should capture--

00:11:09.245 --> 00:11:10.310
EMILY: If anything,
we should do the same.

00:11:10.310 --> 00:11:11.915
ANDREW: --pull that
into a local variable.

00:11:11.915 --> 00:11:12.170
EMILY: Great.

00:11:12.170 --> 00:11:13.390
ANDREW: And then-- yeah.

00:11:13.390 --> 00:11:14.848
No, you had it
right to begin with.

00:11:14.848 --> 00:11:16.855
EMILY: OK.

00:11:16.855 --> 00:11:18.827
Login.

00:11:18.827 --> 00:11:24.570
[TYPING]

00:11:24.570 --> 00:11:25.236
ANDREW: Perfect.

00:11:28.945 --> 00:11:30.320
And then we're
going to need to--

00:11:30.320 --> 00:11:31.000
EMILY: Oh, wait.

00:11:31.000 --> 00:11:32.600
ANDREW: Do we need an
interface that we have to--

00:11:32.600 --> 00:11:33.308
EMILY: Oh, right.

00:11:33.308 --> 00:11:33.870
Yes.

00:11:33.870 --> 00:11:37.010
Yeah, so stream handler
expects stream handler.

00:11:37.010 --> 00:11:39.460
So we're going to say
implements stream handler.

00:11:43.660 --> 00:11:44.160
No?

00:11:44.160 --> 00:11:44.950
Oh, yes.

00:11:44.950 --> 00:11:45.460
OK.

00:11:45.460 --> 00:11:47.050
So now-- all right.

00:11:47.050 --> 00:11:53.410
So to implement stream
handler, we must go deeper.

00:11:53.410 --> 00:11:55.940
We have on cancel and on listen.

00:11:55.940 --> 00:11:57.940
And just like any
other real stream.

00:11:57.940 --> 00:11:59.500
ANDREW: Just like any other
stream when somebody wants

00:11:59.500 --> 00:12:00.470
to listen, this is where you--

00:12:00.470 --> 00:12:00.920
OK.

00:12:00.920 --> 00:12:01.420
EMILY: OK.

00:12:01.420 --> 00:12:05.670
So let's implement those things.

00:12:08.490 --> 00:12:09.987
Now what is it
unhappy about here?

00:12:09.987 --> 00:12:12.320
ANDREW: That's the API level
that I still haven't fixed.

00:12:12.320 --> 00:12:14.141
EMILY: Oh, OK.

00:12:14.141 --> 00:12:15.170
All right, so--

00:12:15.170 --> 00:12:16.919
ANDREW: It's the one
line change, that I'm

00:12:16.919 --> 00:12:18.841
just really busy, you know?

00:12:18.841 --> 00:12:19.795
EMILY: On cancel--

00:12:22.660 --> 00:12:25.150
I'm sure there's-- is it Alt,
Enter something for it to be

00:12:25.150 --> 00:12:27.430
like--

00:12:27.430 --> 00:12:29.140
help me, Andrew.

00:12:29.140 --> 00:12:30.610
What is it?

00:12:30.610 --> 00:12:31.700
Too late, I'm typing it.

00:12:31.700 --> 00:12:34.610
Arguments.

00:12:34.610 --> 00:12:36.930
And then why is it not--

00:12:36.930 --> 00:12:41.535
ANDREW: For this I think
it's a Ctrl, I, too.

00:12:41.535 --> 00:12:43.030
EMILY: Oh.

00:12:43.030 --> 00:12:45.900
All right, you
need to access, put

00:12:45.900 --> 00:12:48.210
your public, private things.

00:12:48.210 --> 00:12:49.380
I'm such a Darter.

00:12:49.380 --> 00:12:51.618
ANDREW: Try Ctrl, I
and see if that works.

00:12:51.618 --> 00:12:53.610
Boom.

00:12:53.610 --> 00:12:55.600
EMILY: Look at that.

00:12:55.600 --> 00:12:57.565
Good job, IntelliJ
or Android Studio.

00:12:57.565 --> 00:12:58.200
ANDREW: That reminds
me that we're

00:12:58.200 --> 00:12:59.995
missing the override
keyword on the others,

00:12:59.995 --> 00:13:01.036
but don't worry about it.

00:13:01.036 --> 00:13:05.220
[LAUGHS] And the ones
from two weeks ago, but.

00:13:05.220 --> 00:13:06.590
EMILY: OK, great.

00:13:06.590 --> 00:13:09.210
ANDREW: Clearly optional.

00:13:09.210 --> 00:13:11.310
EMILY: So that is--

00:13:11.310 --> 00:13:14.560
so now we need to
implement these.

00:13:14.560 --> 00:13:18.180
We are going to--

00:13:18.180 --> 00:13:25.610
basically, when we
have this stream,

00:13:25.610 --> 00:13:30.610
that we have initialized
somewhere-- where did it go?

00:13:30.610 --> 00:13:31.520
What is this?

00:13:31.520 --> 00:13:32.280
Oh, it's API.

00:13:32.280 --> 00:13:32.780
OK.

00:13:38.730 --> 00:13:41.831
So we have our eventChannel.

00:13:41.831 --> 00:13:42.765
Is this the API?

00:13:42.765 --> 00:13:44.640
OK.

00:13:44.640 --> 00:13:49.880
So we want to tell
it, when we listen,

00:13:49.880 --> 00:13:57.930
that we can start putting
readings into this stream.

00:13:57.930 --> 00:13:58.785
ANDREW: So, yeah.

00:13:58.785 --> 00:14:00.340
What are the parameters
in on listen.

00:14:03.580 --> 00:14:04.455
So that's arguments--

00:14:04.455 --> 00:14:04.790
EMILY: Events.

00:14:04.790 --> 00:14:06.940
ANDREW: --that we, I guess,
don't really care about.

00:14:06.940 --> 00:14:08.570
EMILY: Yeah, because I think
we don't have any arguments,

00:14:08.570 --> 00:14:10.170
because we just want the--

00:14:10.170 --> 00:14:10.782
so--

00:14:10.782 --> 00:14:13.290
ANDREW: And then
that's what we want,

00:14:13.290 --> 00:14:17.340
so we get this sink that
we can put stuff in.

00:14:17.340 --> 00:14:20.960
EMILY: So I guess we need to--

00:14:20.960 --> 00:14:24.440
I think we need to
make an EventSink.

00:14:24.440 --> 00:14:28.170
And this is what we are going
to be passing back to Dart.

00:14:28.170 --> 00:14:29.920
ANDREW: Do we-- wait,
I thought we got one

00:14:29.920 --> 00:14:31.670
in the signature
of the function.

00:14:31.670 --> 00:14:32.490
EMILY: Oh, sorry.

00:14:32.490 --> 00:14:33.310
Oh, on listen.

00:14:33.310 --> 00:14:33.890
Oh, yes.

00:14:33.890 --> 00:14:34.390
OK.

00:14:34.390 --> 00:14:36.530
ANDREW: Oh, phew.

00:14:36.530 --> 00:14:39.110
That's much easier
than making one.

00:14:39.110 --> 00:14:39.770
EMILY: OK.

00:14:39.770 --> 00:14:44.840
So we are going to--

00:14:44.840 --> 00:14:45.900
we have our eventSink.

00:14:45.900 --> 00:14:53.291
And we need to read from it?

00:14:53.291 --> 00:14:53.790
No.

00:14:53.790 --> 00:14:55.590
We need to tell
it that we have--

00:14:58.130 --> 00:14:58.630
wait.

00:14:58.630 --> 00:14:59.130
OK.

00:14:59.130 --> 00:14:59.780
Hold on.

00:14:59.780 --> 00:15:03.820
On listen is calling what
or is getting called when?

00:15:03.820 --> 00:15:05.620
ANDREW: So that
gets called when?

00:15:05.620 --> 00:15:09.730
EMILY: When we are setting
it up, set stream handler.

00:15:09.730 --> 00:15:15.330
So we're saying this
plug-in is now listening.

00:15:15.330 --> 00:15:19.105
And so now we're saying--

00:15:19.105 --> 00:15:21.890
ANDREW: So we need to keep
that, so we can use it, right?

00:15:21.890 --> 00:15:22.390
EMILY: Yes.

00:15:22.390 --> 00:15:25.750
ANDREW: The eventSink?

00:15:25.750 --> 00:15:30.425
EMILY: And so ultimately,
we're going to say something.

00:15:30.425 --> 00:15:32.300
ANDREW: That's what
we're going to do, right?

00:15:32.300 --> 00:15:35.570
So, OK-- so we have-- our
on listen method means

00:15:35.570 --> 00:15:37.340
somebody is listening.

00:15:37.340 --> 00:15:39.540
And they give us a
thing to send them data.

00:15:39.540 --> 00:15:41.810
So we've got to
put that somewhere.

00:15:41.810 --> 00:15:44.930
We need like an mEventSink

00:15:44.930 --> 00:15:45.520
EMILY: Yes.

00:15:45.520 --> 00:15:46.655
ANDREW: Right?

00:15:46.655 --> 00:15:47.196
EMILY: Right.

00:15:47.196 --> 00:15:49.040
Yeah, so we're going
to take-- we're-- yeah.

00:15:49.040 --> 00:15:49.390
OK.

00:15:49.390 --> 00:15:51.639
So we're going to take this
mEventSink, that we've got

00:15:51.639 --> 00:15:53.560
and then make one.

00:15:53.560 --> 00:15:58.630
So mEventSink, We'll make one.

00:15:58.630 --> 00:16:05.560
[TYPING]

00:16:05.560 --> 00:16:08.550
ANDREW: There should
be an eventSink class.

00:16:08.550 --> 00:16:10.042
That should exist.

00:16:10.042 --> 00:16:11.397
There we go.

00:16:11.397 --> 00:16:12.230
EMILY: What do I do?

00:16:12.230 --> 00:16:14.190
ANDREW: Oh, it's Alt, Enter.

00:16:14.190 --> 00:16:15.190
EMILY: Is it functional?

00:16:15.190 --> 00:16:17.106
ANDREW: Option, sorry,
because we're on a Mac.

00:16:17.106 --> 00:16:17.930
Option and Enter.

00:16:17.930 --> 00:16:20.230
[TYPING]

00:16:20.230 --> 00:16:21.842
There we go.

00:16:21.842 --> 00:16:22.341
EMILY: No.

00:16:22.341 --> 00:16:23.530
ANDREW: What just happened?

00:16:23.530 --> 00:16:25.866
EMILY: I did Option, Enter.

00:16:25.866 --> 00:16:28.652
[TYPING]

00:16:28.652 --> 00:16:29.610
ANDREW: OK, that works.

00:16:33.330 --> 00:16:34.260
EMILY: All right.

00:16:34.260 --> 00:16:37.850
So we have this.

00:16:37.850 --> 00:16:40.490
And we want to--

00:16:45.248 --> 00:16:47.439
OK, we-- I need to
backup for a second.

00:16:47.439 --> 00:16:47.980
ANDREW: Sure.

00:16:47.980 --> 00:16:53.180
EMILY: So when-- back in
our Dart code we've got--

00:16:58.580 --> 00:16:59.240
do-do-do.

00:16:59.240 --> 00:17:02.450
This is our example, this.

00:17:02.450 --> 00:17:08.390
So we're saying, I would like
to get the broadcast stream.

00:17:08.390 --> 00:17:14.020
Don't we need to-- so, OK--

00:17:14.020 --> 00:17:16.390
and then in here
we're going to create

00:17:16.390 --> 00:17:20.380
the stream object that we're
passing to Dart, correct?

00:17:20.380 --> 00:17:22.250
ANDREW: I thought
we just got one.

00:17:22.250 --> 00:17:23.390
EMILY: From on listen.

00:17:23.390 --> 00:17:24.140
ANDREW: Oh, sorry.

00:17:24.140 --> 00:17:24.800
We're--

00:17:24.800 --> 00:17:25.640
EMILY: Right?

00:17:25.640 --> 00:17:27.099
ANDREW: I thought you'd switched
back to the other Dart file.

00:17:27.099 --> 00:17:27.810
EMILY: Oh, sorry.

00:17:27.810 --> 00:17:28.310
I did.

00:17:28.310 --> 00:17:29.570
I did briefly.

00:17:29.570 --> 00:17:31.560
No, I just want to
talk at a high level,

00:17:31.560 --> 00:17:33.270
like the process
of moving things.

00:17:33.270 --> 00:17:34.100
So we've got--

00:17:34.100 --> 00:17:35.641
ANDREW: We're going
to say-- on Dart,

00:17:35.641 --> 00:17:37.370
we're going to say,
give me a stream,

00:17:37.370 --> 00:17:41.377
from the registrars, the
plug-in management system.

00:17:41.377 --> 00:17:43.460
That's going to go to the
Java class and say, hey,

00:17:43.460 --> 00:17:45.380
somebody wants a stream.

00:17:45.380 --> 00:17:48.440
And it's going to
call on listen, right?

00:17:48.440 --> 00:17:49.520
EMILY: Yes.

00:17:49.520 --> 00:17:56.830
And so I guess my question
is, when on listen is called,

00:17:56.830 --> 00:18:01.280
we're putting the events from--

00:18:01.280 --> 00:18:02.789
where are the events coming in?

00:18:02.789 --> 00:18:03.830
That's where I'm unclear.

00:18:03.830 --> 00:18:05.875
ANDREW: Oh, sure because
we covered that one

00:18:05.875 --> 00:18:06.750
in the other episode.

00:18:06.750 --> 00:18:09.010
So that would be in
on sensor change.

00:18:09.010 --> 00:18:10.010
EMILY: On sensor change.

00:18:10.010 --> 00:18:15.890
So when on listen comes, we're
constructing this eventSink.

00:18:15.890 --> 00:18:19.280
And are we just putting this
mLatestReading into eventSink?

00:18:19.280 --> 00:18:20.400
ANDREW: I think.

00:18:20.400 --> 00:18:22.610
So it's giving us the eventSink.

00:18:22.610 --> 00:18:25.090
We would hold it at that
point and then use it.

00:18:25.090 --> 00:18:26.090
EMILY: Oh, just-- right.

00:18:26.090 --> 00:18:26.570
Add--

00:18:26.570 --> 00:18:28.236
ANDREW: And then we
would use it up here

00:18:28.236 --> 00:18:29.390
to just dump doubles into.

00:18:29.390 --> 00:18:30.090
EMILY: I see.

00:18:30.090 --> 00:18:31.154
OK, got it.

00:18:31.154 --> 00:18:31.820
ANDREW: I think.

00:18:31.820 --> 00:18:33.952
EMILY: So m--

00:18:33.952 --> 00:18:34.910
ANDREW: We'll find out.

00:18:34.910 --> 00:18:35.890
EMILY: Yes.

00:18:35.890 --> 00:18:37.154
So just like this?

00:18:37.154 --> 00:18:38.010
[TYPING]

00:18:38.010 --> 00:18:38.510
mSink?

00:18:38.510 --> 00:18:39.770
ANDREW: Yeah, I think so.

00:18:39.770 --> 00:18:41.390
And then, you can
just take that line

00:18:41.390 --> 00:18:43.760
and move it up to the
other one, to where

00:18:43.760 --> 00:18:45.000
it says mLatestReading.

00:18:45.000 --> 00:18:49.126
Yeah, just success
yourself a double.

00:18:49.126 --> 00:18:51.100
EMILY: Aha.

00:18:51.100 --> 00:18:53.095
ANDREW: Event values.

00:18:53.095 --> 00:18:53.830
Oh, or, yeah.

00:18:53.830 --> 00:18:54.750
That's even better.

00:18:54.750 --> 00:18:56.537
EMILY: Now is there any--

00:18:56.537 --> 00:18:57.870
ANDREW: We might want to check--

00:18:57.870 --> 00:18:59.480
EMILY: Should we be
adding this typing?

00:18:59.480 --> 00:19:01.700
ANDREW: We should probably
check that it's not null there,

00:19:01.700 --> 00:19:03.491
because otherwise, if
they haven't listened

00:19:03.491 --> 00:19:04.783
yet, we will immediately crash.

00:19:04.783 --> 00:19:05.699
EMILY: Oh, event sent.

00:19:05.699 --> 00:19:06.220
Yeah, OK.

00:19:06.220 --> 00:19:07.140
So if--

00:19:07.140 --> 00:19:09.223
ANDREW: Were we smart
enough to do this with Kyle,

00:19:09.223 --> 00:19:13.620
then we could just make it a
type safe call or a null safe

00:19:13.620 --> 00:19:14.120
call.

00:19:14.120 --> 00:19:16.472
EMILY: Not equals a null.

00:19:16.472 --> 00:19:20.670
[TYPING]

00:19:20.670 --> 00:19:23.070
ANDREW: So if we have
an eventSink, use it.

00:19:23.070 --> 00:19:26.090
And then on cancel,
we can just null out--

00:19:26.090 --> 00:19:30.300
EMILY: Yeah,
mEventSink equals null.

00:19:30.300 --> 00:19:31.342
Gone.

00:19:31.342 --> 00:19:32.550
ANDREW: OK, well that's cool.

00:19:32.550 --> 00:19:33.340
EMILY: Let's see.

00:19:33.340 --> 00:19:36.460
ANDREW: See if it builds,
the old build test.

00:19:36.460 --> 00:19:37.380
EMILY: Oh, and yeah.

00:19:37.380 --> 00:19:39.870
OK, so we've built. We're
going to see if it compiles.

00:19:39.870 --> 00:19:42.040
But then we have to actually,
in our example app, use this.

00:19:42.040 --> 00:19:43.590
ANDREW: Actually use
the stream, otherwise

00:19:43.590 --> 00:19:44.798
nothing will ever get called.

00:19:44.798 --> 00:19:46.810
EMILY: So do have your
Android simulator open?

00:19:46.810 --> 00:19:47.820
ANDREW: I do, somewhere.

00:19:47.820 --> 00:19:48.320
EMILY: Yes.

00:19:48.320 --> 00:19:49.110
There it is.

00:19:49.110 --> 00:19:52.610
ANDREW: Hopefully it will
not crash or anything.

00:19:52.610 --> 00:19:53.260
OK.

00:19:53.260 --> 00:19:54.530
So, yeah let's--
that's a good idea.

00:19:54.530 --> 00:19:55.830
Just build it once and
make sure everything--

00:19:55.830 --> 00:19:56.746
EMILY: So you're not--

00:19:56.746 --> 00:20:00.455
right now we're not going to
see anything from the stream,

00:20:00.455 --> 00:20:02.580
because we haven't hooked
it up in our example app.

00:20:02.580 --> 00:20:07.050
But we're just making sure that
we don't get horrible runtime

00:20:07.050 --> 00:20:08.130
errors.

00:20:08.130 --> 00:20:09.720
ANDREW: Incremental changes.

00:20:09.720 --> 00:20:11.570
EMILY: Yes, because we
didn't write a test.

00:20:11.570 --> 00:20:14.670
So this is our test, right now.

00:20:14.670 --> 00:20:17.980
While it's building, let's
jump over to our example.

00:20:17.980 --> 00:20:23.670
So what we want to do here--

00:20:23.670 --> 00:20:24.180
ooh.

00:20:24.180 --> 00:20:25.346
ANDREW: Oh, things happened.

00:20:25.346 --> 00:20:26.990
EMILY: Great.

00:20:26.990 --> 00:20:28.650
Initialize barometer.

00:20:28.650 --> 00:20:31.716
No implementation found
for initialized barometer?

00:20:45.390 --> 00:20:46.140
Do we want to--

00:20:49.670 --> 00:20:51.035
You've run this on Android?

00:20:51.035 --> 00:20:51.660
ANDREW: Mm-hmm.

00:20:51.660 --> 00:20:53.270
EMILY: Do we want to--

00:20:53.270 --> 00:20:55.929
this seems not related to the
code, the changes I was making.

00:20:55.929 --> 00:20:58.220
ANDREW: Yeah, let's go look
at the plug-in, real quick,

00:20:58.220 --> 00:21:01.430
and just make sure
that nothing got wonky.

00:21:01.430 --> 00:21:04.820
So scroll down a little bit.

00:21:04.820 --> 00:21:06.878
Initialize barometer
is right there.

00:21:06.878 --> 00:21:10.337
EMILY: Initialize barometer,
yeah, that looks good.

00:21:16.700 --> 00:21:17.980
ANDREW: That's unusual.

00:21:17.980 --> 00:21:20.780
EMILY: This is going well.

00:21:20.780 --> 00:21:25.699
I'm going to stash my changes
and then just try and run it.

00:21:25.699 --> 00:21:27.240
ANDREW: Just make
sure that it works.

00:21:27.240 --> 00:21:28.470
EMILY: Yeah, make
sure it's not me.

00:21:28.470 --> 00:21:31.053
ANDREW: That would be great if
we were actually in a git-repo.

00:21:31.053 --> 00:21:34.500
[LAUGHTER]

00:21:34.500 --> 00:21:36.210
Sometimes I just
make an extra copy

00:21:36.210 --> 00:21:37.495
of the project for funsies.

00:21:37.495 --> 00:21:40.470
EMILY: Wait, wait,
wait, but why don't you

00:21:40.470 --> 00:21:42.075
just even clone another copy?

00:21:42.075 --> 00:21:42.700
ANDREW: I know.

00:21:42.700 --> 00:21:43.610
EMILY: OK.

00:21:43.610 --> 00:21:45.819
OK, well--

00:21:45.819 --> 00:21:46.860
ANDREW: That one's on me.

00:21:46.860 --> 00:21:50.410
EMILY: Oh, this is
getting exciting.

00:21:50.410 --> 00:21:51.910
ANDREW: Wait, why
is it running now?

00:21:56.890 --> 00:21:58.830
EMILY: I don't even--

00:21:58.830 --> 00:22:00.460
oh no, that's not
what I want to do.

00:22:00.460 --> 00:22:03.380
I wanted to clear the console.

00:22:03.380 --> 00:22:04.580
Can you clear this console?

00:22:04.580 --> 00:22:04.940
ANDREW: Double-click.

00:22:04.940 --> 00:22:05.400
EMILY: Is it the cache?

00:22:05.400 --> 00:22:07.191
ANDREW: Two-finger
click and you can clear.

00:22:07.191 --> 00:22:09.460
EMILY: Clear all, there we go.

00:22:09.460 --> 00:22:10.605
I just wanted to--

00:22:10.605 --> 00:22:12.730
let's try again.

00:22:12.730 --> 00:22:14.880
Maybe we can do a full restart.

00:22:14.880 --> 00:22:17.816
No, there's something going on.

00:22:17.816 --> 00:22:18.315
Yeah.

00:22:20.580 --> 00:22:22.080
And by the way,
here's our pressure.

00:22:22.080 --> 00:22:23.829
ANDREW: Yeah, it's
still in the thousands.

00:22:23.829 --> 00:22:24.720
So that's there.

00:22:28.620 --> 00:22:31.720
EMILY: I feel like there
must be some typo, initialize

00:22:31.720 --> 00:22:32.440
barometer.

00:22:49.800 --> 00:22:51.680
ANDREW: We could always
close Android Studio

00:22:51.680 --> 00:22:56.840
and clean the project and
reopen it, just to be sure.

00:22:56.840 --> 00:22:59.930
EMILY: I really wish
this were a git-repo.

00:22:59.930 --> 00:23:02.460
Wait, wait, here's
another thought.

00:23:02.460 --> 00:23:06.137
What if we check out a
git-repo and do a diff?

00:23:06.137 --> 00:23:06.970
ANDREW: That's true.

00:23:06.970 --> 00:23:08.136
But I don't know what else--

00:23:08.136 --> 00:23:10.699
I mean, we literally ran
this like 45 minutes ago.

00:23:10.699 --> 00:23:12.490
EMILY: We didn't-- you
ran the iOS version.

00:23:12.490 --> 00:23:13.580
ANDREW: No, I ran
the Android one, too.

00:23:13.580 --> 00:23:14.660
EMILY: Oh, OK.

00:23:14.660 --> 00:23:15.662
So close this?

00:23:15.662 --> 00:23:16.870
ANDREW: Mm-hmm, confirm exit.

00:23:16.870 --> 00:23:18.830
EMILY: Confirm.

00:23:18.830 --> 00:23:19.330
Terminate.

00:23:19.330 --> 00:23:21.070
ANDREW: Terminate.

00:23:21.070 --> 00:23:22.910
Then I think you can go into--

00:23:22.910 --> 00:23:24.694
if you do--

00:23:24.694 --> 00:23:26.360
No, I mean, right
here, in the terminal,

00:23:26.360 --> 00:23:27.440
I think you can go do--

00:23:27.440 --> 00:23:28.606
EMILY: Oh, just Flutter run?

00:23:28.606 --> 00:23:31.290
ANDREW: Just CD
example, I think.

00:23:31.290 --> 00:23:35.060
And then do Flutter clean,
which I think is a command.

00:23:35.060 --> 00:23:36.157
EMILY: Yes, it is.

00:23:36.157 --> 00:23:38.240
ANDREW: And then we can
open Android Studio again.

00:23:38.240 --> 00:23:39.510
EMILY: Oh, I could've just
run it from the command.

00:23:39.510 --> 00:23:40.968
ANDREW: Oh yeah,
you could do that.

00:23:40.968 --> 00:23:43.193
Flutter run-- we have
a -d Android, probably,

00:23:43.193 --> 00:23:44.526
because we have it loaded, yeah.

00:23:44.526 --> 00:23:46.050
EMILY: Yeah, -d.

00:23:46.050 --> 00:23:46.550
Is it--

00:23:46.550 --> 00:23:49.120
ANDREW: Android, It
should work, I think.

00:23:49.120 --> 00:23:51.030
The dot, I'm thinking?

00:23:51.030 --> 00:23:53.355
EMILY: I thought it
was like run from the--

00:23:53.355 --> 00:23:54.236
I guess that just--

00:23:54.236 --> 00:23:54.735
OK.

00:23:58.074 --> 00:24:00.490
ANDREW: Back before I didn't
know that much about Flutter,

00:24:00.490 --> 00:24:02.073
and I was working
on an AdMob plug-in,

00:24:02.073 --> 00:24:03.520
I had to do it this way.

00:24:03.520 --> 00:24:04.900
Because I didn't
know any better.

00:24:04.900 --> 00:24:06.880
I had like three editors
open, at all times,

00:24:06.880 --> 00:24:10.227
and four simulators trying to
make sure all the little ads

00:24:10.227 --> 00:24:11.810
showed up where they
were supposed to.

00:24:11.810 --> 00:24:13.459
EMILY: [CHUCKLES]

00:24:19.409 --> 00:24:20.742
ANDREW: You're killing me, Dart.

00:24:25.741 --> 00:24:26.240
EMILY: OK.

00:24:29.360 --> 00:24:30.320
Initialize barometer.

00:24:33.410 --> 00:24:36.520
Maybe I accidentally deleted
something when we were editing.

00:24:36.520 --> 00:24:37.520
Oh, wait, I closed that.

00:24:37.520 --> 00:24:38.790
OK, time to--

00:24:38.790 --> 00:24:39.290
[TYPING]

00:24:39.290 --> 00:24:40.280
Android Studio.

00:24:45.725 --> 00:24:46.979
Do we want to call this?

00:24:46.979 --> 00:24:48.270
ANDREW: Yeah, we might have to.

00:24:52.700 --> 00:24:54.524
EMILY: They're
yanking us off the--

00:24:54.524 --> 00:24:56.690
ANDREW: Yeah, if this were
a "Looney Tunes" cartoon,

00:24:56.690 --> 00:25:00.700
the big hook would
be coming for us.

00:25:00.700 --> 00:25:02.040
OK.

00:25:02.040 --> 00:25:05.270
You want to comment out
the eventChannel stuff,

00:25:05.270 --> 00:25:06.150
just see what's--

00:25:06.150 --> 00:25:06.650
EMILY: Sure.

00:25:06.650 --> 00:25:08.275
ANDREW: We had to
have made a mistake--

00:25:08.275 --> 00:25:09.800
I assume-- in there somewhere.

00:25:09.800 --> 00:25:17.450
EMILY: I feel like, rather than
that, I suspect I accidentally

00:25:17.450 --> 00:25:20.530
deleted something
when I was typing,

00:25:20.530 --> 00:25:22.380
somehow selected something.

00:25:22.380 --> 00:25:24.556
Because let's see here,
initialize barometer.

00:25:35.972 --> 00:25:37.981
Let's remove our eventChannel.

00:25:44.234 --> 00:25:47.209
This is so sad.

00:25:47.209 --> 00:25:49.250
ANDREW: Somebody's going
to put a comment on this

00:25:49.250 --> 00:25:51.550
and tell us that it's
just in another tab.

00:25:51.550 --> 00:25:55.059
It's like the barometer pressure
sensor on the simulator.

00:25:59.550 --> 00:26:01.680
EMILY: Do I hide--
oh, this thing.

00:26:01.680 --> 00:26:05.570
ANDREW: And comment
those, as well.

00:26:05.570 --> 00:26:09.090
Is there-- scroll
up a little bit.

00:26:09.090 --> 00:26:11.589
EMILY: I feel so unsafe
developing not in a git-repo.

00:26:11.589 --> 00:26:12.214
ANDREW: I know.

00:26:15.650 --> 00:26:16.890
EMILY: And take this out.

00:26:19.620 --> 00:26:20.120
OK.

00:26:20.120 --> 00:26:21.091
Yeah?

00:26:21.091 --> 00:26:22.590
ANDREW: You can
still go, because we

00:26:22.590 --> 00:26:24.109
have this code on GitHub.

00:26:24.109 --> 00:26:25.650
And it is possible
to go look at what

00:26:25.650 --> 00:26:29.094
it was before today started.

00:26:29.094 --> 00:26:29.885
So that's possible.

00:26:32.679 --> 00:26:34.220
EMILY: Yeah, that's
what I was saying

00:26:34.220 --> 00:26:37.760
is pull down a
separate repo and diff.

00:26:37.760 --> 00:26:40.714
ANDREW: Oh, so you
suggested the exact thing,

00:26:40.714 --> 00:26:43.130
and then I just repeated your
idea like two minutes later?

00:26:43.130 --> 00:26:43.838
EMILY: That's OK.

00:26:43.838 --> 00:26:44.452
It's OK.

00:26:44.452 --> 00:26:45.910
ANDREW: Takes me
a while sometimes.

00:26:45.910 --> 00:26:47.314
EMILY: [CHUCKLES]

00:26:50.190 --> 00:26:51.770
You were debugging in your head.

00:26:51.770 --> 00:26:55.120
ANDREW: Yeah, I was.

00:26:55.120 --> 00:26:56.830
EMILY: OK, so it is something.

00:26:56.830 --> 00:26:57.630
ANDREW: Wait, wait.

00:26:57.630 --> 00:26:57.830
No.

00:26:57.830 --> 00:26:59.329
EMILY: It is something
that I added.

00:26:59.329 --> 00:27:00.680
What the heck?

00:27:00.680 --> 00:27:01.966
That is--

00:27:01.966 --> 00:27:03.550
ANDREW: That is cray-cray.

00:27:03.550 --> 00:27:06.390
EMILY: OK, so let us
add back the Java.

00:27:09.150 --> 00:27:10.202
ANDREW: Oh, wait.

00:27:10.202 --> 00:27:12.452
Those aren't supposed to
have the same name, are they?

00:27:12.452 --> 00:27:13.600
EMILY: Oh, my god.

00:27:13.600 --> 00:27:16.460
ANDREW: That should
be pressure stream.

00:27:16.460 --> 00:27:17.479
That's what it is.

00:27:17.479 --> 00:27:20.020
I remember thinking, when you
were in Dart, to look for that.

00:27:20.020 --> 00:27:23.080
And I didn't think to look,
here, when we switched over.

00:27:23.080 --> 00:27:25.347
But that's overwriting
the string.

00:27:25.347 --> 00:27:25.930
So somewhere--

00:27:25.930 --> 00:27:26.770
EMILY: It says the type is--

00:27:26.770 --> 00:27:29.186
ANDREW: --somewhere in the
registrar, there's a giant map,

00:27:29.186 --> 00:27:31.200
I assume, of string to channel.

00:27:31.200 --> 00:27:32.420
EMILY: Good catch.

00:27:32.420 --> 00:27:33.430
ANDREW: OK.

00:27:33.430 --> 00:27:35.606
So we'll uncomment
everything, immediate success.

00:27:35.606 --> 00:27:37.230
EMILY: And everything
is going to work.

00:27:37.230 --> 00:27:37.730
Yeah.

00:27:37.730 --> 00:27:40.090
ANDREW: We'll go bake a cake.

00:27:40.090 --> 00:27:41.620
Puppies will appear.

00:27:41.620 --> 00:27:42.970
EMILY: Dash will--

00:27:42.970 --> 00:27:45.040
ANDREW: Dash will fly
off into the night.

00:27:45.040 --> 00:27:46.248
EMILY: Into the low pressure.

00:27:48.590 --> 00:27:49.590
OK, wait.

00:27:49.590 --> 00:27:52.560
What did we import
here or implement?

00:27:52.560 --> 00:27:57.610
ANDREW: Events something?

00:27:57.610 --> 00:27:59.580
Stream handler, was that it?

00:27:59.580 --> 00:28:00.460
No.

00:28:00.460 --> 00:28:01.810
EMILY: Where did this go?

00:28:01.810 --> 00:28:05.192
Where did this go?

00:28:05.192 --> 00:28:08.060
Barometer plug-in?

00:28:08.060 --> 00:28:10.120
Yeah, so this, set
stream handler.

00:28:10.120 --> 00:28:12.710
ANDREW: Oh, it must
be stream handler.

00:28:12.710 --> 00:28:14.090
[TYPING]

00:28:14.090 --> 00:28:15.210
EMILY: I thought it was--

00:28:15.210 --> 00:28:16.220
oh, there we go.

00:28:16.220 --> 00:28:17.050
OK.

00:28:17.050 --> 00:28:19.166
I was going to say, I thought
there was a little more to it.

00:28:19.166 --> 00:28:21.530
ANDREW: And then that, I think
that needs to be uncommented.

00:28:21.530 --> 00:28:22.238
EMILY: Thank you.

00:28:22.238 --> 00:28:23.990
ANDREW: No problem.

00:28:23.990 --> 00:28:26.644
As I continue my
rampant backseat coding.

00:28:26.644 --> 00:28:30.970
EMILY: Hey, clearly
making mistakes here.

00:28:30.970 --> 00:28:31.470
So--

00:28:31.470 --> 00:28:33.252
ANDREW: That's OK.

00:28:33.252 --> 00:28:37.204
[TYPING]

00:28:37.204 --> 00:28:38.686
EMILY: OK.

00:28:38.686 --> 00:28:41.560
So now-- phew--

00:28:41.560 --> 00:28:48.087
so now, lastly, before the
hook really pulls me off stage,

00:28:48.087 --> 00:28:50.975
let's add a little
into our example app.

00:28:50.975 --> 00:28:52.800
And then we'll be good.

00:28:52.800 --> 00:28:56.960
So this is our mean.

00:28:56.960 --> 00:28:59.690
And so we want--

00:28:59.690 --> 00:29:01.771
let us-- how about we
just-- is this the state?

00:29:01.771 --> 00:29:04.145
ANDREW: Do you want to just
throw a stream builder on it?

00:29:04.145 --> 00:29:04.600
EMILY: Yeah.

00:29:04.600 --> 00:29:06.016
ANDREW: Just like
below everything

00:29:06.016 --> 00:29:07.962
else, just like, and
a stream builder,

00:29:07.962 --> 00:29:08.920
or something like that?

00:29:08.920 --> 00:29:09.420
EMILY: OK.

00:29:12.150 --> 00:29:13.590
Or, I was just going to--

00:29:13.590 --> 00:29:14.120
yeah, OK.

00:29:14.120 --> 00:29:14.740
Great.

00:29:14.740 --> 00:29:15.790
ANDREW: If you had a
better idea, go for it.

00:29:15.790 --> 00:29:16.905
Don't let me stop you.

00:29:16.905 --> 00:29:17.946
EMILY: No, let's do that.

00:29:17.946 --> 00:29:20.015
So we have this column.

00:29:20.015 --> 00:29:21.640
This is going to be
beautiful, so we're

00:29:21.640 --> 00:29:31.170
going to have raised
and then stream builder.

00:29:31.170 --> 00:29:36.180
And then stream is--

00:29:36.180 --> 00:29:37.680
what did we call everything?

00:29:42.180 --> 00:29:43.072
Is it barometer dot--

00:29:43.072 --> 00:29:44.405
where are you even calling this?

00:29:44.405 --> 00:29:45.929
ANDREW:
Barometer.pressureStream?

00:29:45.929 --> 00:29:51.797
[TYPING]

00:29:51.797 --> 00:29:55.709
Is it underscore barometer?

00:29:55.709 --> 00:30:00.070
I'm not seeing where
it says defined.

00:30:00.070 --> 00:30:02.639
ANDREW: Did it get commented
out in the barometer?

00:30:02.639 --> 00:30:03.680
EMILY: Barometer is here.

00:30:03.680 --> 00:30:05.880
Where are we calling our--
oh, capital Barometer.

00:30:05.880 --> 00:30:07.374
ANDREW: Oh.

00:30:07.374 --> 00:30:08.650
EMILY: Woo.

00:30:08.650 --> 00:30:09.520
OK, and then--

00:30:09.520 --> 00:30:11.728
ANDREW: That one I definitely
should have remembered.

00:30:11.728 --> 00:30:13.769
It's not--

00:30:13.769 --> 00:30:14.560
EMILY: Oh, my gosh.

00:30:14.560 --> 00:30:18.617
ANDREW: It's context and async
snapshot of double, I think.

00:30:18.617 --> 00:30:20.950
I only know that, because
I've been doing a lot of stuff

00:30:20.950 --> 00:30:22.317
with streams, recently.

00:30:22.317 --> 00:30:24.275
EMILY: And this is where
VS code has a little--

00:30:24.275 --> 00:30:24.920
you need to say type exactly--

00:30:24.920 --> 00:30:25.820
ANDREW: Oh, really?

00:30:25.820 --> 00:30:26.090
EMILY: Yeah.

00:30:26.090 --> 00:30:26.870
ANDREW: I wonder if there's--

00:30:26.870 --> 00:30:27.660
EMILY: This is why I love--

00:30:27.660 --> 00:30:29.660
ANDREW: OK, if anybody knows
how to make that just populate.

00:30:29.660 --> 00:30:32.235
EMILY: It's probably Command,
I. It's probably like Alt, I.

00:30:32.235 --> 00:30:32.776
ANDREW: Yeah.

00:30:32.776 --> 00:30:33.581
EMILY: But anyway.

00:30:33.581 --> 00:30:35.330
ANDREW: Maybe one of
the commenters that's

00:30:35.330 --> 00:30:36.680
still with us can let us know.

00:30:36.680 --> 00:30:40.355
Because I often request features
of the IntelliJ plug-in team.

00:30:40.355 --> 00:30:42.230
And they're like, yeah,
we already have that.

00:30:42.230 --> 00:30:43.688
You just don't know
the keystrokes.

00:30:43.688 --> 00:30:45.590
EMILY: Yes, I do--

00:30:45.590 --> 00:30:46.190
yes.

00:30:46.190 --> 00:30:48.020
I feel like IntelliJ
has a lot of things.

00:30:48.020 --> 00:30:48.970
You just need to
know where they are.

00:30:48.970 --> 00:30:49.850
ANDREW: Yeah.

00:30:49.850 --> 00:30:54.210
EMILY: OK, so now
we are going to--

00:30:54.210 --> 00:30:57.304
if snapshot dot--
ooh, that was not--

00:30:57.304 --> 00:30:59.470
ANDREW: Is that not what
you were looking for there?

00:30:59.470 --> 00:31:00.930
EMILY: Snapshot.hasData.

00:31:04.810 --> 00:31:17.650
Let's see-- return text
pressure stream, snapshot.data.

00:31:21.880 --> 00:31:30.380
And then we'll say no data,
because, apparently, it's

00:31:30.380 --> 00:31:31.640
the 1980s again.

00:31:31.640 --> 00:31:33.820
ANDREW: Yeah, sure.

00:31:33.820 --> 00:31:34.320
All right.

00:31:34.320 --> 00:31:37.700
Is that-- so we probably need
to rebuild the whole thing.

00:31:37.700 --> 00:31:40.220
EMILY: Well,
actually-- oh, wait.

00:31:40.220 --> 00:31:41.916
Because it-- oh.

00:31:41.916 --> 00:31:44.290
ANDREW: See, that's not going
to rebuild the Java, right?

00:31:44.290 --> 00:31:45.200
EMILY: Oh, yeah.

00:31:45.200 --> 00:31:46.400
Let's just kill all this.

00:31:46.400 --> 00:31:47.890
OK.

00:31:47.890 --> 00:31:49.763
Back to full
Android Studio mode.

00:31:52.519 --> 00:31:54.060
But there's going
to be a type error.

00:31:54.060 --> 00:31:56.841
Let's see, what was
it complaining about?

00:31:56.841 --> 00:31:58.382
Well, I guess we'll
find out shortly.

00:32:04.380 --> 00:32:04.880
Oh, wait.

00:32:09.056 --> 00:32:09.984
Oh, no.

00:32:09.984 --> 00:32:10.950
OK, never mind.

00:32:10.950 --> 00:32:12.610
No, I was just thinking--

00:32:12.610 --> 00:32:13.680
ANDREW: No, there we go.

00:32:13.680 --> 00:32:16.230
EMILY: OK, broadcast
stream dynamic is not

00:32:16.230 --> 00:32:19.480
subtype of the
type stream double.

00:32:19.480 --> 00:32:24.203
So I think we need to do a
little typing, because I--

00:32:24.203 --> 00:32:25.085
pressure stream--

00:32:25.085 --> 00:32:25.860
ANDREW: Oh, wait.

00:32:25.860 --> 00:32:28.110
Where's the method where
you get the as broadcast

00:32:28.110 --> 00:32:29.430
or receive broadcast stream?

00:32:29.430 --> 00:32:30.839
EMILY: On Java?

00:32:30.839 --> 00:32:31.380
ANDREW: Yeah.

00:32:31.380 --> 00:32:32.280
EMILY: That's why I was
asking if we need to--

00:32:32.280 --> 00:32:35.040
ANDREW: Oh no, in the
Dart, in barometer.dart.

00:32:35.040 --> 00:32:37.560
I remember wondering if I--

00:32:37.560 --> 00:32:38.450
EMILY: Oh.

00:32:38.450 --> 00:32:41.190
ANDREW: So there's add--
can you Command click

00:32:41.190 --> 00:32:43.110
on receive broadcast stream?

00:32:43.110 --> 00:32:47.279
Does that have a
type parameter on it?

00:32:47.279 --> 00:32:48.320
EMILY: Should be dynamic.

00:32:48.320 --> 00:32:48.890
ANDREW: No, it does not.

00:32:48.890 --> 00:32:49.390
OK.

00:32:49.390 --> 00:32:52.045
EMILY: So do we need to
do a cast like dot as?

00:32:52.045 --> 00:32:52.920
ANDREW: Do a dot map?

00:32:52.920 --> 00:32:53.840
EMILY: Or dot map, probably.

00:32:53.840 --> 00:32:55.964
ANDREW: Yeah, map would be
the thing to do I think.

00:32:55.964 --> 00:33:02.729
EMILY: OK, so goodbye
little fancy thing here.

00:33:02.729 --> 00:33:08.645
If pressure stream equals null.

00:33:13.082 --> 00:33:19.010
[TYPING]

00:33:19.010 --> 00:33:21.800
So, well, I guess we can do this
all on one line, but whatever.

00:33:26.810 --> 00:33:36.484
So we take-- we're going to map
our value and map to double.

00:33:36.484 --> 00:33:37.900
ANDREW: Yeah, I
think that's the--

00:33:37.900 --> 00:33:39.220
EMILY: values

00:33:39.220 --> 00:33:41.270
ANDREW: --that's the bidness.

00:33:41.270 --> 00:33:41.970
EMILY: Right.

00:33:41.970 --> 00:33:44.566
And then we'll just assign
that to pressure stream.

00:33:44.566 --> 00:33:49.010
[TYPING]

00:33:49.010 --> 00:33:50.575
OK.

00:33:50.575 --> 00:33:52.320
[GASP]

00:33:52.320 --> 00:33:52.940
OK.

00:33:52.940 --> 00:33:58.160
And now we can use this.

00:33:58.160 --> 00:33:59.530
Let's see, moment of truth here.

00:33:59.530 --> 00:34:00.321
ANDREW: Oh, my god.

00:34:03.360 --> 00:34:04.472
Flutter victory.

00:34:04.472 --> 00:34:06.320
[LAUGHTER]

00:34:06.320 --> 00:34:08.790
We rule air pressure.

00:34:08.790 --> 00:34:10.577
EMILY: You are now
ready to use this app

00:34:10.577 --> 00:34:12.160
to help you measure
your air pressure.

00:34:12.160 --> 00:34:13.650
ANDREW: Yeah, we're ready
for the hot air balloon now.

00:34:13.650 --> 00:34:14.316
EMILY: Fly high.

00:34:14.316 --> 00:34:15.850
ANDREW: Yeah.

00:34:15.850 --> 00:34:16.781
Awesome, OK.

00:34:16.781 --> 00:34:18.739
EMILY: Do we declare
victory while we're ahead?

00:34:18.739 --> 00:34:19.754
ANDREW: So let's-- yeah, we
definitely need to declare

00:34:19.754 --> 00:34:21.473
victory and get out of here.

00:34:21.473 --> 00:34:23.139
Let's talk about
everything we just did.

00:34:23.139 --> 00:34:23.764
EMILY: Oh, yes.

00:34:23.764 --> 00:34:25.892
ANDREW: So we came in and--

00:34:25.892 --> 00:34:26.600
EMILY: We added--

00:34:26.600 --> 00:34:27.725
ANDREW: --there was a desk.

00:34:27.725 --> 00:34:28.810
And we sat down.

00:34:28.810 --> 00:34:33.100
EMILY: We added an iOS app
using good old Objective-C.

00:34:33.100 --> 00:34:37.929
Then we attempted to
publish the package.

00:34:37.929 --> 00:34:39.445
And we ran into
an error, which we

00:34:39.445 --> 00:34:41.320
are going to look into
and get back with you.

00:34:41.320 --> 00:34:44.080
Or someone is going to be
like, you forgot a semicolon.

00:34:44.080 --> 00:34:46.840
ANDREW: Yeah, someone
will tell us where.

00:34:46.840 --> 00:34:50.860
EMILY: And then we
streamified the Java version.

00:34:50.860 --> 00:34:52.659
I think that the last
step-- well, there's

00:34:52.659 --> 00:34:56.494
two last steps-- would be to
streamify the iOS version.

00:34:56.494 --> 00:34:58.660
ANDREW: So we still need
to do that, which we might.

00:34:58.660 --> 00:35:00.850
We might just go on
in a couple of weeks.

00:35:00.850 --> 00:35:01.510
But we should.

00:35:01.510 --> 00:35:03.301
Hopefully, one or both
of us will have time

00:35:03.301 --> 00:35:06.910
to finish this up and get it up
on GitHub in a finished state.

00:35:06.910 --> 00:35:08.320
Maybe Dash can do that.

00:35:08.320 --> 00:35:10.780
EMILY: Yes, she's good
at getting code done.

00:35:10.780 --> 00:35:13.780
And then just, yeah,
a little cleanup,

00:35:13.780 --> 00:35:15.070
maybe actually adding a test.

00:35:17.737 --> 00:35:19.570
ANDREW: Yeah, we talked
about methodChannels

00:35:19.570 --> 00:35:22.150
versus eventChannels,
which I learned about,

00:35:22.150 --> 00:35:23.950
having not known about them.

00:35:23.950 --> 00:35:24.730
Cool.

00:35:24.730 --> 00:35:25.800
All right.

00:35:25.800 --> 00:35:26.800
I think that's about it.

00:35:26.800 --> 00:35:29.980
EMILY: If you're still here,
you should win a prize.

00:35:29.980 --> 00:35:32.084
ANDREW: There you go.

00:35:32.084 --> 00:35:32.750
All right, guys.

00:35:32.750 --> 00:35:33.850
We'll see you in
a couple of weeks.

00:35:33.850 --> 00:35:34.840
Hope you enjoyed it.

00:35:34.840 --> 00:35:35.740
EMILY: Bye.

00:35:35.740 --> 00:35:38.190
[MUSIC PLAYING]

