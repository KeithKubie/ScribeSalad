WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.916
[MUSIC PLAYING]

00:00:05.522 --> 00:00:06.480
SPEAKER: Print a haiku.

00:00:10.920 --> 00:00:12.990
That's really good.

00:00:12.990 --> 00:00:14.020
Oh, sorry.

00:00:14.020 --> 00:00:15.270
I didn't see you there.

00:00:15.270 --> 00:00:18.000
I was just talking to
my receipt printer.

00:00:18.000 --> 00:00:20.070
I know what you're
thinking, but this printer

00:00:20.070 --> 00:00:23.400
uses the Google Assistant SDK to
print out text and images based

00:00:23.400 --> 00:00:25.389
on voice commands I'm
going to tell you just

00:00:25.389 --> 00:00:27.930
how easy it is to get started
with using the Google Assistant

00:00:27.930 --> 00:00:30.690
SDK to build
voice-interactive printers,

00:00:30.690 --> 00:00:33.210
signage, or anything
else you can think of.

00:00:33.210 --> 00:00:35.940
The Google Assistant SDK allows
developers to build hardware

00:00:35.940 --> 00:00:38.490
with the Google Assistant
embedded inside of it.

00:00:38.490 --> 00:00:40.439
Users can talk to it in
any supported language

00:00:40.439 --> 00:00:42.230
and the assistant will
give a response that

00:00:42.230 --> 00:00:43.911
can be presented to the user.

00:00:43.911 --> 00:00:45.410
When you're building
a device, there

00:00:45.410 --> 00:00:46.830
will be certain
types of actions that

00:00:46.830 --> 00:00:48.371
only makes sense
when you're speaking

00:00:48.371 --> 00:00:50.620
to a particular hardware
device in front of you.

00:00:50.620 --> 00:00:53.130
In order to support
these advanced use cases,

00:00:53.130 --> 00:00:55.490
we're introducing
Custom Device Actions.

00:00:55.490 --> 00:00:57.300
Custom Device Actions
allow developers

00:00:57.300 --> 00:00:59.130
to create their own
specific set of actions

00:00:59.130 --> 00:01:01.000
within the Google
Assistant interface,

00:01:01.000 --> 00:01:04.140
and allow users to interact
with it in a more natural way.

00:01:04.140 --> 00:01:06.570
You can specify a number of
phrases that match, along

00:01:06.570 --> 00:01:08.880
with a set of standard
parameters or custom parameters

00:01:08.880 --> 00:01:10.540
that you define.

00:01:10.540 --> 00:01:13.590
For example, you can create a
custom parameter of type shape.

00:01:13.590 --> 00:01:15.381
There are many types
of shapes that you can

00:01:15.381 --> 00:01:17.210
print, like a star or a box.

00:01:17.210 --> 00:01:19.710
You can define more than one
action, such as a second action

00:01:19.710 --> 00:01:21.162
that prints haikus.

00:01:21.162 --> 00:01:22.620
You can set up a
variety of phrases

00:01:22.620 --> 00:01:24.330
that may activate your action--

00:01:24.330 --> 00:01:28.830
print a star, print the
box, show me a haiku.

00:01:28.830 --> 00:01:31.350
All of these actions are
defined in the action package.

00:01:31.350 --> 00:01:33.960
You can use the gactions
tool to deploy them.

00:01:33.960 --> 00:01:37.170
Your action package can also
contain more than one action.

00:01:37.170 --> 00:01:39.660
To trigger an action, it
requires certain query patterns

00:01:39.660 --> 00:01:41.970
that your users must say.

00:01:41.970 --> 00:01:44.310
When that happens, you can
define the fulfillment.

00:01:44.310 --> 00:01:46.950
This may include a simple speech
response, as well as execution

00:01:46.950 --> 00:01:49.170
of a callback on your device.

00:01:49.170 --> 00:01:51.210
Each action can
contain parameters,

00:01:51.210 --> 00:01:52.770
in this case a shape.

00:01:52.770 --> 00:01:55.620
A shape can be defined with
a particular key as well

00:01:55.620 --> 00:01:57.320
as several synonyms.

00:01:57.320 --> 00:01:59.720
In our application, we will
need to add the device model

00:01:59.720 --> 00:02:02.811
and instance identifiers
before each request.

00:02:02.811 --> 00:02:05.310
When the user utterance matches
one of the defined grammars,

00:02:05.310 --> 00:02:07.760
a custom device
action is activated.

00:02:07.760 --> 00:02:10.259
Your application will receive
a structured JSON payload that

00:02:10.259 --> 00:02:12.570
includes the action to
run and all the parameters

00:02:12.570 --> 00:02:13.740
the user has said.

00:02:13.740 --> 00:02:15.780
From this you can
complete your action.

00:02:15.780 --> 00:02:18.030
You'll still get all the
Google Assistant capabilities

00:02:18.030 --> 00:02:21.450
in machine learning and
natural language understanding.

00:02:21.450 --> 00:02:22.200
What time is it?

00:02:25.730 --> 00:02:28.680
And here's a demo of a
custom device action.

00:02:28.680 --> 00:02:29.570
Print a star.

00:02:36.830 --> 00:02:40.130
I can also say something
like print a handsome person.

00:02:47.510 --> 00:02:48.670
What?

00:02:48.670 --> 00:02:50.010
What the heck?

00:02:50.010 --> 00:02:50.760
That's me.

00:02:50.760 --> 00:02:51.930
Oh my goodness.

00:02:51.930 --> 00:02:52.605
That's so nice.

00:02:56.820 --> 00:02:58.320
I hope this video
was helpful to you

00:02:58.320 --> 00:03:00.960
for getting started with
custom device actions.

00:03:00.960 --> 00:03:02.940
Read our documentation
to learn more.

00:03:02.940 --> 00:03:05.375
Join our community to discuss
this with other developers,

00:03:05.375 --> 00:03:07.500
and make sure to subscribe
to this channel for more

00:03:07.500 --> 00:03:09.250
awesome videos about
the Google Assistant.

00:03:09.250 --> 00:03:11.720
[MUSIC PLAYING]

