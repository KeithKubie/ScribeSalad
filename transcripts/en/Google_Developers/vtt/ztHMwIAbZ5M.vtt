WEBVTT
Kind: captions
Language: en

00:00:00.519 --> 00:00:01.810
JAKE ARCHIBALD: But here we go.

00:00:01.810 --> 00:00:03.559
I'm going to invite
the panelists on stage

00:00:03.559 --> 00:00:08.490
as I introduce them,
the leadership panel.

00:00:08.490 --> 00:00:11.790
I'm going to have Rahul
Roy-Chowdhury, the product

00:00:11.790 --> 00:00:13.687
manager, director on Chrome.

00:00:13.687 --> 00:00:15.770
If you want to give a wave
as you enter the stage.

00:00:15.770 --> 00:00:17.030
That's this guy.

00:00:17.030 --> 00:00:19.030
We've got Darin Fisher.

00:00:19.030 --> 00:00:21.935
You don't have to come on one
by one, but you can if you want.

00:00:21.935 --> 00:00:25.590
[LAUGHS] Yeah.

00:00:25.590 --> 00:00:26.590
You get a certificate.

00:00:26.590 --> 00:00:27.890
You all get a certificate.

00:00:27.890 --> 00:00:30.540
Darin's the VP of
Engineering on Chrome,

00:00:30.540 --> 00:00:33.660
who you'll recognize from the
opening of the conference.

00:00:33.660 --> 00:00:36.840
Avni Shah, VP of Product
Management on Chrome.

00:00:36.840 --> 00:00:40.900
Grace Kloba, the Lead
Engineer for Chrome on Mobile.

00:00:40.900 --> 00:00:44.029
And reprising his role of
Greg Simon, it's Greg Simon.

00:00:44.029 --> 00:00:45.070
GREG SIMON: That's right.

00:00:45.070 --> 00:00:45.110
Thank you.

00:00:45.110 --> 00:00:47.068
JAKE ARCHIBALD: Engineering
Director on Chrome.

00:00:47.068 --> 00:00:50.820
And I am Jake Archibald,
the Chief Vice Director

00:00:50.820 --> 00:00:53.097
of important Jake business.

00:00:53.097 --> 00:00:54.180
GREG SIMON: Just promoted.

00:00:56.542 --> 00:00:58.750
JAKE ARCHIBALD: Yeah, so
you've been posing questions

00:00:58.750 --> 00:01:00.791
to this panel throughout
the last couple of days,

00:01:00.791 --> 00:01:03.810
but please don't stop there.

00:01:03.810 --> 00:01:05.604
Chris Wilson is
monitoring this document

00:01:05.604 --> 00:01:07.020
and is able to
feed me information

00:01:07.020 --> 00:01:09.310
using the power of the internet.

00:01:09.310 --> 00:01:11.200
You can add stuff on
to the moderator panel

00:01:11.200 --> 00:01:12.200
or just tweet it.

00:01:12.200 --> 00:01:14.447
But of course, we have
the dreaded microphone

00:01:14.447 --> 00:01:15.030
in the middle.

00:01:15.030 --> 00:01:16.670
So if you want to
queue up there,

00:01:16.670 --> 00:01:19.700
we can get questions
going live as well.

00:01:19.700 --> 00:01:20.460
Right.

00:01:20.460 --> 00:01:22.740
Let's move on to
the first question.

00:01:22.740 --> 00:01:26.550
So Chrome-packaged apps
and especially extensions

00:01:26.550 --> 00:01:29.940
are a really popular part
of the desktop browser.

00:01:29.940 --> 00:01:32.590
When do we get them on Android?

00:01:32.590 --> 00:01:34.550
RAHUL ROY-CHOWDHURY:
So I'll take that.

00:01:34.550 --> 00:01:35.758
There are a couple of things.

00:01:35.758 --> 00:01:39.360
Chrome apps can be
ported to Android and iOS

00:01:39.360 --> 00:01:41.940
through the Cordova framework.

00:01:41.940 --> 00:01:42.926
And so that continues.

00:01:42.926 --> 00:01:44.550
It's been supported
for a while, and we

00:01:44.550 --> 00:01:46.390
will continue to support that.

00:01:46.390 --> 00:01:49.580
Chrome extensions
are not something

00:01:49.580 --> 00:01:51.990
that we have ported
to Android or actually

00:01:51.990 --> 00:01:53.680
any mobile platform.

00:01:53.680 --> 00:01:56.667
And we have no plans at
this point to do that.

00:01:56.667 --> 00:01:58.375
And if you guys have
compelling use cases

00:01:58.375 --> 00:02:00.970
and you want to talk about
why this is something

00:02:00.970 --> 00:02:03.160
you'd be interested in,
I'd love to hear more.

00:02:03.160 --> 00:02:04.245
But no plans as of now.

00:02:04.245 --> 00:02:06.120
JAKE ARCHIBALD: So is
there anything specific

00:02:06.120 --> 00:02:09.050
that's holding us back on
particularly extensions?

00:02:09.050 --> 00:02:12.000
I'm not saying I want
AdBlock on my mobile,

00:02:12.000 --> 00:02:13.750
because that would be bad.

00:02:13.750 --> 00:02:14.250
But I do?

00:02:14.250 --> 00:02:14.750
No. [LAUGHS]

00:02:14.750 --> 00:02:15.840
GREG SIMON: That's true.

00:02:15.840 --> 00:02:19.120
There is one technical
reason, and that is RAM.

00:02:21.780 --> 00:02:24.950
Chrome uses a lot
of RAM, of course.

00:02:24.950 --> 00:02:29.850
And the thing about extensions
is they will inject JavaScript

00:02:29.850 --> 00:02:32.500
from the page, and
suddenly, it can't

00:02:32.500 --> 00:02:35.460
collect, because the structure
that the developer thought

00:02:35.460 --> 00:02:38.420
they had free was now being
retained by an extension.

00:02:38.420 --> 00:02:39.850
And this kind of snowballs.

00:02:39.850 --> 00:02:42.310
And then there's lots
of RAM, and it's used.

00:02:42.310 --> 00:02:45.060
And it's, like, unknown
what the actual problem is.

00:02:45.060 --> 00:02:47.900
JAKE ARCHIBALD: I suppose we
saw Firefox go through this.

00:02:47.900 --> 00:02:49.440
People would start
to say Firefox

00:02:49.440 --> 00:02:52.020
was slow when it was very
rarely Firefox's problem.

00:02:52.020 --> 00:02:54.210
It was actually extensions
that were making it slow.

00:02:54.210 --> 00:02:56.665
And I suppose on mobile,
there's less wriggle room there.

00:02:56.665 --> 00:02:58.540
GREG SIMON: Whenever a
family member comes up

00:02:58.540 --> 00:03:00.280
to me at Thanksgiving
and says, Chrome

00:03:00.280 --> 00:03:03.546
is running slow, I instantly
open up an Incognito window

00:03:03.546 --> 00:03:04.420
and say, OK, try now.

00:03:07.499 --> 00:03:09.040
GRACE KLOBA: Yeah,
I just want to add

00:03:09.040 --> 00:03:11.200
to what Greg said
about the memory.

00:03:11.200 --> 00:03:15.060
So for Chrome, like, a render
process, browser process,

00:03:15.060 --> 00:03:18.030
and the old extensions
running their own process,

00:03:18.030 --> 00:03:21.230
and then on mobile, you just
cannot have all this processing

00:03:21.230 --> 00:03:23.460
of foreground
without being killed.

00:03:23.460 --> 00:03:29.720
So we try to make Chrome run
as best as it can for the user.

00:03:29.720 --> 00:03:33.100
JAKE ARCHIBALD: So V8 was
an absolute revolution

00:03:33.100 --> 00:03:35.470
in terms of JavaScript
performance,

00:03:35.470 --> 00:03:39.796
but today we're seeing more
ES6 features in Firefox

00:03:39.796 --> 00:03:40.295
than Chrome.

00:03:40.295 --> 00:03:42.711
It's certainly [? unstable, ?]
like [? not ?] [? behind ?]

00:03:42.711 --> 00:03:44.400
[? flags. ?] What gives?

00:03:44.400 --> 00:03:45.566
GREG SIMON: Well, it's true.

00:03:45.566 --> 00:03:48.100
We are a bit behind
in ES6 features in V8

00:03:48.100 --> 00:03:50.440
when you look at other browsers.

00:03:50.440 --> 00:03:53.210
But if you look at what we've
done over the past six months,

00:03:53.210 --> 00:03:54.510
we've changed our game a lot.

00:03:54.510 --> 00:03:56.801
We've shipped [? maps ?]
[? and sets. ?] We have a team

00:03:56.801 --> 00:03:58.730
up in San Francisco
that's completing classes

00:03:58.730 --> 00:04:01.610
in JavaScript now, so you're
going to see that at some

00:04:01.610 --> 00:04:02.760
point.

00:04:02.760 --> 00:04:05.630
But remember, V8's priority
first is that speed,

00:04:05.630 --> 00:04:08.480
and the speed games in
JavaScript have not,

00:04:08.480 --> 00:04:09.830
like, let up.

00:04:09.830 --> 00:04:13.670
And we continue to
invest heavily in that.

00:04:13.670 --> 00:04:15.481
That's very important to us.

00:04:15.481 --> 00:04:17.480
DARIN FISHER: And shout-out
to chromestatus.com,

00:04:17.480 --> 00:04:21.040
where you can actually see
the set of ES6 features that

00:04:21.040 --> 00:04:24.037
are currently implemented,
like lexical scoping and so on.

00:04:24.037 --> 00:04:25.120
GREG SIMON: Yeah, exactly.

00:04:25.120 --> 00:04:26.690
In Chrome, yeah.

00:04:26.690 --> 00:04:28.800
JAKE ARCHIBALD: So
question to the audience.

00:04:28.800 --> 00:04:30.350
What ES6 features
do you think we

00:04:30.350 --> 00:04:31.905
should be giving priority to?

00:04:31.905 --> 00:04:34.030
What's your favorites in
the new set of JavaScript?

00:04:34.030 --> 00:04:34.946
AUDIENCE: [INAUDIBLE].

00:04:34.946 --> 00:04:35.775
AUDIENCE: Promises.

00:04:35.775 --> 00:04:36.725
AUDIENCE: Arrows!

00:04:36.725 --> 00:04:37.610
GREG SIMON: So Promises are--

00:04:37.610 --> 00:04:39.390
DARIN FISHER: Arrow
functions are underway.

00:04:39.390 --> 00:04:39.710
GREG SIMON: Yup.

00:04:39.710 --> 00:04:40.135
AUDIENCE: Generators.

00:04:40.135 --> 00:04:41.218
JAKE ARCHIBALD: I'm sorry.

00:04:41.218 --> 00:04:42.890
What was that?

00:04:42.890 --> 00:04:43.765
Shout that out again.

00:04:43.765 --> 00:04:44.835
AUDIENCE: Generators.

00:04:44.835 --> 00:04:46.460
JAKE ARCHIBALD:
Generators just landed.

00:04:46.460 --> 00:04:48.050
Generators has just landed.

00:04:48.050 --> 00:04:50.067
[CHEERING AND APPLAUSE]

00:04:50.067 --> 00:04:52.025
DARIN FISHER: Way to turn
that question around.

00:04:52.025 --> 00:04:53.140
[LAUGHTER]

00:04:53.140 --> 00:04:54.640
JAKE ARCHIBALD: So
completely fair,

00:04:54.640 --> 00:04:56.140
when I said that,
I thought, someone

00:04:56.140 --> 00:04:58.354
say "generators," because
we have a good story there.

00:04:58.354 --> 00:05:00.020
GREG SIMON: I heard
someone say modules.

00:05:00.020 --> 00:05:01.870
I would also love
modules, too, but the spec

00:05:01.870 --> 00:05:03.720
is, like, kind of
all over the place.

00:05:03.720 --> 00:05:06.619
And so we want to let it
stabilize a bit first.

00:05:06.619 --> 00:05:08.410
DARIN FISHER: Yeah, to
echo what Greg said,

00:05:08.410 --> 00:05:10.476
we really want to be
very thoughtful as we're

00:05:10.476 --> 00:05:12.100
extending V8's
capabilities, because we

00:05:12.100 --> 00:05:14.650
have to be very focused on
making sure that we're putting

00:05:14.650 --> 00:05:17.407
out high-quality implementation,
performance implementation.

00:05:17.407 --> 00:05:19.490
A lot of times, when you're
adding these features,

00:05:19.490 --> 00:05:20.280
you're adding complexity.

00:05:20.280 --> 00:05:21.315
We want to do it right.

00:05:21.315 --> 00:05:23.540
So it takes time to do it right.

00:05:23.540 --> 00:05:25.290
JAKE ARCHIBALD: And
someone said Promises.

00:05:25.290 --> 00:05:27.120
Well, we've got Promises
[? in stable, ?] but

00:05:27.120 --> 00:05:28.661
it's really fun when
you mix together

00:05:28.661 --> 00:05:30.310
Generators and
Promises, because you

00:05:30.310 --> 00:05:34.500
can write what looks like
synchronous code or a very

00:05:34.500 --> 00:05:35.680
simple flow.

00:05:35.680 --> 00:05:37.180
So that's really
worth checking out.

00:05:37.180 --> 00:05:40.500
And for me, the
ES7 feature I want

00:05:40.500 --> 00:05:42.260
is async functions,
which kind of makes

00:05:42.260 --> 00:05:43.860
that part of the language.

00:05:43.860 --> 00:05:46.290
You get to await
a promise, and it

00:05:46.290 --> 00:05:48.870
will sort of asynchronously
pause that execution flow.

00:05:48.870 --> 00:05:50.430
It's absolutely brilliant.

00:05:50.430 --> 00:05:51.170
Anyway, sorry.

00:05:51.170 --> 00:05:52.380
Hi, guys.

00:05:52.380 --> 00:05:54.810
[LAUGHTER]

00:05:54.810 --> 00:05:58.020
So Chrome DevTools,
they took what

00:05:58.020 --> 00:06:00.140
Firebug started and
kind of ran with it.

00:06:00.140 --> 00:06:01.960
And I don't think
it's biased to say

00:06:01.960 --> 00:06:05.370
that it became the definitive
web debugging tool.

00:06:05.370 --> 00:06:07.240
But now Firefox and
IE have caught up,

00:06:07.240 --> 00:06:09.610
and they're innovating.

00:06:09.610 --> 00:06:12.190
What are we doing?

00:06:12.190 --> 00:06:14.130
GREG SIMON: So
yeah, I'm extremely

00:06:14.130 --> 00:06:16.286
proud of the Chrome
DevTools team.

00:06:16.286 --> 00:06:17.660
Every time I open
it up, it seems

00:06:17.660 --> 00:06:20.510
like there's something new
there that is like magical.

00:06:20.510 --> 00:06:22.550
It's really amazing.

00:06:22.550 --> 00:06:24.260
But of course, with
all these features,

00:06:24.260 --> 00:06:27.850
it can be hard to find what
you're looking for sometimes.

00:06:27.850 --> 00:06:30.530
We talked a bit
about this at BlinkOn

00:06:30.530 --> 00:06:34.350
two weeks ago, where we
talked about the big projects

00:06:34.350 --> 00:06:35.920
we were going to do
in Blink in 2015.

00:06:35.920 --> 00:06:41.360
And one of them is about
really informing you guys,

00:06:41.360 --> 00:06:45.924
as developers, as to when
you make your frame time,

00:06:45.924 --> 00:06:48.090
meaning you're able to do
all your layout, painting,

00:06:48.090 --> 00:06:52.030
and JavaScript in less
than 16 milliseconds,

00:06:52.030 --> 00:06:54.040
or when you don't.

00:06:54.040 --> 00:06:59.620
So look for things in 2015
around more notifications

00:06:59.620 --> 00:07:03.980
about when you're going off
into the weeds, so to speak.

00:07:07.360 --> 00:07:09.050
JAKE ARCHIBALD:
Is there anything

00:07:09.050 --> 00:07:12.010
like specific in terms
of mobile or performance

00:07:12.010 --> 00:07:14.330
that we expect to
see in DevTools soon?

00:07:14.330 --> 00:07:19.555
Do you have a particular--
I suppose if--

00:07:19.555 --> 00:07:20.180
GREG SIMON: No.

00:07:20.180 --> 00:07:21.770
JAKE ARCHIBALD: No, OK. [LAUGHS]

00:07:21.770 --> 00:07:22.645
GREG SIMON: Well, no.

00:07:22.645 --> 00:07:25.300
No, but I mean, much of the
work of the web platform

00:07:25.300 --> 00:07:27.160
team over the past
nine months has all

00:07:27.160 --> 00:07:31.660
been about just doing less.

00:07:31.660 --> 00:07:33.530
We want to get it
out of the way,

00:07:33.530 --> 00:07:35.860
so you guys can run as much
JavaScript as you want,

00:07:35.860 --> 00:07:36.860
which is sort of a joke.

00:07:36.860 --> 00:07:40.260
But what's most important is,
we want to get it out of the way

00:07:40.260 --> 00:07:43.250
so that when something
is slow, you can fix it

00:07:43.250 --> 00:07:45.240
and you don't have to
rely on filing a bug,

00:07:45.240 --> 00:07:48.650
and twelve weeks later,
some kind of release.

00:07:48.650 --> 00:07:52.330
We want to give
more power to you.

00:07:52.330 --> 00:07:53.990
JAKE ARCHIBALD:
So with DevTools,

00:07:53.990 --> 00:07:57.947
I find that when I'm using OS X,
which is the operating system I

00:07:57.947 --> 00:07:59.560
use day to day, I
find that there's

00:07:59.560 --> 00:08:01.920
a lot of amazing features
there with zero discovery.

00:08:01.920 --> 00:08:03.294
I keep promising
myself I'm going

00:08:03.294 --> 00:08:06.260
to spend a day just
holding down the Option key

00:08:06.260 --> 00:08:10.050
and clicking everything to
find out even more stuff.

00:08:10.050 --> 00:08:13.470
I'm hearing from some developers
that they feel the same

00:08:13.470 --> 00:08:15.600
about Chrome
DevTools, that there's

00:08:15.600 --> 00:08:17.260
a lot of great
stuff in there that

00:08:17.260 --> 00:08:19.410
isn't widely used,
due to discovery.

00:08:19.410 --> 00:08:21.430
Is there something
we can do about that?

00:08:21.430 --> 00:08:24.260
GREG SIMON: I mean, I've used
a lot of DevTools in my career.

00:08:24.260 --> 00:08:27.559
They're all kind of like this.

00:08:27.559 --> 00:08:29.350
I probably shouldn't
call them out by name,

00:08:29.350 --> 00:08:32.690
but yeah, sure, you're right.

00:08:32.690 --> 00:08:35.140
We can probably do more.

00:08:35.140 --> 00:08:36.985
There are articles
on HTML5 Rocks.

00:08:36.985 --> 00:08:39.260
Maybe we can expand those a bit.

00:08:39.260 --> 00:08:42.240
But this is a DevTool.

00:08:42.240 --> 00:08:43.799
It's going to show
low-level stuff.

00:08:43.799 --> 00:08:49.240
It's not going to be maybe as
soft and cuddly as a web page,

00:08:49.240 --> 00:08:52.480
but it's not meant for that.

00:08:52.480 --> 00:08:54.880
JAKE ARCHIBALD: So in terms
of new web platform stuff,

00:08:54.880 --> 00:08:57.340
we're launching Service
Worker pretty aggressively.

00:08:57.340 --> 00:08:58.260
DARIN FISHER: Yay.

00:08:58.260 --> 00:08:59.700
JAKE ARCHIBALD: Yay.

00:08:59.700 --> 00:09:03.920
But there's still
some disagreements

00:09:03.920 --> 00:09:07.180
between the browsers and
ongoing [? inspection. ?]

00:09:07.180 --> 00:09:10.350
And we're wanting to push
push messaging, deploy push

00:09:10.350 --> 00:09:12.592
messaging, while
there's kind of still

00:09:12.592 --> 00:09:14.800
no standard for the server
to serve a messaging part.

00:09:14.800 --> 00:09:18.040
Are we doing something wrong
by pushing that aggressively

00:09:18.040 --> 00:09:21.020
before we've had total agreement
that there's definitely nothing

00:09:21.020 --> 00:09:23.745
there we can do
with these specs?

00:09:23.745 --> 00:09:25.120
DARIN FISHER: I
think definitely,

00:09:25.120 --> 00:09:26.370
there's a balancing act here.

00:09:26.370 --> 00:09:29.770
It's important for us to
be aggressive in the sense

00:09:29.770 --> 00:09:31.560
that developers are
really demanding

00:09:31.560 --> 00:09:33.650
us to try to figure out
and solve these problems.

00:09:33.650 --> 00:09:37.110
And Service Worker is
definitely something

00:09:37.110 --> 00:09:40.060
that's been in work, under
development for quite awhile,

00:09:40.060 --> 00:09:43.647
actually, as you know, Jake.

00:09:43.647 --> 00:09:45.480
JAKE ARCHIBALD: But
it's relative, isn't it?

00:09:45.480 --> 00:09:47.370
It's been like a year
and a half, which

00:09:47.370 --> 00:09:53.680
I think, in terms of spec time,
that's only like 20 minutes.

00:09:53.680 --> 00:09:55.090
DARIN FISHER: Yes, this is true.

00:09:55.090 --> 00:09:57.675
But it's been
developed in the open.

00:09:57.675 --> 00:09:59.050
There's been a
lot of discussions

00:09:59.050 --> 00:10:00.508
and a lot of
collaboration actually

00:10:00.508 --> 00:10:03.012
with folks from Mozilla and
product teams at Google who

00:10:03.012 --> 00:10:04.470
are very hungry
for these features.

00:10:04.470 --> 00:10:07.540
So the feedback
loop is pretty good.

00:10:07.540 --> 00:10:11.230
I know that ultimately, we
want to try to ship this thing,

00:10:11.230 --> 00:10:15.140
and we're probably going to be
the first browser to ship it.

00:10:15.140 --> 00:10:17.600
That means we're taking
on some risk, risk

00:10:17.600 --> 00:10:21.200
that when other browser
vendors go off to ship,

00:10:21.200 --> 00:10:22.370
we'll be slightly different.

00:10:22.370 --> 00:10:24.580
And that's definitely
a risk that we

00:10:24.580 --> 00:10:26.550
are aware of,
concerned about, want

00:10:26.550 --> 00:10:28.540
to make sure that
we do right, and not

00:10:28.540 --> 00:10:32.500
create complications on the
platform, because ultimately,

00:10:32.500 --> 00:10:33.552
that's not great.

00:10:33.552 --> 00:10:35.760
GREG SIMON: We're also taking
a very layered approach

00:10:35.760 --> 00:10:37.650
to shipping Service
Worker, and there

00:10:37.650 --> 00:10:41.224
are parts of the spec that are
not quite gelled yet, Jake.

00:10:41.224 --> 00:10:42.140
JAKE ARCHIBALD: Sorry.

00:10:42.140 --> 00:10:43.223
GREG SIMON: But that's OK.

00:10:43.223 --> 00:10:44.470
It's OK.

00:10:44.470 --> 00:10:47.820
But we wanted to ship
a minimal-- what's

00:10:47.820 --> 00:10:52.300
the minimal useful piece
that we can get out there,

00:10:52.300 --> 00:10:55.530
to show that we're serious and
that you guys have something

00:10:55.530 --> 00:10:56.862
to use?

00:10:56.862 --> 00:10:58.320
If you have any
questions or you're

00:10:58.320 --> 00:11:01.390
curious about how we actually
decide to ship things,

00:11:01.390 --> 00:11:06.730
definitely check out the
mailing list blink-dev.

00:11:06.730 --> 00:11:08.230
It's a public list
where people that

00:11:08.230 --> 00:11:13.460
work on the Blink
engine trade notes.

00:11:13.460 --> 00:11:15.640
But also, there is
a process on there

00:11:15.640 --> 00:11:18.970
called Intent to Implement
and Intent to Ship.

00:11:18.970 --> 00:11:21.940
And so when you, as a
developer, come in and say,

00:11:21.940 --> 00:11:24.830
I want to work on and I want to
add feature x to the platform,

00:11:24.830 --> 00:11:27.210
so I send an email with a
template to the whole group,

00:11:27.210 --> 00:11:30.760
saying, Intent to Implement,
which is meant to be low

00:11:30.760 --> 00:11:35.054
friction, just sort of a PSA.

00:11:35.054 --> 00:11:36.720
But then when you're
ready to turn it on

00:11:36.720 --> 00:11:38.760
and you have to send
an Intent to Ship--

00:11:38.760 --> 00:11:42.350
And we aren't special
because we're Google.

00:11:42.350 --> 00:11:43.560
We send these as well.

00:11:43.560 --> 00:11:46.000
And you will see Googlers
coming on there, going, you're

00:11:46.000 --> 00:11:46.930
going to ship
Service Worker now?

00:11:46.930 --> 00:11:47.610
Are you crazy?

00:11:47.610 --> 00:11:51.364
And so we have to actually
explain all of our reasoning.

00:11:51.364 --> 00:11:52.280
And that's all public.

00:11:52.280 --> 00:11:54.170
It's all out there,
and you can read it.

00:11:54.170 --> 00:11:54.236
JAKE ARCHIBALD: Yeah.

00:11:54.236 --> 00:11:55.620
And if you have any
specific questions

00:11:55.620 --> 00:11:57.453
about the flow we're
doing or anything else,

00:11:57.453 --> 00:11:59.090
the scary microphone is there.

00:11:59.090 --> 00:12:01.090
It's not that scary,
but it's anyone's.

00:12:01.090 --> 00:12:02.840
Yeah, if you've got a
question, go for it.

00:12:02.840 --> 00:12:03.340
Yeah.

00:12:03.340 --> 00:12:07.240
I think with Service Worker
and certainly other specs

00:12:07.240 --> 00:12:10.110
as well, that we could sit on
this thing for another three

00:12:10.110 --> 00:12:13.270
years, and we could come up
with a slightly better API.

00:12:13.270 --> 00:12:16.190
We could probably come up
with a slightly cleaner spec.

00:12:16.190 --> 00:12:18.570
But ultimately,
the result would be

00:12:18.570 --> 00:12:19.820
no Service Worker for anyone.

00:12:19.820 --> 00:12:20.800
GREG SIMON: Exactly.

00:12:20.800 --> 00:12:22.980
JAKE ARCHIBALD: So I think I'm
kind of happy with what we're

00:12:22.980 --> 00:12:24.360
doing, pushing
that stuff forward.

00:12:24.360 --> 00:12:25.943
And we saw this with
Promises as well.

00:12:25.943 --> 00:12:27.990
We'd have to sort
of make a change

00:12:27.990 --> 00:12:32.610
to our live thing of Promises,
but we knew from the data

00:12:32.610 --> 00:12:34.570
that it wasn't going to
break existing sites.

00:12:34.570 --> 00:12:35.278
GREG SIMON: Yeah.

00:12:35.278 --> 00:12:38.270
I mean, no one on this team is
interested in being reckless.

00:12:38.270 --> 00:12:40.260
DARIN FISHER: But you
make a good point.

00:12:40.260 --> 00:12:43.130
Through Chrome's Dev channel
and the usage counters

00:12:43.130 --> 00:12:45.150
that we have for
folks who opt in,

00:12:45.150 --> 00:12:48.070
we're able to understand
adoption of these things

00:12:48.070 --> 00:12:50.980
and understand the
risk to rolling out

00:12:50.980 --> 00:12:55.126
slight variations of features
that we've already shipped.

00:12:55.126 --> 00:12:58.359
And you can see these kinds of
changes being announced also

00:12:58.359 --> 00:12:58.900
on blink-dev.

00:12:58.900 --> 00:13:00.358
And people, again,
are trying to be

00:13:00.358 --> 00:13:02.455
very thoughtful of the
impact that may have.

00:13:02.455 --> 00:13:03.330
JAKE ARCHIBALD: Cool.

00:13:03.330 --> 00:13:04.270
Question from the audience?

00:13:04.270 --> 00:13:04.530
AUDIENCE: Yeah.

00:13:04.530 --> 00:13:05.196
I am a beginner.

00:13:07.990 --> 00:13:13.180
What is the best web
application editor you

00:13:13.180 --> 00:13:16.040
recommend, especially
for Chrome?

00:13:19.674 --> 00:13:21.340
GREG SIMON: What is
the best web editor?

00:13:21.340 --> 00:13:22.470
Like to--

00:13:22.470 --> 00:13:25.700
DARIN FISHER: I really like
using Vim, but anyways.

00:13:25.700 --> 00:13:27.130
GREG SIMON: This is so funny.

00:13:27.130 --> 00:13:31.310
There have been so many
failed attempts over history

00:13:31.310 --> 00:13:35.580
to create the
ultimate web editor.

00:13:35.580 --> 00:13:39.090
JAKE ARCHIBALD: I think
it's-- I use Sublime Text 2.

00:13:39.090 --> 00:13:41.090
I haven't even
moved up to 3 yet.

00:13:41.090 --> 00:13:43.420
Well, because I think
because of the amount of time

00:13:43.420 --> 00:13:47.630
a developer spends in
a particular editor,

00:13:47.630 --> 00:13:49.000
it's like moving house.

00:13:49.000 --> 00:13:51.570
You can't just get up and go.

00:13:51.570 --> 00:13:54.281
It needs to be--
because even if--

00:13:54.281 --> 00:13:56.530
DARIN FISHER: Those keystrokes
I learned in 1993, they

00:13:56.530 --> 00:13:57.619
continue to serve me well.

00:13:57.619 --> 00:13:58.535
JAKE ARCHIBALD: Right.

00:13:58.535 --> 00:14:00.555
[LAUGHTER]

00:14:03.960 --> 00:14:06.564
GREG SIMON: One other
thing is that there's

00:14:06.564 --> 00:14:09.230
so many different ways to do the
same thing on the web platform,

00:14:09.230 --> 00:14:10.170
right?

00:14:10.170 --> 00:14:12.670
And that doesn't
really lend itself

00:14:12.670 --> 00:14:18.700
well to some kind of ID that
will do everything for you.

00:14:18.700 --> 00:14:22.370
Usually, popular IDs
take you down one path.

00:14:22.370 --> 00:14:24.460
And the web doesn't
really have much of that.

00:14:24.460 --> 00:14:26.150
I mean, it doesn't
even have a theme.

00:14:26.150 --> 00:14:28.660
It just has sort of
a white rectangle.

00:14:28.660 --> 00:14:30.160
JAKE ARCHIBALD: I'm
super fascinated

00:14:30.160 --> 00:14:32.290
by some of the
editors we're seeing

00:14:32.290 --> 00:14:34.300
built on top of
web technologies.

00:14:34.300 --> 00:14:37.200
Because it's this idea
of even as a beginner,

00:14:37.200 --> 00:14:39.120
you could start to use them.

00:14:39.120 --> 00:14:41.330
And then as you learn more
about the web platform,

00:14:41.330 --> 00:14:43.177
you can start to
change the editor

00:14:43.177 --> 00:14:44.760
to be more like how
you would work it.

00:14:44.760 --> 00:14:47.430
You can sort of learn
the web platform

00:14:47.430 --> 00:14:48.590
through the web platform.

00:14:48.590 --> 00:14:50.590
DARIN FISHER: I feel like
[? jspin ?] has almost

00:14:50.590 --> 00:14:52.094
become like a verb on our team.

00:14:52.094 --> 00:14:52.490
GREG SIMON: That's true.

00:14:52.490 --> 00:14:53.090
That's true.

00:14:53.090 --> 00:14:54.923
JAKE ARCHIBALD: Yeah,
I love [? jet spin. ?]

00:14:56.584 --> 00:14:58.250
AUDIENCE: We have a
consensus over here.

00:14:58.250 --> 00:15:00.930
Nobody's mentioned Chrome
DevTools as an editor,

00:15:00.930 --> 00:15:02.830
and it actually
does an amazing job.

00:15:02.830 --> 00:15:03.830
GREG SIMON: That's true.

00:15:03.830 --> 00:15:04.330
Yeah.

00:15:04.330 --> 00:15:06.500
So I believe the
reason that they

00:15:06.500 --> 00:15:09.180
put that in is because the
Chrome DevTools editor uses

00:15:09.180 --> 00:15:10.975
that to work on DevTools,
I'm pretty sure.

00:15:10.975 --> 00:15:12.100
DARIN FISHER: This is true.

00:15:12.100 --> 00:15:14.550
They actually do self-hosted
development of DevTools.

00:15:14.550 --> 00:15:17.040
It's fantastic.

00:15:17.040 --> 00:15:18.270
Fantastically awesome.

00:15:18.270 --> 00:15:19.160
GREG SIMON: In
fact, they even had

00:15:19.160 --> 00:15:21.743
some sort of plug-in that would
save things out to the local--

00:15:21.743 --> 00:15:23.685
anyway.

00:15:23.685 --> 00:15:24.560
JAKE ARCHIBALD: Good.

00:15:24.560 --> 00:15:26.130
We'll take another
question from the audience.

00:15:26.130 --> 00:15:26.755
AUDIENCE: Sure.

00:15:26.755 --> 00:15:30.240
So there's sort of-- I guess
if you think about mobile web

00:15:30.240 --> 00:15:31.810
and parity with
native, there are

00:15:31.810 --> 00:15:34.330
sort of three different ways
you can attack it-- parity

00:15:34.330 --> 00:15:37.320
in performance, parity in
capabilities-- so Bluetooth,

00:15:37.320 --> 00:15:40.620
those things-- and then
parity in distribution--

00:15:40.620 --> 00:15:46.270
so app store, on the same
level with native apps,

00:15:46.270 --> 00:15:47.470
seeing web applications.

00:15:47.470 --> 00:15:50.220
Are there plans around
that to merge the Chrome

00:15:50.220 --> 00:15:52.030
Store into the Play Store?

00:15:52.030 --> 00:15:53.740
Anything along those lines?

00:15:53.740 --> 00:15:54.870
JAKE ARCHIBALD: Hm.

00:15:54.870 --> 00:15:56.870
RAHUL ROY-CHOWDHURY: I
can take a crack at that.

00:15:56.870 --> 00:15:59.990
We don't have plans to merge the
Chrome Web Store and Play Store

00:15:59.990 --> 00:16:04.030
or bring the Chrome Web
Store to mobile just yet.

00:16:04.030 --> 00:16:06.420
But you make a good point
with the general idea of,

00:16:06.420 --> 00:16:10.530
how do we find ways to
bridge the gap between web

00:16:10.530 --> 00:16:11.420
apps and native apps?

00:16:11.420 --> 00:16:12.920
You've heard of all
the things we're

00:16:12.920 --> 00:16:16.329
doing in terms of performance,
in terms of capabilities.

00:16:16.329 --> 00:16:17.620
Discoverability is interesting.

00:16:17.620 --> 00:16:20.300
The models are very different.

00:16:20.300 --> 00:16:22.070
I think one of the
super powers of the web

00:16:22.070 --> 00:16:25.170
is the fact that discovery
is frictionless, and easy,

00:16:25.170 --> 00:16:26.280
and universal.

00:16:26.280 --> 00:16:27.480
Everything's a click away.

00:16:27.480 --> 00:16:28.994
There's no install process.

00:16:28.994 --> 00:16:29.910
There's no gatekeeper.

00:16:29.910 --> 00:16:33.120
You can just click a link,
and you're in the experience.

00:16:33.120 --> 00:16:35.880
And so in some ways, as
the web evolves on mobile,

00:16:35.880 --> 00:16:38.490
we'd like to preserve the
qualities of the web that

00:16:38.490 --> 00:16:43.961
make it amazing and make that
work on these new form factors.

00:16:43.961 --> 00:16:44.586
AUDIENCE: Sure.

00:16:44.586 --> 00:16:46.390
So I guess just
quick follow-up would

00:16:46.390 --> 00:16:49.500
be, I think that
people who are wrapping

00:16:49.500 --> 00:16:53.180
web technology in Cordova,
to some extent, that's

00:16:53.180 --> 00:16:53.970
for capability.

00:16:53.970 --> 00:16:56.930
But I'd say that maybe
even a majority of those

00:16:56.930 --> 00:16:59.050
are sheerly for app
store distribution,

00:16:59.050 --> 00:17:01.870
so that you have the
placement in the same place

00:17:01.870 --> 00:17:04.280
that people already expect
to look from a web app.

00:17:04.280 --> 00:17:06.794
So while those things
will change over time,

00:17:06.794 --> 00:17:07.960
how do you think about that?

00:17:07.960 --> 00:17:10.800
Do you like packaging
things with Cordova,

00:17:10.800 --> 00:17:13.259
or is that a stopgap to a
future where we don't need to?

00:17:13.259 --> 00:17:14.800
JAKE ARCHIBALD: I
think you're right.

00:17:14.800 --> 00:17:16.466
The app store model
works really, really

00:17:16.466 --> 00:17:18.240
well for content discovery.

00:17:18.240 --> 00:17:21.540
Will Google ever build a
content discovery service

00:17:21.540 --> 00:17:24.002
for the web, some
kind of engine?

00:17:24.002 --> 00:17:25.710
DARIN FISHER: Let me
Google that for you.

00:17:25.710 --> 00:17:26.285
[LAUGHTER]

00:17:26.285 --> 00:17:27.410
JAKE ARCHIBALD: For search?

00:17:27.410 --> 00:17:28.993
But I think it's a
fair point, though,

00:17:28.993 --> 00:17:31.750
is we are seeing people going
to these app store models

00:17:31.750 --> 00:17:34.220
even though we have
the websites there

00:17:34.220 --> 00:17:35.909
that should be doing that job.

00:17:35.909 --> 00:17:37.450
RAHUL ROY-CHOWDHURY:
I think we don't

00:17:37.450 --> 00:17:38.630
need to be prescriptive
about that.

00:17:38.630 --> 00:17:40.254
I think developers,
such as yourselves,

00:17:40.254 --> 00:17:42.370
know your use case
better than anyone else.

00:17:42.370 --> 00:17:44.550
And you should decide
what makes sense.

00:17:44.550 --> 00:17:46.460
If discovery through
clicking a link

00:17:46.460 --> 00:17:49.290
on social media, for
example, is the right way

00:17:49.290 --> 00:17:51.830
for your application to
be discovered and used

00:17:51.830 --> 00:17:55.300
by many people, the web is
probably the right model to go.

00:17:55.300 --> 00:17:59.270
If you value the packaging
aspect of the store,

00:17:59.270 --> 00:18:03.660
or you feel like you will get
a chance of being retained

00:18:03.660 --> 00:18:06.010
on the home screen by
the user and thus get

00:18:06.010 --> 00:18:09.110
higher re-engagement, the store
is a good model to consider.

00:18:09.110 --> 00:18:11.780
I feel like there is
no one size fits all.

00:18:11.780 --> 00:18:14.000
One of the themes that
you heard yesterday

00:18:14.000 --> 00:18:19.940
was that we've seen increasingly
that the store model and app

00:18:19.940 --> 00:18:22.546
installs on the home screen
are great for a small set

00:18:22.546 --> 00:18:23.670
of [? head ?] applications.

00:18:23.670 --> 00:18:27.240
And people engage
those applications

00:18:27.240 --> 00:18:29.300
with high levels of engagement.

00:18:29.300 --> 00:18:31.500
But for the long
tail, it's not clear

00:18:31.500 --> 00:18:34.230
that you will get the engagement
that you're hoping for,

00:18:34.230 --> 00:18:36.710
potentially, if there's
many other apps installed

00:18:36.710 --> 00:18:37.830
on the device.

00:18:37.830 --> 00:18:39.800
And for those users or
for those developers,

00:18:39.800 --> 00:18:42.540
maybe the web is
a superior model.

00:18:42.540 --> 00:18:44.470
So it kind of depends
on a case-by-case basis

00:18:44.470 --> 00:18:47.997
what the needs of
your application are.

00:18:47.997 --> 00:18:49.580
GRACE KLOBA: And I
just want to add on

00:18:49.580 --> 00:18:52.000
that one is the
Chrome for Android,

00:18:52.000 --> 00:18:56.300
and I think also Chrome for iOS,
there's an Add to Home Screen.

00:18:56.300 --> 00:19:01.350
So if the user really wants to
use the website all the time,

00:19:01.350 --> 00:19:03.240
they can easily
add to home screen,

00:19:03.240 --> 00:19:06.119
and it's easy to access it.

00:19:06.119 --> 00:19:08.160
JAKE ARCHIBALD: I think
another one of the things

00:19:08.160 --> 00:19:09.701
that people like
about the Play Store

00:19:09.701 --> 00:19:12.880
is it provides a really
low-barter monetization.

00:19:12.880 --> 00:19:16.044
What can we do to make
the web competitive here?

00:19:16.044 --> 00:19:17.710
AVNI SHAH: Yeah,
that's a good question.

00:19:17.710 --> 00:19:20.440
I'll take a stab at this,
and other people can jump in.

00:19:20.440 --> 00:19:22.550
So payment models
and monetization--

00:19:22.550 --> 00:19:24.234
clearly important
for the mobile web.

00:19:24.234 --> 00:19:26.150
I think it's a huge pain
point for all of you.

00:19:26.150 --> 00:19:28.879
It's actually a huge pain
point for users, too.

00:19:28.879 --> 00:19:30.920
There's a bunch of different
solutions out there.

00:19:30.920 --> 00:19:33.128
A lot of people are actually
interested in the space.

00:19:33.128 --> 00:19:37.590
And there's not one
clear answer here, yet.

00:19:37.590 --> 00:19:41.170
With some of the solutions we've
seen, one of the things we see

00:19:41.170 --> 00:19:44.530
is that the more friction
for integration and things

00:19:44.530 --> 00:19:46.565
like that lead to lower uptake.

00:19:46.565 --> 00:19:48.850
And therefore, it's
harder to get something

00:19:48.850 --> 00:19:52.420
that works across
the web at large.

00:19:52.420 --> 00:19:55.369
But it is something that
we care a lot about,

00:19:55.369 --> 00:19:56.910
something we're
thinking a lot about.

00:19:56.910 --> 00:19:59.700
I think there's things we
can do here to make things

00:19:59.700 --> 00:20:01.977
like AutoFill, which is
technology we already have--

00:20:01.977 --> 00:20:03.560
it's already built
into the platform--

00:20:03.560 --> 00:20:06.470
work well, either by encouraging
developers to do things

00:20:06.470 --> 00:20:09.480
like simply tag fields
and things like that,

00:20:09.480 --> 00:20:11.730
much better than
is happening today.

00:20:11.730 --> 00:20:14.180
So I think there
are some solutions

00:20:14.180 --> 00:20:17.980
we can do to make the friction
lower for users and for all

00:20:17.980 --> 00:20:18.480
of you.

00:20:18.480 --> 00:20:22.127
So stay tuned.

00:20:22.127 --> 00:20:24.460
JAKE ARCHIBALD: Let's take a
question from the audience.

00:20:24.460 --> 00:20:25.168
AUDIENCE: Thanks.

00:20:25.168 --> 00:20:27.550
I'm not sure if you're the
right group to ask this,

00:20:27.550 --> 00:20:29.670
but it's probably as
close as I'm going to get.

00:20:29.670 --> 00:20:36.040
So Node.js relies on
V8 heavily, and it

00:20:36.040 --> 00:20:39.120
doesn't seem like Google is
too involved with that project.

00:20:39.120 --> 00:20:42.850
I was wondering if there's
any talks with maybe extending

00:20:42.850 --> 00:20:45.020
a long-term,
long-support version

00:20:45.020 --> 00:20:47.999
of the V8 engine
for Node purposes?

00:20:47.999 --> 00:20:49.540
GREG SIMON: What
sort of improvements

00:20:49.540 --> 00:20:55.150
do you think we could make
to V8 to make Node better?

00:20:55.150 --> 00:20:56.400
AUDIENCE: No, V8 is great.

00:20:56.400 --> 00:21:00.599
It's just sometimes Node lags
behind on the V8 versions.

00:21:00.599 --> 00:21:02.640
I was just wondering if
you were maybe working on

00:21:02.640 --> 00:21:03.220
GREG SIMON: Yeah,
that's probably

00:21:03.220 --> 00:21:05.386
something to talk to the
Node project authors about.

00:21:05.386 --> 00:21:11.450
I mean, V8 is a public API,
and we love that Node uses it.

00:21:11.450 --> 00:21:13.590
It's really great.

00:21:13.590 --> 00:21:17.110
But yeah, the V8 team's
not responsible for rolling

00:21:17.110 --> 00:21:18.905
V8 versions into Node.

00:21:18.905 --> 00:21:20.280
JAKE ARCHIBALD:
But it'd be great

00:21:20.280 --> 00:21:21.990
if they did it,
because then you'd

00:21:21.990 --> 00:21:24.890
get Promises and then
Generators with that, as well.

00:21:24.890 --> 00:21:26.550
The Node team-- I
think that there

00:21:26.550 --> 00:21:29.510
is a lot of API discussion
around Promises there,

00:21:29.510 --> 00:21:31.413
but I'd love them
to take that on,

00:21:31.413 --> 00:21:33.121
especially now it's
part of the platform.

00:21:33.121 --> 00:21:34.855
AUDIENCE: Thanks.

00:21:34.855 --> 00:21:36.730
JAKE ARCHIBALD: This is
my favorite question.

00:21:36.730 --> 00:21:40.930
If you look at Google Docs
and Inbox in other browsers,

00:21:40.930 --> 00:21:44.080
you get a banner telling
you to use Chrome.

00:21:44.080 --> 00:21:46.367
Or in Inbox's case, the
site is entirely blocked.

00:21:46.367 --> 00:21:48.200
And that is even in
Chromium-based browsers,

00:21:48.200 --> 00:21:50.030
such as Opera.

00:21:50.030 --> 00:21:52.860
Internet Explorer just launched
Skype for the web cross

00:21:52.860 --> 00:21:53.830
browser.

00:21:53.830 --> 00:21:56.332
When did Google
become the bad guys?

00:21:56.332 --> 00:21:58.300
[WHISTLING]

00:21:58.300 --> 00:22:00.268
[LAUGHTER]

00:22:02.060 --> 00:22:03.560
AVNI SHAH: Can we
debate the premise

00:22:03.560 --> 00:22:05.177
of the last part
of that question?

00:22:05.177 --> 00:22:07.100
[LAUGHTER]

00:22:07.100 --> 00:22:08.010
Throw that out there.

00:22:08.010 --> 00:22:10.370
RAHUL ROY-CHOWDHURY: Yeah,
that's a loaded question.

00:22:10.370 --> 00:22:14.230
But I think we would like
things to be cross-browser.

00:22:14.230 --> 00:22:15.940
As I said, the
superpower of the web

00:22:15.940 --> 00:22:18.950
is the fact that it works
across different browsers,

00:22:18.950 --> 00:22:19.960
different form factors.

00:22:19.960 --> 00:22:21.830
It's ubiquitous.

00:22:21.830 --> 00:22:24.450
Chrome cares deeply
about making that true.

00:22:24.450 --> 00:22:27.060
In the case of
Inbox, I'm not sure

00:22:27.060 --> 00:22:30.340
why they're targeting
Chrome specifically.

00:22:30.340 --> 00:22:31.440
It could be a QA thing.

00:22:31.440 --> 00:22:32.971
It could be just
a phase rollout.

00:22:32.971 --> 00:22:35.220
But certainly, we would love
for all Google properties

00:22:35.220 --> 00:22:37.090
to run on all browsers.

00:22:37.090 --> 00:22:39.710
Maybe there's some caveats
around Evergreen browsers

00:22:39.710 --> 00:22:41.530
versus non-updating browsers.

00:22:41.530 --> 00:22:43.444
But generally
speaking, we would like

00:22:43.444 --> 00:22:44.610
to see that happen, as well.

00:22:44.610 --> 00:22:46.068
I don't think
there's any conflict.

00:22:48.992 --> 00:22:51.200
JAKE ARCHIBALD: So I guess
it's slightly-- oh, sorry.

00:22:51.200 --> 00:22:52.901
Go for it.

00:22:52.901 --> 00:22:55.400
AUDIENCE: So one thing that's
come up during this conference

00:22:55.400 --> 00:23:00.810
is that it seems like there
is a deeper integration now

00:23:00.810 --> 00:23:04.470
between V8 and the
rendering runtime.

00:23:04.470 --> 00:23:09.250
I've heard that now there's
integration between Blink

00:23:09.250 --> 00:23:13.440
and V8, such that if there is
time at the end of rendering

00:23:13.440 --> 00:23:16.750
each frame, that will
potentially trigger a GC pause,

00:23:16.750 --> 00:23:18.950
so it'll use the
idle time better.

00:23:18.950 --> 00:23:24.360
And I'm wondering if
there's any incentive

00:23:24.360 --> 00:23:29.330
to start to open up more
of those browser internals

00:23:29.330 --> 00:23:34.330
to user script, user JavaScript.

00:23:34.330 --> 00:23:37.750
Because that GC
pause, for example,

00:23:37.750 --> 00:23:42.120
makes it challenging to
begin to write applications

00:23:42.120 --> 00:23:44.780
in [? ready-to-use ?] WebGL,
because you just never know

00:23:44.780 --> 00:23:46.690
when you're going to
hit that GC Pause.

00:23:46.690 --> 00:23:48.810
So you're running WebGL
inside of the user

00:23:48.810 --> 00:23:51.550
thread in JavaScript, and it
can interrupt your animation.

00:23:51.550 --> 00:23:54.584
And that means that
it's much harder to--

00:23:54.584 --> 00:23:55.500
GREG SIMON: It's true.

00:23:55.500 --> 00:23:58.670
I don't think we'll
ever expose a GC Now

00:23:58.670 --> 00:24:03.420
or Don't GC, because
that would be abused

00:24:03.420 --> 00:24:06.240
and suddenly RAM would be
even worse than it is today.

00:24:10.300 --> 00:24:15.330
The best way you can control
a garbage-collected system

00:24:15.330 --> 00:24:17.720
as a developer is
to not recreate

00:24:17.720 --> 00:24:22.070
objects, which is
not a great answer.

00:24:22.070 --> 00:24:28.200
As far as primitives, we are
in total agreement with you.

00:24:28.200 --> 00:24:32.280
Over the past year, we sort
of had a team agreement

00:24:32.280 --> 00:24:33.780
that we weren't
going to do anything

00:24:33.780 --> 00:24:36.100
more that's high level.

00:24:36.100 --> 00:24:39.140
Instead, let's try to
rationalize a platform.

00:24:39.140 --> 00:24:43.150
And so if you look
at Service Worker,

00:24:43.150 --> 00:24:45.786
you can use it to
describe App Cache,

00:24:45.786 --> 00:24:47.535
because that's what
we should have shipped

00:24:47.535 --> 00:24:49.355
is Service Worker,
not App Cache.

00:24:49.355 --> 00:24:52.220
And so you're going to
see a lot more of that,

00:24:52.220 --> 00:24:54.950
of like lower-level,
simpler primitives

00:24:54.950 --> 00:24:57.540
that other frameworks
can start to use,

00:24:57.540 --> 00:24:59.200
rather than just
Show Modal Dialogue.

00:25:02.110 --> 00:25:04.410
DARIN FISHER:
Plus, on blink-dev,

00:25:04.410 --> 00:25:05.330
you can follow along.

00:25:05.330 --> 00:25:06.960
There's a project
called Oilpan, which

00:25:06.960 --> 00:25:08.630
is redoing the
garbage-collection

00:25:08.630 --> 00:25:11.070
infrastructure in Blink.

00:25:11.070 --> 00:25:13.480
And part of that
creates an opportunity

00:25:13.480 --> 00:25:17.740
to do precise GC when
the stack unwinds

00:25:17.740 --> 00:25:20.231
and things of this sort.

00:25:20.231 --> 00:25:22.480
And we might be able to get
a lot better at scheduling

00:25:22.480 --> 00:25:23.219
this work.

00:25:23.219 --> 00:25:25.260
The cool thing about that
is that as a developer,

00:25:25.260 --> 00:25:28.400
you can start to count on,
if you aren't allocating

00:25:28.400 --> 00:25:29.980
too many objects,
then you don't have

00:25:29.980 --> 00:25:31.280
to worry about garbage
collection happening

00:25:31.280 --> 00:25:31.988
at certain times.

00:25:31.988 --> 00:25:36.104
And if you're trying to prepare
a render function for WebGL,

00:25:36.104 --> 00:25:38.270
then you'd be thinking about
how many objects you're

00:25:38.270 --> 00:25:39.954
creating and so on.

00:25:39.954 --> 00:25:41.620
GREG SIMON: Yeah,
that is a great point.

00:25:41.620 --> 00:25:44.510
While V8 is garbage-collected
and the V8 team can actually

00:25:44.510 --> 00:25:47.010
control when it runs, which is
how they were able to wire it

00:25:47.010 --> 00:25:51.970
up to the compositor, Blink
uses a ref counting system.

00:25:51.970 --> 00:25:55.900
So things are free and just sort
of in a random order, but not

00:25:55.900 --> 00:26:01.840
a predictable order, certainly
not by the web developer.

00:26:01.840 --> 00:26:04.220
But by switching away
from the ref counting

00:26:04.220 --> 00:26:06.990
system to a graph,
which we can trace,

00:26:06.990 --> 00:26:09.020
we'll have much more
control over when

00:26:09.020 --> 00:26:12.900
we free things in
Blink, as well.

00:26:12.900 --> 00:26:15.710
JAKE ARCHIBALD: So why
is it that the two latest

00:26:15.710 --> 00:26:19.036
devices from Android
won't have a browser,

00:26:19.036 --> 00:26:20.410
like what you were
talking about,

00:26:20.410 --> 00:26:23.650
the watches and Android TV?

00:26:23.650 --> 00:26:26.395
Have we given up on the web?

00:26:26.395 --> 00:26:27.850
[LAUGHTER]

00:26:27.850 --> 00:26:30.275
GREG SIMON: Wow.

00:26:30.275 --> 00:26:31.245
AVNI SHAH: No.

00:26:31.245 --> 00:26:32.364
[LAUGHTER]

00:26:32.364 --> 00:26:34.155
DARIN FISHER: You want
the mic to say that?

00:26:34.155 --> 00:26:36.095
AVNI SHAH: No, not really.

00:26:36.095 --> 00:26:38.225
Greg, you wanna take that one?

00:26:38.225 --> 00:26:39.350
GREG SIMON: Yeah, go ahead.

00:26:39.350 --> 00:26:40.850
GRACE KLOBA: I will take
the first part, I think.

00:26:40.850 --> 00:26:42.770
I mean, I'm wearing
the watch, but there's

00:26:42.770 --> 00:26:45.680
no way I can use a
browser on this watch.

00:26:45.680 --> 00:26:47.810
So I think the
different devices,

00:26:47.810 --> 00:26:49.340
there's a different purpose.

00:26:49.340 --> 00:26:51.970
Watch is more of
collecting the data,

00:26:51.970 --> 00:26:54.670
and then also for
the notification.

00:26:54.670 --> 00:26:56.930
So for example,
our Service Worker

00:26:56.930 --> 00:26:59.330
is going to be able
to lie it aside,

00:26:59.330 --> 00:27:01.960
pushing the notification
to the watch, which

00:27:01.960 --> 00:27:06.037
is coming in the M40 frame.

00:27:06.037 --> 00:27:06.870
JAKE ARCHIBALD: M41?

00:27:06.870 --> 00:27:07.536
GRACE KLOBA: 41?

00:27:07.536 --> 00:27:08.630
OK.

00:27:08.630 --> 00:27:09.130
Sometimes.

00:27:09.130 --> 00:27:12.130
Yeah, push notification,
one is coming.

00:27:12.130 --> 00:27:15.450
So for the TV,
there's no browser,

00:27:15.450 --> 00:27:18.020
but there's another Chromecast,
which is old browser.

00:27:18.020 --> 00:27:20.480
All you get is a browser, right?

00:27:20.480 --> 00:27:24.410
GREG SIMON: Yeah, I don't
think of a measure of Chrome's

00:27:24.410 --> 00:27:27.790
success-- that actual
binaries on everything.

00:27:27.790 --> 00:27:29.900
I want to make sure
that you guys can

00:27:29.900 --> 00:27:31.516
reach all these devices.

00:27:31.516 --> 00:27:33.330
DARIN FISHER: And a
lot of these devices

00:27:33.330 --> 00:27:34.910
can be used in conjunction
with other devices.

00:27:34.910 --> 00:27:36.868
The watch is most certainly
a companion device.

00:27:39.750 --> 00:27:42.296
JAKE ARCHIBALD: So this is a
question coming from Twitter,

00:27:42.296 --> 00:27:45.940
and it uses words longer
than I'm normally used to.

00:27:45.940 --> 00:27:48.170
"How do you reconcile
philosophically

00:27:48.170 --> 00:27:51.240
with material design potentially
limiting the future of UX

00:27:51.240 --> 00:27:54.032
by becoming the de
facto root of it?"

00:27:54.032 --> 00:27:54.656
AUDIENCE: What?

00:27:54.656 --> 00:27:55.580
AUDIENCE: What?

00:27:55.580 --> 00:27:56.970
JAKE ARCHIBALD: Yeah.

00:27:56.970 --> 00:27:57.852
[LAUGHTER]

00:27:57.852 --> 00:27:59.100
AVNI SHAH: Really?

00:27:59.100 --> 00:28:00.937
JAKE ARCHIBALD: That
was a lot of words.

00:28:00.937 --> 00:28:02.520
DARIN FISHER: Can
you read that again?

00:28:02.520 --> 00:28:04.210
JAKE ARCHIBALD: No,
I don't think I can.

00:28:04.210 --> 00:28:06.440
I was so happy to
get through it once.

00:28:06.440 --> 00:28:09.290
OK, I think what
the question is is,

00:28:09.290 --> 00:28:12.830
if material design becomes the
standard for design of the web,

00:28:12.830 --> 00:28:16.740
are we losing
innovation in designs?

00:28:16.740 --> 00:28:19.700
AVNI SHAH: I think this came
up in the material design panel

00:28:19.700 --> 00:28:21.815
at the end, which I
luckily caught the end of.

00:28:21.815 --> 00:28:25.400
So I'll just repeat
what they said,

00:28:25.400 --> 00:28:28.140
which is that material
design provides

00:28:28.140 --> 00:28:31.440
a framework for building
your applications,

00:28:31.440 --> 00:28:34.022
but it doesn't necessarily
limit differentiation,

00:28:34.022 --> 00:28:36.480
and it doesn't limit what you
can do with your application.

00:28:36.480 --> 00:28:38.313
It's just trying to
give you building blocks

00:28:38.313 --> 00:28:41.630
and starter blocks for
building beautiful apps.

00:28:41.630 --> 00:28:45.360
So I think it's an
important toolkit,

00:28:45.360 --> 00:28:47.250
but no, it shouldn't
limit innovation.

00:28:47.250 --> 00:28:49.520
GREG SIMON: Yeah,
it's totally optional.

00:28:49.520 --> 00:28:51.140
And Polymer is totally optional.

00:28:51.140 --> 00:28:56.850
When you sit down in front
of Xcode for iOS or Eclipse

00:28:56.850 --> 00:28:59.130
for Java, you have a theme.

00:28:59.130 --> 00:29:01.980
You have some kind of opinion
of how things should look.

00:29:01.980 --> 00:29:04.730
So you can always choose
to go off and just draw

00:29:04.730 --> 00:29:08.800
your own stuff, but the
web doesn't have that.

00:29:08.800 --> 00:29:10.650
It's just white.

00:29:10.650 --> 00:29:14.000
And so this is a theme,
and it's something.

00:29:16.690 --> 00:29:18.180
JAKE ARCHIBALD:
So next question.

00:29:18.180 --> 00:29:20.310
"What is the future of Dart?

00:29:20.310 --> 00:29:21.906
It feels like it's
in a kind of limbo

00:29:21.906 --> 00:29:23.530
at the moment, which
may be putting off

00:29:23.530 --> 00:29:27.120
people who are looking
for something like it.

00:29:27.120 --> 00:29:29.961
Are there plans to add
the runtime to Chrome?"

00:29:29.961 --> 00:29:32.210
DARIN FISHER: So nothing new
to say about the runtime,

00:29:32.210 --> 00:29:34.610
but the Dart team is very
committed to Dart to JS.

00:29:34.610 --> 00:29:36.610
They're rolling out a
bunch of new enhancements,

00:29:36.610 --> 00:29:38.810
like incremental
compilation and so on.

00:29:38.810 --> 00:29:41.460
The Dartium project,
which is there

00:29:41.460 --> 00:29:44.160
for developers to have faster
turnaround for development,

00:29:44.160 --> 00:29:47.140
the Dart team is very
committed to helping

00:29:47.140 --> 00:29:50.280
make the Dart development
process great.

00:29:50.280 --> 00:29:54.170
So that's pretty much it.

00:29:54.170 --> 00:29:56.110
JAKE ARCHIBALD: And when
will Service Workers

00:29:56.110 --> 00:29:59.870
come to the WebView on Android?

00:29:59.870 --> 00:30:02.450
So when will native
apps be able to leverage

00:30:02.450 --> 00:30:04.740
the power of the Service
Worker within them?

00:30:04.740 --> 00:30:06.449
DARIN FISHER: Well,
we are working on it.

00:30:06.449 --> 00:30:08.198
GRACE KLOBA: Yeah,
that's definitely true.

00:30:08.198 --> 00:30:10.390
DARIN FISHER: And the
WebView does auto-update.

00:30:10.390 --> 00:30:12.070
Yesterday that got
a round of applause.

00:30:12.070 --> 00:30:14.185
[APPLAUSE]

00:30:14.185 --> 00:30:15.560
JAKE ARCHIBALD:
Are we just going

00:30:15.560 --> 00:30:17.310
to run for that for
the rest of the panel?

00:30:17.310 --> 00:30:20.327
We'll just keep saying,
WebView auto-updates.

00:30:20.327 --> 00:30:23.190
[APPLAUSE]

00:30:23.190 --> 00:30:25.465
The WebView-- oh, no, I'm
not going to do it again.

00:30:25.465 --> 00:30:27.090
It did actually occur
to me yesterday--

00:30:27.090 --> 00:30:30.100
well, when WebView did
start to auto-update,

00:30:30.100 --> 00:30:33.064
I was like, oh, well,
yeah, about time.

00:30:33.064 --> 00:30:35.480
But it's easy to forget that
it's still the first platform

00:30:35.480 --> 00:30:36.670
to do that.

00:30:36.670 --> 00:30:39.565
I don't think that there is any
mobile operating system that

00:30:39.565 --> 00:30:41.160
has an updating
internal WebView.

00:30:41.160 --> 00:30:42.660
GRACE KLOBA: Doesn't
iOS update [INAUDIBLE]?

00:30:42.660 --> 00:30:43.020
JAKE ARCHIBALD: iOS.

00:30:43.020 --> 00:30:44.960
But that's with the
operating system.

00:30:44.960 --> 00:30:47.790
Yeah, we already had that.

00:30:47.790 --> 00:30:49.974
GRACE KLOBA: Not at the
six weeks frequency.

00:30:49.974 --> 00:30:51.140
GREG SIMON: You are correct.

00:30:51.140 --> 00:30:53.720
Thank you.

00:30:53.720 --> 00:30:56.412
JAKE ARCHIBALD: So NPAPI.

00:30:56.412 --> 00:31:00.169
What are the latest plans
for the deprecation of that?

00:31:00.169 --> 00:31:01.210
RAHUL ROY-CHOWDHURY: Yes.

00:31:01.210 --> 00:31:05.260
So if folks have been
following along with our plans,

00:31:05.260 --> 00:31:07.490
we had, earlier in
the year, announced

00:31:07.490 --> 00:31:12.080
that we would stop supporting
NPAPI by default in Chrome

00:31:12.080 --> 00:31:13.930
by the end of this year.

00:31:13.930 --> 00:31:16.460
And in fact, we are actually
reviewing and looking

00:31:16.460 --> 00:31:18.670
at all the usage
data as we speak.

00:31:18.670 --> 00:31:21.697
And there will be a blog post
that goes out early next week.

00:31:21.697 --> 00:31:23.280
So if you're interested
in this topic,

00:31:23.280 --> 00:31:27.160
come and find me afterwards,
or look out for the blog post

00:31:27.160 --> 00:31:28.320
next week.

00:31:28.320 --> 00:31:31.960
But the quick summary is,
usage data is trending down,

00:31:31.960 --> 00:31:35.910
as often, [? PPAPI ?] plug-ins,
as we were hoping it would do.

00:31:35.910 --> 00:31:37.350
But I think that
we need a couple

00:31:37.350 --> 00:31:41.100
more months of enabling it
in Chrome just to make sure

00:31:41.100 --> 00:31:43.810
that the last few
developers are coming in hot

00:31:43.810 --> 00:31:45.540
are able to get their
changes in place.

00:31:45.540 --> 00:31:47.560
So it's looking
like we will keep it

00:31:47.560 --> 00:31:49.830
on for another few
months into 2015

00:31:49.830 --> 00:31:54.590
but then turn it off by
default in a couple of months

00:31:54.590 --> 00:31:56.660
after the end of the year.

00:31:56.660 --> 00:31:58.480
So that's basically
the one slight tweak

00:31:58.480 --> 00:32:00.142
to what we had
talked about earlier.

00:32:00.142 --> 00:32:02.600
JAKE ARCHIBALD: Chrome has its
own sort of internal version

00:32:02.600 --> 00:32:05.000
of the Flash player,
so removing NPAPI

00:32:05.000 --> 00:32:06.864
isn't going to stop Flash.

00:32:06.864 --> 00:32:07.530
Is that correct?

00:32:07.530 --> 00:32:07.820
RAHUL ROY CHOWDHURY:
That's correct.

00:32:07.820 --> 00:32:10.320
Flash is separate from
the NPAPI deprecation.

00:32:10.320 --> 00:32:12.970
GREG SIMON: Flash
works on Pepper API,

00:32:12.970 --> 00:32:14.820
which there's a
funny story about.

00:32:14.820 --> 00:32:17.260
You know that little
volume speaker icon

00:32:17.260 --> 00:32:19.980
that everyone was
so excited about?

00:32:19.980 --> 00:32:22.370
We can't do that with NPAPI.

00:32:22.370 --> 00:32:23.905
We need it.

00:32:23.905 --> 00:32:25.780
DARIN FISHER: Yeah,
because Pepper's actually

00:32:25.780 --> 00:32:27.670
a plug-in API that
can be sandboxed.

00:32:27.670 --> 00:32:29.690
It's also the basis
for Native Client.

00:32:29.690 --> 00:32:31.190
But because it's
sandboxed, it means

00:32:31.190 --> 00:32:33.970
we can actually know when
the thing is playing audio.

00:32:33.970 --> 00:32:35.720
JAKE ARCHIBALD: So
if we lose NPAPI,

00:32:35.720 --> 00:32:39.920
what is that in terms of
actual things on the web?

00:32:39.920 --> 00:32:41.771
What are people going
to see disappearing?

00:32:41.771 --> 00:32:42.270
Malware.

00:32:44.940 --> 00:32:45.560
Good answer.

00:32:45.560 --> 00:32:47.060
RAHUL ROY-CHOWDHURY:
Well, not much.

00:32:47.060 --> 00:32:50.050
I mean, we've seen the
trend down in usage.

00:32:50.050 --> 00:32:54.120
And typically speaking, people
have moved to the alternatives

00:32:54.120 --> 00:32:54.750
to NPAPI.

00:32:54.750 --> 00:32:57.062
If you're using NPAPI
plug-in, many people

00:32:57.062 --> 00:32:58.770
have moved to Native
Client, because they

00:32:58.770 --> 00:33:01.790
found that the Native Client
API's built on top of Pepper,

00:33:01.790 --> 00:33:05.820
PPAPI, gave them the
API surface they needed.

00:33:05.820 --> 00:33:07.570
In many cases, actually,
Chrome extensions

00:33:07.570 --> 00:33:10.420
that used NPAPI were
using it to communicate

00:33:10.420 --> 00:33:13.790
with a local executable,
like on Windows.

00:33:13.790 --> 00:33:17.060
Just, like, you can
imagine a messaging app

00:33:17.060 --> 00:33:20.970
that from a web page extension,
can launch a native executable

00:33:20.970 --> 00:33:22.940
to bring up the chat window.

00:33:22.940 --> 00:33:26.700
And so we introduced APIs in
the Chrome extension system

00:33:26.700 --> 00:33:28.662
to handle those
specific use cases.

00:33:28.662 --> 00:33:30.620
So for example, there's
a native messaging API.

00:33:30.620 --> 00:33:33.092
So if that is the only
reason you were using NPAPI,

00:33:33.092 --> 00:33:35.050
you could just move to
the native messaging API

00:33:35.050 --> 00:33:36.245
and you'd be fine.

00:33:36.245 --> 00:33:37.870
Over the course of
the year, developers

00:33:37.870 --> 00:33:39.944
have been sort of
gradually migrating, using

00:33:39.944 --> 00:33:41.360
all of these
different techniques.

00:33:41.360 --> 00:33:44.052
And there's an NPAPI
deprecation guide, as well.

00:33:44.052 --> 00:33:46.010
If you just search for
NPAPI Deprecation Guide,

00:33:46.010 --> 00:33:48.040
you'll see a link to
it, which explains

00:33:48.040 --> 00:33:51.139
all of the different
ways people can do this.

00:33:51.139 --> 00:33:52.680
GREG SIMON: There
are paths for this,

00:33:52.680 --> 00:33:55.430
which are even easier than
what you were doing before.

00:33:59.950 --> 00:34:03.290
We had a music company
that had an NPAPI

00:34:03.290 --> 00:34:06.510
plug-in to talk to
their guitar over USB.

00:34:06.510 --> 00:34:09.070
And then they just switched
to the chrome.usb API,

00:34:09.070 --> 00:34:09.820
which is easier.

00:34:09.820 --> 00:34:10.780
It's not C++ anymore.

00:34:10.780 --> 00:34:12.280
It's just JavaScript,
and it worked.

00:34:12.280 --> 00:34:13.905
RAHUL ROY-CHOWDHURY:
And WebRTC support

00:34:13.905 --> 00:34:15.855
has also helped a great deal.

00:34:15.855 --> 00:34:17.230
JAKE ARCHIBALD:
So beyond mobile,

00:34:17.230 --> 00:34:19.360
what do we see as
the next big thing?

00:34:19.360 --> 00:34:20.400
Is the desktop dead?

00:34:20.400 --> 00:34:23.770
Are we just concentrating
fully on mobile now?

00:34:23.770 --> 00:34:26.420
AVNI SHAH: The
desktop isn't dead.

00:34:26.420 --> 00:34:30.210
On Chrome alone, we have
more than 750 million users

00:34:30.210 --> 00:34:30.790
on desktop.

00:34:30.790 --> 00:34:32.165
And that was a
stat we announced,

00:34:32.165 --> 00:34:36.350
what, like 18 months ago,
so I'll leave that there.

00:34:36.350 --> 00:34:38.750
But it's not where
the growth is.

00:34:38.750 --> 00:34:40.690
I think Andreessen
Horowitz just released

00:34:40.690 --> 00:34:43.860
this slide deck in the
last couple of weeks that

00:34:43.860 --> 00:34:46.880
showed the next billion
users to come online

00:34:46.880 --> 00:34:49.457
are all going to come
online with smartphones.

00:34:49.457 --> 00:34:51.040
And what's interesting
is that they're

00:34:51.040 --> 00:34:52.060
going to come online
with smartphones,

00:34:52.060 --> 00:34:54.210
and that's going to
be their only device.

00:34:54.210 --> 00:34:57.670
It's going to be their first
interaction with the internet,

00:34:57.670 --> 00:35:00.160
where for many of us and
for the developed markets,

00:35:00.160 --> 00:35:03.330
the smartphone is
second to the desktop.

00:35:03.330 --> 00:35:06.190
So that's going to be an
interesting trend, I think.

00:35:06.190 --> 00:35:08.650
This is going to be
people's first interaction

00:35:08.650 --> 00:35:11.897
with the internet and the
web on a smartphone device.

00:35:11.897 --> 00:35:14.230
And what's also interesting
is a lot of these users that

00:35:14.230 --> 00:35:16.980
are coming online are coming
online in emerging markets

00:35:16.980 --> 00:35:18.910
where things look
very different.

00:35:18.910 --> 00:35:22.310
There's flaky connectivity,
or low bandwidth,

00:35:22.310 --> 00:35:24.440
or high data costs.

00:35:24.440 --> 00:35:26.470
Phones are not
necessarily as powerful.

00:35:26.470 --> 00:35:28.420
And so we have to think
about, what should we

00:35:28.420 --> 00:35:30.211
do with the platform
in the user experience

00:35:30.211 --> 00:35:32.960
to actually make it a
really good experience

00:35:32.960 --> 00:35:35.117
for those users?

00:35:35.117 --> 00:35:37.450
And another trend we're already
seeing that I'll mention

00:35:37.450 --> 00:35:39.880
is just the cross-device trend.

00:35:39.880 --> 00:35:42.900
So people are using
multiple devices-- well,

00:35:42.900 --> 00:35:45.117
at least here in
developed markets.

00:35:45.117 --> 00:35:47.200
But also, if you think
about the emerging markets,

00:35:47.200 --> 00:35:48.574
they'll start with
the smartphone

00:35:48.574 --> 00:35:51.470
and probably extend to
other devices over time.

00:35:51.470 --> 00:35:54.460
And so how can we make
that experience better?

00:35:54.460 --> 00:35:57.140
And Chrome is in an interesting
position to do that,

00:35:57.140 --> 00:35:59.090
because it crosses
all of these platforms

00:35:59.090 --> 00:36:02.500
and can actually help with that.

00:36:02.500 --> 00:36:05.160
JAKE ARCHIBALD: So HTTPS
is really important,

00:36:05.160 --> 00:36:08.460
but developers still find
it hard and expensive.

00:36:08.460 --> 00:36:11.639
And Mozilla are launching their
own certificate of authority.

00:36:11.639 --> 00:36:12.930
What's Google and Chrome doing?

00:36:15.990 --> 00:36:17.510
There's your answer, everyone.

00:36:17.510 --> 00:36:19.370
[LAUGHTER]

00:36:22.170 --> 00:36:25.327
DARIN FISHER: No, but I
mean, as you heard yesterday,

00:36:25.327 --> 00:36:27.410
we're doing a lot to try
to help people understand

00:36:27.410 --> 00:36:29.924
how to HTTPS-enable their sites.

00:36:29.924 --> 00:36:31.340
And there's just
so many benefits.

00:36:31.340 --> 00:36:33.030
And actually, while
it's challenging,

00:36:33.030 --> 00:36:34.800
it's not as hard
as it used to be.

00:36:34.800 --> 00:36:37.130
There's a lot of resources
out there to help

00:36:37.130 --> 00:36:39.940
and a lot of
benefits, definitely

00:36:39.940 --> 00:36:41.340
a lot of user benefits.

00:36:41.340 --> 00:36:44.730
So basically, our biggest
effort, I would say,

00:36:44.730 --> 00:36:48.320
is getting the word out and
helping people understand it.

00:36:48.320 --> 00:36:51.000
JAKE ARCHIBALD:
And we're now-- one

00:36:51.000 --> 00:36:54.960
of the incentives we've got is
if a site is served securely,

00:36:54.960 --> 00:36:57.330
that's part of our
search ranking now.

00:36:57.330 --> 00:36:59.250
DARIN FISHER: Oh,
yes, good point.

00:36:59.250 --> 00:37:04.230
Actually, yes, that's correct.

00:37:04.230 --> 00:37:05.420
What else is there to say?

00:37:05.420 --> 00:37:07.559
JAKE ARCHIBALD: I'm
receiving live information

00:37:07.559 --> 00:37:09.350
from the people who
have been running that,

00:37:09.350 --> 00:37:12.440
just to say that the Mozilla
certificate of authority,

00:37:12.440 --> 00:37:15.497
because that's
cross-signed by IdenTrust,

00:37:15.497 --> 00:37:17.580
then Chrome is going to
be supporting their certs,

00:37:17.580 --> 00:37:19.010
as well, which is pretty good.

00:37:19.010 --> 00:37:20.490
They pasted that three
times into the Docs,

00:37:20.490 --> 00:37:22.656
so I presume it was very
important that I said that.

00:37:22.656 --> 00:37:25.070
So thank you, guys.

00:37:25.070 --> 00:37:28.600
So cross-browser HTML5
video codec support.

00:37:28.600 --> 00:37:31.740
It's been in a pretty
messy state for a while.

00:37:31.740 --> 00:37:35.550
Are there any plans to
help standardize this?

00:37:35.550 --> 00:37:37.272
Why didn't we turn
off [INAUDIBLE]

00:37:37.272 --> 00:37:38.730
since we've got
our own format now?

00:37:38.730 --> 00:37:41.021
DARIN FISHER: Things are
definitely messy in the space.

00:37:41.021 --> 00:37:42.430
And that's definitely true.

00:37:42.430 --> 00:37:45.900
I think our approach has
been through the efforts

00:37:45.900 --> 00:37:52.810
with VP8 and VP9 to try to
push forward, open codecs that

00:37:52.810 --> 00:37:56.050
offer benefits and
make things better.

00:37:56.050 --> 00:38:00.690
We've been working closely
with YouTube to actually have,

00:38:00.690 --> 00:38:03.060
like, full-circle experience
here where YouTube

00:38:03.060 --> 00:38:06.940
is serving up and seeing
great benefits from using VP9.

00:38:06.940 --> 00:38:07.980
It's very exciting.

00:38:07.980 --> 00:38:10.320
But from the browser's
point of view,

00:38:10.320 --> 00:38:12.560
we're in the reality
where we have

00:38:12.560 --> 00:38:15.680
to support both the
new and the old.

00:38:15.680 --> 00:38:18.350
And then on the WebRTC side,
it's very interesting, as well.

00:38:18.350 --> 00:38:20.580
This has been challenging, too.

00:38:20.580 --> 00:38:24.310
There, it's exciting, because--
well, it's interesting.

00:38:24.310 --> 00:38:27.840
At the latest IETF
Conference, they just

00:38:27.840 --> 00:38:31.120
made an agreement that a
standard WebRTC implementation,

00:38:31.120 --> 00:38:35.470
which support both
VP8 and H.264.

00:38:35.470 --> 00:38:38.320
JAKE ARCHIBALD: So this
next question is rubbish,

00:38:38.320 --> 00:38:41.970
but it was asked by the
organizer of this conference,

00:38:41.970 --> 00:38:45.370
Paul Kinlan, so I
feel that I have to.

00:38:45.370 --> 00:38:46.099
Here we go.

00:38:46.099 --> 00:38:47.640
DARIN FISHER: Trying
to make friends.

00:38:47.640 --> 00:38:50.210
JAKE ARCHIBALD: I can't even
read it with enthusiasm.

00:38:50.210 --> 00:38:54.576
What are the top three
priorities for Chrome?

00:38:54.576 --> 00:38:56.360
Not two, not four.

00:38:56.360 --> 00:38:58.385
Give me arbitrarily
the top three.

00:39:03.270 --> 00:39:05.796
RAHUL ROY-CHOWDHURY: All
right, I can take a stab at it.

00:39:05.796 --> 00:39:07.670
Even though it is Paul
Kinlan, should we even

00:39:07.670 --> 00:39:10.800
answer the question?

00:39:10.800 --> 00:39:15.080
So the top one is the theme
of the conference-- making

00:39:15.080 --> 00:39:16.860
the web platform
great on mobile.

00:39:16.860 --> 00:39:18.360
You heard about all
the things we're

00:39:18.360 --> 00:39:22.400
working on to that end--
performance, capabilities.

00:39:22.400 --> 00:39:28.100
And so that is a core
priority for us for 2015.

00:39:28.100 --> 00:39:32.170
The second is to make the user
experience on mobile devices

00:39:32.170 --> 00:39:34.900
better, and
specifically, to blur

00:39:34.900 --> 00:39:38.690
the seams between the world of
apps and the world of the web.

00:39:38.690 --> 00:39:40.470
And yesterday, you
saw some examples

00:39:40.470 --> 00:39:43.300
of that with the Recents
menu in Android L,

00:39:43.300 --> 00:39:46.980
where there's a single place
to go back to open Chrome tabs,

00:39:46.980 --> 00:39:48.230
as well as open applications.

00:39:48.230 --> 00:39:51.610
So users don't have to deal
with the complexity of,

00:39:51.610 --> 00:39:53.550
did I open that
thing in a browser,

00:39:53.550 --> 00:39:55.050
or was it a native application?

00:39:55.050 --> 00:39:58.002
And so that complexity
is taken away.

00:39:58.002 --> 00:39:59.460
And so there's much
more work to be

00:39:59.460 --> 00:40:02.170
done to make that user
experience seamless.

00:40:02.170 --> 00:40:03.890
It's a big focus for us.

00:40:03.890 --> 00:40:05.920
And I would say
the third thing--

00:40:05.920 --> 00:40:08.504
I guess just because we
have a hard limit of three?

00:40:08.504 --> 00:40:10.170
JAKE ARCHIBALD: Yep,
no more than three.

00:40:10.170 --> 00:40:12.544
RAHUL ROY-CHOWDHURY: Is Chrome
has some core principles--

00:40:12.544 --> 00:40:14.270
speed, simplicity, security.

00:40:14.270 --> 00:40:16.020
They were the
principles we launched

00:40:16.020 --> 00:40:18.994
with from the first
version of Chrome.

00:40:18.994 --> 00:40:20.660
And so everything we
do, we want to make

00:40:20.660 --> 00:40:22.243
sure we stay true
to those principles.

00:40:22.243 --> 00:40:24.970
And so that is just
underlying everything we do.

00:40:24.970 --> 00:40:26.940
Speed, simplicity,
security will always

00:40:26.940 --> 00:40:28.760
be a big priority for us.

00:40:28.760 --> 00:40:31.010
JAKE ARCHIBALD: I think it's
probably within the rules

00:40:31.010 --> 00:40:34.030
to say that you can have three
each if anyone's got any more.

00:40:34.030 --> 00:40:38.710
But if you do one, you are
duty-bound to do two more,

00:40:38.710 --> 00:40:40.632
because that's the rule.

00:40:40.632 --> 00:40:45.542
[LAUGHS] What are the bottom
three priorities for Chrome?

00:40:45.542 --> 00:40:48.022
[LAUGHTER]

00:40:48.022 --> 00:40:51.500
DARIN FISHER: I think it would
make people sad if we say them.

00:40:51.500 --> 00:40:53.704
GREG SIMON: Well, what
are we [? deprecating? ?]

00:40:53.704 --> 00:40:54.870
JAKE ARCHIBALD: Chrome apps.

00:40:54.870 --> 00:40:56.161
DARIN FISHER: Wait, wait, wait.

00:40:56.161 --> 00:40:58.100
So there's Intend to Removes.

00:40:58.100 --> 00:41:00.490
There's some Intend to Remove
threads on blink-dev that

00:41:00.490 --> 00:41:02.670
can tell you what
we're trying to kill.

00:41:02.670 --> 00:41:04.850
RAHUL ROY-CHOWDHURY:
Supporting NPAPI forever

00:41:04.850 --> 00:41:07.606
is not a high
priority for the team.

00:41:07.606 --> 00:41:08.480
JAKE ARCHIBALD: XSLT.

00:41:08.480 --> 00:41:10.480
I guess we're trying to
move to get rid of that.

00:41:13.520 --> 00:41:16.480
DARIN FISHER: That actually
gets some people upset.

00:41:16.480 --> 00:41:19.340
JAKE ARCHIBALD: I went on
an XSLT training course

00:41:19.340 --> 00:41:20.590
when I first left university.

00:41:20.590 --> 00:41:23.090
I want that to die.

00:41:23.090 --> 00:41:25.300
I want to kill it for
just a horrible week

00:41:25.300 --> 00:41:26.690
of training I went through.

00:41:26.690 --> 00:41:29.250
And then it didn't help
my life at all since then.

00:41:29.250 --> 00:41:33.210
GREG SIMON: We've been having a
very lively debate on blink-dev

00:41:33.210 --> 00:41:36.160
about some people that want to
take it out and make it some

00:41:36.160 --> 00:41:40.214
sort of thing that downloads
later, and then-- but that--

00:41:40.214 --> 00:41:41.880
JAKE ARCHIBALD: Yeah,
we should do that.

00:41:41.880 --> 00:41:43.880
I think that's just from
a dark time of the web,

00:41:43.880 --> 00:41:46.880
where I think that the way the
web was created at that point

00:41:46.880 --> 00:41:50.520
was it was just a load of
old men with beards sitting

00:41:50.520 --> 00:41:51.580
in a tepee.

00:41:51.580 --> 00:41:54.590
And someone would go, we
need a way to transform XML.

00:41:54.590 --> 00:41:58.720
And one of them would
go, we'll do it in XML.

00:41:58.720 --> 00:42:02.220
[LAUGHTER]

00:42:02.720 --> 00:42:04.100
So Chrome apps in APIs.

00:42:07.500 --> 00:42:09.910
Chrome apps in APIs has
a credibility problem

00:42:09.910 --> 00:42:13.500
since-- sorry. [LAUGHS]

00:42:13.500 --> 00:42:15.460
[APPLAUSE]

00:42:15.460 --> 00:42:17.920
Oh, my god.

00:42:17.920 --> 00:42:19.840
I'm so jet-lagged.

00:42:19.840 --> 00:42:21.770
Chrome apps in APIs has
a credibility problem

00:42:21.770 --> 00:42:24.250
since few Google properties
actually use them

00:42:24.250 --> 00:42:27.080
even for no-brainers like
notification support.

00:42:27.080 --> 00:42:30.654
Are we in for the long
haul with Chrome apps?

00:42:30.654 --> 00:42:32.070
RAHUL ROY-CHOWDHURY:
Yeah, we are.

00:42:32.070 --> 00:42:33.820
So there are a couple
of Google properties

00:42:33.820 --> 00:42:37.520
that have built great Chrome
app experiences-- Play Movies,

00:42:37.520 --> 00:42:40.560
for example, and Play Music.

00:42:40.560 --> 00:42:44.677
Unlike many other
sort of platforms,

00:42:44.677 --> 00:42:47.010
the Chrome app platform is
really the native development

00:42:47.010 --> 00:42:49.000
platform for Chrome OS.

00:42:49.000 --> 00:42:51.850
And so Chrome OS has been
doing great, particularly

00:42:51.850 --> 00:42:54.280
in Enterprise and EDU markets.

00:42:54.280 --> 00:42:56.670
And so if that's an interesting
segment for developers

00:42:56.670 --> 00:42:58.192
or for any of you
to target, I think

00:42:58.192 --> 00:42:59.650
you should look at
whether a Chrome

00:42:59.650 --> 00:43:01.770
app is the right choice for you.

00:43:01.770 --> 00:43:04.380
The other thing I'll
mention is, we love the web.

00:43:04.380 --> 00:43:05.590
Chrome OS loves the web.

00:43:05.590 --> 00:43:09.260
And so Chrome apps was not
meant to be a place where

00:43:09.260 --> 00:43:11.920
you would build an application
if it could work well

00:43:11.920 --> 00:43:12.880
on the web.

00:43:12.880 --> 00:43:17.764
It is meant to be a place where
you needed to do something that

00:43:17.764 --> 00:43:19.680
wasn't available at the
web maybe at the time,

00:43:19.680 --> 00:43:22.370
or maybe the security
model wasn't exactly right.

00:43:22.370 --> 00:43:24.430
An example of this
is Chrome apps

00:43:24.430 --> 00:43:26.660
has had a Bluetooth
API for a while.

00:43:26.660 --> 00:43:29.130
So if you need a
Bluetooth access

00:43:29.130 --> 00:43:32.560
and you're targeting
Chromebook devices,

00:43:32.560 --> 00:43:34.635
that was really the only
way you could do it.

00:43:34.635 --> 00:43:36.760
We're working on bringing
that same API to the web.

00:43:36.760 --> 00:43:39.210
You heard discussions
about that earlier.

00:43:39.210 --> 00:43:41.410
But it takes a while to
understand the security

00:43:41.410 --> 00:43:43.760
model and the
implications of it.

00:43:43.760 --> 00:43:45.990
But Chrome apps
are here to stay.

00:43:45.990 --> 00:43:50.090
Chrome OS is something
we're very committed to.

00:43:50.090 --> 00:43:53.340
And this is the native
platform for Chromebooks.

00:43:53.340 --> 00:43:54.840
JAKE ARCHIBALD: So
we're approaching

00:43:54.840 --> 00:43:56.080
the end of the set
of questions we have.

00:43:56.080 --> 00:43:57.200
We've only got a
couple more left.

00:43:57.200 --> 00:43:59.140
So yes, if we have
questions from the audience,

00:43:59.140 --> 00:43:59.880
we will take them.

00:43:59.880 --> 00:44:01.230
If there's any
answers you've been

00:44:01.230 --> 00:44:03.438
unhappy with that you want
to pressure these guys for

00:44:03.438 --> 00:44:05.055
or anything, that's OK.

00:44:05.055 --> 00:44:06.774
Please don't fire me.

00:44:06.774 --> 00:44:08.440
We'll go to the
audience for a question.

00:44:08.440 --> 00:44:10.356
AUDIENCE: Yeah, can I
follow up that question?

00:44:10.356 --> 00:44:13.600
Once there is permissions,
Service Workers, manifests,

00:44:13.600 --> 00:44:16.480
and all that, is there still
a future for Chrome apps?

00:44:20.200 --> 00:44:24.220
RAHUL ROY-CHOWDHURY: I think
the line we want to make

00:44:24.220 --> 00:44:28.450
is that if things work well on
the web, even for Chromebooks,

00:44:28.450 --> 00:44:29.700
we'd like it to be on the web.

00:44:29.700 --> 00:44:33.590
I think the web is the right
experience for all the reasons

00:44:33.590 --> 00:44:35.690
we talked about over
the last couple of days.

00:44:35.690 --> 00:44:39.840
There may be some cases in which
having your UI, for example,

00:44:39.840 --> 00:44:42.660
being a browser tab is
not the right experience.

00:44:42.660 --> 00:44:45.090
Maybe there's an API that's
not available on the web.

00:44:45.090 --> 00:44:48.050
Maybe the packaging model
is superior, just based

00:44:48.050 --> 00:44:50.820
on what you've done in
the past, your skill set.

00:44:50.820 --> 00:44:52.660
For those reasons,
a Chrome app may

00:44:52.660 --> 00:44:54.570
be the right choice for you.

00:44:54.570 --> 00:44:57.520
And so we will continue
to support Chrome apps,

00:44:57.520 --> 00:45:01.600
and we'll continue to make
sure that Chrome OS always

00:45:01.600 --> 00:45:06.802
has a native platform that
developers can target.

00:45:06.802 --> 00:45:08.260
Imagine in the
future, for example,

00:45:08.260 --> 00:45:11.580
that there's a new Chromebook
device that has a new sensor,

00:45:11.580 --> 00:45:13.880
for example, and you
want to understand

00:45:13.880 --> 00:45:16.104
how to get data
from that sensor.

00:45:16.104 --> 00:45:17.520
Chrome apps will
always be the way

00:45:17.520 --> 00:45:20.720
you can target all of the
capabilities of those devices,

00:45:20.720 --> 00:45:24.586
whereas on the web, it may take
a while to get to that point.

00:45:24.586 --> 00:45:26.960
GREG SIMON: Yes, but it should
be much faster on the web.

00:45:26.960 --> 00:45:28.800
And we're trying to
do that with things

00:45:28.800 --> 00:45:31.010
like Navigator Connect
and permissions.

00:45:31.010 --> 00:45:32.930
But totally, I agree.

00:45:32.930 --> 00:45:35.180
JAKE ARCHIBALD: I suppose
that things like Chrome apps

00:45:35.180 --> 00:45:37.221
become a good sort of
testing ground, don't they?

00:45:37.221 --> 00:45:41.470
For not only how an API
for a particular thing,

00:45:41.470 --> 00:45:43.940
maybe say Bluetooth,
how that would look.

00:45:43.940 --> 00:45:46.500
But it's also a good test to
see how much usage it gets.

00:45:46.500 --> 00:45:48.520
That's good feedback
for us to see

00:45:48.520 --> 00:45:51.130
what should be pushing
to the web platform.

00:45:51.130 --> 00:45:51.890
RAHUL ROY-CHOWDHURY:
Yeah, not only usage,

00:45:51.890 --> 00:45:53.370
but also just the
technical challenges

00:45:53.370 --> 00:45:54.540
that the Chrome
Apps team has faced

00:45:54.540 --> 00:45:56.373
is really informing a
lot of the work that's

00:45:56.373 --> 00:45:59.462
happening with
Service Worker and all

00:45:59.462 --> 00:46:02.506
of these new APIs coming
to the web, as well.

00:46:02.506 --> 00:46:03.880
DARIN FISHER:
Interestingly, some

00:46:03.880 --> 00:46:05.960
of the same people who've
worked on Chrome apps

00:46:05.960 --> 00:46:07.376
and who are working
on Chrome apps

00:46:07.376 --> 00:46:10.890
are also contributing
APIs, like Bluetooth,

00:46:10.890 --> 00:46:13.950
and like Push
notifications, and things

00:46:13.950 --> 00:46:15.680
built around Service
Worker, because this

00:46:15.680 --> 00:46:17.560
is a space that they've
been thinking about,

00:46:17.560 --> 00:46:20.050
understanding in the
context of Chrome apps.

00:46:20.050 --> 00:46:22.550
But they can also apply that
understanding and experience

00:46:22.550 --> 00:46:23.270
to the open web.

00:46:23.270 --> 00:46:24.686
And we're very
excited about that.

00:46:24.686 --> 00:46:29.890
I think that, to me, Chrome
App serves this distinct place

00:46:29.890 --> 00:46:31.880
that's been this place
where, like Rahul said,

00:46:31.880 --> 00:46:35.150
we've been able to put
out features quickly.

00:46:35.150 --> 00:46:36.690
And in the context
of Chrome apps,

00:46:36.690 --> 00:46:39.430
the security model's different.

00:46:39.430 --> 00:46:44.342
It allows for just these sort
of things to work simply.

00:46:44.342 --> 00:46:45.800
But we are very
committed to trying

00:46:45.800 --> 00:46:48.550
to find ways to bring a lot of
this functionality to open web

00:46:48.550 --> 00:46:50.000
to allow people
to take advantage

00:46:50.000 --> 00:46:51.960
of device capabilities
and so on.

00:46:51.960 --> 00:46:54.460
JAKE ARCHIBALD: So are there
particular plans to standardize

00:46:54.460 --> 00:46:58.380
things like Chrome.serial,
chrome.bluetoothLowEnergy,

00:46:58.380 --> 00:47:00.820
.usb storage, the rich
notification stuff?

00:47:00.820 --> 00:47:04.000
DARIN FISHER: I think we're
taking these gradually

00:47:04.000 --> 00:47:04.840
and thoughtfully.

00:47:04.840 --> 00:47:06.340
RAHUL ROY-CHOWDHURY:
I think I heard

00:47:06.340 --> 00:47:09.340
Mike put it well
earlier, when he said,

00:47:09.340 --> 00:47:12.940
Bluetooth is one of the
hairiest ones to get right.

00:47:12.940 --> 00:47:14.740
If you can get that
right, the other things

00:47:14.740 --> 00:47:16.115
will kind of fall
out, and you'll

00:47:16.115 --> 00:47:17.716
find a pattern
that you can reuse.

00:47:17.716 --> 00:47:19.840
So Bluetooth is the one
we're working on currently.

00:47:19.840 --> 00:47:22.090
JAKE ARCHIBALD: I've seen
some really interesting work

00:47:22.090 --> 00:47:28.040
by Scott Jensen, who's
been looking at Beacons.

00:47:28.040 --> 00:47:29.920
Thank you.

00:47:29.920 --> 00:47:34.020
But where they just
transmit a URL.

00:47:34.020 --> 00:47:36.170
And there, it becomes
suddenly as, oh, hang on,

00:47:36.170 --> 00:47:38.060
there's lots we can
do with just that.

00:47:38.060 --> 00:47:40.220
We can roll that into
the web if we have some--

00:47:40.220 --> 00:47:41.210
DARIN FISHER: I'm
actually very excited

00:47:41.210 --> 00:47:42.910
about the connection
between these two topics

00:47:42.910 --> 00:47:44.243
that we were just talking about.

00:47:44.243 --> 00:47:49.150
Like, for example, if you had
that URL pointing to a website,

00:47:49.150 --> 00:47:51.210
who, actually, that
website knew how

00:47:51.210 --> 00:47:55.690
to use this future
Bluetooth API to talk back

00:47:55.690 --> 00:47:57.685
to the physical
device, you can start

00:47:57.685 --> 00:47:59.780
to imagine some
possibilities here.

00:47:59.780 --> 00:48:02.120
The ephemeral nature of
URLs and such is awesome.

00:48:02.120 --> 00:48:03.822
The idea that you
just walk into a room

00:48:03.822 --> 00:48:06.560
and you find out that there's
some URLs you can load

00:48:06.560 --> 00:48:08.864
to now interact with some
actual physical objects,

00:48:08.864 --> 00:48:10.280
and that the
interaction with them

00:48:10.280 --> 00:48:12.930
can be actually really rich,
because you can actually

00:48:12.930 --> 00:48:15.260
make more direct
device connections that

00:48:15.260 --> 00:48:19.480
are accustomed to that device,
using things like Bluetooth

00:48:19.480 --> 00:48:23.320
or other device APIs that
we might bring support

00:48:23.320 --> 00:48:24.000
in the future.

00:48:24.000 --> 00:48:25.416
JAKE ARCHIBALD:
We've already been

00:48:25.416 --> 00:48:29.190
bouncing around crazy ideas,
like if a website can register

00:48:29.190 --> 00:48:33.410
to be background-aware
of these Beacon URLs

00:48:33.410 --> 00:48:36.535
for a particular origin or
start with a particular path,

00:48:36.535 --> 00:48:38.410
then you would walk near
one of these things,

00:48:38.410 --> 00:48:39.330
and it could spin
up a Service Worker.

00:48:39.330 --> 00:48:41.509
And it could fire an event
in that Service Worker.

00:48:41.509 --> 00:48:43.050
And you can then do
what you want, do

00:48:43.050 --> 00:48:44.633
some caching, short
notification, just

00:48:44.633 --> 00:48:45.885
all with the open web.

00:48:45.885 --> 00:48:47.510
DARIN FISHER: In
fact, this whole model

00:48:47.510 --> 00:48:49.730
I'm excited about, because it
can help solve some security

00:48:49.730 --> 00:48:51.105
problems, because
the interaction

00:48:51.105 --> 00:48:52.080
model is very precise.

00:48:52.080 --> 00:48:54.038
A user is interacting
with a particular device,

00:48:54.038 --> 00:48:58.030
and therefore, some hard
problems get solved.

00:48:58.030 --> 00:49:00.160
JAKE ARCHIBALD: This is a
nice question to end on.

00:49:00.160 --> 00:49:04.450
How do we see Chrome coexisting
with platforms like Android

00:49:04.450 --> 00:49:07.342
in the next five years?

00:49:07.342 --> 00:49:08.744
AVNI SHAH: Oh, sure.

00:49:08.744 --> 00:49:11.410
I guess I'll start by saying, if
I could predict five years out,

00:49:11.410 --> 00:49:13.447
I'd be lying, because
things change a lot.

00:49:13.447 --> 00:49:15.030
DARIN FISHER: Or
you'd be really rich.

00:49:15.030 --> 00:49:16.055
AVNI SHAH: Yeah, or I'd be
really rich, one of the two,

00:49:16.055 --> 00:49:17.580
and I wouldn't be here.

00:49:17.580 --> 00:49:18.110
Um.

00:49:18.110 --> 00:49:19.884
[LAUGHTER]

00:49:19.884 --> 00:49:20.880
JAKE ARCHIBALD: What?

00:49:20.880 --> 00:49:20.980
GREG SIMON: What?

00:49:20.980 --> 00:49:22.188
AVNI SHAH: I didn't say that.

00:49:22.188 --> 00:49:23.094
Don't fire me.

00:49:23.094 --> 00:49:25.510
Um.

00:49:25.510 --> 00:49:27.070
A lot changes in five years.

00:49:27.070 --> 00:49:30.217
Five years ago, Chrome
was only a year old.

00:49:30.217 --> 00:49:31.550
Chrome for Android didn't exist.

00:49:31.550 --> 00:49:34.080
Chrome for iOS didn't exist.

00:49:34.080 --> 00:49:37.040
I mean, the world changes
a lot in five years,

00:49:37.040 --> 00:49:40.700
so trying to predict five
years out is near impossible,

00:49:40.700 --> 00:49:42.990
especially at the rate of
change that we're seeing.

00:49:42.990 --> 00:49:46.940
But I think, given
that, we're going

00:49:46.940 --> 00:49:51.229
to continue to make the web on
mobile a really good platform

00:49:51.229 --> 00:49:53.270
for developers, like, make
it a great way for you

00:49:53.270 --> 00:49:54.978
to reach users, improve
the capabilities,

00:49:54.978 --> 00:49:56.890
improve the performance.

00:49:56.890 --> 00:49:58.360
I don't think this
is necessarily

00:49:58.360 --> 00:50:02.850
like a zero-sum game
between native and web.

00:50:02.850 --> 00:50:05.900
I think both are really
strong platforms.

00:50:05.900 --> 00:50:08.750
And as developers, you're going
to choose what's right for you,

00:50:08.750 --> 00:50:11.470
and I think they're going
to coexist for a while.

00:50:11.470 --> 00:50:12.070
Five years?

00:50:12.070 --> 00:50:12.689
I don't know.

00:50:12.689 --> 00:50:13.230
I don't know.

00:50:13.230 --> 00:50:15.360
Maybe-- I don't
know-- spaceships

00:50:15.360 --> 00:50:16.950
will be landing over here.

00:50:16.950 --> 00:50:17.860
I don't know what's
going to happen.

00:50:17.860 --> 00:50:19.320
JAKE ARCHIBALD: And they'll have
web browsers installed on them.

00:50:19.320 --> 00:50:19.890
Yep.

00:50:19.890 --> 00:50:22.560
AVNI SHAH: Yeah, of
course they will.

00:50:22.560 --> 00:50:23.060
Yeah.

00:50:24.725 --> 00:50:27.100
JAKE ARCHIBALD: We'll go to
a question from the audience.

00:50:27.100 --> 00:50:29.760
AUDIENCE: Just a
closing question.

00:50:29.760 --> 00:50:33.090
Is there going to be a place
where we can see the slide

00:50:33.090 --> 00:50:34.520
decks, and the
videos, and stuff?

00:50:34.520 --> 00:50:36.560
Is that going to be
made available for this?

00:50:36.560 --> 00:50:38.750
JAKE ARCHIBALD: Did a
member of the Google team

00:50:38.750 --> 00:50:40.250
give you that question?

00:50:40.250 --> 00:50:40.860
That's great.

00:50:40.860 --> 00:50:42.940
Well, one of the
fantastic things, I think,

00:50:42.940 --> 00:50:47.640
is that up on YouTube now,
the videos from yesterday have

00:50:47.640 --> 00:50:50.620
already been edited and
put up as separate things

00:50:50.620 --> 00:50:52.760
to watch, which is brilliant.

00:50:52.760 --> 00:50:55.740
The same will happen with
today's sessions very soon.

00:50:55.740 --> 00:50:57.900
And we'll make sure
that the slide decks

00:50:57.900 --> 00:50:59.985
are linked from there, as well.

00:50:59.985 --> 00:51:01.650
DARIN FISHER: This session, too?

00:51:01.650 --> 00:51:03.144
JAKE ARCHIBALD: Yeah, afraid so.

00:51:03.144 --> 00:51:03.685
And captions.

00:51:03.685 --> 00:51:06.778
So it will be searchable.

00:51:06.778 --> 00:51:09.404
They might cut out
the odd bit of mine.

00:51:09.404 --> 00:51:14.110
[LAUGHS] I think if we make
the same kind of progress

00:51:14.110 --> 00:51:17.430
that we've made in the past five
years in the next five years,

00:51:17.430 --> 00:51:19.820
then the future's looking
pretty bright, right?

00:51:19.820 --> 00:51:20.290
RAHUL ROY-CHOWDHURY: Yeah.

00:51:20.290 --> 00:51:20.760
DARIN FISHER: Yeah.

00:51:20.760 --> 00:51:21.230
AVNI SHAH: Yeah.

00:51:21.230 --> 00:51:21.370
JAKE ARCHIBALD: Cool.

00:51:21.370 --> 00:51:23.710
Well, that seems like a
great place to end it.

00:51:23.710 --> 00:51:25.670
A huge thanks to the
leadership panel.

00:51:25.670 --> 00:51:27.770
[APPLAUSE]

00:56:38.270 --> 00:56:41.620
[APPLAUSE]

