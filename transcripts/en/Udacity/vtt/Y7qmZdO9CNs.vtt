WEBVTT
Kind: captions
Language: en

00:00:00.370 --> 00:00:03.550
Every Lego kit comes with a booklet
that's used to create the model

00:00:03.550 --> 00:00:05.930
on the cover, but it's just a guide.

00:00:05.930 --> 00:00:08.220
If you want to create the model
with a different look,

00:00:08.220 --> 00:00:10.610
then you'd choose
differently colored pieces.

00:00:10.610 --> 00:00:14.640
So this booklet is a template to
create the model with a specific look.

00:00:14.640 --> 00:00:16.820
Let's see how templates work in Angular.

00:00:16.820 --> 00:00:20.120
Get ready because it's
kind of complicated.

00:00:20.120 --> 00:00:21.720
&gt;&gt; Yep, that's it.

00:00:21.720 --> 00:00:24.300
Just plain old regular HTML.

00:00:24.300 --> 00:00:26.260
There isn't any fancy
templating language or

00:00:26.260 --> 00:00:28.070
special way to format the code.

00:00:28.070 --> 00:00:31.375
If you can write HTML, then you've
already mastered templating in Angular.

00:00:31.375 --> 00:00:34.908
Okay, so Angular templates
are written in HTML, but

00:00:34.908 --> 00:00:37.347
how does the dynamic data get there?

00:00:37.347 --> 00:00:40.037
How does green get here, or
my unbreakable password,

00:00:40.037 --> 00:00:41.270
where does it come from?

00:00:42.340 --> 00:00:45.120
Most of the HTML will be the same for
every user.

00:00:45.120 --> 00:00:47.600
Only these parts here will be different.

00:00:47.600 --> 00:00:50.840
These dynamic parts will be set in
a controller which will fetch the data

00:00:50.840 --> 00:00:51.499
from a database.

00:00:53.155 --> 00:00:55.840
We'll look at controllers in more
detail shortly, but for now,

00:00:55.840 --> 00:00:57.630
let's use this as our controller.

00:00:57.630 --> 00:01:00.210
To create dynamic
content in the template,

00:01:00.210 --> 00:01:02.600
we need to use Angular expressions.

00:01:02.600 --> 00:01:05.519
Expressions in Angular
are just double curly braces

00:01:05.519 --> 00:01:09.080
where you can put variables or simple
mathematical operations like addition.

00:01:09.080 --> 00:01:11.990
In this case, I've got username
right here in my controller.

00:01:11.990 --> 00:01:16.330
So I'll replace Richard K
with user.username.

00:01:16.330 --> 00:01:18.680
Make sure that you surround this
with double curly braces so

00:01:18.680 --> 00:01:21.440
Angular will realize it's an expression.

00:01:21.440 --> 00:01:22.827
Now I'll update these last ones.

00:01:27.287 --> 00:01:30.799
And now we have an Angular template that
contains dynamic expressions that get

00:01:30.799 --> 00:01:32.190
their data from a controller.

