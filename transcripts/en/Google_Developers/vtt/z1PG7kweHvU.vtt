WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:25.000
[MUSIC PLAYING]

00:00:25.000 --> 00:00:27.460
MALE SPEAKER 1: Shanghai GDG
is a very interesting

00:00:27.460 --> 00:00:28.810
developer community.

00:00:28.810 --> 00:00:29.440
FEMALE SPEAKER 1: I'm
glad somebody

00:00:29.440 --> 00:00:30.670
has asked this question.

00:00:30.670 --> 00:00:32.526
MALE SPEAKER 2: This is where
the magic happens.

00:00:32.526 --> 00:00:34.305
FEMALE SPEAKER 2: This is
primarily a question and

00:00:34.305 --> 00:00:34.624
answer show.

00:00:34.624 --> 00:00:36.255
So if any of you out there would
like to ask questions.

00:00:42.100 --> 00:00:42.670
ALI AFSHAR: Hi, everyone.

00:00:42.670 --> 00:00:45.330
Welcome to Google
Developers Live.

00:00:45.330 --> 00:00:46.680
I'm Ali, and this is Vic.

00:00:46.680 --> 00:00:48.960
And today, we're going to
be talking about the

00:00:48.960 --> 00:00:50.260
Google Drive API.

00:00:50.260 --> 00:00:52.790
Specifically, we're going to
give you some tips and tricks

00:00:52.790 --> 00:00:55.486
on which OAuth scopes
to be using.

00:00:55.486 --> 00:00:56.340
VIC FRYZEL: Yep.

00:00:56.340 --> 00:00:59.650
So we have a series of different
OAuth scopes, and

00:00:59.650 --> 00:01:02.490
they have very, very
different purposes.

00:01:02.490 --> 00:01:04.519
They even apply differently
to different types of

00:01:04.519 --> 00:01:05.220
applications.

00:01:05.220 --> 00:01:07.850
In one scenario, you're going
to need a certain scope.

00:01:07.850 --> 00:01:09.080
Whereas in another scenario,
you might

00:01:09.080 --> 00:01:10.040
need multiple scopes.

00:01:10.040 --> 00:01:12.430
So we're going to walk
through those today.

00:01:12.430 --> 00:01:14.455
Right now, on our laptop here,
we're on developers.googl

00:01:14.455 --> 00:01:19.180
e.com/drive/scopes.

00:01:19.180 --> 00:01:22.320
I think you can see that on
the screen right now.

00:01:22.320 --> 00:01:25.600
So if you take a look at this,
there are currently five

00:01:25.600 --> 00:01:29.080
scopes that we provide to
Google Drive developers.

00:01:29.080 --> 00:01:31.206
Ali, do you want to talk about
high level-- what the

00:01:31.206 --> 00:01:31.880
different ones are?

00:01:31.880 --> 00:01:36.110
ALI AFSHAR: Yeah, so can we
just mention that with the

00:01:36.110 --> 00:01:39.660
Google Documents List API, which
was the API you used to

00:01:39.660 --> 00:01:42.040
use to manage these
kind of files.

00:01:42.040 --> 00:01:45.280
We only had one broad scope, and
these were in the infancy

00:01:45.280 --> 00:01:47.840
of OAuth and OAuth 2.

00:01:47.840 --> 00:01:50.730
So really we hadn't fleshed
out what we would like.

00:01:50.730 --> 00:01:53.250
And this is one of the real
improvements we've made over

00:01:53.250 --> 00:01:56.280
the Google Documents List API,
so one of the reasons really

00:01:56.280 --> 00:01:57.890
to move across.

00:01:57.890 --> 00:02:01.510
The scopes themselves are
firstly the full drive scope

00:02:01.510 --> 00:02:02.970
is what we call Drive.

00:02:02.970 --> 00:02:05.420
We've got the drive.file
scope.

00:02:05.420 --> 00:02:08.389
We have the drive.readonly
scope and the

00:02:08.389 --> 00:02:14.000
drive.readonly.metadata scope,
or metadata scope.

00:02:14.000 --> 00:02:16.670
We have another scope-- those
are for reading data.

00:02:16.670 --> 00:02:18.080
We have another scope
that is called the

00:02:18.080 --> 00:02:20.800
drive.apps.readonly.

00:02:20.800 --> 00:02:22.440
And that relates
to applications

00:02:22.440 --> 00:02:24.090
that a user has installed.

00:02:24.090 --> 00:02:26.000
We won't really be talking
much about that one.

00:02:26.000 --> 00:02:28.205
We'll stick to the data
scopes for now.

00:02:28.205 --> 00:02:30.870
VIC FRYZEL: So the reason that
we have multiple scopes, just

00:02:30.870 --> 00:02:35.080
as a reminder, is to
benefit users.

00:02:35.080 --> 00:02:39.630
This requires an application
to behave well.

00:02:39.630 --> 00:02:43.430
But really a user has to
authorize less access to their

00:02:43.430 --> 00:02:44.870
files to an application.

00:02:44.870 --> 00:02:48.700
So, for instance, if
somebody requests--

00:02:48.700 --> 00:02:51.850
if an application requests just
the drive.readonly scope,

00:02:51.850 --> 00:02:54.710
an application is unable to
manipulate the files that it

00:02:54.710 --> 00:02:57.400
has access to, but it can read
all the metadata and

00:02:57.400 --> 00:02:58.580
download each one.

00:02:58.580 --> 00:03:02.440
So this is very much less severe
than the full scope,

00:03:02.440 --> 00:03:03.310
for instance.

00:03:03.310 --> 00:03:05.010
ALI AFSHAR: So that's a perfect
place to start.

00:03:05.010 --> 00:03:07.240
Shall we start with the most
restrictive scope there that

00:03:07.240 --> 00:03:09.920
is probably the
drive.readonly.metadata scope?

00:03:09.920 --> 00:03:10.360
VIC FRYZEL: Yep.

00:03:10.360 --> 00:03:13.000
ALI AFSHAR: Now there are some
applications around that

00:03:13.000 --> 00:03:16.580
analyze your drive to see how
much is used, and where it's

00:03:16.580 --> 00:03:18.990
being used, and which kind
of files are using it.

00:03:18.990 --> 00:03:21.850
These are really useful
applications for yourself and

00:03:21.850 --> 00:03:25.240
even in a domain, if you have
a Google domain, you can

00:03:25.240 --> 00:03:27.590
manage that across all of it.

00:03:27.590 --> 00:03:31.170
So previously, with the
Documents List API, you'd have

00:03:31.170 --> 00:03:35.920
to give that app access to do
everything on your drive.

00:03:35.920 --> 00:03:39.170
Now, you can just say, well, I
only want this app to look at

00:03:39.170 --> 00:03:42.250
the metadata for the
files and not be

00:03:42.250 --> 00:03:43.740
able to change anything.

00:03:43.740 --> 00:03:46.840
So very specifically, they don't
need to download files,

00:03:46.840 --> 00:03:48.250
so you don't need to
give that access.

00:03:48.250 --> 00:03:52.460
And users are going to be much
more willing to use your

00:03:52.460 --> 00:03:56.610
application if they know you
can't modify the data.

00:03:56.610 --> 00:03:58.160
VIC FRYZEL: And how does a user
know that an application

00:03:58.160 --> 00:03:58.770
can't do that?

00:03:58.770 --> 00:04:02.210
ALI AFSHAR: So when you first
authorize an application, you

00:04:02.210 --> 00:04:05.290
get a list of what
the scope can do.

00:04:05.290 --> 00:04:07.700
And this is quite
a common screen.

00:04:07.700 --> 00:04:10.170
I'm sure you've seen it
before, the OAuth 2

00:04:10.170 --> 00:04:12.180
confirmation dialog.

00:04:12.180 --> 00:04:16.760
And it will say view files
or list files.

00:04:16.760 --> 00:04:21.769
The more permissive scopes, they
will say other stuff like

00:04:21.769 --> 00:04:23.860
can modify files, or
can upload files,

00:04:23.860 --> 00:04:25.760
can download files.

00:04:25.760 --> 00:04:26.130
VIC FRYZEL: Exactly.

00:04:26.130 --> 00:04:30.110
So with the metadata scope, the
readyonly.metadata scope,

00:04:30.110 --> 00:04:33.180
you cannot download the contents
of a file, which is

00:04:33.180 --> 00:04:36.240
super important to users who
are concerned about maybe

00:04:36.240 --> 00:04:39.490
their confidential information
leaking to certain

00:04:39.490 --> 00:04:40.020
applications.

00:04:40.020 --> 00:04:42.605
ALI AFSHAR: So if you can't
write the content, what can

00:04:42.605 --> 00:04:43.070
you download?

00:04:43.070 --> 00:04:44.220
VIC FRYZEL: Just the
title, just the

00:04:44.220 --> 00:04:45.830
description of the file.

00:04:45.830 --> 00:04:47.576
You can find out when it was
last modified, when it was

00:04:47.576 --> 00:04:48.480
last updated.

00:04:48.480 --> 00:04:50.520
You can see a series of
its revisions and

00:04:50.520 --> 00:04:51.990
who it's shared with.

00:04:51.990 --> 00:04:54.940
But you can't actually
access the content.

00:04:54.940 --> 00:04:57.260
So that's a big deal.

00:04:57.260 --> 00:05:00.120
You can pretty much access
everything that you see in the

00:05:00.120 --> 00:05:02.390
Google Drive user interface
until you click

00:05:02.390 --> 00:05:04.920
to download a file.

00:05:04.920 --> 00:05:07.200
So that's the readonly.metadata
scope.

00:05:07.200 --> 00:05:09.130
We also have the readonly scope,
which is a little bit

00:05:09.130 --> 00:05:10.283
more permissive.

00:05:10.283 --> 00:05:11.230
Do you want to go into that?

00:05:11.230 --> 00:05:11.580
ALI AFSHAR: Yeah.

00:05:11.580 --> 00:05:13.300
So the difference there
is that you can

00:05:13.300 --> 00:05:16.290
also download files.

00:05:16.290 --> 00:05:17.570
So you can see what
the title is.

00:05:17.570 --> 00:05:19.800
You can see the size of the
file, but also the application

00:05:19.800 --> 00:05:21.430
can download files.

00:05:21.430 --> 00:05:24.420
Can you think of an example
when that might be used?

00:05:24.420 --> 00:05:27.000
VIC FRYZEL: One example where
that might be used is if the

00:05:27.000 --> 00:05:31.340
application Loop wanted to have
the ability to make a

00:05:31.340 --> 00:05:36.320
collage of all of the photos in
your drive but didn't want

00:05:36.320 --> 00:05:39.790
to save the collage back to
Drive, an application that

00:05:39.790 --> 00:05:43.720
wants to perform some function
on the files there but not

00:05:43.720 --> 00:05:46.110
actually write anything back.

00:05:46.110 --> 00:05:48.870
So in this case, Loop would
have to collect the

00:05:48.870 --> 00:05:50.390
drive.readonly scope.

00:05:50.390 --> 00:05:52.260
They would have to go through
all of the images in your

00:05:52.260 --> 00:05:54.560
drive, and they would
download each image.

00:05:54.560 --> 00:05:55.790
And then given that,
they would be

00:05:55.790 --> 00:05:58.230
able to make a collage.

00:05:58.230 --> 00:06:01.810
This is where the example use
case ends though, because Loop

00:06:01.810 --> 00:06:04.470
actually also must be able to
save the generated collage

00:06:04.470 --> 00:06:05.670
back into your drive.

00:06:05.670 --> 00:06:08.580
So this scope alone is not
good enough for that.

00:06:08.580 --> 00:06:11.460
ALI AFSHAR: So if something like
an application that would

00:06:11.460 --> 00:06:14.900
back up all your drive, or say
you select a few files, and

00:06:14.900 --> 00:06:17.410
you'd like to make an archive
from those files, and just

00:06:17.410 --> 00:06:19.920
download that zipped archive.

00:06:19.920 --> 00:06:21.440
Something like that
would be perfectly

00:06:21.440 --> 00:06:23.000
good with this scope.

00:06:23.000 --> 00:06:25.810
VIC FRYZEL: There's a lot of
enterprise use cases for this,

00:06:25.810 --> 00:06:31.550
for instance, like enterprise
audits or enterprise--

00:06:31.550 --> 00:06:34.570
like let's suppose somebody
leaves a company or somebody

00:06:34.570 --> 00:06:38.190
needs to back up all of their
stuff from Google Drive into

00:06:38.190 --> 00:06:39.710
the company's filer.

00:06:39.710 --> 00:06:42.840
Things like this are very good
for the readonly scope.

00:06:42.840 --> 00:06:44.490
There's no reason those
applications need to write

00:06:44.490 --> 00:06:45.530
anything to your drive.

00:06:45.530 --> 00:06:46.540
ALI AFSHAR: Absolutely.

00:06:46.540 --> 00:06:50.210
And we mentioned users being
happy to give you

00:06:50.210 --> 00:06:51.100
access to the data.

00:06:51.100 --> 00:06:53.290
It also applies to domain
administrators as well.

00:06:53.290 --> 00:06:57.000
So a domain administrator is
much more likely to allow

00:06:57.000 --> 00:07:00.530
users on their domain to use
your application if you use

00:07:00.530 --> 00:07:01.750
quite a narrow scope
like this one.

00:07:01.750 --> 00:07:02.090
VIC FRYZEL: Right.

00:07:02.090 --> 00:07:04.480
Exactly.

00:07:04.480 --> 00:07:07.400
To give also an example of
readonly.metadata, an example

00:07:07.400 --> 00:07:09.500
of where somebody might use
this is if they were

00:07:09.500 --> 00:07:11.920
implementing their own
picker, right?

00:07:11.920 --> 00:07:14.690
You want to show the user a list
of all of the files in

00:07:14.690 --> 00:07:15.070
their drive.

00:07:15.070 --> 00:07:17.700
And for some reason, the
application has decided not to

00:07:17.700 --> 00:07:20.600
use the picker that
we provide.

00:07:20.600 --> 00:07:24.690
Maybe, for instance, a picker
on an embedded system like a

00:07:24.690 --> 00:07:28.500
printer can't display
our HTML5 picker.

00:07:28.500 --> 00:07:30.480
So instead, they generate their
own picker and allow a

00:07:30.480 --> 00:07:32.560
user to select a file
from Drive.

00:07:32.560 --> 00:07:34.210
In that case, you don't need
to download the files.

00:07:34.210 --> 00:07:37.090
All you need really is like the
title and type of file so

00:07:37.090 --> 00:07:39.290
that the user can see those
things and choose one.

00:07:39.290 --> 00:07:42.060
And then once the user chooses
that, you also have the file's

00:07:42.060 --> 00:07:45.650
ID, and then you can use that
to do other things.

00:07:45.650 --> 00:07:48.900
So the two other scopes that
we're going to talk about

00:07:48.900 --> 00:07:52.220
today are the Drive and
drive.file scope.

00:07:52.220 --> 00:07:54.590
I actually think it might be
easier to talk about the Drive

00:07:54.590 --> 00:07:55.360
scope first.

00:07:55.360 --> 00:07:56.476
ALI AFSHAR: I think so.

00:07:56.476 --> 00:07:57.470
So the Drive scope's
really easy.

00:07:57.470 --> 00:08:00.460
It allows the application
access to do just about

00:08:00.460 --> 00:08:03.820
anything the user can
do to their drive.

00:08:03.820 --> 00:08:06.290
There's no restriction on that,
and that is equivalent

00:08:06.290 --> 00:08:08.220
to the scope that you
would get for the

00:08:08.220 --> 00:08:09.330
Documents List API.

00:08:09.330 --> 00:08:09.840
VIC FRYZEL: Exactly.

00:08:09.840 --> 00:08:11.570
ALI AFSHAR: I mean, it's so
equivalent, in fact, that you

00:08:11.570 --> 00:08:15.080
can use a token from the
Documents List API that you

00:08:15.080 --> 00:08:16.840
got with Drive API.

00:08:16.840 --> 00:08:19.020
And that's useful for people
who have migrated and they

00:08:19.020 --> 00:08:21.600
don't want to reauthorize
the user.

00:08:21.600 --> 00:08:25.120
VIC FRYZEL: So with that scope,
you can do anything

00:08:25.120 --> 00:08:26.440
possible with the SDK.

00:08:26.440 --> 00:08:29.200
Every single feature is
available to you.

00:08:29.200 --> 00:08:31.290
Now, that's not to say that
you should use that scope.

00:08:31.290 --> 00:08:35.020
You should use the
least amount of

00:08:35.020 --> 00:08:36.299
access that you need.

00:08:36.299 --> 00:08:38.950
And actually, that's where the
drive.file scope comes in.

00:08:38.950 --> 00:08:41.860
That's the most important
scope, I think.

00:08:41.860 --> 00:08:45.550
Because what this scope allows
your application to do is

00:08:45.550 --> 00:08:49.450
access files like their metadata
and download them and

00:08:49.450 --> 00:08:53.620
manipulate them that
the application has

00:08:53.620 --> 00:08:56.500
either created or opened.

00:08:56.500 --> 00:08:59.410
So if I have this scope and I
create some file, if I upload

00:08:59.410 --> 00:09:01.170
a file to the drive,
I now have full

00:09:01.170 --> 00:09:02.320
control over that file.

00:09:02.320 --> 00:09:03.650
I can update it.

00:09:03.650 --> 00:09:04.640
I can download it.

00:09:04.640 --> 00:09:06.560
I can delete it if I need to.

00:09:06.560 --> 00:09:07.430
ALI AFSHAR: And you
can list it.

00:09:07.430 --> 00:09:07.990
VIC FRYZEL: And I can list it.

00:09:07.990 --> 00:09:08.280
Right.

00:09:08.280 --> 00:09:10.840
ALI AFSHAR: So it's a slightly
subtle difference.

00:09:10.840 --> 00:09:13.090
The user authorizes your
application first.

00:09:13.090 --> 00:09:16.340
But then you have to have some
kind of user input that the

00:09:16.340 --> 00:09:20.150
user will explicitly say I will
allow this application to

00:09:20.150 --> 00:09:21.210
use this file.

00:09:21.210 --> 00:09:25.890
For example, clicking in the
Drive UI, or from the picker,

00:09:25.890 --> 00:09:28.950
or from Android, these
kind of situations.

00:09:28.950 --> 00:09:32.160
The user makes an
explicit choice.

00:09:32.160 --> 00:09:36.150
So it's kind of like a filter
on the drive scope.

00:09:36.150 --> 00:09:36.510
VIC FRYZEL: Yeah.

00:09:36.510 --> 00:09:40.730
So the drive.file scope is used
primarily by applications

00:09:40.730 --> 00:09:43.130
who need to only manage their
own set of files.

00:09:43.130 --> 00:09:45.870
They don't need to import any
data or manipulate in the rest

00:09:45.870 --> 00:09:47.100
of the user's drive.

00:09:47.100 --> 00:09:50.430
They just want to take
some set of files and

00:09:50.430 --> 00:09:51.770
manage them in drive.

00:09:51.770 --> 00:09:53.545
ALI AFSHAR: So we have some
examples, don't we?

00:09:53.545 --> 00:09:53.860
VIC FRYZEL: Yeah.

00:09:53.860 --> 00:09:55.140
What's an example?

00:09:55.140 --> 00:09:55.840
ALI AFSHAR: So take Balsamiq.

00:09:55.840 --> 00:09:57.020
I don't know if you
use Balsamiq.

00:09:57.020 --> 00:09:58.840
It's a mock-up editor.

00:09:58.840 --> 00:10:01.820
You create mock-ups for your
new website or your GUI

00:10:01.820 --> 00:10:03.510
application, whatever it is.

00:10:03.510 --> 00:10:06.750
They have their own
file format, BMML.

00:10:06.750 --> 00:10:09.880
And those files are really are
no use to any application

00:10:09.880 --> 00:10:10.960
other than Balsamiq.

00:10:10.960 --> 00:10:13.400
One day, if they're huge, maybe
there'll be other people

00:10:13.400 --> 00:10:15.510
who open that kind of file.

00:10:15.510 --> 00:10:16.860
So that's really useful
for them.

00:10:16.860 --> 00:10:19.540
When they get a list of the
files, they only get a list of

00:10:19.540 --> 00:10:21.100
those files.

00:10:21.100 --> 00:10:22.470
They can create those files.

00:10:22.470 --> 00:10:23.260
They can read them.

00:10:23.260 --> 00:10:24.510
They can do whatever they
like with them.

00:10:24.510 --> 00:10:26.730
But it's kind of a subset
of the drive.

00:10:26.730 --> 00:10:27.230
VIC FRYZEL: Yeah.

00:10:27.230 --> 00:10:30.080
So really here, Balsamiq
is a good citizen.

00:10:30.080 --> 00:10:31.890
Like they're a good application
in that they're

00:10:31.890 --> 00:10:34.380
requesting the least amount
of permissions that

00:10:34.380 --> 00:10:35.480
they actually need.

00:10:35.480 --> 00:10:37.490
They could use the full scope,
but they choose not to,

00:10:37.490 --> 00:10:39.020
because it's better for users.

00:10:39.020 --> 00:10:41.250
ALI AFSHAR: And something we
haven't mentioned much is that

00:10:41.250 --> 00:10:42.720
you can combine these scopes.

00:10:42.720 --> 00:10:46.340
So Balsamiq, if they wanted to
just list the titles and be

00:10:46.340 --> 00:10:49.810
able to find which files are
actually Balsamiq files,

00:10:49.810 --> 00:10:51.670
looking at all of them,
they could request the

00:10:51.670 --> 00:10:54.700
readonly.metadata scope
with the file scope.

00:10:54.700 --> 00:10:58.320
So they could be able to list
all the titles and only open

00:10:58.320 --> 00:11:00.170
the ones and save the
ones that the

00:11:00.170 --> 00:11:01.650
user explicitly allows.

00:11:01.650 --> 00:11:02.180
VIC FRYZEL: Exactly.

00:11:02.180 --> 00:11:03.060
ALI AFSHAR: So mix and match.

00:11:03.060 --> 00:11:06.880
I mean, they're specifically
designed to be atomic, so you

00:11:06.880 --> 00:11:09.720
can take little bits of them and
join them together and use

00:11:09.720 --> 00:11:10.610
whatever you like.

00:11:10.610 --> 00:11:11.210
VIC FRYZEL: Yeah.

00:11:11.210 --> 00:11:16.360
So in the full scope, it's also
important to note that

00:11:16.360 --> 00:11:19.200
another application with the
full scope could see

00:11:19.200 --> 00:11:21.060
Balsamiq's files.

00:11:21.060 --> 00:11:26.540
So if Balsamiq is creating all
of their BMML and accessing

00:11:26.540 --> 00:11:29.540
those with the drive.file scope,
and another application

00:11:29.540 --> 00:11:31.660
comes in and the user authorizes
it, that other

00:11:31.660 --> 00:11:36.670
application could actually
impact those BMML files.

00:11:36.670 --> 00:11:38.830
So it's important also when
you're working with these

00:11:38.830 --> 00:11:42.270
scopes to realize that you're
not the only application

00:11:42.270 --> 00:11:43.910
working with the user's files.

00:11:43.910 --> 00:11:45.060
There's the Google Drive UI.

00:11:45.060 --> 00:11:46.860
A user could come in
and move files, or

00:11:46.860 --> 00:11:48.480
delete them, or do whatever.

00:11:48.480 --> 00:11:50.950
And then a user could authorize
another application

00:11:50.950 --> 00:11:52.470
to do the same thing.

00:11:52.470 --> 00:11:58.020
So there's no way to have a
locked section or a locked

00:11:58.020 --> 00:12:01.100
folder of files that are only
accessible by your application

00:12:01.100 --> 00:12:02.040
at the moment.

00:12:02.040 --> 00:12:03.960
So it's kind of something we're
considering, but at the

00:12:03.960 --> 00:12:05.880
moment, we don't
have anything.

00:12:05.880 --> 00:12:08.000
ALI AFSHAR: So this brings us
back full circle to the first

00:12:08.000 --> 00:12:11.060
thing you said, Vic, is that
this is all for users.

00:12:11.060 --> 00:12:13.480
And the user owns these data.

00:12:13.480 --> 00:12:14.410
The user owns the files.

00:12:14.410 --> 00:12:17.110
The user can say anyone can
open this file, whatever.

00:12:17.110 --> 00:12:21.060
On a regular file system, you
wouldn't really lock it down

00:12:21.060 --> 00:12:21.800
per application.

00:12:21.800 --> 00:12:24.905
You would lock it down for the
user name or whatever system

00:12:24.905 --> 00:12:25.880
you're using.

00:12:25.880 --> 00:12:26.190
VIC FRYZEL: Yeah.

00:12:26.190 --> 00:12:27.730
Exactly.

00:12:27.730 --> 00:12:32.480
So we are very fond of this
permission structure.

00:12:32.480 --> 00:12:34.980
And in the future, as we add
more and more features to the

00:12:34.980 --> 00:12:39.770
SDK, I suspect that we'll make
much heavier use of scopes so

00:12:39.770 --> 00:12:41.990
that your application
can request just the

00:12:41.990 --> 00:12:43.960
access that it needs.

00:12:43.960 --> 00:12:46.500
So you should really look
forward to the future in which

00:12:46.500 --> 00:12:48.200
we expose other scripts
to do other things.

00:12:48.200 --> 00:12:49.020
ALI AFSHAR: Absolutely.

00:12:49.020 --> 00:12:52.385
And as we said, very
fine-grained as well.

00:12:52.385 --> 00:12:53.440
VIC FRYZEL: We've even received
a number feature

00:12:53.440 --> 00:12:57.640
requests on adding more
fine-grained scopes, like

00:12:57.640 --> 00:13:00.220
being able to add a scope for
instance by file type.

00:13:00.220 --> 00:13:03.710
What if I only want to access
the images in a user's drive.

00:13:03.710 --> 00:13:05.840
That's a very good idea.

00:13:05.840 --> 00:13:07.460
ALI AFSHAR: Yeah, it's a
compelling use case.

00:13:07.460 --> 00:13:08.790
VIC FRYZEL: So I think it's
something we're considering

00:13:08.790 --> 00:13:10.410
implementing.

00:13:10.410 --> 00:13:13.765
But that is a pretty good
summary, I think, of how to

00:13:13.765 --> 00:13:14.440
use these scopes.

00:13:14.440 --> 00:13:16.010
If you want to play around with
these scopes, you can go

00:13:16.010 --> 00:13:18.490
to the OAuth 2.0 playground,
which is linked right here at

00:13:18.490 --> 00:13:20.790
the bottom of this page.

00:13:20.790 --> 00:13:22.280
And you can request the
different scopes and see what

00:13:22.280 --> 00:13:26.590
the OAuth dialogue will look
like for the user when they

00:13:26.590 --> 00:13:29.540
are granting access to your
application and see how severe

00:13:29.540 --> 00:13:32.280
the messaging is and
things like that.

00:13:32.280 --> 00:13:34.190
ALI AFSHAR: Obviously, we try
to make the messaging more

00:13:34.190 --> 00:13:35.800
severe the broader the scope.

00:13:35.800 --> 00:13:39.030
We don't want to scare users
away, but at the same time, we

00:13:39.030 --> 00:13:41.810
do want to be absolutely
transparent and honest in what

00:13:41.810 --> 00:13:43.920
the user is allowing
you to do.

00:13:43.920 --> 00:13:47.260
So again, the less you use, the
less you ask for, the less

00:13:47.260 --> 00:13:48.580
scarier it will look
for the user.

00:13:48.580 --> 00:13:48.850
VIC FRYZEL: Exactly.

00:13:48.850 --> 00:13:51.070
ALI AFSHAR: And we are going
to a place where users are

00:13:51.070 --> 00:13:52.640
starting to look through
this stuff.

00:13:52.640 --> 00:13:53.940
I mean, a few years ago,
you could have said

00:13:53.940 --> 00:13:54.640
people don't read that.

00:13:54.640 --> 00:13:55.830
They just click OK.

00:13:55.830 --> 00:13:57.980
But people do read that,
and people do care.

00:13:57.980 --> 00:13:58.610
VIC FRYZEL: Yeah.

00:13:58.610 --> 00:14:03.100
We've definitely noticed a huge
increase in time spent on

00:14:03.100 --> 00:14:06.910
that page reading through
these things.

00:14:06.910 --> 00:14:10.450
Users pay attention.

00:14:10.450 --> 00:14:12.700
All right, I guess that's about
it for Google Drive

00:14:12.700 --> 00:14:13.920
OAuth scripts.

00:14:13.920 --> 00:14:14.230
ALI AFSHAR: Great.

00:14:14.230 --> 00:14:16.790
Thank you very much, everyone.

00:14:16.790 --> 00:14:20.680
VIC FRYZEL: We will see
you all next week.

00:14:20.680 --> 00:14:22.520
And thanks for watching.

00:14:22.520 --> 00:14:22.650
ALI AFSHAR: Bye bye.

00:14:22.650 --> 00:14:22.950
VIC FRYZEL: Bye.

00:14:22.950 --> 00:15:00.400
[MUSIC PLAYING]

