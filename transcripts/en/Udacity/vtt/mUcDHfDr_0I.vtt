WEBVTT
Kind: captions
Language: en

00:00:00.008 --> 00:00:03.520
So selecting sub-sequences from strings is a very useful thing, we're

00:00:03.520 --> 00:00:05.910
going to use it lots of times in many of the programs

00:00:05.910 --> 00:00:08.210
we write, so we're going to have one more quiz about this.

00:00:08.210 --> 00:00:10.790
This one's going to be a little more abstract, so for this

00:00:10.790 --> 00:00:14.700
one, you're given any string S, so S is a variable.

00:00:14.700 --> 00:00:18.680
It holds a value of any string, and the question is,

00:00:18.680 --> 00:00:21.670
which of these are always equivalent to the string S, no

00:00:21.670 --> 00:00:25.695
matter what S was at the beginning? So here are the choices.

00:00:25.695 --> 00:00:31.384
We have S index colon. We have S concatenated with S index 0

00:00:31.384 --> 00:00:36.926
colon negative 1 plus 1. We have S index 0 colon. We have S

00:00:36.926 --> 00:00:42.983
index colon negative 1. And we have

00:00:42.983 --> 00:00:49.090
S index colon 3 plus S 3 colon.

00:00:51.290 --> 00:00:53.550
So your goal is to check all of the expressions

00:00:53.550 --> 00:00:57.070
here that have the same exact value as S, no matter

00:00:57.070 --> 00:01:01.050
what string S is initially. Feel free to try evaluating

00:01:01.050 --> 00:01:03.550
things in the Python Interpreter. Try to think about it without

00:01:03.550 --> 00:01:06.650
doing that first. But you're welcome to do experiments running

00:01:06.650 --> 00:01:09.150
code in the Python Interpreter to try and answer this. For

00:01:09.150 --> 00:01:12.170
remember, for your answer to be correct, it has to work

00:01:12.170 --> 00:01:14.960
for any string S, not just the one that you try.

