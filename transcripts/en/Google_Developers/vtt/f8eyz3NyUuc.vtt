WEBVTT
Kind: captions
Language: en

00:57:50.108 --> 00:57:52.108
anding by.

01:03:42.564 --> 01:03:44.564
&gt;&gt; Ladies and gentlemen,dan 
Kaufman

01:03:48.447 --> 01:03:53.611
, director of Google ATAP.
&gt;&gt; Hey.ou.  Good morning, e

01:03:54.080 --> 01:03:59.243
verybody.  I am, I'mdan Kaufman.
  One year ago, almost to this d

01:04:01.220 --> 01:04:03.805
ay, Google asked me to come and 
help lead ATAP.  I remember s

01:04:03.940 --> 01:04:08.826
itting in my hotel rope watching
 the ATAP I/O presentation, and 

01:04:08.827 --> 01:04:11.552
I was just fascinated with this 
idea we could bridge the gap 

01:04:11.553 --> 01:04:16.899
between our physical world and 
our digital lives.  I was moved 

01:04:16.900 --> 01:04:20.951
by this insistence that we 
remember our humanity, take our 

01:04:20.952 --> 01:04:23.443
human nature and embed it in 
technology and I could not wait 

01:04:23.444 --> 01:04:25.591
to come here.
And now it's one year later, and

01:04:25.882 --> 01:04:29.702
 I'm the head of ATAP.  I get to
 share with all of you some of 

01:04:29.703 --> 01:04:35.120
the stuff we've been working on 
over the last year., and I could

01:04:35.121 --> 01:04:39.271
 not be more excite ed.
We have a completely packed show

01:04:39.589 --> 01:04:42.595
.  I'm going to give you a very 
brief overview and we're just 

01:04:42.596 --> 01:04:45.334
going to get to it.
One thing I get asked a lot when

01:04:45.619 --> 01:04:48.950
 I go out around and I talk 
about ATAP is what does success 

01:04:48.951 --> 01:04:52.529
mean?  How do you measure it, 
how do you know you're 

01:04:52.530 --> 01:04:54.230
successful, what becomes success
?  We'll talk a little bit about

01:04:54.231 --> 01:04:55.914
 that.
Then we're going to get you 

01:04:55.915 --> 01:05:03.754
caught up and give you an update
 on projects Jakard and solely, 

01:05:03.755 --> 01:05:06.482
two projects we showed you.  We 
showed you some really early 

01:05:06.483 --> 01:05:09.184
prototypes of that and we're 
going to show you how it's made 

01:05:09.185 --> 01:05:11.922
its journey as we've worked with
 some you have as developers and

01:05:11.923 --> 01:05:14.174
 some commercial partners on its
 way to become ing a product.

01:05:14.237 --> 01:05:17.819
And then of course we've got to 
talk about ARA.  Who does not 

01:05:17.820 --> 01:05:22.782
want to talk about it?
[ APPLAUSE ]

01:05:22.861 --> 01:05:25.195
&gt;&gt; Yes.
So we've got an update for you. 

01:05:25.809 --> 01:05:27.609
 Finally as has been our 
tradition over the last two 

01:05:27.610 --> 01:05:30.808
years, we're going to end with a
 new spotlight story.  This year

01:05:30.954 --> 01:05:36.539
 we've got a really special 
twist and I hope you like it.  

01:05:36.540 --> 01:05:40.846
Let's first talk about success 
and what it means to us.

01:05:40.847 --> 01:05:43.631
In order for me to tell you what
 success means for a project at 

01:05:43.778 --> 01:05:46.197
ATAP, I have to take you back to
 the beginning.

01:05:46.296 --> 01:05:51.490
Everything at.  ATAP starts with
 a person and a passion and an 

01:05:51.491 --> 01:05:55.677
idea.  And that idea is often a 
little bit crazy.  It's sort of 

01:05:55.678 --> 01:05:58.980
borders right on that line 
between what's possible and 

01:05:58.981 --> 01:06:02.026
what's impossible.  So the first
 thing we do is we do a deep 

01:06:02.027 --> 01:06:05.188
scientific dive to try to find o
ut and make sure that still it 

01:06:05.189 --> 01:06:07.595
really lives within the realm of
 what's possible.

01:06:07.674 --> 01:06:12.147
And if we conclude that it does,
 then we dig in and we work on 

01:06:12.278 --> 01:06:16.075
it, usually for a year, 
sometimes more, and it's hard.  

01:06:16.076 --> 01:06:20.491
It's really hard.  It's hard 
because there's no precedence 

01:06:20.492 --> 01:06:22.858
for what we do.
There's just nothing out there 

01:06:22.859 --> 01:06:27.754
like that before, and so we have
 to invent things.  We have to 

01:06:27.755 --> 01:06:32.089
invent new materials.  We have 
to invent new testing rigs, new 

01:06:32.090 --> 01:06:34.239
software concepts.  And we

01:06:37.387 --> 01:06:39.794
 often hit roadblocks.  And we 
stumble and we fall, and we get 

01:06:39.795 --> 01:06:43.411
back up again and we fight and 
we persist, .  And we do it 

01:06:43.412 --> 01:06:45.400
because it's important          
 important and because we 

01:06:45.401 --> 01:06:49.000
believe in this idea.
And then something magical 

01:06:49.001 --> 01:06:52.491
happens.  We see this little 
glimmer of light at the end of 

01:06:52.492 --> 01:06:55.508
the tunnel and we think, holy 
cow, this thing that was just an

01:06:56.710 --> 01:07:02.910
 idea may be real, and we go to 
the lab and it's there and it 

01:07:02.911 --> 01:07:05.937
exists.  And at that moment we 
turn to developers, such as y

01:07:06.091 --> 01:07:08.807
ourselves, and commercial 
partners, and we ask one simple 

01:07:08.808 --> 01:07:12.136
question:  If we can make this 
thing exist not just in a lab 

01:07:12.137 --> 01:07:14.841
but in the real world, what 
would you do with it?  What 

01:07:14.842 --> 01:07:18.306
could you build?  What products 
could it be?  How could we 

01:07:18.307 --> 01:07:21.653
impact people's lives?  How do 
we get things into the hands of 

01:07:21.654 --> 01:07:26.495
people?  But most importantly, 
we ask them a simple question:  

01:07:26.496 --> 01:07:29.958
Do you want to come on this 
journey with us?  And when they 

01:07:29.959 --> 01:07:35.537
say yes, things begin to change.
  They inject all sorts of new 

01:07:35.538 --> 01:07:39.018
energy, they have all sorts of 
ideas, they want 20 take 

01:07:39.019 --> 01:07:41.434
technology places we never 
imagined.  We encounter all 

01:07:41.435 --> 01:07:43.416
sorts of problems we never 
thought of before, and more i

01:07:43.417 --> 01:07:45.664
mportantly they come up with s
olutions to these problems that 

01:07:45.665 --> 01:07:50.335
below       blow our minds.  All
 of a sudden these fledge       

01:07:50.336 --> 01:07:52.475
 fledgling ideas start to become
 prototypes and prototypes 

01:07:52.476 --> 01:07:55.970
become products.  So success for
 us is when our projects make 

01:07:55.971 --> 01:08:00.196
this transition.  Because after 
all, for things to matter, 

01:08:00.197 --> 01:08:05.471
people have to be able to use 
them.  These transitions happen 

01:08:05.472 --> 01:08:07.875
many different ways.  I'm going 
to give you three brief examples

01:08:08.324 --> 01:08:10.894
.  Three may give you a feel but
 we've had a whole bunch.

01:08:10.990 --> 01:08:14.978
About two years on the IO stage,
 Johnny ily wondered          

01:08:14.979 --> 01:08:20.128
wonder           ny Lee wondered
 if we could map the same we    

01:08:20.129 --> 01:08:24.458
way we map the outside world.  
He showed prototypes.  With 

01:08:24.459 --> 01:08:28.220
claiive vor and the team, they 
took tank      Tango from these 

01:08:28.221 --> 01:08:31.262
early protein types to a product
 you'll be able to buy later 

01:08:31.263 --> 01:08:35.625
this year from Lenovo.
&gt;&gt; Whewed hoo.

01:08:35.716 --> 01:08:39.241
&gt;&gt;                          
&gt;&gt; Whoo-hoo.

01:08:39.397 --> 01:08:46.214
&gt;&gt; Yeah, go buy one. talked 
about Avicus, this wase pack 

01:08:46.215 --> 01:08:50.695
chop pray's vision to get rid of
 the things -- we have these 

01:08:50.696 --> 01:08:55.280
phones and have all these sense 
ors, why couldn't they diswrus 

01:08:55.413 --> 01:08:58.936
             just      they just
 know so I can just work.  

01:08:58.937 --> 01:09:02.280
They've taken these ideas and 
turned it into a trust API.  

01:09:02.281 --> 01:09:04.686
What we're going to do with this
 is be able to get rid of the a

01:09:05.139 --> 01:09:08.327
wkwardness of second factor 
authentication.  This June we're

01:09:08.943 --> 01:09:11.182
 going out to several large 
financial institutions for 

01:09:11.183 --> 01:09:14.243
initial testing.  Assume ing it 
goes well, this should become 

01:09:14.244 --> 01:09:16.956
available to every Android 
developer around the world by 

01:09:16.957 --> 01:09:19.403
the end of the year.  I cannot 
wait to see what you guys build 

01:09:19.404 --> 01:09:22.505
with it.
[ APPLAUSE ]

01:09:22.578 --> 01:09:24.578
&gt;&gt;

01:09:26.219 --> 01:09:29.236
 Now, sometimes -- transitions 
don't happen on a schedule.  

01:09:29.237 --> 01:09:32.414
Sometimes they just pop up and 
surprise you.  And so I kind of 

01:09:32.415 --> 01:09:34.720
wanted to share this one with 
you because nobody's ever seen 

01:09:34.721 --> 01:09:37.747
it outside of our shop.  A while
 ago we were looking at this 

01:09:37.748 --> 01:09:39.748
slide, and this is a very 
complex slide      slide.  So d

01:09:39.888 --> 01:09:44.740
on't worry about it.  Here's the
 bottom line.  There's an 

01:09:44.741 --> 01:09:47.745
epidemic in congestive heart 
failure and costs us millions of

01:09:47.918 --> 01:09:50.949
 lives and dollars.  What we do 
today to help people with that 

01:09:50.950 --> 01:09:56.710
is we do surge and we use what w
e call an invase ive sensor.  

01:09:56.711 --> 01:10:00.491
You put a sensor in the chest 
and it helps monitor people's 

01:10:00.492 --> 01:10:03.655
health.  We saw this as a be p
ro.  We wondered if I could 

01:10:03.656 --> 01:10:08.683
replace these invase ive sensors
 with non    noninvase ive 

01:10:08.684 --> 01:10:09.863
sensors, wouldn't that be 
amazing?  All of a sudden the 

01:10:09.864 --> 01:10:12.149
cost of healthcare could drop, 
we could give this to everybody,

01:10:12.456 --> 01:10:16.134
 you wouldn't need surgery which
 is risk      risky       risky 

01:10:16.135 --> 01:10:22.953
and we shared that vision with
jestsa megga and an do Conrad, 

01:10:22.954 --> 01:10:26.021
feet part of life sciences.  
Would he have transitioned our 

01:10:26.022 --> 01:10:29.529
people and our technology and IP
 because we want to get this 

01:10:29.530 --> 01:10:32.277
developed as fast as possible 
and we could not think of 

01:10:32.278 --> 01:10:35.285
anybody better off to do that.  
Hopefully you will get that in 

01:10:35.286 --> 01:10:38.661
everybody's hands as soon as 
possible.

01:10:38.662 --> 01:10:41.679
So for us that's what success 
looks like.  After all, ideas 

01:10:41.680 --> 01:10:46.242
are most meaningful when put 
into practice.  So today that's 

01:10:46.570 --> 01:10:50.652
what I want to focus on.  I want
 to focus on this journey that 

01:10:50.653 --> 01:10:54.750
we take you on from an early 
idea to to a prototype to just 

01:10:54.751 --> 01:10:57.325
the beginning glimmers of a 
commercial application.  So 

01:10:57.326 --> 01:11:03.770
let's get started.
Last year Dr. Yvonne Pufra i

01:11:04.069 --> 01:11:11.318
ntroduced to two projects, p
roject Sol  oly and Jacgar  aurd

01:11:11.491 --> 01:11:13.491
. 

01:11:53.171 --> 01:11:54.153
 To give you an idea for that 
journey and update, Dr. Ivan Puf

01:11:54.154 --> 01:11:54.440
rev.
&gt;&gt; Thank you.

01:11:54.441 --> 01:11:54.753
[ APPLAUSE ]
&gt;&gt; Good morning.  So let's talk 

01:11:54.754 --> 01:11:55.401
about project Soly and Jacqaur  
urd.

01:11:55.402 --> 01:11:55.613
We did new technology to create 
connected close.  We also 

01:11:55.614 --> 01:11:56.091
announce ed partnership with 
Levis.  And there was a lot of s

01:11:56.092 --> 01:11:56.449
peculation --
There was a lot of speculation 

01:11:56.450 --> 01:11:56.874
what are they going to make at 
them.  Let's look at one of them

01:11:56.875 --> 01:11:56.966
.
&gt;&gt; Apparently Google's 

01:11:56.967 --> 01:12:00.952
developing a new digital type of
 fabric that you can touch and 

01:12:00.953 --> 01:12:05.058
can feel it and it also blue 
     Bluetooths to your phone.  

01:12:05.059 --> 01:12:08.081
Now you can swipe the side of 
your jeans to mute your phone, 

01:12:08.082 --> 01:12:10.519
even tap the fabric for playing 
any song, which means pretty 

01:12:10.520 --> 01:12:16.643
soon all your calls can be 
Bullet        butt dials.

01:12:16.951 --> 01:12:20.417
&gt;&gt; Butt dials, seriously?  
That's a million dollar idea for

01:12:20.570 --> 01:12:26.027
 you.
We're not make ing        

01:12:26.028 --> 01:12:28.028
make ing smart pants

01:12:32.443 --> 01:12:32.701
, almost accurate.  Instead, the
 very first Jacqaurd garment is 

01:12:32.702 --> 01:12:36.654
going to be Levi     Levi's 
commuter truck jacket, fashion

01:12:37.078 --> 01:12:40.346
able and functional.

01:12:45.855 --> 01:12:47.824
[ APPLAUSE ]
&gt;&gt; To wear on and off the bike. 

01:12:47.825 --> 01:12:54.046
 And to tell you why, the jacket
 is a perfect feature for 

01:12:54.047 --> 01:13:01.064
Jacqaurd, I would like to invite
 on stage Paul from Levi's.

01:13:01.065 --> 01:13:02.818
[ APPLAUSE ]
&gt;&gt; Thank you.  Thanks very much 

01:13:02.819 --> 01:13:05.848
for that destruction but we 
actual                          

01:13:05.849 --> 01:13:09.762
 introduction.  It's hard to 
believe it was a year ago at 

01:13:09.763 --> 01:13:15.299
Google I/O 15 we were introduced
.  145 years since Levi's i

01:13:15.622 --> 01:13:21.190
nvented the blue jean.  Today is
 the actual official birthday of

01:13:21.500 --> 01:13:23.208
 the blue jean.
[ APPLAUSE ]

01:13:23.209 --> 01:13:26.845
&gt;&gt; For 143 years at Levi's we've
 been make ing clothing with 

01:13:26.846 --> 01:13:29.689
purpose.  It started in the 18 
hundreds make ing durable cloth

01:13:29.860 --> 01:13:38.988
ing for the mine rs for the gold
 crush.  Purposeful design years

01:13:39.266 --> 01:13:42.749
 later to meet the urban cyclist
.  Make quality clothes that p

01:13:42.910 --> 01:13:45.327
erform as great as they look.  
It's in that context I'm excited

01:13:45.474 --> 01:13:48.345
 to talk to you about today's n
ewest edition to the commute er 

01:13:48.346 --> 01:13:51.395
family, which is the trucker 
jacket powered by Google's 

01:13:51.396 --> 01:13:55.792
Jacqaurd technology.
Anyone who rides a bike knows 

01:13:55.793 --> 01:14:00.465
that tension.  How do you go on 
a ride without going off grid?  

01:14:00.466 --> 01:14:03.503
Anyone who rides a bike knows 
it's a terrible idea to try to n

01:14:03.642 --> 01:14:06.719
avigate the screen of your phone
 while you're navigating busy 

01:14:06.720 --> 01:14:10.105
city streets.  This technology 
gives us a first-time real world

01:14:10.106 --> 01:14:12.192
 solution to that real world 
problem.

01:14:12.288 --> 01:14:16.202
Now, if you imagine the 
opportunity for woven tactile 

01:14:16.354 --> 01:14:18.764
interface in the context of the 
most explicit and urgent needs 

01:14:18.765 --> 01:14:22.381
of an urban cyclist, that's 
safety and awareness, the 

01:14:22.382 --> 01:14:25.731
opportunity becomes really real,
 valuable.  This becomes a 

01:14:25.925 --> 01:14:28.327
copilot for your ride and your 
life, both on and off the bike. 

01:14:28.472 --> 01:14:31.509
 This is a good friend helping 
you out.  So now to access the 

01:14:31.510 --> 01:14:34.158
most necessary pieces of your 
digital life, you simply touch 

01:14:34.159 --> 01:14:38.770
the sleeve of your jacket.
This is a customize ed connect

01:14:38.913 --> 01:14:41.521
ivity.  This is maximize ed 
awareness and minimize ed 

01:14:41.522 --> 01:14:43.933
distraction.  All of this 
without sacrificing the style of

01:14:44.261 --> 01:14:48.518
 a great looking Levi's trucker 
jacket.  So now if you want to 

01:14:48.519 --> 01:14:51.298
answer a phone call or block a 
phone call, if you want to wroal

01:14:51.594 --> 01:14:55.625
 your music                  
control your music, drop a pin t

01:14:55.824 --> 01:14:58.644
o make a personal map of the 
city, access navigation so you 

01:14:58.645 --> 01:15:00.829
can get lost and get found, all 
of that can be done with a 

01:15:00.830 --> 01:15:04.023
gesture, a tap, a swipe.
Now, you might think this kind 

01:15:04.024 --> 01:15:07.314
of technology would be precious,
 but we're not make ing        

01:15:07.315 --> 01:15:10.472
make ing Levi's trucker gadgets;
 we're make ing trucker jackets.

01:15:11.219 --> 01:15:13.797
  Jean jackets.  This is a tough
 technology.  At the end of the 

01:15:13.798 --> 01:15:17.465
day you can throw in your 
backpack.  Just drop it on the 

01:15:17.466 --> 01:15:19.603
floor.  If you get this thing 
dirt ty, you put it in the wash

01:15:19.738 --> 01:15:24.588
ing machine.  This is friendly, 
easy-going technology.  This is 

01:15:24.589 --> 01:15:27.114
technology you can wash.
[LAUGHTER]

01:15:27.115 --> 01:15:31.069
&gt;&gt; But enough out of me, we 
should take a look at it in 

01:15:31.070 --> 01:15:34.307
action.  I'm going to go throw o
ne on while we watch a video

01:15:35.183 --> 01:15:37.183
      video.
[ 

01:15:39.822 --> 01:15:41.822
APPLAUSE ]

01:16:27.046 --> 01:16:29.682
ÔÖź
[ APPLAUSE ]

01:16:30.565 --> 01:16:32.624
&gt;&gt; So Paul is going to come back
 in show the jacket in a 

01:16:32.625 --> 01:16:35.813
secretary, and before         
              second, before t

01:16:36.112 --> 01:16:40.590
hat let's take a look at Google 
Jacqaurd.  It's a platform, not 

01:16:40.591 --> 01:16:44.380
just another warble.  A platform
 to create smart connected 

01:16:44.381 --> 01:16:49.245
clothes.  Consists of a garm  
    garment with some wear in 

01:16:49.246 --> 01:16:52.903
the cuff.  A piece of 
electronic, Jacqaurd tag, which 

01:16:52.904 --> 01:16:57.996
connects your jacket to the LED 
optics, and also a battery to 

01:16:57.997 --> 01:17:01.401
spar      power the jacket.  
Uses custom connecting in the 

01:17:01.402 --> 01:17:05.343
cuff to do that.
The Jacqaurd jacket can be 

01:17:05.344 --> 01:17:13.382
charge ed from any USB computer.
  We also have a Jacqaurd app on

01:17:13.562 --> 01:17:16.626
 the phone which connects your 
jacket to services in the cloud.

01:17:16.837 --> 01:17:20.157
  There is a unique challenges 
in create ing smart clothes in 

01:17:20.158 --> 01:17:26.960
platform.  Fashionable clothes 
has to work as one, but between 

01:17:26.961 --> 01:17:31.833
the two, floarks, when we design
 or jacket for the first time, 

01:17:31.834 --> 01:17:35.541
we were compromise ing garment a
esthetics.  The first design was

01:17:35.681 --> 01:17:39.381
 like this, straight line.  
Engineers like everything simple

01:17:39.635 --> 01:17:43.157
.  Everything's visible, 
everything easy to understand.  

01:17:43.158 --> 01:17:48.223
However, this is not denim.  It 
was not authentic and it didn't 

01:17:48.224 --> 01:17:52.373
look good.  So there we went the
 other way around is and made it

01:17:52.560 --> 01:17:56.914
 completely invisible, but now
         .  So we were working w

01:17:57.828 --> 01:18:02.668
ith our customers in Japan and 
in Levi's and design a new look,

01:18:02.968 --> 01:18:06.638
 weask techniques which blended 
into fabric, made it both v

01:18:06.791 --> 01:18:10.481
isible and invisible while p
reserving an authentic den 

01:18:10.482 --> 01:18:17.323
minimum look.
In fashion fit matters.  You 

01:18:17.324 --> 01:18:22.338
have any size from extra small 
to extra large.  Don't have that

01:18:22.481 --> 01:18:27.169
 in technology world.  That's 
why our Jacqaurd tag is still 

01:18:27.170 --> 01:18:30.836
flexible so it can bend around t
he cuff of any size and fit a ja

01:18:31.002 --> 01:18:33.652
cket of any size.  The design 
was inspired by the design of 

01:18:33.653 --> 01:18:36.688
classic trench colt     colt.  
Though it looks simple, it was a

01:18:36.982 --> 01:18:42.585
 long road to make it just right
.

01:18:42.731 --> 01:18:46.179
It has to be row     robust.  
Technology is fragile.  Garments

01:18:47.945 --> 01:18:51.850
            Garment is, very 
diewrnl         durable.  These 

01:18:51.851 --> 01:18:56.031
days you don't have to pull with
 two horses to prove it really 

01:18:56.032 --> 01:18:56.542
works.
[LAUGHTER]

01:18:56.543 --> 01:19:00.917
&gt;&gt; Those days are behind us. at 
least you have to be able to 

01:19:00.918 --> 01:19:06.254
wash it at the very least.
In our first test, our yarns 

01:19:06.255 --> 01:19:09.936
would brei after one or two 
washes.  So we went on and 

01:19:10.139 --> 01:19:14.858
worked hard to understand the 
reason of failure, analyze our 

01:19:14.859 --> 01:19:19.226
yarn with a microscope and put 
them to the point where we 

01:19:19.227 --> 01:19:22.733
exceed Levi's durability.  We 
don't have to treat Jacqaurd j

01:19:22.915 --> 01:19:26.141
acket any differently from 
regular jacket.

01:19:29.242 --> 01:19:35.191
ly, clothes are made by make ers
 not by consumer electronic 

01:19:35.192 --> 01:19:37.642
maker.  It is our vision that 
any apparel         apparel  

01:19:37.815 --> 01:19:40.182
       apparel make er should 
not only be

01:19:43.260 --> 01:19:46.057
 manufacture their own supply 
chain because we want to empower

01:19:46.058 --> 01:19:50.670
 the power industry to create 
this new product platform. wo

01:19:50.945 --> 01:19:53.416
rking with Levi's, we set up 
production in the same facility 

01:19:53.574 --> 01:19:58.551
ies and same location as the 
regular Levi's production.  

01:19:58.552 --> 01:20:03.416
Same        Use the exactly same
 processes to wave our          

01:20:03.417 --> 01:20:06.040
would he have been our den     

01:20:06.363 --> 01:20:09.130
          processes to we've our
 denim.  You burn with open f

01:20:09.327 --> 01:20:15.208
lames.  Our technology went 
through the same thing.

01:20:15.286 --> 01:20:19.364
The final denim was shipped to 
the aim is I seembly         

01:20:20.411 --> 01:20:24.213
     assembly technique, same t
echniques as a regular denim 

01:20:24.214 --> 01:20:28.127
jacket.  Industrial washing.  
Every gar meant goes       

01:20:28.323 --> 01:20:31.473
         garment goes through 
that.  We added some testing 

01:20:31.474 --> 01:20:34.382
facilities to understand how it 
works at the exit, but at the 

01:20:34.383 --> 01:20:39.713
end it's a regular jacket.  It 
was good and makes you look 

01:20:39.714 --> 01:20:41.714
great.

01:20:52.589 --> 01:20:54.605
SE ]
&gt;&gt; I guess what I want to say 

01:20:54.606 --> 01:21:00.008
that Jacqaurd jackets is 
foremost a jacket, it protects 

01:21:00.009 --> 01:21:02.689
you from wind and rain, keeps 
you warm, and makes you look g

01:21:02.989 --> 01:21:06.214
reat.  But much more than a 
jacket.  As the user of this 

01:21:06.215 --> 01:21:10.249
jacket, you will be able to 
configure it to connect your 

01:21:10.250 --> 01:21:14.098
favorite services, such as c
ontrol calls and messages from 

01:21:14.099 --> 01:21:16.645
the phone or use your favorite 
Google services, Google maps, 

01:21:16.646 --> 01:21:19.693
Play, or others.  You can use 
third-party services such as 

01:21:19.694 --> 01:21:23.771
Spotify, and already working 
with third parties to include 

01:21:23.772 --> 01:21:27.808
their support to the jacket.
And finally, it can be custom 

01:21:27.809 --> 01:21:31.883
services developed by you by 
developers, and we will be 

01:21:32.209 --> 01:21:35.085
releasing APIs to allow you to d
o that.

01:21:35.150 --> 01:21:38.501
Furthermore, we try to expand to
 go beyond bike ing and going to

01:21:38.654 --> 01:21:44.712
 work with athletics, business 
wear, and enterprise.

01:21:44.789 --> 01:21:50.062
But first things first.  Our 
jacket is going to be released 

01:21:50.063 --> 01:21:55.318
on the market in spring 2017.
[ APPLAUSE ]

01:21:55.401 --> 01:21:59.215
&gt;&gt; But you don't have to wait 
that long.  And you can help us 

01:21:59.216 --> 01:22:03.426
to improve the product by

01:22:08.772 --> 01:22:10.772
 -- now let's take a

01:22:13.829 --> 01:22:15.962
 look at the jacket.
[ APPLAUSE ]

01:22:13.829 --> 01:22:20.720
&gt;&gt; I'll set this right here.
There we go.  So it's a jean j

01:22:20.856 --> 01:22:22.856
acket, right

01:22:25.236 --> 01:22:28.131
?  It's got some great formal 
modifications.  The forms have 

01:22:28.132 --> 01:22:30.773
been adapt      adapted to be 
most useful for the cyclist.  

01:22:30.774 --> 01:22:32.787
Little things like the back's a 
little longer than the front so 

01:22:32.788 --> 01:22:35.852
you don't have that unfortunate 
gap when you're in your bike st

01:22:36.034 --> 01:22:39.235
ands.  Also got a full flex 
extension in the back.  You've 

01:22:39.236 --> 01:22:42.200
got maximum range of motion and 
localize ed venting to keep you 

01:22:42.201 --> 01:22:43.807
cool and comfortable on your 
ride.

01:22:43.808 --> 01:22:48.662
It's got a knit storm cuff right
 here so it holds close against 

01:22:48.663 --> 01:22:51.394
your wrist and doesn't let wind 
come up when you're on your bike

01:22:51.565 --> 01:22:56.073
.  The real magic happens over 
here on this sleeve.

01:22:56.235 --> 01:23:02.342
&gt;&gt; As you can see --
&gt;&gt; You can see fully response 

01:23:02.464 --> 01:23:06.103
ive to the wear against the fab
ric.  So there's a bunch of 

01:23:06.104 --> 01:23:09.643
different things it can do.  
Ivan, let's pick a few --

01:23:10.125 --> 01:23:14.908
&gt;&gt; This is application installed
 in the jacket right now.  

01:23:14.909 --> 01:23:17.882
Forty-five --
&gt;&gt; No, thank you, I don't need 

01:23:17.883 --> 01:23:20.009
the bird counter today.
&gt;&gt; So we have music -- we 

01:23:20.010 --> 01:23:22.969
installed music in Compass for 
you so it can control you.

01:23:23.071 --> 01:23:25.792
&gt;&gt; I love to listen to music on 
my bike.  I don't listen to this

01:23:28.302 --> 01:23:31.747
 song.  There we go.  That's my 
bike jam. 

01:23:34.756 --> 01:23:34.825
 Okay.
[ APPLAUSE ]

01:23:34.826 --> 01:23:38.353
&gt;&gt; Now, my next meeting after 
this is going to be over at Levi

01:23:38.827 --> 01:23:41.984
's stadium.  I know how to get 
there but I just like to know 

01:23:41.985 --> 01:23:44.315
how long it's going to take me.
&gt;&gt; Yeah, good idea.

01:23:44.316 --> 01:23:48.728
&gt;&gt; Your ATA is 41 minutes.  You 
should arrive by 11:01 a.m.

01:23:48.820 --> 01:23:53.847
&gt;&gt; All right.  I got to go.  If 
I'm going to make that ride I 

01:23:53.848 --> 01:23:56.329
got to get out of there.
&gt;&gt; Thank you much.

01:23:56.330 --> 01:23:58.854
[ APPLAUSE ]
&gt;&gt;

01:24:09.384 --> 01:24:14.053
new materials that allow us to 
use embedded interactions in 

01:24:14.054 --> 01:24:18.160
every day objects such as cloth
ing.  In our next project, pro

01:24:18.782 --> 01:24:23.270
ject Soly, we explore how we can
 use small set of finger 

01:24:23.271 --> 01:24:26.813
gestures to control everything 
around us.  In technical turns, 

01:24:26.814 --> 01:24:29.839
Soly can be described as a small
, tiny

01:24:34.712 --> 01:24:39.621
 radar for sense ing.  We c
reated new radar senses running 

01:24:39.622 --> 01:24:43.465
at six gigahertz that can track 
hand gesture using normal 

01:24:43.466 --> 01:24:45.466
algorithms we developed.

01:24:49.231 --> 01:24:54.163
The algorithm are really fine g
estures such as rubbing your 

01:24:54.164 --> 01:24:57.361
fingers together which allows us
 to get completely new    

01:24:57.362 --> 01:25:02.310
newjest     gesture languages 
and gesture to the phases faces.

01:25:03.039 --> 01:25:06.694
        face             faces. 
 One move     movement is a s

01:25:06.815 --> 01:25:12.685
lide er or a button.  And using 
this control should be able to 

01:25:12.686 --> 01:25:16.519
control any device around you 
with this same set of gestures, 

01:25:16.520 --> 01:25:21.380
wearables, speakers or any other
 objects.

01:25:21.457 --> 01:25:25.476
We show this vision last year at
 Google I/O and showed the proof

01:25:26.319 --> 01:25:29.215
 of concept and the potential of
 Soly captured people's 

01:25:29.216 --> 01:25:33.382
imagination.  It felt very 
future risk, almost science  

01:25:36.967 --> 01:25:40.073
We focused on bringing the 
science fiction into reality to 

01:25:40.074 --> 01:25:45.956
developers and products.  That 
was our goal.r first step was 

01:25:45.957 --> 01:25:48.839
release a Soly develop kit, 
which we did in October last 

01:25:48.840 --> 01:25:55.587
year.  The key to everything you
 need to develop your projects. 

01:25:55.947 --> 01:26:00.181
 Hardware, software, libraries, 
documentations, everything you 

01:26:00.182 --> 01:26:03.211
need.  It was early work.  We 
sent it to about 60 developers, 

01:26:03.212 --> 01:26:08.877
from 180 applications coming 
from 14 countries.  We were 

01:26:08.878 --> 01:26:11.366
quite encourage ed by diversity 
of the projects people built 

01:26:11.367 --> 01:26:14.916
using our sensor.  In this e
xample people are using Soly to 

01:26:14.917 --> 01:26:21.951
recognize materials, such as 
copper or milk or water copper. 

01:26:22.109 --> 01:26:28.143
 People use it for image ing.  
Touch interaction.  In-car r

01:26:28.441 --> 01:26:34.369
emote control.  To unlock your 
things, security and password 

01:26:34.370 --> 01:26:39.849
with gestures.  And compose and 
play music.

01:26:46.161 --> 01:26:48.161
[ APPLAUSE ]

01:26:50.275 --> 01:26:53.424
So this is selection, very first
 selection, very first few 

01:26:53.425 --> 01:26:58.048
projects developed by developers
 using our Soly sensor.  

01:26:58.049 --> 01:27:02.262
Developing and launching for 
deaf kid was important milestone

01:27:02.610 --> 01:27:06.638
, first of its kind, first radar
 you can play in your own 

01:27:06.639 --> 01:27:08.639
workshop or research lab.

01:27:11.231 --> 01:27:14.960
 we showed last year was design
ed to run in control        

01:27:14.961 --> 01:27:18.786
controlled environment and 
social lab and can allow it to 

01:27:18.787 --> 01:27:21.723
relate possibility ies over the 
radar for interaction but cannot

01:27:21.724 --> 01:27:26.097
 be really build product with 
it.  For example, it was using 

01:27:26.098 --> 01:27:28.759
so much power that our legal 
department asked me to put this 

01:27:28.760 --> 01:27:30.984
label on the back of the 
development kit.

01:27:31.064 --> 01:27:36.519
[LAUGHTER]
&gt;&gt;  

01:27:36.520 --> 01:27:38.998
Although solar chip was very 
small, still required a large 

01:27:38.999 --> 01:27:42.785
computer to run it.  Defeated 
the purpose.  So to prove that 

01:27:42.786 --> 01:27:47.126
Soly is not just a future risk 
concept, it can work inside of 

01:27:47.127 --> 01:27:52.642
the lab, we decide ed by yiewfg 
Google I/O, not only we going to

01:27:53.169 --> 01:27:56.190
 improve it but make it run on a
 smart watch      watch.

01:27:56.191 --> 01:27:58.191
[ APPLAUSE ]

01:28:01.709 --> 01:28:06.253
     &gt;&gt; So the way I think about
 it, you can make it run 

01:28:06.254 --> 01:28:11.130
anywhere you want.  So setting 
this kind of goal, it creates to

01:28:11.278 --> 01:28:14.442
 the team that the product is 
exponential, not incremental  

01:28:14.576 --> 01:28:16.867
          incremental.  For 
example, we had to drastically 

01:28:17.021 --> 01:28:19.526
decrease size and power of the 
entire system.

01:28:24.358 --> 01:28:28.558
  By working with our partners, 
we completely designed a solar 

01:28:24.358 --> 01:28:27.492
chip.  We optimize ed 
agriculture             

01:28:27.493 --> 01:28:30.107
algorithms of the system 
architecture and reduce ed power

01:28:30.723 --> 01:28:37.211
 consumption 22 times, from 1.2 
wait to 54 mill wait.       

01:28:37.780 --> 01:28:44.129
        54 medical            54
 mill link rel=stylesheet WAT  

01:28:44.294 --> 01:28:47.372
                       WATT.

01:28:50.445 --> 01:28:52.445
&gt;

01:28:53.644 --> 01:28:57.161
&gt; As I mentioned there's a 
computer around Soly.  Now, 

01:28:57.162 --> 01:29:00.293
requires super computer for the 
image ing tracking, satellite 

01:29:00.294 --> 01:29:04.204
playing or something like that. 
 Now we don't have super 

01:29:04.205 --> 01:29:07.847
computer.  This is our embedded 
platform.  Uses the same process

01:29:08.105 --> 01:29:13.217
ers as a watch.  By optimizing 
our pipeline and algorithms, we 

01:29:13.218 --> 01:29:21.927
were able to achieve 256 
reduction in code performance 

01:29:21.928 --> 01:29:25.412
while maintaining 80,000 per 
second through the radar.

01:29:25.413 --> 01:29:31.601
So you don't have to compromise 
your performance for small phone

01:29:32.047 --> 01:29:38.677
 factor.  And by the way, it's 
already on Android        

01:29:38.678 --> 01:29:40.678
Android.
[

01:29:42.279 --> 01:29:44.279
 APPLAUSE ]

01:29:46.882 --> 01:29:51.015
&gt;&gt; Nothing's free in this world,
 and there are trade-offs.  I 

01:29:46.882 --> 01:29:48.205
want to talk about one of them. 
 With every hardware reduction, 

01:29:48.206 --> 01:29:50.778
with every improvement of our 
algorithms           algorithms,

01:29:50.779 --> 01:29:55.981
 we change the radar signal.  
This is something we called a 

01:29:55.982 --> 01:29:58.157
collection of single artifacts 
that have to discover and find a

01:29:58.456 --> 01:30:01.309
 work Arnold             \work 
around\workaround.  Some        

01:30:02.085 --> 01:30:06.853
                        work 
work around.  Images, ghost 

01:30:06.854 --> 01:30:10.018
targets        targets.  A lot 
of these glitches are new and 

01:30:10.019 --> 01:30:12.904
the result of our aggressive 
reduction in hardware and 

01:30:12.905 --> 01:30:17.242
software.  So this is on-going 
research and development work.

01:30:17.678 --> 01:30:20.629
Now, I can talk more about the 
challenges and problems, but l

01:30:20.826 --> 01:30:24.980
et's get to the watch.  Let's 
show the watch.  This is the 

01:30:24.981 --> 01:30:31.279
first watch we developed.  Does 
look like a watch.  Working with

01:30:31.280 --> 01:30:35.197
 our partners electronics 
company, research team     team,

01:30:35.198 --> 01:30:38.614
 we actually build the first 
watch.  It looked like that.  

01:30:38.615 --> 01:30:45.704
But this time radar was embedded
 into the belt of the watch.  We

01:30:45.705 --> 01:30:49.176
 see in the field it looks like 
a watch.

01:30:52.860 --> 01:30:55.996
  So we went on a shrink 
hardware further.  This is very 

01:30:55.997 --> 01:31:03.051
tiny chip on the left.  Here it 
is, a watch with Soly already 

01:31:03.052 --> 01:31:06.623
neds      inside.
I have           

01:31:06.624 --> 01:31:10.349
[ APPLAUSE ]
&gt;&gt; I have it on my wrist too.

01:31:15.700 --> 01:31:17.118
It can even show time.
[LAUGHTER]

01:31:17.119 --> 01:31:22.368
&gt;&gt; That's how awesome technology

01:31:25.738 --> 01:31:27.374
is.
&gt;&gt; Now our goal is not to create

01:31:27.375 --> 01:31:29.375
 just a smart

01:31:33.474 --> 01:31:34.128
 watch but new intersections.
Nick Gillan or machine engineer 

01:31:34.129 --> 01:31:37.584
to show how it works.  Before 
let's give you a preview of what

01:31:38.193 --> 01:31:40.193
 you're going to be seeing on 
the screen.

01:31:40.305 --> 01:31:43.097
What Soly allows to do is expand
 interaction.  All of the touch 

01:31:43.098 --> 01:31:46.778
screen into the 3D space around 
it.  We don't have to use a tiny

01:31:49.355 --> 01:31:52.767
 screen.  Don't have to try to 
hit small targets.  Use the 

01:31:52.768 --> 01:31:57.079
whole space around the watch.  
So we split the space in two big

01:31:57.080 --> 01:31:59.615
 parts to interact with i
nformation on the watch, we did 

01:31:59.616 --> 01:32:02.540
largeststures around the watch. 
 Can move your hand like this 

01:32:02.541 --> 01:32:07.758
and scroll through messages or 
see interface for information.  

01:32:07.759 --> 01:32:09.997
If you want to navigate the 
interface of the watch, you can 

01:32:09.998 --> 01:32:13.522
use virtual tools as I talked a
bout, virtual dials and buttons,

01:32:13.664 --> 01:32:19.179
 so you can put your hand next 
to the watch and use them to nav

01:32:19.491 --> 01:32:22.614
igate interaction and interface 
elements.

01:32:22.695 --> 01:32:27.079
Let's take a look how it works 
and I'll get nick to         

01:32:27.234 --> 01:32:29.417
Nick to show it.
[ APPLAUSE ]

01:32:29.502 --> 01:32:31.837
&gt;&gt; Thank you.
Let's take a look at the watch. 

01:32:31.838 --> 01:32:37.316
 You can see as my hand 
approaches, it starts to react.

01:32:38.333 --> 01:32:45.023
[ APPLAUSE ]
&gt;&gt; The response iveness and 

01:32:45.024 --> 01:32:49.407
precision of radar enables us to
 create these continuous fluid i

01:32:49.706 --> 01:32:52.758
nteractions.  The blue bar here 
you can see corresponds to my 

01:32:52.759 --> 01:32:55.989
proximity to the device.  This 
enables me to glance at 

01:32:55.990 --> 01:32:58.846
information at a distance.  So 
here, for example, I can see 

01:32:58.847 --> 01:33:03.577
I've got four unread messages.  
If I come a little closer I can 

01:33:03.578 --> 01:33:07.960
see the names of the users who 
sent them.  The precision of 

01:33:07.961 --> 01:33:11.884
Soly enables me to interact with
 my new detail, such as this 

01:33:11.885 --> 01:33:16.363
scrolling type ography.  If I 
move a little closer, I can now 

01:33:16.364 --> 01:33:18.364
preview the contents of

01:33:20.824 --> 01:33:24.923
 the first message.
&gt;&gt; You can see how Soly allows 

01:33:24.924 --> 01:33:27.527
us to take the contents on the 
display and actually move them 

01:33:27.528 --> 01:33:34.087
to this      the space around 
the watch.  If I move my hand, 

01:33:34.088 --> 01:33:37.536
it resets.  Okay, but what if I 
want to interact with more 

01:33:37.537 --> 01:33:41.370
detail?  That's easy.  I just 
move my hand closer to the watch

01:33:41.371 --> 01:33:46.981
 and now I can use a virtual 
dial gesture to interact with 

01:33:46.982 --> 01:33:50.229
the complications.

01:33:54.846 --> 01:33:56.313
[ APPLAUSE ]
&gt;&gt; So here you can see I'm using

01:33:56.314 --> 01:33:58.314
 a virtual dial g

01:34:05.561 --> 01:34:06.158
esture to rotate through these 
various complications.  We've g

01:34:06.159 --> 01:34:06.554
ot the messages, the weather, 
and the calendar.  These g

01:34:06.555 --> 01:34:09.572
estures represent interactions 
with physical controls, such as 

01:34:09.573 --> 01:34:14.770
using an  anlog dial.
Because I don't have to touch 

01:34:14.771 --> 01:34:20.970
the screen, we can get a lot 
more information on the display 

01:34:20.971 --> 01:34:23.636
and of course just because 
they're micro gestures, doesn't 

01:34:23.637 --> 01:34:26.000
mean I have them right next to 
the device.  They also work at a

01:34:26.150 --> 01:34:32.053
 distance.
[ APPLAUSE ]

01:34:32.163 --> 01:34:34.903
&gt;&gt; So let's select one of the o
ther applications, the weather, 

01:34:34.904 --> 01:34:38.123
for example.  I'll remove my ha
nd and now I want to come back 

01:34:38.124 --> 01:34:41.045
in.  I can instantly look at 
what the next weather 

01:34:41.046 --> 01:34:45.968
information is.
So you can see with just a few 

01:34:45.969 --> 01:34:51.456
silly gestures, we can already 
start to build these rich 

01:34:51.457 --> 01:34:52.499
intersections               \i
nteraction\intersections  

01:34:52.822 --> 01:34:55.865
Soly embedded                

01:34:55.866 --> 01:34:57.208
\interaction\intersection 
interaction             

01:35:02.826 --> 01:35:05.759
[ APPLAUSE ]
&gt;&gt; We have another demo.  You're

01:35:02.826 --> 01:35:07.287
 going to show it.  You're very 
good at that.

01:35:07.288 --> 01:35:13.578
So we figured it as a generic to
 control all sort of devices 

01:35:13.579 --> 01:35:17.664
with a very simple set of g
estures.  To explore Soly beyond

01:35:17.954 --> 01:35:21.881
 wearables, we decide ed to take
 it in collaboration with Harmon

01:35:22.498 --> 01:35:25.652
 and their JBL brand.
[ APPLAUSE ]

01:35:25.999 --> 01:35:31.609
&gt;&gt; So here Soly allows you to 
control devices from a distance 

01:35:31.610 --> 01:35:34.207
without touching          
touching them.  This is a very 

01:35:34.208 --> 01:35:37.420
first prototype, very early work
, but the idea here is exactly 

01:35:37.421 --> 01:35:42.087
the same interaction principles 
and same gestures we design for 

01:35:42.088 --> 01:35:45.570
watch also allow

01:35:49.341 --> 01:35:54.227
 us to control the speaker, you 
can see.

01:35:54.303 --> 01:35:56.418
[ APPLAUSE ]
&gt;&gt; It's a different embody iment

01:35:56.419 --> 01:35:58.896
 but principles are the same.  
As approaching his hand, you can

01:35:58.897 --> 01:36:04.276
 see the speaker recognize and r
eacts to it.

01:36:04.506 --> 01:36:08.125
&gt;&gt; So note that the interactions
 here are much large er than the

01:36:08.274 --> 01:36:10.681
 watch, they're several feet.  
The sensor can

01:36:14.576 --> 01:36:16.108
 sense up to around 15 meters.  
We can do some pretty amazing 

01:36:16.109 --> 01:36:20.072
stuff with this.  This is the 
same thing that's in the watch.

01:36:20.073 --> 01:36:25.467
&gt;&gt; Same algorithms.
&gt;&gt; As I approach, I can now use 

01:36:25.468 --> 01:36:29.159
the virtual tool to turn on it.
ÔÖźÔÖź

01:36:29.259 --> 01:36:31.217
&gt;&gt; Let's try another track.
ÔÖźÔÖź

01:36:31.218 --> 01:36:34.730
&gt;&gt; What do you think?  Next one?
ÔÖźÔÖź

01:36:34.886 --> 01:36:39.012
&gt;&gt; Yeah, that's pretty cool.
Okay, but I can also do other 

01:36:39.013 --> 01:36:48.142
gestures, more immediate ones, 
like shut up.

01:36:48.253 --> 01:36:50.253
[

01:36:55.168 --> 01:36:57.995
 APPLAUSE ]
&gt;&gt; Thank you to Nick. to con c

01:36:58.304 --> 01:37:03.458
onclude, Soly's destruction for 
connected world, it proposes new

01:37:05.064 --> 01:37:07.535
 universal experience across 
multiple products.  It can be 

01:37:07.536 --> 01:37:12.517
wearable, mobile, automatickive
               automotive, it's 

01:37:12.518 --> 01:37:15.618
all up to your imagination.  It 
offers a third dimension of 

01:37:15.619 --> 01:37:19.229
interaction which compliments 
and enhances other modality ies 

01:37:19.230 --> 01:37:21.871
such as touch screen and voice 
input.  We don't fight with them

01:37:22.047 --> 01:37:24.429
; we work together.
In working with our partners 

01:37:24.430 --> 01:37:28.756
such as Harmon, LG, and others, 
we want to bring this new 

01:37:28.757 --> 01:37:31.718
experience to products.  But you
 don't have to wait until it 

01:37:31.719 --> 01:37:36.434
becomes a product.
Next year we're launching next 

01:37:36.435 --> 01:37:41.149
version of a Soly development k
it.  This        The Soly by 

01:37:41.150 --> 01:37:45.710
theta kit.  This will be 
embedded low power and based on 

01:37:45.711 --> 01:37:50.123
module design.  What you have is
 Soly going to be this size and 

01:37:50.124 --> 01:37:55.534
can put in your products or 
projects and explore the use of 

01:37:55.535 --> 01:37:58.660
Soly and ideas in our designs.  
We're looking forward to 

01:37:58.661 --> 01:38:05.697
exploring Soly with you..
[

01:38:11.157 --> 01:38:14.613
 APPLAUSE ]
&gt;&gt; Pretty cool, yeah?  So thanks

01:38:15.206 --> 01:38:19.884
 to Nick and Ivan and Paul.  Do 
I have the coolest job in the 

01:38:19.885 --> 01:38:22.205
world or what?
[ APPLAUSE ]All right.  So I 

01:38:22.206 --> 01:38:27.244
promise you we would talk about 
ARA A    ARA.  For those of you 

01:38:27.245 --> 01:38:29.880
who may be new, it's our vision 
for the future of phones, and e

01:38:30.028 --> 01:38:35.235
ven more so our vision for an 
entirely new hardware ecosystem.

01:38:35.891 --> 01:38:39.356
  For those of you following ARA
 for a while, you may be wonder

01:38:39.539 --> 01:38:44.007
ing what's going on with A  ARA,
 where is it?  And most 

01:38:44.008 --> 01:38:49.278
importantly when do I get one?
&gt;&gt; Would       Whoo!  Gley      

01:39:14.256 --> 01:39:14.790
&gt;&gt; Yeah.  We've talked about 
this journey from concept to 

01:39:14.791 --> 01:39:15.345
prototype.  It's made so much 
progress it's actually spun out 

01:39:15.346 --> 01:39:15.632
into its own business unit.  
With our asbestos Rick who's 

01:39:15.633 --> 01:39:16.824
here.  It's going by Richard 
wool rich.  The process we made,

01:39:16.825 --> 01:39:17.212
 Rafa Kamargo.
[ APPLAUSE ]&gt; Thank you, Dan.

01:39:17.213 --> 01:39:20.306
For the last year we've been w
orking with users, developers, 

01:39:20.307 --> 01:39:27.296
and partners.  We've implemented
 a new set of technology ies to 

01:39:27.297 --> 01:39:35.306
create a seamless experience.  
Most importantly we put

01:39:37.757 --> 01:39:39.757
 it where it counts.

01:39:41.930 --> 01:39:43.930
  Let's take a look.

01:39:45.011 --> 01:39:47.011
This is the developer's e

01:39:49.816 --> 01:39:51.816
dition.
[

01:39:53.072 --> 01:39:55.098
 APPLAUSE ]
&gt;&gt; We've integrated the phone 

01:39:55.099 --> 01:39:59.126
technology in the frame that 
frees up space for modules that 

01:39:59.127 --> 01:40:01.856
we'll create and integrate new 
functionality that you can not 

01:40:01.857 --> 01:40:05.253
get on your smartphone today

01:40:08.319 --> 01:40:10.319
.
Has

01:40:11.503 --> 01:40:15.365
 sick slots.  They're built for 
flexibility.  You can put any 

01:40:15.366 --> 01:40:19.729
module anywhere.  All slots are 
generic and support any 

01:40:19.730 --> 01:40:25.208
functionality.  Each slot 
supports up to 11.6 gigabytes 

01:40:25.209 --> 01:40:28.175
per second while consume ing 
          consume ing 1/3 of the

01:40:28.176 --> 01:40:33.756
 USB3 power.
[ APPLAUSE ]

01:40:33.823 --> 01:40:41.172
&gt;&gt; They are interconnected via 
union       Uni pro network.  

01:40:41.173 --> 01:40:46.970
That allows you to draw video to
 a coprocessor for realtime 

01:40:46.971 --> 01:40:52.822
processing.  It's ready for the 
most advance ed high performance

01:40:52.994 --> 01:40:57.279
 applications.
Modules are assigned to work 

01:40:57.280 --> 01:41:01.050
with a variety of form factors. 
 Future frames can be large er, 

01:41:01.051 --> 01:41:04.945
they can be smaller or something
 completely different than a 

01:41:04.946 --> 01:41:11.493
smartphone.  Car modules will 
work with feature frames.  

01:41:11.494 --> 01:41:16.124
Future modules, we work with 
current frames.  Protecting the 

01:41:16.125 --> 01:41:23.205
investment of both users and 
developers in modules.

01:41:23.316 --> 01:41:30.582
So how do you add functionality 
to your ARA?  Step one, plug in 

01:41:30.583 --> 01:41:38.902
a module.  Step two, use it.
[ APPLAUSE ]

01:41:40.823 --> 01:41:46.701
&gt;&gt; all right, guys.  Smile.  
There you go.

01:41:46.798 --> 01:41:48.798
It's

01:41:50.088 --> 01:41:53.160
 that simple, that easy.  No 
hunting four drivers          

01:41:53.862 --> 01:41:55.862
    for drivers

01:41:58.291 --> 01:41:59.363
.
You select the module you want 

01:41:59.364 --> 01:42:04.546
to release from the set    
settings app.  Tap it.  Then 

01:42:04.547 --> 01:42:06.829
when I turn it, so it doesn't 
fall

01:42:10.848 --> 01:42:14.980
 -- I may have gone too far on 
that.  Let me try that again.  

01:42:14.981 --> 01:42:19.716
Let's try it a different way.  
Okay, Google, eject the camera.

01:42:20.432 --> 01:42:23.426
[ APPLAUSE ]
&gt;&gt; There you go.

01:42:32.478 --> 01:42:36.902
Over this last year --
[ APPLAUSE ]

01:42:42.002 --> 01:42:47.753
&gt;&gt; Over this last year we build 
a tag not just for a smartphone 

01:42:47.754 --> 01:42:52.596
but for a truly modular compute 
ing platform.  Our silicon has 

01:42:52.597 --> 01:42:59.925
implemented the world's first Un
i pro network.  High speed, low 

01:42:59.926 --> 01:43:04.541
power, and application 
independent.  Future proof and 

01:43:04.542 --> 01:43:07.675
this time from the ground up for
 mobile.  The module connector 

01:43:07.676 --> 01:43:11.743
is built for the speed of Uni 
pro and robust.  After

01:43:15.542 --> 01:43:17.759
 10,000 connect cycles.  And 
electro mechanical latch built 

01:43:17.760 --> 01:43:23.035
with memory alloy and controlled
 from software, as you saw, c

01:43:23.182 --> 01:43:29.936
reate ing an intuitive module 
release experience.  Gray bus, 

01:43:29.937 --> 01:43:33.429
the ARA software stack, enables 
runtime detection and use of mod

01:43:34.025 --> 01:43:38.039
ules.  You just plug it and it 
works.

01:43:38.125 --> 01:43:43.032
And we have abstracted all these
       this technology in a 

01:43:43.033 --> 01:43:47.625
baseplate.  So developers can 
focus on their technology while 

01:43:47.626 --> 01:43:51.600
users will be guaranteed a 
consistent user experience when 

01:43:51.601 --> 01:43:57.286
using ARA modules.  The 
baseplate is the equivalent of a

01:43:57.439 --> 01:44:04.717
 software          software API.
  ARA is an open platform.  We 

01:44:04.718 --> 01:44:07.307
want to create a highway ec
osystem on the

01:44:10.513 --> 01:44:11.574
 scale of the software app 
ecosystem.  And to talk about w

01:44:11.575 --> 01:44:17.323
hat we're doing with modules and
 with next with ARA is our head 

01:44:17.324 --> 01:44:22.236
of create ive.
[ APPLAUSE ]

01:44:22.385 --> 01:44:25.862
&gt;&gt; Thank you, Rafa.
Good morning.

01:44:25.863 --> 01:44:28.275
So as we've been developing the 
phone, we've also been create 

01:44:28.581 --> 01:44:33.288
ing modules, and we started with
 modules that improve current 

01:44:33.289 --> 01:44:37.295
phone functionality ies.  Better
 speakers, high resolution 

01:44:37.296 --> 01:44:39.296
camera

01:44:40.330 --> 01:44:42.658
, and expandable storage.
But we also wanted to make ARA 

01:44:42.659 --> 01:44:47.460
personal.  We've developed 
modules with words, with 

01:44:47.461 --> 01:44:50.830
concrete, and modules we added 
color to it.

01:44:50.988 --> 01:44:54.119
We've also been exploring s
econdary displays, various steps

01:44:54.258 --> 01:44:59.005
 of sensors and new technology 
ies that you can't find on phone

01:44:59.181 --> 01:45:01.287
s today.
ARA is the combination much 

01:45:01.288 --> 01:45:05.343
would you tell                
beauty and function, but also 

01:45:05.344 --> 01:45:12.085
about solve ing user needs, .  
Diabetes, over 6 million adult 

01:45:12.086 --> 01:45:15.349
Americans who have diabetes 
check their glucose level 

01:45:15.350 --> 01:45:20.627
several times a day.  For that 
they have to carry many devices,

01:45:20.779 --> 01:45:24.506
 a phone and a    

01:45:28.911 --> 01:45:33.963
   glucometer.  We thought, hey,
 what if we could put all this 

01:45:33.964 --> 01:45:39.217
into a module to create a better
 glucometer?  Well, it would be 

01:45:39.218 --> 01:45:42.241
in your phone so it would be a 
lot more compact, right?  You 

01:45:42.242 --> 01:45:46.459
could also add context to the 
measurement.  If if it was 

01:45:46.460 --> 01:45:51.248
really done after sitting or 
after exercise ing.

01:45:51.328 --> 01:45:57.710
Now, the great news with ARA is 
we don't have to get -- we've 

01:45:57.711 --> 01:46:00.596
been partnering with best in 
class companies to develop 

01:46:00.597 --> 01:46:04.850
modules with us.  Companies that
 are already familiar with a 

01:46:04.851 --> 01:46:12.238
module space.  Some electro 
mechanics, home entertainment, 

01:46:12.239 --> 01:46:18.628
pen sonic           Panasonic, 
tow sheeshbia and Harmon.  Other

01:46:18.629 --> 01:46:20.959
 great products have built great
 products and never had the 

01:46:20.960 --> 01:46:23.106
chance it and opportunity to 
have their technology on phones

01:46:24.021 --> 01:46:29.772
       phones.  Companies like K
ohero, I health, backtrack, and 

01:46:29.773 --> 01:46:33.298
Got    Gotana.  Now we have a 
phone.  We have a set of modules

01:46:35.723 --> 01:46:40.158
.  Well, now we need your help. 
 So later this year we'll be 

01:46:40.159 --> 01:46:44.471
launching the developer edition 
of ARA.  It would contain a 

01:46:44.472 --> 01:46:47.843
phone, a few modules or 
essentially anything you need to

01:46:48.047 --> 01:46:51.131
 start building.  We'd like to 
ask you to think about what are 

01:46:51.132 --> 01:46:57.651
the modules that you want to 
create.  There's more to come.  

01:46:57.652 --> 01:47:02.974
We've been working on the 
consumer version of ARA.

01:47:03.071 --> 01:47:08.518
[ APPLAUSE ] be     Will be li
ght, and beautiful and we'll 

01:47:08.519 --> 01:47:11.237
launch it next year.
Mean while, I'd like to give you

01:47:11.435 --> 01:47:17.451
 a glimps of           glimpse 
of what life with ARA could be l

01:47:17.587 --> 01:47:19.009
ike.  Thank you.
[ APPLAUSE ]

01:47:19.010 --> 01:47:21.010
&gt;&gt;  
ÔÖźÔÖź

01:48:27.166 --> 01:48:31.604
[ APPLAUSE ]
&gt;&gt; So thanks to Rafa and blaze. 

01:48:31.787 --> 01:48:34.584
 Rafa and I hydrocodone and I 
have worked together for a 

01:48:34.585 --> 01:48:37.941
while.  You would think he would
 know better, the key is make 

01:48:38.100 --> 01:48:44.132
ing ARA yours and he left it up 
here, and now ARA is mine.

01:48:44.222 --> 01:48:44.867
[LAUGHTER]
&gt;&gt; Thank you.

01:48:44.868 --> 01:48:48.482
So as we said, we wanted to end 
the show with talking a little 

01:48:48.483 --> 01:48:52.064
bit about spotlight stories, and
 one of the reasons we wanted to

01:48:52.065 --> 01:48:57.564
 do that is a core ten nent of A
TAP is to remember not to lose 

01:48:57.565 --> 01:49:01.042
the human inside all this t
echnological wonder.  At AI 

01:49:01.043 --> 01:49:05.730
Disneyland            Disney 
legend Glen King drew to life d

01:49:06.021 --> 01:49:10.518
ew wet before our very eyes.  We
 had Justin Lynn's live action 

01:49:10.519 --> 01:49:13.496
take over L.A. in 360.  That 
shook our I/O session.  Well, 

01:49:13.497 --> 01:49:16.363
this year we have a really 
special treat for you, but I can

01:49:16.364 --> 01:49:19.645
 think of no better way to talk 
about our latest spotlight story

01:49:19.978 --> 01:49:26.292
 than just introducing Rashi Alg
arab.

01:49:26.523 --> 01:49:29.167
[ APPLAUSE ]
&gt;&gt; Thank you.

01:49:32.661 --> 01:49:38.633
So 2016 has been a big year for 
360 and VR.  Enthuses have their

01:49:38.634 --> 01:49:41.567
 early iest headsets and 360 
video and cameras are now become

01:49:41.723 --> 01:49:46.863
 ing main stream.  The one 
question that keeps coming up 

01:49:46.864 --> 01:49:50.308
over and over is can we tell 
stories in this new medium.  Can

01:49:50.309 --> 01:49:56.728
 we make films like the ones we 
love and ones that move us.  

01:49:56.729 --> 01:49:59.315
We've been working on this for a
 while before 360 cameras and b

01:49:59.522 --> 01:50:04.679
efore the new VR.
Besides all the efforts for 

01:50:04.680 --> 01:50:09.928
capturing or create ing immerse 
ive worlds around you, we cannot

01:50:09.929 --> 01:50:11.929
 forget one important essential 
factor in storytelling

01:50:15.822 --> 01:50:17.822
.
The stories have setups, c

01:50:17.839 --> 01:50:22.830
omplications resolutions, they 
have beginnings, middles and 

01:50:22.831 --> 01:50:25.706
ends that need to make sense.  A
 structure without which we're e

01:50:26.158 --> 01:50:28.041
asily confused or maybe not 
interested.

01:50:28.042 --> 01:50:31.640
What's most important for being 
able to tell a story to an 

01:50:31.641 --> 01:50:39.175
audience is manage ing their 
attention.  It

01:50:39.252 --> 01:50:42.617
easy for me to get your 
attention right now.  I'm here 

01:50:42.618 --> 01:50:45.941
on the the stage and you're 
seeing your chair is facing the 

01:50:45.942 --> 01:50:50.308
right way and you know the next 
thing is going to happen here.

01:50:51.468 --> 01:50:54.631
But when you're immerse ed in a 
story, it's all around you.  But

01:50:54.632 --> 01:50:59.246
 how do we tell you where should
 you look?  How do we tell you 

01:50:59.247 --> 01:51:03.044
where the next thing's going to 
happen?  How do we keep you from

01:51:03.208 --> 01:51:07.032
 getting lost or just missing an
 important moment in the story?

01:51:08.421 --> 01:51:13.421
Google spotlight stories came 
out of this challenge by being 

01:51:13.422 --> 01:51:17.690
able to create immerse ive s
tories with a structured editor,

01:51:18.005 --> 01:51:21.866
 giving film makers the tool so 
they can get the right impact 

01:51:21.867 --> 01:51:24.311
from their story even when you t
he viewer are in control of the 

01:51:24.312 --> 01:51:29.224
camera.  And we do that through 
interactive techniques that are 

01:51:29.225 --> 01:51:32.260
tune ed to manage and respond to
 your attention as you're 

01:51:32.261 --> 01:51:40.628
watching without you notice ing.
  Attentionneering.

01:51:42.428 --> 01:51:44.820
 stories will wait for you to 
look the right way.  And where 

01:51:44.821 --> 01:51:50.981
it's easy to get lost in a big 
360 video, our camera will 

01:51:50.982 --> 01:51:54.712
dynamically guide you without 
take ing control to get the best

01:51:54.902 --> 01:51:59.025
 framing for the action, like 
here we see you're interested in

01:51:59.393 --> 01:52:02.532
 this monster.  So we'll keep 
you on it.

01:52:03.571 --> 01:52:09.859
And if you get lost in the cloud
s, we will not only reward you 

01:52:09.860 --> 01:52:15.614
with a change of music, but a 
helpful actor will come over and

01:52:15.728 --> 01:52:21.225
 help you and guide you back to 
the main story.

01:52:21.309 --> 01:52:25.627
And if you're just still curious
 and want to look around, well, 

01:52:25.628 --> 01:52:33.333
you might discover sub plots.  
Gaps in other scenes, because 

01:52:33.334 --> 01:52:35.669
this world is alive around you. 
 Sometimes you have to watch 

01:52:35.670 --> 01:52:39.315
over and over before you get all
 of them.  And we know these 

01:52:39.316 --> 01:52:42.475
techniques work because we p
artnered with award winning film

01:52:43.118 --> 01:52:48.698
 makers, master's of their craft
s, and we created actual films. 

01:52:48.881 --> 01:52:55.438
 In CG animation, in classic 
hand drawn animation, and even 

01:52:55.439 --> 01:53:00.980
holly wood scale live action.
And with our story development 

01:53:00.981 --> 01:53:04.516
kit, award winning studios used 
these and other techniques to 

01:53:04.517 --> 01:53:08.969
create their own films       
films and push immerse ive 

01:53:08.970 --> 01:53:14.097
storytelling even further, 
without one line of code.

01:53:15.629 --> 01:53:18.553
In three years eight immerse ive
 interactive films with d

01:53:19.169 --> 01:53:23.695
ifferent styles and different 
voices.  It's a VR film festival

01:53:24.448 --> 01:53:27.193
.
Now, with enthusiastic reception

01:53:27.332 --> 01:53:30.497
 from the animation and film 
communities but more importantly

01:53:30.498 --> 01:53:34.017
 millions of people have already
 experience ed these stories 

01:53:34.018 --> 01:53:39.138
through the window of phone 
screen, with VR viewers like 

01:53:39.139 --> 01:53:43.464
cardboard, and now with big VR 
headsets.

01:53:43.539 --> 01:53:47.762
All these different films run on
 a tiny but powerful game engine

01:53:47.911 --> 01:53:51.918
, doing realtime graphics and an
imation 360 video and audio and 

01:53:51.919 --> 01:53:58.547
enable ing film-like content in 
realtime on mobile hardware.

01:53:58.634 --> 01:54:05.179
This engine was squeeze ed to 
less than 1 megabyte of code.  

01:54:05.180 --> 01:54:09.014
Smaller than a codec.
[ APPLAUSE ]

01:54:09.146 --> 01:54:12.796
&gt;&gt; And was delivered to billions
 of devices on one of the 

01:54:12.797 --> 01:54:20.708
largest online video platforms, 
YouTube.  Where these 

01:54:20.709 --> 01:54:26.993
interactive nonlinear films are 
accessible as a regular video.  

01:54:26.994 --> 01:54:29.741
Are     
Now, last Christmas we launched 

01:54:29.742 --> 01:54:35.326
our short called special deliver
y from arrested          a

01:54:35.607 --> 01:54:38.566
nimations.  The full environment
 of the show had to be streamed 

01:54:38.567 --> 01:54:42.271
and reconstructed on your device
 in less than one second, b

01:54:42.424 --> 01:54:45.627
ecause it's 3D and realtime and 
you can look anywhere from the 

01:54:45.628 --> 01:54:51.363
first moment you see it.
With our latest story, we pushed

01:54:51.540 --> 01:54:55.659
 our compression in nonlinear s
treaming techniques way further.

01:54:56.153 --> 01:54:58.020
  Twenty-six different 
environments, each one bigger 

01:54:58.021 --> 01:55:01.254
than the whole of the other 
story.  Each one lasting only 

01:55:01.255 --> 01:55:05.565
for a few seconds, and this is 
the first show where we 

01:55:05.566 --> 01:55:08.590
continuously cut from one shot 
to the next, 38 shots in less 

01:55:08.591 --> 01:55:11.533
than six minutes.  And the 
engine has to throw away a full 

01:55:11.534 --> 01:55:14.888
environment every time and bring
 in a new one each time seamless

01:55:15.207 --> 01:55:24.605
ly, perfect sync, without a 
hitch.  And more so with four   

01:55:24.918 --> 01:55:30.878
     four emby sonnic tracks, 3D
 position of audio, this was the

01:55:31.068 --> 01:55:34.939
 most complex and rewarding 
sound experience we've ever 

01:55:34.940 --> 01:55:39.707
created.
The story's called Pearl and is 

01:55:39.708 --> 01:55:42.278
presently merge today on YouTube

01:55:42.437 --> 01:55:44.701
         premiering today on 
YouTube.

01:55:46.195 --> 01:55:48.334
[ APPLAUSE ]
&gt;&gt; Now, before you go check it 

01:55:48.335 --> 01:55:52.812
out, I would like you to hear 
from the director himself.  He's

01:55:52.813 --> 01:55:57.829
 known for animation on big 
Tennessee           Disney films

01:55:58.587 --> 01:56:00.587
 like where he can it Ralph and

01:56:04.295 --> 01:56:06.853
 award win    winning shorts 
called paper man.  Last year he 

01:56:06.854 --> 01:56:10.927
picked up his own academy award 
for a beautiful short called 

01:56:10.928 --> 01:56:14.656
feast.  What do you do after you
 win an Academy Award?  You make

01:56:14.953 --> 01:56:18.065
 a spotlight story.
So, ladies and gentlemen, the 

01:56:18.066 --> 01:56:21.545
creator of Pearl, Patrick 
Osborne.

01:56:24.647 --> 01:56:26.647
[ APPLAUSE ]

01:56:29.286 --> 01:56:35.239
&gt;&gt; Thanks, Rashid?
A little over a year ago I 

01:56:35.240 --> 01:56:38.427
showed up Google right down the 
street here and met the amazing 

01:56:38.428 --> 01:56:43.152
minds at ATAP and I took over 
one of their fame ed whiteboard 

01:56:43.153 --> 01:56:46.822
covered conference rooms and 
began to draw up an idea, and I 

01:56:46.823 --> 01:56:50.208
wanted to make something 
memorable, beautiful, and maybe 

01:56:50.209 --> 01:56:54.076
meaningful.  And I didn't know 
it then but I was very lucky to 

01:56:54.077 --> 01:56:57.745
have met this particular group, 
these geniuses at ATAP, because 

01:56:57.746 --> 01:56:59.704
I didn't know it yet but I was 
asking for something that was 

01:56:59.705 --> 01:57:04.084
really hard, maybe impossible to
 do.  I wanted to make this 

01:57:04.085 --> 01:57:06.085
short, 

01:57:08.045 --> 01:57:10.186
 Pearl, a six-minute fully 
animated 360-degree short road 

01:57:10.187 --> 01:57:14.626
trip musical that takes place 
entirely in a beet        a 

01:57:14.627 --> 01:57:18.542
beat-up 1980 sedan with 15 
characters, more environments 

01:57:18.543 --> 01:57:22.014
that many feature films, and 
just create ing, designing and 

01:57:22.015 --> 01:57:24.535
create ing that many sets is a 
lot to handle, but on top of 

01:57:24.536 --> 01:57:28.124
that they need to be rendered in
 realtime on a phone.  And 

01:57:28.125 --> 01:57:30.461
apparently that's hard.
[LAUGHTER]

01:57:30.462 --> 01:57:33.810
&gt;&gt; So my background is in 
animation.  I've been working in

01:57:33.957 --> 01:57:38.022
 feature films for the last 13 
years, and animaters are control

01:57:38.935 --> 01:57:43.156
 freaks.  We make everything 
from scratch in every scene, but

01:57:43.157 --> 01:57:45.589
 this mobile platform was 
different.  It was going to be a

01:57:45.909 --> 01:57:50.068
 film without a frame.  The 
audience, not me, the director, 

01:57:50.069 --> 01:57:53.730
gets to decide where the camera 
goes and that feels like a lot 

01:57:53.731 --> 01:57:58.109
of control to give up at first.
But I thought about maybe 

01:57:58.110 --> 01:58:03.545
turning those limitations into 
something that would inspire the

01:58:03.546 --> 01:58:07.084
 story.  So film makers have 
been using artificial frames 

01:58:07.085 --> 01:58:09.648
within frames for -- since the 
beginning of time, or beginning 

01:58:09.649 --> 01:58:15.128
of film.  If we set this film 
entirely in a car, I could get 

01:58:15.129 --> 01:58:18.143
my fill of these pretty 
compositions by make ing frames 

01:58:18.144 --> 01:58:22.023
with the car windows themselves.
So what kind of story takes 

01:58:22.024 --> 01:58:26.751
place in a car?  I love road 
trip movies, so I thought maybe 

01:58:26.752 --> 01:58:30.245
we'd make one of those, and we 
let the audience sit in the 

01:58:30.246 --> 01:58:34.211
passenger's Saturday          
seat and treat it more like 

01:58:34.212 --> 01:58:36.724
theater than film, where I try 
to spotlight the action and 

01:58:36.725 --> 01:58:38.736
direct the attention of the 
audience, but it's completely 

01:58:38.737 --> 01:58:42.743
okay if they wander, and I made 
sure the story would read no 

01:58:42.744 --> 01:58:45.270
matter what direction they were 
looking, even if you're not 

01:58:45.271 --> 01:58:52.495
looking the right way. it would 
be some sort of road trip giving

01:58:52.496 --> 01:58:55.257
 tree kind of story, maybe a 
story about passing down your 

01:58:55.258 --> 01:58:58.488
car, and I thought what else do 
we pass on?  Personality ies, 

01:58:58.489 --> 01:59:02.475
tastes and talent maybe?  I used
 to draw with my dad as a kid.  

01:59:02.476 --> 01:59:06.091
He's a toy designer.  And I 
think more than any of the 

01:59:06.092 --> 01:59:12.678
physical things he gave me, in
cluding my high school '89 civic

01:59:12.679 --> 01:59:15.557
 hatchback, the thing I value 
most is the time we spent 

01:59:15.558 --> 01:59:18.568
together drawing when I was a 
kid.  He passed on a sense of 

01:59:18.569 --> 01:59:22.526
visual taste and the love of 
putting pen to paper, and I 

01:59:22.527 --> 01:59:24.783
think considering what I do now,
 it's probably the most valuable

01:59:25.239 --> 01:59:29.961
 thing he ever gave me.
So I decide ed to make Pearl 

01:59:29.962 --> 01:59:34.195
that, the story about passing on
 an object, your car, but also 

01:59:34.196 --> 01:59:38.310
handing down a passion or a t
alent.  In this case, not 

01:59:38.311 --> 01:59:41.325
drawing.  It was going to be 
music.  It was going to be a 

01:59:41.326 --> 01:59:44.906
musical.  So it's going to be a 
musical.  We need a song to wrap

01:59:45.223 --> 01:59:47.232
 the whole story around.  I 
decide ed         decided to 

01:59:47.233 --> 01:59:50.283
structure the story like a pop 
song itself, like verse, chorus,

01:59:51.414 --> 01:59:55.080
 bridge, and this is a little 
chart that I handed over to the 

01:59:55.081 --> 01:59:59.901
composures            composures
 at Pollen music to explain that

02:00:00.070 --> 02:00:02.913
.  I don't know how clear it 
exactly is   is, but it was to 

02:00:02.914 --> 02:00:06.193
guide them through this s
tructure and idea how that song 

02:00:06.194 --> 02:00:12.954
would be made.
So J.J. wase er and Alex      

02:00:12.955 --> 02:00:16.728
Alexis Heart wrote the song, no 
way home, and it was performed 

02:00:16.729 --> 02:00:21.599
by Kelly Schultz and Nicky 
bloom.  Pearl is out there in 

02:00:21.600 --> 02:00:23.634
the world right now.  You could 
pull out your phone and watch it

02:00:23.948 --> 02:00:30.609
 on YouTube, but the song being 
such a core, central part of the

02:00:30.610 --> 02:00:33.338
 story, I figured it would be 
really cool for I/O to actually 

02:00:33.339 --> 02:00:39.196
bring Kelly and Nicky here and d
o it live for all you guys here 

02:00:39.197 --> 02:00:44.170
and for the world.
[ APPLAUSE ]

02:00:44.245 --> 02:00:45.799
&gt;&gt; Hello.
&gt;&gt; Hello.

02:00:45.800 --> 02:00:55.500
&gt;&gt; So enjoy The Wrong  

02:00:55.813 --> 02:01:00.229
Way Home.  

02:01:03.722 --> 02:01:04.405
      .
&gt;&gt;  

02:01:04.406 --> 02:01:09.138
ÔÖź I hope you stand straight and 
tall.  These are fragile times. 

02:01:09.316 --> 02:01:14.105
 We blurred the lines.  The 
unlikely iest of places, we all 

02:01:14.106 --> 02:01:21.066
find a little grace.  There's no
 wrong way home.

02:01:22.014 --> 02:01:29.428
ÔÖź the spiral shell, the golden 
mean.  You see you're just the s

02:01:30.049 --> 02:01:37.840
um of those who have been down 
this road before.  You were 

02:01:37.841 --> 02:01:41.172
expecting more.  It won't hurt 
to rest a while.  The soft 

02:01:41.173 --> 02:01:47.021
shoulder by your side.  It ain't
 where you've been

02:03:27.584 --> 02:03:34.069
 ÔÖź There's no wrong way home ÔÖź 
   (Applause)

02:03:34.070 --> 02:03:38.274
   &gt;&gt; There is no way to finish 
that, so we're just going to say

02:03:40.878 --> 02:03:44.878
 thanks, and we'll see you next 
year at I/O. Thank you, guys. 

02:03:44.879 --> 02:03:46.879
All of you.

02:13:47.576 --> 02:13:49.913
 ÔÖź 

02:14:15.969 --> 02:14:17.969
   Google I/O

02:14:37.284 --> 02:14:41.350
    Configuring the World: Rapid
 Actioning Based on Analytic 

02:14:37.284 --> 02:14:39.284
Insights
   May 20,

02:14:42.469 --> 02:14:45.696
 2016
   11:00 a.m. PT

02:15:42.495 --> 02:15:45.395
     Francesco, one of the 
engineering leads for Firebase, 

02:15:45.396 --> 02:15:50.504
and I'm here with project 
manager Safa to introduce a new 

02:15:50.505 --> 02:15:53.908
service in the Firebase family. 
By now, I think you know what 

02:15:53.909 --> 02:15:55.909
Firebase is. It's a

02:15:58.307 --> 02:15:59.283
 cross-platform mobile back end 
sweet       suite of services 

02:15:59.284 --> 02:16:02.679
that helps you develop an app, 
grow your user base, engage your

02:16:03.090 --> 02:16:07.300
 users, and earn money. And 
Firebase remote config allows 

02:16:07.301 --> 02:16:10.397
you to instrument your 
application so you can run AB 

02:16:10.398 --> 02:16:17.597
testing of your features.
   So, why config? It's a story 

02:16:17.598 --> 02:16:20.783
that starts many years ago when 
I joined a small team that has 

02:16:20.784 --> 02:16:27.007
this big, ambitious goal in mind
 to build an open, mobile,  

02:16:27.008 --> 02:16:29.987
operating system. Back then, we 
wanted something that would 

02:16:29.988 --> 02:16:34.700
allow us to configure a few 
things for different OEMs and 

02:16:34.701 --> 02:16:40.097
carriers, for example, our all  
   old system cloud to device 

02:16:40.098 --> 02:16:46.302
message ing used config to 
determine that the period of 

02:16:46.303 --> 02:16:50.832
heartbeats to connect, based on 
carriers in different locations 

02:16:50.833 --> 02:16:53.416
in the world.
   This was so useful that it 

02:16:53.417 --> 02:16:57.333
grew really, really big. And 
when other parts of the company 

02:16:57.334 --> 02:17:03.659
figured out that this service 
existed, a lot of colleagues of 

02:17:03.660 --> 02:17:05.419
my that were building 
applications at Google started 

02:17:05.420 --> 02:17:11.116
using the system. And at some 
point, I think all major Google 

02:17:11.117 --> 02:17:15.542
app used this service. But usage
 wasn't really perfect, because 

02:17:15.543 --> 02:17:17.543
as

02:17:18.605 --> 02:17:19.816
 we built the service for the 
platform, we didn't have 

02:17:19.817 --> 02:17:23.838
compartments. So there was cross
-pollination of the 

02:17:23.839 --> 02:17:25.839
configuration files for 
applications.

02:17:26.121 --> 02:17:30.508
   Each app could read and write
 other applications'  s    

02:17:31.010 --> 02:17:34.001
          application's files. 
When we built Firebase, we 

02:17:34.002 --> 02:17:36.903
decide ed it was the right time 
to make this service right for 

02:17:36.904 --> 02:17:40.518
applications, and also for third
 party so you could use it. And 

02:17:40.519 --> 02:17:46.405
we had to do two things. First, 
we had to make sure that config 

02:17:46.406 --> 02:17:50.698
files were for apps. So, 
different apps could not be     

02:17:52.205 --> 02:17:56.818
   not edit each other.
   Manly     Mainly, it had to 

02:17:56.819 --> 02:18:01.041
scale. Eight years ago we didn't
 predict the success of Android.

02:18:01.042 --> 02:18:04.115
 Billions of devices, we had to 
re-architect the system to make 

02:18:04.116 --> 02:18:07.507
it scale at the size. And also, 
all these applications on top, 

02:18:07.508 --> 02:18:10.215
we didn't foresee they would use
 the service        service. It 

02:18:10.216 --> 02:18:14.522
was quite a complexity. And 
also, because Firebase is cross-

02:18:14.818 --> 02:18:20.330
platform, we added iOS devices 
and many more applications on 

02:18:20.331 --> 02:18:23.843
top. But we made it so today we 
have Firebase remote config,

02:18:26.941 --> 02:18:30.960
 which is a console where you 
can type values for variables to

02:18:31.124 --> 02:18:33.621
 instrument your app.
   So you can turn on and off 

02:18:33.622 --> 02:18:37.617
features in your application. 
And you can make your code 

02:18:37.618 --> 02:18:41.736
behave differently. And you can 
target devices, a group of 

02:18:41.737 --> 02:18:47.992
devices, based on language, 
carrier, operating system type, 

02:18:47.993 --> 02:18:51.024
application version, and more. 
And you can have multiple of 

02:18:51.025 --> 02:18:54.451
this in parallel. For each 
group, you can select a small 

02:18:54.452 --> 02:18:57.302
percent of them to get the 
initial configuration files, so 

02:18:57.303 --> 02:19:02.927
you can do stage rollout. That's
 important because if you 

02:19:02.928 --> 02:19:07.730
unleash -- uncover a bug, you 
contain the population that is 

02:19:07.731 --> 02:19:10.135
look     looking at the bug.
   And if you want to test 

02:19:10.136 --> 02:19:13.012
something, you get early feed
back from your users. If you 

02:19:13.013 --> 02:19:17.037
have a button that says buy, but
 you want to try get instead, 

02:19:17.038 --> 02:19:20.237
you can get early feedback from 
your users. And even further, we

02:19:20.337 --> 02:19:24.119
 connected with Firebase 
analytics. So now your A  AB 

02:19:24.120 --> 02:19:27.319
testing is really powerful, 
because you can have a feedback 

02:19:27.320 --> 02:19:31.176
loop of what works. And you can 
target a population based on 

02:19:31.177 --> 02:19:34.829
your analytics data.
   And you can do all this 

02:19:34.830 --> 02:19:40.767
without repackage ing APQ K, 
they don't have to download an 

02:19:40.768 --> 02:19:44.527
update, it works on the fly, 
changing values from the web 

02:19:44.528 --> 02:19:48.735
console. To get Firebase config 
is really simple. You pull in 

02:19:48.736 --> 02:19:55.924
the Firebase STK, an objective 
example, you download the values

02:19:56.331 --> 02:20:00.922
 when the copcation opens. And 
then throughout the code     

02:20:00.923 --> 02:20:04.519
code, you can use those variable
s to unlock new features. And 

02:20:04.520 --> 02:20:09.531
the same goes for Android. This 
is two slides into one, and the 

02:20:09.532 --> 02:20:11.727
top part initialization, and 
then you play with the variables

02:20:13.141 --> 02:20:15.328
.
   But let's see in details how 

02:20:15.329 --> 02:20:19.518
this product works and how we 
can control rocket launches. So,

02:20:19.519 --> 02:20:23.222
 please, welcome, Safa, our 
product manager.

02:20:23.223 --> 02:20:25.809
   &gt;&gt; SAFA ALAI: Thank you.

02:20:30.425 --> 02:20:31.434
   (Applause)
   &gt;&gt; SAFA ALAI: So I'm here 

02:20:31.435 --> 02:20:37.045
today to do three things. I'm 
going to introduce a new term, 

02:20:37.046 --> 02:20:42.023
wire ing up your app. I'm going 
to argue that it pays to always 

02:20:42.024 --> 02:20:46.126
wire up your app before you 
launch. And I'm going to show 

02:20:46.127 --> 02:20:51.235
you how remote config is a good 
solution for this. To do this, 

02:20:51.236 --> 02:20:54.755
we're going to have a little bit
 of fun. Let me introduce you to

02:20:54.940 --> 02:21:01.147
 rockets express, a pizza 
delivery service, inter-planet  

02:21:01.864 --> 02:21:05.833
    planetary, in the solar 
system. And, of course, this 

02:21:05.834 --> 02:21:08.437
service has an app.
   And we've packed a whole 

02:21:08.438 --> 02:21:13.150
bunch of gizmos and features in 
this app. Many of them have 

02:21:13.151 --> 02:21:16.640
never been seen or tried before.
 Do I hear you groan already 

02:21:16.641 --> 02:21:22.336
thinking, oh my God, these are 
all going to crash? So, our 

02:21:22.337 --> 02:21:25.535
whole priority has been to get 
this thing launched         

02:21:25.536 --> 02:21:27.553
launched. So, you know, there's 
the pressure. You've probably 

02:21:27.554 --> 02:21:32.635
experience ed this yourselves.
   We're aiming to get to I/O, 

02:21:32.636 --> 02:21:37.755
after all, and I mean, Jupiter's
 I  Io, the moon. And our whole 

02:21:37.756 --> 02:21:40.858
goal is to get this out there so
 we can catch the launch window.

02:21:42.246 --> 02:21:45.761
 Okay. Our launch goes pretty 
well. We shoot right past the 

02:21:45.762 --> 02:21:51.138
moon. We approach Mars. And our 
plan is to go right past Mars, 

02:21:51.139 --> 02:21:54.850
because we're going to rush to 
get to Io. But something 

02:21:54.851 --> 02:21:58.146
interesting happens now. When we
 get to Mars, we spot a bunch of

02:21:58.935 --> 02:22:02.149
 Martians, and they're having a 
pizza emergency over there.

02:22:02.150 --> 02:22:06.051
   And we realize that they 
could use our app to get their 

02:22:06.052 --> 02:22:13.654
pizza. So our CEO, that's you, 
turns up to our engineer and 

02:22:13.655 --> 02:22:17.874
says, hey, we need to get a 
message out to people to show 

02:22:17.875 --> 02:22:23.183
them how to order pizza with our
 app. Unfortunately, Toria 

02:22:23.184 --> 02:22:26.660
replies saying, sorry, sir. We 
were in such a rush to launch 

02:22:26.661 --> 02:22:30.830
that we didn't wire up our app 
in advance. So you ask, what do 

02:22:30.831 --> 02:22:36.078
we have to do? Okay. Toria says 
we were supposed -- we should 

02:22:36.079 --> 02:22:38.342
have used Firebase remote config
.

02:22:38.343 --> 02:22:41.250
   And so, the CEO asks, how 
much is it going to cost us, how

02:22:41.446 --> 02:22:45.572
 long is it going to take? And 
Toria replies, it's absolutely 

02:22:45.573 --> 02:22:52.550
free     free. And, it should be
 pretty fast. So, we have to go 

02:22:52.551 --> 02:22:58.050
back to the hangar and wire up. 
So the first question is, what 

02:22:58.051 --> 02:23:03.876
does Toria mean by "wire ing up"
 your app? You can think of your

02:23:04.044 --> 02:23:07.742
 app as this complicate ed 
spaceship. It has a lot of 

02:23:07.743 --> 02:23:11.470
systems, a lot of people working
 on it, and, of course, you can 

02:23:11.471 --> 02:23:13.952
always run down to engineering 
every time you need a change or 

02:23:13.953 --> 02:23:16.731
a corrections,              
correction, etc.

02:23:16.732 --> 02:23:19.050
   But really what you want to 
have is a control center. It's a

02:23:21.157 --> 02:23:24.254
 mission control center like you
 see here in Houston. And that 

02:23:24.255 --> 02:23:27.367
way    way, you can make changes
 without relaunching your app 

02:23:27.368 --> 02:23:32.766
every time. We like to think of 
this machine control center as 

02:23:32.767 --> 02:23:35.666
the remote config console. And 
here's the

02:23:38.951 --> 02:23:39.250
 first screen of a remote config
 console before you've entered 

02:23:39.251 --> 02:23:44.273
any machine control parameters. 
And here's a few machine control

02:23:44.458 --> 02:23:48.151
 parameters in your remote 
config console. Except we 

02:23:48.152 --> 02:23:50.568
actually call these config 
parameters.

02:23:50.569 --> 02:23:54.065
   And as you can see, they 
simply consist of key value 

02:23:54.066 --> 02:24:00.653
pairs. Okay. So, just a few 
lines of code, and you see over 

02:24:00.654 --> 02:24:04.942
here the key is special message.
 And you just get the value, not

02:24:05.174 --> 02:24:09.861
 hard at all to program this. 
And here we are, special message

02:24:10.252 --> 02:24:13.371
, we are back in the console, 
and we're putting into special 

02:24:13.372 --> 02:24:18.489
message, what we're going to say
 to our Martian friends. Okay. 

02:24:18.490 --> 02:24:23.050
We refitted our app. We came 
back. We now have a special 

02:24:23.051 --> 02:24:26.180
message. And it was important 
that we put this behind a config

02:24:26.956 --> 02:24:30.757
 parameter because maybe by the 
time we relaunch and come all 

02:24:30.758 --> 02:24:33.965
the way back, things have change
 ed and we have to say something

02:24:33.966 --> 02:24:36.674
 a little different.
   So this worked out for us, 

02:24:36.675 --> 02:24:40.756
and we left a bunch of happy 
Martian app users now, and grew 

02:24:40.757 --> 02:24:45.161
our user base. Okay. On to the 
next stage of the journey, which

02:24:45.450 --> 02:24:50.665
 is the asteroid belt. And here 
the danger is negative comments 

02:24:50.666 --> 02:24:54.158
from crashes. And our goal is to
 get through the asteroid belt 

02:24:54.159 --> 02:24:59.377
while minimize ing the negative 
comments. Clearly, crashes can 

02:24:59.378 --> 02:25:03.976
be    be -- and failures -- can 
be pretty bad for your app. 

02:25:03.977 --> 02:25:08.769
Here's some negative comments. 
First two are pretty 

02:25:08.770 --> 02:25:11.154
self-explanatory. The last one 
really gets me.

02:25:11.155 --> 02:25:15.046
   The user likes your app. It's
 a good app. They are loyal. 

02:25:15.047 --> 02:25:19.262
They want to stay with you. And 
they're working really hard to 

02:25:19.263 --> 02:25:26.291
get over tech problems. That's 
really sad. What a shame. Okay. 

02:25:26.292 --> 02:25:30.963
So, after some careful analysis 
using Firebase crash, you figure

02:25:31.481 --> 02:25:33.673
 out that there's one feature 
that's bringing

02:25:36.975 --> 02:25:37.675
 down your whole app. And you 
desperately call Toria saying, 

02:25:37.676 --> 02:25:42.960
owe     oh, no. Thinking, not 
saying, oh, no, do we have to go

02:25:43.165 --> 02:25:46.777
 back? Do we have to go refit 
our app? We have to do 

02:25:46.778 --> 02:25:49.167
everything again?
   Fortunately, Toria has been 

02:25:49.168 --> 02:25:52.964
smart. What she did, what she 
realize ed when she refitted the

02:25:53.169 --> 02:25:57.366
 rocket ship, was that she could
 actually go the whole way and 

02:25:57.367 --> 02:26:01.861
put everything behind a config 
parameter. So she put every 

02:26:01.862 --> 02:26:05.787
feature behind a config 
parameter. You can think of 

02:26:05.788 --> 02:26:12.469
these as feature flags. So, 
basically, here's -- one of the 

02:26:12.470 --> 02:26:15.754
things that helps you do this is
 this defaults file that we 

02:26:15.755 --> 02:26:20.664
have. It allows you to program 
lots and lots of features 

02:26:20.665 --> 02:26:23.750
without actually having to put 
them all on the console.

02:26:23.751 --> 02:26:28.493
   So then, only when you're on 
the console do you -- only when 

02:26:28.494 --> 02:26:31.502
you need to change it do you 
change something on the console.

02:26:31.710 --> 02:26:39.409
 Here's a local default file for
 iOS. And here's the same thing 

02:26:39.410 --> 02:26:44.790
for Android. Again, completely 
cross-platform. Everything works

02:26:44.791 --> 02:26:47.207
 on iOS and Android. And you 
fetch the local default files, 

02:26:47.208 --> 02:26:51.304
surprise, with exactly the same 
lines of code. There's no 

02:26:51.305 --> 02:26:54.722
difference. All that happens is 
when you fetch it, the override 

02:26:54.723 --> 02:26:59.388
value from the console overrides
 your local default.

02:26:59.389 --> 02:27:05.418
   And, we've done a lot of work
 to make remote config your     

02:27:05.419 --> 02:27:08.307
 very efficient. So when you 
want to get stuff from the 

02:27:08.308 --> 02:27:13.251
server, for example, you use a 
fetch call. The fetch call 

02:27:13.252 --> 02:27:16.011
checks your local cache -- 
checks your cache ed values, and

02:27:16.179 --> 02:27:20.411
 there's a time to live. And it 
sees that the time to live has 

02:27:20.412 --> 02:27:23.723
expire ed. And only when it's 
expire ed does it actually go 

02:27:23.724 --> 02:27:28.816
and fetch stuff. So, that 
relieves you of worrying about 

02:27:28.817 --> 02:27:31.995
how fresh is your stuff. What 
you do, you co-fetch anywhere 

02:27:31.996 --> 02:27:36.497
you wish. And config takes care 
of the rest.

02:27:36.498 --> 02:27:42.262
   Similar things apply to the 
rest of the API. Okay. So, now 

02:27:42.263 --> 02:27:46.096
to turn off a feature, all you 
do is you go back to your 

02:27:46.097 --> 02:27:49.623
console, and its default value 
is true, but now you turn it to 

02:27:49.624 --> 02:27:54.898
false, and that turns off the 
feature. So, thanks to Toria's 

02:27:54.899 --> 02:27:59.402
fore sight,       sight, we 
navigate ed our way through the 

02:27:59.403 --> 02:28:02.403
asteroid belt, while minimize 
ing the negative comments

02:28:06.522 --> 02:28:10.697
. Okay. Now, we finally approach
 our destination            

02:28:10.698 --> 02:28:16.008
destination, which is Io. A few 
interesting facts about Io. I 

02:28:16.009 --> 02:28:18.086
think you've guessed by now I 
like space.

02:28:18.087 --> 02:28:20.925
   It's the fifth moon of 
Jupiter, similar in size to our 

02:28:20.926 --> 02:28:25.333
moon, and it's got an iron core.
 But most importantly of all, it

02:28:25.702 --> 02:28:30.014
 looks like pizza. I mean, I 
could swear, those are olives, 

02:28:30.015 --> 02:28:34.616
and there's a pepperoni on it. 
And trust me, go search on the 

02:28:34.617 --> 02:28:39.020
internet, and people will say it
 looks like pizza. So, then we 

02:28:39.021 --> 02:28:43.393
have a real problem. Now that 
we're getting to Io, we realize 

02:28:43.394 --> 02:28:49.016
that in a moon that looks like 
Peteda        Pete      pizza, 

02:28:49.017 --> 02:28:52.706
people must know a lot about 
pizza.

02:28:52.707 --> 02:28:56.430
   Are they going to be okay 
with the basic pizza, or do we 

02:28:56.431 --> 02:28:59.471
need to experiment with 
something else, like a thick 

02:28:59.472 --> 02:29:04.999
crust pizza? That's essential. 
You, the CEO, goes to Toria and 

02:29:05.000 --> 02:29:08.730
asks, any chance we can 
experiment with thick crust 

02:29:08.731 --> 02:29:10.730
pizza? To your surprise         
surprise, Toria says, 

02:29:10.731 --> 02:29:18.004
absolutely. How come? Well, when
 you wire ed up your app, you 

02:29:18.005 --> 02:29:21.694
automatically get use of configs
 conditions. Now what you can do

02:29:22.124 --> 02:29:26.312
 is you can apply rules to 
select a subgroup of your users.

02:29:26.612 --> 02:29:31.277
 So here I am showing on the 
config console some of the rules

02:29:31.921 --> 02:29:37.319
 you can use for creating a 
condition.

02:29:37.320 --> 02:29:41.718
   And here it is. I've applied 
a specific condition, experiment

02:29:42.414 --> 02:29:46.719
 one, variant A, to special 
message. As you can see, with 

02:29:46.720 --> 02:29:51.524
this default value, it's basic 
pizza. But its experimental 

02:29:51.525 --> 02:29:56.024
value is special thick crust 
pizza. Okay. Let's look a little

02:29:56.336 --> 02:30:00.828
 bit more closely at two of 
these rules, specifically, user 

02:30:00.829 --> 02:30:07.121
in random        random 
percentile, and user in 

02:30:07.122 --> 02:30:09.627
audience. So, you've probably 
gone to a few Firebase 

02:30:09.628 --> 02:30:13.321
presentations by now, and you 
know that Firebase analytics has

02:30:13.640 --> 02:30:17.240
 a thing called audiences.
   Here in this screen, you can 

02:30:17.241 --> 02:30:20.415
see I'm creating an audience 
based on app version. And what 

02:30:20.416 --> 02:30:23.330
this does is it segments the 
user groups to something smaller

02:30:23.721 --> 02:30:28.837
 so you can target them. And 
clearly I'm calling this Io 

02:30:28.838 --> 02:30:35.923
visitors. And these audiences 
are available to Firebase as a 

02:30:35.924 --> 02:30:38.961
whole, because it's a well-
integrate ed system. So here I 

02:30:38.962 --> 02:30:42.918
am, you can see that in 
conditions for remote config, 

02:30:42.919 --> 02:30:45.130
itch a         -- I have a

02:30:48.665 --> 02:30:51.326
 dropdown showing the audiences 
available for my app. Here I'm 

02:30:51.327 --> 02:30:54.922
choose ing Io visitors, which we
 just create ed.

02:30:54.923 --> 02:30:58.351
   But I'd like to also draw 
your attention to the little 

02:30:58.352 --> 02:31:04.133
button on the right, with an 
and. And, yes, you guessed it. 

02:31:04.134 --> 02:31:09.259
It enables me to add another 
rule. Over here, I'm adding user

02:31:09.441 --> 02:31:13.541
 and percentile at 10%. So what 
this means is that I took my 

02:31:13.542 --> 02:31:18.035
audience of Io visitors, and I'm
 targeted          targeting 10%

02:31:18.750 --> 02:31:23.536
 of that audience. Now the same 
thing, it's the same exact thing

02:31:24.130 --> 02:31:26.524
, no difference, applies to 
special message.

02:31:29.747 --> 02:31:34.140
 Okay. So the next thing is, we 
need to actually track this in 

02:31:34.141 --> 02:31:37.034
Firebase analytics.
   How do we do this? Here's a 

02:31:37.035 --> 02:31:40.145
little tip, one of the things we
 can do. You can use user 

02:31:40.146 --> 02:31:42.829
properties in Firebase analytics
. Here I'm setting up experiment

02:31:45.742 --> 02:31:49.940
 one. And you set up experiment 
one in remote config to reflect 

02:31:49.941 --> 02:31:54.065
the value of -- to reflect which
 experiment is happening. So 

02:31:54.066 --> 02:31:57.440
here, I have experiment one that
 shows you either it's a default

02:31:58.154 --> 02:32:02.523
 value fire ed, or if the 
experiment one variant A spire 

02:32:03.017 --> 02:32:07.223
ed.         -- fire ed. Then a 
couple of lines of code. You get

02:32:07.420 --> 02:32:10.630
 the value of experiment one out
 of config, and you put them 

02:32:10.631 --> 02:32:14.031
into the user property.
   What this does is now every 

02:32:14.032 --> 02:32:16.756
event that goes to Firebase 
analytics is now tagged

02:32:20.534 --> 02:32:22.552
 with the value of experiment 
one, which you can then use in 

02:32:22.553 --> 02:32:24.881
the analysis by filtering for 
the value

02:32:28.440 --> 02:32:31.630
 of experiment one to see, for 
example, if it's variant A. Okay

02:32:31.846 --> 02:32:36.154
. So, what's the votes? Is it 
going to be basic pizza, or is 

02:32:36.155 --> 02:32:42.038
it thick crust pizza? I think 
the users there were very 

02:32:42.039 --> 02:32:45.128
sophisticated and they liked 
thick crust pizza.

02:32:45.129 --> 02:32:48.454
   But -- so now we want thick 
crust pizza to apply to everyone

02:32:48.833 --> 02:32:52.044
. So we go back to remote 
config, we get rid of the 

02:32:52.045 --> 02:32:56.130
condition, and we make the 
default value thick crust pizza,

02:32:56.755 --> 02:33:00.342
 and now everybody gets thick 
crust pizza. We did our 

02:33:00.343 --> 02:33:04.463
experiment, got our results, and
 set our default. And as you can

02:33:04.464 --> 02:33:09.358
 see, they're pretty happy with 
their thick crust pizza. Okay. 

02:33:09.359 --> 02:33:14.239
So now for some real spaceships 
out there explore ing the 

02:33:14.240 --> 02:33:18.959
universe. Here's Fabulous.
   It's an app that is incubated

02:33:19.341 --> 02:33:25.747
 at Duke University Center for 
Advance ed Hindsight. And its 

02:33:25.748 --> 02:33:28.952
purpose is to help you get rid 
of bad habits and replace it 

02:33:28.953 --> 02:33:37.127
with healthy rituals. I'm using 
it to improve my own sleeping 

02:33:37.128 --> 02:33:41.244
habit. You can think of Fabulous
 at the ultimate AB testing 

02:33:41.245 --> 02:33:45.672
platform. Why? Because you're 
trying to change user habits. 

02:33:45.673 --> 02:33:48.242
And user habits are very 
difficult to change. So you have

02:33:48.243 --> 02:33:51.934
 to be able to experiment like 
crazy to be able to figure out 

02:33:51.935 --> 02:33:55.345
what works for these people.
   And the Fabulous team has 

02:33:55.346 --> 02:34:01.650
wire ed up their whole app with 
config parameters that they fill

02:34:01.964 --> 02:34:08.358
ed in with JSON objects. Here's 
an example of one of their AB 

02:34:08.359 --> 02:34:12.644
testing. It's specifically 
interesting because they've 

02:34:12.645 --> 02:34:16.656
combine ed notifications, 
Firebase notifications, with 

02:34:16.657 --> 02:34:19.867
config. And as you can see at 
the top there, there is a 

02:34:19.868 --> 02:34:25.709
notification showing a little 
rocket, very relevant to us, and

02:34:27.253 --> 02:34:32.051
 a prompt. When you click on 
that, the default action is to 

02:34:32.052 --> 02:34:34.948
take you to the screen that asks
 you to set up a full screen 

02:34:34.949 --> 02:34:41.679
alarm for some activity.
   And you can -- you know, you 

02:34:41.680 --> 02:34:46.366
can choose that and get started.
 Interestingly enough, you can 

02:34:46.367 --> 02:34:49.648
now use Firebase -- they can use
 Firebase remote config to 

02:34:49.649 --> 02:34:53.736
experiment with a   a percentage
 of their population, what 

02:34:53.737 --> 02:34:55.971
happens when they click on a 
notification. In this case, when

02:34:56.238 --> 02:34:59.143
 you click on that notification,
 it comes up with something 

02:34:59.144 --> 02:35:01.927
completely different. It comes 
up with a picture of a tree 

02:35:01.928 --> 02:35:05.767
asking you a question. And if 
you answer the question, like, 

02:35:05.768 --> 02:35:10.133
as -- it's asking you if -- what
 does a tree need.

02:35:10.134 --> 02:35:12.852
   If you answer that it needs 
water, it tells you a little bit

02:35:13.045 --> 02:35:16.159
 about the research. And hope
fully that will have a different

02:35:16.353 --> 02:35:21.244
 effect on you and cause you to 
choose drink water as a good 

02:35:21.245 --> 02:35:29.647
habit to try out. Here's another
 app, Yumly. They are for choose

02:35:30.153 --> 02:35:33.331
 ing recipes. Now, I have a 
personal connection with this, 

02:35:33.332 --> 02:35:37.259
which is I often have to cook 
meals for my daughter. And I 

02:35:37.260 --> 02:35:42.350
have to admit, cooking is not my
 strong suite, all the free food

02:35:42.351 --> 02:35:46.754
 at Googling. And I actually 
struggle often to come up with a

02:35:47.349 --> 02:35:50.855
 good recipe that she actually 
likes.

02:35:50.856 --> 02:35:54.666
   Well, Yumly helps me out with
 dietary preferences, shopping 

02:35:54.667 --> 02:36:00.056
lists, and everything that goes 
with it to help me find a good 

02:36:00.057 --> 02:36:03.463
meal. So they wanted to 
experiment with their Connect 

02:36:03.464 --> 02:36:06.657
screen. And it's the first 
screen that their users see. And

02:36:07.877 --> 02:36:11.557
 what they wanted to do is find 
out how can they improve their 

02:36:11.558 --> 02:36:15.065
log-in -- how they can improve 
their conversion to log-in. 

02:36:15.066 --> 02:36:17.748
Here's a bunch of parameters, 
and a bunch of conditions that 

02:36:17.749 --> 02:36:22.146
they've set up to test just 
that.

02:36:22.147 --> 02:36:25.266
   Now, one of these tests was 
interesting to me. And I'm 

02:36:25.267 --> 02:36:29.752
showing it to you over here. On 
the left, with A, you can see 

02:36:29.753 --> 02:36:33.265
that they have a generic screen.
 And on the right, they have a 

02:36:33.266 --> 02:36:37.851
contextualize ed screen based on
 the user's search, or based on 

02:36:37.852 --> 02:36:41.563
some other parameter. And so, it
 would stand to reason that a 

02:36:41.564 --> 02:36:43.954
contextual screen would have a 
better impact on

02:36:47.204 --> 02:36:51.374
 log-in, right? Well, wrong. 
It's not. It doesn't do that. 

02:36:51.375 --> 02:36:54.453
They actually ran this 
experiment, and they found out 

02:36:54.454 --> 02:36:57.166
that their generic screen was 
much more effective.

02:36:57.167 --> 02:37:01.172
   In fact, with search, their 
generic screen was twice as 

02:37:01.173 --> 02:37:05.461
effective. And with the recipes,
 the generic screen was 20% more

02:37:05.674 --> 02:37:08.469
 effective. So they went back 
and actually got everything back

02:37:08.680 --> 02:37:12.386
 to generic. And it really goes 
to confirm how important it is 

02:37:12.387 --> 02:37:16.173
to be able to experiment with 
stuff before you actually go in 

02:37:16.174 --> 02:37:22.057
with assumptions. Okay. A few 
words on conclusion now

02:37:25.675 --> 02:37:29.664
. When you -- many of us, when 
we're creating adaptive         

02:37:29.665 --> 02:37:33.089
 -- apps, not only do we want to
 run a great business, but we 

02:37:33.090 --> 02:37:36.182
would really like to go and have
 an impact on the world, and 

02:37:36.183 --> 02:37:40.562
change how people do things. , 
perhaps go further and change 

02:37:40.563 --> 02:37:43.574
how people think, and perhaps go
 even further and change what is

02:37:43.575 --> 02:37:45.575
 possible.

02:37:46.863 --> 02:37:50.956
   So, to do this, we have to 
have a close conversation with 

02:37:50.957 --> 02:37:54.689
our users. You can -- with apps,
 you really have the potential 

02:37:54.690 --> 02:37:58.881
to talk to millions of people, 
affecting how they think and how

02:37:59.374 --> 02:38:04.261
 they live, . With the very 
greatest apps, and the greatest 

02:38:04.262 --> 02:38:05.980
conversations              
conversations, you can profound

02:38:05.981 --> 02:38:12.890
ly shape our culture. To succeed
 in this conversation, you need 

02:38:12.891 --> 02:38:14.910
to instrument your app so that 
you can listen to see what users

02:38:15.267 --> 02:38:17.267
 are up to. And we

02:38:19.577 --> 02:38:20.367
 know that Firebase analytics 
provides you a free and easy 

02:38:20.368 --> 02:38:22.368
solution

02:38:24.378 --> 02:38:28.366
 to do so.
   But, listening is only half 

02:38:28.367 --> 02:38:31.121
of this conversation. The other 
half is to be able to respond 

02:38:31.122 --> 02:38:36.270
fast to what users throw your 
way. And responding fast is 

02:38:36.271 --> 02:38:40.961
essential because that way users
 can stay engaged, and they can 

02:38:40.962 --> 02:38:42.984
understand that you're being 
responsive, and making changes 

02:38:42.985 --> 02:38:49.788
that make sense for them. So 
we've built Firebase Remote 

02:38:49.789 --> 02:38:54.765
Config to make it easy to do 
just this -- respond fast. It's 

02:38:54.766 --> 02:38:59.994
got a simple API. It's got a 
straightforward console. It 

02:38:59.995 --> 02:39:02.690
scales massively. And it's 
integrated with analytics.

02:39:06.233 --> 02:39:12.283
   What --    remains for you to
 do is to wire up your app 

02:39:12.284 --> 02:39:14.491
before you launch. So you can 
always complete your 

02:39:14.492 --> 02:39:19.991
conversation with your users. 
Here's what you can do next. The

02:39:20.284 --> 02:39:27.284
 documentation is at fire      
fire     firebase.google.com/

02:39:28.094 --> 02:39:34.785
remote config. You Can         
You can also look at our 

02:39:34.786 --> 02:39:40.870
support, and at our YouTube and 
Twitter feeds. On behalf of 

02:39:40.871 --> 02:39:44.989
Francesco and myself, thank you 
very much for coming today, and 

02:39:44.990 --> 02:39:49.099
we really look forward to seeing
 what you do with Firebase 

02:39:49.100 --> 02:39:52.783
Remote Config so that we can 
actually make it better.

02:40:16.390 --> 02:40:20.891
(Applause)
 (Session concluded at 11:37 

02:40:20.892 --> 02:40:26.700
a.m. TP)     PT)

03:51:18.130 --> 03:51:20.747
&gt;&gt; 
&gt;&gt; 

03:51:20.748 --> 03:51:21.748
&gt;&gt; 
&gt;&gt; 

03:51:20.748 --> 03:51:21.748
&gt;&gt; 
&gt;&gt; 

03:51:20.748 --> 03:51:22.748
&gt;&gt;

03:58:18.912 --> 03:58:20.912
.  

03:58:22.686 --> 03:58:24.686
May 20, 2016   

03:58:26.841 --> 03:58:29.911
FB23 best    Best practices     
    Practices for a great   

03:58:30.373 --> 03:58:32.373
  Great sign-

03:58:35.588 --> 03:58:37.588
     Sign-in  

04:01:24.629 --> 04:01:26.629
&gt;&gt;

04:03:12.119 --> 04:03:17.673
 Welcome!  My name is Seba.  I'm
 a UX designer at Google.  I'm 

04:03:17.674 --> 04:03:19.674
here

04:03:20.724 --> 04:03:28.329
 today together withal foes    
         with Alfonzo and John 

04:03:28.330 --> 04:03:32.933
and I'll talk about online 
identity and how to make it 

04:03:32.934 --> 04:03:36.888
better.  First, what's        
what's your name, you taking a 

04:03:36.889 --> 04:03:39.489
picture?
&gt;&gt; Libby. 

04:03:39.490 --> 04:03:44.102
&gt;&gt; Hi, I'm Seba.  That is pretty
 normal, everyday identity 

04:03:44.103 --> 04:03:48.594
experience.  Just ask somebody 
their name, now we know each 

04:03:48.595 --> 04:03:52.753
other.  Now I can refer to her. 
 Now I can even make this 

04:03:52.754 --> 04:03:54.754
presentation better

04:03:56.486 --> 04:03:58.486
. 

04:04:05.386 --> 04:04:10.413
 Let's say I have an app with 
food.  Libby is trying to use 

04:04:10.414 --> 04:04:12.744
it.  She'll have is to decide if
 she already has an account or 

04:04:12.745 --> 04:04:16.698
not.  She kind of heard about 
the app before, but she's not 

04:04:16.699 --> 04:04:22.608
sure.  She's tried to sign up 
for the app.  So she'll have to 

04:04:22.609 --> 04:04:28.595
speaker                 have to 
enter the e-mail and type two 

04:04:28.596 --> 04:04:32.564
times her password.  And the 
account all right exists.  She 

04:04:32.565 --> 04:04:37.364
forgot that she already sign up 
sometime ago.    

04:04:37.365 --> 04:04:42.950
So she tries to sign in.  She 
types her password that she uses

04:04:45.239 --> 04:04:48.215
 every day.  Libby, please don't
       don't use the same 

04:04:48.216 --> 04:04:52.101
password always.  It's not safe,
 by the way.  Anyway, she tries 

04:04:52.102 --> 04:04:55.839
and it's not the same password 
that she used last time.  And 

04:04:55.840 --> 04:04:59.092
since Libby is my best client 
ever and she's going to keep 

04:04:59.093 --> 04:05:03.568
pushing to use this app, she's 
going through the recovery flow.

04:05:03.569 --> 04:05:09.178
  So she'll have to type her 
user name, check her e-mail, go 

04:05:09.179 --> 04:05:13.032
click here, and then she'll be 
back to reset the password.  

04:05:13.033 --> 04:05:18.653
She'll type two times again her 
password, and success.  The 

04:05:18.654 --> 04:05:22.277
password, a success.  She tries 
to sign in.  Thank you, Libby, 

04:05:22.278 --> 04:05:23.844
by the way.  You're the best.   

04:05:23.845 --> 04:05:30.525
So she signs in, types another 
password and finally, Libby, 

04:05:30.526 --> 04:05:33.963
you're in.  She can use my app. 
 But you never notice that your

04:05:34.159 --> 04:05:37.473
      you're signing into the 
website, not the app, because 

04:05:37.474 --> 04:05:41.364
the recovery flow is a web flow.
  So you have to switch.  

04:05:41.365 --> 04:05:45.629
Finally, another password, and 
you're in.  Thank you, Libby.  

04:05:45.630 --> 04:05:49.536
You're the best.  Please, for 
Libby.  

04:05:49.537 --> 04:05:51.537
(Applause)

04:05:52.615 --> 04:05:57.217
 so, as you can see, it's not 
very easy for Libby to remember 

04:05:57.218 --> 04:06:02.014
passwords, even to remember that
 she had an account

04:06:05.156 --> 04:06:06.941
 or how they sign in.  You can 
use password and phone numbers. 

04:06:06.942 --> 04:06:12.019
 You can use IDPs.  And it's, 
quite frankly, very difficult.  

04:06:12.020 --> 04:06:17.622
And also, in my -- I'm ashamed 
to say this -- 17 years of 

04:06:17.623 --> 04:06:20.575
experiencing of signing in 
websites and apps, I never had 

04:06:20.576 --> 04:06:26.664
the client asking me or telling 
me this:  A magical experience 

04:06:26.665 --> 04:06:29.848
is going to start by asking 
everyone   body to sign up or 

04:06:29.849 --> 04:06:32.783
pass      type a password.  That
 doesn't happen.  It usually 

04:06:32.784 --> 04:06:34.784
goes, we have this app and this 
technology is going to do

04:06:35.304 --> 04:06:36.030
             going to do do this
 and it will be            it 

04:06:36.031 --> 04:06:37.745
will be awesome and it will be
            it will be great and

04:06:37.746 --> 04:06:40.322
 Libby will love it.  So, yeah, 
right, you have to sign in users

04:06:40.753 --> 04:06:43.807
.  Oh, yeah, and you have to 
sign up to creates         

04:06:43.808 --> 04:06:45.808
create acts      accounts.  
Well, after that it will be   

04:06:45.890 --> 04:06:46.854
         it will be awesome and 
it will be            it will be

04:06:46.855 --> 04:06:50.166
 great and we'll do this and 
that.  Blah, blah, blah.    

04:06:50.167 --> 04:06:54.442
And to be honest, that happens a
 lot, and it is how it should be

04:06:54.675 --> 04:06:59.429
              it should be.  You
 should not care about your 

04:06:59.430 --> 04:07:02.716
system, because it's not your 
business, not your core 

04:07:02.717 --> 04:07:05.272
functionality, but the downside 
is that without that nothing 

04:07:05.273 --> 04:07:07.273
works

04:07:08.497 --> 04:07:14.940
.  Here, no one ever said that. 
 So it's also very difficult for

04:07:14.941 --> 04:07:17.117
 developers to cover that.  You 
have to cover all these cases.  

04:07:17.118 --> 04:07:20.623
You have to keep it secure all 
the time, and you have to cover 

04:07:20.624 --> 04:07:24.540
all these flat      platforms 
that Libby uses, like phone, 

04:07:24.541 --> 04:07:30.112
watches, computers, blah, blah, 
blah.  And it's very difficult. 

04:07:30.429 --> 04:07:33.563
 So we believe that it should be
 simpler and should be          

04:07:33.564 --> 04:07:38.468
 should be easier.  Today we're 
going to talk about this three 

04:07:38.469 --> 04:07:42.556
products that we're working on 
to make that thing happen.    

04:07:42.557 --> 04:07:46.507
John.  
&gt;&gt; JOHN HJELMSTAD:  Thanks, 

04:07:46.508 --> 04:07:52.399
Seba.  I'm John.  I'm the lead 
on the identity platform.  If 

04:07:52.400 --> 04:07:55.758
you went to the Chrome web 
security talk yesterday, one of 

04:07:55.759 --> 04:07:57.655
the interesting details you 
might have learned is that the 

04:07:57.656 --> 04:07:59.656
top password

04:08:01.236 --> 04:08:06.262
 in 2015:123456.  It's follows
 ed very quickly by the number 

04:08:06.263 --> 04:08:11.656
two, which is 78.  And if you 
look at the top 20 passwords, 

04:08:11.657 --> 04:08:15.525
you'll see six of the top 20 are
 actually number sequences 

04:08:15.526 --> 04:08:18.049
between one and four and one and
 nine.  Most of the rest of them

04:08:18.351 --> 04:08:20.992
 are character sequences 
straight down the line as well. 

04:08:22.749 --> 04:08:26.879
 QRTY, things like this.  There 
are two ways we can look at this

04:08:27.086 --> 04:08:29.334
.  One is a problem statement 
that we talk about a lot of the 

04:08:29.335 --> 04:08:32.930
time.  This is a huge problem 
when people secure their lives, 

04:08:32.931 --> 04:08:35.590
online communication, their 
payments information, their 

04:08:35.591 --> 04:08:38.391
financial information and so on 
online.    

04:08:38.392 --> 04:08:41.002
I think that's been pretty well 
documented.  The other way we 

04:08:41.003 --> 04:08:43.470
can view this is as an 
opportunity.  That's what we see

04:08:43.471 --> 04:08:48.195
 with identity platform as well.
  The opportunity is engendered 

04:08:48.196 --> 04:08:51.480
in the fact that the salient 
feature of them not that they're

04:08:51.481 --> 04:08:54.926
 bad, it's that they're simple. 
 Users demand that degree of 

04:08:54.927 --> 04:08:58.189
simplicity.  It's our challenge 
as the developer community 

04:08:58.190 --> 04:09:01.144
overall to present an equally 
simple user experience that 

04:09:01.145 --> 04:09:05.080
increases the user security.  
That's the theme underlying our 

04:09:05.081 --> 04:09:08.291
work with Google sign-in        
 sign-in in the last year.  

04:09:08.292 --> 04:09:10.918
Google sign-in         sign-in 
is a product we're familiar with

04:09:10.919 --> 04:09:16.516
 helping users sign in to their 
account or your website.  To 

04:09:16.517 --> 04:09:20.586
help similar me            
simplify this in the last year, 

04:09:20.587 --> 04:09:23.281
I'm sure everybody has seen a 
consent screen, which is the 

04:09:23.282 --> 04:09:27.853
first thing you see when you 
type Google sign-in         

04:09:27.854 --> 04:09:30.368
sign-in.  It's a wall of text.  
A bunch of stuff to read and 

04:09:30.369 --> 04:09:32.698
understand.  You might ask 
yourself what actually am I 

04:09:32.699 --> 04:09:36.126
sharing with this site?  Does 
the site even really need it?  

04:09:36.127 --> 04:09:39.096
Are they going to spam me?  What
 actually is here.  It's not 

04:09:39.097 --> 04:09:41.844
especially clear.   
Every moment that the user 

04:09:41.845 --> 04:09:44.449
pauses to consider any of these 
questions is a moment they could

04:09:44.941 --> 04:09:47.941
 bail out of your app to begin 
with.  Not everybody is quite as

04:09:48.115 --> 04:09:51.425
 persistent as Libby.  What did 
we do to help counter this?  We 

04:09:51.426 --> 04:09:57.874
created the account trip UI.  
Based account trip UI shows 

04:09:57.875 --> 04:09:59.875
exactly the information that 
will be shared with the web

04:10:02.440 --> 04:10:04.440
 side

04:10:12.730 --> 04:10:15.149
.   
The core nlveth        

04:10:15.150 --> 04:10:18.613
information we found, photo URL,
 name, and e-mail address.  It's

04:10:18.614 --> 04:10:20.833
 just that simple.  Let's take a
 look at what it looks

04:10:24.136 --> 04:10:27.957
 like with doodle      Doodle.  
At that point the information, 

04:10:27.958 --> 04:10:30.829
and you're in.  Doodle can sign 
you in or sign you up using that

04:10:31.755 --> 04:10:35.153
 information pretty straight 
forwardly.    

04:10:35.154 --> 04:10:39.511
I'm happy to announce that while
 we released account chip for 

04:10:39.512 --> 04:10:44.639
Android during last Google I/O, 
we'll be rolling it out on web 

04:10:44.640 --> 04:10:47.994
and IOS finally so you have the 
same experience no matter which 

04:10:47.995 --> 04:10:50.600
platform you start on.  That's 
only half the experience.  We 

04:10:50.601 --> 04:10:54.445
also wanted to work to simplify 
the integration password for 

04:10:54.446 --> 04:10:57.721
developers and make it faster 
and more robust.  We did so by 

04:10:57.722 --> 04:11:01.784
folk go all of our STKs around 
the concept of ID tokens.  ID 

04:11:01.785 --> 04:11:05.722
tokens are JSON web tokens, 
which includes a bunch of 

04:11:05.723 --> 04:11:07.457
information, including the 
profile information that I just 

04:11:07.458 --> 04:11:11.420
mentioned to you of        you 
before.  That's partnered with a

04:11:11.421 --> 04:11:17.813
 cryptographically signature, 
verify identified using 

04:11:17.814 --> 04:11:20.985
libraries open source as well as
 provided as part of Firebase 

04:11:20.986 --> 04:11:23.935
authentication, service side SDK
.    

04:11:23.936 --> 04:11:27.692
To illustrate how this helped 
simplify for your site, let's 

04:11:27.693 --> 04:11:30.269
talk about the old flow.  This 
is the old flow wherein you call

04:11:30.673 --> 04:11:34.804
 the sign-in API and you'll get 
an access tunneling           

04:11:34.805 --> 04:11:39.365
token or code, either you'll be 
having to send to your app back 

04:11:39.366 --> 04:11:43.127
in.  If it's a code you exchange
 it for an access token.  In 

04:11:43.128 --> 04:11:48.032
either case, you have an app 
back in that user info call to 

04:11:48.033 --> 04:11:50.360
the identity providers and 
actually get the user 

04:11:50.361 --> 04:11:52.639
information that you translate 
into an account record.    

04:11:52.640 --> 04:11:55.654
Now, this is a live -- this is 
important to note this is a live

04:11:55.881 --> 04:11:59.082
 call that happens while the 
user is signing in, so it has 

04:11:59.083 --> 04:12:01.664
latency.  A bunch of things can 
go wrong.  It's not standardized

04:12:02.338 --> 04:12:05.080
 either over identity providers.
  So you need to implement 

04:12:05.081 --> 04:12:07.483
custom code to be able to pull 
the stuff apart       apart, 

04:12:07.484 --> 04:12:09.703
actually get the information you
 need, name, e-mail address, and

04:12:09.883 --> 04:12:12.131
 so on, and translate that into 
user record, which is 

04:12:12.132 --> 04:12:14.884
represented as a cookie or 
session info.    

04:12:14.885 --> 04:12:18.038
Now, as developers we know that 
less is more.  And any complex 

04:12:18.039 --> 04:12:22.933
at this is bad complexity due to
 Murphy's  's law.  Anything 

04:12:22.934 --> 04:12:25.766
that can go wrong will Peopling 
wrong                           

04:12:25.767 --> 04:12:30.256
wrong will go wrong.  We have to
 make a request to the get info 

04:12:30.257 --> 04:12:32.220
endpoint          endpoint and 
figure out what the information 

04:12:32.221 --> 04:12:35.068
is and return it.  Let's take a 
look at what the ID toke 

04:12:35.069 --> 04:12:38.354
especially looks like.  Now you 
call the sign-in SDK.  In 

04:12:38.355 --> 04:12:40.807
response you'll get an ID token.
  That can be             That 

04:12:40.808 --> 04:12:44.871
can be sent to your app back end
 and be decoded by verifying its

04:12:45.110 --> 04:12:47.993
 significant                 its
 signature.  Once it's verified,

04:12:48.119 --> 04:12:50.791
 it can be trusted.  That 
information contains all the 

04:12:50.792 --> 04:12:52.615
basic profile information we 
included before, which can be 

04:12:52.616 --> 04:12:57.572
used to translate into a account
 record on your back end, as 

04:12:57.573 --> 04:12:59.499
simple as that.   
Take a look at what this looks 

04:12:59.500 --> 04:13:02.276
like on the client as well as 
the server side.  On the client,

04:13:02.277 --> 04:13:05.612
 you'll notice here on Android, 
as an example, that our default 

04:13:05.613 --> 04:13:08.647
setting is now simply just to 
request basically profile 

04:13:08.648 --> 04:13:13.572
information.  You build a goal 
API client.  You Google    

04:13:13.843 --> 04:13:18.043
                        Google 
API client.  You you'll be able 

04:13:13.843 --> 04:13:16.877
to pull up the ID token, just as
 simple as that.    

04:13:16.878 --> 04:13:20.404
Now, the Firebase authentication
 server side SDK has been 

04:13:20.405 --> 04:13:23.899
launched with the rest of the 
Firebase authentication product,

04:13:24.081 --> 04:13:27.911
 which we announced two days ago
.  It expose an API that you can

04:13:28.120 --> 04:13:31.722
 see right here called verify ID
 token, which does all the heavy

04:13:31.837 --> 04:13:35.846
 lifting of decode ing the token
, verifying the token and the 

04:13:35.847 --> 04:13:39.700
security checks.  Once the token
 has been decoded, it tans all 

04:13:39.701 --> 04:13:41.811
the information that you need.  
Contains     

04:13:42.428 --> 04:13:47.894
                                            contains
 all the information that you 

04:13:42.428 --> 04:13:44.278
need. .   
Java discrepancy looks    

04:13:47.009 --> 04:13:56.258
same.  We support no. JS, which 
exposes the same method, verify 

04:13:56.259 --> 04:13:57.437
ID     

04:13:57.438 --> 04:14:01.638
JavaScript looks very much the 
same.  We support no. JS, which 

04:13:57.438 --> 04:13:58.364
exposes the same method, verify 
ID token.  In its response, 

04:13:58.365 --> 04:14:01.327
you'll have      have all the 
information you need.  So much 

04:14:01.328 --> 04:14:05.519
as          As much as we love 
Google sign-in         sign-in, 

04:14:05.520 --> 04:14:08.075
and I do, there are a number of 
bass      password accounts as 

04:14:08.076 --> 04:14:12.283
well.  Identity platforms helps 
improve, for that I introduce 

04:14:12.284 --> 04:14:18.026
Stevenson he have            
       Stephen Soneff. 

04:14:18.027 --> 04:14:19.544
(Applause) 
&gt;&gt; STEVEN SONEFF:  My name is 

04:14:19.545 --> 04:14:22.244
Stephen.  I'm the product 
manager on the Google identity 

04:14:22.245 --> 04:14:24.690
platform.  Today we'll talk 
about what happens next.  So 

04:14:24.691 --> 04:14:28.154
once you've taken John's  's 
advice and you've added a Google

04:14:28.508 --> 04:14:30.698
 sign-in         sign-in button 
on your app, you have a sign-in

04:14:31.343 --> 04:14:31.981
           a sign-in strewn    
              a sign-in screen 

04:14:31.982 --> 04:14:35.219
that looks like that.  Let's see
 what happens to Libby.  There 

04:14:35.220 --> 04:14:37.843
are a few buttons at the top, 
and you have to remember which 

04:14:37.844 --> 04:14:39.735
one it is that you picked last 
time and have to sort out what 

04:14:39.736 --> 04:14:42.859
will happen if you pick a 
different button next time.  

04:14:42.860 --> 04:14:45.364
There's still problems of all 
those legacy existing users who 

04:14:45.365 --> 04:14:48.766
have a user name and pass 
worried                  and 

04:14:48.767 --> 04:14:53.357
password.  There is the problem 
of sign-in         sign-in and 

04:14:53.358 --> 04:14:57.218
sign-up UFI and the confusion 
between them.  It gets worse 

04:14:57.219 --> 04:14:58.896
when you get to mobile.  It 
could be             It could be

04:14:58.897 --> 04:15:02.363
 really painful.    
So all of these pieces add up.  

04:15:02.364 --> 04:15:05.322
In studies that we've done and 
industry research that we've 

04:15:05.323 --> 04:15:08.485
looked at, we find that nearly 
half of people who see a sign-up

04:15:08.904 --> 04:15:11.259
 or sign-in         sign-in 
screen don't       don't 

04:15:11.260 --> 04:15:13.278
actually complete the action 
successfully.  This can range 

04:15:13.279 --> 04:15:16.619
from all manner of things, from 
picking the wrong button and 

04:15:16.620 --> 04:15:20.354
getting into a confusing 
situation to remembering -- 

04:15:20.355 --> 04:15:23.095
having to remember your password
 and recover it, to being 

04:15:23.096 --> 04:15:25.766
confused about trying to create 
an account when one already 

04:15:25.767 --> 04:15:28.529
exists.  Probably an experience 
that you've seen yourself.  So 

04:15:28.530 --> 04:15:31.588
if you put all these little 
pieces together, it can be a 

04:15:31.589 --> 04:15:35.536
really major drop-off in the 
users that you see to your app, 

04:15:35.537 --> 04:15:38.210
that if potentially half of the 
users who are trying to complete

04:15:38.928 --> 04:15:43.330
 a transaction or sign up or 
subscribe to your app are 

04:15:43.331 --> 04:15:46.210
dropping off in one of these 
flows, that's as many as twice 

04:15:46.211 --> 04:15:49.625
as many users you could have if 
you smooth these flows out.  

04:15:49.626 --> 04:15:53.664
That's what we will take a look 
at today.  The Smartlock set of 

04:15:53.665 --> 04:15:56.390
API he is           APIs can 
assist the user, make it easy to

04:15:56.598 --> 04:15:59.336
 create an account to sign up, 
or to be able to sign back in 

04:15:59.337 --> 04:16:02.014
automatically.    
Now, we launched Google 

04:16:02.015 --> 04:16:04.869
Smartlock on Android last year. 
 Some of the new things we'll 

04:16:04.870 --> 04:16:07.357
talk about this year are the 
ability to automatically sign in

04:16:07.358 --> 04:16:12.757
 in the web in Chrome, new APIs 
that we assist in signing up.  

04:16:12.758 --> 04:16:15.006
Most importantly, I think what 
we really want to look at is 

04:16:15.007 --> 04:16:18.856
some of the great implementation
s that partner apps, developers 

04:16:18.857 --> 04:16:21.402
many of whom are in the audience
 have done, and the great 

04:16:21.403 --> 04:16:24.812
performance they have seen.    
Let's do a quick recap of the 

04:16:24.813 --> 04:16:27.600
main pieces of functionality 
that the Smartlock provides.  

04:16:27.601 --> 04:16:33.318
Majeure at I/O and           
         Imagine you're in line 

04:16:33.319 --> 04:16:39.460
in I/O, you pull out the ticket.
  Here is ticket master.  And 

04:16:39.461 --> 04:16:42.052
instead of having to remember 
your user name and password, the

04:16:42.234 --> 04:16:45.315
 app simply shows you this blue 
car and your ticket right away. 

04:16:45.508 --> 04:16:48.013
 There is no fumbling, having to
 recover your account while 

04:16:48.014 --> 04:16:50.903
everyone is waiting in line 
behind you.  Probably reduces 

04:16:50.904 --> 04:16:53.590
the stress a lot when you're in 
a tight situation.   

04:16:53.591 --> 04:16:56.082
So that's really nice to be able
 to sign people in automatically

04:16:56.487 --> 04:16:58.428
.  It would be             It 
would be even better if we could

04:16:58.429 --> 04:17:00.302
 do it on the web.  So let's 
walk through an example here 

04:17:00.303 --> 04:17:04.131
with HRS.  This is a hotel 
reservation app that Google 

04:17:04.132 --> 04:17:06.555
actually uses for our own 
reservations.  I'm happy to see 

04:17:06.556 --> 04:17:08.984
this available on the web.  If 
you start in the native app here

04:17:09.899 --> 04:17:15.252
, you can create an account, do 
some searches, basically set up 

04:17:15.253 --> 04:17:20.695
your entire itinerary and you're
 offered to save that password 

04:17:20.696 --> 04:17:23.298
or save the account that you've 
used if you've logged in with 

04:17:23.299 --> 04:17:27.093
Facebook or Google.  The idea is
 once you visit the website, 

04:17:27.094 --> 04:17:29.096
maybe this is where you want to 
complete your transaction, where

04:17:29.456 --> 04:17:31.200
 you're entering credit card 
information, for example, you 

04:17:31.201 --> 04:17:35.176
can visit the site.  And instead
 of having to find that log in 

04:17:35.177 --> 04:17:38.407
button and to remember to be 
logged in, you'll simply be 

04:17:38.408 --> 04:17:40.744
automatically signed in.  This 
is live on the web right now.  

04:17:40.745 --> 04:17:43.482
You recollect               You 
can try this on HRS and we have 

04:17:43.483 --> 04:17:49.971
Alibaba's  's express an, ringed
                     's express 

04:17:49.972 --> 04:17:53.437
an, linked          
           's express an, Linde

04:17:55.046 --> 04:18:00.828
                    's express 
an, Linked  ed-In.   

04:18:00.829 --> 04:18:03.914
It's pretty straight forward.  
You can do this purely with a 

04:18:03.915 --> 04:18:06.143
client side change with your app
 or the front end of your 

04:18:06.144 --> 04:18:08.529
website.  So when you need to 
get somebody signed in, perhaps 

04:18:08.530 --> 04:18:11.633
when your app is starting is 
what our recommendation is, you 

04:18:11.634 --> 04:18:14.875
construct a credential request. 
 So credential request has a few

04:18:15.023 --> 04:18:17.599
 properties.  You basically 
specify what types of reshales 

04:18:17.600 --> 04:18:21.963
you can                     of 
credentials you can support, 

04:18:21.964 --> 04:18:25.537
like user name, passwords, or 
pointer, and say this person is 

04:18:25.538 --> 04:18:29.152
signed in with Google or 
Facebook and you need to get a 

04:18:29.153 --> 04:18:33.587
token to awe     authenticate 
this user.  You pass it to our 

04:18:33.588 --> 04:18:36.730
request API, and then you get 
called back.  You get called 

04:18:36.731 --> 04:18:38.847
back with any results that are 
available or you can just 

04:18:38.848 --> 04:18:41.280
proceed to a normal sign-in     
    sign-in if there is nothing.

04:18:41.281 --> 04:18:43.883
  So if you get something back, 
you can look at what you've got.

04:18:43.884 --> 04:18:47.328
  It will have the identifier, 
so the user name or the e-mail 

04:18:47.329 --> 04:18:50.090
address or maybe even a phone 
that you've saved previously or 

04:18:50.091 --> 04:18:53.513
the user has opted in to save in
 Chrome.  And then it comes with

04:18:54.143 --> 04:18:56.129
 it an account type.  So if it's
 a Facebook sign-in         

04:18:56.130 --> 04:18:58.371
sign-in, you can look at that 
and say I need to talk to 

04:18:58.372 --> 04:19:00.956
Facebook.  Or if it's the 
password, you can take that 

04:19:00.957 --> 04:19:04.244
password, submit it on behalf of
 the user as though she     they

04:19:04.245 --> 04:19:05.899
 typed it in themselves, set up 
a          set up a session.  At

04:19:05.900 --> 04:19:07.575
 that point you have an 
authenticated user.  You can 

04:19:07.576 --> 04:19:09.746
show them the relevant signed in
 content right away, as soon as 

04:19:09.747 --> 04:19:12.788
they open the app.  And that's 
really valuable, because if we 

04:19:12.789 --> 04:19:17.548
look at some examples here, one 
on the web that I think is worth

04:19:17.549 --> 04:19:22.560
 calling out in a second is the 
guardian, where calling this 

04:19:22.561 --> 04:19:26.583
request API in Chrome, they can 
do the same thing -- have 

04:19:26.584 --> 04:19:29.409
someone who is a web user 
automatically signed in.  And 

04:19:29.410 --> 04:19:33.015
it's very valuable for them that
 they now have this huge bump in

04:19:33.016 --> 04:19:36.533
 cross-device signed in usage.  
You can imagine for apps like 

04:19:36.534 --> 04:19:38.802
the guardian        Guardian, or
 the New York Times, when we 

04:19:38.803 --> 04:19:43.008
showed last year, how valuable 
this is to have signed in users 

04:19:43.009 --> 04:19:46.000
across your platforms as a 
publisher to be able to do cross

04:19:46.203 --> 04:19:49.482
-device analytics to keep users 
signed in, show them relevant 

04:19:49.483 --> 04:19:52.203
content, maintain their 
subscription information without

04:19:52.574 --> 04:19:54.707
 having to provide the support 
around getting signed back in or

04:19:54.708 --> 04:19:57.323
 recovering from forgotten 
accounts.    

04:19:57.324 --> 04:20:00.447
So that's the automatic sign-in
         sign-in functionally.  

04:20:00.448 --> 04:20:02.690
To get there, we should take a 
closer look at how this 

04:20:02.691 --> 04:20:05.215
information is saved.  I'll show
 an example here in a second.  I

04:20:05.216 --> 04:20:09.187
 really want to call that out, 
and that's saving nonpassword 

04:20:09.188 --> 04:20:13.131
information.  First, looking at 
an app like sky scanner the 

04:20:13.132 --> 04:20:16.041
traditional flow is you enter 
the password, get the same 

04:20:16.042 --> 04:20:20.665
dialogue.  We have seen all the 
apps that implement this a 65% 

04:20:20.666 --> 04:20:24.306
save rate, about two in three 
users will opt in to save this 

04:20:24.307 --> 04:20:26.581
information.  Those users can 
then be automatically signed in.

04:20:27.769 --> 04:20:31.251
like now without a password.  If
 you're liking, contribution    

04:20:31.582 --> 04:20:33.442
        for example, the 
Facebook button, agreeing to the

04:20:33.443 --> 04:20:36.745
 consent, and getting a token 
from Facebook.  New York Times 

04:20:36.746 --> 04:20:39.185
will offer, and you can try this
 in the live app right now, 

04:20:39.186 --> 04:20:42.671
offer to save the account.  What
 it's doing here instead of 

04:20:42.672 --> 04:20:46.445
saving a user name and password,
 you're saving user name and a 

04:20:46.446 --> 04:20:49.045
string that says "with 
Facebook."  You know what to 

04:20:49.046 --> 04:20:52.384
look for next time.  When we 
come back, you'll see the apple 

04:20:52.385 --> 04:20:55.234
open.  This is a brand    
                          app 

04:20:55.235 --> 04:20:59.255
will open, the blue bar shows, 
sign you in, and you never even 

04:20:59.256 --> 04:21:03.720
had to see the login screen.    
So let's take a look at how 

04:21:03.721 --> 04:21:05.952
that's implemented.  In this 
case you'll create a credential 

04:21:05.953 --> 04:21:08.676
object that you need to save.  
You can see the two variations 

04:21:08.677 --> 04:21:12.267
here.  On the top, you create a 
user name and password account, 

04:21:12.268 --> 04:21:15.357
or if it's a nonpassword account
, you can set other eyes

04:21:15.550 --> 04:21:19.651
    types of user names.  For 
example, an e-mail address 

04:21:19.652 --> 04:21:23.095
orphan, and then          
        or phone number     

04:21:23.258 --> 04:21:25.053
         phone number and set 
the type, whether it's with 

04:21:25.054 --> 04:21:27.902
Facebook or Google or some other
 type that you support, like 

04:21:27.903 --> 04:21:30.316
phone numbers.    
Then you pass the credential 

04:21:30.317 --> 04:21:33.274
object into the save API.  
You'll get called back with a 

04:21:33.275 --> 04:21:36.742
result.  The result is either 
successful, if we can update an 

04:21:36.743 --> 04:21:39.973
existing credential or 
automatically save a nonpassword

04:21:40.401 --> 04:21:43.284
 credential, for example, to 
Google account for Google 

04:21:43.285 --> 04:21:45.507
sign-in         sign-in, or if 
you need to show a dialogue to 

04:21:45.508 --> 04:21:49.564
have the user interact and opt 
in to save.    

04:21:49.565 --> 04:21:53.733
On the web, it's very similar.  
You construct the reden shale 

04:21:53.734 --> 04:21:57.976
object                    re
credential object.  If you'd 

04:21:57.977 --> 04:22:00.889
like more information on this, 
you might have seen the talk 

04:22:00.890 --> 04:22:03.233
from the Chrome team yesterday 
about how to save all types of 

04:22:03.234 --> 04:22:05.909
information, how to handle the 
responses that come back, submit

04:22:05.910 --> 04:22:11.336
 forms, or handle federated 
credentials to make automatic 

04:22:11.337 --> 04:22:12.949
sign-in         sign-in on the 
web possible.   

04:22:12.950 --> 04:22:15.685
To look at some of the really 
impressive performance numbers 

04:22:15.686 --> 04:22:18.684
we have seen in the last year.  
We have Netflix, one of our big 

04:22:18.685 --> 04:22:21.980
launch partners from last year, 
whose growth has been really 

04:22:21.981 --> 04:22:24.442
impressive over the last year 
expanding to new markets.  They 

04:22:24.443 --> 04:22:28.450
have a lot more people using 
their app.  To be able    

04:22:29.167 --> 04:22:32.552
        To be to          To be 
able to automatically sign in, 

04:22:32.553 --> 04:22:36.194
they've been seeing less 
inquiries around forgot even 

04:22:36.195 --> 04:22:39.697
prison records, but their    

04:22:40.932 --> 04:22:44.297
   forgotten prison records.  
This cannen    be a huge money 

04:22:44.298 --> 04:22:48.293
savings if you have a sizable 
support system right now and 

04:22:48.294 --> 04:22:51.431
it's a subscription or pay-based
 service where people will 

04:22:51.432 --> 04:22:53.535
definitely contact you if they 
can't get in.    

04:22:53.536 --> 04:22:58.896
So the last big piece I want to 
talk about here is how to make 

04:22:58.897 --> 04:23:03.439
sign-up easier.  This is a new 
API, the ability to get, as we 

04:23:03.440 --> 04:23:06.578
call, a hint, to show a dialogue
 that looks like this with 

04:23:06.579 --> 04:23:09.321
previously used e-mail addresses
, with accounts that are on the 

04:23:09.322 --> 04:23:12.672
device.  And pie showing this 
dialogue first               

04:23:12.920 --> 04:23:15.520
                      And by 
showing this dialogue first, 

04:23:15.521 --> 04:23:20.169
there are some unusual 
interactions.  From the Z. 

04:23:20.170 --> 04:23:25.633
&gt;&gt; #03:  Llow                   
 Zillow app first, it allows the

04:23:25.634 --> 04:23:29.970
 user to intelligently sign in 
or remind you they need to use 

04:23:29.971 --> 04:23:32.332
Facebook or Google to log in 
because they don't       don't 

04:23:32.333 --> 04:23:35.837
have a password.  Eve     
They've even gone so far to    

04:23:35.838 --> 04:23:39.739
as offering to create an account
 without a password, one tab 

04:23:39.740 --> 04:23:41.832
account password.  
For example, let's play the 

04:23:41.833 --> 04:23:48.254
video.  And we'll see the 
assisted sign up experience.  We

04:23:48.255 --> 04:23:53.659
 have Alibaba's  's express app,
 user rental        registering 

04:23:53.660 --> 04:23:56.574
with e-mail.  It allows the user
 to one at that point fill the 

04:23:56.575 --> 04:23:59.297
name, the e-mail address, and 
then just have to create the 

04:23:59.298 --> 04:24:04.329
password.  That's purely a 
client-side he    addition.  

04:24:04.330 --> 04:24:10.986
Without doing complex rework or 
big back end changes, they were 

04:24:10.987 --> 04:24:13.418
able to assist the user to fill 
in three-quarters of the 

04:24:13.419 --> 04:24:15.044
information.  They have more 
people successful little 

04:24:15.045 --> 04:24:19.702
completing the sign-up flow with
 just that little client-side 

04:24:19.703 --> 04:24:21.579
change.  In fact, we can even 
move forward while the other 

04:24:21.580 --> 04:24:24.280
person isn't       isn't even 
finished yet, and see what the 

04:24:24.281 --> 04:24:28.471
implementation work that's 
involved here is.  It's pretty 

04:24:28.472 --> 04:24:32.321
simple.  So I think this is 
perhaps one of the highest ROI 

04:24:32.322 --> 04:24:36.439
investments that you could make 
in your app.  One of the best 

04:24:36.440 --> 04:24:40.090
learnings you could take out of 
I/O is adding a few lines of 

04:24:40.091 --> 04:24:42.499
code, assisting sign-up.  You 
can see much better completion 

04:24:42.500 --> 04:24:44.586
of the account registration 
flows.    

04:24:44.587 --> 04:24:47.490
So to make it happen, you 
construct a hint request, as we 

04:24:47.491 --> 04:24:51.503
say.  Up specify what type of 
fires               type of 

04:24:51.504 --> 04:24:54.465
identifiers you would like to 
see.  You pass that in the "and 

04:24:54.466 --> 04:24:59.485
you get                     in 
the API.  You see the sign-in

04:24:59.799 --> 04:25:01.706
         sign-in flow if you've 
merged the two together, then 

04:25:01.707 --> 04:25:04.878
you have the opportunity to show
 them, have them pick an entry, 

04:25:04.879 --> 04:25:08.737
and you'll get called back on 
activity result with the 

04:25:08.738 --> 04:25:11.651
information.  It's the name, 
e-mail address.  It's even more 

04:25:11.652 --> 04:25:16.663
importantly something like an ID
 tone            an ID token, a 

04:25:16.664 --> 04:25:20.341
verified e-mail address to skip 
things like e-mail verification.

04:25:21.532 --> 04:25:26.006
here.  Linked infrastructure ran

04:25:26.007 --> 04:25:30.852
Linked inused               
Linked in used this, and even 

04:25:30.853 --> 04:25:35.907
reports from other oops, like 
Camu      Camut, which might be 

04:25:35.908 --> 04:25:40.212
in the audience, 20% higher 
conversion on sign-up.  To find 

04:25:40.213 --> 04:25:44.341
out more about the partners 
check out this link.  The last 

04:25:44.342 --> 04:25:49.275
shoutout is we  We go  Go, a 
travel app from Singapore.  They

04:25:49.276 --> 04:25:51.787
 have taken account registration
 out of the little men you'll in

04:25:51.788 --> 04:25:53.377
 the corner and put it into one
             it into one of 

04:25:53.378 --> 04:25:59.583
their primary flows with one tap
 and seeing a huge increase in 

04:25:59.584 --> 04:26:02.594
user registrations.    
We hope to see your app up here.

04:26:02.595 --> 04:26:05.169
  Maybe you'll be up here next 
year.    

04:26:05.170 --> 04:26:09.415
I'd like to hand it over to 
Alfonzo, but building a new one 

04:26:09.416 --> 04:26:11.416
with Firebase

04:26:14.655 --> 04:26:17.070
. 
(Applause) 

04:26:17.071 --> 04:26:19.776
&gt;&gt; ALFONSO GOMEZ-JORDANA:  Thank
 you.  My name is Alfonso and 

04:26:19.777 --> 04:26:24.032
I'm the project manager.  Not 
long ago, I was an application 

04:26:24.033 --> 04:26:27.228
developer.  As I'm sure many of 
you are today in the audience.  

04:26:27.229 --> 04:26:31.449
I remember spending sleepless 
nice fighting with the 

04:26:31.450 --> 04:26:33.493
authentication system of my 
applications.  Some of the 

04:26:33.494 --> 04:26:37.967
problems that John, Stephen, and
 Sebastian mentioned today I 

04:26:37.968 --> 04:26:40.992
kind of relate to.  The biggest 
problem I had with awe tentation

04:26:41.432 --> 04:26:45.758
s                           I 
had with authentication was I 

04:26:45.759 --> 04:26:48.050
never knew if I was properly 
securing my user's  's 

04:26:48.051 --> 04:26:50.822
information.  I remember 
spending lots of time 

04:26:50.823 --> 04:26:55.236
integrating with third party or 
OS protocols and all this other 

04:26:55.237 --> 04:27:00.057
stuff.  I never got to manage my
 user sessions in an effective 

04:27:00.058 --> 04:27:03.294
way.  The third lining        
thing is authentication is hard.

04:27:03.295 --> 04:27:11.403
  That is something I didn't 
care that much about.   .    

04:27:11.404 --> 04:27:13.931
When you're doing your own 
authentication system, you'll 

04:27:13.932 --> 04:27:18.220
look through some steps that go 
more or less like the picture.  

04:27:18.221 --> 04:27:20.938
You will begin by setting up 
your authentication back end and

04:27:21.802 --> 04:27:26.173
 you authorize your users in 
your own back end resources.  

04:27:26.174 --> 04:27:29.027
When setting People        up 
your back end, you want to make 

04:27:29.028 --> 04:27:33.152
sure it's secure.  If not, your 
user's  's data may get 

04:27:33.153 --> 04:27:36.192
compromised.  Second, it has to 
be up all the time.  If not, 

04:27:36.193 --> 04:27:38.193
your application will probably 
go down with

04:27:41.036 --> 04:27:43.055
 it.    
Handling user's  's credentials 

04:27:43.056 --> 04:27:47.756
is tricky.  You have to 
integrate with off flow or if 

04:27:47.757 --> 04:27:50.932
you handle prison records    
                   handle 

04:27:50.933 --> 04:27:53.544
passwords, and you have to 
handle the cases where your 

04:27:53.545 --> 04:27:57.377
users forget their credentials. 
 In managing user sessions, you 

04:27:57.378 --> 04:28:00.694
want to do this effectively.  
You want to ensure your sessions

04:28:00.695 --> 04:28:03.231
 are long-lived so users don't
       don't have to sign in 

04:28:03.232 --> 04:28:05.545
every few days when they come 
back to your application, but at

04:28:05.546 --> 04:28:08.284
 the same time if your user's  
's device is stolen, you want to

04:28:08.285 --> 04:28:11.320
 ensure that their session is 
revoked.    

04:28:11.321 --> 04:28:14.244
Finally, when you I meant 
mrementd all of that

04:28:15.675 --> 04:28:18.381
implemented all that, you have 
to take the authentication of 

04:28:18.382 --> 04:28:22.044
the user and do something useful
 with it in the back end.  In 

04:28:22.045 --> 04:28:24.701
general, all of these steps are 
pretty involved.  And I'm pretty

04:28:24.933 --> 04:28:28.206
 sure in most of the cases this 
is not the core business of your

04:28:28.365 --> 04:28:30.990
 application.  You want to focus
 on other things, such as making

04:28:31.382 --> 04:28:33.382
 your application awesome for 
your users

04:28:35.831 --> 04:28:38.504
.   .    
Firebase authentication aims to 

04:28:38.505 --> 04:28:44.319
make all of these problems easy 
for you.  In the next three 

04:28:44.320 --> 04:28:47.476
minutes I'm going to show you 
how you can get or    very east 

04:28:47.477 --> 04:28:49.829
lip your users signed   

04:28:49.830 --> 04:28:53.047
very easily your users signed 
into the code and no deep 

04:28:53.048 --> 04:28:56.157
understanding of thousand 
authentication works.  In this 

04:28:56.158 --> 04:29:02.692
year's  's I/O we released a 
revamped set of APIs, some 

04:29:02.693 --> 04:29:06.550
exciting new functionality, and 
built on top of a Google 

04:29:06.551 --> 04:29:10.599
infrastructure.  Let's see what 
Firebase offers.  Some of you 

04:29:10.600 --> 04:29:12.879
may have seen this picture 
before, this is one of our color

04:29:13.199 --> 04:29:15.775
 data centers at Google.  
Firebase services are cloud 

04:29:15.776 --> 04:29:17.759
services that run an 
infrastructure like the one 

04:29:17.760 --> 04:29:21.384
pictured in the picture here.   

04:29:21.385 --> 04:29:25.360
Google takes care of making sure
 that the services are with 

04:29:25.361 --> 04:29:28.073
reliable and available for your 
application.  The only thing you

04:29:28.074 --> 04:29:31.220
 need to do       to do is 
implement against the client two

04:29:31.221 --> 04:29:35.313
 user services.    
With Firebase you can get your 

04:29:35.314 --> 04:29:38.681
user sign-in         sign-in 
using a wide range of options, .

04:29:38.682 --> 04:29:42.658
  From Google sign-in         
sign-in to Facebook login or 

04:29:42.659 --> 04:29:45.668
your own e-mail and password 
accounts.  Doing so is very easy

04:29:47.918 --> 04:29:52.893
.  This is using web and 
JavaScript where we either 

04:29:52.894 --> 04:29:57.005
create or signing a user using 
e-mail and password credentials.

04:29:57.006 --> 04:30:00.308
  The first line of code here 
does all of the following.  

04:30:00.309 --> 04:30:02.934
Let's see if I get it right.  It
 gets the e-mail and password as

04:30:02.935 --> 04:30:05.919
 a user and sends it to a secure
 channel up to our back end.  

04:30:05.920 --> 04:30:10.367
There it performs integrity 
checks and ensures the password 

04:30:10.368 --> 04:30:14.047
is strong enough.  It makes sure
 there is no pre-existing user. 

04:30:14.525 --> 04:30:19.605
 It creates a user record or 
user database.  It met a pair of

04:30:19.899 --> 04:30:23.133
 tokens, sends them through a 
secure channel back to the 

04:30:23.134 --> 04:30:28.220
device and then persists into 
the client application.  With 

04:30:28.221 --> 04:30:29.816
that you have the user sign-in
         sign-in.    

04:30:29.817 --> 04:30:32.059
The important thing here is you 
can forget I think         

04:30:32.060 --> 04:30:34.210
everything that I just mentioned
, because all of that have is 

04:30:34.211 --> 04:30:37.783
done by Firebase.  The only 
thing you need to learn is these

04:30:38.227 --> 04:30:42.807
 two lines of code.  That's much
 more simple.    

04:30:42.808 --> 04:30:46.194
Now support through identity 
providers, such as Facebook.  

04:30:46.195 --> 04:30:49.583
The first thing you need to do
       to do is go to a Firebase

04:30:49.584 --> 04:30:51.646
 console, which is very easy to 
use, and enable them.  What     

04:30:51.859 --> 04:30:53.859
 Once you've got that, you're 
ready to write some

04:30:56.965 --> 04:31:01.784
 code.  And we're taking a 
Facebook access token and 

04:31:01.785 --> 04:31:06.758
signing a user application.  The
 second line of code here in the

04:31:07.313 --> 04:31:09.198
 bottom is something very 
similar is    as what they 

04:31:09.199 --> 04:31:13.229
mentioned before.  It's second
             It's sending it to 

04:31:13.230 --> 04:31:15.415
a secure channel through the 
back end.  It's making sure the 

04:31:15.416 --> 04:31:18.263
token hasn't been tampered with,
 hasn't been expired, makes sure

04:31:18.533 --> 04:31:21.263
 the audience is correct, making
 sure non     someone is not 

04:31:21.264 --> 04:31:24.325
trying to hack you.  It creates 
a user act     account in the 

04:31:24.326 --> 04:31:30.567
database.  A pair of tokens with
 your user session information, 

04:31:30.568 --> 04:31:34.290
and finally your user is signed 
in.  Once again, the only thing 

04:31:34.291 --> 04:31:37.887
you need to learn are these two 
lines of code.  Very simple

04:31:40.994 --> 04:31:46.460
.   .    
Okay.  So let's say you've got 

04:31:46.461 --> 04:31:48.754
some users signed in.  Next 
thing you want to do       to do

04:31:48.755 --> 04:31:52.333
 is you want to make sure that 
this is actually working.  For 

04:31:52.334 --> 04:31:55.902
that reason, especially the 
console of users that you can 

04:31:55.903 --> 04:31:59.345
access, the Firebase console, 
which is especially the sign for

04:31:59.346 --> 04:32:01.745
 those initial steps when you're
 starting to build your 

04:32:01.746 --> 04:32:04.360
authentication system and want 
to see your accounts ans they're

04:32:04.361 --> 04:32:06.361
 being created

04:32:09.583 --> 04:32:11.830
 as                           s 
they're being created.   

04:32:11.831 --> 04:32:13.674
Let's pause a second and look at
 some of the information that 

04:32:13.675 --> 04:32:19.626
you can see here.  If you look 
at the right, you see the user 

04:32:19.627 --> 04:32:22.922
ID.  In Firebase every time one 
of our users signed  s in for 

04:32:22.923 --> 04:32:27.463
the first time, we create a 
unique user ID that identifies 

04:32:27.464 --> 04:32:29.615
them across the whole 
application.  Also, take a look 

04:32:29.616 --> 04:32:32.987
at the second column, which is 
called providers.  In that 

04:32:32.988 --> 04:32:34.684
column you will see can which 
sign-in         sign-in 

04:32:34.685 --> 04:32:38.201
mechanism the user has signed 
in.  In this year's  's version 

04:32:38.202 --> 04:32:44.481
of Firebase that's new, now your
 users can have more than one 

04:32:44.482 --> 04:32:46.234
sign-in         sign-in for that
 account.  Very useful if you 

04:32:46.235 --> 04:32:50.737
want to allow your users to sign
 in one day with Twitter and 

04:32:50.738 --> 04:32:54.402
later on with the password and 
e-mail account.  They can access

04:32:54.701 --> 04:32:56.937
 with either of those mechanisms
.    

04:32:56.938 --> 04:33:00.056
Okay.  So we have the user 
signed in.  Now we have to do

04:33:00.299 --> 04:33:02.396
       to do something useful 
with them.  This in my opinion 

04:33:02.397 --> 04:33:07.806
the                        This 
snippet of code is from Java.  

04:33:07.807 --> 04:33:10.428
We're detecting when the user is
 signed in and special eyes go 

04:33:10.429 --> 04:33:13.604
the experience                  
                     in and 

04:33:13.605 --> 04:33:17.501
personalizing it.  On the 
authentication of the 

04:33:17.502 --> 04:33:20.603
application and once the event 
is triggered, you react to the 

04:33:20.604 --> 04:33:22.774
change in the sign-in         
sign-in state to update your 

04:33:22.775 --> 04:33:25.470
application.  In this case, for 
example, we personalize the user

04:33:26.358 --> 04:33:29.403
 interface application by using 
the display that I am that      

04:33:29.404 --> 04:33:34.870
that comes from the signed in 
user.  This is useful.  You can 

04:33:34.871 --> 04:33:37.715
make the application feel better
 for your user.  But the most 

04:33:37.716 --> 04:33:41.196
compelling use case of 
authentication is actually 

04:33:41.197 --> 04:33:46.451
authorizing into your own back 
end resources services.    

04:33:46.452 --> 04:33:50.525
That is also very easy with 
Firebase.  This diagram more or 

04:33:50.526 --> 04:33:52.481
less explains the steps you want
 to take if you want to do      

04:33:52.482 --> 04:33:55.808
 to do this.  First, your user 
signs into an application.  Then

04:33:56.060 --> 04:33:58.804
 you ex-Strathmore the    
               extract the token

04:33:59.204 --> 04:34:02.227
 with one line with the clients 
and it's signed, so you can 

04:34:02.228 --> 04:34:05.725
trust it.  Then you send that 
token up to your server and you 

04:34:05.726 --> 04:34:09.221
use one of the server to 
validate the integrity of the 

04:34:09.222 --> 04:34:12.852
token and with this you can 
really tell that the user is 

04:34:12.853 --> 04:34:16.562
calling your application is who 
they came to be.  Once you've 

04:34:16.563 --> 04:34:20.197
got that up in your server, then
 you have to apply your own 

04:34:20.198 --> 04:34:22.735
authorization logic to give 
access to your own resources.   

04:34:24.945 --> 04:34:28.210
simpler if you had to implement 
it on your own.  But still, it 

04:34:28.211 --> 04:34:32.332
does require a little bit of 
planning and you have to 

04:34:32.333 --> 04:34:35.603
implement your authorization log
 on the back end.  We can make 

04:34:35.604 --> 04:34:40.428
this even simpler.  As you know,
 fire pace service             

04:34:40.585 --> 04:34:44.517
      Firebase services worked 
better together.  If you use 

04:34:44.518 --> 04:34:47.808
Firebase storage or Firebase at 
that time for storing the 

04:34:47.809 --> 04:34:50.972
database, all the planning, 
sending the token up to the back

04:34:51.177 --> 04:34:54.330
 end and performing the 
authorization logic is done 

04:34:54.331 --> 04:34:57.189
automatically for you.  The only
 thing you need to do       to 

04:34:57.190 --> 04:34:59.970
do, you need to write the 
clarity of rules which specified

04:35:00.712 --> 04:35:04.402
 this user can acts as this 
resource.  No ding         No 

04:35:04.403 --> 04:35:07.965
single line of code, neither the
 clients or the back end, to 

04:35:07.966 --> 04:35:11.391
make this happen.  Massively Kim
     simplified compared to if 

04:35:11.392 --> 04:35:14.534
you had to implement this on 
your own.    

04:35:14.535 --> 04:35:19.630
So let's do a quick recap.  It's
 a managed authentication back 

04:35:19.631 --> 04:35:24.420
end which we offer six different
 sign-in methods.  We have 

04:35:24.421 --> 04:35:31.309
client as the case for Android, 
IOS and web, and we else for 

04:35:31.310 --> 04:35:35.238
game developers out there.  We 
have servers that token 

04:35:35.239 --> 04:35:40.066
verification and token mint go 
and       ing and Java.  And we 

04:35:40.067 --> 04:35:44.501
have a concept for user setup 
and management.  There is many 

04:35:44.502 --> 04:35:46.485
more functionalities that I 
couldn't            I couldn't 

04:35:46.486 --> 04:35:49.646
cover today.  You can check out 
in our website, in our samples, 

04:35:49.647 --> 04:35:52.941
and YouTube videos.    
So we took Firebase 

04:35:52.942 --> 04:35:56.010
authentication and with you 
actually went there and spoke 

04:35:56.011 --> 04:35:59.281
with different startsups that 
they were either building their 

04:35:59.282 --> 04:36:01.551
identification system for the 
first time or they weren't happy

04:36:01.861 --> 04:36:04.129
 with theirs and they wanted to 
replace it.  Here are some of 

04:36:04.130 --> 04:36:06.130
the things they built and some 
of the things they told us

04:36:10.681 --> 04:36:12.406
.    
Build it in almost two days.  It

04:36:12.407 --> 04:36:16.374
 took them two weeks to build 
this beautiful application, and 

04:36:16.375 --> 04:36:19.782
for authentication they used 
Firebase authentication with 

04:36:19.783 --> 04:36:23.701
Facebook and Google.  It took 
them literally an often to build

04:36:24.003 --> 04:36:27.400
 it.  It was production red 
after that.    

04:36:27.401 --> 04:36:28.246
Qu    
Quav      

04:36:28.247 --> 04:36:30.865
Quaver        
Quaver, a music application app,

04:36:31.390 --> 04:36:35.052
 they really liked the fact that
 you can link multiple -- 

04:36:35.053 --> 04:36:40.047
multiple credentials to the same
 account.  Check out their 

04:36:40.048 --> 04:36:42.267
application for that.  It's 
really good.    

04:36:42.268 --> 04:36:45.985
Then also existing applications 
implemented for the first time 

04:36:45.986 --> 04:36:48.904
or modified their existing 
authentication system and they 

04:36:48.905 --> 04:36:53.230
all called out using Firebase.  

04:36:53.231 --> 04:36:57.389
With Firebase authorization
         entication we tried to 

04:36:57.390 --> 04:36:58.963
make sign-in         sign-in 
experience as easy as possible 

04:36:58.964 --> 04:37:03.516
for you.  So you can forget of 
all the details of how 

04:37:03.517 --> 04:37:05.955
authentication works and just 
focus the experience for your 

04:37:05.956 --> 04:37:09.866
users.  With that, I'm going to 
leave it to John to do a quick 

04:37:09.867 --> 04:37:11.867
recap and maybe show us a little

04:37:14.594 --> 04:37:16.594
. 

04:37:19.719 --> 04:37:21.719
                 .  
(Applause) Johns Johns          

04:37:26.626 --> 04:37:30.088
&gt;&gt; JOHN HJELMSTAD:  We have seen
 it's very easy to build a full 

04:37:30.089 --> 04:37:32.409
on stack on top of that.  We're 
pretty much done.  Unfortunately

04:37:32.711 --> 04:37:35.870
, we still need to do       to 
do a bunch of additional work.  

04:37:35.871 --> 04:37:38.593
In particular, this talk is 
called best practices for a 

04:37:38.594 --> 04:37:40.874
reason.  We've talked about a 
number of different tools and 

04:37:40.875 --> 04:37:44.201
techniques to help users get 
signed in really efficiently, 

04:37:44.202 --> 04:37:47.438
securely, and quickly.  So let's
 all put that together into an 

04:37:47.439 --> 04:37:50.651
app which can't be too difficult
; right?  So let's start out.  

04:37:50.652 --> 04:37:53.268
For the purposes of discussion, 
let's say people understand user

04:37:53.662 --> 04:37:56.452
 name and password flows, so we 
create one of these things in 

04:37:56.453 --> 04:38:00.119
our actual app.  We wire it up 
to Firebase authentication, no 

04:38:00.120 --> 04:38:02.591
big deal.  It's not quite 
complete, because we need to be 

04:38:02.592 --> 04:38:08.227
able to create a sign up flow.  
We determine the difference 

04:38:08.228 --> 04:38:15.703
between existing account and a 
new account.  From that, we 

04:38:15.704 --> 04:38:17.605
either fork to the account 
creation flow or the sign-in

04:38:17.606 --> 04:38:19.647
         sign-in flow.  We're 
thinking to ourselves we're 

04:38:19.648 --> 04:38:23.603
getting closer to ship ability, 
but not really, because we know 

04:38:23.604 --> 04:38:28.078
from personal experiences and an
 I can              and antidote

04:38:29.200 --> 04:38:34.305
s from our users, we'll       
people will forget their 

04:38:34.306 --> 04:38:39.015
passwords.  As we talked at the 
beginning of the discussion, to 

04:38:39.016 --> 04:38:42.083
up level security in general and
 increase similar police     

04:38:43.038 --> 04:38:46.618
      plicity and usability for 
our users, we want to implement 

04:38:46.619 --> 04:38:49.032
Google sign-in         sign-in. 
 Maybe they're familiar with 

04:38:49.033 --> 04:38:53.215
other signers.  There is quite a
 bit of client logic getting 

04:38:53.216 --> 04:38:55.911
involved in the mix here.  We 
have introduced another problem.

04:38:55.912 --> 04:38:58.986
  I might have signed in to this
 particular application using my

04:38:59.523 --> 04:39:02.859
 Google account, get my Facebook
 account has the same e-mail 

04:39:02.860 --> 04:39:04.891
address associated with it.  
That's really confusing.  We do 

04:39:04.892 --> 04:39:08.765
not want to create a duplicate 
account in this case.  We need 

04:39:08.766 --> 04:39:13.654
to implement account linking 
logic where we have a matching 

04:39:13.655 --> 04:39:18.714
fire      identifier, direct the
 mechanism that they used in to 

04:39:18.715 --> 04:39:22.228
sign in before or link a new 
prior to that same account.  The

04:39:22.229 --> 04:39:24.783
 back end provides this for us. 
 As we can see there is quite a 

04:39:24.784 --> 04:39:28.080
bit of client logic.  Now we're 
done.    

04:39:28.081 --> 04:39:30.360
We're not quite done.  Stephen 
mentioned earlier today there is

04:39:30.722 --> 04:39:32.815
 a number of things that 
Smartlock for passwords can help

04:39:33.047 --> 04:39:37.939
 get your users in the door.  
Automatically signing them in, 

04:39:37.940 --> 04:39:44.187
easily        easing the sign-in
         sign-in process.  This 

04:39:44.188 --> 04:39:47.771
is a one time cost, out the door
, we're completely finished; 

04:39:47.772 --> 04:39:50.660
right?  Well, once again, not 
quite.  In the modern age we 

04:39:50.661 --> 04:39:53.615
need to do       to do it two 
more times at least.  Web and 

04:39:53.616 --> 04:39:56.373
IOS, as well as Android there
       are all equally important

04:39:56.596 --> 04:40:00.088
.  Let's toss in a web 
implementation and IOS 

04:40:00.089 --> 04:40:03.051
implementation.  Simple; right? 
 No big deal.  So we happen to 

04:40:03.052 --> 04:40:05.055
know that it's quite complex, 
because we put all this together

04:40:05.735 --> 04:40:08.885
 ourselves.  And we had to keep 
it updated in good working order

04:40:09.333 --> 04:40:13.618
 over time as well.    
The lines of code we found that 

04:40:13.619 --> 04:40:16.783
it took to implement these 
entire flows for web IOS and 

04:40:16.784 --> 04:40:19.035
Android number in the thousands,
 up to 16,000        16,000 

04:40:19.036 --> 04:40:21.915
lines of code to manage and 
maintain all the logic that we 

04:40:21.916 --> 04:40:24.732
just mentioned, so long as you 
support all the functionality 

04:40:24.733 --> 04:40:27.768
that we just supported or that 
we just described, which is not 

04:40:27.769 --> 04:40:31.316
always required, but something 
we definitely remember          

04:40:31.317 --> 04:40:34.074
recommend.  What's        What's
 the better solution?  We have 

04:40:34.075 --> 04:40:39.123
Firebase UI authentication.  It 
is a full stack of UI elements 

04:40:39.124 --> 04:40:42.396
that implement the entire flows 
we just mentioned for you on web

04:40:42.815 --> 04:40:47.445
, IOS, and Android, and only a 
handful of lines of code to 

04:40:47.446 --> 04:40:51.251
implement the flows exactly as 
described in the chart.    

04:40:51.252 --> 04:40:54.661
Let's take a look at what some 
of this actually looks like. 

04:40:54.662 --> 04:40:56.662
(Applause)

04:41:00.895 --> 04:41:03.886
other environments, the pattern 
is very much the same.  Create 

04:41:03.887 --> 04:41:07.259
an off UI object, configure it 
with the providers and other 

04:41:07.260 --> 04:41:11.225
information that you want, and 
then tis play the UI.  Wire up 

04:41:11.226 --> 04:41:14.073
your results, you get the user 
object or an error code.  Here 

04:41:14.074 --> 04:41:17.415
on Android you can see that 
we're doing that for e-mail, 

04:41:17.416 --> 04:41:20.429
Facebook, and Google, and a 
nonactivity result will get a 

04:41:20.430 --> 04:41:22.850
success status indicating the 
user is signed in from which we 

04:41:22.851 --> 04:41:26.076
can obtain a user object if we 
want to or transition to 

04:41:26.077 --> 04:41:28.564
assigned in state   
IOS is very much the same.  

04:41:28.565 --> 04:41:32.749
Create an off UI object.  Set 
your providers, terms of service

04:41:33.359 --> 04:41:36.386
 URL, then from that generate an
 off view controller.  You can 

04:41:36.387 --> 04:41:39.523
use that as your root view 
controller or on top of your 

04:41:39.524 --> 04:41:42.602
existing root view controller.  
You get the results.    

04:41:42.603 --> 04:41:46.218
Web, no surprise, is very much 
the same as well.  Configure 

04:41:46.219 --> 04:41:50.488
other providers that you want, 
and then configure a call backs 

04:41:50.489 --> 04:41:53.549
for sign-in             for 
sign-in success scpels      as 

04:41:53.550 --> 04:41:58.760
well as show the UI   
That's not quite all, because we

04:41:58.761 --> 04:42:00.167
 know that even though a couple 
lines of code to implement 

04:42:00.168 --> 04:42:02.445
effing I just showed to you, we 
want to make sure everything

04:42:03.241 --> 04:42:04.714
 I just showed to you, we want 
to make sure that the Firebase 

04:42:04.715 --> 04:42:10.090
UI is customizable as well.  
Basic theming, as you can see to

04:42:10.284 --> 04:42:13.218
 get you out of the door in a 
line or two of code.  But on a 

04:42:13.219 --> 04:42:15.452
platform by platform basis, we 
support a number of different 

04:42:15.453 --> 04:42:19.699
types of customization as well. 
 In particular, on Android, you 

04:42:19.700 --> 04:42:26.252
can update -- you can override 
strings. .XML files or label. .X

04:42:26.833 --> 04:42:30.024
ML files to lay out details in 
your application.    

04:42:30.025 --> 04:42:33.199
On IOS we offer subclass go 
model for the home screen

04:42:33.997 --> 04:42:34.175
                             ing
 model for the home screen so 

04:42:34.176 --> 04:42:37.481
you are         you can argue
       arbitrarily do that as 

04:42:37.482 --> 04:42:41.204
well.  On web, it's such that 
the surrounding context can show

04:42:41.205 --> 04:42:44.081
 whatever branding, colors, and 
so on that you like.    

04:42:44.082 --> 04:42:46.873
This is still early days and we 
are working on additional 

04:42:46.874 --> 04:42:50.663
customization mechanisms as well
.  I'm happy to report today as 

04:42:50.664 --> 04:42:54.132
well this entire implementation 
on IOS and Android is open 

04:42:54.133 --> 04:42:57.520
sourced and will be open 
sourcing the web implement as 

04:42:57.521 --> 04:43:00.423
well.  You can inspect all the 
code you like, as well as 

04:43:00.424 --> 04:43:03.317
downloading it, integrating it 
into your application, 

04:43:03.318 --> 04:43:06.239
customizing it all that you like
.  Please do submit bug reports,

04:43:06.627 --> 04:43:09.840
 feature requests and so on.    
We also have a web repositive 

04:43:09.841 --> 04:43:15.238
Terry with the same URL suffix 
with-web for reports and bug mix

04:43:15.457 --> 04:43:21.277
es.  We do plan on open sourcing
 the implement awing there.    

04:43:21.278 --> 04:43:25.790
Firebase UI authentication, 
straight out of the

04:43:28.901 --> 04:43:29.529
 box    
                                                                ation

04:43:29.530 --> 04:43:31.996
 there.  
Firebase UI authentication, 

04:43:29.530 --> 04:43:31.213
straight out of the box that we 
have learned over the source

04:43:31.214 --> 04:43:33.827
        course of years at 
Google and we continue to find 

04:43:33.828 --> 04:43:36.774
the support in a further fashion
 as well.    

04:43:36.775 --> 04:43:39.671
As more identity technologies 
come out the door and more 

04:43:39.672 --> 04:43:43.312
innovations keep getting added. 
 We offer simple customization 

04:43:43.313 --> 04:43:46.158
as well as arbitrary 
customization by open source and

04:43:46.159 --> 04:43:48.607
 you can inspect the code all 
that you like.    

04:43:48.608 --> 04:43:50.686
Let's recap all of that      
what we just talked about today.

04:43:50.687 --> 04:43:53.773
  If you're an existing 
developer, Google sign-in     

04:43:54.106 --> 04:43:56.751
    sign-in is a great way to 
securely up-level your user 

04:43:56.752 --> 04:43:59.506
security by allowing them to use
 their Google account to get 

04:43:59.507 --> 04:44:02.989
into your app or website.  
Smartlock for passwords helps 

04:44:02.990 --> 04:44:05.458
them to remember how they got in
 the door to begin with, whether

04:44:05.686 --> 04:44:09.368
 the existing password or using 
a fed rated identity provider.  

04:44:09.369 --> 04:44:13.384
It also helps grease the wheels 
on your sign up flow and reduce 

04:44:13.385 --> 04:44:16.415
your support costs.    
Finally, Firebase authentication

04:44:16.952 --> 04:44:19.644
 is a full hosted authentication
 solution paired with UI that 

04:44:19.645 --> 04:44:24.216
helps get your and get you from 
zero to app in record time in 

04:44:24.217 --> 04:44:26.217
just a few lines of

04:44:28.410 --> 04:44:30.410
 code. 

04:44:35.730 --> 04:44:40.962
 couple of apps to get you 
started, click through and take 

04:44:40.963 --> 04:44:46.057
a look, a couple of links.  
Thanks for taking the time.  We 

04:44:46.058 --> 04:44:47.904
really appreciate you coming out
.  

04:44:47.905 --> 04:44:49.905
(Applause)

04:44:53.850 --> 04:44:57.543
 if you have any questions, 
we're going to be at the doors 

04:44:57.544 --> 04:45:00.068
over at the left afterward, as 
well as in the office hours 

04:45:00.069 --> 04:45:03.664
areas.  Thanks.   

04:53:54.439 --> 04:53:58.924
 fireside Chat:  Firebase in the
 Real World. 

05:00:04.871 --> 05:00:06.185
 fireside Chat:  Firebase in the
 Real World.Fireside Chat:  

05:00:06.186 --> 05:00:08.186
Firebase in the Real World.

05:00:58.618 --> 05:01:00.618
  May

05:01:26.426 --> 05:01:29.821
 20th.    
Fireside Chat:  Firebase in the 

05:01:29.822 --> 05:01:31.822
Real World.

05:01:57.042 --> 05:01:59.042
 Real World. 

05:03:05.345 --> 05:03:07.345
May 20th.
FB15.

05:03:14.850 --> 05:03:16.850
       16.

05:03:25.044 --> 05:03:30.649
have some bad news.  The bad 
news, Google I/O is almost over,

05:03:30.840 --> 05:03:33.764
 we'll go back to our daily 
lives soon.  The good news, 

05:03:33.765 --> 05:03:37.858
there is enough time for me to 
tell you a bit more about 

05:03:37.859 --> 05:03:40.667
progressive web apps.   That's 
not -- that slide doesn't do it 

05:03:40.668 --> 05:03:43.964
for me!  There is enough time 
for me to tell you about 

05:03:43.965 --> 05:03:50.851
progressive web apps!  Yeah!
&gt;&gt; I'm really excited about 

05:03:50.852 --> 05:03:55.823
progressive web apps, I love the
 web.  The web is the biggest 

05:03:55.824 --> 05:03:57.826
most important

05:04:02.457 --> 05:04:05.453
 platform, you publish your idea
 to a super low barrier to 

05:04:05.454 --> 05:04:11.070
entry.  Mobile is very 
important.  And the Web Ex 

05:04:11.071 --> 05:04:14.678
importance on mobile, it hasn't 
always been great.  Progressive 

05:04:14.679 --> 05:04:18.882
web apps are here to bridge the 
gap between where we wish mobile

05:04:19.150 --> 05:04:21.681
 web was and where it is.    
You may have heard a lot of 

05:04:21.682 --> 05:04:24.475
things about progressive web 
apps, all of the technologies in

05:04:24.678 --> 05:04:28.079
 it, all of the different things
 that make it up, but really 

05:04:28.080 --> 05:04:31.773
progressive web apps boil down 
to two key ideas:  You need a 

05:04:31.774 --> 05:04:35.074
first class mobile experience 
for your site, that means that 

05:04:35.075 --> 05:04:38.977
if I'm looking at a site on a 
phone it feels like it belongs 

05:04:38.978 --> 05:04:42.571
on that phone and it has nice 
big touch targets, it feels like

05:04:42.865 --> 05:04:46.306
 it belongs on the system.    
The other thing that's kind of 

05:04:46.307 --> 05:04:52.492
unique to Progressive Web Apps 
and is available, you need a 

05:04:52.493 --> 05:04:55.894
first class connectivity 
experience.  If I'm at home on 

05:04:55.895 --> 05:04:58.837
blazing fast wi-fi power      

05:05:02.002 --> 05:05:05.310
 powered by Google Fiber, in a 
subway, no access at all, I 

05:05:05.311 --> 05:05:08.401
should be able to get access 
from the web applications.  

05:05:08.402 --> 05:05:13.401
That's not been possible for a 
long time.    

05:05:13.402 --> 05:05:18.104
Really, progressive web apps, it
 is not a separate thing, a 

05:05:18.105 --> 05:05:20.900
separate system we're buying 
into, before I built web apps 

05:05:20.901 --> 05:05:25.200
but now progressive web apps!  
They're now a new set of 

05:05:25.201 --> 05:05:29.722
practices and technologies that 
help us build good web apps.  Of

05:05:29.815 --> 05:05:32.999
 course picking technologies for
 building web apps is pretty 

05:05:33.000 --> 05:05:38.222
hard.  There is a ton of things 
out there, hard to know what to 

05:05:38.223 --> 05:05:41.523
pick, who to use, why picking 
this stack over another stack 

05:05:41.524 --> 05:05:45.709
and as you may notice from my 
shirt, I'm a fan of Firebase.  

05:05:45.710 --> 05:05:48.525
Firebase is an integrated suite 
of products helping you develop 

05:05:48.526 --> 05:05:53.218
your applications,   grow your 
user base and earn more money.  

05:05:53.219 --> 05:05:56.422
For web applications Firebase 
saves you a lot of time and 

05:05:56.423 --> 05:05:59.927
hassle of choosing what's the 
right way to do X or the correct

05:06:00.121 --> 05:06:05.137
 thing to do for Y.    
Let's say that I have an idea, I

05:06:05.315 --> 05:06:11.149
 want to build the world's first
 100% emoji powered team 

05:06:11.150 --> 05:06:15.339
collaborated app.  I'm excited 
about it.  I go to Jake and talk

05:06:15.555 --> 05:06:18.550
 about service workers and 
realize it is the world's second

05:06:18.633 --> 05:06:23.142
 100% emoji powered team 
collaboration app.  I need to 

05:06:23.143 --> 05:06:26.934
move quickly.  I have to build 
something, get it out there so 

05:06:26.935 --> 05:06:30.558
that they don't run away with 
all of the users I want!  I may 

05:06:30.559 --> 05:06:37.371
integrate with Firebase so that 
users can sign in with Google , 

05:06:37.372 --> 05:06:41.056
gethad you been, Twitter 
credentials and get in the app 

05:06:41.057 --> 05:06:44.659
quickly.  I need a place for the
 application data.  I'll use the

05:06:45.443 --> 05:06:49.262
 Firebase realtime database, no 
matter the client, whenever any 

05:06:49.263 --> 05:06:52.815
user changes data in my system 
it is instantly synced to all 

05:06:52.816 --> 05:06:56.655
other connected devices without 
me having to write complex 

05:06:56.656 --> 05:07:02.744
pulling logic, anything else.  
Firebase op and database make it

05:07:03.454 --> 05:07:05.462
 easy to build powerful web 
applications.    

05:07:05.463 --> 05:07:08.155
I need a place to put that 
application.  I may want to 

05:07:08.156 --> 05:07:13.329
deploy it to Firebase hosting.  
It is a static web hosting 

05:07:13.330 --> 05:07:17.051
service that let's you deploy 
your site to a global CDN with a

05:07:17.369 --> 05:07:19.747
 simple command line 
implication.  It takes a few 

05:07:19.748 --> 05:07:24.122
seconds and it is really easy to
 get started.    

05:07:24.123 --> 05:07:28.062
Now I have   built my web app.  
I have an idea of what I'm 

05:07:28.063 --> 05:07:32.052
doing.  I have deployed it to 
Firebase hosting.  Let's look at

05:07:32.053 --> 05:07:36.005
 the web app.    
This is --

05:07:41.277 --> 05:07:43.967
 oh.    
I need to start a web server 

05:07:43.968 --> 05:07:47.566
here.  This is a simple web 
application build with Firebase 

05:07:47.567 --> 05:07:54.579
and polymer, Google'S library 
for web components and you can 

05:07:54.580 --> 05:07:58.471
put it in the integrations.    
I'll refresh.  You see this.  I 

05:07:58.472 --> 05:08:04.941
will sign in with Google With 
teamoji.    

05:08:04.942 --> 05:08:07.882
The demo Gods are against me.  
That's all right.    

05:08:07.883 --> 05:08:13.482
Here we go.    
I have signed in with Google .  

05:08:13.483 --> 05:08:18.079
As you see, I have the team 
status updates and I can update 

05:08:18.080 --> 05:08:21.106
things.  Since I have had two 
demo failures I'm feeling 

05:08:21.107 --> 05:08:25.499
nervous right now.  I want to 
let my team know that.  I can 

05:08:25.500 --> 05:08:33.387
create a new team.    
Let's make a Google I/O team 

05:08:33.388 --> 05:08:36.189
here.    
All right.  I have made my 

05:08:36.190 --> 05:08:41.305
Google I/O team.  I'm feeling a 
bit better, it hasn't had 

05:08:41.306 --> 05:08:44.478
another train wreck yet.    
This is my application.  You 

05:08:44.479 --> 05:08:48.304
know, it worked well.  If I'm a 
web user, I access this, whether

05:08:48.488 --> 05:08:51.402
 it is in a browser simulating a
 mobile device, on a real mobile

05:08:51.705 --> 05:08:57.811
 device, it will be a good 
experience.  What happens if I 

05:08:57.812 --> 05:09:02.204
go offline?  That's not a great 
user experience.  In fact, 

05:09:02.205 --> 05:09:05.911
that's not any user experience. 
 My app is completely gone.    

05:09:06.177 --> 05:09:10.213
You may have heard a lot about 
offline first with regard to 

05:09:10.214 --> 05:09:12.602
progressive web apps, that's not
 the only important thing.  

05:09:12.603 --> 05:09:16.206
Believe it or not, connectivity,
 it is pretty good in a lot of 

05:09:16.207 --> 05:09:18.508
places -- or at least good 
enough.   You're not going to be

05:09:19.112 --> 05:09:22.904
 offline much of the time.  
There may be a significant 

05:09:22.905 --> 05:09:25.082
portion of the time that you 
don't have the best 

05:09:25.083 --> 05:09:28.742
connectivity.    
Let's say I have just is a 

05:09:28.743 --> 05:09:34.510
regular 3G connection.  I want 
to load my teamoji app.  I'm 

05:09:34.511 --> 05:09:39.813
going to vamp a bit.  This takes
 a long time actually.    

05:09:39.814 --> 05:09:44.237
Low connectivity and web 
applications traditionally have 

05:09:44.238 --> 05:09:47.539
not mixed well.  That was 10, 15
 seconds to load the web 

05:09:47.540 --> 05:09:50.301
application and that's not 
really acceptable to my users.  

05:09:50.302 --> 05:09:54.336
If I hit that every time I want 
to go update my status, no one 

05:09:54.337 --> 05:09:58.720
will adopt my application.  We 
need to use new technologies to 

05:09:58.721 --> 05:10:02.556
make this a better experience.  

05:10:02.557 --> 05:10:05.908
Right now I have my web 
application, there is nothing 

05:10:05.909 --> 05:10:08.635
wrong with existing web 
applications and existing 

05:10:08.636 --> 05:10:11.655
technology.  If I have a good 
Internet connection I can build 

05:10:11.656 --> 05:10:16.253
a web app that leaves my user 
feeling really happy much of the

05:10:16.477 --> 05:10:20.447
 time.  We can do more.  We can 
integrate our web application 

05:10:20.448 --> 05:10:24.148
with the platform a little 
better so that I get things like

05:10:24.259 --> 05:10:28.247
 a nice icon on my home screen 
or a splash screen when I'm 

05:10:28.248 --> 05:10:31.041
loading.  Now users feel more 
like this is designed for 

05:10:31.042 --> 05:10:33.662
mobile, this is something that I
 can use.    

05:10:33.663 --> 05:10:41.165
We can go even further and cash
      have the bare bones and 

05:10:41.166 --> 05:10:44.862
the application, they're ready 
instantly when we boost the web 

05:10:44.863 --> 05:10:47.767
application.  Now users are 
really happy.  That's what they 

05:10:47.768 --> 05:10:52.130
want!  They want the app to be 
fast, they want it to work where

05:10:52.363 --> 05:10:55.052
 they go and we can take it a 
step further and make the 

05:10:55.053 --> 05:10:58.873
application data offline so even
 if they have no connectivity at

05:10:58.874 --> 05:11:01.287
 all they can use the 
application.  That makes them so

05:11:01.484 --> 05:11:03.484
 happy they turn into a cat for 
some

05:11:06.472 --> 05:11:08.164
 reason!
I'm talking about progressive 

05:11:08.165 --> 05:11:12.074
web apps and something I want to
 emphasize, that progressive web

05:11:12.679 --> 05:11:16.364
 apps, believe $or not, they're 
built progressively.  This is 

05:11:16.365 --> 05:11:18.671
not all or nothing.  You don't 
have want to do everything I'm 

05:11:18.672 --> 05:11:22.372
talking about here today all at 
once and, you know, spend months

05:11:22.769 --> 05:11:26.976
 developing it and then do a big
 bang launch.  Each technology 

05:11:26.977 --> 05:11:31.682
can be implemented one by one 
adding new features to the web 

05:11:31.683 --> 05:11:33.789
applications, making it a better
 experience on mobile and making

05:11:33.986 --> 05:11:38.590
 your users more happy because 
that's what it is all about.  

05:11:38.591 --> 05:11:41.490
You know, forget what I said 
earlier,   progressive web apps 

05:11:41.491 --> 05:11:45.282
are not a way to build good web 
apps, we can do that.    

05:11:45.283 --> 05:11:49.198
Progressive web apps is a way to
 build great web apps.    

05:11:49.485 --> 05:11:52.966
How do we achieve that 
greatness?  Where do we go to 

05:11:52.967 --> 05:11:56.171
get from where we are today to a
 great progressive web apps that

05:11:56.307 --> 05:12:00.183
 works in all of these 
situations?  Something that I 

05:12:00.184 --> 05:12:05.387
want to sort of emphasize and 
remind you, users don't care 

05:12:05.388 --> 05:12:09.089
what technology stack you use to
 build your application.   They 

05:12:09.090 --> 05:12:11.869
don't care what framework you 
choose, they don't care even 

05:12:11.870 --> 05:12:15.195
whether this a native or a 
mobile app.  For users, if it 

05:12:15.196 --> 05:12:19.193
looks like an app, if it feels 
like a an app, it is an app!  

05:12:19.194 --> 05:12:23.905
That's all there is to it.  They
 want a good experience.    

05:12:23.906 --> 05:12:29.099
What we're going to do today, 
we'll take this teamoji app and 

05:12:29.100 --> 05:12:33.292
add better experiences so it 
becomes a first class mobile 

05:12:33.293 --> 05:12:36.905
application.    
The first thing we'll do, it is 

05:12:36.906 --> 05:12:40.803
easy, we'll add a web app 
manifest to the application.  A 

05:12:40.804 --> 05:12:45.506
web app manifest is just a new 
standard that allows you to 

05:12:45.507 --> 05:12:48.418
provide some data about your 
application so that browsers and

05:12:48.808 --> 05:12:52.205
 operating systems can pick that
 up and use it for various hints

05:12:52.408 --> 05:12:55.914
 on how to work.
Here is what it looks like.  We 

05:12:55.915 --> 05:12:58.922
have the object, we have a name,
 a short name, so the short name

05:12:59.215 --> 05:13:02.812
 is used under an application 
icon on the home screen, the 

05:13:02.813 --> 05:13:07.008
name may be used on the splash 
screen as it launches.    

05:13:07.009 --> 05:13:09.493
We have a theme, background 
color.  Want theme color, going 

05:13:09.494 --> 05:13:13.050
to the title bar on Android when
 in the task switcher.   The 

05:13:13.051 --> 05:13:15.904
background color is going to be 
the background of your splash 

05:13:15.905 --> 05:13:17.905
screen as the application 
launches.    

05:13:17.952 --> 05:13:23.326
We have some configuration about
 dig play          display and 

05:13:23.327 --> 05:13:26.494
orientation.When I launch the 
app, how do I want it to feel?  

05:13:26.495 --> 05:13:30.197
Stand alone is the closest 
analogue to standard native 

05:13:30.198 --> 05:13:34.214
mobile application launching in 
its own window, no browser 

05:13:34.215 --> 05:13:37.231
around it, a full- screen mode 
with a game or you can bring 

05:13:37.232 --> 05:13:41.465
browser UI in if you haven't 
completely converted to an app 

05:13:41.466 --> 05:13:46.551
friendly UI.    
Finally, you want to point      

05:13:46.552 --> 05:13:51.364
 provide icons and you have to 
provide a big array of sizes and

05:13:51.365 --> 05:13:54.449
 that's a hassle.   Remembering 
the names of all of this stuff 

05:13:54.450 --> 05:14:01.450
and what I have to do, it is a 
hassle.  I built a little tool, 

05:14:01.451 --> 05:14:04.555
the web app manifest generator. 
 I will take a moment to show 

05:14:04.556 --> 05:14:12.674
you what it looks like.  Here it
 is.  We can put in teamoji, 

05:14:12.675 --> 05:14:17.843
team status, my name, short 
name, let's see I want pa nice 

05:14:17.844 --> 05:14:21.667
material design amber for this 
-- a nice material design amber 

05:14:21.668 --> 05:14:25.190
for this.  That's what I'm 
feeling.  I'll paste that in.  

05:14:27.179 --> 05:14:30.418
app is designed for portrait 
mode and I have to pick an icon,

05:14:31.675 --> 05:14:35.372
 I'll pick the logo.  This will 
generate a zip file that 

05:14:35.373 --> 05:14:41.389
contains your manifest and 
resized icons for all of the 

05:14:41.390 --> 05:14:44.270
different sizes you'll need.  
This is not implicated tool but 

05:14:44.271 --> 05:14:50.193
saves you time, makes it easier 
to get started.  You have no 

05:14:50.194 --> 05:14:52.541
excuse not to add this to the 
application.    

05:14:52.542 --> 05:14:55.588
I will install this web app 
manifest and what is the result?

05:14:56.190 --> 05:15:00.282
  If I look at my web app on my 
phone after installing the web 

05:15:00.283 --> 05:15:04.216
app manifest I'll see a home 
screen icon if I do add to home 

05:15:04.217 --> 05:15:07.805
screen.  I'll get a home screen 
install banner if I use that web

05:15:07.993 --> 05:15:10.295
 app manifest and some of the 
other technologies we'll talk 

05:15:10.296 --> 05:15:15.318
about in a few minutes.    
If I load the app I see the nice

05:15:15.495 --> 05:15:19.002
 flash screen, rather than a 
blank white page of Chrome 

05:15:19.003 --> 05:15:22.226
trying to load the app I see the
 nice splash screen that waits 

05:15:22.227 --> 05:15:26.397
until the application started to
 load to kick it over to the 

05:15:26.398 --> 05:15:29.708
browser.    
I see there is a nice-themed 

05:15:29.709 --> 05:15:34.911
title bar.  With a few minutes 
of work, adding the file in the 

05:15:34.912 --> 05:15:37.216
application, referencing it, 
then we have already made the 

05:15:37.217 --> 05:15:43.406
app feel more at home on mobile.
  Now our users are happier.  

05:15:43.407 --> 05:15:48.110
What's next?  You may have seen 
the statistic recently that the 

05:15:48.111 --> 05:15:54.799
average website is now as big as
 the original Doom game from the

05:15:54.800 --> 05:15:58.630
 early 90s, over 2mig.  When you
 go to a website, on average 

05:15:58.631 --> 05:16:02.232
you're downloading 2megs worth 
of content.  That sounds like a 

05:16:02.233 --> 05:16:05.921
lot.  It is.  I want you to keep
 something in mind.  Web apps 

05:16:05.922 --> 05:16:09.028
are kind of held to a higher 
standard here.   If you look at 

05:16:09.029 --> 05:16:12.818
the top three applications in 
Android each one of those is 

05:16:12.819 --> 05:16:18.930
over 30megs.  You install those,
 that's 15 times the average if 

05:16:18.931 --> 05:16:22.545
website.  Web apps are held to a
 different standard, 

05:16:22.546 --> 05:16:24.638
traditionally every time we go 
to the web app we're loading all

05:16:24.838 --> 05:16:30.106
 of that content again unless we
 get lucky with recent browser 

05:16:30.107 --> 05:16:32.939
cache.    
There has to be a better way.  

05:16:32.940 --> 05:16:37.334
There is.    
We can off line the app shell.  

05:16:37.335 --> 05:16:40.032
The app shell if you built 
single-page applications, that's

05:16:40.347 --> 05:16:45.125
 the java script, HDMHL, the 
images that make up your web 

05:16:45.126 --> 05:16:48.137
applications Chrome, not the 
user data but the stuff that 

05:16:48.138 --> 05:16:50.626
needs to boot strap in the 
browser for the application to 

05:16:50.627 --> 05:16:54.245
be able to run.    
If we want this to be available 

05:16:54.246 --> 05:16:58.259
offline so that our users have a
 fast experience even with slow 

05:16:58.260 --> 05:17:00.854
connectivity we're going to use 
service worker.    

05:17:00.855 --> 05:17:04.235
Service worker is a new 
low-level browser perimeter 

05:17:04.236 --> 05:17:07.753
active allowing you to install a
 java script running in the 

05:17:07.754 --> 05:17:10.242
background whether or not you 
have a web application open.   

05:17:10.243 --> 05:17:13.639
If you do have it open, if runs 
in the background, you pass 

05:17:13.640 --> 05:17:17.451
messages, if you don't have it 
open the service worker can 

05:17:17.452 --> 05:17:20.227
intercept network requests and 
decide how to handle it.  It can

05:17:20.552 --> 05:17:24.251
 intercept the request and say 
hey, I have a version of this 

05:17:24.252 --> 05:17:27.759
locally, I'll serve that up 
instead.  You can do really 

05:17:27.760 --> 05:17:30.668
cool, complex offline tasks 
using the service worker.    

05:17:30.969 --> 05:17:34.572
There is only two things you 
have to know -- to do to use 

05:17:34.573 --> 05:17:37.970
service worker.  First, you need
 a secure connection, service 

05:17:37.971 --> 05:17:41.861
worker only works over SSL.  It 
works on local hosts so that 

05:17:41.862 --> 05:17:45.174
you're not totally in trouble if
 you're doing the local 

05:17:45.175 --> 05:17:47.176
development.  If you're 
deploying to a production server

05:17:47.459 --> 05:17:50.968
 it has to be running SSL.    
The other thing that they need, 

05:17:50.969 --> 05:17:54.689
it is a had complex 
understanding of browser 

05:17:54.690 --> 05:17:58.680
networking semantics and to 
write that code to handle it 

05:17:58.681 --> 05:18:01.194
appropriately.  This is not 
simple.   This is powerful, it 

05:18:01.195 --> 05:18:03.579
is not simple.  That's actually 
great.    

05:18:03.580 --> 05:18:07.497
Service worker, it gives us 
powerful primitives that we at 

05:18:07.498 --> 05:18:10.275
developers can build on top of 
to make an easier experience.  

05:18:11.594 --> 05:18:17.489
that we need?  First of all, if 
you need a secure site I 

05:18:17.490 --> 05:18:21.595
recommend Firebase hosting, you 
get a free custom design domain 

05:18:21.596 --> 05:18:23.596
and bring that, it we'll 
provision a certificate for you,

05:18:23.686 --> 05:18:27.203
 you don't do anything, it all 
just works.  I'm excited about 

05:18:27.204 --> 05:18:29.531
that, I have wanted it for a 
long time.    

05:18:29.532 --> 05:18:31.532
&gt;&gt; [Applause].    

05:18:34.798 --> 05:18:37.494
&gt;&gt; MICHAEL BLEIH: The other 
thing that you can use is a 

05:18:37.495 --> 05:18:42.417
library called SW free cache, an
 open source library giving up 

05:18:42.418 --> 05:18:46.502
an easy way to generate service 
worker java script.  This is a 

05:18:46.503 --> 05:18:49.201
task that you would run in your 
normal web app approximately 

05:18:49.202 --> 05:18:51.493
build process generating a 
service worker for you and doing

05:18:51.722 --> 05:18:54.946
 most of the heavy lifting to 
get your app shell ready to go 

05:18:54.947 --> 05:18:59.303
off line.  There is two types of
 data.  It has static files, are

05:18:59.423 --> 05:19:02.408
 that will be the actual 
application file in your project

05:19:02.712 --> 05:19:07.229
 directory, it all of the java 
script, HTML, all of that stuff 

05:19:07.230 --> 05:19:12.113
and it caches a remote file, 
fonts from Google fonts or 

05:19:12.114 --> 05:19:18.520
loading images you can cache 
those on demand with this as 

05:19:18.521 --> 05:19:21.413
well.    
Let's take a had look of how to 

05:19:21.414 --> 05:19:26.533
cache the static files:  This is
 Gulp as an example, this is 

05:19:26.534 --> 05:19:31.220
just a node module, you can 
install it or run it 

05:19:31.221 --> 05:19:34.912
independently as a command line 
tool.  I'm defining if the task,

05:19:35.343 --> 05:19:40.726
 generate service worker.  I 
require my free cache library 

05:19:40.727 --> 05:19:45.021
and then I just point it to the 
service worker java script I 

05:19:45.022 --> 05:19:46.732
want to generate.  It is 
important to note that the 

05:19:46.733 --> 05:19:50.825
service worker should be in the 
root of your web application 

05:19:50.826 --> 05:19:53.935
because server workers only work
 on things that are at the same 

05:19:53.936 --> 05:19:57.447
level or lower in the browser 
hierarchy.  You want to put it 

05:19:57.448 --> 05:20:00.940
at the root so that the service 
worker can do everything you 

05:20:00.941 --> 05:20:06.637
need it to do.    
Next, a cache ID, probably the 

05:20:06.638 --> 05:20:12.553
name of the app, I provide the 
static files I want to cache.  

05:20:12.554 --> 05:20:16.236
I'm picking everything from my 
build directory and you may or 

05:20:16.237 --> 05:20:19.818
may not want to do it depending 
on the size of the application. 

05:20:19.819 --> 05:20:25.042
  There are limits to the caches
 and things will be evicted if 

05:20:25.043 --> 05:20:27.616
it is big, you have to tune, 
play with it until you have the 

05:20:27.617 --> 05:20:30.871
right stuff to boot strap really
 fast.    

05:20:30.872 --> 05:20:36.761
Finally, we strip the prefix 
disk so the urls work and it is 

05:20:36.762 --> 05:20:38.567
all going to work.
No big deal.    

05:20:38.568 --> 05:20:41.363
The next thing, you register the
 service worker.  First we're 

05:20:41.364 --> 05:20:43.364
going to detect if

05:20:47.767 --> 05:20:52.048
 the browser has service worker.
  If we have service worker we 

05:20:52.049 --> 05:20:56.863
call navigator.service worker 
and point to the service worker.

05:20:57.269 --> 05:20:59.479
  This returns a pro police that
 will complete when the service 

05:20:59.480 --> 05:21:04.578
worker is registered or, of 
course, we can see if any errors

05:21:04.770 --> 05:21:08.416
 happen and deal with that.    
This is a simple way to get 

05:21:08.417 --> 05:21:11.964
started with service worker.  We
 have the files offline by 

05:21:11.965 --> 05:21:14.168
generating this service worker 
and we have registered it in the

05:21:14.669 --> 05:21:17.965
 browser.    
The other thing to do, it is 

05:21:17.966 --> 05:21:21.868
cache remote files, it adding 
additional configuration to the 

05:21:21.869 --> 05:21:31.783
free cache for run time caching.
  This is for a cache-first 

05:21:31.784 --> 05:21:35.376
strategy, that means that web 
fonts don't change often.  I can

05:21:37.285 --> 05:21:41.911
 depend on the version here 
because the network version 

05:21:41.912 --> 05:21:45.684
won't be any different.  It will
 respond immediately.  For other

05:21:45.982 --> 05:21:49.472
 things, profile pictures, 
Firebase storage URLs from 

05:21:49.473 --> 05:21:53.675
things you up loaded, those are 
things that may change.  You 

05:21:53.676 --> 05:21:56.891
want to use network first.  That
 just says go to the network, if

05:21:56.892 --> 05:22:02.892
 I get a response, use the 
network response.  If I don't, 

05:22:02.893 --> 05:22:08.468
use the cache response to work 
off line.  That's the precache, 

05:22:08.469 --> 05:22:13.696
that's ouchline.  We'll add this
 to teamoji.    

05:22:13.697 --> 05:22:17.586
I'll go over here, pull up the 
file.    

05:22:17.587 --> 05:22:20.950
The first thing I'll do is 
define that go task.  This is it

05:22:21.289 --> 05:22:24.935
 what I just showed you with a 
bit more configuration, nothing 

05:22:24.936 --> 05:22:29.998
too different.  I'll add that in
 the build process, generate 

05:22:29.999 --> 05:22:31.999
service worker.

05:22:36.311 --> 05:22:40.601
have to register it as well.    
I have this app that's loaded 

05:22:40.602 --> 05:22:44.610
immediately and then I'll 
register the service worker in 

05:22:44.611 --> 05:22:47.110
there.    
I have added a bit of extra 

05:22:47.111 --> 05:22:52.102
logic here.  One of the things 
you may have seen if used Google

05:22:52.103 --> 05:22:56.721
 Inbox or other progressive web 
apps, they pop-up a 

05:22:56.722 --> 05:22:59.182
notification, a new version is 
available, click to refresh.  

05:22:59.183 --> 05:23:02.393
That's here.  We can detect if a
 service worker was already 

05:23:02.394 --> 05:23:05.395
installed and just upgraded and 
we can display amy me of message

05:23:05.901 --> 05:23:08.597
 saying a new version, you may 
want to refresh or if it is a 

05:23:08.598 --> 05:23:12.856
first time, we can let people 
know, hey, it is now offline 

05:23:12.857 --> 05:23:16.525
ready.    
Now we have added this to the go

05:23:17.414 --> 05:23:21.921
 file, we have added it to our 
application java script.  Let's 

05:23:21.922 --> 05:23:23.922
build it, see what happens.    

05:23:27.623 --> 05:23:33.606
     I'm going back over here.  
I'll use my full network 

05:23:33.607 --> 05:23:39.021
connection to get the first page
 load.  Now you can see at the 

05:23:39.022 --> 05:23:43.094
bottom Teamoji is offline ready.
  I'm out and about now, I'm not

05:23:43.346 --> 05:23:49.136
 on a great connection, I'm on 
-- that's harsh, let's go to 

05:23:49.137 --> 05:23:53.805
regular 2G.  I'll refresh the 
page.  You can see that loaded 

05:23:53.806 --> 05:23:57.734
up in a couple of seconds versus
 the 15 seconds it took before. 

05:23:57.735 --> 05:24:01.547
 By adding a few lines of code 
-- sorry.  If you want to 

05:24:01.548 --> 05:24:07.735
applaud, go ahead!
&gt;&gt; [Applause].     with a few 

05:24:07.736 --> 05:24:11.362
lines of code in the gulp file, 
a simple service worker 

05:24:11.363 --> 05:24:14.449
registration in the app it java 
script we have made our app more

05:24:15.141 --> 05:24:18.653
 usable on poor connectivity 
experiences.    

05:24:18.654 --> 05:24:24.331
Our app isn't going to work 
completely off line yet.   We're

05:24:25.452 --> 05:24:28.660
 just caching the shell.  What's
 after that?  Well, Pacific -- 

05:24:28.661 --> 05:24:31.953
sorry.  Now the user is happier,
 now moving on.    

05:24:31.954 --> 05:24:36.553
Of course the final goal of this
 is to have a truly first class 

05:24:36.554 --> 05:24:39.754
experience.  If you can have 
offline data, if your 

05:24:39.755 --> 05:24:43.365
application can work when there 
is no connectivity at all the 

05:24:43.366 --> 05:24:46.561
web application stands 
Toe-to-toe with world class 

05:24:46.562 --> 05:24:50.657
native applications.  There is 
no difference from your user's 

05:24:50.658 --> 05:24:53.054
perspective.  They can use it 
off line, snappy, responsive, 

05:24:53.055 --> 05:24:56.182
all of the things that they're 
looking for and you don't have 

05:24:56.183 --> 05:24:58.751
to go native to get the 
advantages.    

05:24:58.752 --> 05:25:02.367
Finally, we're going to offline 
the data in the application.  To

05:25:04.429 --> 05:25:07.953
 do that, actually a quick 
caveat before continuing, this 

05:25:07.954 --> 05:25:12.165
is the part that's most app 
specific.   There are different 

05:25:12.166 --> 05:25:16.159
strategies you may want to use 
when going offline.  For some 

05:25:16.160 --> 05:25:18.979
applications, you may need to 
store a draft of a document and 

05:25:18.980 --> 05:25:22.689
then when you go back online you
 sync it.  Other applications 

05:25:22.690 --> 05:25:26.472
and many, all you really need is
 a view of what they were last 

05:25:26.473 --> 05:25:28.683
looking at and that's useful 
enough.    

05:25:28.684 --> 05:25:36.380
For this example we're going to 
use a read-only offline cache.  

05:25:38.583 --> 05:25:41.178
Firebase database, you take it, 
display it directly in the 

05:25:41.179 --> 05:25:45.684
browser normally, but in order 
to support a full offline reload

05:25:45.896 --> 05:25:49.685
 situation I'm going to put one 
step in the middle.  I'll add an

05:25:49.992 --> 05:25:53.490
 index mirror.   I'll take all 
of that data from the realtime 

05:25:53.491 --> 05:25:59.091
database and mirror it locally 
to an offline database available

05:25:59.291 --> 05:26:03.093
 in most had browsers.  Then I'm
 going to use the browser only 

05:26:03.094 --> 05:26:07.364
to access that offline mirrored 
data.  By using the browser only

05:26:07.613 --> 05:26:11.189
 against the index DB data that 
means that when I'm off line the

05:26:11.501 --> 05:26:13.494
 browser doesn't know the 
difference.  It is just reading 

05:26:13.495 --> 05:26:17.394
the same data it was already 
reading but when I'm online I 

05:26:17.395 --> 05:26:20.902
can use the browser to push 
directly into Firebase and 

05:26:20.903 --> 05:26:23.097
update changes.    
This is a relatively simple 

05:26:23.098 --> 05:26:27.014
thing to implement but offers 
powerful features by mirroring 

05:26:27.015 --> 05:26:32.712
all of the data locally.  I'll 
get a little help from the 

05:26:32.713 --> 05:26:38.614
friends at Polymer.  Two things 
I'm excited to announce:  The 

05:26:38.615 --> 05:26:44.919
first, polymer fire, an official
 set of polymer to Firebase.    

05:26:45.242 --> 05:26:47.242
[Applause].    

05:26:51.317 --> 05:26:53.705
&gt;&gt; MICHAEL BLEIH: The second 
thing, app storage, built by the

05:26:54.336 --> 05:26:57.403
 Polymer team as part of the 
Polymer app toolkit providing 

05:26:57.404 --> 05:27:01.312
easy ways to do things like 
mirroring data offline.  We'll 

05:27:01.313 --> 05:27:06.830
use the two things together to 
take our data and make it 

05:27:06.831 --> 05:27:10.925
available completely offline.  
We'll see how it works.

05:27:11.332 --> 05:27:16.430
First, this is Polymerfire.  
I'll import into the application

05:27:16.431 --> 05:27:22.330
 -- if you're not familiar with 
Polymer, the link import is the 

05:27:22.331 --> 05:27:25.547
a script source, you're 
importing into the application. 

05:27:27.427 --> 05:27:30.451
element to set up and configure 
my Firebase application.  All of

05:27:30.648 --> 05:27:33.544
 the data that you need to put 
into this, it is available from 

05:27:33.545 --> 05:27:37.245
the Firebase console for your 
project.  You take those values,

05:27:37.943 --> 05:27:40.837
 you copy and paste them in the 
application, you put one 

05:27:40.838 --> 05:27:44.550
Firebase application in the page
 and it is initial rised across 

05:27:44.551 --> 05:27:46.743
everything.    
-- initialized across 

05:27:46.744 --> 05:27:50.843
everything.    
Then Firebase off, I have to put

05:27:51.057 --> 05:27:55.247
 that in the page.   I'll select
 a provider, I'll use Google 

05:27:55.248 --> 05:27:58.360
Authentication and bind the user
 in the application.  The user 

05:27:58.361 --> 05:28:05.844
will be null if I'm not signed 
in.  It will be various user 

05:28:05.845 --> 05:28:09.865
data if I'm signed in.  How do I
 get there?  I have a simple log

05:28:10.061 --> 05:28:16.359
 in function, the sign in with 
pop-up method, this mirrors the 

05:28:16.360 --> 05:28:24.560
standard Firebase SDK in java 
script which has a sign in flow 

05:28:24.561 --> 05:28:28.069
and it binds in the application 
and flows through.  The 

05:28:28.070 --> 05:28:29.955
application code, it is simple. 

05:28:29.956 --> 05:28:37.362
I can display a welcome message 
if I detect there is a user and 

05:28:37.363 --> 05:28:39.977
a log in screen if there is not 
a user.    

05:28:40.268 --> 05:28:43.573
For the Firebase database, 
things are also very simple.   

05:28:43.574 --> 05:28:47.323
If I want to sync a document, an
 individual document, say I have

05:28:47.681 --> 05:28:52.165
 user preferences, I want to 
sync all of the preferences in 

05:28:52.166 --> 05:28:55.879
the prowser and use that.  I use
 the Firebase document element. 

05:28:55.880 --> 05:28:59.670
 I provide a path to the 
document that I want to sync and

05:28:59.671 --> 05:29:03.574
 I bind that data from the data 
property into the application.  

05:29:06.275 --> 05:29:09.091
element allowing me to quarry 
collections in Firebase using 

05:29:09.092 --> 05:29:13.181
the same quarry properties that 
the Firebase database allows and

05:29:13.682 --> 05:29:19.469
 sync that data in my path.    
This is how I originally built 

05:29:19.470 --> 05:29:22.802
teamoji with these elements, I 
built the application and at 

05:29:22.803 --> 05:29:26.194
this point it is still not 
offline.  While the Firebase 

05:29:26.195 --> 05:29:29.782
database supports offline if you
 lose connectivity and come back

05:29:30.192 --> 05:29:33.401
 online, if I hard refresh the 
page, all of that data, it is 

05:29:33.402 --> 05:29:40.720
gone.  It is just an in-memory 
cache.  One extra step, 

05:29:40.721 --> 05:29:45.999
integrate the app mirror.  Here 
is the Firebase element, I'm 

05:29:46.000 --> 05:29:48.984
quarrying updates from a user, 
the current user I'm binding 

05:29:48.985 --> 05:29:53.693
into the path, I'm providing 
some various quarry elements or 

05:29:53.694 --> 05:29:59.115
quarry properties and now I'm 
going to import app index DB 

05:29:59.116 --> 05:30:01.996
mirror p that's from the app 
storage element.    

05:30:01.997 --> 05:30:05.920
An index DB mirror does what you
 saw in the diagram.   It takes 

05:30:05.921 --> 05:30:09.504
data that is bound into it 
creating an offline mirror of 

05:30:09.505 --> 05:30:12.116
it, making that available to the
 browser whether or not you have

05:30:13.212 --> 05:30:16.523
 connectivity.    
The way I'll do this, first, 

05:30:16.524 --> 05:30:20.314
I'll bind the data from my 
Firebase

05:30:24.400 --> 05:30:27.433
 query rather in a public 
variable I will do a private 

05:30:27.434 --> 05:30:31.713
variable, the updates, then I 
add a mirror element and this 

05:30:31.714 --> 05:30:35.492
actually mirrors in many ways 
the properties of the Firebase 

05:30:35.493 --> 05:30:39.344
element.  I have a key that 
tells them where to store it and

05:30:39.529 --> 05:30:44.232
 a great thing on this key, as 
that user UDI changes, loading 

05:30:44.233 --> 05:30:49.037
different data, if I have, you 
know, a switcher where I pick 

05:30:49.038 --> 05:30:52.133
between multiple things, all of 
that data will be cached off 

05:30:52.134 --> 05:30:56.935
line to the different keys so I 
can have the same UI state 

05:30:56.936 --> 05:30:59.733
change and all of that data even
 when offline.    

05:30:59.734 --> 05:31:03.698
The session property there 
simply says if this value 

05:31:03.699 --> 05:31:06.018
changes we want to wipe out 
everything.  If I have a user 

05:31:06.019 --> 05:31:09.135
that logs out and a different 
user logs in, they're not going 

05:31:09.136 --> 05:31:13.060
to see the other user data, it 
will be wiped away.    

05:31:13.061 --> 05:31:18.150
What I do with the app index DB 
mirror is bind the updates 

05:31:18.151 --> 05:31:21.946
variable that I pulled out of 
Firebase query in the data 

05:31:21.947 --> 05:31:25.850
property and then for the 
application I use the 

05:31:25.851 --> 05:31:29.659
persistence data property, the 
data that's been persisted into 

05:31:29.660 --> 05:31:33.453
the index DB.  That's all there 
is to it.  When I have 

05:31:33.454 --> 05:31:38.167
implemented the app index mirror
 alongside Firebase query, the 

05:31:38.168 --> 05:31:40.338
data will be available off line.

05:31:40.339 --> 05:31:42.339
Let's look at

05:31:45.772 --> 05:31:50.688
 that.  Going in the main app 
element here moo.  I'm going to 

05:31:50.689 --> 05:31:55.778
-- here you see that the only 
data that this app needs is some

05:31:58.770 --> 05:32:01.678
 preferences, updates for the 
current team I'm looking at and 

05:32:01.679 --> 05:32:04.474
the list of teams.  It.
What I'll do, I'll take all of 

05:32:04.475 --> 05:32:10.400
those, I'll replace them with 
equivalence with the app index 

05:32:10.401 --> 05:32:13.693
mirror.  This is exactly the 
same pattern I showed you, 

05:32:13.694 --> 05:32:19.408
mirroring in the key, using the 
session, everything you just 

05:32:19.409 --> 05:32:20.879
saw.  That's what makes the data
 available offline.    

05:32:20.880 --> 05:32:26.590
You   Another thing I'll show 
you here, it is how to use the 

05:32:26.591 --> 05:32:30.072
browser to detect offline state 
so that you can change your UI. 

05:32:30.073 --> 05:32:34.211
 Since I'm implementing a 
read-only offline cache that 

05:32:34.212 --> 05:32:37.380
means I shouldn't be showing my 
users a button where they can 

05:32:37.381 --> 05:32:42.005
make an update if they're not 
able to while offline.    

05:32:42.006 --> 05:32:45.613
Ear here in an initialization 
function I'm going to show a 

05:32:45.614 --> 05:32:48.392
little java script in.  This is 
straight from the browser.  

05:32:48.393 --> 05:32:50.393
There isn't anything special 
about

05:32:53.406 --> 05:32:57.604
 this.   Navigator.online tells 
me if I am or not online 

05:32:57.605 --> 05:33:02.311
according to the browser.  This 
is no connectivity versus some, 

05:33:02.312 --> 05:33:05.402
even with the world's worst 
connection, it will still be 

05:33:05.403 --> 05:33:09.303
online but it gives you a 
semblance of when you're totally

05:33:10.005 --> 05:33:13.391
 offline.  I'll listen to both 
online and offline events and 

05:33:13.392 --> 05:33:15.612
set a property on my main app 
element.    

05:33:16.226 --> 05:33:19.914
I have already done some work of
 wiring in data to change UI 

05:33:19.915 --> 05:33:22.408
state throughout the it 
application.  Remember, all I'm 

05:33:22.409 --> 05:33:26.016
really doing to change all of 
that is setting offline to true 

05:33:26.017 --> 05:33:30.625
or false based on whether I 
detect that from the browser p  

05:33:30.913 --> 05:33:34.221
         browser.  I'll save 
that.  I'll rebuild the 

05:33:34.222 --> 05:33:38.645
application.    
When it is ready

05:33:41.721 --> 05:33:46.322
 -- now I'm going to refresh.  
I'm going to turn off throttling

05:33:46.511 --> 05:33:49.318
 for a moment.    
I just refreshed out of it.  You

05:33:49.409 --> 05:33:52.703
 can see for a moment that a 
banner popped up at the bottom 

05:33:52.704 --> 05:33:59.425
saying a new version is 
available, click to refresh.  

05:33:59.426 --> 05:34:01.128
Oops.    
Oh.    

05:34:01.129 --> 05:34:06.303
I missed actually importing -- 
yeah, the app index mirror 

05:34:06.304 --> 05:34:09.313
element.  That didn't work first
 try.  We'll give it another

05:34:19.839 --> 05:34:22.672
 spin.    
The server has started.  

05:34:22.673 --> 05:34:27.429
Refleshing.                   
Refreshing.    

05:34:27.430 --> 05:34:32.125
Now you can see I'm online, my 
data works.  I'm feeling a 

05:34:32.126 --> 05:34:35.749
little bit better again.

05:34:43.920 --> 05:34:48.147
I'm feeling good.  Now I'm going
 to do something that to me at 

05:34:48.148 --> 05:34:53.436
least seems like a bad idea to 
do in a live demo.  I'll turn 

05:34:53.437 --> 05:34:57.232
off my wi-fi.    
I'm offline.  As you see, the UI

05:34:57.443 --> 05:35:01.342
 state pretty quickly changed 
and     and reflected hey, 

05:35:01.343 --> 05:35:05.538
you're offline.  This would have
 worked with normal Firebase 

05:35:05.539 --> 05:35:09.662
java script, are it keeps an 
in-memory cache and everything 

05:35:09.663 --> 05:35:13.866
will work fine as long as I 
don't refresh the page.  Let's 

05:35:13.867 --> 05:35:17.986
refresh the page.  It is back 
online and my app is fully 

05:35:17.987 --> 05:35:19.987
offline.    
&gt;&gt; [Applause].    

05:35:27.962 --> 05:35:30.752
&gt;&gt; MICHAEL BLEIH: So that's how 
we build a progressive web app. 

05:35:30.753 --> 05:35:33.966
 That's how we make users not 
just like our application but 

05:35:33.967 --> 05:35:37.665
love it by providing them the 
features and the utility that 

05:35:37.666 --> 05:35:40.264
they need regardless of 
connectivity, regardless of 

05:35:40.265 --> 05:35:43.564
device, if they use this on the 
desktop, use it on their phone, 

05:35:43.565 --> 05:35:47.179
it is all the same, it all works
 great and that's the promise of

05:35:48.065 --> 05:35:50.964
 progressive web apps.    
Now that we have taken our 

05:35:50.965 --> 05:35:55.067
application to the next level 
what do we do after that?  Well 

05:35:55.068 --> 05:35:59.067
there is several things to do.  
Of course you can implement 

05:35:59.068 --> 05:36:02.278
offline write, you can make it 
so that you can compose data 

05:36:02.279 --> 05:36:06.284
offline, going online, it will 
sync.  The polymer fire app 

05:36:06.285 --> 05:36:09.490
storage duo does support this.  
There is a code lab available 

05:36:09.491 --> 05:36:12.094
linked from the end of the the 
talk that you can go through 

05:36:12.095 --> 05:36:15.001
showing you not only how to 
create a read-only cache but how

05:36:15.500 --> 05:36:21.302
 to create write offline data.  
We can also use the web push 

05:36:21.303 --> 05:36:25.252
API, a new standard that allows 
you to receive notifications 

05:36:25.253 --> 05:36:28.211
whether or not the app is open 
on the web.  You can use 

05:36:28.212 --> 05:36:31.290
Firebase Cloud messaging to send
 the messages to the browser 

05:36:31.291 --> 05:36:34.298
users and they'll receive that 
as a native notification from 

05:36:34.299 --> 05:36:38.610
Chrome and they'll be able to 
click and reengage.    

05:36:38.611 --> 05:36:42.392
You can also do a surprising 
amount of things with the web 

05:36:42.393 --> 05:36:47.406
and phones.  There is a cool 
website,

05:36:50.802 --> 05:36:53.095
 whatwebcandodto, go there and 
you can see all of the things 

05:36:53.096 --> 05:36:57.609
that your phone can handle.    
from Geo location, taking 

05:36:57.610 --> 05:37:01.197
pictures, accessing blue tooth 
beacons or the gyro, a ton of 

05:37:01.198 --> 05:37:04.419
stuff that I didn't realize 
until I saw the site that you 

05:37:04.420 --> 05:37:06.755
can do today with phone 
capabilities in the browser.

05:37:11.200 --> 05:37:15.002
  Progressive web apps, they're 
about building layer upon layer 

05:37:15.003 --> 05:37:18.490
to make your app experience 
better, to make your user's 

05:37:18.491 --> 05:37:23.121
experience better, and to make 
great web apps.    

05:37:23.122 --> 05:37:25.717
That's all I've got.  Thank you 
for listening.    

05:37:25.718 --> 05:37:30.110
If you're interested in hearing 
more, I'll be at the Firebase 

05:37:30.111 --> 05:37:33.504
office hours on stage 6 in 15 
minutes.  Everything I presented

05:37:33.718 --> 05:37:35.718
 is available on

05:37:38.416 --> 05:37:40.416
 get   

05:37:44.510 --> 05:37:49.206
GitHub, if you want to learn 
more, we can chat in the Google 

05:37:49.207 --> 05:37:52.130
space.    
Thank you.    

05:37:52.131 --> 05:37:54.131
[Applause].  

05:38:56.337 --> 05:38:58.337
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:40:50.486 --> 05:40:52.486
FB16.

05:44:06.297 --> 05:44:08.297
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:45:31.376 --> 05:45:35.278
FB16.

05:48:23.862 --> 05:48:25.862
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:50:10.213 --> 05:50:12.527
FB16.

05:50:17.772 --> 05:50:19.772
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:51:49.359 --> 05:51:50.672
FB16.

05:51:56.949 --> 05:51:58.949
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:53:24.190 --> 05:53:26.190
FB16.

05:53:31.039 --> 05:53:33.039
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:54:23.214 --> 05:54:25.214
FB16. Fireside Chat:  Firebase 
in the Real World. May 20th. 

05:56:02.350 --> 05:56:04.350
FB16.

05:56:09.263 --> 05:56:11.263
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:57:18.012 --> 05:57:20.012
FB16. Fireside Chat:  Firebase 
in the Real World. May 20th. 

05:58:27.993 --> 05:58:29.993
FB16.

05:58:34.474 --> 05:58:36.474
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

05:59:51.232 --> 05:59:53.232
FB16.

06:00:00.364 --> 06:00:02.364
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

06:01:55.611 --> 06:01:57.652
FB16.

06:02:08.035 --> 06:02:10.035
 Fireside Chat:  Firebase in the
 Real World. May 20th. 

