WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.130
 
today we're going to give you some

00:00:01.130 --> 00:00:01.140
today we're going to give you some
 

00:00:01.140 --> 00:00:04.070
today we're going to give you some
compelling reasons why you start

00:00:04.070 --> 00:00:04.080
compelling reasons why you start
 

00:00:04.080 --> 00:00:07.130
compelling reasons why you start
thinking about performance in your games

00:00:07.130 --> 00:00:07.140
thinking about performance in your games
 

00:00:07.140 --> 00:00:09.560
thinking about performance in your games
and VR experiences and we're going to

00:00:09.560 --> 00:00:09.570
and VR experiences and we're going to
 

00:00:09.570 --> 00:00:10.940
and VR experiences and we're going to
show you some of the texts that our team

00:00:10.940 --> 00:00:10.950
show you some of the texts that our team
 

00:00:10.950 --> 00:00:12.770
show you some of the texts that our team
has developed to help you create

00:00:12.770 --> 00:00:12.780
has developed to help you create
 

00:00:12.780 --> 00:00:15.770
has developed to help you create
high-performance games but first let me

00:00:15.770 --> 00:00:15.780
high-performance games but first let me
 

00:00:15.780 --> 00:00:17.120
high-performance games but first let me
introduce my good friend and colleague

00:00:17.120 --> 00:00:17.130
introduce my good friend and colleague
 

00:00:17.130 --> 00:00:20.240
introduce my good friend and colleague
walter van Orbison so water has a

00:00:20.240 --> 00:00:20.250
walter van Orbison so water has a
 

00:00:20.250 --> 00:00:21.740
walter van Orbison so water has a
background in game development he's

00:00:21.740 --> 00:00:21.750
background in game development he's
 

00:00:21.750 --> 00:00:24.439
background in game development he's
worked on Crytek Maxis and also a

00:00:24.439 --> 00:00:24.449
worked on Crytek Maxis and also a
 

00:00:24.449 --> 00:00:25.970
worked on Crytek Maxis and also a
gearbox so one of my personal favorite

00:00:25.970 --> 00:00:25.980
gearbox so one of my personal favorite
 

00:00:25.980 --> 00:00:28.939
gearbox so one of my personal favorite
games Borderlands water Tod game

00:00:28.939 --> 00:00:28.949
games Borderlands water Tod game
 

00:00:28.949 --> 00:00:32.030
games Borderlands water Tod game
programming at the guild hall and he's

00:00:32.030 --> 00:00:32.040
programming at the guild hall and he's
 

00:00:32.040 --> 00:00:34.160
programming at the guild hall and he's
created several open source game engines

00:00:34.160 --> 00:00:34.170
created several open source game engines
 

00:00:34.170 --> 00:00:36.319
created several open source game engines
and languages my favorite of which is

00:00:36.319 --> 00:00:36.329
and languages my favorite of which is
 

00:00:36.329 --> 00:00:40.400
and languages my favorite of which is
the deliciously named lobster water also

00:00:40.400 --> 00:00:40.410
the deliciously named lobster water also
 

00:00:40.410 --> 00:00:43.280
the deliciously named lobster water also
speaks six natural languages seven if he

00:00:43.280 --> 00:00:43.290
speaks six natural languages seven if he
 

00:00:43.290 --> 00:00:44.900
speaks six natural languages seven if he
include the one he invented when he was

00:00:44.900 --> 00:00:44.910
include the one he invented when he was
 

00:00:44.910 --> 00:00:46.910
include the one he invented when he was
a teenager and that only he and his

00:00:46.910 --> 00:00:46.920
a teenager and that only he and his
 

00:00:46.920 --> 00:00:50.180
a teenager and that only he and his
little sister understand overall he's a

00:00:50.180 --> 00:00:50.190
little sister understand overall he's a
 

00:00:50.190 --> 00:00:51.500
little sister understand overall he's a
lovely fellow and I recommend getting to

00:00:51.500 --> 00:00:51.510
lovely fellow and I recommend getting to
 

00:00:51.510 --> 00:00:55.220
lovely fellow and I recommend getting to
know him alright thank you Jason so let

00:00:55.220 --> 00:00:55.230
know him alright thank you Jason so let
 

00:00:55.230 --> 00:00:57.979
know him alright thank you Jason so let
me introduce Jason to you so Jason also

00:00:57.979 --> 00:00:57.989
me introduce Jason to you so Jason also
 

00:00:57.989 --> 00:00:59.330
me introduce Jason to you so Jason also
has a game development background

00:00:59.330 --> 00:00:59.340
has a game development background
 

00:00:59.340 --> 00:01:02.450
has a game development background
particularly in animation before he

00:01:02.450 --> 00:01:02.460
particularly in animation before he
 

00:01:02.460 --> 00:01:03.889
particularly in animation before he
joined Google he was working at

00:01:03.889 --> 00:01:03.899
joined Google he was working at
 

00:01:03.899 --> 00:01:06.320
joined Google he was working at
Electronic Arts where his locomotion

00:01:06.320 --> 00:01:06.330
Electronic Arts where his locomotion
 

00:01:06.330 --> 00:01:09.350
Electronic Arts where his locomotion
system was powering the Madden and FIFA

00:01:09.350 --> 00:01:09.360
system was powering the Madden and FIFA
 

00:01:09.360 --> 00:01:13.609
system was powering the Madden and FIFA
franchises so recently Jason led the our

00:01:13.609 --> 00:01:13.619
franchises so recently Jason led the our
 

00:01:13.619 --> 00:01:16.490
franchises so recently Jason led the our
team to create our most recent sample

00:01:16.490 --> 00:01:16.500
team to create our most recent sample
 

00:01:16.500 --> 00:01:19.190
team to create our most recent sample
games Uschi that's available on the Play

00:01:19.190 --> 00:01:19.200
games Uschi that's available on the Play
 

00:01:19.200 --> 00:01:22.340
games Uschi that's available on the Play
Store we'll see it later and most

00:01:22.340 --> 00:01:22.350
Store we'll see it later and most
 

00:01:22.350 --> 00:01:25.340
Store we'll see it later and most
importantly I think that Jason stated

00:01:25.340 --> 00:01:25.350
importantly I think that Jason stated
 

00:01:25.350 --> 00:01:27.859
importantly I think that Jason stated
life goal is that he is wants to acquire

00:01:27.859 --> 00:01:27.869
life goal is that he is wants to acquire
 

00:01:27.869 --> 00:01:31.880
life goal is that he is wants to acquire
all life's acquired tastes so I think

00:01:31.880 --> 00:01:31.890
all life's acquired tastes so I think
 

00:01:31.890 --> 00:01:36.670
all life's acquired tastes so I think
you should join him in that thanks water

00:01:36.670 --> 00:01:36.680
you should join him in that thanks water
 

00:01:36.680 --> 00:01:38.990
you should join him in that thanks water
Walter and I work on a team called fun

00:01:38.990 --> 00:01:39.000
Walter and I work on a team called fun
 

00:01:39.000 --> 00:01:42.080
Walter and I work on a team called fun
propulsion labs at Google our mission is

00:01:42.080 --> 00:01:42.090
propulsion labs at Google our mission is
 

00:01:42.090 --> 00:01:44.330
propulsion labs at Google our mission is
to support game developers just like you

00:01:44.330 --> 00:01:44.340
to support game developers just like you
 

00:01:44.340 --> 00:01:46.899
to support game developers just like you
by creating cross-platform open-source

00:01:46.899 --> 00:01:46.909
by creating cross-platform open-source
 

00:01:46.909 --> 00:01:49.130
by creating cross-platform open-source
technology that you can use in your

00:01:49.130 --> 00:01:49.140
technology that you can use in your
 

00:01:49.140 --> 00:01:52.460
technology that you can use in your
games and not just games that you're

00:01:52.460 --> 00:01:52.470
games and not just games that you're
 

00:01:52.470 --> 00:01:55.069
games and not just games that you're
making now we also want to ensure that

00:01:55.069 --> 00:01:55.079
making now we also want to ensure that
 

00:01:55.079 --> 00:01:56.530
making now we also want to ensure that
you're set up with the right technology

00:01:56.530 --> 00:01:56.540
you're set up with the right technology
 

00:01:56.540 --> 00:01:58.850
you're set up with the right technology
to help you make great games in the near

00:01:58.850 --> 00:01:58.860
to help you make great games in the near
 

00:01:58.860 --> 00:02:01.910
to help you make great games in the near
future too so today we're going to talk

00:02:01.910 --> 00:02:01.920
future too so today we're going to talk
 

00:02:01.920 --> 00:02:04.609
future too so today we're going to talk
about 3d games in virtual reality and

00:02:04.609 --> 00:02:04.619
about 3d games in virtual reality and
 

00:02:04.619 --> 00:02:06.109
about 3d games in virtual reality and
why we think they're going to be

00:02:06.109 --> 00:02:06.119
why we think they're going to be
 

00:02:06.119 --> 00:02:08.059
why we think they're going to be
increasingly large blips on your radar

00:02:08.059 --> 00:02:08.069
increasingly large blips on your radar
 

00:02:08.069 --> 00:02:10.100
increasingly large blips on your radar
why they're difficult

00:02:10.100 --> 00:02:10.110
why they're difficult
 

00:02:10.110 --> 00:02:11.780
why they're difficult
and finally we're going to present some

00:02:11.780 --> 00:02:11.790
and finally we're going to present some
 

00:02:11.790 --> 00:02:13.490
and finally we're going to present some
technology that we've created in our

00:02:13.490 --> 00:02:13.500
technology that we've created in our
 

00:02:13.500 --> 00:02:15.590
technology that we've created in our
team that we think will help you succeed

00:02:15.590 --> 00:02:15.600
team that we think will help you succeed
 

00:02:15.600 --> 00:02:19.760
team that we think will help you succeed
in 3d and VR along the way we'll show

00:02:19.760 --> 00:02:19.770
in 3d and VR along the way we'll show
 

00:02:19.770 --> 00:02:21.470
in 3d and VR along the way we'll show
you some of the small sample games that

00:02:21.470 --> 00:02:21.480
you some of the small sample games that
 

00:02:21.480 --> 00:02:23.750
you some of the small sample games that
our team has developed to demonstrate

00:02:23.750 --> 00:02:23.760
our team has developed to demonstrate
 

00:02:23.760 --> 00:02:27.230
our team has developed to demonstrate
our tech for example this year this is

00:02:27.230 --> 00:02:27.240
our tech for example this year this is
 

00:02:27.240 --> 00:02:29.810
our tech for example this year this is
pie noon it's a multiplayer standoff

00:02:29.810 --> 00:02:29.820
pie noon it's a multiplayer standoff
 

00:02:29.820 --> 00:02:33.200
pie noon it's a multiplayer standoff
game but with cherry pies it's pretty

00:02:33.200 --> 00:02:33.210
game but with cherry pies it's pretty
 

00:02:33.210 --> 00:02:36.380
game but with cherry pies it's pretty
serious stuff that we do but first thing

00:02:36.380 --> 00:02:36.390
serious stuff that we do but first thing
 

00:02:36.390 --> 00:02:39.530
serious stuff that we do but first thing
quickly why games serious developers

00:02:39.530 --> 00:02:39.540
quickly why games serious developers
 

00:02:39.540 --> 00:02:42.380
quickly why games serious developers
make serious apps don't they well games

00:02:42.380 --> 00:02:42.390
make serious apps don't they well games
 

00:02:42.390 --> 00:02:44.870
make serious apps don't they well games
are big business I mean look at the Play

00:02:44.870 --> 00:02:44.880
are big business I mean look at the Play
 

00:02:44.880 --> 00:02:46.670
are big business I mean look at the Play
Store the majority of revenue from the

00:02:46.670 --> 00:02:46.680
Store the majority of revenue from the
 

00:02:46.680 --> 00:02:49.490
Store the majority of revenue from the
Play Store comes from games yes and the

00:02:49.490 --> 00:02:49.500
Play Store comes from games yes and the
 

00:02:49.500 --> 00:02:51.830
Play Store comes from games yes and the
game market is expanding to new

00:02:51.830 --> 00:02:51.840
game market is expanding to new
 

00:02:51.840 --> 00:02:54.890
game market is expanding to new
demographics too as you can see here the

00:02:54.890 --> 00:02:54.900
demographics too as you can see here the
 

00:02:54.900 --> 00:02:58.550
demographics too as you can see here the
demographic that likes say men screaming

00:02:58.550 --> 00:02:58.560
demographic that likes say men screaming
 

00:02:58.560 --> 00:03:00.560
demographic that likes say men screaming
with their mouths open that's pretty

00:03:00.560 --> 00:03:00.570
with their mouths open that's pretty
 

00:03:00.570 --> 00:03:02.990
with their mouths open that's pretty
well served today but going forward new

00:03:02.990 --> 00:03:03.000
well served today but going forward new
 

00:03:03.000 --> 00:03:05.510
well served today but going forward new
game genres are becoming more and more

00:03:05.510 --> 00:03:05.520
game genres are becoming more and more
 

00:03:05.520 --> 00:03:07.670
game genres are becoming more and more
popular as well so entire new

00:03:07.670 --> 00:03:07.680
popular as well so entire new
 

00:03:07.680 --> 00:03:09.110
popular as well so entire new
demographics are going to come online

00:03:09.110 --> 00:03:09.120
demographics are going to come online
 

00:03:09.120 --> 00:03:12.199
demographics are going to come online
and become game consumers too but maybe

00:03:12.199 --> 00:03:12.209
and become game consumers too but maybe
 

00:03:12.209 --> 00:03:14.000
and become game consumers too but maybe
they just have their mouths open because

00:03:14.000 --> 00:03:14.010
they just have their mouths open because
 

00:03:14.010 --> 00:03:16.009
they just have their mouths open because
they like the candy in the adjacent

00:03:16.009 --> 00:03:16.019
they like the candy in the adjacent
 

00:03:16.019 --> 00:03:19.550
they like the candy in the adjacent
games that it is exactly the same face I

00:03:19.550 --> 00:03:19.560
games that it is exactly the same face I
 

00:03:19.560 --> 00:03:21.550
games that it is exactly the same face I
made this morning when I saw the donuts

00:03:21.550 --> 00:03:21.560
made this morning when I saw the donuts
 

00:03:21.560 --> 00:03:24.680
made this morning when I saw the donuts
alright so games make money today and

00:03:24.680 --> 00:03:24.690
alright so games make money today and
 

00:03:24.690 --> 00:03:26.030
alright so games make money today and
they're going to make even make even

00:03:26.030 --> 00:03:26.040
they're going to make even make even
 

00:03:26.040 --> 00:03:30.530
they're going to make even make even
more money tomorrow but why do we care

00:03:30.530 --> 00:03:30.540
more money tomorrow but why do we care
 

00:03:30.540 --> 00:03:32.150
more money tomorrow but why do we care
about performance games are pretty

00:03:32.150 --> 00:03:32.160
about performance games are pretty
 

00:03:32.160 --> 00:03:34.850
about performance games are pretty
simple no it's true that many of today's

00:03:34.850 --> 00:03:34.860
simple no it's true that many of today's
 

00:03:34.860 --> 00:03:37.790
simple no it's true that many of today's
games are technically simple here's some

00:03:37.790 --> 00:03:37.800
games are technically simple here's some
 

00:03:37.800 --> 00:03:39.979
games are technically simple here's some
of my recent favorite games does anybody

00:03:39.979 --> 00:03:39.989
of my recent favorite games does anybody
 

00:03:39.989 --> 00:03:42.650
of my recent favorite games does anybody
recognize these games just just call out

00:03:42.650 --> 00:03:42.660
recognize these games just just call out
 

00:03:42.660 --> 00:03:47.290
recognize these games just just call out
the names ridiculous fishing of course

00:03:47.290 --> 00:03:47.300
the names ridiculous fishing of course
 

00:03:47.300 --> 00:03:49.699
the names ridiculous fishing of course
anyone else how about the one in the

00:03:49.699 --> 00:03:49.709
anyone else how about the one in the
 

00:03:49.709 --> 00:03:51.680
anyone else how about the one in the
middle that's kind of obscure it's

00:03:51.680 --> 00:03:51.690
middle that's kind of obscure it's
 

00:03:51.690 --> 00:03:54.110
middle that's kind of obscure it's
called the guides very odd game worth

00:03:54.110 --> 00:03:54.120
called the guides very odd game worth
 

00:03:54.120 --> 00:03:55.910
called the guides very odd game worth
checking out and on the right is pop the

00:03:55.910 --> 00:03:55.920
checking out and on the right is pop the
 

00:03:55.920 --> 00:03:58.600
checking out and on the right is pop the
lock so all of these games have

00:03:58.600 --> 00:03:58.610
lock so all of these games have
 

00:03:58.610 --> 00:04:01.430
lock so all of these games have
wonderful visual aesthetics but

00:04:01.430 --> 00:04:01.440
wonderful visual aesthetics but
 

00:04:01.440 --> 00:04:03.530
wonderful visual aesthetics but
technically they don't really tax the

00:04:03.530 --> 00:04:03.540
technically they don't really tax the
 

00:04:03.540 --> 00:04:06.080
technically they don't really tax the
hardware so games like these should

00:04:06.080 --> 00:04:06.090
hardware so games like these should
 

00:04:06.090 --> 00:04:08.150
hardware so games like these should
probably still be optimized you know for

00:04:08.150 --> 00:04:08.160
probably still be optimized you know for
 

00:04:08.160 --> 00:04:11.570
probably still be optimized you know for
low-end devices or just to save battery

00:04:11.570 --> 00:04:11.580
low-end devices or just to save battery
 

00:04:11.580 --> 00:04:13.789
low-end devices or just to save battery
but for the most part you know

00:04:13.789 --> 00:04:13.799
but for the most part you know
 

00:04:13.799 --> 00:04:15.289
but for the most part you know
performance is not going to be on a

00:04:15.289 --> 00:04:15.299
performance is not going to be on a
 

00:04:15.299 --> 00:04:17.360
performance is not going to be on a
radar for these kind of games but there

00:04:17.360 --> 00:04:17.370
radar for these kind of games but there
 

00:04:17.370 --> 00:04:19.279
radar for these kind of games but there
are games that do text the hardware and

00:04:19.279 --> 00:04:19.289
are games that do text the hardware and
 

00:04:19.289 --> 00:04:22.010
are games that do text the hardware and
as game players get used to these kind

00:04:22.010 --> 00:04:22.020
as game players get used to these kind
 

00:04:22.020 --> 00:04:22.790
as game players get used to these kind
of visuals

00:04:22.790 --> 00:04:22.800
of visuals
 

00:04:22.800 --> 00:04:24.760
of visuals
you know they're gonna be expecting them

00:04:24.760 --> 00:04:24.770
you know they're gonna be expecting them
 

00:04:24.770 --> 00:04:29.330
you know they're gonna be expecting them
anyone know this game that's right the

00:04:29.330 --> 00:04:29.340
anyone know this game that's right the
 

00:04:29.340 --> 00:04:31.939
anyone know this game that's right the
wolf among us by Telltale Games so this

00:04:31.939 --> 00:04:31.949
wolf among us by Telltale Games so this
 

00:04:31.949 --> 00:04:35.869
wolf among us by Telltale Games so this
game was released in 2013 on the Xbox

00:04:35.869 --> 00:04:35.879
game was released in 2013 on the Xbox
 

00:04:35.879 --> 00:04:40.040
game was released in 2013 on the Xbox
the PlayStation Windows and Mac and then

00:04:40.040 --> 00:04:40.050
the PlayStation Windows and Mac and then
 

00:04:40.050 --> 00:04:41.930
the PlayStation Windows and Mac and then
soon after it was also released on

00:04:41.930 --> 00:04:41.940
soon after it was also released on
 

00:04:41.940 --> 00:04:43.879
soon after it was also released on
mobile so these screenshots are actually

00:04:43.879 --> 00:04:43.889
mobile so these screenshots are actually
 

00:04:43.889 --> 00:04:45.830
mobile so these screenshots are actually
from the Android version and I think

00:04:45.830 --> 00:04:45.840
from the Android version and I think
 

00:04:45.840 --> 00:04:48.619
from the Android version and I think
they look amazing so mobile hardware is

00:04:48.619 --> 00:04:48.629
they look amazing so mobile hardware is
 

00:04:48.629 --> 00:04:53.469
they look amazing so mobile hardware is
getting increasingly powerful but so

00:04:53.469 --> 00:04:53.479
getting increasingly powerful but so
 

00:04:53.479 --> 00:04:56.029
getting increasingly powerful but so
console game developers are increasingly

00:04:56.029 --> 00:04:56.039
console game developers are increasingly
 

00:04:56.039 --> 00:05:00.110
console game developers are increasingly
going to bring these kind of games to

00:05:00.110 --> 00:05:00.120
going to bring these kind of games to
 

00:05:00.120 --> 00:05:02.300
going to bring these kind of games to
mobile and that's exactly what they're

00:05:02.300 --> 00:05:02.310
mobile and that's exactly what they're
 

00:05:02.310 --> 00:05:03.230
mobile and that's exactly what they're
doing yeah

00:05:03.230 --> 00:05:03.240
doing yeah
 

00:05:03.240 --> 00:05:06.080
doing yeah
for example some of my friends that are

00:05:06.080 --> 00:05:06.090
for example some of my friends that are
 

00:05:06.090 --> 00:05:08.300
for example some of my friends that are
still have people soccer when they

00:05:08.300 --> 00:05:08.310
still have people soccer when they
 

00:05:08.310 --> 00:05:12.010
still have people soccer when they
released it steepest 16 this year they

00:05:12.010 --> 00:05:12.020
released it steepest 16 this year they
 

00:05:12.020 --> 00:05:14.270
released it steepest 16 this year they
they're using a lot of the code that I

00:05:14.270 --> 00:05:14.280
they're using a lot of the code that I
 

00:05:14.280 --> 00:05:16.249
they're using a lot of the code that I
wrote three years ago before I joined

00:05:16.249 --> 00:05:16.259
wrote three years ago before I joined
 

00:05:16.259 --> 00:05:18.320
wrote three years ago before I joined
Google and this is code that we really

00:05:18.320 --> 00:05:18.330
Google and this is code that we really
 

00:05:18.330 --> 00:05:20.450
Google and this is code that we really
struggled to make run on the consoles at

00:05:20.450 --> 00:05:20.460
struggled to make run on the consoles at
 

00:05:20.460 --> 00:05:22.309
struggled to make run on the consoles at
the time but they just poured it over to

00:05:22.309 --> 00:05:22.319
the time but they just poured it over to
 

00:05:22.319 --> 00:05:25.640
the time but they just poured it over to
mobile devices and it runs fine and in

00:05:25.640 --> 00:05:25.650
mobile devices and it runs fine and in
 

00:05:25.650 --> 00:05:26.779
mobile devices and it runs fine and in
fact this is something that a lot of

00:05:26.779 --> 00:05:26.789
fact this is something that a lot of
 

00:05:26.789 --> 00:05:28.939
fact this is something that a lot of
console developers really have to do

00:05:28.939 --> 00:05:28.949
console developers really have to do
 

00:05:28.949 --> 00:05:31.010
console developers really have to do
because the mobile game market is

00:05:31.010 --> 00:05:31.020
because the mobile game market is
 

00:05:31.020 --> 00:05:33.409
because the mobile game market is
growing much faster than the console on

00:05:33.409 --> 00:05:33.419
growing much faster than the console on
 

00:05:33.419 --> 00:05:35.629
growing much faster than the console on
the PC game market so they need to start

00:05:35.629 --> 00:05:35.639
the PC game market so they need to start
 

00:05:35.639 --> 00:05:37.399
the PC game market so they need to start
bringing over these console games to

00:05:37.399 --> 00:05:37.409
bringing over these console games to
 

00:05:37.409 --> 00:05:39.350
bringing over these console games to
mobile and then there's virtual reality

00:05:39.350 --> 00:05:39.360
mobile and then there's virtual reality
 

00:05:39.360 --> 00:05:41.659
mobile and then there's virtual reality
which is intrinsically a 3d experience

00:05:41.659 --> 00:05:41.669
which is intrinsically a 3d experience
 

00:05:41.669 --> 00:05:45.290
which is intrinsically a 3d experience
so we think that you're gonna see more

00:05:45.290 --> 00:05:45.300
so we think that you're gonna see more
 

00:05:45.300 --> 00:05:46.909
so we think that you're gonna see more
and more of these kind of experiences on

00:05:46.909 --> 00:05:46.919
and more of these kind of experiences on
 

00:05:46.919 --> 00:05:49.070
and more of these kind of experiences on
mobile pretty soon and less of the

00:05:49.070 --> 00:05:49.080
mobile pretty soon and less of the
 

00:05:49.080 --> 00:05:51.019
mobile pretty soon and less of the
examples that we gave previously of

00:05:51.019 --> 00:05:51.029
examples that we gave previously of
 

00:05:51.029 --> 00:05:52.309
examples that we gave previously of
course there's gonna be plenty of both

00:05:52.309 --> 00:05:52.319
course there's gonna be plenty of both
 

00:05:52.319 --> 00:05:56.360
course there's gonna be plenty of both
styles of games 2d 3d simple complex but

00:05:56.360 --> 00:05:56.370
styles of games 2d 3d simple complex but
 

00:05:56.370 --> 00:05:58.700
styles of games 2d 3d simple complex but
still cloud slow games on mobile it's

00:05:58.700 --> 00:05:58.710
still cloud slow games on mobile it's
 

00:05:58.710 --> 00:06:00.619
still cloud slow games on mobile it's
gonna raise consumer expectations just

00:06:00.619 --> 00:06:00.629
gonna raise consumer expectations just
 

00:06:00.629 --> 00:06:03.110
gonna raise consumer expectations just
like water says and this means if

00:06:03.110 --> 00:06:03.120
like water says and this means if
 

00:06:03.120 --> 00:06:06.260
like water says and this means if
performance is an on your radar today it

00:06:06.260 --> 00:06:06.270
performance is an on your radar today it
 

00:06:06.270 --> 00:06:08.529
performance is an on your radar today it
probably will be in the near future so

00:06:08.529 --> 00:06:08.539
probably will be in the near future so
 

00:06:08.539 --> 00:06:10.550
probably will be in the near future so
we're gonna have to start thinking about

00:06:10.550 --> 00:06:10.560
we're gonna have to start thinking about
 

00:06:10.560 --> 00:06:13.100
we're gonna have to start thinking about
performance but how much do we have to

00:06:13.100 --> 00:06:13.110
performance but how much do we have to
 

00:06:13.110 --> 00:06:14.719
performance but how much do we have to
start thinking about performance what

00:06:14.719 --> 00:06:14.729
start thinking about performance what
 

00:06:14.729 --> 00:06:15.830
start thinking about performance what
happens we get it wrong

00:06:15.830 --> 00:06:15.840
happens we get it wrong
 

00:06:15.840 --> 00:06:19.240
happens we get it wrong
good question so this game is ten gummy

00:06:19.240 --> 00:06:19.250
good question so this game is ten gummy
 

00:06:19.250 --> 00:06:22.670
good question so this game is ten gummy
it's it's a really beautiful smoothly

00:06:22.670 --> 00:06:22.680
it's it's a really beautiful smoothly
 

00:06:22.680 --> 00:06:25.850
it's it's a really beautiful smoothly
animated game the paper craft world and

00:06:25.850 --> 00:06:25.860
animated game the paper craft world and
 

00:06:25.860 --> 00:06:28.459
animated game the paper craft world and
it's kind of folds and unfolds like

00:06:28.459 --> 00:06:28.469
it's kind of folds and unfolds like
 

00:06:28.469 --> 00:06:31.430
it's kind of folds and unfolds like
origami as you go through the world it's

00:06:31.430 --> 00:06:31.440
origami as you go through the world it's
 

00:06:31.440 --> 00:06:33.879
origami as you go through the world it's
it's strangely calming and kind of Zen

00:06:33.879 --> 00:06:33.889
it's strangely calming and kind of Zen
 

00:06:33.889 --> 00:06:37.480
it's strangely calming and kind of Zen
like so for 3d games like tengami you

00:06:37.480 --> 00:06:37.490
like so for 3d games like tengami you
 

00:06:37.490 --> 00:06:39.640
like so for 3d games like tengami you
want to ideally hit a fixed frame rate

00:06:39.640 --> 00:06:39.650
want to ideally hit a fixed frame rate
 

00:06:39.650 --> 00:06:43.450
want to ideally hit a fixed frame rate
of 30 to 60 frames per second when you

00:06:43.450 --> 00:06:43.460
of 30 to 60 frames per second when you
 

00:06:43.460 --> 00:06:45.219
of 30 to 60 frames per second when you
get performance problems then you're

00:06:45.219 --> 00:06:45.229
get performance problems then you're
 

00:06:45.229 --> 00:06:47.050
get performance problems then you're
gonna drop frames and that's gonna

00:06:47.050 --> 00:06:47.060
gonna drop frames and that's gonna
 

00:06:47.060 --> 00:06:50.050
gonna drop frames and that's gonna
create stuttering now if your game is

00:06:50.050 --> 00:06:50.060
create stuttering now if your game is
 

00:06:50.060 --> 00:06:52.089
create stuttering now if your game is
mostly static without too much motion

00:06:52.089 --> 00:06:52.099
mostly static without too much motion
 

00:06:52.099 --> 00:06:53.860
mostly static without too much motion
you may be able to get away with like a

00:06:53.860 --> 00:06:53.870
you may be able to get away with like a
 

00:06:53.870 --> 00:06:55.899
you may be able to get away with like a
little bit of stuttering but if you have

00:06:55.899 --> 00:06:55.909
little bit of stuttering but if you have
 

00:06:55.909 --> 00:06:57.700
little bit of stuttering but if you have
smooth scrolling like you know tengami

00:06:57.700 --> 00:06:57.710
smooth scrolling like you know tengami
 

00:06:57.710 --> 00:07:00.129
smooth scrolling like you know tengami
has here or a lot of camera motion then

00:07:00.129 --> 00:07:00.139
has here or a lot of camera motion then
 

00:07:00.139 --> 00:07:01.510
has here or a lot of camera motion then
that's stunning is going to end up being

00:07:01.510 --> 00:07:01.520
that's stunning is going to end up being
 

00:07:01.520 --> 00:07:04.029
that's stunning is going to end up being
pretty jarring and drop frames are even

00:07:04.029 --> 00:07:04.039
pretty jarring and drop frames are even
 

00:07:04.039 --> 00:07:06.670
pretty jarring and drop frames are even
more of a problem in VR so for cardboard

00:07:06.670 --> 00:07:06.680
more of a problem in VR so for cardboard
 

00:07:06.680 --> 00:07:08.860
more of a problem in VR so for cardboard
you want to hit at least 60 frames per

00:07:08.860 --> 00:07:08.870
you want to hit at least 60 frames per
 

00:07:08.870 --> 00:07:12.550
you want to hit at least 60 frames per
second you might think well if I had 59

00:07:12.550 --> 00:07:12.560
second you might think well if I had 59
 

00:07:12.560 --> 00:07:14.559
second you might think well if I had 59
frames per second that's good enough

00:07:14.559 --> 00:07:14.569
frames per second that's good enough
 

00:07:14.569 --> 00:07:17.920
frames per second that's good enough
but in VR every drop frame is like

00:07:17.920 --> 00:07:17.930
but in VR every drop frame is like
 

00:07:17.930 --> 00:07:21.010
but in VR every drop frame is like
snagging your eyeball on a rusty nail so

00:07:21.010 --> 00:07:21.020
snagging your eyeball on a rusty nail so
 

00:07:21.020 --> 00:07:23.860
snagging your eyeball on a rusty nail so
you're saying that if I had 59 frames

00:07:23.860 --> 00:07:23.870
you're saying that if I had 59 frames
 

00:07:23.870 --> 00:07:26.800
you're saying that if I had 59 frames
per second that is like hitting my

00:07:26.800 --> 00:07:26.810
per second that is like hitting my
 

00:07:26.810 --> 00:07:28.959
per second that is like hitting my
eyeball on a rusty nail like once per

00:07:28.959 --> 00:07:28.969
eyeball on a rusty nail like once per
 

00:07:28.969 --> 00:07:31.089
eyeball on a rusty nail like once per
second effectively exactly how the math

00:07:31.089 --> 00:07:31.099
second effectively exactly how the math
 

00:07:31.099 --> 00:07:34.649
second effectively exactly how the math
works out so in less dramatic terms

00:07:34.649 --> 00:07:34.659
works out so in less dramatic terms
 

00:07:34.659 --> 00:07:37.420
works out so in less dramatic terms
dropping frames means user fatigue and

00:07:37.420 --> 00:07:37.430
dropping frames means user fatigue and
 

00:07:37.430 --> 00:07:40.320
dropping frames means user fatigue and
discomfort and potentially even nausea

00:07:40.320 --> 00:07:40.330
discomfort and potentially even nausea
 

00:07:40.330 --> 00:07:43.390
discomfort and potentially even nausea
so and let's not forget about the next

00:07:43.390 --> 00:07:43.400
so and let's not forget about the next
 

00:07:43.400 --> 00:07:45.999
so and let's not forget about the next
billion users there's like a billion of

00:07:45.999 --> 00:07:46.009
billion users there's like a billion of
 

00:07:46.009 --> 00:07:48.339
billion users there's like a billion of
them after all and they're gonna have

00:07:48.339 --> 00:07:48.349
them after all and they're gonna have
 

00:07:48.349 --> 00:07:50.709
them after all and they're gonna have
modern phones but they may not be the

00:07:50.709 --> 00:07:50.719
modern phones but they may not be the
 

00:07:50.719 --> 00:07:54.279
modern phones but they may not be the
fastest phones for example the Nexus 6p

00:07:54.279 --> 00:07:54.289
fastest phones for example the Nexus 6p
 

00:07:54.289 --> 00:07:56.320
fastest phones for example the Nexus 6p
and the Android one are both great

00:07:56.320 --> 00:07:56.330
and the Android one are both great
 

00:07:56.330 --> 00:07:58.540
and the Android one are both great
phones but just because your game runs

00:07:58.540 --> 00:07:58.550
phones but just because your game runs
 

00:07:58.550 --> 00:08:00.610
phones but just because your game runs
great on Nexus 6p is not gonna mean it's

00:08:00.610 --> 00:08:00.620
great on Nexus 6p is not gonna mean it's
 

00:08:00.620 --> 00:08:02.290
great on Nexus 6p is not gonna mean it's
gonna run great on the next billion

00:08:02.290 --> 00:08:02.300
gonna run great on the next billion
 

00:08:02.300 --> 00:08:05.019
gonna run great on the next billion
Android ones even if you hit 60 frames

00:08:05.019 --> 00:08:05.029
Android ones even if you hit 60 frames
 

00:08:05.029 --> 00:08:06.550
Android ones even if you hit 60 frames
per second it's still worthwhile

00:08:06.550 --> 00:08:06.560
per second it's still worthwhile
 

00:08:06.560 --> 00:08:09.100
per second it's still worthwhile
considering performance because wasted

00:08:09.100 --> 00:08:09.110
considering performance because wasted
 

00:08:09.110 --> 00:08:11.860
considering performance because wasted
CPU cycles mean wasted battery and

00:08:11.860 --> 00:08:11.870
CPU cycles mean wasted battery and
 

00:08:11.870 --> 00:08:14.290
CPU cycles mean wasted battery and
battery is pretty important to mobile

00:08:14.290 --> 00:08:14.300
battery is pretty important to mobile
 

00:08:14.300 --> 00:08:16.510
battery is pretty important to mobile
game players so when you're playing like

00:08:16.510 --> 00:08:16.520
game players so when you're playing like
 

00:08:16.520 --> 00:08:18.879
game players so when you're playing like
a simple 2d game and your phone heats up

00:08:18.879 --> 00:08:18.889
a simple 2d game and your phone heats up
 

00:08:18.889 --> 00:08:20.769
a simple 2d game and your phone heats up
like it's a pocket warmer that's a good

00:08:20.769 --> 00:08:20.779
like it's a pocket warmer that's a good
 

00:08:20.779 --> 00:08:22.749
like it's a pocket warmer that's a good
sign that the developer wasn't

00:08:22.749 --> 00:08:22.759
sign that the developer wasn't
 

00:08:22.759 --> 00:08:25.089
sign that the developer wasn't
prioritizing performance so you said

00:08:25.089 --> 00:08:25.099
prioritizing performance so you said
 

00:08:25.099 --> 00:08:27.459
prioritizing performance so you said
that mobile is going to become more like

00:08:27.459 --> 00:08:27.469
that mobile is going to become more like
 

00:08:27.469 --> 00:08:29.200
that mobile is going to become more like
a console experience what does that

00:08:29.200 --> 00:08:29.210
a console experience what does that
 

00:08:29.210 --> 00:08:31.689
a console experience what does that
imply well let's take a look at how

00:08:31.689 --> 00:08:31.699
imply well let's take a look at how
 

00:08:31.699 --> 00:08:34.509
imply well let's take a look at how
current mobile game development differs

00:08:34.509 --> 00:08:34.519
current mobile game development differs
 

00:08:34.519 --> 00:08:36.130
current mobile game development differs
from current console game development

00:08:36.130 --> 00:08:36.140
from current console game development
 

00:08:36.140 --> 00:08:38.319
from current console game development
and that might give us a sense for where

00:08:38.319 --> 00:08:38.329
and that might give us a sense for where
 

00:08:38.329 --> 00:08:41.529
and that might give us a sense for where
mobile development might go so first off

00:08:41.529 --> 00:08:41.539
mobile development might go so first off
 

00:08:41.539 --> 00:08:43.410
mobile development might go so first off
mobile development teams are quite small

00:08:43.410 --> 00:08:43.420
mobile development teams are quite small
 

00:08:43.420 --> 00:08:45.639
mobile development teams are quite small
console development teams on the other

00:08:45.639 --> 00:08:45.649
console development teams on the other
 

00:08:45.649 --> 00:08:45.970
console development teams on the other
hand

00:08:45.970 --> 00:08:45.980
hand
 

00:08:45.980 --> 00:08:47.530
hand
come in all sizes some of them quite

00:08:47.530 --> 00:08:47.540
come in all sizes some of them quite
 

00:08:47.540 --> 00:08:50.710
come in all sizes some of them quite
large with a small team you have to

00:08:50.710 --> 00:08:50.720
large with a small team you have to
 

00:08:50.720 --> 00:08:53.019
large with a small team you have to
limit your technology but with a big

00:08:53.019 --> 00:08:53.029
limit your technology but with a big
 

00:08:53.029 --> 00:08:55.689
limit your technology but with a big
team your technology stack is going to

00:08:55.689 --> 00:08:55.699
team your technology stack is going to
 

00:08:55.699 --> 00:08:58.509
team your technology stack is going to
be correspondingly large so to put in a

00:08:58.509 --> 00:08:58.519
be correspondingly large so to put in a
 

00:08:58.519 --> 00:09:00.490
be correspondingly large so to put in a
different way many of you may be

00:09:00.490 --> 00:09:00.500
different way many of you may be
 

00:09:00.500 --> 00:09:02.170
different way many of you may be
familiar with the idea of like a thin

00:09:02.170 --> 00:09:02.180
familiar with the idea of like a thin
 

00:09:02.180 --> 00:09:04.240
familiar with the idea of like a thin
client thick server model that's very

00:09:04.240 --> 00:09:04.250
client thick server model that's very
 

00:09:04.250 --> 00:09:06.720
client thick server model that's very
common in web apps and mobile apps so

00:09:06.720 --> 00:09:06.730
common in web apps and mobile apps so
 

00:09:06.730 --> 00:09:09.430
common in web apps and mobile apps so
what you get if you take mobile gaming

00:09:09.430 --> 00:09:09.440
what you get if you take mobile gaming
 

00:09:09.440 --> 00:09:13.150
what you get if you take mobile gaming
and you add console style technology if

00:09:13.150 --> 00:09:13.160
and you add console style technology if
 

00:09:13.160 --> 00:09:15.460
and you add console style technology if
you get more of a thick client thick

00:09:15.460 --> 00:09:15.470
you get more of a thick client thick
 

00:09:15.470 --> 00:09:17.889
you get more of a thick client thick
server model where you're doing you know

00:09:17.889 --> 00:09:17.899
server model where you're doing you know
 

00:09:17.899 --> 00:09:20.079
server model where you're doing you know
intensive rendering physics animation

00:09:20.079 --> 00:09:20.089
intensive rendering physics animation
 

00:09:20.089 --> 00:09:23.379
intensive rendering physics animation
all that on the client and you're still

00:09:23.379 --> 00:09:23.389
all that on the client and you're still
 

00:09:23.389 --> 00:09:25.840
all that on the client and you're still
going to have a rich server side

00:09:25.840 --> 00:09:25.850
going to have a rich server side
 

00:09:25.850 --> 00:09:27.910
going to have a rich server side
component so that gets pretty

00:09:27.910 --> 00:09:27.920
component so that gets pretty
 

00:09:27.920 --> 00:09:31.780
component so that gets pretty
complicated right ok then so when we're

00:09:31.780 --> 00:09:31.790
complicated right ok then so when we're
 

00:09:31.790 --> 00:09:33.040
complicated right ok then so when we're
working with these more technically

00:09:33.040 --> 00:09:33.050
working with these more technically
 

00:09:33.050 --> 00:09:35.350
working with these more technically
complicated clients what are some of the

00:09:35.350 --> 00:09:35.360
complicated clients what are some of the
 

00:09:35.360 --> 00:09:36.699
complicated clients what are some of the
performance problems that we're going to

00:09:36.699 --> 00:09:36.709
performance problems that we're going to
 

00:09:36.709 --> 00:09:38.889
performance problems that we're going to
run into so let's first talk about

00:09:38.889 --> 00:09:38.899
run into so let's first talk about
 

00:09:38.899 --> 00:09:40.600
run into so let's first talk about
memory

00:09:40.600 --> 00:09:40.610
memory
 

00:09:40.610 --> 00:09:43.180
memory
unlike consoles you don't really have

00:09:43.180 --> 00:09:43.190
unlike consoles you don't really have
 

00:09:43.190 --> 00:09:45.129
unlike consoles you don't really have
guaranteed amount of memory on a mobile

00:09:45.129 --> 00:09:45.139
guaranteed amount of memory on a mobile
 

00:09:45.139 --> 00:09:47.199
guaranteed amount of memory on a mobile
device and unlike pcs you don't really

00:09:47.199 --> 00:09:47.209
device and unlike pcs you don't really
 

00:09:47.209 --> 00:09:49.480
device and unlike pcs you don't really
have virtual memory either so what that

00:09:49.480 --> 00:09:49.490
have virtual memory either so what that
 

00:09:49.490 --> 00:09:53.740
have virtual memory either so what that
means is that it really depends in a

00:09:53.740 --> 00:09:53.750
means is that it really depends in a
 

00:09:53.750 --> 00:09:56.259
means is that it really depends in a
situation when Android is gonna tell you

00:09:56.259 --> 00:09:56.269
situation when Android is gonna tell you
 

00:09:56.269 --> 00:09:58.480
situation when Android is gonna tell you
that you've had too much memory so the

00:09:58.480 --> 00:09:58.490
that you've had too much memory so the
 

00:09:58.490 --> 00:10:00.400
that you've had too much memory so the
only way to make sure that your game

00:10:00.400 --> 00:10:00.410
only way to make sure that your game
 

00:10:00.410 --> 00:10:02.470
only way to make sure that your game
fits in memory and stays in memory is

00:10:02.470 --> 00:10:02.480
fits in memory and stays in memory is
 

00:10:02.480 --> 00:10:04.530
fits in memory and stays in memory is
used as little as possible of it and

00:10:04.530 --> 00:10:04.540
used as little as possible of it and
 

00:10:04.540 --> 00:10:08.019
used as little as possible of it and
there's not a good reason memory

00:10:08.019 --> 00:10:08.029
there's not a good reason memory
 

00:10:08.029 --> 00:10:10.389
there's not a good reason memory
bandwidth on mobile devices is very low

00:10:10.389 --> 00:10:10.399
bandwidth on mobile devices is very low
 

00:10:10.399 --> 00:10:13.900
bandwidth on mobile devices is very low
compared to equivalent PC or console

00:10:13.900 --> 00:10:13.910
compared to equivalent PC or console
 

00:10:13.910 --> 00:10:17.170
compared to equivalent PC or console
devices so you may see a mobile device

00:10:17.170 --> 00:10:17.180
devices so you may see a mobile device
 

00:10:17.180 --> 00:10:19.600
devices so you may see a mobile device
and you go like wow that thing has like

00:10:19.600 --> 00:10:19.610
and you go like wow that thing has like
 

00:10:19.610 --> 00:10:22.449
and you go like wow that thing has like
eight cores in it and stuff and until

00:10:22.449 --> 00:10:22.459
eight cores in it and stuff and until
 

00:10:22.459 --> 00:10:24.100
eight cores in it and stuff and until
you realize that if those eight cores

00:10:24.100 --> 00:10:24.110
you realize that if those eight cores
 

00:10:24.110 --> 00:10:26.680
you realize that if those eight cores
all start touching memory then things

00:10:26.680 --> 00:10:26.690
all start touching memory then things
 

00:10:26.690 --> 00:10:28.240
all start touching memory then things
grind to a halt pretty quickly

00:10:28.240 --> 00:10:28.250
grind to a halt pretty quickly
 

00:10:28.250 --> 00:10:30.730
grind to a halt pretty quickly
then there's the thermal consequences of

00:10:30.730 --> 00:10:30.740
then there's the thermal consequences of
 

00:10:30.740 --> 00:10:33.879
then there's the thermal consequences of
using a lot of resources your CPU is

00:10:33.879 --> 00:10:33.889
using a lot of resources your CPU is
 

00:10:33.889 --> 00:10:36.100
using a lot of resources your CPU is
going to get throttled so mobile

00:10:36.100 --> 00:10:36.110
going to get throttled so mobile
 

00:10:36.110 --> 00:10:38.379
going to get throttled so mobile
hardware was designed for apps which

00:10:38.379 --> 00:10:38.389
hardware was designed for apps which
 

00:10:38.389 --> 00:10:40.389
hardware was designed for apps which
means they're designed to wake up

00:10:40.389 --> 00:10:40.399
means they're designed to wake up
 

00:10:40.399 --> 00:10:42.939
means they're designed to wake up
serve the youever user and then idle for

00:10:42.939 --> 00:10:42.949
serve the youever user and then idle for
 

00:10:42.949 --> 00:10:46.059
serve the youever user and then idle for
a little bit and when it idling it gives

00:10:46.059 --> 00:10:46.069
a little bit and when it idling it gives
 

00:10:46.069 --> 00:10:49.120
a little bit and when it idling it gives
the CPU some time to dissipate heat but

00:10:49.120 --> 00:10:49.130
the CPU some time to dissipate heat but
 

00:10:49.130 --> 00:10:51.150
the CPU some time to dissipate heat but
games on the other hand are kind of

00:10:51.150 --> 00:10:51.160
games on the other hand are kind of
 

00:10:51.160 --> 00:10:54.639
games on the other hand are kind of
using the system evenly at all times so

00:10:54.639 --> 00:10:54.649
using the system evenly at all times so
 

00:10:54.649 --> 00:10:56.500
using the system evenly at all times so
this means that the heat can just kind

00:10:56.500 --> 00:10:56.510
this means that the heat can just kind
 

00:10:56.510 --> 00:10:58.750
this means that the heat can just kind
of build up and build up until the CPU

00:10:58.750 --> 00:10:58.760
of build up and build up until the CPU
 

00:10:58.760 --> 00:10:59.650
of build up and build up until the CPU
frequency

00:10:59.650 --> 00:10:59.660
frequency
 

00:10:59.660 --> 00:11:01.150
frequency
to be throttled back in order to

00:11:01.150 --> 00:11:01.160
to be throttled back in order to
 

00:11:01.160 --> 00:11:03.160
to be throttled back in order to
dissipate it and because you don't

00:11:03.160 --> 00:11:03.170
dissipate it and because you don't
 

00:11:03.170 --> 00:11:05.350
dissipate it and because you don't
control this throttling it kind of has

00:11:05.350 --> 00:11:05.360
control this throttling it kind of has
 

00:11:05.360 --> 00:11:06.700
control this throttling it kind of has
this ping-ponging effect on your

00:11:06.700 --> 00:11:06.710
this ping-ponging effect on your
 

00:11:06.710 --> 00:11:08.830
this ping-ponging effect on your
framerate which is exactly the kind of

00:11:08.830 --> 00:11:08.840
framerate which is exactly the kind of
 

00:11:08.840 --> 00:11:10.540
framerate which is exactly the kind of
thing that's gonna make your VR users

00:11:10.540 --> 00:11:10.550
thing that's gonna make your VR users
 

00:11:10.550 --> 00:11:13.360
thing that's gonna make your VR users
nauseous okay so we need to hit 60

00:11:13.360 --> 00:11:13.370
nauseous okay so we need to hit 60
 

00:11:13.370 --> 00:11:15.850
nauseous okay so we need to hit 60
frames per second with no drop frames

00:11:15.850 --> 00:11:15.860
frames per second with no drop frames
 

00:11:15.860 --> 00:11:20.890
frames per second with no drop frames
especially when targeting VR so that's

00:11:20.890 --> 00:11:20.900
especially when targeting VR so that's
 

00:11:20.900 --> 00:11:23.650
especially when targeting VR so that's
gonna be hard to do in C++ and frankly

00:11:23.650 --> 00:11:23.660
gonna be hard to do in C++ and frankly
 

00:11:23.660 --> 00:11:26.200
gonna be hard to do in C++ and frankly
it's almost impossible in Java now

00:11:26.200 --> 00:11:26.210
it's almost impossible in Java now
 

00:11:26.210 --> 00:11:28.720
it's almost impossible in Java now
there's probably some Java programmers

00:11:28.720 --> 00:11:28.730
there's probably some Java programmers
 

00:11:28.730 --> 00:11:31.480
there's probably some Java programmers
in here so it's probably worth diving

00:11:31.480 --> 00:11:31.490
in here so it's probably worth diving
 

00:11:31.490 --> 00:11:33.400
in here so it's probably worth diving
into this a little bit maybe you can

00:11:33.400 --> 00:11:33.410
into this a little bit maybe you can
 

00:11:33.410 --> 00:11:34.960
into this a little bit maybe you can
tell us a little bit what performance

00:11:34.960 --> 00:11:34.970
tell us a little bit what performance
 

00:11:34.970 --> 00:11:36.670
tell us a little bit what performance
challenges people see when they develop

00:11:36.670 --> 00:11:36.680
challenges people see when they develop
 

00:11:36.680 --> 00:11:38.980
challenges people see when they develop
games in Java well first of course Java

00:11:38.980 --> 00:11:38.990
games in Java well first of course Java
 

00:11:38.990 --> 00:11:40.660
games in Java well first of course Java
has garbage collection and garbage

00:11:40.660 --> 00:11:40.670
has garbage collection and garbage
 

00:11:40.670 --> 00:11:42.340
has garbage collection and garbage
collection does not help you keep a

00:11:42.340 --> 00:11:42.350
collection does not help you keep a
 

00:11:42.350 --> 00:11:44.200
collection does not help you keep a
stable framerate because the garbage

00:11:44.200 --> 00:11:44.210
stable framerate because the garbage
 

00:11:44.210 --> 00:11:45.490
stable framerate because the garbage
collector is going to hit at a

00:11:45.490 --> 00:11:45.500
collector is going to hit at a
 

00:11:45.500 --> 00:11:47.290
collector is going to hit at a
particular frame give you a very lengthy

00:11:47.290 --> 00:11:47.300
particular frame give you a very lengthy
 

00:11:47.300 --> 00:11:49.390
particular frame give you a very lengthy
frame and then another frame is going to

00:11:49.390 --> 00:11:49.400
frame and then another frame is going to
 

00:11:49.400 --> 00:11:50.980
frame and then another frame is going to
be shorter that's exactly what we don't

00:11:50.980 --> 00:11:50.990
be shorter that's exactly what we don't
 

00:11:50.990 --> 00:11:54.250
be shorter that's exactly what we don't
want but even besides that typically

00:11:54.250 --> 00:11:54.260
want but even besides that typically
 

00:11:54.260 --> 00:11:56.710
want but even besides that typically
Java code is going to be slightly slower

00:11:56.710 --> 00:11:56.720
Java code is going to be slightly slower
 

00:11:56.720 --> 00:11:59.710
Java code is going to be slightly slower
than equivalent C++ code for CPU tins

00:11:59.710 --> 00:11:59.720
than equivalent C++ code for CPU tins
 

00:11:59.720 --> 00:12:01.540
than equivalent C++ code for CPU tins
and stuff like you know physics

00:12:01.540 --> 00:12:01.550
and stuff like you know physics
 

00:12:01.550 --> 00:12:04.300
and stuff like you know physics
animation simulation that kind of thing

00:12:04.300 --> 00:12:04.310
animation simulation that kind of thing
 

00:12:04.310 --> 00:12:06.670
animation simulation that kind of thing
so even if you can make it work even you

00:12:06.670 --> 00:12:06.680
so even if you can make it work even you
 

00:12:06.680 --> 00:12:08.800
so even if you can make it work even you
can make it fit somehow then you're

00:12:08.800 --> 00:12:08.810
can make it fit somehow then you're
 

00:12:08.810 --> 00:12:10.570
can make it fit somehow then you're
gonna end up burning more battery and

00:12:10.570 --> 00:12:10.580
gonna end up burning more battery and
 

00:12:10.580 --> 00:12:12.520
gonna end up burning more battery and
generating more heat than equivalent C++

00:12:12.520 --> 00:12:12.530
generating more heat than equivalent C++
 

00:12:12.530 --> 00:12:15.040
generating more heat than equivalent C++
so it's a really tricky situation and

00:12:15.040 --> 00:12:15.050
so it's a really tricky situation and
 

00:12:15.050 --> 00:12:17.110
so it's a really tricky situation and
it's one that's worth considering very

00:12:17.110 --> 00:12:17.120
it's one that's worth considering very
 

00:12:17.120 --> 00:12:19.630
it's one that's worth considering very
carefully because choosing a language is

00:12:19.630 --> 00:12:19.640
carefully because choosing a language is
 

00:12:19.640 --> 00:12:22.470
carefully because choosing a language is
something you do at the beginning and

00:12:22.470 --> 00:12:22.480
something you do at the beginning and
 

00:12:22.480 --> 00:12:25.480
something you do at the beginning and
optimizing your program for performance

00:12:25.480 --> 00:12:25.490
optimizing your program for performance
 

00:12:25.490 --> 00:12:26.920
optimizing your program for performance
is unfortunately something you tend to

00:12:26.920 --> 00:12:26.930
is unfortunately something you tend to
 

00:12:26.930 --> 00:12:29.560
is unfortunately something you tend to
do at the end so if you get to the end

00:12:29.560 --> 00:12:29.570
do at the end so if you get to the end
 

00:12:29.570 --> 00:12:31.630
do at the end so if you get to the end
of your project and you have a lot of

00:12:31.630 --> 00:12:31.640
of your project and you have a lot of
 

00:12:31.640 --> 00:12:33.280
of your project and you have a lot of
trouble squeezing out performance

00:12:33.280 --> 00:12:33.290
trouble squeezing out performance
 

00:12:33.290 --> 00:12:35.500
trouble squeezing out performance
because of the intrinsic nature of your

00:12:35.500 --> 00:12:35.510
because of the intrinsic nature of your
 

00:12:35.510 --> 00:12:37.810
because of the intrinsic nature of your
language well that's a real sinking

00:12:37.810 --> 00:12:37.820
language well that's a real sinking
 

00:12:37.820 --> 00:12:40.450
language well that's a real sinking
feeling and of course with C++ you get

00:12:40.450 --> 00:12:40.460
feeling and of course with C++ you get
 

00:12:40.460 --> 00:12:43.720
feeling and of course with C++ you get
this cross-platform nature for free I

00:12:43.720 --> 00:12:43.730
this cross-platform nature for free I
 

00:12:43.730 --> 00:12:46.150
this cross-platform nature for free I
mean on mobile and desktop platforms and

00:12:46.150 --> 00:12:46.160
mean on mobile and desktop platforms and
 

00:12:46.160 --> 00:12:48.160
mean on mobile and desktop platforms and
cross-platform is increasingly important

00:12:48.160 --> 00:12:48.170
cross-platform is increasingly important
 

00:12:48.170 --> 00:12:51.070
cross-platform is increasingly important
as the games become more complicated so

00:12:51.070 --> 00:12:51.080
as the games become more complicated so
 

00:12:51.080 --> 00:12:53.170
as the games become more complicated so
writing your game twice for two

00:12:53.170 --> 00:12:53.180
writing your game twice for two
 

00:12:53.180 --> 00:12:54.640
writing your game twice for two
different platforms in two different

00:12:54.640 --> 00:12:54.650
different platforms in two different
 

00:12:54.650 --> 00:12:57.600
different platforms in two different
languages is a very high cost to that

00:12:57.600 --> 00:12:57.610
languages is a very high cost to that
 

00:12:57.610 --> 00:12:59.890
languages is a very high cost to that
okay we understand this is challenging

00:12:59.890 --> 00:12:59.900
okay we understand this is challenging
 

00:12:59.900 --> 00:13:02.440
okay we understand this is challenging
C++ is kind of like a double-barreled

00:13:02.440 --> 00:13:02.450
C++ is kind of like a double-barreled
 

00:13:02.450 --> 00:13:04.870
C++ is kind of like a double-barreled
shotgun but with a thousand barrels and

00:13:04.870 --> 00:13:04.880
shotgun but with a thousand barrels and
 

00:13:04.880 --> 00:13:07.330
shotgun but with a thousand barrels and
they're all pointed at your foot but

00:13:07.330 --> 00:13:07.340
they're all pointed at your foot but
 

00:13:07.340 --> 00:13:09.490
they're all pointed at your foot but
that's where our team comes in we're fun

00:13:09.490 --> 00:13:09.500
that's where our team comes in we're fun
 

00:13:09.500 --> 00:13:10.870
that's where our team comes in we're fun
propulsion labs and

00:13:10.870 --> 00:13:10.880
propulsion labs and
 

00:13:10.880 --> 00:13:13.120
propulsion labs and
here to help that's our logo by the way

00:13:13.120 --> 00:13:13.130
here to help that's our logo by the way
 

00:13:13.130 --> 00:13:18.400
here to help that's our logo by the way
so what do we do so we make C++ game

00:13:18.400 --> 00:13:18.410
so what do we do so we make C++ game
 

00:13:18.410 --> 00:13:20.800
so what do we do so we make C++ game
development libraries these libraries

00:13:20.800 --> 00:13:20.810
development libraries these libraries
 

00:13:20.810 --> 00:13:22.600
development libraries these libraries
are cross-platform so they work on

00:13:22.600 --> 00:13:22.610
are cross-platform so they work on
 

00:13:22.610 --> 00:13:28.060
are cross-platform so they work on
Android iOS Windows Mac Linux probably

00:13:28.060 --> 00:13:28.070
Android iOS Windows Mac Linux probably
 

00:13:28.070 --> 00:13:29.380
Android iOS Windows Mac Linux probably
on consoles but they're not part of our

00:13:29.380 --> 00:13:29.390
on consoles but they're not part of our
 

00:13:29.390 --> 00:13:31.330
on consoles but they're not part of our
test Suites in some cases they work on

00:13:31.330 --> 00:13:31.340
test Suites in some cases they work on
 

00:13:31.340 --> 00:13:34.090
test Suites in some cases they work on
the web - they're all open source

00:13:34.090 --> 00:13:34.100
the web - they're all open source
 

00:13:34.100 --> 00:13:35.830
the web - they're all open source
they're all on github right now you can

00:13:35.830 --> 00:13:35.840
they're all on github right now you can
 

00:13:35.840 --> 00:13:37.870
they're all on github right now you can
go download them if you like and we've

00:13:37.870 --> 00:13:37.880
go download them if you like and we've
 

00:13:37.880 --> 00:13:39.310
go download them if you like and we've
created them both for external

00:13:39.310 --> 00:13:39.320
created them both for external
 

00:13:39.320 --> 00:13:41.530
created them both for external
developers game developers and also for

00:13:41.530 --> 00:13:41.540
developers game developers and also for
 

00:13:41.540 --> 00:13:43.060
developers game developers and also for
its internal users at Google that's

00:13:43.060 --> 00:13:43.070
its internal users at Google that's
 

00:13:43.070 --> 00:13:44.590
its internal users at Google that's
right they're all independent libraries

00:13:44.590 --> 00:13:44.600
right they're all independent libraries
 

00:13:44.600 --> 00:13:48.700
right they're all independent libraries
as well so but let's stop for a second

00:13:48.700 --> 00:13:48.710
as well so but let's stop for a second
 

00:13:48.710 --> 00:13:50.320
as well so but let's stop for a second
here probably people have the question

00:13:50.320 --> 00:13:50.330
here probably people have the question
 

00:13:50.330 --> 00:13:52.930
here probably people have the question
is like why libraries most people will

00:13:52.930 --> 00:13:52.940
is like why libraries most people will
 

00:13:52.940 --> 00:13:55.750
is like why libraries most people will
have an existing engine right so from

00:13:55.750 --> 00:13:55.760
have an existing engine right so from
 

00:13:55.760 --> 00:13:58.810
have an existing engine right so from
what we've seen more than half of game

00:13:58.810 --> 00:13:58.820
what we've seen more than half of game
 

00:13:58.820 --> 00:14:00.850
what we've seen more than half of game
developers are actually using a custom

00:14:00.850 --> 00:14:00.860
developers are actually using a custom
 

00:14:00.860 --> 00:14:03.160
developers are actually using a custom
engine so there's a lot of game

00:14:03.160 --> 00:14:03.170
engine so there's a lot of game
 

00:14:03.170 --> 00:14:04.800
engine so there's a lot of game
developers that don't want to buy into

00:14:04.800 --> 00:14:04.810
developers that don't want to buy into
 

00:14:04.810 --> 00:14:08.260
developers that don't want to buy into
monolithic third-party technology so by

00:14:08.260 --> 00:14:08.270
monolithic third-party technology so by
 

00:14:08.270 --> 00:14:10.540
monolithic third-party technology so by
providing separate libraries we allow

00:14:10.540 --> 00:14:10.550
providing separate libraries we allow
 

00:14:10.550 --> 00:14:12.850
providing separate libraries we allow
game developers to adopt our technology

00:14:12.850 --> 00:14:12.860
game developers to adopt our technology
 

00:14:12.860 --> 00:14:14.470
game developers to adopt our technology
piecemeal they can just use whatever

00:14:14.470 --> 00:14:14.480
piecemeal they can just use whatever
 

00:14:14.480 --> 00:14:16.930
piecemeal they can just use whatever
they need and fit it with with what they

00:14:16.930 --> 00:14:16.940
they need and fit it with with what they
 

00:14:16.940 --> 00:14:18.910
they need and fit it with with what they
already have and even if they are using

00:14:18.910 --> 00:14:18.920
already have and even if they are using
 

00:14:18.920 --> 00:14:20.200
already have and even if they are using
a third-party engine if there's

00:14:20.200 --> 00:14:20.210
a third-party engine if there's
 

00:14:20.210 --> 00:14:21.370
a third-party engine if there's
something out there that they like they

00:14:21.370 --> 00:14:21.380
something out there that they like they
 

00:14:21.380 --> 00:14:24.400
something out there that they like they
can just grab that and drag it into

00:14:24.400 --> 00:14:24.410
can just grab that and drag it into
 

00:14:24.410 --> 00:14:27.790
can just grab that and drag it into
their engine as well great so let's talk

00:14:27.790 --> 00:14:27.800
their engine as well great so let's talk
 

00:14:27.800 --> 00:14:29.380
their engine as well great so let's talk
about these libraries and how they can

00:14:29.380 --> 00:14:29.390
about these libraries and how they can
 

00:14:29.390 --> 00:14:32.140
about these libraries and how they can
help you make more efficient games okay

00:14:32.140 --> 00:14:32.150
help you make more efficient games okay
 

00:14:32.150 --> 00:14:33.340
help you make more efficient games okay
excellent let's start at the bottom

00:14:33.340 --> 00:14:33.350
excellent let's start at the bottom
 

00:14:33.350 --> 00:14:37.060
excellent let's start at the bottom
water how do we store stuff well for

00:14:37.060 --> 00:14:37.070
water how do we store stuff well for
 

00:14:37.070 --> 00:14:38.800
water how do we store stuff well for
that we have flatbuffers which is our

00:14:38.800 --> 00:14:38.810
that we have flatbuffers which is our
 

00:14:38.810 --> 00:14:40.930
that we have flatbuffers which is our
civilization library it works for games

00:14:40.930 --> 00:14:40.940
civilization library it works for games
 

00:14:40.940 --> 00:14:44.260
civilization library it works for games
and it works for anything really as

00:14:44.260 --> 00:14:44.270
and it works for anything really as
 

00:14:44.270 --> 00:14:46.060
and it works for anything really as
you'll know civilization is about how we

00:14:46.060 --> 00:14:46.070
you'll know civilization is about how we
 

00:14:46.070 --> 00:14:50.470
you'll know civilization is about how we
load store and encode stuff and that is

00:14:50.470 --> 00:14:50.480
load store and encode stuff and that is
 

00:14:50.480 --> 00:14:53.400
load store and encode stuff and that is
very vital for a memory efficient game

00:14:53.400 --> 00:14:53.410
very vital for a memory efficient game
 

00:14:53.410 --> 00:14:56.710
very vital for a memory efficient game
now what a special about flatbuffers is

00:14:56.710 --> 00:14:56.720
now what a special about flatbuffers is
 

00:14:56.720 --> 00:14:59.710
now what a special about flatbuffers is
that it is a format that works equally

00:14:59.710 --> 00:14:59.720
that it is a format that works equally
 

00:14:59.720 --> 00:15:02.680
that it is a format that works equally
well on disk and in memory so you don't

00:15:02.680 --> 00:15:02.690
well on disk and in memory so you don't
 

00:15:02.690 --> 00:15:07.260
well on disk and in memory so you don't
actually have to unpack it Wow

00:15:07.260 --> 00:15:07.270
 
 

00:15:07.270 --> 00:15:12.010
 
nice one so this saves on parsing time

00:15:12.010 --> 00:15:12.020
nice one so this saves on parsing time
 

00:15:12.020 --> 00:15:13.660
nice one so this saves on parsing time
it means you don't have any object

00:15:13.660 --> 00:15:13.670
it means you don't have any object
 

00:15:13.670 --> 00:15:15.820
it means you don't have any object
allocation whatsoever it generally

00:15:15.820 --> 00:15:15.830
allocation whatsoever it generally
 

00:15:15.830 --> 00:15:18.430
allocation whatsoever it generally
reduces memory usage and it is more

00:15:18.430 --> 00:15:18.440
reduces memory usage and it is more
 

00:15:18.440 --> 00:15:22.840
reduces memory usage and it is more
cache efficient so what I'm going to say

00:15:22.840 --> 00:15:22.850
cache efficient so what I'm going to say
 

00:15:22.850 --> 00:15:25.090
cache efficient so what I'm going to say
is if your project game or not if it

00:15:25.090 --> 00:15:25.100
is if your project game or not if it
 

00:15:25.100 --> 00:15:27.310
is if your project game or not if it
uses JSON or protocol buffers or some

00:15:27.310 --> 00:15:27.320
uses JSON or protocol buffers or some
 

00:15:27.320 --> 00:15:29.650
uses JSON or protocol buffers or some
other sterilization solution you can

00:15:29.650 --> 00:15:29.660
other sterilization solution you can
 

00:15:29.660 --> 00:15:31.960
other sterilization solution you can
probably benefit from using buffers let

00:15:31.960 --> 00:15:31.970
probably benefit from using buffers let
 

00:15:31.970 --> 00:15:34.360
probably benefit from using buffers let
me interrupt there interesting fact that

00:15:34.360 --> 00:15:34.370
me interrupt there interesting fact that
 

00:15:34.370 --> 00:15:37.270
me interrupt there interesting fact that
JSON format is so amazing they named it

00:15:37.270 --> 00:15:37.280
JSON format is so amazing they named it
 

00:15:37.280 --> 00:15:40.420
JSON format is so amazing they named it
after me that it's not true it's not

00:15:40.420 --> 00:15:40.430
after me that it's not true it's not
 

00:15:40.430 --> 00:15:43.360
after me that it's not true it's not
true but it is a good idea

00:15:43.360 --> 00:15:43.370
true but it is a good idea
 

00:15:43.370 --> 00:15:45.790
true but it is a good idea
which is why flatbuffers has JSON

00:15:45.790 --> 00:15:45.800
which is why flatbuffers has JSON
 

00:15:45.800 --> 00:15:49.500
which is why flatbuffers has JSON
parsing built-in right yes languages so

00:15:49.500 --> 00:15:49.510
parsing built-in right yes languages so
 

00:15:49.510 --> 00:15:52.990
parsing built-in right yes languages so
we originally designed flatbuffers for

00:15:52.990 --> 00:15:53.000
we originally designed flatbuffers for
 

00:15:53.000 --> 00:15:55.420
we originally designed flatbuffers for
c++ and game development but we also

00:15:55.420 --> 00:15:55.430
c++ and game development but we also
 

00:15:55.430 --> 00:15:56.830
c++ and game development but we also
have support for your favorite

00:15:56.830 --> 00:15:56.840
have support for your favorite
 

00:15:56.840 --> 00:15:58.750
have support for your favorite
programming languages language assuming

00:15:58.750 --> 00:15:58.760
programming languages language assuming
 

00:15:58.760 --> 00:16:00.190
programming languages language assuming
your favorite programming language is

00:16:00.190 --> 00:16:00.200
your favorite programming language is
 

00:16:00.200 --> 00:16:03.790
your favorite programming language is
one of C C++ Java c-sharp

00:16:03.790 --> 00:16:03.800
one of C C++ Java c-sharp
 

00:16:03.800 --> 00:16:11.140
one of C C++ Java c-sharp
Go Python JavaScript PHP swift etc so

00:16:11.140 --> 00:16:11.150
Go Python JavaScript PHP swift etc so
 

00:16:11.150 --> 00:16:13.360
Go Python JavaScript PHP swift etc so
and that's just in case that your tools

00:16:13.360 --> 00:16:13.370
and that's just in case that your tools
 

00:16:13.370 --> 00:16:15.280
and that's just in case that your tools
or servers are written in something

00:16:15.280 --> 00:16:15.290
or servers are written in something
 

00:16:15.290 --> 00:16:17.470
or servers are written in something
other than C++ and sometimes that makes

00:16:17.470 --> 00:16:17.480
other than C++ and sometimes that makes
 

00:16:17.480 --> 00:16:21.130
other than C++ and sometimes that makes
a lot of sense sometimes so ok you know

00:16:21.130 --> 00:16:21.140
a lot of sense sometimes so ok you know
 

00:16:21.140 --> 00:16:23.470
a lot of sense sometimes so ok you know
what's also fundamental is all this math

00:16:23.470 --> 00:16:23.480
what's also fundamental is all this math
 

00:16:23.480 --> 00:16:25.590
what's also fundamental is all this math
that games use how do we deal with that

00:16:25.590 --> 00:16:25.600
that games use how do we deal with that
 

00:16:25.600 --> 00:16:29.500
that games use how do we deal with that
we have a library called math foo and it

00:16:29.500 --> 00:16:29.510
we have a library called math foo and it
 

00:16:29.510 --> 00:16:31.420
we have a library called math foo and it
implements a lot of common geometry

00:16:31.420 --> 00:16:31.430
implements a lot of common geometry
 

00:16:31.430 --> 00:16:33.100
implements a lot of common geometry
functions and it's designed to be simple

00:16:33.100 --> 00:16:33.110
functions and it's designed to be simple
 

00:16:33.110 --> 00:16:37.780
functions and it's designed to be simple
and fast so by geometry we mean the math

00:16:37.780 --> 00:16:37.790
and fast so by geometry we mean the math
 

00:16:37.790 --> 00:16:40.510
and fast so by geometry we mean the math
on vectors and matrices usually two

00:16:40.510 --> 00:16:40.520
on vectors and matrices usually two
 

00:16:40.520 --> 00:16:42.660
on vectors and matrices usually two
three four dimensions sometimes more

00:16:42.660 --> 00:16:42.670
three four dimensions sometimes more
 

00:16:42.670 --> 00:16:45.720
three four dimensions sometimes more
rendering physics animation AI they all

00:16:45.720 --> 00:16:45.730
rendering physics animation AI they all
 

00:16:45.730 --> 00:16:48.370
rendering physics animation AI they all
use this kind of math anything that

00:16:48.370 --> 00:16:48.380
use this kind of math anything that
 

00:16:48.380 --> 00:16:49.890
use this kind of math anything that
deals with physical space and

00:16:49.890 --> 00:16:49.900
deals with physical space and
 

00:16:49.900 --> 00:16:53.470
deals with physical space and
calculations within it of course there's

00:16:53.470 --> 00:16:53.480
calculations within it of course there's
 

00:16:53.480 --> 00:16:55.810
calculations within it of course there's
other open source math libraries out

00:16:55.810 --> 00:16:55.820
other open source math libraries out
 

00:16:55.820 --> 00:16:57.220
other open source math libraries out
there some of them very good like eigen

00:16:57.220 --> 00:16:57.230
there some of them very good like eigen
 

00:16:57.230 --> 00:17:00.910
there some of them very good like eigen
and GLM but we wanted one that was very

00:17:00.910 --> 00:17:00.920
and GLM but we wanted one that was very
 

00:17:00.920 --> 00:17:03.010
and GLM but we wanted one that was very
simple and focused on the math that was

00:17:03.010 --> 00:17:03.020
simple and focused on the math that was
 

00:17:03.020 --> 00:17:05.110
simple and focused on the math that was
required for games and not necessarily

00:17:05.110 --> 00:17:05.120
required for games and not necessarily
 

00:17:05.120 --> 00:17:07.179
required for games and not necessarily
say for scientific applications like

00:17:07.179 --> 00:17:07.189
say for scientific applications like
 

00:17:07.189 --> 00:17:10.110
say for scientific applications like
eigen is very good at

00:17:10.110 --> 00:17:10.120
eigen is very good at
 

00:17:10.120 --> 00:17:12.610
eigen is very good at
we also wanted to make a library that

00:17:12.610 --> 00:17:12.620
we also wanted to make a library that
 

00:17:12.620 --> 00:17:15.340
we also wanted to make a library that
was extremely fast because it's the

00:17:15.340 --> 00:17:15.350
was extremely fast because it's the
 

00:17:15.350 --> 00:17:16.510
was extremely fast because it's the
foundation for all of our other

00:17:16.510 --> 00:17:16.520
foundation for all of our other
 

00:17:16.520 --> 00:17:18.390
foundation for all of our other
libraries so we spent a lot of time

00:17:18.390 --> 00:17:18.400
libraries so we spent a lot of time
 

00:17:18.400 --> 00:17:21.640
libraries so we spent a lot of time
benchmarking math foo and optimizing it

00:17:21.640 --> 00:17:21.650
benchmarking math foo and optimizing it
 

00:17:21.650 --> 00:17:23.740
benchmarking math foo and optimizing it
where appropriate for example many of

00:17:23.740 --> 00:17:23.750
where appropriate for example many of
 

00:17:23.750 --> 00:17:25.390
where appropriate for example many of
the functions use Cindy instructions

00:17:25.390 --> 00:17:25.400
the functions use Cindy instructions
 

00:17:25.400 --> 00:17:27.940
the functions use Cindy instructions
especially the matrix operations so this

00:17:27.940 --> 00:17:27.950
especially the matrix operations so this
 

00:17:27.950 --> 00:17:29.950
especially the matrix operations so this
is like SSE instructions and neon

00:17:29.950 --> 00:17:29.960
is like SSE instructions and neon
 

00:17:29.960 --> 00:17:33.040
is like SSE instructions and neon
instructions these level these leverage

00:17:33.040 --> 00:17:33.050
instructions these level these leverage
 

00:17:33.050 --> 00:17:35.520
instructions these level these leverage
the vector processing unit on the chips

00:17:35.520 --> 00:17:35.530
the vector processing unit on the chips
 

00:17:35.530 --> 00:17:37.420
the vector processing unit on the chips
get I think you're losing the audience

00:17:37.420 --> 00:17:37.430
get I think you're losing the audience
 

00:17:37.430 --> 00:17:38.620
get I think you're losing the audience
Jason am I really

00:17:38.620 --> 00:17:38.630
Jason am I really
 

00:17:38.630 --> 00:17:42.730
Jason am I really
yeah anyways technical it's fast so we

00:17:42.730 --> 00:17:42.740
yeah anyways technical it's fast so we
 

00:17:42.740 --> 00:17:44.980
yeah anyways technical it's fast so we
have data and math water what do we need

00:17:44.980 --> 00:17:44.990
have data and math water what do we need
 

00:17:44.990 --> 00:17:48.580
have data and math water what do we need
next so fpou base is our lowest level

00:17:48.580 --> 00:17:48.590
next so fpou base is our lowest level
 

00:17:48.590 --> 00:17:50.920
next so fpou base is our lowest level
game library that we use for rendering

00:17:50.920 --> 00:17:50.930
game library that we use for rendering
 

00:17:50.930 --> 00:17:54.010
game library that we use for rendering
inputs loading resources things like you

00:17:54.010 --> 00:17:54.020
inputs loading resources things like you
 

00:17:54.020 --> 00:17:56.890
inputs loading resources things like you
know shaders meshes textures anything

00:17:56.890 --> 00:17:56.900
know shaders meshes textures anything
 

00:17:56.900 --> 00:17:58.840
know shaders meshes textures anything
that you need to get a game on screen

00:17:58.840 --> 00:17:58.850
that you need to get a game on screen
 

00:17:58.850 --> 00:18:01.180
that you need to get a game on screen
basically it also has useful

00:18:01.180 --> 00:18:01.190
basically it also has useful
 

00:18:01.190 --> 00:18:02.890
basically it also has useful
functionality for dealing with n or

00:18:02.890 --> 00:18:02.900
functionality for dealing with n or
 

00:18:02.900 --> 00:18:06.130
functionality for dealing with n or
input devices and VR it also started

00:18:06.130 --> 00:18:06.140
input devices and VR it also started
 

00:18:06.140 --> 00:18:09.400
input devices and VR it also started
resource loading FPL base was intended

00:18:09.400 --> 00:18:09.410
resource loading FPL base was intended
 

00:18:09.410 --> 00:18:12.610
resource loading FPL base was intended
as a way to go from like an empty

00:18:12.610 --> 00:18:12.620
as a way to go from like an empty
 

00:18:12.620 --> 00:18:15.610
as a way to go from like an empty
project to drawing something on screen

00:18:15.610 --> 00:18:15.620
project to drawing something on screen
 

00:18:15.620 --> 00:18:18.460
project to drawing something on screen
as fast as possible that little code as

00:18:18.460 --> 00:18:18.470
as fast as possible that little code as
 

00:18:18.470 --> 00:18:19.750
as fast as possible that little code as
possible

00:18:19.750 --> 00:18:19.760
possible
 

00:18:19.760 --> 00:18:21.520
possible
so it has all the minimal functionality

00:18:21.520 --> 00:18:21.530
so it has all the minimal functionality
 

00:18:21.530 --> 00:18:23.110
so it has all the minimal functionality
that you typically get particularly

00:18:23.110 --> 00:18:23.120
that you typically get particularly
 

00:18:23.120 --> 00:18:25.690
that you typically get particularly
don't get when you work on top of raw

00:18:25.690 --> 00:18:25.700
don't get when you work on top of raw
 

00:18:25.700 --> 00:18:29.530
don't get when you work on top of raw
OpenGL now it's on purpose not meant to

00:18:29.530 --> 00:18:29.540
OpenGL now it's on purpose not meant to
 

00:18:29.540 --> 00:18:31.510
OpenGL now it's on purpose not meant to
be an engine it's not dictating how your

00:18:31.510 --> 00:18:31.520
be an engine it's not dictating how your
 

00:18:31.520 --> 00:18:32.650
be an engine it's not dictating how your
game should be structure or anything

00:18:32.650 --> 00:18:32.660
game should be structure or anything
 

00:18:32.660 --> 00:18:34.930
game should be structure or anything
like that it's just meant to be simple

00:18:34.930 --> 00:18:34.940
like that it's just meant to be simple
 

00:18:34.940 --> 00:18:37.840
like that it's just meant to be simple
and easy and quick to get going so works

00:18:37.840 --> 00:18:37.850
and easy and quick to get going so works
 

00:18:37.850 --> 00:18:39.640
and easy and quick to get going so works
on all platforms mobile and desktop

00:18:39.640 --> 00:18:39.650
on all platforms mobile and desktop
 

00:18:39.650 --> 00:18:42.400
on all platforms mobile and desktop
right thanks to SD l SD L is the simple

00:18:42.400 --> 00:18:42.410
right thanks to SD l SD L is the simple
 

00:18:42.410 --> 00:18:45.160
right thanks to SD l SD L is the simple
directmedia layer and other FPL

00:18:45.160 --> 00:18:45.170
directmedia layer and other FPL
 

00:18:45.170 --> 00:18:48.580
directmedia layer and other FPL
libraries may be used on on top of it so

00:18:48.580 --> 00:18:48.590
libraries may be used on on top of it so
 

00:18:48.590 --> 00:18:51.160
libraries may be used on on top of it so
now that we can render things what's the

00:18:51.160 --> 00:18:51.170
now that we can render things what's the
 

00:18:51.170 --> 00:18:53.080
now that we can render things what's the
next thing to make our games come to

00:18:53.080 --> 00:18:53.090
next thing to make our games come to
 

00:18:53.090 --> 00:18:57.730
next thing to make our games come to
life so animation I think is a really

00:18:57.730 --> 00:18:57.740
life so animation I think is a really
 

00:18:57.740 --> 00:18:59.230
life so animation I think is a really
great way to bring your games to life

00:18:59.230 --> 00:18:59.240
great way to bring your games to life
 

00:18:59.240 --> 00:19:01.690
great way to bring your games to life
you would say that and motive is our

00:19:01.690 --> 00:19:01.700
you would say that and motive is our
 

00:19:01.700 --> 00:19:04.750
you would say that and motive is our
animation system it's a really great way

00:19:04.750 --> 00:19:04.760
animation system it's a really great way
 

00:19:04.760 --> 00:19:05.950
animation system it's a really great way
to bring character and charm to your

00:19:05.950 --> 00:19:05.960
to bring character and charm to your
 

00:19:05.960 --> 00:19:07.780
to bring character and charm to your
games animation is kind of intimidating

00:19:07.780 --> 00:19:07.790
games animation is kind of intimidating
 

00:19:07.790 --> 00:19:09.430
games animation is kind of intimidating
to a lot of developers there's just a

00:19:09.430 --> 00:19:09.440
to a lot of developers there's just a
 

00:19:09.440 --> 00:19:11.380
to a lot of developers there's just a
lot of ways to move something from point

00:19:11.380 --> 00:19:11.390
lot of ways to move something from point
 

00:19:11.390 --> 00:19:14.410
lot of ways to move something from point
A to point B and some of them have a lot

00:19:14.410 --> 00:19:14.420
A to point B and some of them have a lot
 

00:19:14.420 --> 00:19:17.590
A to point B and some of them have a lot
of feeling and intent but others just

00:19:17.590 --> 00:19:17.600
of feeling and intent but others just
 

00:19:17.600 --> 00:19:19.990
of feeling and intent but others just
kind of look robotic so the goal of

00:19:19.990 --> 00:19:20.000
kind of look robotic so the goal of
 

00:19:20.000 --> 00:19:23.150
kind of look robotic so the goal of
motive is to make it easy to animate

00:19:23.150 --> 00:19:23.160
motive is to make it easy to animate
 

00:19:23.160 --> 00:19:28.370
motive is to make it easy to animate
everything smooth and intensely so to do

00:19:28.370 --> 00:19:28.380
everything smooth and intensely so to do
 

00:19:28.380 --> 00:19:30.890
everything smooth and intensely so to do
this we made the runtime extremely fast

00:19:30.890 --> 00:19:30.900
this we made the runtime extremely fast
 

00:19:30.900 --> 00:19:32.720
this we made the runtime extremely fast
because often there's a lot in your

00:19:32.720 --> 00:19:32.730
because often there's a lot in your
 

00:19:32.730 --> 00:19:34.940
because often there's a lot in your
scene that needs to be animated it

00:19:34.940 --> 00:19:34.950
scene that needs to be animated it
 

00:19:34.950 --> 00:19:36.680
scene that needs to be animated it
computes values in bulk with assembly

00:19:36.680 --> 00:19:36.690
computes values in bulk with assembly
 

00:19:36.690 --> 00:19:38.750
computes values in bulk with assembly
instructions I was talking about the

00:19:38.750 --> 00:19:38.760
instructions I was talking about the
 

00:19:38.760 --> 00:19:40.940
instructions I was talking about the
memory format is also very compact and

00:19:40.940 --> 00:19:40.950
memory format is also very compact and
 

00:19:40.950 --> 00:19:43.730
memory format is also very compact and
this helps with the memory bandwidth

00:19:43.730 --> 00:19:43.740
this helps with the memory bandwidth
 

00:19:43.740 --> 00:19:46.010
this helps with the memory bandwidth
limitations that's intrinsic to mobile

00:19:46.010 --> 00:19:46.020
limitations that's intrinsic to mobile
 

00:19:46.020 --> 00:19:50.930
limitations that's intrinsic to mobile
devices with motive you can drive

00:19:50.930 --> 00:19:50.940
devices with motive you can drive
 

00:19:50.940 --> 00:19:53.870
devices with motive you can drive
animations with pre offered splines or

00:19:53.870 --> 00:19:53.880
animations with pre offered splines or
 

00:19:53.880 --> 00:19:56.720
animations with pre offered splines or
you can also drive it procedurally to

00:19:56.720 --> 00:19:56.730
you can also drive it procedurally to
 

00:19:56.730 --> 00:20:00.320
you can also drive it procedurally to
say naturally move matching follow a

00:20:00.320 --> 00:20:00.330
say naturally move matching follow a
 

00:20:00.330 --> 00:20:03.650
say naturally move matching follow a
moving target okay so now we're going to

00:20:03.650 --> 00:20:03.660
moving target okay so now we're going to
 

00:20:03.660 --> 00:20:06.710
moving target okay so now we're going to
show you one of our sample games high

00:20:06.710 --> 00:20:06.720
show you one of our sample games high
 

00:20:06.720 --> 00:20:09.920
show you one of our sample games high
noon to give you an idea of how simple

00:20:09.920 --> 00:20:09.930
noon to give you an idea of how simple
 

00:20:09.930 --> 00:20:43.180
noon to give you an idea of how simple
motion can help bring a game to life

00:20:43.180 --> 00:20:43.190
 
 

00:20:43.190 --> 00:20:45.710
 
okay so most of the animation in pionen

00:20:45.710 --> 00:20:45.720
okay so most of the animation in pionen
 

00:20:45.720 --> 00:20:48.170
okay so most of the animation in pionen
is actually procedural but in our next

00:20:48.170 --> 00:20:48.180
is actually procedural but in our next
 

00:20:48.180 --> 00:20:51.410
is actually procedural but in our next
game sushi we support fully rigged

00:20:51.410 --> 00:20:51.420
game sushi we support fully rigged
 

00:20:51.420 --> 00:20:53.660
game sushi we support fully rigged
character animation so the dapper

00:20:53.660 --> 00:20:53.670
character animation so the dapper
 

00:20:53.670 --> 00:20:55.580
character animation so the dapper
crocodile here will do a little jig when

00:20:55.580 --> 00:20:55.590
crocodile here will do a little jig when
 

00:20:55.590 --> 00:20:57.680
crocodile here will do a little jig when
you feed him a piece of sushi as you

00:20:57.680 --> 00:20:57.690
you feed him a piece of sushi as you
 

00:20:57.690 --> 00:21:00.470
you feed him a piece of sushi as you
would expect and the dig animation is

00:21:00.470 --> 00:21:00.480
would expect and the dig animation is
 

00:21:00.480 --> 00:21:03.290
would expect and the dig animation is
created using third-party animation

00:21:03.290 --> 00:21:03.300
created using third-party animation
 

00:21:03.300 --> 00:21:05.600
created using third-party animation
authoring tools like Maya or blender and

00:21:05.600 --> 00:21:05.610
authoring tools like Maya or blender and
 

00:21:05.610 --> 00:21:07.910
authoring tools like Maya or blender and
it's brought into our game via and

00:21:07.910 --> 00:21:07.920
it's brought into our game via and
 

00:21:07.920 --> 00:21:10.580
it's brought into our game via and
animation pipeline that we've written so

00:21:10.580 --> 00:21:10.590
animation pipeline that we've written so
 

00:21:10.590 --> 00:21:12.910
animation pipeline that we've written so
we'll show you videos you see in a bit

00:21:12.910 --> 00:21:12.920
we'll show you videos you see in a bit
 

00:21:12.920 --> 00:21:15.080
we'll show you videos you see in a bit
okay water so we've got this game

00:21:15.080 --> 00:21:15.090
okay water so we've got this game
 

00:21:15.090 --> 00:21:17.060
okay water so we've got this game
animated how do we communicate with the

00:21:17.060 --> 00:21:17.070
animated how do we communicate with the
 

00:21:17.070 --> 00:21:20.480
animated how do we communicate with the
user well for that we have flat UI so

00:21:20.480 --> 00:21:20.490
user well for that we have flat UI so
 

00:21:20.490 --> 00:21:23.600
user well for that we have flat UI so
flat UI is an immediate mode UI library

00:21:23.600 --> 00:21:23.610
flat UI is an immediate mode UI library
 

00:21:23.610 --> 00:21:26.180
flat UI is an immediate mode UI library
that's meant to make it simple easy and

00:21:26.180 --> 00:21:26.190
that's meant to make it simple easy and
 

00:21:26.190 --> 00:21:30.620
that's meant to make it simple easy and
efficient to add menus a 2ds and other

00:21:30.620 --> 00:21:30.630
efficient to add menus a 2ds and other
 

00:21:30.630 --> 00:21:34.040
efficient to add menus a 2ds and other
elements to your game so let's talk a

00:21:34.040 --> 00:21:34.050
elements to your game so let's talk a
 

00:21:34.050 --> 00:21:35.180
elements to your game so let's talk a
little bit about like what this

00:21:35.180 --> 00:21:35.190
little bit about like what this
 

00:21:35.190 --> 00:21:38.090
little bit about like what this
immediate mode saying means it means

00:21:38.090 --> 00:21:38.100
immediate mode saying means it means
 

00:21:38.100 --> 00:21:39.520
immediate mode saying means it means
that rather than constructing your UI

00:21:39.520 --> 00:21:39.530
that rather than constructing your UI
 

00:21:39.530 --> 00:21:42.290
that rather than constructing your UI
using objects and callbacks and things

00:21:42.290 --> 00:21:42.300
using objects and callbacks and things
 

00:21:42.300 --> 00:21:42.710
using objects and callbacks and things
like that

00:21:42.710 --> 00:21:42.720
like that
 

00:21:42.720 --> 00:21:46.370
like that
you actually construct UI by function

00:21:46.370 --> 00:21:46.380
you actually construct UI by function
 

00:21:46.380 --> 00:21:48.260
you actually construct UI by function
calls that you create your UI every

00:21:48.260 --> 00:21:48.270
calls that you create your UI every
 

00:21:48.270 --> 00:21:50.660
calls that you create your UI every
frame again now that has a whole bunch

00:21:50.660 --> 00:21:50.670
frame again now that has a whole bunch
 

00:21:50.670 --> 00:21:53.180
frame again now that has a whole bunch
of advantages for example first in all

00:21:53.180 --> 00:21:53.190
of advantages for example first in all
 

00:21:53.190 --> 00:21:55.640
of advantages for example first in all
this less code there's less set of work

00:21:55.640 --> 00:21:55.650
this less code there's less set of work
 

00:21:55.650 --> 00:21:58.100
this less code there's less set of work
to do and simple you eyes are pretty

00:21:58.100 --> 00:21:58.110
to do and simple you eyes are pretty
 

00:21:58.110 --> 00:22:00.950
to do and simple you eyes are pretty
simple to get going it's much you should

00:22:00.950 --> 00:22:00.960
simple to get going it's much you should
 

00:22:00.960 --> 00:22:04.190
simple to get going it's much you should
do a dynamic UI because if you don't

00:22:04.190 --> 00:22:04.200
do a dynamic UI because if you don't
 

00:22:04.200 --> 00:22:06.860
do a dynamic UI because if you don't
call a particular UI snippet it does not

00:22:06.860 --> 00:22:06.870
call a particular UI snippet it does not
 

00:22:06.870 --> 00:22:09.230
call a particular UI snippet it does not
appear on-screen so there's no adding

00:22:09.230 --> 00:22:09.240
appear on-screen so there's no adding
 

00:22:09.240 --> 00:22:10.940
appear on-screen so there's no adding
and removing of objects or anything like

00:22:10.940 --> 00:22:10.950
and removing of objects or anything like
 

00:22:10.950 --> 00:22:13.370
and removing of objects or anything like
that needs to happen it also means that

00:22:13.370 --> 00:22:13.380
that needs to happen it also means that
 

00:22:13.380 --> 00:22:15.230
that needs to happen it also means that
your UI is always consistent with your

00:22:15.230 --> 00:22:15.240
your UI is always consistent with your
 

00:22:15.240 --> 00:22:17.000
your UI is always consistent with your
game state because you don't you come

00:22:17.000 --> 00:22:17.010
game state because you don't you come
 

00:22:17.010 --> 00:22:20.570
game state because you don't you come
basically can't forget to set some state

00:22:20.570 --> 00:22:20.580
basically can't forget to set some state
 

00:22:20.580 --> 00:22:24.560
basically can't forget to set some state
on your UI event handling is all local

00:22:24.560 --> 00:22:24.570
on your UI event handling is all local
 

00:22:24.570 --> 00:22:26.900
on your UI event handling is all local
so it's right there in place when you're

00:22:26.900 --> 00:22:26.910
so it's right there in place when you're
 

00:22:26.910 --> 00:22:28.310
so it's right there in place when you're
constructing your UI and you have the

00:22:28.310 --> 00:22:28.320
constructing your UI and you have the
 

00:22:28.320 --> 00:22:30.680
constructing your UI and you have the
data right there so there's no callbacks

00:22:30.680 --> 00:22:30.690
data right there so there's no callbacks
 

00:22:30.690 --> 00:22:32.840
data right there so there's no callbacks
happening that might execute on like a

00:22:32.840 --> 00:22:32.850
happening that might execute on like a
 

00:22:32.850 --> 00:22:34.310
happening that might execute on like a
different context or something like that

00:22:34.310 --> 00:22:34.320
different context or something like that
 

00:22:34.320 --> 00:22:37.090
different context or something like that
and it's very easy to make custom UI

00:22:37.090 --> 00:22:37.100
and it's very easy to make custom UI
 

00:22:37.100 --> 00:22:38.960
and it's very easy to make custom UI
elements because you can just combine

00:22:38.960 --> 00:22:38.970
elements because you can just combine
 

00:22:38.970 --> 00:22:42.390
elements because you can just combine
multiple function calls into one

00:22:42.390 --> 00:22:42.400
multiple function calls into one
 

00:22:42.400 --> 00:22:44.370
multiple function calls into one
for example here's a contrived example

00:22:44.370 --> 00:22:44.380
for example here's a contrived example
 

00:22:44.380 --> 00:22:46.500
for example here's a contrived example
on the slide where we have two UI

00:22:46.500 --> 00:22:46.510
on the slide where we have two UI
 

00:22:46.510 --> 00:22:48.990
on the slide where we have two UI
elements like a label and a button and

00:22:48.990 --> 00:22:49.000
elements like a label and a button and
 

00:22:49.000 --> 00:22:50.820
elements like a label and a button and
as you can see they're just function

00:22:50.820 --> 00:22:50.830
as you can see they're just function
 

00:22:50.830 --> 00:22:53.820
as you can see they're just function
calls the event handling is just an

00:22:53.820 --> 00:22:53.830
calls the event handling is just an
 

00:22:53.830 --> 00:22:57.060
calls the event handling is just an
if-then statement and for the state that

00:22:57.060 --> 00:22:57.070
if-then statement and for the state that
 

00:22:57.070 --> 00:22:58.650
if-then statement and for the state that
we're managing we can just use any

00:22:58.650 --> 00:22:58.660
we're managing we can just use any
 

00:22:58.660 --> 00:23:00.750
we're managing we can just use any
variable that happens to be in scope

00:23:00.750 --> 00:23:00.760
variable that happens to be in scope
 

00:23:00.760 --> 00:23:01.850
variable that happens to be in scope
over here

00:23:01.850 --> 00:23:01.860
over here
 

00:23:01.860 --> 00:23:05.040
over here
making it pretty simple now flexi wire

00:23:05.040 --> 00:23:05.050
making it pretty simple now flexi wire
 

00:23:05.050 --> 00:23:06.990
making it pretty simple now flexi wire
has a couple of additional cool features

00:23:06.990 --> 00:23:07.000
has a couple of additional cool features
 

00:23:07.000 --> 00:23:09.240
has a couple of additional cool features
so first of all has very robust font

00:23:09.240 --> 00:23:09.250
so first of all has very robust font
 

00:23:09.250 --> 00:23:11.550
so first of all has very robust font
rendering that is unicode

00:23:11.550 --> 00:23:11.560
rendering that is unicode
 

00:23:11.560 --> 00:23:14.760
rendering that is unicode
internationalization aware it generally

00:23:14.760 --> 00:23:14.770
internationalization aware it generally
 

00:23:14.770 --> 00:23:17.700
internationalization aware it generally
uses amazingly little memory beyond any

00:23:17.700 --> 00:23:17.710
uses amazingly little memory beyond any
 

00:23:17.710 --> 00:23:19.710
uses amazingly little memory beyond any
textures and fonts that you load it

00:23:19.710 --> 00:23:19.720
textures and fonts that you load it
 

00:23:19.720 --> 00:23:21.420
textures and fonts that you load it
pretty much uses no memory that's kind

00:23:21.420 --> 00:23:21.430
pretty much uses no memory that's kind
 

00:23:21.430 --> 00:23:24.030
pretty much uses no memory that's kind
of a theme you're seeing here yeah yeah

00:23:24.030 --> 00:23:24.040
of a theme you're seeing here yeah yeah
 

00:23:24.040 --> 00:23:26.330
of a theme you're seeing here yeah yeah
exactly

00:23:26.330 --> 00:23:26.340
exactly
 

00:23:26.340 --> 00:23:29.640
exactly
importantly it can render things into 3d

00:23:29.640 --> 00:23:29.650
importantly it can render things into 3d
 

00:23:29.650 --> 00:23:32.580
importantly it can render things into 3d
if you're doing VR for example it does

00:23:32.580 --> 00:23:32.590
if you're doing VR for example it does
 

00:23:32.590 --> 00:23:34.380
if you're doing VR for example it does
automatically out of everything using

00:23:34.380 --> 00:23:34.390
automatically out of everything using
 

00:23:34.390 --> 00:23:36.960
automatically out of everything using
virtual sizes which means that you're

00:23:36.960 --> 00:23:36.970
virtual sizes which means that you're
 

00:23:36.970 --> 00:23:39.120
virtual sizes which means that you're
you eyes look great on any kind of

00:23:39.120 --> 00:23:39.130
you eyes look great on any kind of
 

00:23:39.130 --> 00:23:42.000
you eyes look great on any kind of
screen and it doesn't dictate a style if

00:23:42.000 --> 00:23:42.010
screen and it doesn't dictate a style if
 

00:23:42.010 --> 00:23:44.820
screen and it doesn't dictate a style if
you can render it it can be your style

00:23:44.820 --> 00:23:44.830
you can render it it can be your style
 

00:23:44.830 --> 00:23:48.960
you can render it it can be your style
basically so Jason you already spoke

00:23:48.960 --> 00:23:48.970
basically so Jason you already spoke
 

00:23:48.970 --> 00:23:51.240
basically so Jason you already spoke
about animation what else can you give

00:23:51.240 --> 00:23:51.250
about animation what else can you give
 

00:23:51.250 --> 00:23:53.640
about animation what else can you give
us that make games come alive one of our

00:23:53.640 --> 00:23:53.650
us that make games come alive one of our
 

00:23:53.650 --> 00:23:55.500
us that make games come alive one of our
first libraries and one of the more

00:23:55.500 --> 00:23:55.510
first libraries and one of the more
 

00:23:55.510 --> 00:23:57.690
first libraries and one of the more
popular is a liquid physics simulator

00:23:57.690 --> 00:23:57.700
popular is a liquid physics simulator
 

00:23:57.700 --> 00:24:00.240
popular is a liquid physics simulator
called liquid fun liquid fun is a

00:24:00.240 --> 00:24:00.250
called liquid fun liquid fun is a
 

00:24:00.250 --> 00:24:02.970
called liquid fun liquid fun is a
drop-in extension for the popular box 2d

00:24:02.970 --> 00:24:02.980
drop-in extension for the popular box 2d
 

00:24:02.980 --> 00:24:05.610
drop-in extension for the popular box 2d
physics engine it's a really simple way

00:24:05.610 --> 00:24:05.620
physics engine it's a really simple way
 

00:24:05.620 --> 00:24:08.430
physics engine it's a really simple way
to add to the liquid gas and particle

00:24:08.430 --> 00:24:08.440
to add to the liquid gas and particle
 

00:24:08.440 --> 00:24:09.390
to add to the liquid gas and particle
effects to your game

00:24:09.390 --> 00:24:09.400
effects to your game
 

00:24:09.400 --> 00:24:12.240
effects to your game
the runtime out aggro algorithm is is

00:24:12.240 --> 00:24:12.250
the runtime out aggro algorithm is is
 

00:24:12.250 --> 00:24:14.340
the runtime out aggro algorithm is is
kind of clever and it's extremely

00:24:14.340 --> 00:24:14.350
kind of clever and it's extremely
 

00:24:14.350 --> 00:24:16.350
kind of clever and it's extremely
efficient so you'd probably be surprised

00:24:16.350 --> 00:24:16.360
efficient so you'd probably be surprised
 

00:24:16.360 --> 00:24:18.570
efficient so you'd probably be surprised
at how much complicated motion it can

00:24:18.570 --> 00:24:18.580
at how much complicated motion it can
 

00:24:18.580 --> 00:24:21.480
at how much complicated motion it can
create one of our other sample games

00:24:21.480 --> 00:24:21.490
create one of our other sample games
 

00:24:21.490 --> 00:24:23.130
create one of our other sample games
we'll show you here is called liquid fun

00:24:23.130 --> 00:24:23.140
we'll show you here is called liquid fun
 

00:24:23.140 --> 00:24:24.780
we'll show you here is called liquid fun
paints we'll just show you the beginning

00:24:24.780 --> 00:24:24.790
paints we'll just show you the beginning
 

00:24:24.790 --> 00:24:26.460
paints we'll just show you the beginning
of this trailer so you get a sense for

00:24:26.460 --> 00:24:26.470
of this trailer so you get a sense for
 

00:24:26.470 --> 00:25:05.310
of this trailer so you get a sense for
what the library does

00:25:05.310 --> 00:25:05.320
 
 

00:25:05.320 --> 00:25:07.600
 
okay so that's the idea that's a really

00:25:07.600 --> 00:25:07.610
okay so that's the idea that's a really
 

00:25:07.610 --> 00:25:09.370
okay so that's the idea that's a really
fun app you can also find in the Play

00:25:09.370 --> 00:25:09.380
fun app you can also find in the Play
 

00:25:09.380 --> 00:25:12.610
fun app you can also find in the Play
Store a lot of kids love it all right

00:25:12.610 --> 00:25:12.620
Store a lot of kids love it all right
 

00:25:12.620 --> 00:25:16.330
Store a lot of kids love it all right
like welco our next library is thanks

00:25:16.330 --> 00:25:16.340
like welco our next library is thanks
 

00:25:16.340 --> 00:25:17.620
like welco our next library is thanks
Jason

00:25:17.620 --> 00:25:17.630
Jason
 

00:25:17.630 --> 00:25:19.330
Jason
so our next library is pin drop which is

00:25:19.330 --> 00:25:19.340
so our next library is pin drop which is
 

00:25:19.340 --> 00:25:22.570
so our next library is pin drop which is
our audio solution so pin what's special

00:25:22.570 --> 00:25:22.580
our audio solution so pin what's special
 

00:25:22.580 --> 00:25:24.280
our audio solution so pin what's special
about pin drop is that it goes beyond

00:25:24.280 --> 00:25:24.290
about pin drop is that it goes beyond
 

00:25:24.290 --> 00:25:26.740
about pin drop is that it goes beyond
just mere audio mixing for example it

00:25:26.740 --> 00:25:26.750
just mere audio mixing for example it
 

00:25:26.750 --> 00:25:29.110
just mere audio mixing for example it
handles prioritization and attenuation

00:25:29.110 --> 00:25:29.120
handles prioritization and attenuation
 

00:25:29.120 --> 00:25:31.299
handles prioritization and attenuation
that means that if you have a game scene

00:25:31.299 --> 00:25:31.309
that means that if you have a game scene
 

00:25:31.309 --> 00:25:32.950
that means that if you have a game scene
and suddenly there's a lot of events

00:25:32.950 --> 00:25:32.960
and suddenly there's a lot of events
 

00:25:32.960 --> 00:25:34.570
and suddenly there's a lot of events
triggered a lot of gameplay events

00:25:34.570 --> 00:25:34.580
triggered a lot of gameplay events
 

00:25:34.580 --> 00:25:36.790
triggered a lot of gameplay events
trigging a lot of sounds that the system

00:25:36.790 --> 00:25:36.800
trigging a lot of sounds that the system
 

00:25:36.800 --> 00:25:38.169
trigging a lot of sounds that the system
will automatically take care of making

00:25:38.169 --> 00:25:38.179
will automatically take care of making
 

00:25:38.179 --> 00:25:40.270
will automatically take care of making
it into a coherent audio picture for you

00:25:40.270 --> 00:25:40.280
it into a coherent audio picture for you
 

00:25:40.280 --> 00:25:43.930
it into a coherent audio picture for you
basically it also allows you to group

00:25:43.930 --> 00:25:43.940
basically it also allows you to group
 

00:25:43.940 --> 00:25:46.240
basically it also allows you to group
and selectively override relatively

00:25:46.240 --> 00:25:46.250
and selectively override relatively
 

00:25:46.250 --> 00:25:49.180
and selectively override relatively
importance of whole groups of sounds for

00:25:49.180 --> 00:25:49.190
importance of whole groups of sounds for
 

00:25:49.190 --> 00:25:50.770
importance of whole groups of sounds for
example if you wanted to make sure that

00:25:50.770 --> 00:25:50.780
example if you wanted to make sure that
 

00:25:50.780 --> 00:25:52.840
example if you wanted to make sure that
like voiceovers get heard and things

00:25:52.840 --> 00:25:52.850
like voiceovers get heard and things
 

00:25:52.850 --> 00:25:54.210
like voiceovers get heard and things
like that

00:25:54.210 --> 00:25:54.220
like that
 

00:25:54.220 --> 00:25:56.290
like that
none importantly it's very data-driven

00:25:56.290 --> 00:25:56.300
none importantly it's very data-driven
 

00:25:56.300 --> 00:25:58.780
none importantly it's very data-driven
which means that the people that author

00:25:58.780 --> 00:25:58.790
which means that the people that author
 

00:25:58.790 --> 00:26:01.240
which means that the people that author
the audio don't need to do any

00:26:01.240 --> 00:26:01.250
the audio don't need to do any
 

00:26:01.250 --> 00:26:04.810
the audio don't need to do any
programming sprinkle corgi is our entity

00:26:04.810 --> 00:26:04.820
programming sprinkle corgi is our entity
 

00:26:04.820 --> 00:26:06.940
programming sprinkle corgi is our entity
component system now entity component

00:26:06.940 --> 00:26:06.950
component system now entity component
 

00:26:06.950 --> 00:26:08.560
component system now entity component
systems have emerged as a popular

00:26:08.560 --> 00:26:08.570
systems have emerged as a popular
 

00:26:08.570 --> 00:26:12.280
systems have emerged as a popular
programming paradigm in games so they

00:26:12.280 --> 00:26:12.290
programming paradigm in games so they
 

00:26:12.290 --> 00:26:13.780
programming paradigm in games so they
allow you to associate component

00:26:13.780 --> 00:26:13.790
allow you to associate component
 

00:26:13.790 --> 00:26:16.390
allow you to associate component
behaviors with entities in the scene for

00:26:16.390 --> 00:26:16.400
behaviors with entities in the scene for
 

00:26:16.400 --> 00:26:19.150
behaviors with entities in the scene for
example suppose I wanted to I could add

00:26:19.150 --> 00:26:19.160
example suppose I wanted to I could add
 

00:26:19.160 --> 00:26:22.960
example suppose I wanted to I could add
an animation component to a dog entity

00:26:22.960 --> 00:26:22.970
an animation component to a dog entity
 

00:26:22.970 --> 00:26:24.520
an animation component to a dog entity
and this would allow the dog to roll

00:26:24.520 --> 00:26:24.530
and this would allow the dog to roll
 

00:26:24.530 --> 00:26:26.980
and this would allow the dog to roll
over or we can add an audio component to

00:26:26.980 --> 00:26:26.990
over or we can add an audio component to
 

00:26:26.990 --> 00:26:29.290
over or we can add an audio component to
the dog and that would allow the dog to

00:26:29.290 --> 00:26:29.300
the dog and that would allow the dog to
 

00:26:29.300 --> 00:26:34.090
the dog and that would allow the dog to
bark and instead of storing the roll

00:26:34.090 --> 00:26:34.100
bark and instead of storing the roll
 

00:26:34.100 --> 00:26:36.490
bark and instead of storing the roll
over embarking data with the dog entity

00:26:36.490 --> 00:26:36.500
over embarking data with the dog entity
 

00:26:36.500 --> 00:26:38.530
over embarking data with the dog entity
we instead group all the animation data

00:26:38.530 --> 00:26:38.540
we instead group all the animation data
 

00:26:38.540 --> 00:26:41.200
we instead group all the animation data
in one spot and all the audio data in

00:26:41.200 --> 00:26:41.210
in one spot and all the audio data in
 

00:26:41.210 --> 00:26:44.320
in one spot and all the audio data in
another spot and this allows you to have

00:26:44.320 --> 00:26:44.330
another spot and this allows you to have
 

00:26:44.330 --> 00:26:46.390
another spot and this allows you to have
significantly better memory performance

00:26:46.390 --> 00:26:46.400
significantly better memory performance
 

00:26:46.400 --> 00:26:48.760
significantly better memory performance
when you're operating on data in bulk as

00:26:48.760 --> 00:26:48.770
when you're operating on data in bulk as
 

00:26:48.770 --> 00:26:51.310
when you're operating on data in bulk as
you have to in games so note the

00:26:51.310 --> 00:26:51.320
you have to in games so note the
 

00:26:51.320 --> 00:26:53.890
you have to in games so note the
contrast here between object-oriented

00:26:53.890 --> 00:26:53.900
contrast here between object-oriented
 

00:26:53.900 --> 00:26:57.400
contrast here between object-oriented
programming and component oriented

00:26:57.400 --> 00:26:57.410
programming and component oriented
 

00:26:57.410 --> 00:26:59.600
programming and component oriented
programming so

00:26:59.600 --> 00:26:59.610
programming so
 

00:26:59.610 --> 00:27:01.940
programming so
the behaviors and the data are stored

00:27:01.940 --> 00:27:01.950
the behaviors and the data are stored
 

00:27:01.950 --> 00:27:03.799
the behaviors and the data are stored
with the entity in object-oriented

00:27:03.799 --> 00:27:03.809
with the entity in object-oriented
 

00:27:03.809 --> 00:27:06.229
with the entity in object-oriented
programming right so entity component

00:27:06.229 --> 00:27:06.239
programming right so entity component
 

00:27:06.239 --> 00:27:07.639
programming right so entity component
systems there's nothing new if you're

00:27:07.639 --> 00:27:07.649
systems there's nothing new if you're
 

00:27:07.649 --> 00:27:09.049
systems there's nothing new if you're
making a game you probably have your own

00:27:09.049 --> 00:27:09.059
making a game you probably have your own
 

00:27:09.059 --> 00:27:11.720
making a game you probably have your own
so what we've done with Corgi is simply

00:27:11.720 --> 00:27:11.730
so what we've done with Corgi is simply
 

00:27:11.730 --> 00:27:14.330
so what we've done with Corgi is simply
package and document well the one that

00:27:14.330 --> 00:27:14.340
package and document well the one that
 

00:27:14.340 --> 00:27:16.519
package and document well the one that
we wrote and put it up on github for you

00:27:16.519 --> 00:27:16.529
we wrote and put it up on github for you
 

00:27:16.529 --> 00:27:19.489
we wrote and put it up on github for you
to use if you like Corgi by the way

00:27:19.489 --> 00:27:19.499
to use if you like Corgi by the way
 

00:27:19.499 --> 00:27:22.639
to use if you like Corgi by the way
stands for component organized reusable

00:27:22.639 --> 00:27:22.649
stands for component organized reusable
 

00:27:22.649 --> 00:27:25.909
stands for component organized reusable
game interface but mostly we chose the

00:27:25.909 --> 00:27:25.919
game interface but mostly we chose the
 

00:27:25.919 --> 00:27:29.299
game interface but mostly we chose the
name because of this guy he's he's kind

00:27:29.299 --> 00:27:29.309
name because of this guy he's he's kind
 

00:27:29.309 --> 00:27:31.909
name because of this guy he's he's kind
of our unofficial project manager on FPL

00:27:31.909 --> 00:27:31.919
of our unofficial project manager on FPL
 

00:27:31.919 --> 00:27:33.979
of our unofficial project manager on FPL
I mean you can't say no to those eyes

00:27:33.979 --> 00:27:33.989
I mean you can't say no to those eyes
 

00:27:33.989 --> 00:27:38.539
I mean you can't say no to those eyes
right so scene lab is our scene editor

00:27:38.539 --> 00:27:38.549
right so scene lab is our scene editor
 

00:27:38.549 --> 00:27:40.430
right so scene lab is our scene editor
scene lap kind of takes all these

00:27:40.430 --> 00:27:40.440
scene lap kind of takes all these
 

00:27:40.440 --> 00:27:42.379
scene lap kind of takes all these
previous libraries together so it uses

00:27:42.379 --> 00:27:42.389
previous libraries together so it uses
 

00:27:42.389 --> 00:27:45.739
previous libraries together so it uses
Corgi for the object edit edits uses

00:27:45.739 --> 00:27:45.749
Corgi for the object edit edits uses
 

00:27:45.749 --> 00:27:47.539
Corgi for the object edit edits uses
flatbuffers for all of its data of

00:27:47.539 --> 00:27:47.549
flatbuffers for all of its data of
 

00:27:47.549 --> 00:27:51.049
flatbuffers for all of its data of
course and I use this flat UI the cool

00:27:51.049 --> 00:27:51.059
course and I use this flat UI the cool
 

00:27:51.059 --> 00:27:52.970
course and I use this flat UI the cool
thing about scene lab is that it's so

00:27:52.970 --> 00:27:52.980
thing about scene lab is that it's so
 

00:27:52.980 --> 00:27:55.999
thing about scene lab is that it's so
data-driven so configurable that if you

00:27:55.999 --> 00:27:56.009
data-driven so configurable that if you
 

00:27:56.009 --> 00:27:57.379
data-driven so configurable that if you
pass the different kinds of object

00:27:57.379 --> 00:27:57.389
pass the different kinds of object
 

00:27:57.389 --> 00:27:59.269
pass the different kinds of object
definitions you'll be it will

00:27:59.269 --> 00:27:59.279
definitions you'll be it will
 

00:27:59.279 --> 00:28:00.919
definitions you'll be it will
automatically allow you to edit

00:28:00.919 --> 00:28:00.929
automatically allow you to edit
 

00:28:00.929 --> 00:28:02.840
automatically allow you to edit
different things so it's very easy to

00:28:02.840 --> 00:28:02.850
different things so it's very easy to
 

00:28:02.850 --> 00:28:04.789
different things so it's very easy to
kind of swap into a different game and

00:28:04.789 --> 00:28:04.799
kind of swap into a different game and
 

00:28:04.799 --> 00:28:06.889
kind of swap into a different game and
have an editor specifically for that

00:28:06.889 --> 00:28:06.899
have an editor specifically for that
 

00:28:06.899 --> 00:28:07.340
have an editor specifically for that
game

00:28:07.340 --> 00:28:07.350
game
 

00:28:07.350 --> 00:28:09.470
game
our last library is called breadboard

00:28:09.470 --> 00:28:09.480
our last library is called breadboard
 

00:28:09.480 --> 00:28:12.249
our last library is called breadboard
it's an event system that allows you to

00:28:12.249 --> 00:28:12.259
it's an event system that allows you to
 

00:28:12.259 --> 00:28:15.409
it's an event system that allows you to
connect disparate systems using data so

00:28:15.409 --> 00:28:15.419
connect disparate systems using data so
 

00:28:15.419 --> 00:28:17.299
connect disparate systems using data so
every game has different systems like

00:28:17.299 --> 00:28:17.309
every game has different systems like
 

00:28:17.309 --> 00:28:20.989
every game has different systems like
audio AI and the UI and you want to keep

00:28:20.989 --> 00:28:20.999
audio AI and the UI and you want to keep
 

00:28:20.999 --> 00:28:22.369
audio AI and the UI and you want to keep
these systems separate so that they

00:28:22.369 --> 00:28:22.379
these systems separate so that they
 

00:28:22.379 --> 00:28:23.720
these systems separate so that they
don't have to make function calls into

00:28:23.720 --> 00:28:23.730
don't have to make function calls into
 

00:28:23.730 --> 00:28:24.979
don't have to make function calls into
each other otherwise you end up with

00:28:24.979 --> 00:28:24.989
each other otherwise you end up with
 

00:28:24.989 --> 00:28:28.009
each other otherwise you end up with
spaghetti code so breadboard lets you do

00:28:28.009 --> 00:28:28.019
spaghetti code so breadboard lets you do
 

00:28:28.019 --> 00:28:31.639
spaghetti code so breadboard lets you do
this for example you could take a

00:28:31.639 --> 00:28:31.649
this for example you could take a
 

00:28:31.649 --> 00:28:33.169
this for example you could take a
football event from the animation system

00:28:33.169 --> 00:28:33.179
football event from the animation system
 

00:28:33.179 --> 00:28:36.080
football event from the animation system
and route that over to the audio system

00:28:36.080 --> 00:28:36.090
and route that over to the audio system
 

00:28:36.090 --> 00:28:37.549
and route that over to the audio system
which would then play a stepping sound

00:28:37.549 --> 00:28:37.559
which would then play a stepping sound
 

00:28:37.559 --> 00:28:39.590
which would then play a stepping sound
and the two systems they don't need to

00:28:39.590 --> 00:28:39.600
and the two systems they don't need to
 

00:28:39.600 --> 00:28:41.560
and the two systems they don't need to
be connected with function calls

00:28:41.560 --> 00:28:41.570
be connected with function calls
 

00:28:41.570 --> 00:28:44.180
be connected with function calls
breadboard also supports some arbitrary

00:28:44.180 --> 00:28:44.190
breadboard also supports some arbitrary
 

00:28:44.190 --> 00:28:47.029
breadboard also supports some arbitrary
logic nodes so you can route events a

00:28:47.029 --> 00:28:47.039
logic nodes so you can route events a
 

00:28:47.039 --> 00:28:49.759
logic nodes so you can route events a
little bit more cleverly if you like Wow

00:28:49.759 --> 00:28:49.769
little bit more cleverly if you like Wow
 

00:28:49.769 --> 00:28:53.479
little bit more cleverly if you like Wow
look at all those animals so you knew

00:28:53.479 --> 00:28:53.489
look at all those animals so you knew
 

00:28:53.489 --> 00:28:55.159
look at all those animals so you knew
this was coming this is where we take a

00:28:55.159 --> 00:28:55.169
this was coming this is where we take a
 

00:28:55.169 --> 00:28:58.700
this was coming this is where we take a
look at sushi our latest game and in

00:28:58.700 --> 00:28:58.710
look at sushi our latest game and in
 

00:28:58.710 --> 00:29:00.889
look at sushi our latest game and in
sushi you float down a mystic river

00:29:00.889 --> 00:29:00.899
sushi you float down a mystic river
 

00:29:00.899 --> 00:29:02.840
sushi you float down a mystic river
feeding sushi to well-dressed animal

00:29:02.840 --> 00:29:02.850
feeding sushi to well-dressed animal
 

00:29:02.850 --> 00:29:06.830
feeding sushi to well-dressed animal
patrons it's a 3d game it runs in VR at

00:29:06.830 --> 00:29:06.840
patrons it's a 3d game it runs in VR at
 

00:29:06.840 --> 00:29:10.310
patrons it's a 3d game it runs in VR at
60 frames per second so that's pretty

00:29:10.310 --> 00:29:10.320
60 frames per second so that's pretty
 

00:29:10.320 --> 00:29:11.659
60 frames per second so that's pretty
high performance even though it's like

00:29:11.659 --> 00:29:11.669
high performance even though it's like
 

00:29:11.669 --> 00:29:13.040
high performance even though it's like
cue characters on the screen

00:29:13.040 --> 00:29:13.050
cue characters on the screen
 

00:29:13.050 --> 00:29:14.780
cue characters on the screen
the gameplay is very simple this is

00:29:14.780 --> 00:29:14.790
the gameplay is very simple this is
 

00:29:14.790 --> 00:29:17.390
the gameplay is very simple this is
actually technically a high-performance

00:29:17.390 --> 00:29:17.400
actually technically a high-performance
 

00:29:17.400 --> 00:29:19.700
actually technically a high-performance
game and everything the world is

00:29:19.700 --> 00:29:19.710
game and everything the world is
 

00:29:19.710 --> 00:29:20.210
game and everything the world is
animated

00:29:20.210 --> 00:29:20.220
animated
 

00:29:20.220 --> 00:29:24.740
animated
it has a UI audio level editor so even

00:29:24.740 --> 00:29:24.750
it has a UI audio level editor so even
 

00:29:24.750 --> 00:29:26.240
it has a UI audio level editor so even
though it's a very simple game the

00:29:26.240 --> 00:29:26.250
though it's a very simple game the
 

00:29:26.250 --> 00:29:28.130
though it's a very simple game the
technology stack has everything that you

00:29:28.130 --> 00:29:28.140
technology stack has everything that you
 

00:29:28.140 --> 00:29:28.940
technology stack has everything that you
would need to make your own

00:29:28.940 --> 00:29:28.950
would need to make your own
 

00:29:28.950 --> 00:29:32.990
would need to make your own
high-performance VR or 3d game and the

00:29:32.990 --> 00:29:33.000
high-performance VR or 3d game and the
 

00:29:33.000 --> 00:29:34.760
high-performance VR or 3d game and the
technology stack in Zushi is the

00:29:34.760 --> 00:29:34.770
technology stack in Zushi is the
 

00:29:34.770 --> 00:29:42.340
technology stack in Zushi is the
libraries that we just described to you

00:29:42.340 --> 00:29:42.350
 
 

00:29:42.350 --> 00:29:44.499
 
okay so go

00:29:44.499 --> 00:29:44.509
okay so go
 

00:29:44.509 --> 00:30:11.390
okay so go
you can do it there we go

00:30:11.390 --> 00:30:11.400
 
 

00:30:11.400 --> 00:30:13.710
 
okay so all the data in that game is

00:30:13.710 --> 00:30:13.720
okay so all the data in that game is
 

00:30:13.720 --> 00:30:15.750
okay so all the data in that game is
stored in flatbuffers it's edited in

00:30:15.750 --> 00:30:15.760
stored in flatbuffers it's edited in
 

00:30:15.760 --> 00:30:18.420
stored in flatbuffers it's edited in
scene lab and using scene lab we can

00:30:18.420 --> 00:30:18.430
scene lab and using scene lab we can
 

00:30:18.430 --> 00:30:20.520
scene lab and using scene lab we can
also add Corgi components until all the

00:30:20.520 --> 00:30:20.530
also add Corgi components until all the
 

00:30:20.530 --> 00:30:23.400
also add Corgi components until all the
entities and FPL base is used to render

00:30:23.400 --> 00:30:23.410
entities and FPL base is used to render
 

00:30:23.410 --> 00:30:25.320
entities and FPL base is used to render
everything and two for input and

00:30:25.320 --> 00:30:25.330
everything and two for input and
 

00:30:25.330 --> 00:30:28.290
everything and two for input and
resource loading motive animates all the

00:30:28.290 --> 00:30:28.300
resource loading motive animates all the
 

00:30:28.300 --> 00:30:30.330
resource loading motive animates all the
motion in the scene and flexure why

00:30:30.330 --> 00:30:30.340
motion in the scene and flexure why
 

00:30:30.340 --> 00:30:32.730
motion in the scene and flexure why
shows the menus pin-drop plays the music

00:30:32.730 --> 00:30:32.740
shows the menus pin-drop plays the music
 

00:30:32.740 --> 00:30:35.310
shows the menus pin-drop plays the music
and sound effects and finally breadboard

00:30:35.310 --> 00:30:35.320
and sound effects and finally breadboard
 

00:30:35.320 --> 00:30:37.050
and sound effects and finally breadboard
connects all the components together and

00:30:37.050 --> 00:30:37.060
connects all the components together and
 

00:30:37.060 --> 00:30:39.420
connects all the components together and
allows us to define a game flow in data

00:30:39.420 --> 00:30:39.430
allows us to define a game flow in data
 

00:30:39.430 --> 00:30:42.450
allows us to define a game flow in data
like Jason said okay it's worth noting

00:30:42.450 --> 00:30:42.460
like Jason said okay it's worth noting
 

00:30:42.460 --> 00:30:43.770
like Jason said okay it's worth noting
that all the sample games that we showed

00:30:43.770 --> 00:30:43.780
that all the sample games that we showed
 

00:30:43.780 --> 00:30:46.080
that all the sample games that we showed
you today are also open source so you

00:30:46.080 --> 00:30:46.090
you today are also open source so you
 

00:30:46.090 --> 00:30:48.780
you today are also open source so you
can go to github download them and use

00:30:48.780 --> 00:30:48.790
can go to github download them and use
 

00:30:48.790 --> 00:30:51.480
can go to github download them and use
them to prototype your own ideas in fact

00:30:51.480 --> 00:30:51.490
them to prototype your own ideas in fact
 

00:30:51.490 --> 00:30:54.150
them to prototype your own ideas in fact
the social good team here at Google has

00:30:54.150 --> 00:30:54.160
the social good team here at Google has
 

00:30:54.160 --> 00:30:57.000
the social good team here at Google has
done just that this is this is the team

00:30:57.000 --> 00:30:57.010
done just that this is this is the team
 

00:30:57.010 --> 00:30:58.860
done just that this is this is the team
that powers the donations through Google

00:30:58.860 --> 00:30:58.870
that powers the donations through Google
 

00:30:58.870 --> 00:31:01.500
that powers the donations through Google
org and they also drove the newly

00:31:01.500 --> 00:31:01.510
org and they also drove the newly
 

00:31:01.510 --> 00:31:03.360
org and they also drove the newly
launched donations card on YouTube

00:31:03.360 --> 00:31:03.370
launched donations card on YouTube
 

00:31:03.370 --> 00:31:04.560
launched donations card on YouTube
they're doing a lot of good stuff

00:31:04.560 --> 00:31:04.570
they're doing a lot of good stuff
 

00:31:04.570 --> 00:31:07.560
they're doing a lot of good stuff
so what they did with pine hoon is to

00:31:07.560 --> 00:31:07.570
so what they did with pine hoon is to
 

00:31:07.570 --> 00:31:09.150
so what they did with pine hoon is to
create a prototype of their new

00:31:09.150 --> 00:31:09.160
create a prototype of their new
 

00:31:09.160 --> 00:31:12.300
create a prototype of their new
donations API this is an API that lets

00:31:12.300 --> 00:31:12.310
donations API this is an API that lets
 

00:31:12.310 --> 00:31:15.870
donations API this is an API that lets
users make in-app donations and then

00:31:15.870 --> 00:31:15.880
users make in-app donations and then
 

00:31:15.880 --> 00:31:18.480
users make in-app donations and then
it'll automatically process the payments

00:31:18.480 --> 00:31:18.490
it'll automatically process the payments
 

00:31:18.490 --> 00:31:20.910
it'll automatically process the payments
and the billing there's no fees there's

00:31:20.910 --> 00:31:20.920
and the billing there's no fees there's
 

00:31:20.920 --> 00:31:23.690
and the billing there's no fees there's
no spam sent to the users and most

00:31:23.690 --> 00:31:23.700
no spam sent to the users and most
 

00:31:23.700 --> 00:31:25.830
no spam sent to the users and most
importantly it has the ability for you

00:31:25.830 --> 00:31:25.840
importantly it has the ability for you
 

00:31:25.840 --> 00:31:28.380
importantly it has the ability for you
the developer to support any us-based

00:31:28.380 --> 00:31:28.390
the developer to support any us-based
 

00:31:28.390 --> 00:31:31.170
the developer to support any us-based
nonprofits so basically you're

00:31:31.170 --> 00:31:31.180
nonprofits so basically you're
 

00:31:31.180 --> 00:31:33.240
nonprofits so basically you're
encouraging gamers to support real-world

00:31:33.240 --> 00:31:33.250
encouraging gamers to support real-world
 

00:31:33.250 --> 00:31:35.490
encouraging gamers to support real-world
causes from within the game I think it's

00:31:35.490 --> 00:31:35.500
causes from within the game I think it's
 

00:31:35.500 --> 00:31:37.530
causes from within the game I think it's
a pretty exciting API and you should

00:31:37.530 --> 00:31:37.540
a pretty exciting API and you should
 

00:31:37.540 --> 00:31:40.100
a pretty exciting API and you should
check out their work at this link here

00:31:40.100 --> 00:31:40.110
check out their work at this link here
 

00:31:40.110 --> 00:31:44.640
check out their work at this link here
and speaking of links alright so if you

00:31:44.640 --> 00:31:44.650
and speaking of links alright so if you
 

00:31:44.650 --> 00:31:45.840
and speaking of links alright so if you
want to play around with any of the

00:31:45.840 --> 00:31:45.850
want to play around with any of the
 

00:31:45.850 --> 00:31:47.250
want to play around with any of the
technologies that you've seen so far

00:31:47.250 --> 00:31:47.260
technologies that you've seen so far
 

00:31:47.260 --> 00:31:50.310
technologies that you've seen so far
this is our developer site yep

00:31:50.310 --> 00:31:50.320
this is our developer site yep
 

00:31:50.320 --> 00:31:52.350
this is our developer site yep
all these links and links to all the

00:31:52.350 --> 00:31:52.360
all these links and links to all the
 

00:31:52.360 --> 00:31:54.150
all these links and links to all the
libraries are in the space for this talk

00:31:54.150 --> 00:31:54.160
libraries are in the space for this talk
 

00:31:54.160 --> 00:31:57.210
libraries are in the space for this talk
as well so thanks for listening we hope

00:31:57.210 --> 00:31:57.220
as well so thanks for listening we hope
 

00:31:57.220 --> 00:31:58.370
as well so thanks for listening we hope
you're excited to create

00:31:58.370 --> 00:31:58.380
you're excited to create
 

00:31:58.380 --> 00:32:00.900
you're excited to create
high-performance games and we hope that

00:32:00.900 --> 00:32:00.910
high-performance games and we hope that
 

00:32:00.910 --> 00:32:04.100
high-performance games and we hope that
our technology can help you with that so

00:32:04.100 --> 00:32:04.110
our technology can help you with that so
 

00:32:04.110 --> 00:32:07.350
our technology can help you with that so
we're gonna have a Q&amp;A now

00:32:07.350 --> 00:32:07.360
we're gonna have a Q&amp;A now
 

00:32:07.360 --> 00:32:09.600
we're gonna have a Q&amp;A now
and if you want to talk to me Jason

00:32:09.600 --> 00:32:09.610
and if you want to talk to me Jason
 

00:32:09.610 --> 00:32:11.670
and if you want to talk to me Jason
afterwards come come find us we're here

00:32:11.670 --> 00:32:11.680
afterwards come come find us we're here
 

00:32:11.680 --> 00:32:13.830
afterwards come come find us we're here
to help

