WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.520
SPEAKER: Android
Studio 3.1 is now

00:00:02.520 --> 00:00:05.580
available for download or
update in the Stable channel,

00:00:05.580 --> 00:00:09.420
along with version 3.1 of the
Android plugin for Gradle.

00:00:09.420 --> 00:00:12.660
With it, we've switched to
using our brand new dexer, D8,

00:00:12.660 --> 00:00:14.280
for all your builds.

00:00:14.280 --> 00:00:18.720
It produces, on average, 10% to
15% smaller and more optimized

00:00:18.720 --> 00:00:21.360
dex bytecode without
requiring any changes

00:00:21.360 --> 00:00:23.140
in application code.

00:00:23.140 --> 00:00:25.860
D8 also offers faster
dexing, now works

00:00:25.860 --> 00:00:27.990
for incremental
builds with the Sugar,

00:00:27.990 --> 00:00:30.480
and even provides a better
debugging experience

00:00:30.480 --> 00:00:32.549
when stepping through code.

00:00:32.549 --> 00:00:34.680
One thing to remember--
if you had previously

00:00:34.680 --> 00:00:37.890
disabled the experimental
version of D8 in your project

00:00:37.890 --> 00:00:41.030
by setting the Android
enabled D8 flag to false,

00:00:41.030 --> 00:00:44.280
it's time to remove this
from Gradle properties.

00:00:44.280 --> 00:00:46.560
The sugaring of Java
8 language features

00:00:46.560 --> 00:00:49.230
is still done in a separate
step in this release.

00:00:49.230 --> 00:00:52.650
However, you can try the
experimental integrated desugar

00:00:52.650 --> 00:00:57.000
by setting the enable D8
desugaring flag to true.

00:00:57.000 --> 00:01:01.140
The core IDE is now updated with
improvements from IntelliJ Idea

00:01:01.140 --> 00:01:05.459
up to the 2017.3 release, which
includes better control flow

00:01:05.459 --> 00:01:08.990
analysis for collections and
strings, improved nullability

00:01:08.990 --> 00:01:12.520
inference, new quick
fixes, and more.

00:01:12.520 --> 00:01:15.270
We also simplified the
build output window.

00:01:15.270 --> 00:01:17.100
When you trigger
a sync or build,

00:01:17.100 --> 00:01:20.040
we now show a task tree
with execution times

00:01:20.040 --> 00:01:23.750
and toggle an error window
in case of a failure.

00:01:23.750 --> 00:01:27.480
You can switch between the tree
view and a textural log here.

00:01:27.480 --> 00:01:29.430
On the Kotlin front,
Android Studio

00:01:29.430 --> 00:01:32.190
3.1 now bundles
the latest plugin

00:01:32.190 --> 00:01:35.250
and supports running lint checks
for Kotlin code on the command

00:01:35.250 --> 00:01:36.330
line.

00:01:36.330 --> 00:01:38.160
We plan to continue
our work to make

00:01:38.160 --> 00:01:40.830
sure we're providing first
class support for Kotlin

00:01:40.830 --> 00:01:43.200
in our developer tools.

00:01:43.200 --> 00:01:45.750
We received a lot of feature
requests for the Android

00:01:45.750 --> 00:01:49.500
profilers that were released
in the last version of Studio.

00:01:49.500 --> 00:01:51.930
I'm happy to say that,
based on your feedback,

00:01:51.930 --> 00:01:55.890
we've added native CPU profiling
for C++ code and the network

00:01:55.890 --> 00:01:58.980
profiler can now show request
data and has a threads

00:01:58.980 --> 00:02:00.330
timeline.

00:02:00.330 --> 00:02:03.030
And to make it easier to find
the information you need,

00:02:03.030 --> 00:02:06.150
the CPU and memory profilers
now offer filtering

00:02:06.150 --> 00:02:08.520
by class or method name.

00:02:08.520 --> 00:02:10.500
If you're using the
layout inspector,

00:02:10.500 --> 00:02:13.500
it's now possible to use
reference image overlays

00:02:13.500 --> 00:02:16.740
and isolate subtrees
from the view hierarchy.

00:02:16.740 --> 00:02:20.310
The layer editor also got some
UX polish with new keyboard

00:02:20.310 --> 00:02:23.160
shortcuts, a way to quickly
launch documentation,

00:02:23.160 --> 00:02:27.300
and a new command that lets you
convert a view to another type.

00:02:27.300 --> 00:02:29.670
And just like we've developed
Android Studios Layout

00:02:29.670 --> 00:02:32.760
Editor in step with the
constraint layout library,

00:02:32.760 --> 00:02:35.400
in this release, we've
taken additional care

00:02:35.400 --> 00:02:37.620
to make the Code
Editor work great when

00:02:37.620 --> 00:02:40.080
you're using Room databases.

00:02:40.080 --> 00:02:43.440
You will now get SQL code
completion and common actions

00:02:43.440 --> 00:02:46.050
such as renaming
and find usages work

00:02:46.050 --> 00:02:50.400
across SQL and Java
or Kotlin code.

00:02:50.400 --> 00:02:52.440
The Android Emulator
received a lot

00:02:52.440 --> 00:02:54.630
of updates since the
last Studio release,

00:02:54.630 --> 00:02:57.370
focusing on speed and stability.

00:02:57.370 --> 00:02:58.950
We offer the latest
system images

00:02:58.950 --> 00:03:03.840
for API levels 26 and 27, which
passed CDS tests and include

00:03:03.840 --> 00:03:05.850
the full Play Store.

00:03:05.850 --> 00:03:07.860
On the features
side, the largest

00:03:07.860 --> 00:03:10.230
and my favorite
improvement is Quick Boot,

00:03:10.230 --> 00:03:12.270
which allows you to
resume a saved emulator

00:03:12.270 --> 00:03:14.400
session in under six seconds.

00:03:14.400 --> 00:03:15.840
It's completely automatic.

00:03:15.840 --> 00:03:18.720
After the first boot, whenever
you close the emulator,

00:03:18.720 --> 00:03:22.770
a snapshot is saved and used
for subsequent launches.

00:03:22.770 --> 00:03:24.910
But in case you
want more control,

00:03:24.910 --> 00:03:27.720
you can change snapshotting
behavior in the settings

00:03:27.720 --> 00:03:31.800
and even initiate a state
save at any given moment.

00:03:31.800 --> 00:03:35.350
Please update to Android
Studio 3.1 and give it a spin.

00:03:35.350 --> 00:03:37.080
And if you're
feeling adventurous,

00:03:37.080 --> 00:03:40.170
I'd also like to point out
that you can try our early 3.2

00:03:40.170 --> 00:03:41.730
Canaries.

00:03:41.730 --> 00:03:44.720
As always, we'd love to get your
feedback on the bug tracker.

00:03:44.720 --> 00:03:45.944
Thanks.

00:03:45.944 --> 00:03:51.590
[MUSIC PLAYING]

