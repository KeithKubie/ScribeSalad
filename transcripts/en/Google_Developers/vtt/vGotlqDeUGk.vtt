WEBVTT
Kind: captions
Language: en

00:00:00.378 --> 00:00:02.169
AMIN: Hi, this is Amin
from the Glass team,

00:00:02.169 --> 00:00:03.794
and I'm going to show
you how to create

00:00:03.794 --> 00:00:05.490
voice driven GDK Glassware.

00:00:05.490 --> 00:00:08.784
I'll show you the available APIs
and how to use each of them.

00:00:08.784 --> 00:00:10.700
First, let's demonstrate
how to get directions

00:00:10.700 --> 00:00:13.172
on Glass using Google Maps.

00:00:13.172 --> 00:00:17.016
OK Glass, get directions
to San Francisco.

00:00:17.016 --> 00:00:20.770
OK Glass, show route overview.

00:00:20.770 --> 00:00:23.290
This Glassware uses
two voice APIs.

00:00:23.290 --> 00:00:25.080
First, the voice
trigger API links

00:00:25.080 --> 00:00:27.660
the get directions to voice
command to the Google Maps

00:00:27.660 --> 00:00:29.420
Navigation activity.

00:00:29.420 --> 00:00:31.850
Second, the contextual
voice menu API

00:00:31.850 --> 00:00:34.950
defines a custom OK Glass
menu within this activity.

00:00:34.950 --> 00:00:37.910
Let's dive deeper into
both of these APIs.

00:00:37.910 --> 00:00:40.010
To launch your Glassware
from the voice main menu,

00:00:40.010 --> 00:00:41.385
the first thing
you need to do is

00:00:41.385 --> 00:00:43.410
to find a voice
trigger XML file.

00:00:43.410 --> 00:00:44.910
This trigger specifies
which command

00:00:44.910 --> 00:00:46.740
launches your Glassware,
what constraints

00:00:46.740 --> 00:00:48.500
your activity
requires, as well as

00:00:48.500 --> 00:00:51.750
whether your Glassware needs
open ended voice input.

00:00:51.750 --> 00:00:54.710
Here, navigation trigger dot
XML uses the get directions

00:00:54.710 --> 00:00:56.870
to command, requires
a network connection,

00:00:56.870 --> 00:00:59.960
and needs open ended voice
input when launching.

00:00:59.960 --> 00:01:02.010
Next, you'll need to refer
to this voice trigger

00:01:02.010 --> 00:01:05.162
in the activity definition of
your Android manifest file.

00:01:05.162 --> 00:01:07.620
Here is the Android manifest
for the Google Maps Navigation

00:01:07.620 --> 00:01:08.630
Glassware.

00:01:08.630 --> 00:01:10.810
You can see that the
navigation activity references

00:01:10.810 --> 00:01:12.434
the navigation trigger
research we just

00:01:12.434 --> 00:01:14.990
defined in its metadata section.

00:01:14.990 --> 00:01:16.080
And that's it.

00:01:16.080 --> 00:01:17.540
The next time you
install your APK,

00:01:17.540 --> 00:01:19.998
you'll be able to launch your
Glassware from both the voice

00:01:19.998 --> 00:01:22.900
and touch main menus
from the home screen.

00:01:22.900 --> 00:01:25.510
Now I'll move on to
contextual voice menus.

00:01:25.510 --> 00:01:28.140
Adding this menu share activity
straightforward, especially

00:01:28.140 --> 00:01:30.550
if you're familiar with
how Android menus work.

00:01:30.550 --> 00:01:33.500
The in-app OK Glass menu
is a window feature.

00:01:33.500 --> 00:01:35.240
When you request
this window feature,

00:01:35.240 --> 00:01:38.360
the Glass platform takes care
of enabling voice recognition

00:01:38.360 --> 00:01:41.770
and showing the OK Glass
guard phrase on the screen.

00:01:41.770 --> 00:01:43.270
When voice commands
are triggered,

00:01:43.270 --> 00:01:46.110
the platform then calls
menu-specific methods

00:01:46.110 --> 00:01:47.700
on your activity.

00:01:47.700 --> 00:01:49.160
Just like standard
Android menus,

00:01:49.160 --> 00:01:51.970
voice menus can also
be inflated from XML.

00:01:51.970 --> 00:01:54.980
Here, navigation triggered
activity inflates the voice

00:01:54.980 --> 00:01:58.470
menu XML in onCreatePanelMenu
and then handles voice commands

00:01:58.470 --> 00:02:00.720
in onMenuItemSelected.

00:02:00.720 --> 00:02:03.640
In addition to these
two Glass specific APIs,

00:02:03.640 --> 00:02:06.330
GDK Glassware can also
use the RecognizerIntent

00:02:06.330 --> 00:02:09.530
and SpeechRecognizer
APIs from the Android SDK

00:02:09.530 --> 00:02:11.250
to collect open
ended voice input

00:02:11.250 --> 00:02:13.300
from the user at any time.

00:02:13.300 --> 00:02:16.160
With RecognizerIntent, you can
launch an activity in the Glass

00:02:16.160 --> 00:02:19.170
platform, and that prompts
the user for open ended input.

00:02:19.170 --> 00:02:21.400
This activity will look and
feel just like other open

00:02:21.400 --> 00:02:23.720
ended UIs you've seen on Glass.

00:02:23.720 --> 00:02:26.280
Here, main activity
launches a RecognizerIntent

00:02:26.280 --> 00:02:28.170
and then processes
the recognized text

00:02:28.170 --> 00:02:30.650
in onActivityResult.

00:02:30.650 --> 00:02:33.190
If you want even more
control over voice input,

00:02:33.190 --> 00:02:35.220
you can work directly
with the voice recognition

00:02:35.220 --> 00:02:38.260
service via the
SpeechRecognizer API.

00:02:38.260 --> 00:02:40.580
Your Glassware can define
a recognition listener

00:02:40.580 --> 00:02:42.840
that will receive transcription
results in real time

00:02:42.840 --> 00:02:44.570
while the user is speaking.

00:02:44.570 --> 00:02:47.060
Here, main activity
creates a SpeechRecognizer

00:02:47.060 --> 00:02:48.570
and implements some
of the callback

00:02:48.570 --> 00:02:50.900
methods of RecognitionListener.

00:02:50.900 --> 00:02:54.010
With these Android APIs allowing
fine grained control over voice

00:02:54.010 --> 00:02:56.600
input along with the
Glass specific invocation

00:02:56.600 --> 00:02:59.450
and contextual APIs, you can
create a compelling voice

00:02:59.450 --> 00:03:02.670
driven experience to
power your GDK Glassware.

00:03:02.670 --> 00:03:04.929
To find out more, make
sure to visit our website

00:03:04.929 --> 00:03:06.720
and check out the Google
Developers YouTube

00:03:06.720 --> 00:03:08.810
channel for more Glass videos.

00:03:08.810 --> 00:03:10.675
Thank you for watching.

