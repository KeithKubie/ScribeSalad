WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
These are going to be the solutions for the Unit 2 homework.

00:00:03.000 --> 00:00:05.000
Remember, we had 2 parts to this.

00:00:05.000 --> 00:00:10.000
We had the ROT13 tool, and then we had the sign up page

00:00:10.000 --> 00:00:13.000
that tested for errors and that sort of thing.

00:00:13.000 --> 00:00:17.000
I'll show you quickly my versions working,

00:00:17.000 --> 00:00:20.000
and then I'll show you the code, so let's start with the ROT13.

00:00:20.000 --> 00:00:24.000
Okay, here's my ROT13 running on my local machine here.

00:00:24.000 --> 00:00:28.000
I could type in some text, and if I submit,

00:00:28.000 --> 00:00:31.000
it gets ROT13'd inside the text box,

00:00:31.000 --> 00:00:35.000
and if I submit again, it gets changed back to the original text,

00:00:35.000 --> 00:00:37.000
and that's how you know it's working.

00:00:37.000 --> 00:00:39.000
It escapes properly.

00:00:39.000 --> 00:00:42.000
We can see that by typing in our closed text area there,

00:00:42.000 --> 00:00:44.000
and it's preserving everything.

00:00:44.000 --> 00:00:48.000
All right, so let's take a peek at the code.

00:00:48.000 --> 00:00:53.000
So, I'm in an appengine.py file.

00:00:53.000 --> 00:00:56.000
This is the base ROT13 handler that I wrote.

00:00:56.000 --> 00:00:59.000
It inherits from this base handler class, the ROT13 class does.

00:00:59.000 --> 00:01:01.000
That added some convenience functions.

00:01:01.000 --> 00:01:05.000
First, I have a write function, and this is short hand,

00:01:05.000 --> 00:01:08.000
so I can say self.write instead of self.response.out.write.

00:01:08.000 --> 00:01:10.000
I'll just save some typing.

00:01:10.000 --> 00:01:12.000
And then I started using something called templates, and I'm going to spend

00:01:12.000 --> 00:01:15.000
a little bit more time on templates in Unit 3.

00:01:15.000 --> 00:01:20.000
It saves me the effort of having to type in all of the string substitutions

00:01:20.000 --> 00:01:23.000
that you probably did for this homework if you didn't already

00:01:23.000 --> 00:01:25.000
get tired of that and figure out templates.

00:01:25.000 --> 00:01:30.000
My base page--well, let's look at the URL handler first.

00:01:30.000 --> 00:01:35.000
We've got /unit2/rot13 maps to the Rot13 class,

00:01:35.000 --> 00:01:39.000
and so we come up here to our Rot13 class, and it's got 2 functions.

00:01:39.000 --> 00:01:42.000
It's got a get function, and all this does is it renders

00:01:42.000 --> 00:01:45.000
this file called rot13-form.html.

00:01:45.000 --> 00:01:50.000
Now, your version, you may have printed a whole string.

00:01:50.000 --> 00:01:53.000
This accomplishes that same thing, and I'll go ahead and show you that file.

00:01:53.000 --> 00:01:55.000
It's right here.

00:01:55.000 --> 00:01:57.000
We want to get in the habit going forward of starting to separate these things,

00:01:57.000 --> 00:02:01.000
and I apologize for putting you through that heartache of

00:02:01.000 --> 00:02:04.000
writing out long strings first, but you'll appreciate

00:02:04.000 --> 00:02:06.000
the niceness of this once you've done it the hard way.

00:02:06.000 --> 00:02:08.000
This just returns some HTML.

00:02:08.000 --> 00:02:10.000
It's got our title.

00:02:10.000 --> 00:02:13.000
It's got an h2, which makes some big text at the top of the page.

00:02:13.000 --> 00:02:16.000
Here's our form. Its method is post.

00:02:16.000 --> 00:02:18.000
And it's got a text area.

00:02:18.000 --> 00:02:21.000
The text area has a name of text.

00:02:21.000 --> 00:02:24.000
I added a little styling here to make it a little bigger.

00:02:24.000 --> 00:02:27.000
This is just some basic CSS.

00:02:27.000 --> 00:02:29.000
You're free to copy this from my demo when I put this source stuff online.

00:02:29.000 --> 00:02:32.000
This syntax here, again, we'll talk about this more in the next lesson,

00:02:32.000 --> 00:02:34.000
but instead of doing the string substitution,

00:02:34.000 --> 00:02:38.000
this substitutes the variable text passed into the template,

00:02:38.000 --> 00:02:42.000
and it automatically escapes it for me so I don't have to deal with that,

00:02:42.000 --> 00:02:45.000
and this closes the text area, and then there's a submit button.

00:02:45.000 --> 00:02:47.000
That's pretty simple.

00:02:47.000 --> 00:02:49.000
If I were to turn off the auto escaping ability,

00:02:49.000 --> 00:02:54.000
which is set by this parameter here, let me show you the behavior of that.

00:02:54.000 --> 00:02:56.000
Okay, so here we've got some text in here.

00:02:56.000 --> 00:02:58.000
Remember, I disabled the texting--I'm sorry.

00:02:58.000 --> 00:03:03.000
I disabled the escaping, so let's see what happens when we submit this.

00:03:03.000 --> 00:03:08.000
It works the first time, but the second time the text jumps outside the box.

00:03:08.000 --> 00:03:10.000
Why did that happen?

00:03:10.000 --> 00:03:14.000
Well, when we turn that ROT13 text area back into a closing text area,

00:03:14.000 --> 00:03:16.000
it actually closed our text area in the HTML

00:03:16.000 --> 00:03:18.000
and then put this text outside it.

00:03:18.000 --> 00:03:22.000
If I were to view the source of this file, which you can do in Chrome easily,

00:03:22.000 --> 00:03:24.000
we can see what happened.

00:03:24.000 --> 00:03:28.000
You can see my template, and then you can see my text area gets closed

00:03:28.000 --> 00:03:32.000
by the unescaped version of that text

00:03:32.000 --> 00:03:35.000
and then "escapes properly" gets put outside the text area.

00:03:35.000 --> 00:03:37.000
And then here is the closing text area for my template,

00:03:37.000 --> 00:03:40.000
so we want to make sure if we go back to our editor here

00:03:40.000 --> 00:03:45.000
and I turn on escaping again--this is something you're probably doing by hand,

00:03:45.000 --> 00:03:48.000
which is how we learned to do it initially--and if I were to go to Chrome

00:03:48.000 --> 00:03:53.000
and then reload this page--reload, that's going to confirm the form submission--

00:03:53.000 --> 00:03:57.000
we can see that my text area actually got escaped.

00:03:57.000 --> 00:04:02.000
And so this is what the template has, and this is how it renders.

00:04:02.000 --> 00:04:04.000
Now, what's interesting to note is that even though our HTML

00:04:04.000 --> 00:04:07.000
has the escaped version of less than and greater than,

00:04:07.000 --> 00:04:10.000
it renders as less than and greater than, and when we submit the form,

00:04:10.000 --> 00:04:12.000
it's as less than and greater than.

00:04:12.000 --> 00:04:15.000
It's not as the escaped version, so hopefully you had a chance to

00:04:15.000 --> 00:04:17.000
kind of experiment that and see for yourself,

00:04:17.000 --> 00:04:20.000
but that's how that works.

