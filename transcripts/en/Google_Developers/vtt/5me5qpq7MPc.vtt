WEBVTT
Kind: captions
Language: en

00:00:05.125 --> 00:00:07.250
LAURENCE MORONEY: Welcome
to Coffee with a Googler.

00:00:07.250 --> 00:00:09.800
Today I'm going to be chatting
with Kelsey Hightower, who's

00:00:09.800 --> 00:00:12.380
a developer advocate
on our cloud platform.

00:00:12.380 --> 00:00:14.960
Now Kelsey gets to work
with cloud, and Kubernetes,

00:00:14.960 --> 00:00:17.240
and containers, and all
this kind of cool stuff.

00:00:17.240 --> 00:00:18.590
So Kelsey, tell us all about it.

00:00:18.590 --> 00:00:19.591
What is it that you do?

00:00:19.591 --> 00:00:21.590
KELSEY HIGHTOWER: Yes,
so my role here at Google

00:00:21.590 --> 00:00:23.390
is a staff developer advocate.

00:00:23.390 --> 00:00:26.810
And I focus on things
like containers, docker,

00:00:26.810 --> 00:00:30.090
micro services, and 12 factor,
all backed by Kubernetes.

00:00:30.090 --> 00:00:32.630
So Kubernetes is kind of
the anchor point where

00:00:32.630 --> 00:00:34.580
we help developers
understand how

00:00:34.580 --> 00:00:36.980
to adapt some of these patterns
to run their applications

00:00:36.980 --> 00:00:38.090
in the cloud.

00:00:38.090 --> 00:00:39.590
LAURENCE MORONEY:
Now say I've been

00:00:39.590 --> 00:00:42.170
out of software development
for the past couple of years,

00:00:42.170 --> 00:00:44.090
and I haven't heard
of containers,

00:00:44.090 --> 00:00:45.920
or any of this kind of stuff.

00:00:45.920 --> 00:00:47.089
What exactly is a container?

00:00:47.089 --> 00:00:48.630
KELSEY HIGHTOWER:
Yes, I think people

00:00:48.630 --> 00:00:51.150
that have been out of
technology for a long time

00:00:51.150 --> 00:00:53.990
and they see a mobile device
where you can push a button

00:00:53.990 --> 00:00:56.090
and your application
shows up, I think

00:00:56.090 --> 00:00:59.140
this is what's happening on the
server side for applications.

00:00:59.140 --> 00:01:01.760
You know, no matter what
languages you're writing in,

00:01:01.760 --> 00:01:04.090
you can take that
language, that application,

00:01:04.090 --> 00:01:06.560
packaged it into this
container, and run it

00:01:06.560 --> 00:01:11.150
on any cloud provider or your
laptop in very similar ways.

00:01:11.150 --> 00:01:13.400
So I think the game's
changed dramatically

00:01:13.400 --> 00:01:16.370
for how people build
and ship applications,

00:01:16.370 --> 00:01:18.412
on the cloud and distributed
systems, in general.

00:01:18.412 --> 00:01:19.869
LAURENCE MORONEY:
Now, that's cool,

00:01:19.869 --> 00:01:22.490
but where do you see this going,
say, in the next year or two?

00:01:22.490 --> 00:01:24.198
KELSEY HIGHTOWER: With
cloud, the promise

00:01:24.198 --> 00:01:27.090
was that you would be able to
run your applications anywhere.

00:01:27.090 --> 00:01:29.210
You would just
burst out and scale.

00:01:29.210 --> 00:01:30.800
So I think what
Kubernetes brings

00:01:30.800 --> 00:01:33.590
to the table, and
containers underlying that,

00:01:33.590 --> 00:01:35.970
is the ability for you to
actually do that anywhere.

00:01:35.970 --> 00:01:38.480
You can pick the cloud
platform of your choice,

00:01:38.480 --> 00:01:40.910
on your local laptop, in
your local environment.

00:01:40.910 --> 00:01:43.700
So we're starting to get to a
real application portability.

00:01:43.700 --> 00:01:45.260
You write your application.

00:01:45.260 --> 00:01:47.960
And you can choose your target,
no matter where you live,

00:01:47.960 --> 00:01:50.000
what region, what
cloud provider.

00:01:50.000 --> 00:01:52.580
And Kubernetes is doing this
all out in the open, open source

00:01:52.580 --> 00:01:54.830
project, with tons of
people in our community

00:01:54.830 --> 00:01:56.810
making that possible
wherever you want to.

00:01:56.810 --> 00:01:58.393
LAURENCE MORONEY:
Now Kubernetes, this

00:01:58.393 --> 00:02:00.380
is pretty popular on
open source, right?

00:02:00.380 --> 00:02:02.505
KELSEY HIGHTOWER: Yes, so
one of the amazing things

00:02:02.505 --> 00:02:04.730
about Kubernetes, it's an
extremely popular project

00:02:04.730 --> 00:02:07.040
mainly because it's
open source, number one,

00:02:07.040 --> 00:02:09.680
but it also bakes in a lot
of the learnings from Google

00:02:09.680 --> 00:02:12.390
and some of our other partners,
like CoreOS and Red Hat.

00:02:12.390 --> 00:02:13.640
And they've all come together.

00:02:13.640 --> 00:02:16.730
And we collaborated on this
very popular project on GitHub.

00:02:16.730 --> 00:02:19.010
So Kubernetes has
become this anchor point

00:02:19.010 --> 00:02:23.070
for distributed systems and
container management, at scale.

00:02:23.070 --> 00:02:25.130
LAURENCE MORONEY: So
you're seeing this openness

00:02:25.130 --> 00:02:27.170
of container standards
as being something

00:02:27.170 --> 00:02:29.877
that's super important
in the enterprise, right?

00:02:29.877 --> 00:02:32.210
KELSEY HIGHTOWER: So I think
the enterprise, in general,

00:02:32.210 --> 00:02:35.155
is really fixed on
having an open platform.

00:02:35.155 --> 00:02:36.530
Because let's face
it, they don't

00:02:36.530 --> 00:02:37.880
want to get locked in again.

00:02:37.880 --> 00:02:38.420
Right?

00:02:38.420 --> 00:02:40.295
Once you get locked into
a particular vendor,

00:02:40.295 --> 00:02:41.820
you're pretty much stuck there.

00:02:41.820 --> 00:02:44.570
So the open source movement,
maybe started years ago,

00:02:44.570 --> 00:02:46.220
has offered a way
for their enterprise

00:02:46.220 --> 00:02:48.500
to not only select a
partner in technology,

00:02:48.500 --> 00:02:50.120
but also to participate.

00:02:50.120 --> 00:02:51.830
So Kubernetes gives
the enterprise

00:02:51.830 --> 00:02:54.140
the ability to participate
and shape the future

00:02:54.140 --> 00:02:55.319
that they want to see.

00:02:55.319 --> 00:02:57.110
And we see this with
very popular companies

00:02:57.110 --> 00:02:59.027
like eBay, AT&amp;T--

00:02:59.027 --> 00:03:00.860
all of these companies
are using Kubernetes,

00:03:00.860 --> 00:03:02.318
and also contributing
to Kubernetes

00:03:02.318 --> 00:03:04.370
in a way that allows
their enterprise

00:03:04.370 --> 00:03:07.382
to adopt their own
workloads into the platform.

00:03:07.382 --> 00:03:08.840
LAURENCE MORONEY:
Yeah, I mean I've

00:03:08.840 --> 00:03:10.310
built applications in the past.

00:03:10.310 --> 00:03:12.200
And I know that
dependency management

00:03:12.200 --> 00:03:13.740
can be an absolute nightmare.

00:03:13.740 --> 00:03:15.560
So containers are
something that you

00:03:15.560 --> 00:03:17.930
think could really, really
help me with that, right?

00:03:17.930 --> 00:03:19.596
KELSEY HIGHTOWER:
Yes, so that's a goal.

00:03:19.596 --> 00:03:22.250
So containers attempt to push
the dependency management

00:03:22.250 --> 00:03:23.470
to the developer.

00:03:23.470 --> 00:03:24.470
You're building the app.

00:03:24.470 --> 00:03:26.370
You know what your
dependencies are.

00:03:26.370 --> 00:03:28.610
So given a container
platform, you

00:03:28.610 --> 00:03:31.580
have the opportunity to package
your application from end

00:03:31.580 --> 00:03:34.520
to end, and just turn
over the box to the team

00:03:34.520 --> 00:03:36.230
to run it on the platform.

00:03:36.230 --> 00:03:38.479
LAURENCE MORONEY: Now, I
understand that this can also

00:03:38.479 --> 00:03:40.730
go beyond enterprise, and
games such as Pokemon Go

00:03:40.730 --> 00:03:41.690
have been using this.

00:03:41.690 --> 00:03:44.201
Do you have any other examples
of how people have used it?

00:03:44.201 --> 00:03:45.950
KELSEY HIGHTOWER: Also,
I think Pokemon Go

00:03:45.950 --> 00:03:48.380
is a good example of using
something like Kubernetes.

00:03:48.380 --> 00:03:48.880
Right?

00:03:48.880 --> 00:03:52.460
The goal is to make a game that
people can play and not manage

00:03:52.460 --> 00:03:53.570
infrastructure.

00:03:53.570 --> 00:03:57.200
So for a company, in this
case, for a Pokemon Go,

00:03:57.200 --> 00:03:59.840
you throw your game
back into a container,

00:03:59.840 --> 00:04:01.730
and you allow Google
Cloud Platform just

00:04:01.730 --> 00:04:05.456
to scale it across as many
machines as your users demand.

00:04:05.456 --> 00:04:07.580
So this is like the perfect
use case where you just

00:04:07.580 --> 00:04:10.340
want to write an application,
get it in front of people,

00:04:10.340 --> 00:04:13.070
and let the platform do the
heavy lifting of scaling

00:04:13.070 --> 00:04:14.324
and responding to users.

00:04:14.324 --> 00:04:16.240
LAURENCE MORONEY: This
all sounds really good.

00:04:16.240 --> 00:04:18.560
And if I'm a developer,
you've just really inspired me

00:04:18.560 --> 00:04:20.279
to get started with
this kind of stuff.

00:04:20.279 --> 00:04:23.619
So where should I go, and
what should I do to get going?

00:04:23.619 --> 00:04:25.410
KELSEY HIGHTOWER: You
have tons of options.

00:04:25.410 --> 00:04:27.590
One option is to
grab your laptop.

00:04:27.590 --> 00:04:29.450
All that extra memory,
all that extra CPU,

00:04:29.450 --> 00:04:31.310
you can download a
project called MINICUBE.

00:04:31.310 --> 00:04:34.310
It's an open source product
that gives you a single node

00:04:34.310 --> 00:04:35.602
Kubernetes cluster.

00:04:35.602 --> 00:04:37.310
And that will give
you all the primitives

00:04:37.310 --> 00:04:40.642
you need to exercise Kubernetes,
deploy your application.

00:04:40.642 --> 00:04:42.350
And the nice thing
about that investment,

00:04:42.350 --> 00:04:45.140
you can take all of those
configs, your applications that

00:04:45.140 --> 00:04:48.330
are packaged and containers,
and push them up to GKE,

00:04:48.330 --> 00:04:50.750
our hosted Kubernetes
environment

00:04:50.750 --> 00:04:52.202
on Google Cloud Platform.

00:04:52.202 --> 00:04:53.660
LAURENCE MORONEY:
So Kelsey, do you

00:04:53.660 --> 00:04:55.340
have any advice
for developers who

00:04:55.340 --> 00:04:57.100
are interested in
Kubernetes and who

00:04:57.100 --> 00:04:59.225
are interested in cloud
and all that kind of stuff?

00:04:59.225 --> 00:05:00.891
KELSEY HIGHTOWER: I
think the best thing

00:05:00.891 --> 00:05:02.880
to do is go visit
Google Cloud Platform

00:05:02.880 --> 00:05:04.570
and click the GKE button.

00:05:04.570 --> 00:05:06.390
And what it will do
is, in a single button,

00:05:06.390 --> 00:05:08.960
you can get a fully
working Kubernetes cluster,

00:05:08.960 --> 00:05:11.167
like the same one that
Pokemon Go was using.

00:05:11.167 --> 00:05:12.750
And then you can
ramp up really quick.

00:05:12.750 --> 00:05:14.810
So you can start
out with three nodes

00:05:14.810 --> 00:05:17.580
and scale up to thousands
of nodes as the time comes.

00:05:17.580 --> 00:05:19.431
LAURENCE MORONEY: What
does GKE stand for?

00:05:19.431 --> 00:05:21.180
KELSEY HIGHTOWER:
Google Container Engine.

00:05:21.180 --> 00:05:23.490
We wanted GCE for
Google Container Engine,

00:05:23.490 --> 00:05:25.690
but that was already taken
by Google Compute Engine.

00:05:25.690 --> 00:05:27.209
So the K stands for Kubernetes.

00:05:27.209 --> 00:05:29.250
LAURENCE MORONEY: And if
you want to get started,

00:05:29.250 --> 00:05:31.350
don't forget we've got a bunch
of links in the description

00:05:31.350 --> 00:05:31.849
below.

00:05:31.849 --> 00:05:32.810
Go take a look at them.

00:05:32.810 --> 00:05:34.010
Kelsey shared them with us.

00:05:34.010 --> 00:05:35.520
And there's some
great stuff there.

00:05:35.520 --> 00:05:37.290
I can't wait to see
what you build in cloud.

00:05:37.290 --> 00:05:39.220
I can't wait to see what
you do with containers.

00:05:39.220 --> 00:05:40.970
If you've any questions,
just please leave them

00:05:40.970 --> 00:05:41.910
in the comments below.

00:05:41.910 --> 00:05:44.120
Don't forget to hit
that Subscribe button.

00:05:44.120 --> 00:05:45.871
Thank you.

