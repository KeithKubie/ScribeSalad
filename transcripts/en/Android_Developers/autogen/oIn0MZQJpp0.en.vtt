WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.400
[Music]

00:00:06.400 --> 00:00:06.410
[Music]
 

00:00:06.410 --> 00:00:09.650
[Music]
hey everyone my name is Jeff Sharkey and

00:00:09.650 --> 00:00:09.660
hey everyone my name is Jeff Sharkey and
 

00:00:09.660 --> 00:00:11.780
hey everyone my name is Jeff Sharkey and
I'm a software engineer on the android

00:00:11.780 --> 00:00:11.790
I'm a software engineer on the android
 

00:00:11.790 --> 00:00:14.030
I'm a software engineer on the android
framework team and today we're gonna be

00:00:14.030 --> 00:00:14.040
framework team and today we're gonna be
 

00:00:14.040 --> 00:00:16.820
framework team and today we're gonna be
digging into files on android and all

00:00:16.820 --> 00:00:16.830
digging into files on android and all
 

00:00:16.830 --> 00:00:18.529
digging into files on android and all
the various places that android gives

00:00:18.529 --> 00:00:18.539
the various places that android gives
 

00:00:18.539 --> 00:00:21.529
the various places that android gives
you to store those files so today we'll

00:00:21.529 --> 00:00:21.539
you to store those files so today we'll
 

00:00:21.539 --> 00:00:23.269
you to store those files so today we'll
dig into starting by looking at some

00:00:23.269 --> 00:00:23.279
dig into starting by looking at some
 

00:00:23.279 --> 00:00:26.269
dig into starting by looking at some
common locations that Android offers the

00:00:26.269 --> 00:00:26.279
common locations that Android offers the
 

00:00:26.279 --> 00:00:29.089
common locations that Android offers the
first broad category is internal storage

00:00:29.089 --> 00:00:29.099
first broad category is internal storage
 

00:00:29.099 --> 00:00:31.999
first broad category is internal storage
and these this storage can be classified

00:00:31.999 --> 00:00:32.009
and these this storage can be classified
 

00:00:32.009 --> 00:00:34.430
and these this storage can be classified
as safe and secure because it's

00:00:34.430 --> 00:00:34.440
as safe and secure because it's
 

00:00:34.440 --> 00:00:36.049
as safe and secure because it's
something the Android OS protects it's

00:00:36.049 --> 00:00:36.059
something the Android OS protects it's
 

00:00:36.059 --> 00:00:38.000
something the Android OS protects it's
part of the application sandbox model

00:00:38.000 --> 00:00:38.010
part of the application sandbox model
 

00:00:38.010 --> 00:00:39.619
part of the application sandbox model
that we offer you've probably

00:00:39.619 --> 00:00:39.629
that we offer you've probably
 

00:00:39.629 --> 00:00:41.060
that we offer you've probably
encountered some of these directories

00:00:41.060 --> 00:00:41.070
encountered some of these directories
 

00:00:41.070 --> 00:00:43.790
encountered some of these directories
before like context get files derp it's

00:00:43.790 --> 00:00:43.800
before like context get files derp it's
 

00:00:43.800 --> 00:00:45.529
before like context get files derp it's
a great default location to store things

00:00:45.529 --> 00:00:45.539
a great default location to store things
 

00:00:45.539 --> 00:00:47.569
a great default location to store things
one that's slightly different is get

00:00:47.569 --> 00:00:47.579
one that's slightly different is get
 

00:00:47.579 --> 00:00:49.340
one that's slightly different is get
cached err well dig into that a little

00:00:49.340 --> 00:00:49.350
cached err well dig into that a little
 

00:00:49.350 --> 00:00:51.650
cached err well dig into that a little
bit later today but one thing to note is

00:00:51.650 --> 00:00:51.660
bit later today but one thing to note is
 

00:00:51.660 --> 00:00:53.090
bit later today but one thing to note is
that files that you store in that

00:00:53.090 --> 00:00:53.100
that files that you store in that
 

00:00:53.100 --> 00:00:55.850
that files that you store in that
location the disk space is not counted

00:00:55.850 --> 00:00:55.860
location the disk space is not counted
 

00:00:55.860 --> 00:00:58.069
location the disk space is not counted
against your application and the reason

00:00:58.069 --> 00:00:58.079
against your application and the reason
 

00:00:58.079 --> 00:00:59.750
against your application and the reason
for that is that Android reserves the

00:00:59.750 --> 00:00:59.760
for that is that Android reserves the
 

00:00:59.760 --> 00:01:01.580
for that is that Android reserves the
right to go in there and delete some of

00:01:01.580 --> 00:01:01.590
right to go in there and delete some of
 

00:01:01.590 --> 00:01:03.709
right to go in there and delete some of
those files if the user needs that disk

00:01:03.709 --> 00:01:03.719
those files if the user needs that disk
 

00:01:03.719 --> 00:01:06.170
those files if the user needs that disk
space elsewhere so it's a trade-off it's

00:01:06.170 --> 00:01:06.180
space elsewhere so it's a trade-off it's
 

00:01:06.180 --> 00:01:08.899
space elsewhere so it's a trade-off it's
a two-way street another directory get

00:01:08.899 --> 00:01:08.909
a two-way street another directory get
 

00:01:08.909 --> 00:01:11.120
a two-way street another directory get
no backup files derp this can be useful

00:01:11.120 --> 00:01:11.130
no backup files derp this can be useful
 

00:01:11.130 --> 00:01:13.789
no backup files derp this can be useful
if you have things like cloud messaging

00:01:13.789 --> 00:01:13.799
if you have things like cloud messaging
 

00:01:13.799 --> 00:01:16.370
if you have things like cloud messaging
tokens that you want to renew when your

00:01:16.370 --> 00:01:16.380
tokens that you want to renew when your
 

00:01:16.380 --> 00:01:19.429
tokens that you want to renew when your
app migrates between devices um so it's

00:01:19.429 --> 00:01:19.439
app migrates between devices um so it's
 

00:01:19.439 --> 00:01:21.320
app migrates between devices um so it's
a great if the device goes through a

00:01:21.320 --> 00:01:21.330
a great if the device goes through a
 

00:01:21.330 --> 00:01:23.480
a great if the device goes through a
backup and restore phase those files

00:01:23.480 --> 00:01:23.490
backup and restore phase those files
 

00:01:23.490 --> 00:01:25.100
backup and restore phase those files
that you store in that directory they

00:01:25.100 --> 00:01:25.110
that you store in that directory they
 

00:01:25.110 --> 00:01:27.289
that you store in that directory they
won't be carried across the backup so it

00:01:27.289 --> 00:01:27.299
won't be carried across the backup so it
 

00:01:27.299 --> 00:01:30.109
won't be carried across the backup so it
can be useful for that finally get code

00:01:30.109 --> 00:01:30.119
can be useful for that finally get code
 

00:01:30.119 --> 00:01:31.969
can be useful for that finally get code
cache directory this is a great place to

00:01:31.969 --> 00:01:31.979
cache directory this is a great place to
 

00:01:31.979 --> 00:01:33.679
cache directory this is a great place to
store things like jaded code or

00:01:33.679 --> 00:01:33.689
store things like jaded code or
 

00:01:33.689 --> 00:01:36.380
store things like jaded code or
optimized code and the OS will do two

00:01:36.380 --> 00:01:36.390
optimized code and the OS will do two
 

00:01:36.390 --> 00:01:38.660
optimized code and the OS will do two
things it will delete contents inside of

00:01:38.660 --> 00:01:38.670
things it will delete contents inside of
 

00:01:38.670 --> 00:01:39.679
things it will delete contents inside of
the directory under two conditions

00:01:39.679 --> 00:01:39.689
the directory under two conditions
 

00:01:39.689 --> 00:01:42.469
the directory under two conditions
either when your application is updated

00:01:42.469 --> 00:01:42.479
either when your application is updated
 

00:01:42.479 --> 00:01:45.410
either when your application is updated
via Play Store or whenever the OS itself

00:01:45.410 --> 00:01:45.420
via Play Store or whenever the OS itself
 

00:01:45.420 --> 00:01:47.359
via Play Store or whenever the OS itself
receives an upgrade safe from the oh

00:01:47.359 --> 00:01:47.369
receives an upgrade safe from the oh
 

00:01:47.369 --> 00:01:49.160
receives an upgrade safe from the oh
release to the P release it will clear

00:01:49.160 --> 00:01:49.170
release to the P release it will clear
 

00:01:49.170 --> 00:01:51.020
release to the P release it will clear
the contents of that directory so that's

00:01:51.020 --> 00:01:51.030
the contents of that directory so that's
 

00:01:51.030 --> 00:01:53.179
the contents of that directory so that's
a summary of the internal storage next

00:01:53.179 --> 00:01:53.189
a summary of the internal storage next
 

00:01:53.189 --> 00:01:55.039
a summary of the internal storage next
the other broad category of locations is

00:01:55.039 --> 00:01:55.049
the other broad category of locations is
 

00:01:55.049 --> 00:01:57.319
the other broad category of locations is
external storage and when we think of

00:01:57.319 --> 00:01:57.329
external storage and when we think of
 

00:01:57.329 --> 00:01:59.420
external storage and when we think of
external storage it's more of a shared

00:01:59.420 --> 00:01:59.430
external storage it's more of a shared
 

00:01:59.430 --> 00:02:02.420
external storage it's more of a shared
area and it's unprotected and the reason

00:02:02.420 --> 00:02:02.430
area and it's unprotected and the reason
 

00:02:02.430 --> 00:02:04.429
area and it's unprotected and the reason
I just mention that is data that you

00:02:04.429 --> 00:02:04.439
I just mention that is data that you
 

00:02:04.439 --> 00:02:06.499
I just mention that is data that you
store in that location you may write it

00:02:06.499 --> 00:02:06.509
store in that location you may write it
 

00:02:06.509 --> 00:02:09.080
store in that location you may write it
there but other applications can request

00:02:09.080 --> 00:02:09.090
there but other applications can request
 

00:02:09.090 --> 00:02:11.089
there but other applications can request
the storage permission on android and

00:02:11.089 --> 00:02:11.099
the storage permission on android and
 

00:02:11.099 --> 00:02:13.130
the storage permission on android and
they may write that data or modify it

00:02:13.130 --> 00:02:13.140
they may write that data or modify it
 

00:02:13.140 --> 00:02:13.670
they may write that data or modify it
with

00:02:13.670 --> 00:02:13.680
with
 

00:02:13.680 --> 00:02:15.319
with
you knowing about it and so it's

00:02:15.319 --> 00:02:15.329
you knowing about it and so it's
 

00:02:15.329 --> 00:02:17.000
you knowing about it and so it's
something we definitely discourage

00:02:17.000 --> 00:02:17.010
something we definitely discourage
 

00:02:17.010 --> 00:02:19.130
something we definitely discourage
storing sensitive contents in that

00:02:19.130 --> 00:02:19.140
storing sensitive contents in that
 

00:02:19.140 --> 00:02:21.649
storing sensitive contents in that
location if you do need to store data

00:02:21.649 --> 00:02:21.659
location if you do need to store data
 

00:02:21.659 --> 00:02:23.420
location if you do need to store data
out there consider finding a way to

00:02:23.420 --> 00:02:23.430
out there consider finding a way to
 

00:02:23.430 --> 00:02:25.640
out there consider finding a way to
prove to verify the integrity of that

00:02:25.640 --> 00:02:25.650
prove to verify the integrity of that
 

00:02:25.650 --> 00:02:27.709
prove to verify the integrity of that
data if you need to trust if you need to

00:02:27.709 --> 00:02:27.719
data if you need to trust if you need to
 

00:02:27.719 --> 00:02:30.110
data if you need to trust if you need to
trust it the directories here files

00:02:30.110 --> 00:02:30.120
trust it the directories here files
 

00:02:30.120 --> 00:02:31.309
trust it the directories here files
they're similar to internal storage

00:02:31.309 --> 00:02:31.319
they're similar to internal storage
 

00:02:31.319 --> 00:02:34.309
they're similar to internal storage
cache they're the same way external

00:02:34.309 --> 00:02:34.319
cache they're the same way external
 

00:02:34.319 --> 00:02:36.080
cache they're the same way external
media ders data that you save in there

00:02:36.080 --> 00:02:36.090
media ders data that you save in there
 

00:02:36.090 --> 00:02:38.059
media ders data that you save in there
will be scanned by media store on the

00:02:38.059 --> 00:02:38.069
will be scanned by media store on the
 

00:02:38.069 --> 00:02:39.949
will be scanned by media store on the
device so it's a good place to store

00:02:39.949 --> 00:02:39.959
device so it's a good place to store
 

00:02:39.959 --> 00:02:41.959
device so it's a good place to store
photos or videos that you want to be

00:02:41.959 --> 00:02:41.969
photos or videos that you want to be
 

00:02:41.969 --> 00:02:43.550
photos or videos that you want to be
included in the users gallery

00:02:43.550 --> 00:02:43.560
included in the users gallery
 

00:02:43.560 --> 00:02:45.229
included in the users gallery
application to be scanned and included

00:02:45.229 --> 00:02:45.239
application to be scanned and included
 

00:02:45.239 --> 00:02:48.530
application to be scanned and included
there get OB beaders io b b stands for

00:02:48.530 --> 00:02:48.540
there get OB beaders io b b stands for
 

00:02:48.540 --> 00:02:51.229
there get OB beaders io b b stands for
opaque opaque binary blobs and these are

00:02:51.229 --> 00:02:51.239
opaque opaque binary blobs and these are
 

00:02:51.239 --> 00:02:54.080
opaque opaque binary blobs and these are
these are large files typically used for

00:02:54.080 --> 00:02:54.090
these are large files typically used for
 

00:02:54.090 --> 00:02:55.369
these are large files typically used for
game developers that are delivered

00:02:55.369 --> 00:02:55.379
game developers that are delivered
 

00:02:55.379 --> 00:02:57.679
game developers that are delivered
through Google Play data that you store

00:02:57.679 --> 00:02:57.689
through Google Play data that you store
 

00:02:57.689 --> 00:02:59.330
through Google Play data that you store
in those locations they're counted

00:02:59.330 --> 00:02:59.340
in those locations they're counted
 

00:02:59.340 --> 00:03:01.490
in those locations they're counted
towards your apps code size instead of

00:03:01.490 --> 00:03:01.500
towards your apps code size instead of
 

00:03:01.500 --> 00:03:04.069
towards your apps code size instead of
its data size so so far we've talked

00:03:04.069 --> 00:03:04.079
its data size so so far we've talked
 

00:03:04.079 --> 00:03:05.780
its data size so so far we've talked
about broadly internal storage and

00:03:05.780 --> 00:03:05.790
about broadly internal storage and
 

00:03:05.790 --> 00:03:07.909
about broadly internal storage and
external storage and these are all great

00:03:07.909 --> 00:03:07.919
external storage and these are all great
 

00:03:07.919 --> 00:03:09.289
external storage and these are all great
places for you to store data that

00:03:09.289 --> 00:03:09.299
places for you to store data that
 

00:03:09.299 --> 00:03:11.690
places for you to store data that
belongs to your app but you might find

00:03:11.690 --> 00:03:11.700
belongs to your app but you might find
 

00:03:11.700 --> 00:03:13.699
belongs to your app but you might find
yourself creating data that belongs to

00:03:13.699 --> 00:03:13.709
yourself creating data that belongs to
 

00:03:13.709 --> 00:03:15.890
yourself creating data that belongs to
the user that the user may want to store

00:03:15.890 --> 00:03:15.900
the user that the user may want to store
 

00:03:15.900 --> 00:03:17.930
the user that the user may want to store
in a different location and that's a

00:03:17.930 --> 00:03:17.940
in a different location and that's a
 

00:03:17.940 --> 00:03:19.699
in a different location and that's a
great place to use the storage access

00:03:19.699 --> 00:03:19.709
great place to use the storage access
 

00:03:19.709 --> 00:03:21.949
great place to use the storage access
framework and there's two intents that

00:03:21.949 --> 00:03:21.959
framework and there's two intents that
 

00:03:21.959 --> 00:03:24.110
framework and there's two intents that
work great their intent action open

00:03:24.110 --> 00:03:24.120
work great their intent action open
 

00:03:24.120 --> 00:03:26.479
work great their intent action open
document and create document these have

00:03:26.479 --> 00:03:26.489
document and create document these have
 

00:03:26.489 --> 00:03:27.979
document and create document these have
been around in the platform since the

00:03:27.979 --> 00:03:27.989
been around in the platform since the
 

00:03:27.989 --> 00:03:29.869
been around in the platform since the
KitKat release and you can think of them

00:03:29.869 --> 00:03:29.879
KitKat release and you can think of them
 

00:03:29.879 --> 00:03:32.689
KitKat release and you can think of them
as an open and a save dialog box for the

00:03:32.689 --> 00:03:32.699
as an open and a save dialog box for the
 

00:03:32.699 --> 00:03:35.119
as an open and a save dialog box for the
user it really offers a great experience

00:03:35.119 --> 00:03:35.129
user it really offers a great experience
 

00:03:35.129 --> 00:03:37.069
user it really offers a great experience
because the user has control over

00:03:37.069 --> 00:03:37.079
because the user has control over
 

00:03:37.079 --> 00:03:39.199
because the user has control over
exactly where those files are stored on

00:03:39.199 --> 00:03:39.209
exactly where those files are stored on
 

00:03:39.209 --> 00:03:41.089
exactly where those files are stored on
the device it gives them the freedom to

00:03:41.089 --> 00:03:41.099
the device it gives them the freedom to
 

00:03:41.099 --> 00:03:43.280
the device it gives them the freedom to
choose any of those locations it also

00:03:43.280 --> 00:03:43.290
choose any of those locations it also
 

00:03:43.290 --> 00:03:44.809
choose any of those locations it also
opens the door for cloud storage

00:03:44.809 --> 00:03:44.819
opens the door for cloud storage
 

00:03:44.819 --> 00:03:46.939
opens the door for cloud storage
providers you don't have to integrate a

00:03:46.939 --> 00:03:46.949
providers you don't have to integrate a
 

00:03:46.949 --> 00:03:49.309
providers you don't have to integrate a
cloud provider SDK into your application

00:03:49.309 --> 00:03:49.319
cloud provider SDK into your application
 

00:03:49.319 --> 00:03:51.229
cloud provider SDK into your application
you just simply launch the intent and

00:03:51.229 --> 00:03:51.239
you just simply launch the intent and
 

00:03:51.239 --> 00:03:53.210
you just simply launch the intent and
the user can select where they want that

00:03:53.210 --> 00:03:53.220
the user can select where they want that
 

00:03:53.220 --> 00:03:55.159
the user can select where they want that
file to be stored there's some great

00:03:55.159 --> 00:03:55.169
file to be stored there's some great
 

00:03:55.169 --> 00:03:56.960
file to be stored there's some great
talks that have dug into this elsewhere

00:03:56.960 --> 00:03:56.970
talks that have dug into this elsewhere
 

00:03:56.970 --> 00:03:58.099
talks that have dug into this elsewhere
so I'd encourage you to search around

00:03:58.099 --> 00:03:58.109
so I'd encourage you to search around
 

00:03:58.109 --> 00:04:00.199
so I'd encourage you to search around
online there's some great content that

00:04:00.199 --> 00:04:00.209
online there's some great content that
 

00:04:00.209 --> 00:04:03.170
online there's some great content that
digs more in depth so we talked about

00:04:03.170 --> 00:04:03.180
digs more in depth so we talked about
 

00:04:03.180 --> 00:04:05.089
digs more in depth so we talked about
some basic locations let's do a deep

00:04:05.089 --> 00:04:05.099
some basic locations let's do a deep
 

00:04:05.099 --> 00:04:07.219
some basic locations let's do a deep
dive on two specific advanced locations

00:04:07.219 --> 00:04:07.229
dive on two specific advanced locations
 

00:04:07.229 --> 00:04:09.649
dive on two specific advanced locations
today one that we'll dig into is direct

00:04:09.649 --> 00:04:09.659
today one that we'll dig into is direct
 

00:04:09.659 --> 00:04:11.569
today one that we'll dig into is direct
boot and the second we'll dig into is

00:04:11.569 --> 00:04:11.579
boot and the second we'll dig into is
 

00:04:11.579 --> 00:04:14.360
boot and the second we'll dig into is
cache data it's the first direct food

00:04:14.360 --> 00:04:14.370
cache data it's the first direct food
 

00:04:14.370 --> 00:04:15.770
cache data it's the first direct food
which you may not have encountered

00:04:15.770 --> 00:04:15.780
which you may not have encountered
 

00:04:15.780 --> 00:04:18.229
which you may not have encountered
before and first it's worth starting out

00:04:18.229 --> 00:04:18.239
before and first it's worth starting out
 

00:04:18.239 --> 00:04:20.810
before and first it's worth starting out
like we built we built the direct food

00:04:20.810 --> 00:04:20.820
like we built we built the direct food
 

00:04:20.820 --> 00:04:22.879
like we built we built the direct food
feature in the Android and release to

00:04:22.879 --> 00:04:22.889
feature in the Android and release to
 

00:04:22.889 --> 00:04:25.640
feature in the Android and release to
solve an important problem when before

00:04:25.640 --> 00:04:25.650
solve an important problem when before
 

00:04:25.650 --> 00:04:27.500
solve an important problem when before
the end release when we encrypted

00:04:27.500 --> 00:04:27.510
the end release when we encrypted
 

00:04:27.510 --> 00:04:29.450
the end release when we encrypted
an android device and if the user

00:04:29.450 --> 00:04:29.460
an android device and if the user
 

00:04:29.460 --> 00:04:32.000
an android device and if the user
rebooted that device no apps could run

00:04:32.000 --> 00:04:32.010
rebooted that device no apps could run
 

00:04:32.010 --> 00:04:33.830
rebooted that device no apps could run
until after the user had entered their

00:04:33.830 --> 00:04:33.840
until after the user had entered their
 

00:04:33.840 --> 00:04:37.040
until after the user had entered their
credentials a PIN pattern or password so

00:04:37.040 --> 00:04:37.050
credentials a PIN pattern or password so
 

00:04:37.050 --> 00:04:38.720
credentials a PIN pattern or password so
what we did in the end release is we

00:04:38.720 --> 00:04:38.730
what we did in the end release is we
 

00:04:38.730 --> 00:04:40.880
what we did in the end release is we
created two storage areas that they're

00:04:40.880 --> 00:04:40.890
created two storage areas that they're
 

00:04:40.890 --> 00:04:42.710
created two storage areas that they're
still encrypted but they're encrypted

00:04:42.710 --> 00:04:42.720
still encrypted but they're encrypted
 

00:04:42.720 --> 00:04:44.690
still encrypted but they're encrypted
with two different keys and we call

00:04:44.690 --> 00:04:44.700
with two different keys and we call
 

00:04:44.700 --> 00:04:46.610
with two different keys and we call
these areas the device protected area

00:04:46.610 --> 00:04:46.620
these areas the device protected area
 

00:04:46.620 --> 00:04:49.490
these areas the device protected area
and the credential protected area the

00:04:49.490 --> 00:04:49.500
and the credential protected area the
 

00:04:49.500 --> 00:04:52.160
and the credential protected area the
device protected area becomes available

00:04:52.160 --> 00:04:52.170
device protected area becomes available
 

00:04:52.170 --> 00:04:54.860
device protected area becomes available
by virtue of the device proving that it

00:04:54.860 --> 00:04:54.870
by virtue of the device proving that it
 

00:04:54.870 --> 00:04:56.720
by virtue of the device proving that it
hasn't been tampered with so when the

00:04:56.720 --> 00:04:56.730
hasn't been tampered with so when the
 

00:04:56.730 --> 00:04:59.390
hasn't been tampered with so when the
device boots up there is DDM verity

00:04:59.390 --> 00:04:59.400
device boots up there is DDM verity
 

00:04:59.400 --> 00:05:01.670
device boots up there is DDM verity
verifies that the device hasn't been

00:05:01.670 --> 00:05:01.680
verifies that the device hasn't been
 

00:05:01.680 --> 00:05:03.320
verifies that the device hasn't been
tampered with by virtue of proving that

00:05:03.320 --> 00:05:03.330
tampered with by virtue of proving that
 

00:05:03.330 --> 00:05:06.050
tampered with by virtue of proving that
it unlocks that that device protected

00:05:06.050 --> 00:05:06.060
it unlocks that that device protected
 

00:05:06.060 --> 00:05:08.510
it unlocks that that device protected
storage then later when the user enters

00:05:08.510 --> 00:05:08.520
storage then later when the user enters
 

00:05:08.520 --> 00:05:10.550
storage then later when the user enters
that pin pattern or password the

00:05:10.550 --> 00:05:10.560
that pin pattern or password the
 

00:05:10.560 --> 00:05:12.290
that pin pattern or password the
credential protected storage becomes

00:05:12.290 --> 00:05:12.300
credential protected storage becomes
 

00:05:12.300 --> 00:05:15.440
credential protected storage becomes
available for applications to use if you

00:05:15.440 --> 00:05:15.450
available for applications to use if you
 

00:05:15.450 --> 00:05:17.090
available for applications to use if you
haven't encountered these api's before

00:05:17.090 --> 00:05:17.100
haven't encountered these api's before
 

00:05:17.100 --> 00:05:19.070
haven't encountered these api's before
rest assured that all of your data by

00:05:19.070 --> 00:05:19.080
rest assured that all of your data by
 

00:05:19.080 --> 00:05:21.200
rest assured that all of your data by
default as an app developer is always

00:05:21.200 --> 00:05:21.210
default as an app developer is always
 

00:05:21.210 --> 00:05:24.080
default as an app developer is always
stored in credential protected area but

00:05:24.080 --> 00:05:24.090
stored in credential protected area but
 

00:05:24.090 --> 00:05:25.790
stored in credential protected area but
if you if you find a place where you'd

00:05:25.790 --> 00:05:25.800
if you if you find a place where you'd
 

00:05:25.800 --> 00:05:27.830
if you if you find a place where you'd
like to run before the user has unlocked

00:05:27.830 --> 00:05:27.840
like to run before the user has unlocked
 

00:05:27.840 --> 00:05:29.450
like to run before the user has unlocked
their device that's where it might be

00:05:29.450 --> 00:05:29.460
their device that's where it might be
 

00:05:29.460 --> 00:05:31.010
their device that's where it might be
useful to store small bits of

00:05:31.010 --> 00:05:31.020
useful to store small bits of
 

00:05:31.020 --> 00:05:33.140
useful to store small bits of
information out in that credit out in

00:05:33.140 --> 00:05:33.150
information out in that credit out in
 

00:05:33.150 --> 00:05:34.880
information out in that credit out in
that device protected area so that your

00:05:34.880 --> 00:05:34.890
that device protected area so that your
 

00:05:34.890 --> 00:05:36.620
that device protected area so that your
app can be useful while the device is

00:05:36.620 --> 00:05:36.630
app can be useful while the device is
 

00:05:36.630 --> 00:05:38.480
app can be useful while the device is
locked so then you might ask the

00:05:38.480 --> 00:05:38.490
locked so then you might ask the
 

00:05:38.490 --> 00:05:40.190
locked so then you might ask the
question how do you gain access to that

00:05:40.190 --> 00:05:40.200
question how do you gain access to that
 

00:05:40.200 --> 00:05:42.770
question how do you gain access to that
storage area on the credential protected

00:05:42.770 --> 00:05:42.780
storage area on the credential protected
 

00:05:42.780 --> 00:05:45.290
storage area on the credential protected
area as I mentioned context get files

00:05:45.290 --> 00:05:45.300
area as I mentioned context get files
 

00:05:45.300 --> 00:05:47.330
area as I mentioned context get files
dirt offers that credential protected

00:05:47.330 --> 00:05:47.340
dirt offers that credential protected
 

00:05:47.340 --> 00:05:50.120
dirt offers that credential protected
area there's a method on context and you

00:05:50.120 --> 00:05:50.130
area there's a method on context and you
 

00:05:50.130 --> 00:05:51.320
area there's a method on context and you
can see it down here at the bottom of

00:05:51.320 --> 00:05:51.330
can see it down here at the bottom of
 

00:05:51.330 --> 00:05:53.390
can see it down here at the bottom of
the screen create device protected

00:05:53.390 --> 00:05:53.400
the screen create device protected
 

00:05:53.400 --> 00:05:54.920
the screen create device protected
storage context it's a little bit of a

00:05:54.920 --> 00:05:54.930
storage context it's a little bit of a
 

00:05:54.930 --> 00:05:56.870
storage context it's a little bit of a
mouthful what it does is it returns

00:05:56.870 --> 00:05:56.880
mouthful what it does is it returns
 

00:05:56.880 --> 00:05:59.600
mouthful what it does is it returns
another different context where the file

00:05:59.600 --> 00:05:59.610
another different context where the file
 

00:05:59.610 --> 00:06:02.270
another different context where the file
API is referring to internal storage on

00:06:02.270 --> 00:06:02.280
API is referring to internal storage on
 

00:06:02.280 --> 00:06:04.850
API is referring to internal storage on
that returned context point at the

00:06:04.850 --> 00:06:04.860
that returned context point at the
 

00:06:04.860 --> 00:06:07.580
that returned context point at the
device protected storage so let's take a

00:06:07.580 --> 00:06:07.590
device protected storage so let's take a
 

00:06:07.590 --> 00:06:09.290
device protected storage so let's take a
look at some code examples of how you

00:06:09.290 --> 00:06:09.300
look at some code examples of how you
 

00:06:09.300 --> 00:06:11.990
look at some code examples of how you
might integrate with those ap is one of

00:06:11.990 --> 00:06:12.000
might integrate with those ap is one of
 

00:06:12.000 --> 00:06:13.610
might integrate with those ap is one of
the first things you'll need to do is if

00:06:13.610 --> 00:06:13.620
the first things you'll need to do is if
 

00:06:13.620 --> 00:06:15.710
the first things you'll need to do is if
you want to become device direct boot

00:06:15.710 --> 00:06:15.720
you want to become device direct boot
 

00:06:15.720 --> 00:06:17.810
you want to become device direct boot
aware is to think about what data you

00:06:17.810 --> 00:06:17.820
aware is to think about what data you
 

00:06:17.820 --> 00:06:19.340
aware is to think about what data you
want to keep on credential protected

00:06:19.340 --> 00:06:19.350
want to keep on credential protected
 

00:06:19.350 --> 00:06:21.380
want to keep on credential protected
storage or migrated out to device

00:06:21.380 --> 00:06:21.390
storage or migrated out to device
 

00:06:21.390 --> 00:06:23.840
storage or migrated out to device
protected storage so a lot of you will

00:06:23.840 --> 00:06:23.850
protected storage so a lot of you will
 

00:06:23.850 --> 00:06:25.220
protected storage so a lot of you will
be writing code like this to decide

00:06:25.220 --> 00:06:25.230
be writing code like this to decide
 

00:06:25.230 --> 00:06:27.230
be writing code like this to decide
during that initial upgrade step how you

00:06:27.230 --> 00:06:27.240
during that initial upgrade step how you
 

00:06:27.240 --> 00:06:29.660
during that initial upgrade step how you
want to migrate data back and forth the

00:06:29.660 --> 00:06:29.670
want to migrate data back and forth the
 

00:06:29.670 --> 00:06:30.800
want to migrate data back and forth the
first thing you'll probably do when

00:06:30.800 --> 00:06:30.810
first thing you'll probably do when
 

00:06:30.810 --> 00:06:33.110
first thing you'll probably do when
starting your application is ask is the

00:06:33.110 --> 00:06:33.120
starting your application is ask is the
 

00:06:33.120 --> 00:06:35.480
starting your application is ask is the
user currently unlocked has that pin

00:06:35.480 --> 00:06:35.490
user currently unlocked has that pin
 

00:06:35.490 --> 00:06:37.340
user currently unlocked has that pin
pattern or password been offered so the

00:06:37.340 --> 00:06:37.350
pattern or password been offered so the
 

00:06:37.350 --> 00:06:39.260
pattern or password been offered so the
user manager class offers you can check

00:06:39.260 --> 00:06:39.270
user manager class offers you can check
 

00:06:39.270 --> 00:06:40.540
user manager class offers you can check
is the current user on law

00:06:40.540 --> 00:06:40.550
is the current user on law
 

00:06:40.550 --> 00:06:42.770
is the current user on law
assuming that they are unlocked that

00:06:42.770 --> 00:06:42.780
assuming that they are unlocked that
 

00:06:42.780 --> 00:06:44.330
assuming that they are unlocked that
means you have access to both the device

00:06:44.330 --> 00:06:44.340
means you have access to both the device
 

00:06:44.340 --> 00:06:46.640
means you have access to both the device
and credential storage and here we can

00:06:46.640 --> 00:06:46.650
and credential storage and here we can
 

00:06:46.650 --> 00:06:48.320
and credential storage and here we can
see theirs to move methods that are

00:06:48.320 --> 00:06:48.330
see theirs to move methods that are
 

00:06:48.330 --> 00:06:49.730
see theirs to move methods that are
offered as helpers you can move shared

00:06:49.730 --> 00:06:49.740
offered as helpers you can move shared
 

00:06:49.740 --> 00:06:51.650
offered as helpers you can move shared
preferences between two locations and

00:06:51.650 --> 00:06:51.660
preferences between two locations and
 

00:06:51.660 --> 00:06:53.540
preferences between two locations and
you can also move databases back and

00:06:53.540 --> 00:06:53.550
you can also move databases back and
 

00:06:53.550 --> 00:06:55.970
you can also move databases back and
forth the reason the reason we provide

00:06:55.970 --> 00:06:55.980
forth the reason the reason we provide
 

00:06:55.980 --> 00:06:57.980
forth the reason the reason we provide
these helper methods is oftentimes

00:06:57.980 --> 00:06:57.990
these helper methods is oftentimes
 

00:06:57.990 --> 00:07:00.200
these helper methods is oftentimes
shared preferences or databases can

00:07:00.200 --> 00:07:00.210
shared preferences or databases can
 

00:07:00.210 --> 00:07:02.450
shared preferences or databases can
actually be made up of multiple files on

00:07:02.450 --> 00:07:02.460
actually be made up of multiple files on
 

00:07:02.460 --> 00:07:04.310
actually be made up of multiple files on
disk and some of that data may also be

00:07:04.310 --> 00:07:04.320
disk and some of that data may also be
 

00:07:04.320 --> 00:07:06.410
disk and some of that data may also be
cached in memory so by calling these

00:07:06.410 --> 00:07:06.420
cached in memory so by calling these
 

00:07:06.420 --> 00:07:08.420
cached in memory so by calling these
helper methods to move that data data

00:07:08.420 --> 00:07:08.430
helper methods to move that data data
 

00:07:08.430 --> 00:07:10.070
helper methods to move that data data
around we ensure that all the data gets

00:07:10.070 --> 00:07:10.080
around we ensure that all the data gets
 

00:07:10.080 --> 00:07:12.560
around we ensure that all the data gets
moved and that any any in-memory caches

00:07:12.560 --> 00:07:12.570
moved and that any any in-memory caches
 

00:07:12.570 --> 00:07:15.230
moved and that any any in-memory caches
aren't validated along the way what do

00:07:15.230 --> 00:07:15.240
aren't validated along the way what do
 

00:07:15.240 --> 00:07:16.820
aren't validated along the way what do
you think about data that you would want

00:07:16.820 --> 00:07:16.830
you think about data that you would want
 

00:07:16.830 --> 00:07:19.220
you think about data that you would want
to migrate I one thing we say is only

00:07:19.220 --> 00:07:19.230
to migrate I one thing we say is only
 

00:07:19.230 --> 00:07:20.690
to migrate I one thing we say is only
move the data you think you need to

00:07:20.690 --> 00:07:20.700
move the data you think you need to
 

00:07:20.700 --> 00:07:22.280
move the data you think you need to
provide that user experience while the

00:07:22.280 --> 00:07:22.290
provide that user experience while the
 

00:07:22.290 --> 00:07:23.870
provide that user experience while the
device is locked so things like if

00:07:23.870 --> 00:07:23.880
device is locked so things like if
 

00:07:23.880 --> 00:07:25.490
device is locked so things like if
you're building an alarm clock app you'd

00:07:25.490 --> 00:07:25.500
you're building an alarm clock app you'd
 

00:07:25.500 --> 00:07:27.410
you're building an alarm clock app you'd
probably move the users next alarm time

00:07:27.410 --> 00:07:27.420
probably move the users next alarm time
 

00:07:27.420 --> 00:07:29.900
probably move the users next alarm time
out into that device protected area to

00:07:29.900 --> 00:07:29.910
out into that device protected area to
 

00:07:29.910 --> 00:07:31.190
out into that device protected area to
make sure the alarm clock would go off

00:07:31.190 --> 00:07:31.200
make sure the alarm clock would go off
 

00:07:31.200 --> 00:07:33.470
make sure the alarm clock would go off
if the user user's device is currently

00:07:33.470 --> 00:07:33.480
if the user user's device is currently
 

00:07:33.480 --> 00:07:35.960
if the user user's device is currently
locked another strategy that we've seen

00:07:35.960 --> 00:07:35.970
locked another strategy that we've seen
 

00:07:35.970 --> 00:07:38.480
locked another strategy that we've seen
used if you have auth tokens to talk to

00:07:38.480 --> 00:07:38.490
used if you have auth tokens to talk to
 

00:07:38.490 --> 00:07:40.310
used if you have auth tokens to talk to
a server we've actually recommended

00:07:40.310 --> 00:07:40.320
a server we've actually recommended
 

00:07:40.320 --> 00:07:42.020
a server we've actually recommended
people create a second type of auth

00:07:42.020 --> 00:07:42.030
people create a second type of auth
 

00:07:42.030 --> 00:07:44.450
people create a second type of auth
token for your cloud server i1 auth

00:07:44.450 --> 00:07:44.460
token for your cloud server i1 auth
 

00:07:44.460 --> 00:07:46.850
token for your cloud server i1 auth
token is a full rich full access token

00:07:46.850 --> 00:07:46.860
token is a full rich full access token
 

00:07:46.860 --> 00:07:48.530
token is a full rich full access token
which you probably use today we'd

00:07:48.530 --> 00:07:48.540
which you probably use today we'd
 

00:07:48.540 --> 00:07:50.840
which you probably use today we'd
recommend keeping that in the credential

00:07:50.840 --> 00:07:50.850
recommend keeping that in the credential
 

00:07:50.850 --> 00:07:53.150
recommend keeping that in the credential
protected area and creating a second

00:07:53.150 --> 00:07:53.160
protected area and creating a second
 

00:07:53.160 --> 00:07:55.490
protected area and creating a second
much more limited in scope auth token

00:07:55.490 --> 00:07:55.500
much more limited in scope auth token
 

00:07:55.500 --> 00:07:57.590
much more limited in scope auth token
and only storing that limited in scope

00:07:57.590 --> 00:07:57.600
and only storing that limited in scope
 

00:07:57.600 --> 00:07:59.450
and only storing that limited in scope
off token out in the device protected

00:07:59.450 --> 00:07:59.460
off token out in the device protected
 

00:07:59.460 --> 00:08:01.850
off token out in the device protected
area maybe that off token when it talks

00:08:01.850 --> 00:08:01.860
area maybe that off token when it talks
 

00:08:01.860 --> 00:08:03.830
area maybe that off token when it talks
to your server back-end is only able to

00:08:03.830 --> 00:08:03.840
to your server back-end is only able to
 

00:08:03.840 --> 00:08:06.230
to your server back-end is only able to
return the fact that the user has three

00:08:06.230 --> 00:08:06.240
return the fact that the user has three
 

00:08:06.240 --> 00:08:08.300
return the fact that the user has three
unread messages and maybe it can't do

00:08:08.300 --> 00:08:08.310
unread messages and maybe it can't do
 

00:08:08.310 --> 00:08:10.580
unread messages and maybe it can't do
any operations beyond that so it offers

00:08:10.580 --> 00:08:10.590
any operations beyond that so it offers
 

00:08:10.590 --> 00:08:12.200
any operations beyond that so it offers
it helps you deliver the experience of

00:08:12.200 --> 00:08:12.210
it helps you deliver the experience of
 

00:08:12.210 --> 00:08:13.580
it helps you deliver the experience of
getting the users attention when you

00:08:13.580 --> 00:08:13.590
getting the users attention when you
 

00:08:13.590 --> 00:08:16.040
getting the users attention when you
need to but without without being able

00:08:16.040 --> 00:08:16.050
need to but without without being able
 

00:08:16.050 --> 00:08:17.690
need to but without without being able
to access any of the additional richer

00:08:17.690 --> 00:08:17.700
to access any of the additional richer
 

00:08:17.700 --> 00:08:20.810
to access any of the additional richer
information in your cloud ok so we've

00:08:20.810 --> 00:08:20.820
information in your cloud ok so we've
 

00:08:20.820 --> 00:08:22.130
information in your cloud ok so we've
talked if it's unlocked we can migrate

00:08:22.130 --> 00:08:22.140
talked if it's unlocked we can migrate
 

00:08:22.140 --> 00:08:24.380
talked if it's unlocked we can migrate
data back and forth the else clause here

00:08:24.380 --> 00:08:24.390
data back and forth the else clause here
 

00:08:24.390 --> 00:08:26.240
data back and forth the else clause here
we'd recommend that you register there's

00:08:26.240 --> 00:08:26.250
we'd recommend that you register there's
 

00:08:26.250 --> 00:08:28.219
we'd recommend that you register there's
a runtime broadcast that sent an action

00:08:28.219 --> 00:08:28.229
a runtime broadcast that sent an action
 

00:08:28.229 --> 00:08:29.659
a runtime broadcast that sent an action
user unlocked and that would allow you

00:08:29.659 --> 00:08:29.669
user unlocked and that would allow you
 

00:08:29.669 --> 00:08:31.219
user unlocked and that would allow you
to then run code when you're actually

00:08:31.219 --> 00:08:31.229
to then run code when you're actually
 

00:08:31.229 --> 00:08:33.200
to then run code when you're actually
when the user on the answer is that pin

00:08:33.200 --> 00:08:33.210
when the user on the answer is that pin
 

00:08:33.210 --> 00:08:35.839
when the user on the answer is that pin
pattern or password the middle code

00:08:35.839 --> 00:08:35.849
pattern or password the middle code
 

00:08:35.849 --> 00:08:37.940
pattern or password the middle code
snippet here those move methods they

00:08:37.940 --> 00:08:37.950
snippet here those move methods they
 

00:08:37.950 --> 00:08:39.380
snippet here those move methods they
work both directions so if you

00:08:39.380 --> 00:08:39.390
work both directions so if you
 

00:08:39.390 --> 00:08:40.730
work both directions so if you
accidentally moved a right move some

00:08:40.730 --> 00:08:40.740
accidentally moved a right move some
 

00:08:40.740 --> 00:08:42.680
accidentally moved a right move some
data out into the device protected area

00:08:42.680 --> 00:08:42.690
data out into the device protected area
 

00:08:42.690 --> 00:08:44.660
data out into the device protected area
you can also move it right back into the

00:08:44.660 --> 00:08:44.670
you can also move it right back into the
 

00:08:44.670 --> 00:08:47.030
you can also move it right back into the
credential area and another tidbit

00:08:47.030 --> 00:08:47.040
credential area and another tidbit
 

00:08:47.040 --> 00:08:48.500
credential area and another tidbit
another API that might be useful at the

00:08:48.500 --> 00:08:48.510
another API that might be useful at the
 

00:08:48.510 --> 00:08:50.180
another API that might be useful at the
bottom of the screen there if you're

00:08:50.180 --> 00:08:50.190
bottom of the screen there if you're
 

00:08:50.190 --> 00:08:52.040
bottom of the screen there if you're
ever wondering if a particular file is

00:08:52.040 --> 00:08:52.050
ever wondering if a particular file is
 

00:08:52.050 --> 00:08:53.990
ever wondering if a particular file is
going to be encrypted at rest

00:08:53.990 --> 00:08:54.000
going to be encrypted at rest
 

00:08:54.000 --> 00:08:56.000
going to be encrypted at rest
by the operating system you can quickly

00:08:56.000 --> 00:08:56.010
by the operating system you can quickly
 

00:08:56.010 --> 00:08:57.560
by the operating system you can quickly
check for that as well there's a storage

00:08:57.560 --> 00:08:57.570
check for that as well there's a storage
 

00:08:57.570 --> 00:09:00.590
check for that as well there's a storage
manager is encrypted API and that can be

00:09:00.590 --> 00:09:00.600
manager is encrypted API and that can be
 

00:09:00.600 --> 00:09:02.060
manager is encrypted API and that can be
useful if you're trying to decide if you

00:09:02.060 --> 00:09:02.070
useful if you're trying to decide if you
 

00:09:02.070 --> 00:09:04.610
useful if you're trying to decide if you
want to roll your own encryption or rely

00:09:04.610 --> 00:09:04.620
want to roll your own encryption or rely
 

00:09:04.620 --> 00:09:06.380
want to roll your own encryption or rely
on the encryption at rest that the OS

00:09:06.380 --> 00:09:06.390
on the encryption at rest that the OS
 

00:09:06.390 --> 00:09:09.830
on the encryption at rest that the OS
provides all right so a second deep dive

00:09:09.830 --> 00:09:09.840
provides all right so a second deep dive
 

00:09:09.840 --> 00:09:11.870
provides all right so a second deep dive
area that we'll dig into is cached data

00:09:11.870 --> 00:09:11.880
area that we'll dig into is cached data
 

00:09:11.880 --> 00:09:14.090
area that we'll dig into is cached data
on the US and this is typically data

00:09:14.090 --> 00:09:14.100
on the US and this is typically data
 

00:09:14.100 --> 00:09:16.070
on the US and this is typically data
that you can regenerate or redownload

00:09:16.070 --> 00:09:16.080
that you can regenerate or redownload
 

00:09:16.080 --> 00:09:18.980
that you can regenerate or redownload
later on if it happens to be deleted and

00:09:18.980 --> 00:09:18.990
later on if it happens to be deleted and
 

00:09:18.990 --> 00:09:20.390
later on if it happens to be deleted and
I mentioned earlier that this is a

00:09:20.390 --> 00:09:20.400
I mentioned earlier that this is a
 

00:09:20.400 --> 00:09:21.200
I mentioned earlier that this is a
two-way street

00:09:21.200 --> 00:09:21.210
two-way street
 

00:09:21.210 --> 00:09:23.630
two-way street
the OS won't count the data that you use

00:09:23.630 --> 00:09:23.640
the OS won't count the data that you use
 

00:09:23.640 --> 00:09:25.700
the OS won't count the data that you use
in that area against your app but at the

00:09:25.700 --> 00:09:25.710
in that area against your app but at the
 

00:09:25.710 --> 00:09:27.260
in that area against your app but at the
same time we reserve the right to go in

00:09:27.260 --> 00:09:27.270
same time we reserve the right to go in
 

00:09:27.270 --> 00:09:28.580
same time we reserve the right to go in
there and delete some of that data if

00:09:28.580 --> 00:09:28.590
there and delete some of that data if
 

00:09:28.590 --> 00:09:30.140
there and delete some of that data if
the user needs at the disk space for

00:09:30.140 --> 00:09:30.150
the user needs at the disk space for
 

00:09:30.150 --> 00:09:32.510
the user needs at the disk space for
something else that they're doing um and

00:09:32.510 --> 00:09:32.520
something else that they're doing um and
 

00:09:32.520 --> 00:09:34.280
something else that they're doing um and
something that we improved in the au

00:09:34.280 --> 00:09:34.290
something that we improved in the au
 

00:09:34.290 --> 00:09:36.590
something that we improved in the au
release is we rewrote the algorithms

00:09:36.590 --> 00:09:36.600
release is we rewrote the algorithms
 

00:09:36.600 --> 00:09:38.810
release is we rewrote the algorithms
used internally one of the biggest

00:09:38.810 --> 00:09:38.820
used internally one of the biggest
 

00:09:38.820 --> 00:09:40.220
used internally one of the biggest
questions we got from you from

00:09:40.220 --> 00:09:40.230
questions we got from you from
 

00:09:40.230 --> 00:09:42.440
questions we got from you from
developers was how much calf space is

00:09:42.440 --> 00:09:42.450
developers was how much calf space is
 

00:09:42.450 --> 00:09:45.860
developers was how much calf space is
appropriate to use is can I use 500

00:09:45.860 --> 00:09:45.870
appropriate to use is can I use 500
 

00:09:45.870 --> 00:09:48.200
appropriate to use is can I use 500
Meg's if is that too much is 50 Meg too

00:09:48.200 --> 00:09:48.210
Meg's if is that too much is 50 Meg too
 

00:09:48.210 --> 00:09:50.560
Meg's if is that too much is 50 Meg too
much so now we offer explicit guidance

00:09:50.560 --> 00:09:50.570
much so now we offer explicit guidance
 

00:09:50.570 --> 00:09:53.090
much so now we offer explicit guidance
there's an API on storage manager to

00:09:53.090 --> 00:09:53.100
there's an API on storage manager to
 

00:09:53.100 --> 00:09:55.160
there's an API on storage manager to
figure out a cache quota for your

00:09:55.160 --> 00:09:55.170
figure out a cache quota for your
 

00:09:55.170 --> 00:09:57.170
figure out a cache quota for your
application a reasonable amount that to

00:09:57.170 --> 00:09:57.180
application a reasonable amount that to
 

00:09:57.180 --> 00:09:58.370
application a reasonable amount that to
think that the device thinks is

00:09:58.370 --> 00:09:58.380
think that the device thinks is
 

00:09:58.380 --> 00:10:00.410
think that the device thinks is
reasonable for your app to use and the

00:10:00.410 --> 00:10:00.420
reasonable for your app to use and the
 

00:10:00.420 --> 00:10:02.270
reasonable for your app to use and the
nice thing is the OS adjusts that value

00:10:02.270 --> 00:10:02.280
nice thing is the OS adjusts that value
 

00:10:02.280 --> 00:10:04.610
nice thing is the OS adjusts that value
over time so if the user spends a lot of

00:10:04.610 --> 00:10:04.620
over time so if the user spends a lot of
 

00:10:04.620 --> 00:10:06.410
over time so if the user spends a lot of
time in your application we're going to

00:10:06.410 --> 00:10:06.420
time in your application we're going to
 

00:10:06.420 --> 00:10:08.000
time in your application we're going to
increase that number to give you more

00:10:08.000 --> 00:10:08.010
increase that number to give you more
 

00:10:08.010 --> 00:10:09.710
increase that number to give you more
cache space to work with so that you can

00:10:09.710 --> 00:10:09.720
cache space to work with so that you can
 

00:10:09.720 --> 00:10:11.630
cache space to work with so that you can
offer a better user experiences to the

00:10:11.630 --> 00:10:11.640
offer a better user experiences to the
 

00:10:11.640 --> 00:10:14.660
offer a better user experiences to the
to your users another thing that we did

00:10:14.660 --> 00:10:14.670
to your users another thing that we did
 

00:10:14.670 --> 00:10:16.070
to your users another thing that we did
in the OU release we rewrote the

00:10:16.070 --> 00:10:16.080
in the OU release we rewrote the
 

00:10:16.080 --> 00:10:17.720
in the OU release we rewrote the
internal implementation of how that data

00:10:17.720 --> 00:10:17.730
internal implementation of how that data
 

00:10:17.730 --> 00:10:20.750
internal implementation of how that data
is cleared before the OU release we

00:10:20.750 --> 00:10:20.760
is cleared before the OU release we
 

00:10:20.760 --> 00:10:22.340
is cleared before the OU release we
would literally list all of the cache

00:10:22.340 --> 00:10:22.350
would literally list all of the cache
 

00:10:22.350 --> 00:10:24.620
would literally list all of the cache
files on the OS sort them by modified

00:10:24.620 --> 00:10:24.630
files on the OS sort them by modified
 

00:10:24.630 --> 00:10:26.810
files on the OS sort them by modified
time and delete the oldest files and you

00:10:26.810 --> 00:10:26.820
time and delete the oldest files and you
 

00:10:26.820 --> 00:10:28.010
time and delete the oldest files and you
can imagine that there were ways you

00:10:28.010 --> 00:10:28.020
can imagine that there were ways you
 

00:10:28.020 --> 00:10:30.560
can imagine that there were ways you
could GameA Phi by setting your modify

00:10:30.560 --> 00:10:30.570
could GameA Phi by setting your modify
 

00:10:30.570 --> 00:10:33.470
could GameA Phi by setting your modify
timeout to like the year 2038 so we

00:10:33.470 --> 00:10:33.480
timeout to like the year 2038 so we
 

00:10:33.480 --> 00:10:36.020
timeout to like the year 2038 so we
fixed that and so now in oh and future

00:10:36.020 --> 00:10:36.030
fixed that and so now in oh and future
 

00:10:36.030 --> 00:10:39.140
fixed that and so now in oh and future
releases I the OS will delete data from

00:10:39.140 --> 00:10:39.150
releases I the OS will delete data from
 

00:10:39.150 --> 00:10:40.700
releases I the OS will delete data from
apps that are most over their quota

00:10:40.700 --> 00:10:40.710
apps that are most over their quota
 

00:10:40.710 --> 00:10:44.150
apps that are most over their quota
first so what this means if your app

00:10:44.150 --> 00:10:44.160
first so what this means if your app
 

00:10:44.160 --> 00:10:46.130
first so what this means if your app
stays right around the cache quota that

00:10:46.130 --> 00:10:46.140
stays right around the cache quota that
 

00:10:46.140 --> 00:10:48.260
stays right around the cache quota that
the OS has recommended you can be pretty

00:10:48.260 --> 00:10:48.270
the OS has recommended you can be pretty
 

00:10:48.270 --> 00:10:49.940
the OS has recommended you can be pretty
confident that your data will be there

00:10:49.940 --> 00:10:49.950
confident that your data will be there
 

00:10:49.950 --> 00:10:52.460
confident that your data will be there
and will remain available um even as the

00:10:52.460 --> 00:10:52.470
and will remain available um even as the
 

00:10:52.470 --> 00:10:55.370
and will remain available um even as the
user starts filling up their disk so

00:10:55.370 --> 00:10:55.380
user starts filling up their disk so
 

00:10:55.380 --> 00:10:56.780
user starts filling up their disk so
what are these let's look again at some

00:10:56.780 --> 00:10:56.790
what are these let's look again at some
 

00:10:56.790 --> 00:10:58.250
what are these let's look again at some
code snippets like how would we use this

00:10:58.250 --> 00:10:58.260
code snippets like how would we use this
 

00:10:58.260 --> 00:11:00.829
code snippets like how would we use this
in practice so again going to storage

00:11:00.829 --> 00:11:00.839
in practice so again going to storage
 

00:11:00.839 --> 00:11:02.510
in practice so again going to storage
manager if you're integrating with a

00:11:02.510 --> 00:11:02.520
manager if you're integrating with a
 

00:11:02.520 --> 00:11:04.760
manager if you're integrating with a
common class say like disk LRU cache

00:11:04.760 --> 00:11:04.770
common class say like disk LRU cache
 

00:11:04.770 --> 00:11:06.590
common class say like disk LRU cache
it's pretty easy to connect the two

00:11:06.590 --> 00:11:06.600
it's pretty easy to connect the two
 

00:11:06.600 --> 00:11:07.790
it's pretty easy to connect the two
things together you can

00:11:07.790 --> 00:11:07.800
things together you can
 

00:11:07.800 --> 00:11:09.980
things together you can
the US for that recommended cash quota

00:11:09.980 --> 00:11:09.990
the US for that recommended cash quota
 

00:11:09.990 --> 00:11:11.449
the US for that recommended cash quota
bytes and plug it straight into the

00:11:11.449 --> 00:11:11.459
bytes and plug it straight into the
 

00:11:11.459 --> 00:11:13.970
bytes and plug it straight into the
discolor you cache to help it trim how

00:11:13.970 --> 00:11:13.980
discolor you cache to help it trim how
 

00:11:13.980 --> 00:11:16.220
discolor you cache to help it trim how
much size it's using if you have

00:11:16.220 --> 00:11:16.230
much size it's using if you have
 

00:11:16.230 --> 00:11:18.320
much size it's using if you have
multiple types of caches it's up to you

00:11:18.320 --> 00:11:18.330
multiple types of caches it's up to you
 

00:11:18.330 --> 00:11:19.970
multiple types of caches it's up to you
to decide how you want to fractionally

00:11:19.970 --> 00:11:19.980
to decide how you want to fractionally
 

00:11:19.980 --> 00:11:22.220
to decide how you want to fractionally
account or distribute that cache amongst

00:11:22.220 --> 00:11:22.230
account or distribute that cache amongst
 

00:11:22.230 --> 00:11:24.009
account or distribute that cache amongst
your the inside of internals of your app

00:11:24.009 --> 00:11:24.019
your the inside of internals of your app
 

00:11:24.019 --> 00:11:26.990
your the inside of internals of your app
the second code snippet there if you're

00:11:26.990 --> 00:11:27.000
the second code snippet there if you're
 

00:11:27.000 --> 00:11:28.819
the second code snippet there if you're
rolling some of your own caching point

00:11:28.819 --> 00:11:28.829
rolling some of your own caching point
 

00:11:28.829 --> 00:11:30.170
rolling some of your own caching point
out there's a method called get cache

00:11:30.170 --> 00:11:30.180
out there's a method called get cache
 

00:11:30.180 --> 00:11:33.170
out there's a method called get cache
size bytes this is a fast way to ask the

00:11:33.170 --> 00:11:33.180
size bytes this is a fast way to ask the
 

00:11:33.180 --> 00:11:35.060
size bytes this is a fast way to ask the
question how much cash space your app is

00:11:35.060 --> 00:11:35.070
question how much cash space your app is
 

00:11:35.070 --> 00:11:36.829
question how much cash space your app is
currently using on that it's an

00:11:36.829 --> 00:11:36.839
currently using on that it's an
 

00:11:36.839 --> 00:11:38.300
currently using on that it's an
optimized call that will turn very

00:11:38.300 --> 00:11:38.310
optimized call that will turn very
 

00:11:38.310 --> 00:11:40.880
optimized call that will turn very
quickly and it's faster than you having

00:11:40.880 --> 00:11:40.890
quickly and it's faster than you having
 

00:11:40.890 --> 00:11:42.590
quickly and it's faster than you having
to go iterate over your own disk usage

00:11:42.590 --> 00:11:42.600
to go iterate over your own disk usage
 

00:11:42.600 --> 00:11:44.150
to go iterate over your own disk usage
to try to figure out how much space

00:11:44.150 --> 00:11:44.160
to try to figure out how much space
 

00:11:44.160 --> 00:11:46.940
to try to figure out how much space
you're using another feature that we

00:11:46.940 --> 00:11:46.950
you're using another feature that we
 

00:11:46.950 --> 00:11:48.500
you're using another feature that we
added in the overlays which is covered

00:11:48.500 --> 00:11:48.510
added in the overlays which is covered
 

00:11:48.510 --> 00:11:50.449
added in the overlays which is covered
at the bottom half of this slide is the

00:11:50.449 --> 00:11:50.459
at the bottom half of this slide is the
 

00:11:50.459 --> 00:11:52.910
at the bottom half of this slide is the
ability to have cache behaviors and we

00:11:52.910 --> 00:11:52.920
ability to have cache behaviors and we
 

00:11:52.920 --> 00:11:54.410
ability to have cache behaviors and we
heard this from developers that it can

00:11:54.410 --> 00:11:54.420
heard this from developers that it can
 

00:11:54.420 --> 00:11:55.759
heard this from developers that it can
be useful you'll you may download

00:11:55.759 --> 00:11:55.769
be useful you'll you may download
 

00:11:55.769 --> 00:11:57.800
be useful you'll you may download
multiple files that really should be

00:11:57.800 --> 00:11:57.810
multiple files that really should be
 

00:11:57.810 --> 00:12:00.230
multiple files that really should be
treated as a unit or a group one

00:12:00.230 --> 00:12:00.240
treated as a unit or a group one
 

00:12:00.240 --> 00:12:01.790
treated as a unit or a group one
concrete example is downloading say a

00:12:01.790 --> 00:12:01.800
concrete example is downloading say a
 

00:12:01.800 --> 00:12:04.340
concrete example is downloading say a
movie file and a subtitles file that

00:12:04.340 --> 00:12:04.350
movie file and a subtitles file that
 

00:12:04.350 --> 00:12:06.350
movie file and a subtitles file that
goes along with it if you store both of

00:12:06.350 --> 00:12:06.360
goes along with it if you store both of
 

00:12:06.360 --> 00:12:08.360
goes along with it if you store both of
those in the cache directory if one of

00:12:08.360 --> 00:12:08.370
those in the cache directory if one of
 

00:12:08.370 --> 00:12:10.310
those in the cache directory if one of
them gets deleted the other file isn't

00:12:10.310 --> 00:12:10.320
them gets deleted the other file isn't
 

00:12:10.320 --> 00:12:12.350
them gets deleted the other file isn't
really useful and valuable so the cache

00:12:12.350 --> 00:12:12.360
really useful and valuable so the cache
 

00:12:12.360 --> 00:12:14.120
really useful and valuable so the cache
behavior offers you a way to indicate to

00:12:14.120 --> 00:12:14.130
behavior offers you a way to indicate to
 

00:12:14.130 --> 00:12:16.160
behavior offers you a way to indicate to
tell us as the operating system that if

00:12:16.160 --> 00:12:16.170
tell us as the operating system that if
 

00:12:16.170 --> 00:12:17.720
tell us as the operating system that if
we need disk space we should delete both

00:12:17.720 --> 00:12:17.730
we need disk space we should delete both
 

00:12:17.730 --> 00:12:20.569
we need disk space we should delete both
of those things at the same time all

00:12:20.569 --> 00:12:20.579
of those things at the same time all
 

00:12:20.579 --> 00:12:21.860
of those things at the same time all
right so we talked about some of the

00:12:21.860 --> 00:12:21.870
right so we talked about some of the
 

00:12:21.870 --> 00:12:23.660
right so we talked about some of the
common storage locations let's switch

00:12:23.660 --> 00:12:23.670
common storage locations let's switch
 

00:12:23.670 --> 00:12:24.920
common storage locations let's switch
gears and talk about how we can work

00:12:24.920 --> 00:12:24.930
gears and talk about how we can work
 

00:12:24.930 --> 00:12:27.290
gears and talk about how we can work
together but the OS helping you as

00:12:27.290 --> 00:12:27.300
together but the OS helping you as
 

00:12:27.300 --> 00:12:29.300
together but the OS helping you as
developers and one of the biggest things

00:12:29.300 --> 00:12:29.310
developers and one of the biggest things
 

00:12:29.310 --> 00:12:31.519
developers and one of the biggest things
that we offered in the O release is the

00:12:31.519 --> 00:12:31.529
that we offered in the O release is the
 

00:12:31.529 --> 00:12:33.319
that we offered in the O release is the
ability to help you get the disk space

00:12:33.319 --> 00:12:33.329
ability to help you get the disk space
 

00:12:33.329 --> 00:12:36.380
ability to help you get the disk space
that you need before the o release if

00:12:36.380 --> 00:12:36.390
that you need before the o release if
 

00:12:36.390 --> 00:12:38.389
that you need before the o release if
you wanted to do a large download let's

00:12:38.389 --> 00:12:38.399
you wanted to do a large download let's
 

00:12:38.399 --> 00:12:40.460
you wanted to do a large download let's
say one gigabyte in size and if you

00:12:40.460 --> 00:12:40.470
say one gigabyte in size and if you
 

00:12:40.470 --> 00:12:42.319
say one gigabyte in size and if you
looked just at the free disk space you

00:12:42.319 --> 00:12:42.329
looked just at the free disk space you
 

00:12:42.329 --> 00:12:44.840
looked just at the free disk space you
may only see 500 megabytes were free and

00:12:44.840 --> 00:12:44.850
may only see 500 megabytes were free and
 

00:12:44.850 --> 00:12:46.310
may only see 500 megabytes were free and
it may look like that download was

00:12:46.310 --> 00:12:46.320
it may look like that download was
 

00:12:46.320 --> 00:12:48.829
it may look like that download was
impossible but there's a new API in the

00:12:48.829 --> 00:12:48.839
impossible but there's a new API in the
 

00:12:48.839 --> 00:12:51.230
impossible but there's a new API in the
o.r Alize where the OS will offer to go

00:12:51.230 --> 00:12:51.240
o.r Alize where the OS will offer to go
 

00:12:51.240 --> 00:12:53.180
o.r Alize where the OS will offer to go
and delete cache files belonging to

00:12:53.180 --> 00:12:53.190
and delete cache files belonging to
 

00:12:53.190 --> 00:12:55.280
and delete cache files belonging to
other applications to help free up the

00:12:55.280 --> 00:12:55.290
other applications to help free up the
 

00:12:55.290 --> 00:12:57.350
other applications to help free up the
disk space for that operation to succeed

00:12:57.350 --> 00:12:57.360
disk space for that operation to succeed
 

00:12:57.360 --> 00:12:59.720
disk space for that operation to succeed
for your application if there still

00:12:59.720 --> 00:12:59.730
for your application if there still
 

00:12:59.730 --> 00:13:01.550
for your application if there still
isn't enough disk space there's new

00:13:01.550 --> 00:13:01.560
isn't enough disk space there's new
 

00:13:01.560 --> 00:13:03.290
isn't enough disk space there's new
intents that you can launch to help get

00:13:03.290 --> 00:13:03.300
intents that you can launch to help get
 

00:13:03.300 --> 00:13:05.240
intents that you can launch to help get
the user involved to help them pick

00:13:05.240 --> 00:13:05.250
the user involved to help them pick
 

00:13:05.250 --> 00:13:07.370
the user involved to help them pick
items and different things that they can

00:13:07.370 --> 00:13:07.380
items and different things that they can
 

00:13:07.380 --> 00:13:09.410
items and different things that they can
do to help free up that disk space so

00:13:09.410 --> 00:13:09.420
do to help free up that disk space so
 

00:13:09.420 --> 00:13:12.139
do to help free up that disk space so
how do we use this API here's a snapshot

00:13:12.139 --> 00:13:12.149
how do we use this API here's a snapshot
 

00:13:12.149 --> 00:13:14.360
how do we use this API here's a snapshot
of this the very top of this slide this

00:13:14.360 --> 00:13:14.370
of this the very top of this slide this
 

00:13:14.370 --> 00:13:15.500
of this the very top of this slide this
is maybe the way that you've been

00:13:15.500 --> 00:13:15.510
is maybe the way that you've been
 

00:13:15.510 --> 00:13:17.540
is maybe the way that you've been
writing code today you'll just do a

00:13:17.540 --> 00:13:17.550
writing code today you'll just do a
 

00:13:17.550 --> 00:13:19.040
writing code today you'll just do a
pretty simple check you have a download

00:13:19.040 --> 00:13:19.050
pretty simple check you have a download
 

00:13:19.050 --> 00:13:20.689
pretty simple check you have a download
size you're comparing it against Java IO

00:13:20.689 --> 00:13:20.699
size you're comparing it against Java IO
 

00:13:20.699 --> 00:13:21.500
size you're comparing it against Java IO
dot file

00:13:21.500 --> 00:13:21.510
dot file
 

00:13:21.510 --> 00:13:23.570
dot file
that get usable space how much to space

00:13:23.570 --> 00:13:23.580
that get usable space how much to space
 

00:13:23.580 --> 00:13:25.340
that get usable space how much to space
is there that's the operation that may

00:13:25.340 --> 00:13:25.350
is there that's the operation that may
 

00:13:25.350 --> 00:13:26.960
is there that's the operation that may
look like it wouldn't be possible to

00:13:26.960 --> 00:13:26.970
look like it wouldn't be possible to
 

00:13:26.970 --> 00:13:29.660
look like it wouldn't be possible to
succeed but if you convert your code to

00:13:29.660 --> 00:13:29.670
succeed but if you convert your code to
 

00:13:29.670 --> 00:13:31.310
succeed but if you convert your code to
using the rest of the code snippet on

00:13:31.310 --> 00:13:31.320
using the rest of the code snippet on
 

00:13:31.320 --> 00:13:33.650
using the rest of the code snippet on
this slide if you call the Storage

00:13:33.650 --> 00:13:33.660
this slide if you call the Storage
 

00:13:33.660 --> 00:13:37.040
this slide if you call the Storage
Manager get allocatable bytes API that

00:13:37.040 --> 00:13:37.050
Manager get allocatable bytes API that
 

00:13:37.050 --> 00:13:39.110
Manager get allocatable bytes API that
will return not just the free space it

00:13:39.110 --> 00:13:39.120
will return not just the free space it
 

00:13:39.120 --> 00:13:41.270
will return not just the free space it
will also include space that the OS is

00:13:41.270 --> 00:13:41.280
will also include space that the OS is
 

00:13:41.280 --> 00:13:43.100
will also include space that the OS is
willing to go free up on your behalf

00:13:43.100 --> 00:13:43.110
willing to go free up on your behalf
 

00:13:43.110 --> 00:13:46.340
willing to go free up on your behalf
from other applications cache data so in

00:13:46.340 --> 00:13:46.350
from other applications cache data so in
 

00:13:46.350 --> 00:13:47.810
from other applications cache data so in
this case it may look like if we have

00:13:47.810 --> 00:13:47.820
this case it may look like if we have
 

00:13:47.820 --> 00:13:50.420
this case it may look like if we have
enough space inside of that if block we

00:13:50.420 --> 00:13:50.430
enough space inside of that if block we
 

00:13:50.430 --> 00:13:51.800
enough space inside of that if block we
can actually open that file output

00:13:51.800 --> 00:13:51.810
can actually open that file output
 

00:13:51.810 --> 00:13:54.140
can actually open that file output
stream and now there's an API called

00:13:54.140 --> 00:13:54.150
stream and now there's an API called
 

00:13:54.150 --> 00:13:56.360
stream and now there's an API called
allocate bytes and what this will do is

00:13:56.360 --> 00:13:56.370
allocate bytes and what this will do is
 

00:13:56.370 --> 00:13:57.980
allocate bytes and what this will do is
it will go actually claim that disk

00:13:57.980 --> 00:13:57.990
it will go actually claim that disk
 

00:13:57.990 --> 00:13:59.660
it will go actually claim that disk
space for your application deep

00:13:59.660 --> 00:13:59.670
space for your application deep
 

00:13:59.670 --> 00:14:01.550
space for your application deep
underneath it'll use the F allocate

00:14:01.550 --> 00:14:01.560
underneath it'll use the F allocate
 

00:14:01.560 --> 00:14:03.380
underneath it'll use the F allocate
system call to ensure that those blocks

00:14:03.380 --> 00:14:03.390
system call to ensure that those blocks
 

00:14:03.390 --> 00:14:05.300
system call to ensure that those blocks
belong to your application and that you

00:14:05.300 --> 00:14:05.310
belong to your application and that you
 

00:14:05.310 --> 00:14:06.980
belong to your application and that you
do have the space that's guaranteed to

00:14:06.980 --> 00:14:06.990
do have the space that's guaranteed to
 

00:14:06.990 --> 00:14:09.040
do have the space that's guaranteed to
belong to you so that could be a useful

00:14:09.040 --> 00:14:09.050
belong to you so that could be a useful
 

00:14:09.050 --> 00:14:11.840
belong to you so that could be a useful
useful API to use and the else block

00:14:11.840 --> 00:14:11.850
useful API to use and the else block
 

00:14:11.850 --> 00:14:13.670
useful API to use and the else block
here if there still wasn't enough space

00:14:13.670 --> 00:14:13.680
here if there still wasn't enough space
 

00:14:13.680 --> 00:14:15.230
here if there still wasn't enough space
we know are for some great intents for

00:14:15.230 --> 00:14:15.240
we know are for some great intents for
 

00:14:15.240 --> 00:14:16.940
we know are for some great intents for
you to ask the user for help to come

00:14:16.940 --> 00:14:16.950
you to ask the user for help to come
 

00:14:16.950 --> 00:14:18.530
you to ask the user for help to come
along and free up information and free

00:14:18.530 --> 00:14:18.540
along and free up information and free
 

00:14:18.540 --> 00:14:21.950
along and free up information and free
up the disk space sharing content we've

00:14:21.950 --> 00:14:21.960
up the disk space sharing content we've
 

00:14:21.960 --> 00:14:23.810
up the disk space sharing content we've
covered this a little bit before how can

00:14:23.810 --> 00:14:23.820
covered this a little bit before how can
 

00:14:23.820 --> 00:14:25.970
covered this a little bit before how can
we work together there please always use

00:14:25.970 --> 00:14:25.980
we work together there please always use
 

00:14:25.980 --> 00:14:27.410
we work together there please always use
content you rise when you're sharing

00:14:27.410 --> 00:14:27.420
content you rise when you're sharing
 

00:14:27.420 --> 00:14:30.140
content you rise when you're sharing
between applications never use file your

00:14:30.140 --> 00:14:30.150
between applications never use file your
 

00:14:30.150 --> 00:14:31.970
between applications never use file your
eyes and the reason is that receiving

00:14:31.970 --> 00:14:31.980
eyes and the reason is that receiving
 

00:14:31.980 --> 00:14:33.650
eyes and the reason is that receiving
application they may not have the

00:14:33.650 --> 00:14:33.660
application they may not have the
 

00:14:33.660 --> 00:14:35.270
application they may not have the
permissions that they need to directly

00:14:35.270 --> 00:14:35.280
permissions that they need to directly
 

00:14:35.280 --> 00:14:37.820
permissions that they need to directly
access the files on disk if you use

00:14:37.820 --> 00:14:37.830
access the files on disk if you use
 

00:14:37.830 --> 00:14:40.070
access the files on disk if you use
content your eyes the OS can manage the

00:14:40.070 --> 00:14:40.080
content your eyes the OS can manage the
 

00:14:40.080 --> 00:14:41.990
content your eyes the OS can manage the
dynamic permissions to give the

00:14:41.990 --> 00:14:42.000
dynamic permissions to give the
 

00:14:42.000 --> 00:14:43.520
dynamic permissions to give the
receiving out to make sure that they can

00:14:43.520 --> 00:14:43.530
receiving out to make sure that they can
 

00:14:43.530 --> 00:14:45.950
receiving out to make sure that they can
open the content if you find yourself in

00:14:45.950 --> 00:14:45.960
open the content if you find yourself in
 

00:14:45.960 --> 00:14:47.450
open the content if you find yourself in
this position file provider in the

00:14:47.450 --> 00:14:47.460
this position file provider in the
 

00:14:47.460 --> 00:14:49.070
this position file provider in the
support library is a great way to

00:14:49.070 --> 00:14:49.080
support library is a great way to
 

00:14:49.080 --> 00:14:51.320
support library is a great way to
convert between the two with a single

00:14:51.320 --> 00:14:51.330
convert between the two with a single
 

00:14:51.330 --> 00:14:51.890
convert between the two with a single
line of code

00:14:51.890 --> 00:14:51.900
line of code
 

00:14:51.900 --> 00:14:53.900
line of code
every place to convert from file to

00:14:53.900 --> 00:14:53.910
every place to convert from file to
 

00:14:53.910 --> 00:14:56.240
every place to convert from file to
content and over the years because this

00:14:56.240 --> 00:14:56.250
content and over the years because this
 

00:14:56.250 --> 00:14:58.310
content and over the years because this
is an important important thing to pay

00:14:58.310 --> 00:14:58.320
is an important important thing to pay
 

00:14:58.320 --> 00:15:00.230
is an important important thing to pay
attention to we build strictmode api's

00:15:00.230 --> 00:15:00.240
attention to we build strictmode api's
 

00:15:00.240 --> 00:15:01.760
attention to we build strictmode api's
to help you track down and detect these

00:15:01.760 --> 00:15:01.770
to help you track down and detect these
 

00:15:01.770 --> 00:15:03.950
to help you track down and detect these
places in your app you can detect places

00:15:03.950 --> 00:15:03.960
places in your app you can detect places
 

00:15:03.960 --> 00:15:05.510
places in your app you can detect places
where you might be accidentally sharing

00:15:05.510 --> 00:15:05.520
where you might be accidentally sharing
 

00:15:05.520 --> 00:15:07.730
where you might be accidentally sharing
file your eyes and now I own over more

00:15:07.730 --> 00:15:07.740
file your eyes and now I own over more
 

00:15:07.740 --> 00:15:08.990
file your eyes and now I own over more
recent release you can also detect

00:15:08.990 --> 00:15:09.000
recent release you can also detect
 

00:15:09.000 --> 00:15:10.460
recent release you can also detect
places where you're sharing a content

00:15:10.460 --> 00:15:10.470
places where you're sharing a content
 

00:15:10.470 --> 00:15:12.650
places where you're sharing a content
URI and you might be forgetting the flag

00:15:12.650 --> 00:15:12.660
URI and you might be forgetting the flag
 

00:15:12.660 --> 00:15:15.170
URI and you might be forgetting the flag
grant read or the flag grant right to go

00:15:15.170 --> 00:15:15.180
grant read or the flag grant right to go
 

00:15:15.180 --> 00:15:17.150
grant read or the flag grant right to go
along with that intent so those can be

00:15:17.150 --> 00:15:17.160
along with that intent so those can be
 

00:15:17.160 --> 00:15:20.170
along with that intent so those can be
two AP is that are helpful to look at

00:15:20.170 --> 00:15:20.180
two AP is that are helpful to look at
 

00:15:20.180 --> 00:15:22.640
two AP is that are helpful to look at
native code is another area to think

00:15:22.640 --> 00:15:22.650
native code is another area to think
 

00:15:22.650 --> 00:15:24.740
native code is another area to think
about we'd strongly recommend that you

00:15:24.740 --> 00:15:24.750
about we'd strongly recommend that you
 

00:15:24.750 --> 00:15:27.830
about we'd strongly recommend that you
look at opening files up in higher-level

00:15:27.830 --> 00:15:27.840
look at opening files up in higher-level
 

00:15:27.840 --> 00:15:30.500
look at opening files up in higher-level
managed code up in Java or Kotlin and

00:15:30.500 --> 00:15:30.510
managed code up in Java or Kotlin and
 

00:15:30.510 --> 00:15:32.630
managed code up in Java or Kotlin and
passing down the already open file

00:15:32.630 --> 00:15:32.640
passing down the already open file
 

00:15:32.640 --> 00:15:35.440
passing down the already open file
descriptor the integer down into native

00:15:35.440 --> 00:15:35.450
descriptor the integer down into native
 

00:15:35.450 --> 00:15:37.630
descriptor the integer down into native
and the reason for that is opening it a

00:15:37.630 --> 00:15:37.640
and the reason for that is opening it a
 

00:15:37.640 --> 00:15:39.160
and the reason for that is opening it a
managed code gives the OS the

00:15:39.160 --> 00:15:39.170
managed code gives the OS the
 

00:15:39.170 --> 00:15:41.320
managed code gives the OS the
opportunity to notice and inspect

00:15:41.320 --> 00:15:41.330
opportunity to notice and inspect
 

00:15:41.330 --> 00:15:43.660
opportunity to notice and inspect
incorrect things in particular can look

00:15:43.660 --> 00:15:43.670
incorrect things in particular can look
 

00:15:43.670 --> 00:15:46.390
incorrect things in particular can look
for strict mode violations if you open a

00:15:46.390 --> 00:15:46.400
for strict mode violations if you open a
 

00:15:46.400 --> 00:15:47.950
for strict mode violations if you open a
managed code it may notice that the

00:15:47.950 --> 00:15:47.960
managed code it may notice that the
 

00:15:47.960 --> 00:15:49.240
managed code it may notice that the
thread that you're currently running on

00:15:49.240 --> 00:15:49.250
thread that you're currently running on
 

00:15:49.250 --> 00:15:52.240
thread that you're currently running on
is important to the user is may block or

00:15:52.240 --> 00:15:52.250
is important to the user is may block or
 

00:15:52.250 --> 00:15:54.340
is important to the user is may block or
cause jank in your app and we're gonna

00:15:54.340 --> 00:15:54.350
cause jank in your app and we're gonna
 

00:15:54.350 --> 00:15:56.200
cause jank in your app and we're gonna
start using this more in future Android

00:15:56.200 --> 00:15:56.210
start using this more in future Android
 

00:15:56.210 --> 00:15:58.030
start using this more in future Android
releases so this is why we want to

00:15:58.030 --> 00:15:58.040
releases so this is why we want to
 

00:15:58.040 --> 00:16:00.460
releases so this is why we want to
strongly encourage open the file in Java

00:16:00.460 --> 00:16:00.470
strongly encourage open the file in Java
 

00:16:00.470 --> 00:16:02.380
strongly encourage open the file in Java
or the higher-level language past the

00:16:02.380 --> 00:16:02.390
or the higher-level language past the
 

00:16:02.390 --> 00:16:05.650
or the higher-level language past the
integer down to native code don't pass

00:16:05.650 --> 00:16:05.660
integer down to native code don't pass
 

00:16:05.660 --> 00:16:08.500
integer down to native code don't pass
the file path itself across the j'ni

00:16:08.500 --> 00:16:08.510
the file path itself across the j'ni
 

00:16:08.510 --> 00:16:10.810
the file path itself across the j'ni
boundary and a quick code snippet of

00:16:10.810 --> 00:16:10.820
boundary and a quick code snippet of
 

00:16:10.820 --> 00:16:12.250
boundary and a quick code snippet of
what that looks like you can pretty

00:16:12.250 --> 00:16:12.260
what that looks like you can pretty
 

00:16:12.260 --> 00:16:13.630
what that looks like you can pretty
quickly do this with partial file

00:16:13.630 --> 00:16:13.640
quickly do this with partial file
 

00:16:13.640 --> 00:16:15.730
quickly do this with partial file
descriptor you can open a particular

00:16:15.730 --> 00:16:15.740
descriptor you can open a particular
 

00:16:15.740 --> 00:16:17.260
descriptor you can open a particular
file on disk maybe for read/write in

00:16:17.260 --> 00:16:17.270
file on disk maybe for read/write in
 

00:16:17.270 --> 00:16:18.880
file on disk maybe for read/write in
this case and there's a method called

00:16:18.880 --> 00:16:18.890
this case and there's a method called
 

00:16:18.890 --> 00:16:21.610
this case and there's a method called
detach FD that will return that integer

00:16:21.610 --> 00:16:21.620
detach FD that will return that integer
 

00:16:21.620 --> 00:16:23.560
detach FD that will return that integer
it's just an int that is ready for you

00:16:23.560 --> 00:16:23.570
it's just an int that is ready for you
 

00:16:23.570 --> 00:16:26.050
it's just an int that is ready for you
to pass across a J&amp;I boundary as a giant

00:16:26.050 --> 00:16:26.060
to pass across a J&amp;I boundary as a giant
 

00:16:26.060 --> 00:16:28.660
to pass across a J&amp;I boundary as a giant
so that's the recommended design going

00:16:28.660 --> 00:16:28.670
so that's the recommended design going
 

00:16:28.670 --> 00:16:30.850
so that's the recommended design going
forward another note that might be a

00:16:30.850 --> 00:16:30.860
forward another note that might be a
 

00:16:30.860 --> 00:16:33.070
forward another note that might be a
trick or a tip that could be useful if

00:16:33.070 --> 00:16:33.080
trick or a tip that could be useful if
 

00:16:33.080 --> 00:16:34.630
trick or a tip that could be useful if
you find yourself just jumping across

00:16:34.630 --> 00:16:34.640
you find yourself just jumping across
 

00:16:34.640 --> 00:16:37.480
you find yourself just jumping across
j'ni to do a handful of system calls you

00:16:37.480 --> 00:16:37.490
j'ni to do a handful of system calls you
 

00:16:37.490 --> 00:16:40.240
j'ni to do a handful of system calls you
might go look at Android system OS there

00:16:40.240 --> 00:16:40.250
might go look at Android system OS there
 

00:16:40.250 --> 00:16:43.030
might go look at Android system OS there
are several dozen POSIX sis calls ready

00:16:43.030 --> 00:16:43.040
are several dozen POSIX sis calls ready
 

00:16:43.040 --> 00:16:45.100
are several dozen POSIX sis calls ready
for you to use up in Java today we only

00:16:45.100 --> 00:16:45.110
for you to use up in Java today we only
 

00:16:45.110 --> 00:16:46.930
for you to use up in Java today we only
added that a couple releases ago so you

00:16:46.930 --> 00:16:46.940
added that a couple releases ago so you
 

00:16:46.940 --> 00:16:48.430
added that a couple releases ago so you
may be able to find that you can do

00:16:48.430 --> 00:16:48.440
may be able to find that you can do
 

00:16:48.440 --> 00:16:50.650
may be able to find that you can do
those handful of sis calls purely in

00:16:50.650 --> 00:16:50.660
those handful of sis calls purely in
 

00:16:50.660 --> 00:16:52.450
those handful of sis calls purely in
Java and you may be able to get rid of

00:16:52.450 --> 00:16:52.460
Java and you may be able to get rid of
 

00:16:52.460 --> 00:16:53.770
Java and you may be able to get rid of
the J&amp;I on the native code in your

00:16:53.770 --> 00:16:53.780
the J&amp;I on the native code in your
 

00:16:53.780 --> 00:16:56.470
the J&amp;I on the native code in your
application so take a look at that and

00:16:56.470 --> 00:16:56.480
application so take a look at that and
 

00:16:56.480 --> 00:16:59.800
application so take a look at that and
finally working with media um we don't

00:16:59.800 --> 00:16:59.810
finally working with media um we don't
 

00:16:59.810 --> 00:17:01.180
finally working with media um we don't
really recommend that you use media

00:17:01.180 --> 00:17:01.190
really recommend that you use media
 

00:17:01.190 --> 00:17:02.890
really recommend that you use media
store if you're looking to find the

00:17:02.890 --> 00:17:02.900
store if you're looking to find the
 

00:17:02.900 --> 00:17:04.480
store if you're looking to find the
photos or videos that the user has on

00:17:04.480 --> 00:17:04.490
photos or videos that the user has on
 

00:17:04.490 --> 00:17:06.460
photos or videos that the user has on
their device and there you might be

00:17:06.460 --> 00:17:06.470
their device and there you might be
 

00:17:06.470 --> 00:17:08.380
their device and there you might be
tempted to go and build your own index

00:17:08.380 --> 00:17:08.390
tempted to go and build your own index
 

00:17:08.390 --> 00:17:10.930
tempted to go and build your own index
of whatever media you find but that can

00:17:10.930 --> 00:17:10.940
of whatever media you find but that can
 

00:17:10.940 --> 00:17:12.760
of whatever media you find but that can
be pretty wasteful of both of CPU and

00:17:12.760 --> 00:17:12.770
be pretty wasteful of both of CPU and
 

00:17:12.770 --> 00:17:15.340
be pretty wasteful of both of CPU and
battery for the user and another note is

00:17:15.340 --> 00:17:15.350
battery for the user and another note is
 

00:17:15.350 --> 00:17:16.870
battery for the user and another note is
we're actively working on improving

00:17:16.870 --> 00:17:16.880
we're actively working on improving
 

00:17:16.880 --> 00:17:18.730
we're actively working on improving
media store and really adding

00:17:18.730 --> 00:17:18.740
media store and really adding
 

00:17:18.740 --> 00:17:20.500
media store and really adding
functionality there so stay tuned over

00:17:20.500 --> 00:17:20.510
functionality there so stay tuned over
 

00:17:20.510 --> 00:17:23.530
functionality there so stay tuned over
the next couple releases another note is

00:17:23.530 --> 00:17:23.540
the next couple releases another note is
 

00:17:23.540 --> 00:17:26.260
the next couple releases another note is
open files open the the content of that

00:17:26.260 --> 00:17:26.270
open files open the the content of that
 

00:17:26.270 --> 00:17:27.880
open files open the the content of that
media through content resolver

00:17:27.880 --> 00:17:27.890
media through content resolver
 

00:17:27.890 --> 00:17:29.530
media through content resolver
you may have noticed that there are

00:17:29.530 --> 00:17:29.540
you may have noticed that there are
 

00:17:29.540 --> 00:17:31.480
you may have noticed that there are
columns across the operating system

00:17:31.480 --> 00:17:31.490
columns across the operating system
 

00:17:31.490 --> 00:17:33.870
columns across the operating system
called underscore data and they return a

00:17:33.870 --> 00:17:33.880
called underscore data and they return a
 

00:17:33.880 --> 00:17:37.570
called underscore data and they return a
file system path over time you may have

00:17:37.570 --> 00:17:37.580
file system path over time you may have
 

00:17:37.580 --> 00:17:38.620
file system path over time you may have
noticed that a handful of those

00:17:38.620 --> 00:17:38.630
noticed that a handful of those
 

00:17:38.630 --> 00:17:40.090
noticed that a handful of those
underscore data columns have been

00:17:40.090 --> 00:17:40.100
underscore data columns have been
 

00:17:40.100 --> 00:17:43.090
underscore data columns have been
deprecated in previous releases and it's

00:17:43.090 --> 00:17:43.100
deprecated in previous releases and it's
 

00:17:43.100 --> 00:17:45.250
deprecated in previous releases and it's
just to expect that's going to continue

00:17:45.250 --> 00:17:45.260
just to expect that's going to continue
 

00:17:45.260 --> 00:17:46.450
just to expect that's going to continue
so you'll notice more of those

00:17:46.450 --> 00:17:46.460
so you'll notice more of those
 

00:17:46.460 --> 00:17:47.770
so you'll notice more of those
underscore data columns becoming

00:17:47.770 --> 00:17:47.780
underscore data columns becoming
 

00:17:47.780 --> 00:17:48.920
underscore data columns becoming
deprecated over time

00:17:48.920 --> 00:17:48.930
deprecated over time
 

00:17:48.930 --> 00:17:50.510
deprecated over time
we really want to encourage people to

00:17:50.510 --> 00:17:50.520
we really want to encourage people to
 

00:17:50.520 --> 00:17:52.280
we really want to encourage people to
move towards content your eyes as a best

00:17:52.280 --> 00:17:52.290
move towards content your eyes as a best
 

00:17:52.290 --> 00:17:55.640
move towards content your eyes as a best
practice so yeah that's thank you for

00:17:55.640 --> 00:17:55.650
practice so yeah that's thank you for
 

00:17:55.650 --> 00:17:56.090
practice so yeah that's thank you for
your time

00:17:56.090 --> 00:17:56.100
your time
 

00:17:56.100 --> 00:17:57.560
your time
being able to dig into some of the

00:17:57.560 --> 00:17:57.570
being able to dig into some of the
 

00:17:57.570 --> 00:17:59.900
being able to dig into some of the
nitty-gritty areas of storage and I'll

00:17:59.900 --> 00:17:59.910
nitty-gritty areas of storage and I'll
 

00:17:59.910 --> 00:18:01.100
nitty-gritty areas of storage and I'll
be available in the Q&amp;A section

00:18:01.100 --> 00:18:01.110
be available in the Q&amp;A section
 

00:18:01.110 --> 00:18:02.810
be available in the Q&amp;A section
afterwards if you have questions for me

00:18:02.810 --> 00:18:02.820
afterwards if you have questions for me
 

00:18:02.820 --> 00:18:03.770
afterwards if you have questions for me
thanks for your time

00:18:03.770 --> 00:18:03.780
thanks for your time
 

00:18:03.780 --> 00:18:05.010
thanks for your time
[Applause]

00:18:05.010 --> 00:18:05.020
[Applause]
 

00:18:05.020 --> 00:18:18.359
[Applause]
[Music]

