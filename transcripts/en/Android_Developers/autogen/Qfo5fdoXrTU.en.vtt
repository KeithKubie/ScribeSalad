WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.019
 
[Music]

00:00:05.019 --> 00:00:05.029
[Music]
 

00:00:05.029 --> 00:00:07.849
[Music]
my name is Tim Murray and I work on the

00:00:07.849 --> 00:00:07.859
my name is Tim Murray and I work on the
 

00:00:07.859 --> 00:00:09.320
my name is Tim Murray and I work on the
Android performance team and we're going

00:00:09.320 --> 00:00:09.330
Android performance team and we're going
 

00:00:09.330 --> 00:00:12.530
Android performance team and we're going
to talk today about improving your

00:00:12.530 --> 00:00:12.540
to talk today about improving your
 

00:00:12.540 --> 00:00:18.260
to talk today about improving your
applications performance on Android now

00:00:18.260 --> 00:00:18.270
applications performance on Android now
 

00:00:18.270 --> 00:00:20.660
applications performance on Android now
one of the big things that the Android

00:00:20.660 --> 00:00:20.670
one of the big things that the Android
 

00:00:20.670 --> 00:00:22.279
one of the big things that the Android
performance team has done in the past

00:00:22.279 --> 00:00:22.289
performance team has done in the past
 

00:00:22.289 --> 00:00:25.340
performance team has done in the past
year was to optimize the performance of

00:00:25.340 --> 00:00:25.350
year was to optimize the performance of
 

00:00:25.350 --> 00:00:29.210
year was to optimize the performance of
the Google pixel that we looked at

00:00:29.210 --> 00:00:29.220
the Google pixel that we looked at
 

00:00:29.220 --> 00:00:32.840
the Google pixel that we looked at
everything on the pixel from application

00:00:32.840 --> 00:00:32.850
everything on the pixel from application
 

00:00:32.850 --> 00:00:35.299
everything on the pixel from application
code all the way down to the kernel

00:00:35.299 --> 00:00:35.309
code all the way down to the kernel
 

00:00:35.309 --> 00:00:38.680
code all the way down to the kernel
everything in between we tweak things we

00:00:38.680 --> 00:00:38.690
everything in between we tweak things we
 

00:00:38.690 --> 00:00:41.119
everything in between we tweak things we
experimented with things we replaced

00:00:41.119 --> 00:00:41.129
experimented with things we replaced
 

00:00:41.129 --> 00:00:44.479
experimented with things we replaced
other components entirely what did we

00:00:44.479 --> 00:00:44.489
other components entirely what did we
 

00:00:44.489 --> 00:00:47.119
other components entirely what did we
try to do here what did we do to you

00:00:47.119 --> 00:00:47.129
try to do here what did we do to you
 

00:00:47.129 --> 00:00:52.240
try to do here what did we do to you
know what was our focus for performance

00:00:52.240 --> 00:00:52.250
 
 

00:00:52.250 --> 00:00:55.430
 
number one we wanted to hit 60 frames

00:00:55.430 --> 00:00:55.440
number one we wanted to hit 60 frames
 

00:00:55.440 --> 00:00:58.670
number one we wanted to hit 60 frames
per second all the time this means that

00:00:58.670 --> 00:00:58.680
per second all the time this means that
 

00:00:58.680 --> 00:01:02.150
per second all the time this means that
you have to render a frame in 16.7

00:01:02.150 --> 00:01:02.160
you have to render a frame in 16.7
 

00:01:02.160 --> 00:01:02.930
you have to render a frame in 16.7
milliseconds

00:01:02.930 --> 00:01:02.940
milliseconds
 

00:01:02.940 --> 00:01:06.320
milliseconds
all the time if you run at 60 frames per

00:01:06.320 --> 00:01:06.330
all the time if you run at 60 frames per
 

00:01:06.330 --> 00:01:08.270
all the time if you run at 60 frames per
second your app looks fluid your app

00:01:08.270 --> 00:01:08.280
second your app looks fluid your app
 

00:01:08.280 --> 00:01:11.719
second your app looks fluid your app
looks smooth and responsive if you don't

00:01:11.719 --> 00:01:11.729
looks smooth and responsive if you don't
 

00:01:11.729 --> 00:01:14.030
looks smooth and responsive if you don't
run at 60 frames per second people

00:01:14.030 --> 00:01:14.040
run at 60 frames per second people
 

00:01:14.040 --> 00:01:16.310
run at 60 frames per second people
notice the phone doesn't feel fast the

00:01:16.310 --> 00:01:16.320
notice the phone doesn't feel fast the
 

00:01:16.320 --> 00:01:19.130
notice the phone doesn't feel fast the
phone feels like it's struggling so that

00:01:19.130 --> 00:01:19.140
phone feels like it's struggling so that
 

00:01:19.140 --> 00:01:22.490
phone feels like it's struggling so that
kind of consistency is paramount you

00:01:22.490 --> 00:01:22.500
kind of consistency is paramount you
 

00:01:22.500 --> 00:01:24.560
kind of consistency is paramount you
really want to hit 60 frames per second

00:01:24.560 --> 00:01:24.570
really want to hit 60 frames per second
 

00:01:24.570 --> 00:01:27.950
really want to hit 60 frames per second
all the time the second thing we focused

00:01:27.950 --> 00:01:27.960
all the time the second thing we focused
 

00:01:27.960 --> 00:01:30.530
all the time the second thing we focused
on was to make applications start

00:01:30.530 --> 00:01:30.540
on was to make applications start
 

00:01:30.540 --> 00:01:33.380
on was to make applications start
quickly a user will switch between

00:01:33.380 --> 00:01:33.390
quickly a user will switch between
 

00:01:33.390 --> 00:01:35.480
quickly a user will switch between
applications a lot in the course of

00:01:35.480 --> 00:01:35.490
applications a lot in the course of
 

00:01:35.490 --> 00:01:38.060
applications a lot in the course of
normal usage you know if I'm in Gmail

00:01:38.060 --> 00:01:38.070
normal usage you know if I'm in Gmail
 

00:01:38.070 --> 00:01:39.980
normal usage you know if I'm in Gmail
and I click a link that opens in Chrome

00:01:39.980 --> 00:01:39.990
and I click a link that opens in Chrome
 

00:01:39.990 --> 00:01:41.600
and I click a link that opens in Chrome
I want that to go quickly if I click a

00:01:41.600 --> 00:01:41.610
I want that to go quickly if I click a
 

00:01:41.610 --> 00:01:44.749
I want that to go quickly if I click a
link in you know Chrome that takes me to

00:01:44.749 --> 00:01:44.759
link in you know Chrome that takes me to
 

00:01:44.759 --> 00:01:46.850
link in you know Chrome that takes me to
Twitter I want that to go quickly to any

00:01:46.850 --> 00:01:46.860
Twitter I want that to go quickly to any
 

00:01:46.860 --> 00:01:49.490
Twitter I want that to go quickly to any
time that I'm sitting there waiting for

00:01:49.490 --> 00:01:49.500
time that I'm sitting there waiting for
 

00:01:49.500 --> 00:01:51.950
time that I'm sitting there waiting for
the system to switch applications feels

00:01:51.950 --> 00:01:51.960
the system to switch applications feels
 

00:01:51.960 --> 00:01:55.280
the system to switch applications feels
like dead time it's time when I remember

00:01:55.280 --> 00:01:55.290
like dead time it's time when I remember
 

00:01:55.290 --> 00:01:57.590
like dead time it's time when I remember
that I'm using a computer as opposed to

00:01:57.590 --> 00:01:57.600
that I'm using a computer as opposed to
 

00:01:57.600 --> 00:02:00.469
that I'm using a computer as opposed to
just interacting with the stuff I want

00:02:00.469 --> 00:02:00.479
just interacting with the stuff I want
 

00:02:00.479 --> 00:02:03.950
just interacting with the stuff I want
to get done so reducing the amount of

00:02:03.950 --> 00:02:03.960
to get done so reducing the amount of
 

00:02:03.960 --> 00:02:06.440
to get done so reducing the amount of
time you spend switching apps makes the

00:02:06.440 --> 00:02:06.450
time you spend switching apps makes the
 

00:02:06.450 --> 00:02:08.779
time you spend switching apps makes the
system feel effortless it's really

00:02:08.779 --> 00:02:08.789
system feel effortless it's really
 

00:02:08.789 --> 00:02:11.060
system feel effortless it's really
important

00:02:11.060 --> 00:02:11.070
important
 

00:02:11.070 --> 00:02:13.650
important
that's it that's what we focused on

00:02:13.650 --> 00:02:13.660
that's it that's what we focused on
 

00:02:13.660 --> 00:02:16.950
that's it that's what we focused on
system-wide for pixel we just wanted to

00:02:16.950 --> 00:02:16.960
system-wide for pixel we just wanted to
 

00:02:16.960 --> 00:02:20.910
system-wide for pixel we just wanted to
hit those two things consistently if you

00:02:20.910 --> 00:02:20.920
hit those two things consistently if you
 

00:02:20.920 --> 00:02:23.190
hit those two things consistently if you
do these two things when your device is

00:02:23.190 --> 00:02:23.200
do these two things when your device is
 

00:02:23.200 --> 00:02:24.840
do these two things when your device is
you know switching between applications

00:02:24.840 --> 00:02:24.850
you know switching between applications
 

00:02:24.850 --> 00:02:26.970
you know switching between applications
very quickly and running at 60 frames

00:02:26.970 --> 00:02:26.980
very quickly and running at 60 frames
 

00:02:26.980 --> 00:02:30.510
very quickly and running at 60 frames
per second it'll feel fast but more

00:02:30.510 --> 00:02:30.520
per second it'll feel fast but more
 

00:02:30.520 --> 00:02:33.900
per second it'll feel fast but more
importantly if your device runs at 60

00:02:33.900 --> 00:02:33.910
importantly if your device runs at 60
 

00:02:33.910 --> 00:02:35.370
importantly if your device runs at 60
frames per second and switches between

00:02:35.370 --> 00:02:35.380
frames per second and switches between
 

00:02:35.380 --> 00:02:38.160
frames per second and switches between
apps quickly consistently it does it all

00:02:38.160 --> 00:02:38.170
apps quickly consistently it does it all
 

00:02:38.170 --> 00:02:41.190
apps quickly consistently it does it all
the time the device stops stealing like

00:02:41.190 --> 00:02:41.200
the time the device stops stealing like
 

00:02:41.200 --> 00:02:43.220
the time the device stops stealing like
anything it stops feeling like a device

00:02:43.220 --> 00:02:43.230
anything it stops feeling like a device
 

00:02:43.230 --> 00:02:45.300
anything it stops feeling like a device
instead it feels like you're interacting

00:02:45.300 --> 00:02:45.310
instead it feels like you're interacting
 

00:02:45.310 --> 00:02:48.420
instead it feels like you're interacting
directly with the application and that's

00:02:48.420 --> 00:02:48.430
directly with the application and that's
 

00:02:48.430 --> 00:02:50.550
directly with the application and that's
magical for a user that's really

00:02:50.550 --> 00:02:50.560
magical for a user that's really
 

00:02:50.560 --> 00:02:53.400
magical for a user that's really
important but there's a problem with

00:02:53.400 --> 00:02:53.410
important but there's a problem with
 

00:02:53.410 --> 00:02:59.610
important but there's a problem with
this scenario we run apps and apps can

00:02:59.610 --> 00:02:59.620
this scenario we run apps and apps can
 

00:02:59.620 --> 00:03:03.330
this scenario we run apps and apps can
be slow and of course on the system side

00:03:03.330 --> 00:03:03.340
be slow and of course on the system side
 

00:03:03.340 --> 00:03:05.720
be slow and of course on the system side
of things we're constantly trying to

00:03:05.720 --> 00:03:05.730
of things we're constantly trying to
 

00:03:05.730 --> 00:03:09.120
of things we're constantly trying to
make it easier to write fast

00:03:09.120 --> 00:03:09.130
make it easier to write fast
 

00:03:09.130 --> 00:03:11.400
make it easier to write fast
applications and make it harder to write

00:03:11.400 --> 00:03:11.410
applications and make it harder to write
 

00:03:11.410 --> 00:03:15.030
applications and make it harder to write
slow applications but fundamentally as

00:03:15.030 --> 00:03:15.040
slow applications but fundamentally as
 

00:03:15.040 --> 00:03:17.040
slow applications but fundamentally as
an application developer there's always

00:03:17.040 --> 00:03:17.050
an application developer there's always
 

00:03:17.050 --> 00:03:20.070
an application developer there's always
going to be something you can do to make

00:03:20.070 --> 00:03:20.080
going to be something you can do to make
 

00:03:20.080 --> 00:03:22.259
going to be something you can do to make
the system not run at 60 frames per

00:03:22.259 --> 00:03:22.269
the system not run at 60 frames per
 

00:03:22.269 --> 00:03:24.630
the system not run at 60 frames per
second or make your app startup really

00:03:24.630 --> 00:03:24.640
second or make your app startup really
 

00:03:24.640 --> 00:03:28.650
second or make your app startup really
slowly the issue is that from the point

00:03:28.650 --> 00:03:28.660
slowly the issue is that from the point
 

00:03:28.660 --> 00:03:31.380
slowly the issue is that from the point
of view of the user they don't care that

00:03:31.380 --> 00:03:31.390
of view of the user they don't care that
 

00:03:31.390 --> 00:03:34.020
of view of the user they don't care that
it's one app that happens to run slowly

00:03:34.020 --> 00:03:34.030
it's one app that happens to run slowly
 

00:03:34.030 --> 00:03:36.990
it's one app that happens to run slowly
one app is that doesn't run at

00:03:36.990 --> 00:03:37.000
one app is that doesn't run at
 

00:03:37.000 --> 00:03:39.810
one app is that doesn't run at
sixty-fifth or doesn't start up quickly

00:03:39.810 --> 00:03:39.820
sixty-fifth or doesn't start up quickly
 

00:03:39.820 --> 00:03:42.420
sixty-fifth or doesn't start up quickly
ruins that whole magical feeling of the

00:03:42.420 --> 00:03:42.430
ruins that whole magical feeling of the
 

00:03:42.430 --> 00:03:45.449
ruins that whole magical feeling of the
device and it reminds them that they're

00:03:45.449 --> 00:03:45.459
device and it reminds them that they're
 

00:03:45.459 --> 00:03:46.920
device and it reminds them that they're
not interacting with an app they're

00:03:46.920 --> 00:03:46.930
not interacting with an app they're
 

00:03:46.930 --> 00:03:49.680
not interacting with an app they're
touching their phone and then they want

00:03:49.680 --> 00:03:49.690
touching their phone and then they want
 

00:03:49.690 --> 00:03:52.170
touching their phone and then they want
to throw their phone against the wall so

00:03:52.170 --> 00:03:52.180
to throw their phone against the wall so
 

00:03:52.180 --> 00:03:53.729
to throw their phone against the wall so
today we're going to talk about two

00:03:53.729 --> 00:03:53.739
today we're going to talk about two
 

00:03:53.739 --> 00:03:56.490
today we're going to talk about two
tools that we used during pixel really

00:03:56.490 --> 00:03:56.500
tools that we used during pixel really
 

00:03:56.500 --> 00:03:59.750
tools that we used during pixel really
extensively to analyze performance and

00:03:59.750 --> 00:03:59.760
extensively to analyze performance and
 

00:03:59.760 --> 00:04:02.550
extensively to analyze performance and
help you as app developers to figure out

00:04:02.550 --> 00:04:02.560
help you as app developers to figure out
 

00:04:02.560 --> 00:04:04.199
help you as app developers to figure out
what you can do to improve your

00:04:04.199 --> 00:04:04.209
what you can do to improve your
 

00:04:04.209 --> 00:04:07.800
what you can do to improve your
applications performance the first tool

00:04:07.800 --> 00:04:07.810
applications performance the first tool
 

00:04:07.810 --> 00:04:10.650
applications performance the first tool
we're going to talk about is called GFX

00:04:10.650 --> 00:04:10.660
we're going to talk about is called GFX
 

00:04:10.660 --> 00:04:16.560
we're going to talk about is called GFX
info so GFX info is a shell command that

00:04:16.560 --> 00:04:16.570
info so GFX info is a shell command that
 

00:04:16.570 --> 00:04:19.410
info so GFX info is a shell command that
you can use on the device via dumps this

00:04:19.410 --> 00:04:19.420
you can use on the device via dumps this
 

00:04:19.420 --> 00:04:22.680
you can use on the device via dumps this
and all it does is it tell you about the

00:04:22.680 --> 00:04:22.690
and all it does is it tell you about the
 

00:04:22.690 --> 00:04:26.310
and all it does is it tell you about the
rendering time for your application so

00:04:26.310 --> 00:04:26.320
rendering time for your application so
 

00:04:26.320 --> 00:04:30.330
rendering time for your application so
here we can see that we rendered 223

00:04:30.330 --> 00:04:30.340
here we can see that we rendered 223
 

00:04:30.340 --> 00:04:33.660
here we can see that we rendered 223
frames we get the average frame time the

00:04:33.660 --> 00:04:33.670
frames we get the average frame time the
 

00:04:33.670 --> 00:04:36.240
frames we get the average frame time the
90th 95th and 99th percentile frame time

00:04:36.240 --> 00:04:36.250
90th 95th and 99th percentile frame time
 

00:04:36.250 --> 00:04:40.680
90th 95th and 99th percentile frame time
and then it gives us some idea of why

00:04:40.680 --> 00:04:40.690
and then it gives us some idea of why
 

00:04:40.690 --> 00:04:44.340
and then it gives us some idea of why
things were actually slow we use this a

00:04:44.340 --> 00:04:44.350
things were actually slow we use this a
 

00:04:44.350 --> 00:04:47.130
things were actually slow we use this a
lot internally and we really just look

00:04:47.130 --> 00:04:47.140
lot internally and we really just look
 

00:04:47.140 --> 00:04:50.700
lot internally and we really just look
at average frame time 90th 95th and 99th

00:04:50.700 --> 00:04:50.710
at average frame time 90th 95th and 99th
 

00:04:50.710 --> 00:04:53.970
at average frame time 90th 95th and 99th
percentile frame time and that's it

00:04:53.970 --> 00:04:53.980
percentile frame time and that's it
 

00:04:53.980 --> 00:04:56.040
percentile frame time and that's it
that's all this tool does it doesn't

00:04:56.040 --> 00:04:56.050
that's all this tool does it doesn't
 

00:04:56.050 --> 00:04:58.560
that's all this tool does it doesn't
tell you why your app ran slow it

00:04:58.560 --> 00:04:58.570
tell you why your app ran slow it
 

00:04:58.570 --> 00:05:00.270
tell you why your app ran slow it
doesn't tell you anything that you

00:05:00.270 --> 00:05:00.280
doesn't tell you anything that you
 

00:05:00.280 --> 00:05:03.060
doesn't tell you anything that you
should do to fix it so why am i up here

00:05:03.060 --> 00:05:03.070
should do to fix it so why am i up here
 

00:05:03.070 --> 00:05:06.810
should do to fix it so why am i up here
talking about it because you can

00:05:06.810 --> 00:05:06.820
talking about it because you can
 

00:05:06.820 --> 00:05:10.980
talking about it because you can
automate it if you if you take one thing

00:05:10.980 --> 00:05:10.990
automate it if you if you take one thing
 

00:05:10.990 --> 00:05:12.690
automate it if you if you take one thing
away from this talk if you decide to

00:05:12.690 --> 00:05:12.700
away from this talk if you decide to
 

00:05:12.700 --> 00:05:14.750
away from this talk if you decide to
take a nap for the next half hour

00:05:14.750 --> 00:05:14.760
take a nap for the next half hour
 

00:05:14.760 --> 00:05:19.950
take a nap for the next half hour
just run GFX info at the very end of

00:05:19.950 --> 00:05:19.960
just run GFX info at the very end of
 

00:05:19.960 --> 00:05:22.050
just run GFX info at the very end of
whatever automated test you're running

00:05:22.050 --> 00:05:22.060
whatever automated test you're running
 

00:05:22.060 --> 00:05:24.210
whatever automated test you're running
and congratulations now you have a

00:05:24.210 --> 00:05:24.220
and congratulations now you have a
 

00:05:24.220 --> 00:05:26.280
and congratulations now you have a
performance test now you have a thing

00:05:26.280 --> 00:05:26.290
performance test now you have a thing
 

00:05:26.290 --> 00:05:30.480
performance test now you have a thing
you can run regressions on you can spot

00:05:30.480 --> 00:05:30.490
you can run regressions on you can spot
 

00:05:30.490 --> 00:05:32.820
you can run regressions on you can spot
regressions in your application the

00:05:32.820 --> 00:05:32.830
regressions in your application the
 

00:05:32.830 --> 00:05:34.530
regressions in your application the
first time you have a performance

00:05:34.530 --> 00:05:34.540
first time you have a performance
 

00:05:34.540 --> 00:05:37.620
first time you have a performance
regression and your application that you

00:05:37.620 --> 00:05:37.630
regression and your application that you
 

00:05:37.630 --> 00:05:40.980
regression and your application that you
want to track down this will save you so

00:05:40.980 --> 00:05:40.990
want to track down this will save you so
 

00:05:40.990 --> 00:05:43.560
want to track down this will save you so
much time and effort it will pay for

00:05:43.560 --> 00:05:43.570
much time and effort it will pay for
 

00:05:43.570 --> 00:05:47.820
much time and effort it will pay for
itself instantly this is how most of the

00:05:47.820 --> 00:05:47.830
itself instantly this is how most of the
 

00:05:47.830 --> 00:05:50.850
itself instantly this is how most of the
internal Android jank tests work this is

00:05:50.850 --> 00:05:50.860
internal Android jank tests work this is
 

00:05:50.860 --> 00:05:52.770
internal Android jank tests work this is
how we track all jank across the system

00:05:52.770 --> 00:05:52.780
how we track all jank across the system
 

00:05:52.780 --> 00:05:56.460
how we track all jank across the system
it's incredibly useful please just do it

00:05:56.460 --> 00:05:56.470
it's incredibly useful please just do it
 

00:05:56.470 --> 00:06:00.660
it's incredibly useful please just do it
you'll save yourself so much time but

00:06:00.660 --> 00:06:00.670
you'll save yourself so much time but
 

00:06:00.670 --> 00:06:03.270
you'll save yourself so much time but
okay that's GFX and so that only tells

00:06:03.270 --> 00:06:03.280
okay that's GFX and so that only tells
 

00:06:03.280 --> 00:06:06.450
okay that's GFX and so that only tells
you where your performances today it

00:06:06.450 --> 00:06:06.460
you where your performances today it
 

00:06:06.460 --> 00:06:07.860
you where your performances today it
doesn't tell you why your performances

00:06:07.860 --> 00:06:07.870
doesn't tell you why your performances
 

00:06:07.870 --> 00:06:09.410
doesn't tell you why your performances
that way or what you should do about it

00:06:09.410 --> 00:06:09.420
that way or what you should do about it
 

00:06:09.420 --> 00:06:11.970
that way or what you should do about it
for that we have to turn to a different

00:06:11.970 --> 00:06:11.980
for that we have to turn to a different
 

00:06:11.980 --> 00:06:13.860
for that we have to turn to a different
tool my favorite tool really the only

00:06:13.860 --> 00:06:13.870
tool my favorite tool really the only
 

00:06:13.870 --> 00:06:19.590
tool my favorite tool really the only
tool I ever use just trades so a lot of

00:06:19.590 --> 00:06:19.600
tool I ever use just trades so a lot of
 

00:06:19.600 --> 00:06:21.150
tool I ever use just trades so a lot of
developers have tried to de-stress and

00:06:21.150 --> 00:06:21.160
developers have tried to de-stress and
 

00:06:21.160 --> 00:06:23.490
developers have tried to de-stress and
they've told me they have no idea what's

00:06:23.490 --> 00:06:23.500
they've told me they have no idea what's
 

00:06:23.500 --> 00:06:25.170
they've told me they have no idea what's
going on when they look at systrace and

00:06:25.170 --> 00:06:25.180
going on when they look at systrace and
 

00:06:25.180 --> 00:06:27.660
going on when they look at systrace and
that's fair I can stand up here and tell

00:06:27.660 --> 00:06:27.670
that's fair I can stand up here and tell
 

00:06:27.670 --> 00:06:30.480
that's fair I can stand up here and tell
you that's this trace is easy it's not

00:06:30.480 --> 00:06:30.490
you that's this trace is easy it's not
 

00:06:30.490 --> 00:06:32.240
you that's this trace is easy it's not
really easy

00:06:32.240 --> 00:06:32.250
really easy
 

00:06:32.250 --> 00:06:35.850
really easy
systrace is not a CPU profiler this

00:06:35.850 --> 00:06:35.860
systrace is not a CPU profiler this
 

00:06:35.860 --> 00:06:38.910
systrace is not a CPU profiler this
trace is instead a system-wide tracing

00:06:38.910 --> 00:06:38.920
trace is instead a system-wide tracing
 

00:06:38.920 --> 00:06:41.760
trace is instead a system-wide tracing
tool the first thing that means is

00:06:41.760 --> 00:06:41.770
tool the first thing that means is
 

00:06:41.770 --> 00:06:43.860
tool the first thing that means is
systrace doesn't care about your app it

00:06:43.860 --> 00:06:43.870
systrace doesn't care about your app it
 

00:06:43.870 --> 00:06:46.140
systrace doesn't care about your app it
doesn't do anything special to your

00:06:46.140 --> 00:06:46.150
doesn't do anything special to your
 

00:06:46.150 --> 00:06:48.750
doesn't do anything special to your
application it's not going to go peek at

00:06:48.750 --> 00:06:48.760
application it's not going to go peek at
 

00:06:48.760 --> 00:06:50.190
application it's not going to go peek at
your applications

00:06:50.190 --> 00:06:50.200
your applications
 

00:06:50.200 --> 00:06:52.440
your applications
pulse tax and say hey you spent a really

00:06:52.440 --> 00:06:52.450
pulse tax and say hey you spent a really
 

00:06:52.450 --> 00:06:55.410
pulse tax and say hey you spent a really
long time in this function it doesn't do

00:06:55.410 --> 00:06:55.420
long time in this function it doesn't do
 

00:06:55.420 --> 00:06:57.240
long time in this function it doesn't do
that it just tells you when your

00:06:57.240 --> 00:06:57.250
that it just tells you when your
 

00:06:57.250 --> 00:06:58.980
that it just tells you when your
application was running and certain

00:06:58.980 --> 00:06:58.990
application was running and certain
 

00:06:58.990 --> 00:07:00.840
application was running and certain
events that occur within your

00:07:00.840 --> 00:07:00.850
events that occur within your
 

00:07:00.850 --> 00:07:05.100
events that occur within your
application it also tells you everything

00:07:05.100 --> 00:07:05.110
application it also tells you everything
 

00:07:05.110 --> 00:07:07.980
application it also tells you everything
about the rest of the system it will

00:07:07.980 --> 00:07:07.990
about the rest of the system it will
 

00:07:07.990 --> 00:07:09.510
about the rest of the system it will
tell you things about the kernel it will

00:07:09.510 --> 00:07:09.520
tell you things about the kernel it will
 

00:07:09.520 --> 00:07:10.770
tell you things about the kernel it will
tell you things about the graphics

00:07:10.770 --> 00:07:10.780
tell you things about the graphics
 

00:07:10.780 --> 00:07:13.590
tell you things about the graphics
pipeline it'll tell you things about the

00:07:13.590 --> 00:07:13.600
pipeline it'll tell you things about the
 

00:07:13.600 --> 00:07:16.020
pipeline it'll tell you things about the
framework and activity manager and

00:07:16.020 --> 00:07:16.030
framework and activity manager and
 

00:07:16.030 --> 00:07:18.150
framework and activity manager and
things like that really if there's any

00:07:18.150 --> 00:07:18.160
things like that really if there's any
 

00:07:18.160 --> 00:07:20.070
things like that really if there's any
information you want about an Android

00:07:20.070 --> 00:07:20.080
information you want about an Android
 

00:07:20.080 --> 00:07:23.610
information you want about an Android
device we have probably surfaced it via

00:07:23.610 --> 00:07:23.620
device we have probably surfaced it via
 

00:07:23.620 --> 00:07:27.420
device we have probably surfaced it via
systrace we use it for everything just

00:07:27.420 --> 00:07:27.430
systrace we use it for everything just
 

00:07:27.430 --> 00:07:29.940
systrace we use it for everything just
to be just to reinforce how important

00:07:29.940 --> 00:07:29.950
to be just to reinforce how important
 

00:07:29.950 --> 00:07:32.580
to be just to reinforce how important
this trace is in the past year I've

00:07:32.580 --> 00:07:32.590
this trace is in the past year I've
 

00:07:32.590 --> 00:07:37.500
this trace is in the past year I've
looked at somewhere over 2000 traces we

00:07:37.500 --> 00:07:37.510
looked at somewhere over 2000 traces we
 

00:07:37.510 --> 00:07:41.580
looked at somewhere over 2000 traces we
use to trace a whole lot now systrace is

00:07:41.580 --> 00:07:41.590
use to trace a whole lot now systrace is
 

00:07:41.590 --> 00:07:44.010
use to trace a whole lot now systrace is
not in android studio if you want to get

00:07:44.010 --> 00:07:44.020
not in android studio if you want to get
 

00:07:44.020 --> 00:07:46.050
not in android studio if you want to get
this trace there are two ways to get it

00:07:46.050 --> 00:07:46.060
this trace there are two ways to get it
 

00:07:46.060 --> 00:07:48.780
this trace there are two ways to get it
first of all it's in platform tools in

00:07:48.780 --> 00:07:48.790
first of all it's in platform tools in
 

00:07:48.790 --> 00:07:51.030
first of all it's in platform tools in
the Android SDK you can get a version of

00:07:51.030 --> 00:07:51.040
the Android SDK you can get a version of
 

00:07:51.040 --> 00:07:53.520
the Android SDK you can get a version of
this trace from there what I like to do

00:07:53.520 --> 00:07:53.530
this trace from there what I like to do
 

00:07:53.530 --> 00:07:55.410
this trace from there what I like to do
though is I get this trace from the

00:07:55.410 --> 00:07:55.420
though is I get this trace from the
 

00:07:55.420 --> 00:07:57.660
though is I get this trace from the
repository where it's developed it's

00:07:57.660 --> 00:07:57.670
repository where it's developed it's
 

00:07:57.670 --> 00:08:00.990
repository where it's developed it's
part of a project called catapult which

00:08:00.990 --> 00:08:01.000
part of a project called catapult which
 

00:08:01.000 --> 00:08:03.480
part of a project called catapult which
is on github catapult is owned by

00:08:03.480 --> 00:08:03.490
is on github catapult is owned by
 

00:08:03.490 --> 00:08:05.340
is on github catapult is owned by
members of the google chrome and Android

00:08:05.340 --> 00:08:05.350
members of the google chrome and Android
 

00:08:05.350 --> 00:08:09.360
members of the google chrome and Android
teams so upstream catapult is always

00:08:09.360 --> 00:08:09.370
teams so upstream catapult is always
 

00:08:09.370 --> 00:08:10.980
teams so upstream catapult is always
improving there are always new features

00:08:10.980 --> 00:08:10.990
improving there are always new features
 

00:08:10.990 --> 00:08:15.150
improving there are always new features
I usually get papa tree catapult once

00:08:15.150 --> 00:08:15.160
I usually get papa tree catapult once
 

00:08:15.160 --> 00:08:17.460
I usually get papa tree catapult once
you get that you'll have this Python

00:08:17.460 --> 00:08:17.470
you get that you'll have this Python
 

00:08:17.470 --> 00:08:20.520
you get that you'll have this Python
executable that you can run and you can

00:08:20.520 --> 00:08:20.530
executable that you can run and you can
 

00:08:20.530 --> 00:08:23.490
executable that you can run and you can
get a trace now how does this trace

00:08:23.490 --> 00:08:23.500
get a trace now how does this trace
 

00:08:23.500 --> 00:08:25.110
get a trace now how does this trace
actually work what does it actually tell

00:08:25.110 --> 00:08:25.120
actually work what does it actually tell
 

00:08:25.120 --> 00:08:30.180
actually work what does it actually tell
you this trace is three components at

00:08:30.180 --> 00:08:30.190
you this trace is three components at
 

00:08:30.190 --> 00:08:33.000
you this trace is three components at
the bottom is this thing called F trace

00:08:33.000 --> 00:08:33.010
the bottom is this thing called F trace
 

00:08:33.010 --> 00:08:37.589
the bottom is this thing called F trace
F trace is a Linux kernel feature that

00:08:37.589 --> 00:08:37.599
F trace is a Linux kernel feature that
 

00:08:37.599 --> 00:08:41.370
F trace is a Linux kernel feature that
allows the kernel and user space to

00:08:41.370 --> 00:08:41.380
allows the kernel and user space to
 

00:08:41.380 --> 00:08:44.400
allows the kernel and user space to
write event information into a central

00:08:44.400 --> 00:08:44.410
write event information into a central
 

00:08:44.410 --> 00:08:45.620
write event information into a central
buffer

00:08:45.620 --> 00:08:45.630
buffer
 

00:08:45.630 --> 00:08:48.900
buffer
what this means basically is that you

00:08:48.900 --> 00:08:48.910
what this means basically is that you
 

00:08:48.910 --> 00:08:51.630
what this means basically is that you
can get a journal of any event that

00:08:51.630 --> 00:08:51.640
can get a journal of any event that
 

00:08:51.640 --> 00:08:53.820
can get a journal of any event that
happened on the system so the colonel

00:08:53.820 --> 00:08:53.830
happened on the system so the colonel
 

00:08:53.830 --> 00:08:56.010
happened on the system so the colonel
will tell us things like hey this

00:08:56.010 --> 00:08:56.020
will tell us things like hey this
 

00:08:56.020 --> 00:08:57.960
will tell us things like hey this
process started running on this CPU or

00:08:57.960 --> 00:08:57.970
process started running on this CPU or
 

00:08:57.970 --> 00:09:01.760
process started running on this CPU or
hey the clocks changed on this CPU

00:09:01.760 --> 00:09:01.770
hey the clocks changed on this CPU
 

00:09:01.770 --> 00:09:05.160
hey the clocks changed on this CPU
that's great it's really the level but

00:09:05.160 --> 00:09:05.170
that's great it's really the level but
 

00:09:05.170 --> 00:09:08.190
that's great it's really the level but
we can use it the next thing above F

00:09:08.190 --> 00:09:08.200
we can use it the next thing above F
 

00:09:08.200 --> 00:09:10.230
we can use it the next thing above F
trace is a program called a trace a

00:09:10.230 --> 00:09:10.240
trace is a program called a trace a
 

00:09:10.240 --> 00:09:13.500
trace is a program called a trace a
trace is an Android program on the

00:09:13.500 --> 00:09:13.510
trace is an Android program on the
 

00:09:13.510 --> 00:09:16.800
trace is an Android program on the
device that is installed automatically

00:09:16.800 --> 00:09:16.810
device that is installed automatically
 

00:09:16.810 --> 00:09:19.250
device that is installed automatically
and the Android images on every device

00:09:19.250 --> 00:09:19.260
and the Android images on every device
 

00:09:19.260 --> 00:09:22.290
and the Android images on every device
all it really does is it configures F

00:09:22.290 --> 00:09:22.300
all it really does is it configures F
 

00:09:22.300 --> 00:09:26.000
all it really does is it configures F
trace but it also can configures

00:09:26.000 --> 00:09:26.010
trace but it also can configures
 

00:09:26.010 --> 00:09:29.490
trace but it also can configures
userspace tracing so a trace will go and

00:09:29.490 --> 00:09:29.500
userspace tracing so a trace will go and
 

00:09:29.500 --> 00:09:31.500
userspace tracing so a trace will go and
turn on all of these different trace

00:09:31.500 --> 00:09:31.510
turn on all of these different trace
 

00:09:31.510 --> 00:09:33.990
turn on all of these different trace
points inside of the Android user space

00:09:33.990 --> 00:09:34.000
points inside of the Android user space
 

00:09:34.000 --> 00:09:37.440
points inside of the Android user space
so here we can get things like you want

00:09:37.440 --> 00:09:37.450
so here we can get things like you want
 

00:09:37.450 --> 00:09:39.000
so here we can get things like you want
to find out what window manager thought

00:09:39.000 --> 00:09:39.010
to find out what window manager thought
 

00:09:39.010 --> 00:09:41.730
to find out what window manager thought
about your application a trace will turn

00:09:41.730 --> 00:09:41.740
about your application a trace will turn
 

00:09:41.740 --> 00:09:44.700
about your application a trace will turn
that on or activity manager or any other

00:09:44.700 --> 00:09:44.710
that on or activity manager or any other
 

00:09:44.710 --> 00:09:47.610
that on or activity manager or any other
part of the android framework all of

00:09:47.610 --> 00:09:47.620
part of the android framework all of
 

00:09:47.620 --> 00:09:50.460
part of the android framework all of
that is controlled by a trace the

00:09:50.460 --> 00:09:50.470
that is controlled by a trace the
 

00:09:50.470 --> 00:09:54.150
that is controlled by a trace the
topmost layer is systrace itself this

00:09:54.150 --> 00:09:54.160
topmost layer is systrace itself this
 

00:09:54.160 --> 00:09:56.040
topmost layer is systrace itself this
trace then lives on your host

00:09:56.040 --> 00:09:56.050
trace then lives on your host
 

00:09:56.050 --> 00:09:57.240
trace then lives on your host
development machine

00:09:57.240 --> 00:09:57.250
development machine
 

00:09:57.250 --> 00:09:59.850
development machine
and it gets the results from a trace and

00:09:59.850 --> 00:09:59.860
and it gets the results from a trace and
 

00:09:59.860 --> 00:10:05.190
and it gets the results from a trace and
it wraps those results in a nice HTML

00:10:05.190 --> 00:10:05.200
it wraps those results in a nice HTML
 

00:10:05.200 --> 00:10:08.670
it wraps those results in a nice HTML
file you get this giant potentially tens

00:10:08.670 --> 00:10:08.680
file you get this giant potentially tens
 

00:10:08.680 --> 00:10:11.430
file you get this giant potentially tens
of Meg's or even hundreds of Meg's HTML

00:10:11.430 --> 00:10:11.440
of Meg's or even hundreds of Meg's HTML
 

00:10:11.440 --> 00:10:14.310
of Meg's or even hundreds of Meg's HTML
file that contains a trace so all you

00:10:14.310 --> 00:10:14.320
file that contains a trace so all you
 

00:10:14.320 --> 00:10:15.600
file that contains a trace so all you
have to do to look at the trace is you

00:10:15.600 --> 00:10:15.610
have to do to look at the trace is you
 

00:10:15.610 --> 00:10:17.460
have to do to look at the trace is you
open the HTML file it's pretty

00:10:17.460 --> 00:10:17.470
open the HTML file it's pretty
 

00:10:17.470 --> 00:10:19.590
open the HTML file it's pretty
convenient and it actually makes sharing

00:10:19.590 --> 00:10:19.600
convenient and it actually makes sharing
 

00:10:19.600 --> 00:10:23.790
convenient and it actually makes sharing
traces incredibly easy now the first

00:10:23.790 --> 00:10:23.800
traces incredibly easy now the first
 

00:10:23.800 --> 00:10:26.700
traces incredibly easy now the first
thing you should do when you decide to

00:10:26.700 --> 00:10:26.710
thing you should do when you decide to
 

00:10:26.710 --> 00:10:28.950
thing you should do when you decide to
start tracing a device is you should

00:10:28.950 --> 00:10:28.960
start tracing a device is you should
 

00:10:28.960 --> 00:10:30.810
start tracing a device is you should
look at the categories available on that

00:10:30.810 --> 00:10:30.820
look at the categories available on that
 

00:10:30.820 --> 00:10:34.080
look at the categories available on that
device this trace events are separated

00:10:34.080 --> 00:10:34.090
device this trace events are separated
 

00:10:34.090 --> 00:10:37.680
device this trace events are separated
into categories and those categories

00:10:37.680 --> 00:10:37.690
into categories and those categories
 

00:10:37.690 --> 00:10:40.320
into categories and those categories
will vary from OS versions OS version

00:10:40.320 --> 00:10:40.330
will vary from OS versions OS version
 

00:10:40.330 --> 00:10:44.270
will vary from OS versions OS version
and potentially device the device in

00:10:44.270 --> 00:10:44.280
and potentially device the device in
 

00:10:44.280 --> 00:10:46.920
and potentially device the device in
general the important stuff will always

00:10:46.920 --> 00:10:46.930
general the important stuff will always
 

00:10:46.930 --> 00:10:49.440
general the important stuff will always
be there the core stuff that you want as

00:10:49.440 --> 00:10:49.450
be there the core stuff that you want as
 

00:10:49.450 --> 00:10:51.060
be there the core stuff that you want as
an app developer we have tests for that

00:10:51.060 --> 00:10:51.070
an app developer we have tests for that
 

00:10:51.070 --> 00:10:55.230
an app developer we have tests for that
so they'll be on every device now let's

00:10:55.230 --> 00:10:55.240
so they'll be on every device now let's
 

00:10:55.240 --> 00:10:57.180
so they'll be on every device now let's
actually run a trace and see what that

00:10:57.180 --> 00:10:57.190
actually run a trace and see what that
 

00:10:57.190 --> 00:10:59.329
actually run a trace and see what that
would look like

00:10:59.329 --> 00:10:59.339
would look like
 

00:10:59.339 --> 00:11:01.980
would look like
so this is the command I used for the

00:11:01.980 --> 00:11:01.990
so this is the command I used for the
 

00:11:01.990 --> 00:11:03.319
so this is the command I used for the
trace you'll see for the rest of this

00:11:03.319 --> 00:11:03.329
trace you'll see for the rest of this
 

00:11:03.329 --> 00:11:07.739
trace you'll see for the rest of this
this talk and the way this works is you

00:11:07.739 --> 00:11:07.749
this talk and the way this works is you
 

00:11:07.749 --> 00:11:11.280
this talk and the way this works is you
provide the list of event tags that you

00:11:11.280 --> 00:11:11.290
provide the list of event tags that you
 

00:11:11.290 --> 00:11:17.609
provide the list of event tags that you
want in your trace and here we have sket

00:11:17.609 --> 00:11:17.619
want in your trace and here we have sket
 

00:11:17.619 --> 00:11:19.739
want in your trace and here we have sket
which is the kernel scheduler we have

00:11:19.739 --> 00:11:19.749
which is the kernel scheduler we have
 

00:11:19.749 --> 00:11:23.429
which is the kernel scheduler we have
freak for CPU frequency information idle

00:11:23.429 --> 00:11:23.439
freak for CPU frequency information idle
 

00:11:23.439 --> 00:11:25.379
freak for CPU frequency information idle
will tell us about C Pete when the CPU

00:11:25.379 --> 00:11:25.389
will tell us about C Pete when the CPU
 

00:11:25.389 --> 00:11:29.340
will tell us about C Pete when the CPU
goes idle and W M tell us about the

00:11:29.340 --> 00:11:29.350
goes idle and W M tell us about the
 

00:11:29.350 --> 00:11:30.960
goes idle and W M tell us about the
Android activity manager and window

00:11:30.960 --> 00:11:30.970
Android activity manager and window
 

00:11:30.970 --> 00:11:34.650
Android activity manager and window
manager GFX will tell us everything you

00:11:34.650 --> 00:11:34.660
manager GFX will tell us everything you
 

00:11:34.660 --> 00:11:36.720
manager GFX will tell us everything you
ever wanted to know about the Android

00:11:36.720 --> 00:11:36.730
ever wanted to know about the Android
 

00:11:36.730 --> 00:11:39.030
ever wanted to know about the Android
graphics pipeline view will tell you

00:11:39.030 --> 00:11:39.040
graphics pipeline view will tell you
 

00:11:39.040 --> 00:11:40.699
graphics pipeline view will tell you
about the view hierarchy inside

00:11:40.699 --> 00:11:40.709
about the view hierarchy inside
 

00:11:40.709 --> 00:11:43.160
about the view hierarchy inside
applications which can be really useful

00:11:43.160 --> 00:11:43.170
applications which can be really useful
 

00:11:43.170 --> 00:11:45.900
applications which can be really useful
dalvik enables the trace point for the

00:11:45.900 --> 00:11:45.910
dalvik enables the trace point for the
 

00:11:45.910 --> 00:11:50.489
dalvik enables the trace point for the
art VM input will tell you when you're

00:11:50.489 --> 00:11:50.499
art VM input will tell you when you're
 

00:11:50.499 --> 00:11:52.290
art VM input will tell you when you're
actually touching the screen and binder

00:11:52.290 --> 00:11:52.300
actually touching the screen and binder
 

00:11:52.300 --> 00:11:54.359
actually touching the screen and binder
driver will tell you exactly when a

00:11:54.359 --> 00:11:54.369
driver will tell you exactly when a
 

00:11:54.369 --> 00:11:57.239
driver will tell you exactly when a
process is making an IPC call over

00:11:57.239 --> 00:11:57.249
process is making an IPC call over
 

00:11:57.249 --> 00:11:59.879
process is making an IPC call over
binder to another process the last three

00:11:59.879 --> 00:11:59.889
binder to another process the last three
 

00:11:59.889 --> 00:12:02.939
binder to another process the last three
arguments are special dash T just says

00:12:02.939 --> 00:12:02.949
arguments are special dash T just says
 

00:12:02.949 --> 00:12:04.530
arguments are special dash T just says
we're going to run the trace for five

00:12:04.530 --> 00:12:04.540
we're going to run the trace for five
 

00:12:04.540 --> 00:12:07.559
we're going to run the trace for five
seconds if you omit the dash T systrace

00:12:07.559 --> 00:12:07.569
seconds if you omit the dash T systrace
 

00:12:07.569 --> 00:12:09.090
seconds if you omit the dash T systrace
will just prompt you to press ENTER when

00:12:09.090 --> 00:12:09.100
will just prompt you to press ENTER when
 

00:12:09.100 --> 00:12:12.150
will just prompt you to press ENTER when
you want to stop tracing - oh just

00:12:12.150 --> 00:12:12.160
you want to stop tracing - oh just
 

00:12:12.160 --> 00:12:14.429
you want to stop tracing - oh just
controls where you write the file so

00:12:14.429 --> 00:12:14.439
controls where you write the file so
 

00:12:14.439 --> 00:12:15.780
controls where you write the file so
we're going to write the i/o HTML

00:12:15.780 --> 00:12:15.790
we're going to write the i/o HTML
 

00:12:15.790 --> 00:12:19.139
we're going to write the i/o HTML
instead of trace dot HTML - B is a

00:12:19.139 --> 00:12:19.149
instead of trace dot HTML - B is a
 

00:12:19.149 --> 00:12:22.799
instead of trace dot HTML - B is a
little odd so I mentioned F trace and

00:12:22.799 --> 00:12:22.809
little odd so I mentioned F trace and
 

00:12:22.809 --> 00:12:25.499
little odd so I mentioned F trace and
the F trace buffer the FJ stuffer is a

00:12:25.499 --> 00:12:25.509
the F trace buffer the FJ stuffer is a
 

00:12:25.509 --> 00:12:29.789
the F trace buffer the FJ stuffer is a
tick size by default it's I think 1.4

00:12:29.789 --> 00:12:29.799
tick size by default it's I think 1.4
 

00:12:29.799 --> 00:12:33.090
tick size by default it's I think 1.4
megabytes and what happens if you fill

00:12:33.090 --> 00:12:33.100
megabytes and what happens if you fill
 

00:12:33.100 --> 00:12:34.530
megabytes and what happens if you fill
this buffer if you have too many events

00:12:34.530 --> 00:12:34.540
this buffer if you have too many events
 

00:12:34.540 --> 00:12:37.079
this buffer if you have too many events
for the buffer is you'll get a trace and

00:12:37.079 --> 00:12:37.089
for the buffer is you'll get a trace and
 

00:12:37.089 --> 00:12:39.179
for the buffer is you'll get a trace and
then at the end things will just kind of

00:12:39.179 --> 00:12:39.189
then at the end things will just kind of
 

00:12:39.189 --> 00:12:40.410
then at the end things will just kind of
stop happening

00:12:40.410 --> 00:12:40.420
stop happening
 

00:12:40.420 --> 00:12:41.910
stop happening
you think you drank the trace for five

00:12:41.910 --> 00:12:41.920
you think you drank the trace for five
 

00:12:41.920 --> 00:12:43.590
you think you drank the trace for five
seconds that maybe you only actually

00:12:43.590 --> 00:12:43.600
seconds that maybe you only actually
 

00:12:43.600 --> 00:12:45.590
seconds that maybe you only actually
have three and a half seconds worth of

00:12:45.590 --> 00:12:45.600
have three and a half seconds worth of
 

00:12:45.600 --> 00:12:49.139
have three and a half seconds worth of
events in there when I take a trace I

00:12:49.139 --> 00:12:49.149
events in there when I take a trace I
 

00:12:49.149 --> 00:12:51.449
events in there when I take a trace I
always increase the buffer size so here

00:12:51.449 --> 00:12:51.459
always increase the buffer size so here
 

00:12:51.459 --> 00:12:54.739
always increase the buffer size so here
I've increased it to 16 megabytes and

00:12:54.739 --> 00:12:54.749
I've increased it to 16 megabytes and
 

00:12:54.749 --> 00:12:57.329
I've increased it to 16 megabytes and
for this kind of trace we probably don't

00:12:57.329 --> 00:12:57.339
for this kind of trace we probably don't
 

00:12:57.339 --> 00:12:59.220
for this kind of trace we probably don't
have to increase the buffer size but

00:12:59.220 --> 00:12:59.230
have to increase the buffer size but
 

00:12:59.230 --> 00:13:01.139
have to increase the buffer size but
it's always better to increase the

00:13:01.139 --> 00:13:01.149
it's always better to increase the
 

00:13:01.149 --> 00:13:03.989
it's always better to increase the
buffer size and not have to take a trace

00:13:03.989 --> 00:13:03.999
buffer size and not have to take a trace
 

00:13:03.999 --> 00:13:05.250
buffer size and not have to take a trace
a second time then

00:13:05.250 --> 00:13:05.260
a second time then
 

00:13:05.260 --> 00:13:08.520
a second time then
and be overly conservative with the

00:13:08.520 --> 00:13:08.530
and be overly conservative with the
 

00:13:08.530 --> 00:13:13.200
and be overly conservative with the
buffer sighs all right we run this we

00:13:13.200 --> 00:13:13.210
buffer sighs all right we run this we
 

00:13:13.210 --> 00:13:15.990
buffer sighs all right we run this we
now get a trace what does the trace

00:13:15.990 --> 00:13:16.000
now get a trace what does the trace
 

00:13:16.000 --> 00:13:21.090
now get a trace what does the trace
actually look like there is a lot going

00:13:21.090 --> 00:13:21.100
actually look like there is a lot going
 

00:13:21.100 --> 00:13:24.450
actually look like there is a lot going
on in this trace and if you're in the

00:13:24.450 --> 00:13:24.460
on in this trace and if you're in the
 

00:13:24.460 --> 00:13:25.680
on in this trace and if you're in the
back I'm sorry it's probably really hard

00:13:25.680 --> 00:13:25.690
back I'm sorry it's probably really hard
 

00:13:25.690 --> 00:13:29.040
back I'm sorry it's probably really hard
to see the first thing to know about the

00:13:29.040 --> 00:13:29.050
to see the first thing to know about the
 

00:13:29.050 --> 00:13:34.020
to see the first thing to know about the
trace is that it is a Timeline view it

00:13:34.020 --> 00:13:34.030
trace is that it is a Timeline view it
 

00:13:34.030 --> 00:13:37.830
trace is that it is a Timeline view it
moves left to right and you can scroll

00:13:37.830 --> 00:13:37.840
moves left to right and you can scroll
 

00:13:37.840 --> 00:13:40.050
moves left to right and you can scroll
it left to right and time moves from

00:13:40.050 --> 00:13:40.060
it left to right and time moves from
 

00:13:40.060 --> 00:13:41.790
it left to right and time moves from
left to right so the left side here is

00:13:41.790 --> 00:13:41.800
left to right so the left side here is
 

00:13:41.800 --> 00:13:43.230
left to right so the left side here is
the beginning of the trace that's 0

00:13:43.230 --> 00:13:43.240
the beginning of the trace that's 0
 

00:13:43.240 --> 00:13:45.440
the beginning of the trace that's 0
seconds when we kicked off the trace and

00:13:45.440 --> 00:13:45.450
seconds when we kicked off the trace and
 

00:13:45.450 --> 00:13:48.270
seconds when we kicked off the trace and
5 seconds is you know when the trace

00:13:48.270 --> 00:13:48.280
5 seconds is you know when the trace
 

00:13:48.280 --> 00:13:52.890
5 seconds is you know when the trace
ends you can move around the trace you

00:13:52.890 --> 00:13:52.900
ends you can move around the trace you
 

00:13:52.900 --> 00:13:56.340
ends you can move around the trace you
can move you can pan in time with a and

00:13:56.340 --> 00:13:56.350
can move you can pan in time with a and
 

00:13:56.350 --> 00:13:59.130
can move you can pan in time with a and
D keys and you can zoom in and out on

00:13:59.130 --> 00:13:59.140
D keys and you can zoom in and out on
 

00:13:59.140 --> 00:14:00.330
D keys and you can zoom in and out on
whatever section of the trace you're

00:14:00.330 --> 00:14:00.340
whatever section of the trace you're
 

00:14:00.340 --> 00:14:03.690
whatever section of the trace you're
looking at with WS so it's just you know

00:14:03.690 --> 00:14:03.700
looking at with WS so it's just you know
 

00:14:03.700 --> 00:14:07.620
looking at with WS so it's just you know
lossky like a first-person shooter the

00:14:07.620 --> 00:14:07.630
lossky like a first-person shooter the
 

00:14:07.630 --> 00:14:09.990
lossky like a first-person shooter the
trace also scrolls up and down so here

00:14:09.990 --> 00:14:10.000
trace also scrolls up and down so here
 

00:14:10.000 --> 00:14:11.490
trace also scrolls up and down so here
you see there are a bunch of rows up

00:14:11.490 --> 00:14:11.500
you see there are a bunch of rows up
 

00:14:11.500 --> 00:14:13.260
you see there are a bunch of rows up
here there's this kernel section and

00:14:13.260 --> 00:14:13.270
here there's this kernel section and
 

00:14:13.270 --> 00:14:16.500
here there's this kernel section and
then a calculator section there are way

00:14:16.500 --> 00:14:16.510
then a calculator section there are way
 

00:14:16.510 --> 00:14:18.120
then a calculator section there are way
more rows and fit on the screen because

00:14:18.120 --> 00:14:18.130
more rows and fit on the screen because
 

00:14:18.130 --> 00:14:20.580
more rows and fit on the screen because
there is one row generally for every

00:14:20.580 --> 00:14:20.590
there is one row generally for every
 

00:14:20.590 --> 00:14:23.400
there is one row generally for every
thread that is run during the trace so

00:14:23.400 --> 00:14:23.410
thread that is run during the trace so
 

00:14:23.410 --> 00:14:25.260
thread that is run during the trace so
you may have hundreds or thousands of

00:14:25.260 --> 00:14:25.270
you may have hundreds or thousands of
 

00:14:25.270 --> 00:14:29.910
you may have hundreds or thousands of
rows in your trace the next thing to to

00:14:29.910 --> 00:14:29.920
rows in your trace the next thing to to
 

00:14:29.920 --> 00:14:31.980
rows in your trace the next thing to to
look at when you get start using this

00:14:31.980 --> 00:14:31.990
look at when you get start using this
 

00:14:31.990 --> 00:14:34.290
look at when you get start using this
trace is there's this palette of tools

00:14:34.290 --> 00:14:34.300
trace is there's this palette of tools
 

00:14:34.300 --> 00:14:36.570
trace is there's this palette of tools
that I have over here in the upper right

00:14:36.570 --> 00:14:36.580
that I have over here in the upper right
 

00:14:36.580 --> 00:14:38.670
that I have over here in the upper right
hand corner you can click on these tools

00:14:38.670 --> 00:14:38.680
hand corner you can click on these tools
 

00:14:38.680 --> 00:14:40.470
hand corner you can click on these tools
you can also access them with numbers

00:14:40.470 --> 00:14:40.480
you can also access them with numbers
 

00:14:40.480 --> 00:14:43.110
you can also access them with numbers
one through four number one is the

00:14:43.110 --> 00:14:43.120
one through four number one is the
 

00:14:43.120 --> 00:14:44.940
one through four number one is the
pointer that's the main tool we use when

00:14:44.940 --> 00:14:44.950
pointer that's the main tool we use when
 

00:14:44.950 --> 00:14:47.250
pointer that's the main tool we use when
we use this trace that lets us click the

00:14:47.250 --> 00:14:47.260
we use this trace that lets us click the
 

00:14:47.260 --> 00:14:49.530
we use this trace that lets us click the
individual events that we see in the

00:14:49.530 --> 00:14:49.540
individual events that we see in the
 

00:14:49.540 --> 00:14:51.660
individual events that we see in the
trace and get some information about

00:14:51.660 --> 00:14:51.670
trace and get some information about
 

00:14:51.670 --> 00:14:53.730
trace and get some information about
them and when you click an event it will

00:14:53.730 --> 00:14:53.740
them and when you click an event it will
 

00:14:53.740 --> 00:14:56.850
them and when you click an event it will
show up in the bottom half of the screen

00:14:56.850 --> 00:14:56.860
show up in the bottom half of the screen
 

00:14:56.860 --> 00:14:59.730
show up in the bottom half of the screen
like that so here we can see calculator

00:14:59.730 --> 00:14:59.740
like that so here we can see calculator
 

00:14:59.740 --> 00:15:03.270
like that so here we can see calculator
is running we see the process ID we see

00:15:03.270 --> 00:15:03.280
is running we see the process ID we see
 

00:15:03.280 --> 00:15:05.280
is running we see the process ID we see
the thread ID the priority we can see

00:15:05.280 --> 00:15:05.290
the thread ID the priority we can see
 

00:15:05.290 --> 00:15:07.470
the thread ID the priority we can see
when exactly it started in the trace we

00:15:07.470 --> 00:15:07.480
when exactly it started in the trace we
 

00:15:07.480 --> 00:15:09.390
when exactly it started in the trace we
see how long and ran for you get a bunch

00:15:09.390 --> 00:15:09.400
see how long and ran for you get a bunch
 

00:15:09.400 --> 00:15:12.030
see how long and ran for you get a bunch
of useful statistics you can also use

00:15:12.030 --> 00:15:12.040
of useful statistics you can also use
 

00:15:12.040 --> 00:15:13.860
of useful statistics you can also use
the pointer to select a lot of different

00:15:13.860 --> 00:15:13.870
the pointer to select a lot of different
 

00:15:13.870 --> 00:15:17.250
the pointer to select a lot of different
things in the trace which gives you a

00:15:17.250 --> 00:15:17.260
things in the trace which gives you a
 

00:15:17.260 --> 00:15:20.610
things in the trace which gives you a
aggregate view that looks like that and

00:15:20.610 --> 00:15:20.620
aggregate view that looks like that and
 

00:15:20.620 --> 00:15:24.920
aggregate view that looks like that and
so this will basically add up all of the

00:15:24.920 --> 00:15:24.930
so this will basically add up all of the
 

00:15:24.930 --> 00:15:28.680
so this will basically add up all of the
threads like if I select the region in

00:15:28.680 --> 00:15:28.690
threads like if I select the region in
 

00:15:28.690 --> 00:15:30.870
threads like if I select the region in
the kernel section here this will add up

00:15:30.870 --> 00:15:30.880
the kernel section here this will add up
 

00:15:30.880 --> 00:15:32.430
the kernel section here this will add up
all of these threads that occurred and

00:15:32.430 --> 00:15:32.440
all of these threads that occurred and
 

00:15:32.440 --> 00:15:33.960
all of these threads that occurred and
tell us how much time do we spend in

00:15:33.960 --> 00:15:33.970
tell us how much time do we spend in
 

00:15:33.970 --> 00:15:36.270
tell us how much time do we spend in
each thread what was the average time

00:15:36.270 --> 00:15:36.280
each thread what was the average time
 

00:15:36.280 --> 00:15:39.110
each thread what was the average time
that each thread ran things like that

00:15:39.110 --> 00:15:39.120
that each thread ran things like that
 

00:15:39.120 --> 00:15:41.520
that each thread ran things like that
that's really useful we'll come back to

00:15:41.520 --> 00:15:41.530
that's really useful we'll come back to
 

00:15:41.530 --> 00:15:46.290
that's really useful we'll come back to
that later number two and three beyond

00:15:46.290 --> 00:15:46.300
that later number two and three beyond
 

00:15:46.300 --> 00:15:48.960
that later number two and three beyond
the palettes are for panning and zooming

00:15:48.960 --> 00:15:48.970
the palettes are for panning and zooming
 

00:15:48.970 --> 00:15:52.320
the palettes are for panning and zooming
so they're equivalent to WASD you don't

00:15:52.320 --> 00:15:52.330
so they're equivalent to WASD you don't
 

00:15:52.330 --> 00:15:53.550
so they're equivalent to WASD you don't
need to use them you can't use them if

00:15:53.550 --> 00:15:53.560
need to use them you can't use them if
 

00:15:53.560 --> 00:15:57.420
need to use them you can't use them if
you want I generally just use WASD the

00:15:57.420 --> 00:15:57.430
you want I generally just use WASD the
 

00:15:57.430 --> 00:15:59.040
you want I generally just use WASD the
fourth tool though it is incredibly

00:15:59.040 --> 00:15:59.050
fourth tool though it is incredibly
 

00:15:59.050 --> 00:16:03.660
fourth tool though it is incredibly
useful it is the highlighter tool so you

00:16:03.660 --> 00:16:03.670
useful it is the highlighter tool so you
 

00:16:03.670 --> 00:16:05.700
useful it is the highlighter tool so you
could select a region of time in the

00:16:05.700 --> 00:16:05.710
could select a region of time in the
 

00:16:05.710 --> 00:16:10.560
could select a region of time in the
trace and that region will have a white

00:16:10.560 --> 00:16:10.570
trace and that region will have a white
 

00:16:10.570 --> 00:16:12.210
trace and that region will have a white
background and everything you haven't

00:16:12.210 --> 00:16:12.220
background and everything you haven't
 

00:16:12.220 --> 00:16:13.650
background and everything you haven't
selected will then have a gray

00:16:13.650 --> 00:16:13.660
selected will then have a gray
 

00:16:13.660 --> 00:16:16.770
selected will then have a gray
background you can use this to keep

00:16:16.770 --> 00:16:16.780
background you can use this to keep
 

00:16:16.780 --> 00:16:18.690
background you can use this to keep
track at the area you care about as you

00:16:18.690 --> 00:16:18.700
track at the area you care about as you
 

00:16:18.700 --> 00:16:20.880
track at the area you care about as you
scroll vertically through a trace so if

00:16:20.880 --> 00:16:20.890
scroll vertically through a trace so if
 

00:16:20.890 --> 00:16:22.500
scroll vertically through a trace so if
you find something in one process and

00:16:22.500 --> 00:16:22.510
you find something in one process and
 

00:16:22.510 --> 00:16:26.070
you find something in one process and
you think something went wrong here what

00:16:26.070 --> 00:16:26.080
you think something went wrong here what
 

00:16:26.080 --> 00:16:28.230
you think something went wrong here what
else was the system doing you can scroll

00:16:28.230 --> 00:16:28.240
else was the system doing you can scroll
 

00:16:28.240 --> 00:16:30.360
else was the system doing you can scroll
up and down the trays and know exactly

00:16:30.360 --> 00:16:30.370
up and down the trays and know exactly
 

00:16:30.370 --> 00:16:32.100
up and down the trays and know exactly
what part of the trace you should be

00:16:32.100 --> 00:16:32.110
what part of the trace you should be
 

00:16:32.110 --> 00:16:35.070
what part of the trace you should be
looking at I use a highlighter

00:16:35.070 --> 00:16:35.080
looking at I use a highlighter
 

00:16:35.080 --> 00:16:37.740
looking at I use a highlighter
constantly if you start using systrace

00:16:37.740 --> 00:16:37.750
constantly if you start using systrace
 

00:16:37.750 --> 00:16:40.950
constantly if you start using systrace
you probably will as well now let's

00:16:40.950 --> 00:16:40.960
you probably will as well now let's
 

00:16:40.960 --> 00:16:43.500
you probably will as well now let's
scroll down and see what else is in the

00:16:43.500 --> 00:16:43.510
scroll down and see what else is in the
 

00:16:43.510 --> 00:16:49.290
scroll down and see what else is in the
trace more stuff so every row in a trace

00:16:49.290 --> 00:16:49.300
trace more stuff so every row in a trace
 

00:16:49.300 --> 00:16:54.390
trace more stuff so every row in a trace
is either a counter or a thread and down

00:16:54.390 --> 00:16:54.400
is either a counter or a thread and down
 

00:16:54.400 --> 00:16:58.710
is either a counter or a thread and down
here at the bottom is a thread these

00:16:58.710 --> 00:16:58.720
here at the bottom is a thread these
 

00:16:58.720 --> 00:17:03.780
here at the bottom is a thread these
blocks right here are the core thing

00:17:03.780 --> 00:17:03.790
blocks right here are the core thing
 

00:17:03.790 --> 00:17:06.510
blocks right here are the core thing
that you will look at in systrace these

00:17:06.510 --> 00:17:06.520
that you will look at in systrace these
 

00:17:06.520 --> 00:17:11.130
that you will look at in systrace these
are events so every systrace event has a

00:17:11.130 --> 00:17:11.140
are events so every systrace event has a
 

00:17:11.140 --> 00:17:14.240
are events so every systrace event has a
beginning and an end

00:17:14.240 --> 00:17:14.250
beginning and an end
 

00:17:14.250 --> 00:17:16.980
beginning and an end
this is traits events can then be nested

00:17:16.980 --> 00:17:16.990
this is traits events can then be nested
 

00:17:16.990 --> 00:17:20.880
this is traits events can then be nested
so this is a stack that grows down you

00:17:20.880 --> 00:17:20.890
so this is a stack that grows down you
 

00:17:20.890 --> 00:17:23.040
so this is a stack that grows down you
can see that here a choreographer event

00:17:23.040 --> 00:17:23.050
can see that here a choreographer event
 

00:17:23.050 --> 00:17:23.829
can see that here a choreographer event
happen

00:17:23.829 --> 00:17:23.839
happen
 

00:17:23.839 --> 00:17:26.980
happen
and the eight reversal event was

00:17:26.980 --> 00:17:26.990
and the eight reversal event was
 

00:17:26.990 --> 00:17:29.049
and the eight reversal event was
contained entirely within that event and

00:17:29.049 --> 00:17:29.059
contained entirely within that event and
 

00:17:29.059 --> 00:17:31.930
contained entirely within that event and
more things happened beneath this is

00:17:31.930 --> 00:17:31.940
more things happened beneath this is
 

00:17:31.940 --> 00:17:33.759
more things happened beneath this is
some stuff that's part of a calculator

00:17:33.759 --> 00:17:33.769
some stuff that's part of a calculator
 

00:17:33.769 --> 00:17:39.190
some stuff that's part of a calculator
app startup and you will see a lot of

00:17:39.190 --> 00:17:39.200
app startup and you will see a lot of
 

00:17:39.200 --> 00:17:41.049
app startup and you will see a lot of
these as you look through a trace each

00:17:41.049 --> 00:17:41.059
these as you look through a trace each
 

00:17:41.059 --> 00:17:44.379
these as you look through a trace each
event it corresponds to explicit place

00:17:44.379 --> 00:17:44.389
event it corresponds to explicit place
 

00:17:44.389 --> 00:17:46.869
event it corresponds to explicit place
in the Android code base that somebody

00:17:46.869 --> 00:17:46.879
in the Android code base that somebody
 

00:17:46.879 --> 00:17:49.419
in the Android code base that somebody
thought hey maybe if somebody will need

00:17:49.419 --> 00:17:49.429
thought hey maybe if somebody will need
 

00:17:49.429 --> 00:17:50.739
thought hey maybe if somebody will need
to figure out that this is happening

00:17:50.739 --> 00:17:50.749
to figure out that this is happening
 

00:17:50.749 --> 00:17:53.169
to figure out that this is happening
sometime it's good to pay attention to

00:17:53.169 --> 00:17:53.179
sometime it's good to pay attention to
 

00:17:53.179 --> 00:17:56.470
sometime it's good to pay attention to
dues now let's zoom in on the beginning

00:17:56.470 --> 00:17:56.480
dues now let's zoom in on the beginning
 

00:17:56.480 --> 00:17:58.779
dues now let's zoom in on the beginning
of X or at the end of activities start

00:17:58.779 --> 00:17:58.789
of X or at the end of activities start
 

00:17:58.789 --> 00:18:01.060
of X or at the end of activities start
for calculator so in this trace we

00:18:01.060 --> 00:18:01.070
for calculator so in this trace we
 

00:18:01.070 --> 00:18:03.369
for calculator so in this trace we
launch the calculator and click a few

00:18:03.369 --> 00:18:03.379
launch the calculator and click a few
 

00:18:03.379 --> 00:18:05.769
launch the calculator and click a few
buttons here we are at the very end of

00:18:05.769 --> 00:18:05.779
buttons here we are at the very end of
 

00:18:05.779 --> 00:18:08.649
buttons here we are at the very end of
activity start and I zoomed in really

00:18:08.649 --> 00:18:08.659
activity start and I zoomed in really
 

00:18:08.659 --> 00:18:10.960
activity start and I zoomed in really
closely and it's still probably hard to

00:18:10.960 --> 00:18:10.970
closely and it's still probably hard to
 

00:18:10.970 --> 00:18:12.820
closely and it's still probably hard to
see because this trace has a lot of very

00:18:12.820 --> 00:18:12.830
see because this trace has a lot of very
 

00:18:12.830 --> 00:18:15.759
see because this trace has a lot of very
small UI elements but there are these

00:18:15.759 --> 00:18:15.769
small UI elements but there are these
 

00:18:15.769 --> 00:18:19.180
small UI elements but there are these
colored bars on top of the UI thread

00:18:19.180 --> 00:18:19.190
colored bars on top of the UI thread
 

00:18:19.190 --> 00:18:23.340
colored bars on top of the UI thread
here these colored bars represent the

00:18:23.340 --> 00:18:23.350
here these colored bars represent the
 

00:18:23.350 --> 00:18:26.440
here these colored bars represent the
state of that thread at any point in

00:18:26.440 --> 00:18:26.450
state of that thread at any point in
 

00:18:26.450 --> 00:18:30.039
state of that thread at any point in
time there are five different states

00:18:30.039 --> 00:18:30.049
time there are five different states
 

00:18:30.049 --> 00:18:34.330
time there are five different states
that a thread can be in now if we click

00:18:34.330 --> 00:18:34.340
that a thread can be in now if we click
 

00:18:34.340 --> 00:18:37.570
that a thread can be in now if we click
the green bar above the UI thread in the

00:18:37.570 --> 00:18:37.580
the green bar above the UI thread in the
 

00:18:37.580 --> 00:18:40.180
the green bar above the UI thread in the
middle we see that at this point the

00:18:40.180 --> 00:18:40.190
middle we see that at this point the
 

00:18:40.190 --> 00:18:42.580
middle we see that at this point the
thread was running so at this point the

00:18:42.580 --> 00:18:42.590
thread was running so at this point the
 

00:18:42.590 --> 00:18:44.619
thread was running so at this point the
thread is actually running on a CPU it's

00:18:44.619 --> 00:18:44.629
thread is actually running on a CPU it's
 

00:18:44.629 --> 00:18:46.690
thread is actually running on a CPU it's
running on CPU 1 and if we were to

00:18:46.690 --> 00:18:46.700
running on CPU 1 and if we were to
 

00:18:46.700 --> 00:18:48.159
running on CPU 1 and if we were to
scroll back up to the kernel section we

00:18:48.159 --> 00:18:48.169
scroll back up to the kernel section we
 

00:18:48.169 --> 00:18:51.609
scroll back up to the kernel section we
would see it scheduled on CPU 1 this is

00:18:51.609 --> 00:18:51.619
would see it scheduled on CPU 1 this is
 

00:18:51.619 --> 00:18:53.019
would see it scheduled on CPU 1 this is
how you can know that your application

00:18:53.019 --> 00:18:53.029
how you can know that your application
 

00:18:53.029 --> 00:18:56.139
how you can know that your application
is actually running at particular times

00:18:56.139 --> 00:18:56.149
is actually running at particular times
 

00:18:56.149 --> 00:19:01.930
is actually running at particular times
on the CPU the next state that we care

00:19:01.930 --> 00:19:01.940
on the CPU the next state that we care
 

00:19:01.940 --> 00:19:06.340
on the CPU the next state that we care
about is runnable runnable means that

00:19:06.340 --> 00:19:06.350
about is runnable runnable means that
 

00:19:06.350 --> 00:19:08.649
about is runnable runnable means that
your thread could start running at some

00:19:08.649 --> 00:19:08.659
your thread could start running at some
 

00:19:08.659 --> 00:19:10.480
your thread could start running at some
point in time nothing is preventing your

00:19:10.480 --> 00:19:10.490
point in time nothing is preventing your
 

00:19:10.490 --> 00:19:12.639
point in time nothing is preventing your
thread from running it's just that the

00:19:12.639 --> 00:19:12.649
thread from running it's just that the
 

00:19:12.649 --> 00:19:15.279
thread from running it's just that the
kernel has not scheduled yet there are

00:19:15.279 --> 00:19:15.289
kernel has not scheduled yet there are
 

00:19:15.289 --> 00:19:16.779
kernel has not scheduled yet there are
any number of reasons why this could

00:19:16.779 --> 00:19:16.789
any number of reasons why this could
 

00:19:16.789 --> 00:19:18.279
any number of reasons why this could
happen maybe there's more higher

00:19:18.279 --> 00:19:18.289
happen maybe there's more higher
 

00:19:18.289 --> 00:19:21.009
happen maybe there's more higher
priority work maybe your thread has just

00:19:21.009 --> 00:19:21.019
priority work maybe your thread has just
 

00:19:21.019 --> 00:19:23.379
priority work maybe your thread has just
run for a really long time and the

00:19:23.379 --> 00:19:23.389
run for a really long time and the
 

00:19:23.389 --> 00:19:25.239
run for a really long time and the
scheduler is trying to be fair and give

00:19:25.239 --> 00:19:25.249
scheduler is trying to be fair and give
 

00:19:25.249 --> 00:19:27.779
scheduler is trying to be fair and give
other threads an opportunity to run

00:19:27.779 --> 00:19:27.789
other threads an opportunity to run
 

00:19:27.789 --> 00:19:30.489
other threads an opportunity to run
there are lots of reasons for this if

00:19:30.489 --> 00:19:30.499
there are lots of reasons for this if
 

00:19:30.499 --> 00:19:32.139
there are lots of reasons for this if
you if you're seeing a lot of this in

00:19:32.139 --> 00:19:32.149
you if you're seeing a lot of this in
 

00:19:32.149 --> 00:19:34.240
you if you're seeing a lot of this in
your application it's probably due to

00:19:34.240 --> 00:19:34.250
your application it's probably due to
 

00:19:34.250 --> 00:19:35.830
your application it's probably due to
thread priority

00:19:35.830 --> 00:19:35.840
thread priority
 

00:19:35.840 --> 00:19:39.470
thread priority
the third thing that you can see over on

00:19:39.470 --> 00:19:39.480
the third thing that you can see over on
 

00:19:39.480 --> 00:19:41.539
the third thing that you can see over on
the right hand side of the tri-series

00:19:41.539 --> 00:19:41.549
the right hand side of the tri-series
 

00:19:41.549 --> 00:19:45.279
the right hand side of the tri-series
there's a red bar and the red bar is

00:19:45.279 --> 00:19:45.289
there's a red bar and the red bar is
 

00:19:45.289 --> 00:19:48.019
there's a red bar and the red bar is
uninterruptible sleep which sounds a

00:19:48.019 --> 00:19:48.029
uninterruptible sleep which sounds a
 

00:19:48.029 --> 00:19:49.749
uninterruptible sleep which sounds a
little scarier than it is

00:19:49.749 --> 00:19:49.759
little scarier than it is
 

00:19:49.759 --> 00:19:52.879
little scarier than it is
uninterruptible sleep is your thread is

00:19:52.879 --> 00:19:52.889
uninterruptible sleep is your thread is
 

00:19:52.889 --> 00:19:55.879
uninterruptible sleep is your thread is
blocked on some lock inside of the

00:19:55.879 --> 00:19:55.889
blocked on some lock inside of the
 

00:19:55.889 --> 00:19:58.820
blocked on some lock inside of the
kernel as an application helper there's

00:19:58.820 --> 00:19:58.830
kernel as an application helper there's
 

00:19:58.830 --> 00:20:00.830
kernel as an application helper there's
generally not too much you can do with

00:20:00.830 --> 00:20:00.840
generally not too much you can do with
 

00:20:00.840 --> 00:20:01.129
generally not too much you can do with
this

00:20:01.129 --> 00:20:01.139
this
 

00:20:01.139 --> 00:20:02.919
this
sometimes it's hardware related

00:20:02.919 --> 00:20:02.929
sometimes it's hardware related
 

00:20:02.929 --> 00:20:05.769
sometimes it's hardware related
sometimes it has to do with memory

00:20:05.769 --> 00:20:05.779
sometimes it has to do with memory
 

00:20:05.779 --> 00:20:08.539
sometimes it has to do with memory
usually if if you see a lot of

00:20:08.539 --> 00:20:08.549
usually if if you see a lot of
 

00:20:08.549 --> 00:20:12.080
usually if if you see a lot of
uninterruptible sleep it's my fault

00:20:12.080 --> 00:20:12.090
uninterruptible sleep it's my fault
 

00:20:12.090 --> 00:20:16.009
uninterruptible sleep it's my fault
it's a system problem so what we're

00:20:16.009 --> 00:20:16.019
it's a system problem so what we're
 

00:20:16.019 --> 00:20:18.430
it's a system problem so what we're
probably aware I'm trying to fix it but

00:20:18.430 --> 00:20:18.440
probably aware I'm trying to fix it but
 

00:20:18.440 --> 00:20:20.749
probably aware I'm trying to fix it but
sometimes you can see it's related to

00:20:20.749 --> 00:20:20.759
sometimes you can see it's related to
 

00:20:20.759 --> 00:20:22.009
sometimes you can see it's related to
memory you can get some more information

00:20:22.009 --> 00:20:22.019
memory you can get some more information
 

00:20:22.019 --> 00:20:29.210
memory you can get some more information
about it the fourth type of state is a

00:20:29.210 --> 00:20:29.220
about it the fourth type of state is a
 

00:20:29.220 --> 00:20:31.159
about it the fourth type of state is a
special kind of uninterruptible sleep

00:20:31.159 --> 00:20:31.169
special kind of uninterruptible sleep
 

00:20:31.169 --> 00:20:33.200
special kind of uninterruptible sleep
that as an application valve you can

00:20:33.200 --> 00:20:33.210
that as an application valve you can
 

00:20:33.210 --> 00:20:36.440
that as an application valve you can
actually do something about the orange

00:20:36.440 --> 00:20:36.450
actually do something about the orange
 

00:20:36.450 --> 00:20:39.320
actually do something about the orange
state here is your sleeping your thread

00:20:39.320 --> 00:20:39.330
state here is your sleeping your thread
 

00:20:39.330 --> 00:20:42.049
state here is your sleeping your thread
is sleeping on block IO this means that

00:20:42.049 --> 00:20:42.059
is sleeping on block IO this means that
 

00:20:42.059 --> 00:20:44.029
is sleeping on block IO this means that
your thread is reading from disk and the

00:20:44.029 --> 00:20:44.039
your thread is reading from disk and the
 

00:20:44.039 --> 00:20:46.580
your thread is reading from disk and the
disk hasn't gotten the results back to

00:20:46.580 --> 00:20:46.590
disk hasn't gotten the results back to
 

00:20:46.590 --> 00:20:47.869
disk hasn't gotten the results back to
your thread so your thread can't make

00:20:47.869 --> 00:20:47.879
your thread so your thread can't make
 

00:20:47.879 --> 00:20:50.509
your thread so your thread can't make
progress if you see a lot of this in

00:20:50.509 --> 00:20:50.519
progress if you see a lot of this in
 

00:20:50.519 --> 00:20:52.310
progress if you see a lot of this in
your trace you're just reading too much

00:20:52.310 --> 00:20:52.320
your trace you're just reading too much
 

00:20:52.320 --> 00:20:56.450
your trace you're just reading too much
data try not to read so much data the

00:20:56.450 --> 00:20:56.460
data try not to read so much data the
 

00:20:56.460 --> 00:20:58.399
data try not to read so much data the
fifth state the last state is the state

00:20:58.399 --> 00:20:58.409
fifth state the last state is the state
 

00:20:58.409 --> 00:21:00.710
fifth state the last state is the state
you'll see most often and it's usually

00:21:00.710 --> 00:21:00.720
you'll see most often and it's usually
 

00:21:00.720 --> 00:21:02.899
you'll see most often and it's usually
white or gray depending on the

00:21:02.899 --> 00:21:02.909
white or gray depending on the
 

00:21:02.909 --> 00:21:04.249
white or gray depending on the
background of the trace it just needs to

00:21:04.249 --> 00:21:04.259
background of the trace it just needs to
 

00:21:04.259 --> 00:21:06.980
background of the trace it just needs to
thread it sleeping the thread has no

00:21:06.980 --> 00:21:06.990
thread it sleeping the thread has no
 

00:21:06.990 --> 00:21:10.669
thread it sleeping the thread has no
work to do so it is asleep it's not

00:21:10.669 --> 00:21:10.679
work to do so it is asleep it's not
 

00:21:10.679 --> 00:21:12.350
work to do so it is asleep it's not
running the scheduler isn't trying to

00:21:12.350 --> 00:21:12.360
running the scheduler isn't trying to
 

00:21:12.360 --> 00:21:14.509
running the scheduler isn't trying to
run it nothing is working on behalf of

00:21:14.509 --> 00:21:14.519
run it nothing is working on behalf of
 

00:21:14.519 --> 00:21:16.159
run it nothing is working on behalf of
that thread directly in the kernel or

00:21:16.159 --> 00:21:16.169
that thread directly in the kernel or
 

00:21:16.169 --> 00:21:18.769
that thread directly in the kernel or
anything like that if you see this a lot

00:21:18.769 --> 00:21:18.779
anything like that if you see this a lot
 

00:21:18.779 --> 00:21:21.799
anything like that if you see this a lot
and you think that's weird it's probably

00:21:21.799 --> 00:21:21.809
and you think that's weird it's probably
 

00:21:21.809 --> 00:21:25.820
and you think that's weird it's probably
due to some user space lock interaction

00:21:25.820 --> 00:21:25.830
due to some user space lock interaction
 

00:21:25.830 --> 00:21:28.100
due to some user space lock interaction
because user space locks will show up as

00:21:28.100 --> 00:21:28.110
because user space locks will show up as
 

00:21:28.110 --> 00:21:33.060
because user space locks will show up as
sleeping

00:21:33.060 --> 00:21:33.070
 
 

00:21:33.070 --> 00:21:35.349
 
the last thing you can do with these

00:21:35.349 --> 00:21:35.359
the last thing you can do with these
 

00:21:35.359 --> 00:21:37.299
the last thing you can do with these
colored bars that are really great is

00:21:37.299 --> 00:21:37.309
colored bars that are really great is
 

00:21:37.309 --> 00:21:39.729
colored bars that are really great is
you can select all of them in a region

00:21:39.729 --> 00:21:39.739
you can select all of them in a region
 

00:21:39.739 --> 00:21:41.919
you can select all of them in a region
that you care about to get aggregate

00:21:41.919 --> 00:21:41.929
that you care about to get aggregate
 

00:21:41.929 --> 00:21:43.599
that you care about to get aggregate
information so here we can see we spent

00:21:43.599 --> 00:21:43.609
information so here we can see we spent
 

00:21:43.609 --> 00:21:45.849
information so here we can see we spent
so much time sleeping versus runnable

00:21:45.849 --> 00:21:45.859
so much time sleeping versus runnable
 

00:21:45.859 --> 00:21:49.899
so much time sleeping versus runnable
versus running I do this constantly this

00:21:49.899 --> 00:21:49.909
versus running I do this constantly this
 

00:21:49.909 --> 00:21:54.129
versus running I do this constantly this
gives me a really coarse idea of what

00:21:54.129 --> 00:21:54.139
gives me a really coarse idea of what
 

00:21:54.139 --> 00:21:56.200
gives me a really coarse idea of what
the bottleneck is for a particular piece

00:21:56.200 --> 00:21:56.210
the bottleneck is for a particular piece
 

00:21:56.210 --> 00:22:00.779
the bottleneck is for a particular piece
of code I can take a trace and see hey

00:22:00.779 --> 00:22:00.789
of code I can take a trace and see hey
 

00:22:00.789 --> 00:22:03.759
of code I can take a trace and see hey
this thread is running it's on the CPU

00:22:03.759 --> 00:22:03.769
this thread is running it's on the CPU
 

00:22:03.769 --> 00:22:05.589
this thread is running it's on the CPU
it should be making progress but it's

00:22:05.589 --> 00:22:05.599
it should be making progress but it's
 

00:22:05.599 --> 00:22:06.579
it should be making progress but it's
just taking too long

00:22:06.579 --> 00:22:06.589
just taking too long
 

00:22:06.589 --> 00:22:09.609
just taking too long
what's going on it means that it just

00:22:09.609 --> 00:22:09.619
what's going on it means that it just
 

00:22:09.619 --> 00:22:11.589
what's going on it means that it just
has too much CPU work to do if it's

00:22:11.589 --> 00:22:11.599
has too much CPU work to do if it's
 

00:22:11.599 --> 00:22:13.209
has too much CPU work to do if it's
getting CPU time and not running fast

00:22:13.209 --> 00:22:13.219
getting CPU time and not running fast
 

00:22:13.219 --> 00:22:14.560
getting CPU time and not running fast
enough all you can really do is reduce

00:22:14.560 --> 00:22:14.570
enough all you can really do is reduce
 

00:22:14.570 --> 00:22:17.259
enough all you can really do is reduce
the amount of CPU work it has to do now

00:22:17.259 --> 00:22:17.269
the amount of CPU work it has to do now
 

00:22:17.269 --> 00:22:18.759
the amount of CPU work it has to do now
if I take a trace and I see that a

00:22:18.759 --> 00:22:18.769
if I take a trace and I see that a
 

00:22:18.769 --> 00:22:21.909
if I take a trace and I see that a
thread is always in block i/o then I

00:22:21.909 --> 00:22:21.919
thread is always in block i/o then I
 

00:22:21.919 --> 00:22:23.469
thread is always in block i/o then I
know it's reading too much data from

00:22:23.469 --> 00:22:23.479
know it's reading too much data from
 

00:22:23.479 --> 00:22:26.560
know it's reading too much data from
disk so don't read so much data from

00:22:26.560 --> 00:22:26.570
disk so don't read so much data from
 

00:22:26.570 --> 00:22:31.869
disk so don't read so much data from
disk if you're sleeping where you don't

00:22:31.869 --> 00:22:31.879
disk if you're sleeping where you don't
 

00:22:31.879 --> 00:22:33.430
disk if you're sleeping where you don't
expect it probably means that your

00:22:33.430 --> 00:22:33.440
expect it probably means that your
 

00:22:33.440 --> 00:22:35.200
expect it probably means that your
application logic is a little weird

00:22:35.200 --> 00:22:35.210
application logic is a little weird
 

00:22:35.210 --> 00:22:37.419
application logic is a little weird
somewhere you probably have some weird

00:22:37.419 --> 00:22:37.429
somewhere you probably have some weird
 

00:22:37.429 --> 00:22:40.749
somewhere you probably have some weird
priority inversions something or lock

00:22:40.749 --> 00:22:40.759
priority inversions something or lock
 

00:22:40.759 --> 00:22:42.099
priority inversions something or lock
intention that you didn't expect

00:22:42.099 --> 00:22:42.109
intention that you didn't expect
 

00:22:42.109 --> 00:22:45.430
intention that you didn't expect
something like that another useful tool

00:22:45.430 --> 00:22:45.440
something like that another useful tool
 

00:22:45.440 --> 00:22:48.129
something like that another useful tool
on a trace is I mentioned the input tag

00:22:48.129 --> 00:22:48.139
on a trace is I mentioned the input tag
 

00:22:48.139 --> 00:22:51.810
on a trace is I mentioned the input tag
earlier and up here at the very top

00:22:51.810 --> 00:22:51.820
earlier and up here at the very top
 

00:22:51.820 --> 00:22:55.149
earlier and up here at the very top
there's this tiny little box for input

00:22:55.149 --> 00:22:55.159
there's this tiny little box for input
 

00:22:55.159 --> 00:22:56.979
there's this tiny little box for input
response and this shows where I actually

00:22:56.979 --> 00:22:56.989
response and this shows where I actually
 

00:22:56.989 --> 00:22:59.709
response and this shows where I actually
touched the screen in the trace so here

00:22:59.709 --> 00:22:59.719
touched the screen in the trace so here
 

00:22:59.719 --> 00:23:01.479
touched the screen in the trace so here
I touched the screen and I guess my

00:23:01.479 --> 00:23:01.489
I touched the screen and I guess my
 

00:23:01.489 --> 00:23:04.509
I touched the screen and I guess my
finger was down for 28.8 milliseconds

00:23:04.509 --> 00:23:04.519
finger was down for 28.8 milliseconds
 

00:23:04.519 --> 00:23:07.930
finger was down for 28.8 milliseconds
you can use that in the trace similar to

00:23:07.930 --> 00:23:07.940
you can use that in the trace similar to
 

00:23:07.940 --> 00:23:09.479
you can use that in the trace similar to
the highlighter you can use that to

00:23:09.479 --> 00:23:09.489
the highlighter you can use that to
 

00:23:09.489 --> 00:23:11.799
the highlighter you can use that to
orient yourself in the trace you know

00:23:11.799 --> 00:23:11.809
orient yourself in the trace you know
 

00:23:11.809 --> 00:23:14.349
orient yourself in the trace you know
where what's going on if you remember

00:23:14.349 --> 00:23:14.359
where what's going on if you remember
 

00:23:14.359 --> 00:23:16.329
where what's going on if you remember
what you were doing while creating the

00:23:16.329 --> 00:23:16.339
what you were doing while creating the
 

00:23:16.339 --> 00:23:19.450
what you were doing while creating the
trace you can figure out where exactly

00:23:19.450 --> 00:23:19.460
trace you can figure out where exactly
 

00:23:19.460 --> 00:23:24.549
trace you can figure out where exactly
you are logically inside that trace but

00:23:24.549 --> 00:23:24.559
you are logically inside that trace but
 

00:23:24.559 --> 00:23:26.649
you are logically inside that trace but
what if you need more information is not

00:23:26.649 --> 00:23:26.659
what if you need more information is not
 

00:23:26.659 --> 00:23:28.060
what if you need more information is not
if you have a lot of information about

00:23:28.060 --> 00:23:28.070
if you have a lot of information about
 

00:23:28.070 --> 00:23:30.310
if you have a lot of information about
what your app is doing logically that

00:23:30.310 --> 00:23:30.320
what your app is doing logically that
 

00:23:30.320 --> 00:23:32.379
what your app is doing logically that
you want to get in a trace good news

00:23:32.379 --> 00:23:32.389
you want to get in a trace good news
 

00:23:32.389 --> 00:23:35.849
you want to get in a trace good news
that's pretty easy so there is a class

00:23:35.849 --> 00:23:35.859
that's pretty easy so there is a class
 

00:23:35.859 --> 00:23:39.399
that's pretty easy so there is a class
android/ios trace that has two methods

00:23:39.399 --> 00:23:39.409
android/ios trace that has two methods
 

00:23:39.409 --> 00:23:42.269
android/ios trace that has two methods
begin section and M section

00:23:42.269 --> 00:23:42.279
begin section and M section
 

00:23:42.279 --> 00:23:45.509
begin section and M section
if you put you can put a string in begin

00:23:45.509 --> 00:23:45.519
if you put you can put a string in begin
 

00:23:45.519 --> 00:23:48.389
if you put you can put a string in begin
section and that will just show up as an

00:23:48.389 --> 00:23:48.399
section and that will just show up as an
 

00:23:48.399 --> 00:23:49.830
section and that will just show up as an
event in the trace it shows that the

00:23:49.830 --> 00:23:49.840
event in the trace it shows that the
 

00:23:49.840 --> 00:23:52.259
event in the trace it shows that the
same as anything else the only special

00:23:52.259 --> 00:23:52.269
same as anything else the only special
 

00:23:52.269 --> 00:23:53.849
same as anything else the only special
thing you need to keep in mind here is

00:23:53.849 --> 00:23:53.859
thing you need to keep in mind here is
 

00:23:53.859 --> 00:23:56.129
thing you need to keep in mind here is
you need to call trace the nth section

00:23:56.129 --> 00:23:56.139
you need to call trace the nth section
 

00:23:56.139 --> 00:23:58.739
you need to call trace the nth section
from the same thread every time you have

00:23:58.739 --> 00:23:58.749
from the same thread every time you have
 

00:23:58.749 --> 00:24:01.019
from the same thread every time you have
a begin section if you don't have a

00:24:01.019 --> 00:24:01.029
a begin section if you don't have a
 

00:24:01.029 --> 00:24:03.509
a begin section if you don't have a
one-to-one mapping between begin section

00:24:03.509 --> 00:24:03.519
one-to-one mapping between begin section
 

00:24:03.519 --> 00:24:06.259
one-to-one mapping between begin section
and end section your trace will look

00:24:06.259 --> 00:24:06.269
and end section your trace will look
 

00:24:06.269 --> 00:24:09.509
and end section your trace will look
weird you will get very weird rendering

00:24:09.509 --> 00:24:09.519
weird you will get very weird rendering
 

00:24:09.519 --> 00:24:12.839
weird you will get very weird rendering
in your trace and it's just because you

00:24:12.839 --> 00:24:12.849
in your trace and it's just because you
 

00:24:12.849 --> 00:24:14.909
in your trace and it's just because you
forgot an end section if you had too

00:24:14.909 --> 00:24:14.919
forgot an end section if you had too
 

00:24:14.919 --> 00:24:19.079
forgot an end section if you had too
many end sections if we take a trace and

00:24:19.079 --> 00:24:19.089
many end sections if we take a trace and
 

00:24:19.089 --> 00:24:20.549
many end sections if we take a trace and
we want to see the app events we have to

00:24:20.549 --> 00:24:20.559
we want to see the app events we have to
 

00:24:20.559 --> 00:24:21.570
we want to see the app events we have to
do a little bit more than we did

00:24:21.570 --> 00:24:21.580
do a little bit more than we did
 

00:24:21.580 --> 00:24:24.629
do a little bit more than we did
initially first where you can specify

00:24:24.629 --> 00:24:24.639
initially first where you can specify
 

00:24:24.639 --> 00:24:25.739
initially first where you can specify
this app's

00:24:25.739 --> 00:24:25.749
this app's
 

00:24:25.749 --> 00:24:28.529
this app's
tag as part of the arguments to the

00:24:28.529 --> 00:24:28.539
tag as part of the arguments to the
 

00:24:28.539 --> 00:24:31.680
tag as part of the arguments to the
trace and then we have to pass - a and

00:24:31.680 --> 00:24:31.690
trace and then we have to pass - a and
 

00:24:31.690 --> 00:24:33.739
trace and then we have to pass - a and
the package name that you care about

00:24:33.739 --> 00:24:33.749
the package name that you care about
 

00:24:33.749 --> 00:24:36.479
the package name that you care about
then you just take a normal trace like

00:24:36.479 --> 00:24:36.489
then you just take a normal trace like
 

00:24:36.489 --> 00:24:41.999
then you just take a normal trace like
that and you open it up and you see this

00:24:41.999 --> 00:24:42.009
that and you open it up and you see this
 

00:24:42.009 --> 00:24:45.209
that and you open it up and you see this
trace event which is just whatever you

00:24:45.209 --> 00:24:45.219
trace event which is just whatever you
 

00:24:45.219 --> 00:24:49.560
trace event which is just whatever you
put in your string if you have logical

00:24:49.560 --> 00:24:49.570
put in your string if you have logical
 

00:24:49.570 --> 00:24:53.159
put in your string if you have logical
groupings of work or a logical task that

00:24:53.159 --> 00:24:53.169
groupings of work or a logical task that
 

00:24:53.169 --> 00:24:56.009
groupings of work or a logical task that
the user is doing adding a trace event

00:24:56.009 --> 00:24:56.019
the user is doing adding a trace event
 

00:24:56.019 --> 00:24:58.889
the user is doing adding a trace event
for that is really useful when I look at

00:24:58.889 --> 00:24:58.899
for that is really useful when I look at
 

00:24:58.899 --> 00:25:01.859
for that is really useful when I look at
large complex application within Google

00:25:01.859 --> 00:25:01.869
large complex application within Google
 

00:25:01.869 --> 00:25:05.789
large complex application within Google
I find that the applications I can debug

00:25:05.789 --> 00:25:05.799
I find that the applications I can debug
 

00:25:05.799 --> 00:25:07.950
I find that the applications I can debug
easily and understand the performance of

00:25:07.950 --> 00:25:07.960
easily and understand the performance of
 

00:25:07.960 --> 00:25:09.779
easily and understand the performance of
easily are the ones that implement their

00:25:09.779 --> 00:25:09.789
easily are the ones that implement their
 

00:25:09.789 --> 00:25:12.889
easily are the ones that implement their
own application trace events I

00:25:12.889 --> 00:25:12.899
own application trace events I
 

00:25:12.899 --> 00:25:14.909
own application trace events I
definitely recommend doing it it's not

00:25:14.909 --> 00:25:14.919
definitely recommend doing it it's not
 

00:25:14.919 --> 00:25:17.639
definitely recommend doing it it's not
that difficult and it will be worth it

00:25:17.639 --> 00:25:17.649
that difficult and it will be worth it
 

00:25:17.649 --> 00:25:19.169
that difficult and it will be worth it
as you start looking at sisterand it

00:25:19.169 --> 00:25:19.179
as you start looking at sisterand it
 

00:25:19.179 --> 00:25:20.459
as you start looking at sisterand it
will make systrace a lot more

00:25:20.459 --> 00:25:20.469
will make systrace a lot more
 

00:25:20.469 --> 00:25:25.519
will make systrace a lot more
comprehensible and for reading a trace

00:25:25.519 --> 00:25:25.529
comprehensible and for reading a trace
 

00:25:25.529 --> 00:25:27.440
comprehensible and for reading a trace
that's about it

00:25:27.440 --> 00:25:27.450
that's about it
 

00:25:27.450 --> 00:25:31.409
that's about it
there's not really that much going on in

00:25:31.409 --> 00:25:31.419
there's not really that much going on in
 

00:25:31.419 --> 00:25:33.690
there's not really that much going on in
a trait it's just sort of what the

00:25:33.690 --> 00:25:33.700
a trait it's just sort of what the
 

00:25:33.700 --> 00:25:35.459
a trait it's just sort of what the
system is doing at any point in time and

00:25:35.459 --> 00:25:35.469
system is doing at any point in time and
 

00:25:35.469 --> 00:25:37.259
system is doing at any point in time and
everything that the system is doing at

00:25:37.259 --> 00:25:37.269
everything that the system is doing at
 

00:25:37.269 --> 00:25:39.269
everything that the system is doing at
any point in time ends up looking like

00:25:39.269 --> 00:25:39.279
any point in time ends up looking like
 

00:25:39.279 --> 00:25:43.900
any point in time ends up looking like
this so now what

00:25:43.900 --> 00:25:43.910
this so now what
 

00:25:43.910 --> 00:25:47.140
this so now what
I don't think most of you probably feel

00:25:47.140 --> 00:25:47.150
I don't think most of you probably feel
 

00:25:47.150 --> 00:25:49.540
I don't think most of you probably feel
that comfortable using systrace yet so

00:25:49.540 --> 00:25:49.550
that comfortable using systrace yet so
 

00:25:49.550 --> 00:25:52.270
that comfortable using systrace yet so
why would we want to use systrace what

00:25:52.270 --> 00:25:52.280
why would we want to use systrace what
 

00:25:52.280 --> 00:25:54.220
why would we want to use systrace what
is what is systrace going to tell us

00:25:54.220 --> 00:25:54.230
is what is systrace going to tell us
 

00:25:54.230 --> 00:25:56.770
is what is systrace going to tell us
that makes it so useful let's go back to

00:25:56.770 --> 00:25:56.780
that makes it so useful let's go back to
 

00:25:56.780 --> 00:25:59.670
that makes it so useful let's go back to
the two goals that we had for pixel

00:25:59.670 --> 00:25:59.680
the two goals that we had for pixel
 

00:25:59.680 --> 00:26:02.740
the two goals that we had for pixel
number one 60 frames per second number 2

00:26:02.740 --> 00:26:02.750
number one 60 frames per second number 2
 

00:26:02.750 --> 00:26:05.170
number one 60 frames per second number 2
makes apps start quickly ok yes this

00:26:05.170 --> 00:26:05.180
makes apps start quickly ok yes this
 

00:26:05.180 --> 00:26:06.430
makes apps start quickly ok yes this
trace can tell us some things about this

00:26:06.430 --> 00:26:06.440
trace can tell us some things about this
 

00:26:06.440 --> 00:26:08.500
trace can tell us some things about this
directly but there's an underlying

00:26:08.500 --> 00:26:08.510
directly but there's an underlying
 

00:26:08.510 --> 00:26:12.480
directly but there's an underlying
principle here that we should call out

00:26:12.480 --> 00:26:12.490
principle here that we should call out
 

00:26:12.490 --> 00:26:16.150
principle here that we should call out
don't look slow that's it that's that's

00:26:16.150 --> 00:26:16.160
don't look slow that's it that's that's
 

00:26:16.160 --> 00:26:18.640
don't look slow that's it that's that's
really the only performance rule there

00:26:18.640 --> 00:26:18.650
really the only performance rule there
 

00:26:18.650 --> 00:26:22.780
really the only performance rule there
is the reason why we use systrace is it

00:26:22.780 --> 00:26:22.790
is the reason why we use systrace is it
 

00:26:22.790 --> 00:26:25.600
is the reason why we use systrace is it
can tell us where we look slow and note

00:26:25.600 --> 00:26:25.610
can tell us where we look slow and note
 

00:26:25.610 --> 00:26:28.180
can tell us where we look slow and note
that I said don't look slow I didn't say

00:26:28.180 --> 00:26:28.190
that I said don't look slow I didn't say
 

00:26:28.190 --> 00:26:32.140
that I said don't look slow I didn't say
don't be slow this may sound weird

00:26:32.140 --> 00:26:32.150
don't be slow this may sound weird
 

00:26:32.150 --> 00:26:33.760
don't be slow this may sound weird
coming from a person who works on

00:26:33.760 --> 00:26:33.770
coming from a person who works on
 

00:26:33.770 --> 00:26:37.120
coming from a person who works on
performance but for any moderately

00:26:37.120 --> 00:26:37.130
performance but for any moderately
 

00:26:37.130 --> 00:26:39.310
performance but for any moderately
complex application at some point in

00:26:39.310 --> 00:26:39.320
complex application at some point in
 

00:26:39.320 --> 00:26:41.200
complex application at some point in
time you're going to have to do

00:26:41.200 --> 00:26:41.210
time you're going to have to do
 

00:26:41.210 --> 00:26:44.440
time you're going to have to do
something that is slow maybe you're

00:26:44.440 --> 00:26:44.450
something that is slow maybe you're
 

00:26:44.450 --> 00:26:46.450
something that is slow maybe you're
going to do some giant matrix multiply

00:26:46.450 --> 00:26:46.460
going to do some giant matrix multiply
 

00:26:46.460 --> 00:26:48.220
going to do some giant matrix multiply
for some reason maybe you're going to

00:26:48.220 --> 00:26:48.230
for some reason maybe you're going to
 

00:26:48.230 --> 00:26:50.590
for some reason maybe you're going to
read from disk you have to read a large

00:26:50.590 --> 00:26:50.600
read from disk you have to read a large
 

00:26:50.600 --> 00:26:53.560
read from disk you have to read a large
image maybe you have to talk to the

00:26:53.560 --> 00:26:53.570
image maybe you have to talk to the
 

00:26:53.570 --> 00:26:55.960
image maybe you have to talk to the
network which could take who knows how

00:26:55.960 --> 00:26:55.970
network which could take who knows how
 

00:26:55.970 --> 00:26:59.560
network which could take who knows how
long at that point you want to

00:26:59.560 --> 00:26:59.570
long at that point you want to
 

00:26:59.570 --> 00:27:02.290
long at that point you want to
understand why did the system end up

00:27:02.290 --> 00:27:02.300
understand why did the system end up
 

00:27:02.300 --> 00:27:04.240
understand why did the system end up
looking slow when I was doing this and

00:27:04.240 --> 00:27:04.250
looking slow when I was doing this and
 

00:27:04.250 --> 00:27:07.300
looking slow when I was doing this and
then what can I do to work around it

00:27:07.300 --> 00:27:07.310
then what can I do to work around it
 

00:27:07.310 --> 00:27:09.450
then what can I do to work around it
you know you have to be this slow thing

00:27:09.450 --> 00:27:09.460
you know you have to be this slow thing
 

00:27:09.460 --> 00:27:12.670
you know you have to be this slow thing
what can you do in your application to

00:27:12.670 --> 00:27:12.680
what can you do in your application to
 

00:27:12.680 --> 00:27:15.040
what can you do in your application to
identify where exactly that slow point

00:27:15.040 --> 00:27:15.050
identify where exactly that slow point
 

00:27:15.050 --> 00:27:17.050
identify where exactly that slow point
happened and then work around it to make

00:27:17.050 --> 00:27:17.060
happened and then work around it to make
 

00:27:17.060 --> 00:27:20.530
happened and then work around it to make
the system still look fast because

00:27:20.530 --> 00:27:20.540
the system still look fast because
 

00:27:20.540 --> 00:27:22.120
the system still look fast because
that's all the user care about they

00:27:22.120 --> 00:27:22.130
that's all the user care about they
 

00:27:22.130 --> 00:27:24.910
that's all the user care about they
don't care if the system is flow or is

00:27:24.910 --> 00:27:24.920
don't care if the system is flow or is
 

00:27:24.920 --> 00:27:27.280
don't care if the system is flow or is
fast they just want the system to feel

00:27:27.280 --> 00:27:27.290
fast they just want the system to feel
 

00:27:27.290 --> 00:27:31.780
fast they just want the system to feel
fast if you do that it'll be great now

00:27:31.780 --> 00:27:31.790
fast if you do that it'll be great now
 

00:27:31.790 --> 00:27:35.170
fast if you do that it'll be great now
let's apply that to the two goals that

00:27:35.170 --> 00:27:35.180
let's apply that to the two goals that
 

00:27:35.180 --> 00:27:39.460
let's apply that to the two goals that
we had app startup

00:27:39.460 --> 00:27:39.470
we had app startup
 

00:27:39.470 --> 00:27:41.110
we had app startup
the basic thing with systrace an app

00:27:41.110 --> 00:27:41.120
the basic thing with systrace an app
 

00:27:41.120 --> 00:27:43.210
the basic thing with systrace an app
startup is you can use this trace to

00:27:43.210 --> 00:27:43.220
startup is you can use this trace to
 

00:27:43.220 --> 00:27:45.100
startup is you can use this trace to
figure out exactly where your time is

00:27:45.100 --> 00:27:45.110
figure out exactly where your time is
 

00:27:45.110 --> 00:27:47.770
figure out exactly where your time is
going during app startup then you can

00:27:47.770 --> 00:27:47.780
going during app startup then you can
 

00:27:47.780 --> 00:27:49.150
going during app startup then you can
decide what to do about it

00:27:49.150 --> 00:27:49.160
decide what to do about it
 

00:27:49.160 --> 00:27:51.190
decide what to do about it
and there's no one-size-fits-all advice

00:27:51.190 --> 00:27:51.200
and there's no one-size-fits-all advice
 

00:27:51.200 --> 00:27:54.310
and there's no one-size-fits-all advice
here really you have to understand what

00:27:54.310 --> 00:27:54.320
here really you have to understand what
 

00:27:54.320 --> 00:27:55.690
here really you have to understand what
your particular application is doing

00:27:55.690 --> 00:27:55.700
your particular application is doing
 

00:27:55.700 --> 00:27:57.730
your particular application is doing
what the needs of your application are

00:27:57.730 --> 00:27:57.740
what the needs of your application are
 

00:27:57.740 --> 00:28:03.600
what the needs of your application are
and then you can come up with a solution

00:28:03.600 --> 00:28:03.610
 
 

00:28:03.610 --> 00:28:06.190
 
the first thing that we use systrace for

00:28:06.190 --> 00:28:06.200
the first thing that we use systrace for
 

00:28:06.200 --> 00:28:09.480
the first thing that we use systrace for
to analyze app startup is view inflation

00:28:09.480 --> 00:28:09.490
to analyze app startup is view inflation
 

00:28:09.490 --> 00:28:12.220
to analyze app startup is view inflation
here we have this inflate section in a

00:28:12.220 --> 00:28:12.230
here we have this inflate section in a
 

00:28:12.230 --> 00:28:13.990
here we have this inflate section in a
trace this is from the very beginning of

00:28:13.990 --> 00:28:14.000
trace this is from the very beginning of
 

00:28:14.000 --> 00:28:16.120
trace this is from the very beginning of
calculator from activity start and

00:28:16.120 --> 00:28:16.130
calculator from activity start and
 

00:28:16.130 --> 00:28:18.880
calculator from activity start and
calculator and we have this really long

00:28:18.880 --> 00:28:18.890
calculator and we have this really long
 

00:28:18.890 --> 00:28:21.280
calculator and we have this really long
inflate section but more importantly we

00:28:21.280 --> 00:28:21.290
inflate section but more importantly we
 

00:28:21.290 --> 00:28:24.190
inflate section but more importantly we
can see the exact cost of inflating

00:28:24.190 --> 00:28:24.200
can see the exact cost of inflating
 

00:28:24.200 --> 00:28:28.390
can see the exact cost of inflating
every view for calculator this is really

00:28:28.390 --> 00:28:28.400
every view for calculator this is really
 

00:28:28.400 --> 00:28:30.040
every view for calculator this is really
useful to help you figure out the cost

00:28:30.040 --> 00:28:30.050
useful to help you figure out the cost
 

00:28:30.050 --> 00:28:32.410
useful to help you figure out the cost
of a view hierarchy or changing your

00:28:32.410 --> 00:28:32.420
of a view hierarchy or changing your
 

00:28:32.420 --> 00:28:36.310
of a view hierarchy or changing your
view hierarchy you can say is it

00:28:36.310 --> 00:28:36.320
view hierarchy you can say is it
 

00:28:36.320 --> 00:28:38.740
view hierarchy you can say is it
actually worth you know 50 milliseconds

00:28:38.740 --> 00:28:38.750
actually worth you know 50 milliseconds
 

00:28:38.750 --> 00:28:40.000
actually worth you know 50 milliseconds
to inflate all these views right now

00:28:40.000 --> 00:28:40.010
to inflate all these views right now
 

00:28:40.010 --> 00:28:41.110
to inflate all these views right now
could I do this later could I do

00:28:41.110 --> 00:28:41.120
could I do this later could I do
 

00:28:41.120 --> 00:28:43.690
could I do this later could I do
something else instead you have to come

00:28:43.690 --> 00:28:43.700
something else instead you have to come
 

00:28:43.700 --> 00:28:45.280
something else instead you have to come
up with whatever solution is right for

00:28:45.280 --> 00:28:45.290
up with whatever solution is right for
 

00:28:45.290 --> 00:28:46.000
up with whatever solution is right for
your application

00:28:46.000 --> 00:28:46.010
your application
 

00:28:46.010 --> 00:28:47.860
your application
but systrace can help you figure out

00:28:47.860 --> 00:28:47.870
but systrace can help you figure out
 

00:28:47.870 --> 00:28:50.560
but systrace can help you figure out
what is actually happening today in your

00:28:50.560 --> 00:28:50.570
what is actually happening today in your
 

00:28:50.570 --> 00:28:52.390
what is actually happening today in your
application so you can come up with

00:28:52.390 --> 00:28:52.400
application so you can come up with
 

00:28:52.400 --> 00:28:55.680
application so you can come up with
those improvements and those ideas put

00:28:55.680 --> 00:28:55.690
those improvements and those ideas put
 

00:28:55.690 --> 00:29:02.200
those improvements and those ideas put
future changes to your app another thing

00:29:02.200 --> 00:29:02.210
future changes to your app another thing
 

00:29:02.210 --> 00:29:04.360
future changes to your app another thing
that fistrick tells you is you can tell

00:29:04.360 --> 00:29:04.370
that fistrick tells you is you can tell
 

00:29:04.370 --> 00:29:06.940
that fistrick tells you is you can tell
exactly when application startup ended

00:29:06.940 --> 00:29:06.950
exactly when application startup ended
 

00:29:06.950 --> 00:29:09.490
exactly when application startup ended
from the users point of view there's

00:29:09.490 --> 00:29:09.500
from the users point of view there's
 

00:29:09.500 --> 00:29:11.410
from the users point of view there's
more than just bind application and

00:29:11.410 --> 00:29:11.420
more than just bind application and
 

00:29:11.420 --> 00:29:13.720
more than just bind application and
activity start and application start up

00:29:13.720 --> 00:29:13.730
activity start and application start up
 

00:29:13.730 --> 00:29:15.850
activity start and application start up
here you can actually see the UI thread

00:29:15.850 --> 00:29:15.860
here you can actually see the UI thread
 

00:29:15.860 --> 00:29:17.440
here you can actually see the UI thread
and render thread of your application

00:29:17.440 --> 00:29:17.450
and render thread of your application
 

00:29:17.450 --> 00:29:19.810
and render thread of your application
which are the two most important threads

00:29:19.810 --> 00:29:19.820
which are the two most important threads
 

00:29:19.820 --> 00:29:22.000
which are the two most important threads
in making your application run at 60

00:29:22.000 --> 00:29:22.010
in making your application run at 60
 

00:29:22.010 --> 00:29:25.630
in making your application run at 60
frames per second and we know that once

00:29:25.630 --> 00:29:25.640
frames per second and we know that once
 

00:29:25.640 --> 00:29:27.310
frames per second and we know that once
those app once those threads have

00:29:27.310 --> 00:29:27.320
those app once those threads have
 

00:29:27.320 --> 00:29:30.310
those app once those threads have
finished for the first time here you see

00:29:30.310 --> 00:29:30.320
finished for the first time here you see
 

00:29:30.320 --> 00:29:34.570
finished for the first time here you see
the UI thread running and finishing this

00:29:34.570 --> 00:29:34.580
the UI thread running and finishing this
 

00:29:34.580 --> 00:29:36.790
the UI thread running and finishing this
choreographer do frame along with the

00:29:36.790 --> 00:29:36.800
choreographer do frame along with the
 

00:29:36.800 --> 00:29:38.320
choreographer do frame along with the
render thread running at the same time

00:29:38.320 --> 00:29:38.330
render thread running at the same time
 

00:29:38.330 --> 00:29:40.980
render thread running at the same time
once that's done the app is actually

00:29:40.980 --> 00:29:40.990
once that's done the app is actually
 

00:29:40.990 --> 00:29:45.280
once that's done the app is actually
loaded and ready for user input at that

00:29:45.280 --> 00:29:45.290
loaded and ready for user input at that
 

00:29:45.290 --> 00:29:48.040
loaded and ready for user input at that
point from the users point of view app

00:29:48.040 --> 00:29:48.050
point from the users point of view app
 

00:29:48.050 --> 00:29:52.570
point from the users point of view app
startup is done

00:29:52.570 --> 00:29:52.580
 
 

00:29:52.580 --> 00:29:56.090
 
another useful thing and systrace is the

00:29:56.090 --> 00:29:56.100
another useful thing and systrace is the
 

00:29:56.100 --> 00:29:59.980
another useful thing and systrace is the
resource tag read so you can look at

00:29:59.980 --> 00:29:59.990
resource tag read so you can look at
 

00:29:59.990 --> 00:30:02.600
resource tag read so you can look at
exactly what resources you're loading in

00:30:02.600 --> 00:30:02.610
exactly what resources you're loading in
 

00:30:02.610 --> 00:30:04.690
exactly what resources you're loading in
your application at any point in time

00:30:04.690 --> 00:30:04.700
your application at any point in time
 

00:30:04.700 --> 00:30:08.720
your application at any point in time
usually loading resources is not a huge

00:30:08.720 --> 00:30:08.730
usually loading resources is not a huge
 

00:30:08.730 --> 00:30:09.110
usually loading resources is not a huge
deal

00:30:09.110 --> 00:30:09.120
deal
 

00:30:09.120 --> 00:30:11.360
deal
occasionally we've seen areas where

00:30:11.360 --> 00:30:11.370
occasionally we've seen areas where
 

00:30:11.370 --> 00:30:13.580
occasionally we've seen areas where
resource loading can be expensive it's

00:30:13.580 --> 00:30:13.590
resource loading can be expensive it's
 

00:30:13.590 --> 00:30:15.740
resource loading can be expensive it's
worth checking in your application it

00:30:15.740 --> 00:30:15.750
worth checking in your application it
 

00:30:15.750 --> 00:30:17.630
worth checking in your application it
will tell you just as the name of an

00:30:17.630 --> 00:30:17.640
will tell you just as the name of an
 

00:30:17.640 --> 00:30:20.390
will tell you just as the name of an
event exactly what resource you're

00:30:20.390 --> 00:30:20.400
event exactly what resource you're
 

00:30:20.400 --> 00:30:23.600
event exactly what resource you're
loading and how long it takes and again

00:30:23.600 --> 00:30:23.610
loading and how long it takes and again
 

00:30:23.610 --> 00:30:25.640
loading and how long it takes and again
you can figure out is it worth letting

00:30:25.640 --> 00:30:25.650
you can figure out is it worth letting
 

00:30:25.650 --> 00:30:29.840
you can figure out is it worth letting
this resource right now all right let's

00:30:29.840 --> 00:30:29.850
this resource right now all right let's
 

00:30:29.850 --> 00:30:31.820
this resource right now all right let's
move to jank because that's the that's

00:30:31.820 --> 00:30:31.830
move to jank because that's the that's
 

00:30:31.830 --> 00:30:33.310
move to jank because that's the that's
the more fun one

00:30:33.310 --> 00:30:33.320
the more fun one
 

00:30:33.320 --> 00:30:37.040
the more fun one
fixing jank with systrace is a two-step

00:30:37.040 --> 00:30:37.050
fixing jank with systrace is a two-step
 

00:30:37.050 --> 00:30:39.680
fixing jank with systrace is a two-step
process number one you need to figure

00:30:39.680 --> 00:30:39.690
process number one you need to figure
 

00:30:39.690 --> 00:30:41.600
process number one you need to figure
out where the jank actually happens

00:30:41.600 --> 00:30:41.610
out where the jank actually happens
 

00:30:41.610 --> 00:30:45.050
out where the jank actually happens
because maybe you can spot every time

00:30:45.050 --> 00:30:45.060
because maybe you can spot every time
 

00:30:45.060 --> 00:30:46.820
because maybe you can spot every time
the system doesn't run at 60 frames per

00:30:46.820 --> 00:30:46.830
the system doesn't run at 60 frames per
 

00:30:46.830 --> 00:30:48.880
the system doesn't run at 60 frames per
second but I've been doing this

00:30:48.880 --> 00:30:48.890
second but I've been doing this
 

00:30:48.890 --> 00:30:51.470
second but I've been doing this
full-time for a while now I can't even

00:30:51.470 --> 00:30:51.480
full-time for a while now I can't even
 

00:30:51.480 --> 00:30:55.310
full-time for a while now I can't even
do that so sister eyes can help it help

00:30:55.310 --> 00:30:55.320
do that so sister eyes can help it help
 

00:30:55.320 --> 00:30:58.400
do that so sister eyes can help it help
make it really obvious where exactly you

00:30:58.400 --> 00:30:58.410
make it really obvious where exactly you
 

00:30:58.410 --> 00:31:01.010
make it really obvious where exactly you
drop the frame the second step that use

00:31:01.010 --> 00:31:01.020
drop the frame the second step that use
 

00:31:01.020 --> 00:31:02.510
drop the frame the second step that use
systrace for is working your way

00:31:02.510 --> 00:31:02.520
systrace for is working your way
 

00:31:02.520 --> 00:31:05.510
systrace for is working your way
backwards from the dropped frame to what

00:31:05.510 --> 00:31:05.520
backwards from the dropped frame to what
 

00:31:05.520 --> 00:31:07.640
backwards from the dropped frame to what
actually went wrong and then you can

00:31:07.640 --> 00:31:07.650
actually went wrong and then you can
 

00:31:07.650 --> 00:31:11.960
actually went wrong and then you can
figure out what to do about it so here

00:31:11.960 --> 00:31:11.970
figure out what to do about it so here
 

00:31:11.970 --> 00:31:13.700
figure out what to do about it so here
we have a UI thread and render thread

00:31:13.700 --> 00:31:13.710
we have a UI thread and render thread
 

00:31:13.710 --> 00:31:16.100
we have a UI thread and render thread
again in an application and we're

00:31:16.100 --> 00:31:16.110
again in an application and we're
 

00:31:16.110 --> 00:31:18.320
again in an application and we're
running the thread or the application

00:31:18.320 --> 00:31:18.330
running the thread or the application
 

00:31:18.330 --> 00:31:20.270
running the thread or the application
normally it's not a janky frame it's

00:31:20.270 --> 00:31:20.280
normally it's not a janky frame it's
 

00:31:20.280 --> 00:31:22.640
normally it's not a janky frame it's
just normal 60 frames per second we're

00:31:22.640 --> 00:31:22.650
just normal 60 frames per second we're
 

00:31:22.650 --> 00:31:26.750
just normal 60 frames per second we're
rendering the UI thread is the main

00:31:26.750 --> 00:31:26.760
rendering the UI thread is the main
 

00:31:26.760 --> 00:31:28.190
rendering the UI thread is the main
application thread that's what actually

00:31:28.190 --> 00:31:28.200
application thread that's what actually
 

00:31:28.200 --> 00:31:31.070
application thread that's what actually
gets you know input events from system

00:31:31.070 --> 00:31:31.080
gets you know input events from system
 

00:31:31.080 --> 00:31:33.500
gets you know input events from system
server render thread actually gets

00:31:33.500 --> 00:31:33.510
server render thread actually gets
 

00:31:33.510 --> 00:31:35.330
server render thread actually gets
information from the UI thread and send

00:31:35.330 --> 00:31:35.340
information from the UI thread and send
 

00:31:35.340 --> 00:31:38.990
information from the UI thread and send
that to the GPU this means that in order

00:31:38.990 --> 00:31:39.000
that to the GPU this means that in order
 

00:31:39.000 --> 00:31:40.970
that to the GPU this means that in order
to display a frame on time the UI thread

00:31:40.970 --> 00:31:40.980
to display a frame on time the UI thread
 

00:31:40.980 --> 00:31:43.070
to display a frame on time the UI thread
in the render thread has to complete

00:31:43.070 --> 00:31:43.080
in the render thread has to complete
 

00:31:43.080 --> 00:31:44.990
in the render thread has to complete
within sixteen point seven milliseconds

00:31:44.990 --> 00:31:45.000
within sixteen point seven milliseconds
 

00:31:45.000 --> 00:31:49.160
within sixteen point seven milliseconds
every time this gives this trace is a

00:31:49.160 --> 00:31:49.170
every time this gives this trace is a
 

00:31:49.170 --> 00:31:54.220
every time this gives this trace is a
nice kind of rhythm you can get used to

00:31:54.220 --> 00:31:54.230
nice kind of rhythm you can get used to
 

00:31:54.230 --> 00:31:56.900
nice kind of rhythm you can get used to
this rhythm when you open a systrace and

00:31:56.900 --> 00:31:56.910
this rhythm when you open a systrace and
 

00:31:56.910 --> 00:31:59.210
this rhythm when you open a systrace and
say oh yeah dropped a friend there

00:31:59.210 --> 00:31:59.220
say oh yeah dropped a friend there
 

00:31:59.220 --> 00:32:02.030
say oh yeah dropped a friend there
because you can tell it it didn't quite

00:32:02.030 --> 00:32:02.040
because you can tell it it didn't quite
 

00:32:02.040 --> 00:32:06.080
because you can tell it it didn't quite
line up it makes it easy to spot where

00:32:06.080 --> 00:32:06.090
line up it makes it easy to spot where
 

00:32:06.090 --> 00:32:09.560
line up it makes it easy to spot where
the UI pipeline didn't run at a full 60

00:32:09.560 --> 00:32:09.570
the UI pipeline didn't run at a full 60
 

00:32:09.570 --> 00:32:12.830
the UI pipeline didn't run at a full 60
frames per second once you get used to

00:32:12.830 --> 00:32:12.840
frames per second once you get used to
 

00:32:12.840 --> 00:32:17.900
frames per second once you get used to
this now if that's not enough you can

00:32:17.900 --> 00:32:17.910
this now if that's not enough you can
 

00:32:17.910 --> 00:32:21.020
this now if that's not enough you can
look at surface planar so we're not

00:32:21.020 --> 00:32:21.030
look at surface planar so we're not
 

00:32:21.030 --> 00:32:22.010
look at surface planar so we're not
going to be on time to go through the

00:32:22.010 --> 00:32:22.020
going to be on time to go through the
 

00:32:22.020 --> 00:32:24.170
going to be on time to go through the
full Android UI pipeline but the

00:32:24.170 --> 00:32:24.180
full Android UI pipeline but the
 

00:32:24.180 --> 00:32:26.900
full Android UI pipeline but the
high-level overview is your app will

00:32:26.900 --> 00:32:26.910
high-level overview is your app will
 

00:32:26.910 --> 00:32:29.030
high-level overview is your app will
render a frame and it will send that

00:32:29.030 --> 00:32:29.040
render a frame and it will send that
 

00:32:29.040 --> 00:32:31.490
render a frame and it will send that
frame over to surface flinger surface

00:32:31.490 --> 00:32:31.500
frame over to surface flinger surface
 

00:32:31.500 --> 00:32:33.860
frame over to surface flinger surface
flinger is a system service that will

00:32:33.860 --> 00:32:33.870
flinger is a system service that will
 

00:32:33.870 --> 00:32:36.290
flinger is a system service that will
take whatever app is rendering on the

00:32:36.290 --> 00:32:36.300
take whatever app is rendering on the
 

00:32:36.300 --> 00:32:38.330
take whatever app is rendering on the
screen and it will combine that with the

00:32:38.330 --> 00:32:38.340
screen and it will combine that with the
 

00:32:38.340 --> 00:32:41.680
screen and it will combine that with the
navigation bar and the status bar and

00:32:41.680 --> 00:32:41.690
navigation bar and the status bar and
 

00:32:41.690 --> 00:32:44.480
navigation bar and the status bar and
actually send the resulting full

00:32:44.480 --> 00:32:44.490
actually send the resulting full
 

00:32:44.490 --> 00:32:47.000
actually send the resulting full
completed composited frame to the

00:32:47.000 --> 00:32:47.010
completed composited frame to the
 

00:32:47.010 --> 00:32:50.150
completed composited frame to the
display to show up on the screen what

00:32:50.150 --> 00:32:50.160
display to show up on the screen what
 

00:32:50.160 --> 00:32:52.310
display to show up on the screen what
this means is that surface flinger is

00:32:52.310 --> 00:32:52.320
this means is that surface flinger is
 

00:32:52.320 --> 00:32:55.520
this means is that surface flinger is
the central source of truth if service

00:32:55.520 --> 00:32:55.530
the central source of truth if service
 

00:32:55.530 --> 00:32:57.950
the central source of truth if service
pointer thinks you hit your frame

00:32:57.950 --> 00:32:57.960
pointer thinks you hit your frame
 

00:32:57.960 --> 00:33:00.290
pointer thinks you hit your frame
deadline you're running at 60 frames per

00:33:00.290 --> 00:33:00.300
deadline you're running at 60 frames per
 

00:33:00.300 --> 00:33:02.210
deadline you're running at 60 frames per
second if surface flinger says you

00:33:02.210 --> 00:33:02.220
second if surface flinger says you
 

00:33:02.220 --> 00:33:03.350
second if surface flinger says you
didn't deliver a frame

00:33:03.350 --> 00:33:03.360
didn't deliver a frame
 

00:33:03.360 --> 00:33:05.450
didn't deliver a frame
you know you didn't actually hit 60

00:33:05.450 --> 00:33:05.460
you know you didn't actually hit 60
 

00:33:05.460 --> 00:33:08.150
you know you didn't actually hit 60
frames per second and here the way we

00:33:08.150 --> 00:33:08.160
frames per second and here the way we
 

00:33:08.160 --> 00:33:10.880
frames per second and here the way we
can do that is we have a counter here

00:33:10.880 --> 00:33:10.890
can do that is we have a counter here
 

00:33:10.890 --> 00:33:13.340
can do that is we have a counter here
there is one counter per application in

00:33:13.340 --> 00:33:13.350
there is one counter per application in
 

00:33:13.350 --> 00:33:17.210
there is one counter per application in
a trace this counter here is alternating

00:33:17.210 --> 00:33:17.220
a trace this counter here is alternating
 

00:33:17.220 --> 00:33:20.480
a trace this counter here is alternating
between zero and one for how many frames

00:33:20.480 --> 00:33:20.490
between zero and one for how many frames
 

00:33:20.490 --> 00:33:22.640
between zero and one for how many frames
the surface flinger have from this

00:33:22.640 --> 00:33:22.650
the surface flinger have from this
 

00:33:22.650 --> 00:33:24.650
the surface flinger have from this
application that are ready to be

00:33:24.650 --> 00:33:24.660
application that are ready to be
 

00:33:24.660 --> 00:33:28.940
application that are ready to be
displayed so you know that if the

00:33:28.940 --> 00:33:28.950
displayed so you know that if the
 

00:33:28.950 --> 00:33:32.150
displayed so you know that if the
counter goes to zero for more than 16

00:33:32.150 --> 00:33:32.160
counter goes to zero for more than 16
 

00:33:32.160 --> 00:33:34.430
counter goes to zero for more than 16
milliseconds you have definitely missed

00:33:34.430 --> 00:33:34.440
milliseconds you have definitely missed
 

00:33:34.440 --> 00:33:39.380
milliseconds you have definitely missed
the frame this is the ultimate way to

00:33:39.380 --> 00:33:39.390
the frame this is the ultimate way to
 

00:33:39.390 --> 00:33:41.570
the frame this is the ultimate way to
know whether you had janked in your

00:33:41.570 --> 00:33:41.580
know whether you had janked in your
 

00:33:41.580 --> 00:33:46.730
know whether you had janked in your
application or not this gets us this

00:33:46.730 --> 00:33:46.740
application or not this gets us this
 

00:33:46.740 --> 00:33:49.280
application or not this gets us this
helps us spot where the problem is it

00:33:49.280 --> 00:33:49.290
helps us spot where the problem is it
 

00:33:49.290 --> 00:33:52.040
helps us spot where the problem is it
helps us know where you actually drop

00:33:52.040 --> 00:33:52.050
helps us know where you actually drop
 

00:33:52.050 --> 00:33:56.690
helps us know where you actually drop
the frame so what do you do when you

00:33:56.690 --> 00:33:56.700
the frame so what do you do when you
 

00:33:56.700 --> 00:33:57.980
the frame so what do you do when you
know where the problem is you can work

00:33:57.980 --> 00:33:57.990
know where the problem is you can work
 

00:33:57.990 --> 00:34:00.560
know where the problem is you can work
your way backwards so we're going to

00:34:00.560 --> 00:34:00.570
your way backwards so we're going to
 

00:34:00.570 --> 00:34:02.450
your way backwards so we're going to
look at the surface flinger to work our

00:34:02.450 --> 00:34:02.460
look at the surface flinger to work our
 

00:34:02.460 --> 00:34:04.400
look at the surface flinger to work our
way backwards we're looking at surface

00:34:04.400 --> 00:34:04.410
way backwards we're looking at surface
 

00:34:04.410 --> 00:34:06.020
way backwards we're looking at surface
flinger just as an example of a

00:34:06.020 --> 00:34:06.030
flinger just as an example of a
 

00:34:06.030 --> 00:34:10.130
flinger just as an example of a
relatively simple chain here because

00:34:10.130 --> 00:34:10.140
relatively simple chain here because
 

00:34:10.140 --> 00:34:11.760
relatively simple chain here because
application chains can't be more

00:34:11.760 --> 00:34:11.770
application chains can't be more
 

00:34:11.770 --> 00:34:15.240
application chains can't be more
we don't quite have time but usually you

00:34:15.240 --> 00:34:15.250
we don't quite have time but usually you
 

00:34:15.250 --> 00:34:18.840
we don't quite have time but usually you
want to know why something woke up so we

00:34:18.840 --> 00:34:18.850
want to know why something woke up so we
 

00:34:18.850 --> 00:34:20.790
want to know why something woke up so we
have a running state in the application

00:34:20.790 --> 00:34:20.800
have a running state in the application
 

00:34:20.800 --> 00:34:22.740
have a running state in the application
and we want to know what made it

00:34:22.740 --> 00:34:22.750
and we want to know what made it
 

00:34:22.750 --> 00:34:25.110
and we want to know what made it
runnable because that will tell us why

00:34:25.110 --> 00:34:25.120
runnable because that will tell us why
 

00:34:25.120 --> 00:34:26.730
runnable because that will tell us why
the thread woke up in the first place

00:34:26.730 --> 00:34:26.740
the thread woke up in the first place
 

00:34:26.740 --> 00:34:29.880
the thread woke up in the first place
so here I click the running State on top

00:34:29.880 --> 00:34:29.890
so here I click the running State on top
 

00:34:29.890 --> 00:34:31.350
so here I click the running State on top
of surface flinger and I can hit the

00:34:31.350 --> 00:34:31.360
of surface flinger and I can hit the
 

00:34:31.360 --> 00:34:34.290
of surface flinger and I can hit the
left arrow and I can see the runnable

00:34:34.290 --> 00:34:34.300
left arrow and I can see the runnable
 

00:34:34.300 --> 00:34:37.200
left arrow and I can see the runnable
state now I have the runnable state

00:34:37.200 --> 00:34:37.210
state now I have the runnable state
 

00:34:37.210 --> 00:34:39.240
state now I have the runnable state
selected and I want to go ahead and

00:34:39.240 --> 00:34:39.250
selected and I want to go ahead and
 

00:34:39.250 --> 00:34:41.010
selected and I want to go ahead and
highlight that you can highlight

00:34:41.010 --> 00:34:41.020
highlight that you can highlight
 

00:34:41.020 --> 00:34:42.060
highlight that you can highlight
anything you currently have selected

00:34:42.060 --> 00:34:42.070
anything you currently have selected
 

00:34:42.070 --> 00:34:46.590
anything you currently have selected
with the M key now we have a nice little

00:34:46.590 --> 00:34:46.600
with the M key now we have a nice little
 

00:34:46.600 --> 00:34:48.389
with the M key now we have a nice little
bar showing what we're looking at in the

00:34:48.389 --> 00:34:48.399
bar showing what we're looking at in the
 

00:34:48.399 --> 00:34:53.399
bar showing what we're looking at in the
trace in this runnable section we have

00:34:53.399 --> 00:34:53.409
trace in this runnable section we have
 

00:34:53.409 --> 00:34:54.870
trace in this runnable section we have
an additional argument at the bottom

00:34:54.870 --> 00:34:54.880
an additional argument at the bottom
 

00:34:54.880 --> 00:34:58.380
an additional argument at the bottom
here it says wake up from that tid 529

00:34:58.380 --> 00:34:58.390
here it says wake up from that tid 529
 

00:34:58.390 --> 00:35:01.470
here it says wake up from that tid 529
this means that the surface singer

00:35:01.470 --> 00:35:01.480
this means that the surface singer
 

00:35:01.480 --> 00:35:06.210
this means that the surface singer
thread was triggered by Fred 529 now I

00:35:06.210 --> 00:35:06.220
thread was triggered by Fred 529 now I
 

00:35:06.220 --> 00:35:08.910
thread was triggered by Fred 529 now I
don't know what thread 529 is but I do

00:35:08.910 --> 00:35:08.920
don't know what thread 529 is but I do
 

00:35:08.920 --> 00:35:12.540
don't know what thread 529 is but I do
know that thread 529 must be running at

00:35:12.540 --> 00:35:12.550
know that thread 529 must be running at
 

00:35:12.550 --> 00:35:15.960
know that thread 529 must be running at
this point because if thread 529 wasn't

00:35:15.960 --> 00:35:15.970
this point because if thread 529 wasn't
 

00:35:15.970 --> 00:35:17.430
this point because if thread 529 wasn't
running it couldn't have woken up

00:35:17.430 --> 00:35:17.440
running it couldn't have woken up
 

00:35:17.440 --> 00:35:19.440
running it couldn't have woken up
service winner so I can scroll back up

00:35:19.440 --> 00:35:19.450
service winner so I can scroll back up
 

00:35:19.450 --> 00:35:22.890
service winner so I can scroll back up
to the top of the trace to see what is

00:35:22.890 --> 00:35:22.900
to the top of the trace to see what is
 

00:35:22.900 --> 00:35:25.710
to the top of the trace to see what is
actually running on the CPU and I see

00:35:25.710 --> 00:35:25.720
actually running on the CPU and I see
 

00:35:25.720 --> 00:35:27.630
actually running on the CPU and I see
this thing event Fred so I'll click

00:35:27.630 --> 00:35:27.640
this thing event Fred so I'll click
 

00:35:27.640 --> 00:35:31.110
this thing event Fred so I'll click
event thread and event thread is part of

00:35:31.110 --> 00:35:31.120
event thread and event thread is part of
 

00:35:31.120 --> 00:35:31.770
event thread and event thread is part of
source layer

00:35:31.770 --> 00:35:31.780
source layer
 

00:35:31.780 --> 00:35:33.120
source layer
it's another thread inside of the

00:35:33.120 --> 00:35:33.130
it's another thread inside of the
 

00:35:33.130 --> 00:35:36.750
it's another thread inside of the
surface flinger process and now I want

00:35:36.750 --> 00:35:36.760
surface flinger process and now I want
 

00:35:36.760 --> 00:35:38.250
surface flinger process and now I want
to know what welcomed that event thread

00:35:38.250 --> 00:35:38.260
to know what welcomed that event thread
 

00:35:38.260 --> 00:35:39.900
to know what welcomed that event thread
because I'm working my way backwards

00:35:39.900 --> 00:35:39.910
because I'm working my way backwards
 

00:35:39.910 --> 00:35:43.320
because I'm working my way backwards
from to figure out why surface ling'er

00:35:43.320 --> 00:35:43.330
from to figure out why surface ling'er
 

00:35:43.330 --> 00:35:46.830
from to figure out why surface ling'er
woke up at all here so I'll scroll back

00:35:46.830 --> 00:35:46.840
woke up at all here so I'll scroll back
 

00:35:46.840 --> 00:35:49.710
woke up at all here so I'll scroll back
down and find event thread inside of

00:35:49.710 --> 00:35:49.720
down and find event thread inside of
 

00:35:49.720 --> 00:35:54.800
down and find event thread inside of
surface flinger and there's the actual

00:35:54.800 --> 00:35:54.810
surface flinger and there's the actual
 

00:35:54.810 --> 00:35:57.720
surface flinger and there's the actual
thread state for the event thread we

00:35:57.720 --> 00:35:57.730
thread state for the event thread we
 

00:35:57.730 --> 00:35:59.310
thread state for the event thread we
just have that little colored bar to

00:35:59.310 --> 00:35:59.320
just have that little colored bar to
 

00:35:59.320 --> 00:36:00.420
just have that little colored bar to
show that it's running because it

00:36:00.420 --> 00:36:00.430
show that it's running because it
 

00:36:00.430 --> 00:36:02.690
show that it's running because it
doesn't have any event during that time

00:36:02.690 --> 00:36:02.700
doesn't have any event during that time
 

00:36:02.700 --> 00:36:05.430
doesn't have any event during that time
we can click the runnable section of the

00:36:05.430 --> 00:36:05.440
we can click the runnable section of the
 

00:36:05.440 --> 00:36:07.140
we can click the runnable section of the
event thread and see that it woke up

00:36:07.140 --> 00:36:07.150
event thread and see that it woke up
 

00:36:07.150 --> 00:36:12.600
event thread and see that it woke up
from thread 4568 now I cheated I know

00:36:12.600 --> 00:36:12.610
from thread 4568 now I cheated I know
 

00:36:12.610 --> 00:36:15.630
from thread 4568 now I cheated I know
what thread 4568 is it is the display

00:36:15.630 --> 00:36:15.640
what thread 4568 is it is the display
 

00:36:15.640 --> 00:36:17.310
what thread 4568 is it is the display
think Fred that is also one surface

00:36:17.310 --> 00:36:17.320
think Fred that is also one surface
 

00:36:17.320 --> 00:36:20.250
think Fred that is also one surface
layer so let's go to that one and see

00:36:20.250 --> 00:36:20.260
layer so let's go to that one and see
 

00:36:20.260 --> 00:36:23.490
layer so let's go to that one and see
what woke up the display syncs for it

00:36:23.490 --> 00:36:23.500
what woke up the display syncs for it
 

00:36:23.500 --> 00:36:26.890
what woke up the display syncs for it
that's right down there we click it we

00:36:26.890 --> 00:36:26.900
that's right down there we click it we
 

00:36:26.900 --> 00:36:32.200
that's right down there we click it we
see wake up from PID 0 PA d 0 is a

00:36:32.200 --> 00:36:32.210
see wake up from PID 0 PA d 0 is a
 

00:36:32.210 --> 00:36:36.190
see wake up from PID 0 PA d 0 is a
special thing in a trace and it all it

00:36:36.190 --> 00:36:36.200
special thing in a trace and it all it
 

00:36:36.200 --> 00:36:38.110
special thing in a trace and it all it
means is that whatever thread you're

00:36:38.110 --> 00:36:38.120
means is that whatever thread you're
 

00:36:38.120 --> 00:36:41.950
means is that whatever thread you're
looking at was woken up by an interrupt

00:36:41.950 --> 00:36:41.960
looking at was woken up by an interrupt
 

00:36:41.960 --> 00:36:44.440
looking at was woken up by an interrupt
of some sort is woken up by an interrupt

00:36:44.440 --> 00:36:44.450
of some sort is woken up by an interrupt
 

00:36:44.450 --> 00:36:47.590
of some sort is woken up by an interrupt
handler usually this means a timer

00:36:47.590 --> 00:36:47.600
handler usually this means a timer
 

00:36:47.600 --> 00:36:48.550
handler usually this means a timer
expired

00:36:48.550 --> 00:36:48.560
expired
 

00:36:48.560 --> 00:36:50.290
expired
this makes sense for surface flinger

00:36:50.290 --> 00:36:50.300
this makes sense for surface flinger
 

00:36:50.300 --> 00:36:52.690
this makes sense for surface flinger
servers flinger will run every 16

00:36:52.690 --> 00:36:52.700
servers flinger will run every 16
 

00:36:52.700 --> 00:36:55.780
servers flinger will run every 16
milliseconds so a timer expired look at

00:36:55.780 --> 00:36:55.790
milliseconds so a timer expired look at
 

00:36:55.790 --> 00:36:57.460
milliseconds so a timer expired look at
this display synchronization thread

00:36:57.460 --> 00:36:57.470
this display synchronization thread
 

00:36:57.470 --> 00:36:59.350
this display synchronization thread
which in turn look at the event thread

00:36:59.350 --> 00:36:59.360
which in turn look at the event thread
 

00:36:59.360 --> 00:37:04.030
which in turn look at the event thread
which then welcome surface flinger if

00:37:04.030 --> 00:37:04.040
which then welcome surface flinger if
 

00:37:04.040 --> 00:37:06.190
which then welcome surface flinger if
you see this in your trace it usually

00:37:06.190 --> 00:37:06.200
you see this in your trace it usually
 

00:37:06.200 --> 00:37:09.130
you see this in your trace it usually
means that some timer expired and woke

00:37:09.130 --> 00:37:09.140
means that some timer expired and woke
 

00:37:09.140 --> 00:37:10.570
means that some timer expired and woke
up your thread and that's why you're

00:37:10.570 --> 00:37:10.580
up your thread and that's why you're
 

00:37:10.580 --> 00:37:15.100
up your thread and that's why you're
running and that's it that's the basics

00:37:15.100 --> 00:37:15.110
running and that's it that's the basics
 

00:37:15.110 --> 00:37:17.650
running and that's it that's the basics
of what you need to know to actually get

00:37:17.650 --> 00:37:17.660
of what you need to know to actually get
 

00:37:17.660 --> 00:37:19.540
of what you need to know to actually get
somewhere with this trace take some

00:37:19.540 --> 00:37:19.550
somewhere with this trace take some
 

00:37:19.550 --> 00:37:22.060
somewhere with this trace take some
traces of your application and just try

00:37:22.060 --> 00:37:22.070
traces of your application and just try
 

00:37:22.070 --> 00:37:23.800
traces of your application and just try
to see what's going on look at the

00:37:23.800 --> 00:37:23.810
to see what's going on look at the
 

00:37:23.810 --> 00:37:25.840
to see what's going on look at the
system look at how frames are being

00:37:25.840 --> 00:37:25.850
system look at how frames are being
 

00:37:25.850 --> 00:37:29.470
system look at how frames are being
drawn and sent to the display and how

00:37:29.470 --> 00:37:29.480
drawn and sent to the display and how
 

00:37:29.480 --> 00:37:32.230
drawn and sent to the display and how
you're getting touch input from the

00:37:32.230 --> 00:37:32.240
you're getting touch input from the
 

00:37:32.240 --> 00:37:35.500
you're getting touch input from the
server this kind of tracing backwards

00:37:35.500 --> 00:37:35.510
server this kind of tracing backwards
 

00:37:35.510 --> 00:37:38.740
server this kind of tracing backwards
via the runnable state is most of what

00:37:38.740 --> 00:37:38.750
via the runnable state is most of what
 

00:37:38.750 --> 00:37:41.170
via the runnable state is most of what
we do to understand how the system fits

00:37:41.170 --> 00:37:41.180
we do to understand how the system fits
 

00:37:41.180 --> 00:37:43.270
we do to understand how the system fits
together and you can use it to improve

00:37:43.270 --> 00:37:43.280
together and you can use it to improve
 

00:37:43.280 --> 00:37:46.870
together and you can use it to improve
your applications as well now if you

00:37:46.870 --> 00:37:46.880
your applications as well now if you
 

00:37:46.880 --> 00:37:49.930
your applications as well now if you
want a lot more advice on what you

00:37:49.930 --> 00:37:49.940
want a lot more advice on what you
 

00:37:49.940 --> 00:37:52.870
want a lot more advice on what you
should do as opposed to how to

00:37:52.870 --> 00:37:52.880
should do as opposed to how to
 

00:37:52.880 --> 00:37:55.560
should do as opposed to how to
understand what's going on today I

00:37:55.560 --> 00:37:55.570
understand what's going on today I
 

00:37:55.570 --> 00:37:58.150
understand what's going on today I
recommend you go to the there's an

00:37:58.150 --> 00:37:58.160
recommend you go to the there's an
 

00:37:58.160 --> 00:37:59.440
recommend you go to the there's an
additional Android performance talk

00:37:59.440 --> 00:37:59.450
additional Android performance talk
 

00:37:59.450 --> 00:38:01.960
additional Android performance talk
specifically on the UI pipeline that

00:38:01.960 --> 00:38:01.970
specifically on the UI pipeline that
 

00:38:01.970 --> 00:38:04.870
specifically on the UI pipeline that
chet haase and Chris Craig are giving

00:38:04.870 --> 00:38:04.880
chet haase and Chris Craig are giving
 

00:38:04.880 --> 00:38:08.080
chet haase and Chris Craig are giving
it's at Friday at 1:30 p.m. so

00:38:08.080 --> 00:38:08.090
it's at Friday at 1:30 p.m. so
 

00:38:08.090 --> 00:38:09.460
it's at Friday at 1:30 p.m. so
definitely go to that I know they're

00:38:09.460 --> 00:38:09.470
definitely go to that I know they're
 

00:38:09.470 --> 00:38:11.860
definitely go to that I know they're
going to talk a bunch about recyclerview

00:38:11.860 --> 00:38:11.870
going to talk a bunch about recyclerview
 

00:38:11.870 --> 00:38:13.960
going to talk a bunch about recyclerview
and optimizations there which is always

00:38:13.960 --> 00:38:13.970
and optimizations there which is always
 

00:38:13.970 --> 00:38:18.960
and optimizations there which is always
a popular topic so that's it thank you

00:38:18.960 --> 00:38:18.970
a popular topic so that's it thank you
 

00:38:18.970 --> 00:38:21.540
a popular topic so that's it thank you
[Applause]

00:38:21.540 --> 00:38:21.550
[Applause]
 

00:38:21.550 --> 00:38:35.479
[Applause]
[Music]

