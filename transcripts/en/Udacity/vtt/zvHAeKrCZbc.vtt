WEBVTT
Kind: captions
Language: en

00:00:00.450 --> 00:00:04.380
When we initialized to this computer's
turn variable using the default in that

00:00:04.380 --> 00:00:08.010
method we never actually set
its move property to anything.

00:00:08.010 --> 00:00:11.250
We need to fill in our generate
move method in order to randomly

00:00:11.250 --> 00:00:13.390
generate a move for the computer.

00:00:13.390 --> 00:00:16.239
The best tool for
this job is a switch statement.

00:00:16.239 --> 00:00:21.160
The syntax for switch statements in
Objective-C take this general form.

00:00:21.160 --> 00:00:25.000
Switch statements in Objective-C
are quite limited compared to Swift and

00:00:25.000 --> 00:00:28.330
that they can only condition
upon the value of an integer.

00:00:28.330 --> 00:00:31.490
They also differ in that the flow
of control falls through.

00:00:31.490 --> 00:00:34.850
That means you need to include a break
statement following the statement to be

00:00:34.850 --> 00:00:36.820
executed for each case.

00:00:36.820 --> 00:00:40.040
It's also required that you
include a default case.

00:00:40.040 --> 00:00:42.920
Now let's apply this to
our generateMove method.

00:00:42.920 --> 00:00:44.250
To generate a random move for

00:00:44.250 --> 00:00:47.990
the computer, we'll first need
a random integer between zero and two.

00:00:47.990 --> 00:00:52.310
We'll get that using this line of code,
using the familiar arc4random method.

00:00:53.410 --> 00:00:55.220
Now on to our switch statement.

00:00:55.220 --> 00:00:58.350
Will switch on the value of
the interger we just generated and

00:00:58.350 --> 00:01:01.120
return a different move for each case.

00:01:01.120 --> 00:01:03.770
Note the break statements
after each case.

00:01:03.770 --> 00:01:07.370
We're going to need a default case
to catch any invalid numbers.

00:01:07.370 --> 00:01:11.030
But right now our enum just
has three expected choices.

00:01:11.030 --> 00:01:15.300
Let's add a case for invalid to our
enum, and then we can return that for

00:01:15.300 --> 00:01:16.720
our default case.

00:01:16.720 --> 00:01:19.870
Now we have a catch-all in the event
that we get some number that's not

00:01:19.870 --> 00:01:21.320
between 0 and 2.

00:01:21.320 --> 00:01:25.850
We check that we have a break statement
after the default case, and that's it.

00:01:25.850 --> 00:01:27.780
Our generateMove method is ready to go.

