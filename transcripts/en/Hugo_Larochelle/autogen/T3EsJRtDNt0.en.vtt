WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.190
 in this capture we will see 

00:00:01.589 --> 00:00:06.839
 the backtrack king algorithm sturges then 

00:00:05.190 --> 00:00:08.069
 we have seen the definition of a problem of 

00:00:06.839 --> 00:00:09.570
 constraint satisfaction 

00:00:08.069 --> 00:00:12.030
 what it requires is that we 

00:00:09.570 --> 00:00:13.590
 define a set of variables that 

00:00:12.030 --> 00:00:15.599
 for each of the variables define 

00:00:13.590 --> 00:00:16.260
 an area of ​​potential value for these 

00:00:15.599 --> 00:00:18.090
 variables 

00:00:16.260 --> 00:00:21.510
 we have to define a set of 

00:00:18.090 --> 00:00:23.580
 constraints to satisfy and in our 

00:00:21.510 --> 00:00:25.529
 search space that we explored for 

00:00:23.580 --> 00:00:28.170
 solve our satisfaction problem 

00:00:25.529 --> 00:00:31.170
 against one we have a place that corresponds in 

00:00:28.170 --> 00:00:33.809
 made to a value assignment 

00:00:31.170 --> 00:00:36.630
 uncertain or at all and sees all 

00:00:33.809 --> 00:00:38.399
 variables and the goal is to find 

00:00:36.630 --> 00:00:41.309
 an assignment that will be complete 

00:00:38.399 --> 00:00:43.379
 that is, who will assign a value 

00:00:41.309 --> 00:00:45.390
 the set of all the variables of the 

00:00:43.379 --> 00:00:46.800
 problem it's going to be compatible this is at 

00:00:45.390 --> 00:00:48.809
 to say that it will violate any of 

00:00:46.800 --> 00:00:54.829
 constraints of our set of 

00:00:48.809 --> 00:00:56.930
 constraints then the first suggestion 

00:00:54.829 --> 00:00:59.670
 algorithms that could be considered 

00:00:56.930 --> 00:01:03.539
 it will be a nice so search 

00:00:59.670 --> 00:01:06.780
 in the graph of assignments the big 

00:01:03.539 --> 00:01:09.150
 strong and the next structure so in 

00:01:06.780 --> 00:01:16.290
 what if graffiti a draw or an eto'o 

00:01:09.150 --> 00:01:18.540
 would be an assignment for the root of 

00:01:16.290 --> 00:01:19.979
 our graph so the initial state that 

00:01:18.540 --> 00:01:23.310
 would correspond an assignment that is 

00:01:19.979 --> 00:01:25.979
 empty we associated no value with any 

00:01:23.310 --> 00:01:29.390
 variables in our function of 

00:01:25.979 --> 00:01:32.130
 transition for our graph what 

00:01:29.390 --> 00:01:34.560
 could make his signed a value to 

00:01:32.130 --> 00:01:37.140
 a variable that has not been yet to 

00:01:34.560 --> 00:01:39.119
 sign and more the bus function that 

00:01:37.140 --> 00:01:41.670
 would determine if we reached our 

00:01:39.119 --> 00:01:43.470
 goal not she would return true if 

00:01:41.670 --> 00:01:45.149
 the assignment is complete and 

00:01:43.470 --> 00:01:47.100
 competitive 

00:01:45.149 --> 00:01:49.710
 so this is an algorithm that is very 

00:01:47.100 --> 00:01:52.140
 general very simple it corresponds in 

00:01:49.710 --> 00:01:55.890
 done to an in-depth research of 

00:01:52.140 --> 00:01:58.250
 purges and since the solution has to be 

00:01:55.890 --> 00:02:01.140
 which must sign a value to 

00:01:58.250 --> 00:02:03.630
 each hatred variable a solution 

00:02:01.140 --> 00:02:04.710
 must necessarily appear 

00:02:03.630 --> 00:02:08.570
 depth n 

00:02:04.710 --> 00:02:08.570
 in our graf note 

00:02:09.569 --> 00:02:16.379
 now there are two problems associated 

00:02:12.239 --> 00:02:18.299
 to this this algorithm where are we going 

00:02:16.379 --> 00:02:20.519
 to correct for an algorithm 

00:02:18.299 --> 00:02:24.870
 improved that will be the bac tracking 

00:02:20.519 --> 00:02:27.569
 search the first one referred to the 

00:02:24.870 --> 00:02:29.790
 size of our search notice our 

00:02:27.569 --> 00:02:31.889
 graph actually corresponds to an arm or 

00:02:29.790 --> 00:02:35.370
 each of the naked actually we generate 

00:02:31.889 --> 00:02:36.780
 several assignments possible and 

00:02:35.370 --> 00:02:39.510
 each of these new assignments 

00:02:36.780 --> 00:02:42.989
 when generating other assignments a little 

00:02:39.510 --> 00:02:44.639
 more complete and a website and 

00:02:42.989 --> 00:02:46.889
 now consider what is the 

00:02:44.639 --> 00:02:50.040
 size of these lookup tables there and 

00:02:46.889 --> 00:02:54.060
 well at the root so at the first level 

00:02:50.040 --> 00:02:56.459
 we have a number of children who are cold 

00:02:54.060 --> 00:02:59.099
 and where m and the number of variables and 

00:02:56.459 --> 00:03:02.969
 the size of the domain since at each 

00:02:59.099 --> 00:03:04.650
 level we can choose any dn 

00:03:02.969 --> 00:03:06.629
 variable and for each of these 

00:03:04.650 --> 00:03:08.340
 take any of the values 

00:03:06.629 --> 00:03:11.699
 so that's news once 

00:03:08.340 --> 00:03:14.790
 assignments possible so once 

00:03:11.699 --> 00:03:17.639
 children the successor to the root 

00:03:14.790 --> 00:03:21.090
 this is the next level but here we have 

00:03:17.639 --> 00:03:22.349
 a - a variable that is among 

00:03:21.090 --> 00:03:24.540
 which one can choose to make a 

00:03:22.349 --> 00:03:26.159
 assignment but we still have values 

00:03:24.540 --> 00:03:27.509
 possible so we sit here for 

00:03:26.159 --> 00:03:29.729
 simplify that all variables have 

00:03:27.509 --> 00:03:31.739
 the same number of possible values ​​in 

00:03:29.729 --> 00:03:34.319
 their domain so in this case we have 

00:03:31.739 --> 00:03:38.819
 half men minus 1 time successors 

00:03:34.319 --> 00:03:40.739
 for each of the generated nudes each of which 

00:03:38.819 --> 00:03:44.430
 and our successors generated by the 

00:03:40.739 --> 00:03:47.069
 stories and if we continue like this 

00:03:44.430 --> 00:03:49.650
 up to level 1 that means 

00:03:47.069 --> 00:03:54.650
 that would be factorial so fred - 

00:03:49.650 --> 00:03:58.560
 0 reindeer -2 7 8 times hate 

00:03:54.650 --> 00:04:01.079
 complete assignment and that's it 

00:03:58.560 --> 00:04:03.750
 in fact so ban lx of at the 

00:04:01.079 --> 00:04:04.379
 hate number of knots in our works 

00:04:03.750 --> 00:04:06.780
 of research 

00:04:04.379 --> 00:04:08.969
 in fact that is it is to be 

00:04:06.780 --> 00:04:11.069
 far too much company number of us 

00:04:08.969 --> 00:04:14.549
 that we need to represent our 

00:04:11.069 --> 00:04:15.989
 space our space of six missions 

00:04:14.549 --> 00:04:19.049
 among others 

00:04:15.989 --> 00:04:21.209
 this way of generating successors 

00:04:19.049 --> 00:04:22.660
 she ignores skin as small as 

00:04:21.209 --> 00:04:26.210
 activities 

00:04:22.660 --> 00:04:29.990
 to agitate assignments in our 

00:04:26.210 --> 00:04:32.960
 status so assigned is aa red then w to 

00:04:29.990 --> 00:04:35.960
 ab it's the same thing 

00:04:32.960 --> 00:04:38.960
 sign w to abeilhan first s to 1 red 

00:04:35.960 --> 00:04:40.460
 afterwards is actually if we held 

00:04:38.960 --> 00:04:44.270
 account of the community activities 

00:04:40.460 --> 00:04:45.320
 could have some to the n2 and to do 

00:04:44.270 --> 00:04:47.600
 what are we going to do 

00:04:45.320 --> 00:04:49.940
 so the first reading to improve 

00:04:47.600 --> 00:04:52.520
 our crisis and to consider that at each 

00:04:49.940 --> 00:04:56.240
 level there is only one variable that is going 

00:04:52.520 --> 00:04:58.160
 be assigned to different values ​​so 

00:04:56.240 --> 00:05:00.770
 when I go maybe to the root I 

00:04:58.160 --> 00:05:03.050
 firstly choose one and one 

00:05:00.770 --> 00:05:05.620
 only variable and this variable I'm going 

00:05:03.050 --> 00:05:09.229
 consider all these possible values 

00:05:05.620 --> 00:05:12.050
 and at the next level 

00:05:09.229 --> 00:05:13.430
 so this gesture is also research 

00:05:12.050 --> 00:05:15.259
 again choose a single 

00:05:13.430 --> 00:05:17.810
 variable and then I'm going to assign to this 

00:05:15.259 --> 00:05:20.630
 variable all these possible values 

00:05:17.810 --> 00:05:22.910
 so I'll wait for my exploration at 

00:05:20.630 --> 00:05:29.240
 all assignments of this value 

00:05:22.910 --> 00:05:29.840
 there but at these different words the 

00:05:29.240 --> 00:05:32.780
 second idea 

00:05:29.840 --> 00:05:35.720
 in fact it is to notice that it serves to 

00:05:32.780 --> 00:05:37.849
 nothing is useless to continue signing 

00:05:35.720 --> 00:05:40.580
 variables if there are already 

00:05:37.849 --> 00:05:42.889
 constraints that are violated in my 

00:05:40.580 --> 00:05:46.300
 partial assignment so if I have a 

00:05:42.889 --> 00:05:48.409
 association that is already generating conflict 

00:05:46.300 --> 00:05:50.060
 it's nothing to make me 

00:05:48.409 --> 00:05:53.539
 complete association to realize to me 

00:05:50.060 --> 00:05:55.669
 that in fact my assignment completes them 

00:05:53.539 --> 00:05:56.690
 yes but the compatible steps is 

00:05:55.669 --> 00:05:58.789
 something that I could have detected 

00:05:56.690 --> 00:06:00.979
 long before the host idea is that in 

00:05:58.789 --> 00:06:04.220
 done when we are going to explore our graph 

00:06:00.979 --> 00:06:06.169
 we're going to back up or in English backtrack to 

00:06:04.220 --> 00:06:08.120
 whenever one finds oneself at a 

00:06:06.169 --> 00:06:09.889
 assignment we can not generate a 

00:06:08.120 --> 00:06:11.210
 new assignment which she would 

00:06:09.889 --> 00:06:13.340
 compatible so we can not add a 

00:06:11.210 --> 00:06:14.590
 new assignment of a variable without 

00:06:13.340 --> 00:06:17.900
 violine contrary 

00:06:14.590 --> 00:06:20.120
 and now if we combine these two 

00:06:17.900 --> 00:06:22.250
 ideas there to know choose only one 

00:06:20.120 --> 00:06:25.539
 variable at each level when we do 

00:06:22.250 --> 00:06:27.710
 assignments and retreats when 

00:06:25.539 --> 00:06:29.630
 arrives at a place we have no more 

00:06:27.710 --> 00:06:31.880
 new assignments compatible one 

00:06:29.630 --> 00:06:34.520
 can generate we finally get our 

00:06:31.880 --> 00:06:36.259
 algorithm that is the tracking crate souk 

00:06:34.520 --> 00:06:39.410
 and it's going to be the algorithm of 

00:06:36.259 --> 00:06:42.949
 basis we will see in this capsule 

00:06:39.410 --> 00:06:46.699
 is and next capsules to develop 

00:06:42.949 --> 00:06:51.830
 effective solutions to problems 

00:06:46.699 --> 00:06:55.370
 of satisfaction against is then we have a 

00:06:51.830 --> 00:06:58.220
 pseudo code here the algorithm is so 

00:06:55.370 --> 00:07:00.169
 start with bac tracking 

00:06:58.220 --> 00:07:03.470
 search where we give as argument a 

00:07:00.169 --> 00:07:07.430
 variable csp that will correspond in fact 

00:07:03.470 --> 00:07:09.500
 all the information that corresponds to 

00:07:07.430 --> 00:07:10.970
 the definition of my problem so that's 

00:07:09.500 --> 00:07:13.250
 what the set of variables 

00:07:10.970 --> 00:07:14.569
 what is the domain of variables 

00:07:13.250 --> 00:07:15.979
 what is it to counter them so it's a 

00:07:14.569 --> 00:07:18.370
 kind of data structures that 

00:07:15.979 --> 00:07:20.750
 contains all this information 

00:07:18.370 --> 00:07:23.090
 parking either I see it actually calling a 

00:07:20.750 --> 00:07:25.039
 method that are going to be and cursive which is going 

00:07:23.090 --> 00:07:27.050
 to be called the same on the inside in 

00:07:25.039 --> 00:07:30.259
 giving the initial condition to know 

00:07:27.050 --> 00:07:32.810
 an assignment cities and by the way 

00:07:30.259 --> 00:07:37.069
 obviously the definition of their 

00:07:32.810 --> 00:07:39.380
 problems csb is so notable rites 

00:07:37.069 --> 00:07:44.090
 backtrack he'll take argument two 

00:07:39.380 --> 00:07:47.120
 things will take two things he'll 

00:07:44.090 --> 00:07:50.419
 take a summons is the 

00:07:47.120 --> 00:07:52.039
 definition of the premium csb is what will 

00:07:50.419 --> 00:07:54.259
 make his first mores detected is 

00:07:52.039 --> 00:07:56.900
 what the assignment is complete 

00:07:54.259 --> 00:07:59.630
 if so I will return this 

00:07:56.900 --> 00:08:01.279
 assignment therefore has it in fact when 

00:07:59.630 --> 00:08:02.360
 will arrive a full assignment 

00:08:01.279 --> 00:08:04.430
 because we will not allow ourselves to 

00:08:02.360 --> 00:08:07.490
 continue if we come to 

00:08:04.430 --> 00:08:09.650
 assignments that are that violate the 

00:08:07.490 --> 00:08:12.199
 constraints that are not compatible if 

00:08:09.650 --> 00:08:13.669
 we arrive at an association assignment 

00:08:12.199 --> 00:08:15.199
 complete one necessarily has a 

00:08:13.669 --> 00:08:18.400
 assignment that is also compatible 

00:08:15.199 --> 00:08:22.759
 and we will return this assignment there 

00:08:18.400 --> 00:08:24.800
 otherwise we will choose a variable that 

00:08:22.759 --> 00:08:28.819
 is not signed by me yet 

00:08:24.800 --> 00:08:31.819
 assignment so we see a method or 

00:08:28.819 --> 00:08:33.820
 a function that will make that choice there and 

00:08:31.819 --> 00:08:36.020
 that's a variable valve missed x 

00:08:33.820 --> 00:08:38.089
 then two are your interests on 

00:08:36.020 --> 00:08:40.399
 all the possible values ​​of another 

00:08:38.089 --> 00:08:41.839
 variable x and have reiterated in a 

00:08:40.399 --> 00:08:43.490
 some order 7 out of the water is going to be 

00:08:41.839 --> 00:08:46.930
 given by another method that we are going 

00:08:43.490 --> 00:08:50.290
 call ordinate value yes 

00:08:46.930 --> 00:08:52.300
 pardon I jumped here so the method 

00:08:50.290 --> 00:08:54.910
 varna sign your make the choice of the 

00:08:52.300 --> 00:08:57.850
 next variable and the method or the 

00:08:54.910 --> 00:09:00.670
 ordered value function will she ordered 

00:08:57.850 --> 00:09:02.500
 the values ​​of the domain of x in a 

00:09:00.670 --> 00:09:04.450
 order that will allow us to execute 

00:09:02.500 --> 00:09:08.200
 more quickly the faster 

00:09:04.450 --> 00:09:10.690
 possible our note search for 

00:09:08.200 --> 00:09:12.339
 space and we're not going in fact in 

00:09:10.690 --> 00:09:14.140
 other capsules that there are different 

00:09:12.339 --> 00:09:16.029
 choice of scheduling values ​​that 

00:09:14.140 --> 00:09:18.070
 will give more or less performance 

00:09:16.029 --> 00:09:19.570
 good so that's something we 

00:09:18.070 --> 00:09:21.100
 will see later so for now 

00:09:19.570 --> 00:09:23.350
 can ask what value to give 

00:09:21.100 --> 00:09:24.760
 variable data the values ​​speak 

00:09:23.350 --> 00:09:27.330
 in a random order 

00:09:24.760 --> 00:09:30.459
 it will be an example of ordered value 

00:09:27.330 --> 00:09:31.270
 so for each value what are we going 

00:09:30.459 --> 00:09:35.320
 to do thereafter 

00:09:31.270 --> 00:09:35.860
 in this loop there is we are going 

00:09:35.320 --> 00:09:39.430
 check 

00:09:35.860 --> 00:09:41.950
 can i have signed x to the value 

00:09:39.430 --> 00:09:44.980
 v and add that in my assignment 

00:09:41.950 --> 00:09:46.750
 current and get one more time 

00:09:44.980 --> 00:09:48.339
 assignment new assignment which is 

00:09:46.750 --> 00:09:51.970
 compatible no that violates any of 

00:09:48.339 --> 00:09:55.450
 constraints csp if that's the case 

00:09:51.970 --> 00:09:58.620
 will add my assignment so 

00:09:55.450 --> 00:10:02.529
 I add and sega lift the assignment 

00:09:58.620 --> 00:10:05.680
 I will also take the field of 

00:10:02.529 --> 00:10:08.080
 x in the csp and I'm going to change it to 

00:10:05.680 --> 00:10:09.490
 that they be in the fact that they contain 

00:10:08.080 --> 00:10:12.310
 a single value and that it is the 

00:10:09.490 --> 00:10:15.820
 value that ge has signed to x so their 

00:10:12.310 --> 00:10:16.990
 larvae and generate a new csp that I 

00:10:15.820 --> 00:10:19.570
 will call if they yearn for you 

00:10:16.990 --> 00:10:22.089
 as a kind of copies of csp but 

00:10:19.570 --> 00:10:25.540
 where the field of ex-charged and 29 years in 

00:10:22.089 --> 00:10:27.580
 account not only the uv value to those 

00:10:25.540 --> 00:10:31.870
 to remember another a third 

00:10:27.580 --> 00:10:34.720
 function that is infer years and the goal 

00:10:31.870 --> 00:10:36.790
 of a ferrand it's going to be to simplify the 

00:10:34.720 --> 00:10:38.140
 problem csp so the problem if they 

00:10:36.790 --> 00:10:41.320
 aspire stars what will do is 

00:10:38.140 --> 00:10:42.970
 that reference will try to reduce the 

00:10:41.320 --> 00:10:44.829
 domain of all variables will be 

00:10:42.970 --> 00:10:46.660
 not been assigned yet so this is a 

00:10:44.829 --> 00:10:48.640
 thing that dolphin inferences that a 

00:10:46.660 --> 00:10:51.010
 something other than reference to your temptation to 

00:10:48.640 --> 00:10:53.800
 do if to detect in advance if 

00:10:51.010 --> 00:10:54.459
 the assignment will necessarily lead to 

00:10:53.800 --> 00:10:56.660
 conflicts 

00:10:54.459 --> 00:10:58.459
 so is it possible to 

00:10:56.660 --> 00:11:00.199
 see from the assigned party to 

00:10:58.459 --> 00:11:01.550
 the actual whatever whatever the 

00:11:00.199 --> 00:11:02.930
 assignments will do in the future 

00:11:01.550 --> 00:11:05.149
 eventually we necessarily see 

00:11:02.930 --> 00:11:08.319
 to arrive at conflicts that will not happen 

00:11:05.149 --> 00:11:09.949
 not to satisfy the constrains so 

00:11:08.319 --> 00:11:11.779
 inferences must do it's two things 

00:11:09.949 --> 00:11:14.600
 there we return to csp stars 

00:11:11.779 --> 00:11:16.100
 simplified and if a conflict has been detected 

00:11:14.600 --> 00:11:18.379
 will return a variable 

00:11:16.100 --> 00:11:21.589
 boolean who's going to be so I called 

00:11:18.379 --> 00:11:23.540
 ok here who wants to be in the pit 6 e 

00:11:21.589 --> 00:11:25.819
 no conflict conflict sorry then sea 

00:11:23.540 --> 00:11:27.290
 hawk is equal to true but in this case 

00:11:25.819 --> 00:11:30.279
 we will call recurring 

00:11:27.290 --> 00:11:32.569
 backtrack with our assignment 

00:11:30.279 --> 00:11:36.259
 increased with togo is not what we have 

00:11:32.569 --> 00:11:37.850
 added eghezée calvet and the new 

00:11:36.259 --> 00:11:40.579
 definition of csp with domains 

00:11:37.850 --> 00:11:43.459
 reduced is that it's returning us a 

00:11:40.579 --> 00:11:45.319
 result if the result is not fake that 

00:11:43.459 --> 00:11:47.269
 means that later then more 

00:11:45.319 --> 00:11:51.769
 deep in the execution did not detect 

00:11:47.269 --> 00:11:53.420
 of confit when we will return the 

00:11:51.769 --> 00:11:54.170
 result that was found so at this 

00:11:53.420 --> 00:11:56.000
 moment too 

00:11:54.170 --> 00:11:57.889
 it means that the result has made 

00:11:56.000 --> 00:12:00.769
 possibly in the recursive call on 

00:11:57.889 --> 00:12:02.389
 has reached this this part for no 

00:12:00.769 --> 00:12:04.040
 find a very complete assignment 

00:12:02.389 --> 00:12:06.199
 when it's done here it's like that 

00:12:04.040 --> 00:12:09.310
 return this assignment complete the 

00:12:06.199 --> 00:12:12.170
 higher up in the execution and 

00:12:09.310 --> 00:12:15.230
 so that's the body or result is 

00:12:12.170 --> 00:12:16.910
 not wrong and so results it takes by 

00:12:15.230 --> 00:12:20.149
 against what we will do is we go 

00:12:16.910 --> 00:12:22.009
 remove our assignment we were in 

00:12:20.149 --> 00:12:24.050
 train to consider and xigua life on 

00:12:22.009 --> 00:12:27.380
 will remove assignments and that's okay 

00:12:24.050 --> 00:12:28.910
 bring us to a next next 

00:12:27.380 --> 00:12:31.519
 iteration we will take a new 

00:12:28.910 --> 00:12:33.680
 value of the variable signed the 

00:12:31.519 --> 00:12:35.959
 variable x we ​​go the office is an error 

00:12:33.680 --> 00:12:38.959
 can not correspond to an assignment 

00:12:35.959 --> 00:12:43.569
 which compatible and we will start again here 

00:12:38.959 --> 00:12:47.120
 we go through a tiny loop 

00:12:43.569 --> 00:12:49.189
 all this loop here without ever 

00:12:47.120 --> 00:12:50.990
 succeed in returning to the result that is 

00:12:49.189 --> 00:12:52.759
 not wrong but in this case we're going 

00:12:50.990 --> 00:12:54.829
 return must and if it will match 

00:12:52.759 --> 00:12:57.589
 to a noble tale failed to find 

00:12:54.829 --> 00:12:59.899
 no new assignment that does not 

00:12:57.589 --> 00:13:02.000
 would not eventually lead to a conflict 

00:12:59.899 --> 00:13:04.250
 so no assignation that led 

00:13:02.000 --> 00:13:09.160
 possibly an assignment that was 

00:13:04.250 --> 00:13:09.160
 complete and which were compatible 

00:13:11.080 --> 00:13:17.420
 here is an illustration of the execution of 

00:13:14.680 --> 00:13:19.880
 the backtrack king sturge algorithm for 

00:13:17.420 --> 00:13:21.260
 some few operations have 

00:13:19.880 --> 00:13:23.420
 started early with an assignment 

00:13:21.260 --> 00:13:26.780
 empty where we did not sign any color to 

00:13:23.420 --> 00:13:28.730
 none of the states of australia and 

00:13:26.780 --> 00:13:30.140
 then from there, we choose 

00:13:28.730 --> 00:13:32.000
 a variable in this case the variable 

00:13:30.140 --> 00:13:34.160
 which has been chosen is that 

00:13:32.000 --> 00:13:37.130
 corresponding this state if then 

00:13:34.160 --> 00:13:38.810
 consider having an iteration on all 

00:13:37.130 --> 00:13:41.120
 the possible colors that we could 

00:13:38.810 --> 00:13:44.870
 assign this variable which we take the 

00:13:41.120 --> 00:13:47.270
 1st then we generate the successions so 

00:13:44.870 --> 00:13:49.370
 we will explore other assignments 

00:13:47.270 --> 00:13:51.560
 more complete or there in this case we have 

00:13:49.370 --> 00:13:54.950
 chosen is it is also that we will 

00:13:51.560 --> 00:13:57.380
 consider signing it 1 every 

00:13:54.950 --> 00:13:59.140
 values ​​that are compatible 

00:13:57.380 --> 00:14:01.160
 so that means we're going to have a 

00:13:59.140 --> 00:14:03.590
 backtrack appetizer for this 

00:14:01.160 --> 00:14:07.400
 assignment there and this assignment there 

00:14:03.590 --> 00:14:10.580
 because an assignment that would have to 

00:14:07.400 --> 00:14:12.860
 sign this state there to red 

00:14:10.580 --> 00:14:14.450
 in fact we would not have passed the test of 

00:14:12.860 --> 00:14:18.440
 compatibility and so would not have 

00:14:14.450 --> 00:14:20.710
 called once backtrack so 

00:14:18.440 --> 00:14:20.710
 recurrent 

00:14:20.780 --> 00:14:25.400
 so that's an example of the execution 

00:14:23.150 --> 00:14:28.090
 first iterations of the sentry box 

00:14:25.400 --> 00:14:28.090
 kingson 

