WEBVTT
Kind: captions
Language: en

00:00:04.299 --> 00:00:05.299
&gt;&gt;Akshay Kannan: Hi, everyone.

00:00:05.299 --> 00:00:06.299
Cool, the mic works.

00:00:06.299 --> 00:00:07.299
Good afternoon, everyone.

00:00:07.299 --> 00:00:08.299
Are you guys excited for the last session
of the day?

00:00:08.299 --> 00:00:11.539
[ Cheering ].
&gt;&gt;Akshay Kannan: All right.

00:00:11.539 --> 00:00:14.390
My name is Akshay Kannan, and I'm a PM on
the project.

00:00:14.390 --> 00:00:17.119
&gt;&gt;Yuri Dolgov: And I'm Yuri Dolgov, and I'm
software engineer on the project.

00:00:17.119 --> 00:00:20.300
&gt;&gt;Akshay Kannan: And today we're going to
talking to you about Google Cloud Print and

00:00:20.300 --> 00:00:22.640
the future of printing.

00:00:22.640 --> 00:00:26.890
So real quick just to give you an outline
of the presentation, we'll start with an introduction,

00:00:26.890 --> 00:00:28.150
explain what Google Cloud Print is.

00:00:28.150 --> 00:00:31.990
We'll talk about how you can integrate with
our application both to print from as well

00:00:31.990 --> 00:00:33.470
as receive print jobs.

00:00:33.470 --> 00:00:38.149
We'll talk about some of the formats we support
and finally we'll talk about our future plans

00:00:38.149 --> 00:00:40.720
and where we're heading going forward.

00:00:40.720 --> 00:00:45.390
So real quick just to get a show of hands,
how many of you guys in the audience have

00:00:45.390 --> 00:00:48.800
heard of Google Cloud Print prior to Google
I/O?

00:00:48.800 --> 00:00:50.219
Awesome.

00:00:50.219 --> 00:00:51.280
Pretty much everyone.

00:00:51.280 --> 00:00:52.280
Cool.

00:00:52.280 --> 00:00:55.660
And how many of you guys have ever printed
something using Google Cloud Print before

00:00:55.660 --> 00:00:57.160
coming here?

00:00:57.160 --> 00:00:58.160
Awesome.

00:00:58.160 --> 00:00:59.280
Most of you guys.

00:00:59.280 --> 00:01:03.010
And how many of you have ever used our API
before?

00:01:03.010 --> 00:01:04.360
All right.

00:01:04.360 --> 00:01:07.740
A significantly smaller number of you.

00:01:07.740 --> 00:01:11.570
So hopefully this talk will change that and
will give you a better idea of our API as

00:01:11.570 --> 00:01:14.150
well as the platform as a whole.

00:01:14.150 --> 00:01:16.400
So let's quick things off.

00:01:16.400 --> 00:01:21.970
So at a very high level, Google Cloud Print
was a Web service that we at Google created

00:01:21.970 --> 00:01:24.080
to take the pain out of printing.

00:01:24.080 --> 00:01:27.610
We know that setting up a printer and printing
to a printer are some of the most troublesome

00:01:27.610 --> 00:01:31.630
things that people have to deal with everyday
with computing, and we really wanted to make

00:01:31.630 --> 00:01:33.200
that experience better.

00:01:33.200 --> 00:01:37.180
So our high level goal with Cloud Print was
to provide a seamless, driverless printing

00:01:37.180 --> 00:01:40.990
experience that worked regardless of what
platform you were on.

00:01:40.990 --> 00:01:45.890
Pretty much as long as your device can connect
to the cloud you should be able to print without

00:01:45.890 --> 00:01:49.640
running a full driver stack.

00:01:49.640 --> 00:01:54.300
So in terms of our motivations and what drove
this, I'm going to take a trip back in time

00:01:54.300 --> 00:01:58.820
to 2010, way back in the day when we were
designing Chrome OS and trying to find out

00:01:58.820 --> 00:02:02.420
how to solve printing on that platform.

00:02:02.420 --> 00:02:07.850
So printing is obviously really, really important
use case on the Chromebook.

00:02:07.850 --> 00:02:11.690
It's a device that's designed for content
creation, and people need to print.

00:02:11.690 --> 00:02:15.240
And so we were considering different models
for how to do this.

00:02:15.240 --> 00:02:20.450
On one hand you have your traditional driver
model which you're accustomed to on your Windows,

00:02:20.450 --> 00:02:22.340
Mac and Linux machine.

00:02:22.340 --> 00:02:27.320
This was great because it was tried and true,
but there were a lot of trade-offs with this.

00:02:27.320 --> 00:02:31.060
One major problem we saw is that we'd have
to package every single Chrome OS device that

00:02:31.060 --> 00:02:35.420
we sold with a whole bunch of printer drivers
that you may or may not even use.

00:02:35.420 --> 00:02:40.270
Especially for an action you perform not too
frequently, it doesn't make sense to have

00:02:40.270 --> 00:02:42.970
this code sitting on every single device out
there.

00:02:42.970 --> 00:02:46.590
I think another problem that we ran into with
drivers is just the fact that we would have

00:02:46.590 --> 00:02:48.790
to keep them continuously updated.

00:02:48.790 --> 00:02:52.370
If you got a new printer and it didn't have
the drivers that you needed on that device,

00:02:52.370 --> 00:02:56.591
you would be dependent on Google or on your
printer manufacturer to release drivers that

00:02:56.591 --> 00:03:00.319
were specific to your model, and that was
just a huge pain point and we didn't want

00:03:00.319 --> 00:03:04.260
to deal with having this constant baggage
on every Chromebook that we'd have to keep

00:03:04.260 --> 00:03:05.690
updated.

00:03:05.690 --> 00:03:09.690
I think third of all, and most importantly,
Google has a lot of platforms that are important

00:03:09.690 --> 00:03:10.690
on the cloud.

00:03:10.690 --> 00:03:13.280
We have Chrome, we have Chrome OS, we have
Android.

00:03:13.280 --> 00:03:16.320
And we didn't want to just come up with a
solution for one platform.

00:03:16.320 --> 00:03:19.900
We wanted to come up with a solution that
would scale to a whole bunch of platforms.

00:03:19.900 --> 00:03:24.380
And that was the beauty with Cloud Print is
because what we had was a Web service, we

00:03:24.380 --> 00:03:27.540
were able to build something server side which
supported all the different platforms that

00:03:27.540 --> 00:03:29.090
Google has.

00:03:29.090 --> 00:03:30.771
And this is a comic I like.

00:03:30.771 --> 00:03:35.730
It's an excerpt from The Oatmeal, which sort
of gives you an idea of some of the pain points

00:03:35.730 --> 00:03:41.070
you run into with traditional driver installations,
and this is exactly what we want to avoid

00:03:41.070 --> 00:03:44.310
with Google Cloud Print.

00:03:44.310 --> 00:03:49.980
So this cool 3D diagram gives you sort of
a high level overview of how our system works

00:03:49.980 --> 00:03:51.590
and what exactly it does.

00:03:51.590 --> 00:03:54.520
There are a variety of devices you can print
from.

00:03:54.520 --> 00:04:00.070
Some examples just given here are your tablet,
your Chromebook, your Android phone, your

00:04:00.070 --> 00:04:03.930
iPhone, your -- or even your traditional Mac
or PC.

00:04:03.930 --> 00:04:06.180
Your print jobs are sent to Google Cloud Print.

00:04:06.180 --> 00:04:10.099
You can and them over any format and then
we convert them into the format they need

00:04:10.099 --> 00:04:12.760
to be in for the destination printer.

00:04:12.760 --> 00:04:16.190
So here are three examples of devices we can
send print jobs to.

00:04:16.190 --> 00:04:21.129
Arrow A is pointing to a printer that is shared
through Google Cloud Print through an intermediary

00:04:21.129 --> 00:04:23.300
laptop acting as a connector.

00:04:23.300 --> 00:04:26.849
We'll explain more of that later.

00:04:26.849 --> 00:04:28.979
Arrow B is pointing to a cloud-ready printer.

00:04:28.979 --> 00:04:33.229
These are printers that talk directly to the
Google Cloud Print service from within their

00:04:33.229 --> 00:04:34.229
firmware.

00:04:34.229 --> 00:04:36.639
We have one of these printers up front and
will actually be doing some live printing

00:04:36.639 --> 00:04:38.389
for you later.

00:04:38.389 --> 00:04:43.669
And then Arrow C, which is basically you're
printing to an enterprise server, which could

00:04:43.669 --> 00:04:45.099
be managing thousands of printers.

00:04:45.099 --> 00:04:49.770
And we actually use a server very much like
this inside of Google to manage all of our

00:04:49.770 --> 00:04:52.919
printers with employees.

00:04:52.919 --> 00:04:56.889
So the great thing with Google Cloud Print,
and one of the reasons that -- I guess the

00:04:56.889 --> 00:05:01.979
beauty of the platform and why we find it
so powerful is it allows you to do all kinds

00:05:01.979 --> 00:05:07.729
of things that you could never really imagine
doing before with local printing.

00:05:07.729 --> 00:05:12.180
So for one thing as an application developer,
to add printing functionality with your app

00:05:12.180 --> 00:05:14.370
is as easy as three lines of code.

00:05:14.370 --> 00:05:18.400
Yuri is going to be guiding you through that
at a later portion of the presentation.

00:05:18.400 --> 00:05:22.539
But we've really made it really, really easy
for you as developers to plug into the platform

00:05:22.539 --> 00:05:26.270
and integrate with Google Cloud Print.

00:05:26.270 --> 00:05:29.969
Another advantage you have is because with
Cloud Print all your print jobs go through

00:05:29.969 --> 00:05:35.310
the cloud, you can print not just to printers,
but actually to any device or application

00:05:35.310 --> 00:05:36.900
which is connected to the cloud.

00:05:36.900 --> 00:05:40.999
And we've built a lot of really interesting
products around this, which we'll be explaining

00:05:40.999 --> 00:05:44.440
more later in the presentation as well.

00:05:44.440 --> 00:05:49.020
Finally -- and this feature is something we
feel that is really powerful is that we've

00:05:49.020 --> 00:05:51.360
made it dirt simple to share printers with
people.

00:05:51.360 --> 00:05:56.469
I don't know how many of you guys have ever
tried to share a local printer with someone,

00:05:56.469 --> 00:05:58.419
but it's not exactly a really fun process.

00:05:58.419 --> 00:06:03.379
You can either do it through network sharing
and set up your computer as a server or you

00:06:03.379 --> 00:06:07.210
can pass someone a USB cable in which case
they have to plug it in, go through a bunch

00:06:07.210 --> 00:06:11.569
of driver installs and by the time they'll
get printing it will take forever.

00:06:11.569 --> 00:06:16.969
So we've made sharing ridiculously easy, and
I'm actually going to show you a demo of that

00:06:16.969 --> 00:06:18.749
real quick.

00:06:18.749 --> 00:06:22.469
So the great thing with Cloud Print is we've
made sharing a printer as easy as sharing

00:06:22.469 --> 00:06:23.469
a doc.

00:06:23.469 --> 00:06:26.499
So here you can see the Cloud Print management
page in Google Chrome.

00:06:26.499 --> 00:06:29.379
This is just google.com/cloudprint.

00:06:29.379 --> 00:06:31.189
You can see I have three printers.

00:06:31.189 --> 00:06:33.939
The printer that I have selected is actually
the printer in the front of the room.

00:06:33.939 --> 00:06:35.849
This is our demo printer.

00:06:35.849 --> 00:06:40.369
And if I want to share this printer with Yuri,
all I have to do is click the green share

00:06:40.369 --> 00:06:43.999
button and you see a sharing dialogue just
like the one in Docs.

00:06:43.999 --> 00:06:52.120
I type in Yuri's Gmail account, I hit enter
and I hit share and that's it.

00:06:52.120 --> 00:06:57.319
I've just shared this printer with Yuri and
it was as easy as sharing a doc with him.

00:06:57.319 --> 00:07:02.159
So because your printers are associated with
your Google account it allows us to make sharing

00:07:02.159 --> 00:07:05.770
really simple and seamless.

00:07:05.770 --> 00:07:09.889
And I guess as a fourth point also with Google
Cloud Print, because all your print jobs go

00:07:09.889 --> 00:07:16.120
through the cloud, we're completely OS, device
and browser agnostic, so your printing experience

00:07:16.120 --> 00:07:20.189
is going to be virtually identical whether
you're on your Android phone or whether you're

00:07:20.189 --> 00:07:21.639
on your Windows PC.

00:07:21.639 --> 00:07:26.469
You're gonna see the same print options, see
more or less the same dialogue, and we've

00:07:26.469 --> 00:07:32.069
done this to provide a consistent experience
regardless of what platform you're on.

00:07:32.069 --> 00:07:34.900
So I've given you a high level overview of
the platform and now I'm going to hand it

00:07:34.900 --> 00:07:39.680
out to Yuri and he will explain how to integrate
with Cloud Print from within your apps.

00:07:39.680 --> 00:07:41.639
&gt;&gt;Yuri Dolgov: Hey, guys.

00:07:41.639 --> 00:07:45.089
I'm going to guide you through engineering
part of our presentation.

00:07:45.089 --> 00:07:51.300
And I want to start with the limitations of
existing printing solutions on different platforms.

00:07:51.300 --> 00:07:55.830
With Web platform nowadays you can pretty
much build whatever application you can think

00:07:55.830 --> 00:08:01.509
of, but when it comes to something as printing,
and still there are many people who care about

00:08:01.509 --> 00:08:07.330
getting their document printed, you are faced
with a whole bunch of different problems.

00:08:07.330 --> 00:08:12.139
Pages look different on different Web browsers,
so you have to worry about making them look

00:08:12.139 --> 00:08:16.379
the same on every single browser you basically
create your application for.

00:08:16.379 --> 00:08:20.779
If you have mobile version of your Web application,
it's even worse because usually the mobile

00:08:20.779 --> 00:08:25.819
version is different from desktop and you
might want to have printed version looks the

00:08:25.819 --> 00:08:27.379
same as on desktop.

00:08:27.379 --> 00:08:30.589
With mobile devices it's even worse.

00:08:30.589 --> 00:08:34.620
For every single new platform you put your
variation to, you have to come up with different

00:08:34.620 --> 00:08:35.760
printing solution.

00:08:35.760 --> 00:08:41.640
And for some platforms you don't even have
standard solutions, you have to invent them

00:08:41.640 --> 00:08:45.310
on your own, and that's what we are trying
to solve with Cloud Print.

00:08:45.310 --> 00:08:53.019
With Cloud Print we want to provide you with
the same seamless printing experience on every

00:08:53.019 --> 00:08:54.399
single platform.

00:08:54.399 --> 00:09:03.319
Same API, same content type of the documents,
everything is the same on every single platform.

00:09:03.319 --> 00:09:11.930
I want to start to use example of Web integration,
how you integrate Cloud Print in your existing

00:09:11.930 --> 00:09:13.149
Web application.

00:09:13.149 --> 00:09:16.620
For Web we have very simple, yet very powerful
way.

00:09:16.620 --> 00:09:18.870
It's gadget based.

00:09:18.870 --> 00:09:26.120
So basically first thing you need to do is
just load gadget code from this URL on to

00:09:26.120 --> 00:09:27.120
your page.

00:09:27.120 --> 00:09:29.850
And gadget cross-name is called print gadget.

00:09:29.850 --> 00:09:35.459
It has only one static method, which is create
default print button, which creates default

00:09:35.459 --> 00:09:39.579
button, which looks like this.

00:09:39.579 --> 00:09:44.940
And if you create instance of this gadget
you can also use those methods listed before.

00:09:44.940 --> 00:09:50.009
First of them is set on close callback, which
is pretty trivial, allows you to set on close

00:09:50.009 --> 00:09:51.009
callback.

00:09:51.009 --> 00:09:55.060
You can set any function that is going to
be called when print dialogue is closed.

00:09:55.060 --> 00:09:58.570
The next one is set print button.

00:09:58.570 --> 00:09:59.570
There it is.

00:09:59.570 --> 00:10:04.569
And that one allows you to set whatever HTML
element you want to attach to bring the gadget

00:10:04.569 --> 00:10:05.569
to.

00:10:05.569 --> 00:10:11.139
You can use either button generated by this
method or you can use your own DOM, it doesn't

00:10:11.139 --> 00:10:12.139
matter.

00:10:12.139 --> 00:10:18.339
Whenever a user clicks on the DOM element,
a print dialogue is going to pop out.

00:10:18.339 --> 00:10:23.899
Next -- and the main method of this gadget
is set print document, which allows you to

00:10:23.899 --> 00:10:26.949
set documents that is going to be printed.

00:10:26.949 --> 00:10:31.930
First parameter of that is content type, content
type of document you want to print.

00:10:31.930 --> 00:10:34.769
Second one is title of the print job.

00:10:34.769 --> 00:10:42.170
Third one is going to be used to identify
the job by the user in print queue.

00:10:42.170 --> 00:10:47.230
Third one, and the main, is content of the
document.

00:10:47.230 --> 00:10:50.959
And content can be both binary or Base64 encoded.

00:10:50.959 --> 00:10:56.170
Though Base64 encoded version is a little
bit larger than binary version, you might

00:10:56.170 --> 00:11:00.209
still want to prefer that in some cases, especially
if you have some kind of Native-to-JavaScript

00:11:00.209 --> 00:11:06.389
breach, and in this case you might face jobs
of early string terminations or stuff like

00:11:06.389 --> 00:11:07.389
that.

00:11:07.389 --> 00:11:13.920
So you might sacrifice a slice and still use
Base64 encoded version of the document.

00:11:13.920 --> 00:11:17.840
And if you decide to use Base64 encoded version
of the document you will need to set force

00:11:17.840 --> 00:11:21.480
parameter, which is optional content in the
colon.

00:11:21.480 --> 00:11:26.889
And in this case you will need to parse Base64
string.

00:11:26.889 --> 00:11:30.250
If you want to have more control on opening
and closing print dialogue, you might want

00:11:30.250 --> 00:11:34.420
to use two other -- two methods below.

00:11:34.420 --> 00:11:40.259
It's open print dialogue and close print dialogue
which allows you to open and close print dialogue.

00:11:40.259 --> 00:11:45.089
And you might want to use it if you want to
open print dialogue on some custom action

00:11:45.089 --> 00:11:53.230
like print -- document was uploaded or -- and
conversion was done or registration finished,

00:11:53.230 --> 00:11:55.660
stuff like that, so any custom events.

00:11:55.660 --> 00:12:02.240
I want to go and show you how you do it in
an existing application.

00:12:02.240 --> 00:12:05.790
This is just fragment of code.

00:12:05.790 --> 00:12:06.990
Let's say (indiscernible).

00:12:06.990 --> 00:12:10.019
It goes like here.

00:12:10.019 --> 00:12:14.740
So the first thing you need to do is load
gadget code, as I said.

00:12:14.740 --> 00:12:18.439
The next thing, in this example we use on
print function, which is going to be called

00:12:18.439 --> 00:12:20.339
whenever a user wants to print a document.

00:12:20.339 --> 00:12:24.639
The third thing we do in this function is
create a Cloud Print gadget instance.

00:12:24.639 --> 00:12:27.560
The next thing we set print document you want
to print.

00:12:27.560 --> 00:12:33.480
In this case we use the application PDF content
type, but we can use many others and we will

00:12:33.480 --> 00:12:35.740
tell you more about that later.

00:12:35.740 --> 00:12:40.899
And we said print job title, like my print
job title, something.

00:12:40.899 --> 00:12:44.310
And this is Base64 encoded content of PDF.

00:12:44.310 --> 00:12:49.870
And since this is Base64 encoded, we need
to set force parameter to Base64.

00:12:49.870 --> 00:12:56.610
And then we just open print dialogue, and
that's it, we are done.

00:12:56.610 --> 00:13:02.129
And one more thing I want to mention is that
this code you'll work exactly the same way

00:13:02.129 --> 00:13:05.540
on any browser, including mobile browsers.

00:13:05.540 --> 00:13:10.690
So you only implement it once and -- well,
we'll do everything for you.

00:13:10.690 --> 00:13:15.490
We'll open different type of dialogues on
different browsers, depending on -- well,

00:13:15.490 --> 00:13:19.300
optimize them for those.

00:13:19.300 --> 00:13:21.690
Yeah.

00:13:21.690 --> 00:13:26.279
And we want to show you how Box integrated
with us.

00:13:26.279 --> 00:13:30.509
They basically took almost no time to do that.

00:13:30.509 --> 00:13:33.640
I hope you know what Box is, all right?

00:13:33.640 --> 00:13:42.060
It's file sharing, file storing service.

00:13:42.060 --> 00:13:49.171
I have my Box account opened here and I have
only one document and I want to print it with

00:13:49.171 --> 00:13:50.171
Cloud Print.

00:13:50.171 --> 00:13:54.480
So I see it send to Google Cloud Print and
here I see print dialogue.

00:13:54.480 --> 00:13:59.260
As you can see I have invitation to accept
a new printer.

00:13:59.260 --> 00:14:01.889
The printer is actually shared with me a few
minutes ago.

00:14:01.889 --> 00:14:04.339
I will go ahead and accept this printer.

00:14:04.339 --> 00:14:14.069
There we go, printer is accepted, and now
we're going to use it to print this document.

00:14:14.069 --> 00:14:20.100
You see the document was immediately sent
to the printer and it's going to be printed

00:14:20.100 --> 00:14:23.230
like in a few seconds.

00:14:23.230 --> 00:14:30.139
So it's super easy to integrate Web application
on Cloud Print and it's even easier to integrate

00:14:30.139 --> 00:14:32.829
Android application with Cloud Print.

00:14:32.829 --> 00:14:41.399
In order to do that you will need to include
Cloud Print intent code into your application,

00:14:41.399 --> 00:14:45.639
and you can get this code on this URL --
[ Applause ].

00:14:45.639 --> 00:14:49.689
&gt;&gt;Akshay Kannan: Sorry to interrupt.

00:14:49.689 --> 00:14:53.690
To make matters even more interesting, this
printer is connected using a mobile network,

00:14:53.690 --> 00:14:56.499
so -- yeah, everything seems to be connected.

00:14:56.499 --> 00:14:57.499
[Laughter].

00:14:57.499 --> 00:15:00.149
&gt;&gt;Yuri Dolgov: Okay.

00:15:00.149 --> 00:15:02.420
I will continue this Android integration.

00:15:02.420 --> 00:15:06.500
On Android, the integration is even simpler
than on the Web.

00:15:06.500 --> 00:15:11.999
All we need to do is just add Cloud Print
intent into your application, and you can

00:15:11.999 --> 00:15:14.120
get a code of this intent on this URL.

00:15:14.120 --> 00:15:18.829
And the intent class name is cloud print dialogue.

00:15:18.829 --> 00:15:24.149
And all we need to do is just illustrate this
intent, subdate it and type up the documents

00:15:24.149 --> 00:15:30.250
you want to print, set titles of the document
you want to print and start the intent.

00:15:30.250 --> 00:15:35.330
Since it's so that simple I want to go ahead
and show you how to do it in a real application.

00:15:35.330 --> 00:15:38.079
In my case application is not that real.

00:15:38.079 --> 00:15:40.899
This is Danny Web browser.

00:15:40.899 --> 00:15:42.649
Thank you.

00:15:42.649 --> 00:15:48.370
So it's Danny Web browser, and there is only
three URL elements, URL box, which is basically

00:15:48.370 --> 00:15:50.439
a box where you can type URL you want to go
to.

00:15:50.439 --> 00:15:54.220
Go button, which you need to click in order
to go to this URL.

00:15:54.220 --> 00:16:01.720
And Web view, which is -- well, which contains
content of the Web page.

00:16:01.720 --> 00:16:03.819
So you will see codes there.

00:16:03.819 --> 00:16:05.079
It's very simple.

00:16:05.079 --> 00:16:09.300
I don't want to spend too much time on that.

00:16:09.300 --> 00:16:14.240
The only non-trivial part here is that we
have functionality to get HTML content on

00:16:14.240 --> 00:16:19.041
the Web page, and in order to do that we need
to have JavaScript-to-Java bridge because

00:16:19.041 --> 00:16:23.390
-- well, this is the only way you can access
Web view content.

00:16:23.390 --> 00:16:29.690
Anyways, I'm going to compile and start this
application.

00:16:29.690 --> 00:16:36.329
There we go.

00:16:36.329 --> 00:16:38.819
So this is, as I said, very simple browser.

00:16:38.819 --> 00:16:43.329
You can open the page, you can navigate, do
stuff like that.

00:16:43.329 --> 00:16:46.240
Let's go ahead and integrate this Cloud Print.

00:16:46.240 --> 00:16:49.161
What we need to do is just add the URL element.

00:16:49.161 --> 00:16:57.379
You can click in order to open print dialogue.

00:16:57.379 --> 00:17:03.850
In this case it's a button and I have it already
in my layout XML file, so I don't want to

00:17:03.850 --> 00:17:08.150
spend time implementing, write it once again.

00:17:08.150 --> 00:17:10.940
And they have (indiscernible) already.

00:17:10.940 --> 00:17:15.830
I will go ahead and explain line by line what
we have here.

00:17:15.830 --> 00:17:18.080
First thing we do is create print intent.

00:17:18.080 --> 00:17:26.130
Then we find print button in the UI and set
on click listener.

00:17:26.130 --> 00:17:32.621
So in on click listener what we do is just
get content of the Web page, set it as document

00:17:32.621 --> 00:17:39.171
to be printed, along with content type, which
in this case that's HTML, set title of the

00:17:39.171 --> 00:17:42.350
print job and start the activity.

00:17:42.350 --> 00:17:43.350
That's pretty much it.

00:17:43.350 --> 00:17:55.770
Let's look how it works.

00:17:55.770 --> 00:17:56.810
So it should start in a second.

00:17:56.810 --> 00:17:57.810
Here we go.

00:17:57.810 --> 00:18:02.940
The connection is a bit slow.

00:18:02.940 --> 00:18:05.530
Here you see a new button print.

00:18:05.530 --> 00:18:15.420
We'll go ahead and click this button.

00:18:15.420 --> 00:18:20.370
This will open print dialogue and you can
select printer you want to print to.

00:18:20.370 --> 00:18:25.710
Let's use the same printer again.

00:18:25.710 --> 00:18:26.710
Print.

00:18:26.710 --> 00:18:29.100
And it should be instantly sent to printer.

00:18:29.100 --> 00:18:30.100
No?

00:18:30.100 --> 00:18:32.250
&gt;&gt;Akshay Kannan: There we go.

00:18:32.250 --> 00:18:33.820
&gt;&gt;Yuri Dolgov: Okay.

00:18:33.820 --> 00:18:35.920
Worked this time again.

00:18:35.920 --> 00:18:36.920
Okay.

00:18:36.920 --> 00:18:46.060
It's going to be printed in a few seconds,
so I'm going to continue with -- yeah, with

00:18:46.060 --> 00:18:47.830
my presentation.

00:18:47.830 --> 00:18:55.300
In some cases those two integrations might
not -- oh, by the way, yeah, you can get the

00:18:55.300 --> 00:18:57.410
code of this presentation from here.

00:18:57.410 --> 00:18:58.820
It's completely open.

00:18:58.820 --> 00:19:04.100
You can check how it looks in details.

00:19:04.100 --> 00:19:07.440
So in some cases those two integrations might
not be enough for you.

00:19:07.440 --> 00:19:11.380
For example, you are working with some other
platform or you want to have some more flexibility,

00:19:11.380 --> 00:19:12.940
doesn't matter.

00:19:12.940 --> 00:19:15.660
We still have open APIs that you can use.

00:19:15.660 --> 00:19:20.610
And there are three main API codes that you
need to know if you want to send a job to

00:19:20.610 --> 00:19:21.610
Cloud Print.

00:19:21.610 --> 00:19:22.610
First one is search.

00:19:22.610 --> 00:19:25.400
It allows you to search for all the printers
available for the user.

00:19:25.400 --> 00:19:30.760
You can do some filter and some searches,
like some filter -- like filter in by (indiscernible)

00:19:30.760 --> 00:19:36.710
or by status for those printers, but after
all the goal is to provide user a list of

00:19:36.710 --> 00:19:39.400
printers available for them.

00:19:39.400 --> 00:19:44.290
Once user selects the printer they want to
print to, you need to do another code, printer

00:19:44.290 --> 00:19:46.550
code, which will return capabilities of the
printer.

00:19:46.550 --> 00:19:51.290
And you will need to show those capabilities
to the users so that they could select how

00:19:51.290 --> 00:19:53.400
they want to print the job.

00:19:53.400 --> 00:19:57.860
Once capabilities are selected, you would
need to do the third one, third call, which

00:19:57.860 --> 00:20:00.640
is the certainly the main one.

00:20:00.640 --> 00:20:12.280
That will submit a print job to printer, printer
is given printer ID, title of the job, capabilities,

00:20:12.280 --> 00:20:17.790
content type, if -- if content of the job
is Base 64 encoder, so you will need to set

00:20:17.790 --> 00:20:22.410
up a content task for encoding as well and
content itself.

00:20:22.410 --> 00:20:27.140
So it's super easy again and with that I'm
going to hand it back to Akshay.

00:20:27.140 --> 00:20:29.930
&gt;&gt;Akshay Kannan: Sounds good.

00:20:29.930 --> 00:20:32.740
So we have showed how you can integrate with
that --

00:20:32.740 --> 00:20:35.790
[ Applause ]
&gt;&gt;Yuri Dolgov: Thank you.

00:20:35.790 --> 00:20:41.440
&gt;&gt;Akshay Kannan: So we have showed you how
we can integrate with Cloud Print, you can

00:20:41.440 --> 00:20:47.610
use our Web widget, Android widget, or HTTP
API directly, we have really tried to make

00:20:47.610 --> 00:20:52.410
it easy to bring that functionality into your
app.

00:20:52.410 --> 00:20:56.030
That's printing from a lot of places, but
we actually also support printing to a lot

00:20:56.030 --> 00:20:58.680
of places, printing to anywhere.

00:20:58.680 --> 00:21:03.040
We have over 20 million printers that are
registered with Google Cloud Print as of today

00:21:03.040 --> 00:21:10.200
and that number is continuing to grow, so
our main type of printers are -- at least

00:21:10.200 --> 00:21:15.110
for the best user experience, we recommend
what we call cloud ready printers.

00:21:15.110 --> 00:21:20.000
These are printers that connect directly to
the Web from within the firmware themselves.

00:21:20.000 --> 00:21:24.740
We have over 70 cloud ready printer models
that are available from a wide variety of

00:21:24.740 --> 00:21:29.820
retailers and manufacturers, and we've -- in
particular printers the list that we have

00:21:29.820 --> 00:21:36.240
here on our slide deck of HP, Canon, Kodak,
Epson, Fuji Xerox and Samsung, are just the

00:21:36.240 --> 00:21:38.600
manufacturers who have printers that are currently
available.

00:21:38.600 --> 00:21:44.560
We are working with a much larger list of
manufacturers over time to expand this out.

00:21:44.560 --> 00:21:48.920
So basically it will be hard at some point
to buy a printer that's not cloud ready.

00:21:48.920 --> 00:21:55.420
We also have a full list of printers on our
Web site, g.co/cloudprint where you can check

00:21:55.420 --> 00:21:57.520
out what printers are available.

00:21:57.520 --> 00:22:01.110
And which ones are cloud ready.

00:22:01.110 --> 00:22:03.790
I know a lot of you also probably don't want
to buy a new printer.

00:22:03.790 --> 00:22:07.720
You just use Google Cloud Print, and the good
news is that you don't have to.

00:22:07.720 --> 00:22:12.051
We support what's called the Chrome connector,
which allows you to take any local printer

00:22:12.051 --> 00:22:16.470
that's connected to your printer running Chrome
and use that printer as a print server.

00:22:16.470 --> 00:22:20.270
So how this works it's let's say that you
have Google Chrome running on your Windows

00:22:20.270 --> 00:22:21.280
PC at home.

00:22:21.280 --> 00:22:24.270
You can USB your printer into there, set it
up as a local printer.

00:22:24.270 --> 00:22:28.490
And then from within Chrome settings, you
can register -- in fact here's a screen shot

00:22:28.490 --> 00:22:32.890
from the settings dialogue, you just click
the add printers button right there, and it's

00:22:32.890 --> 00:22:34.350
simply a one-click process.

00:22:34.350 --> 00:22:38.390
Your local printers will automatically get
added to your Google Cloud Print account with

00:22:38.390 --> 00:22:40.620
the account that you are logged in with.

00:22:40.620 --> 00:22:43.970
So we do make it easy to set up printers that
are not cloud ready.

00:22:43.970 --> 00:22:48.840
The only caveat here is that you do need to
keep your computer running in order for jobs

00:22:48.840 --> 00:22:49.840
to be printed out.

00:22:49.840 --> 00:22:54.720
That being said, if you submit a print job
to a computer that's turned off, it gets queued,

00:22:54.720 --> 00:22:58.000
so next time you turn it on your job will
get released and printed out from the printer

00:22:58.000 --> 00:23:00.730
that's connected to it.

00:23:00.730 --> 00:23:03.260
Also we don't just support printer to printers,
as I mentioned earlier.

00:23:03.260 --> 00:23:06.150
But we really support printing to anywhere.

00:23:06.150 --> 00:23:10.100
You can print to -- currently every Google
Cloud Print dialogue has the option save to

00:23:10.100 --> 00:23:14.200
Google drive, which will take whatever you
are printing, convert it to a PDF, and save

00:23:14.200 --> 00:23:18.700
it in your Google drive account or you can
even print to a FedEx office, which is a partnership

00:23:18.700 --> 00:23:23.810
we recently launched this year which allows
you to print your document and get a retrieval

00:23:23.810 --> 00:23:28.430
code, which you can use to basically print
out and pay for your job at any local Fed-Ex

00:23:28.430 --> 00:23:30.940
office location within the U.S.

00:23:30.940 --> 00:23:34.850
Finally, another little exciting feature that
we have is the ability to print to your mobile

00:23:34.850 --> 00:23:36.080
phone.

00:23:36.080 --> 00:23:40.800
So if you have Chrome for mobile installed
on Android or iOS and you are signed into

00:23:40.800 --> 00:23:46.400
sync, what we do is we actually register your
phone as a Google Cloud Print device in your

00:23:46.400 --> 00:23:47.400
dialogue.

00:23:47.400 --> 00:23:50.550
So what you will be able to do -- whenever
you are printing from Cloud Print, if you

00:23:50.550 --> 00:23:54.460
are using the same account that you have set
up your phone with, you will see your phone

00:23:54.460 --> 00:23:56.470
as a destination that you can print to.

00:23:56.470 --> 00:24:00.490
And what we do is we just push an Android
push notification that the job is available

00:24:00.490 --> 00:24:03.450
and it gets downloaded to your phone.

00:24:03.450 --> 00:24:08.550
So this is already available today and you
guys can try it out.

00:24:08.550 --> 00:24:13.450
Finally, in terms of printing to anywhere,
we also -- like most of our product -- have

00:24:13.450 --> 00:24:18.100
a fully open API that you can use as developers
to receive print jobs.

00:24:18.100 --> 00:24:24.070
So we have an XMPP interface, which you can
connect to in order to receive print job notifications.

00:24:24.070 --> 00:24:29.960
And we also have a full set of HTTPS interfaces
that you can connect to to basically fetch

00:24:29.960 --> 00:24:31.640
the job, set job status.

00:24:31.640 --> 00:24:34.440
And I'll delve into the details in the next
slide.

00:24:34.440 --> 00:24:37.440
Cloud ready printers such as the one you can
see on stage have already implemented this

00:24:37.440 --> 00:24:39.200
in firmware.

00:24:39.200 --> 00:24:42.840
So it's real easy to implement whether you
are working with low-level hardware or building

00:24:42.840 --> 00:24:43.840
an application.

00:24:43.840 --> 00:24:48.990
Yeah, really, any application or device can
implement this.

00:24:48.990 --> 00:24:53.840
And so we leave the possibilities of integration
up to the developer.

00:24:53.840 --> 00:24:58.180
And a lot of this really allows you to use
your imagination for what you can print to.

00:24:58.180 --> 00:25:01.710
Some examples we just thought of are you could
print to your Kindle.

00:25:01.710 --> 00:25:04.730
You could build an application that would
allow you to print documents for reading on

00:25:04.730 --> 00:25:05.940
the go.

00:25:05.940 --> 00:25:09.010
You could technically build an application
that would even allow you to print to a smart

00:25:09.010 --> 00:25:11.930
Web connected TV.

00:25:11.930 --> 00:25:18.350
And if monkeys were cloud connected, then
you could even print to a monkey with a typewriter.

00:25:18.350 --> 00:25:22.880
That one might require more imagination than
the others.

00:25:22.880 --> 00:25:27.850
So just to go into the details of our API,
there's two API calls you really call about

00:25:27.850 --> 00:25:29.070
with our job retrieval.

00:25:29.070 --> 00:25:34.490
There's our fetch API, which takes in a printer
ID as an argument, so you would call to fetch

00:25:34.490 --> 00:25:37.600
API when you receive an XMPP ping that a job
is available.

00:25:37.600 --> 00:25:42.360
And what the fetch API does is it returns
a JSON list of the jobs that are available

00:25:42.360 --> 00:25:44.390
to be printed.

00:25:44.390 --> 00:25:50.850
In this JSON object for each job, we have
two parameters that are important, the fie

00:25:50.850 --> 00:25:52.950
URL parameter and the ticketURL parameter.

00:25:52.950 --> 00:25:57.910
The fileURL parameter, which is the one right
here, is basically a URL that you can use

00:25:57.910 --> 00:26:00.040
to download the file.

00:26:00.040 --> 00:26:05.260
So the cool thing about this URL is that -- you
can -- you can dynamically change the format

00:26:05.260 --> 00:26:09.750
of the file by specifying a different accept
header when you are fetching this URL.

00:26:09.750 --> 00:26:13.540
So for example, if you want to fetch the job
as a PDF, you set your accept header to be

00:26:13.540 --> 00:26:18.950
application PDF, then we will convert the
document to a PDF server site and send it

00:26:18.950 --> 00:26:19.950
to your printer.

00:26:19.950 --> 00:26:25.950
If you want to fetch it -- the other main
format is PWG Raster, which is a simple Raster

00:26:25.950 --> 00:26:26.950
based image format.

00:26:26.950 --> 00:26:32.020
If you want to fetch that, you just set your
accept header to PWG Raster and we will stream

00:26:32.020 --> 00:26:34.760
the file to you in that format.

00:26:34.760 --> 00:26:40.640
And then finally ticketURL is basically your
print ticket that contains a list of the filled

00:26:40.640 --> 00:26:43.450
options of exactly what the user specified.

00:26:43.450 --> 00:26:48.690
For example, portrait or landscape or whatever
other capabilities you have exposed from your

00:26:48.690 --> 00:26:52.161
printer that are configurable.

00:26:52.161 --> 00:26:56.080
Our second API, which is important is our
control API, which allows you to basically

00:26:56.080 --> 00:26:58.960
update the status of the job as you're printing
it.

00:26:58.960 --> 00:27:04.320
So by default, whenever you print a job, we
set the status of that job to be queued.

00:27:04.320 --> 00:27:07.330
And over time as you are printing that -- so
for example, when you start to fetch, you

00:27:07.330 --> 00:27:10.990
can set the job, move the status from queued
to be in progress, and then when you are done

00:27:10.990 --> 00:27:13.390
printing the job, you can move the status
to done.

00:27:13.390 --> 00:27:17.010
If something goes wrong, you can also set
the status to error, and specify an error

00:27:17.010 --> 00:27:21.360
of coded message string.

00:27:21.360 --> 00:27:27.810
Finally we do take security and privacy really
seriously with Google Cloud Print and one

00:27:27.810 --> 00:27:33.290
example of how we do this is we have a secure
data access model, such that every item within

00:27:33.290 --> 00:27:36.850
our system, whether it's a printer, whether
it's a print job is (indiscernible), so that

00:27:36.850 --> 00:27:42.270
you can only print to that if you have explicit
permissions as your account to send a print

00:27:42.270 --> 00:27:43.270
job there.

00:27:43.270 --> 00:27:47.720
So all of the APIs that we mentioned earlier
are authenticated so you have to be logged

00:27:47.720 --> 00:27:51.360
in as a user who has explicit privileges to
access that.

00:27:51.360 --> 00:27:54.720
So we earlier said that you could print to
anything, but that was a lie because we have

00:27:54.720 --> 00:27:56.910
security restrictions in place.

00:27:56.910 --> 00:28:02.950
Finally, we also support so -- so this is
actually I'll start with the problem here

00:28:02.950 --> 00:28:08.730
is when you are dealing with printer registrations,
registration is an API that's difficult to

00:28:08.730 --> 00:28:14.330
make an authenticated call because it requires
the printer to somehow authenticate as you

00:28:14.330 --> 00:28:17.820
before it can register itself with the system.

00:28:17.820 --> 00:28:22.850
That's a hard problem, because -- the biggest
concern for is it's a security issue because

00:28:22.850 --> 00:28:26.500
you could have printers when you are typing
credentials into the printer that could store

00:28:26.500 --> 00:28:30.700
them locally unencrypted on the device, make
it vulnerable to attackers who could steal

00:28:30.700 --> 00:28:32.330
your Google account from the printer.

00:28:32.330 --> 00:28:37.091
And then also I think on another folder also
the UI problem of not all printers -- not

00:28:37.091 --> 00:28:39.480
all printers support text entry on their device.

00:28:39.480 --> 00:28:43.070
So we've solved this using what we call the
anonymous registration flow.

00:28:43.070 --> 00:28:47.030
This allows the printer to basically make
an unauthenticated registration call to our

00:28:47.030 --> 00:28:51.540
servers, which anonymously registers the printer
to Google Cloud Print.

00:28:51.540 --> 00:28:56.850
In order to actually complete the registration
process, we have returned a URL to the printer,

00:28:56.850 --> 00:29:00.350
which the printer can then print out and give
to the user and the user can visit that URL

00:29:00.350 --> 00:29:03.410
on their Web browser and complete the registration
process from there.

00:29:03.410 --> 00:29:08.160
We know that this is secure because you are
only entering your credentials into a Google

00:29:08.160 --> 00:29:11.260
log-in page and not into a third party interface.

00:29:11.260 --> 00:29:15.750
And then finally there's also robot accounts,
which are special accounts that we create

00:29:15.750 --> 00:29:18.830
just for printers in our system when the registration
happens.

00:29:18.830 --> 00:29:22.980
The nice thing with robot accounts is that
they are sandboxed, so they are only given

00:29:22.980 --> 00:29:27.850
restricted access to Google Cloud Print and
can't access other things in your Google account

00:29:27.850 --> 00:29:30.330
that you wouldn't want them to.

00:29:30.330 --> 00:29:36.020
Finally, all of our interfaces use HTTPS and
we strongly encourage you as developers to

00:29:36.020 --> 00:29:39.960
also use the HTTPS versions of our API.

00:29:39.960 --> 00:29:46.970
Finally, regarding privacy, another problem
that we've dealt with is spam invitations.

00:29:46.970 --> 00:29:52.320
So, for example, if I shared -- I could technically
share 100 printers with Yuri and completely

00:29:52.320 --> 00:29:54.390
spam his account.

00:29:54.390 --> 00:29:57.780
Another possible attack is that I could share
a printer, which looks like one of Yuri's

00:29:57.780 --> 00:30:01.570
printers to him, and he could end up printing
to that and I could steal all of his data

00:30:01.570 --> 00:30:02.570
as a result.

00:30:02.570 --> 00:30:06.450
So one thing to prevent this is we have implemented
printer sharing invitations.

00:30:06.450 --> 00:30:12.270
So this, as you saw earlier, requires Yuri
to explicitly accept my printer sharing invitation

00:30:12.270 --> 00:30:14.250
before he can print to a printer.

00:30:14.250 --> 00:30:17.660
As part of that invite process, he sees exactly
who I am and the name of the printer that

00:30:17.660 --> 00:30:22.110
I'm sharing with him, so this prevents you
from getting spammed with printers and also

00:30:22.110 --> 00:30:26.270
prevents you from printing to printers unless
you are absolutely sure that you have accepted

00:30:26.270 --> 00:30:30.650
an invitation and that you know who sent you
that invite.

00:30:30.650 --> 00:30:35.460
And then finally regarding print job content
retention, we delete for jobs as soon as the

00:30:35.460 --> 00:30:36.940
status is set to done.

00:30:36.940 --> 00:30:42.220
If the status is never set to done, then after
30 days, we delete print job content from

00:30:42.220 --> 00:30:43.750
our servers.

00:30:43.750 --> 00:30:46.410
We don't store them long term.

00:30:46.410 --> 00:30:50.400
Finally, we've talked about how you can print
from anywhere, how you can print to pretty

00:30:50.400 --> 00:30:54.500
much anywhere, and I'm going to go into another
part of our presentation which is how you

00:30:54.500 --> 00:30:56.860
can print anything.

00:30:56.860 --> 00:31:01.680
We do support a very, you know, Google Cloud
Print was developed with sort of developers

00:31:01.680 --> 00:31:02.680
in mind.

00:31:02.680 --> 00:31:03.830
And client platforms in mind.

00:31:03.830 --> 00:31:08.120
And we realized that when you are generating
documents client side, you don't want to be

00:31:08.120 --> 00:31:10.290
bound to a particular format that you have
to generate.

00:31:10.290 --> 00:31:14.130
You want to have the flexibility to generate
your content in whatever formant you want

00:31:14.130 --> 00:31:17.780
and then send it server side where we can
do the necessary conversion.

00:31:17.780 --> 00:31:21.740
So for this reason, our API accepts virtually
any format as input for your print job.

00:31:21.740 --> 00:31:28.930
So you can send us pdfs, stand image formats,
most standard document formats, Google docs,

00:31:28.930 --> 00:31:34.060
Microsoft Office documents, HTML documents
or even URLs which we can fetch server side

00:31:34.060 --> 00:31:35.660
and NET Frame.

00:31:35.660 --> 00:31:44.510
On our side, we make our best effort to convert
this document into either PDF or PWG Raster.

00:31:44.510 --> 00:31:48.780
Another thing that's interesting, if you don't
care about conversion, then our platform -- if

00:31:48.780 --> 00:31:52.950
the input and output formats are identical,
we will actually do no conversion whatsoever

00:31:52.950 --> 00:31:54.730
and simply pass the file through our system.

00:31:54.730 --> 00:31:58.890
This could be really useful if you wanted
to do something like make a 3D Cloud Printer

00:31:58.890 --> 00:32:02.750
that used a special format, as long as the
format that you in which you are submitting

00:32:02.750 --> 00:32:06.800
the job and receiving the job in are the same,
our system will just pass the job content

00:32:06.800 --> 00:32:08.110
right through.

00:32:08.110 --> 00:32:11.700
It's also particularly useful for sending
-- if you want to encrypt content and before

00:32:11.700 --> 00:32:16.400
you send it to us, decrypt it after you receive
it, you could send us a custom encrypted format,

00:32:16.400 --> 00:32:21.400
which we would pass directly through without
doing any conversion on whatsoever.

00:32:21.400 --> 00:32:27.110
Then, finally, one format that I wanted to
focus on that I think is particularly powerful

00:32:27.110 --> 00:32:28.870
is HTML.

00:32:28.870 --> 00:32:34.180
It's a format that's easy to create client
side and sent to us on the server side.

00:32:34.180 --> 00:32:39.640
The other great thing about HTML is there's
no direct page content that's here or I guess

00:32:39.640 --> 00:32:41.400
page layout information.

00:32:41.400 --> 00:32:46.980
So it allows us server side to intelligently
flow the HTML, depending on what media size

00:32:46.980 --> 00:32:48.580
of paper that you are printing to.

00:32:48.580 --> 00:32:51.980
So, for example, if you are in the U.S. and
you are printing to an 8 and a half by 11

00:32:51.980 --> 00:32:57.110
page, we will flow the HTML text and images
for an 8 and a half by 11 paper and generate

00:32:57.110 --> 00:32:58.750
the appropriate PDF server side.

00:32:58.750 --> 00:33:03.980
If you are in some other and country and using
A4, then we would flow the HTML content for

00:33:03.980 --> 00:33:09.290
an A4 and send that to you, so as an application
you wouldn't even have to worry about the

00:33:09.290 --> 00:33:15.030
media size of the destination printer that
you are sending content to.

00:33:15.030 --> 00:33:19.580
So I'm now going to just spend a little bit
of time talking about our future work and

00:33:19.580 --> 00:33:23.730
where we're heading going forward with Google
Cloud Print.

00:33:23.730 --> 00:33:28.450
So -- so one huge challenge for us has been
handling printer capabilities.

00:33:28.450 --> 00:33:31.040
There's -- they can be kind of a nightmare
to deal with.

00:33:31.040 --> 00:33:38.470
There's a lot -- basically with printer capabilities,
the two main formats are XPS and PPD.

00:33:38.470 --> 00:33:42.310
And the thing that makes them interesting
as well, there are standards.

00:33:42.310 --> 00:33:47.540
Printer manufacturers only have to write capabilities
such that they'll work with their particular

00:33:47.540 --> 00:33:48.540
driver.

00:33:48.540 --> 00:33:51.730
So for this reason, there can be a lot of
ways to specify the same option.

00:33:51.730 --> 00:33:57.760
Even an option as simple as portrait or landscape
specified differently on different platforms.

00:33:57.760 --> 00:34:01.741
So we really -- what we want to do is rather
than just reading strings, we want to be a

00:34:01.741 --> 00:34:06.980
able to intelligently understand these capabilities,
make sense of them, produce good options UI

00:34:06.980 --> 00:34:11.909
around them, and also even surface some of
this functionality to developers.

00:34:11.909 --> 00:34:14.740
So that as an application developer, you can
know about the printer that you are sending

00:34:14.740 --> 00:34:19.470
jobs to at a high level without having to
parse these capabilities yourself.

00:34:19.470 --> 00:34:24.160
So that's one of our big goals going forward
is to more intelligently understand these

00:34:24.160 --> 00:34:28.850
different capabilities and be able to semantically
parse them on our side.

00:34:28.850 --> 00:34:34.210
Real quick here, you can see our server's
JSON representation or an excerpt from our

00:34:34.210 --> 00:34:42.550
server's JSON representation of an XPS capability,
we will see an idea of what that's like.

00:34:42.550 --> 00:34:48.600
Another big goal that we're working towards
are making public and commercial printers

00:34:48.600 --> 00:34:50.610
that you can print to ubiquitous.

00:34:50.610 --> 00:34:55.530
We really like the concept of being able to
print even without owning a printer, no matter

00:34:55.530 --> 00:34:57.870
where you are.

00:34:57.870 --> 00:35:01.640
We did launch a partnership with the Fed-Ex
office, as I mentioned earlier, which makes

00:35:01.640 --> 00:35:02.830
this possible.

00:35:02.830 --> 00:35:07.660
Another thing, if you guys are on the first
floor of Moscone, we do have a Cloud Print

00:35:07.660 --> 00:35:11.660
station, which we have set up, to allow you
to print to public printers.

00:35:11.660 --> 00:35:16.210
You can print to these printers simply by
tapping an NFC tag or scanning a QR code,

00:35:16.210 --> 00:35:20.640
it gives you -- instantly adds the printer
to your Google account and allows you to start

00:35:20.640 --> 00:35:24.560
sending print jobs to it.

00:35:24.560 --> 00:35:29.970
And then, finally, one of our biggest and
most exciting goals and moving forward is

00:35:29.970 --> 00:35:34.090
we want Cloud Print to be tightly integrated
with other Google properties.

00:35:34.090 --> 00:35:38.510
So you can come to expect the same consistent
printing experience, regardless of what Google

00:35:38.510 --> 00:35:40.980
platform you are using.

00:35:40.980 --> 00:35:44.590
One feature that I'm about to give you a sneak
preview of is some of the work that we've

00:35:44.590 --> 00:35:49.070
been doing in Google Chrome to tightly integrate
Cloud Print with the local printing experience

00:35:49.070 --> 00:35:51.700
in Chrome and just make that seamless.

00:35:51.700 --> 00:35:58.380
So real quick, I'm going to grab the laptop
and open up the -- this is the Canary channel

00:35:58.380 --> 00:36:01.690
of Chrome, it's updated nightly.

00:36:01.690 --> 00:36:04.980
This is a pretty risky demonstration.

00:36:04.980 --> 00:36:09.530
So what we're going to do is we're going to
try printing our own API documentation using

00:36:09.530 --> 00:36:11.550
the new Cloud Print dialogue that we're working
on.

00:36:11.550 --> 00:36:17.190
So I'm just going to hit command P. It's going
to open the dialogue that you all know and

00:36:17.190 --> 00:36:19.560
love, except there's a slight difference.

00:36:19.560 --> 00:36:23.380
And that is -- I don't know if you guys can
notice, the destination pane is slightly different

00:36:23.380 --> 00:36:25.320
from what you are used to.

00:36:25.320 --> 00:36:28.550
And by the way, this is all available on dev
channel today, so you guys can check this

00:36:28.550 --> 00:36:30.080
out for yourselves.

00:36:30.080 --> 00:36:35.690
So what's going to happen here is I'm going
to click change, this pops up something different

00:36:35.690 --> 00:36:37.300
from the usual drop-down.

00:36:37.300 --> 00:36:41.270
It actually pops down a screen where your
local printers and your Cloud Printers are

00:36:41.270 --> 00:36:42.800
integrated side by side.

00:36:42.800 --> 00:36:48.130
What's happened is because I'm signed into
Chrome as cloudprint.user@gmail.com, I'm able

00:36:48.130 --> 00:36:50.540
to see my Google Cloud Print printers.

00:36:50.540 --> 00:36:54.130
You with see from within the Chrome dialogue,
I can see save to Google drive, I can see

00:36:54.130 --> 00:36:58.871
print to Fed-Ex office and I can see the printer
that's been shared with me, which is the Cloud

00:36:58.871 --> 00:36:59.871
Print demo printer.

00:36:59.871 --> 00:37:01.070
This guy up front.

00:37:01.070 --> 00:37:03.880
So what I'm going to do is for the sake of
this demo, I'm going to choose the Cloud Print

00:37:03.880 --> 00:37:04.880
demo printer.

00:37:04.880 --> 00:37:06.400
I'm going to hit print.

00:37:06.400 --> 00:37:10.300
And what happens is this document is posted
to the Cloud Print service and then sent to

00:37:10.300 --> 00:37:13.360
the printer, which should be printing it out
any second.

00:37:13.360 --> 00:37:18.660
So this is our integration in Chrome and it's
-- you know, we've tried to make it as seamless

00:37:18.660 --> 00:37:22.720
as possible, basically as easy to print to
Cloud Print as it is to print to a local printer.

00:37:22.720 --> 00:37:26.310
And this is just one of the many integrations
that you will see across Google properties

00:37:26.310 --> 00:37:30.640
going forward, so we are really excited for
that.

00:37:30.640 --> 00:37:36.710
So actually, once this prints out, that concludes
the end of our presentation.

00:37:36.710 --> 00:37:38.170
Thank you so much for coming.

00:37:38.170 --> 00:37:47.200
We're going to leave the remaining 20 minutes
for Q and A. So -- so -- so fire away.

00:37:47.200 --> 00:37:53.380
[ Applause ]
&gt;&gt;Akshay Kannan: All right.

00:37:53.380 --> 00:37:57.170
We will start the right side of the room.

00:37:57.170 --> 00:37:58.170
&gt;&gt;&gt; Hi.

00:37:58.170 --> 00:37:59.810
I had one question.

00:37:59.810 --> 00:38:02.340
On the Android apps and on the Web.

00:38:02.340 --> 00:38:08.360
Is there a way to -- to take away some of
the options in the printing, especially the

00:38:08.360 --> 00:38:09.530
number of copies that are printed?

00:38:09.530 --> 00:38:13.210
My app requires that the user be able to print
something only once.

00:38:13.210 --> 00:38:16.940
So is there a way to suppress the number of
copies that you can print?

00:38:16.940 --> 00:38:21.990
&gt;&gt;Akshay Kannan: So the question was whether
it's possible to restrict certain options

00:38:21.990 --> 00:38:28.210
within the Android dialogue and within other
dialogues to not show options such as copies.

00:38:28.210 --> 00:38:33.310
Actually --
&gt;&gt;Yuri Dolgov: No, there is not such a way.

00:38:33.310 --> 00:38:35.950
But, yeah, this is nice suggestion.

00:38:35.950 --> 00:38:37.710
We'll -- we'll discuss it.

00:38:37.710 --> 00:38:41.910
&gt;&gt;&gt; Is there a way to actually suppress it
using the HTTPS protocols?

00:38:41.910 --> 00:38:45.970
I mean, I don't --
&gt;&gt;Yuri Dolgov: If you create your own, your

00:38:45.970 --> 00:38:48.040
custom print dialogue, you can suppress whatever
you want.

00:38:48.040 --> 00:38:51.110
But in this case, you have to parse capabilities
yourself.

00:38:51.110 --> 00:38:52.140
&gt;&gt;&gt; Yeah, that's fine.

00:38:52.140 --> 00:38:57.920
&gt;&gt;Akshay Kannan: So you can do it using the
HTTPS API and basically not show certain options

00:38:57.920 --> 00:39:00.740
in your UI.

00:39:00.740 --> 00:39:02.100
&gt;&gt;&gt; Thanks.

00:39:02.100 --> 00:39:06.070
&gt;&gt;&gt; You mentioned that you have millions of
Cloud Print printers on your system now.

00:39:06.070 --> 00:39:09.250
Can you speak a little bit about the infrastructure
required for that?

00:39:09.250 --> 00:39:15.520
Do you have millions of TCP connections that
are open, using UDP or how does that work?

00:39:15.520 --> 00:39:21.730
&gt;&gt;Akshay Kannan: For our cloud ready printers
we are using XMPP to handle the notifications

00:39:21.730 --> 00:39:23.820
between us and those printers.

00:39:23.820 --> 00:39:27.630
There isn't necessarily a one-to-one correspondence
of XMPP connections to printers.

00:39:27.630 --> 00:39:31.920
Because a lot of times with the Chrome connector,
with Cloud Print servers, you have multiple

00:39:31.920 --> 00:39:34.860
printers which can be associated with a single
connection.

00:39:34.860 --> 00:39:40.340
So -- so what it is, for cloud ready printers,
we have one XMPP connection for each of those

00:39:40.340 --> 00:39:41.340
printers.

00:39:41.340 --> 00:39:44.321
And for printers that are connected to the
server or a different Chrome connector, it's

00:39:44.321 --> 00:39:47.100
an XMPP connection per machine.

00:39:47.100 --> 00:39:52.780
So -- so, for example, if I'm sharing five
printers with my MacBook, I'd have five XMPP

00:39:52.780 --> 00:39:58.660
open or, I'm sorry, one XMPP connection controlling
all five of those printers.

00:39:58.660 --> 00:40:02.810
&gt;&gt;&gt; But just short questions -- the short
answer to your question is we keep millions

00:40:02.810 --> 00:40:08.230
connected, connections open on our site, for
every single printer, and we rely on your

00:40:08.230 --> 00:40:10.910
infrastructure for that.

00:40:10.910 --> 00:40:13.190
So, yes.

00:40:13.190 --> 00:40:18.980
&gt;&gt;&gt; So if my office just lost its internet
connection because a cable chewed on the wire,

00:40:18.980 --> 00:40:22.080
all I can do is stare at my Cloud Printers,
correct.

00:40:22.080 --> 00:40:27.450
&gt;&gt;Akshay Kannan: What happens is when your
printers are offline, any job goes into a

00:40:27.450 --> 00:40:31.619
queued state, so everyone would still be able
to print, but then once the internet comes

00:40:31.619 --> 00:40:34.410
back on, all the jobs would come back out
of the printer.

00:40:34.410 --> 00:40:38.990
&gt;&gt;&gt; I cannot send jobs directly to the print,
they have to go through Google.

00:40:38.990 --> 00:40:42.380
No connection to Google, no printing.

00:40:42.380 --> 00:40:44.319
&gt;&gt;Akshay Kannan: Yeah.

00:40:44.319 --> 00:40:45.610
&gt;&gt;&gt; Got it.

00:40:45.610 --> 00:40:46.900
Thank you.

00:40:46.900 --> 00:40:51.500
&gt;&gt;&gt; Is there a Linux print server for this,
or windows print server, short of leaving

00:40:51.500 --> 00:40:53.050
Chrome open on the server?

00:40:53.050 --> 00:41:00.220
&gt;&gt;Akshay Kannan: There is, actually, so on
Linux, how it works is you can start the Chrome

00:41:00.220 --> 00:41:05.900
connector, but actually you can run Chrome
in -- this is actually -- it's in the chromium

00:41:05.900 --> 00:41:06.900
source.

00:41:06.900 --> 00:41:09.760
I'm not sure how much of this is documented.

00:41:09.760 --> 00:41:11.930
We'll probably be documenting over time.

00:41:11.930 --> 00:41:15.869
But you can run Chrome in a headless mode
with a certain command line flag, which will

00:41:15.869 --> 00:41:20.450
start the Cloud Print service up in the background,
and it's what we do internally at Google to

00:41:20.450 --> 00:41:23.080
get all of our thousands of printers online.

00:41:23.080 --> 00:41:26.890
So it doesn't require you to keep Chrome running;
it just requires you to have Chrome installed,

00:41:26.890 --> 00:41:31.770
and you launch it with the flag which starts
up the Cloud Print service in the background.

00:41:31.770 --> 00:41:38.880
&gt;&gt;&gt; I've noticed that sometimes the office
printer that I Cloud Print to doesn't appear

00:41:38.880 --> 00:41:40.210
in the dialogue box.

00:41:40.210 --> 00:41:44.860
I assume that's because it's kind of a flakey
printer and sometimes it's offline or broken

00:41:44.860 --> 00:41:51.090
or something, but I didn't see in your API
that there was a way for a printer to report

00:41:51.090 --> 00:41:56.240
its status, or how does that -- how does Google
know that that printer is not available?

00:41:56.240 --> 00:42:01.800
&gt;&gt;Akshay Kannan: So what we do is for status,
we actually determine that using your XMPP

00:42:01.800 --> 00:42:02.870
status.

00:42:02.870 --> 00:42:07.510
So if the printer doesn't have an active connection,
in fact you could see this, if I turn the

00:42:07.510 --> 00:42:10.700
printer off right now, it will show up as
offline in the dialogue.

00:42:10.700 --> 00:42:14.730
We basically use the XMPP status of the printer
to determine whether it's online or offline.

00:42:14.730 --> 00:42:16.920
&gt;&gt;&gt; So that doesn't remove from the list,
though?

00:42:16.920 --> 00:42:18.810
Is there some --
&gt;&gt;Akshay Kannan: It doesn't remove from the

00:42:18.810 --> 00:42:19.810
list.

00:42:19.810 --> 00:42:24.540
What it does is it grays it out and it moves
it to the bottom of the list, so your online

00:42:24.540 --> 00:42:27.650
printers show up above your offline printers,
but you'll still be able to see your offline

00:42:27.650 --> 00:42:29.560
printers at any time.

00:42:29.560 --> 00:42:32.890
If you're actually not seeing the printer,
then it might be that you're logged in with

00:42:32.890 --> 00:42:35.240
a different account.

00:42:35.240 --> 00:42:38.380
You have to be logged in with the same account
that you used to set up the printer, or you

00:42:38.380 --> 00:42:42.780
can share the printer with your other account.

00:42:42.780 --> 00:42:47.880
But, yeah, we don't -- the printer, if you
set it up once, it will always be part of

00:42:47.880 --> 00:42:50.480
your account so...

00:42:50.480 --> 00:42:57.520
&gt;&gt;&gt; So you mentioned for security, once a
job is complete, you delete it.

00:42:57.520 --> 00:43:02.119
Is there any ability to retain that for at
least a short period so that you could reprint

00:43:02.119 --> 00:43:03.360
successful jobs?

00:43:03.360 --> 00:43:08.050
&gt;&gt;Akshay Kannan: So one thing you can do is
if you are the printer receiving the jobs,

00:43:08.050 --> 00:43:12.300
if you want to reprint successful jobs, we
only delete the job content when the status

00:43:12.300 --> 00:43:18.210
gets set to done, so if you're the developer,
you could just set the status to be "in progress",

00:43:18.210 --> 00:43:22.560
or move it from "in progress" back into queued,
and with all of these different states we

00:43:22.560 --> 00:43:24.470
would retain the job on our side.

00:43:24.470 --> 00:43:29.260
&gt;&gt;&gt; I guess what I would like to see is -- is
that ability when you're using the connector,

00:43:29.260 --> 00:43:36.200
so you've got an existing printer, but that
capability magically from your end.

00:43:36.200 --> 00:43:41.210
&gt;&gt;Akshay Kannan: Sorry, I didn't catch exactly
that.

00:43:41.210 --> 00:43:46.060
&gt;&gt;&gt; So maybe just the ability to automatically
keep a copy of everything you print in the

00:43:46.060 --> 00:43:49.850
drive, so not choosing one or the other, but
archive.

00:43:49.850 --> 00:43:52.150
&gt;&gt;Akshay Kannan: I see.

00:43:52.150 --> 00:43:53.150
I see.

00:43:53.150 --> 00:43:54.150
That would definitely be interesting looking
into.

00:43:54.150 --> 00:43:58.020
I know there's definitely document retention
and privacy implications around that as well,

00:43:58.020 --> 00:44:02.450
because not everyone wants all their print
jobs saved, but it's definitely something

00:44:02.450 --> 00:44:04.359
worth looking into.

00:44:04.359 --> 00:44:05.359
&gt;&gt;&gt; Thanks.

00:44:05.359 --> 00:44:11.470
&gt;&gt;&gt; I love Google Cloud Print by the way,
but my question is say you're in Google Drive,

00:44:11.470 --> 00:44:17.280
and you have a picture file, I think if you
print it now, it like -- it just comes out

00:44:17.280 --> 00:44:18.920
in a standard way.

00:44:18.920 --> 00:44:23.340
Are you guys like thinking of any options
-- like if you wanted a full page photo or

00:44:23.340 --> 00:44:26.220
like half page or like -- is there a way to
format it?

00:44:26.220 --> 00:44:30.910
&gt;&gt;Akshay Kannan: So currently your formatting
options are limited to what the printer service

00:44:30.910 --> 00:44:33.540
is and the capabilities.

00:44:33.540 --> 00:44:37.060
Definitely over time we'll be expanding what
those capabilities are.

00:44:37.060 --> 00:44:40.960
Some things like scaling would be options
that are -- that are part of the dialogue,

00:44:40.960 --> 00:44:45.880
but I think for now the best approach is to
client side just generate the PDF how you

00:44:45.880 --> 00:44:50.890
want it to look or just flow the image how
you want it to look and then send it to our

00:44:50.890 --> 00:44:58.839
service, but, yeah, definitely it's future
work for us, but not currently there.

00:44:58.839 --> 00:45:03.220
&gt;&gt;&gt; At -- on my home system if I'm not logged
in, and I see my son is logged in on the computer,

00:45:03.220 --> 00:45:05.660
I can't print.

00:45:05.660 --> 00:45:11.000
Is there any work to have like an appliance
that could just sit on the network, you know,

00:45:11.000 --> 00:45:16.830
a tiny little box that would prevent -- or
provide the cloud services so that I don't

00:45:16.830 --> 00:45:18.900
have to worry about being logged in?

00:45:18.900 --> 00:45:23.119
&gt;&gt;Akshay Kannan: There's -- that's definitely
a -- something that's -- a developer could

00:45:23.119 --> 00:45:24.510
technically build.

00:45:24.510 --> 00:45:26.840
We currently don't have anything like that.

00:45:26.840 --> 00:45:32.760
&gt;&gt;Yuri Dolgov: We have source implementation
for WRT support, in just -- it's in early

00:45:32.760 --> 00:45:37.440
stage, but (indiscernible) we implemented
this, and the problem he faced is basically

00:45:37.440 --> 00:45:39.830
a drivers problem.

00:45:39.830 --> 00:45:45.950
This implementation supports pretty much every
file as I remember, and, well, maybe something

00:45:45.950 --> 00:45:48.780
else, but it won't support like every single
printer.

00:45:48.780 --> 00:45:52.799
And it's hard to implement one that will support
every single printer.

00:45:52.799 --> 00:45:53.799
&gt;&gt;&gt; Where would I find that?

00:45:53.799 --> 00:45:57.290
&gt;&gt;Akshay Kannan: Currently we don't link to
it from anywhere, but we can talk to you after

00:45:57.290 --> 00:45:58.680
the presentation.

00:45:58.680 --> 00:46:02.130
It's currently a project that's just on Google
code that was published by another Google

00:46:02.130 --> 00:46:10.240
engineer who built this as an enthusiastic
side project.

00:46:10.240 --> 00:46:12.000
&gt;&gt;&gt; So kind of back to the scaling.

00:46:12.000 --> 00:46:19.220
Say you have a printer that doesn't print
8.5 x 11, and you print an image or a PDF,

00:46:19.220 --> 00:46:20.220
what happens?

00:46:20.220 --> 00:46:25.350
Does that get scaled down up to the media,
or does it print at some, you know, fixed

00:46:25.350 --> 00:46:26.500
resolution conversion?

00:46:26.500 --> 00:46:30.840
&gt;&gt;Akshay Kannan: I believe some of that depends
on the printer you're printing to.

00:46:30.840 --> 00:46:35.780
If there's a fit-to-page option, then we currently
service that and allow you to scale it down

00:46:35.780 --> 00:46:37.800
to whatever the output format is.

00:46:37.800 --> 00:46:42.581
Otherwise, I think the default behavior is
just to print it out exactly how it is, so

00:46:42.581 --> 00:46:48.890
it might not be perfectly aligned when you're
trying to print and 8.5 x 11 PDF on your A4

00:46:48.890 --> 00:46:49.890
paper.

00:46:49.890 --> 00:46:51.330
That is the current behavior.

00:46:51.330 --> 00:46:55.370
I think going forward we'll be working on
expanding fit-to-page capabilities.

00:46:55.370 --> 00:47:00.450
But that's why we were also mentioning the
ideal experience rather than scaling is you

00:47:00.450 --> 00:47:05.869
want your document to be reflowed which is
why we do recommend HTML for document submissions

00:47:05.869 --> 00:47:10.630
because we can intelligently flow that for
whatever printer it's ending up on.

00:47:10.630 --> 00:47:17.971
&gt;&gt;&gt; But you don't necessarily have control
over what that source content is, if you want

00:47:17.971 --> 00:47:22.030
to print some third party content that you
were just browsing to, say?

00:47:22.030 --> 00:47:26.900
&gt;&gt;Akshay Kannan: Yes, if it's -- if it's,
for example, a PDF that's 8.5 x 11 that you

00:47:26.900 --> 00:47:32.940
want to print to A4 paper, then our best options
there are fitting to page or printing it out

00:47:32.940 --> 00:47:38.670
as it is, so we won't be able to intelligently
reflow that in that case.

00:47:38.670 --> 00:47:40.360
&gt;&gt;&gt; Okay, thanks.

00:47:40.360 --> 00:47:44.410
&gt;&gt;&gt; Can you please talk a bit more about the
setup you had on the first floor?

00:47:44.410 --> 00:47:47.430
Can I make one of my printers public?

00:47:47.430 --> 00:47:51.960
&gt;&gt;Akshay Kannan: Currently the setup we have
on our first floor is actually just part of

00:47:51.960 --> 00:47:57.070
a pilot that we're running to try and make
printers public, so none of this UI is currently

00:47:57.070 --> 00:47:58.380
available.

00:47:58.380 --> 00:48:02.510
That being said, depending on the -- we're
basically trying this out as a pilot to see

00:48:02.510 --> 00:48:04.119
how people interact with it.

00:48:04.119 --> 00:48:09.070
I think moving forward it might be something
that we pursue more seriously and open up

00:48:09.070 --> 00:48:12.960
to developers and to users.

00:48:12.960 --> 00:48:18.050
&gt;&gt;&gt; If my printer is not cloud ready, how
do I print to it?

00:48:18.050 --> 00:48:23.740
&gt;&gt;Akshay Kannan: So if your printer is not
cloud-ready, you can set up the Chrome connector,

00:48:23.740 --> 00:48:26.260
so this is -- or there's a slide earlier.

00:48:26.260 --> 00:48:31.230
Basically from within the -- if your printer
is connected to a desktop or a laptop at home,

00:48:31.230 --> 00:48:36.680
you can go to Chrome settings and enable from
advanced options, Google cloud print connector,

00:48:36.680 --> 00:48:40.960
which will take that printer and then share
it with your Google account using that local

00:48:40.960 --> 00:48:45.160
machine as a print server.

00:48:45.160 --> 00:48:47.090
&gt;&gt;&gt; The printer cannot be a network printer?

00:48:47.090 --> 00:48:51.190
&gt;&gt;Akshay Kannan: It could be a network printer,
as long as -- the only restriction is that

00:48:51.190 --> 00:48:56.010
the laptop or the computer that you're using
as the Cloud Print connector has to be able

00:48:56.010 --> 00:48:59.310
to see that printer locally or over the network.

00:48:59.310 --> 00:49:02.830
It has to be part of the OS print dialogue.

00:49:02.830 --> 00:49:03.830
&gt;&gt;&gt; Okay, thanks.

00:49:03.830 --> 00:49:13.289
&gt;&gt;&gt; If the page has a specific CSS layout
for print media, will the print Cloud Print

00:49:13.289 --> 00:49:19.460
--
&gt;&gt;Yuri Dolgov: Specific print and layout so,

00:49:19.460 --> 00:49:20.990
yes.

00:49:20.990 --> 00:49:33.260
&gt;&gt;&gt; And also your https rasts API, can I set
the orientation program -- like orientation

00:49:33.260 --> 00:49:38.180
equals landscape or --
&gt;&gt;Yuri Dolgov: Oh, yeah, it depends on the

00:49:38.180 --> 00:49:39.180
printer.

00:49:39.180 --> 00:49:40.940
If printer supports orientation, we'll show
orientation.

00:49:40.940 --> 00:49:44.370
If printer doesn't support orientation, we
don't do anything.

00:49:44.370 --> 00:49:50.890
&gt;&gt;&gt; No, no, I mean, I guess certain printers
-- for some reason it has to do with drivers

00:49:50.890 --> 00:50:06.050
that's not -- exposed the API for software
to control whether it always asks the user

00:50:06.050 --> 00:50:10.109
what orientation, but were you able to experiment?

00:50:10.109 --> 00:50:13.780
Have you done it to programmatically set the
--

00:50:13.780 --> 00:50:21.020
&gt;&gt;&gt; With most printers you are able to programmatically
set the orientation using the capabilities,

00:50:21.020 --> 00:50:26.619
basically when you get your -- when you fetch
the capabilities for that printer, you can

00:50:26.619 --> 00:50:30.550
find the ones which correspond to orientation,
set them in your print ticket, and then when

00:50:30.550 --> 00:50:36.210
you do your submit call, you can specify that
print ticket with the orientation specified.

00:50:36.210 --> 00:50:37.680
&gt;&gt;&gt; Thanks.

00:50:37.680 --> 00:50:44.660
&gt;&gt;&gt; So you mentioned some esoteric encryption
solutions where I would implement my -- a

00:50:44.660 --> 00:50:48.040
shared key or something with my clients.

00:50:48.040 --> 00:50:55.180
If I need an end-to-end security where Google
never sees my content, would I have to do

00:50:55.180 --> 00:50:56.980
that, or is there another option?

00:50:56.980 --> 00:50:58.180
&gt;&gt;Akshay Kannan: Yeah.

00:50:58.180 --> 00:51:02.660
So, as I mentioned earlier, you can -- yeah,
with end-to-end security such that we never

00:51:02.660 --> 00:51:06.869
see your content, the best solution currently
that we have is for you to encrypt it client

00:51:06.869 --> 00:51:09.800
side and decrypt after receiving it.

00:51:09.800 --> 00:51:14.480
The disadvantage there is you lose the functionality
for us to convert the document because we

00:51:14.480 --> 00:51:24.010
can't read it, but it would be completely
invisible to us in that case.

00:51:24.010 --> 00:51:25.440
&gt;&gt;&gt; Thanks.

00:51:25.440 --> 00:51:33.790
&gt;&gt;&gt; Hi, you said raster data is either PDF,
is there any plan to support XPSS or --

00:51:33.790 --> 00:51:39.480
&gt;&gt;Akshay Kannan: The question was is there
plans to support XPS as an output format.

00:51:39.480 --> 00:51:44.940
The answer is currently no.

00:51:44.940 --> 00:51:49.990
We're always looking into new formats to explore,
but for the -- for the foreseeable future,

00:51:49.990 --> 00:51:55.200
PDF and PW Raster are our primary formats
going forward.

00:51:55.200 --> 00:51:57.710
&gt;&gt;&gt; Is it because XPS is from Microsoft?

00:51:57.710 --> 00:52:03.010
[ Laughter ]
&gt;&gt;Akshay Kannan: I'm not going to comment

00:52:03.010 --> 00:52:04.910
on that.

00:52:04.910 --> 00:52:07.760
&gt;&gt;&gt; So kudos on Cloud Print.

00:52:07.760 --> 00:52:10.170
It's a very useful facility.

00:52:10.170 --> 00:52:14.760
We have a network, a guest network that we
let people connect in on, and we have our

00:52:14.760 --> 00:52:16.670
printers on our private network.

00:52:16.670 --> 00:52:22.433
So Cloud Print helps with that, being able
to not have them on the same network, but

00:52:22.433 --> 00:52:28.750
one of the issues is is being able to print
from Word or other OS-level type printers.

00:52:28.750 --> 00:52:32.430
There's an open source piece of software that
lets you do that, but apparently with that

00:52:32.430 --> 00:52:35.700
piece of software it only lets you print one
copy at a time.

00:52:35.700 --> 00:52:39.990
Is there going to be anything supported by
Google that would allow, you know, printing

00:52:39.990 --> 00:52:45.840
from OSB first class, first class printing,
like from Mac OS or --

00:52:45.840 --> 00:52:49.950
&gt;&gt;Akshay Kannan: We -- yeah, we currently
don't have any plans to announce in that direction,

00:52:49.950 --> 00:52:56.050
but that's definitely something that -- that
we're looking into going forward, and currently

00:52:56.050 --> 00:53:00.590
I guess the one way to get around the fact
that that isn't currently there is to save

00:53:00.590 --> 00:53:05.980
it as a PDF and then print it through Cloud
Print in Chrome, but, yeah, there's -- we

00:53:05.980 --> 00:53:07.381
currently don't have stuff to announce but
--

00:53:07.381 --> 00:53:12.140
&gt;&gt;&gt; It makes the -- the wife acceptance factor
pretty low when you have to go through and

00:53:12.140 --> 00:53:13.470
do those kind of gyrations.

00:53:13.470 --> 00:53:14.470
&gt;&gt;Akshay Kannan: Absolutely.

00:53:14.470 --> 00:53:19.960
&gt;&gt;&gt; The second thing is is someone had mentioned
about a device like one of the things I toyed

00:53:19.960 --> 00:53:26.170
around with is using raspberry pie and putting
Google Cloud Print on something like that.

00:53:26.170 --> 00:53:30.980
Is anyone at Google or on your team interested
in doing something like that, or would they

00:53:30.980 --> 00:53:35.850
support developers that were interested in
doing a project like that?

00:53:35.850 --> 00:53:40.240
Because that seems like that would be an ideal
solution to provide printers, especially if

00:53:40.240 --> 00:53:46.570
you have a large investment in Legacy printers
that you don't want to replace with Google

00:53:46.570 --> 00:53:47.590
Cloud Printers.

00:53:47.590 --> 00:53:49.119
&gt;&gt;Akshay Kannan: Yeah.

00:53:49.119 --> 00:53:50.119
Absolutely.

00:53:50.119 --> 00:53:54.010
As I mentioned, we did have an engineer who
put together a reference implementation of

00:53:54.010 --> 00:53:58.730
a Cloud Print server on a router, and that
is all open source on Google code, so I can

00:53:58.730 --> 00:54:03.330
hand you my contact information or you can
message the Google groups and we'll be happy

00:54:03.330 --> 00:54:06.930
to point you to the code, and also put you
in touch with the guy who wrote it so --

00:54:06.930 --> 00:54:07.930
&gt;&gt;&gt; Okay.

00:54:07.930 --> 00:54:08.930
Cool.

00:54:08.930 --> 00:54:09.930
Thanks.

00:54:09.930 --> 00:54:10.930
&gt;&gt;&gt; On that side.

00:54:10.930 --> 00:54:13.870
&gt;&gt;&gt; I think he was before me.

00:54:13.870 --> 00:54:15.020
&gt;&gt;&gt; All right.

00:54:15.020 --> 00:54:16.460
I have two questions.

00:54:16.460 --> 00:54:20.760
First question is how do you handle updates
to capabilities?

00:54:20.760 --> 00:54:26.950
For example, you know, you have a server that
got upgraded to handle duplex printing or

00:54:26.950 --> 00:54:30.290
the toners are completely out, you can't print
anymore.

00:54:30.290 --> 00:54:31.930
Is it over XMPP?

00:54:31.930 --> 00:54:36.050
&gt;&gt;Akshay Kannan: So actually, we have an up
-- I didn't mention this API, but we do have

00:54:36.050 --> 00:54:39.690
an update API which allows you to do exactly
that.

00:54:39.690 --> 00:54:42.410
It's basically an https call that the printer
makes.

00:54:42.410 --> 00:54:46.280
You specify new capabilities, what's changed
since last time, and we'll automatically update

00:54:46.280 --> 00:54:48.110
all of that server side.

00:54:48.110 --> 00:54:49.760
&gt;&gt;&gt; That's over the tags, then?

00:54:49.760 --> 00:54:52.190
&gt;&gt;Akshay Kannan: That's over https.

00:54:52.190 --> 00:54:54.730
&gt;&gt;&gt; And the second question is -- I forgot.

00:54:54.730 --> 00:54:58.040
All right, I'll come back.

00:54:58.040 --> 00:55:05.000
&gt;&gt;&gt; Okay, so my questions are that when you
have multiple printers it's -- it gets quite

00:55:05.000 --> 00:55:11.160
hard to determine if they are -- you have
the three different connectivity options,

00:55:11.160 --> 00:55:18.050
and it's very hard to determine which of them
are connected in which ways, or at least used

00:55:18.050 --> 00:55:19.910
to be.

00:55:19.910 --> 00:55:28.180
So what's your opinion on that, and in windows
environments, in -- at least in Windows 7,

00:55:28.180 --> 00:55:33.140
you can get an image of the printer so you
can see, oh, that's -- that's one.

00:55:33.140 --> 00:55:36.330
Are there any developments in that direction?

00:55:36.330 --> 00:55:41.420
&gt;&gt;Akshay Kannan: So I guess a couple of different
approaches we have are we do in our dialogue

00:55:41.420 --> 00:55:45.360
use iconography to distinguish different types
of printers.

00:55:45.360 --> 00:55:50.370
We also have a rename functionality that users
can use on their side to name the printer

00:55:50.370 --> 00:55:52.940
such that you can differentiate between different
printers.

00:55:52.940 --> 00:55:57.960
I don't know if there's anything else I'm
forgetting that kind of helps along these

00:55:57.960 --> 00:56:00.480
lines, but we have a couple of solutions in
place.

00:56:00.480 --> 00:56:05.700
I know there's also a description field that
you can specify as part of the printer which

00:56:05.700 --> 00:56:10.650
will show up in the print dialogue which you
can use to differentiate different printers.

00:56:10.650 --> 00:56:11.650
&gt;&gt;&gt; Okay.

00:56:11.650 --> 00:56:13.220
Thank you.

00:56:13.220 --> 00:56:22.260
Would it be possible to group printers like
on departments on functionality-wise, or it

00:56:22.260 --> 00:56:29.170
could also be -- say if you have a mobile
device or it feels that, okay, you're in this

00:56:29.170 --> 00:56:36.140
city or in this office, then these are the
available printers from the ones that are

00:56:36.140 --> 00:56:37.140
close nearby?

00:56:37.140 --> 00:56:41.490
&gt;&gt;Akshay Kannan: So currently the answer to
that is no, but we do sort of have a solution

00:56:41.490 --> 00:56:46.230
in place which is our search, our search in
our Cloud Print Web dialogue search is not

00:56:46.230 --> 00:56:50.170
only over printer names but over capabilities
and description fields.

00:56:50.170 --> 00:56:54.270
So one thing we do for example in Google is
every printer has a description field for

00:56:54.270 --> 00:56:57.590
the building that it's in, so all I have to
do is type my building name into the search

00:56:57.590 --> 00:57:00.710
dialogue and I'll see all the printers that
are near me.

00:57:00.710 --> 00:57:04.920
Another thing is we also do -- I think you
mentioned grouping by capabilities, or what

00:57:04.920 --> 00:57:09.070
options a printer can do, we do search over
those as well, so if you search for I only

00:57:09.070 --> 00:57:12.410
want to see color printers, you can type in
color and just get a list of printers which

00:57:12.410 --> 00:57:15.130
can print to color.

00:57:15.130 --> 00:57:21.099
&gt;&gt;&gt; Okay, so new employees at Google, you
have like a thousand printers in your dialogues.

00:57:21.099 --> 00:57:22.500
&gt;&gt;Akshay Kannan: Uh-huh.

00:57:22.500 --> 00:57:23.500
&gt;&gt;&gt; Okay.

00:57:23.500 --> 00:57:25.739
Then you search for nearby --
&gt;&gt;Akshay Kannan: Exactly.

00:57:25.739 --> 00:57:26.739
&gt;&gt;&gt; Okay.

00:57:26.739 --> 00:57:32.690
&gt;&gt;Yuri Dolgov: You usually only use a couple
of them, and once you use printer, they will

00:57:32.690 --> 00:57:34.670
be on top basically.

00:57:34.670 --> 00:57:40.900
So you only need to do search once or twice.

00:57:40.900 --> 00:57:42.950
&gt;&gt;&gt; Thank you.

00:57:42.950 --> 00:57:48.490
&gt;&gt;&gt; When you submit print jobs, you have to
be locked in in the browser or in Android.

00:57:48.490 --> 00:57:54.410
Is there any way that a server application
might be able to submit print jobs?

00:57:54.410 --> 00:58:00.920
The case I have, all the use case where we
might be able to use this is one of our clients

00:58:00.920 --> 00:58:06.440
runs a E commerce site, and they would love
to be able to use Cloud Print to print older

00:58:06.440 --> 00:58:08.300
notifications as they come in.

00:58:08.300 --> 00:58:10.540
&gt;&gt;Yuri Dolgov: You can do that.

00:58:10.540 --> 00:58:17.840
You can create any account that you can share
the printer with, and then just using AUTH,

00:58:17.840 --> 00:58:25.080
you can authenticate server with this account
and totally submit this account.

00:58:25.080 --> 00:58:26.080
&gt;&gt;&gt; Okay.

00:58:26.080 --> 00:58:30.380
&gt;&gt;Akshay Kannan: Yeah, we support both AUTH
and client login for authentication, so you

00:58:30.380 --> 00:58:35.320
could use that server side to authenticate
into our API with a dummy Google account and

00:58:35.320 --> 00:58:37.740
then use that to submit print jobs.

00:58:37.740 --> 00:58:38.740
&gt;&gt;&gt; Excellent.

00:58:38.740 --> 00:58:40.590
Thank you.

00:58:40.590 --> 00:58:43.440
&gt;&gt;Akshay Kannan: Sure.

00:58:43.440 --> 00:58:44.440
&gt;&gt;&gt; Okay.

00:58:44.440 --> 00:58:48.359
I'm wondering what kind of data has Google
extract from my print jobs?

00:58:48.359 --> 00:58:54.110
Because privacy (indiscernible) but there
must be some other reasons to process data.

00:58:54.110 --> 00:58:58.490
&gt;&gt;Akshay Kannan: If the source and destination
formats of your print job are the same, so

00:58:58.490 --> 00:59:02.070
let's say you're printing a PDF to a PDF,
absolutely nothing.

00:59:02.070 --> 00:59:07.930
We just send the document over to the printer
without any conversion on our side.

00:59:07.930 --> 00:59:14.540
In terms of -- so in terms of conversion,
we do use a conversion service to convert

00:59:14.540 --> 00:59:18.970
your document to the format it needs to be
in, but, yeah, as I mentioned before, the

00:59:18.970 --> 00:59:23.099
converted document will not persist on our
server for more than 30 days.

00:59:23.099 --> 00:59:29.700
The only thing I guess that stays left over
are standard http logs, and also I guess the

00:59:29.700 --> 00:59:33.340
fact that within your account you'll see these
-- you'll see your print job history.

00:59:33.340 --> 00:59:39.930
&gt;&gt;&gt; So Google has no content extraction kind
of -- if I print my bank account statements

00:59:39.930 --> 00:59:42.180
it's not --
&gt;&gt;Akshay Kannan: Not at all.

00:59:42.180 --> 00:59:44.650
We don't use your print jobs to serve ads.

00:59:44.650 --> 00:59:50.280
[ Laughter ]
&gt;&gt;&gt; Is there any update on the Android as

00:59:50.280 --> 00:59:59.310
an official Cloud Print, because as I recall,
it was still something that was semi unofficial.

00:59:59.310 --> 01:00:05.260
&gt;&gt;Akshay Kannan: So, yeah, we are working
on integrating with the Android properties

01:00:05.260 --> 01:00:11.619
of Google Apps going forward, but as far as
platform integration goes, we don't have anything

01:00:11.619 --> 01:00:13.099
to announce at the moment.

01:00:13.099 --> 01:00:16.200
&gt;&gt;&gt; And then secondly, I think this has been
asked about three or four different ways,

01:00:16.200 --> 01:00:21.290
at least, but I'm not sure that I got it completely
straight.

01:00:21.290 --> 01:00:28.880
In our office, for instance, we have a large
group of people that come in and out, and

01:00:28.880 --> 01:00:35.280
we have Legacy printers, and I didn't really
want to leave the Legacy printer connected

01:00:35.280 --> 01:00:41.410
to a machine on my account, since I'm not
there all the time, amongst other things,

01:00:41.410 --> 01:00:45.590
but also the machines themselves are generally
public, so I ended up putting it on one of

01:00:45.590 --> 01:00:50.350
the administrator's -- one of the administrator's
accounts and leaving it there, but it doesn't

01:00:50.350 --> 01:00:56.120
seem to be any way to have that done without
having a specific account which you then can

01:00:56.120 --> 01:00:57.440
delegate out of.

01:00:57.440 --> 01:01:00.900
That's, I think, the summarization of everything
that I've heard.

01:01:00.900 --> 01:01:06.279
&gt;&gt;Akshay Kannan: In terms of accounts are
you referring to like log-in accounts?

01:01:06.279 --> 01:01:12.930
&gt;&gt;&gt; They have to have a Gmail account in order
to be able to have a printer -- in order to

01:01:12.930 --> 01:01:17.740
be able to attach it to a legacy printer,
which they can then share.

01:01:17.740 --> 01:01:20.360
And there's no other way around that that
I can figure.

01:01:20.360 --> 01:01:24.050
&gt;&gt;&gt; Just in general, enterprise printing I
guess would be the question and how do you

01:01:24.050 --> 01:01:30.720
take a set of enterprise printers and let
a specific set of people or even make it public,

01:01:30.720 --> 01:01:33.330
which is kind of what you're doing downstairs.

01:01:33.330 --> 01:01:36.550
Is that going to be available soon or when
is that going to be available?

01:01:36.550 --> 01:01:41.240
&gt;&gt;Akshay Kannan: I guess in terms of both
questions, with having an account in order

01:01:41.240 --> 01:01:46.130
to register a printer, you do need a Google
account in order to register your printer

01:01:46.130 --> 01:01:47.130
with Cloud Print.

01:01:47.130 --> 01:01:49.810
That being said, it doesn't have to be your
Google account or someone else's.

01:01:49.810 --> 01:01:55.140
A lot of the enterprises that we work with,
to answer your question, use what they call

01:01:55.140 --> 01:01:59.580
a roll account, which is just a dedicated
Google account that they set up for the express

01:01:59.580 --> 01:02:04.829
purpose of printing that they can share access
to, and they'll use that to run the print

01:02:04.829 --> 01:02:08.420
server so that way no one has to use their
personal account to --

01:02:08.420 --> 01:02:14.250
&gt;&gt;&gt; Is there a way to -- so if you have a
set of employees, is there a way to share

01:02:14.250 --> 01:02:18.580
the printer with them or basically make it
available in their preferences so they don't

01:02:18.580 --> 01:02:20.720
have to be accepting invitations for this?

01:02:20.720 --> 01:02:21.740
&gt;&gt;Akshay Kannan: Absolutely.

01:02:21.740 --> 01:02:26.660
So we're working on expanding more of that
going forward, but what you can already currently

01:02:26.660 --> 01:02:29.120
do is share it with a group.

01:02:29.120 --> 01:02:31.910
So for example, let's say you have a Google
group that encompasses everyone within your

01:02:31.910 --> 01:02:33.109
domain.

01:02:33.109 --> 01:02:37.770
You can from within the share interface that
we demoed earlier, just type in that group.

01:02:37.770 --> 01:02:41.810
And all that needs to happen is the owner
of that group can accept the invitation on

01:02:41.810 --> 01:02:46.610
behalf of people in the organization.

01:02:46.610 --> 01:02:47.970
&gt;&gt;&gt; Okay.

01:02:47.970 --> 01:02:49.330
Thanks.

01:02:49.330 --> 01:02:55.580
&gt;&gt;&gt; I develop an application that actually
works like print server, and the printer is

01:02:55.580 --> 01:03:01.390
a terminal printer, and I control the printer
by escape comments.

01:03:01.390 --> 01:03:04.930
So I open the LPT port and send comments.

01:03:04.930 --> 01:03:06.900
How about in that case?

01:03:06.900 --> 01:03:12.670
&gt;&gt;Akshay Kannan: So this is with a terminal
printer that you account to over LPR?

01:03:12.670 --> 01:03:14.970
&gt;&gt;&gt; Yes, but it's connected to my applications.

01:03:14.970 --> 01:03:18.610
There is no drivers, there is no --
&gt;&gt;Akshay Kannan: I see.

01:03:18.610 --> 01:03:23.790
If there's no standard print drivers, we won't
be able to integrate that with Cloud Print.

01:03:23.790 --> 01:03:27.270
So currently -- I'm assuming you want to set
up the Cloud Print connector from within Chrome

01:03:27.270 --> 01:03:30.220
to share it with your Cloud Print account?

01:03:30.220 --> 01:03:35.140
In that case we only take the local printers
which are actually in your OS print dialogue

01:03:35.140 --> 01:03:36.140
to share.

01:03:36.140 --> 01:03:43.230
So we won't be sharing it unless it's -- unless
it uses the standard OS print mechanism to

01:03:43.230 --> 01:03:44.230
receive print jobs.

01:03:44.230 --> 01:03:45.230
&gt;&gt;&gt; Okay.

01:03:45.230 --> 01:03:48.470
But is it -- can I make a connector to the
Google server?

01:03:48.470 --> 01:03:49.470
Okay.

01:03:49.470 --> 01:03:50.470
&gt;&gt;Akshay Kannan: Yeah.

01:03:50.470 --> 01:03:56.570
&gt;&gt;&gt; I remembered the question now.

01:03:56.570 --> 01:04:01.440
So you mentioned you can print to your mobile
Nexus, right?

01:04:01.440 --> 01:04:02.880
What does that mean?

01:04:02.880 --> 01:04:06.109
Like it's just PDF on the flash drive?

01:04:06.109 --> 01:04:07.410
&gt;&gt;Akshay Kannan: Exactly.

01:04:07.410 --> 01:04:11.660
What we do is we take the job, we convert
it to a PDF and then we push a notification

01:04:11.660 --> 01:04:16.300
to your device that starts a download of that
PDF.

01:04:16.300 --> 01:04:18.000
So you don't even have to be running Chrome
as Android.

01:04:18.000 --> 01:04:21.500
It runs as a background service using Android
push.

01:04:21.500 --> 01:04:29.940
So you can print anything to your phone and
it just shows up as a PDF on 

01:04:29.940 --> 01:04:30.940
the device.

01:04:30.940 --> 01:04:31.940
Next questions.

01:04:31.940 --> 01:04:32.940
&gt;&gt;&gt; Getting back to the non-cloud-ready printer.

01:04:32.940 --> 01:04:34.380
You said you simply do this from a PC or something
like that.

01:04:34.380 --> 01:04:38.710
Is there some software you have to load on
to the PC in order for it to act as the server?

01:04:38.710 --> 01:04:40.660
I assume it's acting as a cloud-ready server.

01:04:40.660 --> 01:04:44.000
&gt;&gt;Akshay Kannan: So currently it works within
Google Chrome.

01:04:44.000 --> 01:04:46.630
You have to have Chrome installed on that
PC.

01:04:46.630 --> 01:04:47.630
&gt;&gt;&gt; Chrome OS?

01:04:47.630 --> 01:04:50.510
&gt;&gt;Akshay Kannan: No, just the Chrome browser.

01:04:50.510 --> 01:04:54.849
So from within the settings on Google Chrome
you can configure your local printers to be

01:04:54.849 --> 01:04:55.849
cloud ready.

01:04:55.849 --> 01:04:57.740
And there's no additional software apart from
Google Chrome required.

01:04:57.740 --> 01:05:01.040
&gt;&gt;&gt; So then it acts as a cloud-ready server.

01:05:01.040 --> 01:05:05.540
&gt;&gt;Akshay Kannan: Exactly.

01:05:05.540 --> 01:05:07.040
&gt;&gt;&gt; Okay.

01:05:07.040 --> 01:05:08.040
&gt;&gt;&gt; One more.

01:05:08.040 --> 01:05:14.700
Can you tell us about Cloud Print integration
with Google Apps, like sharing to groups,

01:05:14.700 --> 01:05:15.940
et cetera?

01:05:15.940 --> 01:05:17.820
&gt;&gt;Akshay Kannan: Yeah.

01:05:17.820 --> 01:05:21.660
In terms of apps integration, we do support
-- is this for enterprise in particular?

01:05:21.660 --> 01:05:22.660
&gt;&gt;&gt; Yeah.

01:05:22.660 --> 01:05:23.780
&gt;&gt;Akshay Kannan: Yeah.

01:05:23.780 --> 01:05:29.440
For enterprise integration we have -- currently
our consumer solution for most part is our

01:05:29.440 --> 01:05:30.980
enterprise solution.

01:05:30.980 --> 01:05:36.150
There are plans to move that into a more custom
enterprise solution going forward.

01:05:36.150 --> 01:05:43.880
But yeah, for now integration we offer at
a basic level is -- as we mentioned you can

01:05:43.880 --> 01:05:49.940
configure Chrome to run as a headless server
on Linux and then also with group sharing

01:05:49.940 --> 01:05:54.140
you can easily share printers with groups
of people.

01:05:54.140 --> 01:06:02.060
&gt;&gt;&gt; So if that's -- if you add a new user
to a group, if we have a group called printers

01:06:02.060 --> 01:06:08.580
and we have five or ten printers connected
to that group and you add a new user to that

01:06:08.580 --> 01:06:14.500
group, would he automatically have the print
when he log on to his new account?

01:06:14.500 --> 01:06:16.369
&gt;&gt;Yuri Dolgov: Yes.

01:06:16.369 --> 01:06:17.369
&gt;&gt;&gt; Okay.

01:06:17.369 --> 01:06:18.369
Excellent, thanks.

01:06:18.369 --> 01:06:20.100
&gt;&gt;Akshay Kannan: Cool.

01:06:20.100 --> 01:06:21.760
Do we have one more?

01:06:21.760 --> 01:06:23.240
All right.

01:06:23.240 --> 01:06:24.720
Last question.

01:06:24.720 --> 01:06:31.100
&gt;&gt;&gt; Normally the driverless printing is a
myth, used to be, but you guys has really

01:06:31.100 --> 01:06:35.270
done a good job that it can be a reality.

01:06:35.270 --> 01:06:37.150
I really appreciate that.

01:06:37.150 --> 01:06:38.150
&gt;&gt;Akshay Kannan: Thank you.

01:06:38.150 --> 01:06:39.150
&gt;&gt;Yuri Dolgov: Thank you.

01:06:39.150 --> 01:06:40.150
&gt;&gt;Akshay Kannan: Thank you so much.

01:06:40.150 --> 01:06:41.150
Thanks a lot, everyone.

01:06:41.150 --> 01:06:41.151
[ Applause ]

