WEBVTT
Kind: captions
Language: en

00:00:04.260 --> 00:00:10.010
I want to talk to you today
not just about the problems

00:00:10.010 --> 00:00:18.560
that we've got necessarily with
regards to how web apps have

00:00:18.560 --> 00:00:24.190
in the past been boxed into
one location or another,

00:00:24.190 --> 00:00:27.455
because-- do we have slides for?

00:00:27.455 --> 00:00:27.955
Apologies.

00:00:35.224 --> 00:00:36.200
Do we have slides?

00:00:39.350 --> 00:00:41.450
Or the other slides?

00:00:44.110 --> 00:00:46.700
We'll come back to my debugging
session in just a moment.

00:00:55.054 --> 00:00:56.470
I've done this all
wrong, you see.

00:01:09.150 --> 00:01:11.060
All right.

00:01:11.060 --> 00:01:12.590
Oh I see.

00:01:12.590 --> 00:01:14.907
I was on the wrong screen.

00:01:14.907 --> 00:01:17.490
It was nice to see my co-workers
actually watching and editing

00:01:17.490 --> 00:01:19.010
my presentation in real time.

00:01:19.010 --> 00:01:21.330
That's going to make
some good times here.

00:01:27.880 --> 00:01:28.580
And go.

00:01:28.580 --> 00:01:29.100
All right.

00:01:34.897 --> 00:01:36.730
Wow, that's not focused
in the right window.

00:01:36.730 --> 00:01:37.280
Yes.

00:01:37.280 --> 00:01:38.806
Hey, there we go.

00:01:38.806 --> 00:01:40.180
So I'm going to
talk to you today

00:01:40.180 --> 00:01:46.410
about making web
apps appy or appy

00:01:46.410 --> 00:01:48.710
web apps or something
along those lines.

00:01:48.710 --> 00:01:51.820
It's a really difficult kind of
a set of words to pack together

00:01:51.820 --> 00:01:55.560
because there are expectations
about what an application are

00:01:55.560 --> 00:01:57.890
are kind of different to
our expectations of the web.

00:01:57.890 --> 00:01:59.510
We expect that the
web is going to get

00:01:59.510 --> 00:02:01.750
us the most reach possible.

00:02:01.750 --> 00:02:05.130
You'll see the new device
lab out here today,

00:02:05.130 --> 00:02:07.210
which I know that Chris
Wilson and other folks

00:02:07.210 --> 00:02:09.660
here have been putting
together furiously.

00:02:09.660 --> 00:02:11.840
But the best thing
about the device lab

00:02:11.840 --> 00:02:16.550
is that it shows you in one
concrete place the enormous

00:02:16.550 --> 00:02:18.330
of reach the web.

00:02:18.330 --> 00:02:21.420
Not only have we been able
to create a platform that

00:02:21.420 --> 00:02:25.540
gets you all the users from
one producer's device or one

00:02:25.540 --> 00:02:29.220
set of manufacturer's devices
or one operating system,

00:02:29.220 --> 00:02:31.110
we created a platform
that gives you access

00:02:31.110 --> 00:02:33.240
to pretty much
every device that's

00:02:33.240 --> 00:02:37.190
been shipped in the
world in the last decade.

00:02:37.190 --> 00:02:41.270
We have more users on Chrome--
I was looking at the numbers.

00:02:41.270 --> 00:02:44.640
We have more users on Chrome
than all iOS device shipments

00:02:44.640 --> 00:02:45.579
to date.

00:02:45.579 --> 00:02:47.370
That's not to say people
using iOS devices.

00:02:47.370 --> 00:02:50.505
That's all an iOS
devices ever made.

00:02:50.505 --> 00:02:52.130
Think about that for
a moment, and then

00:02:52.130 --> 00:02:55.570
think about how you invest in
those two platforms differently

00:02:55.570 --> 00:02:57.330
and your expectations of them.

00:02:57.330 --> 00:02:59.590
And they're very
different because the web,

00:02:59.590 --> 00:03:03.950
despite having enormous reach,
is a little bit awkward.

00:03:03.950 --> 00:03:07.790
And that awkwardness is a big
issue not necessarily so much

00:03:07.790 --> 00:03:11.630
on the desktop when
getting to the stuff that's

00:03:11.630 --> 00:03:12.790
just there is really easy.

00:03:12.790 --> 00:03:14.580
It's up hanging in a tree.

00:03:14.580 --> 00:03:18.920
But in the mobile web, we've
had a bit of a disconnect

00:03:18.920 --> 00:03:21.120
because the power that
you get between being

00:03:21.120 --> 00:03:23.960
able to deploy your
application to pretty

00:03:23.960 --> 00:03:26.310
much every user everywhere
and the ability for them

00:03:26.310 --> 00:03:28.200
to frictionally share
it with everybody

00:03:28.200 --> 00:03:31.510
else, and the ability for
those experiences to show up

00:03:31.510 --> 00:03:34.960
in indexes and crawls and make
it possible for third parties

00:03:34.960 --> 00:03:37.000
to also help share the
experience that you've

00:03:37.000 --> 00:03:40.570
built with other people for
whom it might be relevant--

00:03:40.570 --> 00:03:46.220
that power doesn't really work
well with the UI surface areas

00:03:46.220 --> 00:03:49.660
that we're all carrying
around in our pockets.

00:03:49.660 --> 00:03:52.580
Access to the home screen, being
able to be in the notification

00:03:52.580 --> 00:03:55.460
tray-- all of those
things are critical when

00:03:55.460 --> 00:03:58.850
typing something on a little
tiny screen with a-- even

00:03:58.850 --> 00:04:00.640
with the better
keywords we've got now,

00:04:00.640 --> 00:04:03.270
lets it let's admit that's not
sort of where we want to be.

00:04:03.270 --> 00:04:05.103
Someday we'll be able
to talk to our phones,

00:04:05.103 --> 00:04:07.900
and it'll always just work, but
for now, we're only just there.

00:04:07.900 --> 00:04:13.115
And so saying a URL at a phone
is usually a hilarious thing

00:04:13.115 --> 00:04:14.740
to do in public and
a frustrating thing

00:04:14.740 --> 00:04:16.050
to do in private.

00:04:16.050 --> 00:04:18.230
I recommend you
try both sometime.

00:04:18.230 --> 00:04:23.940
So we don't have access to a
lot of these UI surface areas

00:04:23.940 --> 00:04:25.370
today.

00:04:25.370 --> 00:04:28.720
And it all gets back
toward whether or not

00:04:28.720 --> 00:04:30.180
we're first class.

00:04:30.180 --> 00:04:36.370
Are we part of the ecosystems
top level affordances or not?

00:04:36.370 --> 00:04:40.831
And if we are, being first
class has real advantages,

00:04:40.831 --> 00:04:43.080
and so it's worth asking
what do we need to get there?

00:04:43.080 --> 00:04:45.038
What do we need to do to
actually get ourselves

00:04:45.038 --> 00:04:48.180
to become first class citizens
in the most important operating

00:04:48.180 --> 00:04:52.360
systems that we're
are all using?

00:04:52.360 --> 00:04:55.490
So we've looked at
this problem quite hard

00:04:55.490 --> 00:04:57.270
over the last couple
of years, and we

00:04:57.270 --> 00:05:01.530
started by understanding
that we all

00:05:01.530 --> 00:05:04.760
need to be building
things that work offline.

00:05:04.760 --> 00:05:08.490
We all need to be building
things that just work offline.

00:05:08.490 --> 00:05:11.240
And the definition here of
work is a little different

00:05:11.240 --> 00:05:12.474
than you might imagine.

00:05:12.474 --> 00:05:13.890
I'm not asking you
to build things

00:05:13.890 --> 00:05:17.370
that work offline in the sense
that all the data is always

00:05:17.370 --> 00:05:20.040
cached upfront and
it was done by magic.

00:05:20.040 --> 00:05:21.940
No, I'm asking us
to get to a place

00:05:21.940 --> 00:05:24.440
where we've got
basic equivalence

00:05:24.440 --> 00:05:27.180
with the frustrating
native apps on your phone

00:05:27.180 --> 00:05:29.260
that launch and then fail.

00:05:29.260 --> 00:05:31.940
It would be great if it was the
application that was delivering

00:05:31.940 --> 00:05:34.780
the bad news about what just
happened to the network,

00:05:34.780 --> 00:05:37.110
but maybe presenting you
with the previous state,

00:05:37.110 --> 00:05:40.730
as opposed to a
situation where you're

00:05:40.730 --> 00:05:43.400
looking at a blank
white loading screen.

00:05:43.400 --> 00:05:45.680
The white loading screen
is perhaps the worst part

00:05:45.680 --> 00:05:47.263
of the web experience
today because we

00:05:47.263 --> 00:05:48.880
can't think about
web applications

00:05:48.880 --> 00:05:51.870
as being trustworthy yet,
so we need to give ourselves

00:05:51.870 --> 00:05:54.960
the ability to build
offline that just works.

00:05:54.960 --> 00:05:57.580
And we need access to system UI.

00:05:57.580 --> 00:05:59.550
We've heard over and
over and over again

00:05:59.550 --> 00:06:03.200
from you that access to the
placement in the home screen

00:06:03.200 --> 00:06:06.450
and the ability to
build applications

00:06:06.450 --> 00:06:09.370
that you can Alt-tab to is
a critical differentiator.

00:06:09.370 --> 00:06:11.490
It's part of what
it means to build

00:06:11.490 --> 00:06:13.740
an application versus
build a website.

00:06:13.740 --> 00:06:16.450
And we built up a whole series
of stories and expectations

00:06:16.450 --> 00:06:19.650
around applications versus
websites premised, I think,

00:06:19.650 --> 00:06:23.240
on the inability to be part
of that top level affordance.

00:06:23.240 --> 00:06:25.729
Being in a tab switcher
the natural way actually

00:06:25.729 --> 00:06:27.770
has real power, and I'm
very excited about what's

00:06:27.770 --> 00:06:31.580
happened in Lollipop
as a result.

00:06:31.580 --> 00:06:33.980
And I think we need
faster and better access

00:06:33.980 --> 00:06:35.770
to powerful capabilities.

00:06:35.770 --> 00:06:38.070
There is a whole series
of applications today

00:06:38.070 --> 00:06:40.360
that make a ton of
sense on the web

00:06:40.360 --> 00:06:43.621
and really not anywhere
else for lots of reasons.

00:06:43.621 --> 00:06:45.370
But there's a whole
series of applications

00:06:45.370 --> 00:06:47.160
that you can't build.

00:06:47.160 --> 00:06:49.970
The application performance
work that you're seeing out

00:06:49.970 --> 00:06:51.590
of the Silk team
and the work that's

00:06:51.590 --> 00:06:54.430
happening with asm.js
and the ability

00:06:54.430 --> 00:06:56.960
to accelerate regular
plain old websites

00:06:56.960 --> 00:07:01.120
and make them work very
quickly is massive,

00:07:01.120 --> 00:07:04.000
but it doesn't necessarily
open up access to new hardware,

00:07:04.000 --> 00:07:06.480
and sensors, and
capabilities in a way

00:07:06.480 --> 00:07:08.400
that I think we all
kind of want to see.

00:07:08.400 --> 00:07:10.090
We'd like to be able
to keep the pace.

00:07:10.090 --> 00:07:12.830
We want portability, but
we want to keep the pace.

00:07:12.830 --> 00:07:16.109
And that's a place where
I'm hopeful that some

00:07:16.109 --> 00:07:17.900
of the things we're
going to show you today

00:07:17.900 --> 00:07:20.410
are a good down payment.

00:07:20.410 --> 00:07:23.740
So what would it be like
to actually have a web app?

00:07:23.740 --> 00:07:26.130
An application that feels
like an application,

00:07:26.130 --> 00:07:29.290
but comes from the web, and
can still be on the web?

00:07:29.290 --> 00:07:31.030
It's a little bit
like a black swan.

00:07:31.030 --> 00:07:33.020
If you haven't
seen it before, you

00:07:33.020 --> 00:07:35.880
might have not theorized
that it could exist.

00:07:35.880 --> 00:07:39.230
And I'd like to submit that most
of us haven't seen it before.

00:07:39.230 --> 00:07:44.010
Most of us have dealt with
PhoneGap, or Windows 8,

00:07:44.010 --> 00:07:47.890
or Chrome apps that have
tried to give us applications

00:07:47.890 --> 00:07:49.830
in our native
application ecosystem

00:07:49.830 --> 00:07:52.100
that are built with
web technology.

00:07:52.100 --> 00:07:53.850
And I think I can speak
for everyone who's

00:07:53.850 --> 00:07:55.790
a web developer
here today, and say

00:07:55.790 --> 00:07:57.820
that HTML, and JavaScript,
and CSS are not

00:07:57.820 --> 00:08:00.010
the best part of your day.

00:08:00.010 --> 00:08:01.880
And so someone coming
to you and saying,

00:08:01.880 --> 00:08:05.620
hey, I built a new system that
will let you build applications

00:08:05.620 --> 00:08:08.939
with HTML, and
JavaScript, and CSS is not

00:08:08.939 --> 00:08:10.480
perhaps the most
exciting proposition

00:08:10.480 --> 00:08:12.130
that anyone has given you.

00:08:12.130 --> 00:08:14.490
If, however, they
said to you, hey,

00:08:14.490 --> 00:08:17.520
I made it possible for
this indexable, linkable,

00:08:17.520 --> 00:08:20.150
searchable, easily
shareable, friction

00:08:20.150 --> 00:08:22.745
free application platform
that we've deliver to you

00:08:22.745 --> 00:08:24.710
to work really well.

00:08:24.710 --> 00:08:27.327
And as a first class
citizen, when you want it to,

00:08:27.327 --> 00:08:28.410
I think that's compelling.

00:08:28.410 --> 00:08:30.010
I think that's a better story.

00:08:30.010 --> 00:08:32.870
And yes, HTML, and
Javascript, and CSS

00:08:32.870 --> 00:08:35.534
are key enablers of that story,
but they aren't the story.

00:08:35.534 --> 00:08:36.909
So we need to get
back to a place

00:08:36.909 --> 00:08:39.059
where we can build
something once.

00:08:39.059 --> 00:08:41.059
Build it and deploy
it to the web

00:08:41.059 --> 00:08:44.130
without awkward
packaging steps, without

00:08:44.130 --> 00:08:47.550
intermediate gatekeepers
that add friction

00:08:47.550 --> 00:08:49.160
to the process of
sharing something.

00:08:49.160 --> 00:08:52.020
And get to a place where
an app-- a real app--

00:08:52.020 --> 00:08:53.845
is also just a real website.

00:08:53.845 --> 00:08:55.470
We need to see these
things in the wild

00:08:55.470 --> 00:08:57.150
before I think
people collectively

00:08:57.150 --> 00:08:59.030
come to understand what
they're going to be.

00:08:59.030 --> 00:09:02.467
So what would a good experience
for this be like today?

00:09:02.467 --> 00:09:05.050
Let's just see that you took the
set of things that the web is

00:09:05.050 --> 00:09:06.830
currently good at
and the set of things

00:09:06.830 --> 00:09:08.820
that apps aren't
particularly great at,

00:09:08.820 --> 00:09:11.960
and you looked hard at
them and said, well,

00:09:11.960 --> 00:09:14.510
what part of my life
could be made better?

00:09:14.510 --> 00:09:17.070
I was thinking
about this question,

00:09:17.070 --> 00:09:20.740
and it occurred to me that
it just happened to me.

00:09:20.740 --> 00:09:23.060
I was in New York for
the Velocity Conference

00:09:23.060 --> 00:09:25.900
a couple months ago, and
it's a great conference.

00:09:25.900 --> 00:09:28.100
I got to talk about
performance, and ServiceWorkers,

00:09:28.100 --> 00:09:30.630
and all sorts of
my favorite things.

00:09:30.630 --> 00:09:32.797
But after the
conference the next day,

00:09:32.797 --> 00:09:34.630
I had a little bit of
time before my flight,

00:09:34.630 --> 00:09:36.570
so I stopped in to the
Google New York office

00:09:36.570 --> 00:09:38.194
to hangout with some
people who I don't

00:09:38.194 --> 00:09:40.410
get to see very
frequently and who's

00:09:40.410 --> 00:09:41.810
project I'm interested in.

00:09:41.810 --> 00:09:45.822
And so we got lunch, and we got
to talking, and I looked down,

00:09:45.822 --> 00:09:47.030
and I was late for my flight.

00:09:49.830 --> 00:09:50.670
I did that.

00:09:50.670 --> 00:09:51.794
Nobody else did that to me.

00:09:51.794 --> 00:09:53.200
I did that to me.

00:09:53.200 --> 00:09:55.834
But I needed to get to
JFK, and public transit

00:09:55.834 --> 00:09:57.500
was going to be like
an hour and change.

00:09:57.500 --> 00:10:00.620
And if I took a cab and
there wasn't any traffic,

00:10:00.620 --> 00:10:03.322
it might have been 45 minutes,
and I could just make it.

00:10:03.322 --> 00:10:04.280
And then this happened.

00:10:07.090 --> 00:10:12.980
And this happened not just once
inside of downtown and midtown.

00:10:12.980 --> 00:10:16.150
This happened basically all
the way out to the airport.

00:10:16.150 --> 00:10:19.650
But luckily, I was stuck in
one of New York's new taxis,

00:10:19.650 --> 00:10:24.650
which, despite having looked
like an elongated in the back

00:10:24.650 --> 00:10:28.080
and maintaining the wonderful
yellow color of New York

00:10:28.080 --> 00:10:29.950
taxis, which makes
it easy to spot,

00:10:29.950 --> 00:10:32.320
has kept the quaint
feature of New York taxis

00:10:32.320 --> 00:10:36.027
wherein your knees are
introduced to your face

00:10:36.027 --> 00:10:38.110
significantly before you
even get on the airplane.

00:10:38.110 --> 00:10:41.440
I just think of it like a warm
up for getting on the flight.

00:10:41.440 --> 00:10:44.160
It's nice to see that
some things don't change.

00:10:44.160 --> 00:10:46.540
So I wasn't going to make
this flight basically.

00:10:46.540 --> 00:10:50.800
And had I known that
I was in real trouble,

00:10:50.800 --> 00:10:53.850
I could have downloaded an
airline application that

00:10:53.850 --> 00:10:57.430
might have notified me that my
flight, as I found out later,

00:10:57.430 --> 00:10:58.685
was delayed.

00:10:58.685 --> 00:11:00.310
That would have been
great information.

00:11:00.310 --> 00:11:04.110
And in fact, I did find that
out at some point in my hour

00:11:04.110 --> 00:11:07.490
and a half trip to the
airport in the back of a cab

00:11:07.490 --> 00:11:10.600
wherein I was studying
the pattern of the jeans

00:11:10.600 --> 00:11:13.050
that I was looking at.

00:11:13.050 --> 00:11:17.395
And not having had this app and
not having it notify me made

00:11:17.395 --> 00:11:18.660
me really stressed out.

00:11:18.660 --> 00:11:20.330
So I was calling my
wife, and we were

00:11:20.330 --> 00:11:22.670
trying to figure out, like
oh, can I get another flight?

00:11:22.670 --> 00:11:24.832
It just wasn't good.

00:11:24.832 --> 00:11:26.790
So when I found out that
my flight was delayed,

00:11:26.790 --> 00:11:27.820
it was a breath of fresh air.

00:11:27.820 --> 00:11:29.520
It was like one of
the best things that

00:11:29.520 --> 00:11:32.380
had happened to me in a long
time because I got to go home.

00:11:32.380 --> 00:11:34.652
Now I had used the
airline's website,

00:11:34.652 --> 00:11:36.860
and the airline's website
is actually incredibly full

00:11:36.860 --> 00:11:37.510
featured.

00:11:37.510 --> 00:11:40.020
The airline's website I
already have a login to.

00:11:40.020 --> 00:11:41.930
Chrome has synchronized
my passwords to that,

00:11:41.930 --> 00:11:42.846
so that's pretty good.

00:11:42.846 --> 00:11:45.590
So anywhere that I
login to their website,

00:11:45.590 --> 00:11:48.179
I've got access to all of
my history, all of the stuff

00:11:48.179 --> 00:11:49.220
that I've done with them.

00:11:49.220 --> 00:11:52.530
But I use this website
relatively infrequently.

00:11:52.530 --> 00:11:54.310
I use it whenever
I want to travel--

00:11:54.310 --> 00:11:56.660
and hopefully that's
not that often--

00:11:56.660 --> 00:11:58.490
or when I'm looking for flights.

00:11:58.490 --> 00:12:00.310
But it already
knows all the state.

00:12:00.310 --> 00:12:03.770
So it's a little bit punitive
to need to go to an application

00:12:03.770 --> 00:12:05.430
when the website
could just do it.

00:12:05.430 --> 00:12:09.020
Now I could've used
their mobile website.

00:12:09.020 --> 00:12:11.380
And as you know,
mobile airline websites

00:12:11.380 --> 00:12:13.010
are mostly just practical jokes.

00:12:16.260 --> 00:12:19.320
They're designed to give
you the feature set that

00:12:19.320 --> 00:12:21.787
looks tantalizingly close
to being what you want,

00:12:21.787 --> 00:12:23.870
but in a different URL,
so none of the other stuff

00:12:23.870 --> 00:12:25.270
actually works.

00:12:25.270 --> 00:12:27.190
So it got me thinking,
what would it

00:12:27.190 --> 00:12:30.520
be like to actually have
an airline website that

00:12:30.520 --> 00:12:33.000
did just sort of work?

00:12:33.000 --> 00:12:40.050
So if we can show-- yeah.

00:12:40.050 --> 00:12:41.150
I think we're good.

00:12:41.150 --> 00:12:42.412
Great.

00:12:42.412 --> 00:12:46.260
Do we have video
from the-- bingo.

00:12:46.260 --> 00:12:47.160
Great.

00:12:47.160 --> 00:12:48.660
So what would it
be like to actually

00:12:48.660 --> 00:12:54.070
have sort of a modern
website for a modern airline?

00:12:54.070 --> 00:12:56.230
So this is Polymer
Air, and Polymer Air

00:12:56.230 --> 00:12:59.324
is built with a beautiful
Polymer components.

00:12:59.324 --> 00:13:00.990
There actually aren't
that many of them.

00:13:00.990 --> 00:13:02.740
This was relatively
straightforward to put

00:13:02.740 --> 00:13:04.030
together.

00:13:04.030 --> 00:13:05.630
And I can do all
the stuff that you'd

00:13:05.630 --> 00:13:10.770
expect to do on an airline, and
this is the exact same website

00:13:10.770 --> 00:13:11.740
as the desktop website.

00:13:11.740 --> 00:13:12.830
It scales up and down.

00:13:12.830 --> 00:13:15.710
It uses responsive design using
the Polymer responsive design

00:13:15.710 --> 00:13:16.320
components.

00:13:16.320 --> 00:13:18.970
That's just sort of baked in.

00:13:18.970 --> 00:13:21.560
This is a great system.

00:13:21.560 --> 00:13:23.050
So I can come in here.

00:13:23.050 --> 00:13:28.470
And imagine when I
check in-- let's see.

00:13:28.470 --> 00:13:31.150
One, two, three, four.

00:13:31.150 --> 00:13:37.780
I was going to check in, and
my last name is Russell still.

00:13:37.780 --> 00:13:38.300
Yes.

00:13:38.300 --> 00:13:40.620
I can spell my name mostly.

00:13:40.620 --> 00:13:45.120
OK, so let's say I'm going
from San Francisco to London,

00:13:45.120 --> 00:13:50.570
and I'd like to know when
I check in about updates

00:13:50.570 --> 00:13:52.990
to my flight.

00:13:52.990 --> 00:13:54.540
No, I really would
like to know when

00:13:54.540 --> 00:13:57.310
I check if there are
updates to my flight.

00:13:57.310 --> 00:13:59.630
By the way, you're looking
at a very, very fresh build.

00:14:02.980 --> 00:14:07.250
This is the
inadvisable live demo.

00:14:07.250 --> 00:14:11.040
Oh, sad panda.

00:14:11.040 --> 00:14:14.040
We'll come back to
this in just a moment.

00:14:14.040 --> 00:14:22.476
So the mobile
website for-- really?

00:14:22.476 --> 00:14:26.190
[LAUGHTER]

00:14:26.190 --> 00:14:28.500
This wasn't meant
to be nail biting.

00:14:33.240 --> 00:14:35.006
Yes, the inadvisable demo.

00:14:35.006 --> 00:14:37.130
So let me show you some
other stuff that does work.

00:14:37.130 --> 00:14:41.460
Can we go back to the-- great.

00:14:41.460 --> 00:14:46.930
So in today's
Chrome Dev channel,

00:14:46.930 --> 00:14:51.350
we can build web apps like Jake,
our beautiful and wonderful

00:14:51.350 --> 00:14:56.820
moderator's train to thrill
demo that work offline.

00:14:56.820 --> 00:14:59.270
So this is a web app
that Jake has built,

00:14:59.270 --> 00:15:01.660
and I'll show you
more about it later.

00:15:01.660 --> 00:15:07.410
But let's say that we're
somewhere in San Francisco

00:15:07.410 --> 00:15:12.090
where Wi-Fi and network
connections are--

00:15:12.090 --> 00:15:13.840
at the home of
Silicon Valley where

00:15:13.840 --> 00:15:17.360
getting Wi-Fi is a pain in
the butt-- are just like that.

00:15:17.360 --> 00:15:18.620
This site still works, right?

00:15:18.620 --> 00:15:22.580
In fact, I can go, and I'm
going to swipe it away.

00:15:22.580 --> 00:15:23.160
Kill that.

00:15:23.160 --> 00:15:24.260
Kill that.

00:15:24.260 --> 00:15:28.130
And we'll come
back to Chrome Dev.

00:15:28.130 --> 00:15:30.100
And this site is still working.

00:15:30.100 --> 00:15:31.290
I'm in airline mode.

00:15:31.290 --> 00:15:33.192
This site absolutely works.

00:15:33.192 --> 00:15:35.150
And so I can get back to
the status that I had.

00:15:35.150 --> 00:15:36.550
So let's say I go back online.

00:15:40.440 --> 00:15:43.810
And like any good
application, it's

00:15:43.810 --> 00:15:46.510
telling me what the
status of the network is.

00:15:46.510 --> 00:15:48.539
It doesn't actually know.

00:15:48.539 --> 00:15:50.080
That's the thing
about being offline.

00:15:50.080 --> 00:15:52.230
You don't really know if
you're offline or not.

00:15:52.230 --> 00:15:54.150
It would be nice to
in a definitive way,

00:15:54.150 --> 00:15:55.649
but the only way
you can really know

00:15:55.649 --> 00:15:58.730
is by checking in your
application to know if you are.

00:15:58.730 --> 00:16:06.280
So when I refresh stuff now,
I'll see the updated content,

00:16:06.280 --> 00:16:08.392
but notice that
this thing didn't

00:16:08.392 --> 00:16:10.350
stop showing me anything,
and it didn't give me

00:16:10.350 --> 00:16:11.590
a blank white loading page.

00:16:11.590 --> 00:16:13.620
It showed me
exactly what it knew

00:16:13.620 --> 00:16:15.870
about the state of
the world, and that

00:16:15.870 --> 00:16:23.620
caused us to be able to show
the user, say, for instance,

00:16:23.620 --> 00:16:26.700
they're boarding pass if
we were an airline-- if we

00:16:26.700 --> 00:16:29.860
had an airline
website that worked.

00:16:29.860 --> 00:16:31.560
Just going to go with that.

00:16:35.200 --> 00:16:39.320
So in the Poly Air system,
what we really want

00:16:39.320 --> 00:16:41.730
is the website to be
able to come back to us

00:16:41.730 --> 00:16:44.490
and tell us that our
flight was delayed.

00:16:44.490 --> 00:16:50.890
It would be wonderful if when
we register for a push message

00:16:50.890 --> 00:16:55.510
and at some point later our
flight happens to be delayed,

00:16:55.510 --> 00:16:59.520
it was the website that
told us, because I'm

00:16:59.520 --> 00:17:01.730
going to be sitting
here with this website.

00:17:01.730 --> 00:17:05.720
It would be best if, in fact,
the website decided to tell us

00:17:05.720 --> 00:17:09.140
while we were doing
something else.

00:17:09.140 --> 00:17:11.270
I think that would
be pretty swell.

00:17:11.270 --> 00:17:14.109
And in fact, what we're
looking at here today

00:17:14.109 --> 00:17:17.520
is a build of Chrome that
has push notifications

00:17:17.520 --> 00:17:19.210
and works offline.

00:17:19.210 --> 00:17:21.980
And it's told me-- and
I probably was actually

00:17:21.980 --> 00:17:25.420
going to notice that that
happened because it showed up

00:17:25.420 --> 00:17:26.450
on my watch.

00:17:26.450 --> 00:17:27.432
[LAUGHTER]

00:17:27.432 --> 00:17:32.350
[APPLAUSE]

00:17:32.350 --> 00:17:35.960
And in fact, if
I go-- let's see.

00:17:35.960 --> 00:17:38.440
If I come back to
that-- oh come on.

00:17:38.440 --> 00:17:39.410
Oh come on, Android.

00:17:39.410 --> 00:17:41.870
Oh, really?

00:17:41.870 --> 00:17:44.330
If I come back to that,
and I swipe that away, you

00:17:44.330 --> 00:17:47.560
we'll see that the status
is swiped away here too.

00:17:47.560 --> 00:17:49.203
This is a real
native notification.

00:17:53.099 --> 00:17:55.140
All right, back to the
safe waters of Chrome Dev.

00:17:57.730 --> 00:18:00.339
So that's a real thing.

00:18:00.339 --> 00:18:02.380
That's a real thing that
I think most of us want.

00:18:02.380 --> 00:18:04.588
We want the ability to
reengage users where they are.

00:18:04.588 --> 00:18:08.350
And in fact, we also
want the ability to you

00:18:08.350 --> 00:18:12.580
take applications like this and
sort of save them all the way

00:18:12.580 --> 00:18:13.790
to the home screen.

00:18:13.790 --> 00:18:15.870
Darren alluded to
earlier what we're

00:18:15.870 --> 00:18:17.470
going to be doing
to make it easier

00:18:17.470 --> 00:18:19.136
for you to add stuff
to the home screen.

00:18:19.136 --> 00:18:21.230
But when you do, it
sure would be great

00:18:21.230 --> 00:18:23.290
if these things showed
up at the top level,

00:18:23.290 --> 00:18:26.190
and when you tapped on them, if
they came back as full screen

00:18:26.190 --> 00:18:28.600
applications that didn't
require a URL bar when

00:18:28.600 --> 00:18:30.250
you didn't necessarily need one.

00:18:30.250 --> 00:18:31.974
And when they show
up in your task bar,

00:18:31.974 --> 00:18:33.390
they should show
up as themselves.

00:18:33.390 --> 00:18:36.254
They shouldn't show up
as just another web tab.

00:18:36.254 --> 00:18:38.170
This is all stuff that
we're delivering today,

00:18:38.170 --> 00:18:40.600
and I'm going to show
you how this works.

00:18:40.600 --> 00:18:46.120
But this works, and you
can do it too, so hurray.

00:18:46.120 --> 00:18:50.700
Can we go back to
the Chromebook?

00:18:50.700 --> 00:18:51.680
Do I need to do that?

00:19:06.850 --> 00:19:09.994
By the way, I've done love the
live demo thing exactly the way

00:19:09.994 --> 00:19:12.410
that everybody who knows what
they're doing would tell you

00:19:12.410 --> 00:19:16.120
not to do it, which is not just
have a dependency on a network

00:19:16.120 --> 00:19:18.800
and not just to have one
device that you're demoing,

00:19:18.800 --> 00:19:21.360
but to have multiple devices
and then have those devices not

00:19:21.360 --> 00:19:23.790
be the ones that are plugged
into the video screen.

00:19:23.790 --> 00:19:27.910
So if you find yourself
doing a live demo,

00:19:27.910 --> 00:19:29.600
I suggest that you
take tips from me

00:19:29.600 --> 00:19:31.558
and not do it they
way I'm doing it.

00:19:38.900 --> 00:19:39.910
Got lost, I see.

00:19:46.120 --> 00:19:53.090
Yeah, so I think the most
important part of that demo

00:19:53.090 --> 00:19:55.239
isn't that we built a
website that works offline.

00:19:55.239 --> 00:19:57.780
That's something that we've been
able to do for a little bit.

00:19:57.780 --> 00:19:59.340
The most important
part of that demo

00:19:59.340 --> 00:20:02.690
is that we built a website that
works offline occasionally.

00:20:02.690 --> 00:20:05.560
We built a website that I didn't
have to interact with a lot,

00:20:05.560 --> 00:20:06.892
or I didn't have to repackage.

00:20:06.892 --> 00:20:08.600
I built it in the
natural way, and then I

00:20:08.600 --> 00:20:11.130
was able to add the
offline capability to it

00:20:11.130 --> 00:20:12.680
at some point later.

00:20:12.680 --> 00:20:15.350
As I'll show you
in just a moment,

00:20:15.350 --> 00:20:19.760
ServiceWorkers enable you
to build web applications

00:20:19.760 --> 00:20:28.970
that-- ServiceWorkers enable
you to build web applications

00:20:28.970 --> 00:20:30.870
that you can upgrade
with offline capability

00:20:30.870 --> 00:20:33.980
if you build them the right way.

00:20:33.980 --> 00:20:37.480
So the most important part
of building your application

00:20:37.480 --> 00:20:41.135
the right way is-- do we
have the Chromebook back?

00:20:45.790 --> 00:20:48.840
With the slides?

00:20:48.840 --> 00:20:49.340
Yeah, great.

00:20:49.340 --> 00:20:50.030
Here we go.

00:20:50.030 --> 00:20:52.500
So the most important part
of building your application

00:20:52.500 --> 00:20:54.840
the right way-- I apologize
for the jank here--

00:20:54.840 --> 00:20:56.850
is that you build a
real web application.

00:20:56.850 --> 00:20:58.030
So let's see.

00:20:58.030 --> 00:21:00.240
I want to build a
new tab, and I'm

00:21:00.240 --> 00:21:03.550
going to
polyair.appspot.com, which

00:21:03.550 --> 00:21:06.390
is where this demo is hosted,
and you can try it out today.

00:21:06.390 --> 00:21:10.044
And if you're using
Chrome Dev today,

00:21:10.044 --> 00:21:12.210
all of the offline capabilities
should work for you,

00:21:12.210 --> 00:21:13.876
and they will work
for you in beta soon.

00:21:13.876 --> 00:21:15.530
So this is a regular website.

00:21:15.530 --> 00:21:19.560
This is not something that
I built just for mobile.

00:21:19.560 --> 00:21:21.880
This is not a
separate code base.

00:21:21.880 --> 00:21:23.847
It deployed like a
website, and in fact, I

00:21:23.847 --> 00:21:25.430
didn't have to package
up my resources

00:21:25.430 --> 00:21:27.760
in a new and unique
and potentially very

00:21:27.760 --> 00:21:31.570
special and not the
best ways kind of way.

00:21:31.570 --> 00:21:35.620
So this is something
that I use infrequently,

00:21:35.620 --> 00:21:37.190
but I want to get
back to it easily.

00:21:37.190 --> 00:21:40.262
And on a desktop, that's easy to
do because I've got a URL bar,

00:21:40.262 --> 00:21:41.720
and I've got a
search system there,

00:21:41.720 --> 00:21:44.710
and it's really easy to use,
but typing queries into a phone

00:21:44.710 --> 00:21:46.360
is not the best way to do it.

00:21:46.360 --> 00:21:48.130
But I want to be
top level here too.

00:21:48.130 --> 00:21:49.835
So I'm just going
to close that up,

00:21:49.835 --> 00:21:54.200
and I'm going to come back
to this application which

00:21:54.200 --> 00:21:55.380
I've saved to my desktop.

00:21:55.380 --> 00:21:58.640
We're going to
start asking users

00:21:58.640 --> 00:22:00.686
whether or not
they want you to be

00:22:00.686 --> 00:22:02.310
able to save this
thing to the desktop,

00:22:02.310 --> 00:22:06.602
but today you're able
to do this manually.

00:22:06.602 --> 00:22:08.060
But in the very
near future, users,

00:22:08.060 --> 00:22:09.934
if you build your
applications the right way,

00:22:09.934 --> 00:22:12.180
will get asked by
us whether or not

00:22:12.180 --> 00:22:14.630
sites that they interact with
frequently that are built

00:22:14.630 --> 00:22:18.859
using ServiceWorkers and
that have the right metadata

00:22:18.859 --> 00:22:20.400
want to be treated
like applications.

00:22:20.400 --> 00:22:21.950
And this thing is
a real application.

00:22:21.950 --> 00:22:23.690
We want it to be a
real application.

00:22:23.690 --> 00:22:25.800
And what you'll notice
here is that the top level

00:22:25.800 --> 00:22:27.620
UI is different.

00:22:27.620 --> 00:22:30.330
There's no URL bar here, but
I can see what the URL is.

00:22:30.330 --> 00:22:32.530
And in fact, the
Chrome Dev summit site

00:22:32.530 --> 00:22:34.070
is built the same way.

00:22:34.070 --> 00:22:36.010
This is also a site that
has a ServiceWorker,

00:22:36.010 --> 00:22:38.860
will work offline
for you, and is

00:22:38.860 --> 00:22:40.996
built to be a standalone
application, which

00:22:40.996 --> 00:22:43.370
means that I can Alt-Tab
between them the way I've always

00:22:43.370 --> 00:22:45.926
wanted to between my web apps.

00:22:45.926 --> 00:22:47.300
It's not lost in
the sea of tabs.

00:22:47.300 --> 00:22:49.230
It's its own standalone thing.

00:22:49.230 --> 00:22:51.540
This is the sort of
power that, I think,

00:22:51.540 --> 00:22:53.060
you really want
when you're trying

00:22:53.060 --> 00:22:56.530
to become that black swan, a
website that actually finally

00:22:56.530 --> 00:22:57.800
is an app.

00:22:57.800 --> 00:22:59.260
What does it mean
to be top level?

00:22:59.260 --> 00:23:02.010
Well, not only are
you in the bar there.

00:23:02.010 --> 00:23:04.270
You're over here.

00:23:04.270 --> 00:23:05.704
You're in the App Launcher.

00:23:05.704 --> 00:23:08.120
You're where users are looking
to get back to their stuff.

00:23:08.120 --> 00:23:09.960
You're part of the easy
recall mechanisms that

00:23:09.960 --> 00:23:11.380
are built into
operating systems.

00:23:11.380 --> 00:23:12.790
You're part of the tab switcher.

00:23:12.790 --> 00:23:15.030
Your icons are the right
thing in the right place

00:23:15.030 --> 00:23:16.300
all the time.

00:23:16.300 --> 00:23:17.560
Great.

00:23:17.560 --> 00:23:19.700
So let's talk about
how we did that.

00:23:19.700 --> 00:23:23.188
Can we go back to
the other slides?

00:23:25.870 --> 00:23:26.370
Yeah.

00:23:35.995 --> 00:23:36.495
Yes.

00:23:42.300 --> 00:23:42.800
Great.

00:23:42.800 --> 00:23:43.790
Thank you.

00:23:48.250 --> 00:23:50.250
Meticulously rehearsed
and flawlessly performed.

00:23:59.640 --> 00:24:00.860
So that was just the web.

00:24:00.860 --> 00:24:05.250
I think the key thing to take
away from what we've just seen

00:24:05.250 --> 00:24:08.350
is that what you were looking
at was a website, right?

00:24:08.350 --> 00:24:09.810
You deployed it the same way.

00:24:09.810 --> 00:24:10.760
It has URLs.

00:24:10.760 --> 00:24:13.631
All of the states inside
of that site are URLs.

00:24:13.631 --> 00:24:14.880
You didn't have to package it.

00:24:14.880 --> 00:24:17.296
You didn't have to build a
separate application container.

00:24:17.296 --> 00:24:19.880
You didn't put it in a store,
not even the Chrome Web Store.

00:24:19.880 --> 00:24:22.950
You built a website, and then
it turned into an application

00:24:22.950 --> 00:24:25.280
because the user chose to
turn it into an application.

00:24:25.280 --> 00:24:27.405
It's a thing that they
thought was valuable to them

00:24:27.405 --> 00:24:29.800
and wanted to keep, not
a thing that you thought

00:24:29.800 --> 00:24:32.760
might be valuable to
them and wanted to push.

00:24:32.760 --> 00:24:36.000
This is the key to doing
engagement well, I think.

00:24:36.000 --> 00:24:39.186
But let's figure out how we
actually pulled that off.

00:24:39.186 --> 00:24:40.560
There's three
components to this.

00:24:40.560 --> 00:24:41.800
The first is a ServiceWorker.

00:24:41.800 --> 00:24:43.450
You're going to need
ServiceWorker for everything

00:24:43.450 --> 00:24:45.620
I show you and pretty much
all the new capabilities

00:24:45.620 --> 00:24:47.869
that we're going to add to
the platform in the future.

00:24:47.869 --> 00:24:49.920
So you're going to need that.

00:24:49.920 --> 00:24:52.450
Manifests, which eventually
will point at ServiceWorkers.

00:24:52.450 --> 00:24:55.557
And the push notification
API was a part of this.

00:24:55.557 --> 00:24:57.890
Push notification API isn't
shipping when ServiceWorkers

00:24:57.890 --> 00:25:00.760
initially launch later
this year in Chrome 40,

00:25:00.760 --> 00:25:01.960
but it will be coming soon.

00:25:01.960 --> 00:25:03.910
And some of the
details of the code

00:25:03.910 --> 00:25:06.250
I'm going to show you work
today and work in Poly Air

00:25:06.250 --> 00:25:10.020
repository, but those will be
changing, and so stay tuned

00:25:10.020 --> 00:25:11.900
for those updates.

00:25:11.900 --> 00:25:14.750
But let's talk about offline.

00:25:14.750 --> 00:25:18.240
Offline happens, and when
offline happens and you

00:25:18.240 --> 00:25:21.770
know that it's offline,
you're kind of bummed out,

00:25:21.770 --> 00:25:23.580
but it's nice to know.

00:25:23.580 --> 00:25:26.080
The worst part is
when you don't know,

00:25:26.080 --> 00:25:28.970
because the very worst kind
of offline isn't offline.

00:25:28.970 --> 00:25:31.280
It's sort of kind of online.

00:25:31.280 --> 00:25:34.830
So I lived in London
during the 2012 Olympics,

00:25:34.830 --> 00:25:38.320
and so as a wired
modern city, London

00:25:38.320 --> 00:25:40.340
decided that it was
going to put Wi-Fi

00:25:40.340 --> 00:25:42.980
in all of the tube stations.

00:25:42.980 --> 00:25:44.380
You heard that right?

00:25:44.380 --> 00:25:46.530
The stations.

00:25:46.530 --> 00:25:49.525
So what that means, of
course-- for those of you

00:25:49.525 --> 00:25:50.900
who are laughing
that you already

00:25:50.900 --> 00:25:53.690
got this-- is that you could
be in the station waiting

00:25:53.690 --> 00:25:57.410
for you're train, start loading
a web page or something else,

00:25:57.410 --> 00:26:00.430
step into the train, and
be moving two minutes later

00:26:00.430 --> 00:26:01.410
to the next station.

00:26:01.410 --> 00:26:02.794
Meanwhile, TCP has dropped out.

00:26:02.794 --> 00:26:03.960
It just doesn't know it yet.

00:26:03.960 --> 00:26:05.770
It's got a two minute window.

00:26:05.770 --> 00:26:08.190
So you're sitting there
watching maybe a white spinner

00:26:08.190 --> 00:26:10.170
or blank page trying
to load, and then you

00:26:10.170 --> 00:26:13.420
get to the next station,
where your phone is furiously

00:26:13.420 --> 00:26:15.970
trying to reconnect to
the same network, which

00:26:15.970 --> 00:26:17.877
was made available
in that station too.

00:26:17.877 --> 00:26:19.960
And maybe it's busy, or
maybe you don't get on it,

00:26:19.960 --> 00:26:22.440
or maybe you get on it, and
then you try to tap things.

00:26:22.440 --> 00:26:25.227
But London is a modern city.

00:26:25.227 --> 00:26:27.560
Those doors close quickly,
and you're on your way again.

00:26:27.560 --> 00:26:29.726
You can play this dance
most of the way to Heathrow,

00:26:29.726 --> 00:26:31.410
by the way, from central London.

00:26:31.410 --> 00:26:34.380
You can maybe try to load
the same news article

00:26:34.380 --> 00:26:36.570
with 700 kilobytes
of JavaScript at top,

00:26:36.570 --> 00:26:40.230
which are loaded off the network
and not out of the cache,

00:26:40.230 --> 00:26:43.490
is not my favorite dance.

00:26:43.490 --> 00:26:45.030
So enter the ServiceWorker.

00:26:45.030 --> 00:26:48.110
The ServiceWorker is a
programmable in browser proxy

00:26:48.110 --> 00:26:50.000
that lets you decide
what to do, not

00:26:50.000 --> 00:26:52.580
the first time you visit a web
page, but maybe the second,

00:26:52.580 --> 00:26:54.580
third, and fourth times
that a user visits a web

00:26:54.580 --> 00:26:57.700
page after you've decided
to install yourself.

00:26:57.700 --> 00:27:00.360
The ServiceWorker has
control over the cache,

00:27:00.360 --> 00:27:02.880
and it has the ability
to mediate pretty much

00:27:02.880 --> 00:27:05.150
all conversations
with the network.

00:27:05.150 --> 00:27:11.100
In the past, we've attempted
to solve the offline problem.

00:27:11.100 --> 00:27:12.764
And by solve the
offline problem,

00:27:12.764 --> 00:27:14.680
I mean we've been trying
for a very long time.

00:27:14.680 --> 00:27:17.950
Who remembers Google Gears?

00:27:17.950 --> 00:27:20.890
Wow, you scars are
as big as mine.

00:27:20.890 --> 00:27:30.140
All right, so Google Gears
gave you an in browser ability

00:27:30.140 --> 00:27:32.130
to cache files.

00:27:32.130 --> 00:27:35.370
It was called local server,
but it wasn't a server,

00:27:35.370 --> 00:27:36.507
and it wasn't programmable.

00:27:36.507 --> 00:27:38.590
It gave you a list of files
that you could put in,

00:27:38.590 --> 00:27:42.280
and it would dutifully
hold on to them for you.

00:27:42.280 --> 00:27:44.610
We also implemented
App Cache, which

00:27:44.610 --> 00:27:47.702
allowed you to give us a list of
files which we would download,

00:27:47.702 --> 00:27:49.410
and then dutifully
give them back to you.

00:27:49.410 --> 00:27:51.620
But we also didn't
let you program it.

00:27:51.620 --> 00:27:54.170
And so having not solved the
offline problem twice for you

00:27:54.170 --> 00:27:57.260
now, we've decided to
do something cheeky

00:27:57.260 --> 00:27:58.752
and not solve it.

00:27:58.752 --> 00:28:00.460
Instead, we're going
to let you solve it.

00:28:00.460 --> 00:28:02.290
We're giving you
actually control over

00:28:02.290 --> 00:28:04.160
how this whole process works.

00:28:04.160 --> 00:28:05.547
So how you get started?

00:28:05.547 --> 00:28:06.880
How do you get out of the gates?

00:28:06.880 --> 00:28:10.210
So this is the registration
code for a ServiceWorker.

00:28:10.210 --> 00:28:11.910
A couple of things
to note about it.

00:28:11.910 --> 00:28:14.380
First, the script that
you're registering here

00:28:14.380 --> 00:28:17.260
has to be on the same
origin, and that origin

00:28:17.260 --> 00:28:19.690
has to be an SSL origin.

00:28:19.690 --> 00:28:22.200
ServiceWorkers don't work
over insecure connections

00:28:22.200 --> 00:28:25.330
for lots of boring reasons,
but the exciting reasons

00:28:25.330 --> 00:28:26.620
are that it's 2014.

00:28:26.620 --> 00:28:27.520
Holy cow.

00:28:27.520 --> 00:28:28.065
Get some SSL.

00:28:32.320 --> 00:28:35.270
What you'll see here is
that it returns a promise,

00:28:35.270 --> 00:28:37.740
and that promise means
that the installation

00:28:37.740 --> 00:28:38.957
process is asynchronous.

00:28:38.957 --> 00:28:40.790
This code is going to
run in the background.

00:28:40.790 --> 00:28:42.460
The ServiceWorker
process actually

00:28:42.460 --> 00:28:45.329
goes through a series of phases
once the browser encounters

00:28:45.329 --> 00:28:47.620
your request to register and
install the ServiceWorker.

00:28:47.620 --> 00:28:51.640
So the browser downloads
sw.js, and when it succeeds,

00:28:51.640 --> 00:28:53.390
it'll hand you back a
registration object,

00:28:53.390 --> 00:28:55.340
and you can find out
some things about it.

00:28:55.340 --> 00:28:58.710
The scope object there
tells you basically

00:28:58.710 --> 00:29:01.050
which path in the origin
your ServiceWorker

00:29:01.050 --> 00:29:03.370
is now registered for,
and at the root, that's

00:29:03.370 --> 00:29:08.010
going to be the root, but that's
more of an advanced Feature

00:29:08.010 --> 00:29:10.520
that you probably don't
need to worry about.

00:29:10.520 --> 00:29:12.390
Once you're inside
the ServiceWorker,

00:29:12.390 --> 00:29:15.180
your code is going to be
run from top to bottom.

00:29:15.180 --> 00:29:18.510
So the first phase
is the install phase.

00:29:18.510 --> 00:29:22.470
The install phase is an event
like any other DOM event

00:29:22.470 --> 00:29:24.900
that you might be
familiar with, and you

00:29:24.900 --> 00:29:29.210
can control the lifetime
of this event and say,

00:29:29.210 --> 00:29:31.590
I'm not actually ready, and
I'm not actually installed.

00:29:31.590 --> 00:29:34.290
Don't count me as being
installed until this promise

00:29:34.290 --> 00:29:34.870
resolves.

00:29:34.870 --> 00:29:37.426
So you pass a promise into
wait until, and then it goes.

00:29:37.426 --> 00:29:39.550
If you do anything here,
if you don't have an event

00:29:39.550 --> 00:29:41.050
handler for it,
you'll be considered

00:29:41.050 --> 00:29:44.140
to be installed straight
out of the gates.

00:29:44.140 --> 00:29:48.190
Note that you could also
add items to a cache.

00:29:48.190 --> 00:29:51.680
Now I said that we had tried
to solve this problem for you

00:29:51.680 --> 00:29:53.650
multiple times before by
giving you the ability

00:29:53.650 --> 00:29:55.440
to generate a very
long list of things

00:29:55.440 --> 00:29:56.910
and then put them in a cache.

00:29:56.910 --> 00:29:59.392
It turns out you
probably want to do that.

00:29:59.392 --> 00:30:00.850
It also turns out
that you probably

00:30:00.850 --> 00:30:03.337
don't want to have
just one cache.

00:30:03.337 --> 00:30:05.170
We learned this the
hard way multiple times,

00:30:05.170 --> 00:30:07.760
and we apologize
profusely for it.

00:30:07.760 --> 00:30:11.230
But we're giving you the ability
to add lots and lots of caches

00:30:11.230 --> 00:30:13.810
and control them and
version them independently,

00:30:13.810 --> 00:30:15.000
but you have to do that.

00:30:15.000 --> 00:30:15.980
And this is the sort
of code that you're

00:30:15.980 --> 00:30:17.210
going to be writing
to get that done.

00:30:17.210 --> 00:30:18.626
So you can add a
list of resources

00:30:18.626 --> 00:30:20.030
to a particular cache.

00:30:20.030 --> 00:30:23.990
But also notice that this API
is incredibly promise heavy.

00:30:23.990 --> 00:30:26.140
And if you aren't familiar
with promises, Jake,

00:30:26.140 --> 00:30:29.430
once again, has written a great
article about how to use them

00:30:29.430 --> 00:30:31.000
and what to expect.

00:30:31.000 --> 00:30:33.240
But we partially
designed the promise API

00:30:33.240 --> 00:30:35.360
in JavaScript and
in the web platform

00:30:35.360 --> 00:30:37.990
to support ServiceWorkers,
so should be no surprise

00:30:37.990 --> 00:30:41.130
that you're going to see
it used all over the place.

00:30:41.130 --> 00:30:43.990
It's also possible to import
third party libraries,

00:30:43.990 --> 00:30:45.590
your own libraries, obviously.

00:30:45.590 --> 00:30:48.477
And there is going to be
in the initial release

00:30:48.477 --> 00:30:50.060
of ServiceWorkers
in Chrome 40, you're

00:30:50.060 --> 00:30:52.480
going to want the ServiceWorker
cache polyfill that'll

00:30:52.480 --> 00:30:54.440
add a couple of extra
methods to the caches,

00:30:54.440 --> 00:30:57.220
but caches are available
natively in the first release

00:30:57.220 --> 00:30:59.730
of ServiceWorkers
later this year.

00:30:59.730 --> 00:31:03.230
But these scripts are
going to be cached along

00:31:03.230 --> 00:31:05.060
with the ServiceWorkers script.

00:31:05.060 --> 00:31:07.410
When you download
sw.js, the browser

00:31:07.410 --> 00:31:08.910
is going to go fetch
these resources

00:31:08.910 --> 00:31:10.370
and cache them together.

00:31:10.370 --> 00:31:14.000
They come down as a
package basically.

00:31:14.000 --> 00:31:16.180
And in fact, this is how
you can do collaboration

00:31:16.180 --> 00:31:17.030
with third party scripts.

00:31:17.030 --> 00:31:19.220
You can use import scripts,
which is an existing API

00:31:19.220 --> 00:31:20.960
inside of Web
Workers, and you can

00:31:20.960 --> 00:31:25.110
call out to third party CDNs
or third party resources

00:31:25.110 --> 00:31:27.840
and use those inside
of your service worker.

00:31:27.840 --> 00:31:30.480
This is a great
way to collaborate.

00:31:30.480 --> 00:31:33.340
And you have programmatic
control over requests.

00:31:33.340 --> 00:31:36.000
You can handle fetches,
and in fact, you

00:31:36.000 --> 00:31:37.850
could handle fetches
multiple times.

00:31:37.850 --> 00:31:44.490
So let's say you pull in maybe
a third party plus ServiceWorker

00:31:44.490 --> 00:31:46.990
snippet using import
scripts, and it

00:31:46.990 --> 00:31:49.590
wants to handle only
requests for plus.google.com.

00:31:49.590 --> 00:31:52.140
It can do that, but you can
also handle the main requests

00:31:52.140 --> 00:31:56.922
for your resources using
multiple event listeners.

00:31:56.922 --> 00:31:57.880
So this is pretty good.

00:31:57.880 --> 00:31:59.910
And you'll note the
return to respond with.

00:31:59.910 --> 00:32:02.870
It's often the case that you
don't know exactly what you're

00:32:02.870 --> 00:32:05.410
going to want to do in
response to a request that

00:32:05.410 --> 00:32:07.460
comes to your ServiceWorker.

00:32:07.460 --> 00:32:08.300
That's OK.

00:32:08.300 --> 00:32:09.800
You have some time
to do it, but you

00:32:09.800 --> 00:32:12.300
have to tell us
that you're going

00:32:12.300 --> 00:32:15.520
to have to take time to
go get that work done.

00:32:15.520 --> 00:32:17.270
The reason for this
is that ServiceWorkers

00:32:17.270 --> 00:32:20.250
can be killed at
any time basically.

00:32:20.250 --> 00:32:23.956
Whenever the ServiceWorker
script is is quiescent,

00:32:23.956 --> 00:32:25.330
whenever it's not
doing any work,

00:32:25.330 --> 00:32:28.340
we reserve the right
uniformly and unilaterally

00:32:28.340 --> 00:32:29.130
to shut it down.

00:32:29.130 --> 00:32:31.210
And in fact, we're going
to do that aggressively.

00:32:31.210 --> 00:32:33.550
We're doing this to
preserve users batteries

00:32:33.550 --> 00:32:37.410
and ensure that the memory
usage of service workers

00:32:37.410 --> 00:32:39.900
is low in the common case.

00:32:39.900 --> 00:32:42.142
But the side effect
here is that you

00:32:42.142 --> 00:32:43.600
need to not be
keeping global state

00:32:43.600 --> 00:32:44.808
inside of your ServiceWorker.

00:32:44.808 --> 00:32:46.350
If you are, it's
going to get killed,

00:32:46.350 --> 00:32:47.724
and you're going
to be surprised.

00:32:47.724 --> 00:32:49.180
The good news is
that the DevTools

00:32:49.180 --> 00:32:51.060
simulate this quite
accurately today.

00:32:51.060 --> 00:32:54.000
You can be happily going along
debugging a ServiceWorker,

00:32:54.000 --> 00:32:55.585
and it'll die out
from underneath you.

00:32:55.585 --> 00:32:57.160
Not the best
debugging experience,

00:32:57.160 --> 00:33:01.150
but at least it gives you
a sense for the lifetime.

00:33:01.150 --> 00:33:04.870
So this is a simple
pass through proxy.

00:33:04.870 --> 00:33:07.050
There's a new fetch API
inside of ServiceWorkers.

00:33:07.050 --> 00:33:08.970
It's the XHR that
you've always wanted.

00:33:08.970 --> 00:33:11.130
You're welcome.

00:33:11.130 --> 00:33:15.630
It returns promises, and it
takes a request as the key.

00:33:15.630 --> 00:33:17.930
You send in a request, and
it hands you back a response

00:33:17.930 --> 00:33:18.429
object.

00:33:18.429 --> 00:33:20.712
Also response and
request objects.

00:33:20.712 --> 00:33:22.170
Hey, wouldn't it
be great if we had

00:33:22.170 --> 00:33:24.003
those as opposed to
manually factoring those

00:33:24.003 --> 00:33:25.220
in on a per-library basis?

00:33:25.220 --> 00:33:27.010
We've added too.

00:33:27.010 --> 00:33:29.340
There are some batteries
included, but just enough

00:33:29.340 --> 00:33:30.760
to let you do your own thing.

00:33:30.760 --> 00:33:34.300
So this is the simplest read
through proxy you can imagine.

00:33:34.300 --> 00:33:37.930
You can do something like this
to, say, get real user metrics

00:33:37.930 --> 00:33:40.610
in terms of runtime performance.

00:33:40.610 --> 00:33:42.780
Obviously, the navigation
timing and resource timing

00:33:42.780 --> 00:33:44.280
APIs give you a
lot of that today,

00:33:44.280 --> 00:33:46.446
but if you want to do
something specific and custom,

00:33:46.446 --> 00:33:49.000
here's a great place to do it.

00:33:49.000 --> 00:33:51.690
It's also the case then you can
construct your own responses,

00:33:51.690 --> 00:33:53.870
as you see at the bottom here.

00:33:53.870 --> 00:33:57.760
We're looking at an event
handler at the bottom that

00:33:57.760 --> 00:34:00.040
creates a new response
object, passes

00:34:00.040 --> 00:34:03.950
in the content of that resource,
and sets status and headers,

00:34:03.950 --> 00:34:05.876
and then responds with
it programmatically.

00:34:05.876 --> 00:34:07.750
You can imagine doing
client side templating.

00:34:07.750 --> 00:34:12.554
You can imagine doing your
own parsing and processing

00:34:12.554 --> 00:34:14.429
of responses that come
back from the network.

00:34:14.429 --> 00:34:16.739
All this stuff is possible
with ServiceWorkers,

00:34:16.739 --> 00:34:19.020
and it's relatively
straightforward.

00:34:19.020 --> 00:34:22.041
I am incredibly excited to
see what you do with it.

00:34:22.041 --> 00:34:23.290
I'm also a little bit fearful.

00:34:23.290 --> 00:34:25.679
But incredibly excited.

00:34:25.679 --> 00:34:28.393
All right, so
remember that cache

00:34:28.393 --> 00:34:31.820
that we populated earlier?

00:34:31.820 --> 00:34:34.190
It's possible to get an
individual cache object out

00:34:34.190 --> 00:34:39.010
of the caches collection, but
you can also match globally

00:34:39.010 --> 00:34:41.320
against a single request,
and matching globally

00:34:41.320 --> 00:34:42.919
against a single
request allows you

00:34:42.919 --> 00:34:44.585
to take the first
thing that comes back.

00:34:44.585 --> 00:34:46.329
This is a nice, easy
to use way of saying

00:34:46.329 --> 00:34:48.620
if you have something in any
of the caches that matches

00:34:48.620 --> 00:34:50.252
this request, hand
it back to me.

00:34:50.252 --> 00:34:51.460
But again, it's asynchronous.

00:34:51.460 --> 00:34:54.420
The match operation
returns a promise,

00:34:54.420 --> 00:34:58.150
and when you get it back,
if it's in the cache,

00:34:58.150 --> 00:34:59.320
you'll get an object.

00:34:59.320 --> 00:35:02.040
And if it's not in the cache,
you'll get null or undefined.

00:35:02.040 --> 00:35:05.180
And that is to say
that, in promise speak,

00:35:05.180 --> 00:35:10.030
something not being
in storage isn't

00:35:10.030 --> 00:35:12.020
the same thing as
an actual exception.

00:35:12.020 --> 00:35:16.950
You'll need to handle
exceptions separately here.

00:35:16.950 --> 00:35:20.800
So let's talk about what
happens if I populated a cache,

00:35:20.800 --> 00:35:23.140
but my application comes
through and it needs something

00:35:23.140 --> 00:35:24.348
that it doesn't already have.

00:35:24.348 --> 00:35:26.040
This is read through caching.

00:35:26.040 --> 00:35:28.290
It's a little bit simplified
from what you're actually

00:35:28.290 --> 00:35:29.210
going to want to do.

00:35:29.210 --> 00:35:32.650
But basically you can fetch
it if you already have it,

00:35:32.650 --> 00:35:36.040
and then you can put
it back in the cache,

00:35:36.040 --> 00:35:37.854
and then respond with it.

00:35:37.854 --> 00:35:40.270
This is really straightforward
inside of the ServiceWorker

00:35:40.270 --> 00:35:43.560
API, once you sort of wrap
your head around promises.

00:35:43.560 --> 00:35:46.870
But aside from that, you
have all of the power

00:35:46.870 --> 00:35:50.136
to do all of the things that
you wanted to do at run time.

00:35:50.136 --> 00:35:51.510
You didn't have
to be omniscient.

00:35:51.510 --> 00:35:53.810
You didn't have
to be omnipresent

00:35:53.810 --> 00:35:55.490
with all the developers
on your team.

00:35:55.490 --> 00:35:56.600
You can actually
sort of clean up

00:35:56.600 --> 00:35:58.516
some of their errors in
this sort of situation

00:35:58.516 --> 00:36:01.980
and do things for them to
make sure caches are actually

00:36:01.980 --> 00:36:04.157
populated.

00:36:04.157 --> 00:36:06.240
So let's talk about
performance for just a minute.

00:36:06.240 --> 00:36:09.620
This is a slide from Ilya
Grigorik's talk at Velocity

00:36:09.620 --> 00:36:15.890
last year, and it talks
about the lifetime of the one

00:36:15.890 --> 00:36:17.869
second budget that we'd
like to give ourselves

00:36:17.869 --> 00:36:20.160
if we're actually going to
do the right thing by users.

00:36:20.160 --> 00:36:22.570
One second is a long time.

00:36:22.570 --> 00:36:24.160
It's a very, very,
very long time

00:36:24.160 --> 00:36:27.120
when you think about
how fast CPUs are

00:36:27.120 --> 00:36:31.035
and how many operations
we can actually get done.

00:36:31.035 --> 00:36:33.350
But from a user,
one second is really

00:36:33.350 --> 00:36:34.660
where you start to get annoyed.

00:36:34.660 --> 00:36:38.560
One second is a bad place to be
if you're not giving something

00:36:38.560 --> 00:36:39.340
back.

00:36:39.340 --> 00:36:41.970
And on the web today and
specifically the mobile web,

00:36:41.970 --> 00:36:44.510
you blow out that one
second budget very easily.

00:36:44.510 --> 00:36:46.010
And in fact, if
the radio is dead,

00:36:46.010 --> 00:36:48.650
and you're in a cold
sleep state on a phone,

00:36:48.650 --> 00:36:52.990
you can blow out that one second
budget just starting the radio.

00:36:52.990 --> 00:36:54.360
You'll never have a chance.

00:36:54.360 --> 00:36:56.110
You'll never be able
to get out the gates.

00:36:56.110 --> 00:36:58.443
You won't even be able to
look up DNS in that one second

00:36:58.443 --> 00:37:00.890
if you're a 3G connection and
you're in a deep sleep state

00:37:00.890 --> 00:37:03.640
and at the network level.

00:37:03.640 --> 00:37:08.750
So remember that you may already
be behind your one second goal.

00:37:08.750 --> 00:37:11.340
And then you have to
add an RTT for DNS

00:37:11.340 --> 00:37:14.190
if you don't already have it
in the cache or it has expired,

00:37:14.190 --> 00:37:19.460
and RTT for TCP set up,
and RTT for HTTPS set up,

00:37:19.460 --> 00:37:25.160
or an RTT or five, and then HTTP
request and response set up.

00:37:25.160 --> 00:37:26.540
This is pretty bad.

00:37:26.540 --> 00:37:27.957
This is to get any
bytes on screen

00:37:27.957 --> 00:37:29.914
if you're going to the
network for those bytes.

00:37:29.914 --> 00:37:31.520
This is a very bad place to be.

00:37:31.520 --> 00:37:33.811
And this is the place that
we're all trying to live in.

00:37:33.811 --> 00:37:37.360
By the way, we-- you
have done a heroic job

00:37:37.360 --> 00:37:41.550
in trying to get your mobile
websites to load fast,

00:37:41.550 --> 00:37:43.150
but the deck is
stacked against you.

00:37:43.150 --> 00:37:45.830
This is a bad place to be,
and we need to do better.

00:37:45.830 --> 00:37:50.280
So this is, again,
Jake's Train to Thrill,

00:37:50.280 --> 00:37:52.680
and this is a side by side
comparison of it loading

00:37:52.680 --> 00:37:55.884
the very first time, and then
it loading with a ServiceWorker.

00:37:55.884 --> 00:37:58.050
The first time is on the
left, and the ServiceWorker

00:37:58.050 --> 00:37:58.890
is on the right.

00:37:58.890 --> 00:38:00.580
What you're looking
at is those bytes

00:38:00.580 --> 00:38:06.540
were on screen immediately
in the ServiceWorker case.

00:38:06.540 --> 00:38:09.474
And that experience in the
left hand side isn't great,

00:38:09.474 --> 00:38:10.890
but the right hand
side experience

00:38:10.890 --> 00:38:12.500
is what happens
every single time you

00:38:12.500 --> 00:38:16.040
come back to the application
after the first time.

00:38:16.040 --> 00:38:17.370
Isn't that better?

00:38:17.370 --> 00:38:19.590
Isn't that what we all want
out of the web that we're

00:38:19.590 --> 00:38:21.320
interacting with and the
applications that we interact

00:38:21.320 --> 00:38:21.860
with?

00:38:21.860 --> 00:38:23.400
I think so.

00:38:23.400 --> 00:38:25.100
All right, so let's
talk about how,

00:38:25.100 --> 00:38:28.300
as you're starting to build your
site with the ServiceWorker,

00:38:28.300 --> 00:38:32.280
you're going to make sense
of what's actually happening.

00:38:32.280 --> 00:38:39.540
Can we go back to not
the phone, but the pixel?

00:38:39.540 --> 00:38:40.040
Great.

00:38:46.350 --> 00:38:46.880
Bingo.

00:38:46.880 --> 00:38:47.380
Thank you.

00:38:54.280 --> 00:38:59.890
One of the things that we
have added in-- oh right.

00:38:59.890 --> 00:39:00.390
Let's see.

00:39:00.390 --> 00:39:02.910
I'm going to add
USB debugging here.

00:39:02.910 --> 00:39:07.365
One of the things we've added
to Chrome in recent years--

00:39:07.365 --> 00:39:08.115
are we displaying?

00:39:12.390 --> 00:39:12.890
Great.

00:39:12.890 --> 00:39:15.056
One of things we've added
to Chrome in recent years,

00:39:15.056 --> 00:39:17.450
which is huge for debugging
on mobile, is Chrome Inspect,

00:39:17.450 --> 00:39:19.110
Chrome://inspect.

00:39:19.110 --> 00:39:22.746
And that will show you
things like all the pages

00:39:22.746 --> 00:39:24.120
that you're
currently looking at,

00:39:24.120 --> 00:39:25.828
and will let you expect
them immediately.

00:39:25.828 --> 00:39:27.420
But today it also
is going to allow

00:39:27.420 --> 00:39:28.709
you to inspect ServiceWorkers.

00:39:28.709 --> 00:39:30.250
So these are the
local ServiceWorkers

00:39:30.250 --> 00:39:31.290
that I'm looking at.

00:39:31.290 --> 00:39:33.230
The Chrome Dev summit site
is going to work offline,

00:39:33.230 --> 00:39:34.730
and it's got a
ServiceWorker, and we

00:39:34.730 --> 00:39:36.120
can inspect it in
the normal way.

00:39:36.120 --> 00:39:37.720
It's just DevTools.

00:39:37.720 --> 00:39:39.900
That's pretty great.

00:39:39.900 --> 00:39:43.550
And we can do the same thing
for the Poly Air ServiceWorker.

00:39:50.100 --> 00:39:52.130
And you can see that
this is a ServiceWorker.

00:39:52.130 --> 00:39:53.130
It's got a global scope.

00:39:53.130 --> 00:39:54.400
It's got a bunch of
stuff we've added,

00:39:54.400 --> 00:39:55.970
but it's actually
a very small object

00:39:55.970 --> 00:39:57.760
compared to what you
get in a document.

00:39:57.760 --> 00:40:01.890
So this is a much smaller API
than what you see in the DOM.

00:40:01.890 --> 00:40:05.520
But IndexedDB is available as
storage-- not local storage--

00:40:05.520 --> 00:40:09.142
and you have the ability to
work with it in the normal way.

00:40:09.142 --> 00:40:10.600
But the interesting
part comes when

00:40:10.600 --> 00:40:12.160
you start to work with devices.

00:40:12.160 --> 00:40:16.510
So let's go back here, and
let's look at my Nexus.

00:40:16.510 --> 00:40:21.310
Because the DevTools team has
done such an outstanding job,

00:40:21.310 --> 00:40:25.976
it's possible--
when this works--

00:40:25.976 --> 00:40:32.240
to both see what I'm
looking at on the phone

00:40:32.240 --> 00:40:34.150
and to start debugging it.

00:40:34.150 --> 00:40:35.700
So I can drive this here.

00:40:40.380 --> 00:40:41.250
Right?

00:40:41.250 --> 00:40:42.210
Cool.

00:40:42.210 --> 00:40:46.840
And I can go to the
ServiceWorker internals

00:40:46.840 --> 00:40:49.100
page of the device itself.

00:40:49.100 --> 00:40:50.838
So Chrome.

00:40:54.710 --> 00:40:56.470
ServiceWorker internals
is going to work

00:40:56.470 --> 00:41:06.692
both-- I missed a colon.

00:41:06.692 --> 00:41:07.650
Maybe I missed a colon?

00:41:18.210 --> 00:41:21.350
Maybe I need to load
it from the device.

00:41:21.350 --> 00:41:22.165
Bug to be filed.

00:41:28.340 --> 00:41:29.805
I can see the
registrations status.

00:41:29.805 --> 00:41:31.680
I can see that there's
a ServiceWorker that's

00:41:31.680 --> 00:41:35.220
been activated, but stopped,
which means that it was loaded,

00:41:35.220 --> 00:41:37.750
and it's now active for a
particular bit of the origin

00:41:37.750 --> 00:41:39.730
space but it's been
killed by the browser

00:41:39.730 --> 00:41:42.070
because it isn't
doing any useful work.

00:41:42.070 --> 00:41:46.270
If I go back, for instance,
to Train to Thrill,

00:41:46.270 --> 00:41:49.390
we'll see that the
ServiceWorker state here

00:41:49.390 --> 00:41:51.560
goes to something else.

00:41:51.560 --> 00:41:52.260
Just one moment.

00:41:57.840 --> 00:42:00.270
New tab. train to Thrill.

00:42:00.270 --> 00:42:03.130
Now if I come back
here, we'll see

00:42:03.130 --> 00:42:08.874
that all the logs are being
sent to you the activated

00:42:08.874 --> 00:42:10.790
and running ServiceWorker
at the middle there.

00:42:10.790 --> 00:42:12.900
So you can see the login
status that's coming off of it,

00:42:12.900 --> 00:42:14.140
and this story is
going to get better

00:42:14.140 --> 00:42:16.389
for debugging ServiceWorkers,
but you have the ability

00:42:16.389 --> 00:42:21.680
both to inspect them here,
but also to connect to them

00:42:21.680 --> 00:42:26.730
over the USB debugging bridge,
so that's pretty great.

00:42:26.730 --> 00:42:28.230
All right, can we
go back to slides?

00:42:48.470 --> 00:42:51.810
OK, so that's inspecting
and debugging.

00:42:51.810 --> 00:42:53.561
It's worth noting that
an application that

00:42:53.561 --> 00:42:55.768
feels like an application
that does the sort of stuff

00:42:55.768 --> 00:42:58.140
that we've just seen has to
be composed of two parts.

00:42:58.140 --> 00:42:59.247
The first is a shell.

00:42:59.247 --> 00:43:01.830
It's the thing the boots up when
you initially tap on the icon

00:43:01.830 --> 00:43:03.400
or go to the URL.

00:43:03.400 --> 00:43:05.490
And the second part is
content, which you probably

00:43:05.490 --> 00:43:07.360
want to send down in
the initial payload

00:43:07.360 --> 00:43:09.280
when you're first
loading your application.

00:43:09.280 --> 00:43:11.110
But subsequently,
you really want

00:43:11.110 --> 00:43:13.034
to composing content
into the shell.

00:43:13.034 --> 00:43:14.450
If I navigate from
place to place,

00:43:14.450 --> 00:43:16.622
I don't want a full page
transition necessarily,

00:43:16.622 --> 00:43:18.705
and so I want to be pulling
content and loading it

00:43:18.705 --> 00:43:20.320
in with Ajax.

00:43:20.320 --> 00:43:22.180
Building an application
in the modern style,

00:43:22.180 --> 00:43:24.300
using something like
Polymer, makes this trivial.

00:43:24.300 --> 00:43:27.370
The Poly Air application
is really just that.

00:43:27.370 --> 00:43:30.550
It's data binding plus
bit of content shell,

00:43:30.550 --> 00:43:33.257
and when things change in my
data, things change in my UI.

00:43:33.257 --> 00:43:34.840
This is a really
natural way to do it,

00:43:34.840 --> 00:43:36.570
and I could certainly
do synchronization

00:43:36.570 --> 00:43:37.529
on top of a data model.

00:43:37.529 --> 00:43:39.236
And this is how we
need to start thinking

00:43:39.236 --> 00:43:40.850
about constructing applications.

00:43:40.850 --> 00:43:42.450
Jake's Train to
Thrill is perhaps

00:43:42.450 --> 00:43:45.290
the most elegant and
futuristic version of this

00:43:45.290 --> 00:43:47.770
because it has server
side logic for smushing

00:43:47.770 --> 00:43:50.516
down the initial payload
the first time you go to it,

00:43:50.516 --> 00:43:51.890
then it's only
the ServiceWorker,

00:43:51.890 --> 00:43:53.750
and then subsequently
launching the show,

00:43:53.750 --> 00:43:54.944
and then feeding it data.

00:43:54.944 --> 00:43:56.360
And that's sort
of where we really

00:43:56.360 --> 00:44:00.390
want to be where we're launching
something almost instantly.

00:44:00.390 --> 00:44:03.816
So today, to get ourselves
onto the home screen,

00:44:03.816 --> 00:44:05.440
you sort of have to
do this dance where

00:44:05.440 --> 00:44:08.340
you click on Add to Home
Screen, you add something there,

00:44:08.340 --> 00:44:10.180
and then it shows up like this.

00:44:10.180 --> 00:44:12.020
Again, if you build
your site with a service

00:44:12.020 --> 00:44:15.195
worker in the manifest, and
it's high quality, and users

00:44:15.195 --> 00:44:17.070
like it, and they come
back to it frequently,

00:44:17.070 --> 00:44:19.040
you're going to start
to see us asking users

00:44:19.040 --> 00:44:20.540
whether or not they
want to continue

00:44:20.540 --> 00:44:22.040
to engage with your
site in this way

00:44:22.040 --> 00:44:24.560
without necessarily
having to determine

00:44:24.560 --> 00:44:27.150
in some inscrutable menu and
without any actual context

00:44:27.150 --> 00:44:29.400
whether or not this is
something that they want to do.

00:44:29.400 --> 00:44:31.066
We're going to make
this better for you,

00:44:31.066 --> 00:44:32.880
and we know that his is our job.

00:44:32.880 --> 00:44:34.870
So what is that metadata?

00:44:34.870 --> 00:44:36.410
Today this is that metadata.

00:44:36.410 --> 00:44:38.380
This is from the
Chrome Dev summit site.

00:44:38.380 --> 00:44:39.770
I had to snip a little bit.

00:44:39.770 --> 00:44:43.540
You have to do this on every
page, every single page,

00:44:43.540 --> 00:44:45.280
at the top of the page.

00:44:45.280 --> 00:44:47.334
And by the way, those
are very valuable bytes.

00:44:47.334 --> 00:44:49.500
Let's say a user is coming
to your site for the very

00:44:49.500 --> 00:44:50.280
first time.

00:44:50.280 --> 00:44:51.460
This sucks.

00:44:51.460 --> 00:44:52.410
This is bad.

00:44:52.410 --> 00:44:54.660
This is in your first
couple of packets.

00:44:54.660 --> 00:44:57.260
This is stuff that you wanted
to use to put pixels on screen

00:44:57.260 --> 00:44:59.790
to tell the user that something
else was going to happen

00:44:59.790 --> 00:45:03.390
or give them the answer
in a best case scenario.

00:45:03.390 --> 00:45:06.910
This regurgitation over
and over and over again,

00:45:06.910 --> 00:45:09.440
which is subtle and breaks
easily, is a bad thing,

00:45:09.440 --> 00:45:12.400
and so we're replacing that
with a new web manifest format

00:45:12.400 --> 00:45:15.030
that's being specified
at the W3C in conjunction

00:45:15.030 --> 00:45:16.560
with Mozilla and others.

00:45:16.560 --> 00:45:19.690
But what you do instead of that
long winded thing at the top,

00:45:19.690 --> 00:45:21.840
is instead to put
your theme color,

00:45:21.840 --> 00:45:24.370
if you want one, with
a link to a manifest.

00:45:24.370 --> 00:45:26.820
And that link to a
manifest is something

00:45:26.820 --> 00:45:29.830
that you can point you from
any document in your origin.

00:45:29.830 --> 00:45:32.470
And it's going to include
all the stuff you really

00:45:32.470 --> 00:45:36.140
want, but it can be extended
with other stuff later.

00:45:36.140 --> 00:45:38.920
So for instance, you'll see the
bottom there is GCM sender ID.

00:45:38.920 --> 00:45:40.840
That's what we need in
our demo application

00:45:40.840 --> 00:45:45.474
to make it possible for
the notification API

00:45:45.474 --> 00:45:47.140
to understand-- or
the push notification

00:45:47.140 --> 00:45:49.920
API to understand
where you're actually

00:45:49.920 --> 00:45:55.256
coming from with regards to the
back end of the push system.

00:45:55.256 --> 00:45:56.880
We hope not to need
this in the future,

00:45:56.880 --> 00:45:58.230
but for now, it's
extensible, and we

00:45:58.230 --> 00:46:00.188
to start to use this for
more and more features

00:46:00.188 --> 00:46:02.470
that don't fit anywhere
else in the platform.

00:46:02.470 --> 00:46:03.680
High resolution icons.

00:46:03.680 --> 00:46:05.350
A long description.

00:46:05.350 --> 00:46:07.170
A location to load,
when you initially

00:46:07.170 --> 00:46:12.260
tap on the document
in your launcher,

00:46:12.260 --> 00:46:13.960
those are all part
of the manifest,

00:46:13.960 --> 00:46:15.990
and you can even control
the screen orientation.

00:46:15.990 --> 00:46:17.770
This is good stuff,
and we expect

00:46:17.770 --> 00:46:19.840
to this is going to be
a key enabler for making

00:46:19.840 --> 00:46:22.244
it possible to build
things that feel appy.

00:46:22.244 --> 00:46:24.160
All right, let's get the
push notification bit

00:46:24.160 --> 00:46:28.266
because I think that was the bit
that you actually clapped for.

00:46:28.266 --> 00:46:30.390
I don't if that was tension
because I did it wrong.

00:46:35.120 --> 00:46:39.200
So what you'll see
here again is promises

00:46:39.200 --> 00:46:40.720
being used nearly everywhere.

00:46:40.720 --> 00:46:43.220
This is a little method
we've put together

00:46:43.220 --> 00:46:46.494
to request permission
to do notifications.

00:46:46.494 --> 00:46:47.910
This is an existing
API that we're

00:46:47.910 --> 00:46:50.210
extending for this new world.

00:46:50.210 --> 00:46:52.470
And because it doesn't
already come with promises,

00:46:52.470 --> 00:46:53.560
we're wrapping it in a promise.

00:46:53.560 --> 00:46:55.393
And again, you can
create your own promises,

00:46:55.393 --> 00:46:57.220
and this is sort of
how you can control

00:46:57.220 --> 00:47:00.600
inside the ServiceWorker things
like delaying, activation,

00:47:00.600 --> 00:47:03.540
or waiting on some
network, or for IndexedDB

00:47:03.540 --> 00:47:06.110
response for data.

00:47:06.110 --> 00:47:07.720
But we're going to
request permission,

00:47:07.720 --> 00:47:09.760
and then if it's
granted, we're going

00:47:09.760 --> 00:47:14.252
to vend a promise the
resolves successfully with it.

00:47:14.252 --> 00:47:15.960
And I'm not going to
deal at all with how

00:47:15.960 --> 00:47:17.860
to do those permission
prompts directly.

00:47:17.860 --> 00:47:20.920
My colleague Adrian is
going to talk to you all out

00:47:20.920 --> 00:47:23.410
how to do that and
how not to do that.

00:47:23.410 --> 00:47:25.380
And I can only say that
if you do it right,

00:47:25.380 --> 00:47:26.879
it's going to work
out well for you.

00:47:26.879 --> 00:47:29.499
And if you do it badly, you're
going to have a bad time.

00:47:29.499 --> 00:47:31.040
So let's say that
we get to the point

00:47:31.040 --> 00:47:33.610
where we've got that request.

00:47:33.610 --> 00:47:36.430
So we can request it, and
then, as you see here,

00:47:36.430 --> 00:47:38.080
request and then then.

00:47:38.080 --> 00:47:40.566
We can say
navigator.push.register.

00:47:40.566 --> 00:47:41.940
This registration
method is going

00:47:41.940 --> 00:47:44.960
to move to a different
location in the API,

00:47:44.960 --> 00:47:48.670
and I'll update the appropriate
things as that happens.

00:47:48.670 --> 00:47:51.240
But basically, you
get a registration

00:47:51.240 --> 00:47:53.090
and then you can send
the registration ID

00:47:53.090 --> 00:47:55.090
that you get back as a
part of that registration

00:47:55.090 --> 00:47:57.910
object to your server so that
your server can send things

00:47:57.910 --> 00:48:00.950
to the backhaul push
messaging system,

00:48:00.950 --> 00:48:02.790
and then notify
you on your device.

00:48:02.790 --> 00:48:05.910
That's what allowed us to
deliver a message to Chrome,

00:48:05.910 --> 00:48:07.510
even though Chrome was dead.

00:48:07.510 --> 00:48:09.010
Chrome was listening
for the message

00:48:09.010 --> 00:48:11.650
that you sent even though
Chrome hadn't been started

00:48:11.650 --> 00:48:13.380
when I received
that push message.

00:48:13.380 --> 00:48:19.270
So that's how we enable end to
end push message registration.

00:48:19.270 --> 00:48:22.070
All right, on the ServiceWorker
side-- by the way,

00:48:22.070 --> 00:48:25.310
there are some push
notification systems

00:48:25.310 --> 00:48:28.700
that you may have used in the
past which don't let you start

00:48:28.700 --> 00:48:31.390
your application
when you receive

00:48:31.390 --> 00:48:33.210
a notification or
a push message.

00:48:35.740 --> 00:48:37.860
That's a pretty bad
user experience.

00:48:37.860 --> 00:48:41.741
When, let's say, I am in a tube,
and it's going from hop to hop,

00:48:41.741 --> 00:48:44.240
and I've gotten just enough to
know that something happened,

00:48:44.240 --> 00:48:46.730
and then I tap on it, and it
doesn't know anything about it.

00:48:46.730 --> 00:48:48.104
Instead, what
we're doing here is

00:48:48.104 --> 00:48:50.890
we're allowing you to
handle the push message

00:48:50.890 --> 00:48:54.200
and then create a notification
yourself, knowing that you

00:48:54.200 --> 00:48:57.070
probably want to do is take that
data, and put it in a database,

00:48:57.070 --> 00:48:58.820
and make it available
for your application

00:48:58.820 --> 00:49:00.362
when it starts back
up again offline.

00:49:00.362 --> 00:49:03.028
There's nothing more frustrating
than seeing a notification that

00:49:03.028 --> 00:49:05.240
has everything that you
wanted to see, and then

00:49:05.240 --> 00:49:07.100
go into an application,
and then telling you

00:49:07.100 --> 00:49:08.880
that it doesn't have it.

00:49:08.880 --> 00:49:11.280
We should do better than this,
and our model allows that.

00:49:11.280 --> 00:49:14.810
So the way you do it is
that you get data back

00:49:14.810 --> 00:49:17.670
from the event for
the push message,

00:49:17.670 --> 00:49:19.420
and you can create
a notification.

00:49:19.420 --> 00:49:21.190
The ServiceWorker true thing
may change in the future,

00:49:21.190 --> 00:49:22.981
but basically you can
create a notification

00:49:22.981 --> 00:49:25.160
from the background context
if you have previously

00:49:25.160 --> 00:49:27.140
requested it from the
foreground context.

00:49:27.140 --> 00:49:29.280
You're not able to make
that request for permission

00:49:29.280 --> 00:49:31.180
from inside the
ServiceWorker, so make sure

00:49:31.180 --> 00:49:33.302
you do that in your
application from the pages

00:49:33.302 --> 00:49:34.260
that you're looking at.

00:49:34.260 --> 00:49:35.670
That makes sense though, right?

00:49:35.670 --> 00:49:36.840
The users looking
at your app, you

00:49:36.840 --> 00:49:38.673
should be requesting
permission to do things

00:49:38.673 --> 00:49:40.780
from inside your app.

00:49:40.780 --> 00:49:43.940
And in fact, you get events
back to handle the stuff

00:49:43.940 --> 00:49:45.940
that just comes down
the wire or when

00:49:45.940 --> 00:49:48.800
the notification
is interacted with.

00:49:48.800 --> 00:49:51.220
This is a natural
outcome of the fact

00:49:51.220 --> 00:49:53.860
that the ServiceWorker could
be killed between when you send

00:49:53.860 --> 00:49:56.110
the notification and
when it came back to you.

00:49:56.110 --> 00:49:58.443
So it's a good thing to use
the notification object that

00:49:58.443 --> 00:50:01.480
comes back from the notification
click to go handle things.

00:50:05.690 --> 00:50:09.310
I wanted to just let you
know that while all of this,

00:50:09.310 --> 00:50:10.970
I think, is
compelling, and I think

00:50:10.970 --> 00:50:12.436
is going to enable
you to deliver

00:50:12.436 --> 00:50:14.310
amazing applications in
the very near future,

00:50:14.310 --> 00:50:16.260
we're just getting warmed up.

00:50:16.260 --> 00:50:17.980
Dare I mention background
synchronization

00:50:17.980 --> 00:50:20.104
and it's a high priority
for us in the near future.

00:50:20.104 --> 00:50:23.530
We know that you want to be able
to go update your application

00:50:23.530 --> 00:50:25.570
when you're connected
to power and a network,

00:50:25.570 --> 00:50:27.132
and maybe the user is asleep.

00:50:27.132 --> 00:50:28.340
We know that you want alarms.

00:50:28.340 --> 00:50:31.530
We know that you should be
able to make an alarm clock

00:50:31.530 --> 00:50:32.640
application on the web.

00:50:32.640 --> 00:50:34.497
We understand that.

00:50:34.497 --> 00:50:37.080
And we're working hard to make
sure that those sorts of things

00:50:37.080 --> 00:50:40.000
are available in the future,
and this is just a down payment.

00:50:40.000 --> 00:50:42.620
So we're listening.

00:50:42.620 --> 00:50:44.762
The slide deck will be
made available, as they all

00:50:44.762 --> 00:50:49.160
will Jake's "Is Service
Worker Ready Yet?"

00:50:49.160 --> 00:50:50.670
website is the
authoritative place

00:50:50.670 --> 00:50:53.460
to look for information about
the status of the various APIs

00:50:53.460 --> 00:50:57.740
that are being added
and to understand

00:50:57.740 --> 00:50:59.960
how it's progressing
in different browsers.

00:50:59.960 --> 00:51:01.959
So we're not the only
ones who are implementing.

00:51:01.959 --> 00:51:05.290
We've designed this system in
collaboration with our friends

00:51:05.290 --> 00:51:07.620
at Mozilla, and
others, and Samsung.

00:51:07.620 --> 00:51:10.760
And we're excited that
they're implementing too.

00:51:10.760 --> 00:51:13.490
So thank you so much for
your time and attention,

00:51:13.490 --> 00:51:15.240
and I'm excited to
talk with you about how

00:51:15.240 --> 00:51:17.410
we're going to
make real web apps.

00:51:17.410 --> 00:51:18.960
[APPLAUSE]

