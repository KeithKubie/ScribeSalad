WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.970
MEGHAN MEHTA: Android
Q Beta 3 is here.

00:00:02.970 --> 00:00:05.610
This version has several new
updates, including dark theme

00:00:05.610 --> 00:00:07.230
and gesture navigation.

00:00:07.230 --> 00:00:08.130
Let's dive in.

00:00:08.130 --> 00:00:11.040
Beta 3 adds a system setting
to switch apps on a device

00:00:11.040 --> 00:00:12.450
to use a dark theme.

00:00:12.450 --> 00:00:15.090
Having a dark theme
isn't just aesthetic.

00:00:15.090 --> 00:00:18.090
On some devices, it can
extend battery life.

00:00:18.090 --> 00:00:20.850
Therefore, when users switch
to Battery Saver mode,

00:00:20.850 --> 00:00:22.290
the dark theme
will automatically

00:00:22.290 --> 00:00:25.950
be used on Pixel and
selected OEM devices.

00:00:25.950 --> 00:00:28.110
To customize your
app's dark theme,

00:00:28.110 --> 00:00:32.340
extend your app theme from
theme.AppCompat.DayNight,

00:00:32.340 --> 00:00:34.560
or MaterialComponents.

00:00:34.560 --> 00:00:36.090
From there, you
enable the feature

00:00:36.090 --> 00:00:40.650
by calling AppCompatDelegat
e.setDefaultNightMode.

00:00:40.650 --> 00:00:45.270
The recommended values for this
are Light Night No, Dark Night

00:00:45.270 --> 00:00:49.540
Yes, Use System Default,
Night Follow System.

00:00:49.540 --> 00:00:51.330
Keep in mind that
the past in value

00:00:51.330 --> 00:00:53.670
is not persisted, so you
need to set it each time

00:00:53.670 --> 00:00:55.650
your app becomes visible.

00:00:55.650 --> 00:00:58.110
You will also need to
update your themes, styles,

00:00:58.110 --> 00:01:00.360
and layouts so that
users can seamlessly

00:01:00.360 --> 00:01:03.570
switch between your app's
light and dark themes.

00:01:03.570 --> 00:01:06.600
Using material design components
makes this especially easy

00:01:06.600 --> 00:01:09.300
because its color theme
system provides easy access

00:01:09.300 --> 00:01:11.040
to well-defined colors.

00:01:11.040 --> 00:01:14.550
Android Q also introduces
gestural navigation,

00:01:14.550 --> 00:01:16.440
allowing you to
perform sliding motions

00:01:16.440 --> 00:01:20.520
to both navigate back one screen
and return to the home screen.

00:01:20.520 --> 00:01:23.760
Gestural navigation provides
a system-wide, edge-to-edge

00:01:23.760 --> 00:01:25.270
experience.

00:01:25.270 --> 00:01:29.040
This means your apps can use
more of the device's screen.

00:01:29.040 --> 00:01:31.950
On Beta 3, a swipe up
shows the home screen,

00:01:31.950 --> 00:01:34.590
and a horizontal edge swipe
will now take you back

00:01:34.590 --> 00:01:36.690
to the previous app.

00:01:36.690 --> 00:01:39.150
If your app relies
on similar gestures,

00:01:39.150 --> 00:01:41.730
users may accidentally
trigger the system gestures

00:01:41.730 --> 00:01:44.580
and alter the intended
experience of your app.

00:01:44.580 --> 00:01:47.160
For example, a horizontal
edge swipe by default

00:01:47.160 --> 00:01:49.270
takes you back to
the previous app.

00:01:49.270 --> 00:01:51.000
If you encounter this
sort of conflict,

00:01:51.000 --> 00:01:55.260
use gesture exclusion rectangles
to override system gestures

00:01:55.260 --> 00:01:58.710
within particular areas
along device edges.

00:01:58.710 --> 00:02:01.740
When users perform a gesture
inside of these rectangles,

00:02:01.740 --> 00:02:03.240
the gesture will
trigger an action

00:02:03.240 --> 00:02:06.363
in your app instead of
the typical system action.

00:02:06.363 --> 00:02:08.280
Although gesture exclusion
rectangles give you

00:02:08.280 --> 00:02:10.770
flexibility in updating
your app's experience,

00:02:10.770 --> 00:02:13.980
you should keep the following
best practices in mind.

00:02:13.980 --> 00:02:16.080
Avoid vertical swipes
near the system

00:02:16.080 --> 00:02:18.480
navigation elements because
this gesture will always

00:02:18.480 --> 00:02:21.250
be a way for users
to exit the app.

00:02:21.250 --> 00:02:24.330
We also don't recommend creating
a gesture exclusion zone that

00:02:24.330 --> 00:02:27.420
covers the entire edge of
the screen, which the system

00:02:27.420 --> 00:02:29.220
recognizes as a back action.

00:02:29.220 --> 00:02:32.490
To enhance user privacy, Android
has created a sandbox view

00:02:32.490 --> 00:02:35.520
of external storage that
apps targeting Android Q use

00:02:35.520 --> 00:02:38.430
by default. Your app
can access the files

00:02:38.430 --> 00:02:40.350
that it creates on
external storage.

00:02:40.350 --> 00:02:43.920
But access to other apps' files
through runtime permissions

00:02:43.920 --> 00:02:45.780
is limited to
common media types,

00:02:45.780 --> 00:02:47.370
such as photos and music.

00:02:47.370 --> 00:02:49.560
To access other
files, your app can

00:02:49.560 --> 00:02:51.720
request that the user
give permission to access

00:02:51.720 --> 00:02:55.710
a particular file or directory
by using either the Action Open

00:02:55.710 --> 00:02:59.400
Document or Action Open
Document Tree intent.

00:02:59.400 --> 00:03:01.320
To help you respond to
your context questions

00:03:01.320 --> 00:03:05.190
more efficiently, Android
Q introduces Smart Actions.

00:03:05.190 --> 00:03:08.010
Smart Actions can now
automatically suggest actions

00:03:08.010 --> 00:03:10.260
and responses to conversations.

00:03:10.260 --> 00:03:12.300
For example, in
this notification

00:03:12.300 --> 00:03:14.400
the system suggests
reply to the message.

00:03:14.400 --> 00:03:16.530
And since the message
contains an address,

00:03:16.530 --> 00:03:19.590
it includes a button to
navigate to that address.

00:03:19.590 --> 00:03:21.630
This system provides
several suggestions for you

00:03:21.630 --> 00:03:24.330
so you don't need to implement
this functionality from scratch

00:03:24.330 --> 00:03:25.980
in your app.

00:03:25.980 --> 00:03:28.080
You can analyze a
list of messages

00:03:28.080 --> 00:03:30.090
to see if there are
any actions associated

00:03:30.090 --> 00:03:33.980
with it using this Adjust
Conversation Actions API.

00:03:33.980 --> 00:03:36.330
Pass in conversation
text, and the API

00:03:36.330 --> 00:03:38.670
will provide a list of
suggestions corresponding

00:03:38.670 --> 00:03:40.620
to possible actions.

00:03:40.620 --> 00:03:43.290
It will also generate a
list of possible replies.

00:03:43.290 --> 00:03:47.400
But, for now, this reply feature
is only supported in English.

00:03:47.400 --> 00:03:49.860
We've also added an
ability to detect languages

00:03:49.860 --> 00:03:51.300
in a piece of text.

00:03:51.300 --> 00:03:54.060
Developers can use the Detect
Language feature of the text

00:03:54.060 --> 00:03:57.750
classifier class to pass in text
and see what language it is in.

00:03:57.750 --> 00:03:58.830
Enough of me talking.

00:03:58.830 --> 00:04:00.443
Go try it for yourself.

00:04:00.443 --> 00:04:01.860
Follow the link
in the description

00:04:01.860 --> 00:04:04.620
to install Android Q Beta,
which is now available on more

00:04:04.620 --> 00:04:06.540
than 15 devices.

00:04:06.540 --> 00:04:08.640
Release notes and
support resources

00:04:08.640 --> 00:04:11.970
can be found on the Android
Q Beta developer site.

00:04:11.970 --> 00:04:15.150
Let us know how you like Android
Q by leaving us feedback.

00:04:15.150 --> 00:04:17.310
Your feedback is important
to us in building

00:04:17.310 --> 00:04:18.899
a platform for everyone.

00:04:18.899 --> 00:04:20.100
Happy coding.

00:04:20.100 --> 00:04:23.750
[MUSIC PLAYING]

