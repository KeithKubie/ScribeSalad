WEBVTT
Kind: captions
Language: en

00:00:00.896 --> 00:00:02.020
BORIS FARBER: Thanks, Bill.

00:00:02.020 --> 00:00:07.470
Thanks, everyone, for coming
over and keeping up with us

00:00:07.470 --> 00:00:09.190
in this time.

00:00:09.190 --> 00:00:10.110
My name is Boris.

00:00:10.110 --> 00:00:13.570
I'm part of a partner
engineering team, which

00:00:13.570 --> 00:00:18.140
is essentially, please look
at us as your Google partners

00:00:18.140 --> 00:00:20.220
to success.

00:00:20.220 --> 00:00:22.880
I want to forward
the mic to Guy,

00:00:22.880 --> 00:00:28.040
who is one of our top partners,
to describe the awesome system

00:00:28.040 --> 00:00:30.870
they designed,
using various APIs,

00:00:30.870 --> 00:00:36.280
to support an enormously
increasing number of devices.

00:00:36.280 --> 00:00:38.170
GUY ULMER: Right.

00:00:38.170 --> 00:00:42.020
So Boris is very humble,
but we did build this thing

00:00:42.020 --> 00:00:45.140
on the shoulders of giants,
in this specific case, Google,

00:00:45.140 --> 00:00:49.000
but I'll also talk about some
other publicly available data

00:00:49.000 --> 00:00:50.920
that we used.

00:00:50.920 --> 00:00:52.960
Just a little bit about us.

00:00:52.960 --> 00:00:57.100
We're a fairly large studio,
with over 1,200 people

00:00:57.100 --> 00:01:02.170
across eight different
offices around the world.

00:01:02.170 --> 00:01:05.560
It's not just boasting PR here.

00:01:05.560 --> 00:01:07.640
When you have so many
studios and they mostly

00:01:07.640 --> 00:01:11.110
work independently, the
same kind of questions

00:01:11.110 --> 00:01:12.430
usually pop up.

00:01:12.430 --> 00:01:14.140
One studio already
solved that problem,

00:01:14.140 --> 00:01:17.410
and then another studio
is tackling it again,

00:01:17.410 --> 00:01:20.560
which is basically
why I joined Plarium

00:01:20.560 --> 00:01:23.140
two and a half years ago.

00:01:23.140 --> 00:01:25.810
My title is platform
technology specialist,

00:01:25.810 --> 00:01:28.480
but essentially what
it means is that I'm

00:01:28.480 --> 00:01:30.670
serving as some
kind of interface

00:01:30.670 --> 00:01:34.180
between the internal studios
and the platform holders.

00:01:34.180 --> 00:01:38.980
And what I try to do at
Plarium is drive innovation

00:01:38.980 --> 00:01:41.530
through adoption
of new technology.

00:01:41.530 --> 00:01:46.370
So think of me as an internal
evangelist of new tech

00:01:46.370 --> 00:01:51.040
if, for example, Google comes up
with a Google Play integration

00:01:51.040 --> 00:01:54.760
into Chrome OS devices,
that's something

00:01:54.760 --> 00:01:56.890
that I would try
to push internally,

00:01:56.890 --> 00:02:00.190
look for the right studio in the
right time in their pipeline,

00:02:00.190 --> 00:02:05.650
to kind of integrate that tool.

00:02:05.650 --> 00:02:06.880
I'm also doing research.

00:02:06.880 --> 00:02:09.650
So I'll let the R&amp;D
guys deal with the team,

00:02:09.650 --> 00:02:12.850
with the development.

00:02:12.850 --> 00:02:15.460
I'm part of the research
team, but while the rest

00:02:15.460 --> 00:02:18.640
of the research team is actually
doing market research, which

00:02:18.640 --> 00:02:22.870
means they are playing games,
I'm doing technology research.

00:02:22.870 --> 00:02:26.980
And my background is actually
in the EDA, or Electronic Design

00:02:26.980 --> 00:02:28.030
Automation industry.

00:02:28.030 --> 00:02:30.500
I used to work at
Cadence Design System.

00:02:30.500 --> 00:02:33.200
I think they're headquartered
somewhere over there,

00:02:33.200 --> 00:02:35.230
but I'm a bit disoriented now.

00:02:38.110 --> 00:02:42.610
And when I joined Plarium, the
first question I had to tackle

00:02:42.610 --> 00:02:46.947
is the fact that there are
over 15,000 devices registered.

00:02:46.947 --> 00:02:48.655
And when you go to
Google Play Dashboard,

00:02:48.655 --> 00:02:50.920
you will see that number.

00:02:50.920 --> 00:02:54.740
Other resources track even
higher number of devices,

00:02:54.740 --> 00:02:58.060
but it's still in the
thousands, or tens of thousands.

00:02:58.060 --> 00:03:00.760
So developers approached
me, and they told me,

00:03:00.760 --> 00:03:03.730
hey, our biggest problem is that
we don't know which devices we

00:03:03.730 --> 00:03:07.060
should target if we want
to optimize the process,

00:03:07.060 --> 00:03:10.450
and which devices
should we test on.

00:03:10.450 --> 00:03:13.140
So that was basically my
first research project

00:03:13.140 --> 00:03:15.070
at the company, and it's
an ongoing research,

00:03:15.070 --> 00:03:18.100
because that market
changes all the time.

00:03:18.100 --> 00:03:19.829
And you need the
right tools, right?

00:03:19.829 --> 00:03:21.370
You want to navigate
an ocean, you're

00:03:21.370 --> 00:03:25.587
not going to take that
old crumbling ship.

00:03:25.587 --> 00:03:26.920
Technically that's not an ocean.

00:03:26.920 --> 00:03:28.461
That's the Mediterranean,
but I still

00:03:28.461 --> 00:03:30.760
didn't have time to
take any pictures here

00:03:30.760 --> 00:03:33.860
in San Francisco, in the Bay
Area, of an actual ocean.

00:03:33.860 --> 00:03:37.600
So that's all I had.

00:03:37.600 --> 00:03:42.790
So there are many ways to
measure this kind of data.

00:03:42.790 --> 00:03:45.160
You can use internal data
if your company is already

00:03:45.160 --> 00:03:45.724
established.

00:03:45.724 --> 00:03:47.140
You have some games
in the market,

00:03:47.140 --> 00:03:52.505
you can poll the devices
that your players are using.

00:03:52.505 --> 00:03:53.880
But there are two
problems there.

00:03:53.880 --> 00:03:55.480
First of all, you have
to make sure you actually

00:03:55.480 --> 00:03:57.550
collect the data, and
the right kind of data.

00:03:57.550 --> 00:04:01.750
There is a lot of misreporting
when it comes to these devices,

00:04:01.750 --> 00:04:04.120
and you have to do
some manual tweaking.

00:04:04.120 --> 00:04:06.070
And it also means
that you're skewed

00:04:06.070 --> 00:04:08.220
towards your
current player base.

00:04:08.220 --> 00:04:12.970
So if for example our bread and
butter is MMO strategy games,

00:04:12.970 --> 00:04:16.269
and suddenly we want to
design an action RPG game,

00:04:16.269 --> 00:04:18.250
it might not be
the same user base

00:04:18.250 --> 00:04:19.600
that play this kind of games.

00:04:19.600 --> 00:04:22.330
They might actually have
different device properties, so

00:04:22.330 --> 00:04:24.640
the data that we have
internally might not

00:04:24.640 --> 00:04:28.600
be the best data for the job.

00:04:28.600 --> 00:04:32.050
Luckily there is some
publicly available data,

00:04:32.050 --> 00:04:35.980
or maybe there was
publicly available data.

00:04:35.980 --> 00:04:39.640
OpenSignal reports-- they used
to share public information up

00:04:39.640 --> 00:04:41.830
until 2015.

00:04:41.830 --> 00:04:45.840
And then if anyone is familiar
with Unity Analytics hardware

00:04:45.840 --> 00:04:49.570
starts, they used to have
a public page for that,

00:04:49.570 --> 00:04:51.460
and I think that the
last time it was updated

00:04:51.460 --> 00:04:53.050
was in March 2017.

00:04:53.050 --> 00:04:55.015
So that's around a year ago.

00:04:57.720 --> 00:04:59.320
No problem with that.

00:04:59.320 --> 00:05:02.920
I think there's also
some initiative in Unity

00:05:02.920 --> 00:05:09.010
for sharing this kind
of data with developers,

00:05:09.010 --> 00:05:12.160
but you have to work with
them, and it's not something

00:05:12.160 --> 00:05:14.410
that you can just
get off the web.

00:05:14.410 --> 00:05:18.550
And then Google, they also
have their Android distribution

00:05:18.550 --> 00:05:23.050
dashboards, but that
information is kind of limited.

00:05:23.050 --> 00:05:24.730
But when you look
at all of that--

00:05:24.730 --> 00:05:27.400
you have your internal data, you
have publicly available data,

00:05:27.400 --> 00:05:30.940
you can actually kind of work
the two things together--

00:05:30.940 --> 00:05:36.700
and then you realize that, hey,
the top 10 devices represent

00:05:36.700 --> 00:05:39.970
just 15% of the market.

00:05:39.970 --> 00:05:41.950
Again, this is from
the OpenSignal report,

00:05:41.950 --> 00:05:43.760
so this data is,
like, three years old,

00:05:43.760 --> 00:05:46.780
but while the devices
change, the fact

00:05:46.780 --> 00:05:48.730
that the top 10
devices in Android

00:05:48.730 --> 00:05:51.270
don't represent a large
portion of the market

00:05:51.270 --> 00:05:53.310
is still an ongoing issue.

00:05:53.310 --> 00:05:55.190
It's something that
still exists today.

00:05:55.190 --> 00:05:59.030
I think that the number
is even smaller right now,

00:05:59.030 --> 00:06:01.570
and ideally you want to
reach better coverage

00:06:01.570 --> 00:06:04.790
than 15% of the market.

00:06:04.790 --> 00:06:06.860
So you have to take
a different approach,

00:06:06.860 --> 00:06:08.920
and this is what I did.

00:06:08.920 --> 00:06:10.900
Again, I used to work
in the EDA industry.

00:06:10.900 --> 00:06:15.720
I had a lot of relations with
the hardware manufacturers,

00:06:15.720 --> 00:06:18.920
mostly in the mobile space.

00:06:18.920 --> 00:06:21.670
So when you look at
all of these devices

00:06:21.670 --> 00:06:24.340
there is actually some things
that are common to all of them.

00:06:24.340 --> 00:06:28.420
All of them have the same
resolution, 4 gigs of RAM,

00:06:28.420 --> 00:06:30.040
and even more
importantly, all of them

00:06:30.040 --> 00:06:36.900
are running the same Snapdragon
820 chipset, and the Adreno 530

00:06:36.900 --> 00:06:38.290
GPU.

00:06:38.290 --> 00:06:42.310
Samsung is special in that
regard because their Galaxy S

00:06:42.310 --> 00:06:44.800
devices, you can have two
different devices running

00:06:44.800 --> 00:06:48.290
completely different SOCs
underneath, either their own

00:06:48.290 --> 00:06:53.290
[INAUDIBLE] or Snapdragon.

00:06:53.290 --> 00:06:55.270
I think there are some
other manufacturers

00:06:55.270 --> 00:06:59.230
with that kind of division,
but Samsung is definitely

00:06:59.230 --> 00:07:00.700
the largest one.

00:07:00.700 --> 00:07:03.280
And all of these devices are
running-- or at least used

00:07:03.280 --> 00:07:06.790
to run Android 6
when they released.

00:07:06.790 --> 00:07:08.620
And that basically
means that maybe we

00:07:08.620 --> 00:07:11.530
don't have to test for each
of these individual devices.

00:07:11.530 --> 00:07:15.310
We can just take one of
them as a representative.

00:07:15.310 --> 00:07:17.560
And so this is
basically the SOC,

00:07:17.560 --> 00:07:20.980
or System On a Chip approach.

00:07:20.980 --> 00:07:23.530
Android devices,
they're dominantly

00:07:23.530 --> 00:07:27.130
ARM architecture-based,
98% of the market.

00:07:27.130 --> 00:07:29.950
And eventually you
have only a handful

00:07:29.950 --> 00:07:33.460
of hardware manufacturers, so
Qualcomm, Samsung, MediaTek,

00:07:33.460 --> 00:07:36.380
Huawei, and some others
that are developing

00:07:36.380 --> 00:07:43.250
these SOCs that are basically
in each and every Android phone.

00:07:43.250 --> 00:07:45.610
So there's still you know
loads of combinatorics

00:07:45.610 --> 00:07:46.400
that are going on.

00:07:46.400 --> 00:07:50.050
So two SOCs-- one SOC
might be used on phones

00:07:50.050 --> 00:07:52.840
that have different RAM
and OS configurations,

00:07:52.840 --> 00:07:55.300
but that is still
much easier to track

00:07:55.300 --> 00:08:00.980
than 15,000 separate devices.

00:08:00.980 --> 00:08:05.240
So looking at it from
an SOC perspective,

00:08:05.240 --> 00:08:09.080
the different component
of the system on a chip,

00:08:09.080 --> 00:08:14.030
you can actually
tackle the market

00:08:14.030 --> 00:08:17.710
by separating the
devices into buckets.

00:08:17.710 --> 00:08:22.100
So looking at the
graphic GPU component,

00:08:22.100 --> 00:08:24.380
we can see right here--
again, this is old data,

00:08:24.380 --> 00:08:30.710
but 80% of the market
was dominated back then

00:08:30.710 --> 00:08:33.559
by 10 different GPUs.

00:08:33.559 --> 00:08:36.809
So it means that if I want to
test my game on different GPUs,

00:08:36.809 --> 00:08:40.370
I don't have to test on
10 devices to get just 15%

00:08:40.370 --> 00:08:41.010
of the market.

00:08:41.010 --> 00:08:44.930
If I use the data wisely, I
can test 10 different models

00:08:44.930 --> 00:08:49.310
and cover 80% of the GPU market.

00:08:49.310 --> 00:08:52.750
Again, these are 2015 numbers.

00:08:52.750 --> 00:08:54.000
It changes over time.

00:08:54.000 --> 00:08:57.380
But the fact that
around 80% of the market

00:08:57.380 --> 00:08:59.900
is covered by 10
to 15 devices, that

00:08:59.900 --> 00:09:01.250
remains the same over time.

00:09:03.840 --> 00:09:06.770
So again, you can pick up
different distinct devices,

00:09:06.770 --> 00:09:11.720
and have a very good
QA coverage, which

00:09:11.720 --> 00:09:15.140
brings us to the next question,
which device should I target?

00:09:15.140 --> 00:09:19.850
I have let's say
10 different GPUs,

00:09:19.850 --> 00:09:23.030
and what we usually try
to do is go for the lowest

00:09:23.030 --> 00:09:24.170
common denominator.

00:09:24.170 --> 00:09:27.840
The weakest GPU is the one that
we should target as our base,

00:09:27.840 --> 00:09:30.710
and then we can say, hey,
if we target these eight,

00:09:30.710 --> 00:09:33.680
we cover 80% of
the market, and its

00:09:33.680 --> 00:09:37.280
likely that the other graphic
cards will be stronger

00:09:37.280 --> 00:09:40.280
or more powerful than that.

00:09:40.280 --> 00:09:43.310
And this is where you can
actually use benchmark websites

00:09:43.310 --> 00:09:44.020
to the rescue.

00:09:44.020 --> 00:09:49.595
GF expansion, 3D mark, basically
if you look at the benchmarks

00:09:49.595 --> 00:09:54.180
there, you can see that looking
at these devices, Mali 400,

00:09:54.180 --> 00:09:58.970
that was actually the most
popular device back in 2015.

00:09:58.970 --> 00:10:01.160
It covered almost one
third of the market.

00:10:01.160 --> 00:10:04.160
It was also the weakest
out of these eight.

00:10:04.160 --> 00:10:07.160
So it was easy for me
to rely on these data,

00:10:07.160 --> 00:10:09.810
and go back to our
developers and tell them,

00:10:09.810 --> 00:10:13.282
hey, if you target the
Mali 400 as your base GPU,

00:10:13.282 --> 00:10:16.250
you will easily cover
80% of the market,

00:10:16.250 --> 00:10:18.680
and you won't have to worry
about other devices that

00:10:18.680 --> 00:10:23.060
are too weak for
the game to run on.

00:10:23.060 --> 00:10:25.820
And so that was
GPU segmentation.

00:10:25.820 --> 00:10:27.870
There's also OS
market segmentation.

00:10:27.870 --> 00:10:30.690
And again, that's
where Google really

00:10:30.690 --> 00:10:34.980
helps us with their own
distribution dashboards.

00:10:34.980 --> 00:10:36.090
It's a public website.

00:10:36.090 --> 00:10:37.780
You can just Google it.

00:10:37.780 --> 00:10:42.630
And if you're not familiar
with it already, you should be.

00:10:42.630 --> 00:10:44.700
Again, you need to run
some sanity checks.

00:10:44.700 --> 00:10:48.930
Do these overall Android numbers
represent your actual target

00:10:48.930 --> 00:10:50.840
market, because you're
developing games,

00:10:50.840 --> 00:10:54.780
and maybe that includes
Android watch devices

00:10:54.780 --> 00:10:57.150
and stuff like that.

00:10:57.150 --> 00:10:59.910
You want to try
and cross-reference

00:10:59.910 --> 00:11:02.100
that with different
numbers, either your own

00:11:02.100 --> 00:11:04.740
or some other external
source, to try

00:11:04.740 --> 00:11:07.560
to see if that's the
ideal market that you're

00:11:07.560 --> 00:11:10.630
looking into.

00:11:10.630 --> 00:11:13.200
But then again, my game
will be released next year,

00:11:13.200 --> 00:11:14.530
and not today.

00:11:14.530 --> 00:11:18.170
And so I'll quote a
person of the year, Kane,

00:11:18.170 --> 00:11:20.970
"he who controls the past
commands the future."

00:11:20.970 --> 00:11:23.410
Anyone familiar
with that character,

00:11:23.410 --> 00:11:27.537
or am I the only person who
played Command and Conquer?

00:11:27.537 --> 00:11:28.370
OK, there are a few.

00:11:28.370 --> 00:11:29.630
Great.

00:11:29.630 --> 00:11:30.690
It didn't go unnoticed.

00:11:30.690 --> 00:11:31.980
Great.

00:11:31.980 --> 00:11:36.950
So what we can do
with that information,

00:11:36.950 --> 00:11:40.260
Google basically gives
us the current snapshot.

00:11:40.260 --> 00:11:44.570
But that's why we have an
internet Wayback Machine.

00:11:44.570 --> 00:11:48.930
Just look at older
historical cached

00:11:48.930 --> 00:11:54.120
snapshots of the same page,
and with some spreadsheet

00:11:54.120 --> 00:11:57.990
manipulation skills, you can
actually try to plot the graph.

00:11:57.990 --> 00:12:03.840
So back in March 2017, when
one of our studios told me,

00:12:03.840 --> 00:12:05.910
hey, I'm going to target--

00:12:05.910 --> 00:12:08.820
I'm going to release
the game only in 2018,

00:12:08.820 --> 00:12:13.944
should I target Android 4.4,
I was able to go back to them

00:12:13.944 --> 00:12:15.360
and tell them,
hey, it looks to me

00:12:15.360 --> 00:12:20.580
that by 2018, it will cover
only 10% of the market,

00:12:20.580 --> 00:12:24.570
and lower Android
releases will cover

00:12:24.570 --> 00:12:26.520
even less than
that, so we're still

00:12:26.520 --> 00:12:29.520
looking at 80% of the market
if you only target Android 5

00:12:29.520 --> 00:12:31.690
and above.

00:12:31.690 --> 00:12:33.780
So that's useful
information, not only

00:12:33.780 --> 00:12:35.670
if you look at it right
now, but also if you

00:12:35.670 --> 00:12:36.990
try to plan for the future.

00:12:40.400 --> 00:12:43.630
Another sort of
fragmentation that we have

00:12:43.630 --> 00:12:45.520
is screen size fragmentation.

00:12:45.520 --> 00:12:49.390
It's still a problem,
because while I

00:12:49.390 --> 00:12:51.700
did find some public
sources, there were

00:12:51.700 --> 00:12:53.260
some issues with some of them.

00:12:53.260 --> 00:12:58.270
Again, devices sometimes
misreport the screen size.

00:12:58.270 --> 00:13:00.700
And then you have the official
numbers from the Android

00:13:00.700 --> 00:13:02.590
dashboard, but in
Android dashboard,

00:13:02.590 --> 00:13:06.120
they usually give you
the resolution in DPI,

00:13:06.120 --> 00:13:06.770
and not the--

00:13:06.770 --> 00:13:09.420
sorry, not resolution,
but the device sizes--

00:13:09.420 --> 00:13:11.020
you know, different
category buckets,

00:13:11.020 --> 00:13:14.500
like large, extra
large, and the DPI.

00:13:14.500 --> 00:13:16.120
And sometimes what
you're looking into

00:13:16.120 --> 00:13:18.310
is actual resolutions--

00:13:18.310 --> 00:13:20.355
how many devices are
running on one ATP?

00:13:20.355 --> 00:13:23.310
How many are running above that?

00:13:23.310 --> 00:13:25.690
And there's also
aspect ratios, right?

00:13:25.690 --> 00:13:27.730
Devices are getting
wider or taller

00:13:27.730 --> 00:13:30.070
depending on the orientation.

00:13:30.070 --> 00:13:33.230
And if you want to ask
yourself the question, hey,

00:13:33.230 --> 00:13:35.410
should I support
18 by nine devices?

00:13:35.410 --> 00:13:38.920
Should I support ultra-wide
21 by nine devices,

00:13:38.920 --> 00:13:42.910
there is no way to
gather public data that

00:13:42.910 --> 00:13:44.980
tells you how many
devices in the market

00:13:44.980 --> 00:13:47.380
are actually in
that aspect ratio.

00:13:47.380 --> 00:13:50.890
And that's even before getting
into display cutouts, which

00:13:50.890 --> 00:13:54.370
is the trending thing since
the Essential phone, I think,

00:13:54.370 --> 00:13:55.870
last summer.

00:13:55.870 --> 00:14:00.700
But expect to see based on
the Barcelona conference--

00:14:00.700 --> 00:14:03.640
Barcelona expo, you should
see a lot more of those

00:14:03.640 --> 00:14:06.520
in the coming year or
years, and that will make

00:14:06.520 --> 00:14:07.690
things even harder for you.

00:14:10.510 --> 00:14:17.650
So I think that one of
the biggest things for us

00:14:17.650 --> 00:14:21.910
was when Google released their
device catalog in the Play

00:14:21.910 --> 00:14:24.010
Console.

00:14:24.010 --> 00:14:28.060
It basically lets you see all
the supported Android devices,

00:14:28.060 --> 00:14:31.600
and you can click on each device
and see detailed hardware info.

00:14:31.600 --> 00:14:34.720
If you're not familiar with
that part of the console,

00:14:34.720 --> 00:14:37.450
you should definitely
get yourself

00:14:37.450 --> 00:14:41.524
familiar with that,
because it also

00:14:41.524 --> 00:14:43.690
lets you, instead of working
with the manifest file,

00:14:43.690 --> 00:14:45.439
you can actually work
directly from there,

00:14:45.439 --> 00:14:50.140
and exclude your game by
blacklisting it on devices

00:14:50.140 --> 00:14:52.100
that you don't want to support.

00:14:52.100 --> 00:14:55.360
So for example, if you
found a serious OpenGL

00:14:55.360 --> 00:14:58.960
bug that happens
on Nexus 9 device,

00:14:58.960 --> 00:15:03.310
maybe you want to remove that
until you actually fix the bug.

00:15:03.310 --> 00:15:06.130
So players won't download
your game on the Nexus 9,

00:15:06.130 --> 00:15:11.640
and then get crashes and
give you bad reviews.

00:15:11.640 --> 00:15:14.610
And what's even cooler is that
you can actually filter devices

00:15:14.610 --> 00:15:15.990
based on the different specs.

00:15:15.990 --> 00:15:21.270
So that works exactly in the
direction I mentioned earlier.

00:15:21.270 --> 00:15:24.720
That's like the SOC approach.

00:15:24.720 --> 00:15:26.950
And then I can raise
another question-- hey,

00:15:26.950 --> 00:15:30.400
we found a serious
OpenGL bug in Nexus 9.

00:15:30.400 --> 00:15:33.090
Maybe it's not
just with Nexus 9.

00:15:33.090 --> 00:15:37.240
Maybe it's also with other
Tegra K1-based devices.

00:15:37.240 --> 00:15:39.850
So the Nvidia Shield
tablet, for example,

00:15:39.850 --> 00:15:41.970
is running the exact same SOC.

00:15:41.970 --> 00:15:46.140
If you're blacklisting
Nexus 9, you

00:15:46.140 --> 00:15:48.480
might want to consider
blacklisting similar devices

00:15:48.480 --> 00:15:49.440
as well.

00:15:49.440 --> 00:15:52.470
And now you can actually
get all that information

00:15:52.470 --> 00:15:56.670
in a very easy way.

00:15:56.670 --> 00:15:58.350
But that's not
all, because what's

00:15:58.350 --> 00:16:02.310
even cooler is that it helps
us answer a different marketing

00:16:02.310 --> 00:16:03.020
questions, right.

00:16:03.020 --> 00:16:05.880
So if we have the
technical question coming

00:16:05.880 --> 00:16:08.610
from one of the studios,
hey, should I support devices

00:16:08.610 --> 00:16:12.510
with less than 1 gigabyte
of RAM in my game that

00:16:12.510 --> 00:16:15.012
is already released,
because I'm starting,

00:16:15.012 --> 00:16:16.470
you know, there is
a feature creep,

00:16:16.470 --> 00:16:18.720
and I'm trying to
implement new stuff,

00:16:18.720 --> 00:16:21.780
and suddenly I'm not so sure
that the older devices will

00:16:21.780 --> 00:16:25.380
work with that feature set.

00:16:25.380 --> 00:16:28.080
And so essentially the
marketing question they have is,

00:16:28.080 --> 00:16:30.240
what percent of the
player base is even

00:16:30.240 --> 00:16:34.480
running the game on devices with
less than 1 gigabyte of RAM?

00:16:34.480 --> 00:16:36.090
And an even better
question would

00:16:36.090 --> 00:16:39.900
be, hey, how is my game rated
on players that have devices

00:16:39.900 --> 00:16:41.730
with less than 1
gigabyte of RAM,

00:16:41.730 --> 00:16:45.510
because maybe there is a huge
percentage of them playing

00:16:45.510 --> 00:16:49.464
the game on these devices, but
they're already having a really

00:16:49.464 --> 00:16:50.880
bad experience,
and they're rating

00:16:50.880 --> 00:16:54.402
your game in a negative way.

00:16:54.402 --> 00:16:55.860
And essentially
what we really want

00:16:55.860 --> 00:16:57.660
to know-- let's
be greedy, right--

00:16:57.660 --> 00:17:00.300
what revenue percentage is
coming from devices with less

00:17:00.300 --> 00:17:02.370
than 1 gigabyte of RAM?

00:17:02.370 --> 00:17:05.849
And the Device Catalog
gives you answers

00:17:05.849 --> 00:17:08.339
to all these questions, right.

00:17:08.339 --> 00:17:10.230
In case you've never
seen it before--

00:17:10.230 --> 00:17:11.730
OK, these are fake
numbers, right.

00:17:11.730 --> 00:17:17.609
None of our games make $3
billion US a month yet.

00:17:17.609 --> 00:17:21.210
But let's say, 30
million devices

00:17:21.210 --> 00:17:24.810
with less than 1 gigabyte
of RAM represent only 13%

00:17:24.810 --> 00:17:26.200
of your user base.

00:17:26.200 --> 00:17:30.250
But at the same time, they
represent 2/3 of your revenue,

00:17:30.250 --> 00:17:31.900
and they gave you
a very good rating.

00:17:31.900 --> 00:17:35.380
So that's definitely-- I'd
go back to that developer

00:17:35.380 --> 00:17:37.530
and I tell him, no, you
shouldn't drop support

00:17:37.530 --> 00:17:38.530
for 1 gigabyte of RAM.

00:17:38.530 --> 00:17:40.169
If anything you
should drop support

00:17:40.169 --> 00:17:42.585
for everything else except
that, because of these numbers.

00:17:45.870 --> 00:17:48.630
So if you haven't used
Device Catalog, either

00:17:48.630 --> 00:17:50.910
for this purpose or
other purposes, that's

00:17:50.910 --> 00:17:53.880
one of the most powerful
tools, I think, for us

00:17:53.880 --> 00:17:56.970
on the Google Play console.

00:17:56.970 --> 00:18:01.200
It's something that you should
be familiar with, and use it.

00:18:01.200 --> 00:18:03.490
But then you also have
to remember a few things.

00:18:03.490 --> 00:18:06.400
The first one is that
market changes over time.

00:18:06.400 --> 00:18:10.050
So I talked about it earlier,
but if one of the developers

00:18:10.050 --> 00:18:12.900
asked me the same
question, and they're only

00:18:12.900 --> 00:18:17.460
developing a game that will
be released in late 2019,

00:18:17.460 --> 00:18:19.170
these numbers will also change.

00:18:19.170 --> 00:18:23.330
If 30% of the market right
now has less than 1 gigabyte

00:18:23.330 --> 00:18:27.930
of RAM, I can expect that number
to be smaller as time goes by.

00:18:27.930 --> 00:18:29.640
That's something to remember.

00:18:29.640 --> 00:18:32.400
And you also have to remember
that this data is just

00:18:32.400 --> 00:18:33.252
for your game.

00:18:33.252 --> 00:18:34.710
The more games you
have the better,

00:18:34.710 --> 00:18:38.370
because you can cross
reference, but it's

00:18:38.370 --> 00:18:42.120
skewed towards the games that
your player base is playing.

00:18:42.120 --> 00:18:45.360
If you're making
[INAUDIBLE] games,

00:18:45.360 --> 00:18:50.160
and suddenly you want to make a
new Battle Royale game, that's

00:18:50.160 --> 00:18:52.920
slightly different
markets, so maybe you

00:18:52.920 --> 00:18:56.670
shouldn't be looking at the same
devices as the current player

00:18:56.670 --> 00:18:57.880
base you have right now.

00:19:01.510 --> 00:19:06.700
So all of these advices
were for development.

00:19:06.700 --> 00:19:08.610
If you didn't listen
to that advice,

00:19:08.610 --> 00:19:14.270
because why test before release,
and nobody got time for that,

00:19:14.270 --> 00:19:15.930
there's another
tool, Android Vitals,

00:19:15.930 --> 00:19:18.960
that help you track
potential issues in the wild,

00:19:18.960 --> 00:19:21.380
after your game was
already released.

00:19:21.380 --> 00:19:23.700
Again, it's a great
tool on its own.

00:19:23.700 --> 00:19:27.420
Recently, for example, it helped
us track a rise of new issues

00:19:27.420 --> 00:19:30.660
that happened in already
stable games that

00:19:30.660 --> 00:19:31.830
were in maintenance mode.

00:19:31.830 --> 00:19:33.040
So no new updates.

00:19:33.040 --> 00:19:34.680
They're already
out in the market,

00:19:34.680 --> 00:19:39.090
and suddenly there was an
uptick in the crash rate in one

00:19:39.090 --> 00:19:42.030
of these games.

00:19:42.030 --> 00:19:45.120
So that's a good indication,
even if nobody is actually

00:19:45.120 --> 00:19:48.300
looking at the numbers for your
own internal crash analysis

00:19:48.300 --> 00:19:49.240
tool.

00:19:49.240 --> 00:19:53.340
If there's somebody
to look at the vitals,

00:19:53.340 --> 00:19:56.700
then you've got
your bases covered.

00:19:56.700 --> 00:19:59.730
But in the context
of device targeting,

00:19:59.730 --> 00:20:01.770
we can use that and
the Device Catalog

00:20:01.770 --> 00:20:04.330
together to actually
close the loop.

00:20:04.330 --> 00:20:07.770
So for example, if I see
a specific crash, right--

00:20:07.770 --> 00:20:08.970
an increase in crash.

00:20:08.970 --> 00:20:13.710
I get bad behavior report
from Android Vitals,

00:20:13.710 --> 00:20:16.740
I need to ask myself the
question, should I fix this,

00:20:16.740 --> 00:20:20.629
or should I exclude devices
that have this kind of bug?

00:20:20.629 --> 00:20:22.170
So again, this isn't
a recommendation

00:20:22.170 --> 00:20:24.660
to test in
production, but if you

00:20:24.660 --> 00:20:30.150
look at this specific example,
the Samsung Galaxy S8 suddenly

00:20:30.150 --> 00:20:35.190
showed almost a quarter of
the sessions in that device

00:20:35.190 --> 00:20:39.220
crashed, and older devices
didn't have any problems.

00:20:39.220 --> 00:20:41.280
So that brings up
the question, hey,

00:20:41.280 --> 00:20:44.490
is this problem unique
to some Galaxy S8,

00:20:44.490 --> 00:20:46.140
or maybe it's
because it's running

00:20:46.140 --> 00:20:48.060
a new version of
Android, or maybe it's

00:20:48.060 --> 00:20:50.610
because it's a new SOC.

00:20:50.610 --> 00:20:54.810
And if I use Android Vitals
and Device Catalog together,

00:20:54.810 --> 00:20:59.640
I can actually try to narrow
the question down and find

00:20:59.640 --> 00:21:02.010
what the actual
problem is, and then it

00:21:02.010 --> 00:21:04.500
would be easier for me to
decide if I want to fix it

00:21:04.500 --> 00:21:05.730
or if I want to exclude it.

00:21:08.280 --> 00:21:13.400
So that's basically how we
already use some of the tools

00:21:13.400 --> 00:21:15.970
that Google provides us with.

00:21:15.970 --> 00:21:18.180
We'd obviously like to see more.

00:21:18.180 --> 00:21:22.190
OK, so for anyone here from
Google, this is my wish list.

00:21:22.190 --> 00:21:25.250
We want to see more filters
in the Device Catalog,

00:21:25.250 --> 00:21:28.294
and the same applies to
Android Developer dashboards.

00:21:28.294 --> 00:21:30.710
Again, the big difference is
that Device Catalog gives you

00:21:30.710 --> 00:21:33.920
numbers based on the
game you already have.

00:21:33.920 --> 00:21:36.410
Android Developer
dashboards are general,

00:21:36.410 --> 00:21:38.250
for the whole ecosystem.

00:21:38.250 --> 00:21:41.490
So you should
really rely on both.

00:21:41.490 --> 00:21:46.610
So for example, I want to
see what subset of the market

00:21:46.610 --> 00:21:50.870
is already capable
to run 64-bit games.

00:21:50.870 --> 00:21:54.440
If Google just announced
recently that by 2019 you

00:21:54.440 --> 00:21:56.990
must be compliant with
64-bit, that's great,

00:21:56.990 --> 00:21:59.840
but maybe I don't want to
manage two different versions.

00:21:59.840 --> 00:22:02.280
Maybe I want to drop 32-bit.

00:22:02.280 --> 00:22:06.140
And if 64-bit is right now
just 20% of the market,

00:22:06.140 --> 00:22:09.020
or if it's 80% of that
[INAUDIBLE] market,

00:22:09.020 --> 00:22:14.360
I'll have to answer that
question in a different way.

00:22:14.360 --> 00:22:16.670
We'd also love to see
resolution and aspect

00:22:16.670 --> 00:22:20.570
ratios and historical data,
because otherwise I'll

00:22:20.570 --> 00:22:23.750
have to keep going to the
internet Wayback Machine

00:22:23.750 --> 00:22:26.970
to get older snapshots.

00:22:26.970 --> 00:22:30.190
And then just before--

00:22:30.190 --> 00:22:32.090
I didn't even mention
Firebase Test Lab,

00:22:32.090 --> 00:22:33.490
which is another great tool.

00:22:33.490 --> 00:22:37.130
It was mentioned
in a previous talk.

00:22:37.130 --> 00:22:39.380
But then again,
what I'd love to see

00:22:39.380 --> 00:22:42.560
there is some kind of
coverage-driven approach

00:22:42.560 --> 00:22:44.030
for SOCs.

00:22:44.030 --> 00:22:47.090
So if Google is
giving us the ability

00:22:47.090 --> 00:22:51.140
to test on 150 device
config combinations,

00:22:51.140 --> 00:22:52.820
I want to see what
I already covered.

00:22:52.820 --> 00:22:56.700
I want to see that I
covered the Snapdragon A20.

00:22:56.700 --> 00:23:00.530
I wanted to see that I covered
that Exynos chip so I don't

00:23:00.530 --> 00:23:03.830
have to test on two devices
that are supposedly different,

00:23:03.830 --> 00:23:07.860
but actually they have
the exact same internals.

00:23:07.860 --> 00:23:11.700
And last but not
least, a store listing

00:23:11.700 --> 00:23:14.400
experiments-- another part
of the Device Catalog.

00:23:14.400 --> 00:23:17.430
It's something that is actually
being used more by our business

00:23:17.430 --> 00:23:19.070
performance team.

00:23:19.070 --> 00:23:21.630
But again, if you could
integrate Device Catalog

00:23:21.630 --> 00:23:26.640
capabilities into that so
we'd be able to A/B test

00:23:26.640 --> 00:23:28.950
on two different
device segments,

00:23:28.950 --> 00:23:31.230
so one with a large
amount of RAM,

00:23:31.230 --> 00:23:33.090
another with smaller
amount of RAM,

00:23:33.090 --> 00:23:35.940
see if it works any differently,
that might give us new insight

00:23:35.940 --> 00:23:39.440
that we don't have right now.

00:23:39.440 --> 00:23:41.170
OK, while I'm here,
I would also love

00:23:41.170 --> 00:23:44.897
to see language and local
support for A/B testing there.

00:23:44.897 --> 00:23:46.480
It's not technical,
but it's something

00:23:46.480 --> 00:23:48.520
that the [INAUDIBLE]
people at my company

00:23:48.520 --> 00:23:51.850
told me that I
should be mentioning.

00:23:51.850 --> 00:23:54.150
But that's basically
it from my side,

00:23:54.150 --> 00:23:57.840
so thank you very
much for listening.

