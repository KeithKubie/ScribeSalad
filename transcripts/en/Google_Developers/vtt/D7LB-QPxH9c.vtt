WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.976
[MUSIC PLAYING]

00:00:07.409 --> 00:00:08.950
LYNN JEPSEN: Good
afternoon everyone,

00:00:08.950 --> 00:00:10.920
and welcome to
our session on how

00:00:10.920 --> 00:00:13.590
to incorporate what's
new in material design

00:00:13.590 --> 00:00:15.690
into your existing code base.

00:00:15.690 --> 00:00:16.920
My name is Lynn Jepsen.

00:00:16.920 --> 00:00:20.007
I'm the engineering lead
of Materials Web Team.

00:00:20.007 --> 00:00:21.840
ADRIAN SECORD: And my
name is Adrian Secord.

00:00:21.840 --> 00:00:25.346
I'm the eng lead for our
shared code libraries.

00:00:25.346 --> 00:00:26.970
LYNN JEPSEN: So we're
going to show you

00:00:26.970 --> 00:00:30.000
how to incorporate all the new
goodness of material design

00:00:30.000 --> 00:00:32.640
into your existing
developer workflow.

00:00:32.640 --> 00:00:34.890
You're probably in this
talk because you've already

00:00:34.890 --> 00:00:36.600
built an application.

00:00:36.600 --> 00:00:38.820
And you're wondering,
all these new material

00:00:38.820 --> 00:00:42.780
tools and components, they
sound awesome, but realistically

00:00:42.780 --> 00:00:47.160
speaking, can I incorporate
them into my existing codebase.

00:00:47.160 --> 00:00:48.360
Answer is yes.

00:00:48.360 --> 00:00:48.870
OK?

00:00:48.870 --> 00:00:52.800
We're going to show you how
to update pieces of your app

00:00:52.800 --> 00:00:55.050
to use material
design without feeling

00:00:55.050 --> 00:00:59.620
like you have to rewrite
your entire application.

00:00:59.620 --> 00:01:03.100
But first, let's talk about
some of the new things

00:01:03.100 --> 00:01:06.520
in the material design
ecosystem and how that supports

00:01:06.520 --> 00:01:08.980
our existing MDC libraries.

00:01:08.980 --> 00:01:11.440
Then we're going to do a
walk-through of the code

00:01:11.440 --> 00:01:14.645
and show you some example
code actually using MDC.

00:01:14.645 --> 00:01:16.270
And then we're going
to talk about some

00:01:16.270 --> 00:01:21.820
of the benefits of using MDC
in your existing codebase.

00:01:21.820 --> 00:01:24.000
So what's new in material?

00:01:24.000 --> 00:01:26.760
There are a lot of new things
in material design this year.

00:01:26.760 --> 00:01:28.500
We've done a lot
of announcements.

00:01:28.500 --> 00:01:31.410
We've done improvements
to our guidance.

00:01:31.410 --> 00:01:33.750
We've had improvements
to our components.

00:01:33.750 --> 00:01:37.500
And we've launched a brand
new material tools suite.

00:01:37.500 --> 00:01:40.110
We're going to show you
how each of these tools

00:01:40.110 --> 00:01:43.640
supports developers.

00:01:43.640 --> 00:01:46.220
The first tool you should
absolutely know about

00:01:46.220 --> 00:01:48.680
is Material Design Guidance.

00:01:48.680 --> 00:01:50.690
We've really
expanded and enhanced

00:01:50.690 --> 00:01:52.730
these articles this year.

00:01:52.730 --> 00:01:56.660
So it starts with an overview
of the material metaphor,

00:01:56.660 --> 00:01:59.300
and then it dives into
some of the foundational UI

00:01:59.300 --> 00:02:03.990
practices around color,
topography, elevation.

00:02:03.990 --> 00:02:06.650
Now this is a really good
interesting reading but,

00:02:06.650 --> 00:02:08.419
perhaps, a bit
theoretical when you're

00:02:08.419 --> 00:02:11.150
trying to incorporate material
design into your existing

00:02:11.150 --> 00:02:12.320
codebase.

00:02:12.320 --> 00:02:16.760
So Material Design Guidelines
also provides tactical guidance

00:02:16.760 --> 00:02:20.300
on how to use our components
like button, at bar,

00:02:20.300 --> 00:02:24.310
text field, et cetera.

00:02:24.310 --> 00:02:27.070
These articles, they're
applicable to developers, not

00:02:27.070 --> 00:02:28.270
just designers.

00:02:28.270 --> 00:02:30.430
So let me give you an example.

00:02:30.430 --> 00:02:34.960
Say your designer makes a mock
with a Material Design button.

00:02:34.960 --> 00:02:37.010
The button, it shows text.

00:02:37.010 --> 00:02:40.060
But when you go to put
the text inside the button

00:02:40.060 --> 00:02:44.080
inside your application,
the text wraps to two lines.

00:02:44.080 --> 00:02:46.360
You're not sure
you should increase

00:02:46.360 --> 00:02:51.160
the width of the button
or just let the text wrap.

00:02:51.160 --> 00:02:54.070
If you read the article for
the Material Design button,

00:02:54.070 --> 00:02:56.200
your question is
answered quite quickly.

00:02:56.200 --> 00:02:58.360
There is clear guidance
that you should not

00:02:58.360 --> 00:03:00.820
let the text wrap for a button.

00:03:00.820 --> 00:03:05.260
These articles, they help
developers guess correctly

00:03:05.260 --> 00:03:08.260
when you're in the middle
of feature development.

00:03:08.260 --> 00:03:10.090
Now to make sure that
these articles are

00:03:10.090 --> 00:03:13.120
applicable to developers,
we have our own engineers,

00:03:13.120 --> 00:03:16.960
like myself and Adrian, actually
collaborate with designers

00:03:16.960 --> 00:03:19.180
as they're drafting
these articles.

00:03:19.180 --> 00:03:22.060
Our own collective
engineering experience,

00:03:22.060 --> 00:03:23.890
it provides a lot of
perspective on what

00:03:23.890 --> 00:03:28.912
sorts of problems developers
frequently encounter.

00:03:28.912 --> 00:03:31.370
ADRIAN SECORD: So that first
part, with all the guidelines,

00:03:31.370 --> 00:03:33.810
really feeds into the second
part we want to talk about,

00:03:33.810 --> 00:03:35.270
which is MDC.

00:03:35.270 --> 00:03:38.210
So MDC stands for
material components,

00:03:38.210 --> 00:03:40.220
and it's our set
of shared libraries

00:03:40.220 --> 00:03:43.370
that you can use to build
material apps and websites.

00:03:43.370 --> 00:03:45.800
It's actually four
separate libraries.

00:03:45.800 --> 00:03:48.020
And they're built to match
the guidelines that you

00:03:48.020 --> 00:03:50.570
see on the design website.

00:03:50.570 --> 00:03:54.530
We want to support developers
where they're at right now so

00:03:54.530 --> 00:03:57.770
the libraries, the platforms
we choose are chosen based

00:03:57.770 --> 00:04:00.597
on where you're developing.

00:04:00.597 --> 00:04:02.680
So the first one isn't
going to be too surprising.

00:04:02.680 --> 00:04:05.160
We have a library
called MDC Android.

00:04:05.160 --> 00:04:08.020
MDC Android is the
open source evolution

00:04:08.020 --> 00:04:11.200
of Android's previous
design support library.

00:04:11.200 --> 00:04:12.910
So essentially,
we've taken a piece

00:04:12.910 --> 00:04:14.590
of what used to be
inside of Android

00:04:14.590 --> 00:04:17.470
and pulled it out into the
open source and to GitHub

00:04:17.470 --> 00:04:20.350
so that you can use it
directly, interact with us,

00:04:20.350 --> 00:04:23.590
and work with us
on the GitHub repo.

00:04:23.590 --> 00:04:25.741
The second one is MDC iOS.

00:04:25.741 --> 00:04:28.240
This is the open source version,
much similar to the Android

00:04:28.240 --> 00:04:31.810
one, of Google's
internal UI library.

00:04:31.810 --> 00:04:33.820
So you might be a
little bit surprised

00:04:33.820 --> 00:04:35.780
that Google does
iOS development.

00:04:35.780 --> 00:04:37.210
I'm not sure if
you are or aren't.

00:04:37.210 --> 00:04:38.710
Depends on where
you're coming from.

00:04:38.710 --> 00:04:40.630
But actually, Google
is dedicated to serving

00:04:40.630 --> 00:04:44.200
its customers on whatever
platform we find them.

00:04:44.200 --> 00:04:47.650
Fun fact, actually, MDC iOS was
the first open source library

00:04:47.650 --> 00:04:50.260
that Material put
out way back in 2015.

00:04:50.260 --> 00:04:52.630
And it's been hanging out on
the GitHub repo since then.

00:04:52.630 --> 00:04:54.940
We've been iterating and
developing and interacting

00:04:54.940 --> 00:04:56.170
with everyone there.

00:04:56.170 --> 00:05:00.115
Another fun fact
actually, at I/O 2018,

00:05:00.115 --> 00:05:02.740
there are as many developers
who say they're developing

00:05:02.740 --> 00:05:06.290
for iOS as for Android.

00:05:06.290 --> 00:05:08.450
The third platform,
you might be not quite

00:05:08.450 --> 00:05:11.370
as familiar with depending on
what talks and things you've

00:05:11.370 --> 00:05:14.330
been going to at I/O this
year, but it's Flutter.

00:05:14.330 --> 00:05:16.310
So Flutter is a UI framework.

00:05:16.310 --> 00:05:17.900
It's written in
the Dart language.

00:05:17.900 --> 00:05:20.750
And you write your app once,
and then it compiles down

00:05:20.750 --> 00:05:23.570
to native Android and iOS apps.

00:05:23.570 --> 00:05:25.910
Flutter is currently in
its first public beta.

00:05:25.910 --> 00:05:28.389
It's developing a lot
of buzz with developers.

00:05:28.389 --> 00:05:30.680
And you might have actually
seen the talk earlier today

00:05:30.680 --> 00:05:32.720
by one of our
colleagues, Will Larche,

00:05:32.720 --> 00:05:35.777
called Code Beautiful UI with
Flutter and Material Design.

00:05:35.777 --> 00:05:38.360
If you didn't see the talk and
you're interested in seeing it,

00:05:38.360 --> 00:05:42.790
you can actually catch it on
YouTube in a couple of hours.

00:05:42.790 --> 00:05:46.030
LYNN JEPSEN: For web, we focus
on providing two core web

00:05:46.030 --> 00:05:49.390
technologies, CSS
and JavaScript.

00:05:49.390 --> 00:05:51.280
So as many of you
probably know, the web

00:05:51.280 --> 00:05:53.930
is a very diverse platform.

00:05:53.930 --> 00:05:56.410
There are a lot of ways
to do web development.

00:05:56.410 --> 00:05:58.870
We found that providing
CSS and JavaScript

00:05:58.870 --> 00:06:03.430
makes MDC Web usable by
multiple web frameworks.

00:06:03.430 --> 00:06:06.580
We've also developed a way
of wrapping our JavaScript so

00:06:06.580 --> 00:06:09.650
that we can use it in
other web frameworks.

00:06:09.650 --> 00:06:12.160
Now we've heard that a lot
of the existing codebases

00:06:12.160 --> 00:06:17.020
are written in one web
framework in particular, React,

00:06:17.020 --> 00:06:20.740
which is why today, we'd
like to introduce a new MDC

00:06:20.740 --> 00:06:22.720
library for React.

00:06:22.720 --> 00:06:26.650
It depends on the CSS and
JavaScript of MDC Web.

00:06:26.650 --> 00:06:28.840
Now this library
is still in alpha,

00:06:28.840 --> 00:06:31.150
but we encourage you to go
and check it out and give us

00:06:31.150 --> 00:06:32.360
feedback on what's working.

00:06:34.494 --> 00:06:36.910
ADRIAN SECORD: So we want to
emphasize that all of the MDC

00:06:36.910 --> 00:06:38.710
libraries are open source.

00:06:38.710 --> 00:06:40.450
They're there, out
there on GitHub

00:06:40.450 --> 00:06:42.820
for you to see, to play
with, to interact with,

00:06:42.820 --> 00:06:45.190
hopefully to contribute
to, even at the very worst,

00:06:45.190 --> 00:06:47.859
if it's just sending us some
issues when you find a bug.

00:06:47.859 --> 00:06:49.900
And we want to make sure
that these libraries use

00:06:49.900 --> 00:06:52.000
modern development
practices and that they're

00:06:52.000 --> 00:06:54.130
aligned with the kinds
of development workflows

00:06:54.130 --> 00:06:57.770
that you yourselves are using.

00:06:57.770 --> 00:06:59.520
A second piece I'd
like to introduce here,

00:06:59.520 --> 00:07:01.269
which we've seen before
in previous talks,

00:07:01.269 --> 00:07:03.440
is called the
Material Theme Editor.

00:07:03.440 --> 00:07:04.652
This is a plug-in for Sketch.

00:07:04.652 --> 00:07:06.110
If you're not
familiar Sketch, it's

00:07:06.110 --> 00:07:08.000
a very popular design tool.

00:07:08.000 --> 00:07:10.550
People use it for
mockups, for prototyping,

00:07:10.550 --> 00:07:11.910
that sort of thing.

00:07:11.910 --> 00:07:15.230
And if you use the Material
Theme Editor inside of Sketch,

00:07:15.230 --> 00:07:18.785
the cool thing is it knows
all about the MDC components.

00:07:18.785 --> 00:07:20.660
So you have a lot of
confidence that whatever

00:07:20.660 --> 00:07:23.300
gets designed by either
yourself or your designer

00:07:23.300 --> 00:07:26.210
will translate
really well to code.

00:07:26.210 --> 00:07:29.450
A second piece that complements
the Material Theme Editor

00:07:29.450 --> 00:07:30.530
is Gallery.

00:07:30.530 --> 00:07:35.990
So Gallery you can use to
sort of share different mocks,

00:07:35.990 --> 00:07:38.750
collaborate, comment
on them with all

00:07:38.750 --> 00:07:40.370
your different team members.

00:07:40.370 --> 00:07:43.040
But the neat thing is if
you're using the theme editor,

00:07:43.040 --> 00:07:45.520
Gallery basically sucks in
a whole bunch of metadata

00:07:45.520 --> 00:07:47.750
that came from using
the theme editor

00:07:47.750 --> 00:07:49.280
and can display
interactive things

00:07:49.280 --> 00:07:53.540
like measurements, fonts, what
the colors are that are set.

00:07:53.540 --> 00:07:55.700
And even probably more
importantly for developers

00:07:55.700 --> 00:07:58.370
is that you can tap or
click on any of the elements

00:07:58.370 --> 00:08:00.890
that you see in a
mock and get the link

00:08:00.890 --> 00:08:03.101
to the appropriate
code documentation.

00:08:03.101 --> 00:08:04.600
So here, although
you can't see this

00:08:04.600 --> 00:08:06.560
because it's probably
really far away,

00:08:06.560 --> 00:08:08.800
the user has highlighted
that first field on the top.

00:08:08.800 --> 00:08:10.550
And it's showing some
measurements in red.

00:08:10.550 --> 00:08:11.460
That kind of thing.

00:08:11.460 --> 00:08:13.160
But even more
importantly is the part

00:08:13.160 --> 00:08:15.160
over on the right where
it's actually giving you

00:08:15.160 --> 00:08:18.515
a link directly into the Android
docs for the MDC text field.

00:08:18.515 --> 00:08:21.140
This is really great because you
know that you're jumping right

00:08:21.140 --> 00:08:23.320
into the right thing, and
you're not trying to figure out,

00:08:23.320 --> 00:08:24.560
oh, where did that doc go.

00:08:24.560 --> 00:08:25.650
How do I get there?

00:08:25.650 --> 00:08:28.420
So this is a really fantastic
way to collaborate with design.

00:08:31.200 --> 00:08:34.650
So using MDC in your codebase,
we've been talking about this.

00:08:34.650 --> 00:08:37.080
Let's get right
down into some code.

00:08:37.080 --> 00:08:39.840
We developed MDC to be
incorporated directly

00:08:39.840 --> 00:08:41.039
into your codebase.

00:08:41.039 --> 00:08:44.790
We really, really wanted
to avoid forcing you

00:08:44.790 --> 00:08:47.340
into getting into
some huge framework

00:08:47.340 --> 00:08:49.140
where you had to do a
whole bunch of set up

00:08:49.140 --> 00:08:51.600
or had something where
it sent its tentacles

00:08:51.600 --> 00:08:53.520
into all the different
aspects of your app.

00:08:53.520 --> 00:08:57.540
Instead, we wanted you to be
able to take, say, a MDC button

00:08:57.540 --> 00:08:58.980
and plunk it down in your app.

00:08:58.980 --> 00:09:01.440
And get it using, get
it working right away

00:09:01.440 --> 00:09:04.832
and not have to necessarily
buy into a giant framework.

00:09:04.832 --> 00:09:06.540
So you're going to
see next some examples

00:09:06.540 --> 00:09:10.050
from Android, iOS and the web.

00:09:10.050 --> 00:09:14.990
So first, let's pretend that
you are about to go and get

00:09:14.990 --> 00:09:16.790
yourself a new puppy.

00:09:16.790 --> 00:09:18.890
So you're very
excited about this,

00:09:18.890 --> 00:09:22.220
and you're up on the dog
adoption websites, as one does.

00:09:22.220 --> 00:09:25.520
And of course, everyone knows
the most important part about

00:09:25.520 --> 00:09:28.100
bringing a new family
member into your family is--

00:09:28.100 --> 00:09:29.390
or maybe the most fun part--

00:09:29.390 --> 00:09:31.280
is choosing the name.

00:09:31.280 --> 00:09:32.844
So you're a developer.

00:09:32.844 --> 00:09:34.010
You've got to choose a name.

00:09:34.010 --> 00:09:36.410
You're coming up with all
sorts of different suggestions

00:09:36.410 --> 00:09:38.889
from yourself and your
family, your friends.

00:09:38.889 --> 00:09:39.930
What are you going to do?

00:09:39.930 --> 00:09:43.132
You're going to write an app
to track all these names.

00:09:43.132 --> 00:09:44.840
So we're going to
build our own app here.

00:09:44.840 --> 00:09:46.730
This is our View Controller.

00:09:46.730 --> 00:09:51.350
This is going to start in
Xcode, so it's written in Swift.

00:09:51.350 --> 00:09:53.750
MDC works just fine
with Objective-C.

00:09:53.750 --> 00:09:56.690
And this is really just starting
with a standard template

00:09:56.690 --> 00:09:57.830
that comes out of Xcode.

00:09:57.830 --> 00:10:01.610
Xcode, by the way, is Apple's
ID for generating code.

00:10:01.610 --> 00:10:04.190
And this just comes straight
out of the default template

00:10:04.190 --> 00:10:06.650
and loads up some example data.

00:10:06.650 --> 00:10:08.490
And then just gets a
view on the screen.

00:10:08.490 --> 00:10:12.770
So if you start with this, you
get this very, very basic dog

00:10:12.770 --> 00:10:14.070
name tracking app.

00:10:14.070 --> 00:10:14.570
All right.

00:10:14.570 --> 00:10:16.125
So we have our dog names here.

00:10:16.125 --> 00:10:16.750
It's wonderful.

00:10:16.750 --> 00:10:18.570
We've collected a
whole bunch of them.

00:10:18.570 --> 00:10:21.330
But of course, as you go about
your day and talking to people,

00:10:21.330 --> 00:10:23.240
you're going to
find even more dog

00:10:23.240 --> 00:10:26.570
names that you want to track and
rank in your dog name tracking

00:10:26.570 --> 00:10:27.560
app.

00:10:27.560 --> 00:10:30.350
So this is a great
example of using

00:10:30.350 --> 00:10:32.900
a material floating
action button.

00:10:32.900 --> 00:10:35.150
So instead of you having
to go into the code

00:10:35.150 --> 00:10:37.070
and add something to
an array somewhere,

00:10:37.070 --> 00:10:41.150
you could just tap the button
and add a name that way.

00:10:41.150 --> 00:10:43.430
So first off, you
got to get the code.

00:10:43.430 --> 00:10:44.152
Right?

00:10:44.152 --> 00:10:45.860
So our code, of course,
exists in GitHub.

00:10:45.860 --> 00:10:47.810
You can download that
immediately using Git,

00:10:47.810 --> 00:10:48.890
all the normal things.

00:10:48.890 --> 00:10:51.530
But at least on iOS, the
standard way to get code

00:10:51.530 --> 00:10:52.880
is to use a package manager.

00:10:52.880 --> 00:10:56.734
So a CocoaPods is a
package manager on iOS.

00:10:56.734 --> 00:10:59.150
And here is a pod file-- if
you're not familiar with this,

00:10:59.150 --> 00:11:00.600
it's not very
exciting-- but what

00:11:00.600 --> 00:11:04.100
you have to do is just reference
this material components pod.

00:11:04.100 --> 00:11:08.480
And then run pod install to
download material components

00:11:08.480 --> 00:11:10.820
and all of its dependencies
onto your local disk

00:11:10.820 --> 00:11:13.100
so you can use them.

00:11:13.100 --> 00:11:15.230
The next step is just
to wire up this Material

00:11:15.230 --> 00:11:17.510
button the exact same
way you would normally.

00:11:17.510 --> 00:11:19.820
So back in the Swift code,
you can see at the top,

00:11:19.820 --> 00:11:22.340
we're just importing
material components.

00:11:22.340 --> 00:11:25.170
And then next, we're
creating a floating button.

00:11:25.170 --> 00:11:28.350
So the class name in this
case is MDC Floating Button.

00:11:28.350 --> 00:11:29.900
So we're creating
that new button.

00:11:29.900 --> 00:11:32.924
And then we're setting its
icon and its background color

00:11:32.924 --> 00:11:34.340
and putting in the
view hierarchy,

00:11:34.340 --> 00:11:36.420
just as you would
a normal button.

00:11:36.420 --> 00:11:39.710
So if we do all this, you
get this nice list view.

00:11:39.710 --> 00:11:42.560
And in the bottom corner there,
we have a nice little purple

00:11:42.560 --> 00:11:44.870
FAB, that you can-- sorry,
floating action button--

00:11:44.870 --> 00:11:45.860
that you can tap.

00:11:45.860 --> 00:11:47.900
Then you get all the
normal little ink ripples

00:11:47.900 --> 00:11:49.610
and the different
effects you'd expect

00:11:49.610 --> 00:11:50.651
for pretty much for free.

00:11:53.350 --> 00:11:55.980
LYNN JEPSEN: Let's talk about
a completely different example

00:11:55.980 --> 00:11:56.970
for the web.

00:11:56.970 --> 00:12:00.330
Say you have an
existing HTML form.

00:12:00.330 --> 00:12:03.450
I'm going to show you how to
replace just this input element

00:12:03.450 --> 00:12:06.840
with a new MDC text field.

00:12:06.840 --> 00:12:10.530
MDC Web is installable
through Node Package Manager.

00:12:10.530 --> 00:12:12.870
You just have to run
this one line command.

00:12:12.870 --> 00:12:15.780
It's both easy and fast
to install our code

00:12:15.780 --> 00:12:18.472
into your codebase.

00:12:18.472 --> 00:12:20.430
You'll need to actually
update your source code

00:12:20.430 --> 00:12:22.182
to use MDC Web.

00:12:22.182 --> 00:12:23.640
So let's start with
the text field.

00:12:23.640 --> 00:12:29.100
You just need to copy our text
field HTML into your form.

00:12:29.100 --> 00:12:32.830
Now our text field HTML
is documented on GitHub.

00:12:32.830 --> 00:12:36.700
Here we have the documentation
for the field component.

00:12:36.700 --> 00:12:39.160
The HTML structure is
called out quite early

00:12:39.160 --> 00:12:42.480
in the documentation so that
you can quickly copy paste.

00:12:42.480 --> 00:12:44.380
And each of our
components for Web

00:12:44.380 --> 00:12:48.350
follow this
documentation format.

00:12:48.350 --> 00:12:51.040
The next step is to actually
import our SAS files

00:12:51.040 --> 00:12:52.780
into your SAS files.

00:12:52.780 --> 00:12:56.050
SAS is a technology
which compiles into CSS,

00:12:56.050 --> 00:12:58.420
and it works with existing
open source bundle

00:12:58.420 --> 00:13:02.000
systems like Webpack.

00:13:02.000 --> 00:13:04.280
Finally, you need to
initialize the JavaScript

00:13:04.280 --> 00:13:05.600
on the HTML element.

00:13:08.250 --> 00:13:09.510
And this is all you need.

00:13:09.510 --> 00:13:12.810
You get a nice lovely text
field working on your website.

00:13:12.810 --> 00:13:14.640
Users can interact
with this text field

00:13:14.640 --> 00:13:18.060
like they would any
field on any website.

00:13:18.060 --> 00:13:21.270
And check out the animation of
the line ripple in the floating

00:13:21.270 --> 00:13:22.260
label.

00:13:22.260 --> 00:13:25.740
This is Material Design
approved animation.

00:13:25.740 --> 00:13:28.437
It provides valuable
feedback to the users

00:13:28.437 --> 00:13:30.020
who are interacting
with your website.

00:13:32.509 --> 00:13:33.550
ADRIAN SECORD: All right.

00:13:33.550 --> 00:13:36.767
So back to our little dog name
tracking app, which, you know,

00:13:36.767 --> 00:13:38.350
the first thing you
should probably do

00:13:38.350 --> 00:13:40.030
is come up with a
better name than that.

00:13:40.030 --> 00:13:42.359
But let's pretend you're
really into this app.

00:13:42.359 --> 00:13:43.900
You're very excited
about it, and you

00:13:43.900 --> 00:13:45.760
think it's the best
one of these out there.

00:13:45.760 --> 00:13:48.250
And you decide to push
it a little further.

00:13:48.250 --> 00:13:50.520
You work up, with
maybe a friend,

00:13:50.520 --> 00:13:52.460
a branding story for your app.

00:13:52.460 --> 00:13:54.736
So it's not just a
simple app anymore.

00:13:54.736 --> 00:13:56.110
You want to make
sure that you've

00:13:56.110 --> 00:13:58.540
expressed all the right
typography and color

00:13:58.540 --> 00:14:02.180
system and maybe different
elements of the app

00:14:02.180 --> 00:14:04.930
so it all comes together and
works as a single branding

00:14:04.930 --> 00:14:05.800
story.

00:14:05.800 --> 00:14:07.900
And let's pretend in
your graphic design

00:14:07.900 --> 00:14:09.760
aspect of your brand,
you're really more

00:14:09.760 --> 00:14:13.850
into sharp corners and edges
than you are of these round

00:14:13.850 --> 00:14:16.090
circle type things.

00:14:16.090 --> 00:14:17.890
This is an excellent
example of something

00:14:17.890 --> 00:14:19.967
that we can use
material theming for.

00:14:19.967 --> 00:14:21.550
You might have heard
material theming.

00:14:21.550 --> 00:14:23.300
I hope you've heard
about material theming

00:14:23.300 --> 00:14:25.666
in the other talks
in I/O. But this

00:14:25.666 --> 00:14:27.040
is a great time
where we can take

00:14:27.040 --> 00:14:28.990
a little bit of
branding, sharp corners,

00:14:28.990 --> 00:14:31.750
and apply it to a really
visual, very forward

00:14:31.750 --> 00:14:34.330
element in your design,
which is the FAB.

00:14:34.330 --> 00:14:36.370
So what we're going to
do is transform our FAB

00:14:36.370 --> 00:14:39.370
from the circular one we get by
default into this nice diamond

00:14:39.370 --> 00:14:41.450
shape.

00:14:41.450 --> 00:14:43.580
So back in the
code here, anything

00:14:43.580 --> 00:14:46.040
in MDC iOS that you
can affect its shape

00:14:46.040 --> 00:14:48.285
takes a thing called
a shape generator.

00:14:48.285 --> 00:14:49.910
And in the highlighted
code here, we're

00:14:49.910 --> 00:14:51.380
creating the shape generator.

00:14:51.380 --> 00:14:53.990
And we actually have
given you, in the library,

00:14:53.990 --> 00:14:56.940
a few standard shape
generators that you can use.

00:14:56.940 --> 00:14:59.390
They do simple things like
take rectangles and cut off

00:14:59.390 --> 00:15:01.970
corners at various
angles or maybe they

00:15:01.970 --> 00:15:04.809
round off corners at various
radii, that sort of thing.

00:15:04.809 --> 00:15:06.350
And in this case,
what we're doing is

00:15:06.350 --> 00:15:07.808
we're going to take
a square, which

00:15:07.808 --> 00:15:10.950
is the bounding box
the original button.

00:15:10.950 --> 00:15:13.460
And we're going to cut off
its four corners at 45 degree

00:15:13.460 --> 00:15:15.579
angles so we get this
nice diamond shape.

00:15:15.579 --> 00:15:17.870
So that's all that's happening
in the highlighted code.

00:15:17.870 --> 00:15:21.140
We create the shape generator,
and we assign it to the FAB.

00:15:21.140 --> 00:15:23.720
And if we do that and rerun
our code, we get this.

00:15:23.720 --> 00:15:26.210
So you have this nice
diamond shaped FAB popping up

00:15:26.210 --> 00:15:28.580
in the bottom, and you
get all the normal effects

00:15:28.580 --> 00:15:30.290
that you would expect
like the ripple

00:15:30.290 --> 00:15:32.420
and the different
animations for free.

00:15:32.420 --> 00:15:36.110
And every time your users go and
interact with your lovely FAB

00:15:36.110 --> 00:15:38.060
down there, they are
getting a little burst

00:15:38.060 --> 00:15:39.500
of your brand in that button.

00:15:43.670 --> 00:15:45.110
LYNN JEPSEN: All
of our components

00:15:45.110 --> 00:15:46.820
allow for customization.

00:15:46.820 --> 00:15:49.070
So let's talk about
the text field example

00:15:49.070 --> 00:15:50.890
on the web platform.

00:15:50.890 --> 00:15:53.540
Say your designer
wants to customize

00:15:53.540 --> 00:15:55.760
all the colors of a text field.

00:15:55.760 --> 00:15:59.030
He wants the line to start
at gray on page load but then

00:15:59.030 --> 00:16:00.800
when a user hovers
over the text field,

00:16:00.800 --> 00:16:03.230
he wants it to change to orange.

00:16:03.230 --> 00:16:05.030
Your designer also
wants the line

00:16:05.030 --> 00:16:07.640
to change to a slightly
different shade of orange

00:16:07.640 --> 00:16:11.180
when the user clicks on the text
field and starts entering text.

00:16:11.180 --> 00:16:12.890
And your designer
wants to make sure

00:16:12.890 --> 00:16:15.890
that the label matches
the color of the line.

00:16:15.890 --> 00:16:18.320
How do you build all of this?

00:16:18.320 --> 00:16:19.310
You build it using--

00:16:19.310 --> 00:16:23.080
oops back, forward, forward.

00:16:23.080 --> 00:16:26.420
You build it using
MDC Web mixins.

00:16:26.420 --> 00:16:29.990
So these SASS mixins are
APIs that developers can

00:16:29.990 --> 00:16:32.480
use to customize components.

00:16:32.480 --> 00:16:35.000
Here, we have the code to
customize the text field.

00:16:35.000 --> 00:16:38.480
At the top, we have code to
customize the gray colors

00:16:38.480 --> 00:16:40.880
for the idle state
of the text field.

00:16:40.880 --> 00:16:44.540
In the middle, there is code
to customize the hover state.

00:16:44.540 --> 00:16:48.027
And at the bottom, there's code
to customize the focus state.

00:16:48.027 --> 00:16:50.360
Focus state is when the user
actually clicks on the text

00:16:50.360 --> 00:16:52.820
field and starts entering text.

00:16:52.820 --> 00:16:55.610
Now you can implement
a lot of customization

00:16:55.610 --> 00:16:57.590
using these SASS
mixins, and you don't

00:16:57.590 --> 00:17:00.470
have to worry about all the
choreography of all these color

00:17:00.470 --> 00:17:03.070
changes.

00:17:03.070 --> 00:17:05.980
Now for those of you that
have Android applications that

00:17:05.980 --> 00:17:08.230
are already built
using Material Design,

00:17:08.230 --> 00:17:10.960
the MDC Android team
has made it really easy

00:17:10.960 --> 00:17:13.349
for you to upgrade
your existing MDC text

00:17:13.349 --> 00:17:17.650
fields to a new outlined
variant of this text field.

00:17:17.650 --> 00:17:22.869
Here we have some code for a
form in an Android XML file.

00:17:22.869 --> 00:17:25.089
All you have to do to
upgrade to an outline variant

00:17:25.089 --> 00:17:29.807
is to add this one line of
code to the style attribute.

00:17:29.807 --> 00:17:31.640
With that, you get a
new form of text field.

00:17:31.640 --> 00:17:32.670
It looks like this.

00:17:32.670 --> 00:17:34.500
It's our outline version.

00:17:34.500 --> 00:17:36.120
You can think of
this outline version

00:17:36.120 --> 00:17:38.470
as another form
of customization.

00:17:38.470 --> 00:17:42.090
If this outline version looks
better with your app's existing

00:17:42.090 --> 00:17:45.430
graphic design, then use it.

00:17:45.430 --> 00:17:47.520
And because this is
an Android component,

00:17:47.520 --> 00:17:50.580
we've also made sure that it
works with existing Android

00:17:50.580 --> 00:17:51.300
theming.

00:17:51.300 --> 00:17:53.850
So if you've already set
your Android theme colors

00:17:53.850 --> 00:17:56.490
to the right shades of
orange, then this text field

00:17:56.490 --> 00:18:00.210
will inherit those colors.

00:18:00.210 --> 00:18:02.700
Now we've shown you a
lot of code here at I/O,

00:18:02.700 --> 00:18:05.790
but perhaps looking at code
from the back of an I/O stage

00:18:05.790 --> 00:18:07.470
is not the best way to learn.

00:18:07.470 --> 00:18:09.270
The best way to learn
is to actually write

00:18:09.270 --> 00:18:13.410
code, which is why we've created
30 code labs for you to go

00:18:13.410 --> 00:18:16.650
and enjoy that work with MDC.

00:18:16.650 --> 00:18:19.920
We have code labs for all of
our platforms, Android, iOS,

00:18:19.920 --> 00:18:21.720
Flutter, Web.

00:18:21.720 --> 00:18:24.810
For Android, we have code
labs in Java and Kotlin,

00:18:24.810 --> 00:18:29.610
and for iOS, we have code
labs in Objective-C and Swift.

00:18:29.610 --> 00:18:32.520
We don't have any code
labs in React yet,

00:18:32.520 --> 00:18:35.640
but if you want code labs in
React or some other technology

00:18:35.640 --> 00:18:37.267
that you're using, let us know.

00:18:37.267 --> 00:18:38.850
We really want to
make sure that we're

00:18:38.850 --> 00:18:42.100
targeting the technologies that
developers are already using.

00:18:44.711 --> 00:18:46.710
ADRIAN SECORD: So now
that we've seen some code,

00:18:46.710 --> 00:18:48.970
we've seen some examples
of getting some MDC

00:18:48.970 --> 00:18:51.460
things into code, we
want to go back a step

00:18:51.460 --> 00:18:54.100
and say why use MDC.

00:18:54.100 --> 00:18:56.350
We really believe that
using MDC libraries

00:18:56.350 --> 00:18:58.326
helps you create
beautiful products.

00:18:58.326 --> 00:19:00.700
We believe that they should
be pretty easy for developers

00:19:00.700 --> 00:19:02.500
to use, and we
definitely believe

00:19:02.500 --> 00:19:05.990
that they provide an excellent
user experience to your users.

00:19:05.990 --> 00:19:09.707
So not only do you get this sort
of experience of using the code

00:19:09.707 --> 00:19:12.040
and hopefully, it's a little
smoother and easier to use,

00:19:12.040 --> 00:19:14.406
but this actually brings a
lot of value to your users.

00:19:14.406 --> 00:19:16.030
Let's go into a little
bit more detail.

00:19:20.270 --> 00:19:24.130
So each one of our components
is built to be pixel perfect.

00:19:24.130 --> 00:19:26.890
We collaborate with the
designers infinitely

00:19:26.890 --> 00:19:29.260
to add polish, to get
all the details right.

00:19:29.260 --> 00:19:31.240
We worry about the
fills and the strokes

00:19:31.240 --> 00:19:33.730
and the radii and
all the anti-aliasing

00:19:33.730 --> 00:19:35.590
and all that sorts of thing.

00:19:35.590 --> 00:19:39.820
And we also do a lot of
research and user testing.

00:19:39.820 --> 00:19:42.250
Material, as an organization,
actually has researchers

00:19:42.250 --> 00:19:45.310
on staff that go out
and take our components,

00:19:45.310 --> 00:19:47.910
put them in front of people,
and test them and see what works

00:19:47.910 --> 00:19:49.181
better and what doesn't.

00:19:49.181 --> 00:19:50.680
We actually have a
very good example

00:19:50.680 --> 00:19:53.260
of this with the text field
that we were seeing before.

00:19:53.260 --> 00:19:56.110
You might have seen it had
very heavy outlines and very

00:19:56.110 --> 00:19:59.350
broad or very prominent fills.

00:19:59.350 --> 00:20:02.080
Our original text field
that we released in 2014,

00:20:02.080 --> 00:20:04.690
when we went out and did some
user experience, some user

00:20:04.690 --> 00:20:07.240
research, we found out that
people didn't actually,

00:20:07.240 --> 00:20:09.856
in the middle of a busy
screen with a whole bunch

00:20:09.856 --> 00:20:11.230
of different things
in it, people

00:20:11.230 --> 00:20:12.896
didn't actually know
necessarily if they

00:20:12.896 --> 00:20:15.460
were supposed to tap into
it and fill out the text.

00:20:15.460 --> 00:20:17.110
So they were missing,
say, filling out

00:20:17.110 --> 00:20:18.580
an important part of a form.

00:20:18.580 --> 00:20:21.250
We went back and redesigned
based on that experience

00:20:21.250 --> 00:20:24.940
and actually republished,
maybe a year ago,

00:20:24.940 --> 00:20:27.130
the text field spec,
updated all the code,

00:20:27.130 --> 00:20:31.580
so that it became a better
field for everyone to use.

00:20:31.580 --> 00:20:34.240
The other thing that we do
is, designers, of course,

00:20:34.240 --> 00:20:37.040
are not a one size fits all.

00:20:37.040 --> 00:20:39.120
There's many different
kinds of designers.

00:20:39.120 --> 00:20:41.320
So in Material, we
have visual designers.

00:20:41.320 --> 00:20:42.790
We have interaction designers.

00:20:42.790 --> 00:20:45.312
We have people who
do motion design.

00:20:45.312 --> 00:20:47.020
And we work with all
of them to make sure

00:20:47.020 --> 00:20:48.730
that every aspect
of these components

00:20:48.730 --> 00:20:51.220
is as good as possible.

00:20:51.220 --> 00:20:53.610
The other piece is that
MDC is production ready.

00:20:53.610 --> 00:20:55.470
We work very hard
to make it optimized

00:20:55.470 --> 00:20:58.800
for various performance
metrics, for memory, for CPU,

00:20:58.800 --> 00:21:00.150
that kind of thing.

00:21:00.150 --> 00:21:03.720
We test on a wide range and
exhaustive range of devices

00:21:03.720 --> 00:21:06.449
and browsers and situations.

00:21:06.449 --> 00:21:08.865
We also stress test things
with the open source community.

00:21:08.865 --> 00:21:11.730
So you could imagine that
maybe Google only uses

00:21:11.730 --> 00:21:14.146
these components
in a certain way

00:21:14.146 --> 00:21:16.020
and no one else ever
uses them a certain way.

00:21:16.020 --> 00:21:18.600
But that's OK because we have
open source contributors who

00:21:18.600 --> 00:21:20.516
are using them in all
sorts of different ways,

00:21:20.516 --> 00:21:22.470
and we get all that
and fold it back in so

00:21:22.470 --> 00:21:24.896
that everyone gets the
benefit of that experience.

00:21:24.896 --> 00:21:26.520
The other thing that's
really important

00:21:26.520 --> 00:21:29.760
is this is how Google
ships its apps worldwide

00:21:29.760 --> 00:21:31.790
for quite a number of years now.

00:21:31.790 --> 00:21:35.040
All are Android and iOS web
apps are out there using

00:21:35.040 --> 00:21:36.480
exactly this code to ship.

00:21:36.480 --> 00:21:40.380
So we're used to doing the
Google scale performance

00:21:40.380 --> 00:21:44.504
and optimization that you
get the benefit of too.

00:21:44.504 --> 00:21:45.920
LYNN JEPSEN: That
third reason why

00:21:45.920 --> 00:21:49.460
you should use MDC is because
it helps you build features

00:21:49.460 --> 00:21:50.420
faster.

00:21:50.420 --> 00:21:51.860
So using our
components can really

00:21:51.860 --> 00:21:54.020
speed up your development time.

00:21:54.020 --> 00:21:57.830
We've already spent months of
developer and designer time

00:21:57.830 --> 00:22:00.990
building these
components from scratch.

00:22:00.990 --> 00:22:02.810
So we want everyone
here today to feel

00:22:02.810 --> 00:22:05.670
like they don't have to build
components from scratch.

00:22:05.670 --> 00:22:08.510
They can just quickly install
and use our components

00:22:08.510 --> 00:22:12.260
in your codebase.

00:22:12.260 --> 00:22:15.740
In fact, we also don't want you
to be tied to Material Design's

00:22:15.740 --> 00:22:17.370
visual expression.

00:22:17.370 --> 00:22:19.460
So if your designer
wants to make changes

00:22:19.460 --> 00:22:22.070
like customizing the
color of a text field

00:22:22.070 --> 00:22:24.590
or the shape of a
floating action button,

00:22:24.590 --> 00:22:26.780
then there are APIs
developers can use

00:22:26.780 --> 00:22:28.790
to build that customization.

00:22:28.790 --> 00:22:31.640
We want you to expose
brand through our APIs.

00:22:31.640 --> 00:22:35.360
We have APIs for color,
typography, and shape.

00:22:35.360 --> 00:22:37.490
We want our components
to feel like they

00:22:37.490 --> 00:22:40.340
belong within your
existing application.

00:22:42.860 --> 00:22:45.230
The fourth reason why
you should use MDC

00:22:45.230 --> 00:22:49.460
is because using MDC is
leveraging MDC engineering.

00:22:49.460 --> 00:22:53.000
We're going to be releasing
new components and new features

00:22:53.000 --> 00:22:55.910
through 2018 and beyond.

00:22:55.910 --> 00:22:59.090
MDC is the only
component library which

00:22:59.090 --> 00:23:01.340
evolves with Material Design.

00:23:01.340 --> 00:23:04.280
So our MDC engineers,
they collaborate directly

00:23:04.280 --> 00:23:06.530
with the designers who are
writing Material Design

00:23:06.530 --> 00:23:08.210
guidelines.

00:23:08.210 --> 00:23:10.700
That's why you can
depend on us to make sure

00:23:10.700 --> 00:23:13.730
that we release new components
that evolve with the Material

00:23:13.730 --> 00:23:15.114
Design [INAUDIBLE].

00:23:17.980 --> 00:23:19.950
I hope you all have
learned a lot today

00:23:19.950 --> 00:23:21.840
about how to incorporate
Material Design

00:23:21.840 --> 00:23:23.850
into your existing codebase.

00:23:23.850 --> 00:23:25.710
You've seen some
new material tools

00:23:25.710 --> 00:23:27.840
and how they work with MDC.

00:23:27.840 --> 00:23:31.170
You've seen some example
code actually using MDC,

00:23:31.170 --> 00:23:33.850
and you've heard about
some of the benefits of MDC

00:23:33.850 --> 00:23:37.720
in your existing codebase.

00:23:37.720 --> 00:23:39.460
That's all we have.

00:23:39.460 --> 00:23:41.000
Thank you so much.

00:23:41.000 --> 00:23:43.430
We're going to take
questions here in a second.

00:23:43.430 --> 00:23:45.054
But I just want to
let you know that we

00:23:45.054 --> 00:23:46.975
have a Dome F,
which is the design

00:23:46.975 --> 00:23:48.622
slash accessibility dome.

00:23:48.622 --> 00:23:50.830
We're going to be hanging
out there all day tomorrow,

00:23:50.830 --> 00:23:53.750
so you can come and ask us
questions there as well.

00:23:53.750 --> 00:23:54.910
But thank you so much.

00:23:54.910 --> 00:23:55.951
ADRIAN SECORD: Thank you.

00:23:55.951 --> 00:23:57.270
[APPLAUSE]

00:23:58.725 --> 00:24:01.915
[MUSIC PLAYING]

