WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:02.330
 
in the last video you saw how to compute

00:00:02.330 --> 00:00:02.340
in the last video you saw how to compute
 

00:00:02.340 --> 00:00:04.730
in the last video you saw how to compute
the prediction on a new network given a

00:00:04.730 --> 00:00:04.740
the prediction on a new network given a
 

00:00:04.740 --> 00:00:07.039
the prediction on a new network given a
single training example in this video

00:00:07.039 --> 00:00:07.049
single training example in this video
 

00:00:07.049 --> 00:00:09.890
single training example in this video
you see how to vectorize across multiple

00:00:09.890 --> 00:00:09.900
you see how to vectorize across multiple
 

00:00:09.900 --> 00:00:12.470
you see how to vectorize across multiple
training examples and the outcome will

00:00:12.470 --> 00:00:12.480
training examples and the outcome will
 

00:00:12.480 --> 00:00:13.940
training examples and the outcome will
be quite similar to what you saw for

00:00:13.940 --> 00:00:13.950
be quite similar to what you saw for
 

00:00:13.950 --> 00:00:16.490
be quite similar to what you saw for
logistic regression where by stacking up

00:00:16.490 --> 00:00:16.500
logistic regression where by stacking up
 

00:00:16.500 --> 00:00:18.140
logistic regression where by stacking up
different training examples in different

00:00:18.140 --> 00:00:18.150
different training examples in different
 

00:00:18.150 --> 00:00:20.720
different training examples in different
columns of the matrix you'll be able to

00:00:20.720 --> 00:00:20.730
columns of the matrix you'll be able to
 

00:00:20.730 --> 00:00:22.370
columns of the matrix you'll be able to
take the equations you have from the

00:00:22.370 --> 00:00:22.380
take the equations you have from the
 

00:00:22.380 --> 00:00:24.140
take the equations you have from the
previous video and with very little

00:00:24.140 --> 00:00:24.150
previous video and with very little
 

00:00:24.150 --> 00:00:26.450
previous video and with very little
modification change them to make the

00:00:26.450 --> 00:00:26.460
modification change them to make the
 

00:00:26.460 --> 00:00:28.519
modification change them to make the
neural network compute the outputs on

00:00:28.519 --> 00:00:28.529
neural network compute the outputs on
 

00:00:28.529 --> 00:00:31.070
neural network compute the outputs on
all the examples on pretty much all at

00:00:31.070 --> 00:00:31.080
all the examples on pretty much all at
 

00:00:31.080 --> 00:00:33.650
all the examples on pretty much all at
the same time so let's see the details

00:00:33.650 --> 00:00:33.660
the same time so let's see the details
 

00:00:33.660 --> 00:00:36.049
the same time so let's see the details
of how to do that these were the four

00:00:36.049 --> 00:00:36.059
of how to do that these were the four
 

00:00:36.059 --> 00:00:37.940
of how to do that these were the four
equations we have from the previous

00:00:37.940 --> 00:00:37.950
equations we have from the previous
 

00:00:37.950 --> 00:00:40.549
equations we have from the previous
video of how you compute Z 1 a 1 Z 2 and

00:00:40.549 --> 00:00:40.559
video of how you compute Z 1 a 1 Z 2 and
 

00:00:40.559 --> 00:00:44.540
video of how you compute Z 1 a 1 Z 2 and
a 2 and they tell you how given an input

00:00:44.540 --> 00:00:44.550
a 2 and they tell you how given an input
 

00:00:44.550 --> 00:00:48.650
a 2 and they tell you how given an input
feature vector X you can use them to

00:00:48.650 --> 00:00:48.660
feature vector X you can use them to
 

00:00:48.660 --> 00:00:53.029
feature vector X you can use them to
generate a 2 equals y hat for single

00:00:53.029 --> 00:00:53.039
generate a 2 equals y hat for single
 

00:00:53.039 --> 00:00:55.910
generate a 2 equals y hat for single
training example now if you have M

00:00:55.910 --> 00:00:55.920
training example now if you have M
 

00:00:55.920 --> 00:00:58.459
training example now if you have M
training examples you need to repeat

00:00:58.459 --> 00:00:58.469
training examples you need to repeat
 

00:00:58.469 --> 00:01:00.740
training examples you need to repeat
this process for say the first training

00:01:00.740 --> 00:01:00.750
this process for say the first training
 

00:01:00.750 --> 00:01:03.670
this process for say the first training
example X superscript round records one

00:01:03.670 --> 00:01:03.680
example X superscript round records one
 

00:01:03.680 --> 00:01:08.810
example X superscript round records one
to compute Y hat one Wester prediction

00:01:08.810 --> 00:01:08.820
to compute Y hat one Wester prediction
 

00:01:08.820 --> 00:01:12.560
to compute Y hat one Wester prediction
on your first training example then X to

00:01:12.560 --> 00:01:12.570
on your first training example then X to
 

00:01:12.570 --> 00:01:15.800
on your first training example then X to
use that to generate prediction y hat

00:01:15.800 --> 00:01:15.810
use that to generate prediction y hat
 

00:01:15.810 --> 00:01:20.149
use that to generate prediction y hat
two and so on down to XM to generate a

00:01:20.149 --> 00:01:20.159
two and so on down to XM to generate a
 

00:01:20.159 --> 00:01:24.590
two and so on down to XM to generate a
prediction y hat M and so in order to

00:01:24.590 --> 00:01:24.600
prediction y hat M and so in order to
 

00:01:24.600 --> 00:01:25.850
prediction y hat M and so in order to
write this the activation function

00:01:25.850 --> 00:01:25.860
write this the activation function
 

00:01:25.860 --> 00:01:27.499
write this the activation function
notation as well I'm going to write this

00:01:27.499 --> 00:01:27.509
notation as well I'm going to write this
 

00:01:27.509 --> 00:01:31.280
notation as well I'm going to write this
as a two square bracket round bracket 1

00:01:31.280 --> 00:01:31.290
as a two square bracket round bracket 1
 

00:01:31.290 --> 00:01:40.940
as a two square bracket round bracket 1
this is a 2 2 and a 2 m so this notation

00:01:40.940 --> 00:01:40.950
this is a 2 2 and a 2 m so this notation
 

00:01:40.950 --> 00:01:46.850
this is a 2 2 and a 2 m so this notation
a square bracket 2 round bracket I the

00:01:46.850 --> 00:01:46.860
a square bracket 2 round bracket I the
 

00:01:46.860 --> 00:01:49.490
a square bracket 2 round bracket I the
round bracket I refers to training

00:01:49.490 --> 00:01:49.500
round bracket I refers to training
 

00:01:49.500 --> 00:01:54.130
round bracket I refers to training
example I and the square bracket 2

00:01:54.130 --> 00:01:54.140
example I and the square bracket 2
 

00:01:54.140 --> 00:01:58.969
example I and the square bracket 2
refers to layer 2 ok so that's how the

00:01:58.969 --> 00:01:58.979
refers to layer 2 ok so that's how the
 

00:01:58.979 --> 00:02:01.039
refers to layer 2 ok so that's how the
square bracket and the round bracket

00:02:01.039 --> 00:02:01.049
square bracket and the round bracket
 

00:02:01.049 --> 00:02:05.359
square bracket and the round bracket
industries work and so the suggest that

00:02:05.359 --> 00:02:05.369
industries work and so the suggest that
 

00:02:05.369 --> 00:02:06.499
industries work and so the suggest that
if you have an unvectorized

00:02:06.499 --> 00:02:06.509
if you have an unvectorized
 

00:02:06.509 --> 00:02:08.510
if you have an unvectorized
implementation and want to compute the

00:02:08.510 --> 00:02:08.520
implementation and want to compute the
 

00:02:08.520 --> 00:02:10.219
implementation and want to compute the
prediction for all your training

00:02:10.219 --> 00:02:10.229
prediction for all your training
 

00:02:10.229 --> 00:02:13.320
prediction for all your training
examples you need to do for I equals 1

00:02:13.320 --> 00:02:13.330
examples you need to do for I equals 1
 

00:02:13.330 --> 00:02:16.980
examples you need to do for I equals 1
to em on there basically intimate these

00:02:16.980 --> 00:02:16.990
to em on there basically intimate these
 

00:02:16.990 --> 00:02:19.380
to em on there basically intimate these
four equations where you need

00:02:19.380 --> 00:02:19.390
four equations where you need
 

00:02:19.390 --> 00:02:30.320
four equations where you need
I guess z1 I equals 31 X I plus B 1 on a

00:02:30.320 --> 00:02:30.330
I guess z1 I equals 31 X I plus B 1 on a
 

00:02:30.330 --> 00:02:43.710
I guess z1 I equals 31 X I plus B 1 on a
1 I equals sigmoid z 1i z 2 I equals W 2

00:02:43.710 --> 00:02:43.720
1 I equals sigmoid z 1i z 2 I equals W 2
 

00:02:43.720 --> 00:02:53.760
1 I equals sigmoid z 1i z 2 I equals W 2
a 1 I plus V 2 and a 2 I equals sigmoid

00:02:53.760 --> 00:02:53.770
a 1 I plus V 2 and a 2 I equals sigmoid
 

00:02:53.770 --> 00:02:58.020
a 1 I plus V 2 and a 2 I equals sigmoid
of z2 I right so it's basically you know

00:02:58.020 --> 00:02:58.030
of z2 I right so it's basically you know
 

00:02:58.030 --> 00:02:59.699
of z2 I right so it's basically you know
these four equations on top and adding

00:02:59.699 --> 00:02:59.709
these four equations on top and adding
 

00:02:59.709 --> 00:03:05.820
these four equations on top and adding
the superscript round bracket I to all

00:03:05.820 --> 00:03:05.830
the superscript round bracket I to all
 

00:03:05.830 --> 00:03:07.949
the superscript round bracket I to all
the variables that depend on the

00:03:07.949 --> 00:03:07.959
the variables that depend on the
 

00:03:07.959 --> 00:03:09.480
the variables that depend on the
training example so adding those

00:03:09.480 --> 00:03:09.490
training example so adding those
 

00:03:09.490 --> 00:03:12.960
training example so adding those
superstream round bracket I to X Z and a

00:03:12.960 --> 00:03:12.970
superstream round bracket I to X Z and a
 

00:03:12.970 --> 00:03:15.900
superstream round bracket I to X Z and a
if you want to compute all the outputs

00:03:15.900 --> 00:03:15.910
if you want to compute all the outputs
 

00:03:15.910 --> 00:03:18.870
if you want to compute all the outputs
on your M training examples what we like

00:03:18.870 --> 00:03:18.880
on your M training examples what we like
 

00:03:18.880 --> 00:03:20.490
on your M training examples what we like
to do is vectorize this whole

00:03:20.490 --> 00:03:20.500
to do is vectorize this whole
 

00:03:20.500 --> 00:03:22.800
to do is vectorize this whole
computation so it's to get rid of this

00:03:22.800 --> 00:03:22.810
computation so it's to get rid of this
 

00:03:22.810 --> 00:03:25.320
computation so it's to get rid of this
volume and by the way in case it seems

00:03:25.320 --> 00:03:25.330
volume and by the way in case it seems
 

00:03:25.330 --> 00:03:26.490
volume and by the way in case it seems
like I'm getting a little more of

00:03:26.490 --> 00:03:26.500
like I'm getting a little more of
 

00:03:26.500 --> 00:03:29.699
like I'm getting a little more of
nitty-gritty linear algebra it turns out

00:03:29.699 --> 00:03:29.709
nitty-gritty linear algebra it turns out
 

00:03:29.709 --> 00:03:30.990
nitty-gritty linear algebra it turns out
that being able to implement this

00:03:30.990 --> 00:03:31.000
that being able to implement this
 

00:03:31.000 --> 00:03:33.120
that being able to implement this
correctly is important in the deep

00:03:33.120 --> 00:03:33.130
correctly is important in the deep
 

00:03:33.130 --> 00:03:35.880
correctly is important in the deep
learning error and we actually chose the

00:03:35.880 --> 00:03:35.890
learning error and we actually chose the
 

00:03:35.890 --> 00:03:37.800
learning error and we actually chose the
notation very carefully for this class

00:03:37.800 --> 00:03:37.810
notation very carefully for this class
 

00:03:37.810 --> 00:03:39.870
notation very carefully for this class
to make these vectorization as as easy

00:03:39.870 --> 00:03:39.880
to make these vectorization as as easy
 

00:03:39.880 --> 00:03:42.509
to make these vectorization as as easy
as possible so I hope that great through

00:03:42.509 --> 00:03:42.519
as possible so I hope that great through
 

00:03:42.519 --> 00:03:44.310
as possible so I hope that great through
this nitty-gritty will actually help you

00:03:44.310 --> 00:03:44.320
this nitty-gritty will actually help you
 

00:03:44.320 --> 00:03:47.790
this nitty-gritty will actually help you
to more quickly get your correct

00:03:47.790 --> 00:03:47.800
to more quickly get your correct
 

00:03:47.800 --> 00:03:50.060
to more quickly get your correct
implementations of these advents working

00:03:50.060 --> 00:03:50.070
implementations of these advents working
 

00:03:50.070 --> 00:03:51.390
implementations of these advents working
all right

00:03:51.390 --> 00:03:51.400
all right
 

00:03:51.400 --> 00:03:54.540
all right
so let me just copy this whole block of

00:03:54.540 --> 00:03:54.550
so let me just copy this whole block of
 

00:03:54.550 --> 00:03:56.460
so let me just copy this whole block of
code to the next slide and then we'll

00:03:56.460 --> 00:03:56.470
code to the next slide and then we'll
 

00:03:56.470 --> 00:03:59.610
code to the next slide and then we'll
see how to vectorize this so here's we

00:03:59.610 --> 00:03:59.620
see how to vectorize this so here's we
 

00:03:59.620 --> 00:04:01.290
see how to vectorize this so here's we
had from the previous line with a four

00:04:01.290 --> 00:04:01.300
had from the previous line with a four
 

00:04:01.300 --> 00:04:03.949
had from the previous line with a four
group going over all M training examples

00:04:03.949 --> 00:04:03.959
group going over all M training examples
 

00:04:03.959 --> 00:04:09.479
group going over all M training examples
so recall that we define the matrix X to

00:04:09.479 --> 00:04:09.489
so recall that we define the matrix X to
 

00:04:09.489 --> 00:04:12.350
so recall that we define the matrix X to
be equal to our training examples

00:04:12.350 --> 00:04:12.360
be equal to our training examples
 

00:04:12.360 --> 00:04:17.400
be equal to our training examples
stacked up on these columns like so so

00:04:17.400 --> 00:04:17.410
stacked up on these columns like so so
 

00:04:17.410 --> 00:04:19.500
stacked up on these columns like so so
take the training examples stack them in

00:04:19.500 --> 00:04:19.510
take the training examples stack them in
 

00:04:19.510 --> 00:04:23.870
take the training examples stack them in
columns so this becomes a n or maybe NX

00:04:23.870 --> 00:04:23.880
columns so this becomes a n or maybe NX
 

00:04:23.880 --> 00:04:26.290
columns so this becomes a n or maybe NX
by

00:04:26.290 --> 00:04:26.300
by
 

00:04:26.300 --> 00:04:29.510
by
dimensional matrix I'm just going to

00:04:29.510 --> 00:04:29.520
dimensional matrix I'm just going to
 

00:04:29.520 --> 00:04:31.159
dimensional matrix I'm just going to
give away the punchline and tell you

00:04:31.159 --> 00:04:31.169
give away the punchline and tell you
 

00:04:31.169 --> 00:04:33.080
give away the punchline and tell you
what you need to implement in order to

00:04:33.080 --> 00:04:33.090
what you need to implement in order to
 

00:04:33.090 --> 00:04:35.510
what you need to implement in order to
vectorize implementation of this for

00:04:35.510 --> 00:04:35.520
vectorize implementation of this for
 

00:04:35.520 --> 00:04:37.790
vectorize implementation of this for
loop turns out what you need to do is

00:04:37.790 --> 00:04:37.800
loop turns out what you need to do is
 

00:04:37.800 --> 00:04:45.050
loop turns out what you need to do is
compute capital Z 1 equals W 1 X plus B

00:04:45.050 --> 00:04:45.060
compute capital Z 1 equals W 1 X plus B
 

00:04:45.060 --> 00:04:52.899
compute capital Z 1 equals W 1 X plus B
1 capital a1 equals sigmoid of z1 then

00:04:52.899 --> 00:04:52.909
1 capital a1 equals sigmoid of z1 then
 

00:04:52.909 --> 00:05:01.129
1 capital a1 equals sigmoid of z1 then
tap code Z 2 equals W 2 times a 1 plus B

00:05:01.129 --> 00:05:01.139
tap code Z 2 equals W 2 times a 1 plus B
 

00:05:01.139 --> 00:05:10.129
tap code Z 2 equals W 2 times a 1 plus B
2 and then a2 equals sigmoid of Z 2 so

00:05:10.129 --> 00:05:10.139
2 and then a2 equals sigmoid of Z 2 so
 

00:05:10.139 --> 00:05:12.830
2 and then a2 equals sigmoid of Z 2 so
if you want the analogy is that we went

00:05:12.830 --> 00:05:12.840
if you want the analogy is that we went
 

00:05:12.840 --> 00:05:17.269
if you want the analogy is that we went
from lowercase vector X s to this

00:05:17.269 --> 00:05:17.279
from lowercase vector X s to this
 

00:05:17.279 --> 00:05:20.600
from lowercase vector X s to this
capital case X matrix by stacking up the

00:05:20.600 --> 00:05:20.610
capital case X matrix by stacking up the
 

00:05:20.610 --> 00:05:23.059
capital case X matrix by stacking up the
lower case X's in different columns if

00:05:23.059 --> 00:05:23.069
lower case X's in different columns if
 

00:05:23.069 --> 00:05:25.399
lower case X's in different columns if
you do the same thing for the Z's so for

00:05:25.399 --> 00:05:25.409
you do the same thing for the Z's so for
 

00:05:25.409 --> 00:05:33.709
you do the same thing for the Z's so for
example if you take Z 1 1 z 1 2 and so

00:05:33.709 --> 00:05:33.719
example if you take Z 1 1 z 1 2 and so
 

00:05:33.719 --> 00:05:36.769
example if you take Z 1 1 z 1 2 and so
on these are all column vectors up to Z

00:05:36.769 --> 00:05:36.779
on these are all column vectors up to Z
 

00:05:36.779 --> 00:05:42.679
on these are all column vectors up to Z
1 m right so that's this first quantity

00:05:42.679 --> 00:05:42.689
1 m right so that's this first quantity
 

00:05:42.689 --> 00:05:44.779
1 m right so that's this first quantity
but all M of them and stack them in

00:05:44.779 --> 00:05:44.789
but all M of them and stack them in
 

00:05:44.789 --> 00:05:49.519
but all M of them and stack them in
columns then this gives you the matrix Z

00:05:49.519 --> 00:05:49.529
columns then this gives you the matrix Z
 

00:05:49.529 --> 00:05:52.309
columns then this gives you the matrix Z
1 and similarly if you look at say this

00:05:52.309 --> 00:05:52.319
1 and similarly if you look at say this
 

00:05:52.319 --> 00:05:59.420
1 and similarly if you look at say this
quantity you take a 1 1 a 1 2 and so on

00:05:59.420 --> 00:05:59.430
quantity you take a 1 1 a 1 2 and so on
 

00:05:59.430 --> 00:06:06.230
quantity you take a 1 1 a 1 2 and so on
in a 1m and stack them up in columns

00:06:06.230 --> 00:06:06.240
in a 1m and stack them up in columns
 

00:06:06.240 --> 00:06:08.749
in a 1m and stack them up in columns
then this just as we went from lower

00:06:08.749 --> 00:06:08.759
then this just as we went from lower
 

00:06:08.759 --> 00:06:11.959
then this just as we went from lower
case X to capital case X and lo que si

00:06:11.959 --> 00:06:11.969
case X to capital case X and lo que si
 

00:06:11.969 --> 00:06:14.719
case X to capital case X and lo que si
to Catholic 8z this goes from the lower

00:06:14.719 --> 00:06:14.729
to Catholic 8z this goes from the lower
 

00:06:14.729 --> 00:06:18.040
to Catholic 8z this goes from the lower
case a which are vectors to do some

00:06:18.040 --> 00:06:18.050
case a which are vectors to do some
 

00:06:18.050 --> 00:06:22.129
case a which are vectors to do some
capital A 1 that's over there and

00:06:22.129 --> 00:06:22.139
capital A 1 that's over there and
 

00:06:22.139 --> 00:06:27.679
capital A 1 that's over there and
similarly for Z 2 and a 2 right there

00:06:27.679 --> 00:06:27.689
similarly for Z 2 and a 2 right there
 

00:06:27.689 --> 00:06:29.719
similarly for Z 2 and a 2 right there
also attained by taking these vectors

00:06:29.719 --> 00:06:29.729
also attained by taking these vectors
 

00:06:29.729 --> 00:06:32.540
also attained by taking these vectors
and stacking them horizontally and

00:06:32.540 --> 00:06:32.550
and stacking them horizontally and
 

00:06:32.550 --> 00:06:34.159
and stacking them horizontally and
taking these vectors and stacking them

00:06:34.159 --> 00:06:34.169
taking these vectors and stacking them
 

00:06:34.169 --> 00:06:37.909
taking these vectors and stacking them
horizontally in order to get Z Capital Z

00:06:37.909 --> 00:06:37.919
horizontally in order to get Z Capital Z
 

00:06:37.919 --> 00:06:40.390
horizontally in order to get Z Capital Z
2 and capital e 2

00:06:40.390 --> 00:06:40.400
2 and capital e 2
 

00:06:40.400 --> 00:06:42.920
2 and capital e 2
one of the property of this notation

00:06:42.920 --> 00:06:42.930
one of the property of this notation
 

00:06:42.930 --> 00:06:44.780
one of the property of this notation
that might help you to think about it is

00:06:44.780 --> 00:06:44.790
that might help you to think about it is
 

00:06:44.790 --> 00:06:48.129
that might help you to think about it is
that these matrices say Z and a

00:06:48.129 --> 00:06:48.139
that these matrices say Z and a
 

00:06:48.139 --> 00:06:50.840
that these matrices say Z and a
horizontally we're going to index across

00:06:50.840 --> 00:06:50.850
horizontally we're going to index across
 

00:06:50.850 --> 00:06:53.140
horizontally we're going to index across
training examples so that's why the

00:06:53.140 --> 00:06:53.150
training examples so that's why the
 

00:06:53.150 --> 00:06:55.640
training examples so that's why the
horizontal index you know corresponds to

00:06:55.640 --> 00:06:55.650
horizontal index you know corresponds to
 

00:06:55.650 --> 00:06:57.170
horizontal index you know corresponds to
different training examples is sweep

00:06:57.170 --> 00:06:57.180
different training examples is sweep
 

00:06:57.180 --> 00:06:58.550
different training examples is sweep
from left to right you're scanning

00:06:58.550 --> 00:06:58.560
from left to right you're scanning
 

00:06:58.560 --> 00:07:01.090
from left to right you're scanning
through the training set and vertically

00:07:01.090 --> 00:07:01.100
through the training set and vertically
 

00:07:01.100 --> 00:07:04.010
through the training set and vertically
this vertical index corresponds to

00:07:04.010 --> 00:07:04.020
this vertical index corresponds to
 

00:07:04.020 --> 00:07:06.200
this vertical index corresponds to
different notes in the neural network so

00:07:06.200 --> 00:07:06.210
different notes in the neural network so
 

00:07:06.210 --> 00:07:11.900
different notes in the neural network so
for example this note this value at the

00:07:11.900 --> 00:07:11.910
for example this note this value at the
 

00:07:11.910 --> 00:07:14.930
for example this note this value at the
topmost topmost corner of the matrix

00:07:14.930 --> 00:07:14.940
topmost topmost corner of the matrix
 

00:07:14.940 --> 00:07:17.600
topmost topmost corner of the matrix
corresponds to the activation of the

00:07:17.600 --> 00:07:17.610
corresponds to the activation of the
 

00:07:17.610 --> 00:07:19.550
corresponds to the activation of the
first hidden unit on the first training

00:07:19.550 --> 00:07:19.560
first hidden unit on the first training
 

00:07:19.560 --> 00:07:23.240
first hidden unit on the first training
example on one value down corresponds to

00:07:23.240 --> 00:07:23.250
example on one value down corresponds to
 

00:07:23.250 --> 00:07:25.700
example on one value down corresponds to
the activation in the second hidden unit

00:07:25.700 --> 00:07:25.710
the activation in the second hidden unit
 

00:07:25.710 --> 00:07:28.490
the activation in the second hidden unit
on the first training example then the

00:07:28.490 --> 00:07:28.500
on the first training example then the
 

00:07:28.500 --> 00:07:30.170
on the first training example then the
third heading unit on the first training

00:07:30.170 --> 00:07:30.180
third heading unit on the first training
 

00:07:30.180 --> 00:07:32.750
third heading unit on the first training
example and so on so as you scan down

00:07:32.750 --> 00:07:32.760
example and so on so as you scan down
 

00:07:32.760 --> 00:07:36.440
example and so on so as you scan down
this is new indexing into the hidden

00:07:36.440 --> 00:07:36.450
this is new indexing into the hidden
 

00:07:36.450 --> 00:07:40.279
this is new indexing into the hidden
units number where as you do with

00:07:40.279 --> 00:07:40.289
units number where as you do with
 

00:07:40.289 --> 00:07:42.260
units number where as you do with
horizontally then you're going from the

00:07:42.260 --> 00:07:42.270
horizontally then you're going from the
 

00:07:42.270 --> 00:07:43.610
horizontally then you're going from the
first hidden unit in the first training

00:07:43.610 --> 00:07:43.620
first hidden unit in the first training
 

00:07:43.620 --> 00:07:45.830
first hidden unit in the first training
example to you now the first in the

00:07:45.830 --> 00:07:45.840
example to you now the first in the
 

00:07:45.840 --> 00:07:47.629
example to you now the first in the
human second training example the third

00:07:47.629 --> 00:07:47.639
human second training example the third
 

00:07:47.639 --> 00:07:50.600
human second training example the third
turn example and so on until this note

00:07:50.600 --> 00:07:50.610
turn example and so on until this note
 

00:07:50.610 --> 00:07:53.540
turn example and so on until this note
here corresponds to the activation of

00:07:53.540 --> 00:07:53.550
here corresponds to the activation of
 

00:07:53.550 --> 00:07:55.670
here corresponds to the activation of
the first hidden unit in the final

00:07:55.670 --> 00:07:55.680
the first hidden unit in the final
 

00:07:55.680 --> 00:07:58.460
the first hidden unit in the final
training example in the M training

00:07:58.460 --> 00:07:58.470
training example in the M training
 

00:07:58.470 --> 00:08:04.550
training example in the M training
example ok so the horizontal the the

00:08:04.550 --> 00:08:04.560
example ok so the horizontal the the
 

00:08:04.560 --> 00:08:06.950
example ok so the horizontal the the
matrix a goes over a different training

00:08:06.950 --> 00:08:06.960
matrix a goes over a different training
 

00:08:06.960 --> 00:08:11.779
matrix a goes over a different training
examples and vertically the different

00:08:11.779 --> 00:08:11.789
examples and vertically the different
 

00:08:11.789 --> 00:08:14.029
examples and vertically the different
indices in the matrix a corresponds to

00:08:14.029 --> 00:08:14.039
indices in the matrix a corresponds to
 

00:08:14.039 --> 00:08:22.969
indices in the matrix a corresponds to
different hidden units and a similar

00:08:22.969 --> 00:08:22.979
different hidden units and a similar
 

00:08:22.979 --> 00:08:26.150
different hidden units and a similar
intuition holds true for the matrix Z as

00:08:26.150 --> 00:08:26.160
intuition holds true for the matrix Z as
 

00:08:26.160 --> 00:08:30.080
intuition holds true for the matrix Z as
well as well as for X where horizontally

00:08:30.080 --> 00:08:30.090
well as well as for X where horizontally
 

00:08:30.090 --> 00:08:31.370
well as well as for X where horizontally
it corresponds to different training

00:08:31.370 --> 00:08:31.380
it corresponds to different training
 

00:08:31.380 --> 00:08:33.709
it corresponds to different training
examples and vertically it corresponds

00:08:33.709 --> 00:08:33.719
examples and vertically it corresponds
 

00:08:33.719 --> 00:08:36.050
examples and vertically it corresponds
to different features different input

00:08:36.050 --> 00:08:36.060
to different features different input
 

00:08:36.060 --> 00:08:38.420
to different features different input
features which are really different

00:08:38.420 --> 00:08:38.430
features which are really different
 

00:08:38.430 --> 00:08:39.620
features which are really different
notes in phileo

00:08:39.620 --> 00:08:39.630
notes in phileo
 

00:08:39.630 --> 00:08:43.310
notes in phileo
of the neural network so with these

00:08:43.310 --> 00:08:43.320
of the neural network so with these
 

00:08:43.320 --> 00:08:45.079
of the neural network so with these
equations you now know how to implement

00:08:45.079 --> 00:08:45.089
equations you now know how to implement
 

00:08:45.089 --> 00:08:48.020
equations you now know how to implement
a neural network with vectorization that

00:08:48.020 --> 00:08:48.030
a neural network with vectorization that
 

00:08:48.030 --> 00:08:49.850
a neural network with vectorization that
is vectorization across multiple

00:08:49.850 --> 00:08:49.860
is vectorization across multiple
 

00:08:49.860 --> 00:08:51.260
is vectorization across multiple
examples

00:08:51.260 --> 00:08:51.270
examples
 

00:08:51.270 --> 00:08:52.820
examples
in the next video I want to show you a

00:08:52.820 --> 00:08:52.830
in the next video I want to show you a
 

00:08:52.830 --> 00:08:55.370
in the next video I want to show you a
bit more justification about why this is

00:08:55.370 --> 00:08:55.380
bit more justification about why this is
 

00:08:55.380 --> 00:08:57.740
bit more justification about why this is
a correct implementation of this type of

00:08:57.740 --> 00:08:57.750
a correct implementation of this type of
 

00:08:57.750 --> 00:08:59.690
a correct implementation of this type of
vectorization it turns out the

00:08:59.690 --> 00:08:59.700
vectorization it turns out the
 

00:08:59.700 --> 00:09:01.640
vectorization it turns out the
justification will be similar to whether

00:09:01.640 --> 00:09:01.650
justification will be similar to whether
 

00:09:01.650 --> 00:09:03.160
justification will be similar to whether
you have seen for logistic regression

00:09:03.160 --> 00:09:03.170
you have seen for logistic regression
 

00:09:03.170 --> 00:09:07.130
you have seen for logistic regression
let's go on to the next video

