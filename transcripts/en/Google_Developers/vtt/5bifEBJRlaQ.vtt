WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.768
[MUSIC PLAYING]

00:00:03.768 --> 00:00:05.290
WESLEY CHUN:
Greetings, developers.

00:00:05.290 --> 00:00:07.990
And welcome to another episode
of the G Suite Dev Show.

00:00:07.990 --> 00:00:09.312
I'm your host, Wesley Chun.

00:00:09.312 --> 00:00:11.770
You may have heard about Google
Drive's Team Drives feature

00:00:11.770 --> 00:00:12.549
recently.

00:00:12.549 --> 00:00:14.590
There's plenty of excitement
around this product.

00:00:14.590 --> 00:00:16.350
But beyond its hype
and the solutions

00:00:16.350 --> 00:00:18.970
it brings, let's introduce
you to a writing Team Drive

00:00:18.970 --> 00:00:21.640
applications using
the Google Drive API.

00:00:21.640 --> 00:00:23.140
If you're really
new to Team Drives

00:00:23.140 --> 00:00:24.520
and want to know
how to use them,

00:00:24.520 --> 00:00:26.710
check out this guided tutorial.

00:00:26.710 --> 00:00:28.264
Down below in the
video description,

00:00:28.264 --> 00:00:30.430
you'll also find Team Drive
announcements as well as

00:00:30.430 --> 00:00:32.020
an intro video.

00:00:32.020 --> 00:00:33.450
So why Team Drives?

00:00:33.450 --> 00:00:35.530
If you use G Suite
in your organization,

00:00:35.530 --> 00:00:37.930
Google Drive is likely at
the center of your company

00:00:37.930 --> 00:00:39.760
documents and collaboration.

00:00:39.760 --> 00:00:42.610
However, Drive was
designed around users.

00:00:42.610 --> 00:00:45.070
Users are owners of
files, users share

00:00:45.070 --> 00:00:48.130
documents with other users,
users collaborate on documents,

00:00:48.130 --> 00:00:48.940
and so on.

00:00:48.940 --> 00:00:50.680
But this model
doesn't work as well

00:00:50.680 --> 00:00:53.590
in larger organizations that
are more team-oriented rather

00:00:53.590 --> 00:00:55.290
than user-centric.

00:00:55.290 --> 00:00:57.380
Employees changing teams
or leaving the company

00:00:57.380 --> 00:01:00.220
altogether may result
in files going missing.

00:01:00.220 --> 00:01:03.010
Common solutions, like
assigning new owners of files,

00:01:03.010 --> 00:01:05.500
using shared folders,
and even Google Groups,

00:01:05.500 --> 00:01:08.644
isn't always successful as files
still appear to go missing.

00:01:08.644 --> 00:01:10.060
Well, this is why
Team Drives were

00:01:10.060 --> 00:01:13.540
created, to solve these core
problems for G Suite customers.

00:01:13.540 --> 00:01:16.720
No more confusion and
mysteriously missing files.

00:01:16.720 --> 00:01:19.210
Think of Team Drives as a
completely new type of drive

00:01:19.210 --> 00:01:22.480
re-invented specifically
for teams and organizations.

00:01:22.480 --> 00:01:25.090
While Team Drives work in
conjunction with regular Drive,

00:01:25.090 --> 00:01:28.240
it's best to consider both as
separate parallel universes,

00:01:28.240 --> 00:01:30.760
living side-by-side from
a user's perspective,

00:01:30.760 --> 00:01:33.040
just like in the user
interface you see here.

00:01:33.040 --> 00:01:35.520
That'll help avoid confusion.

00:01:35.520 --> 00:01:37.320
While Team Drives
are relatively new,

00:01:37.320 --> 00:01:39.810
we don't think you should have
to write completely new apps

00:01:39.810 --> 00:01:41.760
just to leverage Team Drives.

00:01:41.760 --> 00:01:45.000
The good news for those of you
already using the Drive API

00:01:45.000 --> 00:01:46.800
is that you only need
to augment your code

00:01:46.800 --> 00:01:48.750
to support Team
Drives and only when

00:01:48.750 --> 00:01:51.494
you're ready to add Team
Drive functionality.

00:01:51.494 --> 00:01:53.160
Yes, there's a new
collection of methods

00:01:53.160 --> 00:01:55.380
plus additional arguments
to existing methods

00:01:55.380 --> 00:01:56.400
for Team Drives.

00:01:56.400 --> 00:01:59.190
But the net result is that all
of your existing applications

00:01:59.190 --> 00:02:02.580
will continue to function
normally with regular Drive

00:02:02.580 --> 00:02:04.260
So what are some of
the basic operations

00:02:04.260 --> 00:02:05.760
that any Drive
developer should know

00:02:05.760 --> 00:02:07.830
regardless of the type
of application you have?

00:02:07.830 --> 00:02:11.009
Well, one, you should be
able to create a Team Drive.

00:02:11.009 --> 00:02:14.180
Two, you should also know how
to add members to a Team Drive.

00:02:14.180 --> 00:02:16.710
Three, you should
also be able to create

00:02:16.710 --> 00:02:18.360
a folder in a Team Drive.

00:02:18.360 --> 00:02:21.480
And four, you should be able
to import or upload files

00:02:21.480 --> 00:02:23.280
to a Team Drive folder.

00:02:23.280 --> 00:02:25.620
We'll look at more advanced
skills in upcoming videos,

00:02:25.620 --> 00:02:27.865
but you've got to
start somewhere, right?

00:02:27.865 --> 00:02:30.240
Before we walk through our
code sample that does all four

00:02:30.240 --> 00:02:32.940
of these, make sure that you
have an applicable G Suite

00:02:32.940 --> 00:02:35.460
domain, administrative access
to be able to manipulate

00:02:35.460 --> 00:02:37.440
Team Drives in that domain.

00:02:37.440 --> 00:02:40.530
Next, you should have the Google
APIs Client Library installed

00:02:40.530 --> 00:02:41.955
in your development language.

00:02:41.955 --> 00:02:43.744
We'll demo in Python
because, one, I know

00:02:43.744 --> 00:02:44.910
a little something about it.

00:02:44.910 --> 00:02:47.754
And two, it makes for great
pseudocode for everyone else.

00:02:47.754 --> 00:02:49.170
Finally, you should
have a project

00:02:49.170 --> 00:02:52.320
in the Developer's Console
with the Drive API enabled.

00:02:52.320 --> 00:02:54.870
Once you're ready to go, let's
walk through this demo script

00:02:54.870 --> 00:02:56.930
on the computer.

00:02:56.930 --> 00:03:00.650
OK, on lines 1 through 14, we
have our boilerplate imports

00:03:00.650 --> 00:03:02.450
and authorization code.

00:03:02.450 --> 00:03:06.430
But there are a couple of lines
to look more carefully at.

00:03:06.430 --> 00:03:10.030
In our application, we need a
universally unique identifier,

00:03:10.030 --> 00:03:11.980
and we'll show you
where that comes in.

00:03:11.980 --> 00:03:14.770
But we import that on line 2.

00:03:14.770 --> 00:03:18.100
On line 8, we need the
full read/write scope

00:03:18.100 --> 00:03:20.270
for Google Drive.

00:03:20.270 --> 00:03:22.610
And on line 14, we create
the service endpoint

00:03:22.610 --> 00:03:24.200
to the Drive API.

00:03:24.200 --> 00:03:27.090
We're using Version 3 here.

00:03:27.090 --> 00:03:30.260
Now let's look at our
first Team Drives function.

00:03:30.260 --> 00:03:33.590
It's called Create Team
Drive, or create_td.

00:03:33.590 --> 00:03:35.600
And it does exactly
what you think.

00:03:35.600 --> 00:03:38.030
It creates a Team Drive
using the Create method

00:03:38.030 --> 00:03:40.520
in the new Team
Drives collection.

00:03:40.520 --> 00:03:43.850
Line 17 is where that
unique identifier comes in.

00:03:43.850 --> 00:03:45.860
Think of a request_id
as a serial number

00:03:45.860 --> 00:03:48.140
to ensure that apps
performing retries

00:03:48.140 --> 00:03:50.720
don't create
duplicate Team Drives.

00:03:50.720 --> 00:03:53.360
If you have heard the
term idempotent before,

00:03:53.360 --> 00:03:55.580
this is exactly what
we're talking about.

00:03:55.580 --> 00:03:58.610
UUIDs are unique, so that's
why we're using them here.

00:03:58.610 --> 00:04:00.770
And most programming
languages, including Python,

00:04:00.770 --> 00:04:03.440
have some sort of UUID library.

00:04:03.440 --> 00:04:06.140
Note, this is the only way
to create a Team Drive.

00:04:06.140 --> 00:04:08.840
So yes, creating a Team Drive
is different from creating

00:04:08.840 --> 00:04:11.661
a folder in regular
Google Drive.

00:04:11.661 --> 00:04:16.149
On lines 22 to 25, add_user
adds a member to a Team Drive

00:04:16.149 --> 00:04:19.360
by calling
permissions.create, in a way

00:04:19.360 --> 00:04:23.220
quite similar to sharing a
document with another user.

00:04:23.220 --> 00:04:26.590
The supportsTeamDrives
flag on line 25

00:04:26.590 --> 00:04:30.160
is obviously new and used when
calling existing Drive API

00:04:30.160 --> 00:04:34.660
methods, but requesting
Team Drive functionality

00:04:34.660 --> 00:04:38.760
On 27 to 30, create_td_folder
creates a folder

00:04:38.760 --> 00:04:40.860
in a Team Drive
given the Team Drive

00:04:40.860 --> 00:04:45.870
ID, which we got from the
return value of create_td.

00:04:45.870 --> 00:04:49.200
So create_td_folder takes that
Team Drive ID and a folder

00:04:49.200 --> 00:04:50.880
name.

00:04:50.880 --> 00:04:52.710
All files and
folders can only live

00:04:52.710 --> 00:04:54.630
in one place on
Team Drives, meaning

00:04:54.630 --> 00:04:56.880
they can only have one parent.

00:04:56.880 --> 00:04:58.740
This is nearly
identical to the code

00:04:58.740 --> 00:05:01.020
to create a folder
in regular Drive

00:05:01.020 --> 00:05:03.540
except for the
supportsTeamDrives flag

00:05:03.540 --> 00:05:06.530
and a single parent.

00:05:06.530 --> 00:05:09.590
I'll let you guess what
import_csv_to_td_folder

00:05:09.590 --> 00:05:12.550
does on lines 32 to 35.

00:05:12.550 --> 00:05:15.290
Like create_folder,
this code imports a file

00:05:15.290 --> 00:05:17.870
with files.create, just
like for regular Drive,

00:05:17.870 --> 00:05:20.850
but has a supportsTeamDrives
flag again.

00:05:20.850 --> 00:05:22.970
And those are the
four main functions.

00:05:22.970 --> 00:05:26.890
The rest of the code is
just the supporting cast.

00:05:26.890 --> 00:05:30.400
Lines 37 to 39 are just
various definitions.

00:05:30.400 --> 00:05:34.730
On 37, we have the MIME type
of a Google Drive folder.

00:05:34.730 --> 00:05:38.570
And on 39, we have the MIME
type for Google Sheets files.

00:05:38.570 --> 00:05:40.990
Sandwiched in between
is the CSV file

00:05:40.990 --> 00:05:42.610
that we're going to import.

00:05:42.610 --> 00:05:45.220
And by import, we mean
upload and convert

00:05:45.220 --> 00:05:46.960
to Google Sheets format.

00:05:46.960 --> 00:05:50.660
On disk, we have the file stored
with the CSV file extension.

00:05:50.660 --> 00:05:53.800
So we have to add that here
in the media body on line 34.

00:05:53.800 --> 00:05:57.320
But as a Google Sheet, we no
longer need that CSV extension.

00:05:57.320 --> 00:06:00.370
So we just take the name as is.

00:06:00.370 --> 00:06:02.200
And you can see that
as a second parameter

00:06:02.200 --> 00:06:04.210
to the function call,
which gets assigned

00:06:04.210 --> 00:06:07.089
into the files metadata on 33.

00:06:07.089 --> 00:06:08.880
By the way, if you
really want to run this,

00:06:08.880 --> 00:06:11.180
you're going to have to
import your own CSV file, so

00:06:11.180 --> 00:06:13.140
change the name if necessary.

00:06:13.140 --> 00:06:16.220
Now, you could change this
code to upload the raw CSV

00:06:16.220 --> 00:06:17.489
and not convert to Sheets.

00:06:17.489 --> 00:06:20.030
And the way you would do that
is, instead of using the Google

00:06:20.030 --> 00:06:23.330
Sheets MIME type, you would
just use text/csv, which

00:06:23.330 --> 00:06:25.760
is the MIME type for CSV files.

00:06:25.760 --> 00:06:30.380
And 41 to 48, just run all of
these functions one at a time,

00:06:30.380 --> 00:06:33.020
then displaying to the user
that the function completed.

00:06:33.020 --> 00:06:36.770
So on line 41, we call create_td
to create a Team Drive called

00:06:36.770 --> 00:06:38.390
Corporate shared TD.

00:06:38.390 --> 00:06:41.480
And we save the return value,
which is the Team Drive ID.

00:06:41.480 --> 00:06:44.900
On line 43, we call add_user,
pass in the Team Drive ID,

00:06:44.900 --> 00:06:46.940
and the name of the
user we want to add.

00:06:46.940 --> 00:06:49.300
As before, if you want
to really add a user,

00:06:49.300 --> 00:06:51.290
change this email
address to a real one

00:06:51.290 --> 00:06:53.140
for a user in your domain.

00:06:53.140 --> 00:06:56.780
On 45, we take the Team Drive
ID and call create_td_folder,

00:06:56.780 --> 00:06:59.530
creating a folder called
Manufacturing data in my Team

00:06:59.530 --> 00:07:00.900
Drive.

00:07:00.900 --> 00:07:03.895
And then on 47, we call
import_csv_to_td_folder, pass

00:07:03.895 --> 00:07:06.390
in the folder_id of the
file that we just created--

00:07:06.390 --> 00:07:09.390
Manufacturing data-- the
source file-- inventory,

00:07:09.390 --> 00:07:11.010
or inventory.csv--

00:07:11.010 --> 00:07:12.780
and the Sheets MIME
type for conversion.

00:07:12.780 --> 00:07:14.430
Again, if you don't
want to convert,

00:07:14.430 --> 00:07:17.370
then just use text/csv here.

00:07:17.370 --> 00:07:18.970
And that's it.

00:07:18.970 --> 00:07:21.330
So that's how you can
test drive Team Drives

00:07:21.330 --> 00:07:23.370
in less than 50 lines of code.

00:07:23.370 --> 00:07:25.890
You can read more in the
code deep dive blog post

00:07:25.890 --> 00:07:27.630
and run it with Python 2 or 3.

00:07:27.630 --> 00:07:28.620
It works with both.

00:07:28.620 --> 00:07:30.310
But no matter which
version you use,

00:07:30.310 --> 00:07:32.101
you should expect the
output from the print

00:07:32.101 --> 00:07:34.830
calls in the script plus a
new Team Drive folder called

00:07:34.830 --> 00:07:37.110
Corporate shared TD,
inside of which you'll find

00:07:37.110 --> 00:07:38.850
a Manufacturing data folder.

00:07:38.850 --> 00:07:42.120
And inside of that should be
your Inventory Sheets file,

00:07:42.120 --> 00:07:44.310
imported successfully from CSV.

00:07:44.310 --> 00:07:46.530
To get started, check
out this page in the Docs

00:07:46.530 --> 00:07:49.890
that introduces Team Drives,
concepts, some of the rules,

00:07:49.890 --> 00:07:52.050
and basically how
Team Drives work.

00:07:52.050 --> 00:07:53.860
Once you're ready to
take your first steps,

00:07:53.860 --> 00:07:56.520
check out this Docs page,
enabling Team Drive support,

00:07:56.520 --> 00:07:59.700
and specific differences in
using the API when writing apps

00:07:59.700 --> 00:08:02.580
for regular Google Drive
versus Team Drives.

00:08:02.580 --> 00:08:05.250
Finally, see the complete
video from Google Cloud Next

00:08:05.250 --> 00:08:09.190
2017, where you'll learn about
Team Drives for developers

00:08:09.190 --> 00:08:11.190
and hear directly from
partners who have already

00:08:11.190 --> 00:08:13.540
implemented Team Drive apps.

00:08:13.540 --> 00:08:16.350
So that's our tour of Team
Drive basics for developers.

00:08:16.350 --> 00:08:19.435
Keep an eye out for more Team
Drives episodes coming soon.

00:08:19.435 --> 00:08:21.060
Thanks for joining
us today, and please

00:08:21.060 --> 00:08:22.470
subscribe to our channel.

00:08:22.470 --> 00:08:24.510
This is Wesley Chun, and
we'll see you upstairs

00:08:24.510 --> 00:08:25.728
in the G Suite.

00:08:25.728 --> 00:08:29.712
[MUSIC PLAYING]

00:08:29.712 --> 00:08:30.880
Hey, everyone.

00:08:30.880 --> 00:08:31.870
Thanks for watching.

00:08:31.870 --> 00:08:33.179
Check out these related videos.

00:08:33.179 --> 00:08:34.345
And we'll see you next time.

00:08:34.345 --> 00:08:37.879
[MUSIC PLAYING]

