WEBVTT
Kind: captions
Language: en

00:00:00.230 --> 00:00:02.020
&gt;&gt; All right Michael, you got the answer?

00:00:02.020 --> 00:00:04.059
&gt;&gt; I'm still carrying some squareds.

00:00:04.059 --> 00:00:05.220
&gt;&gt; You want to talk it through?

00:00:05.220 --> 00:00:10.398
&gt;&gt; Okay. Sure. So, x is really x1x2 and y is

00:00:10.398 --> 00:00:15.486
really y1y2 and phi x is now this crazy triple x so I, so I

00:00:15.486 --> 00:00:20.713
wrote x1 squared x2 squared, square root of 2x 1x 2.

00:00:20.713 --> 00:00:21.443
&gt;&gt; Yeah.

00:00:21.443 --> 00:00:25.240
&gt;&gt; That's the vector that we get for phi x.

00:00:25.240 --> 00:00:30.130
Then for phi y, I get y1, it seems like it would be helpful to see this.

00:00:30.130 --> 00:00:31.440
&gt;&gt; You want me to right it down?

00:00:31.440 --> 00:00:32.100
&gt;&gt; Sure.

00:00:32.100 --> 00:00:38.243
&gt;&gt; Okay. So that turns out to be the same as

00:00:38.243 --> 00:00:43.151
what did you say? x1 squared, x2 squared.

00:00:43.151 --> 00:00:44.464
&gt;&gt; Root 2, x1, x2.

00:00:44.464 --> 00:00:49.160
&gt;&gt; Root 2, x1, x2. Okay.

00:00:49.160 --> 00:00:50.250
&gt;&gt; And then the y vector

00:00:50.250 --> 00:00:53.940
gets transformed to the same thing, except for with ys,

00:00:53.940 --> 00:00:59.490
y1 squared comma, y2 squared comma, root 2, y1, y2.

00:00:59.490 --> 00:00:59.990
&gt;&gt; Okay.

00:01:01.080 --> 00:01:04.230
&gt;&gt; So, then, the, the dot product is just, the, the products

00:01:04.230 --> 00:01:10.970
of the corresponding components summed up. So x1 squared, y1 squared plus,

00:01:10.970 --> 00:01:11.190
&gt;&gt; Okay

00:01:11.190 --> 00:01:13.150
&gt;&gt; X2 squared, y2 squared,

00:01:13.150 --> 00:01:14.843
&gt;&gt; Mm-hm

00:01:14.843 --> 00:01:15.271
&gt;&gt; 2

00:01:15.271 --> 00:01:19.130
x1, x2, y1, y2

00:01:19.130 --> 00:01:24.590
&gt;&gt; That's right. So here's a question for you, Michael. Does

00:01:24.590 --> 00:01:28.580
that look familiar? Based on your years of thinking about algebra.

00:01:28.580 --> 00:01:31.940
&gt;&gt; Oh, thanks for writing it that way! I see. We

00:01:31.940 --> 00:01:36.500
can, is this right? So it's, it's like, we can factor this.

00:01:36.500 --> 00:01:37.125
&gt;&gt; Mm-hm.

00:01:37.125 --> 00:01:40.501
&gt;&gt; It's like x1 plus

00:01:40.501 --> 00:01:45.340
x2 times y1 plus y2.

00:01:45.340 --> 00:01:47.820
&gt;&gt; Yeah, that's right. Wait, is that right?

00:01:47.820 --> 00:01:49.380
&gt;&gt; No it's not right. X1 Y1

00:01:49.380 --> 00:01:51.505
&gt;&gt; Mm-hm.

00:01:51.505 --> 00:01:53.940
&gt;&gt; Plus X2 Y2. Whole thing's squared.

00:01:53.940 --> 00:01:57.920
&gt;&gt; Right. So, let's right that down. So if you factor it out, you're right,

00:01:57.920 --> 00:02:05.100
this is exactly equal to, X1 Y1 plus X2

00:02:05.100 --> 00:02:10.570
Y2. Squared. And what's an even simpler way of writing that?

00:02:10.570 --> 00:02:16.121
&gt;&gt; I see. x1 y1 plus x2

00:02:16.121 --> 00:02:21.990
y2 looks like a dot product itself. It looks like the dot product of x and y.

00:02:21.990 --> 00:02:27.690
Oh, it's x transpose y on the inside, and then we square it on the outside.

00:02:27.690 --> 00:02:28.480
&gt;&gt; That's exactly right.

00:02:30.170 --> 00:02:33.350
So now do you see why there was method

00:02:33.350 --> 00:02:35.560
to my madness when I created the phi function?

00:02:35.560 --> 00:02:40.150
&gt;&gt; Not yet. So you're saying, if we're just dealing with

00:02:40.150 --> 00:02:43.330
dot products, now I'm still a little confused. So, so it is

00:02:43.330 --> 00:02:46.140
the case, that you define these in an interesting way, so

00:02:46.140 --> 00:02:48.790
that the dot product became the square of the old dot product.

00:02:48.790 --> 00:02:50.700
&gt;&gt; Right, so now let me make two

00:02:50.700 --> 00:02:55.480
observations. Okay. Here's observation one. What's x transpose y?

00:02:55.480 --> 00:02:58.180
I mean geometrically, what does that represent?

00:02:58.180 --> 00:03:01.130
&gt;&gt; The length of the projection of y onto x.

00:03:01.130 --> 00:03:03.640
&gt;&gt; No I mean geometrically, like go

00:03:03.640 --> 00:03:06.090
all the way back to geometry, third grade.

00:03:06.090 --> 00:03:09.340
&gt;&gt; We didn't do transposes in third grade. [LAUGH]

00:03:09.340 --> 00:03:11.670
&gt;&gt; I know we didn't do transposes, but you did equations

00:03:11.670 --> 00:03:14.140
like this, or at least later you learned they were equations

00:03:14.140 --> 00:03:16.880
like this. Here, pretend you're in third grade, and I said

00:03:16.880 --> 00:03:19.320
talk to me about geometry. What kind of words would you use?

00:03:19.320 --> 00:03:20.360
&gt;&gt; Oh,

00:03:20.360 --> 00:03:23.000
what's in geometry? Triangles. Circles.

00:03:23.000 --> 00:03:25.380
&gt;&gt; Yeah. Circles! Did you say circles?

00:03:25.380 --> 00:03:28.150
&gt;&gt; Sure, but only because I thought you might have wanted me to.

00:03:28.150 --> 00:03:30.100
&gt;&gt; Did you say circles?

00:03:30.100 --> 00:03:33.970
&gt;&gt; That's a really ugly looking circle, sure.

00:03:33.970 --> 00:03:39.140
&gt;&gt; Sure. This is basically a particular form of the equation for a circle

00:03:39.140 --> 00:03:41.520
Which means that we've gone from thinking

00:03:41.520 --> 00:03:45.460
about the linear relationship between Xi and

00:03:45.460 --> 00:03:48.060
Xj or your data points and we've now turned it

00:03:48.060 --> 00:03:50.670
into something that looks a lot more like a circle.

00:03:50.670 --> 00:03:52.150
&gt;&gt; Interesting.

00:03:52.150 --> 00:03:56.460
&gt;&gt; So if and this is my second point, Michael. If you believe

00:03:56.460 --> 00:04:01.790
me in the beginning where we notice that Xi transpose Xj is really about

00:04:01.790 --> 00:04:06.140
similarity. It's really about why it is you would say two points are close

00:04:06.140 --> 00:04:10.530
to one another or far apart from one another. By coming into this transformation

00:04:10.530 --> 00:04:13.590
over here, where we basically represented the equation for a

00:04:13.590 --> 00:04:17.810
circle, we have now replaced our notion of similarity from

00:04:17.810 --> 00:04:21.190
being this very simple projection to being the notion of

00:04:21.190 --> 00:04:25.270
similarity is whether you fall in or out of a circle.

00:04:25.270 --> 00:04:27.170
&gt;&gt; So more sort of about the

00:04:27.170 --> 00:04:30.030
distance as opposed to what direction you're pointing.

00:04:30.030 --> 00:04:32.500
&gt;&gt; Right, and both of them are fine

00:04:32.500 --> 00:04:35.950
because both of them represent some notion of similarity,

00:04:35.950 --> 00:04:39.380
some notion of distance in some space. In the

00:04:39.380 --> 00:04:43.300
original case, we're talking about two points that are lined

00:04:43.300 --> 00:04:46.960
up together. And over here together with this particular equation

00:04:46.960 --> 00:04:50.310
we represented whether they're inside the radius of a circle

00:04:50.310 --> 00:04:52.280
or outside the radius of a circle. Now this

00:04:52.280 --> 00:04:55.350
particular example assumes that the circle is centered at the

00:04:55.350 --> 00:04:57.890
origin and so on and so forth, but the idea

00:04:57.890 --> 00:05:01.470
I want you to see is that we could transform

00:05:01.470 --> 00:05:03.930
all of our data so that we separated

00:05:03.930 --> 00:05:06.660
points from within one circle to points that

00:05:06.660 --> 00:05:08.940
are outside of the circle. And then, if

00:05:08.940 --> 00:05:12.200
we do that, projecting from two dimensions here

00:05:12.200 --> 00:05:15.060
into three dimensions, we've basically taken all of

00:05:15.060 --> 00:05:17.680
the pluses and moved them up and all

00:05:17.680 --> 00:05:19.970
of the minuses and moved them back, and

00:05:19.970 --> 00:05:22.810
now we can separate them with the hyperplane.

00:05:22.810 --> 00:05:24.310
&gt;&gt; Without knowing which ones are the pluses

00:05:24.310 --> 00:05:25.800
and which ones are the minuses, of course.

00:05:25.800 --> 00:05:27.360
&gt;&gt; Of course.

00:05:27.360 --> 00:05:30.840
&gt;&gt; Because, I see, because they are the ones that were closer to the origin.

00:05:30.840 --> 00:05:31.490
&gt;&gt; Right.

00:05:31.490 --> 00:05:35.630
&gt;&gt; So they get raised up less. Wow. Okay. So using that third dimension.

00:05:35.630 --> 00:05:38.910
&gt;&gt; Right. Now, this is a cute trick, right? I can basically

00:05:38.910 --> 00:05:42.580
take my data, and I transform it into a higher dimensional space,

00:05:42.580 --> 00:05:47.070
where suddenly I'm now able to separate it linearly. That's very cute,

00:05:47.070 --> 00:05:51.205
but I chose this particular form for a reason. Can you guess why?

00:05:51.205 --> 00:05:52.470
&gt;&gt; Because it fits

00:05:52.470 --> 00:05:54.650
the circle pattern that you wanted.

00:05:54.650 --> 00:05:55.800
&gt;&gt; But there are lots of different ways we

00:05:55.800 --> 00:05:58.100
could have fit the circle pattern. I chose this

00:05:58.100 --> 00:06:00.120
particular form because not only does it fit the

00:06:00.120 --> 00:06:03.620
circle pattern, but it doesn't require that I do this

00:06:03.620 --> 00:06:06.700
particular transformation. Rather than taking all of my data

00:06:06.700 --> 00:06:10.040
points and projecting them up into three dimensions directly,

00:06:10.040 --> 00:06:13.870
I can instead still simply compute the dot product

00:06:13.870 --> 00:06:15.680
and now I take that answer and I square it.

00:06:15.680 --> 00:06:17.640
&gt;&gt; So you're saying

00:06:17.640 --> 00:06:21.020
in this formulation of the quadratic program that

00:06:21.020 --> 00:06:23.450
you have there in terms of capital W

00:06:23.450 --> 00:06:27.664
if you write code to do that, each time in the code you want to compute that

00:06:27.664 --> 00:06:31.750
x1 err Xi transpose times Xj, if you

00:06:31.750 --> 00:06:33.840
just squared it right before you actually used

00:06:33.840 --> 00:06:35.880
it, it would be as if you projected

00:06:35.880 --> 00:06:37.800
it into this third dimension and found a plane?

00:06:37.800 --> 00:06:39.170
&gt;&gt; Yes, that's exactly right.

00:06:39.170 --> 00:06:40.190
&gt;&gt; That's crazy.

00:06:40.190 --> 00:06:42.830
&gt;&gt; It's so crazy it has a name. And that

00:06:42.830 --> 00:06:48.340
is the kernel trick. So, again

00:06:48.340 --> 00:06:53.780
if we really push on this notion of similarity. What we're really saying is

00:06:53.780 --> 00:06:59.050
we care about maximizing some function that depends highly upon

00:06:59.050 --> 00:07:01.110
how different data points are alike, or

00:07:01.110 --> 00:07:04.100
how they are different. And simply by writing

00:07:04.100 --> 00:07:08.030
it this particular way, all we're saying is, you know what, we think the inner

00:07:08.030 --> 00:07:11.810
product is how we should define similarity. But instead,

00:07:11.810 --> 00:07:15.640
we could use a different function altogether, phi or more

00:07:15.640 --> 00:07:19.700
nicely represented as x transpose y squared, and say, that's

00:07:19.700 --> 00:07:22.630
our notion of similarity. And we can substitute it accordingly.

00:07:22.630 --> 00:07:24.520
&gt;&gt; So we never really used phi.

00:07:24.520 --> 00:07:28.040
&gt;&gt; We never used phi. We're able to avoid all of that by

00:07:28.040 --> 00:07:30.160
coming up with a clever representation of

00:07:30.160 --> 00:07:33.630
similarity. That just so happened to represent

00:07:33.630 --> 00:07:36.590
something, or could represent something in a higher dimensional space.

00:07:36.590 --> 00:07:39.570
&gt;&gt; So is it important that such a phi exists?

00:07:39.570 --> 00:07:41.585
Or is it just the case that we can, you

00:07:41.585 --> 00:07:44.120
know, we could, we could throw in a cubed, we

00:07:44.120 --> 00:07:46.525
could throw in a fourth, we could do a square

00:07:46.525 --> 00:07:48.735
root and a log, like can we do anything we

00:07:48.735 --> 00:07:51.316
want there in that Xi transpose Xj? Or are we

00:07:51.316 --> 00:07:54.750
constrained to only use things that somewhere out there, there

00:07:54.750 --> 00:07:57.020
is a way of representing it as a regular dot product?

00:07:57.020 --> 00:07:58.850
&gt;&gt; Well, that is an interesting question. The answer

00:07:58.850 --> 00:08:02.620
is you can't just use anything, but in practice it turns out

00:08:02.620 --> 00:08:06.062
you can use almost anything. And the other answer to your question

00:08:06.062 --> 00:08:08.506
is, it turns out for any function that you use, there is

00:08:08.506 --> 00:08:10.794
some transformation into some dimensional space,

00:08:10.794 --> 00:08:14.010
higher dimensional space, that is equivalent.

00:08:14.010 --> 00:08:14.220
&gt;&gt; Whoa.

00:08:14.220 --> 00:08:19.360
&gt;&gt; Now, it may turn out that you need an infinite number of dimensions

00:08:19.360 --> 00:08:21.150
to represent it. But there is some

00:08:21.150 --> 00:08:24.070
way of transform, transforming your points into higher

00:08:24.070 --> 00:08:26.770
dimensional space that happens to represent this

00:08:26.770 --> 00:08:29.370
kernel, or whatever kernel you choose to use.

00:08:29.370 --> 00:08:30.720
&gt;&gt; So, which part is the kernel?

00:08:30.720 --> 00:08:33.662
&gt;&gt; So, the kernel is the function itself. So, in

00:08:33.662 --> 00:08:35.542
fact, let me, let me, let me clean up this

00:08:35.542 --> 00:08:37.566
screen a little bit. And, and see if we can

00:08:37.566 --> 00:08:40.039
make this a little bit more precise and easier to understand.

