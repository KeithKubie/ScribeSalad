WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:02.765
To look at the documentation, you'll simply type in

00:00:02.765 --> 00:00:07.260
?cor.test. That will bring up this page. It looks

00:00:07.260 --> 00:00:09.880
like cor.test takes two vectors x and y. And

00:00:09.880 --> 00:00:13.170
then it will compute the correlation coefficient. It looks like

00:00:13.170 --> 00:00:15.640
we have a couple methods for determining that coefficient

00:00:15.640 --> 00:00:19.020
and we could either use pearson, kendall or spearman. For

00:00:19.020 --> 00:00:22.320
our purposes, we'll be using the pearson method. So

00:00:22.320 --> 00:00:25.870
your code might have looked like this. Writing this code,

00:00:25.870 --> 00:00:30.800
we get a correlation coefficient of 0.0274. This

00:00:30.800 --> 00:00:33.380
indicates that there's no meaningful relationship between the

00:00:33.380 --> 00:00:35.680
two variables. A good rule of thumb is

00:00:35.680 --> 00:00:38.650
that a correlation greater than 0.3 or less

00:00:38.650 --> 00:00:42.445
than minus 0.3, is meaningful, but small. Around

00:00:42.445 --> 00:00:45.240
0.5 is moderate and 0.7 or greater is

00:00:45.240 --> 00:00:47.880
pretty large. Another way to compute the same

00:00:47.880 --> 00:00:50.990
coefficient is to use this code. Here, I'm using

00:00:50.990 --> 00:00:55.030
the width function for around the data frame. The width function let's us

00:00:55.030 --> 00:00:57.180
evaluate an R expression in an environment

00:00:57.180 --> 00:00:59.490
constructed from the data. Now, I know

00:00:59.490 --> 00:01:02.210
I haven't shown you this function yet but I wanted to introduce it to

00:01:02.210 --> 00:01:05.740
you. Running this bit of code we see that we get the same result.

