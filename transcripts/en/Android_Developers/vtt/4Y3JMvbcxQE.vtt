WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.470
JOANNA SMITH: This
is your Recents menu,

00:00:02.470 --> 00:00:04.610
also called the Overview screen.

00:00:04.610 --> 00:00:07.130
Some apps have more than one
card in this Overview screen,

00:00:07.130 --> 00:00:08.950
which can make
them seem special.

00:00:08.950 --> 00:00:10.970
So how do those apps swing it?

00:00:10.970 --> 00:00:13.660
Well, the Overview
screen is not actually

00:00:13.660 --> 00:00:16.160
a list of the recent
apps a user has used,

00:00:16.160 --> 00:00:17.740
despite what you may think.

00:00:17.740 --> 00:00:20.325
Rather, it is a list of tasks.

00:00:20.325 --> 00:00:22.450
Side note-- if you'd like
to learn all about tasks,

00:00:22.450 --> 00:00:24.116
check the link in the
description below.

00:00:24.116 --> 00:00:26.670
Ian has a lot to say.

00:00:26.670 --> 00:00:28.270
Tasks are a great
way for your app

00:00:28.270 --> 00:00:30.350
to distinguish between
disparate elements

00:00:30.350 --> 00:00:33.530
where a user might want to
switch between each piece.

00:00:33.530 --> 00:00:35.700
Consider an email app
with a task for the inbox

00:00:35.700 --> 00:00:38.860
and a separate task for
composing a new email, so

00:00:38.860 --> 00:00:41.110
that the user can reference
back to the existing email

00:00:41.110 --> 00:00:42.850
when drafting their response.

00:00:42.850 --> 00:00:45.800
This is a beautiful
use of tasks.

00:00:45.800 --> 00:00:48.420
Another useful way to think of
how your app should use tasks

00:00:48.420 --> 00:00:51.190
is to consider the
multi-window implications.

00:00:51.190 --> 00:00:54.652
In the multi-window world, each
task will have its own window.

00:00:54.652 --> 00:00:56.610
So if two elements of
your app should logically

00:00:56.610 --> 00:00:59.010
exist independently,
but side by side,

00:00:59.010 --> 00:01:01.430
that's a moment for tasks.

00:01:01.430 --> 00:01:04.150
We call multiple tasks
"concurrent documents."

00:01:04.150 --> 00:01:05.940
This sense of your
app multitasking

00:01:05.940 --> 00:01:07.769
is where the "concurrent"
part comes in.

00:01:07.769 --> 00:01:10.060
You've got a stack of activities
that the user probably

00:01:10.060 --> 00:01:12.080
wants to interact
with in parallel

00:01:12.080 --> 00:01:14.400
with another stack
of activities.

00:01:14.400 --> 00:01:16.730
The "document" part is
actually shorthand for anything

00:01:16.730 --> 00:01:18.590
that you create that
lives separately

00:01:18.590 --> 00:01:20.050
from the rest of your app.

00:01:20.050 --> 00:01:22.840
So it could actually be a
document in a text editor,

00:01:22.840 --> 00:01:25.970
but it could also be that draft
email, or a separate browser

00:01:25.970 --> 00:01:28.220
window, or a
specific conversation

00:01:28.220 --> 00:01:30.240
view for a messaging app.

00:01:30.240 --> 00:01:33.120
So the first step in
creating concurrent documents

00:01:33.120 --> 00:01:36.210
is identifying what should
logically exist independently.

00:01:36.210 --> 00:01:38.600
And to that end,
multi-window really

00:01:38.600 --> 00:01:41.360
helps distinguish good cases
for concurrent documents.

00:01:41.360 --> 00:01:44.180
Any time you'd want to see
two activities side by side,

00:01:44.180 --> 00:01:46.850
those would have to
be separate tasks.

00:01:46.850 --> 00:01:48.640
To add a task to
the Overview screen,

00:01:48.640 --> 00:01:50.140
there is a pretty
helpful manifest

00:01:50.140 --> 00:01:52.150
attribute you can
specify when registering

00:01:52.150 --> 00:01:54.130
an activity in your manifest.

00:01:54.130 --> 00:01:57.030
"android:documentLaunchMode"
has four possible values.

00:01:57.030 --> 00:01:59.940
"intoExisting" re-uses any
existing alternative document

00:01:59.940 --> 00:02:02.120
for this task, but
creates a new task

00:02:02.120 --> 00:02:03.670
if one doesn't already exist.

00:02:03.670 --> 00:02:06.960
"always" will create a brand
new document for the task.

00:02:06.960 --> 00:02:09.150
"none" creates the
task in the same window

00:02:09.150 --> 00:02:10.690
as the current activity, a.k.a.

00:02:10.690 --> 00:02:11.840
On the same stack.

00:02:11.840 --> 00:02:13.880
This is the default behavior.

00:02:13.880 --> 00:02:16.840
And "never" serves to
override any specified flags

00:02:16.840 --> 00:02:20.490
and permanently keep the
task in the current stack.

00:02:20.490 --> 00:02:22.700
What specified flags
am I talking about?

00:02:22.700 --> 00:02:25.340
Well, if you prefer to determine
whether the task should

00:02:25.340 --> 00:02:27.480
be in a separate
document dynamically,

00:02:27.480 --> 00:02:30.390
you can specify flags
when starting the Intent.

00:02:30.390 --> 00:02:33.730
To be clear, the creation of
a task isn't actually special.

00:02:33.730 --> 00:02:36.820
You'll create an Intent and
pass it to "startActivity."

00:02:36.820 --> 00:02:40.750
But the creation of that Intent
is where you can get clever.

00:02:40.750 --> 00:02:43.510
If you haven't already, it's
time to meet the "addFlags()"

00:02:43.510 --> 00:02:44.780
method.

00:02:44.780 --> 00:02:48.070
"FLAG_ACTIVITY_NEW_DOCUMENT"
is fairly straightforward.

00:02:48.070 --> 00:02:50.240
It tells the system to
treat this next task

00:02:50.240 --> 00:02:52.760
as its own window in
the Overview screen.

00:02:52.760 --> 00:02:55.170
If there is an existing task
with the same base component

00:02:55.170 --> 00:02:57.810
name and data URI, the
system will use it.

00:02:57.810 --> 00:02:59.930
This means that your
new document could be

00:02:59.930 --> 00:03:01.770
replacing an existing document.

00:03:01.770 --> 00:03:04.350
However, you can override
this default behavior.

00:03:04.350 --> 00:03:07.030
If you always want the system
to create a brand new task,

00:03:07.030 --> 00:03:10.660
you can add the
"FLAG_ACTIVITY_MULTIPLE_TASK."

00:03:10.660 --> 00:03:12.920
In multi-window mode,
this gets even better,

00:03:12.920 --> 00:03:15.140
as you can use
"FLAG_ACTIVITY_LAUNCH_ADJACENT"

00:03:15.140 --> 00:03:17.721
in conjunction with
"FLAG_ACTIVITY_NEW_DOCUMENT"

00:03:17.721 --> 00:03:19.970
to hint to the system that
the task should be launched

00:03:19.970 --> 00:03:22.870
alongside the existing task.

00:03:22.870 --> 00:03:25.450
So the manifest attribute
and the intent flags

00:03:25.450 --> 00:03:27.350
offer you the same options.

00:03:27.350 --> 00:03:29.040
"intoExisting" is
equivalent to using

00:03:29.040 --> 00:03:31.540
"FLAG_ACTIVITY_NEW_DOCUMENT,"
whereas, "always"

00:03:31.540 --> 00:03:33.320
is equivalent to using
"NEW_DOCUMENT" and

00:03:33.320 --> 00:03:34.947
"MULTIPLE_TASKS" together.

00:03:34.947 --> 00:03:36.780
Keep in mind, though,
that an attribute only

00:03:36.780 --> 00:03:38.840
needs to be specified
once for the Activity,

00:03:38.840 --> 00:03:41.636
while a flag will need to
be added to every Intent.

00:03:41.636 --> 00:03:43.010
So you'll probably
want to choose

00:03:43.010 --> 00:03:46.240
a path based on the variability
of your Activity's use case.

00:03:46.240 --> 00:03:49.710
But between manifest attributes
for default document behavior

00:03:49.710 --> 00:03:52.130
and flags for dynamic
task creation,

00:03:52.130 --> 00:03:54.810
your app will be dominating
that Recent screen.

00:03:54.810 --> 00:03:56.572
Just, you know, be
sure that domination

00:03:56.572 --> 00:03:58.030
is thoughtful and
useful to a user,

00:03:58.030 --> 00:03:59.446
because you don't
want to go crazy

00:03:59.446 --> 00:04:00.895
and get yourself uninstalled.

00:04:00.895 --> 00:04:02.770
So now you're ready for
concurrent documents.

00:04:02.770 --> 00:04:05.186
Check out the blog post linked
in the description for more

00:04:05.186 --> 00:04:07.740
usage information and for code
that you can copy and paste

00:04:07.740 --> 00:04:10.480
into your own app to
build better apps.

00:04:10.480 --> 00:04:13.830
[MUSIC PLAYING]

