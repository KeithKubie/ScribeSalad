WEBVTT
Kind: captions
Language: en

00:00:02.020 --> 00:00:02.980
JENNY MURPHY: Hello
there everyone.

00:00:02.980 --> 00:00:05.680
Welcome to another session
of the Google+

00:00:05.680 --> 00:00:08.580
platform Office Hours.

00:00:08.580 --> 00:00:12.820
Today we're going to be doing an
overview of the REST APIs,

00:00:12.820 --> 00:00:16.180
which are a major component
of the Google+ platform.

00:00:16.180 --> 00:00:18.120
So this is another one of
those kind of one-on-one

00:00:18.120 --> 00:00:21.940
sessions to get you started on
developing with REST APIs if

00:00:21.940 --> 00:00:24.050
you've been interested in them,
but haven't had a chance

00:00:24.050 --> 00:00:27.050
to develop on them yet.

00:00:27.050 --> 00:00:27.880
I'm your host today.

00:00:27.880 --> 00:00:28.830
I'm Jenny Murphy.

00:00:28.830 --> 00:00:32.070
I'm a developer programs
engineer here at Google.

00:00:32.070 --> 00:00:33.790
I spend a lot of
my time working

00:00:33.790 --> 00:00:35.070
on the Google+ platform.

00:00:35.070 --> 00:00:38.650
And the REST APIs are actually
the area I spend most of my

00:00:38.650 --> 00:00:41.150
time focusing on.

00:00:41.150 --> 00:00:43.490
And I have a couple people
who've joined me today.

00:00:43.490 --> 00:00:43.930
ALLEN FIRSTENBERG: Hi there.

00:00:43.930 --> 00:00:45.620
I'm Allen Firstenberg.

00:00:45.620 --> 00:00:48.490
I am a developer
from New York.

00:00:48.490 --> 00:00:51.650
Mostly I develop with the
Hangout API, but I also do

00:00:51.650 --> 00:00:54.874
some work with the REST API.

00:00:54.874 --> 00:00:55.360
MARTIN: Yeah, hi.

00:00:55.360 --> 00:00:57.150
I'm Martin from Germany.

00:00:57.150 --> 00:00:58.700
I'm studying computer
sciences.

00:00:58.700 --> 00:01:04.209
And I do a lot with the
REST API as well.

00:01:04.209 --> 00:01:04.900
JENNY MURPHY: Great.

00:01:04.900 --> 00:01:07.090
And thanks a lot for joining
me guys, otherwise I'd be

00:01:07.090 --> 00:01:09.610
really lonely here.

00:01:09.610 --> 00:01:11.540
So what we're going to be doing
today is I'm going to be

00:01:11.540 --> 00:01:13.040
going through some slides.

00:01:13.040 --> 00:01:13.950
Oh no.

00:01:13.950 --> 00:01:18.050
And some demos of one of
our starter projects.

00:01:18.050 --> 00:01:21.550
And then I'm going to be
fielding some questions that

00:01:21.550 --> 00:01:22.260
you guys ask.

00:01:22.260 --> 00:01:24.720
And if you have any questions,
there's a link to the

00:01:24.720 --> 00:01:27.000
announcement thread
that should be on

00:01:27.000 --> 00:01:28.230
the post you're seeing.

00:01:28.230 --> 00:01:32.540
And just go ahead and put your
questions there, and hopefully

00:01:32.540 --> 00:01:34.110
we'll get to them.

00:01:34.110 --> 00:01:36.510
So without further ado, I'm
going to dive in and start

00:01:36.510 --> 00:01:38.770
telling you about
the REST APIs.

00:01:38.770 --> 00:01:42.560
So the Google+ platform,
RES API edition.

00:01:42.560 --> 00:01:44.950
This little drawing below here
with all the cool arrows on

00:01:44.950 --> 00:01:46.540
it, that's what we're going
to be talking about.

00:01:46.540 --> 00:01:48.850
It's the Google+ platform.

00:01:48.850 --> 00:01:50.680
And the REST APIs
are part of it.

00:01:50.680 --> 00:01:53.600
I guess the red arrows because
they kind of have the center

00:01:53.600 --> 00:01:55.520
ring, kind of a core
part of it.

00:02:00.280 --> 00:02:02.280
So what is the Google+
platform?

00:02:02.280 --> 00:02:04.560
Before I can really dig into the
REST APIs, I kind of have

00:02:04.560 --> 00:02:06.260
to explain how they kind
of hang together

00:02:06.260 --> 00:02:07.640
with everything else.

00:02:07.640 --> 00:02:12.590
The Google+ platform has a few
major components to it that

00:02:12.590 --> 00:02:14.870
are largely independent
but can work

00:02:14.870 --> 00:02:17.980
together in many cases.

00:02:17.980 --> 00:02:22.230
So there's the REST APIs which
are the way you access data

00:02:22.230 --> 00:02:23.730
that is on Google+.

00:02:23.730 --> 00:02:25.530
So if you're writing another
application and you want to

00:02:25.530 --> 00:02:28.770
read data from Google+,
this is how you do it.

00:02:28.770 --> 00:02:31.282
There's also the plug-ins, which
are probably the ones

00:02:31.282 --> 00:02:32.950
you're most familiar with,
because you've probably seen

00:02:32.950 --> 00:02:35.010
the Plus One button in
a lot of places.

00:02:35.010 --> 00:02:38.160
And hopefully you've seen the
badge elsewhere also.

00:02:38.160 --> 00:02:40.810
These go on web applications
and are a way that you can

00:02:40.810 --> 00:02:44.830
actually insert data into
Google+ via shares.

00:02:44.830 --> 00:02:48.070
And finally, below are the
really fun Hangout apps.

00:02:48.070 --> 00:02:51.730
And these allow you to write
interactive applications that

00:02:51.730 --> 00:02:54.560
are a real-time collaboration
between people who are

00:02:54.560 --> 00:02:56.570
participating in a Hangout.

00:02:56.570 --> 00:02:59.130
Today we're going to be focusing
on the REST APIs and

00:02:59.130 --> 00:03:01.080
how you can access data
that's already

00:03:01.080 --> 00:03:04.424
on the Google+ platform.

00:03:04.424 --> 00:03:06.840
Yeah, today we will
rest, REST APIs.

00:03:09.890 --> 00:03:13.480
So what are the REST
APIs really about?

00:03:13.480 --> 00:03:16.470
The REST APIs are primarily
about accessing

00:03:16.470 --> 00:03:19.250
public data on Google+.

00:03:19.250 --> 00:03:21.460
It allows your applications that
you write, whether they

00:03:21.460 --> 00:03:25.160
be web applications, mobile
applications, whatever, to be

00:03:25.160 --> 00:03:28.890
able to access the data that's
on Google+ that users have

00:03:28.890 --> 00:03:32.240
created, via a kind of
language-agnostic,

00:03:32.240 --> 00:03:35.250
platform-independent way.

00:03:35.250 --> 00:03:37.650
In addition to public data,
there is a very small amount

00:03:37.650 --> 00:03:40.910
of private data you can get to
right now, which we're always

00:03:40.910 --> 00:03:42.200
looking to expand.

00:03:42.200 --> 00:03:44.250
Or we're always investigating
new cool things

00:03:44.250 --> 00:03:46.010
we can add to it.

00:03:46.010 --> 00:03:48.590
And all of that data, which is
private to users, is protected

00:03:48.590 --> 00:03:50.110
via OAuth 2.0.

00:03:50.110 --> 00:03:53.510
So this allows your users to
authorize you to access data

00:03:53.510 --> 00:03:55.740
on the Google+ platform that
is not necessarily public.

00:03:59.230 --> 00:04:01.190
That covers the API surface.

00:04:01.190 --> 00:04:06.140
But there's a lot more to the
REST API offering we have. We

00:04:06.140 --> 00:04:07.890
have recommend client
libraries.

00:04:07.890 --> 00:04:10.690
These are client libraries that
we built that make use of

00:04:10.690 --> 00:04:11.480
the REST API.

00:04:11.480 --> 00:04:14.410
And the intent is to make things
a lot easier for you.

00:04:14.410 --> 00:04:16.410
So when you're developing, you
don't have to worry about a

00:04:16.410 --> 00:04:18.680
lot of the boilerplate stuff.

00:04:18.680 --> 00:04:22.800
And I'll be describing those in
a little more detail later.

00:04:22.800 --> 00:04:25.730
Client libraries, they're cool
and all, but whenever you work

00:04:25.730 --> 00:04:28.430
with a new framework, or a new
client library, or something

00:04:28.430 --> 00:04:30.390
like that, there's
a learning curve.

00:04:30.390 --> 00:04:32.480
And we have some start-up
projects which make that

00:04:32.480 --> 00:04:35.330
learning curve a lot easier to
get over and get you something

00:04:35.330 --> 00:04:36.000
running right away.

00:04:36.000 --> 00:04:38.120
And I'll be demoing one of
those at the end of this

00:04:38.120 --> 00:04:39.370
discussion.

00:04:42.660 --> 00:04:44.590
So let's get back to
t API surface.

00:04:44.590 --> 00:04:45.640
What can you access?

00:04:45.640 --> 00:04:49.960
I mentioned public data, but
what does that really mean?

00:04:49.960 --> 00:04:52.410
You can see up close on the
screen, this is just a picture

00:04:52.410 --> 00:04:55.000
of an orange that I posted that
got a little bit of buzz.

00:04:55.000 --> 00:04:56.540
I guess it got people excited.

00:04:56.540 --> 00:04:59.810
But I just used it to play
with the API, because it

00:04:59.810 --> 00:05:02.000
demonstrates the things
you can get to at the

00:05:02.000 --> 00:05:04.520
REST API right now.

00:05:04.520 --> 00:05:05.860
One of the things you
can access is

00:05:05.860 --> 00:05:08.430
public fields of profiles.

00:05:08.430 --> 00:05:11.880
So any fields that I've made
public on my profile are going

00:05:11.880 --> 00:05:15.120
to be exposed via
the REST API.

00:05:15.120 --> 00:05:17.990
In addition to that, you can
see public activities.

00:05:17.990 --> 00:05:22.320
So the activity contents, any
objects that are attached to

00:05:22.320 --> 00:05:26.180
that activity, +1s, that kind
of information, the re-share

00:05:26.180 --> 00:05:29.370
account, we can access all of
that about existing activities

00:05:29.370 --> 00:05:33.190
on Google+, assuming they're
public activities.

00:05:33.190 --> 00:05:35.950
And finally, one other entity
you can access right now.

00:05:35.950 --> 00:05:37.800
You can access the
comments that are

00:05:37.800 --> 00:05:40.300
associated with an activity.

00:05:40.300 --> 00:05:42.640
So if the activity is public,
you can see all the comments,

00:05:42.640 --> 00:05:44.640
because those comments are
public by association.

00:05:50.350 --> 00:05:52.290
So now that you know what you
can access, how do you

00:05:52.290 --> 00:05:54.770
actually learn how to use it?

00:05:54.770 --> 00:05:57.710
The reference docs are a great
place to both start and then

00:05:57.710 --> 00:06:00.160
to return to as you're doing
your development.

00:06:00.160 --> 00:06:01.810
And one of the things that
makes our reference docs

00:06:01.810 --> 00:06:06.670
really cool is they're not just
a list of methods, and

00:06:06.670 --> 00:06:08.820
attributes, and that
kind of stuff.

00:06:08.820 --> 00:06:14.000
We have code samples in some
popular languages,

00:06:14.000 --> 00:06:17.670
specifically Java, Ruby,
Python, PHP.

00:06:17.670 --> 00:06:20.220
Little code snippets that show
you how to use it in a

00:06:20.220 --> 00:06:24.520
realistic case for each
one of our methods.

00:06:24.520 --> 00:06:27.510
And then, if you want to dive in
right away, we have this A

00:06:27.510 --> 00:06:30.210
Explorer that's embedded right
into the reference docs.

00:06:30.210 --> 00:06:32.160
So all you have to do is scroll
down, and you can use

00:06:32.160 --> 00:06:34.560
it right in front of you.

00:06:34.560 --> 00:06:35.810
So let's take a look at it.

00:06:39.190 --> 00:06:40.680
Here are the reference docs.

00:06:40.680 --> 00:06:45.200
If you just go to
developers.google.com/+/api,

00:06:45.200 --> 00:06:46.090
you'll land here.

00:06:46.090 --> 00:06:49.940
Let me zoom in so you can
see it a little better.

00:06:49.940 --> 00:06:52.040
They're organized in,
kind of, the way

00:06:52.040 --> 00:06:53.610
you'd expect, by entity.

00:06:53.610 --> 00:06:57.990
And within each entity, we list
the methods you can run.

00:06:57.990 --> 00:07:00.380
We're going to look at people
again, because it's a really

00:07:00.380 --> 00:07:03.210
simple one.

00:07:03.210 --> 00:07:05.210
And when you get here, you'll
see the kind of stuff you

00:07:05.210 --> 00:07:05.920
would expect.

00:07:05.920 --> 00:07:08.470
You'll see the structure of
the URL, because it's a

00:07:08.470 --> 00:07:11.390
RESTful API, the list
of the parameters.

00:07:14.970 --> 00:07:17.010
And here's the interesting
stuff.

00:07:17.010 --> 00:07:19.880
We have little code snippets.

00:07:19.880 --> 00:07:22.090
Let me get it focused
on there.

00:07:22.090 --> 00:07:24.100
We have code snippets in each
one of those languages.

00:07:24.100 --> 00:07:27.392
And it will keep track of your
favorite language, the last

00:07:27.392 --> 00:07:28.010
one you selected.

00:07:28.010 --> 00:07:29.480
But you can pretty
easily switch.

00:07:29.480 --> 00:07:32.680
Oops, the menu shifted over,
probably from the browser

00:07:32.680 --> 00:07:35.020
zoom, but now it's
a Python snippet.

00:07:39.930 --> 00:07:42.550
Pretty cool.

00:07:42.550 --> 00:07:45.490
And right below that is
the API Explorer.

00:07:45.490 --> 00:07:48.240
So we can really
easily try it.

00:07:48.240 --> 00:07:52.290
So let's try the
peopleget API.

00:07:52.290 --> 00:07:55.540
So I'm going to go over and grab
my profile ID, which you

00:07:55.540 --> 00:07:59.340
can get from the URL of
your Google+ profile.

00:07:59.340 --> 00:08:01.280
Then we can execute it.

00:08:01.280 --> 00:08:05.240
And below this little window
as it appeared, the REST

00:08:05.240 --> 00:08:08.560
representation of my profile
on Google+, all

00:08:08.560 --> 00:08:11.680
those public fields.

00:08:11.680 --> 00:08:13.970
This is a really cool way to get
started and start to see

00:08:13.970 --> 00:08:17.410
what kind of information you
have access to on the APIs.

00:08:17.410 --> 00:08:19.330
But it's also really useful when
you're troubleshooting

00:08:19.330 --> 00:08:23.400
later on, kind of as a sanity
check, to see what's really

00:08:23.400 --> 00:08:25.090
coming back from the API.

00:08:25.090 --> 00:08:27.400
And I end up using the API
Explorer a whole lot when I

00:08:27.400 --> 00:08:29.040
develop on the APIs.

00:08:29.040 --> 00:08:30.960
It's one of those tools that
kind of never gets old.

00:08:34.799 --> 00:08:39.360
So previously I was talking a
lot about accessing the public

00:08:39.360 --> 00:08:44.470
data via that API Explorer field
on the reference docs.

00:08:44.470 --> 00:08:46.860
And so far, all I really
talked about

00:08:46.860 --> 00:08:47.860
is that public data.

00:08:47.860 --> 00:08:50.180
But I mentioned some private
data before.

00:08:50.180 --> 00:08:53.020
So you can actually access one
piece of private information

00:08:53.020 --> 00:08:56.330
via the Google+ REST
APIs, and that is

00:08:56.330 --> 00:08:59.310
somebody's identity on Google+.

00:08:59.310 --> 00:09:01.600
So you have your third-party
application.

00:09:01.600 --> 00:09:03.300
And you want to be able
to, for example,

00:09:03.300 --> 00:09:06.010
access their profile.

00:09:06.010 --> 00:09:09.090
This is cool and everything,
but if they have to type in

00:09:09.090 --> 00:09:11.920
their user ID, it doesn't
really work.

00:09:11.920 --> 00:09:15.110
So what we allow you to do
is use a placeholder, me.

00:09:15.110 --> 00:09:19.275
And me can be anyone,
usually your user.

00:09:21.950 --> 00:09:24.550
And then, your user is prompted
with an authorization

00:09:24.550 --> 00:09:27.950
page that allows them to
authorize your application to

00:09:27.950 --> 00:09:30.400
convert that me into
your profile ID.

00:09:30.400 --> 00:09:32.920
And then you can use that, as a
developer, to access all of

00:09:32.920 --> 00:09:36.390
the other public information
that they've created.

00:09:36.390 --> 00:09:37.655
So let's take a look
at it in action.

00:09:40.240 --> 00:09:42.920
I'll zoom in a little more,
so you can see better.

00:09:42.920 --> 00:09:47.500
This is the people-get method
we were looking at earlier.

00:09:47.500 --> 00:09:49.440
Same window on the
reference docs.

00:09:49.440 --> 00:09:52.910
I'm down here at the API
Explorer in the bottom.

00:09:52.910 --> 00:09:54.355
There's a little switch
on the right side we

00:09:54.355 --> 00:09:55.600
were ignoring before.

00:09:55.600 --> 00:09:58.300
It's the OAuth dialogue.

00:09:58.300 --> 00:10:03.690
So we hit this, and it's going
to allow us to use OAuth to

00:10:03.690 --> 00:10:06.290
authorize with the user, who
is, in this case, me.

00:10:06.290 --> 00:10:09.250
So I'm going to be authorizing
the API Explorer to find out

00:10:09.250 --> 00:10:11.930
who I am on Google+.

00:10:11.930 --> 00:10:14.450
OAuth uses scopes to determine
the specific permissions you

00:10:14.450 --> 00:10:15.290
are requesting.

00:10:15.290 --> 00:10:18.820
In this case, plus set
me is equivalent to

00:10:18.820 --> 00:10:20.700
my identity on Google+.

00:10:20.700 --> 00:10:22.690
So let's hit Authorize.

00:10:22.690 --> 00:10:25.190
It pops up an authorization
prompt, which is actually in a

00:10:25.190 --> 00:10:26.730
different window.

00:10:26.730 --> 00:10:29.080
But I just authorized it.

00:10:29.080 --> 00:10:31.680
You'll have to trust me there.

00:10:31.680 --> 00:10:34.950
Now that we're authorized,
we can do execute.

00:10:34.950 --> 00:10:38.480
And we can see below
that I have done

00:10:38.480 --> 00:10:41.550
a request for people/me.

00:10:41.550 --> 00:10:44.400
And what I've gotten back is
my profile on Google+.

00:10:44.400 --> 00:10:48.960
So I've now given the API
Explorer access to my identity

00:10:48.960 --> 00:10:49.590
on Google+.

00:10:49.590 --> 00:10:52.870
And, you know, what the API
Explorer does is just dumps

00:10:52.870 --> 00:10:53.320
the response.

00:10:53.320 --> 00:10:54.300
So it sent it back to me.

00:10:54.300 --> 00:10:55.550
So I can see it.

00:10:58.040 --> 00:10:59.290
Pretty cool isn't it?

00:11:04.670 --> 00:11:08.120
So what actually happened there
behind the curtain, I

00:11:08.120 --> 00:11:10.440
hit some buttons and it looks
kind of like some magical

00:11:10.440 --> 00:11:12.610
stuff happened.

00:11:12.610 --> 00:11:14.900
So what happened there is the
client, which is the API

00:11:14.900 --> 00:11:21.050
Explorer, sent me an
authorization request. And

00:11:21.050 --> 00:11:24.650
that was the pop-up that you
actually didn't see.

00:11:24.650 --> 00:11:26.695
And I told it that it
could have access.

00:11:26.695 --> 00:11:31.020
I granted it authorization to
find out who I am on Google+.

00:11:31.020 --> 00:11:34.760
In the background, the API
Explorer then sent that

00:11:34.760 --> 00:11:37.820
authorization grant, in the form
of a special code, over

00:11:37.820 --> 00:11:40.870
to an authorization server at
Google, which responded with

00:11:40.870 --> 00:11:44.350
an access and a refreshed
token.

00:11:44.350 --> 00:11:45.490
And this happened behind
the scenes.

00:11:45.490 --> 00:11:47.810
So your application will have
to do this when you're doing

00:11:47.810 --> 00:11:50.270
the OAuth flow.

00:11:50.270 --> 00:11:53.090
After that, the API Explorer
used that access token that it

00:11:53.090 --> 00:11:56.460
received to hit the resource
server, the Google's API

00:11:56.460 --> 00:12:01.080
server for the Google+ APIs, and
it got back the protected

00:12:01.080 --> 00:12:04.450
resource, in this case my public
fields on Google+,

00:12:04.450 --> 00:12:07.440
which reveal my identity.

00:12:07.440 --> 00:12:10.370
And this is just kind of a
small, little sliver of all

00:12:10.370 --> 00:12:12.660
the stuff that OAuth
2.0 provides.

00:12:12.660 --> 00:12:14.850
It has all sorts of cool
different flows for installed

00:12:14.850 --> 00:12:19.900
apps, and client-side apps
like JavaScript apps.

00:12:19.900 --> 00:12:22.730
But you really don't need
to worry about this

00:12:22.730 --> 00:12:24.480
too much right now.

00:12:24.480 --> 00:12:26.660
It's really important that you
understand how this works

00:12:26.660 --> 00:12:29.070
later on as you're developing
your application.

00:12:29.070 --> 00:12:31.130
But you don't need to worry
about it to get started,

00:12:31.130 --> 00:12:35.370
because our client libraries
take care of a lot of this

00:12:35.370 --> 00:12:37.390
stuff for you.

00:12:37.390 --> 00:12:39.950
They're pretty neat.

00:12:39.950 --> 00:12:42.450
So what all do they
help you do?

00:12:42.450 --> 00:12:45.350
They help take care of all that
OAuth stuff', all that

00:12:45.350 --> 00:12:48.580
token exchanging, and
that kind of stuff.

00:12:48.580 --> 00:12:51.280
And also doing, like, exchanges
for refreshing the

00:12:51.280 --> 00:12:53.600
token when they time out,
that kind of stuff.

00:12:53.600 --> 00:12:55.600
So it takes a lot of that
burden away from your

00:12:55.600 --> 00:12:57.370
application.

00:12:57.370 --> 00:12:59.760
It also handles all the
marshaling and unmarshaling of

00:12:59.760 --> 00:13:03.440
all the data that's provided
by the API.

00:13:03.440 --> 00:13:06.400
Caching is another important
feature that the client

00:13:06.400 --> 00:13:11.270
libraries provide, which can
save you lot of time

00:13:11.270 --> 00:13:12.760
developing those features
yourself.

00:13:12.760 --> 00:13:14.736
There's actually a whole bunch
of other stuff I'm not going

00:13:14.736 --> 00:13:18.020
to list here that the client
libraries provide.

00:13:18.020 --> 00:13:20.310
And we have them for a lot of
different languages and

00:13:20.310 --> 00:13:24.250
platforms. We have them for
.Net, Go, GWT, Java,

00:13:24.250 --> 00:13:27.930
JavaScript, Objective C
for OIS developers,

00:13:27.930 --> 00:13:30.570
PHP, Python, and Ruby.

00:13:30.570 --> 00:13:32.280
They're all at different
levels of completeness.

00:13:32.280 --> 00:13:35.055
A lot of them are in what we
call beta, which as you know,

00:13:35.055 --> 00:13:37.340
means it's pretty polished
already.

00:13:37.340 --> 00:13:40.035
We recommend that when you're
developing using the Google+

00:13:40.035 --> 00:13:42.170
APIs or any other Google
APIs, you check

00:13:42.170 --> 00:13:42.880
out the client libraries.

00:13:42.880 --> 00:13:46.670
They'll save you
a ton of time.

00:13:46.670 --> 00:13:47.762
You can get them at
developers.googl

00:13:47.762 --> 00:13:56.420
e.com/+/downloads.

00:13:56.420 --> 00:13:57.750
So client libraries are great.

00:13:57.750 --> 00:14:00.020
But with any framework or
client library there's a

00:14:00.020 --> 00:14:01.350
learning curve.

00:14:01.350 --> 00:14:04.400
And we want to get you started
really fast, right?

00:14:04.400 --> 00:14:05.630
So what we've done is
we've packaged up

00:14:05.630 --> 00:14:07.300
these starter projects.

00:14:07.300 --> 00:14:09.630
And the intent is to make
your awesome idea

00:14:09.630 --> 00:14:12.690
easier to get going.

00:14:12.690 --> 00:14:14.130
So what are the starter apps?

00:14:14.130 --> 00:14:16.990
The starter apps are really
simple applications that

00:14:16.990 --> 00:14:20.100
access the APIs using our client
libraries, and they

00:14:20.100 --> 00:14:22.330
implement a lot of our best
practices around how we do

00:14:22.330 --> 00:14:26.150
OAuth and how we use the API.

00:14:26.150 --> 00:14:28.480
So the idea behind this is you
can get running, you can get

00:14:28.480 --> 00:14:31.210
some base foundation of code
running that accesses the

00:14:31.210 --> 00:14:33.590
APIs, and then you can
hack away at it and

00:14:33.590 --> 00:14:34.460
make it your own.

00:14:34.460 --> 00:14:37.182
So it's a great foundation for
whatever awesome project you

00:14:37.182 --> 00:14:38.470
want to do.

00:14:38.470 --> 00:14:41.820
We have them written for four
popular languages, Java, Ruby,

00:14:41.820 --> 00:14:44.360
Python, and PHP.

00:14:44.360 --> 00:14:46.190
Within those languages, we also
have them written for

00:14:46.190 --> 00:14:48.105
many platforms in many cases.

00:14:48.105 --> 00:14:51.210
For example in Java we have a
web application version that's

00:14:51.210 --> 00:14:52.850
like a generic [UNINTELLIGIBLE].

00:14:52.850 --> 00:14:55.660
We have one for App Engine,
because we love App Engine.

00:14:55.660 --> 00:14:57.780
We have a command
line example.

00:14:57.780 --> 00:15:00.440
And we have an Android
example.

00:15:00.440 --> 00:15:02.909
And you can also get them
at that downloads page.

00:15:06.150 --> 00:15:09.390
So let's take a look at the
Java starter project.

00:15:09.390 --> 00:15:14.270
I'm going to shuffle some screen
sharing around and

00:15:14.270 --> 00:15:16.345
bring up a terminal.

00:15:19.940 --> 00:15:22.220
Let me zoom in a little bit
so you can see better.

00:15:22.220 --> 00:15:23.470
There we go.

00:15:27.710 --> 00:15:30.420
I'm in a place where I've
downloaded the Google+ Java

00:15:30.420 --> 00:15:31.840
starter and unzipped it.

00:15:31.840 --> 00:15:34.465
It comes in as a file,
pretty easy to use.

00:15:34.465 --> 00:15:36.620
And we're going to take a look
at the command line one,

00:15:36.620 --> 00:15:39.190
because that will involve
less window switching.

00:15:39.190 --> 00:15:41.680
But they're all just
as easy to use.

00:15:41.680 --> 00:15:45.440
So let's go to the command line
directory and just take a

00:15:45.440 --> 00:15:47.690
look at what's in there.

00:15:47.690 --> 00:15:49.780
There really aren't that many
files in this directory.

00:15:49.780 --> 00:15:51.670
There's like 15 files
or something.

00:15:51.670 --> 00:15:54.330
And some of them are,
like, IDE files for

00:15:54.330 --> 00:15:55.770
the clips and stuff.

00:15:55.770 --> 00:15:57.140
The core of it's really small.

00:15:57.140 --> 00:15:58.620
And actually there's some
[UNINTELLIGIBLE] slot

00:15:58.620 --> 00:16:00.530
files in there too.

00:16:00.530 --> 00:16:01.650
There's really not
a lot to it.

00:16:01.650 --> 00:16:04.050
So it's really easy for you
to get started and then to

00:16:04.050 --> 00:16:05.190
understand what's going on.

00:16:05.190 --> 00:16:07.200
There's just not a lot of code
to look at, which is always

00:16:07.200 --> 00:16:08.450
great for examples.

00:16:10.600 --> 00:16:11.850
Let's take a look
at the Read Me.

00:16:14.840 --> 00:16:16.710
The Read Me has the instructions
on how to use

00:16:16.710 --> 00:16:18.600
this project.

00:16:18.600 --> 00:16:23.470
So all we really have to do
is set up authentication.

00:16:23.470 --> 00:16:26.530
This walks you through going to
the Google API console and

00:16:26.530 --> 00:16:30.995
getting your OAuth credential
set up, because as a client of

00:16:30.995 --> 00:16:33.550
the Google+ APIs, you're going
to have to set up a project

00:16:33.550 --> 00:16:34.280
and some other stuff.

00:16:34.280 --> 00:16:35.030
It's pretty easy.

00:16:35.030 --> 00:16:36.320
It's just a few clicks.

00:16:36.320 --> 00:16:37.620
And these steps will walk
you through it.

00:16:42.290 --> 00:16:44.320
Once you've done all that stuff,
all you have to do is

00:16:44.320 --> 00:16:47.270
take a few pieces of
information, your client ID,

00:16:47.270 --> 00:16:51.380
your client secret, and your API
key, and put them in this

00:16:51.380 --> 00:16:54.210
config doc properties file.

00:16:54.210 --> 00:16:55.460
So let's go ahead and do that.

00:17:01.140 --> 00:17:04.180
Apparently I already have
it open in an editor.

00:17:04.180 --> 00:17:05.210
There we--

00:17:05.210 --> 00:17:06.770
Edit anyway.

00:17:06.770 --> 00:17:12.700
So there we go.

00:17:12.700 --> 00:17:13.390
Let's go replace these things.

00:17:13.390 --> 00:17:15.859
I've already gone ahead and
gone and grabbed some

00:17:15.859 --> 00:17:19.133
credentials from the
API console to save

00:17:19.133 --> 00:17:20.383
a little time here.

00:17:25.119 --> 00:17:27.015
So I'm just pasting
them in now.

00:17:27.015 --> 00:17:29.290
Oh hey Allen.

00:17:29.290 --> 00:17:30.540
There's two Allens.

00:17:32.670 --> 00:17:36.190
Oh, one times that.

00:17:36.190 --> 00:17:38.620
So I'm pasting the
credentials in.

00:17:38.620 --> 00:17:42.290
In general, never share the
client secret with anyone.

00:17:42.290 --> 00:17:45.000
I'm just sharing it now because
it's a demonstration.

00:17:45.000 --> 00:17:47.190
And I'm going to be going and
revoking these credentials

00:17:47.190 --> 00:17:48.000
afterwards.

00:17:48.000 --> 00:17:49.960
So if you ever actually do leak
them out by accident,

00:17:49.960 --> 00:17:53.590
which happens, they're pretty
easy to revoke.

00:17:53.590 --> 00:17:58.970
So now that we added those three
things there, if you go

00:17:58.970 --> 00:18:02.090
look at the Read Me again, it
says that once we've put them

00:18:02.090 --> 00:18:06.610
in there, all we have to do is
compile and exec, exec:java,

00:18:06.610 --> 00:18:08.780
because maven's really cool.

00:18:08.780 --> 00:18:12.490
It does all the dependency
management stuff for us.

00:18:12.490 --> 00:18:13.740
So let's go ahead and do that.

00:18:16.760 --> 00:18:18.460
So we're compiling our
starter protect.

00:18:18.460 --> 00:18:20.160
This might take a little longer
the first time you run

00:18:20.160 --> 00:18:23.885
it, because maven has to go
fetch those dependencies.

00:18:23.885 --> 00:18:25.230
ALLEN FIRSTENBERG: Jenny, going
back to the keys, can

00:18:25.230 --> 00:18:27.980
you also discuss how you're
going to be dealing with those

00:18:27.980 --> 00:18:30.240
keys if you're distributing
something using JavaScript?

00:18:37.770 --> 00:18:38.420
JENNY MURPHY: Sure thing.

00:18:38.420 --> 00:18:40.630
So that's the client side flow,
which is a little bit

00:18:40.630 --> 00:18:43.100
different than the
server side flow.

00:18:43.100 --> 00:18:45.470
I'll be sticking to the server
side flow for the demo.

00:18:45.470 --> 00:18:47.400
But I'll loop back when we're
done and explain some of the

00:18:47.400 --> 00:18:50.460
differences between the client
side and server side flow.

00:18:50.460 --> 00:18:51.710
ALLEN FIRSTENBERG: OK,
great, thanks.

00:18:55.050 --> 00:18:57.450
JENNY MURPHY: Going back
to that terminal.

00:18:57.450 --> 00:18:59.940
Here we are.

00:18:59.940 --> 00:19:06.858
So now that's it's all
compiled, we run it.

00:19:12.920 --> 00:19:15.050
I'm actually going to switch the
screen share real quick to

00:19:15.050 --> 00:19:16.380
show you what it popped up.

00:19:16.380 --> 00:19:25.870
It opened Chrome and displayed
a OAuth window here.

00:19:25.870 --> 00:19:29.300
So this is what we missed before
on the API console.

00:19:29.300 --> 00:19:33.170
This is the application that,
you know, it's told Google to

00:19:33.170 --> 00:19:35.390
pop up this [? OS flow ?] so
that I can allow it access.

00:19:35.390 --> 00:19:37.910
So I'm going to allow
it access.

00:19:37.910 --> 00:19:40.400
Because it's command line and
not a web app, normally I'd

00:19:40.400 --> 00:19:42.900
use, like, redirects and stuff
to get this special code back,

00:19:42.900 --> 00:19:44.290
but we're going to have
to use the very

00:19:44.290 --> 00:19:46.806
sophisticated copy and paste.

00:19:46.806 --> 00:19:50.610
So I'm going to copy from
there, go back to the

00:19:50.610 --> 00:19:52.620
terminal, paste that code in.

00:19:55.460 --> 00:19:58.130
And what we can see now
is a whole bunch

00:19:58.130 --> 00:19:59.380
of API calls happening.

00:20:04.380 --> 00:20:06.240
And that's all the starter
project is.

00:20:06.240 --> 00:20:08.560
It's really easy to get going.

00:20:08.560 --> 00:20:11.210
So we've now, even just pasting
in a few lines of

00:20:11.210 --> 00:20:14.290
code, just those keys, we
now have a running Java

00:20:14.290 --> 00:20:16.550
application that's
using the APIs.

00:20:16.550 --> 00:20:21.420
So if I was building a command
line app or some other kind of

00:20:21.420 --> 00:20:24.020
service side Java app, I have
a really good foundation.

00:20:24.020 --> 00:20:26.850
Maybe I'll merge the code I have
in already that's going

00:20:26.850 --> 00:20:29.642
to use the APIs, or I'll just
use this as a starting point.

00:20:39.000 --> 00:20:39.540
And that's it.

00:20:39.540 --> 00:20:41.470
That's a quick demo of
the Java starter app.

00:20:41.470 --> 00:20:42.720
It's that easy to get going.

00:20:52.276 --> 00:20:54.720
Allen asked a good
question before.

00:20:54.720 --> 00:20:58.600
How is the client side
flow different?

00:20:58.600 --> 00:21:01.960
So client side applications
like ones that run in

00:21:01.960 --> 00:21:05.540
JavaScript on the web browser,
such as Hangout applications,

00:21:05.540 --> 00:21:09.960
which I imagine is why you're
interested, they work a little

00:21:09.960 --> 00:21:11.760
bit differently.

00:21:11.760 --> 00:21:13.880
Because we have that client
secret, we can't keep that

00:21:13.880 --> 00:21:17.440
client secret, we can't expose
that to the user.

00:21:17.440 --> 00:21:20.040
Because then they will be able
to masquerade as our

00:21:20.040 --> 00:21:22.320
application.

00:21:22.320 --> 00:21:25.590
So for client side flow, what
we do is, there's a few

00:21:25.590 --> 00:21:26.500
different components.

00:21:26.500 --> 00:21:29.120
We have a JavaScript origin,
which you set in the API

00:21:29.120 --> 00:21:31.930
console, which I guess I
can pull up real quick.

00:21:34.950 --> 00:21:39.380
Here's a project in the
Google API console.

00:21:39.380 --> 00:21:41.570
This project is called
API project.

00:21:41.570 --> 00:21:43.500
And I'm showing you all sorts
of stuff about it, so I'm

00:21:43.500 --> 00:21:47.210
going to be clearing
it out later.

00:21:47.210 --> 00:21:51.790
But here we can see that I've
created some client IDs for

00:21:51.790 --> 00:21:52.530
applications.

00:21:52.530 --> 00:21:55.550
This one's for web
applications.

00:21:55.550 --> 00:21:57.470
One of the things you'll set
when you have a JavaScript

00:21:57.470 --> 00:21:59.970
application that's going through
a different OAuth flow

00:21:59.970 --> 00:22:01.770
called the client side
flow, is you'll set

00:22:01.770 --> 00:22:03.000
a JavaScript origin.

00:22:03.000 --> 00:22:06.680
And this is how we guarantee
that only your servers are

00:22:06.680 --> 00:22:07.220
running it.

00:22:07.220 --> 00:22:10.320
So you'll put your domain
names here as

00:22:10.320 --> 00:22:11.780
well as redirect URLs.

00:22:11.780 --> 00:22:14.460
So this is where Google will
send the user back after

00:22:14.460 --> 00:22:16.240
they've completed
the OAuth flow.

00:22:16.240 --> 00:22:22.190
So you'll just set these to
your applications or the

00:22:22.190 --> 00:22:23.270
domains of your applications.

00:22:23.270 --> 00:22:26.740
And that will guarantee that
only you are allowed to send

00:22:26.740 --> 00:22:29.820
someone to the OAuth flow, and
only you are allowed to get

00:22:29.820 --> 00:22:31.070
the redirect back.

00:22:34.120 --> 00:22:36.500
And then there's a couple of
other differences, because the

00:22:36.500 --> 00:22:38.870
client secret kind of gets
left out of the equation.

00:22:38.870 --> 00:22:41.640
And what you lose as a result is
you lose the refresh token.

00:22:41.640 --> 00:22:43.380
So that means you're only going
to be getting these

00:22:43.380 --> 00:22:47.170
access tokens which only
last for about an hour.

00:22:47.170 --> 00:22:50.590
And to refresh them, instead
of doing a refresh flow as

00:22:50.590 --> 00:22:55.930
part of the OAuth spec, you'll
actually just be going through

00:22:55.930 --> 00:22:58.210
the authorization flow again.

00:22:58.210 --> 00:23:00.220
So what you'll be doing is
you'll be bouncing off of a

00:23:00.220 --> 00:23:00.850
Google web page.

00:23:00.850 --> 00:23:02.230
So there will be kind of a
little redirect bump that

00:23:02.230 --> 00:23:05.280
happens every hour or so.

00:23:05.280 --> 00:23:08.070
And hopefully that
explains it.

00:23:08.070 --> 00:23:10.440
The easiest way is to, if you
really want to understand this

00:23:10.440 --> 00:23:12.610
well, check out the
JavaScript client.

00:23:12.610 --> 00:23:15.320
There's a JavaScript starter
included too.

00:23:15.320 --> 00:23:19.340
And that will make it make
a lot more sense.

00:23:19.340 --> 00:23:22.710
Because most of the other ones
use the server side flow

00:23:22.710 --> 00:23:24.160
because that's just more
common in general.

00:23:26.780 --> 00:23:29.310
Cool.

00:23:29.310 --> 00:23:30.710
So, that's it for the--

00:23:30.710 --> 00:23:33.910
MARTIN: OK, so the
direct APIs--

00:23:33.910 --> 00:23:36.000
Oh, no, go ahead.

00:23:36.000 --> 00:23:37.090
JENNY MURPHY: I was just going
to ask if there were any more

00:23:37.090 --> 00:23:40.440
questions in the room before I
went to the [UNINTELLIGIBLE]?

00:23:40.440 --> 00:23:41.580
MARTIN: All right.

00:23:41.580 --> 00:23:48.070
Some methods return an ETag
field, though I think it's for

00:23:48.070 --> 00:23:48.970
caching right?

00:23:48.970 --> 00:23:51.750
So it changes as soon as
something of the content

00:23:51.750 --> 00:23:55.280
changes, if I understand
it correctly.

00:23:58.250 --> 00:23:59.120
JENNY MURPHY: That is correct.

00:23:59.120 --> 00:24:00.795
So the ETag is--

00:24:00.795 --> 00:24:03.120
I'm trying to remember where
that came from in the spec.

00:24:07.120 --> 00:24:09.830
For example, the activities API
is an implementation of

00:24:09.830 --> 00:24:11.870
the activity stream
specification.

00:24:11.870 --> 00:24:13.810
So some of these tags are
hanging around from that.

00:24:13.810 --> 00:24:16.320
And I think that might be
one of those fields.

00:24:16.320 --> 00:24:20.020
So in general, in regards to
caching content, we recommend

00:24:20.020 --> 00:24:22.400
that you pay attention to all
the cache control headers and

00:24:22.400 --> 00:24:23.410
stuff you have set.

00:24:23.410 --> 00:24:27.120
So pay attention to those
first and foremost. The

00:24:27.120 --> 00:24:29.770
clients that we provide will
take care of that already.

00:24:29.770 --> 00:24:32.710
In addition to that, there's
also the ETag, which is kind

00:24:32.710 --> 00:24:35.410
of the next level up on the
ability to see when things

00:24:35.410 --> 00:24:37.380
have changed.

00:24:37.380 --> 00:24:39.200
So if your writing an
application that's kind of

00:24:39.200 --> 00:24:41.120
sucking down all the data,
you're going to be pulling the

00:24:41.120 --> 00:24:42.450
APIs a lot.

00:24:42.450 --> 00:24:45.290
And what you can do is you can
use this thing called fields,

00:24:45.290 --> 00:24:47.480
the fields parameter, which
allows you to only pull

00:24:47.480 --> 00:24:48.430
certain fields back.

00:24:48.430 --> 00:24:50.840
So you get a much smaller
chunk of data.

00:24:50.840 --> 00:24:52.210
And you could only
look at the ETag.

00:24:52.210 --> 00:24:55.760
And then you can use that to
slightly more efficiently see,

00:24:55.760 --> 00:24:58.330
especially more bandwidth
efficiently, when something is

00:24:58.330 --> 00:25:01.030
changed to see if you need
to do the bigger request.

00:25:01.030 --> 00:25:03.410
MARTIN: And does the ETag
include all fields?

00:25:03.410 --> 00:25:06.415
So for example, if someone plus
ones an activity, does

00:25:06.415 --> 00:25:10.690
the ETag also change because
the plus one count changes?

00:25:10.690 --> 00:25:14.270
JENNY MURPHY: Yeah, the ETag is
unique for all the content

00:25:14.270 --> 00:25:15.870
within that response object.

00:25:15.870 --> 00:25:19.150
So anything that changes in
there will update the ETag.

00:25:19.150 --> 00:25:20.320
MARTIN: All right.

00:25:20.320 --> 00:25:21.013
JENNY MURPHY: Yeah.

00:25:21.013 --> 00:25:21.496
MARTIN: Thanks.

00:25:21.496 --> 00:25:24.430
JENNY MURPHY: You're welcome.

00:25:24.430 --> 00:25:26.190
Cool.

00:25:26.190 --> 00:25:31.230
So I've seen a few requests on
there asking when we'll have

00:25:31.230 --> 00:25:35.250
more extensive APIs available,
specifically write-access to

00:25:35.250 --> 00:25:36.500
the stream.

00:25:39.800 --> 00:25:43.480
We're always working to expand
the APIs that are available.

00:25:43.480 --> 00:25:44.800
But we're kind of
taking our time.

00:25:44.800 --> 00:25:47.190
We want to do this right,
so we're being careful.

00:25:47.190 --> 00:25:49.230
Because a lot of us that had
built applications on other

00:25:49.230 --> 00:25:50.890
platforms before kind of
had the rug pulled

00:25:50.890 --> 00:25:51.790
out from under us.

00:25:51.790 --> 00:25:53.520
We really didn't like that.

00:25:53.520 --> 00:25:55.660
So we want to make sure that
all the APIs we release are

00:25:55.660 --> 00:25:57.390
going to be sticking around.

00:25:57.390 --> 00:26:00.530
And we're honestly still kind
of figuring out how we want

00:26:00.530 --> 00:26:03.200
some of these APIs to work,
because we care about a lot of

00:26:03.200 --> 00:26:06.690
things in addition to people
building awesome applications.

00:26:06.690 --> 00:26:07.940
We care a lot about
the quality of

00:26:07.940 --> 00:26:08.870
content on the stream.

00:26:08.870 --> 00:26:11.882
Google+ has a really high
quality content in the

00:26:11.882 --> 00:26:12.360
stream right now.

00:26:12.360 --> 00:26:14.980
We want to make sure that
stays the case.

00:26:14.980 --> 00:26:15.930
There's a lot of
other reasons.

00:26:15.930 --> 00:26:19.660
But we're still working on a
lot of this APIs, and once

00:26:19.660 --> 00:26:22.060
they're available, we'll let you
know when you're good to

00:26:22.060 --> 00:26:22.910
go on them.

00:26:22.910 --> 00:26:24.160
But they'll be awesome,
I promise.

00:26:27.620 --> 00:26:31.330
I also see a few comments in
the stream that are feature

00:26:31.330 --> 00:26:33.120
requests that don't really
have to do with building

00:26:33.120 --> 00:26:35.400
software on the Google+
platform.

00:26:35.400 --> 00:26:37.430
They're about things like
the iPhone application

00:26:37.430 --> 00:26:39.050
and things like that.

00:26:39.050 --> 00:26:42.480
Those are more feature requested
related to the

00:26:42.480 --> 00:26:45.460
Google+ product as a whole.

00:26:45.460 --> 00:26:47.830
So when you're on Google+,
you'll see a little Send

00:26:47.830 --> 00:26:48.600
Feedback link.

00:26:48.600 --> 00:26:50.490
It's going to be in one of the
corners depending on what

00:26:50.490 --> 00:26:54.570
language you're viewing
the page in.

00:26:54.570 --> 00:26:57.500
For these kinds of questions,
go click on that

00:26:57.500 --> 00:26:59.430
Send Feedback link.

00:26:59.430 --> 00:27:00.730
We do read the feedback.

00:27:00.730 --> 00:27:03.830
You may not get a response or
everything you post. But we're

00:27:03.830 --> 00:27:04.710
definitely reading it.

00:27:04.710 --> 00:27:05.810
People are reading all of it.

00:27:05.810 --> 00:27:06.620
We're aggregating it.

00:27:06.620 --> 00:27:08.240
And we are paying attention.

00:27:08.240 --> 00:27:11.860
And that helps us best
prioritize what stuff we're

00:27:11.860 --> 00:27:12.400
implementing.

00:27:12.400 --> 00:27:16.730
Because there's only so many
of us, so we have to

00:27:16.730 --> 00:27:18.620
prioritize the stuff
we implement.

00:27:18.620 --> 00:27:20.350
So definitely do
send feedback.

00:27:20.350 --> 00:27:21.710
We're paying attention to it.

00:27:29.040 --> 00:27:33.190
And I see a couple of questions
about frozen

00:27:33.190 --> 00:27:34.770
plus-one counters.

00:27:34.770 --> 00:27:37.400
So I haven't really been saying
a whole lot on this.

00:27:37.400 --> 00:27:39.110
I think there's some forum
[UNINTELLIGIBLE].

00:27:39.110 --> 00:27:41.170
I think I recognise some of
your names from the forum.

00:27:41.170 --> 00:27:42.470
I think I've talked to
you there before.

00:27:42.470 --> 00:27:44.530
We are working on this.

00:27:44.530 --> 00:27:46.800
We think we've resolved some of
the issues that should be

00:27:46.800 --> 00:27:49.660
related to, specifically,
discrepancies between the

00:27:49.660 --> 00:27:54.390
counter value and the values in
Google Analytics and Google

00:27:54.390 --> 00:27:56.600
Webmaster Tools.

00:27:56.600 --> 00:27:58.700
But if you're still seeing
problems, I'm going to loop

00:27:58.700 --> 00:28:01.960
back and try and see if we
can get to the bottom.

00:28:01.960 --> 00:28:03.450
There might be more
than one problem

00:28:03.450 --> 00:28:06.080
involved in this situation.

00:28:06.080 --> 00:28:08.080
So we're still rolling
out the first fix.

00:28:08.080 --> 00:28:09.400
Hopefully that will take
care of everything.

00:28:12.020 --> 00:28:14.050
And then if that doesn't, I'll
be looping back with you guys

00:28:14.050 --> 00:28:15.330
to make sure everything
is good.

00:28:15.330 --> 00:28:16.640
But just hang tight.

00:28:16.640 --> 00:28:18.920
This one might take us a little
while to figure out.

00:28:18.920 --> 00:28:20.220
It seems like one of those
complicated ones.

00:28:23.670 --> 00:28:25.980
ALLEN FIRSTENBERG: Buried in
one of the comments was a

00:28:25.980 --> 00:28:30.970
question that kind of talked
about the quota limits

00:28:30.970 --> 00:28:32.050
for the REST API.

00:28:32.050 --> 00:28:37.460
Do you want to talk about the
quota for it a little bit?

00:28:37.460 --> 00:28:38.500
JENNY MURPHY: Sure.

00:28:38.500 --> 00:28:41.120
As you may have noticed
recently, all of your

00:28:41.120 --> 00:28:43.840
applications out there that you
created which formerly had

00:28:43.840 --> 00:28:52.200
1,000 free calls per day, now
have 10,000, a lot more.

00:28:52.200 --> 00:28:54.090
So we recently bumped
up the base quota.

00:28:54.090 --> 00:28:55.690
And that's so that you guys
can get started doing

00:28:55.690 --> 00:28:58.510
development more easily.

00:28:58.510 --> 00:29:00.810
But we've got to understand
that especially when you

00:29:00.810 --> 00:29:03.030
launch applications, you're
going to need a lot more

00:29:03.030 --> 00:29:05.140
quota, especially really
cool things.

00:29:05.140 --> 00:29:07.550
I've seen a lot of really cool
stuff out there recently.

00:29:07.550 --> 00:29:10.590
And I can tell that a lot of
them are probably using a lot

00:29:10.590 --> 00:29:12.660
of calls in the back end
to do their cool stuff.

00:29:15.562 --> 00:29:18.540
In the API console there's a
link that allows you to ask

00:29:18.540 --> 00:29:19.990
for more quota.

00:29:19.990 --> 00:29:23.682
Those actually generate a ticket
that a lot of us in the

00:29:23.682 --> 00:29:24.990
team are looking
at, I included.

00:29:24.990 --> 00:29:27.300
So you'll probably see a
response from me or one of my

00:29:27.300 --> 00:29:30.140
teammates not long after
you post it.

00:29:30.140 --> 00:29:31.980
We're getting responses
much faster now.

00:29:31.980 --> 00:29:33.630
There was a time when we
were a little slow.

00:29:33.630 --> 00:29:36.100
And we've kind of ironed the
kinks out of our process.

00:29:36.100 --> 00:29:38.850
So we should get back to you
in a business day or two.

00:29:38.850 --> 00:29:40.150
We've been pretty good lately.

00:29:40.150 --> 00:29:41.710
We're pretty much on
top of it now.

00:29:41.710 --> 00:29:45.190
So you should hear from one of
us, like, in a business day.

00:29:45.190 --> 00:29:47.820
And once you've done that,
depending on how much quota

00:29:47.820 --> 00:29:50.380
you request, we have to go
through a different process to

00:29:50.380 --> 00:29:52.220
get that quota granted to you.

00:29:52.220 --> 00:29:53.710
And this can take
a little while.

00:29:53.710 --> 00:29:56.680
This could take a week
potentially.

00:29:56.680 --> 00:29:57.970
So ha tight.

00:29:57.970 --> 00:30:00.270
You'll get a response from us
telling you to hang tight.

00:30:00.270 --> 00:30:02.680
Please follow those
instructions.

00:30:02.680 --> 00:30:05.650
And continue polishing your
app or wording other

00:30:05.650 --> 00:30:07.160
co-applications.

00:30:07.160 --> 00:30:09.500
And we'll be getting back
to you when we can

00:30:09.500 --> 00:30:10.750
give you more quota.

00:30:13.520 --> 00:30:16.695
But if you want the request
to go fastest--

00:30:16.695 --> 00:30:18.010
I forgot the most
important part.

00:30:18.010 --> 00:30:20.600
How do you make your
request go faster?

00:30:20.600 --> 00:30:23.570
If you're requesting quota,
please include a link to a

00:30:23.570 --> 00:30:30.520
privacy policy that just tells
us what data you're

00:30:30.520 --> 00:30:33.730
collecting, and what you're
doing with that data, and

00:30:33.730 --> 00:30:35.600
retention policy, destruction,
all that kind of stuff.

00:30:35.600 --> 00:30:39.200
Just tell us what you're doing
with the data and link to it

00:30:39.200 --> 00:30:40.630
on that little form.

00:30:40.630 --> 00:30:42.720
That's the most important
first thing.

00:30:42.720 --> 00:30:46.420
Second one, have
a working demo.

00:30:46.420 --> 00:30:47.820
This is not always possible.

00:30:47.820 --> 00:30:49.870
Some of them require accounts
and that kind of stuff.

00:30:49.870 --> 00:30:52.780
If there's an account that has
to be set up or authorized,

00:30:52.780 --> 00:30:54.950
please include information
about that account in the

00:30:54.950 --> 00:30:56.435
little comments box.

00:30:56.435 --> 00:30:59.420
And we'll bounce back and forth
and get that worked out

00:30:59.420 --> 00:31:01.530
so that we can see
it in action.

00:31:01.530 --> 00:31:03.460
And we realize there's some
applications that we can never

00:31:03.460 --> 00:31:06.160
see in action like, for example,
academic projects

00:31:06.160 --> 00:31:08.540
that are just pulling a lot
of data on the back end.

00:31:08.540 --> 00:31:13.020
And we'll work with you to make
sure that we understand

00:31:13.020 --> 00:31:16.340
exactly what you're doing.

00:31:16.340 --> 00:31:17.440
OK.

00:31:17.440 --> 00:31:20.360
So we're actually going to be
taking next week off of the

00:31:20.360 --> 00:31:21.860
Office Hours probably.

00:31:21.860 --> 00:31:24.565
But we'll be back
the week after.

00:31:24.565 --> 00:31:26.800
And we'll have some really cool
stuff to talk about then.

00:31:30.360 --> 00:31:31.880
Happy hacking everyone.

00:31:31.880 --> 00:31:34.930
You know where to find us,
in the forum on Google+.

00:31:34.930 --> 00:31:37.270
We hope to see you there.

00:31:37.270 --> 00:31:39.630
Bye everyone, and thanks so much
for joining me guys and

00:31:39.630 --> 00:31:41.315
everyone else who asked
questions and anything.

00:31:41.315 --> 00:31:41.580
ALLEN FIRSTENBERG: Bye Jenny.

00:31:41.580 --> 00:31:41.880
MARTIN: Bye.

00:31:41.880 --> 00:31:43.130
JENNY MURPHY: Bye.

