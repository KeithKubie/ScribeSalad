WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:01.929 align:start position:0%
 
other<00:00:00.690><c> than</c><00:00:00.930><c> convolutional</c><00:00:01.650><c> layers</c>

00:00:01.929 --> 00:00:01.939 align:start position:0%
other than convolutional layers
 

00:00:01.939 --> 00:00:04.610 align:start position:0%
other than convolutional layers
confidence<00:00:02.939><c> often</c><00:00:03.389><c> also</c><00:00:03.540><c> use</c><00:00:03.870><c> pooling</c><00:00:04.410><c> layers</c>

00:00:04.610 --> 00:00:04.620 align:start position:0%
confidence often also use pooling layers
 

00:00:04.620 --> 00:00:07.099 align:start position:0%
confidence often also use pooling layers
to<00:00:05.069><c> reduce</c><00:00:05.759><c> the</c><00:00:05.910><c> size</c><00:00:06.120><c> of</c><00:00:06.299><c> the</c><00:00:06.390><c> representation</c>

00:00:07.099 --> 00:00:07.109 align:start position:0%
to reduce the size of the representation
 

00:00:07.109 --> 00:00:09.320 align:start position:0%
to reduce the size of the representation
to<00:00:07.259><c> speed</c><00:00:07.500><c> the</c><00:00:07.589><c> computation</c><00:00:08.280><c> as</c><00:00:08.429><c> well</c><00:00:08.970><c> as</c><00:00:09.090><c> make</c>

00:00:09.320 --> 00:00:09.330 align:start position:0%
to speed the computation as well as make
 

00:00:09.330 --> 00:00:10.970 align:start position:0%
to speed the computation as well as make
some<00:00:09.510><c> of</c><00:00:09.599><c> the</c><00:00:09.660><c> features</c><00:00:10.019><c> it</c><00:00:10.200><c> detects</c><00:00:10.559><c> a</c><00:00:10.769><c> bit</c>

00:00:10.970 --> 00:00:10.980 align:start position:0%
some of the features it detects a bit
 

00:00:10.980 --> 00:00:14.360 align:start position:0%
some of the features it detects a bit
more<00:00:11.160><c> robust</c><00:00:11.519><c> let's</c><00:00:12.300><c> take</c><00:00:12.450><c> a</c><00:00:12.480><c> look</c><00:00:12.690><c> let's</c><00:00:13.370><c> go</c>

00:00:14.360 --> 00:00:14.370 align:start position:0%
more robust let's take a look let's go
 

00:00:14.370 --> 00:00:16.849 align:start position:0%
more robust let's take a look let's go
through<00:00:14.610><c> an</c><00:00:14.700><c> example</c><00:00:14.790><c> of</c><00:00:15.480><c> pooling</c><00:00:15.960><c> and</c><00:00:16.320><c> then</c>

00:00:16.849 --> 00:00:16.859 align:start position:0%
through an example of pooling and then
 

00:00:16.859 --> 00:00:19.130 align:start position:0%
through an example of pooling and then
we'll<00:00:17.460><c> talk</c><00:00:17.670><c> about</c><00:00:17.970><c> why</c><00:00:18.420><c> you</c><00:00:18.480><c> might</c><00:00:18.869><c> want</c><00:00:18.900><c> to</c>

00:00:19.130 --> 00:00:19.140 align:start position:0%
we'll talk about why you might want to
 

00:00:19.140 --> 00:00:22.400 align:start position:0%
we'll talk about why you might want to
do<00:00:19.410><c> this</c><00:00:20.210><c> suppose</c><00:00:21.210><c> you</c><00:00:21.390><c> have</c><00:00:21.630><c> a</c><00:00:21.869><c> four</c><00:00:22.230><c> by</c><00:00:22.380><c> four</c>

00:00:22.400 --> 00:00:22.410 align:start position:0%
do this suppose you have a four by four
 

00:00:22.410 --> 00:00:26.390 align:start position:0%
do this suppose you have a four by four
input<00:00:23.340><c> and</c><00:00:24.289><c> you</c><00:00:25.289><c> want</c><00:00:25.529><c> to</c><00:00:25.650><c> apply</c><00:00:25.980><c> a</c><00:00:26.010><c> type</c><00:00:26.369><c> of</c>

00:00:26.390 --> 00:00:26.400 align:start position:0%
input and you want to apply a type of
 

00:00:26.400 --> 00:00:29.599 align:start position:0%
input and you want to apply a type of
pooling<00:00:26.760><c> called</c><00:00:27.180><c> max</c><00:00:27.510><c> pooling</c><00:00:27.920><c> and</c><00:00:28.920><c> the</c>

00:00:29.599 --> 00:00:29.609 align:start position:0%
pooling called max pooling and the
 

00:00:29.609 --> 00:00:31.429 align:start position:0%
pooling called max pooling and the
output<00:00:30.060><c> of</c><00:00:30.210><c> this</c><00:00:30.480><c> particular</c><00:00:30.929><c> implementation</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
output of this particular implementation
 

00:00:31.439 --> 00:00:33.920 align:start position:0%
output of this particular implementation
of<00:00:31.920><c> max</c><00:00:32.160><c> pooling</c><00:00:32.399><c> will</c><00:00:33.149><c> be</c><00:00:33.300><c> a</c><00:00:33.329><c> two</c><00:00:33.510><c> by</c><00:00:33.899><c> two</c>

00:00:33.920 --> 00:00:33.930 align:start position:0%
of max pooling will be a two by two
 

00:00:33.930 --> 00:00:36.620 align:start position:0%
of max pooling will be a two by two
output<00:00:34.649><c> and</c><00:00:34.950><c> the</c><00:00:35.430><c> way</c><00:00:35.550><c> you</c><00:00:35.610><c> do</c><00:00:35.820><c> that</c><00:00:36.000><c> is</c><00:00:36.270><c> quite</c>

00:00:36.620 --> 00:00:36.630 align:start position:0%
output and the way you do that is quite
 

00:00:36.630 --> 00:00:38.959 align:start position:0%
output and the way you do that is quite
simple<00:00:36.989><c> take</c><00:00:37.469><c> your</c><00:00:37.739><c> four</c><00:00:38.040><c> by</c><00:00:38.160><c> four</c><00:00:38.370><c> input</c><00:00:38.760><c> and</c>

00:00:38.959 --> 00:00:38.969 align:start position:0%
simple take your four by four input and
 

00:00:38.969 --> 00:00:42.080 align:start position:0%
simple take your four by four input and
break<00:00:39.600><c> it</c><00:00:39.809><c> into</c><00:00:40.050><c> different</c><00:00:40.500><c> regions</c><00:00:40.829><c> and</c><00:00:41.370><c> I'm</c>

00:00:42.080 --> 00:00:42.090 align:start position:0%
break it into different regions and I'm
 

00:00:42.090 --> 00:00:43.430 align:start position:0%
break it into different regions and I'm
going<00:00:42.270><c> to</c><00:00:42.300><c> cover</c><00:00:42.540><c> the</c><00:00:42.750><c> four</c><00:00:42.930><c> regions</c><00:00:43.290><c> as</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
going to cover the four regions as
 

00:00:43.440 --> 00:00:46.340 align:start position:0%
going to cover the four regions as
follows<00:00:43.829><c> and</c><00:00:44.100><c> then</c><00:00:44.730><c> in</c><00:00:45.210><c> the</c><00:00:45.480><c> output</c><00:00:46.020><c> which</c><00:00:46.320><c> is</c>

00:00:46.340 --> 00:00:46.350 align:start position:0%
follows and then in the output which is
 

00:00:46.350 --> 00:00:48.979 align:start position:0%
follows and then in the output which is
two<00:00:46.710><c> by</c><00:00:46.860><c> two</c><00:00:46.920><c> each</c><00:00:47.850><c> of</c><00:00:47.879><c> the</c><00:00:48.120><c> outputs</c><00:00:48.570><c> will</c><00:00:48.750><c> just</c>

00:00:48.979 --> 00:00:48.989 align:start position:0%
two by two each of the outputs will just
 

00:00:48.989 --> 00:00:51.139 align:start position:0%
two by two each of the outputs will just
be<00:00:49.110><c> the</c><00:00:49.260><c> mask</c><00:00:49.590><c> from</c><00:00:50.190><c> the</c><00:00:50.250><c> correspondingly</c>

00:00:51.139 --> 00:00:51.149 align:start position:0%
be the mask from the correspondingly
 

00:00:51.149 --> 00:00:54.380 align:start position:0%
be the mask from the correspondingly
shaded<00:00:51.690><c> region</c><00:00:52.430><c> so</c><00:00:53.430><c> in</c><00:00:53.550><c> the</c><00:00:53.640><c> upper</c><00:00:53.910><c> left</c>

00:00:54.380 --> 00:00:54.390 align:start position:0%
shaded region so in the upper left
 

00:00:54.390 --> 00:00:56.840 align:start position:0%
shaded region so in the upper left
I<00:00:54.420><c> guess</c><00:00:54.600><c> the</c><00:00:54.780><c> max</c><00:00:55.050><c> of</c><00:00:55.289><c> these</c><00:00:55.469><c> four</c><00:00:55.829><c> numbers</c><00:00:55.860><c> is</c>

00:00:56.840 --> 00:00:56.850 align:start position:0%
I guess the max of these four numbers is
 

00:00:56.850 --> 00:01:00.410 align:start position:0%
I guess the max of these four numbers is
nine<00:00:57.949><c> upper</c><00:00:58.949><c> right</c><00:00:59.160><c> the</c><00:00:59.520><c> max</c><00:00:59.730><c> of</c><00:00:59.910><c> the</c><00:01:00.059><c> blue</c>

00:01:00.410 --> 00:01:00.420 align:start position:0%
nine upper right the max of the blue
 

00:01:00.420 --> 00:01:03.139 align:start position:0%
nine upper right the max of the blue
numbers<00:01:00.809><c> is</c><00:01:00.989><c> 2</c><00:01:01.350><c> lower</c><00:01:02.129><c> left</c><00:01:02.460><c> the</c><00:01:02.789><c> biggest</c>

00:01:03.139 --> 00:01:03.149 align:start position:0%
numbers is 2 lower left the biggest
 

00:01:03.149 --> 00:01:05.390 align:start position:0%
numbers is 2 lower left the biggest
number<00:01:03.420><c> is</c><00:01:03.539><c> six</c><00:01:03.899><c> and</c><00:01:04.229><c> lower</c><00:01:04.830><c> right</c><00:01:05.100><c> to</c><00:01:05.129><c> the</c>

00:01:05.390 --> 00:01:05.400 align:start position:0%
number is six and lower right to the
 

00:01:05.400 --> 00:01:09.140 align:start position:0%
number is six and lower right to the
biggest<00:01:05.610><c> number</c><00:01:05.850><c> is</c><00:01:06.600><c> three</c><00:01:07.610><c> so</c><00:01:08.610><c> to</c><00:01:08.670><c> compute</c>

00:01:09.140 --> 00:01:09.150 align:start position:0%
biggest number is three so to compute
 

00:01:09.150 --> 00:01:11.060 align:start position:0%
biggest number is three so to compute
each<00:01:09.240><c> of</c><00:01:09.420><c> the</c><00:01:09.479><c> numbers</c><00:01:09.810><c> on</c><00:01:09.960><c> the</c><00:01:10.049><c> right</c><00:01:10.080><c> we</c><00:01:10.830><c> took</c>

00:01:11.060 --> 00:01:11.070 align:start position:0%
each of the numbers on the right we took
 

00:01:11.070 --> 00:01:13.640 align:start position:0%
each of the numbers on the right we took
the<00:01:11.280><c> max</c><00:01:11.549><c> over</c><00:01:11.820><c> a</c><00:01:12.030><c> two</c><00:01:12.270><c> by</c><00:01:12.450><c> two</c><00:01:12.479><c> regions</c><00:01:13.320><c> so</c>

00:01:13.640 --> 00:01:13.650 align:start position:0%
the max over a two by two regions so
 

00:01:13.650 --> 00:01:16.340 align:start position:0%
the max over a two by two regions so
this<00:01:14.580><c> is</c><00:01:14.729><c> as</c><00:01:14.970><c> if</c><00:01:15.180><c> you're</c><00:01:15.390><c> applying</c><00:01:15.689><c> a</c><00:01:16.080><c> filter</c>

00:01:16.340 --> 00:01:16.350 align:start position:0%
this is as if you're applying a filter
 

00:01:16.350 --> 00:01:20.390 align:start position:0%
this is as if you're applying a filter
size<00:01:16.799><c> of</c><00:01:17.210><c> two</c><00:01:18.210><c> because</c><00:01:19.200><c> you're</c><00:01:19.439><c> taking</c><00:01:19.650><c> a</c><00:01:19.890><c> two</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
size of two because you're taking a two
 

00:01:20.400 --> 00:01:22.429 align:start position:0%
size of two because you're taking a two
by<00:01:20.549><c> two</c><00:01:20.580><c> regions</c><00:01:21.210><c> and</c><00:01:21.479><c> you're</c><00:01:21.840><c> taking</c><00:01:22.259><c> a</c>

00:01:22.429 --> 00:01:22.439 align:start position:0%
by two regions and you're taking a
 

00:01:22.439 --> 00:01:26.600 align:start position:0%
by two regions and you're taking a
stride<00:01:23.430><c> of</c><00:01:23.790><c> two</c><00:01:24.770><c> so</c><00:01:25.770><c> these</c><00:01:25.920><c> are</c><00:01:26.130><c> actually</c><00:01:26.460><c> the</c>

00:01:26.600 --> 00:01:26.610 align:start position:0%
stride of two so these are actually the
 

00:01:26.610 --> 00:01:33.590 align:start position:0%
stride of two so these are actually the
hyper<00:01:27.390><c> parameters</c><00:01:29.390><c> of</c><00:01:30.390><c> mass</c><00:01:31.049><c> pooling</c><00:01:32.600><c> because</c>

00:01:33.590 --> 00:01:33.600 align:start position:0%
hyper parameters of mass pooling because
 

00:01:33.600 --> 00:01:36.740 align:start position:0%
hyper parameters of mass pooling because
we<00:01:33.869><c> start</c><00:01:34.229><c> from</c><00:01:35.159><c> this</c><00:01:35.460><c> filter</c><00:01:36.000><c> size</c><00:01:36.210><c> is</c><00:01:36.509><c> like</c><00:01:36.659><c> a</c>

00:01:36.740 --> 00:01:36.750 align:start position:0%
we start from this filter size is like a
 

00:01:36.750 --> 00:01:38.810 align:start position:0%
we start from this filter size is like a
two<00:01:36.900><c> by</c><00:01:37.049><c> two</c><00:01:37.079><c> region</c><00:01:37.710><c> that</c><00:01:38.250><c> gives</c><00:01:38.520><c> you</c><00:01:38.700><c> the</c>

00:01:38.810 --> 00:01:38.820 align:start position:0%
two by two region that gives you the
 

00:01:38.820 --> 00:01:41.510 align:start position:0%
two by two region that gives you the
nine<00:01:39.090><c> and</c><00:01:39.420><c> then</c><00:01:40.170><c> you</c><00:01:40.290><c> step</c><00:01:40.560><c> it</c><00:01:40.740><c> over</c><00:01:41.009><c> two</c><00:01:41.220><c> steps</c>

00:01:41.510 --> 00:01:41.520 align:start position:0%
nine and then you step it over two steps
 

00:01:41.520 --> 00:01:44.870 align:start position:0%
nine and then you step it over two steps
to<00:01:42.420><c> look</c><00:01:42.600><c> at</c><00:01:42.780><c> this</c><00:01:42.990><c> region</c><00:01:43.490><c> to</c><00:01:44.490><c> give</c><00:01:44.670><c> you</c><00:01:44.759><c> the</c>

00:01:44.870 --> 00:01:44.880 align:start position:0%
to look at this region to give you the
 

00:01:44.880 --> 00:01:47.240 align:start position:0%
to look at this region to give you the
two<00:01:45.149><c> and</c><00:01:45.420><c> then</c><00:01:46.049><c> for</c><00:01:46.380><c> the</c><00:01:46.470><c> next</c><00:01:46.710><c> row</c><00:01:46.829><c> you</c><00:01:46.979><c> step</c>

00:01:47.240 --> 00:01:47.250 align:start position:0%
two and then for the next row you step
 

00:01:47.250 --> 00:01:49.340 align:start position:0%
two and then for the next row you step
it<00:01:47.399><c> down</c><00:01:47.430><c> two</c><00:01:47.790><c> steps</c><00:01:48.090><c> to</c><00:01:48.750><c> give</c><00:01:48.930><c> you</c><00:01:48.990><c> the</c><00:01:49.079><c> six</c>

00:01:49.340 --> 00:01:49.350 align:start position:0%
it down two steps to give you the six
 

00:01:49.350 --> 00:01:50.990 align:start position:0%
it down two steps to give you the six
and<00:01:49.680><c> then</c><00:01:49.770><c> step</c><00:01:50.040><c> it</c><00:01:50.189><c> to</c><00:01:50.250><c> the</c><00:01:50.369><c> right</c><00:01:50.549><c> by</c><00:01:50.759><c> two</c>

00:01:50.990 --> 00:01:51.000 align:start position:0%
and then step it to the right by two
 

00:01:51.000 --> 00:01:53.270 align:start position:0%
and then step it to the right by two
steps<00:01:51.450><c> to</c><00:01:51.570><c> give</c><00:01:51.720><c> you</c><00:01:51.840><c> three</c><00:01:52.200><c> so</c><00:01:52.829><c> because</c><00:01:53.100><c> the</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
steps to give you three so because the
 

00:01:53.280 --> 00:01:55.639 align:start position:0%
steps to give you three so because the
squares<00:01:53.640><c> are</c><00:01:53.820><c> two</c><00:01:53.939><c> by</c><00:01:54.090><c> two</c><00:01:54.149><c> F</c><00:01:54.899><c> is</c><00:01:55.110><c> equal</c><00:01:55.350><c> to</c><00:01:55.380><c> two</c>

00:01:55.639 --> 00:01:55.649 align:start position:0%
squares are two by two F is equal to two
 

00:01:55.649 --> 00:01:58.219 align:start position:0%
squares are two by two F is equal to two
and<00:01:55.860><c> because</c><00:01:56.159><c> you</c><00:01:56.310><c> you</c><00:01:56.700><c> know</c><00:01:56.729><c> stripe</c><00:01:57.180><c> I</c><00:01:57.420><c> to</c><00:01:57.479><c> s</c>

00:01:58.219 --> 00:01:58.229 align:start position:0%
and because you you know stripe I to s
 

00:01:58.229 --> 00:02:01.850 align:start position:0%
and because you you know stripe I to s
is<00:01:58.500><c> equal</c><00:01:58.799><c> to</c><00:01:58.829><c> two</c><00:01:59.189><c> so</c><00:02:00.110><c> here's</c><00:02:01.110><c> the</c><00:02:01.229><c> intuition</c>

00:02:01.850 --> 00:02:01.860 align:start position:0%
is equal to two so here's the intuition
 

00:02:01.860 --> 00:02:04.850 align:start position:0%
is equal to two so here's the intuition
behind<00:02:02.070><c> what</c><00:02:02.430><c> max</c><00:02:02.969><c> pooling</c><00:02:03.299><c> is</c><00:02:03.719><c> doing</c><00:02:04.140><c> if</c><00:02:04.680><c> you</c>

00:02:04.850 --> 00:02:04.860 align:start position:0%
behind what max pooling is doing if you
 

00:02:04.860 --> 00:02:08.270 align:start position:0%
behind what max pooling is doing if you
think<00:02:05.040><c> of</c><00:02:05.219><c> this</c><00:02:06.090><c> four</c><00:02:06.329><c> by</c><00:02:06.479><c> four</c><00:02:06.649><c> input</c><00:02:07.649><c> as</c><00:02:07.890><c> some</c>

00:02:08.270 --> 00:02:08.280 align:start position:0%
think of this four by four input as some
 

00:02:08.280 --> 00:02:10.749 align:start position:0%
think of this four by four input as some
set<00:02:08.489><c> of</c><00:02:08.520><c> features</c><00:02:08.610><c> or</c><00:02:09.539><c> maybe</c><00:02:09.750><c> not</c>

00:02:10.749 --> 00:02:10.759 align:start position:0%
set of features or maybe not
 

00:02:10.759 --> 00:02:13.930 align:start position:0%
set of features or maybe not
if<00:02:11.239><c> you</c><00:02:11.390><c> think</c><00:02:11.569><c> of</c><00:02:11.659><c> this</c><00:02:11.810><c> 4x4</c><00:02:12.400><c> region</c><00:02:13.400><c> as</c><00:02:13.640><c> some</c>

00:02:13.930 --> 00:02:13.940 align:start position:0%
if you think of this 4x4 region as some
 

00:02:13.940 --> 00:02:17.259 align:start position:0%
if you think of this 4x4 region as some
sort<00:02:14.150><c> of</c><00:02:14.209><c> features</c><00:02:15.849><c> deactivations</c><00:02:16.849><c> in</c><00:02:17.030><c> some</c>

00:02:17.259 --> 00:02:17.269 align:start position:0%
sort of features deactivations in some
 

00:02:17.269 --> 00:02:20.020 align:start position:0%
sort of features deactivations in some
layer<00:02:17.540><c> of</c><00:02:17.840><c> the</c><00:02:17.959><c> neural</c><00:02:18.230><c> network</c><00:02:18.400><c> then</c><00:02:19.400><c> a</c><00:02:19.640><c> large</c>

00:02:20.020 --> 00:02:20.030 align:start position:0%
layer of the neural network then a large
 

00:02:20.030 --> 00:02:22.210 align:start position:0%
layer of the neural network then a large
number<00:02:20.269><c> means</c><00:02:20.750><c> that</c><00:02:20.989><c> it's</c><00:02:21.440><c> maybe</c><00:02:21.650><c> detect</c><00:02:22.099><c> to</c>

00:02:22.210 --> 00:02:22.220 align:start position:0%
number means that it's maybe detect to
 

00:02:22.220 --> 00:02:23.979 align:start position:0%
number means that it's maybe detect to
the<00:02:22.340><c> particular</c><00:02:22.549><c> feature</c><00:02:22.940><c> right</c><00:02:23.690><c> so</c><00:02:23.870><c> the</c>

00:02:23.979 --> 00:02:23.989 align:start position:0%
the particular feature right so the
 

00:02:23.989 --> 00:02:25.720 align:start position:0%
the particular feature right so the
upper<00:02:24.200><c> left-hand</c><00:02:24.440><c> quadrant</c><00:02:24.709><c> has</c><00:02:25.519><c> this</c>

00:02:25.720 --> 00:02:25.730 align:start position:0%
upper left-hand quadrant has this
 

00:02:25.730 --> 00:02:27.490 align:start position:0%
upper left-hand quadrant has this
particular<00:02:25.940><c> feature</c><00:02:26.269><c> maybe</c><00:02:26.720><c> a</c><00:02:26.810><c> vertical</c><00:02:27.319><c> area</c>

00:02:27.490 --> 00:02:27.500 align:start position:0%
particular feature maybe a vertical area
 

00:02:27.500 --> 00:02:31.059 align:start position:0%
particular feature maybe a vertical area
or<00:02:28.010><c> maybe</c><00:02:28.250><c> an</c><00:02:28.489><c> eye</c><00:02:28.700><c> or</c><00:02:29.620><c> what's</c><00:02:30.620><c> terribly</c>

00:02:31.059 --> 00:02:31.069 align:start position:0%
or maybe an eye or what's terribly
 

00:02:31.069 --> 00:02:32.680 align:start position:0%
or maybe an eye or what's terribly
trying<00:02:31.280><c> to</c><00:02:31.340><c> detect</c><00:02:31.640><c> niqab</c><00:02:32.000><c> but</c><00:02:32.269><c> you</c><00:02:32.360><c> know</c><00:02:32.450><c> the</c>

00:02:32.680 --> 00:02:32.690 align:start position:0%
trying to detect niqab but you know the
 

00:02:32.690 --> 00:02:34.630 align:start position:0%
trying to detect niqab but you know the
clearly<00:02:32.989><c> that</c><00:02:33.110><c> feature</c><00:02:33.590><c> exists</c><00:02:34.190><c> in</c><00:02:34.250><c> the</c><00:02:34.340><c> upper</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
clearly that feature exists in the upper
 

00:02:34.640 --> 00:02:35.530 align:start position:0%
clearly that feature exists in the upper
left-hand<00:02:34.910><c> quadrant</c>

00:02:35.530 --> 00:02:35.540 align:start position:0%
left-hand quadrant
 

00:02:35.540 --> 00:02:38.860 align:start position:0%
left-hand quadrant
whereas<00:02:36.110><c> this</c><00:02:36.260><c> feature</c><00:02:36.500><c> maybe</c><00:02:37.250><c> doesn't</c><00:02:37.870><c> cat</c>

00:02:38.860 --> 00:02:38.870 align:start position:0%
whereas this feature maybe doesn't cat
 

00:02:38.870 --> 00:02:41.110 align:start position:0%
whereas this feature maybe doesn't cat
my<00:02:39.319><c> detector</c><00:02:40.010><c> whereas</c><00:02:40.340><c> this</c><00:02:40.489><c> feature</c><00:02:40.700><c> doesn't</c>

00:02:41.110 --> 00:02:41.120 align:start position:0%
my detector whereas this feature doesn't
 

00:02:41.120 --> 00:02:42.910 align:start position:0%
my detector whereas this feature doesn't
really<00:02:41.390><c> exist</c><00:02:41.599><c> in</c><00:02:41.959><c> the</c><00:02:42.379><c> upper</c><00:02:42.709><c> right-hand</c>

00:02:42.910 --> 00:02:42.920 align:start position:0%
really exist in the upper right-hand
 

00:02:42.920 --> 00:02:45.520 align:start position:0%
really exist in the upper right-hand
quadrant<00:02:43.280><c> so</c><00:02:44.150><c> what</c><00:02:44.299><c> the</c><00:02:44.420><c> max</c><00:02:44.690><c> operation</c><00:02:45.319><c> does</c>

00:02:45.520 --> 00:02:45.530 align:start position:0%
quadrant so what the max operation does
 

00:02:45.530 --> 00:02:47.530 align:start position:0%
quadrant so what the max operation does
is<00:02:45.769><c> Salons</c><00:02:46.160><c> the</c><00:02:46.310><c> features</c><00:02:46.670><c> detected</c><00:02:47.209><c> anywhere</c>

00:02:47.530 --> 00:02:47.540 align:start position:0%
is Salons the features detected anywhere
 

00:02:47.540 --> 00:02:49.630 align:start position:0%
is Salons the features detected anywhere
in<00:02:47.930><c> one</c><00:02:48.079><c> of</c><00:02:48.200><c> these</c><00:02:48.290><c> quadrants</c><00:02:48.859><c> it</c><00:02:49.370><c> then</c>

00:02:49.630 --> 00:02:49.640 align:start position:0%
in one of these quadrants it then
 

00:02:49.640 --> 00:02:52.150 align:start position:0%
in one of these quadrants it then
remains<00:02:49.970><c> preserved</c><00:02:50.269><c> in</c><00:02:50.810><c> the</c><00:02:50.930><c> output</c><00:02:51.349><c> of</c><00:02:51.560><c> max</c>

00:02:52.150 --> 00:02:52.160 align:start position:0%
remains preserved in the output of max
 

00:02:52.160 --> 00:02:55.270 align:start position:0%
remains preserved in the output of max
pooling<00:02:52.780><c> so</c><00:02:53.780><c> what</c><00:02:53.930><c> the</c><00:02:54.019><c> max</c><00:02:54.260><c> operates</c><00:02:54.739><c> to</c><00:02:55.099><c> does</c>

00:02:55.270 --> 00:02:55.280 align:start position:0%
pooling so what the max operates to does
 

00:02:55.280 --> 00:02:57.280 align:start position:0%
pooling so what the max operates to does
is<00:02:55.519><c> really</c><00:02:55.790><c> safe</c><00:02:56.090><c> you</c><00:02:56.720><c> know</c><00:02:56.810><c> if</c><00:02:56.959><c> this</c><00:02:57.109><c> feature</c>

00:02:57.280 --> 00:02:57.290 align:start position:0%
is really safe you know if this feature
 

00:02:57.290 --> 00:03:00.009 align:start position:0%
is really safe you know if this feature
is<00:02:57.530><c> detected</c><00:02:58.010><c> anywhere</c><00:02:58.310><c> in</c><00:02:58.760><c> this</c><00:02:59.030><c> filter</c><00:02:59.299><c> then</c>

00:03:00.009 --> 00:03:00.019 align:start position:0%
is detected anywhere in this filter then
 

00:03:00.019 --> 00:03:02.440 align:start position:0%
is detected anywhere in this filter then
keep<00:03:00.440><c> a</c><00:03:00.590><c> high</c><00:03:00.769><c> number</c><00:03:00.829><c> but</c><00:03:01.519><c> if</c><00:03:01.640><c> this</c><00:03:02.090><c> feature</c>

00:03:02.440 --> 00:03:02.450 align:start position:0%
keep a high number but if this feature
 

00:03:02.450 --> 00:03:05.259 align:start position:0%
keep a high number but if this feature
is<00:03:02.690><c> not</c><00:03:02.930><c> detected</c><00:03:03.470><c> so</c><00:03:03.769><c> maybe</c><00:03:04.489><c> if</c><00:03:04.670><c> this</c><00:03:05.000><c> feature</c>

00:03:05.259 --> 00:03:05.269 align:start position:0%
is not detected so maybe if this feature
 

00:03:05.269 --> 00:03:07.030 align:start position:0%
is not detected so maybe if this feature
doesn't<00:03:05.810><c> exist</c><00:03:06.290><c> in</c><00:03:06.470><c> the</c><00:03:06.560><c> upper</c><00:03:06.829><c> right</c><00:03:07.010><c> hand</c>

00:03:07.030 --> 00:03:07.040 align:start position:0%
doesn't exist in the upper right hand
 

00:03:07.040 --> 00:03:08.979 align:start position:0%
doesn't exist in the upper right hand
quadrant<00:03:07.340><c> in</c><00:03:07.819><c> the</c><00:03:07.879><c> max</c><00:03:08.090><c> of</c><00:03:08.269><c> all</c><00:03:08.390><c> those</c><00:03:08.599><c> numbers</c>

00:03:08.979 --> 00:03:08.989 align:start position:0%
quadrant in the max of all those numbers
 

00:03:08.989 --> 00:03:11.470 align:start position:0%
quadrant in the max of all those numbers
is<00:03:09.260><c> throw</c><00:03:09.470><c> itself</c><00:03:09.769><c> quite</c><00:03:10.519><c> small</c><00:03:10.910><c> so</c><00:03:11.120><c> maybe</c>

00:03:11.470 --> 00:03:11.480 align:start position:0%
is throw itself quite small so maybe
 

00:03:11.480 --> 00:03:14.849 align:start position:0%
is throw itself quite small so maybe
that's<00:03:11.629><c> the</c><00:03:11.750><c> intuition</c><00:03:12.410><c> behind</c><00:03:12.440><c> max</c><00:03:13.400><c> pooling</c>

00:03:14.849 --> 00:03:14.859 align:start position:0%
that's the intuition behind max pooling
 

00:03:14.859 --> 00:03:17.830 align:start position:0%
that's the intuition behind max pooling
but<00:03:15.859><c> I</c><00:03:16.010><c> have</c><00:03:16.160><c> to</c><00:03:16.310><c> admit</c><00:03:16.489><c> I</c><00:03:16.549><c> think</c><00:03:16.669><c> the</c><00:03:17.630><c> main</c>

00:03:17.830 --> 00:03:17.840 align:start position:0%
but I have to admit I think the main
 

00:03:17.840 --> 00:03:19.870 align:start position:0%
but I have to admit I think the main
reason<00:03:17.870><c> people</c><00:03:18.410><c> use</c><00:03:18.560><c> max</c><00:03:18.980><c> pooling</c><00:03:19.220><c> is</c><00:03:19.519><c> because</c>

00:03:19.870 --> 00:03:19.880 align:start position:0%
reason people use max pooling is because
 

00:03:19.880 --> 00:03:21.190 align:start position:0%
reason people use max pooling is because
it's<00:03:20.299><c> been</c><00:03:20.510><c> found</c><00:03:20.750><c> on</c><00:03:20.870><c> malla</c>

00:03:21.190 --> 00:03:21.200 align:start position:0%
it's been found on malla
 

00:03:21.200 --> 00:03:23.680 align:start position:0%
it's been found on malla
in<00:03:21.380><c> a</c><00:03:21.500><c> lot</c><00:03:21.680><c> of</c><00:03:21.709><c> experiments</c><00:03:22.430><c> to</c><00:03:22.549><c> work</c><00:03:23.060><c> well</c><00:03:23.329><c> and</c>

00:03:23.680 --> 00:03:23.690 align:start position:0%
in a lot of experiments to work well and
 

00:03:23.690 --> 00:03:26.199 align:start position:0%
in a lot of experiments to work well and
the<00:03:23.900><c> intuition</c><00:03:24.230><c> I</c><00:03:24.530><c> just</c><00:03:24.769><c> described</c><00:03:25.220><c> despite</c>

00:03:26.199 --> 00:03:26.209 align:start position:0%
the intuition I just described despite
 

00:03:26.209 --> 00:03:28.000 align:start position:0%
the intuition I just described despite
it<00:03:26.359><c> being</c><00:03:26.389><c> often</c><00:03:26.840><c> cited</c><00:03:27.290><c> I</c><00:03:27.470><c> don't</c><00:03:27.739><c> know</c><00:03:27.889><c> of</c>

00:03:28.000 --> 00:03:28.010 align:start position:0%
it being often cited I don't know of
 

00:03:28.010 --> 00:03:29.800 align:start position:0%
it being often cited I don't know of
anyone<00:03:28.370><c> you</c><00:03:28.700><c> know</c><00:03:28.790><c> fully</c><00:03:29.090><c> knows</c><00:03:29.359><c> if</c><00:03:29.569><c> that's</c>

00:03:29.800 --> 00:03:29.810 align:start position:0%
anyone you know fully knows if that's
 

00:03:29.810 --> 00:03:33.580 align:start position:0%
anyone you know fully knows if that's
the<00:03:30.549><c> real</c><00:03:31.549><c> underlying</c><00:03:31.940><c> reason</c><00:03:32.630><c> I</c><00:03:32.930><c> don't</c><00:03:33.380><c> have</c>

00:03:33.580 --> 00:03:33.590 align:start position:0%
the real underlying reason I don't have
 

00:03:33.590 --> 00:03:35.470 align:start position:0%
the real underlying reason I don't have
anyone<00:03:33.950><c> knows</c><00:03:34.190><c> that</c><00:03:34.340><c> that's</c><00:03:34.549><c> the</c><00:03:34.819><c> real</c>

00:03:35.470 --> 00:03:35.480 align:start position:0%
anyone knows that that's the real
 

00:03:35.480 --> 00:03:37.599 align:start position:0%
anyone knows that that's the real
underlying<00:03:35.840><c> reason</c><00:03:36.440><c> that</c><00:03:36.620><c> max</c><00:03:36.859><c> pooling</c><00:03:37.130><c> works</c>

00:03:37.599 --> 00:03:37.609 align:start position:0%
underlying reason that max pooling works
 

00:03:37.609 --> 00:03:39.819 align:start position:0%
underlying reason that max pooling works
well<00:03:37.970><c> in</c><00:03:38.180><c> confidence</c><00:03:38.750><c> um</c>

00:03:39.819 --> 00:03:39.829 align:start position:0%
well in confidence um
 

00:03:39.829 --> 00:03:42.039 align:start position:0%
well in confidence um
one<00:03:40.310><c> interesting</c><00:03:40.609><c> property</c><00:03:41.239><c> of</c><00:03:41.269><c> max</c><00:03:41.780><c> pooling</c>

00:03:42.039 --> 00:03:42.049 align:start position:0%
one interesting property of max pooling
 

00:03:42.049 --> 00:03:44.710 align:start position:0%
one interesting property of max pooling
is<00:03:42.500><c> that</c><00:03:42.769><c> it</c><00:03:43.220><c> has</c><00:03:43.400><c> a</c><00:03:43.430><c> set</c><00:03:43.760><c> of</c><00:03:43.880><c> hyper</c><00:03:44.120><c> parameters</c>

00:03:44.710 --> 00:03:44.720 align:start position:0%
is that it has a set of hyper parameters
 

00:03:44.720 --> 00:03:47.949 align:start position:0%
is that it has a set of hyper parameters
but<00:03:45.290><c> it</c><00:03:45.410><c> has</c><00:03:45.590><c> no</c><00:03:45.919><c> parameters</c><00:03:46.730><c> to</c><00:03:46.940><c> learn</c><00:03:47.120><c> right</c>

00:03:47.949 --> 00:03:47.959 align:start position:0%
but it has no parameters to learn right
 

00:03:47.959 --> 00:03:49.449 align:start position:0%
but it has no parameters to learn right
there's<00:03:48.169><c> actually</c><00:03:48.440><c> nothing</c><00:03:48.680><c> for</c><00:03:49.099><c> gradient</c>

00:03:49.449 --> 00:03:49.459 align:start position:0%
there's actually nothing for gradient
 

00:03:49.459 --> 00:03:52.000 align:start position:0%
there's actually nothing for gradient
descent<00:03:49.790><c> to</c><00:03:49.910><c> learn</c><00:03:50.090><c> once</c><00:03:50.480><c> you've</c><00:03:50.660><c> fixed</c><00:03:51.260><c> FNS</c>

00:03:52.000 --> 00:03:52.010 align:start position:0%
descent to learn once you've fixed FNS
 

00:03:52.010 --> 00:03:54.580 align:start position:0%
descent to learn once you've fixed FNS
is<00:03:52.310><c> just</c><00:03:52.669><c> a</c><00:03:52.790><c> fixed</c><00:03:53.060><c> computation</c><00:03:53.840><c> and</c><00:03:54.109><c> gradient</c>

00:03:54.580 --> 00:03:54.590 align:start position:0%
is just a fixed computation and gradient
 

00:03:54.590 --> 00:03:56.490 align:start position:0%
is just a fixed computation and gradient
descent<00:03:54.889><c> doesn't</c><00:03:55.370><c> change</c><00:03:55.579><c> anything</c>

00:03:56.490 --> 00:03:56.500 align:start position:0%
descent doesn't change anything
 

00:03:56.500 --> 00:03:59.259 align:start position:0%
descent doesn't change anything
let's<00:03:57.500><c> go</c><00:03:57.680><c> through</c><00:03:58.010><c> an</c><00:03:58.280><c> example</c><00:03:58.430><c> with</c><00:03:59.030><c> some</c>

00:03:59.259 --> 00:03:59.269 align:start position:0%
let's go through an example with some
 

00:03:59.269 --> 00:04:01.000 align:start position:0%
let's go through an example with some
different<00:03:59.690><c> hyper</c><00:03:59.900><c> parameters</c><00:04:00.500><c> here</c><00:04:00.889><c> I'm</c>

00:04:01.000 --> 00:04:01.010 align:start position:0%
different hyper parameters here I'm
 

00:04:01.010 --> 00:04:04.900 align:start position:0%
different hyper parameters here I'm
going<00:04:01.129><c> to</c><00:04:01.190><c> use</c><00:04:01.599><c> here</c><00:04:02.599><c> you</c><00:04:02.780><c> have</c><00:04:02.989><c> a</c><00:04:03.400><c> 5x5</c><00:04:04.400><c> input</c>

00:04:04.900 --> 00:04:04.910 align:start position:0%
going to use here you have a 5x5 input
 

00:04:04.910 --> 00:04:07.210 align:start position:0%
going to use here you have a 5x5 input
and<00:04:05.180><c> we're</c><00:04:05.840><c> going</c><00:04:06.019><c> to</c><00:04:06.049><c> apply</c><00:04:06.260><c> max</c><00:04:06.739><c> cooling</c>

00:04:07.210 --> 00:04:07.220 align:start position:0%
and we're going to apply max cooling
 

00:04:07.220 --> 00:04:10.210 align:start position:0%
and we're going to apply max cooling
with<00:04:07.849><c> a</c><00:04:08.150><c> filter</c><00:04:08.629><c> size</c><00:04:08.840><c> that's</c><00:04:09.290><c> three</c><00:04:09.709><c> by</c><00:04:09.859><c> three</c>

00:04:10.210 --> 00:04:10.220 align:start position:0%
with a filter size that's three by three
 

00:04:10.220 --> 00:04:12.490 align:start position:0%
with a filter size that's three by three
so<00:04:10.579><c> f</c><00:04:10.760><c> is</c><00:04:10.879><c> equal</c><00:04:11.090><c> to</c><00:04:11.180><c> three</c><00:04:11.419><c> and</c><00:04:11.660><c> let's</c><00:04:12.319><c> use</c><00:04:12.470><c> a</c>

00:04:12.490 --> 00:04:12.500 align:start position:0%
so f is equal to three and let's use a
 

00:04:12.500 --> 00:04:14.860 align:start position:0%
so f is equal to three and let's use a
stride<00:04:12.859><c> of</c><00:04:13.010><c> one</c><00:04:13.250><c> so</c><00:04:13.970><c> in</c><00:04:14.060><c> this</c><00:04:14.180><c> case</c><00:04:14.419><c> the</c><00:04:14.660><c> output</c>

00:04:14.860 --> 00:04:14.870 align:start position:0%
stride of one so in this case the output
 

00:04:14.870 --> 00:04:18.360 align:start position:0%
stride of one so in this case the output
size<00:04:15.440><c> is</c><00:04:15.769><c> going</c><00:04:16.010><c> to</c><00:04:16.130><c> be</c><00:04:16.220><c> three</c><00:04:16.489><c> by</c><00:04:16.699><c> three</c><00:04:17.090><c> and</c>

00:04:18.360 --> 00:04:18.370 align:start position:0%
size is going to be three by three and
 

00:04:18.370 --> 00:04:20.649 align:start position:0%
size is going to be three by three and
the<00:04:19.370><c> formulas</c><00:04:19.820><c> we're</c><00:04:20.000><c> developed</c><00:04:20.450><c> in</c><00:04:20.570><c> the</c>

00:04:20.649 --> 00:04:20.659 align:start position:0%
the formulas we're developed in the
 

00:04:20.659 --> 00:04:22.209 align:start position:0%
the formulas we're developed in the
previous<00:04:21.049><c> videos</c><00:04:21.469><c> for</c><00:04:21.739><c> freaking</c><00:04:21.950><c> out</c><00:04:22.099><c> the</c>

00:04:22.209 --> 00:04:22.219 align:start position:0%
previous videos for freaking out the
 

00:04:22.219 --> 00:04:24.430 align:start position:0%
previous videos for freaking out the
output<00:04:22.640><c> size</c><00:04:22.820><c> for</c><00:04:23.090><c> a</c><00:04:23.120><c> cons</c><00:04:23.390><c> layer</c><00:04:23.659><c> those</c>

00:04:24.430 --> 00:04:24.440 align:start position:0%
output size for a cons layer those
 

00:04:24.440 --> 00:04:27.580 align:start position:0%
output size for a cons layer those
formulas<00:04:24.800><c> also</c><00:04:25.070><c> work</c><00:04:25.550><c> for</c><00:04:25.880><c> max</c><00:04:26.120><c> pooling</c><00:04:26.590><c> right</c>

00:04:27.580 --> 00:04:27.590 align:start position:0%
formulas also work for max pooling right
 

00:04:27.590 --> 00:04:33.700 align:start position:0%
formulas also work for max pooling right
so<00:04:27.770><c> that</c><00:04:27.980><c> n</c><00:04:28.810><c> plus</c><00:04:29.810><c> 2p</c><00:04:30.320><c> minus</c><00:04:30.590><c> F</c><00:04:31.010><c> over</c><00:04:31.760><c> s4</c><00:04:32.720><c> plus</c>

00:04:33.700 --> 00:04:33.710 align:start position:0%
so that n plus 2p minus F over s4 plus
 

00:04:33.710 --> 00:04:35.800 align:start position:0%
so that n plus 2p minus F over s4 plus
one<00:04:34.040><c> that</c><00:04:34.370><c> that</c><00:04:34.640><c> formula</c><00:04:35.030><c> also</c><00:04:35.180><c> works</c><00:04:35.540><c> for</c>

00:04:35.800 --> 00:04:35.810 align:start position:0%
one that that formula also works for
 

00:04:35.810 --> 00:04:38.590 align:start position:0%
one that that formula also works for
figure<00:04:36.410><c> out</c><00:04:36.500><c> the</c><00:04:36.620><c> output</c><00:04:37.010><c> size</c><00:04:37.190><c> of</c><00:04:37.370><c> export</c><00:04:37.850><c> but</c>

00:04:38.590 --> 00:04:38.600 align:start position:0%
figure out the output size of export but
 

00:04:38.600 --> 00:04:40.810 align:start position:0%
figure out the output size of export but
in<00:04:38.660><c> this</c><00:04:38.720><c> example</c><00:04:39.140><c> let's</c><00:04:39.800><c> compute</c><00:04:40.190><c> each</c><00:04:40.580><c> of</c>

00:04:40.810 --> 00:04:40.820 align:start position:0%
in this example let's compute each of
 

00:04:40.820 --> 00:04:43.690 align:start position:0%
in this example let's compute each of
the<00:04:40.910><c> elements</c><00:04:41.360><c> of</c><00:04:41.450><c> this</c><00:04:41.600><c> 3x3</c><00:04:42.200><c> output</c><00:04:42.700><c> the</c>

00:04:43.690 --> 00:04:43.700 align:start position:0%
the elements of this 3x3 output the
 

00:04:43.700 --> 00:04:45.460 align:start position:0%
the elements of this 3x3 output the
upper<00:04:44.030><c> left-hand</c><00:04:44.300><c> elements</c><00:04:45.080><c> were</c><00:04:45.170><c> going</c><00:04:45.380><c> to</c>

00:04:45.460 --> 00:04:45.470 align:start position:0%
upper left-hand elements were going to
 

00:04:45.470 --> 00:04:47.350 align:start position:0%
upper left-hand elements were going to
look<00:04:45.680><c> over</c><00:04:45.860><c> that</c><00:04:46.040><c> region</c><00:04:46.400><c> so</c><00:04:46.820><c> notice</c><00:04:47.150><c> this</c><00:04:47.300><c> is</c>

00:04:47.350 --> 00:04:47.360 align:start position:0%
look over that region so notice this is
 

00:04:47.360 --> 00:04:50.110 align:start position:0%
look over that region so notice this is
a<00:04:47.480><c> 3x3</c><00:04:48.170><c> agent</c><00:04:48.680><c> because</c><00:04:48.890><c> the</c><00:04:49.220><c> filter</c><00:04:49.520><c> size</c><00:04:49.700><c> is</c><00:04:49.850><c> 3</c>

00:04:50.110 --> 00:04:50.120 align:start position:0%
a 3x3 agent because the filter size is 3
 

00:04:50.120 --> 00:04:52.330 align:start position:0%
a 3x3 agent because the filter size is 3
and<00:04:50.330><c> to</c><00:04:50.960><c> the</c><00:04:51.080><c> max</c><00:04:51.290><c> there</c><00:04:51.560><c> so</c><00:04:51.890><c> that's</c><00:04:52.130><c> gonna</c><00:04:52.250><c> be</c>

00:04:52.330 --> 00:04:52.340 align:start position:0%
and to the max there so that's gonna be
 

00:04:52.340 --> 00:04:55.570 align:start position:0%
and to the max there so that's gonna be
9<00:04:53.030><c> and</c><00:04:53.480><c> they</c><00:04:54.020><c> were</c><00:04:54.110><c> shifted</c><00:04:54.500><c> over</c><00:04:54.650><c> by</c><00:04:55.070><c> 1</c>

00:04:55.570 --> 00:04:55.580 align:start position:0%
9 and they were shifted over by 1
 

00:04:55.580 --> 00:04:58.120 align:start position:0%
9 and they were shifted over by 1
because<00:04:55.910><c> which</c><00:04:56.210><c> you</c><00:04:56.330><c> can</c><00:04:56.480><c> stride</c><00:04:56.780><c> of</c><00:04:56.960><c> one</c><00:04:57.260><c> so</c>

00:04:58.120 --> 00:04:58.130 align:start position:0%
because which you can stride of one so
 

00:04:58.130 --> 00:05:01.290 align:start position:0%
because which you can stride of one so
that<00:04:58.520><c> matter</c><00:04:59.390><c> in</c><00:04:59.600><c> the</c><00:04:59.750><c> blue</c><00:05:00.110><c> box</c><00:05:00.470><c> is</c><00:05:00.740><c> knowing</c>

00:05:01.290 --> 00:05:01.300 align:start position:0%
that matter in the blue box is knowing
 

00:05:01.300 --> 00:05:04.000 align:start position:0%
that matter in the blue box is knowing
let's<00:05:02.300><c> shift</c><00:05:02.480><c> that</c><00:05:02.600><c> over</c><00:05:02.660><c> a</c><00:05:02.960><c> game</c><00:05:03.290><c> or</c><00:05:03.560><c> the</c>

00:05:04.000 --> 00:05:04.010 align:start position:0%
let's shift that over a game or the
 

00:05:04.010 --> 00:05:07.390 align:start position:0%
let's shift that over a game or the
mat-su<00:05:04.220><c> the</c><00:05:04.520><c> blue</c><00:05:04.670><c> box</c><00:05:04.910><c> is</c><00:05:05.120><c> 5</c><00:05:05.690><c> and</c><00:05:06.110><c> then</c><00:05:06.830><c> let's</c>

00:05:07.390 --> 00:05:07.400 align:start position:0%
mat-su the blue box is 5 and then let's
 

00:05:07.400 --> 00:05:09.880 align:start position:0%
mat-su the blue box is 5 and then let's
go<00:05:07.550><c> on</c><00:05:07.580><c> to</c><00:05:07.790><c> the</c><00:05:07.910><c> mix</c><00:05:08.330><c> row</c><00:05:08.600><c> astride</c><00:05:09.140><c> of</c><00:05:09.290><c> one</c><00:05:09.560><c> so</c>

00:05:09.880 --> 00:05:09.890 align:start position:0%
go on to the mix row astride of one so
 

00:05:09.890 --> 00:05:12.790 align:start position:0%
go on to the mix row astride of one so
we're<00:05:10.040><c> just</c><00:05:10.070><c> stepping</c><00:05:10.850><c> down</c><00:05:11.120><c> by</c><00:05:11.360><c> one</c><00:05:11.600><c> step</c><00:05:11.900><c> so</c>

00:05:12.790 --> 00:05:12.800 align:start position:0%
we're just stepping down by one step so
 

00:05:12.800 --> 00:05:16.180 align:start position:0%
we're just stepping down by one step so
max<00:05:13.400><c> in</c><00:05:13.670><c> that</c><00:05:13.850><c> vision</c><00:05:14.360><c> is</c><00:05:14.480><c> 9</c><00:05:14.890><c> max</c><00:05:15.890><c> in</c><00:05:16.070><c> that</c>

00:05:16.180 --> 00:05:16.190 align:start position:0%
max in that vision is 9 max in that
 

00:05:16.190 --> 00:05:20.590 align:start position:0%
max in that vision is 9 max in that
region<00:05:16.370><c> is</c><00:05:16.640><c> 9</c><00:05:16.990><c> max</c><00:05:17.990><c> in</c><00:05:18.230><c> that</c><00:05:18.530><c> region</c><00:05:19.180><c> so</c><00:05:20.180><c> the</c><00:05:20.420><c> 2</c>

00:05:20.590 --> 00:05:20.600 align:start position:0%
region is 9 max in that region so the 2
 

00:05:20.600 --> 00:05:23.620 align:start position:0%
region is 9 max in that region so the 2
files<00:05:20.810><c> from</c><00:05:21.110><c> the</c><00:05:21.200><c> max</c><00:05:21.380><c> of</c><00:05:21.650><c> 5</c><00:05:22.030><c> and</c><00:05:23.030><c> then</c><00:05:23.150><c> finally</c>

00:05:23.620 --> 00:05:23.630 align:start position:0%
files from the max of 5 and then finally
 

00:05:23.630 --> 00:05:29.110 align:start position:0%
files from the max of 5 and then finally
max<00:05:24.440><c> in</c><00:05:24.650><c> that</c><00:05:24.830><c> just</c><00:05:25.100><c> eight</c><00:05:25.750><c> max</c><00:05:26.750><c> in</c><00:05:26.990><c> that</c><00:05:27.230><c> 6</c><00:05:28.130><c> and</c>

00:05:29.110 --> 00:05:29.120 align:start position:0%
max in that just eight max in that 6 and
 

00:05:29.120 --> 00:05:31.030 align:start position:0%
max in that just eight max in that 6 and
max<00:05:29.360><c> in</c><00:05:29.540><c> that</c><00:05:29.720><c> there's</c><00:05:30.169><c> none</c><00:05:30.440><c> in</c><00:05:30.470><c> the</c><00:05:30.860><c> right</c>

00:05:31.030 --> 00:05:31.040 align:start position:0%
max in that there's none in the right
 

00:05:31.040 --> 00:05:33.730 align:start position:0%
max in that there's none in the right
hand<00:05:31.220><c> corner</c><00:05:31.400><c> okay</c><00:05:32.120><c> so</c><00:05:32.180><c> this</c><00:05:32.720><c> will</c><00:05:33.320><c> just</c><00:05:33.530><c> set</c>

00:05:33.730 --> 00:05:33.740 align:start position:0%
hand corner okay so this will just set
 

00:05:33.740 --> 00:05:35.470 align:start position:0%
hand corner okay so this will just set
the<00:05:33.830><c> hype</c><00:05:34.040><c> around</c><00:05:34.160><c> to</c><00:05:34.430><c> this</c><00:05:34.520><c> effort</c><00:05:34.790><c> of</c><00:05:34.970><c> 3</c><00:05:35.240><c> s</c>

00:05:35.470 --> 00:05:35.480 align:start position:0%
the hype around to this effort of 3 s
 

00:05:35.480 --> 00:05:38.820 align:start position:0%
the hype around to this effort of 3 s
equals<00:05:35.780><c> 1</c><00:05:35.840><c> gives</c><00:05:36.590><c> that</c><00:05:36.830><c> output</c><00:05:37.340><c> shown</c><00:05:37.850><c> on</c><00:05:37.970><c> it</c>

00:05:38.820 --> 00:05:38.830 align:start position:0%
equals 1 gives that output shown on it
 

00:05:38.830 --> 00:05:43.000 align:start position:0%
equals 1 gives that output shown on it
now<00:05:39.830><c> so</c><00:05:40.130><c> far</c><00:05:40.340><c> I've</c><00:05:40.640><c> shown</c><00:05:40.700><c> max</c><00:05:41.480><c> pulling</c><00:05:42.080><c> on</c><00:05:42.290><c> a</c>

00:05:43.000 --> 00:05:43.010 align:start position:0%
now so far I've shown max pulling on a
 

00:05:43.010 --> 00:05:48.909 align:start position:0%
now so far I've shown max pulling on a
2d<00:05:43.669><c> input</c><00:05:44.600><c> if</c><00:05:45.050><c> you</c><00:05:45.410><c> have</c><00:05:45.680><c> a</c><00:05:46.060><c> 3d</c><00:05:47.060><c> input</c><00:05:47.630><c> then</c><00:05:48.590><c> the</c>

00:05:48.909 --> 00:05:48.919 align:start position:0%
2d input if you have a 3d input then the
 

00:05:48.919 --> 00:05:53.560 align:start position:0%
2d input if you have a 3d input then the
output<00:05:48.970><c> will</c><00:05:49.970><c> have</c><00:05:50.150><c> the</c><00:05:50.300><c> same</c><00:05:50.830><c> dimension</c><00:05:52.570><c> so</c>

00:05:53.560 --> 00:05:53.570 align:start position:0%
output will have the same dimension so
 

00:05:53.570 --> 00:05:57.130 align:start position:0%
output will have the same dimension so
for<00:05:53.750><c> example</c><00:05:54.169><c> if</c><00:05:54.380><c> you</c><00:05:54.530><c> have</c><00:05:54.740><c> 5</c><00:05:55.010><c> by</c><00:05:55.520><c> 5</c><00:05:55.730><c> by</c><00:05:56.000><c> 2</c><00:05:56.140><c> then</c>

00:05:57.130 --> 00:05:57.140 align:start position:0%
for example if you have 5 by 5 by 2 then
 

00:05:57.140 --> 00:06:01.450 align:start position:0%
for example if you have 5 by 5 by 2 then
the<00:05:57.260><c> upper</c><00:05:57.440><c> would</c><00:05:57.710><c> be</c><00:05:57.800><c> 3</c><00:05:57.980><c> by</c><00:05:58.130><c> 3</c><00:05:58.250><c> by</c><00:05:58.460><c> 2</c><00:05:58.520><c> and</c><00:06:00.460><c> the</c>

00:06:01.450 --> 00:06:01.460 align:start position:0%
the upper would be 3 by 3 by 2 and the
 

00:06:01.460 --> 00:06:03.730 align:start position:0%
the upper would be 3 by 3 by 2 and the
way<00:06:01.640><c> you</c><00:06:01.700><c> compute</c><00:06:02.330><c> max</c><00:06:02.570><c> pooling</c><00:06:02.810><c> is</c><00:06:03.260><c> you</c>

00:06:03.730 --> 00:06:03.740 align:start position:0%
way you compute max pooling is you
 

00:06:03.740 --> 00:06:05.290 align:start position:0%
way you compute max pooling is you
perform<00:06:04.190><c> the</c><00:06:04.310><c> computation</c><00:06:04.640><c> we</c><00:06:05.090><c> just</c>

00:06:05.290 --> 00:06:05.300 align:start position:0%
perform the computation we just
 

00:06:05.300 --> 00:06:06.850 align:start position:0%
perform the computation we just
described<00:06:05.720><c> on</c><00:06:05.960><c> each</c><00:06:06.260><c> of</c><00:06:06.440><c> the</c><00:06:06.560><c> channels</c>

00:06:06.850 --> 00:06:06.860 align:start position:0%
described on each of the channels
 

00:06:06.860 --> 00:06:09.880 align:start position:0%
described on each of the channels
independently<00:06:07.660><c> so</c><00:06:08.660><c> the</c><00:06:09.080><c> first</c><00:06:09.320><c> channel</c><00:06:09.560><c> which</c>

00:06:09.880 --> 00:06:09.890 align:start position:0%
independently so the first channel which
 

00:06:09.890 --> 00:06:11.830 align:start position:0%
independently so the first channel which
is<00:06:10.010><c> shown</c><00:06:10.190><c> here</c><00:06:10.220><c> on</c><00:06:10.550><c> top</c><00:06:10.820><c> is</c><00:06:11.210><c> still</c><00:06:11.510><c> the</c><00:06:11.600><c> same</c>

00:06:11.830 --> 00:06:11.840 align:start position:0%
is shown here on top is still the same
 

00:06:11.840 --> 00:06:13.750 align:start position:0%
is shown here on top is still the same
and<00:06:12.080><c> then</c><00:06:12.230><c> for</c><00:06:12.380><c> the</c><00:06:12.440><c> second</c><00:06:12.770><c> channel</c><00:06:13.010><c> I</c><00:06:13.340><c> guess</c>

00:06:13.750 --> 00:06:13.760 align:start position:0%
and then for the second channel I guess
 

00:06:13.760 --> 00:06:16.300 align:start position:0%
and then for the second channel I guess
this<00:06:13.940><c> one's</c><00:06:14.180><c> I</c><00:06:14.390><c> just</c><00:06:14.630><c> drew</c><00:06:14.810><c> at</c><00:06:14.930><c> the</c><00:06:15.020><c> bottom</c><00:06:15.440><c> you</c>

00:06:16.300 --> 00:06:16.310 align:start position:0%
this one's I just drew at the bottom you
 

00:06:16.310 --> 00:06:18.250 align:start position:0%
this one's I just drew at the bottom you
would<00:06:16.400><c> do</c><00:06:16.610><c> the</c><00:06:16.760><c> same</c><00:06:17.000><c> computation</c><00:06:17.390><c> on</c><00:06:18.020><c> that</c>

00:06:18.250 --> 00:06:18.260 align:start position:0%
would do the same computation on that
 

00:06:18.260 --> 00:06:21.460 align:start position:0%
would do the same computation on that
slice<00:06:18.740><c> of</c><00:06:19.130><c> this</c><00:06:19.400><c> volume</c><00:06:19.669><c> and</c><00:06:20.060><c> that</c><00:06:20.600><c> gives</c><00:06:21.260><c> you</c>

00:06:21.460 --> 00:06:21.470 align:start position:0%
slice of this volume and that gives you
 

00:06:21.470 --> 00:06:25.600 align:start position:0%
slice of this volume and that gives you
you<00:06:21.919><c> know</c><00:06:21.980><c> this</c><00:06:22.280><c> second</c><00:06:22.850><c> slice</c><00:06:23.150><c> and</c><00:06:24.610><c> more</c>

00:06:25.600 --> 00:06:25.610 align:start position:0%
you know this second slice and more
 

00:06:25.610 --> 00:06:28.390 align:start position:0%
you know this second slice and more
generally<00:06:26.120><c> if</c><00:06:26.240><c> this</c><00:06:26.419><c> was</c><00:06:26.600><c> 5</c><00:06:26.840><c> by</c><00:06:26.990><c> 5</c><00:06:27.169><c> by</c><00:06:27.530><c> some</c>

00:06:28.390 --> 00:06:28.400 align:start position:0%
generally if this was 5 by 5 by some
 

00:06:28.400 --> 00:06:30.280 align:start position:0%
generally if this was 5 by 5 by some
number<00:06:28.640><c> of</c><00:06:28.760><c> channels</c><00:06:29.180><c> the</c><00:06:29.419><c> output</c><00:06:29.780><c> would</c><00:06:29.930><c> be</c><00:06:30.080><c> 3</c>

00:06:30.280 --> 00:06:30.290 align:start position:0%
number of channels the output would be 3
 

00:06:30.290 --> 00:06:33.440 align:start position:0%
number of channels the output would be 3
by<00:06:30.470><c> 3</c><00:06:30.680><c> by</c><00:06:31.520><c> that</c><00:06:31.760><c> same</c><00:06:32.090><c> number</c><00:06:32.120><c> of</c><00:06:32.479><c> channels</c>

00:06:33.440 --> 00:06:33.450 align:start position:0%
by 3 by that same number of channels
 

00:06:33.450 --> 00:06:37.820 align:start position:0%
by 3 by that same number of channels
and<00:06:34.820><c> the</c><00:06:35.820><c> max</c><00:06:36.030><c> cooling</c><00:06:36.420><c> computation</c><00:06:37.350><c> is</c><00:06:37.800><c> done</c>

00:06:37.820 --> 00:06:37.830 align:start position:0%
and the max cooling computation is done
 

00:06:37.830 --> 00:06:41.120 align:start position:0%
and the max cooling computation is done
independently<00:06:38.430><c> on</c><00:06:39.180><c> each</c><00:06:39.810><c> of</c><00:06:40.050><c> these</c><00:06:40.170><c> n</c><00:06:40.530><c> C</c>

00:06:41.120 --> 00:06:41.130 align:start position:0%
independently on each of these n C
 

00:06:41.130 --> 00:06:46.970 align:start position:0%
independently on each of these n C
channels<00:06:44.180><c> so</c><00:06:45.180><c> that's</c><00:06:45.510><c> max</c><00:06:45.750><c> pooling</c><00:06:45.990><c> um</c><00:06:46.530><c> that's</c>

00:06:46.970 --> 00:06:46.980 align:start position:0%
channels so that's max pooling um that's
 

00:06:46.980 --> 00:06:48.800 align:start position:0%
channels so that's max pooling um that's
one<00:06:47.190><c> of</c><00:06:47.340><c> the</c><00:06:47.430><c> type</c><00:06:47.610><c> of</c><00:06:47.640><c> pooling</c><00:06:48.000><c> that</c><00:06:48.180><c> isn't</c>

00:06:48.800 --> 00:06:48.810 align:start position:0%
one of the type of pooling that isn't
 

00:06:48.810 --> 00:06:50.330 align:start position:0%
one of the type of pooling that isn't
used<00:06:48.990><c> very</c><00:06:49.140><c> often</c><00:06:49.740><c> that</c><00:06:49.920><c> I'll</c><00:06:50.040><c> mention</c>

00:06:50.330 --> 00:06:50.340 align:start position:0%
used very often that I'll mention
 

00:06:50.340 --> 00:06:53.240 align:start position:0%
used very often that I'll mention
briefly<00:06:50.720><c> which</c><00:06:51.720><c> is</c><00:06:51.840><c> average</c><00:06:52.110><c> pooling</c><00:06:52.620><c> so</c><00:06:53.100><c> it</c>

00:06:53.240 --> 00:06:53.250 align:start position:0%
briefly which is average pooling so it
 

00:06:53.250 --> 00:06:55.460 align:start position:0%
briefly which is average pooling so it
does<00:06:53.460><c> pretty</c><00:06:53.730><c> much</c><00:06:53.970><c> what</c><00:06:54.600><c> you'd</c><00:06:54.750><c> expect</c><00:06:54.870><c> which</c>

00:06:55.460 --> 00:06:55.470 align:start position:0%
does pretty much what you'd expect which
 

00:06:55.470 --> 00:06:59.150 align:start position:0%
does pretty much what you'd expect which
is<00:06:56.330><c> instead</c><00:06:57.330><c> of</c><00:06:57.390><c> taking</c><00:06:57.660><c> the</c><00:06:58.110><c> maxes</c><00:06:58.650><c> within</c>

00:06:59.150 --> 00:06:59.160 align:start position:0%
is instead of taking the maxes within
 

00:06:59.160 --> 00:07:02.510 align:start position:0%
is instead of taking the maxes within
each<00:06:59.310><c> filter</c><00:06:59.580><c> you</c><00:06:59.970><c> take</c><00:07:00.210><c> the</c><00:07:00.360><c> average</c><00:07:01.250><c> so</c><00:07:02.250><c> in</c>

00:07:02.510 --> 00:07:02.520 align:start position:0%
each filter you take the average so in
 

00:07:02.520 --> 00:07:04.160 align:start position:0%
each filter you take the average so in
this<00:07:02.640><c> example</c><00:07:02.790><c> the</c><00:07:03.390><c> average</c><00:07:03.570><c> of</c><00:07:03.990><c> the</c><00:07:04.140><c> numbers</c>

00:07:04.160 --> 00:07:04.170 align:start position:0%
this example the average of the numbers
 

00:07:04.170 --> 00:07:09.620 align:start position:0%
this example the average of the numbers
in<00:07:04.680><c> purple</c><00:07:05.100><c> is</c><00:07:05.780><c> 3.75</c><00:07:06.950><c> then</c><00:07:07.970><c> that's</c><00:07:08.970><c> one</c><00:07:09.330><c> point</c>

00:07:09.620 --> 00:07:09.630 align:start position:0%
in purple is 3.75 then that's one point
 

00:07:09.630 --> 00:07:14.060 align:start position:0%
in purple is 3.75 then that's one point
two<00:07:09.900><c> five</c><00:07:09.930><c> and</c><00:07:10.560><c> four</c><00:07:11.400><c> and</c><00:07:11.610><c> two</c><00:07:12.300><c> and</c><00:07:12.740><c> so</c><00:07:13.740><c> this</c><00:07:13.920><c> is</c>

00:07:14.060 --> 00:07:14.070 align:start position:0%
two five and four and two and so this is
 

00:07:14.070 --> 00:07:15.980 align:start position:0%
two five and four and two and so this is
average<00:07:14.430><c> pooling</c><00:07:14.730><c> with</c><00:07:15.000><c> hyper</c><00:07:15.240><c> parameters</c><00:07:15.810><c> f</c>

00:07:15.980 --> 00:07:15.990 align:start position:0%
average pooling with hyper parameters f
 

00:07:15.990 --> 00:07:18.560 align:start position:0%
average pooling with hyper parameters f
equals<00:07:16.560><c> to</c><00:07:16.800><c> s</c><00:07:17.310><c> equals</c><00:07:17.790><c> two</c><00:07:18.000><c> you</c><00:07:18.240><c> can</c><00:07:18.390><c> choose</c>

00:07:18.560 --> 00:07:18.570 align:start position:0%
equals to s equals two you can choose
 

00:07:18.570 --> 00:07:22.490 align:start position:0%
equals to s equals two you can choose
other<00:07:18.810><c> hyper</c><00:07:19.350><c> parameters</c><00:07:19.860><c> as</c><00:07:19.980><c> well</c><00:07:21.320><c> so</c><00:07:22.320><c> these</c>

00:07:22.490 --> 00:07:22.500 align:start position:0%
other hyper parameters as well so these
 

00:07:22.500 --> 00:07:24.950 align:start position:0%
other hyper parameters as well so these
days<00:07:22.710><c> max</c><00:07:23.010><c> pooling</c><00:07:23.280><c> is</c><00:07:23.730><c> used</c><00:07:24.030><c> much</c><00:07:24.270><c> more</c><00:07:24.480><c> often</c>

00:07:24.950 --> 00:07:24.960 align:start position:0%
days max pooling is used much more often
 

00:07:24.960 --> 00:07:28.310 align:start position:0%
days max pooling is used much more often
than<00:07:25.170><c> average</c><00:07:25.890><c> pooling</c><00:07:26.450><c> with</c><00:07:27.450><c> one</c><00:07:27.750><c> exception</c>

00:07:28.310 --> 00:07:28.320 align:start position:0%
than average pooling with one exception
 

00:07:28.320 --> 00:07:31.310 align:start position:0%
than average pooling with one exception
which<00:07:28.500><c> is</c><00:07:28.560><c> sometimes</c><00:07:29.810><c> very</c><00:07:30.810><c> deep</c><00:07:31.110><c> in</c><00:07:31.260><c> the</c>

00:07:31.310 --> 00:07:31.320 align:start position:0%
which is sometimes very deep in the
 

00:07:31.320 --> 00:07:32.960 align:start position:0%
which is sometimes very deep in the
neural<00:07:31.530><c> network</c><00:07:31.920><c> you</c><00:07:32.280><c> might</c><00:07:32.460><c> use</c><00:07:32.640><c> average</c>

00:07:32.960 --> 00:07:32.970 align:start position:0%
neural network you might use average
 

00:07:32.970 --> 00:07:35.210 align:start position:0%
neural network you might use average
pooling<00:07:33.390><c> to</c><00:07:34.110><c> collapse</c><00:07:34.680><c> your</c><00:07:34.800><c> representation</c>

00:07:35.210 --> 00:07:35.220 align:start position:0%
pooling to collapse your representation
 

00:07:35.220 --> 00:07:41.480 align:start position:0%
pooling to collapse your representation
from<00:07:35.940><c> say</c><00:07:36.600><c> 7</c><00:07:36.990><c> by</c><00:07:37.140><c> 7</c><00:07:37.370><c> by</c><00:07:38.960><c> 1000</c><00:07:39.960><c> and</c><00:07:40.170><c> average</c><00:07:41.130><c> over</c>

00:07:41.480 --> 00:07:41.490 align:start position:0%
from say 7 by 7 by 1000 and average over
 

00:07:41.490 --> 00:07:43.880 align:start position:0%
from say 7 by 7 by 1000 and average over
all<00:07:41.520><c> the</c><00:07:41.880><c> spatial</c><00:07:42.090><c> extents</c><00:07:42.690><c> to</c><00:07:42.720><c> get</c><00:07:43.020><c> 1</c><00:07:43.260><c> by</c><00:07:43.440><c> 1</c><00:07:43.710><c> by</c>

00:07:43.880 --> 00:07:43.890 align:start position:0%
all the spatial extents to get 1 by 1 by
 

00:07:43.890 --> 00:07:47.290 align:start position:0%
all the spatial extents to get 1 by 1 by
1000<00:07:44.640><c> we'll</c><00:07:45.630><c> see</c><00:07:45.840><c> an</c><00:07:45.930><c> example</c><00:07:46.170><c> of</c><00:07:46.380><c> this</c><00:07:46.500><c> later</c>

00:07:47.290 --> 00:07:47.300 align:start position:0%
1000 we'll see an example of this later
 

00:07:47.300 --> 00:07:50.750 align:start position:0%
1000 we'll see an example of this later
but<00:07:48.300><c> you</c><00:07:48.450><c> see</c><00:07:48.690><c> max</c><00:07:48.930><c> pooling</c><00:07:49.230><c> use</c><00:07:49.590><c> much</c><00:07:50.280><c> more</c><00:07:50.520><c> in</c>

00:07:50.750 --> 00:07:50.760 align:start position:0%
but you see max pooling use much more in
 

00:07:50.760 --> 00:07:53.590 align:start position:0%
but you see max pooling use much more in
the<00:07:50.850><c> neural</c><00:07:51.090><c> network</c><00:07:51.450><c> than</c><00:07:51.840><c> average</c><00:07:52.710><c> pooling</c>

00:07:53.590 --> 00:07:53.600 align:start position:0%
the neural network than average pooling
 

00:07:53.600 --> 00:07:57.650 align:start position:0%
the neural network than average pooling
so<00:07:54.600><c> just</c><00:07:55.020><c> to</c><00:07:55.110><c> summarize</c><00:07:55.850><c> the</c><00:07:56.850><c> hyper</c>

00:07:57.650 --> 00:07:57.660 align:start position:0%
so just to summarize the hyper
 

00:07:57.660 --> 00:08:00.650 align:start position:0%
so just to summarize the hyper
parameters<00:07:58.200><c> for</c><00:07:58.590><c> pulling</c><00:07:59.160><c> are</c><00:07:59.460><c> if</c><00:07:59.730><c> the</c><00:08:00.300><c> filter</c>

00:08:00.650 --> 00:08:00.660 align:start position:0%
parameters for pulling are if the filter
 

00:08:00.660 --> 00:08:04.160 align:start position:0%
parameters for pulling are if the filter
size<00:08:00.840><c> and</c><00:08:01.230><c> s</c><00:08:01.530><c> destryed</c><00:08:02.310><c> and</c><00:08:02.760><c> may</c><00:08:03.630><c> be</c><00:08:03.690><c> common</c>

00:08:04.160 --> 00:08:04.170 align:start position:0%
size and s destryed and may be common
 

00:08:04.170 --> 00:08:06.710 align:start position:0%
size and s destryed and may be common
choices<00:08:04.410><c> of</c><00:08:04.710><c> parameters</c><00:08:05.190><c> might</c><00:08:05.520><c> be</c><00:08:05.730><c> f</c><00:08:06.270><c> equals</c>

00:08:06.710 --> 00:08:06.720 align:start position:0%
choices of parameters might be f equals
 

00:08:06.720 --> 00:08:09.260 align:start position:0%
choices of parameters might be f equals
to<00:08:06.990><c> s</c><00:08:07.230><c> equals</c><00:08:07.680><c> 2</c><00:08:07.890><c> this</c><00:08:08.160><c> is</c><00:08:08.340><c> used</c><00:08:08.580><c> quite</c><00:08:08.820><c> often</c>

00:08:09.260 --> 00:08:09.270 align:start position:0%
to s equals 2 this is used quite often
 

00:08:09.270 --> 00:08:11.930 align:start position:0%
to s equals 2 this is used quite often
and<00:08:09.750><c> this</c><00:08:10.050><c> has</c><00:08:10.260><c> the</c><00:08:10.470><c> effect</c><00:08:10.770><c> of</c><00:08:11.250><c> roughly</c>

00:08:11.930 --> 00:08:11.940 align:start position:0%
and this has the effect of roughly
 

00:08:11.940 --> 00:08:14.030 align:start position:0%
and this has the effect of roughly
shrinking<00:08:12.510><c> the</c><00:08:12.690><c> height</c><00:08:12.900><c> and</c><00:08:13.140><c> width</c><00:08:13.380><c> by</c><00:08:14.010><c> a</c>

00:08:14.030 --> 00:08:14.040 align:start position:0%
shrinking the height and width by a
 

00:08:14.040 --> 00:08:17.180 align:start position:0%
shrinking the height and width by a
factor<00:08:14.790><c> of</c><00:08:14.850><c> about</c><00:08:14.970><c> 2</c><00:08:15.390><c> and</c><00:08:15.690><c> the</c><00:08:16.650><c> common</c><00:08:17.040><c> choice</c>

00:08:17.180 --> 00:08:17.190 align:start position:0%
factor of about 2 and the common choice
 

00:08:17.190 --> 00:08:19.940 align:start position:0%
factor of about 2 and the common choice
of<00:08:17.340><c> parameters</c><00:08:17.730><c> might</c><00:08:18.300><c> be</c><00:08:18.420><c> f</c><00:08:18.600><c> equals</c><00:08:19.020><c> to</c><00:08:19.320><c> s</c>

00:08:19.940 --> 00:08:19.950 align:start position:0%
of parameters might be f equals to s
 

00:08:19.950 --> 00:08:22.610 align:start position:0%
of parameters might be f equals to s
equals<00:08:20.430><c> 2</c><00:08:20.700><c> and</c><00:08:20.970><c> this</c><00:08:21.420><c> has</c><00:08:21.840><c> the</c><00:08:22.260><c> effect</c><00:08:22.290><c> of</c>

00:08:22.610 --> 00:08:22.620 align:start position:0%
equals 2 and this has the effect of
 

00:08:22.620 --> 00:08:25.310 align:start position:0%
equals 2 and this has the effect of
shrinking<00:08:22.880><c> the</c><00:08:23.880><c> height</c><00:08:24.480><c> and</c><00:08:24.720><c> width</c><00:08:24.930><c> of</c><00:08:25.170><c> the</c>

00:08:25.310 --> 00:08:25.320 align:start position:0%
shrinking the height and width of the
 

00:08:25.320 --> 00:08:28.700 align:start position:0%
shrinking the height and width of the
representation<00:08:26.010><c> by</c><00:08:26.190><c> a</c><00:08:26.220><c> factor</c><00:08:26.640><c> of</c><00:08:26.670><c> 2</c><00:08:27.710><c> have</c>

00:08:28.700 --> 00:08:28.710 align:start position:0%
representation by a factor of 2 have
 

00:08:28.710 --> 00:08:31.430 align:start position:0%
representation by a factor of 2 have
also<00:08:28.860><c> seen</c><00:08:29.190><c> that</c><00:08:29.250><c> equals</c><00:08:29.820><c> 3</c><00:08:30.030><c> s</c><00:08:30.420><c> equals</c><00:08:30.810><c> 2</c><00:08:31.110><c> used</c>

00:08:31.430 --> 00:08:31.440 align:start position:0%
also seen that equals 3 s equals 2 used
 

00:08:31.440 --> 00:08:34.730 align:start position:0%
also seen that equals 3 s equals 2 used
and<00:08:32.090><c> then</c><00:08:33.090><c> the</c><00:08:33.240><c> other</c><00:08:33.360><c> hyper</c><00:08:33.930><c> parameter</c><00:08:34.470><c> is</c>

00:08:34.730 --> 00:08:34.740 align:start position:0%
and then the other hyper parameter is
 

00:08:34.740 --> 00:08:37.010 align:start position:0%
and then the other hyper parameter is
just<00:08:34.770><c> you</c><00:08:35.280><c> know</c><00:08:35.400><c> the</c><00:08:35.550><c> binary</c><00:08:36.090><c> bit</c><00:08:36.360><c> that</c><00:08:36.750><c> says</c>

00:08:37.010 --> 00:08:37.020 align:start position:0%
just you know the binary bit that says
 

00:08:37.020 --> 00:08:39.260 align:start position:0%
just you know the binary bit that says
are<00:08:37.260><c> you</c><00:08:37.440><c> using</c><00:08:37.650><c> max</c><00:08:37.979><c> pooling</c><00:08:38.220><c> or</c><00:08:38.820><c> are</c><00:08:39.150><c> you</c>

00:08:39.260 --> 00:08:39.270 align:start position:0%
are you using max pooling or are you
 

00:08:39.270 --> 00:08:42.050 align:start position:0%
are you using max pooling or are you
using<00:08:39.510><c> average</c><00:08:40.050><c> pooling</c><00:08:40.380><c> if</c><00:08:41.190><c> you</c><00:08:41.460><c> want</c><00:08:41.760><c> you</c>

00:08:42.050 --> 00:08:42.060 align:start position:0%
using average pooling if you want you
 

00:08:42.060 --> 00:08:44.340 align:start position:0%
using average pooling if you want you
can<00:08:42.270><c> add</c><00:08:42.479><c> an</c><00:08:42.690><c> extra</c><00:08:43.140><c> hyper</c><00:08:43.530><c> parameter</c>

00:08:44.340 --> 00:08:44.350 align:start position:0%
can add an extra hyper parameter
 

00:08:44.350 --> 00:08:47.340 align:start position:0%
can add an extra hyper parameter
for<00:08:45.010><c> the</c><00:08:45.130><c> padding</c><00:08:45.670><c> although</c><00:08:46.480><c> this</c><00:08:46.810><c> is</c><00:08:47.020><c> very</c>

00:08:47.340 --> 00:08:47.350 align:start position:0%
for the padding although this is very
 

00:08:47.350 --> 00:08:49.410 align:start position:0%
for the padding although this is very
very<00:08:47.590><c> rarely</c><00:08:47.920><c> used</c><00:08:48.340><c> when</c><00:08:48.640><c> you</c><00:08:48.790><c> do</c><00:08:48.940><c> max</c><00:08:49.180><c> pooling</c>

00:08:49.410 --> 00:08:49.420 align:start position:0%
very rarely used when you do max pooling
 

00:08:49.420 --> 00:08:51.480 align:start position:0%
very rarely used when you do max pooling
usually<00:08:50.050><c> you</c><00:08:50.200><c> do</c><00:08:50.380><c> not</c><00:08:50.560><c> use</c><00:08:50.830><c> any</c><00:08:51.040><c> padding</c>

00:08:51.480 --> 00:08:51.490 align:start position:0%
usually you do not use any padding
 

00:08:51.490 --> 00:08:53.430 align:start position:0%
usually you do not use any padding
although<00:08:51.970><c> there</c><00:08:52.180><c> is</c><00:08:52.270><c> one</c><00:08:52.410><c> exception</c><00:08:53.410><c> that</c>

00:08:53.430 --> 00:08:53.440 align:start position:0%
although there is one exception that
 

00:08:53.440 --> 00:08:55.590 align:start position:0%
although there is one exception that
we'll<00:08:53.740><c> see</c><00:08:53.860><c> next</c><00:08:54.100><c> week</c><00:08:54.280><c> as</c><00:08:54.430><c> well</c><00:08:54.670><c> but</c><00:08:55.270><c> for</c><00:08:55.480><c> the</c>

00:08:55.590 --> 00:08:55.600 align:start position:0%
we'll see next week as well but for the
 

00:08:55.600 --> 00:08:58.230 align:start position:0%
we'll see next week as well but for the
most<00:08:55.750><c> part</c><00:08:55.900><c> max</c><00:08:56.470><c> pooling</c><00:08:56.820><c> usually</c><00:08:57.820><c> does</c><00:08:58.030><c> not</c>

00:08:58.230 --> 00:08:58.240 align:start position:0%
most part max pooling usually does not
 

00:08:58.240 --> 00:09:00.870 align:start position:0%
most part max pooling usually does not
use<00:08:58.630><c> any</c><00:08:58.930><c> padding</c><00:08:59.350><c> so</c><00:08:59.800><c> the</c><00:09:00.160><c> most</c><00:09:00.370><c> common</c><00:09:00.730><c> value</c>

00:09:00.870 --> 00:09:00.880 align:start position:0%
use any padding so the most common value
 

00:09:00.880 --> 00:09:06.690 align:start position:0%
use any padding so the most common value
of<00:09:01.180><c> P</c><00:09:01.590><c> by</c><00:09:02.590><c> far</c><00:09:02.890><c> is</c><00:09:03.130><c> P</c><00:09:03.430><c> equals</c><00:09:03.730><c> zero</c><00:09:04.860><c> and</c><00:09:05.860><c> the</c>

00:09:06.690 --> 00:09:06.700 align:start position:0%
of P by far is P equals zero and the
 

00:09:06.700 --> 00:09:08.880 align:start position:0%
of P by far is P equals zero and the
input<00:09:07.060><c> of</c><00:09:07.180><c> max</c><00:09:07.480><c> pooling</c><00:09:07.750><c> is</c><00:09:08.200><c> that</c><00:09:08.500><c> you</c><00:09:08.650><c> input</c>

00:09:08.880 --> 00:09:08.890 align:start position:0%
input of max pooling is that you input
 

00:09:08.890 --> 00:09:14.580 align:start position:0%
input of max pooling is that you input
the<00:09:09.310><c> volume</c><00:09:10.300><c> of</c><00:09:10.570><c> size</c><00:09:11.790><c> that</c><00:09:12.790><c> NH</c><00:09:13.450><c> by</c><00:09:13.630><c> NW</c><00:09:14.110><c> by</c><00:09:14.200><c> NC</c>

00:09:14.580 --> 00:09:14.590 align:start position:0%
the volume of size that NH by NW by NC
 

00:09:14.590 --> 00:09:18.440 align:start position:0%
the volume of size that NH by NW by NC
and<00:09:14.830><c> it</c><00:09:15.760><c> would</c><00:09:15.940><c> output</c><00:09:16.420><c> a</c><00:09:16.680><c> volume</c><00:09:17.680><c> of</c><00:09:17.950><c> size</c>

00:09:18.440 --> 00:09:18.450 align:start position:0%
and it would output a volume of size
 

00:09:18.450 --> 00:09:22.260 align:start position:0%
and it would output a volume of size
given<00:09:19.450><c> by</c><00:09:19.690><c> this</c><00:09:20.100><c> right</c><00:09:21.100><c> so</c><00:09:21.490><c> assuming</c><00:09:21.910><c> there's</c>

00:09:22.260 --> 00:09:22.270 align:start position:0%
given by this right so assuming there's
 

00:09:22.270 --> 00:09:27.750 align:start position:0%
given by this right so assuming there's
no<00:09:22.420><c> padding</c><00:09:23.160><c> by</c><00:09:24.160><c> and</c><00:09:25.740><c> some</c><00:09:26.740><c> of</c><00:09:26.830><c> you</c><00:09:26.920><c> minus</c><00:09:27.550><c> F</c>

00:09:27.750 --> 00:09:27.760 align:start position:0%
no padding by and some of you minus F
 

00:09:27.760 --> 00:09:32.400 align:start position:0%
no padding by and some of you minus F
over<00:09:28.120><c> s</c><00:09:28.270><c> is</c><00:09:28.960><c> 1/4</c><00:09:29.860><c> by</c><00:09:30.820><c> and</c><00:09:31.120><c> C</c><00:09:31.750><c> and</c><00:09:31.990><c> so</c><00:09:32.170><c> the</c><00:09:32.200><c> number</c>

00:09:32.400 --> 00:09:32.410 align:start position:0%
over s is 1/4 by and C and so the number
 

00:09:32.410 --> 00:09:34.410 align:start position:0%
over s is 1/4 by and C and so the number
of<00:09:32.770><c> input</c><00:09:33.100><c> channels</c><00:09:33.460><c> is</c><00:09:33.580><c> equal</c><00:09:33.910><c> to</c><00:09:34.060><c> the</c><00:09:34.150><c> number</c>

00:09:34.410 --> 00:09:34.420 align:start position:0%
of input channels is equal to the number
 

00:09:34.420 --> 00:09:36.750 align:start position:0%
of input channels is equal to the number
of<00:09:34.450><c> alpha</c><00:09:34.870><c> channels</c><00:09:35.320><c> because</c><00:09:35.760><c> pooling</c>

00:09:36.750 --> 00:09:36.760 align:start position:0%
of alpha channels because pooling
 

00:09:36.760 --> 00:09:39.000 align:start position:0%
of alpha channels because pooling
applies<00:09:37.240><c> to</c><00:09:37.510><c> each</c><00:09:37.720><c> of</c><00:09:37.990><c> your</c><00:09:38.200><c> channels</c>

00:09:39.000 --> 00:09:39.010 align:start position:0%
applies to each of your channels
 

00:09:39.010 --> 00:09:42.510 align:start position:0%
applies to each of your channels
independently<00:09:40.500><c> one</c><00:09:41.500><c> thing</c><00:09:41.890><c> to</c><00:09:42.250><c> note</c><00:09:42.490><c> about</c>

00:09:42.510 --> 00:09:42.520 align:start position:0%
independently one thing to note about
 

00:09:42.520 --> 00:09:44.780 align:start position:0%
independently one thing to note about
pooling<00:09:43.120><c> is</c><00:09:43.480><c> that</c><00:09:43.690><c> there</c><00:09:43.870><c> are</c><00:09:44.020><c> no</c><00:09:44.230><c> parameters</c>

00:09:44.780 --> 00:09:44.790 align:start position:0%
pooling is that there are no parameters
 

00:09:44.790 --> 00:09:49.230 align:start position:0%
pooling is that there are no parameters
to<00:09:45.790><c> learn</c><00:09:46.170><c> and</c><00:09:47.170><c> so</c><00:09:47.470><c> when</c><00:09:48.100><c> we</c><00:09:48.310><c> when</c><00:09:49.210><c> you</c>

00:09:49.230 --> 00:09:49.240 align:start position:0%
to learn and so when we when you
 

00:09:49.240 --> 00:09:51.540 align:start position:0%
to learn and so when we when you
implement<00:09:49.540><c> back</c><00:09:49.900><c> prop</c><00:09:50.200><c> you</c><00:09:50.680><c> find</c><00:09:51.010><c> that</c><00:09:51.220><c> there</c>

00:09:51.540 --> 00:09:51.550 align:start position:0%
implement back prop you find that there
 

00:09:51.550 --> 00:09:53.580 align:start position:0%
implement back prop you find that there
are<00:09:51.580><c> no</c><00:09:51.880><c> parameters</c><00:09:52.150><c> that</c><00:09:52.810><c> backdrop</c><00:09:53.260><c> will</c>

00:09:53.580 --> 00:09:53.590 align:start position:0%
are no parameters that backdrop will
 

00:09:53.590 --> 00:09:55.650 align:start position:0%
are no parameters that backdrop will
adapt<00:09:53.980><c> through</c><00:09:54.610><c> max</c><00:09:54.790><c> pooling</c><00:09:55.090><c> instead</c>

00:09:55.650 --> 00:09:55.660 align:start position:0%
adapt through max pooling instead
 

00:09:55.660 --> 00:09:57.570 align:start position:0%
adapt through max pooling instead
they're<00:09:55.870><c> just</c><00:09:55.900><c> these</c><00:09:56.260><c> hyper</c><00:09:56.560><c> parameters</c><00:09:57.130><c> that</c>

00:09:57.570 --> 00:09:57.580 align:start position:0%
they're just these hyper parameters that
 

00:09:57.580 --> 00:09:59.730 align:start position:0%
they're just these hyper parameters that
you<00:09:57.730><c> set</c><00:09:57.760><c> once</c><00:09:58.240><c> maybe</c><00:09:58.540><c> set</c><00:09:58.870><c> once</c><00:09:59.080><c> by</c><00:09:59.260><c> hand</c><00:09:59.560><c> or</c>

00:09:59.730 --> 00:09:59.740 align:start position:0%
you set once maybe set once by hand or
 

00:09:59.740 --> 00:10:01.830 align:start position:0%
you set once maybe set once by hand or
set<00:09:59.920><c> using</c><00:10:00.220><c> cross-validation</c><00:10:00.460><c> and</c><00:10:01.300><c> then</c>

00:10:01.830 --> 00:10:01.840 align:start position:0%
set using cross-validation and then
 

00:10:01.840 --> 00:10:03.600 align:start position:0%
set using cross-validation and then
beyond<00:10:02.170><c> that</c><00:10:02.290><c> you</c><00:10:02.650><c> know</c><00:10:02.890><c> you're</c><00:10:03.130><c> done</c><00:10:03.370><c> then</c>

00:10:03.600 --> 00:10:03.610 align:start position:0%
beyond that you know you're done then
 

00:10:03.610 --> 00:10:05.880 align:start position:0%
beyond that you know you're done then
it's<00:10:03.880><c> just</c><00:10:04.030><c> a</c><00:10:04.180><c> fixed</c><00:10:04.510><c> function</c><00:10:04.660><c> that</c><00:10:05.500><c> the</c>

00:10:05.880 --> 00:10:05.890 align:start position:0%
it's just a fixed function that the
 

00:10:05.890 --> 00:10:07.470 align:start position:0%
it's just a fixed function that the
neural<00:10:06.220><c> network</c><00:10:06.520><c> computes</c><00:10:07.000><c> in</c><00:10:07.120><c> one</c><00:10:07.270><c> of</c><00:10:07.390><c> the</c>

00:10:07.470 --> 00:10:07.480 align:start position:0%
neural network computes in one of the
 

00:10:07.480 --> 00:10:09.600 align:start position:0%
neural network computes in one of the
layers<00:10:07.690><c> and</c><00:10:08.020><c> there</c><00:10:08.650><c> is</c><00:10:08.770><c> actually</c><00:10:09.100><c> nothing</c><00:10:09.250><c> to</c>

00:10:09.600 --> 00:10:09.610 align:start position:0%
layers and there is actually nothing to
 

00:10:09.610 --> 00:10:12.630 align:start position:0%
layers and there is actually nothing to
learn<00:10:09.790><c> it's</c><00:10:10.030><c> just</c><00:10:10.180><c> a</c><00:10:10.270><c> fixed</c><00:10:10.600><c> function</c><00:10:11.640><c> so</c>

00:10:12.630 --> 00:10:12.640 align:start position:0%
learn it's just a fixed function so
 

00:10:12.640 --> 00:10:16.680 align:start position:0%
learn it's just a fixed function so
that's<00:10:12.940><c> it</c><00:10:13.210><c> for</c><00:10:13.390><c> pooling</c><00:10:13.930><c> in</c><00:10:14.170><c> D</c><00:10:14.860><c> so</c><00:10:15.450><c> that's</c><00:10:16.450><c> if</c>

00:10:16.680 --> 00:10:16.690 align:start position:0%
that's it for pooling in D so that's if
 

00:10:16.690 --> 00:10:18.510 align:start position:0%
that's it for pooling in D so that's if
a<00:10:16.780><c> pooling</c><00:10:17.110><c> you</c><00:10:17.500><c> now</c><00:10:17.650><c> know</c><00:10:17.860><c> how</c><00:10:17.890><c> to</c><00:10:18.190><c> build</c>

00:10:18.510 --> 00:10:18.520 align:start position:0%
a pooling you now know how to build
 

00:10:18.520 --> 00:10:20.580 align:start position:0%
a pooling you now know how to build
convolutional<00:10:19.210><c> layers</c><00:10:19.450><c> and</c><00:10:19.750><c> pooling</c><00:10:20.350><c> layers</c>

00:10:20.580 --> 00:10:20.590 align:start position:0%
convolutional layers and pooling layers
 

00:10:20.590 --> 00:10:22.710 align:start position:0%
convolutional layers and pooling layers
in<00:10:20.860><c> the</c><00:10:21.370><c> next</c><00:10:21.670><c> video</c><00:10:21.940><c> let's</c><00:10:22.270><c> see</c><00:10:22.450><c> a</c><00:10:22.480><c> more</c>

00:10:22.710 --> 00:10:22.720 align:start position:0%
in the next video let's see a more
 

00:10:22.720 --> 00:10:25.350 align:start position:0%
in the next video let's see a more
complex<00:10:23.140><c> example</c><00:10:23.350><c> of</c><00:10:23.980><c> a</c><00:10:24.100><c> confident</c><00:10:24.640><c> one</c><00:10:25.150><c> that</c>

00:10:25.350 --> 00:10:25.360 align:start position:0%
complex example of a confident one that
 

00:10:25.360 --> 00:10:27.240 align:start position:0%
complex example of a confident one that
will<00:10:25.510><c> also</c><00:10:25.660><c> allow</c><00:10:26.080><c> us</c><00:10:26.110><c> to</c><00:10:26.350><c> introduce</c><00:10:26.530><c> fully</c>

00:10:27.240 --> 00:10:27.250 align:start position:0%
will also allow us to introduce fully
 

00:10:27.250 --> 00:10:29.970 align:start position:0%
will also allow us to introduce fully
connected<00:10:27.700><c> layers</c>

