WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.984
[MUSIC PLAYING]

00:00:07.480 --> 00:00:08.992
FERGUS HURLEY: Hey, everyone.

00:00:08.992 --> 00:00:10.450
Thanks very much
for joining today.

00:00:10.450 --> 00:00:12.658
My name is Fergus Hurley,
and I'm the product manager

00:00:12.658 --> 00:00:13.470
for Android Vitals.

00:00:13.470 --> 00:00:15.180
I'm really excited
to talk to you today

00:00:15.180 --> 00:00:19.245
about the past, present, and
future of Android Vitals.

00:00:19.245 --> 00:00:21.416
To start off, what
is Android Vitals?

00:00:21.416 --> 00:00:23.540
I'm sure a lot of you guys
are aware of it already,

00:00:23.540 --> 00:00:26.090
but just to make
sure, Android Vitals

00:00:26.090 --> 00:00:27.800
is Google's initiative
to help improve

00:00:27.800 --> 00:00:30.399
the stability and performance
of Android devices.

00:00:30.399 --> 00:00:31.940
We're doing a lot
of different things

00:00:31.940 --> 00:00:33.140
to be able to improve this.

00:00:33.140 --> 00:00:35.630
One big part of it is
within the Play Console,

00:00:35.630 --> 00:00:38.510
we now have a section
called Android Vitals.

00:00:38.510 --> 00:00:41.750
And that's where we report
to you different performance

00:00:41.750 --> 00:00:45.220
metrics we're going
to cover in this talk.

00:00:45.220 --> 00:00:47.290
"How do we actually
power this product?"

00:00:47.290 --> 00:00:49.510
is an interesting question
to start off with.

00:00:49.510 --> 00:00:51.340
Well, hundreds of
millions of users

00:00:51.340 --> 00:00:54.100
have opted into sharing their
device usage and diagnostics

00:00:54.100 --> 00:00:57.530
data with Google and
you, our partners.

00:00:57.530 --> 00:01:01.170
And so we share that data
in a privacy-compliant way

00:01:01.170 --> 00:01:04.030
within the product.

00:01:04.030 --> 00:01:06.370
I'm going to start by going
through some lessons we've

00:01:06.370 --> 00:01:09.160
learned over the last 18 months
since we launched Vitals at I/O

00:01:09.160 --> 00:01:12.430
last year from top
developers out there that

00:01:12.430 --> 00:01:16.060
are big and small, that have
actually used Android Vitals

00:01:16.060 --> 00:01:20.514
and got a lot of
success from using it.

00:01:20.514 --> 00:01:21.560
So hands up here.

00:01:21.560 --> 00:01:23.782
Who wants less one star ratings?

00:01:23.782 --> 00:01:25.240
If you don't have
your hand up, you

00:01:25.240 --> 00:01:28.830
might be at the wrong
conference, unfortunately.

00:01:28.830 --> 00:01:31.220
But most people
want to avoid them.

00:01:31.220 --> 00:01:34.510
And what we found when we
looked at the review corpus

00:01:34.510 --> 00:01:37.240
on Google Play, which
is pretty large,

00:01:37.240 --> 00:01:41.200
is that 40% of all
one star reviews

00:01:41.200 --> 00:01:42.850
where we extract a
topic are talking

00:01:42.850 --> 00:01:44.740
about stability and bugs.

00:01:44.740 --> 00:01:46.720
And over the past
year, the percentage

00:01:46.720 --> 00:01:49.120
of users talking about stability
and bugs in the reviews

00:01:49.120 --> 00:01:52.530
has gone down by 18%,
which is pretty amazing.

00:01:52.530 --> 00:01:54.070
So we're going to
talk about some

00:01:54.070 --> 00:01:55.690
of the developers
who have actually

00:01:55.690 --> 00:01:57.403
contributed to this reduction.

00:02:00.301 --> 00:02:03.040
The "Merge Dragons" team, which
is behind a very popular Zynga

00:02:03.040 --> 00:02:05.614
game, they used
Android Vitals to be

00:02:05.614 --> 00:02:07.720
able to pinpoint where
specifically there

00:02:07.720 --> 00:02:09.529
was an issue with
their application.

00:02:09.529 --> 00:02:12.070
And this resulted in them being
able to reduce their one star

00:02:12.070 --> 00:02:13.750
reviews by 50%.

00:02:17.075 --> 00:02:20.760
The very popular Reddit
app used Android Vitals

00:02:20.760 --> 00:02:24.390
to be able to reduce
their crash rate by 75%.

00:02:24.390 --> 00:02:26.160
And they did this
because they were

00:02:26.160 --> 00:02:29.220
able to see the category
benchmarks in the Play Console

00:02:29.220 --> 00:02:30.360
Android Vitals section.

00:02:30.360 --> 00:02:33.430
And that was able to make the
case with their leadership

00:02:33.430 --> 00:02:36.250
that they had room
for improvement.

00:02:36.250 --> 00:02:37.860
And then when they
actually improved

00:02:37.860 --> 00:02:40.890
their metric, they were able
to show leadership, hey,

00:02:40.890 --> 00:02:42.744
we've actually done
what we set out to do.

00:02:42.744 --> 00:02:44.910
And now we're one of the
most stable apps out there.

00:02:48.221 --> 00:02:51.750
The LOVOO team signed up
for the Anomaly Alert emails

00:02:51.750 --> 00:02:52.790
in the Play Console.

00:02:52.790 --> 00:02:54.900
And as a result,
they got notified

00:02:54.900 --> 00:02:58.410
as soon as there was
an issue with the ANR

00:02:58.410 --> 00:02:59.750
rate of their application.

00:02:59.750 --> 00:03:02.181
They had a huge spike
caused by an SDK

00:03:02.181 --> 00:03:03.930
that they were using
in their application.

00:03:03.930 --> 00:03:06.510
And even though you might be
building an amazing product

00:03:06.510 --> 00:03:08.319
yourself and think
that it's very stable,

00:03:08.319 --> 00:03:10.110
I'm sure you've used
third party libraries.

00:03:10.110 --> 00:03:11.520
And some of those
could introduce issues

00:03:11.520 --> 00:03:11.985
in your application.

00:03:11.985 --> 00:03:13.776
So you want to become
aware of these things

00:03:13.776 --> 00:03:14.760
as soon as possible.

00:03:14.760 --> 00:03:17.010
And the Anomaly Alert emails
help you with that a lot.

00:03:17.010 --> 00:03:20.520
They quickly disabled the ads
SDK that was causing the issue.

00:03:20.520 --> 00:03:23.880
And then they shipped a new fix
that actually reduced their ANR

00:03:23.880 --> 00:03:29.468
rate back down to 0.25%.

00:03:29.468 --> 00:03:32.170
The ABA English team
is a pretty small team.

00:03:32.170 --> 00:03:34.460
And they don't have
infinite resources to be

00:03:34.460 --> 00:03:35.710
able to spend on performance.

00:03:35.710 --> 00:03:37.960
And we don't think that you
should spend all your time

00:03:37.960 --> 00:03:39.600
focusing on performance either.

00:03:39.600 --> 00:03:42.490
But we realize that you have to
keep an eye on performance all

00:03:42.490 --> 00:03:45.190
the time, and that it
might make sense for you

00:03:45.190 --> 00:03:47.140
to take a quarter to
actually just focus

00:03:47.140 --> 00:03:49.890
on improving the performance
of your application

00:03:49.890 --> 00:03:51.550
and hold off on new features.

00:03:51.550 --> 00:03:54.420
Maybe do that as part
of your 2019 Q1 planning

00:03:54.420 --> 00:03:59.190
or do a spring clean
for Q2 of next year.

00:03:59.190 --> 00:04:00.610
The ABA English team did this.

00:04:00.610 --> 00:04:03.160
And they spent one quarter,
focused effort, and reduced

00:04:03.160 --> 00:04:09.660
their ANR rate by 97% as
a result. This and a bunch

00:04:09.660 --> 00:04:12.510
of other things resulted in them
being to increase their star

00:04:12.510 --> 00:04:14.700
rating to 4.6 stars.

00:04:14.700 --> 00:04:16.709
Now, obviously, you can't
get a 4.6 star rating

00:04:16.709 --> 00:04:18.390
but just focusing
on vitals, but we

00:04:18.390 --> 00:04:20.610
guarantee that you'll never
get such a high rating

00:04:20.610 --> 00:04:21.776
if you have terrible vitals.

00:04:24.770 --> 00:04:27.010
So I've gone through some
examples of individual app

00:04:27.010 --> 00:04:28.810
developers who are using vitals.

00:04:28.810 --> 00:04:32.470
What we've actually also done
is we looked at of the top 1,000

00:04:32.470 --> 00:04:36.670
apps on Play, we looked at
their engagement in the Vitals

00:04:36.670 --> 00:04:39.040
section since I/O.
What we found is

00:04:39.040 --> 00:04:42.310
that the developers who engaged
most in the Vitals section,

00:04:42.310 --> 00:04:47.350
like the top 10%, they reduced
their crash rate by 50%

00:04:47.350 --> 00:04:48.766
over that time period.

00:04:48.766 --> 00:04:50.640
And this isn't just good
for those developers

00:04:50.640 --> 00:04:51.180
and those apps.

00:04:51.180 --> 00:04:52.846
This is really good
for Android N users.

00:04:52.846 --> 00:04:56.294
This resulted in 3 billion
more stable installs

00:04:56.294 --> 00:04:56.960
on the platform.

00:05:02.042 --> 00:05:04.140
We've talked about stability.

00:05:04.140 --> 00:05:06.170
Another major area
that users talk

00:05:06.170 --> 00:05:09.680
about when they leave
one star reviews

00:05:09.680 --> 00:05:12.100
is resource usage issues.

00:05:12.100 --> 00:05:16.600
And this is battery,
network, memory, et cetera.

00:05:16.600 --> 00:05:19.859
And we have many metrics in the
Vitals section around battery.

00:05:19.859 --> 00:05:21.650
And some of these
metrics are interrelated.

00:05:21.650 --> 00:05:24.890
So one of the metrics we have
is excessive network usage

00:05:24.890 --> 00:05:25.970
in the background.

00:05:25.970 --> 00:05:27.710
And so this is bad
for users in two ways.

00:05:27.710 --> 00:05:30.650
It's consuming their data plan,
and it's wasting their battery

00:05:30.650 --> 00:05:32.190
in the background.

00:05:32.190 --> 00:05:34.580
We have two metrics
that we especially

00:05:34.580 --> 00:05:35.900
focus on in this area.

00:05:35.900 --> 00:05:37.490
They are wakeups and wakelocks.

00:05:37.490 --> 00:05:39.980
I'm going to come
back to them in a bit.

00:05:39.980 --> 00:05:42.700
But the Jaumo team focused
on their wakeups rate.

00:05:42.700 --> 00:05:44.920
And what they say is
that they wouldn't

00:05:44.920 --> 00:05:47.630
have even noticed or been able
to fix their excessive wakeups

00:05:47.630 --> 00:05:51.070
issue without using Android
Vitals, because we have

00:05:51.070 --> 00:05:53.170
a lot of insights into
your battery usage

00:05:53.170 --> 00:05:55.378
that there are very few
other tools that can actually

00:05:55.378 --> 00:05:55.980
help you with.

00:05:55.980 --> 00:05:57.730
This resulted in them
being able to reduce

00:05:57.730 --> 00:05:59.350
their excessive
wakeup rate by 70%.

00:06:03.820 --> 00:06:04.320
Great.

00:06:04.320 --> 00:06:07.170
Now we're going to jump over to
how you can actually increase

00:06:07.170 --> 00:06:09.390
your five star reviews.

00:06:09.390 --> 00:06:12.030
And what we find is
that over the past year,

00:06:12.030 --> 00:06:16.980
we've had more users mentioning
speed, design, and usability,

00:06:16.980 --> 00:06:21.090
which is what 70% of
the five star reviews

00:06:21.090 --> 00:06:23.420
talk about when we are able
to find topics in them.

00:06:28.170 --> 00:06:32.560
The MercadoLibre team, which is
one of the largest e-commerce

00:06:32.560 --> 00:06:33.640
apps in the world--

00:06:33.640 --> 00:06:35.720
it's number one
in Latin America--

00:06:35.720 --> 00:06:38.230
they were building a new
feature into their application.

00:06:38.230 --> 00:06:41.560
It required them to ask
for a specific permission.

00:06:41.560 --> 00:06:44.740
This resulted in a
bad user experience

00:06:44.740 --> 00:06:48.160
where users actually
had very high denial

00:06:48.160 --> 00:06:49.530
rate of this permission.

00:06:49.530 --> 00:06:51.700
There were able to see
that in Android Vitals,

00:06:51.700 --> 00:06:55.570
and then be able to redesign
that feature to give users

00:06:55.570 --> 00:06:59.470
an explanation of why they
needed it, that permission,

00:06:59.470 --> 00:07:02.320
and only ask when the
users actually really

00:07:02.320 --> 00:07:04.080
needed that for that
specific feature,

00:07:04.080 --> 00:07:05.705
and not really early
on in the process.

00:07:08.422 --> 00:07:10.840
The MercadoLibre team
is a pretty big team.

00:07:10.840 --> 00:07:14.125
And one of the things they
found very useful with Vitals

00:07:14.125 --> 00:07:15.750
is the ability to be
able to keep track

00:07:15.750 --> 00:07:18.120
on many of the metrics
and be able to see

00:07:18.120 --> 00:07:21.780
that at their startup time there
was a regression introduced,

00:07:21.780 --> 00:07:24.360
which caused the startup
time of their application

00:07:24.360 --> 00:07:26.300
to become very long.

00:07:26.300 --> 00:07:28.290
And so they were able
to then figure out

00:07:28.290 --> 00:07:30.330
which team specifically
had caused that issue,

00:07:30.330 --> 00:07:33.353
and then work to be able
to debug that issue.

00:07:33.353 --> 00:07:39.010
The LOVOO team used the
Android Vitals startup

00:07:39.010 --> 00:07:41.969
time and the Firebase
Performance Monitoring tool

00:07:41.969 --> 00:07:44.260
to be able to really get deep
insights into the startup

00:07:44.260 --> 00:07:45.680
of their application.

00:07:45.680 --> 00:07:49.390
So the Android Vitals covers the
platform-level data collection,

00:07:49.390 --> 00:07:51.850
but doesn't cover exactly
in your application

00:07:51.850 --> 00:07:53.887
where the issues might occur.

00:07:53.887 --> 00:07:56.470
And so that's why we encourage
you to use Firebase Performance

00:07:56.470 --> 00:07:58.840
Monitoring as well to be
able to understand where

00:07:58.840 --> 00:08:00.460
specific issues are occurring.

00:08:00.460 --> 00:08:02.410
They were able to figure
out that their login

00:08:02.410 --> 00:08:05.017
and sign up flow was
taking way too long.

00:08:05.017 --> 00:08:06.850
And they decide to do
a rewrite of that part

00:08:06.850 --> 00:08:10.270
of the application.

00:08:10.270 --> 00:08:11.650
So what's in Vitals today?

00:08:14.590 --> 00:08:17.804
So Vitals consists of
five performance areas,

00:08:17.804 --> 00:08:19.220
which I think
you'll all agree are

00:08:19.220 --> 00:08:21.110
things that you
don't like to have

00:08:21.110 --> 00:08:22.370
happen when you're using apps.

00:08:22.370 --> 00:08:23.390
You don't want them to crash.

00:08:23.390 --> 00:08:25.306
You don't want them to
drain all your battery.

00:08:25.306 --> 00:08:28.340
You don't want them to be slow
in rendering or requesting

00:08:28.340 --> 00:08:32.919
permissions they don't
need, or be slow to start.

00:08:32.919 --> 00:08:35.789
And so we have 15 metrics
covering these five performance

00:08:35.789 --> 00:08:37.760
areas today.

00:08:37.760 --> 00:08:39.360
And across each
of these metrics,

00:08:39.360 --> 00:08:41.940
we provide three dimensional
breakdown at a minimum.

00:08:41.940 --> 00:08:48.380
So we show you OS version,
your APK breakdown, device

00:08:48.380 --> 00:08:51.770
breakdown, and where relevant,
we provide other information

00:08:51.770 --> 00:08:55.710
as well when it's possible.

00:08:55.710 --> 00:08:58.450
A new feature that we
launched at I/O this year

00:08:58.450 --> 00:09:00.290
is category benchmarks.

00:09:00.290 --> 00:09:02.260
This is where you can
now be able to see,

00:09:02.260 --> 00:09:04.120
compared to other
apps in your category,

00:09:04.120 --> 00:09:08.050
how do you stack up
relatively so to your peers

00:09:08.050 --> 00:09:09.580
across every single metric?

00:09:09.580 --> 00:09:12.310
And we give you the
25th, 75th, and even

00:09:12.310 --> 00:09:15.100
50th percentile breakdown
for each of those category

00:09:15.100 --> 00:09:15.695
benchmarks.

00:09:15.695 --> 00:09:17.320
And that can really
help you to be able

00:09:17.320 --> 00:09:22.120
understand, OK, this metric
I'm doing OK on, and this one,

00:09:22.120 --> 00:09:24.460
I'm actually falling way behind.

00:09:24.460 --> 00:09:27.070
I need to invest there.

00:09:27.070 --> 00:09:31.570
I mentioned the Anomaly
Alert emails earlier.

00:09:31.570 --> 00:09:33.880
These are available
in the console.

00:09:33.880 --> 00:09:35.560
You have to opt in
to receive them.

00:09:35.560 --> 00:09:37.450
And so I encourage
you if you're not

00:09:37.450 --> 00:09:40.300
opted in already to sign
up today and encourage

00:09:40.300 --> 00:09:42.569
the rest of your team
to sign up as well.

00:09:42.569 --> 00:09:44.110
This where we notify
you when there's

00:09:44.110 --> 00:09:46.540
a significant change
in the ANR or crash

00:09:46.540 --> 00:09:50.830
rate of your application where
we have a spike in the clusters

00:09:50.830 --> 00:09:53.140
or across the core
vitals, which I'm

00:09:53.140 --> 00:09:54.390
going to talk about right now.

00:09:57.012 --> 00:09:59.600
There are 15 Android
Vitals metrics.

00:09:59.600 --> 00:10:01.450
It's a lot of metrics.

00:10:01.450 --> 00:10:03.890
We think all of them are
important to deliver the best

00:10:03.890 --> 00:10:05.570
possible user
experience, but some

00:10:05.570 --> 00:10:06.990
are more important than others.

00:10:06.990 --> 00:10:10.610
As talked about earlier,
the leading contributions

00:10:10.610 --> 00:10:14.641
to one star reviews are
stability issues and battery

00:10:14.641 --> 00:10:15.140
issues.

00:10:15.140 --> 00:10:18.421
So we have four core vitals that
are divided between those two

00:10:18.421 --> 00:10:18.920
areas.

00:10:18.920 --> 00:10:20.910
So crash rate and ANR rate--

00:10:20.910 --> 00:10:23.256
ANR rate being Application
Not Responding--

00:10:23.256 --> 00:10:24.380
are the two stability ones.

00:10:24.380 --> 00:10:26.840
And stuck partial
wakelocks and excessive

00:10:26.840 --> 00:10:29.780
wakeups being the two
in the battery area.

00:10:29.780 --> 00:10:33.340
For each core vital, we provide
you a bad behavior threshold.

00:10:33.340 --> 00:10:36.640
This is where if you're
above that threshold,

00:10:36.640 --> 00:10:39.001
you're sort of
failing the class.

00:10:39.001 --> 00:10:40.750
That bad behavior
threshold is established

00:10:40.750 --> 00:10:44.260
by looking at the top
1,000 apps and seeing,

00:10:44.260 --> 00:10:48.020
the bottom 25% of apps
are above this rate,

00:10:48.020 --> 00:10:49.990
and so that's where
the bad behavior is.

00:10:55.630 --> 00:10:59.260
We launched the Pre-Launch
Report a couple of years ago.

00:10:59.260 --> 00:11:02.190
This is where when you upload
your APK to the Play Console

00:11:02.190 --> 00:11:05.700
test tracks, we will generate
a report within an hour of how

00:11:05.700 --> 00:11:09.960
your application performs across
those different 10 Android

00:11:09.960 --> 00:11:11.550
devices that we
have in the Test Lab

00:11:11.550 --> 00:11:14.040
when a robot is navigating
your application for about

00:11:14.040 --> 00:11:15.060
10 minutes.

00:11:15.060 --> 00:11:17.820
It gives you a report showing
you screenshot clustering

00:11:17.820 --> 00:11:20.310
and a bunch of insights
into accessibility issues

00:11:20.310 --> 00:11:23.360
and privacy issues,
and also flags crashes.

00:11:23.360 --> 00:11:26.280
One thing we recently did
is that we enabled you

00:11:26.280 --> 00:11:29.940
when you look at a crash
cluster in the Vitals section

00:11:29.940 --> 00:11:33.630
to be able to see if we have
a Pre-Launch Report crash

00:11:33.630 --> 00:11:36.884
that we've detected that matches
that crash from the field.

00:11:36.884 --> 00:11:39.300
This is pretty useful, because
with the Pre-Launch Report,

00:11:39.300 --> 00:11:40.424
these are test lab devices.

00:11:40.424 --> 00:11:43.080
So there aren't the same
privacy restrictions in place

00:11:43.080 --> 00:11:46.960
as there are with the data
from the field, of course.

00:11:46.960 --> 00:11:49.440
And so here we are
able to show you

00:11:49.440 --> 00:11:51.120
the video of the
robot interacting

00:11:51.120 --> 00:11:53.244
with your application so
you can be able to quickly

00:11:53.244 --> 00:11:54.800
reproduce that issue yourself.

00:11:54.800 --> 00:11:58.690
And we've got a lot more logs
and detailed information.

00:11:58.690 --> 00:12:00.110
We also did the reverse.

00:12:00.110 --> 00:12:03.230
So we now have the ability to be
able to see when you're looking

00:12:03.230 --> 00:12:05.150
at a Pre-Launch
Report, is this a crash

00:12:05.150 --> 00:12:07.184
that is already
happening in the field?

00:12:07.184 --> 00:12:08.600
Or is this one
that maybe just was

00:12:08.600 --> 00:12:11.060
introduced with my latest
APK, but that hasn't actually

00:12:11.060 --> 00:12:11.810
reached users yet?

00:12:15.200 --> 00:12:18.997
We have over 100k developers
using Android Vitals today.

00:12:18.997 --> 00:12:19.580
Hands up here.

00:12:19.580 --> 00:12:21.364
Who's using Android Vitals?

00:12:21.364 --> 00:12:22.290
Cool.

00:12:22.290 --> 00:12:23.160
Great.

00:12:23.160 --> 00:12:25.530
Thank you guys for using it.

00:12:25.530 --> 00:12:28.890
One of the things that
I found most interesting

00:12:28.890 --> 00:12:32.100
about this project
is that we've now

00:12:32.100 --> 00:12:36.300
expanded the number of users who
are using performance metrics,

00:12:36.300 --> 00:12:38.910
or what we call them,
like engineering metrics.

00:12:38.910 --> 00:12:43.380
So I was previously working on
apps on another team at Google.

00:12:43.380 --> 00:12:46.460
And I also did that
external to Google before.

00:12:46.460 --> 00:12:48.360
And one of things I
really struggled with

00:12:48.360 --> 00:12:51.060
was understanding how these
metrics were doing, because you

00:12:51.060 --> 00:12:54.480
had to have the latest
version of the code

00:12:54.480 --> 00:12:56.364
and be able to
run the profilers.

00:12:56.364 --> 00:12:57.780
And now we've made
it so that it's

00:12:57.780 --> 00:13:00.000
really easy for all the
people in your company

00:13:00.000 --> 00:13:02.729
to be able to get access to
these performance metrics

00:13:02.729 --> 00:13:04.770
and be able to see how
you're doing relatively so

00:13:04.770 --> 00:13:07.350
to other people and make
the case for investing here

00:13:07.350 --> 00:13:09.600
versus in other features.

00:13:09.600 --> 00:13:14.080
I've shown some case studies
from different titles here.

00:13:14.080 --> 00:13:16.190
And as you'd expect, you
have an Android engineer,

00:13:16.190 --> 00:13:18.210
head of mobile engineering,
a product manager using it.

00:13:18.210 --> 00:13:20.250
But now we have lead
mobile product managers

00:13:20.250 --> 00:13:22.250
using performance metrics.

00:13:22.250 --> 00:13:25.230
We have a CTO, VP of
product, and even COOs

00:13:25.230 --> 00:13:27.280
using engineering metrics.

00:13:27.280 --> 00:13:30.180
And so I encourage
you and your teams

00:13:30.180 --> 00:13:33.810
all to start using these
metrics in your conversations

00:13:33.810 --> 00:13:38.255
with your senior leadership
and with the wider team.

00:13:38.255 --> 00:13:39.630
And if you don't,
you're probably

00:13:39.630 --> 00:13:41.730
going to get left
behind, because quality

00:13:41.730 --> 00:13:45.755
across the whole Android
ecosystem is improving.

00:13:45.755 --> 00:13:47.380
Now, you might think,
OK, that's great.

00:13:47.380 --> 00:13:48.850
That's impacting those
other developers,

00:13:48.850 --> 00:13:49.933
but it's not impacting me.

00:13:49.933 --> 00:13:50.780
My app's awesome.

00:13:50.780 --> 00:13:52.654
Even though it says it
has a high crash rate,

00:13:52.654 --> 00:13:53.960
I don't believe you.

00:13:53.960 --> 00:13:58.474
Well, we looked at
the data of users

00:13:58.474 --> 00:14:00.390
who experienced a high
crash rate versus users

00:14:00.390 --> 00:14:02.307
who experienced a low
or medium crash rate.

00:14:02.307 --> 00:14:04.390
What we find is that users
who have a higher crash

00:14:04.390 --> 00:14:08.230
rate for the same app
leave 52% more one star

00:14:08.230 --> 00:14:12.490
reviews or ratings than users
with a low or medium one.

00:14:12.490 --> 00:14:15.267
And so really, I would encourage
you to start using Vitals today

00:14:15.267 --> 00:14:15.850
if you're not.

00:14:18.961 --> 00:14:19.460
Great.

00:14:19.460 --> 00:14:23.570
So what is the future
of Android Vitals?

00:14:23.570 --> 00:14:25.380
Well, we've built
a lot of features,

00:14:25.380 --> 00:14:27.280
as you can tell so far.

00:14:27.280 --> 00:14:29.030
And so really the
future of Android Vitals

00:14:29.030 --> 00:14:31.990
is you guys using the product.

00:14:31.990 --> 00:14:33.740
And so what we're going
to do is right now

00:14:33.740 --> 00:14:35.700
we're going to try
something different.

00:14:35.700 --> 00:14:39.070
And I want everyone to stand
up and talk to the people

00:14:39.070 --> 00:14:39.570
beside you.

00:14:39.570 --> 00:14:41.330
So you're trying to
find-- yeah, stand up.

00:14:41.330 --> 00:14:46.880
Stand up, and find someone
beside you who hopefully you

00:14:46.880 --> 00:14:48.380
haven't worked with.

00:14:48.380 --> 00:14:50.220
And just introduce yourself.

00:14:50.220 --> 00:14:52.340
And we're going to take
two minutes for one person

00:14:52.340 --> 00:14:54.710
to talk about their vitals and
how they're approaching it,

00:14:54.710 --> 00:14:56.750
and who in their company
uses it, what are the best

00:14:56.750 --> 00:14:58.040
practices they've
found, and then

00:14:58.040 --> 00:14:59.331
switch roles after two minutes.

00:14:59.331 --> 00:15:03.030
I'll give you two minutes now,
and then we'll switch over.

00:15:03.030 --> 00:15:06.770
So I hope you learned something
from the people you talked to

00:15:06.770 --> 00:15:10.130
and made a new friend
hopefully as well.

00:15:10.130 --> 00:15:13.729
So I would encourage you
to talk to other people

00:15:13.729 --> 00:15:15.520
about how they're
approaching their vitals.

00:15:15.520 --> 00:15:18.590
There's a lot of
documentation available online

00:15:18.590 --> 00:15:19.840
to help you as well.

00:15:19.840 --> 00:15:23.374
And we'll be at the
booth outside afterwards

00:15:23.374 --> 00:15:25.790
just on the right-hand side
when you walk out of this room

00:15:25.790 --> 00:15:29.890
if you've any questions as well.

00:15:29.890 --> 00:15:31.890
One of the things
that you probably

00:15:31.890 --> 00:15:33.337
realized talking
to that person is

00:15:33.337 --> 00:15:35.170
that one of the biggest
problems with vitals

00:15:35.170 --> 00:15:36.720
today is actionability.

00:15:36.720 --> 00:15:39.270
And we've heard you
guys and your feedback.

00:15:39.270 --> 00:15:40.530
We really appreciate that.

00:15:40.530 --> 00:15:43.030
And I wanted to assure you that
that is something that we're

00:15:43.030 --> 00:15:44.290
working hard to improve.

00:15:44.290 --> 00:15:47.520
And we will have more to
come on that in the future.

00:15:47.520 --> 00:15:52.230
We do believe that the data is
valid in terms of telling you

00:15:52.230 --> 00:15:54.120
the direction to go,
as in like you're

00:15:54.120 --> 00:15:56.440
doing good or bad
versus other people,

00:15:56.440 --> 00:15:58.024
but we think we can
do better in terms

00:15:58.024 --> 00:16:00.148
of helping you actually be
more efficient at fixing

00:16:00.148 --> 00:16:00.750
the problem.

00:16:00.750 --> 00:16:02.820
But that is a
really hard problem.

00:16:02.820 --> 00:16:06.110
And we're working on changes
to the whole OS itself,

00:16:06.110 --> 00:16:09.780
but those things take a while
to propagate across the Android

00:16:09.780 --> 00:16:12.480
user base, and then to
have enough data to be

00:16:12.480 --> 00:16:14.501
able to share back with
you within the console.

00:16:14.501 --> 00:16:16.500
But it's definitely
something we are working on.

00:16:16.500 --> 00:16:19.890
I want to thank you all very
much for joining us today.

00:16:19.890 --> 00:16:22.156
And best of luck with
improving your vitals.

00:16:22.156 --> 00:16:24.030
And I hope I get to
share your vitals success

00:16:24.030 --> 00:16:25.670
stories in our talk next year.

00:16:25.670 --> 00:16:26.350
Thank you.

00:16:26.350 --> 00:16:27.250
[APPLAUSE]

00:16:27.250 --> 00:16:31.200
[MUSIC PLAYING]

