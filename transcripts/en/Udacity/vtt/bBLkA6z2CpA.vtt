WEBVTT
Kind: captions
Language: en

00:00:00.137 --> 00:00:00.804
So, Paul.

00:00:00.804 --> 00:00:01.345
&gt;&gt; Mm?

00:00:01.345 --> 00:00:04.773
&gt;&gt; It seems like it's probably worth
reiterating the time allowances for

00:00:04.773 --> 00:00:06.095
each of the stages in RAIL.

00:00:06.095 --> 00:00:07.584
&gt;&gt; You mean LIAR.

00:00:07.584 --> 00:00:08.554
&gt;&gt; Even better.

00:00:08.554 --> 00:00:09.262
&gt;&gt; Yeah, okay.

00:00:09.262 --> 00:00:12.032
&gt;&gt; [LAUGH].
&gt;&gt; Okay, LIAR stands for load, idle,

00:00:12.032 --> 00:00:14.554
animations, and responsiveness.

00:00:14.554 --> 00:00:17.671
During the load stage you have about one
second or a thousand milliseconds to

00:00:17.671 --> 00:00:20.252
render the page before the app
no longer feels responsive, and

00:00:20.252 --> 00:00:21.780
the user's attention level falls.

00:00:23.770 --> 00:00:25.930
Download and
render your critical resources here.

00:00:26.940 --> 00:00:29.080
After loading, the app is idle, and

00:00:29.080 --> 00:00:32.060
this is a great time to do
non-essential work to ensure that

00:00:32.060 --> 00:00:36.390
whatever interactions occur after
this period will feel instantaneous.

00:00:36.390 --> 00:00:40.720
Your app's idle time should be broken
down into 50 millisecond chunks so

00:00:40.720 --> 00:00:43.750
that you can stop when
the user starts interacting.

00:00:43.750 --> 00:00:47.320
&gt;&gt; During the animation stage,
such as when users are scrolling or

00:00:47.320 --> 00:00:51.930
animations are occurring, you only have
16 milliseconds to render a frame.

00:00:51.930 --> 00:00:54.970
This is when 60 frames per
second is absolutely critical.

00:00:56.590 --> 00:00:58.300
&gt;&gt; Lastly, there's the response period.

00:00:58.300 --> 00:01:01.620
The human mind has about 100
milliseconds' grace period

00:01:01.620 --> 00:01:05.140
before an interaction with
the site feels laggy and janky.

00:01:05.140 --> 00:01:08.680
That means your app needs to
respond to user input in some way

00:01:08.680 --> 00:01:10.770
within a 100 milliseconds.

00:01:10.770 --> 00:01:13.640
Using this time wisely is
absolutely critical for

00:01:13.640 --> 00:01:16.660
setting up difficult animations
that run at 60 frames a second.

00:01:16.660 --> 00:01:20.640
&gt;&gt; In the next few quizzes, you'll be
asked to apply what you've learned about

00:01:20.640 --> 00:01:22.770
RAIL in some real-world scenarios.

