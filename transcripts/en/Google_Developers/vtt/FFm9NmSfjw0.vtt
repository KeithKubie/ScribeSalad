WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:10.310
[MUSIC PLAYING]

00:00:10.310 --> 00:00:13.390
Markers-- they're much
more useful than just

00:00:13.390 --> 00:00:15.480
for showing a location on a map.

00:00:15.480 --> 00:00:18.050
Actually, they can be
used to visually convey

00:00:18.050 --> 00:00:20.200
information about a location.

00:00:20.200 --> 00:00:21.930
I'm Ankur Kotwal,
and together we're

00:00:21.930 --> 00:00:27.330
going to look at ways to
visualize locations on a map.

00:00:27.330 --> 00:00:30.240
Let's say a user is searching
for a well-rated restaurant.

00:00:30.240 --> 00:00:32.170
They'd fire up your app
and see that there's

00:00:32.170 --> 00:00:34.430
a bunch of restaurants
in their vicinity.

00:00:34.430 --> 00:00:38.320
But it's not always easy to tell
which ones are worth visiting.

00:00:38.320 --> 00:00:40.230
To see the ratings
for each place,

00:00:40.230 --> 00:00:42.860
they may end up having to
tap each one first and see

00:00:42.860 --> 00:00:44.190
the rating.

00:00:44.190 --> 00:00:46.450
Marker selection and
animations can be a great way

00:00:46.450 --> 00:00:47.890
to show this information.

00:00:47.890 --> 00:00:51.760
In this example, markers
that lack color rate poorly.

00:00:51.760 --> 00:00:53.770
And the vibrant,
colorful markers

00:00:53.770 --> 00:00:56.130
are the highly rated ones.

00:00:56.130 --> 00:00:58.770
There's also animated steam
on some of these markers,

00:00:58.770 --> 00:01:01.750
helping to highlight the
best rated restaurants.

00:01:01.750 --> 00:01:05.360
To achieve this animation,
we're changing the marker icon

00:01:05.360 --> 00:01:07.790
by calling setIcon periodically.

00:01:07.790 --> 00:01:10.330
To desaturate the
marker icons, we're

00:01:10.330 --> 00:01:12.940
also using a
ColorMatrix ColorFilter

00:01:12.940 --> 00:01:14.780
from the Android framework.

00:01:14.780 --> 00:01:18.100
First, we set up the ColorFilter
based on the rating scale.

00:01:18.100 --> 00:01:21.510
And then we apply the
filter to the marker image.

00:01:21.510 --> 00:01:24.710
Now, markers are great for
showing points on a map,

00:01:24.710 --> 00:01:27.410
but sometimes you can
just have too many.

00:01:27.410 --> 00:01:30.560
In this case, we have too
many well-rated restaurants

00:01:30.560 --> 00:01:31.560
around us.

00:01:31.560 --> 00:01:34.430
It's a nice problem to
have, but it's not helping

00:01:34.430 --> 00:01:36.250
our user choose a restaurant.

00:01:36.250 --> 00:01:39.960
And in such situations, you
need to display many markers,

00:01:39.960 --> 00:01:42.560
but still keep the
view comprehensible.

00:01:42.560 --> 00:01:45.780
So we're going to look at two
ways to overcome these issues.

00:01:45.780 --> 00:01:49.020
The first is through the
use of marker clustering.

00:01:49.020 --> 00:01:51.700
As the zoom levels
of the map change,

00:01:51.700 --> 00:01:54.380
you can aggregate markers,
making for a much more

00:01:54.380 --> 00:01:56.100
digestible view.

00:01:56.100 --> 00:01:59.350
Now, a zoomed out view shows
us how many restaurants

00:01:59.350 --> 00:02:01.462
are in the surrounding areas.

00:02:01.462 --> 00:02:02.920
You might be looking
at this effect

00:02:02.920 --> 00:02:06.410
and wondering that well, it
looks like a lot of work.

00:02:06.410 --> 00:02:08.060
Well, let me put you at ease.

00:02:08.060 --> 00:02:10.250
It's a four-step process.

00:02:10.250 --> 00:02:13.440
Step one, add the library
to your gradle config.

00:02:13.440 --> 00:02:16.440
Step two, add the
GetLocation override

00:02:16.440 --> 00:02:18.270
to your main data class.

00:02:18.270 --> 00:02:21.300
Step three, instantiate
the ClusterManager

00:02:21.300 --> 00:02:24.120
and register it for a
couple of map listeners.

00:02:24.120 --> 00:02:27.720
And finally, step four, replace
your marker management code

00:02:27.720 --> 00:02:29.920
with calls to the
ClusterManager.

00:02:29.920 --> 00:02:32.980
It will manage adding and
removing the markers for you.

00:02:32.980 --> 00:02:35.550
Seriously, that's
it, four steps.

00:02:35.550 --> 00:02:37.490
You can optionally
customize it further

00:02:37.490 --> 00:02:40.760
by providing custom
aggregate markers too.

00:02:40.760 --> 00:02:44.300
Let's look at the second method
to show marker aggregation.

00:02:44.300 --> 00:02:46.400
I reckon it looks really cool.

00:02:46.400 --> 00:02:47.550
Heat maps.

00:02:47.550 --> 00:02:51.200
Here, we're replacing a count
of markers with a heat map

00:02:51.200 --> 00:02:53.760
to show the concentration
of these markers.

00:02:53.760 --> 00:02:55.810
How cool does that look?

00:02:55.810 --> 00:02:59.180
Achieving this effect
is also just four steps.

00:02:59.180 --> 00:03:01.110
One, add the library.

00:03:01.110 --> 00:03:03.980
Two, instantiate a
HeatMapTileProvider.

00:03:03.980 --> 00:03:05.760
Three, pass it your LatLngs.

00:03:05.760 --> 00:03:08.530
And four, use it to
create a map overlay.

00:03:08.530 --> 00:03:09.762
That's it.

00:03:09.762 --> 00:03:12.090
You can optionally
customize this further

00:03:12.090 --> 00:03:14.850
by specifying the gradient and
the radius of the heat map,

00:03:14.850 --> 00:03:16.180
too.

00:03:16.180 --> 00:03:18.540
So just remember,
information overload

00:03:18.540 --> 00:03:20.830
is a common problem
with mobile apps.

00:03:20.830 --> 00:03:23.790
Location apps in particular
suffer from poor user

00:03:23.790 --> 00:03:27.600
experiences when dealing with
lots and lots of information.

00:03:27.600 --> 00:03:30.030
Markers, clustering,
and heat maps

00:03:30.030 --> 00:03:32.800
offer beautiful
visualizations, enabling

00:03:32.800 --> 00:03:35.270
you to build amazing maps.

00:03:35.270 --> 00:03:37.880
The Android Maps
utils library provides

00:03:37.880 --> 00:03:41.110
easy to use implementations for
marker clustering, heat maps,

00:03:41.110 --> 00:03:42.580
and even more.

00:03:42.580 --> 00:03:44.990
So be sure to check
it out right here.

00:03:44.990 --> 00:03:46.490
I'm Ankur Kotwal,
and I look forward

00:03:46.490 --> 00:03:49.090
to seeing your amazing maps.

00:03:49.090 --> 00:03:52.440
[MUSIC PLAYING]

