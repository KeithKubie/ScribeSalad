WEBVTT
Kind: captions
Language: en

00:00:00.430 --> 00:00:04.120
Let's summarize what we've learned about
the Chain Matrix Multiplication problem.

00:00:04.120 --> 00:00:08.090
There is an algorithm which,
given the dimensions of n matrices,

00:00:08.090 --> 00:00:12.310
finds an expression tree that computes
the product with the minimum number of

00:00:12.310 --> 00:00:15.091
multiplications in order
n to he cubed time.

00:00:16.460 --> 00:00:20.760
Recall that there were order
n entries in the table, and

00:00:20.760 --> 00:00:25.160
we spend order n time figuring out
what value to write in each one.

00:00:25.160 --> 00:00:27.740
The optimal similar
substructure that we exploited

00:00:27.740 --> 00:00:31.570
was the minimum cost of
evaluating the subchains.

00:00:31.570 --> 00:00:35.420
The key recurrence said that
the cost of each partition

00:00:35.420 --> 00:00:40.250
was the minimum cost of computing the
left subtree plus the minimum cost of

00:00:40.250 --> 00:00:44.460
computing the right subtree,
plus the cost of combining them.

00:00:44.460 --> 00:00:47.990
And of course, we want to take
the minimum over all such partitions.

