WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
All right--so if you did this right, you would realize that what you need to do

00:00:04.000 --> 00:00:08.000
to compute an expected value the sum of the overall values that it can take on

00:00:08.000 --> 00:00:11.000
the probability of that value times the value itself.

00:00:11.000 --> 00:00:18.000
So what that amounts to is summing overall the pairs w and x that are neighbors to v.

00:00:18.000 --> 00:00:21.000
We sum whether they're either connected or they're not connected

00:00:21.000 --> 00:00:26.000
and that's represented by the c[wx] thing and we need to multiply that by the probability

00:00:26.000 --> 00:00:28.000
that we picked that particular w and x.

00:00:28.000 --> 00:00:31.000
Well of all the w and x's are picked uniformly at random

00:00:31.000 --> 00:00:35.000
and the number of different pairings of them is the degree of v

00:00:35.000 --> 00:00:37.000
times the degree of v-1 divided by 2.

00:00:37.000 --> 00:00:40.000
That's the number of different ways you can pair up a set of size dv.

00:00:40.000 --> 00:00:44.000
The reciprocal of that is now the probability that we picked any particular pair.

00:00:44.000 --> 00:00:48.000
But this is independent of c[wx] so really we can move this out front

00:00:48.000 --> 00:00:52.000
and just do it as 2 times the degree times the degree minus 1

00:00:52.000 --> 00:00:55.000
times whether or not the two nodes are connected.

00:00:55.000 --> 00:00:58.000
And all that summed up for all of the w and x.

00:00:58.000 --> 00:01:03.000
But the thing that I would like you to realize is this is exactly this.

00:01:03.000 --> 00:01:08.000
So the expected value of randomly choosing a pair and checking if they're connected

00:01:08.000 --> 00:01:11.000
is the same as actually computing this particular piece

00:01:11.000 --> 00:01:15.000
of the clustering coefficient formula and the same trick works

00:01:15.000 --> 00:01:18.000
in terms of the number of the vertices.

00:01:18.000 --> 00:01:23.000
So if the vertex is chosen at random and then this quantity is evaluated for that vertex

00:01:23.000 --> 00:01:27.000
the expected value of that is exactly the clustering coefficient.

00:01:27.000 --> 00:01:32.000
So what that means is we can iterate this particular expression that I put braces around

00:01:32.000 --> 00:01:36.000
and average that and if we did that forever, if we did that infinitely often,

00:01:36.000 --> 00:01:40.000
it would be exactly the expected value, which would be exactly the clustering coefficient.

00:01:40.000 --> 00:01:42.000
But since we can't do it forever, we'll run it for a certain

00:01:42.000 --> 00:01:44.000
amount of time and we'll hope that it gets close.

00:01:44.000 --> 00:01:46.000
Let me show you how it gets close over time.

