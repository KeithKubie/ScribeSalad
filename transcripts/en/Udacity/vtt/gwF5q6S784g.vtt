WEBVTT
Kind: captions
Language: en

00:00:00.200 --> 00:00:05.580
In a MOESI protocol,
the state can be M, O, E, S, or I.

00:00:05.580 --> 00:00:12.620
Initially, all of the cores have the
block in the I state in their caches.

00:00:12.620 --> 00:00:18.140
When C0 reads, it detects that it's
the only one who actually has a copy of

00:00:18.140 --> 00:00:22.830
the block, and because it's doing a read
it doesn't go into the modified state,

00:00:22.830 --> 00:00:27.110
it goes into the exclusive E state.

00:00:27.110 --> 00:00:30.620
The others keep
the block in the I state.

00:00:30.620 --> 00:00:34.650
When C1 reads, it detects that it's not

00:00:34.650 --> 00:00:39.152
the only one who has the blog,
so it normally goes to S state.

00:00:39.152 --> 00:00:44.550
Furthermore, C0 now
snoops another reader, so

00:00:44.550 --> 00:00:49.490
it's no longer exclusive and
it moves to the shared state too.

00:00:49.490 --> 00:00:53.120
C2 still has the invalid state for
its block.

00:00:53.120 --> 00:00:57.920
When C2 reads, it also detects
that there are two other sharers,

00:00:57.920 --> 00:01:00.880
so it gets the block
in the shared state.

00:01:00.880 --> 00:01:04.425
C1, nothing happens to its shared state.

00:01:04.425 --> 00:01:07.970
When we snoop a read, and we are in
the shared state, we just stay there,

00:01:07.970 --> 00:01:12.535
because others reading is
compatible with the shared state.

00:01:12.535 --> 00:01:16.640
C0 is also in the shared state,
although you were not asked to do this.

00:01:16.640 --> 00:01:21.200
And now finally when C1 writes,
because it was in the shared state,

00:01:21.200 --> 00:01:24.610
it will put an invalidation
request on the bus, and

00:01:24.610 --> 00:01:27.550
once it does that it can
move to the modified state.

00:01:27.550 --> 00:01:33.000
Others see that invalidation request and
go to the invalid state.

00:01:33.000 --> 00:01:36.080
Pretty much, after our write,
we are always in the modified state,

00:01:36.080 --> 00:01:38.860
and all others are always in
the I state at that point.

