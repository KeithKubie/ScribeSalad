WEBVTT
Kind: captions
Language: en

00:00:00.390 --> 00:00:03.570
Now the second homework problem is a bit more

00:00:03.570 --> 00:00:06.870
involved. Still not too bad but it requires a

00:00:06.870 --> 00:00:09.350
bit more code. So we start off by initializing

00:00:09.350 --> 00:00:12.410
the SplayTree and we have a few variables to

00:00:12.410 --> 00:00:14.440
keep track of the current min and max as

00:00:14.440 --> 00:00:17.360
we are going through. And we check whether the

00:00:17.360 --> 00:00:21.728
empty SplayTree is actually empty, that is, isEmpty method

00:00:21.728 --> 00:00:25.640
returns true. And similarly for findMin and findax, and sent

00:00:25.640 --> 00:00:28.450
either can't be any min or max. And

00:00:28.450 --> 00:00:32.229
that when we search an empty SplayTree that we

00:00:32.229 --> 00:00:37.720
also return none. Now we insert 100 in here, and we set the current min and max

00:00:37.720 --> 00:00:40.030
to be 100, just to initialize the tree

00:00:40.030 --> 00:00:44.610
to something, and now we go through, and, for

00:00:44.610 --> 00:00:47.600
10 examples we check whether the tree is

00:00:47.600 --> 00:00:50.460
empty and it shouldn't be. Then we insert it,

00:00:50.460 --> 00:00:53.630
insert a new key into the display tree for range

00:00:53.630 --> 00:00:56.950
10 through 20 twice, just to see if that works

00:00:56.950 --> 00:01:00.360
okay. Update current_min and current_max. Now we checked that that

00:01:00.360 --> 00:01:03.400
has been inserted by trying to find it in the SplayTree,

00:01:03.400 --> 00:01:05.690
and we assert that that should be found and it

00:01:05.690 --> 00:01:10.170
should, find should return the current of the for loop

00:01:10.170 --> 00:01:12.690
as found, and this is what we assert here. Now

00:01:12.690 --> 00:01:15.960
we check the min and the max; the max shouldn't change,

00:01:15.960 --> 00:01:19.780
since we're going from 10 to 20 and we've already inserted

00:01:19.780 --> 00:01:23.680
100, but the min should change each time. So this should test,

00:01:23.680 --> 00:01:26.200
the findMin function right here. And now we do the same

00:01:26.200 --> 00:01:28.710
thing except we try to remove. And we just try to remove

00:01:28.710 --> 00:01:32.260
these, assert that it's not empty, and that we don't find,

00:01:32.260 --> 00:01:35.150
after removing the key, the key in the SplayTree, because it shouldn't

00:01:35.150 --> 00:01:37.830
be in there anymore. And then just as a little, aside here,

00:01:37.830 --> 00:01:41.090
we, try to insert 373 and remove it, to see what happens.

00:01:41.090 --> 00:01:43.010
This is really not too involved. You could have gotten quite a bit

00:01:43.010 --> 00:01:46.350
more advanced with this. This should do everything you need to do. So,

00:01:46.350 --> 00:01:49.740
if we run this, we see we got it right. So, I hope

00:01:49.740 --> 00:01:52.030
you had fun with this. Sorry about the bug that was in there

00:01:52.030 --> 00:01:56.020
initially. And thank you to everyone who caught that, my fault entirely. So,

00:01:56.020 --> 00:01:59.290
other than that, I hope you enjoyed this. I hope it showed you

00:01:59.290 --> 00:02:03.310
what coverage can and can't do, and after this we'll be moving on

00:02:03.310 --> 00:02:07.070
to random testing which I hope you'll also really enjoy. Thanks a lot.

