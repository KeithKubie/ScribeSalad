WEBVTT
Kind: captions
Language: en

00:00:04.570 --> 00:00:06.350
BILL LUAN: Shanghai
GDG is a very

00:00:06.350 --> 00:00:08.420
interesting developer community.

00:00:08.420 --> 00:00:09.260
SUSANNAH RAUB: I'm
glad somebody

00:00:09.260 --> 00:00:10.410
has asked this question.

00:00:10.410 --> 00:00:11.770
RETO MEIER: This is where
the magic happens.

00:00:11.770 --> 00:00:13.490
JENNY MURPHY: This is primarily
a question and

00:00:13.490 --> 00:00:14.820
answer show, so if any
of you out there

00:00:14.820 --> 00:00:16.070
would like to ask questions.

00:00:21.450 --> 00:00:21.810
PAUL SAXMAN: Hello.

00:00:21.810 --> 00:00:25.390
Welcome to this week's episode
of Between Two Markers with

00:00:25.390 --> 00:00:31.210
Paul Saxman, also known as
Google Developer office hours

00:00:31.210 --> 00:00:33.490
or Google Maps Developer
office hours.

00:00:33.490 --> 00:00:37.890
This week, I'm joined with two
very special guests from

00:00:37.890 --> 00:00:42.740
Sydney, Luke Mahe and
Chris Broadfoot.

00:00:42.740 --> 00:00:45.570
And they're going to talk about
More Than a Map, the

00:00:45.570 --> 00:00:48.610
inner awesomeness of More Than
a Map, because there's some

00:00:48.610 --> 00:00:51.080
really cool things going on--

00:00:51.080 --> 00:00:53.040
I don't know what you want
to say, underneath the--

00:00:53.040 --> 00:00:53.500
I'm sorry?

00:00:53.500 --> 00:00:54.180
CHRIS BROADFOOT: Behind
the scenes?

00:00:54.180 --> 00:00:54.890
PAUL SAXMAN: Behind
the scenes.

00:00:54.890 --> 00:00:56.130
CHRIS BROADFOOT:
Under the map.

00:00:56.130 --> 00:00:58.550
PAUL SAXMAN: Under the map, that
we think developers will

00:00:58.550 --> 00:01:00.500
really be interested in.

00:01:00.500 --> 00:01:03.180
Before we go into the More Than
a Map, though, we got a

00:01:03.180 --> 00:01:05.750
couple of public service
announcements.

00:01:05.750 --> 00:01:09.140
One is that if you guys have any
questions along the way,

00:01:09.140 --> 00:01:10.440
definitely post them
on YouTube.

00:01:10.440 --> 00:01:13.210
I'm going to be monitoring the
YouTube channel for comments.

00:01:13.210 --> 00:01:16.930
And we'll try to answer those
questions and get some answers

00:01:16.930 --> 00:01:18.420
for you guys.

00:01:18.420 --> 00:01:20.140
And the other thing is
if you guys haven't

00:01:20.140 --> 00:01:20.940
heard about it yet--

00:01:20.940 --> 00:01:25.500
hopefully you have-- but there's
the Google Places API

00:01:25.500 --> 00:01:27.890
Developers challenge
going on right now.

00:01:27.890 --> 00:01:31.060
And what we're doing is we're
trying to get developers to

00:01:31.060 --> 00:01:33.660
work with their communities to
build mapping applications

00:01:33.660 --> 00:01:38.040
that support their communities
and also highlight some uses

00:01:38.040 --> 00:01:40.150
of the Google Places API.

00:01:40.150 --> 00:01:42.080
If you're interested in the
challenge, just go to

00:01:42.080 --> 00:01:47.150
developers.googl
e.com/places/challenge.

00:01:47.150 --> 00:01:49.010
And that'll get you to
the landing page.

00:01:49.010 --> 00:01:51.660
We'll show you the page
in just a second.

00:01:51.660 --> 00:01:54.290
From there, we have lots of
information about the

00:01:54.290 --> 00:01:57.580
timeline, types of apps we're
looking for, rules and

00:01:57.580 --> 00:02:01.200
regulations, that
type of thing.

00:02:01.200 --> 00:02:02.270
Get you going there.

00:02:02.270 --> 00:02:06.920
The news about it, though, is
that the challenge is closing

00:02:06.920 --> 00:02:08.870
for submissions on October 31.

00:02:08.870 --> 00:02:11.550
So you have just over two weeks
or three weeks to get

00:02:11.550 --> 00:02:16.400
your submissions in so that
we can review it.

00:02:16.400 --> 00:02:20.190
We're also having public
voting for the

00:02:20.190 --> 00:02:22.070
People's Choice Award.

00:02:22.070 --> 00:02:24.280
That's actually going
to start November 1.

00:02:24.280 --> 00:02:26.710
So we pushed it forward a couple
of weeks to get a few

00:02:26.710 --> 00:02:29.990
more submissions in before
we open that up.

00:02:29.990 --> 00:02:32.890
So definitely check
out the website.

00:02:32.890 --> 00:02:33.750
This will bring it up.

00:02:33.750 --> 00:02:34.510
CHRIS BROADFOOT: Prizes,
as well?

00:02:34.510 --> 00:02:35.030
PAUL SAXMAN: Oh, yeah.

00:02:35.030 --> 00:02:36.220
Absolutely.

00:02:36.220 --> 00:02:37.830
The prizes are pretty cool.

00:02:37.830 --> 00:02:41.210
If you take a look at the site,
the prizes are actually

00:02:41.210 --> 00:02:46.660
tickets to Google I/O and I
think a $3,500 stipend to get

00:02:46.660 --> 00:02:50.770
you here and keep you happy
while you're here if I/O

00:02:50.770 --> 00:02:53.130
doesn't keep you happy enough.

00:02:53.130 --> 00:02:54.470
And what else was it?

00:02:54.470 --> 00:02:55.265
There was--

00:02:55.265 --> 00:02:57.950
CHRIS BROADFOOT: I can have a
look over on the website.

00:02:57.950 --> 00:03:01.180
PAUL SAXMAN: That's true
for the judged awards.

00:03:01.180 --> 00:03:04.260
So we have judges that
are actually--

00:03:04.260 --> 00:03:06.200
CHRIS BROADFOOT: People's Choice
is two I/O tickets per

00:03:06.200 --> 00:03:08.170
team as well.

00:03:08.170 --> 00:03:09.510
PAUL SAXMAN: So a lot of
opportunities to win--

00:03:09.510 --> 00:03:11.030
CHRIS BROADFOOT: Oh, and
you get dinner with us.

00:03:11.030 --> 00:03:11.683
PAUL SAXMAN: Oh,
dinner with us?

00:03:11.683 --> 00:03:12.616
CHRIS BROADFOOT: Dinner
with the Google Maps

00:03:12.616 --> 00:03:14.510
and Places API team.

00:03:14.510 --> 00:03:15.760
I didn't agree to that.

00:03:18.290 --> 00:03:20.270
LUKE MAHE: That's better
than going to I/O.

00:03:20.270 --> 00:03:20.750
PAUL SAXMAN: Maybe.

00:03:20.750 --> 00:03:22.330
Yeah.

00:03:22.330 --> 00:03:24.440
Especially probably
all expenses paid.

00:03:24.440 --> 00:03:28.130
So we'll try to take
you someplace nice.

00:03:28.130 --> 00:03:28.510
Definitely.

00:03:28.510 --> 00:03:29.140
So check it out.

00:03:29.140 --> 00:03:30.880
Check the website out.

00:03:30.880 --> 00:03:32.620
And get your submissions in
in the next few weeks.

00:03:32.620 --> 00:03:34.820
And we're looking forward
to seeing them.

00:03:34.820 --> 00:03:38.895
And with that, why don't we
get into More Than a Map?

00:03:38.895 --> 00:03:40.220
CHRIS BROADFOOT: Sounds good.

00:03:40.220 --> 00:03:42.020
PAUL SAXMAN: So you guys don't
need any introduction besides

00:03:42.020 --> 00:03:42.900
what I gave.

00:03:42.900 --> 00:03:45.790
Luke, you're our technical lead
in developer relations

00:03:45.790 --> 00:03:47.920
down in Sydney.

00:03:47.920 --> 00:03:53.590
Chris, you're technical
guy extraordinaire

00:03:53.590 --> 00:03:54.780
working on the Maps API.

00:03:54.780 --> 00:03:56.110
CHRIS BROADFOOT: So
we launched this--

00:03:56.110 --> 00:03:58.720
was it Tuesday last week?

00:03:58.720 --> 00:03:58.950
It was

00:03:58.950 --> 00:03:59.670
LUKE MAHE: Tuesday.

00:03:59.670 --> 00:04:00.850
CHRIS BROADFOOT: Yeah.

00:04:00.850 --> 00:04:05.130
So if you haven't seen it yet,
head over to morethanamap.com.

00:04:05.130 --> 00:04:08.770
And you'll see something
like this.

00:04:08.770 --> 00:04:12.260
It's got a whole bunch of cool
demos which we'll show off in

00:04:12.260 --> 00:04:15.110
a second and some developer
stories that

00:04:15.110 --> 00:04:16.910
you can go and watch.

00:04:16.910 --> 00:04:18.950
So these are guys that
are using the Maps

00:04:18.950 --> 00:04:21.410
API to its full potential.

00:04:21.410 --> 00:04:23.730
PAUL SAXMAN: So one sentence
or less-- why did

00:04:23.730 --> 00:04:24.640
we launch this site?

00:04:24.640 --> 00:04:26.960
So what's our--

00:04:26.960 --> 00:04:28.660
CHRIS BROADFOOT: To show people
all the cool things

00:04:28.660 --> 00:04:32.030
they can do with the Maps API.

00:04:32.030 --> 00:04:34.890
You can really enhance your
location-based app

00:04:34.890 --> 00:04:35.970
using the Maps API--

00:04:35.970 --> 00:04:38.310
LUKE MAHE: --and do more than
just put a map on your site.

00:04:38.310 --> 00:04:39.050
CHRIS BROADFOOT: Yeah.

00:04:39.050 --> 00:04:42.220
We see a lot of maps that are
just a base Google Map and a

00:04:42.220 --> 00:04:42.940
marker, which is great.

00:04:42.940 --> 00:04:44.360
It's good to see.

00:04:44.360 --> 00:04:45.860
But here we're showcasing
some of the--

00:04:45.860 --> 00:04:47.670
I wouldn't say less-used
features, but the more

00:04:47.670 --> 00:04:50.440
valuable features
of the Maps API.

00:04:50.440 --> 00:04:53.580
So we've got some satellite
imagery, Street View, which is

00:04:53.580 --> 00:04:59.740
one of Google's unique features
of Maps, places data,

00:04:59.740 --> 00:05:00.430
directions.

00:05:00.430 --> 00:05:03.620
And we've got some really cool
data visualization demos.

00:05:03.620 --> 00:05:07.940
So Luke and I built out most
of the site from a

00:05:07.940 --> 00:05:10.310
design from an agency.

00:05:10.310 --> 00:05:11.360
LUKE MAHE: Yeah, Upperquad
did some really

00:05:11.360 --> 00:05:12.270
cool designs for us.

00:05:12.270 --> 00:05:14.580
And we took that and
built with it.

00:05:14.580 --> 00:05:16.580
CHRIS BROADFOOT: Yeah.

00:05:16.580 --> 00:05:20.910
We really wanted to make this
site blazingly fast.

00:05:20.910 --> 00:05:24.040
So you'll notice that as you
click around, it's quite fast

00:05:24.040 --> 00:05:26.310
to load the demos in and out.

00:05:26.310 --> 00:05:28.120
And all the pages load
really quickly.

00:05:28.120 --> 00:05:31.540
And this is because it's
all a single-page site.

00:05:31.540 --> 00:05:34.470
So do you want to talk a bit
about how we did that?

00:05:34.470 --> 00:05:37.680
LUKE MAHE: We created a little
MVC framework just to bind all

00:05:37.680 --> 00:05:38.970
the pages together.

00:05:38.970 --> 00:05:41.610
And what we mainly concentrated
on was using one

00:05:41.610 --> 00:05:43.170
map throughout the whole site.

00:05:43.170 --> 00:05:45.450
So we don't create a new map
every time we change the demo

00:05:45.450 --> 00:05:45.830
or anything like that.

00:05:45.830 --> 00:05:49.060
We just share the same map
object around so we don't have

00:05:49.060 --> 00:05:50.630
to create a new map
every single time.

00:05:50.630 --> 00:05:51.460
It's really cool.

00:05:51.460 --> 00:05:55.720
PAUL SAXMAN: So how many views
do you have based on that one

00:05:55.720 --> 00:05:57.930
map load, or actually
one page load?

00:05:57.930 --> 00:06:01.770
CHRIS BROADFOOT: There's
about 20 demos or so.

00:06:01.770 --> 00:06:06.680
You could view all 20 demos
and only use the one map.

00:06:06.680 --> 00:06:09.580
Another good thing about this
is you've only used one map

00:06:09.580 --> 00:06:16.900
load of your 25,000 a day
to do your whole site.

00:06:16.900 --> 00:06:19.370
Generally, you'd only need
one map per visitor.

00:06:19.370 --> 00:06:21.170
PAUL SAXMAN: That's
a worthy tidbit.

00:06:21.170 --> 00:06:23.500
Somebody that's, let's say,
doing a travel site and they

00:06:23.500 --> 00:06:26.890
want to do some advanced search
capabilities or give

00:06:26.890 --> 00:06:29.140
you the function where you
want to say, go back and

00:06:29.140 --> 00:06:30.760
refine my search.

00:06:30.760 --> 00:06:32.730
You don't want them to actually
go back out of your

00:06:32.730 --> 00:06:35.170
map, do all that work, and then
go back into your map

00:06:35.170 --> 00:06:37.020
because that's another load.

00:06:37.020 --> 00:06:39.250
So using some techniques that
you guys did, they could

00:06:39.250 --> 00:06:40.760
theoretically just--

00:06:40.760 --> 00:06:47.430
one map load for one user,
basically, or one user visit.

00:06:47.430 --> 00:06:49.600
CHRIS BROADFOOT: And it's not
only just that you use fewer

00:06:49.600 --> 00:06:52.660
map loads, but it's also a
nicer user experience.

00:06:52.660 --> 00:06:54.370
So for example, if I
go over to the data

00:06:54.370 --> 00:06:56.500
visualization demos--

00:06:56.500 --> 00:06:58.580
we have a flights demo--

00:06:58.580 --> 00:06:59.450
the map loads in.

00:06:59.450 --> 00:07:02.560
But if I switch over to the
earthquakes demo, the map's

00:07:02.560 --> 00:07:03.370
still there.

00:07:03.370 --> 00:07:05.500
The tiles haven't moved.

00:07:05.500 --> 00:07:08.250
And this is just because we're
using the same viewport.

00:07:11.660 --> 00:07:13.880
PAUL SAXMAN: How's the
bandwidth on that?

00:07:13.880 --> 00:07:17.230
You have to load all the assets
for all these pages in

00:07:17.230 --> 00:07:18.230
advance, or--?

00:07:18.230 --> 00:07:18.570
LUKE MAHE: Yeah.

00:07:18.570 --> 00:07:21.140
So because it's one page, we
load everything up front, but

00:07:21.140 --> 00:07:23.650
then we cache it for
a long time.

00:07:23.650 --> 00:07:26.410
But because we're not refreshing
the page every

00:07:26.410 --> 00:07:27.960
single time we change anything,
we don't have to

00:07:27.960 --> 00:07:30.490
reload all the HTML
[? and do all that ?] again.

00:07:30.490 --> 00:07:32.800
PAUL SAXMAN: Is it noticeable
if you're on a low bandwidth

00:07:32.800 --> 00:07:33.270
connection?

00:07:33.270 --> 00:07:34.160
LUKE MAHE: Yeah.

00:07:34.160 --> 00:07:36.380
You'll take a little bit more of
a hit at the start because

00:07:36.380 --> 00:07:37.280
we load more.

00:07:37.280 --> 00:07:39.860
But then the rest of the
experience is really slick.

00:07:39.860 --> 00:07:43.910
So we figured that was a bit of
a nicer experience just to

00:07:43.910 --> 00:07:46.360
load a little bit slower at the
start but then to have it

00:07:46.360 --> 00:07:47.680
better [? going on ?]
with the rest.

00:07:47.680 --> 00:07:50.230
CHRIS BROADFOOT: So if I jump
into the page source, you can

00:07:50.230 --> 00:07:52.712
see here that there's only
one script tag--

00:07:52.712 --> 00:07:54.770
oh, sorry, there's three
script tags.

00:07:54.770 --> 00:07:59.190
There's the +1 button, the
Maps API, and this thing

00:07:59.190 --> 00:08:00.200
called app bundle.

00:08:00.200 --> 00:08:02.010
And this actually bundles in
a whole bunch of different

00:08:02.010 --> 00:08:02.620
JavaScript.

00:08:02.620 --> 00:08:05.270
So you can see here at the
top there's jQuery.

00:08:05.270 --> 00:08:08.805
And as I scroll down, there's
underscore JS.

00:08:14.000 --> 00:08:18.930
So this is a library
for directing URLs.

00:08:18.930 --> 00:08:21.680
I think it's called director.

00:08:21.680 --> 00:08:24.730
This is a jQuery scroll
wheel plug-in.

00:08:24.730 --> 00:08:29.300
And then just below, it's all
of our More Than a Map code.

00:08:29.300 --> 00:08:31.430
So this actually compiles down
to something quite small

00:08:31.430 --> 00:08:33.820
because we've used all
of these libraries.

00:08:33.820 --> 00:08:37.490
We could probably make it even
smaller if we minified jQuery

00:08:37.490 --> 00:08:40.030
and everything to only include
the functions we use.

00:08:40.030 --> 00:08:45.200
But we figured it's small
enough and fast enough.

00:08:45.200 --> 00:08:46.320
PAUL SAXMAN: So what are
some of the other--

00:08:46.320 --> 00:08:48.300
you mentioned jQuery.

00:08:48.300 --> 00:08:50.450
What are some of the other
libraries you guys pulled in?

00:08:50.450 --> 00:08:52.080
CHRIS BROADFOOT: So we used
underscore JS, which is a

00:08:52.080 --> 00:08:54.075
whole bunch of utility
functions.

00:08:54.075 --> 00:08:56.010
LUKE MAHE: And we mainly used
that for binding so our code

00:08:56.010 --> 00:08:56.660
was a lot nicer.

00:08:56.660 --> 00:08:58.120
So we didn't have all these
anonymous functions

00:08:58.120 --> 00:08:59.410
[INAUDIBLE].

00:08:59.410 --> 00:09:02.950
CHRIS BROADFOOT: And also,
there's a handy [? Each ?]

00:09:02.950 --> 00:09:04.100
and map function.

00:09:04.100 --> 00:09:08.180
So these are basically things
that are in your browser's

00:09:08.180 --> 00:09:12.740
JavaScripts, like
map and filter.

00:09:12.740 --> 00:09:16.360
We used it for cross-browser
compatibility.

00:09:16.360 --> 00:09:18.820
LUKE MAHE: And then the other
one was director.

00:09:18.820 --> 00:09:20.390
CHRIS BROADFOOT: Director.

00:09:20.390 --> 00:09:24.290
Actually, I can show
you quickly.

00:09:24.290 --> 00:09:26.230
This is the flatiron director.

00:09:26.230 --> 00:09:28.750
So I think this comes
from nodejitsu.

00:09:28.750 --> 00:09:33.710
It seems like it's designed for
server side using Node.js.

00:09:33.710 --> 00:09:36.250
But we used it on the client
side and it has--

00:09:36.250 --> 00:09:37.940
you basically set
up your routes.

00:09:37.940 --> 00:09:42.820
So we might have slash demos
goes to a demo handler, slash

00:09:42.820 --> 00:09:44.660
developer stories goes to
the developer stories

00:09:44.660 --> 00:09:46.190
handler, and so on.

00:09:46.190 --> 00:09:51.850
So this is a really nice way to
have this really decoupled

00:09:51.850 --> 00:09:54.480
way of navigating the site.

00:09:54.480 --> 00:09:58.160
So we didn't really have to
write any binding code for

00:09:58.160 --> 00:09:59.990
links on the page or
anything like that.

00:09:59.990 --> 00:10:01.070
LUKE MAHE: Then it also handled
a lot of the nice

00:10:01.070 --> 00:10:02.960
stuff of doing pushState
for us.

00:10:02.960 --> 00:10:05.105
So it would actually update
the URL without having to

00:10:05.105 --> 00:10:06.620
reload the whole page.

00:10:06.620 --> 00:10:10.250
But then for older browsers, it
would do a hash tag and use

00:10:10.250 --> 00:10:11.190
that as the URL instead.

00:10:11.190 --> 00:10:13.030
CHRIS BROADFOOT: Actually, I can
show you some of the code.

00:10:13.030 --> 00:10:14.390
PAUL SAXMAN: So it
makes it easy--

00:10:14.390 --> 00:10:16.760
people can link directly to
actually one of these.

00:10:16.760 --> 00:10:17.220
LUKE MAHE: Yeah.

00:10:17.220 --> 00:10:19.700
So we can have a URL
that make sense.

00:10:19.700 --> 00:10:22.680
And then people can
share that.

00:10:22.680 --> 00:10:23.770
Chris is going to
show the code.

00:10:23.770 --> 00:10:25.430
CHRIS BROADFOOT: So this
is our app controller.

00:10:25.430 --> 00:10:28.450
So this basically handles
all of the binding

00:10:28.450 --> 00:10:29.860
of the whole app.

00:10:29.860 --> 00:10:32.590
And you can see down here,
down below, we

00:10:32.590 --> 00:10:34.030
set up a new router.

00:10:34.030 --> 00:10:35.610
And we set up a whole
bunch of routes.

00:10:35.610 --> 00:10:39.480
So anything under slash demos
goes to a function called

00:10:39.480 --> 00:10:42.050
showDemo, developer stories.

00:10:42.050 --> 00:10:44.780
And then there's just a general
page handler that just

00:10:44.780 --> 00:10:47.740
handles, for example, the Learn
More page, which doesn't

00:10:47.740 --> 00:10:50.980
really do anything particularly
special.

00:10:50.980 --> 00:10:52.990
PAUL SAXMAN: So any server-side
processing?

00:10:52.990 --> 00:10:55.020
Are you guys serving
up data or--

00:10:57.580 --> 00:10:59.560
LUKE MAHE: Well, we got a couple
of JSON files, but

00:10:59.560 --> 00:11:00.330
they're static.

00:11:00.330 --> 00:11:01.530
PAUL SAXMAN: Static files.

00:11:01.530 --> 00:11:03.460
LUKE MAHE: Stuff like the
flights data, the population

00:11:03.460 --> 00:11:04.930
demos data.

00:11:04.930 --> 00:11:07.420
But everything else is a static
HTML page, static

00:11:07.420 --> 00:11:10.530
JavaScript, so we can
cache it for ages.

00:11:10.530 --> 00:11:12.780
CHRIS BROADFOOT: The only
notable thing is that since

00:11:12.780 --> 00:11:16.890
we're using pushState and it's a
one-page site, if you send a

00:11:16.890 --> 00:11:19.380
link to your friend, say, to a
particular demo, then we need

00:11:19.380 --> 00:11:24.350
to handle the entry to
a particular page.

00:11:24.350 --> 00:11:27.620
So we do this by serving
up the same HTML to

00:11:27.620 --> 00:11:29.270
every single page.

00:11:29.270 --> 00:11:32.590
And then the router will go and
figure out where to put

00:11:32.590 --> 00:11:33.680
the initial page load.

00:11:33.680 --> 00:11:36.800
LUKE MAHE: And then the way we
did our demo views and our MVC

00:11:36.800 --> 00:11:39.895
framework was every demo knows
how to bootstrap itself from

00:11:39.895 --> 00:11:41.310
the start to the end.

00:11:41.310 --> 00:11:43.120
But if it gets [? given ?]

00:11:43.120 --> 00:11:44.800
that loads itself halfway
through, it

00:11:44.800 --> 00:11:46.790
knows how to get there.

00:11:46.790 --> 00:11:48.010
PAUL SAXMAN: Very cool.

00:11:48.010 --> 00:11:50.450
So then in terms of hosting,
what did you guys--

00:11:50.450 --> 00:11:53.370
I think I already know
the answer, but--

00:11:53.370 --> 00:11:54.490
LUKE MAHE: It's sitting
on App Engine.

00:11:54.490 --> 00:11:55.980
PAUL SAXMAN: App Engine?

00:11:55.980 --> 00:11:56.820
But you're--

00:11:56.820 --> 00:11:59.470
CHRIS BROADFOOT: App Engine was
great for serving static

00:11:59.470 --> 00:12:00.510
files as well.

00:12:00.510 --> 00:12:04.070
I think we had about 150 loads
to our JavaScript over the

00:12:04.070 --> 00:12:06.330
whole day, which was
amazing for--

00:12:06.330 --> 00:12:07.950
LUKE MAHE: Everything
was just cached.

00:12:07.950 --> 00:12:09.270
CHRIS BROADFOOT: Yeah.

00:12:09.270 --> 00:12:12.080
It wouldn't matter how many page
views we had, it would've

00:12:12.080 --> 00:12:15.450
still served about 150,
200 requests.

00:12:15.450 --> 00:12:17.420
So I think it was actually quite
cheap to serve the whole

00:12:17.420 --> 00:12:20.870
app because it was all
out of public caches.

00:12:20.870 --> 00:12:22.120
PAUL SAXMAN: Very cool.

00:12:24.700 --> 00:12:28.040
So what percentage, roughly,
of your MVC

00:12:28.040 --> 00:12:31.470
framework and maps code?

00:12:31.470 --> 00:12:33.890
LUKE MAHE: Mainly, it was in
apps because each one is an

00:12:33.890 --> 00:12:37.300
individual demo that does stuff
that's really different.

00:12:37.300 --> 00:12:40.420
So the MVC code we made was
just [? designed ?] to be

00:12:40.420 --> 00:12:42.770
really, really small and
lightweight that just did what

00:12:42.770 --> 00:12:45.370
we want it to, which was
essentially just load a demo

00:12:45.370 --> 00:12:47.870
with a map, whether it be normal
maps or Street View,

00:12:47.870 --> 00:12:49.680
and then [? initiate ?]

00:12:49.680 --> 00:12:50.930
its demo.

00:12:52.970 --> 00:12:55.570
CHRIS BROADFOOT: We designed the
framework so that we could

00:12:55.570 --> 00:12:59.090
add demos easily and quickly.

00:12:59.090 --> 00:13:02.650
I wouldn't say that the
framework code is small, but

00:13:02.650 --> 00:13:05.060
it's lightweight and
really flexible.

00:13:05.060 --> 00:13:07.590
PAUL SAXMAN: So where would
developers go to replicate

00:13:07.590 --> 00:13:08.950
what you guys did?

00:13:08.950 --> 00:13:11.190
LUKE MAHE: Ours is quite unique
to what we wanted

00:13:11.190 --> 00:13:13.890
because ours is about a map.

00:13:13.890 --> 00:13:16.370
We took some caveats with
knowing that we're going to be

00:13:16.370 --> 00:13:17.440
dealing with a map.

00:13:17.440 --> 00:13:20.260
So some stuff like knowing
that we're passing in map

00:13:20.260 --> 00:13:23.730
objects and options for that
and reading through those

00:13:23.730 --> 00:13:27.340
rather than just being a
standard, any sort of object,

00:13:27.340 --> 00:13:28.930
MVC framework.

00:13:28.930 --> 00:13:29.040
CHRIS BROADFOOT: Yeah.

00:13:29.040 --> 00:13:32.070
I mean, if I were to do it
again, I probably would have

00:13:32.070 --> 00:13:35.230
taken some time to learn
AngularJS and see whether that

00:13:35.230 --> 00:13:36.220
would suit something
like this.

00:13:36.220 --> 00:13:40.340
But we're trying to get this
out the door and just work

00:13:40.340 --> 00:13:41.630
with what we know.

00:13:41.630 --> 00:13:44.270
And it's sort of nice
being able to reckon

00:13:44.270 --> 00:13:46.250
with all of the code.

00:13:46.250 --> 00:13:48.300
If you use a library like
Angular, there's so many

00:13:48.300 --> 00:13:51.700
moving parts that if you don't
know the library very well, it

00:13:51.700 --> 00:13:53.770
probably would have
slowed us down.

00:13:53.770 --> 00:13:59.050
Even using the director library,
which is quite small,

00:13:59.050 --> 00:14:00.860
we still had to step through
the code to figure out some

00:14:00.860 --> 00:14:03.240
bugs and figure out
what's going on.

00:14:03.240 --> 00:14:05.170
For example, if I look
at the setup JS

00:14:05.170 --> 00:14:07.810
file, there's a little--

00:14:07.810 --> 00:14:09.380
I would maybe call it a hack.

00:14:09.380 --> 00:14:13.140
But if the browser doesn't
have history support like

00:14:13.140 --> 00:14:18.200
older versions of IE and the
user navigated from a single

00:14:18.200 --> 00:14:22.920
page, then we'd have to redirect
to a hash slash URL

00:14:22.920 --> 00:14:27.730
so that the director library
would still route it properly.

00:14:27.730 --> 00:14:29.740
LUKE MAHE: And also then they
don't end up with a long URL

00:14:29.740 --> 00:14:31.660
slash or hash another
long URL.

00:14:34.520 --> 00:14:36.710
PAUL SAXMAN: So AngularJS,
probably a good place to start

00:14:36.710 --> 00:14:38.900
looking if you want to replicate
this kind of one

00:14:38.900 --> 00:14:40.260
map, multiple views--

00:14:40.260 --> 00:14:40.450
CHRIS BROADFOOT: Yeah.

00:14:40.450 --> 00:14:40.960
I think so.

00:14:40.960 --> 00:14:42.270
PAUL SAXMAN: --framework.

00:14:42.270 --> 00:14:44.360
And then developers look
at the code for the

00:14:44.360 --> 00:14:45.110
More Than a Map site.

00:14:45.110 --> 00:14:48.360
It's probably going to be a
little hairy, just because

00:14:48.360 --> 00:14:49.620
you're using compiled--

00:14:49.620 --> 00:14:51.510
LUKE MAHE: It's all compiled,
so it's going to be

00:14:51.510 --> 00:14:54.095
interesting to read if you feel
like viewing the source.

00:14:54.095 --> 00:14:55.570
But I think we're going
to try and open

00:14:55.570 --> 00:14:56.430
source a couple of demos.

00:14:56.430 --> 00:14:59.960
CHRIS BROADFOOT: Yeah,
that would be nice.

00:14:59.960 --> 00:15:03.285
PAUL SAXMAN: So can you show us
your favorite piece of code

00:15:03.285 --> 00:15:03.760
in the entire thing?

00:15:03.760 --> 00:15:06.350
LUKE MAHE: I think my favorite
piece of code would be the

00:15:06.350 --> 00:15:10.390
flights demo because it's
a lot of flights.

00:15:10.390 --> 00:15:13.250
And we're actually using
polylines with the new symbols

00:15:13.250 --> 00:15:14.540
on polylines.

00:15:14.540 --> 00:15:18.110
And what we did instead of just
having a constant loop

00:15:18.110 --> 00:15:20.990
that loops through every single
polyline and then moves

00:15:20.990 --> 00:15:24.415
the plane a little bit, we put
every single line in its own

00:15:24.415 --> 00:15:25.450
animation frame.

00:15:25.450 --> 00:15:27.470
So the line just animated
itself.

00:15:27.470 --> 00:15:29.720
And then when it got to the end
of its animation cycle,

00:15:29.720 --> 00:15:31.820
just cleared out the animation
frame for itself and

00:15:31.820 --> 00:15:32.790
then just moved on.

00:15:32.790 --> 00:15:35.040
And we found that the
performance with that was

00:15:35.040 --> 00:15:38.050
really great compared to just
constantly looping through an

00:15:38.050 --> 00:15:40.070
array of every single
line that you

00:15:40.070 --> 00:15:41.120
currently have active.

00:15:41.120 --> 00:15:42.730
CHRIS BROADFOOT: So I think the
reason for that is we were

00:15:42.730 --> 00:15:45.920
doing as much work as possible
within each frame.

00:15:45.920 --> 00:15:50.430
But if a particular plane didn't
make that frame, then

00:15:50.430 --> 00:15:52.300
it would just go into
the next frame.

00:15:52.300 --> 00:15:55.930
So as there's more and more
planes, it doesn't get less

00:15:55.930 --> 00:15:59.220
smooth, but the planes might
jump slightly more each time

00:15:59.220 --> 00:16:00.980
instead of--

00:16:00.980 --> 00:16:02.660
only some planes would
jump instead of

00:16:02.660 --> 00:16:03.890
all of them, I suppose.

00:16:03.890 --> 00:16:07.060
And the map is still
quite responsive.

00:16:07.060 --> 00:16:09.390
PAUL SAXMAN: And you're also
using symbols here, right?

00:16:09.390 --> 00:16:09.930
Marker symbols?

00:16:09.930 --> 00:16:10.760
LUKE MAHE: Yeah, we use
symbols on polylines.

00:16:10.760 --> 00:16:12.160
PAUL SAXMAN: So you have a

00:16:12.160 --> 00:16:14.400
vector-based plane and things--

00:16:14.400 --> 00:16:14.770
LUKE MAHE: Yeah.

00:16:14.770 --> 00:16:17.020
I loaded up Illustrator and
drew a little plane.

00:16:17.020 --> 00:16:18.720
And it's just a single
SVG path--

00:16:18.720 --> 00:16:21.290
CHRIS BROADFOOT:
Export to SVG.

00:16:21.290 --> 00:16:22.860
PAUL SAXMAN: The thing I really
liked about this demo,

00:16:22.860 --> 00:16:25.340
too, is you used--

00:16:25.340 --> 00:16:26.910
what did you call it again?

00:16:26.910 --> 00:16:28.450
So it's not a direct
line, right?

00:16:28.450 --> 00:16:28.560
LUKE MAHE: Yeah.

00:16:28.560 --> 00:16:32.090
We're using geodesic lines so
the planes fly on the curve.

00:16:32.090 --> 00:16:35.620
PAUL SAXMAN: And since you're
using the symbols, it actually

00:16:35.620 --> 00:16:38.980
adjusts its orientation
as it flies, which is

00:16:38.980 --> 00:16:40.270
a really cool effect.

00:16:40.270 --> 00:16:44.860
CHRIS BROADFOOT: So if we look
at the code for that one, it's

00:16:44.860 --> 00:16:46.780
flights demo.

00:16:46.780 --> 00:16:48.760
So you can see a little bit
of our framework here.

00:16:48.760 --> 00:16:51.090
We have a base demo class.

00:16:51.090 --> 00:16:56.340
So the flights demo just
bootstraps itself, calls up to

00:16:56.340 --> 00:16:59.680
the demo constructor.

00:16:59.680 --> 00:17:01.110
It sets a whole bunch
of options.

00:17:01.110 --> 00:17:05.640
So we've got the map style
as zoom and center.

00:17:05.640 --> 00:17:09.670
And then basically, when the
flights demo loads, a function

00:17:09.670 --> 00:17:12.270
called Init is called.

00:17:12.270 --> 00:17:13.660
And that's just on the
first load only.

00:17:13.660 --> 00:17:15.890
So we load in the data.

00:17:15.890 --> 00:17:20.660
And if we look at the Load Data
function, we use getJSON

00:17:20.660 --> 00:17:21.859
from jQuery.

00:17:21.859 --> 00:17:23.859
And once that's finished,
we call the Load

00:17:23.859 --> 00:17:25.750
Data Complete function.

00:17:25.750 --> 00:17:28.040
And you can see here that we're
using the underscore

00:17:28.040 --> 00:17:31.420
library to bind the function.

00:17:31.420 --> 00:17:33.090
So if you knew you were working
with one browser, you

00:17:33.090 --> 00:17:35.840
could just use the function
[INAUDIBLE]

00:17:35.840 --> 00:17:38.490
Bind that's built
into JavaScript.

00:17:38.490 --> 00:17:40.040
But again, cross-browser
compatibility.

00:17:44.720 --> 00:17:48.450
And then once the data is
finished loading, Load Data

00:17:48.450 --> 00:17:49.630
Complete is called.

00:17:49.630 --> 00:17:52.340
And the Start function
is called.

00:17:52.340 --> 00:17:55.160
And do you want to talk about
what happens here

00:17:55.160 --> 00:17:56.840
when Start is called?

00:17:56.840 --> 00:17:58.570
LUKE MAHE: So firstly, we just
take a copy of the array.

00:17:58.570 --> 00:18:01.560
So that way, if someone wants
to run the demo again, we

00:18:01.560 --> 00:18:03.450
don't get in the JSON file
again [? parsing ?]

00:18:03.450 --> 00:18:05.280
it.

00:18:05.280 --> 00:18:06.150
And then we just loop through.

00:18:06.150 --> 00:18:07.030
We set the time.

00:18:07.030 --> 00:18:08.500
And then--

00:18:08.500 --> 00:18:10.310
CHRIS BROADFOOT: So Set Map Time
is the interesting part.

00:18:10.310 --> 00:18:11.960
LUKE MAHE: Yeah.

00:18:11.960 --> 00:18:15.210
There is a magic number to
convert from the time number

00:18:15.210 --> 00:18:20.590
we have to what the time of
the actual flight was.

00:18:20.590 --> 00:18:22.600
And then we basically just loop
through all the flights

00:18:22.600 --> 00:18:24.680
that we have in that block
of time, create a

00:18:24.680 --> 00:18:26.170
new animation frame.

00:18:26.170 --> 00:18:28.330
CHRIS BROADFOOT: So I think
Add Flight is the most

00:18:28.330 --> 00:18:31.170
interesting part here.

00:18:31.170 --> 00:18:32.270
LUKE MAHE: So we have
the start and we

00:18:32.270 --> 00:18:35.410
have the end locations.

00:18:35.410 --> 00:18:37.090
That way, we can find
the distance.

00:18:37.090 --> 00:18:40.820
And just to be nice, we decided
that every plane flies

00:18:40.820 --> 00:18:45.970
at 950 kilometers an hour
because it just made sense.

00:18:45.970 --> 00:18:48.580
And that way, everything
just flowed well--

00:18:48.580 --> 00:18:53.020
which, apparently, is the
average flying speed.

00:18:53.020 --> 00:18:54.320
And so then we create
a symbol.

00:18:54.320 --> 00:18:56.920
And then depending on whether
it's flying into London or out

00:18:56.920 --> 00:18:58.650
of London, we set its color.

00:18:58.650 --> 00:19:00.060
Then here, we have a little
function that

00:19:00.060 --> 00:19:01.430
says Animate Plane.

00:19:01.430 --> 00:19:02.190
CHRIS BROADFOOT: So this
is probably the

00:19:02.190 --> 00:19:04.640
most interesting part.

00:19:04.640 --> 00:19:08.310
Animate Plane gets called
every frame when Request

00:19:08.310 --> 00:19:10.980
Animation Frame gets
called for it.

00:19:10.980 --> 00:19:12.230
It might miss a frame
sometimes.

00:19:14.740 --> 00:19:17.690
If the plane's in flight, then
we just move the icon.

00:19:17.690 --> 00:19:20.810
Once it reaches the destination,
it fades out.

00:19:20.810 --> 00:19:21.960
Actually, it stays there for--

00:19:21.960 --> 00:19:23.530
LUKE MAHE: It stays there for
a little bit and fades out.

00:19:23.530 --> 00:19:25.270
So you can see here, if
it's greater than

00:19:25.270 --> 00:19:27.050
100, we set its opacity.

00:19:27.050 --> 00:19:29.230
And then we start fading
out a bit.

00:19:29.230 --> 00:19:31.880
And then when it gets to 120,
we get rid of that polyline.

00:19:31.880 --> 00:19:34.210
And we don't call the
animation frame.

00:19:34.210 --> 00:19:35.060
PAUL SAXMAN: So all this fading

00:19:35.060 --> 00:19:36.450
is part of the markers--

00:19:36.450 --> 00:19:40.345
LUKE MAHE: We're just setting
the opacity just to make it

00:19:40.345 --> 00:19:40.960
look a bit nicer.

00:19:40.960 --> 00:19:42.095
The planes don't just
disappear as

00:19:42.095 --> 00:19:43.440
soon as they got there.

00:19:43.440 --> 00:19:43.660
CHRIS BROADFOOT: Yeah.

00:19:43.660 --> 00:19:45.660
So if you want to do
visualizations like this,

00:19:45.660 --> 00:19:51.280
definitely check out symbols
on polylines.

00:19:51.280 --> 00:19:53.470
I'll just quickly show
the earthquakes demo

00:19:53.470 --> 00:19:54.520
once that loads in.

00:19:54.520 --> 00:19:57.790
So this actually uses symbols
again, but symbols on markers.

00:19:57.790 --> 00:20:00.600
So because the symbols
aren't animating,

00:20:00.600 --> 00:20:01.980
it's just in a marker.

00:20:01.980 --> 00:20:04.350
And again, we use Request
Animation Frame for each

00:20:04.350 --> 00:20:05.660
earthquake.

00:20:05.660 --> 00:20:09.120
And once the quake has
disappeared, then the

00:20:09.120 --> 00:20:10.405
functions just disappear.

00:20:10.405 --> 00:20:12.510
This doesn't get called again.

00:20:12.510 --> 00:20:13.980
PAUL SAXMAN: And the marker is
for people that aren't really

00:20:13.980 --> 00:20:14.880
familiar with them.

00:20:14.880 --> 00:20:17.010
They're basically like vector
graphics, right?

00:20:17.010 --> 00:20:20.610
But you're defining it
in JSON or some kind

00:20:20.610 --> 00:20:21.370
of JavaScript notation?

00:20:21.370 --> 00:20:22.820
CHRIS BROADFOOT: So
it's an SVG path.

00:20:22.820 --> 00:20:24.630
It's not actually rendered
using SVG.

00:20:24.630 --> 00:20:26.900
Usually, it's rendered
using Canvas.

00:20:26.900 --> 00:20:28.910
But you define it using
an SVG path.

00:20:28.910 --> 00:20:32.370
And then you can set a fill
color, a stroke color, and

00:20:32.370 --> 00:20:35.705
stroke weight as well.

00:20:35.705 --> 00:20:37.890
And scale, of course,
and rotation.

00:20:37.890 --> 00:20:38.670
LUKE MAHE: And opacity.

00:20:38.670 --> 00:20:40.330
CHRIS BROADFOOT: Yes,
and opacity.

00:20:40.330 --> 00:20:41.650
So it's quite flexible.

00:20:41.650 --> 00:20:43.830
PAUL SAXMAN: Very cool.

00:20:43.830 --> 00:20:45.955
Chris, did you have any
code you wanted--

00:20:45.955 --> 00:20:49.350
are you also a big
fan of the--?

00:20:49.350 --> 00:20:51.520
LUKE MAHE: He likes
the earthquakes.

00:20:51.520 --> 00:20:53.744
That's because I built flights
and he built earthquakes.

00:20:53.744 --> 00:20:54.580
CHRIS BROADFOOT: I do like
the earthquakes, don't I?

00:20:54.580 --> 00:20:55.740
LUKE MAHE: We have this
little battle going.

00:20:55.740 --> 00:21:00.070
CHRIS BROADFOOT: Although I
think the population demo was

00:21:00.070 --> 00:21:02.715
the one that captured more
of the audience--

00:21:02.715 --> 00:21:03.070
PAUL SAXMAN: Oh, so
the heat maps?

00:21:03.070 --> 00:21:05.930
CHRIS BROADFOOT: --than
the ones I built.

00:21:05.930 --> 00:21:07.200
And I don't know why.

00:21:07.200 --> 00:21:11.140
I think it's probably
because it restarts.

00:21:11.140 --> 00:21:16.540
We traveled through
from 1950 to 2025.

00:21:16.540 --> 00:21:18.830
And after that, it just fades
out and then restarts.

00:21:18.830 --> 00:21:21.340
So I think people left it
up on their screen.

00:21:21.340 --> 00:21:23.130
LUKE MAHE: People just sat
there and watched it.

00:21:23.130 --> 00:21:24.380
It'd be cool if it
went backwards.

00:21:27.920 --> 00:21:29.700
CHRIS BROADFOOT: What
else is cool?

00:21:29.700 --> 00:21:31.550
PAUL SAXMAN: So this is
obviously using the heat maps.

00:21:31.550 --> 00:21:34.340
So you've loaded all the
heat map data for--

00:21:34.340 --> 00:21:37.880
did you have to actually
condense the data to get--?

00:21:37.880 --> 00:21:39.550
CHRIS BROADFOOT: So I
think it came from--

00:21:39.550 --> 00:21:42.150
it might have been World
Health Organization.

00:21:42.150 --> 00:21:43.740
I can't remember--

00:21:43.740 --> 00:21:46.390
some public data set.

00:21:46.390 --> 00:21:50.140
It was just all the different
years and different countries.

00:21:50.140 --> 00:21:54.050
And then I just interpolate
between the years that we

00:21:54.050 --> 00:21:56.260
actually have data.

00:21:56.260 --> 00:21:58.700
PAUL SAXMAN: So a very valuable
data set and not a

00:21:58.700 --> 00:22:01.140
lot of manipulation to
get it in a map.

00:22:01.140 --> 00:22:01.400
CHRIS BROADFOOT: Exactly.

00:22:01.400 --> 00:22:02.390
PAUL SAXMAN: Kind of
a story there.

00:22:02.390 --> 00:22:04.680
Good.

00:22:04.680 --> 00:22:06.030
CHRIS BROADFOOT: Do you
want to talk about--

00:22:06.030 --> 00:22:09.480
so we have this cool developer
stories page that fills up the

00:22:09.480 --> 00:22:10.510
whole screen.

00:22:10.510 --> 00:22:13.275
And as you scroll down, it
moves to the next slide.

00:22:13.275 --> 00:22:13.870
LUKE MAHE: Yeah.

00:22:13.870 --> 00:22:15.400
This was kind of cool.

00:22:15.400 --> 00:22:17.870
We originally did it with scroll
bars and it was just a

00:22:17.870 --> 00:22:18.390
bunch of [? divs ?]

00:22:18.390 --> 00:22:19.290
on a page.

00:22:19.290 --> 00:22:21.990
But then our designer thought
it would be cool not to have

00:22:21.990 --> 00:22:23.890
scroll bars and to use the
scroll wheel to just scroll

00:22:23.890 --> 00:22:25.180
sections at a time.

00:22:25.180 --> 00:22:29.140
And this was fun because the
Magic Mouse is an interesting

00:22:29.140 --> 00:22:31.060
thing to play with.

00:22:31.060 --> 00:22:33.050
Normal scroll wheels,
you get a value of

00:22:33.050 --> 00:22:34.320
negative one or one.

00:22:34.320 --> 00:22:36.880
But the Magic Mouse accelerates
and decelerates.

00:22:36.880 --> 00:22:39.640
So you get, depending on how
fast someone's scrolled, you

00:22:39.640 --> 00:22:42.660
get a number between negative
50 and positive 50.

00:22:42.660 --> 00:22:45.150
And it goes up and down and
keeps calling your function.

00:22:45.150 --> 00:22:46.740
So we had to do some
interesting things.

00:22:46.740 --> 00:22:50.740
If you scrolled, set a value and
time out to clear that if

00:22:50.740 --> 00:22:52.110
you're no longer scrolling.

00:22:52.110 --> 00:22:53.920
CHRIS BROADFOOT: This would
actually be a really good

00:22:53.920 --> 00:22:55.200
thing for someone to
write a library

00:22:55.200 --> 00:22:56.700
for and test it properly.

00:22:56.700 --> 00:23:01.440
Because we only had a variety
of mice to test it against.

00:23:01.440 --> 00:23:03.450
LUKE MAHE: It wasn't until our
designer says, like, I scroll

00:23:03.450 --> 00:23:06.900
and it just goes the
entire page.

00:23:06.900 --> 00:23:08.160
PAUL SAXMAN: I can attest.

00:23:08.160 --> 00:23:08.840
I use one.

00:23:08.840 --> 00:23:12.300
And most websites don't
do it right.

00:23:12.300 --> 00:23:13.632
CHRIS BROADFOOT: Should
we look at some of

00:23:13.632 --> 00:23:16.800
the code for that?

00:23:16.800 --> 00:23:17.670
LUKE MAHE: I don't know.

00:23:17.670 --> 00:23:20.340
PAUL SAXMAN: We're actually
getting close to time.

00:23:20.340 --> 00:23:21.030
LUKE MAHE: This was
kind of cool.

00:23:21.030 --> 00:23:23.330
So you can click on the circles
and we just animated,

00:23:23.330 --> 00:23:24.920
scrolled down to the bottom.

00:23:24.920 --> 00:23:27.710
And same thing with
the Magic Mouse.

00:23:27.710 --> 00:23:29.810
CHRIS BROADFOOT: And again, you
can see the URL changes.

00:23:29.810 --> 00:23:33.060
It seems like it's all on one
page, but the URL still

00:23:33.060 --> 00:23:36.030
updates so that people can
hotlink it to their friends.

00:23:36.030 --> 00:23:37.736
LUKE MAHE: So they can send a
link directly to that video in

00:23:37.736 --> 00:23:39.430
that section, which is nice.

00:23:39.430 --> 00:23:41.200
As you're scrolling down, even
though the page isn't

00:23:41.200 --> 00:23:44.050
updating, the URL
at the top is.

00:23:44.050 --> 00:23:45.340
CHRIS BROADFOOT: Oh, I should've
talked about

00:23:45.340 --> 00:23:46.790
analytics as well.

00:23:46.790 --> 00:23:47.850
PAUL SAXMAN: Oh, right.

00:23:47.850 --> 00:23:48.580
LUKE MAHE: That's cool.

00:23:48.580 --> 00:23:50.330
PAUL SAXMAN: Because you only
have one page load--

00:23:50.330 --> 00:23:51.200
LUKE MAHE: We have
one page load.

00:23:51.200 --> 00:23:55.190
So what we did was we have one
listener on the whole site for

00:23:55.190 --> 00:23:56.260
any [? A tag ?].

00:23:56.260 --> 00:23:59.300
And we just capture that event
and then handle the routing

00:23:59.300 --> 00:24:02.030
ourselves and also handle the
analytics tracking ourselves.

00:24:02.030 --> 00:24:04.270
CHRIS BROADFOOT: So whenever
the user navigates, we call

00:24:04.270 --> 00:24:07.710
this Log URL function that just
goes and gets the path

00:24:07.710 --> 00:24:09.080
from the router.

00:24:09.080 --> 00:24:13.160
So even if people aren't on
a HTML5 history supported

00:24:13.160 --> 00:24:17.040
browser, the page views still
tracked really nicely.

00:24:17.040 --> 00:24:21.460
So we had really, really great
analytics for this site.

00:24:21.460 --> 00:24:24.840
So Log URL's changed, called
on from the app

00:24:24.840 --> 00:24:27.080
controller's functions.

00:24:27.080 --> 00:24:28.330
PAUL SAXMAN: Very cool.

00:24:30.770 --> 00:24:33.660
So I think maybe we'll
wrap up with that.

00:24:33.660 --> 00:24:36.540
Thanks for flying up to--

00:24:36.540 --> 00:24:38.100
LUKE MAHE: Yes, we came
here just for this.

00:24:38.100 --> 00:24:40.200
PAUL SAXMAN: These guys are
actually here for--

00:24:40.200 --> 00:24:43.040
we're having a team meeting--

00:24:43.040 --> 00:24:43.735
CHRIS BROADFOOT: Shindig.

00:24:43.735 --> 00:24:45.310
PAUL SAXMAN: Shindig, yeah.

00:24:45.310 --> 00:24:48.270
I won't say what it is going
to be on the air, but it

00:24:48.270 --> 00:24:49.520
should be fun.

00:24:51.940 --> 00:24:53.160
Thanks for giving
the demo, guys.

00:24:53.160 --> 00:24:55.325
This is pretty awesome stuff.

00:24:55.325 --> 00:24:57.980
Definitely we'll see
what we can share.

00:24:57.980 --> 00:25:00.430
Like you mentioned, we're going
to share some demos out

00:25:00.430 --> 00:25:01.770
for developers at some point.

00:25:01.770 --> 00:25:03.090
LUKE MAHE: If anyone has
any questions, feel

00:25:03.090 --> 00:25:04.090
free to email us.

00:25:04.090 --> 00:25:04.720
PAUL SAXMAN: Yeah.

00:25:04.720 --> 00:25:05.530
I took a look.

00:25:05.530 --> 00:25:07.630
No questions right now.

00:25:07.630 --> 00:25:09.070
Let me take one more
with reload.

00:25:11.860 --> 00:25:14.630
I have to triple check and make
sure I had commenting on.

00:25:14.630 --> 00:25:15.880
Yeah, I know I did.

00:25:18.080 --> 00:25:21.196
If you guys have any questions
after you watch this, post it

00:25:21.196 --> 00:25:22.400
in the comments on YouTube.

00:25:22.400 --> 00:25:25.080
And we'll try to get
back to you guys.

00:25:25.080 --> 00:25:26.970
With that, thanks
for joining us.

00:25:26.970 --> 00:25:30.680
And we'll catch you guys in
about a week, probably--

00:25:30.680 --> 00:25:32.690
I know that's a Sydney week, but
you guys might be off the

00:25:32.690 --> 00:25:35.810
hook because we're here today.

00:25:35.810 --> 00:25:38.180
Anyways, we'll be either in
Sydney or Mountain View in

00:25:38.180 --> 00:25:39.930
about a week.

00:25:39.930 --> 00:25:42.220
Thanks again, and see
you guys later.

00:25:42.220 --> 00:25:43.720
CHRIS BROADFOOT: Thanks, Paul.

00:25:43.720 --> 00:25:51.467
[MUSIC PLAYING]

