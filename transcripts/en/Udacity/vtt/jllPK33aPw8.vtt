WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.272
Okay, so here is the code for our class

00:00:02.272 --> 00:00:05.254
Movie one more time, and now, I am really curious

00:00:05.254 --> 00:00:08.307
in figuring out what happens behind the scenes when

00:00:08.307 --> 00:00:11.857
I create the instance called avatar by providing these four

00:00:11.857 --> 00:00:15.236
pieces of information. These, by the way, are the

00:00:15.236 --> 00:00:19.028
movie's name, its story line, the link to the movie's

00:00:19.028 --> 00:00:22.279
poster image, and the link to its YouTube URL.

00:00:22.279 --> 00:00:25.051
By the way, the last two of these two things

00:00:25.051 --> 00:00:28.080
are clearly not links or URLs. They sound

00:00:28.080 --> 00:00:31.530
more like English phrases, and I did that because

00:00:31.530 --> 00:00:37.700
there wasn't enough room on the screen for me to add the full URLs or links. So,

00:00:37.700 --> 00:00:38.980
as soon as we run this line of

00:00:38.980 --> 00:00:42.730
code, the init function gets called. Self, in that

00:00:42.730 --> 00:00:46.130
case, is itself or the instance being created. Which

00:00:46.130 --> 00:00:50.840
is avatar. The variable movie_title gets the correct value,

00:00:50.840 --> 00:00:54.500
which is Avatar. The movie_storyline variable gets

00:00:54.500 --> 00:00:58.290
the correct value. The poster_image gets the

00:00:58.290 --> 00:01:02.500
correct value also. And finally, the trailer_youtube

00:01:02.500 --> 00:01:06.230
gets the correct trailer YouTube link. Okay,

00:01:06.230 --> 00:01:10.852
so far so good. Now, once init gets called and all of these four

00:01:10.852 --> 00:01:13.770
arguments receive their appropriate values, all of

00:01:13.770 --> 00:01:16.310
the variables that are associated with the instance

00:01:16.310 --> 00:01:20.200
avatar, they get initialized appropriately. So, at this

00:01:20.200 --> 00:01:23.960
point, if I say avatar.storyline, the program will print

00:01:23.960 --> 00:01:26.790
out the correct value. Okay, so now, I'm going

00:01:26.790 --> 00:01:29.490
to take a small step back and tie together

00:01:29.490 --> 00:01:31.240
a few pieces of information that we've been

00:01:31.240 --> 00:01:34.580
seeing. Here is our class Movie. And after defining

00:01:34.580 --> 00:01:37.368
the class Movie, I created two of its instances,

00:01:37.368 --> 00:01:41.190
toy_story and avatar. I could have created more instances,

00:01:41.190 --> 00:01:42.860
but for now, I've just created these

00:01:42.860 --> 00:01:46.350
two. Now, when I created these two instances,

00:01:46.350 --> 00:01:50.720
what I was really doing behind the scenes, is I was setting aside space for

00:01:50.720 --> 00:01:53.578
each instance. And within that space, each

00:01:53.578 --> 00:01:56.562
instance had their own copy of variables. These

00:01:56.562 --> 00:01:58.976
variables include title, storyline,

00:01:58.976 --> 00:02:02.346
poster_image_url and trailer_youtube_url. Here

00:02:02.346 --> 00:02:05.858
are toy_story's variables, and here are avatar's variables.

00:02:05.858 --> 00:02:11.026
Now, because these variables are unique to each instance of class movie, these

00:02:11.026 --> 00:02:15.962
variables are called instance variables. And that phrase, instance

00:02:15.962 --> 00:02:21.119
variables, is another new word that I will add to our list of words.

