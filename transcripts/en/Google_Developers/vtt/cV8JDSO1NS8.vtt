WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.416
[MUSIC PLAYING]

00:00:35.495 --> 00:00:36.980
MALE SPEAKER: Ladies
and gentlemen,

00:00:36.980 --> 00:00:38.890
please welcome Regina Dugan.

00:00:47.660 --> 00:00:49.350
REGINA DUGAN: For
the next 45 minutes,

00:00:49.350 --> 00:00:53.720
you're going to get a glimpse
of a small band of pirates

00:00:53.720 --> 00:00:55.220
trying to do epic shit.

00:00:59.920 --> 00:01:04.290
A small band of pirates
in a very fast boat.

00:01:04.290 --> 00:01:06.210
Welcome to ATAP.

00:01:06.210 --> 00:01:08.410
Here we don't tinker.

00:01:08.410 --> 00:01:10.170
We build new things.

00:01:10.170 --> 00:01:13.010
Sometimes seemingly
impossible things.

00:01:13.010 --> 00:01:15.140
We are optimized for speed.

00:01:15.140 --> 00:01:18.900
It is an essential
characteristic of our work.

00:01:18.900 --> 00:01:21.360
Our small internal
team is connected

00:01:21.360 --> 00:01:24.070
to hundreds of external teams.

00:01:24.070 --> 00:01:28.740
It's how we tackle hard problems
at the intersection of high end

00:01:28.740 --> 00:01:31.310
push to the edge
hardware and software,

00:01:31.310 --> 00:01:36.030
at the intersection of tech and
art, science and application,

00:01:36.030 --> 00:01:40.370
problems you can't
solve by yourself.

00:01:40.370 --> 00:01:43.620
And it's how we do so
without compromising

00:01:43.620 --> 00:01:48.590
the tech or the beauty
or a sense of soul.

00:01:48.590 --> 00:01:53.880
We have protectors of all
of these elements with us.

00:01:53.880 --> 00:01:57.480
There are 11 projects
ongoing at present in ATAP

00:01:57.480 --> 00:01:59.780
and partners all around them.

00:01:59.780 --> 00:02:02.730
This is the global
web of our partners.

00:02:02.730 --> 00:02:06.780
We believe this yields
better solutions and faster.

00:02:06.780 --> 00:02:11.500
In the last two years we have
worked with 305 partners,

00:02:11.500 --> 00:02:14.820
in 22 countries, on
three continents.

00:02:14.820 --> 00:02:18.360
Universities, start-ups,
large system integrators,

00:02:18.360 --> 00:02:21.290
governments, and nonprofits.

00:02:21.290 --> 00:02:24.940
The answer is out
there somewhere

00:02:24.940 --> 00:02:28.870
if we are just humble
enough to find it.

00:02:28.870 --> 00:02:33.280
This approach also lets
us do large scale research

00:02:33.280 --> 00:02:35.980
and ship both.

00:02:35.980 --> 00:02:39.790
We dare to dream and do.

00:02:39.790 --> 00:02:45.540
ATAP is full of doer
dreamers like many of you.

00:02:45.540 --> 00:02:52.780
And our goal is to close the
gap between what if and what is.

00:02:52.780 --> 00:02:55.140
We're going to talk a
lot of tech this morning.

00:02:55.140 --> 00:02:57.690
We'll talk about 3
out of the 11 projects

00:02:57.690 --> 00:02:59.430
currently ongoing in ATAP.

00:02:59.430 --> 00:03:01.980
Three projects in 45 minutes.

00:03:01.980 --> 00:03:03.930
They are proof points.

00:03:03.930 --> 00:03:06.880
Johnny Lee, Paul Eremenko,
and Rachid El Guerrab

00:03:06.880 --> 00:03:08.190
lead these projects.

00:03:08.190 --> 00:03:10.840
They are ATAP technical
project leads.

00:03:10.840 --> 00:03:13.650
They come for two years.

00:03:13.650 --> 00:03:17.230
No one comes to build
a career in ATAP.

00:03:17.230 --> 00:03:22.040
You come to build something,
to do your best work.

00:03:22.040 --> 00:03:25.410
We're going to start off with
Johnny, interface technology

00:03:25.410 --> 00:03:28.360
expert, core
contributor to Kinect,

00:03:28.360 --> 00:03:31.340
a top rated Ted
talk using Wiimotes.

00:03:31.340 --> 00:03:35.220
Now Project Tango lead, trying
to make the future awesome,

00:03:35.220 --> 00:03:38.330
and a tablet that sees in 3D.

00:03:38.330 --> 00:03:40.450
Paul will be up next.

00:03:40.450 --> 00:03:44.240
Evangelist for the power
of open, complexity geek,

00:03:44.240 --> 00:03:47.820
done designer, rocket
scientist, and occasional pilot.

00:03:47.820 --> 00:03:53.630
MIT, Caltech, Georgetown,
currently head of Project Ara.

00:03:53.630 --> 00:03:57.110
And a guest appearance
from Glen Keane.

00:03:57.110 --> 00:04:00.980
Animator, storyteller,
and champion of the hand

00:04:00.980 --> 00:04:02.390
drawn line.

00:04:02.390 --> 00:04:03.860
Disney legend.

00:04:03.860 --> 00:04:08.170
Creator of beloved characters
from Ariel to Aladdin.

00:04:08.170 --> 00:04:13.030
And now ATAP upcoming
spotlight story, "duet."

00:04:13.030 --> 00:04:14.580
Johnny, the floor is yours.

00:04:24.069 --> 00:04:25.110
JOHNNY LEE: Well, thanks.

00:04:25.110 --> 00:04:26.522
Thanks for that warm welcome.

00:04:26.522 --> 00:04:28.230
It's a pleasure to be
here and I'm really

00:04:28.230 --> 00:04:31.610
excited to be able to talk
you guys about Project Tango.

00:04:31.610 --> 00:04:34.610
So Project Tango is an effort
that we've been pushing on

00:04:34.610 --> 00:04:40.260
to try to give devices a human
scale understanding of space

00:04:40.260 --> 00:04:42.130
and motion.

00:04:42.130 --> 00:04:44.940
Each of us do something
remarkable everyday.

00:04:44.940 --> 00:04:47.740
You sitting in your
seat roughly understand

00:04:47.740 --> 00:04:51.800
the size of this room, as well
as the position and orientation

00:04:51.800 --> 00:04:54.600
of the person sitting next
to you, as well as yourself.

00:04:54.600 --> 00:04:56.730
And this is a spatial
awareness is remarkable,

00:04:56.730 --> 00:04:58.810
yet we take it for
granted every day.

00:04:58.810 --> 00:05:00.720
Because it's a human
perception system

00:05:00.720 --> 00:05:02.310
that does this just for free.

00:05:02.310 --> 00:05:04.890
But our phones, or
tablets, and our laptops

00:05:04.890 --> 00:05:07.552
have no understanding of
the spacial relationship.

00:05:07.552 --> 00:05:09.010
Yet, it's so
fundamental to the way

00:05:09.010 --> 00:05:11.200
that we interact with each
other as well as the way

00:05:11.200 --> 00:05:13.270
we interact with things.

00:05:13.270 --> 00:05:15.790
So, what if you had
this in a device?

00:05:15.790 --> 00:05:16.890
What could you do?

00:05:16.890 --> 00:05:20.510
Well imagine if they directions
to your last destination

00:05:20.510 --> 00:05:22.010
didn't stop just
at the front door,

00:05:22.010 --> 00:05:24.110
but could actually take
you to the exact room

00:05:24.110 --> 00:05:25.400
that you want to get to.

00:05:25.400 --> 00:05:28.240
Or it could allow the visually
impaired navigate spaces

00:05:28.240 --> 00:05:30.240
that they've never
been in before.

00:05:30.240 --> 00:05:31.850
You could play
games in your house

00:05:31.850 --> 00:05:35.410
where you use the
furniture as castles

00:05:35.410 --> 00:05:38.280
or you play hide and seek with
game characters who actually

00:05:38.280 --> 00:05:41.520
know where your closet
is and can go hide there.

00:05:41.520 --> 00:05:44.450
You could also enable emerging
applications such as robotics,

00:05:44.450 --> 00:05:46.697
such as allowing free
flying robots to navigate

00:05:46.697 --> 00:05:47.780
through the space station.

00:05:47.780 --> 00:05:49.980
Which is, we have one of
our Project Tango devices

00:05:49.980 --> 00:05:53.827
going up in August into the ISS.

00:05:53.827 --> 00:05:55.410
Now the reason we
think we can do this

00:05:55.410 --> 00:05:57.860
now is because, if you look
at the amount of computing

00:05:57.860 --> 00:05:59.820
power available on
mobile processors,

00:05:59.820 --> 00:06:02.320
it is grown exponentially
as with everything else.

00:06:02.320 --> 00:06:04.030
This is a very common
Moore's law chart,

00:06:04.030 --> 00:06:06.250
I'm sure you're familiar
with, with an example,

00:06:06.250 --> 00:06:07.450
mobile processors.

00:06:07.450 --> 00:06:10.300
And today we have processes
like the Tegra K1,

00:06:10.300 --> 00:06:12.316
with a tremendous amount
of computing power.

00:06:12.316 --> 00:06:13.690
But what's really
interesting is,

00:06:13.690 --> 00:06:16.060
if you plot another device
on this chart, which

00:06:16.060 --> 00:06:20.790
is the vehicle that won the
2005 DARPA Grand Challenge.

00:06:20.790 --> 00:06:24.290
So the modern processors we
have and that we can buy today

00:06:24.290 --> 00:06:26.270
actually exceeds the
amount of compute

00:06:26.270 --> 00:06:30.090
necessary to drive
132 miles autonomously

00:06:30.090 --> 00:06:31.810
through the Mojave Desert.

00:06:31.810 --> 00:06:33.750
So the compute is here.

00:06:33.750 --> 00:06:37.300
The compute is genuinely
here to do amazing things

00:06:37.300 --> 00:06:38.380
with our devices.

00:06:38.380 --> 00:06:41.820
What's missing is the
hardware and software.

00:06:41.820 --> 00:06:43.620
So Project Tango
is a focused effort

00:06:43.620 --> 00:06:45.620
to work with the hardware
and software ecosystem

00:06:45.620 --> 00:06:51.220
to advance the state of 3D
sensing on mobile hardware.

00:06:51.220 --> 00:06:53.820
As Regina mentioned, one
of the way ATAP operates,

00:06:53.820 --> 00:06:56.260
we work with a very large
network of partners.

00:06:56.260 --> 00:06:58.580
We work with device
manufacturing, engineering

00:06:58.580 --> 00:07:03.860
support, processor vendors, IMU,
gyro and accelerometer vendors,

00:07:03.860 --> 00:07:06.730
lenses, cameras sensors,
depth sensors, optics,

00:07:06.730 --> 00:07:09.010
partners within Google,
computer vision companies,

00:07:09.010 --> 00:07:11.870
and universities all
spanning nine countries

00:07:11.870 --> 00:07:14.029
around the world.

00:07:14.029 --> 00:07:16.320
So let me give you a quick
tour of our hardware journey

00:07:16.320 --> 00:07:18.530
up to where we've been to today.

00:07:18.530 --> 00:07:21.820
So we've actually built four
platforms over the past 18

00:07:21.820 --> 00:07:23.294
months.

00:07:23.294 --> 00:07:24.710
Each of these were
built to answer

00:07:24.710 --> 00:07:26.780
a very specific question.

00:07:26.780 --> 00:07:28.560
And I'll just walk
through them quickly.

00:07:28.560 --> 00:07:31.910
First we built a USB peripheral
with commodities parts.

00:07:31.910 --> 00:07:34.010
Commodity cameras,
commodity sensors.

00:07:34.010 --> 00:07:35.850
And this was to ask
can we actually run

00:07:35.850 --> 00:07:38.060
these decades of
robotics and computers

00:07:38.060 --> 00:07:40.780
and algorithms on
consumer grade hardware?

00:07:40.780 --> 00:07:43.400
And the answer was, yes, we can.

00:07:43.400 --> 00:07:45.370
The second prototype
was a tablet

00:07:45.370 --> 00:07:46.440
we built in three months.

00:07:46.440 --> 00:07:48.540
And the question
was to ask, can we

00:07:48.540 --> 00:07:50.080
actually run all
these algorithms

00:07:50.080 --> 00:07:51.790
on a mobile processor?

00:07:51.790 --> 00:07:54.600
And the answer was also yes.

00:07:54.600 --> 00:07:57.400
The phone prototype we talked
about earlier this year

00:07:57.400 --> 00:07:59.600
was our effort to
reduce the size

00:07:59.600 --> 00:08:03.620
of the lenses and the cameras
to respect the form factor

00:08:03.620 --> 00:08:05.970
requirements to fit in the
modern phone or tablet, which

00:08:05.970 --> 00:08:08.220
is things like this six
millimeters z height

00:08:08.220 --> 00:08:09.280
for the sensors.

00:08:09.280 --> 00:08:12.680
And indeed, these
devices also did work.

00:08:12.680 --> 00:08:15.890
Now we have the culmination
of the work of everyone

00:08:15.890 --> 00:08:19.990
within our network over the past
18 months to bring us to this.

00:08:19.990 --> 00:08:22.690
this is our current
prototype, our DevKit

00:08:22.690 --> 00:08:24.970
that will be making
available next year.

00:08:24.970 --> 00:08:26.920
And we build this
device from the ground

00:08:26.920 --> 00:08:31.150
up to do 3D and from the
ground up to for compute.

00:08:31.150 --> 00:08:34.750
It has our high performance,
4 megapixel, 2 micron camera.

00:08:34.750 --> 00:08:37.809
This is a very high speed
light sensitive sensor.

00:08:37.809 --> 00:08:40.150
We have our customized
motion tracking camera

00:08:40.150 --> 00:08:42.080
that allows the
device to understand

00:08:42.080 --> 00:08:44.366
it's motion in 3D space.

00:08:44.366 --> 00:08:45.990
We've also worked
with hardware vendors

00:08:45.990 --> 00:08:49.180
to force the improvements of
the performance of these devices

00:08:49.180 --> 00:08:52.510
to fit into a device
to do 3D sensing.

00:08:52.510 --> 00:08:56.130
That gives us geometry about
the floor and the walls.

00:08:56.130 --> 00:08:58.580
Then we found the--
well, one a partner

00:08:58.580 --> 00:09:01.310
that was interested in building
this device with us-- to put

00:09:01.310 --> 00:09:05.880
in the most powerful processes
that we could find and pack it

00:09:05.880 --> 00:09:08.490
with as much RAM and
storage as a laptop.

00:09:08.490 --> 00:09:10.080
So this was designed
for developers

00:09:10.080 --> 00:09:13.480
to explore 3D compute.

00:09:13.480 --> 00:09:15.840
A little peak into
the software side now.

00:09:15.840 --> 00:09:18.230
On the left side, you'll
see the fish eye image.

00:09:18.230 --> 00:09:20.050
If you think about
human vision, we

00:09:20.050 --> 00:09:22.100
have this amazing
peripheral vision.

00:09:22.100 --> 00:09:24.364
We are able to see
far out to the sides,

00:09:24.364 --> 00:09:26.280
but we also have this
area of the center there

00:09:26.280 --> 00:09:29.530
we have detail, our foveated
region, and what these two

00:09:29.530 --> 00:09:32.780
cameras do is give us something
analogous to human vision.

00:09:32.780 --> 00:09:36.060
Where we have a wide fish eye
camera and a more traditional

00:09:36.060 --> 00:09:37.850
field of view camera as well.

00:09:37.850 --> 00:09:39.579
You'll also notice
in the bottom left

00:09:39.579 --> 00:09:41.120
that there's these
little white dots.

00:09:41.120 --> 00:09:43.290
This is actually a
carefully timestamped gyro

00:09:43.290 --> 00:09:44.740
and accelerometer data.

00:09:44.740 --> 00:09:47.580
The motion sensors in a phone is
very much similar to the motion

00:09:47.580 --> 00:09:49.300
sensors you have an inner ear.

00:09:49.300 --> 00:09:52.490
So this allows us to have
both the eyes and the motion

00:09:52.490 --> 00:09:56.690
sensing capabilities
of human perception.

00:09:56.690 --> 00:09:58.190
A little bit about
the depth sensor.

00:09:58.190 --> 00:10:00.670
At a very simplistic
level, it essentially

00:10:00.670 --> 00:10:04.340
it's a sensor that sees
shape instead of color.

00:10:04.340 --> 00:10:06.770
On the left you'll see a
more traditional image,

00:10:06.770 --> 00:10:07.650
taken with a camera.

00:10:07.650 --> 00:10:09.733
You can see all the color
and shading and lighting

00:10:09.733 --> 00:10:10.540
of the scene.

00:10:10.540 --> 00:10:11.914
But on the right,
you'll actually

00:10:11.914 --> 00:10:13.610
see this is what the
depth sensor sees.

00:10:13.610 --> 00:10:16.020
It just gives us information
about the contours

00:10:16.020 --> 00:10:18.190
and the shape of all the
furniture, regardless

00:10:18.190 --> 00:10:20.500
of the color, and
to some degree,

00:10:20.500 --> 00:10:23.780
independence of the
lighting conditions.

00:10:23.780 --> 00:10:27.300
When we combine all the tracking
data and the sensing data

00:10:27.300 --> 00:10:29.790
together, we end up
being able to fuse it

00:10:29.790 --> 00:10:31.550
into a single estimate
of both the devices

00:10:31.550 --> 00:10:34.320
position and the environment.

00:10:34.320 --> 00:10:36.400
This is a video of
Joel Hesch, who's

00:10:36.400 --> 00:10:38.850
one of the computer vision
engineers on the team.

00:10:38.850 --> 00:10:40.350
You'll see on the
left side, this

00:10:40.350 --> 00:10:43.420
is the raw data coming into the
system, the camera, the motion

00:10:43.420 --> 00:10:44.489
sensors on the bottom.

00:10:44.489 --> 00:10:46.530
And what we compute is
what's on the right, which

00:10:46.530 --> 00:10:49.564
is the trajectory of
the device in real time.

00:10:49.564 --> 00:10:50.980
So what he's doing
is he's walking

00:10:50.980 --> 00:10:54.159
around the first floor of this
40,000 square foot building.

00:10:54.159 --> 00:10:55.700
And you can actually
see in real time

00:10:55.700 --> 00:10:58.620
it's estimating his position
throughout that space.

00:10:58.620 --> 00:11:01.100
Now because we just use the
cameras and the motion sensors,

00:11:01.100 --> 00:11:04.430
this is a full 3D
directory, it is not

00:11:04.430 --> 00:11:05.921
restricted to a single plane.

00:11:05.921 --> 00:11:07.305
[APPLAUSE]

00:11:07.305 --> 00:11:07.805
Thanks.

00:11:11.573 --> 00:11:13.650
And you can actually
see the sort of coil

00:11:13.650 --> 00:11:15.890
as he goes up the stairwell.

00:11:15.890 --> 00:11:18.980
Now remember, there's no
GPS, there's no Wi-Fi,

00:11:18.980 --> 00:11:20.210
there's no Bluetooth.

00:11:20.210 --> 00:11:23.380
This is just using the cameras
and the motion sensors.

00:11:23.380 --> 00:11:25.620
The only requirement that
we have in the environment

00:11:25.620 --> 00:11:26.397
is we have light.

00:11:26.397 --> 00:11:28.480
Which is similar to the
[INAUDIBLE] of requirement

00:11:28.480 --> 00:11:31.560
that you have to walk
through the space.

00:11:31.560 --> 00:11:34.590
What he's doing here is he's now
walked across, up five flights

00:11:34.590 --> 00:11:38.040
of stairs, across this entire
building, down five flights

00:11:38.040 --> 00:11:40.740
of stairs, back to
his original location.

00:11:40.740 --> 00:11:42.340
And this is a very
simple test for us

00:11:42.340 --> 00:11:44.290
to understand how
well we're doing.

00:11:44.290 --> 00:11:46.780
And it turns out that we
have about 1% of drift

00:11:46.780 --> 00:11:49.675
over path length driven.

00:11:49.675 --> 00:11:52.570
[APPLAUSE]

00:11:52.570 --> 00:11:53.070
Thanks.

00:11:58.890 --> 00:12:00.844
Now, when we combine
the tracking information

00:12:00.844 --> 00:12:02.260
with the depth
sensor, we actually

00:12:02.260 --> 00:12:04.880
are now able to capture
geometry of the environment.

00:12:04.880 --> 00:12:07.400
This is Yvonne, one of the
interns on the project.

00:12:07.400 --> 00:12:10.260
This is a false color image
where red is low and blue

00:12:10.260 --> 00:12:11.010
is high.

00:12:11.010 --> 00:12:14.260
But you can see that it's
capturing the floor, the walls,

00:12:14.260 --> 00:12:16.856
and the stairs as we walk up.

00:12:16.856 --> 00:12:19.540
In just a second it's going to
show you this top down view.

00:12:19.540 --> 00:12:21.290
Which you can
essentially see that,

00:12:21.290 --> 00:12:22.750
even after five
flights of travel,

00:12:22.750 --> 00:12:25.690
we can still see down the
middle of the stairwell.

00:12:25.690 --> 00:12:27.960
Again, the accuracy in
alignment of the data

00:12:27.960 --> 00:12:31.310
is on the order of 1%.

00:12:31.310 --> 00:12:35.730
So you've probably seen stands
like this with 10,000 or 1,000

00:12:35.730 --> 00:12:37.700
laser scanners and
industrial scanning.

00:12:37.700 --> 00:12:39.420
But what's new is
the push to make

00:12:39.420 --> 00:12:43.334
this happen on the
consumer scale device.

00:12:43.334 --> 00:12:45.000
Now, scanning stairwells
isn't something

00:12:45.000 --> 00:12:45.880
most people need to do.

00:12:45.880 --> 00:12:47.350
It's actually a
nice test structure

00:12:47.350 --> 00:12:50.840
because this has x, y,
and the z variation so we

00:12:50.840 --> 00:12:53.520
can see our accuracy
along every dimension.

00:12:53.520 --> 00:12:55.080
But you can imagine,
once we get this

00:12:55.080 --> 00:12:56.660
into the hands of
consumers, they

00:12:56.660 --> 00:13:01.879
can do things like capture
the geometry of their house.

00:13:01.879 --> 00:13:03.420
So this is me walking
around with one

00:13:03.420 --> 00:13:05.820
the prototypes, walking
around my house.

00:13:05.820 --> 00:13:08.990
Again, red is the floor
and blues is the walls.

00:13:08.990 --> 00:13:13.750
But this is me walking around
my living room, a laundry room,

00:13:13.750 --> 00:13:17.580
guest bathroom,
and other bedroom.

00:13:17.580 --> 00:13:19.210
I'm basically walking
around my house

00:13:19.210 --> 00:13:21.300
as quickly as I
would naturally walk.

00:13:21.300 --> 00:13:23.270
I don't have to move
particularly slowly,

00:13:23.270 --> 00:13:25.960
I just sort of point it as
though I'm giving someone

00:13:25.960 --> 00:13:28.539
else a tour of my house.

00:13:28.539 --> 00:13:29.955
In a second it's
going to show you

00:13:29.955 --> 00:13:32.700
a zoom in of one of the rooms.

00:13:32.700 --> 00:13:35.520
You can see that the real time
structure is relatively coarse,

00:13:35.520 --> 00:13:38.000
but this is already enough
geometry for game developers

00:13:38.000 --> 00:13:40.208
or some one who had to make
a game where soldiers had

00:13:40.208 --> 00:13:44.227
to like attack your
bathtub if you wanted to.

00:13:44.227 --> 00:13:46.310
But if you actually capture
the data and store it,

00:13:46.310 --> 00:13:47.268
you can do much better.

00:13:47.268 --> 00:13:49.160
So this is a partner
called Matterport

00:13:49.160 --> 00:13:50.580
where we get one of our devices.

00:13:50.580 --> 00:13:52.890
And if you store the data,
and do offline processing,

00:13:52.890 --> 00:13:55.080
the quality that you can
produce from these devices

00:13:55.080 --> 00:13:55.760
is much higher.

00:14:04.780 --> 00:14:06.787
This is cool stuff, isn't it?

00:14:06.787 --> 00:14:08.370
So we're going to
switch to the tablet

00:14:08.370 --> 00:14:11.630
to show you some real demos,
some real life real time demos.

00:14:11.630 --> 00:14:12.500
Do we have a tablet?

00:14:15.770 --> 00:14:18.240
Hello?

00:14:18.240 --> 00:14:19.320
All right, great.

00:14:19.320 --> 00:14:21.630
So we have been having a
little bit of HDMI trouble,

00:14:21.630 --> 00:14:23.129
so there will be
some black screens,

00:14:23.129 --> 00:14:26.000
but we're supposed to
recover from those.

00:14:26.000 --> 00:14:27.950
OK, so let me first
show you the tracking.

00:14:30.530 --> 00:14:32.930
So this is our 7 inch prototype
tablet development kit.

00:14:32.930 --> 00:14:35.600
And you can see, what's on
the left side is basically

00:14:35.600 --> 00:14:37.980
the image from the camera.

00:14:37.980 --> 00:14:40.180
There you go, stabilize please.

00:14:40.180 --> 00:14:42.230
So we can see the fish eye lens.

00:14:45.140 --> 00:14:46.020
All right.

00:14:46.020 --> 00:14:47.740
You can see the fish
eye lens on the left

00:14:47.740 --> 00:14:51.686
and also the hardware
accelerated tracking.

00:14:51.686 --> 00:14:52.570
Come on, guys.

00:14:56.314 --> 00:14:59.348
OK, I'll hold the cable.

00:14:59.348 --> 00:15:01.820
Come on.

00:15:01.820 --> 00:15:03.410
All right, maybe if
I do it this way.

00:15:03.410 --> 00:15:08.270
All right, so if you see
they camera lens on the left.

00:15:08.270 --> 00:15:10.308
Wow, you can do it.

00:15:10.308 --> 00:15:13.220
All right, let's switch
to the other device.

00:15:13.220 --> 00:15:13.720
Apologies.

00:15:19.780 --> 00:15:20.775
AV issues.

00:15:30.210 --> 00:15:34.340
So we have the camera
on the left, all right.

00:15:34.340 --> 00:15:36.740
We are going to
switch to that TV.

00:15:36.740 --> 00:15:41.405
That is our third backup.

00:15:41.405 --> 00:15:44.830
Well, I don't want to
risk it jumping out,

00:15:44.830 --> 00:15:46.350
so I apologize to you guys.

00:16:02.650 --> 00:16:03.780
Can we switch to that TV?

00:16:18.450 --> 00:16:23.185
And can we get the camera
on the TV up to this screen?

00:16:23.185 --> 00:16:25.790
Otherwise we'll just,
don't want this to be,

00:16:25.790 --> 00:16:28.320
this is still this tablet.

00:16:28.320 --> 00:16:29.050
All right.

00:16:34.110 --> 00:16:37.320
So on the left side, you'll see
the camera that actually has--

00:16:37.320 --> 00:16:37.820
[CHEERING]

00:16:37.820 --> 00:16:38.778
--yes, the [INAUDIBLE].

00:16:44.150 --> 00:16:46.000
On the left side, you
see the fish eye lens,

00:16:46.000 --> 00:16:48.000
and you actually see these
hard work accelerated

00:16:48.000 --> 00:16:48.730
feature tracks.

00:16:48.730 --> 00:16:52.170
And this basically gives us
the motion of the device.

00:16:52.170 --> 00:16:54.350
The gyro and accelerometer
of these little wave

00:16:54.350 --> 00:16:55.590
forms underneath.

00:16:55.590 --> 00:16:57.650
Now, if I turn the
camera left and right,

00:16:57.650 --> 00:16:59.759
you see the cone
swiping back and forth.

00:16:59.759 --> 00:17:01.550
But what's different
is that we're actually

00:17:01.550 --> 00:17:02.880
able to track the motion.

00:17:02.880 --> 00:17:06.869
So if I move left and right it's
actually tracking my position.

00:17:06.869 --> 00:17:10.030
And if I make a big
circle, it actually

00:17:10.030 --> 00:17:11.819
is tracking me in real time.

00:17:17.950 --> 00:17:19.551
So if I wasn't
tethered to this cable,

00:17:19.551 --> 00:17:21.300
I could actually just
unplug, and actually

00:17:21.300 --> 00:17:22.883
walk through the
entire Moscone Center

00:17:22.883 --> 00:17:25.280
and it would be tracking my
position in full 6 degree

00:17:25.280 --> 00:17:28.119
freedom, continuously.

00:17:28.119 --> 00:17:31.540
Now let me give you a
quick example of some demos

00:17:31.540 --> 00:17:33.350
that we've built using this.

00:17:33.350 --> 00:17:35.650
These are all built inside
of the Unity game engine.

00:17:35.650 --> 00:17:37.940
And this is an something
extremely simple puzzle game,

00:17:37.940 --> 00:17:39.690
where if I move the
yellow cube and put it

00:17:39.690 --> 00:17:42.399
on the yellow switch, it
makes more blocks appear.

00:17:42.399 --> 00:17:44.190
But you can see the
blue cube and the blues

00:17:44.190 --> 00:17:45.480
are far separated.

00:17:45.480 --> 00:17:49.560
So I actually have to move
forward to hit this switch.

00:17:54.818 --> 00:17:57.515
And because I can't actually
reach this green switch,

00:17:57.515 --> 00:17:59.140
I'm actually going
to have to throw it.

00:18:02.097 --> 00:18:03.055
Ah, I threw it too far.

00:18:06.330 --> 00:18:08.700
Here I go.

00:18:08.700 --> 00:18:09.200
Yes!

00:18:13.650 --> 00:18:15.790
This is another tech
demo that we built inside

00:18:15.790 --> 00:18:17.071
of Unity game engine.

00:18:17.071 --> 00:18:19.570
And if you imagine once you
have the geometry of your house,

00:18:19.570 --> 00:18:21.403
and you want to create
sort of fantasy lands

00:18:21.403 --> 00:18:24.780
in different rooms, you
can use the device just

00:18:24.780 --> 00:18:26.717
to control the camera
as you look around.

00:18:26.717 --> 00:18:28.800
But you can see there's
this wizard on the ground,

00:18:28.800 --> 00:18:30.410
but he's only about
six inches tall.

00:18:30.410 --> 00:18:32.410
So if I want to get down
to his level the world,

00:18:32.410 --> 00:18:35.330
all I have to do is squat down.

00:18:35.330 --> 00:18:36.850
As if he's right in front of me.

00:18:36.850 --> 00:18:39.830
So I can look at the
trees and the stones

00:18:39.830 --> 00:18:42.407
and then sort of interact
with him directly.

00:18:42.407 --> 00:18:44.240
But if I want to interact
with the main map,

00:18:44.240 --> 00:18:48.479
I just sort of stand back up,
and say, hey go over there.

00:18:48.479 --> 00:18:50.395
And he'll sort of walk
over in that direction.

00:18:55.500 --> 00:18:57.190
The other demo I
want to show you

00:18:57.190 --> 00:19:00.120
is something I that one
of our university partners

00:19:00.120 --> 00:19:02.190
just got working very recently.

00:19:02.190 --> 00:19:05.660
And this combines both the depth
sensing data and the tracking

00:19:05.660 --> 00:19:07.590
data together.

00:19:07.590 --> 00:19:09.470
So what's going on
here is I'm actually

00:19:09.470 --> 00:19:17.000
building a 3-D map of
the stage in real time.

00:19:17.000 --> 00:19:18.330
[GROANING]

00:19:18.330 --> 00:19:20.402
Here we go.

00:19:20.402 --> 00:19:20.902
Come on.

00:19:26.160 --> 00:19:28.320
We learned a lot of new
things on this project, so.

00:19:34.710 --> 00:19:38.010
So I can sort of
map up this wall

00:19:38.010 --> 00:19:40.540
and it'll start to
texture it and capture it

00:19:40.540 --> 00:19:42.940
as I walk around.

00:19:42.940 --> 00:19:45.960
So as the hardware and
software both become better,

00:19:45.960 --> 00:19:50.390
this type of technology will
become part of the tools

00:19:50.390 --> 00:19:52.490
that we want to provide,
but it's not there today.

00:19:52.490 --> 00:19:57.590
We're currently working actively
with both companies as well as

00:19:57.590 --> 00:19:59.667
universities to improve
the software [INAUDIBLE].

00:19:59.667 --> 00:20:01.000
So can we go back to the slides?

00:20:07.049 --> 00:20:09.340
So, as I mentioned, we want
to do this in collaboration

00:20:09.340 --> 00:20:12.394
with both the hardware and
software entities out there.

00:20:12.394 --> 00:20:14.935
We're excited to announce that
we've started early engagement

00:20:14.935 --> 00:20:17.790
with LG to make a consumer
scale device next year.

00:20:22.630 --> 00:20:24.960
We have early integrations
with both Unity

00:20:24.960 --> 00:20:27.060
and the Unreal engine
and Qualcomm Vuforia,

00:20:27.060 --> 00:20:29.890
so if you already know how
to work with these tools,

00:20:29.890 --> 00:20:32.505
you can build a product
tango enable app.

00:20:32.505 --> 00:20:34.630
I encourage you guys to go
out to the sandbox area,

00:20:34.630 --> 00:20:35.546
try some of the demos.

00:20:35.546 --> 00:20:38.180
These are partners that have
gotten early development units

00:20:38.180 --> 00:20:39.720
and started doing demos.

00:20:39.720 --> 00:20:42.340
And there's a lot
more work to do.

00:20:42.340 --> 00:20:44.790
And if you want to sign up
for DevKit, go to the website

00:20:44.790 --> 00:20:46.200
or go to the sandbox.

00:20:46.200 --> 00:20:47.904
There's a tremendous
amount of new work

00:20:47.904 --> 00:20:50.070
to do when we start thinking
about what happens when

00:20:50.070 --> 00:20:52.162
our devices have the
sense of awareness.

00:20:52.162 --> 00:20:53.620
And I want to work
with each of you

00:20:53.620 --> 00:20:56.430
because I genuinely think
the future is awesome.

00:20:56.430 --> 00:20:56.930
Thank you.

00:21:03.980 --> 00:21:05.420
REGINA DUGAN: Thanks, Johnny.

00:21:05.420 --> 00:21:07.050
Thanks, Johnny.

00:21:07.050 --> 00:21:09.120
Normally when demos
fail for Johnny,

00:21:09.120 --> 00:21:10.720
he does a little jig on stage.

00:21:10.720 --> 00:21:13.620
So we miss that part of it.

00:21:13.620 --> 00:21:17.730
Project Tango is one of
ATAP's most mature projects.

00:21:17.730 --> 00:21:20.520
Project Ara in an earlier stage.

00:21:20.520 --> 00:21:23.570
Both capitalize on advances
in mobile computing,

00:21:23.570 --> 00:21:26.910
miniaturization,
optimization of electronics,

00:21:26.910 --> 00:21:31.190
and the opportunities that
result at that intersection.

00:21:31.190 --> 00:21:32.920
They are both
challenging what we

00:21:32.920 --> 00:21:36.570
believe to be possible
in a mobile platform.

00:21:36.570 --> 00:21:39.570
Tango and Ara have
accomplished in months

00:21:39.570 --> 00:21:42.290
what would normally take years.

00:21:42.290 --> 00:21:44.140
That's not an odd coincidence.

00:21:44.140 --> 00:21:47.020
It's the result of
a core belief or us.

00:21:47.020 --> 00:21:49.970
Namely, that open
wins over closed

00:21:49.970 --> 00:21:53.620
and that speed is
essential to innovation.

00:21:53.620 --> 00:21:55.450
To give you a sense
of ATAP's speed,

00:21:55.450 --> 00:21:57.710
let's take a look at
the last two years.

00:21:57.710 --> 00:22:02.040
Now, ATAP was born
on May 22, 2012.

00:22:02.040 --> 00:22:07.080
We are two years, one month,
and four days old today.

00:22:07.080 --> 00:22:10.540
And in that time, 11
projects have been born.

00:22:10.540 --> 00:22:12.670
From acoustics to
wearables, we've

00:22:12.670 --> 00:22:14.830
shipped multiple
products to scale.

00:22:14.830 --> 00:22:17.670
"Windy Day" and "Buggy Night,"
our first two spotlight

00:22:17.670 --> 00:22:18.470
stories.

00:22:18.470 --> 00:22:22.400
And Skip, a NFC authentication
token among them.

00:22:22.400 --> 00:22:25.140
Soon, you'll be able to
authenticate your Moto

00:22:25.140 --> 00:22:29.880
X with the next generation of
NFC Auth, a digital tattoo that

00:22:29.880 --> 00:22:31.870
lasts for five days.

00:22:31.870 --> 00:22:35.320
We built an interdisciplinary
team of 114,

00:22:35.320 --> 00:22:39.570
from statistical ethnographers
to Oscar winning directors.

00:22:39.570 --> 00:22:44.640
Our Skunkworks shop can build
almost anything and fast.

00:22:44.640 --> 00:22:50.630
We can build, cut, bend
and take things apart.

00:22:50.630 --> 00:22:55.180
On June 21 last year, we signed
a multi-university research

00:22:55.180 --> 00:22:58.470
agreement with 8 of the
country's top universities.

00:22:58.470 --> 00:23:01.920
From Caltech to MIT,
Texas to Illinois.

00:23:01.920 --> 00:23:04.680
And then 8 turned into 16.

00:23:04.680 --> 00:23:07.610
It doesn't take
us 9 to 12 months

00:23:07.610 --> 00:23:09.700
to contract with
researchers anymore.

00:23:09.700 --> 00:23:12.360
It takes us less than 30 days.

00:23:12.360 --> 00:23:17.040
We've had two parent companies,
one lock picking class,

00:23:17.040 --> 00:23:20.120
several engagements,
two weddings,

00:23:20.120 --> 00:23:21.930
and 6 baby pirates born.

00:23:28.390 --> 00:23:30.990
That's a fast boat.

00:23:30.990 --> 00:23:33.410
Paul is the technical
lead for Project Ara.

00:23:33.410 --> 00:23:35.712
And if you want to
see fast, watch Paul.

00:23:35.712 --> 00:23:36.212
Paul.

00:23:42.360 --> 00:23:43.750
PAUL EREMENKO:
Thank you, Regina.

00:23:43.750 --> 00:23:46.570
As Regina mentioned, I am
the technical project lead

00:23:46.570 --> 00:23:49.690
for Project Ara.

00:23:49.690 --> 00:23:52.530
What if we asked better
questions of our phones?

00:23:52.530 --> 00:23:55.120
Like what if a phone
could see in the dark?

00:23:55.120 --> 00:23:59.080
Or what if a phone could
test if waters clean?

00:23:59.080 --> 00:24:03.560
What if I could share the
best parts of my phone?

00:24:03.560 --> 00:24:07.200
What if a phone could?

00:24:07.200 --> 00:24:11.400
We think that a phone should
and a modular phone platform

00:24:11.400 --> 00:24:14.190
might just make all of
these things possible.

00:24:14.190 --> 00:24:15.690
There are lots of challenges.

00:24:15.690 --> 00:24:16.660
True.

00:24:16.660 --> 00:24:19.840
So much so that many have said
it couldn't be done at all.

00:24:19.840 --> 00:24:21.520
But we decided to
give it a shot.

00:24:21.520 --> 00:24:24.600
And in ATAP fashion we
started by turning statements

00:24:24.600 --> 00:24:28.110
like it's impossible
into numbers.

00:24:28.110 --> 00:24:31.120
What exactly does
impossible mean?

00:24:31.120 --> 00:24:36.240
Now the principal challenge
to modularity is overhead.

00:24:36.240 --> 00:24:39.290
What we found is that Moore's
law, the miniaturization

00:24:39.290 --> 00:24:43.362
of electromechanical components,
and a modern data protocol

00:24:43.362 --> 00:24:45.820
could get the modularity of
the penalty in the system level

00:24:45.820 --> 00:24:49.470
down to about 25% across
the board in PCB area,

00:24:49.470 --> 00:24:53.150
in device weight, and in
overall power consumption.

00:24:53.150 --> 00:24:55.300
In exchange users would
have the flexibility

00:24:55.300 --> 00:24:59.030
to turn the phone into a
solution to an old problem

00:24:59.030 --> 00:25:02.950
or to turn their phone into
a new possibility altogether.

00:25:02.950 --> 00:25:07.490
To turn their phone into
a means of choosing.

00:25:07.490 --> 00:25:09.710
Why choose a phone
for its camera

00:25:09.710 --> 00:25:13.160
when instead you could choose
a camera for your phone?

00:25:13.160 --> 00:25:16.080
Why can't I slide in a
module that's my key fob,

00:25:16.080 --> 00:25:18.600
then take it out,
give it to a valet?

00:25:18.600 --> 00:25:22.020
Why not share the most
expensive sensor or component

00:25:22.020 --> 00:25:28.540
among my friends, my family,
or perhaps across a village?

00:25:28.540 --> 00:25:31.860
Think of Ara as a versatile
computing platform.

00:25:31.860 --> 00:25:34.320
One where development
of each element

00:25:34.320 --> 00:25:37.420
is paced by the limits of
our collective imagination

00:25:37.420 --> 00:25:40.750
and the capabilities to
build new amazing things.

00:25:40.750 --> 00:25:44.040
Think of it as an analog to
the Android app ecosystem,

00:25:44.040 --> 00:25:46.850
just in hardware.

00:25:46.850 --> 00:25:48.340
So we assembled a team.

00:25:48.340 --> 00:25:50.630
A small technical
team within ATAP.

00:25:50.630 --> 00:25:54.420
20 partners, some 150 people
across three continents.

00:25:54.420 --> 00:25:56.980
Universities, major chip
makers, industrial designers,

00:25:56.980 --> 00:26:00.060
interaction engineers,
many, many others.

00:26:00.060 --> 00:26:02.810
And the goal is to have the team
iterate advances in one area

00:26:02.810 --> 00:26:05.470
and form another, a process
of constant trade offs

00:26:05.470 --> 00:26:07.750
and cooperative effort
to close the design

00:26:07.750 --> 00:26:10.280
across the disciplines
and across the teams.

00:26:10.280 --> 00:26:13.980
If we did it linearly it
would take us a decade.

00:26:13.980 --> 00:26:14.720
Instead--

00:26:14.720 --> 00:26:15.640
FEMALE SPEAKER: Let's boot it.

00:26:15.640 --> 00:26:17.473
PAUL EREMENKO: Nine
months into the project,

00:26:17.473 --> 00:26:20.020
we have our first functional
form factor prototype.

00:26:20.020 --> 00:26:23.530
There is lots more to do, but
we're off to a good start.

00:26:23.530 --> 00:26:26.709
This is Ara being born.

00:26:26.709 --> 00:26:27.500
FEMALE SPEAKER: Oh!

00:26:30.960 --> 00:26:33.138
[CHEERING]

00:26:36.360 --> 00:26:39.560
PAUL EREMENKO: As you see,
just a few short weeks ago,

00:26:39.560 --> 00:26:42.410
the phone was tethered
to a laboratory bench.

00:26:42.410 --> 00:26:45.020
Since then we have
cut the umbilical

00:26:45.020 --> 00:26:46.920
and we've exercised
many of its features.

00:26:46.920 --> 00:26:50.410
So I invite you to
see for yourself.

00:26:50.410 --> 00:26:54.632
This is the Spiral
One prototype.

00:26:54.632 --> 00:26:56.870
If we can switch to
the shoulder cam.

00:26:56.870 --> 00:26:57.576
There you go.

00:26:57.576 --> 00:26:58.950
This is the spiral
one prototype.

00:26:58.950 --> 00:27:01.420
It uses FPGA to implement
a packet switch network

00:27:01.420 --> 00:27:05.520
on device, using the industry
standard MIPI UniPro protocol.

00:27:05.520 --> 00:27:08.040
It also has a flexible power
bus that allows any module

00:27:08.040 --> 00:27:11.650
to be a power source, a power
sync, or a power storage /

00:27:11.650 --> 00:27:13.740
and it supports, in
limited fashion for now,

00:27:13.740 --> 00:27:16.230
the hot swapping of
batteries and other modules.

00:27:16.230 --> 00:27:18.395
So shall we see if we
can get it to boot today?

00:27:23.730 --> 00:27:26.250
This is Seth Newburg, he's
out chief electrical engineer,

00:27:26.250 --> 00:27:28.600
and he's going to
be power it on.

00:27:28.600 --> 00:27:30.650
Here's what you should expect.

00:27:30.650 --> 00:27:33.090
About 10 seconds into
the boot sequence,

00:27:33.090 --> 00:27:35.260
the power bus will initialize.

00:27:35.260 --> 00:27:37.550
The LED-- there's an LED
module on the back, which

00:27:37.550 --> 00:27:39.490
Seth will show you in
a bit-- it'll come on.

00:27:39.490 --> 00:27:42.560
About 30 seconds into the boot
sequence, if all goes well,

00:27:42.560 --> 00:27:44.540
the display module
should initialize,

00:27:44.540 --> 00:27:46.910
and the screen will
do a quick flash.

00:27:46.910 --> 00:27:49.790
But 35 seconds into the boot
sequence, the Linux kernel

00:27:49.790 --> 00:27:52.550
will boot, and the Android
logo will appear on the screen.

00:27:52.550 --> 00:27:56.725
And, hopefully, fingers crossed,
at 60 seconds the Android home

00:27:56.725 --> 00:27:58.100
screen will appear
on the device.

00:27:58.100 --> 00:27:58.891
So, Seth, go ahead.

00:28:15.464 --> 00:28:16.130
There's the LED.

00:28:30.800 --> 00:28:32.460
Flash, this is promising.

00:28:35.953 --> 00:28:36.951
All right.

00:28:42.939 --> 00:28:45.555
Just a little bit further,
just a little bit further.

00:29:00.590 --> 00:29:01.090
Ooh.

00:29:04.050 --> 00:29:05.530
Well, we're most
of the way there.

00:29:10.609 --> 00:29:11.109
OK.

00:29:17.350 --> 00:29:22.840
So, maybe well let Seth
power cycle it and try again.

00:29:22.840 --> 00:29:25.050
I assume we can't recover
from that particular screen

00:29:25.050 --> 00:29:26.540
without a power reboot.

00:29:26.540 --> 00:29:28.650
In the meantime, let's
go back to slides.

00:29:28.650 --> 00:29:30.470
Patrick, you can
relax for a second.

00:29:30.470 --> 00:29:34.480
And we'll call you back if we
reestablish the home screen

00:29:34.480 --> 00:29:34.980
there.

00:29:39.590 --> 00:29:43.690
So, let me talk about
what's difficult

00:29:43.690 --> 00:29:46.410
about this, other than actually
getting the phone to boot.

00:29:46.410 --> 00:29:47.890
There are many
technical challenges

00:29:47.890 --> 00:29:51.050
that must be overcome and I'm
going to talk about just a few

00:29:51.050 --> 00:29:52.360
of them.

00:29:52.360 --> 00:29:55.370
I'd like to talk about antenna
design, about the interconnects

00:29:55.370 --> 00:29:58.730
that go into making the
device work, about a software

00:29:58.730 --> 00:30:02.140
architecture that supports
modularity of the device level,

00:30:02.140 --> 00:30:04.610
and making it beautiful,
the industrial design

00:30:04.610 --> 00:30:05.990
and the aesthetics
of the device.

00:30:05.990 --> 00:30:10.430
Which may actually be one of
the hardest challenges of all.

00:30:10.430 --> 00:30:13.030
So, cellular and Wi-Fi
antennas in a user

00:30:13.030 --> 00:30:16.370
configurable modular device
pose a particularly unique

00:30:16.370 --> 00:30:17.270
challenge.

00:30:17.270 --> 00:30:19.774
Our approach has
been to use computer

00:30:19.774 --> 00:30:21.690
optimized conductive
grade antennas, developed

00:30:21.690 --> 00:30:23.830
by one of our
partners X5 Systems,

00:30:23.830 --> 00:30:28.830
and to leverage the endoskeleton
frames metallic structure

00:30:28.830 --> 00:30:30.400
as part of the antenna system.

00:30:30.400 --> 00:30:33.640
We're also experimenting with
3D printing the antenna using

00:30:33.640 --> 00:30:37.210
conducted inks as part
of the module shells.

00:30:37.210 --> 00:30:39.330
Now, to reduce the
modularity overhead,

00:30:39.330 --> 00:30:41.260
we decided on a
contact less approach

00:30:41.260 --> 00:30:43.260
to the data interconnections
between the modules

00:30:43.260 --> 00:30:44.960
and the endoskeleton.

00:30:44.960 --> 00:30:48.600
This allows us to save
precious volume in PCB area,

00:30:48.600 --> 00:30:51.180
but capacitive or inductive
data transmission mechanisms

00:30:51.180 --> 00:30:52.210
are lossy.

00:30:52.210 --> 00:30:55.210
And minimizing insertion loss,
across a range of frequencies,

00:30:55.210 --> 00:30:56.834
is hard.

00:30:56.834 --> 00:30:58.500
Interestingly, the
challenge is actually

00:30:58.500 --> 00:31:01.510
not at the high frequencies,
but rather efficiently

00:31:01.510 --> 00:31:04.080
supporting the transmission
of low bit rate data,

00:31:04.080 --> 00:31:07.530
at the low power gears
of the data protocol.

00:31:07.530 --> 00:31:10.340
How are we doing there Seth?

00:31:10.340 --> 00:31:10.942
No luck yet.

00:31:10.942 --> 00:31:12.670
OK.

00:31:12.670 --> 00:31:16.020
The elector permanent
magnets alleviate

00:31:16.020 --> 00:31:17.480
the need for
mechanical connectors

00:31:17.480 --> 00:31:20.280
or latches in attaching the
module to the endoskeleton

00:31:20.280 --> 00:31:21.300
frame.

00:31:21.300 --> 00:31:23.460
EPMs are magnets that
are passive in both the

00:31:23.460 --> 00:31:26.430
off state and the on state
and take a short current pulse

00:31:26.430 --> 00:31:28.920
in order to switch
between those two states.

00:31:28.920 --> 00:31:30.400
EPMs are a proven
technology that's

00:31:30.400 --> 00:31:32.990
been used in industrial
lift and crane applications

00:31:32.990 --> 00:31:34.720
and they've been
around for decades.

00:31:34.720 --> 00:31:36.880
For Project Ara, we had
two miniaturized them

00:31:36.880 --> 00:31:38.550
by a factor of 1,000.

00:31:38.550 --> 00:31:40.530
From something
that can lift a car

00:31:40.530 --> 00:31:44.380
to something that can hold
the weight of a small kitchen.

00:31:44.380 --> 00:31:48.900
The current prototype
platform relies

00:31:48.900 --> 00:31:51.240
on custom kernel
drivers for each module.

00:31:51.240 --> 00:31:54.090
This approach is neither
scalable nor secure,

00:31:54.090 --> 00:31:56.370
given an open ecosystem
of third party developers

00:31:56.370 --> 00:31:58.644
as we envisage.

00:31:58.644 --> 00:32:00.060
The network stack,
as I mentioned,

00:32:00.060 --> 00:32:02.150
employs the MIPI
UniPro protocol.

00:32:02.150 --> 00:32:04.000
In future spirals of
the platform, slated

00:32:04.000 --> 00:32:06.580
for later this year and
early next calendar year,

00:32:06.580 --> 00:32:09.430
the Android kernel will
utilize generic class drivers

00:32:09.430 --> 00:32:11.650
for UniPro, with
user space components

00:32:11.650 --> 00:32:13.790
for any additional
functionality or for non-class

00:32:13.790 --> 00:32:15.530
conforming devices.

00:32:15.530 --> 00:32:17.560
Yes, this is going
to require changes

00:32:17.560 --> 00:32:20.110
to Android to make it modular
and to support hardware

00:32:20.110 --> 00:32:20.845
hot plug.

00:32:20.845 --> 00:32:24.060
In this regard, Ara
is a stress test

00:32:24.060 --> 00:32:26.720
to see what Android can do
in applications that stretch

00:32:26.720 --> 00:32:30.140
beyond the traditional
smartphone.

00:32:30.140 --> 00:32:32.760
Now, let's talk
power for a second.

00:32:32.760 --> 00:32:36.050
Battery technology has been
advancing rapidly, just

00:32:36.050 --> 00:32:38.030
not so much in smart phones.

00:32:38.030 --> 00:32:41.080
Today the tech is here to make
a battery with triple the energy

00:32:41.080 --> 00:32:43.430
density of a conventional
cellphone battery.

00:32:43.430 --> 00:32:47.760
An example is the silicon
lithium ion layer technology.

00:32:47.760 --> 00:32:50.160
But the battery will
have reduced cycle life.

00:32:50.160 --> 00:32:53.190
Modularity opens up new
opportunities for innovation

00:32:53.190 --> 00:32:55.120
and getting it to
market quickly.

00:32:55.120 --> 00:32:57.330
And the user can
choose the technology

00:32:57.330 --> 00:33:00.100
based on their specific
need or use case.

00:33:00.100 --> 00:33:02.762
So, such a battery
with more than make up

00:33:02.762 --> 00:33:04.220
for the increased
power consumption

00:33:04.220 --> 00:33:05.840
of a modular architecture.

00:33:05.840 --> 00:33:07.650
But if you don't
want a new battery,

00:33:07.650 --> 00:33:09.090
you get hot-swap
a regular battery

00:33:09.090 --> 00:33:14.230
module to essentially get any
battery life that you want.

00:33:14.230 --> 00:33:16.450
Now putting all
this together, we

00:33:16.450 --> 00:33:18.050
sought an industrial
design they can

00:33:18.050 --> 00:33:20.930
be both modular and beautiful.

00:33:20.930 --> 00:33:22.520
It must overcome
the connotations

00:33:22.520 --> 00:33:25.940
of boxiness and brick
like that people associate

00:33:25.940 --> 00:33:27.560
with modularity.

00:33:27.560 --> 00:33:30.140
And it also has to close from
an electrical and functional

00:33:30.140 --> 00:33:31.390
perspectives.

00:33:31.390 --> 00:33:33.900
With our industrial design
partner, NewDealDesign,

00:33:33.900 --> 00:33:36.450
we strive for smooth,
sleek looking modules,

00:33:36.450 --> 00:33:39.140
without traditional connectors,
and a parcelling scheme that

00:33:39.140 --> 00:33:43.110
celebrates rather than conceals
the modularity of the device.

00:33:43.110 --> 00:33:44.600
As well as aesthetic
customization

00:33:44.600 --> 00:33:49.040
to give users the expressive
capability well beyond simply

00:33:49.040 --> 00:33:51.860
selecting the color
of their phone.

00:33:51.860 --> 00:33:53.750
To that end, we're
working with our partners

00:33:53.750 --> 00:33:55.950
to develop a new
production 3D printer

00:33:55.950 --> 00:33:58.400
that operates at 50 times
the speed of existing

00:33:58.400 --> 00:34:00.810
3D printing technology.

00:34:00.810 --> 00:34:04.660
It will yield full 600 DPI color
in hard, soft, and conductive

00:34:04.660 --> 00:34:05.590
materials.

00:34:05.590 --> 00:34:08.100
Where after strength
and surface finish

00:34:08.100 --> 00:34:10.960
comparable to that of
consumer grade plastics.

00:34:10.960 --> 00:34:14.090
Except, of course, the
color shape and texture

00:34:14.090 --> 00:34:17.330
can be entirely unique from user
to user and for module shell

00:34:17.330 --> 00:34:19.840
to module shell.

00:34:19.840 --> 00:34:22.340
OK, enough about the challenges.

00:34:22.340 --> 00:34:24.520
Let me show you what
is under the hoot.

00:34:24.520 --> 00:34:27.150
What goes into an RM module.

00:34:27.150 --> 00:34:31.030
So this is a close
up of a Wi-Fi module.

00:34:31.030 --> 00:34:34.230
It has spring pins for now,
in the spiral one prototype,

00:34:34.230 --> 00:34:37.389
in place of the contact-less
pads that I talked about.

00:34:37.389 --> 00:34:39.270
It has two
electropermanent magnets

00:34:39.270 --> 00:34:42.139
to support the insertion of
the module either in landscape

00:34:42.139 --> 00:34:44.290
or portrait orientation.

00:34:44.290 --> 00:34:46.020
There are a number
discrete components

00:34:46.020 --> 00:34:48.580
that you see up there
for power management

00:34:48.580 --> 00:34:50.500
and for driving the
electropermanent magnets.

00:34:50.500 --> 00:34:52.860
These will be replaced with
an integrated PMIC, or Power

00:34:52.860 --> 00:34:55.120
Management Integrated Circuit.

00:34:55.120 --> 00:34:57.430
There is currently
a rather large FPGA

00:34:57.430 --> 00:35:00.000
that serves as our
UniPro network processor.

00:35:00.000 --> 00:35:01.810
It will be replaced
with a UniPro bridge

00:35:01.810 --> 00:35:04.990
ASIC in the next
couple of months.

00:35:04.990 --> 00:35:06.920
And lastly, of
course, depicted here

00:35:06.920 --> 00:35:09.640
is the Wi-Fi base band processor
and an antenna connector

00:35:09.640 --> 00:35:12.460
in the upper right hand
corner of the slide.

00:35:12.460 --> 00:35:16.350
In this first spiral, about
65 to 70% of the module

00:35:16.350 --> 00:35:19.462
is consumed by modular overhead.

00:35:19.462 --> 00:35:21.420
Things you wouldn't have
to regular smartphone,

00:35:21.420 --> 00:35:22.270
in other words.

00:35:22.270 --> 00:35:25.360
That leaves about 30 to 35%
of the module for developer

00:35:25.360 --> 00:35:27.080
unique functionality.

00:35:27.080 --> 00:35:29.350
By October, we expect
to have our Spiral 2

00:35:29.350 --> 00:35:31.940
platform and prototype
built around custom

00:35:31.940 --> 00:35:34.410
ASICs for the UniPro
network processing.

00:35:34.410 --> 00:35:37.230
This will bring the usable
area for module developers

00:35:37.230 --> 00:35:40.930
to somewhere around 70 or
75% of the modular area.

00:35:40.930 --> 00:35:43.260
And while doing exact
silicon area estimates

00:35:43.260 --> 00:35:46.900
is kind of a challenge,
in the long run

00:35:46.900 --> 00:35:48.780
we expect that native
adoption of UniPro

00:35:48.780 --> 00:35:50.300
across a wide range
of peripherals

00:35:50.300 --> 00:35:54.030
will get the modularity overhead
down to approximately 10 to 15%

00:35:54.030 --> 00:35:57.040
of each individual
modules PCB area.

00:35:57.040 --> 00:35:58.520
In the meantime,
however, we think

00:35:58.520 --> 00:36:00.269
that there are a lot
of interesting things

00:36:00.269 --> 00:36:03.070
that can be done even on
the current Ara platform.

00:36:03.070 --> 00:36:05.910
And so today, I'm pleased
to announce the first

00:36:05.910 --> 00:36:09.500
in a series of price challenges
for ARA module developers.

00:36:09.500 --> 00:36:13.560
We will award $100,000 to the
developer of a novel module

00:36:13.560 --> 00:36:16.620
aimed at daily use that enable
something that you cannot

00:36:16.620 --> 00:36:18.910
currently do with a smartphone.

00:36:18.910 --> 00:36:20.410
We encourage teams.

00:36:20.410 --> 00:36:21.930
And the module must
be working when

00:36:21.930 --> 00:36:24.330
it is submitted
to us for judging.

00:36:24.330 --> 00:36:26.930
The first two runners up will
get all expense paid trips

00:36:26.930 --> 00:36:29.000
to the next Ara developer
event in the fall.

00:36:35.560 --> 00:36:38.070
We're making a set of developer
hardware available to price

00:36:38.070 --> 00:36:39.903
challenge participants
along with the latest

00:36:39.903 --> 00:36:44.000
release of our module
developer's kit or MDK.

00:36:44.000 --> 00:36:46.290
Guys, this will be
really hard, but we're

00:36:46.290 --> 00:36:47.990
going to do this together.

00:36:47.990 --> 00:36:51.220
We're making a supply
chain for EPMs.

00:36:51.220 --> 00:36:54.410
We're developing the processes
needed for shell fabrication.

00:36:54.410 --> 00:36:57.220
The UniPro ASICs are
well on their way.

00:36:57.220 --> 00:37:00.110
Expect a prototype version of
Android with modularity feature

00:37:00.110 --> 00:37:02.430
support sometime in the fall.

00:37:02.430 --> 00:37:04.430
And the MDK is already out.

00:37:04.430 --> 00:37:07.700
Download it, check it out.

00:37:07.700 --> 00:37:12.550
So if we were to ask better
questions of our phone,

00:37:12.550 --> 00:37:14.340
maybe they would look
something like this.

00:37:20.292 --> 00:37:23.268
[MUSIC PLAYING]

00:37:31.782 --> 00:37:32.716
[CAMERA LENS ZOOMING]

00:37:32.716 --> 00:37:35.130
[CAMERA LENS CLICK]

00:37:35.130 --> 00:37:38.070
[CROWD CHEERING]

00:37:38.070 --> 00:37:39.540
[BEEPING]

00:37:42.480 --> 00:37:43.460
[PAPER TEARING]

00:37:43.460 --> 00:37:44.930
[PIANO NOTE]

00:37:44.930 --> 00:37:46.890
MALE SPEAKER: And, action!

00:37:46.890 --> 00:37:52.770
[MUSIC PLAYING]

00:37:52.770 --> 00:37:55.710
[PHONE VIBRATING]

00:38:09.465 --> 00:38:10.840
REGINA DUGAN: Oh,
it just booted.

00:38:10.840 --> 00:38:11.520
No, I'm kidding.

00:38:11.520 --> 00:38:13.200
I'm kidding.

00:38:13.200 --> 00:38:15.680
If there's anything
I've learned over time,

00:38:15.680 --> 00:38:18.530
it's that stories move us.

00:38:18.530 --> 00:38:20.610
In his book entitled
"The Golden Theme,"

00:38:20.610 --> 00:38:23.630
Brian McDonald wrote
about the universal truth

00:38:23.630 --> 00:38:25.260
of storytelling.

00:38:25.260 --> 00:38:29.030
He argues that there is one
golden theme in stories.

00:38:29.030 --> 00:38:34.020
From Westerns to science
fiction, myths, to fairy tales.

00:38:34.020 --> 00:38:39.430
That truth is all any story
worth telling is getting at.

00:38:39.430 --> 00:38:41.490
And in this regard,
he says, he believes

00:38:41.490 --> 00:38:44.460
he has discovered
the single underlying

00:38:44.460 --> 00:38:47.800
truth that links all stories.

00:38:47.800 --> 00:38:50.450
We are all the same.

00:38:50.450 --> 00:38:54.580
Spotlight Stories is about
finding the age old truth

00:38:54.580 --> 00:38:58.850
of storytelling in
modern technology.

00:38:58.850 --> 00:39:02.950
On October 29th last year,
Moto X users got a little gift.

00:39:02.950 --> 00:39:06.400
A red hat that danced
across their screen.

00:39:06.400 --> 00:39:09.410
The red hat marked
an entry to a portal.

00:39:09.410 --> 00:39:12.320
A portal to an
interactive, immersive,

00:39:12.320 --> 00:39:18.660
world where a mouse named Pepe
learned that coveting a red hat

00:39:18.660 --> 00:39:21.360
is dangerous business.

00:39:21.360 --> 00:39:25.626
And users started smiling
at their phones in new ways.

00:39:25.626 --> 00:39:28.602
[MUSIC PLAYING]

00:39:48.470 --> 00:39:51.840
"Windy Day" was the first
of ATAP spotlight stories,

00:39:51.840 --> 00:39:56.610
a new storytelling format
made uniquely for mobile.

00:39:56.610 --> 00:39:59.480
It is at the intersection
of hardware, software,

00:39:59.480 --> 00:40:00.760
and content.

00:40:00.760 --> 00:40:03.190
Art and technology.

00:40:03.190 --> 00:40:06.130
Today smart phones have
graphics processing capabilities

00:40:06.130 --> 00:40:07.680
equal to game consoles.

00:40:07.680 --> 00:40:10.570
So we asked what could
do with all that power?

00:40:10.570 --> 00:40:13.490
This industry spends
billions every year

00:40:13.490 --> 00:40:17.080
making the tasks of our
lives more efficient.

00:40:17.080 --> 00:40:20.560
But what about the entire
emotional landscape

00:40:20.560 --> 00:40:22.220
of our lives?

00:40:22.220 --> 00:40:25.410
If you want to do something
that touches people emotionally,

00:40:25.410 --> 00:40:28.150
you go running to storytelling.

00:40:28.150 --> 00:40:30.770
Perhaps in the
advances of mobile,

00:40:30.770 --> 00:40:35.570
we might find a new creative
canvas for storytelling.

00:40:35.570 --> 00:40:38.500
So we asked the best
to help us find out.

00:40:38.500 --> 00:40:40.550
Oscar winning
director Jan Pinkava.

00:40:40.550 --> 00:40:43.610
Oscar winning producer
Karen Dufilho.

00:40:43.610 --> 00:40:47.730
The artists who animated Woody
in Toy Story, Doug Sweetland.

00:40:47.730 --> 00:40:49.810
Character Animator Mark Oftedal.

00:40:49.810 --> 00:40:54.250
Art director and Caldecott
medal winner, Jon Klassen.

00:40:54.250 --> 00:40:57.160
Animators, modelers,
and sound experts

00:40:57.160 --> 00:41:01.110
from eight different
countries descended on ATAP.

00:41:01.110 --> 00:41:04.970
They joined our technical team
and they started to build.

00:41:04.970 --> 00:41:09.040
What together they delivered
was a simple story.

00:41:09.040 --> 00:41:13.020
A narrative with a
beginning, middle, and end

00:41:13.020 --> 00:41:15.290
where your phone is
not a small screen

00:41:15.290 --> 00:41:19.740
at all, but a window
to a new world.

00:41:19.740 --> 00:41:22.770
"Windy Day" is a technical feet.

00:41:22.770 --> 00:41:26.330
It is rendered in real time
at 60 frames per second.

00:41:26.330 --> 00:41:30.260
Indeed, it is the first
ever real time rendering

00:41:30.260 --> 00:41:35.360
implementation of Pixar's open
graphics standard, OpenSubdiv.

00:41:35.360 --> 00:41:40.410
And simultaneously, the
first ever use on mobile.

00:41:40.410 --> 00:41:43.670
It required an intimate
understanding of the graphics

00:41:43.670 --> 00:41:47.080
pipeline, from the
GPU to that OS,

00:41:47.080 --> 00:41:50.320
through scheduling, all the
way to the high level rendering

00:41:50.320 --> 00:41:51.420
engine.

00:41:51.420 --> 00:41:55.130
And a rethinking of
tessellation to fit the hardware

00:41:55.130 --> 00:41:57.620
requirements of real time.

00:41:57.620 --> 00:42:00.300
And it required
hardware engineers,

00:42:00.300 --> 00:42:04.850
those intimately familiar
with GPUs and IMUs.

00:42:04.850 --> 00:42:07.320
Because the IMU
sensor data is what

00:42:07.320 --> 00:42:09.420
told us where you were
looking in the story,

00:42:09.420 --> 00:42:12.130
so we'd know what to render.

00:42:12.130 --> 00:42:16.010
And if the following us to
feel like a window, invisible,

00:42:16.010 --> 00:42:19.380
the sensor Fusion
performance had to improve.

00:42:19.380 --> 00:42:23.310
So we implemented precision
planetary landing algorithms

00:42:23.310 --> 00:42:25.900
to make the interaction fluid.

00:42:25.900 --> 00:42:28.060
We are building a
story Development Kit

00:42:28.060 --> 00:42:30.760
that will enable new
stories to be written.

00:42:30.760 --> 00:42:34.680
One day, we hope, you'll have
a new type of Film Festival.

00:42:34.680 --> 00:42:37.680
A Film Festival in your pocket.

00:42:37.680 --> 00:42:41.620
And our second story turned
the forest of "Windy Day"

00:42:41.620 --> 00:42:43.670
in to a "buggy night."

00:42:43.670 --> 00:42:46.690
And we continued our
conversation with artists.

00:42:46.690 --> 00:42:49.650
We have this new format,
what would you do with it?

00:42:49.650 --> 00:42:53.250
And one of those conversations
was with Glen Keane.

00:42:53.250 --> 00:42:55.840
Glen Keane is a
legendary animator,

00:42:55.840 --> 00:42:57.950
a singularity on this planet.

00:42:57.950 --> 00:43:00.540
He was with Disney for 38 years.

00:43:00.540 --> 00:43:05.050
Glen wanted to draw it again,
but with a graphite pencil.

00:43:05.050 --> 00:43:09.770
That meant that he was to
become our rendering engine.

00:43:09.770 --> 00:43:14.170
Only, he'd render
on paper, and in 2D.

00:43:14.170 --> 00:43:17.240
Now Glen is at once an
amazing rendering engine,

00:43:17.240 --> 00:43:20.470
but he's very high latency.

00:43:20.470 --> 00:43:24.810
He just can't draw in
real time on the screen.

00:43:24.810 --> 00:43:27.760
Glen's art challenged the
tech of spotlight stories

00:43:27.760 --> 00:43:30.240
in entirely new ways.

00:43:30.240 --> 00:43:33.640
And the Spotlight Story
studio became a place

00:43:33.640 --> 00:43:38.570
where animators and
engineers sat side by side.

00:43:38.570 --> 00:43:43.445
Where Glenn taught us to draw
and we taught him if, then,

00:43:43.445 --> 00:43:43.945
else.

00:43:46.880 --> 00:43:50.170
Now he flipped a few
things on us too.

00:43:50.170 --> 00:43:54.070
He turned the rendering timing
problem completely upside down.

00:43:54.070 --> 00:43:57.880
In CG, the time of
the frame is chosen,

00:43:57.880 --> 00:44:02.290
and the rendering engine
creates a perfectly tuned image.

00:44:02.290 --> 00:44:06.430
But because Glen was our
engine, all animation timing

00:44:06.430 --> 00:44:09.340
had to be queued
off the image drawn.

00:44:09.340 --> 00:44:13.380
There's no interpolation
between hand drawn images.

00:44:13.380 --> 00:44:17.060
This required better than 16
millisecond timing accuracy.

00:44:17.060 --> 00:44:21.080
Every piece of the pipeline
had to become high precision.

00:44:21.080 --> 00:44:23.540
It took three
months to implement

00:44:23.540 --> 00:44:26.180
an entirely new
timing architecture.

00:44:26.180 --> 00:44:29.090
Everything from the animation
system, to the camera

00:44:29.090 --> 00:44:31.730
had to behave in reverse order.

00:44:31.730 --> 00:44:34.610
And when it's wrong, it's wrong.

00:44:34.610 --> 00:44:40.130
Ghosting occurs or
characters miss their cues.

00:44:40.130 --> 00:44:43.420
We flipped a few
problems on Glen.

00:44:43.420 --> 00:44:47.090
Traditional animation is
drawn at 24 frames per second.

00:44:47.090 --> 00:44:48.930
But on a mobile
device, everything

00:44:48.930 --> 00:44:51.940
is waiting for frames
at 60 frames per second.

00:44:51.940 --> 00:44:56.010
That meant that Glen had to draw
a not in 24 frames per second,

00:44:56.010 --> 00:44:58.700
but in 60 frames per second.

00:44:58.700 --> 00:45:03.880
And he had to draw in three
point perspective at scale.

00:45:03.880 --> 00:45:10.030
Glen's story "duet" contains
10,055 original drawings.

00:45:10.030 --> 00:45:13.090
And these are just the
frames that are visible.

00:45:13.090 --> 00:45:15.150
Many more we're not used.

00:45:15.150 --> 00:45:17.450
So we had to develop
a filing system.

00:45:17.450 --> 00:45:23.070
This is Glen's and this is ours.

00:45:23.070 --> 00:45:25.200
And we had to
recover occasionally

00:45:25.200 --> 00:45:26.155
from file corruption.

00:45:29.200 --> 00:45:32.010
Compression became
critically important.

00:45:32.010 --> 00:45:36.060
Glen is able to create
seamless transitions,

00:45:36.060 --> 00:45:39.180
like the transformation of
characters as they grow.

00:45:39.180 --> 00:45:41.360
In fact, it's so
seamless you don't

00:45:41.360 --> 00:45:44.480
feel there's anything
unnatural about it.

00:45:44.480 --> 00:45:48.930
No technique in CG will
allow that to happen.

00:45:48.930 --> 00:45:51.770
No mathematical
encoding will enable

00:45:51.770 --> 00:45:54.560
you to do such a transformation.

00:45:54.560 --> 00:45:59.060
That meant what was once a
mathematical representation

00:45:59.060 --> 00:46:03.550
of the line, now was a
graphite stardust field.

00:46:07.510 --> 00:46:11.090
And each drawing had to be
mapped exactly to the screen

00:46:11.090 --> 00:46:13.850
resolution so that it
feels as if the line is

00:46:13.850 --> 00:46:15.910
drawn right in front of you.

00:46:15.910 --> 00:46:19.890
Pixelation destroys
the life of the line.

00:46:19.890 --> 00:46:25.350
10,055 drawings became
13.5 gigabytes of data.

00:46:25.350 --> 00:46:29.240
And we used an entire
hierarchy of compression

00:46:29.240 --> 00:46:32.980
to fit that into
a 150 megabytes.

00:46:32.980 --> 00:46:35.840
The score attracted
to Stradivarius

00:46:35.840 --> 00:46:39.610
violins and top
musicians who came

00:46:39.610 --> 00:46:44.850
because the visual demanded
music of equal beauty.

00:46:44.850 --> 00:46:49.470
"duet" allowed state of the
art technology, software

00:46:49.470 --> 00:46:54.140
and hardware engineers, to
breathe new life into an art

00:46:54.140 --> 00:46:58.010
form almost lost to us.

00:46:58.010 --> 00:47:00.960
The art of hand
drawn animations.

00:47:00.960 --> 00:47:03.414
Glen Kean's art.

00:47:03.414 --> 00:47:06.893
[MUSIC PLAYING]

00:47:41.700 --> 00:47:46.360
GLEN KEANE: I see myself as an
artist, first, who animates.

00:47:46.360 --> 00:47:48.450
Fortunately for me,
everything I've animated

00:47:48.450 --> 00:47:51.190
is always tested me to
learn something new.

00:47:51.190 --> 00:47:56.540
And I do believe that those
feelings come out in line.

00:47:56.540 --> 00:47:59.660
In embracing this
new technology,

00:47:59.660 --> 00:48:04.544
I feel like I re-discovered
a love for animation.

00:48:04.544 --> 00:48:05.960
RACHID EL GUERRAB:
As a tech team,

00:48:05.960 --> 00:48:08.160
we had no idea how
this would be executed.

00:48:08.160 --> 00:48:10.070
None whatsoever.

00:48:10.070 --> 00:48:13.050
Going from CG, how do
we do that in a way that

00:48:13.050 --> 00:48:15.240
doesn't distort what
Glen is drawing?

00:48:15.240 --> 00:48:18.210
In CG, if something
goes wrong, it's

00:48:18.210 --> 00:48:20.840
pretty easy to fix it up and go.

00:48:20.840 --> 00:48:23.260
In hand drawn, there's
no way because that

00:48:23.260 --> 00:48:25.670
has to be redrawn by Glen.

00:48:25.670 --> 00:48:28.480
To some extent he's
our rendering engine.

00:48:28.480 --> 00:48:30.950
He's the guy who's actually
producing the frames,

00:48:30.950 --> 00:48:33.630
we're just putting
them in a 3D space.

00:48:33.630 --> 00:48:35.850
Unlike traditional
film, our hardware

00:48:35.850 --> 00:48:39.360
runs at 60 frames
per second, not 24.

00:48:39.360 --> 00:48:42.800
We decided from the beginning
that when you see on screen

00:48:42.800 --> 00:48:45.280
will be Glenn's
drawings untouched.

00:48:45.280 --> 00:48:48.100
GLEN KEANE: I've spent 40 years
thinking at 24 frames a second.

00:48:48.100 --> 00:48:50.310
How in the world can
I actually animate

00:48:50.310 --> 00:48:52.530
at a whole different time rate?

00:48:52.530 --> 00:48:54.380
And I was like, whoa,
that's a lot of work.

00:48:54.380 --> 00:48:56.171
But then I started
thinking, wait a second.

00:48:56.171 --> 00:48:59.820
This gives you 60
more possible images

00:48:59.820 --> 00:49:01.510
to describe an action with.

00:49:01.510 --> 00:49:04.250
Why wouldn't you want that?

00:49:04.250 --> 00:49:05.790
This whole experience
has shown me

00:49:05.790 --> 00:49:08.640
that, whether you're holding
a pencil or your programming

00:49:08.640 --> 00:49:11.970
on a keyboard,
you are an artist.

00:49:11.970 --> 00:49:15.650
It's going to take both
sides to really move this art

00:49:15.650 --> 00:49:18.610
form forward to
what it can become.

00:49:18.610 --> 00:49:20.700
RACHID EL GUERRAB: With
a traditional story,

00:49:20.700 --> 00:49:24.800
the director holds the camera,
so you know he'll get it right.

00:49:24.800 --> 00:49:26.860
But in our medium we never knew.

00:49:26.860 --> 00:49:29.900
You see somebody watching
"duet" and tearing up.

00:49:29.900 --> 00:49:32.810
That's a moment that
you don't forget.

00:49:47.845 --> 00:49:51.690
REGINA DUGAN: Ladies and
Gentlemen, Glen Keane.

00:49:51.690 --> 00:49:52.606
GLEN KEANE: Thank you.

00:49:57.408 --> 00:49:57.908
Thank you.

00:50:01.780 --> 00:50:08.930
So, I'm an animator, which
is an actor with a pencil.

00:50:08.930 --> 00:50:11.515
So I think I better
boot up my device here.

00:50:14.140 --> 00:50:14.935
Wait for it.

00:50:21.667 --> 00:50:24.100
Oh, there it goes, OK.

00:50:24.100 --> 00:50:28.800
So like I said, I'm an
actor with a pencil.

00:50:28.800 --> 00:50:38.560
And so whether I'm animating a
mermaid or the Beast or Aladdin

00:50:38.560 --> 00:50:45.140
or Tarzan, I live in the skin
of the characters that I draw.

00:50:45.140 --> 00:50:51.800
In this case it's a little baby
girl, which is weird, I know.

00:50:51.800 --> 00:50:55.750
But I know what I
know what it feels

00:50:55.750 --> 00:50:59.380
like to hold a little baby
like this in your arms.

00:50:59.380 --> 00:51:04.410
Just this last week we had
our little granddaughter born.

00:51:04.410 --> 00:51:08.270
And I know that those
soft little chubby

00:51:08.270 --> 00:51:11.250
arms with their
little marshmallow

00:51:11.250 --> 00:51:13.070
hands, what that feels like.

00:51:13.070 --> 00:51:17.760
And when I draw,
I see my drawing

00:51:17.760 --> 00:51:23.565
at a sort of-- it's a way
for me to connect to you.

00:51:27.340 --> 00:51:35.950
I see drawing as a
seismograph of the soul.

00:51:35.950 --> 00:51:38.960
The lines representing
how I feel.

00:51:41.650 --> 00:51:49.460
And kind of like the eyes
are the window to the soul.

00:51:54.430 --> 00:52:00.220
And this is little
Mia from "duet"

00:52:00.220 --> 00:52:02.880
with a little beauty
mark and a belly button.

00:52:06.247 --> 00:52:10.095
[APPLAUSE]

00:52:15.390 --> 00:52:18.520
Thank you.

00:52:18.520 --> 00:52:21.310
About a year ago, Regina
invited me up to ATAP

00:52:21.310 --> 00:52:23.820
and she handed me
this mobile device.

00:52:23.820 --> 00:52:27.110
And said, so what
would you do with this?

00:52:27.110 --> 00:52:28.760
And I looked at
it and said, well

00:52:28.760 --> 00:52:30.290
the screen is a lot smaller.

00:52:30.290 --> 00:52:32.860
I'm used to be a big
movie screen where

00:52:32.860 --> 00:52:35.455
my animation can play up there.

00:52:35.455 --> 00:52:38.580
And then I noticed, it
wasn't a screen at all,

00:52:38.580 --> 00:52:44.270
but it was a window into an
infinite virtual world where

00:52:44.270 --> 00:52:46.680
the viewer had the
camera in their hands

00:52:46.680 --> 00:52:50.890
and it was a seamless
storytelling.

00:52:50.890 --> 00:52:53.670
It was like there was
no cuts in it at all.

00:52:53.670 --> 00:52:57.380
it was like unbroken
eye contact.

00:52:57.380 --> 00:53:00.780
A captivating conversation
between the artist

00:53:00.780 --> 00:53:02.960
and the viewer.

00:53:02.960 --> 00:53:04.030
This is wonderful.

00:53:04.030 --> 00:53:08.130
I said, so Regina, what do
you want me to do with this?

00:53:08.130 --> 00:53:09.970
And she said, I just
want you to make

00:53:09.970 --> 00:53:14.240
something beautiful
and emotional.

00:53:14.240 --> 00:53:17.290
Well this is music to
ears of any artist.

00:53:17.290 --> 00:53:18.960
So what's the catch?

00:53:18.960 --> 00:53:20.430
She said, well,
there is no catch.

00:53:20.430 --> 00:53:23.940
I just want you to push
yourself creatively,

00:53:23.940 --> 00:53:27.220
that will push us
technologically.

00:53:27.220 --> 00:53:30.450
I like this Regina.

00:53:30.450 --> 00:53:34.180
So a year later, here
we are with "duet."

00:53:34.180 --> 00:53:36.560
And the thing I
realized as I think

00:53:36.560 --> 00:53:41.570
back on that year, working side
by side with Rachid's team,

00:53:41.570 --> 00:53:45.470
is that whether you're an
artist with a pencil expressing

00:53:45.470 --> 00:53:49.990
yourself creatively or you are
programming on a keyboard, that

00:53:49.990 --> 00:53:52.310
kind of an artist,
we stand on one

00:53:52.310 --> 00:53:56.210
another's shoulders to reach
higher than any one of us

00:53:56.210 --> 00:53:58.670
could do alone.

00:53:58.670 --> 00:54:01.740
Later on this year
you'll see "duet"

00:54:01.740 --> 00:54:07.410
in all of its virtual
interactive glory.

00:54:07.410 --> 00:54:10.230
But this morning, we're
going to present it

00:54:10.230 --> 00:54:14.250
to you in a theatrical format.

00:54:14.250 --> 00:54:15.900
And I hope you like it.

00:54:15.900 --> 00:54:20.466
Here's "duet."

00:54:20.466 --> 00:54:23.952
[MUSIC PLAYING]

00:58:08.502 --> 00:58:09.960
REGINA DUGAN: I
ask myself what I'd

00:58:09.960 --> 00:58:12.530
like you to remember about ATAP.

00:58:12.530 --> 00:58:17.330
We're a small band of pirates
trying to do epic shit.

00:58:17.330 --> 00:58:20.880
We're trying to close the gap
between what if and what is.

00:58:20.880 --> 00:58:23.120
That we are mobile
first, lean and agile,

00:58:23.120 --> 00:58:25.490
open, optimized for speed.

00:58:25.490 --> 00:58:29.240
Yes, all of those things.

00:58:29.240 --> 00:58:32.320
But what I'd like for you
to remember in the end, most

00:58:32.320 --> 00:58:38.310
of all, is that ATAP is full
of doer dreamers, like you.

00:58:38.310 --> 00:58:43.520
Who dare to believe, even
when it means we might fail.

00:58:43.520 --> 00:58:47.120
It's terrifying and
hard because it's

00:58:47.120 --> 00:58:55.390
authentic and human and scary
to dare and dream and do.

00:58:55.390 --> 00:58:58.280
But it's the only thing
that really matters.

00:58:58.280 --> 00:59:00.100
It's why I'm here.

00:59:00.100 --> 00:59:02.790
And I suspect it's
why you're here.

00:59:02.790 --> 00:59:07.800
And I don't mean here
at I/O. I mean here.

00:59:07.800 --> 00:59:10.250
It's why we're all here.

00:59:10.250 --> 00:59:15.120
To believe and dream and do.

00:59:15.120 --> 00:59:18.090
In this respect, I'm certain.

00:59:18.090 --> 00:59:20.530
We are all the same.

00:59:20.530 --> 00:59:22.270
Thank you.

00:59:22.270 --> 00:59:25.320
[APPLAUSE]

