WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.345
[APPLAUSE]

00:00:03.345 --> 00:00:05.386
LAURENCE MORONEY: So my
name is Laurence Moroney.

00:00:05.386 --> 00:00:07.285
My Chinese name is [INAUDIBLE].

00:00:07.285 --> 00:00:11.140
And I come from Seattle,
and I work on Firebase,

00:00:11.140 --> 00:00:13.205
and I work on a lot
of Google technologies

00:00:13.205 --> 00:00:14.440
but primarily Firebase.

00:00:14.440 --> 00:00:17.380
And today I'd like to
introduce Firebase to you

00:00:17.380 --> 00:00:19.300
and talk about some of
the technologies that

00:00:19.300 --> 00:00:21.810
are available in Firebase to
you as developers building

00:00:21.810 --> 00:00:24.216
for international applications.

00:00:24.216 --> 00:00:27.510
Now, Firebase, it's more
than just one product.

00:00:27.510 --> 00:00:30.690
It's an entire suite of
products, and it's a strategy.

00:00:30.690 --> 00:00:34.840
And the idea behind Firebase
is that we identified

00:00:34.840 --> 00:00:38.190
that developers need a lot
more than just platform

00:00:38.190 --> 00:00:40.810
APIs for building
applications, be it

00:00:40.810 --> 00:00:43.930
for Android or iOS or the web.

00:00:43.930 --> 00:00:48.840
A lot of developers are below
what we call the poverty line.

00:00:48.840 --> 00:00:55.690
And that is their apps will make
less than $500 US per month.

00:00:55.690 --> 00:00:59.980
About 10% to 15% of developers
are very, very successful,

00:00:59.980 --> 00:01:02.730
making $2,500 or more per month.

00:01:02.730 --> 00:01:06.100
And we took a look at what are
the attributes of those apps?

00:01:06.100 --> 00:01:07.540
What do they do?

00:01:07.540 --> 00:01:09.550
What are the habits
of these developers

00:01:09.550 --> 00:01:11.400
who are very, very successful?

00:01:11.400 --> 00:01:12.900
And some of the
things that we found

00:01:12.900 --> 00:01:15.450
that these developers were
very successful at doing

00:01:15.450 --> 00:01:20.380
are being able to effectively
do things such as notifications

00:01:20.380 --> 00:01:23.710
to be able to retain their
users, cloud messaging

00:01:23.710 --> 00:01:27.080
to be able to have interactivity
within their application,

00:01:27.080 --> 00:01:29.040
some great authentication.

00:01:29.040 --> 00:01:32.800
It's very, very difficult,
and it's very, very expensive

00:01:32.800 --> 00:01:35.290
to build your own
authentication system.

00:01:35.290 --> 00:01:37.330
So we saw that
successful developers

00:01:37.330 --> 00:01:40.270
were using third-party
authentication systems

00:01:40.270 --> 00:01:42.930
and allowing people to
reuse their existing social

00:01:42.930 --> 00:01:46.330
identities within
these successful apps.

00:01:46.330 --> 00:01:48.820
We saw that very successful
developers were targeting

00:01:48.820 --> 00:01:50.440
more than one platform.

00:01:50.440 --> 00:01:54.700
The top developers all target
Android, iOS, and the web.

00:01:54.700 --> 00:01:56.655
So we wanted to build
a suite of technologies

00:01:56.655 --> 00:01:59.490
and a suite of services
that treat all three

00:01:59.490 --> 00:02:00.760
of these equally.

00:02:00.760 --> 00:02:03.795
So you as a developer, in
order to be successful,

00:02:03.795 --> 00:02:05.920
we didn't want you just to
be an Android developer,

00:02:05.920 --> 00:02:08.440
we would like you to be an
Android and iOS and a web

00:02:08.440 --> 00:02:10.740
developer also.

00:02:10.740 --> 00:02:12.640
And we group all of
these technologies

00:02:12.640 --> 00:02:15.310
into three families,
the first of this family

00:02:15.310 --> 00:02:18.370
are things that I call
supporting developers,

00:02:18.370 --> 00:02:20.560
technologies that
make your experience

00:02:20.560 --> 00:02:22.020
as a developer better.

00:02:22.020 --> 00:02:24.591
And that's the ones on the
left-hand side of the diagram

00:02:24.591 --> 00:02:25.090
here.

00:02:25.090 --> 00:02:27.440
And I'm going to go into
each of these in detail.

00:02:27.440 --> 00:02:30.570
But beyond developing,
we also realized

00:02:30.570 --> 00:02:33.090
that people need
great technologies

00:02:33.090 --> 00:02:35.620
and great techniques
that will allow

00:02:35.620 --> 00:02:38.260
them to grow their application.

00:02:38.260 --> 00:02:41.210
It's not enough for you to
solely market your application.

00:02:41.210 --> 00:02:44.680
Most applications grow, for
example, by word of mouth.

00:02:44.680 --> 00:02:47.470
People teach people
about great apps.

00:02:47.470 --> 00:02:49.127
So we wanted to make
that easy for you,

00:02:49.127 --> 00:02:50.793
and we wanted to build
a technology that

00:02:50.793 --> 00:02:52.600
would make that easy for you.

00:02:52.600 --> 00:02:56.100
And then, of course, the most
important probably is earning.

00:02:56.100 --> 00:02:58.610
You want to be able to earn
money from building your apps.

00:02:58.610 --> 00:03:00.860
You want to earn money
from all of your hard work.

00:03:00.860 --> 00:03:02.443
And we've been working
on technologies

00:03:02.443 --> 00:03:03.500
to make that better.

00:03:03.500 --> 00:03:06.834
But all of these are bound
together by analytics.

00:03:06.834 --> 00:03:09.250
And at the heart-- and that's
why it's right in the center

00:03:09.250 --> 00:03:10.230
of this diagram--

00:03:10.230 --> 00:03:13.156
at the heart of
Firebase is analytics.

00:03:13.156 --> 00:03:17.106
So let me talk a little
about analytics first.

00:03:17.106 --> 00:03:18.730
You may have heard
of Google Analytics.

00:03:18.730 --> 00:03:21.130
Well, Firebase Analytics was
built by the same people,

00:03:21.130 --> 00:03:25.600
but we built it from the ground
up to optimize it for apps.

00:03:25.600 --> 00:03:28.360
We wanted to make it
event- and user-centric

00:03:28.360 --> 00:03:30.970
so that as you're
building an application,

00:03:30.970 --> 00:03:32.860
you don't have to
worry about analytics,

00:03:32.860 --> 00:03:35.520
that they are things that are
being collected automatically

00:03:35.520 --> 00:03:37.380
for you, should you want them.

00:03:37.380 --> 00:03:40.960
Now, I've spent many years
working as a developer

00:03:40.960 --> 00:03:42.770
and working as a
developer manager.

00:03:42.770 --> 00:03:44.670
And I've been to way
too many meetings,

00:03:44.670 --> 00:03:48.360
and I'm sure many of you have,
where you sit around the table

00:03:48.360 --> 00:03:51.180
and as the developers are there,
the marketing people are there,

00:03:51.180 --> 00:03:53.970
the architects are there, the
business people are there.

00:03:53.970 --> 00:03:56.290
And you're talking
about requirements.

00:03:56.290 --> 00:03:58.660
And then the requirement
for analytics comes up.

00:03:58.660 --> 00:04:00.565
And the developers want
one set of analytics,

00:04:00.565 --> 00:04:03.340
the business people want
another set of analytics,

00:04:03.340 --> 00:04:05.930
the marketing people want
another set of analytics,

00:04:05.930 --> 00:04:08.800
the social people want
another set of analytics.

00:04:08.800 --> 00:04:10.610
And in the end, you
compromise by saying

00:04:10.610 --> 00:04:11.734
we're going to do them all.

00:04:11.734 --> 00:04:14.440
And then the developer manager
says we can't do them all,

00:04:14.440 --> 00:04:16.079
because we don't have the time.

00:04:16.079 --> 00:04:18.393
How many people have
been in that situation?

00:04:18.393 --> 00:04:20.660
Quite a few.

00:04:20.660 --> 00:04:23.165
So with that in mind, when
we built Google Analytics

00:04:23.165 --> 00:04:26.290
and when we built Firebase
Analytics in particular,

00:04:26.290 --> 00:04:28.690
we wanted to make it
really easy for developers

00:04:28.690 --> 00:04:32.440
to be able to build the most
common analytics directly

00:04:32.440 --> 00:04:36.010
into their app without
writing any code.

00:04:36.010 --> 00:04:37.750
So if we get into
that circumstance

00:04:37.750 --> 00:04:39.940
where these people are all
sitting around the table

00:04:39.940 --> 00:04:41.440
asking about the
types of analytics

00:04:41.440 --> 00:04:44.230
that they want, all of the
common things that you would

00:04:44.230 --> 00:04:47.750
expect in an app-- app
opening, app closing,

00:04:47.750 --> 00:04:51.120
migrating between screens,
app being installed, app

00:04:51.120 --> 00:04:54.070
being uninstalled, all
of these common events

00:04:54.070 --> 00:04:56.140
are actually captured
for you without you

00:04:56.140 --> 00:04:58.075
writing any code whatsoever.

00:04:58.075 --> 00:05:00.325
There's a library that you
link into your application,

00:05:00.325 --> 00:05:02.110
and you're done.

00:05:02.110 --> 00:05:07.080
Now, I love to live by the 80/20
rule, where 80% of the things

00:05:07.080 --> 00:05:09.340
are usually what
everybody wants.

00:05:09.340 --> 00:05:11.590
And I would say that
this, by the 80/20 rule,

00:05:11.590 --> 00:05:13.590
80% of the analytics
that you want to capture

00:05:13.590 --> 00:05:15.840
are going to be captured
for you in that way.

00:05:15.840 --> 00:05:18.000
But of course, there
are custom analytics

00:05:18.000 --> 00:05:20.970
that you want to capture too
that we don't know about.

00:05:20.970 --> 00:05:22.700
Say you've built a
game, and you want

00:05:22.700 --> 00:05:26.231
to know how many people are
beating the big boss on level

00:05:26.231 --> 00:05:26.730
three.

00:05:26.730 --> 00:05:28.140
Well, we can't predict that.

00:05:28.140 --> 00:05:29.380
We don't know about that.

00:05:29.380 --> 00:05:31.360
That's your game,
that's your domain.

00:05:31.360 --> 00:05:33.720
So as a result, of course,
by writing some code,

00:05:33.720 --> 00:05:35.870
you can then collect
those analytics also.

00:05:35.870 --> 00:05:37.943
You're not just limited
to the analytics

00:05:37.943 --> 00:05:39.690
that we're giving you for free.

00:05:39.690 --> 00:05:41.860
And that's the idea
behind Firebase Analytics.

00:05:41.860 --> 00:05:44.910
And it's one of the themes that
you'll see throughout Firebase

00:05:44.910 --> 00:05:46.280
as I talk about it.

00:05:46.280 --> 00:05:48.150
And we really wanted
to make life as easy

00:05:48.150 --> 00:05:49.880
as possible for developers.

00:05:49.880 --> 00:05:52.270
But if you want to go
beyond what we're giving you

00:05:52.270 --> 00:05:55.970
in the product, we're making it
as easy as we can to extend it.

00:05:55.970 --> 00:06:00.030
And here's an example of what an
analytics dashboard in Firebase

00:06:00.030 --> 00:06:01.170
looks like.

00:06:01.170 --> 00:06:05.955
So a Googler built a game called
Bingo Blast that he put out

00:06:05.955 --> 00:06:07.120
in the Play Store.

00:06:07.120 --> 00:06:09.260
And he got a number
of users using it.

00:06:09.260 --> 00:06:11.010
And the idea is that
we wanted to show off

00:06:11.010 --> 00:06:13.270
what the analytics
looks like at Google IO.

00:06:13.270 --> 00:06:17.240
So I took this screen
capture of the console

00:06:17.240 --> 00:06:19.560
so that you can start seeing
some of the analytics that

00:06:19.560 --> 00:06:20.300
were collected.

00:06:20.300 --> 00:06:22.620
And remember, this
was the free analytics

00:06:22.620 --> 00:06:25.090
that he did not write
any code for whatsoever.

00:06:25.090 --> 00:06:26.700
And when I say
analytics are free,

00:06:26.700 --> 00:06:29.419
I also mean they're
free money-wise too.

00:06:29.419 --> 00:06:30.710
You don't have to pay anything.

00:06:30.710 --> 00:06:31.918
They're completely unlimited.

00:06:31.918 --> 00:06:35.970
They're free, and it's at
no cost to you whatsoever.

00:06:35.970 --> 00:06:38.380
So here's an example of
some of the analytics.

00:06:38.380 --> 00:06:40.470
And if you look
closely, you can see

00:06:40.470 --> 00:06:42.210
on each of these
tiles on the top left,

00:06:42.210 --> 00:06:44.490
there's a little Android
icon on a couple of them,

00:06:44.490 --> 00:06:47.660
and there's a little blue
iOS icon on a couple of them.

00:06:47.660 --> 00:06:50.430
And here are some of the things
that he was able to collect.

00:06:50.430 --> 00:06:53.667
So for example, he has
in-app purchases in his game,

00:06:53.667 --> 00:06:55.250
and if we take a
look at, for example,

00:06:55.250 --> 00:06:58.860
the com dot redhot labs
dot bingo application,

00:06:58.860 --> 00:07:02.540
in the month before I captured
this, he had 22,000 users.

00:07:02.540 --> 00:07:04.280
And the in-app purchases
from these users

00:07:04.280 --> 00:07:06.330
was about $2,000 US.

00:07:06.330 --> 00:07:08.260
So this app is doing
really, really well.

00:07:08.260 --> 00:07:10.380
And if we look on
the right here,

00:07:10.380 --> 00:07:13.940
the iOS one, he had
5,300 users, and he had

00:07:13.940 --> 00:07:16.845
$30,000 in in-app purchases.

00:07:16.845 --> 00:07:18.547
So one of the
things I was saying,

00:07:18.547 --> 00:07:20.630
some of the habits of
highly successful developers

00:07:20.630 --> 00:07:22.925
is that they're reaching
multiple platforms.

00:07:22.925 --> 00:07:25.050
And as we can see here,
even though this person who

00:07:25.050 --> 00:07:27.190
wrote this was from Google,
he wrote it for Android

00:07:27.190 --> 00:07:29.970
and then he used Firebase, and
he also moved it over to iOS.

00:07:29.970 --> 00:07:32.700
You can see that he was very,
very successful in doing so.

00:07:32.700 --> 00:07:34.636
He was making a lot of dollars.

00:07:34.636 --> 00:07:36.510
Some of the other
analytics that I collected,

00:07:36.510 --> 00:07:38.107
as you can see at
the bottom here,

00:07:38.107 --> 00:07:40.690
and I'll talk a little bit later
in the presentation about it,

00:07:40.690 --> 00:07:42.500
is also crash reports.

00:07:42.500 --> 00:07:44.800
So as your application
crashes, it's

00:07:44.800 --> 00:07:48.035
one of the things that gets
really, really bad reviews.

00:07:48.035 --> 00:07:51.330
And we built crash reporting
directly into Firebase

00:07:51.330 --> 00:07:53.320
so that when an
application crashes,

00:07:53.320 --> 00:07:55.330
you'll get this stack reading--

00:07:55.330 --> 00:07:58.140
the stack overflow effectively
reading of your application

00:07:58.140 --> 00:08:00.679
so that you can debug it
even if the person who

00:08:00.679 --> 00:08:02.470
bought your application,
who had the crash,

00:08:02.470 --> 00:08:04.740
is living on the other
side of the world.

00:08:04.740 --> 00:08:06.900
And these are some of the
things that we see here,

00:08:06.900 --> 00:08:09.090
that in his application
he had a number of errors,

00:08:09.090 --> 00:08:14.610
like he had 9,000 errors in the
iOS one, impacting 2,000 users.

00:08:14.610 --> 00:08:16.730
By using the
Firebase console, he

00:08:16.730 --> 00:08:19.057
was able to go in to see
what those errors were

00:08:19.057 --> 00:08:20.640
without contacting
the users directly.

00:08:20.640 --> 00:08:22.846
So he could fix
them and redeploy.

00:08:22.846 --> 00:08:25.800
So that's a sneak peek at
what's available in Analytics.

00:08:25.800 --> 00:08:27.840
We do have an Analytics
session later today.

00:08:27.840 --> 00:08:31.350
I advise you to come along and
see some of the great things

00:08:31.350 --> 00:08:33.630
that you can do with
Firebase Analytics.

00:08:33.630 --> 00:08:35.440
But now I want to talk
about the developer

00:08:35.440 --> 00:08:38.409
technology, the things that
were on the left of my diagram

00:08:38.409 --> 00:08:39.330
earlier on.

00:08:39.330 --> 00:08:41.309
So there are a number
of back-end services

00:08:41.309 --> 00:08:44.340
that we provide that will allow
you to build better apps as

00:08:44.340 --> 00:08:45.976
well as app quality
services for things

00:08:45.976 --> 00:08:47.600
such as the crash
reporting I mentioned

00:08:47.600 --> 00:08:50.910
as well as the test
lab for Android.

00:08:50.910 --> 00:08:54.235
The first of these is
the realtime database.

00:08:54.235 --> 00:08:57.590
So the idea behind the
realtime database in Firebase

00:08:57.590 --> 00:09:03.000
is to allow you to effectively
build codeless middleware.

00:09:03.000 --> 00:09:06.180
Now, I've been a web developer
and a cloud developer

00:09:06.180 --> 00:09:07.500
for a long time.

00:09:07.500 --> 00:09:10.510
And web and cloud are really,
really great technologies,

00:09:10.510 --> 00:09:14.130
but a lot of the time, if I just
want to build something simple,

00:09:14.130 --> 00:09:15.543
if I want to build
something that

00:09:15.543 --> 00:09:18.280
has a database and
CRUD operations,

00:09:18.280 --> 00:09:22.220
so create, retrieve, update,
and delete, that's a lot of code

00:09:22.220 --> 00:09:23.990
that I have to
write on a server--

00:09:23.990 --> 00:09:25.500
or on a cloud server--

00:09:25.500 --> 00:09:27.050
just to do this.

00:09:27.050 --> 00:09:29.550
The idea behind the realtime
database in Firebase

00:09:29.550 --> 00:09:31.500
is that you don't
write any of that.

00:09:31.500 --> 00:09:34.500
You only write code that runs
in your client's application.

00:09:34.500 --> 00:09:37.170
And this gives
you realtime data.

00:09:37.170 --> 00:09:40.360
So it's a cloud-hosted,
no-SQL, database.

00:09:40.360 --> 00:09:42.200
And one of the magical
things that it does

00:09:42.200 --> 00:09:45.510
is the synchronization
and conflict resolution

00:09:45.510 --> 00:09:48.070
between different
instances of an app.

00:09:48.070 --> 00:09:50.400
So we all live in a
multi-device world.

00:09:50.400 --> 00:09:54.000
We all have at least one
phone, and we have tablets,

00:09:54.000 --> 00:09:56.835
and maybe we also are using
browsers, either on the phones

00:09:56.835 --> 00:09:58.950
or on our laptops as well.

00:09:58.950 --> 00:10:01.060
So if you have
built an application

00:10:01.060 --> 00:10:03.900
where you have data that
a person, for example,

00:10:03.900 --> 00:10:06.480
is updating on the
back-end database,

00:10:06.480 --> 00:10:08.550
you want that update
to be reflected

00:10:08.550 --> 00:10:10.761
across all of their devices.

00:10:10.761 --> 00:10:12.350
It's a lot of code
you have to write.

00:10:12.350 --> 00:10:13.790
That's a lot of maintenance
that you would normally

00:10:13.790 --> 00:10:14.570
have to write.

00:10:14.570 --> 00:10:17.120
But the idea behind the
Firebase realtime database

00:10:17.120 --> 00:10:19.030
is it does all of that for you.

00:10:19.030 --> 00:10:21.840
It's an event-driven database
that you access directly

00:10:21.840 --> 00:10:23.410
from your app.

00:10:23.410 --> 00:10:26.190
If you're used to writing
SQL-type applications,

00:10:26.190 --> 00:10:29.060
as I was before I
discovered Firebase,

00:10:29.060 --> 00:10:31.590
you think about those
are a pull model, where

00:10:31.590 --> 00:10:34.260
you write a piece of SQL that
pulls data from a database,

00:10:34.260 --> 00:10:36.930
and you have to fan it out
across all of your users.

00:10:36.930 --> 00:10:38.690
The realtime
database in Firebase

00:10:38.690 --> 00:10:40.840
is an event-based database.

00:10:40.840 --> 00:10:44.250
So whenever a change occurs
within the data in the database

00:10:44.250 --> 00:10:47.060
that you subscribe to, you will
get an update sent directly

00:10:47.060 --> 00:10:50.640
to you that's an event that
fires in your application

00:10:50.640 --> 00:10:53.430
that you can then respond to.

00:10:53.430 --> 00:10:54.960
And this is an
example that I just

00:10:54.960 --> 00:10:57.757
did an animation of showing
what I was talking about.

00:10:57.757 --> 00:10:59.465
The user in the center
here on the laptop

00:10:59.465 --> 00:11:03.600
made a change to the database,
and the Firebase infrastructure

00:11:03.600 --> 00:11:06.330
fans that out, sends
that event to all

00:11:06.330 --> 00:11:08.970
of the other devices
in that user's universe

00:11:08.970 --> 00:11:11.349
and will update, if you
as it developer choose to,

00:11:11.349 --> 00:11:13.515
of course, because you're
just receiving that event.

00:11:13.515 --> 00:11:15.060
It's up to you how
to handle that event.

00:11:15.060 --> 00:11:16.643
And you can update
the state of the UI

00:11:16.643 --> 00:11:19.240
or you can update
data accordingly.

00:11:19.240 --> 00:11:23.460
It's pretty cool stuff, and
I find it really exciting

00:11:23.460 --> 00:11:25.910
to develop with because,
for me as a developer,

00:11:25.910 --> 00:11:28.740
I've been working on a game
that it's made me so much more

00:11:28.740 --> 00:11:32.280
productive not to worry about
writing a lot of code that runs

00:11:32.280 --> 00:11:35.880
on a server and maintaining all
of that server infrastructure.

00:11:35.880 --> 00:11:38.620
I just designed my
realtime database.

00:11:38.620 --> 00:11:42.360
I designed it on the
Firebase console,

00:11:42.360 --> 00:11:44.750
and then I just write code
that runs on my client.

00:11:44.750 --> 00:11:47.552
And I've only got one place
to worry about writing code.

00:11:47.552 --> 00:11:49.260
One of the other things
that it also does

00:11:49.260 --> 00:11:50.760
is, it handles a
disconnected state.

00:11:53.640 --> 00:11:55.980
So for example, if
you have a user that

00:11:55.980 --> 00:11:59.960
has two devices and
Device A updates

00:11:59.960 --> 00:12:02.970
the data and Device
B is offline,

00:12:02.970 --> 00:12:06.170
what happens when Device B comes
back online is that Firebase

00:12:06.170 --> 00:12:08.875
will actually notify Device
B that a change has happened

00:12:08.875 --> 00:12:11.360
to this data so
that Device B can

00:12:11.360 --> 00:12:13.070
update its app automatically.

00:12:13.070 --> 00:12:14.820
It's really, really
neat, and it's no code

00:12:14.820 --> 00:12:16.710
that you have to write.

00:12:16.710 --> 00:12:19.266
Again, that's one of
the themes of Firebase.

00:12:19.266 --> 00:12:21.390
It is one of the things
that makes me personally so

00:12:21.390 --> 00:12:25.420
excited about Firebase is that
a lot of these common scenarios,

00:12:25.420 --> 00:12:28.690
that would usually involve
you writing a lot of code,

00:12:28.690 --> 00:12:30.995
doing a lot of debugging,
doing a lot of servicing,

00:12:30.995 --> 00:12:33.060
are things that are
handled for you and things

00:12:33.060 --> 00:12:37.210
that we've done for you as
part of building Firebase.

00:12:37.210 --> 00:12:39.130
So next is Firebase
authentication.

00:12:39.130 --> 00:12:41.320
And I just noticed that
they got rid of the English

00:12:41.320 --> 00:12:43.730
on these slides, so
I'm going by memory.

00:12:43.730 --> 00:12:46.210
And so if I get any of
these bullet points wrong,

00:12:46.210 --> 00:12:48.010
you're going to have
to correct me, OK?

00:12:48.010 --> 00:12:51.130
So the idea behind
Firebase authentication

00:12:51.130 --> 00:12:53.800
is that one of
the most difficult

00:12:53.800 --> 00:12:56.290
and one of the most
expensive parts of building

00:12:56.290 --> 00:12:59.800
any application is building
a secure infrastructure

00:12:59.800 --> 00:13:02.880
for your users identity.

00:13:02.880 --> 00:13:04.510
You've probably
all heard stories

00:13:04.510 --> 00:13:07.200
of places that have been
hacked and users' information

00:13:07.200 --> 00:13:08.760
has been stolen.

00:13:08.760 --> 00:13:11.650
And because of poor
security, because of things

00:13:11.650 --> 00:13:16.270
that were written badly, because
of maybe social issues where

00:13:16.270 --> 00:13:19.510
an employee let
passwords out and stuff

00:13:19.510 --> 00:13:21.710
like that when he was
let go with a company,

00:13:21.710 --> 00:13:23.110
these kind of things.

00:13:23.110 --> 00:13:25.360
And for you to build
your applications,

00:13:25.360 --> 00:13:27.520
it's a massive
investment for you

00:13:27.520 --> 00:13:31.780
to build a secure infrastructure
for your users' identity.

00:13:31.780 --> 00:13:35.950
So with that in mind, we
built Firebase Authentication.

00:13:35.950 --> 00:13:40.810
With Firebase Authentication
being a federated identity

00:13:40.810 --> 00:13:44.560
service so that if
users have identities

00:13:44.560 --> 00:13:47.890
on places like
GitHub or Facebook

00:13:47.890 --> 00:13:50.260
or Twitter or
Google and new ones

00:13:50.260 --> 00:13:52.650
that we're adding all
the time, then the idea

00:13:52.650 --> 00:13:54.780
is that they can
use that directly

00:13:54.780 --> 00:13:57.262
within your application.

00:13:57.262 --> 00:13:58.720
You're writing a
little bit of code

00:13:58.720 --> 00:14:01.410
to hook up the button to
whatever the back-end service

00:14:01.410 --> 00:14:03.190
is going to be,
and then they can

00:14:03.190 --> 00:14:05.280
access their Firebase
back-end data

00:14:05.280 --> 00:14:08.560
using that identity
instead of them needing

00:14:08.560 --> 00:14:12.360
yet another identity to sign
up for your application.

00:14:12.360 --> 00:14:14.920
And one of the other
reasons that we've

00:14:14.920 --> 00:14:20.920
been building this is that we've
learned from developers that

00:14:20.920 --> 00:14:24.880
building a user interface
to let somebody sign up,

00:14:24.880 --> 00:14:28.710
to enter all their details,
to get a confirmation mail,

00:14:28.710 --> 00:14:31.540
to handle that confirmation
mail, to move forward,

00:14:31.540 --> 00:14:35.050
all of that user flow to sign
somebody up to use your app,

00:14:35.050 --> 00:14:36.460
loses a lot of users.

00:14:36.460 --> 00:14:39.520
People just want to use their
existing social identities,

00:14:39.520 --> 00:14:42.160
so we've built that
in to Firebase.

00:14:42.160 --> 00:14:44.980
We've also made an open
source, completely extensible,

00:14:44.980 --> 00:14:47.980
back end for this so that
you can download from GitHub,

00:14:47.980 --> 00:14:50.680
and you can start building your
own identities on top of this

00:14:50.680 --> 00:14:51.639
if you so desired.

00:14:51.639 --> 00:14:53.930
And one of the others that
I didn't mention, of course,

00:14:53.930 --> 00:14:56.670
is if you just want a simple
username email-type identity,

00:14:56.670 --> 00:14:59.680
that's built into the
structure for you also.

00:14:59.680 --> 00:15:02.630
Did I get all of the bullets?

00:15:02.630 --> 00:15:04.486
I see some nodding heads.

00:15:04.486 --> 00:15:07.455
OK, good.

00:15:07.455 --> 00:15:09.540
So next up is hosting.

00:15:09.540 --> 00:15:13.300
And this one actually surprised
me in how powerful it is

00:15:13.300 --> 00:15:15.760
and how useful it is,
because if you've ever

00:15:15.760 --> 00:15:18.840
deployed an app
to the Play Store

00:15:18.840 --> 00:15:21.670
or to the Apple's App
Store, you generally

00:15:21.670 --> 00:15:24.520
need a website
associated with that app.

00:15:24.520 --> 00:15:27.330
Now, sometimes the website might
be just something very simple,

00:15:27.330 --> 00:15:29.380
a couple of
screenshots of the app,

00:15:29.380 --> 00:15:32.740
contact details, support
links, those type of things.

00:15:32.740 --> 00:15:35.901
But think about all that's
involved in doing that.

00:15:35.901 --> 00:15:36.400
Right?

00:15:36.400 --> 00:15:38.530
You need to get a domain name.

00:15:38.530 --> 00:15:39.940
You need to hire webspace.

00:15:39.940 --> 00:15:43.580
You need to build maybe
PHP or some static HTML

00:15:43.580 --> 00:15:44.630
or whatever it is.

00:15:44.630 --> 00:15:48.510
And it's a whole extra effort
for you to build and maintain.

00:15:48.510 --> 00:15:51.660
Funny story-- I'm going to be
doing a demo this afternoon

00:15:51.660 --> 00:15:55.900
on Cloud Messaging on a
website that I own and I built.

00:15:55.900 --> 00:15:56.565
And yesterday--

00:15:56.565 --> 00:15:59.020
I'm sorry, the day
before yesterday--

00:15:59.020 --> 00:16:02.120
my billing on that website
actually expired and broke

00:16:02.120 --> 00:16:02.980
my demo.

00:16:02.980 --> 00:16:05.170
Because it's work
that I have to do

00:16:05.170 --> 00:16:07.510
to maintain the billing on
that, to maintain the domain

00:16:07.510 --> 00:16:11.130
name on that, I frantically
had to get my billing redone

00:16:11.130 --> 00:16:13.780
for that website, to
repay for that website

00:16:13.780 --> 00:16:15.640
so that I could
do the demo today.

00:16:15.640 --> 00:16:19.060
That's work that I shouldn't
have to do as a developer.

00:16:19.060 --> 00:16:21.160
That's all that extra
infrastructure stuff that,

00:16:21.160 --> 00:16:24.030
as a developer, that if
I could make that easier,

00:16:24.030 --> 00:16:27.080
it will allow me to
focus on writing my code

00:16:27.080 --> 00:16:28.310
and on building better apps.

00:16:28.310 --> 00:16:31.210
So the idea behind
Firebase Hosting

00:16:31.210 --> 00:16:33.970
is that as part of
your Firebase Console,

00:16:33.970 --> 00:16:38.080
you've got the ability to
surf basic simple websites,

00:16:38.080 --> 00:16:39.470
static websites.

00:16:39.470 --> 00:16:43.180
So HTML, JavaScript, all of
those kind of those things,

00:16:43.180 --> 00:16:44.250
obviously images.

00:16:44.250 --> 00:16:46.490
It's secure socket
layer by default.

00:16:46.490 --> 00:16:48.650
And you can [? map a ?]
[INAUDIBLE] domain to it.

00:16:48.650 --> 00:16:50.680
So it never takes
away the requirement

00:16:50.680 --> 00:16:52.700
of you having to build
and maintain a website,

00:16:52.700 --> 00:16:54.370
but it makes it a
whole lot easier.

00:16:54.370 --> 00:16:56.230
And because it's
done in Firebase,

00:16:56.230 --> 00:17:00.512
it's free as part of your
Firebase subscription.

00:17:00.512 --> 00:17:03.215
And so there are different price
tiers of Firebase subscription,

00:17:03.215 --> 00:17:06.770
but this is one of the ones
that's in the free tier.

00:17:06.770 --> 00:17:09.020
So next up is Firebase Storage.

00:17:09.020 --> 00:17:11.020
So this takes it a
little bit further,

00:17:11.020 --> 00:17:14.589
where if you are building an
application that requires you

00:17:14.589 --> 00:17:17.380
to store data on
your users' behalf,

00:17:17.380 --> 00:17:19.839
maybe you're building a
photo sharing application,

00:17:19.839 --> 00:17:23.410
maybe you're building a
video sharing application.

00:17:23.410 --> 00:17:26.500
And you need to be able to store
files on your users' behalf,

00:17:26.500 --> 00:17:28.540
and maybe your users will
be sharing those files

00:17:28.540 --> 00:17:31.330
with each other, the idea
is that Firebase Storage

00:17:31.330 --> 00:17:32.930
will do that for you.

00:17:32.930 --> 00:17:35.599
Now, of course, you could
have your own storage system.

00:17:35.599 --> 00:17:37.390
There's no reason why
you wouldn't do that,

00:17:37.390 --> 00:17:39.790
but think about a
scenario of you're

00:17:39.790 --> 00:17:42.420
building an application
that maybe manages videos

00:17:42.420 --> 00:17:45.830
on behalf of your users, and
videos can get pretty big.

00:17:45.830 --> 00:17:49.360
Now, if user A shares a
video with user B, and user B

00:17:49.360 --> 00:17:51.190
wants to download
that video, what

00:17:51.190 --> 00:17:53.080
happens if they
lose connectivity

00:17:53.080 --> 00:17:54.550
during that download?

00:17:54.550 --> 00:17:56.920
If you were building your own
system, you as a developer

00:17:56.920 --> 00:17:58.370
would have to
write code and have

00:17:58.370 --> 00:18:01.840
to write your infrastructure
to be able to manage handling

00:18:01.840 --> 00:18:04.600
that download if the
connectivity goes down,

00:18:04.600 --> 00:18:07.030
and then you can resume
later on halfway through,

00:18:07.030 --> 00:18:07.905
those type of things.

00:18:07.905 --> 00:18:10.887
But with Firebase Storage,
we put in that code for you.

00:18:10.887 --> 00:18:12.470
We've done that type
of thing for you.

00:18:12.470 --> 00:18:14.470
All of the quality
services that you

00:18:14.470 --> 00:18:17.980
would expect from a cloud-based
infrastructure for managing

00:18:17.980 --> 00:18:22.360
files have been built
into Firebase for you.

00:18:22.360 --> 00:18:23.940
Next up is one of my favorites.

00:18:23.940 --> 00:18:26.145
And I have a talk this
afternoon about this.

00:18:26.145 --> 00:18:28.273
And this is Firebase
Cloud Messaging.

00:18:28.273 --> 00:18:32.800
Now Firebase Cloud Messaging
is a cross-platform, no-cost

00:18:32.800 --> 00:18:36.620
solution for realtime messaging.

00:18:36.620 --> 00:18:39.820
We've measured that connected
devices will generally

00:18:39.820 --> 00:18:40.810
receive--

00:18:40.810 --> 00:18:43.030
something like 95%
of connected devices

00:18:43.030 --> 00:18:45.220
will generally
receive the message

00:18:45.220 --> 00:18:47.560
in less than 500 milliseconds.

00:18:47.560 --> 00:18:49.270
And we are actually
reaching a point

00:18:49.270 --> 00:18:52.600
now where we're serving over
a trillion messages per week

00:18:52.600 --> 00:18:53.980
on this.

00:18:53.980 --> 00:18:56.940
It's free for you to use
if you want to do so.

00:18:56.940 --> 00:19:02.740
The idea is notifications are a
great to drive user retention.

00:19:02.740 --> 00:19:06.060
Notifications are a great way
to drive user interaction.

00:19:06.060 --> 00:19:08.140
And by building this
infrastructure that

00:19:08.140 --> 00:19:10.640
will allow you to do
realtime notifications,

00:19:10.640 --> 00:19:12.940
or close to realtime,
notifications

00:19:12.940 --> 00:19:14.890
at no cost to you,
we think you've

00:19:14.890 --> 00:19:17.950
got something that will really
help you to build winning apps.

00:19:17.950 --> 00:19:21.680
Now messages can be targeted
in a number of different ways.

00:19:21.680 --> 00:19:26.020
So for example, when a user
signs onto a Firebase app,

00:19:26.020 --> 00:19:30.340
and that Firebase registers
itself with Cloud Messaging,

00:19:30.340 --> 00:19:33.701
the device gets registered with
Cloud Messaging, not the user.

00:19:33.701 --> 00:19:35.575
We have no details on
the user's information.

00:19:35.575 --> 00:19:37.570
The user's information
is private,

00:19:37.570 --> 00:19:40.210
but the device itself will be
registered with Cloud Messaging

00:19:40.210 --> 00:19:42.460
so that we know the
address of that device

00:19:42.460 --> 00:19:44.770
so that messages
can be sent to that.

00:19:44.770 --> 00:19:47.200
Now, once you have
that device ID,

00:19:47.200 --> 00:19:50.080
you can send messages
to a single device,

00:19:50.080 --> 00:19:53.230
that device could be subscribed
to a group of related devices.

00:19:53.230 --> 00:19:54.850
You could send to that group.

00:19:54.850 --> 00:19:56.530
The device can
subscribe to something

00:19:56.530 --> 00:20:00.640
that we call topics, where the
idea is that you as a developer

00:20:00.640 --> 00:20:01.990
can build a topic.

00:20:01.990 --> 00:20:03.490
And an example I
always like to use

00:20:03.490 --> 00:20:05.570
is for example, an
application that

00:20:05.570 --> 00:20:08.120
tells you about airport delays.

00:20:08.120 --> 00:20:11.350
So we're in Beijing right now.

00:20:11.350 --> 00:20:13.670
And if you were building an
application for your users

00:20:13.670 --> 00:20:15.530
that tells you about
the status of flights

00:20:15.530 --> 00:20:17.380
in and out of
Beijing, and if there

00:20:17.380 --> 00:20:21.000
is a delay to your flight,
you could set a topic

00:20:21.000 --> 00:20:24.780
for Beijing Airport
and to send only

00:20:24.780 --> 00:20:28.190
to users that have subscribed
to that topic, notifications

00:20:28.190 --> 00:20:29.840
about Beijing Airport.

00:20:29.840 --> 00:20:32.960
Now, I live in Seattle,
and I don't particularly

00:20:32.960 --> 00:20:36.130
want to receive notifications
about Beijing when I'm at home.

00:20:36.130 --> 00:20:37.970
I do want to receive
them when I'm here.

00:20:37.970 --> 00:20:41.570
So as a developer, for
somebody who's in Seattle,

00:20:41.570 --> 00:20:45.100
you could have a
topic for Seattle

00:20:45.100 --> 00:20:47.860
so that notifications
about delays or status

00:20:47.860 --> 00:20:50.990
of Seattle Airport could only
be sent to that end user.

00:20:50.990 --> 00:20:52.950
All you have to do as
a developer is set up

00:20:52.950 --> 00:20:55.760
the notifications,
provide the user interface

00:20:55.760 --> 00:20:58.950
to your end users about what
topics are available to them.

00:20:58.950 --> 00:21:01.580
And when the end user
picks a topic, then

00:21:01.580 --> 00:21:03.650
when you send
messages to the topic,

00:21:03.650 --> 00:21:05.130
only that user will get those.

00:21:05.130 --> 00:21:06.010
It's really powerful.

00:21:06.010 --> 00:21:07.340
It's really cool stuff.

00:21:07.340 --> 00:21:09.140
And when you add
analytics on top of that,

00:21:09.140 --> 00:21:10.800
you could make it
really interesting.

00:21:10.800 --> 00:21:12.460
So that you could
say only users who

00:21:12.460 --> 00:21:15.800
have been online in the last
30 days should receive it.

00:21:15.800 --> 00:21:19.684
Or only users in a particular
time zone should receive it.

00:21:19.684 --> 00:21:21.350
You don't want to
receive a notification

00:21:21.350 --> 00:21:23.630
for London Heathrow
Airport, for example,

00:21:23.630 --> 00:21:24.950
in the middle of your night.

00:21:24.950 --> 00:21:27.590
So you can add analytics
on top of all of this

00:21:27.590 --> 00:21:30.630
to be able to drive message
targeting to make it really,

00:21:30.630 --> 00:21:31.550
really smart.

00:21:31.550 --> 00:21:32.880
Messages are very powerful.

00:21:32.880 --> 00:21:35.060
But if they're used
incorrectly, they

00:21:35.060 --> 00:21:36.582
can also be very obnoxious.

00:21:36.582 --> 00:21:38.290
So you don't want to
turn off your users.

00:21:38.290 --> 00:21:40.590
And as a result, we're
providing the tools

00:21:40.590 --> 00:21:42.600
to allow you to be very
versatile about how

00:21:42.600 --> 00:21:43.780
you use messaging.

00:21:43.780 --> 00:21:46.902
I'm going to be showing a demo
of Google Cloud Messaging,

00:21:46.902 --> 00:21:49.110
the server that I spoke
about that I built earlier on

00:21:49.110 --> 00:21:50.240
is using that.

00:21:50.240 --> 00:21:51.810
So if you come back
this afternoon,

00:21:51.810 --> 00:21:54.380
I can show you how it all works.

00:21:54.380 --> 00:21:56.796
My other personal
favorite is Remote Config.

00:21:56.796 --> 00:21:58.880
And this one takes a
little bit of a moment

00:21:58.880 --> 00:22:02.166
to get your head around what's
possible with Remote Config.

00:22:02.166 --> 00:22:04.390
Now, the idea
behind Remote Config

00:22:04.390 --> 00:22:08.240
is that it's server side
variables instead of the client

00:22:08.240 --> 00:22:09.710
side variables.

00:22:09.710 --> 00:22:11.750
So you can build
your application

00:22:11.750 --> 00:22:15.090
to be decoupled completely
from server side--

00:22:15.090 --> 00:22:18.140
from variables-- by putting
them on the server side

00:22:18.140 --> 00:22:21.350
and then driving their
content off of analytics.

00:22:21.350 --> 00:22:23.456
Let me give you an
example of this.

00:22:23.456 --> 00:22:25.580
The game that I mentioned
that I've been working on

00:22:25.580 --> 00:22:29.210
that I've been writing, it
involves you interacting

00:22:29.210 --> 00:22:31.310
with a virtual character.

00:22:31.310 --> 00:22:34.190
And this virtual character
in the first version

00:22:34.190 --> 00:22:37.250
of the game that I built is
it's an animated character,

00:22:37.250 --> 00:22:41.320
and she speaks English,
because I speak English.

00:22:41.320 --> 00:22:44.420
And I've been adapting
this game for other markets

00:22:44.420 --> 00:22:47.910
so that I built a version of it
for the Japanese market where

00:22:47.910 --> 00:22:50.270
the character speaks
Japanese, and another one

00:22:50.270 --> 00:22:52.290
for the Korean market
where she speaks Korean.

00:22:52.290 --> 00:22:54.664
And I'm going to have to build
one for the Chinese market

00:22:54.664 --> 00:22:56.236
soon, where she
would speak Chinese.

00:22:56.236 --> 00:22:58.610
But what I've been able to do
with this application using

00:22:58.610 --> 00:23:02.610
Remote Config was a number
of different things.

00:23:02.610 --> 00:23:05.840
First of all, if
the user prefers

00:23:05.840 --> 00:23:09.050
English as their language,
regardless of where they live,

00:23:09.050 --> 00:23:11.180
they could receive
the English character.

00:23:11.180 --> 00:23:13.970
So all I have to do is
set for that specific user

00:23:13.970 --> 00:23:16.520
the language on a
server side variable.

00:23:16.520 --> 00:23:20.000
And as a result, instead of
me modifying the application,

00:23:20.000 --> 00:23:21.750
I could just give
them the character

00:23:21.750 --> 00:23:24.630
that they want in the
language that they prefer.

00:23:24.630 --> 00:23:26.350
Another example
of this is that--

00:23:26.350 --> 00:23:30.220
so the application
itself uses geolocation.

00:23:30.220 --> 00:23:32.330
So that if I'm--

00:23:32.330 --> 00:23:34.730
it's a game that you play
in a number of locations

00:23:34.730 --> 00:23:36.132
in the real world.

00:23:36.132 --> 00:23:39.380
And so using geolocation
and using Google's APIs

00:23:39.380 --> 00:23:43.280
for geolocation, you have an
API key that you need to use.

00:23:43.280 --> 00:23:46.490
If I deploy that
API key in my app,

00:23:46.490 --> 00:23:48.630
somebody could decompile
that application

00:23:48.630 --> 00:23:51.230
and pull out the
API key, and then

00:23:51.230 --> 00:23:54.020
maybe provide some kind of
denial of service for me

00:23:54.020 --> 00:23:57.515
for the location services
by hammering on that API key

00:23:57.515 --> 00:24:00.710
and overloading it so that
it wouldn't work for me.

00:24:00.710 --> 00:24:04.730
But if I use Remote Config, I
put that API key in a Remote

00:24:04.730 --> 00:24:08.820
Config, I now no longer
ship it with my application,

00:24:08.820 --> 00:24:11.360
so now as a user is
running my application,

00:24:11.360 --> 00:24:13.830
they read the API key
out of Remote Config,

00:24:13.830 --> 00:24:16.255
and they get the API
key data, and they're

00:24:16.255 --> 00:24:18.520
good to go with whatever
they need to do.

00:24:18.520 --> 00:24:21.440
And if somebody does something
so that my API key no longer

00:24:21.440 --> 00:24:23.630
works, all I have to
do is change it once

00:24:23.630 --> 00:24:25.750
on the server in these
server side variables,

00:24:25.750 --> 00:24:29.030
and then the users will get
a new API key going forward,

00:24:29.030 --> 00:24:30.830
because they're reading
it from the server.

00:24:30.830 --> 00:24:33.350
There are so many
different ways that you

00:24:33.350 --> 00:24:34.560
can do things with this.

00:24:34.560 --> 00:24:37.820
It's a very simple but
very powerful technology.

00:24:37.820 --> 00:24:40.910
And some of the scenarios
that become available to you

00:24:40.910 --> 00:24:45.260
by using Remote Config, by using
server side variables to change

00:24:45.260 --> 00:24:48.660
the behavior of your application
without you actually writing

00:24:48.660 --> 00:24:51.180
code of deploying new
versions of your application

00:24:51.180 --> 00:24:51.950
are really cool.

00:24:51.950 --> 00:24:53.840
I'll give one more,
and that is if you're

00:24:53.840 --> 00:24:56.585
writing an eCommerce
application, for example.

00:24:56.585 --> 00:24:59.630
And you could say, for example,
provide a discount that, hey, I

00:24:59.630 --> 00:25:00.780
love people in China.

00:25:00.780 --> 00:25:03.920
So I'm going to give them a
10% discount on everything

00:25:03.920 --> 00:25:05.932
they buy in my
eCommerce application,

00:25:05.932 --> 00:25:07.640
whereas people in the
USA, I'm only going

00:25:07.640 --> 00:25:09.776
to give them a 5% discount.

00:25:09.776 --> 00:25:11.840
The idea is, with
analytics, I can then

00:25:11.840 --> 00:25:15.530
use an analytic that
says if user is in China,

00:25:15.530 --> 00:25:16.940
set this variable to 10.

00:25:16.940 --> 00:25:21.240
If user is in USA, set it
to 5, otherwise set it to--

00:25:21.240 --> 00:25:24.210
I don't know, 3, something
along those lines.

00:25:24.210 --> 00:25:26.890
So then the application,
triggered by analytics,

00:25:26.890 --> 00:25:28.940
will be able to read
that value and give me

00:25:28.940 --> 00:25:32.262
different discount amounts
in those different countries.

00:25:32.262 --> 00:25:33.970
I could add another
layer on top of this,

00:25:33.970 --> 00:25:35.335
then say, hey, if
it's December--

00:25:35.335 --> 00:25:37.043
we're coming up to
the Christmas period--

00:25:37.043 --> 00:25:38.491
that's double the discount.

00:25:38.491 --> 00:25:40.782
You know, so then China would
get 20, USA would get 10,

00:25:40.782 --> 00:25:42.650
and everybody else would get 6.

00:25:42.650 --> 00:25:47.300
All these kind of things become
possible by having variables

00:25:47.300 --> 00:25:49.220
stored on the server side.

00:25:49.220 --> 00:25:51.630
You don't write any code to
manage them in the server,

00:25:51.630 --> 00:25:53.740
and you just read them
using the Firebase Remote

00:25:53.740 --> 00:25:55.700
Config on the client side.

00:25:55.700 --> 00:25:57.830
And when you layer
analytics on top of it,

00:25:57.830 --> 00:26:01.300
there are lots of fun
things you can do.

00:26:01.300 --> 00:26:03.784
So the next one is
Test Lab for Android.

00:26:03.784 --> 00:26:08.210
And one of the things that we
learned about this since we've

00:26:08.210 --> 00:26:10.380
been working on
it is that Android

00:26:10.380 --> 00:26:11.870
is a very, very
diverse operating

00:26:11.870 --> 00:26:14.103
system with so many
different phones,

00:26:14.103 --> 00:26:17.480
with so many different flavors,
with so many different form

00:26:17.480 --> 00:26:20.590
factors, the screen resolutions,
those type of things

00:26:20.590 --> 00:26:22.100
in Android devices.

00:26:22.100 --> 00:26:25.240
And often, if you're a
developer, particularly

00:26:25.240 --> 00:26:28.070
if you're a small developer,
maybe you're in China,

00:26:28.070 --> 00:26:30.890
and you want to test on a
phone that's available only

00:26:30.890 --> 00:26:31.490
in the US.

00:26:31.490 --> 00:26:32.640
Let me give an example.

00:26:32.640 --> 00:26:34.473
How many of you are
Android developers here?

00:26:36.121 --> 00:26:36.620
OK.

00:26:36.620 --> 00:26:37.130
Quite a few.

00:26:37.130 --> 00:26:41.030
Keep your hands up if
you have a Google Pixel.

00:26:41.030 --> 00:26:42.500
None.

00:26:42.500 --> 00:26:44.400
Neither do I. Right?

00:26:44.400 --> 00:26:46.640
But if I want to build and
test it on a Google Pixel,

00:26:46.640 --> 00:26:48.140
I don't have a Pixel.

00:26:48.140 --> 00:26:49.565
You don't have a Pixel.

00:26:49.565 --> 00:26:50.940
And what happens
when the Pixel 2

00:26:50.940 --> 00:26:53.662
or whatever the next version is
going to be called comes out?

00:26:53.662 --> 00:26:55.370
It might take a while
before you get one,

00:26:55.370 --> 00:26:57.770
but you want to be
able to test on that.

00:26:57.770 --> 00:26:59.455
And that's the idea
behind the Test Lab

00:26:59.455 --> 00:27:03.380
for Android is that
it's hosted by Google.

00:27:03.380 --> 00:27:07.610
And it's a way that you could
upload your APK to Google

00:27:07.610 --> 00:27:11.390
and have Google test it for
you on a variety of devices,

00:27:11.390 --> 00:27:13.640
most of which you probably
don't have, many of which

00:27:13.640 --> 00:27:15.800
may not be available
in your country.

00:27:15.800 --> 00:27:18.935
And think about just all of
the work and money and expense

00:27:18.935 --> 00:27:21.620
that you have to do to
maintain a test bed of all

00:27:21.620 --> 00:27:23.810
these different devices,
with new ones coming out

00:27:23.810 --> 00:27:26.040
daily and new features
coming out daily.

00:27:26.040 --> 00:27:28.550
It's a nightmare to be
able to maintain that.

00:27:28.550 --> 00:27:30.830
So what we do is we have
a number of devices,

00:27:30.830 --> 00:27:33.780
some virtual, some physical,
in our data centers.

00:27:33.780 --> 00:27:36.730
We upload your APK to them,
we do the test for you,

00:27:36.730 --> 00:27:39.260
and there's a number of what
we call robotests, which

00:27:39.260 --> 00:27:41.566
are standard tests
like open, close,

00:27:41.566 --> 00:27:43.940
touch this, touch that, those
type of things, swipe left,

00:27:43.940 --> 00:27:45.162
swipe right.

00:27:45.162 --> 00:27:47.370
And then there are custom
tests that you can actually

00:27:47.370 --> 00:27:51.250
define a custom test that says
enter this user's details,

00:27:51.250 --> 00:27:54.360
press this button, go here, go
there, those type of things,

00:27:54.360 --> 00:27:55.964
to get the response.

00:27:55.964 --> 00:27:58.005
And then we'll give you
reports of what happened,

00:27:58.005 --> 00:28:00.300
and we'll give you
screenshots of what happened.

00:28:00.300 --> 00:28:02.550
So the idea is to take
all the of that burden

00:28:02.550 --> 00:28:04.640
and all of that expense
and all of that difficulty

00:28:04.640 --> 00:28:10.200
and complexity of testing on
diverse devices away from you

00:28:10.200 --> 00:28:13.480
and give you this service
on which to do it.

00:28:13.480 --> 00:28:15.350
Crash Reporting I
mentioned earlier on,

00:28:15.350 --> 00:28:17.810
and the number-one
reason why people

00:28:17.810 --> 00:28:19.745
get negative reviews
of their apps

00:28:19.745 --> 00:28:23.920
in Play Store and the App Store
is because the app crashed.

00:28:23.920 --> 00:28:25.920
Earlier I mentioned
I was writing a game,

00:28:25.920 --> 00:28:28.625
and when I first sent
a copy of the game

00:28:28.625 --> 00:28:31.510
to some people in Korea
to test the game for me,

00:28:31.510 --> 00:28:32.934
it crashed every time.

00:28:32.934 --> 00:28:35.600
And I had no idea why it crashed
every time, because I was using

00:28:35.600 --> 00:28:38.840
Remote Configs to pretend I
was in Korea so that I could

00:28:38.840 --> 00:28:40.419
get the Korean
character, and she

00:28:40.419 --> 00:28:41.585
was talking to me in Korean.

00:28:41.585 --> 00:28:42.810
I didn't understand
a word of it,

00:28:42.810 --> 00:28:45.410
but I knew that it was working,
but when I sent it to people

00:28:45.410 --> 00:28:46.994
in Korea, it was crashing.

00:28:46.994 --> 00:28:48.410
I didn't know why
it was crashing,

00:28:48.410 --> 00:28:51.110
and it turned out that I
had some bugs in my code

00:28:51.110 --> 00:28:52.610
that for checking
the network, there

00:28:52.610 --> 00:28:55.349
was some difference in checking
the network in Korea than I had

00:28:55.349 --> 00:28:56.810
in checking my home Wi-Fi.

00:28:56.810 --> 00:28:59.080
And as a result, it was
trying to download videos

00:28:59.080 --> 00:29:01.160
that it couldn't actually
see and it crashed.

00:29:01.160 --> 00:29:04.370
And using Crash Reporting,
I was able to see this.

00:29:04.370 --> 00:29:06.630
I couldn't call the
person, because--

00:29:06.630 --> 00:29:09.607
well, I could call the person,
but when I asked her, well,

00:29:09.607 --> 00:29:10.190
what happened?

00:29:10.190 --> 00:29:13.140
She said I opened the app and
said, you know, the app failed.

00:29:13.140 --> 00:29:14.100
And that was it.

00:29:14.100 --> 00:29:15.600
That was the only
data that she had.

00:29:15.600 --> 00:29:17.780
And that is typically the
only data that users have.

00:29:17.780 --> 00:29:19.670
But when I could go
into Crash Reporting,

00:29:19.670 --> 00:29:22.090
I could actually see, and
I could see a stack trace.

00:29:22.090 --> 00:29:24.590
And then from that stack trace,
I could tell what went wrong

00:29:24.590 --> 00:29:26.390
and how to fix it.

00:29:26.390 --> 00:29:28.540
And I was able to fix it
and ship a new version

00:29:28.540 --> 00:29:30.998
without getting on a plane and
going to Korea to figure out

00:29:30.998 --> 00:29:32.570
why it was failing.

00:29:32.570 --> 00:29:35.560
And that's the real
power of Crash Reporting.

00:29:35.560 --> 00:29:38.760
It will allow you to see
why things went wrong.

00:29:38.760 --> 00:29:40.960
You don't have to wait
for somebody to call you,

00:29:40.960 --> 00:29:42.450
that you can see the crashes.

00:29:42.450 --> 00:29:44.658
If you remember already what
I showed in the Console,

00:29:44.658 --> 00:29:47.360
you could see that this person
had had some crashes, and you

00:29:47.360 --> 00:29:50.180
could go into the Firebase
Console, who's getting crashes,

00:29:50.180 --> 00:29:52.552
where are the crashes happening,
why are they happening,

00:29:52.552 --> 00:29:54.147
and getting a
stack trace of that

00:29:54.147 --> 00:29:56.605
so you can fix it and
push out a new version.

00:29:56.605 --> 00:29:58.690
And it's a great way also
to use notifications,

00:29:58.690 --> 00:30:00.690
because then you can push
a notification to say,

00:30:00.690 --> 00:30:02.996
hey, we're going to ship
a new version because

00:30:02.996 --> 00:30:05.430
of crashing XYZ.

00:30:05.430 --> 00:30:07.684
And again, this is all
integrated with analytics.

00:30:07.684 --> 00:30:09.350
So you could use
analytics, for example,

00:30:09.350 --> 00:30:11.150
to filter the
crashes to say, OK,

00:30:11.150 --> 00:30:14.195
show me why people with
a particular device

00:30:14.195 --> 00:30:17.260
in a particular place are
crashing so that you can group

00:30:17.260 --> 00:30:19.206
them together and figure
out and just really

00:30:19.206 --> 00:30:20.580
do a deep dive
into understanding

00:30:20.580 --> 00:30:24.110
why your application
may be failing.

00:30:24.110 --> 00:30:26.800
So those are the
technologies for developing

00:30:26.800 --> 00:30:31.332
and for building on top of the
Android APIs and the iOS APIs

00:30:31.332 --> 00:30:32.960
to help you to
build better apps.

00:30:32.960 --> 00:30:35.750
But beyond building apps, you
also want to grow your apps.

00:30:35.750 --> 00:30:38.160
You want to grow your business.

00:30:38.160 --> 00:30:41.450
So the first of these is
what we call App Invites.

00:30:41.450 --> 00:30:44.360
Now, I have an awesome
15-year-old son-- oop, sorry,

00:30:44.360 --> 00:30:45.110
he just turned 16.

00:30:45.110 --> 00:30:47.310
I have an awesome
16-year-old son.

00:30:47.310 --> 00:30:50.090
And what he does is he
goes into the Play Store,

00:30:50.090 --> 00:30:53.265
and he downloads lots and
lots and lots of games.

00:30:53.265 --> 00:30:56.150
And he plays these games
for two or three minutes,

00:30:56.150 --> 00:30:58.690
and then he either throws
them away or he keeps them.

00:30:58.690 --> 00:31:01.099
And the ones that he
keeps, he tells me about so

00:31:01.099 --> 00:31:03.265
that I don't have to spend
all this time downlaoding

00:31:03.265 --> 00:31:05.520
these games, and I
discover some great fun

00:31:05.520 --> 00:31:07.240
games because of my son.

00:31:07.240 --> 00:31:08.800
Now, we realize
that not everybody

00:31:08.800 --> 00:31:11.725
has an awesome
16-year-old son like I do,

00:31:11.725 --> 00:31:14.660
so what we wanted to do
was make it really easy

00:31:14.660 --> 00:31:18.000
so that if somebody is playing
your game or playing your app

00:31:18.000 --> 00:31:21.710
and they want to share that
with people that they care about

00:31:21.710 --> 00:31:24.460
or that they would like
to discover this app,

00:31:24.460 --> 00:31:27.780
we wanted to make that easy for
you so we built App Invites.

00:31:27.780 --> 00:31:30.740
Now, App Invites, it
allowed this-- like my son

00:31:30.740 --> 00:31:33.395
was using your app and your app
had App Invites built into it,

00:31:33.395 --> 00:31:36.700
then he could share it by SMS
or he can share it via email.

00:31:36.700 --> 00:31:39.050
But what makes App
Invites really smart

00:31:39.050 --> 00:31:42.700
is that we put some AI into
this so that what it does is,

00:31:42.700 --> 00:31:46.590
it looks at the type of
application that he's sharing,

00:31:46.590 --> 00:31:48.520
and it looks at
the type of person

00:31:48.520 --> 00:31:50.170
who generally likes that.

00:31:50.170 --> 00:31:52.630
And it sorts the
contact list that way.

00:31:52.630 --> 00:31:55.940
So for example, almost every
time he shares a game with me--

00:31:55.940 --> 00:31:58.680
I know it's going to be a good
game, I'm going to install it,

00:31:58.680 --> 00:32:00.430
so I'm going to be at
the top of the list.

00:32:00.430 --> 00:32:03.219
It's not alphabetically
sorted or anything like that.

00:32:03.219 --> 00:32:04.760
It's got this
intelligence behind it.

00:32:04.760 --> 00:32:08.702
And his mom, who says he
plays way too many games

00:32:08.702 --> 00:32:10.410
and never installs
any that he sends her,

00:32:10.410 --> 00:32:12.556
is going to be at the
bottom of the list.

00:32:12.556 --> 00:32:14.830
So that's the idea
behind App Invites.

00:32:14.830 --> 00:32:19.390
You get the intelligence of
the list being sorted according

00:32:19.390 --> 00:32:22.720
to the people who are
most likely to really want

00:32:22.720 --> 00:32:23.830
to see this engagement.

00:32:23.830 --> 00:32:25.885
And as a result,
that prevents spam.

00:32:25.885 --> 00:32:27.570
That prevents
spammy-type invites,

00:32:27.570 --> 00:32:30.050
and it makes the
overall experience

00:32:30.050 --> 00:32:31.812
with the person
sharing and the person

00:32:31.812 --> 00:32:34.190
receiving stuff like that.

00:32:34.190 --> 00:32:35.850
Now, this is built
on a technology

00:32:35.850 --> 00:32:37.283
called Dynamic Links.

00:32:37.283 --> 00:32:41.500
Now, Dynamic Links are
basically just URLs,

00:32:41.500 --> 00:32:45.770
but they're URLs that maintain
context throughout a session.

00:32:45.770 --> 00:32:47.870
Now, that sounds really complex.

00:32:47.870 --> 00:32:50.370
So let me give an example
of how these work.

00:32:50.370 --> 00:32:53.905
So I like to eat, as
you can probably tell.

00:32:53.905 --> 00:32:58.220
And say, for example, I have
a recipe app on my phone.

00:32:58.220 --> 00:33:00.310
And I find a recipe
for something

00:33:00.310 --> 00:33:03.970
that I really, really like,
and what's going to happen?

00:33:03.970 --> 00:33:06.856
I'm a terrible cook, but
my wife is a terrific cook.

00:33:06.856 --> 00:33:10.815
My wife is Chinese, so of
course she's a terrific cook.

00:33:10.815 --> 00:33:13.170
And so what happens
is I'll call her up,

00:33:13.170 --> 00:33:16.630
and I'll say, hey, Rebecca, I
found a recipe in a recipe app

00:33:16.630 --> 00:33:19.030
for, yeah, some
really great won ton.

00:33:19.030 --> 00:33:20.155
Do you want to take a look?

00:33:20.155 --> 00:33:23.294
And then she'll go to the app
store, and she'll take a look

00:33:23.294 --> 00:33:24.210
and I'll say yeah, no.

00:33:24.210 --> 00:33:25.180
It's the recipe app--

00:33:25.180 --> 00:33:27.170
R-E-C-I-P-E-- yeah.

00:33:27.170 --> 00:33:29.310
A-P-P. Yeah?

00:33:29.310 --> 00:33:31.210
OK, you found it?

00:33:31.210 --> 00:33:33.160
There's 500 recipe
apps in the store.

00:33:33.160 --> 00:33:35.180
Oh, it's the one with
the carrot as an icon.

00:33:35.180 --> 00:33:35.680
OK.

00:33:35.680 --> 00:33:36.385
You found it.

00:33:36.385 --> 00:33:38.110
Then she finds it,
and what happens?

00:33:38.110 --> 00:33:39.520
She tries to download it.

00:33:39.520 --> 00:33:42.090
Prior to download it,
she has to sign in.

00:33:42.090 --> 00:33:44.044
She signs in, she
gets to the app.

00:33:44.044 --> 00:33:44.960
She downloads the app.

00:33:44.960 --> 00:33:46.920
By then, I've forgotten
what the recipe was.

00:33:46.920 --> 00:33:48.628
I forgot what it was
that I'm looking at.

00:33:48.628 --> 00:33:50.590
There's so much
friction involved.

00:33:50.590 --> 00:33:53.385
So with Dynamic Links, the
goal that we've been doing

00:33:53.385 --> 00:33:58.150
is that if I were to have that
app open, and I would share

00:33:58.150 --> 00:34:02.650
with her this particular recipe
within that app, when she

00:34:02.650 --> 00:34:06.950
receives that link, if she has
the app already in her phone,

00:34:06.950 --> 00:34:10.840
then by pressing on that
link, it would launch and take

00:34:10.840 --> 00:34:13.260
her directly to that recipe.

00:34:13.260 --> 00:34:15.580
If she doesn't have
the app on her phone,

00:34:15.580 --> 00:34:17.375
by pressing on that
link, it would take her

00:34:17.375 --> 00:34:19.389
to the app store with
the correct listing.

00:34:19.389 --> 00:34:22.230
Like I said, there's
hundreds of recipe apps.

00:34:22.230 --> 00:34:26.070
And after installing the app,
it would remember and take her

00:34:26.070 --> 00:34:28.690
all the way to that
recipe so that she

00:34:28.690 --> 00:34:29.650
could read that recipe.

00:34:29.650 --> 00:34:33.480
That's the intelligence that's
built into Dynamic Links.

00:34:33.480 --> 00:34:36.040
We've also been working
on Google AdWords.

00:34:36.040 --> 00:34:38.300
So Google AdWords are a
way that you can share

00:34:38.300 --> 00:34:40.210
your app with other users.

00:34:40.210 --> 00:34:43.449
So the idea is that
you can share your app

00:34:43.449 --> 00:34:47.170
with other users who are app
users, who are people watching

00:34:47.170 --> 00:34:50.360
on YouTube, who are people
searching on Google, all

00:34:50.360 --> 00:34:52.850
of these type of things that
if you subscribe to an AdWord

00:34:52.850 --> 00:34:57.310
for your application, it's going
to be smart enough to share it

00:34:57.310 --> 00:35:01.120
with users who are relevant
for that type of application.

00:35:01.120 --> 00:35:03.220
So for example, I love sports.

00:35:03.220 --> 00:35:06.150
And whenever I'm searching
Google or watching YouTube

00:35:06.150 --> 00:35:09.040
or using applications,
they're sports related.

00:35:09.040 --> 00:35:12.850
So if you are building a sports
app, your ads that you've done

00:35:12.850 --> 00:35:15.590
are much more likely to
reach me than my wife who

00:35:15.590 --> 00:35:16.930
does not like sports.

00:35:16.930 --> 00:35:20.420
So your spend on ads is
intelligently filtered

00:35:20.420 --> 00:35:24.360
so that you're reaching
the right users.

00:35:24.360 --> 00:35:26.999
Another one of my
favorites is App Indexing.

00:35:26.999 --> 00:35:29.040
Now, App Indexing-- the
idea behind App Indexing,

00:35:29.040 --> 00:35:33.310
is that you can discover your
application through a Google

00:35:33.310 --> 00:35:37.150
search based on the content
of that application.

00:35:37.150 --> 00:35:38.905
So if I give an example of--

00:35:38.905 --> 00:35:41.621
I used sports a moment ago--

00:35:41.621 --> 00:35:42.370
I love ice hockey.

00:35:42.370 --> 00:35:44.172
It's one of my favorite sports.

00:35:44.172 --> 00:35:45.880
And whenever I want
to take a look at how

00:35:45.880 --> 00:35:48.530
my local team or my
favorite teams are doing,

00:35:48.530 --> 00:35:51.035
I usually go to Google
Search and I search for it,

00:35:51.035 --> 00:35:54.280
and I'm taken to a webpage or
I'm taken to a list of webpages

00:35:54.280 --> 00:35:55.820
and maybe find one
of those webpages

00:35:55.820 --> 00:35:59.230
to see the score of my
local ice hockey teams.

00:35:59.230 --> 00:36:01.860
But I have an app from that
team that I've installed

00:36:01.860 --> 00:36:03.475
and I've forgotten about.

00:36:03.475 --> 00:36:05.400
You know, this app
doesn't use app indexing.

00:36:05.400 --> 00:36:07.935
I'm asking them to use it,
because what would happen

00:36:07.935 --> 00:36:11.890
is if you build the app, and
the app is on the user's device,

00:36:11.890 --> 00:36:15.214
the user has already told you
that they love your content,

00:36:15.214 --> 00:36:17.130
because they've installed
it on their device--

00:36:17.130 --> 00:36:19.350
the app-- and they've kept it.

00:36:19.350 --> 00:36:20.730
They haven't gotten rid of it.

00:36:20.730 --> 00:36:22.350
So now in future,
if they're searching

00:36:22.350 --> 00:36:25.210
for that type of content
using the Google Search app,

00:36:25.210 --> 00:36:29.010
the idea is why take
them somewhere else that

00:36:29.010 --> 00:36:31.380
might be something that they
like when they've already

00:36:31.380 --> 00:36:33.770
said they like it in this app?

00:36:33.770 --> 00:36:35.910
And that's the idea
of App Indexing.

00:36:35.910 --> 00:36:39.390
So when you search for something
using Google, using the Google

00:36:39.390 --> 00:36:43.560
Search app, you can be taken
to apps as well as sites.

00:36:43.560 --> 00:36:45.060
And in many ways,
you're probably

00:36:45.060 --> 00:36:47.030
going to prefer to
be taken to apps

00:36:47.030 --> 00:36:48.613
because you've already
installed them.

00:36:48.613 --> 00:36:50.857
You've already made an
investment in those apps.

00:36:50.857 --> 00:36:52.440
One thing that we've
recently released

00:36:52.440 --> 00:36:54.970
is also personal content.

00:36:54.970 --> 00:36:57.630
So if you have personal
content on your phone--

00:36:57.630 --> 00:37:00.615
so for example, you
have a note-taking app,

00:37:00.615 --> 00:37:04.890
and as well as loving hockey,
I manage a youth hockey team.

00:37:04.890 --> 00:37:06.750
And I keep notes about
all of their games

00:37:06.750 --> 00:37:08.790
in a note-taking app.

00:37:08.790 --> 00:37:11.190
Now the idea is that the
personal content is also

00:37:11.190 --> 00:37:12.180
indexed for me.

00:37:12.180 --> 00:37:14.790
So sometimes when I'm searching
for details about hockey,

00:37:14.790 --> 00:37:16.500
I can be taken into
my own personal notes

00:37:16.500 --> 00:37:18.330
that I might have made
and forgotten about.

00:37:18.330 --> 00:37:19.920
It's really, really cool stuff.

00:37:19.920 --> 00:37:22.620
And it's a great way of
re-engaging with your users.

00:37:22.620 --> 00:37:24.640
How many times have
you built an app,

00:37:24.640 --> 00:37:26.580
you've put it out
into the market,

00:37:26.580 --> 00:37:29.100
you've done advertising
for that app, you've done,

00:37:29.100 --> 00:37:31.050
you've marketing for
that app, you've gotten

00:37:31.050 --> 00:37:32.730
lots and lots of installs.

00:37:32.730 --> 00:37:34.990
And then suddenly
the installs dry off.

00:37:34.990 --> 00:37:37.430
And then you see-- if you're
using Analytics-- you see

00:37:37.430 --> 00:37:38.285
people uninstalling your app.

00:37:38.285 --> 00:37:39.870
And you don't have
marketing budget

00:37:39.870 --> 00:37:41.570
to continue to re-market it.

00:37:41.570 --> 00:37:43.560
That's one of the ideas
behind App Indexing,

00:37:43.560 --> 00:37:46.047
because people are always
searching using their phones.

00:37:46.047 --> 00:37:47.880
And if they're searching
using their phones,

00:37:47.880 --> 00:37:49.800
and they like the content
that's in your app,

00:37:49.800 --> 00:37:51.580
they should be
re-discovering your app.

00:37:51.580 --> 00:37:54.780
And that's why we
built App Indexing.

00:37:54.780 --> 00:37:57.060
Notifications is related
to Cloud Messaging

00:37:57.060 --> 00:37:58.680
that I spoke about earlier on.

00:37:58.680 --> 00:38:00.638
But the idea behind this
one is that this again

00:38:00.638 --> 00:38:02.530
is a no-programming interface.

00:38:02.530 --> 00:38:05.272
So instead of a lot of the
stuff, the features that I

00:38:05.272 --> 00:38:08.280
was talking about, like the
versatile targeting, now

00:38:08.280 --> 00:38:09.810
with a Firebase Console--

00:38:09.810 --> 00:38:11.820
and I'll demo this
again this afternoon--

00:38:11.820 --> 00:38:14.340
one of your marketing
people or something

00:38:14.340 --> 00:38:16.380
like that can get
into the Console,

00:38:16.380 --> 00:38:18.470
use Analytics to
pick an audience,

00:38:18.470 --> 00:38:20.930
and then send a notification
directly to that audience.

00:38:20.930 --> 00:38:23.490
And then that audience
can be re-engaged straight

00:38:23.490 --> 00:38:25.220
back into your application.

00:38:25.220 --> 00:38:26.290
It's very, very easy.

00:38:26.290 --> 00:38:27.720
It's very, very straightforward.

00:38:27.720 --> 00:38:30.185
And if you want to use real-time
notifications in your app,

00:38:30.185 --> 00:38:32.310
but you don't want to build
Google Cloud Messaging,

00:38:32.310 --> 00:38:33.710
this is another option for you.

00:38:33.710 --> 00:38:35.320
It's built on top
of Cloud Messaging.

00:38:35.320 --> 00:38:37.236
It's using all the
features and the technology

00:38:37.236 --> 00:38:38.958
that I spoke about
earlier on, how

00:38:38.958 --> 00:38:42.605
it gives you the fast messaging,
the reliable messaging

00:38:42.605 --> 00:38:44.220
delivery.

00:38:44.220 --> 00:38:47.760
Finally, on earning money,
just AdMob by Google

00:38:47.760 --> 00:38:49.770
you may be familiar
with already.

00:38:49.770 --> 00:38:51.394
It's the other
side of the adverts

00:38:51.394 --> 00:38:52.935
that I was speaking
about earlier on.

00:38:52.935 --> 00:38:55.910
In this case, instead of you
buying adverts and having

00:38:55.910 --> 00:38:57.890
the correct-- those
adverts delivered

00:38:57.890 --> 00:39:01.020
to the correct population
that would receive them,

00:39:01.020 --> 00:39:03.820
this is if you put
adverts into your app

00:39:03.820 --> 00:39:07.480
to make sure that the adverts
match the population that's

00:39:07.480 --> 00:39:08.460
using your app.

00:39:08.460 --> 00:39:10.060
Like I mentioned, I love sports.

00:39:10.060 --> 00:39:13.050
So if you built an app, and
you're using AdMob by Google

00:39:13.050 --> 00:39:16.870
to monetize your app, and then
the application-- the adverts

00:39:16.870 --> 00:39:19.172
that I would be
receiving are most likely

00:39:19.172 --> 00:39:21.510
going to be sports related ads.

00:39:21.510 --> 00:39:24.650
So your app that's a
sports app that you

00:39:24.650 --> 00:39:28.155
bought AdWords in,
then me as an end user,

00:39:28.155 --> 00:39:30.190
I'm going to be
receiving that one.

00:39:30.190 --> 00:39:31.770
So if you're building
an app, you'd

00:39:31.770 --> 00:39:34.570
want to deliver ads
to your end users

00:39:34.570 --> 00:39:36.330
that your end users
will engage with.

00:39:36.330 --> 00:39:38.070
You don't want to be obnoxious.

00:39:38.070 --> 00:39:41.090
You don't want to give them
ads that they don't care about.

00:39:41.090 --> 00:39:44.100
So AdMob, the power and
the technology behind that,

00:39:44.100 --> 00:39:44.970
is built into this.

00:39:44.970 --> 00:39:46.770
So there's a SDK for
that for Firebase

00:39:46.770 --> 00:39:49.600
that could make it very, very
simple for you to do ads.

00:39:49.600 --> 00:39:52.110
Video ads, interstitial
ads, banner ads,

00:39:52.110 --> 00:39:55.480
all those kind of
things in your apps.

00:39:55.480 --> 00:39:57.800
And that's it for this
overview of Firebase.

00:39:57.800 --> 00:40:00.340
So thank you so much
for attending [CHINESE].

00:40:00.340 --> 00:40:03.820
And I have some time for some
questions if anybody has any.

00:40:03.820 --> 00:40:07.960
[APPLAUSE]

00:40:07.960 --> 00:40:11.060
I'll also be at the Firebase
booth over in the main floor.

00:40:11.060 --> 00:40:14.946
So if you want to come
talk about Firebase.

00:40:14.946 --> 00:40:17.665
Do we have a question over here?

00:40:17.665 --> 00:40:20.850
AUDIENCE: [INAUDIBLE]

00:40:20.850 --> 00:40:24.210
AUDIENCE: [SPEAKING CHINESE]

00:40:24.210 --> 00:40:25.530
AUDIENCE: Hello.

00:40:25.530 --> 00:40:30.606
Firebase Crash Report will
collect in the native crash.

00:40:30.606 --> 00:40:32.605
LAURENCE MORONEY: Will
collect the native crash?

00:40:32.605 --> 00:40:36.930
AUDIENCE: Yeah, native crash
and the crash in the SO.

00:40:36.930 --> 00:40:40.080
LAURENCE MORONEY: So
the Android stack,

00:40:40.080 --> 00:40:43.160
so the stack that's for
Android, it will collect that.

00:40:43.160 --> 00:40:45.610
If it's stuff within
the NDK, right now

00:40:45.610 --> 00:40:48.336
it's not a very
detailed list of what

00:40:48.336 --> 00:40:49.585
we would indicate has crashed.

00:40:49.585 --> 00:40:53.047
AUDIENCE: Will [INAUDIBLE]
be the next release?

00:40:53.047 --> 00:40:54.630
LAURENCE MORONEY:
We're working on it.

00:40:54.630 --> 00:40:55.547
AUDIENCE: Thank you.

00:41:04.800 --> 00:41:06.750
AUDIENCE: [SPEAKING CHINESE]

00:41:24.134 --> 00:41:26.300
INTERPRETER: So two questions
about whether Firebase

00:41:26.300 --> 00:41:33.370
can be used in China,
because [INAUDIBLE]

00:41:33.370 --> 00:41:36.360
LAURENCE MORONEY: Right now it's
for international applications.

00:41:36.360 --> 00:41:39.840
So I'm not sure of the details
of accessing it within China.

00:41:39.840 --> 00:41:41.900
The Firebase
documentation, I believe,

00:41:41.900 --> 00:41:43.812
we've just relaunched
in China, and we're

00:41:43.812 --> 00:41:44.853
continuing to work on it.

00:41:47.920 --> 00:41:59.155
AUDIENCE: [INAUDIBLE]

00:41:59.155 --> 00:42:00.530
LAURENCE MORONEY:
Are you talking

00:42:00.530 --> 00:42:01.570
about into the
documentation side?

00:42:01.570 --> 00:42:02.111
AUDIENCE: No.

00:42:02.111 --> 00:42:02.840
The console.

00:42:02.840 --> 00:42:03.840
LAURENCE MORONEY: Right.

00:42:03.840 --> 00:42:07.520
So the console at the moment, is
for international applications

00:42:07.520 --> 00:42:09.949
rather than for domestic
Chinese applications.

00:42:09.949 --> 00:42:12.490
So they need-- whatever you do
for international applications

00:42:12.490 --> 00:42:16.490
at the moment for it to be able
to access Firebase Console.

00:42:16.490 --> 00:42:23.872
AUDIENCE: [SPEAKING CHINESE]

00:42:23.872 --> 00:42:25.622
LAURENCE MORONEY: We
hope to improve that.

00:42:34.856 --> 00:42:36.242
AUDIENCE: I have four questions.

00:42:36.242 --> 00:42:40.370
[INAUDIBLE] service
user [INAUDIBLE]

00:42:40.370 --> 00:42:43.674
MongoDB or [INAUDIBLE].

00:42:43.674 --> 00:42:44.840
LAURENCE MORONEY: I'm sorry.

00:42:44.840 --> 00:42:45.465
Can you repeat?

00:42:45.465 --> 00:42:49.422
AUDIENCE: [INAUDIBLE]
when could [INAUDIBLE] use

00:42:49.422 --> 00:42:52.429
[INAUDIBLE] as the database?

00:42:52.429 --> 00:42:54.470
LAURENCE MORONEY: Oh, so
the underlying database?

00:42:54.470 --> 00:42:55.080
AUDIENCE: Yes.

00:42:55.080 --> 00:42:56.663
LAURENCE MORONEY:
It's one of our own.

00:42:56.663 --> 00:42:57.390
It's not MongoDB.

00:42:57.390 --> 00:42:59.600
It's just something
we built ourselves.

00:42:59.600 --> 00:43:07.994
AUDIENCE: So do you have
some material for [INAUDIBLE]

00:43:07.994 --> 00:43:08.935
already knows that.

00:43:08.935 --> 00:43:11.060
LAURENCE MORONEY: I don't
have the details of that.

00:43:11.060 --> 00:43:13.610
If you come see me at the
booth and give me your contact

00:43:13.610 --> 00:43:16.234
details, I'll have somebody from
the engineering team in Google

00:43:16.234 --> 00:43:17.675
send you those details.

00:43:17.675 --> 00:43:19.160
AUDIENCE: OK, thank you.

00:43:19.160 --> 00:43:21.896
LAURENCE MORONEY: We
have time for one more.

00:43:21.896 --> 00:43:24.840
[INAUDIBLE]

00:43:24.840 --> 00:43:26.505
AUDIENCE: [SPEAKING CHINESE]

00:44:00.700 --> 00:44:01.950
INTERPRETER: So two questions.

00:44:01.950 --> 00:44:05.300
First question is, Firebase
depends on your Google Play

00:44:05.300 --> 00:44:06.752
services, Google Play service--

00:44:06.752 --> 00:44:07.960
LAURENCE MORONEY: On Android?

00:44:07.960 --> 00:44:09.959
INTERPRETER: Yeah, the
Android and so whether he

00:44:09.959 --> 00:44:11.882
is able to use in China.

00:44:11.882 --> 00:44:15.320
Second question is about,
can I download logs

00:44:15.320 --> 00:44:16.524
from the crash reports?

00:44:16.524 --> 00:44:18.905
LAURENCE MORONEY: OK I'll
answer the second one first.

00:44:18.905 --> 00:44:20.385
The answer is yes.

00:44:20.385 --> 00:44:22.220
That was easy.

00:44:22.220 --> 00:44:26.040
So for the first part of
it, the Google Play services

00:44:26.040 --> 00:44:28.580
binaries, when merging
into the Firebase binaries,

00:44:28.580 --> 00:44:30.670
so Google Play
Services as a runtime

00:44:30.670 --> 00:44:33.936
is kind of going away
in favor of Firebase.

00:44:33.936 --> 00:44:35.977
When that's going to be
available for native apps

00:44:35.977 --> 00:44:40.699
in China, for local apps,
I can't say right now.

00:44:40.699 --> 00:44:44.600
Do you want to translate?

00:44:44.600 --> 00:44:46.020
INTERPRETER: [SPEAKING CHINESE]

00:45:01.937 --> 00:45:03.770
LAURENCE MORONEY: So
if any other questions,

00:45:03.770 --> 00:45:05.840
I'll be over at the
Firebase booth in the expo.

00:45:05.840 --> 00:45:07.050
It's all the way down there.

00:45:07.050 --> 00:45:08.530
So please come see me.

00:45:08.530 --> 00:45:09.860
And thank you very much.

00:45:09.860 --> 00:45:10.760
[SPEAKING CHINESE]

00:45:10.760 --> 00:45:13.810
[APPLAUSE]

