WEBVTT
Kind: captions
Language: en

00:00:05.450 --> 00:00:08.299 align:start position:0%
 
hi<00:00:06.450><c> I'm</c><00:00:06.600><c> Chet</c><00:00:06.839><c> Haase</c><00:00:07.049><c> an</c><00:00:07.410><c> engineer</c><00:00:07.680><c> in</c><00:00:08.280><c> the</c>

00:00:08.299 --> 00:00:08.309 align:start position:0%
hi I'm Chet Haase an engineer in the
 

00:00:08.309 --> 00:00:10.100 align:start position:0%
hi I'm Chet Haase an engineer in the
Android<00:00:09.030><c> team</c><00:00:09.300><c> at</c><00:00:09.510><c> Google</c>

00:00:10.100 --> 00:00:10.110 align:start position:0%
Android team at Google
 

00:00:10.110 --> 00:00:12.230 align:start position:0%
Android team at Google
I<00:00:10.260><c> work</c><00:00:10.800><c> on</c><00:00:10.920><c> graphics</c><00:00:11.099><c> and</c><00:00:11.519><c> animation</c><00:00:11.969><c> stuff</c>

00:00:12.230 --> 00:00:12.240 align:start position:0%
I work on graphics and animation stuff
 

00:00:12.240 --> 00:00:13.580 align:start position:0%
I work on graphics and animation stuff
and<00:00:12.480><c> today</c><00:00:12.719><c> I</c><00:00:12.750><c> wanted</c><00:00:13.019><c> to</c><00:00:13.080><c> talk</c><00:00:13.290><c> about</c><00:00:13.500><c> the</c>

00:00:13.580 --> 00:00:13.590 align:start position:0%
and today I wanted to talk about the
 

00:00:13.590 --> 00:00:16.849 align:start position:0%
and today I wanted to talk about the
topic<00:00:13.920><c> of</c><00:00:14.150><c> bitmaps</c><00:00:15.150><c> in</c><00:00:15.960><c> particular</c><00:00:16.590><c> I</c><00:00:16.650><c> want</c><00:00:16.830><c> to</c>

00:00:16.849 --> 00:00:16.859 align:start position:0%
topic of bitmaps in particular I want to
 

00:00:16.859 --> 00:00:19.849 align:start position:0%
topic of bitmaps in particular I want to
talk<00:00:16.920><c> about</c><00:00:17.130><c> bitmaps</c><00:00:17.670><c> and</c><00:00:17.850><c> garbage</c><00:00:18.650><c> first</c><00:00:19.650><c> a</c>

00:00:19.849 --> 00:00:19.859 align:start position:0%
talk about bitmaps and garbage first a
 

00:00:19.859 --> 00:00:23.029 align:start position:0%
talk about bitmaps and garbage first a
history<00:00:20.340><c> lesson</c><00:00:20.520><c> might</c><00:00:20.850><c> help</c><00:00:21.619><c> prior</c><00:00:22.619><c> to</c><00:00:22.920><c> the</c>

00:00:23.029 --> 00:00:23.039 align:start position:0%
history lesson might help prior to the
 

00:00:23.039 --> 00:00:26.450 align:start position:0%
history lesson might help prior to the
3.0<00:00:23.580><c> release</c><00:00:23.789><c> we</c><00:00:24.630><c> managed</c><00:00:25.230><c> bitmap</c><00:00:25.920><c> memory</c><00:00:26.250><c> at</c>

00:00:26.450 --> 00:00:26.460 align:start position:0%
3.0 release we managed bitmap memory at
 

00:00:26.460 --> 00:00:28.700 align:start position:0%
3.0 release we managed bitmap memory at
the<00:00:26.609><c> Native</c><00:00:26.910><c> level</c><00:00:27.210><c> the</c><00:00:27.840><c> VM</c><00:00:28.080><c> knew</c><00:00:28.289><c> about</c><00:00:28.439><c> it</c>

00:00:28.700 --> 00:00:28.710 align:start position:0%
the Native level the VM knew about it
 

00:00:28.710 --> 00:00:30.140 align:start position:0%
the Native level the VM knew about it
but<00:00:28.800><c> it</c><00:00:28.920><c> really</c><00:00:29.010><c> didn't</c><00:00:29.310><c> manage</c><00:00:29.550><c> it</c><00:00:29.699><c> and</c><00:00:29.849><c> you</c>

00:00:30.140 --> 00:00:30.150 align:start position:0%
but it really didn't manage it and you
 

00:00:30.150 --> 00:00:32.179 align:start position:0%
but it really didn't manage it and you
in<00:00:30.539><c> your</c><00:00:30.750><c> application</c><00:00:31.349><c> were</c><00:00:31.470><c> responsible</c><00:00:32.009><c> for</c>

00:00:32.179 --> 00:00:32.189 align:start position:0%
in your application were responsible for
 

00:00:32.189 --> 00:00:34.639 align:start position:0%
in your application were responsible for
calling<00:00:32.340><c> recycle</c><00:00:33.030><c> to</c><00:00:33.540><c> very</c><00:00:33.840><c> actively</c><00:00:34.230><c> manage</c>

00:00:34.639 --> 00:00:34.649 align:start position:0%
calling recycle to very actively manage
 

00:00:34.649 --> 00:00:36.020 align:start position:0%
calling recycle to very actively manage
that<00:00:34.829><c> when</c><00:00:34.980><c> you're</c><00:00:35.100><c> done</c><00:00:35.250><c> with</c><00:00:35.430><c> bitmap</c><00:00:35.820><c> you</c>

00:00:36.020 --> 00:00:36.030 align:start position:0%
that when you're done with bitmap you
 

00:00:36.030 --> 00:00:37.760 align:start position:0%
that when you're done with bitmap you
call<00:00:36.239><c> recycle</c><00:00:36.780><c> that</c><00:00:36.930><c> gets</c><00:00:37.110><c> rid</c><00:00:37.290><c> of</c><00:00:37.350><c> the</c><00:00:37.440><c> memory</c>

00:00:37.760 --> 00:00:37.770 align:start position:0%
call recycle that gets rid of the memory
 

00:00:37.770 --> 00:00:40.520 align:start position:0%
call recycle that gets rid of the memory
otherwise<00:00:38.550><c> you</c><00:00:39.059><c> may</c><00:00:39.210><c> run</c><00:00:39.450><c> out</c><00:00:39.510><c> of</c><00:00:39.690><c> enough</c>

00:00:40.520 --> 00:00:40.530 align:start position:0%
otherwise you may run out of enough
 

00:00:40.530 --> 00:00:42.970 align:start position:0%
otherwise you may run out of enough
memory<00:00:40.920><c> enough</c><00:00:41.489><c> native</c><00:00:41.820><c> memory</c><00:00:42.000><c> to</c><00:00:42.300><c> allocate</c>

00:00:42.970 --> 00:00:42.980 align:start position:0%
memory enough native memory to allocate
 

00:00:42.980 --> 00:00:46.160 align:start position:0%
memory enough native memory to allocate
another<00:00:43.980><c> bitmap</c><00:00:44.219><c> so</c><00:00:44.670><c> this</c><00:00:45.120><c> is</c><00:00:45.270><c> a</c><00:00:45.300><c> very</c><00:00:45.750><c> careful</c>

00:00:46.160 --> 00:00:46.170 align:start position:0%
another bitmap so this is a very careful
 

00:00:46.170 --> 00:00:48.590 align:start position:0%
another bitmap so this is a very careful
things<00:00:46.559><c> that</c><00:00:46.829><c> think</c><00:00:47.820><c> that</c><00:00:47.879><c> applications</c>

00:00:48.590 --> 00:00:48.600 align:start position:0%
things that think that applications
 

00:00:48.600 --> 00:00:51.709 align:start position:0%
things that think that applications
needed<00:00:48.989><c> to</c><00:00:49.140><c> manage</c><00:00:49.469><c> very</c><00:00:49.500><c> tightly</c><00:00:50.120><c> we</c><00:00:51.120><c> decided</c>

00:00:51.709 --> 00:00:51.719 align:start position:0%
needed to manage very tightly we decided
 

00:00:51.719 --> 00:00:53.119 align:start position:0%
needed to manage very tightly we decided
that<00:00:51.750><c> it</c><00:00:51.960><c> would</c><00:00:52.079><c> be</c><00:00:52.199><c> a</c><00:00:52.230><c> little</c><00:00:52.410><c> bit</c><00:00:52.620><c> better</c><00:00:52.770><c> for</c>

00:00:53.119 --> 00:00:53.129 align:start position:0%
that it would be a little bit better for
 

00:00:53.129 --> 00:00:55.340 align:start position:0%
that it would be a little bit better for
everyone<00:00:53.610><c> if</c><00:00:53.760><c> we</c><00:00:54.239><c> actually</c><00:00:54.690><c> manage</c><00:00:54.960><c> that</c><00:00:55.140><c> for</c>

00:00:55.340 --> 00:00:55.350 align:start position:0%
everyone if we actually manage that for
 

00:00:55.350 --> 00:00:56.720 align:start position:0%
everyone if we actually manage that for
you<00:00:55.559><c> and</c><00:00:55.949><c> we</c><00:00:56.010><c> brought</c><00:00:56.250><c> the</c><00:00:56.370><c> bitmap</c><00:00:56.699><c> memory</c>

00:00:56.720 --> 00:00:56.730 align:start position:0%
you and we brought the bitmap memory
 

00:00:56.730 --> 00:00:59.420 align:start position:0%
you and we brought the bitmap memory
back<00:00:57.360><c> into</c><00:00:58.170><c> the</c><00:00:58.289><c> VM</c><00:00:58.440><c> along</c><00:00:58.829><c> with</c><00:00:59.039><c> the</c><00:00:59.160><c> rest</c><00:00:59.340><c> of</c>

00:00:59.420 --> 00:00:59.430 align:start position:0%
back into the VM along with the rest of
 

00:00:59.430 --> 00:01:00.680 align:start position:0%
back into the VM along with the rest of
the<00:00:59.520><c> memory</c><00:00:59.789><c> that</c><00:00:59.940><c> the</c><00:01:00.030><c> garbage</c><00:01:00.300><c> collector</c>

00:01:00.680 --> 00:01:00.690 align:start position:0%
the memory that the garbage collector
 

00:01:00.690 --> 00:01:02.689 align:start position:0%
the memory that the garbage collector
manages<00:01:01.079><c> so</c><00:01:01.289><c> now</c><00:01:01.469><c> when</c><00:01:02.039><c> you</c><00:01:02.129><c> allocate</c><00:01:02.340><c> memory</c>

00:01:02.689 --> 00:01:02.699 align:start position:0%
manages so now when you allocate memory
 

00:01:02.699 --> 00:01:04.939 align:start position:0%
manages so now when you allocate memory
for<00:01:03.030><c> a</c><00:01:03.059><c> bitmap</c><00:01:03.420><c> we</c><00:01:03.930><c> allocate</c><00:01:04.379><c> it</c><00:01:04.530><c> on</c><00:01:04.650><c> the</c>

00:01:04.939 --> 00:01:04.949 align:start position:0%
for a bitmap we allocate it on the
 

00:01:04.949 --> 00:01:07.580 align:start position:0%
for a bitmap we allocate it on the
virtual<00:01:05.280><c> machine</c><00:01:05.700><c> heap</c><00:01:06.060><c> and</c><00:01:06.900><c> then</c><00:01:07.140><c> we</c><00:01:07.350><c> know</c>

00:01:07.580 --> 00:01:07.590 align:start position:0%
virtual machine heap and then we know
 

00:01:07.590 --> 00:01:09.620 align:start position:0%
virtual machine heap and then we know
when<00:01:08.189><c> references</c><00:01:08.760><c> to</c><00:01:08.909><c> that</c><00:01:09.060><c> memory</c><00:01:09.240><c> are</c><00:01:09.479><c> gone</c>

00:01:09.620 --> 00:01:09.630 align:start position:0%
when references to that memory are gone
 

00:01:09.630 --> 00:01:11.120 align:start position:0%
when references to that memory are gone
so<00:01:09.869><c> that</c><00:01:09.900><c> we</c><00:01:10.080><c> can</c><00:01:10.229><c> collect</c><00:01:10.530><c> it</c><00:01:10.650><c> appropriately</c>

00:01:11.120 --> 00:01:11.130 align:start position:0%
so that we can collect it appropriately
 

00:01:11.130 --> 00:01:13.700 align:start position:0%
so that we can collect it appropriately
in<00:01:11.369><c> particular</c><00:01:12.240><c> when</c><00:01:12.810><c> a</c><00:01:13.020><c> reference</c><00:01:13.470><c> to</c><00:01:13.680><c> a</c>

00:01:13.700 --> 00:01:13.710 align:start position:0%
in particular when a reference to a
 

00:01:13.710 --> 00:01:16.160 align:start position:0%
in particular when a reference to a
large<00:01:14.159><c> bitmap</c><00:01:14.549><c> goes</c><00:01:14.760><c> away</c><00:01:15.119><c> and</c><00:01:15.390><c> you</c><00:01:15.869><c> want</c><00:01:16.080><c> to</c>

00:01:16.160 --> 00:01:16.170 align:start position:0%
large bitmap goes away and you want to
 

00:01:16.170 --> 00:01:18.380 align:start position:0%
large bitmap goes away and you want to
allocate<00:01:16.320><c> another</c><00:01:16.770><c> bitmap</c><00:01:17.009><c> then</c><00:01:17.729><c> we</c><00:01:18.000><c> can</c><00:01:18.150><c> see</c>

00:01:18.380 --> 00:01:18.390 align:start position:0%
allocate another bitmap then we can see
 

00:01:18.390 --> 00:01:19.760 align:start position:0%
allocate another bitmap then we can see
that<00:01:18.570><c> while</c><00:01:18.780><c> there's</c><00:01:18.990><c> no</c><00:01:19.140><c> reference</c><00:01:19.530><c> to</c><00:01:19.590><c> this</c>

00:01:19.760 --> 00:01:19.770 align:start position:0%
that while there's no reference to this
 

00:01:19.770 --> 00:01:21.440 align:start position:0%
that while there's no reference to this
other<00:01:19.979><c> one</c><00:01:20.159><c> there</c><00:01:20.310><c> we</c><00:01:20.460><c> can</c><00:01:20.610><c> collect</c><00:01:20.970><c> it</c><00:01:21.119><c> in</c>

00:01:21.440 --> 00:01:21.450 align:start position:0%
other one there we can collect it in
 

00:01:21.450 --> 00:01:23.149 align:start position:0%
other one there we can collect it in
order<00:01:21.780><c> to</c><00:01:21.869><c> make</c><00:01:22.020><c> room</c><00:01:22.259><c> for</c><00:01:22.290><c> the</c><00:01:22.590><c> new</c><00:01:22.710><c> one</c><00:01:22.920><c> that</c>

00:01:23.149 --> 00:01:23.159 align:start position:0%
order to make room for the new one that
 

00:01:23.159 --> 00:01:25.429 align:start position:0%
order to make room for the new one that
needs<00:01:23.460><c> to</c><00:01:23.580><c> come</c><00:01:24.240><c> into</c><00:01:24.420><c> the</c><00:01:24.600><c> heap</c><00:01:24.780><c> at</c><00:01:24.990><c> that</c><00:01:25.229><c> time</c>

00:01:25.429 --> 00:01:25.439 align:start position:0%
needs to come into the heap at that time
 

00:01:25.439 --> 00:01:28.160 align:start position:0%
needs to come into the heap at that time
so<00:01:26.280><c> all</c><00:01:26.310><c> of</c><00:01:26.580><c> this</c><00:01:26.670><c> is</c><00:01:26.850><c> great</c><00:01:27.000><c> except</c><00:01:27.960><c> that</c><00:01:28.080><c> it</c>

00:01:28.160 --> 00:01:28.170 align:start position:0%
so all of this is great except that it
 

00:01:28.170 --> 00:01:30.260 align:start position:0%
so all of this is great except that it
gets<00:01:28.320><c> into</c><00:01:28.619><c> situations</c><00:01:29.189><c> where</c><00:01:29.460><c> maybe</c><00:01:29.670><c> the</c><00:01:29.880><c> GC</c>

00:01:30.260 --> 00:01:30.270 align:start position:0%
gets into situations where maybe the GC
 

00:01:30.270 --> 00:01:32.749 align:start position:0%
gets into situations where maybe the GC
is<00:01:30.420><c> going</c><00:01:30.630><c> to</c><00:01:30.720><c> be</c><00:01:30.810><c> triggered</c><00:01:31.400><c> more</c><00:01:32.400><c> than</c><00:01:32.640><c> it</c>

00:01:32.749 --> 00:01:32.759 align:start position:0%
is going to be triggered more than it
 

00:01:32.759 --> 00:01:34.609 align:start position:0%
is going to be triggered more than it
was<00:01:32.909><c> before</c><00:01:33.090><c> because</c><00:01:33.540><c> you're</c><00:01:33.900><c> not</c><00:01:34.110><c> managing</c>

00:01:34.609 --> 00:01:34.619 align:start position:0%
was before because you're not managing
 

00:01:34.619 --> 00:01:36.350 align:start position:0%
was before because you're not managing
your<00:01:34.710><c> own</c><00:01:34.770><c> memory</c><00:01:35.189><c> manually</c><00:01:35.759><c> instead</c><00:01:36.150><c> we</c><00:01:36.329><c> are</c>

00:01:36.350 --> 00:01:36.360 align:start position:0%
your own memory manually instead we are
 

00:01:36.360 --> 00:01:38.630 align:start position:0%
your own memory manually instead we are
managing<00:01:36.900><c> that</c><00:01:36.930><c> memory</c><00:01:37.320><c> for</c><00:01:37.590><c> you</c><00:01:37.740><c> and</c><00:01:37.950><c> we</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
managing that memory for you and we
 

00:01:38.640 --> 00:01:40.429 align:start position:0%
managing that memory for you and we
manage<00:01:38.970><c> memory</c><00:01:39.210><c> by</c><00:01:39.570><c> having</c><00:01:40.079><c> the</c><00:01:40.170><c> garbage</c>

00:01:40.429 --> 00:01:40.439 align:start position:0%
manage memory by having the garbage
 

00:01:40.439 --> 00:01:42.050 align:start position:0%
manage memory by having the garbage
collector<00:01:40.829><c> kick</c><00:01:41.070><c> in</c><00:01:41.250><c> and</c><00:01:41.490><c> collect</c><00:01:41.909><c> things</c>

00:01:42.050 --> 00:01:42.060 align:start position:0%
collector kick in and collect things
 

00:01:42.060 --> 00:01:44.270 align:start position:0%
collector kick in and collect things
when<00:01:42.720><c> it</c><00:01:42.840><c> needs</c><00:01:43.049><c> to</c><00:01:43.200><c> if</c><00:01:43.350><c> there's</c><00:01:43.530><c> not</c><00:01:43.680><c> a</c><00:01:43.710><c> memory</c>

00:01:44.270 --> 00:01:44.280 align:start position:0%
when it needs to if there's not a memory
 

00:01:44.280 --> 00:01:46.010 align:start position:0%
when it needs to if there's not a memory
in<00:01:44.369><c> the</c><00:01:44.490><c> heap</c><00:01:44.520><c> we'll</c><00:01:45.180><c> collect</c><00:01:45.360><c> stuff</c><00:01:45.840><c> that</c>

00:01:46.010 --> 00:01:46.020 align:start position:0%
in the heap we'll collect stuff that
 

00:01:46.020 --> 00:01:47.600 align:start position:0%
in the heap we'll collect stuff that
needs<00:01:46.200><c> to</c><00:01:46.290><c> be</c><00:01:46.320><c> collected</c><00:01:46.530><c> including</c><00:01:46.979><c> large</c>

00:01:47.600 --> 00:01:47.610 align:start position:0%
needs to be collected including large
 

00:01:47.610 --> 00:01:50.359 align:start position:0%
needs to be collected including large
bitmaps<00:01:48.060><c> now</c><00:01:48.810><c> the</c><00:01:48.869><c> trick</c><00:01:49.200><c> to</c><00:01:49.229><c> this</c><00:01:49.380><c> is</c><00:01:49.740><c> that</c>

00:01:50.359 --> 00:01:50.369 align:start position:0%
bitmaps now the trick to this is that
 

00:01:50.369 --> 00:01:52.580 align:start position:0%
bitmaps now the trick to this is that
large<00:01:51.149><c> amounts</c><00:01:51.540><c> of</c><00:01:51.630><c> memory</c><00:01:51.780><c> can</c><00:01:52.170><c> be</c><00:01:52.380><c> more</c>

00:01:52.580 --> 00:01:52.590 align:start position:0%
large amounts of memory can be more
 

00:01:52.590 --> 00:01:54.319 align:start position:0%
large amounts of memory can be more
expensive<00:01:52.920><c> to</c><00:01:53.130><c> collect</c><00:01:53.490><c> and</c><00:01:53.670><c> large</c><00:01:53.820><c> heaps</c><00:01:54.119><c> are</c>

00:01:54.319 --> 00:01:54.329 align:start position:0%
expensive to collect and large heaps are
 

00:01:54.329 --> 00:01:56.929 align:start position:0%
expensive to collect and large heaps are
more<00:01:54.840><c> expensive</c><00:01:55.170><c> to</c><00:01:55.530><c> collect</c><00:01:55.770><c> so</c><00:01:56.340><c> if</c><00:01:56.700><c> there's</c>

00:01:56.929 --> 00:01:56.939 align:start position:0%
more expensive to collect so if there's
 

00:01:56.939 --> 00:01:59.209 align:start position:0%
more expensive to collect so if there's
large<00:01:57.540><c> pieces</c><00:01:57.930><c> of</c><00:01:58.170><c> memory</c><00:01:58.469><c> due</c><00:01:58.680><c> to</c><00:01:58.829><c> bitmaps</c>

00:01:59.209 --> 00:01:59.219 align:start position:0%
large pieces of memory due to bitmaps
 

00:01:59.219 --> 00:02:01.700 align:start position:0%
large pieces of memory due to bitmaps
constantly<00:01:59.969><c> churning</c><00:02:00.180><c> through</c><00:02:00.659><c> the</c><00:02:01.259><c> system</c>

00:02:01.700 --> 00:02:01.710 align:start position:0%
constantly churning through the system
 

00:02:01.710 --> 00:02:03.920 align:start position:0%
constantly churning through the system
then<00:02:02.250><c> you're</c><00:02:02.610><c> we're</c><00:02:02.969><c> going</c><00:02:03.210><c> to</c><00:02:03.299><c> be</c><00:02:03.390><c> collecting</c>

00:02:03.920 --> 00:02:03.930 align:start position:0%
then you're we're going to be collecting
 

00:02:03.930 --> 00:02:05.840 align:start position:0%
then you're we're going to be collecting
memory<00:02:04.229><c> for</c><00:02:04.530><c> them</c><00:02:04.680><c> a</c><00:02:04.890><c> lot</c><00:02:05.219><c> right</c><00:02:05.490><c> if</c><00:02:05.670><c> you're</c>

00:02:05.840 --> 00:02:05.850 align:start position:0%
memory for them a lot right if you're
 

00:02:05.850 --> 00:02:08.210 align:start position:0%
memory for them a lot right if you're
constantly<00:02:06.509><c> like</c><00:02:06.960><c> on</c><00:02:07.140><c> every</c><00:02:07.409><c> frame</c><00:02:07.770><c> I</c><00:02:07.799><c> saw</c><00:02:08.099><c> an</c>

00:02:08.210 --> 00:02:08.220 align:start position:0%
constantly like on every frame I saw an
 

00:02:08.220 --> 00:02:10.699 align:start position:0%
constantly like on every frame I saw an
application<00:02:08.700><c> like</c><00:02:08.849><c> this</c><00:02:08.959><c> recently</c><00:02:09.959><c> where</c><00:02:10.500><c> on</c>

00:02:10.699 --> 00:02:10.709 align:start position:0%
application like this recently where on
 

00:02:10.709 --> 00:02:12.920 align:start position:0%
application like this recently where on
every<00:02:11.220><c> frame</c><00:02:11.520><c> of</c><00:02:11.730><c> every</c><00:02:12.209><c> animation</c>

00:02:12.920 --> 00:02:12.930 align:start position:0%
every frame of every animation
 

00:02:12.930 --> 00:02:15.080 align:start position:0%
every frame of every animation
they<00:02:13.409><c> were</c><00:02:13.469><c> loading</c><00:02:13.980><c> a</c><00:02:14.099><c> new</c><00:02:14.129><c> bitmap</c><00:02:14.640><c> and</c>

00:02:15.080 --> 00:02:15.090 align:start position:0%
they were loading a new bitmap and
 

00:02:15.090 --> 00:02:17.119 align:start position:0%
they were loading a new bitmap and
getting<00:02:15.810><c> rid</c><00:02:15.930><c> of</c><00:02:15.959><c> the</c><00:02:16.109><c> old</c><00:02:16.319><c> one</c><00:02:16.500><c> and</c><00:02:16.620><c> in</c><00:02:17.010><c> the</c>

00:02:17.119 --> 00:02:17.129 align:start position:0%
getting rid of the old one and in the
 

00:02:17.129 --> 00:02:18.679 align:start position:0%
getting rid of the old one and in the
old<00:02:17.280><c> system</c><00:02:17.670><c> they</c><00:02:17.790><c> would</c><00:02:17.939><c> actively</c><00:02:18.420><c> manage</c>

00:02:18.679 --> 00:02:18.689 align:start position:0%
old system they would actively manage
 

00:02:18.689 --> 00:02:20.240 align:start position:0%
old system they would actively manage
this<00:02:18.840><c> and</c><00:02:19.019><c> call</c><00:02:19.200><c> recycle</c><00:02:19.739><c> and</c><00:02:19.890><c> the</c><00:02:19.950><c> other</c><00:02:20.069><c> one</c>

00:02:20.240 --> 00:02:20.250 align:start position:0%
this and call recycle and the other one
 

00:02:20.250 --> 00:02:22.220 align:start position:0%
this and call recycle and the other one
would<00:02:20.400><c> be</c><00:02:20.459><c> loaded</c><00:02:20.879><c> in</c><00:02:21.000><c> place</c><00:02:21.269><c> and</c><00:02:21.569><c> and</c><00:02:21.719><c> life</c>

00:02:22.220 --> 00:02:22.230 align:start position:0%
would be loaded in place and and life
 

00:02:22.230 --> 00:02:24.589 align:start position:0%
would be loaded in place and and life
was<00:02:22.439><c> good</c><00:02:22.620><c> but</c><00:02:22.859><c> as</c><00:02:22.980><c> of</c><00:02:23.159><c> 3.0</c><00:02:23.730><c> that</c><00:02:24.269><c> meant</c><00:02:24.540><c> that</c>

00:02:24.589 --> 00:02:24.599 align:start position:0%
was good but as of 3.0 that meant that
 

00:02:24.599 --> 00:02:26.720 align:start position:0%
was good but as of 3.0 that meant that
the<00:02:25.260><c> old</c><00:02:25.469><c> one</c><00:02:25.680><c> was</c><00:02:25.799><c> on</c><00:02:25.980><c> the</c><00:02:26.010><c> heap</c><00:02:26.280><c> the</c><00:02:26.459><c> new</c><00:02:26.609><c> one</c>

00:02:26.720 --> 00:02:26.730 align:start position:0%
the old one was on the heap the new one
 

00:02:26.730 --> 00:02:28.039 align:start position:0%
the old one was on the heap the new one
wanted<00:02:27.090><c> to</c><00:02:27.120><c> be</c><00:02:27.269><c> on</c><00:02:27.390><c> the</c><00:02:27.480><c> heap</c><00:02:27.629><c> there</c><00:02:27.810><c> wasn't</c>

00:02:28.039 --> 00:02:28.049 align:start position:0%
wanted to be on the heap there wasn't
 

00:02:28.049 --> 00:02:30.500 align:start position:0%
wanted to be on the heap there wasn't
enough<00:02:28.260><c> room</c><00:02:28.650><c> for</c><00:02:28.680><c> the</c><00:02:29.159><c> both</c><00:02:29.280><c> of</c><00:02:29.340><c> them</c><00:02:29.609><c> and</c><00:02:29.849><c> so</c>

00:02:30.500 --> 00:02:30.510 align:start position:0%
enough room for the both of them and so
 

00:02:30.510 --> 00:02:32.059 align:start position:0%
enough room for the both of them and so
it<00:02:30.750><c> needed</c><00:02:30.989><c> to</c><00:02:31.049><c> collect</c><00:02:31.200><c> from</c><00:02:31.560><c> the</c><00:02:31.650><c> first</c><00:02:31.889><c> one</c>

00:02:32.059 --> 00:02:32.069 align:start position:0%
it needed to collect from the first one
 

00:02:32.069 --> 00:02:34.539 align:start position:0%
it needed to collect from the first one
relatively<00:02:33.030><c> expensive</c><00:02:33.420><c> garbage</c><00:02:33.750><c> collection</c>

00:02:34.539 --> 00:02:34.549 align:start position:0%
relatively expensive garbage collection
 

00:02:34.549 --> 00:02:36.830 align:start position:0%
relatively expensive garbage collection
to<00:02:35.549><c> then</c><00:02:35.760><c> load</c><00:02:36.060><c> in</c><00:02:36.180><c> the</c><00:02:36.299><c> second</c><00:02:36.599><c> one</c><00:02:36.689><c> next</c>

00:02:36.830 --> 00:02:36.840 align:start position:0%
to then load in the second one next
 

00:02:36.840 --> 00:02:38.750 align:start position:0%
to then load in the second one next
frame<00:02:37.109><c> around</c><00:02:37.260><c> same</c><00:02:37.680><c> thing</c><00:02:37.980><c> needs</c><00:02:38.430><c> to</c><00:02:38.519><c> collect</c>

00:02:38.750 --> 00:02:38.760 align:start position:0%
frame around same thing needs to collect
 

00:02:38.760 --> 00:02:40.490 align:start position:0%
frame around same thing needs to collect
the<00:02:39.030><c> old</c><00:02:39.180><c> one</c><00:02:39.359><c> to</c><00:02:39.510><c> make</c><00:02:39.629><c> enough</c><00:02:39.870><c> room</c><00:02:40.109><c> for</c><00:02:40.139><c> the</c>

00:02:40.490 --> 00:02:40.500 align:start position:0%
the old one to make enough room for the
 

00:02:40.500 --> 00:02:41.449 align:start position:0%
the old one to make enough room for the
new<00:02:40.620><c> one</c>

00:02:41.449 --> 00:02:41.459 align:start position:0%
new one
 

00:02:41.459 --> 00:02:44.300 align:start position:0%
new one
now<00:02:41.849><c> that's</c><00:02:42.689><c> a</c><00:02:43.049><c> reality</c><00:02:43.889><c> of</c><00:02:43.980><c> dealing</c><00:02:44.280><c> with</c>

00:02:44.300 --> 00:02:44.310 align:start position:0%
now that's a reality of dealing with
 

00:02:44.310 --> 00:02:46.610 align:start position:0%
now that's a reality of dealing with
memory<00:02:44.970><c> management</c><00:02:45.329><c> garbage</c><00:02:45.870><c> collectors</c><00:02:46.379><c> and</c>

00:02:46.610 --> 00:02:46.620 align:start position:0%
memory management garbage collectors and
 

00:02:46.620 --> 00:02:48.050 align:start position:0%
memory management garbage collectors and
it's<00:02:46.799><c> it's</c><00:02:47.010><c> decent</c><00:02:47.519><c> enough</c><00:02:47.730><c> but</c><00:02:47.909><c> there's</c>

00:02:48.050 --> 00:02:48.060 align:start position:0%
it's it's decent enough but there's
 

00:02:48.060 --> 00:02:49.460 align:start position:0%
it's it's decent enough but there's
actually<00:02:48.359><c> a</c><00:02:48.389><c> really</c><00:02:48.599><c> good</c><00:02:48.840><c> way</c><00:02:49.019><c> that</c><00:02:49.049><c> you</c><00:02:49.319><c> can</c>

00:02:49.460 --> 00:02:49.470 align:start position:0%
actually a really good way that you can
 

00:02:49.470 --> 00:02:51.589 align:start position:0%
actually a really good way that you can
work<00:02:49.680><c> around</c><00:02:49.859><c> that</c><00:02:50.159><c> problem</c><00:02:50.669><c> and</c><00:02:50.819><c> in</c>

00:02:51.589 --> 00:02:51.599 align:start position:0%
work around that problem and in
 

00:02:51.599 --> 00:02:52.670 align:start position:0%
work around that problem and in
particular<00:02:52.109><c> if</c><00:02:52.230><c> you're</c><00:02:52.349><c> working</c><00:02:52.560><c> with</c>

00:02:52.670 --> 00:02:52.680 align:start position:0%
particular if you're working with
 

00:02:52.680 --> 00:02:54.440 align:start position:0%
particular if you're working with
bitmaps<00:02:53.159><c> that</c><00:02:53.280><c> are</c><00:02:53.459><c> exactly</c><00:02:53.819><c> the</c><00:02:54.000><c> same</c><00:02:54.030><c> size</c>

00:02:54.440 --> 00:02:54.450 align:start position:0%
bitmaps that are exactly the same size
 

00:02:54.450 --> 00:02:56.629 align:start position:0%
bitmaps that are exactly the same size
which<00:02:54.810><c> this</c><00:02:55.319><c> particular</c><00:02:55.560><c> application</c><00:02:56.430><c> was</c>

00:02:56.629 --> 00:02:56.639 align:start position:0%
which this particular application was
 

00:02:56.639 --> 00:02:59.300 align:start position:0%
which this particular application was
then<00:02:57.269><c> you</c><00:02:57.480><c> can</c><00:02:57.689><c> actually</c><00:02:58.049><c> reuse</c><00:02:58.500><c> bitmaps</c><00:02:59.159><c> so</c>

00:02:59.300 --> 00:02:59.310 align:start position:0%
then you can actually reuse bitmaps so
 

00:02:59.310 --> 00:03:01.339 align:start position:0%
then you can actually reuse bitmaps so
you<00:02:59.400><c> can</c><00:02:59.549><c> have</c><00:02:59.669><c> one</c><00:02:59.909><c> bitmap</c><00:03:00.329><c> that</c><00:03:00.599><c> everything</c>

00:03:01.339 --> 00:03:01.349 align:start position:0%
you can have one bitmap that everything
 

00:03:01.349 --> 00:03:04.369 align:start position:0%
you can have one bitmap that everything
gets<00:03:01.439><c> loaded</c><00:03:01.859><c> into</c><00:03:02.430><c> along</c><00:03:03.329><c> the</c><00:03:03.510><c> way</c><00:03:03.689><c> and</c><00:03:03.959><c> save</c>

00:03:04.369 --> 00:03:04.379 align:start position:0%
gets loaded into along the way and save
 

00:03:04.379 --> 00:03:06.409 align:start position:0%
gets loaded into along the way and save
yourself<00:03:04.709><c> some</c><00:03:04.980><c> serious</c><00:03:05.549><c> garbage</c><00:03:05.939><c> collection</c>

00:03:06.409 --> 00:03:06.419 align:start position:0%
yourself some serious garbage collection
 

00:03:06.419 --> 00:03:09.890 align:start position:0%
yourself some serious garbage collection
and<00:03:06.829><c> performance</c><00:03:07.829><c> along</c><00:03:08.069><c> the</c><00:03:08.189><c> way</c><00:03:08.310><c> so</c><00:03:09.299><c> let's</c>

00:03:09.890 --> 00:03:09.900 align:start position:0%
and performance along the way so let's
 

00:03:09.900 --> 00:03:12.080 align:start position:0%
and performance along the way so let's
take<00:03:10.019><c> a</c><00:03:10.049><c> look</c><00:03:10.230><c> at</c><00:03:10.409><c> a</c><00:03:10.469><c> quick</c><00:03:10.829><c> demo</c><00:03:11.159><c> I</c><00:03:11.340><c> call</c><00:03:11.969><c> this</c>

00:03:12.080 --> 00:03:12.090 align:start position:0%
take a look at a quick demo I call this
 

00:03:12.090 --> 00:03:14.599 align:start position:0%
take a look at a quick demo I call this
demo<00:03:12.269><c> bitmap</c><00:03:12.810><c> allocation</c><00:03:13.530><c> and</c><00:03:13.680><c> it's</c><00:03:14.489><c> a</c>

00:03:14.599 --> 00:03:14.609 align:start position:0%
demo bitmap allocation and it's a
 

00:03:14.609 --> 00:03:16.490 align:start position:0%
demo bitmap allocation and it's a
picture<00:03:14.909><c> viewer</c><00:03:15.150><c> I</c><00:03:15.239><c> have</c><00:03:15.480><c> some</c><00:03:15.689><c> pictures</c><00:03:16.319><c> that</c>

00:03:16.490 --> 00:03:16.500 align:start position:0%
picture viewer I have some pictures that
 

00:03:16.500 --> 00:03:18.830 align:start position:0%
picture viewer I have some pictures that
I've<00:03:16.829><c> loaded</c><00:03:17.010><c> up</c><00:03:17.190><c> in</c><00:03:17.340><c> the</c><00:03:17.430><c> background</c><00:03:17.819><c> and</c><00:03:18.659><c> we</c>

00:03:18.830 --> 00:03:18.840 align:start position:0%
I've loaded up in the background and we
 

00:03:18.840 --> 00:03:20.300 align:start position:0%
I've loaded up in the background and we
can<00:03:19.019><c> click</c><00:03:19.199><c> through</c><00:03:19.409><c> these</c><00:03:19.560><c> and</c><00:03:19.889><c> see</c><00:03:19.949><c> these</c>

00:03:20.300 --> 00:03:20.310 align:start position:0%
can click through these and see these
 

00:03:20.310 --> 00:03:22.460 align:start position:0%
can click through these and see these
other<00:03:20.519><c> images</c><00:03:20.729><c> and</c><00:03:21.180><c> each</c><00:03:22.109><c> one</c><00:03:22.319><c> of</c><00:03:22.349><c> these</c>

00:03:22.460 --> 00:03:22.470 align:start position:0%
other images and each one of these
 

00:03:22.470 --> 00:03:24.920 align:start position:0%
other images and each one of these
images<00:03:22.650><c> is</c><00:03:23.040><c> getting</c><00:03:23.609><c> loaded</c><00:03:23.909><c> on</c><00:03:24.269><c> the</c><00:03:24.449><c> fly</c><00:03:24.690><c> as</c>

00:03:24.920 --> 00:03:24.930 align:start position:0%
images is getting loaded on the fly as
 

00:03:24.930 --> 00:03:26.390 align:start position:0%
images is getting loaded on the fly as
we<00:03:25.079><c> go</c><00:03:25.229><c> through</c><00:03:25.470><c> that</c><00:03:25.590><c> just</c><00:03:25.799><c> for</c><00:03:26.010><c> the</c><00:03:26.040><c> purposes</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
we go through that just for the purposes
 

00:03:26.400 --> 00:03:28.309 align:start position:0%
we go through that just for the purposes
of<00:03:26.519><c> this</c><00:03:26.639><c> demo</c><00:03:27.030><c> and</c><00:03:27.209><c> then</c><00:03:27.840><c> I</c><00:03:27.930><c> print</c><00:03:28.169><c> out</c><00:03:28.229><c> the</c>

00:03:28.309 --> 00:03:28.319 align:start position:0%
of this demo and then I print out the
 

00:03:28.319 --> 00:03:29.809 align:start position:0%
of this demo and then I print out the
number<00:03:28.590><c> of</c><00:03:28.620><c> milliseconds</c><00:03:29.280><c> that</c><00:03:29.370><c> it</c><00:03:29.489><c> took</c><00:03:29.669><c> to</c>

00:03:29.809 --> 00:03:29.819 align:start position:0%
number of milliseconds that it took to
 

00:03:29.819 --> 00:03:31.219 align:start position:0%
number of milliseconds that it took to
load<00:03:29.970><c> each</c><00:03:30.150><c> of</c><00:03:30.269><c> these</c><00:03:30.359><c> images</c><00:03:30.569><c> up</c><00:03:30.900><c> at</c><00:03:30.989><c> the</c><00:03:31.049><c> top</c>

00:03:31.219 --> 00:03:31.229 align:start position:0%
load each of these images up at the top
 

00:03:31.229 --> 00:03:35.929 align:start position:0%
load each of these images up at the top
so<00:03:31.260><c> these</c><00:03:31.590><c> loads</c><00:03:31.889><c> took</c><00:03:32.189><c> 290</c><00:03:33.060><c> 326</c><00:03:33.959><c> 304</c><00:03:34.769><c> 340</c><00:03:35.430><c> 320</c>

00:03:35.929 --> 00:03:35.939 align:start position:0%
so these loads took 290 326 304 340 320
 

00:03:35.939 --> 00:03:38.689 align:start position:0%
so these loads took 290 326 304 340 320
so<00:03:36.810><c> a</c><00:03:37.079><c> little</c><00:03:37.290><c> non-deterministic</c><00:03:38.040><c> based</c><00:03:38.519><c> on</c>

00:03:38.689 --> 00:03:38.699 align:start position:0%
so a little non-deterministic based on
 

00:03:38.699 --> 00:03:39.949 align:start position:0%
so a little non-deterministic based on
you<00:03:38.939><c> know</c><00:03:38.970><c> what</c><00:03:39.180><c> else</c><00:03:39.299><c> is</c><00:03:39.449><c> going</c><00:03:39.659><c> on</c><00:03:39.750><c> in</c><00:03:39.810><c> the</c>

00:03:39.949 --> 00:03:39.959 align:start position:0%
you know what else is going on in the
 

00:03:39.959 --> 00:03:43.429 align:start position:0%
you know what else is going on in the
system<00:03:40.370><c> and</c><00:03:41.370><c> how</c><00:03:41.790><c> long</c><00:03:41.970><c> GC</c><00:03:42.359><c> is</c><00:03:42.449><c> took</c><00:03:42.629><c> and</c><00:03:42.900><c> stuff</c>

00:03:43.429 --> 00:03:43.439 align:start position:0%
system and how long GC is took and stuff
 

00:03:43.439 --> 00:03:43.909 align:start position:0%
system and how long GC is took and stuff
like<00:03:43.560><c> that</c>

00:03:43.909 --> 00:03:43.919 align:start position:0%
like that
 

00:03:43.919 --> 00:03:47.270 align:start position:0%
like that
now<00:03:44.250><c> if</c><00:03:44.519><c> we</c><00:03:44.699><c> reuse</c><00:03:45.150><c> the</c><00:03:45.359><c> bitmap</c><00:03:45.689><c> then</c><00:03:46.530><c> again</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
now if we reuse the bitmap then again
 

00:03:47.280 --> 00:03:48.589 align:start position:0%
now if we reuse the bitmap then again
this<00:03:47.459><c> is</c><00:03:47.549><c> a</c><00:03:47.579><c> little</c><00:03:47.790><c> bit</c><00:03:47.879><c> hard</c><00:03:48.060><c> to</c><00:03:48.120><c> see</c><00:03:48.329><c> because</c>

00:03:48.589 --> 00:03:48.599 align:start position:0%
this is a little bit hard to see because
 

00:03:48.599 --> 00:03:49.939 align:start position:0%
this is a little bit hard to see because
the<00:03:48.720><c> numbers</c><00:03:48.989><c> can</c><00:03:49.169><c> be</c><00:03:49.229><c> a</c><00:03:49.349><c> little</c><00:03:49.530><c> bit</c><00:03:49.650><c> erratic</c>

00:03:49.939 --> 00:03:49.949 align:start position:0%
the numbers can be a little bit erratic
 

00:03:49.949 --> 00:03:52.460 align:start position:0%
the numbers can be a little bit erratic
but<00:03:50.280><c> what</c><00:03:50.400><c> I</c><00:03:50.430><c> see</c><00:03:50.729><c> in</c><00:03:50.970><c> runs</c><00:03:51.810><c> that</c><00:03:52.019><c> I've</c><00:03:52.139><c> done</c><00:03:52.290><c> at</c>

00:03:52.460 --> 00:03:52.470 align:start position:0%
but what I see in runs that I've done at
 

00:03:52.470 --> 00:03:54.319 align:start position:0%
but what I see in runs that I've done at
least<00:03:52.560><c> on</c><00:03:52.739><c> other</c><00:03:52.919><c> devices</c><00:03:53.129><c> is</c><00:03:53.609><c> a</c><00:03:53.639><c> savings</c><00:03:54.090><c> of</c>

00:03:54.319 --> 00:03:54.329 align:start position:0%
least on other devices is a savings of
 

00:03:54.329 --> 00:03:56.839 align:start position:0%
least on other devices is a savings of
in<00:03:54.659><c> general</c><00:03:55.439><c> about</c><00:03:55.620><c> 10</c><00:03:55.829><c> to</c><00:03:55.949><c> 20</c><00:03:56.250><c> percent</c><00:03:56.400><c> which</c>

00:03:56.839 --> 00:03:56.849 align:start position:0%
in general about 10 to 20 percent which
 

00:03:56.849 --> 00:03:59.539 align:start position:0%
in general about 10 to 20 percent which
is<00:03:57.000><c> not</c><00:03:57.180><c> bad</c><00:03:57.449><c> if</c><00:03:57.689><c> you're</c><00:03:57.810><c> talking</c><00:03:58.259><c> about</c><00:03:58.549><c> 300</c>

00:03:59.539 --> 00:03:59.549 align:start position:0%
is not bad if you're talking about 300
 

00:03:59.549 --> 00:04:01.189 align:start position:0%
is not bad if you're talking about 300
milliseconds<00:04:00.060><c> interframe</c><00:04:00.389><c> saving</c><00:04:00.870><c> 30</c>

00:04:01.189 --> 00:04:01.199 align:start position:0%
milliseconds interframe saving 30
 

00:04:01.199 --> 00:04:03.830 align:start position:0%
milliseconds interframe saving 30
milliseconds<00:04:01.949><c> is</c><00:04:02.040><c> a</c><00:04:02.430><c> big</c><00:04:02.819><c> deal</c><00:04:03.120><c> now</c><00:04:03.359><c> ideally</c>

00:04:03.830 --> 00:04:03.840 align:start position:0%
milliseconds is a big deal now ideally
 

00:04:03.840 --> 00:04:05.449 align:start position:0%
milliseconds is a big deal now ideally
you'd<00:04:04.199><c> actually</c><00:04:04.379><c> find</c><00:04:04.769><c> a</c><00:04:04.859><c> better</c><00:04:05.009><c> way</c><00:04:05.189><c> to</c><00:04:05.220><c> load</c>

00:04:05.449 --> 00:04:05.459 align:start position:0%
you'd actually find a better way to load
 

00:04:05.459 --> 00:04:07.339 align:start position:0%
you'd actually find a better way to load
these<00:04:05.609><c> images</c><00:04:06.030><c> than</c><00:04:06.239><c> loading</c><00:04:06.449><c> them</c><00:04:06.659><c> on</c><00:04:06.810><c> the</c>

00:04:07.339 --> 00:04:07.349 align:start position:0%
these images than loading them on the
 

00:04:07.349 --> 00:04:08.800 align:start position:0%
these images than loading them on the
fly<00:04:07.560><c> when</c><00:04:07.799><c> you're</c><00:04:07.949><c> ready</c><00:04:08.159><c> to</c><00:04:08.370><c> draw</c><00:04:08.579><c> them</c>

00:04:08.800 --> 00:04:08.810 align:start position:0%
fly when you're ready to draw them
 

00:04:08.810 --> 00:04:10.969 align:start position:0%
fly when you're ready to draw them
that's<00:04:09.810><c> not</c><00:04:09.930><c> the</c><00:04:10.169><c> best</c><00:04:10.319><c> way</c><00:04:10.470><c> to</c><00:04:10.500><c> go</c><00:04:10.680><c> about</c><00:04:10.799><c> it</c>

00:04:10.969 --> 00:04:10.979 align:start position:0%
that's not the best way to go about it
 

00:04:10.979 --> 00:04:12.619 align:start position:0%
that's not the best way to go about it
but<00:04:11.220><c> the</c><00:04:11.340><c> the</c><00:04:11.579><c> point</c><00:04:11.819><c> of</c><00:04:11.909><c> this</c><00:04:11.970><c> demo</c><00:04:12.299><c> is</c><00:04:12.419><c> more</c>

00:04:12.619 --> 00:04:12.629 align:start position:0%
but the the point of this demo is more
 

00:04:12.629 --> 00:04:14.780 align:start position:0%
but the the point of this demo is more
to<00:04:12.750><c> show</c><00:04:12.930><c> the</c><00:04:13.530><c> raw</c><00:04:13.799><c> amount</c><00:04:14.250><c> of</c><00:04:14.370><c> time</c><00:04:14.549><c> that</c><00:04:14.579><c> it</c>

00:04:14.780 --> 00:04:14.790 align:start position:0%
to show the raw amount of time that it
 

00:04:14.790 --> 00:04:16.819 align:start position:0%
to show the raw amount of time that it
might<00:04:14.939><c> take</c><00:04:14.970><c> to</c><00:04:15.419><c> load</c><00:04:15.659><c> these</c><00:04:15.840><c> things</c><00:04:15.900><c> and</c><00:04:16.440><c> a</c>

00:04:16.819 --> 00:04:16.829 align:start position:0%
might take to load these things and a
 

00:04:16.829 --> 00:04:18.920 align:start position:0%
might take to load these things and a
lot<00:04:17.039><c> of</c><00:04:17.190><c> that</c><00:04:17.310><c> is</c><00:04:17.489><c> the</c><00:04:17.699><c> garbage</c><00:04:18.000><c> collection</c><00:04:18.449><c> so</c>

00:04:18.920 --> 00:04:18.930 align:start position:0%
lot of that is the garbage collection so
 

00:04:18.930 --> 00:04:20.810 align:start position:0%
lot of that is the garbage collection so
let's<00:04:19.440><c> take</c><00:04:19.590><c> a</c><00:04:19.620><c> quick</c><00:04:19.829><c> look</c><00:04:20.039><c> before</c><00:04:20.459><c> we</c><00:04:20.609><c> look</c>

00:04:20.810 --> 00:04:20.820 align:start position:0%
let's take a quick look before we look
 

00:04:20.820 --> 00:04:23.240 align:start position:0%
let's take a quick look before we look
at<00:04:20.880><c> the</c><00:04:21.000><c> code</c><00:04:21.209><c> we</c><00:04:22.049><c> can</c><00:04:22.169><c> take</c><00:04:22.320><c> a</c><00:04:22.349><c> look</c><00:04:22.529><c> at</c><00:04:22.770><c> a</c><00:04:22.800><c> log</c>

00:04:23.240 --> 00:04:23.250 align:start position:0%
at the code we can take a look at a log
 

00:04:23.250 --> 00:04:26.850 align:start position:0%
at the code we can take a look at a log
that<00:04:23.279><c> I</c><00:04:23.580><c> ran</c><00:04:23.880><c> right</c><00:04:24.389><c> before</c><00:04:25.110><c> this</c><00:04:25.260><c> where</c><00:04:25.560><c> I</c><00:04:25.590><c> was</c>

00:04:26.850 --> 00:04:26.860 align:start position:0%
that I ran right before this where I was
 

00:04:26.860 --> 00:04:29.220 align:start position:0%
that I ran right before this where I was
what<00:04:27.130><c> happened</c><00:04:27.460><c> before</c><00:04:27.640><c> and</c><00:04:28.120><c> after</c><00:04:28.480><c> I</c><00:04:28.510><c> checked</c>

00:04:29.220 --> 00:04:29.230 align:start position:0%
what happened before and after I checked
 

00:04:29.230 --> 00:04:30.780 align:start position:0%
what happened before and after I checked
that<00:04:29.350><c> little</c><00:04:29.590><c> box</c><00:04:29.770><c> that</c><00:04:29.920><c> said</c><00:04:30.130><c> we</c><00:04:30.310><c> use</c><00:04:30.490><c> the</c><00:04:30.640><c> bid</c>

00:04:30.780 --> 00:04:30.790 align:start position:0%
that little box that said we use the bid
 

00:04:30.790 --> 00:04:33.390 align:start position:0%
that little box that said we use the bid
map<00:04:30.970><c> and</c><00:04:31.180><c> here's</c><00:04:31.780><c> what</c><00:04:31.990><c> we</c><00:04:32.110><c> get</c><00:04:32.290><c> let's</c><00:04:33.280><c> see</c>

00:04:33.390 --> 00:04:33.400 align:start position:0%
map and here's what we get let's see
 

00:04:33.400 --> 00:04:35.340 align:start position:0%
map and here's what we get let's see
here's<00:04:33.880><c> what</c><00:04:34.060><c> we</c><00:04:34.180><c> got</c><00:04:34.330><c> before</c><00:04:34.630><c> I</c><00:04:34.930><c> check</c><00:04:35.200><c> the</c>

00:04:35.340 --> 00:04:35.350 align:start position:0%
here's what we got before I check the
 

00:04:35.350 --> 00:04:38.700 align:start position:0%
here's what we got before I check the
box<00:04:35.560><c> is</c><00:04:36.120><c> nothing</c><00:04:37.120><c> right</c><00:04:37.660><c> this</c><00:04:37.990><c> this</c><00:04:38.200><c> was</c><00:04:38.560><c> the</c>

00:04:38.700 --> 00:04:38.710 align:start position:0%
box is nothing right this this was the
 

00:04:38.710 --> 00:04:40.860 align:start position:0%
box is nothing right this this was the
output<00:04:38.860><c> not</c><00:04:39.250><c> the</c><00:04:39.460><c> GC</c><00:04:39.850><c> output</c><00:04:40.240><c> above</c><00:04:40.360><c> but</c><00:04:40.750><c> this</c>

00:04:40.860 --> 00:04:40.870 align:start position:0%
output not the GC output above but this
 

00:04:40.870 --> 00:04:44.490 align:start position:0%
output not the GC output above but this
output<00:04:41.230><c> here</c><00:04:41.260><c> is</c><00:04:41.710><c> what</c><00:04:42.280><c> we</c><00:04:42.430><c> saw</c><00:04:42.960><c> when</c><00:04:43.960><c> we</c><00:04:44.020><c> reuse</c>

00:04:44.490 --> 00:04:44.500 align:start position:0%
output here is what we saw when we reuse
 

00:04:44.500 --> 00:04:46.140 align:start position:0%
output here is what we saw when we reuse
the<00:04:44.680><c> bitmap</c><00:04:44.980><c> but</c><00:04:45.220><c> when</c><00:04:45.340><c> we're</c><00:04:45.490><c> not</c><00:04:45.640><c> reusing</c>

00:04:46.140 --> 00:04:46.150 align:start position:0%
the bitmap but when we're not reusing
 

00:04:46.150 --> 00:04:48.480 align:start position:0%
the bitmap but when we're not reusing
the<00:04:46.240><c> bitmap</c><00:04:46.570><c> this</c><00:04:46.930><c> is</c><00:04:47.080><c> what</c><00:04:47.230><c> we</c><00:04:47.350><c> see</c><00:04:47.530><c> right</c><00:04:48.370><c> on</c>

00:04:48.480 --> 00:04:48.490 align:start position:0%
the bitmap this is what we see right on
 

00:04:48.490 --> 00:04:52.110 align:start position:0%
the bitmap this is what we see right on
every<00:04:49.210><c> frame</c><00:04:49.480><c> we're</c><00:04:50.370><c> incurring</c><00:04:51.370><c> potentially</c>

00:04:52.110 --> 00:04:52.120 align:start position:0%
every frame we're incurring potentially
 

00:04:52.120 --> 00:04:53.790 align:start position:0%
every frame we're incurring potentially
very<00:04:52.300><c> expensive</c><00:04:52.480><c> garbage</c><00:04:53.020><c> collections</c><00:04:53.620><c> some</c>

00:04:53.790 --> 00:04:53.800 align:start position:0%
very expensive garbage collections some
 

00:04:53.800 --> 00:04:56.100 align:start position:0%
very expensive garbage collections some
of<00:04:53.920><c> that</c><00:04:54.010><c> runs</c><00:04:54.190><c> in</c><00:04:54.370><c> parallel</c><00:04:54.750><c> but</c><00:04:55.750><c> we</c><00:04:55.870><c> still</c>

00:04:56.100 --> 00:04:56.110 align:start position:0%
of that runs in parallel but we still
 

00:04:56.110 --> 00:05:00.000 align:start position:0%
of that runs in parallel but we still
have<00:04:56.350><c> pauses</c><00:04:56.980><c> of</c><00:04:57.010><c> 21</c><00:04:57.730><c> milliseconds</c><00:04:58.470><c> for</c><00:04:59.470><c> Alex</c>

00:05:00.000 --> 00:05:00.010 align:start position:0%
have pauses of 21 milliseconds for Alex
 

00:05:00.010 --> 00:05:02.160 align:start position:0%
have pauses of 21 milliseconds for Alex
3<00:05:00.460><c> milliseconds</c><00:05:01.060><c> here</c><00:05:01.180><c> 12</c><00:05:01.540><c> milliseconds</c>

00:05:02.160 --> 00:05:02.170 align:start position:0%
3 milliseconds here 12 milliseconds
 

00:05:02.170 --> 00:05:04.320 align:start position:0%
3 milliseconds here 12 milliseconds
there<00:05:02.320><c> if</c><00:05:02.470><c> you</c><00:05:02.950><c> imagine</c><00:05:03.190><c> that</c><00:05:03.430><c> a</c><00:05:03.580><c> 60</c><00:05:04.090><c> frame</c><00:05:04.300><c> per</c>

00:05:04.320 --> 00:05:04.330 align:start position:0%
there if you imagine that a 60 frame per
 

00:05:04.330 --> 00:05:07.050 align:start position:0%
there if you imagine that a 60 frame per
second<00:05:04.930><c> application</c><00:05:05.710><c> only</c><00:05:06.190><c> has</c><00:05:06.520><c> 16</c>

00:05:07.050 --> 00:05:07.060 align:start position:0%
second application only has 16
 

00:05:07.060 --> 00:05:08.940 align:start position:0%
second application only has 16
milliseconds<00:05:07.780><c> in</c><00:05:07.870><c> order</c><00:05:08.050><c> to</c><00:05:08.170><c> draw</c><00:05:08.350><c> each</c><00:05:08.590><c> frame</c>

00:05:08.940 --> 00:05:08.950 align:start position:0%
milliseconds in order to draw each frame
 

00:05:08.950 --> 00:05:11.370 align:start position:0%
milliseconds in order to draw each frame
these<00:05:09.670><c> numbers</c><00:05:10.060><c> are</c><00:05:10.210><c> huge</c><00:05:10.570><c> you</c><00:05:10.900><c> really</c><00:05:11.200><c> want</c>

00:05:11.370 --> 00:05:11.380 align:start position:0%
these numbers are huge you really want
 

00:05:11.380 --> 00:05:13.560 align:start position:0%
these numbers are huge you really want
to<00:05:11.470><c> avoid</c><00:05:11.590><c> them</c><00:05:11.860><c> if</c><00:05:12.010><c> you</c><00:05:12.130><c> can</c><00:05:12.340><c> so</c><00:05:13.030><c> how</c><00:05:13.270><c> do</c><00:05:13.330><c> we</c><00:05:13.420><c> do</c>

00:05:13.560 --> 00:05:13.570 align:start position:0%
to avoid them if you can so how do we do
 

00:05:13.570 --> 00:05:14.060 align:start position:0%
to avoid them if you can so how do we do
that

00:05:14.060 --> 00:05:14.070 align:start position:0%
that
 

00:05:14.070 --> 00:05:17.670 align:start position:0%
that
we<00:05:15.070><c> use</c><00:05:15.340><c> bitmap</c><00:05:15.790><c> factory</c><00:05:16.060><c> options</c><00:05:16.780><c> so</c><00:05:17.380><c> let's</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
we use bitmap factory options so let's
 

00:05:17.680 --> 00:05:18.900 align:start position:0%
we use bitmap factory options so let's
go<00:05:17.770><c> in</c><00:05:17.920><c> here</c><00:05:18.100><c> take</c><00:05:18.280><c> a</c><00:05:18.310><c> look</c><00:05:18.460><c> at</c><00:05:18.520><c> the</c><00:05:18.580><c> code</c><00:05:18.760><c> this</c>

00:05:18.900 --> 00:05:18.910 align:start position:0%
go in here take a look at the code this
 

00:05:18.910 --> 00:05:22.410 align:start position:0%
go in here take a look at the code this
is<00:05:19.060><c> the</c><00:05:19.210><c> bitmap</c><00:05:19.540><c> application</c><00:05:20.260><c> code</c><00:05:20.470><c> and</c><00:05:21.420><c> here</c>

00:05:22.410 --> 00:05:22.420 align:start position:0%
is the bitmap application code and here
 

00:05:22.420 --> 00:05:24.090 align:start position:0%
is the bitmap application code and here
we<00:05:22.570><c> have</c><00:05:22.720><c> the</c><00:05:22.840><c> checkbox</c><00:05:23.290><c> that</c><00:05:23.530><c> determines</c>

00:05:24.090 --> 00:05:24.100 align:start position:0%
we have the checkbox that determines
 

00:05:24.100 --> 00:05:25.680 align:start position:0%
we have the checkbox that determines
whether<00:05:24.250><c> we're</c><00:05:24.460><c> actually</c><00:05:24.760><c> going</c><00:05:25.030><c> to</c><00:05:25.090><c> do</c><00:05:25.270><c> reuse</c>

00:05:25.680 --> 00:05:25.690 align:start position:0%
whether we're actually going to do reuse
 

00:05:25.690 --> 00:05:30.000 align:start position:0%
whether we're actually going to do reuse
or<00:05:25.900><c> not</c><00:05:26.080><c> and</c><00:05:27.030><c> in</c><00:05:28.030><c> here</c><00:05:28.390><c> we're</c><00:05:28.630><c> going</c><00:05:28.900><c> to</c><00:05:29.110><c> create</c>

00:05:30.000 --> 00:05:30.010 align:start position:0%
or not and in here we're going to create
 

00:05:30.010 --> 00:05:33.450 align:start position:0%
or not and in here we're going to create
our<00:05:30.370><c> bitmap</c><00:05:31.000><c> that</c><00:05:31.180><c> gets</c><00:05:31.540><c> reused</c><00:05:31.870><c> on</c><00:05:32.410><c> the</c><00:05:33.220><c> fly</c>

00:05:33.450 --> 00:05:33.460 align:start position:0%
our bitmap that gets reused on the fly
 

00:05:33.460 --> 00:05:36.380 align:start position:0%
our bitmap that gets reused on the fly
so<00:05:33.750><c> first</c><00:05:34.750><c> of</c><00:05:34.900><c> all</c><00:05:34.990><c> we're</c><00:05:35.200><c> going</c><00:05:35.350><c> to</c><00:05:35.470><c> decode</c>

00:05:36.380 --> 00:05:36.390 align:start position:0%
so first of all we're going to decode
 

00:05:36.390 --> 00:05:38.970 align:start position:0%
so first of all we're going to decode
the<00:05:37.390><c> initial</c><00:05:38.170><c> image</c><00:05:38.410><c> that</c><00:05:38.530><c> we</c><00:05:38.590><c> start</c><00:05:38.830><c> with</c>

00:05:38.970 --> 00:05:38.980 align:start position:0%
the initial image that we start with
 

00:05:38.980 --> 00:05:40.770 align:start position:0%
the initial image that we start with
this<00:05:39.520><c> application</c><00:05:39.970><c> does</c><00:05:40.090><c> assume</c><00:05:40.510><c> that</c><00:05:40.690><c> all</c>

00:05:40.770 --> 00:05:40.780 align:start position:0%
this application does assume that all
 

00:05:40.780 --> 00:05:42.480 align:start position:0%
this application does assume that all
the<00:05:40.900><c> bitmaps</c><00:05:41.230><c> are</c><00:05:41.470><c> the</c><00:05:41.680><c> same</c><00:05:41.860><c> size</c><00:05:42.100><c> and</c><00:05:42.370><c> this</c>

00:05:42.480 --> 00:05:42.490 align:start position:0%
the bitmaps are the same size and this
 

00:05:42.490 --> 00:05:45.450 align:start position:0%
the bitmaps are the same size and this
is<00:05:42.640><c> a</c><00:05:42.670><c> restriction</c><00:05:43.240><c> with</c><00:05:44.100><c> reusing</c><00:05:45.100><c> the</c>

00:05:45.450 --> 00:05:45.460 align:start position:0%
is a restriction with reusing the
 

00:05:45.460 --> 00:05:47.730 align:start position:0%
is a restriction with reusing the
bitmaps<00:05:45.790><c> with</c><00:05:46.030><c> this</c><00:05:46.180><c> API</c><00:05:46.450><c> is</c><00:05:46.840><c> that</c><00:05:47.320><c> it</c><00:05:47.530><c> will</c>

00:05:47.730 --> 00:05:47.740 align:start position:0%
bitmaps with this API is that it will
 

00:05:47.740 --> 00:05:49.530 align:start position:0%
bitmaps with this API is that it will
only<00:05:47.920><c> work</c><00:05:48.220><c> for</c><00:05:48.250><c> bitmaps</c><00:05:48.850><c> of</c><00:05:48.940><c> the</c><00:05:49.120><c> same</c><00:05:49.300><c> size</c>

00:05:49.530 --> 00:05:49.540 align:start position:0%
only work for bitmaps of the same size
 

00:05:49.540 --> 00:05:51.780 align:start position:0%
only work for bitmaps of the same size
so<00:05:50.020><c> we</c><00:05:50.140><c> get</c><00:05:50.260><c> the</c><00:05:50.380><c> size</c><00:05:50.770><c> of</c><00:05:51.010><c> the</c><00:05:51.100><c> initial</c><00:05:51.460><c> bitmap</c>

00:05:51.780 --> 00:05:51.790 align:start position:0%
so we get the size of the initial bitmap
 

00:05:51.790 --> 00:05:54.240 align:start position:0%
so we get the size of the initial bitmap
and<00:05:52.630><c> we</c><00:05:52.780><c> get</c><00:05:52.960><c> only</c><00:05:53.230><c> the</c><00:05:53.500><c> size</c><00:05:53.650><c> we</c><00:05:53.860><c> don't</c><00:05:54.010><c> force</c>

00:05:54.240 --> 00:05:54.250 align:start position:0%
and we get only the size we don't force
 

00:05:54.250 --> 00:05:56.070 align:start position:0%
and we get only the size we don't force
it<00:05:54.400><c> to</c><00:05:54.520><c> actually</c><00:05:54.880><c> load</c><00:05:55.090><c> that</c><00:05:55.270><c> bitmap</c><00:05:55.480><c> yet</c><00:05:55.840><c> by</c>

00:05:56.070 --> 00:05:56.080 align:start position:0%
it to actually load that bitmap yet by
 

00:05:56.080 --> 00:05:58.740 align:start position:0%
it to actually load that bitmap yet by
using<00:05:56.350><c> the</c><00:05:56.650><c> in</c><00:05:56.920><c> just</c><00:05:57.340><c> decode</c><00:05:57.760><c> Bowden</c><00:05:58.240><c> options</c>

00:05:58.740 --> 00:05:58.750 align:start position:0%
using the in just decode Bowden options
 

00:05:58.750 --> 00:06:00.480 align:start position:0%
using the in just decode Bowden options
and<00:05:58.930><c> that</c><00:05:59.440><c> will</c><00:05:59.590><c> return</c><00:05:59.860><c> the</c><00:06:00.070><c> width</c><00:06:00.250><c> and</c><00:06:00.430><c> the</c>

00:06:00.480 --> 00:06:00.490 align:start position:0%
and that will return the width and the
 

00:06:00.490 --> 00:06:02.390 align:start position:0%
and that will return the width and the
height<00:06:00.520><c> that</c><00:06:00.850><c> we</c><00:06:00.910><c> can</c><00:06:01.120><c> then</c><00:06:01.270><c> use</c><00:06:01.480><c> in</c><00:06:01.750><c> our</c>

00:06:02.390 --> 00:06:02.400 align:start position:0%
height that we can then use in our
 

00:06:02.400 --> 00:06:05.490 align:start position:0%
height that we can then use in our
create<00:06:03.400><c> bitmap</c><00:06:03.610><c> call</c><00:06:04.000><c> so</c><00:06:04.540><c> we</c><00:06:04.750><c> use</c><00:06:04.930><c> the</c><00:06:05.170><c> the</c>

00:06:05.490 --> 00:06:05.500 align:start position:0%
create bitmap call so we use the the
 

00:06:05.500 --> 00:06:06.720 align:start position:0%
create bitmap call so we use the the
width<00:06:05.710><c> and</c><00:06:05.860><c> the</c><00:06:05.920><c> height</c><00:06:05.980><c> that</c><00:06:06.280><c> we</c><00:06:06.370><c> need</c><00:06:06.550><c> to</c>

00:06:06.720 --> 00:06:06.730 align:start position:0%
width and the height that we need to
 

00:06:06.730 --> 00:06:08.430 align:start position:0%
width and the height that we need to
sort<00:06:06.970><c> of</c><00:06:07.030><c> get</c><00:06:07.150><c> this</c><00:06:07.360><c> sandbox</c><00:06:07.930><c> we're</c><00:06:08.200><c> going</c><00:06:08.380><c> to</c>

00:06:08.430 --> 00:06:08.440 align:start position:0%
sort of get this sandbox we're going to
 

00:06:08.440 --> 00:06:11.160 align:start position:0%
sort of get this sandbox we're going to
load<00:06:08.800><c> all</c><00:06:08.980><c> these</c><00:06:09.130><c> things</c><00:06:09.430><c> into</c><00:06:09.790><c> then</c><00:06:10.720><c> we</c><00:06:10.870><c> reset</c>

00:06:11.160 --> 00:06:11.170 align:start position:0%
load all these things into then we reset
 

00:06:11.170 --> 00:06:15.500 align:start position:0%
load all these things into then we reset
that<00:06:11.470><c> flag</c><00:06:11.800><c> and</c><00:06:12.010><c> we</c><00:06:12.610><c> set</c><00:06:12.850><c> the</c><00:06:13.030><c> in</c><00:06:13.330><c> bitmap</c><00:06:14.200><c> flag</c>

00:06:15.500 --> 00:06:15.510 align:start position:0%
that flag and we set the in bitmap flag
 

00:06:15.510 --> 00:06:19.440 align:start position:0%
that flag and we set the in bitmap flag
and<00:06:16.510><c> that</c><00:06:17.110><c> is</c><00:06:17.950><c> the</c><00:06:18.610><c> new</c><00:06:18.790><c> API</c><00:06:19.120><c> that</c><00:06:19.330><c> was</c>

00:06:19.440 --> 00:06:19.450 align:start position:0%
and that is the new API that was
 

00:06:19.450 --> 00:06:21.750 align:start position:0%
and that is the new API that was
introduced<00:06:19.870><c> in</c><00:06:20.050><c> 3.0</c><00:06:20.620><c> at</c><00:06:20.830><c> the</c><00:06:21.100><c> same</c><00:06:21.280><c> time</c><00:06:21.550><c> as</c>

00:06:21.750 --> 00:06:21.760 align:start position:0%
introduced in 3.0 at the same time as
 

00:06:21.760 --> 00:06:23.310 align:start position:0%
introduced in 3.0 at the same time as
the<00:06:21.880><c> other</c><00:06:22.030><c> change</c><00:06:22.330><c> to</c><00:06:22.630><c> the</c><00:06:23.020><c> memory</c>

00:06:23.310 --> 00:06:23.320 align:start position:0%
the other change to the memory
 

00:06:23.320 --> 00:06:25.440 align:start position:0%
the other change to the memory
management<00:06:23.620><c> of</c><00:06:23.860><c> bitmaps</c><00:06:24.010><c> and</c><00:06:24.370><c> we</c><00:06:25.060><c> set</c><00:06:25.270><c> that</c>

00:06:25.440 --> 00:06:25.450 align:start position:0%
management of bitmaps and we set that
 

00:06:25.450 --> 00:06:28.320 align:start position:0%
management of bitmaps and we set that
equal<00:06:25.660><c> to</c><00:06:25.900><c> this</c><00:06:26.320><c> sandbox</c><00:06:26.970><c> bitmap</c><00:06:27.970><c> that</c><00:06:28.000><c> we've</c>

00:06:28.320 --> 00:06:28.330 align:start position:0%
equal to this sandbox bitmap that we've
 

00:06:28.330 --> 00:06:30.420 align:start position:0%
equal to this sandbox bitmap that we've
just<00:06:28.630><c> created</c><00:06:28.840><c> and</c><00:06:29.800><c> then</c><00:06:29.920><c> we</c><00:06:30.010><c> set</c><00:06:30.220><c> the</c><00:06:30.310><c> in</c>

00:06:30.420 --> 00:06:30.430 align:start position:0%
just created and then we set the in
 

00:06:30.430 --> 00:06:32.880 align:start position:0%
just created and then we set the in
sample<00:06:30.700><c> size</c><00:06:31.030><c> to</c><00:06:31.240><c> 1</c><00:06:31.390><c> and</c><00:06:31.660><c> this</c><00:06:31.750><c> is</c><00:06:31.960><c> unnecessary</c>

00:06:32.880 --> 00:06:32.890 align:start position:0%
sample size to 1 and this is unnecessary
 

00:06:32.890 --> 00:06:35.790 align:start position:0%
sample size to 1 and this is unnecessary
an<00:06:33.460><c> unfortunate</c><00:06:34.060><c> bug</c><00:06:35.020><c> that</c><00:06:35.170><c> got</c><00:06:35.320><c> fixed</c><00:06:35.650><c> in</c><00:06:35.740><c> a</c>

00:06:35.790 --> 00:06:35.800 align:start position:0%
an unfortunate bug that got fixed in a
 

00:06:35.800 --> 00:06:37.290 align:start position:0%
an unfortunate bug that got fixed in a
recent<00:06:36.160><c> release</c><00:06:36.280><c> where</c><00:06:36.670><c> if</c><00:06:36.850><c> you</c><00:06:36.940><c> didn't</c><00:06:37.150><c> set</c>

00:06:37.290 --> 00:06:37.300 align:start position:0%
recent release where if you didn't set
 

00:06:37.300 --> 00:06:38.910 align:start position:0%
recent release where if you didn't set
the<00:06:37.420><c> sample</c><00:06:37.600><c> size</c><00:06:37.930><c> it</c><00:06:38.170><c> wouldn't</c><00:06:38.410><c> do</c><00:06:38.650><c> the</c><00:06:38.770><c> right</c>

00:06:38.910 --> 00:06:38.920 align:start position:0%
the sample size it wouldn't do the right
 

00:06:38.920 --> 00:06:39.410 align:start position:0%
the sample size it wouldn't do the right
thing<00:06:39.130><c> so</c>

00:06:39.410 --> 00:06:39.420 align:start position:0%
thing so
 

00:06:39.420 --> 00:06:41.210 align:start position:0%
thing so
do<00:06:39.570><c> need</c><00:06:39.750><c> to</c><00:06:39.870><c> set</c><00:06:40.440><c> it</c><00:06:40.560><c> to</c><00:06:40.650><c> what</c><00:06:40.830><c> would</c><00:06:41.010><c> be</c><00:06:41.190><c> the</c>

00:06:41.210 --> 00:06:41.220 align:start position:0%
do need to set it to what would be the
 

00:06:41.220 --> 00:06:43.640 align:start position:0%
do need to set it to what would be the
default<00:06:41.730><c> option</c><00:06:42.150><c> in</c><00:06:42.330><c> sample</c><00:06:42.780><c> size</c><00:06:42.990><c> of</c><00:06:43.170><c> one</c><00:06:43.230><c> and</c>

00:06:43.640 --> 00:06:43.650 align:start position:0%
default option in sample size of one and
 

00:06:43.650 --> 00:06:46.370 align:start position:0%
default option in sample size of one and
then<00:06:44.070><c> we</c><00:06:44.160><c> decode</c><00:06:44.580><c> the</c><00:06:45.180><c> resource</c><00:06:45.540><c> and</c><00:06:45.870><c> away</c><00:06:46.200><c> we</c>

00:06:46.370 --> 00:06:46.380 align:start position:0%
then we decode the resource and away we
 

00:06:46.380 --> 00:06:48.770 align:start position:0%
then we decode the resource and away we
go<00:06:46.460><c> so</c><00:06:47.460><c> now</c><00:06:47.490><c> we're</c><00:06:47.970><c> in</c><00:06:48.090><c> our</c><00:06:48.180><c> click</c><00:06:48.450><c> listener</c>

00:06:48.770 --> 00:06:48.780 align:start position:0%
go so now we're in our click listener
 

00:06:48.780 --> 00:06:50.030 align:start position:0%
go so now we're in our click listener
every<00:06:48.990><c> time</c><00:06:49.140><c> you</c><00:06:49.260><c> click</c><00:06:49.440><c> on</c><00:06:49.560><c> the</c><00:06:49.650><c> image</c><00:06:49.680><c> we're</c>

00:06:50.030 --> 00:06:50.040 align:start position:0%
every time you click on the image we're
 

00:06:50.040 --> 00:06:51.680 align:start position:0%
every time you click on the image we're
going<00:06:50.190><c> to</c><00:06:50.250><c> load</c><00:06:50.460><c> in</c><00:06:50.610><c> the</c><00:06:50.640><c> next</c><00:06:51.180><c> image</c><00:06:51.390><c> and</c>

00:06:51.680 --> 00:06:51.690 align:start position:0%
going to load in the next image and
 

00:06:51.690 --> 00:06:54.020 align:start position:0%
going to load in the next image and
we're<00:06:52.200><c> either</c><00:06:52.440><c> going</c><00:06:52.740><c> to</c><00:06:52.830><c> reuse</c><00:06:53.010><c> that</c><00:06:53.400><c> bitmap</c>

00:06:54.020 --> 00:06:54.030 align:start position:0%
we're either going to reuse that bitmap
 

00:06:54.030 --> 00:06:56.330 align:start position:0%
we're either going to reuse that bitmap
or<00:06:54.420><c> we're</c><00:06:54.720><c> not</c><00:06:54.870><c> so</c><00:06:55.350><c> if</c><00:06:55.590><c> the</c><00:06:55.740><c> checkbox</c><00:06:56.130><c> is</c>

00:06:56.330 --> 00:06:56.340 align:start position:0%
or we're not so if the checkbox is
 

00:06:56.340 --> 00:06:58.910 align:start position:0%
or we're not so if the checkbox is
checked<00:06:56.690><c> we're</c><00:06:57.690><c> going</c><00:06:57.930><c> to</c><00:06:58.080><c> reuse</c><00:06:58.470><c> the</c><00:06:58.650><c> bitmap</c>

00:06:58.910 --> 00:06:58.920 align:start position:0%
checked we're going to reuse the bitmap
 

00:06:58.920 --> 00:07:00.380 align:start position:0%
checked we're going to reuse the bitmap
and<00:06:59.070><c> we're</c><00:06:59.190><c> going</c><00:06:59.310><c> to</c><00:06:59.370><c> do</c><00:06:59.460><c> that</c><00:06:59.670><c> by</c><00:06:59.850><c> saying</c><00:07:00.120><c> the</c>

00:07:00.380 --> 00:07:00.390 align:start position:0%
and we're going to do that by saying the
 

00:07:00.390 --> 00:07:02.660 align:start position:0%
and we're going to do that by saying the
bitmap<00:07:00.690><c> options</c><00:07:00.950><c> equals</c><00:07:01.950><c> these</c><00:07:02.040><c> options</c><00:07:02.520><c> that</c>

00:07:02.660 --> 00:07:02.670 align:start position:0%
bitmap options equals these options that
 

00:07:02.670 --> 00:07:04.400 align:start position:0%
bitmap options equals these options that
we've<00:07:02.790><c> created</c><00:07:03.030><c> above</c><00:07:03.420><c> which</c><00:07:03.750><c> has</c><00:07:03.960><c> this</c><00:07:04.170><c> in</c>

00:07:04.400 --> 00:07:04.410 align:start position:0%
we've created above which has this in
 

00:07:04.410 --> 00:07:06.830 align:start position:0%
we've created above which has this in
bitmap<00:07:05.250><c> parameter</c><00:07:05.820><c> set</c><00:07:06.060><c> in</c><00:07:06.210><c> it</c><00:07:06.330><c> which</c><00:07:06.540><c> tells</c>

00:07:06.830 --> 00:07:06.840 align:start position:0%
bitmap parameter set in it which tells
 

00:07:06.840 --> 00:07:09.500 align:start position:0%
bitmap parameter set in it which tells
it's<00:07:07.740><c> a</c><00:07:07.860><c> trigger</c><00:07:08.100><c> to</c><00:07:08.400><c> the</c><00:07:08.580><c> code</c><00:07:08.730><c> to</c><00:07:08.910><c> say</c><00:07:09.090><c> okay</c>

00:07:09.500 --> 00:07:09.510 align:start position:0%
it's a trigger to the code to say okay
 

00:07:09.510 --> 00:07:11.540 align:start position:0%
it's a trigger to the code to say okay
this<00:07:09.660><c> is</c><00:07:09.720><c> the</c><00:07:10.560><c> sandbox</c><00:07:10.980><c> where</c><00:07:11.160><c> I'm</c><00:07:11.250><c> going</c><00:07:11.460><c> to</c>

00:07:11.540 --> 00:07:11.550 align:start position:0%
this is the sandbox where I'm going to
 

00:07:11.550 --> 00:07:15.700 align:start position:0%
this is the sandbox where I'm going to
actually<00:07:11.700><c> load</c><00:07:12.120><c> this</c><00:07:12.300><c> new</c><00:07:12.480><c> bitmap</c><00:07:12.840><c> into</c><00:07:13.280><c> and</c>

00:07:15.700 --> 00:07:15.710 align:start position:0%
actually load this new bitmap into and
 

00:07:15.710 --> 00:07:18.530 align:start position:0%
actually load this new bitmap into and
so<00:07:16.710><c> we</c><00:07:16.860><c> set</c><00:07:17.040><c> the</c><00:07:17.130><c> in</c><00:07:17.250><c> bitmap</c><00:07:17.640><c> flag</c><00:07:17.940><c> there</c><00:07:18.240><c> and</c>

00:07:18.530 --> 00:07:18.540 align:start position:0%
so we set the in bitmap flag there and
 

00:07:18.540 --> 00:07:20.450 align:start position:0%
so we set the in bitmap flag there and
then<00:07:18.720><c> I</c><00:07:18.990><c> was</c><00:07:19.350><c> just</c><00:07:19.410><c> issuing</c><00:07:19.920><c> some</c><00:07:20.190><c> timing</c>

00:07:20.450 --> 00:07:20.460 align:start position:0%
then I was just issuing some timing
 

00:07:20.460 --> 00:07:22.370 align:start position:0%
then I was just issuing some timing
because<00:07:20.880><c> this</c><00:07:21.090><c> is</c><00:07:21.240><c> how</c><00:07:21.360><c> I</c><00:07:21.390><c> produce</c><00:07:21.660><c> the</c><00:07:21.990><c> the</c>

00:07:22.370 --> 00:07:22.380 align:start position:0%
because this is how I produce the the
 

00:07:22.380 --> 00:07:24.080 align:start position:0%
because this is how I produce the the
times<00:07:22.620><c> that</c><00:07:22.770><c> are</c><00:07:22.860><c> spit</c><00:07:23.160><c> out</c><00:07:23.190><c> in</c><00:07:23.430><c> the</c><00:07:23.520><c> UI</c><00:07:23.670><c> so</c><00:07:24.000><c> we</c>

00:07:24.080 --> 00:07:24.090 align:start position:0%
times that are spit out in the UI so we
 

00:07:24.090 --> 00:07:25.820 align:start position:0%
times that are spit out in the UI so we
can<00:07:24.210><c> see</c><00:07:24.330><c> how</c><00:07:24.480><c> long</c><00:07:24.510><c> these</c><00:07:24.840><c> things</c><00:07:24.900><c> take</c>

00:07:25.820 --> 00:07:25.830 align:start position:0%
can see how long these things take
 

00:07:25.830 --> 00:07:27.410 align:start position:0%
can see how long these things take
we<00:07:26.070><c> then</c><00:07:26.220><c> decode</c><00:07:26.640><c> the</c><00:07:26.760><c> resource</c><00:07:27.120><c> and</c><00:07:27.330><c> that</c>

00:07:27.410 --> 00:07:27.420 align:start position:0%
we then decode the resource and that
 

00:07:27.420 --> 00:07:29.180 align:start position:0%
we then decode the resource and that
will<00:07:27.540><c> either</c><00:07:27.750><c> reuse</c><00:07:28.200><c> the</c><00:07:28.350><c> bitmap</c><00:07:28.620><c> or</c><00:07:28.860><c> not</c>

00:07:29.180 --> 00:07:29.190 align:start position:0%
will either reuse the bitmap or not
 

00:07:29.190 --> 00:07:30.590 align:start position:0%
will either reuse the bitmap or not
depending<00:07:29.670><c> on</c><00:07:29.760><c> whether</c><00:07:29.940><c> we</c><00:07:30.120><c> set</c><00:07:30.360><c> the</c><00:07:30.480><c> in</c>

00:07:30.590 --> 00:07:30.600 align:start position:0%
depending on whether we set the in
 

00:07:30.600 --> 00:07:33.620 align:start position:0%
depending on whether we set the in
bitmap<00:07:31.250><c> parameter</c><00:07:32.250><c> above</c><00:07:32.520><c> and</c><00:07:32.760><c> then</c><00:07:33.270><c> we</c><00:07:33.390><c> set</c>

00:07:33.620 --> 00:07:33.630 align:start position:0%
bitmap parameter above and then we set
 

00:07:33.630 --> 00:07:36.190 align:start position:0%
bitmap parameter above and then we set
the<00:07:33.780><c> new</c><00:07:33.930><c> image</c><00:07:34.710><c> bitmap</c><00:07:35.070><c> in</c><00:07:35.280><c> the</c><00:07:35.370><c> image</c><00:07:35.610><c> view</c>

00:07:36.190 --> 00:07:36.200 align:start position:0%
the new image bitmap in the image view
 

00:07:36.200 --> 00:07:39.290 align:start position:0%
the new image bitmap in the image view
finally<00:07:37.200><c> we</c><00:07:37.440><c> get</c><00:07:38.310><c> the</c><00:07:38.460><c> final</c><00:07:38.790><c> time</c><00:07:39.000><c> that</c><00:07:39.210><c> it</c>

00:07:39.290 --> 00:07:39.300 align:start position:0%
finally we get the final time that it
 

00:07:39.300 --> 00:07:40.940 align:start position:0%
finally we get the final time that it
took<00:07:39.450><c> and</c><00:07:39.720><c> display</c><00:07:40.110><c> that</c><00:07:40.290><c> in</c><00:07:40.440><c> the</c><00:07:40.500><c> UI</c><00:07:40.650><c> and</c>

00:07:40.940 --> 00:07:40.950 align:start position:0%
took and display that in the UI and
 

00:07:40.950 --> 00:07:43.520 align:start position:0%
took and display that in the UI and
that's<00:07:41.700><c> it</c><00:07:41.910><c> not</c><00:07:42.360><c> very</c><00:07:42.600><c> hard</c><00:07:42.900><c> to</c><00:07:43.020><c> use</c><00:07:43.110><c> but</c>

00:07:43.520 --> 00:07:43.530 align:start position:0%
that's it not very hard to use but
 

00:07:43.530 --> 00:07:45.320 align:start position:0%
that's it not very hard to use but
definitely<00:07:43.920><c> worth</c><00:07:44.130><c> using</c><00:07:44.460><c> especially</c><00:07:45.240><c> if</c>

00:07:45.320 --> 00:07:45.330 align:start position:0%
definitely worth using especially if
 

00:07:45.330 --> 00:07:46.280 align:start position:0%
definitely worth using especially if
you're<00:07:45.510><c> in</c><00:07:45.600><c> the</c><00:07:45.690><c> case</c><00:07:45.870><c> where</c><00:07:46.110><c> you're</c>

00:07:46.280 --> 00:07:46.290 align:start position:0%
you're in the case where you're
 

00:07:46.290 --> 00:07:48.500 align:start position:0%
you're in the case where you're
constantly<00:07:46.740><c> loading</c><00:07:47.370><c> in</c><00:07:47.670><c> new</c><00:07:47.850><c> bitmaps</c><00:07:48.270><c> and</c>

00:07:48.500 --> 00:07:48.510 align:start position:0%
constantly loading in new bitmaps and
 

00:07:48.510 --> 00:07:50.420 align:start position:0%
constantly loading in new bitmaps and
those<00:07:48.690><c> bitmaps</c><00:07:48.930><c> are</c><00:07:49.290><c> the</c><00:07:49.530><c> same</c><00:07:49.740><c> size</c><00:07:49.980><c> as</c><00:07:50.220><c> other</c>

00:07:50.420 --> 00:07:50.430 align:start position:0%
those bitmaps are the same size as other
 

00:07:50.430 --> 00:07:52.520 align:start position:0%
those bitmaps are the same size as other
bitmaps<00:07:50.850><c> that</c><00:07:51.090><c> you're</c><00:07:51.510><c> now</c><00:07:51.660><c> done</c><00:07:51.720><c> with</c><00:07:51.990><c> this</c>

00:07:52.520 --> 00:07:52.530 align:start position:0%
bitmaps that you're now done with this
 

00:07:52.530 --> 00:07:54.470 align:start position:0%
bitmaps that you're now done with this
basically<00:07:53.100><c> allows</c><00:07:53.490><c> a</c><00:07:53.520><c> garbage</c><00:07:54.000><c> collector</c><00:07:54.270><c> to</c>

00:07:54.470 --> 00:07:54.480 align:start position:0%
basically allows a garbage collector to
 

00:07:54.480 --> 00:07:56.150 align:start position:0%
basically allows a garbage collector to
get<00:07:54.600><c> out</c><00:07:54.780><c> of</c><00:07:54.900><c> the</c><00:07:54.990><c> way</c><00:07:55.110><c> because</c><00:07:55.560><c> there's</c>

00:07:56.150 --> 00:07:56.160 align:start position:0%
get out of the way because there's
 

00:07:56.160 --> 00:07:57.860 align:start position:0%
get out of the way because there's
nothing<00:07:56.430><c> to</c><00:07:56.580><c> collect</c><00:07:57.000><c> if</c><00:07:57.150><c> you're</c><00:07:57.300><c> loading</c><00:07:57.630><c> the</c>

00:07:57.860 --> 00:07:57.870 align:start position:0%
nothing to collect if you're loading the
 

00:07:57.870 --> 00:07:59.930 align:start position:0%
nothing to collect if you're loading the
new<00:07:58.020><c> bitmap</c><00:07:58.380><c> into</c><00:07:58.650><c> the</c><00:07:58.860><c> place</c><00:07:59.070><c> of</c><00:07:59.280><c> the</c><00:07:59.400><c> old</c><00:07:59.550><c> one</c>

00:07:59.930 --> 00:07:59.940 align:start position:0%
new bitmap into the place of the old one
 

00:07:59.940 --> 00:08:02.270 align:start position:0%
new bitmap into the place of the old one
so<00:08:00.420><c> check</c><00:08:01.050><c> out</c><00:08:01.170><c> bitmap</c><00:08:01.620><c> options</c><00:08:02.100><c> in</c>

00:08:02.270 --> 00:08:02.280 align:start position:0%
so check out bitmap options in
 

00:08:02.280 --> 00:08:05.150 align:start position:0%
so check out bitmap options in
particular<00:08:02.550><c> in</c><00:08:02.880><c> bitmap</c><00:08:03.330><c> and</c><00:08:03.740><c> save</c><00:08:04.740><c> some</c><00:08:04.950><c> grief</c>

00:08:05.150 --> 00:08:05.160 align:start position:0%
particular in bitmap and save some grief
 

00:08:05.160 --> 00:08:09.200 align:start position:0%
particular in bitmap and save some grief
over<00:08:05.520><c> garbage</c><00:08:05.940><c> collection</c><00:08:06.300><c> times</c><00:08:06.510><c> thanks</c>

