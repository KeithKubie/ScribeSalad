WEBVTT
Kind: captions
Language: en

00:00:00.840 --> 00:00:02.740
Ladies and gentlemen,
we're here not

00:00:02.740 --> 00:00:05.030
just to mourn the passing
of some great friends,

00:00:05.030 --> 00:00:07.020
but to celebrate their
life on this earth

00:00:07.020 --> 00:00:10.140
and look back with fondness on
the time we spent with them.

00:00:10.140 --> 00:00:12.140
Somebody who, without
ever calling any attention

00:00:12.140 --> 00:00:15.350
to themselves or hogging the
spotlight, saved thousands

00:00:15.350 --> 00:00:17.110
of Android developers
from writing line

00:00:17.110 --> 00:00:19.150
upon line of boilerplate code.

00:00:19.150 --> 00:00:21.380
But now, they've moved on
to the great deprecation

00:00:21.380 --> 00:00:23.280
warning in the sky.

00:00:23.280 --> 00:00:25.770
I'm talking of, course, about
BaseGameActivity and Game

00:00:25.770 --> 00:00:28.030
Helper, who were
taken away from us,

00:00:28.030 --> 00:00:30.950
some might say, a bit too
soon, by a change list

00:00:30.950 --> 00:00:33.170
just a few weeks ago.

00:00:33.170 --> 00:00:35.070
Yes if you've been
following Google Play Game

00:00:35.070 --> 00:00:37.040
Services on Android
for a while, you

00:00:37.040 --> 00:00:40.140
may have noticed that our sample
code has recently changed.

00:00:40.140 --> 00:00:42.370
Whereas before, all of
our sample applications

00:00:42.370 --> 00:00:46.290
inherited from BaseGameActivity,
a class that used GameHelper

00:00:46.290 --> 00:00:48.690
to do a lot of heavy lifting,
both of these classes

00:00:48.690 --> 00:00:51.310
have disappeared from our
sample apps and have also

00:00:51.310 --> 00:00:53.920
vanished from our documentation,
almost as if they never

00:00:53.920 --> 00:00:55.760
existed in the first place.

00:00:55.760 --> 00:00:56.730
So what happened?

00:00:56.730 --> 00:00:59.200
Well you see, back when Google
Play Game Services first

00:00:59.200 --> 00:01:00.910
launched, Android
applications were

00:01:00.910 --> 00:01:03.570
great for using Google
services, as long as you only

00:01:03.570 --> 00:01:04.709
needed to use one of them.

00:01:04.709 --> 00:01:06.120
But Play Games,
as you'll recall,

00:01:06.120 --> 00:01:10.650
used three-- the Play Games API,
the Plus API, and the AppState

00:01:10.650 --> 00:01:11.510
API.

00:01:11.510 --> 00:01:13.520
And it turns out
that, in the old days,

00:01:13.520 --> 00:01:15.910
the process for using
more than one API client

00:01:15.910 --> 00:01:17.880
was something that we
in the engineering field

00:01:17.880 --> 00:01:19.530
like to refer to
as-- and this is

00:01:19.530 --> 00:01:21.970
a technical term--
a bit of a mess.

00:01:21.970 --> 00:01:24.550
You see, to connect the player
properly to Google Play Games,

00:01:24.550 --> 00:01:26.880
the first thing you had to do
was create your three clients.

00:01:26.880 --> 00:01:28.510
And you'd collect the
scopes you'd need and call

00:01:28.510 --> 00:01:29.860
connect on the game's client.

00:01:29.860 --> 00:01:31.930
So far so good, right?

00:01:31.930 --> 00:01:34.570
Well then, if that
connection failed

00:01:34.570 --> 00:01:36.590
because your player
might need to sign in,

00:01:36.590 --> 00:01:37.700
it's actually no big deal.

00:01:37.700 --> 00:01:40.340
Just remember where we are so
that once the player has signed

00:01:40.340 --> 00:01:42.529
in, we do know where
to continue from.

00:01:42.529 --> 00:01:44.320
Then, of course, you
need do the same thing

00:01:44.320 --> 00:01:45.200
with the Plus client.

00:01:45.200 --> 00:01:46.530
Can't do these things
in the other order,

00:01:46.530 --> 00:01:48.155
incidentally, unless
we want to present

00:01:48.155 --> 00:01:50.990
our user with multiple sign-in
dialogue boxes, which is never

00:01:50.990 --> 00:01:51.950
really a good idea.

00:01:52.920 --> 00:01:54.720
Of course, if that
Plus client fails,

00:01:54.720 --> 00:01:57.405
you'll definitely need
to handle that, as well.

00:01:57.405 --> 00:01:59.780
Oh, but if it fails a second
time, because the user said,

00:01:59.780 --> 00:02:01.480
I don't want to sign in,
you'll need resolve this

00:02:01.480 --> 00:02:03.020
by disconnecting the
Plus client first

00:02:03.020 --> 00:02:04.120
and then the Game's client.

00:02:04.120 --> 00:02:05.170
You don't want to do
that in the wrong order,

00:02:05.170 --> 00:02:06.710
because that will put
your game in a bad state

00:02:06.710 --> 00:02:07.924
and you certainly
don't want that.

00:02:07.924 --> 00:02:09.165
Of course, if all
that worked, you

00:02:09.165 --> 00:02:10.789
could do the whole thing
again with the App State

00:02:10.789 --> 00:02:12.810
client with all the
same rules as before.

00:02:12.810 --> 00:02:14.660
But only do this after you've
connected your other clients,

00:02:14.660 --> 00:02:16.790
and if it fails a second
time, disconnect everything

00:02:16.790 --> 00:02:17.370
in the reverse order.

00:02:17.370 --> 00:02:18.830
App State Plus and then Games.

00:02:18.830 --> 00:02:22.770
So easy, right?

00:02:22.770 --> 00:02:25.520
So this is basically why
GameHelper and BaseGameActivity

00:02:25.520 --> 00:02:26.480
existed.

00:02:26.480 --> 00:02:29.534
The multiple state machine was
the same for every project,

00:02:29.534 --> 00:02:31.450
and so rather than have
hundreds of developers

00:02:31.450 --> 00:02:33.280
write the same
boilerplate code, we

00:02:33.280 --> 00:02:35.280
decided it would make
more sense to create

00:02:35.280 --> 00:02:37.900
a reusable component
for anybody to use.

00:02:37.900 --> 00:02:40.820
So we abstracted all this
away into a GameHelper class,

00:02:40.820 --> 00:02:43.140
composited that into
BaseGameActivity,

00:02:43.140 --> 00:02:46.200
and then had BaseGameActivity
call all the relevant methods.

00:02:46.200 --> 00:02:49.130
All your game needed to do was
inherit from BaseGameActivity

00:02:49.130 --> 00:02:51.550
and we did most of the
setup work for you.

00:02:51.550 --> 00:02:56.110
But then in early 2014,
something magical happened.

00:02:56.110 --> 00:02:58.920
The Play Services team
released the GoogleApiClient,

00:02:58.920 --> 00:03:01.796
a drastic improvement in
the way the APIs work.

00:03:01.796 --> 00:03:03.670
This is actually a really
nice chunk of code.

00:03:03.670 --> 00:03:04.950
It's very pretty.

00:03:04.950 --> 00:03:06.500
It's beautiful and wondrous.

00:03:06.500 --> 00:03:09.180
But with the introduction
of the GoogleApiClient,

00:03:09.180 --> 00:03:11.680
if you wanted to use multiple
Google services at once,

00:03:11.680 --> 00:03:15.030
like Games, Plus, Saved Games
or even Drive or YouTube,

00:03:15.030 --> 00:03:18.110
the GoogleApiClient
handles it all for you.

00:03:18.110 --> 00:03:19.220
Here's how it works.

00:03:19.220 --> 00:03:21.240
Step one, you're going
to create a builder.

00:03:21.240 --> 00:03:23.670
Step two, add your
APIs and your scopes.

00:03:23.670 --> 00:03:25.960
Step three, add some
callback listeners.

00:03:25.960 --> 00:03:27.550
Don't forget to call build.

00:03:27.550 --> 00:03:29.720
And then, call connect
on this new client

00:03:29.720 --> 00:03:31.510
and you're pretty much done.

00:03:31.510 --> 00:03:34.560
You'll catch sign-in problems
in your onConnection failed call

00:03:34.560 --> 00:03:35.060
back.

00:03:35.060 --> 00:03:38.080
You can analyze the code here,
and depending on the error code

00:03:38.080 --> 00:03:40.960
you get back, you could show a
sign-in dialogue if necessary.

00:03:40.960 --> 00:03:44.030
In your onConnect listener, you
would start making API calls.

00:03:44.030 --> 00:03:46.220
And in your activities
onStop method,

00:03:46.220 --> 00:03:48.820
you would call disconnect,
and the GoogleApiClient

00:03:48.820 --> 00:03:51.230
will properly disconnect
all of your services.

00:03:51.230 --> 00:03:53.490
And you've got a nice
straightforward API client

00:03:53.490 --> 00:03:55.070
with some great
error handling, just

00:03:55.070 --> 00:03:58.625
the way nature, or at least
our engineering team, intended.

00:03:58.625 --> 00:04:00.500
But with that, there's
a whole lot less stuff

00:04:00.500 --> 00:04:03.200
that the GameHelper classes
suddenly needed to do for you,

00:04:03.200 --> 00:04:04.920
and its role
gradually transitioned

00:04:04.920 --> 00:04:07.020
from helpful class that
did lots of heavy lifting

00:04:07.020 --> 00:04:09.494
behind the scenes to yet
another layer of code

00:04:09.494 --> 00:04:10.910
you needed to worry
about and keep

00:04:10.910 --> 00:04:13.826
in sync with a few helpful
bits still remaining.

00:04:13.826 --> 00:04:15.200
So what we've done
is we've taken

00:04:15.200 --> 00:04:18.180
those remaining helpful bits
and, swoosh, converted them

00:04:18.180 --> 00:04:21.750
into static methods in a new
class called BaseGameUtils.

00:04:21.750 --> 00:04:25.380
And then we have deprecated both
GameHelper and BaseGameActivity

00:04:25.380 --> 00:04:28.930
and are no longer using them in
any of our sample applications.

00:04:28.930 --> 00:04:31.490
So what does this
all mean for you?

00:04:31.490 --> 00:04:34.672
Well, for any of your
existing code, nothing.

00:04:34.672 --> 00:04:36.630
Any code that you have
that's currently working

00:04:36.630 --> 00:04:38.020
will continue to work.

00:04:38.020 --> 00:04:39.740
If for some reason,
however, you decide

00:04:39.740 --> 00:04:42.110
you need to replace your
BaseGameActivity or GameHelper

00:04:42.110 --> 00:04:44.745
classes with the versions
we have archived on GitHub,

00:04:44.745 --> 00:04:46.620
you're going to see some
deprecation warnings

00:04:46.620 --> 00:04:47.760
in the log.

00:04:47.760 --> 00:04:49.430
But for the rest of
you, all this means

00:04:49.430 --> 00:04:51.530
is that, when you're digging
around in our sample apps

00:04:51.530 --> 00:04:53.002
or documentation,
you find yourself

00:04:53.002 --> 00:04:53.960
saying, "Wait a second.

00:04:53.960 --> 00:04:56.320
I could've sworn there used to
be a whole helper class around

00:04:56.320 --> 00:04:58.070
here somewhere that I
was supposed to use.

00:04:58.070 --> 00:04:59.330
Am I going crazy?"

00:04:59.330 --> 00:05:01.390
Well no, you're not going crazy.

00:05:01.390 --> 00:05:03.680
At least not for that reason.

00:05:03.680 --> 00:05:06.489
We've just dropped these classes
from our samples and our docs.

00:05:06.489 --> 00:05:08.280
Now if you want to see
this code in action,

00:05:08.280 --> 00:05:09.655
my advice would
be to take a look

00:05:09.655 --> 00:05:12.220
at Trivial Quest, our extremely
simple-- some might say

00:05:12.220 --> 00:05:14.700
trivial-- sample application
that demonstrates

00:05:14.700 --> 00:05:17.060
the proper way to sign in
and handle connections using

00:05:17.060 --> 00:05:18.620
the Google API service.

00:05:18.620 --> 00:05:20.700
And you can always
review our documentation,

00:05:20.700 --> 00:05:23.530
which has now been updated to
support our new GoogleApiClient

00:05:23.530 --> 00:05:24.830
world.

00:05:24.830 --> 00:05:26.750
And so with that,
we finally bid adieu

00:05:26.750 --> 00:05:28.930
to BaseGameActivity
and GameHelper,

00:05:28.930 --> 00:05:31.030
gone from this world
but still in our hut.

00:05:31.030 --> 00:05:32.556
Wait, what?

00:05:32.556 --> 00:05:34.860
What do you mean
they're not dead?

00:05:34.860 --> 00:05:36.495
They're on a beach in Miami?

00:05:36.495 --> 00:05:37.870
Yeah, you know,
this is something

00:05:37.870 --> 00:05:39.453
you could have brought
to my attention

00:05:39.453 --> 00:05:41.474
before I bought
all these flowers.

00:05:41.474 --> 00:05:42.140
Well, all right.

00:05:42.140 --> 00:05:42.990
To heck with this, then.

00:05:42.990 --> 00:05:44.239
I'm changing out of this suit.

00:05:44.239 --> 00:05:46.170
This thing's itchy.

00:05:46.170 --> 00:05:48.847
So, uh, who's in
the coffin, anyway?

00:05:48.847 --> 00:05:49.430
You know what?

00:05:49.430 --> 00:05:49.990
Nevermind.

00:05:49.990 --> 00:05:50.830
Don't tell me.

00:05:50.830 --> 00:05:51.810
I don't want to know.

00:05:51.810 --> 00:05:54.260
[SAD ORGAN MUSIC]

