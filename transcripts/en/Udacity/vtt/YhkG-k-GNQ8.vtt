WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:04.380
Now it's time to snap on the next
angular component, directives.

00:00:04.380 --> 00:00:06.530
Now we've looked at
a couple of them already.

00:00:06.530 --> 00:00:09.270
NG App to bootstrap
the entire application.

00:00:09.270 --> 00:00:12.550
NG Controller adds a controller and
scope to an element.

00:00:12.550 --> 00:00:17.300
NG Include, which fetches, compiles,
and includes an external HTML template.

00:00:17.300 --> 00:00:19.160
Directives are fun to work with.

00:00:19.160 --> 00:00:22.820
And as we've seen with these directives,
they can be very powerful.

00:00:22.820 --> 00:00:24.450
But what is a directive exactly.

00:00:25.490 --> 00:00:29.970
Angular JS is documentation says that
directives are markers on the DOM

00:00:29.970 --> 00:00:34.520
element that tell angulars, HTML
compiler to attach a specified behavior

00:00:34.520 --> 00:00:39.500
to that DOM element, or even transform
that DOM element and it's children.

00:00:39.500 --> 00:00:42.570
So a directive is something you place
on an element to tell angular to

00:00:42.570 --> 00:00:43.530
do something.

00:00:43.530 --> 00:00:46.120
We've already used ng app and
ng controller, but

00:00:46.120 --> 00:00:48.450
angular provides a ton
of other directives.

00:00:48.450 --> 00:00:53.390
There's ng- show, ng- class,
ng- model, ng- repeat,

00:00:53.390 --> 00:00:56.170
ng- source and
ng ng-click just to name a few.

00:00:56.170 --> 00:00:57.670
To see a complete list of directives,

00:00:57.670 --> 00:00:59.750
check out the link in
the instructor notes.

00:00:59.750 --> 00:01:03.160
The ng-if directive is simple but
very powerful.

00:01:03.160 --> 00:01:07.920
It either creates or removes an element
based on the validity of its expression.

00:01:07.920 --> 00:01:10.260
In our template we
display the rating here.

00:01:10.260 --> 00:01:12.670
If the rating for
a menu item is higher than four,

00:01:12.670 --> 00:01:15.680
then this expression is true and
we see this text.

00:01:15.680 --> 00:01:18.510
So if I change the rating
down here to 4.3

00:01:18.510 --> 00:01:21.310
then everybody will know that
strawberry putting is fantastic.

00:01:23.135 --> 00:01:25.320
ngClass is a very cool directive.

00:01:25.320 --> 00:01:26.980
It can accept several input types.

00:01:26.980 --> 00:01:30.330
But I'm passing an object with a key
of warning and a string value.

00:01:31.500 --> 00:01:34.360
If the menu's rating
is greater than 4.5,

00:01:34.360 --> 00:01:37.165
then the highlight class will
be applied to the element.

00:01:37.165 --> 00:01:41.315
If I set the rating to 4.6, then
the text will have the highlight class.

00:01:41.315 --> 00:01:44.185
You can also combine multiple
directives on one element.

00:01:44.185 --> 00:01:46.365
Both of these directives
are on the element but

00:01:46.365 --> 00:01:48.696
only one of them is being
applied since the rating is 4.3.

00:01:50.562 --> 00:01:54.072
Another directive that you've
actually used before is ng-model.

00:01:54.072 --> 00:01:58.852
This directive is applied to input
select and text area elements.

00:01:58.852 --> 00:02:02.250
To see this in action,
let's add a new section for reviews.

00:02:02.250 --> 00:02:04.690
Here's the text area where
a customer will write a review.

00:02:05.770 --> 00:02:08.187
Down here is where the info will appear.

00:02:08.187 --> 00:02:12.040
We're using ng-if to display some
text while the review box is empty.

00:02:13.230 --> 00:02:16.170
Typing something in the text box
will create a new property on

00:02:16.170 --> 00:02:17.595
the menu object in the scope.

00:02:17.595 --> 00:02:22.077
ng-model has a lot of moving
parts to it and can do a lot.

00:02:22.077 --> 00:02:23.993
So definitely check out
its documentation link in

00:02:23.993 --> 00:02:24.910
the instructor notes.

00:02:26.170 --> 00:02:27.475
This next directive.

00:02:27.475 --> 00:02:32.300
ng-repeat Is incredibly useful if you
need to loop over items in an array.

00:02:32.300 --> 00:02:34.870
I've updated the single
menu item in the controller

00:02:34.870 --> 00:02:37.360
to an array of menu item objects.

00:02:37.360 --> 00:02:41.135
Back in the template, we can now loop
over this list of items using ng-repeat.

00:02:42.420 --> 00:02:46.010
When angular compiles the HTML template,
it will loop over this section once for

00:02:46.010 --> 00:02:46.780
every menu item.

00:02:46.780 --> 00:02:50.349
It will also apply a new
scope object for each one.

00:02:51.500 --> 00:02:52.830
Every time we loop through the list,

00:02:52.830 --> 00:02:55.690
we'll reference the menu
item as just item.

00:02:55.690 --> 00:02:58.140
Since we're using item
instead of menu now.

00:02:58.140 --> 00:02:59.540
We need to update our expressions.

00:03:02.110 --> 00:03:02.760
And there we go.

00:03:03.965 --> 00:03:07.485
Just this little bit of template code
is used to make this dynamic view.

00:03:07.485 --> 00:03:09.535
How awesome is that?

00:03:09.535 --> 00:03:13.435
Let's now transition this image
from text to the actual image file.

00:03:14.655 --> 00:03:15.959
We'll do it with another directive.

00:03:17.520 --> 00:03:21.190
Because angular expressions are compiled
after the HTML is downloaded and

00:03:21.190 --> 00:03:24.680
parsed by the browser, just sticking
an expression in here would make

00:03:24.680 --> 00:03:26.600
the browser look for
an image at this path.

00:03:28.040 --> 00:03:31.770
The NG source directive waits to add an
image until after the compilation step.

00:03:33.360 --> 00:03:34.650
And here are our images.

00:03:36.255 --> 00:03:40.160
ng-if, class, source and repeat.

00:03:40.160 --> 00:03:41.400
All work with existing data.

00:03:41.400 --> 00:03:45.529
To actually interact with an app,
we use the NG click directive.

00:03:46.580 --> 00:03:48.935
Let's add a couple of new buttons for
changing the rating.

00:03:48.935 --> 00:03:54.330
ng-click for this button will increment,
passing at the current menu item.

00:03:54.330 --> 00:03:55.720
This button will decrease the rating.

00:03:55.720 --> 00:03:58.600
Here are the functions that get called.

00:03:58.600 --> 00:04:01.640
I'm using this crazy calculation
instead of this one.

00:04:01.640 --> 00:04:04.260
Because JavaScript doesn't handle
mathematical calculations with

00:04:04.260 --> 00:04:05.670
decimal numbers like we expect.

00:04:06.860 --> 00:04:09.810
Increasing a rating will add a tenth
of a point while decreasing it

00:04:09.810 --> 00:04:11.080
will remove it.

00:04:11.080 --> 00:04:14.910
What's really cool is that all of
the directives work together perfectly.

00:04:14.910 --> 00:04:18.188
If we increment this item over four,
then the message appears.

00:04:18.188 --> 00:04:23.150
Over 4.5, and the class gets added.

00:04:23.150 --> 00:04:27.520
I just love directives and they make
building powerful apps effortless.

00:04:27.520 --> 00:04:29.390
We've only looked at
a handful of directives.

00:04:29.390 --> 00:04:32.790
So make sure you know all the ones that
angular ships with and how they're used.

