WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
The theorem essentially says is that if a cipher is perfect, it must have this property.

00:00:05.000 --> 00:00:10.000
It must be impractical in the sense that the number of possible keys

00:00:10.000 --> 00:00:14.000
must be at least as big as the number of possible messages.

00:00:14.000 --> 00:00:16.000
We saw for the one-time pad that they were equal.

00:00:16.000 --> 00:00:20.000
We can always remove possible messages from the message set

00:00:20.000 --> 00:00:23.000
so there's no problem with adding more keys.

00:00:23.000 --> 00:00:26.000
The problem is we need to have at least as many keys as messages.

00:00:26.000 --> 00:00:28.000
Let's prove this property.

00:00:28.000 --> 00:00:31.000
We're going to prove it by contradiction.

00:00:31.000 --> 00:00:34.000
We're going to start by assuming that we do have a perfect cipher

00:00:34.000 --> 00:00:37.000
that does not satisfy this property.

00:00:37.000 --> 00:00:40.000
Suppose we do have some perfect cipher--we'll call it "E"--

00:00:40.000 --> 00:00:45.000
where the number of possible messages is greater than the number of possible keys.

00:00:45.000 --> 00:00:51.000
There is some ciphertext--call it c0 element of the set of possible ciphertexts.

00:00:51.000 --> 00:00:54.000
Let's assume that that ciphertext is possible.

00:00:54.000 --> 00:00:57.000
We know that there must be such a cipher text.

00:00:57.000 --> 00:01:02.000
There is some key that encrypts some message to c0.

00:01:02.000 --> 00:01:09.000
The probability that a message and key get encrypted to this ciphertext is greater than 0.

00:01:09.000 --> 00:01:11.000
We know that such a ciphertext must exist.

00:01:11.000 --> 00:01:13.000
Now we have a our ciphertext c0.

00:01:13.000 --> 00:01:15.000
Let's try decrypting that.

00:01:15.000 --> 00:01:17.000
We'll decrypt it with all keys in the key space.

00:01:17.000 --> 00:01:20.000
We haven't mentioned what the decryption function is.

00:01:20.000 --> 00:01:23.000
For the one-time pad it's exactly the same as the encryption function.

00:01:23.000 --> 00:01:25.000
For this we don't want to assume this. I could be any function.

00:01:25.000 --> 00:01:29.000
We'll assume there is some function D that is our decryption function.

00:01:29.000 --> 00:01:36.000
Since our cipher is correct--in order to be perfect it has to both be correct and perfectly secure.

00:01:36.000 --> 00:01:40.000
That means the decryption function must have the property that if we decrypt

00:01:40.000 --> 00:01:45.000
a message encrypted with the same key, we always get the same message out.

00:01:45.000 --> 00:01:48.000
We don't need to know anything else about the decryption function than that.

00:01:48.000 --> 00:01:52.000
We shouldn't assume anything, because all we're trying to do is show that

00:01:52.000 --> 00:01:58.000
there is no possible choice for E that is both a correct encryption function and a perfect cipher.

00:01:58.000 --> 00:02:03.000
Now what happens when we decrypt c0 with all possible keys?

00:02:03.000 --> 00:02:07.000
Well, we're going to look at the set of messages that we can produce.

00:02:07.000 --> 00:02:13.000
We'll call M0 the set of messages that we get by unioning over all possible keys

00:02:13.000 --> 00:02:17.000
the result of decrypting the cipher text c0.

00:02:17.000 --> 00:02:20.000
This models what an attacker would do.

00:02:20.000 --> 00:02:24.000
They've intercepted some ciphertext. They're trying all possible keys.

00:02:24.000 --> 00:02:27.000
This is what a brute-force attacker would do.

00:02:27.000 --> 00:02:31.000
Looking at all the possible messages that can be produced.

00:02:31.000 --> 00:02:34.000
Now I want you to think about which of these statements are true.

00:02:34.000 --> 99:59:59.000
Check all the statements that must be true.

