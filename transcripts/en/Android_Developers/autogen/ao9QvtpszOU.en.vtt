WEBVTT
Kind: captions
Language: en

00:00:00.187 --> 00:00:01.794
 Android developer story 

00:00:01.794 --> 00:00:03.910
 RAHUL GANJDO: Zomato as a brand new app 

00:00:03.910 --> 00:00:05.877
 Allows you to browse the digital menu 

00:00:06.840 --> 00:00:09.410
 Now we have opened in 24 cities. 

00:00:09.410 --> 00:00:11.250
 Large food technology company 

00:00:11.250 --> 00:00:14.040
 More than 150 million users visit our platform every month 

00:00:14.040 --> 00:00:16.320
 We offer 10 languages 

00:00:16.360 --> 00:00:17.580
 On the delivery side 

00:00:17.580 --> 00:00:20.147
 We have 60,000 delivery drivers 

00:00:20.760 --> 00:00:22.576
 If you want to find a fun place 

00:00:22.860 --> 00:00:25.446
 Takeout, locator 

00:00:25.780 --> 00:00:28.237
 Browse the food, you can use Zomato 

00:00:28.680 --> 00:00:30.911
 Zomato needs to meet the needs of different users 

00:00:30.911 --> 00:00:32.340
 This gives the development team 

00:00:32.340 --> 00:00:34.182
 Brought a lot of challenges 

00:00:34.722 --> 00:00:37.850
 PRATEEK SHARMA: I heard a lot of rumors about Kotlin. 

00:00:37.850 --> 00:00:39.360
 I'm curious 

00:00:39.360 --> 00:00:43.030
 How does it do an object-oriented model, 

00:00:43.900 --> 00:00:46.170
 And solved at compile time 

00:00:46.170 --> 00:00:47.628
 Schema vulnerability in the code 

00:00:48.330 --> 00:00:50.630
 I almost understood it soon. 

00:00:50.630 --> 00:00:52.743
 Kotlin allows me to develop more 

00:00:52.743 --> 00:00:55.078
 Robust architecture application 

00:00:56.708 --> 00:00:58.820
 At compile time, Kotlin provided us with 

00:00:58.820 --> 00:01:00.320
 "null-safety" mode, 

00:01:00.320 --> 00:01:03.028
 This is the most commonly used feature of our team. 

00:01:03.686 --> 00:01:06.140
 If we can convert Java to Kotlin 

00:01:06.140 --> 00:01:10.517
 The number of codes will be reduced by 15% to 20% 

00:01:10.517 --> 00:01:12.140
 But if it is a data class, 

00:01:12.140 --> 00:01:15.620
 The number of codes will be reduced by 55% 

00:01:15.620 --> 00:01:17.819
 Thereby bringing huge improvements 

00:01:18.020 --> 00:01:20.600
 Switching to Kotlin is not only effective, but also very interesting. 

00:01:20.600 --> 00:01:23.881
 Now in Zomato, every function 

00:01:23.881 --> 00:01:25.287
 Are based on Kotlin 

00:01:25.760 --> 00:01:27.245
 Android developers like us 

00:01:27.385 --> 00:01:31.289
 Have not used the functional paradigm used by JavaScript developers 

00:01:32.050 --> 00:01:35.930
 So Kotlin can provide us with a function-oriented style of coding. 

00:01:35.930 --> 00:01:37.229
 This is really great. 

00:01:37.930 --> 00:01:39.460
 When we use the code of a third-party library, 

00:01:39.460 --> 00:01:41.449
 There is usually a use case. 

00:01:42.130 --> 00:01:44.830
 We want this class to have another function. 

00:01:44.830 --> 00:01:47.610
 By using Kotlin's extensions 

00:01:47.610 --> 00:01:49.180
 Simple to implement 

00:01:49.180 --> 00:01:53.033
 All new Google SDKs and APIs 

00:01:53.033 --> 00:01:54.380
 Have support from Kotlin 

00:01:55.022 --> 00:01:57.532
 In addition to these, third-party library developers 

00:01:57.810 --> 00:01:59.841
 Also added support for Kotlin, 

00:02:00.505 --> 00:02:02.120
 This adds to our experience with Kotlin. 

00:02:02.626 --> 00:02:05.401
 RAHUL GANJDO: Zomato's rating on Google Play Marketplace is 4.3. 

00:02:05.820 --> 00:02:06.960
 We are very lucky 

00:02:07.169 --> 00:02:09.019
 Can have an integrated system provided by Android 

00:02:09.365 --> 00:02:11.730
 PRATEEK SHARMA: I recommend Kotlin 

00:02:11.730 --> 00:02:14.058
 Because of its interoperability with Java 

00:02:14.700 --> 00:02:16.036
 Through recent updates 

00:02:16.290 --> 00:02:19.310
 Android Studio has greatly improved support for Kotlin 

00:02:19.310 --> 00:02:20.730
 Almost barrier-free 

