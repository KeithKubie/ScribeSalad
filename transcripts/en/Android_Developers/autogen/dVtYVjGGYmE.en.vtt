WEBVTT
Kind: captions
Language: en

00:00:02.880 --> 00:00:06.909
[Music]

00:00:06.909 --> 00:00:06.919
[Music]
 

00:00:06.919 --> 00:00:09.580
[Music]
well good afternoon everybody

00:00:09.580 --> 00:00:09.590
well good afternoon everybody
 

00:00:09.590 --> 00:00:13.009
well good afternoon everybody
I'll come on I got nothing good

00:00:13.009 --> 00:00:13.019
I'll come on I got nothing good
 

00:00:13.019 --> 00:00:15.890
I'll come on I got nothing good
afternoon everybody there we go there we

00:00:15.890 --> 00:00:15.900
afternoon everybody there we go there we
 

00:00:15.900 --> 00:00:18.980
afternoon everybody there we go there we
go well thank you so much for spending

00:00:18.980 --> 00:00:18.990
go well thank you so much for spending
 

00:00:18.990 --> 00:00:20.960
go well thank you so much for spending
your time with me today my name is Dave

00:00:20.960 --> 00:00:20.970
your time with me today my name is Dave
 

00:00:20.970 --> 00:00:22.700
your time with me today my name is Dave
Smith I'm a developer advocate here at

00:00:22.700 --> 00:00:22.710
Smith I'm a developer advocate here at
 

00:00:22.710 --> 00:00:24.170
Smith I'm a developer advocate here at
Google working on the Android things

00:00:24.170 --> 00:00:24.180
Google working on the Android things
 

00:00:24.180 --> 00:00:26.210
Google working on the Android things
platform and I'm here today to talk to

00:00:26.210 --> 00:00:26.220
platform and I'm here today to talk to
 

00:00:26.220 --> 00:00:28.220
platform and I'm here today to talk to
you a little bit about building apps for

00:00:28.220 --> 00:00:28.230
you a little bit about building apps for
 

00:00:28.230 --> 00:00:30.410
you a little bit about building apps for
the Android things platform and how you

00:00:30.410 --> 00:00:30.420
the Android things platform and how you
 

00:00:30.420 --> 00:00:32.269
the Android things platform and how you
can be more effective in the apps that

00:00:32.269 --> 00:00:32.279
can be more effective in the apps that
 

00:00:32.279 --> 00:00:34.010
can be more effective in the apps that
you build using the Android SDK so

00:00:34.010 --> 00:00:34.020
you build using the Android SDK so
 

00:00:34.020 --> 00:00:36.830
you build using the Android SDK so
whether you're new to Android or whether

00:00:36.830 --> 00:00:36.840
whether you're new to Android or whether
 

00:00:36.840 --> 00:00:38.360
whether you're new to Android or whether
you've been building Android apps since

00:00:38.360 --> 00:00:38.370
you've been building Android apps since
 

00:00:38.370 --> 00:00:40.310
you've been building Android apps since
the beginning targeting Android things

00:00:40.310 --> 00:00:40.320
the beginning targeting Android things
 

00:00:40.320 --> 00:00:42.680
the beginning targeting Android things
devices it has some subtle differences

00:00:42.680 --> 00:00:42.690
devices it has some subtle differences
 

00:00:42.690 --> 00:00:44.450
devices it has some subtle differences
from what you may or may not be used to

00:00:44.450 --> 00:00:44.460
from what you may or may not be used to
 

00:00:44.460 --> 00:00:45.910
from what you may or may not be used to
in working with the Android

00:00:45.910 --> 00:00:45.920
in working with the Android
 

00:00:45.920 --> 00:00:48.139
in working with the Android
understanding these differences is what

00:00:48.139 --> 00:00:48.149
understanding these differences is what
 

00:00:48.149 --> 00:00:49.549
understanding these differences is what
will ensure that you can build better

00:00:49.549 --> 00:00:49.559
will ensure that you can build better
 

00:00:49.559 --> 00:00:52.010
will ensure that you can build better
apps on the platform but Before we jump

00:00:52.010 --> 00:00:52.020
apps on the platform but Before we jump
 

00:00:52.020 --> 00:00:54.170
apps on the platform but Before we jump
into too much of that let me just do a

00:00:54.170 --> 00:00:54.180
into too much of that let me just do a
 

00:00:54.180 --> 00:00:55.910
into too much of that let me just do a
quick overview of what Android thing's

00:00:55.910 --> 00:00:55.920
quick overview of what Android thing's
 

00:00:55.920 --> 00:00:57.860
quick overview of what Android thing's
is maybe for the uninitiated

00:00:57.860 --> 00:00:57.870
is maybe for the uninitiated
 

00:00:57.870 --> 00:01:00.349
is maybe for the uninitiated
so Android things is a fully managed

00:01:00.349 --> 00:01:00.359
so Android things is a fully managed
 

00:01:00.359 --> 00:01:02.209
so Android things is a fully managed
platform for building connected devices

00:01:02.209 --> 00:01:02.219
platform for building connected devices
 

00:01:02.219 --> 00:01:04.939
platform for building connected devices
at scale it's a variant of the Android

00:01:04.939 --> 00:01:04.949
at scale it's a variant of the Android
 

00:01:04.949 --> 00:01:07.130
at scale it's a variant of the Android
platform that is optimized for use in

00:01:07.130 --> 00:01:07.140
platform that is optimized for use in
 

00:01:07.140 --> 00:01:09.440
platform that is optimized for use in
embedded devices it enables you to build

00:01:09.440 --> 00:01:09.450
embedded devices it enables you to build
 

00:01:09.450 --> 00:01:12.410
embedded devices it enables you to build
apps for embedded in IOT using the same

00:01:12.410 --> 00:01:12.420
apps for embedded in IOT using the same
 

00:01:12.420 --> 00:01:14.510
apps for embedded in IOT using the same
Android SDK and Google Play services

00:01:14.510 --> 00:01:14.520
Android SDK and Google Play services
 

00:01:14.520 --> 00:01:16.249
Android SDK and Google Play services
that you use to build for the Android

00:01:16.249 --> 00:01:16.259
that you use to build for the Android
 

00:01:16.259 --> 00:01:18.590
that you use to build for the Android
mobile you can develop apps using the

00:01:18.590 --> 00:01:18.600
mobile you can develop apps using the
 

00:01:18.600 --> 00:01:21.230
mobile you can develop apps using the
same tools such as Android studio to

00:01:21.230 --> 00:01:21.240
same tools such as Android studio to
 

00:01:21.240 --> 00:01:23.480
same tools such as Android studio to
deploy and debug your apps to devices as

00:01:23.480 --> 00:01:23.490
deploy and debug your apps to devices as
 

00:01:23.490 --> 00:01:26.120
deploy and debug your apps to devices as
well it includes the Android things

00:01:26.120 --> 00:01:26.130
well it includes the Android things
 

00:01:26.130 --> 00:01:28.640
well it includes the Android things
developer console this is a place where

00:01:28.640 --> 00:01:28.650
developer console this is a place where
 

00:01:28.650 --> 00:01:31.460
developer console this is a place where
you can securely manage your software

00:01:31.460 --> 00:01:31.470
you can securely manage your software
 

00:01:31.470 --> 00:01:33.679
you can securely manage your software
stability and security updates for your

00:01:33.679 --> 00:01:33.689
stability and security updates for your
 

00:01:33.689 --> 00:01:36.280
stability and security updates for your
devices you simply upload your apps

00:01:36.280 --> 00:01:36.290
devices you simply upload your apps
 

00:01:36.290 --> 00:01:39.020
devices you simply upload your apps
choose the OS version that you want to

00:01:39.020 --> 00:01:39.030
choose the OS version that you want to
 

00:01:39.030 --> 00:01:41.480
choose the OS version that you want to
run on your device and then deploy those

00:01:41.480 --> 00:01:41.490
run on your device and then deploy those
 

00:01:41.490 --> 00:01:43.899
run on your device and then deploy those
updates to those devices over-the-air

00:01:43.899 --> 00:01:43.909
updates to those devices over-the-air
 

00:01:43.909 --> 00:01:46.280
updates to those devices over-the-air
security updates are even deployed

00:01:46.280 --> 00:01:46.290
security updates are even deployed
 

00:01:46.290 --> 00:01:49.389
security updates are even deployed
automatically to those devices for you

00:01:49.389 --> 00:01:49.399
automatically to those devices for you
 

00:01:49.399 --> 00:01:52.399
automatically to those devices for you
Android things also supports powerful

00:01:52.399 --> 00:01:52.409
Android things also supports powerful
 

00:01:52.409 --> 00:01:54.289
Android things also supports powerful
hardware that's suitable for edge

00:01:54.289 --> 00:01:54.299
hardware that's suitable for edge
 

00:01:54.299 --> 00:01:56.660
hardware that's suitable for edge
computing and production capable of

00:01:56.660 --> 00:01:56.670
computing and production capable of
 

00:01:56.670 --> 00:01:58.580
computing and production capable of
driving artificial intelligence and

00:01:58.580 --> 00:01:58.590
driving artificial intelligence and
 

00:01:58.590 --> 00:02:01.580
driving artificial intelligence and
machine learning out to the edge this

00:02:01.580 --> 00:02:01.590
machine learning out to the edge this
 

00:02:01.590 --> 00:02:03.830
machine learning out to the edge this
hardware is packaged into system on

00:02:03.830 --> 00:02:03.840
hardware is packaged into system on
 

00:02:03.840 --> 00:02:06.200
hardware is packaged into system on
modules that make it easy for you to

00:02:06.200 --> 00:02:06.210
modules that make it easy for you to
 

00:02:06.210 --> 00:02:07.730
modules that make it easy for you to
integrate into your final production

00:02:07.730 --> 00:02:07.740
integrate into your final production
 

00:02:07.740 --> 00:02:11.750
integrate into your final production
designs so when you look at all these

00:02:11.750 --> 00:02:11.760
designs so when you look at all these
 

00:02:11.760 --> 00:02:13.190
designs so when you look at all these
things together the

00:02:13.190 --> 00:02:13.200
things together the
 

00:02:13.200 --> 00:02:15.260
things together the
this is a little bit different than when

00:02:15.260 --> 00:02:15.270
this is a little bit different than when
 

00:02:15.270 --> 00:02:16.280
this is a little bit different than when
you were building apps on a mobile

00:02:16.280 --> 00:02:16.290
you were building apps on a mobile
 

00:02:16.290 --> 00:02:18.530
you were building apps on a mobile
device building a typical app for

00:02:18.530 --> 00:02:18.540
device building a typical app for
 

00:02:18.540 --> 00:02:20.600
device building a typical app for
Android devices means distributing a

00:02:20.600 --> 00:02:20.610
Android devices means distributing a
 

00:02:20.610 --> 00:02:22.699
Android devices means distributing a
single app binary through the Google

00:02:22.699 --> 00:02:22.709
single app binary through the Google
 

00:02:22.709 --> 00:02:25.550
single app binary through the Google
Play store typically apps have to work

00:02:25.550 --> 00:02:25.560
Play store typically apps have to work
 

00:02:25.560 --> 00:02:28.520
Play store typically apps have to work
on multiple devices made by multiple

00:02:28.520 --> 00:02:28.530
on multiple devices made by multiple
 

00:02:28.530 --> 00:02:31.309
on multiple devices made by multiple
OEMs targeting multiple versions of the

00:02:31.309 --> 00:02:31.319
OEMs targeting multiple versions of the
 

00:02:31.319 --> 00:02:33.320
OEMs targeting multiple versions of the
Android operating system typically

00:02:33.320 --> 00:02:33.330
Android operating system typically
 

00:02:33.330 --> 00:02:34.790
Android operating system typically
requiring you to do various

00:02:34.790 --> 00:02:34.800
requiring you to do various
 

00:02:34.800 --> 00:02:36.589
requiring you to do various
compatibility checks and other things

00:02:36.589 --> 00:02:36.599
compatibility checks and other things
 

00:02:36.599 --> 00:02:37.940
compatibility checks and other things
like that to make sure that your app

00:02:37.940 --> 00:02:37.950
like that to make sure that your app
 

00:02:37.950 --> 00:02:40.370
like that to make sure that your app
runs well across that entire breadth of

00:02:40.370 --> 00:02:40.380
runs well across that entire breadth of
 

00:02:40.380 --> 00:02:43.820
runs well across that entire breadth of
the ecosystem with Android things your

00:02:43.820 --> 00:02:43.830
the ecosystem with Android things your
 

00:02:43.830 --> 00:02:46.970
the ecosystem with Android things your
to the device OEM you control when the

00:02:46.970 --> 00:02:46.980
to the device OEM you control when the
 

00:02:46.980 --> 00:02:49.280
to the device OEM you control when the
OS on your device gets upgraded and the

00:02:49.280 --> 00:02:49.290
OS on your device gets upgraded and the
 

00:02:49.290 --> 00:02:51.170
OS on your device gets upgraded and the
various apps that are bundled into that

00:02:51.170 --> 00:02:51.180
various apps that are bundled into that
 

00:02:51.180 --> 00:02:53.539
various apps that are bundled into that
system image along with it and you do

00:02:53.539 --> 00:02:53.549
system image along with it and you do
 

00:02:53.549 --> 00:02:55.430
system image along with it and you do
all of this through the Android things

00:02:55.430 --> 00:02:55.440
all of this through the Android things
 

00:02:55.440 --> 00:02:57.470
all of this through the Android things
console instead of through the Google

00:02:57.470 --> 00:02:57.480
console instead of through the Google
 

00:02:57.480 --> 00:02:59.960
console instead of through the Google
Play Store this can greatly simplify

00:02:59.960 --> 00:02:59.970
Play Store this can greatly simplify
 

00:02:59.970 --> 00:03:02.479
Play Store this can greatly simplify
your code because you don't need to

00:03:02.479 --> 00:03:02.489
your code because you don't need to
 

00:03:02.489 --> 00:03:04.009
your code because you don't need to
incorporate a lot of those same

00:03:04.009 --> 00:03:04.019
incorporate a lot of those same
 

00:03:04.019 --> 00:03:06.470
incorporate a lot of those same
compatibility checks but there are some

00:03:06.470 --> 00:03:06.480
compatibility checks but there are some
 

00:03:06.480 --> 00:03:08.569
compatibility checks but there are some
things to consider that are going to be

00:03:08.569 --> 00:03:08.579
things to consider that are going to be
 

00:03:08.579 --> 00:03:10.670
things to consider that are going to be
a little bit different let's start with

00:03:10.670 --> 00:03:10.680
a little bit different let's start with
 

00:03:10.680 --> 00:03:13.940
a little bit different let's start with
displays in Android things displays are

00:03:13.940 --> 00:03:13.950
displays in Android things displays are
 

00:03:13.950 --> 00:03:16.789
displays in Android things displays are
optional they're supported and you can

00:03:16.789 --> 00:03:16.799
optional they're supported and you can
 

00:03:16.799 --> 00:03:19.460
optional they're supported and you can
use the full Android UI toolkit to build

00:03:19.460 --> 00:03:19.470
use the full Android UI toolkit to build
 

00:03:19.470 --> 00:03:21.830
use the full Android UI toolkit to build
applications that have a graphical user

00:03:21.830 --> 00:03:21.840
applications that have a graphical user
 

00:03:21.840 --> 00:03:23.930
applications that have a graphical user
interface whether it's touch enabled or

00:03:23.930 --> 00:03:23.940
interface whether it's touch enabled or
 

00:03:23.940 --> 00:03:26.750
interface whether it's touch enabled or
not but we've removed a lot of the

00:03:26.750 --> 00:03:26.760
not but we've removed a lot of the
 

00:03:26.760 --> 00:03:29.509
not but we've removed a lot of the
default system UI and disabled or

00:03:29.509 --> 00:03:29.519
default system UI and disabled or
 

00:03:29.519 --> 00:03:32.180
default system UI and disabled or
reworked some of the api's that assume

00:03:32.180 --> 00:03:32.190
reworked some of the api's that assume
 

00:03:32.190 --> 00:03:34.160
reworked some of the api's that assume
that graphical displays are in place

00:03:34.160 --> 00:03:34.170
that graphical displays are in place
 

00:03:34.170 --> 00:03:36.830
that graphical displays are in place
because many IOT devices will not have

00:03:36.830 --> 00:03:36.840
because many IOT devices will not have
 

00:03:36.840 --> 00:03:38.780
because many IOT devices will not have
these pieces and we don't want to place

00:03:38.780 --> 00:03:38.790
these pieces and we don't want to place
 

00:03:38.790 --> 00:03:40.910
these pieces and we don't want to place
those requirements in there the best

00:03:40.910 --> 00:03:40.920
those requirements in there the best
 

00:03:40.920 --> 00:03:43.250
those requirements in there the best
example of this in practice is app

00:03:43.250 --> 00:03:43.260
example of this in practice is app
 

00:03:43.260 --> 00:03:45.890
example of this in practice is app
permissions so in Android things

00:03:45.890 --> 00:03:45.900
permissions so in Android things
 

00:03:45.900 --> 00:03:48.620
permissions so in Android things
permissions are not granted at runtime

00:03:48.620 --> 00:03:48.630
permissions are not granted at runtime
 

00:03:48.630 --> 00:03:51.680
permissions are not granted at runtime
by the end-user because we can't assume

00:03:51.680 --> 00:03:51.690
by the end-user because we can't assume
 

00:03:51.690 --> 00:03:53.539
by the end-user because we can't assume
that there's a graphical display to show

00:03:53.539 --> 00:03:53.549
that there's a graphical display to show
 

00:03:53.549 --> 00:03:55.759
that there's a graphical display to show
things like this dialog and we can't

00:03:55.759 --> 00:03:55.769
things like this dialog and we can't
 

00:03:55.769 --> 00:03:58.220
things like this dialog and we can't
even really assume that user granting

00:03:58.220 --> 00:03:58.230
even really assume that user granting
 

00:03:58.230 --> 00:03:59.809
even really assume that user granting
specific types of permissions is

00:03:59.809 --> 00:03:59.819
specific types of permissions is
 

00:03:59.819 --> 00:04:03.830
specific types of permissions is
appropriate for an IOT device so instead

00:04:03.830 --> 00:04:03.840
appropriate for an IOT device so instead
 

00:04:03.840 --> 00:04:06.589
appropriate for an IOT device so instead
these permissions are actually granted

00:04:06.589 --> 00:04:06.599
these permissions are actually granted
 

00:04:06.599 --> 00:04:09.020
these permissions are actually granted
by you the developer using the Android

00:04:09.020 --> 00:04:09.030
by you the developer using the Android
 

00:04:09.030 --> 00:04:11.870
by you the developer using the Android
things console okay so as the owner of

00:04:11.870 --> 00:04:11.880
things console okay so as the owner of
 

00:04:11.880 --> 00:04:14.059
things console okay so as the owner of
your device you're responsible for

00:04:14.059 --> 00:04:14.069
your device you're responsible for
 

00:04:14.069 --> 00:04:16.670
your device you're responsible for
taking control of the apps that run on

00:04:16.670 --> 00:04:16.680
taking control of the apps that run on
 

00:04:16.680 --> 00:04:17.990
taking control of the apps that run on
this device and the permissions that

00:04:17.990 --> 00:04:18.000
this device and the permissions that
 

00:04:18.000 --> 00:04:21.339
this device and the permissions that
those particular applications have okay

00:04:21.339 --> 00:04:21.349
those particular applications have okay
 

00:04:21.349 --> 00:04:25.100
those particular applications have okay
now because of this permissions may not

00:04:25.100 --> 00:04:25.110
now because of this permissions may not
 

00:04:25.110 --> 00:04:27.050
now because of this permissions may not
be granted by

00:04:27.050 --> 00:04:27.060
be granted by
 

00:04:27.060 --> 00:04:28.879
be granted by
users so that means you don't

00:04:28.879 --> 00:04:28.889
users so that means you don't
 

00:04:28.889 --> 00:04:31.310
users so that means you don't
necessarily have to check whether or not

00:04:31.310 --> 00:04:31.320
necessarily have to check whether or not
 

00:04:31.320 --> 00:04:32.900
necessarily have to check whether or not
those permissions were grant or you

00:04:32.900 --> 00:04:32.910
those permissions were grant or you
 

00:04:32.910 --> 00:04:34.340
those permissions were grant or you
don't have to request for those

00:04:34.340 --> 00:04:34.350
don't have to request for those
 

00:04:34.350 --> 00:04:36.680
don't have to request for those
permissions to be granted at runtime but

00:04:36.680 --> 00:04:36.690
permissions to be granted at runtime but
 

00:04:36.690 --> 00:04:39.050
permissions to be granted at runtime but
since they are still granted dynamically

00:04:39.050 --> 00:04:39.060
since they are still granted dynamically
 

00:04:39.060 --> 00:04:41.360
since they are still granted dynamically
the best practice is still for your code

00:04:41.360 --> 00:04:41.370
the best practice is still for your code
 

00:04:41.370 --> 00:04:44.240
the best practice is still for your code
to verify that you have that permission

00:04:44.240 --> 00:04:44.250
to verify that you have that permission
 

00:04:44.250 --> 00:04:47.180
to verify that you have that permission
okay because that permission could have

00:04:47.180 --> 00:04:47.190
okay because that permission could have
 

00:04:47.190 --> 00:04:49.310
okay because that permission could have
been revoked by one of the console users

00:04:49.310 --> 00:04:49.320
been revoked by one of the console users
 

00:04:49.320 --> 00:04:51.560
been revoked by one of the console users
and you don't want your application code

00:04:51.560 --> 00:04:51.570
and you don't want your application code
 

00:04:51.570 --> 00:04:54.230
and you don't want your application code
to behave improperly in those cases so

00:04:54.230 --> 00:04:54.240
to behave improperly in those cases so
 

00:04:54.240 --> 00:04:56.210
to behave improperly in those cases so
you'll still want to have checks like

00:04:56.210 --> 00:04:56.220
you'll still want to have checks like
 

00:04:56.220 --> 00:04:58.159
you'll still want to have checks like
this one in your code when you are

00:04:58.159 --> 00:04:58.169
this one in your code when you are
 

00:04:58.169 --> 00:05:00.379
this one in your code when you are
accessing dangerous permissions that

00:05:00.379 --> 00:05:00.389
accessing dangerous permissions that
 

00:05:00.389 --> 00:05:01.969
accessing dangerous permissions that
could be granted or revoked by the

00:05:01.969 --> 00:05:01.979
could be granted or revoked by the
 

00:05:01.979 --> 00:05:04.490
could be granted or revoked by the
console but you won't have to include

00:05:04.490 --> 00:05:04.500
console but you won't have to include
 

00:05:04.500 --> 00:05:06.740
console but you won't have to include
the code that requests those permissions

00:05:06.740 --> 00:05:06.750
the code that requests those permissions
 

00:05:06.750 --> 00:05:09.950
the code that requests those permissions
up front from the end-user not doing

00:05:09.950 --> 00:05:09.960
up front from the end-user not doing
 

00:05:09.960 --> 00:05:11.480
up front from the end-user not doing
this will result in the same security

00:05:11.480 --> 00:05:11.490
this will result in the same security
 

00:05:11.490 --> 00:05:13.310
this will result in the same security
exception that you would otherwise see

00:05:13.310 --> 00:05:13.320
exception that you would otherwise see
 

00:05:13.320 --> 00:05:15.260
exception that you would otherwise see
by trying to access those protected

00:05:15.260 --> 00:05:15.270
by trying to access those protected
 

00:05:15.270 --> 00:05:17.510
by trying to access those protected
permissions if in fact that permission

00:05:17.510 --> 00:05:17.520
permissions if in fact that permission
 

00:05:17.520 --> 00:05:21.920
permissions if in fact that permission
is disabled additionally in Android

00:05:21.920 --> 00:05:21.930
is disabled additionally in Android
 

00:05:21.930 --> 00:05:24.620
is disabled additionally in Android
things 1.0 permissions are no longer

00:05:24.620 --> 00:05:24.630
things 1.0 permissions are no longer
 

00:05:24.630 --> 00:05:27.680
things 1.0 permissions are no longer
granted automatically on reboot this is

00:05:27.680 --> 00:05:27.690
granted automatically on reboot this is
 

00:05:27.690 --> 00:05:28.909
granted automatically on reboot this is
something that we did in some of the

00:05:28.909 --> 00:05:28.919
something that we did in some of the
 

00:05:28.919 --> 00:05:30.770
something that we did in some of the
earlier previews and is no longer the

00:05:30.770 --> 00:05:30.780
earlier previews and is no longer the
 

00:05:30.780 --> 00:05:33.170
earlier previews and is no longer the
case so that means that as a developer

00:05:33.170 --> 00:05:33.180
case so that means that as a developer
 

00:05:33.180 --> 00:05:35.210
case so that means that as a developer
you can't simply just reboot your device

00:05:35.210 --> 00:05:35.220
you can't simply just reboot your device
 

00:05:35.220 --> 00:05:37.430
you can't simply just reboot your device
to try and get all those permissions

00:05:37.430 --> 00:05:37.440
to try and get all those permissions
 

00:05:37.440 --> 00:05:39.469
to try and get all those permissions
brought into your app automatically you

00:05:39.469 --> 00:05:39.479
brought into your app automatically you
 

00:05:39.479 --> 00:05:41.390
brought into your app automatically you
have to actually use the tooling to make

00:05:41.390 --> 00:05:41.400
have to actually use the tooling to make
 

00:05:41.400 --> 00:05:42.050
have to actually use the tooling to make
that happen

00:05:42.050 --> 00:05:42.060
that happen
 

00:05:42.060 --> 00:05:44.000
that happen
so during development what you're going

00:05:44.000 --> 00:05:44.010
so during development what you're going
 

00:05:44.010 --> 00:05:46.520
so during development what you're going
to want to do is provide the dash G flag

00:05:46.520 --> 00:05:46.530
to want to do is provide the dash G flag
 

00:05:46.530 --> 00:05:49.040
to want to do is provide the dash G flag
when installing the applications on your

00:05:49.040 --> 00:05:49.050
when installing the applications on your
 

00:05:49.050 --> 00:05:51.440
when installing the applications on your
device and this will grant all the

00:05:51.440 --> 00:05:51.450
device and this will grant all the
 

00:05:51.450 --> 00:05:53.570
device and this will grant all the
permissions requested by your app by

00:05:53.570 --> 00:05:53.580
permissions requested by your app by
 

00:05:53.580 --> 00:05:57.170
permissions requested by your app by
default Android studio actually does

00:05:57.170 --> 00:05:57.180
default Android studio actually does
 

00:05:57.180 --> 00:05:59.210
default Android studio actually does
this for you automatically so whenever

00:05:59.210 --> 00:05:59.220
this for you automatically so whenever
 

00:05:59.220 --> 00:06:01.040
this for you automatically so whenever
you click build and run out of the IDE

00:06:01.040 --> 00:06:01.050
you click build and run out of the IDE
 

00:06:01.050 --> 00:06:03.440
you click build and run out of the IDE
this process is taken care of for you

00:06:03.440 --> 00:06:03.450
this process is taken care of for you
 

00:06:03.450 --> 00:06:04.969
this process is taken care of for you
but if you want to do this from the

00:06:04.969 --> 00:06:04.979
but if you want to do this from the
 

00:06:04.979 --> 00:06:06.560
but if you want to do this from the
command line you're going to have to add

00:06:06.560 --> 00:06:06.570
command line you're going to have to add
 

00:06:06.570 --> 00:06:09.350
command line you're going to have to add
that flag yourself another option is to

00:06:09.350 --> 00:06:09.360
that flag yourself another option is to
 

00:06:09.360 --> 00:06:12.740
that flag yourself another option is to
use the PM grant command to individually

00:06:12.740 --> 00:06:12.750
use the PM grant command to individually
 

00:06:12.750 --> 00:06:15.290
use the PM grant command to individually
grant or revoke promotion permissions

00:06:15.290 --> 00:06:15.300
grant or revoke promotion permissions
 

00:06:15.300 --> 00:06:17.690
grant or revoke promotion permissions
inside of your application you can do

00:06:17.690 --> 00:06:17.700
inside of your application you can do
 

00:06:17.700 --> 00:06:19.969
inside of your application you can do
this during development or maybe just to

00:06:19.969 --> 00:06:19.979
this during development or maybe just to
 

00:06:19.979 --> 00:06:22.640
this during development or maybe just to
test what the individual behavior is of

00:06:22.640 --> 00:06:22.650
test what the individual behavior is of
 

00:06:22.650 --> 00:06:24.590
test what the individual behavior is of
a certain permission if you deny that

00:06:24.590 --> 00:06:24.600
a certain permission if you deny that
 

00:06:24.600 --> 00:06:28.580
a certain permission if you deny that
inside of your application if you prefer

00:06:28.580 --> 00:06:28.590
inside of your application if you prefer
 

00:06:28.590 --> 00:06:30.350
inside of your application if you prefer
to use the Gradle command line or

00:06:30.350 --> 00:06:30.360
to use the Gradle command line or
 

00:06:30.360 --> 00:06:32.330
to use the Gradle command line or
perhaps you're running automated tests

00:06:32.330 --> 00:06:32.340
perhaps you're running automated tests
 

00:06:32.340 --> 00:06:33.800
perhaps you're running automated tests
or other things where the IDE is not

00:06:33.800 --> 00:06:33.810
or other things where the IDE is not
 

00:06:33.810 --> 00:06:36.380
or other things where the IDE is not
involved you can actually add this to

00:06:36.380 --> 00:06:36.390
involved you can actually add this to
 

00:06:36.390 --> 00:06:38.600
involved you can actually add this to
your build.gradle file using an ADB

00:06:38.600 --> 00:06:38.610
your build.gradle file using an ADB
 

00:06:38.610 --> 00:06:41.300
your build.gradle file using an ADB
options block to apply that same

00:06:41.300 --> 00:06:41.310
options block to apply that same
 

00:06:41.310 --> 00:06:43.610
options block to apply that same
- G flag anytime your application is

00:06:43.610 --> 00:06:43.620
- G flag anytime your application is
 

00:06:43.620 --> 00:06:48.260
- G flag anytime your application is
installed speaking of UI we should

00:06:48.260 --> 00:06:48.270
installed speaking of UI we should
 

00:06:48.270 --> 00:06:49.250
installed speaking of UI we should
probably talk a little bit about

00:06:49.250 --> 00:06:49.260
probably talk a little bit about
 

00:06:49.260 --> 00:06:52.160
probably talk a little bit about
activities most developers think that

00:06:52.160 --> 00:06:52.170
activities most developers think that
 

00:06:52.170 --> 00:06:54.710
activities most developers think that
activities are essentially screens so if

00:06:54.710 --> 00:06:54.720
activities are essentially screens so if
 

00:06:54.720 --> 00:06:57.020
activities are essentially screens so if
we remove displays why do we need to

00:06:57.020 --> 00:06:57.030
we remove displays why do we need to
 

00:06:57.030 --> 00:06:59.480
we remove displays why do we need to
keep them around it turns out that

00:06:59.480 --> 00:06:59.490
keep them around it turns out that
 

00:06:59.490 --> 00:07:01.100
keep them around it turns out that
activities are a little bit more than

00:07:01.100 --> 00:07:01.110
activities are a little bit more than
 

00:07:01.110 --> 00:07:03.410
activities are a little bit more than
that an activity represents a component

00:07:03.410 --> 00:07:03.420
that an activity represents a component
 

00:07:03.420 --> 00:07:06.350
that an activity represents a component
of user focus in Android for devices

00:07:06.350 --> 00:07:06.360
of user focus in Android for devices
 

00:07:06.360 --> 00:07:08.960
of user focus in Android for devices
with graphical displays that does mean

00:07:08.960 --> 00:07:08.970
with graphical displays that does mean
 

00:07:08.970 --> 00:07:10.790
with graphical displays that does mean
that it will render the contents of the

00:07:10.790 --> 00:07:10.800
that it will render the contents of the
 

00:07:10.800 --> 00:07:13.790
that it will render the contents of the
view onto the window but even for

00:07:13.790 --> 00:07:13.800
view onto the window but even for
 

00:07:13.800 --> 00:07:16.760
view onto the window but even for
devices without displays activities also

00:07:16.760 --> 00:07:16.770
devices without displays activities also
 

00:07:16.770 --> 00:07:18.710
devices without displays activities also
handle all of the user input events

00:07:18.710 --> 00:07:18.720
handle all of the user input events
 

00:07:18.720 --> 00:07:20.720
handle all of the user input events
whether that's coming from a touchscreen

00:07:20.720 --> 00:07:20.730
whether that's coming from a touchscreen
 

00:07:20.730 --> 00:07:23.000
whether that's coming from a touchscreen
input or maybe it's a game controller or

00:07:23.000 --> 00:07:23.010
input or maybe it's a game controller or
 

00:07:23.010 --> 00:07:25.490
input or maybe it's a game controller or
a keyboard or any other external input

00:07:25.490 --> 00:07:25.500
a keyboard or any other external input
 

00:07:25.500 --> 00:07:27.140
a keyboard or any other external input
device that you may have connected all

00:07:27.140 --> 00:07:27.150
device that you may have connected all
 

00:07:27.150 --> 00:07:29.060
device that you may have connected all
of those events are going to be

00:07:29.060 --> 00:07:29.070
of those events are going to be
 

00:07:29.070 --> 00:07:31.820
of those events are going to be
delivered to the foreground activity so

00:07:31.820 --> 00:07:31.830
delivered to the foreground activity so
 

00:07:31.830 --> 00:07:34.030
delivered to the foreground activity so
even without a graphical display

00:07:34.030 --> 00:07:34.040
even without a graphical display
 

00:07:34.040 --> 00:07:36.560
even without a graphical display
activities are still a very important

00:07:36.560 --> 00:07:36.570
activities are still a very important
 

00:07:36.570 --> 00:07:39.890
activities are still a very important
portion of Android user interface even

00:07:39.890 --> 00:07:39.900
portion of Android user interface even
 

00:07:39.900 --> 00:07:41.480
portion of Android user interface even
though the user interface might not

00:07:41.480 --> 00:07:41.490
though the user interface might not
 

00:07:41.490 --> 00:07:44.230
though the user interface might not
actually include the graphical UI

00:07:44.230 --> 00:07:44.240
actually include the graphical UI
 

00:07:44.240 --> 00:07:46.700
actually include the graphical UI
it's important to note also when we're

00:07:46.700 --> 00:07:46.710
it's important to note also when we're
 

00:07:46.710 --> 00:07:48.890
it's important to note also when we're
talking about activities that activities

00:07:48.890 --> 00:07:48.900
talking about activities that activities
 

00:07:48.900 --> 00:07:51.200
talking about activities that activities
are still vulnerable to configuration

00:07:51.200 --> 00:07:51.210
are still vulnerable to configuration
 

00:07:51.210 --> 00:07:53.000
are still vulnerable to configuration
changes the same way that they are on

00:07:53.000 --> 00:07:53.010
changes the same way that they are on
 

00:07:53.010 --> 00:07:55.160
changes the same way that they are on
Android so as an Android developer

00:07:55.160 --> 00:07:55.170
Android so as an Android developer
 

00:07:55.170 --> 00:07:57.590
Android so as an Android developer
you're probably used to at least at some

00:07:57.590 --> 00:07:57.600
you're probably used to at least at some
 

00:07:57.600 --> 00:07:59.720
you're probably used to at least at some
point having to deal with an orientation

00:07:59.720 --> 00:07:59.730
point having to deal with an orientation
 

00:07:59.730 --> 00:08:01.820
point having to deal with an orientation
change of a device and having that

00:08:01.820 --> 00:08:01.830
change of a device and having that
 

00:08:01.830 --> 00:08:03.830
change of a device and having that
destroy your activity and recreate a new

00:08:03.830 --> 00:08:03.840
destroy your activity and recreate a new
 

00:08:03.840 --> 00:08:06.140
destroy your activity and recreate a new
instance of it that's effectively a very

00:08:06.140 --> 00:08:06.150
instance of it that's effectively a very
 

00:08:06.150 --> 00:08:08.330
instance of it that's effectively a very
common configuration change on Android

00:08:08.330 --> 00:08:08.340
common configuration change on Android
 

00:08:08.340 --> 00:08:10.640
common configuration change on Android
mobile devices while on android things

00:08:10.640 --> 00:08:10.650
mobile devices while on android things
 

00:08:10.650 --> 00:08:13.310
mobile devices while on android things
that specific instance probably is not

00:08:13.310 --> 00:08:13.320
that specific instance probably is not
 

00:08:13.320 --> 00:08:15.290
that specific instance probably is not
very common if it if it would happen at

00:08:15.290 --> 00:08:15.300
very common if it if it would happen at
 

00:08:15.300 --> 00:08:17.360
very common if it if it would happen at
all there are still a number of other

00:08:17.360 --> 00:08:17.370
all there are still a number of other
 

00:08:17.370 --> 00:08:19.460
all there are still a number of other
configuration changes that might still

00:08:19.460 --> 00:08:19.470
configuration changes that might still
 

00:08:19.470 --> 00:08:21.650
configuration changes that might still
happen on Android things devices things

00:08:21.650 --> 00:08:21.660
happen on Android things devices things
 

00:08:21.660 --> 00:08:24.190
happen on Android things devices things
like changing the default locale or

00:08:24.190 --> 00:08:24.200
like changing the default locale or
 

00:08:24.200 --> 00:08:26.780
like changing the default locale or
connecting or disconnecting a keyboard a

00:08:26.780 --> 00:08:26.790
connecting or disconnecting a keyboard a
 

00:08:26.790 --> 00:08:29.180
connecting or disconnecting a keyboard a
physical keyboard from the device all of

00:08:29.180 --> 00:08:29.190
physical keyboard from the device all of
 

00:08:29.190 --> 00:08:32.900
physical keyboard from the device all of
these events have the same net effect in

00:08:32.900 --> 00:08:32.910
these events have the same net effect in
 

00:08:32.910 --> 00:08:35.150
these events have the same net effect in
that that activity will be destroyed and

00:08:35.150 --> 00:08:35.160
that that activity will be destroyed and
 

00:08:35.160 --> 00:08:37.220
that that activity will be destroyed and
recreated if it happens to be in the

00:08:37.220 --> 00:08:37.230
recreated if it happens to be in the
 

00:08:37.230 --> 00:08:39.500
recreated if it happens to be in the
foreground so generally speaking with

00:08:39.500 --> 00:08:39.510
foreground so generally speaking with
 

00:08:39.510 --> 00:08:41.090
foreground so generally speaking with
you're working with activities on

00:08:41.090 --> 00:08:41.100
you're working with activities on
 

00:08:41.100 --> 00:08:43.970
you're working with activities on
Android things the same rules apply to

00:08:43.970 --> 00:08:43.980
Android things the same rules apply to
 

00:08:43.980 --> 00:08:46.550
Android things the same rules apply to
activities in terms of the logic that

00:08:46.550 --> 00:08:46.560
activities in terms of the logic that
 

00:08:46.560 --> 00:08:48.680
activities in terms of the logic that
you put into those components they're

00:08:48.680 --> 00:08:48.690
you put into those components they're
 

00:08:48.690 --> 00:08:51.110
you put into those components they're
effectively just as fragile in terms of

00:08:51.110 --> 00:08:51.120
effectively just as fragile in terms of
 

00:08:51.120 --> 00:08:53.120
effectively just as fragile in terms of
their life cycle so you're only going to

00:08:53.120 --> 00:08:53.130
their life cycle so you're only going to
 

00:08:53.130 --> 00:08:55.250
their life cycle so you're only going to
want to have view based logic

00:08:55.250 --> 00:08:55.260
want to have view based logic
 

00:08:55.260 --> 00:08:57.560
want to have view based logic
or user interface-based logic inside of

00:08:57.560 --> 00:08:57.570
or user interface-based logic inside of
 

00:08:57.570 --> 00:09:00.080
or user interface-based logic inside of
these activities try not to put too much

00:09:00.080 --> 00:09:00.090
these activities try not to put too much
 

00:09:00.090 --> 00:09:02.720
these activities try not to put too much
additional state into these components

00:09:02.720 --> 00:09:02.730
additional state into these components
 

00:09:02.730 --> 00:09:03.740
additional state into these components
you're going to want to push that out

00:09:03.740 --> 00:09:03.750
you're going to want to push that out
 

00:09:03.750 --> 00:09:06.760
you're going to want to push that out
into other parts of your application

00:09:06.760 --> 00:09:06.770
into other parts of your application
 

00:09:06.770 --> 00:09:09.650
into other parts of your application
Android things even uses activities to

00:09:09.650 --> 00:09:09.660
Android things even uses activities to
 

00:09:09.660 --> 00:09:12.680
Android things even uses activities to
launch your primary application as part

00:09:12.680 --> 00:09:12.690
launch your primary application as part
 

00:09:12.690 --> 00:09:14.990
launch your primary application as part
of the boot process we do this using the

00:09:14.990 --> 00:09:15.000
of the boot process we do this using the
 

00:09:15.000 --> 00:09:17.150
of the boot process we do this using the
home intent which is the same intent

00:09:17.150 --> 00:09:17.160
home intent which is the same intent
 

00:09:17.160 --> 00:09:18.950
home intent which is the same intent
that's used to trigger the app launcher

00:09:18.950 --> 00:09:18.960
that's used to trigger the app launcher
 

00:09:18.960 --> 00:09:21.680
that's used to trigger the app launcher
on an Android mobile device this intent

00:09:21.680 --> 00:09:21.690
on an Android mobile device this intent
 

00:09:21.690 --> 00:09:24.080
on an Android mobile device this intent
starts your app automatically on boot

00:09:24.080 --> 00:09:24.090
starts your app automatically on boot
 

00:09:24.090 --> 00:09:26.780
starts your app automatically on boot
and specifically the activity inside of

00:09:26.780 --> 00:09:26.790
and specifically the activity inside of
 

00:09:26.790 --> 00:09:28.970
and specifically the activity inside of
that application started automatically

00:09:28.970 --> 00:09:28.980
that application started automatically
 

00:09:28.980 --> 00:09:31.310
that application started automatically
on boot and in addition to that if that

00:09:31.310 --> 00:09:31.320
on boot and in addition to that if that
 

00:09:31.320 --> 00:09:34.010
on boot and in addition to that if that
application crashes or terminates for

00:09:34.010 --> 00:09:34.020
application crashes or terminates for
 

00:09:34.020 --> 00:09:36.500
application crashes or terminates for
any reason Android is going to restart

00:09:36.500 --> 00:09:36.510
any reason Android is going to restart
 

00:09:36.510 --> 00:09:39.170
any reason Android is going to restart
that application automatically so this

00:09:39.170 --> 00:09:39.180
that application automatically so this
 

00:09:39.180 --> 00:09:41.510
that application automatically so this
becomes the the main entry point into

00:09:41.510 --> 00:09:41.520
becomes the the main entry point into
 

00:09:41.520 --> 00:09:43.580
becomes the the main entry point into
your application that is automatically

00:09:43.580 --> 00:09:43.590
your application that is automatically
 

00:09:43.590 --> 00:09:46.840
your application that is automatically
managed by the Android things platform

00:09:46.840 --> 00:09:46.850
managed by the Android things platform
 

00:09:46.850 --> 00:09:48.590
managed by the Android things platform
so we don't want to forget about

00:09:48.590 --> 00:09:48.600
so we don't want to forget about
 

00:09:48.600 --> 00:09:51.890
so we don't want to forget about
activities just yet a couple other

00:09:51.890 --> 00:09:51.900
activities just yet a couple other
 

00:09:51.900 --> 00:09:53.570
activities just yet a couple other
things about Android things devices

00:09:53.570 --> 00:09:53.580
things about Android things devices
 

00:09:53.580 --> 00:09:55.250
things about Android things devices
Android things devices are also

00:09:55.250 --> 00:09:55.260
Android things devices are also
 

00:09:55.260 --> 00:09:58.160
Android things devices are also
relatively memory constrained when you

00:09:58.160 --> 00:09:58.170
relatively memory constrained when you
 

00:09:58.170 --> 00:09:59.690
relatively memory constrained when you
compare them to an Android phone a

00:09:59.690 --> 00:09:59.700
compare them to an Android phone a
 

00:09:59.700 --> 00:10:02.350
compare them to an Android phone a
typical Android things device may have

00:10:02.350 --> 00:10:02.360
typical Android things device may have
 

00:10:02.360 --> 00:10:05.990
typical Android things device may have
512 megabytes of RAM or so compare that

00:10:05.990 --> 00:10:06.000
512 megabytes of RAM or so compare that
 

00:10:06.000 --> 00:10:08.390
512 megabytes of RAM or so compare that
with the multiple gigabytes of RAM that

00:10:08.390 --> 00:10:08.400
with the multiple gigabytes of RAM that
 

00:10:08.400 --> 00:10:10.070
with the multiple gigabytes of RAM that
you would have on an Android phone like

00:10:10.070 --> 00:10:10.080
you would have on an Android phone like
 

00:10:10.080 --> 00:10:13.010
you would have on an Android phone like
say a pixel or a pixel - what this

00:10:13.010 --> 00:10:13.020
say a pixel or a pixel - what this
 

00:10:13.020 --> 00:10:15.530
say a pixel or a pixel - what this
translates to for you the developer is

00:10:15.530 --> 00:10:15.540
translates to for you the developer is
 

00:10:15.540 --> 00:10:18.140
translates to for you the developer is
that there's actually a much lower per

00:10:18.140 --> 00:10:18.150
that there's actually a much lower per
 

00:10:18.150 --> 00:10:21.020
that there's actually a much lower per
process heap size for your individual

00:10:21.020 --> 00:10:21.030
process heap size for your individual
 

00:10:21.030 --> 00:10:23.510
process heap size for your individual
application so if you're not familiar

00:10:23.510 --> 00:10:23.520
application so if you're not familiar
 

00:10:23.520 --> 00:10:26.600
application so if you're not familiar
with this idea Android sets a fixed heap

00:10:26.600 --> 00:10:26.610
with this idea Android sets a fixed heap
 

00:10:26.610 --> 00:10:28.670
with this idea Android sets a fixed heap
level on every application running on

00:10:28.670 --> 00:10:28.680
level on every application running on
 

00:10:28.680 --> 00:10:30.710
level on every application running on
that device and it's significantly lower

00:10:30.710 --> 00:10:30.720
that device and it's significantly lower
 

00:10:30.720 --> 00:10:33.260
that device and it's significantly lower
than the total available memory on that

00:10:33.260 --> 00:10:33.270
than the total available memory on that
 

00:10:33.270 --> 00:10:36.380
than the total available memory on that
device and since the Android thinks

00:10:36.380 --> 00:10:36.390
device and since the Android thinks
 

00:10:36.390 --> 00:10:38.000
device and since the Android thinks
devices are relatively memory

00:10:38.000 --> 00:10:38.010
devices are relatively memory
 

00:10:38.010 --> 00:10:40.730
devices are relatively memory
constrained that per process limit is

00:10:40.730 --> 00:10:40.740
constrained that per process limit is
 

00:10:40.740 --> 00:10:42.290
constrained that per process limit is
significantly lower than it would be on

00:10:42.290 --> 00:10:42.300
significantly lower than it would be on
 

00:10:42.300 --> 00:10:44.960
significantly lower than it would be on
an Android phone because of that if

00:10:44.960 --> 00:10:44.970
an Android phone because of that if
 

00:10:44.970 --> 00:10:46.700
an Android phone because of that if
you're porting code from an Android

00:10:46.700 --> 00:10:46.710
you're porting code from an Android
 

00:10:46.710 --> 00:10:49.550
you're porting code from an Android
mobile device over to Android things you

00:10:49.550 --> 00:10:49.560
mobile device over to Android things you
 

00:10:49.560 --> 00:10:51.080
mobile device over to Android things you
just have to realize that if you're

00:10:51.080 --> 00:10:51.090
just have to realize that if you're
 

00:10:51.090 --> 00:10:52.730
just have to realize that if you're
using the same amount of memory in your

00:10:52.730 --> 00:10:52.740
using the same amount of memory in your
 

00:10:52.740 --> 00:10:55.010
using the same amount of memory in your
app there's going to be a lot less free

00:10:55.010 --> 00:10:55.020
app there's going to be a lot less free
 

00:10:55.020 --> 00:10:57.200
app there's going to be a lot less free
memory in that same process available to

00:10:57.200 --> 00:10:57.210
memory in that same process available to
 

00:10:57.210 --> 00:10:59.210
memory in that same process available to
you okay so you have to keep that in

00:10:59.210 --> 00:10:59.220
you okay so you have to keep that in
 

00:10:59.220 --> 00:11:01.610
you okay so you have to keep that in
mind and you also want to realize that

00:11:01.610 --> 00:11:01.620
mind and you also want to realize that
 

00:11:01.620 --> 00:11:03.710
mind and you also want to realize that
this can also translate into a

00:11:03.710 --> 00:11:03.720
this can also translate into a
 

00:11:03.720 --> 00:11:06.920
this can also translate into a
significantly larger amount of garbage

00:11:06.920 --> 00:11:06.930
significantly larger amount of garbage
 

00:11:06.930 --> 00:11:07.910
significantly larger amount of garbage
collection events

00:11:07.910 --> 00:11:07.920
collection events
 

00:11:07.920 --> 00:11:10.190
collection events
happening as you allocate new objects

00:11:10.190 --> 00:11:10.200
happening as you allocate new objects
 

00:11:10.200 --> 00:11:12.350
happening as you allocate new objects
okay so you want to keep a close eye on

00:11:12.350 --> 00:11:12.360
okay so you want to keep a close eye on
 

00:11:12.360 --> 00:11:14.960
okay so you want to keep a close eye on
object allocations how often you're

00:11:14.960 --> 00:11:14.970
object allocations how often you're
 

00:11:14.970 --> 00:11:17.540
object allocations how often you're
doing object allocations because you may

00:11:17.540 --> 00:11:17.550
doing object allocations because you may
 

00:11:17.550 --> 00:11:19.490
doing object allocations because you may
run into that ceiling much more quickly

00:11:19.490 --> 00:11:19.500
run into that ceiling much more quickly
 

00:11:19.500 --> 00:11:21.350
run into that ceiling much more quickly
than you otherwise would on an Android

00:11:21.350 --> 00:11:21.360
than you otherwise would on an Android
 

00:11:21.360 --> 00:11:23.180
than you otherwise would on an Android
device or you might see the garbage

00:11:23.180 --> 00:11:23.190
device or you might see the garbage
 

00:11:23.190 --> 00:11:24.790
device or you might see the garbage
collector kicking in quite a bit more

00:11:24.790 --> 00:11:24.800
collector kicking in quite a bit more
 

00:11:24.800 --> 00:11:27.829
collector kicking in quite a bit more
the memory profiler in Android studio is

00:11:27.829 --> 00:11:27.839
the memory profiler in Android studio is
 

00:11:27.839 --> 00:11:30.319
the memory profiler in Android studio is
a really great resource to help you keep

00:11:30.319 --> 00:11:30.329
a really great resource to help you keep
 

00:11:30.329 --> 00:11:32.090
a really great resource to help you keep
an eye on what's going on inside your

00:11:32.090 --> 00:11:32.100
an eye on what's going on inside your
 

00:11:32.100 --> 00:11:33.980
an eye on what's going on inside your
memory it will allow you to track those

00:11:33.980 --> 00:11:33.990
memory it will allow you to track those
 

00:11:33.990 --> 00:11:36.350
memory it will allow you to track those
allocations over time as well as see

00:11:36.350 --> 00:11:36.360
allocations over time as well as see
 

00:11:36.360 --> 00:11:38.629
allocations over time as well as see
overlaid into it the individual garbage

00:11:38.629 --> 00:11:38.639
overlaid into it the individual garbage
 

00:11:38.639 --> 00:11:40.370
overlaid into it the individual garbage
collection events so you can get a

00:11:40.370 --> 00:11:40.380
collection events so you can get a
 

00:11:40.380 --> 00:11:42.500
collection events so you can get a
really good idea of whether or not your

00:11:42.500 --> 00:11:42.510
really good idea of whether or not your
 

00:11:42.510 --> 00:11:44.300
really good idea of whether or not your
application is allocating too much

00:11:44.300 --> 00:11:44.310
application is allocating too much
 

00:11:44.310 --> 00:11:48.379
application is allocating too much
memory and causing trouble some of the

00:11:48.379 --> 00:11:48.389
memory and causing trouble some of the
 

00:11:48.389 --> 00:11:49.400
memory and causing trouble some of the
things that you can do to help

00:11:49.400 --> 00:11:49.410
things that you can do to help
 

00:11:49.410 --> 00:11:50.990
things that you can do to help
understand your device a little bit

00:11:50.990 --> 00:11:51.000
understand your device a little bit
 

00:11:51.000 --> 00:11:52.790
understand your device a little bit
better is use some of the activity

00:11:52.790 --> 00:11:52.800
better is use some of the activity
 

00:11:52.800 --> 00:11:55.639
better is use some of the activity
manager methods to do some inspection on

00:11:55.639 --> 00:11:55.649
manager methods to do some inspection on
 

00:11:55.649 --> 00:11:57.410
manager methods to do some inspection on
the memory capabilities of your

00:11:57.410 --> 00:11:57.420
the memory capabilities of your
 

00:11:57.420 --> 00:12:00.110
the memory capabilities of your
particular device so for example you can

00:12:00.110 --> 00:12:00.120
particular device so for example you can
 

00:12:00.120 --> 00:12:02.150
particular device so for example you can
use the memory class attribute on

00:12:02.150 --> 00:12:02.160
use the memory class attribute on
 

00:12:02.160 --> 00:12:04.160
use the memory class attribute on
activity manager this will give you the

00:12:04.160 --> 00:12:04.170
activity manager this will give you the
 

00:12:04.170 --> 00:12:06.980
activity manager this will give you the
exact heap size that's available to your

00:12:06.980 --> 00:12:06.990
exact heap size that's available to your
 

00:12:06.990 --> 00:12:09.019
exact heap size that's available to your
application the value is returned as a

00:12:09.019 --> 00:12:09.029
application the value is returned as a
 

00:12:09.029 --> 00:12:10.790
application the value is returned as a
value in megabytes that is how much

00:12:10.790 --> 00:12:10.800
value in megabytes that is how much
 

00:12:10.800 --> 00:12:13.280
value in megabytes that is how much
memory you have the large memory class

00:12:13.280 --> 00:12:13.290
memory you have the large memory class
 

00:12:13.290 --> 00:12:15.860
memory you have the large memory class
attribute is what your application would

00:12:15.860 --> 00:12:15.870
attribute is what your application would
 

00:12:15.870 --> 00:12:18.110
attribute is what your application would
have if you added the large heap

00:12:18.110 --> 00:12:18.120
have if you added the large heap
 

00:12:18.120 --> 00:12:21.019
have if you added the large heap
attribute to your manifest I would

00:12:21.019 --> 00:12:21.029
attribute to your manifest I would
 

00:12:21.029 --> 00:12:23.060
attribute to your manifest I would
caution you against doing this on

00:12:23.060 --> 00:12:23.070
caution you against doing this on
 

00:12:23.070 --> 00:12:25.610
caution you against doing this on
android things generally speaking

00:12:25.610 --> 00:12:25.620
android things generally speaking
 

00:12:25.620 --> 00:12:27.980
android things generally speaking
because Android things devices are

00:12:27.980 --> 00:12:27.990
because Android things devices are
 

00:12:27.990 --> 00:12:30.769
because Android things devices are
memory constrained the memory class and

00:12:30.769 --> 00:12:30.779
memory constrained the memory class and
 

00:12:30.779 --> 00:12:32.630
memory constrained the memory class and
the large memory class of these devices

00:12:32.630 --> 00:12:32.640
the large memory class of these devices
 

00:12:32.640 --> 00:12:34.460
the large memory class of these devices
are generally configured to be the same

00:12:34.460 --> 00:12:34.470
are generally configured to be the same
 

00:12:34.470 --> 00:12:37.250
are generally configured to be the same
value so adding this attribute to your

00:12:37.250 --> 00:12:37.260
value so adding this attribute to your
 

00:12:37.260 --> 00:12:38.870
value so adding this attribute to your
manifest is essentially not going to do

00:12:38.870 --> 00:12:38.880
manifest is essentially not going to do
 

00:12:38.880 --> 00:12:42.769
manifest is essentially not going to do
anything okay you also want to inspect

00:12:42.769 --> 00:12:42.779
anything okay you also want to inspect
 

00:12:42.779 --> 00:12:45.410
anything okay you also want to inspect
the low memory threshold of this device

00:12:45.410 --> 00:12:45.420
the low memory threshold of this device
 

00:12:45.420 --> 00:12:46.939
the low memory threshold of this device
to get a sense for what that actually

00:12:46.939 --> 00:12:46.949
to get a sense for what that actually
 

00:12:46.949 --> 00:12:49.189
to get a sense for what that actually
looks like when the available memory on

00:12:49.189 --> 00:12:49.199
looks like when the available memory on
 

00:12:49.199 --> 00:12:51.439
looks like when the available memory on
the device falls below that memory

00:12:51.439 --> 00:12:51.449
the device falls below that memory
 

00:12:51.449 --> 00:12:53.660
the device falls below that memory
threshold the device is in a state that

00:12:53.660 --> 00:12:53.670
threshold the device is in a state that
 

00:12:53.670 --> 00:12:55.759
threshold the device is in a state that
we call memory pressure and we're gonna

00:12:55.759 --> 00:12:55.769
we call memory pressure and we're gonna
 

00:12:55.769 --> 00:12:57.079
we call memory pressure and we're gonna
talk a little bit more about what that

00:12:57.079 --> 00:12:57.089
talk a little bit more about what that
 

00:12:57.089 --> 00:12:59.059
talk a little bit more about what that
means and why it's important in a little

00:12:59.059 --> 00:12:59.069
means and why it's important in a little
 

00:12:59.069 --> 00:13:03.019
means and why it's important in a little
bit but just keep it in mind for now so

00:13:03.019 --> 00:13:03.029
bit but just keep it in mind for now so
 

00:13:03.029 --> 00:13:04.069
bit but just keep it in mind for now so
I want you to notice something else

00:13:04.069 --> 00:13:04.079
I want you to notice something else
 

00:13:04.079 --> 00:13:05.889
I want you to notice something else
about this diagram that I had up before

00:13:05.889 --> 00:13:05.899
about this diagram that I had up before
 

00:13:05.899 --> 00:13:08.780
about this diagram that I had up before
because of this per process heap limit

00:13:08.780 --> 00:13:08.790
because of this per process heap limit
 

00:13:08.790 --> 00:13:10.550
because of this per process heap limit
that's a fixed value for a single

00:13:10.550 --> 00:13:10.560
that's a fixed value for a single
 

00:13:10.560 --> 00:13:13.939
that's a fixed value for a single
application if you try to put all of

00:13:13.939 --> 00:13:13.949
application if you try to put all of
 

00:13:13.949 --> 00:13:16.519
application if you try to put all of
your application code into a single

00:13:16.519 --> 00:13:16.529
your application code into a single
 

00:13:16.529 --> 00:13:19.759
your application code into a single
process or a single apk you're going to

00:13:19.759 --> 00:13:19.769
process or a single apk you're going to
 

00:13:19.769 --> 00:13:21.680
process or a single apk you're going to
be severely limited in yoruba

00:13:21.680 --> 00:13:21.690
be severely limited in yoruba
 

00:13:21.690 --> 00:13:24.500
be severely limited in yoruba
to fully utilize the memory that is

00:13:24.500 --> 00:13:24.510
to fully utilize the memory that is
 

00:13:24.510 --> 00:13:27.260
to fully utilize the memory that is
available on this device okay now keep

00:13:27.260 --> 00:13:27.270
available on this device okay now keep
 

00:13:27.270 --> 00:13:29.810
available on this device okay now keep
in mind with Android things the only

00:13:29.810 --> 00:13:29.820
in mind with Android things the only
 

00:13:29.820 --> 00:13:33.350
in mind with Android things the only
apps on the device are your apps so you

00:13:33.350 --> 00:13:33.360
apps on the device are your apps so you
 

00:13:33.360 --> 00:13:35.810
apps on the device are your apps so you
should be able to take full advantage of

00:13:35.810 --> 00:13:35.820
should be able to take full advantage of
 

00:13:35.820 --> 00:13:38.060
should be able to take full advantage of
those memory resources as much as you

00:13:38.060 --> 00:13:38.070
those memory resources as much as you
 

00:13:38.070 --> 00:13:42.200
those memory resources as much as you
possibly can the way to do that is to

00:13:42.200 --> 00:13:42.210
possibly can the way to do that is to
 

00:13:42.210 --> 00:13:44.480
possibly can the way to do that is to
split your application into multiple

00:13:44.480 --> 00:13:44.490
split your application into multiple
 

00:13:44.490 --> 00:13:46.640
split your application into multiple
processes okay because that limit

00:13:46.640 --> 00:13:46.650
processes okay because that limit
 

00:13:46.650 --> 00:13:48.980
processes okay because that limit
essentially will apply to each one of

00:13:48.980 --> 00:13:48.990
essentially will apply to each one of
 

00:13:48.990 --> 00:13:51.230
essentially will apply to each one of
those processes individually so if you

00:13:51.230 --> 00:13:51.240
those processes individually so if you
 

00:13:51.240 --> 00:13:52.790
those processes individually so if you
Confederate the design of your

00:13:52.790 --> 00:13:52.800
Confederate the design of your
 

00:13:52.800 --> 00:13:55.790
Confederate the design of your
application out into multiple components

00:13:55.790 --> 00:13:55.800
application out into multiple components
 

00:13:55.800 --> 00:13:57.380
application out into multiple components
that are actually running in separate

00:13:57.380 --> 00:13:57.390
that are actually running in separate
 

00:13:57.390 --> 00:13:59.600
that are actually running in separate
apks you're gonna have a much better

00:13:59.600 --> 00:13:59.610
apks you're gonna have a much better
 

00:13:59.610 --> 00:14:02.450
apks you're gonna have a much better
ability to fully utilize the memory

00:14:02.450 --> 00:14:02.460
ability to fully utilize the memory
 

00:14:02.460 --> 00:14:04.040
ability to fully utilize the memory
available on whatever device that you're

00:14:04.040 --> 00:14:04.050
available on whatever device that you're
 

00:14:04.050 --> 00:14:08.450
available on whatever device that you're
running to make the most effective use

00:14:08.450 --> 00:14:08.460
running to make the most effective use
 

00:14:08.460 --> 00:14:10.760
running to make the most effective use
of our device we're gonna break this app

00:14:10.760 --> 00:14:10.770
of our device we're gonna break this app
 

00:14:10.770 --> 00:14:13.460
of our device we're gonna break this app
up into multiple apks with the primary

00:14:13.460 --> 00:14:13.470
up into multiple apks with the primary
 

00:14:13.470 --> 00:14:15.580
up into multiple apks with the primary
activity running in the foreground and

00:14:15.580 --> 00:14:15.590
activity running in the foreground and
 

00:14:15.590 --> 00:14:17.360
activity running in the foreground and
additional apps running in the

00:14:17.360 --> 00:14:17.370
additional apps running in the
 

00:14:17.370 --> 00:14:19.640
additional apps running in the
background you with support services

00:14:19.640 --> 00:14:19.650
background you with support services
 

00:14:19.650 --> 00:14:22.760
background you with support services
running inside the additional benefit of

00:14:22.760 --> 00:14:22.770
running inside the additional benefit of
 

00:14:22.770 --> 00:14:24.620
running inside the additional benefit of
running this architecture is that it

00:14:24.620 --> 00:14:24.630
running this architecture is that it
 

00:14:24.630 --> 00:14:26.240
running this architecture is that it
actually insulates these various

00:14:26.240 --> 00:14:26.250
actually insulates these various
 

00:14:26.250 --> 00:14:28.400
actually insulates these various
components from one another so in this

00:14:28.400 --> 00:14:28.410
components from one another so in this
 

00:14:28.410 --> 00:14:31.460
components from one another so in this
scenario if a crash happens in one of

00:14:31.460 --> 00:14:31.470
scenario if a crash happens in one of
 

00:14:31.470 --> 00:14:34.070
scenario if a crash happens in one of
these components it's localized just to

00:14:34.070 --> 00:14:34.080
these components it's localized just to
 

00:14:34.080 --> 00:14:36.050
these components it's localized just to
that element and it won't bring down

00:14:36.050 --> 00:14:36.060
that element and it won't bring down
 

00:14:36.060 --> 00:14:38.180
that element and it won't bring down
your entire application and half you

00:14:38.180 --> 00:14:38.190
your entire application and half you
 

00:14:38.190 --> 00:14:40.460
your entire application and half you
have to restart all of that from the

00:14:40.460 --> 00:14:40.470
have to restart all of that from the
 

00:14:40.470 --> 00:14:42.260
have to restart all of that from the
beginning so you can manage those

00:14:42.260 --> 00:14:42.270
beginning so you can manage those
 

00:14:42.270 --> 00:14:44.120
beginning so you can manage those
individual issues just within that

00:14:44.120 --> 00:14:44.130
individual issues just within that
 

00:14:44.130 --> 00:14:45.950
individual issues just within that
component and leave the rest of the

00:14:45.950 --> 00:14:45.960
component and leave the rest of the
 

00:14:45.960 --> 00:14:47.780
component and leave the rest of the
applications or components running on

00:14:47.780 --> 00:14:47.790
applications or components running on
 

00:14:47.790 --> 00:14:50.600
applications or components running on
your device to be unaffected it also

00:14:50.600 --> 00:14:50.610
your device to be unaffected it also
 

00:14:50.610 --> 00:14:52.880
your device to be unaffected it also
means that you can launch or relaunch

00:14:52.880 --> 00:14:52.890
means that you can launch or relaunch
 

00:14:52.890 --> 00:14:56.000
means that you can launch or relaunch
these components individually as needed

00:14:56.000 --> 00:14:56.010
these components individually as needed
 

00:14:56.010 --> 00:14:57.860
these components individually as needed
by your application so if you don't need

00:14:57.860 --> 00:14:57.870
by your application so if you don't need
 

00:14:57.870 --> 00:15:00.800
by your application so if you don't need
to load everything at once at boot you

00:15:00.800 --> 00:15:00.810
to load everything at once at boot you
 

00:15:00.810 --> 00:15:02.480
to load everything at once at boot you
can launch the various services and

00:15:02.480 --> 00:15:02.490
can launch the various services and
 

00:15:02.490 --> 00:15:07.220
can launch the various services and
components just as you need them now it

00:15:07.220 --> 00:15:07.230
components just as you need them now it
 

00:15:07.230 --> 00:15:08.990
components just as you need them now it
turns out the decision to put some of

00:15:08.990 --> 00:15:09.000
turns out the decision to put some of
 

00:15:09.000 --> 00:15:11.090
turns out the decision to put some of
your components into background apps has

00:15:11.090 --> 00:15:11.100
your components into background apps has
 

00:15:11.100 --> 00:15:12.340
your components into background apps has
consequences as well

00:15:12.340 --> 00:15:12.350
consequences as well
 

00:15:12.350 --> 00:15:14.829
consequences as well
Android treats foreground and background

00:15:14.829 --> 00:15:14.839
Android treats foreground and background
 

00:15:14.839 --> 00:15:17.210
Android treats foreground and background
processes a little bit differently and

00:15:17.210 --> 00:15:17.220
processes a little bit differently and
 

00:15:17.220 --> 00:15:18.770
processes a little bit differently and
we need to be aware of what's going on

00:15:18.770 --> 00:15:18.780
we need to be aware of what's going on
 

00:15:18.780 --> 00:15:21.170
we need to be aware of what's going on
under the hood here Android marks

00:15:21.170 --> 00:15:21.180
under the hood here Android marks
 

00:15:21.180 --> 00:15:24.230
under the hood here Android marks
application processes by priority based

00:15:24.230 --> 00:15:24.240
application processes by priority based
 

00:15:24.240 --> 00:15:26.750
application processes by priority based
on how closely they are related to the

00:15:26.750 --> 00:15:26.760
on how closely they are related to the
 

00:15:26.760 --> 00:15:29.540
on how closely they are related to the
foreground application and this is very

00:15:29.540 --> 00:15:29.550
foreground application and this is very
 

00:15:29.550 --> 00:15:31.880
foreground application and this is very
important because of a system process

00:15:31.880 --> 00:15:31.890
important because of a system process
 

00:15:31.890 --> 00:15:34.760
important because of a system process
known as the low memory killer the low

00:15:34.760 --> 00:15:34.770
known as the low memory killer the low
 

00:15:34.770 --> 00:15:35.570
known as the low memory killer the low
memory killer

00:15:35.570 --> 00:15:35.580
memory killer
 

00:15:35.580 --> 00:15:37.580
memory killer
is a process that is constantly prowling

00:15:37.580 --> 00:15:37.590
is a process that is constantly prowling
 

00:15:37.590 --> 00:15:39.410
is a process that is constantly prowling
in the background looking for new

00:15:39.410 --> 00:15:39.420
in the background looking for new
 

00:15:39.420 --> 00:15:42.590
in the background looking for new
processes to devour its job is to ensure

00:15:42.590 --> 00:15:42.600
processes to devour its job is to ensure
 

00:15:42.600 --> 00:15:45.410
processes to devour its job is to ensure
that the free memory on the system is

00:15:45.410 --> 00:15:45.420
that the free memory on the system is
 

00:15:45.420 --> 00:15:47.450
that the free memory on the system is
available to the foreground app at any

00:15:47.450 --> 00:15:47.460
available to the foreground app at any
 

00:15:47.460 --> 00:15:50.090
available to the foreground app at any
given time so if the foreground app

00:15:50.090 --> 00:15:50.100
given time so if the foreground app
 

00:15:50.100 --> 00:15:52.430
given time so if the foreground app
needs new memory and the device happens

00:15:52.430 --> 00:15:52.440
needs new memory and the device happens
 

00:15:52.440 --> 00:15:55.280
needs new memory and the device happens
to be in a system of memory pressure low

00:15:55.280 --> 00:15:55.290
to be in a system of memory pressure low
 

00:15:55.290 --> 00:15:57.320
to be in a system of memory pressure low
memory killer is going to go hunting

00:15:57.320 --> 00:15:57.330
memory killer is going to go hunting
 

00:15:57.330 --> 00:15:58.880
memory killer is going to go hunting
around for processes that it can

00:15:58.880 --> 00:15:58.890
around for processes that it can
 

00:15:58.890 --> 00:16:01.010
around for processes that it can
terminate to allocate that memory back

00:16:01.010 --> 00:16:01.020
terminate to allocate that memory back
 

00:16:01.020 --> 00:16:03.020
terminate to allocate that memory back
to the foreground okay

00:16:03.020 --> 00:16:03.030
to the foreground okay
 

00:16:03.030 --> 00:16:06.200
to the foreground okay
on an Android device like a typical user

00:16:06.200 --> 00:16:06.210
on an Android device like a typical user
 

00:16:06.210 --> 00:16:08.300
on an Android device like a typical user
driven Android device this can be

00:16:08.300 --> 00:16:08.310
driven Android device this can be
 

00:16:08.310 --> 00:16:10.220
driven Android device this can be
somewhat of a nuisance to developers

00:16:10.220 --> 00:16:10.230
somewhat of a nuisance to developers
 

00:16:10.230 --> 00:16:12.260
somewhat of a nuisance to developers
because their app may get terminated

00:16:12.260 --> 00:16:12.270
because their app may get terminated
 

00:16:12.270 --> 00:16:13.910
because their app may get terminated
from the background but at some point

00:16:13.910 --> 00:16:13.920
from the background but at some point
 

00:16:13.920 --> 00:16:16.100
from the background but at some point
the users gonna relaunch it later and

00:16:16.100 --> 00:16:16.110
the users gonna relaunch it later and
 

00:16:16.110 --> 00:16:18.410
the users gonna relaunch it later and
everything will be fine on Android

00:16:18.410 --> 00:16:18.420
everything will be fine on Android
 

00:16:18.420 --> 00:16:21.290
everything will be fine on Android
things the low memory killer could mean

00:16:21.290 --> 00:16:21.300
things the low memory killer could mean
 

00:16:21.300 --> 00:16:22.790
things the low memory killer could mean
that you have critical device

00:16:22.790 --> 00:16:22.800
that you have critical device
 

00:16:22.800 --> 00:16:25.040
that you have critical device
functionality that is being terminated

00:16:25.040 --> 00:16:25.050
functionality that is being terminated
 

00:16:25.050 --> 00:16:26.960
functionality that is being terminated
out from under heat underneath you and

00:16:26.960 --> 00:16:26.970
out from under heat underneath you and
 

00:16:26.970 --> 00:16:28.640
out from under heat underneath you and
you didn't even know it perhaps there's

00:16:28.640 --> 00:16:28.650
you didn't even know it perhaps there's
 

00:16:28.650 --> 00:16:30.350
you didn't even know it perhaps there's
a device driver running in that service

00:16:30.350 --> 00:16:30.360
a device driver running in that service
 

00:16:30.360 --> 00:16:32.240
a device driver running in that service
and Android killed that because it

00:16:32.240 --> 00:16:32.250
and Android killed that because it
 

00:16:32.250 --> 00:16:34.190
and Android killed that because it
thought it was low enough priority in

00:16:34.190 --> 00:16:34.200
thought it was low enough priority in
 

00:16:34.200 --> 00:16:36.410
thought it was low enough priority in
the background okay so something to keep

00:16:36.410 --> 00:16:36.420
the background okay so something to keep
 

00:16:36.420 --> 00:16:38.690
the background okay so something to keep
in mind as you're moving through this in

00:16:38.690 --> 00:16:38.700
in mind as you're moving through this in
 

00:16:38.700 --> 00:16:40.760
in mind as you're moving through this in
addition Android Orio introduced

00:16:40.760 --> 00:16:40.770
addition Android Orio introduced
 

00:16:40.770 --> 00:16:43.670
addition Android Orio introduced
execution limits for background apps so

00:16:43.670 --> 00:16:43.680
execution limits for background apps so
 

00:16:43.680 --> 00:16:45.890
execution limits for background apps so
applications can no longer be started

00:16:45.890 --> 00:16:45.900
applications can no longer be started
 

00:16:45.900 --> 00:16:48.620
applications can no longer be started
into a background state they must either

00:16:48.620 --> 00:16:48.630
into a background state they must either
 

00:16:48.630 --> 00:16:50.870
into a background state they must either
be launched from the foreground app or

00:16:50.870 --> 00:16:50.880
be launched from the foreground app or
 

00:16:50.880 --> 00:16:55.160
be launched from the foreground app or
bound to it in some way so because of

00:16:55.160 --> 00:16:55.170
bound to it in some way so because of
 

00:16:55.170 --> 00:16:57.230
bound to it in some way so because of
these two things there's a number of

00:16:57.230 --> 00:16:57.240
these two things there's a number of
 

00:16:57.240 --> 00:16:59.090
these two things there's a number of
different common ways that you may or

00:16:59.090 --> 00:16:59.100
different common ways that you may or
 

00:16:59.100 --> 00:17:00.680
different common ways that you may or
may not have used in the past

00:17:00.680 --> 00:17:00.690
may not have used in the past
 

00:17:00.690 --> 00:17:03.110
may not have used in the past
to launch components into the background

00:17:03.110 --> 00:17:03.120
to launch components into the background
 

00:17:03.120 --> 00:17:04.400
to launch components into the background
okay we're gonna kind of walk through

00:17:04.400 --> 00:17:04.410
okay we're gonna kind of walk through
 

00:17:04.410 --> 00:17:06.260
okay we're gonna kind of walk through
those a little bit so the first that you

00:17:06.260 --> 00:17:06.270
those a little bit so the first that you
 

00:17:06.270 --> 00:17:08.090
those a little bit so the first that you
might be familiar with is using the boot

00:17:08.090 --> 00:17:08.100
might be familiar with is using the boot
 

00:17:08.100 --> 00:17:11.000
might be familiar with is using the boot
completed broadcast to listen for a

00:17:11.000 --> 00:17:11.010
completed broadcast to listen for a
 

00:17:11.010 --> 00:17:13.010
completed broadcast to listen for a
final boot message coming from the

00:17:13.010 --> 00:17:13.020
final boot message coming from the
 

00:17:13.020 --> 00:17:15.020
final boot message coming from the
android framework saying that the system

00:17:15.020 --> 00:17:15.030
android framework saying that the system
 

00:17:15.030 --> 00:17:16.670
android framework saying that the system
is up and running you can launch other

00:17:16.670 --> 00:17:16.680
is up and running you can launch other
 

00:17:16.680 --> 00:17:19.670
is up and running you can launch other
apps if you would like do not use this

00:17:19.670 --> 00:17:19.680
apps if you would like do not use this
 

00:17:19.680 --> 00:17:22.550
apps if you would like do not use this
on Android things the primary reason is

00:17:22.550 --> 00:17:22.560
on Android things the primary reason is
 

00:17:22.560 --> 00:17:24.079
on Android things the primary reason is
because of those background execution

00:17:24.079 --> 00:17:24.089
because of those background execution
 

00:17:24.089 --> 00:17:26.990
because of those background execution
limits your background services actually

00:17:26.990 --> 00:17:27.000
limits your background services actually
 

00:17:27.000 --> 00:17:29.600
limits your background services actually
can't be properly started into that

00:17:29.600 --> 00:17:29.610
can't be properly started into that
 

00:17:29.610 --> 00:17:31.220
can't be properly started into that
state in a lot of cases it won't even

00:17:31.220 --> 00:17:31.230
state in a lot of cases it won't even
 

00:17:31.230 --> 00:17:34.370
state in a lot of cases it won't even
work okay and in addition to that this

00:17:34.370 --> 00:17:34.380
work okay and in addition to that this
 

00:17:34.380 --> 00:17:36.500
work okay and in addition to that this
background broadcast this boot completed

00:17:36.500 --> 00:17:36.510
background broadcast this boot completed
 

00:17:36.510 --> 00:17:39.380
background broadcast this boot completed
broadcast is very unpredictable in terms

00:17:39.380 --> 00:17:39.390
broadcast is very unpredictable in terms
 

00:17:39.390 --> 00:17:42.200
broadcast is very unpredictable in terms
of its timing in a lot of cases this

00:17:42.200 --> 00:17:42.210
of its timing in a lot of cases this
 

00:17:42.210 --> 00:17:44.570
of its timing in a lot of cases this
boot completed broadcast actually

00:17:44.570 --> 00:17:44.580
boot completed broadcast actually
 

00:17:44.580 --> 00:17:47.090
boot completed broadcast actually
triggers much much later than when the

00:17:47.090 --> 00:17:47.100
triggers much much later than when the
 

00:17:47.100 --> 00:17:47.900
triggers much much later than when the
home in ten

00:17:47.900 --> 00:17:47.910
home in ten
 

00:17:47.910 --> 00:17:49.880
home in ten
in the home activity are fully up and

00:17:49.880 --> 00:17:49.890
in the home activity are fully up and
 

00:17:49.890 --> 00:17:52.070
in the home activity are fully up and
running in the foreground okay so if

00:17:52.070 --> 00:17:52.080
running in the foreground okay so if
 

00:17:52.080 --> 00:17:53.240
running in the foreground okay so if
you're trying to synchronize between

00:17:53.240 --> 00:17:53.250
you're trying to synchronize between
 

00:17:53.250 --> 00:17:55.070
you're trying to synchronize between
these two things it's not a very good

00:17:55.070 --> 00:17:55.080
these two things it's not a very good
 

00:17:55.080 --> 00:17:58.310
these two things it's not a very good
mechanism to rely on in addition I would

00:17:58.310 --> 00:17:58.320
mechanism to rely on in addition I would
 

00:17:58.320 --> 00:18:00.250
mechanism to rely on in addition I would
recommend you don't use start service

00:18:00.250 --> 00:18:00.260
recommend you don't use start service
 

00:18:00.260 --> 00:18:03.200
recommend you don't use start service
for a similar reason start service is

00:18:03.200 --> 00:18:03.210
for a similar reason start service is
 

00:18:03.210 --> 00:18:05.450
for a similar reason start service is
limited by those same background

00:18:05.450 --> 00:18:05.460
limited by those same background
 

00:18:05.460 --> 00:18:06.170
limited by those same background
execution

00:18:06.170 --> 00:18:06.180
execution
 

00:18:06.180 --> 00:18:08.930
execution
limits unless you are starting a service

00:18:08.930 --> 00:18:08.940
limits unless you are starting a service
 

00:18:08.940 --> 00:18:11.570
limits unless you are starting a service
in foreground mode now foreground

00:18:11.570 --> 00:18:11.580
in foreground mode now foreground
 

00:18:11.580 --> 00:18:14.360
in foreground mode now foreground
services require you as a developer to

00:18:14.360 --> 00:18:14.370
services require you as a developer to
 

00:18:14.370 --> 00:18:17.150
services require you as a developer to
actually build in a notification that

00:18:17.150 --> 00:18:17.160
actually build in a notification that
 

00:18:17.160 --> 00:18:19.070
actually build in a notification that
would typically display to the user when

00:18:19.070 --> 00:18:19.080
would typically display to the user when
 

00:18:19.080 --> 00:18:21.260
would typically display to the user when
that service is running well we took

00:18:21.260 --> 00:18:21.270
that service is running well we took
 

00:18:21.270 --> 00:18:22.700
that service is running well we took
away the system UI where that

00:18:22.700 --> 00:18:22.710
away the system UI where that
 

00:18:22.710 --> 00:18:24.800
away the system UI where that
notification would display so you're

00:18:24.800 --> 00:18:24.810
notification would display so you're
 

00:18:24.810 --> 00:18:26.270
notification would display so you're
ended up doing a bunch of work for

00:18:26.270 --> 00:18:26.280
ended up doing a bunch of work for
 

00:18:26.280 --> 00:18:28.700
ended up doing a bunch of work for
displaying the service that it doesn't

00:18:28.700 --> 00:18:28.710
displaying the service that it doesn't
 

00:18:28.710 --> 00:18:31.280
displaying the service that it doesn't
actually gain you anything and in

00:18:31.280 --> 00:18:31.290
actually gain you anything and in
 

00:18:31.290 --> 00:18:32.750
actually gain you anything and in
addition to that there are some

00:18:32.750 --> 00:18:32.760
addition to that there are some
 

00:18:32.760 --> 00:18:35.180
addition to that there are some
difficulties with started services when

00:18:35.180 --> 00:18:35.190
difficulties with started services when
 

00:18:35.190 --> 00:18:37.070
difficulties with started services when
it comes to managing their lifecycle a

00:18:37.070 --> 00:18:37.080
it comes to managing their lifecycle a
 

00:18:37.080 --> 00:18:39.860
it comes to managing their lifecycle a
started service if you crash if that

00:18:39.860 --> 00:18:39.870
started service if you crash if that
 

00:18:39.870 --> 00:18:41.900
started service if you crash if that
crashes for some reason you don't have a

00:18:41.900 --> 00:18:41.910
crashes for some reason you don't have a
 

00:18:41.910 --> 00:18:43.970
crashes for some reason you don't have a
direct connection to understand that

00:18:43.970 --> 00:18:43.980
direct connection to understand that
 

00:18:43.980 --> 00:18:45.530
direct connection to understand that
that occurred and that you need to

00:18:45.530 --> 00:18:45.540
that occurred and that you need to
 

00:18:45.540 --> 00:18:47.450
that occurred and that you need to
restart that service so that you can

00:18:47.450 --> 00:18:47.460
restart that service so that you can
 

00:18:47.460 --> 00:18:49.010
restart that service so that you can
manage that process a little bit better

00:18:49.010 --> 00:18:49.020
manage that process a little bit better
 

00:18:49.020 --> 00:18:52.100
manage that process a little bit better
now Android does have this thing that

00:18:52.100 --> 00:18:52.110
now Android does have this thing that
 

00:18:52.110 --> 00:18:54.650
now Android does have this thing that
services can return this start sticky

00:18:54.650 --> 00:18:54.660
services can return this start sticky
 

00:18:54.660 --> 00:18:56.390
services can return this start sticky
attribute and that's a way for

00:18:56.390 --> 00:18:56.400
attribute and that's a way for
 

00:18:56.400 --> 00:18:58.850
attribute and that's a way for
applications to tell Android that this

00:18:58.850 --> 00:18:58.860
applications to tell Android that this
 

00:18:58.860 --> 00:19:01.310
applications to tell Android that this
service is important and if it crashes

00:19:01.310 --> 00:19:01.320
service is important and if it crashes
 

00:19:01.320 --> 00:19:03.440
service is important and if it crashes
or terminates for some reason I need it

00:19:03.440 --> 00:19:03.450
or terminates for some reason I need it
 

00:19:03.450 --> 00:19:04.570
or terminates for some reason I need it
to be restarted

00:19:04.570 --> 00:19:04.580
to be restarted
 

00:19:04.580 --> 00:19:07.940
to be restarted
however Android usually only does this

00:19:07.940 --> 00:19:07.950
however Android usually only does this
 

00:19:07.950 --> 00:19:10.280
however Android usually only does this
about once or twice for a given service

00:19:10.280 --> 00:19:10.290
about once or twice for a given service
 

00:19:10.290 --> 00:19:11.960
about once or twice for a given service
before they just sort of give up and

00:19:11.960 --> 00:19:11.970
before they just sort of give up and
 

00:19:11.970 --> 00:19:14.600
before they just sort of give up and
realize that at some point the user will

00:19:14.600 --> 00:19:14.610
realize that at some point the user will
 

00:19:14.610 --> 00:19:16.610
realize that at some point the user will
launch this app again maybe this will

00:19:16.610 --> 00:19:16.620
launch this app again maybe this will
 

00:19:16.620 --> 00:19:18.080
launch this app again maybe this will
start again and everything will be fine

00:19:18.080 --> 00:19:18.090
start again and everything will be fine
 

00:19:18.090 --> 00:19:20.870
start again and everything will be fine
okay that type of thinking doesn't go

00:19:20.870 --> 00:19:20.880
okay that type of thinking doesn't go
 

00:19:20.880 --> 00:19:22.850
okay that type of thinking doesn't go
well for those background services that

00:19:22.850 --> 00:19:22.860
well for those background services that
 

00:19:22.860 --> 00:19:24.740
well for those background services that
have critical functionality in them like

00:19:24.740 --> 00:19:24.750
have critical functionality in them like
 

00:19:24.750 --> 00:19:27.830
have critical functionality in them like
it like a device driver okay so we

00:19:27.830 --> 00:19:27.840
it like a device driver okay so we
 

00:19:27.840 --> 00:19:29.680
it like a device driver okay so we
recommend you use buying service instead

00:19:29.680 --> 00:19:29.690
recommend you use buying service instead
 

00:19:29.690 --> 00:19:32.930
recommend you use buying service instead
by using bound services this gives the

00:19:32.930 --> 00:19:32.940
by using bound services this gives the
 

00:19:32.940 --> 00:19:34.910
by using bound services this gives the
background process is an active

00:19:34.910 --> 00:19:34.920
background process is an active
 

00:19:34.920 --> 00:19:37.820
background process is an active
connection to that foreground app okay

00:19:37.820 --> 00:19:37.830
connection to that foreground app okay
 

00:19:37.830 --> 00:19:39.530
connection to that foreground app okay
so you'll have a you have a good

00:19:39.530 --> 00:19:39.540
so you'll have a you have a good
 

00:19:39.540 --> 00:19:41.000
so you'll have a you have a good
indication of when that service is

00:19:41.000 --> 00:19:41.010
indication of when that service is
 

00:19:41.010 --> 00:19:42.950
indication of when that service is
running and when that service has died

00:19:42.950 --> 00:19:42.960
running and when that service has died
 

00:19:42.960 --> 00:19:44.690
running and when that service has died
for some reason so that you can manage

00:19:44.690 --> 00:19:44.700
for some reason so that you can manage
 

00:19:44.700 --> 00:19:47.540
for some reason so that you can manage
that relaunch it if you need to do any

00:19:47.540 --> 00:19:47.550
that relaunch it if you need to do any
 

00:19:47.550 --> 00:19:49.520
that relaunch it if you need to do any
of those things this also has the added

00:19:49.520 --> 00:19:49.530
of those things this also has the added
 

00:19:49.530 --> 00:19:51.740
of those things this also has the added
benefit of a built-in communication

00:19:51.740 --> 00:19:51.750
benefit of a built-in communication
 

00:19:51.750 --> 00:19:53.720
benefit of a built-in communication
channel between the applications that

00:19:53.720 --> 00:19:53.730
channel between the applications that
 

00:19:53.730 --> 00:19:55.940
channel between the applications that
are bound so you can do some more direct

00:19:55.940 --> 00:19:55.950
are bound so you can do some more direct
 

00:19:55.950 --> 00:19:58.400
are bound so you can do some more direct
communication with that service without

00:19:58.400 --> 00:19:58.410
communication with that service without
 

00:19:58.410 --> 00:19:59.840
communication with that service without
having to use intense or other

00:19:59.840 --> 00:19:59.850
having to use intense or other
 

00:19:59.850 --> 00:20:01.310
having to use intense or other
mechanisms like that to pass

00:20:01.310 --> 00:20:01.320
mechanisms like that to pass
 

00:20:01.320 --> 00:20:05.240
mechanisms like that to pass
data back and forth so looking at this

00:20:05.240 --> 00:20:05.250
data back and forth so looking at this
 

00:20:05.250 --> 00:20:07.249
data back and forth so looking at this
diagram again one of the other important

00:20:07.249 --> 00:20:07.259
diagram again one of the other important
 

00:20:07.259 --> 00:20:09.620
diagram again one of the other important
reasons to use bound services is that

00:20:09.620 --> 00:20:09.630
reasons to use bound services is that
 

00:20:09.630 --> 00:20:12.110
reasons to use bound services is that
pure background applications like those

00:20:12.110 --> 00:20:12.120
pure background applications like those
 

00:20:12.120 --> 00:20:13.700
pure background applications like those
that would have been started by boot

00:20:13.700 --> 00:20:13.710
that would have been started by boot
 

00:20:13.710 --> 00:20:15.769
that would have been started by boot
completed or just start service on its

00:20:15.769 --> 00:20:15.779
completed or just start service on its
 

00:20:15.779 --> 00:20:18.799
completed or just start service on its
own are very low priority on the scale

00:20:18.799 --> 00:20:18.809
own are very low priority on the scale
 

00:20:18.809 --> 00:20:19.759
own are very low priority on the scale
okay

00:20:19.759 --> 00:20:19.769
okay
 

00:20:19.769 --> 00:20:22.789
okay
whereas bound service applications are

00:20:22.789 --> 00:20:22.799
whereas bound service applications are
 

00:20:22.799 --> 00:20:25.340
whereas bound service applications are
almost as high priority as the

00:20:25.340 --> 00:20:25.350
almost as high priority as the
 

00:20:25.350 --> 00:20:27.080
almost as high priority as the
foreground app they are literally the

00:20:27.080 --> 00:20:27.090
foreground app they are literally the
 

00:20:27.090 --> 00:20:29.060
foreground app they are literally the
highest priority you can get without

00:20:29.060 --> 00:20:29.070
highest priority you can get without
 

00:20:29.070 --> 00:20:32.269
highest priority you can get without
being the foreground app so this ensures

00:20:32.269 --> 00:20:32.279
being the foreground app so this ensures
 

00:20:32.279 --> 00:20:34.970
being the foreground app so this ensures
that those background processes stay

00:20:34.970 --> 00:20:34.980
that those background processes stay
 

00:20:34.980 --> 00:20:37.310
that those background processes stay
safe from something like low memory

00:20:37.310 --> 00:20:37.320
safe from something like low memory
 

00:20:37.320 --> 00:20:37.789
safe from something like low memory
killer

00:20:37.789 --> 00:20:37.799
killer
 

00:20:37.799 --> 00:20:39.710
killer
if the device ever does get into a

00:20:39.710 --> 00:20:39.720
if the device ever does get into a
 

00:20:39.720 --> 00:20:41.930
if the device ever does get into a
memory pressure situation okay

00:20:41.930 --> 00:20:41.940
memory pressure situation okay
 

00:20:41.940 --> 00:20:43.490
memory pressure situation okay
so you get better management of those

00:20:43.490 --> 00:20:43.500
so you get better management of those
 

00:20:43.500 --> 00:20:45.529
so you get better management of those
services and you get better protection

00:20:45.529 --> 00:20:45.539
services and you get better protection
 

00:20:45.539 --> 00:20:48.340
services and you get better protection
from a memory management perspective

00:20:48.340 --> 00:20:48.350
from a memory management perspective
 

00:20:48.350 --> 00:20:50.360
from a memory management perspective
alright let's take a look at what this

00:20:50.360 --> 00:20:50.370
alright let's take a look at what this
 

00:20:50.370 --> 00:20:52.789
alright let's take a look at what this
would actually look like in code so if I

00:20:52.789 --> 00:20:52.799
would actually look like in code so if I
 

00:20:52.799 --> 00:20:54.889
would actually look like in code so if I
have a just a basic example of a service

00:20:54.889 --> 00:20:54.899
have a just a basic example of a service
 

00:20:54.899 --> 00:20:56.749
have a just a basic example of a service
here that has a device driver inside of

00:20:56.749 --> 00:20:56.759
here that has a device driver inside of
 

00:20:56.759 --> 00:20:58.310
here that has a device driver inside of
it in this case this is just a device

00:20:58.310 --> 00:20:58.320
it in this case this is just a device
 

00:20:58.320 --> 00:21:00.409
it in this case this is just a device
driver to take some button inputs and

00:21:00.409 --> 00:21:00.419
driver to take some button inputs and
 

00:21:00.419 --> 00:21:02.180
driver to take some button inputs and
convert them into key events like they

00:21:02.180 --> 00:21:02.190
convert them into key events like they
 

00:21:02.190 --> 00:21:04.730
convert them into key events like they
were coming off of a keyboard all of

00:21:04.730 --> 00:21:04.740
were coming off of a keyboard all of
 

00:21:04.740 --> 00:21:06.320
were coming off of a keyboard all of
this logic can be fully encapsulated

00:21:06.320 --> 00:21:06.330
this logic can be fully encapsulated
 

00:21:06.330 --> 00:21:08.930
this logic can be fully encapsulated
into this external service and can run

00:21:08.930 --> 00:21:08.940
into this external service and can run
 

00:21:08.940 --> 00:21:11.119
into this external service and can run
on its own so we can build this service

00:21:11.119 --> 00:21:11.129
on its own so we can build this service
 

00:21:11.129 --> 00:21:13.669
on its own so we can build this service
component and then from the foreground

00:21:13.669 --> 00:21:13.679
component and then from the foreground
 

00:21:13.679 --> 00:21:16.549
component and then from the foreground
app we can construct an intent to that

00:21:16.549 --> 00:21:16.559
app we can construct an intent to that
 

00:21:16.559 --> 00:21:19.119
app we can construct an intent to that
service component and we can bind to it

00:21:19.119 --> 00:21:19.129
service component and we can bind to it
 

00:21:19.129 --> 00:21:21.080
service component and we can bind to it
notice that I'm doing this from the

00:21:21.080 --> 00:21:21.090
notice that I'm doing this from the
 

00:21:21.090 --> 00:21:23.690
notice that I'm doing this from the
application class and not from the

00:21:23.690 --> 00:21:23.700
application class and not from the
 

00:21:23.700 --> 00:21:26.210
application class and not from the
primary activity remember our discussion

00:21:26.210 --> 00:21:26.220
primary activity remember our discussion
 

00:21:26.220 --> 00:21:28.789
primary activity remember our discussion
from activities before and the lifecycle

00:21:28.789 --> 00:21:28.799
from activities before and the lifecycle
 

00:21:28.799 --> 00:21:30.860
from activities before and the lifecycle
associated with those if this is a

00:21:30.860 --> 00:21:30.870
associated with those if this is a
 

00:21:30.870 --> 00:21:33.139
associated with those if this is a
service that needs to be as persistent

00:21:33.139 --> 00:21:33.149
service that needs to be as persistent
 

00:21:33.149 --> 00:21:35.810
service that needs to be as persistent
as possible we want to bind to it from a

00:21:35.810 --> 00:21:35.820
as possible we want to bind to it from a
 

00:21:35.820 --> 00:21:37.460
as possible we want to bind to it from a
component that it's is expected to be

00:21:37.460 --> 00:21:37.470
component that it's is expected to be
 

00:21:37.470 --> 00:21:39.769
component that it's is expected to be
around just as long okay so that you

00:21:39.769 --> 00:21:39.779
around just as long okay so that you
 

00:21:39.779 --> 00:21:41.360
around just as long okay so that you
don't end up with life cycle issues

00:21:41.360 --> 00:21:41.370
don't end up with life cycle issues
 

00:21:41.370 --> 00:21:42.649
don't end up with life cycle issues
where your activity gets destroyed

00:21:42.649 --> 00:21:42.659
where your activity gets destroyed
 

00:21:42.659 --> 00:21:44.840
where your activity gets destroyed
recreated and your rebinding to that

00:21:44.840 --> 00:21:44.850
recreated and your rebinding to that
 

00:21:44.850 --> 00:21:46.399
recreated and your rebinding to that
service unnecessarily

00:21:46.399 --> 00:21:46.409
service unnecessarily
 

00:21:46.409 --> 00:21:48.200
service unnecessarily
doesn't necessarily cause a major

00:21:48.200 --> 00:21:48.210
doesn't necessarily cause a major
 

00:21:48.210 --> 00:21:52.340
doesn't necessarily cause a major
problem but it's not the best idea in

00:21:52.340 --> 00:21:52.350
problem but it's not the best idea in
 

00:21:52.350 --> 00:21:54.529
problem but it's not the best idea in
addition with bound services this also

00:21:54.529 --> 00:21:54.539
addition with bound services this also
 

00:21:54.539 --> 00:21:55.970
addition with bound services this also
means that you get this feedback

00:21:55.970 --> 00:21:55.980
means that you get this feedback
 

00:21:55.980 --> 00:21:57.830
means that you get this feedback
mechanism coming through the service

00:21:57.830 --> 00:21:57.840
mechanism coming through the service
 

00:21:57.840 --> 00:22:00.139
mechanism coming through the service
connection callback so when you bind to

00:22:00.139 --> 00:22:00.149
connection callback so when you bind to
 

00:22:00.149 --> 00:22:02.450
connection callback so when you bind to
a service you provide this callback as a

00:22:02.450 --> 00:22:02.460
a service you provide this callback as a
 

00:22:02.460 --> 00:22:04.490
a service you provide this callback as a
service connection and when the service

00:22:04.490 --> 00:22:04.500
service connection and when the service
 

00:22:04.500 --> 00:22:06.950
service connection and when the service
is up and running you will be notified

00:22:06.950 --> 00:22:06.960
is up and running you will be notified
 

00:22:06.960 --> 00:22:08.840
is up and running you will be notified
through the on service connected method

00:22:08.840 --> 00:22:08.850
through the on service connected method
 

00:22:08.850 --> 00:22:10.549
through the on service connected method
so you know exactly when this is now

00:22:10.549 --> 00:22:10.559
so you know exactly when this is now
 

00:22:10.559 --> 00:22:12.560
so you know exactly when this is now
something you can interact with or

00:22:12.560 --> 00:22:12.570
something you can interact with or
 

00:22:12.570 --> 00:22:13.990
something you can interact with or
communicate with if you need to

00:22:13.990 --> 00:22:14.000
communicate with if you need to
 

00:22:14.000 --> 00:22:17.170
communicate with if you need to
in addition on service disconnected

00:22:17.170 --> 00:22:17.180
in addition on service disconnected
 

00:22:17.180 --> 00:22:19.710
in addition on service disconnected
tells us anytime that service stops

00:22:19.710 --> 00:22:19.720
tells us anytime that service stops
 

00:22:19.720 --> 00:22:22.390
tells us anytime that service stops
unexpectedly maybe because it is crashed

00:22:22.390 --> 00:22:22.400
unexpectedly maybe because it is crashed
 

00:22:22.400 --> 00:22:24.490
unexpectedly maybe because it is crashed
or something else has occurred and at

00:22:24.490 --> 00:22:24.500
or something else has occurred and at
 

00:22:24.500 --> 00:22:26.500
or something else has occurred and at
that point we probably need to take a

00:22:26.500 --> 00:22:26.510
that point we probably need to take a
 

00:22:26.510 --> 00:22:28.180
that point we probably need to take a
look at restarting this especially if

00:22:28.180 --> 00:22:28.190
look at restarting this especially if
 

00:22:28.190 --> 00:22:29.860
look at restarting this especially if
it's running some critical functionality

00:22:29.860 --> 00:22:29.870
it's running some critical functionality
 

00:22:29.870 --> 00:22:32.230
it's running some critical functionality
on our device so we now have the

00:22:32.230 --> 00:22:32.240
on our device so we now have the
 

00:22:32.240 --> 00:22:34.750
on our device so we now have the
information we need to properly manage

00:22:34.750 --> 00:22:34.760
information we need to properly manage
 

00:22:34.760 --> 00:22:36.490
information we need to properly manage
this functionality from within our

00:22:36.490 --> 00:22:36.500
this functionality from within our
 

00:22:36.500 --> 00:22:38.650
this functionality from within our
applications which we wouldn't get with

00:22:38.650 --> 00:22:38.660
applications which we wouldn't get with
 

00:22:38.660 --> 00:22:40.720
applications which we wouldn't get with
started services or other of these more

00:22:40.720 --> 00:22:40.730
started services or other of these more
 

00:22:40.730 --> 00:22:44.530
started services or other of these more
independent mechanisms so here's kind of

00:22:44.530 --> 00:22:44.540
independent mechanisms so here's kind of
 

00:22:44.540 --> 00:22:46.000
independent mechanisms so here's kind of
a final picture of that architecture

00:22:46.000 --> 00:22:46.010
a final picture of that architecture
 

00:22:46.010 --> 00:22:49.620
a final picture of that architecture
again Android is going to manage for us

00:22:49.620 --> 00:22:49.630
again Android is going to manage for us
 

00:22:49.630 --> 00:22:52.480
again Android is going to manage for us
automatically that foreground app using

00:22:52.480 --> 00:22:52.490
automatically that foreground app using
 

00:22:52.490 --> 00:22:54.160
automatically that foreground app using
the home intent it will launch it

00:22:54.160 --> 00:22:54.170
the home intent it will launch it
 

00:22:54.170 --> 00:22:55.990
the home intent it will launch it
automatically on boot and it will

00:22:55.990 --> 00:22:56.000
automatically on boot and it will
 

00:22:56.000 --> 00:22:57.730
automatically on boot and it will
relaunch it if that application crashes

00:22:57.730 --> 00:22:57.740
relaunch it if that application crashes
 

00:22:57.740 --> 00:23:00.700
relaunch it if that application crashes
for any reason and then our application

00:23:00.700 --> 00:23:00.710
for any reason and then our application
 

00:23:00.710 --> 00:23:03.100
for any reason and then our application
code can then manage these additional

00:23:03.100 --> 00:23:03.110
code can then manage these additional
 

00:23:03.110 --> 00:23:05.410
code can then manage these additional
background support services through the

00:23:05.410 --> 00:23:05.420
background support services through the
 

00:23:05.420 --> 00:23:10.000
background support services through the
Bound Service mechanism alright the last

00:23:10.000 --> 00:23:10.010
Bound Service mechanism alright the last
 

00:23:10.010 --> 00:23:11.290
Bound Service mechanism alright the last
thing that I want to share with you

00:23:11.290 --> 00:23:11.300
thing that I want to share with you
 

00:23:11.300 --> 00:23:13.360
thing that I want to share with you
today are just a couple of quick tips on

00:23:13.360 --> 00:23:13.370
today are just a couple of quick tips on
 

00:23:13.370 --> 00:23:15.760
today are just a couple of quick tips on
doing this type of development from

00:23:15.760 --> 00:23:15.770
doing this type of development from
 

00:23:15.770 --> 00:23:17.590
doing this type of development from
within Android studio or within the

00:23:17.590 --> 00:23:17.600
within Android studio or within the
 

00:23:17.600 --> 00:23:21.610
within Android studio or within the
development tools so you can manage

00:23:21.610 --> 00:23:21.620
development tools so you can manage
 

00:23:21.620 --> 00:23:24.190
development tools so you can manage
multiple apks from within a single

00:23:24.190 --> 00:23:24.200
multiple apks from within a single
 

00:23:24.200 --> 00:23:26.710
multiple apks from within a single
Android studio project by adding each

00:23:26.710 --> 00:23:26.720
Android studio project by adding each
 

00:23:26.720 --> 00:23:29.620
Android studio project by adding each
additional package as a new module you

00:23:29.620 --> 00:23:29.630
additional package as a new module you
 

00:23:29.630 --> 00:23:31.330
additional package as a new module you
can add multiple modules to the same

00:23:31.330 --> 00:23:31.340
can add multiple modules to the same
 

00:23:31.340 --> 00:23:33.670
can add multiple modules to the same
project and all of those modules can

00:23:33.670 --> 00:23:33.680
project and all of those modules can
 

00:23:33.680 --> 00:23:35.950
project and all of those modules can
represent an apk or an individual app

00:23:35.950 --> 00:23:35.960
represent an apk or an individual app
 

00:23:35.960 --> 00:23:39.040
represent an apk or an individual app
process this allows you to manage all of

00:23:39.040 --> 00:23:39.050
process this allows you to manage all of
 

00:23:39.050 --> 00:23:41.200
process this allows you to manage all of
your code in one place even though

00:23:41.200 --> 00:23:41.210
your code in one place even though
 

00:23:41.210 --> 00:23:44.350
your code in one place even though
they're technically separate apps now by

00:23:44.350 --> 00:23:44.360
they're technically separate apps now by
 

00:23:44.360 --> 00:23:47.290
they're technically separate apps now by
default Android studio does not allow

00:23:47.290 --> 00:23:47.300
default Android studio does not allow
 

00:23:47.300 --> 00:23:49.870
default Android studio does not allow
you to deploy an app module that does

00:23:49.870 --> 00:23:49.880
you to deploy an app module that does
 

00:23:49.880 --> 00:23:52.810
you to deploy an app module that does
not contain a launcher activity okay or

00:23:52.810 --> 00:23:52.820
not contain a launcher activity okay or
 

00:23:52.820 --> 00:23:54.940
not contain a launcher activity okay or
an activity that has that main launcher

00:23:54.940 --> 00:23:54.950
an activity that has that main launcher
 

00:23:54.950 --> 00:23:57.790
an activity that has that main launcher
intent filter on it this doesn't work so

00:23:57.790 --> 00:23:57.800
intent filter on it this doesn't work so
 

00:23:57.800 --> 00:23:59.800
intent filter on it this doesn't work so
well for background service apps that

00:23:59.800 --> 00:23:59.810
well for background service apps that
 

00:23:59.810 --> 00:24:01.690
well for background service apps that
don't have any activities at all in them

00:24:01.690 --> 00:24:01.700
don't have any activities at all in them
 

00:24:01.700 --> 00:24:04.510
don't have any activities at all in them
in some cases but you can modify this

00:24:04.510 --> 00:24:04.520
in some cases but you can modify this
 

00:24:04.520 --> 00:24:07.210
in some cases but you can modify this
behavior for a background services app

00:24:07.210 --> 00:24:07.220
behavior for a background services app
 

00:24:07.220 --> 00:24:09.790
behavior for a background services app
you can edit the run configuration and

00:24:09.790 --> 00:24:09.800
you can edit the run configuration and
 

00:24:09.800 --> 00:24:12.250
you can edit the run configuration and
simply adjust the launch options for

00:24:12.250 --> 00:24:12.260
simply adjust the launch options for
 

00:24:12.260 --> 00:24:15.130
simply adjust the launch options for
that particular module set that target

00:24:15.130 --> 00:24:15.140
that particular module set that target
 

00:24:15.140 --> 00:24:17.670
that particular module set that target
to nothing instead of default activity

00:24:17.670 --> 00:24:17.680
to nothing instead of default activity
 

00:24:17.680 --> 00:24:20.260
to nothing instead of default activity
this will enable Android studio to

00:24:20.260 --> 00:24:20.270
this will enable Android studio to
 

00:24:20.270 --> 00:24:23.170
this will enable Android studio to
deploy that service only app to your

00:24:23.170 --> 00:24:23.180
deploy that service only app to your
 

00:24:23.180 --> 00:24:26.870
deploy that service only app to your
device and it won't complain

00:24:26.870 --> 00:24:26.880
 

00:24:26.880 --> 00:24:29.160
you can also do this from the command

00:24:29.160 --> 00:24:29.170
you can also do this from the command
 

00:24:29.170 --> 00:24:31.500
you can also do this from the command
line and one of the advantages of doing

00:24:31.500 --> 00:24:31.510
line and one of the advantages of doing
 

00:24:31.510 --> 00:24:33.750
line and one of the advantages of doing
it this way is that Android studio does

00:24:33.750 --> 00:24:33.760
it this way is that Android studio does
 

00:24:33.760 --> 00:24:36.630
it this way is that Android studio does
require that it you deploy only one

00:24:36.630 --> 00:24:36.640
require that it you deploy only one
 

00:24:36.640 --> 00:24:38.610
require that it you deploy only one
module at a time by selecting that

00:24:38.610 --> 00:24:38.620
module at a time by selecting that
 

00:24:38.620 --> 00:24:40.800
module at a time by selecting that
module from the run configuration list

00:24:40.800 --> 00:24:40.810
module from the run configuration list
 

00:24:40.810 --> 00:24:43.050
module from the run configuration list
in the UI so if you have an application

00:24:43.050 --> 00:24:43.060
in the UI so if you have an application
 

00:24:43.060 --> 00:24:45.180
in the UI so if you have an application
that's constructed of four or five

00:24:45.180 --> 00:24:45.190
that's constructed of four or five
 

00:24:45.190 --> 00:24:47.640
that's constructed of four or five
different modules all as individual apks

00:24:47.640 --> 00:24:47.650
different modules all as individual apks
 

00:24:47.650 --> 00:24:49.710
different modules all as individual apks
it can be a bit cumbersome if you have

00:24:49.710 --> 00:24:49.720
it can be a bit cumbersome if you have
 

00:24:49.720 --> 00:24:51.840
it can be a bit cumbersome if you have
to try and deploy them all individually

00:24:51.840 --> 00:24:51.850
to try and deploy them all individually
 

00:24:51.850 --> 00:24:54.090
to try and deploy them all individually
all the time one of the advantages of

00:24:54.090 --> 00:24:54.100
all the time one of the advantages of
 

00:24:54.100 --> 00:24:56.670
all the time one of the advantages of
using the Gradle command line is that by

00:24:56.670 --> 00:24:56.680
using the Gradle command line is that by
 

00:24:56.680 --> 00:24:58.860
using the Gradle command line is that by
default when you run a command like

00:24:58.860 --> 00:24:58.870
default when you run a command like
 

00:24:58.870 --> 00:25:01.560
default when you run a command like
install debug with no other modifiers it

00:25:01.560 --> 00:25:01.570
install debug with no other modifiers it
 

00:25:01.570 --> 00:25:04.290
install debug with no other modifiers it
builds and installs every module in that

00:25:04.290 --> 00:25:04.300
builds and installs every module in that
 

00:25:04.300 --> 00:25:06.930
builds and installs every module in that
project so with one command you can

00:25:06.930 --> 00:25:06.940
project so with one command you can
 

00:25:06.940 --> 00:25:09.060
project so with one command you can
deploy everything on the latest version

00:25:09.060 --> 00:25:09.070
deploy everything on the latest version
 

00:25:09.070 --> 00:25:11.520
deploy everything on the latest version
to that device and you can still do

00:25:11.520 --> 00:25:11.530
to that device and you can still do
 

00:25:11.530 --> 00:25:13.290
to that device and you can still do
individual modules if you would prefer

00:25:13.290 --> 00:25:13.300
individual modules if you would prefer
 

00:25:13.300 --> 00:25:14.970
individual modules if you would prefer
to do that by just adding the module

00:25:14.970 --> 00:25:14.980
to do that by just adding the module
 

00:25:14.980 --> 00:25:19.170
to do that by just adding the module
name to the command as well once you've

00:25:19.170 --> 00:25:19.180
name to the command as well once you've
 

00:25:19.180 --> 00:25:21.360
name to the command as well once you've
got the modules on the device the other

00:25:21.360 --> 00:25:21.370
got the modules on the device the other
 

00:25:21.370 --> 00:25:22.620
got the modules on the device the other
thing you can do directly from the

00:25:22.620 --> 00:25:22.630
thing you can do directly from the
 

00:25:22.630 --> 00:25:24.390
thing you can do directly from the
command line that isn't really supported

00:25:24.390 --> 00:25:24.400
command line that isn't really supported
 

00:25:24.400 --> 00:25:26.400
command line that isn't really supported
in Android studio today is the ability

00:25:26.400 --> 00:25:26.410
in Android studio today is the ability
 

00:25:26.410 --> 00:25:28.710
in Android studio today is the ability
to start those individual components

00:25:28.710 --> 00:25:28.720
to start those individual components
 

00:25:28.720 --> 00:25:30.930
to start those individual components
whether they're activities or services

00:25:30.930 --> 00:25:30.940
whether they're activities or services
 

00:25:30.940 --> 00:25:33.720
whether they're activities or services
so using the am shell commands you can

00:25:33.720 --> 00:25:33.730
so using the am shell commands you can
 

00:25:33.730 --> 00:25:35.970
so using the am shell commands you can
trigger those services manually if you

00:25:35.970 --> 00:25:35.980
trigger those services manually if you
 

00:25:35.980 --> 00:25:37.380
trigger those services manually if you
want to test out some of that behavior

00:25:37.380 --> 00:25:37.390
want to test out some of that behavior
 

00:25:37.390 --> 00:25:39.870
want to test out some of that behavior
sort of independently from the rest of

00:25:39.870 --> 00:25:39.880
sort of independently from the rest of
 

00:25:39.880 --> 00:25:40.980
sort of independently from the rest of
the system even though they may be

00:25:40.980 --> 00:25:40.990
the system even though they may be
 

00:25:40.990 --> 00:25:42.660
the system even though they may be
managed by the foreground app in

00:25:42.660 --> 00:25:42.670
managed by the foreground app in
 

00:25:42.670 --> 00:25:46.950
managed by the foreground app in
production all right so let's quickly

00:25:46.950 --> 00:25:46.960
production all right so let's quickly
 

00:25:46.960 --> 00:25:48.360
production all right so let's quickly
review some of the tips that we've gone

00:25:48.360 --> 00:25:48.370
review some of the tips that we've gone
 

00:25:48.370 --> 00:25:50.520
review some of the tips that we've gone
through here today don't assume a

00:25:50.520 --> 00:25:50.530
through here today don't assume a
 

00:25:50.530 --> 00:25:53.430
through here today don't assume a
graphical UI designed for your memory

00:25:53.430 --> 00:25:53.440
graphical UI designed for your memory
 

00:25:53.440 --> 00:25:55.890
graphical UI designed for your memory
constraints on these devices break your

00:25:55.890 --> 00:25:55.900
constraints on these devices break your
 

00:25:55.900 --> 00:25:58.980
constraints on these devices break your
app up into modules bind your background

00:25:58.980 --> 00:25:58.990
app up into modules bind your background
 

00:25:58.990 --> 00:26:01.110
app up into modules bind your background
services to the foreground app don't use

00:26:01.110 --> 00:26:01.120
services to the foreground app don't use
 

00:26:01.120 --> 00:26:03.750
services to the foreground app don't use
started services and use the Gradle

00:26:03.750 --> 00:26:03.760
started services and use the Gradle
 

00:26:03.760 --> 00:26:05.340
started services and use the Gradle
command line if you want to have more

00:26:05.340 --> 00:26:05.350
command line if you want to have more
 

00:26:05.350 --> 00:26:07.560
command line if you want to have more
control over deploying your modules to

00:26:07.560 --> 00:26:07.570
control over deploying your modules to
 

00:26:07.570 --> 00:26:12.000
control over deploying your modules to
the device now if you're just as excited

00:26:12.000 --> 00:26:12.010
the device now if you're just as excited
 

00:26:12.010 --> 00:26:14.160
the device now if you're just as excited
about Android things as we are I want to

00:26:14.160 --> 00:26:14.170
about Android things as we are I want to
 

00:26:14.170 --> 00:26:15.300
about Android things as we are I want to
remind everyone that we're doing a

00:26:15.300 --> 00:26:15.310
remind everyone that we're doing a
 

00:26:15.310 --> 00:26:17.730
remind everyone that we're doing a
scavenger hunt here at Google i/o if you

00:26:17.730 --> 00:26:17.740
scavenger hunt here at Google i/o if you
 

00:26:17.740 --> 00:26:19.290
scavenger hunt here at Google i/o if you
visit the link here or use the Google

00:26:19.290 --> 00:26:19.300
visit the link here or use the Google
 

00:26:19.300 --> 00:26:21.210
visit the link here or use the Google
i/o app you can follow the instructions

00:26:21.210 --> 00:26:21.220
i/o app you can follow the instructions
 

00:26:21.220 --> 00:26:23.070
i/o app you can follow the instructions
to find various items around the

00:26:23.070 --> 00:26:23.080
to find various items around the
 

00:26:23.080 --> 00:26:25.170
to find various items around the
conference and once you've created or

00:26:25.170 --> 00:26:25.180
conference and once you've created or
 

00:26:25.180 --> 00:26:26.790
conference and once you've created or
once you've completed those challenges

00:26:26.790 --> 00:26:26.800
once you've completed those challenges
 

00:26:26.800 --> 00:26:28.650
once you've completed those challenges
you can then receive a free Android

00:26:28.650 --> 00:26:28.660
you can then receive a free Android
 

00:26:28.660 --> 00:26:32.280
you can then receive a free Android
things developer kit to take home to

00:26:32.280 --> 00:26:32.290
things developer kit to take home to
 

00:26:32.290 --> 00:26:34.320
things developer kit to take home to
learn more about Android things visit

00:26:34.320 --> 00:26:34.330
learn more about Android things visit
 

00:26:34.330 --> 00:26:36.150
learn more about Android things visit
the developer site and make sure to

00:26:36.150 --> 00:26:36.160
the developer site and make sure to
 

00:26:36.160 --> 00:26:38.640
the developer site and make sure to
visit the code labs office hours

00:26:38.640 --> 00:26:38.650
visit the code labs office hours
 

00:26:38.650 --> 00:26:40.080
visit the code labs office hours
other demos that we have here in the

00:26:40.080 --> 00:26:40.090
other demos that we have here in the
 

00:26:40.090 --> 00:26:42.960
other demos that we have here in the
sandbox also be sure to visit Android

00:26:42.960 --> 00:26:42.970
sandbox also be sure to visit Android
 

00:26:42.970 --> 00:26:45.360
sandbox also be sure to visit Android
things with Google comm to find featured

00:26:45.360 --> 00:26:45.370
things with Google comm to find featured
 

00:26:45.370 --> 00:26:47.820
things with Google comm to find featured
community projects and additional sample

00:26:47.820 --> 00:26:47.830
community projects and additional sample
 

00:26:47.830 --> 00:26:49.950
community projects and additional sample
code you'll also find a lot of the

00:26:49.950 --> 00:26:49.960
code you'll also find a lot of the
 

00:26:49.960 --> 00:26:51.780
code you'll also find a lot of the
sample code available for some of the

00:26:51.780 --> 00:26:51.790
sample code available for some of the
 

00:26:51.790 --> 00:26:53.400
sample code available for some of the
demos that we have here the conference

00:26:53.400 --> 00:26:53.410
demos that we have here the conference
 

00:26:53.410 --> 00:26:55.290
demos that we have here the conference
on Android things with Google comm as

00:26:55.290 --> 00:26:55.300
on Android things with Google comm as
 

00:26:55.300 --> 00:26:57.600
on Android things with Google comm as
well so thank you everyone for your time

00:26:57.600 --> 00:26:57.610
well so thank you everyone for your time
 

00:26:57.610 --> 00:26:59.550
well so thank you everyone for your time
today and I'm really excited to see the

00:26:59.550 --> 00:26:59.560
today and I'm really excited to see the
 

00:26:59.560 --> 00:27:02.760
today and I'm really excited to see the
apps that you build with Android things

00:27:02.760 --> 00:27:02.770
apps that you build with Android things
 

00:27:02.770 --> 00:27:24.690
apps that you build with Android things
[Music]

