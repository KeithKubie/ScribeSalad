WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:04.045
So this is going to be a key concept for being able to develop and answer

00:00:04.045 --> 00:00:05.689
two questions like that and it's the notion

00:00:05.689 --> 00:00:08.340
of epsilon exhaustion. Which sounds kind of tiring.

00:00:08.340 --> 00:00:11.250
&gt;&gt; I know I'm epsilon exhausted right now.

00:00:11.250 --> 00:00:13.252
&gt;&gt; Yea, me too. So what we mean by

00:00:13.252 --> 00:00:17.250
this is, well here's the definition. So, a version space.

00:00:18.856 --> 00:00:22.470
Of, version space that is derived from a particular sample,

00:00:22.470 --> 00:00:25.530
it's considered epsilon exhausted if and only if for all

00:00:25.530 --> 00:00:29.030
the hypotheses that are in that version space they have low error. So

00:00:29.030 --> 00:00:32.040
if we can do this then your algorithm going to work. Your algorithm

00:00:32.040 --> 00:00:38.500
says at that point choose any of the hypotheses in your hypothesis set.

00:00:38.500 --> 00:00:40.400
You are going to be fine, you are going to have low error.

00:00:40.400 --> 00:00:41.088
&gt;&gt; Sure.

00:00:41.088 --> 00:00:43.580
&gt;&gt; If you don't do this, your algorithm is

00:00:43.580 --> 00:00:45.880
going to be in trouble because you are uniformly at

00:00:45.880 --> 00:00:48.040
random choose one of the hypothesis and it has a

00:00:48.040 --> 00:00:50.530
chance of being wrong. It could be a fairly high

00:00:50.530 --> 00:00:53.670
chance if there is, say there is only two hypothesis

00:00:53.670 --> 00:00:57.170
left in the version space, one has high error and one

00:00:57.170 --> 00:00:59.460
has low error. We really have to make sure that

00:00:59.460 --> 00:01:01.749
the only things left in the version space have low error

00:01:01.749 --> 00:01:03.950
&gt;&gt; Okay, that makes sense, that makes sense.

00:01:03.950 --> 00:01:05.400
&gt;&gt; Alright, so we're going to have to develop a little bit of

00:01:05.400 --> 00:01:09.680
theory to figure out when that occurs but this is a really key concept.

00:01:09.680 --> 00:01:13.220
&gt;&gt; Okay, so, I guess if was trying to put this

00:01:13.220 --> 00:01:15.800
into English just to make certain I understand it, what you're saying

00:01:15.800 --> 00:01:18.190
is, something is epsilon exhausted, a version

00:01:18.190 --> 00:01:20.660
space is epsilon exhausted exactly in the

00:01:20.660 --> 00:01:22.910
case when everything that you might possibly

00:01:22.910 --> 00:01:24.880
choose has an error less than epsilon.

00:01:24.880 --> 00:01:25.910
&gt;&gt; Sure.

00:01:25.910 --> 00:01:28.800
&gt;&gt; Period. And so if there's anything in there that

00:01:28.800 --> 00:01:31.670
has error greater than epsilon, then it's not epsilon exhausted.

00:01:31.670 --> 00:01:33.790
&gt;&gt; Right. It's still epsilon energized.

00:01:33.790 --> 00:01:35.890
&gt;&gt; Right. That makes a lot of sense, epsilon

00:01:35.890 --> 00:01:37.960
energized. That's a pretty good name for a band. OK.

00:01:37.960 --> 00:01:39.551
&gt;&gt; [LAUGH]

