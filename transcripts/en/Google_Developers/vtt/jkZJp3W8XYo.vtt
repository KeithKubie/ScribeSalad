WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:02.051
ALEXIS MOUSSINE POUCHKINE:
Hello, everyone.

00:00:02.051 --> 00:00:03.440
We're here at Devoxx 2014.

00:00:03.440 --> 00:00:04.444
And I'm here with Mandy.

00:00:04.444 --> 00:00:04.985
Hello, Mandy.

00:00:04.985 --> 00:00:05.850
MANDY WAITE: Hey, Alexis.

00:00:05.850 --> 00:00:06.160
How are you doing?

00:00:06.160 --> 00:00:07.660
ALEXIS MOUSSINE-POUCHKINE:
And we're

00:00:07.660 --> 00:00:10.759
here to talk about something I'm
very excited about personally.

00:00:10.759 --> 00:00:12.050
I think Mandy, you are as well.

00:00:12.050 --> 00:00:16.510
Which is Firebase as a
solution for backends

00:00:16.510 --> 00:00:18.955
for a lot of things,
but mobile apps

00:00:18.955 --> 00:00:20.730
is probably a pretty
good sweet spot.

00:00:20.730 --> 00:00:24.910
Firebase is this company which
has joined the Google Cloud

00:00:24.910 --> 00:00:29.264
family recently and
which offers a-- I don't

00:00:29.264 --> 00:00:31.640
know if you can call it a
mobile backend as a service.

00:00:31.640 --> 00:00:34.520
But something where basically
you have a lot of features

00:00:34.520 --> 00:00:38.410
that people are looking for when
they're building mobile apps,

00:00:38.410 --> 00:00:42.480
or web apps actually,
without touching the backend,

00:00:42.480 --> 00:00:44.200
without spending time
on infrastructure.

00:00:44.200 --> 00:00:45.840
Is that a fair assessment?

00:00:45.840 --> 00:00:47.298
MANDY WAITE: Yeah,
I think whenever

00:00:47.298 --> 00:00:50.030
we're talking about Firebase,
we tend to always circle back

00:00:50.030 --> 00:00:53.040
to mobile as being the priority
and the most interesting place

00:00:53.040 --> 00:00:55.150
where we can use Firebase today.

00:00:55.150 --> 00:00:57.702
Certainly we can do web
applications as well with it.

00:00:57.702 --> 00:00:59.660
But, yeah, mobile is
definitely the sweet spot.

00:00:59.660 --> 00:01:01.035
ALEXIS MOUSSINE
POUCHKINE: Right.

00:01:01.035 --> 00:01:03.950
So talking about
mobile applications,

00:01:03.950 --> 00:01:06.040
we're trying to
address a space where

00:01:06.040 --> 00:01:08.910
we need to have massive
scale in the backend.

00:01:08.910 --> 00:01:11.530
And as a mobile developer,
you spend enough time

00:01:11.530 --> 00:01:13.730
writing your mobile app.

00:01:13.730 --> 00:01:15.744
And life's too short
to write a backend.

00:01:15.744 --> 00:01:17.160
And you probably
don't want to get

00:01:17.160 --> 00:01:19.730
into all the nitty-gritty
details of putting together

00:01:19.730 --> 00:01:22.040
an architecture and
an infrastructure

00:01:22.040 --> 00:01:24.350
to support that back end.

00:01:24.350 --> 00:01:28.010
So how does Firebase address
maybe real-time communication?

00:01:28.010 --> 00:01:31.000
Because that's typically
what you want in mobile apps.

00:01:31.000 --> 00:01:34.604
What are the key features
that Firebase has to offer?

00:01:34.604 --> 00:01:36.520
MANDY WAITE: So I think
the guys from Firebase

00:01:36.520 --> 00:01:41.095
would refer to their product
as a real-time application

00:01:41.095 --> 00:01:41.595
platform.

00:01:41.595 --> 00:01:47.165
It effectively allows client
devices, application clients

00:01:47.165 --> 00:01:49.870
running on web or running
on mobile to effectively

00:01:49.870 --> 00:01:53.400
communicate and share data with
the Firebase servers running

00:01:53.400 --> 00:01:56.520
the backend, to provide
authentication services

00:01:56.520 --> 00:01:57.226
as well.

00:01:57.226 --> 00:01:58.600
But also, most
importantly, to be

00:01:58.600 --> 00:02:01.990
able to share data between
other connected devices as well.

00:02:01.990 --> 00:02:04.735
It could also be that the
user can access that state

00:02:04.735 --> 00:02:06.366
from one device to another.

00:02:06.366 --> 00:02:08.240
But most importantly,
that sweet spot, again,

00:02:08.240 --> 00:02:12.240
is where data that's
stored from one device

00:02:12.240 --> 00:02:14.175
will be pushed out to
the Firebase servers

00:02:14.175 --> 00:02:16.300
and then pushed out to any
other interested clients

00:02:16.300 --> 00:02:17.149
in real time.

00:02:17.149 --> 00:02:18.690
ALEXIS MOUSSINE-POUCHKINE:
So can you

00:02:18.690 --> 00:02:20.150
say more about real time?

00:02:20.150 --> 00:02:21.570
Real time means different
things to different people.

00:02:21.570 --> 00:02:23.230
MANDY WAITE: Yeah, so, I
had this kind of problem

00:02:23.230 --> 00:02:25.460
as well when I first got
introduced to Firebase.

00:02:25.460 --> 00:02:26.760
What does real time mean?

00:02:26.760 --> 00:02:29.050
Because I come from a
background where real time would

00:02:29.050 --> 00:02:31.530
mean stock tickers,
that kind of thing

00:02:31.530 --> 00:02:33.905
where we need to have
things really quickly.

00:02:33.905 --> 00:02:37.540
So effectively it's data
being shared and pushed

00:02:37.540 --> 00:02:42.782
out to other devices
in milliseconds,

00:02:42.782 --> 00:02:45.240
but also without any kind of
requirement in the client side

00:02:45.240 --> 00:02:46.650
to actually go and get the data.

00:02:46.650 --> 00:02:48.324
So the data will
become available,

00:02:48.324 --> 00:02:49.990
will be updated on
the Firebase servers,

00:02:49.990 --> 00:02:51.573
and will be
instantaneously pushed out

00:02:51.573 --> 00:02:54.370
to all of the other devices that
are interested in that data.

00:02:54.370 --> 00:02:54.665
ALEXIS MOUSSINE
POUCHKINE: Right.

00:02:54.665 --> 00:02:56.248
So typically when
you talk about data,

00:02:56.248 --> 00:02:59.520
it's payloads of JSON
data that's being sent,

00:02:59.520 --> 00:03:01.450
notifications go out.

00:03:01.450 --> 00:03:02.950
On the client side
how does it work?

00:03:02.950 --> 00:03:04.510
Do I register callbacks?

00:03:04.510 --> 00:03:08.190
Do I just get notifications
for free when I use the client

00:03:08.190 --> 00:03:11.200
library offered by Firebase, ,
again to build an Android app?

00:03:11.200 --> 00:03:12.500
How does it work?

00:03:12.500 --> 00:03:14.420
MANDY WAITE: Well, yeah,
so it's very simple

00:03:14.420 --> 00:03:17.050
to get a connection
to Firebase servers.

00:03:17.050 --> 00:03:18.876
We have various different
ways of doing it.

00:03:18.876 --> 00:03:20.875
In JavaScript, it's a
fairly simple declaration,

00:03:20.875 --> 00:03:22.130
same with Android.

00:03:22.130 --> 00:03:25.020
Once you have a reference
to the Firebase servers,

00:03:25.020 --> 00:03:28.610
you can very simply make
calls to that reference.

00:03:28.610 --> 00:03:31.005
And effectively what you're
doing behind the scenes

00:03:31.005 --> 00:03:33.610
is making a RESTful call
to the Firebase servers.

00:03:33.610 --> 00:03:37.250
Fully authenticated,
everything controlled.

00:03:37.250 --> 00:03:39.200
ALEXIS
MOUSSINE-POUCHKINE: So one

00:03:39.200 --> 00:03:40.910
of the challenges
in the mobile world

00:03:40.910 --> 00:03:43.160
is that connections
are unreliable.

00:03:43.160 --> 00:03:46.470
And certainly here where
a number of the speakers

00:03:46.470 --> 00:03:48.150
are not in their
home country, they

00:03:48.150 --> 00:03:49.620
might or might not have roaming.

00:03:49.620 --> 00:03:52.730
And certainly they cannot
rely on Wi-Fi, for example.

00:03:52.730 --> 00:03:52.940
MANDY WAITE: Yeah, definitely.

00:03:52.940 --> 00:03:54.440
ALEXIS MOUSSINE-POUCHKINE:
So that's

00:03:54.440 --> 00:03:57.360
one of the many use cases
where that's how life is.

00:03:57.360 --> 00:03:59.800
You don't have connectivity
100% of the time.

00:03:59.800 --> 00:04:02.786
So does Firebase have
anything to help with that?

00:04:02.786 --> 00:04:05.160
MANDY WAITE: Yeah, so this is
one of the real challenges.

00:04:05.160 --> 00:04:07.701
Effectively with Firebase having
their own servers and client

00:04:07.701 --> 00:04:10.040
devices running applications,
we can get ourselves

00:04:10.040 --> 00:04:12.430
into a situation where we
have distributed state.

00:04:12.430 --> 00:04:14.780
A state that is
available in clients

00:04:14.780 --> 00:04:17.050
but has not been synchronized
with the servers.

00:04:17.050 --> 00:04:18.120
And a state that's
on the servers that's

00:04:18.120 --> 00:04:20.149
not been synchronized
with all of the clients.

00:04:20.149 --> 00:04:23.156
So effectively, we have this
distributed state problem.

00:04:23.156 --> 00:04:24.530
Firebase handles
that effectively

00:04:24.530 --> 00:04:26.290
by storing data locally.

00:04:26.290 --> 00:04:28.730
So whenever you make
a change to data,

00:04:28.730 --> 00:04:30.630
it's pushed out
to locally store.

00:04:30.630 --> 00:04:33.300
And the application-- event
handlers are fired as required.

00:04:33.300 --> 00:04:35.880
And the application can
carry on doing what it does.

00:04:35.880 --> 00:04:40.060
And at any point, it would
just connect to that point.

00:04:40.060 --> 00:04:42.770
At any point in the future
when we become connected back

00:04:42.770 --> 00:04:44.410
to the Firebase
servers, that data

00:04:44.410 --> 00:04:46.380
can be synchronized and
pushed back out again.

00:04:46.380 --> 00:04:48.130
At that time, all other
interested clients

00:04:48.130 --> 00:04:49.860
would also get updates.

00:04:49.860 --> 00:04:54.290
ALEXIS MOUSSINE-POUCHKINE: So
we talked about web or Android

00:04:54.290 --> 00:04:56.456
in the case of mobile,
but Firebase is really

00:04:56.456 --> 00:04:58.720
a solution that spans across
a number of technologies.

00:04:58.720 --> 00:05:01.770
So just for the web, I was
looking at the website.

00:05:01.770 --> 00:05:04.612
And there a lot of SDKs
and [? findings-- ?]

00:05:04.612 --> 00:05:06.070
or I don't know
how you call this--

00:05:06.070 --> 00:05:08.140
for all of the popular
JavaScript frameworks

00:05:08.140 --> 00:05:10.865
out there, so Angular,
Ember and a few others.

00:05:10.865 --> 00:05:12.240
MANDY WAITE: And
Polymer as well.

00:05:12.240 --> 00:05:13.656
ALEXIS MOUSSINE
POUCHKINE: Polymer

00:05:13.656 --> 00:05:15.900
as well, which is the newer one.

00:05:15.900 --> 00:05:18.070
It supports iOS as well.

00:05:18.070 --> 00:05:20.170
So there's an Objective-C
client library.

00:05:20.170 --> 00:05:22.670
MANDY WAITE: Yeah, so there's
an Objective-C client library.

00:05:22.670 --> 00:05:24.878
You have support for iOS,
for Windows, for JavaScript

00:05:24.878 --> 00:05:26.590
effectively.

00:05:26.590 --> 00:05:28.690
Java support's
really-- by virtue

00:05:28.690 --> 00:05:32.800
of being available
on the Android.

00:05:32.800 --> 00:05:35.460
ALEXIS MOUSSINE-POUCHKINE: Can
you use this at the REST API?

00:05:35.460 --> 00:05:37.907
You mentioned there
was a REST API that--

00:05:37.907 --> 00:05:39.990
MANDY WAITE: Yeah, so
effectively every single bit

00:05:39.990 --> 00:05:41.406
of data that you
store in Firebase

00:05:41.406 --> 00:05:44.770
can effectively be
accessed via a URL.

00:05:44.770 --> 00:05:47.640
So you can access your data
sets completely via a URL.

00:05:47.640 --> 00:05:50.300
Or you can access
individual bits of data

00:05:50.300 --> 00:05:52.520
by URLs as well in a
completely RESTful way.

00:05:52.520 --> 00:05:53.769
ALEXIS MOUSSINE-POUCHKINE: OK.

00:05:53.769 --> 00:05:58.199
So you also mentioned user
management and authentication.

00:05:58.199 --> 00:05:58.990
How does that work?

00:05:58.990 --> 00:06:02.864
Does it support only
Google Gmail accounts or--

00:06:02.864 --> 00:06:03.530
MANDY WAITE: No.

00:06:03.530 --> 00:06:04.460
That's a great thing.

00:06:04.460 --> 00:06:06.290
So it doesn't just
support Google,

00:06:06.290 --> 00:06:08.559
which would've been
a concern, I think.

00:06:08.559 --> 00:06:09.850
It supports email and password.

00:06:09.850 --> 00:06:11.808
So you can set up very
basic email and password

00:06:11.808 --> 00:06:13.370
if you choose to.

00:06:13.370 --> 00:06:16.260
It supports out of the box
four authentication providers.

00:06:16.260 --> 00:06:19.890
It supports Twitter, GitHub,
Facebook, and Google.

00:06:19.890 --> 00:06:22.100
And if you have
another requirement,

00:06:22.100 --> 00:06:25.061
maybe to attach to your own LDAP
servers or active directory.

00:06:25.061 --> 00:06:27.560
You can effectively roll your
own and use custom auth tokens

00:06:27.560 --> 00:06:29.850
to connect to those
authentication providers.

00:06:29.850 --> 00:06:30.280
ALEXIS MOUSSINE
POUCHKINE: Great.

00:06:30.280 --> 00:06:32.150
So I have to say
it again, I'm very

00:06:32.150 --> 00:06:36.500
excited about this Firebase
joining the Cloud platform.

00:06:36.500 --> 00:06:39.796
What can we expect from that
fairly recent acquisition

00:06:39.796 --> 00:06:41.810
from Google in
terms of integrating

00:06:41.810 --> 00:06:43.570
as part of the bigger family?

00:06:43.570 --> 00:06:46.830
So I understand the
Firebase [INAUDIBLE] brand

00:06:46.830 --> 00:06:49.100
will stick around.

00:06:49.100 --> 00:06:52.690
Any integration
that we can share?

00:06:52.690 --> 00:06:54.190
MANDY WAITE: Well,
I think one thing

00:06:54.190 --> 00:06:57.480
that the guys from Firebase did
announce last week at Google

00:06:57.480 --> 00:07:00.740
Cloud Platform Live was
the advent of triggers.

00:07:00.740 --> 00:07:02.400
And triggers will
be used effectively

00:07:02.400 --> 00:07:05.150
to fire off events
whenever data is touched

00:07:05.150 --> 00:07:08.460
or updated, which could allow
us to-- it's effectively

00:07:08.460 --> 00:07:09.830
a call to a Webhook.

00:07:09.830 --> 00:07:12.429
And a Webhook could be an
App Engine application.

00:07:12.429 --> 00:07:14.720
It could be a virtual machine
running on Google Compute

00:07:14.720 --> 00:07:15.310
Engine.

00:07:15.310 --> 00:07:17.690
It could be running
somewhere else completely,

00:07:17.690 --> 00:07:19.310
not on Google Cloud
Platform at all.

00:07:19.310 --> 00:07:20.944
Effectively just a
call to a Webhook.

00:07:20.944 --> 00:07:22.360
So I think that's
really exciting.

00:07:22.360 --> 00:07:23.859
That will effectively
allow us to be

00:07:23.859 --> 00:07:28.070
able to have hooks into
Firebase whenever data changes

00:07:28.070 --> 00:07:30.644
and invoke functionality
outside of Firebase.

00:07:30.644 --> 00:07:32.310
That's the first step
that I'm aware of.

00:07:32.310 --> 00:07:34.130
ALEXIS MOUSSINE-POUCHKINE:
It's probably also worth

00:07:34.130 --> 00:07:36.220
mentioning that we're
not requiring people now

00:07:36.220 --> 00:07:38.370
to use the Google
Cloud Platform just

00:07:38.370 --> 00:07:40.090
to use Firebase as
they were before.

00:07:40.090 --> 00:07:42.405
MANDY WAITE: Yeah, and I'm
hoping that stays that way.

00:07:42.405 --> 00:07:44.280
At the moment, you just
sign up for Firebase.

00:07:44.280 --> 00:07:46.140
It's got a free
plan, a free tier.

00:07:46.140 --> 00:07:47.910
It's got a very simple tutorial.

00:07:47.910 --> 00:07:50.160
It's so remarkably easy to
get up and running with it.

00:07:50.160 --> 00:07:51.077
It's quite surprising.

00:07:51.077 --> 00:07:53.326
You can be expecting to be
asked for your credit card,

00:07:53.326 --> 00:07:54.660
but it's pretty straightforward.

00:07:54.660 --> 00:07:56.120
Get in there, get
playing with it,

00:07:56.120 --> 00:07:57.620
and get started very quickly.

00:07:57.620 --> 00:07:59.269
It also has its
own debugging tool

00:07:59.269 --> 00:08:01.560
called Forge, which allows
you to [? see the updates ?]

00:08:01.560 --> 00:08:03.200
to your data in real time.

00:08:03.200 --> 00:08:03.448
ALEXIS MOUSSINE
POUCHKINE: Right.

00:08:03.448 --> 00:08:05.572
And I've heard good things
about the documentation.

00:08:05.572 --> 00:08:06.870
So I guess it's all good.

00:08:06.870 --> 00:08:09.700
So, guys, if you haven't
checked out Firebase already,

00:08:09.700 --> 00:08:11.940
I would encourage you to do so.

00:08:11.940 --> 00:08:13.820
Whether you're building
web applications,

00:08:13.820 --> 00:08:16.660
mobile applications, I
think it's certainly worth

00:08:16.660 --> 00:08:17.670
checking out.

00:08:17.670 --> 00:08:19.040
So thank you, Mandy.

00:08:19.040 --> 00:08:19.410
MANDY WAITE: Thank you, Alexis.

00:08:19.410 --> 00:08:21.701
ALEXIS MOUSSINE POUCHKINE:
That's all the time we have.

00:08:21.701 --> 00:08:24.150
For further information,
go to firebase.com,

00:08:24.150 --> 00:08:25.980
for the time being at least.

00:08:25.980 --> 00:08:28.330
And check out
Mandy's session here

00:08:28.330 --> 00:08:30.422
at Devoxx, which will be
available on [INAUDIBLE].

00:08:30.422 --> 00:08:31.880
MANDY WAITE:
[INAUDIBLE] Thank you.

00:08:31.880 --> 00:08:32.669
Cheers.

00:08:32.669 --> 00:08:34.127
ALEXIS MOUSSINE
POUCHKINE: Bye bye.

00:08:34.127 --> 00:08:35.309
MANDY WAITE: Bye-bye.

