WEBVTT
Kind: captions
Language: en

00:00:01.250 --> 00:00:04.280 align:start position:0%
 
pop<00:00:02.250><c> quiz</c><00:00:02.550><c> hotshot</c><00:00:02.720><c> you've</c><00:00:03.720><c> got</c><00:00:03.899><c> 48</c>

00:00:04.280 --> 00:00:04.290 align:start position:0%
pop quiz hotshot you've got 48
 

00:00:04.290 --> 00:00:06.410 align:start position:0%
pop quiz hotshot you've got 48
milliseconds<00:00:04.950><c> of</c><00:00:05.069><c> work</c><00:00:05.250><c> to</c><00:00:05.430><c> do</c><00:00:05.549><c> but</c><00:00:05.759><c> only</c><00:00:05.879><c> 16</c>

00:00:06.410 --> 00:00:06.420 align:start position:0%
milliseconds of work to do but only 16
 

00:00:06.420 --> 00:00:08.059 align:start position:0%
milliseconds of work to do but only 16
milliseconds<00:00:07.020><c> per</c><00:00:07.080><c> frame</c><00:00:07.230><c> to</c><00:00:07.680><c> get</c><00:00:07.799><c> it</c><00:00:07.919><c> done</c>

00:00:08.059 --> 00:00:08.069 align:start position:0%
milliseconds per frame to get it done
 

00:00:08.069 --> 00:00:10.850 align:start position:0%
milliseconds per frame to get it done
what<00:00:08.730><c> do</c><00:00:08.790><c> you</c><00:00:08.849><c> do</c><00:00:09.260><c> my</c><00:00:10.260><c> name</c><00:00:10.440><c> is</c><00:00:10.590><c> Colt</c><00:00:10.800><c> McAnlis</c>

00:00:10.850 --> 00:00:10.860 align:start position:0%
what do you do my name is Colt McAnlis
 

00:00:10.860 --> 00:00:12.830 align:start position:0%
what do you do my name is Colt McAnlis
and<00:00:11.280><c> while</c><00:00:11.490><c> threading</c><00:00:11.880><c> on</c><00:00:11.969><c> Android</c><00:00:12.420><c> can</c><00:00:12.630><c> help</c>

00:00:12.830 --> 00:00:12.840 align:start position:0%
and while threading on Android can help
 

00:00:12.840 --> 00:00:14.570 align:start position:0%
and while threading on Android can help
cure<00:00:13.080><c> your</c><00:00:13.290><c> performance</c><00:00:13.740><c> woes</c><00:00:13.950><c> it</c><00:00:14.250><c> can</c><00:00:14.370><c> also</c>

00:00:14.570 --> 00:00:14.580 align:start position:0%
cure your performance woes it can also
 

00:00:14.580 --> 00:00:16.730 align:start position:0%
cure your performance woes it can also
end<00:00:14.880><c> up</c><00:00:15.030><c> creating</c><00:00:15.299><c> some</c><00:00:15.690><c> huge</c><00:00:15.990><c> problems</c><00:00:16.529><c> if</c>

00:00:16.730 --> 00:00:16.740 align:start position:0%
end up creating some huge problems if
 

00:00:16.740 --> 00:00:18.140 align:start position:0%
end up creating some huge problems if
you<00:00:17.100><c> don't</c><00:00:17.400><c> understand</c><00:00:17.760><c> how</c><00:00:17.910><c> it's</c><00:00:18.060><c> all</c>

00:00:18.140 --> 00:00:18.150 align:start position:0%
you don't understand how it's all
 

00:00:18.150 --> 00:00:19.790 align:start position:0%
you don't understand how it's all
working<00:00:18.390><c> under</c><00:00:18.630><c> the</c><00:00:18.720><c> hood</c><00:00:18.900><c> so</c><00:00:19.109><c> let's</c><00:00:19.590><c> take</c><00:00:19.770><c> a</c>

00:00:19.790 --> 00:00:19.800 align:start position:0%
working under the hood so let's take a
 

00:00:19.800 --> 00:00:21.380 align:start position:0%
working under the hood so let's take a
few<00:00:20.010><c> minutes</c><00:00:20.279><c> and</c><00:00:20.369><c> make</c><00:00:20.430><c> sure</c><00:00:20.670><c> we're</c><00:00:20.910><c> all</c><00:00:21.060><c> on</c>

00:00:21.380 --> 00:00:21.390 align:start position:0%
few minutes and make sure we're all on
 

00:00:21.390 --> 00:00:24.620 align:start position:0%
few minutes and make sure we're all on
the<00:00:21.449><c> same</c><00:00:21.810><c> page</c><00:00:22.279><c> see</c><00:00:23.279><c> a</c><00:00:23.310><c> thread</c><00:00:23.760><c> by</c><00:00:24.119><c> default</c>

00:00:24.620 --> 00:00:24.630 align:start position:0%
the same page see a thread by default
 

00:00:24.630 --> 00:00:27.230 align:start position:0%
the same page see a thread by default
does<00:00:24.960><c> three</c><00:00:25.410><c> things</c><00:00:25.439><c> it</c><00:00:26.039><c> starts</c><00:00:26.550><c> it</c><00:00:26.730><c> does</c><00:00:26.970><c> some</c>

00:00:27.230 --> 00:00:27.240 align:start position:0%
does three things it starts it does some
 

00:00:27.240 --> 00:00:28.640 align:start position:0%
does three things it starts it does some
works<00:00:27.449><c> and</c><00:00:27.689><c> as</c><00:00:27.840><c> soon</c><00:00:27.990><c> as</c><00:00:28.080><c> that</c><00:00:28.170><c> work</c><00:00:28.320><c> is</c><00:00:28.470><c> done</c>

00:00:28.640 --> 00:00:28.650 align:start position:0%
works and as soon as that work is done
 

00:00:28.650 --> 00:00:31.070 align:start position:0%
works and as soon as that work is done
it<00:00:28.890><c> terminates</c><00:00:29.550><c> now</c><00:00:30.000><c> by</c><00:00:30.240><c> itself</c><00:00:30.570><c> that's</c><00:00:30.810><c> not</c>

00:00:31.070 --> 00:00:31.080 align:start position:0%
it terminates now by itself that's not
 

00:00:31.080 --> 00:00:33.410 align:start position:0%
it terminates now by itself that's not
too<00:00:31.650><c> useful</c><00:00:32.009><c> instead</c><00:00:32.850><c> what</c><00:00:33.059><c> you</c><00:00:33.149><c> want</c><00:00:33.180><c> is</c><00:00:33.390><c> a</c>

00:00:33.410 --> 00:00:33.420 align:start position:0%
too useful instead what you want is a
 

00:00:33.420 --> 00:00:34.819 align:start position:0%
too useful instead what you want is a
thread<00:00:33.719><c> that</c><00:00:33.840><c> sticks</c><00:00:34.110><c> around</c><00:00:34.230><c> for</c><00:00:34.590><c> a</c><00:00:34.649><c> while</c><00:00:34.770><c> so</c>

00:00:34.819 --> 00:00:34.829 align:start position:0%
thread that sticks around for a while so
 

00:00:34.829 --> 00:00:36.440 align:start position:0%
thread that sticks around for a while so
you<00:00:35.010><c> can</c><00:00:35.190><c> feed</c><00:00:35.489><c> it</c><00:00:35.520><c> packets</c><00:00:36.030><c> of</c><00:00:36.120><c> work</c><00:00:36.300><c> to</c>

00:00:36.440 --> 00:00:36.450 align:start position:0%
you can feed it packets of work to
 

00:00:36.450 --> 00:00:38.569 align:start position:0%
you can feed it packets of work to
operate<00:00:36.870><c> on</c><00:00:36.989><c> but</c><00:00:37.410><c> to</c><00:00:37.530><c> do</c><00:00:37.620><c> that</c><00:00:37.770><c> you</c><00:00:38.129><c> need</c><00:00:38.370><c> a</c>

00:00:38.569 --> 00:00:38.579 align:start position:0%
operate on but to do that you need a
 

00:00:38.579 --> 00:00:41.119 align:start position:0%
operate on but to do that you need a
little<00:00:38.850><c> more</c><00:00:38.969><c> scaffolding</c><00:00:39.750><c> first</c><00:00:40.649><c> since</c>

00:00:41.119 --> 00:00:41.129 align:start position:0%
little more scaffolding first since
 

00:00:41.129 --> 00:00:42.650 align:start position:0%
little more scaffolding first since
threads<00:00:41.460><c> die</c><00:00:41.760><c> when</c><00:00:42.030><c> they</c><00:00:42.090><c> run</c><00:00:42.270><c> out</c><00:00:42.300><c> of</c><00:00:42.390><c> work</c>

00:00:42.650 --> 00:00:42.660 align:start position:0%
threads die when they run out of work
 

00:00:42.660 --> 00:00:44.060 align:start position:0%
threads die when they run out of work
you<00:00:42.989><c> need</c><00:00:43.110><c> to</c><00:00:43.170><c> have</c><00:00:43.260><c> some</c><00:00:43.530><c> sort</c><00:00:43.739><c> of</c><00:00:43.800><c> loop</c>

00:00:44.060 --> 00:00:44.070 align:start position:0%
you need to have some sort of loop
 

00:00:44.070 --> 00:00:45.560 align:start position:0%
you need to have some sort of loop
running<00:00:44.520><c> on</c><00:00:44.640><c> the</c><00:00:44.789><c> thread</c><00:00:45.030><c> to</c><00:00:45.210><c> keep</c><00:00:45.360><c> it</c><00:00:45.480><c> alive</c>

00:00:45.560 --> 00:00:45.570 align:start position:0%
running on the thread to keep it alive
 

00:00:45.570 --> 00:00:47.330 align:start position:0%
running on the thread to keep it alive
just<00:00:46.020><c> make</c><00:00:46.320><c> sure</c><00:00:46.440><c> to</c><00:00:46.469><c> put</c><00:00:46.680><c> it</c><00:00:46.770><c> in</c><00:00:46.829><c> exit</c>

00:00:47.330 --> 00:00:47.340 align:start position:0%
just make sure to put it in exit
 

00:00:47.340 --> 00:00:48.680 align:start position:0%
just make sure to put it in exit
condition<00:00:47.700><c> so</c><00:00:47.820><c> you</c><00:00:47.879><c> can</c><00:00:48.030><c> terminate</c><00:00:48.210><c> that</c><00:00:48.390><c> loop</c>

00:00:48.680 --> 00:00:48.690 align:start position:0%
condition so you can terminate that loop
 

00:00:48.690 --> 00:00:50.930 align:start position:0%
condition so you can terminate that loop
later<00:00:48.930><c> in</c><00:00:49.350><c> addition</c><00:00:50.100><c> you'll</c><00:00:50.370><c> need</c><00:00:50.520><c> some</c><00:00:50.760><c> sort</c>

00:00:50.930 --> 00:00:50.940 align:start position:0%
later in addition you'll need some sort
 

00:00:50.940 --> 00:00:52.729 align:start position:0%
later in addition you'll need some sort
of<00:00:51.000><c> queue</c><00:00:51.329><c> that</c><00:00:51.570><c> the</c><00:00:51.660><c> loop</c><00:00:51.840><c> can</c><00:00:52.110><c> pull</c><00:00:52.410><c> blocks</c>

00:00:52.729 --> 00:00:52.739 align:start position:0%
of queue that the loop can pull blocks
 

00:00:52.739 --> 00:00:54.889 align:start position:0%
of queue that the loop can pull blocks
of<00:00:52.920><c> work</c><00:00:53.100><c> from</c><00:00:53.340><c> to</c><00:00:53.520><c> execute</c><00:00:54.000><c> on</c><00:00:54.120><c> and</c><00:00:54.329><c> of</c><00:00:54.629><c> course</c>

00:00:54.889 --> 00:00:54.899 align:start position:0%
of work from to execute on and of course
 

00:00:54.899 --> 00:00:56.689 align:start position:0%
of work from to execute on and of course
you'll<00:00:55.110><c> need</c><00:00:55.199><c> some</c><00:00:55.500><c> other</c><00:00:55.680><c> thread</c><00:00:56.160><c> that</c>

00:00:56.689 --> 00:00:56.699 align:start position:0%
you'll need some other thread that
 

00:00:56.699 --> 00:00:58.400 align:start position:0%
you'll need some other thread that
creates<00:00:57.090><c> work</c><00:00:57.329><c> packets</c><00:00:57.780><c> and</c><00:00:57.899><c> pushes</c><00:00:58.260><c> them</c>

00:00:58.400 --> 00:00:58.410 align:start position:0%
creates work packets and pushes them
 

00:00:58.410 --> 00:01:00.709 align:start position:0%
creates work packets and pushes them
into<00:00:58.530><c> the</c><00:00:58.710><c> queue</c><00:00:59.039><c> for</c><00:00:59.370><c> execution</c><00:01:00.149><c> now</c><00:01:00.600><c> if</c>

00:01:00.709 --> 00:01:00.719 align:start position:0%
into the queue for execution now if
 

00:01:00.719 --> 00:01:02.180 align:start position:0%
into the queue for execution now if
you've<00:01:00.840><c> ever</c><00:01:01.020><c> tried</c><00:01:01.350><c> to</c><00:01:01.410><c> write</c><00:01:01.739><c> this</c><00:01:01.980><c> setup</c>

00:01:02.180 --> 00:01:02.190 align:start position:0%
you've ever tried to write this setup
 

00:01:02.190 --> 00:01:03.560 align:start position:0%
you've ever tried to write this setup
yourself<00:01:02.670><c> you</c><00:01:03.030><c> know</c><00:01:03.120><c> it</c><00:01:03.239><c> gets</c><00:01:03.300><c> a</c><00:01:03.420><c> little</c>

00:01:03.560 --> 00:01:03.570 align:start position:0%
yourself you know it gets a little
 

00:01:03.570 --> 00:01:05.240 align:start position:0%
yourself you know it gets a little
gnarly<00:01:03.989><c> to</c><00:01:04.290><c> get</c><00:01:04.409><c> all</c><00:01:04.589><c> of</c><00:01:04.710><c> that</c><00:01:04.830><c> machinery</c>

00:01:05.240 --> 00:01:05.250 align:start position:0%
gnarly to get all of that machinery
 

00:01:05.250 --> 00:01:06.980 align:start position:0%
gnarly to get all of that machinery
working<00:01:05.760><c> correctly</c><00:01:06.000><c> thankfully</c><00:01:06.840><c> though</c>

00:01:06.980 --> 00:01:06.990 align:start position:0%
working correctly thankfully though
 

00:01:06.990 --> 00:01:09.200 align:start position:0%
working correctly thankfully though
Android<00:01:07.500><c> has</c><00:01:07.650><c> a</c><00:01:07.680><c> set</c><00:01:07.979><c> of</c><00:01:08.070><c> classes</c><00:01:08.280><c> to</c><00:01:08.700><c> do</c><00:01:08.939><c> all</c>

00:01:09.200 --> 00:01:09.210 align:start position:0%
Android has a set of classes to do all
 

00:01:09.210 --> 00:01:10.010 align:start position:0%
Android has a set of classes to do all
that<00:01:09.420><c> for</c><00:01:09.780><c> you</c>

00:01:10.010 --> 00:01:10.020 align:start position:0%
that for you
 

00:01:10.020 --> 00:01:12.410 align:start position:0%
that for you
for<00:01:10.500><c> example</c><00:01:10.830><c> the</c><00:01:11.010><c> looper</c><00:01:11.549><c> class</c><00:01:11.820><c> will</c><00:01:12.240><c> keep</c>

00:01:12.410 --> 00:01:12.420 align:start position:0%
for example the looper class will keep
 

00:01:12.420 --> 00:01:13.969 align:start position:0%
for example the looper class will keep
the<00:01:12.540><c> thread</c><00:01:12.750><c> alive</c><00:01:12.990><c> and</c><00:01:13.229><c> pop</c><00:01:13.470><c> work</c><00:01:13.740><c> off</c><00:01:13.920><c> a</c>

00:01:13.969 --> 00:01:13.979 align:start position:0%
the thread alive and pop work off a
 

00:01:13.979 --> 00:01:16.249 align:start position:0%
the thread alive and pop work off a
queue<00:01:14.430><c> to</c><00:01:14.640><c> execute</c><00:01:15.150><c> on</c><00:01:15.360><c> and</c><00:01:15.630><c> rather</c><00:01:16.049><c> than</c>

00:01:16.249 --> 00:01:16.259 align:start position:0%
queue to execute on and rather than
 

00:01:16.259 --> 00:01:18.320 align:start position:0%
queue to execute on and rather than
always<00:01:16.500><c> inserting</c><00:01:17.189><c> work</c><00:01:17.430><c> at</c><00:01:17.580><c> the</c><00:01:17.670><c> end</c><00:01:17.880><c> of</c><00:01:18.150><c> that</c>

00:01:18.320 --> 00:01:18.330 align:start position:0%
always inserting work at the end of that
 

00:01:18.330 --> 00:01:20.539 align:start position:0%
always inserting work at the end of that
queue<00:01:18.659><c> the</c><00:01:19.110><c> handler</c><00:01:19.680><c> class</c><00:01:19.860><c> gives</c><00:01:20.310><c> you</c><00:01:20.430><c> the</c>

00:01:20.539 --> 00:01:20.549 align:start position:0%
queue the handler class gives you the
 

00:01:20.549 --> 00:01:22.010 align:start position:0%
queue the handler class gives you the
control<00:01:20.700><c> to</c><00:01:20.880><c> push</c><00:01:21.150><c> work</c><00:01:21.299><c> at</c><00:01:21.450><c> the</c><00:01:21.540><c> head</c><00:01:21.780><c> the</c>

00:01:22.010 --> 00:01:22.020 align:start position:0%
control to push work at the head the
 

00:01:22.020 --> 00:01:24.530 align:start position:0%
control to push work at the head the
tail<00:01:22.500><c> or</c><00:01:22.830><c> a</c><00:01:22.860><c> set</c><00:01:23.220><c> a</c><00:01:23.250><c> time-based</c><00:01:23.580><c> delay</c><00:01:24.119><c> that</c>

00:01:24.530 --> 00:01:24.540 align:start position:0%
tail or a set a time-based delay that
 

00:01:24.540 --> 00:01:25.730 align:start position:0%
tail or a set a time-based delay that
will<00:01:24.630><c> keep</c><00:01:24.750><c> some</c><00:01:24.990><c> work</c><00:01:25.170><c> from</c><00:01:25.320><c> being</c><00:01:25.500><c> processed</c>

00:01:25.730 --> 00:01:25.740 align:start position:0%
will keep some work from being processed
 

00:01:25.740 --> 00:01:27.649 align:start position:0%
will keep some work from being processed
until<00:01:26.310><c> that</c><00:01:26.490><c> time</c><00:01:26.759><c> has</c><00:01:27.060><c> passed</c>

00:01:27.649 --> 00:01:27.659 align:start position:0%
until that time has passed
 

00:01:27.659 --> 00:01:29.359 align:start position:0%
until that time has passed
and<00:01:27.780><c> don't</c><00:01:28.409><c> forget</c><00:01:28.619><c> the</c><00:01:28.740><c> units</c><00:01:28.979><c> of</c><00:01:29.100><c> work</c><00:01:29.130><c> in</c>

00:01:29.359 --> 00:01:29.369 align:start position:0%
and don't forget the units of work in
 

00:01:29.369 --> 00:01:31.880 align:start position:0%
and don't forget the units of work in
Android<00:01:29.759><c> you</c><00:01:29.970><c> are</c><00:01:30.360><c> explicitly</c><00:01:31.229><c> defined</c><00:01:31.680><c> as</c>

00:01:31.880 --> 00:01:31.890 align:start position:0%
Android you are explicitly defined as
 

00:01:31.890 --> 00:01:34.429 align:start position:0%
Android you are explicitly defined as
intense<00:01:32.340><c> or</c><00:01:32.549><c> runnable</c><00:01:33.390><c> Zoar</c><00:01:33.630><c> messages</c>

00:01:34.429 --> 00:01:34.439 align:start position:0%
intense or runnable Zoar messages
 

00:01:34.439 --> 00:01:36.260 align:start position:0%
intense or runnable Zoar messages
depending<00:01:35.040><c> on</c><00:01:35.130><c> who's</c><00:01:35.430><c> issuing</c><00:01:35.640><c> them</c><00:01:36.030><c> and</c>

00:01:36.260 --> 00:01:36.270 align:start position:0%
depending on who's issuing them and
 

00:01:36.270 --> 00:01:38.120 align:start position:0%
depending on who's issuing them and
who's<00:01:36.570><c> consuming</c><00:01:37.350><c> them</c><00:01:37.470><c> and</c><00:01:37.619><c> then</c><00:01:38.009><c> the</c>

00:01:38.120 --> 00:01:38.130 align:start position:0%
who's consuming them and then the
 

00:01:38.130 --> 00:01:39.560 align:start position:0%
who's consuming them and then the
combination<00:01:38.729><c> of</c><00:01:38.820><c> all</c><00:01:38.939><c> these</c><00:01:39.119><c> things</c><00:01:39.329><c> together</c>

00:01:39.560 --> 00:01:39.570 align:start position:0%
combination of all these things together
 

00:01:39.570 --> 00:01:42.830 align:start position:0%
combination of all these things together
is<00:01:39.960><c> called</c><00:01:40.530><c> a</c><00:01:40.710><c> handler</c><00:01:41.579><c> thread</c><00:01:42.060><c> which</c><00:01:42.540><c> lets</c>

00:01:42.830 --> 00:01:42.840 align:start position:0%
is called a handler thread which lets
 

00:01:42.840 --> 00:01:46.609 align:start position:0%
is called a handler thread which lets
this<00:01:43.290><c> look</c><00:01:44.070><c> like</c><00:01:44.280><c> this</c><00:01:44.880><c> pretty</c><00:01:45.509><c> nifty</c><00:01:45.750><c> huh</c><00:01:46.020><c> so</c>

00:01:46.609 --> 00:01:46.619 align:start position:0%
this look like this pretty nifty huh so
 

00:01:46.619 --> 00:01:47.929 align:start position:0%
this look like this pretty nifty huh so
let's<00:01:46.829><c> look</c><00:01:46.920><c> at</c><00:01:47.040><c> how</c><00:01:47.159><c> you</c><00:01:47.220><c> can</c><00:01:47.310><c> use</c><00:01:47.460><c> this</c><00:01:47.700><c> in</c>

00:01:47.929 --> 00:01:47.939 align:start position:0%
let's look at how you can use this in
 

00:01:47.939 --> 00:01:50.179 align:start position:0%
let's look at how you can use this in
your<00:01:48.110><c> application</c><00:01:49.110><c> when</c><00:01:49.649><c> the</c><00:01:49.680><c> user</c><00:01:49.890><c> launches</c>

00:01:50.179 --> 00:01:50.189 align:start position:0%
your application when the user launches
 

00:01:50.189 --> 00:01:52.399 align:start position:0%
your application when the user launches
your<00:01:50.490><c> app</c><00:01:50.700><c> Android</c><00:01:51.210><c> creates</c><00:01:51.570><c> its</c><00:01:51.689><c> own</c><00:01:51.840><c> Linux</c>

00:01:52.399 --> 00:01:52.409 align:start position:0%
your app Android creates its own Linux
 

00:01:52.409 --> 00:01:54.590 align:start position:0%
your app Android creates its own Linux
process<00:01:53.100><c> alongside</c><00:01:53.430><c> with</c><00:01:53.909><c> this</c><00:01:54.060><c> the</c><00:01:54.240><c> system</c>

00:01:54.590 --> 00:01:54.600 align:start position:0%
process alongside with this the system
 

00:01:54.600 --> 00:01:56.539 align:start position:0%
process alongside with this the system
creates<00:01:54.899><c> a</c><00:01:55.020><c> thread</c><00:01:55.380><c> of</c><00:01:55.500><c> execution</c><00:01:55.649><c> for</c><00:01:56.100><c> your</c>

00:01:56.539 --> 00:01:56.549 align:start position:0%
creates a thread of execution for your
 

00:01:56.549 --> 00:01:59.209 align:start position:0%
creates a thread of execution for your
application<00:01:57.180><c> called</c><00:01:57.479><c> the</c><00:01:57.659><c> main</c><00:01:58.020><c> thread</c><00:01:58.770><c> which</c>

00:01:59.209 --> 00:01:59.219 align:start position:0%
application called the main thread which
 

00:01:59.219 --> 00:02:01.550 align:start position:0%
application called the main thread which
at<00:01:59.490><c> its</c><00:01:59.670><c> core</c><00:01:59.939><c> is</c><00:02:00.149><c> just</c><00:02:00.180><c> a</c><00:02:00.750><c> handler</c><00:02:01.290><c> thread</c>

00:02:01.550 --> 00:02:01.560 align:start position:0%
at its core is just a handler thread
 

00:02:01.560 --> 00:02:03.560 align:start position:0%
at its core is just a handler thread
this<00:02:02.009><c> main</c><00:02:02.280><c> thread</c><00:02:02.579><c> handles</c><00:02:02.939><c> processing</c><00:02:03.420><c> of</c>

00:02:03.560 --> 00:02:03.570 align:start position:0%
this main thread handles processing of
 

00:02:03.570 --> 00:02:05.990 align:start position:0%
this main thread handles processing of
events<00:02:03.899><c> from</c><00:02:04.020><c> all</c><00:02:04.170><c> over</c><00:02:04.710><c> your</c><00:02:05.310><c> app</c><00:02:05.549><c> for</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
events from all over your app for
 

00:02:06.000 --> 00:02:07.609 align:start position:0%
events from all over your app for
example<00:02:06.090><c> callbacks</c><00:02:06.990><c> associated</c><00:02:07.530><c> with</c>

00:02:07.609 --> 00:02:07.619 align:start position:0%
example callbacks associated with
 

00:02:07.619 --> 00:02:09.619 align:start position:0%
example callbacks associated with
lifecycle<00:02:08.160><c> information</c><00:02:08.640><c> or</c><00:02:08.789><c> callbacks</c><00:02:09.479><c> from</c>

00:02:09.619 --> 00:02:09.629 align:start position:0%
lifecycle information or callbacks from
 

00:02:09.629 --> 00:02:11.600 align:start position:0%
lifecycle information or callbacks from
input<00:02:10.020><c> events</c><00:02:10.289><c> or</c><00:02:10.500><c> even</c><00:02:10.739><c> events</c><00:02:11.370><c> that</c><00:02:11.520><c> are</c>

00:02:11.600 --> 00:02:11.610 align:start position:0%
input events or even events that are
 

00:02:11.610 --> 00:02:13.770 align:start position:0%
input events or even events that are
coming<00:02:11.819><c> from</c><00:02:12.090><c> other</c><00:02:12.300><c> applications</c><00:02:13.200><c> and</c>

00:02:13.770 --> 00:02:13.780 align:start position:0%
coming from other applications and
 

00:02:13.780 --> 00:02:15.360 align:start position:0%
coming from other applications and
most<00:02:13.900><c> important</c><00:02:14.380><c> is</c><00:02:14.500><c> that</c><00:02:14.530><c> these</c><00:02:14.800><c> callbacks</c>

00:02:15.360 --> 00:02:15.370 align:start position:0%
most important is that these callbacks
 

00:02:15.370 --> 00:02:17.850 align:start position:0%
most important is that these callbacks
can<00:02:15.580><c> trigger</c><00:02:15.850><c> other</c><00:02:16.090><c> work</c><00:02:16.870><c> that</c><00:02:17.140><c> runs</c><00:02:17.650><c> on</c>

00:02:17.850 --> 00:02:17.860 align:start position:0%
can trigger other work that runs on
 

00:02:17.860 --> 00:02:19.860 align:start position:0%
can trigger other work that runs on
their<00:02:18.010><c> thread</c><00:02:18.340><c> -</c><00:02:18.700><c> like</c><00:02:19.060><c> making</c><00:02:19.390><c> a</c><00:02:19.480><c> change</c><00:02:19.720><c> to</c>

00:02:19.860 --> 00:02:19.870 align:start position:0%
their thread - like making a change to
 

00:02:19.870 --> 00:02:21.930 align:start position:0%
their thread - like making a change to
the<00:02:19.959><c> UI</c><00:02:20.110><c> will</c><00:02:20.830><c> create</c><00:02:21.069><c> work</c><00:02:21.370><c> packets</c><00:02:21.819><c> that</c>

00:02:21.930 --> 00:02:21.940 align:start position:0%
the UI will create work packets that
 

00:02:21.940 --> 00:02:24.720 align:start position:0%
the UI will create work packets that
allow<00:02:22.209><c> the</c><00:02:22.270><c> UI</c><00:02:22.660><c> to</c><00:02:22.840><c> be</c><00:02:23.050><c> redrawn</c><00:02:23.730><c> basically</c>

00:02:24.720 --> 00:02:24.730 align:start position:0%
allow the UI to be redrawn basically
 

00:02:24.730 --> 00:02:26.550 align:start position:0%
allow the UI to be redrawn basically
this<00:02:24.910><c> means</c><00:02:25.120><c> that</c><00:02:25.330><c> any</c><00:02:25.510><c> block</c><00:02:25.780><c> of</c><00:02:25.959><c> code</c><00:02:26.170><c> your</c>

00:02:26.550 --> 00:02:26.560 align:start position:0%
this means that any block of code your
 

00:02:26.560 --> 00:02:28.830 align:start position:0%
this means that any block of code your
app<00:02:26.770><c> wants</c><00:02:27.040><c> to</c><00:02:27.280><c> run</c><00:02:27.490><c> has</c><00:02:27.880><c> to</c><00:02:28.030><c> be</c><00:02:28.060><c> pushed</c><00:02:28.420><c> into</c><00:02:28.690><c> a</c>

00:02:28.830 --> 00:02:28.840 align:start position:0%
app wants to run has to be pushed into a
 

00:02:28.840 --> 00:02:30.930 align:start position:0%
app wants to run has to be pushed into a
work<00:02:29.050><c> queue</c><00:02:29.319><c> and</c><00:02:29.530><c> then</c><00:02:29.680><c> serviced</c><00:02:30.220><c> on</c><00:02:30.400><c> the</c><00:02:30.760><c> main</c>

00:02:30.930 --> 00:02:30.940 align:start position:0%
work queue and then serviced on the main
 

00:02:30.940 --> 00:02:33.059 align:start position:0%
work queue and then serviced on the main
thread<00:02:31.270><c> the</c><00:02:31.810><c> takeaway</c><00:02:32.170><c> here</c><00:02:32.200><c> is</c><00:02:32.470><c> that</c><00:02:32.590><c> with</c><00:02:32.739><c> so</c>

00:02:33.059 --> 00:02:33.069 align:start position:0%
thread the takeaway here is that with so
 

00:02:33.069 --> 00:02:34.530 align:start position:0%
thread the takeaway here is that with so
much<00:02:33.250><c> work</c><00:02:33.459><c> happening</c><00:02:33.910><c> on</c><00:02:34.000><c> the</c><00:02:34.120><c> main</c><00:02:34.239><c> thread</c>

00:02:34.530 --> 00:02:34.540 align:start position:0%
much work happening on the main thread
 

00:02:34.540 --> 00:02:36.540 align:start position:0%
much work happening on the main thread
it<00:02:34.870><c> makes</c><00:02:35.140><c> a</c><00:02:35.260><c> lot</c><00:02:35.560><c> of</c><00:02:35.590><c> sense</c><00:02:36.010><c> to</c><00:02:36.130><c> offload</c>

00:02:36.540 --> 00:02:36.550 align:start position:0%
it makes a lot of sense to offload
 

00:02:36.550 --> 00:02:39.030 align:start position:0%
it makes a lot of sense to offload
longer<00:02:37.150><c> work</c><00:02:37.360><c> to</c><00:02:37.569><c> other</c><00:02:37.810><c> threads</c><00:02:38.290><c> as</c><00:02:38.470><c> to</c><00:02:38.890><c> not</c>

00:02:39.030 --> 00:02:39.040 align:start position:0%
longer work to other threads as to not
 

00:02:39.040 --> 00:02:41.250 align:start position:0%
longer work to other threads as to not
disturb<00:02:39.430><c> the</c><00:02:39.640><c> UI</c><00:02:39.760><c> system</c><00:02:39.940><c> from</c><00:02:40.600><c> its</c><00:02:40.840><c> rendering</c>

00:02:41.250 --> 00:02:41.260 align:start position:0%
disturb the UI system from its rendering
 

00:02:41.260 --> 00:02:43.650 align:start position:0%
disturb the UI system from its rendering
duties<00:02:41.739><c> and</c><00:02:41.920><c> this</c><00:02:42.580><c> is</c><00:02:42.730><c> how</c><00:02:42.880><c> the</c><00:02:42.940><c> entirety</c><00:02:43.630><c> of</c>

00:02:43.650 --> 00:02:43.660 align:start position:0%
duties and this is how the entirety of
 

00:02:43.660 --> 00:02:45.750 align:start position:0%
duties and this is how the entirety of
androids<00:02:44.230><c> threading</c><00:02:44.739><c> model</c><00:02:44.860><c> works</c><00:02:45.250><c> now</c><00:02:45.459><c> lots</c>

00:02:45.750 --> 00:02:45.760 align:start position:0%
androids threading model works now lots
 

00:02:45.760 --> 00:02:47.670 align:start position:0%
androids threading model works now lots
of<00:02:45.940><c> packages</c><00:02:46.600><c> of</c><00:02:46.870><c> work</c><00:02:47.050><c> being</c><00:02:47.260><c> passed</c><00:02:47.530><c> around</c>

00:02:47.670 --> 00:02:47.680 align:start position:0%
of packages of work being passed around
 

00:02:47.680 --> 00:02:49.860 align:start position:0%
of packages of work being passed around
between<00:02:47.920><c> threads</c><00:02:48.459><c> and</c><00:02:48.640><c> worked</c><00:02:48.970><c> on</c><00:02:49.120><c> as</c><00:02:49.330><c> needed</c>

00:02:49.860 --> 00:02:49.870 align:start position:0%
between threads and worked on as needed
 

00:02:49.870 --> 00:02:52.500 align:start position:0%
between threads and worked on as needed
so<00:02:50.280><c> with</c><00:02:51.280><c> all</c><00:02:51.400><c> this</c><00:02:51.519><c> in</c><00:02:51.670><c> mind</c><00:02:51.700><c> some</c><00:02:52.390><c> of</c>

00:02:52.500 --> 00:02:52.510 align:start position:0%
so with all this in mind some of
 

00:02:52.510 --> 00:02:54.540 align:start position:0%
so with all this in mind some of
androids<00:02:53.140><c> threading</c><00:02:53.500><c> classes</c><00:02:53.890><c> make</c><00:02:54.130><c> a</c><00:02:54.250><c> little</c>

00:02:54.540 --> 00:02:54.550 align:start position:0%
androids threading classes make a little
 

00:02:54.550 --> 00:02:57.060 align:start position:0%
androids threading classes make a little
bit<00:02:54.730><c> more</c><00:02:55.000><c> sense</c><00:02:55.300><c> see</c><00:02:55.750><c> each</c><00:02:56.110><c> threaded</c><00:02:56.769><c> class</c>

00:02:57.060 --> 00:02:57.070 align:start position:0%
bit more sense see each threaded class
 

00:02:57.070 --> 00:02:59.220 align:start position:0%
bit more sense see each threaded class
is<00:02:57.310><c> intended</c><00:02:57.670><c> for</c><00:02:57.700><c> a</c><00:02:57.880><c> specific</c><00:02:58.239><c> type</c><00:02:59.200><c> of</c>

00:02:59.220 --> 00:02:59.230 align:start position:0%
is intended for a specific type of
 

00:02:59.230 --> 00:03:00.840 align:start position:0%
is intended for a specific type of
threading<00:02:59.769><c> work</c><00:02:59.980><c> so</c><00:03:00.220><c> picking</c><00:03:00.459><c> the</c><00:03:00.550><c> right</c><00:03:00.640><c> one</c>

00:03:00.840 --> 00:03:00.850 align:start position:0%
threading work so picking the right one
 

00:03:00.850 --> 00:03:03.390 align:start position:0%
threading work so picking the right one
for<00:03:01.060><c> your</c><00:03:01.480><c> needs</c><00:03:01.660><c> is</c><00:03:01.900><c> really</c><00:03:02.290><c> important</c><00:03:02.860><c> for</c>

00:03:03.390 --> 00:03:03.400 align:start position:0%
for your needs is really important for
 

00:03:03.400 --> 00:03:06.059 align:start position:0%
for your needs is really important for
example<00:03:03.459><c> the</c><00:03:03.880><c> async</c><00:03:04.450><c> task</c><00:03:04.810><c> class</c><00:03:05.200><c> is</c><00:03:05.440><c> ideal</c>

00:03:06.059 --> 00:03:06.069 align:start position:0%
example the async task class is ideal
 

00:03:06.069 --> 00:03:08.009 align:start position:0%
example the async task class is ideal
for<00:03:06.100><c> helping</c><00:03:06.670><c> you</c><00:03:06.760><c> get</c><00:03:06.910><c> work</c><00:03:07.150><c> on</c><00:03:07.330><c> and</c><00:03:07.660><c> off</c><00:03:07.810><c> the</c>

00:03:08.009 --> 00:03:08.019 align:start position:0%
for helping you get work on and off the
 

00:03:08.019 --> 00:03:10.020 align:start position:0%
for helping you get work on and off the
UI<00:03:08.140><c> thread</c><00:03:08.500><c> in</c><00:03:08.709><c> the</c><00:03:08.860><c> right</c><00:03:09.040><c> way</c><00:03:09.280><c> handler</c>

00:03:10.020 --> 00:03:10.030 align:start position:0%
UI thread in the right way handler
 

00:03:10.030 --> 00:03:11.460 align:start position:0%
UI thread in the right way handler
threads<00:03:10.330><c> are</c><00:03:10.510><c> great</c><00:03:11.050><c> when</c><00:03:11.230><c> you</c><00:03:11.319><c> need</c><00:03:11.440><c> a</c>

00:03:11.460 --> 00:03:11.470 align:start position:0%
threads are great when you need a
 

00:03:11.470 --> 00:03:13.559 align:start position:0%
threads are great when you need a
dedicated<00:03:11.860><c> thread</c><00:03:12.430><c> for</c><00:03:12.640><c> callbacks</c><00:03:13.180><c> to</c><00:03:13.360><c> land</c>

00:03:13.559 --> 00:03:13.569 align:start position:0%
dedicated thread for callbacks to land
 

00:03:13.569 --> 00:03:15.750 align:start position:0%
dedicated thread for callbacks to land
on<00:03:13.750><c> and</c><00:03:13.959><c> thread</c><00:03:14.470><c> pools</c><00:03:14.709><c> work</c><00:03:15.250><c> best</c><00:03:15.489><c> when</c><00:03:15.640><c> you</c>

00:03:15.750 --> 00:03:15.760 align:start position:0%
on and thread pools work best when you
 

00:03:15.760 --> 00:03:17.070 align:start position:0%
on and thread pools work best when you
can<00:03:15.880><c> break</c><00:03:16.030><c> your</c><00:03:16.180><c> work</c><00:03:16.330><c> up</c><00:03:16.450><c> into</c><00:03:16.569><c> really</c><00:03:16.900><c> small</c>

00:03:17.070 --> 00:03:17.080 align:start position:0%
can break your work up into really small
 

00:03:17.080 --> 00:03:19.470 align:start position:0%
can break your work up into really small
packets<00:03:17.709><c> and</c><00:03:17.799><c> then</c><00:03:18.280><c> toss</c><00:03:18.610><c> them</c><00:03:18.880><c> to</c><00:03:19.030><c> a</c><00:03:19.060><c> bunch</c><00:03:19.329><c> of</c>

00:03:19.470 --> 00:03:19.480 align:start position:0%
packets and then toss them to a bunch of
 

00:03:19.480 --> 00:03:21.569 align:start position:0%
packets and then toss them to a bunch of
waiting<00:03:19.870><c> threads</c><00:03:20.170><c> and</c><00:03:20.380><c> intent</c><00:03:21.010><c> services</c><00:03:21.430><c> are</c>

00:03:21.569 --> 00:03:21.579 align:start position:0%
waiting threads and intent services are
 

00:03:21.579 --> 00:03:23.310 align:start position:0%
waiting threads and intent services are
really<00:03:21.850><c> ideal</c><00:03:21.970><c> for</c><00:03:22.180><c> background</c><00:03:22.900><c> tasks</c><00:03:23.230><c> or</c>

00:03:23.310 --> 00:03:23.320 align:start position:0%
really ideal for background tasks or
 

00:03:23.320 --> 00:03:25.319 align:start position:0%
really ideal for background tasks or
when<00:03:23.890><c> you</c><00:03:23.980><c> need</c><00:03:24.130><c> to</c><00:03:24.160><c> get</c><00:03:24.310><c> intent</c><00:03:24.670><c> work</c><00:03:24.850><c> off</c><00:03:25.030><c> the</c>

00:03:25.319 --> 00:03:25.329 align:start position:0%
when you need to get intent work off the
 

00:03:25.329 --> 00:03:27.390 align:start position:0%
when you need to get intent work off the
UI<00:03:25.510><c> thread</c><00:03:25.870><c> and</c><00:03:26.170><c> like</c><00:03:26.829><c> everything</c><00:03:27.310><c> else</c>

00:03:27.390 --> 00:03:27.400 align:start position:0%
UI thread and like everything else
 

00:03:27.400 --> 00:03:29.340 align:start position:0%
UI thread and like everything else
there's<00:03:27.760><c> not</c><00:03:28.000><c> a</c><00:03:28.030><c> silver</c><00:03:28.570><c> bullet</c><00:03:28.900><c> here</c><00:03:29.170><c> but</c>

00:03:29.340 --> 00:03:29.350 align:start position:0%
there's not a silver bullet here but
 

00:03:29.350 --> 00:03:31.020 align:start position:0%
there's not a silver bullet here but
knowing<00:03:29.560><c> which</c><00:03:29.829><c> primitive</c><00:03:30.310><c> is</c><00:03:30.430><c> best</c><00:03:30.640><c> for</c><00:03:30.790><c> what</c>

00:03:31.020 --> 00:03:31.030 align:start position:0%
knowing which primitive is best for what
 

00:03:31.030 --> 00:03:33.120 align:start position:0%
knowing which primitive is best for what
situation<00:03:31.600><c> can</c><00:03:32.049><c> save</c><00:03:32.260><c> you</c><00:03:32.530><c> a</c><00:03:32.560><c> lot</c><00:03:32.769><c> of</c>

00:03:33.120 --> 00:03:33.130 align:start position:0%
situation can save you a lot of
 

00:03:33.130 --> 00:03:35.009 align:start position:0%
situation can save you a lot of
headaches<00:03:33.790><c> now</c><00:03:34.360><c> if</c><00:03:34.450><c> you</c><00:03:34.510><c> ever</c><00:03:34.600><c> want</c><00:03:34.870><c> more</c>

00:03:35.009 --> 00:03:35.019 align:start position:0%
headaches now if you ever want more
 

00:03:35.019 --> 00:03:37.110 align:start position:0%
headaches now if you ever want more
insight<00:03:35.380><c> into</c><00:03:35.410><c> how</c><00:03:35.799><c> your</c><00:03:35.980><c> app</c><00:03:36.190><c> is</c><00:03:36.370><c> leveraging</c>

00:03:37.110 --> 00:03:37.120 align:start position:0%
insight into how your app is leveraging
 

00:03:37.120 --> 00:03:38.850 align:start position:0%
insight into how your app is leveraging
threading<00:03:37.540><c> make</c><00:03:37.930><c> sure</c><00:03:38.110><c> you</c><00:03:38.230><c> spend</c><00:03:38.530><c> some</c><00:03:38.709><c> time</c>

00:03:38.850 --> 00:03:38.860 align:start position:0%
threading make sure you spend some time
 

00:03:38.860 --> 00:03:41.160 align:start position:0%
threading make sure you spend some time
getting<00:03:39.040><c> comfortable</c><00:03:39.310><c> with</c><00:03:39.660><c> systrace</c><00:03:40.660><c> it's</c><00:03:40.959><c> a</c>

00:03:41.160 --> 00:03:41.170 align:start position:0%
getting comfortable with systrace it's a
 

00:03:41.170 --> 00:03:43.500 align:start position:0%
getting comfortable with systrace it's a
fancy<00:03:41.739><c> tool</c><00:03:41.980><c> that</c><00:03:42.459><c> will</c><00:03:42.579><c> school</c><00:03:42.940><c> you</c><00:03:42.970><c> on</c><00:03:43.299><c> how</c>

00:03:43.500 --> 00:03:43.510 align:start position:0%
fancy tool that will school you on how
 

00:03:43.510 --> 00:03:45.599 align:start position:0%
fancy tool that will school you on how
about<00:03:43.810><c> that</c><00:03:44.109><c> mumbo-jumbo</c><00:03:44.620><c> is</c><00:03:45.220><c> working</c>

00:03:45.599 --> 00:03:45.609 align:start position:0%
about that mumbo-jumbo is working
 

00:03:45.609 --> 00:03:47.490 align:start position:0%
about that mumbo-jumbo is working
underneath<00:03:46.209><c> the</c><00:03:46.600><c> hood</c><00:03:46.780><c> and</c><00:03:47.049><c> if</c><00:03:47.410><c> you're</c>

00:03:47.490 --> 00:03:47.500 align:start position:0%
underneath the hood and if you're
 

00:03:47.500 --> 00:03:49.199 align:start position:0%
underneath the hood and if you're
looking<00:03:47.709><c> to</c><00:03:47.799><c> get</c><00:03:47.920><c> schooled</c><00:03:48.220><c> more</c><00:03:48.489><c> make</c><00:03:49.000><c> sure</c>

00:03:49.199 --> 00:03:49.209 align:start position:0%
looking to get schooled more make sure
 

00:03:49.209 --> 00:03:50.430 align:start position:0%
looking to get schooled more make sure
you<00:03:49.329><c> check</c><00:03:49.480><c> out</c><00:03:49.630><c> the</c><00:03:49.660><c> rest</c><00:03:49.840><c> of</c><00:03:49.989><c> the</c><00:03:50.079><c> Android</c>

00:03:50.430 --> 00:03:50.440 align:start position:0%
you check out the rest of the Android
 

00:03:50.440 --> 00:03:51.990 align:start position:0%
you check out the rest of the Android
performance<00:03:50.530><c> patterns</c><00:03:51.130><c> videos</c><00:03:51.489><c> and</c><00:03:51.910><c> don't</c>

00:03:51.990 --> 00:03:52.000 align:start position:0%
performance patterns videos and don't
 

00:03:52.000 --> 00:03:54.000 align:start position:0%
performance patterns videos and don't
forget<00:03:52.120><c> to</c><00:03:52.329><c> join</c><00:03:52.390><c> our</c><00:03:52.720><c> Google+</c><00:03:53.320><c> community</c><00:03:53.440><c> for</c>

00:03:54.000 --> 00:03:54.010 align:start position:0%
forget to join our Google+ community for
 

00:03:54.010 --> 00:03:56.580 align:start position:0%
forget to join our Google+ community for
more<00:03:54.459><c> tips</c><00:03:54.730><c> and</c><00:03:54.880><c> tricks</c><00:03:55.239><c> on</c><00:03:55.510><c> threading</c><00:03:56.079><c> so</c>

00:03:56.580 --> 00:03:56.590 align:start position:0%
more tips and tricks on threading so
 

00:03:56.590 --> 00:03:58.710 align:start position:0%
more tips and tricks on threading so
keep<00:03:57.010><c> calm</c><00:03:57.250><c> profile</c><00:03:57.970><c> your</c><00:03:58.000><c> code</c><00:03:58.150><c> and</c><00:03:58.359><c> always</c>

00:03:58.710 --> 00:03:58.720 align:start position:0%
keep calm profile your code and always
 

00:03:58.720 --> 00:04:01.680 align:start position:0%
keep calm profile your code and always
remember<00:03:58.900><c> perf</c><00:03:59.200><c> matters</c>

