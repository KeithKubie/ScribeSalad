WEBVTT
Kind: captions
Language: en

00:00:00.490 --> 00:00:02.450
Alright, so over the course of this lesson we've

00:00:02.450 --> 00:00:05.458
discussed how to perform some basic computations using the

00:00:05.458 --> 00:00:08.630
Mapreduce programming model. For example, counting words in a

00:00:08.630 --> 00:00:12.680
collection of text, or aggregating adhar generated in a particular

00:00:12.680 --> 00:00:15.760
district. These jobs are easy to write in the

00:00:15.760 --> 00:00:19.280
Mapreduce programming model, and even so, solving these problems with

00:00:19.280 --> 00:00:22.010
Mapreduce requires a lot more code than they would

00:00:22.010 --> 00:00:25.690
if we didn't use Mapreduce. For example, compare our original

00:00:25.690 --> 00:00:28.450
word count solution using Python dictionaries to

00:00:28.450 --> 00:00:31.080
our Mapreduce solution. As you can see,

00:00:31.080 --> 00:00:33.140
the Mapreduce implementation is quite a deal

00:00:33.140 --> 00:00:35.180
more involved. You can imagine that if

00:00:35.180 --> 00:00:37.270
we wanted to do something more complicated,

00:00:37.270 --> 00:00:39.590
say compute the similarity between the number

00:00:39.590 --> 00:00:41.800
of documents, or implement some machine learning

00:00:41.800 --> 00:00:44.940
algorithm, things could get pretty hairy, pretty fast.

