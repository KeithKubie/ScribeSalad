WEBVTT
Kind: captions
Language: en

00:00:00.730 --> 00:00:04.320
So we verified a listing is within
a half an hour walk from work.

00:00:04.320 --> 00:00:08.360
Doesn't make me take a ferry and we're
able to verify that our pancake house,

00:00:08.360 --> 00:00:10.728
gelateria, school, or
hospital is in the area.

00:00:10.728 --> 00:00:14.972
But after a search query turns up those
results we want to see more about those

00:00:14.972 --> 00:00:17.437
places in our potential
new neighborhood.

00:00:17.437 --> 00:00:20.267
Luckily the places library
is a ridiculously large

00:00:20.267 --> 00:00:23.570
database full of useful tidbits
about the world around us.

00:00:24.790 --> 00:00:26.980
Places returned in both
our auto complete and

00:00:26.980 --> 00:00:29.520
search box have unique
identifiers called place IDs.

00:00:30.590 --> 00:00:33.140
You should be aware that you can
pass them just like latlongs and

00:00:33.140 --> 00:00:36.020
many of the services such as
distance matrix and directions APIs.

00:00:37.250 --> 00:00:41.120
Place IDs are the keys that you get back
tons of details about an establishment

00:00:41.120 --> 00:00:41.620
or location.

00:00:42.760 --> 00:00:45.970
When we get the list of results from
our search box, we get place IDs for

00:00:45.970 --> 00:00:46.490
all of them.

00:00:47.820 --> 00:00:50.810
Let's take a look at a few
examples of using the place IDs

00:00:50.810 --> 00:00:54.330
in the place details web service to see
what kind of details are available.

00:00:55.520 --> 00:00:57.370
We already have a place
ID here to test out.

00:00:58.450 --> 00:01:01.810
We'll be getting the place IDs within
our site from our search box or

00:01:01.810 --> 00:01:03.310
text search query.

00:01:03.310 --> 00:01:07.010
But for the web service request,
we can get place IDs from the places,

00:01:07.010 --> 00:01:10.570
text, nearby or radar searches.

00:01:10.570 --> 00:01:12.840
Check out the link in the instructor
notes for how to do that.

00:01:14.340 --> 00:01:16.290
We need to use the place
IDs to search for

00:01:16.290 --> 00:01:19.620
place details which is the demonstration
that we're about to do.

00:01:21.980 --> 00:01:25.550
Again, I'm specifying that I'm doing
a place detail search here and

00:01:25.550 --> 00:01:27.620
that I want the response in JSON format.

00:01:29.400 --> 00:01:32.680
I'm passing in a place ID and
my API key.

00:01:34.660 --> 00:01:37.549
Here's the response that we get back for
the Google Sydney office.

00:01:38.970 --> 00:01:42.130
I'm going to minimize the address
components and the geometry.

00:01:43.970 --> 00:01:47.590
We can see here that we get back an
international phone number, the name for

00:01:47.590 --> 00:01:53.240
the place, some photos, a rating,

00:01:53.240 --> 00:01:59.400
not sure where those .5 points went,
lots of reviews, and the type.

00:01:59.400 --> 00:02:04.821
So we can tell this is an establishment,
which means it's a business.

00:02:04.821 --> 00:02:07.456
All of these photos have photo
reference IDs, seen here.

00:02:07.456 --> 00:02:12.625
We can build another simple URL
to use the photo reference IDs

00:02:12.625 --> 00:02:17.830
using an API key and
a photo reference parameter, and a wif.

00:02:17.830 --> 00:02:20.340
This time I'm making
a places photo request.

00:02:21.340 --> 00:02:25.090
Again I specify a width,
the photo reference ID

00:02:25.090 --> 00:02:28.470
that I got back from the place
details request, and my API key.

00:02:28.470 --> 00:02:33.300
That's the places photo that we were
given in our place details request.

00:02:34.640 --> 00:02:37.240
Let's do another place ID as an example.

00:02:37.240 --> 00:02:38.780
This is a great little coffee shop.

00:02:38.780 --> 00:02:41.450
You may or may not have heard of it.

00:02:41.450 --> 00:02:44.810
We can see that this is the Starbucks
on Broadway in the city.

00:02:44.810 --> 00:02:46.750
Now we can see some pretty useful stuff.

00:02:46.750 --> 00:02:48.908
Operating hours are really useful for
one thing.

00:02:48.908 --> 00:02:53.310
We'll use these on our site later when
we will get place detail results.

00:02:53.310 --> 00:02:54.750
Notice that we get back for

00:02:54.750 --> 00:02:59.370
display purposes text, but also granular
data of the periods when it's open.

00:03:01.640 --> 00:03:03.210
Again we get back the photos.

00:03:05.590 --> 00:03:08.380
We also again get back the rating and
reviews.

00:03:08.380 --> 00:03:11.890
So for example if I wanted to limit
my results to things open for

00:03:11.890 --> 00:03:14.680
certain hours or
above a certain rating I could do that.

00:03:15.760 --> 00:03:18.330
If you're making a restaurant reviewer
search app these things could be

00:03:18.330 --> 00:03:18.949
really important to you.

00:03:20.570 --> 00:03:21.420
Let's get back to our site.

00:03:23.070 --> 00:03:26.680
So we're already getting back all the
place IDs when we do the text search or

00:03:26.680 --> 00:03:28.620
the search box query.

00:03:28.620 --> 00:03:31.750
So let's add an OnClick event
on the markers that appear

00:03:31.750 --> 00:03:34.260
that'll display some placed
details about each marker.

00:03:35.790 --> 00:03:38.820
Remember, we need the places
library loaded to do this.

00:03:39.860 --> 00:03:42.870
We already included it in order to
use auto-complete, and search box.

00:03:44.200 --> 00:03:47.860
We're going to add to our create
markers for places function.

00:03:47.860 --> 00:03:49.860
For each place marker that we create,

00:03:49.860 --> 00:03:54.060
we're going to add an event listener
to call a get details function.

00:03:54.060 --> 00:03:56.970
We're going to create a single info
window here that we'll share between

00:03:56.970 --> 00:04:01.900
the different place markers that we only
have set of place details open at once.

00:04:01.900 --> 00:04:05.860
And then we'll add our event listener
for a click event on the marker.

00:04:05.860 --> 00:04:08.440
This will call a get
place details function,

00:04:08.440 --> 00:04:13.170
passing in the marker which is this and
the placeInfoWindow.

00:04:13.170 --> 00:04:14.120
Let's define that now.

00:04:15.630 --> 00:04:20.730
Our getPlace details function is
going to use the placeID to execute

00:04:20.730 --> 00:04:22.790
a placeDetailSearch.

00:04:22.790 --> 00:04:26.340
And then it's going to display a bunch
of that information in an info window

00:04:26.340 --> 00:04:28.410
above the place marker.

00:04:28.410 --> 00:04:33.150
We'll create a new places service and
use the getDetails method.

00:04:33.150 --> 00:04:37.380
Passing in the place ID which
we set as the marker ID before.

00:04:37.380 --> 00:04:39.100
We'll get back the results.

00:04:39.100 --> 00:04:41.420
Check that the status is okay.

00:04:41.420 --> 00:04:44.340
And then parse through all that
neat data that we saw before

00:04:44.340 --> 00:04:45.950
in the web service call.

00:04:45.950 --> 00:04:49.190
We'll put all of this data into
the info window that we create,

00:04:49.190 --> 00:04:51.300
including the first photo
reference that we get.

00:04:52.900 --> 00:04:55.760
Remember, not every place ID will return

00:04:55.760 --> 00:04:58.910
all of the details that we
saw in the web service calls.

00:04:58.910 --> 00:05:01.130
Some of them may not have opening hours,

00:05:01.130 --> 00:05:04.180
some of them may not have
a phone number, et cetera.

00:05:04.180 --> 00:05:07.730
So we have to check for the existence of
each of these pieces of data before we

00:05:07.730 --> 00:05:09.320
actually display it in the info window.

00:05:10.490 --> 00:05:11.220
Let's test this out.

00:05:12.870 --> 00:05:15.840
Let's click on some of these
markers to get more results.

00:05:15.840 --> 00:05:18.800
We can see the place name,
the formatted address,

00:05:18.800 --> 00:05:24.870
the phone number, the operating
hours and a nice little thumbnail.

00:05:24.870 --> 00:05:26.810
A 24 hour IHOP!

00:05:26.810 --> 00:05:28.900
Jackpot.
All right, so

00:05:28.900 --> 00:05:30.890
I think this is really
going to help our users.

00:05:30.890 --> 00:05:33.950
At this point they'd be able to find the
places of interest in the neighborhoods

00:05:33.950 --> 00:05:35.840
that they could potentially live in.

00:05:35.840 --> 00:05:37.960
Let's review our places
API skills in a quiz.

