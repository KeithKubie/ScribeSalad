WEBVTT
Kind: captions
Language: en

00:00:00.150 --> 00:00:03.060
In this problem, we're given an input string and

00:00:03.060 --> 00:00:06.470
the parse chart that was created from parsing that string.

00:00:06.470 --> 00:00:09.080
And we're tasked with finding the grammar on which

00:00:09.080 --> 00:00:11.570
that token was parsed. So let's look at the problem.

00:00:11.570 --> 00:00:13.630
Here we have the given string, and here we

00:00:13.630 --> 00:00:17.585
have the parse chart. Our strategy is going to go

00:00:17.585 --> 00:00:21.020
through each line of the parse chart and look through

00:00:21.020 --> 00:00:25.390
the rules that explicitly appear for the first time. Say,

00:00:25.390 --> 00:00:27.880
this one right here that indicates E goes

00:00:27.880 --> 00:00:31.330
to parenthesis E parenthesis, is explicitly in the

00:00:31.330 --> 00:00:34.200
grammar. Add those to the grammar. Run the

00:00:34.200 --> 00:00:37.670
parsing algorithm. And then we're going to see if

00:00:37.670 --> 00:00:40.040
using that grammar on this token generates this

00:00:40.040 --> 00:00:44.000
exact parse chart. So let's get started. Looking at

00:00:44.000 --> 00:00:50.680
chart state zero, we see six rules right here. Each of these six rules has to be

00:00:50.680 --> 00:00:53.650
in the grammar because no tokens have been read, and we're at

00:00:53.650 --> 00:00:55.610
the beginning of each of them. So let's add those to the

00:00:55.610 --> 00:00:59.210
grammar. Okay, here's the six rules we were given in the first

00:00:59.210 --> 00:01:01.650
state of the parsing chart. And if we run this through our parser,

00:01:01.650 --> 00:01:04.239
we'll see the chart that it generates is not exactly the same.

00:01:04.239 --> 00:01:08.415
So we're missing something. Let's keep going. Here, we have the continuation of

00:01:08.415 --> 00:01:12.070
five rules. And if you look closely, there are no new rules

00:01:12.070 --> 00:01:15.710
here. These are all just shifts of the rules that we found in

00:01:15.710 --> 00:01:18.170
chart state zero. The minus comes from the minus, the

00:01:18.170 --> 00:01:20.724
plus comes form the plus, and so on. So let's

00:01:20.724 --> 00:01:24.120
move on to chart two. Here we go. A goes

00:01:24.120 --> 00:01:28.610
to nothing, that's new. A goes to NA, also new. And

00:01:28.610 --> 00:01:32.000
lastly, we have the two rule, two rules for NA.

00:01:32.000 --> 00:01:35.030
So let's put that into our grammar. If we run

00:01:35.030 --> 00:01:37.410
this grammar in our parser with that token, we'll see

00:01:37.410 --> 00:01:40.490
that we get the same exact chart that we were given,

00:01:40.490 --> 00:01:41.620
meaning that we found the answer.

