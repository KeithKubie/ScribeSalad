WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.670
 
[Music]

00:00:03.670 --> 00:00:03.680
[Music]
 

00:00:03.680 --> 00:00:06.380
[Music]
I'm gonna show you this hysteresis and

00:00:06.380 --> 00:00:06.390
I'm gonna show you this hysteresis and
 

00:00:06.390 --> 00:00:09.070
I'm gonna show you this hysteresis and
I'm gonna show you how to spot issues

00:00:09.070 --> 00:00:09.080
I'm gonna show you how to spot issues
 

00:00:09.080 --> 00:00:12.200
I'm gonna show you how to spot issues
issues that we found a plenty of course

00:00:12.200 --> 00:00:12.210
issues that we found a plenty of course
 

00:00:12.210 --> 00:00:18.290
issues that we found a plenty of course
but for we're most widespread yes I

00:00:18.290 --> 00:00:18.300
but for we're most widespread yes I
 

00:00:18.300 --> 00:00:21.260
but for we're most widespread yes I
would say that these for performance

00:00:21.260 --> 00:00:21.270
would say that these for performance
 

00:00:21.270 --> 00:00:25.790
would say that these for performance
pitfalls were basically an every game I

00:00:25.790 --> 00:00:25.800
pitfalls were basically an every game I
 

00:00:25.800 --> 00:00:28.609
pitfalls were basically an every game I
so had one two or three of them I've

00:00:28.609 --> 00:00:28.619
so had one two or three of them I've
 

00:00:28.619 --> 00:00:30.109
so had one two or three of them I've
just found myself saying the same thing

00:00:30.109 --> 00:00:30.119
just found myself saying the same thing
 

00:00:30.119 --> 00:00:30.830
just found myself saying the same thing
over and over again

00:00:30.830 --> 00:00:30.840
over and over again
 

00:00:30.840 --> 00:00:33.470
over and over again
I said let's locate by your to him bunch

00:00:33.470 --> 00:00:33.480
I said let's locate by your to him bunch
 

00:00:33.480 --> 00:00:34.940
I said let's locate by your to him bunch
of other people so I don't have to

00:00:34.940 --> 00:00:34.950
of other people so I don't have to
 

00:00:34.950 --> 00:00:38.750
of other people so I don't have to
repeat myself of it all the time I'm

00:00:38.750 --> 00:00:38.760
repeat myself of it all the time I'm
 

00:00:38.760 --> 00:00:41.209
repeat myself of it all the time I'm
gonna go in depth on on each one of them

00:00:41.209 --> 00:00:41.219
gonna go in depth on on each one of them
 

00:00:41.219 --> 00:00:42.680
gonna go in depth on on each one of them
I'm gonna show you these traces and how

00:00:42.680 --> 00:00:42.690
I'm gonna show you these traces and how
 

00:00:42.690 --> 00:00:46.910
I'm gonna show you these traces and how
to you spot it in your game that's the

00:00:46.910 --> 00:00:46.920
to you spot it in your game that's the
 

00:00:46.920 --> 00:00:53.779
to you spot it in your game that's the
first one and this is this race this is

00:00:53.779 --> 00:00:53.789
first one and this is this race this is
 

00:00:53.789 --> 00:00:56.600
first one and this is this race this is
basically insert the number of course

00:00:56.600 --> 00:00:56.610
basically insert the number of course
 

00:00:56.610 --> 00:01:00.020
basically insert the number of course
eight in this case and you can see all

00:01:00.020 --> 00:01:00.030
eight in this case and you can see all
 

00:01:00.030 --> 00:01:01.779
eight in this case and you can see all
the threads running in the system and

00:01:01.779 --> 00:01:01.789
the threads running in the system and
 

00:01:01.789 --> 00:01:04.609
the threads running in the system and
you can see these thread number three

00:01:04.609 --> 00:01:04.619
you can see these thread number three
 

00:01:04.619 --> 00:01:09.310
you can see these thread number three
which is basically grabbing one core

00:01:09.310 --> 00:01:09.320
which is basically grabbing one core
 

00:01:09.320 --> 00:01:11.660
which is basically grabbing one core
twos jumping from one to the other but

00:01:11.660 --> 00:01:11.670
twos jumping from one to the other but
 

00:01:11.670 --> 00:01:13.010
twos jumping from one to the other but
essential is grabbing one core and

00:01:13.010 --> 00:01:13.020
essential is grabbing one core and
 

00:01:13.020 --> 00:01:15.200
essential is grabbing one core and
hammering it while the rest of system

00:01:15.200 --> 00:01:15.210
hammering it while the rest of system
 

00:01:15.210 --> 00:01:19.670
hammering it while the rest of system
does nothing it's that's how a single

00:01:19.670 --> 00:01:19.680
does nothing it's that's how a single
 

00:01:19.680 --> 00:01:27.039
does nothing it's that's how a single
thread game looks in series and that is

00:01:27.039 --> 00:01:27.049
 
 

00:01:27.049 --> 00:01:30.260
 
okay in the sense that if you're making

00:01:30.260 --> 00:01:30.270
okay in the sense that if you're making
 

00:01:30.270 --> 00:01:34.160
okay in the sense that if you're making
a casual game a single thread casual

00:01:34.160 --> 00:01:34.170
a casual game a single thread casual
 

00:01:34.170 --> 00:01:35.749
a casual game a single thread casual
game is the right thing to do I get it

00:01:35.749 --> 00:01:35.759
game is the right thing to do I get it
 

00:01:35.759 --> 00:01:38.149
game is the right thing to do I get it
it's just much easier the architecture

00:01:38.149 --> 00:01:38.159
it's just much easier the architecture
 

00:01:38.159 --> 00:01:41.179
it's just much easier the architecture
is easier everything is simpler you

00:01:41.179 --> 00:01:41.189
is easier everything is simpler you
 

00:01:41.189 --> 00:01:42.889
is easier everything is simpler you
don't have to look at synchronization I

00:01:42.889 --> 00:01:42.899
don't have to look at synchronization I
 

00:01:42.899 --> 00:01:47.690
don't have to look at synchronization I
get it it's a simple thing to do but if

00:01:47.690 --> 00:01:47.700
get it it's a simple thing to do but if
 

00:01:47.700 --> 00:01:49.399
get it it's a simple thing to do but if
you're pushing the boundaries a little

00:01:49.399 --> 00:01:49.409
you're pushing the boundaries a little
 

00:01:49.409 --> 00:01:51.499
you're pushing the boundaries a little
bit more well you have eight course

00:01:51.499 --> 00:01:51.509
bit more well you have eight course
 

00:01:51.509 --> 00:01:53.840
bit more well you have eight course
you're using one it's a matter of

00:01:53.840 --> 00:01:53.850
you're using one it's a matter of
 

00:01:53.850 --> 00:01:56.209
you're using one it's a matter of
performance but as we're gonna see later

00:01:56.209 --> 00:01:56.219
performance but as we're gonna see later
 

00:01:56.219 --> 00:02:02.240
performance but as we're gonna see later
it's not only about performance this is

00:02:02.240 --> 00:02:02.250
it's not only about performance this is
 

00:02:02.250 --> 00:02:05.419
it's not only about performance this is
an example of a unity game

00:02:05.419 --> 00:02:05.429
an example of a unity game
 

00:02:05.429 --> 00:02:07.279
an example of a unity game
I'm not gonna ask you many unity

00:02:07.279 --> 00:02:07.289
I'm not gonna ask you many unity
 

00:02:07.289 --> 00:02:08.749
I'm not gonna ask you many unity
developers are here it's like everyone

00:02:08.749 --> 00:02:08.759
developers are here it's like everyone
 

00:02:08.759 --> 00:02:11.180
developers are here it's like everyone
asks the same question but I believe

00:02:11.180 --> 00:02:11.190
asks the same question but I believe
 

00:02:11.190 --> 00:02:13.729
asks the same question but I believe
there gonna be many there's gonna be a

00:02:13.729 --> 00:02:13.739
there gonna be many there's gonna be a
 

00:02:13.739 --> 00:02:14.930
there gonna be many there's gonna be a
unity main thread

00:02:14.930 --> 00:02:14.940
unity main thread
 

00:02:14.940 --> 00:02:18.740
unity main thread
single thread hammering a system just

00:02:18.740 --> 00:02:18.750
single thread hammering a system just
 

00:02:18.750 --> 00:02:21.100
single thread hammering a system just
want core everything else does nothing

00:02:21.100 --> 00:02:21.110
want core everything else does nothing
 

00:02:21.110 --> 00:02:24.020
want core everything else does nothing
that's how it typically looks like a

00:02:24.020 --> 00:02:24.030
that's how it typically looks like a
 

00:02:24.030 --> 00:02:26.509
that's how it typically looks like a
unity and that's actually very very

00:02:26.509 --> 00:02:26.519
unity and that's actually very very
 

00:02:26.519 --> 00:02:31.670
unity and that's actually very very
simple to fix that's it click click I

00:02:31.670 --> 00:02:31.680
simple to fix that's it click click I
 

00:02:31.680 --> 00:02:33.589
simple to fix that's it click click I
think multi-thread ready that that one

00:02:33.589 --> 00:02:33.599
think multi-thread ready that that one
 

00:02:33.599 --> 00:02:36.830
think multi-thread ready that that one
here just click it it's it's gonna make

00:02:36.830 --> 00:02:36.840
here just click it it's it's gonna make
 

00:02:36.840 --> 00:02:40.640
here just click it it's it's gonna make
your game run faster and be better it

00:02:40.640 --> 00:02:40.650
your game run faster and be better it
 

00:02:40.650 --> 00:02:43.460
your game run faster and be better it
will make me happier since you're there

00:02:43.460 --> 00:02:43.470
will make me happier since you're there
 

00:02:43.470 --> 00:02:45.520
will make me happier since you're there
you you click the GPO skinning as well

00:02:45.520 --> 00:02:45.530
you you click the GPO skinning as well
 

00:02:45.530 --> 00:02:48.500
you you click the GPO skinning as well
because you don't want to skin on the

00:02:48.500 --> 00:02:48.510
because you don't want to skin on the
 

00:02:48.510 --> 00:02:51.979
because you don't want to skin on the
CPU it's bad and it makes me cry I don't

00:02:51.979 --> 00:02:51.989
CPU it's bad and it makes me cry I don't
 

00:02:51.989 --> 00:02:57.460
CPU it's bad and it makes me cry I don't
have a picture for that but imagine it

00:02:57.460 --> 00:02:57.470
 
 

00:02:57.470 --> 00:03:00.369
 
once you click that that's how your

00:03:00.369 --> 00:03:00.379
once you click that that's how your
 

00:03:00.379 --> 00:03:02.180
once you click that that's how your
system is going to look there's gonna be

00:03:02.180 --> 00:03:02.190
system is going to look there's gonna be
 

00:03:02.190 --> 00:03:05.150
system is going to look there's gonna be
a nice main thread which is processing

00:03:05.150 --> 00:03:05.160
a nice main thread which is processing
 

00:03:05.160 --> 00:03:09.140
a nice main thread which is processing
you entity each entity will generate a

00:03:09.140 --> 00:03:09.150
you entity each entity will generate a
 

00:03:09.150 --> 00:03:11.539
you entity each entity will generate a
bunch of graphics command for a render

00:03:11.539 --> 00:03:11.549
bunch of graphics command for a render
 

00:03:11.549 --> 00:03:13.879
bunch of graphics command for a render
thread that will take this graphics

00:03:13.879 --> 00:03:13.889
thread that will take this graphics
 

00:03:13.889 --> 00:03:17.090
thread that will take this graphics
command and in parallel it will generate

00:03:17.090 --> 00:03:17.100
command and in parallel it will generate
 

00:03:17.100 --> 00:03:20.000
command and in parallel it will generate
a bunch of random commands for the GPU

00:03:20.000 --> 00:03:20.010
a bunch of random commands for the GPU
 

00:03:20.010 --> 00:03:21.979
a bunch of random commands for the GPU
which ones in parallel now instead of

00:03:21.979 --> 00:03:21.989
which ones in parallel now instead of
 

00:03:21.989 --> 00:03:25.039
which ones in parallel now instead of
having a fryer that is hammering one

00:03:25.039 --> 00:03:25.049
having a fryer that is hammering one
 

00:03:25.049 --> 00:03:27.110
having a fryer that is hammering one
core you have two threads at least

00:03:27.110 --> 00:03:27.120
core you have two threads at least
 

00:03:27.120 --> 00:03:33.559
core you have two threads at least
you're polarizing your work and that's

00:03:33.559 --> 00:03:33.569
you're polarizing your work and that's
 

00:03:33.569 --> 00:03:34.940
you're polarizing your work and that's
how systrace is going to look like

00:03:34.940 --> 00:03:34.950
how systrace is going to look like
 

00:03:34.950 --> 00:03:37.849
how systrace is going to look like
you're gonna have unity main it'll be

00:03:37.849 --> 00:03:37.859
you're gonna have unity main it'll be
 

00:03:37.859 --> 00:03:41.960
you're gonna have unity main it'll be
smaller unity GFX device I don't know

00:03:41.960 --> 00:03:41.970
smaller unity GFX device I don't know
 

00:03:41.970 --> 00:03:46.250
smaller unity GFX device I don't know
why W I always wondered why this is not

00:03:46.250 --> 00:03:46.260
why W I always wondered why this is not
 

00:03:46.260 --> 00:03:48.890
why W I always wondered why this is not
going to give you a double frame right

00:03:48.890 --> 00:03:48.900
going to give you a double frame right
 

00:03:48.900 --> 00:03:51.080
going to give you a double frame right
straight out of the gate because you're

00:03:51.080 --> 00:03:51.090
straight out of the gate because you're
 

00:03:51.090 --> 00:03:53.180
straight out of the gate because you're
not probably gonna part gonna have

00:03:53.180 --> 00:03:53.190
not probably gonna part gonna have
 

00:03:53.190 --> 00:03:55.430
not probably gonna part gonna have
workloads that are exactly the same time

00:03:55.430 --> 00:03:55.440
workloads that are exactly the same time
 

00:03:55.440 --> 00:03:58.009
workloads that are exactly the same time
and can be just perfectly paralyzed but

00:03:58.009 --> 00:03:58.019
and can be just perfectly paralyzed but
 

00:03:58.019 --> 00:04:01.460
and can be just perfectly paralyzed but
I mean you see it's a pretty decent

00:04:01.460 --> 00:04:01.470
I mean you see it's a pretty decent
 

00:04:01.470 --> 00:04:03.349
I mean you see it's a pretty decent
difference you're gonna get something

00:04:03.349 --> 00:04:03.359
difference you're gonna get something
 

00:04:03.359 --> 00:04:06.559
difference you're gonna get something
out of it more interestingly you're

00:04:06.559 --> 00:04:06.569
out of it more interestingly you're
 

00:04:06.569 --> 00:04:09.710
out of it more interestingly you're
gonna let the CPU that is running unity

00:04:09.710 --> 00:04:09.720
gonna let the CPU that is running unity
 

00:04:09.720 --> 00:04:12.920
gonna let the CPU that is running unity
main have the chance to sleep for a

00:04:12.920 --> 00:04:12.930
main have the chance to sleep for a
 

00:04:12.930 --> 00:04:15.140
main have the chance to sleep for a
little bit we'll see why it's very very

00:04:15.140 --> 00:04:15.150
little bit we'll see why it's very very
 

00:04:15.150 --> 00:04:16.780
little bit we'll see why it's very very
important to let

00:04:16.780 --> 00:04:16.790
important to let
 

00:04:16.790 --> 00:04:22.240
important to let
course asleep sounds weird at the end of

00:04:22.240 --> 00:04:22.250
course asleep sounds weird at the end of
 

00:04:22.250 --> 00:04:24.160
course asleep sounds weird at the end of
the day you want to paralyze your

00:04:24.160 --> 00:04:24.170
the day you want to paralyze your
 

00:04:24.170 --> 00:04:26.410
the day you want to paralyze your
workloads because they will give you

00:04:26.410 --> 00:04:26.420
workloads because they will give you
 

00:04:26.420 --> 00:04:30.040
workloads because they will give you
better performance but also because if

00:04:30.040 --> 00:04:30.050
better performance but also because if
 

00:04:30.050 --> 00:04:33.960
better performance but also because if
you don't do that that's what happens

00:04:33.960 --> 00:04:33.970
you don't do that that's what happens
 

00:04:33.970 --> 00:04:40.210
you don't do that that's what happens
higher power consumption that's a direct

00:04:40.210 --> 00:04:40.220
higher power consumption that's a direct
 

00:04:40.220 --> 00:04:43.660
higher power consumption that's a direct
consequence of having one single thread

00:04:43.660 --> 00:04:43.670
consequence of having one single thread
 

00:04:43.670 --> 00:04:47.310
consequence of having one single thread
that does everything it means that

00:04:47.310 --> 00:04:47.320
that does everything it means that
 

00:04:47.320 --> 00:04:50.230
that does everything it means that
you're gonna consume more power you're

00:04:50.230 --> 00:04:50.240
you're gonna consume more power you're
 

00:04:50.240 --> 00:04:52.170
you're gonna consume more power you're
gonna drain the battery much faster

00:04:52.170 --> 00:04:52.180
gonna drain the battery much faster
 

00:04:52.180 --> 00:04:56.170
gonna drain the battery much faster
which leads us to the second issue this

00:04:56.170 --> 00:04:56.180
which leads us to the second issue this
 

00:04:56.180 --> 00:04:59.470
which leads us to the second issue this
is a gigantic deal this is a big deal if

00:04:59.470 --> 00:04:59.480
is a gigantic deal this is a big deal if
 

00:04:59.480 --> 00:05:01.300
is a gigantic deal this is a big deal if
there is one thing that I need you to

00:05:01.300 --> 00:05:01.310
there is one thing that I need you to
 

00:05:01.310 --> 00:05:03.580
there is one thing that I need you to
remember out of here is thermal

00:05:03.580 --> 00:05:03.590
remember out of here is thermal
 

00:05:03.590 --> 00:05:08.740
remember out of here is thermal
throttling as a big deal that's because

00:05:08.740 --> 00:05:08.750
throttling as a big deal that's because
 

00:05:08.750 --> 00:05:12.790
throttling as a big deal that's because
on mobile performance is not constant

00:05:12.790 --> 00:05:12.800
on mobile performance is not constant
 

00:05:12.800 --> 00:05:16.450
on mobile performance is not constant
over time you think I worked on console

00:05:16.450 --> 00:05:16.460
over time you think I worked on console
 

00:05:16.460 --> 00:05:22.120
over time you think I worked on console
MPC pattern console small fun but once I

00:05:22.120 --> 00:05:22.130
MPC pattern console small fun but once I
 

00:05:22.130 --> 00:05:28.390
MPC pattern console small fun but once I
made my frame take 33 milliseconds to

00:05:28.390 --> 00:05:28.400
made my frame take 33 milliseconds to
 

00:05:28.400 --> 00:05:33.070
made my frame take 33 milliseconds to
process I was done I lived in Ingham at

00:05:33.070 --> 00:05:33.080
process I was done I lived in Ingham at
 

00:05:33.080 --> 00:05:34.510
process I was done I lived in Ingham at
the time everyone was going to the pub

00:05:34.510 --> 00:05:34.520
the time everyone was going to the pub
 

00:05:34.520 --> 00:05:37.990
the time everyone was going to the pub
I'm Italian I was having a coffee please

00:05:37.990 --> 00:05:38.000
I'm Italian I was having a coffee please
 

00:05:38.000 --> 00:05:39.400
I'm Italian I was having a coffee please
don't have cappuccino after lunch it's

00:05:39.400 --> 00:05:39.410
don't have cappuccino after lunch it's
 

00:05:39.410 --> 00:05:43.850
don't have cappuccino after lunch it's
bad

00:05:43.850 --> 00:05:43.860
 
 

00:05:43.860 --> 00:05:46.760
 
all mobile things are much different on

00:05:46.760 --> 00:05:46.770
all mobile things are much different on
 

00:05:46.770 --> 00:05:50.480
all mobile things are much different on
mobile once you you render 33

00:05:50.480 --> 00:05:50.490
mobile once you you render 33
 

00:05:50.490 --> 00:05:53.300
mobile once you you render 33
milliseconds for a frame here's what

00:05:53.300 --> 00:05:53.310
milliseconds for a frame here's what
 

00:05:53.310 --> 00:05:55.310
milliseconds for a frame here's what
happens you have your curve fully

00:05:55.310 --> 00:05:55.320
happens you have your curve fully
 

00:05:55.320 --> 00:05:57.950
happens you have your curve fully
optimized game you give it to someone to

00:05:57.950 --> 00:05:57.960
optimized game you give it to someone to
 

00:05:57.960 --> 00:06:00.370
optimized game you give it to someone to
play it looks great it runs beautifully

00:06:00.370 --> 00:06:00.380
play it looks great it runs beautifully
 

00:06:00.380 --> 00:06:04.280
play it looks great it runs beautifully
for 10 minutes and then this device is

00:06:04.280 --> 00:06:04.290
for 10 minutes and then this device is
 

00:06:04.290 --> 00:06:07.450
for 10 minutes and then this device is
gonna get hot device getting hot means

00:06:07.450 --> 00:06:07.460
gonna get hot device getting hot means
 

00:06:07.460 --> 00:06:10.790
gonna get hot device getting hot means
performance will go down because phones

00:06:10.790 --> 00:06:10.800
performance will go down because phones
 

00:06:10.800 --> 00:06:12.620
performance will go down because phones
that explode generally are not perceived

00:06:12.620 --> 00:06:12.630
that explode generally are not perceived
 

00:06:12.630 --> 00:06:17.450
that explode generally are not perceived
well by clients so manufacturers have to

00:06:17.450 --> 00:06:17.460
well by clients so manufacturers have to
 

00:06:17.460 --> 00:06:20.480
well by clients so manufacturers have to
slow things down so the device can cool

00:06:20.480 --> 00:06:20.490
slow things down so the device can cool
 

00:06:20.490 --> 00:06:22.460
slow things down so the device can cool
down so your game that was running at 30

00:06:22.460 --> 00:06:22.470
down so your game that was running at 30
 

00:06:22.470 --> 00:06:24.320
down so your game that was running at 30
frames per second on the clock now is

00:06:24.320 --> 00:06:24.330
frames per second on the clock now is
 

00:06:24.330 --> 00:06:28.700
frames per second on the clock now is
running at 20 15 10 and your customer

00:06:28.700 --> 00:06:28.710
running at 20 15 10 and your customer
 

00:06:28.710 --> 00:06:30.980
running at 20 15 10 and your customer
will go and play and write you and 1

00:06:30.980 --> 00:06:30.990
will go and play and write you and 1
 

00:06:30.990 --> 00:06:35.890
will go and play and write you and 1
star review once the reviews are bad I

00:06:35.890 --> 00:06:35.900
 
 

00:06:35.900 --> 00:06:40.000
 
have an equation on my slide I know must

00:06:40.000 --> 00:06:40.010
have an equation on my slide I know must
 

00:06:40.010 --> 00:06:49.310
have an equation on my slide I know must
look at that power consumption for a CPU

00:06:49.310 --> 00:06:49.320
look at that power consumption for a CPU
 

00:06:49.320 --> 00:06:53.840
look at that power consumption for a CPU
is equal to capacitance thingy see

00:06:53.840 --> 00:06:53.850
is equal to capacitance thingy see
 

00:06:53.850 --> 00:06:56.410
is equal to capacitance thingy see
nothing as a constant of some sort

00:06:56.410 --> 00:06:56.420
nothing as a constant of some sort
 

00:06:56.420 --> 00:07:00.350
nothing as a constant of some sort
x squared of the voltage multiplied by

00:07:00.350 --> 00:07:00.360
x squared of the voltage multiplied by
 

00:07:00.360 --> 00:07:04.550
x squared of the voltage multiplied by
its frequency now you see stress you can

00:07:04.550 --> 00:07:04.560
its frequency now you see stress you can
 

00:07:04.560 --> 00:07:07.940
its frequency now you see stress you can
see for each core the frequency like

00:07:07.940 --> 00:07:07.950
see for each core the frequency like
 

00:07:07.950 --> 00:07:13.610
see for each core the frequency like
value is like 2 bigots think and you can

00:07:13.610 --> 00:07:13.620
value is like 2 bigots think and you can
 

00:07:13.620 --> 00:07:15.890
value is like 2 bigots think and you can
see the thread 3 is basically maxing out

00:07:15.890 --> 00:07:15.900
see the thread 3 is basically maxing out
 

00:07:15.900 --> 00:07:19.880
see the thread 3 is basically maxing out
frequency on that core also in order to

00:07:19.880 --> 00:07:19.890
frequency on that core also in order to
 

00:07:19.890 --> 00:07:22.160
frequency on that core also in order to
run a max frequency the voltage has to

00:07:22.160 --> 00:07:22.170
run a max frequency the voltage has to
 

00:07:22.170 --> 00:07:24.910
run a max frequency the voltage has to
go up as well to maintain that tight

00:07:24.910 --> 00:07:24.920
go up as well to maintain that tight
 

00:07:24.920 --> 00:07:27.740
go up as well to maintain that tight
timings in the transistors at least

00:07:27.740 --> 00:07:27.750
timings in the transistors at least
 

00:07:27.750 --> 00:07:28.820
timings in the transistors at least
that's what they told me at the

00:07:28.820 --> 00:07:28.830
that's what they told me at the
 

00:07:28.830 --> 00:07:35.090
that's what they told me at the
University 25 years ago but also notice

00:07:35.090 --> 00:07:35.100
University 25 years ago but also notice
 

00:07:35.100 --> 00:07:39.680
University 25 years ago but also notice
this very interesting phenomenon the

00:07:39.680 --> 00:07:39.690
this very interesting phenomenon the
 

00:07:39.690 --> 00:07:40.790
this very interesting phenomenon the
frequency at some point goes down

00:07:40.790 --> 00:07:40.800
frequency at some point goes down
 

00:07:40.800 --> 00:07:43.610
frequency at some point goes down
because the scheduler decided to lower

00:07:43.610 --> 00:07:43.620
because the scheduler decided to lower
 

00:07:43.620 --> 00:07:47.480
because the scheduler decided to lower
the frequency but each core goes down at

00:07:47.480 --> 00:07:47.490
the frequency but each core goes down at
 

00:07:47.490 --> 00:07:49.670
the frequency but each core goes down at
the same time you can see like 1 2 3 4

00:07:49.670 --> 00:07:49.680
the same time you can see like 1 2 3 4
 

00:07:49.680 --> 00:07:51.560
the same time you can see like 1 2 3 4
times in a row they all go down at same

00:07:51.560 --> 00:07:51.570
times in a row they all go down at same
 

00:07:51.570 --> 00:07:56.780
times in a row they all go down at same
time that means that by virtue of every

00:07:56.780 --> 00:07:56.790
time that means that by virtue of every
 

00:07:56.790 --> 00:07:57.410
time that means that by virtue of every
third

00:07:57.410 --> 00:07:57.420
third
 

00:07:57.420 --> 00:08:00.890
third
three maxing got frequency in one of the

00:08:00.890 --> 00:08:00.900
three maxing got frequency in one of the
 

00:08:00.900 --> 00:08:02.900
three maxing got frequency in one of the
course and maxing out voltage of one the

00:08:02.900 --> 00:08:02.910
course and maxing out voltage of one the
 

00:08:02.910 --> 00:08:05.030
course and maxing out voltage of one the
course voltage is squared which is like

00:08:05.030 --> 00:08:05.040
course voltage is squared which is like
 

00:08:05.040 --> 00:08:07.250
course voltage is squared which is like
it's consuming a lot of power it's

00:08:07.250 --> 00:08:07.260
it's consuming a lot of power it's
 

00:08:07.260 --> 00:08:10.460
it's consuming a lot of power it's
forcing that small thread and to consume

00:08:10.460 --> 00:08:10.470
forcing that small thread and to consume
 

00:08:10.470 --> 00:08:12.320
forcing that small thread and to consume
a lot of power for a little bit of work

00:08:12.320 --> 00:08:12.330
a lot of power for a little bit of work
 

00:08:12.330 --> 00:08:14.570
a lot of power for a little bit of work
that most probably doesn't need to run

00:08:14.570 --> 00:08:14.580
that most probably doesn't need to run
 

00:08:14.580 --> 00:08:18.200
that most probably doesn't need to run
fast if that thing takes ten times to

00:08:18.200 --> 00:08:18.210
fast if that thing takes ten times to
 

00:08:18.210 --> 00:08:20.600
fast if that thing takes ten times to
run you will still hit thirty frames per

00:08:20.600 --> 00:08:20.610
run you will still hit thirty frames per
 

00:08:20.610 --> 00:08:26.650
run you will still hit thirty frames per
second most probably this phenomenon is

00:08:26.650 --> 00:08:26.660
second most probably this phenomenon is
 

00:08:26.660 --> 00:08:31.580
second most probably this phenomenon is
clearer here this is a Snapdragon 855

00:08:31.580 --> 00:08:31.590
clearer here this is a Snapdragon 855
 

00:08:31.590 --> 00:08:37.160
clearer here this is a Snapdragon 855
yep remember correctly this has two and

00:08:37.160 --> 00:08:37.170
yep remember correctly this has two and
 

00:08:37.170 --> 00:08:39.380
yep remember correctly this has two and
a half clusters of course the small ones

00:08:39.380 --> 00:08:39.390
a half clusters of course the small ones
 

00:08:39.390 --> 00:08:44.680
a half clusters of course the small ones
to run at a lower clock clock to three

00:08:44.680 --> 00:08:44.690
to run at a lower clock clock to three
 

00:08:44.690 --> 00:08:47.510
to run at a lower clock clock to three
cores to run a higher clock and there's

00:08:47.510 --> 00:08:47.520
cores to run a higher clock and there's
 

00:08:47.520 --> 00:08:50.870
cores to run a higher clock and there's
another one clock 3 the runs even higher

00:08:50.870 --> 00:08:50.880
another one clock 3 the runs even higher
 

00:08:50.880 --> 00:08:55.130
another one clock 3 the runs even higher
clock so basically each cluster has a

00:08:55.130 --> 00:08:55.140
clock so basically each cluster has a
 

00:08:55.140 --> 00:08:58.130
clock so basically each cluster has a
clock plane and each cluster is voltage

00:08:58.130 --> 00:08:58.140
clock plane and each cluster is voltage
 

00:08:58.140 --> 00:09:00.080
clock plane and each cluster is voltage
gated that means that each cluster runs

00:09:00.080 --> 00:09:00.090
gated that means that each cluster runs
 

00:09:00.090 --> 00:09:01.820
gated that means that each cluster runs
to the same voltage and the same clock

00:09:01.820 --> 00:09:01.830
to the same voltage and the same clock
 

00:09:01.830 --> 00:09:03.650
to the same voltage and the same clock
frequency except for clock three they

00:09:03.650 --> 00:09:03.660
frequency except for clock three they
 

00:09:03.660 --> 00:09:06.200
frequency except for clock three they
can run a different frequency from clock

00:09:06.200 --> 00:09:06.210
can run a different frequency from clock
 

00:09:06.210 --> 00:09:09.350
can run a different frequency from clock
to you interestingly even if it runs a

00:09:09.350 --> 00:09:09.360
to you interestingly even if it runs a
 

00:09:09.360 --> 00:09:11.330
to you interestingly even if it runs a
different frequency from clock to you

00:09:11.330 --> 00:09:11.340
different frequency from clock to you
 

00:09:11.340 --> 00:09:16.700
different frequency from clock to you
they still share the same voltage which

00:09:16.700 --> 00:09:16.710
they still share the same voltage which
 

00:09:16.710 --> 00:09:19.940
they still share the same voltage which
means if the voltage goes up through the

00:09:19.940 --> 00:09:19.950
means if the voltage goes up through the
 

00:09:19.950 --> 00:09:23.120
means if the voltage goes up through the
last view three more CPUs go up

00:09:23.120 --> 00:09:23.130
last view three more CPUs go up
 

00:09:23.130 --> 00:09:27.910
last view three more CPUs go up
everything consumes a lot of power one

00:09:27.910 --> 00:09:27.920
 
 

00:09:27.920 --> 00:09:31.300
 
big takeaway here course in a cluster

00:09:31.300 --> 00:09:31.310
big takeaway here course in a cluster
 

00:09:31.310 --> 00:09:36.350
big takeaway here course in a cluster
always share the same clock this doesn't

00:09:36.350 --> 00:09:36.360
always share the same clock this doesn't
 

00:09:36.360 --> 00:09:37.760
always share the same clock this doesn't
make me happy because it makes my life

00:09:37.760 --> 00:09:37.770
make me happy because it makes my life
 

00:09:37.770 --> 00:09:40.600
make me happy because it makes my life
harder and yours as well

00:09:40.600 --> 00:09:40.610
harder and yours as well
 

00:09:40.610 --> 00:09:43.790
harder and yours as well
on the other hand it's much simpler to

00:09:43.790 --> 00:09:43.800
on the other hand it's much simpler to
 

00:09:43.800 --> 00:09:48.320
on the other hand it's much simpler to
design and it's understandable why all

00:09:48.320 --> 00:09:48.330
design and it's understandable why all
 

00:09:48.330 --> 00:09:51.650
design and it's understandable why all
associates are designs why no exception

00:09:51.650 --> 00:09:51.660
associates are designs why no exception
 

00:09:51.660 --> 00:09:55.970
associates are designs why no exception
whatsoever

00:09:55.970 --> 00:09:55.980
 
 

00:09:55.980 --> 00:09:58.830
 
this is another example this is very

00:09:58.830 --> 00:09:58.840
this is another example this is very
 

00:09:58.840 --> 00:10:02.450
this is another example this is very
interesting because cpu 0 1 2 &amp; 3 are

00:10:02.450 --> 00:10:02.460
interesting because cpu 0 1 2 &amp; 3 are
 

00:10:02.460 --> 00:10:06.300
interesting because cpu 0 1 2 &amp; 3 are
little cores 4 5 6 &amp; 7 are big course

00:10:06.300 --> 00:10:06.310
little cores 4 5 6 &amp; 7 are big course
 

00:10:06.310 --> 00:10:10.440
little cores 4 5 6 &amp; 7 are big course
now every SOC I've ever seen has the

00:10:10.440 --> 00:10:10.450
now every SOC I've ever seen has the
 

00:10:10.450 --> 00:10:12.810
now every SOC I've ever seen has the
first course as little course with

00:10:12.810 --> 00:10:12.820
first course as little course with
 

00:10:12.820 --> 00:10:17.579
first course as little course with
smaller caches lower frequencies and the

00:10:17.579 --> 00:10:17.589
smaller caches lower frequencies and the
 

00:10:17.589 --> 00:10:19.970
smaller caches lower frequencies and the
last for course big course or even

00:10:19.970 --> 00:10:19.980
last for course big course or even
 

00:10:19.980 --> 00:10:23.430
last for course big course or even
bigger with larger caches higher

00:10:23.430 --> 00:10:23.440
bigger with larger caches higher
 

00:10:23.440 --> 00:10:25.680
bigger with larger caches higher
frequency much faster and much more

00:10:25.680 --> 00:10:25.690
frequency much faster and much more
 

00:10:25.690 --> 00:10:28.590
frequency much faster and much more
power hungry they all look the same but

00:10:28.590 --> 00:10:28.600
power hungry they all look the same but
 

00:10:28.600 --> 00:10:31.019
power hungry they all look the same but
please still do your due diligence and

00:10:31.019 --> 00:10:31.029
please still do your due diligence and
 

00:10:31.029 --> 00:10:33.540
please still do your due diligence and
try to understand the topology of the

00:10:33.540 --> 00:10:33.550
try to understand the topology of the
 

00:10:33.550 --> 00:10:36.090
try to understand the topology of the
SOC programmatically there are ways to

00:10:36.090 --> 00:10:36.100
SOC programmatically there are ways to
 

00:10:36.100 --> 00:10:38.040
SOC programmatically there are ways to
do it and we can talk about it later in

00:10:38.040 --> 00:10:38.050
do it and we can talk about it later in
 

00:10:38.050 --> 00:10:41.150
do it and we can talk about it later in
the game reviews you should come over

00:10:41.150 --> 00:10:41.160
the game reviews you should come over
 

00:10:41.160 --> 00:10:44.519
the game reviews you should come over
look at that W this is another Unity

00:10:44.519 --> 00:10:44.529
look at that W this is another Unity
 

00:10:44.529 --> 00:10:47.760
look at that W this is another Unity
game W is a worker thread all these

00:10:47.760 --> 00:10:47.770
game W is a worker thread all these
 

00:10:47.770 --> 00:10:49.410
game W is a worker thread all these
worker threads are running on CPU four

00:10:49.410 --> 00:10:49.420
worker threads are running on CPU four
 

00:10:49.420 --> 00:10:52.769
worker threads are running on CPU four
five six and seven and little cores are

00:10:52.769 --> 00:10:52.779
five six and seven and little cores are
 

00:10:52.779 --> 00:10:55.440
five six and seven and little cores are
doing nothing effectively these could be

00:10:55.440 --> 00:10:55.450
doing nothing effectively these could be
 

00:10:55.450 --> 00:10:57.540
doing nothing effectively these could be
running on a little coarse consume much

00:10:57.540 --> 00:10:57.550
running on a little coarse consume much
 

00:10:57.550 --> 00:10:58.260
running on a little coarse consume much
less power

00:10:58.260 --> 00:10:58.270
less power
 

00:10:58.270 --> 00:11:03.420
less power
and give the big cores more chances to

00:11:03.420 --> 00:11:03.430
and give the big cores more chances to
 

00:11:03.430 --> 00:11:05.340
and give the big cores more chances to
go to sleep going to sleep means no

00:11:05.340 --> 00:11:05.350
go to sleep going to sleep means no
 

00:11:05.350 --> 00:11:08.880
go to sleep going to sleep means no
power consumed it means lower

00:11:08.880 --> 00:11:08.890
power consumed it means lower
 

00:11:08.890 --> 00:11:10.950
power consumed it means lower
temperature in general less chances to

00:11:10.950 --> 00:11:10.960
temperature in general less chances to
 

00:11:10.960 --> 00:11:14.040
temperature in general less chances to
throttle less chances to go into thermal

00:11:14.040 --> 00:11:14.050
throttle less chances to go into thermal
 

00:11:14.050 --> 00:11:17.550
throttle less chances to go into thermal
throttle less chances to get the mice

00:11:17.550 --> 00:11:17.560
throttle less chances to get the mice
 

00:11:17.560 --> 00:11:22.800
throttle less chances to get the mice
hot because all phones sooner or later

00:11:22.800 --> 00:11:22.810
hot because all phones sooner or later
 

00:11:22.810 --> 00:11:25.079
hot because all phones sooner or later
will overheat and will be throttled and

00:11:25.079 --> 00:11:25.089
will overheat and will be throttled and
 

00:11:25.089 --> 00:11:27.750
will overheat and will be throttled and
that's not under control you will not be

00:11:27.750 --> 00:11:27.760
that's not under control you will not be
 

00:11:27.760 --> 00:11:31.890
that's not under control you will not be
told why you will not be told when every

00:11:31.890 --> 00:11:31.900
told why you will not be told when every
 

00:11:31.900 --> 00:11:33.900
told why you will not be told when every
device is different every manufacturer

00:11:33.900 --> 00:11:33.910
device is different every manufacturer
 

00:11:33.910 --> 00:11:36.030
device is different every manufacturer
has its own secret sauce on how to do it

00:11:36.030 --> 00:11:36.040
has its own secret sauce on how to do it
 

00:11:36.040 --> 00:11:39.030
has its own secret sauce on how to do it
it depends on the environment I mean if

00:11:39.030 --> 00:11:39.040
it depends on the environment I mean if
 

00:11:39.040 --> 00:11:41.010
it depends on the environment I mean if
you play in Finland probably for a while

00:11:41.010 --> 00:11:41.020
you play in Finland probably for a while
 

00:11:41.020 --> 00:11:46.020
you play in Finland probably for a while
if you play Nidalee nope it's not in

00:11:46.020 --> 00:11:46.030
if you play Nidalee nope it's not in
 

00:11:46.030 --> 00:11:49.829
if you play Nidalee nope it's not in
summer especially you have to do

00:11:49.829 --> 00:11:49.839
summer especially you have to do
 

00:11:49.839 --> 00:11:51.269
summer especially you have to do
everything in your power which means

00:11:51.269 --> 00:11:51.279
everything in your power which means
 

00:11:51.279 --> 00:11:53.550
everything in your power which means
sheep as much as possible to be executed

00:11:53.550 --> 00:11:53.560
sheep as much as possible to be executed
 

00:11:53.560 --> 00:11:57.210
sheep as much as possible to be executed
on little course in order to avoid

00:11:57.210 --> 00:11:57.220
on little course in order to avoid
 

00:11:57.220 --> 00:12:01.009
on little course in order to avoid
thermal throttling

00:12:01.009 --> 00:12:01.019
 
 

00:12:01.019 --> 00:12:03.449
 
at the end of the day distributor

00:12:03.449 --> 00:12:03.459
at the end of the day distributor
 

00:12:03.459 --> 00:12:05.610
at the end of the day distributor
workloads which is very similar from

00:12:05.610 --> 00:12:05.620
workloads which is very similar from
 

00:12:05.620 --> 00:12:08.850
workloads which is very similar from
paralyzer workloads going multi-threaded

00:12:08.850 --> 00:12:08.860
paralyzer workloads going multi-threaded
 

00:12:08.860 --> 00:12:10.350
paralyzer workloads going multi-threaded
will help you with thermal throttling as

00:12:10.350 --> 00:12:10.360
will help you with thermal throttling as
 

00:12:10.360 --> 00:12:17.670
will help you with thermal throttling as
well which workload you want to one

00:12:17.670 --> 00:12:17.680
well which workload you want to one
 

00:12:17.680 --> 00:12:20.370
well which workload you want to one
where well here's the thing high memory

00:12:20.370 --> 00:12:20.380
where well here's the thing high memory
 

00:12:20.380 --> 00:12:22.740
where well here's the thing high memory
bandwidth you're reading a lot from the

00:12:22.740 --> 00:12:22.750
bandwidth you're reading a lot from the
 

00:12:22.750 --> 00:12:25.050
bandwidth you're reading a lot from the
system memory or you need a lot of cash

00:12:25.050 --> 00:12:25.060
system memory or you need a lot of cash
 

00:12:25.060 --> 00:12:27.870
system memory or you need a lot of cash
to go fast well this kind of workload

00:12:27.870 --> 00:12:27.880
to go fast well this kind of workload
 

00:12:27.880 --> 00:12:33.930
to go fast well this kind of workload
goes well on a big core you're doing a

00:12:33.930 --> 00:12:33.940
goes well on a big core you're doing a
 

00:12:33.940 --> 00:12:37.470
goes well on a big core you're doing a
lot of math well lots of math means big

00:12:37.470 --> 00:12:37.480
lot of math well lots of math means big
 

00:12:37.480 --> 00:12:40.949
lot of math well lots of math means big
core again because big cores have the

00:12:40.949 --> 00:12:40.959
core again because big cores have the
 

00:12:40.959 --> 00:12:44.579
core again because big cores have the
mass instructions little coarse don't so

00:12:44.579 --> 00:12:44.589
mass instructions little coarse don't so
 

00:12:44.589 --> 00:12:48.300
mass instructions little coarse don't so
they're much lower everything else just

00:12:48.300 --> 00:12:48.310
they're much lower everything else just
 

00:12:48.310 --> 00:12:57.570
they're much lower everything else just
set the little coarse and make me happy

00:12:57.570 --> 00:12:57.580
 
 

00:12:57.580 --> 00:13:00.700
 
this is an interesting statistic this is

00:13:00.700 --> 00:13:00.710
this is an interesting statistic this is
 

00:13:00.710 --> 00:13:03.610
this is an interesting statistic this is
numbers on a pixel three a little core

00:13:03.610 --> 00:13:03.620
numbers on a pixel three a little core
 

00:13:03.620 --> 00:13:09.040
numbers on a pixel three a little core
consumes 331 million per peak or 215

00:13:09.040 --> 00:13:09.050
consumes 331 million per peak or 215
 

00:13:09.050 --> 00:13:13.720
consumes 331 million per peak or 215
it's a seven times ratio which means

00:13:13.720 --> 00:13:13.730
it's a seven times ratio which means
 

00:13:13.730 --> 00:13:17.040
it's a seven times ratio which means
that if you have a piece of work that

00:13:17.040 --> 00:13:17.050
that if you have a piece of work that
 

00:13:17.050 --> 00:13:20.440
that if you have a piece of work that
you move to a little core if that piece

00:13:20.440 --> 00:13:20.450
you move to a little core if that piece
 

00:13:20.450 --> 00:13:24.550
you move to a little core if that piece
of work takes less than seven times the

00:13:24.550 --> 00:13:24.560
of work takes less than seven times the
 

00:13:24.560 --> 00:13:27.100
of work takes less than seven times the
time to run when compared to the Bicol

00:13:27.100 --> 00:13:27.110
time to run when compared to the Bicol
 

00:13:27.110 --> 00:13:29.530
time to run when compared to the Bicol
your saving power as long as you run at

00:13:29.530 --> 00:13:29.540
your saving power as long as you run at
 

00:13:29.540 --> 00:13:32.970
your saving power as long as you run at
30 frames per second you're good that's

00:13:32.970 --> 00:13:32.980
30 frames per second you're good that's
 

00:13:32.980 --> 00:13:36.190
30 frames per second you're good that's
the kind of memory model that you have

00:13:36.190 --> 00:13:36.200
the kind of memory model that you have
 

00:13:36.200 --> 00:13:41.320
the kind of memory model that you have
to think about on the latest devices

00:13:41.320 --> 00:13:41.330
to think about on the latest devices
 

00:13:41.330 --> 00:13:44.440
to think about on the latest devices
this ratio goes up to 20 like it's 20

00:13:44.440 --> 00:13:44.450
this ratio goes up to 20 like it's 20
 

00:13:44.450 --> 00:13:47.680
this ratio goes up to 20 like it's 20
times more power hungry and it's highly

00:13:47.680 --> 00:13:47.690
times more power hungry and it's highly
 

00:13:47.690 --> 00:13:49.480
times more power hungry and it's highly
unlikely they're gonna see workload that

00:13:49.480 --> 00:13:49.490
unlikely they're gonna see workload that
 

00:13:49.490 --> 00:13:53.880
unlikely they're gonna see workload that
runs to 8 times faster a little core

00:13:53.880 --> 00:13:53.890
 
 

00:13:53.890 --> 00:14:00.790
 
theirs keep in mind look at the audio

00:14:00.790 --> 00:14:00.800
theirs keep in mind look at the audio
 

00:14:00.800 --> 00:14:01.240
theirs keep in mind look at the audio
thread

00:14:01.240 --> 00:14:01.250
thread
 

00:14:01.250 --> 00:14:03.870
thread
well little coarse I'm doing nothing

00:14:03.870 --> 00:14:03.880
well little coarse I'm doing nothing
 

00:14:03.880 --> 00:14:07.000
well little coarse I'm doing nothing
that goes straight into a sleepy 0 1 2

00:14:07.000 --> 00:14:07.010
that goes straight into a sleepy 0 1 2
 

00:14:07.010 --> 00:14:11.470
that goes straight into a sleepy 0 1 2
or 3 and this is how you do it set

00:14:11.470 --> 00:14:11.480
or 3 and this is how you do it set
 

00:14:11.480 --> 00:14:15.040
or 3 and this is how you do it set
affinity is just a system called it's

00:14:15.040 --> 00:14:15.050
affinity is just a system called it's
 

00:14:15.050 --> 00:14:18.100
affinity is just a system called it's
pretty too straightforward to do some

00:14:18.100 --> 00:14:18.110
pretty too straightforward to do some
 

00:14:18.110 --> 00:14:23.440
pretty too straightforward to do some
code that I wrote I can claim I'm a

00:14:23.440 --> 00:14:23.450
code that I wrote I can claim I'm a
 

00:14:23.450 --> 00:14:27.730
code that I wrote I can claim I'm a
programmer now and it just runs a system

00:14:27.730 --> 00:14:27.740
programmer now and it just runs a system
 

00:14:27.740 --> 00:14:30.010
programmer now and it just runs a system
call and checks for for errors this is

00:14:30.010 --> 00:14:30.020
call and checks for for errors this is
 

00:14:30.020 --> 00:14:35.500
call and checks for for errors this is
like super straightforward and this is

00:14:35.500 --> 00:14:35.510
like super straightforward and this is
 

00:14:35.510 --> 00:14:37.600
like super straightforward and this is
how you use it if I want to run on a

00:14:37.600 --> 00:14:37.610
how you use it if I want to run on a
 

00:14:37.610 --> 00:14:41.880
how you use it if I want to run on a
little core I set the mask to the first

00:14:41.880 --> 00:14:41.890
 
 

00:14:41.890 --> 00:14:44.530
 
course if I want to run to the big

00:14:44.530 --> 00:14:44.540
course if I want to run to the big
 

00:14:44.540 --> 00:14:46.990
course if I want to run to the big
course of it I said the mask to the last

00:14:46.990 --> 00:14:47.000
course of it I said the mask to the last
 

00:14:47.000 --> 00:14:49.150
course of it I said the mask to the last
course and then I set the thread

00:14:49.150 --> 00:14:49.160
course and then I set the thread
 

00:14:49.160 --> 00:14:52.960
course and then I set the thread
affinity super straightforward just give

00:14:52.960 --> 00:14:52.970
affinity super straightforward just give
 

00:14:52.970 --> 00:14:56.110
affinity super straightforward just give
do not pin a thread to a certain core

00:14:56.110 --> 00:14:56.120
do not pin a thread to a certain core
 

00:14:56.120 --> 00:14:58.930
do not pin a thread to a certain core
just leave some room for the scheduler

00:14:58.930 --> 00:14:58.940
just leave some room for the scheduler
 

00:14:58.940 --> 00:15:01.570
just leave some room for the scheduler
to do its work because it's good but pin

00:15:01.570 --> 00:15:01.580
to do its work because it's good but pin
 

00:15:01.580 --> 00:15:05.180
to do its work because it's good but pin
it to certain clusters

00:15:05.180 --> 00:15:05.190
 
 

00:15:05.190 --> 00:15:08.880
 
and now we are probably doing time 20

00:15:08.880 --> 00:15:08.890
and now we are probably doing time 20
 

00:15:08.890 --> 00:15:15.830
and now we are probably doing time 20
minutes left I have a volunteer here and

00:15:15.830 --> 00:15:15.840
minutes left I have a volunteer here and
 

00:15:15.840 --> 00:15:18.270
minutes left I have a volunteer here and
I have my camera this has never been

00:15:18.270 --> 00:15:18.280
I have my camera this has never been
 

00:15:18.280 --> 00:15:18.780
I have my camera this has never been
done before

00:15:18.780 --> 00:15:18.790
done before
 

00:15:18.790 --> 00:15:20.580
done before
a Goulet oh please please please please

00:15:20.580 --> 00:15:20.590
a Goulet oh please please please please
 

00:15:20.590 --> 00:15:21.870
a Goulet oh please please please please
please come in

00:15:21.870 --> 00:15:21.880
please come in
 

00:15:21.880 --> 00:15:25.800
please come in
I just volunteer you and I'm gonna take

00:15:25.800 --> 00:15:25.810
I just volunteer you and I'm gonna take
 

00:15:25.810 --> 00:15:29.430
I just volunteer you and I'm gonna take
photos of him this is never be please be

00:15:29.430 --> 00:15:29.440
photos of him this is never be please be
 

00:15:29.440 --> 00:15:31.470
photos of him this is never be please be
serious like do a a more and more

00:15:31.470 --> 00:15:31.480
serious like do a a more and more
 

00:15:31.480 --> 00:15:34.580
serious like do a a more and more
developer like face like a serious one

00:15:34.580 --> 00:15:34.590
developer like face like a serious one
 

00:15:34.590 --> 00:15:37.530
developer like face like a serious one
more more more serious a little bit less

00:15:37.530 --> 00:15:37.540
more more more serious a little bit less
 

00:15:37.540 --> 00:15:40.700
more more more serious a little bit less
serious look at me look at me

00:15:40.700 --> 00:15:40.710
serious look at me look at me
 

00:15:40.710 --> 00:15:45.380
serious look at me look at me
excellent excellent the kasam smile

00:15:45.380 --> 00:15:45.390
excellent excellent the kasam smile
 

00:15:45.390 --> 00:15:55.440
excellent excellent the kasam smile
excellent thank you very much

00:15:55.440 --> 00:15:55.450
 
 

00:15:55.450 --> 00:15:56.550
 
did I lose the

00:15:56.550 --> 00:15:56.560
did I lose the
 

00:15:56.560 --> 00:16:01.260
did I lose the
[Music]

00:16:01.260 --> 00:16:01.270
 
 

00:16:01.270 --> 00:16:07.190
 
there was the thing the clicker thing

00:16:07.190 --> 00:16:07.200
 
 

00:16:07.200 --> 00:16:11.670
 
detective it the clicker thing do you

00:16:11.670 --> 00:16:11.680
detective it the clicker thing do you
 

00:16:11.680 --> 00:16:13.740
detective it the clicker thing do you
have a clicking thing it's gone

00:16:13.740 --> 00:16:13.750
have a clicking thing it's gone
 

00:16:13.750 --> 00:16:23.840
have a clicking thing it's gone
it's amazing I don't know it's gone

00:16:23.840 --> 00:16:23.850
 
 

00:16:23.850 --> 00:16:29.810
 
sorry no it's gone literally disappeared

00:16:29.810 --> 00:16:29.820
sorry no it's gone literally disappeared
 

00:16:29.820 --> 00:16:40.940
sorry no it's gone literally disappeared
but we have another one frame pacing

00:16:40.940 --> 00:16:40.950
but we have another one frame pacing
 

00:16:40.950 --> 00:16:43.980
but we have another one frame pacing
frame creasing is about a lot about

00:16:43.980 --> 00:16:43.990
frame creasing is about a lot about
 

00:16:43.990 --> 00:16:49.890
frame creasing is about a lot about
performance and in systrace you have

00:16:49.890 --> 00:16:49.900
performance and in systrace you have
 

00:16:49.900 --> 00:16:54.590
performance and in systrace you have
this view which basically shows you were

00:16:54.590 --> 00:16:54.600
this view which basically shows you were
 

00:16:54.600 --> 00:16:57.180
this view which basically shows you were
annoyed this latching on your frame and

00:16:57.180 --> 00:16:57.190
annoyed this latching on your frame and
 

00:16:57.190 --> 00:16:59.910
annoyed this latching on your frame and
displaying it there's basically a very

00:16:59.910 --> 00:16:59.920
displaying it there's basically a very
 

00:16:59.920 --> 00:17:03.510
displaying it there's basically a very
good proxy for when my frame is gonna be

00:17:03.510 --> 00:17:03.520
good proxy for when my frame is gonna be
 

00:17:03.520 --> 00:17:05.880
good proxy for when my frame is gonna be
on screen when my user is gonna be

00:17:05.880 --> 00:17:05.890
on screen when my user is gonna be
 

00:17:05.890 --> 00:17:09.510
on screen when my user is gonna be
seeing my image and if you see bars that

00:17:09.510 --> 00:17:09.520
seeing my image and if you see bars that
 

00:17:09.520 --> 00:17:13.110
seeing my image and if you see bars that
are not evenly spaced like sometimes

00:17:13.110 --> 00:17:13.120
are not evenly spaced like sometimes
 

00:17:13.120 --> 00:17:15.660
are not evenly spaced like sometimes
shorten times bigger that is a sure sign

00:17:15.660 --> 00:17:15.670
shorten times bigger that is a sure sign
 

00:17:15.670 --> 00:17:26.270
shorten times bigger that is a sure sign
you're having frame pacing issues

00:17:26.270 --> 00:17:26.280
 
 

00:17:26.280 --> 00:17:28.069
 
this gets a little bit more complicated

00:17:28.069 --> 00:17:28.079
this gets a little bit more complicated
 

00:17:28.079 --> 00:17:34.460
this gets a little bit more complicated
like the first bar up there is when your

00:17:34.460 --> 00:17:34.470
like the first bar up there is when your
 

00:17:34.470 --> 00:17:37.460
like the first bar up there is when your
game is done with the frame and it's

00:17:37.460 --> 00:17:37.470
game is done with the frame and it's
 

00:17:37.470 --> 00:17:40.220
game is done with the frame and it's
presenting it to the to the system so it

00:17:40.220 --> 00:17:40.230
presenting it to the to the system so it
 

00:17:40.230 --> 00:17:43.549
presenting it to the to the system so it
can be grabbed and be displayed the

00:17:43.549 --> 00:17:43.559
can be grabbed and be displayed the
 

00:17:43.559 --> 00:17:46.730
can be grabbed and be displayed the
second bar is a nice V seen coming every

00:17:46.730 --> 00:17:46.740
second bar is a nice V seen coming every
 

00:17:46.740 --> 00:17:49.640
second bar is a nice V seen coming every
sixteen point six milliseconds 60 frames

00:17:49.640 --> 00:17:49.650
sixteen point six milliseconds 60 frames
 

00:17:49.650 --> 00:17:53.180
sixteen point six milliseconds 60 frames
per second don't there is the bar that

00:17:53.180 --> 00:17:53.190
per second don't there is the bar that
 

00:17:53.190 --> 00:17:56.480
per second don't there is the bar that
we saw before just a little bit large it

00:17:56.480 --> 00:17:56.490
we saw before just a little bit large it
 

00:17:56.490 --> 00:17:58.130
we saw before just a little bit large it
shows you like the system is doing

00:17:58.130 --> 00:17:58.140
shows you like the system is doing
 

00:17:58.140 --> 00:18:00.289
shows you like the system is doing
something is sending the frame today the

00:18:00.289 --> 00:18:00.299
something is sending the frame today the
 

00:18:00.299 --> 00:18:06.049
something is sending the frame today the
other compositor is doing some work but

00:18:06.049 --> 00:18:06.059
other compositor is doing some work but
 

00:18:06.059 --> 00:18:10.549
other compositor is doing some work but
the point is that at some point when the

00:18:10.549 --> 00:18:10.559
the point is that at some point when the
 

00:18:10.559 --> 00:18:13.970
the point is that at some point when the
frame is present in the cue our droid

00:18:13.970 --> 00:18:13.980
frame is present in the cue our droid
 

00:18:13.980 --> 00:18:16.580
frame is present in the cue our droid
will decide okay I got a frame javi goes

00:18:16.580 --> 00:18:16.590
will decide okay I got a frame javi goes
 

00:18:16.590 --> 00:18:19.460
will decide okay I got a frame javi goes
to screen and it took about 50

00:18:19.460 --> 00:18:19.470
to screen and it took about 50
 

00:18:19.470 --> 00:18:22.539
to screen and it took about 50
milliseconds in the first instance

00:18:22.539 --> 00:18:22.549
milliseconds in the first instance
 

00:18:22.549 --> 00:18:27.140
milliseconds in the first instance
because look at the circle there we miss

00:18:27.140 --> 00:18:27.150
because look at the circle there we miss
 

00:18:27.150 --> 00:18:30.080
because look at the circle there we miss
the vsync we arrived slightly too late

00:18:30.080 --> 00:18:30.090
the vsync we arrived slightly too late
 

00:18:30.090 --> 00:18:35.060
the vsync we arrived slightly too late
with the vsync so Android that nothing

00:18:35.060 --> 00:18:35.070
with the vsync so Android that nothing
 

00:18:35.070 --> 00:18:37.640
with the vsync so Android that nothing
to display then or something to display

00:18:37.640 --> 00:18:37.650
to display then or something to display
 

00:18:37.650 --> 00:18:40.700
to display then or something to display
Android was doing its work immediately

00:18:40.700 --> 00:18:40.710
Android was doing its work immediately
 

00:18:40.710 --> 00:18:43.250
Android was doing its work immediately
after the game is presenting another

00:18:43.250 --> 00:18:43.260
after the game is presenting another
 

00:18:43.260 --> 00:18:47.870
after the game is presenting another
frame so this is a typical example with

00:18:47.870 --> 00:18:47.880
frame so this is a typical example with
 

00:18:47.880 --> 00:18:50.659
frame so this is a typical example with
game presenting as fast as possible and

00:18:50.659 --> 00:18:50.669
game presenting as fast as possible and
 

00:18:50.669 --> 00:18:53.450
game presenting as fast as possible and
then immediately later Android says

00:18:53.450 --> 00:18:53.460
then immediately later Android says
 

00:18:53.460 --> 00:18:56.000
then immediately later Android says
great I got the frame how it was to

00:18:56.000 --> 00:18:56.010
great I got the frame how it was to
 

00:18:56.010 --> 00:18:58.310
great I got the frame how it was to
screen 16 milliseconds later this

00:18:58.310 --> 00:18:58.320
screen 16 milliseconds later this
 

00:18:58.320 --> 00:19:02.029
screen 16 milliseconds later this
translates when you're playing in - I'm

00:19:02.029 --> 00:19:02.039
translates when you're playing in - I'm
 

00:19:02.039 --> 00:19:03.919
translates when you're playing in - I'm
running at 20 frames per second and then

00:19:03.919 --> 00:19:03.929
running at 20 frames per second and then
 

00:19:03.929 --> 00:19:06.020
running at 20 frames per second and then
I'm running at 60 and then 20 and then

00:19:06.020 --> 00:19:06.030
I'm running at 60 and then 20 and then
 

00:19:06.030 --> 00:19:10.820
I'm running at 60 and then 20 and then
60 so the user perceived is as choppy

00:19:10.820 --> 00:19:10.830
60 so the user perceived is as choppy
 

00:19:10.830 --> 00:19:12.680
60 so the user perceived is as choppy
frame rate is a choppy 60 frames per

00:19:12.680 --> 00:19:12.690
frame rate is a choppy 60 frames per
 

00:19:12.690 --> 00:19:15.350
frame rate is a choppy 60 frames per
second one one star review straight away

00:19:15.350 --> 00:19:15.360
second one one star review straight away
 

00:19:15.360 --> 00:19:19.760
second one one star review straight away
it's very disturbing generally speaking

00:19:19.760 --> 00:19:19.770
it's very disturbing generally speaking
 

00:19:19.770 --> 00:19:22.909
it's very disturbing generally speaking
a 60 frames per second game that is

00:19:22.909 --> 00:19:22.919
a 60 frames per second game that is
 

00:19:22.919 --> 00:19:26.090
a 60 frames per second game that is
choppy as much worse than a stable 30

00:19:26.090 --> 00:19:26.100
choppy as much worse than a stable 30
 

00:19:26.100 --> 00:19:28.070
choppy as much worse than a stable 30
frames per second that is nice a smooth

00:19:28.070 --> 00:19:28.080
frames per second that is nice a smooth
 

00:19:28.080 --> 00:19:32.149
frames per second that is nice a smooth
and that's how you say it on systrace

00:19:32.149 --> 00:19:32.159
and that's how you say it on systrace
 

00:19:32.159 --> 00:19:36.810
and that's how you say it on systrace
but that's enlarges one

00:19:36.810 --> 00:19:36.820
 
 

00:19:36.820 --> 00:19:40.060
 
I'm slightly large in the the same thing

00:19:40.060 --> 00:19:40.070
I'm slightly large in the the same thing
 

00:19:40.070 --> 00:19:41.529
I'm slightly large in the the same thing
that we showed before I'm just showing

00:19:41.529 --> 00:19:41.539
that we showed before I'm just showing
 

00:19:41.539 --> 00:19:45.310
that we showed before I'm just showing
you also the CPU and we can see that

00:19:45.310 --> 00:19:45.320
you also the CPU and we can see that
 

00:19:45.320 --> 00:19:47.580
you also the CPU and we can see that
this frame which is like the big bar

00:19:47.580 --> 00:19:47.590
this frame which is like the big bar
 

00:19:47.590 --> 00:19:51.070
this frame which is like the big bar
started a couple of milliseconds too

00:19:51.070 --> 00:19:51.080
started a couple of milliseconds too
 

00:19:51.080 --> 00:19:55.299
started a couple of milliseconds too
late after everything and it literally

00:19:55.299 --> 00:19:55.309
late after everything and it literally
 

00:19:55.309 --> 00:19:58.360
late after everything and it literally
missed by a hundred microseconds it

00:19:58.360 --> 00:19:58.370
missed by a hundred microseconds it
 

00:19:58.370 --> 00:20:00.130
missed by a hundred microseconds it
arrived slightly late by one hundred

00:20:00.130 --> 00:20:00.140
arrived slightly late by one hundred
 

00:20:00.140 --> 00:20:03.430
arrived slightly late by one hundred
microseconds so Android will present

00:20:03.430 --> 00:20:03.440
microseconds so Android will present
 

00:20:03.440 --> 00:20:05.710
microseconds so Android will present
this frame 16 milliseconds too late

00:20:05.710 --> 00:20:05.720
this frame 16 milliseconds too late
 

00:20:05.720 --> 00:20:09.220
this frame 16 milliseconds too late
because we missed by 100 microseconds we

00:20:09.220 --> 00:20:09.230
because we missed by 100 microseconds we
 

00:20:09.230 --> 00:20:11.590
because we missed by 100 microseconds we
miss because we started slightly too

00:20:11.590 --> 00:20:11.600
miss because we started slightly too
 

00:20:11.600 --> 00:20:12.240
miss because we started slightly too
late

00:20:12.240 --> 00:20:12.250
late
 

00:20:12.250 --> 00:20:16.060
late
theoretically this thread would take

00:20:16.060 --> 00:20:16.070
theoretically this thread would take
 

00:20:16.070 --> 00:20:19.180
theoretically this thread would take
less than 33 milliseconds to process the

00:20:19.180 --> 00:20:19.190
less than 33 milliseconds to process the
 

00:20:19.190 --> 00:20:21.279
less than 33 milliseconds to process the
frame this could run a 34 second no

00:20:21.279 --> 00:20:21.289
frame this could run a 34 second no
 

00:20:21.289 --> 00:20:24.399
frame this could run a 34 second no
problem whatsoever but it's not and it's

00:20:24.399 --> 00:20:24.409
problem whatsoever but it's not and it's
 

00:20:24.409 --> 00:20:25.899
problem whatsoever but it's not and it's
not because the game is too slow it's

00:20:25.899 --> 00:20:25.909
not because the game is too slow it's
 

00:20:25.909 --> 00:20:36.570
not because the game is too slow it's
because it's missing the frame pacing

00:20:36.570 --> 00:20:36.580
 
 

00:20:36.580 --> 00:20:40.049
 
this is the basically the cause of most

00:20:40.049 --> 00:20:40.059
this is the basically the cause of most
 

00:20:40.059 --> 00:20:41.669
this is the basically the cause of most
frame instabilities that I've seen

00:20:41.669 --> 00:20:41.679
frame instabilities that I've seen
 

00:20:41.679 --> 00:20:45.240
frame instabilities that I've seen
because as a game developer you know

00:20:45.240 --> 00:20:45.250
because as a game developer you know
 

00:20:45.250 --> 00:20:46.770
because as a game developer you know
that if you want to eat 30 frames per

00:20:46.770 --> 00:20:46.780
that if you want to eat 30 frames per
 

00:20:46.780 --> 00:20:48.960
that if you want to eat 30 frames per
second you have to run a frame in less

00:20:48.960 --> 00:20:48.970
second you have to run a frame in less
 

00:20:48.970 --> 00:20:51.299
second you have to run a frame in less
than 33 milliseconds most people do it

00:20:51.299 --> 00:20:51.309
than 33 milliseconds most people do it
 

00:20:51.309 --> 00:20:54.390
than 33 milliseconds most people do it
because they're good but then they don't

00:20:54.390 --> 00:20:54.400
because they're good but then they don't
 

00:20:54.400 --> 00:20:55.890
because they're good but then they don't
present the right time and the frame

00:20:55.890 --> 00:20:55.900
present the right time and the frame
 

00:20:55.900 --> 00:20:57.690
present the right time and the frame
rates still choppy and you have frame

00:20:57.690 --> 00:20:57.700
rates still choppy and you have frame
 

00:20:57.700 --> 00:21:00.390
rates still choppy and you have frame
time stability but not only another

00:21:00.390 --> 00:21:00.400
time stability but not only another
 

00:21:00.400 --> 00:21:03.630
time stability but not only another
issue is imagine a touch input that

00:21:03.630 --> 00:21:03.640
issue is imagine a touch input that
 

00:21:03.640 --> 00:21:08.700
issue is imagine a touch input that
comes when the first frame that takes 50

00:21:08.700 --> 00:21:08.710
comes when the first frame that takes 50
 

00:21:08.710 --> 00:21:11.820
comes when the first frame that takes 50
milliseconds to be displayed well this

00:21:11.820 --> 00:21:11.830
milliseconds to be displayed well this
 

00:21:11.830 --> 00:21:16.440
milliseconds to be displayed well this
is gonna be showed 60 milliseconds later

00:21:16.440 --> 00:21:16.450
is gonna be showed 60 milliseconds later
 

00:21:16.450 --> 00:21:19.650
is gonna be showed 60 milliseconds later
so I touch and I see the result of my

00:21:19.650 --> 00:21:19.660
so I touch and I see the result of my
 

00:21:19.660 --> 00:21:22.650
so I touch and I see the result of my
touch 60 milliseconds too late and then

00:21:22.650 --> 00:21:22.660
touch 60 milliseconds too late and then
 

00:21:22.660 --> 00:21:24.270
touch 60 milliseconds too late and then
I see the result of my touch in the next

00:21:24.270 --> 00:21:24.280
I see the result of my touch in the next
 

00:21:24.280 --> 00:21:26.640
I see the result of my touch in the next
frame like 16 milliseconds too early and

00:21:26.640 --> 00:21:26.650
frame like 16 milliseconds too early and
 

00:21:26.650 --> 00:21:28.590
frame like 16 milliseconds too early and
this goes back and forth the brain is

00:21:28.590 --> 00:21:28.600
this goes back and forth the brain is
 

00:21:28.600 --> 00:21:32.610
this goes back and forth the brain is
trained to expect input at a certain

00:21:32.610 --> 00:21:32.620
trained to expect input at a certain
 

00:21:32.620 --> 00:21:34.440
trained to expect input at a certain
category if we just kept going back and

00:21:34.440 --> 00:21:34.450
category if we just kept going back and
 

00:21:34.450 --> 00:21:41.730
category if we just kept going back and
forth it's it's a bad experience we do

00:21:41.730 --> 00:21:41.740
forth it's it's a bad experience we do
 

00:21:41.740 --> 00:21:42.450
forth it's it's a bad experience we do
have a solution

00:21:42.450 --> 00:21:42.460
have a solution
 

00:21:42.460 --> 00:21:45.780
have a solution
it's called Android frame facing API TR

00:21:45.780 --> 00:21:45.790
it's called Android frame facing API TR
 

00:21:45.790 --> 00:21:50.100
it's called Android frame facing API TR
mentioned it before this is a bunch of

00:21:50.100 --> 00:21:50.110
mentioned it before this is a bunch of
 

00:21:50.110 --> 00:21:51.780
mentioned it before this is a bunch of
code that doesn't live inside Android it

00:21:51.780 --> 00:21:51.790
code that doesn't live inside Android it
 

00:21:51.790 --> 00:21:54.600
code that doesn't live inside Android it
lives as a library and you can download

00:21:54.600 --> 00:21:54.610
lives as a library and you can download
 

00:21:54.610 --> 00:21:56.910
lives as a library and you can download
it and try it

00:21:56.910 --> 00:21:56.920
it and try it
 

00:21:56.920 --> 00:22:03.960
it and try it
it supports support several of case

00:22:03.960 --> 00:22:03.970
it supports support several of case
 

00:22:03.970 --> 00:22:06.030
it supports support several of case
scenarios and it's very easy to

00:22:06.030 --> 00:22:06.040
scenarios and it's very easy to
 

00:22:06.040 --> 00:22:08.060
scenarios and it's very easy to
integrate and basically what it does is

00:22:08.060 --> 00:22:08.070
integrate and basically what it does is
 

00:22:08.070 --> 00:22:12.600
integrate and basically what it does is
there's any need there's a SWAT and

00:22:12.600 --> 00:22:12.610
there's any need there's a SWAT and
 

00:22:12.610 --> 00:22:15.049
there's any need there's a SWAT and
there's a set a bunch of parameters and

00:22:15.049 --> 00:22:15.059
there's a set a bunch of parameters and
 

00:22:15.059 --> 00:22:17.940
there's a set a bunch of parameters and
from there on it will take care of

00:22:17.940 --> 00:22:17.950
from there on it will take care of
 

00:22:17.950 --> 00:22:20.669
from there on it will take care of
making sure that your frame is nicely

00:22:20.669 --> 00:22:20.679
making sure that your frame is nicely
 

00:22:20.679 --> 00:22:24.290
making sure that your frame is nicely
presented right before the vsync and

00:22:24.290 --> 00:22:24.300
presented right before the vsync and
 

00:22:24.300 --> 00:22:26.640
presented right before the vsync and
also it will give you back callbacks

00:22:26.640 --> 00:22:26.650
also it will give you back callbacks
 

00:22:26.650 --> 00:22:29.510
also it will give you back callbacks
that you can use to start your game

00:22:29.510 --> 00:22:29.520
that you can use to start your game
 

00:22:29.520 --> 00:22:34.110
that you can use to start your game
logic right on time and everything you

00:22:34.110 --> 00:22:34.120
logic right on time and everything you
 

00:22:34.120 --> 00:22:36.930
logic right on time and everything you
put the two things together as long as

00:22:36.930 --> 00:22:36.940
put the two things together as long as
 

00:22:36.940 --> 00:22:38.610
put the two things together as long as
you're running in less than 30

00:22:38.610 --> 00:22:38.620
you're running in less than 30
 

00:22:38.620 --> 00:22:42.510
you're running in less than 30
milliseconds 33 you're good you will be

00:22:42.510 --> 00:22:42.520
milliseconds 33 you're good you will be
 

00:22:42.520 --> 00:22:43.440
milliseconds 33 you're good you will be
frame pace

00:22:43.440 --> 00:22:43.450
frame pace
 

00:22:43.450 --> 00:22:45.870
frame pace
perfectly at 30 frames per second and

00:22:45.870 --> 00:22:45.880
perfectly at 30 frames per second and
 

00:22:45.880 --> 00:22:49.560
perfectly at 30 frames per second and
that's all done by us you don't have to

00:22:49.560 --> 00:22:49.570
that's all done by us you don't have to
 

00:22:49.570 --> 00:22:50.340
that's all done by us you don't have to
care about what

00:22:50.340 --> 00:22:50.350
care about what
 

00:22:50.350 --> 00:22:52.289
care about what
devices because devices are slightly

00:22:52.289 --> 00:22:52.299
devices because devices are slightly
 

00:22:52.299 --> 00:22:55.860
devices because devices are slightly
different in the way they they treat the

00:22:55.860 --> 00:22:55.870
different in the way they they treat the
 

00:22:55.870 --> 00:22:58.289
different in the way they they treat the
Vissing can they treat the watch II just

00:22:58.289 --> 00:22:58.299
Vissing can they treat the watch II just
 

00:22:58.299 --> 00:23:00.510
Vissing can they treat the watch II just
don't have to care about it set your

00:23:00.510 --> 00:23:00.520
don't have to care about it set your
 

00:23:00.520 --> 00:23:02.760
don't have to care about it set your
frame interval as you're used to and

00:23:02.760 --> 00:23:02.770
frame interval as you're used to and
 

00:23:02.770 --> 00:23:06.950
frame interval as you're used to and
hope it goes it's available for both

00:23:06.950 --> 00:23:06.960
hope it goes it's available for both
 

00:23:06.960 --> 00:23:12.450
hope it goes it's available for both
Vulcan and OpenGL this is the mahkum

00:23:12.450 --> 00:23:12.460
Vulcan and OpenGL this is the mahkum
 

00:23:12.460 --> 00:23:16.650
Vulcan and OpenGL this is the mahkum
virtue it's in it set up swap interval

00:23:16.650 --> 00:23:16.660
virtue it's in it set up swap interval
 

00:23:16.660 --> 00:23:18.330
virtue it's in it set up swap interval
and then at some point the future swap

00:23:18.330 --> 00:23:18.340
and then at some point the future swap
 

00:23:18.340 --> 00:23:22.230
and then at some point the future swap
when you swap swap will return and it

00:23:22.230 --> 00:23:22.240
when you swap swap will return and it
 

00:23:22.240 --> 00:23:24.870
when you swap swap will return and it
will be presented and then you will have

00:23:24.870 --> 00:23:24.880
will be presented and then you will have
 

00:23:24.880 --> 00:23:26.580
will be presented and then you will have
a callback and you can start your game

00:23:26.580 --> 00:23:26.590
a callback and you can start your game
 

00:23:26.590 --> 00:23:29.039
a callback and you can start your game
logic straight away and the next you

00:23:29.039 --> 00:23:29.049
logic straight away and the next you
 

00:23:29.049 --> 00:23:34.950
logic straight away and the next you
think it also comes with Auto mode which

00:23:34.950 --> 00:23:34.960
think it also comes with Auto mode which
 

00:23:34.960 --> 00:23:41.490
think it also comes with Auto mode which
is kind of a peculiar mode to run in

00:23:41.490 --> 00:23:41.500
is kind of a peculiar mode to run in
 

00:23:41.500 --> 00:23:43.680
is kind of a peculiar mode to run in
there are situations where imagine your

00:23:43.680 --> 00:23:43.690
there are situations where imagine your
 

00:23:43.690 --> 00:23:45.899
there are situations where imagine your
game is running on a device is not as

00:23:45.899 --> 00:23:45.909
game is running on a device is not as
 

00:23:45.909 --> 00:23:49.169
game is running on a device is not as
performant so it mostly hit 30 frames

00:23:49.169 --> 00:23:49.179
performant so it mostly hit 30 frames
 

00:23:49.179 --> 00:23:51.899
performant so it mostly hit 30 frames
per second but sometimes it slows down

00:23:51.899 --> 00:23:51.909
per second but sometimes it slows down
 

00:23:51.909 --> 00:23:54.330
per second but sometimes it slows down
on a heavy scene and runs at 20 frames

00:23:54.330 --> 00:23:54.340
on a heavy scene and runs at 20 frames
 

00:23:54.340 --> 00:24:00.060
on a heavy scene and runs at 20 frames
per second well in the case that we just

00:24:00.060 --> 00:24:00.070
per second well in the case that we just
 

00:24:00.070 --> 00:24:03.510
per second well in the case that we just
saw earlier Oh a frame will come to 50

00:24:03.510 --> 00:24:03.520
saw earlier Oh a frame will come to 50
 

00:24:03.520 --> 00:24:04.950
saw earlier Oh a frame will come to 50
frames a second and the second one will

00:24:04.950 --> 00:24:04.960
frames a second and the second one will
 

00:24:04.960 --> 00:24:07.590
frames a second and the second one will
probably be a 16 because I arrived like

00:24:07.590 --> 00:24:07.600
probably be a 16 because I arrived like
 

00:24:07.600 --> 00:24:08.850
probably be a 16 because I arrived like
late but then I present another one

00:24:08.850 --> 00:24:08.860
late but then I present another one
 

00:24:08.860 --> 00:24:11.640
late but then I present another one
maybe it's gonna be a 33 I don't know

00:24:11.640 --> 00:24:11.650
maybe it's gonna be a 33 I don't know
 

00:24:11.650 --> 00:24:14.460
maybe it's gonna be a 33 I don't know
it's gonna be as fast as possible but

00:24:14.460 --> 00:24:14.470
it's gonna be as fast as possible but
 

00:24:14.470 --> 00:24:16.740
it's gonna be as fast as possible but
the frame will be choppy auto mode the

00:24:16.740 --> 00:24:16.750
the frame will be choppy auto mode the
 

00:24:16.750 --> 00:24:19.560
the frame will be choppy auto mode the
text is conditioned and so it's good

00:24:19.560 --> 00:24:19.570
text is conditioned and so it's good
 

00:24:19.570 --> 00:24:21.960
text is conditioned and so it's good
you're running at a stable 20 you're not

00:24:21.960 --> 00:24:21.970
you're running at a stable 20 you're not
 

00:24:21.970 --> 00:24:26.010
you're running at a stable 20 you're not
eating a stable 30 well I'm gonna slow

00:24:26.010 --> 00:24:26.020
eating a stable 30 well I'm gonna slow
 

00:24:26.020 --> 00:24:29.820
eating a stable 30 well I'm gonna slow
you down for the time being you can

00:24:29.820 --> 00:24:29.830
you down for the time being you can
 

00:24:29.830 --> 00:24:32.520
you down for the time being you can
reset at any time but when the frame

00:24:32.520 --> 00:24:32.530
reset at any time but when the frame
 

00:24:32.530 --> 00:24:35.580
reset at any time but when the frame
rate goes back to a more stable 30

00:24:35.580 --> 00:24:35.590
rate goes back to a more stable 30
 

00:24:35.590 --> 00:24:37.470
rate goes back to a more stable 30
different per second auto mode will bump

00:24:37.470 --> 00:24:37.480
different per second auto mode will bump
 

00:24:37.480 --> 00:24:40.279
different per second auto mode will bump
you up again it has the very good

00:24:40.279 --> 00:24:40.289
you up again it has the very good
 

00:24:40.289 --> 00:24:43.789
you up again it has the very good
consequence that you're also gonna save

00:24:43.789 --> 00:24:43.799
consequence that you're also gonna save
 

00:24:43.799 --> 00:24:46.980
consequence that you're also gonna save
battery because it will take certain

00:24:46.980 --> 00:24:46.990
battery because it will take certain
 

00:24:46.990 --> 00:24:48.330
battery because it will take certain
frames and we just slowed them down

00:24:48.330 --> 00:24:48.340
frames and we just slowed them down
 

00:24:48.340 --> 00:24:51.240
frames and we just slowed them down
just introduced ratings which means CPUs

00:24:51.240 --> 00:24:51.250
just introduced ratings which means CPUs
 

00:24:51.250 --> 00:24:53.130
just introduced ratings which means CPUs
and GPUs will have more chance to go to

00:24:53.130 --> 00:24:53.140
and GPUs will have more chance to go to
 

00:24:53.140 --> 00:24:57.390
and GPUs will have more chance to go to
sleep

00:24:57.390 --> 00:24:57.400
 
 

00:24:57.400 --> 00:25:00.910
 
that's how 30 frames per second looks

00:25:00.910 --> 00:25:00.920
that's how 30 frames per second looks
 

00:25:00.920 --> 00:25:06.250
that's how 30 frames per second looks
like this is a stable pacing now if you

00:25:06.250 --> 00:25:06.260
like this is a stable pacing now if you
 

00:25:06.260 --> 00:25:09.640
like this is a stable pacing now if you
come over there we can show you the

00:25:09.640 --> 00:25:09.650
come over there we can show you the
 

00:25:09.650 --> 00:25:12.120
come over there we can show you the
frame pacing API on one of the devices

00:25:12.120 --> 00:25:12.130
frame pacing API on one of the devices
 

00:25:12.130 --> 00:25:18.820
frame pacing API on one of the devices
we can go more in depth last but not

00:25:18.820 --> 00:25:18.830
we can go more in depth last but not
 

00:25:18.830 --> 00:25:25.660
we can go more in depth last but not
least this is a fun one because you have

00:25:25.660 --> 00:25:25.670
least this is a fun one because you have
 

00:25:25.670 --> 00:25:29.590
least this is a fun one because you have
phones that are packed with 4 megapixels

00:25:29.590 --> 00:25:29.600
phones that are packed with 4 megapixels
 

00:25:29.600 --> 00:25:33.910
phones that are packed with 4 megapixels
today and many games make sure that

00:25:33.910 --> 00:25:33.920
today and many games make sure that
 

00:25:33.920 --> 00:25:37.060
today and many games make sure that
they're gonna shade each megapixel each

00:25:37.060 --> 00:25:37.070
they're gonna shade each megapixel each
 

00:25:37.070 --> 00:25:40.420
they're gonna shade each megapixel each
pixel in the megapixel four megapixel

00:25:40.420 --> 00:25:40.430
pixel in the megapixel four megapixel
 

00:25:40.430 --> 00:25:45.720
pixel in the megapixel four megapixel
for reference is twice give or take a

00:25:45.720 --> 00:25:45.730
for reference is twice give or take a
 

00:25:45.730 --> 00:25:49.240
for reference is twice give or take a
full HD resolution which probably a year

00:25:49.240 --> 00:25:49.250
full HD resolution which probably a year
 

00:25:49.250 --> 00:25:53.230
full HD resolution which probably a year
ago was state-of-the-art console like

00:25:53.230 --> 00:25:53.240
ago was state-of-the-art console like
 

00:25:53.240 --> 00:25:57.250
ago was state-of-the-art console like
rendering sent to a 55 inch display and

00:25:57.250 --> 00:25:57.260
rendering sent to a 55 inch display and
 

00:25:57.260 --> 00:25:59.320
rendering sent to a 55 inch display and
there was looked like awesome this is a

00:25:59.320 --> 00:25:59.330
there was looked like awesome this is a
 

00:25:59.330 --> 00:26:01.770
there was looked like awesome this is a
great looking game it runs the full HD

00:26:01.770 --> 00:26:01.780
great looking game it runs the full HD
 

00:26:01.780 --> 00:26:04.390
great looking game it runs the full HD
when I was working on console I was

00:26:04.390 --> 00:26:04.400
when I was working on console I was
 

00:26:04.400 --> 00:26:07.600
when I was working on console I was
running a 720 720 is one megapixel now

00:26:07.600 --> 00:26:07.610
running a 720 720 is one megapixel now
 

00:26:07.610 --> 00:26:09.310
running a 720 720 is one megapixel now
phones we have four megapixel back there

00:26:09.310 --> 00:26:09.320
phones we have four megapixel back there
 

00:26:09.320 --> 00:26:11.380
phones we have four megapixel back there
you do not need to shade all of them

00:26:11.380 --> 00:26:11.390
you do not need to shade all of them
 

00:26:11.390 --> 00:26:15.070
you do not need to shade all of them
please don't because that's how I feel

00:26:15.070 --> 00:26:15.080
please don't because that's how I feel
 

00:26:15.080 --> 00:26:19.870
please don't because that's how I feel
about it

00:26:19.870 --> 00:26:19.880
 
 

00:26:19.880 --> 00:26:21.700
 
how do you recognize that you are

00:26:21.700 --> 00:26:21.710
how do you recognize that you are
 

00:26:21.710 --> 00:26:23.890
how do you recognize that you are
probably shading too many pixels where

00:26:23.890 --> 00:26:23.900
probably shading too many pixels where
 

00:26:23.900 --> 00:26:26.020
probably shading too many pixels where
you're gonna be GPU bound likely in

00:26:26.020 --> 00:26:26.030
you're gonna be GPU bound likely in
 

00:26:26.030 --> 00:26:29.650
you're gonna be GPU bound likely in
systrace there is a bar that gives you

00:26:29.650 --> 00:26:29.660
systrace there is a bar that gives you
 

00:26:29.660 --> 00:26:34.630
systrace there is a bar that gives you
the buffer count buffer count means that

00:26:34.630 --> 00:26:34.640
the buffer count buffer count means that
 

00:26:34.640 --> 00:26:37.600
the buffer count buffer count means that
the CPU is presenting a frame buffer

00:26:37.600 --> 00:26:37.610
the CPU is presenting a frame buffer
 

00:26:37.610 --> 00:26:39.700
the CPU is presenting a frame buffer
count goes to 1 the GPU does its own

00:26:39.700 --> 00:26:39.710
count goes to 1 the GPU does its own
 

00:26:39.710 --> 00:26:42.880
count goes to 1 the GPU does its own
thing just shade every single pixel then

00:26:42.880 --> 00:26:42.890
thing just shade every single pixel then
 

00:26:42.890 --> 00:26:44.680
thing just shade every single pixel then
the CPU is doing its work for the next

00:26:44.680 --> 00:26:44.690
the CPU is doing its work for the next
 

00:26:44.690 --> 00:26:48.040
the CPU is doing its work for the next
frame and if the GPU isn't finished yet

00:26:48.040 --> 00:26:48.050
frame and if the GPU isn't finished yet
 

00:26:48.050 --> 00:26:49.390
frame and if the GPU isn't finished yet
while the CPU will just put another

00:26:49.390 --> 00:26:49.400
while the CPU will just put another
 

00:26:49.400 --> 00:26:51.460
while the CPU will just put another
buffer in the queue just ready good good

00:26:51.460 --> 00:26:51.470
buffer in the queue just ready good good
 

00:26:51.470 --> 00:26:54.550
buffer in the queue just ready good good
to go and then wait what's probably and

00:26:54.550 --> 00:26:54.560
to go and then wait what's probably and
 

00:26:54.560 --> 00:26:58.090
to go and then wait what's probably and
the GPU will just try to catch up well

00:26:58.090 --> 00:26:58.100
the GPU will just try to catch up well
 

00:26:58.100 --> 00:26:59.860
the GPU will just try to catch up well
that's a situation where this buffer

00:26:59.860 --> 00:26:59.870
that's a situation where this buffer
 

00:26:59.870 --> 00:27:03.970
that's a situation where this buffer
count goes back to do another way of

00:27:03.970 --> 00:27:03.980
count goes back to do another way of
 

00:27:03.980 --> 00:27:07.420
count goes back to do another way of
saying it is well I have a frame that is

00:27:07.420 --> 00:27:07.430
saying it is well I have a frame that is
 

00:27:07.430 --> 00:27:10.420
saying it is well I have a frame that is
presented in 50 milliseconds let's

00:27:10.420 --> 00:27:10.430
presented in 50 milliseconds let's
 

00:27:10.430 --> 00:27:11.950
presented in 50 milliseconds let's
assume we don't have any frame pacing

00:27:11.950 --> 00:27:11.960
assume we don't have any frame pacing
 

00:27:11.960 --> 00:27:15.220
assume we don't have any frame pacing
issue here we already solved it well but

00:27:15.220 --> 00:27:15.230
issue here we already solved it well but
 

00:27:15.230 --> 00:27:17.380
issue here we already solved it well but
my friend time is taking 14 milliseconds

00:27:17.380 --> 00:27:17.390
my friend time is taking 14 milliseconds
 

00:27:17.390 --> 00:27:20.950
my friend time is taking 14 milliseconds
where the rest of the time is spent most

00:27:20.950 --> 00:27:20.960
where the rest of the time is spent most
 

00:27:20.960 --> 00:27:23.080
where the rest of the time is spent most
probably it's gonna be spent shading all

00:27:23.080 --> 00:27:23.090
probably it's gonna be spent shading all
 

00:27:23.090 --> 00:27:27.940
probably it's gonna be spent shading all
four megapixel this is very

00:27:27.940 --> 00:27:27.950
four megapixel this is very
 

00:27:27.950 --> 00:27:29.650
four megapixel this is very
straightforward to find out in a in

00:27:29.650 --> 00:27:29.660
straightforward to find out in a in
 

00:27:29.660 --> 00:27:32.200
straightforward to find out in a in
series I've seen a bunch looking exactly

00:27:32.200 --> 00:27:32.210
series I've seen a bunch looking exactly
 

00:27:32.210 --> 00:27:38.940
series I've seen a bunch looking exactly
like this now here's how you solve it

00:27:38.940 --> 00:27:38.950
 
 

00:27:38.950 --> 00:27:43.780
 
instead of a 3k by 1440 display instead

00:27:43.780 --> 00:27:43.790
instead of a 3k by 1440 display instead
 

00:27:43.790 --> 00:27:47.470
instead of a 3k by 1440 display instead
of rendering - all of it well crater in

00:27:47.470 --> 00:27:47.480
of rendering - all of it well crater in
 

00:27:47.480 --> 00:27:49.990
of rendering - all of it well crater in
the target that is molar and make sure

00:27:49.990 --> 00:27:50.000
the target that is molar and make sure
 

00:27:50.000 --> 00:27:53.820
the target that is molar and make sure
that you only stretch in one direction

00:27:53.820 --> 00:27:53.830
that you only stretch in one direction
 

00:27:53.830 --> 00:27:56.800
that you only stretch in one direction
reason is when you interpolate back it's

00:27:56.800 --> 00:27:56.810
reason is when you interpolate back it's
 

00:27:56.810 --> 00:27:58.090
reason is when you interpolate back it's
gonna be much higher quality and much

00:27:58.090 --> 00:27:58.100
gonna be much higher quality and much
 

00:27:58.100 --> 00:28:03.130
gonna be much higher quality and much
more cash right crash readiness help and

00:28:03.130 --> 00:28:03.140
more cash right crash readiness help and
 

00:28:03.140 --> 00:28:05.260
more cash right crash readiness help and
make sure that you're only rendering

00:28:05.260 --> 00:28:05.270
make sure that you're only rendering
 

00:28:05.270 --> 00:28:10.000
make sure that you're only rendering
your game word into this smaller and the

00:28:10.000 --> 00:28:10.010
your game word into this smaller and the
 

00:28:10.010 --> 00:28:12.670
your game word into this smaller and the
target no do you I the UI has generally

00:28:12.670 --> 00:28:12.680
target no do you I the UI has generally
 

00:28:12.680 --> 00:28:14.830
target no do you I the UI has generally
thin things and thin lines and phones

00:28:14.830 --> 00:28:14.840
thin things and thin lines and phones
 

00:28:14.840 --> 00:28:17.260
thin things and thin lines and phones
they don't scale well just render a full

00:28:17.260 --> 00:28:17.270
they don't scale well just render a full
 

00:28:17.270 --> 00:28:20.800
they don't scale well just render a full
resolution you eyes except for some

00:28:20.800 --> 00:28:20.810
resolution you eyes except for some
 

00:28:20.810 --> 00:28:23.980
resolution you eyes except for some
cases tend not to be too heavy so they

00:28:23.980 --> 00:28:23.990
cases tend not to be too heavy so they
 

00:28:23.990 --> 00:28:25.600
cases tend not to be too heavy so they
can go at full resolution and then

00:28:25.600 --> 00:28:25.610
can go at full resolution and then
 

00:28:25.610 --> 00:28:28.600
can go at full resolution and then
composite the tube in this case you're

00:28:28.600 --> 00:28:28.610
composite the tube in this case you're
 

00:28:28.610 --> 00:28:32.409
composite the tube in this case you're
saving 58% of the pixels this is

00:28:32.409 --> 00:28:32.419
saving 58% of the pixels this is
 

00:28:32.419 --> 00:28:37.299
saving 58% of the pixels this is
to be roughly a full-hd still on a

00:28:37.299 --> 00:28:37.309
to be roughly a full-hd still on a
 

00:28:37.309 --> 00:28:40.029
to be roughly a full-hd still on a
smaller screen it's gonna look amazing

00:28:40.029 --> 00:28:40.039
smaller screen it's gonna look amazing
 

00:28:40.039 --> 00:28:42.190
smaller screen it's gonna look amazing
it's still great nobody's gonna see it

00:28:42.190 --> 00:28:42.200
it's still great nobody's gonna see it
 

00:28:42.200 --> 00:28:45.129
it's still great nobody's gonna see it
if you are artist think that they're

00:28:45.129 --> 00:28:45.139
if you are artist think that they're
 

00:28:45.139 --> 00:28:47.080
if you are artist think that they're
gonna see the difference just tell them

00:28:47.080 --> 00:28:47.090
gonna see the difference just tell them
 

00:28:47.090 --> 00:28:50.440
gonna see the difference just tell them
that they won't if they still insist use

00:28:50.440 --> 00:28:50.450
that they won't if they still insist use
 

00:28:50.450 --> 00:28:51.099
that they won't if they still insist use
my trick

00:28:51.099 --> 00:28:51.109
my trick
 

00:28:51.109 --> 00:28:55.269
my trick
I never told artists that I was doing

00:28:55.269 --> 00:28:55.279
I never told artists that I was doing
 

00:28:55.279 --> 00:28:57.220
I never told artists that I was doing
any of these optimizations and they're

00:28:57.220 --> 00:28:57.230
any of these optimizations and they're
 

00:28:57.230 --> 00:28:59.139
any of these optimizations and they're
never spotted me that's why I'm still

00:28:59.139 --> 00:28:59.149
never spotted me that's why I'm still
 

00:28:59.149 --> 00:29:01.029
never spotted me that's why I'm still
here if they spotted me I probably

00:29:01.029 --> 00:29:01.039
here if they spotted me I probably
 

00:29:01.039 --> 00:29:07.720
here if they spotted me I probably
wouldn't my artists were awfully mean to

00:29:07.720 --> 00:29:07.730
wouldn't my artists were awfully mean to
 

00:29:07.730 --> 00:29:09.789
wouldn't my artists were awfully mean to
do the resizes cause sometime it's got

00:29:09.789 --> 00:29:09.799
do the resizes cause sometime it's got
 

00:29:09.799 --> 00:29:11.259
do the resizes cause sometime it's got
some GPU time because you have to

00:29:11.259 --> 00:29:11.269
some GPU time because you have to
 

00:29:11.269 --> 00:29:14.289
some GPU time because you have to
interpolate back to full fullscreen for

00:29:14.289 --> 00:29:14.299
interpolate back to full fullscreen for
 

00:29:14.299 --> 00:29:16.119
interpolate back to full fullscreen for
the final presentation a final

00:29:16.119 --> 00:29:16.129
the final presentation a final
 

00:29:16.129 --> 00:29:21.399
the final presentation a final
compositing and every Android device has

00:29:21.399 --> 00:29:21.409
compositing and every Android device has
 

00:29:21.409 --> 00:29:23.979
compositing and every Android device has
an Hardware composer that is not exposed

00:29:23.979 --> 00:29:23.989
an Hardware composer that is not exposed
 

00:29:23.989 --> 00:29:27.970
an Hardware composer that is not exposed
to the user which doesn't make me

00:29:27.970 --> 00:29:27.980
to the user which doesn't make me
 

00:29:27.980 --> 00:29:31.930
to the user which doesn't make me
particularly happy on the other hand any

00:29:31.930 --> 00:29:31.940
particularly happy on the other hand any
 

00:29:31.940 --> 00:29:37.210
particularly happy on the other hand any
game that will probably use this kind of

00:29:37.210 --> 00:29:37.220
game that will probably use this kind of
 

00:29:37.220 --> 00:29:39.039
game that will probably use this kind of
techniques and will probably be GPU

00:29:39.039 --> 00:29:39.049
techniques and will probably be GPU
 

00:29:39.049 --> 00:29:41.049
techniques and will probably be GPU
bound has some kind of post-processing

00:29:41.049 --> 00:29:41.059
bound has some kind of post-processing
 

00:29:41.059 --> 00:29:43.509
bound has some kind of post-processing
and tone mapping at the end where you're

00:29:43.509 --> 00:29:43.519
and tone mapping at the end where you're
 

00:29:43.519 --> 00:29:46.090
and tone mapping at the end where you're
doing I don't know some kind of blooming

00:29:46.090 --> 00:29:46.100
doing I don't know some kind of blooming
 

00:29:46.100 --> 00:29:48.519
doing I don't know some kind of blooming
some kind of torque correction well you

00:29:48.519 --> 00:29:48.529
some kind of torque correction well you
 

00:29:48.529 --> 00:29:52.840
some kind of torque correction well you
can do the process of stretching back to

00:29:52.840 --> 00:29:52.850
can do the process of stretching back to
 

00:29:52.850 --> 00:29:56.200
can do the process of stretching back to
full resolution in the post-processing

00:29:56.200 --> 00:29:56.210
full resolution in the post-processing
 

00:29:56.210 --> 00:29:58.389
full resolution in the post-processing
step it comes out not for free because

00:29:58.389 --> 00:29:58.399
step it comes out not for free because
 

00:29:58.399 --> 00:30:01.659
step it comes out not for free because
nothing is free but it's a nice way to

00:30:01.659 --> 00:30:01.669
nothing is free but it's a nice way to
 

00:30:01.669 --> 00:30:04.779
nothing is free but it's a nice way to
hide that time and to use it for

00:30:04.779 --> 00:30:04.789
hide that time and to use it for
 

00:30:04.789 --> 00:30:09.989
hide that time and to use it for
something useful this is a pretty common

00:30:09.989 --> 00:30:09.999
something useful this is a pretty common
 

00:30:09.999 --> 00:30:12.580
something useful this is a pretty common
way of doing the stretching back the

00:30:12.580 --> 00:30:12.590
way of doing the stretching back the
 

00:30:12.590 --> 00:30:14.080
way of doing the stretching back the
important thing that I want to stress

00:30:14.080 --> 00:30:14.090
important thing that I want to stress
 

00:30:14.090 --> 00:30:16.810
important thing that I want to stress
this point is that please stretch only

00:30:16.810 --> 00:30:16.820
this point is that please stretch only
 

00:30:16.820 --> 00:30:17.680
this point is that please stretch only
one direction

00:30:17.680 --> 00:30:17.690
one direction
 

00:30:17.690 --> 00:30:21.899
one direction
do not resize in two directions the

00:30:21.899 --> 00:30:21.909
do not resize in two directions the
 

00:30:21.909 --> 00:30:24.399
do not resize in two directions the
quality is much higher if you do it in

00:30:24.399 --> 00:30:24.409
quality is much higher if you do it in
 

00:30:24.409 --> 00:30:28.510
quality is much higher if you do it in
one direction

00:30:28.510 --> 00:30:28.520
 
 

00:30:28.520 --> 00:30:37.870
 
we've seen these four big I would say

00:30:37.870 --> 00:30:37.880
we've seen these four big I would say
 

00:30:37.880 --> 00:30:41.630
we've seen these four big I would say
performance pitfalls and I showed you

00:30:41.630 --> 00:30:41.640
performance pitfalls and I showed you
 

00:30:41.640 --> 00:30:46.029
performance pitfalls and I showed you
various ways to tackle it now you have

00:30:46.029 --> 00:30:46.039
various ways to tackle it now you have
 

00:30:46.039 --> 00:30:48.529
various ways to tackle it now you have
better knowledge of what you can

00:30:48.529 --> 00:30:48.539
better knowledge of what you can
 

00:30:48.539 --> 00:30:50.120
better knowledge of what you can
encounter in the field and a better

00:30:50.120 --> 00:30:50.130
encounter in the field and a better
 

00:30:50.130 --> 00:30:52.850
encounter in the field and a better
knowledge of how to solve these issues

00:30:52.850 --> 00:30:52.860
knowledge of how to solve these issues
 

00:30:52.860 --> 00:30:56.810
knowledge of how to solve these issues
they're pretty easy at the end of the

00:30:56.810 --> 00:30:56.820
they're pretty easy at the end of the
 

00:30:56.820 --> 00:30:58.970
they're pretty easy at the end of the
day except probably the last one I like

00:30:58.970 --> 00:30:58.980
day except probably the last one I like
 

00:30:58.980 --> 00:31:03.039
day except probably the last one I like
it doesn't take long to implement it and

00:31:03.039 --> 00:31:03.049
it doesn't take long to implement it and
 

00:31:03.049 --> 00:31:07.039
it doesn't take long to implement it and
use this knowledge now please go out

00:31:07.039 --> 00:31:07.049
use this knowledge now please go out
 

00:31:07.049 --> 00:31:09.980
use this knowledge now please go out
there and make some great games my name

00:31:09.980 --> 00:31:09.990
there and make some great games my name
 

00:31:09.990 --> 00:31:11.450
there and make some great games my name
is Francesco Karrueche

00:31:11.450 --> 00:31:11.460
is Francesco Karrueche
 

00:31:11.460 --> 00:31:29.330
is Francesco Karrueche
[Music]

00:31:29.330 --> 00:31:29.340
[Music]
 

00:31:29.340 --> 00:31:31.400
[Music]
you

