WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.880
[MUSIC PLAYING]

00:00:07.470 --> 00:00:09.470
CHRIS RAMSDALE: I'm Chris
Ramsdale, Lead Product

00:00:09.470 --> 00:00:12.299
Manager for the Google
Assistant SDK for devices.

00:00:12.299 --> 00:00:14.090
GLEN SHIRES: And I'm
Glen Shires, Technical

00:00:14.090 --> 00:00:16.239
Lead for Google Assistant SDK.

00:00:16.239 --> 00:00:17.780
CHRIS RAMSDALE: So
today, we're going

00:00:17.780 --> 00:00:19.880
to talk to you about
a couple of things.

00:00:19.880 --> 00:00:22.370
At the core, we're going to
talk to you about our software

00:00:22.370 --> 00:00:24.560
development kit that allows
you to embed the Google

00:00:24.560 --> 00:00:26.630
Assistant into hardware
devices and how

00:00:26.630 --> 00:00:30.350
to use that SDK to extend
the Assistant to work

00:00:30.350 --> 00:00:34.130
with the features and
functionality of your devices.

00:00:34.130 --> 00:00:37.850
So just to calibrate a little
bit, last year at Google I/O,

00:00:37.850 --> 00:00:41.090
we launched the initial version
of our Google Assistant SDK

00:00:41.090 --> 00:00:43.190
for devices that does
just what I said--

00:00:43.190 --> 00:00:45.007
allows you to
embed the Assistant

00:00:45.007 --> 00:00:47.090
experiences into the devices
that you're building.

00:00:47.090 --> 00:00:51.020
Whether you're a prototyper,
a maker, or a commercial OEM,

00:00:51.020 --> 00:00:54.084
this is the technology used
to actually get those features

00:00:54.084 --> 00:00:55.625
and functionality
into your hardware.

00:00:58.220 --> 00:01:01.900
And to frame the conversation
a little bit so you can get--

00:01:01.900 --> 00:01:03.990
because it's an ecosystem,
and there's a platform,

00:01:03.990 --> 00:01:05.156
and there's things involved.

00:01:05.156 --> 00:01:06.960
So let's talk a
little bit before we

00:01:06.960 --> 00:01:09.750
go deeper into how this
relates to the other pieces

00:01:09.750 --> 00:01:11.770
of technology that
we're building.

00:01:11.770 --> 00:01:14.735
So at the core, in the middle
here is the Assistant service.

00:01:14.735 --> 00:01:16.860
This is the artificial
intelligence and the machine

00:01:16.860 --> 00:01:19.080
learning, the AI and
the ML that's actually

00:01:19.080 --> 00:01:22.980
powering the virtual assistant
that is inside your home,

00:01:22.980 --> 00:01:25.200
hopefully, if you have a
Google Home or a Google Mini

00:01:25.200 --> 00:01:27.420
or a JBL speaker,
whatever it might be.

00:01:27.420 --> 00:01:28.212
That's at the core.

00:01:28.212 --> 00:01:30.669
And that we've been building
for years and years and years.

00:01:30.669 --> 00:01:32.370
That's basically the
evolution of search

00:01:32.370 --> 00:01:34.950
and other functionality that
we've been building at Google.

00:01:34.950 --> 00:01:37.920
Then we talk about
ways of extending it.

00:01:37.920 --> 00:01:40.770
So one way of extending it
is bringing third-party cloud

00:01:40.770 --> 00:01:43.080
services to the Assistant.

00:01:43.080 --> 00:01:44.620
So that's Actions on Google.

00:01:44.620 --> 00:01:46.620
And there's several
sessions about that going on

00:01:46.620 --> 00:01:48.354
throughout I/O. And
that's how you bring

00:01:48.354 --> 00:01:50.520
those services to the
Assistant so you can do things

00:01:50.520 --> 00:01:53.252
like order a pizza,
book a ride, and how

00:01:53.252 --> 00:01:55.710
you can extend the things that
we're not necessarily doing.

00:01:55.710 --> 00:02:00.280
So we might provide calendar
and GO and things like that,

00:02:00.280 --> 00:02:02.880
but other people are providing
those services-- again,

00:02:02.880 --> 00:02:04.576
ordering a pizza,
ordering a ride.

00:02:04.576 --> 00:02:06.450
Then the other way of
extending the Assistant

00:02:06.450 --> 00:02:09.214
is bringing that Assistant
experience to hardware devices.

00:02:09.214 --> 00:02:10.380
And that's where we come in.

00:02:10.380 --> 00:02:12.060
And that's what we're
going to talk about today.

00:02:12.060 --> 00:02:14.143
That's using the Google
Assistant SDK for devices.

00:02:17.560 --> 00:02:20.230
So to give-- again, in framing,
let's talk a little bit

00:02:20.230 --> 00:02:23.110
about what people are
using this SDK for.

00:02:23.110 --> 00:02:25.960
So we'll talk first
about commercial OEMs.

00:02:25.960 --> 00:02:30.970
So recently at the Consumer
Electronics Show in January,

00:02:30.970 --> 00:02:33.181
we announced integration
with the LG TV.

00:02:33.181 --> 00:02:35.680
So we brought the Assistant to
the experience inside the TV.

00:02:35.680 --> 00:02:38.440
Literally you're talking to
the push button on the remote.

00:02:38.440 --> 00:02:40.300
Invokes the Assistant
on the TV and then

00:02:40.300 --> 00:02:42.800
helps you out with
everything from what's my day

00:02:42.800 --> 00:02:45.710
look like to finding
media inside the TV.

00:02:45.710 --> 00:02:47.200
And the nice thing
about this is--

00:02:47.200 --> 00:02:49.720
as we go a little bit
deeper into what the SDK is,

00:02:49.720 --> 00:02:52.600
the TV was actually using
our cloud-based API.

00:02:52.600 --> 00:02:55.150
And then what LG did was
wrote a very thin client

00:02:55.150 --> 00:02:56.080
on top of webOS.

00:02:56.080 --> 00:02:59.110
WebOS is their operating system
that's running on those TVs.

00:02:59.110 --> 00:03:01.120
And they were able to
do an Over-The-Air, OTA,

00:03:01.120 --> 00:03:03.490
update to get onto
the TVs to reach

00:03:03.490 --> 00:03:05.590
millions of subscribers
and millions of end

00:03:05.590 --> 00:03:07.480
users of their TVs.

00:03:07.480 --> 00:03:09.460
So it was nice because
it gave them the ability

00:03:09.460 --> 00:03:10.990
to take new technology--

00:03:10.990 --> 00:03:13.000
the Google Assistant--
but actually work

00:03:13.000 --> 00:03:16.572
with in-market devices
that they already had.

00:03:16.572 --> 00:03:18.280
Then we also announced,
back in February,

00:03:18.280 --> 00:03:21.680
integration with the Nest
camera, the Nest Cam IQ.

00:03:21.680 --> 00:03:23.810
What's nice about
this is two things.

00:03:23.810 --> 00:03:26.170
One, the Nest Cams--
what we're finding

00:03:26.170 --> 00:03:29.050
is that households that have
bought a camera actually

00:03:29.050 --> 00:03:31.090
end up buying multiple cameras.

00:03:31.090 --> 00:03:33.100
And what that does is
that starts to give you

00:03:33.100 --> 00:03:34.900
this ubiquitous
experience in your house

00:03:34.900 --> 00:03:37.780
where you're walking through,
you ask for some help,

00:03:37.780 --> 00:03:40.270
and your virtual assistant
actually helps you out

00:03:40.270 --> 00:03:42.440
wherever you are when
you need that help.

00:03:42.440 --> 00:03:45.460
So it starts to push us
into the direction of, oh,

00:03:45.460 --> 00:03:49.360
going from my living room has a
Google Home, or a JBL speaker,

00:03:49.360 --> 00:03:52.580
or something like that, to I
actually have the Assistant

00:03:52.580 --> 00:03:53.830
streaming throughout my house.

00:03:56.460 --> 00:03:58.140
So those were commercial OEMs.

00:03:58.140 --> 00:04:00.660
We've also had some fun
experiments with our friends

00:04:00.660 --> 00:04:01.660
over at Deeplocal.

00:04:01.660 --> 00:04:04.530
So Deeplocal is a creative
agency out of Pittsburgh

00:04:04.530 --> 00:04:06.240
that we've worked
with several times

00:04:06.240 --> 00:04:08.872
over the past year
and a half to build

00:04:08.872 --> 00:04:10.080
some really cool experiments.

00:04:10.080 --> 00:04:13.020
So if you were out at
Google I/O last year,

00:04:13.020 --> 00:04:14.910
maybe you saw the
Mocktail Mixer that

00:04:14.910 --> 00:04:18.240
was out at the front of I/O,
or maybe you saw it on YouTube.

00:04:18.240 --> 00:04:20.610
Then in our October
hardware event,

00:04:20.610 --> 00:04:24.370
they built a pop-up donut
shop, which is really cool.

00:04:24.370 --> 00:04:26.662
You could walk up to it and
engage with the Assistant,

00:04:26.662 --> 00:04:27.870
and it would give you donuts.

00:04:27.870 --> 00:04:29.340
But then at random, it
would give you, actually,

00:04:29.340 --> 00:04:31.530
a Google Mini, which kind
of looks like a donut

00:04:31.530 --> 00:04:33.320
without a hole in the middle.

00:04:33.320 --> 00:04:35.520
And then they brought that
throughout many states

00:04:35.520 --> 00:04:36.780
in America.

00:04:36.780 --> 00:04:38.899
At the Consumer Electronics
Show in January,

00:04:38.899 --> 00:04:41.190
they did a giant gumball
machine, which was a huge hit.

00:04:41.190 --> 00:04:42.765
I think at one
point in time, there

00:04:42.765 --> 00:04:44.910
was about a two-hour-long
line of people

00:04:44.910 --> 00:04:47.182
coming up and actually
interacting with this thing.

00:04:47.182 --> 00:04:49.390
And then over in the Developer
Sandbox, the Assistant

00:04:49.390 --> 00:04:50.436
Developer Sandbox--

00:04:50.436 --> 00:04:52.560
we have a poster maker that
you can go and interact

00:04:52.560 --> 00:04:55.410
with the Assistant and generate
a unique poster that you

00:04:55.410 --> 00:04:56.850
can then take home with you.

00:04:56.850 --> 00:04:59.740
So not commercial devices,
but still a lot of fun.

00:04:59.740 --> 00:05:02.270
And it's really fun to
innovate with that team.

00:05:02.270 --> 00:05:05.940
It's also really fun to
innovate with the larger maker

00:05:05.940 --> 00:05:07.920
community, which
has been awesome.

00:05:07.920 --> 00:05:10.740
This has been a very
long tail of developers

00:05:10.740 --> 00:05:12.690
taking our software
development kit

00:05:12.690 --> 00:05:15.606
and using it in ways that we
would have never thought of.

00:05:15.606 --> 00:05:16.980
So I just highlighted
a few here.

00:05:16.980 --> 00:05:19.660
And I want to insert the
YouTube links, actually,

00:05:19.660 --> 00:05:21.040
if you want to check them out.

00:05:21.040 --> 00:05:23.370
But we've got people building
retro Google Home devices

00:05:23.370 --> 00:05:24.870
that are beautiful.

00:05:24.870 --> 00:05:26.510
We got a candy dispenser.

00:05:26.510 --> 00:05:28.260
We've had a ton of
robots, actually, which

00:05:28.260 --> 00:05:30.220
Glen is going to talk a
little bit about as well.

00:05:30.220 --> 00:05:31.636
And then we had
one maker actually

00:05:31.636 --> 00:05:33.960
embed the Assistant
inside of Mac OS

00:05:33.960 --> 00:05:36.194
to bring it to the
actual laptop experience.

00:05:36.194 --> 00:05:37.110
So a lot of fun there.

00:05:40.050 --> 00:05:42.214
So that's a bit of an
overview and framing.

00:05:42.214 --> 00:05:44.130
But I also want to just
jump right into a demo

00:05:44.130 --> 00:05:45.838
to let you see what
actually is happening

00:05:45.838 --> 00:05:48.700
and let Glen take over
and give you the demo

00:05:48.700 --> 00:05:50.580
and then talk
about how it works.

00:05:50.580 --> 00:05:51.330
GLEN SHIRES: Yeah.

00:05:51.330 --> 00:05:53.820
So as Chris was saying, you
can build the Google Assistant

00:05:53.820 --> 00:05:56.910
into all sorts of
types of devices.

00:05:56.910 --> 00:06:00.330
And there's also starter
kits that you can get.

00:06:00.330 --> 00:06:04.120
For example, the IMX7
is for Android Things.

00:06:04.120 --> 00:06:07.470
And we also have one called
the AIY Voice Kit that's

00:06:07.470 --> 00:06:09.630
available at several retailers.

00:06:09.630 --> 00:06:13.170
And you'll see the URL that
you can see the retailers

00:06:13.170 --> 00:06:15.030
and get that at.

00:06:15.030 --> 00:06:19.050
What that is is
this cardboard box.

00:06:19.050 --> 00:06:22.230
If you look closely, you can
see two microphones as well as,

00:06:22.230 --> 00:06:23.740
of course, a speaker.

00:06:23.740 --> 00:06:26.189
So we've got the
microphones up here on top,

00:06:26.189 --> 00:06:27.480
and we've got the speaker here.

00:06:27.480 --> 00:06:28.710
I've got a big battery here.

00:06:28.710 --> 00:06:30.126
You can just plug
it into the wall

00:06:30.126 --> 00:06:32.580
or whatever you'd like to do.

00:06:32.580 --> 00:06:35.850
So inside this cardboard-- the
whole thing comes in the kit.

00:06:35.850 --> 00:06:38.880
Inside the cardboard is
a small little computer

00:06:38.880 --> 00:06:40.925
called a Raspberry Pi.

00:06:40.925 --> 00:06:42.300
And let me show
you how it works.

00:06:45.370 --> 00:06:50.874
How long is the
Golden Gate Bridge?

00:06:50.874 --> 00:06:52.540
GOOGLE ASSISTANT: The
Golden Gate Bridge

00:06:52.540 --> 00:06:55.785
has a length of 8,981 feet.

00:06:55.785 --> 00:06:57.160
GLEN SHIRES: So
it's doing better

00:06:57.160 --> 00:07:02.230
than I am in terms of
speaking, I presume.

00:07:02.230 --> 00:07:05.860
How long is that in meters?

00:07:05.860 --> 00:07:08.342
GOOGLE ASSISTANT: One
foot equals 0.035 meter.

00:07:08.342 --> 00:07:10.300
GLEN SHIRES: So you've
got the Google Assistant

00:07:10.300 --> 00:07:11.655
inside an embedded device.

00:07:14.910 --> 00:07:15.620
Turn on hotword.

00:07:15.620 --> 00:07:17.160
Word.

00:07:17.160 --> 00:07:18.812
GOOGLE ASSISTANT:
Accepting hotword.

00:07:18.812 --> 00:07:20.770
GLEN SHIRES: So now I
don't have to trigger it.

00:07:20.770 --> 00:07:25.470
And I can simply say, hey
Google, pick a random number

00:07:25.470 --> 00:07:28.140
from one to 100.

00:07:28.140 --> 00:07:29.062
OK.

00:07:29.062 --> 00:07:32.014
[MUSIC PLAYING]

00:07:33.000 --> 00:07:35.400
GOOGLE ASSISTANT: 73.

00:07:35.400 --> 00:07:39.242
GLEN SHIRES: Hey Google, how
tall is Mount Kilimanjaro?

00:07:39.242 --> 00:07:40.700
GOOGLE ASSISTANT:
Mount Kilimanjaro

00:07:40.700 --> 00:07:44.780
is 19,341 feet tall.

00:07:44.780 --> 00:07:47.891
GLEN SHIRES: Hey Google,
turn off hotword.

00:07:47.891 --> 00:07:48.890
GOOGLE ASSISTANT: Sorry.

00:07:48.890 --> 00:07:50.424
I'm not sure how
to help with that.

00:07:50.424 --> 00:07:51.090
GLEN SHIRES: OK.

00:07:51.090 --> 00:07:51.910
[LAUGHTER]

00:07:51.910 --> 00:07:54.605
[APPLAUSE]

00:07:58.054 --> 00:07:59.470
So let me show you
how that works.

00:08:02.450 --> 00:08:06.670
So this cardboard box, as
I said, comes from a kit.

00:08:06.670 --> 00:08:11.170
It's an AIY do it yourself
kit with everything you need.

00:08:11.170 --> 00:08:16.551
And the kit itself connects to
the Google service via Wi-Fi.

00:08:16.551 --> 00:08:19.050
There's two different types of
software you can run on this.

00:08:19.050 --> 00:08:22.180
The SDK actually supports
two ways that you can run it.

00:08:22.180 --> 00:08:26.650
One is a way to run it on almost
any platform, any operating

00:08:26.650 --> 00:08:29.000
system, any
programming language.

00:08:29.000 --> 00:08:31.150
So you run all your
code directly on here,

00:08:31.150 --> 00:08:35.350
and we have sample code
that does exactly that.

00:08:35.350 --> 00:08:38.380
In this case, I'm actually
running some Python sample code

00:08:38.380 --> 00:08:42.871
on the box that implements the
entire client in that Python

00:08:42.871 --> 00:08:43.370
code.

00:08:43.370 --> 00:08:45.190
So you've got the entire sample.

00:08:45.190 --> 00:08:50.780
The other way, which is when
you say, hey Google, turn off

00:08:50.780 --> 00:08:51.280
hotword--

00:08:53.840 --> 00:08:55.510
and I'm pressing
my luck, I guess.

00:08:58.134 --> 00:08:59.800
The other way when
it's running that way

00:08:59.800 --> 00:09:05.254
is using a library that runs
directly on the Assistant--

00:09:05.254 --> 00:09:06.920
I'm sorry-- runs
directly on the client.

00:09:06.920 --> 00:09:09.490
So we provide the entire
client library, which

00:09:09.490 --> 00:09:11.470
includes things like
the hotword detection,

00:09:11.470 --> 00:09:14.060
OK Google, as well
as echo cancellation

00:09:14.060 --> 00:09:17.620
and a number of other nice
things like timers and alarms.

00:09:17.620 --> 00:09:21.470
And that runs on either
Linux or Android Things.

00:09:24.120 --> 00:09:24.620
Chris?

00:09:24.620 --> 00:09:25.880
CHRIS RAMSDALE: Oh, I think
you had some code in here.

00:09:25.880 --> 00:09:26.630
GLEN SHIRES: Yeah.

00:09:26.630 --> 00:09:28.915
So let me show you a
little bit about when

00:09:28.915 --> 00:09:30.040
you're running the library.

00:09:30.040 --> 00:09:32.210
It's actually quite
simple to use.

00:09:32.210 --> 00:09:35.080
You can see there
are simple functions

00:09:35.080 --> 00:09:38.560
you can call to start it, to
turn the microphone on mute.

00:09:38.560 --> 00:09:41.410
You can also-- rather than
starting it with a hotword,

00:09:41.410 --> 00:09:45.730
you can start the
interaction programmatically.

00:09:45.730 --> 00:09:47.860
And then the next slide
here shows you some

00:09:47.860 --> 00:09:50.090
of the events that come out.

00:09:50.090 --> 00:09:53.710
On the following slide, we
see a lot of different events

00:09:53.710 --> 00:09:56.770
that your code can handle
if you'd like to handle it,

00:09:56.770 --> 00:09:57.820
or there's no need to.

00:10:01.540 --> 00:10:04.300
Another thing I mentioned--
there are two microphones.

00:10:04.300 --> 00:10:07.630
And you may notice that
also on Google Home,

00:10:07.630 --> 00:10:09.830
there's only two
microphones on Google Home,

00:10:09.830 --> 00:10:13.330
and yet Google Home does a
wonderful job in background

00:10:13.330 --> 00:10:18.220
noise, with people speaking to
it from a good distance away.

00:10:18.220 --> 00:10:20.490
And the way that we
do that is a technique

00:10:20.490 --> 00:10:23.110
we called neural beamforming.

00:10:23.110 --> 00:10:24.670
What it does is--

00:10:24.670 --> 00:10:27.820
it's very similar to the
way people have two ears,

00:10:27.820 --> 00:10:32.560
and they're very good at
picking out speech out of noise.

00:10:32.560 --> 00:10:35.230
What we've done is we've
used machine learning

00:10:35.230 --> 00:10:40.390
and run this on the server
to get a noise robust far

00:10:40.390 --> 00:10:42.160
field experience.

00:10:42.160 --> 00:10:43.870
And what that means
is the client side

00:10:43.870 --> 00:10:46.510
has minimal processing
power, so we can really

00:10:46.510 --> 00:10:49.099
keep the clients low cost.

00:10:49.099 --> 00:10:49.890
Back to you, Chris.

00:10:49.890 --> 00:10:51.060
CHRIS RAMSDALE: Cool.

00:10:51.060 --> 00:10:52.990
So building on what
Glen was talking about,

00:10:52.990 --> 00:10:55.090
let's just go in a little
bit deeper into what

00:10:55.090 --> 00:10:56.980
the SDK actually provides.

00:10:56.980 --> 00:11:00.850
So at the highest level, there
is a cloud-based API that's

00:11:00.850 --> 00:11:02.590
built on a gRPC protocol.

00:11:02.590 --> 00:11:06.040
So gRPC actually uses
HTTP2 to go back and forth

00:11:06.040 --> 00:11:08.290
to give you streaming
support, which is important

00:11:08.290 --> 00:11:09.664
when you're actually
doing audio,

00:11:09.664 --> 00:11:12.190
because you want it to
be fast, low latency.

00:11:12.190 --> 00:11:15.790
The benefit to that API is
that it's available from just

00:11:15.790 --> 00:11:17.570
about any platform.

00:11:17.570 --> 00:11:20.890
So again, just like the
LG TV example that I gave,

00:11:20.890 --> 00:11:22.804
they had webOS.

00:11:22.804 --> 00:11:24.970
And we've got a number of
partners that are actually

00:11:24.970 --> 00:11:27.384
coming with our own
platforms that are already

00:11:27.384 --> 00:11:29.050
out in the market,
and they want to know

00:11:29.050 --> 00:11:32.000
how to bring those
platforms to the Assistant.

00:11:32.000 --> 00:11:35.750
And so we can create a very
thin client that communicates

00:11:35.750 --> 00:11:37.180
with that cloud API.

00:11:37.180 --> 00:11:41.140
And out of the box, we provide
what are called gRPC bindings.

00:11:41.140 --> 00:11:44.430
Those are those thin clients
that are built on Python,

00:11:44.430 --> 00:11:47.560
Node.js, C++, and they run on
either Linux or Android Things

00:11:47.560 --> 00:11:51.960
or any platform that
you actually have.

00:11:51.960 --> 00:11:56.390
That API is really good for push
button, push to talk support.

00:11:56.390 --> 00:11:59.050
So when Glen was with the
box and he pushed the button,

00:11:59.050 --> 00:12:01.200
that's actually
invoking a Think client

00:12:01.200 --> 00:12:03.490
that's talking to our API.

00:12:03.490 --> 00:12:06.100
If you want to have an
experience more like that Nest

00:12:06.100 --> 00:12:08.620
Cam where it's hands off--
because those cameras

00:12:08.620 --> 00:12:13.240
are typically mounted above you,
in your ceilings and whatnot.

00:12:13.240 --> 00:12:16.690
We call them far field or
hands-free experiences.

00:12:16.690 --> 00:12:18.910
And they use technologies
like wake word,

00:12:18.910 --> 00:12:22.660
or hotword is what you may have
heard, the whole OK Google bit.

00:12:22.660 --> 00:12:24.940
To get that experience,
we have client libraries

00:12:24.940 --> 00:12:28.110
that are built for Linux,
and specifically Linux

00:12:28.110 --> 00:12:31.160
3.18 and above, that give
you that hotword support

00:12:31.160 --> 00:12:33.397
and echo cancellation
Glen has mentioned.

00:12:33.397 --> 00:12:35.230
And because it's a
software development kit,

00:12:35.230 --> 00:12:38.320
obviously there's going to be
docs and samples and tools that

00:12:38.320 --> 00:12:41.770
allow you to embed the
Assistant, debug the Assistant,

00:12:41.770 --> 00:12:43.940
and test it as well.

00:12:43.940 --> 00:12:45.790
And then beyond that,
we have hardware kits.

00:12:45.790 --> 00:12:49.240
So Glen had mentioned
the AIY kit over here.

00:12:49.240 --> 00:12:53.770
So AIY is a twist on DIY,
so artificial intelligence

00:12:53.770 --> 00:12:55.780
done by you.

00:12:55.780 --> 00:12:57.070
And then there's also the--

00:12:57.070 --> 00:12:58.420
is that the iMX?

00:12:58.420 --> 00:13:00.430
GLEN SHIRES: iMX 7 kit, yes.

00:13:00.430 --> 00:13:01.330
CHRIS RAMSDALE: So there
are these software kits

00:13:01.330 --> 00:13:02.692
that allow you to start going.

00:13:02.692 --> 00:13:04.900
And we're going to expand
over time to actually bring

00:13:04.900 --> 00:13:08.830
more and more software
on chips, [? SOMs, ?]

00:13:08.830 --> 00:13:11.110
to the market for
developers to get up

00:13:11.110 --> 00:13:12.974
and going and running
with the Assistant.

00:13:16.210 --> 00:13:19.086
So with all that,
framing this again,

00:13:19.086 --> 00:13:21.460
our goal is to really to bring
that ubiquitous experience

00:13:21.460 --> 00:13:22.690
to everybody.

00:13:22.690 --> 00:13:26.024
And we're not going to build
all the hardware out there,

00:13:26.024 --> 00:13:27.940
nor are we going to build
all the experiences.

00:13:27.940 --> 00:13:30.970
So we've done a fairly good
job with speakers and whatnot,

00:13:30.970 --> 00:13:32.440
but there are appliances.

00:13:32.440 --> 00:13:33.502
There's auto.

00:13:33.502 --> 00:13:35.210
There's things that
are in your bathroom.

00:13:35.210 --> 00:13:36.581
And so we are really trying--

00:13:36.581 --> 00:13:38.080
why Glen and I get
up in the morning

00:13:38.080 --> 00:13:40.204
is actually to come
and figure out,

00:13:40.204 --> 00:13:41.620
what are those
user experiences we

00:13:41.620 --> 00:13:43.930
want to bring to
market with partners,

00:13:43.930 --> 00:13:46.750
be it prototypers or
makers or commercial OEMs,

00:13:46.750 --> 00:13:48.760
and then what technology
do we actually have

00:13:48.760 --> 00:13:52.830
to build to make that happen.

00:13:52.830 --> 00:13:56.610
And when we think about it,
one way to categorize it

00:13:56.610 --> 00:13:58.505
is to think about your day.

00:13:58.505 --> 00:13:59.880
And this is a
little bit trivial,

00:13:59.880 --> 00:14:01.470
but it gives you
an idea that we're

00:14:01.470 --> 00:14:04.159
trying to get a holistic
experience from streamlining

00:14:04.159 --> 00:14:05.700
your morning when
you want to wake up

00:14:05.700 --> 00:14:08.130
and have your
coffee made, or you

00:14:08.130 --> 00:14:11.500
want to stream NPR News to
figure out what's going on,

00:14:11.500 --> 00:14:14.160
or maybe you don't want
to stream the news.

00:14:14.160 --> 00:14:17.070
Then when you've actually moved
from your house to on the go--

00:14:17.070 --> 00:14:19.350
oh, I forgot to actually
set the security camera,

00:14:19.350 --> 00:14:21.390
I left the garage open,
or if you're coming home

00:14:21.390 --> 00:14:23.379
from, say, the
grocery store, and you

00:14:23.379 --> 00:14:25.170
want to preheat the
oven to 350 because you

00:14:25.170 --> 00:14:26.400
have lasagna that you
need to put in there

00:14:26.400 --> 00:14:27.624
when you get there.

00:14:27.624 --> 00:14:29.790
And then finally, helping
you relax in the evening--

00:14:29.790 --> 00:14:33.900
so everything from, hey, I have
kids, and so no more screen

00:14:33.900 --> 00:14:34.500
time for kids.

00:14:34.500 --> 00:14:36.450
So turn off the Wi-Fi
in the kid's room,

00:14:36.450 --> 00:14:38.190
or turn off the
Wi-Fi in the house,

00:14:38.190 --> 00:14:40.740
or dim the lights because we
actually want to watch a movie

00:14:40.740 --> 00:14:42.000
or watch TV.

00:14:42.000 --> 00:14:45.900
But just trying to figure out
what those user experiences are

00:14:45.900 --> 00:14:48.217
that actually add
value to you, and then

00:14:48.217 --> 00:14:49.800
figuring out the
technology behind it.

00:14:53.221 --> 00:14:55.220
So when it comes to,
actually, integration paths

00:14:55.220 --> 00:14:58.040
for doing this-- so if you're
actually building hardware,

00:14:58.040 --> 00:15:01.312
there's two paths that we have
coming into the Assistant.

00:15:01.312 --> 00:15:03.020
And it's a little bit
of marketing speak.

00:15:03.020 --> 00:15:06.920
We call Works With Assistant and
then Assistant Built-in Works

00:15:06.920 --> 00:15:09.860
With Assistant is-- if anybody
has like a Phillips Hue

00:15:09.860 --> 00:15:13.680
light or Nest Thermostat,
those are Works With devices.

00:15:13.680 --> 00:15:17.150
So they can be controlled by any
other device that has Assistant

00:15:17.150 --> 00:15:20.499
embedded inside of it.

00:15:20.499 --> 00:15:22.040
If you want more
information on that,

00:15:22.040 --> 00:15:24.650
tomorrow at 11:30
on Stage 5, they're

00:15:24.650 --> 00:15:27.200
going to be talking a
bit more about how you

00:15:27.200 --> 00:15:28.750
can integrate with Works With.

00:15:28.750 --> 00:15:30.710
Glen and I here are
talking about Built-in,

00:15:30.710 --> 00:15:32.480
so the second part, where you're
actually taking the Assistant

00:15:32.480 --> 00:15:33.950
and embedding in hardware.

00:15:33.950 --> 00:15:36.867
So it's a controller
versus controllee.

00:15:36.867 --> 00:15:39.200
You're building a controller,
a device that can actually

00:15:39.200 --> 00:15:42.475
control other devices as well
and interact with the Assistant

00:15:42.475 --> 00:15:44.600
service for knowledge
queries and things like that.

00:15:47.380 --> 00:15:49.380
Let's talk a little bit
about developer benefits

00:15:49.380 --> 00:15:52.800
of the Assistant and
the Assistant SDK.

00:15:52.800 --> 00:15:55.770
First of all, minimum
hardware requirements.

00:15:55.770 --> 00:15:59.190
So as I mentioned, if you're
doing push to talk scenarios

00:15:59.190 --> 00:16:01.290
and you want to integrate
with our cloud API,

00:16:01.290 --> 00:16:04.510
there's very little that's
needed on the client side.

00:16:04.510 --> 00:16:05.970
In fact, it's all up to you.

00:16:05.970 --> 00:16:07.710
Whatever you're
running on your client,

00:16:07.710 --> 00:16:09.030
you can keep running it.

00:16:09.030 --> 00:16:12.090
It's the effect of making a
simple REST call to our service

00:16:12.090 --> 00:16:13.560
to integrate.

00:16:13.560 --> 00:16:15.060
Beyond that, though,
if you actually

00:16:15.060 --> 00:16:16.740
want to integrate and
have hotword detection,

00:16:16.740 --> 00:16:18.156
echo cancellation,
and things like

00:16:18.156 --> 00:16:20.819
that so you can have that
hands-free experience,

00:16:20.819 --> 00:16:22.860
then we still have minimum
hardware requirements.

00:16:22.860 --> 00:16:26.190
As Glen had mentioned, we don't
require a massive mic array.

00:16:26.190 --> 00:16:27.660
Two mics, and you're good to go.

00:16:27.660 --> 00:16:29.510
And we can actually
use neural beamforming

00:16:29.510 --> 00:16:32.850
to figure out what you're saying
and do proper hotword detection

00:16:32.850 --> 00:16:34.530
and grammar detection.

00:16:34.530 --> 00:16:36.130
From a RAM
perspective, it's only

00:16:36.130 --> 00:16:39.630
256 megs of RAM required on the
device to get up and running,

00:16:39.630 --> 00:16:42.281
and then one core ARMv7
processor to get up

00:16:42.281 --> 00:16:42.780
and running.

00:16:42.780 --> 00:16:44.910
So we're truly trying
to shrink that down.

00:16:44.910 --> 00:16:46.535
And then over time,
we'll start looking

00:16:46.535 --> 00:16:48.270
at things like RTOS
and microcontrollers

00:16:48.270 --> 00:16:49.769
as we move into the
appliance space.

00:16:53.035 --> 00:16:54.410
We have built-in
hotword support,

00:16:54.410 --> 00:16:56.764
so you don't have to provide
your own hotword model

00:16:56.764 --> 00:16:57.680
or anything like that.

00:16:57.680 --> 00:16:59.540
You simply download
our library, put it

00:16:59.540 --> 00:17:00.984
on an embedded
Linux-based device,

00:17:00.984 --> 00:17:02.150
and you're off to the races.

00:17:02.150 --> 00:17:04.298
You've got OK Google, and
everything will pick up.

00:17:04.298 --> 00:17:05.839
And Glen had mentioned
and showed you

00:17:05.839 --> 00:17:07.730
in code we'll take
care of the rest.

00:17:07.730 --> 00:17:10.369
The library will take care
of bringing in the audio,

00:17:10.369 --> 00:17:11.960
transmitting it to
us in real time,

00:17:11.960 --> 00:17:13.834
and then streaming it
back down the response.

00:17:17.380 --> 00:17:20.829
And then as Google
is a global company,

00:17:20.829 --> 00:17:24.750
we know that we need to continue
to flesh out our languages

00:17:24.750 --> 00:17:26.310
and locale story.

00:17:26.310 --> 00:17:28.454
And we've done a great
job since last year moving

00:17:28.454 --> 00:17:30.870
into 14 different languages
and locales, as you can see up

00:17:30.870 --> 00:17:32.445
on this slide right here.

00:17:32.445 --> 00:17:35.070
But we want to see over time to
expand this map to actually get

00:17:35.070 --> 00:17:35.820
into other countries.

00:17:35.820 --> 00:17:38.160
Because we know that people
that are building-- again,

00:17:38.160 --> 00:17:40.707
whether you're a prototyper or
a maker or a commercial OEM,

00:17:40.707 --> 00:17:43.290
you need to meet your customers
where they actually are, where

00:17:43.290 --> 00:17:44.560
your end users actually are.

00:17:44.560 --> 00:17:47.060
And so we're going to continue
putting momentum behind this.

00:17:51.570 --> 00:17:54.650
And in terms of actually when
you're a commercial OEM--

00:17:54.650 --> 00:17:57.710
as we've learned over the
past 12 months working with LG

00:17:57.710 --> 00:17:59.660
and working with Nest
how to go from prototype

00:17:59.660 --> 00:18:00.720
to commercialization.

00:18:00.720 --> 00:18:02.510
So if you're in
that space and you

00:18:02.510 --> 00:18:04.594
are trying to build
a commercial device,

00:18:04.594 --> 00:18:06.260
I wanted to give you
an insight into how

00:18:06.260 --> 00:18:07.820
it's working right now.

00:18:07.820 --> 00:18:11.600
We're still early stages working
with a few commercial OEMs.

00:18:11.600 --> 00:18:14.810
Our goal is actually
to be more immersive

00:18:14.810 --> 00:18:16.730
and go deep with
them to figure out

00:18:16.730 --> 00:18:19.272
what are those right
experiences for their end users

00:18:19.272 --> 00:18:21.230
so that we can build the
foundation on which we

00:18:21.230 --> 00:18:24.170
can start building more
voice technology on top of.

00:18:24.170 --> 00:18:26.656
And so the path
here is-- and I'm

00:18:26.656 --> 00:18:28.280
hand-waving over a
few details, but you

00:18:28.280 --> 00:18:31.310
start prototyping using
Assistant SDK to build

00:18:31.310 --> 00:18:33.590
an idea, to build a concept.

00:18:33.590 --> 00:18:36.080
You submit that to
us for a review.

00:18:36.080 --> 00:18:39.110
And we'll iterate on
the device itself,

00:18:39.110 --> 00:18:41.270
how it fits in the
larger ecosystem, what

00:18:41.270 --> 00:18:42.936
are the end user
experiences that you're

00:18:42.936 --> 00:18:44.300
trying to bring to market.

00:18:44.300 --> 00:18:46.610
If it's all good, we end up
assigning an actual account

00:18:46.610 --> 00:18:48.950
manager, a technical
account manager, to you

00:18:48.950 --> 00:18:51.230
to help you facilitate
that and move forward.

00:18:51.230 --> 00:18:53.330
And then beyond that, you
go into certification,

00:18:53.330 --> 00:18:56.270
both in terms of, OK, is the
voice recognition actually

00:18:56.270 --> 00:18:59.950
working on the device, does it
meet our marketing guidelines,

00:18:59.950 --> 00:19:02.540
is the branding correct,
are we all in good shape.

00:19:02.540 --> 00:19:04.160
And then step five--

00:19:04.160 --> 00:19:06.230
launch, have a party,
and be good to go.

00:19:06.230 --> 00:19:08.360
So that's the path that
we're taking right now.

00:19:08.360 --> 00:19:10.230
And over the course of
the next few months,

00:19:10.230 --> 00:19:11.729
that's what we're
going to focus on.

00:19:11.729 --> 00:19:18.620
And then we're looking towards
really scaling that up in 2019.

00:19:18.620 --> 00:19:19.120
OK.

00:19:19.120 --> 00:19:20.570
So I'm going to go through
a few new features,

00:19:20.570 --> 00:19:21.340
and then we're going
to go back and forth

00:19:21.340 --> 00:19:23.137
a little bit on demos, I think.

00:19:23.137 --> 00:19:24.970
So since last year,
we've been hard at work,

00:19:24.970 --> 00:19:26.492
and we've added a
couple of things.

00:19:26.492 --> 00:19:28.450
First of all, we've added
visualization support

00:19:28.450 --> 00:19:32.140
to the SDK, so now you can
actually enable your device

00:19:32.140 --> 00:19:34.139
and say it's capable
of handling--

00:19:34.139 --> 00:19:35.680
it's a display-enabled
device, and it

00:19:35.680 --> 00:19:36.880
can handle visualizations.

00:19:36.880 --> 00:19:39.130
And you get things back like
knowledge queries, sports

00:19:39.130 --> 00:19:41.305
and scores, weather,
personal photos.

00:19:44.150 --> 00:19:46.240
I'll let Glen take it here.

00:19:46.240 --> 00:19:47.830
GLEN SHIRES: Thank you.

00:19:47.830 --> 00:19:50.830
So first off, I want to show
that we have a new developer

00:19:50.830 --> 00:19:52.240
tool.

00:19:52.240 --> 00:19:55.420
What you're seeing on screen
right there is my Chromebook.

00:19:55.420 --> 00:19:59.110
And with this, rather than
using an embedded device,

00:19:59.110 --> 00:20:04.870
you can actually use your laptop
with Chrome to test out the SDK

00:20:04.870 --> 00:20:07.480
and to get your
application running

00:20:07.480 --> 00:20:10.330
and test out
different parameters.

00:20:10.330 --> 00:20:13.750
For example, we support,
as Chris was mentioning,

00:20:13.750 --> 00:20:15.080
several different languages.

00:20:15.080 --> 00:20:18.130
And you can set the parameters
and then just test it out.

00:20:18.130 --> 00:20:23.990
For, example, I can say, what's
the weather in San Francisco?

00:20:27.704 --> 00:20:29.620
GOOGLE ASSISTANT:
Currently, in San Francisco,

00:20:29.620 --> 00:20:33.190
it's 62 degrees Fahrenheit
and partly cloudy.

00:20:33.190 --> 00:20:36.340
Today, it'll be cloudy with
a forecasted high of 62

00:20:36.340 --> 00:20:37.772
and a low of 53.

00:20:37.772 --> 00:20:39.730
GLEN SHIRES: So this is
not just visual output,

00:20:39.730 --> 00:20:43.210
but it's also input in that you
can see some suggestions here.

00:20:43.210 --> 00:20:44.830
I could save those
if I wanted to.

00:20:44.830 --> 00:20:46.852
Or if I just want
to click on it,

00:20:46.852 --> 00:20:48.685
I can find out the
weather for this weekend.

00:20:51.559 --> 00:20:53.350
GOOGLE ASSISTANT: In
San Francisco, Friday,

00:20:53.350 --> 00:20:55.510
it'll be mostly sunny
with a high of 70

00:20:55.510 --> 00:20:58.210
and a low of 59
degrees Fahrenheit.

00:20:58.210 --> 00:21:00.760
Saturday and Sunday,
it'll be cloudy with lows

00:21:00.760 --> 00:21:02.530
in the mid 50s.

00:21:02.530 --> 00:21:04.810
Highs will be in the
low 70s Saturday, then

00:21:04.810 --> 00:21:07.579
be in the mid 60s on Sunday.

00:21:07.579 --> 00:21:08.620
GLEN SHIRES: There we go.

00:21:08.620 --> 00:21:11.930
Of course, this can do
things Google Home can do,

00:21:11.930 --> 00:21:13.180
such as search.

00:21:13.180 --> 00:21:15.865
I can say, who is Larry Page?

00:21:19.172 --> 00:21:20.880
GOOGLE ASSISTANT:
According to Wikipedia,

00:21:20.880 --> 00:21:23.730
Lawrence Edward Page is an
American computer scientist

00:21:23.730 --> 00:21:25.920
and internet entrepreneur
who co-founded Google

00:21:25.920 --> 00:21:28.247
with Sergey Brin.

00:21:28.247 --> 00:21:30.330
GLEN SHIRES: And because
this is a developer tool,

00:21:30.330 --> 00:21:32.580
I can also, for example,
look at the request I made.

00:21:32.580 --> 00:21:35.400
This is actually a
JSON request that

00:21:35.400 --> 00:21:38.490
shows the different
parameters that I sent up

00:21:38.490 --> 00:21:40.170
in addition to the audio.

00:21:40.170 --> 00:21:43.090
And I can see the responses
that I got back from the server.

00:21:43.090 --> 00:21:45.720
You can see the
transcript as it was

00:21:45.720 --> 00:21:47.100
forming, as I was speaking it.

00:21:47.100 --> 00:21:48.660
It's showing the transcript.

00:21:48.660 --> 00:21:51.420
Later on, it's showing
the HTML coming out.

00:21:51.420 --> 00:21:53.280
And you see the
audio is actually

00:21:53.280 --> 00:21:56.910
being streamed back as well.

00:21:56.910 --> 00:22:00.190
But beyond search results, I
can also do personal results.

00:22:00.190 --> 00:22:03.380
For example, show me my photos.

00:22:06.880 --> 00:22:10.029
GOOGLE ASSISTANT: This is what
I found in your Google Photos.

00:22:10.029 --> 00:22:10.820
GLEN SHIRES: Sorry.

00:22:10.820 --> 00:22:12.695
I wasn't on the right
screen when I did that.

00:22:15.601 --> 00:22:18.100
GOOGLE ASSISTANT: Here's what
I found in your Google Photos.

00:22:18.100 --> 00:22:18.760
GLEN SHIRES: So there we go.

00:22:18.760 --> 00:22:20.260
And of course, I
can scroll through,

00:22:20.260 --> 00:22:23.050
see the different photos
of a whitewater rafting

00:22:23.050 --> 00:22:26.520
trip we did recently
and zoom in full screen.

00:22:29.770 --> 00:22:32.900
And so that shows what we can
do with this developer tool as

00:22:32.900 --> 00:22:36.539
well as the visual outputs.

00:22:36.539 --> 00:22:37.955
So let me show you
how that works.

00:22:40.670 --> 00:22:41.780
What we've done here--

00:22:41.780 --> 00:22:46.700
let me bring up the slide to
show you how this is working.

00:22:46.700 --> 00:22:49.250
What this is doing is
using the service API.

00:22:49.250 --> 00:22:52.590
As we said, we can run on
any code, any platform.

00:22:52.590 --> 00:22:55.190
So this is running
in JavaScript.

00:22:55.190 --> 00:22:58.400
And it's using the Chrome
browser as a client.

00:22:58.400 --> 00:23:01.850
The service is generating the
audio response in addition

00:23:01.850 --> 00:23:03.890
to HTML5.

00:23:03.890 --> 00:23:06.290
And of course, the browser
is displaying the HTML5.

00:23:10.120 --> 00:23:13.055
CHRIS RAMSDALE: So in
terms of also new features,

00:23:13.055 --> 00:23:14.680
one of the things
that's very important

00:23:14.680 --> 00:23:18.142
for us, especially when thinking
about third parties that

00:23:18.142 --> 00:23:20.350
are building hardware devices
with a system built in,

00:23:20.350 --> 00:23:24.940
is to get parity so that they
can build devices that actually

00:23:24.940 --> 00:23:26.710
work just as well,
if not better,

00:23:26.710 --> 00:23:29.380
than some of the devices
that Google is building.

00:23:29.380 --> 00:23:32.230
So one of the things we lacked
for a long time in the SDK

00:23:32.230 --> 00:23:34.440
was the ability to
do notifications,

00:23:34.440 --> 00:23:38.260
so to really have the Assistant
service push out updates

00:23:38.260 --> 00:23:39.620
to devices.

00:23:39.620 --> 00:23:41.704
So in this case, I have a
trivial example of, hey,

00:23:41.704 --> 00:23:43.953
Google, ring the dinner bell,
which will ring a dinner

00:23:43.953 --> 00:23:45.220
bell to all of your devices.

00:23:45.220 --> 00:23:48.264
This also works and helps us out
with things like OTA updates,

00:23:48.264 --> 00:23:49.930
so over-the-air updates
when we actually

00:23:49.930 --> 00:23:52.180
want to update a language
package, for example,

00:23:52.180 --> 00:23:53.041
on a device.

00:23:53.041 --> 00:23:54.790
It's very important
that we have that push

00:23:54.790 --> 00:23:56.184
notification for them.

00:23:56.184 --> 00:23:58.100
And so now we're happy
to add this to the SDK.

00:24:01.120 --> 00:24:05.372
We're also making an endeavor
and forays into music.

00:24:05.372 --> 00:24:07.330
So we're starting with
news and podcast support

00:24:07.330 --> 00:24:10.090
so now you can actually
access those news feeds--

00:24:10.090 --> 00:24:12.625
so NPR News, for example,
or your favorite podcast

00:24:12.625 --> 00:24:13.660
from Radiolab.

00:24:13.660 --> 00:24:17.302
I happen to be a "This
American Life" fan.

00:24:17.302 --> 00:24:19.510
And so now you can actually
build third-party devices

00:24:19.510 --> 00:24:22.260
that have news and podcast
support built into them.

00:24:22.260 --> 00:24:23.680
And I think Glen is going to
show that to us right now.

00:24:23.680 --> 00:24:24.010
GLEN SHIRES: Yeah.

00:24:24.010 --> 00:24:25.560
So let me demo that for you.

00:24:25.560 --> 00:24:28.900
Again, I'll be using
the AIY cardboard box,

00:24:28.900 --> 00:24:34.170
and I will simply
say, play the news.

00:24:34.170 --> 00:24:37.610
GOOGLE ASSISTANT:
Here's the latest news.

00:24:37.610 --> 00:24:41.450
GLEN SHIRES: And it brings
down the file, and--

00:24:41.450 --> 00:24:44.030
WINDSOR JOHNSTON: Live from
NPR News in Washington,

00:24:44.030 --> 00:24:45.530
I'm Windsor Johnston.

00:24:45.530 --> 00:24:46.822
President Trump's--

00:24:46.822 --> 00:24:47.780
GLEN SHIRES: Stop news.

00:24:51.540 --> 00:24:54.440
The other thing we wanted
to show is notifications.

00:24:54.440 --> 00:24:56.350
One thing that you can
do with Google Home,

00:24:56.350 --> 00:24:59.170
and you can also do with
other embedded devices,

00:24:59.170 --> 00:25:02.460
is have one device
talk to other devices.

00:25:02.460 --> 00:25:04.720
So for example, you
could broadcast things,

00:25:04.720 --> 00:25:10.380
or you could say something
like, ring the dinner bell.

00:25:10.380 --> 00:25:12.369
GOOGLE ASSISTANT:
OK, broadcasting now.

00:25:12.369 --> 00:25:14.410
GLEN SHIRES: So it's
broadcasting from one device

00:25:14.410 --> 00:25:15.640
to the other device.

00:25:15.640 --> 00:25:17.119
GOOGLE ASSISTANT:
It's dinner time.

00:25:17.119 --> 00:25:19.660
GLEN SHIRES: And so if you want
to call your kids for dinner,

00:25:19.660 --> 00:25:23.680
all the devices in your house
can say it's time to come down.

00:25:23.680 --> 00:25:24.180
Exactly.

00:25:24.180 --> 00:25:25.570
CHRIS RAMSDALE: Tell your
kids it's time to eat.

00:25:25.570 --> 00:25:27.486
GLEN SHIRES: So let's
show you how that works.

00:25:30.050 --> 00:25:33.160
So again, that notifications
doesn't necessarily

00:25:33.160 --> 00:25:36.580
have to be between two cardboard
boxes or two embedded devices.

00:25:36.580 --> 00:25:38.920
It's actually between
two Google Assistants

00:25:38.920 --> 00:25:41.446
that are logged into
the same account.

00:25:41.446 --> 00:25:43.570
So I could actually use my
phone to ring the dinner

00:25:43.570 --> 00:25:45.850
bell on an embedded device.

00:25:45.850 --> 00:25:49.380
And so that's how
notifications work,

00:25:49.380 --> 00:25:52.500
and that's how news works.

00:25:52.500 --> 00:25:53.530
CHRIS RAMSDALE: OK.

00:25:53.530 --> 00:25:55.510
To round out things
here, one of the features

00:25:55.510 --> 00:25:56.980
that I've been
really excited about

00:25:56.980 --> 00:25:59.210
is what we're calling
Device Actions.

00:25:59.210 --> 00:26:01.690
So when we initially
launched the Google Assistant

00:26:01.690 --> 00:26:04.850
SDK, the feedback from
the community was like,

00:26:04.850 --> 00:26:05.450
this is great.

00:26:05.450 --> 00:26:06.250
This is awesome.

00:26:06.250 --> 00:26:09.280
I can build a Google
Home clone now.

00:26:09.280 --> 00:26:11.110
How do I make it
do custom things?

00:26:11.110 --> 00:26:13.930
And it was nice because
that part of the community

00:26:13.930 --> 00:26:14.732
just got it.

00:26:14.732 --> 00:26:16.190
They understood
what we were doing,

00:26:16.190 --> 00:26:18.356
and they understood where
we should take it as well.

00:26:18.356 --> 00:26:20.470
And so this was
one of our answers

00:26:20.470 --> 00:26:22.930
to that request,
which is, OK, cool,

00:26:22.930 --> 00:26:24.870
let's let you embed
the Assistant,

00:26:24.870 --> 00:26:28.670
and then let's let you extend
it to control that device.

00:26:28.670 --> 00:26:31.810
And so this breaks down into
two ways of possibly doing this.

00:26:31.810 --> 00:26:34.701
We call them Built-in Device
Actions and Custom Device

00:26:34.701 --> 00:26:35.200
Actions.

00:26:35.200 --> 00:26:36.360
And so just bear
with me for a second,

00:26:36.360 --> 00:26:38.550
and I'll go a little
bit deeper into these.

00:26:38.550 --> 00:26:41.560
So Built-in Actions
are built on top

00:26:41.560 --> 00:26:45.220
of grammars, things you
can say to a device, where

00:26:45.220 --> 00:26:46.900
Google curates those.

00:26:46.900 --> 00:26:48.340
So a lot of the
home automation--

00:26:48.340 --> 00:26:50.920
if you have a Nest device
or a Philips Hue or a Wemo

00:26:50.920 --> 00:26:54.280
or whatever it may
be, turn on, turn off,

00:26:54.280 --> 00:26:56.200
turn down the temperature,
make it hotter--

00:26:56.200 --> 00:26:58.810
these are all grammars-- again,
things you can say to a device

00:26:58.810 --> 00:27:00.532
that we curate.

00:27:00.532 --> 00:27:01.490
And they're not static.

00:27:01.490 --> 00:27:02.156
They're dynamic.

00:27:02.156 --> 00:27:04.750
We actually can
change them over time.

00:27:04.750 --> 00:27:06.890
We can internationalize
them on your behalf.

00:27:06.890 --> 00:27:09.340
So if you're building
a device, you

00:27:09.340 --> 00:27:11.110
can leverage our
Built-in Actions

00:27:11.110 --> 00:27:13.480
and know that the grammars
that we have there

00:27:13.480 --> 00:27:15.050
will continue to grow.

00:27:15.050 --> 00:27:17.710
An anecdote that I
like to tell folks

00:27:17.710 --> 00:27:19.640
is we were doing good
with home automation,

00:27:19.640 --> 00:27:21.740
then we rolled out to the UK.

00:27:21.740 --> 00:27:24.190
We didn't see nearly the
traction we saw in the US

00:27:24.190 --> 00:27:25.720
when it comes to lighting.

00:27:25.720 --> 00:27:27.110
And we didn't know why.

00:27:27.110 --> 00:27:29.200
And it turns out that a
lot of people in the UK

00:27:29.200 --> 00:27:31.060
would say pop on and
pop off the lights.

00:27:31.060 --> 00:27:32.920
Not everybody, but
there was a segment

00:27:32.920 --> 00:27:34.660
of the population that would.

00:27:34.660 --> 00:27:36.670
And pop on and pop
off was not something

00:27:36.670 --> 00:27:38.470
that we had known about.

00:27:38.470 --> 00:27:41.680
And so we were able to do
our due diligence, research,

00:27:41.680 --> 00:27:42.820
and then change it.

00:27:42.820 --> 00:27:44.255
And we changed it
on the back end,

00:27:44.255 --> 00:27:46.463
and none of our lighting
partners had to do anything.

00:27:46.463 --> 00:27:50.161
It just magically started
working for those UK customers.

00:27:50.161 --> 00:27:51.910
Should we have figured
that out firsthand?

00:27:51.910 --> 00:27:54.740
Maybe, but that's debatable.

00:27:54.740 --> 00:27:56.740
So that's some of the
benefits of actually going

00:27:56.740 --> 00:27:58.000
with the built-in route.

00:27:58.000 --> 00:27:59.630
Now, all that said--

00:27:59.630 --> 00:28:02.620
and while those devices
and grammars and traits

00:28:02.620 --> 00:28:04.214
will evolve over
time, again, we're

00:28:04.214 --> 00:28:06.130
not going to build every
device, and we're not

00:28:06.130 --> 00:28:07.330
going to understand
everything that you

00:28:07.330 --> 00:28:08.413
want to do on that device.

00:28:08.413 --> 00:28:10.720
And so for that, we
offer Custom Actions

00:28:10.720 --> 00:28:14.110
where you as the developer,
you as the device manufacturer,

00:28:14.110 --> 00:28:18.880
can provide the grammars and
the commands mapping to us.

00:28:18.880 --> 00:28:20.920
And so what you say is,
these are the 10 things

00:28:20.920 --> 00:28:23.110
that people can say
to this device model,

00:28:23.110 --> 00:28:25.025
and these are the
structured intents,

00:28:25.025 --> 00:28:27.400
actual commands that should
come back down to the device.

00:28:27.400 --> 00:28:29.316
And then you build the
device drivers on there

00:28:29.316 --> 00:28:32.230
to actually do a
dance, do the Macarena,

00:28:32.230 --> 00:28:34.430
whatever it may
be on your device.

00:28:34.430 --> 00:28:36.730
But it's kind of an
escape hatch right now so

00:28:36.730 --> 00:28:39.130
that you can have the
flexibility and customization

00:28:39.130 --> 00:28:41.736
that you need to have when
building out your hardware.

00:28:41.736 --> 00:28:43.110
So again, keeping
with our theme,

00:28:43.110 --> 00:28:44.350
I'm going to kick it to Glen.

00:28:44.350 --> 00:28:46.000
GLEN SHIRES: Thank you, Chris.

00:28:46.000 --> 00:28:47.712
So yeah, I'd love
to give a demo.

00:28:47.712 --> 00:28:49.420
What we're going to
demo here is actually

00:28:49.420 --> 00:28:54.130
a toy robot that's specifically
built for prototyping.

00:28:54.130 --> 00:28:56.260
And it operates by Bluetooth.

00:28:56.260 --> 00:29:00.550
And let me turn on this robot.

00:29:00.550 --> 00:29:11.496
And I'll ask my favorite AIY
device, connect to robot.

00:29:11.496 --> 00:29:12.496
GOOGLE ASSISTANT: Sorry.

00:29:12.496 --> 00:29:13.972
I can't help with that yet.

00:29:13.972 --> 00:29:16.432
But I'm always learning.

00:29:16.432 --> 00:29:19.890
GLEN SHIRES: Let me try this.

00:29:19.890 --> 00:29:21.571
Connect to robot.

00:29:21.571 --> 00:29:22.570
GOOGLE ASSISTANT: Sorry.

00:29:22.570 --> 00:29:23.694
I can't help you with that.

00:29:23.694 --> 00:29:25.900
I found a few locations
for natural body.

00:29:25.900 --> 00:29:26.580
GLEN SHIRES: OK.

00:29:26.580 --> 00:29:27.400
Let me try this one.

00:29:27.400 --> 00:29:27.690
Sorry.

00:29:27.690 --> 00:29:30.231
GOOGLE ASSISTANT: The first one
is [INAUDIBLE] Spa at 810 San

00:29:30.231 --> 00:29:32.130
Antonio Road in Palo Alto.

00:29:32.130 --> 00:29:33.220
The second one is--

00:29:33.220 --> 00:29:33.886
GLEN SHIRES: OK.

00:29:39.289 --> 00:29:41.580
Let me show you how this
works, and then I'll give that

00:29:41.580 --> 00:29:42.810
a shot in just a second.

00:29:45.330 --> 00:29:46.746
What this is doing is--

00:29:46.746 --> 00:29:47.870
we can switch to the slide.

00:29:47.870 --> 00:29:49.290
Thank you.

00:29:49.290 --> 00:29:52.550
This is using, again,
the Google service,

00:29:52.550 --> 00:29:54.900
but we are implementing
a Custom Device Action

00:29:54.900 --> 00:29:58.800
so I can say things
like connect to robot.

00:29:58.800 --> 00:30:01.500
And what happens is
the Google service

00:30:01.500 --> 00:30:03.840
will understand my
speech and send back

00:30:03.840 --> 00:30:07.740
a command to this AIY box.

00:30:07.740 --> 00:30:10.180
And the AIY box
will, at that point,

00:30:10.180 --> 00:30:11.530
send a Bluetooth command.

00:30:11.530 --> 00:30:13.950
It receives JSON
that it can parse.

00:30:13.950 --> 00:30:16.110
And if it wants to
connect to robot,

00:30:16.110 --> 00:30:20.580
it sends a Bluetooth command
to connect to the robot.

00:30:20.580 --> 00:30:24.780
And again, we're
using the same library

00:30:24.780 --> 00:30:26.130
that we've used in the past.

00:30:26.130 --> 00:30:28.140
We've added a little bit
of code on top of this

00:30:28.140 --> 00:30:30.075
to implement the custom actions.

00:30:35.620 --> 00:30:36.930
Connect to robot.

00:30:36.930 --> 00:30:37.930
GOOGLE ASSISTANT: Sorry.

00:30:37.930 --> 00:30:40.060
I'm not sure how
to help with that.

00:30:40.060 --> 00:30:40.810
GLEN SHIRES: Geez.

00:30:45.124 --> 00:30:46.790
CHRIS RAMSDALE: I can
just keep talking.

00:30:46.790 --> 00:30:50.600
GLEN SHIRES: I'll try
it one more time, OK?

00:30:50.600 --> 00:30:52.372
Connect to robot.

00:30:52.372 --> 00:30:54.072
GOOGLE ASSISTANT:
Connecting robot.

00:30:54.072 --> 00:30:55.113
GLEN SHIRES: There we go.

00:30:55.113 --> 00:30:55.988
CHRIS RAMSDALE: Nice.

00:30:55.988 --> 00:30:58.071
[APPLAUSE]

00:30:59.550 --> 00:31:00.380
GLEN SHIRES: OK.

00:31:00.380 --> 00:31:00.740
CHRIS RAMSDALE: Hold on.

00:31:00.740 --> 00:31:01.790
It gets better.

00:31:01.790 --> 00:31:03.447
Trust me.

00:31:03.447 --> 00:31:05.030
GLEN SHIRES: The
light did turn green.

00:31:07.650 --> 00:31:09.746
Set color red.

00:31:09.746 --> 00:31:12.137
GOOGLE ASSISTANT:
Setting robot LED to red.

00:31:12.137 --> 00:31:14.720
GLEN SHIRES: So again, it sent
a Bluetooth command to do that.

00:31:17.760 --> 00:31:20.010
Robot, get up.

00:31:20.010 --> 00:31:21.747
GOOGLE ASSISTANT:
Robot getting up.

00:31:21.747 --> 00:31:23.580
GLEN SHIRES: So it's a
self-balancing robot.

00:31:27.030 --> 00:31:27.981
Go forward.

00:31:27.981 --> 00:31:29.606
GOOGLE ASSISTANT:
Robot moving forward.

00:31:33.970 --> 00:31:35.830
GLEN SHIRES: Turn left.

00:31:35.830 --> 00:31:38.272
GOOGLE ASSISTANT:
Robot turning left.

00:31:38.272 --> 00:31:39.980
CHRIS RAMSDALE: Don't
fall off the table.

00:31:39.980 --> 00:31:41.364
GLEN SHIRES: Turn right.

00:31:41.364 --> 00:31:43.672
GOOGLE ASSISTANT:
Robot turning right.

00:31:43.672 --> 00:31:44.880
GLEN SHIRES: And there we go.

00:31:44.880 --> 00:31:48.140
So you can see that we can
control a robot, or we can--

00:31:48.140 --> 00:31:51.260
the point of Custom Actions
is you can build an appliance

00:31:51.260 --> 00:31:54.740
or anything where you can
actually set your own grammar

00:31:54.740 --> 00:31:57.110
and then parse the
commands and have them do

00:31:57.110 --> 00:31:58.571
whatever you'd like them to do.

00:31:58.571 --> 00:31:59.570
CHRIS RAMSDALE: Awesome.

00:31:59.570 --> 00:32:00.567
Good job.

00:32:00.567 --> 00:32:03.002
[APPLAUSE]

00:32:09.830 --> 00:32:12.770
GLEN SHIRES: So let me
show you, very quickly,

00:32:12.770 --> 00:32:17.160
what we're sending up in terms
of Custom Device Actions.

00:32:17.160 --> 00:32:21.260
First of all, you can define
these using a lot of the tools

00:32:21.260 --> 00:32:23.630
that you may have used
for regular Actions,

00:32:23.630 --> 00:32:27.380
regular Assistant Actions,
such as the Actions on Google

00:32:27.380 --> 00:32:30.650
tools and also Dialogflow.

00:32:30.650 --> 00:32:33.500
What those will generate
are, in this case,

00:32:33.500 --> 00:32:37.650
a JSON file that you can
install into your device.

00:32:37.650 --> 00:32:42.260
And when your device is talking
directly to the Assistant,

00:32:42.260 --> 00:32:45.590
it's not like you have
to say, open my robot app

00:32:45.590 --> 00:32:47.750
and tell it to turn right.

00:32:47.750 --> 00:32:51.272
You can simply say, turn right.

00:32:51.272 --> 00:32:52.730
So the first thing
you would define

00:32:52.730 --> 00:32:55.580
is the intent, the
grammar, what you would

00:32:55.580 --> 00:32:57.290
say to make something happen.

00:32:57.290 --> 00:33:00.390
In this case, for example,
when I said set color red,

00:33:00.390 --> 00:33:03.020
here is the intent that
would allow me to say,

00:33:03.020 --> 00:33:07.167
set color red; set color to
red; robot, set color red.

00:33:07.167 --> 00:33:08.750
So there's a variety
of different ways

00:33:08.750 --> 00:33:11.030
that you can say things.

00:33:11.030 --> 00:33:12.500
And then on the
next slide, you'll

00:33:12.500 --> 00:33:15.950
see what the response
is, the fulfillment.

00:33:15.950 --> 00:33:18.300
First of all, I can
define the text to speech.

00:33:18.300 --> 00:33:24.170
So in this case, it's saying
setting robot LED to red.

00:33:24.170 --> 00:33:26.060
And then the execution,
where I actually

00:33:26.060 --> 00:33:27.950
can parse these
parameters-- and I

00:33:27.950 --> 00:33:31.610
can see that I'm
setting a color to red.

00:33:31.610 --> 00:33:36.980
So that is the way that we
define Custom Device Actions.

00:33:36.980 --> 00:33:39.500
We simply parse that
and then translate that

00:33:39.500 --> 00:33:42.410
into the commands to
control the robot.

00:33:42.410 --> 00:33:44.901
CHRIS RAMSDALE: Cool, thanks.

00:33:44.901 --> 00:33:45.400
All right.

00:33:45.400 --> 00:33:48.010
So the slide of I'm going to
tell you what I just told you,

00:33:48.010 --> 00:33:49.720
the recap--

00:33:49.720 --> 00:33:52.464
seriously, we're striving again
for that ubiquitous Assistant

00:33:52.464 --> 00:33:54.130
experience in your
life to help you out.

00:33:54.130 --> 00:33:55.310
GLEN SHIRES: Robot, get up.

00:33:55.310 --> 00:33:57.790
CHRIS RAMSDALE: And we know
that it's going to fueled by--

00:33:57.790 --> 00:33:58.690
to be successful,
it's going to be

00:33:58.690 --> 00:34:00.530
fueled by a healthy
ecosystem of developers.

00:34:00.530 --> 00:34:02.779
So that's all of you in this
room and everybody that's

00:34:02.779 --> 00:34:04.220
watching on YouTube right now.

00:34:04.220 --> 00:34:05.120
And our goal--

00:34:05.120 --> 00:34:07.120
Glen and I, and the team
that's helping us out--

00:34:07.120 --> 00:34:09.880
is to provide that software
development kit, those tools

00:34:09.880 --> 00:34:13.690
and technologies to
help you build and embed

00:34:13.690 --> 00:34:17.630
the Assistant into hardware
devices that you're building.

00:34:17.630 --> 00:34:19.670
So with that, I
think if this works,

00:34:19.670 --> 00:34:23.861
you might have one more
demo trick up your sleeve.

00:34:23.861 --> 00:34:24.860
GLEN SHIRES: Yes, we do.

00:34:27.389 --> 00:34:29.005
Do a dance.

00:34:29.005 --> 00:34:30.630
GOOGLE ASSISTANT:
Robot is getting down

00:34:30.630 --> 00:34:31.421
on the dance floor.

00:34:35.292 --> 00:34:38.203
[MUSIC PLAYING]

00:34:40.623 --> 00:34:43.527
[APPLAUSE]

00:34:47.477 --> 00:34:48.560
CHRIS RAMSDALE: All right.

00:34:48.560 --> 00:34:48.889
Well done.

00:34:48.889 --> 00:34:49.909
GLEN SHIRES: All right.

00:34:49.909 --> 00:34:50.850
Thank you very much.

00:34:50.850 --> 00:34:51.808
CHRIS RAMSDALE: Thanks.

00:34:51.808 --> 00:34:54.556
[APPLAUSE]

00:34:54.556 --> 00:34:55.400
Thanks again.

00:34:55.400 --> 00:34:56.663
Enjoy.

00:34:56.663 --> 00:35:00.805
[MUSIC PLAYING]

