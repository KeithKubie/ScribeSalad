WEBVTT
Kind: captions
Language: en

00:00:00.380 --> 00:00:05.549
 this capsule we will see some 

00:00:03.060 --> 00:00:09.170
 latest variations of the algorithm to 

00:00:05.549 --> 00:00:09.170
 stars as well as other apps 

00:00:09.260 --> 00:00:13.049
 then one of the problems that we can 

00:00:11.250 --> 00:00:17.070
 sometimes meet with the star it's 

00:00:13.049 --> 00:00:20.550
 that our open list and claude can 

00:00:17.070 --> 00:00:22.680
 become particularly successful and so 

00:00:20.550 --> 00:00:24.150
 have little by little we can meet at this 

00:00:22.680 --> 00:00:26.250
 moment there space problems 

00:00:24.150 --> 00:00:27.689
 memory so a very simple approach to 

00:00:26.250 --> 00:00:29.939
 solve this problem there is to 

00:00:27.689 --> 00:00:32.040
 to be inspired by bing algorithms 

00:00:29.939 --> 00:00:35.160
 search you will do but a limit 

00:00:32.040 --> 00:00:35.760
 on the actor who can take open 

00:00:35.160 --> 00:00:38.340
 is closed 

00:00:35.760 --> 00:00:39.840
 and if we try to insert in at the price 

00:00:38.340 --> 00:00:42.000
 of the clause but that would bring us 

00:00:39.840 --> 00:00:43.260
 to exceed the limit but what we do 

00:00:42.000 --> 00:00:45.390
 what we do we only look at 

00:00:43.260 --> 00:00:47.489
 the best elements according to our 

00:00:45.390 --> 00:00:50.789
 evaluation function then we do not insert 

00:00:47.489 --> 00:00:52.920
 to suffer his bed we throw them so if we 

00:00:50.789 --> 00:00:55.289
 makes his father the guarantees of the stars 

00:00:52.920 --> 00:00:58.050
 internal optimality but it can 

00:00:55.289 --> 00:01:00.059
 sometimes worked well and that's often 

00:00:58.050 --> 00:01:01.500
 a fairly fast correction of simple 

00:01:00.059 --> 00:01:02.820
 to do the canvas home guide for 

00:01:01.500 --> 00:01:05.339
 that they can work in a 

00:01:02.820 --> 00:01:05.810
 context where we have problems of 

00:01:05.339 --> 00:01:08.189
 memory 

00:01:05.810 --> 00:01:10.500
 a variant maybe a little bit 

00:01:08.189 --> 00:01:12.710
 better to the extent that we may have 

00:01:10.500 --> 00:01:14.939
 best guarantees of optimality 

00:01:12.710 --> 00:01:16.770
 this is called hydractive says 

00:01:14.939 --> 00:01:18.869
 ping so in what if actually this 

00:01:16.770 --> 00:01:21.030
 what we do is we will put a 

00:01:18.869 --> 00:01:23.159
 limit on the depth of paths 

00:01:21.030 --> 00:01:24.689
 we're going to explore so we'll stop 

00:01:23.159 --> 00:01:26.400
 to explore paths that are of a 

00:01:24.689 --> 00:01:29.210
 depth greater than a certain 

00:01:26.400 --> 00:01:31.619
 value during its star launch 

00:01:29.210 --> 00:01:36.090
 up to the depth limit that has 

00:01:31.619 --> 00:01:38.759
 been specified and then if we do not find 

00:01:36.090 --> 00:01:41.549
 solution in europe no solution 

00:01:38.759 --> 00:01:43.619
 with this depth the limit on 

00:01:41.549 --> 00:01:45.240
 increases by incriminating a little the 

00:01:43.619 --> 00:01:47.159
 maximum depth and we start again 

00:01:45.240 --> 00:01:48.600
 reversing so forth until 

00:01:47.159 --> 00:01:51.030
 we find a solution 

00:01:48.600 --> 00:01:52.860
 so that can prevent 

00:01:51.030 --> 00:01:54.479
 stars to unnecessarily explore 

00:01:52.860 --> 00:01:57.560
 paths that would be too deep for 

00:01:54.479 --> 00:01:57.560
 get a solution 

00:01:59.740 --> 00:02:03.490
 a variant a bit more advanced than I 

00:02:01.930 --> 00:02:05.670
 only go to mention then I you 

00:02:03.490 --> 00:02:07.780
 invite to go to the book of 

00:02:05.670 --> 00:02:10.090
 Nordic springs if you want 

00:02:07.780 --> 00:02:12.880
 to have more details is their curriculum 

00:02:10.090 --> 00:02:15.459
 drop fairsearch or just a mother 

00:02:12.880 --> 00:02:16.690
 band him hester so these are some 

00:02:15.459 --> 00:02:18.640
 variants that use less memory 

00:02:16.690 --> 00:02:20.709
 and can be longer so we 

00:02:18.640 --> 00:02:21.940
 compensates memory usage by a 

00:02:20.709 --> 00:02:23.769
 little more computing time 

00:02:21.940 --> 00:02:26.769
 however, these are variants that will 

00:02:23.769 --> 00:02:28.870
 keep the warranties of the stars and who 

00:02:26.769 --> 00:02:31.410
 will be able to be executed on us from 

00:02:28.870 --> 00:02:34.600
 constraints on the memory that one of 

00:02:31.410 --> 00:02:37.480
 which is accessible and finally I 

00:02:34.600 --> 00:02:39.549
 will mention it faster to cure it 

00:02:37.480 --> 00:02:41.170
 one of the stars which is a variant of 

00:02:39.549 --> 00:02:43.930
 the dynamic star that is to say where the 

00:02:41.170 --> 00:02:44.590
 costs of the arts is lightly loaded during 

00:02:43.930 --> 00:02:47.140
 execution 

00:02:44.590 --> 00:02:49.180
 so I invite you to consult the 

00:02:47.140 --> 00:02:51.640
 literature and perhaps doing a 

00:02:49.180 --> 00:02:53.920
 search on google for example for 

00:02:51.640 --> 00:02:58.840
 go see the information on this 

00:02:53.920 --> 00:03:01.180
 alternation you're interested no we're going 

00:02:58.840 --> 00:03:02.920
 look at some applications so we 

00:03:01.180 --> 00:03:04.840
 focused a lot on the problem 

00:03:02.920 --> 00:03:08.170
 to find two paths find a 

00:03:04.840 --> 00:03:10.890
 way between two cities one could 

00:03:08.170 --> 00:03:13.359
 come back to the problem of the imposing 

00:03:10.890 --> 00:03:15.790
 specifically sorry the problem of is 

00:03:13.359 --> 00:03:17.680
 not so fast so in what 

00:03:15.790 --> 00:03:19.299
 if a state what would that be topless in 

00:03:17.680 --> 00:03:23.459
 our graph it would be a configuration 

00:03:19.299 --> 00:03:27.070
 legal game we have the eight figures and 

00:03:23.459 --> 00:03:29.200
 an initial net empty space of the 

00:03:27.070 --> 00:03:33.280
 initial configuration we want 

00:03:29.200 --> 00:03:34.450
 provide the agent for the challenge or 

00:03:33.280 --> 00:03:37.630
 the riddle is in question 

00:03:34.450 --> 00:03:40.660
 and finally the and ultimately of this 

00:03:37.630 --> 00:03:43.420
 would be a winning configuration by 

00:03:40.660 --> 00:03:46.209
 example where we ordered one two three 

00:03:43.420 --> 00:03:50.049
 up to eight by taking a ride in the 

00:03:46.209 --> 00:03:51.549
 clockwise of curry and in this case 

00:03:50.049 --> 00:03:53.590
 transitions would be all 

00:03:51.549 --> 00:03:55.900
 possible actions from a state 

00:03:53.590 --> 00:03:58.450
 given so in this case we could 

00:03:55.900 --> 00:04:00.160
 move the empty space upwards 

00:03:58.450 --> 00:04:03.579
 would be associated with the north action of which 

00:04:00.160 --> 00:04:07.000
 body and if we called transition 

00:04:03.579 --> 00:04:09.389
 for this draw here is one of the leaders who 

00:04:07.000 --> 00:04:12.729
 would be generated that would be this 

00:04:09.389 --> 00:04:13.300
 configuration of the game then from 

00:04:12.729 --> 00:04:14.920
 this one 

00:04:13.300 --> 00:04:17.680
 they are called transition one of the walls 

00:04:14.920 --> 00:04:21.489
 which would be generated knows what the 

00:04:17.680 --> 00:04:22.690
 nine previous agree and so our 

00:04:21.489 --> 00:04:24.550
 transition function would simply 

00:04:22.690 --> 00:04:29.380
 implement that generation of 

00:04:24.550 --> 00:04:31.240
 states another problem that has been 

00:04:29.380 --> 00:04:33.690
 mentioned in the previous capsules 

00:04:31.240 --> 00:04:36.910
 and that of planning so we have 

00:04:33.690 --> 00:04:38.800
 a robot that we want to see 

00:04:36.910 --> 00:04:42.250
 perform certain tasks to move 

00:04:38.800 --> 00:04:44.740
 some goods in a warehouse 

00:04:42.250 --> 00:04:45.940
 for example in this case also each 

00:04:44.740 --> 00:04:48.490
 transitions actually could 

00:04:45.940 --> 00:04:51.010
 match one of the executions that 

00:04:48.490 --> 00:04:53.290
 can accomplish another robot so 

00:04:51.010 --> 00:04:57.130
 the example here it would be more of a robot 

00:04:53.290 --> 00:04:58.420
 would pass from the work of the room r5 

00:04:57.130 --> 00:05:04.800
 to the room 

00:04:58.420 --> 00:05:09.250
 r i believe in this case we ar 5 6 1 

00:05:04.800 --> 00:05:10.630
 so that generated this stole so our 

00:05:09.250 --> 00:05:12.520
 transition function does for all 

00:05:10.630 --> 00:05:14.260
 possible actions of the robot us 

00:05:12.520 --> 00:05:16.270
 would give out an eye that 

00:05:14.260 --> 00:05:18.280
 would correspond to all 

00:05:16.270 --> 00:05:21.970
 configurations of the environment and 

00:05:18.280 --> 00:05:24.310
 the agent possible and in that if the 

00:05:21.970 --> 00:05:26.230
 no 1 goal would correspond to the 

00:05:24.310 --> 00:05:27.820
 configuration of the robot and 

00:05:26.230 --> 00:05:31.630
 final goods being reached 

00:05:27.820 --> 00:05:33.630
 and so we are in a cock the sic of 

00:05:31.630 --> 00:05:36.310
 geographic search we could 

00:05:33.630 --> 00:05:40.870
 run to star on this type of 

00:05:36.310 --> 00:05:43.390
 problem another application in 

00:05:40.870 --> 00:05:45.700
 the automobile industry is the 

00:05:43.390 --> 00:05:47.050
 manipulation of a mechanical arm where 

00:05:45.700 --> 00:05:48.910
 wants to run a certain 

00:05:47.050 --> 00:05:51.700
 movement by one or more arms 

00:05:48.910 --> 00:05:53.950
 mechanical so that they pass 

00:05:51.700 --> 00:05:56.460
 from a point to a point b without entering 

00:05:53.950 --> 00:05:58.540
 in contact with some objects so 

00:05:56.460 --> 00:06:01.840
 because if we should reformulate a 

00:05:58.540 --> 00:06:03.040
 serious such as possible transitions 

00:06:01.840 --> 00:06:05.820
 among others 

00:06:03.040 --> 00:06:08.320
 would not lead to collisions and 

00:06:05.820 --> 00:06:11.920
 star could allow us to get 

00:06:08.320 --> 00:06:14.110
 a trajectory that would be the most 

00:06:11.920 --> 00:06:16.120
 possible to move from point a to 

00:06:14.110 --> 00:06:20.080
 a point b without coming into contact with 

00:06:16.120 --> 00:06:22.210
 objects to another domain 

00:06:20.080 --> 00:06:23.530
 similar applications would have 

00:06:22.210 --> 00:06:25.570
 in video games have wished 

00:06:23.530 --> 00:06:27.160
 automatically resuscitate characters 

00:06:25.570 --> 00:06:29.710
 to move from one configuration 

00:06:27.160 --> 00:06:31.810
 given to a final configuration 

00:06:29.710 --> 00:06:34.720
 again respecting some 

00:06:31.810 --> 00:06:37.630
 physical constraints in our 

00:06:34.720 --> 00:06:41.290
 resuscitation so and one and the them 

00:06:37.630 --> 00:06:43.980
 contacts or certain transgression 

00:06:41.290 --> 00:06:43.980
 physical 

00:06:44.820 --> 00:06:49.450
 so there are two problems there that come 

00:06:47.410 --> 00:06:51.400
 to finally see it's problems 

00:06:49.450 --> 00:06:55.210
 where we have to calculate a trajectory 

00:06:51.400 --> 00:06:57.520
 geometric properties of a solid avoiding 

00:06:55.210 --> 00:07:00.070
 collisions with obstacles that are 

00:06:57.520 --> 00:07:03.870
 static therefore are little formulate them and 

00:07:00.070 --> 00:07:05.950
 the networks of al baida stars for 

00:07:03.870 --> 00:07:07.960
 attack these problems there it takes 

00:07:05.950 --> 00:07:10.120
 sincerely define a serious one that is going 

00:07:07.960 --> 00:07:12.760
 take too much into account geometry 

00:07:10.120 --> 00:07:15.790
 say of a robot or an object that must 

00:07:12.760 --> 00:07:17.890
 to move and obstacles that must 

00:07:15.790 --> 00:07:19.390
 to be able to fill the kinetics of the 

00:07:17.890 --> 00:07:21.280
 robot what is the degrees of freedom 

00:07:19.390 --> 00:07:26.530
 for the movements of the robot in question 

00:07:21.280 --> 00:07:28.750
 or the animated avatar and provide 

00:07:26.530 --> 00:07:29.260
 in more initial configurations and 

00:07:28.750 --> 00:07:31.540
 final 

00:07:29.260 --> 00:07:32.830
 and we could pass that an algorithm 

00:07:31.540 --> 00:07:34.360
 in star that would give us in 

00:07:32.830 --> 00:07:36.970
 so insee begins continuous 

00:07:34.360 --> 00:07:39.460
 configuration that accomplish is 

00:07:36.970 --> 00:07:41.640
 finally there since one trajectory 

00:07:39.460 --> 00:07:43.750
 valid that would respect our constraints 

00:07:41.640 --> 00:07:48.400
 which will avoid among others the collisions 

00:07:43.750 --> 00:07:49.750
 with objects however both 

00:07:48.400 --> 00:07:52.600
 problems we just saw that of 

00:07:49.750 --> 00:07:54.040
 the cancellation of a video game and 

00:07:52.600 --> 00:07:54.880
 movement of a mechanical arm this is in 

00:07:54.040 --> 00:07:57.340
 does problems that are 

00:07:54.880 --> 00:07:59.530
 basically continues its share that the 

00:07:57.340 --> 00:08:01.210
 position of the arm or avatar in a 

00:07:59.530 --> 00:08:03.820
 scene finally it's much better 

00:08:01.210 --> 00:08:06.400
 modeled from a continuous point of view 

00:08:03.820 --> 00:08:09.430
 with positions ex yt to 

00:08:06.400 --> 00:08:11.890
 of essentially and an approach that 

00:08:09.430 --> 00:08:14.020
 can take for when even used in 

00:08:11.890 --> 00:08:15.430
 star is actually discrete teese is 

00:08:14.020 --> 00:08:17.350
 the problem 

00:08:15.430 --> 00:08:19.740
 that is to say we will take the whole 

00:08:17.350 --> 00:08:22.420
 variables in our state that are 

00:08:19.740 --> 00:08:24.010
 then we will assign them 

00:08:22.420 --> 00:08:25.720
 done we will compel them to take a 

00:08:24.010 --> 00:08:27.460
 number finished not there so if we had a 

00:08:25.720 --> 00:08:30.810
 variable that can take value between 

00:08:27.460 --> 00:08:32.800
 are between 0 and 10 

00:08:30.810 --> 00:08:34.930
 but what we could not do is 

00:08:32.800 --> 00:08:36.820
 rather discreet teaser the value the 

00:08:34.930 --> 00:08:38.160
 parameter in question to the imposing who 

00:08:36.820 --> 00:08:46.530
 take only as value either 

00:08:38.160 --> 00:08:49.120
 0.12 0.1 or 0.2 and institutes of agreement 

00:08:46.530 --> 00:08:51.580
 so once we discussed this 

00:08:49.120 --> 00:08:55.150
 way there our problem but then we can 

00:08:51.580 --> 00:08:58.260
 build a search graph that 

00:08:55.150 --> 00:09:00.070
 is who and discreet is called to star 

00:08:58.260 --> 00:09:01.060
 now I weigh it in the details 

00:09:00.070 --> 00:09:02.950
 on how can we do 

00:09:01.060 --> 00:09:03.910
 it's discretization there and according to 

00:09:02.950 --> 00:09:05.410
 problems it will vary 

00:09:03.910 --> 00:09:11.260
 what is the best way to 

00:09:05.410 --> 00:09:14.470
 discredit another example of a problem 

00:09:11.260 --> 00:09:16.540
 my willing to discredit the space or 

00:09:14.470 --> 00:09:18.600
 the description of the environment of 

00:09:16.540 --> 00:09:22.540
 our agent is the one where we would have a 

00:09:18.600 --> 00:09:24.070
 robot that would move in one in a 

00:09:22.540 --> 00:09:26.170
 given environment where we had 

00:09:24.070 --> 00:09:27.970
 different rooms with doors and 

00:09:26.170 --> 00:09:30.190
 institute since we wanted to do 

00:09:27.970 --> 00:09:32.380
 hurt the leg to complete their skin 

00:09:30.190 --> 00:09:34.420
 to accomplish certain tasks between 

00:09:32.380 --> 00:09:35.470
 other in what if an aspect of 

00:09:34.420 --> 00:09:38.380
 the state of the environment 

00:09:35.470 --> 00:09:42.400
 would like us to be very discreet 

00:09:38.380 --> 00:09:46.770
 tease and that would be the xy position of 

00:09:42.400 --> 00:09:46.770
 robot in the environment 

00:09:46.860 --> 00:09:50.980
 when we prefer to discredit 

00:09:48.970 --> 00:09:54.030
 space and just compounds 

00:09:50.980 --> 00:09:57.090
 the whole environment in boxes 

00:09:54.030 --> 00:10:00.160
 a certain size of a size 

00:09:57.090 --> 00:10:01.960
 restricted and in this case also in fact 

00:10:00.160 --> 00:10:04.630
 the robot would move from one square to 

00:10:01.960 --> 00:10:06.370
 the other so the state of the agent would be 

00:10:04.630 --> 00:10:09.220
 characterized by which box is this 

00:10:06.370 --> 00:10:12.190
 that the robot is holed up and assume that 

00:10:09.220 --> 00:10:13.990
 in fact each is not only the 

00:10:12.190 --> 00:10:16.030
 box occupied by the robot but also 

00:10:13.990 --> 00:10:17.800
 his orientation s that is moving towards 

00:10:16.030 --> 00:10:19.420
 east towards west towards 

00:10:17.800 --> 00:10:21.210
 south in this case we would have 

00:10:19.420 --> 00:10:23.770
 transitions that could be turned 

00:10:21.210 --> 00:10:26.290
 to the left turned to the right or 

00:10:23.770 --> 00:10:28.550
 go straight and in this case 

00:10:26.290 --> 00:10:31.339
 when we go straight ben it 

00:10:28.550 --> 00:10:33.050
 that the robot would change boxes and in 

00:10:31.339 --> 00:10:37.690
 this case the nodes that would be connected 

00:10:33.050 --> 00:10:40.490
 it would be two adjacent squares 

00:10:37.690 --> 00:10:43.399
 according to the direction where according 

00:10:40.490 --> 00:10:45.110
 the orientation of the robot and would 

00:10:43.399 --> 00:10:47.500
 connected together by the action was going 

00:10:45.110 --> 00:10:47.500
 straight ahead 

