WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
[QUIZ But does it work? Which of the following will our optimizer do?]

00:00:02.000 --> 00:00:05.000
We'll definitely replace A times 1 with A. We wrote the code for that.

00:00:05.000 --> 00:00:08.000
And we'll definitely replace A times [0] with 0.

00:00:08.000 --> 00:00:11.000
This next one--0 times A--looks super tempting

00:00:11.000 --> 00:00:13.000
but if you switch back for just a moment,

00:00:13.000 --> 00:00:17.000
you'll notice that our optimizer is not symmetric.

00:00:17.000 --> 00:00:21.000
We're only checking for the B--the right position--

00:00:21.000 --> 00:00:23.000
to be the constant number.

00:00:23.000 --> 00:00:26.000
That means we will not perform this optimization.

00:00:26.000 --> 00:00:28.000
Similarly, A times 1 times 1

00:00:28.000 --> 00:00:32.000
is going to depend a bit on what the input abstract syntax tree is,

00:00:32.000 --> 00:00:34.000
but at the end of the day, this will actually produce

00:00:34.000 --> 00:00:37.000
something like A times 1.

00:00:37.000 --> 00:00:41.000
We apply the rule once, but since we don't call ourselves recursively

00:00:41.000 --> 00:00:44.000
we're not going to notice that 1 times 1 is 1,

00:00:44.000 --> 00:00:47.000
and then also A times 1 is A.

00:00:47.000 --> 00:00:50.000
Currently, our optimizer can only do 1 optimization.

00:00:50.000 --> 00:00:53.000
Similarly, here we'd really like to reason

00:00:53.000 --> 00:00:55.000
that 5 times 0 is 0

00:00:55.000 --> 00:00:57.000
so A + 0 should be A,

00:00:57.000 --> 00:01:00.000
but our optimizer only checks 1 thing at the top level

00:01:00.000 --> 09:59:59.000
so it won't notice that yet.

