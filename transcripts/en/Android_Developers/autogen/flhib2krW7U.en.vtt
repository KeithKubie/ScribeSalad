WEBVTT
Kind: captions
Language: en

00:00:01.420 --> 00:00:03.550
 
[Music]

00:00:03.550 --> 00:00:03.560
[Music]
 

00:00:03.560 --> 00:00:04.880
[Music]
Wow

00:00:04.880 --> 00:00:04.890
Wow
 

00:00:04.890 --> 00:00:07.010
Wow
it's hard to believe it's been only a

00:00:07.010 --> 00:00:07.020
it's hard to believe it's been only a
 

00:00:07.020 --> 00:00:08.839
it's hard to believe it's been only a
year since we launched their bundle here

00:00:08.839 --> 00:00:08.849
year since we launched their bundle here
 

00:00:08.849 --> 00:00:11.690
year since we launched their bundle here
at i/o and what an incredible year it

00:00:11.690 --> 00:00:11.700
at i/o and what an incredible year it
 

00:00:11.700 --> 00:00:12.169
at i/o and what an incredible year it
was

00:00:12.169 --> 00:00:12.179
was
 

00:00:12.179 --> 00:00:14.539
was
I'm your feed with her a product manager

00:00:14.539 --> 00:00:14.549
I'm your feed with her a product manager
 

00:00:14.549 --> 00:00:17.300
I'm your feed with her a product manager
with the play London team and I'm Martin

00:00:17.300 --> 00:00:17.310
with the play London team and I'm Martin
 

00:00:17.310 --> 00:00:19.189
with the play London team and I'm Martin
a software engineer on Google Play in

00:00:19.189 --> 00:00:19.199
a software engineer on Google Play in
 

00:00:19.199 --> 00:00:21.470
a software engineer on Google Play in
London so today we're going to talk

00:00:21.470 --> 00:00:21.480
London so today we're going to talk
 

00:00:21.480 --> 00:00:23.090
London so today we're going to talk
about what's new this year in the world

00:00:23.090 --> 00:00:23.100
about what's new this year in the world
 

00:00:23.100 --> 00:00:26.509
about what's new this year in the world
of Android app bundles so many

00:00:26.509 --> 00:00:26.519
of Android app bundles so many
 

00:00:26.519 --> 00:00:28.189
of Android app bundles so many
developers have bought into our vision

00:00:28.189 --> 00:00:28.199
developers have bought into our vision
 

00:00:28.199 --> 00:00:30.109
developers have bought into our vision
of to optimize tailored delivery and

00:00:30.109 --> 00:00:30.119
of to optimize tailored delivery and
 

00:00:30.119 --> 00:00:31.880
of to optimize tailored delivery and
have already migrated to the app bundle

00:00:31.880 --> 00:00:31.890
have already migrated to the app bundle
 

00:00:31.890 --> 00:00:34.100
have already migrated to the app bundle
this includes some of the most popular

00:00:34.100 --> 00:00:34.110
this includes some of the most popular
 

00:00:34.110 --> 00:00:36.410
this includes some of the most popular
apps on Play seeing incredible size

00:00:36.410 --> 00:00:36.420
apps on Play seeing incredible size
 

00:00:36.420 --> 00:00:38.180
apps on Play seeing incredible size
savings that range from around 10

00:00:38.180 --> 00:00:38.190
savings that range from around 10
 

00:00:38.190 --> 00:00:40.549
savings that range from around 10
percent to 60 percent versus delivering

00:00:40.549 --> 00:00:40.559
percent to 60 percent versus delivering
 

00:00:40.559 --> 00:00:43.549
percent to 60 percent versus delivering
a universal apk we really couldn't have

00:00:43.549 --> 00:00:43.559
a universal apk we really couldn't have
 

00:00:43.559 --> 00:00:45.290
a universal apk we really couldn't have
hoped for a better acceptance of the app

00:00:45.290 --> 00:00:45.300
hoped for a better acceptance of the app
 

00:00:45.300 --> 00:00:48.709
hoped for a better acceptance of the app
bundle among the developer community and

00:00:48.709 --> 00:00:48.719
bundle among the developer community and
 

00:00:48.719 --> 00:00:50.990
bundle among the developer community and
Google apps are migrating as well so

00:00:50.990 --> 00:00:51.000
Google apps are migrating as well so
 

00:00:51.000 --> 00:00:53.270
Google apps are migrating as well so
this includes apps such as photos maps

00:00:53.270 --> 00:00:53.280
this includes apps such as photos maps
 

00:00:53.280 --> 00:00:55.069
this includes apps such as photos maps
and YouTube which have dramatically

00:00:55.069 --> 00:00:55.079
and YouTube which have dramatically
 

00:00:55.079 --> 00:00:57.049
and YouTube which have dramatically
reduced their app size having switched

00:00:57.049 --> 00:00:57.059
reduced their app size having switched
 

00:00:57.059 --> 00:00:59.979
reduced their app size having switched
to the bundle so how is this achieved

00:00:59.979 --> 00:00:59.989
to the bundle so how is this achieved
 

00:00:59.989 --> 00:01:02.450
to the bundle so how is this achieved
let's take a look back and remind

00:01:02.450 --> 00:01:02.460
let's take a look back and remind
 

00:01:02.460 --> 00:01:06.200
let's take a look back and remind
ourselves what the app bundle is so in

00:01:06.200 --> 00:01:06.210
ourselves what the app bundle is so in
 

00:01:06.210 --> 00:01:07.670
ourselves what the app bundle is so in
essence the app bundle is a new

00:01:07.670 --> 00:01:07.680
essence the app bundle is a new
 

00:01:07.680 --> 00:01:09.649
essence the app bundle is a new
publishing format that replaces the

00:01:09.649 --> 00:01:09.659
publishing format that replaces the
 

00:01:09.659 --> 00:01:12.980
publishing format that replaces the
traditional monolithic apk but the app

00:01:12.980 --> 00:01:12.990
traditional monolithic apk but the app
 

00:01:12.990 --> 00:01:14.660
traditional monolithic apk but the app
bundle is not installable directly

00:01:14.660 --> 00:01:14.670
bundle is not installable directly
 

00:01:14.670 --> 00:01:17.570
bundle is not installable directly
instead play generates apk is optimized

00:01:17.570 --> 00:01:17.580
instead play generates apk is optimized
 

00:01:17.580 --> 00:01:19.910
instead play generates apk is optimized
for specific devices from the single

00:01:19.910 --> 00:01:19.920
for specific devices from the single
 

00:01:19.920 --> 00:01:20.810
for specific devices from the single
bundle up late

00:01:20.810 --> 00:01:20.820
bundle up late
 

00:01:20.820 --> 00:01:23.420
bundle up late
these apks are much smaller than if the

00:01:23.420 --> 00:01:23.430
these apks are much smaller than if the
 

00:01:23.430 --> 00:01:25.160
these apks are much smaller than if the
developer were to deploy a single apk

00:01:25.160 --> 00:01:25.170
developer were to deploy a single apk
 

00:01:25.170 --> 00:01:27.560
developer were to deploy a single apk
for everyone but the single app load

00:01:27.560 --> 00:01:27.570
for everyone but the single app load
 

00:01:27.570 --> 00:01:28.999
for everyone but the single app load
provides a much simpler developer

00:01:28.999 --> 00:01:29.009
provides a much simpler developer
 

00:01:29.009 --> 00:01:32.140
provides a much simpler developer
experience than uploading multiple apks

00:01:32.140 --> 00:01:32.150
experience than uploading multiple apks
 

00:01:32.150 --> 00:01:34.069
experience than uploading multiple apks
so how does this work

00:01:34.069 --> 00:01:34.079
so how does this work
 

00:01:34.079 --> 00:01:36.620
so how does this work
so the smaller download size is achieved

00:01:36.620 --> 00:01:36.630
so the smaller download size is achieved
 

00:01:36.630 --> 00:01:38.450
so the smaller download size is achieved
by delivering only the resources from

00:01:38.450 --> 00:01:38.460
by delivering only the resources from
 

00:01:38.460 --> 00:01:40.929
by delivering only the resources from
the app that the specific devices need

00:01:40.929 --> 00:01:40.939
the app that the specific devices need
 

00:01:40.939 --> 00:01:43.399
the app that the specific devices need
deploying a single ap Caid would result

00:01:43.399 --> 00:01:43.409
deploying a single ap Caid would result
 

00:01:43.409 --> 00:01:45.770
deploying a single ap Caid would result
in all languages densities and native

00:01:45.770 --> 00:01:45.780
in all languages densities and native
 

00:01:45.780 --> 00:01:47.660
in all languages densities and native
architectures being delivered for all

00:01:47.660 --> 00:01:47.670
architectures being delivered for all
 

00:01:47.670 --> 00:01:50.450
architectures being delivered for all
the devices but as we see here with the

00:01:50.450 --> 00:01:50.460
the devices but as we see here with the
 

00:01:50.460 --> 00:01:52.490
the devices but as we see here with the
app bundle only the relevant languages

00:01:52.490 --> 00:01:52.500
app bundle only the relevant languages
 

00:01:52.500 --> 00:01:54.590
app bundle only the relevant languages
densities and native architectures are

00:01:54.590 --> 00:01:54.600
densities and native architectures are
 

00:01:54.600 --> 00:01:56.630
densities and native architectures are
delivered yielding a smaller install on

00:01:56.630 --> 00:01:56.640
delivered yielding a smaller install on
 

00:01:56.640 --> 00:02:00.560
delivered yielding a smaller install on
the device and the first to download so

00:02:00.560 --> 00:02:00.570
the device and the first to download so
 

00:02:00.570 --> 00:02:03.139
the device and the first to download so
on average the app bundle yields a 20%

00:02:03.139 --> 00:02:03.149
on average the app bundle yields a 20%
 

00:02:03.149 --> 00:02:05.510
on average the app bundle yields a 20%
reduction in app size this leads to

00:02:05.510 --> 00:02:05.520
reduction in app size this leads to
 

00:02:05.520 --> 00:02:08.330
reduction in app size this leads to
faster downloads which leads to an 11%

00:02:08.330 --> 00:02:08.340
faster downloads which leads to an 11%
 

00:02:08.340 --> 00:02:10.609
faster downloads which leads to an 11%
increase in install successes because

00:02:10.609 --> 00:02:10.619
increase in install successes because
 

00:02:10.619 --> 00:02:12.229
increase in install successes because
there are fewer chances for the download

00:02:12.229 --> 00:02:12.239
there are fewer chances for the download
 

00:02:12.239 --> 00:02:12.809
there are fewer chances for the download
to fail

00:02:12.809 --> 00:02:12.819
to fail
 

00:02:12.819 --> 00:02:16.410
to fail
and since less disk space is used it

00:02:16.410 --> 00:02:16.420
and since less disk space is used it
 

00:02:16.420 --> 00:02:19.369
and since less disk space is used it
also leads to a reduction in uninstalls

00:02:19.369 --> 00:02:19.379
also leads to a reduction in uninstalls
 

00:02:19.379 --> 00:02:22.440
also leads to a reduction in uninstalls
so since launched more than 80 thousand

00:02:22.440 --> 00:02:22.450
so since launched more than 80 thousand
 

00:02:22.450 --> 00:02:24.229
so since launched more than 80 thousand
apps have moved over to the app vandal

00:02:24.229 --> 00:02:24.239
apps have moved over to the app vandal
 

00:02:24.239 --> 00:02:26.819
apps have moved over to the app vandal
those apps and I publishing a single

00:02:26.819 --> 00:02:26.829
those apps and I publishing a single
 

00:02:26.829 --> 00:02:28.800
those apps and I publishing a single
bundle and relying on play to deliver

00:02:28.800 --> 00:02:28.810
bundle and relying on play to deliver
 

00:02:28.810 --> 00:02:30.780
bundle and relying on play to deliver
smaller apks to specific devices

00:02:30.780 --> 00:02:30.790
smaller apks to specific devices
 

00:02:30.790 --> 00:02:38.490
smaller apks to specific devices
tailored for them but this is just the

00:02:38.490 --> 00:02:38.500
tailored for them but this is just the
 

00:02:38.500 --> 00:02:40.559
tailored for them but this is just the
beginning the introduction of the app

00:02:40.559 --> 00:02:40.569
beginning the introduction of the app
 

00:02:40.569 --> 00:02:42.809
beginning the introduction of the app
bundle opens the door for new and

00:02:42.809 --> 00:02:42.819
bundle opens the door for new and
 

00:02:42.819 --> 00:02:45.119
bundle opens the door for new and
exciting delivery features that simply

00:02:45.119 --> 00:02:45.129
exciting delivery features that simply
 

00:02:45.129 --> 00:02:47.899
exciting delivery features that simply
wouldn't have been possible before

00:02:47.899 --> 00:02:47.909
wouldn't have been possible before
 

00:02:47.909 --> 00:02:50.940
wouldn't have been possible before
with the a bundle we can build towards a

00:02:50.940 --> 00:02:50.950
with the a bundle we can build towards a
 

00:02:50.950 --> 00:02:53.159
with the a bundle we can build towards a
vision of tailored delivery that

00:02:53.159 --> 00:02:53.169
vision of tailored delivery that
 

00:02:53.169 --> 00:02:56.089
vision of tailored delivery that
optimizes all aspects of your observing

00:02:56.089 --> 00:02:56.099
optimizes all aspects of your observing
 

00:02:56.099 --> 00:02:59.399
optimizes all aspects of your observing
from which part of your app to serve to

00:02:59.399 --> 00:02:59.409
from which part of your app to serve to
 

00:02:59.409 --> 00:03:04.830
from which part of your app to serve to
whom and when in order to take the a

00:03:04.830 --> 00:03:04.840
whom and when in order to take the a
 

00:03:04.840 --> 00:03:07.050
whom and when in order to take the a
bundle to the next level we are giving

00:03:07.050 --> 00:03:07.060
bundle to the next level we are giving
 

00:03:07.060 --> 00:03:10.199
bundle to the next level we are giving
you greater control and that's why our

00:03:10.199 --> 00:03:10.209
you greater control and that's why our
 

00:03:10.209 --> 00:03:12.629
you greater control and that's why our
main topic today is customizable

00:03:12.629 --> 00:03:12.639
main topic today is customizable
 

00:03:12.639 --> 00:03:15.179
main topic today is customizable
delivery which puts you in control over

00:03:15.179 --> 00:03:15.189
delivery which puts you in control over
 

00:03:15.189 --> 00:03:18.750
delivery which puts you in control over
how your app is being delivered this

00:03:18.750 --> 00:03:18.760
how your app is being delivered this
 

00:03:18.760 --> 00:03:20.759
how your app is being delivered this
will allow us to fully realize the

00:03:20.759 --> 00:03:20.769
will allow us to fully realize the
 

00:03:20.769 --> 00:03:23.430
will allow us to fully realize the
potential of the app bundle as it's you

00:03:23.430 --> 00:03:23.440
potential of the app bundle as it's you
 

00:03:23.440 --> 00:03:28.439
potential of the app bundle as it's you
who knows your app and users best today

00:03:28.439 --> 00:03:28.449
who knows your app and users best today
 

00:03:28.449 --> 00:03:31.020
who knows your app and users best today
we'll cover four new product offerings

00:03:31.020 --> 00:03:31.030
we'll cover four new product offerings
 

00:03:31.030 --> 00:03:32.819
we'll cover four new product offerings
that demonstrate the concept of

00:03:32.819 --> 00:03:32.829
that demonstrate the concept of
 

00:03:32.829 --> 00:03:36.330
that demonstrate the concept of
customizable delivery in app updates

00:03:36.330 --> 00:03:36.340
customizable delivery in app updates
 

00:03:36.340 --> 00:03:39.000
customizable delivery in app updates
that lets you target updates directly

00:03:39.000 --> 00:03:39.010
that lets you target updates directly
 

00:03:39.010 --> 00:03:42.839
that lets you target updates directly
from your traditional delivery that lets

00:03:42.839 --> 00:03:42.849
from your traditional delivery that lets
 

00:03:42.849 --> 00:03:44.399
from your traditional delivery that lets
you choose which feature module to

00:03:44.399 --> 00:03:44.409
you choose which feature module to
 

00:03:44.409 --> 00:03:47.879
you choose which feature module to
deliver to which devices on-demand

00:03:47.879 --> 00:03:47.889
deliver to which devices on-demand
 

00:03:47.889 --> 00:03:50.129
deliver to which devices on-demand
delivery that allows you to call for

00:03:50.129 --> 00:03:50.139
delivery that allows you to call for
 

00:03:50.139 --> 00:03:53.490
delivery that allows you to call for
features only when you need them and ask

00:03:53.490 --> 00:03:53.500
features only when you need them and ask
 

00:03:53.500 --> 00:03:55.890
features only when you need them and ask
a delivery for game that expands the a

00:03:55.890 --> 00:03:55.900
a delivery for game that expands the a
 

00:03:55.900 --> 00:03:58.289
a delivery for game that expands the a
bundle to include game content letting

00:03:58.289 --> 00:03:58.299
bundle to include game content letting
 

00:03:58.299 --> 00:04:00.479
bundle to include game content letting
you package your game assets alongside

00:04:00.479 --> 00:04:00.489
you package your game assets alongside
 

00:04:00.489 --> 00:04:02.819
you package your game assets alongside
video game binary and publish a single

00:04:02.819 --> 00:04:02.829
video game binary and publish a single
 

00:04:02.829 --> 00:04:06.179
video game binary and publish a single
artifact to play we'll also talk about

00:04:06.179 --> 00:04:06.189
artifact to play we'll also talk about
 

00:04:06.189 --> 00:04:08.969
artifact to play we'll also talk about
internal actually that gives you an easy

00:04:08.969 --> 00:04:08.979
internal actually that gives you an easy
 

00:04:08.979 --> 00:04:11.429
internal actually that gives you an easy
way to share test build with your

00:04:11.429 --> 00:04:11.439
way to share test build with your
 

00:04:11.439 --> 00:04:15.599
way to share test build with your
testers over to Martin to talk about

00:04:15.599 --> 00:04:15.609
testers over to Martin to talk about
 

00:04:15.609 --> 00:04:17.729
testers over to Martin to talk about
in-app updates our first product

00:04:17.729 --> 00:04:17.739
in-app updates our first product
 

00:04:17.739 --> 00:04:21.449
in-app updates our first product
offering for today thanks your feet so

00:04:21.449 --> 00:04:21.459
offering for today thanks your feet so
 

00:04:21.459 --> 00:04:23.279
offering for today thanks your feet so
auto updates are really great for

00:04:23.279 --> 00:04:23.289
auto updates are really great for
 

00:04:23.289 --> 00:04:25.790
auto updates are really great for
seamlessly keeping your users up to date

00:04:25.790 --> 00:04:25.800
seamlessly keeping your users up to date
 

00:04:25.800 --> 00:04:28.219
seamlessly keeping your users up to date
not all users receive them summer never

00:04:28.219 --> 00:04:28.229
not all users receive them summer never
 

00:04:28.229 --> 00:04:30.409
not all users receive them summer never
on Wi-Fi others may simply have Auto

00:04:30.409 --> 00:04:30.419
on Wi-Fi others may simply have Auto
 

00:04:30.419 --> 00:04:33.499
on Wi-Fi others may simply have Auto
updates turned off so some users end up

00:04:33.499 --> 00:04:33.509
updates turned off so some users end up
 

00:04:33.509 --> 00:04:36.649
updates turned off so some users end up
using old versions of the app now this

00:04:36.649 --> 00:04:36.659
using old versions of the app now this
 

00:04:36.659 --> 00:04:38.779
using old versions of the app now this
isn't great for developers for one thing

00:04:38.779 --> 00:04:38.789
isn't great for developers for one thing
 

00:04:38.789 --> 00:04:40.520
isn't great for developers for one thing
there may be a critical bug fix that you

00:04:40.520 --> 00:04:40.530
there may be a critical bug fix that you
 

00:04:40.530 --> 00:04:42.290
there may be a critical bug fix that you
really need to get out to all your users

00:04:42.290 --> 00:04:42.300
really need to get out to all your users
 

00:04:42.300 --> 00:04:44.570
really need to get out to all your users
a new and strategic feature you're

00:04:44.570 --> 00:04:44.580
a new and strategic feature you're
 

00:04:44.580 --> 00:04:47.360
a new and strategic feature you're
rolling out a multiplayer game where you

00:04:47.360 --> 00:04:47.370
rolling out a multiplayer game where you
 

00:04:47.370 --> 00:04:48.680
rolling out a multiplayer game where you
need to have all of your players on the

00:04:48.680 --> 00:04:48.690
need to have all of your players on the
 

00:04:48.690 --> 00:04:50.629
need to have all of your players on the
same version of the app or perhaps

00:04:50.629 --> 00:04:50.639
same version of the app or perhaps
 

00:04:50.639 --> 00:04:52.520
same version of the app or perhaps
you're simply looking to ditch support

00:04:52.520 --> 00:04:52.530
you're simply looking to ditch support
 

00:04:52.530 --> 00:04:55.490
you're simply looking to ditch support
for very old versions of the app now

00:04:55.490 --> 00:04:55.500
for very old versions of the app now
 

00:04:55.500 --> 00:04:57.140
for very old versions of the app now
in-app updates which we're launching

00:04:57.140 --> 00:04:57.150
in-app updates which we're launching
 

00:04:57.150 --> 00:04:59.629
in-app updates which we're launching
today gives you a way to trigger updates

00:04:59.629 --> 00:04:59.639
today gives you a way to trigger updates
 

00:04:59.639 --> 00:05:03.080
today gives you a way to trigger updates
of your app directly from your app it

00:05:03.080 --> 00:05:03.090
of your app directly from your app it
 

00:05:03.090 --> 00:05:05.300
of your app directly from your app it
gives you control over the right context

00:05:05.300 --> 00:05:05.310
gives you control over the right context
 

00:05:05.310 --> 00:05:07.189
gives you control over the right context
to your moment to start an update while

00:05:07.189 --> 00:05:07.199
to your moment to start an update while
 

00:05:07.199 --> 00:05:08.899
to your moment to start an update while
keeping the user in the app and not

00:05:08.899 --> 00:05:08.909
keeping the user in the app and not
 

00:05:08.909 --> 00:05:12.200
keeping the user in the app and not
risking additional friction so in-app

00:05:12.200 --> 00:05:12.210
risking additional friction so in-app
 

00:05:12.210 --> 00:05:14.689
risking additional friction so in-app
updates come in two flavors an immediate

00:05:14.689 --> 00:05:14.699
updates come in two flavors an immediate
 

00:05:14.699 --> 00:05:16.580
updates come in two flavors an immediate
flow that triggers the update right away

00:05:16.580 --> 00:05:16.590
flow that triggers the update right away
 

00:05:16.590 --> 00:05:19.430
flow that triggers the update right away
requiring minimal integration this is

00:05:19.430 --> 00:05:19.440
requiring minimal integration this is
 

00:05:19.440 --> 00:05:21.200
requiring minimal integration this is
because play handles the user experience

00:05:21.200 --> 00:05:21.210
because play handles the user experience
 

00:05:21.210 --> 00:05:24.080
because play handles the user experience
during the update and the flexible flow

00:05:24.080 --> 00:05:24.090
during the update and the flexible flow
 

00:05:24.090 --> 00:05:25.790
during the update and the flexible flow
that lets you customize the user

00:05:25.790 --> 00:05:25.800
that lets you customize the user
 

00:05:25.800 --> 00:05:27.730
that lets you customize the user
experience during the update this

00:05:27.730 --> 00:05:27.740
experience during the update this
 

00:05:27.740 --> 00:05:30.020
experience during the update this
requires more thinking and design work

00:05:30.020 --> 00:05:30.030
requires more thinking and design work
 

00:05:30.030 --> 00:05:32.080
requires more thinking and design work
but is ultimately much more customizable

00:05:32.080 --> 00:05:32.090
but is ultimately much more customizable
 

00:05:32.090 --> 00:05:34.909
but is ultimately much more customizable
so let's took let's take a look at both

00:05:34.909 --> 00:05:34.919
so let's took let's take a look at both
 

00:05:34.919 --> 00:05:38.270
so let's took let's take a look at both
of these flavors in action so first

00:05:38.270 --> 00:05:38.280
of these flavors in action so first
 

00:05:38.280 --> 00:05:39.800
of these flavors in action so first
we'll take a look at the immediate

00:05:39.800 --> 00:05:39.810
we'll take a look at the immediate
 

00:05:39.810 --> 00:05:41.689
we'll take a look at the immediate
in-app update flow with our sample

00:05:41.689 --> 00:05:41.699
in-app update flow with our sample
 

00:05:41.699 --> 00:05:45.110
in-app update flow with our sample
recipe finder app so as we can see here

00:05:45.110 --> 00:05:45.120
recipe finder app so as we can see here
 

00:05:45.120 --> 00:05:47.629
recipe finder app so as we can see here
the app triggers an update and the user

00:05:47.629 --> 00:05:47.639
the app triggers an update and the user
 

00:05:47.639 --> 00:05:49.700
the app triggers an update and the user
is kept in a manage flow until the

00:05:49.700 --> 00:05:49.710
is kept in a manage flow until the
 

00:05:49.710 --> 00:05:52.610
is kept in a manage flow until the
update finishes so first the user

00:05:52.610 --> 00:05:52.620
update finishes so first the user
 

00:05:52.620 --> 00:05:54.080
update finishes so first the user
confirms that they want to take the

00:05:54.080 --> 00:05:54.090
confirms that they want to take the
 

00:05:54.090 --> 00:05:56.540
confirms that they want to take the
update and the download size is revealed

00:05:56.540 --> 00:05:56.550
update and the download size is revealed
 

00:05:56.550 --> 00:05:59.269
update and the download size is revealed
to the user then the update is

00:05:59.269 --> 00:05:59.279
to the user then the update is
 

00:05:59.279 --> 00:06:01.640
to the user then the update is
downloaded during which Play manages the

00:06:01.640 --> 00:06:01.650
downloaded during which Play manages the
 

00:06:01.650 --> 00:06:04.700
downloaded during which Play manages the
user experience as we see here once the

00:06:04.700 --> 00:06:04.710
user experience as we see here once the
 

00:06:04.710 --> 00:06:06.230
user experience as we see here once the
update is downloaded and ready for

00:06:06.230 --> 00:06:06.240
update is downloaded and ready for
 

00:06:06.240 --> 00:06:08.689
update is downloaded and ready for
install it is applied and control is

00:06:08.689 --> 00:06:08.699
install it is applied and control is
 

00:06:08.699 --> 00:06:10.610
install it is applied and control is
returned to the new up-to-date shiny

00:06:10.610 --> 00:06:10.620
returned to the new up-to-date shiny
 

00:06:10.620 --> 00:06:13.070
returned to the new up-to-date shiny
version of the app then the user can

00:06:13.070 --> 00:06:13.080
version of the app then the user can
 

00:06:13.080 --> 00:06:14.980
version of the app then the user can
continue their journey inside the app

00:06:14.980 --> 00:06:14.990
continue their journey inside the app
 

00:06:14.990 --> 00:06:17.330
continue their journey inside the app
now here the developer doesn't need to

00:06:17.330 --> 00:06:17.340
now here the developer doesn't need to
 

00:06:17.340 --> 00:06:18.920
now here the developer doesn't need to
do anything beyond the initial trigger

00:06:18.920 --> 00:06:18.930
do anything beyond the initial trigger
 

00:06:18.930 --> 00:06:21.260
do anything beyond the initial trigger
of the update which can happen when the

00:06:21.260 --> 00:06:21.270
of the update which can happen when the
 

00:06:21.270 --> 00:06:25.999
of the update which can happen when the
developer chooses now some developers

00:06:25.999 --> 00:06:26.009
developer chooses now some developers
 

00:06:26.009 --> 00:06:27.559
developer chooses now some developers
will want more customized ability than

00:06:27.559 --> 00:06:27.569
will want more customized ability than
 

00:06:27.569 --> 00:06:30.830
will want more customized ability than
this so here we have swiggy swiggy is a

00:06:30.830 --> 00:06:30.840
this so here we have swiggy swiggy is a
 

00:06:30.840 --> 00:06:33.050
this so here we have swiggy swiggy is a
food delivery app popular in India with

00:06:33.050 --> 00:06:33.060
food delivery app popular in India with
 

00:06:33.060 --> 00:06:35.600
food delivery app popular in India with
more than 10 million downloads now many

00:06:35.600 --> 00:06:35.610
more than 10 million downloads now many
 

00:06:35.610 --> 00:06:37.730
more than 10 million downloads now many
of their users aren't regularly on Wi-Fi

00:06:37.730 --> 00:06:37.740
of their users aren't regularly on Wi-Fi
 

00:06:37.740 --> 00:06:38.879
of their users aren't regularly on Wi-Fi
and so can't benefit

00:06:38.879 --> 00:06:38.889
and so can't benefit
 

00:06:38.889 --> 00:06:41.129
and so can't benefit
from auto updates but by using in-app

00:06:41.129 --> 00:06:41.139
from auto updates but by using in-app
 

00:06:41.139 --> 00:06:42.989
from auto updates but by using in-app
updates they can prompt the user to

00:06:42.989 --> 00:06:42.999
updates they can prompt the user to
 

00:06:42.999 --> 00:06:44.850
updates they can prompt the user to
update while they're in the app and they

00:06:44.850 --> 00:06:44.860
update while they're in the app and they
 

00:06:44.860 --> 00:06:47.999
update while they're in the app and they
have the users attention so as we see

00:06:47.999 --> 00:06:48.009
have the users attention so as we see
 

00:06:48.009 --> 00:06:50.369
have the users attention so as we see
here swiggy have incorporated a small

00:06:50.369 --> 00:06:50.379
here swiggy have incorporated a small
 

00:06:50.379 --> 00:06:53.040
here swiggy have incorporated a small
alert icon that notifies the user that

00:06:53.040 --> 00:06:53.050
alert icon that notifies the user that
 

00:06:53.050 --> 00:06:55.559
alert icon that notifies the user that
the update is available then when the

00:06:55.559 --> 00:06:55.569
the update is available then when the
 

00:06:55.569 --> 00:06:57.269
the update is available then when the
user investigates they're prompted with

00:06:57.269 --> 00:06:57.279
user investigates they're prompted with
 

00:06:57.279 --> 00:06:59.570
user investigates they're prompted with
an opportunity to do in their map update

00:06:59.570 --> 00:06:59.580
an opportunity to do in their map update
 

00:06:59.580 --> 00:07:02.969
an opportunity to do in their map update
once again clay seeks confirmation by

00:07:02.969 --> 00:07:02.979
once again clay seeks confirmation by
 

00:07:02.979 --> 00:07:04.950
once again clay seeks confirmation by
displaying the download size but for

00:07:04.950 --> 00:07:04.960
displaying the download size but for
 

00:07:04.960 --> 00:07:06.899
displaying the download size but for
this flow once the user is accepted

00:07:06.899 --> 00:07:06.909
this flow once the user is accepted
 

00:07:06.909 --> 00:07:08.850
this flow once the user is accepted
control is returned immediately back to

00:07:08.850 --> 00:07:08.860
control is returned immediately back to
 

00:07:08.860 --> 00:07:11.309
control is returned immediately back to
the app and the user can continue to use

00:07:11.309 --> 00:07:11.319
the app and the user can continue to use
 

00:07:11.319 --> 00:07:12.929
the app and the user can continue to use
the app while the update is being

00:07:12.929 --> 00:07:12.939
the app while the update is being
 

00:07:12.939 --> 00:07:15.629
the app while the update is being
downloaded finally when the update is

00:07:15.629 --> 00:07:15.639
downloaded finally when the update is
 

00:07:15.639 --> 00:07:17.730
downloaded finally when the update is
ready clay will inform the app again and

00:07:17.730 --> 00:07:17.740
ready clay will inform the app again and
 

00:07:17.740 --> 00:07:20.219
ready clay will inform the app again and
the app can do something appropriate for

00:07:20.219 --> 00:07:20.229
the app can do something appropriate for
 

00:07:20.229 --> 00:07:23.309
the app can do something appropriate for
example here swiggy raises a snack bar

00:07:23.309 --> 00:07:23.319
example here swiggy raises a snack bar
 

00:07:23.319 --> 00:07:25.019
example here swiggy raises a snack bar
which provides the opportunity for the

00:07:25.019 --> 00:07:25.029
which provides the opportunity for the
 

00:07:25.029 --> 00:07:26.610
which provides the opportunity for the
user to complete the update by

00:07:26.610 --> 00:07:26.620
user to complete the update by
 

00:07:26.620 --> 00:07:28.800
user to complete the update by
restarting the app again into the new

00:07:28.800 --> 00:07:28.810
restarting the app again into the new
 

00:07:28.810 --> 00:07:32.129
restarting the app again into the new
shiny version of the app so the flexible

00:07:32.129 --> 00:07:32.139
shiny version of the app so the flexible
 

00:07:32.139 --> 00:07:33.749
shiny version of the app so the flexible
in-app update flow provides the

00:07:33.749 --> 00:07:33.759
in-app update flow provides the
 

00:07:33.759 --> 00:07:35.490
in-app update flow provides the
developer the opportunity to customize

00:07:35.490 --> 00:07:35.500
developer the opportunity to customize
 

00:07:35.500 --> 00:07:38.659
developer the opportunity to customize
the experience during the in-app update

00:07:38.659 --> 00:07:38.669
the experience during the in-app update
 

00:07:38.669 --> 00:07:41.309
the experience during the in-app update
so next let's take a look how this looks

00:07:41.309 --> 00:07:41.319
so next let's take a look how this looks
 

00:07:41.319 --> 00:07:45.240
so next let's take a look how this looks
like in code so first we acquire an

00:07:45.240 --> 00:07:45.250
like in code so first we acquire an
 

00:07:45.250 --> 00:07:47.159
like in code so first we acquire an
instance of an app update manager from

00:07:47.159 --> 00:07:47.169
instance of an app update manager from
 

00:07:47.169 --> 00:07:48.959
instance of an app update manager from
the Play color library this is an object

00:07:48.959 --> 00:07:48.969
the Play color library this is an object
 

00:07:48.969 --> 00:07:50.790
the Play color library this is an object
that lets you interact with the in-app

00:07:50.790 --> 00:07:50.800
that lets you interact with the in-app
 

00:07:50.800 --> 00:07:54.240
that lets you interact with the in-app
update API we make a call to find out

00:07:54.240 --> 00:07:54.250
update API we make a call to find out
 

00:07:54.250 --> 00:07:56.969
update API we make a call to find out
whether an update is available if it is

00:07:56.969 --> 00:07:56.979
whether an update is available if it is
 

00:07:56.979 --> 00:07:58.619
whether an update is available if it is
then we can act appropriately

00:07:58.619 --> 00:07:58.629
then we can act appropriately
 

00:07:58.629 --> 00:08:00.389
then we can act appropriately
perhaps triggering the in-app update

00:08:00.389 --> 00:08:00.399
perhaps triggering the in-app update
 

00:08:00.399 --> 00:08:02.369
perhaps triggering the in-app update
flow immediately or perhaps rendering

00:08:02.369 --> 00:08:02.379
flow immediately or perhaps rendering
 

00:08:02.379 --> 00:08:04.909
flow immediately or perhaps rendering
some button that will do so once clicked

00:08:04.909 --> 00:08:04.919
some button that will do so once clicked
 

00:08:04.919 --> 00:08:07.889
some button that will do so once clicked
now the Java play core API for in-app

00:08:07.889 --> 00:08:07.899
now the Java play core API for in-app
 

00:08:07.899 --> 00:08:09.869
now the Java play core API for in-app
updates that we see here is available

00:08:09.869 --> 00:08:09.879
updates that we see here is available
 

00:08:09.879 --> 00:08:11.999
updates that we see here is available
for any app to use today in play core

00:08:11.999 --> 00:08:12.009
for any app to use today in play core
 

00:08:12.009 --> 00:08:15.570
for any app to use today in play core
1.5 but in the future we'll be adding

00:08:15.570 --> 00:08:15.580
1.5 but in the future we'll be adding
 

00:08:15.580 --> 00:08:17.429
1.5 but in the future we'll be adding
extension libraries for integration with

00:08:17.429 --> 00:08:17.439
extension libraries for integration with
 

00:08:17.439 --> 00:08:19.200
extension libraries for integration with
cotton and jetpack leading to even

00:08:19.200 --> 00:08:19.210
cotton and jetpack leading to even
 

00:08:19.210 --> 00:08:21.899
cotton and jetpack leading to even
simpler code and if you're interested in

00:08:21.899 --> 00:08:21.909
simpler code and if you're interested in
 

00:08:21.909 --> 00:08:24.179
simpler code and if you're interested in
seeing that there was a live demo in the

00:08:24.179 --> 00:08:24.189
seeing that there was a live demo in the
 

00:08:24.189 --> 00:08:26.700
seeing that there was a live demo in the
developer keynote so that's enough

00:08:26.700 --> 00:08:26.710
developer keynote so that's enough
 

00:08:26.710 --> 00:08:31.540
developer keynote so that's enough
updates Thank You Marty

00:08:31.540 --> 00:08:31.550
updates Thank You Marty
 

00:08:31.550 --> 00:08:33.909
updates Thank You Marty
now let's talk about how to adjust the

00:08:33.909 --> 00:08:33.919
now let's talk about how to adjust the
 

00:08:33.919 --> 00:08:36.430
now let's talk about how to adjust the
way your app is installed in the first

00:08:36.430 --> 00:08:36.440
way your app is installed in the first
 

00:08:36.440 --> 00:08:39.550
way your app is installed in the first
place traditionally all your code and

00:08:39.550 --> 00:08:39.560
place traditionally all your code and
 

00:08:39.560 --> 00:08:42.279
place traditionally all your code and
app content are always served to all

00:08:42.279 --> 00:08:42.289
app content are always served to all
 

00:08:42.289 --> 00:08:45.430
app content are always served to all
users but sometimes you have features

00:08:45.430 --> 00:08:45.440
users but sometimes you have features
 

00:08:45.440 --> 00:08:48.370
users but sometimes you have features
that are simply not applicable to some

00:08:48.370 --> 00:08:48.380
that are simply not applicable to some
 

00:08:48.380 --> 00:08:52.510
that are simply not applicable to some
of the users or some of the devices so

00:08:52.510 --> 00:08:52.520
of the users or some of the devices so
 

00:08:52.520 --> 00:08:55.389
of the users or some of the devices so
by including them your users gets part

00:08:55.389 --> 00:08:55.399
by including them your users gets part
 

00:08:55.399 --> 00:08:57.150
by including them your users gets part
of your app that they will never use

00:08:57.150 --> 00:08:57.160
of your app that they will never use
 

00:08:57.160 --> 00:09:01.360
of your app that they will never use
this is obviously not ideal conditional

00:09:01.360 --> 00:09:01.370
this is obviously not ideal conditional
 

00:09:01.370 --> 00:09:04.120
this is obviously not ideal conditional
delivery lets you control which part of

00:09:04.120 --> 00:09:04.130
delivery lets you control which part of
 

00:09:04.130 --> 00:09:07.560
delivery lets you control which part of
your R would be served to which users

00:09:07.560 --> 00:09:07.570
your R would be served to which users
 

00:09:07.570 --> 00:09:10.870
your R would be served to which users
with conditional delivery you can set a

00:09:10.870 --> 00:09:10.880
with conditional delivery you can set a
 

00:09:10.880 --> 00:09:13.150
with conditional delivery you can set a
set of conditions under which a feature

00:09:13.150 --> 00:09:13.160
set of conditions under which a feature
 

00:09:13.160 --> 00:09:15.880
set of conditions under which a feature
module would be delivered and otherwise

00:09:15.880 --> 00:09:15.890
module would be delivered and otherwise
 

00:09:15.890 --> 00:09:19.569
module would be delivered and otherwise
will be left out this this lets you

00:09:19.569 --> 00:09:19.579
will be left out this this lets you
 

00:09:19.579 --> 00:09:22.389
will be left out this this lets you
exclude certain part of your from some

00:09:22.389 --> 00:09:22.399
exclude certain part of your from some
 

00:09:22.399 --> 00:09:24.610
exclude certain part of your from some
of the devices and avoid loading your

00:09:24.610 --> 00:09:24.620
of the devices and avoid loading your
 

00:09:24.620 --> 00:09:26.740
of the devices and avoid loading your
app with irrelevant features to the

00:09:26.740 --> 00:09:26.750
app with irrelevant features to the
 

00:09:26.750 --> 00:09:28.900
app with irrelevant features to the
device its installed on optimizing

00:09:28.900 --> 00:09:28.910
device its installed on optimizing
 

00:09:28.910 --> 00:09:31.480
device its installed on optimizing
download side and on device footprint of

00:09:31.480 --> 00:09:31.490
download side and on device footprint of
 

00:09:31.490 --> 00:09:35.260
download side and on device footprint of
your we support three types of

00:09:35.260 --> 00:09:35.270
your we support three types of
 

00:09:35.270 --> 00:09:37.440
your we support three types of
conditions for conditional delivery

00:09:37.440 --> 00:09:37.450
conditions for conditional delivery
 

00:09:37.450 --> 00:09:40.840
conditions for conditional delivery
first you can hang of a modular included

00:09:40.840 --> 00:09:40.850
first you can hang of a modular included
 

00:09:40.850 --> 00:09:43.569
first you can hang of a modular included
only for specific countries this is the

00:09:43.569 --> 00:09:43.579
only for specific countries this is the
 

00:09:43.579 --> 00:09:45.910
only for specific countries this is the
first time play has let you targets part

00:09:45.910 --> 00:09:45.920
first time play has let you targets part
 

00:09:45.920 --> 00:09:47.340
first time play has let you targets part
of your app this way

00:09:47.340 --> 00:09:47.350
of your app this way
 

00:09:47.350 --> 00:09:50.199
of your app this way
second you can restrict the module by

00:09:50.199 --> 00:09:50.209
second you can restrict the module by
 

00:09:50.209 --> 00:09:52.990
second you can restrict the module by
minimum SDK version targeting only

00:09:52.990 --> 00:09:53.000
minimum SDK version targeting only
 

00:09:53.000 --> 00:09:55.590
minimum SDK version targeting only
devices above a certain version and

00:09:55.590 --> 00:09:55.600
devices above a certain version and
 

00:09:55.600 --> 00:09:58.780
devices above a certain version and
third you can deliver your module only

00:09:58.780 --> 00:09:58.790
third you can deliver your module only
 

00:09:58.790 --> 00:10:01.389
third you can deliver your module only
to devices that support a certain

00:10:01.389 --> 00:10:01.399
to devices that support a certain
 

00:10:01.399 --> 00:10:07.240
to devices that support a certain
feature such as a br hearten configuring

00:10:07.240 --> 00:10:07.250
feature such as a br hearten configuring
 

00:10:07.250 --> 00:10:10.120
feature such as a br hearten configuring
condition of delivery is super easy once

00:10:10.120 --> 00:10:10.130
condition of delivery is super easy once
 

00:10:10.130 --> 00:10:11.829
condition of delivery is super easy once
you've extracted the feature into a

00:10:11.829 --> 00:10:11.839
you've extracted the feature into a
 

00:10:11.839 --> 00:10:14.680
you've extracted the feature into a
module the only change needed is adding

00:10:14.680 --> 00:10:14.690
module the only change needed is adding
 

00:10:14.690 --> 00:10:16.630
module the only change needed is adding
installation instructions to the

00:10:16.630 --> 00:10:16.640
installation instructions to the
 

00:10:16.640 --> 00:10:20.170
installation instructions to the
androidmanifest.xml the newly introduced

00:10:20.170 --> 00:10:20.180
androidmanifest.xml the newly introduced
 

00:10:20.180 --> 00:10:22.630
androidmanifest.xml the newly introduced
install time elements allow you to

00:10:22.630 --> 00:10:22.640
install time elements allow you to
 

00:10:22.640 --> 00:10:25.990
install time elements allow you to
specify conditions for delivery you can

00:10:25.990 --> 00:10:26.000
specify conditions for delivery you can
 

00:10:26.000 --> 00:10:28.030
specify conditions for delivery you can
include conditions for device feature

00:10:28.030 --> 00:10:28.040
include conditions for device feature
 

00:10:28.040 --> 00:10:32.410
include conditions for device feature
user country and min SDK we additionally

00:10:32.410 --> 00:10:32.420
user country and min SDK we additionally
 

00:10:32.420 --> 00:10:37.060
user country and min SDK we additionally
support minimum OpenGL ES version if you

00:10:37.060 --> 00:10:37.070
support minimum OpenGL ES version if you
 

00:10:37.070 --> 00:10:39.189
support minimum OpenGL ES version if you
leave the install time element empty

00:10:39.189 --> 00:10:39.199
leave the install time element empty
 

00:10:39.199 --> 00:10:41.970
leave the install time element empty
the model would always be delivered in

00:10:41.970 --> 00:10:41.980
the model would always be delivered in
 

00:10:41.980 --> 00:10:45.639
the model would always be delivered in
this example the liver is conditioned by

00:10:45.639 --> 00:10:45.649
this example the liver is conditioned by
 

00:10:45.649 --> 00:10:48.910
this example the liver is conditioned by
device feature and min SDK and the

00:10:48.910 --> 00:10:48.920
device feature and min SDK and the
 

00:10:48.920 --> 00:10:51.669
device feature and min SDK and the
module will be served only to endless

00:10:51.669 --> 00:10:51.679
module will be served only to endless
 

00:10:51.679 --> 00:10:56.829
module will be served only to endless
devices they have na our camera these

00:10:56.829 --> 00:10:56.839
devices they have na our camera these
 

00:10:56.839 --> 00:10:58.629
devices they have na our camera these
are our country condition lets you

00:10:58.629 --> 00:10:58.639
are our country condition lets you
 

00:10:58.639 --> 00:11:01.840
are our country condition lets you
exclude or include a module in specific

00:11:01.840 --> 00:11:01.850
exclude or include a module in specific
 

00:11:01.850 --> 00:11:04.479
exclude or include a module in specific
countries and you can specify more than

00:11:04.479 --> 00:11:04.489
countries and you can specify more than
 

00:11:04.489 --> 00:11:07.329
countries and you can specify more than
one country here the model will be

00:11:07.329 --> 00:11:07.339
one country here the model will be
 

00:11:07.339 --> 00:11:09.789
one country here the model will be
deployed only to you the United States

00:11:09.789 --> 00:11:09.799
deployed only to you the United States
 

00:11:09.799 --> 00:11:13.479
deployed only to you the United States
and Britain the device country in this

00:11:13.479 --> 00:11:13.489
and Britain the device country in this
 

00:11:13.489 --> 00:11:15.669
and Britain the device country in this
context is typically determined by the

00:11:15.669 --> 00:11:15.679
context is typically determined by the
 

00:11:15.679 --> 00:11:18.460
context is typically determined by the
user billing address attached to the

00:11:18.460 --> 00:11:18.470
user billing address attached to the
 

00:11:18.470 --> 00:11:22.629
user billing address attached to the
Google Play account as we've seen

00:11:22.629 --> 00:11:22.639
Google Play account as we've seen
 

00:11:22.639 --> 00:11:25.359
Google Play account as we've seen
conditions may be combined and all

00:11:25.359 --> 00:11:25.369
conditions may be combined and all
 

00:11:25.369 --> 00:11:27.879
conditions may be combined and all
conditions must be met for a module to

00:11:27.879 --> 00:11:27.889
conditions must be met for a module to
 

00:11:27.889 --> 00:11:31.869
conditions must be met for a module to
be delivered at runtime you can K you

00:11:31.869 --> 00:11:31.879
be delivered at runtime you can K you
 

00:11:31.879 --> 00:11:34.569
be delivered at runtime you can K you
can call Lake or API get installed

00:11:34.569 --> 00:11:34.579
can call Lake or API get installed
 

00:11:34.579 --> 00:11:37.569
can call Lake or API get installed
module to find out meet which modules

00:11:37.569 --> 00:11:37.579
module to find out meet which modules
 

00:11:37.579 --> 00:11:40.210
module to find out meet which modules
are installed this can be used for

00:11:40.210 --> 00:11:40.220
are installed this can be used for
 

00:11:40.220 --> 00:11:42.369
are installed this can be used for
example to guard access to a certain

00:11:42.369 --> 00:11:42.379
example to guard access to a certain
 

00:11:42.379 --> 00:11:45.039
example to guard access to a certain
activity contained in the conditional

00:11:45.039 --> 00:11:45.049
activity contained in the conditional
 

00:11:45.049 --> 00:11:48.299
activity contained in the conditional
module once the app is installed

00:11:48.299 --> 00:11:48.309
module once the app is installed
 

00:11:48.309 --> 00:11:50.650
module once the app is installed
conditional modules can also be

00:11:50.650 --> 00:11:50.660
conditional modules can also be
 

00:11:50.660 --> 00:11:53.710
conditional modules can also be
requested to record even if conditions

00:11:53.710 --> 00:11:53.720
requested to record even if conditions
 

00:11:53.720 --> 00:11:57.909
requested to record even if conditions
weren't originally met this is useful

00:11:57.909 --> 00:11:57.919
weren't originally met this is useful
 

00:11:57.919 --> 00:11:59.979
weren't originally met this is useful
for example when you want a specific

00:11:59.979 --> 00:11:59.989
for example when you want a specific
 

00:11:59.989 --> 00:12:01.239
for example when you want a specific
module - Bitzer

00:12:01.239 --> 00:12:01.249
module - Bitzer
 

00:12:01.249 --> 00:12:04.299
module - Bitzer
only - some of the users by default will

00:12:04.299 --> 00:12:04.309
only - some of the users by default will
 

00:12:04.309 --> 00:12:07.030
only - some of the users by default will
still have while still letting other use

00:12:07.030 --> 00:12:07.040
still have while still letting other use
 

00:12:07.040 --> 00:12:07.389
still have while still letting other use
it

00:12:07.389 --> 00:12:07.399
it
 

00:12:07.399 --> 00:12:11.379
it
users get it upon request Martin will

00:12:11.379 --> 00:12:11.389
users get it upon request Martin will
 

00:12:11.389 --> 00:12:13.600
users get it upon request Martin will
talk next on how such features can be

00:12:13.600 --> 00:12:13.610
talk next on how such features can be
 

00:12:13.610 --> 00:12:18.519
talk next on how such features can be
called for on demand thanks so--that's

00:12:18.519 --> 00:12:18.529
called for on demand thanks so--that's
 

00:12:18.529 --> 00:12:20.590
called for on demand thanks so--that's
modules that are conditional it in still

00:12:20.590 --> 00:12:20.600
modules that are conditional it in still
 

00:12:20.600 --> 00:12:23.169
modules that are conditional it in still
time but sometimes at install time you

00:12:23.169 --> 00:12:23.179
time but sometimes at install time you
 

00:12:23.179 --> 00:12:24.609
time but sometimes at install time you
simply do not know whether a module is

00:12:24.609 --> 00:12:24.619
simply do not know whether a module is
 

00:12:24.619 --> 00:12:25.659
simply do not know whether a module is
relevant for a user

00:12:25.659 --> 00:12:25.669
relevant for a user
 

00:12:25.669 --> 00:12:28.090
relevant for a user
perhaps this depends on your individual

00:12:28.090 --> 00:12:28.100
perhaps this depends on your individual
 

00:12:28.100 --> 00:12:29.919
perhaps this depends on your individual
knowledge of the user or their behavior

00:12:29.919 --> 00:12:29.929
knowledge of the user or their behavior
 

00:12:29.929 --> 00:12:32.769
knowledge of the user or their behavior
inside the app after install so what can

00:12:32.769 --> 00:12:32.779
inside the app after install so what can
 

00:12:32.779 --> 00:12:36.039
inside the app after install so what can
you do then on demand feature modules

00:12:36.039 --> 00:12:36.049
you do then on demand feature modules
 

00:12:36.049 --> 00:12:37.659
you do then on demand feature modules
can be used to install and remove

00:12:37.659 --> 00:12:37.669
can be used to install and remove
 

00:12:37.669 --> 00:12:39.789
can be used to install and remove
modules during the lifetime of an app

00:12:39.789 --> 00:12:39.799
modules during the lifetime of an app
 

00:12:39.799 --> 00:12:42.129
modules during the lifetime of an app
based on user behavior inside the app

00:12:42.129 --> 00:12:42.139
based on user behavior inside the app
 

00:12:42.139 --> 00:12:45.609
based on user behavior inside the app
triggered via code for example this

00:12:45.609 --> 00:12:45.619
triggered via code for example this
 

00:12:45.619 --> 00:12:47.439
triggered via code for example this
might be useful for user driven uploads

00:12:47.439 --> 00:12:47.449
might be useful for user driven uploads
 

00:12:47.449 --> 00:12:49.569
might be useful for user driven uploads
in a consumption app which might only be

00:12:49.569 --> 00:12:49.579
in a consumption app which might only be
 

00:12:49.579 --> 00:12:51.400
in a consumption app which might only be
used by a subset of the most engaged

00:12:51.400 --> 00:12:51.410
used by a subset of the most engaged
 

00:12:51.410 --> 00:12:52.450
used by a subset of the most engaged
users

00:12:52.450 --> 00:12:52.460
users
 

00:12:52.460 --> 00:12:55.120
users
other use cases might be an onboarding

00:12:55.120 --> 00:12:55.130
other use cases might be an onboarding
 

00:12:55.130 --> 00:12:57.220
other use cases might be an onboarding
flow or a customer support flow that are

00:12:57.220 --> 00:12:57.230
flow or a customer support flow that are
 

00:12:57.230 --> 00:12:59.769
flow or a customer support flow that are
rarely used more than once so let's

00:12:59.769 --> 00:12:59.779
rarely used more than once so let's
 

00:12:59.779 --> 00:13:03.850
rarely used more than once so let's
explore a case study Netflix so Netflix

00:13:03.850 --> 00:13:03.860
explore a case study Netflix so Netflix
 

00:13:03.860 --> 00:13:05.530
explore a case study Netflix so Netflix
is customer support flow is a feature

00:13:05.530 --> 00:13:05.540
is customer support flow is a feature
 

00:13:05.540 --> 00:13:07.690
is customer support flow is a feature
used only by a small subset of their

00:13:07.690 --> 00:13:07.700
used only by a small subset of their
 

00:13:07.700 --> 00:13:09.610
used only by a small subset of their
users and is rarely used more than once

00:13:09.610 --> 00:13:09.620
users and is rarely used more than once
 

00:13:09.620 --> 00:13:12.010
users and is rarely used more than once
by an individual user but it is a fairly

00:13:12.010 --> 00:13:12.020
by an individual user but it is a fairly
 

00:13:12.020 --> 00:13:13.540
by an individual user but it is a fairly
big component of the app at a few

00:13:13.540 --> 00:13:13.550
big component of the app at a few
 

00:13:13.550 --> 00:13:16.930
big component of the app at a few
megabytes so it's a perfect use case for

00:13:16.930 --> 00:13:16.940
megabytes so it's a perfect use case for
 

00:13:16.940 --> 00:13:19.320
megabytes so it's a perfect use case for
a feature module delivered on demand

00:13:19.320 --> 00:13:19.330
a feature module delivered on demand
 

00:13:19.330 --> 00:13:21.790
a feature module delivered on demand
when the user clicks on the customer

00:13:21.790 --> 00:13:21.800
when the user clicks on the customer
 

00:13:21.800 --> 00:13:23.889
when the user clicks on the customer
support option the module is downloaded

00:13:23.889 --> 00:13:23.899
support option the module is downloaded
 

00:13:23.899 --> 00:13:26.260
support option the module is downloaded
and installed and once installed it

00:13:26.260 --> 00:13:26.270
and installed and once installed it
 

00:13:26.270 --> 00:13:28.090
and installed and once installed it
seamlessly opens and the user can

00:13:28.090 --> 00:13:28.100
seamlessly opens and the user can
 

00:13:28.100 --> 00:13:31.060
seamlessly opens and the user can
connect to customer support this flow is

00:13:31.060 --> 00:13:31.070
connect to customer support this flow is
 

00:13:31.070 --> 00:13:34.660
connect to customer support this flow is
live in Netflix today now in future

00:13:34.660 --> 00:13:34.670
live in Netflix today now in future
 

00:13:34.670 --> 00:13:37.000
live in Netflix today now in future
Netflix will also configure installed

00:13:37.000 --> 00:13:37.010
Netflix will also configure installed
 

00:13:37.010 --> 00:13:39.790
Netflix will also configure installed
modules in other ways for example it can

00:13:39.790 --> 00:13:39.800
modules in other ways for example it can
 

00:13:39.800 --> 00:13:41.829
modules in other ways for example it can
remove the onboarding flow once the

00:13:41.829 --> 00:13:41.839
remove the onboarding flow once the
 

00:13:41.839 --> 00:13:43.750
remove the onboarding flow once the
onboarding flow is completed so how

00:13:43.750 --> 00:13:43.760
onboarding flow is completed so how
 

00:13:43.760 --> 00:13:46.990
onboarding flow is completed so how
might that look so let's take a look at

00:13:46.990 --> 00:13:47.000
might that look so let's take a look at
 

00:13:47.000 --> 00:13:49.960
might that look so let's take a look at
the code here so let's consider how

00:13:49.960 --> 00:13:49.970
the code here so let's consider how
 

00:13:49.970 --> 00:13:52.510
the code here so let's consider how
removing a module would looking kid like

00:13:52.510 --> 00:13:52.520
removing a module would looking kid like
 

00:13:52.520 --> 00:13:54.940
removing a module would looking kid like
this so first the module is considered

00:13:54.940 --> 00:13:54.950
this so first the module is considered
 

00:13:54.950 --> 00:13:56.980
this so first the module is considered
configured as an unconditional install

00:13:56.980 --> 00:13:56.990
configured as an unconditional install
 

00:13:56.990 --> 00:13:59.500
configured as an unconditional install
time module so this is a dynamic feature

00:13:59.500 --> 00:13:59.510
time module so this is a dynamic feature
 

00:13:59.510 --> 00:14:01.449
time module so this is a dynamic feature
that's extracted and separate from the

00:14:01.449 --> 00:14:01.459
that's extracted and separate from the
 

00:14:01.459 --> 00:14:03.070
that's extracted and separate from the
rest of the app but it's installed for

00:14:03.070 --> 00:14:03.080
rest of the app but it's installed for
 

00:14:03.080 --> 00:14:06.040
rest of the app but it's installed for
everyone when the app is installed but

00:14:06.040 --> 00:14:06.050
everyone when the app is installed but
 

00:14:06.050 --> 00:14:07.540
everyone when the app is installed but
by keeping it separate when the time is

00:14:07.540 --> 00:14:07.550
by keeping it separate when the time is
 

00:14:07.550 --> 00:14:09.910
by keeping it separate when the time is
right it can be removed in code via the

00:14:09.910 --> 00:14:09.920
right it can be removed in code via the
 

00:14:09.920 --> 00:14:13.180
right it can be removed in code via the
split install API in play core the Play

00:14:13.180 --> 00:14:13.190
split install API in play core the Play
 

00:14:13.190 --> 00:14:14.980
split install API in play core the Play
Store will then mark the module for

00:14:14.980 --> 00:14:14.990
Store will then mark the module for
 

00:14:14.990 --> 00:14:17.140
Store will then mark the module for
removal and remove it before too long

00:14:17.140 --> 00:14:17.150
removal and remove it before too long
 

00:14:17.150 --> 00:14:21.070
removal and remove it before too long
saving precious disk space now on demand

00:14:21.070 --> 00:14:21.080
saving precious disk space now on demand
 

00:14:21.080 --> 00:14:22.900
saving precious disk space now on demand
and conditional modules our engine

00:14:22.900 --> 00:14:22.910
and conditional modules our engine
 

00:14:22.910 --> 00:14:25.300
and conditional modules our engine
general availability today and can be

00:14:25.300 --> 00:14:25.310
general availability today and can be
 

00:14:25.310 --> 00:14:33.190
general availability today and can be
used in any app so we talked a lot about

00:14:33.190 --> 00:14:33.200
used in any app so we talked a lot about
 

00:14:33.200 --> 00:14:35.470
used in any app so we talked a lot about
customizing delivery of feature modules

00:14:35.470 --> 00:14:35.480
customizing delivery of feature modules
 

00:14:35.480 --> 00:14:38.380
customizing delivery of feature modules
but the reality is that many times the

00:14:38.380 --> 00:14:38.390
but the reality is that many times the
 

00:14:38.390 --> 00:14:40.600
but the reality is that many times the
bulk of the content is actually coming

00:14:40.600 --> 00:14:40.610
bulk of the content is actually coming
 

00:14:40.610 --> 00:14:43.780
bulk of the content is actually coming
from assets and not code this is

00:14:43.780 --> 00:14:43.790
from assets and not code this is
 

00:14:43.790 --> 00:14:46.030
from assets and not code this is
especially true through games which

00:14:46.030 --> 00:14:46.040
especially true through games which
 

00:14:46.040 --> 00:14:47.829
especially true through games which
sometimes require a massive content

00:14:47.829 --> 00:14:47.839
sometimes require a massive content
 

00:14:47.839 --> 00:14:49.720
sometimes require a massive content
download to even get the user start

00:14:49.720 --> 00:14:49.730
download to even get the user start
 

00:14:49.730 --> 00:14:53.620
download to even get the user start
playing we know that many of you are

00:14:53.620 --> 00:14:53.630
playing we know that many of you are
 

00:14:53.630 --> 00:14:56.260
playing we know that many of you are
using steady and solutions to host and

00:14:56.260 --> 00:14:56.270
using steady and solutions to host and
 

00:14:56.270 --> 00:14:59.079
using steady and solutions to host and
deliver your content from but this

00:14:59.079 --> 00:14:59.089
deliver your content from but this
 

00:14:59.089 --> 00:15:01.500
deliver your content from but this
result in a sub optimal user

00:15:01.500 --> 00:15:01.510
result in a sub optimal user
 

00:15:01.510 --> 00:15:04.500
result in a sub optimal user
Corrine's user install and open the game

00:15:04.500 --> 00:15:04.510
Corrine's user install and open the game
 

00:15:04.510 --> 00:15:07.020
Corrine's user install and open the game
reddit's to start playing just to be

00:15:07.020 --> 00:15:07.030
reddit's to start playing just to be
 

00:15:07.030 --> 00:15:09.180
reddit's to start playing just to be
faced with the long progress bar waiting

00:15:09.180 --> 00:15:09.190
faced with the long progress bar waiting
 

00:15:09.190 --> 00:15:11.160
faced with the long progress bar waiting
for additional resources to be

00:15:11.160 --> 00:15:11.170
for additional resources to be
 

00:15:11.170 --> 00:15:14.820
for additional resources to be
downloaded furthermore since the city

00:15:14.820 --> 00:15:14.830
downloaded furthermore since the city
 

00:15:14.830 --> 00:15:16.800
downloaded furthermore since the city
end is blind to the device asking for

00:15:16.800 --> 00:15:16.810
end is blind to the device asking for
 

00:15:16.810 --> 00:15:19.470
end is blind to the device asking for
the content it can optimize delivery to

00:15:19.470 --> 00:15:19.480
the content it can optimize delivery to
 

00:15:19.480 --> 00:15:22.440
the content it can optimize delivery to
the requesting client so you end up

00:15:22.440 --> 00:15:22.450
the requesting client so you end up
 

00:15:22.450 --> 00:15:25.200
the requesting client so you end up
serving all assets to all users

00:15:25.200 --> 00:15:25.210
serving all assets to all users
 

00:15:25.210 --> 00:15:28.280
serving all assets to all users
regardless if they will ever use them

00:15:28.280 --> 00:15:28.290
regardless if they will ever use them
 

00:15:28.290 --> 00:15:31.410
regardless if they will ever use them
another major downside of using a CDN is

00:15:31.410 --> 00:15:31.420
another major downside of using a CDN is
 

00:15:31.420 --> 00:15:33.510
another major downside of using a CDN is
the silicon you can't rely on other

00:15:33.510 --> 00:15:33.520
the silicon you can't rely on other
 

00:15:33.520 --> 00:15:36.780
the silicon you can't rely on other
updates of assets so again this results

00:15:36.780 --> 00:15:36.790
updates of assets so again this results
 

00:15:36.790 --> 00:15:39.210
updates of assets so again this results
in additional long wait for updating

00:15:39.210 --> 00:15:39.220
in additional long wait for updating
 

00:15:39.220 --> 00:15:41.970
in additional long wait for updating
resources after the game is already

00:15:41.970 --> 00:15:41.980
resources after the game is already
 

00:15:41.980 --> 00:15:45.690
resources after the game is already
installed to make asset delivery

00:15:45.690 --> 00:15:45.700
installed to make asset delivery
 

00:15:45.700 --> 00:15:48.900
installed to make asset delivery
seamless we'll be releasing a new set of

00:15:48.900 --> 00:15:48.910
seamless we'll be releasing a new set of
 

00:15:48.910 --> 00:15:53.010
seamless we'll be releasing a new set of
delivery option suited for games with a

00:15:53.010 --> 00:15:53.020
delivery option suited for games with a
 

00:15:53.020 --> 00:15:56.220
delivery option suited for games with a
we are extending the a bundle format to

00:15:56.220 --> 00:15:56.230
we are extending the a bundle format to
 

00:15:56.230 --> 00:15:58.680
we are extending the a bundle format to
include game assets introducing a whole

00:15:58.680 --> 00:15:58.690
include game assets introducing a whole
 

00:15:58.690 --> 00:16:02.240
include game assets introducing a whole
new delivery construct the ancestor

00:16:02.240 --> 00:16:02.250
new delivery construct the ancestor
 

00:16:02.250 --> 00:16:05.220
new delivery construct the ancestor
unlike feature modules as effects are

00:16:05.220 --> 00:16:05.230
unlike feature modules as effects are
 

00:16:05.230 --> 00:16:07.680
unlike feature modules as effects are
composed of assets only with no

00:16:07.680 --> 00:16:07.690
composed of assets only with no
 

00:16:07.690 --> 00:16:11.780
composed of assets only with no
executable code and can be very large

00:16:11.780 --> 00:16:11.790
executable code and can be very large
 

00:16:11.790 --> 00:16:14.430
executable code and can be very large
assessments will be packaged in the app

00:16:14.430 --> 00:16:14.440
assessments will be packaged in the app
 

00:16:14.440 --> 00:16:17.130
assessments will be packaged in the app
bundle alongside your game binary so you

00:16:17.130 --> 00:16:17.140
bundle alongside your game binary so you
 

00:16:17.140 --> 00:16:19.050
bundle alongside your game binary so you
can publish a single artifact to play

00:16:19.050 --> 00:16:19.060
can publish a single artifact to play
 

00:16:19.060 --> 00:16:21.770
can publish a single artifact to play
containing everything your game needs

00:16:21.770 --> 00:16:21.780
containing everything your game needs
 

00:16:21.780 --> 00:16:24.690
containing everything your game needs
you can also rely on a plague to take

00:16:24.690 --> 00:16:24.700
you can also rely on a plague to take
 

00:16:24.700 --> 00:16:26.640
you can also rely on a plague to take
care of keeping your assets up to date

00:16:26.640 --> 00:16:26.650
care of keeping your assets up to date
 

00:16:26.650 --> 00:16:29.190
care of keeping your assets up to date
just like it currently does with your

00:16:29.190 --> 00:16:29.200
just like it currently does with your
 

00:16:29.200 --> 00:16:32.520
just like it currently does with your
game binary and similarly to the

00:16:32.520 --> 00:16:32.530
game binary and similarly to the
 

00:16:32.530 --> 00:16:34.050
game binary and similarly to the
flexibility you have with feature

00:16:34.050 --> 00:16:34.060
flexibility you have with feature
 

00:16:34.060 --> 00:16:36.270
flexibility you have with feature
modules you will be able to customize

00:16:36.270 --> 00:16:36.280
modules you will be able to customize
 

00:16:36.280 --> 00:16:39.300
modules you will be able to customize
asset delivery according to your game

00:16:39.300 --> 00:16:39.310
asset delivery according to your game
 

00:16:39.310 --> 00:16:44.130
asset delivery according to your game
needs to start you can use this to serve

00:16:44.130 --> 00:16:44.140
needs to start you can use this to serve
 

00:16:44.140 --> 00:16:46.680
needs to start you can use this to serve
your assets up front as part of the

00:16:46.680 --> 00:16:46.690
your assets up front as part of the
 

00:16:46.690 --> 00:16:49.980
your assets up front as part of the
initial install instead of using apk

00:16:49.980 --> 00:16:49.990
initial install instead of using apk
 

00:16:49.990 --> 00:16:52.890
initial install instead of using apk
expansion files as effects served this

00:16:52.890 --> 00:16:52.900
expansion files as effects served this
 

00:16:52.900 --> 00:16:54.930
expansion files as effects served this
way won't require to publish an

00:16:54.930 --> 00:16:54.940
way won't require to publish an
 

00:16:54.940 --> 00:16:57.540
way won't require to publish an
additional artifact to play and unlike

00:16:57.540 --> 00:16:57.550
additional artifact to play and unlike
 

00:16:57.550 --> 00:17:00.150
additional artifact to play and unlike
extension files are not prone to extent

00:17:00.150 --> 00:17:00.160
extension files are not prone to extent
 

00:17:00.160 --> 00:17:03.770
extension files are not prone to extent
a deletion by the user or other acts

00:17:03.770 --> 00:17:03.780
a deletion by the user or other acts
 

00:17:03.780 --> 00:17:06.930
a deletion by the user or other acts
your assets can be easily accessed like

00:17:06.930 --> 00:17:06.940
your assets can be easily accessed like
 

00:17:06.940 --> 00:17:09.439
your assets can be easily accessed like
any assets packaged in the base apk

00:17:09.439 --> 00:17:09.449
any assets packaged in the base apk
 

00:17:09.449 --> 00:17:12.740
any assets packaged in the base apk
using Android assets manager

00:17:12.740 --> 00:17:12.750
using Android assets manager
 

00:17:12.750 --> 00:17:16.129
using Android assets manager
you can sign up today for early access

00:17:16.129 --> 00:17:16.139
you can sign up today for early access
 

00:17:16.139 --> 00:17:19.819
you can sign up today for early access
program at this link and we'll soon be

00:17:19.819 --> 00:17:19.829
program at this link and we'll soon be
 

00:17:19.829 --> 00:17:22.220
program at this link and we'll soon be
able to include up to one gigabyte of

00:17:22.220 --> 00:17:22.230
able to include up to one gigabyte of
 

00:17:22.230 --> 00:17:25.490
able to include up to one gigabyte of
your game assets in the abandon avoiding

00:17:25.490 --> 00:17:25.500
your game assets in the abandon avoiding
 

00:17:25.500 --> 00:17:28.730
your game assets in the abandon avoiding
the additional complexity of using apk

00:17:28.730 --> 00:17:28.740
the additional complexity of using apk
 

00:17:28.740 --> 00:17:37.249
the additional complexity of using apk
expansion files but again this is just

00:17:37.249 --> 00:17:37.259
expansion files but again this is just
 

00:17:37.259 --> 00:17:38.060
expansion files but again this is just
the first step

00:17:38.060 --> 00:17:38.070
the first step
 

00:17:38.070 --> 00:17:40.129
the first step
stay tuned for further announcements

00:17:40.129 --> 00:17:40.139
stay tuned for further announcements
 

00:17:40.139 --> 00:17:42.560
stay tuned for further announcements
later this year about additional

00:17:42.560 --> 00:17:42.570
later this year about additional
 

00:17:42.570 --> 00:17:44.600
later this year about additional
delivery options which will give you

00:17:44.600 --> 00:17:44.610
delivery options which will give you
 

00:17:44.610 --> 00:17:47.799
delivery options which will give you
even greater flexibility in control and

00:17:47.799 --> 00:17:47.809
even greater flexibility in control and
 

00:17:47.809 --> 00:17:51.529
even greater flexibility in control and
allow larger answer fats and up and

00:17:51.529 --> 00:17:51.539
allow larger answer fats and up and
 

00:17:51.539 --> 00:17:54.470
allow larger answer fats and up and
enable optimize device targeting so then

00:17:54.470 --> 00:17:54.480
enable optimize device targeting so then
 

00:17:54.480 --> 00:17:57.980
enable optimize device targeting so then
for game assets as well your users will

00:17:57.980 --> 00:17:57.990
for game assets as well your users will
 

00:17:57.990 --> 00:18:00.710
for game assets as well your users will
get only the assets suitable for their

00:18:00.710 --> 00:18:00.720
get only the assets suitable for their
 

00:18:00.720 --> 00:18:05.360
get only the assets suitable for their
advice so let's recap the features we've

00:18:05.360 --> 00:18:05.370
advice so let's recap the features we've
 

00:18:05.370 --> 00:18:08.269
advice so let's recap the features we've
discussed so far today you can trigger

00:18:08.269 --> 00:18:08.279
discussed so far today you can trigger
 

00:18:08.279 --> 00:18:10.460
discussed so far today you can trigger
updates directly from your app without

00:18:10.460 --> 00:18:10.470
updates directly from your app without
 

00:18:10.470 --> 00:18:13.419
updates directly from your app without
having your users go to the store you

00:18:13.419 --> 00:18:13.429
having your users go to the store you
 

00:18:13.429 --> 00:18:16.039
having your users go to the store you
can condition the delivery of feature

00:18:16.039 --> 00:18:16.049
can condition the delivery of feature
 

00:18:16.049 --> 00:18:19.610
can condition the delivery of feature
modules and you can call for features on

00:18:19.610 --> 00:18:19.620
modules and you can call for features on
 

00:18:19.620 --> 00:18:23.090
modules and you can call for features on
demand and soon you'll be able to

00:18:23.090 --> 00:18:23.100
demand and soon you'll be able to
 

00:18:23.100 --> 00:18:25.369
demand and soon you'll be able to
package up to one gigabyte of your game

00:18:25.369 --> 00:18:25.379
package up to one gigabyte of your game
 

00:18:25.379 --> 00:18:28.159
package up to one gigabyte of your game
assets in the app bundle and serve it as

00:18:28.159 --> 00:18:28.169
assets in the app bundle and serve it as
 

00:18:28.169 --> 00:18:32.029
assets in the app bundle and serve it as
part of the game installation but a lot

00:18:32.029 --> 00:18:32.039
part of the game installation but a lot
 

00:18:32.039 --> 00:18:34.159
part of the game installation but a lot
of what we touched on today relies on

00:18:34.159 --> 00:18:34.169
of what we touched on today relies on
 

00:18:34.169 --> 00:18:37.279
of what we touched on today relies on
having your app broken up broken up into

00:18:37.279 --> 00:18:37.289
having your app broken up broken up into
 

00:18:37.289 --> 00:18:40.279
having your app broken up broken up into
modules so to fully benefit from all

00:18:40.279 --> 00:18:40.289
modules so to fully benefit from all
 

00:18:40.289 --> 00:18:42.789
modules so to fully benefit from all
this greatness you should consider

00:18:42.789 --> 00:18:42.799
this greatness you should consider
 

00:18:42.799 --> 00:18:45.889
this greatness you should consider
modernizing your arm let's thank Marty

00:18:45.889 --> 00:18:45.899
modernizing your arm let's thank Marty
 

00:18:45.899 --> 00:18:48.169
modernizing your arm let's thank Marty
and have been from our developer

00:18:48.169 --> 00:18:48.179
and have been from our developer
 

00:18:48.179 --> 00:18:50.840
and have been from our developer
relations team get a little deeper on a

00:18:50.840 --> 00:18:50.850
relations team get a little deeper on a
 

00:18:50.850 --> 00:18:53.960
relations team get a little deeper on a
polarization will then talk about our

00:18:53.960 --> 00:18:53.970
polarization will then talk about our
 

00:18:53.970 --> 00:18:55.549
polarization will then talk about our
last product announcement for today

00:18:55.549 --> 00:18:55.559
last product announcement for today
 

00:18:55.559 --> 00:19:01.700
last product announcement for today
internal up sharing

00:19:01.700 --> 00:19:01.710
 
 

00:19:01.710 --> 00:19:07.680
 
ectopy wow that's a lot of weight new

00:19:07.680 --> 00:19:07.690
ectopy wow that's a lot of weight new
 

00:19:07.690 --> 00:19:10.380
ectopy wow that's a lot of weight new
ways to delete to shape your app to your

00:19:10.380 --> 00:19:10.390
ways to delete to shape your app to your
 

00:19:10.390 --> 00:19:13.740
ways to delete to shape your app to your
users but like if he just said in order

00:19:13.740 --> 00:19:13.750
users but like if he just said in order
 

00:19:13.750 --> 00:19:15.090
users but like if he just said in order
to make the most of it your app has to

00:19:15.090 --> 00:19:15.100
to make the most of it your app has to
 

00:19:15.100 --> 00:19:18.600
to make the most of it your app has to
be modular eyes traditionally an app was

00:19:18.600 --> 00:19:18.610
be modular eyes traditionally an app was
 

00:19:18.610 --> 00:19:20.790
be modular eyes traditionally an app was
served to a user's device as a single

00:19:20.790 --> 00:19:20.800
served to a user's device as a single
 

00:19:20.800 --> 00:19:23.010
served to a user's device as a single
monolithic apk that contained all the

00:19:23.010 --> 00:19:23.020
monolithic apk that contained all the
 

00:19:23.020 --> 00:19:25.380
monolithic apk that contained all the
code and resources and all the features

00:19:25.380 --> 00:19:25.390
code and resources and all the features
 

00:19:25.390 --> 00:19:28.740
code and resources and all the features
to run all of your app with the Android

00:19:28.740 --> 00:19:28.750
to run all of your app with the Android
 

00:19:28.750 --> 00:19:31.890
to run all of your app with the Android
app bundle yet it uses the split apk

00:19:31.890 --> 00:19:31.900
app bundle yet it uses the split apk
 

00:19:31.900 --> 00:19:33.420
app bundle yet it uses the split apk
functionality introduced in android

00:19:33.420 --> 00:19:33.430
functionality introduced in android
 

00:19:33.430 --> 00:19:36.990
functionality introduced in android
lollipop makes use of this so we can

00:19:36.990 --> 00:19:37.000
lollipop makes use of this so we can
 

00:19:37.000 --> 00:19:38.880
lollipop makes use of this so we can
make all use of all the features that we

00:19:38.880 --> 00:19:38.890
make all use of all the features that we
 

00:19:38.890 --> 00:19:41.520
make all use of all the features that we
have seen today instead of packaging

00:19:41.520 --> 00:19:41.530
have seen today instead of packaging
 

00:19:41.530 --> 00:19:43.050
have seen today instead of packaging
everything into one single monolithic

00:19:43.050 --> 00:19:43.060
everything into one single monolithic
 

00:19:43.060 --> 00:19:45.660
everything into one single monolithic
apk multiple configuration apks are

00:19:45.660 --> 00:19:45.670
apk multiple configuration apks are
 

00:19:45.670 --> 00:19:49.080
apk multiple configuration apks are
being built then some of them suiting

00:19:49.080 --> 00:19:49.090
being built then some of them suiting
 

00:19:49.090 --> 00:19:51.600
being built then some of them suiting
the users devices and preferences will

00:19:51.600 --> 00:19:51.610
the users devices and preferences will
 

00:19:51.610 --> 00:19:53.790
the users devices and preferences will
be installed on your users device this

00:19:53.790 --> 00:19:53.800
be installed on your users device this
 

00:19:53.800 --> 00:19:57.360
be installed on your users device this
already saves you user precious data you

00:19:57.360 --> 00:19:57.370
already saves you user precious data you
 

00:19:57.370 --> 00:19:59.460
already saves you user precious data you
can achieve this by simply building your

00:19:59.460 --> 00:19:59.470
can achieve this by simply building your
 

00:19:59.470 --> 00:20:01.200
can achieve this by simply building your
Android app as an app bundle and

00:20:01.200 --> 00:20:01.210
Android app as an app bundle and
 

00:20:01.210 --> 00:20:04.950
Android app as an app bundle and
releasing it on a play store so far no

00:20:04.950 --> 00:20:04.960
releasing it on a play store so far no
 

00:20:04.960 --> 00:20:07.470
releasing it on a play store so far no
changes to your code are required but it

00:20:07.470 --> 00:20:07.480
changes to your code are required but it
 

00:20:07.480 --> 00:20:08.700
changes to your code are required but it
already will lead to decreased

00:20:08.700 --> 00:20:08.710
already will lead to decreased
 

00:20:08.710 --> 00:20:10.710
already will lead to decreased
installation size and faster downloads

00:20:10.710 --> 00:20:10.720
installation size and faster downloads
 

00:20:10.720 --> 00:20:12.630
installation size and faster downloads
but I'm here to talk about modular

00:20:12.630 --> 00:20:12.640
but I'm here to talk about modular
 

00:20:12.640 --> 00:20:17.310
but I'm here to talk about modular
ization so we let's take a look at what

00:20:17.310 --> 00:20:17.320
ization so we let's take a look at what
 

00:20:17.320 --> 00:20:19.320
ization so we let's take a look at what
we did with an app that we made in our

00:20:19.320 --> 00:20:19.330
we did with an app that we made in our
 

00:20:19.330 --> 00:20:23.520
we did with an app that we made in our
sample app for modularized apps we've

00:20:23.520 --> 00:20:23.530
sample app for modularized apps we've
 

00:20:23.530 --> 00:20:25.470
sample app for modularized apps we've
gone through a process with plaid it's

00:20:25.470 --> 00:20:25.480
gone through a process with plaid it's
 

00:20:25.480 --> 00:20:27.960
gone through a process with plaid it's
an app that we used to showcase a lot of

00:20:27.960 --> 00:20:27.970
an app that we used to showcase a lot of
 

00:20:27.970 --> 00:20:30.840
an app that we used to showcase a lot of
features throughout years we used it for

00:20:30.840 --> 00:20:30.850
features throughout years we used it for
 

00:20:30.850 --> 00:20:33.420
features throughout years we used it for
material design - animations and

00:20:33.420 --> 00:20:33.430
material design - animations and
 

00:20:33.430 --> 00:20:35.970
material design - animations and
transitions and most recently dart mode

00:20:35.970 --> 00:20:35.980
transitions and most recently dart mode
 

00:20:35.980 --> 00:20:39.000
transitions and most recently dart mode
also throughout the past year we added

00:20:39.000 --> 00:20:39.010
also throughout the past year we added
 

00:20:39.010 --> 00:20:41.900
also throughout the past year we added
we made major changes to the app and

00:20:41.900 --> 00:20:41.910
we made major changes to the app and
 

00:20:41.910 --> 00:20:44.520
we made major changes to the app and
modularized it and add a dependency

00:20:44.520 --> 00:20:44.530
modularized it and add a dependency
 

00:20:44.530 --> 00:20:48.180
modularized it and add a dependency
injection using dagger the app consists

00:20:48.180 --> 00:20:48.190
injection using dagger the app consists
 

00:20:48.190 --> 00:20:51.030
injection using dagger the app consists
of a home feet that Gaza displays gather

00:20:51.030 --> 00:20:51.040
of a home feet that Gaza displays gather
 

00:20:51.040 --> 00:20:52.890
of a home feet that Gaza displays gather
information they also has a search

00:20:52.890 --> 00:20:52.900
information they also has a search
 

00:20:52.900 --> 00:20:54.900
information they also has a search
functionality and about screen and

00:20:54.900 --> 00:20:54.910
functionality and about screen and
 

00:20:54.910 --> 00:20:56.820
functionality and about screen and
several new sources that can be turned

00:20:56.820 --> 00:20:56.830
several new sources that can be turned
 

00:20:56.830 --> 00:20:59.310
several new sources that can be turned
on and off in the end these user facing

00:20:59.310 --> 00:20:59.320
on and off in the end these user facing
 

00:20:59.320 --> 00:21:02.490
on and off in the end these user facing
features will be our future module but

00:21:02.490 --> 00:21:02.500
features will be our future module but
 

00:21:02.500 --> 00:21:03.840
features will be our future module but
before we started modularizing

00:21:03.840 --> 00:21:03.850
before we started modularizing
 

00:21:03.850 --> 00:21:06.120
before we started modularizing
we switched over to our bundles this

00:21:06.120 --> 00:21:06.130
we switched over to our bundles this
 

00:21:06.130 --> 00:21:08.880
we switched over to our bundles this
allowed us to save a staggering 2/3 of

00:21:08.880 --> 00:21:08.890
allowed us to save a staggering 2/3 of
 

00:21:08.890 --> 00:21:11.110
allowed us to save a staggering 2/3 of
the storage on some users devices

00:21:11.110 --> 00:21:11.120
the storage on some users devices
 

00:21:11.120 --> 00:21:15.580
the storage on some users devices
we ship a native library and by only

00:21:15.580 --> 00:21:15.590
we ship a native library and by only
 

00:21:15.590 --> 00:21:17.110
we ship a native library and by only
having to ship the library for the CPU

00:21:17.110 --> 00:21:17.120
having to ship the library for the CPU
 

00:21:17.120 --> 00:21:19.180
having to ship the library for the CPU
architecture that is installed on we

00:21:19.180 --> 00:21:19.190
architecture that is installed on we
 

00:21:19.190 --> 00:21:21.690
architecture that is installed on we
save a lot of that a lot of data already

00:21:21.690 --> 00:21:21.700
save a lot of that a lot of data already
 

00:21:21.700 --> 00:21:24.580
save a lot of that a lot of data already
from there we were able to make changes

00:21:24.580 --> 00:21:24.590
from there we were able to make changes
 

00:21:24.590 --> 00:21:28.019
from there we were able to make changes
to actually the structure Platt has

00:21:28.019 --> 00:21:28.029
to actually the structure Platt has
 

00:21:28.029 --> 00:21:30.129
to actually the structure Platt has
usually your app consists of multiple

00:21:30.129 --> 00:21:30.139
usually your app consists of multiple
 

00:21:30.139 --> 00:21:32.799
usually your app consists of multiple
things that high-end together of code

00:21:32.799 --> 00:21:32.809
things that high-end together of code
 

00:21:32.809 --> 00:21:34.989
things that high-end together of code
resources external dependencies and

00:21:34.989 --> 00:21:34.999
resources external dependencies and
 

00:21:34.999 --> 00:21:37.119
resources external dependencies and
drawables after modularizing

00:21:37.119 --> 00:21:37.129
drawables after modularizing
 

00:21:37.129 --> 00:21:39.340
drawables after modularizing
the compiler will have in will enforce

00:21:39.340 --> 00:21:39.350
the compiler will have in will enforce
 

00:21:39.350 --> 00:21:40.810
the compiler will have in will enforce
clean boundaries between your future

00:21:40.810 --> 00:21:40.820
clean boundaries between your future
 

00:21:40.820 --> 00:21:43.180
clean boundaries between your future
modules through a directed dependency

00:21:43.180 --> 00:21:43.190
modules through a directed dependency
 

00:21:43.190 --> 00:21:45.340
modules through a directed dependency
graph so let's take a look how we did

00:21:45.340 --> 00:21:45.350
graph so let's take a look how we did
 

00:21:45.350 --> 00:21:48.639
graph so let's take a look how we did
that with implant no matter how to

00:21:48.639 --> 00:21:48.649
that with implant no matter how to
 

00:21:48.649 --> 00:21:50.379
that with implant no matter how to
restructure your code overall within the

00:21:50.379 --> 00:21:50.389
restructure your code overall within the
 

00:21:50.389 --> 00:21:52.060
restructure your code overall within the
app no matter which architecture you

00:21:52.060 --> 00:21:52.070
app no matter which architecture you
 

00:21:52.070 --> 00:21:54.310
app no matter which architecture you
choose you break that down into the into

00:21:54.310 --> 00:21:54.320
choose you break that down into the into
 

00:21:54.320 --> 00:21:57.340
choose you break that down into the into
future modules beforehand before we

00:21:57.340 --> 00:21:57.350
future modules beforehand before we
 

00:21:57.350 --> 00:21:58.930
future modules beforehand before we
actually started making future modules

00:21:58.930 --> 00:21:58.940
actually started making future modules
 

00:21:58.940 --> 00:22:01.720
actually started making future modules
we put everything into packages per

00:22:01.720 --> 00:22:01.730
we put everything into packages per
 

00:22:01.730 --> 00:22:04.090
we put everything into packages per
feature this allowed for a clean

00:22:04.090 --> 00:22:04.100
feature this allowed for a clean
 

00:22:04.100 --> 00:22:06.399
feature this allowed for a clean
separation of concerns already during

00:22:06.399 --> 00:22:06.409
separation of concerns already during
 

00:22:06.409 --> 00:22:08.049
separation of concerns already during
that we started untangling unwanted

00:22:08.049 --> 00:22:08.059
that we started untangling unwanted
 

00:22:08.059 --> 00:22:10.810
that we started untangling unwanted
dependencies and in the end none of the

00:22:10.810 --> 00:22:10.820
dependencies and in the end none of the
 

00:22:10.820 --> 00:22:12.460
dependencies and in the end none of the
future modules should import code from

00:22:12.460 --> 00:22:12.470
future modules should import code from
 

00:22:12.470 --> 00:22:15.970
future modules should import code from
another feature module directly then we

00:22:15.970 --> 00:22:15.980
another feature module directly then we
 

00:22:15.980 --> 00:22:18.190
another feature module directly then we
ran look at our resources we were

00:22:18.190 --> 00:22:18.200
ran look at our resources we were
 

00:22:18.200 --> 00:22:20.259
ran look at our resources we were
particularly interested in structuring

00:22:20.259 --> 00:22:20.269
particularly interested in structuring
 

00:22:20.269 --> 00:22:22.269
particularly interested in structuring
in them in a way that we can move them

00:22:22.269 --> 00:22:22.279
in them in a way that we can move them
 

00:22:22.279 --> 00:22:24.039
in them in a way that we can move them
to modules later on as well without

00:22:24.039 --> 00:22:24.049
to modules later on as well without
 

00:22:24.049 --> 00:22:28.029
to modules later on as well without
problems so for Strings we initially

00:22:28.029 --> 00:22:28.039
problems so for Strings we initially
 

00:22:28.039 --> 00:22:30.070
problems so for Strings we initially
created files with a naming convention

00:22:30.070 --> 00:22:30.080
created files with a naming convention
 

00:22:30.080 --> 00:22:31.629
created files with a naming convention
that reflect the feature feature

00:22:31.629 --> 00:22:31.639
that reflect the feature feature
 

00:22:31.639 --> 00:22:34.570
that reflect the feature feature
Association we chose to add a module

00:22:34.570 --> 00:22:34.580
Association we chose to add a module
 

00:22:34.580 --> 00:22:37.419
Association we chose to add a module
name as a prefix that way they still

00:22:37.419 --> 00:22:37.429
name as a prefix that way they still
 

00:22:37.429 --> 00:22:41.470
name as a prefix that way they still
show up grouped together in the IDE we

00:22:41.470 --> 00:22:41.480
show up grouped together in the IDE we
 

00:22:41.480 --> 00:22:43.509
show up grouped together in the IDE we
then move the features move the strings

00:22:43.509 --> 00:22:43.519
then move the features move the strings
 

00:22:43.519 --> 00:22:46.600
then move the features move the strings
into these feature resource files as we

00:22:46.600 --> 00:22:46.610
into these feature resource files as we
 

00:22:46.610 --> 00:22:48.029
into these feature resource files as we
went along

00:22:48.029 --> 00:22:48.039
went along
 

00:22:48.039 --> 00:22:50.649
went along
we also renamed layouts drawables

00:22:50.649 --> 00:22:50.659
we also renamed layouts drawables
 

00:22:50.659 --> 00:22:52.960
we also renamed layouts drawables
attributes in the same way and then move

00:22:52.960 --> 00:22:52.970
attributes in the same way and then move
 

00:22:52.970 --> 00:22:57.340
attributes in the same way and then move
them along this list of with shared

00:22:57.340 --> 00:22:57.350
them along this list of with shared
 

00:22:57.350 --> 00:22:59.529
them along this list of with shared
sources which we moved in to share

00:22:59.529 --> 00:22:59.539
sources which we moved in to share
 

00:22:59.539 --> 00:23:02.259
sources which we moved in to share
dependency called our core library the

00:23:02.259 --> 00:23:02.269
dependency called our core library the
 

00:23:02.269 --> 00:23:03.879
dependency called our core library the
core library is bundled once within the

00:23:03.879 --> 00:23:03.889
core library is bundled once within the
 

00:23:03.889 --> 00:23:05.649
core library is bundled once within the
app space module and can be expanded I

00:23:05.649 --> 00:23:05.659
app space module and can be expanded I
 

00:23:05.659 --> 00:23:07.389
app space module and can be expanded I
can be exposed to dynamic feature

00:23:07.389 --> 00:23:07.399
can be exposed to dynamic feature
 

00:23:07.399 --> 00:23:09.669
can be exposed to dynamic feature
modules this means the entire

00:23:09.669 --> 00:23:09.679
modules this means the entire
 

00:23:09.679 --> 00:23:11.609
modules this means the entire
application is able to access

00:23:11.609 --> 00:23:11.619
application is able to access
 

00:23:11.619 --> 00:23:13.899
application is able to access
dependencies without unnecessarily

00:23:13.899 --> 00:23:13.909
dependencies without unnecessarily
 

00:23:13.909 --> 00:23:16.629
dependencies without unnecessarily
adding to the app size at this point

00:23:16.629 --> 00:23:16.639
adding to the app size at this point
 

00:23:16.639 --> 00:23:18.430
adding to the app size at this point
everything still was one monolithic

00:23:18.430 --> 00:23:18.440
everything still was one monolithic
 

00:23:18.440 --> 00:23:21.580
everything still was one monolithic
module but since we structured our app

00:23:21.580 --> 00:23:21.590
module but since we structured our app
 

00:23:21.590 --> 00:23:23.880
module but since we structured our app
on a feature level we were able to go

00:23:23.880 --> 00:23:23.890
on a feature level we were able to go
 

00:23:23.890 --> 00:23:25.410
on a feature level we were able to go
and creator of real first dynamic

00:23:25.410 --> 00:23:25.420
and creator of real first dynamic
 

00:23:25.420 --> 00:23:29.640
and creator of real first dynamic
feature module we started using the most

00:23:29.640 --> 00:23:29.650
feature module we started using the most
 

00:23:29.650 --> 00:23:31.290
feature module we started using the most
lightweight module with the least shared

00:23:31.290 --> 00:23:31.300
lightweight module with the least shared
 

00:23:31.300 --> 00:23:35.010
lightweight module with the least shared
dependencies our about screen the

00:23:35.010 --> 00:23:35.020
dependencies our about screen the
 

00:23:35.020 --> 00:23:37.620
dependencies our about screen the
Android Studios new module dialog takes

00:23:37.620 --> 00:23:37.630
Android Studios new module dialog takes
 

00:23:37.630 --> 00:23:39.720
Android Studios new module dialog takes
care of creating the basic setup all we

00:23:39.720 --> 00:23:39.730
care of creating the basic setup all we
 

00:23:39.730 --> 00:23:42.150
care of creating the basic setup all we
have to do is enter a module name and a

00:23:42.150 --> 00:23:42.160
have to do is enter a module name and a
 

00:23:42.160 --> 00:23:44.070
have to do is enter a module name and a
package name directories are being

00:23:44.070 --> 00:23:44.080
package name directories are being
 

00:23:44.080 --> 00:23:45.660
package name directories are being
created and the correct dependencies are

00:23:45.660 --> 00:23:45.670
created and the correct dependencies are
 

00:23:45.670 --> 00:23:48.990
created and the correct dependencies are
added in the apps Gradle file then we

00:23:48.990 --> 00:23:49.000
added in the apps Gradle file then we
 

00:23:49.000 --> 00:23:50.640
added in the apps Gradle file then we
moved all the previously structured code

00:23:50.640 --> 00:23:50.650
moved all the previously structured code
 

00:23:50.650 --> 00:23:52.950
moved all the previously structured code
and resources in the about feature into

00:23:52.950 --> 00:23:52.960
and resources in the about feature into
 

00:23:52.960 --> 00:23:55.410
and resources in the about feature into
a newly created module for most cases it

00:23:55.410 --> 00:23:55.420
a newly created module for most cases it
 

00:23:55.420 --> 00:23:57.060
a newly created module for most cases it
was a fairly lightweight process but

00:23:57.060 --> 00:23:57.070
was a fairly lightweight process but
 

00:23:57.070 --> 00:23:58.290
was a fairly lightweight process but
someday let's take a little bit more

00:23:58.290 --> 00:23:58.300
someday let's take a little bit more
 

00:23:58.300 --> 00:24:00.120
someday let's take a little bit more
work and thinking about so let's talk

00:24:00.120 --> 00:24:00.130
work and thinking about so let's talk
 

00:24:00.130 --> 00:24:04.440
work and thinking about so let's talk
about these as we are using resources

00:24:04.440 --> 00:24:04.450
about these as we are using resources
 

00:24:04.450 --> 00:24:06.720
about these as we are using resources
from both the about feature as well as

00:24:06.720 --> 00:24:06.730
from both the about feature as well as
 

00:24:06.730 --> 00:24:08.700
from both the about feature as well as
from the coal library imports came from

00:24:08.700 --> 00:24:08.710
from the coal library imports came from
 

00:24:08.710 --> 00:24:11.340
from the coal library imports came from
different our files they became a bit

00:24:11.340 --> 00:24:11.350
different our files they became a bit
 

00:24:11.350 --> 00:24:12.810
different our files they became a bit
tedious to read in a monolithic

00:24:12.810 --> 00:24:12.820
tedious to read in a monolithic
 

00:24:12.820 --> 00:24:14.550
tedious to read in a monolithic
application you usually have one single

00:24:14.550 --> 00:24:14.560
application you usually have one single
 

00:24:14.560 --> 00:24:17.420
application you usually have one single
of these files so that's not a problem

00:24:17.420 --> 00:24:17.430
of these files so that's not a problem
 

00:24:17.430 --> 00:24:21.030
of these files so that's not a problem
but if you import for multiple for

00:24:21.030 --> 00:24:21.040
but if you import for multiple for
 

00:24:21.040 --> 00:24:24.020
but if you import for multiple for
multiple packages you can end up with

00:24:24.020 --> 00:24:24.030
multiple packages you can end up with
 

00:24:24.030 --> 00:24:28.320
multiple packages you can end up with
imports like this we're able to resolve

00:24:28.320 --> 00:24:28.330
imports like this we're able to resolve
 

00:24:28.330 --> 00:24:30.090
imports like this we're able to resolve
this with courtland's import aliasing

00:24:30.090 --> 00:24:30.100
this with courtland's import aliasing
 

00:24:30.100 --> 00:24:31.800
this with courtland's import aliasing
it's a feature it allows you to map an

00:24:31.800 --> 00:24:31.810
it's a feature it allows you to map an
 

00:24:31.810 --> 00:24:33.660
it's a feature it allows you to map an
import to another name so instead of

00:24:33.660 --> 00:24:33.670
import to another name so instead of
 

00:24:33.670 --> 00:24:35.310
import to another name so instead of
having to write a fully qualified import

00:24:35.310 --> 00:24:35.320
having to write a fully qualified import
 

00:24:35.320 --> 00:24:37.980
having to write a fully qualified import
for apps our class we simply mapped it

00:24:37.980 --> 00:24:37.990
for apps our class we simply mapped it
 

00:24:37.990 --> 00:24:40.770
for apps our class we simply mapped it
to a bar this led to more concise and

00:24:40.770 --> 00:24:40.780
to a bar this led to more concise and
 

00:24:40.780 --> 00:24:42.600
to a bar this led to more concise and
readable code differentiation is still

00:24:42.600 --> 00:24:42.610
readable code differentiation is still
 

00:24:42.610 --> 00:24:45.060
readable code differentiation is still
possible and easy but it's way less

00:24:45.060 --> 00:24:45.070
possible and easy but it's way less
 

00:24:45.070 --> 00:24:48.030
possible and easy but it's way less
noisy to read another thing we had to

00:24:48.030 --> 00:24:48.040
noisy to read another thing we had to
 

00:24:48.040 --> 00:24:49.620
noisy to read another thing we had to
change was the way activities are

00:24:49.620 --> 00:24:49.630
change was the way activities are
 

00:24:49.630 --> 00:24:51.240
change was the way activities are
launched within the app in a monolithic

00:24:51.240 --> 00:24:51.250
launched within the app in a monolithic
 

00:24:51.250 --> 00:24:54.240
launched within the app in a monolithic
app it's possible to pass the class pass

00:24:54.240 --> 00:24:54.250
app it's possible to pass the class pass
 

00:24:54.250 --> 00:24:55.560
app it's possible to pass the class pass
the class directly truly intend

00:24:55.560 --> 00:24:55.570
the class directly truly intend
 

00:24:55.570 --> 00:24:59.460
the class directly truly intend
explicitly even activities within a

00:24:59.460 --> 00:24:59.470
explicitly even activities within a
 

00:24:59.470 --> 00:25:01.230
explicitly even activities within a
library dependency can be explicitly

00:25:01.230 --> 00:25:01.240
library dependency can be explicitly
 

00:25:01.240 --> 00:25:03.690
library dependency can be explicitly
launched the dependency is directly

00:25:03.690 --> 00:25:03.700
launched the dependency is directly
 

00:25:03.700 --> 00:25:05.130
launched the dependency is directly
accessible from within the app space

00:25:05.130 --> 00:25:05.140
accessible from within the app space
 

00:25:05.140 --> 00:25:08.100
accessible from within the app space
module but a dynamic feature module

00:25:08.100 --> 00:25:08.110
module but a dynamic feature module
 

00:25:08.110 --> 00:25:10.050
module but a dynamic feature module
depends on the app which makes its

00:25:10.050 --> 00:25:10.060
depends on the app which makes its
 

00:25:10.060 --> 00:25:11.760
depends on the app which makes its
content invisible to the app module

00:25:11.760 --> 00:25:11.770
content invisible to the app module
 

00:25:11.770 --> 00:25:14.190
content invisible to the app module
this means the classes in a dynamic

00:25:14.190 --> 00:25:14.200
this means the classes in a dynamic
 

00:25:14.200 --> 00:25:15.840
this means the classes in a dynamic
feature module are inaccessible to the

00:25:15.840 --> 00:25:15.850
feature module are inaccessible to the
 

00:25:15.850 --> 00:25:19.260
feature module are inaccessible to the
app module so instead of passing the

00:25:19.260 --> 00:25:19.270
app module so instead of passing the
 

00:25:19.270 --> 00:25:20.910
app module so instead of passing the
class directly we now pass the fully

00:25:20.910 --> 00:25:20.920
class directly we now pass the fully
 

00:25:20.920 --> 00:25:22.980
class directly we now pass the fully
qualified class name the android flight

00:25:22.980 --> 00:25:22.990
qualified class name the android flight
 

00:25:22.990 --> 00:25:24.690
qualified class name the android flight
framework is able to instantiate and

00:25:24.690 --> 00:25:24.700
framework is able to instantiate and
 

00:25:24.700 --> 00:25:27.440
framework is able to instantiate and
start the activity as it usually did an

00:25:27.440 --> 00:25:27.450
start the activity as it usually did an
 

00:25:27.450 --> 00:25:29.760
start the activity as it usually did an
app containing fragments in a dynamic

00:25:29.760 --> 00:25:29.770
app containing fragments in a dynamic
 

00:25:29.770 --> 00:25:31.830
app containing fragments in a dynamic
feature module can use reflection for

00:25:31.830 --> 00:25:31.840
feature module can use reflection for
 

00:25:31.840 --> 00:25:35.760
feature module can use reflection for
instantiation a key to model arising is

00:25:35.760 --> 00:25:35.770
instantiation a key to model arising is
 

00:25:35.770 --> 00:25:37.740
instantiation a key to model arising is
also having a single point of

00:25:37.740 --> 00:25:37.750
also having a single point of
 

00:25:37.750 --> 00:25:40.440
also having a single point of
for actions you can take so we didn't

00:25:40.440 --> 00:25:40.450
for actions you can take so we didn't
 

00:25:40.450 --> 00:25:41.910
for actions you can take so we didn't
want to maintain these weekly cut type

00:25:41.910 --> 00:25:41.920
want to maintain these weekly cut type
 

00:25:41.920 --> 00:25:43.740
want to maintain these weekly cut type
calls throughout the entirety of plaid

00:25:43.740 --> 00:25:43.750
calls throughout the entirety of plaid
 

00:25:43.750 --> 00:25:45.950
calls throughout the entirety of plaid
so we introduced the addressable

00:25:45.950 --> 00:25:45.960
so we introduced the addressable
 

00:25:45.960 --> 00:25:48.240
so we introduced the addressable
addressable activity interface in the

00:25:48.240 --> 00:25:48.250
addressable activity interface in the
 

00:25:48.250 --> 00:25:51.120
addressable activity interface in the
apps core library then we implemented it

00:25:51.120 --> 00:25:51.130
apps core library then we implemented it
 

00:25:51.130 --> 00:25:53.220
apps core library then we implemented it
for each of plaids activities when

00:25:53.220 --> 00:25:53.230
for each of plaids activities when
 

00:25:53.230 --> 00:25:54.750
for each of plaids activities when
needed these objects can also hold keys

00:25:54.750 --> 00:25:54.760
needed these objects can also hold keys
 

00:25:54.760 --> 00:25:56.720
needed these objects can also hold keys
to enter nectar extras in a single place

00:25:56.720 --> 00:25:56.730
to enter nectar extras in a single place
 

00:25:56.730 --> 00:25:58.920
to enter nectar extras in a single place
this allows for centralized code that

00:25:58.920 --> 00:25:58.930
this allows for centralized code that
 

00:25:58.930 --> 00:26:01.460
this allows for centralized code that
can be invoked from anyone view

00:26:01.460 --> 00:26:01.470
can be invoked from anyone view
 

00:26:01.470 --> 00:26:03.870
can be invoked from anyone view
alongside with the intent to phone

00:26:03.870 --> 00:26:03.880
alongside with the intent to phone
 

00:26:03.880 --> 00:26:05.580
alongside with the intent to phone
function this makes launching the

00:26:05.580 --> 00:26:05.590
function this makes launching the
 

00:26:05.590 --> 00:26:07.470
function this makes launching the
activity for straightforward and type

00:26:07.470 --> 00:26:07.480
activity for straightforward and type
 

00:26:07.480 --> 00:26:10.920
activity for straightforward and type
safe this allows for decoupled code that

00:26:10.920 --> 00:26:10.930
safe this allows for decoupled code that
 

00:26:10.930 --> 00:26:12.930
safe this allows for decoupled code that
can be invoked from any module as well

00:26:12.930 --> 00:26:12.940
can be invoked from any module as well
 

00:26:12.940 --> 00:26:16.680
can be invoked from any module as well
as easy to read even before making use

00:26:16.680 --> 00:26:16.690
as easy to read even before making use
 

00:26:16.690 --> 00:26:19.020
as easy to read even before making use
of on-demand delivery we have reaped

00:26:19.020 --> 00:26:19.030
of on-demand delivery we have reaped
 

00:26:19.030 --> 00:26:22.320
of on-demand delivery we have reaped
various benefits Platts built time

00:26:22.320 --> 00:26:22.330
various benefits Platts built time
 

00:26:22.330 --> 00:26:24.090
various benefits Platts built time
dropped from three minutes down to one

00:26:24.090 --> 00:26:24.100
dropped from three minutes down to one
 

00:26:24.100 --> 00:26:26.820
dropped from three minutes down to one
minute for a clean build this is

00:26:26.820 --> 00:26:26.830
minute for a clean build this is
 

00:26:26.830 --> 00:26:29.010
minute for a clean build this is
achieved by using Grails to parallel

00:26:29.010 --> 00:26:29.020
achieved by using Grails to parallel
 

00:26:29.020 --> 00:26:31.140
achieved by using Grails to parallel
build feature which enables us to build

00:26:31.140 --> 00:26:31.150
build feature which enables us to build
 

00:26:31.150 --> 00:26:33.360
build feature which enables us to build
multiple independent features at once up

00:26:33.360 --> 00:26:33.370
multiple independent features at once up
 

00:26:33.370 --> 00:26:35.400
multiple independent features at once up
to a certain limit separating out more

00:26:35.400 --> 00:26:35.410
to a certain limit separating out more
 

00:26:35.410 --> 00:26:37.140
to a certain limit separating out more
independent features will further

00:26:37.140 --> 00:26:37.150
independent features will further
 

00:26:37.150 --> 00:26:39.960
independent features will further
decrease the build time overall we

00:26:39.960 --> 00:26:39.970
decrease the build time overall we
 

00:26:39.970 --> 00:26:41.520
decrease the build time overall we
gained a more maintainable app this is

00:26:41.520 --> 00:26:41.530
gained a more maintainable app this is
 

00:26:41.530 --> 00:26:43.350
gained a more maintainable app this is
due to self-contained modules and

00:26:43.350 --> 00:26:43.360
due to self-contained modules and
 

00:26:43.360 --> 00:26:45.500
due to self-contained modules and
compile time enforcement of separation

00:26:45.500 --> 00:26:45.510
compile time enforcement of separation
 

00:26:45.510 --> 00:26:48.030
compile time enforcement of separation
also apps footprint has dramatically

00:26:48.030 --> 00:26:48.040
also apps footprint has dramatically
 

00:26:48.040 --> 00:26:50.640
also apps footprint has dramatically
decreased this results in a faster and

00:26:50.640 --> 00:26:50.650
decreased this results in a faster and
 

00:26:50.650 --> 00:26:52.170
decreased this results in a faster and
faster app downloads and saves precious

00:26:52.170 --> 00:26:52.180
faster app downloads and saves precious
 

00:26:52.180 --> 00:26:56.820
faster app downloads and saves precious
storage on device so looking back at our

00:26:56.820 --> 00:26:56.830
storage on device so looking back at our
 

00:26:56.830 --> 00:26:58.770
storage on device so looking back at our
tracks we took so far we first

00:26:58.770 --> 00:26:58.780
tracks we took so far we first
 

00:26:58.780 --> 00:27:00.510
tracks we took so far we first
identified the features of the app that

00:27:00.510 --> 00:27:00.520
identified the features of the app that
 

00:27:00.520 --> 00:27:02.340
identified the features of the app that
we wanted to model arise in our case

00:27:02.340 --> 00:27:02.350
we wanted to model arise in our case
 

00:27:02.350 --> 00:27:04.020
we wanted to model arise in our case
those were the user facing features that

00:27:04.020 --> 00:27:04.030
those were the user facing features that
 

00:27:04.030 --> 00:27:06.090
those were the user facing features that
the app already had then we started

00:27:06.090 --> 00:27:06.100
the app already had then we started
 

00:27:06.100 --> 00:27:08.010
the app already had then we started
moving the code and resources to match

00:27:08.010 --> 00:27:08.020
moving the code and resources to match
 

00:27:08.020 --> 00:27:09.750
moving the code and resources to match
to the structure afterwards

00:27:09.750 --> 00:27:09.760
to the structure afterwards
 

00:27:09.760 --> 00:27:12.090
to the structure afterwards
we created a future module and populated

00:27:12.090 --> 00:27:12.100
we created a future module and populated
 

00:27:12.100 --> 00:27:16.350
we created a future module and populated
that our modular architecture will allow

00:27:16.350 --> 00:27:16.360
that our modular architecture will allow
 

00:27:16.360 --> 00:27:18.360
that our modular architecture will allow
us in the future to dynamically install

00:27:18.360 --> 00:27:18.370
us in the future to dynamically install
 

00:27:18.370 --> 00:27:20.700
us in the future to dynamically install
modules as we need them this works by

00:27:20.700 --> 00:27:20.710
modules as we need them this works by
 

00:27:20.710 --> 00:27:22.200
modules as we need them this works by
depending on the pleco library and

00:27:22.200 --> 00:27:22.210
depending on the pleco library and
 

00:27:22.210 --> 00:27:26.670
depending on the pleco library and
making use of its functionality we can

00:27:26.670 --> 00:27:26.680
making use of its functionality we can
 

00:27:26.680 --> 00:27:28.470
making use of its functionality we can
request an emic feature modules as they

00:27:28.470 --> 00:27:28.480
request an emic feature modules as they
 

00:27:28.480 --> 00:27:30.000
request an emic feature modules as they
are needed and start installing them

00:27:30.000 --> 00:27:30.010
are needed and start installing them
 

00:27:30.010 --> 00:27:31.470
are needed and start installing them
also

00:27:31.470 --> 00:27:31.480
also
 

00:27:31.480 --> 00:27:33.840
also
if users disable features for a longer

00:27:33.840 --> 00:27:33.850
if users disable features for a longer
 

00:27:33.850 --> 00:27:35.700
if users disable features for a longer
time we can easily uninstall them if

00:27:35.700 --> 00:27:35.710
time we can easily uninstall them if
 

00:27:35.710 --> 00:27:37.950
time we can easily uninstall them if
they're no longer needed for more

00:27:37.950 --> 00:27:37.960
they're no longer needed for more
 

00:27:37.960 --> 00:27:39.330
they're no longer needed for more
details on how to do it check out the

00:27:39.330 --> 00:27:39.340
details on how to do it check out the
 

00:27:39.340 --> 00:27:40.950
details on how to do it check out the
sample app as well as the play core

00:27:40.950 --> 00:27:40.960
sample app as well as the play core
 

00:27:40.960 --> 00:27:43.650
sample app as well as the play core
library documentation you can follow

00:27:43.650 --> 00:27:43.660
library documentation you can follow
 

00:27:43.660 --> 00:27:45.750
library documentation you can follow
Platts development on github also check

00:27:45.750 --> 00:27:45.760
Platts development on github also check
 

00:27:45.760 --> 00:27:47.370
Platts development on github also check
out an article containing more in-depth

00:27:47.370 --> 00:27:47.380
out an article containing more in-depth
 

00:27:47.380 --> 00:27:48.960
out an article containing more in-depth
information on the modular ization

00:27:48.960 --> 00:27:48.970
information on the modular ization
 

00:27:48.970 --> 00:27:49.820
information on the modular ization
process

00:27:49.820 --> 00:27:49.830
process
 

00:27:49.830 --> 00:27:52.249
process
thank you very much with better without

00:27:52.249 --> 00:27:52.259
thank you very much with better without
 

00:27:52.259 --> 00:27:53.430
thank you very much with better without
back to your feet

00:27:53.430 --> 00:27:53.440
back to your feet
 

00:27:53.440 --> 00:28:03.790
back to your feet
[Applause]

00:28:03.790 --> 00:28:03.800
 
 

00:28:03.800 --> 00:28:07.510
 
now let's talk about testing a bit since

00:28:07.510 --> 00:28:07.520
now let's talk about testing a bit since
 

00:28:07.520 --> 00:28:09.370
now let's talk about testing a bit since
we launched the app bundle we kept

00:28:09.370 --> 00:28:09.380
we launched the app bundle we kept
 

00:28:09.380 --> 00:28:11.500
we launched the app bundle we kept
hearing from developers how great it is

00:28:11.500 --> 00:28:11.510
hearing from developers how great it is
 

00:28:11.510 --> 00:28:14.140
hearing from developers how great it is
but there is one thing we heard from you

00:28:14.140 --> 00:28:14.150
but there is one thing we heard from you
 

00:28:14.150 --> 00:28:15.780
but there is one thing we heard from you
loud and clear

00:28:15.780 --> 00:28:15.790
loud and clear
 

00:28:15.790 --> 00:28:20.170
loud and clear
testing of the app bundle is hard this

00:28:20.170 --> 00:28:20.180
testing of the app bundle is hard this
 

00:28:20.180 --> 00:28:21.940
testing of the app bundle is hard this
is especially true early in the

00:28:21.940 --> 00:28:21.950
is especially true early in the
 

00:28:21.950 --> 00:28:23.290
is especially true early in the
development lifecycle

00:28:23.290 --> 00:28:23.300
development lifecycle
 

00:28:23.300 --> 00:28:25.450
development lifecycle
where you simply want to share a test

00:28:25.450 --> 00:28:25.460
where you simply want to share a test
 

00:28:25.460 --> 00:28:27.340
where you simply want to share a test
build with your interests internal

00:28:27.340 --> 00:28:27.350
build with your interests internal
 

00:28:27.350 --> 00:28:30.790
build with your interests internal
testers in the apk world it used to be

00:28:30.790 --> 00:28:30.800
testers in the apk world it used to be
 

00:28:30.800 --> 00:28:33.880
testers in the apk world it used to be
very easy to do you simply send the apk

00:28:33.880 --> 00:28:33.890
very easy to do you simply send the apk
 

00:28:33.890 --> 00:28:36.160
very easy to do you simply send the apk
and the platform knows what to do with

00:28:36.160 --> 00:28:36.170
and the platform knows what to do with
 

00:28:36.170 --> 00:28:39.460
and the platform knows what to do with
it but our bundles are not installable

00:28:39.460 --> 00:28:39.470
it but our bundles are not installable
 

00:28:39.470 --> 00:28:42.370
it but our bundles are not installable
and would play tailoring the served up

00:28:42.370 --> 00:28:42.380
and would play tailoring the served up
 

00:28:42.380 --> 00:28:46.270
and would play tailoring the served up
to each device you want a guaranteed way

00:28:46.270 --> 00:28:46.280
to each device you want a guaranteed way
 

00:28:46.280 --> 00:28:49.150
to each device you want a guaranteed way
to get exactly the same binary as your

00:28:49.150 --> 00:28:49.160
to get exactly the same binary as your
 

00:28:49.160 --> 00:28:52.420
to get exactly the same binary as your
users would get you have asked and we

00:28:52.420 --> 00:28:52.430
users would get you have asked and we
 

00:28:52.430 --> 00:28:55.680
users would get you have asked and we
have heard you internal app sharing

00:28:55.680 --> 00:28:55.690
have heard you internal app sharing
 

00:28:55.690 --> 00:28:58.840
have heard you internal app sharing
launched today gives you a quick and

00:28:58.840 --> 00:28:58.850
launched today gives you a quick and
 

00:28:58.850 --> 00:29:01.330
launched today gives you a quick and
easy way to internally share our bundles

00:29:01.330 --> 00:29:01.340
easy way to internally share our bundles
 

00:29:01.340 --> 00:29:05.230
easy way to internally share our bundles
for testing all you need to do is up is

00:29:05.230 --> 00:29:05.240
for testing all you need to do is up is
 

00:29:05.240 --> 00:29:07.720
for testing all you need to do is up is
upload a bundle to play get a shareable

00:29:07.720 --> 00:29:07.730
upload a bundle to play get a shareable
 

00:29:07.730 --> 00:29:10.510
upload a bundle to play get a shareable
you around and have your testers use

00:29:10.510 --> 00:29:10.520
you around and have your testers use
 

00:29:10.520 --> 00:29:13.210
you around and have your testers use
that to your realm to download and test

00:29:13.210 --> 00:29:13.220
that to your realm to download and test
 

00:29:13.220 --> 00:29:18.340
that to your realm to download and test
the app this is how it looks you simply

00:29:18.340 --> 00:29:18.350
the app this is how it looks you simply
 

00:29:18.350 --> 00:29:20.560
the app this is how it looks you simply
drag and drop to upload and share the

00:29:20.560 --> 00:29:20.570
drag and drop to upload and share the
 

00:29:20.570 --> 00:29:24.010
drag and drop to upload and share the
generated link with your testers with

00:29:24.010 --> 00:29:24.020
generated link with your testers with
 

00:29:24.020 --> 00:29:26.110
generated link with your testers with
internal app sharing the app installed

00:29:26.110 --> 00:29:26.120
internal app sharing the app installed
 

00:29:26.120 --> 00:29:29.050
internal app sharing the app installed
is exactly the same as if it would have

00:29:29.050 --> 00:29:29.060
is exactly the same as if it would have
 

00:29:29.060 --> 00:29:32.380
is exactly the same as if it would have
officially published to play it even

00:29:32.380 --> 00:29:32.390
officially published to play it even
 

00:29:32.390 --> 00:29:34.960
officially published to play it even
supports dynamic delivery features

00:29:34.960 --> 00:29:34.970
supports dynamic delivery features
 

00:29:34.970 --> 00:29:37.870
supports dynamic delivery features
including on-demand and conditional

00:29:37.870 --> 00:29:37.880
including on-demand and conditional
 

00:29:37.880 --> 00:29:41.350
including on-demand and conditional
delivery this way you have full

00:29:41.350 --> 00:29:41.360
delivery this way you have full
 

00:29:41.360 --> 00:29:43.510
delivery this way you have full
confidence that what you are testing is

00:29:43.510 --> 00:29:43.520
confidence that what you are testing is
 

00:29:43.520 --> 00:29:46.150
confidence that what you are testing is
the real thing any and you can expect

00:29:46.150 --> 00:29:46.160
the real thing any and you can expect
 

00:29:46.160 --> 00:29:49.240
the real thing any and you can expect
exactly the same behavior as your users

00:29:49.240 --> 00:29:49.250
exactly the same behavior as your users
 

00:29:49.250 --> 00:29:52.660
exactly the same behavior as your users
out in the world you are probably

00:29:52.660 --> 00:29:52.670
out in the world you are probably
 

00:29:52.670 --> 00:29:54.610
out in the world you are probably
curious to hear more about how it works

00:29:54.610 --> 00:29:54.620
curious to hear more about how it works
 

00:29:54.620 --> 00:29:56.950
curious to hear more about how it works
so let's have search who led the

00:29:56.950 --> 00:29:56.960
so let's have search who led the
 

00:29:56.960 --> 00:29:59.080
so let's have search who led the
development of internal app sharing

00:29:59.080 --> 00:29:59.090
development of internal app sharing
 

00:29:59.090 --> 00:30:04.510
development of internal app sharing
dive into the details of it

00:30:04.510 --> 00:30:04.520
 
 

00:30:04.520 --> 00:30:06.829
 
[Applause]

00:30:06.829 --> 00:30:06.839
[Applause]
 

00:30:06.839 --> 00:30:10.919
[Applause]
thanks Fe hello first I'd like to

00:30:10.919 --> 00:30:10.929
thanks Fe hello first I'd like to
 

00:30:10.929 --> 00:30:13.489
thanks Fe hello first I'd like to
clarify that internal app sharing is

00:30:13.489 --> 00:30:13.499
clarify that internal app sharing is
 

00:30:13.499 --> 00:30:15.659
clarify that internal app sharing is
fundamentally different than our

00:30:15.659 --> 00:30:15.669
fundamentally different than our
 

00:30:15.669 --> 00:30:18.269
fundamentally different than our
existing testing programs simply put

00:30:18.269 --> 00:30:18.279
existing testing programs simply put
 

00:30:18.279 --> 00:30:21.389
existing testing programs simply put
it's not a release track with internal

00:30:21.389 --> 00:30:21.399
it's not a release track with internal
 

00:30:21.399 --> 00:30:24.899
it's not a release track with internal
app sharing the test version uploaded to

00:30:24.899 --> 00:30:24.909
app sharing the test version uploaded to
 

00:30:24.909 --> 00:30:27.239
app sharing the test version uploaded to
play or served and hosted by play

00:30:27.239 --> 00:30:27.249
play or served and hosted by play
 

00:30:27.249 --> 00:30:29.579
play or served and hosted by play
independently they're not part of a

00:30:29.579 --> 00:30:29.589
independently they're not part of a
 

00:30:29.589 --> 00:30:33.659
independently they're not part of a
release published in the Play console so

00:30:33.659 --> 00:30:33.669
release published in the Play console so
 

00:30:33.669 --> 00:30:35.299
release published in the Play console so
let's start a few important features

00:30:35.299 --> 00:30:35.309
let's start a few important features
 

00:30:35.309 --> 00:30:43.319
let's start a few important features
first each test version each uploaders

00:30:43.319 --> 00:30:43.329
first each test version each uploaders
 

00:30:43.329 --> 00:30:46.819
first each test version each uploaders
don't need to be click on show members

00:30:46.819 --> 00:30:46.829
don't need to be click on show members
 

00:30:46.829 --> 00:30:51.149
don't need to be click on show members
so you can authorize users that don't

00:30:51.149 --> 00:30:51.159
so you can authorize users that don't
 

00:30:51.159 --> 00:30:54.299
so you can authorize users that don't
have access to the Play Store test

00:30:54.299 --> 00:30:54.309
have access to the Play Store test
 

00:30:54.309 --> 00:30:57.180
have access to the Play Store test
versions are we signed by play with the

00:30:57.180 --> 00:30:57.190
versions are we signed by play with the
 

00:30:57.190 --> 00:31:00.839
versions are we signed by play with the
test certificate so uploaders don't need

00:31:00.839 --> 00:31:00.849
test certificate so uploaders don't need
 

00:31:00.849 --> 00:31:04.139
test certificate so uploaders don't need
access to the production or upload key

00:31:04.139 --> 00:31:04.149
access to the production or upload key
 

00:31:04.149 --> 00:31:07.949
access to the production or upload key
of your app play doesn't require unique

00:31:07.949 --> 00:31:07.959
of your app play doesn't require unique
 

00:31:07.959 --> 00:31:11.459
of your app play doesn't require unique
version codes so multiple uploaders can

00:31:11.459 --> 00:31:11.469
version codes so multiple uploaders can
 

00:31:11.469 --> 00:31:14.129
version codes so multiple uploaders can
use this feature and apparently and they

00:31:14.129 --> 00:31:14.139
use this feature and apparently and they
 

00:31:14.139 --> 00:31:16.439
use this feature and apparently and they
don't have to pick unique version codes

00:31:16.439 --> 00:31:16.449
don't have to pick unique version codes
 

00:31:16.449 --> 00:31:19.499
don't have to pick unique version codes
when they upload the bugaboo artifacts

00:31:19.499 --> 00:31:19.509
when they upload the bugaboo artifacts
 

00:31:19.509 --> 00:31:21.989
when they upload the bugaboo artifacts
can also be uploaded so you can debug

00:31:21.989 --> 00:31:21.999
can also be uploaded so you can debug
 

00:31:21.999 --> 00:31:24.539
can also be uploaded so you can debug
the apk is once installed on the testers

00:31:24.539 --> 00:31:24.549
the apk is once installed on the testers
 

00:31:24.549 --> 00:31:29.069
the apk is once installed on the testers
devices to authorize testers you can go

00:31:29.069 --> 00:31:29.079
devices to authorize testers you can go
 

00:31:29.079 --> 00:31:31.499
devices to authorize testers you can go
to the Play console and choose to either

00:31:31.499 --> 00:31:31.509
to the Play console and choose to either
 

00:31:31.509 --> 00:31:35.039
to the Play console and choose to either
allow anyone with the link to download

00:31:35.039 --> 00:31:35.049
allow anyone with the link to download
 

00:31:35.049 --> 00:31:40.099
allow anyone with the link to download
and install apks or to allow only users

00:31:40.099 --> 00:31:40.109
and install apks or to allow only users
 

00:31:40.109 --> 00:31:44.189
and install apks or to allow only users
in in predefined list in both cases

00:31:44.189 --> 00:31:44.199
in in predefined list in both cases
 

00:31:44.199 --> 00:31:47.549
in in predefined list in both cases
there's a user cap enforced by play so

00:31:47.549 --> 00:31:47.559
there's a user cap enforced by play so
 

00:31:47.559 --> 00:31:49.379
there's a user cap enforced by play so
let me show you how it works in practice

00:31:49.379 --> 00:31:49.389
let me show you how it works in practice
 

00:31:49.389 --> 00:32:01.650
let me show you how it works in practice
can we switch to the laptop please

00:32:01.650 --> 00:32:01.660
 
 

00:32:01.660 --> 00:32:04.140
 
can we can we seal at the lab yes

00:32:04.140 --> 00:32:04.150
can we can we seal at the lab yes
 

00:32:04.150 --> 00:32:08.060
can we can we seal at the lab yes
excellent so I have an app bundle here

00:32:08.060 --> 00:32:08.070
excellent so I have an app bundle here
 

00:32:08.070 --> 00:32:12.600
excellent so I have an app bundle here
on my desktop I just did a fix for a bug

00:32:12.600 --> 00:32:12.610
on my desktop I just did a fix for a bug
 

00:32:12.610 --> 00:32:14.460
on my desktop I just did a fix for a bug
that was reported and I want to quickly

00:32:14.460 --> 00:32:14.470
that was reported and I want to quickly
 

00:32:14.470 --> 00:32:16.950
that was reported and I want to quickly
share it with my QA engineer for

00:32:16.950 --> 00:32:16.960
share it with my QA engineer for
 

00:32:16.960 --> 00:32:19.770
share it with my QA engineer for
validation obviously because it's an app

00:32:19.770 --> 00:32:19.780
validation obviously because it's an app
 

00:32:19.780 --> 00:32:20.340
validation obviously because it's an app
bundle

00:32:20.340 --> 00:32:20.350
bundle
 

00:32:20.350 --> 00:32:22.710
bundle
my tester cannot simply install it on

00:32:22.710 --> 00:32:22.720
my tester cannot simply install it on
 

00:32:22.720 --> 00:32:25.650
my tester cannot simply install it on
the device so what I will do is that I

00:32:25.650 --> 00:32:25.660
the device so what I will do is that I
 

00:32:25.660 --> 00:32:29.160
the device so what I will do is that I
will load the new internal app sharing

00:32:29.160 --> 00:32:29.170
will load the new internal app sharing
 

00:32:29.170 --> 00:32:31.800
will load the new internal app sharing
upload page and then we'll drag and drop

00:32:31.800 --> 00:32:31.810
upload page and then we'll drag and drop
 

00:32:31.810 --> 00:32:36.990
upload page and then we'll drag and drop
the bundle on to that page against here

00:32:36.990 --> 00:32:37.000
the bundle on to that page against here
 

00:32:37.000 --> 00:32:38.280
the bundle on to that page against here
I don't have to worry about version

00:32:38.280 --> 00:32:38.290
I don't have to worry about version
 

00:32:38.290 --> 00:32:39.990
I don't have to worry about version
codes because I'm guaranteed they won't

00:32:39.990 --> 00:32:40.000
codes because I'm guaranteed they won't
 

00:32:40.000 --> 00:32:42.360
codes because I'm guaranteed they won't
conflict with the artifact published in

00:32:42.360 --> 00:32:42.370
conflict with the artifact published in
 

00:32:42.370 --> 00:32:45.810
conflict with the artifact published in
release tracks it shows a dialog and it

00:32:45.810 --> 00:32:45.820
release tracks it shows a dialog and it
 

00:32:45.820 --> 00:32:48.000
release tracks it shows a dialog and it
shows the version name of my app bundle

00:32:48.000 --> 00:32:48.010
shows the version name of my app bundle
 

00:32:48.010 --> 00:32:50.040
shows the version name of my app bundle
that is extracted from the Android

00:32:50.040 --> 00:32:50.050
that is extracted from the Android
 

00:32:50.050 --> 00:32:53.010
that is extracted from the Android
manifest file I can choose to change the

00:32:53.010 --> 00:32:53.020
manifest file I can choose to change the
 

00:32:53.020 --> 00:32:55.830
manifest file I can choose to change the
version name so my tester knows what

00:32:55.830 --> 00:32:55.840
version name so my tester knows what
 

00:32:55.840 --> 00:33:03.330
version name so my tester knows what
this test version is about here again my

00:33:03.330 --> 00:33:03.340
this test version is about here again my
 

00:33:03.340 --> 00:33:06.720
this test version is about here again my
tester my uploader account doesn't need

00:33:06.720 --> 00:33:06.730
tester my uploader account doesn't need
 

00:33:06.730 --> 00:33:09.210
tester my uploader account doesn't need
to have access to the Play console it

00:33:09.210 --> 00:33:09.220
to have access to the Play console it
 

00:33:09.220 --> 00:33:11.070
to have access to the Play console it
just needs to be authorized by the Play

00:33:11.070 --> 00:33:11.080
just needs to be authorized by the Play
 

00:33:11.080 --> 00:33:15.060
just needs to be authorized by the Play
console admin for that app now that the

00:33:15.060 --> 00:33:15.070
console admin for that app now that the
 

00:33:15.070 --> 00:33:17.310
console admin for that app now that the
upload has completed it shows a

00:33:17.310 --> 00:33:17.320
upload has completed it shows a
 

00:33:17.320 --> 00:33:20.280
upload has completed it shows a
shareable link so I can copy that link

00:33:20.280 --> 00:33:20.290
shareable link so I can copy that link
 

00:33:20.290 --> 00:33:27.660
shareable link so I can copy that link
and I can send it to my tester I can we

00:33:27.660 --> 00:33:27.670
and I can send it to my tester I can we
 

00:33:27.670 --> 00:33:33.560
and I can send it to my tester I can we
can we switch to the device place

00:33:33.560 --> 00:33:33.570
 
 

00:33:33.570 --> 00:33:36.570
 
amazing so I have my testers device here

00:33:36.570 --> 00:33:36.580
amazing so I have my testers device here
 

00:33:36.580 --> 00:33:42.120
amazing so I have my testers device here
and within a few seconds I should get

00:33:42.120 --> 00:33:42.130
and within a few seconds I should get
 

00:33:42.130 --> 00:33:46.880
and within a few seconds I should get
the email so my tester opens the link

00:33:46.880 --> 00:33:46.890
the email so my tester opens the link
 

00:33:46.890 --> 00:33:57.980
the email so my tester opens the link
and install the app

00:33:57.980 --> 00:33:57.990
 
 

00:33:57.990 --> 00:34:07.430
 
so there it is super simple okay this is

00:34:07.430 --> 00:34:07.440
so there it is super simple okay this is
 

00:34:07.440 --> 00:34:10.430
so there it is super simple okay this is
a version of Gmail that I built and I

00:34:10.430 --> 00:34:10.440
a version of Gmail that I built and I
 

00:34:10.440 --> 00:34:12.710
a version of Gmail that I built and I
changed it so that there's a dynamic

00:34:12.710 --> 00:34:12.720
changed it so that there's a dynamic
 

00:34:12.720 --> 00:34:14.720
changed it so that there's a dynamic
feature module for the compose activity

00:34:14.720 --> 00:34:14.730
feature module for the compose activity
 

00:34:14.730 --> 00:34:18.740
feature module for the compose activity
when I tap on the plus button here it

00:34:18.740 --> 00:34:18.750
when I tap on the plus button here it
 

00:34:18.750 --> 00:34:22.159
when I tap on the plus button here it
loves a feature module and it's

00:34:22.159 --> 00:34:22.169
loves a feature module and it's
 

00:34:22.169 --> 00:34:24.800
loves a feature module and it's
installed by play it works right away

00:34:24.800 --> 00:34:24.810
installed by play it works right away
 

00:34:24.810 --> 00:34:27.619
installed by play it works right away
because the app is installed by play but

00:34:27.619 --> 00:34:27.629
because the app is installed by play but
 

00:34:27.629 --> 00:34:30.919
because the app is installed by play but
even better because my bundle is the

00:34:30.919 --> 00:34:30.929
even better because my bundle is the
 

00:34:30.929 --> 00:34:34.280
even better because my bundle is the
Bugaboo I can take my device and I can

00:34:34.280 --> 00:34:34.290
Bugaboo I can take my device and I can
 

00:34:34.290 --> 00:34:39.700
Bugaboo I can take my device and I can
connect it to Android studio I can

00:34:39.700 --> 00:34:39.710
connect it to Android studio I can
 

00:34:39.710 --> 00:34:44.649
connect it to Android studio I can
attach the debugger to that process and

00:34:44.649 --> 00:34:44.659
attach the debugger to that process and
 

00:34:44.659 --> 00:34:48.710
attach the debugger to that process and
I can step through the dynamic delivery

00:34:48.710 --> 00:34:48.720
I can step through the dynamic delivery
 

00:34:48.720 --> 00:34:53.659
I can step through the dynamic delivery
code so that's super useful can you all

00:34:53.659 --> 00:34:53.669
code so that's super useful can you all
 

00:34:53.669 --> 00:34:56.060
code so that's super useful can you all
sorry can we switch to the can we switch

00:34:56.060 --> 00:34:56.070
sorry can we switch to the can we switch
 

00:34:56.070 --> 00:35:01.190
sorry can we switch to the can we switch
to the both devices please all right let

00:35:01.190 --> 00:35:01.200
to the both devices please all right let
 

00:35:01.200 --> 00:35:07.190
to the both devices please all right let
me do that again I can step and through

00:35:07.190 --> 00:35:07.200
me do that again I can step and through
 

00:35:07.200 --> 00:35:11.720
me do that again I can step and through
the dynamic delivery code more than that

00:35:11.720 --> 00:35:11.730
the dynamic delivery code more than that
 

00:35:11.730 --> 00:35:14.530
the dynamic delivery code more than that
we also build an API endpoint and the

00:35:14.530 --> 00:35:14.540
we also build an API endpoint and the
 

00:35:14.540 --> 00:35:17.990
we also build an API endpoint and the
Play publisher API so that you can

00:35:17.990 --> 00:35:18.000
Play publisher API so that you can
 

00:35:18.000 --> 00:35:21.920
Play publisher API so that you can
automate publishing artifact to internal

00:35:21.920 --> 00:35:21.930
automate publishing artifact to internal
 

00:35:21.930 --> 00:35:24.140
automate publishing artifact to internal
app sharing and you can integrate it

00:35:24.140 --> 00:35:24.150
app sharing and you can integrate it
 

00:35:24.150 --> 00:35:26.990
app sharing and you can integrate it
with third-party tools so you can even

00:35:26.990 --> 00:35:27.000
with third-party tools so you can even
 

00:35:27.000 --> 00:35:29.270
with third-party tools so you can even
for instance invoke it directly for

00:35:29.270 --> 00:35:29.280
for instance invoke it directly for
 

00:35:29.280 --> 00:35:31.450
for instance invoke it directly for
management studio so this is play

00:35:31.450 --> 00:35:31.460
management studio so this is play
 

00:35:31.460 --> 00:35:40.069
management studio so this is play
internal app sharing thank you very much

00:35:40.069 --> 00:35:40.079
 
 

00:35:40.079 --> 00:35:43.529
 
thank you sir so just in case you've

00:35:43.529 --> 00:35:43.539
thank you sir so just in case you've
 

00:35:43.539 --> 00:35:45.299
thank you sir so just in case you've
missed it using internal app sharing

00:35:45.299 --> 00:35:45.309
missed it using internal app sharing
 

00:35:45.309 --> 00:35:48.210
missed it using internal app sharing
search was able to locally debug dynamic

00:35:48.210 --> 00:35:48.220
search was able to locally debug dynamic
 

00:35:48.220 --> 00:35:51.150
search was able to locally debug dynamic
delivery of an on-demand feature isn't

00:35:51.150 --> 00:35:51.160
delivery of an on-demand feature isn't
 

00:35:51.160 --> 00:35:56.210
delivery of an on-demand feature isn't
that cool we hope that this presentation

00:35:56.210 --> 00:35:56.220
that cool we hope that this presentation
 

00:35:56.220 --> 00:35:58.559
that cool we hope that this presentation
demonstrated our commitment to the a

00:35:58.559 --> 00:35:58.569
demonstrated our commitment to the a
 

00:35:58.569 --> 00:36:01.349
demonstrated our commitment to the a
bundle and that we are doubling down on

00:36:01.349 --> 00:36:01.359
bundle and that we are doubling down on
 

00:36:01.359 --> 00:36:04.190
bundle and that we are doubling down on
a vision of customized dynamic delivery

00:36:04.190 --> 00:36:04.200
a vision of customized dynamic delivery
 

00:36:04.200 --> 00:36:07.319
a vision of customized dynamic delivery
in app updates conditional delivery

00:36:07.319 --> 00:36:07.329
in app updates conditional delivery
 

00:36:07.329 --> 00:36:10.019
in app updates conditional delivery
dynamic delivery and internal sharing

00:36:10.019 --> 00:36:10.029
dynamic delivery and internal sharing
 

00:36:10.029 --> 00:36:12.089
dynamic delivery and internal sharing
our old life with documentation

00:36:12.089 --> 00:36:12.099
our old life with documentation
 

00:36:12.099 --> 00:36:12.960
our old life with documentation
available at

00:36:12.960 --> 00:36:12.970
available at
 

00:36:12.970 --> 00:36:19.920
available at
developer.android.com/design

00:36:19.920 --> 00:36:19.930
 
 

00:36:19.930 --> 00:36:24.719
 
join our early program at the link we'll

00:36:24.719 --> 00:36:24.729
join our early program at the link we'll
 

00:36:24.729 --> 00:36:26.579
join our early program at the link we'll
have more to share later this year so

00:36:26.579 --> 00:36:26.589
have more to share later this year so
 

00:36:26.589 --> 00:36:28.739
have more to share later this year so
come and see us at event like the

00:36:28.739 --> 00:36:28.749
come and see us at event like the
 

00:36:28.749 --> 00:36:30.930
come and see us at event like the
Android developer summit and Google Play

00:36:30.930 --> 00:36:30.940
Android developer summit and Google Play
 

00:36:30.940 --> 00:36:32.920
Android developer summit and Google Play
time thank you

00:36:32.920 --> 00:36:32.930
time thank you
 

00:36:32.930 --> 00:36:54.309
time thank you
[Music]

