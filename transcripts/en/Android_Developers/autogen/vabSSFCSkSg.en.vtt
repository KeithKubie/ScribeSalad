WEBVTT
Kind: captions
Language: en

00:00:07.700 --> 00:00:10.430
 
hi my name is Daniel shamsky I'm an

00:00:10.430 --> 00:00:10.440
hi my name is Daniel shamsky I'm an
 

00:00:10.440 --> 00:00:11.570
hi my name is Daniel shamsky I'm an
intern here on the Android team at

00:00:11.570 --> 00:00:11.580
intern here on the Android team at
 

00:00:11.580 --> 00:00:13.070
intern here on the Android team at
Google and today I'll be talking about

00:00:13.070 --> 00:00:13.080
Google and today I'll be talking about
 

00:00:13.080 --> 00:00:15.620
Google and today I'll be talking about
some folding animations it's a falling

00:00:15.620 --> 00:00:15.630
some folding animations it's a falling
 

00:00:15.630 --> 00:00:16.820
some folding animations it's a falling
animation kind of like an accordion

00:00:16.820 --> 00:00:16.830
animation kind of like an accordion
 

00:00:16.830 --> 00:00:18.740
animation kind of like an accordion
except you can specify the number of

00:00:18.740 --> 00:00:18.750
except you can specify the number of
 

00:00:18.750 --> 00:00:21.140
except you can specify the number of
folds the orientation as well as the

00:00:21.140 --> 00:00:21.150
folds the orientation as well as the
 

00:00:21.150 --> 00:00:22.580
folds the orientation as well as the
anchor point along which the fall is

00:00:22.580 --> 00:00:22.590
anchor point along which the fall is
 

00:00:22.590 --> 00:00:25.519
anchor point along which the fall is
going to take place so now while you'll

00:00:25.519 --> 00:00:25.529
going to take place so now while you'll
 

00:00:25.529 --> 00:00:27.170
going to take place so now while you'll
be able to fold any image as you'll see

00:00:27.170 --> 00:00:27.180
be able to fold any image as you'll see
 

00:00:27.180 --> 00:00:29.120
be able to fold any image as you'll see
in a demo very soon and the trick behind

00:00:29.120 --> 00:00:29.130
in a demo very soon and the trick behind
 

00:00:29.130 --> 00:00:32.089
in a demo very soon and the trick behind
doing this is noting that given some

00:00:32.089 --> 00:00:32.099
doing this is noting that given some
 

00:00:32.099 --> 00:00:33.770
doing this is noting that given some
number of folds you can split an image

00:00:33.770 --> 00:00:33.780
number of folds you can split an image
 

00:00:33.780 --> 00:00:35.630
number of folds you can split an image
into several different segments each of

00:00:35.630 --> 00:00:35.640
into several different segments each of
 

00:00:35.640 --> 00:00:37.100
into several different segments each of
this segment is a rectangle they can

00:00:37.100 --> 00:00:37.110
this segment is a rectangle they can
 

00:00:37.110 --> 00:00:38.900
this segment is a rectangle they can
then be transformed in various ways

00:00:38.900 --> 00:00:38.910
then be transformed in various ways
 

00:00:38.910 --> 00:00:41.750
then be transformed in various ways
using matrix transformations and then in

00:00:41.750 --> 00:00:41.760
using matrix transformations and then in
 

00:00:41.760 --> 00:00:43.819
using matrix transformations and then in
order to make the default even more

00:00:43.819 --> 00:00:43.829
order to make the default even more
 

00:00:43.829 --> 00:00:46.400
order to make the default even more
realistic what I'm going to do is use

00:00:46.400 --> 00:00:46.410
realistic what I'm going to do is use
 

00:00:46.410 --> 00:00:49.040
realistic what I'm going to do is use
gradients along with a shadow like

00:00:49.040 --> 00:00:49.050
gradients along with a shadow like
 

00:00:49.050 --> 00:00:51.740
gradients along with a shadow like
effect on alternating folds to actually

00:00:51.740 --> 00:00:51.750
effect on alternating folds to actually
 

00:00:51.750 --> 00:00:54.439
effect on alternating folds to actually
get that real folding like effect in

00:00:54.439 --> 00:00:54.449
get that real folding like effect in
 

00:00:54.449 --> 00:00:56.180
get that real folding like effect in
this in this demo there's going to be

00:00:56.180 --> 00:00:56.190
this in this demo there's going to be
 

00:00:56.190 --> 00:00:57.770
this in this demo there's going to be
it's going to know that there's this

00:00:57.770 --> 00:00:57.780
it's going to know that there's this
 

00:00:57.780 --> 00:00:59.240
it's going to know that there's this
fold factor that I'm going to be using

00:00:59.240 --> 00:00:59.250
fold factor that I'm going to be using
 

00:00:59.250 --> 00:01:01.580
fold factor that I'm going to be using
that very saline 0 &amp; 1 and what's going

00:01:01.580 --> 00:01:01.590
that very saline 0 &amp; 1 and what's going
 

00:01:01.590 --> 00:01:02.810
that very saline 0 &amp; 1 and what's going
to happen when something has a fourth

00:01:02.810 --> 00:01:02.820
to happen when something has a fourth
 

00:01:02.820 --> 00:01:04.460
to happen when something has a fourth
factor of 0 and we said it's completely

00:01:04.460 --> 00:01:04.470
factor of 0 and we said it's completely
 

00:01:04.470 --> 00:01:05.030
factor of 0 and we said it's completely
unfolded

00:01:05.030 --> 00:01:05.040
unfolded
 

00:01:05.040 --> 00:01:07.730
unfolded
whereas when something is a fold factor

00:01:07.730 --> 00:01:07.740
whereas when something is a fold factor
 

00:01:07.740 --> 00:01:09.230
whereas when something is a fold factor
of 1 it means that it's completely

00:01:09.230 --> 00:01:09.240
of 1 it means that it's completely
 

00:01:09.240 --> 00:01:10.640
of 1 it means that it's completely
folded to the point where you cannot see

00:01:10.640 --> 00:01:10.650
folded to the point where you cannot see
 

00:01:10.650 --> 00:01:13.340
folded to the point where you cannot see
it anymore so that being said let's jump

00:01:13.340 --> 00:01:13.350
it anymore so that being said let's jump
 

00:01:13.350 --> 00:01:16.690
it anymore so that being said let's jump
in strains in the demo so here we have

00:01:16.690 --> 00:01:16.700
in strains in the demo so here we have
 

00:01:16.700 --> 00:01:20.840
in strains in the demo so here we have
just an image and I'm going to start

00:01:20.840 --> 00:01:20.850
just an image and I'm going to start
 

00:01:20.850 --> 00:01:22.460
just an image and I'm going to start
folding it and as I'm moving my finger

00:01:22.460 --> 00:01:22.470
folding it and as I'm moving my finger
 

00:01:22.470 --> 00:01:24.410
folding it and as I'm moving my finger
you can see that the image gets folded

00:01:24.410 --> 00:01:24.420
you can see that the image gets folded
 

00:01:24.420 --> 00:01:27.260
you can see that the image gets folded
and then it gets unfolded this is for

00:01:27.260 --> 00:01:27.270
and then it gets unfolded this is for
 

00:01:27.270 --> 00:01:29.120
and then it gets unfolded this is for
folds you can change the anchor point

00:01:29.120 --> 00:01:29.130
folds you can change the anchor point
 

00:01:29.130 --> 00:01:30.950
folds you can change the anchor point
where it's happening and once again the

00:01:30.950 --> 00:01:30.960
where it's happening and once again the
 

00:01:30.960 --> 00:01:33.679
where it's happening and once again the
same thing applies here I can change the

00:01:33.679 --> 00:01:33.689
same thing applies here I can change the
 

00:01:33.689 --> 00:01:35.120
same thing applies here I can change the
number of folds to eight if I want to

00:01:35.120 --> 00:01:35.130
number of folds to eight if I want to
 

00:01:35.130 --> 00:01:37.700
number of folds to eight if I want to
and the other thing you're noticing this

00:01:37.700 --> 00:01:37.710
and the other thing you're noticing this
 

00:01:37.710 --> 00:01:39.380
and the other thing you're noticing this
kind this kind of Sippy effect as I'm

00:01:39.380 --> 00:01:39.390
kind this kind of Sippy effect as I'm
 

00:01:39.390 --> 00:01:41.899
kind this kind of Sippy effect as I'm
animating and I can turn that off it's a

00:01:41.899 --> 00:01:41.909
animating and I can turn that off it's a
 

00:01:41.909 --> 00:01:44.330
animating and I can turn that off it's a
cool feature I thought would be would

00:01:44.330 --> 00:01:44.340
cool feature I thought would be would
 

00:01:44.340 --> 00:01:45.920
cool feature I thought would be would
add a lot to this which I'll show you

00:01:45.920 --> 00:01:45.930
add a lot to this which I'll show you
 

00:01:45.930 --> 00:01:48.710
add a lot to this which I'll show you
how to implement a second and the other

00:01:48.710 --> 00:01:48.720
how to implement a second and the other
 

00:01:48.720 --> 00:01:52.039
how to implement a second and the other
thing about this is that you can even

00:01:52.039 --> 00:01:52.049
thing about this is that you can even
 

00:01:52.049 --> 00:01:53.840
thing about this is that you can even
fold not just add static image but also

00:01:53.840 --> 00:01:53.850
fold not just add static image but also
 

00:01:53.850 --> 00:01:55.760
fold not just add static image but also
a live camera feed if you something like

00:01:55.760 --> 00:01:55.770
a live camera feed if you something like
 

00:01:55.770 --> 00:01:56.560
a live camera feed if you something like
a texture

00:01:56.560 --> 00:01:56.570
a texture
 

00:01:56.570 --> 00:02:01.730
a texture
so here we have our cab camera camera

00:02:01.730 --> 00:02:01.740
so here we have our cab camera camera
 

00:02:01.740 --> 00:02:05.390
so here we have our cab camera camera
crew and folding and unfolding it so it

00:02:05.390 --> 00:02:05.400
crew and folding and unfolding it so it
 

00:02:05.400 --> 00:02:07.010
crew and folding and unfolding it so it
is a live image that is being folded in

00:02:07.010 --> 00:02:07.020
is a live image that is being folded in
 

00:02:07.020 --> 00:02:12.950
is a live image that is being folded in
Eiffel and unfolded okay so that being

00:02:12.950 --> 00:02:12.960
Eiffel and unfolded okay so that being
 

00:02:12.960 --> 00:02:14.480
Eiffel and unfolded okay so that being
said let's jump in straight into the

00:02:14.480 --> 00:02:14.490
said let's jump in straight into the
 

00:02:14.490 --> 00:02:17.270
said let's jump in straight into the
code and the way this works is full

00:02:17.270 --> 00:02:17.280
code and the way this works is full
 

00:02:17.280 --> 00:02:19.790
code and the way this works is full
folding layout extensive view group so

00:02:19.790 --> 00:02:19.800
folding layout extensive view group so
 

00:02:19.800 --> 00:02:22.010
folding layout extensive view group so
this is very generalized except it's set

00:02:22.010 --> 00:02:22.020
this is very generalized except it's set
 

00:02:22.020 --> 00:02:23.900
this is very generalized except it's set
up in such a way such that my layered

00:02:23.900 --> 00:02:23.910
up in such a way such that my layered
 

00:02:23.910 --> 00:02:26.600
up in such a way such that my layered
can only ever have at most one child but

00:02:26.600 --> 00:02:26.610
can only ever have at most one child but
 

00:02:26.610 --> 00:02:28.460
can only ever have at most one child but
then again you can this one child can be

00:02:28.460 --> 00:02:28.470
then again you can this one child can be
 

00:02:28.470 --> 00:02:29.930
then again you can this one child can be
a layer that you can populate any way

00:02:29.930 --> 00:02:29.940
a layer that you can populate any way
 

00:02:29.940 --> 00:02:32.330
a layer that you can populate any way
that you want and then fold even a user

00:02:32.330 --> 00:02:32.340
that you want and then fold even a user
 

00:02:32.340 --> 00:02:35.690
that you want and then fold even a user
interface with buttons and text boxes if

00:02:35.690 --> 00:02:35.700
interface with buttons and text boxes if
 

00:02:35.700 --> 00:02:39.380
interface with buttons and text boxes if
you'd like so scrolling down here I'm

00:02:39.380 --> 00:02:39.390
you'd like so scrolling down here I'm
 

00:02:39.390 --> 00:02:41.120
you'd like so scrolling down here I'm
doing a lot of checks so if you're

00:02:41.120 --> 00:02:41.130
doing a lot of checks so if you're
 

00:02:41.130 --> 00:02:43.010
doing a lot of checks so if you're
trying to add more than one view what's

00:02:43.010 --> 00:02:43.020
trying to add more than one view what's
 

00:02:43.020 --> 00:02:44.030
trying to add more than one view what's
going to happen is that I'm actually

00:02:44.030 --> 00:02:44.040
going to happen is that I'm actually
 

00:02:44.040 --> 00:02:46.970
going to happen is that I'm actually
going to throw an exception because in

00:02:46.970 --> 00:02:46.980
going to throw an exception because in
 

00:02:46.980 --> 00:02:49.430
going to throw an exception because in
this context that's not something that's

00:02:49.430 --> 00:02:49.440
this context that's not something that's
 

00:02:49.440 --> 00:02:53.210
this context that's not something that's
being supported and once we got get

00:02:53.210 --> 00:02:53.220
being supported and once we got get
 

00:02:53.220 --> 00:02:54.140
being supported and once we got get
through that then there's all the

00:02:54.140 --> 00:02:54.150
through that then there's all the
 

00:02:54.150 --> 00:02:55.760
through that then there's all the
setters so like I mentioned before you

00:02:55.760 --> 00:02:55.770
setters so like I mentioned before you
 

00:02:55.770 --> 00:02:57.230
setters so like I mentioned before you
can set number fold you can set the

00:02:57.230 --> 00:02:57.240
can set number fold you can set the
 

00:02:57.240 --> 00:03:01.970
can set number fold you can set the
orientation and and you can also set the

00:03:01.970 --> 00:03:01.980
orientation and and you can also set the
 

00:03:01.980 --> 00:03:04.160
orientation and and you can also set the
number for its orientation and the

00:03:04.160 --> 00:03:04.170
number for its orientation and the
 

00:03:04.170 --> 00:03:06.140
number for its orientation and the
anchor point along which it's being

00:03:06.140 --> 00:03:06.150
anchor point along which it's being
 

00:03:06.150 --> 00:03:09.170
anchor point along which it's being
folded so I also did have not shown that

00:03:09.170 --> 00:03:09.180
folded so I also did have not shown that
 

00:03:09.180 --> 00:03:11.150
folded so I also did have not shown that
orientation change yet but the setting

00:03:11.150 --> 00:03:11.160
orientation change yet but the setting
 

00:03:11.160 --> 00:03:14.240
orientation change yet but the setting
applies in when you're when you're in

00:03:14.240 --> 00:03:14.250
applies in when you're when you're in
 

00:03:14.250 --> 00:03:15.680
applies in when you're when you're in
the vertical as opposed to horizontal

00:03:15.680 --> 00:03:15.690
the vertical as opposed to horizontal
 

00:03:15.690 --> 00:03:18.650
the vertical as opposed to horizontal
orientation so then here you can set the

00:03:18.650 --> 00:03:18.660
orientation so then here you can set the
 

00:03:18.660 --> 00:03:20.900
orientation so then here you can set the
fold factor which is again about 1801

00:03:20.900 --> 00:03:20.910
fold factor which is again about 1801
 

00:03:20.910 --> 00:03:23.090
fold factor which is again about 1801
and every single time you set the fold

00:03:23.090 --> 00:03:23.100
and every single time you set the fold
 

00:03:23.100 --> 00:03:25.370
and every single time you set the fold
factor you need to calculate matrices

00:03:25.370 --> 00:03:25.380
factor you need to calculate matrices
 

00:03:25.380 --> 00:03:27.949
factor you need to calculate matrices
and invalidate so invalidate will draw

00:03:27.949 --> 00:03:27.959
and invalidate so invalidate will draw
 

00:03:27.959 --> 00:03:30.680
and invalidate so invalidate will draw
the new form then you at the folder view

00:03:30.680 --> 00:03:30.690
the new form then you at the folder view
 

00:03:30.690 --> 00:03:33.290
the new form then you at the folder view
onto your canvas in its new folded State

00:03:33.290 --> 00:03:33.300
onto your canvas in its new folded State
 

00:03:33.300 --> 00:03:34.850
onto your canvas in its new folded State
and calculate matrices actually

00:03:34.850 --> 00:03:34.860
and calculate matrices actually
 

00:03:34.860 --> 00:03:36.620
and calculate matrices actually
calculates all the transformation

00:03:36.620 --> 00:03:36.630
calculates all the transformation
 

00:03:36.630 --> 00:03:38.090
calculates all the transformation
transformation matrices

00:03:38.090 --> 00:03:38.100
transformation matrices
 

00:03:38.100 --> 00:03:40.250
transformation matrices
you need to go from the unfolded image

00:03:40.250 --> 00:03:40.260
you need to go from the unfolded image
 

00:03:40.260 --> 00:03:43.730
you need to go from the unfolded image
to the folder one to some degree for

00:03:43.730 --> 00:03:43.740
to the folder one to some degree for
 

00:03:43.740 --> 00:03:46.190
to the folder one to some degree for
every single every single time some

00:03:46.190 --> 00:03:46.200
every single every single time some
 

00:03:46.200 --> 00:03:48.140
every single every single time some
other parameter gets change we need to

00:03:48.140 --> 00:03:48.150
other parameter gets change we need to
 

00:03:48.150 --> 00:03:49.670
other parameter gets change we need to
call this method called update fold

00:03:49.670 --> 00:03:49.680
call this method called update fold
 

00:03:49.680 --> 00:03:53.480
call this method called update fold
which does all the preparation for

00:03:53.480 --> 00:03:53.490
which does all the preparation for
 

00:03:53.490 --> 00:03:57.470
which does all the preparation for
actually following a new image so in a

00:03:57.470 --> 00:03:57.480
actually following a new image so in a
 

00:03:57.480 --> 00:03:58.940
actually following a new image so in a
big fold we're going to call prepare

00:03:58.940 --> 00:03:58.950
big fold we're going to call prepare
 

00:03:58.950 --> 00:04:01.130
big fold we're going to call prepare
fold and I'll prepare for really does is

00:04:01.130 --> 00:04:01.140
fold and I'll prepare for really does is
 

00:04:01.140 --> 00:04:03.020
fold and I'll prepare for really does is
return all our variables to default

00:04:03.020 --> 00:04:03.030
return all our variables to default
 

00:04:03.030 --> 00:04:05.870
return all our variables to default
because this is now a new image it

00:04:05.870 --> 00:04:05.880
because this is now a new image it
 

00:04:05.880 --> 00:04:07.610
because this is now a new image it
allocates space for all the

00:04:07.610 --> 00:04:07.620
allocates space for all the
 

00:04:07.620 --> 00:04:09.320
allocates space for all the
transformation matrices we need the

00:04:09.320 --> 00:04:09.330
transformation matrices we need the
 

00:04:09.330 --> 00:04:12.830
transformation matrices we need the
paint objects the the gradient objects

00:04:12.830 --> 00:04:12.840
paint objects the the gradient objects
 

00:04:12.840 --> 00:04:13.640
paint objects the the gradient objects
and things like that

00:04:13.640 --> 00:04:13.650
and things like that
 

00:04:13.650 --> 00:04:16.220
and things like that
it sets sets of the green objects that

00:04:16.220 --> 00:04:16.230
it sets sets of the green objects that
 

00:04:16.230 --> 00:04:18.500
it sets sets of the green objects that
we're going to need for later stores all

00:04:18.500 --> 00:04:18.510
we're going to need for later stores all
 

00:04:18.510 --> 00:04:20.780
we're going to need for later stores all
the values you're going to need stores

00:04:20.780 --> 00:04:20.790
the values you're going to need stores
 

00:04:20.790 --> 00:04:22.400
the values you're going to need stores
the original widths and heights of the

00:04:22.400 --> 00:04:22.410
the original widths and heights of the
 

00:04:22.410 --> 00:04:25.430
the original widths and heights of the
images and the most important thing that

00:04:25.430 --> 00:04:25.440
images and the most important thing that
 

00:04:25.440 --> 00:04:29.300
images and the most important thing that
it does is right here we're a determine

00:04:29.300 --> 00:04:29.310
it does is right here we're a determine
 

00:04:29.310 --> 00:04:31.700
it does is right here we're a determine
where it splits the image into

00:04:31.700 --> 00:04:31.710
where it splits the image into
 

00:04:31.710 --> 00:04:34.250
where it splits the image into
rectangles so like I said before in

00:04:34.250 --> 00:04:34.260
rectangles so like I said before in
 

00:04:34.260 --> 00:04:35.570
rectangles so like I said before in
order to fold something what you need to

00:04:35.570 --> 00:04:35.580
order to fold something what you need to
 

00:04:35.580 --> 00:04:38.330
order to fold something what you need to
do is split it into separate segments so

00:04:38.330 --> 00:04:38.340
do is split it into separate segments so
 

00:04:38.340 --> 00:04:39.890
do is split it into separate segments so
you know how each segment to be

00:04:39.890 --> 00:04:39.900
you know how each segment to be
 

00:04:39.900 --> 00:04:41.750
you know how each segment to be
transformed but every single segment is

00:04:41.750 --> 00:04:41.760
transformed but every single segment is
 

00:04:41.760 --> 00:04:44.210
transformed but every single segment is
just a simple rectangle so I'm going to

00:04:44.210 --> 00:04:44.220
just a simple rectangle so I'm going to
 

00:04:44.220 --> 00:04:46.370
just a simple rectangle so I'm going to
store all these rectangles in an array

00:04:46.370 --> 00:04:46.380
store all these rectangles in an array
 

00:04:46.380 --> 00:04:48.190
store all these rectangles in an array
and I'm going to be referencing these

00:04:48.190 --> 00:04:48.200
and I'm going to be referencing these
 

00:04:48.200 --> 00:04:50.660
and I'm going to be referencing these
rectangles as the source for every

00:04:50.660 --> 00:04:50.670
rectangles as the source for every
 

00:04:50.670 --> 00:04:52.600
rectangles as the source for every
single transformation that I'll be doing

00:04:52.600 --> 00:04:52.610
single transformation that I'll be doing
 

00:04:52.610 --> 00:04:56.690
single transformation that I'll be doing
so that's under a beautiful then in

00:04:56.690 --> 00:04:56.700
so that's under a beautiful then in
 

00:04:56.700 --> 00:04:58.100
so that's under a beautiful then in
calculated matrices this is where we

00:04:58.100 --> 00:04:58.110
calculated matrices this is where we
 

00:04:58.110 --> 00:04:59.420
calculated matrices this is where we
have to calculate the transformation

00:04:59.420 --> 00:04:59.430
have to calculate the transformation
 

00:04:59.430 --> 00:05:01.250
have to calculate the transformation
matrix I'm not going to go through the

00:05:01.250 --> 00:05:01.260
matrix I'm not going to go through the
 

00:05:01.260 --> 00:05:03.350
matrix I'm not going to go through the
math of how I did everything but the

00:05:03.350 --> 00:05:03.360
math of how I did everything but the
 

00:05:03.360 --> 00:05:06.080
math of how I did everything but the
main thing to note here is that you

00:05:06.080 --> 00:05:06.090
main thing to note here is that you
 

00:05:06.090 --> 00:05:07.370
main thing to note here is that you
gotta you need to make sure that you

00:05:07.370 --> 00:05:07.380
gotta you need to make sure that you
 

00:05:07.380 --> 00:05:09.830
gotta you need to make sure that you
reset your majors your transformation

00:05:09.830 --> 00:05:09.840
reset your majors your transformation
 

00:05:09.840 --> 00:05:12.230
reset your majors your transformation
matrix on every single lot every single

00:05:12.230 --> 00:05:12.240
matrix on every single lot every single
 

00:05:12.240 --> 00:05:14.510
matrix on every single lot every single
time the fold factor gets change and the

00:05:14.510 --> 00:05:14.520
time the fold factor gets change and the
 

00:05:14.520 --> 00:05:17.270
time the fold factor gets change and the
other thing to note is that the amount

00:05:17.270 --> 00:05:17.280
other thing to note is that the amount
 

00:05:17.280 --> 00:05:19.250
other thing to note is that the amount
that a fold should be folded by is

00:05:19.250 --> 00:05:19.260
that a fold should be folded by is
 

00:05:19.260 --> 00:05:22.030
that a fold should be folded by is
inversely proportional to the distance

00:05:22.030 --> 00:05:22.040
inversely proportional to the distance
 

00:05:22.040 --> 00:05:24.170
inversely proportional to the distance
to the distance from which it is away

00:05:24.170 --> 00:05:24.180
to the distance from which it is away
 

00:05:24.180 --> 00:05:24.380
to the distance from which it is away
for

00:05:24.380 --> 00:05:24.390
for
 

00:05:24.390 --> 00:05:26.930
for
you so for example when you start

00:05:26.930 --> 00:05:26.940
you so for example when you start
 

00:05:26.940 --> 00:05:29.330
you so for example when you start
folding it you'll see that it very that

00:05:29.330 --> 00:05:29.340
folding it you'll see that it very that
 

00:05:29.340 --> 00:05:31.460
folding it you'll see that it very that
the edges very quickly start going into

00:05:31.460 --> 00:05:31.470
the edges very quickly start going into
 

00:05:31.470 --> 00:05:32.030
the edges very quickly start going into
the page

00:05:32.030 --> 00:05:32.040
the page
 

00:05:32.040 --> 00:05:33.920
the page
whereas when it's already really folded

00:05:33.920 --> 00:05:33.930
whereas when it's already really folded
 

00:05:33.930 --> 00:05:35.810
whereas when it's already really folded
the edges don't go into the page as much

00:05:35.810 --> 00:05:35.820
the edges don't go into the page as much
 

00:05:35.820 --> 00:05:38.690
the edges don't go into the page as much
a simple inverse relation inversely

00:05:38.690 --> 00:05:38.700
a simple inverse relation inversely
 

00:05:38.700 --> 00:05:41.870
a simple inverse relation inversely
relational put forth inverse inverse

00:05:41.870 --> 00:05:41.880
relational put forth inverse inverse
 

00:05:41.880 --> 00:05:44.570
relational put forth inverse inverse
relation achieves this and that's it

00:05:44.570 --> 00:05:44.580
relation achieves this and that's it
 

00:05:44.580 --> 00:05:48.440
relation achieves this and that's it
again fold so back in calc in matrices

00:05:48.440 --> 00:05:48.450
again fold so back in calc in matrices
 

00:05:48.450 --> 00:05:50.660
again fold so back in calc in matrices
there's a listener that I added on n

00:05:50.660 --> 00:05:50.670
there's a listener that I added on n
 

00:05:50.670 --> 00:05:52.730
there's a listener that I added on n
fold and I'll start fold so what this

00:05:52.730 --> 00:05:52.740
fold and I'll start fold so what this
 

00:05:52.740 --> 00:05:56.170
fold and I'll start fold so what this
gives you is so what this gives you is

00:05:56.170 --> 00:05:56.180
gives you is so what this gives you is
 

00:05:56.180 --> 00:05:58.250
gives you is so what this gives you is
just kind of a listener you can listen

00:05:58.250 --> 00:05:58.260
just kind of a listener you can listen
 

00:05:58.260 --> 00:06:01.550
just kind of a listener you can listen
to when I fold enter starts and throwing

00:06:01.550 --> 00:06:01.560
to when I fold enter starts and throwing
 

00:06:01.560 --> 00:06:06.050
to when I fold enter starts and throwing
down past all the math what we're doing

00:06:06.050 --> 00:06:06.060
down past all the math what we're doing
 

00:06:06.060 --> 00:06:08.540
down past all the math what we're doing
here is good we're going to be

00:06:08.540 --> 00:06:08.550
here is good we're going to be
 

00:06:08.550 --> 00:06:10.520
here is good we're going to be
transforming a set of eight points to

00:06:10.520 --> 00:06:10.530
transforming a set of eight points to
 

00:06:10.530 --> 00:06:12.410
transforming a set of eight points to
another set of eight points since every

00:06:12.410 --> 00:06:12.420
another set of eight points since every
 

00:06:12.420 --> 00:06:15.620
another set of eight points since every
single segment is a rectangle every

00:06:15.620 --> 00:06:15.630
single segment is a rectangle every
 

00:06:15.630 --> 00:06:18.680
single segment is a rectangle every
single every single vertex has to two

00:06:18.680 --> 00:06:18.690
single every single vertex has to two
 

00:06:18.690 --> 00:06:22.130
single every single vertex has to two
points next my y coordinate so given the

00:06:22.130 --> 00:06:22.140
points next my y coordinate so given the
 

00:06:22.140 --> 00:06:23.480
points next my y coordinate so given the
eight points from the source and the

00:06:23.480 --> 00:06:23.490
eight points from the source and the
 

00:06:23.490 --> 00:06:25.280
eight points from the source and the
eight points in the destination we'll be

00:06:25.280 --> 00:06:25.290
eight points in the destination we'll be
 

00:06:25.290 --> 00:06:26.540
eight points in the destination we'll be
able to shoot transformation that we

00:06:26.540 --> 00:06:26.550
able to shoot transformation that we
 

00:06:26.550 --> 00:06:32.260
able to shoot transformation that we
need so how we do that is using make a

00:06:32.260 --> 00:06:32.270
need so how we do that is using make a
 

00:06:32.270 --> 00:06:35.630
need so how we do that is using make a
function available in matrix in Andrews

00:06:35.630 --> 00:06:35.640
function available in matrix in Andrews
 

00:06:35.640 --> 00:06:38.900
function available in matrix in Andrews
matrix API called poly to Polly said

00:06:38.900 --> 00:06:38.910
matrix API called poly to Polly said
 

00:06:38.910 --> 00:06:41.000
matrix API called poly to Polly said
Polly to Polly and what this does is

00:06:41.000 --> 00:06:41.010
Polly to Polly and what this does is
 

00:06:41.010 --> 00:06:43.370
Polly to Polly and what this does is
take an array of source points and array

00:06:43.370 --> 00:06:43.380
take an array of source points and array
 

00:06:43.380 --> 00:06:45.440
take an array of source points and array
of destination points and the number of

00:06:45.440 --> 00:06:45.450
of destination points and the number of
 

00:06:45.450 --> 00:06:46.730
of destination points and the number of
points you're going to use so in this

00:06:46.730 --> 00:06:46.740
points you're going to use so in this
 

00:06:46.740 --> 00:06:49.160
points you're going to use so in this
case that will be four and this is

00:06:49.160 --> 00:06:49.170
case that will be four and this is
 

00:06:49.170 --> 00:06:52.220
case that will be four and this is
limited to four most and so what does

00:06:52.220 --> 00:06:52.230
limited to four most and so what does
 

00:06:52.230 --> 00:06:54.410
limited to four most and so what does
that what all that's going to do is give

00:06:54.410 --> 00:06:54.420
that what all that's going to do is give
 

00:06:54.420 --> 00:06:57.370
that what all that's going to do is give
us a matrix that transforms that

00:06:57.370 --> 00:06:57.380
us a matrix that transforms that
 

00:06:57.380 --> 00:07:00.050
us a matrix that transforms that
original rectangle to this new rectangle

00:07:00.050 --> 00:07:00.060
original rectangle to this new rectangle
 

00:07:00.060 --> 00:07:02.320
original rectangle to this new rectangle
and in order to do the animations the

00:07:02.320 --> 00:07:02.330
and in order to do the animations the
 

00:07:02.330 --> 00:07:05.960
and in order to do the animations the
graphical effect here the destination

00:07:05.960 --> 00:07:05.970
graphical effect here the destination
 

00:07:05.970 --> 00:07:08.360
graphical effect here the destination
source has its saw edges kind of curved

00:07:08.360 --> 00:07:08.370
source has its saw edges kind of curved
 

00:07:08.370 --> 00:07:09.340
source has its saw edges kind of curved
in as opposed

00:07:09.340 --> 00:07:09.350
in as opposed
 

00:07:09.350 --> 00:07:11.620
in as opposed
rectangle which is where the all the

00:07:11.620 --> 00:07:11.630
rectangle which is where the all the
 

00:07:11.630 --> 00:07:13.450
rectangle which is where the all the
sides are parallel and perpendicular to

00:07:13.450 --> 00:07:13.460
sides are parallel and perpendicular to
 

00:07:13.460 --> 00:07:15.490
sides are parallel and perpendicular to
each other and scrolling down

00:07:15.490 --> 00:07:15.500
each other and scrolling down
 

00:07:15.500 --> 00:07:17.650
each other and scrolling down
furthermore the other thing we need to

00:07:17.650 --> 00:07:17.660
furthermore the other thing we need to
 

00:07:17.660 --> 00:07:22.120
furthermore the other thing we need to
do is a scale or a gradient so as you if

00:07:22.120 --> 00:07:22.130
do is a scale or a gradient so as you if
 

00:07:22.130 --> 00:07:24.850
do is a scale or a gradient so as you if
you saw in the fold every other fold has

00:07:24.850 --> 00:07:24.860
you saw in the fold every other fold has
 

00:07:24.860 --> 00:07:27.880
you saw in the fold every other fold has
a very solid kind of overlaying black

00:07:27.880 --> 00:07:27.890
a very solid kind of overlaying black
 

00:07:27.890 --> 00:07:30.040
a very solid kind of overlaying black
shadow over it but then every fold in

00:07:30.040 --> 00:07:30.050
shadow over it but then every fold in
 

00:07:30.050 --> 00:07:31.840
shadow over it but then every fold in
between that just has a small gradient

00:07:31.840 --> 00:07:31.850
between that just has a small gradient
 

00:07:31.850 --> 00:07:33.550
between that just has a small gradient
going across it to achieve that more

00:07:33.550 --> 00:07:33.560
going across it to achieve that more
 

00:07:33.560 --> 00:07:36.910
going across it to achieve that more
realistic effect so the Alpha value as

00:07:36.910 --> 00:07:36.920
realistic effect so the Alpha value as
 

00:07:36.920 --> 00:07:38.890
realistic effect so the Alpha value as
well as the size and scale for all these

00:07:38.890 --> 00:07:38.900
well as the size and scale for all these
 

00:07:38.900 --> 00:07:41.920
well as the size and scale for all these
are all calculated here then in this

00:07:41.920 --> 00:07:41.930
are all calculated here then in this
 

00:07:41.930 --> 00:07:43.090
are all calculated here then in this
patch draw there's a couple

00:07:43.090 --> 00:07:43.100
patch draw there's a couple
 

00:07:43.100 --> 00:07:45.790
patch draw there's a couple
optimizations that we have for example

00:07:45.790 --> 00:07:45.800
optimizations that we have for example
 

00:07:45.800 --> 00:07:47.170
optimizations that we have for example
if the fold factor is equal to zero and

00:07:47.170 --> 00:07:47.180
if the fold factor is equal to zero and
 

00:07:47.180 --> 00:07:49.090
if the fold factor is equal to zero and
it's completely unfolded no folding

00:07:49.090 --> 00:07:49.100
it's completely unfolded no folding
 

00:07:49.100 --> 00:07:50.740
it's completely unfolded no folding
needs to happen switch draw the original

00:07:50.740 --> 00:07:50.750
needs to happen switch draw the original
 

00:07:50.750 --> 00:07:54.880
needs to happen switch draw the original
image and call super okay in some other

00:07:54.880 --> 00:07:54.890
image and call super okay in some other
 

00:07:54.890 --> 00:07:56.710
image and call super okay in some other
cases like if it's if it's equal to one

00:07:56.710 --> 00:07:56.720
cases like if it's if it's equal to one
 

00:07:56.720 --> 00:07:59.020
cases like if it's if it's equal to one
then we don't want to draw anything

00:07:59.020 --> 00:07:59.030
then we don't want to draw anything
 

00:07:59.030 --> 00:08:01.900
then we don't want to draw anything
and then what we're going to do is loop

00:08:01.900 --> 00:08:01.910
and then what we're going to do is loop
 

00:08:01.910 --> 00:08:05.590
and then what we're going to do is loop
through all of our folds and and just

00:08:05.590 --> 00:08:05.600
through all of our folds and and just
 

00:08:05.600 --> 00:08:07.210
through all of our folds and and just
start drawing each and every fold onto

00:08:07.210 --> 00:08:07.220
start drawing each and every fold onto
 

00:08:07.220 --> 00:08:10.770
start drawing each and every fold onto
our canvas separately so right here

00:08:10.770 --> 00:08:10.780
our canvas separately so right here
 

00:08:10.780 --> 00:08:13.120
our canvas separately so right here
first what we do is concatenate our

00:08:13.120 --> 00:08:13.130
first what we do is concatenate our
 

00:08:13.130 --> 00:08:15.670
first what we do is concatenate our
canvas first we need to savors the state

00:08:15.670 --> 00:08:15.680
canvas first we need to savors the state
 

00:08:15.680 --> 00:08:17.440
canvas first we need to savors the state
of our occur in canvas then we

00:08:17.440 --> 00:08:17.450
of our occur in canvas then we
 

00:08:17.450 --> 00:08:19.390
of our occur in canvas then we
concatenate our mitt our tennis with

00:08:19.390 --> 00:08:19.400
concatenate our mitt our tennis with
 

00:08:19.400 --> 00:08:22.120
concatenate our mitt our tennis with
with the transformation matrix we need

00:08:22.120 --> 00:08:22.130
with the transformation matrix we need
 

00:08:22.130 --> 00:08:23.860
with the transformation matrix we need
to click errect because all we really

00:08:23.860 --> 00:08:23.870
to click errect because all we really
 

00:08:23.870 --> 00:08:25.510
to click errect because all we really
want just phone every single time is one

00:08:25.510 --> 00:08:25.520
want just phone every single time is one
 

00:08:25.520 --> 00:08:28.270
want just phone every single time is one
segment at a time we so we clip that

00:08:28.270 --> 00:08:28.280
segment at a time we so we clip that
 

00:08:28.280 --> 00:08:30.640
segment at a time we so we clip that
rectangle we transit ER appropriately so

00:08:30.640 --> 00:08:30.650
rectangle we transit ER appropriately so
 

00:08:30.650 --> 00:08:32.230
rectangle we transit ER appropriately so
that is located in the beginning of the

00:08:32.230 --> 00:08:32.240
that is located in the beginning of the
 

00:08:32.240 --> 00:08:34.209
that is located in the beginning of the
in the beginning of the view because our

00:08:34.209 --> 00:08:34.219
in the beginning of the view because our
 

00:08:34.219 --> 00:08:36.100
in the beginning of the view because our
transformation matrix if you look at the

00:08:36.100 --> 00:08:36.110
transformation matrix if you look at the
 

00:08:36.110 --> 00:08:37.990
transformation matrix if you look at the
math later takes things from the very

00:08:37.990 --> 00:08:38.000
math later takes things from the very
 

00:08:38.000 --> 00:08:39.580
math later takes things from the very
far left and then puts in the correct

00:08:39.580 --> 00:08:39.590
far left and then puts in the correct
 

00:08:39.590 --> 00:08:42.339
far left and then puts in the correct
position on the screen we call super

00:08:42.339 --> 00:08:42.349
position on the screen we call super
 

00:08:42.349 --> 00:08:44.380
position on the screen we call super
dispatch drop and since the canvas is

00:08:44.380 --> 00:08:44.390
dispatch drop and since the canvas is
 

00:08:44.390 --> 00:08:46.150
dispatch drop and since the canvas is
clipped what this is going to do is only

00:08:46.150 --> 00:08:46.160
clipped what this is going to do is only
 

00:08:46.160 --> 00:08:48.670
clipped what this is going to do is only
draw that clip section of the canvas

00:08:48.670 --> 00:08:48.680
draw that clip section of the canvas
 

00:08:48.680 --> 00:08:53.200
draw that clip section of the canvas
that we have a we have specified then we

00:08:53.200 --> 00:08:53.210
that we have a we have specified then we
 

00:08:53.210 --> 00:08:56.110
that we have a we have specified then we
translate our canvas back

00:08:56.110 --> 00:08:56.120
translate our canvas back
 

00:08:56.120 --> 00:08:58.420
translate our canvas back
then using the same matrix information

00:08:58.420 --> 00:08:58.430
then using the same matrix information
 

00:08:58.430 --> 00:09:00.850
then using the same matrix information
will also draw the solid shadow as well

00:09:00.850 --> 00:09:00.860
will also draw the solid shadow as well
 

00:09:00.860 --> 00:09:03.070
will also draw the solid shadow as well
as the gradient shadow on top of the

00:09:03.070 --> 00:09:03.080
as the gradient shadow on top of the
 

00:09:03.080 --> 00:09:07.180
as the gradient shadow on top of the
folds that we've already drawn above so

00:09:07.180 --> 00:09:07.190
folds that we've already drawn above so
 

00:09:07.190 --> 00:09:10.870
folds that we've already drawn above so
one of the one of the biggest problems

00:09:10.870 --> 00:09:10.880
one of the one of the biggest problems
 

00:09:10.880 --> 00:09:12.579
one of the one of the biggest problems
that we actually encounter while working

00:09:12.579 --> 00:09:12.589
that we actually encounter while working
 

00:09:12.589 --> 00:09:15.340
that we actually encounter while working
this is that in Android 4.3 a new bug

00:09:15.340 --> 00:09:15.350
this is that in Android 4.3 a new bug
 

00:09:15.350 --> 00:09:18.280
this is that in Android 4.3 a new bug
was introduced where if you call super

00:09:18.280 --> 00:09:18.290
was introduced where if you call super
 

00:09:18.290 --> 00:09:21.340
was introduced where if you call super
The Dispatch draw multiple times within

00:09:21.340 --> 00:09:21.350
The Dispatch draw multiple times within
 

00:09:21.350 --> 00:09:24.130
The Dispatch draw multiple times within
one call to this bench drop it won't

00:09:24.130 --> 00:09:24.140
one call to this bench drop it won't
 

00:09:24.140 --> 00:09:26.710
one call to this bench drop it won't
actually it won't actually have the same

00:09:26.710 --> 00:09:26.720
actually it won't actually have the same
 

00:09:26.720 --> 00:09:30.190
actually it won't actually have the same
effect as it does on 4.2 and prior to

00:09:30.190 --> 00:09:30.200
effect as it does on 4.2 and prior to
 

00:09:30.200 --> 00:09:31.990
effect as it does on 4.2 and prior to
that what's going to happen is all the

00:09:31.990 --> 00:09:32.000
that what's going to happen is all the
 

00:09:32.000 --> 00:09:33.910
that what's going to happen is all the
camps transformations are going to be

00:09:33.910 --> 00:09:33.920
camps transformations are going to be
 

00:09:33.920 --> 00:09:35.590
camps transformations are going to be
delayed until the last canvas

00:09:35.590 --> 00:09:35.600
delayed until the last canvas
 

00:09:35.600 --> 00:09:37.870
delayed until the last canvas
transformation and only that last one

00:09:37.870 --> 00:09:37.880
transformation and only that last one
 

00:09:37.880 --> 00:09:39.269
transformation and only that last one
where that will actually take effect

00:09:39.269 --> 00:09:39.279
where that will actually take effect
 

00:09:39.279 --> 00:09:43.510
where that will actually take effect
this is this is a bug which a patch will

00:09:43.510 --> 00:09:43.520
this is this is a bug which a patch will
 

00:09:43.520 --> 00:09:46.630
this is this is a bug which a patch will
be uploaded for in the future but in the

00:09:46.630 --> 00:09:46.640
be uploaded for in the future but in the
 

00:09:46.640 --> 00:09:48.430
be uploaded for in the future but in the
meantime there's a small workaround that

00:09:48.430 --> 00:09:48.440
meantime there's a small workaround that
 

00:09:48.440 --> 00:09:51.250
meantime there's a small workaround that
we found which only works for static

00:09:51.250 --> 00:09:51.260
we found which only works for static
 

00:09:51.260 --> 00:09:53.320
we found which only works for static
images not the LifeCam feed that you saw

00:09:53.320 --> 00:09:53.330
images not the LifeCam feed that you saw
 

00:09:53.330 --> 00:09:56.170
images not the LifeCam feed that you saw
earlier and the way this works is in

00:09:56.170 --> 00:09:56.180
earlier and the way this works is in
 

00:09:56.180 --> 00:09:59.050
earlier and the way this works is in
prepare fold what we're going to do it

00:09:59.050 --> 00:09:59.060
prepare fold what we're going to do it
 

00:09:59.060 --> 00:10:02.949
prepare fold what we're going to do it
first is in prepare fold what we're

00:10:02.949 --> 00:10:02.959
first is in prepare fold what we're
 

00:10:02.959 --> 00:10:05.230
first is in prepare fold what we're
going to do is capture the actual bitmap

00:10:05.230 --> 00:10:05.240
going to do is capture the actual bitmap
 

00:10:05.240 --> 00:10:07.090
going to do is capture the actual bitmap
that we can see so we're just going to

00:10:07.090 --> 00:10:07.100
that we can see so we're just going to
 

00:10:07.100 --> 00:10:09.340
that we can see so we're just going to
take the child and capture that whole

00:10:09.340 --> 00:10:09.350
take the child and capture that whole
 

00:10:09.350 --> 00:10:11.260
take the child and capture that whole
thing in a bitmap the matrix

00:10:11.260 --> 00:10:11.270
thing in a bitmap the matrix
 

00:10:11.270 --> 00:10:12.400
thing in a bitmap the matrix
transformations are going to remain

00:10:12.400 --> 00:10:12.410
transformations are going to remain
 

00:10:12.410 --> 00:10:16.449
transformations are going to remain
completely the same but the only

00:10:16.449 --> 00:10:16.459
completely the same but the only
 

00:10:16.459 --> 00:10:19.540
completely the same but the only
difference is going to be is here is so

00:10:19.540 --> 00:10:19.550
difference is going to be is here is so
 

00:10:19.550 --> 00:10:23.680
difference is going to be is here is so
if it is JDM or - so Android 4.3 instead

00:10:23.680 --> 00:10:23.690
if it is JDM or - so Android 4.3 instead
 

00:10:23.690 --> 00:10:26.710
if it is JDM or - so Android 4.3 instead
of calling super that dispatch draw and

00:10:26.710 --> 00:10:26.720
of calling super that dispatch draw and
 

00:10:26.720 --> 00:10:28.870
of calling super that dispatch draw and
then translating canvas itself all we're

00:10:28.870 --> 00:10:28.880
then translating canvas itself all we're
 

00:10:28.880 --> 00:10:31.090
then translating canvas itself all we're
going to do is take our bitmap specify a

00:10:31.090 --> 00:10:31.100
going to do is take our bitmap specify a
 

00:10:31.100 --> 00:10:33.160
going to do is take our bitmap specify a
source and a destination rectangle

00:10:33.160 --> 00:10:33.170
source and a destination rectangle
 

00:10:33.170 --> 00:10:34.960
source and a destination rectangle
within our bitmap and then use those

00:10:34.960 --> 00:10:34.970
within our bitmap and then use those
 

00:10:34.970 --> 00:10:37.720
within our bitmap and then use those
transformation matrix to draw only that

00:10:37.720 --> 00:10:37.730
transformation matrix to draw only that
 

00:10:37.730 --> 00:10:38.710
transformation matrix to draw only that
segment from the

00:10:38.710 --> 00:10:38.720
segment from the
 

00:10:38.720 --> 00:10:40.090
segment from the
not wanted to straighten where you want

00:10:40.090 --> 00:10:40.100
not wanted to straighten where you want
 

00:10:40.100 --> 00:10:42.069
not wanted to straighten where you want
to so it will have the exact same effect

00:10:42.069 --> 00:10:42.079
to so it will have the exact same effect
 

00:10:42.079 --> 00:10:45.100
to so it will have the exact same effect
on static images but it will not have

00:10:45.100 --> 00:10:45.110
on static images but it will not have
 

00:10:45.110 --> 00:10:47.499
on static images but it will not have
the same effect it's actually it will

00:10:47.499 --> 00:10:47.509
the same effect it's actually it will
 

00:10:47.509 --> 00:10:49.090
the same effect it's actually it will
not work for something like a texture

00:10:49.090 --> 00:10:49.100
not work for something like a texture
 

00:10:49.100 --> 00:10:51.939
not work for something like a texture
you that continuously update the last

00:10:51.939 --> 00:10:51.949
you that continuously update the last
 

00:10:51.949 --> 00:10:54.519
you that continuously update the last
thing that I just want to show is how we

00:10:54.519 --> 00:10:54.529
thing that I just want to show is how we
 

00:10:54.529 --> 00:10:58.300
thing that I just want to show is how we
add the sepia effect so there's a lot of

00:10:58.300 --> 00:10:58.310
add the sepia effect so there's a lot of
 

00:10:58.310 --> 00:11:00.280
add the sepia effect so there's a lot of
boilerplate code on this in this file to

00:11:00.280 --> 00:11:00.290
boilerplate code on this in this file to
 

00:11:00.290 --> 00:11:02.619
boilerplate code on this in this file to
handle all the touch events but here and

00:11:02.619 --> 00:11:02.629
handle all the touch events but here and
 

00:11:02.629 --> 00:11:03.790
handle all the touch events but here and
also listener which is the custom

00:11:03.790 --> 00:11:03.800
also listener which is the custom
 

00:11:03.800 --> 00:11:06.730
also listener which is the custom
listener that we created all we're going

00:11:06.730 --> 00:11:06.740
listener that we created all we're going
 

00:11:06.740 --> 00:11:08.470
listener that we created all we're going
to be doing is adding a hardware layer

00:11:08.470 --> 00:11:08.480
to be doing is adding a hardware layer
 

00:11:08.480 --> 00:11:10.990
to be doing is adding a hardware layer
on top of our on top of our view and

00:11:10.990 --> 00:11:11.000
on top of our on top of our view and
 

00:11:11.000 --> 00:11:13.269
on top of our on top of our view and
when you set a hardware layer what you

00:11:13.269 --> 00:11:13.279
when you set a hardware layer what you
 

00:11:13.279 --> 00:11:17.290
when you set a hardware layer what you
can also do is specify a paint object so

00:11:17.290 --> 00:11:17.300
can also do is specify a paint object so
 

00:11:17.300 --> 00:11:19.210
can also do is specify a paint object so
after if it is a hardware layer you can

00:11:19.210 --> 00:11:19.220
after if it is a hardware layer you can
 

00:11:19.220 --> 00:11:21.400
after if it is a hardware layer you can
specify a paint object and that paint

00:11:21.400 --> 00:11:21.410
specify a paint object and that paint
 

00:11:21.410 --> 00:11:24.460
specify a paint object and that paint
object gets applied onto the view that

00:11:24.460 --> 00:11:24.470
object gets applied onto the view that
 

00:11:24.470 --> 00:11:26.699
object gets applied onto the view that
has that layer that has that layer and

00:11:26.699 --> 00:11:26.709
has that layer that has that layer and
 

00:11:26.709 --> 00:11:30.340
has that layer that has that layer and
if you look at them CPR paint it's a

00:11:30.340 --> 00:11:30.350
if you look at them CPR paint it's a
 

00:11:30.350 --> 00:11:31.780
if you look at them CPR paint it's a
very simple color filter they use a

00:11:31.780 --> 00:11:31.790
very simple color filter they use a
 

00:11:31.790 --> 00:11:34.420
very simple color filter they use a
couple color matrices with some values

00:11:34.420 --> 00:11:34.430
couple color matrices with some values
 

00:11:34.430 --> 00:11:37.840
couple color matrices with some values
and by overlaying that onto the view you

00:11:37.840 --> 00:11:37.850
and by overlaying that onto the view you
 

00:11:37.850 --> 00:11:40.210
and by overlaying that onto the view you
get a sepia effect as you're folding it

00:11:40.210 --> 00:11:40.220
get a sepia effect as you're folding it
 

00:11:40.220 --> 00:11:42.400
get a sepia effect as you're folding it
which can be very easily turned off on

00:11:42.400 --> 00:11:42.410
which can be very easily turned off on
 

00:11:42.410 --> 00:11:44.590
which can be very easily turned off on
and out by removing the layer off of our

00:11:44.590 --> 00:11:44.600
and out by removing the layer off of our
 

00:11:44.600 --> 00:11:48.249
and out by removing the layer off of our
view so that's how you do a cool cool

00:11:48.249 --> 00:11:48.259
view so that's how you do a cool cool
 

00:11:48.259 --> 00:11:52.629
view so that's how you do a cool cool
folding animation thanks for watching

