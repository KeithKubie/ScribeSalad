WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
So now we'll assume that we do have such a function.

00:00:03.000 --> 00:00:06.000
We'll assume that we have a function H

00:00:06.000 --> 00:00:07.000
that acts like a random oracle

00:00:07.000 --> 00:00:10.000
that provides the properties of an ideal cryptographic hash function.

00:00:10.000 --> 00:00:13.000
Let's try our coin-tossing protocol again.

00:00:13.000 --> 00:00:15.000
So, here's our new protocol design.

00:00:15.000 --> 00:00:18.000
Alice will pick a number, 0 or 1,

00:00:18.000 --> 00:00:20.000
representing heads or tails.

00:00:20.000 --> 00:00:24.000
She'll compute using our ideal cryptographic hash function--

00:00:24.000 --> 00:00:27.000
the hash of x--and she'll send m to Bob.

00:00:27.000 --> 00:00:29.000
Bob will make a guess,

00:00:29.000 --> 00:00:32.000
send that guess back to Alice.

00:00:32.000 --> 00:00:37.000
Then Alice will send her claimed value of x back to Bob.

00:00:37.000 --> 00:00:41.000
Bob can check if the hash of x equals m.

00:00:41.000 --> 00:00:44.000
If that's not the case, then Bob suspects that Alice has cheated.

00:00:44.000 --> 00:00:48.000
If x is equal to g, Bob wins.

00:00:48.000 --> 00:00:50.000
So, do we like this protocol?

00:00:50.000 --> 00:00:52.000
We'll assume that H is an ideal hash function,

00:00:52.000 --> 00:00:57.000
So which one of the parties, if any--or both--can cheat

00:00:57.000 --> 99:59:59.000
with this new protocol that we've defined?

