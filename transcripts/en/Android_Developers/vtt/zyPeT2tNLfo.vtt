WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:03.000
DAN GALPIN: We introduced
Android Go edition last year

00:00:03.000 --> 00:00:05.700
with the aim to bring the latest
Android improvements to more

00:00:05.700 --> 00:00:07.680
entry level phone buyers.

00:00:07.680 --> 00:00:10.170
There are now more than
200 Android Go devices

00:00:10.170 --> 00:00:12.690
available in over 120 countries.

00:00:12.690 --> 00:00:15.300
These devices are not only
popular in emerging markets,

00:00:15.300 --> 00:00:17.340
such as India, and
Brazil, and Mexico,

00:00:17.340 --> 00:00:19.410
but in the United
States as well.

00:00:19.410 --> 00:00:22.560
With more than 100 manufacturers
planning to release devices

00:00:22.560 --> 00:00:25.170
before the end of the
year, this is truly

00:00:25.170 --> 00:00:28.950
a global opportunity for your
apps to reach a wider audience.

00:00:28.950 --> 00:00:31.260
Fundamentally, the Android
Go edition experience

00:00:31.260 --> 00:00:33.750
is based on three key pillars--

00:00:33.750 --> 00:00:36.420
storage, delivering
twice the out of box data

00:00:36.420 --> 00:00:39.630
storage compared to similarly
configured non-Go edition

00:00:39.630 --> 00:00:42.240
Android devices;
data management,

00:00:42.240 --> 00:00:44.340
helping users minimize
their data consumption

00:00:44.340 --> 00:00:48.060
with features such as choosing
content quality in YouTube Go;

00:00:48.060 --> 00:00:52.200
and security, offering the same
security features as Android 9,

00:00:52.200 --> 00:00:54.450
such as Find My Device
and malware protection

00:00:54.450 --> 00:00:56.520
with Google Play Protect.

00:00:56.520 --> 00:00:58.680
Let's take a closer look
at how you can optimize

00:00:58.680 --> 00:01:00.300
your apps for Android Go.

00:01:00.300 --> 00:01:03.600
Start by targeting the
most recent Android API.

00:01:03.600 --> 00:01:05.580
At the time of
publishing this video,

00:01:05.580 --> 00:01:08.150
that's Android Pie API 28.

00:01:08.150 --> 00:01:10.860
This enables you to gain benefit
such as improved memory use

00:01:10.860 --> 00:01:14.040
while helping your apps run more
efficiently on devices with one

00:01:14.040 --> 00:01:16.110
gigabyte of RAM or less.

00:01:16.110 --> 00:01:18.300
There's a clear correlation
between lower app

00:01:18.300 --> 00:01:20.700
size and higher install rates.

00:01:20.700 --> 00:01:23.940
This is especially important
for Android Go edition users

00:01:23.940 --> 00:01:25.740
as they have limited
storage capacity

00:01:25.740 --> 00:01:28.020
and may incur
download data charges.

00:01:28.020 --> 00:01:31.290
Therefore, keep your app under
40 megabytes and your game

00:01:31.290 --> 00:01:33.570
under 65 megabytes.

00:01:33.570 --> 00:01:35.490
The simplest and
most impactful thing

00:01:35.490 --> 00:01:37.140
you can do to
reduce your app size

00:01:37.140 --> 00:01:39.700
is to start using an
Android App Bundle.

00:01:39.700 --> 00:01:41.280
Developers using
an App Bundle have

00:01:41.280 --> 00:01:44.460
seen size savings of up to 65%.

00:01:44.460 --> 00:01:47.310
This works because Google Play
uses your Android App Bundle

00:01:47.310 --> 00:01:50.100
to build and serve APKs that
are optimized for each device

00:01:50.100 --> 00:01:51.480
configuration.

00:01:51.480 --> 00:01:54.120
This results in a smaller
app download for end users

00:01:54.120 --> 00:01:56.310
by removing unused code
and resources needed

00:01:56.310 --> 00:01:57.972
for other devices.

00:01:57.972 --> 00:02:00.430
Additional optimizations you
can do to reduce your app size

00:02:00.430 --> 00:02:05.460
are replace PNG or JPEG files
with HEIF or WebP assets.

00:02:05.460 --> 00:02:08.610
For vector graphics,
use vector drawables.

00:02:08.610 --> 00:02:12.090
Replace raw audio format
resources such as WAV

00:02:12.090 --> 00:02:14.790
with MP3 or AAC resources.

00:02:14.790 --> 00:02:17.940
Remove duplicate libraries
and, whenever possible,

00:02:17.940 --> 00:02:20.490
focus on mobile-optimized
libraries.

00:02:20.490 --> 00:02:22.920
Shrink and optimize your
unused code and resources

00:02:22.920 --> 00:02:25.410
with tools such as ProGuard.

00:02:25.410 --> 00:02:27.990
You can use the APK
analyzer in Android Studio

00:02:27.990 --> 00:02:29.790
or from the command
line to help understand

00:02:29.790 --> 00:02:33.250
how these optimizations
impact your APK size.

00:02:33.250 --> 00:02:36.180
Another thing to check is your
app's Proportional Set Size,

00:02:36.180 --> 00:02:37.410
or PSS.

00:02:37.410 --> 00:02:39.630
Now this is your app's
physical memory footprint

00:02:39.630 --> 00:02:42.210
that accounts for both shared
and unshared pages used

00:02:42.210 --> 00:02:43.390
by your app.

00:02:43.390 --> 00:02:47.530
You can easily check this using
ADB shell dumpsys meminfo.

00:02:47.530 --> 00:02:51.360
Aim for PSS RAM usage
below 50 megabytes for apps

00:02:51.360 --> 00:02:53.760
and below 150
megabytes for games.

00:02:53.760 --> 00:02:56.460
And of course, make sure your
app functions without ANRs

00:02:56.460 --> 00:02:58.170
and crashes by
testing and double

00:02:58.170 --> 00:03:01.170
checking on Android Go
edition powered devices.

00:03:01.170 --> 00:03:04.830
After making the optimizations,
it's time to publish.

00:03:04.830 --> 00:03:06.630
Now one question
you might have is,

00:03:06.630 --> 00:03:09.090
do I deliver the same
app to all my users

00:03:09.090 --> 00:03:11.490
or specifically target an
optimized version of the app

00:03:11.490 --> 00:03:13.650
to users of Android Go edition?

00:03:13.650 --> 00:03:15.180
For most developers,
we recommend

00:03:15.180 --> 00:03:18.180
publishing the same app
to all devices for those

00:03:18.180 --> 00:03:19.860
who are using
Android and those who

00:03:19.860 --> 00:03:21.900
are using Android Go addition.

00:03:21.900 --> 00:03:24.570
By optimizing your app to run
well on Android Go edition

00:03:24.570 --> 00:03:27.630
devices, all your users stand
to gain from the performance

00:03:27.630 --> 00:03:28.660
benefits.

00:03:28.660 --> 00:03:31.650
Another option is to publish
two separate apps, your existing

00:03:31.650 --> 00:03:34.500
app and a light app that is
focused on Android Go edition

00:03:34.500 --> 00:03:35.920
devices.

00:03:35.920 --> 00:03:38.100
You can target certain
countries with a light app

00:03:38.100 --> 00:03:40.980
or you can target all
devices in all locales.

00:03:40.980 --> 00:03:41.970
It's up to you.

00:03:41.970 --> 00:03:43.920
Now distributing a second
app isn't a decision

00:03:43.920 --> 00:03:44.790
to be taken lightly.

00:03:44.790 --> 00:03:47.081
You'll need to support and
maintain its code separately

00:03:47.081 --> 00:03:49.230
and dedicate resources
to growing and engaging

00:03:49.230 --> 00:03:51.360
a second audience alongside
your existing app.

00:03:51.360 --> 00:03:53.360
As we mentioned at the
start of the video,

00:03:53.360 --> 00:03:55.320
Android Go is a tremendous
opportunity for you

00:03:55.320 --> 00:03:57.330
to grow your app
or game business.

00:03:57.330 --> 00:03:59.610
To learn more, check
out the resources listed

00:03:59.610 --> 00:04:01.410
in the video
description, including

00:04:01.410 --> 00:04:03.180
the Building for
Billions Guidelines

00:04:03.180 --> 00:04:05.820
where you will find more
tips for using memory, power,

00:04:05.820 --> 00:04:08.550
and network bandwidth more
efficiently in your apps.

00:04:08.550 --> 00:04:09.540
Thanks for watching.

00:04:09.540 --> 00:04:13.490
[MUSIC PLAYING]

