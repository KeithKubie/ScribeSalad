WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.087
[GOOGLE THEME MUSIC]

00:00:09.515 --> 00:00:11.890
MALE SPEAKER: Are you tired
of making the same old games?

00:00:11.890 --> 00:00:14.432
Do you miss playing games in
the same room as your friends?

00:00:14.432 --> 00:00:15.890
Today we're going
to talk about how

00:00:15.890 --> 00:00:18.590
to create games utilizing
Google Cast interaction model

00:00:18.590 --> 00:00:21.060
and bring multi-screen games
to the living room for all

00:00:21.060 --> 00:00:23.200
to enjoy.

00:00:23.200 --> 00:00:25.050
So what is a Google Cast game?

00:00:25.050 --> 00:00:27.460
A Google Cast game enables
multi-screen gameplay

00:00:27.460 --> 00:00:29.460
between mobile devices
and television,

00:00:29.460 --> 00:00:31.460
whether it is for
one person or many,

00:00:31.460 --> 00:00:33.020
you can bring
connected experiences

00:00:33.020 --> 00:00:34.353
to the best screen in the house.

00:00:36.332 --> 00:00:37.790
When you combine
the biggest screen

00:00:37.790 --> 00:00:39.456
in the house with an
amazing controller,

00:00:39.456 --> 00:00:41.040
great things can happen.

00:00:41.040 --> 00:00:43.140
But in order to make
something truly great,

00:00:43.140 --> 00:00:45.380
there are design nuances
for multi-screen gaming

00:00:45.380 --> 00:00:47.860
which you need to
consider first.

00:00:47.860 --> 00:00:51.080
First, make the game setup
with Google Cast fast and easy.

00:00:51.080 --> 00:00:53.120
All Cast games should
utilize the Google Cast

00:00:53.120 --> 00:00:55.680
SDK to discover
nearby cast devices

00:00:55.680 --> 00:00:58.280
and automatically present the
user with the option to cast

00:00:58.280 --> 00:01:02.010
as part of the game setup flow.

00:01:02.010 --> 00:01:05.459
Next, you need to decide
whether the game is cast-enabled

00:01:05.459 --> 00:01:08.480
or if the casting behavior
is required for gameplay.

00:01:08.480 --> 00:01:10.750
Each option has slightly
different considerations

00:01:10.750 --> 00:01:12.722
on how the players can
enter the cast flow

00:01:12.722 --> 00:01:14.180
and whether they
can play this game

00:01:14.180 --> 00:01:15.450
when they're away
from the television

00:01:15.450 --> 00:01:17.090
or they need to
be in front of it.

00:01:17.090 --> 00:01:20.164
If the game requires a Google
Cast endpoint in order to play,

00:01:20.164 --> 00:01:21.830
make sure to explicitly
tell the players

00:01:21.830 --> 00:01:24.204
and their first action should
be connect to the endpoint.

00:01:24.204 --> 00:01:25.820
This will start a
receiver application

00:01:25.820 --> 00:01:29.160
on an endpoint
like a Chromecast.

00:01:29.160 --> 00:01:31.000
If the game is
cast-enabled, meaning

00:01:31.000 --> 00:01:34.090
the game can be played without
a Google Cast endpoint,

00:01:34.090 --> 00:01:35.970
you need to clearly
call out the capability

00:01:35.970 --> 00:01:38.910
to cast the game session on
the main screen of the game

00:01:38.910 --> 00:01:40.980
and provide a clear
user experience.

00:01:40.980 --> 00:01:43.230
How are your devices in the
Google Cast endpoint going

00:01:43.230 --> 00:01:44.370
to connect with each other?

00:01:44.370 --> 00:01:46.200
There are several different
models that you can use,

00:01:46.200 --> 00:01:48.110
but each one has
different implications.

00:01:48.110 --> 00:01:50.470
First, let's talk about
how Cast applications work.

00:01:50.470 --> 00:01:52.650
This is going to
get technical now.

00:01:52.650 --> 00:01:55.160
Sender applications connect
to a receiver device

00:01:55.160 --> 00:01:56.920
such as a Chromecast,
passing along

00:01:56.920 --> 00:02:00.100
the application ID of the
receiver application to load.

00:02:00.100 --> 00:02:02.970
The application is registered
via the Cast SDK developer

00:02:02.970 --> 00:02:05.650
console.

00:02:05.650 --> 00:02:08.300
The receiver device loads
a receiver application

00:02:08.300 --> 00:02:10.949
from the cloud using a URL,
which has also been registered

00:02:10.949 --> 00:02:12.450
from the Developer Console.

00:02:12.450 --> 00:02:14.200
The application is
downloaded each time

00:02:14.200 --> 00:02:15.408
it is launched by the sender.

00:02:18.120 --> 00:02:20.140
The Cast SDK establishes
and maintains

00:02:20.140 --> 00:02:22.790
a session between the receiver
application and the sender

00:02:22.790 --> 00:02:23.850
application.

00:02:23.850 --> 00:02:25.660
Sender applications
in this model

00:02:25.660 --> 00:02:28.150
communicate with the receiver
application via the session

00:02:28.150 --> 00:02:32.210
to implement a game
experience on the TV.

00:02:32.210 --> 00:02:34.900
There are other models such
as a peer-to-peer model.

00:02:34.900 --> 00:02:36.460
The peers connect
to one device which

00:02:36.460 --> 00:02:38.330
acts as the host sender
and the host sender

00:02:38.330 --> 00:02:40.330
maintains communication
with the receiver device

00:02:40.330 --> 00:02:41.632
while updating the peers.

00:02:41.632 --> 00:02:43.840
In this case, a companion
technology like Google Play

00:02:43.840 --> 00:02:46.070
services real-time multiplayer
is an excellent choice

00:02:46.070 --> 00:02:47.361
for peer-to-peer communication.

00:02:52.420 --> 00:02:54.810
In the cloud-centric
model, a cloud service

00:02:54.810 --> 00:02:56.580
manages most of the
game and player state

00:02:56.580 --> 00:02:58.410
and keeps all clients in sync.

00:02:58.410 --> 00:03:00.410
In this setup, both the
senders and the receiver

00:03:00.410 --> 00:03:02.040
are clients of
the cloud service.

00:03:02.040 --> 00:03:04.280
Here, Google Play game
services can also be used

00:03:04.280 --> 00:03:06.030
for cloud-enabled API's.

00:03:06.030 --> 00:03:09.260
So there's lots of different
ways to make a game.

00:03:09.260 --> 00:03:12.960
All the games we released in
our game wave in November, 2014,

00:03:12.960 --> 00:03:15.421
use the methods we just
covered to make great games.

00:03:15.421 --> 00:03:17.420
Just like these games,
your real creative genius

00:03:17.420 --> 00:03:20.520
shows itself when you combine
great social multiplayer

00:03:20.520 --> 00:03:24.330
with the power of mobile
devices on the big screen.

00:03:24.330 --> 00:03:24.960
Why?

00:03:24.960 --> 00:03:27.280
Because mobile devices are
amazing game controllers,

00:03:27.280 --> 00:03:28.040
believe it or not.

00:03:28.040 --> 00:03:30.600
You can use touch, the
accelerometer, swipe,

00:03:30.600 --> 00:03:32.770
selection, manipulation,
microphone,

00:03:32.770 --> 00:03:34.140
sound, even the camera.

00:03:34.140 --> 00:03:36.440
There's so many game
interactions you can create.

00:03:36.440 --> 00:03:39.930
Why not explore and experiment?

00:03:39.930 --> 00:03:41.870
Let's look at a spectrum
of game controls.

00:03:41.870 --> 00:03:43.860
Abstract controls
interacts with the action

00:03:43.860 --> 00:03:46.180
on the screen via some other
mechanism such as motion

00:03:46.180 --> 00:03:47.410
or touch anywhere.

00:03:47.410 --> 00:03:49.570
Virtual controls, are
somewhere in between,

00:03:49.570 --> 00:03:52.190
touch something to control
something else on the screen.

00:03:52.190 --> 00:03:53.690
Direct controls
occur when you touch

00:03:53.690 --> 00:03:56.240
the thing you want to interact
with directly like an answer

00:03:56.240 --> 00:03:57.280
on a trivia game.

00:04:01.070 --> 00:04:03.150
When deciding on the
games input method,

00:04:03.150 --> 00:04:05.330
consider the key
characteristics of the game.

00:04:05.330 --> 00:04:06.270
What is the pace?

00:04:06.270 --> 00:04:08.450
Is their public versus
private information?

00:04:08.450 --> 00:04:09.544
Is there multiplayer?

00:04:09.544 --> 00:04:11.710
Being aware of how these
characteristics will effect

00:04:11.710 --> 00:04:13.251
gameplay will help
you make decisions

00:04:13.251 --> 00:04:16.620
around your input mechanics.

00:04:16.620 --> 00:04:19.329
For visual design, remember
not to fatigue the player

00:04:19.329 --> 00:04:22.220
by making them constantly look
up and down at the screen.

00:04:22.220 --> 00:04:24.790
Design the 10-foot experience
adhering to the TV design

00:04:24.790 --> 00:04:26.950
guidelines and the 1-foot
experience adhering

00:04:26.950 --> 00:04:28.450
to mobile guidelines
to understand

00:04:28.450 --> 00:04:32.570
what to emphasize in the
relationship between the two.

00:04:32.570 --> 00:04:34.605
When you do it all
right, you create

00:04:34.605 --> 00:04:37.050
an entirely new living room
experience and players really

00:04:37.050 --> 00:04:38.350
get involved with the game.

00:04:38.350 --> 00:04:40.516
We've seen this happen with
several great Cast games

00:04:40.516 --> 00:04:42.650
already and we want
yours to be next.

00:04:42.650 --> 00:04:43.990
So how do you do that?

00:04:43.990 --> 00:04:46.336
To get started, check
out the following links.

00:04:46.336 --> 00:04:47.960
There are so many
unexplored games just

00:04:47.960 --> 00:04:52.160
waiting to be created to inspire
and excite millions of gamers.

00:04:52.160 --> 00:04:54.700
Please go make
something awesome.

00:04:54.700 --> 00:04:55.460
That's it.

00:04:55.460 --> 00:04:57.092
Thank you.

00:04:57.092 --> 00:05:01.145
[GOOGLE THEME MUSIC]

