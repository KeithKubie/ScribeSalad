WEBVTT
Kind: captions
Language: en

00:00:00.948 --> 00:00:05.214
[MUSIC PLAYING]

00:00:06.640 --> 00:00:09.470
If you build a game for
iOS or Android using Unity,

00:00:09.470 --> 00:00:11.730
I'd love to see it
on my TV, and you

00:00:11.730 --> 00:00:15.667
can do so by using the Google
Cast Display plug-in for Unity.

00:00:15.667 --> 00:00:17.250
We've put together
an Android code lab

00:00:17.250 --> 00:00:18.490
showing you how to do so.

00:00:18.490 --> 00:00:21.060
So let's take a look.

00:00:21.060 --> 00:00:23.030
Let's get started with
adding Cast's support

00:00:23.030 --> 00:00:25.440
to an existing game in Unity.

00:00:25.440 --> 00:00:28.540
First thing we do is we
open an existing project.

00:00:28.540 --> 00:00:31.340
We'll open this project that
we've called Begin Project,

00:00:31.340 --> 00:00:35.700
and then we'll fire up
inside the Unity IDE.

00:00:35.700 --> 00:00:37.690
Now that we're actually
inside the IDE,

00:00:37.690 --> 00:00:39.190
we could try
playing this project

00:00:39.190 --> 00:00:42.412
as is by pressing
the Play button.

00:00:42.412 --> 00:00:43.870
Now we see the game
running, and we

00:00:43.870 --> 00:00:47.212
can explore our world,
fire, do all sorts of stuff,

00:00:47.212 --> 00:00:48.420
and hopefully not get killed.

00:00:52.030 --> 00:00:53.740
Now that we know
the game is working,

00:00:53.740 --> 00:00:56.020
we can start by adding
support for the Android

00:00:56.020 --> 00:00:59.420
SDK inside Unity.

00:00:59.420 --> 00:01:02.090
To set up the Android
SDK inside Unity,

00:01:02.090 --> 00:01:04.220
first you need to
tell it where it is.

00:01:04.220 --> 00:01:07.225
So you go to Preferences,
External Tools,

00:01:07.225 --> 00:01:10.720
look for the Android
SDK line, choose Browse,

00:01:10.720 --> 00:01:12.920
and locate the position
on your hard disk,

00:01:12.920 --> 00:01:15.800
where you've actually
installed the Android SDK.

00:01:15.800 --> 00:01:17.470
In this case, it's right here.

00:01:17.470 --> 00:01:20.130
So I click Choose,
and now Unity is

00:01:20.130 --> 00:01:23.240
ready to work with
the Android SDK.

00:01:23.240 --> 00:01:25.997
Next we'll need to configure
the Android player so that Unity

00:01:25.997 --> 00:01:27.690
will build for Android.

00:01:27.690 --> 00:01:31.670
What we do is we click the File
Menu, choose Build Settings,

00:01:31.670 --> 00:01:33.390
then look for
Android in the list,

00:01:33.390 --> 00:01:35.660
select it, if it's
not already selected,

00:01:35.660 --> 00:01:37.520
and click Switch
Platform to make it

00:01:37.520 --> 00:01:40.290
the default build target.

00:01:40.290 --> 00:01:42.710
While that happens, it will
start importing the assets

00:01:42.710 --> 00:01:44.895
and getting ready to build
an Android application.

00:01:49.170 --> 00:01:51.150
After we've imported
everything for Android,

00:01:51.150 --> 00:01:54.170
we now need to configure
the bundle identifier.

00:01:54.170 --> 00:01:56.360
Come over here to the
Player Settings button.

00:01:56.360 --> 00:01:59.550
If you click that, you'll see
over here in the Inspector

00:01:59.550 --> 00:02:01.090
we have the Play Settings.

00:02:01.090 --> 00:02:02.700
We click on Other Settings.

00:02:02.700 --> 00:02:04.780
It brings up a whole
lot of options.

00:02:04.780 --> 00:02:07.490
First thing we do is we
change the bundle identifier.

00:02:07.490 --> 00:02:09.643
So for our example,
we'll just set it

00:02:09.643 --> 00:02:10.934
to something like example.game.

00:02:15.850 --> 00:02:19.050
We also need to change
the minimum API version

00:02:19.050 --> 00:02:21.500
because the Cast
plug-in requires

00:02:21.500 --> 00:02:26.610
Android KitKat 4.4 or higher,
so we choose 4.4 KitKat.

00:02:26.610 --> 00:02:28.540
Now that we've
configured everything,

00:02:28.540 --> 00:02:31.610
we can just close the
Build Settings dialog.

00:02:31.610 --> 00:02:36.170
And if we save our project
by going File, Save Project,

00:02:36.170 --> 00:02:38.925
we can then go
File, Build &amp; Run.

00:02:38.925 --> 00:02:40.550
What we should do at
this point in time

00:02:40.550 --> 00:02:43.120
is actually connect
an Android device.

00:02:43.120 --> 00:02:46.590
So we'll plug it in, click
Build &amp; Run, and hopefully,

00:02:46.590 --> 00:02:48.530
build our application
to run on our phone,

00:02:48.530 --> 00:02:52.320
and we'll call the project game.

00:02:57.859 --> 00:02:59.400
Now, while we wait
for that to build,

00:02:59.400 --> 00:03:01.740
we'll get on to the next thing,
which is actually playing

00:03:01.740 --> 00:03:02.950
the game to see how it works.

00:03:09.800 --> 00:03:12.400
Now we have our game running
on the phone, so swipe

00:03:12.400 --> 00:03:16.300
from the top to the home
screen and quit the game.

00:03:16.300 --> 00:03:20.530
Next, we'll get on the Cast,
enabling the game itself.

00:03:20.530 --> 00:03:23.380
To begin development of
your Cast-enabled game,

00:03:23.380 --> 00:03:26.540
you need to go to the
Cast Developer Console.

00:03:26.540 --> 00:03:28.820
On the console, you can
add new applications

00:03:28.820 --> 00:03:31.510
that will run on the Cast
device and register devices

00:03:31.510 --> 00:03:32.850
for debugging.

00:03:32.850 --> 00:03:35.100
So we'll click Add
New Application

00:03:35.100 --> 00:03:38.000
and choose the Remote
Display Receiver type.

00:03:38.000 --> 00:03:40.510
This will receive the
content from your phone.

00:03:40.510 --> 00:03:43.930
So we'll call it My Game.

00:03:43.930 --> 00:03:46.700
Once you click Save, you will
be issued an application ID

00:03:46.700 --> 00:03:47.775
that you can see here.

00:03:47.775 --> 00:03:50.980
You'll use that in your project.

00:03:50.980 --> 00:03:53.960
The other thing we need to do
is register a debugging device.

00:03:53.960 --> 00:03:56.300
If I click the Add
New Device button,

00:03:56.300 --> 00:03:59.570
whilst this dialogue is up, I
can click the Cast extension

00:03:59.570 --> 00:04:03.410
in Chrome, which will show me
Cast device that are available.

00:04:03.410 --> 00:04:05.180
If you don't have
the extension, you

00:04:05.180 --> 00:04:07.700
can get it from the
Chrome Web Store.

00:04:07.700 --> 00:04:11.040
If I click on that device, it
will show the serial number

00:04:11.040 --> 00:04:14.270
and read it out to me, so I
can enter the serial number

00:04:14.270 --> 00:04:17.962
into my dialog box here.

00:04:17.962 --> 00:04:19.670
So the serial number
that it's read to me

00:04:19.670 --> 00:04:21.829
for this particular
example I'll just

00:04:21.829 --> 00:04:30.730
type in and give it a name.

00:04:30.730 --> 00:04:32.200
And we'll call it PlayRoom.

00:04:36.410 --> 00:04:38.350
Now, when we click
OK, what you'll see

00:04:38.350 --> 00:04:40.290
is a registering dialogue.

00:04:40.290 --> 00:04:43.460
Now this status here registering
takes approximately 15 minutes

00:04:43.460 --> 00:04:44.437
to complete.

00:04:44.437 --> 00:04:47.020
So this is good time go and get
a cup of coffee and come back.

00:04:50.150 --> 00:04:52.400
After your device is
registered for development,

00:04:52.400 --> 00:04:54.390
you'll see these
Ready For Testing

00:04:54.390 --> 00:04:57.130
status in the Cast
Developer Console.

00:04:57.130 --> 00:04:59.730
At this point, you should
reboot your Cast device,

00:04:59.730 --> 00:05:04.290
and we'll get ready to set
up the Google Cast plug-in.

00:05:04.290 --> 00:05:06.320
Now that we've set up
our device for testing,

00:05:06.320 --> 00:05:09.010
we need to download the Google
Cast Remote Display plug-in

00:05:09.010 --> 00:05:11.920
from the Unity Asset Store.

00:05:11.920 --> 00:05:14.700
Once we've downloaded it,
we can go back into Unity,

00:05:14.700 --> 00:05:18.900
choose Assets, Import
Package, Custom Package,

00:05:18.900 --> 00:05:22.180
and then select the
plug-in and click Open.

00:05:27.940 --> 00:05:31.080
This will bring up an
input package dialogue.

00:05:31.080 --> 00:05:34.080
Here we click the Import
button to all the assets

00:05:34.080 --> 00:05:34.885
into our project.

00:05:47.790 --> 00:05:51.010
After the plug-in has finished
loading all the assets,

00:05:51.010 --> 00:05:54.100
you should be able to go down
here to the Plug-ins folder

00:05:54.100 --> 00:05:57.615
and check you have all the
folders for the Google Cast

00:05:57.615 --> 00:06:00.255
Remote Display plug-in
available to you.

00:06:00.255 --> 00:06:01.630
Note, at that this
point, we need

00:06:01.630 --> 00:06:04.160
to copy three of the
Android SDK libraries

00:06:04.160 --> 00:06:05.710
into the Plug-ins folder.

00:06:05.710 --> 00:06:08.410
That's the google-play-services
library, the appcompat library,

00:06:08.410 --> 00:06:11.540
and the mediarouter library.

00:06:11.540 --> 00:06:13.320
Now that we've set
up the plug-in,

00:06:13.320 --> 00:06:15.590
we need to go to the
Android directory

00:06:15.590 --> 00:06:19.030
and open the
Android.manifest.xml file.

00:06:19.030 --> 00:06:21.220
You'll see it over
here in the Inspector.

00:06:21.220 --> 00:06:22.840
Now, if we bring it
up in our editor,

00:06:22.840 --> 00:06:25.600
we need to change
the package name

00:06:25.600 --> 00:06:27.440
to be the same as what
we set up in Unity.

00:06:27.440 --> 00:06:35.240
So we set it as example.game
save the manifest file.

00:06:35.240 --> 00:06:37.960
The next thing we need to
do is add an audio listener

00:06:37.960 --> 00:06:41.790
to our project so that we can
send audio the Cast device.

00:06:41.790 --> 00:06:45.300
We go up to the Assets
menu, choose Assets, Create,

00:06:45.300 --> 00:06:48.292
C# Script, and then
we'll rename that to be

00:06:48.292 --> 00:06:49.250
AudioListenerSingleton.

00:06:51.770 --> 00:06:54.425
Now we open that file
up in a text editor,

00:06:54.425 --> 00:06:58.712
and we can actually
change the code

00:06:58.712 --> 00:07:01.485
to implement the
audio listener for us.

00:07:01.485 --> 00:07:06.950
The example is in the code lab
referenced from this video.

00:07:06.950 --> 00:07:09.950
Next we need to add the
audio listener to the scene.

00:07:09.950 --> 00:07:11.930
But to do that, we
go to Game Object,

00:07:11.930 --> 00:07:14.150
Create an Empty Game Object.

00:07:14.150 --> 00:07:18.070
We can rename that to the be
our AudioListenerSingleton.

00:07:18.070 --> 00:07:20.190
And if we navigate down
into our Plug-ins folder,

00:07:20.190 --> 00:07:22.700
where the Google Cast
Remote Display plug-in is,

00:07:22.700 --> 00:07:24.980
you'll see the audio
listener inside there.

00:07:24.980 --> 00:07:27.900
So we select it, and
we drag it and drop it

00:07:27.900 --> 00:07:30.330
onto our AudioListenerSingleton.

00:07:30.330 --> 00:07:32.520
You'll notice that the
display on the right here

00:07:32.520 --> 00:07:36.590
in the Inspector has changed to
show the script we just added.

00:07:36.590 --> 00:07:38.220
Meanwhile, we need
to add the script we

00:07:38.220 --> 00:07:39.870
created in the previous step.

00:07:39.870 --> 00:07:41.920
So we go back into the
Android folder, where

00:07:41.920 --> 00:07:45.610
we had created that script, find
that AudioListenerSingleton,

00:07:45.610 --> 00:07:49.420
and drag it on as well.

00:07:49.420 --> 00:07:51.170
You'll see the
second script up here

00:07:51.170 --> 00:07:53.165
in the right-hand inspector.

00:07:53.165 --> 00:07:55.540
Now what we need to do is
actually add the remote display

00:07:55.540 --> 00:07:59.670
to the scene, and
we'll be all done.

00:07:59.670 --> 00:08:02.230
Now let's add remote
display to the Unity scene.

00:08:02.230 --> 00:08:05.040
What we need to do is go to
the Google Cast Remote Display

00:08:05.040 --> 00:08:08.830
folder here and find this prefab
called Google Remote Display

00:08:08.830 --> 00:08:11.520
Manager and drag it
into our scene hierarchy

00:08:11.520 --> 00:08:13.535
at the top level.

00:08:13.535 --> 00:08:16.350
If we then select it and
go over to the right,

00:08:16.350 --> 00:08:17.555
we need to set a few things.

00:08:23.120 --> 00:08:26.010
First thing we set
is the Audio Manager.

00:08:26.010 --> 00:08:28.070
We want to set it to the
AudioListenerSingleton

00:08:28.070 --> 00:08:30.180
we created in the
previous step so that we

00:08:30.180 --> 00:08:31.555
can send audio to the device.

00:08:34.890 --> 00:08:37.990
Next, we need to
create a camera.

00:08:37.990 --> 00:08:40.419
After you've added the
Cast Remote Display Manager

00:08:40.419 --> 00:08:43.940
to your project, you
need to set the app ID

00:08:43.940 --> 00:08:47.210
so that the Cast device knows
which app to load, which

00:08:47.210 --> 00:08:49.220
is over here in the Inspector.

00:08:49.220 --> 00:08:54.110
So what we do is we go back to
our Cast SDK Developer Console,

00:08:54.110 --> 00:08:57.650
grab that ID, and copy it.

00:09:01.180 --> 00:09:03.900
Once we've copied the ID,
we can put it into Unity,

00:09:03.900 --> 00:09:06.522
so now we know-- the
Cast device knows

00:09:06.522 --> 00:09:07.605
which application to load.

00:09:12.630 --> 00:09:14.060
Next, we'll add
the mobile camera.

00:09:17.790 --> 00:09:20.875
To create the camera, we
choose Game Object, Camera.

00:09:20.875 --> 00:09:22.250
This is the camera
that will show

00:09:22.250 --> 00:09:24.480
the image on the mobile
phone when casting,

00:09:24.480 --> 00:09:26.690
so we'll call it
the mobile camera.

00:09:26.690 --> 00:09:29.320
Now, if we select
the mobile camera,

00:09:29.320 --> 00:09:31.540
we need to remove the
Audio Listener over here

00:09:31.540 --> 00:09:33.550
because it can interfere
with our audio routing

00:09:33.550 --> 00:09:36.660
to the Cast device, so
we remove the component.

00:09:36.660 --> 00:09:38.775
We also need to remove
it from the main camera.

00:09:38.775 --> 00:09:41.120
So we go across here
to the Audio Listener

00:09:41.120 --> 00:09:43.970
and get rid of it.

00:09:43.970 --> 00:09:45.690
Now that we've
created the cameras,

00:09:45.690 --> 00:09:49.930
we need to wire in a script
that will control them.

00:09:49.930 --> 00:09:52.080
To prepare the script
to control the camera,

00:09:52.080 --> 00:09:58.130
we go to the File System and
go to end_project, Assets,

00:09:58.130 --> 00:10:02.700
Scripts, Camera, and find the
RemoteCameraManager.cs script

00:10:02.700 --> 00:10:03.640
file.

00:10:03.640 --> 00:10:07.090
We take that, and we'll copy
it over into our project.

00:10:07.090 --> 00:10:09.140
So if we drop it
in there, we have

00:10:09.140 --> 00:10:11.010
the script for the
mobile camera, which

00:10:11.010 --> 00:10:13.710
provides the view for the
mobile device during casting,

00:10:13.710 --> 00:10:17.850
and the main camera, which
is shown on the Cast device.

00:10:17.850 --> 00:10:20.370
Now that we've copied the
script, we get back to Unity

00:10:20.370 --> 00:10:21.920
and set it up for use.

00:10:21.920 --> 00:10:24.390
If we go into the
Scripts, Camera folder,

00:10:24.390 --> 00:10:27.300
you'll see the
RemoteCameraManager there.

00:10:27.300 --> 00:10:31.020
We just grab it and drag
it onto our Mobile Camera.

00:10:31.020 --> 00:10:33.420
Then if we look at the Mobile
Camera in our Inspector,

00:10:33.420 --> 00:10:34.670
we can see the script enabled.

00:10:34.670 --> 00:10:37.390
We need to change a
few settings here.

00:10:37.390 --> 00:10:42.180
Change the Display Manager to
be the CastRemoteDisplayManager.

00:10:42.180 --> 00:10:44.900
We'll also set the Remote
Display Camera to be the Mobile

00:10:44.900 --> 00:10:48.340
Camera that we've just built.
Then, of course, the Main

00:10:48.340 --> 00:10:50.790
Camera will be the Main Camera.

00:10:50.790 --> 00:10:52.610
So now we've set
up all our cameras.

00:10:52.610 --> 00:10:54.030
We're ready to go.

00:10:54.030 --> 00:10:55.900
What we need to do is
add some kind of UI

00:10:55.900 --> 00:10:57.410
to allow casting to happen.

00:11:00.190 --> 00:11:03.180
To set up a simple UI to
start casting from our phone

00:11:03.180 --> 00:11:06.730
to the display, we go back into
the Google Cast Remote Display

00:11:06.730 --> 00:11:09.360
Plug-ins folder and
find the Cast Default

00:11:09.360 --> 00:11:13.539
UI, which is a prefab
that provides a Cast UI.

00:11:13.539 --> 00:11:15.580
We drag that into the top
level of our hierarchy,

00:11:15.580 --> 00:11:18.270
and that will give us a nice UI.

00:11:18.270 --> 00:11:19.300
And we're ready to go.

00:11:19.300 --> 00:11:22.999
All we need to do now is
choose File, Build And Run,

00:11:22.999 --> 00:11:24.290
and watch it run on our iPhone.

00:11:30.430 --> 00:11:32.280
So we've built our game,
and, lo and behold,

00:11:32.280 --> 00:11:33.872
it has a Cast
icon, which lets us

00:11:33.872 --> 00:11:36.080
send the game play to any
Google Cast enabled device.

00:11:38.610 --> 00:11:40.620
For more details, go
to the code lab, which

00:11:40.620 --> 00:11:42.910
explains how to make the
Cast icon transparent,

00:11:42.910 --> 00:11:45.650
change colors, and add
controls to move your player

00:11:45.650 --> 00:11:47.965
around the game so it
actually does something.

00:11:47.965 --> 00:11:50.090
I hope you enjoyed a quick
tour through how to make

00:11:50.090 --> 00:11:52.890
your game Google Cast enabled.

