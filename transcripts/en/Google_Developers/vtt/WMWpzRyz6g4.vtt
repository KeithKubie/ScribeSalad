WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.831
[MUSIC PLAYING]

00:00:06.831 --> 00:00:09.122
My name is Andreas Preuer
and I'm a partner development

00:00:09.122 --> 00:00:10.400
manager at Google Play.

00:00:10.400 --> 00:00:13.180
Today I will talk about
optimizing your game

00:00:13.180 --> 00:00:17.656
with conversion funnel and
store listing experiments.

00:00:17.656 --> 00:00:20.570
This is Tapventures a
game by Underwater Apps.

00:00:20.570 --> 00:00:22.110
You've seen this game before.

00:00:22.110 --> 00:00:24.530
It's a studio based in Armenia.

00:00:24.530 --> 00:00:27.940
Underwater Apps came across
a few common challenges

00:00:27.940 --> 00:00:30.680
such as how to increase
revenue per user,

00:00:30.680 --> 00:00:32.980
how to get a better
understanding of your user's

00:00:32.980 --> 00:00:36.270
price source and how to
grow the game's user base.

00:00:36.270 --> 00:00:38.290
We've worked with
Underwater Apps

00:00:38.290 --> 00:00:41.420
to overcome and address
some of these challenges.

00:00:41.420 --> 00:00:44.640
Let's start with
challenge number one,

00:00:44.640 --> 00:00:47.520
and I'll talk a little bit
about the player stats API.

00:00:47.520 --> 00:00:51.552
So the challenge was, how to
increase revenue per user.

00:00:51.552 --> 00:00:54.572
The player stats API which
is part of Google Play game

00:00:54.572 --> 00:01:00.090
services helps you to predict
user's spend and churn.

00:01:00.090 --> 00:01:02.560
Here are three simple ways
how do use spend and churn

00:01:02.560 --> 00:01:05.660
prediction for
better experiences.

00:01:05.660 --> 00:01:11.160
You can invest in users who are
predicted to become spenders,

00:01:11.160 --> 00:01:15.990
you can make the game easier
for gamers predicted to churn,

00:01:15.990 --> 00:01:18.730
or you can just show ads
to users who are predicted

00:01:18.730 --> 00:01:21.930
not to spend otherwise.

00:01:21.930 --> 00:01:23.550
Underwater Apps
made a simple change

00:01:23.550 --> 00:01:27.670
and implemented the player stats
API to predict spend behavior

00:01:27.670 --> 00:01:30.190
of their newly acquired users.

00:01:30.190 --> 00:01:33.250
They didn't show ads to users
who were probable to spend.

00:01:33.250 --> 00:01:36.448
This simply change
increased IAP count by 15%.

00:01:39.520 --> 00:01:42.850
Now to challenge number two, how
to get a better understanding

00:01:42.850 --> 00:01:44.730
of users by source.

00:01:44.730 --> 00:01:48.820
Let's talk about Google
Play's conversion funnel.

00:01:48.820 --> 00:01:51.250
The conversion funnel
simply shows you

00:01:51.250 --> 00:01:57.340
visitors, installers, and
buyers by acquisition channel.

00:01:57.340 --> 00:01:59.220
If you would like to
take action to increase

00:01:59.220 --> 00:02:02.880
the number of installers you can
launch a universal app campaign

00:02:02.880 --> 00:02:05.640
directly from Google
Play's Developer Console.

00:02:05.640 --> 00:02:08.310
Ads will be shown on
Google's search network,

00:02:08.310 --> 00:02:13.695
including Google Play, YouTube,
and Google's Display Network.

00:02:13.695 --> 00:02:17.240
Launching soon, you will find
a country breakdown of Google

00:02:17.240 --> 00:02:18.850
Play's conversion funnel.

00:02:18.850 --> 00:02:21.910
You can drill into performance
in your key markets

00:02:21.910 --> 00:02:25.070
and learn about
underperforming markets too.

00:02:25.070 --> 00:02:27.430
If you learn that the
store listing visitors

00:02:27.430 --> 00:02:30.570
to installer conversion
rate in a specific market

00:02:30.570 --> 00:02:33.560
is below your expectation you
can launch a store listing

00:02:33.560 --> 00:02:37.870
experiment to
improve performance.

00:02:37.870 --> 00:02:39.560
Now to challenge
number three, how

00:02:39.560 --> 00:02:41.310
to grow the game's user base.

00:02:41.310 --> 00:02:43.500
Store listing
experiments allow you

00:02:43.500 --> 00:02:46.040
to find the most
effective graphics

00:02:46.040 --> 00:02:50.070
and text for your game.

00:02:50.070 --> 00:02:54.180
Absolutely no coding is required
and it takes only a few clicks

00:02:54.180 --> 00:02:57.980
to launch store listing
experiments in the Play

00:02:57.980 --> 00:02:59.960
developer console.

00:02:59.960 --> 00:03:05.430
You can test icons, images,
videos, and text descriptions.

00:03:05.430 --> 00:03:10.090
Here are three recommendations--
use global tests for icons

00:03:10.090 --> 00:03:11.870
and graphics.

00:03:11.870 --> 00:03:15.810
Use local tests for
localized text and graphics.

00:03:15.810 --> 00:03:19.750
And coming soon you can run
multiple localized description

00:03:19.750 --> 00:03:23.880
tests at the same time.

00:03:23.880 --> 00:03:25.840
Don't forget, your
Play Store listing

00:03:25.840 --> 00:03:27.880
matters for all traffic sources.

00:03:27.880 --> 00:03:30.830
Here you can see an example
from Underwater Apps

00:03:30.830 --> 00:03:34.890
and their store conversion
rate increase by 29%,

00:03:34.890 --> 00:03:36.340
just by updating
the icon design.

00:03:38.890 --> 00:03:41.480
Check out our new features
and get in touch via the link

00:03:41.480 --> 00:03:42.910
that you can see on the slide.

00:03:42.910 --> 00:03:48.960
[MUSIC PLAYING]

