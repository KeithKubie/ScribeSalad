WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:02.960
There are two fundamental
pieces of technology

00:00:02.960 --> 00:00:06.990
that enable progressive web apps
to be reliable, fast and engaging.

00:00:06.990 --> 00:00:09.950
Service workers and
the Web App Manifest File.

00:00:09.950 --> 00:00:12.500
Let's take a look at
service workers first.

00:00:12.500 --> 00:00:16.120
Most web apps are built
on a client-server model.

00:00:16.120 --> 00:00:19.140
Without a server there is no web app.

00:00:19.140 --> 00:00:21.140
But service workers changes that.

00:00:21.140 --> 00:00:24.870
Service workers are a progressive
enhancement for the network staff, and

00:00:24.870 --> 00:00:27.760
sit between the browser and the server.

00:00:27.760 --> 00:00:31.270
Acting as a client side
proxy written in JavaScript.

00:00:31.270 --> 00:00:33.910
That means you can cache assets locally.

00:00:33.910 --> 00:00:37.130
So no matter what kind of
network the user's connected to,

00:00:37.130 --> 00:00:40.030
apps load near instantly.

00:00:40.030 --> 00:00:42.960
Apps can even work offline
because the service worker

00:00:42.960 --> 00:00:45.270
will respond to network requests.

00:00:45.270 --> 00:00:47.130
Once a service worker is registered,

00:00:47.130 --> 00:00:50.200
it can do more than just
as a client side proxy.

00:00:50.200 --> 00:00:52.190
You can define what
events will wake it up.

00:00:53.680 --> 00:00:57.595
Events like push messages can
wake up a service worker and

00:00:57.595 --> 00:01:00.020
re-engage the user with notifications.

00:01:00.020 --> 00:01:03.620
Or data can be seamlessly
synced to your servers

00:01:03.620 --> 00:01:05.760
when a network connection is restored.

00:01:05.760 --> 00:01:10.900
And what's amazing is that they don't
rely on the web app being open in a tab,

00:01:10.900 --> 00:01:14.440
or even a browser being open on mobile.

00:01:14.440 --> 00:01:20.930
Service workers are to progressive web
apps, as XMLHttpRequest was to Ajax.

00:01:20.930 --> 00:01:26.250
They give progressive web apps
the power to exist beyond the browser.

00:01:26.250 --> 00:01:31.100
The second fundamental piece of
technology is the web app manifest file,

00:01:31.100 --> 00:01:35.840
which gives you the ability to control
how your app appears to the user

00:01:35.840 --> 00:01:38.850
in areas where they would
expect to see apps.

00:01:38.850 --> 00:01:41.740
And more importantly,
how they can launch it.

00:01:41.740 --> 00:01:45.560
When a set of heuristics are met,
the web app install banner

00:01:45.560 --> 00:01:50.180
will even prompt users to add
your app to their home screen.

00:01:50.180 --> 00:01:54.970
Then when the user opens it from
the home screen, it opens full-screen,

00:01:54.970 --> 00:01:56.460
no browser UI.

00:01:56.460 --> 00:01:59.360
And it's a top level app
in the task switcher.

00:01:59.360 --> 00:02:01.420
So it feels just like any other app.

