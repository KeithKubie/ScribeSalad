WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.708
 MICHAEL SILISKI: Hello everyone! My name is Michael Siliski. 

00:00:01.708 --> 00:00:04.165
 I am primarily responsible for product management for apps and games on Google Play. 

00:00:04.165 --> 00:00:06.247
 Today I will be with Ellie Powers. 

00:00:06.247 --> 00:00:08.330
 Give you a brief introduction on how to create better applications. 

00:00:08.330 --> 00:00:10.440
 Make your app available 

00:00:10.440 --> 00:00:12.125
 Excellent user experience 

00:00:14.960 --> 00:00:17.220
 Well known 

00:00:17.220 --> 00:00:20.560
 Quality is the cornerstone of mobile application business success 

00:00:20.560 --> 00:00:23.945
 Users expect high quality applications 

00:00:23.945 --> 00:00:25.570
 But in today's mobile applications 

00:00:25.570 --> 00:00:27.278
 It’s not enough to just attract users to install your app, right? 

00:00:27.278 --> 00:00:29.020
 You need to develop rich features 

00:00:29.020 --> 00:00:31.020
 Create a great user experience 

00:00:31.020 --> 00:00:32.259
 Let them love your application 

00:00:32.259 --> 00:00:33.672
 You need to make users willing 

00:00:33.672 --> 00:00:34.880
 Proactively recommend your app to friends 

00:00:34.880 --> 00:00:39.170
 Also make users willing to spend in your app 

00:00:39.170 --> 00:00:42.620
 According to what we have seen over the years 

00:00:42.620 --> 00:00:45.650
 The better the user experience of the app 

00:00:45.650 --> 00:00:50.330
 The more users are willing to spend money on it 

00:00:50.330 --> 00:00:54.980
 The higher the star rating you get in the Google Play store 

00:00:54.980 --> 00:00:56.870
 The more you earn 

00:00:56.870 --> 00:01:01.090
 Therefore, it is definitely worth your time and energy. 

00:01:01.090 --> 00:01:03.950
 To understand what users like about your app. 

00:01:03.950 --> 00:01:07.380
 And problems encountered by users during use 

00:01:07.380 --> 00:01:11.210
 And proactively manage user feedback 

00:01:11.210 --> 00:01:14.820
 If you do this 

00:01:14.820 --> 00:01:17.960
 In the long run, this kind of investment will make you 

00:01:17.960 --> 00:01:20.580
 Get a return on business income 

00:01:20.580 --> 00:01:23.590
 There are many criteria for evaluating application quality. 

00:01:23.590 --> 00:01:26.040
 By observing the most successful apps on Google Play 

00:01:26.040 --> 00:01:28.600
 we discover 

00:01:28.600 --> 00:01:31.027
 Application features and quality of user experience 

00:01:31.027 --> 00:01:33.027
 Mainly reflected in four aspects 

00:01:36.010 --> 00:01:39.680
 First of all, these applications can pass various functions that users like. 

00:01:39.680 --> 00:01:42.090
 Really meet user needs 

00:01:42.090 --> 00:01:46.140
 Second, they are not only beautifully designed 

00:01:46.140 --> 00:01:49.430
 And easy to use and users are happy to use 

00:01:52.360 --> 00:01:54.920
 Third, these applications are very stable and reliable. 

00:01:54.920 --> 00:01:59.470
 They won't crash 

00:01:59.470 --> 00:02:01.520
 And it won’t consume a lot of traffic and power. 

00:02:01.520 --> 00:02:03.910
 Fourth, these applications are quite creative. 

00:02:03.910 --> 00:02:06.930
 They are built using the latest Android features 

00:02:06.930 --> 00:02:08.419
 So stand out from the many applications 

00:02:08.419 --> 00:02:11.350
 We need to consider applying these four aspects to 

00:02:11.350 --> 00:02:16.300
 The entire life cycle of an application goes from design to development to the entire process of release. 

00:02:16.300 --> 00:02:19.910
 I will invite our developer product manager 

00:02:19.910 --> 00:02:23.050
 Tell everyone how to be in the life of your app 

00:02:23.050 --> 00:02:27.200
 Use these four factors that determine the quality of your application 

00:02:27.200 --> 00:02:28.610
 Ellie Powers with outstanding talent 

00:02:32.060 --> 00:02:33.840
 ELLIE POWERS: Thank you, Michael. 

00:02:33.840 --> 00:02:37.127
 Hello everyone, as Michael mentioned 

00:02:37.127 --> 00:02:39.710
 We will introduce these three different stages one by one. 

00:02:39.710 --> 00:02:42.560
 And explore how to improve quality 

00:02:42.560 --> 00:02:45.220
 Let’s start with the design 

00:02:45.220 --> 00:02:48.060
 Does anyone remember the lecture on Material Design last year? 

00:02:48.560 --> 00:02:51.150
 If someone doesn't remember 

00:02:51.150 --> 00:02:53.731
 Or we didn’t come last time today, we will review it quickly. 

00:02:53.731 --> 00:02:56.230
 Then let's take a look at the developers. 

00:02:56.230 --> 00:02:57.827
 Use of Material Design 

00:02:57.827 --> 00:02:59.660
 Will also introduce several updates 

00:02:59.660 --> 00:03:02.140
 Let everyone know what's new in the field of Material Design 

00:03:02.140 --> 00:03:05.560
 Material Design is a design system 

00:03:05.560 --> 00:03:09.520
 How to move the interface and interface style 

00:03:09.520 --> 00:03:11.420
 And how to adapt to the user's touch operation is clearly defined 

00:03:11.420 --> 00:03:13.020
 For more information on Material Design 

00:03:13.020 --> 00:03:15.610
 Please visit developer.android.com/design 

00:03:15.610 --> 00:03:18.180
 This is a very good place to start 

00:03:18.180 --> 00:03:20.760
 Material Design has four principles 

00:03:20.760 --> 00:03:23.430
 First, the appearance is tangible 

00:03:23.430 --> 00:03:26.780
 The overall idea is 

00:03:26.780 --> 00:03:29.320
 Application run 

00:03:29.320 --> 00:03:32.200
 It should be the same as the real thing in reality. 

00:03:32.200 --> 00:03:34.200
 Second, modeled on the design of printed matter 

00:03:34.200 --> 00:03:38.430
 That is, the content should be eye-catching, vivid, and clear-cut. 

00:03:38.430 --> 00:03:40.480
 You can use the look and feel provided by Material Design 

00:03:40.480 --> 00:03:44.290
 Retouch as needed to reflect the brand characteristics of your app 

00:03:44.290 --> 00:03:47.180
 Third, use meaningful actions 

00:03:47.180 --> 00:03:49.500
 You can use actions in your app to get the user’s attention 

00:03:49.500 --> 00:03:52.340
 And when the user switches from one screen of the application to another 

00:03:52.340 --> 00:03:54.090
 Keep coherent 

00:03:54.090 --> 00:03:56.850
 Fourth, adopt adaptive design 

00:03:56.850 --> 00:03:59.660
 The focus of this principle is that you can create an adaptive layout. 

00:03:59.660 --> 00:04:04.470
 Let users use their mobile phones, tablet TVs, Android Wear or Android Auto cars 

00:04:04.470 --> 00:04:08.670
 Come to your app and have a familiar feeling 

00:04:08.670 --> 00:04:11.240
 You can't let users switch to other types of devices each time. 

00:04:11.240 --> 00:04:13.700
 Re-adapt to the design of your application 

00:04:13.700 --> 00:04:15.760
 Now let's watch a short animation. 

00:04:15.760 --> 00:04:17.959
 In the process of watching 

00:04:17.959 --> 00:04:19.821
 See if you can find these four principles 

00:04:19.821 --> 00:04:21.805
 [play video] 

00:04:21.805 --> 00:04:25.773
 [play music] 

00:05:13.389 --> 00:05:16.930
 [End of video playback] 

00:05:16.930 --> 00:05:18.490
 In the past year and a half 

00:05:18.490 --> 00:05:20.350
 We have witnessed 

00:05:20.350 --> 00:05:22.770
 Android developers like everyone are starting to use Material Design 

00:05:22.770 --> 00:05:24.470
 Developed a large number of creative applications 

00:05:24.470 --> 00:05:26.810
 Make your app more beautiful 

00:05:26.810 --> 00:05:27.780
 Also easier to use 

00:05:27.780 --> 00:05:30.570
 If you are interested, you can visit the URL here. 

00:05:30.570 --> 00:05:33.390
 Watch some of the best apps using Material Design 

00:05:33.390 --> 00:05:36.020
 And get inspiration to perfect your app 

00:05:36.020 --> 00:05:37.920
 Next, we want to specifically say an application. 

00:05:37.920 --> 00:05:41.350
 Great success with Material Design 

00:05:41.350 --> 00:05:42.667
 This app is Trello 

00:05:42.667 --> 00:05:44.250
 With this app 

00:05:44.250 --> 00:05:45.551
 No matter how big the project is, you can easily track it 

00:05:45.551 --> 00:05:48.050
 If you are working with a large team 

00:05:48.050 --> 00:05:50.380
 And you think that a lengthy email conversation 

00:05:50.380 --> 00:05:53.070
 This app will be very useful if the old version of the spreadsheet doesn’t meet your needs. 

00:05:53.070 --> 00:05:56.660
 So in the process of improving the Android app 

00:05:56.660 --> 00:05:59.090
 Trello takes Material Design as the mainstay of investment 

00:05:59.090 --> 00:06:02.000
 Moreover, their mobile field leaders have said 

00:06:02.000 --> 00:06:06.030
 Focusing on the pursuit of simplicity is a major focus of the use of Material Design. 

00:06:06.030 --> 00:06:07.940
 Material Design is not only beautiful 

00:06:07.940 --> 00:06:10.280
 It did create extraordinary results for Trello. 

00:06:10.280 --> 00:06:13.180
 You can see that the number of sessions per user per week has increased by 10%. 

00:06:13.180 --> 00:06:17.750
 The number of bulletin boards created in each user session has increased by 42% 

00:06:17.750 --> 00:06:21.370
 In each session 

00:06:21.370 --> 00:06:23.360
 The number of users who added bulletin boards increased by 63%. 

00:06:23.360 --> 00:06:26.220
 We believe that the reason for such outstanding results is due to the redesign of Material Design. 

00:06:26.220 --> 00:06:29.040
 Simplified tasks in the app 

00:06:29.040 --> 00:06:32.260
 Make features easier to discover 

00:06:32.260 --> 00:06:34.590
 The user said that the interface has become more interesting. 

00:06:34.590 --> 00:06:38.070
 At the same time, it also has a greater appeal to users. 

00:06:38.070 --> 00:06:40.600
 Last year, many developers told us 

00:06:40.600 --> 00:06:43.420
 Material Design looks really interesting, cool and practical 

00:06:43.420 --> 00:06:44.310
 But do you know? 

00:06:44.310 --> 00:06:46.020
 I will need to get more resources. 

00:06:46.020 --> 00:06:49.880
 To make it easier to use Material Design 

00:06:49.880 --> 00:06:50.380
 Complete the design work 

00:06:50.380 --> 00:06:51.500
 We heard everyone’s voice. 

00:06:51.500 --> 00:06:52.430
 Also fully understand 

00:06:52.430 --> 00:06:56.300
 So we have adopted these new resources listed on the left this year. 

00:06:56.300 --> 00:06:58.630
 I will introduce these resources one by one today. 

00:06:58.630 --> 00:07:00.810
 In addition, we have also expanded the specifications of Material Design. 

00:07:00.810 --> 00:07:04.120
 To add a new set of cool widgets, layouts, etc. 

00:07:04.120 --> 00:07:06.390
 That is the one listed on the right 

00:07:06.390 --> 00:07:09.770
 It is highly recommended that you go online to view these contents. 

00:07:09.770 --> 00:07:13.130
 If you haven't visited design.google.com yet 

00:07:13.130 --> 00:07:14.760
 Please take the time to see 

00:07:14.760 --> 00:07:16.480
 This is Google’s first dedicated to provide 

00:07:16.480 --> 00:07:19.989
 Website with information about all aspects of home design 

00:07:19.989 --> 00:07:21.780
 You can see it on this website. 

00:07:21.780 --> 00:07:23.620
 Everything I said today 

00:07:23.620 --> 00:07:25.880
 Here you can see what's new in Material Design. 

00:07:25.880 --> 00:07:29.830
 Get detailed guides and even find sample code 

00:07:29.830 --> 00:07:32.070
 We hope that the designer's work can be made easier 

00:07:32.070 --> 00:07:34.780
 It takes a lot of time to generate icons in the past. 

00:07:34.780 --> 00:07:37.160
 And now, we are about to provide a huge new resource library. 

00:07:37.160 --> 00:07:39.320
 It contains a variety of icons optimized for Material Design. 

00:07:39.320 --> 00:07:41.990
 This is a great starting point for creating your own app. 

00:07:41.990 --> 00:07:44.730
 There is also a benefit to using the icon of this new repository. 

00:07:44.730 --> 00:07:47.080
 That is, users may have seen these icons in other apps. 

00:07:47.080 --> 00:07:51.900
 This makes it easier for users to discover your app. 

00:07:51.900 --> 00:07:53.570
 We also heard many developers say 

00:07:53.570 --> 00:07:55.310
 They hope to learn more 

00:07:55.310 --> 00:07:57.500
 For all kinds of Android devices on the market 

00:07:57.500 --> 00:07:58.750
 Design specifications provided 

00:07:58.750 --> 00:08:01.410
 With this new device tool 

00:08:01.410 --> 00:08:03.470
 Everyone can learn a lot of information that has not been known before. 

00:08:03.470 --> 00:08:07.850
 Even including Material Design guides for various device recommendations 

00:08:07.850 --> 00:08:09.790
 Now I want to come last year, I heard the most people’s request is 

00:08:09.790 --> 00:08:13.050
 If Google can provide a lot 

00:08:13.050 --> 00:08:14.920
 Reusable Material Design component repository 

00:08:14.920 --> 00:08:16.810
 That would be great 

00:08:16.810 --> 00:08:18.520
 In this way, each development team is building an application. 

00:08:18.520 --> 00:08:20.270
 You don’t have to do it again and again 

00:08:20.270 --> 00:08:21.690
 Make the same material from scratch 

00:08:21.690 --> 00:08:22.670
 We totally agree with this 

00:08:22.670 --> 00:08:24.419
 We don't want anyone here. 

00:08:24.419 --> 00:08:25.620
 Wasting time to create the same content 

00:08:25.620 --> 00:08:27.932
 So we created these new support repositories 

00:08:27.932 --> 00:08:31.800
 It’s easy to use these libraries with the Android Studio SDK administrator. 

00:08:31.800 --> 00:08:33.684
 We will introduce this tool later. 

00:08:33.684 --> 00:08:36.350
 If you want to see these support resources in the library 

00:08:36.350 --> 00:08:38.390
 All backwards compatible with older devices 

00:08:38.390 --> 00:08:41.250
 Or new or old style 

00:08:41.250 --> 00:08:44.230
 Can access google.com/design/spec 

00:08:44.230 --> 00:08:49.550
 This site will provide relevant screenshot tips and more details. 

00:08:49.550 --> 00:08:52.050
 If you are looking for a comprehensive overview of Material Design and a way to get started easily 

00:08:52.050 --> 00:08:54.950
 Take a look at what we offer on Udacity. 

00:08:54.950 --> 00:08:56.989
 New course called "Developer-specific Android Design" 

00:08:56.989 --> 00:08:58.530
 This course will be introduced to you step by step. 

00:08:58.530 --> 00:09:00.420
 Everything you need to know about Material Design 

00:09:00.420 --> 00:09:03.660
 Let you learn how to write code efficiently 

00:09:03.660 --> 00:09:06.200
 Create beautiful layouts 

00:09:06.200 --> 00:09:08.480
 Play the most effective use of Material Design 

00:09:08.480 --> 00:09:09.940
 Ok, we’ve talked about the design. 

00:09:09.940 --> 00:09:12.910
 Next, we continue to discuss the development aspects. 

00:09:12.910 --> 00:09:17.120
 Needless to say, this year’s heavy news is that Android Marshmallow has come out. 

00:09:17.120 --> 00:09:17.730
 It is very cute 

00:09:17.730 --> 00:09:18.390
 Very flattering 

00:09:18.390 --> 00:09:19.420
 It feels very warm 

00:09:19.420 --> 00:09:22.240
 This latest Android version 

00:09:22.240 --> 00:09:23.370
 Also brought major changes to developers 

00:09:23.370 --> 00:09:26.870
 Today I want to highlight some of the two most important changes. 

00:09:26.870 --> 00:09:29.860
 The first is a new runtime permission mode 

00:09:29.860 --> 00:09:32.680
 The second change is 

00:09:32.680 --> 00:09:36.010
 Some new features that help users save battery power 

00:09:36.010 --> 00:09:38.550
 Next, let's talk about permissions 

00:09:38.550 --> 00:09:41.250
 If you want to use any of the Android Marshmallow APIs 

00:09:41.250 --> 00:09:44.240
 For example API 23 then you have to convert your app 

00:09:44.240 --> 00:09:46.790
 Use this new runtime permission mode instead 

00:09:46.790 --> 00:09:48.220
 Runtime permissions are great patterns 

00:09:48.220 --> 00:09:50.310
 Because it gives users more control 

00:09:50.310 --> 00:09:51.660
 Own private information 

00:09:51.660 --> 00:09:54.220
 In fact, at last year's Playtime EMEA conference 

00:09:54.220 --> 00:09:55.470
 Someone has already asked us this request. 

00:09:55.470 --> 00:09:57.460
 This mode is also very practical for developers. 

00:09:57.460 --> 00:09:59.620
 Because it helps to improve your app’s 

00:09:59.620 --> 00:10:02.250
 Installation rate and update rate 

00:10:02.250 --> 00:10:05.480
 Everyone has the Android version currently in use. 

00:10:05.480 --> 00:10:08.100
 Have you seen this process? 

00:10:08.100 --> 00:10:09.900
 When the user installs the app 

00:10:09.900 --> 00:10:12.930
 User must accept all permission requirements 

00:10:12.930 --> 00:10:14.400
 The requirements shown on the second screen 

00:10:14.400 --> 00:10:16.040
 May make some users discouraged 

00:10:16.040 --> 00:10:17.490
 It's like a huge obstacle, right? 

00:10:17.490 --> 00:10:19.662
 This is what the user sees on Lollipop. 

00:10:19.662 --> 00:10:21.370
 On the second screen, you can see 

00:10:21.370 --> 00:10:23.250
 The user has to agree to accept all the requirements 

00:10:23.250 --> 00:10:25.084
 If any of them 

00:10:25.084 --> 00:10:26.833
 Information they do not want to disclose 

00:10:26.833 --> 00:10:29.510
 Then the only thing they can do is cancel the installation. 

00:10:29.510 --> 00:10:31.385
 Then, look for other apps that don't have this permission requirement. 

00:10:31.385 --> 00:10:34.350
 I think you don’t want to see this result. 

00:10:34.350 --> 00:10:37.450
 In the Marshmallow version 

00:10:37.450 --> 00:10:40.250
 We didn't force this scary dialog to be displayed. 

00:10:40.250 --> 00:10:41.070
 So that users can install the app directly 

00:10:41.070 --> 00:10:42.920
 When the user installs the app 

00:10:42.920 --> 00:10:44.240
 No need to agree to any permission requirements 

00:10:44.240 --> 00:10:46.240
 When the user launches the app for the first time 

00:10:46.240 --> 00:10:48.370
 Have access to the required permissions 

00:10:48.370 --> 00:10:50.300
 And the app will only show them the appropriate tips. 

00:10:50.300 --> 00:10:53.860
 They can choose whether or not to accept 

00:10:53.860 --> 00:10:56.576
 This is the first time the user runs the app. 

00:10:56.576 --> 00:10:57.700
 The picture you see 

00:10:57.700 --> 00:10:59.560
 This is the display effect of the prompt window. 

00:10:59.560 --> 00:11:01.450
 Next, everyone should think of it 

00:11:01.450 --> 00:11:03.830
 Users may click "Allow" or "Reject" 

00:11:03.830 --> 00:11:05.829
 There is an important detail to note here. 

00:11:05.829 --> 00:11:07.620
 That is, when the system first asks for permission 

00:11:07.620 --> 00:11:09.070
 Users may click "Reject", right? 

00:11:09.070 --> 00:11:10.100
 This situation may happen 

00:11:10.100 --> 00:11:12.351
 This may happen because 

00:11:12.351 --> 00:11:14.641
 The user does not understand the request or the user may just have a general glance 

00:11:14.641 --> 00:11:15.640
 Did not read the contents of the screen carefully 

00:11:15.640 --> 00:11:17.840
 When the user first rejects the permission request 

00:11:17.840 --> 00:11:19.290
 It’s no big deal for everyone. 

00:11:19.290 --> 00:11:21.930
 In this situation 

00:11:21.930 --> 00:11:23.210
 You can request permission requests later through the app. 

00:11:23.210 --> 00:11:26.000
 If the user clicks "Reject" on the dialog box for the second time 

00:11:26.000 --> 00:11:28.620
 This dialog will appear 

00:11:28.620 --> 00:11:30.380
 You can see the "Do not ask again" option above. 

00:11:30.380 --> 00:11:32.550
 At this time, you should pay more attention to it. 

00:11:32.550 --> 00:11:34.702
 Because if the user has selected this checkbox 

00:11:34.702 --> 00:11:35.910
 The system will not display the prompt again 

00:11:35.910 --> 00:11:37.326
 In this way, if they later 

00:11:37.326 --> 00:11:39.520
 Changed the idea to enable the corresponding permission request 

00:11:39.520 --> 00:11:41.800
 You need to go to the "Settings" section to do the appropriate action. 

00:11:41.800 --> 00:11:44.960
 It is important to say that setting the following 

00:11:44.960 --> 00:11:48.370
 Use all users of Android Marshmallow 

00:11:48.370 --> 00:11:51.310
 You can go to the Settings page to enable or disable 

00:11:51.310 --> 00:11:53.220
 Permissions for any app on the Marshmallow device 

00:11:53.220 --> 00:11:55.050
 These apps even include not yet updated to 

00:11:55.050 --> 00:11:57.900
 New runtime permission mode application 

00:11:57.900 --> 00:12:00.380
 If the user executes one of the unupdated apps 

00:12:00.380 --> 00:12:03.390
 And disabled a permission 

00:12:03.390 --> 00:12:04.420
 Then they will see a warning message 

00:12:04.420 --> 00:12:06.230
 But after that, your app may 

00:12:06.230 --> 00:12:08.510
 Unexpected health 

00:12:08.510 --> 00:12:10.150
 This may be confusing to the user 

00:12:10.150 --> 00:12:12.000
 So to ensure your app 

00:12:12.000 --> 00:12:13.740
 In an orderly and predictable way 

00:12:13.740 --> 00:12:16.770
 Running on a Marshmallow device 

00:12:16.770 --> 00:12:19.850
 We strongly recommend that you as soon as possible 

00:12:19.850 --> 00:12:22.340
 Convert to runtime permission mode 

00:12:22.340 --> 00:12:23.860
 There is another benefit to doing this. 

00:12:23.860 --> 00:12:25.780
 In the past, have you ever encountered this situation? 

00:12:25.780 --> 00:12:27.430
 Is when you add a new permission to your app. 

00:12:27.430 --> 00:12:29.280
 Increase in update rate 

00:12:29.280 --> 00:12:31.140
 It’s not as smooth as it used to be 

00:12:31.140 --> 00:12:34.000
 Of course, we are aware of this problem. 

00:12:34.000 --> 00:12:37.084
 So decided in the new runtime permissions mode 

00:12:37.084 --> 00:12:38.500
 Let the user run at runtime 

00:12:38.500 --> 00:12:41.410
 One by one to agree to each permission request 

00:12:41.410 --> 00:12:43.610
 In this case, these updates will continue to proceed smoothly. 

00:12:43.610 --> 00:12:46.377
 Without any hindrance 

00:12:46.377 --> 00:12:48.210
 Now let's talk 

00:12:48.210 --> 00:12:49.930
 When you switch to the new permission mode 

00:12:49.930 --> 00:12:52.111
 How should we treat the user experience? 

00:12:52.111 --> 00:12:54.610
 You will see users experiencing these issues 

00:12:54.610 --> 00:12:57.760
 But the way to solve the problem is also good or bad. 

00:12:57.760 --> 00:13:00.490
 When the user understands why the system is asking for these permissions 

00:13:00.490 --> 00:13:03.450
 They are likely to agree to the permission request 

00:13:03.450 --> 00:13:06.480
 Next, we will gradually introduce four different methods. 

00:13:06.480 --> 00:13:08.130
 You can use these methods to more smoothly include permission request hints in your app. 

00:13:08.130 --> 00:13:13.370
 In order to meet user expectations 

00:13:13.370 --> 00:13:15.220
 The first method is 

00:13:15.220 --> 00:13:16.840
 Some applications will provide tutorials at the beginning. 

00:13:16.840 --> 00:13:19.370
 Introduce the main functions of the application 

00:13:19.370 --> 00:13:22.230
 You can use this link as a good entry point. 

00:13:22.230 --> 00:13:25.080
 And provide information about why an important authorization is requested here. 

00:13:25.080 --> 00:13:26.540
 Thus 

00:13:26.540 --> 00:13:28.280
 When you request these permissions in the later sections of the tutorial 

00:13:28.280 --> 00:13:30.480
 Users don't feel particularly surprised 

00:13:30.480 --> 00:13:32.670
 Because they know a little about your application. 

00:13:32.670 --> 00:13:35.220
 Although they have not used it before 

00:13:35.220 --> 00:13:38.060
 If your app makes an intentional request 

00:13:38.060 --> 00:13:40.870
 For example, the SMS app will request SMS permission. 

00:13:40.870 --> 00:13:43.380
 Just when the user first runs the app 

00:13:43.380 --> 00:13:45.430
 Just prompt them and you will be fine. 

00:13:45.430 --> 00:13:46.820
 However, this approach is more risky 

00:13:46.820 --> 00:13:48.195
 Because if you feel that the intention is clear 

00:13:48.195 --> 00:13:50.240
 And users don’t think that the result is that your SMS app can’t 

00:13:50.240 --> 00:13:53.450
 Sending a text message is too bad. 

00:13:53.450 --> 00:13:57.010
 Therefore, you must make sure that the user is very clear about what is going on. 

00:13:57.010 --> 00:13:59.830
 Otherwise, consider using the tutorial. 

00:13:59.830 --> 00:14:01.810
 This is when the user first launches the app. 

00:14:01.810 --> 00:14:02.890
 Example of requesting permission requirements 

00:14:02.890 --> 00:14:05.940
 But in most cases, the app is only 

00:14:05.940 --> 00:14:08.190
 Some authorization is required when a user uses a particular feature 

00:14:08.190 --> 00:14:09.750
 Now let's discuss this situation. 

00:14:09.750 --> 00:14:12.670
 When a user first uses a feature that requires permission 

00:14:12.670 --> 00:14:15.120
 for example 

00:14:15.120 --> 00:14:17.870
 Request to use a microphone to record a utterance 

00:14:17.870 --> 00:14:21.220
 Then the best is in the user 

00:14:21.220 --> 00:14:23.350
 Prompt the user when performing the operation, not before the user performs the action 

00:14:23.350 --> 00:14:25.000
 This way you don’t have to go to users who don’t plan to add voice notes. 

00:14:25.000 --> 00:14:27.510
 Show this dialog 

00:14:27.510 --> 00:14:29.255
 There is also no need to request users to grant microphone access 

00:14:29.255 --> 00:14:30.630
 But if they plan to use this feature 

00:14:30.630 --> 00:14:32.338
 Then you can request authorization when they perform the appropriate action 

00:14:32.338 --> 00:14:35.890
 So the user is very clear about what is going on. 

00:14:35.890 --> 00:14:37.560
 In other cases 

00:14:37.560 --> 00:14:39.380
 You must first provide the user with details 

00:14:39.380 --> 00:14:41.770
 Let them know more about how a feature works 

00:14:41.770 --> 00:14:43.430
 Ask them permission again 

00:14:43.430 --> 00:14:45.780
 In this example 

00:14:45.780 --> 00:14:47.910
 We have detailed the use of this feature. 

00:14:47.910 --> 00:14:50.192
 Then, the user can choose to try this feature or refuse to use it. 

00:14:50.192 --> 00:14:51.900
 If they decide to give it a try 

00:14:51.900 --> 00:14:54.191
 The system will get the relevant background knowledge of the function after the user 

00:14:54.191 --> 00:14:56.800
 Prompt to request permission 

00:14:56.800 --> 00:14:59.450
 Even if you think you are clear 

00:14:59.450 --> 00:15:00.960
 Reason for requesting specific permissions 

00:15:00.960 --> 00:15:04.510
 And at the appropriate time to request permission, the user may still refuse 

00:15:04.510 --> 00:15:05.970
 if so 

00:15:05.970 --> 00:15:09.130
 It’s best to clearly explain to the user within the app. 

00:15:09.130 --> 00:15:12.790
 Why some parts of the app may not work properly 

00:15:12.790 --> 00:15:15.120
 Then provide a link to "Settings" 

00:15:15.120 --> 00:15:17.240
 So that they can enable the permissions 

00:15:17.240 --> 00:15:19.739
 In this case the application will use Material Design Snackbar 

00:15:19.739 --> 00:15:21.030
 Show link at bottom 

00:15:21.030 --> 00:15:23.336
 This is a good suggestion 

00:15:23.336 --> 00:15:24.710
 In addition, this is also an excellent time 

00:15:24.710 --> 00:15:28.580
 To reconsider using Android Intent 

00:15:28.580 --> 00:15:30.139
 Is it a way to better solve this problem? 

00:15:30.139 --> 00:15:32.430
 In many cases, you can use Intent 

00:15:32.430 --> 00:15:35.860
 To replace the permissions, this is a more considerate user. 

00:15:35.860 --> 00:15:37.690
 In general 

00:15:37.690 --> 00:15:40.470
 The above is the runtime permission process for the application to use Android Marshmallow. 

00:15:40.470 --> 00:15:42.345
 All the benefits 

00:15:42.345 --> 00:15:43.970
 Next, let’s talk about it. 

00:15:43.970 --> 00:15:45.820
 Some of my favorite Marshmallow features 

00:15:45.820 --> 00:15:47.890
 These features help extend your battery life 

00:15:47.890 --> 00:15:49.332
 I believe everyone knows this is very important. 

00:15:49.332 --> 00:15:51.040
 As a developer, you have to make sure your application 

00:15:51.040 --> 00:15:54.080
 Can be used perfectly with these new features 

00:15:54.080 --> 00:15:56.120
 First, let’s talk about the low power consumption mode. 

00:15:56.120 --> 00:15:58.000
 For example, you will have your own phone or tablet 

00:15:58.000 --> 00:15:59.777
 In the living room 

00:15:59.777 --> 00:16:00.610
 No power connected 

00:16:00.610 --> 00:16:01.276
 Then you go to sleep 

00:16:01.276 --> 00:16:02.550
 The next morning, when you return to the living room 

00:16:02.550 --> 00:16:05.020
 You will want your phone or tablet to still be fully powered 

00:16:05.020 --> 00:16:06.140
 Instead of having no electricity 

00:16:06.140 --> 00:16:07.640
 Marshmallow can do this for you. 

00:16:07.640 --> 00:16:10.056
 Because Marshmallow can detect 

00:16:10.056 --> 00:16:10.850
 Whether the device has basically entered the idle state 

00:16:10.850 --> 00:16:13.600
 Basically, your device is like snoring 

00:16:13.600 --> 00:16:15.760
 When your app is in low power mode 

00:16:15.760 --> 00:16:19.000
 These features are limited 

00:16:19.000 --> 00:16:21.540
 At some point, actually 

00:16:21.540 --> 00:16:23.810
 The entire device is still in use 

00:16:23.810 --> 00:16:27.080
 But only one of your apps is not in use 

00:16:27.080 --> 00:16:29.470
 In this case, all applications that are not in use 

00:16:29.470 --> 00:16:31.170
 Will enter standby mode 

00:16:31.170 --> 00:16:33.862
 This means that these apps save battery 

00:16:33.862 --> 00:16:35.320
 These are used by Android to determine 

00:16:35.320 --> 00:16:38.820
 Whether the corresponding application is in an inactive state 

00:16:38.820 --> 00:16:41.410
 When an app is in standby mode 

00:16:41.410 --> 00:16:44.457
 These features will be affected 

00:16:44.457 --> 00:16:46.040
 Basically, as a developer 

00:16:46.040 --> 00:16:47.930
 The most important thing you have to do is 

00:16:47.930 --> 00:16:51.520
 Use ADB to execute certain commands 

00:16:51.520 --> 00:16:53.760
 In order to be able to simulate these conditions on the device 

00:16:53.760 --> 00:16:57.410
 And test to see if your app still works as expected 

00:16:57.410 --> 00:16:59.400
 If you really need to communicate some messages 

00:16:59.400 --> 00:17:01.360
 And the situation is more urgent 

00:17:01.360 --> 00:17:03.960
 We also offer a special DCM API 

00:17:03.960 --> 00:17:06.040
 With this API, you can send high priority messages 

00:17:06.040 --> 00:17:08.839
 Everyone here must give it a try. 

00:17:08.839 --> 00:17:10.970
 Let's talk about Android Studio 

00:17:10.970 --> 00:17:13.750
 Is anyone using Studio in the room? 

00:17:13.750 --> 00:17:15.509
 Some people have used it, great! 

00:17:15.509 --> 00:17:17.800
 Next, let's take a look 

00:17:17.800 --> 00:17:18.300
 Some recently released features 

00:17:21.130 --> 00:17:21.640
 right here 

00:17:21.640 --> 00:17:24.349
 We launched Android Studio in 2013. 

00:17:24.349 --> 00:17:27.230
 This is basically the official IDE of Google. 

00:17:27.230 --> 00:17:29.050
 If you are still using Eclipse 

00:17:29.050 --> 00:17:30.802
 Please note 

00:17:30.802 --> 00:17:31.760
 We will completely eliminate it before the end of this year. 

00:17:31.760 --> 00:17:35.150
 So, consider this migration at this time. 

00:17:35.150 --> 00:17:37.310
 These are the new features that have been released recently. 

00:17:37.310 --> 00:17:39.760
 Most applications don't require C++ code 

00:17:39.760 --> 00:17:43.050
 But some applications that require a high CPU 

00:17:43.050 --> 00:17:45.440
 Such as game engines, signal processing and physical simulation applications 

00:17:45.440 --> 00:17:47.750
 You need to use this type of code. 

00:17:47.750 --> 00:17:50.540
 If your app does have any of the special needs listed above 

00:17:50.540 --> 00:17:53.040
 You will be happy to hear about a message that is with Android Studio 

00:17:53.040 --> 00:17:57.330
 You can be assured in one project 

00:17:57.330 --> 00:17:58.870
 Use both C++ code and Java code 

00:17:58.870 --> 00:18:00.790
 Users like to run fast on their devices 

00:18:00.790 --> 00:18:03.010
 Strong adaptive ability 

00:18:03.010 --> 00:18:04.030
 And applications that don’t waste resources 

00:18:04.030 --> 00:18:05.910
 Android Studio provides three types of tools 

00:18:05.910 --> 00:18:08.520
 Can help you show extraordinary results in this area 

00:18:08.520 --> 00:18:12.110
 First, you can visually show resource usage in your app. 

00:18:12.110 --> 00:18:15.020
 Second, you can discover the data structure of wasted resources. 

00:18:15.020 --> 00:18:17.010
 Finally, you can understand 

00:18:17.010 --> 00:18:19.100
 The burden of your app on the user’s data plan 

00:18:19.100 --> 00:18:21.800
 And pinpoint exactly where to reduce traffic consumption 

00:18:21.800 --> 00:18:23.590
 The core of the Android strategy is 

00:18:23.590 --> 00:18:25.210
 Our unified building system 

00:18:25.210 --> 00:18:29.060
 We have recently made significant improvements to the performance of this system. 

00:18:29.060 --> 00:18:30.986
 If you want to create an interface in an intuitive way 

00:18:30.986 --> 00:18:32.360
 We have provided some new tools 

00:18:32.360 --> 00:18:35.500
 You can use these tools to drag and drop components 

00:18:35.500 --> 00:18:37.530
 And manage your resources more effectively 

00:18:37.530 --> 00:18:40.030
 Earlier, we mentioned Android Studio 

00:18:40.030 --> 00:18:41.570
 Can assist you with Material Design 

00:18:41.570 --> 00:18:45.120
 At this time, it is best to use the design support library. 

00:18:45.120 --> 00:18:47.520
 You only need to use Android Studio 

00:18:47.520 --> 00:18:49.790
 Will be cool Material Design widgets 

00:18:49.790 --> 00:18:51.030
 Drag and drop to your app 

00:18:51.030 --> 00:18:55.330
 And they will be backward compatible with Android 2.2 

00:18:55.330 --> 00:18:57.384
 In addition to the Android design library 

00:18:57.384 --> 00:18:58.800
 We also offer a range of other libraries 

00:18:58.800 --> 00:19:00.560
 You can access and learn more about these libraries online. 

00:19:00.560 --> 00:19:03.340
 These libraries are very helpful in speeding up the development process. 

00:19:03.340 --> 00:19:04.910
 Finally, Android Studio 

00:19:04.910 --> 00:19:08.200
 It also makes it easy to port your app to a new device type. 

00:19:08.200 --> 00:19:10.340
 You can quickly create a brand new Android Wear theme 

00:19:10.340 --> 00:19:13.027
 Even simulating the Android Auto app 

00:19:13.027 --> 00:19:15.110
 Finally, let’s talk about how to 

00:19:15.110 --> 00:19:18.090
 Users distribute apps and how to build your business 

00:19:18.090 --> 00:19:20.480
 The main function of Google Play is 

00:19:20.480 --> 00:19:22.640
 Let your app reach users who really need it 

00:19:22.640 --> 00:19:24.210
 In addition, we have provided some great tools. 

00:19:24.210 --> 00:19:25.390
 To help you improve the quality of your app. 

00:19:25.390 --> 00:19:27.514
 However, I want to tell you some good news first. 

00:19:27.514 --> 00:19:32.160
 The current file size limit for APK is 50MB, right? 

00:19:32.160 --> 00:19:36.190
 The upper limit is 50MB 

00:19:36.190 --> 00:19:39.850
 Whose application size is close to 50MB? 

00:19:39.850 --> 00:19:41.840
 Maybe close to 50MB, 49MB? 

00:19:41.840 --> 00:19:45.420
 If anyone wants to install an app with a file size larger than 50MB 

00:19:45.420 --> 00:19:47.019
 The system will display this warning, right? 

00:19:47.019 --> 00:19:48.560
 Someone saw this warning after 

00:19:48.560 --> 00:19:51.780
 Feel a little worried, so click "Back" 

00:19:51.780 --> 00:19:53.995
 Or, you have to spend some time 

00:19:53.995 --> 00:19:55.120
 To set the APK extension file 

00:19:55.120 --> 00:19:57.580
 Share a good news with you here. 

00:19:57.580 --> 00:19:59.355
 Google will announce today that the file size limit will be increased to 100MB. 

00:20:07.090 --> 00:20:08.280
 We are also very happy 

00:20:08.280 --> 00:20:10.870
 This time we have been working hard to prepare for this. 

00:20:10.870 --> 00:20:12.560
 Carry out a lot of testing 

00:20:12.560 --> 00:20:14.810
 Because we have to confirm this change 

00:20:14.810 --> 00:20:16.150
 Can work with a variety of equipment and operators 

00:20:16.150 --> 00:20:18.690
 But we hope that everyone is the first to know this news. 

00:20:18.690 --> 00:20:22.750
 We will announce this news in a blog later today. 

00:20:22.750 --> 00:20:24.560
 We just want to remind one thing 

00:20:24.560 --> 00:20:30.070
 Even though we increase the APK file size limit to 100MB 

00:20:30.070 --> 00:20:32.590
 But users still like smaller APK files 

00:20:32.590 --> 00:20:36.397
 Please do not let the file size exceed 50MB when all is not necessary. 

00:20:36.397 --> 00:20:38.230
 Now let’s talk about it in detail. 

00:20:38.230 --> 00:20:42.250
 How to use iterations on Google Play to test new ideas 

00:20:42.250 --> 00:20:44.660
 We offer a complete set of specialized tools 

00:20:44.660 --> 00:20:47.970
 Mark also mentioned these tools before, these tools can help you get feedback early in development. 

00:20:47.970 --> 00:20:49.990
 We recommend every developer 

00:20:49.990 --> 00:20:51.760
 Take these best practices 

00:20:51.760 --> 00:20:54.064
 Our best and most successful developer 

00:20:54.064 --> 00:20:54.730
 Are using these tools 

00:20:54.730 --> 00:20:56.104
 If you haven't used these tools yet 

00:20:56.104 --> 00:20:57.950
 Then you will definitely miss it 

00:20:57.950 --> 00:21:00.390
 A great opportunity to build high quality applications 

00:21:00.390 --> 00:21:03.680
 Is anyone using the Beta test? 

00:21:03.680 --> 00:21:06.000
 Great, I’m so happy to see so many people raising their hands. 

00:21:06.000 --> 00:21:08.000
 This is a very special feature on Google Play. 

00:21:08.000 --> 00:21:10.630
 You can distribute your app to a small number of users. 

00:21:10.630 --> 00:21:13.207
 And get feedback early 

00:21:13.207 --> 00:21:15.290
 Lest after a full release 

00:21:15.290 --> 00:21:16.470
 Pray again, don't go wrong 

00:21:16.470 --> 00:21:19.390
 With beta testing users can choose to join the test 

00:21:19.390 --> 00:21:22.990
 But they can’t leave a review, it’s very cool 

00:21:22.990 --> 00:21:24.950
 If you haven’t used it then you must try it. 

00:21:24.950 --> 00:21:28.230
 Developers tell us that beta testing is a great feature 

00:21:28.230 --> 00:21:32.050
 But we want to find out more ways 

00:21:32.050 --> 00:21:32.880
 Make it easy for users to join in 

00:21:32.880 --> 00:21:35.020
 So this year, we announced two changes. 

00:21:35.020 --> 00:21:37.210
 The first change is the open beta test 

00:21:37.210 --> 00:21:40.060
 If you need it, you can actually 

00:21:40.060 --> 00:21:42.310
 Distribute a link to your open beta test 

00:21:42.310 --> 00:21:44.380
 Users simply click on the link 

00:21:44.380 --> 00:21:46.630
 You can go to a similar page and add it to the test. 

00:21:46.630 --> 00:21:47.220
 It’s that simple 

00:21:47.220 --> 00:21:49.230
 Users can join the test rank with a single click 

00:21:49.230 --> 00:21:51.790
 Developers can come this way 

00:21:51.790 --> 00:21:53.340
 Develop a large beta test community 

00:21:53.340 --> 00:21:54.950
 Of course, you can still choose 

00:21:54.950 --> 00:21:56.960
 Create a dedicated closed beta test 

00:21:56.960 --> 00:21:59.250
 However, now you can still 

00:21:59.250 --> 00:22:00.610
 Create this type of test with the email address option 

00:22:00.610 --> 00:22:03.550
 We launched this option early this year. 

00:22:03.550 --> 00:22:05.950
 Let’s take a look at why the Guardian will tell us 

00:22:05.950 --> 00:22:07.700
 They are big fans of beta testing 

00:22:07.700 --> 00:22:09.250
 In the past six months 

00:22:09.250 --> 00:22:12.800
 Almost every function of them has been tested after beta test. 

00:22:12.800 --> 00:22:14.520
 Will be released 

00:22:14.520 --> 00:22:18.150
 On average, they need to improve three versions before each official release. 

00:22:18.150 --> 00:22:20.060
 They said that this feature is indeed 

00:22:20.060 --> 00:22:21.960
 Help them speed up development 

00:22:21.960 --> 00:22:23.490
 Tested by Beta 

00:22:23.490 --> 00:22:26.430
 They can safely try out new ideas without risking the brand. 

00:22:26.430 --> 00:22:28.490
 In addition, it also helped them collect some data 

00:22:28.490 --> 00:22:30.450
 Enabling them to provide this data to stakeholders 

00:22:30.450 --> 00:22:31.950
 To help them make tough decisions 

00:22:31.950 --> 00:22:34.820
 In the past, it took them a month to release new features. 

00:22:34.820 --> 00:22:37.810
 It’s now less than two weeks. 

00:22:37.810 --> 00:22:41.030
 Alternatively, you can also post it in stages 

00:22:41.030 --> 00:22:43.560
 Make sure your app doesn’t post any errors to new users 

00:22:43.560 --> 00:22:45.700
 Basically you just have to launch your new version. 

00:22:45.700 --> 00:22:47.210
 But not for all users 

00:22:47.210 --> 00:22:48.540
 But for a certain percentage of users 

00:22:48.540 --> 00:22:52.080
 You can continue to increase this percentage over time 

00:22:52.080 --> 00:22:53.490
 At this year's Google I/O conference 

00:22:53.490 --> 00:22:55.490
 We announced the upcoming launch of Cloud Test Lab 

00:22:55.490 --> 00:22:58.389
 We are currently testing it with a small group of developers. 

00:22:58.389 --> 00:23:00.930
 If everyone is interested 

00:23:00.930 --> 00:23:01.870
 Can access the Developer Console to apply for participation in the test 

00:23:01.870 --> 00:23:05.090
 I hope we can add you to this beta test soon. 

00:23:05.090 --> 00:23:07.640
 Google Play wants to do a mission with the Cloud Test Lab 

00:23:07.640 --> 00:23:11.120
 That is what we intend to apply to all Alpha and Beta apps. 

00:23:11.120 --> 00:23:14.390
 Send to a batch of physical devices for testing 

00:23:14.390 --> 00:23:17.010
 You will get the test results soon. 

00:23:17.010 --> 00:23:19.820
 For those who haven’t tested Alpha and Beta yet. 

00:23:19.820 --> 00:23:21.050
 This is another good reason to try this feature. 

00:23:21.050 --> 00:23:23.842
 It can help you detect any major problems 

00:23:23.842 --> 00:23:25.800
 We heard some developers who tried the old version said 

00:23:25.800 --> 00:23:28.110
 The first reaction after they finished the test was 

00:23:28.110 --> 00:23:30.850
 I feel this feature is great. 

00:23:30.850 --> 00:23:32.970
 However, I want to write some very specific test scripts. 

00:23:32.970 --> 00:23:35.590
 On this particular device that is difficult for me to track 

00:23:35.590 --> 00:23:36.930
 carry out testing 

00:23:36.930 --> 00:23:39.480
 So we also intend to provide you with such a function. 

00:23:39.480 --> 00:23:41.350
 Via Android Studio 

00:23:41.350 --> 00:23:43.180
 You can write custom test scripts 

00:23:43.180 --> 00:23:45.720
 Then run on a virtual or physical device 

00:23:45.720 --> 00:23:49.960
 Especially for the devices you want to use. 

00:23:49.960 --> 00:23:52.240
 This is all we have said today. 

00:23:52.240 --> 00:23:54.820
 First of all, we hope that everyone 

00:23:54.820 --> 00:23:56.420
 Create great apps and grow your business with Google Play 

00:23:56.420 --> 00:23:58.890
 In the design phase, benefit from massive new resources 

00:23:58.890 --> 00:24:01.540
 Material Design may be more than ever 

00:24:01.540 --> 00:24:03.150
 Easier to use 

00:24:03.150 --> 00:24:05.550
 Android Marshmallow during the development phase 

00:24:05.550 --> 00:24:07.640
 Bringing some major changes to developers 

00:24:07.640 --> 00:24:09.780
 Such as permissions and low power mode 

00:24:09.780 --> 00:24:11.700
 Android Studio and other resources 

00:24:11.700 --> 00:24:13.210
 Can assist you with testing 

00:24:13.210 --> 00:24:15.760
 Make sure you build high quality apps 

00:24:15.760 --> 00:24:18.420
 Finally, distribute quality apps 

00:24:18.420 --> 00:24:21.730
 Easier than ever because Play offers a variety of development center tools 

00:24:21.730 --> 00:24:24.590
 Helps you refine and test your new app over and over again 

00:24:24.590 --> 00:24:25.110
 thank you all 

00:24:28.110 --> 00:24:33.560
 [play music] 

