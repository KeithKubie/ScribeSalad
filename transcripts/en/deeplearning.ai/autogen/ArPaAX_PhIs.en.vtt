WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.240
 
welcome to this course on convolution

00:00:02.240 --> 00:00:02.250
welcome to this course on convolution
 

00:00:02.250 --> 00:00:04.430
welcome to this course on convolution
neural networks computer vision is one

00:00:04.430 --> 00:00:04.440
neural networks computer vision is one
 

00:00:04.440 --> 00:00:05.960
neural networks computer vision is one
of the area's that's been advancing

00:00:05.960 --> 00:00:05.970
of the area's that's been advancing
 

00:00:05.970 --> 00:00:07.909
of the area's that's been advancing
rapidly thanks to deep learning deep

00:00:07.909 --> 00:00:07.919
rapidly thanks to deep learning deep
 

00:00:07.919 --> 00:00:10.310
rapidly thanks to deep learning deep
learning computer vision is now helping

00:00:10.310 --> 00:00:10.320
learning computer vision is now helping
 

00:00:10.320 --> 00:00:12.259
learning computer vision is now helping
self-driving cars figure out where are

00:00:12.259 --> 00:00:12.269
self-driving cars figure out where are
 

00:00:12.269 --> 00:00:13.820
self-driving cars figure out where are
the other cars and the pedestrians

00:00:13.820 --> 00:00:13.830
the other cars and the pedestrians
 

00:00:13.830 --> 00:00:15.259
the other cars and the pedestrians
around it so it's avoid them

00:00:15.259 --> 00:00:15.269
around it so it's avoid them
 

00:00:15.269 --> 00:00:17.540
around it so it's avoid them
is making face recognition work much

00:00:17.540 --> 00:00:17.550
is making face recognition work much
 

00:00:17.550 --> 00:00:19.429
is making face recognition work much
better than ever before so that perhaps

00:00:19.429 --> 00:00:19.439
better than ever before so that perhaps
 

00:00:19.439 --> 00:00:21.290
better than ever before so that perhaps
some of you will soon or perhaps already

00:00:21.290 --> 00:00:21.300
some of you will soon or perhaps already
 

00:00:21.300 --> 00:00:23.960
some of you will soon or perhaps already
be able to unlock a phone unlock even a

00:00:23.960 --> 00:00:23.970
be able to unlock a phone unlock even a
 

00:00:23.970 --> 00:00:26.509
be able to unlock a phone unlock even a
door using just your face and if you

00:00:26.509 --> 00:00:26.519
door using just your face and if you
 

00:00:26.519 --> 00:00:28.040
door using just your face and if you
look on your cell phone I bet you many

00:00:28.040 --> 00:00:28.050
look on your cell phone I bet you many
 

00:00:28.050 --> 00:00:29.839
look on your cell phone I bet you many
apps that show you pictures of food or

00:00:29.839 --> 00:00:29.849
apps that show you pictures of food or
 

00:00:29.849 --> 00:00:32.060
apps that show you pictures of food or
pictures of Aalto or just fun pictures

00:00:32.060 --> 00:00:32.070
pictures of Aalto or just fun pictures
 

00:00:32.070 --> 00:00:33.830
pictures of Aalto or just fun pictures
of scenery and some of the companies

00:00:33.830 --> 00:00:33.840
of scenery and some of the companies
 

00:00:33.840 --> 00:00:35.510
of scenery and some of the companies
that build those apps are using deep

00:00:35.510 --> 00:00:35.520
that build those apps are using deep
 

00:00:35.520 --> 00:00:37.250
that build those apps are using deep
learning to he'll show you the most

00:00:37.250 --> 00:00:37.260
learning to he'll show you the most
 

00:00:37.260 --> 00:00:38.869
learning to he'll show you the most
attractive of the most beautiful or the

00:00:38.869 --> 00:00:38.879
attractive of the most beautiful or the
 

00:00:38.879 --> 00:00:41.360
attractive of the most beautiful or the
most relevant pictures and I think deep

00:00:41.360 --> 00:00:41.370
most relevant pictures and I think deep
 

00:00:41.370 --> 00:00:43.250
most relevant pictures and I think deep
learning is even enabling new types of

00:00:43.250 --> 00:00:43.260
learning is even enabling new types of
 

00:00:43.260 --> 00:00:46.700
learning is even enabling new types of
art to be created so I think the two

00:00:46.700 --> 00:00:46.710
art to be created so I think the two
 

00:00:46.710 --> 00:00:48.770
art to be created so I think the two
reasons I'm excited about deep learning

00:00:48.770 --> 00:00:48.780
reasons I'm excited about deep learning
 

00:00:48.780 --> 00:00:50.510
reasons I'm excited about deep learning
frequency vision and why I think you

00:00:50.510 --> 00:00:50.520
frequency vision and why I think you
 

00:00:50.520 --> 00:00:53.810
frequency vision and why I think you
might be to first rapid advances in

00:00:53.810 --> 00:00:53.820
might be to first rapid advances in
 

00:00:53.820 --> 00:00:56.240
might be to first rapid advances in
computer vision are enabling brand new

00:00:56.240 --> 00:00:56.250
computer vision are enabling brand new
 

00:00:56.250 --> 00:00:58.250
computer vision are enabling brand new
applications to be built they just were

00:00:58.250 --> 00:00:58.260
applications to be built they just were
 

00:00:58.260 --> 00:01:00.260
applications to be built they just were
impossible a few years ago and by

00:01:00.260 --> 00:01:00.270
impossible a few years ago and by
 

00:01:00.270 --> 00:01:02.240
impossible a few years ago and by
learning these tools perhaps you will be

00:01:02.240 --> 00:01:02.250
learning these tools perhaps you will be
 

00:01:02.250 --> 00:01:03.860
learning these tools perhaps you will be
able to invent some of these new

00:01:03.860 --> 00:01:03.870
able to invent some of these new
 

00:01:03.870 --> 00:01:07.100
able to invent some of these new
products and applications second even if

00:01:07.100 --> 00:01:07.110
products and applications second even if
 

00:01:07.110 --> 00:01:08.539
products and applications second even if
you don't end up building computer

00:01:08.539 --> 00:01:08.549
you don't end up building computer
 

00:01:08.549 --> 00:01:10.460
you don't end up building computer
vision systems per se I found that

00:01:10.460 --> 00:01:10.470
vision systems per se I found that
 

00:01:10.470 --> 00:01:11.990
vision systems per se I found that
because the computer vision research

00:01:11.990 --> 00:01:12.000
because the computer vision research
 

00:01:12.000 --> 00:01:14.690
because the computer vision research
community has been so creative and so

00:01:14.690 --> 00:01:14.700
community has been so creative and so
 

00:01:14.700 --> 00:01:16.550
community has been so creative and so
inventive and coming up with new neural

00:01:16.550 --> 00:01:16.560
inventive and coming up with new neural
 

00:01:16.560 --> 00:01:18.380
inventive and coming up with new neural
network architectures new algorithms is

00:01:18.380 --> 00:01:18.390
network architectures new algorithms is
 

00:01:18.390 --> 00:01:20.149
network architectures new algorithms is
actually inspire that creates a lot of

00:01:20.149 --> 00:01:20.159
actually inspire that creates a lot of
 

00:01:20.159 --> 00:01:21.260
actually inspire that creates a lot of
cross-fertilization

00:01:21.260 --> 00:01:21.270
cross-fertilization
 

00:01:21.270 --> 00:01:23.539
cross-fertilization
into other areas as well for example

00:01:23.539 --> 00:01:23.549
into other areas as well for example
 

00:01:23.549 --> 00:01:25.280
into other areas as well for example
when those work on speech recognition I

00:01:25.280 --> 00:01:25.290
when those work on speech recognition I
 

00:01:25.290 --> 00:01:27.080
when those work on speech recognition I
sometimes actually took inspiration from

00:01:27.080 --> 00:01:27.090
sometimes actually took inspiration from
 

00:01:27.090 --> 00:01:29.539
sometimes actually took inspiration from
ideas from computer vision and borrowed

00:01:29.539 --> 00:01:29.549
ideas from computer vision and borrowed
 

00:01:29.549 --> 00:01:31.999
ideas from computer vision and borrowed
them into the speech literature so even

00:01:31.999 --> 00:01:32.009
them into the speech literature so even
 

00:01:32.009 --> 00:01:33.469
them into the speech literature so even
if you don't end up working on confusion

00:01:33.469 --> 00:01:33.479
if you don't end up working on confusion
 

00:01:33.479 --> 00:01:35.390
if you don't end up working on confusion
I hope that you find some of the ideas

00:01:35.390 --> 00:01:35.400
I hope that you find some of the ideas
 

00:01:35.400 --> 00:01:37.130
I hope that you find some of the ideas
you learn about in this course hopeful

00:01:37.130 --> 00:01:37.140
you learn about in this course hopeful
 

00:01:37.140 --> 00:01:39.800
you learn about in this course hopeful
for some of your algorithms and your

00:01:39.800 --> 00:01:39.810
for some of your algorithms and your
 

00:01:39.810 --> 00:01:42.140
for some of your algorithms and your
your architectures so with that let's

00:01:42.140 --> 00:01:42.150
your architectures so with that let's
 

00:01:42.150 --> 00:01:42.770
your architectures so with that let's
get started

00:01:42.770 --> 00:01:42.780
get started
 

00:01:42.780 --> 00:01:45.230
get started
here are some examples of computer

00:01:45.230 --> 00:01:45.240
here are some examples of computer
 

00:01:45.240 --> 00:01:46.999
here are some examples of computer
vision problems we'll study in this

00:01:46.999 --> 00:01:47.009
vision problems we'll study in this
 

00:01:47.009 --> 00:01:49.850
vision problems we'll study in this
course you've already seen image

00:01:49.850 --> 00:01:49.860
course you've already seen image
 

00:01:49.860 --> 00:01:51.499
course you've already seen image
classification sometimes also called

00:01:51.499 --> 00:01:51.509
classification sometimes also called
 

00:01:51.509 --> 00:01:53.270
classification sometimes also called
image recognition where you might take

00:01:53.270 --> 00:01:53.280
image recognition where you might take
 

00:01:53.280 --> 00:01:56.389
image recognition where you might take
as input say a 64 by 64 image and try to

00:01:56.389 --> 00:01:56.399
as input say a 64 by 64 image and try to
 

00:01:56.399 --> 00:01:59.149
as input say a 64 by 64 image and try to
figure out if static at another example

00:01:59.149 --> 00:01:59.159
figure out if static at another example
 

00:01:59.159 --> 00:02:01.760
figure out if static at another example
of a computer vision problem is object

00:02:01.760 --> 00:02:01.770
of a computer vision problem is object
 

00:02:01.770 --> 00:02:03.740
of a computer vision problem is object
detection so if you're building a

00:02:03.740 --> 00:02:03.750
detection so if you're building a
 

00:02:03.750 --> 00:02:05.690
detection so if you're building a
self-driving car maybe you don't just

00:02:05.690 --> 00:02:05.700
self-driving car maybe you don't just
 

00:02:05.700 --> 00:02:06.889
self-driving car maybe you don't just
need to figure out if there are other

00:02:06.889 --> 00:02:06.899
need to figure out if there are other
 

00:02:06.899 --> 00:02:08.839
need to figure out if there are other
cars in this image but instead you need

00:02:08.839 --> 00:02:08.849
cars in this image but instead you need
 

00:02:08.849 --> 00:02:11.390
cars in this image but instead you need
to figure out the position of the other

00:02:11.390 --> 00:02:11.400
to figure out the position of the other
 

00:02:11.400 --> 00:02:13.640
to figure out the position of the other
cars in this picture so that your car

00:02:13.640 --> 00:02:13.650
cars in this picture so that your car
 

00:02:13.650 --> 00:02:15.260
cars in this picture so that your car
you can avoid them so an object

00:02:15.260 --> 00:02:15.270
you can avoid them so an object
 

00:02:15.270 --> 00:02:17.210
you can avoid them so an object
detection usually we have to not just

00:02:17.210 --> 00:02:17.220
detection usually we have to not just
 

00:02:17.220 --> 00:02:19.729
detection usually we have to not just
figure out that these other objects say

00:02:19.729 --> 00:02:19.739
figure out that these other objects say
 

00:02:19.739 --> 00:02:22.040
figure out that these other objects say
cause in the picture but also draw boxes

00:02:22.040 --> 00:02:22.050
cause in the picture but also draw boxes
 

00:02:22.050 --> 00:02:25.150
cause in the picture but also draw boxes
around them or have some other way of

00:02:25.150 --> 00:02:25.160
around them or have some other way of
 

00:02:25.160 --> 00:02:27.559
around them or have some other way of
recognizing where in the picture are

00:02:27.559 --> 00:02:27.569
recognizing where in the picture are
 

00:02:27.569 --> 00:02:30.380
recognizing where in the picture are
these objects and notice also in this

00:02:30.380 --> 00:02:30.390
these objects and notice also in this
 

00:02:30.390 --> 00:02:33.050
these objects and notice also in this
example that there can be multiple cars

00:02:33.050 --> 00:02:33.060
example that there can be multiple cars
 

00:02:33.060 --> 00:02:35.809
example that there can be multiple cars
in the same picture or at least every

00:02:35.809 --> 00:02:35.819
in the same picture or at least every
 

00:02:35.819 --> 00:02:37.490
in the same picture or at least every
one of them within a certain distance of

00:02:37.490 --> 00:02:37.500
one of them within a certain distance of
 

00:02:37.500 --> 00:02:40.040
one of them within a certain distance of
your car here's another example maybe a

00:02:40.040 --> 00:02:40.050
your car here's another example maybe a
 

00:02:40.050 --> 00:02:42.199
your car here's another example maybe a
more fun one is nearest our transfer

00:02:42.199 --> 00:02:42.209
more fun one is nearest our transfer
 

00:02:42.209 --> 00:02:44.630
more fun one is nearest our transfer
let's say you have a picture and you

00:02:44.630 --> 00:02:44.640
let's say you have a picture and you
 

00:02:44.640 --> 00:02:47.600
let's say you have a picture and you
want this picture repaint it in a

00:02:47.600 --> 00:02:47.610
want this picture repaint it in a
 

00:02:47.610 --> 00:02:48.860
want this picture repaint it in a
different style

00:02:48.860 --> 00:02:48.870
different style
 

00:02:48.870 --> 00:02:51.080
different style
so nearest our transfer you have a

00:02:51.080 --> 00:02:51.090
so nearest our transfer you have a
 

00:02:51.090 --> 00:02:54.080
so nearest our transfer you have a
content image and you have a style image

00:02:54.080 --> 00:02:54.090
content image and you have a style image
 

00:02:54.090 --> 00:02:55.940
content image and you have a style image
the image on the right does se a Picasso

00:02:55.940 --> 00:02:55.950
the image on the right does se a Picasso
 

00:02:55.950 --> 00:02:58.040
the image on the right does se a Picasso
and you can have a neural network put

00:02:58.040 --> 00:02:58.050
and you can have a neural network put
 

00:02:58.050 --> 00:03:00.710
and you can have a neural network put
them together to repaint the content

00:03:00.710 --> 00:03:00.720
them together to repaint the content
 

00:03:00.720 --> 00:03:02.869
them together to repaint the content
image that is the image on the left but

00:03:02.869 --> 00:03:02.879
image that is the image on the left but
 

00:03:02.879 --> 00:03:05.210
image that is the image on the left but
in the style of the image on the right

00:03:05.210 --> 00:03:05.220
in the style of the image on the right
 

00:03:05.220 --> 00:03:07.040
in the style of the image on the right
and you end up with the image at the

00:03:07.040 --> 00:03:07.050
and you end up with the image at the
 

00:03:07.050 --> 00:03:10.160
and you end up with the image at the
bottom so albums like these are enabling

00:03:10.160 --> 00:03:10.170
bottom so albums like these are enabling
 

00:03:10.170 --> 00:03:12.199
bottom so albums like these are enabling
new types of artwork to be created and

00:03:12.199 --> 00:03:12.209
new types of artwork to be created and
 

00:03:12.209 --> 00:03:14.089
new types of artwork to be created and
in this course you learn how to do this

00:03:14.089 --> 00:03:14.099
in this course you learn how to do this
 

00:03:14.099 --> 00:03:16.430
in this course you learn how to do this
yourself as well one of the challenges

00:03:16.430 --> 00:03:16.440
yourself as well one of the challenges
 

00:03:16.440 --> 00:03:19.040
yourself as well one of the challenges
of computer vision problems is that the

00:03:19.040 --> 00:03:19.050
of computer vision problems is that the
 

00:03:19.050 --> 00:03:22.070
of computer vision problems is that the
inputs can get really big for example in

00:03:22.070 --> 00:03:22.080
inputs can get really big for example in
 

00:03:22.080 --> 00:03:24.020
inputs can get really big for example in
previous courses you've worked with 64

00:03:24.020 --> 00:03:24.030
previous courses you've worked with 64
 

00:03:24.030 --> 00:03:27.380
previous courses you've worked with 64
by 64 images and so that's 64 by 64 by 3

00:03:27.380 --> 00:03:27.390
by 64 images and so that's 64 by 64 by 3
 

00:03:27.390 --> 00:03:28.339
by 64 images and so that's 64 by 64 by 3
because they're three colour channels

00:03:28.339 --> 00:03:28.349
because they're three colour channels
 

00:03:28.349 --> 00:03:31.280
because they're three colour channels
and if you multiply that out that's one

00:03:31.280 --> 00:03:31.290
and if you multiply that out that's one
 

00:03:31.290 --> 00:03:34.280
and if you multiply that out that's one
two two eight eight so X the input

00:03:34.280 --> 00:03:34.290
two two eight eight so X the input
 

00:03:34.290 --> 00:03:36.589
two two eight eight so X the input
features has dimension one to two eight

00:03:36.589 --> 00:03:36.599
features has dimension one to two eight
 

00:03:36.599 --> 00:03:39.530
features has dimension one to two eight
eight and that's not too bad but 64 by

00:03:39.530 --> 00:03:39.540
eight and that's not too bad but 64 by
 

00:03:39.540 --> 00:03:42.589
eight and that's not too bad but 64 by
64 is actually very small image if you

00:03:42.589 --> 00:03:42.599
64 is actually very small image if you
 

00:03:42.599 --> 00:03:45.369
64 is actually very small image if you
work with larger images maybe this is a

00:03:45.369 --> 00:03:45.379
work with larger images maybe this is a
 

00:03:45.379 --> 00:03:48.500
work with larger images maybe this is a
thousand pixel by thousand pixel image

00:03:48.500 --> 00:03:48.510
thousand pixel by thousand pixel image
 

00:03:48.510 --> 00:03:50.390
thousand pixel by thousand pixel image
and that's actually just some one mega

00:03:50.390 --> 00:03:50.400
and that's actually just some one mega
 

00:03:50.400 --> 00:03:54.679
and that's actually just some one mega
pixel but the dimension of the input

00:03:54.679 --> 00:03:54.689
pixel but the dimension of the input
 

00:03:54.689 --> 00:03:56.899
pixel but the dimension of the input
features will be thousand by thousand by

00:03:56.899 --> 00:03:56.909
features will be thousand by thousand by
 

00:03:56.909 --> 00:03:59.089
features will be thousand by thousand by
three because you have three RGB

00:03:59.089 --> 00:03:59.099
three because you have three RGB
 

00:03:59.099 --> 00:04:02.300
three because you have three RGB
channels and that's three million oh and

00:04:02.300 --> 00:04:02.310
channels and that's three million oh and
 

00:04:02.310 --> 00:04:04.160
channels and that's three million oh and
if you are viewing this on a smaller

00:04:04.160 --> 00:04:04.170
if you are viewing this on a smaller
 

00:04:04.170 --> 00:04:05.929
if you are viewing this on a smaller
screen this might not be apparent but

00:04:05.929 --> 00:04:05.939
screen this might not be apparent but
 

00:04:05.939 --> 00:04:08.240
screen this might not be apparent but
this is actually low res 64 by 64 image

00:04:08.240 --> 00:04:08.250
this is actually low res 64 by 64 image
 

00:04:08.250 --> 00:04:09.320
this is actually low res 64 by 64 image
and this is a higher-risk

00:04:09.320 --> 00:04:09.330
and this is a higher-risk
 

00:04:09.330 --> 00:04:11.300
and this is a higher-risk
thousand by thousand image

00:04:11.300 --> 00:04:11.310
thousand by thousand image
 

00:04:11.310 --> 00:04:13.580
thousand by thousand image
but if you have three million input

00:04:13.580 --> 00:04:13.590
but if you have three million input
 

00:04:13.590 --> 00:04:18.039
but if you have three million input
features then this means that X here

00:04:18.039 --> 00:04:18.049
features then this means that X here
 

00:04:18.049 --> 00:04:20.860
features then this means that X here
would be three million dimensional and

00:04:20.860 --> 00:04:20.870
would be three million dimensional and
 

00:04:20.870 --> 00:04:24.500
would be three million dimensional and
so if in the first hidden layer maybe

00:04:24.500 --> 00:04:24.510
so if in the first hidden layer maybe
 

00:04:24.510 --> 00:04:27.170
so if in the first hidden layer maybe
you have just a thousand hidden units

00:04:27.170 --> 00:04:27.180
you have just a thousand hidden units
 

00:04:27.180 --> 00:04:33.110
you have just a thousand hidden units
then the total number of weights that is

00:04:33.110 --> 00:04:33.120
then the total number of weights that is
 

00:04:33.120 --> 00:04:37.640
then the total number of weights that is
the matrix w1 if you use a standard

00:04:37.640 --> 00:04:37.650
the matrix w1 if you use a standard
 

00:04:37.650 --> 00:04:40.310
the matrix w1 if you use a standard
fully connected Network like we have in

00:04:40.310 --> 00:04:40.320
fully connected Network like we have in
 

00:04:40.320 --> 00:04:45.110
fully connected Network like we have in
closest one or two this matrix will be a

00:04:45.110 --> 00:04:45.120
closest one or two this matrix will be a
 

00:04:45.120 --> 00:04:48.500
closest one or two this matrix will be a
one thousand by three million

00:04:48.500 --> 00:04:48.510
one thousand by three million
 

00:04:48.510 --> 00:04:52.150
one thousand by three million
dimensional matrix right because X is um

00:04:52.150 --> 00:04:52.160
dimensional matrix right because X is um
 

00:04:52.160 --> 00:04:56.330
dimensional matrix right because X is um
now R by 3 million VM I'm using to

00:04:56.330 --> 00:04:56.340
now R by 3 million VM I'm using to
 

00:04:56.340 --> 00:04:58.640
now R by 3 million VM I'm using to
denote 3 million and this means that

00:04:58.640 --> 00:04:58.650
denote 3 million and this means that
 

00:04:58.650 --> 00:05:01.190
denote 3 million and this means that
this matrix here will have 3 billion

00:05:01.190 --> 00:05:01.200
this matrix here will have 3 billion
 

00:05:01.200 --> 00:05:04.420
this matrix here will have 3 billion
parameters which is just very very large

00:05:04.420 --> 00:05:04.430
parameters which is just very very large
 

00:05:04.430 --> 00:05:06.950
parameters which is just very very large
and with that many parameters is

00:05:06.950 --> 00:05:06.960
and with that many parameters is
 

00:05:06.960 --> 00:05:10.129
and with that many parameters is
difficult to get enough data to prevent

00:05:10.129 --> 00:05:10.139
difficult to get enough data to prevent
 

00:05:10.139 --> 00:05:12.050
difficult to get enough data to prevent
in your network from overfitting and

00:05:12.050 --> 00:05:12.060
in your network from overfitting and
 

00:05:12.060 --> 00:05:14.360
in your network from overfitting and
also the computational requirements and

00:05:14.360 --> 00:05:14.370
also the computational requirements and
 

00:05:14.370 --> 00:05:16.190
also the computational requirements and
the memory requirements to train the

00:05:16.190 --> 00:05:16.200
the memory requirements to train the
 

00:05:16.200 --> 00:05:17.630
the memory requirements to train the
neural network with the billion

00:05:17.630 --> 00:05:17.640
neural network with the billion
 

00:05:17.640 --> 00:05:21.170
neural network with the billion
parameters is just a bit infeasible but

00:05:21.170 --> 00:05:21.180
parameters is just a bit infeasible but
 

00:05:21.180 --> 00:05:22.820
parameters is just a bit infeasible but
for computer vision applications you

00:05:22.820 --> 00:05:22.830
for computer vision applications you
 

00:05:22.830 --> 00:05:24.710
for computer vision applications you
don't want to be stuck using only tiny

00:05:24.710 --> 00:05:24.720
don't want to be stuck using only tiny
 

00:05:24.720 --> 00:05:27.200
don't want to be stuck using only tiny
little images you want to use large

00:05:27.200 --> 00:05:27.210
little images you want to use large
 

00:05:27.210 --> 00:05:29.360
little images you want to use large
images to do that you need to better

00:05:29.360 --> 00:05:29.370
images to do that you need to better
 

00:05:29.370 --> 00:05:31.270
images to do that you need to better
implement the convolution operation

00:05:31.270 --> 00:05:31.280
implement the convolution operation
 

00:05:31.280 --> 00:05:33.350
implement the convolution operation
which is one of the fundamental building

00:05:33.350 --> 00:05:33.360
which is one of the fundamental building
 

00:05:33.360 --> 00:05:35.390
which is one of the fundamental building
blocks of convolutional neural networks

00:05:35.390 --> 00:05:35.400
blocks of convolutional neural networks
 

00:05:35.400 --> 00:05:37.430
blocks of convolutional neural networks
let's see what this means and how you

00:05:37.430 --> 00:05:37.440
let's see what this means and how you
 

00:05:37.440 --> 00:05:39.469
let's see what this means and how you
can implement this in the next video and

00:05:39.469 --> 00:05:39.479
can implement this in the next video and
 

00:05:39.479 --> 00:05:41.510
can implement this in the next video and
we'll illustrate convolutions using the

00:05:41.510 --> 00:05:41.520
we'll illustrate convolutions using the
 

00:05:41.520 --> 00:05:45.350
we'll illustrate convolutions using the
example of H detection

