WEBVTT
Kind: captions
Language: en

00:00:04.054 --> 00:00:05.220
WAYNE PIEKARSKI: OK, Google.

00:00:05.220 --> 00:00:07.833
What's the temperature
like at Mount Everest?

00:00:07.833 --> 00:00:10.210
GOOGLE ASSISTANT: The
temperature there is minus 14.

00:00:10.210 --> 00:00:12.810
WAYNE PIEKARSKI: Ooh,
I better pack a jacket.

00:00:12.810 --> 00:00:14.060
Oh, hi.

00:00:14.060 --> 00:00:14.910
I'm Wayne Piekarski.

00:00:14.910 --> 00:00:17.670
And today, I'm going to talk
about the Google Assistant

00:00:17.670 --> 00:00:20.040
and how you can develop
your own actions to be

00:00:20.040 --> 00:00:22.570
a part of this new ecosystem.

00:00:22.570 --> 00:00:24.720
At Google, we've been
providing assistance

00:00:24.720 --> 00:00:27.455
to users for years across
many of our products.

00:00:27.455 --> 00:00:28.830
But we think
there's much more we

00:00:28.830 --> 00:00:32.340
can do to help people get things
done right when they need it

00:00:32.340 --> 00:00:34.110
in a conversational way.

00:00:34.110 --> 00:00:36.700
And that's why we're building
the Google Assistant.

00:00:36.700 --> 00:00:38.280
The Google Assistant
can help users

00:00:38.280 --> 00:00:40.500
get things done
throughout their day,

00:00:40.500 --> 00:00:42.480
whether they're at
home or on the go.

00:00:42.480 --> 00:00:44.520
And it powers devices
like, for example,

00:00:44.520 --> 00:00:47.580
the Google Home, a
voice-activated speaker.

00:00:47.580 --> 00:00:50.100
To better serve user
requests, the Google Assistant

00:00:50.100 --> 00:00:52.800
needs to work well with
an ecosystem of everyone's

00:00:52.800 --> 00:00:54.390
favorite services.

00:00:54.390 --> 00:00:56.970
Actions on Google allows
you as a developer

00:00:56.970 --> 00:00:59.425
to integrate your services
with the Google Assistant.

00:00:59.425 --> 00:01:01.050
And that is what
we're going to explain

00:01:01.050 --> 00:01:03.690
how to do in this video.

00:01:03.690 --> 00:01:06.510
Conversation actions enable you
to fulfill a user's requests

00:01:06.510 --> 00:01:09.180
directly via two-way dialogue.

00:01:09.180 --> 00:01:11.280
Users don't need to
pre-enable skills

00:01:11.280 --> 00:01:14.820
or install new apps to interact
with any actions you build.

00:01:14.820 --> 00:01:16.980
When a user asks for
your action by name,

00:01:16.980 --> 00:01:19.440
we'll connect them
with you immediately.

00:01:19.440 --> 00:01:21.330
Let's first go through
a detailed example

00:01:21.330 --> 00:01:24.910
of a user interacting with
a conversation action.

00:01:24.910 --> 00:01:27.630
Think about something as simple
as helping a user choose what

00:01:27.630 --> 00:01:30.420
to have for dinner based on
their mood and the ingredients

00:01:30.420 --> 00:01:31.260
they have around.

00:01:31.260 --> 00:01:34.170
Let's call this
action Personal Chef.

00:01:34.170 --> 00:01:36.660
The user first needs to invoke
your action with something

00:01:36.660 --> 00:01:40.170
like, OK, Google, let me
talk to Personal Chef.

00:01:40.170 --> 00:01:42.500
The assistant will then
introduce your action.

00:01:42.500 --> 00:01:44.850
And now the user is
talking to you directly.

00:01:44.850 --> 00:01:47.580
&gt;From this point onwards, you
get to interact with the user

00:01:47.580 --> 00:01:49.650
and have a conversation.

00:01:49.650 --> 00:01:50.490
OK, Google.

00:01:50.490 --> 00:01:53.160
Let me talk to Personal Chef.

00:01:53.160 --> 00:01:55.650
GOOGLE ASSISTANT: Sure,
here's Personal Chef.

00:01:55.650 --> 00:01:57.720
PERSONAL CHEF: Hi, I'm
your Personal Chef.

00:01:57.720 --> 00:01:59.370
What are you in the mood for?

00:01:59.370 --> 00:02:01.411
WAYNE PIEKARSKI: Well,
it's kind of cold outside,

00:02:01.411 --> 00:02:03.750
so I'd like something to
warm me up, like a hot soup.

00:02:03.750 --> 00:02:05.709
And I want it fast.

00:02:05.709 --> 00:02:06.750
PERSONAL CHEF: All right.

00:02:06.750 --> 00:02:08.265
What protein would
you like to use?

00:02:08.265 --> 00:02:10.139
WAYNE PIEKARSKI: I have
some chicken and also

00:02:10.139 --> 00:02:12.690
some canned tomatoes.

00:02:12.690 --> 00:02:13.440
PERSONAL CHEF: OK.

00:02:13.440 --> 00:02:15.870
Well, I think you should
try the chicken tomato soup

00:02:15.870 --> 00:02:19.368
recipe I found on example.com.

00:02:19.368 --> 00:02:21.550
WAYNE PIEKARSKI: Hmm,
sounds good to me.

00:02:21.550 --> 00:02:23.430
So this is a pretty
rich interaction.

00:02:23.430 --> 00:02:25.560
Think about all the
sentences I spoke

00:02:25.560 --> 00:02:27.150
and how the action
needs to extract

00:02:27.150 --> 00:02:28.470
the meaning out of this.

00:02:28.470 --> 00:02:30.150
How would you implement this?

00:02:30.150 --> 00:02:33.300
If you're an expert in the area
of natural language processing,

00:02:33.300 --> 00:02:35.160
you can use the
Conversation API,

00:02:35.160 --> 00:02:37.890
which allows you to process
the raw strings that contain

00:02:37.890 --> 00:02:39.930
the spoken text from the user.

00:02:39.930 --> 00:02:42.120
You can then use
the Actions SDK that

00:02:42.120 --> 00:02:44.070
includes all the tools
and libraries you

00:02:44.070 --> 00:02:45.840
need to build the actions.

00:02:45.840 --> 00:02:48.470
However, if you don't want to
process the users transcribed

00:02:48.470 --> 00:02:50.980
speech yourself, you can
use one of the tools that

00:02:50.980 --> 00:02:53.490
have integrated with
Actions on Google.

00:02:53.490 --> 00:02:56.250
One of these tools
is api.ai, which

00:02:56.250 --> 00:02:58.980
provides an intuitive
graphical user interface

00:02:58.980 --> 00:03:00.990
to create conversational
interfaces

00:03:00.990 --> 00:03:03.060
and it does the heavy
lifting in terms

00:03:03.060 --> 00:03:05.610
of managing conversational
state and filling out

00:03:05.610 --> 00:03:06.990
slots and forms.

00:03:06.990 --> 00:03:10.190
This means you'll no longer
need to process the raw strings.

00:03:10.190 --> 00:03:13.020
api.ai can do this for you.

00:03:13.020 --> 00:03:16.680
To handle a conversation, use
the api.ai Developer Console

00:03:16.680 --> 00:03:17.984
to create an intent.

00:03:17.984 --> 00:03:19.650
This is where you
define the information

00:03:19.650 --> 00:03:21.250
you need from the user.

00:03:21.250 --> 00:03:23.640
For our example, finding
a kitchen recipe,

00:03:23.640 --> 00:03:26.130
this would be the type
of food, the ingredients,

00:03:26.130 --> 00:03:29.180
the temperature, and
the cooking time.

00:03:29.180 --> 00:03:31.600
You then specify
example sentences.

00:03:31.600 --> 00:03:34.170
api.ai parses these
sentences and uses

00:03:34.170 --> 00:03:36.210
them to train its
machine-learning algorithm

00:03:36.210 --> 00:03:39.510
to process other possible
sentences from your users.

00:03:39.510 --> 00:03:43.170
You don't have to write regular
expressions or a parser.

00:03:43.170 --> 00:03:45.810
You can also manually set
what the acceptable values are

00:03:45.810 --> 00:03:47.700
for each piece of information.

00:03:47.700 --> 00:03:50.910
Once this is done, api.ai
uses these definitions

00:03:50.910 --> 00:03:53.610
to extract meaning out
of spoken sentences.

00:03:53.610 --> 00:03:57.060
The user can provide information
naturally, out of order, all

00:03:57.060 --> 00:03:59.130
at once, or in pieces.

00:03:59.130 --> 00:04:01.890
The action can ask follow-up
questions as needed.

00:04:01.890 --> 00:04:03.990
Pretty neat, right?

00:04:03.990 --> 00:04:06.960
Once you've set up everything
in the api.ai console,

00:04:06.960 --> 00:04:08.820
you can then test it
all out immediately

00:04:08.820 --> 00:04:11.010
with example sentences.

00:04:11.010 --> 00:04:13.860
Then you can test your project
with the web simulator,

00:04:13.860 --> 00:04:17.070
preview it on Google Home,
or deploy the full project

00:04:17.070 --> 00:04:20.040
to Google, all
from within api.ai.

00:04:20.040 --> 00:04:22.470
Next, you can connect
up an optional web hook

00:04:22.470 --> 00:04:24.510
to your intent to
allow it to interact

00:04:24.510 --> 00:04:25.980
with a back-end server.

00:04:25.980 --> 00:04:28.060
When all the details
you need are filled in,

00:04:28.060 --> 00:04:31.350
your web hook is called with
the appropriate details provided

00:04:31.350 --> 00:04:33.120
as JSON data.

00:04:33.120 --> 00:04:35.562
You don't need to worry about
parsing strings or dealing

00:04:35.562 --> 00:04:37.020
with responding
back with follow-up

00:04:37.020 --> 00:04:38.890
questions for the user.

00:04:38.890 --> 00:04:41.520
You can also develop the
web hook using the language

00:04:41.520 --> 00:04:43.480
and hosting platform
of your choice.

00:04:43.480 --> 00:04:46.080
It's just an HTTP callback.

00:04:46.080 --> 00:04:48.730
So api.ai makes
this really simple.

00:04:48.730 --> 00:04:50.400
It's easy to get
started, and you

00:04:50.400 --> 00:04:53.650
can have a prototype working
in just a few minutes.

00:04:53.650 --> 00:04:55.470
You should check out
our screencast video

00:04:55.470 --> 00:04:59.950
where we show all of the
steps to make this happen.

00:04:59.950 --> 00:05:02.310
So the Google Assistant is
the next big opportunity

00:05:02.310 --> 00:05:03.540
for developers.

00:05:03.540 --> 00:05:05.730
By developing Actions
on Google, you'll

00:05:05.730 --> 00:05:09.570
get cutting-edge experience in
natural conversation interfaces

00:05:09.570 --> 00:05:12.720
and be ready to actively
participate in the emerging

00:05:12.720 --> 00:05:15.390
space of AI first computing.

00:05:15.390 --> 00:05:18.240
In addition, you'll be able
to help shape the platform

00:05:18.240 --> 00:05:21.390
and grow your audience in all
the devices and contexts where

00:05:21.390 --> 00:05:23.970
the assistant will be
available in the future.

00:05:23.970 --> 00:05:26.280
And thanks to conversational
interface building tools

00:05:26.280 --> 00:05:29.730
like api.ai, as well as
Google's unique understanding

00:05:29.730 --> 00:05:31.860
of the user's
interests and context,

00:05:31.860 --> 00:05:33.450
you'll be able to
create frictionless,

00:05:33.450 --> 00:05:36.030
intelligent experiences
for people that engage

00:05:36.030 --> 00:05:38.130
with the Google Assistant.

00:05:38.130 --> 00:05:40.800
You can find out more about
Actions on Google by reading

00:05:40.800 --> 00:05:44.910
the documentation at
developers.google.com/actions.

00:05:44.910 --> 00:05:47.730
We also have an Actions on
Google developer community

00:05:47.730 --> 00:05:50.820
on Google+ so you can ask
questions and share your ideas

00:05:50.820 --> 00:05:51.990
with everyone.

00:05:51.990 --> 00:05:54.076
We look forward to
seeing what you build.

00:05:54.076 --> 00:05:55.200
And I'll see you next time.

00:05:55.200 --> 00:05:58.250
[MUSIC PLAYING]

