WEBVTT
Kind: captions
Language: en

00:00:03.730 --> 00:00:05.910
CHRIS MCKILLOP: All right.

00:00:05.910 --> 00:00:07.248
Hello, everyone.

00:00:07.248 --> 00:00:09.589
[CHEERING AND APPLAUSE]

00:00:09.589 --> 00:00:10.630
My name's Chris McKillop.

00:00:10.630 --> 00:00:13.330
I'm the engineering
manager for Android TV.

00:00:13.330 --> 00:00:16.059
I've got behind me
here Leo Baghdassarian.

00:00:16.059 --> 00:00:18.944
He's the head UX designer
for the Android TV stuff.

00:00:18.944 --> 00:00:20.360
And Andrew Jeon,
who runs the team

00:00:20.360 --> 00:00:23.077
responsible for the live TV
integration in the platform.

00:00:23.077 --> 00:00:24.910
We're going to talk to
you guys a little bit

00:00:24.910 --> 00:00:27.610
today about exactly
why we bothered

00:00:27.610 --> 00:00:30.710
doing Android TV to begin
with and get into a little bit

00:00:30.710 --> 00:00:33.800
more detail than the demo
we did during the keynote.

00:00:33.800 --> 00:00:36.470
And we'll have some more
fun surprises at the end.

00:00:36.470 --> 00:00:39.900
So some facts and figures.

00:00:39.900 --> 00:00:42.190
Average American watches
30 hours of TV a week.

00:00:42.190 --> 00:00:44.930
That is a lot of eyeball time.

00:00:44.930 --> 00:00:47.730
120 million smart TVs
are shipped every year,

00:00:47.730 --> 00:00:49.820
and more than five billion
hours are watched daily

00:00:49.820 --> 00:00:51.490
worldwide in front of their TV.

00:00:51.490 --> 00:00:55.730
This is a lot of time
for people to be engaged

00:00:55.730 --> 00:00:58.150
in content from
Google Applications,

00:00:58.150 --> 00:00:59.551
from your applications.

00:00:59.551 --> 00:01:01.050
And these are
computing devices now.

00:01:01.050 --> 00:01:04.780
These aren't just dumb panels
picking up over-the-air signal.

00:01:04.780 --> 00:01:08.280
So but there's no
standard platform today.

00:01:08.280 --> 00:01:11.870
This is a huge problem for
Google's app developers,

00:01:11.870 --> 00:01:13.750
for app developers
around the world.

00:01:13.750 --> 00:01:15.560
You either need
to do custom work

00:01:15.560 --> 00:01:18.460
for every single TV
that ships or fall back

00:01:18.460 --> 00:01:20.720
to just doing HTML.

00:01:20.720 --> 00:01:22.480
In-app purchasing
and monetization?

00:01:22.480 --> 00:01:25.140
Nonexistent on a standard
platform across TV,

00:01:25.140 --> 00:01:27.100
unlike in mobile.

00:01:27.100 --> 00:01:28.810
TV looks a lot like
the mobile space

00:01:28.810 --> 00:01:32.150
did in 2006, where you have
all these manufacturers, all

00:01:32.150 --> 00:01:36.170
building their own platform,
and all asking app developers

00:01:36.170 --> 00:01:38.700
to support them with
no unified story.

00:01:38.700 --> 00:01:40.820
So Android to the rescue.

00:01:40.820 --> 00:01:41.480
Yay!

00:01:41.480 --> 00:01:43.870
Established eco-system,
thanks to you guys and thanks

00:01:43.870 --> 00:01:45.700
to the device
manufacturers out there.

00:01:45.700 --> 00:01:48.570
A billion-plus
30-day active users,

00:01:48.570 --> 00:01:50.650
a million-plus
apps on Play Store,

00:01:50.650 --> 00:01:52.500
50 billion app downloads.

00:01:52.500 --> 00:01:54.430
It's incredible
what you guys have

00:01:54.430 --> 00:01:57.110
helped us accomplish
over the last few years.

00:01:57.110 --> 00:01:59.330
We have a huge support
from the industry,

00:01:59.330 --> 00:02:03.297
both for SOCs and for networking
and across APIs and protocols.

00:02:03.297 --> 00:02:05.380
And more importantly, Play
Store brings everything

00:02:05.380 --> 00:02:08.190
together so that you can
do multi-device installs,

00:02:08.190 --> 00:02:09.580
in-app purchasing, and billing.

00:02:09.580 --> 00:02:13.750
So everyone can actually make
money off this eco-system.

00:02:13.750 --> 00:02:15.500
So what is an Android TV?

00:02:15.500 --> 00:02:18.310
It is just a new form
factor for Android.

00:02:18.310 --> 00:02:20.250
We've announced
several today at I/O,

00:02:20.250 --> 00:02:23.770
and so I wanted to welcome TV
to the family with you guys.

00:02:23.770 --> 00:02:27.030
And so going forward, starting
with L and going forward,

00:02:27.030 --> 00:02:28.982
TV is going to be
supported right

00:02:28.982 --> 00:02:30.690
alongside phones,
tablets, and wearables.

00:02:33.640 --> 00:02:36.960
My goal internally at Google
is actually that no one talks

00:02:36.960 --> 00:02:39.990
about Android TV in a year,
that it's just assumed.

00:02:39.990 --> 00:02:42.850
Like no one talks, really, about
Android tablets and phones.

00:02:42.850 --> 00:02:44.250
Like, it's just Android.

00:02:44.250 --> 00:02:46.430
And that's what I'm
trying to accomplish

00:02:46.430 --> 00:02:48.140
inside and hopefully
with you guys, too.

00:02:48.140 --> 00:02:51.360
You know, we've added a lot of
great features for developers

00:02:51.360 --> 00:02:53.880
in L to make it
really easy for you

00:02:53.880 --> 00:02:56.377
to bring your applications
to the television.

00:02:56.377 --> 00:02:58.710
So I'm going to really quickly
go through some of these,

00:02:58.710 --> 00:03:01.280
and then Leo's going
to jump into UX.

00:03:01.280 --> 00:03:04.000
We've set really
aggressive hardware specs

00:03:04.000 --> 00:03:06.044
for Android TV devices.

00:03:06.044 --> 00:03:07.710
We want to make sure
that there's enough

00:03:07.710 --> 00:03:10.880
CPU and GPU in the devices
that claim to be Android TVs

00:03:10.880 --> 00:03:14.510
to have really great
performance for apps and games.

00:03:14.510 --> 00:03:16.960
Minimum of 1 gig of RAM
and 8 gigs of Flash,

00:03:16.960 --> 00:03:18.700
so there's lots of
storage for apps.

00:03:18.700 --> 00:03:20.950
Wi-Fi and ethernet
for connectivity,

00:03:20.950 --> 00:03:22.960
so there'll always
be fast pipes in.

00:03:22.960 --> 00:03:25.070
Bluetooth 4 and Bluetooth
LE, which I think

00:03:25.070 --> 00:03:27.130
is going to be really
important going forward,

00:03:27.130 --> 00:03:31.970
for both accessories and
for things like co-presence

00:03:31.970 --> 00:03:34.670
and things that could happen.

00:03:34.670 --> 00:03:38.000
Also wanted to ensure that there
was a very high level of DRM.

00:03:38.000 --> 00:03:40.610
These are primarily media
consumption devices.

00:03:40.610 --> 00:03:43.030
Android's always required
Widevine Level 2,

00:03:43.030 --> 00:03:45.950
which is fine for SD,
which is OK on a phone.

00:03:45.950 --> 00:03:49.420
But we require Widevine
Level 1 on all TV devices.

00:03:49.420 --> 00:03:52.250
That's already studio
approved in most

00:03:52.250 --> 00:03:54.890
of the world for HD content.

00:03:54.890 --> 00:03:57.202
You know, we're not just
targeting TV panels.

00:03:57.202 --> 00:03:59.410
I've been watching the press
after the keynote today,

00:03:59.410 --> 00:04:01.980
and a lot of people are asking,
hey, this is just for TVs.

00:04:01.980 --> 00:04:02.960
We don't understand.

00:04:02.960 --> 00:04:03.820
It's not.

00:04:03.820 --> 00:04:06.064
It's also for media streamers.

00:04:06.064 --> 00:04:08.480
I'm not going to mention brand
names, but media streamers,

00:04:08.480 --> 00:04:09.064
set-top boxes.

00:04:09.064 --> 00:04:10.563
And when we say
set-top boxes, we're

00:04:10.563 --> 00:04:12.100
talking about cable
set-top boxes--

00:04:12.100 --> 00:04:15.410
so carriers like
Comcast or BWIG or SFR,

00:04:15.410 --> 00:04:17.670
who are bringing premium
content over their lines

00:04:17.670 --> 00:04:18.790
into your house.

00:04:18.790 --> 00:04:21.320
And also microconsoles,
you're going

00:04:21.320 --> 00:04:25.310
to see a lot of boxes that
come with a game controller

00:04:25.310 --> 00:04:27.630
over the course of the next
year running Android TV.

00:04:27.630 --> 00:04:29.690
And we differentiate those
from media streamers,

00:04:29.690 --> 00:04:32.400
both from the point of view
that a microconsole tends

00:04:32.400 --> 00:04:35.230
to have a higher CPU performance
as well as a higher price,

00:04:35.230 --> 00:04:38.336
and also not as approachable
because of the game controller.

00:04:38.336 --> 00:04:39.710
We're standardizing
input devices

00:04:39.710 --> 00:04:41.100
across all of Android
TV, so there's

00:04:41.100 --> 00:04:42.240
a minimum set of controls.

00:04:42.240 --> 00:04:44.190
We have a Virtual
Remote control app

00:04:44.190 --> 00:04:47.640
that you'll be able to get
off the Play Store to interact

00:04:47.640 --> 00:04:51.520
with your developer devices
if you request them online.

00:04:51.520 --> 00:04:54.230
We're also standardizing on
Game Controller button mapping.

00:04:54.230 --> 00:04:55.980
We think one of the
biggest problems we've

00:04:55.980 --> 00:04:58.030
had with adoption of game
controllers on Android

00:04:58.030 --> 00:05:00.342
is the lack of a
standard button mapping.

00:05:00.342 --> 00:05:02.300
It means that app developers
had to worry about

00:05:02.300 --> 00:05:04.180
whether it was this
controller or that game

00:05:04.180 --> 00:05:05.430
controller in their game.

00:05:05.430 --> 00:05:06.170
No more.

00:05:06.170 --> 00:05:09.010
So we're mapping all the popular
ones to the standard for you

00:05:09.010 --> 00:05:12.339
in L, and we're publishing a
spec for both game controller

00:05:12.339 --> 00:05:13.755
manufacturers and
game developers,

00:05:13.755 --> 00:05:15.222
so everyone can work together.

00:05:15.222 --> 00:05:17.680
So this will be across not just
TV, but phones and tablets,

00:05:17.680 --> 00:05:19.579
as well, so it'll be
really, really powerful.

00:05:19.579 --> 00:05:21.870
We're also really pushing
hard on all the hardware OEMs

00:05:21.870 --> 00:05:23.950
to have microphones
in all their devices.

00:05:23.950 --> 00:05:25.540
We think that in
the living room,

00:05:25.540 --> 00:05:27.070
no one wants to
type on a keyboard.

00:05:27.070 --> 00:05:27.916
We have a keyboard.

00:05:27.916 --> 00:05:29.790
You notice we didn't
show it during the demo?

00:05:29.790 --> 00:05:32.030
No one wants to type on
a keyboard on their sofa.

00:05:32.030 --> 00:05:35.720
So being able to use your
voice to really quickly get

00:05:35.720 --> 00:05:38.880
to the details of what you
want is super powerful.

00:05:38.880 --> 00:05:40.620
We've done multimedia
improvements.

00:05:40.620 --> 00:05:42.410
We've added New
Media components.

00:05:42.410 --> 00:05:43.930
We've build a TV
input framework,

00:05:43.930 --> 00:05:45.870
and Andrew's going to go into
great detail on that for you

00:05:45.870 --> 00:05:46.700
in a bit.

00:05:46.700 --> 00:05:49.840
We've switched to
Chrome Webview,

00:05:49.840 --> 00:05:53.200
and it actually supports
HTML5 video with DRM.

00:05:53.200 --> 00:05:55.330
So for folks that have
an investment there,

00:05:55.330 --> 00:05:57.320
you'll be able to
keep your playback.

00:05:57.320 --> 00:05:59.750
It's completely
Google Cast-supported.

00:05:59.750 --> 00:06:03.880
So all Android TV devices will
also be Google Cast receivers.

00:06:03.880 --> 00:06:06.900
That means all existing Cast
applications will just work.

00:06:06.900 --> 00:06:08.990
This is actually supported
by the Cast team.

00:06:08.990 --> 00:06:11.269
This isn't a strange
thing the Android

00:06:11.269 --> 00:06:12.310
team's doing on the side.

00:06:12.310 --> 00:06:14.040
The Cat team supports this.

00:06:14.040 --> 00:06:17.060
And in L, which isn't in the
preview, but at L release,

00:06:17.060 --> 00:06:19.870
we're going to be adding APIs
to allow your APKs to talk

00:06:19.870 --> 00:06:21.240
to each other through Cast.

00:06:21.240 --> 00:06:23.470
We'll call it Cast-to-Native
or Cast-to-Apps.

00:06:23.470 --> 00:06:25.020
And that means
that you'd actually

00:06:25.020 --> 00:06:29.330
be able to have first-screen
and second-screen experiences

00:06:29.330 --> 00:06:31.630
at equal levels.

00:06:31.630 --> 00:06:35.610
Probably the meat of what we've
added for TV in the L release

00:06:35.610 --> 00:06:37.464
is a new Leanback
framework and launcher.

00:06:37.464 --> 00:06:39.380
And when we say Leanback,
we're talking about,

00:06:39.380 --> 00:06:41.980
you know, you're on your
sofa and you're leaning back.

00:06:41.980 --> 00:06:44.710
And YouTube coined
the phrase as a way

00:06:44.710 --> 00:06:46.460
to think about how
people want to interact

00:06:46.460 --> 00:06:47.627
with TVs in the living room.

00:06:47.627 --> 00:06:49.918
And you're going to get a
lot of details and background

00:06:49.918 --> 00:06:51.330
on that from Leo here in a sec.

00:06:51.330 --> 00:06:54.410
But we've added a new optimized
Home screen and System UI.

00:06:54.410 --> 00:06:56.570
We sort of merged them together.

00:06:56.570 --> 00:06:59.720
Sort of think of the
notification shade, all apps,

00:06:59.720 --> 00:07:03.180
and your Home screen all
being in one place on TV.

00:07:03.180 --> 00:07:05.680
And we're requiring that
all hardware manufacturers

00:07:05.680 --> 00:07:07.140
use our launcher.

00:07:07.140 --> 00:07:10.970
So there will be a consistency
across these devices

00:07:10.970 --> 00:07:12.660
for developers,
and developers can

00:07:12.660 --> 00:07:15.137
be guaranteed that certain
behaviors are there.

00:07:15.137 --> 00:07:16.970
And we'll get into that
with how the content

00:07:16.970 --> 00:07:18.200
recommendations work.

00:07:18.200 --> 00:07:21.020
We've also build a
new set of Fragments

00:07:21.020 --> 00:07:24.260
that you can use to really
quickly take your existing APK

00:07:24.260 --> 00:07:26.380
and bring it to the television.

00:07:26.380 --> 00:07:27.880
I think this is the
first time we've

00:07:27.880 --> 00:07:31.820
offered a standard element
in the framework library that

00:07:31.820 --> 00:07:33.400
operates at such a high level.

00:07:33.400 --> 00:07:35.310
You can really just
treat it almost

00:07:35.310 --> 00:07:38.240
like it's a data-level
API, if you want to.

00:07:38.240 --> 00:07:40.740
It's going to be completely
open source with the L Developer

00:07:40.740 --> 00:07:41.330
Preview.

00:07:41.330 --> 00:07:43.710
You can go in and change it
around any way you want to.

00:07:43.710 --> 00:07:46.210
But you'll be able to really,
really quickly get your app up

00:07:46.210 --> 00:07:47.590
and running.

00:07:47.590 --> 00:07:50.180
And for a bonus, for all
you Google TV developers out

00:07:50.180 --> 00:07:52.680
there-- I don't know if
there are any in the house.

00:07:52.680 --> 00:07:58.279
But if you want to support
your Google TV v4 devices,

00:07:58.279 --> 00:07:59.820
our framework actually
works on that.

00:07:59.820 --> 00:08:01.880
So there's millions
of Google TV version

00:08:01.880 --> 00:08:04.010
4 devices out there,
already installed,

00:08:04.010 --> 00:08:06.790
and this will give
you a path forward.

00:08:06.790 --> 00:08:09.764
We've also been optimizing for
TV Google's own internal APIs

00:08:09.764 --> 00:08:11.430
that you guys get
through Play Services,

00:08:11.430 --> 00:08:14.430
so things like in-app purchase
flow, Play Games Services,

00:08:14.430 --> 00:08:14.980
G+ Sign-in.

00:08:14.980 --> 00:08:16.980
And we're going to be
going through and updating

00:08:16.980 --> 00:08:17.550
all of them.

00:08:17.550 --> 00:08:20.800
So you can use the same APIs
you use on phone and tablets

00:08:20.800 --> 00:08:22.580
and, basically for
free from Google,

00:08:22.580 --> 00:08:24.705
get a TV-optimized experience
for your customers.

00:08:27.440 --> 00:08:29.720
Our studious head of
design, Matias Duarte,

00:08:29.720 --> 00:08:32.630
who did a great job this
morning in our keynote,

00:08:32.630 --> 00:08:35.110
always likes to say this when
we start talking about TV.

00:08:35.110 --> 00:08:37.625
"When your butt hits the
sofa you lose 20 IQ points."

00:08:37.625 --> 00:08:39.000
You don't want to
think about it.

00:08:39.000 --> 00:08:40.667
You don't want to use
a computer, right?

00:08:40.667 --> 00:08:42.333
You don't want your
TV to be a computer.

00:08:42.333 --> 00:08:43.820
You want it to entertain you.

00:08:43.820 --> 00:08:46.100
And so on that, I'm
going to bring up Leo

00:08:46.100 --> 00:08:48.730
to talk a little bit about
designing for Android TV.

00:08:48.730 --> 00:08:50.247
[APPLAUSE]

00:08:50.247 --> 00:08:51.622
LEO BAGHDASSARIAN:
Thanks, Chris.

00:08:55.000 --> 00:08:57.320
Thanks, Chris.

00:08:57.320 --> 00:08:59.010
So people love TV.

00:09:03.044 --> 00:09:04.380
Not the demo yet, guys.

00:09:07.960 --> 00:09:09.650
When we began
designing Android TV,

00:09:09.650 --> 00:09:11.150
we looked at the
qualities that made

00:09:11.150 --> 00:09:12.990
TV so easy and approachable.

00:09:12.990 --> 00:09:23.720
We notice a few qualities that
made the content unique to TV.

00:09:23.720 --> 00:09:27.090
Like when you turn it on, you're
instantly watching something.

00:09:27.090 --> 00:09:29.550
You're already in content.

00:09:29.550 --> 00:09:31.130
And how when it's
playing, even when

00:09:31.130 --> 00:09:35.530
you're looking at a guide or
a menu, it continues along.

00:09:35.530 --> 00:09:38.220
It continues the experience.

00:09:38.220 --> 00:09:41.470
And how, at its core,
it really is simple.

00:09:41.470 --> 00:09:42.430
Browsing's effortless.

00:09:42.430 --> 00:09:45.390
It's just Channel
Up and Channel Down.

00:09:45.390 --> 00:09:49.920
And on top of that, movies
and TV can be so emotional.

00:09:49.920 --> 00:09:52.450
They're so immersive
and engaging.

00:09:52.450 --> 00:09:57.410
So when we really thought
about bringing Android to TV,

00:09:57.410 --> 00:10:01.520
we wanted to do just
that, bring Android to TV

00:10:01.520 --> 00:10:06.150
and keep those content-centric,
immersive qualities that

00:10:06.150 --> 00:10:07.310
make TV so great.

00:10:12.040 --> 00:10:14.140
So how are we going to do that?

00:10:14.140 --> 00:10:16.970
Well, we needed to design
components optimized

00:10:16.970 --> 00:10:20.400
for browsing and
watching content.

00:10:20.400 --> 00:10:22.470
One of the most critical
aspects of design

00:10:22.470 --> 00:10:25.610
is how and where people
interact with it.

00:10:25.610 --> 00:10:29.050
So with TV, that could
be from 10 feet away,

00:10:29.050 --> 00:10:32.420
with food or drink in
your hand, or with a baby,

00:10:32.420 --> 00:10:33.790
and even sometimes half-asleep.

00:10:36.470 --> 00:10:38.610
For Android TV, we
standardized the minimum button

00:10:38.610 --> 00:10:43.510
set to the five-way directional
pad, plus Home and Back.

00:10:43.510 --> 00:10:46.900
There's no Menu button
and there's no pointer.

00:10:46.900 --> 00:10:49.690
So how does this
affect app design?

00:10:49.690 --> 00:10:51.550
Well, of course,
there's no touch screen.

00:10:51.550 --> 00:10:53.750
So you don't have that
random quick access

00:10:53.750 --> 00:10:57.890
to different elements
in your interface.

00:10:57.890 --> 00:11:01.350
So for most layouts, like
on tablets and phone,

00:11:01.350 --> 00:11:05.160
you're going to have to kind of
rethink how that kind of gets

00:11:05.160 --> 00:11:07.970
adapted to TV.

00:11:07.970 --> 00:11:10.590
With the D-pad, you have
focus-based navigation.

00:11:10.590 --> 00:11:14.320
You move around by moving focus
from one element to the other.

00:11:14.320 --> 00:11:16.800
So when you design
your apps, you

00:11:16.800 --> 00:11:20.120
want to take advantage of
those two axes of direction.

00:11:20.120 --> 00:11:22.060
Align your objects
in rows and grids,

00:11:22.060 --> 00:11:27.730
so it's really intuitive to
navigate inside your app.

00:11:27.730 --> 00:11:30.220
In the past, Android
had basic support

00:11:30.220 --> 00:11:34.160
for focus-based
navigation, but today we're

00:11:34.160 --> 00:11:37.100
announcing the Leanback
Support Library.

00:11:37.100 --> 00:11:39.350
This is a collection
of framework components

00:11:39.350 --> 00:11:42.270
that are optimized to build
fast, fluid apps for TV.

00:11:47.400 --> 00:11:49.900
They're focused on
content browsing,

00:11:49.900 --> 00:11:54.160
with smooth animations and
center-pinned scrolling.

00:11:54.160 --> 00:11:57.990
So your focus is always
right there, center in view.

00:11:57.990 --> 00:12:00.150
But we went one step further.

00:12:00.150 --> 00:12:02.500
We built full application
structure fragments

00:12:02.500 --> 00:12:06.450
which can be used to
create end-to-end apps.

00:12:06.450 --> 00:12:09.880
Let's take a look at the
structure for a typical Android

00:12:09.880 --> 00:12:11.020
TV-based app.

00:12:11.020 --> 00:12:15.920
Most successful apps on TV are
content consumption-centric,

00:12:15.920 --> 00:12:21.230
so they offer media like
movies, music, TV, and pictures.

00:12:21.230 --> 00:12:24.220
Typically, a user
enters, looks around,

00:12:24.220 --> 00:12:26.625
and finds something of
interest, either by search

00:12:26.625 --> 00:12:30.400
or just browsing the hierarchy.

00:12:30.400 --> 00:12:35.150
Then they get more detail,
like a description or price,

00:12:35.150 --> 00:12:37.710
and ultimately finally play it.

00:12:37.710 --> 00:12:40.447
Included in Leanback are these
full app structure fragments,

00:12:40.447 --> 00:12:42.780
as Chris mentioned, something
that Android hasn't really

00:12:42.780 --> 00:12:43.800
done before.

00:12:43.800 --> 00:12:46.250
These can be used
as-is or customized

00:12:46.250 --> 00:12:48.410
to suit your app's needs.

00:12:48.410 --> 00:12:51.080
They're optimized for
TV, overscan safe,

00:12:51.080 --> 00:12:56.980
with fast, fluid animations and
support for immersive imagery.

00:12:56.980 --> 00:12:58.760
So bringing it all together.

00:12:58.760 --> 00:13:01.610
Using this navigation model and
the new components of Leanback,

00:13:01.610 --> 00:13:03.260
we wanted to create
an interface that

00:13:03.260 --> 00:13:05.874
was focused for entertainment.

00:13:05.874 --> 00:13:07.290
Thanks to all of
you guys, there's

00:13:07.290 --> 00:13:09.550
a ton of great content
in the Play Store

00:13:09.550 --> 00:13:11.990
that's just begging to
be on the big screen.

00:13:11.990 --> 00:13:14.410
But we wanted to go beyond
just the grid of apps.

00:13:14.410 --> 00:13:18.850
The TV in living room is
about fun and entertainment.

00:13:18.850 --> 00:13:22.690
As you've seen from the keynote,
there is a theme across Android

00:13:22.690 --> 00:13:26.140
to bring these contextually
relevant notifications

00:13:26.140 --> 00:13:28.400
to different form factors.

00:13:28.400 --> 00:13:30.080
And that applies to TV, as well.

00:13:30.080 --> 00:13:32.367
But these notifications,
they're not

00:13:32.367 --> 00:13:33.950
the same notifications
you're used to.

00:13:33.950 --> 00:13:36.440
They come as content
recommendations.

00:13:36.440 --> 00:13:38.690
We wanted a Home screen
that gave you quick access

00:13:38.690 --> 00:13:41.340
to a blend of content
from the sources

00:13:41.340 --> 00:13:45.370
you use most, one that
encourages the simple Leanback

00:13:45.370 --> 00:13:48.250
browsing and
serendipitous discovery.

00:13:48.250 --> 00:13:50.640
And one that got to know
you and made it easier

00:13:50.640 --> 00:13:54.150
to access your most-used
apps and games.

00:13:54.150 --> 00:13:57.820
And ultimately one that
felt immersive and engaging.

00:13:57.820 --> 00:13:59.650
And with that, let's
go to the demos.

00:14:02.910 --> 00:14:04.395
[VIDEO PLAYBACK]

00:14:04.395 --> 00:14:06.537
-And your job is to
tackle, dismantle--

00:14:06.537 --> 00:14:07.370
[END VIDEO PLAYBACK]

00:14:07.370 --> 00:14:07.580
CHRIS MCKILLOP: When
you turn on your TV,

00:14:07.580 --> 00:14:08.580
you want to see content.

00:14:08.580 --> 00:14:13.879
So we bring live TV and
movies right to the forefront.

00:14:13.879 --> 00:14:15.920
If you're watching your
content and you hit home,

00:14:15.920 --> 00:14:17.900
like you would do on
any Android device,

00:14:17.900 --> 00:14:21.010
we overlay that on top
of the live content.

00:14:21.010 --> 00:14:22.800
These are new APIs
that are coming

00:14:22.800 --> 00:14:28.160
in L to allow you to
indicate that your app is--

00:14:28.160 --> 00:14:29.560
we call it gregarious.

00:14:29.560 --> 00:14:31.914
And so if your app is
gregarious and willing to share

00:14:31.914 --> 00:14:34.080
its content with the launcher,
it will show through.

00:14:34.080 --> 00:14:36.370
Otherwise, it's
going to be hidden.

00:14:44.420 --> 00:14:48.580
So when you first land in the
Home screen of an Android TV

00:14:48.580 --> 00:14:51.780
device, you're going to see
these really rich content

00:14:51.780 --> 00:14:52.860
recommendations.

00:14:52.860 --> 00:14:56.060
So these are coming
from apps on the system

00:14:56.060 --> 00:14:58.920
and are being ranked
and sorted based

00:14:58.920 --> 00:15:01.060
on the user's usage
of the device.

00:15:01.060 --> 00:15:06.240
So we rely on each of you to
provide the right content,

00:15:06.240 --> 00:15:09.170
based on how you know your
user's using your application.

00:15:09.170 --> 00:15:10.780
That's stuff we don't know.

00:15:10.780 --> 00:15:12.950
But we know, based
off the aggregate,

00:15:12.950 --> 00:15:14.810
how people are
using their device.

00:15:14.810 --> 00:15:16.100
And so we will sort and rank.

00:15:16.100 --> 00:15:17.260
I was showing pictures.

00:15:17.260 --> 00:15:21.730
I was showing Tommy Emmanuel to
Dave Burke after the keynote,

00:15:21.730 --> 00:15:24.690
and so YouTube's now
recommending more Tommy

00:15:24.690 --> 00:15:26.020
Emmanuel for me.

00:15:26.020 --> 00:15:27.630
And I use YouTube
a lot, so you'll

00:15:27.630 --> 00:15:29.840
see there's actually two
of them on the screen here.

00:15:29.840 --> 00:15:31.959
Because we know that
I use YouTube a lot.

00:15:31.959 --> 00:15:32.750
This is my account.

00:15:32.750 --> 00:15:36.610
This is my personal device,
so if you see something weird,

00:15:36.610 --> 00:15:39.520
it's just because
I'm kind of weird.

00:15:39.520 --> 00:15:43.572
So the goal is that you come
this content recommendation

00:15:43.572 --> 00:15:45.530
stream, you see exactly
what you want to watch,

00:15:45.530 --> 00:15:47.321
and you start watching
it, and you're done.

00:15:47.321 --> 00:15:48.075
One click to play.

00:15:48.075 --> 00:15:50.200
But what if you don't find
something that you want?

00:15:50.200 --> 00:15:53.547
We decided to make sure
that both search and all

00:15:53.547 --> 00:15:54.880
your applications are available.

00:15:54.880 --> 00:15:57.250
So there's a common pattern
throughout the platform.

00:15:57.250 --> 00:15:58.430
You go up to search.

00:15:58.430 --> 00:16:01.484
So if you move up to the Search
affordance on the Home screen,

00:16:01.484 --> 00:16:03.400
or you'll see when we
go into the applications

00:16:03.400 --> 00:16:06.300
that Search is also
in the up position.

00:16:06.300 --> 00:16:07.320
So you can do Search.

00:16:07.320 --> 00:16:09.270
So I'm going to use
this, see if this works.

00:16:09.270 --> 00:16:11.860
It's always very dangerous
to demo things with Wi-Fi,

00:16:11.860 --> 00:16:14.350
so forgive me.

00:16:14.350 --> 00:16:14.920
Let me see.

00:16:17.550 --> 00:16:20.743
Movie starring Tom Cruise.

00:16:20.743 --> 00:16:21.725
[DING]

00:16:21.725 --> 00:16:22.710
Thank you.

00:16:22.710 --> 00:16:24.670
So pretend this is
my remote control,

00:16:24.670 --> 00:16:27.447
and I've got my virtual remote
that has the microphone button.

00:16:27.447 --> 00:16:29.280
Hopefully when you're
using this on your TV,

00:16:29.280 --> 00:16:31.370
you're just using the remote
control that's in your hand

00:16:31.370 --> 00:16:32.740
and picking it up and searching.

00:16:32.740 --> 00:16:37.770
So that search exists at
the top of your Home screen.

00:16:37.770 --> 00:16:40.460
You can go look for content that
you're specifically interested

00:16:40.460 --> 00:16:41.890
in.

00:16:41.890 --> 00:16:45.099
Or you can look for
actors or actresses.

00:16:45.099 --> 00:16:47.140
And of course, as Dave
showed during the keynote,

00:16:47.140 --> 00:16:50.430
there's a ton of ways in
which you can then pivot on

00:16:50.430 --> 00:16:55.000
both those actors and actresses,
using Google's Knowledge

00:16:55.000 --> 00:16:56.460
Graph to find things.

00:16:56.460 --> 00:16:57.960
I'm not going to
spend a lot of time

00:16:57.960 --> 00:17:01.084
on Search, because Search
is more of a Google feature

00:17:01.084 --> 00:17:02.750
and not necessarily
a developer feature.

00:17:02.750 --> 00:17:04.541
I think it's much more
interesting to start

00:17:04.541 --> 00:17:06.028
looking at what happens.

00:17:06.028 --> 00:17:08.069
How do you actually make
content recommendations?

00:17:08.069 --> 00:17:09.450
How do you get
into the Apps row?

00:17:09.450 --> 00:17:11.908
'Cause you'll notice these apps
look a little bit different

00:17:11.908 --> 00:17:14.420
than you're used to seeing Apps
on a launcher on an Android

00:17:14.420 --> 00:17:15.020
phone.

00:17:15.020 --> 00:17:19.250
We've standardized
on a 16x9 poster

00:17:19.250 --> 00:17:21.510
for doing your
application launchers.

00:17:21.510 --> 00:17:24.140
You'll see that we've worked
with these first app developers

00:17:24.140 --> 00:17:26.359
and game developers
to show and set

00:17:26.359 --> 00:17:29.270
the standard for how
the app should work.

00:17:29.270 --> 00:17:32.650
Have the text of your name of
your application in your icon.

00:17:32.650 --> 00:17:36.210
Have it big and bright and
bold and on-brand coloring.

00:17:36.210 --> 00:17:39.030
And make sure that it has
some movement and contrast.

00:17:39.030 --> 00:17:43.831
And that's true in both the
Games row and the Apps row.

00:17:43.831 --> 00:17:45.830
So you want to know how
you get in the Apps row?

00:17:45.830 --> 00:17:49.920
So we're making a pretty
strong statement with TV.

00:17:49.920 --> 00:17:51.420
We don't believe
that TV should just

00:17:51.420 --> 00:17:54.120
be tablet apps on television.

00:17:54.120 --> 00:17:56.470
And so we actually are
going to require developers

00:17:56.470 --> 00:17:59.790
to make a few changes
to their application

00:17:59.790 --> 00:18:02.940
in order to show up in this
new launching experience.

00:18:02.940 --> 00:18:05.210
So you have to add
to your manifest

00:18:05.210 --> 00:18:08.070
the statement that
"I support Leanback."

00:18:08.070 --> 00:18:09.570
You don't have to
use our framework,

00:18:09.570 --> 00:18:12.080
but you do you have to declare
that you support Leanback.

00:18:12.080 --> 00:18:13.496
And that way the
Leanback Launcher

00:18:13.496 --> 00:18:15.220
knows that this
application's going

00:18:15.220 --> 00:18:18.410
to work for the user that has
a D-pad or a game controller.

00:18:18.410 --> 00:18:21.020
We don't want to offer up
applications that immediately

00:18:21.020 --> 00:18:23.850
say, "Please touch here
to continue," on a TV

00:18:23.850 --> 00:18:26.140
where you can't touch anything.

00:18:26.140 --> 00:18:28.350
The same goes for games.

00:18:28.350 --> 00:18:30.920
If you want to be a game, you
can declare yourself a game,

00:18:30.920 --> 00:18:34.200
and that's how we sort and
separate the Games and Apps

00:18:34.200 --> 00:18:34.940
section.

00:18:34.940 --> 00:18:37.940
You might ask, why
are we doing that?

00:18:37.940 --> 00:18:40.140
I use a lot of YouTube, a
lot of Play Movies and TV.

00:18:40.140 --> 00:18:41.640
I've been watching
Ted and Showtime.

00:18:41.640 --> 00:18:43.440
And you'll see those are all
in the left-hand position.

00:18:43.440 --> 00:18:45.130
They're the easiest
for me to get to.

00:18:45.130 --> 00:18:46.380
I don't have to think so much.

00:18:46.380 --> 00:18:49.230
Again 20 IQ points lost
when you hit the sofa.

00:18:49.230 --> 00:18:51.770
So we make sure that the
apps you use the most

00:18:51.770 --> 00:18:52.880
are at the left.

00:18:52.880 --> 00:18:55.600
Games and media
consumption applications

00:18:55.600 --> 00:18:57.430
have very different
access patterns.

00:18:57.430 --> 00:18:59.100
They have very
different use models.

00:18:59.100 --> 00:19:00.683
When you play a game,
you tend to play

00:19:00.683 --> 00:19:03.160
it a lot for a period of
time, and then maybe you

00:19:03.160 --> 00:19:04.430
don't ever play it again.

00:19:04.430 --> 00:19:07.125
And that's not true with media
consumption applications,

00:19:07.125 --> 00:19:09.500
where you're going in and out
of them based on what shows

00:19:09.500 --> 00:19:10.780
or what things you want to do.

00:19:10.780 --> 00:19:12.970
So we didn't want the games
to get pushed away just

00:19:12.970 --> 00:19:16.600
because you're very rapidly
and frequently entering

00:19:16.600 --> 00:19:17.770
a series of applications.

00:19:17.770 --> 00:19:22.000
So we promoted them to be
their own top-level entity.

00:19:22.000 --> 00:19:24.470
So that's how you do that.

00:19:24.470 --> 00:19:29.080
So the recommendations come in
through the standard Android

00:19:29.080 --> 00:19:30.890
notification system.

00:19:30.890 --> 00:19:32.910
We've added some
new tags so that we

00:19:32.910 --> 00:19:35.356
can tell the difference
between a notification that

00:19:35.356 --> 00:19:36.730
would show up in
the notification

00:19:36.730 --> 00:19:39.840
shade on your phone and tablet,
and these notifications.

00:19:39.840 --> 00:19:42.590
We thought it was powerful
to use the existing APIs

00:19:42.590 --> 00:19:44.180
and not try to
invent something new,

00:19:44.180 --> 00:19:45.660
when this would work just fine.

00:19:45.660 --> 00:19:46.920
Everyone is free to post this.

00:19:46.920 --> 00:19:49.350
This is a totally
democratic system.

00:19:49.350 --> 00:19:52.680
And we watch how the user
uses the device and sort

00:19:52.680 --> 00:19:53.900
and rank appropriately.

00:19:53.900 --> 00:19:56.980
We're recommending, I think,
five to ten notifications

00:19:56.980 --> 00:20:00.311
and content recommendations
from different apps.

00:20:00.311 --> 00:20:01.810
Leo hates it when
I do this, but I'm

00:20:01.810 --> 00:20:04.810
going to launch the
E24 app for a second.

00:20:04.810 --> 00:20:06.380
They've done a really great job.

00:20:06.380 --> 00:20:14.930
And if it'll load the
content from their app here,

00:20:14.930 --> 00:20:17.070
I should start seeing
food recommendations,

00:20:17.070 --> 00:20:19.940
like "order a pizza" in my
content recommendation row.

00:20:19.940 --> 00:20:21.110
Which is pretty great.

00:20:21.110 --> 00:20:22.260
You're sitting on the
sofa, watching a movie,

00:20:22.260 --> 00:20:23.380
you want to order a pizza.

00:20:23.380 --> 00:20:24.972
But it doesn't just
need to be movies.

00:20:24.972 --> 00:20:26.430
The key to this,
though, is we want

00:20:26.430 --> 00:20:27.860
these to be one-click access.

00:20:27.860 --> 00:20:30.110
We don't want people clicking
on things on the content

00:20:30.110 --> 00:20:32.870
recommendation row and having
to go through a big flow.

00:20:32.870 --> 00:20:34.940
So for example, if
I'm sitting here

00:20:34.940 --> 00:20:36.720
and I want to see
"Now You See Me,"

00:20:36.720 --> 00:20:38.160
I can click on "Now You See Me."

00:20:38.160 --> 00:20:39.670
I've been watching
it previously,

00:20:39.670 --> 00:20:41.090
so it's going to
resume, and it's

00:20:41.090 --> 00:20:44.480
going to kick right
back into that movie.

00:20:44.480 --> 00:20:47.324
Our networking seems to
be pretty slow in here.

00:20:47.324 --> 00:20:47.990
[VIDEO PLAYBACK]

00:20:47.990 --> 00:20:48.490
-And count from one to ten--

00:20:48.490 --> 00:20:50.210
CHRIS MCKILLOP: There we go.

00:20:50.210 --> 00:20:52.080
-One two, three, four, five--

00:20:52.080 --> 00:20:52.707
-Stop.

00:20:52.707 --> 00:20:53.540
[END VIDEO PLAYBACK]

00:20:53.540 --> 00:20:54.623
CHRIS MCKILLOP: All right.

00:20:58.020 --> 00:20:59.280
So I'm going to now dive in.

00:20:59.280 --> 00:21:00.850
That actually, that
movie's playing

00:21:00.850 --> 00:21:03.165
from Play Movies, as you
can see from the the content

00:21:03.165 --> 00:21:03.790
recommendation.

00:21:03.790 --> 00:21:06.100
I'm going to go into the top
level of Play Movies now.

00:21:06.100 --> 00:21:08.320
Play Movies from
Google is probably

00:21:08.320 --> 00:21:10.740
sort of a canonical
example of a Leanback app,

00:21:10.740 --> 00:21:14.270
using those Leanback components
that Leo was talking about.

00:21:14.270 --> 00:21:17.680
This is the
BrowseFragment, which

00:21:17.680 --> 00:21:19.720
we have set fullscreen
for Play Movies,

00:21:19.720 --> 00:21:23.869
because we're happy to
use our own APIs directly.

00:21:23.869 --> 00:21:26.160
You can see that you can very
quickly move through what

00:21:26.160 --> 00:21:28.690
we call the fast lane on the
side, which will move you

00:21:28.690 --> 00:21:33.640
through all the different
content on the right-hand side.

00:21:33.640 --> 00:21:34.960
You can move over to the left.

00:21:34.960 --> 00:21:37.820
You notice very smooth
animation, transitions,

00:21:37.820 --> 00:21:38.320
fade-ins.

00:21:38.320 --> 00:21:42.669
These all come for free when use
the Leanback framework library.

00:21:42.669 --> 00:21:44.710
And then you can scroll
through this same content

00:21:44.710 --> 00:21:46.084
again, but now
with a little more

00:21:46.084 --> 00:21:49.690
details, with ratings and the
title of the show showing up

00:21:49.690 --> 00:21:52.350
on the cards, which
didn't show up

00:21:52.350 --> 00:21:55.180
in this more compressed form.

00:21:55.180 --> 00:21:57.670
So if you go into one of
these TV shows or movies--

00:21:57.670 --> 00:22:00.200
so let's go into "Silver
Linings Playbook"--

00:22:00.200 --> 00:22:03.002
this is what we call
the DetailsFragment.

00:22:03.002 --> 00:22:03.835
It has a background.

00:22:03.835 --> 00:22:07.980
It has the ability to put
some text and some artwork.

00:22:07.980 --> 00:22:10.890
Lets you play the trailer
or buy it, and also

00:22:10.890 --> 00:22:13.250
then have additional browse
rows built right in there.

00:22:13.250 --> 00:22:14.990
So reusing the same
components that we

00:22:14.990 --> 00:22:17.400
had from the previous
screen in the Details view,

00:22:17.400 --> 00:22:21.064
so that users have
a grounding point

00:22:21.064 --> 00:22:23.230
where they can understand
where they're coming from.

00:22:25.810 --> 00:22:28.830
Besides these sort of
two, Browsing and Details,

00:22:28.830 --> 00:22:31.740
if you have something like
genres, like action/adventure,

00:22:31.740 --> 00:22:33.930
you might want to throw up
a whole bunch of content.

00:22:33.930 --> 00:22:36.910
So we actually have a grid
view where you can just

00:22:36.910 --> 00:22:40.010
put tons and tons
and tons of content.

00:22:40.010 --> 00:22:42.370
So if you try out
PBS Kids, you'll

00:22:42.370 --> 00:22:44.490
see they use that
as their only UI.

00:22:44.490 --> 00:22:45.750
Perfect for kids.

00:22:45.750 --> 00:22:49.260
Just all the cover shots
for all the shows for kids,

00:22:49.260 --> 00:22:50.310
really brightly colored.

00:22:50.310 --> 00:22:52.210
They don't need lots
of text on the screen.

00:22:52.210 --> 00:22:53.680
They know what show
they want to watch.

00:22:53.680 --> 00:22:54.750
When they want to
watch "Caillou,"

00:22:54.750 --> 00:22:56.000
they want to go there.

00:22:56.000 --> 00:22:58.740
And so that works
out really well.

00:22:58.740 --> 00:23:00.210
Let's see here.

00:23:00.210 --> 00:23:03.310
Now in addition, not
in the L Preview,

00:23:03.310 --> 00:23:04.950
but coming with
the full L release,

00:23:04.950 --> 00:23:09.040
we're going to have content
playback controls for you

00:23:09.040 --> 00:23:10.600
in the framework
library, as well.

00:23:10.600 --> 00:23:13.380
So Play Movies is using
an early version of this.

00:23:13.380 --> 00:23:17.440
So if I hit the A button or
the center click on the thing,

00:23:17.440 --> 00:23:19.280
I bring up the
transport controls.

00:23:19.280 --> 00:23:23.700
I can fast-forward, I
can rewind, I can play,

00:23:23.700 --> 00:23:24.960
I can pause.

00:23:24.960 --> 00:23:28.750
And you also get, just like
everywhere else in the system,

00:23:28.750 --> 00:23:29.940
you get Browse rows.

00:23:29.940 --> 00:23:32.380
Let me see if I can actually
get Woody Harrelson's

00:23:32.380 --> 00:23:35.980
face on the screen here.

00:23:35.980 --> 00:23:37.085
Oh, come on.

00:23:41.890 --> 00:23:44.146
All right, well, I can't get
his face, screen on face.

00:23:44.146 --> 00:23:46.270
Play Movies does some neat
things when you do that.

00:23:46.270 --> 00:23:49.850
But additionally, you'll
get additional browse rows

00:23:49.850 --> 00:23:54.110
below the transport controls,
where you can get info cards,

00:23:54.110 --> 00:23:57.800
you can put up additional
information, reviews.

00:23:57.800 --> 00:24:00.030
There's info cards on
the actors in Play Movies

00:24:00.030 --> 00:24:01.556
that I'm trying
to show you here.

00:24:01.556 --> 00:24:03.055
It's not being
terribly cooperative.

00:24:05.705 --> 00:24:06.809
Oh well.

00:24:06.809 --> 00:24:08.350
So those transport
controls are going

00:24:08.350 --> 00:24:11.710
to be coming with the L release.

00:24:11.710 --> 00:24:14.356
So I want to go through
some different examples now.

00:24:14.356 --> 00:24:16.730
So that's the canonical form
of all the different screens

00:24:16.730 --> 00:24:18.313
that we give you for
free in Leanback.

00:24:18.313 --> 00:24:20.490
What I'd like to show
you now is YouTube.

00:24:20.490 --> 00:24:23.940
So I don't know if any of
you have used YouTube on a TV

00:24:23.940 --> 00:24:24.610
before.

00:24:24.610 --> 00:24:26.540
YouTube has a pretty
standard application

00:24:26.540 --> 00:24:27.960
that they put on smart TVs.

00:24:27.960 --> 00:24:29.910
And they worked
with us to bring you

00:24:29.910 --> 00:24:33.110
the YouTube experience using
the Leanback framework.

00:24:33.110 --> 00:24:35.800
Now they really like
having the fast lane

00:24:35.800 --> 00:24:38.580
down the side for going through
all the different playlists I

00:24:38.580 --> 00:24:41.060
subscribe to, and all
the different content.

00:24:41.060 --> 00:24:43.190
But they didn't want it
to just be Browse rows.

00:24:43.190 --> 00:24:44.660
They wanted it to be a grid.

00:24:44.660 --> 00:24:47.690
So they made that modification
using standard framework

00:24:47.690 --> 00:24:50.420
components, so that they
could have a grid of content.

00:24:50.420 --> 00:24:53.130
Because they have so
much content in YouTube,

00:24:53.130 --> 00:24:55.170
simple rows wasn't
enough for them.

00:24:55.170 --> 00:24:58.440
So you can very quickly
move through the content.

00:24:58.440 --> 00:25:00.130
It still feels like
a Leanback app.

00:25:00.130 --> 00:25:02.340
It still feels like an
Android TV experience.

00:25:02.340 --> 00:25:04.692
But they are using
slightly modified versions

00:25:04.692 --> 00:25:05.400
of the framework.

00:25:08.810 --> 00:25:12.910
So the TuneIn Radio guys have
supported Google TV for years.

00:25:12.910 --> 00:25:14.563
And so we reached
out to them when

00:25:14.563 --> 00:25:16.270
we were getting ready
to do this launch.

00:25:16.270 --> 00:25:20.010
And they said, well, yeah, we'll
bring our Google TVA app over,

00:25:20.010 --> 00:25:20.870
and it'll be fine.

00:25:20.870 --> 00:25:22.690
And then they saw all the
apps we were building.

00:25:22.690 --> 00:25:24.815
They said, well, we want
our app to look like that.

00:25:24.815 --> 00:25:27.650
And so a week before
I/O, they said,

00:25:27.650 --> 00:25:29.080
we're gonna rewrite it all.

00:25:29.080 --> 00:25:29.900
And so they did.

00:25:29.900 --> 00:25:32.380
And so they wrote this app
that uses the framework

00:25:32.380 --> 00:25:34.560
components in one week.

00:25:34.560 --> 00:25:37.235
It looks just like Play Movies,
which is what you'd expect,

00:25:37.235 --> 00:25:39.360
because they haven't had
a chance to go in and make

00:25:39.360 --> 00:25:40.411
big changes to the app.

00:25:40.411 --> 00:25:41.910
But it just shows
you that they were

00:25:41.910 --> 00:25:46.350
able to bring a fluid,
fast-operating application

00:25:46.350 --> 00:25:50.710
to Android TV, one developer,
I think, in like about a week.

00:25:50.710 --> 00:25:53.600
It'll be on Play Store in
the Preview Play Store.

00:25:53.600 --> 00:25:56.180
Pretty impressive, that they
were able to pull that off.

00:25:56.180 --> 00:26:00.300
Now the TED guys have sort of
a very distinct set of design

00:26:00.300 --> 00:26:03.300
guidelines that they want to
use for their applications.

00:26:03.300 --> 00:26:06.100
So although they're using
the same Leanback framework

00:26:06.100 --> 00:26:07.535
that everyone else
is using, they

00:26:07.535 --> 00:26:10.230
have a totally and radically
different look and feel.

00:26:10.230 --> 00:26:13.970
So but this is still using
the same Browse-based rows,

00:26:13.970 --> 00:26:15.720
but they've changed
the cards, and they've

00:26:15.720 --> 00:26:17.428
changed the card-to-card
animation, which

00:26:17.428 --> 00:26:18.530
is all possible.

00:26:18.530 --> 00:26:22.250
They've clipped where the
rows are on the screen

00:26:22.250 --> 00:26:24.560
so that they can have the
full-bleed art that you see

00:26:24.560 --> 00:26:26.750
as you go through
the different movies.

00:26:26.750 --> 00:26:29.330
So it's completely compliant
with the design guidelines.

00:26:29.330 --> 00:26:30.500
It's using the framework.

00:26:30.500 --> 00:26:34.120
But it looks like
a TED experience.

00:26:34.120 --> 00:26:36.310
This is one of the big
goals we had for this,

00:26:36.310 --> 00:26:39.510
was to have that kind of
flexibility for app developers,

00:26:39.510 --> 00:26:41.220
to both quickly
get on the platform

00:26:41.220 --> 00:26:43.690
and get [INAUDIBLE] TV,
while also have the ability

00:26:43.690 --> 00:26:47.700
to make those sort of
customized brand-on changes.

00:26:47.700 --> 00:26:50.790
And the last one I'm going
to show you is Showtime.

00:26:50.790 --> 00:26:57.060
Now the folks at Showtime
have a very strong design

00:26:57.060 --> 00:26:58.770
for their application on TV.

00:26:58.770 --> 00:27:00.900
This is completely
custom widgetry.

00:27:00.900 --> 00:27:02.930
So they don't use any
piece of Leanback.

00:27:02.930 --> 00:27:05.120
But the Showtime guys
understand living room.

00:27:05.120 --> 00:27:05.910
And so it's OK.

00:27:05.910 --> 00:27:08.170
They've written an
Android application that

00:27:08.170 --> 00:27:11.640
uses low-level Android
framework components to do focus

00:27:11.640 --> 00:27:13.910
management, but they're
not using Leanback.

00:27:13.910 --> 00:27:15.410
But that's OK,
because they're fully

00:27:15.410 --> 00:27:17.530
compliant with the
left-to-right navigation,

00:27:17.530 --> 00:27:20.270
the up-down browse paradigms,
and everything's usable

00:27:20.270 --> 00:27:21.400
with a D-pad.

00:27:21.400 --> 00:27:23.180
So this just sort of
shows you just sort

00:27:23.180 --> 00:27:28.250
of the levels and the degrees
to which you can make changes.

00:27:28.250 --> 00:27:31.290
So on that note, I'm going
to end my part of the demo

00:27:31.290 --> 00:27:34.320
and switch back over to slides,
and let Andrew come and talk

00:27:34.320 --> 00:27:36.981
a little bit about the Live
TV integration on the Android

00:27:36.981 --> 00:27:37.480
framework.

00:27:37.480 --> 00:27:38.636
Thank you, everyone.

00:27:38.636 --> 00:27:44.360
[APPLAUSE]

00:27:44.360 --> 00:27:45.650
ANDREW JEON: Thanks, Chris.

00:27:45.650 --> 00:27:50.450
So with the framework, we expect
you guys can build as quickly.

00:27:50.450 --> 00:27:54.970
And then these apps will mostly
serve audio/video content.

00:27:54.970 --> 00:27:57.340
And then we believe
it could fulfill

00:27:57.340 --> 00:27:59.310
all the user's [INAUDIBLE].

00:27:59.310 --> 00:28:01.870
But if you think about
it, actually, there

00:28:01.870 --> 00:28:04.220
are some things bit missing.

00:28:04.220 --> 00:28:08.390
So if you think about
TV device for TV set,

00:28:08.390 --> 00:28:10.970
and set-top boxes from
operators, and even

00:28:10.970 --> 00:28:14.070
streamer boxes, a lot of
people recently believed

00:28:14.070 --> 00:28:18.030
that the TV experience-- video
content, watching experience

00:28:18.030 --> 00:28:21.260
in the living room-- will
move from broadcast TV

00:28:21.260 --> 00:28:23.220
to online streaming.

00:28:23.220 --> 00:28:26.440
However the data
shows that still,

00:28:26.440 --> 00:28:30.650
in many parts of the world,
majority of the time user

00:28:30.650 --> 00:28:33.820
spends on watching video
content is live TV.

00:28:33.820 --> 00:28:35.870
So we wanted to
build a framework

00:28:35.870 --> 00:28:39.150
to support proper
live TV integration,

00:28:39.150 --> 00:28:41.270
to build a device like this.

00:28:41.270 --> 00:28:43.600
And as we mentioned in a
previous slide, earlier,

00:28:43.600 --> 00:28:46.040
there are still hundreds
of billions of TVs

00:28:46.040 --> 00:28:48.520
and tens of billions
of set-top boxes

00:28:48.520 --> 00:28:51.260
being produced in
the world every year.

00:28:51.260 --> 00:28:56.830
And if we want to claim Android
to be an operating system

00:28:56.830 --> 00:29:00.010
to do the TV and
set-top box, we need

00:29:00.010 --> 00:29:02.540
to have a framework to
support these kind of devices.

00:29:05.980 --> 00:29:09.530
So when it comes to making
a TV or set-top box,

00:29:09.530 --> 00:29:11.480
first problem every
device maker faces

00:29:11.480 --> 00:29:14.860
is that are a lot of
different TV standards.

00:29:14.860 --> 00:29:18.220
Like it's not [INAUDIBLE]
fragmented, but this

00:29:18.220 --> 00:29:19.380
the one layer of it.

00:29:19.380 --> 00:29:21.870
It's only the
broadcasting standard.

00:29:21.870 --> 00:29:24.440
But if you to look
into more substandard,

00:29:24.440 --> 00:29:25.690
there are many more.

00:29:25.690 --> 00:29:27.030
It's very complicated.

00:29:27.030 --> 00:29:30.790
And then each device maker
chooses their own solution

00:29:30.790 --> 00:29:33.610
to fulfill the requirements
for each market,

00:29:33.610 --> 00:29:37.640
and it only works for
that device types.

00:29:37.640 --> 00:29:43.190
So we thought that in order to
make Android as an operating

00:29:43.190 --> 00:29:45.680
system to support
these device makers,

00:29:45.680 --> 00:29:50.070
we thought we had to have
some kind of good framework.

00:29:50.070 --> 00:29:52.990
And then in addition
to TV standard,

00:29:52.990 --> 00:29:54.830
if you look at the
TV device especially,

00:29:54.830 --> 00:29:57.740
there are a lot of different
physical input ports--

00:29:57.740 --> 00:30:01.760
HDMI, Component, AV
port, and built-in tuner.

00:30:01.760 --> 00:30:03.730
So what does that
mean, is people

00:30:03.730 --> 00:30:08.210
usually hook up lot
of device to TV.

00:30:08.210 --> 00:30:11.340
And of course, still,
for example, in the US,

00:30:11.340 --> 00:30:13.370
more than 80% of
the people living

00:30:13.370 --> 00:30:17.560
in US watches TV from paid
TV operator's set-top box.

00:30:17.560 --> 00:30:18.680
What does that mean?

00:30:18.680 --> 00:30:21.370
It's that if you look at
your living room today,

00:30:21.370 --> 00:30:23.600
there are a lot of remote
controls lying around.

00:30:23.600 --> 00:30:27.755
And whenever you play
game, or play Blu-ray disk,

00:30:27.755 --> 00:30:31.140
or watch TV-- depends
on your activity--

00:30:31.140 --> 00:30:33.300
you have to pick up the
right remote control.

00:30:33.300 --> 00:30:35.900
And a lot of devices
are competing

00:30:35.900 --> 00:30:41.480
against your time
for each HDMI input.

00:30:41.480 --> 00:30:43.580
So this is quite frustrating.

00:30:43.580 --> 00:30:47.680
So we've been thinking about a
solution, how we can fix this.

00:30:47.680 --> 00:30:51.670
But we cannot fix
it ourselves alone,

00:30:51.670 --> 00:30:55.680
so we need some support
from the developers.

00:30:55.680 --> 00:30:57.490
So let's take a look
at what we've built,

00:30:57.490 --> 00:31:00.390
so that we can give you
an idea of what we expect

00:31:00.390 --> 00:31:03.370
as a whole eco-system, including
ourselves and developers,

00:31:03.370 --> 00:31:05.730
can do to solve this problem.

00:31:05.730 --> 00:31:14.580
So during the keynote today--
should I press something?

00:31:14.580 --> 00:31:15.080
It's stuck.

00:31:18.805 --> 00:31:20.840
CHRIS MCKILLOP: Tell
them to switch to demo.

00:31:20.840 --> 00:31:21.845
ANDREW JEON: Oh.

00:31:21.845 --> 00:31:24.070
So that was not demo.

00:31:24.070 --> 00:31:25.597
So that was a
screenshot somehow.

00:31:25.597 --> 00:31:29.010
[LAUGHTER]

00:31:29.010 --> 00:31:33.160
Sorry, it come [INAUDIBLE],
so I was confused.

00:31:33.160 --> 00:31:35.790
So you can see the
icon called TV.

00:31:35.790 --> 00:31:39.490
And if you click it,
you can watch TV.

00:31:39.490 --> 00:31:42.870
In the Sandbox, if you
visit the Sandbox today,

00:31:42.870 --> 00:31:47.690
you can actually watch real
live TV over the air upstairs.

00:31:47.690 --> 00:31:51.920
But here for keynote and demo,
we are using a mock-up demo.

00:31:51.920 --> 00:31:53.860
Basically we are
using some local Fire

00:31:53.860 --> 00:31:57.110
to demonstrate
multiple channels.

00:31:57.110 --> 00:32:01.420
So as we can see, you have
a standard channel banner

00:32:01.420 --> 00:32:04.890
shows off title of the
program and timing and things

00:32:04.890 --> 00:32:05.910
like that.

00:32:05.910 --> 00:32:08.180
And then if you bring
up a menu, these

00:32:08.180 --> 00:32:11.550
are channels a user has
been watching recently.

00:32:11.550 --> 00:32:13.210
And it's been
automatically ordered

00:32:13.210 --> 00:32:16.530
by the frequency,
and then ranking.

00:32:16.530 --> 00:32:19.140
We thought user may want
to go back to the channel.

00:32:19.140 --> 00:32:20.860
Then these are the menus.

00:32:20.860 --> 00:32:22.210
This is a preview version.

00:32:22.210 --> 00:32:25.645
We just spent a few weeks
to put together this UI.

00:32:25.645 --> 00:32:28.340
So it's going to be much
better in the future.

00:32:28.340 --> 00:32:31.000
But for now, we have
some essential options.

00:32:31.000 --> 00:32:35.880
And the one thing I want to
show you is the TV Input menu.

00:32:35.880 --> 00:32:39.590
So the concept of TV input
is very important to us.

00:32:39.590 --> 00:32:41.815
We wanted to come up
with a single application

00:32:41.815 --> 00:32:45.370
to watch every
single live channel.

00:32:45.370 --> 00:32:49.070
But there are multiple ways
to get live TV sources.

00:32:49.070 --> 00:32:51.790
So we defined a concept
called TV Input.

00:32:51.790 --> 00:32:56.940
TV Input represents a method
to provide list of channels.

00:32:56.940 --> 00:33:01.030
So in this case, we actually
called out Unified TV Input.

00:33:01.030 --> 00:33:03.190
But in the future, there
will be no Unified Input.

00:33:03.190 --> 00:33:06.250
TV app itself will run
in a Unified Input mode

00:33:06.250 --> 00:33:07.020
all the time.

00:33:07.020 --> 00:33:09.180
But just for now, to separate.

00:33:09.180 --> 00:33:11.430
And we have three
different TV Input sources.

00:33:11.430 --> 00:33:14.230
If you go to each one of
them, each one of them

00:33:14.230 --> 00:33:17.410
will have their own
channels, fake channels.

00:33:17.410 --> 00:33:19.680
So the first one
has two channels.

00:33:19.680 --> 00:33:21.670
And then let's go back.

00:33:21.670 --> 00:33:27.710
And then the second one,
if I choose the second one,

00:33:27.710 --> 00:33:30.450
this is to demonstrate
HLS-based stream.

00:33:30.450 --> 00:33:33.720
This is very common test video.

00:33:33.720 --> 00:33:37.900
Most streaming content
developer knows about.

00:33:37.900 --> 00:33:41.090
And then here we just have
three different fake channels.

00:33:41.090 --> 00:33:44.970
So this shows you each input
can have a different channel.

00:33:44.970 --> 00:33:49.910
If I go back to
our demo TV input,

00:33:49.910 --> 00:33:52.880
you can see four
channels, which look nice,

00:33:52.880 --> 00:33:53.780
because we fake them.

00:33:53.780 --> 00:33:56.670
It should be nice.

00:33:56.670 --> 00:34:00.510
So concept is when you
switch different TV input,

00:34:00.510 --> 00:34:02.100
you can see different channels.

00:34:02.100 --> 00:34:04.340
But in ideal world,
users shouldn't

00:34:04.340 --> 00:34:08.897
have to change input from
HDMI1 to HDMI2 or something.

00:34:08.897 --> 00:34:09.730
It shouldn't happen.

00:34:09.730 --> 00:34:10.929
Or built-in tuner.

00:34:10.929 --> 00:34:14.969
So the idea is we wanted
to unify all of that.

00:34:14.969 --> 00:34:18.460
So this mode, Unified
Input, demonstrates

00:34:18.460 --> 00:34:20.409
how we merge all the channels.

00:34:20.409 --> 00:34:22.590
So if I go back to
a channel listing,

00:34:22.590 --> 00:34:25.400
you can see every single
channel from every single input.

00:34:25.400 --> 00:34:26.900
That's the concept we've built.

00:34:26.900 --> 00:34:31.320
And this should be the basis
to anything on top of it,

00:34:31.320 --> 00:34:32.553
around live TV.

00:34:32.553 --> 00:34:33.719
That's why I wanted to show.

00:34:33.719 --> 00:34:36.899
Let's go back to slides to
talk about it a little more.

00:34:41.159 --> 00:34:43.922
Slide, please?

00:34:43.922 --> 00:34:46.239
OK.

00:34:46.239 --> 00:34:47.520
So this is the UI you saw.

00:34:47.520 --> 00:34:50.190
I thought it was
alive, but it's not.

00:34:50.190 --> 00:34:54.356
So basically, there
are multiple ways

00:34:54.356 --> 00:34:57.180
that live TV source can
be delivered to user.

00:34:57.180 --> 00:35:00.460
First of all, many parts
of the world still,

00:35:00.460 --> 00:35:02.890
over-the-air broadcast
is very popular.

00:35:02.890 --> 00:35:08.040
You have antenna or
cable to get the antenna

00:35:08.040 --> 00:35:11.630
feed to your living room
and hook-up, and the scan.

00:35:11.630 --> 00:35:16.110
Second is paying some
money to a pay TV operator,

00:35:16.110 --> 00:35:17.980
and they deliver
you a set-top box.

00:35:17.980 --> 00:35:21.610
And set-top box actually
gets you a live TV feed.

00:35:21.610 --> 00:35:24.360
Up until recently, cable
operator or satellite

00:35:24.360 --> 00:35:27.150
was popular, but these
days, IPTV operators

00:35:27.150 --> 00:35:28.920
are getting more popular.

00:35:28.920 --> 00:35:30.340
So this second type.

00:35:30.340 --> 00:35:33.380
Third type is just
purely from IP.

00:35:33.380 --> 00:35:35.800
And in this case, there
could be a pay TV operator

00:35:35.800 --> 00:35:41.030
which uses IP, IP TV operator,
or some online sources.

00:35:41.030 --> 00:35:43.580
But we wanted to be able
to unify all of this,

00:35:43.580 --> 00:35:46.370
if user has multiple access.

00:35:46.370 --> 00:35:50.840
Let's say in some countries like
Luxembourg, this crazy country

00:35:50.840 --> 00:35:53.640
where you have access to
four different countries'

00:35:53.640 --> 00:35:58.150
TV feed, and then three
different types of TV standard,

00:35:58.150 --> 00:36:00.030
and online service.

00:36:00.030 --> 00:36:02.770
And people in Europe move
a lot, so Germany people

00:36:02.770 --> 00:36:05.620
live in France, and they want
to watch a Germany channel.

00:36:05.620 --> 00:36:08.350
And English people
live in Sweden

00:36:08.350 --> 00:36:10.530
and want to watch
the English channel.

00:36:10.530 --> 00:36:11.630
So it's all mixed.

00:36:11.630 --> 00:36:14.900
So especially in
Europe, and even

00:36:14.900 --> 00:36:17.590
in some other part
of the world, people

00:36:17.590 --> 00:36:23.390
has a demand to watch live TV
channels from different worlds.

00:36:23.390 --> 00:36:24.860
How we can serve that?

00:36:24.860 --> 00:36:29.610
So let's say we unify, we build
a frame so some application, as

00:36:29.610 --> 00:36:33.250
a plug-in to a live TV app,
can support a live TV feed.

00:36:33.250 --> 00:36:35.820
Then we just unify
into a single lineup.

00:36:35.820 --> 00:36:40.310
And then we can filter
them by category or quality

00:36:40.310 --> 00:36:42.460
or by users' preference
on top of it.

00:36:46.130 --> 00:36:51.490
So the reason why I'm talking
to you today is we cannot build

00:36:51.490 --> 00:36:54.650
this unified channel
ourselves alone.

00:36:54.650 --> 00:36:56.480
So there are a few use cases.

00:36:56.480 --> 00:36:58.890
We can get some help
from developers.

00:36:58.890 --> 00:37:02.760
First use case is let's say
you're just getting the TV

00:37:02.760 --> 00:37:04.400
signal from pay TV
operator set-top

00:37:04.400 --> 00:37:07.320
box, like most
people in America.

00:37:07.320 --> 00:37:10.080
Then how can we unify that?

00:37:10.080 --> 00:37:13.130
How can we use a single remote
control to watch live TV

00:37:13.130 --> 00:37:17.910
and, at the same time, enjoy
a bunch of online streaming

00:37:17.910 --> 00:37:19.770
content and play games?

00:37:19.770 --> 00:37:25.810
So in this case, we expect some
developers to write a module,

00:37:25.810 --> 00:37:28.660
and we just categorize
it as a virtual TV input.

00:37:28.660 --> 00:37:33.260
It is a sub-APK which
includes TV Input service.

00:37:33.260 --> 00:37:35.650
You'll learn the
details about it

00:37:35.650 --> 00:37:39.580
tomorrow, once the
SDK is published.

00:37:39.580 --> 00:37:43.090
So Virtual Input can
talk to set-top box

00:37:43.090 --> 00:37:46.600
if they understand
how to talk to.

00:37:46.600 --> 00:37:48.990
I mean, recently,
many pay TV operators

00:37:48.990 --> 00:37:52.410
are publishing the protocol
to talk to set-top box,

00:37:52.410 --> 00:37:56.530
or cloud API to check the
lineup of the subscriber

00:37:56.530 --> 00:37:58.120
and fetch data.

00:37:58.120 --> 00:38:00.150
And then it will send
a command to tune.

00:38:00.150 --> 00:38:04.460
So this Virtual Input module
can translate the command

00:38:04.460 --> 00:38:10.410
from the single system,
like TVF, to tune.

00:38:10.410 --> 00:38:12.430
And then get that
command, translate

00:38:12.430 --> 00:38:14.810
to proprietary command
the set-top box

00:38:14.810 --> 00:38:18.480
understands, and actual A/V
data can come from set-top box

00:38:18.480 --> 00:38:21.140
through HDMI port to TV device.

00:38:21.140 --> 00:38:22.950
So then from user's
point of view,

00:38:22.950 --> 00:38:25.860
user is using TV
app you just saw

00:38:25.860 --> 00:38:28.770
to watch TV from
set-top box, and change

00:38:28.770 --> 00:38:31.020
the channel to Android TV.

00:38:31.020 --> 00:38:32.870
But actually, changing
channel action

00:38:32.870 --> 00:38:34.780
will happen on the set-top box.

00:38:34.780 --> 00:38:39.110
That's what we call two-way
parity, two-way connection.

00:38:39.110 --> 00:38:41.890
So that is actually possible
today with many pay TV operator

00:38:41.890 --> 00:38:46.170
set-top box, and we do
have a close partner,

00:38:46.170 --> 00:38:48.700
some third-party
developer partners,

00:38:48.700 --> 00:38:51.450
who are working on a
few versions of this.

00:38:51.450 --> 00:38:54.070
And we hope some
people in the room

00:38:54.070 --> 00:38:56.217
or in the world to build
these kind of things,

00:38:56.217 --> 00:38:57.550
to bring [INAUDIBLE] experience.

00:39:00.880 --> 00:39:04.520
Second case is as you
can see in the sandbox

00:39:04.520 --> 00:39:08.970
today, the device we have
here doesn't have any tuner,

00:39:08.970 --> 00:39:11.420
but it can actually
watch live TV.

00:39:11.420 --> 00:39:12.850
How can it be possible?

00:39:12.850 --> 00:39:16.330
Because there's an external
device which converts

00:39:16.330 --> 00:39:21.170
broadcast feed from antenna or
cable provider into IP feed.

00:39:21.170 --> 00:39:27.450
So in this case, IP input
device can get the A/V data

00:39:27.450 --> 00:39:31.760
from the device, which we call
as a place-shifting device.

00:39:31.760 --> 00:39:33.330
Shifting place means
that-- let's say

00:39:33.330 --> 00:39:38.370
you have an antenna coming
down the corner of the house,

00:39:38.370 --> 00:39:41.500
that you placed it there.

00:39:41.500 --> 00:39:44.010
And then once you
convert to IP, anywhere

00:39:44.010 --> 00:39:47.080
in your house where your Wi-Fi
connection can be reached,

00:39:47.080 --> 00:39:49.030
you can get that signal.

00:39:49.030 --> 00:39:50.790
So that's why we call
it place-shifting.

00:39:50.790 --> 00:39:52.740
So there are many types
of device like this.

00:39:52.740 --> 00:39:54.290
But today, in the
Sandbox, we were

00:39:54.290 --> 00:39:59.060
using a device called HDHomeRun,
made by a company neamed

00:39:59.060 --> 00:40:01.130
SiliconDust, in Livermore.

00:40:01.130 --> 00:40:05.100
So it was very small
and easy-to-use device

00:40:05.100 --> 00:40:06.140
we are using.

00:40:06.140 --> 00:40:10.210
So that device has its
own command set for us

00:40:10.210 --> 00:40:13.610
to fetch AP data and also
send a command to tune.

00:40:13.610 --> 00:40:15.540
And then we can
publish the AP data

00:40:15.540 --> 00:40:18.740
to the common database
in the Android TV device.

00:40:18.740 --> 00:40:23.750
Then Live TV app can render
channels and watch TV.

00:40:23.750 --> 00:40:30.430
Lastly, in case where live TV
signal is delivered via IP,

00:40:30.430 --> 00:40:35.510
one can write a TV input module
that gets the feed via IP,

00:40:35.510 --> 00:40:39.190
push they A/V data to the IP,
and send a command over IP.

00:40:39.190 --> 00:40:42.110
So there are two
cases of IP inputs.

00:40:42.110 --> 00:40:46.400
One is multicast IP input
on the managed network.

00:40:46.400 --> 00:40:50.020
For example, IP TV operator
has their own managed

00:40:50.020 --> 00:40:53.360
high-quality network,
so this input connection

00:40:53.360 --> 00:40:56.340
is joining broadcast
network and streamed TV.

00:40:56.340 --> 00:41:02.040
The other case is that if any
content provider or broadcaster

00:41:02.040 --> 00:41:05.740
has a sub somewhere in internet,
provides adaptive streaming

00:41:05.740 --> 00:41:09.720
base to live TV, then this
input can go fetch it.

00:41:09.720 --> 00:41:12.470
Basically it's streaming,
but from user's perspective,

00:41:12.470 --> 00:41:13.660
it's live TV.

00:41:13.660 --> 00:41:17.140
So that is actually quite
common by many operators.

00:41:17.140 --> 00:41:22.460
Let's say you are a Time
Warner customer, or a pay TV

00:41:22.460 --> 00:41:25.350
operator's customer in
some part of the world.

00:41:25.350 --> 00:41:29.330
Then as a subscriber, you
get access to their IP feed,

00:41:29.330 --> 00:41:32.130
so that you can watch TV
on your tablet or phone.

00:41:32.130 --> 00:41:35.360
The same type of
sources can be used

00:41:35.360 --> 00:41:39.040
to power live TV on Android TV.

00:41:39.040 --> 00:41:42.280
So as a visual, we
imagine one day,

00:41:42.280 --> 00:41:44.910
no matter where you're
getting live TV sources,

00:41:44.910 --> 00:41:48.450
we hope the user to
enjoy all the content,

00:41:48.450 --> 00:41:50.670
including live TV
and streaming content

00:41:50.670 --> 00:41:56.020
and games using single remote
control and game controller.

00:41:56.020 --> 00:41:56.820
That's our hope.

00:42:00.230 --> 00:42:01.310
But there's more.

00:42:01.310 --> 00:42:07.060
So there are many people
who've seen me multiple times.

00:42:07.060 --> 00:42:08.970
I've been pushing
the Android framework

00:42:08.970 --> 00:42:11.795
to enhance the A/V
pipeline for many years.

00:42:11.795 --> 00:42:16.760
And now we are really
getting close with L release.

00:42:16.760 --> 00:42:21.270
We are asking developers
to build their apps

00:42:21.270 --> 00:42:24.250
to deliver content,
especially video and audio.

00:42:24.250 --> 00:42:26.370
The problem is, if
Android platform

00:42:26.370 --> 00:42:29.480
itself is not capable of
supporting your streaming

00:42:29.480 --> 00:42:34.030
protocol, or closed caption,
or high-quality video playback,

00:42:34.030 --> 00:42:36.090
even if we've been
building the framework,

00:42:36.090 --> 00:42:39.770
it's actually not
easy to write apps.

00:42:39.770 --> 00:42:44.320
So what we've been working on is
enhancing the video framework.

00:42:44.320 --> 00:42:48.190
So first of all, in terms of
supporting streaming protocol,

00:42:48.190 --> 00:42:52.040
we have a separate session going
on, either today or tomorrow,

00:42:52.040 --> 00:42:53.270
about ExoPlayer.

00:42:53.270 --> 00:42:57.710
ExoPlayer will be
open-sourced media player,

00:42:57.710 --> 00:43:02.100
uses low-level primitives,
such as VideoCrypt, Video DRM,

00:43:02.100 --> 00:43:04.960
and Video Codec.

00:43:04.960 --> 00:43:08.460
And it's a Java
implementational video player.

00:43:08.460 --> 00:43:12.330
And it gives you MPEG-DASH
and Smooth Streaming protocol

00:43:12.330 --> 00:43:14.150
implementation by default.

00:43:14.150 --> 00:43:17.270
And since it's open-sourced,
you can take the source code

00:43:17.270 --> 00:43:20.370
and then implement your own
custom streaming protocol,

00:43:20.370 --> 00:43:21.750
if you have.

00:43:21.750 --> 00:43:24.140
So that we will not
be the blocking factor

00:43:24.140 --> 00:43:27.240
for you to support your
content in your backend,

00:43:27.240 --> 00:43:30.340
so that you can write an app
that streams your content.

00:43:30.340 --> 00:43:33.790
And on top of that,
there has been

00:43:33.790 --> 00:43:36.560
a lot of requests
to support more

00:43:36.560 --> 00:43:39.010
various types of subtitles.

00:43:39.010 --> 00:43:44.790
So in L release, we are
adding TTML and CEA-608.

00:43:44.790 --> 00:43:49.840
Especially CEA-608 was
high demand request

00:43:49.840 --> 00:43:54.140
from many content providers,
because especially TV shows

00:43:54.140 --> 00:43:56.730
being captured from
broadcast and then delivered

00:43:56.730 --> 00:43:59.780
as a streaming media, their
closed-captions source

00:43:59.780 --> 00:44:02.520
is encoded in CEA-608 format.

00:44:02.520 --> 00:44:05.890
So unless we support that, those
content cannot be supported.

00:44:05.890 --> 00:44:08.710
And now we already support
WebVTT since KitKat.

00:44:08.710 --> 00:44:09.950
So we have three formats.

00:44:09.950 --> 00:44:11.750
Maybe there are some
other formats, too,

00:44:11.750 --> 00:44:15.270
but these are what
we can support by L.

00:44:15.270 --> 00:44:21.830
And when users play content on
phone versus on the TV device,

00:44:21.830 --> 00:44:23.080
TVs couldn't speak.

00:44:23.080 --> 00:44:27.430
So if there's any glitch in
terms of audio/video sync

00:44:27.430 --> 00:44:30.310
or video rendering,
user can notice easily.

00:44:30.310 --> 00:44:34.810
So the bar for video playback
quality is very high on TV.

00:44:34.810 --> 00:44:38.640
So we spent a lot of energy
on making audio/video playback

00:44:38.640 --> 00:44:42.780
quality to be TV quality
by using TV Associates

00:44:42.780 --> 00:44:45.120
feature to turn audio and video.

00:44:45.120 --> 00:44:51.180
And we started VP9 and HEVC
codec to support 4K content.

00:44:51.180 --> 00:44:54.650
And AC3, obviously, to
support AC3 content.

00:44:54.650 --> 00:44:56.850
And as Chris mentioned,
we support Widevine Level

00:44:56.850 --> 00:44:59.242
1 and Playready.

00:44:59.242 --> 00:45:00.198
Thanks.

00:45:00.198 --> 00:45:01.632
[APPLAUSE]

00:45:01.632 --> 00:45:03.066
CHRIS MCKILLOP:
Thank you, Andrew.

00:45:06.900 --> 00:45:08.960
So during the
keynote this morning,

00:45:08.960 --> 00:45:11.480
and also in the Sandbox,
if you've seen it,

00:45:11.480 --> 00:45:15.990
and up here, right here,
we've been doing all this

00:45:15.990 --> 00:45:18.150
on real hardware.

00:45:18.150 --> 00:45:21.220
And we call that hardware ADT-1.

00:45:21.220 --> 00:45:23.510
So some old guy
once said, "Which

00:45:23.510 --> 00:45:25.100
came first, the
chicken or the egg?"

00:45:25.100 --> 00:45:26.650
This is an important
statement when

00:45:26.650 --> 00:45:29.310
you're building a new platform
or adding a new device

00:45:29.310 --> 00:45:30.960
type to an existing platform.

00:45:30.960 --> 00:45:32.819
App developers don't
want to support you

00:45:32.819 --> 00:45:34.360
if you don't have
a piece of hardware

00:45:34.360 --> 00:45:36.139
for them to develop
their apps against.

00:45:36.139 --> 00:45:37.680
And hardware
manufacturers don't want

00:45:37.680 --> 00:45:39.910
to support your new platform
unless you show them running it

00:45:39.910 --> 00:45:41.330
on another piece of hardware.

00:45:41.330 --> 00:45:44.050
And so we were the only
ones that could fix this.

00:45:44.050 --> 00:45:47.070
So what we did was build ADT-1.

00:45:47.070 --> 00:45:50.260
This is a media
streaming microconsole.

00:45:50.260 --> 00:45:52.820
Choose your acronym
that you want to have.

00:45:52.820 --> 00:45:54.230
But we built it for developers.

00:45:54.230 --> 00:45:56.620
We built it originally
for inside of Google.

00:45:56.620 --> 00:46:00.410
This chicken-and-egg problem
exists with everybody.

00:46:00.410 --> 00:46:04.135
Everyone has too-busy schedules
and doesn't have time,

00:46:04.135 --> 00:46:06.510
and doesn't necessarily believe
that what you're building

00:46:06.510 --> 00:46:08.830
is real, unless you give
them something to play with.

00:46:08.830 --> 00:46:14.330
So what we've
decided to do is take

00:46:14.330 --> 00:46:17.710
that box, which is a
Tegra4 CPU, 2 gigs of RAM,

00:46:17.710 --> 00:46:21.205
16 gigs of Flash,
2x2 MIMO Wi-Fi, HDMI.

00:46:21.205 --> 00:46:22.580
It's running L
Developer Preview,

00:46:22.580 --> 00:46:25.210
and it's fully unlocked,
comes with a developer cable

00:46:25.210 --> 00:46:27.860
so that you can reflash it
and do whatever you want.

00:46:27.860 --> 00:46:31.420
It's essentially the same level
of openness as a Nexus device.

00:46:31.420 --> 00:46:33.230
And so everyone here
at the session today

00:46:33.230 --> 00:46:34.396
is going to get one of them.

00:46:34.396 --> 00:46:38.480
[CHEERING AND APPLAUSE]

00:46:38.480 --> 00:46:43.440
So everyone watching the live
stream, starting tomorrow,

00:46:43.440 --> 00:46:45.830
you're going to be able to
go online and request one.

00:46:45.830 --> 00:46:47.650
We have a small
number that we're

00:46:47.650 --> 00:46:50.330
going to give to existing
Android developers.

00:46:50.330 --> 00:46:52.910
Please go online to
the URL there-- it

00:46:52.910 --> 00:46:56.300
won't be live till tomorrow--
and request your device,

00:46:56.300 --> 00:46:58.390
and we'll get those out to you.

00:46:58.390 --> 00:47:02.610
So this should let everyone
here in the room experience

00:47:02.610 --> 00:47:03.950
what we've been showing you.

00:47:03.950 --> 00:47:08.330
Start bringing your apps over
to Android TV, and really

00:47:08.330 --> 00:47:10.690
sort of see what's
next for Android.

00:47:10.690 --> 00:47:12.900
There's going to be vouchers.

00:47:12.900 --> 00:47:15.532
You'll get the device tomorrow
with all the other hardware.

00:47:15.532 --> 00:47:17.240
There's vouchers
that'll be at the doors.

00:47:17.240 --> 00:47:21.520
Make sure you get your
voucher on the way out.

00:47:21.520 --> 00:47:22.500
And don't rush.

00:47:22.500 --> 00:47:24.230
There's lots for everybody.

00:47:24.230 --> 00:47:25.909
[LAUGHTER]

00:47:25.909 --> 00:47:26.950
So just get your voucher.

00:47:26.950 --> 00:47:28.290
You'll be able to pick it
up tomorrow, downstairs

00:47:28.290 --> 00:47:29.550
at Registration.

00:47:29.550 --> 00:47:31.240
It won't be a problem at all.

00:47:31.240 --> 00:47:34.070
So I want to thank everyone
for coming to the presentation

00:47:34.070 --> 00:47:34.570
today.

00:47:34.570 --> 00:47:37.510
We'll have all the
documentation-- screenshots,

00:47:37.510 --> 00:47:41.930
example code, GitHub
projects-- up online tomorrow

00:47:41.930 --> 00:47:43.350
for you to get moving.

00:47:43.350 --> 00:47:45.520
So enjoy, and thank you.

00:47:45.520 --> 00:47:50.670
[APPLAUSE]

