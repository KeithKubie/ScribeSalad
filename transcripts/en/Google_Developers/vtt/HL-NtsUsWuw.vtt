WEBVTT
Kind: captions
Language: en

00:00:07.919 --> 00:00:11.049
&gt;&gt;Seth Ladd: Okay. Welcome, everybody. Thank
you. We're going to go ahead and get started.

00:00:11.049 --> 00:00:14.719
Really appreciate you coming and spending
your time with us today.

00:00:14.719 --> 00:00:21.730
This panel is Chrome Web Store Publisher Forum.
My name is Seth Ladd. I'm a developer advocate

00:00:21.730 --> 00:00:27.080
here with Google. I work with the Chrome team,
which means we focus on Chrome, HTML5, and

00:00:27.080 --> 00:00:31.150
the Open Web Platform. We work with partners
of all different sizes and help them get up

00:00:31.150 --> 00:00:36.230
productively on these APIs and products.
A couple of housekeeping notes.

00:00:36.230 --> 00:00:40.050
This session is being streamed live, so for
everyone here and everyone at home, we have

00:00:40.050 --> 00:00:43.780
a Google Moderator link up here. Please do
enter your questions here. Vote them up and

00:00:43.780 --> 00:00:48.319
down, and at the end of the sessions we'll
do an open Q&amp;A, so please come up to the mics

00:00:48.319 --> 00:00:53.899
and/or we'll use the moderator here as well.
Please do find me and any of us -- my Twitter

00:00:53.899 --> 00:00:58.859
handle is @SethLadd -- here at the show, after
this session, or just online. Love to chat

00:00:58.859 --> 00:01:02.889
with everyone, what they're doing with HTML5
and Chrome and Web Store and apps. So definitely

00:01:02.889 --> 00:01:08.130
love to hear about what you're up to.
So this is the Web Store panel, and I want

00:01:08.130 --> 00:01:11.320
to give a quick just recap of what's been
happening lately.

00:01:11.320 --> 00:01:16.270
We actually announced the Web Store one year
ago at Google I/O, worked really hard on it,

00:01:16.270 --> 00:01:20.369
released it in December of last year, and
today it's integrated with every U.S. version

00:01:20.369 --> 00:01:24.100
of Chrome right there on the New Tab page.
So Chrome users are now getting access to

00:01:24.100 --> 00:01:29.390
the Web Store.
Chrome is a platform in and of itself, with

00:01:29.390 --> 00:01:34.039
120 million active users. It's really cool
to think about Chrome as a platform, not as

00:01:34.039 --> 00:01:40.320
a browser, so we have CHROME ENTERPRISE, Chrome
browser, Chrome OS netbooks, Chrome Frame,

00:01:40.320 --> 00:01:43.609
lots of different ways to get Chrome into
the hands of your users.

00:01:43.609 --> 00:01:50.380
So whenever a new platform arises, the question
now is: Well, the user expectation is really

00:01:50.380 --> 00:01:53.590
changing and they're saying where are the
apps. They're no longer concerned about WiFi

00:01:53.590 --> 00:01:55.842
or anything like that. They want to know where
the apps are.

00:01:55.842 --> 00:02:01.829
So the Chrome Web Store gets your apps into
the hands of the Chrome platform users.

00:02:01.829 --> 00:02:05.340
This is -- might sound like a really obvious
point, but I think it's subtle and bears repeating

00:02:05.340 --> 00:02:09.890
that the Chrome Web Store users use Chrome
and if we think about this, that means that

00:02:09.890 --> 00:02:16.540
the users of your apps can get the full power
and benefit of HTML5, fast release cycles,

00:02:16.540 --> 00:02:19.480
and the Chrome browser.
So this is, in a sense, your safety net to

00:02:19.480 --> 00:02:25.360
develop and deliver great HTML5 apps and not
necessarily have to worry about legacy browsers.

00:02:25.360 --> 00:02:29.540
So it's your chance now to really push forward
the power of your apps on the web.

00:02:29.540 --> 00:02:34.709
Today we're going to hear from three different
successful Chrome Web Store publishers, each

00:02:34.709 --> 00:02:38.489
telling a different story about their experiences.
We're going to start with Springpad, who is

00:02:38.489 --> 00:02:42.250
going to tell us their story of how they moved
from a website to web app and explore some

00:02:42.250 --> 00:02:47.610
of the differences between sites and apps.
We'll then hear from World Golf Tour, who

00:02:47.610 --> 00:02:50.629
is going to tell us a little bit about what
happened after they published into the Web

00:02:50.629 --> 00:02:53.900
Store and why you should publish into the
Web Store.

00:02:53.900 --> 00:02:58.000
And then the New York Times will take it on
home to talk about HTML5 and some of the great

00:02:58.000 --> 00:03:04.879
APIs and tools there to develop a really powerful
HTML5 app.

00:03:04.879 --> 00:03:09.049
But you didn't come here to listen to me,
so I'd like to turn it over first to Jason

00:03:09.049 --> 00:03:13.470
Horman, chief architect of Springpad, who
will tell us about moving from website to

00:03:13.470 --> 00:03:18.709
web app.
&gt;&gt;Jason Horman: Hello, everybody. My name

00:03:18.709 --> 00:03:25.610
is Jason Horman, chief architect and cofounder
at Springpad, and I've been a Boston-based

00:03:25.610 --> 00:03:32.650
developer for about 15 years. Started out
at Lycos.com and been doing DHTML since then,

00:03:32.650 --> 00:03:38.920
doing Java, Python, and working in the Boston
developer community.

00:03:38.920 --> 00:03:45.290
So what is Springpad?
Springpad is a task application. It's a note

00:03:45.290 --> 00:03:50.141
application. It's an application to track
your movies, your books. It's really a way

00:03:50.141 --> 00:03:54.890
to organize your life, and we'd like to think
of it as a database for your life.

00:03:54.890 --> 00:04:00.080
So we store all of this information in a structured
way. That allows us to enhance it, to provide

00:04:00.080 --> 00:04:06.170
enhancements to it. We can give you movie
show times. We can give you restaurant reviews.

00:04:06.170 --> 00:04:13.359
We can take your notes and do more with them
than a traditional just text-based note application.

00:04:13.359 --> 00:04:18.959
So back in August of last year, we had launched
our iPhone apps, we had launched our Android

00:04:18.959 --> 00:04:25.380
app, and we noticed a problem. We noticed
that the Web application's engagement was

00:04:25.380 --> 00:04:30.390
trailing our mobile applications by quite
a bit. It was almost two-to-one. And we took

00:04:30.390 --> 00:04:34.470
a look at that and were just thinking what
do we need to do? What is it about those mobile

00:04:34.470 --> 00:04:39.450
applications that's working and the web -- what
is it about the website that's sort of not

00:04:39.450 --> 00:04:42.460
working?
And we sort of came to the conclusion that

00:04:42.460 --> 00:04:48.210
the great thing about the mobile applications
was that they were so focused. That the constraints

00:04:48.210 --> 00:04:52.560
of the device allowed us to think through
how do we make a great -- a great application

00:04:52.560 --> 00:04:57.270
that users can get in, get out, and use very
quickly to get their tasks done.

00:04:57.270 --> 00:05:02.480
And we looked at the Web application and sort
of noticed that we had designed more of a

00:05:02.480 --> 00:05:06.490
website than a Web application. That the -- the
website had a lot of extra information. It

00:05:06.490 --> 00:05:12.290
had settings buttons and it had your sort
of profile picture. It was fixed width. It

00:05:12.290 --> 00:05:19.110
used a number of sort of web development,
website techniques, and we -- we took a look

00:05:19.110 --> 00:05:25.460
at this and said, "Let's think about how to
move this along and become a true Web application."

00:05:25.460 --> 00:05:31.910
And I think that what that means is that we
want that application to -- you know, to sort

00:05:31.910 --> 00:05:35.800
of feel like a desktop application. And so
what was natural for us to think about was

00:05:35.800 --> 00:05:40.310
to launch that into the Chrome app store.
So we wanted to launch this as an app, relaunch

00:05:40.310 --> 00:05:44.120
this as an app.
So the process of moving from a site to an

00:05:44.120 --> 00:05:47.100
app.
Well, we had a frame of reference. Our mobile

00:05:47.100 --> 00:05:51.900
applications were sort of where we wanted
to be. We liked the idea that our users are

00:05:51.900 --> 00:05:56.711
using their iPads, they're using their XOOM
tablets, and like the interface and they want

00:05:56.711 --> 00:06:02.440
to know that when they move between devices
and between modalities, that they're using

00:06:02.440 --> 00:06:07.350
the same application and they understand how
to use that application, so we wanted to unify

00:06:07.350 --> 00:06:09.550
it.
So where do we start? We started with our

00:06:09.550 --> 00:06:15.060
navigation. We decided let's go full-screen.
Let's sort of remove all of that extra stuff

00:06:15.060 --> 00:06:20.760
that is great for a website that doesn't work
great for a Web application. Headers, footers.

00:06:20.760 --> 00:06:28.430
Let's make it feel like this is an app you've
installed onto your desktop and moves as fast

00:06:28.430 --> 00:06:31.680
as you need to move.
The next thing we did is we sort of added

00:06:31.680 --> 00:06:39.620
the polish. So, you know, we sweated the details
around gradients, colors, the HTML5 CSS3 animations.

00:06:39.620 --> 00:06:45.430
We added user customization features, theming,
let users select their own backgrounds, let

00:06:45.430 --> 00:06:50.050
them really customize their experience so
they feel like they own it.

00:06:50.050 --> 00:06:56.130
Then we sort of took it a step further and
we introduced what we called the board. And

00:06:56.130 --> 00:07:00.060
what the board is, is it allows our users
to organize their information visually. They

00:07:00.060 --> 00:07:04.970
can take those notes, take those tasks, take
those restaurants, and they can place them

00:07:04.970 --> 00:07:11.090
onto sort of a board there where they can
organize things underneath a label of "Tuesday,"

00:07:11.090 --> 00:07:15.250
"Wednesday." They can sort of group the related
information together that they want.

00:07:15.250 --> 00:07:23.750
They can resize each individual component.
They can drag and drop off the desktop files,

00:07:23.750 --> 00:07:30.590
notes, attachments, photos. And again, we
sort of liked the idea of taking notes a step

00:07:30.590 --> 00:07:35.160
further and allowing users to use them any
way they want, and for us a number of our

00:07:35.160 --> 00:07:39.360
users wanted to be able to do it in a sort
of visual way.

00:07:39.360 --> 00:07:45.240
So where we ended up was that we are really
proud that we have a cross-platform experience.

00:07:45.240 --> 00:07:48.390
All of our apps sort of feel and look the
same.

00:07:48.390 --> 00:07:54.990
And I think that's really important, in that,
again, our users can understand our platform

00:07:54.990 --> 00:07:58.930
in one place. They might not even really understand
that we have a Web application yet, but when

00:07:58.930 --> 00:08:03.640
they finally make that jump between modes,
they understand where they are. And I think

00:08:03.640 --> 00:08:08.310
this can apply in the future towards Google
TV. Wherever we are, we want to have sort

00:08:08.310 --> 00:08:12.680
of a consistent experience, and that experience
is our application.

00:08:12.680 --> 00:08:16.270
So it's only natural for our Web application
to feel like an application.

00:08:16.270 --> 00:08:24.070
So how did we do since launching?
Well, right after launch, you can see that

00:08:24.070 --> 00:08:29.551
we had a spike in that our Web application
users started to match our Android users.

00:08:29.551 --> 00:08:34.110
We actually doubled our Web application users
in the next two months after launching into

00:08:34.110 --> 00:08:37.779
the Chrome app store.
Another important metric is that we had a

00:08:37.779 --> 00:08:42.969
5X growth in the number of saves. One of the
metrics we like to track is that people are

00:08:42.969 --> 00:08:47.899
saving a lot of things, and that's sort of
engagement, and we like to think that because

00:08:47.899 --> 00:08:54.050
the application was faster and simpler and
more engaging, that these users were saving

00:08:54.050 --> 00:08:58.750
a lot more into the system.
Other statistics, the web makes up about 50%

00:08:58.750 --> 00:09:04.439
of our daily access now. That's up quite a
bit since launch. And our Chrome users spend

00:09:04.439 --> 00:09:08.870
a lot -- Chrome app store users spend a lot
of time in our application. They spend, on

00:09:08.870 --> 00:09:11.850
average, about 30 minutes a day, which is
fantastic.

00:09:11.850 --> 00:09:15.430
They sort of leave it up all day and they
record new notes into it.

00:09:15.430 --> 00:09:20.970
We also have a Chrome browser extension where
as they're surfing the web, they can be clipping

00:09:20.970 --> 00:09:25.529
directly into their Springpad.
"All I can say is it is the best." Feedback

00:09:25.529 --> 00:09:31.250
from some of our users from the Chrome website.
Wow! Absolutely fantastic.

00:09:31.250 --> 00:09:35.100
So I want to talk a little bit about websites
versus apps again.

00:09:35.100 --> 00:09:39.490
So another thing I'd like to point out is
that we feel that productivity users are sort

00:09:39.490 --> 00:09:42.190
of app-focused people. They think about desktop
apps quite a bit.

00:09:42.190 --> 00:09:47.490
They might think about, in the old days, you
know, installing a task management app or

00:09:47.490 --> 00:09:53.519
using Outlook, and I think it's only natural
for those people to want to install an application.

00:09:53.519 --> 00:09:59.240
And so I think it might seem like a minor
distinction, but becoming more of an application

00:09:59.240 --> 00:10:03.720
sort of, I think -- especially these days
with Android and iPhone, pushing the envelope

00:10:03.720 --> 00:10:08.009
with applications and pushing consumers to
understand what they are, that that's really

00:10:08.009 --> 00:10:11.420
important.
So what makes applications great is -- what

00:10:11.420 --> 00:10:15.970
makes Web applications great is they should
be very, very fast.

00:10:15.970 --> 00:10:20.920
They should have a layout that fills the screen,
that feels like it would if you were clicking

00:10:20.920 --> 00:10:24.860
it on the dock. And I assume in the future
that's where we'll be, where you could run

00:10:24.860 --> 00:10:28.800
a Web application right from your dock, and
I wouldn't want it to feel like a website

00:10:28.800 --> 00:10:32.680
when I do that.
On that note, I think applications are a little

00:10:32.680 --> 00:10:37.720
more task-oriented than websites. Websites
are more about browsing.

00:10:37.720 --> 00:10:43.670
So when you're -- when you're in an application,
you want to do something. You want to create

00:10:43.670 --> 00:10:47.480
a task. You want to create a note. You want
to act on it. You want to book a reservation.

00:10:47.480 --> 00:10:52.170
And I think apps also imply some additional
functionality that you don't necessarily associate

00:10:52.170 --> 00:10:59.569
with the web, which includes background notifications,
background processing. Offline access is a

00:10:59.569 --> 00:11:08.730
big one. And Chrome provides that from -- through
local storage, through Web SQL, and IndexedDB.

00:11:08.730 --> 00:11:11.459
So people are looking for apps, and where
do they go to find apps?

00:11:11.459 --> 00:11:14.290
Well, they go to the Chrome app store, of
course.

00:11:14.290 --> 00:11:17.759
You know, the great thing about an app store,
obviously, is when you're searching for apps,

00:11:17.759 --> 00:11:21.420
it provides a curated experience to browse
and search for those applications. You're

00:11:21.420 --> 00:11:27.350
not just going to Google and searching for
"task" and sifting through the millions of

00:11:27.350 --> 00:11:30.819
results that might come back. You're going
to get what you were looking for, which is

00:11:30.819 --> 00:11:36.610
a web-based application for handling tasks,
movies, whatever you were searching for.

00:11:36.610 --> 00:11:39.610
And obviously for companies, it provides a
new channel to reach users.

00:11:39.610 --> 00:11:46.509
You know, there's traditional advertising,
affiliate, but having these stores now for

00:11:46.509 --> 00:11:52.860
us -- you know, for iPhone, for Android, the
marketplace, and now the Chrome app store

00:11:52.860 --> 00:11:56.519
-- it provides this amazing channel to get
users into your application.

00:11:56.519 --> 00:12:02.589
The other thing the app stores provides is
that enhanced permission feature, where you

00:12:02.589 --> 00:12:06.550
can -- when you install from the app store,
you can request things like unlimited storage

00:12:06.550 --> 00:12:13.910
or access to your geolocation, and that opens
up a lot of possibilities for designing complicated

00:12:13.910 --> 00:12:17.920
applications.
So today, we're announcing that we've implemented

00:12:17.920 --> 00:12:22.410
Springpad offline.
We think, again, productivity apps should

00:12:22.410 --> 00:12:27.499
feel very, very fast.
Well, offline isn't necessarily all about

00:12:27.499 --> 00:12:33.249
being off line. One of the great things about
implementing offline support is that you're

00:12:33.249 --> 00:12:36.519
essentially saying "I'm going to sync all
the user's data to their machine, so even

00:12:36.519 --> 00:12:41.199
when they're online, they're using their local
database." And that's very powerful. They're

00:12:41.199 --> 00:12:45.379
not waiting for these RPC connections or JSON
connections to servers where those servers

00:12:45.379 --> 00:12:49.220
might have some latency.
Some of you in the room probably have experienced

00:12:49.220 --> 00:12:54.800
that a few weeks ago Amazon had some issues.
Our user base wasn't super happy about that,

00:12:54.800 --> 00:12:57.680
and at the same time we were building our
offline support and we were just thinking

00:12:57.680 --> 00:13:02.589
to ourselves, wow, if we had this, that whole
Chrome user base wouldn't have even really

00:13:02.589 --> 00:13:06.880
cared because all their apps -- all their
data was local and they might not have really

00:13:06.880 --> 00:13:10.879
even noticed that we went down. Our iPhone
users and Android users didn't really notice,

00:13:10.879 --> 00:13:13.759
and now our Chrome users won't really notice,
necessarily.

00:13:13.759 --> 00:13:18.089
We base this implementation on Web SQL.
We needed the power of SQL. Springpad does

00:13:18.089 --> 00:13:22.930
a lot of "select group by count," a lot of
complicated queries to filter down for the

00:13:22.930 --> 00:13:27.180
notes you're interested in, the movies you're
trying to find, and Web SQL provided that

00:13:27.180 --> 00:13:30.079
power for us.
The New York Times is going to talk a little

00:13:30.079 --> 00:13:34.410
bit about how they use Web SQL and the performance
that it provides.

00:13:34.410 --> 00:13:38.660
And one of the great things about Web SQL
is that it's based on SQLite and our Android

00:13:38.660 --> 00:13:45.160
app is based on SQLite, so we took our Android
code base, we used GWT, Java to Java. Very

00:13:45.160 --> 00:13:51.300
simple. We sort of just moved our database
class from Android over to Chrome and got

00:13:51.300 --> 00:13:55.699
up and running very, very quickly.
And again, the -- another really huge benefit

00:13:55.699 --> 00:13:59.850
of this is that all these Chrome users are
not touching our servers anymore, and, you

00:13:59.850 --> 00:14:04.059
know, we have to run quite a few servers to
keep up with the number of users we have installing

00:14:04.059 --> 00:14:08.160
the -- our applications, and we've seen that
we're reducing our server queries by 30 to

00:14:08.160 --> 00:14:12.389
40% by having this offline access, which is
just amazing and our ops guy is sort of thanking

00:14:12.389 --> 00:14:18.550
us for Chrome, you know.
So where we ended up. We converted our web

00:14:18.550 --> 00:14:24.130
-- I'd say "site" -- to a web app. We believe
now that it's a multimodal world where you

00:14:24.130 --> 00:14:29.119
have to sort of address that there are a lot
of clients out there, and I think that consistent

00:14:29.119 --> 00:14:32.779
UX is key to that; that these users should
understand your application and understand

00:14:32.779 --> 00:14:37.850
how it works in a consistent way, which -- which
means you should bring your Chrome app -- your

00:14:37.850 --> 00:14:42.910
web apps up to speed with these mobile applications,
and I would argue make them as simple and

00:14:42.910 --> 00:14:45.139
as streamlined as those mobile applications
are.

00:14:45.139 --> 00:14:50.290
And HTML5 makes this possible. You know, in
particular, I'd say the Web SQL stuff really

00:14:50.290 --> 00:14:56.120
is amazing and will provide some real strong
performance benefits to your applications.

00:14:56.120 --> 00:15:02.060
So I'm Jason Horman from Springpad.com, twitter
@JHorman, and now I'm going to pass it to

00:15:02.060 --> 00:15:12.589
YuChiang Cheng, from World Golf Tour, to talk
a little bit more about Chrome.

00:15:12.589 --> 00:15:13.589
Thanks.
[Applause]

00:15:13.589 --> 00:15:15.870
&gt;&gt;YuChiang Cheng: Hello. My name is YuChiang.
I'm the cofounder of World Golf Tour, a serial

00:15:15.870 --> 00:15:20.839
entrepreneur, which probably means I should
seek some help, but despite that, let me share

00:15:20.839 --> 00:15:25.290
a couple of stories that we have about World
Golf Tour as well as talk about our experience

00:15:25.290 --> 00:15:32.649
with publishing on the Google Chrome Web Store.
So World Golf Tour, we're based here in San

00:15:32.649 --> 00:15:38.550
Francisco. We are just leading the way in
changing how people, sports fans, can engage

00:15:38.550 --> 00:15:44.720
with the Web and the products they like. In
the past, sports fans, in order to game, they

00:15:44.720 --> 00:15:49.420
had really limited options. They could either
go to the local brick-and-mortar store, buy

00:15:49.420 --> 00:15:56.259
a game console for, I don't know, $300, buy
the game they wanted to play for another 60

00:15:56.259 --> 00:16:00.720
or $40 and get a really, really great visual
and engaging experience.

00:16:00.720 --> 00:16:05.540
Or, they could go on the Web and, really,
for sports fans, the main Web application

00:16:05.540 --> 00:16:11.449
or Web use that they had was looking up scores,
reading about the news or playing fantasy

00:16:11.449 --> 00:16:16.079
sports. Each of those had their own limitations
in terms of how the fan could engage with

00:16:16.079 --> 00:16:18.761
those products.
And so at World Golf Tour what we've done,

00:16:18.761 --> 00:16:25.649
we've been able to merge the visual aspects
of a game console, you know, AAA title such

00:16:25.649 --> 00:16:31.329
as a game from EA or so and actually bring
that onto the Web and bring that same experience

00:16:31.329 --> 00:16:39.240
to have all the openness, accessible, and
actually the free use of that type of game

00:16:39.240 --> 00:16:45.389
online. This is a shot of Harbor Town, and
that's a screen capture of our product. It

00:16:45.389 --> 00:16:51.380
doesn't take any download. You don't need
to install anything to play this game. And

00:16:51.380 --> 00:16:58.319
the visuals are really the best in the world.
So that formula has worked out really well

00:16:58.319 --> 00:17:03.439
for us, to be able to bring the accessibility
of the Web with the production qualities and

00:17:03.439 --> 00:17:09.400
large budgets of the big-game publishers.
We have over 3 million registered users now.

00:17:09.400 --> 00:17:14.750
We are the largest golfing game online property
there is.

00:17:14.750 --> 00:17:20.360
And we have merged the game with the more
traditional online media model. Now we are

00:17:20.360 --> 00:17:26.690
the Number 3 largest Web site for golf in
the world also. So being able to sort of create

00:17:26.690 --> 00:17:32.570
a hybridization of gaming, which is very engaging
content, with the accessibility of a Web site

00:17:32.570 --> 00:17:41.240
has done very well for us.
Here's a quick video of our product. And I

00:17:41.240 --> 00:17:47.110
will just walk you through it here very shortly.
In our product, it is very simple. You, basically,

00:17:47.110 --> 00:17:53.580
go to the Web site or, in this case, Google
Chrome Web store. You can go and choose from

00:17:53.580 --> 00:17:58.770
14 world-famous courses. These are all courses
that are in the top 100 in the world. Anything

00:17:58.770 --> 00:18:06.940
from Kiawah Island, Bethpage Black, St. Andrews
as well as Pebble Beach at times.

00:18:06.940 --> 00:18:10.970
And it is a whole community of people. They
not only play games but they read the news,

00:18:10.970 --> 00:18:15.750
they social network with each other. We have
our own social graph that they are able to

00:18:15.750 --> 00:18:18.260
connect with other golfers to play multi-player
games with each other.

00:18:18.260 --> 00:18:23.000
They are also able to play in tournaments
against each other. So they take their gaming

00:18:23.000 --> 00:18:27.690
skill and actually can compete in tournaments.
And they actually win real prizes and are

00:18:27.690 --> 00:18:32.930
able to see how they rank against the rest
of the players in the world.

00:18:32.930 --> 00:18:40.760
We also have a virtual golf store where you're
able to buy virtual equipment. So what you're

00:18:40.760 --> 00:18:45.611
able to do, we have partnerships with games
like Ping, TaylorMade and Callaway. What we

00:18:45.611 --> 00:18:51.540
do is we actually take the physical properties
and the cad cams of those equipment, we actually

00:18:51.540 --> 00:18:57.050
hit them in the store, record all the properties
of them and then actually put them into the

00:18:57.050 --> 00:19:02.400
game. So if an R11 driver is easier to hit
and it has a larger sweet spot and you can

00:19:02.400 --> 00:19:07.870
hit the golf ball a little further, you get
those some properties here in the game.

00:19:07.870 --> 00:19:13.770
We also have a strong sponsorship model. So
between the sponsorship model and the virtual

00:19:13.770 --> 00:19:20.830
item sales, we're able to, basically, give
the game for free for everyone to go and play.

00:19:20.830 --> 00:19:25.500
Let's see here. Let me show you a little bit
about how we build it because it is actually

00:19:25.500 --> 00:19:31.280
pretty interesting. We actually go to all
the different golf courses and we take helicopters

00:19:31.280 --> 00:19:36.000
and aircrafts and we actually fly over the
course and laser scan them to half-an-inch

00:19:36.000 --> 00:19:41.400
accuracy. That allows us to produce all the
different surfaces as well as the greens and

00:19:41.400 --> 00:19:46.580
replicate them to a high degree of accuracy,
where if you roll the ball across the greens,

00:19:46.580 --> 00:19:51.010
it will actually roll and dip and move exactly
like it does in real life.

00:19:51.010 --> 00:19:55.590
It was so accurate, in fact, that for the
last U.S. Open, the players actually played

00:19:55.590 --> 00:20:00.700
our game ahead of time to get used to the
course to understand where it was. And there

00:20:00.700 --> 00:20:04.910
is a game name Ramada Ryuji Imada, who is
a pretty famous golfer in Japan, he actually

00:20:04.910 --> 00:20:10.150
prepared for Bethpage Black for about 16 hours
just rolling the ball across our virtual greens

00:20:10.150 --> 00:20:17.710
looking at how it played.
Here is a quick picture -- video of us flying

00:20:17.710 --> 00:20:23.910
over Oakmont. Basically, what happens is after
we laser scan the course, we take roughly

00:20:23.910 --> 00:20:31.650
300,000 photographs of the course. We geo
tag all that information, and it is sort of

00:20:31.650 --> 00:20:36.820
like Street View on steroids. You then are
able to walk through the course and not only

00:20:36.820 --> 00:20:41.980
see the photographs at each individual point
but also able to interact with each of the

00:20:41.980 --> 00:20:46.940
photographs. We have a very complex metadata
layer behind each of these photographs mapped

00:20:46.940 --> 00:20:52.320
onto the 3D environment model that we build
to create detail that allows you to then interact

00:20:52.320 --> 00:20:59.860
with every single pixel on that photograph.
So Oakmont is a beautiful course if you haven't

00:20:59.860 --> 00:21:06.630
been there.
So here is a quick view of one of our internal

00:21:06.630 --> 00:21:12.170
tools. Basically, what it does, is after we
geo tag every photograph, we are able to put

00:21:12.170 --> 00:21:16.620
it into our school set which then basically
places the photograph in its correctly geo

00:21:16.620 --> 00:21:23.990
located space and actually tries to align
it into the 3D model automatically. It is

00:21:23.990 --> 00:21:30.820
pretty cool technology.
So at the end of the day, this is what you

00:21:30.820 --> 00:21:39.620
get. You get to play a game on a beautiful
golf course for free in your Chrome Web browser.

00:21:39.620 --> 00:21:46.271
So as you can tell, we have a pretty mature
game. It is a really big-budget product. And

00:21:46.271 --> 00:21:50.390
we're in the phase where we're really just
trying to find more users for the product.

00:21:50.390 --> 00:21:54.570
What we've learned is when people come and
they show up and they are able to experience

00:21:54.570 --> 00:21:58.210
the game, they stay and they like to play
and they are very engaged.

00:21:58.210 --> 00:22:04.540
So for us, what we're doing is we are looking
for new channels of user acquisition. Right

00:22:04.540 --> 00:22:08.900
now we actually drive a lot of users from
Google AdWords as well as from Facebook and

00:22:08.900 --> 00:22:13.650
where we are actually looking for a different
way for driving users so that we don't have

00:22:13.650 --> 00:22:21.310
so much dependence on single sources of traffic.
So we are also looking for the fact that different

00:22:21.310 --> 00:22:26.080
players from different channels actually have
different spending and engagement characteristics.

00:22:26.080 --> 00:22:32.110
And so our company is pretty driven by our
analytics. And what we're looking for is actually

00:22:32.110 --> 00:22:38.480
a user profile that could actually spend more
time on our product, be able to target those

00:22:38.480 --> 00:22:44.000
users better and then have them deposit by
their virtual items and participate longer

00:22:44.000 --> 00:22:51.510
on a product and effectively have a higher
lifetime value to us for making deposits.

00:22:51.510 --> 00:22:56.660
And one of the major barriers to actually
getting someone to be worth something to us

00:22:56.660 --> 00:23:00.030
in terms of a deposit value is actually getting
through the payments hurdle. So that's actually

00:23:00.030 --> 00:23:06.740
a big problem that we have where you get large
breakage from the top of the funnel into the

00:23:06.740 --> 00:23:10.821
deposit. And, you know, just a few percentage
points even in terms of reducing the friction

00:23:10.821 --> 00:23:15.890
to get that deposit means a lot. It turns
out to be a very substantial difference in

00:23:15.890 --> 00:23:21.500
the revenue you can generate from each of
the users. So we are looking for some solutions

00:23:21.500 --> 00:23:29.460
and some channels where the payment mechanism
could effectively have a lot less friction.

00:23:29.460 --> 00:23:36.820
So that really brought us to find the Chrome
Web store. And so as usual, what we wanted

00:23:36.820 --> 00:23:43.280
to do is test things. So our approach to this
was to, basically, take our product, package

00:23:43.280 --> 00:23:50.220
it into an application and put it into the
Web store. And for us, we decided to go with

00:23:50.220 --> 00:23:56.240
two different applications. And the main reason
for this is we wanted to, A, test the duration

00:23:56.240 --> 00:24:00.220
and simplicity that's required to have an
application in the Chrome Web store and see

00:24:00.220 --> 00:24:03.310
how it affected conversion rates as well as
LTV.

00:24:03.310 --> 00:24:09.290
So we created two apps. One of them is a 9-shot
challenge, which is actually a very narrated,

00:24:09.290 --> 00:24:14.740
simple experience where the user basically
comes in and can do nine quick shots. They

00:24:14.740 --> 00:24:18.950
don't really need to know anything about golf
at all, and they can come and play the game

00:24:18.950 --> 00:24:24.680
quickly. It is a very simple experience.
Our second application is the full product

00:24:24.680 --> 00:24:29.440
where they can actually go play all the different
courses. There's less hand holding of the

00:24:29.440 --> 00:24:34.980
user as they get into the environment and
there is a lot more depth of play.

00:24:34.980 --> 00:24:39.050
And so we were just seeing, like, what's the
trade-off between the conversion rate between

00:24:39.050 --> 00:24:43.860
something that's more simple versus something
that's a little bit more in-depth versus the

00:24:43.860 --> 00:24:48.140
long-term value of the users that we acquired
on the simple product versus the more in-depth

00:24:48.140 --> 00:24:52.730
product.
So as it turns out, the simple product is

00:24:52.730 --> 00:24:57.910
working better. The conversion rates are higher,
and the LTVs are actually the same. So this

00:24:57.910 --> 00:25:01.450
game here is actually the number one sports
game on the Chrome Web store now. This is

00:25:01.450 --> 00:25:06.920
the short version of our product, and the
second one is the longer version.

00:25:06.920 --> 00:25:11.250
And what we've learned is that they're actually
worth relatively the same. The shorter product

00:25:11.250 --> 00:25:16.720
converts better.
So you can see the users have rated it 4 1/2

00:25:16.720 --> 00:25:23.170
stars out of 5. They love the experience.
They really value the fact that there's a

00:25:23.170 --> 00:25:31.890
large budget product game available in the
Chrome Web store and that they can play it.

00:25:31.890 --> 00:25:35.670
So let me just go into more details about
the result. This is the most popular sports

00:25:35.670 --> 00:25:42.410
game right now. And we basically acquired
over 60,000 users in just six months. What's

00:25:42.410 --> 00:25:49.670
surprising to us and a great sign is that
of the users that we acquire on the Google

00:25:49.670 --> 00:25:56.150
Chrome Web store, they play on average 23%
more in terms of time and duration on our

00:25:56.150 --> 00:26:01.130
site than all the users we get on aggregate
from the other channels. So they're highly

00:26:01.130 --> 00:26:07.830
engaged compared to the rest of the Web.
Additionally, these are users who spend money.

00:26:07.830 --> 00:26:13.930
These are users, for some reason that we're
trying to delve into, that have a better sort

00:26:13.930 --> 00:26:20.140
of deposit rate than we get from the rest
of the Internet. So on average, they deposit

00:26:20.140 --> 00:26:24.860
147% more in terms of lifetime value to us,
which is a great sign, because, you know,

00:26:24.860 --> 00:26:31.820
you never know what the channels are, especially
if they're free. And this is really the number

00:26:31.820 --> 00:26:37.490
one statistic that we look at.
And because of that, we're putting our full

00:26:37.490 --> 00:26:41.120
weight and shoulder behind launching more
applications and putting more marketing and

00:26:41.120 --> 00:26:48.590
product development behind our products on
the Chrome Web store. So we're announcing

00:26:48.590 --> 00:26:54.410
today that this summer you are going to be
able to, basically, experience the full U.S.

00:26:54.410 --> 00:27:00.640
Open through the Web store. And with a partnership
with the USGA, the U.S. Open and ourselves

00:27:00.640 --> 00:27:05.230
and Google, you are going to be able to see
live streaming of the U.S. Open golf tournament

00:27:05.230 --> 00:27:09.490
as well as the scores. And through us, you
are going to be able to actually play the

00:27:09.490 --> 00:27:15.200
same course that the professionals are playing
at the same time online. So we have gone and

00:27:15.200 --> 00:27:21.190
shot Congressional and replicated it so you
can go and play that.

00:27:21.190 --> 00:27:26.270
So the big take-aways for us is that, you
know, large-budget games can be successful

00:27:26.270 --> 00:27:31.610
in the Chrome Web store. It was really easy
for us to launch and repackage it. The folks

00:27:31.610 --> 00:27:36.130
at Google were very helpful. We, basically,
got both applications up and running in less

00:27:36.130 --> 00:27:40.790
than a week.
The rankings sort of speak for themselves,

00:27:40.790 --> 00:27:47.220
and the great surprise to us was the value
of the users that we were able to acquire.

00:27:47.220 --> 00:27:52.270
And, you know, one of the things that I didn't
quite emphasize enough but -- is the payment

00:27:52.270 --> 00:27:57.460
part of it is actually pretty crucial. And
we think that that's probably why our LTVs

00:27:57.460 --> 00:28:01.800
are higher here, is that the trust of the
Google brand to, basically, use app payments

00:28:01.800 --> 00:28:09.650
or the Google checkout payments, seem to be
helping quite a bit.

00:28:09.650 --> 00:28:13.070
And for all of you guys, if you want to go
try out our app, you can just go to the Chrome

00:28:13.070 --> 00:28:18.240
Web store and type in WGT, find our app. To
help you out a little bit, you can put in

00:28:18.240 --> 00:28:23.770
"io" and we'll give you a free TaylorMade
driver that you can go and try.

00:28:23.770 --> 00:28:26.770
On that note, I'm going to hand you off to
Andre who is going to talk a little bit about

00:28:26.770 --> 00:28:39.180
developing on the Chrome Web store.
[ Applause ]

00:28:39.180 --> 00:28:42.110
&gt;&gt;Andre Behrens: Hi, everyone. I'm Andre Behrens,
I'm a senior product engineer for "The New

00:28:42.110 --> 00:28:48.040
York Times," which means that in addition
to writing code, I come up with product ideas

00:28:48.040 --> 00:28:53.030
and try to make them happen.
So one of my main products that I work on

00:28:53.030 --> 00:28:58.200
is called the Times Skimmer, which also serves
as our Chrome map. You can find it on the

00:28:58.200 --> 00:29:08.370
Chrome Web store or you can go to nytimes.com/chrome.
I will do a quick demo of it. You can read

00:29:08.370 --> 00:29:17.440
columns in it. You can navigate around sections
very easily with nice, little sliding -- one

00:29:17.440 --> 00:29:23.590
of my favorite features is that you can really
change the way it looks very quickly with

00:29:23.590 --> 00:29:34.310
a whole skinning engine.
We have some enthusiastic users. They say

00:29:34.310 --> 00:29:39.480
things like "I like the app," "Best way to
read 'The Times,'" "Basically, the best thing

00:29:39.480 --> 00:29:42.960
ever." I think that's my favorite tweet I
have read, and I have read a lot of tweets,

00:29:42.960 --> 00:29:48.110
thousands of tweets actually, and lots of
comments on blog posts on the store itself.

00:29:48.110 --> 00:29:53.780
If I had to summarize it into one sentence
that you just hear over and over and over

00:29:53.780 --> 00:29:59.890
and over from the fans, it's "it's like reading
the paper," which really made me happy because

00:29:59.890 --> 00:30:03.970
that was sort of a goal.
But I think there is an important point here

00:30:03.970 --> 00:30:07.730
that they're not saying that it's like the
paper, they're saying it is like reading the

00:30:07.730 --> 00:30:11.120
paper.
And I think that's a really important point

00:30:11.120 --> 00:30:13.190
when you are doing media consumption apps
like we are.

00:30:13.190 --> 00:30:19.960
So this is our ideal customer from sort of
the traditional business. He's sitting at

00:30:19.960 --> 00:30:25.060
the paper. He's very, very happy.
We like to see that.

00:30:25.060 --> 00:30:30.380
What is he happy about?
To sort of think about that, we should look

00:30:30.380 --> 00:30:36.400
at the alternative, and why are our customers
responding so much to our app?

00:30:36.400 --> 00:30:42.160
So we have the web. We all know it. I think
it's sort of like this for a lot of people:

00:30:42.160 --> 00:30:47.880
it's enormous, it's amazing, it's full of
potential. It's also -- we haven't figured

00:30:47.880 --> 00:30:53.640
out how to get around it entirely. We haven't
figured out how to be comfortable in it. It

00:30:53.640 --> 00:30:58.000
takes some work to deal with it.
And there are certain ways that it's broken

00:30:58.000 --> 00:31:01.920
for our customers.
This is one of them.

00:31:01.920 --> 00:31:07.640
This is a developer conference, and we all
sort of understand what makes this page happen.

00:31:07.640 --> 00:31:11.860
And so I think in the back of our mind, we
a little bit sort of compensate for it. We

00:31:11.860 --> 00:31:15.270
don't think this is an enormous, huge failure
for the user.

00:31:15.270 --> 00:31:23.050
This guy doesn't have that problem. You know,
he picks up the paper. He reads it. The stuff's

00:31:23.050 --> 00:31:28.020
there. He's having a good time. He doesn't
have to think about if something will just

00:31:28.020 --> 00:31:32.460
suddenly -- like a page won't just suddenly
not be there.

00:31:32.460 --> 00:31:35.990
Nobody gets in their car and drives to Boston
and today it's just not there.

00:31:35.990 --> 00:31:40.650
This doesn't happen in the real world and
our customers don't like it.

00:31:40.650 --> 00:31:45.480
When it works the way this is working for
him, it makes you feel calm about things.

00:31:45.480 --> 00:31:49.710
Things work the way you know they will. It
makes you feel confident. It makes you feel

00:31:49.710 --> 00:31:56.270
empowered to use it.
So the challenge is to bring this to our app.

00:31:56.270 --> 00:32:02.250
A newspaper is always available, it is consistent
the way you use it, and it's a thing you can

00:32:02.250 --> 00:32:07.270
sort of understand. You can see what its boundaries
are. You understand what it means.

00:32:07.270 --> 00:32:11.260
I don't think it's any accident that most
of the browsers, when they first came out,

00:32:11.260 --> 00:32:16.200
were called things like "navigator" and "explorer."
We're looking for something slightly different

00:32:16.200 --> 00:32:20.490
here.
I think that availability is the place to

00:32:20.490 --> 00:32:26.990
get the biggest gains right now, and I think
HTML5 really does solve this for us, and this

00:32:26.990 --> 00:32:31.130
is really crucial.
So the first step to making availability happen

00:32:31.130 --> 00:32:38.540
is that a good app always turns on.
And the way to do that is to use the application

00:32:38.540 --> 00:32:42.060
cache.
So a quick sort of run-through of this.

00:32:42.060 --> 00:32:45.940
You're going to make a file and you're going
to basically describe to the browser how to

00:32:45.940 --> 00:32:50.710
handle every request it receives. And you
do have to include every possible request

00:32:50.710 --> 00:32:54.150
one way or another.
You're going to put this all in a file. You're

00:32:54.150 --> 00:32:58.070
going to give it an extension of "manifest."
You're going to reference it in an attribute

00:32:58.070 --> 00:33:00.760
in your HTML tag.
On the server, you're going to have to set

00:33:00.760 --> 00:33:07.120
up a mime type that is "text application manifest."
This will tell the browser, "This is the one

00:33:07.120 --> 00:33:10.510
I'm going to use." All these things have to
go through or it won't work.

00:33:10.510 --> 00:33:15.080
This is what the actual cache file looks like.
You have a bunch of headers. They're in all

00:33:15.080 --> 00:33:20.950
caps. Two really important sections of it,
cache and network. Cache means I'm going to

00:33:20.950 --> 00:33:25.460
take this file and I'm going to put it in
the mother of all browser caches.

00:33:25.460 --> 00:33:31.020
This is not going to hit your server again.
Any file that's listed here, it's in the browser,

00:33:31.020 --> 00:33:36.030
it stays in the browser, it doesn't go out
of the browser, it's just there. It just exists.

00:33:36.030 --> 00:33:39.840
And every file that's in here is pulled down
in a transaction, which means that it won't

00:33:39.840 --> 00:33:44.210
pull down any of them until it can pull down
all of them. Which means having a situation

00:33:44.210 --> 00:33:46.720
where your assets aren't lining up doesn't
happen.

00:33:46.720 --> 00:33:51.140
Think about that.
So now you have all your files. Your app is

00:33:51.140 --> 00:33:54.870
going to run. You also need to punch holes
to tell it, "It's okay to hit the network

00:33:54.870 --> 00:33:59.650
for this." So this is going to be things like
services. You may even just sort of wildcard

00:33:59.650 --> 00:34:04.790
the whole Internet, say, "If I didn't think
of it already, go for it."

00:34:04.790 --> 00:34:09.551
There's a lot more to learn about it, and
I will tell you that the initial stage of

00:34:09.551 --> 00:34:15.720
using the application cache is the most difficult.
Once you get over that part -- it's not super-difficult.

00:34:15.720 --> 00:34:19.669
It's just sort of a little bump, making sure
all your Is and Ts are crossed, all right?

00:34:19.669 --> 00:34:24.109
You're going to want to refer to some of these.
I strongly encourage you to look at any of

00:34:24.109 --> 00:34:29.579
them. They're all excellent sites. Appcachefacts.info
is a wonderful resource for this particular

00:34:29.579 --> 00:34:33.519
technology. Read about it, learn it, use it.
We're fixing the web for our users.

00:34:33.519 --> 00:34:38.869
So now we have an empty newspaper, which is
a really excellent start but it's not worth

00:34:38.869 --> 00:34:41.429
anything to our customers if they can't actually
read something.

00:34:41.429 --> 00:34:45.349
So we've got two problems. We've got to move
a lot of data into an offline situation and

00:34:45.349 --> 00:34:51.129
we've got to store it.
I'm going to start with storage.

00:34:51.129 --> 00:34:56.299
So there's a couple of options available to
you. Easiest is called local storage. There's

00:34:56.299 --> 00:35:02.000
Web SQL, which is like using SQLite, and there's
IndexedDB which is sort of the wave of the

00:35:02.000 --> 00:35:05.759
future but also not quite fully ready for
prime time yet.

00:35:05.759 --> 00:35:11.160
We use Web SQL for ours at the advice of Google.
Main reasons are speed and in the Chrome store

00:35:11.160 --> 00:35:16.700
you can have unlimited offline storage. Web
SQL works with that; local storage doesn't.

00:35:16.700 --> 00:35:22.440
This is what Web SQL looks like.
If you're not used to highly asynchronous

00:35:22.440 --> 00:35:27.960
programming like happens a lot in AJAX and
JavaScript, this may look a little off-putting,

00:35:27.960 --> 00:35:33.079
and, you know, it's a little bit of doing.
Every time you do something with Web SQL,

00:35:33.079 --> 00:35:37.490
you're getting a function that's getting a
callback that has the thing you need and then

00:35:37.490 --> 00:35:41.329
you're doing another thing and you're getting
a callback and there's success callbacks and

00:35:41.329 --> 00:35:44.380
error callbacks.
It's a little bit of extra work, but I -- I'm

00:35:44.380 --> 00:35:48.980
not kidding when I say that it's faster. It
is really, really, really fast.

00:35:48.980 --> 00:35:53.859
It is as fast as it can be. I was really -- I
kind of blinked the first time it worked,

00:35:53.859 --> 00:35:59.300
when I switched from local storage to using
Web SQL. Fast.

00:35:59.300 --> 00:36:04.670
There is one thing you need to know. So I've
just been singing the virtues of SQL. This

00:36:04.670 --> 00:36:11.130
is probably a technology that doesn't have
as bright a future as some other technologies,

00:36:11.130 --> 00:36:16.930
so the W3C doesn't seem to want to go forward
with it. I think this is what you need to

00:36:16.930 --> 00:36:22.259
use now if you're using heavy data the way
we are. Just be aware you might have to shift

00:36:22.259 --> 00:36:27.369
your program a little bit in the future to
move over to something like IndexedDB.

00:36:27.369 --> 00:36:30.460
But I really think you should look into it
now because you're still going to be dealing

00:36:30.460 --> 00:36:34.770
with callbacks and stuff, and thinking about
it and building an app that uses databases

00:36:34.770 --> 00:36:38.279
on the client side will really get you ready
for the future.

00:36:38.279 --> 00:36:43.410
Okay. So now we got to move a lot of code.
We're going to use another HTML5 -- we're

00:36:43.410 --> 00:36:47.369
moving a lot of data so we could just make
a bunch of AJAX calls.

00:36:47.369 --> 00:36:54.309
In our case, we're making about 22 calls to
load all of the sections that we need, but

00:36:54.309 --> 00:37:00.270
we're probably going to have more in the future,
and potentially a lot more, and AJAX occurs

00:37:00.270 --> 00:37:03.900
on the same thread as everything else. It's
happening in your UI. So we wanted to put

00:37:03.900 --> 00:37:09.640
our requests in this little box where it could
never hurt the rest of the performance of

00:37:09.640 --> 00:37:14.019
the app, never call an animation to jerk,
so we're using workers to do all of our network

00:37:14.019 --> 00:37:18.730
requests.
A worker is a separate thread. It's a separate

00:37:18.730 --> 00:37:24.180
process that can run any JavaScript code that
you want, but there are a couple of important

00:37:24.180 --> 00:37:28.109
caveats. You can't access the window object.
You can't access the DOM. You can't see the

00:37:28.109 --> 00:37:32.790
document. There are a couple special properties
that you can see. There are a couple of HTML

00:37:32.790 --> 00:37:36.900
technologies that have versions that are available
in a worker, but you should treat it like

00:37:36.900 --> 00:37:41.750
a separate application.
So you take a piece of code, you instantiate

00:37:41.750 --> 00:37:47.039
it as a worker, and you're going to define
an event for it called a "message," and that's

00:37:47.039 --> 00:37:51.160
going to receive an event object very similar
to one you would get on a mouse click or a

00:37:51.160 --> 00:37:54.730
keystroke and it's going to have a property
on the event called "data" and that's going

00:37:54.730 --> 00:37:58.960
to be an object or a string that you're getting
from the worker.

00:37:58.960 --> 00:38:02.560
So each side of the worker, on the inside
and on the outside, there's a post-message

00:38:02.560 --> 00:38:07.630
and an on-message. On-message where you pick
up a message, post-message put it in. So you

00:38:07.630 --> 00:38:12.380
put it in, get it out, put it in, get it out.
In this case, we're going through a list of

00:38:12.380 --> 00:38:16.970
sections and I'm throwing them into the worker
with post-message. When it gets back, I'm

00:38:16.970 --> 00:38:22.490
going to store it essentially to a SQL.
Inside the worker, again, this could theoretically

00:38:22.490 --> 00:38:27.670
be any JavaScript code that you wanted. You're
going to have an on-message function which

00:38:27.670 --> 00:38:32.249
is going to do the same thing it did on the
outside: get the data, deal with it.

00:38:32.249 --> 00:38:36.381
In this case, we're making a synchronous -- that's
important; everything that happens in a worker

00:38:36.381 --> 00:38:41.630
is synchronous -- AJAX request, we get the
data, we put it back, and when you watch it

00:38:41.630 --> 00:38:47.720
run, when the app first loads, it just goes
(making sound). Worker is at work.

00:38:47.720 --> 00:38:52.410
And we're back. We're back to this guy. He's
happy. He's reading the paper. There's stuff

00:38:52.410 --> 00:38:59.089
in it. And even if EC2 goes down, which our
app is on EC2, not a problem for the users.

00:38:59.089 --> 00:39:05.890
Epic, epic win. They won't even notice.
Now, one bonus point. People who really, really

00:39:05.890 --> 00:39:11.619
like the news really like to not wait to get
it. They get it delivered to their house.

00:39:11.619 --> 00:39:16.460
They don't want to have to go to the corner
to get it or worse.

00:39:16.460 --> 00:39:21.559
So for our app, we're using one of the newer
features of the Chrome Web Store, which is

00:39:21.559 --> 00:39:26.140
background windows. This lets you make an
invisible window that is in every other way

00:39:26.140 --> 00:39:31.170
like a window, but the user never sees it,
and that can be open even when your app is

00:39:31.170 --> 00:39:35.240
not open as a tab.
All you need to do, you go into the manifest

00:39:35.240 --> 00:39:39.460
file for your Chrome app, which is in the
bundle you submit to the store, and there's

00:39:39.460 --> 00:39:42.869
a section called "permission," so you see
we have unlimited storage notifications. You

00:39:42.869 --> 00:39:47.109
have one called background.
Then you're going to do a window.open call,

00:39:47.109 --> 00:39:50.990
just like you always have, and instead of
at the end where you would put status, height,

00:39:50.990 --> 00:39:55.680
width, leaving all that out, you're just putting
background. Now, one caveat. This is a Chrome-only

00:39:55.680 --> 00:39:59.630
feature and if you don't sequester it and
you open it in another browser, you're going

00:39:59.630 --> 00:40:04.020
to have a couple problems. You know, the window
is going to open, no one is going to understand

00:40:04.020 --> 00:40:05.250
why.
So you want to make sure you're in Chrome,

00:40:05.250 --> 00:40:08.849
you're in a Chrome app, and you want to make
sure it's Version 10 or higher, because that's

00:40:08.849 --> 00:40:11.920
the version that understands this particular
feature.

00:40:11.920 --> 00:40:16.450
Opens the window. We have a sort of light
version of the app that runs. And it's continually

00:40:16.450 --> 00:40:22.079
looking for new news and new breaking news
so we can notify the user when something happens.

00:40:22.079 --> 00:40:26.390
That way whenever they turn it on, they have
stuff to read and it's as up-to-date as possible.

00:40:26.390 --> 00:40:32.319
So in review, application cache, Web SQL,
web workers, always-functioning app.

00:40:32.319 --> 00:40:35.089
Now, one thing we're working on -- it isn't
quite ready but it will be ready in the coming

00:40:35.089 --> 00:40:39.970
weeks -- is we're using the brand-new file
API which is Chrome-only and we're using workers

00:40:39.970 --> 00:40:43.650
and SQL again and we're going to be storing
the images offline so you'll be able to read

00:40:43.650 --> 00:40:49.170
the whole New York Times in your Chrome browser.
We're using the background feature to make

00:40:49.170 --> 00:40:53.599
sure it's there.
And on top of the technology, again, this

00:40:53.599 --> 00:40:57.010
is a really wonderful platform for getting
your app out there.

00:40:57.010 --> 00:41:03.299
We saw an order of magnitude interest -- increase
in users of this app by putting it through

00:41:03.299 --> 00:41:08.430
the Chrome Web Store.
So now we have the web app that's as available

00:41:08.430 --> 00:41:14.630
as a newspaper, consistent the way a newspaper
is, and is graspable and understandable for

00:41:14.630 --> 00:41:20.319
customers, and now we have people that feel
calm, confident, and empowered using our app.

00:41:20.319 --> 00:41:23.589
All using HTML5, which I'm here to tell you
we are betting big on.

00:41:23.589 --> 00:41:30.220
So I'll turn it back to Seth.
[Applause]

00:41:30.220 --> 00:41:38.200
&gt;&gt;Seth Ladd: Thanks, Andre, and thanks everyone
else. Great stories.

00:41:38.200 --> 00:41:42.660
So to summarize, building apps makes a real
difference. We heard from Springpad. When

00:41:42.660 --> 00:41:46.700
they moved from a website to a web app, they
saw, for instance, five times more saves.

00:41:46.700 --> 00:41:48.910
That means people are more productive and
using it a lot more.

00:41:48.910 --> 00:41:53.519
We also heard that publishing to Chrome Web
Store helps users find you. For instance,

00:41:53.519 --> 00:41:59.130
World Golf Tour saw 60,000 new users from
six months and playing -- those users playing

00:41:59.130 --> 00:42:03.329
23% more.
And finally, HTML5 gives you the tools and

00:42:03.329 --> 00:42:08.700
techniques to build really powerful Web applications.
New York Times just told us about some of

00:42:08.700 --> 00:42:15.390
the techniques and tools that they use to
make their app offline and accessible all

00:42:15.390 --> 00:42:18.210
the time.
So now we're going to open it up to open Q&amp;A.

00:42:18.210 --> 00:42:21.039
Hopefully you can grab the link here for the
Moderator. This is also on the Google I/O

00:42:21.039 --> 00:42:26.160
page as well. We definitely appreciate feedback,
so please do provide the feedback afterwards.

00:42:26.160 --> 00:42:31.160
And you can find this presentation as well.
So please do come up to the microphones. We'd

00:42:31.160 --> 00:42:39.089
love to hear from you. I'll go ahead and start
this here.

00:42:39.089 --> 00:42:42.579
Okay. So we'll take some from here and we
also have some prepared questions. This is

00:42:42.579 --> 00:42:45.019
also for the panel.
So the first question here from Moderator

00:42:45.019 --> 00:42:50.920
is: Chrome apps to be fancy links to websites.
Web Store appears to be a showcase of cool

00:42:50.920 --> 00:42:56.400
sites. What can we -- what can or will Chrome
do to make apps much more than just links

00:42:56.400 --> 00:42:57.509
to websites?
So I have a personal opinion on that, but

00:42:57.509 --> 00:42:58.990
I'd like to hear a little bit from you guys.
Like, is this -- how does this question resonate

00:42:58.990 --> 00:43:06.049
with you?
&gt;&gt;YuChiang Cheng: Well, I think for us it's

00:43:06.049 --> 00:43:11.119
just an evolutionary process. You know, I
think this is just early in the cycle and

00:43:11.119 --> 00:43:16.140
we're all trying to feel our way and test
our way into what works the best, and the

00:43:16.140 --> 00:43:17.680
best way to start is to put something up as
quickly as you can.

00:43:17.680 --> 00:43:22.589
But for us, we are really seeing the data
that shows that if you make applications that

00:43:22.589 --> 00:43:26.730
do specifically things and package them in
a way and actually create the UI in a way

00:43:26.730 --> 00:43:31.839
that's more application-like than a website,
you're going to be far better performance

00:43:31.839 --> 00:43:36.240
because the users have an intent to use those
applications and you need to fit that intent

00:43:36.240 --> 00:43:40.290
with your product and then you're going to
get more distribution, so --

00:43:40.290 --> 00:43:43.869
&gt;&gt;Jason Horman: I'd say, you know, since -- they're
just links in the Chrome app store. That's

00:43:43.869 --> 00:43:48.749
not necessarily a bad thing. It is a distribution
mechanism to get out there to more users.

00:43:48.749 --> 00:43:52.829
Users might trust Google. They might find
your app where they'd never find it in any

00:43:52.829 --> 00:43:56.269
other place, and I think that trust is really
powerful. That's something, again, I think

00:43:56.269 --> 00:44:00.309
that the Android store and the iPhone store
has sort of proved.

00:44:00.309 --> 00:44:05.859
And there are technical reasons as well. One
of the great things is that the app store

00:44:05.859 --> 00:44:10.279
does provide for enhanced sort of permission
schemes, so, you know, when you install from

00:44:10.279 --> 00:44:14.749
the app store, for us we were able to ask
for that unlimited storage permission, and

00:44:14.749 --> 00:44:18.519
you're installing from the store, the store
tells you that the app's going to require

00:44:18.519 --> 00:44:23.180
that permission, and you can build sort of
more powerful applications because of that.

00:44:23.180 --> 00:44:28.390
&gt;&gt;Seth Ladd: The way I look at it, I actually
think that the fact that they're links is

00:44:28.390 --> 00:44:31.583
a very good thing, right? What's the power
of the web, right? You have a back button.

00:44:31.583 --> 00:44:35.832
You can move back at any time. You can kind
of escape from where you are. That's powerful.

00:44:35.832 --> 00:44:39.299
You can share stuff by copying the link. That's
powerful. You can bookmark things. That's

00:44:39.299 --> 00:44:42.740
powerful.
So I think that when we try to make an artificial

00:44:42.740 --> 00:44:47.039
distinction based on the technology that they're
just links, I think we're looking at the problem

00:44:47.039 --> 00:44:49.239
wrong.
I think there's a lot of work we can do as

00:44:49.239 --> 00:44:54.599
a community to integrate more app-like features
but, you know, as Springpad shows, it can

00:44:54.599 --> 00:45:00.130
be done. It's fairly straightforward to be
done. And so we just need to continue to embrace

00:45:00.130 --> 00:45:04.049
HTML5. And remember that the Chrome Web Store
allows us to publish to Chrome so we can build

00:45:04.049 --> 00:45:08.349
these apps straight to a targeted platform.
Live question.

00:45:08.349 --> 00:45:20.630
&gt;&gt;&gt; What about the way those links actually
look? They are like a gigantic hash of sorts

00:45:20.630 --> 00:45:22.869
that you can't really control. Would it be
all the things that you brought up there that

00:45:22.869 --> 00:45:25.250
are good for the Web and things like that,
would those not even become better if we could

00:45:25.250 --> 00:45:27.160
have some sort control over the beauty of
those links which are fairly ugly at this

00:45:27.160 --> 00:45:30.500
point?
&gt;&gt;Seth Ladd: I imagine you are talking about

00:45:30.500 --> 00:45:37.930
the actual display in the Chrome of that browser
itself? Sure, I think there is a the lot of

00:45:37.930 --> 00:45:43.700
work we can look at other people are doing
and what user expectations are of the experience,

00:45:43.700 --> 00:45:47.860
too. So we're very early in the stages here,
so I think there is more work to be done for

00:45:47.860 --> 00:45:48.860
sure.
Live question?

00:45:48.860 --> 00:45:49.860
&gt;&gt;&gt; Can you guys share anything you have learned
about managing user expectations? Like, maybe

00:45:49.860 --> 00:45:50.860
something happened with EC2 and some functionality
went down and as a result you got a lot of

00:45:50.860 --> 00:46:04.970
bad reviews for your Web app? What are some
ways you would deal with that or things that

00:46:04.970 --> 00:46:08.950
you have learned?
&gt;&gt;YuChiang Cheng: For us, it is just being

00:46:08.950 --> 00:46:14.150
very, very straightforward with the user on
what they can expect in the application within

00:46:14.150 --> 00:46:17.829
the description.
You know, the biggest lesson we learned about

00:46:17.829 --> 00:46:22.390
the description was, you know, if you are
going to call your app "free," it better be

00:46:22.390 --> 00:46:27.050
really free. You get a lot of really bad feedback
if it is not.

00:46:27.050 --> 00:46:33.350
For us, we are pretty lucky because 99% of
all our content is free. But in terms of managing

00:46:33.350 --> 00:46:36.650
expectations of how they can use it, it is
just being very straightforward with them

00:46:36.650 --> 00:46:41.540
and describing your product accurately.
&gt;&gt;Jason Horman: For us, I'd say we were affected

00:46:41.540 --> 00:46:45.460
by EC2 going down. We tried to be very, very
straightforward on Twitter. We tried to blog

00:46:45.460 --> 00:46:50.460
a lot explain why this was happening to them
and try to direct them to the mobile clients

00:46:50.460 --> 00:46:55.700
where they had synced some of that data. And
we sort of then started promising that HTML5

00:46:55.700 --> 00:47:00.619
was coming soon, and they had wished that
it already was here.

00:47:00.619 --> 00:47:04.220
But it is a really tough problem because I
would say, you know, when EC2 went down, we

00:47:04.220 --> 00:47:07.560
sort of failed in interesting ways as well.
We were trying to communicate that to the

00:47:07.560 --> 00:47:11.529
user as well. And we have changed our application
and improved it to handle some of those scenarios

00:47:11.529 --> 00:47:15.260
to at least communicate better to the user
because sometimes they weren't sure if the

00:47:15.260 --> 00:47:18.739
things they were saving were actually saving.
Or, What's going on? Some of the app works

00:47:18.739 --> 00:47:23.900
and some of it doesn't.
There is a lot of sort of last-mile work to

00:47:23.900 --> 00:47:27.430
make your app great in those scenarios. You
focus a lot about when everything is working

00:47:27.430 --> 00:47:32.950
great, the user experience of that. When everything
is working very poorly, you need to focus

00:47:32.950 --> 00:47:38.220
on the user experience of that as well. That's
sort of really hard, and we are getting better

00:47:38.220 --> 00:47:40.010
and better at it.
&gt;&gt;Seth Ladd: Do you have any kind of specific

00:47:40.010 --> 00:47:43.920
user forms or support forms?
&gt;&gt;Jason Horman: We use Get Satisfaction quite

00:47:43.920 --> 00:47:47.859
a bit, and we have an active community there.
We actually have a community manager, and

00:47:47.859 --> 00:47:51.479
her job is really to just keep communicating
with these users when these things happen.

00:47:51.479 --> 00:47:55.270
And people were really happy about that.
People were thanking us for just being open

00:47:55.270 --> 00:48:02.040
about what was going on, which was sort of
easy for us we just put it on Amazon. They

00:48:02.040 --> 00:48:03.040
were really happy that we were just so vocal
about it.

00:48:03.040 --> 00:48:07.039
&gt;&gt;YuChiang Cheng: You can expect that you
are going to have to communicate with your

00:48:07.039 --> 00:48:13.819
users. It is actually a really, really good
thing. I highly suggest you guys do invest

00:48:13.819 --> 00:48:19.479
in community management. You should definitely
check the reviews and everything on your store

00:48:19.479 --> 00:48:22.549
every single hour. You should do your email.
And you need to provide them another forum

00:48:22.549 --> 00:48:27.229
where they can communicate with you at so
that they don't go just directly to posting

00:48:27.229 --> 00:48:32.530
a bad post, right, that's negative. If you
give them other ways and you can sort of have

00:48:32.530 --> 00:48:35.650
a better dialogue with them, you can keep
the reviews pretty positive.

00:48:35.650 --> 00:48:40.079
&gt;&gt;Jason Horman: We are definitely still at
the size where even user by user if they have

00:48:40.079 --> 00:48:45.049
a problem, we can investigate that problem
on our server logs quickly for that specific

00:48:45.049 --> 00:48:47.559
account and try to fix them and people seem
to respond to that as well.

00:48:47.559 --> 00:48:56.170
&gt;&gt;Seth Ladd: I had a question for the panel
and actually the group here as well: How do

00:48:56.170 --> 00:48:59.650
you see payments evolving on the Web? Specifically
for the Chrome Web store, we have in-store

00:48:59.650 --> 00:49:03.329
payments and in-store subscriptions and we
announced back at GDC that we are working

00:49:03.329 --> 00:49:08.359
at in-app payments as well. A lot of different
ways to monetize apps that may be or may not

00:49:08.359 --> 00:49:13.229
be distinct from Web site monetization.
How are you thinking about how to monetize

00:49:13.229 --> 00:49:17.549
your apps here?
&gt;&gt;YuChiang Cheng: I guess I'm the only one

00:49:17.549 --> 00:49:22.640
taking credit cards right now. Basically,
for us it is definitely evolving and changing.

00:49:22.640 --> 00:49:30.030
I think the user behavior is definitely changing
in a way where most people don't want to pay

00:49:30.030 --> 00:49:36.180
up front for stuff. Unless there is a high
level of credibility and they know exactly

00:49:36.180 --> 00:49:39.749
what they're going to get, they don't want
to shell out the dollars. And so what's proven

00:49:39.749 --> 00:49:43.710
very successful for us and a bunch of other
gaming companies as well as people who are

00:49:43.710 --> 00:49:48.329
starting to sort of gamify their productivity
applications is you give them a lot of features

00:49:48.329 --> 00:49:49.890
and then you try to upsell them throughout
the process.

00:49:49.890 --> 00:49:55.230
That's why sort of in-running or frictionless
payments within the application, I think,

00:49:55.230 --> 00:50:01.849
are going to get really, really popular. So
you build the trust with the users. And then

00:50:01.849 --> 00:50:05.950
when we get to the point where there is something
they want to do a little bit faster, get access

00:50:05.950 --> 00:50:10.369
to something a little bit different but they
already find your application very useful,

00:50:10.369 --> 00:50:13.660
they are willing to pay that incremental $1
or 2 to continue.

00:50:13.660 --> 00:50:19.749
What we have actually learned is that by doing
this type of payment mechanism, you're able

00:50:19.749 --> 00:50:26.059
to actually capture a lot more people who
wouldn't normally pay you, so you sort of

00:50:26.059 --> 00:50:32.279
get a larger mass market. But the great surprising
side of it is that you actually get more money

00:50:32.279 --> 00:50:37.790
out of the people than you would have if you
would have just made a fixed price for the

00:50:37.790 --> 00:50:39.309
application.
So the fixed price actually caps the total

00:50:39.309 --> 00:50:45.109
value a user can be to you other than through
advertising a sponsorship. If you do an incremental

00:50:45.109 --> 00:50:50.250
payment or a microtransaction, you are able
to capture a lot more of the top end also.

00:50:50.250 --> 00:50:53.809
We are really excited about the in-app type
of payments that we're coming out with.

00:50:53.809 --> 00:51:01.859
&gt;&gt;Jason Horman: For me as a user, I really
like the idea that I can have a few trusted

00:51:01.859 --> 00:51:07.720
sources I'm going to give my credit card,
too. I do trust Google. I trust Apple. I don't

00:51:07.720 --> 00:51:09.510
trust Sony anymore.
[ Laughter ]

00:51:09.510 --> 00:51:13.489
And so I have been thinking a lot personally
about how do I remove my credit cards from

00:51:13.489 --> 00:51:17.790
all these different applications. And really
I trust Paypal. I trust a few sites that I

00:51:17.790 --> 00:51:22.819
think are really good at security. And I think
the Chrome store, you know, again, the store

00:51:22.819 --> 00:51:27.440
provides that level of trust for users where
they might think, "Well, I know that Google

00:51:27.440 --> 00:51:28.440
has my credit card but I don't necessarily
want to give it to this other random application

00:51:28.440 --> 00:51:29.690
that's out there."That's great for me as a
user.

00:51:29.690 --> 00:51:39.320
&gt;&gt;Seth Ladd: Live question?
&gt;&gt;&gt; Do you guys obfuscate your JavaScript

00:51:39.320 --> 00:51:57.700
at all? Do you run it through any systems
to kind of hide the code? Obviously, you worked

00:51:57.700 --> 00:51:58.700
a lot on developing those really nice systems.
Do you try to protect that at all, or do you

00:51:58.700 --> 00:51:59.759
figure it is out there, it is out there, sobeit?
&gt;&gt;Jason Horman: We use GWT, and GWT naturally

00:51:59.759 --> 00:52:02.369
obfuscates everything and also will compress
it. It helps with g-zipping that code down.

00:52:02.369 --> 00:52:08.150
I don't think we really did it to be secretive.
We sort of did it to make the code size smaller,

00:52:08.150 --> 00:52:13.270
and I think everyone didn't mind that it was
a little more secretive.

00:52:13.270 --> 00:52:17.619
But for us, I don't think we have a ton of
proprietary JavaScript that we would be too

00:52:17.619 --> 00:52:18.619
worried about versus our backend being some
of the core infrastructure.

00:52:18.619 --> 00:52:26.319
&gt;&gt;Andre Behrens: I used to worry about that
a lot when I first started on the app. I don't

00:52:26.319 --> 00:52:34.130
worry about it a lot currently. I used to
be very worried about sort of copying. And

00:52:34.130 --> 00:52:36.619
I think that's sort of a mind-of-the-creator
thing, honestly.

00:52:36.619 --> 00:52:46.710
I think like we worry about a lot. We get
very upset when we see things that are very

00:52:46.710 --> 00:52:47.710
similar. "Oh, they're stealing my ideas, stealing
my stuff."

00:52:47.710 --> 00:52:52.369
Number one, it rarely happens. And I almost
have never seen, you know, a sort of copycat

00:52:52.369 --> 00:52:58.720
thing actually be good. And I have never seen
anything that seemed like it was fit to lure

00:52:58.720 --> 00:53:04.400
our users away. They seem happy.
So I think we are sort of leaving that mostly

00:53:04.400 --> 00:53:09.749
as a problem that we'll solve if it becomes
a real problem.

00:53:09.749 --> 00:53:12.740
&gt;&gt;Jason Horman: There is so much amazing JavaScript
already out there that is open that, like,

00:53:12.740 --> 00:53:15.210
you know, you don't even have to copy because
it is probably out there.

00:53:15.210 --> 00:53:18.299
&gt;&gt;Andre Behrens: The people that are really,
really good would be offended at copying your

00:53:18.299 --> 00:53:19.580
stuff, right? It would be beneath them.
&gt;&gt;Jason Horman: That's true.

00:53:19.580 --> 00:53:20.580
&gt;&gt;Seth Ladd: Thanks for your question.
&gt;&gt;&gt; Thank you.

00:53:20.580 --> 00:53:36.420
&gt;&gt;Seth Ladd: I have a question for the panel
then. So do you think we even need a store?

00:53:36.420 --> 00:53:37.420
Shouldn't just Search solve this problem?
&gt;&gt;Andre Behrens: People -- I don't know. It

00:53:37.420 --> 00:53:43.229
is a really good expectation setter, you know?
You go into Search, you can get anything in

00:53:43.229 --> 00:53:45.869
the universe. Again, giant space probe. Being
able to say here is a cordoned-off area where

00:53:45.869 --> 00:53:52.839
everything that I get is going to be an app
the way I want it to be an app.

00:53:52.839 --> 00:53:57.640
The proof is in the pudding. I mean, people
responded to it. You can argue about why,

00:53:57.640 --> 00:54:02.069
but people do respond to it. They like this.
They like going to the store.

00:54:02.069 --> 00:54:06.750
&gt;&gt;YuChiang Cheng: I think we were just talking
earlier before the panel started actually

00:54:06.750 --> 00:54:11.960
among ourselves that we're just in a cycle
right now where, you know, Search is sort

00:54:11.960 --> 00:54:18.609
of -- I type in my intent and I get this world
of possibilities and it is kind of wild west,

00:54:18.609 --> 00:54:22.450
the user beware of what you click on and what
you find and all that.

00:54:22.450 --> 00:54:27.869
And we're sort of now entering the next phase
of where we actually create more narrative,

00:54:27.869 --> 00:54:33.931
structured environments to help guide the
users through things so that they can find

00:54:33.931 --> 00:54:38.920
them and find the right thing at the right
time and something that hopefully that they

00:54:38.920 --> 00:54:44.529
will like to use and find helpful.
And the app stores right now just seem to

00:54:44.529 --> 00:54:48.650
be doing a pretty good job of that.
I think it does have to do with sort of the

00:54:48.650 --> 00:54:54.229
gating factor that not everything can show
up in the store. There is some controls there,

00:54:54.229 --> 00:55:00.150
and there's some level of quality that is
associated with it. That's what's important.

00:55:00.150 --> 00:55:06.480
And I think there's always going to be a use
for that and that consumers will appreciate

00:55:06.480 --> 00:55:10.210
it.
&gt;&gt;Jason Horman: I think verticalized search

00:55:10.210 --> 00:55:12.390
is always powerful. I go to Epicurious to
search for recipes, and I do personally think

00:55:12.390 --> 00:55:16.880
to myself I want to go find an app sometimes.
And going to a store is a curated place to

00:55:16.880 --> 00:55:18.690
go do that. It is a verticalized search for
apps. That's always going to be a powerful

00:55:18.690 --> 00:55:23.540
thing for some users. Some users are always
going to Google. That's okay, too, and they

00:55:23.540 --> 00:55:29.310
will still be able to find your application.
&gt;&gt;Seth Ladd: There is also the two different

00:55:29.310 --> 00:55:34.680
user models, right? Like Search when you know
exactly what you're looking for and browsability

00:55:34.680 --> 00:55:35.680
when you are not really -- have a targeted
idea.

00:55:35.680 --> 00:55:38.519
I think that's, for instance, productivity
apps, for instance, it is hard to find Springpad

00:55:38.519 --> 00:55:41.539
when you type "productivity app." There is
a lot going on.

00:55:41.539 --> 00:55:48.170
But if you can have a more targeted experience
when you just browse through them, it might

00:55:48.170 --> 00:55:50.161
lead to finding it easier.
So let's take a question here from Moderator.

00:55:50.161 --> 00:55:54.400
I think this is for Andre. Are native apps
on smartphones and tablets here to stay, or

00:55:54.400 --> 00:55:58.280
do you think there will be a shift toward
HTML5 apps? What will trigger that shift?

00:55:58.280 --> 00:56:02.470
&gt;&gt;Andre Behrens: There will be a shift towards
HTML5 apps.

00:56:02.470 --> 00:56:09.910
&gt;&gt;Jason Horman: Done.
&gt;&gt;Seth Ladd: Excellent. This is something

00:56:09.910 --> 00:56:11.499
you were talking about back at "New York Times."
&gt;&gt;Andre Behrens: When I said we are serious

00:56:11.499 --> 00:56:13.329
about HTML5 at "The New York Times," I wasn't
kidding. There is a lot of reasons for that.

00:56:13.329 --> 00:56:19.829
It is not purely ideological. Part of it is
just that we were going along and we were

00:56:19.829 --> 00:56:24.440
like, "Hey, you know what? This is good enough."
This can do it now.

00:56:24.440 --> 00:56:29.880
You know, I had been sort of telling my bosses
about my progress and the things I was working

00:56:29.880 --> 00:56:35.420
on. And I made a couple of changes and at
one point it just clicked (snapping). And

00:56:35.420 --> 00:56:40.730
it was like, "This will work. This stuff is
here. All the pieces that weren't here the

00:56:40.730 --> 00:56:46.029
last time that we went through this cycle,
they are here now." And everyone is on board.

00:56:46.029 --> 00:56:51.910
Microsoft is on board. Everyone is on board.
And it is all going to be there. And all of

00:56:51.910 --> 00:56:58.710
these devices are going to have these things.
And I don't know. I don't think a lot of people

00:56:58.710 --> 00:57:04.630
want to build something seven times and implement
a feature seven times.

00:57:04.630 --> 00:57:11.420
I mean, I think there will be a place for
native things for a long time, particularly

00:57:11.420 --> 00:57:17.099
for tooly things. I think there will be a
long period for that, but I think -- I have

00:57:17.099 --> 00:57:22.519
always said to people that the Web -- I always
bet on the Web winning because the Web is

00:57:22.519 --> 00:57:25.221
better at emulating other things than those
things are at emulating it.

00:57:25.221 --> 00:57:33.790
The thing it figured out is so unbelievably
hard to get right that all the other stuff,

00:57:33.790 --> 00:57:38.969
you know, it can just do a pretty good job
of doing it. And I don't think those things

00:57:38.969 --> 00:57:45.069
will have any luck emulating the way URLs
and hyperlinks work. It is just too much.

00:57:45.069 --> 00:57:49.760
We've seen this in our own apps. I mean, there
is a lot of pain.

00:57:49.760 --> 00:57:57.640
And HTML5 apps -- like, today, right now,
we're seeing the worst HTML5 apps that there

00:57:57.640 --> 00:58:06.010
will ever be. These are the worst ones. Think
about that.

00:58:06.010 --> 00:58:12.480
&gt;&gt;Jason Horman: I think that if HTML5 -- if
HTML and JavaScript were as fast as native,

00:58:12.480 --> 00:58:17.760
which way would Apple have gone? It seemed
to me they wanted to go with Web applications.

00:58:17.760 --> 00:58:20.640
It just didn't end up performing the way they
would like.

00:58:20.640 --> 00:58:24.140
If you could start over and say they performed
equally well, they probably would have gone

00:58:24.140 --> 00:58:30.630
with HTML5 and that's probably telling.
I feel a little bit betrayed by the -- I was

00:58:30.630 --> 00:58:34.200
a Web developer. I thought it was great the
direction everything was moving with open

00:58:34.200 --> 00:58:40.900
standards and the performance improvements
and the separation of layout from presentation,

00:58:40.900 --> 00:58:45.420
from implementation. That was all great stuff.
And then all of a sudden, iPhone took off.

00:58:45.420 --> 00:58:49.619
And as a company, we had to start hiring up
in that direction and hiring up from the Android

00:58:49.619 --> 00:58:51.890
direction. We have to deploy to so many platforms
now.

00:58:51.890 --> 00:58:56.319
That was sort of the problem with the Web.
We didn't have to necessarily do that. We

00:58:56.319 --> 00:59:00.710
are sort of back of this role where we have
to build five or six versions of everything.

00:59:00.710 --> 00:59:04.950
I still think HTML5 sort of could be the future
to avoid that.

00:59:04.950 --> 00:59:06.150
&gt;&gt;Seth Ladd: So quick question here from Moderator.
When will the Web store be opened up in other

00:59:06.150 --> 00:59:07.150
countries? Just stay tuned for that.
Live question.

00:59:07.150 --> 00:59:08.150
&gt;&gt;&gt; Yeah. In terms of that difference between
the HTML5 app and the native application,

00:59:08.150 --> 00:59:14.469
what about if we're building Chrome apps,
how can we port those to different platforms?

00:59:14.469 --> 00:59:32.950
And to avoid having to write things twice,
how could you -- what would be some thoughts

00:59:32.950 --> 00:59:39.009
you would have on building a Chrome app and
then having a mobile version of it and how

00:59:39.009 --> 00:59:42.529
to -- some best practices that way?
&gt;&gt;Jason Horman: I mean, I would say -- one

00:59:42.529 --> 00:59:49.550
thing that was very powerful for us is GWT.
It is java. I'm talking specifically about

00:59:49.550 --> 00:59:53.769
Android. We were able to take a lot of our
core java code and just move it to Android

00:59:53.769 --> 00:59:59.230
and it all worked great. That included even
some of the WebSQL stuff. It didn't include

00:59:59.230 --> 01:00:05.150
a lot of the layout. The actual Android interface
couldn't be based that way.

01:00:05.150 --> 01:00:10.710
That said, one of the great things about Android
is that it has this XML layout language and

01:00:10.710 --> 01:00:15.729
it almost has a style sheeting language. So
I was able to really pull our designer in,

01:00:15.729 --> 01:00:21.150
and he implemented a lot of the Android application
with me by just editing those templates -- those

01:00:21.150 --> 01:00:26.789
XML templates and those style sheets. We almost
ported some of the look and feel over.

01:00:26.789 --> 01:00:31.989
That process with iPhone was quite a bit more
difficult where he was passing Photoshop screen

01:00:31.989 --> 01:00:36.640
shots with pixel placement and our iPhone
developer got it a little bit off. They argued

01:00:36.640 --> 01:00:41.319
about what was off.
And I really had wished that we could have

01:00:41.319 --> 01:00:45.979
done an easier job with iPhone.
&gt;&gt;Seth Ladd: Yeah, great question. Sorry we

01:00:45.979 --> 01:00:48.229
are out of time. But definitely if you want
to follow up, we are going to be up here.

01:00:48.229 --> 01:00:52.269
Just because we are all on the panel and this
is Google I/O, it is not going to be an all-softball

01:00:52.269 --> 01:00:55.859
question, I think. So I just want to end with
maybe the toughest one here.

01:00:55.859 --> 01:00:58.209
So: Chrome Web store, great store or greatest
store?

01:00:58.209 --> 01:00:59.819
[ Laughter ]
&gt;&gt;Jason Horman: Greatest store, of course.

01:00:59.819 --> 01:01:02.769
&gt;&gt;Seth Ladd: All right. Excellent. Thank you,
everyone, for your time. I really appreciate

01:01:02.769 --> 01:01:03.769
it.
[ Applause ]

01:01:03.769 --> 01:01:06.630
Thank you to our panel members as well.

