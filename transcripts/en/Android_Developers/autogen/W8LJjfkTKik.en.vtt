WEBVTT
Kind: captions
Language: en

00:00:05.720 --> 00:00:07.880 align:start position:0%
 
when<00:00:06.720><c> you</c><00:00:06.810><c> first</c><00:00:07.020><c> enter</c><00:00:07.230><c> the</c><00:00:07.500><c> world</c><00:00:07.740><c> of</c>

00:00:07.880 --> 00:00:07.890 align:start position:0%
when you first enter the world of
 

00:00:07.890 --> 00:00:09.799 align:start position:0%
when you first enter the world of
automated<00:00:08.519><c> testing</c><00:00:08.880><c> you</c><00:00:09.510><c> might</c><00:00:09.690><c> be</c>

00:00:09.799 --> 00:00:09.809 align:start position:0%
automated testing you might be
 

00:00:09.809 --> 00:00:11.650 align:start position:0%
automated testing you might be
overwhelmed<00:00:10.530><c> with</c><00:00:10.590><c> some</c><00:00:11.010><c> of</c><00:00:11.099><c> the</c><00:00:11.190><c> terminology</c>

00:00:11.650 --> 00:00:11.660 align:start position:0%
overwhelmed with some of the terminology
 

00:00:11.660 --> 00:00:15.350 align:start position:0%
overwhelmed with some of the terminology
unit<00:00:12.660><c> tests</c><00:00:13.080><c> instrumented</c><00:00:13.740><c> tests</c><00:00:14.160><c> mocking</c><00:00:14.670><c> it</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
unit tests instrumented tests mocking it
 

00:00:15.360 --> 00:00:17.180 align:start position:0%
unit tests instrumented tests mocking it
can<00:00:15.599><c> be</c><00:00:15.719><c> a</c><00:00:15.750><c> little</c><00:00:15.900><c> daunting</c><00:00:16.199><c> to</c><00:00:16.590><c> even</c><00:00:16.619><c> start</c>

00:00:17.180 --> 00:00:17.190 align:start position:0%
can be a little daunting to even start
 

00:00:17.190 --> 00:00:19.099 align:start position:0%
can be a little daunting to even start
to<00:00:17.369><c> learn</c><00:00:17.490><c> about</c><00:00:17.520><c> testing</c><00:00:18.210><c> if</c><00:00:18.510><c> you're</c>

00:00:19.099 --> 00:00:19.109 align:start position:0%
to learn about testing if you're
 

00:00:19.109 --> 00:00:20.750 align:start position:0%
to learn about testing if you're
watching<00:00:19.260><c> this</c><00:00:19.500><c> video</c><00:00:19.680><c> you're</c><00:00:20.340><c> probably</c>

00:00:20.750 --> 00:00:20.760 align:start position:0%
watching this video you're probably
 

00:00:20.760 --> 00:00:22.519 align:start position:0%
watching this video you're probably
looking<00:00:21.210><c> for</c><00:00:21.240><c> an</c><00:00:21.420><c> answer</c><00:00:21.750><c> to</c><00:00:21.900><c> one</c><00:00:22.109><c> simple</c>

00:00:22.519 --> 00:00:22.529 align:start position:0%
looking for an answer to one simple
 

00:00:22.529 --> 00:00:24.950 align:start position:0%
looking for an answer to one simple
question<00:00:22.650><c> how</c><00:00:23.580><c> do</c><00:00:23.640><c> I</c><00:00:23.850><c> start</c><00:00:24.210><c> adding</c><00:00:24.390><c> tests</c><00:00:24.869><c> to</c>

00:00:24.950 --> 00:00:24.960 align:start position:0%
question how do I start adding tests to
 

00:00:24.960 --> 00:00:27.620 align:start position:0%
question how do I start adding tests to
my<00:00:25.080><c> app</c><00:00:25.230><c> don't</c><00:00:26.130><c> worry</c><00:00:26.460><c> that's</c><00:00:26.939><c> what</c><00:00:27.210><c> Android</c>

00:00:27.620 --> 00:00:27.630 align:start position:0%
my app don't worry that's what Android
 

00:00:27.630 --> 00:00:29.630 align:start position:0%
my app don't worry that's what Android
testing<00:00:27.930><c> patterns</c><00:00:28.260><c> is</c><00:00:28.410><c> all</c><00:00:28.560><c> about</c><00:00:28.830><c> but</c><00:00:29.369><c> please</c>

00:00:29.630 --> 00:00:29.640 align:start position:0%
testing patterns is all about but please
 

00:00:29.640 --> 00:00:31.339 align:start position:0%
testing patterns is all about but please
bear<00:00:29.849><c> with</c><00:00:29.910><c> me</c><00:00:30.060><c> let's</c><00:00:30.810><c> start</c><00:00:31.050><c> with</c><00:00:31.170><c> some</c>

00:00:31.339 --> 00:00:31.349 align:start position:0%
bear with me let's start with some
 

00:00:31.349 --> 00:00:34.670 align:start position:0%
bear with me let's start with some
basics<00:00:31.910><c> this</c><00:00:32.910><c> is</c><00:00:33.120><c> the</c><00:00:33.300><c> testing</c><00:00:33.660><c> pyramid</c><00:00:34.110><c> it</c>

00:00:34.670 --> 00:00:34.680 align:start position:0%
basics this is the testing pyramid it
 

00:00:34.680 --> 00:00:36.709 align:start position:0%
basics this is the testing pyramid it
represents<00:00:35.340><c> the</c><00:00:35.460><c> various</c><00:00:35.880><c> levels</c><00:00:36.239><c> or</c><00:00:36.420><c> types</c>

00:00:36.709 --> 00:00:36.719 align:start position:0%
represents the various levels or types
 

00:00:36.719 --> 00:00:39.290 align:start position:0%
represents the various levels or types
of<00:00:36.930><c> tests</c><00:00:37.320><c> you</c><00:00:37.469><c> can</c><00:00:37.590><c> add</c><00:00:37.739><c> to</c><00:00:37.890><c> your</c><00:00:38.010><c> app</c><00:00:38.300><c> unit</c>

00:00:39.290 --> 00:00:39.300 align:start position:0%
of tests you can add to your app unit
 

00:00:39.300 --> 00:00:41.270 align:start position:0%
of tests you can add to your app unit
tests<00:00:39.629><c> are</c><00:00:39.750><c> perhaps</c><00:00:40.110><c> the</c><00:00:40.379><c> most</c><00:00:40.410><c> basic</c><00:00:40.739><c> type</c><00:00:41.129><c> of</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
tests are perhaps the most basic type of
 

00:00:41.280 --> 00:00:43.459 align:start position:0%
tests are perhaps the most basic type of
tests<00:00:41.640><c> but</c><00:00:42.180><c> basic</c><00:00:42.600><c> is</c><00:00:42.719><c> not</c><00:00:42.780><c> the</c><00:00:43.170><c> same</c><00:00:43.350><c> as</c>

00:00:43.459 --> 00:00:43.469 align:start position:0%
tests but basic is not the same as
 

00:00:43.469 --> 00:00:46.190 align:start position:0%
tests but basic is not the same as
unimportant<00:00:43.829><c> in</c><00:00:44.219><c> fact</c><00:00:45.090><c> they</c><00:00:45.600><c> should</c><00:00:45.629><c> form</c><00:00:46.050><c> the</c>

00:00:46.190 --> 00:00:46.200 align:start position:0%
unimportant in fact they should form the
 

00:00:46.200 --> 00:00:48.110 align:start position:0%
unimportant in fact they should form the
foundation<00:00:46.770><c> of</c><00:00:46.890><c> your</c><00:00:46.950><c> whole</c><00:00:47.340><c> test</c><00:00:47.610><c> strategy</c>

00:00:48.110 --> 00:00:48.120 align:start position:0%
foundation of your whole test strategy
 

00:00:48.120 --> 00:00:50.180 align:start position:0%
foundation of your whole test strategy
that's<00:00:48.899><c> why</c><00:00:49.140><c> they</c><00:00:49.289><c> sit</c><00:00:49.469><c> at</c><00:00:49.590><c> the</c><00:00:49.710><c> bottom</c><00:00:49.860><c> of</c><00:00:50.100><c> the</c>

00:00:50.180 --> 00:00:50.190 align:start position:0%
that's why they sit at the bottom of the
 

00:00:50.190 --> 00:00:51.040 align:start position:0%
that's why they sit at the bottom of the
pyramid

00:00:51.040 --> 00:00:51.050 align:start position:0%
pyramid
 

00:00:51.050 --> 00:00:53.450 align:start position:0%
pyramid
unit<00:00:52.050><c> tests</c><00:00:52.350><c> verify</c><00:00:52.710><c> the</c><00:00:52.770><c> correctness</c><00:00:53.160><c> of</c><00:00:53.340><c> the</c>

00:00:53.450 --> 00:00:53.460 align:start position:0%
unit tests verify the correctness of the
 

00:00:53.460 --> 00:00:55.189 align:start position:0%
unit tests verify the correctness of the
smallest<00:00:53.820><c> units</c><00:00:54.149><c> of</c><00:00:54.270><c> your</c><00:00:54.420><c> code</c><00:00:54.629><c> such</c><00:00:55.170><c> as</c>

00:00:55.189 --> 00:00:55.199 align:start position:0%
smallest units of your code such as
 

00:00:55.199 --> 00:00:57.560 align:start position:0%
smallest units of your code such as
methods<00:00:55.710><c> and</c><00:00:55.860><c> classes</c><00:00:56.250><c> in</c><00:00:56.370><c> isolation</c><00:00:57.360><c> from</c>

00:00:57.560 --> 00:00:57.570 align:start position:0%
methods and classes in isolation from
 

00:00:57.570 --> 00:00:59.540 align:start position:0%
methods and classes in isolation from
the<00:00:57.660><c> rest</c><00:00:57.960><c> of</c><00:00:58.079><c> the</c><00:00:58.199><c> code</c><00:00:58.379><c> base</c><00:00:58.559><c> or</c><00:00:58.980><c> even</c><00:00:59.039><c> the</c>

00:00:59.540 --> 00:00:59.550 align:start position:0%
the rest of the code base or even the
 

00:00:59.550 --> 00:01:02.270 align:start position:0%
the rest of the code base or even the
platform<00:01:00.030><c> they</c><00:01:00.180><c> will</c><00:01:00.329><c> be</c><00:01:00.449><c> running</c><00:01:00.629><c> on</c><00:01:00.870><c> in</c><00:01:01.280><c> fact</c>

00:01:02.270 --> 00:01:02.280 align:start position:0%
platform they will be running on in fact
 

00:01:02.280 --> 00:01:04.399 align:start position:0%
platform they will be running on in fact
you<00:01:02.820><c> can</c><00:01:02.969><c> actually</c><00:01:03.210><c> run</c><00:01:03.660><c> unit</c><00:01:03.870><c> tests</c><00:01:04.379><c> for</c>

00:01:04.399 --> 00:01:04.409 align:start position:0%
you can actually run unit tests for
 

00:01:04.409 --> 00:01:06.920 align:start position:0%
you can actually run unit tests for
Android<00:01:04.890><c> apps</c><00:01:05.070><c> on</c><00:01:05.309><c> your</c><00:01:05.729><c> computer</c><00:01:06.180><c> thanks</c><00:01:06.840><c> to</c>

00:01:06.920 --> 00:01:06.930 align:start position:0%
Android apps on your computer thanks to
 

00:01:06.930 --> 00:01:08.630 align:start position:0%
Android apps on your computer thanks to
support<00:01:07.200><c> from</c><00:01:07.290><c> Android</c><00:01:07.770><c> studio</c><00:01:07.979><c> and</c><00:01:08.280><c> Gradle</c>

00:01:08.630 --> 00:01:08.640 align:start position:0%
support from Android studio and Gradle
 

00:01:08.640 --> 00:01:11.030 align:start position:0%
support from Android studio and Gradle
if<00:01:08.760><c> it's</c><00:01:09.689><c> unclear</c><00:01:10.049><c> to</c><00:01:10.080><c> you</c><00:01:10.320><c> why</c><00:01:10.680><c> you</c><00:01:10.740><c> should</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
if it's unclear to you why you should
 

00:01:11.040 --> 00:01:12.649 align:start position:0%
if it's unclear to you why you should
test<00:01:11.250><c> code</c><00:01:11.490><c> in</c><00:01:11.640><c> isolation</c><00:01:12.030><c> from</c><00:01:12.330><c> Android</c>

00:01:12.649 --> 00:01:12.659 align:start position:0%
test code in isolation from Android
 

00:01:12.659 --> 00:01:15.109 align:start position:0%
test code in isolation from Android
think<00:01:13.320><c> of</c><00:01:13.439><c> it</c><00:01:13.530><c> this</c><00:01:13.710><c> way</c><00:01:13.950><c> how</c><00:01:14.640><c> can</c><00:01:14.850><c> you</c><00:01:14.939><c> even</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
think of it this way how can you even
 

00:01:15.119 --> 00:01:16.940 align:start position:0%
think of it this way how can you even
begin<00:01:15.390><c> to</c><00:01:15.750><c> check</c><00:01:15.930><c> if</c><00:01:16.080><c> your</c><00:01:16.200><c> banking</c><00:01:16.560><c> app</c><00:01:16.740><c> for</c>

00:01:16.940 --> 00:01:16.950 align:start position:0%
begin to check if your banking app for
 

00:01:16.950 --> 00:01:18.890 align:start position:0%
begin to check if your banking app for
example<00:01:17.009><c> runs</c><00:01:17.939><c> on</c><00:01:18.060><c> an</c><00:01:18.180><c> Android</c><00:01:18.600><c> device</c>

00:01:18.890 --> 00:01:18.900 align:start position:0%
example runs on an Android device
 

00:01:18.900 --> 00:01:21.170 align:start position:0%
example runs on an Android device
without<00:01:19.650><c> first</c><00:01:19.920><c> making</c><00:01:20.159><c> sure</c><00:01:20.310><c> that</c><00:01:20.670><c> basic</c>

00:01:21.170 --> 00:01:21.180 align:start position:0%
without first making sure that basic
 

00:01:21.180 --> 00:01:22.609 align:start position:0%
without first making sure that basic
business<00:01:21.360><c> logic</c><00:01:21.750><c> such</c><00:01:22.140><c> as</c><00:01:22.290><c> currency</c>

00:01:22.609 --> 00:01:22.619 align:start position:0%
business logic such as currency
 

00:01:22.619 --> 00:01:24.469 align:start position:0%
business logic such as currency
conversions<00:01:23.250><c> or</c><00:01:23.430><c> calculating</c><00:01:24.119><c> an</c><00:01:24.210><c> account</c>

00:01:24.469 --> 00:01:24.479 align:start position:0%
conversions or calculating an account
 

00:01:24.479 --> 00:01:27.440 align:start position:0%
conversions or calculating an account
balance<00:01:24.630><c> work</c><00:01:25.350><c> correctly</c><00:01:25.890><c> but</c><00:01:26.880><c> you</c><00:01:27.150><c> are</c>

00:01:27.440 --> 00:01:27.450 align:start position:0%
balance work correctly but you are
 

00:01:27.450 --> 00:01:29.630 align:start position:0%
balance work correctly but you are
writing<00:01:27.780><c> an</c><00:01:27.900><c> Android</c><00:01:28.229><c> app</c><00:01:28.380><c> after</c><00:01:28.560><c> all</c><00:01:28.890><c> so</c><00:01:29.579><c> you</c>

00:01:29.630 --> 00:01:29.640 align:start position:0%
writing an Android app after all so you
 

00:01:29.640 --> 00:01:31.609 align:start position:0%
writing an Android app after all so you
need<00:01:29.850><c> to</c><00:01:30.119><c> be</c><00:01:30.240><c> able</c><00:01:30.360><c> to</c><00:01:30.540><c> test</c><00:01:30.840><c> how</c><00:01:31.229><c> your</c><00:01:31.439><c> code</c>

00:01:31.609 --> 00:01:31.619 align:start position:0%
need to be able to test how your code
 

00:01:31.619 --> 00:01:33.819 align:start position:0%
need to be able to test how your code
behaves<00:01:31.979><c> on</c><00:01:32.250><c> a</c><00:01:32.310><c> real</c><00:01:32.610><c> device</c><00:01:32.909><c> or</c><00:01:33.119><c> emulator</c><00:01:33.299><c> and</c>

00:01:33.819 --> 00:01:33.829 align:start position:0%
behaves on a real device or emulator and
 

00:01:33.829 --> 00:01:35.690 align:start position:0%
behaves on a real device or emulator and
that's<00:01:34.829><c> when</c><00:01:35.070><c> you</c><00:01:35.159><c> want</c><00:01:35.400><c> to</c><00:01:35.460><c> use</c>

00:01:35.690 --> 00:01:35.700 align:start position:0%
that's when you want to use
 

00:01:35.700 --> 00:01:38.630 align:start position:0%
that's when you want to use
instrumentation<00:01:36.540><c> tests</c><00:01:37.280><c> why</c><00:01:38.280><c> do</c><00:01:38.340><c> we</c><00:01:38.490><c> call</c>

00:01:38.630 --> 00:01:38.640 align:start position:0%
instrumentation tests why do we call
 

00:01:38.640 --> 00:01:40.520 align:start position:0%
instrumentation tests why do we call
them<00:01:38.790><c> instrumentation</c><00:01:39.600><c> or</c><00:01:39.750><c> instrumented</c>

00:01:40.520 --> 00:01:40.530 align:start position:0%
them instrumentation or instrumented
 

00:01:40.530 --> 00:01:42.889 align:start position:0%
them instrumentation or instrumented
test<00:01:41.060><c> instrumentation</c><00:01:42.060><c> is</c><00:01:42.390><c> an</c><00:01:42.540><c> android</c>

00:01:42.889 --> 00:01:42.899 align:start position:0%
test instrumentation is an android
 

00:01:42.899 --> 00:01:44.719 align:start position:0%
test instrumentation is an android
framework<00:01:43.170><c> component</c><00:01:43.890><c> that</c><00:01:44.369><c> provides</c>

00:01:44.719 --> 00:01:44.729 align:start position:0%
framework component that provides
 

00:01:44.729 --> 00:01:46.789 align:start position:0%
framework component that provides
additional<00:01:44.909><c> monitoring</c><00:01:45.869><c> and</c><00:01:46.020><c> control</c><00:01:46.439><c> over</c>

00:01:46.789 --> 00:01:46.799 align:start position:0%
additional monitoring and control over
 

00:01:46.799 --> 00:01:49.100 align:start position:0%
additional monitoring and control over
the<00:01:46.950><c> application</c><00:01:47.520><c> under</c><00:01:47.640><c> test</c><00:01:48.020><c> through</c><00:01:49.020><c> the</c>

00:01:49.100 --> 00:01:49.110 align:start position:0%
the application under test through the
 

00:01:49.110 --> 00:01:51.050 align:start position:0%
the application under test through the
use<00:01:49.259><c> of</c><00:01:49.290><c> instrumentation</c><00:01:49.979><c> we</c><00:01:50.520><c> can</c><00:01:50.670><c> run</c><00:01:50.820><c> tests</c>

00:01:51.050 --> 00:01:51.060 align:start position:0%
use of instrumentation we can run tests
 

00:01:51.060 --> 00:01:53.210 align:start position:0%
use of instrumentation we can run tests
on<00:01:51.210><c> a</c><00:01:51.270><c> real</c><00:01:51.509><c> device</c><00:01:51.780><c> or</c><00:01:52.020><c> emulator</c><00:01:52.220><c> alongside</c>

00:01:53.210 --> 00:01:53.220 align:start position:0%
on a real device or emulator alongside
 

00:01:53.220 --> 00:01:56.480 align:start position:0%
on a real device or emulator alongside
your<00:01:53.579><c> app's</c><00:01:53.759><c> code</c><00:01:54.229><c> how</c><00:01:55.229><c> does</c><00:01:55.439><c> that</c><00:01:55.590><c> work</c><00:01:55.799><c> well</c>

00:01:56.480 --> 00:01:56.490 align:start position:0%
your app's code how does that work well
 

00:01:56.490 --> 00:01:58.580 align:start position:0%
your app's code how does that work well
the<00:01:56.790><c> test</c><00:01:57.060><c> that</c><00:01:57.270><c> you</c><00:01:57.390><c> write</c><00:01:57.630><c> will</c><00:01:58.079><c> be</c><00:01:58.200><c> packaged</c>

00:01:58.580 --> 00:01:58.590 align:start position:0%
the test that you write will be packaged
 

00:01:58.590 --> 00:02:01.249 align:start position:0%
the test that you write will be packaged
into<00:01:58.770><c> a</c><00:01:58.860><c> separate</c><00:01:59.219><c> apk</c><00:01:59.520><c> and</c><00:01:59.850><c> install</c><00:02:00.689><c> as</c><00:02:00.899><c> part</c>

00:02:01.249 --> 00:02:01.259 align:start position:0%
into a separate apk and install as part
 

00:02:01.259 --> 00:02:02.959 align:start position:0%
into a separate apk and install as part
of<00:02:01.320><c> the</c><00:02:01.500><c> connected</c><00:02:01.950><c> android</c><00:02:02.280><c> test</c><00:02:02.549><c> Gradle</c>

00:02:02.959 --> 00:02:02.969 align:start position:0%
of the connected android test Gradle
 

00:02:02.969 --> 00:02:04.999 align:start position:0%
of the connected android test Gradle
task<00:02:03.000><c> or</c><00:02:03.450><c> run</c><00:02:03.840><c> running</c><00:02:04.170><c> tests</c><00:02:04.530><c> in</c><00:02:04.680><c> Android</c>

00:02:04.999 --> 00:02:05.009 align:start position:0%
task or run running tests in Android
 

00:02:05.009 --> 00:02:05.420 align:start position:0%
task or run running tests in Android
studio

00:02:05.420 --> 00:02:05.430 align:start position:0%
studio
 

00:02:05.430 --> 00:02:07.999 align:start position:0%
studio
they<00:02:06.329><c> will</c><00:02:06.509><c> then</c><00:02:06.630><c> be</c><00:02:06.689><c> executed</c><00:02:07.530><c> in</c><00:02:07.680><c> your</c><00:02:07.799><c> apps</c>

00:02:07.999 --> 00:02:08.009 align:start position:0%
they will then be executed in your apps
 

00:02:08.009 --> 00:02:10.880 align:start position:0%
they will then be executed in your apps
process<00:02:08.550><c> by</c><00:02:08.940><c> an</c><00:02:09.060><c> instrumentation</c><00:02:09.569><c> runner</c><00:02:09.959><c> we</c>

00:02:10.880 --> 00:02:10.890 align:start position:0%
process by an instrumentation runner we
 

00:02:10.890 --> 00:02:12.619 align:start position:0%
process by an instrumentation runner we
provide<00:02:11.190><c> a</c><00:02:11.220><c> runner</c><00:02:11.489><c> implementation</c><00:02:12.239><c> that</c><00:02:12.569><c> is</c>

00:02:12.619 --> 00:02:12.629 align:start position:0%
provide a runner implementation that is
 

00:02:12.629 --> 00:02:14.330 align:start position:0%
provide a runner implementation that is
compatible<00:02:13.020><c> with</c><00:02:13.260><c> J</c><00:02:13.590><c> unit</c><00:02:13.770><c> 4</c>

00:02:14.330 --> 00:02:14.340 align:start position:0%
compatible with J unit 4
 

00:02:14.340 --> 00:02:16.339 align:start position:0%
compatible with J unit 4
as<00:02:14.519><c> part</c><00:02:15.060><c> of</c><00:02:15.120><c> the</c><00:02:15.269><c> Android</c><00:02:15.569><c> testing</c><00:02:15.780><c> support</c>

00:02:16.339 --> 00:02:16.349 align:start position:0%
as part of the Android testing support
 

00:02:16.349 --> 00:02:19.670 align:start position:0%
as part of the Android testing support
library<00:02:16.709><c> or</c><00:02:16.860><c> ATS</c><00:02:17.610><c> L</c><00:02:17.819><c> to</c><00:02:18.720><c> use</c><00:02:18.900><c> it</c><00:02:19.080><c> make</c><00:02:19.379><c> sure</c><00:02:19.410><c> you</c>

00:02:19.670 --> 00:02:19.680 align:start position:0%
library or ATS L to use it make sure you
 

00:02:19.680 --> 00:02:21.050 align:start position:0%
library or ATS L to use it make sure you
have<00:02:19.830><c> the</c><00:02:19.980><c> newest</c><00:02:20.340><c> version</c><00:02:20.670><c> of</c><00:02:20.760><c> Android</c>

00:02:21.050 --> 00:02:21.060 align:start position:0%
have the newest version of Android
 

00:02:21.060 --> 00:02:23.210 align:start position:0%
have the newest version of Android
support<00:02:21.269><c> repository</c><00:02:21.989><c> installed</c><00:02:22.739><c> within</c><00:02:23.069><c> your</c>

00:02:23.210 --> 00:02:23.220 align:start position:0%
support repository installed within your
 

00:02:23.220 --> 00:02:26.300 align:start position:0%
support repository installed within your
SDK<00:02:23.720><c> the</c><00:02:24.720><c> adsl</c><00:02:25.200><c> comes</c><00:02:25.530><c> with</c><00:02:25.739><c> a</c><00:02:25.769><c> great</c><00:02:26.069><c> UI</c>

00:02:26.300 --> 00:02:26.310 align:start position:0%
SDK the adsl comes with a great UI
 

00:02:26.310 --> 00:02:28.910 align:start position:0%
SDK the adsl comes with a great UI
testing<00:02:26.819><c> framework</c><00:02:27.209><c> called</c><00:02:27.780><c> espresso</c><00:02:27.930><c> that</c><00:02:28.890><c> I</c>

00:02:28.910 --> 00:02:28.920 align:start position:0%
testing framework called espresso that I
 

00:02:28.920 --> 00:02:30.350 align:start position:0%
testing framework called espresso that I
will<00:02:29.129><c> focus</c><00:02:29.310><c> on</c><00:02:29.580><c> in</c><00:02:29.760><c> the</c><00:02:29.849><c> next</c><00:02:29.879><c> few</c><00:02:30.239><c> episodes</c>

00:02:30.350 --> 00:02:30.360 align:start position:0%
will focus on in the next few episodes
 

00:02:30.360 --> 00:02:32.900 align:start position:0%
will focus on in the next few episodes
of<00:02:30.720><c> Android</c><00:02:31.080><c> testing</c><00:02:31.440><c> patterns</c><00:02:31.830><c> it</c><00:02:32.760><c> also</c>

00:02:32.900 --> 00:02:32.910 align:start position:0%
of Android testing patterns it also
 

00:02:32.910 --> 00:02:34.850 align:start position:0%
of Android testing patterns it also
contains<00:02:33.390><c> a</c><00:02:33.599><c> unit</c><00:02:33.989><c> for</c><00:02:34.200><c> rules</c><00:02:34.470><c> that</c><00:02:34.709><c> can</c>

00:02:34.850 --> 00:02:34.860 align:start position:0%
contains a unit for rules that can
 

00:02:34.860 --> 00:02:36.589 align:start position:0%
contains a unit for rules that can
automatically<00:02:35.459><c> start</c><00:02:35.610><c> activities</c><00:02:36.360><c> and</c>

00:02:36.589 --> 00:02:36.599 align:start position:0%
automatically start activities and
 

00:02:36.599 --> 00:02:39.440 align:start position:0%
automatically start activities and
services<00:02:37.110><c> for</c><00:02:37.319><c> your</c><00:02:37.379><c> tests</c><00:02:37.799><c> now</c><00:02:38.700><c> I'm</c><00:02:38.940><c> sure</c>

00:02:39.440 --> 00:02:39.450 align:start position:0%
services for your tests now I'm sure
 

00:02:39.450 --> 00:02:40.910 align:start position:0%
services for your tests now I'm sure
you're<00:02:39.599><c> all</c><00:02:39.780><c> eager</c><00:02:39.930><c> to</c><00:02:40.080><c> see</c><00:02:40.290><c> some</c><00:02:40.470><c> testing</c><00:02:40.830><c> in</c>

00:02:40.910 --> 00:02:40.920 align:start position:0%
you're all eager to see some testing in
 

00:02:40.920 --> 00:02:42.770 align:start position:0%
you're all eager to see some testing in
action<00:02:41.250><c> so</c><00:02:41.700><c> be</c><00:02:41.970><c> sure</c><00:02:42.000><c> to</c><00:02:42.330><c> click</c><00:02:42.510><c> through</c><00:02:42.750><c> to</c>

00:02:42.770 --> 00:02:42.780 align:start position:0%
action so be sure to click through to
 

00:02:42.780 --> 00:02:44.660 align:start position:0%
action so be sure to click through to
the<00:02:42.989><c> next</c><00:02:43.260><c> video</c><00:02:43.530><c> where</c><00:02:44.099><c> I</c><00:02:44.129><c> show</c><00:02:44.400><c> you</c><00:02:44.430><c> how</c><00:02:44.640><c> to</c>

00:02:44.660 --> 00:02:44.670 align:start position:0%
the next video where I show you how to
 

00:02:44.670 --> 00:03:00.809 align:start position:0%
the next video where I show you how to
run<00:02:44.910><c> your</c><00:02:45.060><c> first</c><00:02:45.299><c> espresso</c><00:02:45.900><c> test</c>

00:03:00.809 --> 00:03:00.819 align:start position:0%
 
 

00:03:00.819 --> 00:03:02.879 align:start position:0%
 
you

