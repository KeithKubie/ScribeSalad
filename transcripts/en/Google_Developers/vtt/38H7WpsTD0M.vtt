WEBVTT
Kind: captions
Language: en

00:00:00.820 --> 00:00:01.230
ERIC KOLEDA: All right.

00:00:01.230 --> 00:00:02.290
Hello everybody.

00:00:02.290 --> 00:00:03.890
Welcome.

00:00:03.890 --> 00:00:05.750
My name is Eric Koleda.

00:00:05.750 --> 00:00:08.330
I'm a Developer Programs
Engineer working on Google

00:00:08.330 --> 00:00:09.580
Apps Script.

00:00:09.580 --> 00:00:10.755
MATTHEW ZIEGELBAUM: My name
is Matt Ziegelbaum.

00:00:10.755 --> 00:00:13.580
I'm a Software Engineer and
I work on Google Forms.

00:00:13.580 --> 00:00:15.770
ERIC KOLEDA: And today, we're
going to show you how you can

00:00:15.770 --> 00:00:19.890
take the simple, scalable data
collection of Google Forms and

00:00:19.890 --> 00:00:22.740
combine it with the powerful,
integrated automation of Apps

00:00:22.740 --> 00:00:26.910
Script to eliminate a lot of
the manual processes, the

00:00:26.910 --> 00:00:30.900
annoying workflows you have to
do in your daily routine.

00:00:30.900 --> 00:00:34.550
But first, let's take a look
back at where we've come from.

00:00:34.550 --> 00:00:37.346
MATTHEW ZIEGELBAUM: So I guess
maybe sometimes we all feel a

00:00:37.346 --> 00:00:40.100
bit like this, sitting in
a room processing paper.

00:00:40.100 --> 00:00:44.390
This is the Sears Roebuck
Fulfillment Center Entry

00:00:44.390 --> 00:00:47.000
Department from about
100 years ago.

00:00:47.000 --> 00:00:51.260
This postcard is from 1916, and
it kind of illustrates how

00:00:51.260 --> 00:00:53.080
far we've come.

00:00:53.080 --> 00:00:56.140
Back at the turn of the century,
Sears figured out

00:00:56.140 --> 00:00:57.980
that you could turn
form processing

00:00:57.980 --> 00:00:59.650
into an assembly line.

00:00:59.650 --> 00:01:03.550
They filled rooms throughout
the country with people who

00:01:03.550 --> 00:01:06.860
had to move forms from point A
to point B at various time

00:01:06.860 --> 00:01:12.250
points, and it cut their error
margins, it increased their

00:01:12.250 --> 00:01:16.190
profitability, it made their
customers happy, but it's

00:01:16.190 --> 00:01:17.390
really manual.

00:01:17.390 --> 00:01:21.290
And moving forward, today,
this is fairly standard.

00:01:21.290 --> 00:01:24.800
Enterprise software, you build
these big enterprise systems.

00:01:24.800 --> 00:01:25.685
They do your order
fulfillment.

00:01:25.685 --> 00:01:29.070
Your user comes to your website,
you click a button,

00:01:29.070 --> 00:01:32.730
all of a sudden the warehouse
gets the order, it ships out.

00:01:32.730 --> 00:01:35.690
But it's still big, it requires
a lot of costly

00:01:35.690 --> 00:01:39.475
engineering work, and
you can do better.

00:01:39.475 --> 00:01:42.780
ERIC KOLEDA: And the truth is
there's a lot of problems that

00:01:42.780 --> 00:01:45.490
aren't solved by using
a really big system.

00:01:45.490 --> 00:01:47.560
For lack of a better term, I'm
going to refer to these as

00:01:47.560 --> 00:01:49.230
mini-workflows.

00:01:49.230 --> 00:01:51.840
So these are processes that you
have that are often maybe

00:01:51.840 --> 00:01:53.490
very small in scope.

00:01:53.490 --> 00:01:55.990
So sometimes we try to
plan a team dinner.

00:01:55.990 --> 00:01:58.110
I'm not going to build an
enterprise application for a

00:01:58.110 --> 00:01:59.556
team dinner.

00:01:59.556 --> 00:02:01.600
Other times, they're just
limited time frame.

00:02:01.600 --> 00:02:03.650
So let's say you're doing
an event registration.

00:02:03.650 --> 00:02:06.550
When that event is over in a
couple weeks, no longer is

00:02:06.550 --> 00:02:09.360
that entire workflow system
necessary, so it doesn't make

00:02:09.360 --> 00:02:11.410
sense to invest too
much in it.

00:02:11.410 --> 00:02:13.500
And sometimes, there's just
processes that are really

00:02:13.500 --> 00:02:14.430
rapidly changing.

00:02:14.430 --> 00:02:16.420
So think crisis response.

00:02:16.420 --> 00:02:18.600
You're on the ground and you
need to quickly adapt your

00:02:18.600 --> 00:02:22.060
workflow to what's happening,
and having something big,

00:02:22.060 --> 00:02:24.930
clunky, and hard baked is just
not going to scale to what you

00:02:24.930 --> 00:02:26.590
need it to do.

00:02:26.590 --> 00:02:29.480
Now, we use different kinds of
technology today to address

00:02:29.480 --> 00:02:30.250
these problems.

00:02:30.250 --> 00:02:31.490
I think one of the
first things that

00:02:31.490 --> 00:02:34.110
people turn to is email.

00:02:34.110 --> 00:02:36.830
What's great about email is that
it really requires the

00:02:36.830 --> 00:02:38.160
minimal effort out of
all the things we're

00:02:38.160 --> 00:02:39.010
going to talk about.

00:02:39.010 --> 00:02:41.630
You just start typing and hit
the Send button, and your

00:02:41.630 --> 00:02:44.580
workflow is off and running.

00:02:44.580 --> 00:02:46.590
And the other great thing about
it is the technology is

00:02:46.590 --> 00:02:47.500
really familiar.

00:02:47.500 --> 00:02:50.540
Even your least technical user
in your organization has an

00:02:50.540 --> 00:02:52.220
inbox and knows how
to work it.

00:02:52.220 --> 00:02:53.480
Otherwise, they probably
wouldn't be

00:02:53.480 --> 00:02:55.050
employed there any longer.

00:02:55.050 --> 00:02:58.630
But once you scale a workflow
like this to something beyond

00:02:58.630 --> 00:03:00.630
just a handful of users,
it really turns

00:03:00.630 --> 00:03:02.060
into complete chaos.

00:03:02.060 --> 00:03:04.290
Trying to collect all
that data, organize

00:03:04.290 --> 00:03:05.840
it, even handle edits.

00:03:05.840 --> 00:03:07.850
People change their
response later.

00:03:07.850 --> 00:03:10.910
Trying to process all of that
in email really breaks down,

00:03:10.910 --> 00:03:12.950
and I think people quickly
realize this is not the way to

00:03:12.950 --> 00:03:16.670
go for something that has any
degree of complexity.

00:03:16.670 --> 00:03:19.330
Now, where a lot of people turn
to next, and an obvious

00:03:19.330 --> 00:03:20.620
choice, is spreadsheets.

00:03:20.620 --> 00:03:23.950
Spreadsheets are a great tool
for doing data organization

00:03:23.950 --> 00:03:27.140
and collection, mostly because
it's structured.

00:03:27.140 --> 00:03:30.280
So unlike email, you can define
columns and rows, you

00:03:30.280 --> 00:03:33.140
can organize your data into
different fields, really add

00:03:33.140 --> 00:03:35.660
some much needed structure
to what you're doing.

00:03:35.660 --> 00:03:38.150
And although it's a little bit
more complicated than email,

00:03:38.150 --> 00:03:39.995
it's still relatively
simple to set up.

00:03:39.995 --> 00:03:41.740
I find that people, when
they're working on a

00:03:41.740 --> 00:03:43.930
spreadsheet, they'll probably
spend more time getting the

00:03:43.930 --> 00:03:46.410
background colors just the way
they want than they actually

00:03:46.410 --> 00:03:49.700
do on the rows and columns
and the important bits.

00:03:49.700 --> 00:03:52.500
But once again, there's still
a problem here in that it's

00:03:52.500 --> 00:03:53.580
somewhat error prone.

00:03:53.580 --> 00:03:55.760
So we use Google Sheets,
obviously, inside Google for

00:03:55.760 --> 00:03:58.860
all of our work, and I've been
in sheets open before that

00:03:58.860 --> 00:04:01.920
have hundreds of little cursors
flying around adding

00:04:01.920 --> 00:04:03.280
rows, changing cells,

00:04:03.280 --> 00:04:05.140
overwriting what I just entered.

00:04:05.140 --> 00:04:07.880
It's still kind of dangerous
because all the data is

00:04:07.880 --> 00:04:10.970
available for everybody to both
view and edit, and so it

00:04:10.970 --> 00:04:15.150
really doesn't scale to a more
complex kind of mini-workflow.

00:04:15.150 --> 00:04:17.500
Now, I imagine a bunch of us
here in the room are software

00:04:17.500 --> 00:04:20.220
developers, and so our natural
inclination, when we see a

00:04:20.220 --> 00:04:23.140
problem like this is, I can
just I an application.

00:04:23.140 --> 00:04:24.100
I know how to do it.

00:04:24.100 --> 00:04:26.560
I could spin up a database
and a server.

00:04:26.560 --> 00:04:28.480
Lickety split, not a problem.

00:04:28.480 --> 00:04:30.270
Actually I have a colleague,
[? Khalyan, ?]

00:04:30.270 --> 00:04:33.340
no matter what problem I tell
him in my life, he always says

00:04:33.340 --> 00:04:35.810
that with just a weekend of
coding and maybe [INAUDIBLE],

00:04:35.810 --> 00:04:36.830
he could solve it.

00:04:36.830 --> 00:04:40.010
Doesn't matter how complex
the problem is.

00:04:40.010 --> 00:04:41.890
And the truth is there are
some benefits to custom

00:04:41.890 --> 00:04:43.030
applications.

00:04:43.030 --> 00:04:44.150
You can tailor your application

00:04:44.150 --> 00:04:46.360
to your exact needs.

00:04:46.360 --> 00:04:48.680
Just expose the data you want,
just collect the data you

00:04:48.680 --> 00:04:51.520
want, have the exact sequences
and branching.

00:04:51.520 --> 00:04:55.150
So it's really perfect for
getting the exact solution

00:04:55.150 --> 00:04:57.070
that you would like to have.

00:04:57.070 --> 00:04:58.990
And if you build it on the right
technologies, it can

00:04:58.990 --> 00:05:00.360
easily scale to thousands
of users.

00:05:00.360 --> 00:05:02.380
The scalability problem
for number of

00:05:02.380 --> 00:05:03.870
users really goes away.

00:05:03.870 --> 00:05:06.240
But there's a cost here and a
problem that isn't always

00:05:06.240 --> 00:05:09.580
obvious at first, and that's
the long term maintenance.

00:05:09.580 --> 00:05:12.330
So just by a show of hands,
how many people here have

00:05:12.330 --> 00:05:14.900
built an application for a
friend or colleague that they

00:05:14.900 --> 00:05:17.980
swore was a two week project,
and it's years later and

00:05:17.980 --> 00:05:20.030
you're still supporting it?

00:05:20.030 --> 00:05:21.720
A lot of hands went up there.

00:05:21.720 --> 00:05:22.605
You're getting the calls.

00:05:22.605 --> 00:05:23.800
Can you add a label?

00:05:23.800 --> 00:05:25.540
Can you add a field?

00:05:25.540 --> 00:05:27.400
You've got to remember a
password to a system you

00:05:27.400 --> 00:05:29.620
probably long ago forgot.

00:05:29.620 --> 00:05:32.610
There's an ongoing cost of these
custom applications that

00:05:32.610 --> 00:05:35.600
doesn't make sense in more of
these mini-workflow scenarios.

00:05:35.600 --> 00:05:38.000
But at Google, we think we
have a better option for

00:05:38.000 --> 00:05:39.680
addressing it.

00:05:39.680 --> 00:05:39.960
MATTHEW ZIEGELBAUM: Yes.

00:05:39.960 --> 00:05:43.020
So we think that option
is Google Forms.

00:05:43.020 --> 00:05:45.660
Google Forms started in 2008
as a feature of Google

00:05:45.660 --> 00:05:49.330
Spreadsheets, and we wrote it to
address problems like this

00:05:49.330 --> 00:05:51.770
where you had a lot of
information you needed to

00:05:51.770 --> 00:05:53.720
collect-- say, going
to dinner--

00:05:53.720 --> 00:05:57.130
and you had too many users, and
there just wasn't a great

00:05:57.130 --> 00:06:00.970
way to plan well.

00:06:00.970 --> 00:06:05.880
Google Forms is perfect for
these short, flexible

00:06:05.880 --> 00:06:09.160
solutions that you need
to create on the fly.

00:06:09.160 --> 00:06:10.780
Crisis response is perfect.

00:06:10.780 --> 00:06:12.290
Teachers love it.

00:06:12.290 --> 00:06:14.840
Just recently after the Boston
bombings, the community

00:06:14.840 --> 00:06:17.710
actually threw together two
forms and sent them out to the

00:06:17.710 --> 00:06:21.760
world, one form for people who
got stuck because of grounded

00:06:21.760 --> 00:06:23.950
flights and couldn't leave the
city and didn't have anywhere

00:06:23.950 --> 00:06:26.570
to stay, and the other
form for people who

00:06:26.570 --> 00:06:27.810
could provide housing.

00:06:27.810 --> 00:06:34.210
And ad hoc, they set up an on
the fly solution and got

00:06:34.210 --> 00:06:35.970
everyone a place to stay.

00:06:35.970 --> 00:06:37.365
They got first responders
food.

00:06:37.365 --> 00:06:41.430
And it was all through using
this simple technology.

00:06:41.430 --> 00:06:44.260
In February, we launched a new
version of Google Forms.

00:06:44.260 --> 00:06:45.650
It's much richer.

00:06:45.650 --> 00:06:48.600
It looks like Docs,
Sheets and Slides.

00:06:48.600 --> 00:06:51.930
It supports real time
collaboration, and it scales

00:06:51.930 --> 00:06:53.750
better than the old version.

00:06:53.750 --> 00:06:55.870
So as [? Sundar ?]

00:06:55.870 --> 00:07:01.050
noted this morning, Apps for
Education is huge, and

00:07:01.050 --> 00:07:05.030
teachers are some of our most
enthusiastic Forms users.

00:07:05.030 --> 00:07:07.050
They love it.

00:07:07.050 --> 00:07:13.790
They work to create quizzes and
parent feedback forms and

00:07:13.790 --> 00:07:15.230
all of these things that
just make their

00:07:15.230 --> 00:07:16.730
lives so much easier.

00:07:16.730 --> 00:07:19.730
But it's all manual, if a
student joins the class

00:07:19.730 --> 00:07:22.350
halfway through the year and
they add it to their roster

00:07:22.350 --> 00:07:26.720
spreadsheet, it's not in all of
their forms, and it's hard.

00:07:26.720 --> 00:07:29.020
Teachers don't have infinite
time and their resources are

00:07:29.020 --> 00:07:31.780
already stretched, and they
really need more automation.

00:07:31.780 --> 00:07:34.060
They want to be able to quickly
create quizzes.

00:07:34.060 --> 00:07:37.130
They want to send feedback forms
to parents to find out

00:07:37.130 --> 00:07:38.440
what they can do better.

00:07:38.440 --> 00:07:42.290
There's just a whole slew of
things that they need to do.

00:07:42.290 --> 00:07:46.420
And luckily, Google has had a
solution for automating things

00:07:46.420 --> 00:07:48.570
with Google Apps for years.

00:07:48.570 --> 00:07:50.600
ERIC KOLEDA: And that's
Google Apps Script.

00:07:50.600 --> 00:07:52.500
So some of you might already
know what Google Apps Script

00:07:52.500 --> 00:07:54.770
is, judging from
the talk title.

00:07:54.770 --> 00:07:57.060
But if you haven't heard of it,
there's basically a few

00:07:57.060 --> 00:07:59.800
takeaways about what
Apps Script is.

00:07:59.800 --> 00:08:02.690
So the first is that it's
JavaScript in the cloud.

00:08:02.690 --> 00:08:05.160
What that means is you're
writing JavaScript code, but

00:08:05.160 --> 00:08:08.070
you're writing it in an online
editor that gets stored in

00:08:08.070 --> 00:08:11.860
Google Storage and then runs
on Google hardware.

00:08:11.860 --> 00:08:14.420
And so since all of this is
taking place in the cloud, it

00:08:14.420 --> 00:08:16.390
really requires no set
up whatsoever.

00:08:16.390 --> 00:08:18.000
So right now, you could
open a web browser to

00:08:18.000 --> 00:08:21.270
script.google.com and start
coding immediately.

00:08:21.270 --> 00:08:25.860
No IDE, no binaries, no
configuration or setup steps.

00:08:25.860 --> 00:08:28.850
It's really a lightweight way to
get coding in a Google Apps

00:08:28.850 --> 00:08:30.900
environment.

00:08:30.900 --> 00:08:33.400
And another great thing about it
is that it gives you really

00:08:33.400 --> 00:08:35.159
easy access to all your data.

00:08:35.159 --> 00:08:37.190
So we have connectors
into a lot of

00:08:37.190 --> 00:08:38.650
different Google services--

00:08:38.650 --> 00:08:41.610
Gmail, Calendar, Docs,
and Drive--

00:08:41.610 --> 00:08:44.760
so you can pull out your Google
data and start doing

00:08:44.760 --> 00:08:46.000
interesting things with it.

00:08:46.000 --> 00:08:49.310
But we also have connectors into
outside technologies and

00:08:49.310 --> 00:08:51.920
outside data so you can
interface with third party

00:08:51.920 --> 00:08:56.110
APIs, you can interface with
legacy systems that you have,

00:08:56.110 --> 00:08:58.620
and it's a really great way
to bring all of your data

00:08:58.620 --> 00:09:02.300
together and then take action
and extend Google Apps.

00:09:02.300 --> 00:09:04.310
I don't have it in the slide,
but there's a fourth thing I

00:09:04.310 --> 00:09:06.470
would recommend you remember
about Apps Script.

00:09:06.470 --> 00:09:09.610
Please do not refer
to it as GAS.

00:09:09.610 --> 00:09:12.340
My colleague Arun, it really
bugs him that he's the Lead

00:09:12.340 --> 00:09:13.950
Developer Advocate on GAS.

00:09:13.950 --> 00:09:18.120
But that's a small point.

00:09:18.120 --> 00:09:20.690
Now, we've had Google Apps
Script in Google Sheets and

00:09:20.690 --> 00:09:22.600
Google Sites for a number
of years now.

00:09:22.600 --> 00:09:23.550
It's been really popular.

00:09:23.550 --> 00:09:26.560
And just yesterday, we were so
happy to announce that Apps

00:09:26.560 --> 00:09:30.336
Script is now in Google
Forms as well.

00:09:30.336 --> 00:09:30.760
[APPLAUSE]

00:09:30.760 --> 00:09:34.310
ERIC KOLEDA: There we go.

00:09:34.310 --> 00:09:34.610
All right.

00:09:34.610 --> 00:09:37.530
So we really think this opens
up a whole lot of great

00:09:37.530 --> 00:09:40.560
potential for solving these
mini-workflow problems and

00:09:40.560 --> 00:09:44.870
getting these manual tasks
completely automated.

00:09:44.870 --> 00:09:47.860
So what does it mean to have
Google Scripts in Forms?

00:09:47.860 --> 00:09:49.900
Well, the first thing you'll
notice right away is in the

00:09:49.900 --> 00:09:53.800
Forms Designer, there's a new
menu, Tools, Script Editor.

00:09:53.800 --> 00:09:55.900
This is how you jump right
into creating a

00:09:55.900 --> 00:09:58.800
script for your form.

00:09:58.800 --> 00:10:00.630
You can just start coding right
away, and it provides

00:10:00.630 --> 00:10:03.770
you really easy access to the
currently open form so you can

00:10:03.770 --> 00:10:05.530
start taking action on it.

00:10:05.530 --> 00:10:07.730
And really, it bundles together
the script and the

00:10:07.730 --> 00:10:10.956
form so that if you were to
copy that form or share it

00:10:10.956 --> 00:10:13.140
with someone, the script
moves along with it.

00:10:13.140 --> 00:10:14.850
So it's a really great way
to take a workflow, a

00:10:14.850 --> 00:10:18.580
mini-workflow solution, bundle
it up, and move it along.

00:10:18.580 --> 00:10:21.630
Now, what can you actually
do now that you have a

00:10:21.630 --> 00:10:22.720
script in your form?

00:10:22.720 --> 00:10:24.890
Well, there's basically three
main ways that we're

00:10:24.890 --> 00:10:26.850
integrated with Forms.

00:10:26.850 --> 00:10:30.270
The first is the ability to
create, open, and edit forms

00:10:30.270 --> 00:10:33.040
programmatically using
Apps Script.

00:10:33.040 --> 00:10:36.210
Second is to enhance the Form
Designer with your own custom

00:10:36.210 --> 00:10:38.660
user interface components.

00:10:38.660 --> 00:10:42.450
And third is to react to form
submissions and carry that

00:10:42.450 --> 00:10:45.110
into another action.

00:10:45.110 --> 00:10:46.230
MATTHEW ZIEGELBAUM: So
let's take a look at

00:10:46.230 --> 00:10:48.750
create, open, and edit.

00:10:48.750 --> 00:10:51.990
The most important thing that
we wanted to give to you in

00:10:51.990 --> 00:10:55.180
this new API is that if you can
do something in the Form

00:10:55.180 --> 00:10:57.360
Designer, you should be able
to do it in Apps Script.

00:10:57.360 --> 00:10:59.180
So we worked really hard to
make sure all of that

00:10:59.180 --> 00:11:00.690
functionality is there.

00:11:00.690 --> 00:11:02.250
You can manage your forms.

00:11:02.250 --> 00:11:06.210
You can change basically
everything about them from

00:11:06.210 --> 00:11:09.430
their confirmation message, to
the choices of a check box

00:11:09.430 --> 00:11:11.900
field, to whether or not the
form is currently accepting

00:11:11.900 --> 00:11:15.890
responses, and this opens up
a whole slew of things.

00:11:15.890 --> 00:11:18.310
You can generate new forms
programmatically.

00:11:18.310 --> 00:11:20.600
If you had those quizzes that
you need to send to your

00:11:20.600 --> 00:11:22.540
students, you can do that now.

00:11:22.540 --> 00:11:26.080
If you want to make dinner plans
using a form and you

00:11:26.080 --> 00:11:28.730
have to plan a dinner once a
month for someone's birthday,

00:11:28.730 --> 00:11:33.750
all of a sudden, you can click a
button and make that happen.

00:11:33.750 --> 00:11:37.140
So just taking a quick look
at some code snippets.

00:11:37.140 --> 00:11:39.650
You can see here we
have FormApp.

00:11:39.650 --> 00:11:42.840
FormApp is the new service to
interact with Google Forms.

00:11:42.840 --> 00:11:44.830
Services are Apps
Script's way of

00:11:44.830 --> 00:11:47.420
interacting with Google services.

00:11:47.420 --> 00:11:51.840
We already had DocumentApp,
SpreadsheetApp, GmailApp, and

00:11:51.840 --> 00:11:54.940
a whole bunch of others, so
FormApp should be familiar.

00:11:54.940 --> 00:11:58.290
If you're familiar with this
script editor already, just

00:11:58.290 --> 00:12:00.880
type FormApp and a period,
and you'll get the nice

00:12:00.880 --> 00:12:04.980
auto-complete you expect
from Apps Script.

00:12:04.980 --> 00:12:08.370
Moving on, setting values.

00:12:08.370 --> 00:12:10.890
Monday, Tuesday, Wednesday are
the days I can go to dinner.

00:12:10.890 --> 00:12:13.280
We're not going to dinner when
I can't go because I'm

00:12:13.280 --> 00:12:15.030
organizing this.

00:12:15.030 --> 00:12:18.790
And finally, sending it over
to the team is really easy.

00:12:18.790 --> 00:12:24.160
Using the Mail App and just a
couple of lines, we've sent

00:12:24.160 --> 00:12:26.600
out a script.

00:12:26.600 --> 00:12:26.890
ERIC KOLEDA: All right.

00:12:26.890 --> 00:12:29.000
So that's creating, opening,
and editing, but the next

00:12:29.000 --> 00:12:30.700
thing we want to take a look
at is enhancing the Form

00:12:30.700 --> 00:12:32.320
Designer itself.

00:12:32.320 --> 00:12:33.860
So there's basically
three types of

00:12:33.860 --> 00:12:35.300
things you can enhance.

00:12:35.300 --> 00:12:38.500
The first is you can add your
own custom menus into the Menu

00:12:38.500 --> 00:12:40.550
Bar that blend in seamlessly
with the menus that are

00:12:40.550 --> 00:12:41.760
already there.

00:12:41.760 --> 00:12:45.300
Secondly, you can show simple
prompts and alerts, little

00:12:45.300 --> 00:12:48.380
pop-ups that allow you to
collect information from your

00:12:48.380 --> 00:12:51.780
user or show them some little
small piece of information.

00:12:51.780 --> 00:12:53.710
And then if you want to build
a more rich form of

00:12:53.710 --> 00:12:57.740
interaction, you can actually
design your own UIs, your own

00:12:57.740 --> 00:13:01.350
more complex, custom built user
interfaces, and expose

00:13:01.350 --> 00:13:04.240
those as a dialog or even
in the sidebar.

00:13:04.240 --> 00:13:06.330
The sidebar is especially great
when you're designing a

00:13:06.330 --> 00:13:08.550
form because you can keep
your information up

00:13:08.550 --> 00:13:10.700
while taking action.

00:13:10.700 --> 00:13:12.890
Now, what that allows you
to do, I think first and

00:13:12.890 --> 00:13:14.640
foremost, is kind
of make macros.

00:13:14.640 --> 00:13:17.680
So you may find yourself in the
Form Designer doing the

00:13:17.680 --> 00:13:20.900
same kind of repetitive tasks
over and over again, things

00:13:20.900 --> 00:13:24.510
like refreshing the values in
a list, like Matt mentioned

00:13:24.510 --> 00:13:28.230
before, or maybe some sort of
sorting, or some sort of

00:13:28.230 --> 00:13:29.880
updating task.

00:13:29.880 --> 00:13:31.970
Maybe you had a form previously
that you were

00:13:31.970 --> 00:13:34.530
changing some text
on every week.

00:13:34.530 --> 00:13:36.280
Now you can automate that.

00:13:36.280 --> 00:13:39.370
And taking that script and
actually exposing it by a menu

00:13:39.370 --> 00:13:42.060
item makes it a lot more
approachable to

00:13:42.060 --> 00:13:43.500
nontechnical users.

00:13:43.500 --> 00:13:46.710
We found that a lot of users,
the act of opening a script

00:13:46.710 --> 00:13:48.230
and hitting the little
Run button, that

00:13:48.230 --> 00:13:48.800
just scares them away.

00:13:48.800 --> 00:13:50.640
They see code and they're
out the door.

00:13:50.640 --> 00:13:52.550
But when you expose it by a
menu item, they don't even

00:13:52.550 --> 00:13:54.700
need to know that this is not
a built in feature, and so

00:13:54.700 --> 00:13:56.590
it's very approachable.

00:13:56.590 --> 00:13:59.100
And then the other thing you can
do with enhancing the UI

00:13:59.100 --> 00:14:01.140
is bring forward
relevant data.

00:14:01.140 --> 00:14:03.350
So when you're designing a form,
it may be helpful to

00:14:03.350 --> 00:14:06.230
have built into that interface,
if you're a

00:14:06.230 --> 00:14:09.070
teacher, a list of your classes
or students, or your

00:14:09.070 --> 00:14:09.800
organization.

00:14:09.800 --> 00:14:13.600
Perhaps you could even just
show your calendar or your

00:14:13.600 --> 00:14:16.390
Gmail, some information that
when you're designing a form

00:14:16.390 --> 00:14:19.390
would be really nice to have,
not only to see, but then to

00:14:19.390 --> 00:14:22.060
take action with in
a complex way.

00:14:22.060 --> 00:14:24.180
So now let's go back to this
dinner planning example we've

00:14:24.180 --> 00:14:27.270
been showing you thus far, and
let's say we have our form

00:14:27.270 --> 00:14:30.210
built, that we had generated in
the previous code example.

00:14:30.210 --> 00:14:32.760
But now we want to have some
extra menu items there that

00:14:32.760 --> 00:14:35.710
allow me, has the form
maintainer, to quickly get a

00:14:35.710 --> 00:14:38.570
sense of what the responses
are like thus far.

00:14:38.570 --> 00:14:42.720
So I've injected an extra menu
here called Extras, and the

00:14:42.720 --> 00:14:44.210
code to do so is
pretty simple.

00:14:44.210 --> 00:14:46.270
It's basically just passing in
some strings, which is the

00:14:46.270 --> 00:14:50.210
text that should appear in the
menu, as well as the function

00:14:50.210 --> 00:14:52.760
that should be run when that
menu item is clicked, so it's

00:14:52.760 --> 00:14:56.990
very simple just to tie together
your code and a menu.

00:14:56.990 --> 00:15:00.160
So the two menu items I've added
here is one, to show me

00:15:00.160 --> 00:15:02.730
based on all the responses,
what's the best day thus far

00:15:02.730 --> 00:15:04.610
based on everyone's
submissions.

00:15:04.610 --> 00:15:06.900
And then maybe even just show
me a chart in case I want to

00:15:06.900 --> 00:15:11.490
analyze the relative popularity
of given days.

00:15:11.490 --> 00:15:14.020
So let's look at this first
one, showBestDay.

00:15:14.020 --> 00:15:17.240
So I have some Calculate Best
Day method here using my super

00:15:17.240 --> 00:15:19.560
secret algorithm that I have
not shown you, but

00:15:19.560 --> 00:15:21.190
essentially, once you've figured
out what your best day

00:15:21.190 --> 00:15:24.790
is, to actually expose that
to the user as an alert is

00:15:24.790 --> 00:15:27.540
basically just one long
line of code.

00:15:27.540 --> 00:15:30.310
You can even set custom buttons
so you can have a

00:15:30.310 --> 00:15:33.160
little bit of control over OK,
Cancel, Yes, No, things of

00:15:33.160 --> 00:15:34.860
that nature, and then
even react to

00:15:34.860 --> 00:15:37.640
which button they choose.

00:15:37.640 --> 00:15:40.090
Now, the other menu item was to
show a chart, and this is a

00:15:40.090 --> 00:15:41.700
little bit more of
a rich interface.

00:15:41.700 --> 00:15:44.640
It's not just a string, so it
requires you to use a custom

00:15:44.640 --> 00:15:47.340
dialog or sidebar.

00:15:47.340 --> 00:15:51.130
So in this case, I've built up
a user interface using the

00:15:51.130 --> 00:15:52.500
HTML service.

00:15:52.500 --> 00:15:55.150
Now, this is a little bit more
complicated and so I haven't

00:15:55.150 --> 00:15:57.140
shown the code here, but we
have some really great

00:15:57.140 --> 00:15:59.960
documentation in our Developer
Docs that show you exactly how

00:15:59.960 --> 00:16:01.740
to use the HTML service.

00:16:01.740 --> 00:16:05.280
So once you've gotten your HTML
page built up and your

00:16:05.280 --> 00:16:08.140
application is wired and ready
to go, to actually show it to

00:16:08.140 --> 00:16:10.510
the user in the Form Designer
is dead simple.

00:16:10.510 --> 00:16:13.170
It's just this one line,
showDialog, passing in your

00:16:13.170 --> 00:16:14.915
finished HTML object.

00:16:14.915 --> 00:16:18.070
It's the same thing for
showSidebar as well.

00:16:18.070 --> 00:16:22.130
And so in this case, I used some
very, very crude HTML and

00:16:22.130 --> 00:16:25.420
CSS to draw a little bar chart,
but you could imagine

00:16:25.420 --> 00:16:28.340
the possibilities that, once
you have the full HTML,

00:16:28.340 --> 00:16:31.260
JavaScript, and CSS stack in
front of you, the kind of rich

00:16:31.260 --> 00:16:32.830
user interfaces you could build

00:16:32.830 --> 00:16:34.080
directly into Google Forms.

00:16:36.580 --> 00:16:38.390
MATTHEW ZIEGELBAUM: So finally,
we can now react to

00:16:38.390 --> 00:16:40.050
submissions.

00:16:40.050 --> 00:16:45.290
If you're familiar with the
Spreadsheets [INAUDIBLE], the

00:16:45.290 --> 00:16:47.870
Form Submit has always
been there but

00:16:47.870 --> 00:16:49.080
it hasn't been great.

00:16:49.080 --> 00:16:50.650
It's not rich.

00:16:50.650 --> 00:16:52.860
It's just been a key
value store.

00:16:52.860 --> 00:16:56.420
And so now, you can still
detect when a user has

00:16:56.420 --> 00:16:59.180
submitted a form and you can
read the data of the response,

00:16:59.180 --> 00:17:03.460
but you get a new, rich response
object out of it.

00:17:03.460 --> 00:17:06.490
So you can build complicated
workflows that react to

00:17:06.490 --> 00:17:07.530
submissions.

00:17:07.530 --> 00:17:10.930
You can send responses based
on the other response.

00:17:10.930 --> 00:17:15.230
You can build forms based
on forms based on forms.

00:17:15.230 --> 00:17:17.119
So back to dinner.

00:17:17.119 --> 00:17:20.190
You can see here a trigger,
and if you're not familiar

00:17:20.190 --> 00:17:24.890
with them, triggers are Apps
Script's way of hooking up one

00:17:24.890 --> 00:17:27.849
of your custom functions
to an event.

00:17:27.849 --> 00:17:32.030
So for every response that's
submitted, this onFormSubmit

00:17:32.030 --> 00:17:34.710
function will be called.

00:17:34.710 --> 00:17:38.700
Looking at the response from a
user, you can see that the

00:17:38.700 --> 00:17:41.415
response is easily parsed.

00:17:41.415 --> 00:17:44.670
You can get their email out
and you can see which days

00:17:44.670 --> 00:17:45.790
they're available.

00:17:45.790 --> 00:17:49.410
You can very easily, using the
DocumentApp, put their

00:17:49.410 --> 00:17:52.440
response into a document that
everyone who has responded can

00:17:52.440 --> 00:17:56.250
see, simplifying your life
because you're no longer the

00:17:56.250 --> 00:18:00.360
one person who knows all of the
information, and giving

00:18:00.360 --> 00:18:02.785
everyone this simple access
to this information.

00:18:05.850 --> 00:18:07.970
ERIC KOLEDA: So we've shown you
the three basic components

00:18:07.970 --> 00:18:11.420
here of the interaction that you
can do with Google Forms--

00:18:11.420 --> 00:18:14.090
create, open, and edit, enhance
the designer, and

00:18:14.090 --> 00:18:15.370
react to submissions.

00:18:15.370 --> 00:18:16.960
Now we're going to go through
a little demo showing how we

00:18:16.960 --> 00:18:21.620
put them all together to address
a real, live use case.

00:18:21.620 --> 00:18:24.590
So something that's become
popular in college--

00:18:24.590 --> 00:18:27.135
a little after my time, though--
is these clickers.

00:18:27.135 --> 00:18:28.800
I don't know how many people
have seen these before.

00:18:28.800 --> 00:18:31.370
But essentially, it's a way
for a teacher to really

00:18:31.370 --> 00:18:33.940
quickly poll their students,
kind of give them

00:18:33.940 --> 00:18:35.130
an on the fly quiz.

00:18:35.130 --> 00:18:36.650
So they can ask a question.

00:18:36.650 --> 00:18:39.200
Students have a clicker in their
hand and just push A, B,

00:18:39.200 --> 00:18:42.310
or C, and then the teacher gets
a readout with how many

00:18:42.310 --> 00:18:44.660
students are correct, how many
people are actually getting

00:18:44.660 --> 00:18:46.430
the lecture.

00:18:46.430 --> 00:18:48.590
Now, there's a cost involved
here, and a lot of public

00:18:48.590 --> 00:18:51.020
schools, they don't have the
money to buy these for all

00:18:51.020 --> 00:18:52.150
their classrooms.

00:18:52.150 --> 00:18:56.230
And so one of our colleagues,
[INAUDIBLE], he's a PM focused

00:18:56.230 --> 00:18:59.450
on education within Google, the
EDU market, and actually a

00:18:59.450 --> 00:19:01.280
former teacher himself.

00:19:01.280 --> 00:19:04.970
He saw our new integration and
he thought this could be a way

00:19:04.970 --> 00:19:08.290
to solve that problem that's
completely free and built on

00:19:08.290 --> 00:19:09.680
Google apps.

00:19:09.680 --> 00:19:12.440
And so we're going to go
and show that demo now.

00:19:12.440 --> 00:19:15.220
The basic idea that he had was,
what if you could create

00:19:15.220 --> 00:19:18.440
a form that allowed you to
generate forms, kind of that

00:19:18.440 --> 00:19:20.720
meta universe that Matt
was talking about.

00:19:20.720 --> 00:19:24.550
So what we've built here is
the Quick Quiz Creator.

00:19:24.550 --> 00:19:27.560
So this is a form that the
teacher would fill out to on

00:19:27.560 --> 00:19:31.610
the fly generate a new quiz to
distribute to their students.

00:19:31.610 --> 00:19:35.140
So Matt's going to fill
out an I/O quiz here.

00:19:35.140 --> 00:19:37.680
So you give it a name
and a description.

00:19:37.680 --> 00:19:39.250
Those are optional.

00:19:39.250 --> 00:19:41.250
And then there's a bunch of
different text boxes that

00:19:41.250 --> 00:19:44.200
allow you to specify the
questions and then multiple

00:19:44.200 --> 00:19:46.740
choice answers.

00:19:46.740 --> 00:19:49.360
And the nice thing about this,
you could obviously create a

00:19:49.360 --> 00:19:53.020
custom UI that did all of this,
collecting data from a

00:19:53.020 --> 00:19:55.380
teacher, but once again, it
highlights that a teacher will

00:19:55.380 --> 00:19:58.110
be really familiar with
Google Forms itself.

00:19:58.110 --> 00:20:02.430
And so going in and creating a
quiz via a form is actually a

00:20:02.430 --> 00:20:05.680
low training, low effort way of
getting all of that data,

00:20:05.680 --> 00:20:09.490
and allows them to, right after
their class is over or

00:20:09.490 --> 00:20:12.520
after the lecture is over,
to sit down, throw a quiz

00:20:12.520 --> 00:20:16.930
together, and distribute it in
just a matter of seconds.

00:20:16.930 --> 00:20:19.700
So at the bottom here, we're
selecting which of our classes

00:20:19.700 --> 00:20:21.000
we want to submit this to,
and we have a little

00:20:21.000 --> 00:20:22.540
Other box as well.

00:20:22.540 --> 00:20:26.150
And then once you hit Submit,
you get a little message

00:20:26.150 --> 00:20:28.970
saying that your quiz is being
created, and this is where the

00:20:28.970 --> 00:20:29.710
Apps Script picks up.

00:20:29.710 --> 00:20:31.960
So now, we're in the part of
our script that's actually

00:20:31.960 --> 00:20:33.480
reacting to a form submission.

00:20:33.480 --> 00:20:35.710
We detected the submission,
and we're reacting.

00:20:35.710 --> 00:20:37.850
And what our action is going
to be is a couple things.

00:20:37.850 --> 00:20:41.520
We're building a brand new form
on the fly based on that

00:20:41.520 --> 00:20:45.000
form's responses, and then we
are sending out that form to

00:20:45.000 --> 00:20:45.710
the teacher.

00:20:45.710 --> 00:20:48.180
Now, we're sending it to the
teacher first because the

00:20:48.180 --> 00:20:50.500
teacher needs to give us
the correct answers.

00:20:50.500 --> 00:20:52.880
And so once again, we're using
the form as a way to get that

00:20:52.880 --> 00:20:54.490
information.

00:20:54.490 --> 00:20:58.090
So here, Matt, as the teacher,
is going to go in and fill out

00:20:58.090 --> 00:21:00.102
the correct answers
for his quiz.

00:21:02.700 --> 00:21:04.780
So now this second form-- not
the original form-- this

00:21:04.780 --> 00:21:06.800
second form was just submitted,
but we also

00:21:06.800 --> 00:21:07.890
captured that event.

00:21:07.890 --> 00:21:10.510
So we have the ability to have
a single script react to the

00:21:10.510 --> 00:21:12.640
events of multiple
different forms.

00:21:12.640 --> 00:21:15.490
It's getting a little complex,
I know, but it's pretty cool.

00:21:15.490 --> 00:21:18.380
So now that that is done, we
should get an email here, and

00:21:18.380 --> 00:21:20.120
the second window on the
right is the student.

00:21:20.120 --> 00:21:24.150
So this is a separate account in
CS 101, which obviously is

00:21:24.150 --> 00:21:25.840
very concerned with
my shirt color.

00:21:25.840 --> 00:21:28.680
And now the student gets an
email saying, you've got a new

00:21:28.680 --> 00:21:29.920
quiz that you need to take.

00:21:29.920 --> 00:21:31.570
So they see the same form
again, but now they're

00:21:31.570 --> 00:21:33.950
choosing what their answers
are to the quiz.

00:21:33.950 --> 00:21:35.605
They're taking the quiz.

00:21:35.605 --> 00:21:37.750
MATTHEW ZIEGELBAUM: They're
not paying attention.

00:21:37.750 --> 00:21:40.530
ERIC KOLEDA: They're apparently
quite wrong.

00:21:40.530 --> 00:21:41.080
So that's great.

00:21:41.080 --> 00:21:43.260
So now we have the student
filling out the form, the

00:21:43.260 --> 00:21:44.550
teacher's got the
correct answers,

00:21:44.550 --> 00:21:45.610
everything's generated.

00:21:45.610 --> 00:21:47.890
But how do we then see how the
class is doing, what the

00:21:47.890 --> 00:21:49.440
responses are like thus far?

00:21:49.440 --> 00:21:51.700
So this is where we've then used
the Enhance the Designer

00:21:51.700 --> 00:21:53.960
integration that we talked about
before to add our own

00:21:53.960 --> 00:21:56.230
custom menu called
Quiz Results.

00:21:56.230 --> 00:21:58.940
And it just has one function,
Show Sidebar, which is going

00:21:58.940 --> 00:22:01.680
to pop up a sidebar that
shows the results of

00:22:01.680 --> 00:22:04.620
your quiz thus far.

00:22:04.620 --> 00:22:07.540
So this is a custom UI that
we've built using the HTML

00:22:07.540 --> 00:22:10.630
service, and you can see,
there is our I/O quiz.

00:22:10.630 --> 00:22:12.005
And in just a moment--

00:22:14.550 --> 00:22:19.090
OK, so these zeros obviously
don't render quite as well.

00:22:19.090 --> 00:22:24.570
But if we give it some correct
answers, there we go.

00:22:24.570 --> 00:22:25.980
Now we're getting some
percentages.

00:22:25.980 --> 00:22:29.060
So we're drawing little bars and
updating the values about

00:22:29.060 --> 00:22:34.846
what the percentage correct is
on these different quizzes.

00:22:34.846 --> 00:22:35.680
So it's pretty cool.

00:22:35.680 --> 00:22:37.765
So as a teacher, you
really quickly, in

00:22:37.765 --> 00:22:38.800
just a matter of moments--

00:22:38.800 --> 00:22:40.690
you just thought of the
quiz just after

00:22:40.690 --> 00:22:41.860
finishing your lecture--

00:22:41.860 --> 00:22:44.310
filled out the form, filled out
the correct answers, sent

00:22:44.310 --> 00:22:46.950
it to your students, and have
live feedback about how

00:22:46.950 --> 00:22:48.120
they're doing.

00:22:48.120 --> 00:22:50.570
Now, we are actually interested
in seeing this

00:22:50.570 --> 00:22:54.060
happen live for the whole room,
so we prepared ahead of

00:22:54.060 --> 00:22:55.070
time a quiz.

00:22:55.070 --> 00:22:55.380
MATTHEW ZIEGELBAUM: Yeah.

00:22:55.380 --> 00:22:56.940
So if you have a laptop
out or you have your

00:22:56.940 --> 00:23:00.220
phone, get it ready.

00:23:00.220 --> 00:23:03.310
We've made this quiz for you.

00:23:03.310 --> 00:23:04.720
It's very hard.

00:23:04.720 --> 00:23:07.010
You have to figure out if
someone is a Turing Award

00:23:07.010 --> 00:23:11.120
winner or if it's
IKEA furniture.

00:23:11.120 --> 00:23:14.490
We've made the link a
short link for you.

00:23:14.490 --> 00:23:15.170
It's large.

00:23:15.170 --> 00:23:31.010
If you can't read it,
it's goo.gl/tPSCH.

00:23:31.010 --> 00:23:33.300
ERIC KOLEDA: So as responses
start streaming in, we should

00:23:33.300 --> 00:23:34.550
see this start to update.

00:23:37.220 --> 00:23:39.040
Now, I know you actually took
this quiz multiple times.

00:23:39.040 --> 00:23:40.430
MATTHEW ZIEGELBAUM: I've taken
this quiz multiple times, but

00:23:40.430 --> 00:23:43.920
I still get things wrong
occasionally.

00:23:43.920 --> 00:23:45.170
ERIC KOLEDA: It is harder
than it looks.

00:23:51.790 --> 00:23:53.040
Getting those answers in.

00:23:57.810 --> 00:23:58.360
Are you guessing again?

00:23:58.360 --> 00:23:59.610
MATTHEW ZIEGELBAUM: I'm
guessing again.

00:24:02.620 --> 00:24:03.080
ERIC KOLEDA: Just a moment.

00:24:03.080 --> 00:24:04.330
We're going to use the
mics for questions.

00:24:08.350 --> 00:24:09.920
Not quite streaming
in there, huh?

00:24:09.920 --> 00:24:11.410
MATTHEW ZIEGELBAUM: Not quite.

00:24:11.410 --> 00:24:12.840
ERIC KOLEDA: Want to show the
sidebar again and see if we

00:24:12.840 --> 00:24:13.790
can load it up fresh?

00:24:13.790 --> 00:24:14.890
MATTHEW ZIEGELBAUM: Sure.

00:24:14.890 --> 00:24:16.150
ERIC KOLEDA: Close
that dialog, too.

00:24:16.150 --> 00:24:17.400
I think we're screwing it up.

00:24:28.680 --> 00:24:29.900
MATTHEW ZIEGELBAUM: The
perils of live demos.

00:24:29.900 --> 00:24:30.635
ERIC KOLEDA: Yeah.

00:24:30.635 --> 00:24:32.578
I mean, if the keynote can't do
it, what chance do we have?

00:24:38.210 --> 00:24:40.250
Well, we're going to keep this
up during the question and

00:24:40.250 --> 00:24:42.980
answer portion, so hopefully,
we can revisit back to what

00:24:42.980 --> 00:24:43.830
your answers are.

00:24:43.830 --> 00:24:47.110
But it is actually pretty cool
that we can collect all this

00:24:47.110 --> 00:24:49.590
information really quickly,
show it right into the

00:24:49.590 --> 00:24:52.250
designer, and kind of have just
one simple interface for

00:24:52.250 --> 00:24:54.740
a teacher to do these results.

00:24:54.740 --> 00:24:56.310
Here we go.

00:24:56.310 --> 00:24:57.453
MATTHEW ZIEGELBAUM: Still
nothing, though.

00:24:57.453 --> 00:24:58.360
ERIC KOLEDA: Wait, wait.

00:24:58.360 --> 00:24:59.030
There we go.

00:24:59.030 --> 00:24:59.770
MATTHEW ZIEGELBAUM:
And there we go.

00:24:59.770 --> 00:25:00.200
ERIC KOLEDA: 127.

00:25:00.200 --> 00:25:01.330
Wow, that was fast.

00:25:01.330 --> 00:25:01.655
MATTHEW ZIEGELBAUM: Yeah.

00:25:01.655 --> 00:25:02.841
You guys were fast.

00:25:02.841 --> 00:25:05.430
ERIC KOLEDA: Yeah.

00:25:05.430 --> 00:25:06.630
I think the correct answers--

00:25:06.630 --> 00:25:07.930
actually, I don't know if people
are still submitting,

00:25:07.930 --> 00:25:10.120
so I don't want to ruin it.

00:25:10.120 --> 00:25:11.310
We'll get to the correct answers
during the question

00:25:11.310 --> 00:25:13.080
and answer at the end.

00:25:13.080 --> 00:25:13.770
All right.

00:25:13.770 --> 00:25:14.630
Back to slides?

00:25:14.630 --> 00:25:17.140
MATTHEW ZIEGELBAUM: Yeah.

00:25:17.140 --> 00:25:17.910
ERIC KOLEDA: All right.

00:25:17.910 --> 00:25:20.720
So the takeaway from our
presentation, once again, is

00:25:20.720 --> 00:25:23.720
that Forms allows you to do
simple and scalable data

00:25:23.720 --> 00:25:26.720
collection, and then when you
combine that with Apps Script,

00:25:26.720 --> 00:25:29.780
our integrated, powerful
automation, you can really do

00:25:29.780 --> 00:25:33.100
some amazing things in a very
low tech way, in a way that's

00:25:33.100 --> 00:25:36.320
very friendly to everybody.

00:25:36.320 --> 00:25:39.030
MATTHEW ZIEGELBAUM: So I'm sure
you're all as excited

00:25:39.030 --> 00:25:41.890
about this as we are and you're
probably wondering how

00:25:41.890 --> 00:25:43.190
you can get started.

00:25:43.190 --> 00:25:46.550
So yesterday, we put up
a Forms Quickstart.

00:25:46.550 --> 00:25:48.540
It's an easy, five
minute tutorial.

00:25:48.540 --> 00:25:50.730
If you've ever done any of the
Apps Script Quickstarts, it

00:25:50.730 --> 00:25:52.430
should be pretty familiar.

00:25:52.430 --> 00:25:53.635
And you can get there by going
to developers/googl

00:25:53.635 --> 00:25:56.800
e.com/apps-script.

00:25:56.800 --> 00:25:58.420
It should be right at
the top of the page

00:25:58.420 --> 00:26:00.400
when you load it up.

00:26:00.400 --> 00:26:03.750
Second, as Eric mentioned
earlier, you already have Apps

00:26:03.750 --> 00:26:05.520
Script installed, so head to

00:26:05.520 --> 00:26:08.590
script.google.com and get going.

00:26:08.590 --> 00:26:10.660
Just try writing something.

00:26:10.660 --> 00:26:13.250
And finally, write
something cool.

00:26:13.250 --> 00:26:15.890
I'm sure some ideas
are bubbling.

00:26:15.890 --> 00:26:19.100
You've come up with something
maybe just watching us.

00:26:19.100 --> 00:26:21.300
And if you write something cool
and you come by the Apps

00:26:21.300 --> 00:26:24.380
Sandbox and show us, we'd like
to see it, and if we like it,

00:26:24.380 --> 00:26:26.000
you'll get a t-shirt.

00:26:26.000 --> 00:26:27.415
ERIC KOLEDA: These are some
really cool looking t-shirts,

00:26:27.415 --> 00:26:27.870
by the way.

00:26:27.870 --> 00:26:29.140
MATTHEW ZIEGELBAUM: Yeah.

00:26:29.140 --> 00:26:33.350
So thank you so much.

00:26:33.350 --> 00:26:35.820
And we're going to do some
question and answer.

00:26:35.820 --> 00:26:38.370
If you could try to come
up to the mics for the

00:26:38.370 --> 00:26:39.800
Q&amp;A, that'd be great.

00:26:42.692 --> 00:26:50.720
[APPLAUSE]

00:26:50.720 --> 00:26:51.580
AUDIENCE: So I had two.

00:26:51.580 --> 00:26:56.200
One, when you create a form
programatically, is every form

00:26:56.200 --> 00:26:59.340
persisted or do you have a way
to define whether it's

00:26:59.340 --> 00:27:03.560
temporary or just that once,
or does it live forever?

00:27:03.560 --> 00:27:05.050
MATTHEW ZIEGELBAUM: Every
form is persisted.

00:27:05.050 --> 00:27:08.110
It'll show up in your Drive.

00:27:08.110 --> 00:27:13.030
But you can use the Drive app
to delete forms that you no

00:27:13.030 --> 00:27:13.930
longer need.

00:27:13.930 --> 00:27:16.860
You can do it through
Drive itself.

00:27:16.860 --> 00:27:19.470
ERIC KOLEDA: Yeah, it is
possible to kind of script the

00:27:19.470 --> 00:27:22.520
finding of the forms you have as
well as the maintenance of

00:27:22.520 --> 00:27:23.510
them-- moving them
into folders,

00:27:23.510 --> 00:27:24.920
deleting them, et cetera.

00:27:24.920 --> 00:27:30.300
AUDIENCE: And how would you say
one should determine where

00:27:30.300 --> 00:27:31.930
the usage cutoff is here?

00:27:31.930 --> 00:27:35.650
A little five person business
as opposed to trying to use

00:27:35.650 --> 00:27:38.760
this on a massive scale?

00:27:38.760 --> 00:27:41.810
Where would we want
to cut that off?

00:27:41.810 --> 00:27:42.030
ERIC KOLEDA: Yeah.

00:27:42.030 --> 00:27:45.010
I mean, defining these
mini-workflows, I kind of made

00:27:45.010 --> 00:27:46.280
up the term myself.

00:27:46.280 --> 00:27:48.110
Figuring out where the
right technology

00:27:48.110 --> 00:27:49.170
is part of the challenge.

00:27:49.170 --> 00:27:51.060
There is a point in which a
custom application makes

00:27:51.060 --> 00:27:54.840
sense, but I think there is
a large middle ground.

00:27:54.840 --> 00:27:58.970
I've seen some very complex
form-related workflows, tiers

00:27:58.970 --> 00:28:01.350
and tiers of forms that all
interact with each other.

00:28:01.350 --> 00:28:05.010
And certainly, you have to weigh
the pros and cons, but I

00:28:05.010 --> 00:28:10.270
think that it's a pretty meaty
area to tackle with forms.

00:28:10.270 --> 00:28:11.330
Over here.

00:28:11.330 --> 00:28:16.330
AUDIENCE: You said you inserted
the script at the

00:28:16.330 --> 00:28:19.700
Form level, but you can insert
it in any of the other ways

00:28:19.700 --> 00:28:21.090
where we can create scripts.

00:28:21.090 --> 00:28:23.710
So I could have it in a web
app, I could have it in a

00:28:23.710 --> 00:28:26.320
spreadsheet, or is it
only limited there?

00:28:26.320 --> 00:28:29.150
And if it's not limited there,
where do you trap the

00:28:29.150 --> 00:28:32.570
onFormSubmit event
in that case?

00:28:32.570 --> 00:28:34.870
MATTHEW ZIEGELBAUM: So
regardless of where the script

00:28:34.870 --> 00:28:37.740
lives, whether it's attached to
a form or not, you can use

00:28:37.740 --> 00:28:40.700
the ScriptApps trigger builders
to listen to forms.

00:28:40.700 --> 00:28:44.070
So you can have one script
listening to many forms

00:28:44.070 --> 00:28:45.680
response events.

00:28:45.680 --> 00:28:47.750
ERIC KOLEDA: So you could use--
and I think we have some

00:28:47.750 --> 00:28:51.390
demos we've done in the past of
a spreadsheet bound script

00:28:51.390 --> 00:28:53.660
creating forms, or a
web app deployed

00:28:53.660 --> 00:28:54.800
script creating forms.

00:28:54.800 --> 00:28:56.460
It's really not tied.

00:28:56.460 --> 00:28:59.070
But when you are tied to a form,
it makes it a lot easier

00:28:59.070 --> 00:29:00.320
to access that form.

00:29:00.320 --> 00:29:02.420
We have a function,
getActiveForm, which just

00:29:02.420 --> 00:29:04.040
automatically finds and
accesses the form it's

00:29:04.040 --> 00:29:05.520
attached to.

00:29:05.520 --> 00:29:07.460
Over on this side?

00:29:07.460 --> 00:29:08.600
AUDIENCE: Thanks.

00:29:08.600 --> 00:29:11.230
So one of the things that you
guys had on your dinner form

00:29:11.230 --> 00:29:16.440
was putting in your information,
and that's

00:29:16.440 --> 00:29:19.590
actually a common thing that
I see all the time as well.

00:29:19.590 --> 00:29:21.900
OK, what's your name,
your email address.

00:29:21.900 --> 00:29:24.840
Is there any direction, or
maybe there is already a

00:29:24.840 --> 00:29:28.760
feature, to just sign in,
whether you have Google+ or

00:29:28.760 --> 00:29:33.470
something, and just say, OK,
this form, you have to sign in

00:29:33.470 --> 00:29:36.370
to use it and then take
it from there?

00:29:36.370 --> 00:29:39.250
MATTHEW ZIEGELBAUM: Right now,
if you are a Google Apps for

00:29:39.250 --> 00:29:44.310
your domain user or Apps for
Education user, you can

00:29:44.310 --> 00:29:49.630
enforce requiring sign in and
also collecting emails.

00:29:49.630 --> 00:29:52.680
If you're on a regular Gmail
account, you can't do that

00:29:52.680 --> 00:29:54.825
right now, but it is something
that we've heard from our

00:29:54.825 --> 00:29:57.350
users and we're going
to be looking into.

00:29:57.350 --> 00:29:59.510
AUDIENCE: Thank you.

00:29:59.510 --> 00:30:00.500
AUDIENCE: Thank you.

00:30:00.500 --> 00:30:02.000
I had a couple questions.

00:30:02.000 --> 00:30:03.220
The email validation--

00:30:03.220 --> 00:30:05.900
because I was creating a form
and then I realized it's an

00:30:05.900 --> 00:30:07.060
email address.

00:30:07.060 --> 00:30:11.290
Is that built into Google Forms
and can I use this to

00:30:11.290 --> 00:30:14.340
force it to look like
an email address?

00:30:14.340 --> 00:30:17.040
MATTHEW ZIEGELBAUM: That's
another big request from our

00:30:17.040 --> 00:30:21.370
users, and with the new version
of Forms that launched

00:30:21.370 --> 00:30:23.320
this past February, we're
looking to add a lot more

00:30:23.320 --> 00:30:27.250
features coming up, and so
it's something we're

00:30:27.250 --> 00:30:28.150
definitely looking at.

00:30:28.150 --> 00:30:30.190
AUDIENCE: Can I do it with
Apps Script with the

00:30:30.190 --> 00:30:31.362
integration?

00:30:31.362 --> 00:30:32.832
Can I get to that level?

00:30:32.832 --> 00:30:34.800
ERIC KOLEDA: One point to
clarify with how Apps Script

00:30:34.800 --> 00:30:38.200
and Forms interact is that you
have access to a couple

00:30:38.200 --> 00:30:41.380
different events you can tie
into when the Form Designer is

00:30:41.380 --> 00:30:44.830
opened, when the Form Designer
and Edit takes place, and when

00:30:44.830 --> 00:30:47.660
someone finishes the last page
of a form, when they hit the

00:30:47.660 --> 00:30:48.770
final Submit.

00:30:48.770 --> 00:30:51.070
But you cannot currently
use Apps Script in the

00:30:51.070 --> 00:30:53.660
intermediary processes of
filling out a form-- so when

00:30:53.660 --> 00:30:55.600
someone fills out a field
doing a validation

00:30:55.600 --> 00:30:58.300
immediately, or when someone
goes from one page to another,

00:30:58.300 --> 00:30:59.390
you don't have that
kind of a tie-in.

00:30:59.390 --> 00:31:01.980
So it is possible to build a
script that, when a form a

00:31:01.980 --> 00:31:05.210
submitted, you scan the data,
look for errors, and then send

00:31:05.210 --> 00:31:07.460
them a notification, but you
cannot do that while they're

00:31:07.460 --> 00:31:09.110
still in the form filling
out experience.

00:31:09.110 --> 00:31:10.290
AUDIENCE: But there's
a plan to add?

00:31:10.290 --> 00:31:13.230
Because there's a whole bunch
of validate cases that are

00:31:13.230 --> 00:31:16.590
missing in Google Forms,
like email?

00:31:16.590 --> 00:31:20.000
And another question
is, is there

00:31:20.000 --> 00:31:22.320
integration with Google Wallet?

00:31:22.320 --> 00:31:24.280
You talked about event
registration.

00:31:24.280 --> 00:31:26.640
You could actually use this,
integrate it with Google

00:31:26.640 --> 00:31:30.150
Wallet, have them fill out their
name and then pay, too.

00:31:30.150 --> 00:31:31.823
Is that possible today?

00:31:31.823 --> 00:31:32.550
ERIC KOLEDA: It's interesting.

00:31:32.550 --> 00:31:33.540
Not today, I don't think.

00:31:33.540 --> 00:31:35.290
MATTHEW ZIEGELBAUM: Not today.

00:31:35.290 --> 00:31:36.955
AUDIENCE: And another
question is mobile.

00:31:43.420 --> 00:31:46.560
Let's say there's
20 questions.

00:31:46.560 --> 00:31:52.330
On mobile, there's already
a mobile version, right?

00:31:52.330 --> 00:31:52.460
MATTHEW ZIEGELBAUM: Yeah.

00:31:52.460 --> 00:31:55.230
So we already have a mobile
version of the

00:31:55.230 --> 00:31:56.350
Form Response page.

00:31:56.350 --> 00:31:59.680
It uses mobile friendly
CSS and HTML.

00:31:59.680 --> 00:32:03.372
And things like our new Date
Picker are using the HTML5

00:32:03.372 --> 00:32:06.410
Date Picker, so it works
really well on iPhones,

00:32:06.410 --> 00:32:10.270
Android devices, using the
Native OS level pickers.

00:32:10.270 --> 00:32:11.020
AUDIENCE: That's really good.

00:32:11.020 --> 00:32:11.820
Thank you.

00:32:11.820 --> 00:32:14.010
ERIC KOLEDA: Yes, over here?

00:32:14.010 --> 00:32:15.920
AUDIENCE: So I'm interested in
building an offline mobile

00:32:15.920 --> 00:32:17.140
client that talks to Forms.

00:32:17.140 --> 00:32:19.990
I'm wondering if this allows
me to do that through some

00:32:19.990 --> 00:32:23.220
sort of more reasonable API,
or is Forms going to get an

00:32:23.220 --> 00:32:24.780
API at some point
in the future?

00:32:24.780 --> 00:32:28.130
MATTHEW ZIEGELBAUM: So we do
have an API in Apps Script for

00:32:28.130 --> 00:32:31.340
constructing responses
and submitting them.

00:32:31.340 --> 00:32:34.490
So it's a pretty good API.

00:32:34.490 --> 00:32:37.170
It doesn't require you to do
what-- in the past, you'd have

00:32:37.170 --> 00:32:39.510
to construct your own
Post Request and

00:32:39.510 --> 00:32:40.890
send it to our server.

00:32:40.890 --> 00:32:47.450
Now, you can construct a first
level, good, rich response and

00:32:47.450 --> 00:32:48.320
submit it that way.

00:32:48.320 --> 00:32:50.420
AUDIENCE: But does the API allow
me to pull down what the

00:32:50.420 --> 00:32:51.760
form spec actually is?

00:32:51.760 --> 00:32:54.500
So can I load that form in an
offline client, fill it out,

00:32:54.500 --> 00:32:56.080
and then send it?

00:32:56.080 --> 00:32:59.830
Because right now, presumably,
I can just send a response,

00:32:59.830 --> 00:33:03.150
but if I don't know what that
form is, how do I do that?

00:33:03.150 --> 00:33:06.180
ERIC KOLEDA: If you're using
Apps Script at least, you can

00:33:06.180 --> 00:33:08.845
definitely read the structure
of the form, figure out what

00:33:08.845 --> 00:33:11.210
all the fields are, figure out
what all the options are, and

00:33:11.210 --> 00:33:14.760
then also very easily construct
a new response that

00:33:14.760 --> 00:33:16.180
you can then submit
to that form.

00:33:16.180 --> 00:33:17.310
So there's some capabilities
there.

00:33:17.310 --> 00:33:19.410
I don't know if it'll fit your
exact use case, but it's worth

00:33:19.410 --> 00:33:20.120
looking into.

00:33:20.120 --> 00:33:21.130
AUDIENCE: Thanks.

00:33:21.130 --> 00:33:21.940
ERIC KOLEDA: Over here?

00:33:21.940 --> 00:33:25.450
AUDIENCE: Kind of an aside to
scripts itself, with form

00:33:25.450 --> 00:33:27.910
submittal, is there going to
be any future plans to

00:33:27.910 --> 00:33:31.060
restrict submittal to circles,
groups, and OUs?

00:33:31.060 --> 00:33:32.210
Is that something
that we might be

00:33:32.210 --> 00:33:34.630
looking at in the future?

00:33:34.630 --> 00:33:36.500
Instead of just a global,
you're either inside the

00:33:36.500 --> 00:33:38.570
organization or you're outside
the organization, I'm just

00:33:38.570 --> 00:33:40.800
thinking specifically for
education, where you could

00:33:40.800 --> 00:33:43.250
restrict to a student
OU or a staff OU for

00:33:43.250 --> 00:33:45.530
those kind of things.

00:33:45.530 --> 00:33:46.510
MATTHEW ZIEGELBAUM: That's
interesting.

00:33:46.510 --> 00:33:50.020
Right now, we do only support
the organizational level

00:33:50.020 --> 00:33:52.100
restriction, but it's
definitely something

00:33:52.100 --> 00:33:54.015
interesting to look
at going forward.

00:33:54.015 --> 00:33:54.860
AUDIENCE: Thanks.

00:33:54.860 --> 00:33:56.470
MATTHEW ZIEGELBAUM: And once
again, using Apps Script, it's

00:33:56.470 --> 00:34:00.340
not as ideal, but for instance,
if you required the

00:34:00.340 --> 00:34:02.880
email address of your user,
you could then, after they

00:34:02.880 --> 00:34:05.100
submit the form, determine
whether or not they are in a

00:34:05.100 --> 00:34:07.550
certain group, determine if they
are in a certain circle.

00:34:07.550 --> 00:34:09.760
So you have to do it after the
submission, but you could

00:34:09.760 --> 00:34:12.603
then, perhaps, invalidate that
response or send them some

00:34:12.603 --> 00:34:13.430
sort of feedback.

00:34:13.430 --> 00:34:15.580
Just going to go to the
microphone over here.

00:34:15.580 --> 00:34:17.770
AUDIENCE: So I know you're
focused on mini-workflows, but

00:34:17.770 --> 00:34:21.650
sometimes forms can be pretty
lengthy and become medium

00:34:21.650 --> 00:34:25.280
workflows and there's some value
in users being able to

00:34:25.280 --> 00:34:26.150
save and come back.

00:34:26.150 --> 00:34:29.130
Do you have any best practice
or suggestion or any way at

00:34:29.130 --> 00:34:31.880
all to support a user to save
and come back, even if it

00:34:31.880 --> 00:34:34.246
required them authenticating?

00:34:34.246 --> 00:34:36.590
MATTHEW ZIEGELBAUM: So I've
actually, in playing with the

00:34:36.590 --> 00:34:41.800
API, written something that can
do this using the UI App

00:34:41.800 --> 00:34:46.770
or HTML service to build my own
version of the form with a

00:34:46.770 --> 00:34:49.620
little key that I made up
that allows the user to

00:34:49.620 --> 00:34:50.909
come back with it.

00:34:50.909 --> 00:34:53.679
But we don't have anything
that's first party as part of

00:34:53.679 --> 00:34:55.110
Apps Script and Forms itself.

00:34:55.110 --> 00:34:57.000
AUDIENCE: And you couldn't do
that with the regular Forms

00:34:57.000 --> 00:34:59.420
because you don't get to run
your JavaScript while the form

00:34:59.420 --> 00:35:00.200
is being filled out.

00:35:00.200 --> 00:35:01.360
MATTHEW ZIEGELBAUM: Correct.

00:35:01.360 --> 00:35:02.470
AUDIENCE: So no good
way right now.

00:35:02.470 --> 00:35:03.170
All right, thanks.

00:35:03.170 --> 00:35:05.010
ERIC KOLEDA: Yeah, no problem.

00:35:05.010 --> 00:35:06.390
Over here?

00:35:06.390 --> 00:35:08.880
AUDIENCE: So I'm going to speak
more from a start-up

00:35:08.880 --> 00:35:10.400
standpoint.

00:35:10.400 --> 00:35:12.850
You already mentioned about
the education part.

00:35:12.850 --> 00:35:16.440
So assistants or professors
needs students to fill forms,

00:35:16.440 --> 00:35:19.180
so let's say they don't have any
technical skills to create

00:35:19.180 --> 00:35:23.330
those forms and you create a UI
where they can create their

00:35:23.330 --> 00:35:25.450
own UI quizzes, et cetera.

00:35:25.450 --> 00:35:31.210
So my question is going to be,
is the API that good to create

00:35:31.210 --> 00:35:34.240
such elements on the fly,
meaning they will pick the

00:35:34.240 --> 00:35:38.420
questions, fill the forms they
want, radio buttons or select

00:35:38.420 --> 00:35:40.550
boxes, et cetera, that will be
able to will talk to the API

00:35:40.550 --> 00:35:42.500
and create those elements
for them?

00:35:42.500 --> 00:35:47.320
And then the emails that they
will receive the response to.

00:35:47.320 --> 00:35:51.020
Can this be also set separately
from my account?

00:35:51.020 --> 00:35:53.110
Let's say I have a Google
account but they don't, they

00:35:53.110 --> 00:35:54.760
will provide their email
addresses and they want to

00:35:54.760 --> 00:35:56.330
collect their responses
through that email.

00:35:56.330 --> 00:35:56.740
ERIC KOLEDA: Yeah.

00:35:56.740 --> 00:35:58.740
I'd say it sounds like we're
flexible enough to

00:35:58.740 --> 00:35:59.340
handle all of that.

00:35:59.340 --> 00:36:01.950
I mean, the key takeaway, I
think, for what the FormApp

00:36:01.950 --> 00:36:05.920
can do is currently everything
that you can do in the UI.

00:36:05.920 --> 00:36:09.125
So if there's check boxes in
the Designer, there's check

00:36:09.125 --> 00:36:10.720
boxes in Apps Script.

00:36:10.720 --> 00:36:12.370
AUDIENCE: But can this be
created by the API?

00:36:12.370 --> 00:36:13.510
That's my question.

00:36:13.510 --> 00:36:16.170
They want to create something
and as a developer, I'm just

00:36:16.170 --> 00:36:17.380
providing the service.

00:36:17.380 --> 00:36:21.450
They will pick the elements,
place it on the UI.

00:36:21.450 --> 00:36:25.930
Then I will take this UI,
programmatically, I'm going to

00:36:25.930 --> 00:36:28.820
create on the fly through
the API, and--

00:36:28.820 --> 00:36:31.330
ERIC KOLEDA: I think what we
showed today in our demo was

00:36:31.330 --> 00:36:34.740
using a form as that custom UI,
but you could build your

00:36:34.740 --> 00:36:38.270
own separate UI that's, let's
say, tailored to that specific

00:36:38.270 --> 00:36:40.850
kind of problem you're solving
where they just enter a lot

00:36:40.850 --> 00:36:43.520
less information and then you
take that information from

00:36:43.520 --> 00:36:45.830
your custom UI and use
it to create a form.

00:36:45.830 --> 00:36:48.140
So I think that definitely, all
the tools and the pieces

00:36:48.140 --> 00:36:49.490
are there to allow
you to do that.

00:36:49.490 --> 00:36:50.090
AUDIENCE: Thanks.

00:36:50.090 --> 00:36:51.990
ERIC KOLEDA: Yeah?

00:36:51.990 --> 00:36:54.550
AUDIENCE: You've been mentioning
the HTML service,

00:36:54.550 --> 00:36:58.210
and I'm not familiar with that
at all before today, and

00:36:58.210 --> 00:37:00.020
someone else just mentioned
JavaScript.

00:37:00.020 --> 00:37:03.290
Can you use that HTML service
to inject any client side to

00:37:03.290 --> 00:37:06.170
do validation of your own things
like that, right there

00:37:06.170 --> 00:37:08.180
in the browser?

00:37:08.180 --> 00:37:09.520
ERIC KOLEDA: I know we were
talking a little bit about

00:37:09.520 --> 00:37:10.170
this problem.

00:37:10.170 --> 00:37:11.890
It's definitely something a lot
of people want, is to do

00:37:11.890 --> 00:37:14.760
that validation during
the fill out flow.

00:37:14.760 --> 00:37:16.570
And so I think we're going
to think more about it.

00:37:16.570 --> 00:37:21.050
But currently today, the only
time we can inject is after

00:37:21.050 --> 00:37:21.850
the form's submitted.

00:37:21.850 --> 00:37:22.960
So it is a little limiting.

00:37:22.960 --> 00:37:27.490
You can't today use the HTML
service or use the JavaScript

00:37:27.490 --> 00:37:30.170
capabilities within the
form filling out flow.

00:37:30.170 --> 00:37:31.770
I think some of the right
technologies are there.

00:37:31.770 --> 00:37:33.040
We've just got to see if
they all fit together.

00:37:35.670 --> 00:37:38.310
AUDIENCE: I work for a school
and we have a lot of external

00:37:38.310 --> 00:37:40.610
systems, and one of the biggest
questions I'm going to

00:37:40.610 --> 00:37:43.480
have is, what kind of
third party system

00:37:43.480 --> 00:37:44.310
can integrate with?

00:37:44.310 --> 00:37:45.770
Does it need a certain API?

00:37:45.770 --> 00:37:47.140
Does it need to be RESTful?

00:37:47.140 --> 00:37:49.690
What are the limitations
there?

00:37:49.690 --> 00:37:51.570
ERIC KOLEDA: So the different
connectors that we use and

00:37:51.570 --> 00:37:54.810
that are popular, the biggest
one is URL Fetch App.

00:37:54.810 --> 00:37:57.690
This allows you to make any sort
of Get Post request, you

00:37:57.690 --> 00:37:59.010
can pass your own
custom headers.

00:37:59.010 --> 00:38:02.710
You can therefore interact
with any HTTP-based

00:38:02.710 --> 00:38:04.850
API, any REST API.

00:38:04.850 --> 00:38:06.890
So it's the sky's
the limit there.

00:38:06.890 --> 00:38:10.550
You have to actually do the HTTP
requests, so you have to

00:38:10.550 --> 00:38:13.610
have some understanding of that,
but that opens it up to

00:38:13.610 --> 00:38:16.240
a really large number of APIs.

00:38:16.240 --> 00:38:19.650
We do have support for OAuth 1
currently, and we have some

00:38:19.650 --> 00:38:23.140
sample code showing how you can
use OAuth 2 based APIs.

00:38:23.140 --> 00:38:27.040
And then we also provide
connectors for SQL, so we have

00:38:27.040 --> 00:38:29.200
a JDBC connector that
allows you to

00:38:29.200 --> 00:38:30.680
connect to SQL databases.

00:38:30.680 --> 00:38:32.620
And then we also have
a SOAP connector.

00:38:32.620 --> 00:38:35.640
If you have a really old, legacy
SOAP service, you're

00:38:35.640 --> 00:38:37.530
probably unhappy that you still
have that service, but

00:38:37.530 --> 00:38:40.030
you can connect to it
via Apps Script.

00:38:40.030 --> 00:38:41.052
AUDIENCE: Is there any
plan for maybe

00:38:41.052 --> 00:38:43.240
an Oracle JDBC connector?

00:38:43.240 --> 00:38:43.520
ERIC KOLEDA: Yes.

00:38:43.520 --> 00:38:45.880
So I think the JDBC we have
today, if I remember

00:38:45.880 --> 00:38:49.660
correctly, is Oracle, MySQL, MS
SQL, so you should be good.

00:38:53.040 --> 00:38:55.410
AUDIENCE: Not if you can send
somebody a document which

00:38:55.410 --> 00:38:56.690
executes scripts.

00:38:56.690 --> 00:38:59.860
Doesn't that open
a security risk?

00:38:59.860 --> 00:39:01.110
ERIC KOLEDA: Security risk.

00:39:03.570 --> 00:39:05.700
MATTHEW ZIEGELBAUM: No,
I don't think so.

00:39:05.700 --> 00:39:08.120
ERIC KOLEDA: Especially within
an organization if you check

00:39:08.120 --> 00:39:10.310
the check box that says, only
people within my organization

00:39:10.310 --> 00:39:12.520
can fill it out, that definitely
limits the scope

00:39:12.520 --> 00:39:13.440
down a lot.

00:39:13.440 --> 00:39:15.410
But the other thing I guess is
being wary that if you have a

00:39:15.410 --> 00:39:17.950
public form and you have a
script that's reacting to it,

00:39:17.950 --> 00:39:19.790
that you understand
what you're doing.

00:39:19.790 --> 00:39:21.710
I guess one of the key points
about the triggers that we

00:39:21.710 --> 00:39:25.460
didn't go into too much detail
on is that when Matt creates a

00:39:25.460 --> 00:39:28.360
trigger on his form,
the trigger always

00:39:28.360 --> 00:39:30.250
runs as Matt's identity.

00:39:30.250 --> 00:39:32.710
So you're never taking the
identity of the person filling

00:39:32.710 --> 00:39:33.160
out the form.

00:39:33.160 --> 00:39:34.240
You don't have access to that.

00:39:34.240 --> 00:39:34.990
That is separate.

00:39:34.990 --> 00:39:37.100
So anyone in the world could
fill out your form with or

00:39:37.100 --> 00:39:38.250
without a Google account.

00:39:38.250 --> 00:39:40.330
Their information is
separate and safe.

00:39:40.330 --> 00:39:42.360
The trigger, when it runs,
it runs as Matt.

00:39:42.360 --> 00:39:44.380
It has access to Matt's
Calendar, Matt's

00:39:44.380 --> 00:39:45.750
Drive, Matt's Docs.

00:39:49.360 --> 00:39:50.710
AUDIENCE: Hi.

00:39:50.710 --> 00:39:51.840
Just one question, also

00:39:51.840 --> 00:39:54.140
complements one of your answers.

00:39:54.140 --> 00:39:56.860
One question is, do think that
you're going to have a field

00:39:56.860 --> 00:39:59.650
sooner or later which allows you
to link to a Google Doc or

00:39:59.650 --> 00:40:03.050
upload a file of some sort and
store it in a Drive folder or

00:40:03.050 --> 00:40:03.950
something like that?

00:40:03.950 --> 00:40:04.440
ERIC KOLEDA: Gotcha.

00:40:04.440 --> 00:40:05.380
Upload.

00:40:05.380 --> 00:40:05.930
MATTHEW ZIEGELBAUM: Upload?

00:40:05.930 --> 00:40:07.190
ERIC KOLEDA: Yeah.

00:40:07.190 --> 00:40:08.430
MATTHEW ZIEGELBAUM: That would
definitely be cool.

00:40:08.430 --> 00:40:10.520
People have asked for it in the
past, so it's definitely

00:40:10.520 --> 00:40:13.630
something we've considered.

00:40:13.630 --> 00:40:14.820
But right now, we don't--

00:40:14.820 --> 00:40:15.120
AUDIENCE: Not.

00:40:15.120 --> 00:40:16.890
MATTHEW ZIEGELBAUM: It's
not launched right now.

00:40:16.890 --> 00:40:19.550
AUDIENCE: And also, just to
comment on one of your answers

00:40:19.550 --> 00:40:24.500
before about to figure out how
to scale this, at what point

00:40:24.500 --> 00:40:27.580
is it OK for a small
organization or go huge scale?

00:40:27.580 --> 00:40:31.120
The limitation there is on
the processing time.

00:40:31.120 --> 00:40:33.050
You have limitations
on Apps Script.

00:40:33.050 --> 00:40:34.390
I can't remember the
exact numbers.

00:40:34.390 --> 00:40:36.440
I think it's 60 minutes or
something a day or something,

00:40:36.440 --> 00:40:39.610
and after that, you need to
scale up to App Engine or

00:40:39.610 --> 00:40:40.700
something like that.

00:40:40.700 --> 00:40:41.380
ERIC KOLEDA: Yeah.

00:40:41.380 --> 00:40:43.310
So Apps Script does have
some limitations.

00:40:43.310 --> 00:40:45.500
I think what you're referring
to is they've got a five or

00:40:45.500 --> 00:40:49.220
six minute processing time
on a script reaction.

00:40:49.220 --> 00:40:51.860
So if you're doing more than
five or six minutes worth of

00:40:51.860 --> 00:40:54.430
work, you either have to try to
batch it up in some sort of

00:40:54.430 --> 00:40:56.350
away or maybe turn to
another solution.

00:40:59.820 --> 00:41:01.880
And I think it's true with all
technologies, there's a time

00:41:01.880 --> 00:41:02.900
when you eventually
grow out of it.

00:41:02.900 --> 00:41:05.190
So I tried to show the
progression from email to

00:41:05.190 --> 00:41:07.350
spreadsheet to something else.

00:41:07.350 --> 00:41:09.782
I think people, the natural--
and I think probably correct

00:41:09.782 --> 00:41:11.510
tendency-- is to do the simplest
thing that solves

00:41:11.510 --> 00:41:14.390
your problem today, and then
when you grow out of it,

00:41:14.390 --> 00:41:15.630
migrate to another solution.

00:41:15.630 --> 00:41:17.210
I don't think there's any
solution I've ever seen, a

00:41:17.210 --> 00:41:19.890
technology, where it works just
as well for the simplest

00:41:19.890 --> 00:41:21.810
case as it does for
the best case.

00:41:21.810 --> 00:41:24.800
There's always going to be the
need to revise it, revamp it,

00:41:24.800 --> 00:41:28.200
and restructure it as the
problem space grows.

00:41:28.200 --> 00:41:30.650
And so I think with Forms and
Apps Script, you are going to

00:41:30.650 --> 00:41:33.640
find that maybe someday, if it
blows up and it's the most

00:41:33.640 --> 00:41:36.510
popular form we've ever seen,
that you may need to change

00:41:36.510 --> 00:41:38.140
some things that you're doing.

00:41:38.140 --> 00:41:40.620
But I'd say when you think about
the problems that you

00:41:40.620 --> 00:41:43.822
have, you'll start to see ones
that make sense with Forms and

00:41:43.822 --> 00:41:45.072
Apps Script.

00:41:47.020 --> 00:41:49.310
AUDIENCE: I've got a slightly
more general question about

00:41:49.310 --> 00:41:50.830
Apps Script.

00:41:50.830 --> 00:41:54.770
One of the benefits that's often
touted is that you don't

00:41:54.770 --> 00:41:59.880
need an IDE to use it, but I'm
quite attached to my IDE.

00:41:59.880 --> 00:42:03.540
Is there any way to upload or
download Apps Scripts outside

00:42:03.540 --> 00:42:05.930
of just copy and paste
in the browser?

00:42:05.930 --> 00:42:06.110
ERIC KOLEDA: Yeah.

00:42:06.110 --> 00:42:07.980
That's a very popular request
we've gotten.

00:42:07.980 --> 00:42:09.720
People have definitely
been asking for that.

00:42:09.720 --> 00:42:12.460
We've gotten some of the bits
in place right now.

00:42:12.460 --> 00:42:15.360
It's not fully baked, but
hopefully in the coming weeks

00:42:15.360 --> 00:42:16.730
and months, we'll have
some more good news

00:42:16.730 --> 00:42:17.546
about that for you.

00:42:17.546 --> 00:42:18.460
AUDIENCE: Thank you.

00:42:18.460 --> 00:42:19.600
ERIC KOLEDA: I'm sorry, last
question in yellow because

00:42:19.600 --> 00:42:22.650
we're out of time.

00:42:22.650 --> 00:42:23.280
AUDIENCE: [INAUDIBLE]

00:42:23.280 --> 00:42:26.560
someone else's question, with
Apps Script in general, could

00:42:26.560 --> 00:42:30.500
you fire off some sort of a
set of codes that, say,

00:42:30.500 --> 00:42:33.290
creates a Google Drive folder
and emails somebody a link to

00:42:33.290 --> 00:42:35.510
that to provide an upload
process kind of

00:42:35.510 --> 00:42:36.430
indirectly that way?

00:42:36.430 --> 00:42:36.895
ERIC KOLEDA: Yeah.

00:42:36.895 --> 00:42:37.360
MATTHEW ZIEGELBAUM: Yeah.

00:42:37.360 --> 00:42:38.400
ERIC KOLEDA: Yeah, definitely.

00:42:38.400 --> 00:42:40.350
Actually, talking about upload,
it's not going to be

00:42:40.350 --> 00:42:41.950
in the form, so there's not
going to be a little Browse

00:42:41.950 --> 00:42:44.760
button just yet, but because we
have all of these different

00:42:44.760 --> 00:42:48.440
connectors into sending emails,
into getting URLs,

00:42:48.440 --> 00:42:51.570
into creating shared folders,
I think there is some

00:42:51.570 --> 00:42:55.440
capabilities to solve it in
more of a roundabout way.

00:42:55.440 --> 00:42:56.960
Well, thank you everybody
for coming today.

00:42:56.960 --> 00:42:58.000
We had a great time.

00:42:58.000 --> 00:43:00.590
Once again, please come by the
Chrome and Apps booth, say

00:43:00.590 --> 00:43:02.580
hello to us, show
us your script,

00:43:02.580 --> 00:43:03.330
get an awesome t-shirt.

00:43:03.330 --> 00:43:03.930
Thanks again.

00:43:03.930 --> 00:43:11.370
[APPLAUSE]

