WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:06.220
So we have this hardware continuum from cell phones and PDAs to laptops,

00:00:06.220 --> 00:00:12.460
to tablet's, to desktop computers, all the way to nodes in

00:00:12.460 --> 00:00:18.320
a data center that is providing cloud computing services. Regardless of these

00:00:18.320 --> 00:00:23.160
different manifestations and sizes, the organization

00:00:23.160 --> 00:00:25.380
of the hardware inside the computer

00:00:25.380 --> 00:00:32.650
system is pretty much the same. You've got a CPU. And the CPU is connected to

00:00:32.650 --> 00:00:35.160
a conduit, which we call the bus. And

00:00:35.160 --> 00:00:38.080
you've got memory that has the instructions and

00:00:38.080 --> 00:00:43.760
data that is needed for the CPU to execute. And the CPU can use it's conduit,

00:00:43.760 --> 00:00:46.900
namely the bus, to access the memory. And

00:00:46.900 --> 00:00:52.030
you need storage for persistance of files and

00:00:52.030 --> 00:00:58.750
other data that your produce during the computation. And, once again the CPU can

00:00:58.750 --> 00:01:02.450
access stuff on the student's device through

00:01:02.450 --> 00:01:04.489
a controller that is also connected to

00:01:04.489 --> 00:01:10.930
this conduit. And you may have other peripheral devices, like a microphone and a

00:01:10.930 --> 00:01:14.490
camera. All of these devices, of course,

00:01:14.490 --> 00:01:17.490
are accessible for the CPU through this conduit,

00:01:17.490 --> 00:01:22.420
which is the bus. And of course in this day, and age a device has to be

00:01:22.420 --> 00:01:27.220
able to communicate with the outside world. You have a network, and once again

00:01:27.220 --> 00:01:32.300
the network is interfaced through a controller to the CPU via

00:01:32.300 --> 00:01:37.880
this conduit. So this conduit for communication Which is the BUS,

00:01:37.880 --> 00:01:42.700
serves the purpose of connecting the CPU to the

00:01:42.700 --> 00:01:46.520
memory as well as all the iode devices that

00:01:46.520 --> 00:01:48.780
it may need to interact with in order to

00:01:48.780 --> 00:01:52.330
do whatever the intent is of the user and

00:01:52.330 --> 00:01:54.010
the application that they want to run on the

00:01:54.010 --> 00:01:57.908
computer. And depending on the sophistication of the device

00:01:57.908 --> 00:02:00.668
that we're talking about, and the speed of the

00:02:00.668 --> 00:02:04.580
device that we're talking about. These controllers that I'm

00:02:04.580 --> 00:02:08.169
showing you may have different capabilities. So for instance a

00:02:08.169 --> 00:02:11.200
network controller may have the ability to

00:02:11.200 --> 00:02:14.510
move the data directly from the memory into

00:02:14.510 --> 00:02:16.480
the network, or from the network into the

00:02:16.480 --> 00:02:20.000
memory and this As you may have learned

00:02:20.000 --> 00:02:22.700
in a computer organization course, is called direct

00:02:22.700 --> 00:02:25.120
memory access for the controller to move data

00:02:25.120 --> 00:02:29.700
swiftly between memory and the IO device. And

00:02:29.700 --> 00:02:33.930
similar DMA facility may exist in the controllers

00:02:33.930 --> 00:02:36.690
of other high speed devices, this is the high

00:02:36.690 --> 00:02:40.560
speed device. So that's the capability that you got

00:02:40.560 --> 00:02:42.580
for some of these controllers. Some of these controllers

00:02:42.580 --> 00:02:45.680
may be slow enough, for instance a keyboard or

00:02:45.680 --> 00:02:49.040
a mouse, that the CPU can directly query new

00:02:49.040 --> 00:02:51.590
data that is coming from the controller that is

00:02:51.590 --> 00:02:55.470
associated with slow speed devices, and move it into

00:02:55.470 --> 00:02:58.160
memory or use it in any fashion that it wants.

