WEBVTT
Kind: captions
Language: en

00:00:05.990 --> 00:00:10.750
&gt;&gt; MANGTANI: Okay. Before we get started--there's
going to be a few more people, they'll keep

00:00:10.750 --> 00:00:16.379
coming, that's fine. So a quick introduction,
my name is Nitin Mangtani. I manage the enterprise

00:00:16.379 --> 00:00:21.770
social team at Google. In today's talk we
were going to focus explicitly on Google Search

00:00:21.770 --> 00:00:26.670
Appliance, which is our intranet search relation
which, you know, many of you are using it

00:00:26.670 --> 00:00:31.849
or want to know more about the search appliance.
I also have two special guests with me today.

00:00:31.849 --> 00:00:36.030
They'll be coming here later in the talk but
I just I want to--them to stand up and say

00:00:36.030 --> 00:00:41.000
hi. And so, Chris and Robert if you guys don't
mind just saying hi. These are the special

00:00:41.000 --> 00:00:45.229
guests which won the competition for the Google
Search Appliance Photo Contest. So they are

00:00:45.229 --> 00:00:49.150
here to tell their story on how they are using
Google Search Appliance. So I'll invite them

00:00:49.150 --> 00:00:54.030
to the stage at the later half of my presentation
and they'll talk about the use itself. And

00:00:54.030 --> 00:01:00.510
so, thank you for coming. Without any further
ado, let me get started. So, you know, search

00:01:00.510 --> 00:01:05.449
is something which is very near and dear to--to
us at Google. And, obviously, you all are

00:01:05.449 --> 00:01:09.430
familiar with the consumer's side which is
Google.com and--there's a lot of innovation

00:01:09.430 --> 00:01:13.159
that's happening on the consumer's side and
you've seen that search has become the de

00:01:13.159 --> 00:01:17.799
facto starting point for all the information.
It's not just about finding documents and

00:01:17.799 --> 00:01:23.100
news but it's about finding information related
to weather, finance, movies, and maps. It's

00:01:23.100 --> 00:01:28.469
one single search box for all your information.
And the mission of the Google Search Appliance

00:01:28.469 --> 00:01:33.950
team at Google--at Google is to bring that
same experience for enterprise. Now, we obviously

00:01:33.950 --> 00:01:37.359
understand that inside the enterprise there's
still a lot of interesting challenges. But

00:01:37.359 --> 00:01:43.810
there's no reason from an end user point of
view that you cannot deliver the same experience.

00:01:43.810 --> 00:01:48.469
Quick update, and I want to thank all the
customers here. We do have more than 20,000

00:01:48.469 --> 00:01:53.100
customers ranging from small to mix sides,
all the way to Fortune 500 customers, so I

00:01:53.100 --> 00:02:00.609
do want to thank all the customers here who
have been using our products. The core mission

00:02:00.609 --> 00:02:04.729
and, you know, the kind of the--the final
delivery that we are looking from, from an

00:02:04.729 --> 00:02:08.509
end user point of view is this experience
and what we call a universal search. No matter

00:02:08.509 --> 00:02:13.530
how varied the information is you might be
using SharePoint, you might be using Documentum,

00:02:13.530 --> 00:02:19.780
FileNet, File Shares, SAP or any information
source out there. What do we want to deliver

00:02:19.780 --> 00:02:24.720
is a universal search experience to the end
users so that they can go to one single search

00:02:24.720 --> 00:02:30.330
box to get all their information. And this
is still kind of an ongoing problem; by no

00:02:30.330 --> 00:02:34.500
means this problem is solved. And there are
a lot of interesting technical and organizational

00:02:34.500 --> 00:02:39.170
challenges to deliver this vision. Today,
I'm going to talk about what Google is doing

00:02:39.170 --> 00:02:43.480
in order for some of the tools and APIs we
have build to make this vision possible for

00:02:43.480 --> 00:02:47.660
your enterprise. At Google we obviously eat
our own dog food and we've delivered this

00:02:47.660 --> 00:02:52.320
vision to Googlers so that the Googlers can
go to one single place to find all the information

00:02:52.320 --> 00:02:58.210
they are looking for. The four core areas
which--or you can think about these as four

00:02:58.210 --> 00:03:03.660
pillars that we focus on to deliver that experience
are. The number one is user. What can you

00:03:03.660 --> 00:03:10.030
do to customize the user experience? We obviously
deliver a default user experience but you

00:03:10.030 --> 00:03:15.100
have a lot of APIs and tools to customize
the end user experience. And the secret source

00:03:15.100 --> 00:03:19.500
for us is really the search quality. How good
the ranking of the search results is. The

00:03:19.500 --> 00:03:23.840
second aspect is reach. Inside enterprise
there are a lot of challenges around. How

00:03:23.840 --> 00:03:29.440
do you index for proprietary systems like
Documentum, FileNet, SharePoint, File Shares

00:03:29.440 --> 00:03:33.670
and many of the repositories out there and
how do you do it in a secured way? So we have

00:03:33.670 --> 00:03:37.040
done a lot of investment in building these
connectors and we also know the connector

00:03:37.040 --> 00:03:41.940
framework so that you can write a connector
for it. The third area is security. And this

00:03:41.940 --> 00:03:46.380
is an ongoing challenge because inside the
enterprise every document is secured and we

00:03:46.380 --> 00:03:51.270
want to make sure we give the user all the
information, but all the information that

00:03:51.270 --> 00:03:55.810
he or she is entitled to see. So I'm going
to talk about what does authentication and

00:03:55.810 --> 00:03:59.350
authorization mean for search plans and what
you can you do from the customization part

00:03:59.350 --> 00:04:04.530
of it. Last but not the least is scale. Once
you can index all these documents in a secured

00:04:04.530 --> 00:04:09.070
way, you want to make sure you have a platform
that can index to one million documents, five

00:04:09.070 --> 00:04:13.670
million, ten, twenty, so on and so forth so
that you are not limited by the indexing and

00:04:13.670 --> 00:04:20.870
the scaling capacity. This is--this is again
an interesting aspect of the Google Search

00:04:20.870 --> 00:04:25.219
Appliance. And inside the enterprise--this
is kind of a reality and you can do a better

00:04:25.219 --> 00:04:33.479
job--is personalization. More likely or not
you know who the end user is and for the same

00:04:33.479 --> 00:04:38.270
term the--the importance of the documents
varies. So, for example, if I'm doing a search

00:04:38.270 --> 00:04:44.009
on SAML or security; if I'm in marketing,
more likely I'm looking for some road map

00:04:44.009 --> 00:04:49.009
presentation or a datasheet. If I'm in sales,
I'm just looking for kind of a quick summary

00:04:49.009 --> 00:04:54.419
of what SAML means. But if I'm in engineering,
more likely I'm looking for a design document.

00:04:54.419 --> 00:04:59.460
And what we provide from a search appliance
point of view is this ability to configure

00:04:59.460 --> 00:05:04.159
rules so that you can have different personas
and you can deliver a different search experience

00:05:04.159 --> 00:05:09.400
based on who the users are. So, for example,
we have this notion of biasing controls. You

00:05:09.400 --> 00:05:14.900
can create a different biasing policies based
on different personas. You can create a biasing

00:05:14.900 --> 00:05:19.860
policy for everybody who's in marketing, a
biasing policy for everybody who's in engineering,

00:05:19.860 --> 00:05:25.499
a biasing policy for everybody who is in sales.
And you can configure rules and say, if a

00:05:25.499 --> 00:05:30.389
user is in engineering I want to give higher
importance to design documents. Or if a user

00:05:30.389 --> 00:05:35.560
is in marketing, I want to give higher importance
to Roadmap presentations and datasheets. And

00:05:35.560 --> 00:05:39.569
as you can see from the screenshots, it's
actually relatively easy to configure it.

00:05:39.569 --> 00:05:44.919
We give you a simple admin-based UI so that
you can configure your policies and set it

00:05:44.919 --> 00:05:49.300
up. And what you can do is you can set up
multiple policies base on these personas.

00:05:49.300 --> 00:05:55.340
You can set up a policy base on URL or repositories.
You can set up a policy base on Meta data

00:05:55.340 --> 00:06:00.029
or you can set up a policy base on date. You
can say, "I want to give a higher importance

00:06:00.029 --> 00:06:05.499
for documents which are more current." This
is kind of going into a little bit more detail

00:06:05.499 --> 00:06:10.300
on Meta data biasing. So, for example, you
know, in engineering there might be some authors

00:06:10.300 --> 00:06:14.389
who are well-respected in their organization
or in marketing there might be certain people

00:06:14.389 --> 00:06:18.680
who are writing a lot of important content.
So what you can do is you can create different

00:06:18.680 --> 00:06:22.620
biasing policies and say, "You know what,
I want to give higher importance to all the

00:06:22.620 --> 00:06:27.309
documents that were authored by John in the
engineering department or by Matthew in the

00:06:27.309 --> 00:06:31.680
marketing department. So you can create these
different policies and so should these two

00:06:31.680 --> 00:06:36.969
personas. Now, as far as the end user experience
itself is concerned, you have full control

00:06:36.969 --> 00:06:41.710
on that also. What we do is we give you specific
results so that, you know, I go back to this

00:06:41.710 --> 00:06:46.759
slide, you can definitely decide how these
links look like, and what the color of the

00:06:46.759 --> 00:06:51.059
links is, how do the snippets looks like and
what kind of image you want to put for your

00:06:51.059 --> 00:06:55.279
company and things like that. But more importantly
you can do more advanced customization. So

00:06:55.279 --> 00:06:59.629
the top thing just shows you a small snippet
of HTML code. It's like an iFrame which you

00:06:59.629 --> 00:07:04.460
can embed in any of your application. It can
be portal application or a Wiki or a standard

00:07:04.460 --> 00:07:09.469
or an App and we deliver the search experience
for your users. But if you are an advanced

00:07:09.469 --> 00:07:12.919
developer and you want to customize the entire
search experience, we'll also give you the

00:07:12.919 --> 00:07:16.999
rest of it, an XML API where you can see at
the bottom of this, you can issue a simple

00:07:16.999 --> 00:07:21.620
request to us with the actual query string
and the other parameters with the Search Appliance

00:07:21.620 --> 00:07:27.469
support and in return we give you the XML
response. So to quickly show you the actual

00:07:27.469 --> 00:07:33.719
place where you can look at it, we have a
complete protocol from how we return you the

00:07:33.719 --> 00:07:38.879
results format. So if you look at the XML
output it gives you complete control on what

00:07:38.879 --> 00:07:44.759
these search is also. It gives you the information
about attributes, what the Meta tags are,

00:07:44.759 --> 00:07:50.249
what the format is, the cash link, the encoding,
you know, I can just go through the entire

00:07:50.249 --> 00:07:55.469
XML, but the point I'm trying to say is that
you can get your results in an a raw format

00:07:55.469 --> 00:08:00.369
which is XML. And then you can either Access
LP or any of the language to transform this

00:08:00.369 --> 00:08:05.189
XML results into the HTML, render into your
portal or any available Wiki applications,

00:08:05.189 --> 00:08:09.349
so kind of getting the best of both worlds.
If you want to take the default experience

00:08:09.349 --> 00:08:13.059
that the Search Appliance provides, you can
take an HTML on IFrame. But you if you want

00:08:13.059 --> 00:08:17.050
to write your own custom code and define your
own user interface, you want to have advanced

00:08:17.050 --> 00:08:22.419
Meta data attributes and filtering and things
like that, you can use the XML API and it

00:08:22.419 --> 00:08:27.089
gives you the Meta data attributes as well
as the search results with the snippets and

00:08:27.089 --> 00:08:31.999
all the things that you see on the HTML IFrame.
So this is again, you know, the thing which

00:08:31.999 --> 00:08:36.380
I always tell people, you don't need to remember
the links, just Google it. You'll get it.

00:08:36.380 --> 00:08:40.190
Google Search Appliance search protocol will
give you the very first result which will

00:08:40.190 --> 00:08:45.839
tell you where you can define your own search
interface and what does HTML XML protocol

00:08:45.839 --> 00:08:51.490
looks like. So that's--that's kind of what
I, you know, focusing on the end user side,

00:08:51.490 --> 00:08:57.209
allowing you to create not only rich UIs but
also more personalized UIs so that based on

00:08:57.209 --> 00:09:01.420
who the user is, you can create different
experiences and you don't need to have one

00:09:01.420 --> 00:09:06.610
single vanilla experience for your entire
enterprise. The second aspect which we are

00:09:06.610 --> 00:09:12.690
focusing a lot is this notion of how do you
take the collective input from your employees?

00:09:12.690 --> 00:09:17.459
This is kind of like crowd sourcing the search
information. The classic example I give is

00:09:17.459 --> 00:09:22.529
that if somebody works for a [INDISTINCT]
they know where the vacation policy is, where

00:09:22.529 --> 00:09:28.279
the travel policy is and where the official
documents related to your handbook and things

00:09:28.279 --> 00:09:32.910
like that. If somebody is in sales, they know
where the pricelist is. If somebody is engineering,

00:09:32.910 --> 00:09:38.019
they know where they keep the design documents.
What if you allowed the end users to submit

00:09:38.019 --> 00:09:42.519
the search results back to the up lines? So,
you know, we have one of the popular features

00:09:42.519 --> 00:09:46.660
called KeyMatch where an administrator can
set up saying, "For this query, this is the

00:09:46.660 --> 00:09:51.130
best search result." But what if you take
the feature to the next level and open it

00:09:51.130 --> 00:09:54.769
up to the entire enterprise so that you don't
have one person for the collective knowledge

00:09:54.769 --> 00:09:58.790
of your entire organization so that somebody
in that [indistinct] can submit a link saying,

00:09:58.790 --> 00:10:04.709
"For vacation policy, this is the best document."
Somebody in engineering can say, "For security,

00:10:04.709 --> 00:10:09.259
this is the best document." So what do you
see on the top of the search results are these

00:10:09.259 --> 00:10:13.709
results which are entered by your end users.
And once they have been submitted to the search

00:10:13.709 --> 00:10:18.589
appliance, if somebody else does the same
search for vacation policy or design document,

00:10:18.589 --> 00:10:21.920
they would see these search results on the
top. It will tell them who has entered it

00:10:21.920 --> 00:10:25.779
and at the bottom you would see the search
results which are generated algorithmically

00:10:25.779 --> 00:10:29.850
by the search appliance. Now, again, you can
customize the search enterprise completely.

00:10:29.850 --> 00:10:34.660
So maybe the search results on the top, you
might want to keep on the right and say, "Search

00:10:34.660 --> 00:10:39.829
results entered by employees or suggested
recommendations," and things like that. Think

00:10:39.829 --> 00:10:44.459
about this as taking the social knowledge
that your employees have and kind of merging

00:10:44.459 --> 00:10:50.110
with the algorithmically generated search
results that the GSA provides. The second

00:10:50.110 --> 00:10:55.009
feature which has again required some customization
but is very popular, this is actually a real

00:10:55.009 --> 00:11:00.649
screen shot from Google, you know, the Google's
intranet ware. If I'm looking for an employee

00:11:00.649 --> 00:11:04.750
or something, I can start typing in the name
and it will give me auto completion for that

00:11:04.750 --> 00:11:09.310
person. I can do the same thing for looking
up for conference rooms, or at the bottom

00:11:09.310 --> 00:11:13.630
of it you could also see--we give you suggestions
for queries. So these are kind of similar

00:11:13.630 --> 00:11:18.800
queries which somebody else had written. Now,
this entire experience is again customizable

00:11:18.800 --> 00:11:22.880
and pluggable with the search appliance. What
we have done is there's actually a lab, so

00:11:22.880 --> 00:11:33.160
if you go to--how many people are aware of
Enterprise Lab, Google Enterprise Labs? So,

00:11:33.160 --> 00:11:36.459
you know, it looks like not many, so I'm going
to spend just a little bit time to explaining

00:11:36.459 --> 00:11:42.850
this, what the Enterprise Labs is. So Labs
is kind of our delivery platform where we

00:11:42.850 --> 00:11:47.550
can give you features before waiting for the
next release of the search appliance. The

00:11:47.550 --> 00:11:52.480
analogy which I like to make is think about
Labs as big games. So if the search appliance

00:11:52.480 --> 00:11:57.949
is like your Wii console--I like Wii a lot
but you can correlate it with any other console

00:11:57.949 --> 00:12:02.360
out there. Think about Labs as those games
where you can download these games and plug

00:12:02.360 --> 00:12:05.779
it into the Search Appliance. You don't need
to upgrade the Search Appliance to the next

00:12:05.779 --> 00:12:09.129
release. You don't need to wait for the next
release to come because of this interesting

00:12:09.129 --> 00:12:13.579
Lab; you can just plug it in. If you release
multiple Labs, and the specific one which

00:12:13.579 --> 00:12:19.889
I was just talking about is called Search-as-you-type.
The entire Lab is available in open source

00:12:19.889 --> 00:12:24.660
so you can download it. It's under Apache
2.0 Licensing. So it's a very flexible licensing.

00:12:24.660 --> 00:12:30.899
And you can plug this thing, the Search-as-you-type,
into your own LDAP directory or an employee

00:12:30.899 --> 00:12:35.490
look-up system or it can be an export system,
or it can be a glossary. It Google via linked

00:12:35.490 --> 00:12:40.019
it into a glossary system, so if anybody is
interested to search for SAML, we can quickly

00:12:40.019 --> 00:12:45.300
look up the glossary look-up and tell people
what SAML stands for or what GSA stands for.

00:12:45.300 --> 00:12:49.529
So this is again a very powerful mechanism
which allows you to extend the search user

00:12:49.529 --> 00:12:53.629
interface and allows users to quickly find
the information they are looking for. And

00:12:53.629 --> 00:12:56.750
in some ways this is very similar to what
you see on Google, you know. On Google, I

00:12:56.750 --> 00:13:02.759
can start typing in SAML or any of these things
that it'll show you the search goals that

00:13:02.759 --> 00:13:09.569
you're looking for. The second point which
I was trying to emphasize--so, you know, we

00:13:09.569 --> 00:13:13.040
kind of spend a lot of time on the end user
side because that's one area where we feel,

00:13:13.040 --> 00:13:17.490
you know, it's part of the most important
area. Where we would, you know, people talk

00:13:17.490 --> 00:13:22.410
about search. It's not about the performance
or scalability or other things. At the end

00:13:22.410 --> 00:13:26.569
of the day it's how to deliver on the search
results software end user. And the search

00:13:26.569 --> 00:13:30.379
experience is part of the deliverancy equation.
If you can deliver the right search experience,

00:13:30.379 --> 00:13:34.459
your users can find the information that they're
looking for. And to me, that's the biggest

00:13:34.459 --> 00:13:38.990
barometer for measuring if you have the right
search technology on it. The second idea is

00:13:38.990 --> 00:13:44.089
reach. If you're not indexing all your content,
your users will obviously not be able to find

00:13:44.089 --> 00:13:49.329
it. If you have, you know, 20 million documents
and if you're indexing only 5 million documents,

00:13:49.329 --> 00:13:53.660
of course, your users cannot find the information
because you cannot index it. So, in some areas,

00:13:53.660 --> 00:14:00.949
your search results are as good as your quality
of indexes and how complete/confident your

00:14:00.949 --> 00:14:06.420
index is. At Google, we also think about,
you know, we try to think about what can we

00:14:06.420 --> 00:14:10.089
do to make that problem easier. And so, one
other thing, which we have invested a lot,

00:14:10.089 --> 00:14:14.910
is building connectors to different repositories
that are out there in the enterprise. Starting

00:14:14.910 --> 00:14:19.430
from supporting different file formats. So
we support more than 200 different file formats

00:14:19.430 --> 00:14:25.660
starting from Excel, PDF, Word, and others,
to all the way writing connectors to various

00:14:25.660 --> 00:14:31.040
repositories such as Documentum, Share Point,
File Net and Livelink. Now, we do realize

00:14:31.040 --> 00:14:34.939
that, you know, this is a pretty impressive
list, but it's not a complete list. I'm pretty

00:14:34.939 --> 00:14:40.779
sure somebody in the audience has a repository
which is not there in this--on this presentation

00:14:40.779 --> 00:14:46.089
here. So the question is, what can you do
if we don't support a specific system that

00:14:46.089 --> 00:14:51.160
your organization has deployed. You have two
options; one is, we have a large partner network

00:14:51.160 --> 00:14:56.439
which has built connectors to many systems
out there including Stellent, which is now

00:14:56.439 --> 00:15:03.199
part of Oracle, Lotus Notes, SAP, Knowledge
Management Repository, and things like that.

00:15:03.199 --> 00:15:07.980
But if you want to write your own connector,
it's actually not that difficult. If I go

00:15:07.980 --> 00:15:17.490
back to my--the main information about connectors,
what we have done is the actual connector

00:15:17.490 --> 00:15:22.610
framework itself. We have open source. It's
written in Java and it's completely open source,

00:15:22.610 --> 00:15:27.199
and the four connectors that we have: Share
Point, Livelink, FileNet and Documentum are

00:15:27.199 --> 00:15:32.290
also open source. So you can look at how we
build those connectors. And you can use this

00:15:32.290 --> 00:15:35.779
connector framework, which is completely open
source. And I'm not going to go to their specific

00:15:35.779 --> 00:15:40.569
detail, but perhaps the most important thing
here to look at the SPI of the connector interface.

00:15:40.569 --> 00:15:46.889
It's literally easy to--the method that we
have used to expose these APIs is a traversal

00:15:46.889 --> 00:15:52.050
method where you can traverse your back end
repository. Whether it's, you know, Stellent

00:15:52.050 --> 00:15:56.620
or any proprietary repository and push the
information in the search appliance. And what

00:15:56.620 --> 00:16:00.740
we have given you is not only this rich API,
which allows you to traverse your document

00:16:00.740 --> 00:16:05.829
to more--other repositories. But also the
authentication and authorization APIs so that

00:16:05.829 --> 00:16:09.050
you can write your custom security along with
the connector that you're being linked. And

00:16:09.050 --> 00:16:13.529
finally, we give you an Admin UI so that you
can set up the schedules and say, "I want

00:16:13.529 --> 00:16:18.769
to crawl my Stellent repository every two
hours or every twenty-four hours." So you

00:16:18.769 --> 00:16:22.600
write that connector, you hook it up to the
search appliance and then you set it up in

00:16:22.600 --> 00:16:27.220
your schedule. It's a pretty straightforward
exercise and depending on how complex the

00:16:27.220 --> 00:16:31.350
repositories. It can take anywhere from a
week to maybe two weeks. And both the connector

00:16:31.350 --> 00:16:36.319
framework as well as the connectors themselves,
everything is open source under Apache 2.0.

00:16:36.319 --> 00:16:40.329
So, you're welcome to look at the code and
you're also welcome to customize any of the

00:16:40.329 --> 00:16:50.110
connectors that we have. [pause] This is kind
of giving you a little bit more technical

00:16:50.110 --> 00:16:54.300
depth of this connector framework. At the
very high level, you can think about--you

00:16:54.300 --> 00:16:58.360
know, there's the search appliance which has
all these API hooks to push the documents

00:16:58.360 --> 00:17:05.310
inside the search appliance. But then the
connector framework itself is a container-based

00:17:05.310 --> 00:17:09.230
application which you can deploy it at any
servlet end unit as is done in Java. And the

00:17:09.230 --> 00:17:13.839
container gives you these APIs, the SPIs which
are implementing your own connector and deploying

00:17:13.839 --> 00:17:18.579
with it. And finally, the--you know, most
likely, you would end up using some library

00:17:18.579 --> 00:17:23.419
from your actual repository unless your backend
repository supports web services. In that

00:17:23.419 --> 00:17:27.640
case, you don't need to have any native Library
to talk to your backend system. So for example,

00:17:27.640 --> 00:17:31.970
in the case of SharePoint, we use web services
to directly talk to SharePoint to retrieve

00:17:31.970 --> 00:17:36.549
the information. In case of document, I mean,
labeling, we use the LAPI API or the DCTM

00:17:36.549 --> 00:17:41.350
API to talk to those repositories to fetch
all the document. The important thing about

00:17:41.350 --> 00:17:46.480
this is it's not just documents. You can also
retrieve Meta data, which is associated with

00:17:46.480 --> 00:17:50.760
your document as well as the security. So
you're literally taking the entire structure

00:17:50.760 --> 00:17:54.860
that you have created in your bank-end repository
and pushing it into the search appliance so

00:17:54.860 --> 00:17:59.799
that you can get the same native search that
your backend system will give but much better

00:17:59.799 --> 00:18:05.220
search quality in the ranking and you can
leverage the search appliance features. The

00:18:05.220 --> 00:18:10.140
second aspect of reach is--and this is very
important, is--it's not just about documents.

00:18:10.140 --> 00:18:14.809
Documents are definitely very important and
search is in some ways associated with documents.

00:18:14.809 --> 00:18:18.559
But if you look at what we've done on Google,
you can not only search for documents but

00:18:18.559 --> 00:18:23.240
also for structured information. You can do
a search on weather. So, you know, a very

00:18:23.240 --> 00:18:28.360
simple example which I always tell people
is you can do--go to Google and do a search

00:18:28.360 --> 00:18:33.760
on weather in Mountain View. The very first
result that you'd see here is actually the

00:18:33.760 --> 00:18:38.779
weather--it's the Real Time weather information.
And we're not indexing this weather information.

00:18:38.779 --> 00:18:43.440
It doesn't make sense for us to index the
actual weather, which is in a specific zip

00:18:43.440 --> 00:18:47.850
code. We're doing a Real-Time call to a weather
service. The same concept applies inside the

00:18:47.850 --> 00:18:53.929
enterprise. We have a lot of business applications,
for example, your URP system or your BI system.

00:18:53.929 --> 00:18:58.010
But it doesn't make sense for the search appliance
to go and index this information. But we still

00:18:58.010 --> 00:19:01.900
want to make it easier for your end users
so that they can go to one single search box

00:19:01.900 --> 00:19:09.830
and enter a query, purchase order, 500 or
East Coast sales or support ticket 385. And

00:19:09.830 --> 00:19:13.559
what we're doing is we are giving you this
framework where you can make real time call

00:19:13.559 --> 00:19:19.230
into your backend application based from these
triggers. So this is kind of going a little

00:19:19.230 --> 00:19:23.950
bit more detail on how the logic works. So,
you know, from an end user point of view,

00:19:23.950 --> 00:19:29.929
user enters a query, for example, purchase
order, $500 or East Coast sales. You as an

00:19:29.929 --> 00:19:34.500
administrator would have set up several triggers.
You can set up a trigger for words like purchase

00:19:34.500 --> 00:19:41.390
order, sales, support ticket, contact, and
things like that. What it means that for each

00:19:41.390 --> 00:19:46.309
trigger, you are associating a backend URL,
which is like a rails base URL and saying,

00:19:46.309 --> 00:19:51.220
"If somebody is entering a query purchase
order, I want to invoke so and so API from

00:19:51.220 --> 00:19:56.000
your backend system." You make that rails
base call to your backend system. The actual

00:19:56.000 --> 00:20:01.000
provider renders the search results back to
us in a specific XML format that we have given

00:20:01.000 --> 00:20:05.309
to you and they give the search results back
to it. And finally, what you see is that the

00:20:05.309 --> 00:20:09.200
search result that we get from this one box
is displayed as the very first result on the

00:20:09.200 --> 00:20:13.860
top of all your search results. And this can
theoretically be any application that you

00:20:13.860 --> 00:20:18.080
have. The API is flexible enough to talk to
any of the applications that you have. And

00:20:18.080 --> 00:20:23.799
the good news is a lot of our partners, like
Sales Force, have already return this predefined

00:20:23.799 --> 00:20:27.070
OneBox modules. So all you need to do is just
configure that OneBox module and associate

00:20:27.070 --> 00:20:32.399
it with a trigger. You don't need to write
any code for it. But, you know, I can understand

00:20:32.399 --> 00:20:36.070
there might be ten, fifteen applications,
which there aren't any OneBox modules. So

00:20:36.070 --> 00:20:41.380
the actual code for writing this is relatively
easy. This is kind of the administrative side

00:20:41.380 --> 00:20:46.750
of it where you set up these triggers and
then you configure the providers. The actual

00:20:46.750 --> 00:20:51.510
providers itself can be written in any language.
It basically supports the rest of this protocol.

00:20:51.510 --> 00:20:57.320
It takes the query in the authentication request
and then they respond. This is like a quick

00:20:57.320 --> 00:21:02.809
snapshot of the XML schema. You just need
to give us the URL, the provider of the search

00:21:02.809 --> 00:21:06.799
from the title you want to display in the
image and any other information and we'll

00:21:06.799 --> 00:21:11.200
take your rendering code and plug the search
result back into the standard search results

00:21:11.200 --> 00:21:15.279
that we are defining. So, you know, again,
a very powerful feature but literally easy

00:21:15.279 --> 00:21:19.450
to set it up and display and integrate. Just
a quick show of hands, how many people have

00:21:19.450 --> 00:21:26.770
actually played with OneBox or deployed it?
That's not bad. Around 20% people have used

00:21:26.770 --> 00:21:35.140
the search appliance OneBox already. Let's
see. So I think we covered two of the most

00:21:35.140 --> 00:21:39.500
important areas. One is the end user experience
which is model customizations that you can

00:21:39.500 --> 00:21:44.159
do from an end user search experience point
of view and the second is the reach. How you

00:21:44.159 --> 00:21:48.830
can index content and how you can invoke backend
systems from your business application. The

00:21:48.830 --> 00:21:53.370
third aspect is security. What we do is--this
kind of slide gives you a quick snapshot of

00:21:53.370 --> 00:21:58.299
all the security protocols that we support
starting from basic protocols like HTTP Basic,

00:21:58.299 --> 00:22:04.370
NTLM, and LDAP, as well as advanced protocols
like Kerberos integrating with your sign-on

00:22:04.370 --> 00:22:10.179
systems like SiteMinder and Oblix, as well
Certificate-based. But there might be guesses

00:22:10.179 --> 00:22:14.860
where you want to do your own custom security.
You might be using a database for authentication

00:22:14.860 --> 00:22:19.399
or your authorization rules are stored in
a proprietary repository which doesn't fall

00:22:19.399 --> 00:22:24.159
into any of these buckets. So what we support
to write your own custom authentication authorization

00:22:24.159 --> 00:22:30.020
code is SAML SPI. And SAML is the standard,
it's not Google proprietary. It's always a

00:22:30.020 --> 00:22:34.789
standard which you can write your own SAML
cord both for authentication and authorization.

00:22:34.789 --> 00:22:39.010
You plug in that SAML providers in the search
appliance. And what we do is we do a callback

00:22:39.010 --> 00:22:43.500
when a user is trying to issue a query and
we ask you a question to the SAML provider

00:22:43.500 --> 00:22:49.450
that you use, does this user has the right
credentials. And then once he's authenticated,

00:22:49.450 --> 00:22:54.630
we also involve the authorization module to
ask the SAML provider a question saying, "This

00:22:54.630 --> 00:22:59.460
user is trying to access these 20 documents.
Does he or she have access to those documents?"

00:22:59.460 --> 00:23:05.120
So you get to use the 98% of the search appliance
capability. But for security, you can write

00:23:05.120 --> 00:23:09.919
your own custom authentication authorization
and we'll make callbacks to your module as

00:23:09.919 --> 00:23:15.460
the users are trying to find information and
do secured searches. This has kind of goes

00:23:15.460 --> 00:23:20.169
a little bit more in detail to kind of quickly
walk you through some of the steps on how

00:23:20.169 --> 00:23:24.700
to--the default security works. The user does
have security and you have an option where

00:23:24.700 --> 00:23:29.899
you can set up a flag which says, access equal
to A, which is he's doing a secured search.

00:23:29.899 --> 00:23:34.470
The second thing we do is we ask him or her--their
credentials. If they're using Kerberos, we

00:23:34.470 --> 00:23:39.549
can directly look up at the silent authentication
that they get. We make sure that the authentication

00:23:39.549 --> 00:23:44.590
is done using your backend system. Once we
have the authentication token, we get all

00:23:44.590 --> 00:23:48.850
the search results that match their particular
query. There might be 50 search results which

00:23:48.850 --> 00:23:53.720
match their query security or design document.
Now, we don't want to go and check authorization

00:23:53.720 --> 00:23:57.559
request for all 50 of them because in most
likelihood we'll just return the first 10

00:23:57.559 --> 00:24:01.700
or 15. So we go back to your backend system
and make a head request and check if that

00:24:01.700 --> 00:24:06.230
user has access to those documents or not.
And if he or she has access to those results,

00:24:06.230 --> 00:24:10.370
we put it back in the search result, but if
they don't have it, we silently take that

00:24:10.370 --> 00:24:16.179
search result out of the final search delivery.
Now, the same module applies when you're writing

00:24:16.179 --> 00:24:20.630
your own custom code. Instead of, we talking
to your back end systems directly, we'll talk

00:24:20.630 --> 00:24:24.740
to your SAML authorization provider and ask
that same question saying, "John is trying

00:24:24.740 --> 00:24:28.899
to access these URLs, does he or she has access
to it?" So those are kind of two things you

00:24:28.899 --> 00:24:33.000
can do. You can either use the default security,
which we have in the search appliance or you

00:24:33.000 --> 00:24:37.799
can write your own SAML authorization. And
again, this is very well explained. If you

00:24:37.799 --> 00:24:45.390
go to the search appliance authentication
documentation, there's also some sample and

00:24:45.390 --> 00:24:50.750
stuff. You can look at both the authentication
and the authorization SPIs, and it walks you

00:24:50.750 --> 00:24:55.970
through the standard details on how you can
use SAML to write your own redirect protocol.

00:24:55.970 --> 00:25:00.850
Now, SAML is obviously, it has its own kind
of artifact binding protocol on how the redirection

00:25:00.850 --> 00:25:05.230
works with authentication, so we are implementing
that very same protocol. This just gives you

00:25:05.230 --> 00:25:09.740
a little bit details on how you will bind
those URL's in the search appliance and associate

00:25:09.740 --> 00:25:14.070
it saying, what SAML use so and so artifact
binding and--for authorization use so and

00:25:14.070 --> 00:25:18.090
so URL. So this documentation kind of goes
into a little bit more detail on the protocol

00:25:18.090 --> 00:25:23.649
and the actual analogs that you'll have to
implement. How many people are familiar with

00:25:23.649 --> 00:25:30.429
SAML or played with SAML here? How many people
have actually deployed something on SAML?

00:25:30.429 --> 00:25:35.220
Okay, very few. So, you know, I think it's
also a feedback to us to perhaps; we need

00:25:35.220 --> 00:25:39.649
to reduce some of the complexity and the barrier
on these protocols to make it easier or make

00:25:39.649 --> 00:25:42.870
a little bit of more sample codes so that
you guys can looks at it then and play with

00:25:42.870 --> 00:25:48.330
it. It's actually not that difficult to write
your own SAML model. And the flexibility that

00:25:48.330 --> 00:25:52.330
it gives you is really powerful because it
allows you to write complete custom code for

00:25:52.330 --> 00:26:00.630
your authentication or authorization. So,
I think I have another 10 minutes or so. Just

00:26:00.630 --> 00:26:04.940
from kind of logistics point of view, we try
to give the Q&amp;A at the end. I hope that's

00:26:04.940 --> 00:26:10.510
okay with you guys so that we can spend the
last 10 or 15 just on the Q&amp;A side of it.

00:26:10.510 --> 00:26:12.769
And so, if you have any questions on APIs
or the Search Appliance, we'll go through

00:26:12.769 --> 00:26:17.140
it. So I have a few more slides. I just want
to go over it in a little bit detail before

00:26:17.140 --> 00:26:22.950
we switch over to the two guests we have here,
and then open it for Q&amp;A. The last three day--which

00:26:22.950 --> 00:26:27.590
I'll only emphasize a little bit. And this
is again the unfortunate reality of some of

00:26:27.590 --> 00:26:32.590
the enterprise search deployments out there.
If you have the scale to 5 or 10 million documents,

00:26:32.590 --> 00:26:37.360
more likely your search deployment is going
to look something like that. And if any one

00:26:37.360 --> 00:26:41.679
who has deployed search to a higher scale,
they'll realize that how many systems you

00:26:41.679 --> 00:26:46.320
need to set it up and what kind of complexity
it entails to a human scale to 10 million

00:26:46.320 --> 00:26:50.630
documents. We believe this is--this is not
needed. You know, we can make things much

00:26:50.630 --> 00:26:56.769
simpler. You don't need to worry about indexing
and serving and crawling in all that stuff,

00:26:56.769 --> 00:27:00.549
it should be hidden from you. And I think
the fine balance that we are trying to play

00:27:00.549 --> 00:27:05.659
here is that we want to give you a plug and
play box but at the same time, as I mentioned,

00:27:05.659 --> 00:27:09.980
you know, throughout my presentation, it's
not a blog box. You have APIs to write your

00:27:09.980 --> 00:27:14.640
own user interface. You have APIs to index
whatever you want to index along with whatever

00:27:14.640 --> 00:27:19.130
Meta data you have. Your APIs should write
your own custom code. So simplicity doesn't

00:27:19.130 --> 00:27:23.600
mean lack of functionality. I want to insert
to--this is if you want to index 10 million

00:27:23.600 --> 00:27:27.700
documents. This is our answer. And literally,
it requires one single search box and those

00:27:27.700 --> 00:27:31.820
of you who are using it can testify at how
easy is it to plug and play. Now, you know,

00:27:31.820 --> 00:27:36.590
sometimes we got a criticism from some of
our friends that it's great to have this simple

00:27:36.590 --> 00:27:41.809
model, but it's not flexible enough. And the--our
answer is really what I explained to you today

00:27:41.809 --> 00:27:46.000
in the slides is that you can get the best
of both worlds. You can get a simple box which

00:27:46.000 --> 00:27:50.169
is easy to plug and play, but at the same
time we're not stopping you to customize your

00:27:50.169 --> 00:27:54.460
box. The APIs allow you to practically do
everything what you would do with the traditional

00:27:54.460 --> 00:27:59.269
deployment like this. All right, and our point
is you don't need to worry about such a complex

00:27:59.269 --> 00:28:04.179
deployment to get the rich customizations
in the APIs. And, you know, if you look at

00:28:04.179 --> 00:28:10.230
the trajectory of--and this is just and I'm
going to quickly show you, you know, how rich

00:28:10.230 --> 00:28:16.570
you have built some of these APIs. I mean,
starting from the entire Connector Manager

00:28:16.570 --> 00:28:22.169
or Connector Framework which gives you complete
control on your indexing capabilities. We

00:28:22.169 --> 00:28:27.409
have the open source to Framework, the APIs
that are available. If you go more further

00:28:27.409 --> 00:28:32.529
on to authentication and authorization again,
these are standard protocols SAML which you

00:28:32.529 --> 00:28:37.110
can customize it. You don't need to worry
about writing any propriety code. OneBox--again,

00:28:37.110 --> 00:28:42.340
simple rails base protocol, you don't need
to implement complex soft marshalling on it

00:28:42.340 --> 00:28:48.220
and another thing it's very easy to implement.
You can tie to any backend business application

00:28:48.220 --> 00:28:52.710
to finally the actual search protocol, to
customizing your search interface itself.

00:28:52.710 --> 00:28:57.080
You can either take your HTML IFrame and plug
it into your portal or you can write your

00:28:57.080 --> 00:29:02.220
custom XML code to use XSLT or other formats
to customize your search. So, you know, I'm

00:29:02.220 --> 00:29:06.730
trying to give you the spectrum here on how
rich the APIs are and, you know, how much

00:29:06.730 --> 00:29:10.779
you can do with the Search Appliance. And
at the same time we are delivering you a simple

00:29:10.779 --> 00:29:14.059
model, and so, from a deployment point of
view, you don't need to worry about how do

00:29:14.059 --> 00:29:18.190
you set this up in your data center. You literally
take this one. And I have set of couple of

00:29:18.190 --> 00:29:22.399
Search Appliances, and it took me less than
half and hour to plug it up, put it in and

00:29:22.399 --> 00:29:25.529
eject and start crawling their content. And
so, if you want something basic and up and

00:29:25.529 --> 00:29:29.409
running, you can get it up and run it within
hours. If you want to customize it, it's absolutely

00:29:29.409 --> 00:29:34.139
possible. We want to reduce the barrier on
how you can customize it and how easy and

00:29:34.139 --> 00:29:40.080
simple those customizations are. So, you know,
I think we're doing good on time. And I don't

00:29:40.080 --> 00:29:44.880
want to--what I'm going to do is I'm going
to switch gears a little bit and invite WellStar

00:29:44.880 --> 00:29:51.260
here. WellStar is one of the winners of--we
had this competition for, you know, the Search

00:29:51.260 --> 00:29:54.120
Appliance, how does it look like before the
shoot. So, WellStar is one of the winners.

00:29:54.120 --> 00:29:58.600
And I'm glad we have the representation from
WellStar to come in and talk about the solution.

00:29:58.600 --> 00:30:03.360
So why don't I invite Robin here. And why
don't we give him a big round of--thanks to

00:30:03.360 --> 00:30:08.529
them for coming here. Thank you.
&gt;&gt; ROBIN: Thank you. Good afternoon everybody.

00:30:08.529 --> 00:30:14.419
First of all, I'd like to thank Google for
sponsoring the winners of GSA Photo Story

00:30:14.419 --> 00:30:18.970
contest. We had a great time creating the
photo with Dr. William Cooper, the medical

00:30:18.970 --> 00:30:23.409
director of cardiovascular surgery at Kennestone
Hospital in Atlanta. You can see him in the

00:30:23.409 --> 00:30:29.659
back looking very surgical. I'd also like
to thank our lead developer, Joseph Ramos

00:30:29.659 --> 00:30:34.710
and Web Developer, Ralph Mallebranche, both
in the back for participating in the photo

00:30:34.710 --> 00:30:38.620
and then subsequently finding out that we
did ended win and refusing to come up here

00:30:38.620 --> 00:30:40.230
with me.
&gt;&gt; MANGTANI: [laugh]

00:30:40.230 --> 00:30:46.940
&gt;&gt; ROBIN: So, you know, thank you guys very
much. The GSA is obviously an incredible asset

00:30:46.940 --> 00:30:53.639
to healthcare. But I believe its healthcare
specific APIs are relatively scarce. So what

00:30:53.639 --> 00:30:59.070
I'd like to do today is present some "API
in the sky ideas" to everyone and get the

00:30:59.070 --> 00:31:03.769
GSA development community talking about poor
profit scale innovation and the not for profit

00:31:03.769 --> 00:31:10.149
sector. The question is what makes this interesting?
And the answer is a little bit touchy-feely.

00:31:10.149 --> 00:31:16.559
At the end of every IT system that we support,
there is a patient, and generally, an immediate

00:31:16.559 --> 00:31:21.500
family who is incredibly concerned about that
individual's well-being. That's the touchy-feely

00:31:21.500 --> 00:31:27.870
side. On the business side, there is an extended
set of friends and relatives who are all potential

00:31:27.870 --> 00:31:35.909
customers on the periphery of each patient
relationship. This socio-business structure

00:31:35.909 --> 00:31:41.899
of referrals and interconnectivity is what
we call the health find. And, you know, healthcare

00:31:41.899 --> 00:31:48.830
as an industry kind of enjoys the unique situation
of shared need among all the individuals involved.

00:31:48.830 --> 00:31:53.919
And the goal is to provide such superior care
and service that you're naturally earning

00:31:53.919 --> 00:32:00.779
business before, you know, a patient is biologically
forced to take it to a competitor. The funnel

00:32:00.779 --> 00:32:09.080
for gain in this business from the health
find is generally technology based. And in

00:32:09.080 --> 00:32:14.429
many ways, it tapers in from efficiency, which
is a where the GSA excels. So I'd like to

00:32:14.429 --> 00:32:21.299
show you two examples of how our WellStar
Web team has thought about using the GSA to

00:32:21.299 --> 00:32:29.679
tie everything together on our internet. The
first example is a search engine result page

00:32:29.679 --> 00:32:34.970
that mirrors the structure of our health system
and categorizes information in a useful way.

00:32:34.970 --> 00:32:40.380
At the top, we placed our five hospitals,
two administration buildings, and the system

00:32:40.380 --> 00:32:46.389
warehouse which makes facility specific searching
obviously easy. We've also placed a file,

00:32:46.389 --> 00:32:51.340
a file-type drill down on the right hand side,
so employees can immediately narrow the results

00:32:51.340 --> 00:32:57.639
if they know an item is in the common format.
But what would really make this interesting

00:32:57.639 --> 00:33:03.630
is a hospital census and a Google Chart in
API that publishes Real Time data for managerial

00:33:03.630 --> 00:33:10.350
interpretation. In many ways, a hospital is
a lot like a hotel. As your amount of patients

00:33:10.350 --> 00:33:15.630
increase, you need to staff adequately to
provide great service. By supplying administrators

00:33:15.630 --> 00:33:21.000
with the study stream of department-specific
data, ambulatory services can actually be

00:33:21.000 --> 00:33:27.070
rerouted to more effective locations during
peak capacity scenarios. The GSA effectively

00:33:27.070 --> 00:33:31.659
becomes a one-stop shop for current operating
data.

00:33:31.659 --> 00:33:35.669
&gt;&gt; MANGTANI: So this is the OneBox or what
features are the...?

00:33:35.669 --> 00:33:36.980
&gt;&gt; ROBIN: That would be the OneBox.
&gt;&gt; MANGTANI: That would be the OneBox.

00:33:36.980 --> 00:33:40.759
&gt;&gt; ROBIN: Yeah, these are all concepts that
we'd like to--that we'd like to see on the

00:33:40.759 --> 00:33:44.389
GSA development community work on because
there's not enough people out there looking

00:33:44.389 --> 00:33:51.919
at healthcare in ways that we can do some
stuff here. The second slide is a Health 2.0

00:33:51.919 --> 00:33:56.620
slide. I know that, you know, in, I guess,
kind of, you know, the world of Google here,

00:33:56.620 --> 00:34:01.950
everybody is pretty much sick of hearing Web
2.0. Well, this is just hitting hospitals.

00:34:01.950 --> 00:34:10.030
So, the second example uses a double exclamation
point MD Trigger at the top which you talked

00:34:10.030 --> 00:34:14.819
about earlier, to return to specific style
of physician listing. This includes popular

00:34:14.819 --> 00:34:20.169
Web 2.0 components, a valuable location-based
service that eliminates physician paging and

00:34:20.169 --> 00:34:25.839
a stylized result page. By utilizing the Trigger,
employees retain their traditional Google

00:34:25.839 --> 00:34:30.960
Search while gaining the unique functionality
of a feature-rich physician listing. Cycling

00:34:30.960 --> 00:34:35.450
between the listing and traditional results
is as easy as removing the Trigger or clicking

00:34:35.450 --> 00:34:41.800
one of the drilled down options. The informational
value on a page like this is immense. By integrating

00:34:41.800 --> 00:34:47.589
the Google Maps API with WellStar's RFID badge
system, the cliché, that nasal announcement

00:34:47.589 --> 00:34:54.230
of paging doctor so and so is finally retired
to television drama as a physician is traced

00:34:54.230 --> 00:34:59.329
though the specific buildings on our campus,
Google's API can pick up the bigger picture.

00:34:59.329 --> 00:35:04.069
Our clinical staff includes some incredible
constant authors who are involved with system-produced

00:35:04.069 --> 00:35:11.030
multimedia. And this page also features their
latest work. There should be a photo up in

00:35:11.030 --> 00:35:12.440
the right hand corner there, but there's none.
It would be some type of media, some video

00:35:12.440 --> 00:35:17.000
or something produced by one of our physicians.
For example, if you have another outbreak

00:35:17.000 --> 00:35:21.700
of swine flu or something like that, you have
a physician go on and produce a media and

00:35:21.700 --> 00:35:29.180
can post it immediately for distribution.
It's a very comprehensive overview of each

00:35:29.180 --> 00:35:36.760
clinical contributor. So, here we can see
the white text and white background there.

00:35:36.760 --> 00:35:42.660
We employ--our WellStar health system employs
over 12,000 people who not only work there

00:35:42.660 --> 00:35:48.750
but also live in the service communities.
Your own city can benefit from this type of

00:35:48.750 --> 00:35:53.800
connectivity, and it's full of patients, employees,
friends and families who can all benefit from

00:35:53.800 --> 00:36:00.369
a healthcare center of APIs that you develop
with the GSA. And doesn't that type of opportunity

00:36:00.369 --> 00:36:04.280
just make you warm and fuzzy?
&gt;&gt; MANGTANI: It's pretty good. That's a pretty

00:36:04.280 --> 00:36:08.650
impressive mode of customization you guys
are thinking about and have done.

00:36:08.650 --> 00:36:12.900
&gt;&gt; ROBIN: Yeah, absolutely. You know, with
the badge system, especially the paging idea

00:36:12.900 --> 00:36:15.490
would be--would be great for surgery.
&gt;&gt; MANGTANI: Now, how many developers do you

00:36:15.490 --> 00:36:17.630
have working on this?
&gt;&gt; ROBIN: There are three of us.

00:36:17.630 --> 00:36:19.750
&gt;&gt; MANGTANI: That's--that's a lot.
&gt;&gt; ROBIN: You think so?

00:36:19.750 --> 00:36:22.660
&gt;&gt; MANGTANI: No, that's--that's really good.
Well the customization is very rich.

00:36:22.660 --> 00:36:24.710
&gt;&gt; ROBIN: Yeah, absolutely. And that's one
of the things that we loved about the GSA-2

00:36:24.710 --> 00:36:29.900
is that we kind of pop it in there and then
went to work. I think the ratio that was often

00:36:29.900 --> 00:36:34.839
quoted was that it takes, you know, 0.1. Developers
to actually implement in and use it.

00:36:34.839 --> 00:36:38.579
&gt;&gt; MANGTANI: Yeah, no, this is--this is very--I
mean, I'm actually pleased to see some of

00:36:38.579 --> 00:36:43.000
the customization you guys are doing or all
of you've done. I mean this looks like--it

00:36:43.000 --> 00:36:45.839
looks like the universal search for healthcare.
&gt;&gt; ROBIN: Sure.

00:36:45.839 --> 00:36:48.319
&gt;&gt; MANGTANI: Like one single place for all
your information for your...

00:36:48.319 --> 00:36:50.880
&gt;&gt; ROBIN: Absolutely.
&gt;&gt; MANGTANI: For your patient and for everything.

00:36:50.880 --> 00:36:52.800
That's--that's really awesome. I need to be
a WellStar customer, I guess.

00:36:52.800 --> 00:36:54.869
&gt;&gt; ROBIN: Yeah.
&gt;&gt; MANGTANI: In a nice way without getting

00:36:54.869 --> 00:37:00.160
sick. Without getting sick can I be your customers,
and so. Well, thank you so much and congratulations

00:37:00.160 --> 00:37:04.319
once again.
&gt;&gt; ROBIN: Thank you.

00:37:04.319 --> 00:37:10.579
&gt;&gt; MANGTANI: So, I would like to invite one
more guest from the State of Missouri. And

00:37:10.579 --> 00:37:16.900
they are also winners of the photo contest.
So Jim, thank you for coming and please give

00:37:16.900 --> 00:37:24.470
a round of claps for Jim for coming. You want
me to hold it?

00:37:24.470 --> 00:37:27.560
&gt;&gt; JIM: Yeah, no, it's good. Yeah, I'm with
the State of Missouri. It's a little bit different

00:37:27.560 --> 00:37:34.150
for us, my presentation and my story that
I sent in. We indexed the content for state

00:37:34.150 --> 00:37:39.140
government contact that faces the public side.
And so, we don't necessarily look inward to

00:37:39.140 --> 00:37:44.510
our intranet but outward and give the citizens
of the State of Missouri in any businesses

00:37:44.510 --> 00:37:48.839
that they want to do business with the State
of Missouri a way to find information. So,

00:37:48.839 --> 00:37:53.310
I thought I'd tell you a little bit about
what where we were, and then where we are,

00:37:53.310 --> 00:37:58.869
and then kind of the future where we want
to go. Missouri is set up as 16 executive

00:37:58.869 --> 00:38:02.329
agencies and then there are those various
other agencies and boards and commissions

00:38:02.329 --> 00:38:07.829
along with that, but each of those agencies
was basically a silo. They had their own IT

00:38:07.829 --> 00:38:13.030
staff, their own Web developers, and their
own application developers. There was no commonality;

00:38:13.030 --> 00:38:17.950
no common web search was implemented throughout
any of there. And there was really no unified

00:38:17.950 --> 00:38:24.290
way of doing a search across our executive
agencies when it was very likely that if you

00:38:24.290 --> 00:38:28.420
wanted to do business with the State of Missouri,
you may need to go to the Department of Natural

00:38:28.420 --> 00:38:36.910
Resources as well as the Department of Agriculture.
And those two sites were completely different.

00:38:36.910 --> 00:38:42.420
Where is Missouri? A few years ago, about
the same time, we--several things happened.

00:38:42.420 --> 00:38:48.240
First thing was we purchased Google GSA. And
I can testify that it is just as easy as he

00:38:48.240 --> 00:38:51.430
says it is to plug it in.
&gt;&gt; MANGTANI: That looks pretty good on your

00:38:51.430 --> 00:38:54.579
data center. Very noticeable.
&gt;&gt; JIM: Yeah, it is. It is very noticeable;

00:38:54.579 --> 00:39:01.579
it stands out, but very easy. And so, we purchased
the Google GSAs and about the same time, we

00:39:01.579 --> 00:39:07.530
also had a major IT consolidation within state
government. All those 16 agencies that had

00:39:07.530 --> 00:39:12.839
IT staff, all of a sudden, one day became
one organization, one IT organization. So

00:39:12.839 --> 00:39:19.710
now, we had control of all of the developers,
all of the Web developers, all of the IT staff

00:39:19.710 --> 00:39:26.829
worked for one organization now that supported
those 16 agencies. And so now, all of our

00:39:26.829 --> 00:39:31.930
government content is indexed. All of the
public facing government content is indexed

00:39:31.930 --> 00:39:37.490
and available to the citizens in a uniform
manner across--across government. It provides

00:39:37.490 --> 00:39:42.000
for much richer search. We feel confident
that we're providing all that information

00:39:42.000 --> 00:39:47.480
out. The reach that he talked about, we--we've
got that now and we can--we're confident when

00:39:47.480 --> 00:39:51.599
a business wants to do business with the State
of Missouri, that when they come to our State

00:39:51.599 --> 00:40:00.890
homepage or any other of those agencies, they
really get what they wanted to find. And I've

00:40:00.890 --> 00:40:05.900
wrote, the bottom line, basically, is now
we--we are able to provide reliable information

00:40:05.900 --> 00:40:14.150
out to customers and citizens. The future,
we got a new administration, just like every

00:40:14.150 --> 00:40:20.589
state does. We swore that new administration
in, in January. And with that swearing in,

00:40:20.589 --> 00:40:24.210
we got a new position in state government
in the in CIO's office, with was the deputy

00:40:24.210 --> 00:40:30.430
CIO in-charge of Web presence. And that person
is specifically going to focus on the Web

00:40:30.430 --> 00:40:38.819
for state government. They have a lot of plans
for state government. They want--this soloist--that

00:40:38.819 --> 00:40:45.170
person's sole focus isn't how we present ourselves
out to the Web. You know, Web 2.0 is just

00:40:45.170 --> 00:40:49.319
now maybe hitting the medical field. Well,
the government field is even further behind.

00:40:49.319 --> 00:40:55.520
And so, it's good that we now have somebody
who's focused on how do we use those technologies

00:40:55.520 --> 00:41:02.319
and those tools that are out there to help
citizens do business with us. The vision that

00:41:02.319 --> 00:41:10.819
the deputy CIO has is for the website of state
government if represented on a user standpoint

00:41:10.819 --> 00:41:15.589
rather than how government wants to present.
Me, as a government employee, I mean I know

00:41:15.589 --> 00:41:21.349
exactly where to go to find what I want. But
you as a person moving to Missouri or a business

00:41:21.349 --> 00:41:26.640
trying to do business with Missouri have no
idea how government is structured. Eventually,

00:41:26.640 --> 00:41:33.200
we want to get to where users can select what
data they want to see on their website. We

00:41:33.200 --> 00:41:40.200
want to increase the use of the OneBox. We've
started to, I think, investigate that. And

00:41:40.200 --> 00:41:46.160
really, the goal--and Google really helps
us go in this direction as a government entity.

00:41:46.160 --> 00:41:50.650
We want to be as transparent with the tax
dollars as we can. We want to give the citizens

00:41:50.650 --> 00:41:59.309
access to all the information that they've
basically paid for. And Google has provided

00:41:59.309 --> 00:42:05.930
that ability already. And then we're--we really
want to take that further and start utilizing

00:42:05.930 --> 00:42:13.050
not only web OneBox but the Web services to
query Real Time data. And in there, there

00:42:13.050 --> 00:42:17.839
has been talk now of internally facing the
Google Appliance so that we can search our

00:42:17.839 --> 00:42:27.059
intranet and make our internal employees even
more efficient. So that's really all.

00:42:27.059 --> 00:42:31.819
&gt;&gt; MANGTANI: Chris, thank you so much for
coming here and sharing with us all the information.

00:42:31.819 --> 00:42:34.040
The Search Appliances really look nice.
&gt;&gt; JIM: Oh, yeah.

00:42:34.040 --> 00:42:37.050
&gt;&gt; MANGTANI: Yeah, data center. I like the--I
like the look of itself. And so, thank you

00:42:37.050 --> 00:42:46.450
for showing and thanks for coming. I'm going
to show you one last demo before we open up

00:42:46.450 --> 00:42:50.790
for Q&amp;As. Since we talked a lot about APIs,
I just want to show you an end user experience.

00:42:50.790 --> 00:42:55.869
This is actually a live site. So you can try
it. This is powered by Search Appliance reuters.com.

00:42:55.869 --> 00:43:00.280
This is, you know, as you can understand.
It's a--it's a pretty popular site. And they

00:43:00.280 --> 00:43:07.220
get a lot of queries. You can enter any query
here, for example, Goog--Google, short from

00:43:07.220 --> 00:43:12.710
Google. What you seen here, they're used in
many of our features, which I have been mentioning

00:43:12.710 --> 00:43:17.800
to you. For example, this quote here, this
is a OneBox. So what they are doing is they

00:43:17.800 --> 00:43:23.349
are doing a special call to get the results
about the Google's stock loading price, everything

00:43:23.349 --> 00:43:27.770
below it here. These are the standard results,
which are coming from the search appliance

00:43:27.770 --> 00:43:31.530
and then there are also many--kind of the
results from different avenues, such as video

00:43:31.530 --> 00:43:36.300
results and things like that. So as you can
see from this--this live implementation of

00:43:36.300 --> 00:43:40.970
the Google Search Appliance, you can practically
customize the UI as you want. It doesn't need

00:43:40.970 --> 00:43:45.579
to be necessarily just the top 10 search results.
You can integrate with your backend systems.

00:43:45.579 --> 00:43:49.930
You can decide what other information sources
you want to bring in? And you can render the

00:43:49.930 --> 00:43:55.220
UI based on how your website looks like. And
obviously, you know, with Reuters, it's a

00:43:55.220 --> 00:44:01.630
pretty high kind of quality volume websites
so that having a GSA, which powers them, kind

00:44:01.630 --> 00:44:05.530
of makes it easier for them that they don't
need to worry about scaling things like that,

00:44:05.530 --> 00:44:10.150
because the Search Appliance can meet their
demands on QPS and things like that. So, again,

00:44:10.150 --> 00:44:15.280
a live site, you guys are welcome to play
with it and see some of the cool features

00:44:15.280 --> 00:44:20.900
these guys have developed. So with that, I
think we have about 10 minutes or so. Now,

00:44:20.900 --> 00:44:26.540
we're going to open it to for Q&amp;A and I have
some passes here. Somebody passed me. There's

00:44:26.540 --> 00:44:32.680
a--is a Google enterprise, it says "Invitation
only. Dinner starting at 5:00." So what I'm

00:44:32.680 --> 00:44:36.960
going to do is anybody who has an interesting
question--no, actually anybody who ask the

00:44:36.960 --> 00:44:40.809
question will give these passes out. So if
you have any question, please feel free to

00:44:40.809 --> 00:44:46.390
grab one of those mics. And I don't need to
bribe you with the pass but still...

00:44:46.390 --> 00:44:49.920
&gt;&gt; Unfortunately, I have dinner plans. On
the SPI front, I have a concept repository.

00:44:49.920 --> 00:44:57.309
It is not one of the ones that you've listed
there. And I want to talk to you about that

00:44:57.309 --> 00:45:04.220
later. But do I need to authenticate or verify
user account, and has privileges for every

00:45:04.220 --> 00:45:07.119
search result. So in other words, if I issue
a query against the repository and the user

00:45:07.119 --> 00:45:15.380
is only entitled to see 10 out of, say, 100
matching results. Do I need to match--do I

00:45:15.380 --> 00:45:21.380
need to verify each of those or can I pre-populate
the axis control lists into the index so the

00:45:21.380 --> 00:45:24.839
index does the filtering for me.
&gt;&gt; MANGTANI: Yeah, so authentication is--first

00:45:24.839 --> 00:45:29.119
of all, so the question is "Do I need to do
multiple time-out indications and what happens

00:45:29.119 --> 00:45:33.559
for authorization?" So authentication is only
done once during this session, which is the

00:45:33.559 --> 00:45:38.460
browser session or whatever. You can set up
your quick key expiration. As well as the

00:45:38.460 --> 00:45:43.099
authorization is concerned, what we do is
we give you an API. And what we have done

00:45:43.099 --> 00:45:47.210
for the connectors that weed out, for example,
Documentum, we'd only make one request at

00:45:47.210 --> 00:45:51.990
a time. We're literally writing a DQL query.
So we're doing a DQL query right into the

00:45:51.990 --> 00:45:57.770
Documentum database sending the identity of
the user, which can be an--LDAP identity with

00:45:57.770 --> 00:46:02.800
the records and then trying to get the answer
back from the repository. So it's a very efficient

00:46:02.800 --> 00:46:07.230
single call we are doing. We're not storing
any ECLs right now in the Search Appliance,

00:46:07.230 --> 00:46:12.910
but the call itself is very efficient and
it is a single call to you back in the repository.

00:46:12.910 --> 00:46:15.760
&gt;&gt; Okay, so I have to follow-up.
&gt;&gt; MANGTANI: Sure.

00:46:15.760 --> 00:46:19.750
&gt;&gt; So the embed0--in the case of Documentum,
you're doing a live query against Documentum.

00:46:19.750 --> 00:46:25.400
So you're letting Documentum's index answer
in respond, not your search index.

00:46:25.400 --> 00:46:31.010
&gt;&gt; MANGTANI: Yeah, we are letting the Documentum's
ECL store to be just precise--respond that

00:46:31.010 --> 00:46:35.329
have--that have, the user has authorization
or not. That's right.

00:46:35.329 --> 00:46:39.319
&gt;&gt; Okay, so. I still need to understand because,
once again, I issue a query, right? Normally,

00:46:39.319 --> 00:46:44.349
it would be the Search Appliance who would
basically say, "Okay, I found 10 matching

00:46:44.349 --> 00:46:51.730
documents." But if I need to do that reconciliation
between these--the GSA results and the Documentum

00:46:51.730 --> 00:46:59.770
results, I need to--well, do some kind of
follow-up query. So you do one full DQL query

00:46:59.770 --> 00:47:02.609
and that basically returns the documents that
they get access to? Is that...

00:47:02.609 --> 00:47:07.740
&gt;&gt; MANGTANI: We do one full DQL query at the
serve time. Not so...indexing time.

00:47:07.740 --> 00:47:10.460
&gt;&gt; At indexing time.
&gt;&gt; MANGTANI: Not indexing out. In a short

00:47:10.460 --> 00:47:15.569
time we do one DQL query to find out which
documents do they use at the DQL. And the

00:47:15.569 --> 00:47:20.680
benefit of that model is if your Documentum
ECL is changed, we are not storing anything.

00:47:20.680 --> 00:47:25.940
We are basically asking the DQL ECL storing
and say what is it unloading?

00:47:25.940 --> 00:47:31.250
&gt;&gt; Yeah, so those DQL query also include then
all the--basically all the results that matched

00:47:31.250 --> 00:47:33.480
from the GSA front?
&gt;&gt; MANGTANI: Generally, we don't put all the

00:47:33.480 --> 00:47:35.450
results because you might have a thousand
results matched. But if any of us are going

00:47:35.450 --> 00:47:37.390
to display 15.
&gt;&gt; Let's say a hundred.

00:47:37.390 --> 00:47:40.859
&gt;&gt; MANGTANI: So, we'll do only 15.
&gt;&gt; Fifteen, okay. So you sent 15 at that time.

00:47:40.859 --> 00:47:44.299
You say, "I matched 15 of these 15 which--which
are--is the user allowed to access."

00:47:44.299 --> 00:47:49.430
&gt;&gt; MANGTANI: Exactly. And did you have a pass,
it's here.

00:47:49.430 --> 00:47:51.720
&gt;&gt; I have plans.
&gt;&gt; MANGTANI: Okay. He has--he has other plans

00:47:51.720 --> 00:47:53.559
for dinner. Maybe we can join you. Okay, go
ahead.

00:47:53.559 --> 00:48:00.099
&gt;&gt; I'll take the extra.
&gt;&gt; MANGTANI: Okay. I'll let David distribute

00:48:00.099 --> 00:48:05.440
these if you don't mind.
&gt;&gt; A lot of the features you--you have been

00:48:05.440 --> 00:48:11.190
talking about today, I know are directly aimed
at the larger Search Appliance. Are any of

00:48:11.190 --> 00:48:15.849
these features also included on the Mini side
of things? I mean, I've work with both of

00:48:15.849 --> 00:48:20.200
the larger Search Appliance and then the small
and Mini and I'm very interested because on

00:48:20.200 --> 00:48:24.710
some of the things that we've had much smaller
repositories but still we'd love to be able

00:48:24.710 --> 00:48:29.210
to take advantage of things like the OneBox.
&gt;&gt; MANGTANI: Yeah, so that's a good question.

00:48:29.210 --> 00:48:34.069
We actually do support OneBox and Mini. Not
all the features that I spoke today would

00:48:34.069 --> 00:48:40.540
support on Mini and the reason is pretty simple
and straightforward. The Mini custom was traditionally,

00:48:40.540 --> 00:48:44.740
what we call it, you know, small to midsize
customers. So, you know, we don't want to

00:48:44.740 --> 00:48:49.150
put too much complexity in Mini, because it
just makes life difficult. But lots of those

00:48:49.150 --> 00:48:54.140
customers don't have the developers skill
set and resources. The things which are relatively

00:48:54.140 --> 00:48:59.000
easy like OneBox is actually not that difficult,
so it's available--we do support authentication

00:48:59.000 --> 00:49:05.140
with NTLM and LDAP, we don't support connectors
on Mini. So, there's actually a page on the

00:49:05.140 --> 00:49:08.819
Google enterprise site, where you can get
the list of features that we support on Mini

00:49:08.819 --> 00:49:14.920
or not. And generally our kind of guiding
principle is based on the target audience

00:49:14.920 --> 00:49:19.089
that we are going after or who are buying
these products, does this feature make sense

00:49:19.089 --> 00:49:22.880
or not?
&gt;&gt; Excellent, thank you.

00:49:22.880 --> 00:49:27.690
&gt;&gt; So, we're in possession of a GSA appliance
and we are trying to implement it and we have

00:49:27.690 --> 00:49:34.030
to see our end system, Microsoft Dynamics
and so like all the activities, and all our

00:49:34.030 --> 00:49:38.380
sales; people enter in are stored on like
a website and when they open up this website,

00:49:38.380 --> 00:49:43.559
it actually opens the activities within an
IFrame on this website. So, I was wondering,

00:49:43.559 --> 00:49:51.380
is there anyway, like, crawl a content on
the website and the IFrame inside it as well?

00:49:51.380 --> 00:49:54.170
&gt;&gt; MANGTANI: So, most of them, it literally
depends; if for some reason we cannot crawl

00:49:54.170 --> 00:49:58.660
your content because of JavaScript interprets
it as kind of an inside some complex ministered

00:49:58.660 --> 00:49:59.339
IFrame.
&gt;&gt; Yeah.

00:49:59.339 --> 00:50:03.950
&gt;&gt; MANGTANI: There are two ways you can solve
that problem: one is, you know, you can explicitly

00:50:03.950 --> 00:50:08.799
feed us the raw content itself. So feed the
API, it kind of allows you to do that, right?

00:50:08.799 --> 00:50:15.290
The second thing is we can just try it out
and you know, and just feed us the URL. So,

00:50:15.290 --> 00:50:18.880
the thing you need to just quickly look at
it, is that, is the search appliance able

00:50:18.880 --> 00:50:22.079
to discover the URL? So, that's the first
thing. If it's not able to discover, then

00:50:22.079 --> 00:50:26.130
the best thing is, just feed the URL, for
that, at least it should able to discover.

00:50:26.130 --> 00:50:29.869
But if it's able to discover and not crawl
the content, then your best option is to push

00:50:29.869 --> 00:50:33.559
the content itself as a Base64 and create
content in the Search Appliance.

00:50:33.559 --> 00:50:35.760
&gt;&gt; Right, so we tried using the P Protocol,
but for the P Protocol, do you have to use

00:50:35.760 --> 00:50:41.579
like a Chrome script to kind of like push
it on a daily basis or how do you kind of

00:50:41.579 --> 00:50:44.849
automate the pushing process?
&gt;&gt; MANGTANI: So, does the script--so, feed

00:50:44.849 --> 00:50:50.430
us kind of, suggest for the broader audience.
Feed the APIs if ever you can push the content

00:50:50.430 --> 00:50:55.380
explicitly in the search appliance. And that
API, you know, we launched it in Search Appliance

00:50:55.380 --> 00:50:58.569
around with four others, it's been there out
for three or maybe three and half years. The

00:50:58.569 --> 00:51:03.960
new protocol that we launched is this connector
framework. This is kind of more of a full

00:51:03.960 --> 00:51:07.930
traversal based protocol and that one gives
you the tools to set up schedule and things

00:51:07.930 --> 00:51:12.900
like that. The PDPA is a more kind of a raw
tool kit API. It doesn't have this framework

00:51:12.900 --> 00:51:16.510
to set up schedules and admin UI versus the
connector framework that does give you that

00:51:16.510 --> 00:51:20.230
entire scheduling and things like that.
&gt;&gt; So would you have to like, set up, like,

00:51:20.230 --> 00:51:23.720
some sort Chrome script or…?
&gt;&gt; MANGTANI: That's right, if you really like

00:51:23.720 --> 00:51:27.799
PDPA using, I would simply like some small
kind of a Chrome, some script that just kicks

00:51:27.799 --> 00:51:31.410
off every--to allows it on whatever time.
&gt;&gt; Okay, great, thanks.

00:51:31.410 --> 00:51:34.869
&gt;&gt; MANGTANI: Cool.
&gt;&gt; I miss the initial part of this session,

00:51:34.869 --> 00:51:37.230
but my question is, in terms of searching
a rich marketing media like Flash, Content

00:51:37.230 --> 00:51:44.030
for a specific search term, where does the
approach or towards that kind of searches

00:51:44.030 --> 00:51:47.880
and indexes?
&gt;&gt; MANGTANI: So, we do, we do search Flash

00:51:47.880 --> 00:51:53.280
to a certain degree and it's getting better.
Actually, we announced our partnership on

00:51:53.280 --> 00:51:58.780
main Google, we work with Adobe to help index
the Flash. Because behind the Flash, kind

00:51:58.780 --> 00:52:02.900
of the rendering engine, there's the data
model which is the actual data. So, on main

00:52:02.900 --> 00:52:07.599
Google we did work with the Adobe team to
actually index the actual data model in data.

00:52:07.599 --> 00:52:12.470
We're working with the Adobe team to kind
of make it easier on the Search Appliance

00:52:12.470 --> 00:52:16.780
also. For other media types obviously we're
doing a lot of interesting things and this

00:52:16.780 --> 00:52:18.970
is kind of the benefit of being under the
Google umbrella. There's still lot of R&amp;D

00:52:18.970 --> 00:52:24.270
and this is not a fully solve problem, the
transcripts and videos and indexing and that

00:52:24.270 --> 00:52:29.140
stuff. Today, you can obviously if you have
a Meta data for a video: title, author date,

00:52:29.140 --> 00:52:33.510
tags; anything, you can push it using any
of our APIs and we'll index them and you can

00:52:33.510 --> 00:52:37.710
search it. We don't do any transcription.
There are some third party utilities available

00:52:37.710 --> 00:52:41.140
there. To allow you to do transcript and you
can also push it in the Search Appliance.

00:52:41.140 --> 00:52:44.730
So, those are the kind of three options for
you to have it manageable.

00:52:44.730 --> 00:52:47.500
&gt;&gt; Thank you.
&gt;&gt; MANGTANI: Okay.

00:52:47.500 --> 00:52:49.579
&gt;&gt; Well, yeah, are there any plans that expands
on the functionality of bundle on the Search

00:52:49.579 --> 00:52:56.569
Appliance and what I'm thinking of is, it
could be more of an alternative or something

00:52:56.569 --> 00:53:00.339
like SharePoint, fill in more of the Google
technology around portal apps and all--all

00:53:00.339 --> 00:53:03.400
the other things?
&gt;&gt; MANGTANI: So, that's a great question.

00:53:03.400 --> 00:53:08.740
The question is, do you guys plan to make
other functionalities as part of Search Appliance,

00:53:08.740 --> 00:53:13.230
like Google Apps, and things like that. So,
let me give you a quick introduction of what

00:53:13.230 --> 00:53:18.180
Google Apps is, Google Apps is our hosted
platform for document collaboration and document

00:53:18.180 --> 00:53:23.780
management, so we have applications like Google
docs, sites, spreadsheets and others. And

00:53:23.780 --> 00:53:28.549
we believe, you know, the Cloud gives us a
lot of benefits from scale excess to anywhere--any

00:53:28.549 --> 00:53:32.390
device, and that's why we want the leverage
our Cloud computing infrastructure to make

00:53:32.390 --> 00:53:36.130
it easier. Now, the Search Appliance, you
know, it's exclusively focused on the content

00:53:36.130 --> 00:53:40.790
that's behind the Firewall. So, we don't plan
to make those Cloud computing technologies

00:53:40.790 --> 00:53:44.819
in the Search Appliance. We want the Search
Appliance to be the conduit so that it can

00:53:44.819 --> 00:53:48.670
search everything that's in the Firewall as
well everything that's in the Cloud. If you

00:53:48.670 --> 00:53:52.880
want to use any for--kind of collaborative
tools, I encourage you to sign up for Google

00:53:52.880 --> 00:53:56.559
Apps, it's a hosted platform, and it gives
you much better benefits than, you know, to

00:53:56.559 --> 00:53:57.480
solve the other collaboration tools out there.
Go ahead.

00:53:57.480 --> 00:54:06.760
&gt;&gt; My question is along that Google Apps,
there's a recent article that was out in Fortune

00:54:06.760 --> 00:54:12.290
Magazine talking about, you know, white label
in that, so that the enterprise can bring

00:54:12.290 --> 00:54:18.490
those applications in--in-house and create
their own application around the base, you

00:54:18.490 --> 00:54:27.819
know, calendar, contacts, email; as a part
of the extension, the enterprise solution

00:54:27.819 --> 00:54:33.319
within Google and then integrating them into
existing applications within the enterprise.

00:54:33.319 --> 00:54:37.280
&gt;&gt; MANGTANI: You know, cheating, asking Apps
question in a GSS session? But luckily I have

00:54:37.280 --> 00:54:42.410
a friend of mine, I'm gonna call a friend
of mine, Gabe, do you mind giving a two minute

00:54:42.410 --> 00:54:51.520
quick--you can come or you can take the mic.
[pause]

00:54:51.520 --> 00:55:04.200
&gt;&gt; GABE: I sense what might be two different
questions, one was white labeling and bringing

00:55:04.200 --> 00:55:06.730
the Apps on Primas and other was integrating
them without Prima system. The latter one

00:55:06.730 --> 00:55:11.799
is a lot easier to address. The services that
you talked about, the calendar, mail, documents,

00:55:11.799 --> 00:55:16.099
et cetera, they have APIs. They basically
allow you to get to and manipulate and control

00:55:16.099 --> 00:55:29.250
the data within these applications, either
centrally or driven directly by users. And

00:55:29.250 --> 00:55:36.670
you can use those to integrate with on, Prima
system. So, we had a talk today on building

00:55:36.670 --> 00:55:41.109
Google, or building applications in the Cloud,
and it was strictly focused on doing document

00:55:41.109 --> 00:55:41.390
management through our APIs for those Cloud-managed
documents. Doing integration with like Microsoft

00:55:41.390 --> 00:55:41.890
office products directly, doing synch, those
sorts of things? So, that's our vision for

00:55:41.890 --> 00:55:47.020
how you do that integration. Is through those
[INDISTINCT] APIs and you can find out more

00:55:47.020 --> 00:55:52.220
about those on code site. As for actually
bringing these services in Primas, I think

00:55:52.220 --> 00:55:57.020
is--as we mentioned here, that's not something
that's really in the plan, we think that the

00:55:57.020 --> 00:56:01.059
strength of those applications is really that
they're offered on the Cloud, that they're

00:56:01.059 --> 00:56:04.510
universally accessible. That we can drive
updates, and send these applications in Real

00:56:04.510 --> 00:56:14.720
Time, so no plans along these lines.
&gt;&gt; MANGTANI: Thank you, thanks, Gab. It's

00:56:14.720 --> 00:56:17.280
good to have your friends around. Go ahead.
&gt;&gt; Hi, you talked about the data biasing features

00:56:17.280 --> 00:56:20.839
which I don't know if I understand entirely,
I haven't heard about them before, but I'm

00:56:20.839 --> 00:56:28.260
wondering whether it's possible to base the
identity of the user on external data sources

00:56:28.260 --> 00:56:31.930
like LDAP?
&gt;&gt; MANGTANI: You could, so there are two kind

00:56:31.930 --> 00:56:49.530
of--in some ways there are two distinct features.
One is the biasing feature in itself. [pause]

00:56:49.530 --> 00:57:21.329
Okay, we're back in--back in business. So
the question was, what are the biasing features

00:57:21.329 --> 00:57:26.559
and how does it relate to personalization.
So, the biasing feature basically allows you

00:57:26.559 --> 00:57:31.010
to say, I want to give higher importance to
search results that come from this particular

00:57:31.010 --> 00:57:36.079
Wiki or a FileShare or a website. So that's
the example of a biasing feature. Where you

00:57:36.079 --> 00:57:40.740
can give importance to a specific subset of
your documents and that can be based on a

00:57:40.740 --> 00:57:46.099
URL pattern, Meta data, date or some other
medium. There's a second feature of which

00:57:46.099 --> 00:57:48.750
you can create this biasing (ph) features,
instead of for the entire appliance one set

00:57:48.750 --> 00:57:54.270
of rules. You can create multiple policies
and then you can think about that each policy

00:57:54.270 --> 00:57:59.109
set can be tied to a different LDAP group.
You can create a policy set for engineering

00:57:59.109 --> 00:58:01.740
LDAP group, one policy set for marketing,
and one for sales and kind of deliver a different

00:58:01.740 --> 00:58:02.099
personalized search experience based on their
LDAP IDs. So, the short answer is yes, you

00:58:02.099 --> 00:58:10.609
can type it to your LDAP IDs the BOS piracy
policies. Go ahead.

00:58:10.609 --> 00:58:15.319
&gt;&gt; One of the things that we're exploring
is combining kind of traditional document

00:58:15.319 --> 00:58:20.780
Centric search with Semantic search. Example
would be, I'm a utility company, I want to

00:58:20.780 --> 00:58:26.710
know all of my transformers that are within
two weeks of needing service. So, assuming

00:58:26.710 --> 00:58:32.990
that we can deal with the connectivity through--well,
OneBox approach or connector approach, what's

00:58:32.990 --> 00:58:38.900
the best way to introduce different kinds
of language or keywords semantics into the

00:58:38.900 --> 00:58:41.420
search process? Would you recommend the best
practice for that?

00:58:41.420 --> 00:58:44.809
&gt;&gt; MANGTANI: Don't do anything, but I guess
the question is, you know, I--generally I'm

00:58:44.809 --> 00:58:50.230
not a big fan of doing a lot of manual tagging
and taxonomy, so--if that's what your question

00:58:50.230 --> 00:58:55.859
is inclining, my answer is don't waste your
time. The reason you are paying money to search

00:58:55.859 --> 00:59:00.119
renderers in providing the technologies is
that the algorithms should do the job, right?

00:59:00.119 --> 00:59:04.799
If you have to tag every single document and
put Meta tags and taxonomy, you can actually

00:59:04.799 --> 00:59:09.339
use the open source data base, you don't need
a search engine. The real benefit of having

00:59:09.339 --> 00:59:13.900
a true search engine, is this algorithms which
can find the right information, looking at

00:59:13.900 --> 00:59:18.280
query and looking at the raw text of the document
and actually, technology has become reasonably

00:59:18.280 --> 00:59:23.750
advanced, you know, in the--maybe ten years
ago, I know, a lot of the search renderer

00:59:23.750 --> 00:59:28.359
strongly recommended tagging and taxonomy,
it's no longer required. So, my recommendation

00:59:28.359 --> 00:59:31.799
is don't invest time on them.
&gt;&gt; Let me kind of follow up with that, is

00:59:31.799 --> 00:59:36.730
the difference is, it's not really a match
or a keyword; it's a relation. So, it's, you

00:59:36.730 --> 00:59:44.240
know, less than--almost sequel like, kinds
of things to be represented that the search

00:59:44.240 --> 00:59:47.250
requires. And again, I'm just curious as to
what is the best practice…

00:59:47.250 --> 00:59:50.619
&gt;&gt; MANGTANI: Yeah, no, no, so, you know, one
thing, I'll do a quick demo here on Google

00:59:50.619 --> 00:59:55.700
for example, and this is something again,
we do it on the Search Appliance also. I enter

00:59:55.700 --> 01:00:00.569
a query, Samuel Security and at the bottom
of it, you know, it says, search is related

01:00:00.569 --> 01:00:05.510
to Samuel Security. Samuel Soap Binding Liberty
Alliance, Samuel Token, or if I did some of

01:00:05.510 --> 01:00:12.210
the search for example, let say, just security.
You know, in the bottom of this thing, it

01:00:12.210 --> 01:00:16.770
will give you various related options, you
know, and you can able to look at book search

01:00:16.770 --> 01:00:20.650
for those, or if you can enter a more generic
query like cars and it'd give you various

01:00:20.650 --> 01:00:24.630
option. So, the technology is already there,
where we can look at the query, we can look

01:00:24.630 --> 01:00:29.190
at your results set and automatically give
you suggestions for related queries. And the

01:00:29.190 --> 01:00:32.530
same thing features are available on SearchPlants
it's called results clustering, it's called

01:00:32.530 --> 01:00:35.630
Dynamic Results Clustering, where we can cluster
these search results and give you the related

01:00:35.630 --> 01:00:42.520
terms and suggestions. So, I think we are
almost out of time, if any--then last questions,

01:00:42.520 --> 01:00:47.280
I'm happy to take, otherwise, I'm gonna be
outside and will be hanging around there.

01:00:47.280 --> 01:00:51.420
Any last questions? I guess not. So, well,
thank you so much for coming and it's great

01:00:51.420 --> 01:00:52.859
talking to you guys and thank you for bringing
those questions.

