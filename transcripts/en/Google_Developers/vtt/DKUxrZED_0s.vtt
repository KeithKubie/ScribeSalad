WEBVTT
Kind: captions
Language: en

00:00:01.430 --> 00:00:02.450
MARCO: OK.

00:00:02.450 --> 00:00:03.320
Hi, everyone.

00:00:03.320 --> 00:00:06.200
Thank you for
coming to this talk.

00:00:06.200 --> 00:00:07.470
My name is Marco.

00:00:07.470 --> 00:00:09.790
I'm a designer on Android.

00:00:09.790 --> 00:00:11.440
I lead the design
team that works

00:00:11.440 --> 00:00:15.062
on Google Play and the
core Android applications.

00:00:15.062 --> 00:00:16.020
KIRILL: And I'm Kirill.

00:00:16.020 --> 00:00:18.470
I'm a UI engineer on
the Google Play team,

00:00:18.470 --> 00:00:21.010
working mostly on the Store app.

00:00:21.010 --> 00:00:23.790
MARCO: Right, so
today, we're going

00:00:23.790 --> 00:00:26.850
to be talking about Google Play.

00:00:26.850 --> 00:00:29.530
Let's see how many people
use Google Play here,

00:00:29.530 --> 00:00:31.680
just to make sure that
everybody knows what it is.

00:00:31.680 --> 00:00:34.706
How many people use at least
one application in Google Play?

00:00:34.706 --> 00:00:35.206
Right.

00:00:35.206 --> 00:00:39.120
How many people use at least
two applications on Google Play?

00:00:39.120 --> 00:00:41.370
Three applications?

00:00:41.370 --> 00:00:43.710
The whole suite?

00:00:43.710 --> 00:00:45.920
Great, we have some fans.

00:00:45.920 --> 00:00:50.810
So for anyone who
didn't raise their hand,

00:00:50.810 --> 00:00:53.850
Google Play is basically, in
practice, six applications

00:00:53.850 --> 00:00:57.380
which they define the
media offering from Google.

00:00:57.380 --> 00:00:59.240
It's the store where
you purchase content,

00:00:59.240 --> 00:01:01.100
and it is a set of
applications where

00:01:01.100 --> 00:01:02.870
you enjoy the content
you purchased or you

00:01:02.870 --> 00:01:06.620
got for free, like books,
music, movies, magazines,

00:01:06.620 --> 00:01:08.580
and news and games.

00:01:08.580 --> 00:01:11.060
Today, we're going to talk
to you about a journey

00:01:11.060 --> 00:01:13.560
that our team took
about a year ago

00:01:13.560 --> 00:01:17.230
when we designed the Play
suite of applications.

00:01:17.230 --> 00:01:19.590
We think this is a very
interesting journey,

00:01:19.590 --> 00:01:22.960
because it talks about
some of the principles

00:01:22.960 --> 00:01:27.880
that we've shown yesterday
during the keynote, which

00:01:27.880 --> 00:01:30.320
is the One Adaptive Design.

00:01:30.320 --> 00:01:33.850
Our experience was basically
around thinking about a system

00:01:33.850 --> 00:01:36.090
that could scale
across all devices

00:01:36.090 --> 00:01:37.890
and that could be
consistently perceived

00:01:37.890 --> 00:01:41.550
as one suite-- as one
family of applications,

00:01:41.550 --> 00:01:45.960
where iconography, colors,
how the content is displayed,

00:01:45.960 --> 00:01:49.030
interaction, was
defined once to scale

00:01:49.030 --> 00:01:51.100
across all devices in
different platforms.

00:01:53.640 --> 00:01:55.620
This is how we should feel.

00:01:55.620 --> 00:01:58.090
It is multiple devices.

00:01:58.090 --> 00:02:01.130
In a sense, the UI is
scaling across them

00:02:01.130 --> 00:02:03.100
in a very consistent
and familiar way,

00:02:03.100 --> 00:02:04.600
where the interaction
doesn't change

00:02:04.600 --> 00:02:06.660
and where the user
is not surprised.

00:02:06.660 --> 00:02:09.370
There are problems that we face
today, where the experience is

00:02:09.370 --> 00:02:12.550
almost more important to be
defined across all devices,

00:02:12.550 --> 00:02:16.480
to be consistent, rather
than very specific for web

00:02:16.480 --> 00:02:18.230
versus iOS versus Android.

00:02:18.230 --> 00:02:20.190
Because we see users
scaling and moving

00:02:20.190 --> 00:02:24.560
across all devices
in a very fluid way.

00:02:24.560 --> 00:02:27.520
So this was Play in 2012.

00:02:27.520 --> 00:02:30.120
As you can see, they were
a set of applications

00:02:30.120 --> 00:02:33.040
not very consistent
with one another.

00:02:33.040 --> 00:02:35.980
And if you went to the
web, we had even yet

00:02:35.980 --> 00:02:38.420
another mental model,
another look and feel,

00:02:38.420 --> 00:02:40.200
and another approach
to interaction.

00:02:43.280 --> 00:02:47.260
The issues, in essence, were
the design wasn't consistent,

00:02:47.260 --> 00:02:49.770
the design didn't
scale, and one size

00:02:49.770 --> 00:02:53.200
couldn't fit all of our users.

00:02:53.200 --> 00:02:54.620
Design wasn't consistent.

00:02:54.620 --> 00:02:58.820
In essence, you see that even
the same content, like albums,

00:02:58.820 --> 00:03:00.980
would be represented
differently from web

00:03:00.980 --> 00:03:02.640
to devices to the store.

00:03:02.640 --> 00:03:04.410
We just had a lot of
interaction models.

00:03:06.940 --> 00:03:08.470
Design didn't scale.

00:03:08.470 --> 00:03:11.690
Because we had different
design for web and devices,

00:03:11.690 --> 00:03:14.770
we ended up having to design
the same feature multiple times.

00:03:14.770 --> 00:03:18.225
And this was taking a lot
of time from design side,

00:03:18.225 --> 00:03:20.350
where we had to be thinking
about the same feature,

00:03:20.350 --> 00:03:24.400
about how it would behave and be
implemented from an interaction

00:03:24.400 --> 00:03:26.150
design perspective
and visual design

00:03:26.150 --> 00:03:30.780
perspective on web
versus devices.

00:03:30.780 --> 00:03:35.090
And one size couldn't fit
all, because essentially, we

00:03:35.090 --> 00:03:38.810
didn't have a way to
display content dynamically.

00:03:38.810 --> 00:03:41.750
Especially on the store,
we had to draw tiles

00:03:41.750 --> 00:03:44.840
manually to recommend
content to our users.

00:03:44.840 --> 00:03:48.090
But we couldn't generate
content in a dynamic way

00:03:48.090 --> 00:03:51.320
to suggest content that was
really personalized to people,

00:03:51.320 --> 00:03:55.090
because there wasn't
a way to display it.

00:03:55.090 --> 00:03:57.680
So our goals that we
set up for this project

00:03:57.680 --> 00:04:01.570
were to create consistency
across Play applications,

00:04:01.570 --> 00:04:05.110
to have efficient layouts
across device and web,

00:04:05.110 --> 00:04:07.570
and to be able to populate
our content dynamically.

00:04:10.570 --> 00:04:12.260
So where did we start?

00:04:12.260 --> 00:04:15.200
We actually didn't start
by thinking about grids,

00:04:15.200 --> 00:04:17.899
and we didn't start
thinking about the spaces

00:04:17.899 --> 00:04:19.779
where the information
would live.

00:04:19.779 --> 00:04:21.690
We rather started
thinking about the models

00:04:21.690 --> 00:04:25.040
that we would use to
fill up our spaces.

00:04:25.040 --> 00:04:27.220
So what was our key component?

00:04:27.220 --> 00:04:29.370
Our key component was a card.

00:04:29.370 --> 00:04:32.950
Back then, as today, Google
was embracing this metaphor.

00:04:32.950 --> 00:04:35.790
And it felt for
us that if content

00:04:35.790 --> 00:04:39.710
is what we display most of the
time in our Play applications,

00:04:39.710 --> 00:04:42.280
a card felt like a very
good common denominator

00:04:42.280 --> 00:04:45.560
to display these
types of objects.

00:04:45.560 --> 00:04:48.490
It would be good to
display applications,

00:04:48.490 --> 00:04:54.070
to display albums and movies
and magazines and books-- even

00:04:54.070 --> 00:04:56.560
people or places.

00:04:56.560 --> 00:04:57.620
You name it.

00:04:57.620 --> 00:04:59.770
It was a very good
way to display objects

00:04:59.770 --> 00:05:02.370
and to sort of have this
common denominator that

00:05:02.370 --> 00:05:04.680
could make these
interactions across objects

00:05:04.680 --> 00:05:07.770
consistent-- the way you
would remove objects,

00:05:07.770 --> 00:05:10.850
the way you would add objects,
the way you would do actions

00:05:10.850 --> 00:05:13.080
with objects, could be
consistent no matter what

00:05:13.080 --> 00:05:15.780
these objects were and no
matter where they lived.

00:05:18.310 --> 00:05:21.590
The second item-- the
second structural item--

00:05:21.590 --> 00:05:23.560
that we thought about
were the canvases,

00:05:23.560 --> 00:05:27.820
which essentially are
where these objects live.

00:05:27.820 --> 00:05:31.100
A canvas is just a space,
and the [? gray ?] of Google

00:05:31.100 --> 00:05:36.090
is the color E5E5E5, which
lives in many different places

00:05:36.090 --> 00:05:38.270
of our applications.

00:05:38.270 --> 00:05:42.140
What we did, we started defining
our space divided in columns,

00:05:42.140 --> 00:05:47.510
so that the content could be
displayed in a similar fashion

00:05:47.510 --> 00:05:50.200
and across a grid
that was defined

00:05:50.200 --> 00:05:53.700
to scale across
multiple devices' width.

00:05:53.700 --> 00:05:56.690
So the more the device was
large, the more content

00:05:56.690 --> 00:05:58.820
we could display.

00:05:58.820 --> 00:06:00.550
And you could have
less or more content.

00:06:00.550 --> 00:06:02.470
It could be reordered.

00:06:02.470 --> 00:06:04.310
The content was
basically a living object

00:06:04.310 --> 00:06:05.240
into these canvases.

00:06:08.210 --> 00:06:09.850
It could change
according to context.

00:06:09.850 --> 00:06:13.700
It could be grouped in clusters,
as I'll show you later,

00:06:13.700 --> 00:06:17.660
or into this big long
list or big long grids,

00:06:17.660 --> 00:06:19.757
like in search result.

00:06:19.757 --> 00:06:21.090
It could be content like movies.

00:06:21.090 --> 00:06:23.240
It could be content like people.

00:06:23.240 --> 00:06:26.550
We have this view in our
Play games application.

00:06:26.550 --> 00:06:30.650
And a canvas didn't have to be,
necessarily, a gray background.

00:06:30.650 --> 00:06:33.860
A canvas is essentially anything
that is living underneath.

00:06:33.860 --> 00:06:36.489
In Play Movies, if you
played with this application,

00:06:36.489 --> 00:06:38.280
we have an awesome
feature where basically,

00:06:38.280 --> 00:06:40.960
when you pause the movie, we
identify who the actor is.

00:06:40.960 --> 00:06:43.866
We also identify if there's a
song playing in the background.

00:06:43.866 --> 00:06:44.740
And we tell the user.

00:06:44.740 --> 00:06:46.620
So here, we identify the actor.

00:06:46.620 --> 00:06:48.840
And you see, we show
a person's card,

00:06:48.840 --> 00:06:51.200
and we show a bunch
of movies where

00:06:51.200 --> 00:06:53.740
this actor has
been participating.

00:06:53.740 --> 00:06:55.680
And we do it in the
same, consistent way.

00:06:55.680 --> 00:06:57.480
The movie playing
is just a canvas

00:06:57.480 --> 00:07:00.720
where our content is
displayed dynamically.

00:07:00.720 --> 00:07:02.510
We do the same thing in books.

00:07:02.510 --> 00:07:05.910
When we select a word and
this word is a location,

00:07:05.910 --> 00:07:07.415
we identify that
being a location,

00:07:07.415 --> 00:07:09.640
and we show the location card.

00:07:09.640 --> 00:07:11.985
Even here, the
canvas is content.

00:07:15.200 --> 00:07:19.920
The third item in
our list were sizes.

00:07:19.920 --> 00:07:24.880
Obviously, a card that
looks of a certain size

00:07:24.880 --> 00:07:27.780
on a phone-- the same size
will be perceived smaller

00:07:27.780 --> 00:07:33.020
on bigger screens, simply
because the larger the canvas,

00:07:33.020 --> 00:07:35.610
the more the size will
be perceived small,

00:07:35.610 --> 00:07:38.630
versus the same size being
used on a smaller screen.

00:07:38.630 --> 00:07:40.160
So this is a tiny
card which we use

00:07:40.160 --> 00:07:42.830
on phone, which turns
into a small card which

00:07:42.830 --> 00:07:44.500
we use on tablets.

00:07:44.500 --> 00:07:47.600
And we started to find a bunch
of other different cards,

00:07:47.600 --> 00:07:52.420
because the cards need to
adapt to different layouts that

00:07:52.420 --> 00:07:55.870
need different characteristics,
like list views.

00:07:55.870 --> 00:08:01.014
We also defined sizes because
we needed hierarchy, as well.

00:08:01.014 --> 00:08:02.430
When we recommend
content, we like

00:08:02.430 --> 00:08:04.350
to say this is very
special for you.

00:08:04.350 --> 00:08:05.314
We make it very big.

00:08:05.314 --> 00:08:06.730
And we like to say
these are maybe

00:08:06.730 --> 00:08:08.438
other things you may
be interested about.

00:08:08.438 --> 00:08:09.590
This could be smaller.

00:08:09.590 --> 00:08:13.060
So sizes are super
important, and again,

00:08:13.060 --> 00:08:15.990
while the sizes change, the
interaction doesn't change.

00:08:15.990 --> 00:08:18.690
We always have those overflow
menus on those cards.

00:08:18.690 --> 00:08:21.160
We always have the same way
we present this content.

00:08:21.160 --> 00:08:24.210
You should almost feel like
the content is this card, which

00:08:24.210 --> 00:08:26.590
is expanding and moving
and twisting around.

00:08:26.590 --> 00:08:27.964
But it doesn't change.

00:08:27.964 --> 00:08:29.630
It's the same card,
even in a list view.

00:08:32.635 --> 00:08:34.260
Now, the other thing
were the clusters.

00:08:34.260 --> 00:08:37.390
So for the psychology
of perception,

00:08:37.390 --> 00:08:39.679
when I have multiple
items next to one another,

00:08:39.679 --> 00:08:42.220
obviously they will
perceive that as a group.

00:08:42.220 --> 00:08:44.210
And groups are important
to define areas

00:08:44.210 --> 00:08:48.460
where the user should
interact, or also collections.

00:08:48.460 --> 00:08:50.000
And you see here
where the hierarchy

00:08:50.000 --> 00:08:52.740
is preserved when we have
big items and smaller items.

00:08:52.740 --> 00:08:55.110
And you can also see that
when we defined the sizes,

00:08:55.110 --> 00:08:57.890
we made sure they were part
of the same modular system,

00:08:57.890 --> 00:09:01.420
so they could be plugged
into one another.

00:09:01.420 --> 00:09:03.830
We also made sure that
these sizes would make sense

00:09:03.830 --> 00:09:05.720
across all the devices we have.

00:09:05.720 --> 00:09:08.310
They would make sense on phones.

00:09:08.310 --> 00:09:11.850
They would make sense on
seven inch tablets, or 10 inch

00:09:11.850 --> 00:09:14.360
tablets and beyond--
including the web.

00:09:19.200 --> 00:09:20.980
Let's talk about
interaction now.

00:09:24.040 --> 00:09:25.010
We have websites.

00:09:25.010 --> 00:09:26.740
We have touchscreen devices.

00:09:26.740 --> 00:09:28.820
We think that interaction
should be consistent.

00:09:28.820 --> 00:09:33.240
The user shouldn't feel lost
when he goes between an Android

00:09:33.240 --> 00:09:36.219
device to an iOS
device to the web.

00:09:36.219 --> 00:09:38.510
Obviously, the web has a
different type of interaction,

00:09:38.510 --> 00:09:41.730
because you use a
mouse most of the time.

00:09:41.730 --> 00:09:43.900
But the pattern could
be still consistent.

00:09:43.900 --> 00:09:48.250
So we use a side navigation,
which is hidden on devices.

00:09:48.250 --> 00:09:52.510
You need to tap on what people
call the hamburger menu.

00:09:52.510 --> 00:09:54.550
But on web, we actually
leave it exposed,

00:09:54.550 --> 00:09:58.120
because we have more space.

00:09:58.120 --> 00:10:00.890
Also, you see that
the navigation menu

00:10:00.890 --> 00:10:03.940
provides the same
type of information.

00:10:03.940 --> 00:10:06.820
However, we did make some
differences to make sure

00:10:06.820 --> 00:10:10.210
that all the different
form factors could

00:10:10.210 --> 00:10:12.110
be the most efficient
as possible.

00:10:12.110 --> 00:10:13.780
So you see here,
playlist is exposed

00:10:13.780 --> 00:10:17.390
as a single destination
on devices to the right.

00:10:17.390 --> 00:10:19.280
But on the left and
web, the playlists

00:10:19.280 --> 00:10:21.680
are exposed in the
side navigation itself,

00:10:21.680 --> 00:10:23.980
so the user can drag
content into it,

00:10:23.980 --> 00:10:26.780
and we can facilitate
a faster interaction.

00:10:26.780 --> 00:10:29.860
Nevertheless, the positions
where you find your content,

00:10:29.860 --> 00:10:32.600
where you navigate, is
consistent across web

00:10:32.600 --> 00:10:35.380
and devices here.

00:10:35.380 --> 00:10:39.300
Let's look at another
example-- the tabs.

00:10:39.300 --> 00:10:40.780
If you're an Android
user, you know

00:10:40.780 --> 00:10:44.479
that we have swipey tabs, so you
can swipe from one to another.

00:10:44.479 --> 00:10:45.770
This doesn't happen on the web.

00:10:45.770 --> 00:10:48.880
It would be very difficult
to swipe with the mouse.

00:10:48.880 --> 00:10:52.640
But still, we have the same
information being displayed.

00:10:52.640 --> 00:10:58.190
In this example to the
right-- or to my left--

00:10:58.190 --> 00:11:02.720
I'm swiping to see genres
on touch screen devices.

00:11:02.720 --> 00:11:06.090
On the web, I need to
select a particular item

00:11:06.090 --> 00:11:07.492
and see a drop down list.

00:11:07.492 --> 00:11:09.200
So the interaction is
slightly different,

00:11:09.200 --> 00:11:11.160
but again, the
user will not feel

00:11:11.160 --> 00:11:16.110
lost, because the positioning
of those elements is consistent.

00:11:16.110 --> 00:11:17.760
We have menu buttons.

00:11:17.760 --> 00:11:20.740
On the web, we expose
them on rollover.

00:11:20.740 --> 00:11:23.310
This is the Play Music
experience on the web.

00:11:23.310 --> 00:11:25.180
But on devices, we
expose menu buttons

00:11:25.180 --> 00:11:29.190
at the single card level,
because we don't have rollover,

00:11:29.190 --> 00:11:31.630
obviously.

00:11:31.630 --> 00:11:34.350
On iOS, we'll have panels
that slide from the bottom,

00:11:34.350 --> 00:11:36.530
because this is the
typical iOS pattern.

00:11:36.530 --> 00:11:39.150
And we want to make
people feel at ease when

00:11:39.150 --> 00:11:41.150
they use our applications.

00:11:41.150 --> 00:11:44.040
On Android, we use
pop ups, because this

00:11:44.040 --> 00:11:45.170
is how Android does.

00:11:45.170 --> 00:11:46.970
Again, the interaction
is the same.

00:11:46.970 --> 00:11:49.310
The expressions of
this interaction

00:11:49.310 --> 00:11:51.965
may change slightly between
different platforms.

00:11:54.540 --> 00:11:55.760
So let's look at the outcome.

00:11:58.720 --> 00:12:00.685
These were our suite
of applications.

00:12:00.685 --> 00:12:04.110
These are our suite
of applications today.

00:12:04.110 --> 00:12:06.540
You see that the layouts
feel more consistent.

00:12:06.540 --> 00:12:11.720
We have the menu item
on top of every card.

00:12:11.720 --> 00:12:14.150
Everything is the
same mental model.

00:12:14.150 --> 00:12:17.736
You also can perceive how
we introduced a strong brand

00:12:17.736 --> 00:12:19.110
that we didn't
have before, which

00:12:19.110 --> 00:12:22.645
is communicating through
the use of strong colors.

00:12:22.645 --> 00:12:24.270
This is also another
element that we're

00:12:24.270 --> 00:12:26.550
pushing through
the material design

00:12:26.550 --> 00:12:28.890
this year, across
more applications.

00:12:28.890 --> 00:12:33.850
And the user, when
faces Play applications,

00:12:33.850 --> 00:12:35.190
should feel this is different.

00:12:35.190 --> 00:12:38.410
This is a part of
the same family.

00:12:38.410 --> 00:12:40.000
This is true for devices.

00:12:40.000 --> 00:12:43.020
This is true for web.

00:12:43.020 --> 00:12:46.440
Our layouts, we think,
are pretty responsive.

00:12:46.440 --> 00:12:50.630
You see in this example
how the same structure

00:12:50.630 --> 00:12:52.780
is contained across
multiple devices.

00:12:52.780 --> 00:12:56.146
Here, I'm recommended the Batman
movie because a friend of mine

00:12:56.146 --> 00:12:57.900
PlusOned it.

00:12:57.900 --> 00:13:00.400
And the Batman movie
is larger on devices

00:13:00.400 --> 00:13:02.052
like phones or tablets.

00:13:02.052 --> 00:13:03.510
But obviously, on
tablets, the card

00:13:03.510 --> 00:13:05.800
becomes much bigger,
because we want

00:13:05.800 --> 00:13:08.320
to maintain the hierarchy
on larger devices.

00:13:08.320 --> 00:13:11.320
And we need to make that card
to be louder than what we would

00:13:11.320 --> 00:13:15.600
do on devices like phones,
on smaller screens.

00:13:15.600 --> 00:13:18.010
It is modular, and it
tries to adapt to the user.

00:13:18.010 --> 00:13:20.400
You see, here, the
system is slightly

00:13:20.400 --> 00:13:23.460
moving the face of
this author in order

00:13:23.460 --> 00:13:25.670
to be displayed across
smaller screens.

00:13:25.670 --> 00:13:28.320
Obviously, we have
more space on tablets.

00:13:28.320 --> 00:13:31.162
But again, it is all
responsive, and the type

00:13:31.162 --> 00:13:32.620
of display-- the
type of experience

00:13:32.620 --> 00:13:35.710
you have-- is pretty
much the same.

00:13:35.710 --> 00:13:37.990
It is familiar.

00:13:37.990 --> 00:13:39.620
These two are
different applications.

00:13:39.620 --> 00:13:43.400
The one to my right is the
Play Books application.

00:13:43.400 --> 00:13:45.190
The other one is the store.

00:13:45.190 --> 00:13:47.790
But navigating between
two APKs doesn't

00:13:47.790 --> 00:13:49.990
have to feel like a very
different experience.

00:13:49.990 --> 00:13:53.440
You have ways to still
make your code efficient

00:13:53.440 --> 00:13:55.030
and build different
applications,

00:13:55.030 --> 00:13:56.740
and still make the
experience to be fluid

00:13:56.740 --> 00:14:00.021
when the user is navigating
between one application

00:14:00.021 --> 00:14:00.520
to another.

00:14:00.520 --> 00:14:03.210
We know we have people
going between consumption

00:14:03.210 --> 00:14:05.520
to purchases use
cases very often.

00:14:08.300 --> 00:14:11.750
And it is familiar when you
face new Play applications.

00:14:11.750 --> 00:14:13.710
Maybe you were the
Play music user.

00:14:13.710 --> 00:14:17.592
You want to see how the
Play Book applications work.

00:14:17.592 --> 00:14:19.300
We think that you're
going to be welcomed

00:14:19.300 --> 00:14:21.140
by a very similar
interface, and you're

00:14:21.140 --> 00:14:23.515
going to be feeling at home.

00:14:23.515 --> 00:14:24.834
It is responsive.

00:14:24.834 --> 00:14:26.500
Obviously, when you
have a larger space,

00:14:26.500 --> 00:14:29.970
you get more content
to be displayed.

00:14:29.970 --> 00:14:32.380
This is an example that
I particularly like,

00:14:32.380 --> 00:14:35.060
where you see that
on my right, we

00:14:35.060 --> 00:14:38.044
have a big card that wouldn't
fit on a landscape layout.

00:14:38.044 --> 00:14:39.710
So even here, we
maintain the hierarchy,

00:14:39.710 --> 00:14:41.690
but the card sort
of adjusts itself

00:14:41.690 --> 00:14:43.530
to display the
content to the right.

00:14:43.530 --> 00:14:45.510
Again, it should
really feel that as I'm

00:14:45.510 --> 00:14:49.415
stretching my windows
on a web browser,

00:14:49.415 --> 00:14:52.470
or as I'm changing my device,
almost as if magically

00:14:52.470 --> 00:14:55.070
the screen was changing sizes.

00:14:55.070 --> 00:14:57.107
All my cards are responsive.

00:14:57.107 --> 00:14:57.940
They change in size.

00:14:57.940 --> 00:15:02.720
They try to adapt to
whatever the form factor is.

00:15:02.720 --> 00:15:05.490
It works cross platform.

00:15:05.490 --> 00:15:06.610
It works on web.

00:15:06.610 --> 00:15:08.150
It works on Android.

00:15:08.150 --> 00:15:11.980
We recently introduced
those, a mobile web UI,

00:15:11.980 --> 00:15:13.830
which compared to
what we do on Android,

00:15:13.830 --> 00:15:17.510
feels pretty much
the same experience.

00:15:17.510 --> 00:15:20.210
It works on iOS, like
I've mentioned before.

00:15:20.210 --> 00:15:22.895
These are the Play
Music application

00:15:22.895 --> 00:15:24.770
compared between the
two different platforms.

00:15:27.470 --> 00:15:31.660
And now, I'm going to give
the controls to Kirill.

00:15:31.660 --> 00:15:34.250
He's going to teach
you some coding tricks

00:15:34.250 --> 00:15:37.020
and is going to talk more
about some of these principles.

00:15:37.020 --> 00:15:38.130
KIRILL: Thank you, Marco.

00:15:38.130 --> 00:15:41.060
So what Marco talked about is
this system that I would say

00:15:41.060 --> 00:15:42.970
is a pretty efficient
and flexible

00:15:42.970 --> 00:15:46.010
in presenting collections.

00:15:46.010 --> 00:15:47.930
So if you talk about
what we call a landing

00:15:47.930 --> 00:15:49.850
page of the store, where
we want to show you

00:15:49.850 --> 00:15:52.740
multiple collections
or items, top charts,

00:15:52.740 --> 00:15:55.780
my library in the
music, or search

00:15:55.780 --> 00:15:58.900
results in various applications.

00:15:58.900 --> 00:16:03.910
And we wanted to extend this
consistency and flexibility

00:16:03.910 --> 00:16:09.340
into additional places
where the users interact

00:16:09.340 --> 00:16:11.550
with our applications.

00:16:11.550 --> 00:16:15.800
So the first one is side
drawer, or navigation drawer,

00:16:15.800 --> 00:16:18.990
that was introduced a
year ago at I/O. And we've

00:16:18.990 --> 00:16:22.190
been slowly migrating-- a little
bit too slowly, if you will--

00:16:22.190 --> 00:16:27.360
we've been migrating our Play
apps to use the side drawer.

00:16:27.360 --> 00:16:31.260
And we do want to see
it-- at least, in the Play

00:16:31.260 --> 00:16:34.440
suite of apps-- as these, what
we call primary destinations.

00:16:34.440 --> 00:16:36.170
We don't want to overload it.

00:16:36.170 --> 00:16:38.560
We'd start scrolling and
scrolling and scrolling.

00:16:38.560 --> 00:16:41.020
We want to have something
like four, five, or maybe

00:16:41.020 --> 00:16:44.190
six primary destinations
within each app.

00:16:44.190 --> 00:16:48.430
And then we also put this kind
of secondary action-- settings,

00:16:48.430 --> 00:16:51.500
help, and feedback.

00:16:51.500 --> 00:16:54.310
And what happens
here is that once you

00:16:54.310 --> 00:17:01.610
know that you can swipe to the
left or tap that hamburger icon

00:17:01.610 --> 00:17:05.359
and see this navigation, you
will apply that knowledge.

00:17:05.359 --> 00:17:07.500
You will be at ease
across multiple apps--

00:17:07.500 --> 00:17:10.480
across pretty much all
apps in the Play suite.

00:17:10.480 --> 00:17:12.550
From the technical
implementation,

00:17:12.550 --> 00:17:15.369
we use the support library.

00:17:15.369 --> 00:17:20.960
Drawer layout itself is kind
of the implementation that

00:17:20.960 --> 00:17:22.930
allows you to slide
the thing from the left

00:17:22.930 --> 00:17:25.670
or from the right
on RTO layouts.

00:17:25.670 --> 00:17:28.049
And for integration
with action bar,

00:17:28.049 --> 00:17:30.290
the action bar drawer toggle.

00:17:30.290 --> 00:17:33.010
And we use a consistent
typography, iconography,

00:17:33.010 --> 00:17:36.470
and colors once again to kind
of enforce this consistency.

00:17:36.470 --> 00:17:39.010
But what this is
talking about, like

00:17:39.010 --> 00:17:41.110
the technical
implementation details.

00:17:41.110 --> 00:17:44.050
But what is more
important is that we

00:17:44.050 --> 00:17:46.550
do want to create this
consistent navigation

00:17:46.550 --> 00:17:48.480
model across all
our applications--

00:17:48.480 --> 00:17:52.220
to put the user at ease whenever
he is on Android or on iOS

00:17:52.220 --> 00:17:55.280
device or on the web.

00:17:55.280 --> 00:18:01.400
Swipey tabs, we use it in
conjunction with the ViewPager.

00:18:01.400 --> 00:18:03.420
Sometimes, we do want
to kind of present

00:18:03.420 --> 00:18:06.520
this multitab experience.

00:18:06.520 --> 00:18:08.650
On the left, if you
go from left to right,

00:18:08.650 --> 00:18:11.310
is different views into
your music collection,

00:18:11.310 --> 00:18:13.030
in the Play Music app.

00:18:13.030 --> 00:18:16.150
Then a single game
in the play games,

00:18:16.150 --> 00:18:19.210
just different parts
of the information

00:18:19.210 --> 00:18:20.720
that we want to present.

00:18:20.720 --> 00:18:24.210
And the two last ones
are various collections

00:18:24.210 --> 00:18:26.040
in the Play store app.

00:18:26.040 --> 00:18:27.520
So what we want
to have here is we

00:18:27.520 --> 00:18:30.390
want to have this
multitab experience.

00:18:30.390 --> 00:18:33.570
And we use ViewPager
from the support library

00:18:33.570 --> 00:18:35.980
that provides a very
nice, consistent way

00:18:35.980 --> 00:18:39.320
that you can swipe left
and right between the tabs.

00:18:39.320 --> 00:18:42.990
And we have our own
custom implementation

00:18:42.990 --> 00:18:46.330
of the tabs strip that you
can swipe left and right

00:18:46.330 --> 00:18:49.080
independently of
the tabs themselves.

00:18:49.080 --> 00:18:53.930
And we have this two way
binding to keep in sync, to keep

00:18:53.930 --> 00:18:57.270
the selection of the
view pager itself

00:18:57.270 --> 00:19:00.190
and the tab strip in sync.

00:19:00.190 --> 00:19:02.910
Once again, a little bit
of technical details,

00:19:02.910 --> 00:19:06.660
but what is most important
is that once the user knows

00:19:06.660 --> 00:19:12.310
that he or she can swipe left
and right the tab strip itself,

00:19:12.310 --> 00:19:15.840
that knowledge can be directly
applied to other offerings

00:19:15.840 --> 00:19:20.080
from our Play suite of apps.

00:19:20.080 --> 00:19:24.070
And this is what happens--
I think it's a nice touch.

00:19:24.070 --> 00:19:28.140
If you go from
left to right, you

00:19:28.140 --> 00:19:32.180
switch from the About tab
to the My Achievements tab.

00:19:32.180 --> 00:19:34.040
And in addition to
the content itself

00:19:34.040 --> 00:19:38.740
sliding from left to right, you
can also see in the title strip

00:19:38.740 --> 00:19:42.850
the thick, green
underline which signifies

00:19:42.850 --> 00:19:44.340
the currently selected tab.

00:19:44.340 --> 00:19:45.350
It also slides.

00:19:45.350 --> 00:19:47.820
Instead of jumping
immediately, it kind of

00:19:47.820 --> 00:19:49.930
slides to the
newly selected tab.

00:19:49.930 --> 00:19:53.650
And it also shrinks
or expands based

00:19:53.650 --> 00:19:58.600
on the relative widths
of these two tabs.

00:19:58.600 --> 00:20:02.080
And these are a little
bit of technical details.

00:20:02.080 --> 00:20:05.490
On every scroll event, we
compute the starting x position

00:20:05.490 --> 00:20:07.710
and the width of
this underlined.

00:20:07.710 --> 00:20:10.790
And we call invalidate
on the title strip.

00:20:10.790 --> 00:20:13.940
And then in onDraw, we
draw that green rectangle

00:20:13.940 --> 00:20:19.290
or whichever color is needed
for that specific content type.

00:20:19.290 --> 00:20:22.370
Once again, we want to be
consistent across our multiple

00:20:22.370 --> 00:20:27.170
apps and to kind of enhance
and enforce this consistency.

00:20:29.850 --> 00:20:34.210
Hero images are, I would
say, a very big part

00:20:34.210 --> 00:20:35.100
of material design.

00:20:35.100 --> 00:20:36.750
I think Marco will
agree with me.

00:20:36.750 --> 00:20:39.450
It's a very visually
rich and attractive way--

00:20:39.450 --> 00:20:42.360
if the images look
good, of course.

00:20:42.360 --> 00:20:45.910
It's a very attractive
way to frame your content,

00:20:45.910 --> 00:20:48.300
to position your content.

00:20:48.300 --> 00:20:51.500
And they would usually go-- I
would say they pretty much have

00:20:51.500 --> 00:20:54.960
to go at the top
of your content.

00:20:54.960 --> 00:20:58.160
In this sequence of
screenshots from left to right,

00:20:58.160 --> 00:21:01.420
you see an album page
in the Play Music app,

00:21:01.420 --> 00:21:04.510
a movie page in Play Movies,
a game page in Play Games,

00:21:04.510 --> 00:21:06.870
and an article in
Play Newsstand.

00:21:06.870 --> 00:21:09.340
And here, a couple
more screenshots

00:21:09.340 --> 00:21:12.795
from various places
in the Play Store app.

00:21:12.795 --> 00:21:16.680
Matias's profile, an
artist page, TV show page,

00:21:16.680 --> 00:21:20.130
and what we call an
editorial collection.

00:21:20.130 --> 00:21:22.390
So what you see here
is this hero image

00:21:22.390 --> 00:21:24.590
that goes edge to
edge horizontally,

00:21:24.590 --> 00:21:27.470
and also kind of goes
into the action bar.

00:21:27.470 --> 00:21:29.500
So what we want to do
with this action bar

00:21:29.500 --> 00:21:31.530
is instead of this
solid block of color

00:21:31.530 --> 00:21:34.010
that kind of hangs on
top of your content

00:21:34.010 --> 00:21:36.380
and is kind of a
little bit distracting,

00:21:36.380 --> 00:21:40.570
what we do here is we extend the
hero image into the action bar.

00:21:40.570 --> 00:21:43.080
We effectively remove
the action bar background

00:21:43.080 --> 00:21:46.940
while still showing the action
bar title and your navigation

00:21:46.940 --> 00:21:51.097
icons or our action bar icons.

00:21:51.097 --> 00:21:52.680
From the implementation
point of view,

00:21:52.680 --> 00:21:54.480
you request this window feature.

00:21:54.480 --> 00:21:59.310
And you call drawable set alpha
on your action bar background

00:21:59.310 --> 00:22:00.510
drawable.

00:22:00.510 --> 00:22:01.920
And that's it.

00:22:01.920 --> 00:22:04.580
The hero image, or
effectively, your content,

00:22:04.580 --> 00:22:06.600
will extend into the action bar.

00:22:06.600 --> 00:22:11.100
And that hero image,
you should make it not

00:22:11.100 --> 00:22:14.100
have black bars on top
and bottom, because that

00:22:14.100 --> 00:22:16.110
would look kind of ugly.

00:22:16.110 --> 00:22:17.950
And if you have these
attractive images,

00:22:17.950 --> 00:22:21.250
it's going to be a very
nice experience-- not only

00:22:21.250 --> 00:22:24.410
across Play, but you
can see how we conformed

00:22:24.410 --> 00:22:27.770
the specific part of
the material design.

00:22:27.770 --> 00:22:32.120
And in this particular example,
all the images that I've shown

00:22:32.120 --> 00:22:35.410
were kind of dark, which
provided a nice contrast

00:22:35.410 --> 00:22:39.980
to the white title
and the white icons.

00:22:39.980 --> 00:22:44.310
But you do want to create
kind of translucent black

00:22:44.310 --> 00:22:48.090
protection,
translucent gradient,

00:22:48.090 --> 00:22:50.540
along the top edge
of your hero image,

00:22:50.540 --> 00:22:52.620
so that if your
hero image is light,

00:22:52.620 --> 00:22:56.810
you still have enough contrast
to show those foreground

00:22:56.810 --> 00:22:58.260
elements on your action bar.

00:23:00.890 --> 00:23:03.990
Once you do start
scrolling it, we

00:23:03.990 --> 00:23:07.150
do it consistently
across Play, and I'm

00:23:07.150 --> 00:23:12.730
pretty sure that it applies
well beyond Play, once you start

00:23:12.730 --> 00:23:15.229
using hero images in
your applications.

00:23:15.229 --> 00:23:17.020
Once you do start
scrolling and you kind of

00:23:17.020 --> 00:23:22.260
have these individual items,
stacks, and maybe check marks,

00:23:22.260 --> 00:23:26.760
check boxes, spinners, kind of
scrolling below the action bar,

00:23:26.760 --> 00:23:28.020
you should make it opaque.

00:23:28.020 --> 00:23:31.030
You should crossfade
it to fully opaque.

00:23:31.030 --> 00:23:32.750
Otherwise, there's
too much noise

00:23:32.750 --> 00:23:36.650
when text is
crawling behind text.

00:23:36.650 --> 00:23:39.915
And from the
implementation perspective,

00:23:39.915 --> 00:23:44.060
you register a scroll listener
on your main container.

00:23:44.060 --> 00:23:46.720
It can be list view,
scroll view, recycler view.

00:23:46.720 --> 00:23:50.220
Or if you have a custom
container, you do that.

00:23:50.220 --> 00:23:52.840
You compute the alpha
of the action bar

00:23:52.840 --> 00:23:55.260
background drawable based
on how far you've scrolled

00:23:55.260 --> 00:23:57.550
and how tall the image is.

00:23:57.550 --> 00:24:00.100
And you call setAlpha.

00:24:00.100 --> 00:24:06.010
Another nice touch is deployed
consistently across all Play

00:24:06.010 --> 00:24:09.400
applications, once again, to
kind of enforce this feeling

00:24:09.400 --> 00:24:15.110
that we are all part of this
bigger suite of applications,

00:24:15.110 --> 00:24:21.500
is parallax scrolling, which
also extended into the material

00:24:21.500 --> 00:24:27.560
design, into what we
call the z-axis, where

00:24:27.560 --> 00:24:32.610
you have one or two elements on
the screen that feel that they

00:24:32.610 --> 00:24:35.130
are positioned a little
bit farther away from you

00:24:35.130 --> 00:24:36.850
or a little bit closer to you.

00:24:36.850 --> 00:24:40.270
So what happens if you
look at my face over there,

00:24:40.270 --> 00:24:42.730
and this stone arch?

00:24:42.730 --> 00:24:44.900
From left to right,
as I start scrolling,

00:24:44.900 --> 00:24:47.690
the vertical alignment
of these two images

00:24:47.690 --> 00:24:50.940
is a little bit different
from frame to frame.

00:24:50.940 --> 00:24:56.290
So what happens is that we
make the hero image scroll

00:24:56.290 --> 00:24:58.800
a little bit slower than
the rest of the content.

00:24:58.800 --> 00:25:00.600
Specifically, across
Play applications,

00:25:00.600 --> 00:25:04.820
we do it at half the rate, just
to be consistent, once again,

00:25:04.820 --> 00:25:06.550
across all our offerings.

00:25:06.550 --> 00:25:11.140
But this is not
something set in stone.

00:25:11.140 --> 00:25:13.780
You can experiment
with different values.

00:25:13.780 --> 00:25:18.180
It just gives a little
bit more interest.

00:25:18.180 --> 00:25:21.410
It adds a little bit
more flare to what

00:25:21.410 --> 00:25:25.110
happens when you start
scrolling this content.

00:25:25.110 --> 00:25:31.260
In the same scroll listener
that you have in the screen,

00:25:31.260 --> 00:25:33.130
in your fragment,
in your activity,

00:25:33.130 --> 00:25:37.370
what you do is--
what we do-- is let's

00:25:37.370 --> 00:25:40.520
say you scrolled it
up by 200 pixels.

00:25:40.520 --> 00:25:42.710
What we do, the hero
image itself, of course,

00:25:42.710 --> 00:25:45.320
is scrolled as part
of this main column.

00:25:45.320 --> 00:25:47.650
And we push it
down by 100 pixels.

00:25:47.650 --> 00:25:49.990
So what happens is that
while the rest of the content

00:25:49.990 --> 00:25:52.920
is scrolling at a certain
speed, the hero image

00:25:52.920 --> 00:25:56.320
is scrolling-- or appears to be
scrolling at half that speed.

00:25:56.320 --> 00:25:58.880
It appears to be a little
bit farther away from you,

00:25:58.880 --> 00:26:02.530
creating this kind of z offset--
that it appears to be somewhere

00:26:02.530 --> 00:26:05.700
there in the background,
while the main content here

00:26:05.700 --> 00:26:07.600
is closer to me.

00:26:10.330 --> 00:26:14.330
We also have this interaction
between hero images

00:26:14.330 --> 00:26:17.120
and the side drawer.

00:26:17.120 --> 00:26:19.130
We strongly feel
that side drawers

00:26:19.130 --> 00:26:24.320
should be this place
where you navigate

00:26:24.320 --> 00:26:27.540
between primary
destinations in your app.

00:26:27.540 --> 00:26:29.660
And so when you open
the side drawer,

00:26:29.660 --> 00:26:32.050
we want to kind of de-emphasize
the rest of the content.

00:26:32.050 --> 00:26:36.382
We want to kind of push it
a little bit away from you.

00:26:36.382 --> 00:26:39.390
You get it for free
from the side drawer,

00:26:39.390 --> 00:26:41.860
with this kind of
translucent black overlay,

00:26:41.860 --> 00:26:44.070
that you can see
that there's kind

00:26:44.070 --> 00:26:47.540
of a shade drawn on top
of the main content.

00:26:47.540 --> 00:26:51.470
In addition to that, we also
crossfade the action bar

00:26:51.470 --> 00:26:52.680
to fully opaque.

00:26:52.680 --> 00:26:55.180
So what happens here is you can
see that the hero image kind

00:26:55.180 --> 00:26:57.480
of goes even farther
away from you,

00:26:57.480 --> 00:27:00.160
and the content also
appears to kind of

00:27:00.160 --> 00:27:01.750
be pushed away from you.

00:27:01.750 --> 00:27:06.890
And the drawer kind of moves
a little bit closer to you.

00:27:06.890 --> 00:27:09.860
Once again, we want to be
consistent across all Play

00:27:09.860 --> 00:27:10.760
apps.

00:27:10.760 --> 00:27:12.050
And this is what we do.

00:27:12.050 --> 00:27:14.550
This is a specific
example in the Play store,

00:27:14.550 --> 00:27:18.730
but we do it everywhere
in the Play apps.

00:27:18.730 --> 00:27:23.070
And a little bit of
the technical details.

00:27:23.070 --> 00:27:26.580
On every slide event, we compute
the alpha of the background

00:27:26.580 --> 00:27:28.390
drawable of the
action bar, based

00:27:28.390 --> 00:27:31.540
on how far along you are
in this sliding motion

00:27:31.540 --> 00:27:36.470
and how far vertically you
are in your column of content.

00:27:36.470 --> 00:27:39.720
And now, back to Marco.

00:27:39.720 --> 00:27:40.680
MARCO: Thank you.

00:27:40.680 --> 00:27:46.100
So let's recap what we saw
and what we learn from it.

00:27:46.100 --> 00:27:49.035
This was the state
of Play in 2012.

00:27:49.035 --> 00:27:52.960
A lot of different applications,
different among themselves,

00:27:52.960 --> 00:27:55.590
different in the way
they were working

00:27:55.590 --> 00:27:59.390
on web versus Android devices.

00:27:59.390 --> 00:28:02.000
Our goals were to
create consistency,

00:28:02.000 --> 00:28:04.480
to have efficiency in the
way we design our layouts

00:28:04.480 --> 00:28:07.676
and we implement them, and
to be able to display content

00:28:07.676 --> 00:28:08.175
dynamically.

00:28:11.350 --> 00:28:12.880
This is where we
ended up, or this

00:28:12.880 --> 00:28:16.120
is where we ended
up until today.

00:28:16.120 --> 00:28:22.040
We have work going on and a lot
of things coming, of course.

00:28:22.040 --> 00:28:24.030
But you can see
what we achieved was

00:28:24.030 --> 00:28:27.230
to create a consistency and a
strong brand-- what we believe

00:28:27.230 --> 00:28:29.490
being a strong brand
that differentiated

00:28:29.490 --> 00:28:32.480
our applications from other
applications out there.

00:28:35.110 --> 00:28:41.010
They work across web,
with mobile versions,

00:28:41.010 --> 00:28:46.560
with the full, dynamic
population of content.

00:28:46.560 --> 00:28:50.300
We have the same
layouts working on iOS,

00:28:50.300 --> 00:28:53.577
respecting the iOS pattern,
but also bringing in the Google

00:28:53.577 --> 00:28:54.910
touch and the Google Play touch.

00:28:58.380 --> 00:29:02.500
And that's how we think people
should perceive our content.

00:29:02.500 --> 00:29:03.770
It's just about content.

00:29:03.770 --> 00:29:05.770
It's about colors,
about photography.

00:29:05.770 --> 00:29:10.190
It doesn't matter which
device you're using.

00:29:10.190 --> 00:29:12.630
What are the results?

00:29:12.630 --> 00:29:15.310
Certainly, we increased
the speed of execution.

00:29:15.310 --> 00:29:17.600
Before, we were spending
a lot of time getting

00:29:17.600 --> 00:29:19.660
the same features in
different applications--

00:29:19.660 --> 00:29:23.340
so between web and devices--
while at this point,

00:29:23.340 --> 00:29:25.750
we're very fast in defining
how things should work

00:29:25.750 --> 00:29:27.890
then make them work everywhere.

00:29:27.890 --> 00:29:30.020
Obviously, when you
support more platform,

00:29:30.020 --> 00:29:31.490
you need more developers.

00:29:31.490 --> 00:29:34.190
But we didn't increase largely
the number of designers,

00:29:34.190 --> 00:29:36.330
even if we started
having applications

00:29:36.330 --> 00:29:40.900
on iOS and other platforms
that we didn't support before.

00:29:40.900 --> 00:29:44.000
And we also saw more
collaboration among designers.

00:29:44.000 --> 00:29:46.820
We can have more people
focusing on a problem

00:29:46.820 --> 00:29:50.410
and tackling it and doing it
very well-- like introducing

00:29:50.410 --> 00:29:53.250
a new pattern and scaling
it across all applications,

00:29:53.250 --> 00:29:55.530
rather than having a
lot of designers working

00:29:55.530 --> 00:29:58.060
in their own desk to
solve a little problem

00:29:58.060 --> 00:30:00.593
for the little,
small application.

00:30:03.630 --> 00:30:05.160
So what is next?

00:30:05.160 --> 00:30:07.330
KIRILL: So we have four
additional sessions

00:30:07.330 --> 00:30:08.960
that I would recommend
you if you're

00:30:08.960 --> 00:30:12.800
interested in seeing where we're
going with material design.

00:30:12.800 --> 00:30:14.760
And specifically,
at 11 o'clock--

00:30:14.760 --> 00:30:18.380
I know we don't usually
talk about what's

00:30:18.380 --> 00:30:19.890
next in the pipeline.

00:30:19.890 --> 00:30:23.220
But if you do want to see
what Marco's team is doing,

00:30:23.220 --> 00:30:26.240
exploring, bringing Google
Play further into the material

00:30:26.240 --> 00:30:28.780
world-- if you had to
select one session,

00:30:28.780 --> 00:30:32.040
go to the 11 o'clock
session in this room.

00:30:32.040 --> 00:30:34.100
I really highly recommend it.

00:30:34.100 --> 00:30:36.540
I'm not going to say
anything more beyond that.

00:30:36.540 --> 00:30:39.390
And can you go to next slide?

00:30:39.390 --> 00:30:42.690
So we have the Android
design guidelines

00:30:42.690 --> 00:30:45.100
available at this URL.

00:30:45.100 --> 00:30:49.330
And in addition, yesterday,
we've published a kind of cross

00:30:49.330 --> 00:30:51.440
Google or material
design guidelines

00:30:51.440 --> 00:30:54.510
at google.com/design.

00:30:54.510 --> 00:30:57.870
Your feedback is
highly appreciated.

00:30:57.870 --> 00:30:59.730
This QR code or this short link.

00:30:59.730 --> 00:31:03.480
And additional sessions
from this year's I/O

00:31:03.480 --> 00:31:06.300
and the previous
year's conferences

00:31:06.300 --> 00:31:09.140
is available on the
Google Developers channel.

00:31:09.140 --> 00:31:11.900
And here, we would like to
thank you for your time today.

00:31:11.900 --> 00:31:13.820
You can find us on Google+.

00:31:13.820 --> 00:31:15.242
And thank you for your time.

00:31:15.242 --> 00:31:15.950
MARCO: Thank you.

00:31:15.950 --> 00:31:21.280
KIRILL: And we have 12 minutes,
34 seconds for questions.

00:31:21.280 --> 00:31:25.160
There are two mics, over
here, and left and right.

00:31:25.160 --> 00:31:27.707
Thank you, once again.

00:31:27.707 --> 00:31:31.200
[APPLAUSE]

00:31:35.700 --> 00:31:36.830
MARCO: Questions?

00:31:36.830 --> 00:31:38.860
No questions?

00:31:38.860 --> 00:31:40.110
Do you want to go to the mic?

00:31:46.259 --> 00:31:48.160
AUDIENCE: Uh, hello.

00:31:48.160 --> 00:31:50.355
Mehmet from Chicago,
Content Direct.

00:31:50.355 --> 00:31:54.790
I have a question about
the side drawer menu.

00:31:54.790 --> 00:31:59.280
What do you think about
categorized side drawer menus?

00:31:59.280 --> 00:32:03.800
From your design, you have
each menu element on its own.

00:32:03.800 --> 00:32:07.410
But some of the apps use a
more categorized approach,

00:32:07.410 --> 00:32:11.730
where they say these are
your home side menus,

00:32:11.730 --> 00:32:16.750
and these are your different
playlists under a playlist tab.

00:32:16.750 --> 00:32:18.610
So they are more categorized.

00:32:18.610 --> 00:32:21.317
What do you think
about this approach?

00:32:21.317 --> 00:32:22.650
MARCO: Can I take this question?

00:32:22.650 --> 00:32:23.990
Yeah?

00:32:23.990 --> 00:32:26.840
I don't think there's
one rule to fit them all.

00:32:26.840 --> 00:32:28.570
On Play, specifically,
we decided

00:32:28.570 --> 00:32:32.320
to only expose the main areas.

00:32:32.320 --> 00:32:34.650
There are other
applications that

00:32:34.650 --> 00:32:37.840
expose a more granular list.

00:32:37.840 --> 00:32:41.220
I think it's important, if you
have a series of applications,

00:32:41.220 --> 00:32:43.260
to be consistent
within yourselves.

00:32:43.260 --> 00:32:45.570
So if we had one Play
application going

00:32:45.570 --> 00:32:48.250
one way, another Play
application going another way,

00:32:48.250 --> 00:32:50.030
that probably
would be confusing.

00:32:50.030 --> 00:32:53.300
But there isn't
really a rule for what

00:32:53.300 --> 00:32:55.390
to put in the side nav
in terms of destination.

00:32:55.390 --> 00:32:57.440
There is a rule,
which is we should

00:32:57.440 --> 00:33:00.340
try not to put actions
in the side nav.

00:33:00.340 --> 00:33:03.740
We should respect the overflow
menu and the actions being

00:33:03.740 --> 00:33:06.640
exposed in the action bar
or in the viewing itself,

00:33:06.640 --> 00:33:09.270
and use the side nav
purely for destinations.

00:33:09.270 --> 00:33:13.200
But whether the destination
is singular playlist,

00:33:13.200 --> 00:33:16.070
or it is the whole
playlist area as a whole,

00:33:16.070 --> 00:33:18.590
there isn't really
a special rule.

00:33:18.590 --> 00:33:21.140
I think it's up to the
designer and to the developer

00:33:21.140 --> 00:33:24.580
to define based on
their experience.

00:33:24.580 --> 00:33:25.440
AUDIENCE: Thank you.

00:33:25.440 --> 00:33:27.189
KIRILL: Yeah, and you
don't want to end up

00:33:27.189 --> 00:33:31.320
with what happened in the late
'90s in desktop applications,

00:33:31.320 --> 00:33:34.470
when they kind of had this
Tools menu-- where they just

00:33:34.470 --> 00:33:35.930
threw random items
that didn't have

00:33:35.930 --> 00:33:38.630
any connection with each other,
because there was no better

00:33:38.630 --> 00:33:40.830
place, if you will,
to throw them.

00:33:40.830 --> 00:33:44.177
So the side drawer is not
supposed to be a junk drawer.

00:33:44.177 --> 00:33:46.635
MARCO: Yeah, something you can
do is also create hierarchy.

00:33:46.635 --> 00:33:48.390
As you see in our
side navigation,

00:33:48.390 --> 00:33:51.260
we tried to create some
hierarchy between Settings

00:33:51.260 --> 00:33:53.590
and Send Feedback
and things like that,

00:33:53.590 --> 00:33:55.610
versus the main
destinations, which

00:33:55.610 --> 00:33:58.210
we tried to highlight more.

00:33:58.210 --> 00:34:02.209
KIRILL: Yeah, with
typography and sizing.

00:34:02.209 --> 00:34:04.000
AUDIENCE: Since we're
talking side drawers,

00:34:04.000 --> 00:34:05.708
I've seen a couple
usability studies that

00:34:05.708 --> 00:34:08.850
say there's about a 50% drop off
in discoverability of the side

00:34:08.850 --> 00:34:10.650
drawer menu items versus tabs.

00:34:10.650 --> 00:34:13.310
Do you have any experience
or additional data points

00:34:13.310 --> 00:34:14.251
in that area?

00:34:14.251 --> 00:34:14.750
MARCO: Mhm.

00:34:14.750 --> 00:34:17.929
You know, I definitely
agree with that.

00:34:17.929 --> 00:34:22.090
And I don't think it's new-- I
don't think you need a genius

00:34:22.090 --> 00:34:24.880
to write those sorts of
articles, because clearly,

00:34:24.880 --> 00:34:28.219
if you hide items
inside a button,

00:34:28.219 --> 00:34:30.330
you're going to
have less engagement

00:34:30.330 --> 00:34:32.780
than if those
items were exposed.

00:34:32.780 --> 00:34:35.840
This is also true if you have
actions in the overflow menu,

00:34:35.840 --> 00:34:36.929
rather than being exposed.

00:34:36.929 --> 00:34:38.220
They will have less engagement.

00:34:38.220 --> 00:34:41.600
So obviously, yes,
this is an heuristic.

00:34:41.600 --> 00:34:44.940
If you see, the way we tackle
this on our applications

00:34:44.940 --> 00:34:47.905
is that the side nav, yes,
does have all the destinations

00:34:47.905 --> 00:34:49.070
you can go to.

00:34:49.070 --> 00:34:50.900
But we also expose,
most of the time,

00:34:50.900 --> 00:34:53.650
those destinations
in the main view.

00:34:53.650 --> 00:34:56.020
So for example, if
you're in the store,

00:34:56.020 --> 00:34:57.670
we do have a people section.

00:34:57.670 --> 00:35:00.750
But if you have friends, we
also expose an explore cluster

00:35:00.750 --> 00:35:02.430
in your main destination.

00:35:02.430 --> 00:35:04.670
Or if you see what
we do on Newsstand,

00:35:04.670 --> 00:35:07.290
we'll have introduced a
bunch of different tabs

00:35:07.290 --> 00:35:10.230
for you to read all the
different sections you have.

00:35:10.230 --> 00:35:12.670
And in the side nav,
really what we leave

00:35:12.670 --> 00:35:16.620
is A, a clear and consistent
way to see what we have,

00:35:16.620 --> 00:35:20.010
despite what is present
in the main navigation,

00:35:20.010 --> 00:35:20.980
in the main page.

00:35:20.980 --> 00:35:25.100
But also, destinations that
we think are less important

00:35:25.100 --> 00:35:26.990
and they shouldn't have
a lot of engagement.

00:35:26.990 --> 00:35:29.430
So for instance, if you
have a destination which

00:35:29.430 --> 00:35:31.340
is about library
management, it's

00:35:31.340 --> 00:35:33.780
fine to be in the side nav,
because how many times do you

00:35:33.780 --> 00:35:36.880
go to a destination
to delete an album

00:35:36.880 --> 00:35:39.440
or to do other things with this?

00:35:39.440 --> 00:35:42.650
But certainly, your main
experience is where you land,

00:35:42.650 --> 00:35:44.850
and there are ways to
connect the dots, even

00:35:44.850 --> 00:35:47.654
in the same main
experience, without having

00:35:47.654 --> 00:35:49.070
to go through the
side navigation.

00:35:49.070 --> 00:35:52.370
The side navigation can almost
be a tree of all the things

00:35:52.370 --> 00:35:53.960
that you have within
your application.

00:36:00.980 --> 00:36:03.040
KIRILL: All right,
looks like we're done.

00:36:03.040 --> 00:36:03.797
MARCO: OK.

00:36:03.797 --> 00:36:05.380
If you want to talk
to us, we're going

00:36:05.380 --> 00:36:07.190
to stay here for
seven more minutes.

00:36:07.190 --> 00:36:09.500
KIRILL: Yeah, I'll be
out in the hallway.

00:36:09.500 --> 00:36:11.020
MARCO: Cool, thank
you very much.

00:36:11.020 --> 00:36:11.920
Thank you.

00:36:11.920 --> 00:36:15.115
[APPLAUSE]

