WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:05.895
So let's look at our answer
to the UMA/SMP quiz.

00:00:05.895 --> 00:00:10.140
We want to have a lot of cores
with this type of architecture,

00:00:10.140 --> 00:00:12.310
so what are the problems
that we'll have to face?

00:00:13.540 --> 00:00:15.920
The memory will need to be large and
slow.

00:00:15.920 --> 00:00:20.518
And that's because having more
cores usually means that we will be

00:00:20.518 --> 00:00:23.401
running programs that access more data.

00:00:23.401 --> 00:00:27.895
And we need to keep the data somewhere,
so we will need to have a large memory.

00:00:27.895 --> 00:00:29.519
And that makes the memory slow.

00:00:29.519 --> 00:00:33.980
Next, that memory will get too
many accesses per second because

00:00:33.980 --> 00:00:38.590
the cache misses from all of
the cores will be going to memory.

00:00:38.590 --> 00:00:45.360
If one of the cores generates cache
misses that he memory can survive doing.

00:00:45.360 --> 00:00:47.490
Two of them, it might still survive.

00:00:47.490 --> 00:00:51.830
But if we have a lot of cores our
memory will probably not be able to

00:00:51.830 --> 00:00:54.100
keep up with all of those accesses.

00:00:54.100 --> 00:00:58.340
We'll need a lot of small memory
modules, not necessarily.

00:00:58.340 --> 00:01:04.099
The number of memory modules in
a centralized memory doesn't matter.

00:01:04.099 --> 00:01:06.540
What is really needed is
to have enough memory for

00:01:06.540 --> 00:01:09.830
all the cores to get
enough data in there and

00:01:09.830 --> 00:01:13.920
the memory that will keep up with
the bandwidth demands of the cores.

00:01:13.920 --> 00:01:17.310
How many modules we have
doesn't really matter.

00:01:17.310 --> 00:01:19.360
Caches will have very small block size.

00:01:19.360 --> 00:01:21.560
This is not true either.

00:01:22.650 --> 00:01:27.490
All of the caches and all the cores
can have any block size they want.

00:01:27.490 --> 00:01:30.940
The block size is not
divided among the cores.

00:01:32.080 --> 00:01:34.550
Pages for
virtual memory become too small.

00:01:34.550 --> 00:01:35.680
Same thing.

00:01:35.680 --> 00:01:38.650
We can have any page size we want.

00:01:38.650 --> 00:01:43.270
Having more or fewer cores doesn't
affect the page size in virtual memory.

00:01:43.270 --> 00:01:46.570
So, the only options you should
have selected are the first two.

