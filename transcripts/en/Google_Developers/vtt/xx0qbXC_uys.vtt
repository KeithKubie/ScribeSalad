WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.400
&gt;&gt; So I'm going to talk about authentication.
But before I do, I want to show you guys something

00:00:04.400 --> 00:00:09.480
kind of cool.
&gt;&gt; [INDISTINCT]

00:00:09.480 --> 00:00:15.340
&gt;&gt; The--change the apple color blue? All right.
I don't know how many of you guys know but--or

00:00:15.340 --> 00:00:21.630
noticed we made a Wave post where we shared
some UI mock-ups a little while here. So this

00:00:21.630 --> 00:00:28.900
was some UI mock-up that I'll--that the Wave
design I made as to how we would might consider

00:00:28.900 --> 00:00:34.500
of redesigning Wave. This was made around
Christmas time, you know, while Wave was working.

00:00:34.500 --> 00:00:37.530
No one was actually intending to implement
any of this stuff but I really, really liked

00:00:37.530 --> 00:00:42.280
it and I was working as an intern at that
time. So I thought it was cool, so I--so we've

00:00:42.280 --> 00:00:47.310
now opened these mocks up. And, yeah, isn't
it pretty, as in us?

00:00:47.310 --> 00:00:52.920
&gt;&gt; Yey.
&gt;&gt; So I managed to strong-arm one of my friends

00:00:52.920 --> 00:01:01.489
into making this, which doesn't look very
good at this resolution but this is an html

00:01:01.489 --> 00:01:07.360
mock-up of exactly that, you know, or is that
redesign. I've kind of changed around how

00:01:07.360 --> 00:01:11.900
this bar works. We need to clean up the CSS
a little bit, but, yeah--that like it's all

00:01:11.900 --> 00:01:15.320
sort of nice. And if I can convince people
who know enough, and maybe even myself, I

00:01:15.320 --> 00:01:19.970
recommend that it would be really nice to
get a design like this into Wave in a Box

00:01:19.970 --> 00:01:24.930
and actually make it look really pretty. So
we could take this and then put obviously

00:01:24.930 --> 00:01:34.270
the undercurrent Wave client, you know, Wave
panel into box, so, yeah. So that's what I

00:01:34.270 --> 00:01:36.829
want to show you guys. Cool.
&gt;&gt; It's great.

00:01:36.829 --> 00:01:44.190
&gt;&gt; Thanks. All right. So I'm going to talk
about authentication. So the way authentication

00:01:44.190 --> 00:01:48.460
works--so I've implemented authentication
in Wave in a Box and it's really something

00:01:48.460 --> 00:01:56.070
simple. So if I pull up my likely running
Wave in a Box instance, which I think is still

00:01:56.070 --> 00:02:15.980
running. If it is. Yeah. So the--ah, that's
not you. All right. So I can login. So this

00:02:15.980 --> 00:02:21.249
is the login box, the sound authentication
box. We toss and turned, like, we thought

00:02:21.249 --> 00:02:24.760
about doing some kind of crazy authentication
system but eventually settled on just really,

00:02:24.760 --> 00:02:32.809
really standard, you know, you got a web app
login. So the way this works is when you login

00:02:32.809 --> 00:02:38.739
you get a cookie. The cookie has a hash card,
which is--yeah, the cookie is in a hash on

00:02:38.739 --> 00:02:44.409
the server. And in every request it looks
up the hash and that's how I can tell who

00:02:44.409 --> 00:02:51.709
she's logged in as. Really simple stuff. So
if I ask Chrome to inspect this, I can look

00:02:51.709 --> 00:02:59.909
at the storage and I've got no cookies. And
if I sign in, then what this page does will--it

00:02:59.909 --> 00:03:04.739
will store a cookie with the Java session.
JAAS does that for us and then we'll redirect.

00:03:04.739 --> 00:03:12.980
So, yeah, if I go back to the authentication
page, then we can also--the page will also

00:03:12.980 --> 00:03:19.839
supports a redirect URL so if any pages or
any servers you guys decide to make you want

00:03:19.839 --> 00:03:22.969
authentication, and if these is not authenticated
you can bounce these onto the authentication

00:03:22.969 --> 00:03:28.760
page, specify a redirect URL if they are authenticated.
And once they are authenticated, it will just

00:03:28.760 --> 00:03:33.609
redirect straight back to wherever it came
from. So, really, really simple thing. Yeah.

00:03:33.609 --> 00:03:38.629
I assume everyone's seen this before. Nothing
new, it's all standard and quite boring. So

00:03:38.629 --> 00:03:42.560
I want to show you guys how it works on the
server's side, specifically because I think

00:03:42.560 --> 00:03:47.290
a lot of people want to, you know, think about
deploying this stuff in the enterprise. And

00:03:47.290 --> 00:03:49.639
if you're deploying it in the enterprise,
obviously, you probably want to hit single

00:03:49.639 --> 00:03:55.269
sign on, use smart card authentication, use
LDAP or whatever you want to do and will design

00:03:55.269 --> 00:03:58.519
that--or design it to make it--really easy
for you guys to do that but there's a few

00:03:58.519 --> 00:04:03.170
bits and pieces that you need to understand.
So I made a slide deck. And by slide deck

00:04:03.170 --> 00:04:09.779
I mean I have a slide, which I'll show you.
May be big. So for the server side authentication--the

00:04:09.779 --> 00:04:18.060
server side authentication, we are using Java's
JAAS, which stands for Java Authentication

00:04:18.060 --> 00:04:20.280
and...
&gt;&gt; Authorization.

00:04:20.280 --> 00:04:27.520
&gt;&gt; Oh, and Authorization Service or Security
something. Anyway, it's Java's--like it's

00:04:27.520 --> 00:04:31.850
a standard way to do authentication stuff
at Java. There's three concepts you need to

00:04:31.850 --> 00:04:38.560
understand. Is this better? Yes. There's three
concepts you need to understand to understand

00:04:38.560 --> 00:04:41.270
JAAS and anything based on it. And there's
three concepts. So you have here a subject,

00:04:41.270 --> 00:04:46.229
the principal and a login module. So--and
they're always really simple. The subject

00:04:46.229 --> 00:04:51.919
is just the person so that's you or me or
whatever. The principal is where it's more

00:04:51.919 --> 00:04:55.570
[INDISTINCT]. The principal is the right that
you have. So, for example, I've got a GitHub

00:04:55.570 --> 00:05:02.730
account and I'm the subject when I log in
to GitHub. And the principal on GitHub is

00:05:02.730 --> 00:05:08.699
my--is the access to the Joseph G GitHub account.
So that's what the principal means, it's like

00:05:08.699 --> 00:05:12.939
your access. So if you've got an active directory
server, then your principal is that you've

00:05:12.939 --> 00:05:17.440
got a valid login on the active directory
server. And finally, there's the idea of a

00:05:17.440 --> 00:05:21.690
login module. And a login module will just
provides a principal to a subject. So, a login

00:05:21.690 --> 00:05:27.430
module--oh, sorry, yeah. So if you log in
to a login module, the login module will say,

00:05:27.430 --> 00:05:33.979
"Hey, to login, I'm going to need your active
directory account name and domain and so on

00:05:33.979 --> 00:05:37.431
and password." And then if you provide it
that then the login module will provide the

00:05:37.431 --> 00:05:43.090
subject that you've given it with the principals
or whatever account that you specified. And

00:05:43.090 --> 00:05:48.580
that's JAAS. That's the, you know, that's
the theory behind it. So, the way it's implemented

00:05:48.580 --> 00:05:51.130
in the server is it's really sort of as simple
as we could possibly make it. Resolution.

00:05:51.130 --> 00:05:59.979
There's a config file which is called JAAS.config.
It just exists in the directory of the server.

00:05:59.979 --> 00:06:05.819
This is a standard JAAS thing. So if you Google,
like, JAAS example, you know, config file

00:06:05.819 --> 00:06:10.060
or something, you'll get a whole bunch of
different files. The files specifies, first

00:06:10.060 --> 00:06:15.199
of all, that this is the way--it's Wave that
you're logging into so that must stay the

00:06:15.199 --> 00:06:18.980
same. Then it specifies the class name, fully
qualified class name for the login module

00:06:18.980 --> 00:06:23.330
that you want to use for your application.
In this case where I've got a custom account

00:06:23.330 --> 00:06:28.280
stall login module and the account stall login
module pulls up your user from the database

00:06:28.280 --> 00:06:32.130
and then checks your password. That's all
it does. But if you want to have an LDAP-based

00:06:32.130 --> 00:06:35.409
login module or something then it's reasonably
easy. All you need to do is swap that out

00:06:35.409 --> 00:06:40.689
for either your LDAP-based login module or
one that someone's provided. And after that

00:06:40.689 --> 00:06:43.569
you can specify some options. So if you're
using active directory, then you specify the

00:06:43.569 --> 00:06:48.469
domain and, you know, I think a shared secret
with the LDAP provider or something. This

00:06:48.469 --> 00:06:53.129
covers login modules, there's login modules
for all sorts of different things. And I hope

00:06:53.129 --> 00:06:58.969
somebody feels game to make a login module
that will work with XMPP. And I might just

00:06:58.969 --> 00:07:03.279
have to do something horrible like forwarding--just
trying to login as the user that you've connected

00:07:03.279 --> 00:07:08.530
as to the local XMPP server and then disconnect
immediately but just to see if that user's

00:07:08.530 --> 00:07:13.240
valid since there's no easy way to do authentication
through XMPP. But if something like that happened

00:07:13.240 --> 00:07:18.360
it would mean that Java integration would
work a lot better. I mean, if people have--if

00:07:18.360 --> 00:07:22.960
you're using a Java server, then your Wave
users would also be Java users and all will

00:07:22.960 --> 00:07:27.249
just work seamlessly. Anyway, so you can specify
the login module and then you say that it's

00:07:27.249 --> 00:07:32.690
required because users have to log in to that
module to be able to log in and try on debugging.

00:07:32.690 --> 00:07:36.510
So that's the JAAS config file. So I haven't
actually played around with changing this.

00:07:36.510 --> 00:07:41.289
I don't have an active directory server handy.
I don't--I haven't done the XMPP yet. So if

00:07:41.289 --> 00:07:45.180
anyone feels game--and please, please somebody
feel game, multiple people feel game, play

00:07:45.180 --> 00:07:49.909
around with this stuff. It should be pretty
easy to do. Then that would be wonderful.

00:07:49.909 --> 00:07:54.690
So, the login module is here and this--almost
all of this stuff [INDISTINCT]. So if you've

00:07:54.690 --> 00:07:58.669
got like, example, JAAS login module, you
got almost this exact same class but with

00:07:58.669 --> 00:08:06.009
a couple of things changed. And the main paydirt
is this login function. And so for this login

00:08:06.009 --> 00:08:12.219
module, what it says is--it says, "We're going
to need a name and a password." So the login

00:08:12.219 --> 00:08:15.069
module has given an object that it can query
for the name or the password and the subject's

00:08:15.069 --> 00:08:22.809
populated from the post data that the user
sends. It says, "Ask the--ask the login data

00:08:22.809 --> 00:08:27.509
for the user name and password," and then
it goes to a series of steps where it tries

00:08:27.509 --> 00:08:33.279
to grab the user account of the account store.
Make sure that it's a human and not a robot

00:08:33.279 --> 00:08:39.110
and then checks that the password matches.
And if it does the user logs in. So there's

00:08:39.110 --> 00:08:41.930
really only two classes you need to know to
understand authentication. There's that one

00:08:41.930 --> 00:08:47.550
and there's authentication server which does
all of the actual work. And this, you know,

00:08:47.550 --> 00:08:56.190
this class is--does the whole login page.
And mostly it's really, really simple. Dopost

00:08:56.190 --> 00:09:00.649
is the actual method that logs in and all
it really does is call login and log in the

00:09:00.649 --> 00:09:04.700
first thing as an exception if you're not
logged at--or if, yeah, if your credentials

00:09:04.700 --> 00:09:12.360
are bad. So if I jump to that, the login method
is quite simple. It pulls out the parameters.

00:09:12.360 --> 00:09:16.449
It creates an http request base call back
handler, which is just a little custom class

00:09:16.449 --> 00:09:22.389
to wrap these and the password how JAAS expects.
And then, it creates context for the login

00:09:22.389 --> 00:09:26.560
module stuff to happen in, which is just the
JAAS thing. So as I've said, we're using Wave.

00:09:26.560 --> 00:09:32.680
It pulls in the configuration file that was,
you know, that's filed JAAS config. It gives

00:09:32.680 --> 00:09:36.800
this name a password, it chose the, you know,
the subject that we've created, which is for

00:09:36.800 --> 00:09:43.680
the user that we're creating and then it tries
to log in. And when it does that, it grabs

00:09:43.680 --> 00:09:49.400
this context object and pulls the subject
back out of it. And with the subject there's

00:09:49.400 --> 00:09:53.730
one final function that you need to understand,
which is that it causes, get login user. So

00:09:53.730 --> 00:09:58.160
once the subject's logged in, the subject
will have the principals that it's been given

00:09:58.160 --> 00:10:03.070
by the login module. So the user's logged
in and in this case the login module will

00:10:03.070 --> 00:10:07.660
give it the--you know, you've logged in with
a valid Wave account, you know, using the

00:10:07.660 --> 00:10:12.170
data store principal. But if you were using,
like, say, LDAP active directory then it would

00:10:12.170 --> 00:10:17.550
give you a principal that's an active directory
principal. This method grabs the principal

00:10:17.550 --> 00:10:21.690
and then tries to reverse-engineer it and
turn it back into a user ID, which is valid

00:10:21.690 --> 00:10:28.430
on the Wave server. If you--so--and that's
really, really simple. It's searches the principal's

00:10:28.430 --> 00:10:32.930
one that's a participant principal which is
the principal that were made for this and

00:10:32.930 --> 00:10:38.740
then converts that back into an address. So,
yeah, I would be delighted if an outcome of

00:10:38.740 --> 00:10:43.950
this talk while here in front of you guys.
Or if you feel like it, be game. Screw around

00:10:43.950 --> 00:10:49.170
with this code. Add in--you know, try and
try and make it work with JAAS. Try and--I'm

00:10:49.170 --> 00:10:53.360
sorry--with LDAP. Try and make it with [INDISTINCT].
You might need to make a modification dysfunction

00:10:53.360 --> 00:10:56.950
to make it understand different kinds of principles
for the different login modules. And you may

00:10:56.950 --> 00:11:03.970
also need to appear--make it so that when
it gets the login address, say, if you're

00:11:03.970 --> 00:11:08.100
using active directory, there might not already
by a user in the account store which is a

00:11:08.100 --> 00:11:13.019
Wave-specific thing, so you might have to
create other users as well. But once it does

00:11:13.019 --> 00:11:17.600
that it's really simple. And it just adds
it to--it adds the user to a session manager,

00:11:17.600 --> 00:11:21.920
which just means basically that everything
else knows that that user is logged in and

00:11:21.920 --> 00:11:27.430
using that cookie and Jetty provides all of
the cookie management stuff. So that's how

00:11:27.430 --> 00:11:30.459
authentication works with the client--of the
Wave client. There's one other simple thing

00:11:30.459 --> 00:11:33.120
that you need to understand. And when I say,
simple, it's a bit dodgy and it's been hacky.

00:11:33.120 --> 00:11:38.149
I'm sorry about this. A couple we won't touch
on already because it's nasty. So when I was

00:11:38.149 --> 00:11:42.019
designing all of these, I was hoping that
all the browsers would support the one websocket

00:11:42.019 --> 00:11:48.079
draft. And when they're connected by the websocket
connection they would pass in the cookie that

00:11:48.079 --> 00:11:53.560
they've been provided by Jetty straight into--straight
into the backend. Unfortunately, this is something

00:11:53.560 --> 00:11:56.190
that wasn't provided in previous drafts and
none of the current browsers actually support

00:11:56.190 --> 00:12:00.449
doing this. And none of the browsers will
send the cookie in the websocket connection.

00:12:00.449 --> 00:12:05.350
So as a workaround, I've hacked up a way to
make it so that the server--so that the client

00:12:05.350 --> 00:12:10.290
pulls the cookie token back out of the--I
mean, you know, it pulls it up using JavaScript.

00:12:10.290 --> 00:12:15.870
It grabs this cookie and it sends it using
a message on the--on the IPC once the web

00:12:15.870 --> 00:12:20.310
server connection establishes--is established.
I prefer to be able to take this out if we

00:12:20.310 --> 00:12:25.199
could, but I don't know when or if that will
ever happen. But that's how, yeah, the websocket

00:12:25.199 --> 00:12:28.500
connection's currently authenticated. If people
have better ideas in how to do that then I'd

00:12:28.500 --> 00:12:36.339
be open to things that aren't quite so nasty
and, yeah, that would be good. Are there any

00:12:36.339 --> 00:12:41.970
questions? No? Really? Come on, one. Come
on. Drop your hand.

00:12:41.970 --> 00:12:45.200
&gt;&gt; Well, I was [INDISTINCT].
&gt;&gt; Yeah.

00:12:45.200 --> 00:12:46.740
&gt;&gt; Does that don't make sense then? I'm going
to tell you really quickly. Are you guys happy?

00:12:46.740 --> 00:12:47.740
All right, cool. Thanks. Yeah. So play around.
Ask me any questions, I'm here all week.

00:12:47.740 --> 00:12:48.740
&gt;&gt; Try the view?
&gt;&gt; Sorry?

00:12:48.740 --> 00:12:49.740
&gt;&gt; Try the view?
&gt;&gt; Yeah, try the view.

00:12:49.740 --> 00:12:50.740
eople have better ideas in how to do that
then I'd be open to things that aren't quite

00:12:50.740 --> 00:12:51.740
so nasty and, yeah, that would be good. Are
there any questions? No? Really? Come on,

00:12:51.740 --> 00:12:52.740
one. Come on. Drop your hand.
&gt;&gt; Well, I was [INDISTINCT].

00:12:52.740 --> 00:12:53.740
&gt;&gt; Yeah.
&gt;&gt; Does that don't make sense then? I'm going

00:12:53.740 --> 00:12:55.949
to tell you really quickly. Are you guys happy?
All right, cool. Thanks. Yeah. So play around.

00:12:55.949 --> 00:13:02.220
Ask me any questions, I'm here all week.
&gt;&gt; Try the view?

00:13:02.220 --> 00:13:03.220
&gt;&gt; Sorry?
&gt;&gt; Try the view?

00:13:03.220 --> 00:13:03.223
&gt;&gt; Yeah, try the

