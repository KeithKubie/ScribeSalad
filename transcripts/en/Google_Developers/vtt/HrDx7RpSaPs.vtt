WEBVTT
Kind: captions
Language: en

00:00:00.404 --> 00:00:01.820
NETO MARIN: When
it's about money,

00:00:01.820 --> 00:00:05.070
it's important to make your
user's path straight and free

00:00:05.070 --> 00:00:06.600
of any obstacle.

00:00:06.600 --> 00:00:08.119
Hi, I'm Neto Marin,
and I'm going

00:00:08.119 --> 00:00:11.647
to show you how to test
Android billing implementation.

00:00:11.647 --> 00:00:13.980
If you're looking for an
introduction to Android billing

00:00:13.980 --> 00:00:16.420
or how in-app billing
API in your app,

00:00:16.420 --> 00:00:19.710
don't miss our
first two episodes.

00:00:19.710 --> 00:00:22.540
Probably the first level of
testing you need should do

00:00:22.540 --> 00:00:26.740
is testing early on development
using static billing response.

00:00:26.740 --> 00:00:29.310
For static testing, there
are four types of response

00:00:29.310 --> 00:00:32.810
that you need to make sure
are handled in your app.

00:00:32.810 --> 00:00:36.570
Successful purchase an item,
when the purchase is canceled,

00:00:36.570 --> 00:00:39.610
refunded purchase, and when
the item being purchased

00:00:39.610 --> 00:00:42.900
was not listed in your
application's product list.

00:00:42.900 --> 00:00:46.740
Each reserved product ID returns
a specific static response

00:00:46.740 --> 00:00:48.160
from Google Play.

00:00:48.160 --> 00:00:51.080
No money is transferred when
you're making a billing request

00:00:51.080 --> 00:00:54.180
with the reserved product IDs.

00:00:54.180 --> 00:00:56.860
These reserved product
IDs are ready to use.

00:00:56.860 --> 00:01:00.220
You don't need to create them
inside Developer Console.

00:01:00.220 --> 00:01:02.610
You just need to use
them in your simulations,

00:01:02.610 --> 00:01:05.840
like android.test.purchased
or canceled,

00:01:05.840 --> 00:01:08.880
refunded, and item_unavailable.

00:01:08.880 --> 00:01:12.610
To do these early tests, make
sure you have a stable flow,

00:01:12.610 --> 00:01:14.990
it's handling
correctly the response,

00:01:14.990 --> 00:01:17.390
construct a normal
request purchase,

00:01:17.390 --> 00:01:20.520
and use one of the
reserved product IDs.

00:01:20.520 --> 00:01:23.870
And to run this test, you
must use a real device.

00:01:23.870 --> 00:01:26.310
You can't use the emulator.

00:01:26.310 --> 00:01:28.280
Now eventually,
you're going to need

00:01:28.280 --> 00:01:31.100
to test your application
with live data.

00:01:31.100 --> 00:01:34.275
To do this, use
test.purchases, which lets

00:01:34.275 --> 00:01:37.510
authorized users purchase
your published in-app items

00:01:37.510 --> 00:01:40.950
without any actual
charge to their accounts.

00:01:40.950 --> 00:01:43.900
To authorize this account
as testers in the Developer

00:01:43.900 --> 00:01:47.700
Console, locate the
license testing section,

00:01:47.700 --> 00:01:49.850
add the software
testers to the Gmail

00:01:49.850 --> 00:01:52.450
accounts with
testing access field.

00:01:52.450 --> 00:01:56.540
For more information, see
Setting Up Test Accounts.

00:01:56.540 --> 00:01:59.490
Once authorized, your
testers can make purchases

00:01:59.490 --> 00:02:01.670
without being charged.

00:02:01.670 --> 00:02:05.410
Test purchases are real orders,
and Google Play processes them

00:02:05.410 --> 00:02:08.340
in the same way as the others.

00:02:08.340 --> 00:02:12.040
Test orders are automatically
cancelled at 14 days.

00:02:12.040 --> 00:02:15.240
And test subscriptions
purchase occur daily,

00:02:15.240 --> 00:02:18.570
regardless of the product's
actual subscription period.

00:02:18.570 --> 00:02:20.420
And before you
launch your app, it's

00:02:20.420 --> 00:02:23.900
important to do an end-to-end
testing or purchase flow,

00:02:23.900 --> 00:02:26.230
making actual in-app purchases.

00:02:26.230 --> 00:02:28.550
Testing real in-app
purchases enables

00:02:28.550 --> 00:02:32.180
you to test the real in-app
billing experience, including

00:02:32.180 --> 00:02:35.820
the actual purchase and checkout
flow that the users will

00:02:35.820 --> 00:02:38.790
experience in your application.

00:02:38.790 --> 00:02:41.390
To run this test, your
app needs to be published

00:02:41.390 --> 00:02:43.580
on alpha or beta channel.

00:02:43.580 --> 00:02:46.840
With alpha/beta test
groups, your chosen testers

00:02:46.840 --> 00:02:49.050
can install your
app from Google Play

00:02:49.050 --> 00:02:50.990
and test your in-app products.

00:02:50.990 --> 00:02:54.290
They can make a real
purchase with no charge

00:02:54.290 --> 00:02:57.650
to their accounts using any of
their normal payment methods

00:02:57.650 --> 00:02:59.740
in Google Play to
make purchases.

00:02:59.740 --> 00:03:03.520
In addition, if an alpha
or beta user was previously

00:03:03.520 --> 00:03:06.070
added as a tester using
Developer Console,

00:03:06.070 --> 00:03:08.770
it will still make test
purchases, instead of

00:03:08.770 --> 00:03:10.150
real purchase flow.

00:03:10.150 --> 00:03:11.810
Check out the link
for more information

00:03:11.810 --> 00:03:14.840
about alpha and beta channels.

00:03:14.840 --> 00:03:17.800
And with these four episodes,
we close our journey

00:03:17.800 --> 00:03:20.670
about in-app billing
API with four episodes.

00:03:20.670 --> 00:03:23.220
Don't forget to check our
documentation and training

00:03:23.220 --> 00:03:27.520
guides [INAUDIBLE]
out any time you need.

00:03:27.520 --> 00:03:29.870
And download the
Trivial Drive simple app

00:03:29.870 --> 00:03:32.810
that can help you a
lot as a [INAUDIBLE]

00:03:32.810 --> 00:03:36.400
and with convenience
class ready to use.

00:03:36.400 --> 00:03:39.050
Now looking forward to
see you making money

00:03:39.050 --> 00:03:40.560
with in-app billing API.

00:03:40.560 --> 00:03:41.590
Thanks for watching.

00:03:41.590 --> 00:03:42.190
Bye-bye.

00:03:42.190 --> 00:03:45.240
[MUSIC PLAYING]

