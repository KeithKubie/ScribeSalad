WEBVTT
Kind: captions
Language: en

00:00:09.139 --> 00:00:12.115
[APPLAUSE]

00:00:12.115 --> 00:00:12.990
PETE LEPAGE: Awesome.

00:00:12.990 --> 00:00:14.470
Thank you guys very much.

00:00:14.470 --> 00:00:17.490
And thank you for
joining me today.

00:00:17.490 --> 00:00:19.340
Today, I want to
talk about something

00:00:19.340 --> 00:00:21.720
new called Chrome Apps.

00:00:21.720 --> 00:00:25.540
And Chrome Apps provide a really
cool new set of functionality

00:00:25.540 --> 00:00:28.490
that I think is really
useful for web developers

00:00:28.490 --> 00:00:32.570
to be able to build
native-like applications.

00:00:32.570 --> 00:00:34.180
My name's Pete LePage.

00:00:34.180 --> 00:00:36.760
I'm a developer advocate
on the Chrome team,

00:00:36.760 --> 00:00:39.460
and I work out of
our New York office.

00:00:39.460 --> 00:00:42.370
I'm going to make these slides
available offline after,

00:00:42.370 --> 00:00:44.240
if you want to copy
the URL down later.

00:00:44.240 --> 00:00:47.300
So you don't have to worry about
copying any of this stuff down.

00:00:47.300 --> 00:00:50.040
But if you want to find me,
you can find me on Google+

00:00:50.040 --> 00:00:54.330
or on Twitter and
on GitHub as well.

00:00:54.330 --> 00:00:57.180
And all the demos
that I have today

00:00:57.180 --> 00:00:58.940
are also going to
be up on GitHub,

00:00:58.940 --> 00:01:01.240
either later today
or sometime tomorrow.

00:01:01.240 --> 00:01:03.470
You'll see some fun stuff
with those lights up there.

00:01:03.470 --> 00:01:05.340
You've probably
been wondering why

00:01:05.340 --> 00:01:06.870
they're hanging around up there.

00:01:06.870 --> 00:01:08.770
Well, we're going to
make them do some fun

00:01:08.770 --> 00:01:14.260
stuff with our phone
and with an app.

00:01:14.260 --> 00:01:17.820
So web apps, I think,
are really amazing.

00:01:17.820 --> 00:01:20.130
There's a ton of
phenomenal things

00:01:20.130 --> 00:01:22.700
that you can do with them.

00:01:22.700 --> 00:01:25.650
It helps if I start
my timer, too.

00:01:25.650 --> 00:01:30.250
Wunderlist, really beautiful
to-do task manager.

00:01:30.250 --> 00:01:32.110
Helps you know what
you need to get done.

00:01:32.110 --> 00:01:35.920
You can set all sorts of
reminders and deadlines

00:01:35.920 --> 00:01:36.690
for things.

00:01:36.690 --> 00:01:41.320
Great, beautiful
app, really useful.

00:01:41.320 --> 00:01:43.840
"Financial Times"
built a web app

00:01:43.840 --> 00:01:46.350
because they didn't
want to put their web

00:01:46.350 --> 00:01:51.410
app into the different stores,
because they didn't want

00:01:51.410 --> 00:01:55.230
to have to pay money
to other companies.

00:01:55.230 --> 00:01:58.590
They wanted all of the
revenue to come to them.

00:01:58.590 --> 00:02:00.060
Fair deal, I think.

00:02:03.310 --> 00:02:06.100
Google Play Music
can go through--

00:02:06.100 --> 00:02:08.850
and please don't
judge me on my music.

00:02:08.850 --> 00:02:13.990
But you can go, and you can
play all your music online,

00:02:13.990 --> 00:02:15.190
on the cloud.

00:02:15.190 --> 00:02:17.340
You don't have to
worry about carrying it

00:02:17.340 --> 00:02:20.950
with you everywhere you go.

00:02:20.950 --> 00:02:22.360
Feedly.

00:02:22.360 --> 00:02:25.110
After Reader went away,
I switched over to here.

00:02:25.110 --> 00:02:27.820
And this is a great
app, fantastic.

00:02:27.820 --> 00:02:29.330
I can read all my articles.

00:02:29.330 --> 00:02:33.410
I can do all sorts of
great stuff with it.

00:02:33.410 --> 00:02:37.800
But it kind of sucks
once in awhile, right?

00:02:37.800 --> 00:02:40.160
You get this.

00:02:40.160 --> 00:02:41.150
Crap.

00:02:41.150 --> 00:02:43.380
You go to use one of
your favorite web apps,

00:02:43.380 --> 00:02:46.380
and you're offline.

00:02:46.380 --> 00:02:49.590
Or maybe it's not that
you're just offline.

00:02:49.590 --> 00:02:54.440
Maybe you're somewhere where
there's no 4G connection.

00:02:54.440 --> 00:02:56.790
In the states, we say,
there's no 3G connection,

00:02:56.790 --> 00:03:00.220
because, well, our
connection's not so good.

00:03:00.220 --> 00:03:03.090
But where you don't have
a very good connection,

00:03:03.090 --> 00:03:05.300
maybe you're going
on a train where

00:03:05.300 --> 00:03:09.090
you're going to lose
connection intermittently.

00:03:09.090 --> 00:03:13.550
Or what about if you want
to access hardware devices?

00:03:13.550 --> 00:03:15.610
So think about playing games.

00:03:15.610 --> 00:03:18.830
On the web, you can't exactly
go and use your joystick.

00:03:18.830 --> 00:03:21.930
You can't go and use game
controllers or other things

00:03:21.930 --> 00:03:22.650
like that.

00:03:25.610 --> 00:03:30.450
Or maybe it's a matter of you're
stuck on a legacy browser,

00:03:30.450 --> 00:03:35.300
and these new web apps require
newer versions of browsers.

00:03:35.300 --> 00:03:41.440
They need something that
supports modern HTML5 and CSS3

00:03:41.440 --> 00:03:44.360
features.

00:03:44.360 --> 00:03:47.970
But then there's another piece,
and it's the native integration

00:03:47.970 --> 00:03:49.150
component.

00:03:49.150 --> 00:03:51.830
When you go to run an
application on your laptop,

00:03:51.830 --> 00:03:55.420
on your Mac, on your
Windows computer,

00:03:55.420 --> 00:03:57.130
you go, and you hit
the Start button,

00:03:57.130 --> 00:04:00.270
or you hit the
application on the dock.

00:04:00.270 --> 00:04:02.640
You don't open a
browser window and then

00:04:02.640 --> 00:04:04.710
start typing in the URL.

00:04:04.710 --> 00:04:07.760
Think about all the people
who are not as technically

00:04:07.760 --> 00:04:11.590
advanced who are in here--
maybe your parents, brothers,

00:04:11.590 --> 00:04:12.850
sisters.

00:04:12.850 --> 00:04:15.140
They click on the Start menu.

00:04:15.140 --> 00:04:17.300
That's how you start
an application.

00:04:17.300 --> 00:04:23.400
You don't go to a URL and
expect it to work offline.

00:04:23.400 --> 00:04:26.150
If you're typing a URL
into an address bar,

00:04:26.150 --> 00:04:28.190
it's not going to work offline.

00:04:28.190 --> 00:04:31.130
You can't Alt-Tab
between applications

00:04:31.130 --> 00:04:34.580
if you want to go between
different applications.

00:04:34.580 --> 00:04:37.900
You don't have that same
level of integration

00:04:37.900 --> 00:04:40.790
that you expect to have.

00:04:40.790 --> 00:04:43.650
And that's where
Chrome Apps come in.

00:04:43.650 --> 00:04:50.540
Chrome Apps allow you to build
installed native applications

00:04:50.540 --> 00:04:55.060
that work just like every other
installed app on your computer,

00:04:55.060 --> 00:04:59.990
but using HTML,
CSS, and JavaScript.

00:04:59.990 --> 00:05:03.560
Just the way that we're
used to building modern web

00:05:03.560 --> 00:05:07.520
applications, we can do
that with Chrome Apps.

00:05:07.520 --> 00:05:09.190
So let's take a
look at a couple.

00:05:09.190 --> 00:05:12.060
I'm going to come out
of my slides here,

00:05:12.060 --> 00:05:15.800
and I loaded a
couple already today.

00:05:15.800 --> 00:05:18.810
500 Pixels, I think,
is one of my favorite

00:05:18.810 --> 00:05:21.830
because it's just really pretty.

00:05:21.830 --> 00:05:25.940
How many people are familiar
with the 500 Pixels website

00:05:25.940 --> 00:05:26.840
or web service?

00:05:26.840 --> 00:05:28.080
A few people.

00:05:28.080 --> 00:05:32.060
They have really, really
pretty photos, when it loads.

00:05:36.860 --> 00:05:39.680
We are still connected
to the internet.

00:05:39.680 --> 00:05:42.240
All right, let's try this.

00:05:42.240 --> 00:05:44.210
It loaded before, I promise you.

00:05:48.280 --> 00:05:50.230
Chrome Apps should work offline.

00:05:53.070 --> 00:05:54.235
That one clearly fails.

00:05:57.390 --> 00:05:58.780
But let me pull up Wunderlist.

00:05:58.780 --> 00:06:01.670
We talked about Wunderlist
a couple minutes ago.

00:06:01.670 --> 00:06:05.670
Here's Wunderlist
working as a Chrome App.

00:06:05.670 --> 00:06:07.860
Notice there's no address bar.

00:06:07.860 --> 00:06:09.640
There's no Back
or Forward button.

00:06:09.640 --> 00:06:12.140
All the stuff that I
need to do, all right.

00:06:12.140 --> 00:06:15.290
So for my trip to Korea,
yup, prepare presentation.

00:06:15.290 --> 00:06:16.550
I did that.

00:06:16.550 --> 00:06:19.910
And pack heart rate monitor.

00:06:19.910 --> 00:06:21.590
I'll explain that one
in a sec, but I've

00:06:21.590 --> 00:06:24.070
got a heart rate
monitor on right now.

00:06:24.070 --> 00:06:28.750
So we'll take a look
at that in a second.

00:06:28.750 --> 00:06:33.220
So then you can also do
just really simple things.

00:06:33.220 --> 00:06:36.130
1 plus 1.

00:06:36.130 --> 00:06:39.320
Yes, success.

00:06:39.320 --> 00:06:43.165
So you can build
anything from apps

00:06:43.165 --> 00:06:45.880
that need a network
connection to stuff

00:06:45.880 --> 00:06:49.740
that doesn't, to things
that are just daily use,

00:06:49.740 --> 00:06:53.980
everyday utility applications
to complex applications

00:06:53.980 --> 00:06:56.690
like Wunderlist.

00:06:56.690 --> 00:06:58.790
You could write,
if you wanted to,

00:06:58.790 --> 00:07:03.260
Photoshop in
JavaScript, HTML, CSS

00:07:03.260 --> 00:07:06.651
and get a pretty awesome app.

00:07:06.651 --> 00:07:07.150
All right.

00:07:07.150 --> 00:07:08.430
So let's pop back into here.

00:07:11.960 --> 00:07:16.590
So Chrome Apps follow
four important pillars.

00:07:16.590 --> 00:07:20.370
One, we already saw that
one shot down on some apps.

00:07:20.370 --> 00:07:24.900
But they should work
offline by default.

00:07:24.900 --> 00:07:27.330
Two, they're cloud
ready, so they

00:07:27.330 --> 00:07:30.840
can take advantage of all
sorts of the great APIs

00:07:30.840 --> 00:07:35.190
and services that are available
from Google or from anybody

00:07:35.190 --> 00:07:35.690
else.

00:07:38.600 --> 00:07:43.340
Third, they should be
natively integrated.

00:07:43.340 --> 00:07:45.720
I tried to find a nicer
sounding word for that,

00:07:45.720 --> 00:07:49.880
but it really didn't-- that just
does not roll off the tongue.

00:07:49.880 --> 00:07:55.200
But they should work with the
system and use all of the APIs.

00:07:55.200 --> 00:07:58.730
And finally,
multi-device capable.

00:07:58.730 --> 00:08:00.710
That means that
Chrome Apps are going

00:08:00.710 --> 00:08:03.670
to work no matter what device
you're using, whether you're

00:08:03.670 --> 00:08:08.310
using a Mac, a PC,
a Linux machine.

00:08:08.310 --> 00:08:12.280
And we're going to talk about
the mobile experience today.

00:08:12.280 --> 00:08:15.870
But no matter what you
do, you write your code

00:08:15.870 --> 00:08:19.020
effectively once, and
it works everywhere.

00:08:19.020 --> 00:08:21.140
I know, it's been
said a million times.

00:08:21.140 --> 00:08:22.810
Nobody believes it.

00:08:22.810 --> 00:08:27.770
But for the most part, this
is true with Chrome Apps.

00:08:27.770 --> 00:08:30.210
So let's jump in and
take a look at what

00:08:30.210 --> 00:08:33.020
offline by default means.

00:08:33.020 --> 00:08:38.780
Like any app you install
from any of the stores or app

00:08:38.780 --> 00:08:41.760
marketplaces, there's
the Chrome Web Store.

00:08:41.760 --> 00:08:44.920
So a user goes to the Chrome
Web Store, chooses the app

00:08:44.920 --> 00:08:48.620
that they want to install,
which then downloads

00:08:48.620 --> 00:08:54.060
all of the assets and resources
needed for that app to run.

00:08:54.060 --> 00:08:55.570
Now what does that consist of?

00:08:55.570 --> 00:09:00.740
Well, there's two pieces
here that are required.

00:09:00.740 --> 00:09:04.010
One, we need to have what's
called the manifest JSON file.

00:09:04.010 --> 00:09:05.720
We'll take a look
at that in a sec.

00:09:05.720 --> 00:09:10.900
But the manifest tells Chrome
what that app, how to start it,

00:09:10.900 --> 00:09:17.390
how big the window should be--
or not the window, but version

00:09:17.390 --> 00:09:19.700
number, all sorts
of little stuff

00:09:19.700 --> 00:09:23.030
about the information
for this app.

00:09:23.030 --> 00:09:25.360
And then there's
the main.js file,

00:09:25.360 --> 00:09:29.930
which tells Chrome how to
start this application.

00:09:29.930 --> 00:09:34.150
And then finally, you've got
all of the application content.

00:09:34.150 --> 00:09:38.820
So that's all of the resources
needed for your app to run.

00:09:38.820 --> 00:09:43.280
So that's all the JavaScript,
the HTML, the CSS.

00:09:43.280 --> 00:09:45.540
Now one key thing
to keep in mind

00:09:45.540 --> 00:09:47.890
when you're building
Chrome packaged apps

00:09:47.890 --> 00:09:50.820
or thinking about them
is it requires a bit

00:09:50.820 --> 00:09:54.900
of a subtle shift in
thinking as a web developer.

00:09:54.900 --> 00:09:57.820
As a web developer, we
typically think, oh great,

00:09:57.820 --> 00:09:59.880
I'm going to go write some
HTML, some JavaScript,

00:09:59.880 --> 00:10:01.040
and that kind of thing.

00:10:01.040 --> 00:10:04.410
And I'm probably going to have
a Ruby backend, end, or maybe

00:10:04.410 --> 00:10:08.610
a PHP back end, or maybe
an ASP.NET back end.

00:10:08.610 --> 00:10:12.230
And it's going to
spit out HTML as well.

00:10:12.230 --> 00:10:13.950
So you're going to
have some server side

00:10:13.950 --> 00:10:15.910
code running as well.

00:10:15.910 --> 00:10:20.410
With a Chrome packaged app,
you can't really do that.

00:10:20.410 --> 00:10:25.310
You can use client side
code to run all of your UI

00:10:25.310 --> 00:10:26.470
and all of that.

00:10:26.470 --> 00:10:31.820
And then you go up and use your
APIs, services, to get data

00:10:31.820 --> 00:10:36.060
and then display that on screen.

00:10:36.060 --> 00:10:38.640
So in the manifest--
how many people

00:10:38.640 --> 00:10:44.760
have tried writing a Chrome
extension or a old-style Chrome

00:10:44.760 --> 00:10:47.100
packaged app?

00:10:47.100 --> 00:10:48.480
All right, a few people.

00:10:48.480 --> 00:10:50.790
So it's pretty much the same.

00:10:50.790 --> 00:10:52.850
There's only a few
key differences

00:10:52.850 --> 00:10:56.520
that I've highlighted here,
including the manifest

00:10:56.520 --> 00:11:00.060
version, which needs
to say version 2.

00:11:00.060 --> 00:11:02.405
And then we tell
the app how we want

00:11:02.405 --> 00:11:06.020
it to start by saying
background and giving it

00:11:06.020 --> 00:11:10.960
an array of JavaScript files.

00:11:10.960 --> 00:11:13.310
So if we take a look
at the JavaScript file

00:11:13.310 --> 00:11:16.080
that's running
behind here-- so this

00:11:16.080 --> 00:11:22.120
is the main.js that's required
to run-- we set up a listener.

00:11:22.120 --> 00:11:27.610
And we say, hey, Chrome,
any time the user

00:11:27.610 --> 00:11:29.540
tries to start our
application, we

00:11:29.540 --> 00:11:32.570
want to listen for those events.

00:11:32.570 --> 00:11:37.640
And when that event gets fired,
we want to create a new window

00:11:37.640 --> 00:11:40.380
and open the index.html file.

00:11:40.380 --> 00:11:43.360
Obviously, you can
open any file you want.

00:11:43.360 --> 00:11:45.620
You can open index
or, in the case

00:11:45.620 --> 00:11:48.280
we'll look at in a
couple minutes, Hue,

00:11:48.280 --> 00:11:50.260
whatever you want.

00:11:50.260 --> 00:11:54.210
You can provide an app ID, which
is really useful so that Chrome

00:11:54.210 --> 00:11:56.590
remembers where to
open the window,

00:11:56.590 --> 00:12:00.010
and it stores state
about the window.

00:12:00.010 --> 00:12:03.890
And you can also say how big
you want the window to open.

00:12:03.890 --> 00:12:05.690
You can even go so
far as to say where

00:12:05.690 --> 00:12:10.180
you want the window to open
and additional properties

00:12:10.180 --> 00:12:11.560
you can set in there.

00:12:11.560 --> 00:12:13.530
But those are the key
ones that you sort of

00:12:13.530 --> 00:12:14.930
need to be aware of.

00:12:18.660 --> 00:12:24.000
So beyond the ability to be
able to work offline-- in fact,

00:12:24.000 --> 00:12:25.970
there's one other
thing that I want

00:12:25.970 --> 00:12:30.070
to mention here is that you
get the Chrome Web Store

00:12:30.070 --> 00:12:31.800
functionality with this.

00:12:31.800 --> 00:12:36.700
Which means that, like Chrome,
your application will always

00:12:36.700 --> 00:12:40.240
stay up to date.

00:12:40.240 --> 00:12:45.170
So when you guys start
using an application today,

00:12:45.170 --> 00:12:47.340
usually you pull out your phone.

00:12:47.340 --> 00:12:49.890
You sign into the
app, and it asks you

00:12:49.890 --> 00:12:53.140
for your username and
password, which you've probably

00:12:53.140 --> 00:12:55.340
created on a website
somewhere, or maybe you've

00:12:55.340 --> 00:12:59.820
signed up on that
app at one point.

00:12:59.820 --> 00:13:04.080
And you sign in, and
everything's there, right?

00:13:04.080 --> 00:13:09.220
If you go sign into a Google
account, use Google Drive,

00:13:09.220 --> 00:13:13.060
or you use any of your
applications where you sign in,

00:13:13.060 --> 00:13:16.100
it remembers you, remembers
all your settings.

00:13:16.100 --> 00:13:18.790
And everybody
expects that today.

00:13:18.790 --> 00:13:20.810
And they expect
their applications

00:13:20.810 --> 00:13:22.500
to stay up to date.

00:13:22.500 --> 00:13:26.280
So with Chrome apps, we
provide the functionality

00:13:26.280 --> 00:13:30.260
to make that really easy
for you so that you can just

00:13:30.260 --> 00:13:32.480
go and be good to go.

00:13:32.480 --> 00:13:35.390
Your apps stay up to date,
and your users always

00:13:35.390 --> 00:13:37.690
have the data.

00:13:37.690 --> 00:13:40.200
So there's a bunch
of APIs that are

00:13:40.200 --> 00:13:43.490
available that make
this much easier.

00:13:43.490 --> 00:13:47.620
One of them is this
synced object storage API.

00:13:47.620 --> 00:13:52.510
And how many people are familiar
with the local storage API?

00:13:52.510 --> 00:13:54.490
Yeah, OK, so a few people.

00:13:54.490 --> 00:13:58.330
So the local
storage API lets you

00:13:58.330 --> 00:14:03.040
store strings on
the user's computer.

00:14:03.040 --> 00:14:04.250
Great.

00:14:04.250 --> 00:14:06.210
But if they go to
another computer,

00:14:06.210 --> 00:14:12.670
or if you want to store a
JavaScript object, uh-uh.

00:14:12.670 --> 00:14:15.030
Not going to happen.

00:14:15.030 --> 00:14:19.320
So with the synced
object storage API,

00:14:19.320 --> 00:14:25.440
you can store data for
that specific user that

00:14:25.440 --> 00:14:29.600
will be synced to every
computer that they sign in on.

00:14:29.600 --> 00:14:32.710
So whether I come
and use my MacBook,

00:14:32.710 --> 00:14:37.090
whether I use a Chromebook, or
whether I use any other device,

00:14:37.090 --> 00:14:41.720
all of that data is available
on any of the devices.

00:14:41.720 --> 00:14:46.240
It uses the same syncing
system that Chrome

00:14:46.240 --> 00:14:51.380
uses to store bookmarks
and passwords and all

00:14:51.380 --> 00:14:55.070
of the other information
that Chrome stores and syncs

00:14:55.070 --> 00:14:57.180
across users.

00:14:57.180 --> 00:14:59.540
So that gives us
a really great way

00:14:59.540 --> 00:15:06.150
to store application settings
or maybe state about the user

00:15:06.150 --> 00:15:08.800
or what they were doing.

00:15:08.800 --> 00:15:13.260
There's also a synced file
system that's available.

00:15:13.260 --> 00:15:18.470
So that means you can go and
store large files on the user's

00:15:18.470 --> 00:15:22.870
computer but know that no
matter what computer they go to,

00:15:22.870 --> 00:15:26.470
they're always going to
have access to those files.

00:15:26.470 --> 00:15:29.470
That means I've got
access to my photos

00:15:29.470 --> 00:15:32.090
across all of my
computers, or maybe

00:15:32.090 --> 00:15:35.370
all of my documents
or my presentations.

00:15:35.370 --> 00:15:41.040
So I've got all sorts of
file and data storage.

00:15:41.040 --> 00:15:44.990
But one of the things that
I've always loved about Android

00:15:44.990 --> 00:15:49.580
is the ability to be able
to send push messages to me

00:15:49.580 --> 00:15:51.790
to tell me about something new.

00:15:51.790 --> 00:15:54.180
And the web has never had that.

00:15:54.180 --> 00:15:55.050
Or it has.

00:15:55.050 --> 00:15:55.950
It's called spam.

00:15:59.340 --> 00:16:02.680
I want web apps to
be able to tell me

00:16:02.680 --> 00:16:06.800
when something is going on or
when there's new information,

00:16:06.800 --> 00:16:10.970
or maybe to wake up
and go do something.

00:16:10.970 --> 00:16:14.820
So with the Chrome
push messaging API,

00:16:14.820 --> 00:16:18.440
you can actually send
data to a Chrome app

00:16:18.440 --> 00:16:20.870
and tell it to either
pop up a notification,

00:16:20.870 --> 00:16:23.220
like you would see
on Android, or you

00:16:23.220 --> 00:16:26.420
can tell it to go and
say, hey, the user just

00:16:26.420 --> 00:16:27.670
added a bunch of new files.

00:16:27.670 --> 00:16:29.680
You should sync these down.

00:16:29.680 --> 00:16:32.950
Or maybe the user
has a new friend.

00:16:32.950 --> 00:16:35.270
Woo-hoo.

00:16:35.270 --> 00:16:37.550
So with their new
friend, you may

00:16:37.550 --> 00:16:40.020
want to go get information
about their friend

00:16:40.020 --> 00:16:44.500
so that you've got that
next time they connect.

00:16:44.500 --> 00:16:48.090
So the push messaging
API is a pretty great one

00:16:48.090 --> 00:16:51.600
and is something that
I'm really excited about.

00:16:51.600 --> 00:16:57.510
There's also an Identity
Services API I hate signing in.

00:16:57.510 --> 00:16:59.440
How many passwords
do people have?

00:16:59.440 --> 00:17:02.050
And please don't put
your hand up for this.

00:17:02.050 --> 00:17:03.460
Don't tell me.

00:17:03.460 --> 00:17:07.859
If you use the same password
for every site, yeah.

00:17:07.859 --> 00:17:12.700
Probably not a good thing, but
it's really easy to do, right?

00:17:12.700 --> 00:17:18.639
With the Identity Services API,
if you forget your password,

00:17:18.639 --> 00:17:23.619
or if for whatever reason,
your password gets compromised,

00:17:23.619 --> 00:17:27.819
you have to reset it in one
place with the Google APIs.

00:17:27.819 --> 00:17:33.170
Or if you're using one of
the other identity services,

00:17:33.170 --> 00:17:35.630
you can have the user
authenticate to that,

00:17:35.630 --> 00:17:38.490
and it'll give back that
authentication token.

00:17:38.490 --> 00:17:42.690
Then they don't have to--
let me rephrase that, sorry.

00:17:42.690 --> 00:17:48.510
Then you do not need to be in
the job of storing users' names

00:17:48.510 --> 00:17:52.060
and passwords, because that
just always gets messy.

00:17:52.060 --> 00:17:55.250
We hear about it on a
regular basis of somebody

00:17:55.250 --> 00:17:59.410
who's gone through and
lost every user's username

00:17:59.410 --> 00:18:03.000
and password, or maybe
their credit card number.

00:18:03.000 --> 00:18:06.500
Generally not a good thing.

00:18:06.500 --> 00:18:09.710
You also get updates from
the Chrome Web Store.

00:18:09.710 --> 00:18:14.140
So just like you do if you were
to use an Android app or an iOS

00:18:14.140 --> 00:18:18.370
app, when somebody
pushes up a new version,

00:18:18.370 --> 00:18:19.890
you get it automatically.

00:18:19.890 --> 00:18:22.310
Everything is all good.

00:18:22.310 --> 00:18:27.274
Now on the web, you may
be paying for bandwidth.

00:18:27.274 --> 00:18:28.690
So if you've got
a website, you're

00:18:28.690 --> 00:18:31.430
paying for all of those
megabytes or gigabytes,

00:18:31.430 --> 00:18:34.980
hopefully, if you've got
a good website going out.

00:18:34.980 --> 00:18:38.070
You don't have to do that
with Chrome packaged apps.

00:18:38.070 --> 00:18:39.650
You push stuff up.

00:18:39.650 --> 00:18:41.980
And then we handle
the distribution.

00:18:41.980 --> 00:18:46.030
So we're responsible for getting
it to all 10,000 of your users

00:18:46.030 --> 00:18:48.040
or 10 million of your users.

00:18:48.040 --> 00:18:50.410
And we eat the bandwidth costs.

00:18:50.410 --> 00:18:53.760
Go click on a few ads.

00:18:53.760 --> 00:18:57.220
And then finally,
there's a whole set

00:18:57.220 --> 00:18:59.120
of monetization options.

00:18:59.120 --> 00:19:02.390
So if you want to
start selling apps,

00:19:02.390 --> 00:19:04.500
you can do either
one time payments

00:19:04.500 --> 00:19:07.150
or use the in-app payment model.

00:19:07.150 --> 00:19:10.770
Now the thing that I love about
this is instead of being, oh,

00:19:10.770 --> 00:19:15.890
30%, like most other
places, it's only 5%.

00:19:15.890 --> 00:19:18.985
And this works anywhere
where Google Wallet works.

00:19:22.600 --> 00:19:25.550
So I just put a
little code up there

00:19:25.550 --> 00:19:28.350
so you guys can see
what's going on.

00:19:28.350 --> 00:19:35.490
But chrome.storage.sync.set, one
thing you'll notice about that,

00:19:35.490 --> 00:19:37.240
I didn't stringify that.

00:19:37.240 --> 00:19:41.635
So you can store straight-up
objects in the Chrome storage.

00:19:45.670 --> 00:19:47.940
Syncs across all
the user's devices.

00:19:47.940 --> 00:19:51.950
Really nice, easy way to be able
to handle data across devices.

00:19:55.460 --> 00:19:56.560
All right.

00:19:56.560 --> 00:19:57.580
We've covered two.

00:19:57.580 --> 00:19:58.960
We've got two more to go.

00:19:58.960 --> 00:20:00.990
And we've got some
more fun demos.

00:20:00.990 --> 00:20:03.820
In fact, let's do a demo now.

00:20:03.820 --> 00:20:05.730
I like doing fun demos.

00:20:05.730 --> 00:20:07.690
All right.

00:20:07.690 --> 00:20:11.370
So it's always fun
to do a demo when

00:20:11.370 --> 00:20:14.890
you have to get off the network
and switch to another one.

00:20:14.890 --> 00:20:19.820
So I'm going to cross my
fingers here and switch over

00:20:19.820 --> 00:20:22.390
to this other network.

00:20:22.390 --> 00:20:26.130
And let's bring up this guy.

00:20:29.320 --> 00:20:30.790
All right.

00:20:30.790 --> 00:20:31.740
I'm alive.

00:20:31.740 --> 00:20:33.050
Sweet!

00:20:33.050 --> 00:20:34.380
OK.

00:20:34.380 --> 00:20:39.890
So right now, I'm wearing a
Bluetooth heart rate monitor.

00:20:39.890 --> 00:20:42.034
You probably can't
see it through here,

00:20:42.034 --> 00:20:43.450
and I'm not going
to pull my shirt

00:20:43.450 --> 00:20:44.980
up so that you can see my chest.

00:20:44.980 --> 00:20:46.850
That will not be pretty.

00:20:46.850 --> 00:20:49.470
But there's a heart
rate monitor under here

00:20:49.470 --> 00:20:52.880
that's connected to my
computer via Bluetooth.

00:20:52.880 --> 00:20:57.850
So right now, it's probably
not a good heart rate for this,

00:20:57.850 --> 00:20:59.920
but OK.

00:20:59.920 --> 00:21:01.720
We know I'm alive.

00:21:01.720 --> 00:21:05.420
Now that light just came on.

00:21:05.420 --> 00:21:07.820
Did anybody notice that?

00:21:07.820 --> 00:21:14.060
And it should be
flickering at about 105.

00:21:14.060 --> 00:21:15.652
I'm dead.

00:21:15.652 --> 00:21:18.600
Crap.

00:21:18.600 --> 00:21:19.480
That's not good.

00:21:23.020 --> 00:21:25.290
I need to be very
close to my computer,

00:21:25.290 --> 00:21:29.560
apparently, if I
want to stay alive.

00:21:29.560 --> 00:21:32.160
I feel like I should be
on an episode of "24."

00:21:32.160 --> 00:21:35.960
if you move far enough away
from the computer-- all right.

00:21:35.960 --> 00:21:37.730
So I can't see if that
light is flashing,

00:21:37.730 --> 00:21:41.160
but that light should
be flashing right now.

00:21:41.160 --> 00:21:42.160
AUDIENCE: It's flashing.

00:21:42.160 --> 00:21:43.118
PETE LEPAGE: All right.

00:21:43.118 --> 00:21:44.270
Sweet.

00:21:44.270 --> 00:21:49.240
So what's going on
is through Bluetooth,

00:21:49.240 --> 00:21:51.170
I'm connected to this guy.

00:21:51.170 --> 00:21:53.220
And I'm going through
and saying, OK, great,

00:21:53.220 --> 00:21:54.940
getting the heart rate.

00:21:54.940 --> 00:21:59.900
And then I'm using--
and I'll open this up

00:21:59.900 --> 00:22:01.430
so we can see what's
going on here.

00:22:08.700 --> 00:22:11.050
I'm using the Philips
Hue light bulbs,

00:22:11.050 --> 00:22:14.880
which are a really neat
set of LED light bulbs

00:22:14.880 --> 00:22:20.870
that allow you to control them
by making an HTTP request.

00:22:20.870 --> 00:22:24.760
So I'm making an HTTP
request to this light

00:22:24.760 --> 00:22:29.840
every time, for 80
beats per minute.

00:22:29.840 --> 00:22:32.250
So you can see as
it's going through, it

00:22:32.250 --> 00:22:38.620
sets the hue at zero, which is,
if you think about the circle,

00:22:38.620 --> 00:22:42.050
it sets it at red, the
saturation, nice and bright.

00:22:42.050 --> 00:22:46.050
And then it goes between
200 and then down to 128.

00:22:46.050 --> 00:22:51.520
So it's doing a rate
with my heart rate.

00:22:51.520 --> 00:22:52.060
All right.

00:22:55.180 --> 00:22:58.980
So I mentioned that you can
Alt-Tab between these guys.

00:22:58.980 --> 00:23:00.920
Because I'm running
Chromium right now,

00:23:00.920 --> 00:23:03.770
this is not something
that's available.

00:23:03.770 --> 00:23:08.080
And Bluetooth is still
an experimental feature.

00:23:08.080 --> 00:23:14.000
Chrome Apps launched in
mid-September for all users.

00:23:14.000 --> 00:23:17.720
But we still have a few
APIs that we haven't quite

00:23:17.720 --> 00:23:20.600
shipped yet because we want to
make sure we get them right,

00:23:20.600 --> 00:23:22.420
and Bluetooth is one of them.

00:23:22.420 --> 00:23:28.480
So it's only available in
either Chrome Dev, Canary,

00:23:28.480 --> 00:23:33.790
or in Chromium, as I'm
running this guy here.

00:23:33.790 --> 00:23:40.210
So let me come off of this,
and we'll pop back to this guy.

00:23:40.210 --> 00:23:41.320
All right.

00:23:41.320 --> 00:23:42.570
Do we get back on the network?

00:23:42.570 --> 00:23:43.825
This is always the fun one.

00:23:47.250 --> 00:23:47.780
Woo-hoo!

00:23:47.780 --> 00:23:48.935
All right, sweet.

00:23:55.160 --> 00:23:58.640
So you'll notice
in that app, there

00:23:58.640 --> 00:24:00.420
was no address bar or
anything like that.

00:24:00.420 --> 00:24:02.720
And in fact, that
app looked different

00:24:02.720 --> 00:24:07.550
than the Wunderlist app.

00:24:07.550 --> 00:24:11.740
The Wunderlist
app, in fact, I'll

00:24:11.740 --> 00:24:13.880
just bring it up so
that we can see it.

00:24:13.880 --> 00:24:16.336
It should run.

00:24:16.336 --> 00:24:17.300
There we go.

00:24:17.300 --> 00:24:20.120
The Wunderlist app
looks exactly like we

00:24:20.120 --> 00:24:22.630
would expect it
to look on a Mac.

00:24:22.630 --> 00:24:28.220
It's got the little red X, the
minus sign, and the plus sign.

00:24:28.220 --> 00:24:35.770
But the heart rate
app, it didn't.

00:24:35.770 --> 00:24:38.530
It's only got this X over here.

00:24:38.530 --> 00:24:42.680
With Chrome Apps, you can make
the app look however you want.

00:24:42.680 --> 00:24:46.530
If you want to have it have that
native look, you can do that.

00:24:46.530 --> 00:24:49.950
If you want to give it something
completely different-- oh,

00:24:49.950 --> 00:24:51.380
that wasn't a good heartbeat.

00:24:51.380 --> 00:24:54.970
All right, we're going
to get out of here.

00:24:54.970 --> 00:24:58.000
So if you want to make the
app look however you want,

00:24:58.000 --> 00:25:00.310
you can do that.

00:25:00.310 --> 00:25:02.780
One thing I would
caution you on is

00:25:02.780 --> 00:25:08.480
don't go too far to try and
create a native-looking app,

00:25:08.480 --> 00:25:11.440
because operating
systems change.

00:25:11.440 --> 00:25:14.100
Or if you don't put the right
amount of effort into it,

00:25:14.100 --> 00:25:17.240
and a user goes and uses
something that looks like a Mac

00:25:17.240 --> 00:25:21.470
on a PC, they're going
to be really confused.

00:25:21.470 --> 00:25:25.490
So just be really careful
about how you do that.

00:25:25.490 --> 00:25:28.480
So these apps get
launched from the taskbar.

00:25:28.480 --> 00:25:33.940
So if I go down, I can launch
apps exactly the same way.

00:25:33.940 --> 00:25:37.080
And there's a whole
set of additional APIs

00:25:37.080 --> 00:25:40.940
that give me more
native integration.

00:25:40.940 --> 00:25:43.730
For example, the
alarms API allows

00:25:43.730 --> 00:25:46.550
me to go through and set
alarms so that applications

00:25:46.550 --> 00:25:49.250
run on scheduled tasks,
just like setting up

00:25:49.250 --> 00:25:53.050
a Cron job or a scheduled
task in Windows.

00:25:53.050 --> 00:25:56.280
Or I can use the
Media Galleries API

00:25:56.280 --> 00:26:01.060
to be able to go and access
all of the content that

00:26:01.060 --> 00:26:09.050
is in my media folder, so
like My Pictures, My Videos,

00:26:09.050 --> 00:26:14.190
and My Music, so that I
have all of that access

00:26:14.190 --> 00:26:17.420
for those applications,
no matter where I am.

00:26:21.170 --> 00:26:25.300
But it also means that, like we
saw a moment ago with the heart

00:26:25.300 --> 00:26:30.920
rate, I have access to
Bluetooth, USB, and even

00:26:30.920 --> 00:26:33.790
raw networking APIs.

00:26:33.790 --> 00:26:36.400
So in order to
communicate with the Hue,

00:26:36.400 --> 00:26:39.160
I was making just
simple AJAX requests.

00:26:39.160 --> 00:26:42.340
I was just using
jQuery and saying, hey,

00:26:42.340 --> 00:26:45.610
go just make this AJAX request.

00:26:45.610 --> 00:26:51.470
But the Hue-- I won't
pick it up-- the Hue

00:26:51.470 --> 00:26:53.030
has this little hub.

00:26:53.030 --> 00:26:56.920
And in order to find the
IP address of the hub,

00:26:56.920 --> 00:27:00.390
you can either open
up your browser,

00:27:00.390 --> 00:27:07.090
go to your networking switch,
go look up the IP address,

00:27:07.090 --> 00:27:09.870
and then plug that in,
which is not very nice.

00:27:09.870 --> 00:27:13.510
It's kind of ugly and a
small pain in the butt.

00:27:13.510 --> 00:27:20.050
Or you can do an
SSDP query, which

00:27:20.050 --> 00:27:23.800
is-- I don't remember
what it stands for.

00:27:23.800 --> 00:27:26.330
But effectively, what you
do is you send out a UDP

00:27:26.330 --> 00:27:30.640
packet to a
broadcast IP address.

00:27:30.640 --> 00:27:35.740
And you say, hey, are there
any Philips Hue hubs out there?

00:27:35.740 --> 00:27:38.870
And then you sit
back and you listen.

00:27:38.870 --> 00:27:42.950
And after a few seconds, the hub
comes back and says, hey, yep.

00:27:42.950 --> 00:27:43.620
I'm here.

00:27:43.620 --> 00:27:45.905
I'm on IP address whatever.

00:27:48.780 --> 00:27:52.830
Imagine trying to do that
with an HTTP request.

00:27:52.830 --> 00:27:56.830
You can't send an HTTP
request to a broadcast IP.

00:27:56.830 --> 00:27:58.400
It just doesn't work.

00:27:58.400 --> 00:28:05.675
So you can send raw TCP or
UDP messages out to any IP.

00:28:08.280 --> 00:28:09.840
Think about that for a sec.

00:28:09.840 --> 00:28:16.110
You can do anything you want
with raw network support, which

00:28:16.110 --> 00:28:19.570
means with Chrome, you
could write your own web

00:28:19.570 --> 00:28:23.220
browser, which would be a little
silly, but you could do it.

00:28:23.220 --> 00:28:25.610
Or you could write a web server.

00:28:25.610 --> 00:28:30.690
So you could have Chrome
acting as a true HTTP server.

00:28:30.690 --> 00:28:33.830
You could write your
own WebSocket server.

00:28:33.830 --> 00:28:36.890
So there's a lot of stuff
that you can do with this,

00:28:36.890 --> 00:28:40.750
now that you have
full network access.

00:28:40.750 --> 00:28:45.185
USB means that you can go
and access any USB devices.

00:28:49.460 --> 00:28:52.580
I was going to try and do
this demo earlier today,

00:28:52.580 --> 00:28:56.010
and I can't get my
Chromebook to work on here.

00:28:56.010 --> 00:29:04.080
But I've got a Griffin
power knob here.

00:29:04.080 --> 00:29:06.090
This is something that
you guys may have seen.

00:29:06.090 --> 00:29:08.640
It came out maybe two
or three years ago.

00:29:08.640 --> 00:29:14.340
Really cool but totally
useless electronic toy.

00:29:14.340 --> 00:29:16.850
Little spinner
dial, so it spins.

00:29:16.850 --> 00:29:18.530
Woo-hoo, yay.

00:29:18.530 --> 00:29:21.820
You can push it and
click it once-- woo-hoo--

00:29:21.820 --> 00:29:25.260
or you can push and
click or push and turn.

00:29:25.260 --> 00:29:26.100
Yay.

00:29:26.100 --> 00:29:28.840
That's about all it does.

00:29:28.840 --> 00:29:33.670
They sold it for $75
when it first came out.

00:29:33.670 --> 00:29:35.826
It's about $30 now.

00:29:35.826 --> 00:29:37.700
If you're looking for
a fun toy to play with,

00:29:37.700 --> 00:29:39.340
it is kind of cool.

00:29:39.340 --> 00:29:42.440
So we'll take a look at
how I use this in a sec,

00:29:42.440 --> 00:29:44.420
but that means you
can use devices

00:29:44.420 --> 00:29:48.620
like this or any
other USB device

00:29:48.620 --> 00:29:52.630
without the need for
any custom controlled

00:29:52.630 --> 00:29:55.620
drivers or anything like that.

00:29:55.620 --> 00:30:00.010
How many of you guys have seen
those USB missile launchers?

00:30:00.010 --> 00:30:03.820
You can get them on the
little electronics stores.

00:30:03.820 --> 00:30:06.960
In the States, we
sell them on Amazon.

00:30:06.960 --> 00:30:10.430
And it's a Nerf
gun, effectively,

00:30:10.430 --> 00:30:12.630
but it's got a little
missile launcher.

00:30:12.630 --> 00:30:14.430
You plug it into USB.

00:30:14.430 --> 00:30:19.120
You can control this sucker
with a Chrome packaged app.

00:30:19.120 --> 00:30:21.640
So there's lots of
different things

00:30:21.640 --> 00:30:27.540
that you can do once you
have access to raw network,

00:30:27.540 --> 00:30:30.215
to Bluetooth, or to USB.

00:30:33.750 --> 00:30:39.040
So this is actually
one of the commands

00:30:39.040 --> 00:30:44.730
that I use to control
the spinner dial here.

00:30:44.730 --> 00:30:48.230
But all we do is say,
set the brightness.

00:30:48.230 --> 00:30:51.770
You create the object
that you want to have.

00:30:51.770 --> 00:30:55.430
So in this particular
case, I said, hey,

00:30:55.430 --> 00:31:02.537
I want-- I just gave away the
next half of my presentation--

00:31:02.537 --> 00:31:03.370
what you want to do.

00:31:03.370 --> 00:31:06.810
So I want to send a packet
out to endpoint two.

00:31:06.810 --> 00:31:09.070
And I just want to
send out this data.

00:31:09.070 --> 00:31:13.600
And that will set the brightness
on the LED for this spinner

00:31:13.600 --> 00:31:15.050
guy.

00:31:15.050 --> 00:31:18.450
So quick and easy way
to be able to set that.

00:31:18.450 --> 00:31:20.860
The hardest thing
about using this

00:31:20.860 --> 00:31:24.830
is actually to reverse
engineer the protocol

00:31:24.830 --> 00:31:26.330
to figure out what
you need to send.

00:31:31.070 --> 00:31:33.920
So I talked a little bit
about Chrome packaged apps

00:31:33.920 --> 00:31:38.170
should just work on
any device that you

00:31:38.170 --> 00:31:42.680
use, whether you're
using a Windows device,

00:31:42.680 --> 00:31:48.840
whether you're using a Chrome
OS device, whether Mac or Linux.

00:31:48.840 --> 00:31:53.350
Chrome Apps work wherever
you expect them to work.

00:31:53.350 --> 00:31:55.800
Actually, before I
go in there, let's

00:31:55.800 --> 00:31:57.840
go check out one other demo.

00:31:57.840 --> 00:32:00.670
I've got to switch back
on my network here.

00:32:00.670 --> 00:32:03.663
I'll pop over here.

00:32:03.663 --> 00:32:04.163
All right.

00:32:08.170 --> 00:32:15.490
So I don't have the USB
dial hooked up on this one.

00:32:15.490 --> 00:32:18.880
There's a little bit of stuff
that we're still working on.

00:32:18.880 --> 00:32:22.190
When you plug this
into a Mac, it

00:32:22.190 --> 00:32:26.640
sees this as an HID input
device, and our API for that

00:32:26.640 --> 00:32:27.890
is still coming.

00:32:27.890 --> 00:32:30.930
But on a Chromebook,
it works just fine.

00:32:30.930 --> 00:32:35.520
So now that we're on here,
I've created this Chrome app

00:32:35.520 --> 00:32:39.370
that effectively does the same
thing as my heart rate monitor,

00:32:39.370 --> 00:32:42.660
except it's a
little bit more fun.

00:32:42.660 --> 00:32:46.260
So let's go here, and all right.

00:32:46.260 --> 00:32:47.880
So we've got a nice green light.

00:32:47.880 --> 00:32:50.740
And don't you just love
that shade of green?

00:32:50.740 --> 00:32:53.370
Well, I like blue better.

00:32:53.370 --> 00:32:53.890
There we go.

00:32:53.890 --> 00:32:56.680
We got some blue.

00:32:56.680 --> 00:33:01.050
And, ooh, that's kind of pretty.

00:33:01.050 --> 00:33:05.740
So just by moving these
dials up and down,

00:33:05.740 --> 00:33:08.740
we can go through and try this.

00:33:08.740 --> 00:33:11.760
During the break,
after whoever is

00:33:11.760 --> 00:33:16.030
up next-- I think it's
Jake-- after the break,

00:33:16.030 --> 00:33:18.100
I'll set this thing
up with the dial,

00:33:18.100 --> 00:33:21.177
so that if you guys want to
come and just spin the dial,

00:33:21.177 --> 00:33:23.010
it's almost as much fun
as spinning a wheel,

00:33:23.010 --> 00:33:26.050
but you don't win anything.

00:33:26.050 --> 00:33:26.940
You can try it.

00:33:26.940 --> 00:33:29.210
You can play with it
and see how it works.

00:33:29.210 --> 00:33:32.350
But effectively, we're just
doing the same thing here where

00:33:32.350 --> 00:33:36.410
every time we move this,
we're going through

00:33:36.410 --> 00:33:39.730
and sending a new HTTP request.

00:33:39.730 --> 00:33:44.870
Now I would be smacked
upside the head

00:33:44.870 --> 00:33:48.450
if I didn't say
that perf matters.

00:33:48.450 --> 00:33:52.230
So one of the things that I
did while building this app,

00:33:52.230 --> 00:33:54.270
and you guys should
think about as you're

00:33:54.270 --> 00:33:59.580
going through, if I were to fire
an event for every single move

00:33:59.580 --> 00:34:03.710
here, this thing would
get really unresponsive.

00:34:03.710 --> 00:34:06.220
It would start bogging down.

00:34:06.220 --> 00:34:10.340
My light wouldn't change
as quickly as it does.

00:34:10.340 --> 00:34:13.679
So as I move this over,
it still doesn't quite

00:34:13.679 --> 00:34:16.420
change as fast as I want.

00:34:16.420 --> 00:34:19.170
So the way that I
wrote this is that I'm

00:34:19.170 --> 00:34:27.780
using RequestAnimationFrame to
go through and fire and check

00:34:27.780 --> 00:34:31.290
to see what the value
of this slider is.

00:34:31.290 --> 00:34:34.510
So this guy's running
just 60 frames per second,

00:34:34.510 --> 00:34:36.260
going, OK, has that
slider changed?

00:34:36.260 --> 00:34:36.760
No.

00:34:36.760 --> 00:34:37.719
Has that slider changed?

00:34:37.719 --> 00:34:38.030
Nope.

00:34:38.030 --> 00:34:38.639
OK.

00:34:38.639 --> 00:34:39.540
Oh, it changed.

00:34:39.540 --> 00:34:42.370
OK, now I'm going to
set this new value.

00:34:42.370 --> 00:34:49.460
So that way, I'm not
firing 255 events

00:34:49.460 --> 00:34:52.500
as I move that way
over there really fast.

00:34:52.500 --> 00:34:55.370
I really probably
only fired one event

00:34:55.370 --> 00:34:57.045
as I ran across there quickly.

00:35:00.760 --> 00:35:01.330
All right.

00:35:06.090 --> 00:35:07.310
I've got to get back.

00:35:11.460 --> 00:35:16.100
So these apps should work
everywhere that Chrome works.

00:35:16.100 --> 00:35:21.240
So whether that's Mac,
PC, Linux, Chrome OS,

00:35:21.240 --> 00:35:22.400
they should just work.

00:35:28.530 --> 00:35:31.640
But one of the things that's
been really important to us

00:35:31.640 --> 00:35:36.050
from day one is to
make these apps work

00:35:36.050 --> 00:35:40.050
across all devices, not
just desktops and laptops,

00:35:40.050 --> 00:35:42.730
but mobile devices as well.

00:35:42.730 --> 00:35:47.640
And so this is a project
that's still under development.

00:35:47.640 --> 00:35:51.410
You can go try it if you want
to go grab the code at GitHub.

00:35:51.410 --> 00:35:53.820
The instructions are accurate.

00:35:53.820 --> 00:35:57.180
I did it last night about
3 o'clock in the morning.

00:35:57.180 --> 00:35:58.020
It works.

00:35:58.020 --> 00:36:00.220
I wanted to make sure
I was up to date.

00:36:00.220 --> 00:36:01.660
Yeah, that's it.

00:36:01.660 --> 00:36:04.800
I couldn't sleep.

00:36:04.800 --> 00:36:07.970
But that's going to mean
that your app is going

00:36:07.970 --> 00:36:15.440
to work on Android or iOS,
using PhoneGap or Cordova.

00:36:15.440 --> 00:36:19.000
How many people are familiar
with Cordova or PhoneGap?

00:36:19.000 --> 00:36:20.540
A few people.

00:36:20.540 --> 00:36:23.730
Effectively, what
Cordova does is

00:36:23.730 --> 00:36:26.340
do exactly what
Chrome does, where

00:36:26.340 --> 00:36:29.930
it takes all of the assets and
resources that are required

00:36:29.930 --> 00:36:34.010
for your app to run, and it
uses a WebView to render those,

00:36:34.010 --> 00:36:36.546
and your application just works.

00:36:36.546 --> 00:36:37.420
So you're good to go.

00:36:37.420 --> 00:36:41.060
You can be running the
app in the same way.

00:36:41.060 --> 00:36:42.850
Now obviously,
you're going to need

00:36:42.850 --> 00:36:46.530
to make a few changes
to your application,

00:36:46.530 --> 00:36:49.910
because if you designed
your application like, say,

00:36:49.910 --> 00:36:54.160
Wunderlist, where it's a nice,
big screen, that might not

00:36:54.160 --> 00:36:56.340
fit so well on here.

00:36:56.340 --> 00:36:59.780
We've all seen desktop
websites on a mobile device,

00:36:59.780 --> 00:37:03.070
and it looks not pretty.

00:37:03.070 --> 00:37:05.500
So you want to take
that into account.

00:37:08.540 --> 00:37:11.970
So I said I had spent a
little bit of time last night.

00:37:11.970 --> 00:37:14.020
So let's bring this guy up.

00:37:21.230 --> 00:37:22.800
Well, you all know
my password now,

00:37:22.800 --> 00:37:27.340
so there goes that
level of security.

00:37:27.340 --> 00:37:28.430
All right.

00:37:28.430 --> 00:37:32.280
So does this app look familiar?

00:37:32.280 --> 00:37:34.580
Well, it looks also
nicely out of focus.

00:37:34.580 --> 00:37:40.000
But here, let's-- so I'm going
to change this brightness.

00:37:40.000 --> 00:37:42.180
Let's bring the brightness up.

00:37:42.180 --> 00:37:46.260
And the light is kind of greeny.

00:37:46.260 --> 00:37:49.740
Let's see if we
can make it blue.

00:37:49.740 --> 00:37:50.520
All right.

00:37:50.520 --> 00:37:55.510
So this same app, doing
exactly the same thing,

00:37:55.510 --> 00:37:59.200
is now running as a
mobile Chrome App.

00:38:03.797 --> 00:38:06.380
And you know my phone password,
so you can come play with this

00:38:06.380 --> 00:38:07.360
afterwards, too.

00:38:11.250 --> 00:38:13.760
So you've just got
that same ability

00:38:13.760 --> 00:38:17.610
to be able to take a
Chrome packaged app

00:38:17.610 --> 00:38:19.350
and make it run anywhere.

00:38:19.350 --> 00:38:24.480
And in fact, the process
is intended to be so easy.

00:38:24.480 --> 00:38:26.790
What we want you
to be able to do

00:38:26.790 --> 00:38:32.290
is say, type in on a command
line, build a Chrome app.

00:38:32.290 --> 00:38:35.110
Not quite literally
that, but close enough.

00:38:35.110 --> 00:38:36.960
Enter.

00:38:36.960 --> 00:38:40.830
It will then go and create
the Eclipse project for you.

00:38:40.830 --> 00:38:45.310
It'll create the
Xcode project for you.

00:38:45.310 --> 00:38:48.040
And then all you need to
do is go to the development

00:38:48.040 --> 00:38:51.290
environment and hit
Run, and it just works.

00:39:03.180 --> 00:39:03.783
All right.

00:39:07.840 --> 00:39:14.180
So Chrome Apps are a new way
to build desktop native style

00:39:14.180 --> 00:39:17.590
applications using the
tools and the skills

00:39:17.590 --> 00:39:22.460
that we know and love today,
using web technologies.

00:39:22.460 --> 00:39:26.710
If anybody's tried using any of
the Chrome embedded framework

00:39:26.710 --> 00:39:28.730
stuff, I was talking
to somebody earlier

00:39:28.730 --> 00:39:34.930
who's thinking about
using that, that hurts.

00:39:34.930 --> 00:39:37.150
That's just painful.

00:39:37.150 --> 00:39:39.560
This, super easy.

00:39:39.560 --> 00:39:41.960
There's no DLLs to update.

00:39:41.960 --> 00:39:45.090
There's no C or C++
code to compile.

00:39:45.090 --> 00:39:46.380
You're good to go.

00:39:46.380 --> 00:39:50.280
You can just write the
HTML, CSS, and JavaScript

00:39:50.280 --> 00:39:55.840
that you know and love
today, and it works offline.

00:39:55.840 --> 00:39:58.450
It works with all of
the cloud providers

00:39:58.450 --> 00:40:01.760
and gives you a great way
to be able to store data up

00:40:01.760 --> 00:40:04.170
in the cloud.

00:40:04.170 --> 00:40:06.480
It gives you full
native integration

00:40:06.480 --> 00:40:08.810
so that you can
Alt-Tab between apps.

00:40:08.810 --> 00:40:13.430
Users start apps in the same
way that they're used to.

00:40:13.430 --> 00:40:16.160
And it works across all devices.

00:40:16.160 --> 00:40:19.090
Now there's one other thing
that I'm going to mention.

00:40:19.090 --> 00:40:20.730
We haven't talked
a lot about it,

00:40:20.730 --> 00:40:24.170
but this is something that I
think is really interesting,

00:40:24.170 --> 00:40:27.950
and when it comes to fruition,
is going to make these apps

00:40:27.950 --> 00:40:29.980
a lot more interesting.

00:40:29.980 --> 00:40:32.930
Today, if you go to
the Chrome Web Store

00:40:32.930 --> 00:40:37.080
using Internet Explorer,
we sort of smile politely,

00:40:37.080 --> 00:40:39.290
pat you on the head, and
say please install Chrome

00:40:39.290 --> 00:40:42.930
and then come back.

00:40:42.930 --> 00:40:45.440
We want to get this
to a point where

00:40:45.440 --> 00:40:50.160
if you come to the Chrome Web
Store using Internet Explorer

00:40:50.160 --> 00:40:53.310
or Firefox or
Safari or Opera, you

00:40:53.310 --> 00:40:55.910
can click Install on
any of those apps,

00:40:55.910 --> 00:40:59.400
and we'll handle all
of the magic for you

00:40:59.400 --> 00:41:05.070
and install the Chrome runtime
on the user's computer.

00:41:05.070 --> 00:41:07.400
Won't necessarily
install the browser,

00:41:07.400 --> 00:41:09.880
but the runtime will
be there so that you

00:41:09.880 --> 00:41:12.980
get the same experience
as a developer

00:41:12.980 --> 00:41:16.570
where you've got
the latest Chrome.

00:41:16.570 --> 00:41:18.960
The user's got the latest
version of the app.

00:41:18.960 --> 00:41:20.220
And you're all set.

00:41:20.220 --> 00:41:21.570
You're good to go.

00:41:21.570 --> 00:41:23.260
And you don't have
to think about it,

00:41:23.260 --> 00:41:26.980
and the user has no clue that
they've just installed Chrome,

00:41:26.980 --> 00:41:29.990
and they're using your app
as a Chrome packaged app.

00:41:29.990 --> 00:41:33.360
They just know that they've
installed this great app

00:41:33.360 --> 00:41:36.210
that you guys have written.

00:41:36.210 --> 00:41:41.550
So the link for the
slides is up there.

00:41:41.550 --> 00:41:44.650
I think I've probably got
like five minutes left,

00:41:44.650 --> 00:41:47.460
maybe three minutes left.

00:41:47.460 --> 00:41:50.780
About three minutes left.

00:41:50.780 --> 00:41:52.850
The link to the
slides is up there.

00:41:52.850 --> 00:41:58.951
There's also some learn more
stuff there on that last slide.

00:41:58.951 --> 00:41:59.950
Are there any questions?

00:42:05.991 --> 00:42:06.866
AUDIENCE: [INAUDIBLE]

00:42:20.720 --> 00:42:23.100
PETE LEPAGE: Yeah,
so the question was,

00:42:23.100 --> 00:42:26.410
in the manifest file,
we have a JavaScript

00:42:26.410 --> 00:42:29.400
file that is our
background script.

00:42:29.400 --> 00:42:31.550
Does that work on
the mobile device?

00:42:31.550 --> 00:42:33.180
And the answer is yes.

00:42:33.180 --> 00:42:35.360
We have a special
set of wrappers

00:42:35.360 --> 00:42:39.450
that you'll find at that link
that will go through and look

00:42:39.450 --> 00:42:43.250
at the manifest file,
look at the main.js file,

00:42:43.250 --> 00:42:46.640
and figure out how to
package all of that

00:42:46.640 --> 00:42:50.280
into the Cordova
environment so that you

00:42:50.280 --> 00:42:53.070
don't have to do anything.

00:42:53.070 --> 00:42:58.630
The cool thing is you
have one code base,

00:42:58.630 --> 00:43:00.440
and you don't have to
go and screw with it

00:43:00.440 --> 00:43:02.260
to get it to work
in other places.

00:43:02.260 --> 00:43:06.320
We'll handle all
of that for you.

00:43:06.320 --> 00:43:08.220
All right.

00:43:08.220 --> 00:43:10.230
I'll be around after the break.

00:43:10.230 --> 00:43:13.120
Thank you guys very much.

00:43:13.120 --> 00:43:14.580
We'll play with
the lights later.

00:43:14.580 --> 00:43:15.410
Thank you.

00:43:15.410 --> 00:43:28.366
[APPLAUSE]

