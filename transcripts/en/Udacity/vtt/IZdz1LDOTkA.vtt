WEBVTT
Kind: captions
Language: en

00:00:00.250 --> 00:00:04.474
We just said that if we want to make a general statement about what the output,

00:00:04.474 --> 00:00:08.764
based on a general input for this function we're talking about here, would be,

00:00:08.764 --> 00:00:12.485
if the input was x, then the output would have to be x plus 2. Since the

00:00:12.485 --> 00:00:16.708
function of our function is to increase all input values by 2. So, to illustrate

00:00:16.708 --> 00:00:20.551
this point a little bit differently, we're going to so some very, very basic

00:00:20.551 --> 00:00:24.712
computer programming. Now, don't worry if you've never done anything like this

00:00:24.712 --> 00:00:28.872
before. This is just to illustrate how simple function works. You'll never be

00:00:28.872 --> 00:00:33.312
tested on this or anything. This is just for you to explore and have fun and

00:00:33.312 --> 00:00:37.835
maybe even understand things a little better. Now what we're going to do is to

00:00:37.835 --> 00:00:40.922
use one particular programming language called Python, to create the same

00:00:40.922 --> 00:00:45.374
increase by 2 function that we just did. Now remember, that we said in a general

00:00:45.374 --> 00:00:50.855
case of wanting to increase by 2, we take an input of x and then have our output

00:00:50.855 --> 00:00:55.738
be x plus 2. It's the same thing as happening up here in these two lines of

00:00:55.738 --> 00:01:00.709
code. The letters def stand for define and they're saying that we're going to

00:01:00.709 --> 00:01:05.868
define or create a function, which is named IncreaseByTwo, and that function is

00:01:05.868 --> 00:01:10.937
going to take in some input, this letter x in this case as the general case. And

00:01:10.937 --> 00:01:16.666
that function is going to do some stuff and then spit out this output, x plus 2.

00:01:16.666 --> 00:01:21.646
So, these two lines of code are basically creating the machine that this

00:01:21.646 --> 00:01:26.678
function is. The machine that transforms whatever input value it gets into some

00:01:26.678 --> 00:01:31.496
output value. Now, please notice here that we do have parentheses here around

00:01:31.496 --> 00:01:35.750
the input value. This is absolutely nothing to do with multiplication. These

00:01:35.750 --> 00:01:40.024
parenthesis just indicate, this is what we are calling the input. let's try it

00:01:40.024 --> 00:01:45.500
out. let's see if this function works. let's say that I want to use an input of 7

00:01:45.500 --> 00:01:51.122
or plug in 7 in place of x in my IncreaseByTwo function. What number, do you

00:01:51.122 --> 00:01:55.167
think, this program is going to spit out in the end. Now again, you don't need

00:01:55.167 --> 00:01:58.836
to know anything about how programs actually work. All you need to do is think

00:01:58.836 --> 00:02:02.690
about the relationship between the input here and the output here. And see,

00:02:02.690 --> 00:02:07.385
then, what the output would be if 7 is the input. Please put your answer in this

00:02:07.385 --> 00:02:08.163
box over here.

