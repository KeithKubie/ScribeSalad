WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.736
[MUSIC PLAYING]

00:00:09.570 --> 00:00:12.430
SPEAKER 1: So let's
talk about Flutter.

00:00:12.430 --> 00:00:14.560
Our vision for Flutter is
something that many of us

00:00:14.560 --> 00:00:16.990
have been dreaming of for years.

00:00:16.990 --> 00:00:21.760
A powerful, general
purpose, open UI toolkit

00:00:21.760 --> 00:00:25.870
for building stunning
experiences on any device.

00:00:25.870 --> 00:00:30.400
Embedded, mobile,
desktop, or beyond.

00:00:30.400 --> 00:00:33.250
There are four
characteristics of Flutter

00:00:33.250 --> 00:00:36.430
that we think make it a
unique platform for you

00:00:36.430 --> 00:00:40.480
to build native mobile
application experiences.

00:00:40.480 --> 00:00:44.850
Firstly, Flutter enables
you to build beautiful apps.

00:00:44.850 --> 00:00:48.160
Flutter provides a rich palette
of tools that give you control

00:00:48.160 --> 00:00:51.160
over every pixel on the screen.

00:00:51.160 --> 00:00:53.290
Secondly, Flutter is fast.

00:00:53.290 --> 00:00:56.320
It's powered by the blazing
speed Skia 2D graphics

00:00:56.320 --> 00:00:59.620
engine which enables hardware
accelerated graphics.

00:00:59.620 --> 00:01:02.450
Thirdly, Flutter is productive.

00:01:02.450 --> 00:01:05.319
Flutter introduces a
revolutionary new capability

00:01:05.319 --> 00:01:07.930
for developers and designers
to iterate on their apps

00:01:07.930 --> 00:01:09.110
in real time.

00:01:09.110 --> 00:01:12.120
And lastly, Flutter is open.

00:01:12.120 --> 00:01:15.340
Flutter itself is open source,
open for contributions,

00:01:15.340 --> 00:01:17.200
open for extendability.

00:01:17.200 --> 00:01:19.270
Every line of code
is available for you

00:01:19.270 --> 00:01:22.240
to read, fork, extend, amend.

00:01:22.240 --> 00:01:24.640
Put all this
together and you have

00:01:24.640 --> 00:01:26.860
Flutter, a framework
for building

00:01:26.860 --> 00:01:31.540
beautiful, native experiences
for iOs or Android

00:01:31.540 --> 00:01:33.640
from a single code base.

00:01:33.640 --> 00:01:37.430
SPEAKER 2: So we built
an app for this event.

00:01:37.430 --> 00:01:41.630
It's called The
History of Everything.

00:01:41.630 --> 00:01:45.290
And I'm going to give you
a little tour of the app.

00:01:45.290 --> 00:01:49.325
This is because Flutter compiles
ahead of time to arm code.

00:01:49.325 --> 00:01:52.000
All right, so there is no
[INAUDIBLE] to warm up.

00:01:52.000 --> 00:01:53.920
There are no scripts to parse.

00:01:53.920 --> 00:01:56.440
So let's take this
a little further.

00:01:56.440 --> 00:01:57.880
It's nice to have scrolling.

00:01:57.880 --> 00:02:01.300
But how can we
turn this up to 11?

00:02:01.300 --> 00:02:05.710
So I'm going to zoom right past
dinosaurs, because it turns out

00:02:05.710 --> 00:02:07.600
nobody likes dinosaurs.

00:02:07.600 --> 00:02:10.889
I can sway the tree
above of Newton.

00:02:10.889 --> 00:02:15.550
And here we have an iPhone
from 2013, so five years ago.

00:02:15.550 --> 00:02:18.110
And again, it runs just fine.

00:02:18.110 --> 00:02:20.630
But can we take it
a little further?

00:02:20.630 --> 00:02:23.170
Let me zoom in.

00:02:23.170 --> 00:02:27.160
Oh, is this an actual
Google map running

00:02:27.160 --> 00:02:29.280
inside my Flutter application?

00:02:29.280 --> 00:02:32.800
[APPLAUSE]

00:02:32.800 --> 00:02:35.760
While it's being swayed around.

00:02:35.760 --> 00:02:37.810
You know, sure.

00:02:37.810 --> 00:02:41.530
We've seen an application
that I think is beautiful

00:02:41.530 --> 00:02:46.570
that was built in three
months by three people that

00:02:46.570 --> 00:02:49.960
is fast on a wide
range of devices,

00:02:49.960 --> 00:02:52.050
and that because of
the openness of Flutter

00:02:52.050 --> 00:02:54.910
can do cool things like this.

00:02:54.910 --> 00:02:57.220
SPEAKER 3: I'm so
excited to tell you today

00:02:57.220 --> 00:03:00.520
why I believe that Flutter
is the perfect platform

00:03:00.520 --> 00:03:03.160
for executing pixel
perfect designs.

00:03:03.160 --> 00:03:06.230
Right now, good
design is expensive.

00:03:06.230 --> 00:03:09.270
The designer hands us something
detailed and beautiful.

00:03:09.270 --> 00:03:11.770
But we push back on
what makes it special.

00:03:11.770 --> 00:03:13.960
We end up compromising
on the details that

00:03:13.960 --> 00:03:16.540
make our experience excellent.

00:03:16.540 --> 00:03:19.720
So with the best of intentions,
we say we'll get to it later.

00:03:19.720 --> 00:03:21.130
But let's be honest.

00:03:21.130 --> 00:03:23.080
Later never comes.

00:03:23.080 --> 00:03:25.390
We've looked closely
at what developers

00:03:25.390 --> 00:03:27.760
need to execute
complex, high fidelity

00:03:27.760 --> 00:03:31.960
designs on the devices of today,
and put it at their fingertips.

00:03:31.960 --> 00:03:35.500
We can ship the app we
really want with detail

00:03:35.500 --> 00:03:39.400
and polish and fewer of
those painful compromises.

00:03:39.400 --> 00:03:42.640
These are reusable widgets
designed by the material design

00:03:42.640 --> 00:03:44.090
team here at Google.

00:03:44.090 --> 00:03:47.200
We released a major
expansion of material,

00:03:47.200 --> 00:03:50.290
making the system more
flexible and expressive.

00:03:50.290 --> 00:03:53.800
You also get Cupertino,
the faithful implementation

00:03:53.800 --> 00:03:56.770
of Apple's iOs design language.

00:03:56.770 --> 00:04:00.100
Cupertino gives us
action sheets, alerts,

00:04:00.100 --> 00:04:04.480
segment controls, sliders,
nav bars, switches.

00:04:04.480 --> 00:04:07.390
Over two dozen widgets
that look like they

00:04:07.390 --> 00:04:09.610
came right out of UIK.

00:04:09.610 --> 00:04:12.790
But 100% open source.

00:04:12.790 --> 00:04:15.370
If I have a question
about a text field,

00:04:15.370 --> 00:04:17.500
I can go look at
its source code.

00:04:17.500 --> 00:04:20.620
And you can't do that
with private API's.

00:04:20.620 --> 00:04:26.590
Flutter makes executing
beautiful designs easy.

00:04:26.590 --> 00:04:29.380
SPEAKER 1: Flair bridges
the gap between designers

00:04:29.380 --> 00:04:31.160
and developers.

00:04:31.160 --> 00:04:34.750
Designers are at last
able to fully participate

00:04:34.750 --> 00:04:38.230
from beginning to end in
the development of an app,

00:04:38.230 --> 00:04:41.770
creating interactive content
that can evolve along

00:04:41.770 --> 00:04:43.430
with the rest of the app.

00:04:43.430 --> 00:04:44.980
SPEAKER 4: Where
Flair really shines

00:04:44.980 --> 00:04:47.410
is at building complex
animation systems that

00:04:47.410 --> 00:04:48.940
are really easy to control.

00:04:48.940 --> 00:04:51.700
We have full support for
bones, constraints, and inverse

00:04:51.700 --> 00:04:52.630
kinematics.

00:04:52.630 --> 00:04:55.000
SPEAKER 5: As you can see,
Flair removes the churn

00:04:55.000 --> 00:04:56.870
between design and development.

00:04:56.870 --> 00:05:00.280
And it really allows you to make
great design a fundamental part

00:05:00.280 --> 00:05:01.750
of your process.

00:05:01.750 --> 00:05:05.830
I'm really excited to announce
that Flair is launching today

00:05:05.830 --> 00:05:08.590
on 2Dimensions.com,
and it's free.

00:05:08.590 --> 00:05:10.000
[APPLAUSE]

00:05:10.000 --> 00:05:11.170
SPEAKER 6: What we want to
do is show you something

00:05:11.170 --> 00:05:12.753
a little different,
what it's actually

00:05:12.753 --> 00:05:16.590
like to build a Flutter app,
what the developer experience

00:05:16.590 --> 00:05:17.440
is like.

00:05:17.440 --> 00:05:21.260
I wanted to build a retro clock
because I love my '70s chic.

00:05:21.260 --> 00:05:23.350
SPEAKER 7: And I wanted
to showcase the fact

00:05:23.350 --> 00:05:25.300
that we can use so
many different features

00:05:25.300 --> 00:05:27.070
with our mobile phones.

00:05:27.070 --> 00:05:28.900
So we're going to be
building a photo app,

00:05:28.900 --> 00:05:30.920
because interactive
timers are the best.

00:05:30.920 --> 00:05:32.378
SPEAKER 6: And what
I'm going to do

00:05:32.378 --> 00:05:34.230
is I'm going to put in a stack.

00:05:34.230 --> 00:05:35.710
And the reason I'm
using a stack is

00:05:35.710 --> 00:05:38.050
that we can layer widgets on
top of each other with a stack.

00:05:38.050 --> 00:05:39.340
And I'm going to start
with a wood grain.

00:05:39.340 --> 00:05:39.880
SPEAKER 7: Oh there you go.

00:05:39.880 --> 00:05:41.504
SPEAKER 6: Oh dear
me, it's wood grain.

00:05:41.504 --> 00:05:42.670
Yes!

00:05:42.670 --> 00:05:43.390
And there we go.

00:05:43.390 --> 00:05:45.620
We have a card which
is kind of boring.

00:05:45.620 --> 00:05:47.680
So let's make a
little more framing.

00:05:47.680 --> 00:05:49.210
So I can give it a shape.

00:05:49.210 --> 00:05:51.520
And I can give it a border.

00:05:51.520 --> 00:05:53.530
And whoa, there we go.

00:05:53.530 --> 00:05:54.730
Best clock ever.

00:05:54.730 --> 00:05:56.800
Emily's done some funky
math, to basically say

00:05:56.800 --> 00:06:00.950
every time we hit zero on
the seconds, take a picture.

00:06:00.950 --> 00:06:05.150
And so we have managed to
squeeze in stacks, columns,

00:06:05.150 --> 00:06:06.802
rows, and list views.

00:06:06.802 --> 00:06:08.260
So we're going to
style up the time

00:06:08.260 --> 00:06:10.030
and we're going to make
it not look super modern.

00:06:10.030 --> 00:06:11.380
We're going to go art deco.

00:06:11.380 --> 00:06:12.505
SPEAKER 7: So you see that?

00:06:12.505 --> 00:06:17.530
If you tap the button, you
can see the text will change.

00:06:17.530 --> 00:06:20.020
SPEAKER 6: Three, two, one.

00:06:20.020 --> 00:06:22.755
Say cheese!

00:06:22.755 --> 00:06:23.620
Oh look at that.

00:06:23.620 --> 00:06:24.205
There we go.

00:06:24.205 --> 00:06:24.935
[APPLAUSE]

00:06:24.935 --> 00:06:26.547
Woo!

00:06:26.547 --> 00:06:28.630
SPEAKER 8: I would like
to show you something cool

00:06:28.630 --> 00:06:30.190
that we've been
adding to Flutter.

00:06:30.190 --> 00:06:32.680
As you can see here, we
have an avatar of me.

00:06:32.680 --> 00:06:35.440
And just like the timeline
app, the design animation

00:06:35.440 --> 00:06:37.440
has been provided using Flair.

00:06:37.440 --> 00:06:43.160
Close my eyes, tilt
right, and left.

00:06:43.160 --> 00:06:45.469
It updates in real time.

00:06:45.469 --> 00:06:47.260
SPEAKER 9: We believe
the economy is better

00:06:47.260 --> 00:06:49.330
when everyone has access.

00:06:49.330 --> 00:06:52.270
No one should be left out
because the cost is too high

00:06:52.270 --> 00:06:54.860
or the technology too complex.

00:06:54.860 --> 00:06:56.600
We started with a
little light reader

00:06:56.600 --> 00:06:59.189
that let millions of merchants
participate in the economy

00:06:59.189 --> 00:07:00.730
by making it easy
to take credit card

00:07:00.730 --> 00:07:02.540
payments with your SmartPhone.

00:07:02.540 --> 00:07:04.540
Now we've been following
Flutter since the beta.

00:07:04.540 --> 00:07:06.640
And we're impressed by
how it enables developers

00:07:06.640 --> 00:07:10.360
to quickly create beautiful and
perform at cross platform apps.

00:07:10.360 --> 00:07:12.700
That's why today we're
so excited to announce

00:07:12.700 --> 00:07:14.530
two new plugins for
Flutter development.

00:07:14.530 --> 00:07:17.410
The Flutter plugin for
the square Reader SDK

00:07:17.410 --> 00:07:19.960
and the Flutter plugin for
the In-App Payments SDK.

00:07:19.960 --> 00:07:22.450
Collins Family Orchards is a
fourth generation family farm.

00:07:22.450 --> 00:07:24.366
But they wanted to build
an app to accommodate

00:07:24.366 --> 00:07:26.260
the specific needs of
their growing business.

00:07:26.260 --> 00:07:28.090
This app helps them
take and track payments

00:07:28.090 --> 00:07:29.630
at each farmer's
market they go to.

00:07:29.630 --> 00:07:34.120
So let's say today that I'm at
a farmer's market in Bellevue.

00:07:34.120 --> 00:07:36.520
Great, and I'll enter
the amount to charge.

00:07:36.520 --> 00:07:38.910
And then I'll click Charge
to start the transaction.

00:07:38.910 --> 00:07:41.591
And I'll insert my card
to take the payment.

00:07:41.591 --> 00:07:42.090
Great!

00:07:42.090 --> 00:07:43.534
And the payment was accepted.

00:07:43.534 --> 00:07:46.200
Now when we look at that list of
transactions for this location,

00:07:46.200 --> 00:07:48.390
we can see the payment that
I just took right there.

00:07:48.390 --> 00:07:50.223
The Flutter plugin for
the square Reader SDK

00:07:50.223 --> 00:07:51.410
is available today.

00:07:51.410 --> 00:07:53.493
And the Flutter plugin for
the In-App Payments SDK

00:07:53.493 --> 00:07:55.110
is available for early access.

00:07:55.110 --> 00:07:58.500
SPEAKER 10: So I'm proudly
presenting you our brand

00:07:58.500 --> 00:08:01.710
new product, codemagic.

00:08:01.710 --> 00:08:03.480
And I'm going to
show how easy it

00:08:03.480 --> 00:08:06.250
is to set up the whole
pipeline to build your Flutter

00:08:06.250 --> 00:08:08.080
apps on codemagic.

00:08:08.080 --> 00:08:08.850
It's very easy.

00:08:08.850 --> 00:08:10.860
You just kick off
the first build.

00:08:10.860 --> 00:08:14.380
You see the whole process
here on one screen.

00:08:14.380 --> 00:08:17.940
So as I'm on Slack very
often, then of course,

00:08:17.940 --> 00:08:21.780
I want my notification to
end up in Slack channel.

00:08:21.780 --> 00:08:24.090
So I have chosen
here that I want

00:08:24.090 --> 00:08:27.020
to know when the build
starts and when it fails.

00:08:27.020 --> 00:08:29.090
Or when the artifacts
are published.

00:08:29.090 --> 00:08:29.590
OK.

00:08:29.590 --> 00:08:32.190
So you see that it's currently
building the Android app

00:08:32.190 --> 00:08:36.120
and already you can open up
the steps to see everything

00:08:36.120 --> 00:08:37.600
what's going on here.

00:08:37.600 --> 00:08:40.740
You can also actually
[INAUDIBLE] your workflows.

00:08:40.740 --> 00:08:44.670
So you know, I'm convinced
that Flutter plus codemagic

00:08:44.670 --> 00:08:47.490
is the fastest route to get your
apps to the hands of your end

00:08:47.490 --> 00:08:48.270
users.

00:08:48.270 --> 00:08:53.580
So I invite everybody to join
and sign up at codemagic.io.

00:08:53.580 --> 00:08:54.570
It's free.

00:08:54.570 --> 00:08:55.970
It's live now.

00:08:55.970 --> 00:08:56.870
[CHEERING]

00:08:56.870 --> 00:08:58.530
SPEAKER 1: Flutter
was not conceived

00:08:58.530 --> 00:09:02.340
as an SDK for iOs and Android.

00:09:02.340 --> 00:09:06.100
Our vision for Flutter
is to be a portable UI

00:09:06.100 --> 00:09:10.610
toolkit that can go wherever
you need to paint pixels.

00:09:10.610 --> 00:09:13.380
The Flutter engine is
inherently cross platform.

00:09:13.380 --> 00:09:16.350
And it can be embedded
in all kinds of hardware.

00:09:16.350 --> 00:09:19.650
We believe Flutter is a useful
building block for these kinds

00:09:19.650 --> 00:09:21.390
of embedded scenarios.

00:09:21.390 --> 00:09:22.980
Another very practical
example of how

00:09:22.980 --> 00:09:25.290
we are already
going beyond mobile

00:09:25.290 --> 00:09:27.660
is Flutter Desktop Embedding.

00:09:27.660 --> 00:09:30.270
This is an open
source project that

00:09:30.270 --> 00:09:33.630
enables Flutter apps to run
on Mac, Linux, and Windows.

00:09:33.630 --> 00:09:36.120
And in fact, when we were
putting this presentation

00:09:36.120 --> 00:09:38.190
together, we were
thinking, how could we

00:09:38.190 --> 00:09:42.210
make our slides as
beautiful as possible?

00:09:42.210 --> 00:09:47.640
So we built the entire
presentation in Flutter.

00:09:47.640 --> 00:09:49.530
There's one other
place we'd like

00:09:49.530 --> 00:09:53.010
to go with Flutter that really
demonstrates the groundbreaking

00:09:53.010 --> 00:09:55.170
potential of this technology.

00:09:55.170 --> 00:09:58.020
We're calling this Hummingbird.

00:09:58.020 --> 00:10:01.590
And it's a port of Flutter that
runs on the modern standards

00:10:01.590 --> 00:10:02.590
based web.

00:10:02.590 --> 00:10:05.160
Here's by simple mobile
app that we've been

00:10:05.160 --> 00:10:07.710
running on an Android Tablet.

00:10:07.710 --> 00:10:10.080
And everything
you're seeing here

00:10:10.080 --> 00:10:14.070
is Flutter running on
the desktop web browser.

00:10:14.070 --> 00:10:16.980
Importantly, it's
the same Flutter code

00:10:16.980 --> 00:10:19.950
running in this browser
as on the phone.

00:10:19.950 --> 00:10:21.870
In the meantime, we're
publishing right now

00:10:21.870 --> 00:10:24.600
a blog article that describes
more of the technical details

00:10:24.600 --> 00:10:25.970
behind Hummingbird.

00:10:25.970 --> 00:10:29.100
And we'll have a lot more to
share at next year's Google I/O

00:10:29.100 --> 00:10:30.845
Conference.

00:10:30.845 --> 00:10:32.970
SPEAKER 11: So finally,
and really the whole reason

00:10:32.970 --> 00:10:36.060
why I'm up here, is to
say a big thank you.

00:10:36.060 --> 00:10:39.000
Thank you for taking time out of
your day to celebrate with us.

00:10:39.000 --> 00:10:40.950
Flutter has always
been, and always will

00:10:40.950 --> 00:10:43.050
be a community effort.

00:10:43.050 --> 00:10:47.070
Built together, in the open,
no one company or one team

00:10:47.070 --> 00:10:50.696
can reach all of the places
we want Flutter to go.

00:10:50.696 --> 00:10:52.695
So we close with our hats
off to that community.

00:10:52.695 --> 00:10:56.520
The stories like we're about to
show you give us the motivation

00:10:56.520 --> 00:10:59.850
to continue each
day in this mission.

00:10:59.850 --> 00:11:00.360
Thank you.

00:11:00.360 --> 00:11:02.210
[APPLAUSE]

