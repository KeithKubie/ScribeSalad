WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Next question comes from Eduardo Lopez.

00:00:02.000 --> 00:00:05.000
He points out that Python is a flexible language.

00:00:05.000 --> 00:00:08.000
We can use many different programming paradigms.

00:00:08.000 --> 00:00:12.000
We can do functional, procedural, or office-oriented programming.

00:00:12.000 --> 00:00:16.000
How do you decide which of these paradigms to use when approaching a new problem?

00:00:16.000 --> 00:00:26.000
Yeah, I guess I try to think of things as how can I get as close to the problem as possible?

00:00:26.000 --> 00:00:29.000
And so I want to program at the level of the problem.

00:00:29.000 --> 00:00:34.000
And then, incidentally, I have to program with a particular language.

00:00:34.000 --> 00:00:37.000
And so I start analyzing the problem and saying,

00:00:37.000 --> 00:00:40.000
what are the pieces of this problem,

00:00:40.000 --> 00:00:42.000
what are the objects I'm going to be manipulating,

00:00:42.000 --> 00:00:45.000
what are the ways I'm going to manipulate them,

00:00:45.000 --> 00:00:49.000
and try to do most of the analysis at that level.

00:00:49.000 --> 00:00:52.000
And then once that analysis is done, then I can say,

00:00:52.000 --> 00:00:54.000
well, what do I have in my programming language?

00:00:54.000 --> 00:00:58.000
And there there might be some differences between languages.

00:00:58.000 --> 00:01:01.000
So if you're using Python, you might have more functions.

00:01:01.000 --> 00:01:03.000
If you're are using Java, you might have more classes.

00:01:03.000 --> 00:01:06.000
But they're still implementing the same basic set of ideas.

00:01:06.000 --> 00:01:10.000
And I like that approach

00:01:10.000 --> 00:01:16.000
because there is a more direct connection between the problem and the solution,

00:01:16.000 --> 00:01:21.000
rather than a multistep of going from the problem to the language implementation

00:01:21.000 --> 00:01:24.000
and then back to the solution.

00:01:24.000 --> 00:01:26.000
All right. Thank you.

00:01:26.000 --> 00:01:28.000
That's all we have for this week. See you next week.

00:01:28.000 --> 00:01:29.000
See you next week.

