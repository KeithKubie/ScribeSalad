WEBVTT
Kind: captions
Language: en

00:00:07.968 --> 00:00:10.180
ERIC KOTEDA: Hello, and
welcome to Google Apps

00:00:10.180 --> 00:00:11.380
Unscripted.

00:00:11.380 --> 00:00:15.240
This is our renamed Google Apps
Script Office Hours where

00:00:15.240 --> 00:00:19.490
we cover news, events related to
App Script, and answer your

00:00:19.490 --> 00:00:20.520
questions live.

00:00:20.520 --> 00:00:22.860
So if you do happen to be
watching live, you can go to

00:00:22.860 --> 00:00:27.760
developers.google.com, click on
the Live link and join us

00:00:27.760 --> 00:00:28.480
in a Hangout.

00:00:28.480 --> 00:00:31.010
And later in the show, we'll
be taking live questions.

00:00:31.010 --> 00:00:34.130
With me today, Kalyan Reddy,
another member of the App

00:00:34.130 --> 00:00:34.630
Script team.

00:00:34.630 --> 00:00:35.580
KALYAN REDDY: Hello, everyone.

00:00:35.580 --> 00:00:38.950
ERIC KOTEDA: And so this is
the start of the new year.

00:00:38.950 --> 00:00:41.740
Start of a new year for
Google App Script.

00:00:41.740 --> 00:00:43.720
It's been a while since we did
one of our GDLs, one of these

00:00:43.720 --> 00:00:45.490
Google Developer
Live episodes.

00:00:45.490 --> 00:00:47.410
And we have a little
bit to cover.

00:00:47.410 --> 00:00:50.540
So I'd say the first piece of
news is that we are launching

00:00:50.540 --> 00:00:53.890
a whole bunch of new
GDL content.

00:00:53.890 --> 00:00:55.260
We had a lot of success
last year.

00:00:55.260 --> 00:00:56.595
You were on a couple
shows, right?

00:00:56.595 --> 00:00:57.150
KALYAN REDDY: Yeah, yeah.

00:00:57.150 --> 00:00:58.150
ERIC KOTEDA: I think you
did a charts one?

00:00:58.150 --> 00:00:59.195
KALYAN REDDY: Yep,
that's right.

00:00:59.195 --> 00:01:00.630
ERIC KOTEDA: Yeah, so that was
very popular actually.

00:01:00.630 --> 00:01:01.570
I remember seeing
the view count.

00:01:01.570 --> 00:01:02.595
A lot of people liked
the charts episode.

00:01:02.595 --> 00:01:05.129
KALYAN REDDY: And we had a
couple of other ones on Twilio

00:01:05.129 --> 00:01:07.990
and some of the cool integration
with other

00:01:07.990 --> 00:01:08.330
applications.

00:01:08.330 --> 00:01:08.910
ERIC KOTEDA: Yeah.

00:01:08.910 --> 00:01:10.510
So we've been trying to
bring you guys a lot

00:01:10.510 --> 00:01:11.350
of interesting content.

00:01:11.350 --> 00:01:13.920
And so we've done some work
to re-brand a little bit.

00:01:13.920 --> 00:01:16.290
So as I just already mentioned,
this is kind of

00:01:16.290 --> 00:01:19.150
like Google Apps Script Office
Hours re-branded, called

00:01:19.150 --> 00:01:20.460
Google Apps Unscripted.

00:01:20.460 --> 00:01:22.230
And as you can tell,
we are not very

00:01:22.230 --> 00:01:23.772
scripted at the moment.

00:01:23.772 --> 00:01:26.230
But we also have two
more really cool

00:01:26.230 --> 00:01:27.120
episodes coming up.

00:01:27.120 --> 00:01:29.580
So the first is on
February 12th.

00:01:29.580 --> 00:01:31.260
That's next week, on Tuesday.

00:01:31.260 --> 00:01:35.120
We are going to be holding
State of the Script 2013.

00:01:35.120 --> 00:01:37.690
We're riding on the back of
State of the Union address

00:01:37.690 --> 00:01:38.770
here in the United States.

00:01:38.770 --> 00:01:41.000
Or maybe they're riding our
back, I guess depending upon

00:01:41.000 --> 00:01:42.860
which you think is
more important.

00:01:42.860 --> 00:01:46.490
And so we're going to be talking
with the product

00:01:46.490 --> 00:01:50.020
manager of Google Apps Script,
Saurabh Gupta, who works with

00:01:50.020 --> 00:01:50.930
us here in New York.

00:01:50.930 --> 00:01:53.910
And he's going to be sitting
down with our colleague Arun

00:01:53.910 --> 00:01:57.720
Nagarajan and discussing where
App Script has been this past

00:01:57.720 --> 00:02:00.490
year, where we're at, and where
he sees the future of

00:02:00.490 --> 00:02:01.220
App Script going.

00:02:01.220 --> 00:02:01.910
KALYAN REDDY: Yeah.

00:02:01.910 --> 00:02:04.580
So it's a really good idea for
you guys to tune in if you're

00:02:04.580 --> 00:02:09.580
curious about some of the new
things, what the direction is,

00:02:09.580 --> 00:02:11.965
to sync up with the PM.

00:02:11.965 --> 00:02:13.080
ERIC KOTEDA: Yeah.

00:02:13.080 --> 00:02:14.570
I mean, how often do you really
get to speak to the

00:02:14.570 --> 00:02:16.430
product manager?

00:02:16.430 --> 00:02:19.140
Or get to at least hear the
message directly from a

00:02:19.140 --> 00:02:21.750
product manager here
at Google?

00:02:21.750 --> 00:02:26.890
And so that's a really
exciting one

00:02:26.890 --> 00:02:28.260
that's coming up soon.

00:02:28.260 --> 00:02:30.250
So put it in your calendars.

00:02:30.250 --> 00:02:33.540
We actually have, for
all of our GDLs, a

00:02:33.540 --> 00:02:36.410
Google+ event set up.

00:02:36.410 --> 00:02:38.960
So if you follow me on Google+,
or you follow Kalyan,

00:02:38.960 --> 00:02:41.770
just head over to Google+ and
check out some of the events

00:02:41.770 --> 00:02:42.530
that we've shared.

00:02:42.530 --> 00:02:44.080
And you can actually follow
it there and get some

00:02:44.080 --> 00:02:45.400
information.

00:02:45.400 --> 00:02:47.510
The other one we have coming
up next week-- it's a week

00:02:47.510 --> 00:02:49.210
chock full with good
episodes--

00:02:49.210 --> 00:02:51.660
is another addition of what
we're calling App

00:02:51.660 --> 00:02:52.830
Script Crash Course.

00:02:52.830 --> 00:02:56.190
So this crash course series that
we're putting together--

00:02:56.190 --> 00:02:58.180
so far Arun has been knocking
them out, he's doing a great

00:02:58.180 --> 00:03:02.080
job-- is kind of picking a
Google Apps Script technology.

00:03:02.080 --> 00:03:04.170
In this upcoming episode,
it's script [? DB. ?]

00:03:04.170 --> 00:03:07.440
And just doing a mixture
of introductory

00:03:07.440 --> 00:03:08.415
and deep dive content.

00:03:08.415 --> 00:03:09.245
KALYAN REDDY: Yeah.

00:03:09.245 --> 00:03:10.175
Right in the middle.

00:03:10.175 --> 00:03:10.840
ERIC KOTEDA: Yeah.

00:03:10.840 --> 00:03:13.950
So if you've used it before,
there's still

00:03:13.950 --> 00:03:14.580
a lot of work there.

00:03:14.580 --> 00:03:17.250
Because he shows some really
cool integrations and some

00:03:17.250 --> 00:03:18.230
best practices.

00:03:18.230 --> 00:03:20.090
But if you're also brand new to
some of these technologies,

00:03:20.090 --> 00:03:22.770
it's a really great way to
get a holistic overview

00:03:22.770 --> 00:03:24.280
of what they do.

00:03:24.280 --> 00:03:26.670
So Arun did one a couple
weeks ago maybe.

00:03:26.670 --> 00:03:27.480
Last week?

00:03:27.480 --> 00:03:28.380
I forget.

00:03:28.380 --> 00:03:29.270
KALYAN REDDY: I think
it was last week.

00:03:29.270 --> 00:03:30.200
ERIC KOTEDA: Last week.

00:03:30.200 --> 00:03:31.100
It felt like a year ago.

00:03:31.100 --> 00:03:34.070
But he did one which was on the
content service, which is

00:03:34.070 --> 00:03:36.330
a really powerful service
that allows you to serve

00:03:36.330 --> 00:03:40.640
up JSON, XML, RSS.

00:03:40.640 --> 00:03:44.740
And write app scripts that
produce other machine

00:03:44.740 --> 00:03:47.265
consumable code, which as you
can imagine, is very powerful.

00:03:47.265 --> 00:03:48.845
I think he showed some really
cool integrations.

00:03:51.840 --> 00:03:52.400
Do you remember the ones now?

00:03:52.400 --> 00:03:53.370
I'm spacing.

00:03:53.370 --> 00:03:54.176
KALYAN REDDY: Yeah.

00:03:54.176 --> 00:03:55.493
ERIC KOTEDA: Unscripted.

00:03:55.493 --> 00:03:58.210
But anyway, go back onto
YouTube, the Google Developers

00:03:58.210 --> 00:04:00.540
channel, and go check out
that previous episode.

00:04:00.540 --> 00:04:01.690
You can get a sense
of what this crash

00:04:01.690 --> 00:04:02.590
course series is like.

00:04:02.590 --> 00:04:05.140
KALYAN REDDY: And so basically,
you could read

00:04:05.140 --> 00:04:06.570
through some of the
tutorials we have.

00:04:06.570 --> 00:04:08.150
They will cover some
of these tricks.

00:04:08.150 --> 00:04:12.540
But it's a good idea to tune
in, get a holistic kind of

00:04:12.540 --> 00:04:14.790
view about how to use this.

00:04:14.790 --> 00:04:15.910
Here are the recommended
things.

00:04:15.910 --> 00:04:17.450
Here's best practices.

00:04:17.450 --> 00:04:20.360
This is how we can use it
in a couple of examples.

00:04:20.360 --> 00:04:21.430
Just to tie things together.

00:04:21.430 --> 00:04:22.530
ERIC KOTEDA: Yeah, I mean,
that's the thing.

00:04:22.530 --> 00:04:24.410
There's so many pieces in App
Script, and sometimes it's

00:04:24.410 --> 00:04:25.520
hard to fit them together.

00:04:25.520 --> 00:04:26.300
KALYAN REDDY: Exactly.

00:04:26.300 --> 00:04:28.360
ERIC KOTEDA: So Arun does a
really good job of these

00:04:28.360 --> 00:04:30.960
really great demos that show
off what's possible.

00:04:30.960 --> 00:04:33.920
And he puts all the source code
up on GitHub afterwards

00:04:33.920 --> 00:04:35.120
so you can start tinkering
and playing

00:04:35.120 --> 00:04:36.900
around with it yourself.

00:04:36.900 --> 00:04:37.930
So do check those out.

00:04:37.930 --> 00:04:41.330
Go to Google+, check out the
events that we have there, and

00:04:41.330 --> 00:04:42.370
hope you tune in for those.

00:04:42.370 --> 00:04:46.130
So just to be clear now, this
show is going to be live.

00:04:46.130 --> 00:04:48.630
You cannot call in, but you can
join on Google+ Hangout.

00:04:48.630 --> 00:04:50.060
That's on the

00:04:50.060 --> 00:04:52.330
developers.google.com page for this.

00:04:52.330 --> 00:04:54.830
These other episodes, these
other shows we're doing,

00:04:54.830 --> 00:04:57.990
they're more about delivering
information.

00:04:57.990 --> 00:05:00.090
So we're not having a
Hangout for those.

00:05:00.090 --> 00:05:01.880
So if you want to join a
Hangout, if you want to

00:05:01.880 --> 00:05:05.090
interact with us, Google
Apps Unscripted is the

00:05:05.090 --> 00:05:05.785
place to go for that.

00:05:05.785 --> 00:05:07.591
KALYAN REDDY: This
is your event.

00:05:07.591 --> 00:05:09.940
ERIC KOTEDA: All right, cool.

00:05:09.940 --> 00:05:11.150
So that's some of the
upcoming events.

00:05:11.150 --> 00:05:13.200
But one of the other things we
have to talk about in this

00:05:13.200 --> 00:05:14.120
show is release notes.

00:05:14.120 --> 00:05:16.098
And we've had a lot of release
notes recently, haven't we?

00:05:16.098 --> 00:05:18.050
KALYAN REDDY: Oh yeah.

00:05:18.050 --> 00:05:20.550
So if we can check
this out here.

00:05:20.550 --> 00:05:22.640
Go to the release notes.

00:05:22.640 --> 00:05:24.000
OK, how far back do
we have to go?

00:05:24.000 --> 00:05:25.250
All the way in January?

00:05:25.250 --> 00:05:25.406
ERIC KOTEDA: Yeah.

00:05:25.406 --> 00:05:26.230
I don't know how far
back we want to go.

00:05:26.230 --> 00:05:31.000
But let's kind of skim through
some of the more interesting

00:05:31.000 --> 00:05:34.545
things that we've done in the
past couple releases.

00:05:34.545 --> 00:05:37.640
KALYAN REDDY: Yeah, so if you
had some problems with the

00:05:37.640 --> 00:05:41.840
time zones, that's a bug
that cropped up.

00:05:41.840 --> 00:05:43.170
But we did work around it.

00:05:43.170 --> 00:05:46.210
We did re-implement the existing
functionality, so all

00:05:46.210 --> 00:05:48.870
of your scripts should
be good to go now.

00:05:48.870 --> 00:05:49.330
ERIC KOTEDA: Yeah.

00:05:49.330 --> 00:05:52.340
Remember there were a number of
different time zone related

00:05:52.340 --> 00:05:53.695
issues across different
services.

00:05:53.695 --> 00:05:54.450
KALYAN REDDY: Yeah, right.

00:05:54.450 --> 00:05:57.480
ERIC KOTEDA: And one of our
engineers took up the charge

00:05:57.480 --> 00:05:58.870
of trying to squash
them all down.

00:05:58.870 --> 00:06:01.710
So he put a lot of time into
fixing how time zones work,

00:06:01.710 --> 00:06:03.550
getting rid of some
of the edge cases.

00:06:03.550 --> 00:06:06.850
So we did commit a number of
different changes there.

00:06:06.850 --> 00:06:08.740
I think there are still maybe
a couple open the issue

00:06:08.740 --> 00:06:10.540
tracker for time zone
related issues.

00:06:10.540 --> 00:06:13.990
So do continue to bring
this to us.

00:06:13.990 --> 00:06:16.230
But we are taking an effort
to stamp those down.

00:06:16.230 --> 00:06:17.320
But time zones, they're
tricky.

00:06:17.320 --> 00:06:18.570
KALYAN REDDY: Yeah.

00:06:23.676 --> 00:06:25.520
ERIC KOTEDA: So we also added
some cool features too.

00:06:25.520 --> 00:06:27.560
So I mean, if you look through
our release notes that Kalyan

00:06:27.560 --> 00:06:30.120
has up here, the number of bug
fixes which you can see are

00:06:30.120 --> 00:06:31.900
all those issue, issue,
issue, issue.

00:06:31.900 --> 00:06:32.570
They're pretty large.

00:06:32.570 --> 00:06:33.810
We've been trying
to squash bugs.

00:06:33.810 --> 00:06:37.670
And the team has been doing a
great job of going through and

00:06:37.670 --> 00:06:39.490
putting extra effort
on killing bugs.

00:06:39.490 --> 00:06:40.690
No one likes bugs.

00:06:40.690 --> 00:06:42.290
It's always really sad when you
put a lot of effort into

00:06:42.290 --> 00:06:44.170
building something and
then hit this bug.

00:06:44.170 --> 00:06:45.370
And you're like, aww.

00:06:45.370 --> 00:06:47.460
You could waste an hour or
you realize you have to

00:06:47.460 --> 00:06:48.070
redo what you did.

00:06:48.070 --> 00:06:50.200
So they are putting a lot
of time into the bugs.

00:06:50.200 --> 00:06:52.100
But simultaneously they're
also still

00:06:52.100 --> 00:06:53.760
continuing to add features.

00:06:53.760 --> 00:06:56.490
What people love about App
Script, especially me, is that

00:06:56.490 --> 00:06:59.110
anything you want to do, there's
a service for it.

00:06:59.110 --> 00:07:02.370
Gmail app has a service, Drive,
Docs list service.

00:07:02.370 --> 00:07:03.160
KALYAN REDDY: And they're
so easy to use.

00:07:03.160 --> 00:07:03.970
ERIC KOTEDA: Yeah.

00:07:03.970 --> 00:07:06.970
It's kind of the ultimate
pocket knife of utility.

00:07:06.970 --> 00:07:09.650
And so they've been working to
continue to expand that.

00:07:09.650 --> 00:07:13.920
And so you'll see some entries
in the release notes around

00:07:13.920 --> 00:07:15.590
enhancing the clock
trigger builder.

00:07:15.590 --> 00:07:17.630
In the January 17th release
down there.

00:07:17.630 --> 00:07:18.160
KALYAN REDDY: Down here?

00:07:18.160 --> 00:07:18.462
ERIC KOTEDA: Yeah.

00:07:18.462 --> 00:07:19.980
So that was an extra method
that was added in.

00:07:19.980 --> 00:07:21.880
It's kind of a convenience to
make it a little bit easier to

00:07:21.880 --> 00:07:25.450
build these one off triggers.

00:07:25.450 --> 00:07:27.580
And so that was a
really good one.

00:07:27.580 --> 00:07:31.230
And then we've also had some
in the one above there.

00:07:31.230 --> 00:07:34.280
So one of the things in issue
286 was actually a featured

00:07:34.280 --> 00:07:36.920
request on the 24th.

00:07:36.920 --> 00:07:41.110
Which was to add a follow
redirects method to URL

00:07:41.110 --> 00:07:42.590
fetches apps fetch method.

00:07:42.590 --> 00:07:46.580
So essentially I think the way
it used to work is that when

00:07:46.580 --> 00:07:49.610
you use URL fetch to request
a URL, if it was doing

00:07:49.610 --> 00:07:52.830
redirects, the server that you
were fetching from, you would

00:07:52.830 --> 00:07:55.710
always follow those redirects
and you couldn't stop it.

00:07:55.710 --> 00:07:58.680
And sometimes people wanted to
actually get the intermediary

00:07:58.680 --> 00:08:02.320
HTTP request that had the
redirect code in it and pull

00:08:02.320 --> 00:08:02.805
out some information.

00:08:02.805 --> 00:08:04.325
KALYAN REDDY: Right.

00:08:04.325 --> 00:08:06.590
ERIC KOTEDA: And so with this
follow redirects advanced

00:08:06.590 --> 00:08:08.750
argument, you can now
set it to false to

00:08:08.750 --> 00:08:09.610
prevent that behavior.

00:08:09.610 --> 00:08:11.680
KALYAN REDDY: So it makes the
method more powerful.

00:08:11.680 --> 00:08:14.940
You have the option to get
exactly what you want.

00:08:14.940 --> 00:08:16.180
ERIC KOTEDA: Yeah,
it's pretty cool.

00:08:16.180 --> 00:08:19.220
And right above it, you can see
that we, for UI App, did a

00:08:19.220 --> 00:08:22.000
little bit of work so that you
can now do mailto anchors.

00:08:22.000 --> 00:08:25.460
So a lot of people want to do
that old-fashioned style

00:08:25.460 --> 00:08:27.870
mailto email address that when
you click a link will pop open

00:08:27.870 --> 00:08:31.290
your default email client
with that email address

00:08:31.290 --> 00:08:31.940
pre-populated.

00:08:31.940 --> 00:08:33.830
So we didn't have that
supported UI app

00:08:33.830 --> 00:08:35.580
before, but now we do.

00:08:35.580 --> 00:08:39.400
So if you want to put a little
link in your app saying some

00:08:39.400 --> 00:08:41.919
things are horribly broken,
email Saurabh

00:08:41.919 --> 00:08:43.039
Gupta, our PM, directly.

00:08:43.039 --> 00:08:44.420
You can do that now.

00:08:44.420 --> 00:08:47.930
Although he may not respond
to every request.

00:08:47.930 --> 00:08:53.640
And then I think in our 31st
release up above, we have

00:08:53.640 --> 00:08:55.800
another feature that we added
which is kind of cool, was a

00:08:55.800 --> 00:08:58.400
spreadsheet app that
opened by URL.

00:08:58.400 --> 00:08:59.690
That's right there at the top.

00:08:59.690 --> 00:09:02.480
And what's great about that one
is that there are a lot of

00:09:02.480 --> 00:09:07.540
users who wanted to create some
sort of script that said

00:09:07.540 --> 00:09:10.240
just enter your spreadsheet
URL here and I'll do some

00:09:10.240 --> 00:09:12.160
processing on it.

00:09:12.160 --> 00:09:16.310
But then you needed to do some
Regex work to find the key

00:09:16.310 --> 00:09:17.970
parameter and pull it out.

00:09:17.970 --> 00:09:19.780
I actually did this in a couple
script that I wrote.

00:09:19.780 --> 00:09:22.310
And it's a little bit of extra
work that's kind of annoying.

00:09:22.310 --> 00:09:24.790
So now what you can do is if you
have your user just paste

00:09:24.790 --> 00:09:27.560
in a spreadsheet URL, we'll
figure out which spreadsheet

00:09:27.560 --> 00:09:30.244
ID that is and open it up for
you without you needing to do

00:09:30.244 --> 00:09:31.220
any extra parsing.

00:09:31.220 --> 00:09:34.180
KALYAN REDDY: And even for
yourself, when you're creating

00:09:34.180 --> 00:09:36.710
these quick scripts, you don't
want to extract the key and

00:09:36.710 --> 00:09:38.200
copy things into a variable
and everything.

00:09:38.200 --> 00:09:40.305
This makes it much more easy,
much more polished.

00:09:40.305 --> 00:09:40.955
ERIC KOTEDA: Yeah.

00:09:40.955 --> 00:09:44.140
So that's a fun little feature
that's added in there.

00:09:44.140 --> 00:09:46.020
You can see we also did a little
more work on a clock

00:09:46.020 --> 00:09:47.720
trigger builder, time zones.

00:09:47.720 --> 00:09:48.490
Time zones.

00:09:48.490 --> 00:09:51.010
KALYAN REDDY: Yeah, another
time zone issue.

00:09:51.010 --> 00:09:53.740
This one, the problem was that
it was actually defaulting to

00:09:53.740 --> 00:09:55.630
Pacific time.

00:09:55.630 --> 00:09:58.440
But now we've fixed it so that
it does respect the time zone

00:09:58.440 --> 00:09:59.845
that you've enabled
in your script.

00:09:59.845 --> 00:10:02.650
ERIC KOTEDA: Yeah, and if you
haven't done a lot with App

00:10:02.650 --> 00:10:04.670
Script before or especially
around time

00:10:04.670 --> 00:10:05.770
zones, it can get confusing.

00:10:05.770 --> 00:10:08.245
Because a spreadsheet
has a time zone.

00:10:08.245 --> 00:10:09.770
A script has a time zone.

00:10:09.770 --> 00:10:12.250
Your Google calendars have
their own time zone.

00:10:12.250 --> 00:10:14.090
Our servers have their own.

00:10:14.090 --> 00:10:17.310
So we try to keep it all
separate and make sense and

00:10:17.310 --> 00:10:19.760
try to make inter-operate
as best as possible.

00:10:19.760 --> 00:10:22.470
But there definitely are these
little cases where if you take

00:10:22.470 --> 00:10:24.670
a time zone from here or a date
from here and pass it

00:10:24.670 --> 00:10:26.180
over there, what does it mean?

00:10:26.180 --> 00:10:27.790
Which time zone are
you talking about?

00:10:27.790 --> 00:10:29.560
It can get a little tricky,
so we're still

00:10:29.560 --> 00:10:30.375
hammering those out.

00:10:30.375 --> 00:10:31.550
KALYAN REDDY: Right.

00:10:31.550 --> 00:10:33.175
ERIC KOTEDA: And then one of
the ones here you'll see in

00:10:33.175 --> 00:10:36.920
the January 31st release was
the ability for the code

00:10:36.920 --> 00:10:40.680
editor's find dialog to search
through multiple files in your

00:10:40.680 --> 00:10:41.980
App Scrip project.

00:10:41.980 --> 00:10:45.070
This is really cool because a
lot of times I'll know I have

00:10:45.070 --> 00:10:49.547
some key or some variable that I
know I need to replace maybe

00:10:49.547 --> 00:10:50.330
in a bunch of places.

00:10:50.330 --> 00:10:51.650
But I didn't know
where I put it.

00:10:51.650 --> 00:10:53.610
And so before, find and replace
would only work on

00:10:53.610 --> 00:10:55.030
your single file.

00:10:55.030 --> 00:10:55.995
But now it works on multiples.

00:10:55.995 --> 00:10:58.480
KALYAN REDDY: And this is really
handy, because users

00:10:58.480 --> 00:11:01.230
now are having larger scripts,
more complicated scripts.

00:11:01.230 --> 00:11:03.880
So they're breaking out the
logic into different files, as

00:11:03.880 --> 00:11:06.430
you should to tackle
the complexity.

00:11:06.430 --> 00:11:11.140
And this enables you to
develop more easily.

00:11:11.140 --> 00:11:11.900
ERIC KOTEDA: Yeah.

00:11:11.900 --> 00:11:15.310
So the editor we have in App
Script, it's obviously not as

00:11:15.310 --> 00:11:19.550
full featured as in Eclipse or
Sublime Text is a popular one

00:11:19.550 --> 00:11:20.610
here in the office.

00:11:20.610 --> 00:11:25.060
It's not quite up to that
level of complexity yet.

00:11:25.060 --> 00:11:26.590
But we are working on constantly
improving the

00:11:26.590 --> 00:11:27.080
experience.

00:11:27.080 --> 00:11:28.985
Because we do know that although
sometimes you write

00:11:28.985 --> 00:11:30.430
an App Script and you're just
trying to get something done

00:11:30.430 --> 00:11:32.090
quickly and you don't
need to have as

00:11:32.090 --> 00:11:32.840
many advanced features.

00:11:32.840 --> 00:11:34.640
But a lot of people writing App
Scripts today are doing

00:11:34.640 --> 00:11:36.190
very complex projects.

00:11:36.190 --> 00:11:38.390
Big web apps or big
workflow systems.

00:11:38.390 --> 00:11:40.640
And so having these extra
features really can

00:11:40.640 --> 00:11:41.250
save a lot of time.

00:11:41.250 --> 00:11:43.555
KALYAN REDDY: Definitely.

00:11:43.555 --> 00:11:45.090
ERIC KOTEDA: All right.

00:11:45.090 --> 00:11:46.680
Anything else for the release
notes you wanted

00:11:46.680 --> 00:11:48.946
to highlight, Kalyan?

00:11:48.946 --> 00:11:51.140
KALYAN REDDY: I think those
are the main things.

00:11:51.140 --> 00:11:54.800
And as you can see, a
ton of bug fixes.

00:11:54.800 --> 00:11:57.770
So definitely keep on bringing
them up on the issue tracker.

00:11:57.770 --> 00:12:00.980
That's the major source for
how we can find out about

00:12:00.980 --> 00:12:01.510
these things.

00:12:01.510 --> 00:12:04.010
We'll triage them and then
we'll get them fixed

00:12:04.010 --> 00:12:05.160
as soon as we can.

00:12:05.160 --> 00:12:06.060
ERIC KOTEDA: That's great.

00:12:06.060 --> 00:12:06.850
All right, cool.

00:12:06.850 --> 00:12:09.090
So I think that brings us to
the question and answer

00:12:09.090 --> 00:12:10.010
portion of the show.

00:12:10.010 --> 00:12:10.790
KALYAN REDDY: Yeah.

00:12:10.790 --> 00:12:12.040
ERIC KOTEDA: Apps Unscripted.

00:12:12.040 --> 00:12:16.780
So we have some questions here
on the Google Moderator page.

00:12:16.780 --> 00:12:18.730
And it looks like we have some
Hangout participants as well.

00:12:18.730 --> 00:12:20.720
So let's see who's on the
Hangout first and if we have

00:12:20.720 --> 00:12:22.070
any live questions.

00:12:22.070 --> 00:12:26.230
Hello and welcome to
Apps Unscripted.

00:12:26.230 --> 00:12:28.730
Anybody?

00:12:28.730 --> 00:12:29.980
Anybody there have a question?

00:12:32.020 --> 00:12:33.070
KALYAN REDDY: Or just
want to say hi?

00:12:33.070 --> 00:12:33.730
ERIC KOTEDA: Yeah.

00:12:33.730 --> 00:12:36.475
Or just want to say hi.

00:12:36.475 --> 00:12:37.635
HARRY: I want to say hi.

00:12:37.635 --> 00:12:38.402
ERIC KOTEDA: Oh hey!

00:12:38.402 --> 00:12:39.386
KALYAN REDDY: Hey there.

00:12:39.386 --> 00:12:40.700
HARRY: And I have a question.

00:12:40.700 --> 00:12:41.870
ERIC KOTEDA: Sure, go ahead.

00:12:41.870 --> 00:12:42.740
HARRY: OK.

00:12:42.740 --> 00:12:44.800
My name's Harry [INAUDIBLE]

00:12:44.800 --> 00:12:46.400
from Netherlands.

00:12:46.400 --> 00:12:50.950
My question is, when you want to
cooperate on a project, on

00:12:50.950 --> 00:12:54.980
a script, we've managed so far
to do it only when you both

00:12:54.980 --> 00:12:57.800
login under the same name.

00:12:57.800 --> 00:12:58.550
ERIC KOTEDA: Yeah.

00:12:58.550 --> 00:13:02.000
HARRY: So it's apparently only
the owner of script can run it

00:13:02.000 --> 00:13:03.230
in development mode.

00:13:03.230 --> 00:13:04.170
ERIC KOTEDA: Yeah.

00:13:04.170 --> 00:13:07.390
So that is a known problem that
I know actually Kalyan

00:13:07.390 --> 00:13:10.250
ran into with our
colleague Arun.

00:13:10.250 --> 00:13:11.790
They were trying to collaborate
on a script.

00:13:11.790 --> 00:13:15.895
And there are definitely some
problems around collaborating

00:13:15.895 --> 00:13:17.590
on a script today.

00:13:17.590 --> 00:13:19.570
One of the ones you mentioned is
that if you're deploying it

00:13:19.570 --> 00:13:23.070
as a web app, only the owner can
deploy it as the web app

00:13:23.070 --> 00:13:25.810
or update the version that's
being deployed.

00:13:25.810 --> 00:13:28.610
And even if you're an editor,
you can't do that today.

00:13:28.610 --> 00:13:29.270
It's only the owner.

00:13:29.270 --> 00:13:32.790
So that is something that we've
raised before with the

00:13:32.790 --> 00:13:33.370
engineering team.

00:13:33.370 --> 00:13:35.090
And I think we should push
even harder on that.

00:13:35.090 --> 00:13:37.850
Because collaboration is
something that's very

00:13:37.850 --> 00:13:38.730
important at Google.

00:13:38.730 --> 00:13:42.120
You know, Google Docs, that's
the main selling point is

00:13:42.120 --> 00:13:44.310
having two little cursors
fly around the

00:13:44.310 --> 00:13:45.410
doc at the same time.

00:13:45.410 --> 00:13:47.550
KALYAN REDDY: And it's something
you expect from the

00:13:47.550 --> 00:13:48.560
platform as a whole, right?

00:13:48.560 --> 00:13:49.710
So that's a great feature.

00:13:49.710 --> 00:13:51.490
That collaboration is
just baked into

00:13:51.490 --> 00:13:52.305
so many of our services.

00:13:52.305 --> 00:13:54.130
ERIC KOTEDA: So I think we'd
really love to bring more of

00:13:54.130 --> 00:13:54.990
that to Google App Script.

00:13:54.990 --> 00:13:57.790
I think that the way the editor
is built today, we may

00:13:57.790 --> 00:13:59.830
not be able to get to that exact
point that Google Docs

00:13:59.830 --> 00:14:02.710
has where two cursors are
flying around the screen

00:14:02.710 --> 00:14:03.680
simultaneously.

00:14:03.680 --> 00:14:05.560
But I think we can definitely
improve the experience around

00:14:05.560 --> 00:14:08.700
deploying web apps and around
even just editing different

00:14:08.700 --> 00:14:11.120
files within the same project
at the same time.

00:14:11.120 --> 00:14:14.530
So I'll make a note right now
to bring that topic up again

00:14:14.530 --> 00:14:15.600
in some of our meetings.

00:14:15.600 --> 00:14:18.365
Because I definitely want to
make sure that collaboration

00:14:18.365 --> 00:14:20.193
is something that we do
support in App Script.

00:14:20.193 --> 00:14:20.900
KALYAN REDDY: Yeah.

00:14:20.900 --> 00:14:24.050
And also, you might have
experienced some problems with

00:14:24.050 --> 00:14:26.770
the revision history isn't as
fine grained as something you

00:14:26.770 --> 00:14:30.760
would expect in spreadsheets
or documents.

00:14:30.760 --> 00:14:32.020
We're looking into that.

00:14:32.020 --> 00:14:33.820
And we're looking into
making the experience

00:14:33.820 --> 00:14:35.470
much better for users.

00:14:35.470 --> 00:14:36.540
ERIC KOTEDA: Yeah.

00:14:36.540 --> 00:14:41.210
Yeah, I think App Script has
been growing from a product

00:14:41.210 --> 00:14:44.600
that one person used to create
one small thing to now it is a

00:14:44.600 --> 00:14:46.630
team platform sometimes.

00:14:46.630 --> 00:14:50.710
We'll have to grow into some
of these features, I think.

00:14:50.710 --> 00:14:51.155
Great.

00:14:51.155 --> 00:14:53.030
KALYAN REDDY: Anyone else?

00:14:53.030 --> 00:14:53.430
ERIC KOTEDA: Yeah.

00:14:53.430 --> 00:14:54.760
Or another question
from Harry?

00:15:00.857 --> 00:15:01.330
All right, great.

00:15:01.330 --> 00:15:03.340
So stay on the line, guys.

00:15:03.340 --> 00:15:04.890
We'll keep your audio up.

00:15:04.890 --> 00:15:07.840
If you have a question, feel
free to jump in, in between.

00:15:07.840 --> 00:15:11.600
And if people are watching and
don't feel like joining live

00:15:11.600 --> 00:15:14.050
to ask a question, you're more
than welcome to go to our

00:15:14.050 --> 00:15:16.300
Google Moderator that's
embedded in the

00:15:16.300 --> 00:15:20.410
developers.google.com
page for this event.

00:15:20.410 --> 00:15:23.020
All right, so let's go
to the Moderator.

00:15:23.020 --> 00:15:24.420
So we have some questions
here.

00:15:24.420 --> 00:15:25.280
I've got them up on my screen.

00:15:25.280 --> 00:15:26.510
But you don't need
to see them.

00:15:26.510 --> 00:15:27.690
I'll just read them out loud.

00:15:27.690 --> 00:15:30.490
So the first one we have
here is a question

00:15:30.490 --> 00:15:32.450
from Jonathan in London.

00:15:32.450 --> 00:15:34.330
He says, will the number
of scripts that can

00:15:34.330 --> 00:15:37.670
simultaneously be authorized,
will that be increased?

00:15:37.670 --> 00:15:39.740
They're doing some really useful
work around Google App

00:15:39.740 --> 00:15:40.870
Script and triggers.

00:15:40.870 --> 00:15:44.620
And the current authorization
limit work around that they're

00:15:44.620 --> 00:15:47.940
using is to trigger a single
script with other scripts used

00:15:47.940 --> 00:15:48.385
as libraries.

00:15:48.385 --> 00:15:50.765
And it's a bit messy.

00:15:50.765 --> 00:15:53.870
So there is a problem today.

00:15:53.870 --> 00:16:00.040
The problem is that we have the
limits around the number

00:16:00.040 --> 00:16:05.910
of App Script projects that can
authorize against some of

00:16:05.910 --> 00:16:06.590
our services.

00:16:06.590 --> 00:16:08.316
So I don't know if you noticed
in App Script, sometimes when

00:16:08.316 --> 00:16:10.240
you do an authorization
screen, it pops up.

00:16:10.240 --> 00:16:11.880
Where you're running your script
for the first time or

00:16:11.880 --> 00:16:14.710
deploying it as a web app, you
get a screen that says, here's

00:16:14.710 --> 00:16:15.960
all the different things
we're going to use.

00:16:15.960 --> 00:16:16.970
Hit authorize.

00:16:16.970 --> 00:16:19.080
Then sometimes you'll get
to a second screen.

00:16:19.080 --> 00:16:20.810
That second screen is actually
the standard

00:16:20.810 --> 00:16:22.280
Google OAuth screen.

00:16:22.280 --> 00:16:24.290
And there you're configuring
some

00:16:24.290 --> 00:16:25.530
access to specific services.

00:16:25.530 --> 00:16:27.115
I know Gmail is one that
requires this.

00:16:27.115 --> 00:16:27.610
KALYAN REDDY: Right.

00:16:27.610 --> 00:16:28.440
ERIC KOTEDA: You're
saying sites

00:16:28.440 --> 00:16:29.220
require it in some cases.

00:16:29.220 --> 00:16:30.480
KALYAN REDDY: Yes, certain types
of interactions where

00:16:30.480 --> 00:16:32.730
you need authorization with
sites will prompt

00:16:32.730 --> 00:16:33.950
you for that as well.

00:16:33.950 --> 00:16:35.320
And there are other examples.

00:16:35.320 --> 00:16:38.490
ERIC KOTEDA: Any scripts that
require that secondary prompt,

00:16:38.490 --> 00:16:40.130
unfortunately it's kind of built
into the system right

00:16:40.130 --> 00:16:42.210
now that there's a limit, which
is I think somewhere

00:16:42.210 --> 00:16:43.250
around 15 or 20--

00:16:43.250 --> 00:16:45.200
I forget the exact number--

00:16:45.200 --> 00:16:47.515
totals that can be authorized
at any one time.

00:16:47.515 --> 00:16:50.220
If you authorize a new one,
you'll kick out an old one.

00:16:50.220 --> 00:16:51.930
And I think that's probably
what Jonathan is

00:16:51.930 --> 00:16:53.050
running into here.

00:16:53.050 --> 00:16:55.510
We are actually actively working
on changing the back

00:16:55.510 --> 00:16:57.370
end to make this go away.

00:16:57.370 --> 00:16:59.430
We don't like it, you
don't like it.

00:16:59.430 --> 00:17:01.140
And 15 is an arbitrarily
small number.

00:17:01.140 --> 00:17:04.650
So we're definitely working
on getting rid of this.

00:17:04.650 --> 00:17:07.980
As you can imagine, the Google
systems and the Google

00:17:07.980 --> 00:17:09.990
infrastructure, everything's
tied together in very

00:17:09.990 --> 00:17:10.680
complicated ways.

00:17:10.680 --> 00:17:13.400
So we are working and switching
out some components

00:17:13.400 --> 00:17:15.140
to make this go away.

00:17:15.140 --> 00:17:17.410
And I don't know exactly when
it'll be complete, but it is

00:17:17.410 --> 00:17:19.409
something we're working on.

00:17:19.409 --> 00:17:20.359
All right, so let's
go to another

00:17:20.359 --> 00:17:22.369
question here in the Moderator.

00:17:22.369 --> 00:17:28.520
So this is John Mark in Belgium
asking, where are the

00:17:28.520 --> 00:17:31.370
servers that store data
for Script EB or even

00:17:31.370 --> 00:17:32.590
Google Drive Docs?

00:17:32.590 --> 00:17:34.740
Where are those servers
located?

00:17:34.740 --> 00:17:38.370
Will it be possible to locate
them exclusively in Europe

00:17:38.370 --> 00:17:40.190
like Google App Engine does?

00:17:40.190 --> 00:17:42.440
I do not believe we have control
over those today.

00:17:42.440 --> 00:17:43.150
KALYAN REDDY: Yeah.

00:17:43.150 --> 00:17:44.742
I don't think so.

00:17:44.742 --> 00:17:45.915
ERIC KOTEDA: Yeah.

00:17:45.915 --> 00:17:50.450
So I do know that the
intersection of technology and

00:17:50.450 --> 00:17:52.940
government can lead to some
strange things sometimes.

00:17:52.940 --> 00:17:55.710
And I do know that in some
countries, depending upon what

00:17:55.710 --> 00:17:58.080
you're doing, if it's government
related services or

00:17:58.080 --> 00:18:01.910
systems, your data needs to be
located physically within

00:18:01.910 --> 00:18:05.330
certain country boundaries
or certain geopolitical

00:18:05.330 --> 00:18:05.850
boundaries.

00:18:05.850 --> 00:18:08.140
And so I think what they're
referencing here is a Google

00:18:08.140 --> 00:18:08.510
App Engine.

00:18:08.510 --> 00:18:10.570
I'm not familiar, but I'll take
their word on it, has the

00:18:10.570 --> 00:18:13.840
ability to say, make sure that
the servers you spin up are

00:18:13.840 --> 00:18:15.420
only located in a
certain country.

00:18:15.420 --> 00:18:17.370
For Google App Script, we
don't have that ability.

00:18:17.370 --> 00:18:20.500
KALYAN REDDY: And it's kind
of like a hidden feature.

00:18:20.500 --> 00:18:23.200
A lot of these things, we
simplify these underlying

00:18:23.200 --> 00:18:26.330
systems just so that people can
get in, write a script, do

00:18:26.330 --> 00:18:27.930
what they want to do.

00:18:27.930 --> 00:18:29.360
We try to hide this
complexity.

00:18:29.360 --> 00:18:33.140
And it's like a balance on how
much you do want to show and

00:18:33.140 --> 00:18:37.135
how much users should worry
about on a regular basis.

00:18:37.135 --> 00:18:38.050
ERIC KOTEDA: Yeah.

00:18:38.050 --> 00:18:38.680
Yeah.

00:18:38.680 --> 00:18:38.960
It's [INAUDIBLE].

00:18:38.960 --> 00:18:40.570
Like for App Script, we're
trying to be simple.

00:18:40.570 --> 00:18:41.430
We're trying to be fast.

00:18:41.430 --> 00:18:43.880
If everyone who wanted to run
a quick script against their

00:18:43.880 --> 00:18:47.220
Gmail account had to choose a
server farm, it definitely

00:18:47.220 --> 00:18:48.010
hurts the experience.

00:18:48.010 --> 00:18:49.700
So I can understand where
you're coming from.

00:18:49.700 --> 00:18:51.860
I think probably though, it's
not something you're going to

00:18:51.860 --> 00:18:54.020
see from App Script, at least
in the short term.

00:18:54.020 --> 00:18:56.940
Where we're trying to be is in
a place that's not quite as

00:18:56.940 --> 00:18:57.580
complex as that.

00:18:57.580 --> 00:18:59.990
And so if Google App Engine
meets your needs, I'd say keep

00:18:59.990 --> 00:19:00.916
going with that for now.

00:19:00.916 --> 00:19:02.254
KALYAN REDDY: Yeah.

00:19:02.254 --> 00:19:03.150
ERIC KOTEDA: All right.

00:19:03.150 --> 00:19:05.360
Let me just toss it over to
the Hangout one more time.

00:19:05.360 --> 00:19:06.845
Is anybody there with another
question they

00:19:06.845 --> 00:19:08.700
want to chime in with?

00:19:08.700 --> 00:19:09.680
NEIL HENDON: Yeah.

00:19:09.680 --> 00:19:10.325
Quick request.

00:19:10.325 --> 00:19:12.090
ERIC KOTEDA: Sure.

00:19:12.090 --> 00:19:13.230
NEIL HENDON: I'm a new
App Script user.

00:19:13.230 --> 00:19:14.050
So thank you very much.

00:19:14.050 --> 00:19:16.010
I love using it.

00:19:16.010 --> 00:19:22.110
Could maybe a better
documentation on what values

00:19:22.110 --> 00:19:25.690
are passed to functions embedded
in a spreadsheet?

00:19:25.690 --> 00:19:27.840
Because let's say you're trying
to rewrite say, the sum

00:19:27.840 --> 00:19:31.460
function, you could take
individual values, cells, a

00:19:31.460 --> 00:19:35.270
range, or a combination
of all three.

00:19:35.270 --> 00:19:38.520
And that creates some fairly
complicated arguments to that

00:19:38.520 --> 00:19:40.800
function that you're
trying to write.

00:19:40.800 --> 00:19:42.600
So it's a little unclear.

00:19:42.600 --> 00:19:45.260
Say you were trying to write a
version of the sum function in

00:19:45.260 --> 00:19:49.240
sheets that used say,
geometric mean

00:19:49.240 --> 00:19:49.985
or some other math.

00:19:49.985 --> 00:19:51.550
ERIC KOTEDA: OK.

00:19:51.550 --> 00:19:54.070
NEIL HENDON: To write it
properly, you have to handle a

00:19:54.070 --> 00:19:55.275
large variety of arguments.

00:19:55.275 --> 00:19:56.405
ERIC KOTEDA: I see.

00:19:56.405 --> 00:19:58.880
NEIL HENDON: And so the
documentation is a little

00:19:58.880 --> 00:19:59.950
sparse on that.

00:19:59.950 --> 00:20:00.280
ERIC KOTEDA: Yeah, no.

00:20:00.280 --> 00:20:01.530
That's a really good pointer.

00:20:03.850 --> 00:20:05.690
You've probably seen our
documentation now.

00:20:05.690 --> 00:20:06.890
There's a lot there.

00:20:06.890 --> 00:20:09.630
And we're actually working with
our technical writer--

00:20:09.630 --> 00:20:10.570
NEIL HENDON: Oh, I agree.

00:20:10.570 --> 00:20:11.060
ERIC KOTEDA: Yeah.

00:20:11.060 --> 00:20:13.350
We're working with our technical
writer now to work

00:20:13.350 --> 00:20:15.780
on not just producing
more, but really

00:20:15.780 --> 00:20:16.700
refining what we have.

00:20:16.700 --> 00:20:18.980
So as you found out, there's
a lot of information, but

00:20:18.980 --> 00:20:21.100
sometimes some of that basic
information can get lost in

00:20:21.100 --> 00:20:23.820
the sauce or isn't the first
place you'd look, or maybe

00:20:23.820 --> 00:20:26.020
isn't there at all.

00:20:26.020 --> 00:20:28.330
Just off the top my head, I
happen to know that I think in

00:20:28.330 --> 00:20:30.490
most cases, a range
will get sent down

00:20:30.490 --> 00:20:32.970
as an array of values.

00:20:32.970 --> 00:20:35.770
Versus a single cell will get
sent down as the value itself.

00:20:35.770 --> 00:20:38.176
If it's a date, it'll get
sent down as a date.

00:20:38.176 --> 00:20:39.135
NEIL HENDON: That's what I
found, but I had to find that

00:20:39.135 --> 00:20:39.595
by experimentation.

00:20:39.595 --> 00:20:40.390
ERIC KOTEDA: Exactly.

00:20:40.390 --> 00:20:41.220
KALYAN REDDY: Right, right.

00:20:41.220 --> 00:20:42.045
NEIL HENDON: I needed
to write several

00:20:42.045 --> 00:20:43.620
versions of a function.

00:20:43.620 --> 00:20:45.280
One of which worked
on horizontal

00:20:45.280 --> 00:20:47.125
ranges, but not vertical.

00:20:47.125 --> 00:20:49.880
And one that worked on
2D ranges but not 1D.

00:20:49.880 --> 00:20:53.000
So there are a lot of special
cases, so maybe some better

00:20:53.000 --> 00:20:54.396
examples would be helpful.

00:20:54.396 --> 00:20:55.710
ERIC KOTEDA: That's
a really good tip.

00:20:55.710 --> 00:20:56.620
NEIL HENDON: For new users.

00:20:56.620 --> 00:20:57.200
ERIC KOTEDA: Yeah, no.

00:20:57.200 --> 00:20:58.036
That's a great tip.

00:20:58.036 --> 00:20:59.160
KALYAN REDDY: Yeah,
definitely.

00:20:59.160 --> 00:21:00.100
ERIC KOTEDA: Yeah.

00:21:00.100 --> 00:21:01.820
One of the things we're also
talking about now with our

00:21:01.820 --> 00:21:06.090
documentation is trying to
streamline it towards specific

00:21:06.090 --> 00:21:07.940
users and specific use cases.

00:21:07.940 --> 00:21:11.630
So we know that a really large
segment of our users are

00:21:11.630 --> 00:21:13.090
people who want to do
custom functions.

00:21:13.090 --> 00:21:16.090
And we don't really have a
really great start to finish

00:21:16.090 --> 00:21:19.460
track for them where they can
go from nothing to being a

00:21:19.460 --> 00:21:20.930
custom functions expert.

00:21:20.930 --> 00:21:22.680
So we want to make it so that
if that's what you're

00:21:22.680 --> 00:21:24.580
interested in, we take
you start to finish

00:21:24.580 --> 00:21:25.490
a little bit more.

00:21:25.490 --> 00:21:26.440
Instead of right now
we're kind of like,

00:21:26.440 --> 00:21:28.880
welcome and good luck.

00:21:28.880 --> 00:21:30.900
We're going to refine that and
that's really great feedback.

00:21:30.900 --> 00:21:31.635
Thank you.

00:21:31.635 --> 00:21:32.970
I didn't catch your
name, by the way.

00:21:32.970 --> 00:21:34.460
NEIL HENDON: Oh, Neil Hendon.

00:21:34.460 --> 00:21:34.936
Thank you.

00:21:34.936 --> 00:21:36.840
ERIC KOTEDA: OK, thanks Neil.

00:21:36.840 --> 00:21:37.470
Oh, great.

00:21:37.470 --> 00:21:39.140
Since we're on the Hangout, does
anybody else feel like

00:21:39.140 --> 00:21:39.400
jumping in?

00:21:39.400 --> 00:21:39.850
Question?

00:21:39.850 --> 00:21:41.180
Comment?

00:21:41.180 --> 00:21:41.950
GRANT: Yeah.

00:21:41.950 --> 00:21:45.860
This is Grant from Cleveland.

00:21:45.860 --> 00:21:48.710
So the question I have is, is
there a way to centrally

00:21:48.710 --> 00:21:52.350
manage an App Script that goes
out to multiple copies of a

00:21:52.350 --> 00:21:53.920
spreadsheet?

00:21:53.920 --> 00:21:57.240
The use case I have is I've
got a template spreadsheet

00:21:57.240 --> 00:21:59.380
that's with App Script
built into it.

00:21:59.380 --> 00:22:02.020
And all of the employees
here would have to

00:22:02.020 --> 00:22:02.730
make a copy of that.

00:22:02.730 --> 00:22:04.170
And they use the App
Script every day.

00:22:04.170 --> 00:22:06.670
But if I need to make a change
to that or improve it in any

00:22:06.670 --> 00:22:10.560
way, I have to go in manually to
each individual spreadsheet

00:22:10.560 --> 00:22:11.730
and change the code there.

00:22:11.730 --> 00:22:15.102
So is there a way to manage it
centrally so you can push out

00:22:15.102 --> 00:22:16.500
the changes to all of it?

00:22:16.500 --> 00:22:18.010
ERIC KOTEDA: Yeah, that's
a great question.

00:22:18.010 --> 00:22:19.520
That's actually one that
we get a lot too.

00:22:19.520 --> 00:22:21.560
KALYAN REDDY: So
would libraries

00:22:21.560 --> 00:22:22.940
help in this situation?

00:22:22.940 --> 00:22:25.630
ERIC KOTEDA: Libraries is
one way that can help.

00:22:25.630 --> 00:22:28.300
So one of the people I reference
a lot in my posts is

00:22:28.300 --> 00:22:30.365
out one of our power users here
in New York that we pow

00:22:30.365 --> 00:22:32.080
wow with sometimes is
Andrew Stillman.

00:22:32.080 --> 00:22:35.730
He works for New Visions, which
works with the public

00:22:35.730 --> 00:22:36.660
schools here in New York.

00:22:36.660 --> 00:22:38.330
And he uses App Script a lot
and he has this exact same

00:22:38.330 --> 00:22:41.930
problem, where you are
one author, but then

00:22:41.930 --> 00:22:43.630
there's a lot of users.

00:22:43.630 --> 00:22:46.460
And how do you as the author
be able to make updates

00:22:46.460 --> 00:22:49.720
without having each user have to
make a new copy of a sheet

00:22:49.720 --> 00:22:51.320
or copy paste code?

00:22:51.320 --> 00:22:53.680
We don't have a perfect
solution today.

00:22:53.680 --> 00:22:55.160
One of the things that helps is

00:22:55.160 --> 00:22:57.740
libraries that Kalyan mentioned.

00:22:57.740 --> 00:23:00.510
A library allows you to
write one script and

00:23:00.510 --> 00:23:03.110
import it into others.

00:23:03.110 --> 00:23:06.540
And so the only caveat there,
and the thing that makes it

00:23:06.540 --> 00:23:10.350
imperfect for this particular
scenario, is that we have a

00:23:10.350 --> 00:23:12.180
concept of versions
on libraries.

00:23:12.180 --> 00:23:14.070
So this is good in that, if
you had a library you were

00:23:14.070 --> 00:23:16.950
dispersing to many people,
let's say you changed a

00:23:16.950 --> 00:23:18.730
function around, you changed the
behavior, you changed the

00:23:18.730 --> 00:23:21.980
order of the parameters, it
would be bad if your change

00:23:21.980 --> 00:23:23.330
broke everybody else who wasn't

00:23:23.330 --> 00:23:24.870
expecting it all at once.

00:23:24.870 --> 00:23:27.420
So instead what we do is we
snapshot your library in a

00:23:27.420 --> 00:23:28.460
period of time.

00:23:28.460 --> 00:23:30.420
And when someone uses your
library, they don't just use

00:23:30.420 --> 00:23:31.100
the library.

00:23:31.100 --> 00:23:32.820
They use a specific version.

00:23:32.820 --> 00:23:35.670
So in this scenario, you could
have all of these spreadsheets

00:23:35.670 --> 00:23:38.070
have scripts that
use the library.

00:23:38.070 --> 00:23:40.730
And then when you push that
new version of the library

00:23:40.730 --> 00:23:43.160
out, you still have to inform
your users to go into the

00:23:43.160 --> 00:23:46.130
script editor, go to the
libraries menu, and change the

00:23:46.130 --> 00:23:48.230
version from two to three,
three to four, et cetera.

00:23:48.230 --> 00:23:50.140
KALYAN REDDY: It's just
a little bit--

00:23:50.140 --> 00:23:51.330
I don't want to say cleaner.

00:23:51.330 --> 00:23:53.040
But it's a little bit easier
for the user than making a

00:23:53.040 --> 00:23:56.030
copy and then dealing with
all that other stuff.

00:23:56.030 --> 00:23:57.096
ERIC KOTEDA: Yeah.

00:23:57.096 --> 00:23:57.830
It is an improvement.

00:23:57.830 --> 00:23:58.870
KALYAN REDDY: It's a
little bit better.

00:23:58.870 --> 00:23:59.856
HARRY: [INAUDIBLE]?

00:23:59.856 --> 00:24:00.945
ERIC KOTEDA: Say that again?

00:24:00.945 --> 00:24:03.040
HARRY: Can I share my
solution for this?

00:24:03.040 --> 00:24:03.830
ERIC KOTEDA: Oh, sure.

00:24:03.830 --> 00:24:04.510
Go ahead.

00:24:04.510 --> 00:24:07.610
HARRY: You can start with a
spreadsheet and add a script

00:24:07.610 --> 00:24:08.630
to the spreadsheet.

00:24:08.630 --> 00:24:13.800
But the alternative is to start
with a plain script

00:24:13.800 --> 00:24:15.660
which you share with
all your users.

00:24:15.660 --> 00:24:18.980
And then you set the ID or the
URL of the spreadsheet in one

00:24:18.980 --> 00:24:19.855
of the user properties.

00:24:19.855 --> 00:24:20.530
ERIC KOTEDA: Mmm.

00:24:20.530 --> 00:24:23.160
HARRY: So everybody's own
spreadsheet, but you all use

00:24:23.160 --> 00:24:24.850
the same copy of the script.

00:24:24.850 --> 00:24:28.050
ERIC KOTEDA: And so how do
you deploy that script?

00:24:28.050 --> 00:24:31.274
HARRY: I have scripts which
works a bit like that, yeah.

00:24:31.274 --> 00:24:33.700
ERIC KOTEDA: But do they
have a user interface?

00:24:33.700 --> 00:24:37.790
Or are they just running them
from the script editor?

00:24:37.790 --> 00:24:41.940
HARRY: The script is a way
where you add a tech to a

00:24:41.940 --> 00:24:44.690
Gmail and then you export
it to Evernote.

00:24:44.690 --> 00:24:45.450
ERIC KOTEDA: Gotcha.

00:24:45.450 --> 00:24:48.230
HARRY: And the first time
you run it, it creates a

00:24:48.230 --> 00:24:53.480
spreadsheet where the
transactions are locked.

00:24:53.480 --> 00:24:57.090
Then you remember that idea
in the properties.

00:24:57.090 --> 00:24:59.432
I have no clue how many
people are using it.

00:24:59.432 --> 00:25:00.758
Quite a lot.

00:25:00.758 --> 00:25:02.090
But it's all the same
copy, yeah.

00:25:02.090 --> 00:25:02.610
ERIC KOTEDA: Right.

00:25:02.610 --> 00:25:06.080
So that's actually a great
alternative, and one that we

00:25:06.080 --> 00:25:08.360
recommended sometimes in the
past, which is that instead of

00:25:08.360 --> 00:25:11.370
thinking of it as each
spreadsheet has its own

00:25:11.370 --> 00:25:14.210
script, there's just one
script that operates in

00:25:14.210 --> 00:25:15.360
multiple spreadsheets.

00:25:15.360 --> 00:25:19.310
So it's kind of flipping on its
head the paradigm here.

00:25:19.310 --> 00:25:21.212
And we've seen ways in the
past where you could, for

00:25:21.212 --> 00:25:23.640
instance, create one script that
you deploy as a web app.

00:25:23.640 --> 00:25:27.100
And so instead of somebody in
the spreadsheet accessing a

00:25:27.100 --> 00:25:30.550
menu that pops up a dialogue,
they just type in a URL--

00:25:30.550 --> 00:25:32.500
or probably it's a too
long to type--

00:25:32.500 --> 00:25:35.220
but they take that URL, and it
shows them a UI where they say

00:25:35.220 --> 00:25:37.450
which spreadsheet would you
like me to operate on?

00:25:37.450 --> 00:25:40.620
And they can configure it from
one central location.

00:25:40.620 --> 00:25:43.180
And then that central location
reaches out to all the

00:25:43.180 --> 00:25:44.880
spreadsheets it wants
to manipulate.

00:25:44.880 --> 00:25:47.130
It's a little harder to wrap
your head around if you've

00:25:47.130 --> 00:25:49.440
been used to building scripts
inside a spreadsheet.

00:25:49.440 --> 00:25:50.240
KALYAN REDDY: The
container bound.

00:25:50.240 --> 00:25:51.900
ERIC KOTEDA: Yeah, the
container bound.

00:25:51.900 --> 00:25:53.360
But it does fix this problem.

00:25:53.360 --> 00:25:55.360
But anyway, it's a problem
that's still open.

00:25:55.360 --> 00:25:57.450
We still have people wanting a
better solution, and we're

00:25:57.450 --> 00:25:58.690
still talking about
better solutions.

00:25:58.690 --> 00:26:04.930
So we hope to keep coming up
with more alternatives to

00:26:04.930 --> 00:26:07.810
libraries and to this that would
make it so that people

00:26:07.810 --> 00:26:10.920
in your situation have an easier
way to do updates.

00:26:10.920 --> 00:26:12.680
KALYAN REDDY: Mm hmm.

00:26:12.680 --> 00:26:15.700
HARRY: I have shared a blog
post to the link of

00:26:15.700 --> 00:26:16.428
the script I used.

00:26:16.428 --> 00:26:18.340
ERIC KOTEDA: Oh great.

00:26:18.340 --> 00:26:20.125
MALE SPEAKER: [INAUDIBLE].

00:26:20.125 --> 00:26:23.120
ERIC KOTEDA: All right, I want
to make sure we get through at

00:26:23.120 --> 00:26:24.280
least one more or two more
in the Moderator.

00:26:24.280 --> 00:26:25.830
So if you're on the Hangout,
just wait a second.

00:26:25.830 --> 00:26:26.970
I want to make sure, because
people did vote on the

00:26:26.970 --> 00:26:30.310
Moderator and we actually have
some good votes on here.

00:26:30.310 --> 00:26:32.180
So one of the ones that got
voted very highly was from

00:26:32.180 --> 00:26:34.720
Alan, and he didn't say where.

00:26:34.720 --> 00:26:37.350
He said, are there any examples
of using do posts

00:26:37.350 --> 00:26:40.110
that can read non-form submitted
content such as

00:26:40.110 --> 00:26:41.210
application JSON?

00:26:41.210 --> 00:26:44.690
All the examples I've seen
assume form submissions or

00:26:44.690 --> 00:26:46.940
they don't need to
access the body.

00:26:46.940 --> 00:26:48.600
Oh, very interesting.

00:26:48.600 --> 00:26:51.730
Yeah, I think the do post we
have today is specifically--

00:26:51.730 --> 00:26:53.690
and if you don't know, this is
a way that your script can

00:26:53.690 --> 00:26:56.950
react to a post request instead
of just a get request.

00:26:56.950 --> 00:27:00.060
But I think the do post today
does expect URL forming

00:27:00.060 --> 00:27:01.600
encoded, I'm assuming.

00:27:01.600 --> 00:27:05.960
It parses the data that comes
in to the post request and

00:27:05.960 --> 00:27:08.250
puts it into the eDOT
parameters.

00:27:08.250 --> 00:27:10.110
Or I guess, puts it into
the parameters field

00:27:10.110 --> 00:27:11.680
of the event object.

00:27:11.680 --> 00:27:13.420
Anyway, you can read more
about this in our

00:27:13.420 --> 00:27:14.030
documentation.

00:27:14.030 --> 00:27:16.860
But I believe it probably does
have to be URL form encoded

00:27:16.860 --> 00:27:20.320
and not just applications
JSON.

00:27:20.320 --> 00:27:22.600
You know, if you have a really
compelling use case for this--

00:27:22.600 --> 00:27:22.960
do you?

00:27:22.960 --> 00:27:23.890
KALYAN REDDY: Yeah.

00:27:23.890 --> 00:27:25.500
I'm not actually sure.

00:27:25.500 --> 00:27:27.990
I remember dealing with this a
little bit ago, but I don't

00:27:27.990 --> 00:27:28.710
have it on the top of my head.

00:27:28.710 --> 00:27:29.900
I'll have to go back
and look at it.

00:27:29.900 --> 00:27:30.055
ERIC KOTEDA: OK.

00:27:30.055 --> 00:27:31.180
We can dig in this a
little bit more.

00:27:31.180 --> 00:27:33.300
That was my gut feeling, but
I'm not actually 100% sure.

00:27:33.300 --> 00:27:35.730
But if you have a really
compelling use case, like you

00:27:35.730 --> 00:27:38.860
have some integration that
relies on this, or there's

00:27:38.860 --> 00:27:41.180
something really cool you could
do if you had this, open

00:27:41.180 --> 00:27:42.390
a feature request.

00:27:42.390 --> 00:27:44.420
Give us some background
about why it's useful,

00:27:44.420 --> 00:27:45.500
what you use it for.

00:27:45.500 --> 00:27:46.840
And we can take it
to the team.

00:27:46.840 --> 00:27:48.560
KALYAN REDDY: Yep.

00:27:48.560 --> 00:27:49.420
ERIC KOTEDA: Great.

00:27:49.420 --> 00:27:52.210
And then one more from Alan that
got voted up was what are

00:27:52.210 --> 00:27:55.495
best practices for debugging
inside of a doGet doPost?

00:27:55.495 --> 00:27:56.730
That's very interesting.

00:27:56.730 --> 00:28:00.240
KALYAN REDDY: So one thing
is, if your doGet has the

00:28:00.240 --> 00:28:02.620
parameter e or whatever,
you can't run

00:28:02.620 --> 00:28:03.420
in the script editor.

00:28:03.420 --> 00:28:06.300
But oftentimes, you can remove
that just for test purposes

00:28:06.300 --> 00:28:09.050
and actually run it within the
script editor if you're not

00:28:09.050 --> 00:28:11.860
relying on parameters coming
in from the get request.

00:28:11.860 --> 00:28:15.050
So you can go through your
script and make sure that all

00:28:15.050 --> 00:28:17.600
the services you're calling are
returning the information

00:28:17.600 --> 00:28:19.495
you want and you're processing
it the way you want.

00:28:19.495 --> 00:28:20.600
ERIC KOTEDA: Right.

00:28:20.600 --> 00:28:22.390
Yeah actually, what I've done
in the past around that is

00:28:22.390 --> 00:28:25.860
I've left my doGet the same,
excepting an event parameter.

00:28:25.860 --> 00:28:27.310
And let's say I'm relying
on certain

00:28:27.310 --> 00:28:28.560
parameters inside there.

00:28:28.560 --> 00:28:31.220
I'll create a test function
that just creates

00:28:31.220 --> 00:28:32.680
a fake event object--

00:28:32.680 --> 00:28:33.245
KALYAN REDDY: Yep.

00:28:33.245 --> 00:28:34.530
ERIC KOTEDA: Populating
some parameters.

00:28:34.530 --> 00:28:37.500
And then pass that fake event
object into a call to doGet.

00:28:37.500 --> 00:28:40.100
And it allows me in the script
editor to let it do the

00:28:40.100 --> 00:28:40.680
processing.

00:28:40.680 --> 00:28:44.000
And I can test out what happens,
log certain messages,

00:28:44.000 --> 00:28:45.150
maybe even debug.

00:28:45.150 --> 00:28:49.530
Now if you want to actually test
a live page with clicking

00:28:49.530 --> 00:28:51.110
and all that, it's absolutely
not going to work.

00:28:51.110 --> 00:28:54.176
You can't run the debugger when
you're in the middle of a

00:28:54.176 --> 00:28:55.740
live request.

00:28:55.740 --> 00:28:59.150
But you can do some things like
do logging is one thing,

00:28:59.150 --> 00:29:01.320
if you use a logger service.

00:29:01.320 --> 00:29:02.290
[INAUDIBLE]

00:29:02.290 --> 00:29:04.650
get some information
as you're going.

00:29:04.650 --> 00:29:07.020
That's some basic debugging.

00:29:07.020 --> 00:29:09.020
Occasionally if you need to
collect even more data, I'll

00:29:09.020 --> 00:29:11.120
do some logging to a spreadsheet
if I'm having a

00:29:11.120 --> 00:29:13.620
real big problem and the logger
doesn't hold enough

00:29:13.620 --> 00:29:15.220
information.

00:29:15.220 --> 00:29:16.630
But I don't know if
there's really a--

00:29:19.930 --> 00:29:24.680
I know some web platforms like
Apache, Tomcats, I think you

00:29:24.680 --> 00:29:26.900
can do live tying
of the debugger

00:29:26.900 --> 00:29:29.910
into the actual running--

00:29:29.910 --> 00:29:31.800
KALYAN REDDY: Oh, you can
actually simulate the request

00:29:31.800 --> 00:29:34.025
coming in and then stop
it and then stop it.

00:29:34.025 --> 00:29:34.780
ERIC KOTEDA: Yeah, exactly.

00:29:34.780 --> 00:29:36.320
So you can't do that
with App Scripts.

00:29:36.320 --> 00:29:38.180
So if you're used to advanced
debugging, we're

00:29:38.180 --> 00:29:38.910
not quite there yet.

00:29:38.910 --> 00:29:41.780
But if there's something that
you find is lacking with the

00:29:41.780 --> 00:29:43.630
debugging techniques, we
do have a page in our

00:29:43.630 --> 00:29:46.330
documentation around
troubleshooting.

00:29:46.330 --> 00:29:48.620
So if you think that we don't
cover doGet enough there

00:29:48.620 --> 00:29:52.060
today, open a feature request
for us and we'll enhance our

00:29:52.060 --> 00:29:53.320
documentation a little
bit there.

00:29:53.320 --> 00:29:54.594
KALYAN REDDY: Definitely.

00:29:54.594 --> 00:29:56.550
ERIC KOTEDA: All right,
I think we are just

00:29:56.550 --> 00:29:59.670
about out of time.

00:29:59.670 --> 00:30:02.052
Let's throw to the Hangout one
more time just because I want

00:30:02.052 --> 00:30:03.340
to make sure we don't leave
people hanging.

00:30:03.340 --> 00:30:05.360
So is there anybody else on the
Hangout with a question?

00:30:05.360 --> 00:30:06.130
MALE SPEAKER: I've got one.

00:30:06.130 --> 00:30:06.670
ERIC KOTEDA: OK, go ahead.

00:30:06.670 --> 00:30:07.742
KALYAN REDDY: Yeah, go ahead.

00:30:07.742 --> 00:30:10.730
GRANT: A quickie, and very
likely outside the scope.

00:30:10.730 --> 00:30:16.150
I just started using Python
to access spreadsheets.

00:30:16.150 --> 00:30:19.390
And of course, the first thing
I ran into was inability to

00:30:19.390 --> 00:30:21.970
find any of the Python
documentation because you all

00:30:21.970 --> 00:30:24.970
moved everything except the
Python documentation.

00:30:24.970 --> 00:30:27.320
And then when I did find the
Python documentation and

00:30:27.320 --> 00:30:31.300
examples, the last update
to it was I think

00:30:31.300 --> 00:30:33.390
some time in 2010.

00:30:33.390 --> 00:30:39.110
I was able to get it running,
and it runs fine.

00:30:39.110 --> 00:30:43.900
But the current example does
not support, I guess, OR.

00:30:43.900 --> 00:30:46.190
So I was able to get it
running with a single

00:30:46.190 --> 00:30:47.370
authorization account.

00:30:47.370 --> 00:30:50.880
But I could not make it
run with a two factor

00:30:50.880 --> 00:30:53.500
authentication account.

00:30:53.500 --> 00:30:58.980
And at least the example that
I showed, that I got, called

00:30:58.980 --> 00:31:01.420
directly into a complete
Google library.

00:31:01.420 --> 00:31:02.650
So there was nothing
to substitute.

00:31:02.650 --> 00:31:03.760
ERIC KOTEDA: I see.

00:31:03.760 --> 00:31:06.740
MALE SPEAKER: So it left me with
saying, OK well, I can

00:31:06.740 --> 00:31:09.940
figure this out for plain
off accounts but I can't

00:31:09.940 --> 00:31:11.050
figure it out for--

00:31:11.050 --> 00:31:11.530
ERIC KOTEDA: Two factor.

00:31:11.530 --> 00:31:12.410
MALE SPEAKER: Dual
off account.

00:31:12.410 --> 00:31:15.390
Because it's not something that
it's telling me to put

00:31:15.390 --> 00:31:17.170
this client on my side.

00:31:17.170 --> 00:31:18.960
It's something that
it's calling into.

00:31:18.960 --> 00:31:20.070
ERIC KOTEDA: Right, right.

00:31:20.070 --> 00:31:23.290
Yeah, so unfortunately, App
Script, we don't deal with

00:31:23.290 --> 00:31:24.260
that particular product.

00:31:24.260 --> 00:31:26.580
I mean, I can talk to some of
the guys who I think would

00:31:26.580 --> 00:31:29.220
know where those documentation
ended up, and see if they can

00:31:29.220 --> 00:31:30.420
help fix that.

00:31:30.420 --> 00:31:32.780
As a quick aside, I actually
do happen to know a way you

00:31:32.780 --> 00:31:34.600
can use a two factor account.

00:31:34.600 --> 00:31:35.450
And it's called the

00:31:35.450 --> 00:31:37.270
application specific passwords.

00:31:37.270 --> 00:31:39.690
So if you have a two factor
account, one of things you can

00:31:39.690 --> 00:31:42.300
configure in your Google
account settings is our

00:31:42.300 --> 00:31:43.740
application specific
passwords.

00:31:43.740 --> 00:31:44.580
MALE SPEAKER: I'll
give that a shot.

00:31:44.580 --> 00:31:45.120
ERIC KOTEDA: Yeah.

00:31:45.120 --> 00:31:47.050
They act just like as
if you had a single

00:31:47.050 --> 00:31:47.950
password in the past.

00:31:47.950 --> 00:31:51.020
And so you can just feed that
in where you'd feed in a

00:31:51.020 --> 00:31:52.000
single password.

00:31:52.000 --> 00:31:55.460
And then you don't need to worry
about the whole one time

00:31:55.460 --> 00:31:57.225
password system at all.

00:31:57.225 --> 00:31:58.610
MALE SPEAKER: Yeah.

00:31:58.610 --> 00:32:01.310
Unfortunately, that has some
other complications in terms

00:32:01.310 --> 00:32:04.250
of having to be continuously
recognized as the same thing.

00:32:04.250 --> 00:32:04.920
ERIC KOTEDA: Gotcha.

00:32:04.920 --> 00:32:07.210
Well unfortunately, we can't
help you too much more there.

00:32:07.210 --> 00:32:09.310
MALE SPEAKER: I thought I would
probably [INAUDIBLE].

00:32:09.310 --> 00:32:10.070
ERIC KOTEDA: Doesn't
hurt to ask.

00:32:10.070 --> 00:32:11.320
Why not?

00:32:13.750 --> 00:32:17.560
Before we wrap up, any
last questions?

00:32:17.560 --> 00:32:18.930
All right.

00:32:18.930 --> 00:32:21.020
Well, we'll be back
again next month.

00:32:21.020 --> 00:32:22.880
We're going to try to do
these monthly now.

00:32:22.880 --> 00:32:24.840
We did them a lot more
frequently in the past, these

00:32:24.840 --> 00:32:25.810
question and answers.

00:32:25.810 --> 00:32:27.250
But it's a lot better
when we have good

00:32:27.250 --> 00:32:28.170
attendance like we had today.

00:32:28.170 --> 00:32:29.200
Thanks everyone for tuning in.

00:32:29.200 --> 00:32:29.800
KALYAN REDDY: Yeah.

00:32:29.800 --> 00:32:30.390
ERIC KOTEDA: So we'll
be holding one

00:32:30.390 --> 00:32:31.430
of these next month.

00:32:31.430 --> 00:32:34.260
So if you have any questions in
the meantime, ask them on

00:32:34.260 --> 00:32:35.050
Stack Overflow.

00:32:35.050 --> 00:32:38.150
That's where we do question
and answer on App Script.

00:32:38.150 --> 00:32:40.620
We actually have a fairly
new support page in our

00:32:40.620 --> 00:32:44.080
documentation that lists all the
different ways you can get

00:32:44.080 --> 00:32:46.940
support, including Stack
Overflow, how to file bugs,

00:32:46.940 --> 00:32:51.720
feature requests, going to a
discussion, Google+ community.

00:32:51.720 --> 00:32:53.830
So go to that page,
check it out.

00:32:53.830 --> 00:32:56.340
If you have any questions until
then, Stack Overflow.

00:32:56.340 --> 00:32:58.190
Otherwise, we'll see you
probably next month for

00:32:58.190 --> 00:32:58.450
another episode.

00:32:58.450 --> 00:32:59.110
KALYAN REDDY: Yeah.

00:32:59.110 --> 00:33:01.750
And we'll definitely put
the time and the

00:33:01.750 --> 00:33:03.790
link on our Plus pages.

00:33:03.790 --> 00:33:06.280
So subscribe to that, add
it to your calendars.

00:33:06.280 --> 00:33:06.810
ERIC KOTEDA: Yeah.

00:33:06.810 --> 00:33:08.802
Follow us both on Google+
and you'll

00:33:08.802 --> 00:33:09.720
definitely get all the updates.

00:33:09.720 --> 00:33:10.480
KALYAN REDDY: Yeah.

00:33:10.480 --> 00:33:11.320
ERIC KOTEDA: All right, thanks
a lot everybody.

00:33:11.320 --> 00:33:12.570
KALYAN REDDY: Thanks.

