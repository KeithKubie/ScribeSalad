WEBVTT
Kind: captions
Language: en

00:00:00.140 --> 00:00:02.110
In case you're not terribly familiar with XML, let's spend

00:00:02.110 --> 00:00:05.030
a few minutes talking syntax. Even if you are familiar,

00:00:05.030 --> 00:00:07.410
it might make sense to follow along with this little

00:00:07.410 --> 00:00:11.820
review. So in XML, elements are the basic building blocks

00:00:11.820 --> 00:00:16.540
of an XML document. Now an XML element is composed

00:00:16.540 --> 00:00:20.510
of an open tag and a closed tag, now this

00:00:20.510 --> 00:00:22.930
is some data drawn from the New York Times developer

00:00:22.930 --> 00:00:26.070
API Encourage you to have a look at this site.

00:00:26.070 --> 00:00:28.380
We are going to look at some data from the most

00:00:28.380 --> 00:00:32.940
popular API. These are for example articles that are most frequently

00:00:32.940 --> 00:00:35.870
emailed among readers of the New York Times. Okay, so

00:00:35.870 --> 00:00:39.340
let's look at a couple of examples here. So, the first

00:00:39.340 --> 00:00:42.090
thing that we might notice about this particular document is

00:00:42.090 --> 00:00:45.810
that we have some tags for num results or some elements

00:00:45.810 --> 00:00:48.540
that have to do with the number of results. So,

00:00:48.540 --> 00:00:51.100
this is actually result set from having done a query to

00:00:51.100 --> 00:00:54.490
the most popular API and we've got a, an

00:00:54.490 --> 00:00:56.890
element that tells us how many results were identified

00:00:56.890 --> 00:01:00.160
by our query. And then the list of results

00:01:00.160 --> 00:01:03.630
follows. Now this happens to be a single result here.

00:01:03.630 --> 00:01:05.590
And we can see that this result begins right

00:01:05.590 --> 00:01:09.910
here with this open tag and closes right here

00:01:09.910 --> 00:01:13.530
with this close tag. Okay. Now just as a

00:01:13.530 --> 00:01:16.280
couple of other examples of the data within this particular

00:01:16.280 --> 00:01:18.830
result, we can take a look at the byline, note that

00:01:18.830 --> 00:01:21.310
it's got a close tag, as well. And some of the

00:01:21.310 --> 00:01:24.180
other elements, here if you note the title for example, this

00:01:24.180 --> 00:01:28.760
happens to be an article about bedbugs. Okay. So, this provides an

00:01:28.760 --> 00:01:31.560
example using some really nicely named tags. We know what these

00:01:31.560 --> 00:01:35.690
mean. Now, there's another aspect of XML that we need to concern

00:01:35.690 --> 00:01:38.280
ourselves with especially given some of the exercises that we're going

00:01:38.280 --> 00:01:41.660
to have. Later on. And those have to do with attributes for

00:01:41.660 --> 00:01:45.770
XML elements. Now, this document provides a number of very

00:01:45.770 --> 00:01:49.780
nice examples of elements in XML. But what we don't

00:01:49.780 --> 00:01:53.000
have here are any examples of attributes for any of

00:01:53.000 --> 00:01:56.080
these elements being used. So what I'd like to do here

00:01:56.080 --> 00:01:58.220
is talk about essentially the two types of data that

00:01:58.220 --> 00:02:01.130
we're going to look at that have been encoded in XML. One

00:02:01.130 --> 00:02:04.140
is this more documented oriented type of XML, which is

00:02:04.140 --> 00:02:07.450
originally the type of data that XML was designed to encode.

00:02:07.450 --> 00:02:09.520
But then we can also take a look at

00:02:09.520 --> 00:02:12.970
something like this. Okay, now this is actual data from

00:02:12.970 --> 00:02:16.300
the open street map project. This is a pretty close

00:02:16.300 --> 00:02:19.295
zoomed in view from Open street map of West Belmont

00:02:19.295 --> 00:02:22.790
avenue. Particularly the 1000 block. And you can see right

00:02:22.790 --> 00:02:25.590
here, there's a Giardano's Restaurant here. Giardano's is a famous

00:02:25.590 --> 00:02:29.330
pizza chain in Chicago. So, this is data that is

00:02:29.330 --> 00:02:33.280
essentially from a layer on top of that particular map.

00:02:33.280 --> 00:02:35.650
This is data that is human created. So, users

00:02:35.650 --> 00:02:39.080
of Open Street Map have actually added this data on

00:02:39.080 --> 00:02:44.200
top of the map data. And what I want to point out here is that this is very much

00:02:44.200 --> 00:02:48.750
not document oriented. This is just data. Okay? And

00:02:48.750 --> 00:02:50.680
a lot of times you see HTML used in this

00:02:50.680 --> 00:02:54.900
way, you'll see that attributes are heavily used. So

00:02:54.900 --> 00:02:58.500
in this particular example, this is the node that represents

00:02:58.500 --> 00:03:00.650
the Giordano's restaurant. We can see that there is

00:03:00.650 --> 00:03:03.880
a number of attributes specified for this particular element.

00:03:03.880 --> 00:03:07.450
Common among them are the latitude and longitude attributes

00:03:07.450 --> 00:03:10.870
that this particular annotation applies to. So, essentially what

00:03:10.870 --> 00:03:13.920
this data element provides is a mapping from geographic

00:03:13.920 --> 00:03:19.740
coordinates to more common street address coordinates. Okay? So

00:03:19.740 --> 00:03:22.000
this is a good example of attributes in XML

00:03:22.000 --> 00:03:23.650
and there's one other thing that I want to point

00:03:23.650 --> 00:03:26.970
out here. And that is this type of tag here.

00:03:26.970 --> 00:03:30.050
Now in this particular data they're doing something that I probably

00:03:30.050 --> 00:03:31.710
wouldn't do, but it is the type of thing that

00:03:31.710 --> 00:03:34.390
you're going to see as a data scientist and likely already

00:03:34.390 --> 00:03:36.620
have. Essentially, they've just got a bunch of key value

00:03:36.620 --> 00:03:40.360
pairs that are encoded in something called a tag element. And,

00:03:40.360 --> 00:03:43.740
in this case, none of these tag elements have a

00:03:43.740 --> 00:03:48.740
close tag. Instead, they use this special xml syntax where you

00:03:48.740 --> 00:03:51.330
can simply create what are called empty tags, that

00:03:51.330 --> 00:03:54.120
is tags that don't have any content. All of

00:03:54.120 --> 00:03:56.590
the data for this type of tag is contained

00:03:56.590 --> 00:04:00.370
directly within its attributes. So the most emailed example

00:04:00.370 --> 00:04:04.100
here provides us a nice example of document oriented

00:04:04.100 --> 00:04:08.650
XML with lots of content inside the elements. And

00:04:08.650 --> 00:04:12.050
this particular example from your [INAUDIBLE] project provides us

00:04:12.050 --> 00:04:13.880
with other end of this spectrum which is very

00:04:13.880 --> 00:04:18.880
data oriented XML where all or almost all of the data

00:04:18.880 --> 00:04:23.070
is contained within attributes for the individual elements and in this

00:04:23.070 --> 00:04:26.660
types of cases, you often have mostly or at least many

00:04:26.660 --> 00:04:29.240
empty elements within the XML data that you are looking at.

