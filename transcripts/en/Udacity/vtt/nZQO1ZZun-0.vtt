WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:05.360
Now, having introduced distributed shared memory, I want to give sort of a

00:00:05.360 --> 00:00:10.410
birds eye view of the history of shared memory systems over

00:00:10.410 --> 00:00:15.550
the last oh, 20 plus years. My intent is not

00:00:15.550 --> 00:00:17.920
to go into the details of everyone of

00:00:17.920 --> 00:00:21.270
these different systems, because that can take forever, but

00:00:21.270 --> 00:00:25.380
it is just to give you sort of the space occupied by all the efforts that have

00:00:25.380 --> 00:00:28.230
gone on in building shared memory systems, both

00:00:28.230 --> 00:00:31.640
in hardware and in software. I encourage you

00:00:31.640 --> 00:00:35.350
to surf the web to identify papers and

00:00:35.350 --> 00:00:37.950
literature on these different systems that have been built

00:00:37.950 --> 00:00:42.980
over time, just to get a perspective on how far we have come in the space of

00:00:42.980 --> 00:00:46.090
building shared memory systems. A few thoughts, on

00:00:46.090 --> 00:00:50.620
the software side, software DSM was very first thought

00:00:50.620 --> 00:00:57.529
of in the mid 80s. The Ivy system that was built at Yale University by Kai

00:00:57.529 --> 00:00:59.820
Li and the Clouds Operating System that was

00:00:59.820 --> 00:01:03.110
built at Georgia Tech and there were similar systems

00:01:03.110 --> 00:01:06.230
built at UPenn. This, I would say, is

00:01:06.230 --> 00:01:09.600
the beginning of Software Distributed Shared Memory. Later

00:01:09.600 --> 00:01:12.880
on, in the early' 90s, systems like Munin

00:01:12.880 --> 00:01:15.840
and TreadMarks were built. I would call them perhaps

00:01:15.840 --> 00:01:18.360
a second generation of Distributed Shared Memory

00:01:18.360 --> 00:01:22.030
systems. And in the later half of the

00:01:22.030 --> 00:01:25.200
90s, there were systems like Blizzard, Shasta,

00:01:25.200 --> 00:01:27.930
Cashmere and Beehive. That took some of the

00:01:27.930 --> 00:01:35.080
ideas from the early 90s even further. And in parallel with the software DSM, I

00:01:35.080 --> 00:01:37.820
would say there was also a completely different

00:01:37.820 --> 00:01:40.582
track that was being pursued. And that is,

00:01:40.582 --> 00:01:44.170
providing structured objects in a cluster for

00:01:44.170 --> 00:01:48.292
programming. And systems such as Linda and Orca,

00:01:48.292 --> 00:01:51.484
were done in the early 90s. Stampede at

00:01:51.484 --> 00:01:54.034
Georgia Tech was done in concert with the

00:01:54.034 --> 00:01:57.034
Digital Equipment Corporation in the mid 90s

00:01:57.034 --> 00:01:59.959
and continued on, later on, into Stampede Rt

00:01:59.959 --> 00:02:01.984
and PTS, and in fact, in a later

00:02:01.984 --> 00:02:06.171
lesson, we'll talk about Persistent Temporal Streams. And

00:02:06.171 --> 00:02:09.826
this particular axis of development of structured

00:02:09.826 --> 00:02:13.566
distributed shared memory is attractive because it

00:02:13.566 --> 00:02:16.626
gives a higher level abstraction than just

00:02:16.626 --> 00:02:19.431
memory to computations that needs to be

00:02:19.431 --> 00:02:23.340
built on a cluster. Early hardware shared

00:02:23.340 --> 00:02:25.490
memory systems such as BBN Butterfly and

00:02:25.490 --> 00:02:27.850
Sequent Symmetry appeared in the market in

00:02:27.850 --> 00:02:31.430
the mid 80s and, the synchronization paper

00:02:31.430 --> 00:02:33.910
that we saw earlier by Mellor-Crummey and

00:02:33.910 --> 00:02:38.110
Scott used BBN Butterfly and Sequent Symmetry as

00:02:38.110 --> 00:02:42.150
the experimental platform for the evaluation of

00:02:42.150 --> 00:02:46.310
the different synchronization algorithms. KSR-1 was another shared

00:02:46.310 --> 00:02:48.590
memory machine that was built in the

00:02:48.590 --> 00:02:51.950
early 90s. Alewife was a research prototype that

00:02:51.950 --> 00:02:57.470
was built at MIT, DASH was a research prototype that was built at Stanford and

00:02:57.470 --> 00:03:03.090
both of them looked at how to scale up beyond an SMP, and

00:03:03.090 --> 00:03:05.890
build a truly distributed shared memory machine.

00:03:05.890 --> 00:03:08.305
And commercial versions of that started appearing.

00:03:08.305 --> 00:03:12.560
SGI silicon graphics built SGI origin 2000

00:03:12.560 --> 00:03:16.480
as a scalable version of a distributed

00:03:16.480 --> 00:03:20.090
shared memory machine. SGI Altix later on

00:03:20.090 --> 00:03:23.190
took it even further, thousands of processors

00:03:23.190 --> 00:03:26.430
exist in SGI Altix as a large-scale shared

00:03:26.430 --> 00:03:30.810
memory machine. IBM Bluegene is another example. And today,

00:03:30.810 --> 00:03:32.380
if you look at what is going on

00:03:32.380 --> 00:03:34.950
in the space of high performance computing. It is

00:03:34.950 --> 00:03:38.740
clusters of SMPs which have become the work

00:03:38.740 --> 00:03:42.170
horses in data centers. I very much want you

00:03:42.170 --> 00:03:44.410
to reflect on the progress that has been

00:03:44.410 --> 00:03:48.170
made in shared memory systems. And, invite you to,

00:03:48.170 --> 00:03:50.940
look at, some of the details of machines

00:03:50.940 --> 00:03:52.430
that have been built in the past, either

00:03:52.430 --> 00:03:54.930
in the hardware or in software, so that

00:03:54.930 --> 00:03:57.340
you can learn the progress that has been made.

