WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:34.927
[MUSIC PLAYING]

00:01:43.060 --> 00:01:45.470
Hello, and welcome to
this week's Google

00:01:45.470 --> 00:01:47.170
Maps Developers Live.

00:01:47.170 --> 00:01:49.890
This week we're doing a
continuation of our last

00:01:49.890 --> 00:01:54.260
week's show, which was "A Tale
of 245,000 Points." What we

00:01:54.260 --> 00:01:56.750
did is we took a very
interesting data set, the

00:01:56.750 --> 00:01:59.460
C-L-I-O-W-C data set.

00:01:59.460 --> 00:02:03.510
I'll bring it up on the computer
in a little bit.

00:02:03.510 --> 00:02:05.950
It's actually a database
of ship voyages

00:02:05.950 --> 00:02:08.210
between 1750 and 1850.

00:02:08.210 --> 00:02:12.570
We took that data, visualized
the data on a map.

00:02:12.570 --> 00:02:15.480
What they did is they took-- the
university did-- they took

00:02:15.480 --> 00:02:19.330
the ship logs, they digitized
it, so we have a bunch of

00:02:19.330 --> 00:02:21.680
samples of basically wind, wind

00:02:21.680 --> 00:02:23.920
speed, and ship positions.

00:02:23.920 --> 00:02:28.020
So in the examples that I gave
last week, I did not use the

00:02:28.020 --> 00:02:32.440
wind speed, but Brendan did
in his canvas layer demo.

00:02:32.440 --> 00:02:34.970
This week, I'm just going to
go back to the geospatial

00:02:34.970 --> 00:02:37.540
data, though, and not
the wind speed.

00:02:37.540 --> 00:02:38.870
But I'm going to cover a
few more interesting

00:02:38.870 --> 00:02:42.090
visualizations that you
can do with that data.

00:02:42.090 --> 00:02:45.190
So to kick things off with,
I'll pick up where we

00:02:45.190 --> 00:02:46.990
left off last week.

00:02:46.990 --> 00:02:49.010
So this is a heat map
of actually just

00:02:49.010 --> 00:02:51.660
one year of the data.

00:02:51.660 --> 00:02:56.050
So basically, we took the points
from the data set,

00:02:56.050 --> 00:02:57.960
binned them by year, and
actually plotted

00:02:57.960 --> 00:02:58.600
them in a heat map.

00:02:58.600 --> 00:03:04.300
So this is actually showing
density of samples, which

00:03:04.300 --> 00:03:10.290
actually correlates roughly to
ship voyages, or density of

00:03:10.290 --> 00:03:11.910
ship activity.

00:03:11.910 --> 00:03:14.860
So, a lot of it's dependant on
where the ships were and how

00:03:14.860 --> 00:03:17.410
often they were sampling.

00:03:17.410 --> 00:03:19.970
If we zoom in over here, you
can see that these ships in

00:03:19.970 --> 00:03:25.020
this section here were sampling
relatively regularly.

00:03:25.020 --> 00:03:28.290
Some other areas, if you zoom
out, you can see it's much

00:03:28.290 --> 00:03:30.436
less regular.

00:03:30.436 --> 00:03:33.690
Don't have a good
example here.

00:03:33.690 --> 00:03:37.680
So like I said, I bin
this data by year.

00:03:37.680 --> 00:03:39.830
I added this slider in,
so actually we can

00:03:39.830 --> 00:03:41.470
increment over the years.

00:03:41.470 --> 00:03:46.640
So now, we're going in
the 1760s, 1780s.

00:03:46.640 --> 00:03:51.040
So basically what I'm doing is
I'm taking each of the bin,

00:03:51.040 --> 00:03:53.860
applying them to a heat map, and
applying that heat map to

00:03:53.860 --> 00:03:56.900
the actual map itself.

00:03:56.900 --> 00:03:58.690
Very interesting data
here though.

00:03:58.690 --> 00:04:02.110
So as we go year by year,
we can see the densities

00:04:02.110 --> 00:04:03.160
changing over time.

00:04:03.160 --> 00:04:04.950
We can see more--

00:04:04.950 --> 00:04:07.460
actually, if we go back just a
year, really interesting, we

00:04:07.460 --> 00:04:12.480
can see quite a few voyages
to Peru in 1778.

00:04:12.480 --> 00:04:13.170
We continue on.

00:04:13.170 --> 00:04:17.440
We start to see some arctic
voyages coming out of, I

00:04:17.440 --> 00:04:20.620
believe that's Denmark.

00:04:20.620 --> 00:04:22.810
So it's a very interesting
data set.

00:04:22.810 --> 00:04:25.910
Visualized in a heat map, you
get the sense of density.

00:04:25.910 --> 00:04:28.710
Also, what I talked about last
week was actually how to get

00:04:28.710 --> 00:04:31.890
your map in a state where you
can actually do really

00:04:31.890 --> 00:04:33.530
compelling visualizations.

00:04:33.530 --> 00:04:36.140
And again, what I did with this
map is I basically turned

00:04:36.140 --> 00:04:40.760
everything off using the Styled
Maps API and just

00:04:40.760 --> 00:04:43.530
incrementally added in the data
that I really wanted on

00:04:43.530 --> 00:04:44.440
the display.

00:04:44.440 --> 00:04:48.930
So for example, I added back in
water and I made it black,

00:04:48.930 --> 00:04:53.410
turned on the labels for water,
turned on the labels

00:04:53.410 --> 00:04:56.630
for the land masses
or the countries.

00:04:56.630 --> 00:04:59.150
And what I did more recently
since last week is I actually

00:04:59.150 --> 00:05:01.500
put in the cities as well,
because it's kind of

00:05:01.500 --> 00:05:05.630
interesting to see where
these voyages were

00:05:05.630 --> 00:05:10.050
coming from and going.

00:05:10.050 --> 00:05:13.110
Take a look at the code again
for this one here.

00:05:13.110 --> 00:05:14.590
So, this was heat map four.

00:05:14.590 --> 00:05:15.650
Relatively straightforward.

00:05:15.650 --> 00:05:18.260
You can see my map
styling again.

00:05:18.260 --> 00:05:21.650
So turn everything off, which
is the important part, I

00:05:21.650 --> 00:05:24.430
think, with doing
visualizations, because then

00:05:24.430 --> 00:05:26.120
you can kind of pick and choose
what information you

00:05:26.120 --> 00:05:27.840
want to put back in.

00:05:27.840 --> 00:05:29.450
Making the water black,
turning the

00:05:29.450 --> 00:05:31.410
visibility back on.

00:05:31.410 --> 00:05:32.990
So with the water labels--

00:05:32.990 --> 00:05:35.020
So you can see down here
if we look at the

00:05:35.020 --> 00:05:37.270
administrative labels--

00:05:37.270 --> 00:05:40.430
so that's the country and
locality for the countries and

00:05:40.430 --> 00:05:41.940
the cities--

00:05:41.940 --> 00:05:44.370
I turned them back on, but I
just inverted the lightness.

00:05:44.370 --> 00:05:48.430
It's just a trick, because
previously they were white on

00:05:48.430 --> 00:05:52.010
black, and I think I inverted
them to black on white.

00:05:52.010 --> 00:05:53.030
The water labels
were different.

00:05:53.030 --> 00:05:57.060
They had blue in them, so I
couldn't just invert the

00:05:57.060 --> 00:06:00.550
lightness, so I actually had
to change the color.

00:06:00.550 --> 00:06:01.910
So that's with the
map styling--

00:06:01.910 --> 00:06:05.260
again, if you want to do map
styling, I recommend

00:06:05.260 --> 00:06:09.930
definitely looking at the Styled
Maps Wizard because

00:06:09.930 --> 00:06:12.010
tweaking a map to this
level can take a

00:06:12.010 --> 00:06:12.850
little bit of effort.

00:06:12.850 --> 00:06:15.490
But using this Styled Maps
Wizard is just a matter of

00:06:15.490 --> 00:06:17.420
grabbing sliders and checking
check boxes.

00:06:17.420 --> 00:06:22.490
So you can pretty quickly
get a nice design.

00:06:22.490 --> 00:06:25.380
Basically, just taking the data,
getting it in a format

00:06:25.380 --> 00:06:27.700
that I liked-- like I said,
it was binned by year.

00:06:27.700 --> 00:06:29.410
And then here, I'm setting
up the gradient.

00:06:29.410 --> 00:06:32.870
And this is very, very simple
gradient for a heat map.

00:06:32.870 --> 00:06:36.050
I like this really
kind of hot look.

00:06:36.050 --> 00:06:38.790
The red sticks out really nicely
on the black water

00:06:38.790 --> 00:06:39.850
background.

00:06:39.850 --> 00:06:43.470
And here just adding
it to the heat map.

00:06:43.470 --> 00:06:46.000
I talked a little bit about this
last week if you want to

00:06:46.000 --> 00:06:48.500
know a little more about these
parameters, things like radius

00:06:48.500 --> 00:06:52.505
and opacity and maxIntensity,
check out the show last week.

00:06:52.505 --> 00:06:56.190
But this week, we want to move
on to some other cool stuff.

00:06:56.190 --> 00:06:58.360
One more heat map though.

00:06:58.360 --> 00:07:02.370
One thing we did that we didn't
show last week with the

00:07:02.370 --> 00:07:06.420
heat maps is to show what you
can do actually plotting data

00:07:06.420 --> 00:07:08.510
real time on a heat map.

00:07:08.510 --> 00:07:12.360
Because the heat map
itself takes an NVC

00:07:12.360 --> 00:07:14.870
array for data points.

00:07:14.870 --> 00:07:18.050
And that NVC array, the way it
works is as you add points to

00:07:18.050 --> 00:07:21.480
an NVC array, the container is
actually notified that there's

00:07:21.480 --> 00:07:23.410
been a change in the array.

00:07:23.410 --> 00:07:27.120
You can assign just a normal
array to a heat map.

00:07:27.120 --> 00:07:30.440
But if you do that, you don't
get this kind of dynamic,

00:07:30.440 --> 00:07:32.700
adding and removing
points effect.

00:07:32.700 --> 00:07:35.330
So taking a look at this map,
it's really kind of fun,

00:07:35.330 --> 00:07:37.540
because you can actually
see the voyages.

00:07:37.540 --> 00:07:39.460
Essentially what I did with this
map is I just sorted the

00:07:39.460 --> 00:07:45.370
data by the date and
just plotting one

00:07:45.370 --> 00:07:46.740
point at the time.

00:07:46.740 --> 00:07:48.290
This is actually plotting
it as fast as

00:07:48.290 --> 00:07:50.150
you can on this computer.

00:07:50.150 --> 00:07:54.060
You can see there's maybe about
a quarter second delay

00:07:54.060 --> 00:07:56.700
or so as each point is added
in, and that's actually all

00:07:56.700 --> 00:07:57.460
rendering time.

00:07:57.460 --> 00:08:03.650
So this isn't super-performant
visualization.

00:08:03.650 --> 00:08:06.670
But the really nice thing about
it is, even though we're

00:08:06.670 --> 00:08:09.590
zooming around or zooming or
we're actually scrolling

00:08:09.590 --> 00:08:12.300
around, actually this is
still being rendered.

00:08:12.300 --> 00:08:14.460
So it's a really cool
effect that you can

00:08:14.460 --> 00:08:15.920
do on top of a map.

00:08:15.920 --> 00:08:17.250
I thought about some
other things that--

00:08:17.250 --> 00:08:19.070
so at some point, this actually
gets pretty slow,

00:08:19.070 --> 00:08:21.220
because you get so many
points on the map.

00:08:21.220 --> 00:08:25.840
And the heat map gets so complex
that it slows down

00:08:25.840 --> 00:08:27.480
almost to a crawl.

00:08:27.480 --> 00:08:29.460
But you can do things-- the
really interesting thing that

00:08:29.460 --> 00:08:31.470
I've been meaning to play
around with is you could

00:08:31.470 --> 00:08:34.880
potentially, since we're using
this NVC array, you can remove

00:08:34.880 --> 00:08:37.520
points from the heat map
as well as adding them.

00:08:37.520 --> 00:08:40.270
So you can actually trim down
and maybe do a window a year

00:08:40.270 --> 00:08:42.220
or something to that effect.

00:08:42.220 --> 00:08:45.160
Another thing you can do is you
could actually fade in and

00:08:45.160 --> 00:08:51.360
out points, because heat map
points actually have a weight

00:08:51.360 --> 00:08:52.250
associated with them.

00:08:52.250 --> 00:08:55.490
So default weight is 1, but
you can actually take that

00:08:55.490 --> 00:08:58.000
down to 0, so actually make
the point relatively

00:08:58.000 --> 00:08:59.670
transparent.

00:08:59.670 --> 00:09:02.390
So that would be a nice effect
for fading data in and out of

00:09:02.390 --> 00:09:04.870
the map as the time
progresses.

00:09:04.870 --> 00:09:06.710
Maybe in a couple weeks we'll
play around with that

00:09:06.710 --> 00:09:09.160
a little bit more.

00:09:09.160 --> 00:09:12.060
But the interesting thing about
this is using this type

00:09:12.060 --> 00:09:15.170
of real-time rendering the
points, you can actually see

00:09:15.170 --> 00:09:16.840
these voyages progress
over time.

00:09:16.840 --> 00:09:18.890
So we started thinking, well,
what are other ways that we

00:09:18.890 --> 00:09:23.730
can look at how these voyages
progress over time.

00:09:23.730 --> 00:09:28.340
And that led us to polylines
and symbols.

00:09:28.340 --> 00:09:32.480
So polylines have been
in the Maps API

00:09:32.480 --> 00:09:33.970
for quite a few years.

00:09:33.970 --> 00:09:35.030
Very simple thing to use.

00:09:35.030 --> 00:09:37.590
You just basically provide
the lat/long values.

00:09:37.590 --> 00:09:40.080
You provide the styling for
the polyline, and it plots

00:09:40.080 --> 00:09:41.560
them on the map.

00:09:41.560 --> 00:09:44.200
You can plot the polylines
on the map.

00:09:44.200 --> 00:09:49.000
You can plot a number of
polylines on a map.

00:09:49.000 --> 00:09:50.935
I think in this case, I'm
plotting at one point up to

00:09:50.935 --> 00:09:53.890
25,000, and we'll show
that in a little bit.

00:09:53.890 --> 00:09:57.180
But what's new about this, new
about polylines, is we

00:09:57.180 --> 00:09:59.030
recently added symbols
to polylines.

00:09:59.030 --> 00:10:01.880
So symbols are actually
SVG paths.

00:10:01.880 --> 00:10:05.560
So they're basically a custom
icon that you can put on top

00:10:05.560 --> 00:10:07.190
of a polyline.

00:10:07.190 --> 00:10:10.980
And what we did here, the
arrows are kind of

00:10:10.980 --> 00:10:11.550
a little bit small.

00:10:11.550 --> 00:10:13.700
We could maybe potentially
blow it up to make this

00:10:13.700 --> 00:10:16.400
visualization a little better,
but you can see there's little

00:10:16.400 --> 00:10:19.480
arrows plotted on this voyage.

00:10:19.480 --> 00:10:23.030
These arrows show direction,
because we originally-- we

00:10:23.030 --> 00:10:26.050
just plotted this line on the
map, and said, wow, it's kind

00:10:26.050 --> 00:10:26.960
of an interesting voyage.

00:10:26.960 --> 00:10:28.780
We can see they--

00:10:28.780 --> 00:10:30.890
I think this is probably a
Dutch voyage, because it

00:10:30.890 --> 00:10:33.350
actually goes to Japan.

00:10:33.350 --> 00:10:36.860
But you can see it actually
has three voyages.

00:10:36.860 --> 00:10:39.350
It goes to Japan, back,
and I think to

00:10:39.350 --> 00:10:41.300
Jakarta and back again.

00:10:41.300 --> 00:10:43.930
So having those arrows on there
was a really nice effect

00:10:43.930 --> 00:10:47.410
to kind of show directionality.

00:10:47.410 --> 00:10:51.150
The nice thing, too, is you can
control what these symbols

00:10:51.150 --> 00:10:53.240
look like since they
are SVG paths.

00:10:53.240 --> 00:10:56.960
Arrow is a default one that we
provide, or one that you can

00:10:56.960 --> 00:10:59.170
use without providing
an SVG path.

00:10:59.170 --> 00:11:01.700
But you can essentially put any
marker you want on top of

00:11:01.700 --> 00:11:05.466
a polyline as long as you have
the SVG paths for them.

00:11:05.466 --> 00:11:07.510
Take a quick look
at this code.

00:11:07.510 --> 00:11:08.660
Let's see.

00:11:08.660 --> 00:11:09.910
Back to sublime.

00:11:14.000 --> 00:11:17.610
This is actually probably the
most simple of all the

00:11:17.610 --> 00:11:21.530
visualizations, all
51 lines of code.

00:11:21.530 --> 00:11:24.140
Although we did put the data in
a separate file, which made

00:11:24.140 --> 00:11:26.450
things a lot more simple.

00:11:26.450 --> 00:11:30.640
Same thing as before--
initializing the map, setting

00:11:30.640 --> 00:11:32.100
up the voyage in terms of--

00:11:32.100 --> 00:11:36.300
So here we're creating the NVC
array for the coordinates and

00:11:36.300 --> 00:11:41.530
converting these lat/long
values, which are actually in

00:11:41.530 --> 00:11:45.780
a JavaScript object into a
Google Maps lat/long object

00:11:45.780 --> 00:11:48.270
and pushing them into
this NVC array.

00:11:48.270 --> 00:11:51.130
For the symbol, we just
assign a path.

00:11:51.130 --> 00:11:53.550
So the path is actually one of
the defaults like I said-- the

00:11:53.550 --> 00:11:55.290
forward closed arrow.

00:11:55.290 --> 00:11:56.840
And then here is actually where
we're setting up the

00:11:56.840 --> 00:11:58.640
polyline itself.

00:11:58.640 --> 00:11:59.760
So we created the polyline.

00:11:59.760 --> 00:12:00.650
We defined the path.

00:12:00.650 --> 00:12:03.450
The path is actually those
points that we loaded up here.

00:12:03.450 --> 00:12:08.660
And then we control how we want
the polylines styled, so

00:12:08.660 --> 00:12:10.180
weight opacity.

00:12:10.180 --> 00:12:12.320
And here is actually where we're
putting the symbol on

00:12:12.320 --> 00:12:14.810
top of the polyline.

00:12:14.810 --> 00:12:19.160
So without the icon, you can
actually just be a very basic

00:12:19.160 --> 00:12:22.450
line, but here we're actually
putting the symbol on top.

00:12:22.450 --> 00:12:26.330
So, here I'm applying the
forward closed arrow and

00:12:26.330 --> 00:12:28.290
specifying an offset
of 10 pixels.

00:12:28.290 --> 00:12:31.440
So that is actually the offset
from the origin of the

00:12:31.440 --> 00:12:34.190
polyline, or the first point
in the polyline.

00:12:34.190 --> 00:12:38.015
So I wanted to offset it
a little bit to show--

00:12:38.015 --> 00:12:40.950
well, it was just kind of
a nice visual tweak.

00:12:40.950 --> 00:12:43.750
And then this repeat is how
often you want that symbol

00:12:43.750 --> 00:12:46.050
repeated on the polyline.

00:12:46.050 --> 00:12:48.870
Both of these can be in
percents or pixels.

00:12:48.870 --> 00:12:50.820
And then here, we're
just assigning the

00:12:50.820 --> 00:12:51.870
polyline to the map.

00:12:51.870 --> 00:12:55.940
So very simple getting a
polyline on a map, and also

00:12:55.940 --> 00:13:01.000
like using these SVG symbols,
also very simple to get a good

00:13:01.000 --> 00:13:04.170
visualization that way or add
a little bit of extra data.

00:13:04.170 --> 00:13:06.080
So like I said, with this
visualization, we just wanted

00:13:06.080 --> 00:13:12.390
to show the voyage and then also
show direction, which was

00:13:12.390 --> 00:13:14.380
very simple to do.

00:13:14.380 --> 00:13:17.260
So, the next step is--

00:13:17.260 --> 00:13:19.680
the interesting thing about that
visualization is you can

00:13:19.680 --> 00:13:24.310
see where the ship was going
and what direction it was

00:13:24.310 --> 00:13:27.610
going in, but you don't get
really a sense of time.

00:13:27.610 --> 00:13:32.510
So another nice thing about
these symbols is you can

00:13:32.510 --> 00:13:33.760
actually animate them.

00:13:36.290 --> 00:13:37.880
Actually, I should mention
that both of these

00:13:37.880 --> 00:13:41.080
visualizations were done
previously by Mano Marks.

00:13:41.080 --> 00:13:44.660
Mano's been playing around with
this idea of plotting

00:13:44.660 --> 00:13:46.460
these symbols on polylines
for a while now.

00:13:46.460 --> 00:13:51.510
But you can see here, we have
a ship anchor, and actually

00:13:51.510 --> 00:13:55.000
that ship anchor is following
the polyline and

00:13:55.000 --> 00:13:56.100
animated over time.

00:13:56.100 --> 00:13:59.820
So we're just progressing
through time and

00:13:59.820 --> 00:14:01.180
plotting the polyline--

00:14:01.180 --> 00:14:02.370
or plotting the symbol--

00:14:02.370 --> 00:14:04.360
at a different offset.

00:14:04.360 --> 00:14:06.510
Very, very easy to do.

00:14:06.510 --> 00:14:08.060
Let's see what happens when
it gets around this

00:14:08.060 --> 00:14:08.760
little curve here.

00:14:08.760 --> 00:14:11.170
You can see actually the
direction of the polyline

00:14:11.170 --> 00:14:12.430
follows, or the direction
of the

00:14:12.430 --> 00:14:14.630
symbol follows the polyline.

00:14:14.630 --> 00:14:17.840
We go back to the code
for that one.

00:14:17.840 --> 00:14:21.020
That symbol's 1.

00:14:21.020 --> 00:14:24.010
So, the trick with this one is
very similar to the last one

00:14:24.010 --> 00:14:27.660
except that we've applied two
symbols, or two icons.

00:14:27.660 --> 00:14:30.530
So one is the arrow symbol,
which we saw before, and the

00:14:30.530 --> 00:14:32.110
other one is the ship symbol.

00:14:32.110 --> 00:14:35.250
The ship symbol, we control the
styling of that as well,

00:14:35.250 --> 00:14:37.370
and we have to apply
a path to it.

00:14:37.370 --> 00:14:39.925
So that path is an SVG path.

00:14:39.925 --> 00:14:41.910
I'll show you that the moment.

00:14:41.910 --> 00:14:45.220
We can control how we want that
symbol styled, how it's

00:14:45.220 --> 00:14:48.720
anchored on the polyline, et
cetera, what it's scale is.

00:14:48.720 --> 00:14:52.420
Again, we just apply that
polyline, or that symbol to

00:14:52.420 --> 00:14:54.740
the polyline and away we go.

00:14:54.740 --> 00:14:58.650
So what the animation does is
actually just incrementing

00:14:58.650 --> 00:15:04.190
account per animation frame and
then adjusting the offset

00:15:04.190 --> 00:15:06.580
incrementally.

00:15:06.580 --> 00:15:08.470
So as we count upwards,
it's just changing

00:15:08.470 --> 00:15:10.620
the percentage offset.

00:15:10.620 --> 00:15:12.210
Very simple to do.

00:15:12.210 --> 00:15:14.850
This one's a whole
83 lines of code.

00:15:14.850 --> 00:15:17.380
A little bit more complexity.

00:15:17.380 --> 00:15:19.980
I was going to say if we take
a look at the symbol path--

00:15:19.980 --> 00:15:22.220
I put it in a separate file.

00:15:22.220 --> 00:15:26.350
I'm not an expert on SVG path,
so I can't really say how

00:15:26.350 --> 00:15:30.940
these are constructed or how
to interpret this one, but

00:15:30.940 --> 00:15:33.040
this is how you actually
define these symbols.

00:15:33.040 --> 00:15:35.980
So I think Mano actually just
found one on the web and

00:15:35.980 --> 00:15:36.620
downloaded it.

00:15:36.620 --> 00:15:38.510
It's freely available.

00:15:38.510 --> 00:15:41.120
You could also potentially draw
these using [INAUDIBLE],

00:15:41.120 --> 00:15:43.000
Inkscape or Adobe Illustrator.

00:15:46.510 --> 00:15:48.460
So now, where'd our ship go?

00:15:48.460 --> 00:15:50.790
All the way down here in the--

00:15:50.790 --> 00:15:53.900
looks like it's getting closer
to the Indian Ocean.

00:15:53.900 --> 00:15:56.770
So this polyline, or this
symbol, will just kind of

00:15:56.770 --> 00:15:59.235
continue to follow this
polyline ad infinitum.

00:16:02.860 --> 00:16:03.660
Where do we go from there?

00:16:03.660 --> 00:16:07.920
So, another thing, in that case,
we're just showing a

00:16:07.920 --> 00:16:11.830
single polyline on the map, but
we have all these voyages.

00:16:11.830 --> 00:16:14.910
We have 25,000 voyages
or thereabouts.

00:16:14.910 --> 00:16:16.880
We can show all of them on
a map at the same time

00:16:16.880 --> 00:16:19.920
potentially using polylines.

00:16:19.920 --> 00:16:21.410
And that's what this next
visualization is.

00:16:21.410 --> 00:16:26.440
So, we go back to this kind of
minimalist type map where we

00:16:26.440 --> 00:16:31.700
just show the oceans and the
land masses and then the names

00:16:31.700 --> 00:16:34.590
of the countries
and the oceans.

00:16:34.590 --> 00:16:37.150
Again, I put the slider in here,
and what this slider

00:16:37.150 --> 00:16:40.860
does is I'm going voyage for
voyage, so they're sorted

00:16:40.860 --> 00:16:43.920
chronologically from
the departure date.

00:16:43.920 --> 00:16:45.800
I'm going voyage by voyage,
plotting them on

00:16:45.800 --> 00:16:47.820
the map as a polyline.

00:16:47.820 --> 00:16:50.230
On the right hand side here, I
just put a little key, because

00:16:50.230 --> 00:16:53.240
I'm going to color the polylines
by the country.

00:16:53.240 --> 00:16:54.410
So Germany is red.

00:16:54.410 --> 00:16:56.100
Denmark is green.

00:16:56.100 --> 00:16:59.020
France is yellow, et
cetera, et cetera.

00:16:59.020 --> 00:17:03.840
And the Netherlands is cyan,
which is an important point,

00:17:03.840 --> 00:17:05.510
because you'll see a lot
of them later in the

00:17:05.510 --> 00:17:06.839
visualization.

00:17:06.839 --> 00:17:10.380
So, let me zoom back in.

00:17:10.380 --> 00:17:13.500
So, grab the slider here, and
again like I said, I'm just

00:17:13.500 --> 00:17:16.470
going to plot these voyages
in one at a time.

00:17:16.470 --> 00:17:18.750
What you can see is
you can actually

00:17:18.750 --> 00:17:20.609
get a sense of density.

00:17:20.609 --> 00:17:24.694
You can also get a sense of what
countries are most active

00:17:24.694 --> 00:17:27.162
for a certain time period.

00:17:27.162 --> 00:17:29.940
And you can also get a sense
of where these ships are

00:17:29.940 --> 00:17:32.510
coming and going from since
these are polylines.

00:17:32.510 --> 00:17:38.490
So, over time, we can build a
pretty nice visualization of--

00:17:38.490 --> 00:17:39.460
let's get the slider back.

00:17:39.460 --> 00:17:40.750
There we go--

00:17:40.750 --> 00:17:44.310
pretty nice visualization
of the

00:17:44.310 --> 00:17:47.160
entire data set as polylines.

00:17:47.160 --> 00:17:48.570
Let's zoom back out one.

00:17:48.570 --> 00:17:51.400
So again, the nice thing about
these, since it's all built

00:17:51.400 --> 00:17:54.030
into the map API, these things,
these polylines, are

00:17:54.030 --> 00:17:57.064
actually scaled dynamically as
you zoom in and zoom out or as

00:17:57.064 --> 00:17:59.930
you move around the map.

00:17:59.930 --> 00:18:01.380
Now, there's quite
a few of these.

00:18:01.380 --> 00:18:05.220
Like I said, there's about
245,000 points.

00:18:05.220 --> 00:18:08.380
I think it's about
25,000 polylines.

00:18:08.380 --> 00:18:11.380
So a very dense data set, but
it ends up looking pretty

00:18:11.380 --> 00:18:12.990
nicely on a map here.

00:18:12.990 --> 00:18:15.450
A couple things I did with this,
I tweaked the opacity a

00:18:15.450 --> 00:18:17.890
little bit, so you can actually
see polylines that's

00:18:17.890 --> 00:18:19.860
behind other polylines.

00:18:19.860 --> 00:18:22.550
And that's a nice feature for
another way of showing

00:18:22.550 --> 00:18:27.030
density, because as these
polylines stack, the lines get

00:18:27.030 --> 00:18:28.470
more dense.

00:18:28.470 --> 00:18:32.770
And also, you can actually see
the other voyages behind them.

00:18:32.770 --> 00:18:36.130
Really, this visualization by
itself, even without the

00:18:36.130 --> 00:18:38.180
slider, is actually
pretty rich.

00:18:38.180 --> 00:18:42.420
You can see things like
the Dutch activity--

00:18:42.420 --> 00:18:44.900
actually Dutch activity pretty
much all over the world, but

00:18:44.900 --> 00:18:48.220
primarily in Jakarta
and Indonesia.

00:18:48.220 --> 00:18:52.330
A lot of activity over
in the Congo.

00:18:52.330 --> 00:18:58.430
I always pronounce this wrong,
but Suriname and Venezuela, so

00:18:58.430 --> 00:19:00.550
a lot of activity from
the Dutch up there.

00:19:00.550 --> 00:19:04.440
And a lot of-- so this purple
is actually Spain-- so a lot

00:19:04.440 --> 00:19:10.450
of activity obviously from Spain
in South America and

00:19:10.450 --> 00:19:12.160
South and Central America.

00:19:12.160 --> 00:19:15.200
And if we go back over to the
United States, the coast of

00:19:15.200 --> 00:19:17.730
the United States, we see a
lot of activity from the

00:19:17.730 --> 00:19:21.580
British and also from France.

00:19:21.580 --> 00:19:26.890
And when I first saw this, I saw
these lines from the Dutch

00:19:26.890 --> 00:19:28.740
coming in to the east coast of
the United States, and I was

00:19:28.740 --> 00:19:29.630
like, well that's kind
of interesting.

00:19:29.630 --> 00:19:31.070
What's going on there?

00:19:31.070 --> 00:19:34.470
And as we zoomed in, you can
pretty quickly see that

00:19:34.470 --> 00:19:37.310
they're landing in New York,
since it was at one point

00:19:37.310 --> 00:19:38.400
called New Amsterdam.

00:19:38.400 --> 00:19:42.590
So, yeah, very rich, I
think, data set here.

00:19:42.590 --> 00:19:44.690
You can see a lot
of information.

00:19:44.690 --> 00:19:47.850
I think it looks pretty stunning
in terms of using the

00:19:47.850 --> 00:19:48.740
different colors.

00:19:48.740 --> 00:19:51.780
I made the colors a little bit
pastel to make them stick out

00:19:51.780 --> 00:19:54.280
a little bit on the map.

00:19:54.280 --> 00:19:56.990
If we get over to the single
voyages, they don't stick out

00:19:56.990 --> 00:19:59.690
quite as well over here.

00:19:59.690 --> 00:20:02.060
Easy trick for that though would
be to adjust the opacity

00:20:02.060 --> 00:20:04.980
or the width of the polylines.

00:20:04.980 --> 00:20:10.660
We can take a quick look at the
code for this guy here.

00:20:10.660 --> 00:20:14.210
So it's going to be--

00:20:14.210 --> 00:20:15.460
symbol's 2.

00:20:17.930 --> 00:20:19.820
So I won't get into
the specifics.

00:20:19.820 --> 00:20:21.740
Actually, the hardest part
about this was actually

00:20:21.740 --> 00:20:23.646
getting the slider to work.

00:20:23.646 --> 00:20:26.140
Oh, and I actually made it work
in both directions, which

00:20:26.140 --> 00:20:30.150
was kind of fun, and I'll show
you that in a second.

00:20:30.150 --> 00:20:34.340
So really, trick here was
basically for each of these,

00:20:34.340 --> 00:20:37.900
I'm creating a polyline for
each of the voyages and

00:20:37.900 --> 00:20:39.860
assigning the specific color.

00:20:39.860 --> 00:20:41.830
And I'm starting out with
visibility faults.

00:20:41.830 --> 00:20:44.990
So, what I originally did is,
as I was actually adjusting

00:20:44.990 --> 00:20:47.770
the slider, I was creating these
polylines dynamically.

00:20:47.770 --> 00:20:50.420
That wasn't quite as performant
as creating all the

00:20:50.420 --> 00:20:52.960
polylines in advance and
actually adjusting the

00:20:52.960 --> 00:20:54.900
visibility as you
move the slider.

00:20:54.900 --> 00:20:57.220
So, all these polylines are
actually on the map

00:20:57.220 --> 00:20:59.400
simultaneously.

00:20:59.400 --> 00:21:02.500
It's just when I actually adjust
the slider is when they

00:21:02.500 --> 00:21:04.200
actually get displayed.

00:21:04.200 --> 00:21:08.730
And so again we have
these map controls.

00:21:08.730 --> 00:21:11.580
I think these are really
great for actually--

00:21:11.580 --> 00:21:15.120
a lot of samples, I see the
map's controls sitting in a

00:21:15.120 --> 00:21:18.110
space on the page
next to the map.

00:21:18.110 --> 00:21:19.300
There's no reason really
to do that.

00:21:19.300 --> 00:21:20.850
A lot of times, you can actually
put your controls

00:21:20.850 --> 00:21:22.720
right on top of the map.

00:21:22.720 --> 00:21:27.160
And I think this is the main
points of that one.

00:21:27.160 --> 00:21:31.320
Again, I'm proud of this one--
actually getting the slider to

00:21:31.320 --> 00:21:32.650
work in both directions.

00:21:32.650 --> 00:21:37.300
We can actually go back and
adjust the visibility as we go

00:21:37.300 --> 00:21:39.810
back in time as well.

00:21:39.810 --> 00:21:42.410
A variation of this one.

00:21:42.410 --> 00:21:44.810
So, I thought it was great,
because you can actually build

00:21:44.810 --> 00:21:46.870
this visualization over time.

00:21:46.870 --> 00:21:53.400
So you can add the polylines
dynamically over time, but I

00:21:53.400 --> 00:21:56.470
thought it would also be good
to see what was happening

00:21:56.470 --> 00:21:59.230
within a certain
range of time.

00:21:59.230 --> 00:22:03.390
There's not a really good HTML5
control for doing a

00:22:03.390 --> 00:22:06.620
slider with two points
or two handles.

00:22:06.620 --> 00:22:09.340
So what I did with this one is
just use a standard HTML

00:22:09.340 --> 00:22:15.340
slider, HTML5 slider, or a range
control and did a range

00:22:15.340 --> 00:22:20.940
of polylines from the center.

00:22:20.940 --> 00:22:24.550
So here, we're starting with
1750, and as I actually slide,

00:22:24.550 --> 00:22:27.780
I'm actually rendering it, I
think, about 100 polylines

00:22:27.780 --> 00:22:33.170
total on each side of where
the slider currently is.

00:22:33.170 --> 00:22:34.290
Zoom in to see that
a little bit.

00:22:34.290 --> 00:22:36.410
It's a nice lightning affect.

00:22:36.410 --> 00:22:40.160
Nice thing about this, too, is
you can see over time what

00:22:40.160 --> 00:22:41.200
activity is like.

00:22:41.200 --> 00:22:43.700
So if we start all the way at
the left hand side, we see a

00:22:43.700 --> 00:22:47.000
lot of activity from the
French in Canada.

00:22:47.000 --> 00:22:50.260
We see a little bit of a Dutch
activity, some continued

00:22:50.260 --> 00:22:52.230
French activity.

00:22:52.230 --> 00:22:54.820
But then at some point, we see
a lot of Spanish activity,

00:22:54.820 --> 00:22:58.120
then a lot of English activity,
and then a lot from

00:22:58.120 --> 00:23:03.630
the Dutch coming at the end of
the data set in the 1800s.

00:23:03.630 --> 00:23:06.730
So a nice visualization, I
think, as well, because you

00:23:06.730 --> 00:23:08.420
get the sense of what's
going on at a

00:23:08.420 --> 00:23:09.900
particular point in time.

00:23:09.900 --> 00:23:12.460
A variation of this would
be to show maybe all the

00:23:12.460 --> 00:23:15.950
polylines for a year, and as you
drag the slider, you just

00:23:15.950 --> 00:23:18.860
show one year of polylines.

00:23:18.860 --> 00:23:21.100
A lot of different things
you could do with this

00:23:21.100 --> 00:23:25.800
visualization, I think, just
with the polylines and this

00:23:25.800 --> 00:23:28.090
data set with polylines.

00:23:28.090 --> 00:23:29.640
Like I said, a really
rich data set.

00:23:29.640 --> 00:23:32.990
Since you have all these points
of the voyages, nice

00:23:32.990 --> 00:23:37.840
way to use them is to plot
them as polylines.

00:23:37.840 --> 00:23:40.830
So, let's move on.

00:23:40.830 --> 00:23:44.990
So, going back to this one.

00:23:44.990 --> 00:23:48.350
Again, another way we can
slice this data up with

00:23:48.350 --> 00:23:50.040
polylines is--

00:23:50.040 --> 00:23:53.670
so this is all the polylines
again if the slider was all

00:23:53.670 --> 00:23:57.590
the way to the right with the
visualization, couple

00:23:57.590 --> 00:24:00.010
visualizations ago.

00:24:00.010 --> 00:24:03.590
But the thing I wanted to add
to this one was events on

00:24:03.590 --> 00:24:06.860
polylines, because polylines
can actually--

00:24:06.860 --> 00:24:09.320
using the Maps API,
you can actually

00:24:09.320 --> 00:24:11.470
register events on polylines.

00:24:11.470 --> 00:24:15.250
So here, what I've done is, as
I mouse over what I'm doing,

00:24:15.250 --> 00:24:18.130
is I'm catching the
mouseover event.

00:24:18.130 --> 00:24:19.960
And then I'm actually
adjusting how

00:24:19.960 --> 00:24:22.240
the polyline is rendered.

00:24:22.240 --> 00:24:24.710
It gets a little dense in the
Atlantic here, but if I go

00:24:24.710 --> 00:24:25.880
over to the Pacific--

00:24:25.880 --> 00:24:28.655
so some of these polylines I
couldn't see very well before.

00:24:28.655 --> 00:24:31.090
As I mouse over them, you
can see the entire

00:24:31.090 --> 00:24:32.245
voyage lights up.

00:24:32.245 --> 00:24:36.790
I changed the width, the width
opacity, z-index, and

00:24:36.790 --> 00:24:38.540
basically bringing it all the
way to the front so you can

00:24:38.540 --> 00:24:40.460
see the entire voyage.

00:24:40.460 --> 00:24:43.010
The other thing I did is I put
a click event on here.

00:24:43.010 --> 00:24:45.010
So if I click on it, I get
kind of an old school

00:24:45.010 --> 00:24:45.920
JavaScript alert.

00:24:45.920 --> 00:24:48.970
It shows me the index of the
voyage, the country, how many

00:24:48.970 --> 00:24:54.300
points on the polyline, and the
beginning and end of the

00:24:54.300 --> 00:24:56.400
voyage, the dates.

00:24:56.400 --> 00:24:57.670
Code for this guy--

00:24:57.670 --> 00:24:59.910
so the only real differences
on that--

00:24:59.910 --> 00:25:01.192
let's see, you go back.

00:25:01.192 --> 00:25:02.940
I forget what visualization
I'm on.

00:25:02.940 --> 00:25:05.010
Number four already.

00:25:05.010 --> 00:25:05.830
Almost done.

00:25:05.830 --> 00:25:10.065
So, if you take a look, the
interesting points about this

00:25:10.065 --> 00:25:11.210
is these events.

00:25:11.210 --> 00:25:15.810
So I'm creating the polylines,
setting the defaults for the

00:25:15.810 --> 00:25:19.310
weight opacity and the color
and the z-index of 1.

00:25:19.310 --> 00:25:21.550
Setting everything to a
z-index of 1 kind of

00:25:21.550 --> 00:25:25.440
randomizes how they're
displayed.

00:25:25.440 --> 00:25:28.150
I tweaked this at one point, and
I actually set the z-index

00:25:28.150 --> 00:25:31.500
to the index of the polyline,
where the

00:25:31.500 --> 00:25:33.080
polyline is in the array.

00:25:33.080 --> 00:25:37.110
And basically all the most
recent polylines, or the

00:25:37.110 --> 00:25:38.550
polylines that were--

00:25:38.550 --> 00:25:40.580
the voyagers which
were later--

00:25:40.580 --> 00:25:41.980
were actually just stacked
up on top.

00:25:41.980 --> 00:25:44.450
So, you basically saw the
Dutch pretty much

00:25:44.450 --> 00:25:46.510
all over the place.

00:25:46.510 --> 00:25:47.870
And then all the other
polylines.

00:25:47.870 --> 00:25:51.840
But by setting everybody to
the same z-index, they're

00:25:51.840 --> 00:25:54.170
rendered a little
more randomly.

00:25:54.170 --> 00:25:56.900
This is actually for
the ClickListener.

00:25:56.900 --> 00:25:59.420
So you can see here, I'm just
using the Google Maps events

00:25:59.420 --> 00:26:04.450
AdListener, adding a
ClickListener on the line, and

00:26:04.450 --> 00:26:07.460
going through creating
an alert window.

00:26:07.460 --> 00:26:10.500
And here, I'm actually the
mouseover and mouseout, and

00:26:10.500 --> 00:26:14.020
all I'm doing is just setting
the options, stroke weight,

00:26:14.020 --> 00:26:17.640
opacity and z-index to 999, so
it [? sticks ?] up on front.

00:26:17.640 --> 00:26:19.370
And then as the mouseout,
I actually

00:26:19.370 --> 00:26:20.930
revert everything back.

00:26:20.930 --> 00:26:24.680
So just about 20 lines of
code to add this nice

00:26:24.680 --> 00:26:27.560
interactiveness to the
visualization.

00:26:27.560 --> 00:26:30.460
I put this actually in a
separate method just to take

00:26:30.460 --> 00:26:33.250
advantage of the closure
on the line.

00:26:33.250 --> 00:26:36.320
So this reference to line here
is actually the reference to

00:26:36.320 --> 00:26:38.420
the line within this
event listener.

00:26:38.420 --> 00:26:41.420
If this code was elsewhere,
things wouldn't

00:26:41.420 --> 00:26:44.180
work quite as well.

00:26:44.180 --> 00:26:46.150
So, yeah, definitely when you're
doing this and you want

00:26:46.150 --> 00:26:49.050
to add the event listener, it's
kind of convenient to put

00:26:49.050 --> 00:26:53.440
these in a separate method, so
the reference to the line is

00:26:53.440 --> 00:26:55.990
consistent.

00:26:55.990 --> 00:27:01.720
And so anyway, last
visualization before we move

00:27:01.720 --> 00:27:05.160
on is Symbols and Markers.

00:27:05.160 --> 00:27:07.210
So, those symbols that we're
talking about on the

00:27:07.210 --> 00:27:07.850
polylines--

00:27:07.850 --> 00:27:09.580
so these SVG paths--

00:27:09.580 --> 00:27:13.270
they work great on polylines,
but you can also use them as

00:27:13.270 --> 00:27:14.510
markers as well.

00:27:14.510 --> 00:27:16.090
I use them in the
exact same way.

00:27:16.090 --> 00:27:18.020
Basically, when you set up your
marker, you specify the

00:27:18.020 --> 00:27:22.460
icon, and that icon you can
control how it's rendered or

00:27:22.460 --> 00:27:23.240
what the path is.

00:27:23.240 --> 00:27:28.620
So you can use your own custom
markers, SVG markers.

00:27:28.620 --> 00:27:30.100
And again, the nice
thing about these

00:27:30.100 --> 00:27:32.170
SVGs is they're scalable.

00:27:32.170 --> 00:27:35.760
You can really dynamically
adjust how they're rendered or

00:27:35.760 --> 00:27:37.140
how they look.

00:27:37.140 --> 00:27:41.110
So what I did with this one,
this visualization here, is I

00:27:41.110 --> 00:27:45.140
took the data set, and
I ordered everything.

00:27:45.140 --> 00:27:48.730
So for each voyage, I took the
departure and the arrival, so

00:27:48.730 --> 00:27:54.330
the first and the last data
point of the voyage.

00:27:54.330 --> 00:27:59.920
And I put those into an array,
sorted that array, and

00:27:59.920 --> 00:28:04.840
basically, as I move the slider
across, capturing

00:28:04.840 --> 00:28:08.250
events for a departure of a ship
or an arrival of a ship.

00:28:08.250 --> 00:28:11.360
And what that allows me to do is
build a visualization where

00:28:11.360 --> 00:28:15.690
we can see what is the relative
number of ships in

00:28:15.690 --> 00:28:18.750
voyage for each of
these countries.

00:28:18.750 --> 00:28:21.720
A little easier to show
than to explain.

00:28:21.720 --> 00:28:25.490
So as you can see, as I'm
sliding the slider or sliding

00:28:25.490 --> 00:28:26.860
the range to the right--

00:28:26.860 --> 00:28:28.310
I go to 1751--

00:28:28.310 --> 00:28:31.120
and these bubbles, or these
markers, on each of these

00:28:31.120 --> 00:28:33.980
countries is growing and
shrinking over time.

00:28:33.980 --> 00:28:35.885
It grows as a voyage leaves
for that country.

00:28:35.885 --> 00:28:38.630
It shrinks as a voyage
returns or a voyage

00:28:38.630 --> 00:28:39.680
completes for that country.

00:28:39.680 --> 00:28:42.570
So this is showing the relative
number of ships at

00:28:42.570 --> 00:28:45.770
sea for each of these
countries.

00:28:45.770 --> 00:28:48.210
As we go over time, interesting
thing about this

00:28:48.210 --> 00:28:51.530
visualization, you can see again
what we saw with some of

00:28:51.530 --> 00:28:55.160
the other visualizations
how active the UK was.

00:28:55.160 --> 00:28:57.940
We see how active Spain
becomes at some point.

00:28:57.940 --> 00:29:01.500
French activity during the
late 1700s was relatively

00:29:01.500 --> 00:29:07.660
consistent until Spain really
took off at this point.

00:29:07.660 --> 00:29:10.080
And as we keep going,
we'll see at some

00:29:10.080 --> 00:29:14.360
point how the Dutch--

00:29:14.360 --> 00:29:15.040
oh, there we go.

00:29:15.040 --> 00:29:17.430
There's another both bubble
coming from the UK, and then

00:29:17.430 --> 00:29:20.640
how the Dutch took over the
world in terms of trade in the

00:29:20.640 --> 00:29:24.420
late 1800s or mid
to late 1800s.

00:29:24.420 --> 00:29:26.530
So pretty straightforward
code.

00:29:26.530 --> 00:29:28.450
I actually made this
one work backwards.

00:29:28.450 --> 00:29:31.890
The hardest part with this one
was actually getting the data

00:29:31.890 --> 00:29:35.280
in a way that I could actually
use to create these bubbles,

00:29:35.280 --> 00:29:37.220
or these markers.

00:29:37.220 --> 00:29:39.435
So if we go back, take a
quick peak at the code.

00:29:42.110 --> 00:29:43.940
So here, I set up--

00:29:43.940 --> 00:29:49.335
these are the lat/longs for
each of the markers.

00:29:49.335 --> 00:29:52.340
So I'm using these for creating
the markers, creating

00:29:52.340 --> 00:29:55.760
my map, same stuff as before.

00:29:55.760 --> 00:29:57.590
So here, I'm actually
setting up the data.

00:29:57.590 --> 00:30:00.590
So I'm creating the
array of events.

00:30:00.590 --> 00:30:03.635
I used plus 1 for when a ship
is leaving and a minus 1 for

00:30:03.635 --> 00:30:05.830
when a ship returns.

00:30:05.830 --> 00:30:08.260
And that's really convenient,
because I can just add and

00:30:08.260 --> 00:30:10.420
subtract as I [? accounted ?]

00:30:10.420 --> 00:30:12.590
these events in the array.

00:30:12.590 --> 00:30:15.870
And basically here, just
creating these markers.

00:30:15.870 --> 00:30:17.830
I created a separate class
called Marker Symbol.

00:30:17.830 --> 00:30:20.820
This just lets me capture all
these default settings in a

00:30:20.820 --> 00:30:23.290
separate JavaScript object.

00:30:23.290 --> 00:30:27.630
I could easily just have
in-lined this code up here

00:30:27.630 --> 00:30:30.380
when I'm creating the marker,
but little more convenient to

00:30:30.380 --> 00:30:31.790
put it down here.

00:30:31.790 --> 00:30:34.570
And this is the code that gets
a little bit hairy, where I'm

00:30:34.570 --> 00:30:41.790
actually sliding from left to
right picking the delta of how

00:30:41.790 --> 00:30:46.190
many ships I want to add or
remove from each country.

00:30:46.190 --> 00:30:49.090
So that's pretty much it for
these visualizations.

00:30:49.090 --> 00:30:51.350
We're going to continue to
play around with these.

00:30:51.350 --> 00:30:53.060
We think they're a lot of fun.

00:30:53.060 --> 00:30:55.120
I know Brendan's actually
looking at different ways you

00:30:55.120 --> 00:30:58.870
can use the canvas layer which
uses OpenGL, or I'm sorry,

00:30:58.870 --> 00:31:02.990
WebGL for rendering mass
amounts of data.

00:31:02.990 --> 00:31:10.840
So we think that these 245,000
points or 25,000 or so voyages

00:31:10.840 --> 00:31:14.900
is probably about the max you
can display all at once on a

00:31:14.900 --> 00:31:17.860
map using some of the
default libraries.

00:31:17.860 --> 00:31:19.890
So you could probably
tweak that.

00:31:19.890 --> 00:31:22.460
And I don't think you always
necessarily want to do that.

00:31:22.460 --> 00:31:24.710
So, you get to the point where
there's just too much

00:31:24.710 --> 00:31:27.960
information on a visualization
that you can--

00:31:27.960 --> 00:31:28.680
makes it a little hard.

00:31:28.680 --> 00:31:31.650
And then there's a lot of tricks
you can use with the

00:31:31.650 --> 00:31:34.670
mouseover effects on the
polylines that kind of sort

00:31:34.670 --> 00:31:35.170
things out.

00:31:35.170 --> 00:31:38.790
But if you do really want to go
beyond that and potentially

00:31:38.790 --> 00:31:42.860
render some really custom
visualizations, the canvas

00:31:42.860 --> 00:31:45.740
layer using WebGL would
be the way to go.

00:31:45.740 --> 00:31:47.580
Hopefully we can get Brendan
back in another week or two to

00:31:47.580 --> 00:31:49.140
show off some more stuff.

00:31:49.140 --> 00:31:51.760
But he's been working hard on
the wind data, because the

00:31:51.760 --> 00:31:54.820
wind data is a whole other
aspect of this data set, which

00:31:54.820 --> 00:31:57.410
is actually really
interesting.

00:31:57.410 --> 00:31:58.280
Some other stuff--

00:31:58.280 --> 00:32:01.020
we probably continue to play
around on these polylines,

00:32:01.020 --> 00:32:02.730
with these animations.

00:32:02.730 --> 00:32:05.780
Really cool thing with these
animations are animating the

00:32:05.780 --> 00:32:09.360
symbols on polylines, as you can
potentially plot a number

00:32:09.360 --> 00:32:13.640
of ships actually leaving, or
animate a number of ships at

00:32:13.640 --> 00:32:14.820
any one time.

00:32:14.820 --> 00:32:16.150
If you've been to the "More
Than A Map" site--

00:32:16.150 --> 00:32:18.190
I hope you've been there,
because there's a lot of great

00:32:18.190 --> 00:32:20.150
inspiration there.

00:32:20.150 --> 00:32:22.600
They're visualization for
flights actually shows a

00:32:22.600 --> 00:32:24.920
number of different planes
actually en route.

00:32:24.920 --> 00:32:27.480
They're using the exact same
technique as we did with the

00:32:27.480 --> 00:32:28.990
animated ship.

00:32:28.990 --> 00:32:33.660
So, if you haven't checked
it out, morethanamap.com.

00:32:33.660 --> 00:32:34.570
Check out the demos.

00:32:34.570 --> 00:32:36.730
And it's a data visualization
demo.

00:32:36.730 --> 00:32:39.650
Shows a number of points on
there, or a number of symbols

00:32:39.650 --> 00:32:41.800
animated at one time.

00:32:41.800 --> 00:32:43.290
So that's pretty much it.

00:32:43.290 --> 00:32:45.420
A couple of quick
announcements.

00:32:45.420 --> 00:32:48.170
So in next couple of weeks,
we're going to be down in--

00:32:48.170 --> 00:32:50.430
the Maps Developer Relations
team, or some of us, will be

00:32:50.430 --> 00:32:51.760
down in Sydney.

00:32:51.760 --> 00:32:58.130
And we're hoping to do next week
a Places API event, GDL

00:32:58.130 --> 00:33:00.950
event, where we show off some
new APIs that are coming out

00:33:00.950 --> 00:33:02.930
with the Places API.

00:33:02.930 --> 00:33:05.090
So if you're really interested
in location data,

00:33:05.090 --> 00:33:06.550
definitely a good one.

00:33:06.550 --> 00:33:09.510
I've been working on a
visualization that actually

00:33:09.510 --> 00:33:10.880
uses this data, the
Place data.

00:33:10.880 --> 00:33:14.560
So, even if you're interested
in visualizations but not

00:33:14.560 --> 00:33:17.270
local data, you might want
to check it out anyway.

00:33:17.270 --> 00:33:20.690
And a couple of weeks out, we're
looking to potentially

00:33:20.690 --> 00:33:23.970
do something with the
Photo Sphere.

00:33:23.970 --> 00:33:27.770
Because the Photo Sphere app
that was launched with the

00:33:27.770 --> 00:33:31.710
Jellybean update recently, it
actually allows you to take

00:33:31.710 --> 00:33:33.940
360 degree panoramic photos.

00:33:33.940 --> 00:33:37.400
Those photos are really
convenient to use for the

00:33:37.400 --> 00:33:41.730
Street View API, so you can
take a 360 degree panorama

00:33:41.730 --> 00:33:45.310
using just the fairly simple
amount code actually rendered

00:33:45.310 --> 00:33:51.240
in a website using the Street
View library API.

00:33:51.240 --> 00:33:52.400
So that's pretty much it.

00:33:52.400 --> 00:33:55.080
So if you have any ideas, if
you want to see something a

00:33:55.080 --> 00:33:57.570
little more detail on any of
these visualizations, or you

00:33:57.570 --> 00:33:59.870
have any comments or questions,
post them on the

00:33:59.870 --> 00:34:02.550
YouTube channel, and we'll
take a look at them.

00:34:02.550 --> 00:34:05.770
And if you have any ideas for
future things you'd like to

00:34:05.770 --> 00:34:08.420
see, also let us know, because
we're always looking for ideas

00:34:08.420 --> 00:34:10.030
to pass on.

00:34:10.030 --> 00:34:14.100
So, thanks for tuning in, and I
hope to catch you in another

00:34:14.100 --> 00:34:15.350
week or so.

00:34:22.480 --> 00:35:27.767
[MUSIC PLAYING]

