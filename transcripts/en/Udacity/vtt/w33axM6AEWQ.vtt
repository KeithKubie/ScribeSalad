WEBVTT
Kind: captions
Language: en

00:00:00.480 --> 00:00:03.890
So first off, what might
the signature of this look like?

00:00:03.890 --> 00:00:07.610
&gt;&gt; So I think we're still working
with this check out method, but

00:00:07.610 --> 00:00:11.010
now we're specifying a post
condition of the method.

00:00:11.010 --> 00:00:14.350
So the signature is still patron,
checkout,

00:00:14.350 --> 00:00:18.220
a loanable item as as an argument and
the implied argument of patron, but

00:00:18.220 --> 00:00:20.820
the the post condition is
what we're worried about.

00:00:20.820 --> 00:00:23.850
&gt;&gt; Okay, so
that raises an interesting point.

00:00:23.850 --> 00:00:27.550
So we just had an example where we were

00:00:27.550 --> 00:00:31.830
expressing some of the properties
of the check out process.

00:00:31.830 --> 00:00:34.010
This case, having to do with kids.

00:00:34.010 --> 00:00:35.050
&gt;&gt; Okay.

00:00:35.050 --> 00:00:39.970
&gt;&gt; In fact, you could have any number of
constraints about a particular class or

00:00:39.970 --> 00:00:41.750
a particular operation.

00:00:41.750 --> 00:00:46.730
What they mean is its as if you
were 'anding' all those together.

00:00:47.890 --> 00:00:51.950
So, this must be true, and this must
be true, and this must be true.

00:00:51.950 --> 00:00:54.670
Well, the thing about
the kids must be true, but

00:00:54.670 --> 00:00:56.830
it's only going to be true about kids.

00:00:56.830 --> 00:00:57.430
&gt;&gt; Okay.

00:00:57.430 --> 00:01:00.000
&gt;&gt; So it makes sense that you can,

00:01:02.260 --> 00:01:05.730
what the designers of OCL have done is
they've simplified the syntax by saying

00:01:05.730 --> 00:01:08.930
you don't have to do all those ands
if we just have the constraints

00:01:08.930 --> 00:01:12.030
listed there we can focus on
the ones that we want to focus on.

00:01:12.030 --> 00:01:15.280
So, yes, in this case the signature
is going to be exactly the same as

00:01:15.280 --> 00:01:16.170
what it was before.

00:01:17.890 --> 00:01:20.240
&gt;&gt; So how would we express, or

00:01:20.240 --> 00:01:22.620
could we express multiple
pre-and-post-conditions?

00:01:22.620 --> 00:01:28.020
Is there an operation to string
some together or would we need to

00:01:28.020 --> 00:01:34.080
make multiple constraint statements for
the same method.

00:01:34.080 --> 00:01:36.260
&gt;&gt; So you can roll your own.

00:01:36.260 --> 00:01:39.120
So let's say we had
three pre-conditions.

00:01:39.120 --> 00:01:44.212
Okay, you could have them all in
the same constraint with 'ands'

00:01:44.212 --> 00:01:50.360
between them, or you could have three
constraints, each with one precondition.

00:01:50.360 --> 00:01:51.930
&gt;&gt; Okay.
&gt;&gt; Getting the same thing out of it;

00:01:51.930 --> 00:01:54.620
the same thing on the post
condition side of things.

00:01:54.620 --> 00:01:58.590
Likewise, an invariant is
something that must hold true.

00:01:58.590 --> 00:01:59.720
If you have five invariants,

00:01:59.720 --> 00:02:02.340
they all must hold true as if
you have 'ands' between them.

00:02:04.390 --> 00:02:05.030
&gt;&gt; Okay.

00:02:05.030 --> 00:02:10.758
&gt;&gt; Okay, so that was the context in the
signature for checked out in this case.

