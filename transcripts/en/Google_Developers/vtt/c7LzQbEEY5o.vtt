WEBVTT
Kind: captions
Language: en

00:00:00.634 --> 00:00:01.534
Bowers: Thanks, Kevin.

00:00:01.534 --> 00:00:04.501
[applause]

00:00:05.934 --> 00:00:07.634
So I'm gonna walk you
through a quick tour

00:00:07.634 --> 00:00:09.367
of what it's like
to develop an app

00:00:09.367 --> 00:00:11.801
on the App Engine SDK for Java.

00:00:11.801 --> 00:00:14.234
And in the spirit of our
birthday and our demo last year,

00:00:14.234 --> 00:00:15.634
I'm gonna do that in the context

00:00:15.634 --> 00:00:17.968
of a very simple
guestbook application.

00:00:17.968 --> 00:00:20.601
So, this application, uh,
if you were here last year,

00:00:20.601 --> 00:00:24.234
you remember we simply
enter in a post.

00:00:24.234 --> 00:00:27.767
We'll, uh, just say,
"Hello Campfire One."

00:00:27.767 --> 00:00:28.968
And this is going to--

00:00:28.968 --> 00:00:30.567
uh, it's a simple HTML form.

00:00:30.567 --> 00:00:32.300
It's going to post
to a servlet.

00:00:32.300 --> 00:00:34.534
Save that to the data store,
redirect back,

00:00:34.534 --> 00:00:36.801
and then list out the entries
in the data store.

00:00:36.801 --> 00:00:37.968
So, I'm gonna walk you through

00:00:37.968 --> 00:00:40.901
what it's like
to develop that app.

00:00:40.901 --> 00:00:42.834
So, first I'm gonna
go over to Eclipse.

00:00:42.834 --> 00:00:44.567
Now, this is a popular
open-source ID

00:00:44.567 --> 00:00:45.701
with Java developers,

00:00:45.701 --> 00:00:47.734
so it probably looks
familiar to many of you.

00:00:47.734 --> 00:00:49.467
I've got the standard
Java perspective here,

00:00:49.467 --> 00:00:51.667
but you'll notice
the icons in the top left.

00:00:51.667 --> 00:00:54.834
As Kevin mentioned, we provided
support for Google Web Toolkit

00:00:54.834 --> 00:00:56.701
and for App Engine,
so it's gonna make tasks

00:00:56.701 --> 00:00:59.300
like project creation
and deployment to App Engine

00:00:59.300 --> 00:01:00.534
a lot easier.

00:01:00.534 --> 00:01:02.200
Now I'm going to
create a new project

00:01:02.200 --> 00:01:04.667
by clicking
on the blue icon, top-left.

00:01:04.667 --> 00:01:06.767
That brings up
the new project wizard,

00:01:06.767 --> 00:01:10.934
and I'm gonna enter
in a project name and a package.

00:01:14.968 --> 00:01:16.200
So, I'm gonna
call it "Guestbook,"

00:01:16.200 --> 00:01:18.534
and I'll enter the same package.

00:01:18.534 --> 00:01:20.767
Now, I could use Google
Web Toolkit or App Engine,

00:01:20.767 --> 00:01:23.267
and this is going to configure
my starter project.

00:01:23.267 --> 00:01:25.734
I'm not gonna use any Ajax
for this very simple demo,

00:01:25.734 --> 00:01:28.901
so I'm just gonna uncheck that,
and I'll click "Finish."

00:01:28.901 --> 00:01:31.000
This has now created
the starter project.

00:01:31.000 --> 00:01:34.567
And it's a standard
J2EE servlet project.

00:01:34.567 --> 00:01:36.033
This project right now,
I could take,

00:01:36.033 --> 00:01:39.000
I could go run it
on another servlet container.

00:01:39.000 --> 00:01:40.634
If we look inside,
you'll see a source directory,

00:01:40.634 --> 00:01:41.634
as you'd expect.

00:01:41.634 --> 00:01:43.534
That's where our Java files go.

00:01:43.534 --> 00:01:47.467
Our App Engine SDK
and the JRE onto my machine.

00:01:47.467 --> 00:01:50.200
And then a web archive
or WAR directory.

00:01:50.200 --> 00:01:53.367
So App Engine uses the standard
Java web archive layout

00:01:53.367 --> 00:01:54.767
as its deployment directory.

00:01:54.767 --> 00:01:57.367
You're gonna put all your
JSPs, your static files,

00:01:57.367 --> 00:01:59.067
your class files
into this directory,

00:01:59.067 --> 00:02:03.167
and that's what's going to get
deployed up to App Engine.

00:02:03.167 --> 00:02:05.934
Now, if you look inside this
servlet that's created for me,

00:02:05.934 --> 00:02:08.634
you'll a see very simple,
standard servlet,

00:02:08.634 --> 00:02:12.267
takes an http request
and prints out "Hello, world."

00:02:12.267 --> 00:02:14.400
So now I've got the--
the project here,

00:02:14.400 --> 00:02:15.734
and I wanna get started.

00:02:15.734 --> 00:02:17.934
Well, if you've ever had
a great idea for a project

00:02:17.934 --> 00:02:20.667
and you wanted to go ahead
and start developing something,

00:02:20.667 --> 00:02:23.634
and then you spend a day
trying to set up a local server,

00:02:23.634 --> 00:02:26.667
you're probably going to be
happy with App Engine SDK.

00:02:26.667 --> 00:02:28.801
App Engine ships
with a local development server

00:02:28.801 --> 00:02:31.267
with the SDK,
so you simply download it,

00:02:31.267 --> 00:02:32.968
and you can
get started right away.

00:02:32.968 --> 00:02:35.868
So, what I do is right-click
on my project.

00:02:35.868 --> 00:02:37.767
I'll go to "Debug As"...

00:02:37.767 --> 00:02:39.901
"Web Application."

00:02:39.901 --> 00:02:42.033
This is going to
start up the local server.

00:02:42.033 --> 00:02:44.000
It mimics
the production environment.

00:02:44.000 --> 00:02:45.300
So any restrictions we have

00:02:45.300 --> 00:02:47.434
on Java classes
in the production environment

00:02:47.434 --> 00:02:50.868
are also going to be
reflected in the local server.

00:02:50.868 --> 00:02:53.534
So, now I'm started
on local host 80 80,

00:02:53.534 --> 00:02:59.534
so if I go over,
and let's open up a new tab.

00:02:59.534 --> 00:03:02.534
And I'll go to that servlet url.

00:03:02.534 --> 00:03:05.701
And I get "Hello, world."
As we'd expect.

00:03:05.701 --> 00:03:08.334
So, now I can go
and I can start iterating here,

00:03:08.334 --> 00:03:10.267
and continue with the theme.

00:03:10.267 --> 00:03:12.467
I could say, "Campfire One."

00:03:12.467 --> 00:03:14.901
Save my changes,

00:03:14.901 --> 00:03:18.200
and I'll see
my changes reflected.

00:03:18.200 --> 00:03:19.734
So, I've got the basis
for the project,

00:03:19.734 --> 00:03:20.934
the foundation there,

00:03:20.934 --> 00:03:22.734
and I wanna start
layering on this,

00:03:22.734 --> 00:03:24.701
uh, this guestbook application.

00:03:24.701 --> 00:03:27.534
Lemme take a--take you through
what the architecture, uh--

00:03:27.534 --> 00:03:32.300
if you can call three files
an "architecture"--looks like.

00:03:32.300 --> 00:03:34.367
So, if we can bring up
the architecture.

00:03:34.367 --> 00:03:35.367
So, I have a--

00:03:35.367 --> 00:03:36.634
[laughter]

00:03:36.634 --> 00:03:38.267
A, uh, uh--
this is very complicated.

00:03:38.267 --> 00:03:39.734
If you get lost
just let me know.

00:03:39.734 --> 00:03:41.901
I have, uh, guestbook jsp.

00:03:41.901 --> 00:03:43.901
That's going to
post to a servlet.

00:03:43.901 --> 00:03:46.801
That servlet creates
this Entry.java object.

00:03:46.801 --> 00:03:48.801
It's gonna save that
to our datastore,

00:03:48.801 --> 00:03:50.734
redirect back to our jsp.

00:03:50.734 --> 00:03:52.767
The jsp is then going to
query the datastore

00:03:52.767 --> 00:03:56.334
for the list of entries we have
and display that on the page.

00:03:56.334 --> 00:03:58.567
Now, in order
not to bore you and save time,

00:03:58.567 --> 00:04:01.934
I've written a lot of
the post logic and the jsp logic

00:04:01.934 --> 00:04:03.033
and I'm gonna
drag those into the--

00:04:03.033 --> 00:04:08.133
into the project now.

00:04:08.133 --> 00:04:11.834
Uh, gotta find my mouse, here.

00:04:11.834 --> 00:04:14.601
So, lemme do that.

00:04:14.601 --> 00:04:20.000
Just go ahead and turn that off.

00:04:20.000 --> 00:04:25.634
So I'm gonna drag the Java files
into my source directory.

00:04:25.634 --> 00:04:30.334
And we'll overwrite
the existing servlet.

00:04:30.334 --> 00:04:34.367
I'll drag the guestbook jsp...

00:04:34.367 --> 00:04:37.400
into my web archive directory.

00:04:37.400 --> 00:04:40.300
And now, as Kevin mentioned,
we're using standards, uh--

00:04:40.300 --> 00:04:43.067
standard web XML
as a configuration file.

00:04:43.067 --> 00:04:45.667
And, um, since I just
drug in this guestbook jsp

00:04:45.667 --> 00:04:47.801
I don't want people
to have to remember that jsp,

00:04:47.801 --> 00:04:50.000
so I'm gonna go
into the web XML.

00:04:50.000 --> 00:04:55.100
You notice it's
in that web inf directory.

00:04:55.100 --> 00:05:00.133
And I'll just change the welcome
file to be guestbook.

00:05:00.133 --> 00:05:02.567
Save that there.

00:05:02.567 --> 00:05:07.734
And so now, let's go ahead
and try to run this locally.

00:05:07.734 --> 00:05:12.434
Make sure that I did bring in
all the files I meant to.

00:05:12.434 --> 00:05:15.367
So I should just be able
to go to that url.

00:05:15.367 --> 00:05:17.434
And so now I've got
the jsp there.

00:05:17.434 --> 00:05:20.601
So the next thing I wanna do is
actually saved to the datastore.

00:05:20.601 --> 00:05:24.067
As Kevin mentioned, App Engine
is built on top of Big Table,

00:05:24.067 --> 00:05:27.100
which is distributed storage
platform that's scalable.

00:05:27.100 --> 00:05:29.133
It's the--it's what we use
here at Google.

00:05:29.133 --> 00:05:32.634
Um, in addition to the low-level
APIs that talk to Big Table,

00:05:32.634 --> 00:05:35.000
we've also implemented
standard space APIs

00:05:35.000 --> 00:05:39.067
in the form of Java data objects
and Java persistence API.

00:05:39.067 --> 00:05:41.667
So JDO and JPA,
if you've ever used them before,

00:05:41.667 --> 00:05:45.133
allow you to persist standard
Java objects to a datastore.

00:05:45.133 --> 00:05:46.434
And they're datastore agnostic,

00:05:46.434 --> 00:05:48.868
so that means they work
with Sequel databases,

00:05:48.868 --> 00:05:50.934
they work
with file systems, XML,

00:05:50.934 --> 00:05:53.567
or in our case,
the App Engine datastore.

00:05:53.567 --> 00:05:55.033
And what that means is that

00:05:55.033 --> 00:05:56.667
I could take code
that I've written

00:05:56.667 --> 00:06:00.968
in, uh--for JDO or JPA, and I
could run it on another system,

00:06:00.968 --> 00:06:03.767
say, a system that uses
Sequel as a back-in.

00:06:03.767 --> 00:06:06.000
Now, in this case,
I'm going to use JDO,

00:06:06.000 --> 00:06:09.167
and I wanna persist
the entry Java class

00:06:09.167 --> 00:06:12.234
to my datastore.

00:06:12.234 --> 00:06:14.267
So, if I look inside this class,
you'll see that I have

00:06:14.267 --> 00:06:17.467
some fields that store content
and who's posting.

00:06:17.467 --> 00:06:20.067
Just a very simple constructor

00:06:20.067 --> 00:06:22.000
and then some
getters and setters.

00:06:22.000 --> 00:06:23.868
In order to store this,
what I need to do

00:06:23.868 --> 00:06:25.667
is annotate it
with JDO annotation.

00:06:25.667 --> 00:06:28.033
So I'll do that.

00:06:28.033 --> 00:06:29.767
First thing I wanna do
is add an annotation

00:06:29.767 --> 00:06:31.000
that tells the datastore

00:06:31.000 --> 00:06:36.667
that this class
can actually be persisted.

00:06:36.667 --> 00:06:41.534
And then I wanna specify
its application level.

00:06:45.701 --> 00:06:47.033
Next thing I'm gonna do

00:06:47.033 --> 00:06:52.968
is specify which fields
I wanna store.

00:06:52.968 --> 00:06:57.701
And I'll do that
for all the fields.

00:06:57.701 --> 00:07:00.868
And then lastly, every object
in JDO needs a primary key,

00:07:00.868 --> 00:07:02.300
so I wanna set that.

00:07:02.300 --> 00:07:06.334
I'll set it on the I.D. up here.

00:07:06.334 --> 00:07:08.334
And then I want the datastore

00:07:08.334 --> 00:07:11.300
to generate that I.D. for me
as well.

00:07:15.734 --> 00:07:17.567
So, now I have
all the annotations I need

00:07:17.567 --> 00:07:20.434
to store this object
to the datastore.

00:07:20.434 --> 00:07:22.367
Next thing I wanna do
is I wanna go to the servlet

00:07:22.367 --> 00:07:23.367
and actually store that.

00:07:23.367 --> 00:07:27.100
So, we'll go take a look there.

00:07:27.100 --> 00:07:28.701
So, here's the servlet.

00:07:28.701 --> 00:07:32.901
You can see that
I'm getting the post parameters,

00:07:32.901 --> 00:07:35.234
then creating that entry object.

00:07:35.234 --> 00:07:39.100
And the next thing I wanna do
is save it to the datastore.

00:07:39.100 --> 00:07:41.567
Now, JDO uses something
called Persistence Manager

00:07:41.567 --> 00:07:43.901
to interact with the datastore.

00:07:43.901 --> 00:07:45.501
And it uses a factory pattern,

00:07:45.501 --> 00:07:48.267
uh, with a
Persistence Manager Factory

00:07:48.267 --> 00:07:50.234
to get that Persistence Manager.

00:07:50.234 --> 00:07:53.167
Uh, there--it's analogous
to a database connection pool,

00:07:53.167 --> 00:07:55.300
and there's a little bit
of overhead associated with it,

00:07:55.300 --> 00:07:57.901
so we wanna be efficient
and use a Singleton incidence.

00:07:57.901 --> 00:08:00.100
And I've actually, uh,
done that code as well,

00:08:00.100 --> 00:08:02.400
and I'm gonna drag that in.

00:08:06.300 --> 00:08:08.400
If we look inside,
you can see

00:08:08.400 --> 00:08:13.033
just getting that
Persistence Manager Factory.

00:08:13.033 --> 00:08:17.334
So, now I go back here, and...

00:08:17.334 --> 00:08:21.067
I'll get a Persistence Manager
from that.

00:08:24.667 --> 00:08:27.868
Next thing I wanna do
is I want to persist the object

00:08:27.868 --> 00:08:33.868
by calling "make persistent."

00:08:33.868 --> 00:08:37.801
And then finally
close out the connection.

00:08:37.801 --> 00:08:40.000
So, this is gonna save
the object to the datastore,

00:08:40.000 --> 00:08:42.834
and then you can see the
redirecting back to guestbook.

00:08:42.834 --> 00:08:45.601
So, let's go to guestbook
and now list out the entries.

00:08:45.601 --> 00:08:48.400
Or guestbook jsp.

00:08:48.400 --> 00:08:51.000
So, you can see,
js--standard jsp file.

00:08:51.000 --> 00:08:53.234
I'll go down
to the bottom here.

00:08:53.234 --> 00:08:56.200
And you can see
I have a list of entries,

00:08:56.200 --> 00:08:59.133
and because I'm a clumsy typer
I took the easy way out

00:08:59.133 --> 00:09:00.400
and I've commented the code.

00:09:00.400 --> 00:09:03.200
So I'm just gonna
walk you through that.

00:09:03.200 --> 00:09:04.734
So, the first thing
I'm going to do is get

00:09:04.734 --> 00:09:09.100
a Persistence Manager again,
to interact with the datastore.

00:09:09.100 --> 00:09:11.300
Next thing I'll do
is I'll create a query.

00:09:11.300 --> 00:09:13.133
Very similar to Sequel
with the syntax,

00:09:13.133 --> 00:09:14.801
so I say, "select from"--

00:09:14.801 --> 00:09:16.667
Lemme make this bigger
so you can see it.

00:09:16.667 --> 00:09:19.501
I say, "select from,"
I specify which objects,

00:09:19.501 --> 00:09:24.734
and then I specify any
filtering or ordering criteria.

00:09:24.734 --> 00:09:26.167
And then the last thing
I'm going to do

00:09:26.167 --> 00:09:30.634
is populate that list
by executing the query.

00:09:30.634 --> 00:09:33.534
So that should be
our database code.

00:09:33.534 --> 00:09:37.033
Let's go ahead
and try to run this.

00:09:42.567 --> 00:09:46.033
So, running again
on local host 80 80.

00:09:46.033 --> 00:09:49.133
We'll refresh for good measure.

00:09:56.634 --> 00:09:59.934
So, now the jsp
posted to the servlet,

00:09:59.934 --> 00:10:02.200
created that entry object,
saved it to the datastore,

00:10:02.200 --> 00:10:03.601
and listed it out.

00:10:03.601 --> 00:10:04.901
A killer app, for sure.

00:10:04.901 --> 00:10:06.000
[laughter]

00:10:06.000 --> 00:10:07.868
Uh, so now I wanna
share it with the world.

00:10:07.868 --> 00:10:10.567
So, uh--so that--
so that all my friends can see.

00:10:10.567 --> 00:10:12.033
The way I'm gonna do that--

00:10:12.033 --> 00:10:16.133
I'm gonna go back to Eclipse
and deploy it out to App Engine.

00:10:16.133 --> 00:10:18.033
So, first thing I'll do
is go back here--

00:10:18.033 --> 00:10:22.868
And you'll see there's a little
App Engine icon in the top left.

00:10:22.868 --> 00:10:24.234
I'm gonna click on that,

00:10:24.234 --> 00:10:26.167
and you'll notice
there's an error here right now.

00:10:26.167 --> 00:10:28.434
It's because I haven't set
an application I.D. for this.

00:10:28.434 --> 00:10:32.534
Every app on App Engine
needs a, uh--an application I.D.

00:10:32.534 --> 00:10:33.868
A unique application I.D,

00:10:33.868 --> 00:10:36.701
so I'm gonna go
to my project settings.

00:10:36.701 --> 00:10:38.534
And then I'll go over
to the App Engine console

00:10:38.534 --> 00:10:41.934
and actually set that.

00:10:41.934 --> 00:10:43.801
So, I'm gonna create
a new application I.D.,

00:10:43.801 --> 00:10:46.767
and we'll call it
"campfire guestbook."

00:10:46.767 --> 00:10:48.501
And if you're trying
to beat me to it,

00:10:48.501 --> 00:10:52.133
uh, that would be a way to--

00:10:52.133 --> 00:10:54.434
It would be a way to trip me up.
Please don't.

00:10:54.434 --> 00:10:57.734
[audience chuckles]

00:10:57.734 --> 00:11:01.100
Okay, so we registered
that I.D. successfully.

00:11:04.701 --> 00:11:08.801
So, I'm gonna go back
and set that.

00:11:11.067 --> 00:11:15.100
All I have to do now is enter in
my username and password.

00:11:15.100 --> 00:11:17.834
And then I click "Deploy."

00:11:17.834 --> 00:11:19.167
And that's it.

00:11:19.167 --> 00:11:22.100
So, the SDK is compiling,
uh, my Java source code,

00:11:22.100 --> 00:11:27.734
packaging everything up,
and sending it up to the server.

00:11:27.734 --> 00:11:32.167
So, now it says
it's deployed successfully.

00:11:32.167 --> 00:11:35.300
So I can go over here.

00:11:43.667 --> 00:11:46.434
And I now have
an application on the web.

00:11:46.434 --> 00:11:50.667
[applause]

00:11:52.667 --> 00:11:54.567
And we'll just
make sure it works.

00:11:54.567 --> 00:11:57.300
So, if you ever had an idea
for an application

00:11:57.300 --> 00:11:59.534
and you wanted to actually
go and implement it,

00:11:59.534 --> 00:12:01.467
and you only had a weekend,

00:12:01.467 --> 00:12:03.400
um, and you were
probably thwarted

00:12:03.400 --> 00:12:05.434
because you took a week
to get it out,

00:12:05.434 --> 00:12:06.968
this is a solution that I think

00:12:06.968 --> 00:12:08.300
you're gonna be
really happy with.

00:12:08.300 --> 00:12:10.767
I've just created a--
a whole Java application,

00:12:10.767 --> 00:12:13.734
albeit very simple,
and deployed it to the web

00:12:13.734 --> 00:12:16.400
in, you know, a matter
of 10 or 15 minutes.

00:12:16.400 --> 00:12:20.100
Um, not only that,
we also were using standard APIs

00:12:20.100 --> 00:12:22.367
and Java-standard APIs, um,

00:12:22.367 --> 00:12:24.334
for the datastore
and for the other APIs.

00:12:24.334 --> 00:12:25.667
So I could take that code,

00:12:25.667 --> 00:12:28.033
and I could also run it
on any other server as well.

00:12:28.033 --> 00:12:29.467
Thanks.
Hand it back to you, Kevin.

00:12:29.467 --> 00:12:30.400
[applause]

