WEBVTT
Kind: captions
Language: en

00:00:00.400 --> 00:00:02.680
Now that we have some intuition for
the Turing machine,

00:00:02.680 --> 00:00:06.820
we turn to the task of establishing some
notation for our mathematical model.

00:00:06.820 --> 00:00:09.510
Here, I've used a diagram to
represent the Turing machine and

00:00:09.510 --> 00:00:11.200
its configuration.

00:00:11.200 --> 00:00:16.120
We have the tape, the read/write head,
which is connected to the state

00:00:16.120 --> 00:00:21.140
transition logic, and the little display
here that will indicate the halt state.

00:00:21.140 --> 00:00:24.670
That is, the internal state of
the Turing machine when it stops.

00:00:24.670 --> 00:00:29.390
Mathematically, a Turing machine
consists of a finite set of states Q.

00:00:29.390 --> 00:00:31.770
Everything used to specify
a Turing machine as finite,

00:00:31.770 --> 00:00:34.270
by the way, that's critically important.

00:00:34.270 --> 00:00:39.010
Next, we need to specify an input
alphabet of allowed symbols.

00:00:39.010 --> 00:00:41.130
This must not include the blank symbol,

00:00:41.130 --> 00:00:44.460
which we will notate with this
square cut most of the time.

00:00:44.460 --> 00:00:47.460
For some of the quizzes where we need
you to be able to type the character,

00:00:47.460 --> 00:00:48.870
we will use B.

00:00:48.870 --> 00:00:52.008
We can't allow the input
alphabet to blank symbol or

00:00:52.008 --> 00:00:55.515
we wouldn't be able to tell
where the input string ended.

00:00:55.515 --> 00:00:59.447
The whole rest of the tape where the
input string is not written, by the way,

00:00:59.447 --> 00:01:00.810
has blanks on it.

00:01:00.810 --> 00:01:03.350
We also define the tape
alphabet of symbols.

00:01:03.350 --> 00:01:06.410
And that's the set of symbols
that the read/write head can use,

00:01:06.410 --> 00:01:10.050
and this will include the blank symbol.

00:01:10.050 --> 00:01:15.390
A Turing machine also specifies
a transition function from a state

00:01:15.390 --> 00:01:20.730
tape symbol pair to a state
tape symbol direction triple.

00:01:20.730 --> 00:01:22.400
This of course tells
the machine what to do.

00:01:23.410 --> 00:01:27.450
For every possible current state and
symbol that could be read,

00:01:27.450 --> 00:01:31.600
we have the appropriate response,
the new state to move to,

00:01:31.600 --> 00:01:35.390
the symbol to write to the tape, you can
make this the same as the input one to

00:01:35.390 --> 00:01:40.620
leave the tape alone, and the direction
to move the head relative to the tape.

00:01:40.620 --> 00:01:43.570
Note that we can always move the head
to the right, but if the head is

00:01:43.570 --> 00:01:47.500
currently over the first position of the
tape, then we can't actually move left.

00:01:48.630 --> 00:01:52.430
When the transition function says that
the machine should move the head left,

00:01:52.430 --> 00:01:56.150
then we just have it stay in
the same position by convention.

00:01:56.150 --> 00:01:59.510
A Turing machine also
specifies a start state.

00:01:59.510 --> 00:02:04.450
The machine always starts in the first
position on the tape, and in this state.

00:02:04.450 --> 00:02:07.920
And finally, we have an accept and
a reject state.

00:02:07.920 --> 00:02:11.110
When these are reached,
the machine halts its execution and

00:02:11.110 --> 00:02:12.970
displays the final state.

00:02:12.970 --> 00:02:15.970
At first,
all this notation may seem overwhelming.

00:02:15.970 --> 00:02:18.450
It is a seven tuple after all.

00:02:18.450 --> 00:02:21.080
Remember, however,
that all the machine ever does

00:02:21.080 --> 00:02:25.420
is respond to the current symbol it
sees based on its current state.

00:02:25.420 --> 00:02:29.241
Thus, it's the transition function
that is at the heart of the machine.

00:02:29.241 --> 00:02:33.417
And most all of the important
information, like the set of states and

00:02:33.417 --> 00:02:35.800
the tape alphabet, is implicit in it.

