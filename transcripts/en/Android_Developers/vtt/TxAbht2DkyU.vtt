WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.166
WAYNE PIEKARSKI: Have you
ever been watching a video

00:00:02.166 --> 00:00:04.520
on Android TV, but you still
wanted to browse around

00:00:04.520 --> 00:00:06.060
to look for something new?

00:00:06.060 --> 00:00:08.290
Then you need to use the
new Picture-in-Picture mode,

00:00:08.290 --> 00:00:10.290
available in Android N.

00:00:10.290 --> 00:00:11.170
Hi, everyone.

00:00:11.170 --> 00:00:12.652
I'm Wayne Piekarski from Google.

00:00:12.652 --> 00:00:14.860
And today, I'm going to talk
about Picture-in-Picture

00:00:14.860 --> 00:00:19.080
on Android TV and how to
quickly support it in your apps.

00:00:19.080 --> 00:00:21.400
Picture-in-Picture,
also known as PIP,

00:00:21.400 --> 00:00:24.300
is a new feature available
in Android N on Android TV

00:00:24.300 --> 00:00:25.550
devices.

00:00:25.550 --> 00:00:28.450
PIP builds on the new
Android and multi-window APIs

00:00:28.450 --> 00:00:31.330
to bring you an intuitive,
multi-window experience,

00:00:31.330 --> 00:00:34.290
specifically designed
for Android TV.

00:00:34.290 --> 00:00:36.540
With Picture-in-Picture
enabled in your app,

00:00:36.540 --> 00:00:38.650
users can continue
watching your content

00:00:38.650 --> 00:00:41.760
while they browse more
content in app and across apps

00:00:41.760 --> 00:00:43.490
on Android TV.

00:00:43.490 --> 00:00:47.470
The user selects the PIP icon to
put the video in the top right

00:00:47.470 --> 00:00:48.940
corner.

00:00:48.940 --> 00:00:51.450
PIP also helps your
users return to your app.

00:00:51.450 --> 00:00:53.720
So while they browse around
for different content,

00:00:53.720 --> 00:00:56.610
it's now quick and easy for
them to return to your app,

00:00:56.610 --> 00:00:58.840
even if they're in a
completely different app.

00:00:58.840 --> 00:01:03.050
Without PIP, once the user
leaves your app, they're gone.

00:01:03.050 --> 00:01:04.730
If you press and
hold the Home button,

00:01:04.730 --> 00:01:06.550
it'll bring up the
Recents list, which

00:01:06.550 --> 00:01:10.250
allows you to make the PIP
full-screen or to stop it.

00:01:10.250 --> 00:01:12.170
In order to support
PIP in your app,

00:01:12.170 --> 00:01:14.990
there are few simple changes
that you'll need to make.

00:01:14.990 --> 00:01:16.710
The first to do
is you need to add

00:01:16.710 --> 00:01:20.260
these few lines to your payback
activity in your manifest file.

00:01:20.260 --> 00:01:22.580
This tells Android that your
activity is specifically

00:01:22.580 --> 00:01:24.510
designed to go into
PIP mode and can

00:01:24.510 --> 00:01:27.670
be resized by the system
when PIP is enabled.

00:01:27.670 --> 00:01:30.200
We suggest you only add
these tags to video playback

00:01:30.200 --> 00:01:32.490
activities, as they
provide the best user

00:01:32.490 --> 00:01:33.850
experience for PIP mode.

00:01:33.850 --> 00:01:37.390
And this is what users will
come to expect from the feature.

00:01:37.390 --> 00:01:40.460
Next, add a button to
your UI so that your users

00:01:40.460 --> 00:01:41.700
can activate PIP.

00:01:41.700 --> 00:01:43.750
If you're using the
leanback support library,

00:01:43.750 --> 00:01:46.180
we've already added a new
Picture-in-Picture action

00:01:46.180 --> 00:01:48.190
class that allows
you to easily drop

00:01:48.190 --> 00:01:52.430
a PIP button into your
existing playback controls row.

00:01:52.430 --> 00:01:54.180
When the button
is clicked, simply

00:01:54.180 --> 00:01:57.130
run activity
enterPictureInPictureMode

00:01:57.130 --> 00:01:59.200
and Android will
handle the rest.

00:01:59.200 --> 00:02:01.830
At any time, you can
call the activity

00:02:01.830 --> 00:02:05.680
isInPictureInPictureMode method
to detect whether your activity

00:02:05.680 --> 00:02:06.940
is in PIP mode.

00:02:06.940 --> 00:02:09.240
For example, when you
switch to PIP mode,

00:02:09.240 --> 00:02:11.430
your activity is
considered to be paused.

00:02:11.430 --> 00:02:13.230
So you should continue
video playback

00:02:13.230 --> 00:02:15.600
and pause everything else.

00:02:15.600 --> 00:02:18.537
If you find that your video
pauses when you activate PIP,

00:02:18.537 --> 00:02:20.870
that's likely because you're
handling the play and pause

00:02:20.870 --> 00:02:23.860
logic in onResume and onPause.

00:02:23.860 --> 00:02:27.070
In Android N, we recommend
your play-pause logic happen

00:02:27.070 --> 00:02:29.720
in onStart, onStop instead.

00:02:29.720 --> 00:02:32.150
So be sure to move that
logic over to those methods

00:02:32.150 --> 00:02:34.370
if you encounter that issue.

00:02:34.370 --> 00:02:36.830
Finally, you may notice
that your Playback Controls

00:02:36.830 --> 00:02:39.370
row still shows up
in the PIP window.

00:02:39.370 --> 00:02:40.990
This may confuse users.

00:02:40.990 --> 00:02:43.390
So we'll need to hide
those when we into PIP mode

00:02:43.390 --> 00:02:46.570
and show them again
once we exit PIP mode.

00:02:46.570 --> 00:02:48.700
If you implement the
media session properly,

00:02:48.700 --> 00:02:51.210
then play and pause controls
on the remote control

00:02:51.210 --> 00:02:54.940
or the Recents list will
still work on the PIP.

00:02:54.940 --> 00:02:58.360
Simply override the
onPictureInPictureModeChanged

00:02:58.360 --> 00:03:00.950
in your activity or fragment,
and hide your controls

00:03:00.950 --> 00:03:03.487
if you're in PIP mode.

00:03:03.487 --> 00:03:04.070
And that's it.

00:03:04.070 --> 00:03:04.890
You're done.

00:03:04.890 --> 00:03:08.065
Your app now supports
PIP and is ready to use.

00:03:08.065 --> 00:03:09.440
Here's a few extra
tips that will

00:03:09.440 --> 00:03:11.810
help make sure your
Picture-in-Picture experience

00:03:11.810 --> 00:03:14.220
is polished for your users.

00:03:14.220 --> 00:03:17.870
First, use the Android
launchMode="singleTask"

00:03:17.870 --> 00:03:21.160
on your PIP enabled activity
to make sure you're PIP window

00:03:21.160 --> 00:03:24.630
automatically closes when a user
starts playing a new video from

00:03:24.630 --> 00:03:26.950
within your application.

00:03:26.950 --> 00:03:29.270
We suggest you use the
Picture-in-Picture window

00:03:29.270 --> 00:03:31.300
only for displaying
your video content,

00:03:31.300 --> 00:03:34.220
as this provides the
best user experience.

00:03:34.220 --> 00:03:36.740
And finally, when you reach
the end of your video,

00:03:36.740 --> 00:03:40.070
you should either autoplay a
next video, or close the PIP.

00:03:40.070 --> 00:03:43.740
But don't go back to the
full-screen user interface.

00:03:43.740 --> 00:03:45.640
So go and check out
our leanback sample,

00:03:45.640 --> 00:03:48.040
which shows you a full
implementation of how

00:03:48.040 --> 00:03:51.379
to incorporate
Picture-in-Picture in your app.

00:03:51.379 --> 00:03:53.170
Picture-in-Picture mode
provides your users

00:03:53.170 --> 00:03:56.110
with a great experience for
viewing and browsing content

00:03:56.110 --> 00:03:58.410
at the same time on Android TV.

00:03:58.410 --> 00:04:00.550
As you saw, enabling
PIP in your apps

00:04:00.550 --> 00:04:04.120
is easy and can help your users
stay engaged with your content

00:04:04.120 --> 00:04:06.440
beyond the confines of your app.

00:04:06.440 --> 00:04:07.780
So that's it for today.

00:04:07.780 --> 00:04:09.760
Try out the PIP
support in the sample.

00:04:09.760 --> 00:04:13.280
And join us in our G+ community
to discuss this and other

00:04:13.280 --> 00:04:15.070
Andriod TV APIs.

00:04:15.070 --> 00:04:16.140
I'm Wayne Piekarski.

00:04:16.140 --> 00:04:17.739
And I'll see you next time.

00:04:17.739 --> 00:04:21.089
[MUSIC PLAYING]

