WEBVTT
Kind: captions
Language: en

00:00:00.430 --> 00:00:01.839
Now we're going to go ahead and look at

00:00:01.839 --> 00:00:05.060
the code for defining an entity. Let's imagine that

00:00:05.060 --> 00:00:08.590
you want to store entities of kind recipe. Maybe

00:00:08.590 --> 00:00:11.770
you like chocolate cake, especially chocolate cake covered in

00:00:11.770 --> 00:00:15.910
strawberries and sprinkles or maybe you prefer pavlova. This

00:00:15.910 --> 00:00:18.890
one looks really good with kiwis and strawberries. For

00:00:18.890 --> 00:00:22.740
whatever kind of cake you like, your recipe needs

00:00:22.740 --> 00:00:25.940
some properties. Obviously it has to have a name,

00:00:25.940 --> 00:00:30.370
a list of ingredients, some instructions, perhaps indicate the

00:00:30.370 --> 00:00:33.830
number of servings. And you can say whether it's vegetarian

00:00:33.830 --> 00:00:36.030
or not. This might not be quite so important

00:00:36.030 --> 00:00:38.440
for cakes but could be really important for like, say,

00:00:38.440 --> 00:00:41.510
lasagna. If you use the native App Engine data

00:00:41.510 --> 00:00:44.960
store low level Java API. You need to create entities

00:00:44.960 --> 00:00:48.630
with instances of the entity class. However, the entity class

00:00:48.630 --> 00:00:51.000
is final so you can't subclass it and you can't

00:00:51.000 --> 00:00:53.590
add fields to it. Fortunately for us, there's an

00:00:53.590 --> 00:00:57.470
open source library called Objectify. Objectify makes it easier

00:00:57.470 --> 00:00:59.730
to work with entities by allowing you to define

00:00:59.730 --> 00:01:02.950
classes that represent entities of a particular kind. Then

00:01:02.950 --> 00:01:05.190
you simply add fields to the class for each

00:01:05.190 --> 00:01:08.670
property that you want your entities to have. So,

00:01:08.670 --> 00:01:11.960
here's the code for the Recipe entity class. Notice

00:01:11.960 --> 00:01:16.080
the imports, these packages provide the objectify functionality for

00:01:16.080 --> 00:01:20.045
defining entities. Okay, next, notice this

00:01:20.045 --> 00:01:24.540
@Entity annotation. This annotation indicates that class

00:01:24.540 --> 00:01:30.160
represents an entity. The class name is the kind of the entity. So

00:01:30.160 --> 00:01:34.950
here we define the entities of kind recipe. This entity class has the properties

00:01:34.950 --> 00:01:41.450
recipe ID, name, vegetarian, servings, and so on. When you use objectify,

00:01:41.450 --> 00:01:46.800
every entity class must have one, and only one property, marked with the @ID

00:01:46.800 --> 00:01:51.710
annotation. This is the entity's ID and it's used to help uniquely identify

00:01:51.710 --> 00:01:55.000
the entity. You see that the rest of this class is just a

00:01:55.000 --> 00:01:57.370
regular old Java class. It could have

00:01:57.370 --> 00:01:59.460
more constructors and methods if you wanted.

