WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:04.790
In TCP congestion control, the senders continue to

00:00:04.790 --> 00:00:08.920
increase their rate until they see packet drops

00:00:08.920 --> 00:00:11.940
in the network. Packet drops occur because the

00:00:11.940 --> 00:00:15.790
senders are sending at a rate that is faster

00:00:15.790 --> 00:00:17.850
than the rate at which a particular router

00:00:17.850 --> 00:00:19.920
in the network might be able to drain its

00:00:19.920 --> 00:00:22.550
buffer. So you might imagine, for example, that

00:00:22.550 --> 00:00:25.920
if all three of these senders are sending at

00:00:25.920 --> 00:00:31.670
a rate that is equal to the rate at which the router is able to send

00:00:31.670 --> 00:00:34.930
traffic downstream, then eventually this buffer will fill

00:00:34.930 --> 00:00:39.700
up. TCP interprets packet loss as congestion. And

00:00:39.700 --> 00:00:42.480
when senders see packet loss, they slow down

00:00:42.480 --> 00:00:44.810
as a result of seeing the packet loss.

00:00:44.810 --> 00:00:47.700
This is an assumption. Packet drops are not

00:00:47.700 --> 00:00:51.450
a sign of congestion in all networks. For example,

00:00:51.450 --> 00:00:54.300
in wireless networks, there may be packet loss

00:00:54.300 --> 00:00:56.540
due to corrupted packets as a result of

00:00:56.540 --> 00:01:00.250
interference. But in many cases, packet drops do

00:01:00.250 --> 00:01:04.530
result, because some router in the network has a

00:01:04.530 --> 00:01:07.170
buffer that has filled up and can no

00:01:07.170 --> 00:01:09.720
longer hold anymore packets and hence it drops

00:01:09.720 --> 00:01:12.760
the packets as they arrive. So senders increase

00:01:12.760 --> 00:01:16.740
rates until packets are dropped. Periodically probing the network

00:01:16.740 --> 00:01:20.310
to check whether more bandwidth has become available.

00:01:20.310 --> 00:01:23.910
Then they see packet loss, interpret that as congestion,

00:01:23.910 --> 00:01:27.560
and slow down. So, congestion control has two parts.

00:01:27.560 --> 00:01:29.630
One is an increase algorithm, and the other is

00:01:29.630 --> 00:01:32.740
a decrease algorithm. In the increase algorithm, the

00:01:32.740 --> 00:01:35.750
sender must test the network to determine whether the

00:01:35.750 --> 00:01:38.280
network can sustain a higher sending rate. In the

00:01:38.280 --> 00:01:42.130
decrease algorithm, the senders react to congestion to achieve

00:01:42.130 --> 00:01:45.810
optimal loss rates, delays in sending rates. Let's now talk

00:01:45.810 --> 00:01:50.770
about how senders can achieve these increase and decrease algorithms.

