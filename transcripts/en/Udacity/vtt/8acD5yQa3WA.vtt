WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:03.359
Now, that you've wrapped your head
around what the Firebase UI is actually

00:00:03.359 --> 00:00:04.830
doing, let's pop it into our code.

00:00:04.830 --> 00:00:08.690
Here the general steps that I've laid
out to get things up and running.

00:00:08.690 --> 00:00:11.990
I've taken the liberty of already
doing steps two and three for you.

00:00:11.990 --> 00:00:15.100
There's already an mListView
object in the code for you.

00:00:15.100 --> 00:00:19.140
And I've also made an XML layout
called single_ active_ list.

00:00:19.140 --> 00:00:21.890
You've actually already used
this layout to display one list.

00:00:21.890 --> 00:00:25.420
Also, that describes in greater
detail how to do all this stuff.

00:00:25.420 --> 00:00:29.130
The most complicated slash interesting
part is in the fire-based list adapter.

00:00:29.130 --> 00:00:33.535
There's this method called PopulateView,
which is meant to be overwritten.

00:00:33.535 --> 00:00:37.230
PopulateView is a method that
supplies two key arguments.

00:00:37.230 --> 00:00:39.930
First is a view that is
the inflated version

00:00:39.930 --> 00:00:42.650
of the layout that you gave
the adapter upon creation.

00:00:43.850 --> 00:00:47.710
It also gives you a POJO, which in
this case, will be a Shopping List.

00:00:47.710 --> 00:00:51.840
It's then your job to take this view,
grab the sub text views,

00:00:51.840 --> 00:00:55.100
images views, and whatever else
there is in the layout, and

00:00:55.100 --> 00:00:58.730
then, appropriately fill
it with data from the POJO.

00:00:58.730 --> 00:01:00.400
Okay, I'll send over the spec now so

00:01:00.400 --> 00:01:02.820
that you can add Firebase UI
to Shopping List Plus Plus.

