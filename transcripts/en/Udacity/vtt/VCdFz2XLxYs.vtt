WEBVTT
Kind: captions
Language: en

00:00:00.550 --> 00:00:03.070
Given a machine with
a two-level memory hierarchy,

00:00:03.070 --> 00:00:05.520
what does an efficient
algorithm look like?

00:00:05.520 --> 00:00:06.766
That's the topic of this lesson.

00:00:06.766 --> 00:00:10.180
Input/output avoiding or
I/O avoiding algorithms.

00:00:10.180 --> 00:00:14.640
In this case, I/O refers to
the transfers of data between slow and

00:00:14.640 --> 00:00:15.240
fast memory.

00:00:15.240 --> 00:00:19.610
Now in this lesson, you'll assume that
these I/Os are the dominant cost,

00:00:19.610 --> 00:00:21.995
and you'll ask how to minimize them.

00:00:21.995 --> 00:00:26.380
You'll also see examples of how to argue
lower bounds on the number of IOs so

00:00:26.380 --> 00:00:29.050
that you can see whether a given
algorithm you've got achieves

00:00:29.050 --> 00:00:30.470
the lower bound.

00:00:30.470 --> 00:00:32.625
So, let's go avoid some IOs.

00:00:32.625 --> 00:00:34.994
[SOUND]

