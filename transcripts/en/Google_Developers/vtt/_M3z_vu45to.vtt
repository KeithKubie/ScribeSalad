WEBVTT
Kind: captions
Language: en

00:00:00.770 --> 00:00:06.340
Hello, I'm Brian, a developer on
the Google Drive Realtime API.

00:00:06.340 --> 00:00:08.930
Everyone loves memes,
especially when they've

00:00:08.930 --> 00:00:11.340
got pictures of
cute cats in them,

00:00:11.340 --> 00:00:13.430
but not everyone's an
expert on coming up

00:00:13.430 --> 00:00:15.090
with great meme ideas.

00:00:15.090 --> 00:00:17.020
Maybe you know the
perfect background image

00:00:17.020 --> 00:00:19.450
to use for a meme, but you
need a little bit of help

00:00:19.450 --> 00:00:22.020
coming up with the
perfect caption text.

00:00:22.020 --> 00:00:25.200
Why don't we build a
collaborative meme editor app

00:00:25.200 --> 00:00:28.620
so that you and your
friends can meme together?

00:00:28.620 --> 00:00:31.040
Now, what would a
collaborative meme editor app

00:00:31.040 --> 00:00:32.390
actually look like?

00:00:32.390 --> 00:00:34.259
It would look a
little bit like this.

00:00:34.259 --> 00:00:36.800
You'd have a box where you can
select the image that you want

00:00:36.800 --> 00:00:38.466
to use for the
background, and then we'd

00:00:38.466 --> 00:00:40.740
have text boxes where you
could enter the top, middle,

00:00:40.740 --> 00:00:42.320
and bottom caption text.

00:00:42.320 --> 00:00:45.170
And because this is a
collaborative meme editor app,

00:00:45.170 --> 00:00:48.240
we want to have character by
character collaboration just

00:00:48.240 --> 00:00:49.240
like Google Docs.

00:00:49.240 --> 00:00:52.870
And what that means is, when
one user types or deletes

00:00:52.870 --> 00:00:54.410
or edits one of
these text boxes,

00:00:54.410 --> 00:00:57.570
we want to see what they're
doing in real time, character

00:00:57.570 --> 00:00:59.480
by character.

00:00:59.480 --> 00:01:02.420
So how do we actually build
this collaborative meme app

00:01:02.420 --> 00:01:03.520
the old-fashioned way?

00:01:03.520 --> 00:01:06.634
Well, the first thing we have
to do is design our server.

00:01:06.634 --> 00:01:08.050
And because we
have this character

00:01:08.050 --> 00:01:09.820
by character
collaboration, this server

00:01:09.820 --> 00:01:12.110
needs to deal with
a lot of load.

00:01:12.110 --> 00:01:13.940
Every time someone
types on their keyboard,

00:01:13.940 --> 00:01:15.523
we're going to get
a request, and that

00:01:15.523 --> 00:01:18.610
means a ton of traffic to our
database and a ton of requests

00:01:18.610 --> 00:01:20.780
to our application server.

00:01:20.780 --> 00:01:22.380
Once we've got the
server figured out,

00:01:22.380 --> 00:01:24.680
we need to figure out how
to deal with collaboration,

00:01:24.680 --> 00:01:26.940
and that means
resolving conflicts.

00:01:26.940 --> 00:01:30.720
If one user inserts text and
another user deletes text,

00:01:30.720 --> 00:01:33.330
we need to resolve that in
a way that causes everyone

00:01:33.330 --> 00:01:35.330
to end up with the same result.

00:01:35.330 --> 00:01:38.590
And then of course we have to
deal with all of the minutiae.

00:01:38.590 --> 00:01:41.460
We have to deal with
authentication and access

00:01:41.460 --> 00:01:43.960
control, and we have to
deal with the network code

00:01:43.960 --> 00:01:48.120
and write a bunch of glue
code to bring all this stuff

00:01:48.120 --> 00:01:48.960
together.

00:01:48.960 --> 00:01:50.550
Once we're done
with all of that,

00:01:50.550 --> 00:01:52.260
then we can get
on to the fun part

00:01:52.260 --> 00:01:54.140
where we build a
great user experience

00:01:54.140 --> 00:01:56.280
and build a great meme app.

00:01:56.280 --> 00:01:57.660
But we're not
really here to talk

00:01:57.660 --> 00:01:59.180
about how to do
this the hard way.

00:01:59.180 --> 00:02:01.846
We're here to talk about how you
do this with the Drive Realtime

00:02:01.846 --> 00:02:05.320
API, which looks a
little more like this.

00:02:05.320 --> 00:02:06.440
All that hard stuff?

00:02:06.440 --> 00:02:09.669
We just replaced it
with the Realtime API.

00:02:09.669 --> 00:02:12.960
And all you have to do is
build a great meme application,

00:02:12.960 --> 00:02:16.320
build your user
interface, and figure out

00:02:16.320 --> 00:02:18.380
how to make your app wonderful.

00:02:18.380 --> 00:02:20.550
But how easy is this really?

00:02:20.550 --> 00:02:23.670
Well, as it turns out, with
the Drive Realtime API,

00:02:23.670 --> 00:02:27.190
building a collaborative
app is really, really easy.

00:02:27.190 --> 00:02:30.630
It's so easy that you can build
a collaborative meme editing

00:02:30.630 --> 00:02:32.940
app with less work
than it would take

00:02:32.940 --> 00:02:35.610
to build a traditional
non-collaborative app.

00:02:35.610 --> 00:02:38.331
And that's because you
don't need server-side code.

00:02:38.331 --> 00:02:40.705
You don't need to deal with
any of the persistent storage

00:02:40.705 --> 00:02:42.660
or authentication or
anything like that.

00:02:42.660 --> 00:02:46.820
You just build client side
HTML, CSS, and JavaScript

00:02:46.820 --> 00:02:50.330
and focus on making
your experience great.

00:02:50.330 --> 00:02:53.460
So let's go step by step
through how we would actually

00:02:53.460 --> 00:02:55.970
build this meme app
using the Realtime API.

00:02:55.970 --> 00:02:57.540
The first thing we
need to do is we

00:02:57.540 --> 00:02:59.480
need to include a little
bit of boilerplate

00:02:59.480 --> 00:03:01.550
to load the Realtime API.

00:03:01.550 --> 00:03:03.380
We then need to
read and write data

00:03:03.380 --> 00:03:06.660
from what we like to call
a Realtime data model.

00:03:06.660 --> 00:03:09.040
And then we have to handle
changes from other users

00:03:09.040 --> 00:03:11.292
because this is a
collaborative app.

00:03:11.292 --> 00:03:13.500
So let's go through a little
bit of this boilerplate,

00:03:13.500 --> 00:03:16.360
and I promise that
this is painless.

00:03:16.360 --> 00:03:18.070
The first thing
we need to include

00:03:18.070 --> 00:03:20.650
is the standard Google
API loader script.

00:03:20.650 --> 00:03:24.070
Now this is the same script
you'd use if you wanted to load

00:03:24.070 --> 00:03:26.980
the Google+ button, or
the Google Drive API,

00:03:26.980 --> 00:03:28.650
or really any other Google API.

00:03:28.650 --> 00:03:31.260
And this is just something
you copy and paste.

00:03:31.260 --> 00:03:33.100
Now the next thing
we do is actually

00:03:33.100 --> 00:03:35.750
called the JavaScript
function to load the APIs.

00:03:35.750 --> 00:03:37.790
This is called gapi.load.

00:03:37.790 --> 00:03:40.220
We provide a list of the
Google APIs that we want.

00:03:40.220 --> 00:03:42.760
In our case, we want
the Realtime API,

00:03:42.760 --> 00:03:46.340
but we also might want something
like our authentication code,

00:03:46.340 --> 00:03:49.000
or we might want the sharing
dialogue or the Drive API

00:03:49.000 --> 00:03:50.910
or something like that.

00:03:50.910 --> 00:03:52.880
We can provide as
many APIs as we need.

00:03:52.880 --> 00:03:55.710
Once all of that's
loaded, we get a callback,

00:03:55.710 --> 00:03:58.220
which we're just going
to use to wire up our UI.

00:03:58.220 --> 00:04:00.200
And that's it for boilerplate.

00:04:00.200 --> 00:04:02.570
Now we can get on to the
really cool part, which

00:04:02.570 --> 00:04:04.650
is where we actually
read and save data

00:04:04.650 --> 00:04:06.630
from the Realtime data model.

00:04:06.630 --> 00:04:08.620
Now what is a
Realtime data model?

00:04:08.620 --> 00:04:10.220
I've been talking about this.

00:04:10.220 --> 00:04:13.400
Well it's kind of a fancy
term, but a Realtime data model

00:04:13.400 --> 00:04:15.920
is just a collection
of data structures

00:04:15.920 --> 00:04:18.680
just like an
in-memory data model.

00:04:18.680 --> 00:04:22.300
And the kind of cool part
about a Realtime data model

00:04:22.300 --> 00:04:25.890
is that Google handles
all of the collaboration

00:04:25.890 --> 00:04:27.450
and all of the
storage work for you.

00:04:27.450 --> 00:04:30.160
So you just read and write
from this Realtime data model,

00:04:30.160 --> 00:04:33.120
just like it were in-memory,
and you write a user interface

00:04:33.120 --> 00:04:35.860
on top of it and then all
the rest is handled for you.

00:04:35.860 --> 00:04:38.460
So let's go through
a couple of examples

00:04:38.460 --> 00:04:40.550
of how this Realtime
data model's built.

00:04:40.550 --> 00:04:42.860
We're going to build it
using a variety of objects,

00:04:42.860 --> 00:04:46.180
but in our case we're going
to use collaborative maps

00:04:46.180 --> 00:04:47.670
and collaborative strings.

00:04:47.670 --> 00:04:51.520
Now a collaborative map is just
like a JavaScript associative

00:04:51.520 --> 00:04:54.630
array, except we
automatically merge changes

00:04:54.630 --> 00:04:57.470
on a key by key basis
to handle collaboration.

00:04:57.470 --> 00:05:00.430
And a collaborative string is
just like a JavaScript string,

00:05:00.430 --> 00:05:04.140
except that we do character by
character diffing to figure out

00:05:04.140 --> 00:05:08.410
the results of that
everyone gets the same text.

00:05:08.410 --> 00:05:11.070
So let's actually start
building up our data model.

00:05:11.070 --> 00:05:14.260
So at the root we're going to
have a collaborative map which

00:05:14.260 --> 00:05:15.970
we've creatively called root.

00:05:15.970 --> 00:05:18.320
And in fact, every
Realtime data model

00:05:18.320 --> 00:05:20.100
has a collaborative
map at its root.

00:05:20.100 --> 00:05:23.610
This is something that we
create for you automatically

00:05:23.610 --> 00:05:24.810
as a sort of convenience.

00:05:24.810 --> 00:05:26.690
And this is where you
can store all the data

00:05:26.690 --> 00:05:28.610
that you need for
your application.

00:05:28.610 --> 00:05:32.070
In our case we need three
different strings, the top,

00:05:32.070 --> 00:05:33.382
middle, and bottom text.

00:05:33.382 --> 00:05:35.590
And we're going to use
collaborative strings for this

00:05:35.590 --> 00:05:38.590
because we want that character
by character collaboration.

00:05:38.590 --> 00:05:41.560
If we didn't want the character
by character collaboration,

00:05:41.560 --> 00:05:43.350
which is the case
for the image URL,

00:05:43.350 --> 00:05:45.575
we can just use a plain
JavaScript string here.

00:05:45.575 --> 00:05:47.450
And we'd just put that
in a collaborative map

00:05:47.450 --> 00:05:51.336
like you were a
local data structure.

00:05:51.336 --> 00:05:53.210
So let's look at actually
reading and writing

00:05:53.210 --> 00:05:54.650
from this data model.

00:05:54.650 --> 00:05:57.650
So to read, let's say we want
to get the image URL out.

00:05:57.650 --> 00:06:00.360
We just call the get function
on the collaborative map,

00:06:00.360 --> 00:06:02.370
just like it's an in-memory map.

00:06:02.370 --> 00:06:05.820
And we get back our image
URL, our little picture

00:06:05.820 --> 00:06:07.140
of the cute cat.

00:06:07.140 --> 00:06:10.970
If we wanted to update that, say
to replace it with a cuter cat,

00:06:10.970 --> 00:06:12.790
all we have to do is call set.

00:06:12.790 --> 00:06:16.700
Now, this looks fairly
simple because it is simple.

00:06:16.700 --> 00:06:19.940
This works just like a
regular old JavaScript object,

00:06:19.940 --> 00:06:22.030
but under the covers
what we're doing

00:06:22.030 --> 00:06:24.450
is serializing this,
sending it to the server,

00:06:24.450 --> 00:06:26.970
handling collaboration,
and handling persistence.

00:06:26.970 --> 00:06:30.262
All of this is done
for you automatically.

00:06:30.262 --> 00:06:31.720
But there's one
thing that you need

00:06:31.720 --> 00:06:33.920
to do that's a little bit
different from building

00:06:33.920 --> 00:06:35.380
a non-collaborative
app and that's

00:06:35.380 --> 00:06:37.540
that you need to handle
events from other users,

00:06:37.540 --> 00:06:39.530
not just the local user.

00:06:39.530 --> 00:06:42.800
So in the Realtime API,
we provide event listeners

00:06:42.800 --> 00:06:45.960
on collaborative objects
just like dom elements.

00:06:45.960 --> 00:06:50.610
But you could add listeners
to collaborative strings,

00:06:50.610 --> 00:06:54.270
and you could add listeners
to the HTML input elements,

00:06:54.270 --> 00:06:56.780
and wire all this up
together with some glue code.

00:06:56.780 --> 00:06:59.200
But if you don't want
to do that to connect

00:06:59.200 --> 00:07:01.590
the strings to
the text boxes, we

00:07:01.590 --> 00:07:04.320
provide this clever utility
called the string binder.

00:07:04.320 --> 00:07:07.410
And what a string binder
does is it automatically

00:07:07.410 --> 00:07:10.670
wires up all the events for you
between a collaborative string

00:07:10.670 --> 00:07:11.690
and an input element.

00:07:11.690 --> 00:07:14.672
So all we do is call
bindString and provide

00:07:14.672 --> 00:07:16.630
the collaborative string
and the input element,

00:07:16.630 --> 00:07:19.400
and we wire up all the events
and all the collaboration

00:07:19.400 --> 00:07:20.720
works automatically.

00:07:20.720 --> 00:07:23.590
But there's one thing we need
to do in addition to making

00:07:23.590 --> 00:07:25.200
the text boxes
work, and that's we

00:07:25.200 --> 00:07:28.149
need to make the little
preview image update.

00:07:28.149 --> 00:07:29.690
And to make the
preview image update,

00:07:29.690 --> 00:07:31.856
we want it to update when
anything in the data model

00:07:31.856 --> 00:07:32.620
changes.

00:07:32.620 --> 00:07:34.510
And to do that we're
going to use something

00:07:34.510 --> 00:07:36.490
called an object
change event listener.

00:07:36.490 --> 00:07:38.640
And an object change
listener is just

00:07:38.640 --> 00:07:41.700
a listener that fires
any time an object

00:07:41.700 --> 00:07:43.610
or any of its children change.

00:07:43.610 --> 00:07:46.070
And in our case, we're
going to add it to the root.

00:07:46.070 --> 00:07:48.590
And by adding it to the
root, what we're doing is

00:07:48.590 --> 00:07:51.270
we're making a listener
that fires anytime

00:07:51.270 --> 00:07:53.460
anything in the
data model changes.

00:07:53.460 --> 00:07:56.090
Now all we have to do is update
our little preview image.

00:07:56.090 --> 00:07:56.840
And that's it.

00:07:56.840 --> 00:07:59.930
We've built a collaborative
meme editor app.

00:07:59.930 --> 00:08:02.160
So if you're ready to
get started writing code,

00:08:02.160 --> 00:08:06.530
we have a great quick start
guide on our developer web page

00:08:06.530 --> 00:08:10.110
where you can go through,
step by step, the actual code

00:08:10.110 --> 00:08:12.620
that it takes to make
a little demo app.

00:08:12.620 --> 00:08:14.390
And if you're interested
a little bit more

00:08:14.390 --> 00:08:17.450
about the technical detail of
how the Realtime API works,

00:08:17.450 --> 00:08:20.110
we have a great presentation
from Google I/O last year,

00:08:20.110 --> 00:08:23.270
in which we go through all the
conflict resolution and undo

00:08:23.270 --> 00:08:26.960
and things like that, in
great technical detail.

00:08:26.960 --> 00:08:29.140
Thank you very much.

