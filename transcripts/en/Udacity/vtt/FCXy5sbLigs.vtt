WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
So, let's build up to the answer in steps.

00:00:02.000 --> 00:00:05.000
We know that if n=1, it just returns a single node.

00:00:05.000 --> 00:00:07.000
If n=2, it's going to recursively generate

00:00:07.000 --> 00:00:10.000
a single node for G1, a single node for G2,

00:00:10.000 --> 00:00:12.000
then randomly choose nodes from those sets,

00:00:12.000 --> 00:00:15.000
which in this case are just the only nodes that are there, so it'll choose them,

00:00:15.000 --> 00:00:17.000
and then it connects them up.

00:00:17.000 --> 00:00:19.000
So, that's what n=2 looks like.

00:00:19.000 --> 00:00:21.000
For n=4, we have two n=2, right?

00:00:21.000 --> 00:00:23.000
G1 and G2 are both going to be an n=2 graph.

00:00:23.000 --> 00:00:25.000
Let me draw those.

00:00:25.000 --> 00:00:28.000
Then, it's going to randomly choose one of the nodes and one of the nodes

00:00:28.000 --> 00:00:29.000
and connect them up.

00:00:29.000 --> 00:00:31.000
So far, it looks kinda like a chain in all these cases.

00:00:31.000 --> 00:00:33.000
Let's go to the next case.

00:00:33.000 --> 00:00:35.000
Again, for n=8, it has to generate n=4 graphs,

00:00:35.000 --> 00:00:37.000
each of which has to generate a bunch of n/2 graphs,

00:00:37.000 --> 00:00:38.000
which all look like this.

00:00:38.000 --> 00:00:42.000
There's going to be some randomness about how they get connected up.

00:00:42.000 --> 00:00:44.000
So, maybe in one of the times we call it, we get something like this,

00:00:44.000 --> 00:00:46.000
and one of the times, we get something like this.

00:00:46.000 --> 00:00:50.000
Then, we connect randomly the two n=4 graphs to get the n=8 graph,

00:00:50.000 --> 00:00:52.000
and maybe that will be something like this.

00:00:52.000 --> 00:00:55.000
So, in this particularly case now, we don't have a chain anymore.

00:00:55.000 --> 00:00:57.000
We do, on the other hand, have a tree.

00:00:57.000 --> 00:01:00.000
And in fact, this property continues as we get bigger and bigger graphs.

00:01:00.000 --> 00:01:02.000
We're always connecting up some kind of tree structure

00:01:02.000 --> 00:01:05.000
with some other kind of tree structure. Here, I'll draw another one.

00:01:05.000 --> 00:01:07.000
And we connect up these two tree structures,

00:01:07.000 --> 00:01:09.000
and that just gives us a bigger tree structure.

00:01:09.000 --> 00:01:13.000
So, we get a nice, messy, recursively defined tree, but it's still a tree.

