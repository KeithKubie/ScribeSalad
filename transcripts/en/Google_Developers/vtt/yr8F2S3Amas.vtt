WEBVTT
Kind: captions
Language: en

00:00:00.499 --> 00:00:01.872
[BEEP]

00:00:01.872 --> 00:00:03.744
[MUSIC PLAYING]

00:00:06.552 --> 00:00:08.870
ANDREW: Hey, everybody I'm
Andrew from the Flutter

00:00:08.870 --> 00:00:10.100
Developer Relations team.

00:00:10.100 --> 00:00:11.000
With me is Filip.

00:00:11.000 --> 00:00:13.265
And today we're going
to do some live coding.

00:00:13.265 --> 00:00:14.720
And Filip--

00:00:14.720 --> 00:00:20.330
FILIP: Yeah, we'd like to just
live code a whole app, maybe

00:00:20.330 --> 00:00:21.290
in parts.

00:00:21.290 --> 00:00:26.180
We're basically going to
probably do a lot of bugs,

00:00:26.180 --> 00:00:27.950
be stumped on things.

00:00:27.950 --> 00:00:30.020
And I think that
that should be part

00:00:30.020 --> 00:00:32.360
of the experience
of the video so

00:00:32.360 --> 00:00:34.340
that you can see how
we hopefully get out

00:00:34.340 --> 00:00:37.016
of these [? big holes. ?]

00:00:37.016 --> 00:00:38.890
ANDREW: Yeah, much like
the people out there,

00:00:38.890 --> 00:00:40.456
we are very busy
and under-prepared.

00:00:40.456 --> 00:00:41.080
FILIP: Exactly.

00:00:41.080 --> 00:00:42.260
ANDREW: Yeah, all right.

00:00:42.260 --> 00:00:44.430
So Android Studio,
we got that open?

00:00:44.430 --> 00:00:46.370
FILIP: Yeah, well,
do you want to talk

00:00:46.370 --> 00:00:49.400
about what the app
should look like

00:00:49.400 --> 00:00:51.565
and how it should
be architected?

00:00:51.565 --> 00:00:53.190
ANDREW: Sure, yeah,
that's a good idea.

00:00:53.190 --> 00:00:55.340
We got a whiteboard.

00:00:55.340 --> 00:00:57.860
FILIP: If you're not familiar
with [? HackerOne ?] use,

00:00:57.860 --> 00:00:59.780
it's basically--

00:00:59.780 --> 00:01:00.750
what do you call it?

00:01:00.750 --> 00:01:02.390
It's a [? noose ?] app.

00:01:02.390 --> 00:01:05.630
People submit links.

00:01:05.630 --> 00:01:09.410
And these links are
presented as a list.

00:01:09.410 --> 00:01:13.240
And that list is stack ranked
according to some algorithm.

00:01:13.240 --> 00:01:19.500
And so what we're doing
today is very simple.

00:01:19.500 --> 00:01:22.460
We have a list of these
articles somewhere.

00:01:22.460 --> 00:01:25.460
And we just want to
make a pretty nice

00:01:25.460 --> 00:01:36.170
looking thing, an app for
Flutter that has the listings.

00:01:36.170 --> 00:01:39.820
The listing can be expanded
if you click on it.

00:01:39.820 --> 00:01:42.650
And it'll show you
the link, which

00:01:42.650 --> 00:01:45.280
will open a browser window.

00:01:45.280 --> 00:01:47.030
And it will show
you some stats maybe

00:01:47.030 --> 00:01:52.916
about the thing, so pretty easy
hopefully no big surprises.

00:01:52.916 --> 00:01:55.290
ANDREW: And a bunch of people
make apps like this, right?

00:01:55.290 --> 00:01:57.530
It's kind of like, it's
similar to To-Do on PC.

00:01:57.530 --> 00:01:59.930
FILIP: Exactly, this
is the new To-Do on PC,

00:01:59.930 --> 00:02:03.020
basically, what I hear.

00:02:03.020 --> 00:02:05.580
So yeah, so let's get coding.

00:02:05.580 --> 00:02:07.850
Going to start a
new Flutter project,

00:02:07.850 --> 00:02:09.470
and it's going to
be an application.

00:02:09.470 --> 00:02:13.430
And it's going to be
called hn_app, let's say.

00:02:13.430 --> 00:02:18.524
So Flutter is going and
getting the initial packages.

00:02:18.524 --> 00:02:19.940
ANDREW: So this
is Android Studio.

00:02:19.940 --> 00:02:23.007
You have the Flutter plugin
installed already, right?

00:02:23.007 --> 00:02:23.840
FILIP: Correct, yes.

00:02:23.840 --> 00:02:26.298
ANDREW: And that's just from
the regular old Android Studio

00:02:26.298 --> 00:02:26.900
preferences?

00:02:26.900 --> 00:02:27.400
FILIP: Yes.

00:02:27.400 --> 00:02:30.020
ANDREW: You go in and look
for Flutter, and there it is.

00:02:30.020 --> 00:02:32.900
FILIP: Correct,
OK, so what we're

00:02:32.900 --> 00:02:37.810
going to work with is probably
iOS simulator just because--

00:02:37.810 --> 00:02:39.740
I don't know.

00:02:39.740 --> 00:02:44.420
And so what we have when we
create a new app in Android

00:02:44.420 --> 00:02:50.720
Studio, a new Flutter app,
we get this application

00:02:50.720 --> 00:02:54.140
that most of you have probably
seen hundreds of times.

00:02:54.140 --> 00:02:57.410
So let's run it.

00:02:57.410 --> 00:03:02.210
This will do all the magic
that [? EXCO ?] does normally

00:03:02.210 --> 00:03:03.940
when launching an application.

00:03:03.940 --> 00:03:07.266
But then we'll be able to have
[INAUDIBLE] and everything.

00:03:07.266 --> 00:03:08.390
ANDREW: So you're loading--

00:03:08.390 --> 00:03:11.650
you just-- you're building
an iOS app in Android Studio.

00:03:11.650 --> 00:03:12.550
FILIP: That's right.

00:03:12.550 --> 00:03:15.840
ANDREW: OK, just checking.

00:03:15.840 --> 00:03:19.124
FILIP: You should be used
to this, by the way, but OK.

00:03:19.124 --> 00:03:20.040
ANDREW: There it goes.

00:03:23.370 --> 00:03:33.270
FILIP: So this is the
good old counter-app.

00:03:33.270 --> 00:03:37.650
So what I'll do first is that
I'll just get rid of everything

00:03:37.650 --> 00:03:39.880
that we don't need.

00:03:39.880 --> 00:03:43.320
We don't need this.

00:03:43.320 --> 00:03:47.631
We don't need this.

00:03:47.631 --> 00:03:49.350
We don't need the counter.

00:03:53.610 --> 00:04:00.630
We don't need this,
this, this, this.

00:04:00.630 --> 00:04:03.230
As you can see, it's
very well documented.

00:04:03.230 --> 00:04:04.250
We don't--

00:04:04.250 --> 00:04:10.190
ANDREW: Yeah, not bad for
out of the box app state.

00:04:10.190 --> 00:04:13.590
FILIP: And we don't need
a floating action button.

00:04:13.590 --> 00:04:14.930
So we're fine.

00:04:14.930 --> 00:04:16.680
ANDREW: We're not
posting anything, right?

00:04:16.680 --> 00:04:20.310
FILIP: So let's do reload.

00:04:20.310 --> 00:04:21.120
What do we get?

00:04:21.120 --> 00:04:23.260
OK, hello.

00:04:23.260 --> 00:04:25.800
ANDREW: So what just
happened when you did that?

00:04:25.800 --> 00:04:27.652
We should probably
talk about that.

00:04:27.652 --> 00:04:28.360
FILIP: We should?

00:04:28.360 --> 00:04:30.870
ANDREW: Yeah, because you
didn't fully recode that app.

00:04:30.870 --> 00:04:34.380
It only took like a second to
do what you just did, right?

00:04:34.380 --> 00:04:35.610
FILIP: That's right, yes.

00:04:35.610 --> 00:04:36.750
I did a full restart.

00:04:36.750 --> 00:04:40.080
It's not that hard to
reload because I knew that I

00:04:40.080 --> 00:04:44.030
deleted things, state things.

00:04:44.030 --> 00:04:47.130
But otherwise,
yeah, basically when

00:04:47.130 --> 00:04:52.457
it's launched in your simulator,
you get to do a bunch of stuff

00:04:52.457 --> 00:04:53.040
with your app.

00:04:53.040 --> 00:04:57.090
And the dot VM that's
running in the simulator

00:04:57.090 --> 00:05:02.070
now will just get the new
things and will update the app

00:05:02.070 --> 00:05:03.060
on the fly.

00:05:03.060 --> 00:05:05.000
So that's really
nice because both--

00:05:05.000 --> 00:05:08.860
I think we'll see
that as we go along.

00:05:08.860 --> 00:05:16.110
All right, so we cheated a
little bit because we prepared

00:05:16.110 --> 00:05:19.950
a list of articles
as if we already

00:05:19.950 --> 00:05:22.920
took it from the JSON API that
[? HackerOne ?] use provides.

00:05:22.920 --> 00:05:28.770
Just so-- we will probably
use some of the future videos

00:05:28.770 --> 00:05:32.580
to maybe show how
you would do this.

00:05:32.580 --> 00:05:35.100
But let's assume that
we already did the work,

00:05:35.100 --> 00:05:40.150
and we have the list of
articles, and it's loaded.

00:05:40.150 --> 00:05:44.310
So I have it over here.

00:05:44.310 --> 00:05:48.840
So we'll create a [INAUDIBLE].

00:05:48.840 --> 00:05:51.142
ANDREW: OK, so we have a
data class, a data object.

00:05:51.142 --> 00:05:53.100
And we got some mocked
up data that we can use.

00:05:53.100 --> 00:05:54.224
FILIP: That's correct, yes.

00:05:54.224 --> 00:05:56.000
ANDREW: To get the
UI going, perfect.

00:05:56.000 --> 00:05:59.280
FILIP: So Dart File.

00:05:59.280 --> 00:06:01.975
We'll call this Article.

00:06:07.260 --> 00:06:10.080
And so as you can see,
this is a very simple class

00:06:10.080 --> 00:06:13.350
that just has some--

00:06:13.350 --> 00:06:15.270
not methods-- fields.

00:06:15.270 --> 00:06:18.660
And it has a cost
constructor because we're--

00:06:18.660 --> 00:06:20.670
this is an immutable object.

00:06:20.670 --> 00:06:24.230
And then we have, what
I just cut basically,

00:06:24.230 --> 00:06:27.720
copied-pasted with
some RegEx magic

00:06:27.720 --> 00:06:29.740
from actual [? HackerOne ?] use.

00:06:29.740 --> 00:06:31.519
So this is very
current at this time.

00:06:31.519 --> 00:06:34.060
ANDREW: Yeah, everybody is going
to know when we filmed this.

00:06:34.060 --> 00:06:37.410
They'll go back and search
for these headlines.

00:06:37.410 --> 00:06:39.900
FILIP: And we have that.

00:06:39.900 --> 00:06:44.830
So we can import it
and try to show it.

00:06:44.830 --> 00:06:45.700
ANDREW: Cool.

00:06:45.700 --> 00:06:47.970
FILIP: So OK, import.

00:06:51.850 --> 00:06:52.350
Article.

00:06:55.580 --> 00:06:57.020
Let's try this.

00:06:57.020 --> 00:07:01.790
The easiest way is just
we have a list of Article.

00:07:01.790 --> 00:07:08.530
And it's Articles.

00:07:08.530 --> 00:07:09.960
This is ugly, but--

00:07:09.960 --> 00:07:10.710
ANDREW: That's OK.

00:07:10.710 --> 00:07:11.210
It's a mock.

00:07:11.210 --> 00:07:15.380
So the other file's
exporting the Articles list

00:07:15.380 --> 00:07:17.802
as articles, which
is just a global--

00:07:17.802 --> 00:07:19.760
a variable hanging out
in the globalized phase.

00:07:19.760 --> 00:07:22.480
FILIP: OK, we
could-- well, let's

00:07:22.480 --> 00:07:24.010
wait until
[? together. ?] We can

00:07:24.010 --> 00:07:28.840
make things more real and a
little bit harder on ourselves.

00:07:28.840 --> 00:07:30.010
But let's start with this.

00:07:30.010 --> 00:07:32.380
I think it's a good way.

00:07:32.380 --> 00:07:35.890
So this is a column
with children.

00:07:35.890 --> 00:07:39.310
We could intentionally
break the app, I think,

00:07:39.310 --> 00:07:40.910
now if we just did this.

00:07:40.910 --> 00:07:42.730
ANDREW: Why not?

00:07:42.730 --> 00:07:45.010
FILIP: So I'm just
going to-- instead

00:07:45.010 --> 00:07:48.580
of doing a column
of widgets, I'm

00:07:48.580 --> 00:07:54.160
going to do articles and map.

00:07:54.160 --> 00:07:57.010
And each article will
become its own widget.

00:07:57.010 --> 00:08:03.385
So article becomes
new Text, let's say.

00:08:03.385 --> 00:08:05.510
ANDREW: Yeah, just do a
text with the article title

00:08:05.510 --> 00:08:06.468
or something like that.

00:08:06.468 --> 00:08:12.190
FILIP: Article, they
call it text, right.

00:08:16.600 --> 00:08:19.800
Oh, and it's a list.

00:08:19.800 --> 00:08:20.690
ANDREW: There we go.

00:08:20.690 --> 00:08:28.410
FILIP: OK, so if
we start now, OK.

00:08:28.410 --> 00:08:31.190
So it actually works.

00:08:31.190 --> 00:08:32.390
I hope it didn't break.

00:08:35.000 --> 00:08:37.620
It should be-- so maybe
if we had more articles,

00:08:37.620 --> 00:08:38.250
I don't know.

00:08:38.250 --> 00:08:41.524
You definitely cannot
scroll with this.

00:08:41.524 --> 00:08:42.690
ANDREW: That's a good point.

00:08:42.690 --> 00:08:43.470
Do you want to take a second?

00:08:43.470 --> 00:08:45.370
Let's talk about the
structure of what we got here.

00:08:45.370 --> 00:08:46.050
FILIP: Yeah.

00:08:46.050 --> 00:08:48.389
ANDREW: OK, so we have
we have a build method.

00:08:48.389 --> 00:08:49.680
What class are we in right now?

00:08:49.680 --> 00:08:50.760
So it's--

00:08:50.760 --> 00:08:51.860
FILIP: This is the--

00:08:51.860 --> 00:08:54.290
OK, so this is the app.

00:08:54.290 --> 00:08:55.920
OK, so this is main.

00:08:55.920 --> 00:08:57.510
We start with main.

00:08:57.510 --> 00:09:01.380
We just call this
Flutter function

00:09:01.380 --> 00:09:05.980
that just calls, just runs
your main widget as an app.

00:09:05.980 --> 00:09:08.340
So your app, everything
in Flutter is a widget.

00:09:08.340 --> 00:09:09.640
Your app is a widget.

00:09:09.640 --> 00:09:12.690
So you have to say,
this is the main widget.

00:09:12.690 --> 00:09:14.840
So run app.

00:09:14.840 --> 00:09:18.330
My app doesn't really have
much except for Building.

00:09:18.330 --> 00:09:20.310
And then we have a Home Page.

00:09:20.310 --> 00:09:25.950
We wouldn't-- in theory, we
don't even have to have two

00:09:25.950 --> 00:09:26.980
widgets here.

00:09:26.980 --> 00:09:28.470
We could just have
the home page.

00:09:28.470 --> 00:09:30.840
But in later episodes
we'll have more than just

00:09:30.840 --> 00:09:32.407
on the home page.

00:09:32.407 --> 00:09:34.240
We'll have detail pages
and stuff like this.

00:09:34.240 --> 00:09:36.240
So it's a good way to start.

00:09:36.240 --> 00:09:39.570
And then we have the
state of the home page.

00:09:39.570 --> 00:09:42.570
And that has a build method.

00:09:42.570 --> 00:09:47.930
And that build method can, yes,
according to the current state,

00:09:47.930 --> 00:09:51.900
can draw the widget.

00:09:51.900 --> 00:09:53.970
ANDREW: OK, so let me
see if I followed this.

00:09:53.970 --> 00:09:57.870
We have a main method that
calls runApp on this app class

00:09:57.870 --> 00:09:58.800
that you made.

00:09:58.800 --> 00:10:01.439
And there was something called
a material app in there.

00:10:01.439 --> 00:10:01.980
FILIP: Right.

00:10:01.980 --> 00:10:04.020
ANDREW: What is that doing?

00:10:04.020 --> 00:10:06.030
FILIP: Yes, that's
again another widget.

00:10:06.030 --> 00:10:09.330
We can actually-- this is
nice because everything is

00:10:09.330 --> 00:10:11.872
in [? data. ?] So you
can go very much--

00:10:11.872 --> 00:10:13.330
ANDREW: So we have
source for this.

00:10:13.330 --> 00:10:13.590
FILIP: Yes.

00:10:13.590 --> 00:10:14.589
ANDREW: That's cool, OK.

00:10:14.589 --> 00:10:19.080
FILIP: So this--
so as you can see,

00:10:19.080 --> 00:10:23.190
my little app is a widget
that brings a lot of things

00:10:23.190 --> 00:10:24.730
together.

00:10:24.730 --> 00:10:30.330
It's basically like--
a convenience widget.

00:10:30.330 --> 00:10:36.500
Because if you went to
this and looked at the

00:10:36.500 --> 00:10:40.680
build method well, you'd
see that it's just basically

00:10:40.680 --> 00:10:42.810
a lot of widgets
inside each other.

00:10:42.810 --> 00:10:48.420
One thing about being a
framework full of widgets

00:10:48.420 --> 00:10:53.370
is what I think some people
call "extreme composition

00:10:53.370 --> 00:10:54.850
over inheritance."

00:10:54.850 --> 00:10:59.010
So it's like, if you want
to add behavior to anything,

00:10:59.010 --> 00:11:00.600
you just wrap it in a widget.

00:11:00.600 --> 00:11:02.460
You don't like add--

00:11:02.460 --> 00:11:04.800
you don't inherit anything
from anything else.

00:11:04.800 --> 00:11:11.370
So you get all these like
pretty deep [INAUDIBLE] trees

00:11:11.370 --> 00:11:12.520
of widgets.

00:11:12.520 --> 00:11:15.760
And together they create an app.

00:11:15.760 --> 00:11:17.010
So yeah, this is Material app.

00:11:17.010 --> 00:11:20.640
That Material app
has some cool things,

00:11:20.640 --> 00:11:24.370
like it's very
easy to do at home.

00:11:24.370 --> 00:11:27.292
It's easy to add things
like initial route.

00:11:28.462 --> 00:11:29.920
ANDREW: Wow, that's
a lot of stuff.

00:11:29.920 --> 00:11:32.284
FILIP: Yes, but we're
not going to use it.

00:11:32.284 --> 00:11:33.450
ANDREW: (LAUGHING) I'm glad.

00:11:36.660 --> 00:11:38.910
FILIP: And then you
go with a home page.

00:11:38.910 --> 00:11:40.440
And home page is--

00:11:40.440 --> 00:11:44.700
it doesn't-- it's
not a material thing.

00:11:44.700 --> 00:11:46.250
It's just a page.

00:11:46.250 --> 00:11:48.630
And in that page,
there is a scaffold,

00:11:48.630 --> 00:11:50.550
which is a material thing.

00:11:50.550 --> 00:11:53.130
Scaffold is basically
what you see here.

00:11:53.130 --> 00:11:56.280
And again scaffold has
a lot of nice things

00:11:56.280 --> 00:12:00.937
like it can have app bar,
which in our case is just text.

00:12:00.937 --> 00:12:03.270
ANDREW: So that's where the
title comes from at the top.

00:12:03.270 --> 00:12:05.040
FILIP: That's right, yes.

00:12:05.040 --> 00:12:07.090
Then we have the body obviously.

00:12:07.090 --> 00:12:10.830
But you can also have
floating action buttons.

00:12:10.830 --> 00:12:17.300
You can have footer buttons,
drawers from left and right--

00:12:17.300 --> 00:12:20.507
or I should say
from start and end.

00:12:20.507 --> 00:12:22.590
ANDREW: Start and end
depending on which language.

00:12:22.590 --> 00:12:27.270
FILIP: Yes, and
many other things,

00:12:27.270 --> 00:12:29.930
so yeah, so these
are all widgets.

00:12:29.930 --> 00:12:33.690
And what we're working on
now is basically just this.

00:12:33.690 --> 00:12:35.670
So we have this body.

00:12:35.670 --> 00:12:37.540
And in this body,
we have a center,

00:12:37.540 --> 00:12:39.500
which we don't need actually.

00:12:39.500 --> 00:12:41.820
Let's get rid of it.

00:12:41.820 --> 00:12:44.702
ANDREW: And it still
looks the same, OK.

00:12:44.702 --> 00:12:48.300
FILIP: Yeah because we are
centering a column that goes

00:12:48.300 --> 00:12:49.790
all the way from left to right.

00:12:49.790 --> 00:12:52.110
So it doesn't do
anything really.

00:12:52.110 --> 00:12:54.210
We would have to do this--

00:12:54.210 --> 00:13:00.593
we would have to center this
widget for this to be maybe--

00:13:00.593 --> 00:13:02.850
nope.

00:13:02.850 --> 00:13:04.108
See?

00:13:04.108 --> 00:13:06.127
I don't know.

00:13:06.127 --> 00:13:06.960
ANDREW: This is fun.

00:13:06.960 --> 00:13:09.030
[LAUGHING]

00:13:09.030 --> 00:13:12.782
FILIP: Maybe this one
is why, oh, yeah, OK.

00:13:12.782 --> 00:13:15.240
ANDREW: So the good news is
that because this thing reloads

00:13:15.240 --> 00:13:18.330
so quickly, we can just
mess around and figure out

00:13:18.330 --> 00:13:21.520
what works and just
keep saving our changes

00:13:21.520 --> 00:13:23.540
and causing it to reload
and see what happens.

00:13:23.540 --> 00:13:24.040
FILIP: Yes.

00:13:24.040 --> 00:13:25.310
ANDREW: OK.

00:13:25.310 --> 00:13:29.260
FILIP: So I think
what we want to do now

00:13:29.260 --> 00:13:33.370
is to start working
on these items, right?

00:13:33.370 --> 00:13:35.890
So right now we are just
creating a text widget

00:13:35.890 --> 00:13:38.720
for them, which is
not very exciting.

00:13:38.720 --> 00:13:42.190
So basically all
this episode we'll

00:13:42.190 --> 00:13:47.830
just spend on this few lines,
on this one line right now.

00:13:47.830 --> 00:13:53.260
Let me create a build item.

00:13:53.260 --> 00:13:55.510
Create a method.

00:13:55.510 --> 00:14:02.024
And so build item
will create a widget.

00:14:02.024 --> 00:14:02.940
ANDREW: Wow, it just--

00:14:02.940 --> 00:14:04.770
so it knew the
signature for the method

00:14:04.770 --> 00:14:07.750
based on what you were
using with math there.

00:14:07.750 --> 00:14:08.850
That is pretty slick.

00:14:08.850 --> 00:14:11.130
FILIP: Yes, I like that.

00:14:11.130 --> 00:14:14.470
So we can just do this.

00:14:14.470 --> 00:14:15.460
How are we doing it?

00:14:15.460 --> 00:14:22.080
This now, and now [INAUDIBLE].

00:14:22.080 --> 00:14:23.330
Oh, is this still--

00:14:23.330 --> 00:14:24.630
[INTERPOSING VOICES]

00:14:24.630 --> 00:14:25.830
ANDREW: Green of death.

00:14:25.830 --> 00:14:27.429
FILIP: Yeah, OK,
so this is cool.

00:14:27.429 --> 00:14:27.970
This is cool.

00:14:27.970 --> 00:14:30.970
I actually wanted to
do this because see?

00:14:30.970 --> 00:14:35.130
We were in an error state.

00:14:35.130 --> 00:14:37.650
And I recovered from this.

00:14:37.650 --> 00:14:44.580
And I'll just run [? safe. ?]
And it'll hot reload.

00:14:44.580 --> 00:14:47.010
And if we were in
any kind of state,

00:14:47.010 --> 00:14:50.910
as in like we had something in
our cart or we were in a sub--

00:14:53.530 --> 00:14:57.722
screen somewhere, it would
just recover it there,

00:14:57.722 --> 00:14:58.930
which I think is pretty cool.

00:14:58.930 --> 00:15:01.890
Because you can screw up.

00:15:01.890 --> 00:15:04.950
It will throw all
these errors at you.

00:15:04.950 --> 00:15:06.660
But it will still
keep the state.

00:15:06.660 --> 00:15:10.890
And if you hot reload,
you get back to it.

00:15:10.890 --> 00:15:20.130
So for example, if
the text starts with--

00:15:24.630 --> 00:15:32.010
let's say, data, return null.

00:15:36.630 --> 00:15:38.520
ANDREW: So you just
intentionally--

00:15:38.520 --> 00:15:41.040
FILIP: Yeah, I'm trying
to intentionally break

00:15:41.040 --> 00:15:42.630
just one of these.

00:15:42.630 --> 00:15:44.160
And it doesn't let me.

00:15:50.070 --> 00:15:54.540
Yeah, it knows that I
cannot [INAUDIBLE] here.

00:15:54.540 --> 00:15:56.280
How do we break
it so that it's--

00:15:59.460 --> 00:16:02.450
ANDREW: Would you need
separate build methods up here?

00:16:02.450 --> 00:16:06.214
Since you're doing one build,
it can only break once.

00:16:06.214 --> 00:16:07.630
Then it breaks the
whole way, or--

00:16:10.400 --> 00:16:12.400
so are you saying that
under some circumstances,

00:16:12.400 --> 00:16:13.950
you'll have like
one widget broken?

00:16:13.950 --> 00:16:15.450
And the rest of the
UI will look OK?

00:16:15.450 --> 00:16:17.734
FILIP: Yeah, that's definitely
something that happens.

00:16:17.734 --> 00:16:19.150
But I don't know
how to do it now.

00:16:19.150 --> 00:16:21.066
ANDREW: I'm sure we'll
have plenty of chances,

00:16:21.066 --> 00:16:24.100
I assume, to screw this up in
all sorts of wonderful ways.

00:16:24.100 --> 00:16:26.490
FILIP: All right, so
back to back to business.

00:16:26.490 --> 00:16:30.760
I'm just-- article--

00:16:30.760 --> 00:16:32.410
so how do we make this prettier?

00:16:32.410 --> 00:16:34.864
This is nice, maybe not so nice.

00:16:34.864 --> 00:16:36.780
ANDREW: The data is
technically on the screen.

00:16:37.345 --> 00:16:41.290
FILIP: Yeah, I kind of
hoped-- at the start,

00:16:41.290 --> 00:16:44.890
I hoped that just having
column here is a bad idea.

00:16:44.890 --> 00:16:47.210
And it is a bad idea
because you cannot scroll.

00:16:47.210 --> 00:16:48.760
You cannot do anything.

00:16:51.690 --> 00:16:55.500
Actually maybe I can make
it break a little bit.

00:16:55.500 --> 00:16:56.000
I'm sorry.

00:16:56.000 --> 00:16:57.791
I'm just [? in love with ?]
breaking thing.

00:16:57.791 --> 00:17:02.275
So let's do style.

00:17:07.300 --> 00:17:13.000
And font size is going
to be something big.

00:17:13.000 --> 00:17:13.790
Ah, thank you.

00:17:14.730 --> 00:17:16.060
ANDREW: Yeah, what is that?

00:17:16.060 --> 00:17:18.400
FILIP: All right,
so we made the text

00:17:18.400 --> 00:17:22.599
so big that we are actually
getting over the allocated

00:17:22.599 --> 00:17:27.160
space of our body.

00:17:27.160 --> 00:17:29.800
And that's because
we have a Column.

00:17:29.800 --> 00:17:33.310
And Column doesn't support
being scrollable or anything

00:17:33.310 --> 00:17:34.180
like that.

00:17:34.180 --> 00:17:39.670
So Flutter helpfully-- this is
a [? T-bot build ?] So helpfully

00:17:39.670 --> 00:17:41.810
Flutter says, hey.

00:17:41.810 --> 00:17:45.040
You're trying to render
something that smaller--

00:17:47.550 --> 00:17:49.770
on a surface that is smaller.

00:17:49.770 --> 00:17:53.360
So I'm going to give you these
things that basically tell you,

00:17:53.360 --> 00:17:53.860
hey.

00:17:53.860 --> 00:17:56.920
You're overreaching
in this direction.

00:17:56.920 --> 00:17:58.880
You probably want
something else in Column.

00:17:59.790 --> 00:18:02.610
ANDREW: Then did something
pop up in the console as well?

00:18:03.957 --> 00:18:05.290
FILIP: Sorry for the small text.

00:18:05.290 --> 00:18:09.360
But basically this is
explaining what happened.

00:18:09.360 --> 00:18:12.017
ANDREW: That's a long
error message, nice.

00:18:12.017 --> 00:18:12.850
FILIP: Which I love.

00:18:15.820 --> 00:18:23.620
Let's fix this by
maybe using a widget

00:18:23.620 --> 00:18:27.720
that does scroll,
something that--

00:18:27.720 --> 00:18:30.220
ANDREW: There's a widget for
everything including scrolling.

00:18:30.220 --> 00:18:36.220
FILIP: Yes, OK, how about we use
a widget that is a list view?

00:18:36.220 --> 00:18:37.120
ANDREW: OK.

00:18:37.120 --> 00:18:39.520
FILIP: Because we have a list.

00:18:39.520 --> 00:18:42.100
And we have a--

00:18:42.100 --> 00:18:44.330
we want to view it.

00:18:44.330 --> 00:18:45.470
And there we go.

00:18:45.470 --> 00:18:47.822
We have a list view.

00:18:47.822 --> 00:18:48.780
ANDREW: That was quick.

00:18:51.300 --> 00:18:53.200
FILIP: What other things do we--

00:18:53.200 --> 00:18:56.680
as you can see, you
can do [INAUDIBLE],,

00:18:56.680 --> 00:18:59.270
this can be-- the access
can be horizontal.

00:18:59.270 --> 00:19:04.270
So we can actually scroll
to the left and right.

00:19:04.270 --> 00:19:07.660
And the physics can be
custom and stuff like this.

00:19:07.660 --> 00:19:09.190
But let's not do this.

00:19:09.190 --> 00:19:14.660
Let's actually work with
the items themselves.

00:19:14.660 --> 00:19:15.700
So what do you--

00:19:15.700 --> 00:19:18.660
Andrew, what do you not
like about this list?

00:19:21.290 --> 00:19:23.710
ANDREW: Well, I have no
idea where one thing starts

00:19:23.710 --> 00:19:24.930
and another thing ends.

00:19:24.930 --> 00:19:26.710
That would be one thing.

00:19:26.710 --> 00:19:30.340
FILIP: So we might want
to do padding maybe?

00:19:30.340 --> 00:19:31.840
ANDREW: Yeah, just
a little, I mean,

00:19:31.840 --> 00:19:33.780
that would certainly
set them apart, right?

00:19:33.780 --> 00:19:35.255
FILIP: Oh look, padding.

00:19:35.255 --> 00:19:36.255
ANDREW: Oh, that's cool.

00:19:36.255 --> 00:19:38.080
How did you get that to come up?

00:19:38.080 --> 00:19:40.840
FILIP: Alt-Enter.

00:19:40.840 --> 00:19:42.115
So we have some padding.

00:19:42.115 --> 00:19:45.070
We could do more.

00:19:45.070 --> 00:19:45.760
Let me--

00:19:45.760 --> 00:19:47.327
ANDREW: So padding
is a widget too.

00:19:47.327 --> 00:19:48.160
FILIP: That's right.

00:19:50.837 --> 00:19:51.670
ANDREW: Interesting.

00:19:51.670 --> 00:19:53.176
FILIP: Is this better?

00:19:53.176 --> 00:19:54.160
I don't know.

00:19:54.160 --> 00:19:58.120
ANDREW: Yeah, they're
like distinct things.

00:19:58.120 --> 00:20:02.110
FILIP: We also probably
want to show more than just

00:20:02.110 --> 00:20:06.040
actual name, right?

00:20:06.040 --> 00:20:11.290
So for that we have
another widget.

00:20:11.290 --> 00:20:16.700
And that is called ListTile.

00:20:16.700 --> 00:20:18.250
I think that's the name.

00:20:24.070 --> 00:20:25.840
And it has Title.

00:20:29.730 --> 00:20:34.570
So this wasn't that
big of a difference.

00:20:34.570 --> 00:20:39.526
But the thing is that ListTile
has other cool things like--

00:20:39.526 --> 00:20:42.906
oh, let me [? reload ?] this.

00:20:42.906 --> 00:20:50.070
Like subtitles, which would be
maybe the number of comments.

00:20:50.070 --> 00:20:53.580
ANDREW: Yeah, I guess we
could start with that, sure.

00:20:53.580 --> 00:21:02.330
FILIP: So Article
comments count comments.

00:21:02.330 --> 00:21:03.950
Oh, and this is--

00:21:03.950 --> 00:21:06.150
so Title wants a text.

00:21:06.150 --> 00:21:10.180
The cool thing is that so
at first it's infuriating.

00:21:10.180 --> 00:21:13.780
You're like, I just want to
add text to the subtitle.

00:21:13.780 --> 00:21:15.660
But then you realize, wait.

00:21:15.660 --> 00:21:20.230
So if Subtitle wants a widget,
which it does want a widget,

00:21:20.230 --> 00:21:24.850
then I can actually add
anything to the subtitle.

00:21:24.850 --> 00:21:27.360
So your subtitle can be a meme.

00:21:27.360 --> 00:21:33.491
Or your subtitle can be a new,
small app with small scaffold.

00:21:33.491 --> 00:21:35.990
ANDREW: So you can just give
it a widget, whatever you want?

00:21:35.990 --> 00:21:39.720
FILIP: Yes, so let's start
with something like that.

00:21:42.940 --> 00:21:44.219
OK, that works.

00:21:44.219 --> 00:21:44.802
Do you see it?

00:21:44.802 --> 00:21:46.560
ANDREW: Yeah, it's pretty cool.

00:21:46.560 --> 00:21:49.300
What about if I tap
on one of these?

00:21:49.300 --> 00:21:51.450
Say I want to actually
pull one of these up.

00:21:51.450 --> 00:21:54.257
It's cool to look at the
tiles and stuff like that.

00:21:54.257 --> 00:21:55.840
But what if I wanted
to actually exit?

00:21:55.840 --> 00:21:57.100
How would we do that?

00:21:57.100 --> 00:21:58.470
FILIP: So we have onTap here--

00:21:58.470 --> 00:22:00.170
onTap.

00:22:00.170 --> 00:22:03.170
onTap is just--

00:22:03.170 --> 00:22:05.190
ANDREW: Is that just a
property of the ListTile?

00:22:05.190 --> 00:22:09.840
FILIP: Yes, so anything can
be clickable if you again

00:22:09.840 --> 00:22:13.110
wrap it in a widget that is--

00:22:13.110 --> 00:22:14.520
I don't know how it's called.

00:22:14.520 --> 00:22:20.400
But I know the material way is
to use what they call Inkwell.

00:22:20.400 --> 00:22:22.440
So Inkwell is another widget.

00:22:22.440 --> 00:22:26.640
And Inkwell is cool because
it not only gives you onTap

00:22:26.640 --> 00:22:30.140
but it also automatically
creates the cool material--

00:22:30.140 --> 00:22:31.390
ANDREW: Oh, the splashy thing.

00:22:31.390 --> 00:22:32.460
FILIP: --effect, yeah,
the splashy the thing.

00:22:32.670 --> 00:22:34.920
ANDREW: OK, I'm sure that's
the technical term for it.

00:22:34.920 --> 00:22:35.620
FILIP: Oh, yeah, splashy thing.

00:22:35.620 --> 00:22:36.703
ANDREW: The splashy thing.

00:22:36.703 --> 00:22:40.430
FILIP: So we're not going
to do-- well, I mean,

00:22:40.430 --> 00:22:43.900
ListTile takes care of all that.

00:22:43.900 --> 00:22:49.930
So even if I don't do anything
here, now we can tap things.

00:22:49.930 --> 00:22:52.680
And it'll do the right thing.

00:22:55.290 --> 00:22:57.160
But we can actually do things.

00:22:57.160 --> 00:23:01.510
So we want to
launch a URL, right?

00:23:01.510 --> 00:23:04.170
And so this is--

00:23:04.170 --> 00:23:06.930
because we are
building an app that

00:23:06.930 --> 00:23:11.170
will work on both
iOS and Android,

00:23:11.170 --> 00:23:14.550
we want to use something
that will work in both.

00:23:14.550 --> 00:23:21.360
And for that reason at least
I know about a library--

00:23:21.360 --> 00:23:24.090
within FireWorld
we call Plugins--

00:23:24.090 --> 00:23:28.200
that will work for
you in that respect.

00:23:28.200 --> 00:23:31.050
So basically we're
going to import

00:23:31.050 --> 00:23:34.500
a plugin from our
package repository, which

00:23:34.500 --> 00:23:35.730
we'll show you.

00:23:35.730 --> 00:23:39.520
And then we'll come back to
this and just use that plugin

00:23:39.520 --> 00:23:42.600
to open things in
whatever browser

00:23:42.600 --> 00:23:44.760
you have installed
on whatever platform

00:23:44.760 --> 00:23:47.130
that you are running this on.

00:23:47.130 --> 00:23:53.470
So that package is
called URL Launcher.

00:23:53.470 --> 00:23:55.110
ANDREW: So what
did you just open?

00:23:55.110 --> 00:23:56.580
That's a new file, right?

00:23:56.580 --> 00:24:01.050
FILIP: Yes, pubspec, do you
want to talk about this?

00:24:01.050 --> 00:24:02.620
[LAUGHTER]

00:24:02.620 --> 00:24:03.120
No, I can.

00:24:03.120 --> 00:24:05.286
ANDREW: I'm happy to be the
person asking questions.

00:24:05.286 --> 00:24:07.230
FILIP: Yeah, I know.

00:24:07.230 --> 00:24:09.840
OK, so this is pubspec.yaml.

00:24:09.840 --> 00:24:14.190
This is the file
where you basically

00:24:14.190 --> 00:24:17.650
configure a lot of
things around your app.

00:24:17.650 --> 00:24:20.280
This is the same
file that Dart uses.

00:24:20.280 --> 00:24:22.590
Flutter uses it.

00:24:22.590 --> 00:24:27.750
So there are things that
are in every pop spec.

00:24:27.750 --> 00:24:31.420
And probably the most
important is the dependencies.

00:24:31.420 --> 00:24:34.060
I would just--
basically you just say,

00:24:34.060 --> 00:24:36.632
if you know what you're doing--

00:24:36.632 --> 00:24:38.340
let's say we don't
know what we're doing.

00:24:38.340 --> 00:24:39.050
And let's say--

00:24:39.050 --> 00:24:40.383
ANDREW: A reasonable assumption.

00:24:40.383 --> 00:24:44.280
FILIP: Yes, so if you don't
know what you're doing,

00:24:44.280 --> 00:24:47.685
you go to Flutter packages.

00:24:50.310 --> 00:24:52.440
And you land here.

00:24:52.440 --> 00:24:53.460
And you're like, OK.

00:24:53.460 --> 00:24:55.920
I want to watch URLs.

00:24:55.920 --> 00:24:58.700
And first of all, you'll see--

00:24:58.700 --> 00:25:01.310
ANDREW: So do a lot of
other people, it turns out.

00:25:01.310 --> 00:25:03.210
FILIP: But let's just open it.

00:25:03.210 --> 00:25:09.390
So this is basically
all you need to know

00:25:09.390 --> 00:25:12.840
about that particular package.

00:25:12.840 --> 00:25:16.050
It has changelog example.

00:25:16.050 --> 00:25:17.160
It has installing.

00:25:17.160 --> 00:25:20.160
And basically what installing of
every package on pub tells you,

00:25:20.160 --> 00:25:23.700
it's just, go to a
pubspec.yaml file.

00:25:23.700 --> 00:25:26.250
Go to dependencies at this one.

00:25:26.250 --> 00:25:27.899
So that's what
we're going to do.

00:25:27.899 --> 00:25:29.440
ANDREW: So just put
this-- this would

00:25:29.440 --> 00:25:31.890
be like updating your Gradle
file in an Android app

00:25:31.890 --> 00:25:35.570
or dropping it on a CocoaPod,
something like that.

00:25:35.570 --> 00:25:39.090
FILIP: Yep, you can
just do a Packages Get.

00:25:39.090 --> 00:25:42.029
That's going to
install it hopefully--

00:25:46.620 --> 00:25:49.100
ANDREW: You lied to
us, Flutter Packages.

00:25:49.100 --> 00:25:50.889
FILIP: You know what?

00:25:50.889 --> 00:25:52.750
I don't have time for this.

00:25:56.750 --> 00:26:02.000
It might be that 3.0 depends on
the latest version of Flutter,

00:26:02.000 --> 00:26:04.100
which I don't have installed
because I'm on a beta

00:26:04.100 --> 00:26:07.146
because I don't want everything
to come up in flames.

00:26:07.146 --> 00:26:09.770
ANDREW: You're on a stable beta
version, not the bleeding edge.

00:26:09.770 --> 00:26:10.700
OK, that makes sense.

00:26:12.275 --> 00:26:15.890
FILIP: So we now
have URL Launcher.

00:26:15.890 --> 00:26:18.630
Let's look at the example here.

00:26:18.630 --> 00:26:20.540
url_launcher.

00:26:20.540 --> 00:26:26.955
OK, so it has two
methods basically--

00:26:26.955 --> 00:26:29.090
not methods but functions.

00:26:29.090 --> 00:26:32.390
One is canLaunch,
which basically

00:26:32.390 --> 00:26:36.500
checks if you're ready for this,
if on the platform that you're

00:26:36.500 --> 00:26:39.560
using you can launch
this kind of URL.

00:26:39.560 --> 00:26:45.890
Remember, URL can be more
things than just http or https.

00:26:45.890 --> 00:26:47.670
So let's do that.

00:26:47.670 --> 00:26:49.760
So we go back to Main.

00:26:49.760 --> 00:26:51.810
And we are--

00:26:51.810 --> 00:26:55.034
ANDREW: We got to
probably import it right?

00:26:55.034 --> 00:26:55.950
FILIP: Import package.

00:27:07.620 --> 00:27:10.848
OK, and we do--

00:27:10.848 --> 00:27:13.290
oh, wait.

00:27:13.290 --> 00:27:16.150
We don't have the
URL in this mock.

00:27:16.150 --> 00:27:17.260
We have mock data.

00:27:17.260 --> 00:27:20.920
And we only have the domain, so
we'll have to go around this,

00:27:20.920 --> 00:27:22.110
but anyway.

00:27:22.110 --> 00:27:24.090
ANDREW: Do you want to
just add a dummy URL

00:27:24.090 --> 00:27:26.300
to each one real quick?

00:27:26.300 --> 00:27:28.027
[INTERPOSING VOICES]

00:27:28.027 --> 00:27:29.610
FILIP: We do have
the domain, so we do

00:27:29.610 --> 00:27:34.450
we can do HTTP and the domain.

00:27:34.450 --> 00:27:35.890
Let's just-- yeah.

00:27:35.890 --> 00:27:36.910
ANDREW: Sure.

00:27:36.910 --> 00:27:42.490
FILIP: And this is
the article domain.

00:27:42.490 --> 00:27:43.450
That's very helpful.

00:27:43.450 --> 00:27:51.820
So now canLaunch, if you
go to the info about this--

00:27:51.820 --> 00:27:53.650
wait, no.

00:27:53.650 --> 00:27:54.810
I want canLaunch.

00:27:54.810 --> 00:27:58.250
Anyway, so canLaunch
will give you back

00:27:58.250 --> 00:28:04.900
a future of [? bool. ?]
If Can Launch--

00:28:04.900 --> 00:28:06.570
ANDREW: If is a
synchronous statement.

00:28:06.570 --> 00:28:08.236
You can't deal with
the future in there.

00:28:08.236 --> 00:28:11.230
FILIP: So the reason why
canLaunch gives you a future is

00:28:11.230 --> 00:28:16.930
because it could take some time
before it knows that you can

00:28:16.930 --> 00:28:19.420
or cannot launch this URL.

00:28:19.420 --> 00:28:22.540
So we need to do
this asynchronously.

00:28:22.540 --> 00:28:24.970
Let's see if this works.

00:28:24.970 --> 00:28:28.690
Async/await is something
that [? that ?] can do.

00:28:28.690 --> 00:28:30.190
And you can basically--

00:28:30.190 --> 00:28:33.880
whenever you have a future
and you want to wait for it,

00:28:33.880 --> 00:28:35.260
you do await.

00:28:35.260 --> 00:28:36.370
So now we're like--

00:28:39.370 --> 00:28:43.900
this basically translates
to first, do canLaunch.

00:28:43.900 --> 00:28:46.940
Then wait for the [? bool ?]
that comes from there.

00:28:46.940 --> 00:28:52.870
And after that
happens, do this logic.

00:28:52.870 --> 00:28:55.610
ANDREW: And I can do all
that on my onTap method?

00:28:55.610 --> 00:28:56.530
FILIP: That's right.

00:28:56.530 --> 00:28:57.400
I hope so.

00:28:57.400 --> 00:28:59.350
ANDREW: We'll find out.

00:28:59.350 --> 00:29:03.940
FILIP: So we are awaiting
if we can launch.

00:29:03.940 --> 00:29:05.680
And if we can launch,
then we launch.

00:29:08.800 --> 00:29:17.470
OK, let's do-- let's
extract this to a fake URL.

00:29:22.910 --> 00:29:34.610
And this is also something
that brings back future.

00:29:34.610 --> 00:29:38.960
This time this is because
we might want to just wait

00:29:38.960 --> 00:29:40.725
until it opens or whatever.

00:29:40.725 --> 00:29:42.350
ANDREW: A music player
app or something

00:29:42.350 --> 00:29:44.308
like that, you might want
to know that you just

00:29:44.308 --> 00:29:45.740
left or something like that.

00:29:45.740 --> 00:29:48.060
FILIP: Maybe, I
don't actually know.

00:29:48.060 --> 00:29:51.980
But we have that now.

00:29:51.980 --> 00:29:56.550
And so we can see if that works.

00:29:56.550 --> 00:30:00.350
ANDREW: So I guess when you did
the update to the pubspec file,

00:30:00.350 --> 00:30:01.910
you had to bring
down a whole app.

00:30:01.910 --> 00:30:06.110
FILIP: That's right, a bit
of suspense, all right.

00:30:06.110 --> 00:30:08.000
So now--

00:30:08.000 --> 00:30:09.650
ANDREW: It looks
just like before.

00:30:09.650 --> 00:30:11.024
FILIP: It looks
just like before.

00:30:11.024 --> 00:30:13.160
We can still scroll.

00:30:13.160 --> 00:30:15.600
And then we can click.

00:30:15.600 --> 00:30:17.164
And it launches,
and it launches.

00:30:17.164 --> 00:30:18.080
ANDREW: There it goes.

00:30:18.080 --> 00:30:22.790
FILIP: OK, and this should
work in Android as well.

00:30:22.790 --> 00:30:24.970
Should we try it?

00:30:24.970 --> 00:30:28.395
ANDREW: Yeah, we haven't pulled
up an Android emulator yet,

00:30:28.395 --> 00:30:28.894
right?

00:30:31.381 --> 00:30:32.380
It looks like it might--

00:30:36.982 --> 00:30:38.190
FILIP: That's going to take a

00:30:38.190 --> 00:30:39.648
ANDREW: Yeah,
starting from scratch

00:30:39.648 --> 00:30:41.150
is going to take a minute.

00:30:41.150 --> 00:30:43.610
FILIP: Let's--

00:30:43.610 --> 00:30:44.640
ANDREW: Oh, wait.

00:30:44.640 --> 00:30:46.000
That was a very quick boot.

00:30:46.000 --> 00:30:46.870
FILIP: How do I--

00:30:46.870 --> 00:30:49.710
I have it on so that
it's always on top.

00:30:49.710 --> 00:30:53.340
And now I can't move
it for some reason.

00:30:53.340 --> 00:30:57.820
So I cannot-- let's do this.

00:30:57.820 --> 00:30:59.250
ANDREW: We're very
high tech here.

00:31:03.690 --> 00:31:07.170
FILIP: So this will go and
initialize the Grable things.

00:31:07.170 --> 00:31:09.885
So before we did
EXCO because we were

00:31:09.885 --> 00:31:11.160
running on this iOS simulator.

00:31:11.160 --> 00:31:13.770
And now we're trying
this in the Android.

00:31:16.555 --> 00:31:18.930
ANDREW: But the hot reload
stuff, all that works the same

00:31:18.930 --> 00:31:20.020
once it's up and running?

00:31:20.020 --> 00:31:20.680
FILIP: Yeah.

00:31:20.680 --> 00:31:24.150
ANDREW: OK, and we can have two.

00:31:24.150 --> 00:31:25.650
Have an emulator
now and a simulator

00:31:25.650 --> 00:31:26.608
going at the same time.

00:31:29.350 --> 00:31:31.315
FILIP: I'll [? pull ?]
[? my book. ?]

00:31:31.815 --> 00:31:34.148
ANDREW: I don't know if you're
picking up the fan sound.

00:31:34.148 --> 00:31:37.170
But the machine
is doing its best.

00:31:37.170 --> 00:31:39.660
FILIP: It's also
recording the screen.

00:31:39.660 --> 00:31:41.100
ANDREW: Oh, that's true.

00:31:41.100 --> 00:31:43.140
Go, go, go, go, go.

00:31:43.140 --> 00:31:43.790
There we go.

00:31:46.810 --> 00:31:51.890
FILIP: And we should have all
the cool things like scrolling.

00:31:51.890 --> 00:31:56.640
And maybe we should call
out how this is different.

00:31:56.640 --> 00:31:58.470
On iOS, it does this.

00:31:58.470 --> 00:32:01.650
ANDREW: So that pulls down.

00:32:01.650 --> 00:32:03.657
And on Android,
you get the shadow.

00:32:03.657 --> 00:32:04.740
And that's out of the box.

00:32:04.740 --> 00:32:05.550
You didn't do that.

00:32:05.550 --> 00:32:10.470
FILIP: Yes, and it opens
the browser, all right.

00:32:10.470 --> 00:32:12.720
ANDREW: And so here you get
the default browser, which

00:32:12.720 --> 00:32:14.070
is Chrome on the emulator.

00:32:14.070 --> 00:32:16.050
And you can get
Safari on the iOS.

00:32:16.050 --> 00:32:20.910
FILIP: Correct, all right, so
I think we can kill this one.

00:32:20.910 --> 00:32:24.905
Thank you, Android emulator.

00:32:24.905 --> 00:32:26.824
Thank you.

00:32:26.824 --> 00:32:28.990
ANDREW: Please take no
offense as we force quit you.

00:32:28.990 --> 00:32:33.370
FILIP: All right, maybe
it's time for us to--

00:32:33.370 --> 00:32:36.010
yeah, we're still here--

00:32:36.010 --> 00:32:39.280
show you some of the cool things
about the Flutter Inspector.

00:32:39.280 --> 00:32:42.400
So with Flutter
plugin into IntelliJ,

00:32:42.400 --> 00:32:45.100
you get Flutter
Inspector, which is

00:32:45.100 --> 00:32:47.340
something that let's you do--

00:32:47.340 --> 00:32:51.560
A, it gives you the
ability to change platform.

00:32:51.560 --> 00:32:53.980
So here we're running on iOS.

00:32:53.980 --> 00:32:58.150
But because Flutter is
drawing everything--

00:32:58.150 --> 00:32:59.410
it owns all the pixels--

00:32:59.410 --> 00:33:04.370
basically it can pretend
that it's on Android now.

00:33:04.370 --> 00:33:07.150
So what we can do is just this.

00:33:07.150 --> 00:33:10.660
And this doesn't look like much.

00:33:10.660 --> 00:33:11.702
But now you see that--

00:33:11.702 --> 00:33:13.160
ANDREW: There's
the Android shadow.

00:33:13.160 --> 00:33:19.090
FILIP: Yes, if we go back, you
can see that in an Android,

00:33:19.090 --> 00:33:22.180
you would have your
title on the left.

00:33:22.180 --> 00:33:26.680
On iOS by default you'd have
it in the center of the app,

00:33:26.680 --> 00:33:27.760
and so on and so forth.

00:33:27.760 --> 00:33:29.170
So that's nice.

00:33:29.170 --> 00:33:33.530
There's also things like
Performance Measurement.

00:33:33.530 --> 00:33:35.710
So you will see--

00:33:35.710 --> 00:33:39.070
do you skip frames?

00:33:39.070 --> 00:33:41.910
There are other things.

00:33:41.910 --> 00:33:44.470
Timeline, let's
not go into this.

00:33:44.470 --> 00:33:49.320
And also these helpful things
that will tell you, oh, there's

00:33:49.320 --> 00:33:51.010
padding here.

00:33:51.010 --> 00:33:56.260
This one is scrolling,
and so on and so on.

00:33:56.260 --> 00:34:01.660
And then you can go on and do--

00:34:01.660 --> 00:34:03.960
you can select things.

00:34:06.610 --> 00:34:10.210
Normally you'd be
able to select things.

00:34:10.210 --> 00:34:14.999
And of course you can
look at all the crazy.

00:34:14.999 --> 00:34:16.540
ANDREW: So those
are all the widgets.

00:34:16.540 --> 00:34:19.959
FILIP: Yes, you got it.

00:34:19.959 --> 00:34:20.500
ANDREW: Whoa.

00:34:20.500 --> 00:34:22.600
FILIP: And then you can
go to a Render [INAUDIBLE]

00:34:22.600 --> 00:34:25.420
to see in the
innards of Flutter,

00:34:25.420 --> 00:34:28.929
how this is all rendered.

00:34:28.929 --> 00:34:33.540
But again I think we'll go
into this in another episode

00:34:33.540 --> 00:34:35.524
maybe sometime in the future.

00:34:35.524 --> 00:34:36.690
ANDREW: Clearly a lot there.

00:34:36.690 --> 00:34:42.070
FILIP: Yeah, all
right, so I'm not happy

00:34:42.070 --> 00:34:45.770
because I don't know
if you know this.

00:34:45.770 --> 00:34:51.100
But whenever I clicked
anywhere, it just launched.

00:34:51.100 --> 00:34:57.340
So what I think we need to
do now is whenever you click

00:34:57.340 --> 00:35:00.250
on one of these things,
one of these item,

00:35:00.250 --> 00:35:04.210
we want to expand that
item and then show you

00:35:04.210 --> 00:35:06.890
a way to open the comments.

00:35:06.890 --> 00:35:08.494
ANDREW: Want to
whiteboard it on here?

00:35:08.494 --> 00:35:09.160
FILIP: Oh, yeah.

00:35:14.110 --> 00:35:14.770
Thank you.

00:35:14.770 --> 00:35:15.040
ANDREW: Go for it.

00:35:15.040 --> 00:35:16.690
FILIP: So you click on this one.

00:35:19.660 --> 00:35:23.560
Oh, it doesn't--
thank you, Andrew.

00:35:23.560 --> 00:35:24.730
ANDREW: I'm a very helpful--

00:35:27.530 --> 00:35:28.030
go for it.

00:35:28.030 --> 00:35:32.100
FILIP: So it's not really like
that, but if you click it,

00:35:32.100 --> 00:35:35.250
it gets longer.

00:35:35.250 --> 00:35:37.030
And it has some text.

00:35:37.030 --> 00:35:41.240
And maybe there's a button
or two for you to click.

00:35:41.240 --> 00:35:47.800
And then if you click it
again, it'll unexpand back.

00:35:47.800 --> 00:35:50.100
ANDREW: So how are
we going to do that?

00:35:50.100 --> 00:35:53.950
FILIP: Yeah, I think
there is a widget that

00:35:53.950 --> 00:35:56.950
lets you do exactly that.

00:35:56.950 --> 00:36:01.960
Also, we didn't talk about List
Builder and things like that.

00:36:01.960 --> 00:36:02.750
I wonder--

00:36:02.750 --> 00:36:04.060
ANDREW: Yeah, you're just
dumping a bunch of children

00:36:04.060 --> 00:36:05.110
in this list, right?

00:36:05.110 --> 00:36:05.943
FILIP: That's right.

00:36:05.943 --> 00:36:09.280
Yeah, so in a real
world, and again

00:36:09.280 --> 00:36:12.670
maybe that's just
another episode.

00:36:12.670 --> 00:36:17.080
But you'd want to have
infinite scrolling

00:36:17.080 --> 00:36:24.220
lists, which will just load
new things as you go along.

00:36:24.220 --> 00:36:26.980
This is obviously possible.

00:36:26.980 --> 00:36:29.470
Basically you use
the same thing here,

00:36:29.470 --> 00:36:31.870
but it's called
ListView Builder.

00:36:31.870 --> 00:36:35.610
And then you will provide
some other things.

00:36:35.610 --> 00:36:38.860
But now just to keep
it simple, we just

00:36:38.860 --> 00:36:42.730
have ListView that has a
finite amount of children,

00:36:42.730 --> 00:36:46.100
a list of children.

00:36:46.100 --> 00:36:51.544
But what I wanted to do
is the expandable file.

00:36:51.544 --> 00:36:54.850
Let's see, expandable--

00:36:54.850 --> 00:36:55.750
Expansion Dial.

00:36:58.950 --> 00:37:03.010
And so it gives us
different things.

00:37:03.010 --> 00:37:07.540
So we are going to do children.

00:37:07.540 --> 00:37:10.852
Let's just do--

00:37:10.852 --> 00:37:13.060
ANDREW: Want to just throw
some text widgets in there

00:37:13.060 --> 00:37:14.393
and just see what pops up where.

00:37:18.750 --> 00:37:23.382
FILIP: And we might
want to need this later.

00:37:23.382 --> 00:37:25.048
Is this-- yeah.

00:37:28.830 --> 00:37:30.960
Oh, it gives us a
little bit like this.

00:37:30.960 --> 00:37:33.430
ANDREW: And so you
get a little icon.

00:37:33.430 --> 00:37:36.400
OK, so title is the
part that's on the top.

00:37:36.400 --> 00:37:40.020
And children is
the expansion part.

00:37:40.020 --> 00:37:45.240
FILIP: And we can
obviously make this--

00:37:45.240 --> 00:37:47.470
ANDREW: Can you expand
more than one at a time?

00:37:47.470 --> 00:37:47.980
You can.

00:37:51.080 --> 00:37:53.300
Is it changing the text
color when you do that?

00:37:53.300 --> 00:37:55.600
FILIP: Yes, it is.

00:37:55.600 --> 00:37:57.294
So I wonder, do we need this?

00:37:57.294 --> 00:37:57.960
Do we want this?

00:37:57.960 --> 00:37:59.460
I think it's pretty cool.

00:37:59.460 --> 00:38:04.380
So let's stay with this.

00:38:04.380 --> 00:38:08.120
So this doesn't look good.

00:38:08.120 --> 00:38:12.720
So let's do a row.

00:38:12.720 --> 00:38:13.350
We need a row.

00:38:13.350 --> 00:38:17.070
We need a thing that tells
us the number of commands

00:38:17.070 --> 00:38:25.060
and then maybe gives us a button
that will launch the browser.

00:38:25.060 --> 00:38:29.070
So I wonder if that is already
doing a row because we're

00:38:29.070 --> 00:38:31.410
giving it children, not child.

00:38:31.410 --> 00:38:32.890
So let me just try it.

00:38:32.890 --> 00:38:35.330
ANDREW: Just give it two
texts, see where they come up.

00:38:35.330 --> 00:38:37.220
FILIP: Oh, it gives us a--

00:38:37.220 --> 00:38:38.095
oh, that makes sense.

00:38:38.095 --> 00:38:39.636
ANDREW: So it's a
column then, right?

00:38:39.636 --> 00:38:41.050
FILIP: Right, it's a column.

00:38:41.050 --> 00:38:43.240
It doesn't-- nothing
prevents us--

00:38:43.240 --> 00:38:45.340
again everything is a widget.

00:38:45.340 --> 00:38:53.524
So nothing prevents us to do
rep [? with row, ?] right?

00:38:53.524 --> 00:38:55.565
ANDREW: I gotta remember
that all Alt-Enter thing

00:38:55.565 --> 00:38:56.502
that you're doing.

00:38:56.502 --> 00:38:57.335
That's pretty slick.

00:38:57.335 --> 00:38:59.010
FILIP: Yeah, this is pretty fun.

00:38:59.010 --> 00:39:02.220
And then so we can
have a new button.

00:39:04.960 --> 00:39:07.299
Can we have a
button, flat button?

00:39:07.299 --> 00:39:09.090
ANDREW: I think there
are kinds of buttons.

00:39:09.090 --> 00:39:12.040
FILIP: Oh, material button,
oh, wow, now I can't--

00:39:12.040 --> 00:39:13.460
ANDREW: There's
a lot of buttons.

00:39:13.460 --> 00:39:16.793
FILIP: Dropdown [INAUDIBLE].

00:39:16.793 --> 00:39:19.770
[SIGHING] Choices,
choices, material button,

00:39:19.770 --> 00:39:24.967
OK, let's not do anything yet.

00:39:24.967 --> 00:39:26.800
ANDREW: So how do we
put text in the button?

00:39:26.800 --> 00:39:30.575
FILIP: Child, so most widgets
do have a child or children.

00:39:30.575 --> 00:39:31.950
ANDREW: So yet
again, you're just

00:39:31.950 --> 00:39:33.510
going to jam a text
widget into it.

00:39:33.510 --> 00:39:36.225
FILIP: Yes, open.

00:39:43.470 --> 00:39:46.560
All right, and that's--

00:39:46.560 --> 00:39:48.610
ANDREW: Can we give it a color?

00:39:48.610 --> 00:39:51.330
FILIP: Oh, sure, like
background color?

00:39:51.330 --> 00:39:55.267
ANDREW: Yeah, there was a theme
object up at the top, right?

00:39:55.267 --> 00:39:56.100
FILIP: That's right.

00:39:56.100 --> 00:39:58.380
So we can give it--

00:40:01.350 --> 00:40:03.164
what color do we want?

00:40:03.164 --> 00:40:05.280
Colors-- red.

00:40:05.280 --> 00:40:06.940
ANDREW: Sure.

00:40:06.940 --> 00:40:09.920
FILIP: Oh, yeah.

00:40:09.920 --> 00:40:13.760
ANDREW: Every article
gets a big, angry button.

00:40:13.760 --> 00:40:15.814
How about green?

00:40:15.814 --> 00:40:16.688
Green's a good color.

00:40:16.688 --> 00:40:17.460
Is there a green?

00:40:17.460 --> 00:40:18.001
There you go.

00:40:20.470 --> 00:40:25.920
FILIP: All right, OK, so
clearly we're not designers.

00:40:25.920 --> 00:40:28.570
ANDREW: Next episode.

00:40:28.570 --> 00:40:30.000
FILIP: All right, so this works.

00:40:30.000 --> 00:40:33.930
And also I don't love that
it's kind of squeezed here.

00:40:33.930 --> 00:40:36.197
ANDREW: Yeah, we don't
have as much padding.

00:40:36.197 --> 00:40:37.530
FILIP: Well, we can add padding.

00:40:37.530 --> 00:40:43.390
But we can also,
I think we can--

00:40:43.390 --> 00:40:46.930
MainAxisAlignment.

00:40:46.930 --> 00:40:48.690
And let's see what's--

00:40:48.690 --> 00:40:52.030
yeah, spaceAround maybe.

00:40:52.030 --> 00:40:53.100
ANDREW: Whoa.

00:40:53.100 --> 00:40:54.360
FILIP: Is that better?

00:40:54.360 --> 00:40:55.699
Oh, spaceBetween.

00:40:55.699 --> 00:40:57.240
ANDREW: So what is
MainAxisAlignment?

00:40:57.240 --> 00:40:58.580
That seems important here.

00:40:58.580 --> 00:41:02.210
FILIP: Yeah, so that's
basically-- that gives you--

00:41:02.210 --> 00:41:05.670
in this case, the row
gets the full width

00:41:05.670 --> 00:41:08.400
from this part to this part.

00:41:08.400 --> 00:41:10.680
ANDREW: So it expands to
fill whatever contains it.

00:41:10.680 --> 00:41:16.990
FILIP: Right, so by default you
have MainAxisAlignment.start,

00:41:16.990 --> 00:41:20.610
which just, in that space
you just start on the left

00:41:20.610 --> 00:41:22.950
or on the top or whatever.

00:41:22.950 --> 00:41:24.690
This is why it's--

00:41:24.690 --> 00:41:31.140
because MainAxisAlignment
for a row is horizontal.

00:41:31.140 --> 00:41:33.690
For a column it's vertical.

00:41:33.690 --> 00:41:35.580
ANDREW: So whichever
way you're expanding

00:41:35.580 --> 00:41:37.890
as you add items,
that's your main axis.

00:41:37.890 --> 00:41:40.620
FILIP: Yes, and then you
have cross axis, which

00:41:40.620 --> 00:41:42.130
is what's crossed to that.

00:41:42.130 --> 00:41:44.850
ANDREW: Perpendicular
to that, OK.

00:41:44.850 --> 00:41:48.390
FILIP: So this is useful
because I could change this

00:41:48.390 --> 00:41:51.060
into a column, and
it would still,

00:41:51.060 --> 00:41:53.560
I mean, it would look different.

00:41:57.100 --> 00:42:01.120
But it would still
take the same thing.

00:42:01.120 --> 00:42:02.965
And it would still--

00:42:02.965 --> 00:42:05.090
ANDREW: So now they're
jammed up at the top instead

00:42:05.090 --> 00:42:06.743
of jammed up at the left, OK.

00:42:06.743 --> 00:42:07.690
That makes sense.

00:42:07.690 --> 00:42:13.330
FILIP: So I think what
we want is either space

00:42:13.330 --> 00:42:15.910
between our space around.

00:42:20.260 --> 00:42:21.630
I think this looks good.

00:42:21.630 --> 00:42:23.094
Does it look good?

00:42:23.094 --> 00:42:25.510
ANDREW: What about just having
an icon instead of the word

00:42:25.510 --> 00:42:26.080
"open?"

00:42:26.080 --> 00:42:26.920
Can we do that?

00:42:26.920 --> 00:42:28.090
FILIP: Sure.

00:42:28.090 --> 00:42:31.090
ANDREW: Is there an icon for
"get out of here" or something?

00:42:31.090 --> 00:42:36.299
FILIP: Icon button,
which takes--

00:42:36.299 --> 00:42:37.840
ANDREW: Probably
has an icon property

00:42:37.840 --> 00:42:39.460
that's not getting set.

00:42:39.460 --> 00:42:44.500
FILIP: Yeah, so icon is--

00:42:44.500 --> 00:42:45.970
let's say, Launch.

00:42:45.970 --> 00:42:48.910
ANDREW: Oh, there you go.

00:42:48.910 --> 00:42:49.980
FILIP: New icon, sorry.

00:42:49.980 --> 00:42:53.890
I always forget, Icons.launch.

00:42:53.890 --> 00:42:56.710
Again Icon can be anything.

00:42:56.710 --> 00:42:59.290
And so we don't need this.

00:42:59.290 --> 00:42:59.940
This looks--

00:42:59.940 --> 00:43:00.840
ANDREW: Yeah,
that's pretty cool.

00:43:00.840 --> 00:43:02.090
FILIP: This looks pretty good.

00:43:02.090 --> 00:43:03.714
I don't think we need green.

00:43:09.740 --> 00:43:10.990
We're not designers.

00:43:10.990 --> 00:43:12.630
[LAUGHTER]

00:43:12.630 --> 00:43:14.275
So anyway so we have that.

00:43:14.275 --> 00:43:15.400
I think that's pretty cool.

00:43:15.400 --> 00:43:16.660
Oh, it doesn't do anything.

00:43:16.660 --> 00:43:17.701
ANDREW: Oh, that's right.

00:43:17.701 --> 00:43:20.760
We got, we have a
blank onPressed.

00:43:20.760 --> 00:43:22.230
FILIP: So let's do this.

00:43:28.110 --> 00:43:28.840
Oh, yeah.

00:43:32.130 --> 00:43:33.540
ANDREW: Yeah, that's crazy.

00:43:37.130 --> 00:43:40.280
FILIP: OK, so that works.

00:43:40.280 --> 00:43:44.630
Oh, the last thing that we
wanted to do today, I think,

00:43:44.630 --> 00:43:48.350
was to enable you to reload.

00:43:48.350 --> 00:43:50.910
So obviously if you read
[? HackerOne ?] use,

00:43:50.910 --> 00:43:54.150
you are reloading like
five times per minute.

00:43:54.150 --> 00:43:55.970
So we want to make it easy.

00:43:55.970 --> 00:43:59.120
And the usual way to do
this on a mobile device

00:43:59.120 --> 00:44:00.560
is to-- how do you call it?

00:44:00.560 --> 00:44:04.124
ANDREW: Swipe down
to pull to refresh.

00:44:04.124 --> 00:44:05.540
FILIP: And now
I'll need your help

00:44:05.540 --> 00:44:08.830
because I don't remember
what it's called.

00:44:08.830 --> 00:44:10.280
ANDREW: OK.

00:44:10.280 --> 00:44:12.350
FILIP: We can just--

00:44:12.350 --> 00:44:15.927
ANDREW: Fortunately we have
this research machine over here.

00:44:15.927 --> 00:44:16.760
FILIP: That's right.

00:44:16.760 --> 00:44:19.730
And it is connected to the
internet, this one as well.

00:44:19.730 --> 00:44:22.460
So let me try.

00:44:22.460 --> 00:44:24.050
I found it.

00:44:24.050 --> 00:44:28.040
So if Flutter has this
Flutter Gallery app,

00:44:28.040 --> 00:44:31.970
which tries to do
a lot of things

00:44:31.970 --> 00:44:33.920
and shows you how to do them.

00:44:33.920 --> 00:44:36.650
So this is available
and iOS, I think,

00:44:36.650 --> 00:44:39.560
and Android as well as a
downloadable app that's

00:44:39.560 --> 00:44:40.430
just there.

00:44:40.430 --> 00:44:45.440
But it's also-- the
whole app is open source.

00:44:45.440 --> 00:44:47.750
So you can look at
how they do things.

00:44:47.750 --> 00:44:50.660
And how they do
things is they use--

00:44:50.660 --> 00:44:54.869
for example for the
overscroll is here.

00:44:54.869 --> 00:44:56.410
ANDREW: Oh, it
appears to be a class.

00:44:57.035 --> 00:44:58.994
FILIP: Yeah.

00:44:58.994 --> 00:45:00.785
ANDREW: A widget that
supports the material

00:45:00.785 --> 00:45:03.860
"swipe to refresh" idiom.

00:45:03.860 --> 00:45:06.050
FILIP: Sounds like what we need.

00:45:06.050 --> 00:45:14.047
So we probably want to put
it here around the List View.

00:45:14.047 --> 00:45:14.880
ANDREW: Makes sense.

00:45:14.880 --> 00:45:18.410
FILIP: So Wrap RefreshIndicator.

00:45:18.410 --> 00:45:20.190
ANDREW: And there it is.

00:45:20.190 --> 00:45:24.640
FILIP: And it needs what?

00:45:24.640 --> 00:45:26.130
ANDREW: Child.

00:45:26.130 --> 00:45:27.992
FILIP: What is it?

00:45:27.992 --> 00:45:30.830
It's screaming about--
onRefresh is required.

00:45:30.830 --> 00:45:33.430
OK, so we do--

00:45:33.430 --> 00:45:35.390
ANDREW: So this thing
handles all the graphics,

00:45:35.390 --> 00:45:36.410
all that scrolling.

00:45:36.410 --> 00:45:38.480
And you just tell
it what to do when

00:45:38.480 --> 00:45:40.880
somebody pulls it to refresh.

00:45:40.880 --> 00:45:41.690
FILIP: Right.

00:45:41.690 --> 00:45:44.250
ANDREW: That's pretty slick.

00:45:44.250 --> 00:45:46.491
You just reassigned the
list to our mock data.

00:45:46.491 --> 00:45:46.990
FILIP: Yeah.

00:45:49.610 --> 00:45:50.450
You know what?

00:45:53.620 --> 00:45:56.120
ANDREW: Can you do like a toast
like on Android or something

00:45:56.120 --> 00:45:56.620
like that?

00:45:56.620 --> 00:45:58.735
FILIP: Yes, that's
what I'm going to do.

00:46:02.209 --> 00:46:04.250
ANDREW: There's now-- oh,
there's snack bars now.

00:46:04.250 --> 00:46:04.791
That's right.

00:46:04.791 --> 00:46:08.110
Toast is-- Snack Bar
is the new hotness.

00:46:08.110 --> 00:46:09.270
FILIP: Context will be--

00:46:09.270 --> 00:46:10.910
ANDREW: Are you going to
give it a text widget?

00:46:10.910 --> 00:46:12.868
Because that's just what
we do with everything.

00:46:12.868 --> 00:46:14.555
Everything gets a text widget.

00:46:14.555 --> 00:46:15.180
FILIP: Refresh.

00:46:29.460 --> 00:46:35.460
Maybe we need to somehow
tell it to not do this.

00:46:35.460 --> 00:46:36.190
Also it's async.

00:46:39.600 --> 00:46:43.030
Let me-- so a function that's
called when the user has

00:46:43.030 --> 00:46:45.720
direct the refresh indicator far
enough to demonstrate that they

00:46:45.720 --> 00:46:47.000
want the app to refresh.

00:46:47.000 --> 00:46:50.240
The return future must complete
when the refresh operation

00:46:50.240 --> 00:46:52.611
is finished.

00:46:52.611 --> 00:46:54.090
ANDREW: Return future, you say.

00:46:54.090 --> 00:46:55.703
FILIP: OK, so return.

00:46:59.400 --> 00:47:02.385
What does it need to finish?

00:47:02.385 --> 00:47:04.260
ANDREW: I'm just going
to look up an example.

00:47:04.260 --> 00:47:05.040
FILIP: Oh, no, OK.

00:47:07.820 --> 00:47:10.670
ANDREW: Name of
thing, word example,

00:47:10.670 --> 00:47:11.730
let's see what comes up.

00:47:23.010 --> 00:47:26.770
FILIP: Oh, we got--

00:47:29.505 --> 00:47:31.630
ANDREW: So I think it wants
you to return a future.

00:47:34.810 --> 00:47:36.280
And since we're
using mock data, we

00:47:36.280 --> 00:47:40.980
can't just steal one from the
return value of some http call,

00:47:40.980 --> 00:47:42.740
right?

00:47:42.740 --> 00:47:43.750
Or you could.

00:47:43.750 --> 00:47:46.280
You could just-- you want to
just make a call to Google.org

00:47:46.280 --> 00:47:46.870
real quick?

00:47:46.870 --> 00:47:49.330
FILIP: No, if you want--

00:47:49.330 --> 00:48:04.770
so we could just do return
new Future, delayed,

00:48:04.770 --> 00:48:10.744
and have a duration
of maybe a second.

00:48:10.744 --> 00:48:14.250
And what it's going to do is
basically exactly what we want.

00:48:16.139 --> 00:48:17.180
ANDREW: And there it was.

00:48:20.800 --> 00:48:23.630
So you made just a dummy future
that completes after a second.

00:48:23.630 --> 00:48:29.570
FILIP: Yes, and it needs-- it
doesn't want any value there.

00:48:29.570 --> 00:48:33.090
So it's a future of null.

00:48:33.090 --> 00:48:33.590
This one--

00:48:33.590 --> 00:48:35.798
ANDREW: Yeah, it just needs
to know when you're done.

00:48:35.798 --> 00:48:43.930
FILIP: Yeah, so what we
can do is we can async.

00:48:43.930 --> 00:48:51.470
And then we can do like,
Await that future first,

00:48:51.470 --> 00:48:53.870
just to be like, look like
we're doing something,

00:48:53.870 --> 00:49:02.464
and then we can remove.

00:49:02.464 --> 00:49:04.130
ANDREW: Want to just
pull the first one?

00:49:04.130 --> 00:49:04.790
That way you could see it.

00:49:04.790 --> 00:49:05.684
See at the top?

00:49:09.480 --> 00:49:10.100
FILIP: Hey.

00:49:10.100 --> 00:49:11.710
ANDREW: Isn't it
like a removeAt?

00:49:11.710 --> 00:49:12.626
FILIP: Yeah, removeAt.

00:49:17.800 --> 00:49:20.560
And since date, this
is the first time

00:49:20.560 --> 00:49:22.492
that we use it today.

00:49:29.130 --> 00:49:29.964
Right.

00:49:29.964 --> 00:49:32.380
ANDREW: So we're no longer
we're turning a future, though.

00:49:32.380 --> 00:49:33.750
Is that OK?

00:49:33.750 --> 00:49:36.300
FILIP: Because we're in
async, we are actually.

00:49:36.300 --> 00:49:37.470
ANDREW: By default.

00:49:37.470 --> 00:49:40.050
FILIP: Well, yeah,
when you're in async

00:49:40.050 --> 00:49:45.210
and you await at any time,
actually by default you'll just

00:49:45.210 --> 00:49:47.260
return a future of whatever.

00:49:47.260 --> 00:49:51.600
So in this case, we don't
even need this here, I think.

00:49:51.600 --> 00:49:53.970
Because you have
a return of that.

00:49:53.970 --> 00:49:56.790
So let's do this, oh, yeah.

00:49:56.790 --> 00:49:57.706
ANDREW: There it went.

00:50:01.150 --> 00:50:04.010
Madly delete things
all the way down.

00:50:04.010 --> 00:50:07.210
FILIP: Yeah, this will break
when we get to development.

00:50:07.210 --> 00:50:08.860
But let's not do that maybe.

00:50:11.710 --> 00:50:13.534
All right, so--

00:50:13.534 --> 00:50:15.200
ANDREW: So let's cover
what we just did.

00:50:15.200 --> 00:50:18.250
So we made a brand new
app in Android studio.

00:50:18.250 --> 00:50:22.480
You ripped out most of the code
that starts in a default app.

00:50:22.480 --> 00:50:25.360
We added a data class
for the articles.

00:50:25.360 --> 00:50:27.295
We added just some
mock data in a list.

00:50:29.800 --> 00:50:32.544
Then you dumped it
into a list view

00:50:32.544 --> 00:50:34.210
that was displaying
the titles at first.

00:50:34.210 --> 00:50:37.690
And then we added the
comments as a subheading.

00:50:37.690 --> 00:50:40.410
And then we ditched that after--

00:50:40.410 --> 00:50:40.910
or no.

00:50:40.910 --> 00:50:44.080
Then we made it so if you tap
on the titles, you would leave.

00:50:44.080 --> 00:50:46.630
Then we switched
to expansion tile,

00:50:46.630 --> 00:50:49.580
which gave us that nice little
pop when you click on one.

00:50:49.580 --> 00:50:54.010
Added the button,
moved the comment text,

00:50:54.010 --> 00:50:55.480
and added the pull to refresh.

00:50:55.480 --> 00:50:57.188
I think the only thing
we haven't covered

00:50:57.188 --> 00:51:00.220
is the set state
call you just added.

00:51:00.220 --> 00:51:01.920
So what is that doing?

00:51:01.920 --> 00:51:03.640
FILIP: Yeah, so
that just makes sure

00:51:03.640 --> 00:51:06.820
that Flutter knows
that something changed.

00:51:06.820 --> 00:51:11.050
If we don't have that, then it's
not going to break anything.

00:51:11.050 --> 00:51:13.390
But it's going to be weird
because Flutter will not

00:51:13.390 --> 00:51:15.730
know that the list
of the articles

00:51:15.730 --> 00:51:18.260
has changed since then.

00:51:18.260 --> 00:51:22.210
So it will just not refresh.

00:51:22.210 --> 00:51:24.435
ANDREW: So you can
change the state but you,

00:51:24.435 --> 00:51:26.070
Flutter wouldn't know you
did it because it's just

00:51:26.070 --> 00:51:26.820
sitting in memory.

00:51:26.820 --> 00:51:28.240
Who's watching it, right?

00:51:28.240 --> 00:51:33.750
FILIP: Yeah, so nothing changes
even though that first article

00:51:33.750 --> 00:51:34.949
is no longer there.

00:51:34.949 --> 00:51:36.490
ANDREW: It's still
getting displayed.

00:51:36.490 --> 00:51:41.830
FILIP: Yeah, but the cool thing
is again, [? stateful ?] hot

00:51:41.830 --> 00:51:45.360
reload, so we put this back.

00:51:45.360 --> 00:51:52.710
And now when I do this, we will
see how it removes all these,

00:51:52.710 --> 00:51:54.000
like all three things.

00:51:54.000 --> 00:51:57.450
Because I just did the thing,
but it just didn't show.

00:52:01.620 --> 00:52:03.276
So it just went through.

00:52:03.276 --> 00:52:04.650
ANDREW: So it
should go down to--

00:52:04.650 --> 00:52:05.150
FILIP: Yeah.

00:52:05.150 --> 00:52:06.360
ANDREW: Wow.

00:52:06.360 --> 00:52:11.700
FILIP: Anyway so don't
forget your set state.

00:52:11.700 --> 00:52:15.360
And as you can see,
you can go pretty far

00:52:15.360 --> 00:52:17.550
without even using one.

00:52:17.550 --> 00:52:20.570
But once you have state
that you're changing,

00:52:20.570 --> 00:52:24.570
you might want to
have set state there.

00:52:24.570 --> 00:52:31.527
We can cover again how to
deal with more harder things.

00:52:31.527 --> 00:52:33.860
ANDREW: I'm sure we'll have
more sophisticated use cases

00:52:33.860 --> 00:52:37.020
for this in the next episodes.

00:52:37.020 --> 00:52:37.890
FILIP: That's right.

00:52:37.890 --> 00:52:41.430
So yeah, I think, I mean,
so we have sets there.

00:52:41.430 --> 00:52:43.710
We have talked about all this.

00:52:43.710 --> 00:52:46.019
I think we're done.

00:52:46.019 --> 00:52:46.560
ANDREW: Cool.

00:52:46.560 --> 00:52:49.400
FILIP: Yeah, so thank you
for watching, I guess.

00:52:49.400 --> 00:52:51.600
ANDREW: Yeah, all
right, so next time,

00:52:51.600 --> 00:52:53.100
what do you think
we're going to do?

00:52:53.100 --> 00:52:56.790
We've got to pull live
data at some point.

00:52:56.790 --> 00:52:58.960
What else can we do?

00:52:58.960 --> 00:53:01.447
We can tighten up
the [? EY. ?] I

00:53:01.447 --> 00:53:03.280
wonder if we could drag
a designer into this

00:53:03.280 --> 00:53:04.950
and have someone to
help us with that.

00:53:04.950 --> 00:53:10.500
FILIP: Yeah, well, I think
the next episode should start

00:53:10.500 --> 00:53:14.520
with actually data from JSON.

00:53:14.520 --> 00:53:22.140
But then we should really have
a hard look at this one, the UI,

00:53:22.140 --> 00:53:25.140
and make sure that we
actually want this expansion

00:53:25.140 --> 00:53:26.051
thing because--

00:53:26.497 --> 00:53:28.080
ANDREW: It's taking
up a lot of space.

00:53:28.080 --> 00:53:33.640
FILIP: Yeah, I imagine that
there wouldn't be this thing.

00:53:33.640 --> 00:53:37.600
So I think we can just
have something else.

00:53:37.600 --> 00:53:40.560
And also what gets
displayed here?

00:53:40.560 --> 00:53:44.640
We have more data
that we can show here.

00:53:44.640 --> 00:53:47.500
And then I don't
think we could--

00:53:47.500 --> 00:53:52.410
if we have enough time, we
can show another screen.

00:53:52.410 --> 00:53:53.901
And that means navigation.

00:53:53.901 --> 00:53:56.400
ANDREW: Oh yeah, because most
of these things have comments.

00:53:56.400 --> 00:53:58.530
FILIP: --just one.

00:53:58.530 --> 00:54:00.970
Oh, yeah, show the
comments, exactly.

00:54:00.970 --> 00:54:03.660
Otherwise I think
like for Hyperion use,

00:54:03.660 --> 00:54:06.900
it's OK to just open
this in a browser.

00:54:06.900 --> 00:54:11.490
I don't think we need
to parse the article

00:54:11.490 --> 00:54:12.700
or anything like that.

00:54:12.700 --> 00:54:16.010
ANDREW: No, send the traffic
back to good old [? YC. ?]

00:54:16.010 --> 00:54:17.160
FILIP: All right.

00:54:17.160 --> 00:54:20.420
ANDREW: Well, cool, thanks
for watching, everybody.

00:54:20.420 --> 00:54:22.142
We'll be back with
future episodes.

00:54:22.142 --> 00:54:22.850
FILIP: Thank you.

00:54:22.850 --> 00:54:24.650
Bye.

00:54:24.650 --> 00:54:27.400
[JAZZ MUSIC PLAYING]

