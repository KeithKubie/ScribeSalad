WEBVTT
Kind: captions
Language: en

00:00:08.640 --> 00:00:10.170
DYLAN THOMAS: Hello and welcome
to What's New in

00:00:10.170 --> 00:00:11.110
Enterprise Maps.

00:00:11.110 --> 00:00:12.310
My name is Dylan Thomas.

00:00:12.310 --> 00:00:15.070
I am an enterprise community
maps manager.

00:00:15.070 --> 00:00:18.050
And with me today
is Ajay Hemnani.

00:00:18.050 --> 00:00:18.710
AJAY HEMNANI: Hi, Dillon.

00:00:18.710 --> 00:00:19.576
DYLAN THOMAS: Hi.

00:00:19.576 --> 00:00:23.090
Ajay is a education specialist
on the Enterprise team.

00:00:23.090 --> 00:00:25.980
He travels the world teaching
our partners and customers how

00:00:25.980 --> 00:00:28.620
to get the most of
our products.

00:00:28.620 --> 00:00:31.350
So as you may know as a
customer, every 90 days we do

00:00:31.350 --> 00:00:33.470
a forward looking product
road map.

00:00:33.470 --> 00:00:35.070
And we thought it would
be pretty nice--

00:00:35.070 --> 00:00:37.220
Ajay and I thought it would
pretty nice-- to maybe look at

00:00:37.220 --> 00:00:40.700
what we got accomplished in the
last 90 days with that.

00:00:40.700 --> 00:00:43.460
And to that end, we want to take
a look at three products

00:00:43.460 --> 00:00:46.650
and several releases that we've
done over the past 90

00:00:46.650 --> 00:00:49.720
days, and go into those in
a little bit more depth.

00:00:49.720 --> 00:00:52.840
So today we're going to talk
about Google Maps Engine.

00:00:52.840 --> 00:00:54.720
And we have three things
to talk about there.

00:00:54.720 --> 00:00:58.870
The first one is simpler
domain provisioning.

00:00:58.870 --> 00:01:02.260
The second one is vector
editing in the browser.

00:01:02.260 --> 00:01:04.930
And the third one is some
changes we've made with CSV

00:01:04.930 --> 00:01:07.790
handling, so file uploads
for text files.

00:01:07.790 --> 00:01:10.350
Then we're going to switch gears
and look at some OAuth

00:01:10.350 --> 00:01:13.730
work with the client libraries
for Coordinate.

00:01:13.730 --> 00:01:17.250
And finally, we're going to
give you a reminder on the

00:01:17.250 --> 00:01:19.910
deprecation of the version 2
JavaScript API, which is

00:01:19.910 --> 00:01:21.940
happening on November 19.

00:01:21.940 --> 00:01:24.370
So with that introduction,
let's look at

00:01:24.370 --> 00:01:25.660
the first item, Ajay.

00:01:25.660 --> 00:01:25.860
AJAY HEMNANI: Thanks.

00:01:25.860 --> 00:01:27.940
Thanks, Dylan, for the intro.

00:01:27.940 --> 00:01:29.270
All right.

00:01:29.270 --> 00:01:32.100
So the first one I'm going to
talk about today is simpler

00:01:32.100 --> 00:01:34.160
domain provisioning
for Maps Engine.

00:01:34.160 --> 00:01:37.910
I guess the best way for me to
deduce this would be now we

00:01:37.910 --> 00:01:41.150
have a slightly better answer
for apps customers who in the

00:01:41.150 --> 00:01:45.090
past would say, why do I have to
provision a new sub-domain

00:01:45.090 --> 00:01:49.140
and register Google Apps
if I already have one?

00:01:49.140 --> 00:01:52.570
Because in the past these two
things, Google Apps and Maps

00:01:52.570 --> 00:01:55.800
Engine, cannot coexist
on the same domain.

00:01:55.800 --> 00:01:57.720
Today we have a better
answer for them.

00:01:57.720 --> 00:02:00.880
So to be more specific,
previously if you were an Apps

00:02:00.880 --> 00:02:04.570
customer with a domain
appcustomera.com, we would

00:02:04.570 --> 00:02:06.530
need you to create
a sub-domain--

00:02:06.530 --> 00:02:08.630
let's say gme.appscustomera.com.

00:02:08.630 --> 00:02:11.720
Register Google Apps on it.

00:02:11.720 --> 00:02:14.110
Order Maps Engine
on that domain.

00:02:14.110 --> 00:02:16.670
And once the order goes through,
you will have Maps

00:02:16.670 --> 00:02:19.720
Engine running on that
domain but not Apps.

00:02:19.720 --> 00:02:20.400
DYLAN THOMAS: Got it.

00:02:20.400 --> 00:02:21.180
AJAY HEMNANI: Right.

00:02:21.180 --> 00:02:28.580
And for customers who are not on
Google Apps, we would still

00:02:28.580 --> 00:02:31.570
recommend them to do the same,
provision a sub-domain,

00:02:31.570 --> 00:02:33.040
register at Google Apps.

00:02:33.040 --> 00:02:36.450
Because the idea is hopefully
somewhere along the way they

00:02:36.450 --> 00:02:38.290
will want to buy Google Apps.

00:02:38.290 --> 00:02:40.580
And typically, they want to
provision in on the high

00:02:40.580 --> 00:02:42.080
level, top level domain.

00:02:42.080 --> 00:02:44.880
And so we want to keep that
free, just in case they decide

00:02:44.880 --> 00:02:46.080
to purchase Google Apps.

00:02:46.080 --> 00:02:47.130
DYLAN THOMAS: So let me
try that back at you.

00:02:47.130 --> 00:02:49.550
So if I already was an Apps
customer and I decided I

00:02:49.550 --> 00:02:53.760
wanted Maps Engine, I would need
to have a sub-domain to

00:02:53.760 --> 00:02:56.670
avoid a conflict between the
two products previously.

00:02:56.670 --> 00:02:59.280
If I didn't have Apps,
we would think,

00:02:59.280 --> 00:03:00.040
that's sort of crazy.

00:03:00.040 --> 00:03:01.430
You'll probably want
them in the future.

00:03:01.430 --> 00:03:03.400
So maybe you should go with
the same scheme anyway.

00:03:03.400 --> 00:03:05.970
So that when you buy
Apps, you wouldn't

00:03:05.970 --> 00:03:08.120
have a conflict happening.

00:03:08.120 --> 00:03:08.400
AJAY HEMNANI: Right

00:03:08.400 --> 00:03:09.790
DYLAN THOMAS: So what's
different now?

00:03:09.790 --> 00:03:11.080
AJAY HEMNANI: Well, what's
different now-- and I'm really

00:03:11.080 --> 00:03:15.050
excited about this is now we can
have Google Apps and Maps

00:03:15.050 --> 00:03:17.600
Engine coexist on
the same domain.

00:03:17.600 --> 00:03:19.730
So what I'm saying is if
you're an Apps customer

00:03:19.730 --> 00:03:22.450
today-- again appscustomera.com,
that's

00:03:22.450 --> 00:03:24.340
where you have your Google
Apps running.

00:03:24.340 --> 00:03:28.240
You can use the same domain to
provision Maps Engine on it.

00:03:28.240 --> 00:03:31.470
So you'll have all the apps,
like Gmail, Calendar, and so

00:03:31.470 --> 00:03:33.610
on and so forth, with
Maps Engine

00:03:33.610 --> 00:03:34.940
running on the same domain.

00:03:34.940 --> 00:03:38.290
And in future if you want to
get coordinate, all three

00:03:38.290 --> 00:03:40.030
could coexist on the
same domain.

00:03:40.030 --> 00:03:40.390
DYLAN THOMAS: Got it.

00:03:40.390 --> 00:03:41.440
So it's just flexibility.

00:03:41.440 --> 00:03:42.980
So I see the little
smiley face there.

00:03:42.980 --> 00:03:45.010
I guess that's indicating
there's as a happy path, which

00:03:45.010 --> 00:03:46.440
is do whatever you
want, basically.

00:03:46.440 --> 00:03:47.760
AJAY HEMNANI: Exactly that.

00:03:47.760 --> 00:03:50.410
DYLAN THOMAS: So to be clear,
if you want to have a

00:03:50.410 --> 00:03:53.770
sub-domain for a GME you can.

00:03:53.770 --> 00:03:54.840
AJAY HEMNANI: You can
still do that.

00:03:54.840 --> 00:03:55.520
DYLAN THOMAS: And there
are reasons

00:03:55.520 --> 00:03:56.210
for doing it, I suppose.

00:03:56.210 --> 00:03:56.810
AJAY HEMNANI: Exactly right.

00:03:56.810 --> 00:03:59.310
I was just going to say that,
if you have a bunch of users

00:03:59.310 --> 00:04:02.710
that work using Google Apps and
a whole different bunch of

00:04:02.710 --> 00:04:07.050
users who are going to be doing
Maps editing and loading

00:04:07.050 --> 00:04:10.230
the maps from Maps Engine, and
these people are two separate

00:04:10.230 --> 00:04:12.830
identities, you want to keep
them separate, you can still

00:04:12.830 --> 00:04:16.250
go the same way we used to.

00:04:16.250 --> 00:04:18.010
You can still get a sub-domain
and do like

00:04:18.010 --> 00:04:18.990
what we used to do.

00:04:18.990 --> 00:04:20.220
DYLAN THOMAS: Excellent,
great.

00:04:20.220 --> 00:04:22.240
And so this is for all
customers, right?

00:04:22.240 --> 00:04:22.480
AJAY HEMNANI: Right.

00:04:22.480 --> 00:04:23.550
So that's a great
question, Dylan.

00:04:23.550 --> 00:04:29.160
So today this works for
everybody except EDU domains

00:04:29.160 --> 00:04:30.070
and GOV domains.

00:04:30.070 --> 00:04:30.750
DYLAN THOMAS: Oh, I thought
you were going to

00:04:30.750 --> 00:04:31.760
say for every one.

00:04:31.760 --> 00:04:32.710
AJAY HEMNANI: Well hopefully
we're going to

00:04:32.710 --> 00:04:33.800
reach there very soon.

00:04:33.800 --> 00:04:34.310
DYLAN THOMAS: OK, all right.

00:04:34.310 --> 00:04:36.460
So the plan is to roll
it out to everyone.

00:04:36.460 --> 00:04:37.810
But we're not quite there yet.

00:04:37.810 --> 00:04:39.400
But this is exciting enough
that we want to tell

00:04:39.400 --> 00:04:40.370
everyone right now.

00:04:40.370 --> 00:04:41.230
AJAY HEMNANI: Yup.

00:04:41.230 --> 00:04:42.860
DYLAN THOMAS: Excellent,
great.

00:04:42.860 --> 00:04:44.640
So now we were going to move
on and maybe take a look at

00:04:44.640 --> 00:04:47.890
some vector data management
in the browser.

00:04:47.890 --> 00:04:49.650
AJAY HEMNANI: I'm going to jump
right into my Maps Engine

00:04:49.650 --> 00:04:53.220
console and load up one of the
vector tables that I have

00:04:53.220 --> 00:04:54.470
uploaded previously.

00:04:57.350 --> 00:04:59.670
Click on the vector table icon
that appears in the Data

00:04:59.670 --> 00:05:00.810
Sources section.

00:05:00.810 --> 00:05:03.415
And what I see here is a
whole list of points.

00:05:03.415 --> 00:05:06.200
I'm going to go ahead and click
on one of the points.

00:05:06.200 --> 00:05:10.050
And what I can see now through
the UI are two links that

00:05:10.050 --> 00:05:13.725
allow me to either edit the
attributes of this feature or

00:05:13.725 --> 00:05:14.990
edit the geometrics.

00:05:14.990 --> 00:05:19.590
So I'm going to show, by using
the Move Point link to move

00:05:19.590 --> 00:05:22.090
the point to somewhere
else on the map.

00:05:22.090 --> 00:05:25.620
And click Save to make sure
the changes are saved.

00:05:25.620 --> 00:05:28.360
And now as you can see on the
screen, the point has moved

00:05:28.360 --> 00:05:31.300
from its original location
to the new location.

00:05:31.300 --> 00:05:34.440
And just to complete the story,
let's click on the

00:05:34.440 --> 00:05:36.220
Attributes.

00:05:36.220 --> 00:05:40.290
And what I see at the bottom
right here is the record

00:05:40.290 --> 00:05:42.090
belonging to this feature.

00:05:42.090 --> 00:05:45.190
And I can just go directly
into the cell and make

00:05:45.190 --> 00:05:50.450
changes like this.

00:05:50.450 --> 00:05:53.120
DYLAN THOMAS: If I was going to
access that a second later

00:05:53.120 --> 00:05:56.060
from the API, would I see
the updated feature now?

00:05:56.060 --> 00:05:57.330
Is this sort of an
instantaneous--

00:05:57.330 --> 00:05:59.490
well, fairly fast, let's say--

00:05:59.490 --> 00:06:00.540
update to the record?

00:06:00.540 --> 00:06:01.460
AJAY HEMNANI: Right
exactly that.

00:06:01.460 --> 00:06:02.460
DYLAN THOMAS: OK got it.

00:06:02.460 --> 00:06:03.650
Nice.

00:06:03.650 --> 00:06:05.370
AJAY HEMNANI: And that's
not the only

00:06:05.370 --> 00:06:06.190
thing that has changed.

00:06:06.190 --> 00:06:08.990
So we also have access into
the vector table.

00:06:08.990 --> 00:06:11.270
Vector table's basically the
structure we use internally

00:06:11.270 --> 00:06:12.840
for vector uploads.

00:06:12.840 --> 00:06:16.400
And so if I click on this icon
on the right hand side at the

00:06:16.400 --> 00:06:20.680
top of the screen, it gives me
a spreadsheet-like thing

00:06:20.680 --> 00:06:22.375
displaying the attributes
as columns and

00:06:22.375 --> 00:06:23.490
the features as rows.

00:06:23.490 --> 00:06:26.460
And I can just choose any
feature that I want to edit.

00:06:26.460 --> 00:06:28.460
And make the edit and
go ahead and save.

00:06:28.460 --> 00:06:28.920
DYLAN THOMAS: That's nice.

00:06:28.920 --> 00:06:31.710
So you don't have to use a third
party package, and then

00:06:31.710 --> 00:06:34.950
make an update, and re upload
the file, or write something

00:06:34.950 --> 00:06:37.300
in the API to do simple
edits like that.

00:06:37.300 --> 00:06:40.850
You could just give a map editor
access to this data.

00:06:40.850 --> 00:06:42.690
And they could-- just
like a spreadsheet--

00:06:42.690 --> 00:06:43.920
make some simple updates.

00:06:43.920 --> 00:06:45.310
AJAY HEMNANI: Right, exactly
that, Dylan.

00:06:45.310 --> 00:06:46.540
DYLAN THOMAS: OK, but
that's too easy.

00:06:46.540 --> 00:06:49.440
So what about a real feature,
like a Polygon,

00:06:49.440 --> 00:06:50.380
or a line, or something?

00:06:50.380 --> 00:06:50.520
AJAY HEMNANI: Right.

00:06:50.520 --> 00:06:51.560
We can do that too.

00:06:51.560 --> 00:06:56.500
However, I do want to add that
today, this functionality is

00:06:56.500 --> 00:07:01.300
designed based on how the APIs
are doing their work.

00:07:01.300 --> 00:07:03.210
And so the same limits apply.

00:07:03.210 --> 00:07:08.540
And to show you that, let me go
back to my data sources and

00:07:08.540 --> 00:07:10.355
show you an example
with a polygon.

00:07:13.030 --> 00:07:16.150
And the reason I want to use
this example is because when I

00:07:16.150 --> 00:07:18.850
click on this, it shows
the info window.

00:07:18.850 --> 00:07:21.570
And I go ahead and click
on Edit Polygon.

00:07:21.570 --> 00:07:22.290
This would have worked.

00:07:22.290 --> 00:07:25.410
But in this case since
it's beyond the limit

00:07:25.410 --> 00:07:27.580
that applies to APIs--

00:07:27.580 --> 00:07:28.840
like I said, the same
limits apply to

00:07:28.840 --> 00:07:30.100
this feature for now--

00:07:30.100 --> 00:07:33.580
I get this pop-up error that
says that it has exceeded the

00:07:33.580 --> 00:07:38.080
two vertices limit, which
is 2000 I believe today.

00:07:38.080 --> 00:07:41.100
DYLAN THOMAS: And so these
limitations in the API, well

00:07:41.100 --> 00:07:44.030
certainly the GME based platform
keep increasing and

00:07:44.030 --> 00:07:45.330
increasing with table size.

00:07:45.330 --> 00:07:48.050
But now realistically, there's
some limitation to what you

00:07:48.050 --> 00:07:49.520
want to be doing in
a web browser.

00:07:49.520 --> 00:07:53.710
So if you've got a million
vertex feature, you probably

00:07:53.710 --> 00:07:56.380
still want to manage those in
maybe an external system and

00:07:56.380 --> 00:07:59.120
perform an update or an upload,
right, potentially?

00:07:59.120 --> 00:08:00.680
AJAY HEMNANI: Yes.

00:08:00.680 --> 00:08:02.150
DYLAN THOMAS: Nice, OK.

00:08:02.150 --> 00:08:04.180
So we were going to move on to
the third thing, which is

00:08:04.180 --> 00:08:05.450
working with CSVs.

00:08:05.450 --> 00:08:07.952
And there's some good news
on that front too, right?

00:08:07.952 --> 00:08:10.520
AJAY HEMNANI: And so for
CSVs, we have two

00:08:10.520 --> 00:08:11.750
things that have changed.

00:08:11.750 --> 00:08:16.260
The first is now we don't any
longer need a VRT file when

00:08:16.260 --> 00:08:18.380
you upload CSVs that
have latitude

00:08:18.380 --> 00:08:20.050
and longitude columns.

00:08:20.050 --> 00:08:22.460
So what I'm trying to say is
you can just dump in the

00:08:22.460 --> 00:08:26.950
Lat,Lng columns in a CSV file
and upload it without a

00:08:26.950 --> 00:08:31.530
accompanying VRT file that we
needed to in the past to

00:08:31.530 --> 00:08:33.620
describe the contents
of the CSV.

00:08:33.620 --> 00:08:36.140
DYLAN THOMAS: And so-- sorry,
just to back up there for the

00:08:36.140 --> 00:08:39.650
people who are managing the
data upload today, they're

00:08:39.650 --> 00:08:41.630
probably familiar
with a VRT file.

00:08:41.630 --> 00:08:44.440
But if you're a map publisher
and you're watching this, the

00:08:44.440 --> 00:08:46.050
VRT is sort of a side-by-side.

00:08:46.050 --> 00:08:50.340
It tells Maps Engine previously
what's in the CSV

00:08:50.340 --> 00:08:52.195
file so it can interpret
it correctly.

00:08:52.195 --> 00:08:53.930
Map projection and things
like that, right?

00:08:53.930 --> 00:08:54.210
AJAY HEMNANI: Right.

00:08:54.210 --> 00:08:56.480
DYLAN THOMAS: OK, but you're
saying now you can, if you've

00:08:56.480 --> 00:08:59.560
got the right columns in the
CSV, you don't need that

00:08:59.560 --> 00:09:00.490
second file.

00:09:00.490 --> 00:09:00.840
AJAY HEMNANI: Exactly.

00:09:00.840 --> 00:09:02.280
DYLAN THOMAS: Got it, OK.

00:09:02.280 --> 00:09:03.530
AJAY HEMNANI: And to
show that, I'll

00:09:03.530 --> 00:09:04.870
just do a quick demo.

00:09:04.870 --> 00:09:08.720
What I have right here is a CSV
file with three columns,

00:09:08.720 --> 00:09:11.300
latitude, longitude, and name.

00:09:11.300 --> 00:09:14.140
And just to spice up a little
bit, I have the column

00:09:14.140 --> 00:09:17.300
latitude in uppercase, longitude
in mixed case.

00:09:17.300 --> 00:09:20.610
I'm going to show you how I go
upload this through the Maps

00:09:20.610 --> 00:09:21.860
Engine console.

00:09:31.760 --> 00:09:33.680
DYLAN THOMAS: So let's just say,
we're using five rows in

00:09:33.680 --> 00:09:35.460
this one, which is not
particularly adventurous.

00:09:35.460 --> 00:09:38.090
But we can upload 100,000
at a time.

00:09:38.090 --> 00:09:38.610
AJAY HEMNANI: Yes.

00:09:38.610 --> 00:09:40.560
DYLAN THOMAS: So we're just
doing this because we need it

00:09:40.560 --> 00:09:42.492
to work quickly for demo.

00:09:42.492 --> 00:09:44.360
AJAY HEMNANI: Exactly. that.

00:09:44.360 --> 00:09:47.800
Now that I've uploaded the CSV
file, let's just try to

00:09:47.800 --> 00:09:49.925
quickly refresh and see if
it's done processing.

00:09:55.710 --> 00:10:01.090
If I click on the vector table
map display, I can see the

00:10:01.090 --> 00:10:02.270
point right here.

00:10:02.270 --> 00:10:05.840
If I go ahead and click, it will
show me the name column

00:10:05.840 --> 00:10:10.050
that you had seen in the
original file that I uploaded.

00:10:10.050 --> 00:10:11.660
Now what happens is--

00:10:11.660 --> 00:10:13.420
well, two interesting
observations.

00:10:13.420 --> 00:10:18.740
First, the column names
are case insensitive.

00:10:18.740 --> 00:10:22.370
So it doesn't matter how
you type it out.

00:10:22.370 --> 00:10:24.680
The other thing is the latitude
longitude columns

00:10:24.680 --> 00:10:27.080
don't show up as attributes.

00:10:27.080 --> 00:10:28.990
So they're really geometry
information.

00:10:28.990 --> 00:10:32.130
And they go in and decide
where the point

00:10:32.130 --> 00:10:33.640
is going to be shown.

00:10:33.640 --> 00:10:35.680
So the only attribute that
remains is the name column

00:10:35.680 --> 00:10:36.460
right here.

00:10:36.460 --> 00:10:36.850
DYLAN THOMAS: OK.

00:10:36.850 --> 00:10:39.160
Well again, that was maybe
a little too easy, right?

00:10:39.160 --> 00:10:41.230
So I think the other thing we
were going to talk about is

00:10:41.230 --> 00:10:43.680
the geocoding side of
things, where you

00:10:43.680 --> 00:10:44.970
don't have an xy column.

00:10:44.970 --> 00:10:46.430
Maybe you just have the
name of a place

00:10:46.430 --> 00:10:47.650
or some street addresses.

00:10:47.650 --> 00:10:49.650
AJAY HEMNANI: Right, so I have
that example as well.

00:10:49.650 --> 00:10:52.960
So let's say you did not have
the Lat,Lng attributes.

00:10:52.960 --> 00:10:55.910
And you only had the
textual address.

00:10:55.910 --> 00:10:59.780
What Maps Engine can
do for you is let

00:10:59.780 --> 00:11:01.140
you upload this file.

00:11:01.140 --> 00:11:04.350
And once upload is done, in the
post processing stage it's

00:11:04.350 --> 00:11:07.110
going to actually make use of
the geocoding back end that

00:11:07.110 --> 00:11:11.030
our geocoding API uses and
translate this textual address

00:11:11.030 --> 00:11:17.760
into a Lat,Lng column, into a
Lat,Lng pair, and use that to

00:11:17.760 --> 00:11:19.235
display the feature.

00:11:19.235 --> 00:11:21.210
DYLAN THOMAS: Well, that's
pretty awesome.

00:11:21.210 --> 00:11:23.840
That's a really powerful
geocoder that can take

00:11:23.840 --> 00:11:27.030
honestly some pretty dirty
content in terms of the

00:11:27.030 --> 00:11:28.810
cleanliness of an address
or places.

00:11:28.810 --> 00:11:33.220
So this is a pretty nice way of
doing some bulk geocoding.

00:11:33.220 --> 00:11:34.000
AJAY HEMNANI: Right.

00:11:34.000 --> 00:11:36.450
And so let me just quickly
demo that.

00:11:36.450 --> 00:11:38.410
So again, I'm going to upload
the file that I

00:11:38.410 --> 00:11:40.880
just showed on screen.

00:11:40.880 --> 00:11:43.960
And now what I see on the map
are exactly the two addresses

00:11:43.960 --> 00:11:45.210
that I had entered.

00:11:48.790 --> 00:11:51.890
And when I click on this, it
does show me the textual

00:11:51.890 --> 00:11:53.690
address, because it's not
considered geometry

00:11:53.690 --> 00:11:54.780
information.

00:11:54.780 --> 00:11:57.670
It's taken as a column of
it's own attribute.

00:11:57.670 --> 00:12:00.020
And it does show up in
the Info window.

00:12:00.020 --> 00:12:01.410
DYLAN THOMAS: Cool.

00:12:01.410 --> 00:12:04.230
Now, this one is experimental
still.

00:12:04.230 --> 00:12:05.130
Which part of that?

00:12:05.130 --> 00:12:05.440
AJAY HEMNANI: Right.

00:12:05.440 --> 00:12:07.750
So that's an interesting thing
that you brought up, Dylan.

00:12:07.750 --> 00:12:10.280
So right now we have the
experimental tag attached to

00:12:10.280 --> 00:12:10.970
this feature.

00:12:10.970 --> 00:12:15.300
So what that really means is
it's not covered by SLA.

00:12:15.300 --> 00:12:19.830
And we also have a limit applied
today so can't upload

00:12:19.830 --> 00:12:23.620
more than 100,000 textual
addresses in a single file.

00:12:23.620 --> 00:12:24.430
DYLAN THOMAS: And that
was the important

00:12:24.430 --> 00:12:25.290
distinction you made.

00:12:25.290 --> 00:12:28.850
The uploading CSVs,
it's released.

00:12:28.850 --> 00:12:32.460
Geocoding those with the textual
addresses is the

00:12:32.460 --> 00:12:33.440
experimental part.

00:12:33.440 --> 00:12:33.790
AJAY HEMNANI: Exactly.

00:12:33.790 --> 00:12:34.710
DYLAN THOMAS: OK, got it.

00:12:34.710 --> 00:12:37.880
AJAY HEMNANI: And so today we
are not charging map loads.

00:12:37.880 --> 00:12:41.990
But once we remove the
experimental tag, we could be

00:12:41.990 --> 00:12:44.600
charging map loads for every
geocoded feature.

00:12:44.600 --> 00:12:46.670
DYLAN THOMAS: OK, great.

00:12:46.670 --> 00:12:48.520
Well we've got two more
things to show.

00:12:48.520 --> 00:12:50.920
I think the next one we were
going to look at was the

00:12:50.920 --> 00:12:54.070
client side libraries to work
with the coordinate API.

00:12:54.070 --> 00:12:58.020
AJAY HEMNANI: So for most of our
developers who work with

00:12:58.020 --> 00:13:01.930
Google APIs, you're trying
to do one of two things.

00:13:01.930 --> 00:13:06.030
You're either trying to access
not private data, for example

00:13:06.030 --> 00:13:08.100
using geocoding API to
geocode a textual

00:13:08.100 --> 00:13:09.670
address into Lat,Lng.

00:13:09.670 --> 00:13:12.220
Or you're trying to access
private data, maybe using

00:13:12.220 --> 00:13:15.470
coordinate API to list on all
the jobs and workers in your

00:13:15.470 --> 00:13:17.030
[INAUDIBLE] account.

00:13:17.030 --> 00:13:20.340
So when you work with non
private data, you use the API

00:13:20.340 --> 00:13:23.730
key, which you can easily get
from the API console.

00:13:23.730 --> 00:13:27.655
When you're working with APIs
that use private data, you

00:13:27.655 --> 00:13:31.100
will need to implement
OAuth 2.0.

00:13:31.100 --> 00:13:34.680
And for developers who've
tried this out, you will

00:13:34.680 --> 00:13:37.240
understand that it could
actually translate into

00:13:37.240 --> 00:13:40.080
multiple lines of code and also
increase the chances of

00:13:40.080 --> 00:13:41.760
making errors there.

00:13:41.760 --> 00:13:44.480
That's exactly where the client
libraries come in.

00:13:44.480 --> 00:13:47.280
They make it a lot easier,
because they come with methods

00:13:47.280 --> 00:13:52.160
that make the OAuth dense
implementation a lot easier

00:13:52.160 --> 00:13:52.960
for the application.

00:13:52.960 --> 00:13:55.780
DYLAN THOMAS: So these are
libraries that Google has

00:13:55.780 --> 00:13:59.490
provided that basically work
with a variety of our APIs.

00:13:59.490 --> 00:14:01.180
And they're implemented in a
bunch of different languages

00:14:01.180 --> 00:14:03.090
that you probably are already
using, right?

00:14:03.090 --> 00:14:03.530
AJAY HEMNANI: Exactly.

00:14:03.530 --> 00:14:07.590
So you have libraries for
Python, Java, and whatnot.

00:14:07.590 --> 00:14:10.920
One thing about the libraries
though is that it's not

00:14:10.920 --> 00:14:13.180
supported by Enterprise
support.

00:14:13.180 --> 00:14:15.750
But we do highly recommend the
usage of these libraries.

00:14:15.750 --> 00:14:17.540
Because they make the
implementation, rather the

00:14:17.540 --> 00:14:20.990
coding, a lot simpler and reduce
the chances of you

00:14:20.990 --> 00:14:23.270
having errors.

00:14:23.270 --> 00:14:27.520
So for my demo, I'm going to
show a tool that I've been

00:14:27.520 --> 00:14:28.160
working on.

00:14:28.160 --> 00:14:30.740
A slight modification
of that, actually.

00:14:30.740 --> 00:14:33.840
And I'm going to show you the
JavaScript version and also

00:14:33.840 --> 00:14:35.890
the web server version of it.

00:14:35.890 --> 00:14:37.705
Well, the web server have
chosen to run it

00:14:37.705 --> 00:14:39.050
on App Engine Python.

00:14:39.050 --> 00:14:42.300
So I'm going to use the even
easier version of the client

00:14:42.300 --> 00:14:45.870
library that's available
for App Engine Python

00:14:45.870 --> 00:14:46.630
implementations.

00:14:46.630 --> 00:14:47.510
DYLAN THOMAS: I love
this demo.

00:14:47.510 --> 00:14:50.440
There's an even easier
version.

00:14:50.440 --> 00:14:52.330
AJAY HEMNANI: So let's
dive into it.

00:14:52.330 --> 00:14:56.810
So for the JavaScript example
I have here, is an app that

00:14:56.810 --> 00:15:00.670
basically accepts a team ID from
your coordinate account.

00:15:00.670 --> 00:15:03.770
And it fetches the jobs and
workers from your account.

00:15:03.770 --> 00:15:06.740
And so the first thing it's
going to do is check if

00:15:06.740 --> 00:15:07.400
you're logged in.

00:15:07.400 --> 00:15:09.980
Since I'm already logged in,
it's going to prompt me for

00:15:09.980 --> 00:15:11.530
the authorization.

00:15:11.530 --> 00:15:17.630
And so once I click on Accept,
I am authorized.

00:15:17.630 --> 00:15:24.980
All I've got to do is dump
in the team ID, click on

00:15:24.980 --> 00:15:27.310
Populate, and it populates.

00:15:27.310 --> 00:15:29.990
This is part of an example that
I've been working on,

00:15:29.990 --> 00:15:31.140
slightly modified.

00:15:31.140 --> 00:15:34.100
And so what you can see this
drop down list, it's fetching

00:15:34.100 --> 00:15:37.080
the jobs and the list of worker
accounts that are

00:15:37.080 --> 00:15:40.000
available from my coordinate
account.

00:15:40.000 --> 00:15:43.910
I just want to share what the
code looks like and I've made

00:15:43.910 --> 00:15:45.695
use of the library.

00:15:51.160 --> 00:15:55.440
So right here is where I'm
loading the library,

00:15:55.440 --> 00:15:56.690
apis.google.comjsclient.js.

00:15:59.210 --> 00:16:01.920
And once it's loaded,
I run some of the

00:16:01.920 --> 00:16:03.370
methods that are available.

00:16:03.370 --> 00:16:04.620
Let me just show you that.

00:16:07.360 --> 00:16:11.770
So upon loading, I run this
method that sets the API key--

00:16:11.770 --> 00:16:14.360
again if you are working
with non private data--

00:16:14.360 --> 00:16:19.090
and I also do the OAuth pieces
using gapi.auth.authorize.

00:16:19.090 --> 00:16:21.050
DYLAN THOMAS: OK, that looks
pretty straightforward.

00:16:21.050 --> 00:16:21.610
AJAY HEMNANI: Exacty.

00:16:21.610 --> 00:16:23.950
And if you were to do this
without the client library,

00:16:23.950 --> 00:16:26.760
this would again be multiple
lines of code.

00:16:26.760 --> 00:16:29.710
I haven't really done the
handling of the auth result,

00:16:29.710 --> 00:16:31.160
but you're free to do so.

00:16:31.160 --> 00:16:33.200
You can just put some messages
for the user.

00:16:33.200 --> 00:16:36.520
And once that's done, there's
three options really for you

00:16:36.520 --> 00:16:39.360
to use the token that
can be generated.

00:16:39.360 --> 00:16:41.810
I've used the [INAUDIBLE]
option, and there's great

00:16:41.810 --> 00:16:44.020
documentation on the other
options as well.

00:16:44.020 --> 00:16:46.930
You just dump the access
token with the API

00:16:46.930 --> 00:16:48.140
call that you're making.

00:16:48.140 --> 00:16:49.250
And you get results.

00:16:49.250 --> 00:16:50.200
DYLAN THOMAS: Cool.

00:16:50.200 --> 00:16:52.020
And so the thing we should
just wrap up on this one

00:16:52.020 --> 00:16:55.140
saying is a reminder that we
were talking about Coordinate.

00:16:55.140 --> 00:16:56.820
Because that's what you've seen
a lot of the experience

00:16:56.820 --> 00:17:01.390
in your training recently it is
the OAuth confusion, let's

00:17:01.390 --> 00:17:02.440
say, with that.

00:17:02.440 --> 00:17:05.319
But this applies equally well
to Google Maps Engine.

00:17:05.319 --> 00:17:06.740
And in fact, even
non enterprise

00:17:06.740 --> 00:17:07.460
products as well, Right?

00:17:07.460 --> 00:17:08.460
AJAY HEMNANI: Mostly
Google APIs.

00:17:08.460 --> 00:17:09.010
DYLAN THOMAS: OK, cool.

00:17:09.010 --> 00:17:09.920
Excellent.

00:17:09.920 --> 00:17:12.440
AJAY HEMNANI: Now, if you were
doing the same thing server

00:17:12.440 --> 00:17:15.569
side, again, we have client
libraries to help you there.

00:17:15.569 --> 00:17:19.550
In this example, I've used the
even easier version, like I

00:17:19.550 --> 00:17:22.180
mentioned earlier, of
the client library.

00:17:22.180 --> 00:17:27.010
This exists especially when
you're working with Python for

00:17:27.010 --> 00:17:28.480
App Engine applications.

00:17:28.480 --> 00:17:31.690
And so what we have is what we
call the OAuth 2 decorator

00:17:31.690 --> 00:17:37.580
class for any developer who's
worked with OAuth implementing

00:17:37.580 --> 00:17:38.840
OAuth in their code.

00:17:38.840 --> 00:17:40.940
They would already be
familiar with flows,

00:17:40.940 --> 00:17:42.320
and credential objects.

00:17:42.320 --> 00:17:46.990
So the cool thing about this is
it allows you to not worry

00:17:46.990 --> 00:17:47.920
about all those things.

00:17:47.920 --> 00:17:50.695
Because this class handles
all those objects.

00:17:50.695 --> 00:17:51.900
DYLAN THOMAS: That's nice.

00:17:51.900 --> 00:17:52.190
AJAY HEMNANI: Right.

00:17:52.190 --> 00:17:55.540
And so let me just jump into
the code right away.

00:17:55.540 --> 00:17:58.380
And again, just like the client
side example, here you

00:17:58.380 --> 00:18:03.240
would import the OAuth to
decorator class, create the

00:18:03.240 --> 00:18:06.710
decorator object with your
client ID secret and scope,

00:18:06.710 --> 00:18:09.320
the information that you'll
get from an API console.

00:18:09.320 --> 00:18:13.270
And start using it after
you create the

00:18:13.270 --> 00:18:14.910
authorize HDTV object.

00:18:14.910 --> 00:18:16.950
So here is an example
of, how do I get the

00:18:16.950 --> 00:18:18.720
authorize HTTP object?

00:18:18.720 --> 00:18:23.360
And the next line shows the code
for extracting a list of

00:18:23.360 --> 00:18:27.030
jobs from my coordinate account
with the authorized

00:18:27.030 --> 00:18:29.670
HTTP object right here.

00:18:29.670 --> 00:18:30.150
DYLAN THOMAS: Very nice.

00:18:30.150 --> 00:18:35.220
Well, like you said, it seems
like the very easy version.

00:18:35.220 --> 00:18:35.820
Thank you.

00:18:35.820 --> 00:18:39.020
So I think we wanted to wrap
up the show with just a

00:18:39.020 --> 00:18:42.070
reminder and a mention of
something that's happening in

00:18:42.070 --> 00:18:45.360
Q4 this year, actually
on November 19.

00:18:45.360 --> 00:18:49.260
And that's the final shutdown
of the version 2 JavaScript

00:18:49.260 --> 00:18:50.750
API for Maps, right?

00:18:50.750 --> 00:18:52.010
AJAY HEMNANI: Right,
exactly Dylan.

00:18:52.010 --> 00:18:55.030
So what's going to happen is
beyond this date if you

00:18:55.030 --> 00:18:57.890
request with the version 2 the
JavaScript API, you're going

00:18:57.890 --> 00:19:00.610
to be served a wrapped version
of versing 3 of

00:19:00.610 --> 00:19:02.160
the JavaScript API.

00:19:02.160 --> 00:19:05.660
What this means is your simpler

00:19:05.660 --> 00:19:08.240
applications will work.

00:19:08.240 --> 00:19:11.820
But if there's anything complex,
it may not work.

00:19:11.820 --> 00:19:15.440
So we're urging everybody who's
still on version 2 to

00:19:15.440 --> 00:19:18.190
start thinking about upgrading
into version 3.

00:19:18.190 --> 00:19:18.680
DYLAN THOMAS: Got it.

00:19:18.680 --> 00:19:22.040
And I think when you say it's
wrapped and the simpler things

00:19:22.040 --> 00:19:25.480
will work, this is not something
you want to call to

00:19:25.480 --> 00:19:27.450
open up a support case with
your enterprise agreement.

00:19:27.450 --> 00:19:30.810
This is just, we're trying to
make the migration easier.

00:19:30.810 --> 00:19:33.160
But what you really need to
be doing at this point is

00:19:33.160 --> 00:19:36.350
aggressively pursuing that
migration and testing, so that

00:19:36.350 --> 00:19:40.830
you can launch on November 20
with a fresh API version.

00:19:40.830 --> 00:19:41.850
AJAY HEMNANI: Right.

00:19:41.850 --> 00:19:44.120
And so I would also recommend
everybody who has not taken a

00:19:44.120 --> 00:19:46.190
look at the upgrade guide
to just give it a look.

00:19:46.190 --> 00:19:48.350
There's a lot of good pointers
and guidance on how to go

00:19:48.350 --> 00:19:50.740
about upgrading from version
2 to version 3.

00:19:50.740 --> 00:19:52.060
DYLAN THOMAS: Great, thanks.

00:19:52.060 --> 00:19:55.670
And I think we're going to put
the URL for that on the show

00:19:55.670 --> 00:19:57.270
screen here.

00:19:57.270 --> 00:19:59.280
And with that, Ajay, I want to
thank you very much for giving

00:19:59.280 --> 00:20:01.980
us a quick tour of what's
great and new in the

00:20:01.980 --> 00:20:03.170
Enterprise Map space.

00:20:03.170 --> 00:20:06.920
And we'll see you next time in
What's New in Enterpsie Maps.

00:20:06.920 --> 00:20:08.170
Thank you.

