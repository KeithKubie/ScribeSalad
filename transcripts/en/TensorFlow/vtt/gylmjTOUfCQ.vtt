WEBVTT
Kind: captions
Language: en

00:00:07.082 --> 00:00:07.790
SERGIO BOIXO: Hi.

00:00:07.790 --> 00:00:11.650
I am Sergio Boixo from
the Google AI Quantum team,

00:00:11.650 --> 00:00:14.460
and today, we're going to
talk about an experiment we're

00:00:14.460 --> 00:00:18.240
working on, which is known
as quantum supremacy.

00:00:18.240 --> 00:00:20.410
The latest experimental
quantum processor

00:00:20.410 --> 00:00:25.710
produced at Google, Bristlecone,
has 72 qubits or quantum bits.

00:00:25.710 --> 00:00:28.230
We're testing quantum
circuits in Bristlecone

00:00:28.230 --> 00:00:30.690
with the goal of
reducing errors.

00:00:30.690 --> 00:00:34.230
By their nature, quantum gates
have a probability of errors,

00:00:34.230 --> 00:00:37.050
and errors can cross
quantum circuits.

00:00:37.050 --> 00:00:38.910
As we calibrate
quantum circuits,

00:00:38.910 --> 00:00:41.400
we bring down the
probability of error.

00:00:41.400 --> 00:00:44.310
We simulate quantum circuits
with traditional computers

00:00:44.310 --> 00:00:47.130
to benchmark and calibrate
quantum circuits.

00:00:47.130 --> 00:00:49.650
As we work to reduce the
probability of an error,

00:00:49.650 --> 00:00:52.290
simulations gets
exponentially harder.

00:00:52.290 --> 00:00:55.440
This means that it gets too
computationally intensive even

00:00:55.440 --> 00:00:57.750
for a supercomputer to keep up.

00:00:57.750 --> 00:01:00.240
From this, we get the
name quantum supremacy

00:01:00.240 --> 00:01:01.890
for this experiment.

00:01:01.890 --> 00:01:05.760
This has to do with something
called a strong Church-Turing

00:01:05.760 --> 00:01:08.470
thesis in computer science.

00:01:08.470 --> 00:01:12.210
Traditional computers from
the abacus to your laptop

00:01:12.210 --> 00:01:15.750
implement equivalent
operations or classical gates,

00:01:15.750 --> 00:01:19.920
although a modern computer is,
of course, much, much faster.

00:01:19.920 --> 00:01:22.740
The strong Church-Turing
thesis says

00:01:22.740 --> 00:01:26.280
that all universal computers
are equivalent in this way,

00:01:26.280 --> 00:01:29.340
and can simulate each
other efficiently.

00:01:29.340 --> 00:01:31.680
But according to
quantum computing,

00:01:31.680 --> 00:01:34.530
the strong Church-Turing
thesis is false,

00:01:34.530 --> 00:01:37.680
and quantum computers can solve
some problems exponentially

00:01:37.680 --> 00:01:40.780
faster than other
universal computers.

00:01:40.780 --> 00:01:42.840
So what we're
trying to do is kind

00:01:42.840 --> 00:01:46.410
of breaking the strong
Church-Turing thesis.

00:01:46.410 --> 00:01:48.920
You can think of a qubit
as an arrow pointing

00:01:48.920 --> 00:01:51.150
to some direction on a sphere.

00:01:51.150 --> 00:01:53.880
Quantum gates are
operations on qubits.

00:01:53.880 --> 00:01:56.970
Similar to classical gates,
we often depict quantum gates

00:01:56.970 --> 00:01:59.970
as boxes, with the
input on one side

00:01:59.970 --> 00:02:02.190
and the output on
the opposite side.

00:02:02.190 --> 00:02:04.500
In a quantum circuit,
we apply layers

00:02:04.500 --> 00:02:07.590
of gates, one per clock cycle.

00:02:07.590 --> 00:02:10.259
A measurement at the end
of the quantum circuit

00:02:10.259 --> 00:02:12.420
produces a string of beats.

00:02:12.420 --> 00:02:14.580
For the quantum
supremacy experiment,

00:02:14.580 --> 00:02:18.250
we choose the quantum
gates at random.

00:02:18.250 --> 00:02:21.930
This is a Hello World program
for quantum computers.

00:02:21.930 --> 00:02:26.100
Crucially, in this case, we have
the strongest critical evidence

00:02:26.100 --> 00:02:28.980
against the strong
Church-Turing thesis.

00:02:28.980 --> 00:02:32.430
It takes exponential time
to simulate a random quantum

00:02:32.430 --> 00:02:35.130
circuit with a
classical computer.

00:02:35.130 --> 00:02:38.250
According to quantum
mechanics, every particle

00:02:38.250 --> 00:02:42.060
can also act as a wave,
and this applies to qubits.

00:02:42.060 --> 00:02:44.865
The quantum state of
a quantum computer

00:02:44.865 --> 00:02:47.010
contains an exponential
number of waves

00:02:47.010 --> 00:02:48.810
or computational paths.

00:02:48.810 --> 00:02:52.620
This is the property
that we are testing.

00:02:52.620 --> 00:02:55.200
The output state of a
random quantum circuit

00:02:55.200 --> 00:02:58.630
looks like the
speckles of a laser.

00:02:58.630 --> 00:03:02.130
This is a fingerprint
of the quantum circuit.

00:03:02.130 --> 00:03:04.890
For some bit strings,
the computational paths

00:03:04.890 --> 00:03:08.670
interfere constructively, and
the intensity of the output

00:03:08.670 --> 00:03:10.380
probability grows.

00:03:10.380 --> 00:03:14.580
For others, the computational
paths interfere destructively,

00:03:14.580 --> 00:03:17.280
and the output
probability decreases.

00:03:17.280 --> 00:03:20.550
Simulating interference
of the exponential number

00:03:20.550 --> 00:03:23.610
of computational paths
in the quantum circuit

00:03:23.610 --> 00:03:25.320
takes exponential time.

00:03:25.320 --> 00:03:27.990
We can check if we obtain
the correct fingerprint

00:03:27.990 --> 00:03:31.260
in the experiment, and measure
the probability of error.

00:03:31.260 --> 00:03:33.660
First, we get around
a million bit strings

00:03:33.660 --> 00:03:35.160
from the quantum computer.

00:03:35.160 --> 00:03:37.080
This takes a few seconds.

00:03:37.080 --> 00:03:40.260
Then we use an expensive
classical simulation

00:03:40.260 --> 00:03:44.070
to check if those bit strings
have high probability.

00:03:44.070 --> 00:03:46.560
If this is the case,
the error rate is low,

00:03:46.560 --> 00:03:49.390
and the experiment
has succeeded.

00:03:49.390 --> 00:03:51.810
The implication will be
that quantum computers

00:03:51.810 --> 00:03:55.650
seem to be breaking the
strong Church-Turing thesis.

00:03:55.650 --> 00:03:57.930
As we reduce errors
farther, we expect

00:03:57.930 --> 00:04:00.060
to see a similar
exponential speed up

00:04:00.060 --> 00:04:01.710
for a practical problem.

00:04:01.710 --> 00:04:03.457
So what's next?

00:04:03.457 --> 00:04:05.040
Visit the other
videos in these series

00:04:05.040 --> 00:04:07.570
to learn more about how
a quantum computer works

00:04:07.570 --> 00:04:09.330
and how to program it.

00:04:09.330 --> 00:04:12.240
You can also visit OpenFermion
to learn more about how

00:04:12.240 --> 00:04:14.310
quantum computers can be
used to solve problems

00:04:14.310 --> 00:04:16.440
in chemistry and
material science,

00:04:16.440 --> 00:04:18.820
or check out the
links included below.

00:04:18.820 --> 00:04:20.509
Thank you.

