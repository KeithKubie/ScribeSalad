WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.780
[MUSIC PLAYING]

00:00:07.180 --> 00:00:10.889
CHET HAASE: Hello and welcome
to the Android Fireside Chats.

00:00:10.889 --> 00:00:12.430
We have a lot of
content today, we're

00:00:12.430 --> 00:00:14.440
going to get through
that first and see if we

00:00:14.440 --> 00:00:17.170
can get to the questions next.

00:00:17.170 --> 00:00:20.090
If we could get
to the next slide.

00:00:20.090 --> 00:00:22.400
I guess we're ready
for some questions.

00:00:22.400 --> 00:00:24.640
So we do actually have one
question to start it off,

00:00:24.640 --> 00:00:27.010
if we can go to
that one as well.

00:00:27.010 --> 00:00:29.410
So someone asked online
on the Twitter thread,

00:00:29.410 --> 00:00:32.950
why is it called a fireside
chat if there is no fire?

00:00:32.950 --> 00:00:35.510
I thought this was a
pretty good question.

00:00:35.510 --> 00:00:37.690
So the answer to that would be--

00:00:40.546 --> 00:00:42.926
[LAUGHTER]

00:00:42.926 --> 00:00:45.782
[APPLAUSE]

00:00:45.782 --> 00:00:47.210
All right.

00:00:47.210 --> 00:00:48.870
So warm yourselves by the fire.

00:00:48.870 --> 00:00:50.520
We're going to ask
some questions.

00:00:50.520 --> 00:00:52.200
You're going to
ask some questions.

00:00:52.200 --> 00:00:54.860
We're going to try to
answer those questions.

00:00:54.860 --> 00:00:56.760
So we pre-rolled some
questions online.

00:00:56.760 --> 00:00:58.900
It was interesting to see what
people were thinking online.

00:00:58.900 --> 00:01:01.316
So we have some of those, we'll
interweave those questions

00:01:01.316 --> 00:01:03.120
with questions
from the audience.

00:01:03.120 --> 00:01:04.989
I will show you how
that works in a second.

00:01:04.989 --> 00:01:06.690
First, let's
introduce the panel.

00:01:06.690 --> 00:01:09.840
I'm Chet Haase,
Android Toolkit team.

00:01:09.840 --> 00:01:12.926
DAVE BURKE: Dave Burke, I
get blamed for most things.

00:01:12.926 --> 00:01:14.550
STEPH CUTHBERTSON:
Steph Cuthbertson, I

00:01:14.550 --> 00:01:16.080
work on the
developer experience.

00:01:16.080 --> 00:01:19.000
ROMAIN GUY: Romain Guy, I work
on the graphics in Kotlin.

00:01:19.000 --> 00:01:21.292
AURASH MAHBOD: Aurash, I work
on Play and Instant apps.

00:01:21.292 --> 00:01:22.749
DIANNE HACKBORN:
Dianne Hackborn, I

00:01:22.749 --> 00:01:23.990
manage the framework team.

00:01:23.990 --> 00:01:25.490
XAVIER DUCROHET:
I'm Xavier Ducrohet

00:01:25.490 --> 00:01:27.090
I work on the tools team.

00:01:27.090 --> 00:01:29.610
CHET HAASE: We have also
a bunch of other people

00:01:29.610 --> 00:01:32.650
from the engineering team
to my stage right here.

00:01:32.650 --> 00:01:34.590
So if one of these
people can't answer it,

00:01:34.590 --> 00:01:36.660
then maybe one of the
people in the audience

00:01:36.660 --> 00:01:38.850
can't answer it either.

00:01:38.850 --> 00:01:40.797
So let me show you how
this is going to work.

00:01:40.797 --> 00:01:42.630
We have a couple of
questions to kick it off

00:01:42.630 --> 00:01:45.240
and then we'll kick it out
to the audience from there.

00:01:45.240 --> 00:01:48.420
So first of all, what's
an exciting feature

00:01:48.420 --> 00:01:51.169
that you're working on
for the next release?

00:01:51.169 --> 00:01:52.710
Romain, do you want
to take that one?

00:01:52.710 --> 00:01:53.709
ROMAIN GUY: No, I don't.

00:01:53.709 --> 00:01:55.339
[LAUGHTER]

00:01:55.339 --> 00:01:57.880
CHET HAASE: OK, that's a really
good example to keep in mind.

00:01:57.880 --> 00:02:00.540
We do not answer questions
about future development, kind

00:02:00.540 --> 00:02:02.340
of a policy thing that we have.

00:02:02.340 --> 00:02:04.290
I would say 90% of
the questions that I

00:02:04.290 --> 00:02:05.959
got in the Twitter
thread when I asked

00:02:05.959 --> 00:02:07.250
were about future developments.

00:02:07.250 --> 00:02:09.030
So that makes it easy, we
don't have to answer those.

00:02:09.030 --> 00:02:09.990
DAVE BURKE: This is
going really well.

00:02:09.990 --> 00:02:10.770
CHET HAASE: Yeah, yeah, yeah.

00:02:10.770 --> 00:02:12.550
So we'll be done in
the next two minutes.

00:02:12.550 --> 00:02:15.270
All right, let's ask
a more real question.

00:02:15.270 --> 00:02:17.190
I'll toss this to Romain again.

00:02:17.190 --> 00:02:19.050
Will Android
architecture components

00:02:19.050 --> 00:02:21.210
be a de facto
architecture choice

00:02:21.210 --> 00:02:23.050
with continuous Google support?

00:02:23.050 --> 00:02:27.230
That's like continuous
builds except for support.

00:02:27.230 --> 00:02:29.730
ROMAIN GUY: So very
long answer, yes.

00:02:29.730 --> 00:02:32.610
More seriously, we listened.

00:02:32.610 --> 00:02:35.460
You were asking us to have an
opinion about the archetecture.

00:02:35.460 --> 00:02:37.146
For many years, we
did not have one.

00:02:37.146 --> 00:02:38.520
You could do
whatever you wanted.

00:02:38.520 --> 00:02:39.978
You can still do
whatever you want,

00:02:39.978 --> 00:02:42.127
but we have a solution
that's our solution.

00:02:42.127 --> 00:02:43.210
We're going to support it.

00:02:43.210 --> 00:02:44.880
We have tooling, we have more
and more libraries around it,

00:02:44.880 --> 00:02:46.860
we have documentation,
tons of talks.

00:02:46.860 --> 00:02:49.080
So if you like it
or if you don't even

00:02:49.080 --> 00:02:52.544
know what architecture you
want to use, go with that one.

00:02:52.544 --> 00:02:53.710
CHET HAASE: So there you go.

00:02:53.710 --> 00:02:54.540
That's an example.

00:02:54.540 --> 00:02:57.210
In fact, it was a real question
and kind of a real answer

00:02:57.210 --> 00:02:57.870
as well.

00:02:57.870 --> 00:03:00.700
I would invite everybody in
the audience to ask a question.

00:03:00.700 --> 00:03:02.525
There are two
microphones down here.

00:03:02.525 --> 00:03:03.900
We were curious
how long it would

00:03:03.900 --> 00:03:05.483
take people to get
to the microphones,

00:03:05.483 --> 00:03:07.710
so it's going to be kind
of a "Hunger Games" kind

00:03:07.710 --> 00:03:09.130
of thing going on.

00:03:09.130 --> 00:03:11.580
So please come up to the
mics and ask a question.

00:03:11.580 --> 00:03:13.860
If people in the audience
don't ask questions,

00:03:13.860 --> 00:03:16.090
I have some here, so we
can certainly do that.

00:03:16.090 --> 00:03:17.310
I see someone walking
up right there.

00:03:17.310 --> 00:03:18.685
Why don't we start
with that one?

00:03:18.685 --> 00:03:20.130
Go ahead.

00:03:20.130 --> 00:03:22.890
AUDIENCE: The mic
is too tall for me.

00:03:22.890 --> 00:03:27.540
So following up to the question
about architecture components,

00:03:27.540 --> 00:03:32.100
I remember Dianne posting
online, saying like, you know,

00:03:32.100 --> 00:03:35.040
look, we gave you activity, we
gave you a content provider,

00:03:35.040 --> 00:03:36.580
we gave you all these things.

00:03:36.580 --> 00:03:38.850
That's the agnostic platform.

00:03:38.850 --> 00:03:40.460
You can do whatever
you want with it.

00:03:40.460 --> 00:03:43.506
Like, we're not going to
impose any choices on you.

00:03:43.506 --> 00:03:45.630
I'm sure there are other
people on the Android team

00:03:45.630 --> 00:03:47.560
who agreed with her.

00:03:47.560 --> 00:03:50.190
I wonder what Dianne
and those other people

00:03:50.190 --> 00:03:52.050
might think about
architecture components.

00:03:52.050 --> 00:03:56.520
Is this like a perversion of
like their vision of Android?

00:03:56.520 --> 00:03:57.580
Or is this like--

00:03:57.580 --> 00:04:00.270
DIANNE HACKBORN: All wrong.

00:04:00.270 --> 00:04:02.250
AUDIENCE: Or is
this something that

00:04:02.250 --> 00:04:04.750
like, OK, well, I understand
why some people might need it.

00:04:04.750 --> 00:04:07.200
But if you want to do things
weirdly, you can do that.

00:04:07.200 --> 00:04:11.247
Like, was there a debate
about architecture components?

00:04:11.247 --> 00:04:12.830
DIANNE HACKBORN: So
the answer to that

00:04:12.830 --> 00:04:15.570
is that basically all still
holds true as far as the core

00:04:15.570 --> 00:04:16.589
platform is concerned.

00:04:16.589 --> 00:04:17.837
So you can think it like--

00:04:17.837 --> 00:04:19.920
and when I say it, I meant
it as a framework team,

00:04:19.920 --> 00:04:21.300
it's really the core platform.

00:04:21.300 --> 00:04:24.840
This is a step that's
shipped on the device

00:04:24.840 --> 00:04:28.350
that like defines what you
can do with the device.

00:04:28.350 --> 00:04:31.740
And we want to keep
that still generic,

00:04:31.740 --> 00:04:34.416
not enforcing any particular
model on applications where

00:04:34.416 --> 00:04:35.790
it doesn't make
sense, because we

00:04:35.790 --> 00:04:37.873
want to have a lot of
flexibility for applications

00:04:37.873 --> 00:04:41.086
to do new things and
iterate on things

00:04:41.086 --> 00:04:42.210
and all that kind of stuff.

00:04:42.210 --> 00:04:44.592
The architecture components
are basically a layer on top

00:04:44.592 --> 00:04:46.050
that, you know,
it's very different

00:04:46.050 --> 00:04:47.680
because it's in the
support library.

00:04:47.680 --> 00:04:50.700
So it can actually evolve very
rapidly with the applications.

00:04:50.700 --> 00:04:52.800
It can change and
break because it's not

00:04:52.800 --> 00:04:55.710
going to break the applications
when those changes happen.

00:04:55.710 --> 00:04:57.690
So we're basically
putting a new layer

00:04:57.690 --> 00:05:01.290
on top of the platform that
gives our very strong position

00:05:01.290 --> 00:05:04.170
on how we think applications
should be developed,

00:05:04.170 --> 00:05:06.660
which will probably actually
evolve very much over time

00:05:06.660 --> 00:05:07.824
as the world changes.

00:05:07.824 --> 00:05:08.490
ROMAIN GUY: Yes.

00:05:08.490 --> 00:05:10.420
And let's face it, every
few years [INAUDIBLE]

00:05:10.420 --> 00:05:13.410
has decided there's a new and
better way of architecturing

00:05:13.410 --> 00:05:14.040
things.

00:05:14.040 --> 00:05:16.580
We had MVC then MVP the MVVC.

00:05:16.580 --> 00:05:18.450
We discovered MVI the
other day on Twitter,

00:05:18.450 --> 00:05:19.860
I have no idea what it is.

00:05:19.860 --> 00:05:22.686
I think you're just making
that up at this point.

00:05:22.686 --> 00:05:24.060
So yeah, I'm sure
in a few years,

00:05:24.060 --> 00:05:25.686
it will have evolved
to something else.

00:05:25.686 --> 00:05:27.851
STEPH CUTHBERTSON: I also
want to tell a funny story

00:05:27.851 --> 00:05:29.500
about that post
that you referred to

00:05:29.500 --> 00:05:32.610
of Dianne's, because we were
talking about it backstage

00:05:32.610 --> 00:05:35.850
like three minutes ago
or a few minutes ago.

00:05:35.850 --> 00:05:38.810
How many people here have
read that post of Dianne's?

00:05:38.810 --> 00:05:39.580
See, I told you.

00:05:39.580 --> 00:05:40.340
DIANNE HACKBORN: Wow.

00:05:40.340 --> 00:05:42.714
STEPH CUTHBERTSON: So so many
people have read that post.

00:05:42.714 --> 00:05:48.082
And I remember you posted it and
then it got like 125 comments.

00:05:48.082 --> 00:05:50.040
And I remember I walked
back to Dianne's office

00:05:50.040 --> 00:05:52.660
and I said, Dianne, do we
need to have an opinion?

00:05:52.660 --> 00:05:56.160
And she said, I think
we might need to.

00:05:56.160 --> 00:05:59.010
So it's been great
to get the feedback

00:05:59.010 --> 00:06:03.755
and it really helped us
figure out how to evolve.

00:06:03.755 --> 00:06:06.349
CHET HAASE: Thanks
How about over here?

00:06:06.349 --> 00:06:07.140
AUDIENCE: Hi there.

00:06:07.140 --> 00:06:09.590
A question on media
formats, codex.

00:06:09.590 --> 00:06:14.050
Is there anything beyond
the HDR VP9 that's new in P

00:06:14.050 --> 00:06:16.007
that you can talk about?

00:06:16.007 --> 00:06:17.090
ROMAIN GUY: So something--

00:06:17.090 --> 00:06:19.250
CHET HAASE: Something, but can
you come closer to the mic,

00:06:19.250 --> 00:06:21.100
maybe, it's really the
acoustics are very difficult.

00:06:21.100 --> 00:06:21.320
AURASH MAHBOD: There we go.

00:06:21.320 --> 00:06:22.070
CHET HAASE: Great.

00:06:22.070 --> 00:06:24.950
AUDIENCE: Audio video
codex, new formats in P

00:06:24.950 --> 00:06:30.150
that you can talk about
beyond the VP9 HDR support?

00:06:30.150 --> 00:06:35.120
DAVE BURKE: New codex in
P. Uh, I remember in O, we

00:06:35.120 --> 00:06:37.780
added a bunch of Bluetooth
codex like AAC and LDAC

00:06:37.780 --> 00:06:39.680
to go beyond SBC.

00:06:39.680 --> 00:06:43.580
I don't think we added any
codex in P. I'm looking down,

00:06:43.580 --> 00:06:45.200
phone a friend.

00:06:45.200 --> 00:06:46.850
This is when I call
to the adware team.

00:06:46.850 --> 00:06:48.350
Yeah, everyone's
shaking their head.

00:06:48.350 --> 00:06:51.390
I don't think we added any
new codex in P. I think.

00:06:51.390 --> 00:06:53.468
CHET HAASE: Our consensus is no.

00:06:53.468 --> 00:06:55.938
[LAUGHTER]

00:06:55.938 --> 00:06:57.420
Thanks.

00:06:57.420 --> 00:06:58.410
AUDIENCE: Hey.

00:06:58.410 --> 00:07:00.330
First of all, I just
wanted to thank you

00:07:00.330 --> 00:07:02.462
all for all your hard work.

00:07:02.462 --> 00:07:03.420
ROMAIN GUY: Thank them.

00:07:03.420 --> 00:07:05.140
AUDIENCE: And
everyone, actually.

00:07:05.140 --> 00:07:07.669
So it's been a great
I/O. And I think

00:07:07.669 --> 00:07:09.210
you've made a lot
of progress in just

00:07:09.210 --> 00:07:12.300
listening to the community,
so it's been awesome.

00:07:12.300 --> 00:07:15.172
My question is going to be
about testing, which I know

00:07:15.172 --> 00:07:16.380
it's going to really shocker.

00:07:16.380 --> 00:07:16.660
CHET HAASE: OK.

00:07:16.660 --> 00:07:18.360
ROMAIN GUY: Chet, that's
a question for you.

00:07:18.360 --> 00:07:19.693
CHET HAASE: Somehow I knew that.

00:07:19.693 --> 00:07:23.310
AUDIENCE: So it's a
question obviously for Chet.

00:07:23.310 --> 00:07:26.820
At the Android keynote two
days ago, Chet actually

00:07:26.820 --> 00:07:28.590
had two slides on testing.

00:07:28.590 --> 00:07:31.410
One was something about
fluent assertions,

00:07:31.410 --> 00:07:35.726
the other had a picture of
a drink with a straw in it.

00:07:35.726 --> 00:07:42.600
It was about the ability
to mock final static things

00:07:42.600 --> 00:07:44.039
in the Android framework.

00:07:44.039 --> 00:07:45.705
And then Romain made
an awesome comment.

00:07:45.705 --> 00:07:48.930
He's like, Chet looks confused.

00:07:48.930 --> 00:07:53.370
You know, and actually
I was also confused.

00:07:53.370 --> 00:07:58.219
I don't know why you would
want to kind of not maybe give

00:07:58.219 --> 00:07:59.760
that ability, but
highlight it as one

00:07:59.760 --> 00:08:02.940
of the important things
in testing, because later

00:08:02.940 --> 00:08:06.450
in the testing talk-- and we
actually talked about the fact

00:08:06.450 --> 00:08:08.130
that that's kind of undesirable.

00:08:08.130 --> 00:08:10.450
We don't want to
have people do that.

00:08:10.450 --> 00:08:12.360
So could we get
some comment on what

00:08:12.360 --> 00:08:17.160
is our official stance
on actually using

00:08:17.160 --> 00:08:21.900
that very powerful and
dangerous approach to testing?

00:08:21.900 --> 00:08:24.235
CHET HAASE: What's your opinion?

00:08:24.235 --> 00:08:24.735
So--

00:08:24.735 --> 00:08:26.580
AUDIENCE: I don't
know, I don't have on.

00:08:26.580 --> 00:08:29.760
CHET HAASE: --official stance
is probably a little strong,

00:08:29.760 --> 00:08:32.070
but I would say there
are probably more--

00:08:32.070 --> 00:08:34.530
there are more better
approaches to testing,

00:08:34.530 --> 00:08:36.480
such as the other stuff
that I talked about,

00:08:36.480 --> 00:08:40.230
the ATSL stuff that's
in Jetpack now,

00:08:40.230 --> 00:08:42.780
Espresso, testing frameworks
that actually do things

00:08:42.780 --> 00:08:43.929
correctly.

00:08:43.929 --> 00:08:46.140
However, you heard from
the audiences response

00:08:46.140 --> 00:08:48.750
to the ability to mock the
framework that sometimes

00:08:48.750 --> 00:08:50.820
developers need-- for
whatever purpose--

00:08:50.820 --> 00:08:53.160
the ability to do that.

00:08:53.160 --> 00:08:56.700
And the framework is
really about providing

00:08:56.700 --> 00:09:00.340
the capabilities that you need
for your particular situation.

00:09:00.340 --> 00:09:02.910
So by providing the ability
to mock the framework,

00:09:02.910 --> 00:09:05.970
specific methods more
easily, we're saying here

00:09:05.970 --> 00:09:08.280
is a facility if
it's important to you

00:09:08.280 --> 00:09:09.870
and necessary for
what you're doing.

00:09:09.870 --> 00:09:13.270
It may not be the right
general approach overall,

00:09:13.270 --> 00:09:15.804
but if it's a piece that
people feel they need,

00:09:15.804 --> 00:09:17.220
there's a bit of
plumbing for you.

00:09:17.220 --> 00:09:20.235
I don't know if anybody else
had a different take on this.

00:09:20.235 --> 00:09:22.034
Does that help?

00:09:22.034 --> 00:09:24.450
DIANNE HACKBORN: I mean, I
guess I could add a little bit.

00:09:24.450 --> 00:09:30.690
There's, philosophically, like
not having finals and stats

00:09:30.690 --> 00:09:32.730
and stuff is fine.

00:09:32.730 --> 00:09:35.190
You know, the issue is
within the platform,

00:09:35.190 --> 00:09:36.719
we have those in the APIs.

00:09:36.719 --> 00:09:38.760
AUDIENCE: And that's for
a good reason, actually.

00:09:38.760 --> 00:09:39.950
DIANNE HACKBORN: Right.

00:09:39.950 --> 00:09:41.640
But that means
that if you do want

00:09:41.640 --> 00:09:45.039
to mock something in
the platform anywhere,

00:09:45.039 --> 00:09:46.330
you need to be able to do that.

00:09:46.330 --> 00:09:48.121
And so we had, actually,
a discussion about

00:09:48.121 --> 00:09:51.030
like getting these into Mockito
and there was like, no, no, no.

00:09:51.030 --> 00:09:51.780
This is wrong.

00:09:51.780 --> 00:09:52.260
You shouldn't do this.

00:09:52.260 --> 00:09:53.940
But we kind of
reached the agreement

00:09:53.940 --> 00:09:57.600
that well in this case,
it actually makes sense.

00:09:57.600 --> 00:09:59.170
This is like something
we need to do.

00:09:59.170 --> 00:10:00.470
So that's why it happened.

00:10:00.470 --> 00:10:02.886
AUDIENCE: So it was kind of
like the framework developers,

00:10:02.886 --> 00:10:03.840
almost.

00:10:03.840 --> 00:10:04.980
DIANNE HACKBORN: Well not
for framework developers,

00:10:04.980 --> 00:10:07.560
but for anyone who's writing
tests where they want

00:10:07.560 --> 00:10:11.050
to mock out framework APIs.

00:10:11.050 --> 00:10:12.480
AUDIENCE: OK, that makes--

00:10:12.480 --> 00:10:14.959
DIANNE HACKBORN: Like you
have a context that you

00:10:14.959 --> 00:10:16.500
get a WindowManager
from and you want

00:10:16.500 --> 00:10:18.240
to mark out the
WindowManager object

00:10:18.240 --> 00:10:20.894
to see if the correct
calls happen on it.

00:10:20.894 --> 00:10:22.310
AUDIENCE: All
right, thanks a lot.

00:10:22.310 --> 00:10:23.101
CHET HAASE: Thanks.

00:10:25.290 --> 00:10:27.270
AUDIENCE: What's
your current thinking

00:10:27.270 --> 00:10:30.330
around Android tablets?

00:10:30.330 --> 00:10:33.830
[LAUGHTER]

00:10:33.830 --> 00:10:39.830
[APPLAUSE]

00:10:39.830 --> 00:10:41.915
CHET HAASE: They like them.

00:10:41.915 --> 00:10:45.650
AUDIENCE: Do you still see it
as a device type within the base

00:10:45.650 --> 00:10:47.600
platform, or are you
like winding it down

00:10:47.600 --> 00:10:48.959
and chucking it over the--

00:10:48.959 --> 00:10:50.000
CHET HAASE: I'm missing--

00:10:50.000 --> 00:10:51.290
if you can get closer
to the mic, thanks.

00:10:51.290 --> 00:10:53.373
AUDIENCE: Like, do you
still see it as a base part

00:10:53.373 --> 00:10:57.170
to the platform or have you
chucked it to Chrome OS guys?

00:10:57.170 --> 00:10:59.590
Because it's kind of like
we're getting mixed signals

00:10:59.590 --> 00:11:03.745
and it's like with Chrome OS
they don't support Android,

00:11:03.745 --> 00:11:05.120
but they don't
put Android first.

00:11:05.120 --> 00:11:06.560
They have a
different system UIs,

00:11:06.560 --> 00:11:08.300
so it's like is
there going to be

00:11:08.300 --> 00:11:13.010
a tablet version of the new P
overview swipe thingy whatever,

00:11:13.010 --> 00:11:13.990
I guess?

00:11:13.990 --> 00:11:16.990
[LAUGHTER]

00:11:16.990 --> 00:11:22.490
[APPLAUSE]

00:11:22.490 --> 00:11:24.590
DAVE BURKE: So from a
platform perspective,

00:11:24.590 --> 00:11:26.140
we support tablets.

00:11:26.140 --> 00:11:27.600
You know, we have
some [INAUDIBLE]

00:11:27.600 --> 00:11:30.160
and we still support tablets.

00:11:30.160 --> 00:11:35.110
From a Google Pixel perspective,
which is a product team,

00:11:35.110 --> 00:11:38.160
they've been focused on
the crossover form factor.

00:11:38.160 --> 00:11:41.680
So tablets crossing over with
laptops, so the Pixelbook,

00:11:41.680 --> 00:11:42.655
for example.

00:11:42.655 --> 00:11:44.280
And once you have
a hard keyboard,

00:11:44.280 --> 00:11:46.780
Chrome OS is a really
nice operating system.

00:11:46.780 --> 00:11:49.110
And so what they've done
is they've brought Chrome--

00:11:49.110 --> 00:11:52.690
as you know-- brought Android
apps running within Chrome OS.

00:11:52.690 --> 00:11:55.360
And to us purists
on the Android team,

00:11:55.360 --> 00:11:57.490
it's actually a nice
thing, because it's

00:11:57.490 --> 00:12:00.070
the same apps that
run on a Chromebook

00:12:00.070 --> 00:12:01.960
with Android as on a tablet.

00:12:01.960 --> 00:12:06.040
And so in so far as it's helping
Android's ecosystem have better

00:12:06.040 --> 00:12:08.470
large screen landscape-sized--

00:12:08.470 --> 00:12:11.390
in this case-- apps,
it's all helping.

00:12:11.390 --> 00:12:14.140
Like, it helps tablets too.

00:12:14.140 --> 00:12:15.809
But yeah, that's
sort of the status.

00:12:15.809 --> 00:12:18.100
As far as the platform's
concerned, we support tablets.

00:12:18.100 --> 00:12:20.698
There's a lot of
Android tablets.

00:12:20.698 --> 00:12:22.156
Yeah.

00:12:22.156 --> 00:12:23.128
AUDIENCE: All right.

00:12:23.128 --> 00:12:24.369
Mm-hmm.

00:12:24.369 --> 00:12:26.910
CHET HAASE: You look like you're
not done with your question.

00:12:26.910 --> 00:12:27.660
DAVE BURKE: Yeah.

00:12:27.660 --> 00:12:29.490
Or you're not happy
with my answer.

00:12:29.490 --> 00:12:31.440
AUDIENCE: It just seems
Chromebooks are still

00:12:31.440 --> 00:12:32.430
focused on web first.

00:12:32.430 --> 00:12:37.190
Yes they support Android,
but they're not like--

00:12:37.190 --> 00:12:38.190
they don't put it first.

00:12:38.190 --> 00:12:41.905
So it's like what's the story
from the developer side?

00:12:41.905 --> 00:12:44.740
AKA, I bought Pixel C, you
don't support it anymore,

00:12:44.740 --> 00:12:47.790
but it's like
should we be buying

00:12:47.790 --> 00:12:52.790
Chromebooks and detachable
Chromebooks to develop on or--

00:12:52.790 --> 00:12:55.710
DAVE BURKE: I mean, you
should buy whatever device you

00:12:55.710 --> 00:12:58.920
think is good for you to buy.

00:12:58.920 --> 00:13:00.420
I use a Pixelbook, by the way.

00:13:00.420 --> 00:13:02.092
I love it, I think it's good.

00:13:02.092 --> 00:13:03.300
And I run Android apps on it.

00:13:03.300 --> 00:13:04.090
That's me personally.

00:13:04.090 --> 00:13:06.590
But I think everyone should
pick whatever product they want.

00:13:06.590 --> 00:13:09.210
From our perspective, you know
as a platform operating system

00:13:09.210 --> 00:13:12.390
provider, it's important
that Android supports tablets

00:13:12.390 --> 00:13:13.950
and has good tablet apps.

00:13:13.950 --> 00:13:15.322
And that's what we focus on.

00:13:15.322 --> 00:13:16.488
AUDIENCE: All right, thanks.

00:13:19.180 --> 00:13:21.370
AUDIENCE: So I went to one
of those sessions, which

00:13:21.370 --> 00:13:24.130
was the best practices for
kind of the current state

00:13:24.130 --> 00:13:24.807
of Android.

00:13:24.807 --> 00:13:26.390
And you guys went
over the current way

00:13:26.390 --> 00:13:30.250
to do constraint layouts and
databases, but I was wondering,

00:13:30.250 --> 00:13:31.927
you guys didn't
really go over what

00:13:31.927 --> 00:13:33.760
you think we should be
doing for networking?

00:13:33.760 --> 00:13:35.440
I know a few years
ago, you guys were

00:13:35.440 --> 00:13:37.340
pushing Volley really hard.

00:13:37.340 --> 00:13:40.120
But now, I feel like there's
Volley and Retrofit and 15

00:13:40.120 --> 00:13:40.889
other libraries.

00:13:40.889 --> 00:13:43.180
And I know it kind of depends
on what your use case is,

00:13:43.180 --> 00:13:45.640
but if you were going to say
for someone starting off,

00:13:45.640 --> 00:13:48.529
what would you recommend for
the networking manager for us

00:13:48.529 --> 00:13:49.570
to use in an Android app?

00:13:49.570 --> 00:13:50.740
CHET HAASE: Recommend for what?

00:13:50.740 --> 00:13:51.670
AUDIENCE: For networking.

00:13:51.670 --> 00:13:52.270
STEPH CUTHBERTSON: Networking.

00:13:52.270 --> 00:13:53.170
AUDIENCE: Like making
network requests,

00:13:53.170 --> 00:13:54.445
just a regular GET request.

00:13:59.200 --> 00:14:02.427
CHET HAASE: Someone in the
peanut gallery says Retrofit.

00:14:02.427 --> 00:14:03.760
You want to have a vote on that?

00:14:03.760 --> 00:14:04.259
Yes?

00:14:04.259 --> 00:14:06.610
OK?

00:14:06.610 --> 00:14:09.991
Yeah, Volley was the right thing
for some things at the time.

00:14:09.991 --> 00:14:12.490
I think that there are probably
other more evolved libraries

00:14:12.490 --> 00:14:14.281
out there that might
be the right solution.

00:14:14.281 --> 00:14:17.310
And I think all libraries
do non-overlapping things.

00:14:17.310 --> 00:14:21.080
So I don't think
there's an exact match.

00:14:21.080 --> 00:14:23.170
But they said Retrofit.

00:14:23.170 --> 00:14:25.571
I certainly hear a lot of
good things about that.

00:14:25.571 --> 00:14:26.070
[CHEERING]

00:14:26.070 --> 00:14:27.661
Like, one of the--

00:14:27.661 --> 00:14:29.062
there we go!

00:14:29.062 --> 00:14:31.840
One of the things
that we're doing,

00:14:31.840 --> 00:14:33.964
co-incidental with the
architecture components

00:14:33.964 --> 00:14:35.630
but it's not necessarily
the same thing,

00:14:35.630 --> 00:14:37.392
is that when there's
a good library

00:14:37.392 --> 00:14:39.100
out there that we
didn't happen to build,

00:14:39.100 --> 00:14:40.520
we're happy to recommend it.

00:14:40.520 --> 00:14:42.400
That goes for Retrofit,
it goes for things

00:14:42.400 --> 00:14:46.130
like Picasso for image
loading, Glide as well.

00:14:46.130 --> 00:14:48.160
Whatever the thing is,
if that's a good library,

00:14:48.160 --> 00:14:49.707
why should we
reinvent that thing?

00:14:49.707 --> 00:14:50.290
In this case--

00:14:50.290 --> 00:14:54.547
[STRONG WIND BLOWING]

00:14:54.547 --> 00:14:58.670
[LAUGHTER]

00:14:58.670 --> 00:15:01.500
All right, maybe
not Retrofit then.

00:15:01.500 --> 00:15:03.460
[LAUGHTER]

00:15:03.460 --> 00:15:07.380
[APPLAUSE]

00:15:12.770 --> 00:15:13.750
Are we done?

00:15:13.750 --> 00:15:15.220
ROMAIN GUY: Did you plan that?

00:15:15.220 --> 00:15:17.200
CHET HAASE: All right.

00:15:17.200 --> 00:15:20.110
STEPH CUTHBERTSON: I can add
we've been walking around

00:15:20.110 --> 00:15:23.200
and several people
I have talked with

00:15:23.200 --> 00:15:28.870
have asked if we can
recommend more libraries,

00:15:28.870 --> 00:15:31.780
specifically outside of
Google, the ones created

00:15:31.780 --> 00:15:34.270
by the community, which
that we think work best.

00:15:34.270 --> 00:15:36.520
And so I think that's
been a great question

00:15:36.520 --> 00:15:37.570
and great advice.

00:15:37.570 --> 00:15:40.240
It's always been our
intention with Jetpack

00:15:40.240 --> 00:15:43.180
to have an opinion about the
best way to do development,

00:15:43.180 --> 00:15:45.430
because several of you
have said that saves time.

00:15:45.430 --> 00:15:48.220
You don't have to look at
a bunch of things or six,

00:15:48.220 --> 00:15:51.010
as [INAUDIBLE] always tells me.

00:15:51.010 --> 00:15:54.643
So I think it's
been great feedback.

00:15:54.643 --> 00:15:56.120
CHET HAASE: Thanks.

00:15:56.120 --> 00:15:56.919
Yes sir.

00:15:56.919 --> 00:15:58.210
AUDIENCE: Is this close enough?

00:15:58.210 --> 00:15:59.850
Yeah, it is.

00:15:59.850 --> 00:16:03.540
So a lot of the examples we've
seen for code during I/O--

00:16:03.540 --> 00:16:06.360
not close enough-- a
lot of the examples

00:16:06.360 --> 00:16:09.510
we've seen for code during
I/O have been Kotlin code.

00:16:09.510 --> 00:16:11.940
And I guess a question
that I kind of have is

00:16:11.940 --> 00:16:14.280
what's the long-term
things that developers

00:16:14.280 --> 00:16:17.740
can expect if they have a large
code base that's still in Java?

00:16:17.740 --> 00:16:19.740
STEPH CUTHBERTSON: Let
me make sure I have that.

00:16:19.740 --> 00:16:21.364
The question was what
should developers

00:16:21.364 --> 00:16:24.090
expect if they have a code base
in Java programming language?

00:16:24.090 --> 00:16:25.798
AUDIENCE: Right, like
long-term support--

00:16:25.798 --> 00:16:27.840
STEPH CUTHBERTSON:
Yeah, I can take that.

00:16:27.840 --> 00:16:30.600
So when we invested
in Kotlin, we

00:16:30.600 --> 00:16:33.160
knew that was going to be an
investment for the long-term.

00:16:33.160 --> 00:16:36.070
So we're completely
committed to the language.

00:16:36.070 --> 00:16:39.120
We also knew when we
invested in Kotlin that day,

00:16:39.120 --> 00:16:42.180
whenever it was, May 17, that
it meant that we were doubling

00:16:42.180 --> 00:16:43.980
down on all of our languages.

00:16:43.980 --> 00:16:46.140
And a lot of you have
also said that we

00:16:46.140 --> 00:16:49.570
needed to do more to support
the existing languages we had.

00:16:49.570 --> 00:16:53.070
So the way we saw it was we're
not choosing a new language,

00:16:53.070 --> 00:16:55.020
we're investing in
all of our languages.

00:16:55.020 --> 00:16:59.790
And in fact, you can see that
in C++ we've launched ndk-build,

00:16:59.790 --> 00:17:02.920
CMake, we've significantly
improved the ndk,

00:17:02.920 --> 00:17:06.270
we launched the new C++ profiler
while we hear the toolchain

00:17:06.270 --> 00:17:09.569
in the Java programming language
because we added Java 8--

00:17:09.569 --> 00:17:11.609
java.time is my
personal favorite.

00:17:11.609 --> 00:17:16.440
And you should expect
to see us continue

00:17:16.440 --> 00:17:18.540
to invest in our languages.

00:17:18.540 --> 00:17:21.390
It's really important with
such a large ecosystem

00:17:21.390 --> 00:17:23.940
to support that
ecosystem where it is.

00:17:23.940 --> 00:17:27.390
At the same time, we've seen a
tremendous interest in Kotlin.

00:17:27.390 --> 00:17:29.760
I think we talked about
some of the statistics,

00:17:29.760 --> 00:17:36.150
and so like 28 of the top 100
apps, 35% of pro-developers.

00:17:36.150 --> 00:17:38.252
It's had 6x growth in one year.

00:17:38.252 --> 00:17:39.960
So if you haven't
looked at the language,

00:17:39.960 --> 00:17:42.300
we do think it's a good
idea to take a look.

00:17:42.300 --> 00:17:44.825
But hopefully, that helps
answer that question.

00:17:44.825 --> 00:17:46.325
ROMAIN GUY: And to
us, you're saying

00:17:46.325 --> 00:17:48.760
that's why it took us so long
to support another language,

00:17:48.760 --> 00:17:50.460
because the community
has been asking

00:17:50.460 --> 00:17:52.043
for different languages
over the years

00:17:52.043 --> 00:17:54.422
and it's been 10 years
since Android launched.

00:17:54.422 --> 00:17:56.130
We wanted to make sure
that whichever one

00:17:56.130 --> 00:17:58.829
we picked we would support
truly and correctly,

00:17:58.829 --> 00:18:00.120
without dropping the other one.

00:18:00.120 --> 00:18:02.610
So we took out time, we think
we made the right choice,

00:18:02.610 --> 00:18:04.890
and we're going to keep
working on all three languages

00:18:04.890 --> 00:18:07.249
that we support today.

00:18:07.249 --> 00:18:09.540
CHET HAASE: I can tell that
Xav wants to say something,

00:18:09.540 --> 00:18:12.100
so I'm going to toss a
tools question over to him.

00:18:12.100 --> 00:18:15.930
So are there any plans
for tools for build

00:18:15.930 --> 00:18:17.772
speed profiling and optimizing?

00:18:17.772 --> 00:18:19.230
I think the context
of the question

00:18:19.230 --> 00:18:21.167
was not can you make
the build faster,

00:18:21.167 --> 00:18:23.250
but if they see their build
is taking a long time,

00:18:23.250 --> 00:18:25.770
are there tools,
are there approaches

00:18:25.770 --> 00:18:28.290
that they can take to find out
what it is that's taking time

00:18:28.290 --> 00:18:29.498
so that they can optimize it?

00:18:29.498 --> 00:18:30.632
XAVIER DUCROHET: Yes.

00:18:30.632 --> 00:18:33.090
Yeah, we see a lot of developers
having a lot of issues not

00:18:33.090 --> 00:18:35.880
being able to make
their build faster,

00:18:35.880 --> 00:18:37.890
and we definitely
want to help there.

00:18:37.890 --> 00:18:41.140
There's already a lot of
resources that you can use.

00:18:41.140 --> 00:18:43.879
Gradle has build scans
that allow you to really

00:18:43.879 --> 00:18:45.420
get a lot of insight
into your build,

00:18:45.420 --> 00:18:47.131
so you can definitely use that.

00:18:47.131 --> 00:18:48.630
But we realize that
having something

00:18:48.630 --> 00:18:50.671
integrated into studio
would be extremely useful,

00:18:50.671 --> 00:18:53.734
so it's definitely
something we're considering.

00:18:53.734 --> 00:18:55.600
CHET HAASE: OK.

00:18:55.600 --> 00:18:58.490
AUDIENCE: So I downloaded
the Android P beta

00:18:58.490 --> 00:19:00.430
and I'm having a
good time on it.

00:19:00.430 --> 00:19:03.930
But my question is why
did ya'll remove the Clear

00:19:03.930 --> 00:19:09.620
All on the Overview tab?

00:19:09.620 --> 00:19:11.780
DAVE BURKE: Yes.

00:19:11.780 --> 00:19:15.200
I asked that exact
question to the team

00:19:15.200 --> 00:19:18.440
about five or six weeks ago.

00:19:18.440 --> 00:19:21.050
And they sighed at me like, ugh.

00:19:21.050 --> 00:19:23.060
And-- oh, are they over there?

00:19:25.650 --> 00:19:26.360
[INAUDIBLE]

00:19:26.360 --> 00:19:28.496
AUDIENCE: Yeah, the team's here.

00:19:28.496 --> 00:19:30.014
[LAUGHTER]

00:19:30.014 --> 00:19:30.680
DAVE BURKE: Hey.

00:19:30.680 --> 00:19:31.220
Hey team.

00:19:31.220 --> 00:19:32.480
Hey team, I told you so.

00:19:32.480 --> 00:19:34.830
AUDIENCE: So there
are two answers.

00:19:34.830 --> 00:19:37.932
One is Android is managing
the memory as well as you can.

00:19:37.932 --> 00:19:39.890
You don't need to swipe
things away for Android

00:19:39.890 --> 00:19:42.050
to be able to reclaim
that memory in order

00:19:42.050 --> 00:19:44.310
to be able to run other things.

00:19:44.310 --> 00:19:46.374
The second answer is
yeah, sorry about that.

00:19:46.374 --> 00:19:47.790
We're looking at
bringing it back.

00:19:47.790 --> 00:19:53.510
[LAUGHTER]

00:19:53.510 --> 00:19:55.580
DAVE BURKE: I can
tell you I have

00:19:55.580 --> 00:19:58.394
a build that's after
beta one on my phone,

00:19:58.394 --> 00:19:59.810
and I can proudly
tell you there's

00:19:59.810 --> 00:20:01.190
a Clear All button on it.

00:20:01.190 --> 00:20:03.383
So it's coming back.

00:20:03.383 --> 00:20:05.174
[CHEERING]

00:20:05.174 --> 00:20:05.840
AUDIENCE: Weeks.

00:20:05.840 --> 00:20:08.600
DAVE BURKE: Weeks, yes.

00:20:08.600 --> 00:20:11.870
AUDIENCE: So in 2014, I
was at the Moscone Center

00:20:11.870 --> 00:20:13.860
and I asked you guys a
question if you're going

00:20:13.860 --> 00:20:15.170
to keep maintaining Eclipse.

00:20:15.170 --> 00:20:17.160
And I'm really glad
that you were not.

00:20:17.160 --> 00:20:20.615
I'm 100% on the Android
Studio wagon now.

00:20:20.615 --> 00:20:23.240
I still worry about build times,
which was one of the questions

00:20:23.240 --> 00:20:24.830
that I had then.

00:20:24.830 --> 00:20:29.250
But my question to you
guys is, what are the warts

00:20:29.250 --> 00:20:32.040
that you wish you could
redo from Android 1.0?

00:20:32.040 --> 00:20:35.400
So if you could do Android 1.0
again, what would you change?

00:20:35.400 --> 00:20:36.936
ROMAIN GUY: Oh, so many things.

00:20:36.936 --> 00:20:38.840
[LAUGHTER]

00:20:38.840 --> 00:20:41.480
The UI docket, the
graphics pipeline.

00:20:41.480 --> 00:20:43.706
DAVE BURKE: Ouch.

00:20:43.706 --> 00:20:45.020
ROMAIN GUY: I did some of that.

00:20:45.020 --> 00:20:46.490
CHET HAASE: I know.

00:20:46.490 --> 00:20:50.450
DIANNE HACKBORN: To not let
applications write settings.

00:20:50.450 --> 00:20:53.450
CHET HAASE: I've often
thought that designing APIs is

00:20:53.450 --> 00:20:55.010
building future regret.

00:20:55.010 --> 00:20:58.760
I have never yet created an
API that I haven't regretted

00:20:58.760 --> 00:21:01.670
something about in the future.

00:21:01.670 --> 00:21:04.250
I believe that they ran
really fast-- they, I

00:21:04.250 --> 00:21:06.080
was not there at the
time-- at the time.

00:21:06.080 --> 00:21:08.310
And therefore, they were
able to get it out the door

00:21:08.310 --> 00:21:10.685
and now we have time to actually
fix some of those warts.

00:21:10.685 --> 00:21:14.210
What we can't do is remove
methods and break applications.

00:21:14.210 --> 00:21:15.830
So we would certainly--

00:21:15.830 --> 00:21:18.500
we have been improving things,
hopefully, and introducing

00:21:18.500 --> 00:21:20.060
new facilities to
make things better,

00:21:20.060 --> 00:21:21.800
but we can't actually get
rid of some of the things

00:21:21.800 --> 00:21:23.630
that we regret because we don't
want to break the apps that

00:21:23.630 --> 00:21:24.540
are depending on it.

00:21:24.540 --> 00:21:26.150
So there is that
little bit of stuff

00:21:26.150 --> 00:21:29.590
that we can't quite totally fix,
but we can improve other things

00:21:29.590 --> 00:21:30.380
along the way.

00:21:30.380 --> 00:21:31.790
DIANNE HACKBORN: Yeah,
there's a number of things

00:21:31.790 --> 00:21:33.770
that you find just like
we did 10 years ago.

00:21:33.770 --> 00:21:37.390
And today, you're like, oh
my gosh, that is not scaling.

00:21:37.390 --> 00:21:39.720
One of the ones that really
stands out is a broadcast.

00:21:42.290 --> 00:21:44.602
Our initial decision
to say, by default,

00:21:44.602 --> 00:21:46.310
when you send the
broadcast, it just goes

00:21:46.310 --> 00:21:48.530
to any manifest receiver
that wants to receive it,

00:21:48.530 --> 00:21:50.870
was a really bad decision.

00:21:50.870 --> 00:21:53.360
And we've learned this
over the last few years

00:21:53.360 --> 00:21:56.040
as we've seen on devices,
more and more applications

00:21:56.040 --> 00:21:58.546
waking up when just
random things happening.

00:21:58.546 --> 00:22:00.920
So we have been going through
this really painful process

00:22:00.920 --> 00:22:03.419
with the background restrictions
and all that kind of stuff,

00:22:03.419 --> 00:22:05.340
to try to get control
of that again.

00:22:05.340 --> 00:22:07.340
DAVE BURKE: Is a good
time to file a bug report?

00:22:07.340 --> 00:22:09.470
Because I've noticed
on my bill that when

00:22:09.470 --> 00:22:12.600
I change between cell and Wi-Fi,
it's slowing down a little bit.

00:22:12.600 --> 00:22:13.460
There's a little
bit of jank, which

00:22:13.460 --> 00:22:15.543
I know is broadcast because
of the network change.

00:22:15.543 --> 00:22:18.116
So Tim Murray, we've
got to fix that bug.

00:22:18.116 --> 00:22:19.342
AUDIENCE: OK.

00:22:19.342 --> 00:22:21.300
DAVE BURKE: Just having
a team one-on-one here.

00:22:21.300 --> 00:22:22.940
AURASH MAHBOD: I'd
also add multi APK.

00:22:22.940 --> 00:22:26.190
I kind of wish we had moved
to the app bundle style

00:22:26.190 --> 00:22:29.480
optimization much earlier, like
the version code management,

00:22:29.480 --> 00:22:31.370
the multi APK sharding
of the build time mode

00:22:31.370 --> 00:22:35.180
imposed was just a lot of burden
to put on developers, like you.

00:22:35.180 --> 00:22:40.114
And really excited that
we're removing that.

00:22:40.114 --> 00:22:43.050
CHET HAASE: Thanks.

00:22:43.050 --> 00:22:44.030
Hi.

00:22:44.030 --> 00:22:44.910
AUDIENCE: Hi.

00:22:44.910 --> 00:22:45.930
Can you guys hear me?

00:22:45.930 --> 00:22:46.596
CHET HAASE: Yes.

00:22:46.596 --> 00:22:50.290
AUDIENCE: It's deeply jarring
to see myself on that screen.

00:22:50.290 --> 00:22:50.970
Hi.

00:22:50.970 --> 00:22:53.220
So I've been doing Android
development for a while now

00:22:53.220 --> 00:22:56.240
and I've really loved, you
know, over the past few I/Os

00:22:56.240 --> 00:22:58.500
your guys' continued
investment in improving

00:22:58.500 --> 00:23:02.430
tooling and supporting Kotlin
as a first-class language,

00:23:02.430 --> 00:23:04.844
creating architecture
components.

00:23:04.844 --> 00:23:06.510
This year at I/O,
we've also heard a lot

00:23:06.510 --> 00:23:08.760
about Flutter,
which I understand

00:23:08.760 --> 00:23:12.740
to be the kind of
cross-platform mobile SDK.

00:23:12.740 --> 00:23:15.840
What do you all see in the
future of these two platforms

00:23:15.840 --> 00:23:17.370
in terms of Google's investment?

00:23:17.370 --> 00:23:18.990
Like, will one
supplant the other?

00:23:18.990 --> 00:23:20.520
Do we all need to learn Dart?

00:23:20.520 --> 00:23:24.654
What's the kind of five-year,
10-year view of that?

00:23:24.654 --> 00:23:26.570
ROMAIN GUY: Right, so
Google is a big company.

00:23:26.570 --> 00:23:27.522
We do a lot of things.

00:23:27.522 --> 00:23:28.980
And as you can see
in the keynotes,

00:23:28.980 --> 00:23:30.390
we explore the future.

00:23:30.390 --> 00:23:32.400
We have tons of experiments.

00:23:32.400 --> 00:23:36.140
Flutter is an exploration of
cross-platform development.

00:23:36.140 --> 00:23:39.120
And we're excited because
the Android platform

00:23:39.120 --> 00:23:41.880
is a place where both internal
teams and external teams

00:23:41.880 --> 00:23:44.460
can build these kinds of
exploration and experiments.

00:23:44.460 --> 00:23:47.280
They recently reached
beta and we're watching

00:23:47.280 --> 00:23:49.430
and we're waiting for the
feedback from developers.

00:23:49.430 --> 00:23:50.426
So yeah.

00:23:50.426 --> 00:23:52.800
So we're excited that so much
is happening on the Android

00:23:52.800 --> 00:23:54.410
platform.

00:23:54.410 --> 00:23:55.290
AUDIENCE: Thanks.

00:23:55.290 --> 00:23:56.820
CHET HAASE: Thanks.

00:23:56.820 --> 00:23:57.430
AUDIENCE: Hi.

00:23:57.430 --> 00:24:00.250
So Android is now 10 years old.

00:24:00.250 --> 00:24:03.890
And my question is, what
happens when the first developer

00:24:03.890 --> 00:24:06.572
certificates start to expire?

00:24:06.572 --> 00:24:07.780
CHET HAASE: When the-- sorry?

00:24:07.780 --> 00:24:10.870
AUDIENCE: When the developer
certificates start to expire.

00:24:10.870 --> 00:24:15.170
Do you have a mechanism
how to rotate the keys?

00:24:15.170 --> 00:24:17.430
DAVE BURKE: Honestly,
I don't know.

00:24:17.430 --> 00:24:20.105
Ben?

00:24:20.105 --> 00:24:24.560
[LAUGHTER]

00:24:26.540 --> 00:24:28.170
CHET HAASE: We'll
follow up after.

00:24:28.170 --> 00:24:29.670
ROMAIN GUY: Let us know
when it happens and--

00:24:29.670 --> 00:24:31.336
CHET HAASE: It's so
confidence-inspiring

00:24:31.336 --> 00:24:33.029
that you guys-- never mind.

00:24:33.029 --> 00:24:35.070
AUDIENCE: So yes, we are
obviously aware of this.

00:24:35.070 --> 00:24:37.219
There were guidance back
then to use certificates

00:24:37.219 --> 00:24:39.010
with long expirations,
like 30 years, which

00:24:39.010 --> 00:24:40.150
from a security
best practice point

00:24:40.150 --> 00:24:41.650
of view in retrospect,
another thing we probably

00:24:41.650 --> 00:24:44.320
would do differently, better
support for key rotation.

00:24:44.320 --> 00:24:47.020
So I think as you can
see in the USP code,

00:24:47.020 --> 00:24:48.220
there is some work towards.

00:24:48.220 --> 00:24:49.930
We've had some previous
experience with keysets

00:24:49.930 --> 00:24:52.360
and now there's some more work
going on with new APK formats,

00:24:52.360 --> 00:24:53.901
to support this
better in the future.

00:24:53.901 --> 00:24:55.540
But it's still a
work in progress.

00:24:55.540 --> 00:24:58.160
But something is
actively being worked on.

00:24:58.160 --> 00:24:59.020
AUDIENCE: Thank you.

00:24:59.020 --> 00:25:00.130
CHET HAASE: See,
I thought you were

00:25:00.130 --> 00:25:01.990
going to say Android
is 10 now, what happens

00:25:01.990 --> 00:25:03.490
when it turns into a teenager?

00:25:03.490 --> 00:25:05.008
AURASH MAHBOD: Exactly.

00:25:05.008 --> 00:25:06.966
CHET HAASE: I didn't want
to get into that one.

00:25:06.966 --> 00:25:08.940
Yes.

00:25:08.940 --> 00:25:10.080
AUDIENCE: Hi guys.

00:25:10.080 --> 00:25:11.900
Love your work.

00:25:11.900 --> 00:25:15.990
RecyclerView is awesome.

00:25:15.990 --> 00:25:17.760
Is that better?

00:25:17.760 --> 00:25:20.160
RecyclerView is quite awesome.

00:25:20.160 --> 00:25:21.042
CHET HAASE: Thanks.

00:25:21.042 --> 00:25:22.428
Next question.

00:25:22.428 --> 00:25:24.740
[LAUGHTER]

00:25:24.740 --> 00:25:27.250
AUDIENCE: But there's still
a few places in the platform

00:25:27.250 --> 00:25:29.480
where you still need to
use base adapters like list

00:25:29.480 --> 00:25:33.460
view, spinners, I think
there's some remote views that

00:25:33.460 --> 00:25:34.580
might use it.

00:25:34.580 --> 00:25:35.080
And--

00:25:35.080 --> 00:25:36.371
CHET HAASE: Did you say slices?

00:25:36.371 --> 00:25:37.780
Sorry.

00:25:37.780 --> 00:25:40.300
AUDIENCE: Remote views,
yeah, and alert dialog.

00:25:40.300 --> 00:25:43.050
I was just wondering if you
guys see that as a problem

00:25:43.050 --> 00:25:47.230
or if you want to expand the
awesomeness of RecyclerView

00:25:47.230 --> 00:25:49.545
to more places?

00:25:49.545 --> 00:25:51.170
CHET HAASE: We are
certainly continuing

00:25:51.170 --> 00:25:53.780
to work on RecyclerView,
to integrate more of what

00:25:53.780 --> 00:25:55.030
people need in that component.

00:25:55.030 --> 00:25:58.370
We don't want it to be a
kitchen sink of all things.

00:25:58.370 --> 00:26:03.400
But it is certainly possible
to expand it into more use

00:26:03.400 --> 00:26:05.102
cases that make sense for it.

00:26:05.102 --> 00:26:07.310
I don't know if somebody
over there wants to take it?

00:26:07.310 --> 00:26:09.430
Yeah, Adam.

00:26:09.430 --> 00:26:12.160
AUDIENCE: Adam, UI
[INAUDIBLE] team.

00:26:12.160 --> 00:26:14.140
So yeah, I think
that right now, one

00:26:14.140 --> 00:26:16.360
of the biggest things
that kind of impedes

00:26:16.360 --> 00:26:18.716
doing more of the
integration of RecyclerView

00:26:18.716 --> 00:26:20.590
with some of the other
stuff in the framework

00:26:20.590 --> 00:26:23.410
is exactly some of what Chet
was saying earlier, which

00:26:23.410 --> 00:26:26.669
is that we can't do a
lot of really key changes

00:26:26.669 --> 00:26:28.210
to some of the stuff
in the framework

00:26:28.210 --> 00:26:29.376
there without breaking apps.

00:26:29.376 --> 00:26:31.750
And RecyclerView is
a conscious effort

00:26:31.750 --> 00:26:35.030
to break from some of those
existing APIs at the time.

00:26:35.030 --> 00:26:38.140
So those aren't directly
one-to-one compatible.

00:26:38.140 --> 00:26:40.300
So the stuff that's in
the framework right now

00:26:40.300 --> 00:26:43.150
is still going to be there in
order to support the existing

00:26:43.150 --> 00:26:44.380
app ecosystem.

00:26:44.380 --> 00:26:47.035
But as we start
building new things,

00:26:47.035 --> 00:26:48.910
I would expect to see
a lot more things built

00:26:48.910 --> 00:26:52.204
on top of RecyclerView and other
Jetpack libraries like that.

00:26:52.204 --> 00:26:53.410
AUDIENCE: Thanks.

00:26:53.410 --> 00:26:55.920
CHET HAASE: Thanks.

00:26:55.920 --> 00:26:58.045
AUDIENCE: Hi, can you hear me?

00:26:58.045 --> 00:26:59.170
CHET HAASE: Closer is good.

00:26:59.170 --> 00:27:00.003
AUDIENCE: All right.

00:27:00.003 --> 00:27:02.310
So it looks like
there is a shift

00:27:02.310 --> 00:27:04.530
towards single-activity
applications.

00:27:04.530 --> 00:27:08.130
I was wondering to get some
background on the decisions

00:27:08.130 --> 00:27:11.910
behind that and
maybe when you should

00:27:11.910 --> 00:27:13.830
use a single-activity
application

00:27:13.830 --> 00:27:16.740
versus a multi-activity
application?

00:27:16.740 --> 00:27:18.660
CHET HAASE: Sure.

00:27:18.660 --> 00:27:19.440
Did you hear that?

00:27:19.440 --> 00:27:20.130
DIANNE HACKBORN:
Single-activity applications?

00:27:20.130 --> 00:27:22.650
CHET HAASE: Single-activity
applications.

00:27:22.650 --> 00:27:26.332
DIANNE HACKBORN: Yeah, this is--

00:27:26.332 --> 00:27:28.290
I'm going to be the first
one to say, you know,

00:27:28.290 --> 00:27:31.550
I don't have a strong
opinion either way.

00:27:31.550 --> 00:27:35.610
But we definitely--
as the UI experience

00:27:35.610 --> 00:27:37.410
has gotten more
sophisticated, it's

00:27:37.410 --> 00:27:41.790
definitely clear that trying to
do seamless transitions and all

00:27:41.790 --> 00:27:44.081
the things you want to
do between activities

00:27:44.081 --> 00:27:45.330
doesn't really work very well.

00:27:45.330 --> 00:27:47.663
And there's really no need--
you can think of activities

00:27:47.663 --> 00:27:48.247
as basically--

00:27:48.247 --> 00:27:49.954
the only place you
really need activities

00:27:49.954 --> 00:27:52.410
is where you need main entry
points into your application,

00:27:52.410 --> 00:27:52.680
right?

00:27:52.680 --> 00:27:54.210
And so once you're
in the application,

00:27:54.210 --> 00:27:55.835
whether you use
activities or fragments

00:27:55.835 --> 00:27:58.721
or whatever else is kind of
irrelevant to the operating

00:27:58.721 --> 00:27:59.220
system.

00:27:59.220 --> 00:28:03.752
And we are leaning heavily on
fragments with all the new--

00:28:03.752 --> 00:28:04.710
ROMAIN GUY: Navigation.

00:28:04.710 --> 00:28:07.085
DIANNE HACKBORN: --navigation
and all that kind of stuff.

00:28:07.085 --> 00:28:08.730
So that--

00:28:08.730 --> 00:28:12.480
AUDIENCE: Are there any
memory management concerns

00:28:12.480 --> 00:28:13.160
with activities?

00:28:13.160 --> 00:28:14.890
Like having everything
in one activity?

00:28:14.890 --> 00:28:18.690
DIANNE HACKBORN: Very
memory management?

00:28:18.690 --> 00:28:21.420
I don't-- I'm not--

00:28:21.420 --> 00:28:23.130
ROMAIN GUY: Profile your app?

00:28:23.130 --> 00:28:23.963
DIANNE HACKBORN: OK.

00:28:25.885 --> 00:28:27.510
AUDIENCE: Most of
the stuff that you're

00:28:27.510 --> 00:28:28.890
building at that
point should be based

00:28:28.890 --> 00:28:30.390
on some of the other
lifecycle events,

00:28:30.390 --> 00:28:32.931
as things are coming and going,
as you're adding and removing

00:28:32.931 --> 00:28:34.870
components from that
single container.

00:28:34.870 --> 00:28:37.200
So the shutdown process
should be pretty similar.

00:28:37.200 --> 00:28:38.910
Whether that's a
separate activity

00:28:38.910 --> 00:28:42.069
or whether that's
another fragment.

00:28:42.069 --> 00:28:42.860
CHET HAASE: Thanks.

00:28:42.860 --> 00:28:43.820
Hi.

00:28:43.820 --> 00:28:45.270
AUDIENCE: Hi there.

00:28:45.270 --> 00:28:47.170
So this close enough, right?

00:28:47.170 --> 00:28:47.872
OK.

00:28:47.872 --> 00:28:49.080
CHET HAASE: Closer is better.

00:28:49.080 --> 00:28:54.990
AUDIENCE: My question is about
the new digital well-being

00:28:54.990 --> 00:28:56.670
in Android P?

00:28:56.670 --> 00:29:00.060
So that was presented into
a keynote, this option

00:29:00.060 --> 00:29:03.780
of actually defining
a limiter in time

00:29:03.780 --> 00:29:06.400
for usage of particular apps.

00:29:06.400 --> 00:29:09.090
So I was wondering-- because
they're already on the Play

00:29:09.090 --> 00:29:12.540
Store for some years, some
apps that actually offer this

00:29:12.540 --> 00:29:14.090
functionality--

00:29:14.090 --> 00:29:20.070
did you guys base this
idea for those features

00:29:20.070 --> 00:29:23.610
based on apps existing
or some research,

00:29:23.610 --> 00:29:27.450
particularly some
psychology research

00:29:27.450 --> 00:29:29.970
or something like that?

00:29:29.970 --> 00:29:36.120
And is there any API that
third-party apps can just

00:29:36.120 --> 00:29:40.020
use to contribute to
this digital well-being

00:29:40.020 --> 00:29:42.932
idea in the operating system?

00:29:42.932 --> 00:29:43.640
DAVE BURKE: Yeah.

00:29:43.640 --> 00:29:46.850
I mean, there's some great
apps on the Play Store.

00:29:46.850 --> 00:29:49.050
Not just for this, but also
like Headspace and Calm

00:29:49.050 --> 00:29:51.120
and sort of like a
bigger area of wellness.

00:29:54.060 --> 00:29:56.490
What we've done is basically
created some low-level system

00:29:56.490 --> 00:29:59.100
APIs, to do things that
you couldn't ordinarily

00:29:59.100 --> 00:30:00.120
do in an app.

00:30:00.120 --> 00:30:02.160
Like, we turned the
screen grayscale

00:30:02.160 --> 00:30:05.210
or we disable app
launcher icons.

00:30:05.210 --> 00:30:08.947
And we're also getting
hooks for app developers

00:30:08.947 --> 00:30:10.530
to you have deep
links into their app,

00:30:10.530 --> 00:30:11.940
to provide more information.

00:30:11.940 --> 00:30:13.950
I haven't looked so
closely at the system APIs

00:30:13.950 --> 00:30:17.754
to explain what all you can
do on top of them, but--

00:30:17.754 --> 00:30:18.420
CHET HAASE: Dan?

00:30:18.420 --> 00:30:19.086
DAVE BURKE: Dan?

00:30:19.086 --> 00:30:20.760
AUDIENCE: I just
wanted to throw in

00:30:20.760 --> 00:30:24.300
if you want to help out with
the mission of digital wellness,

00:30:24.300 --> 00:30:27.090
read up on the docs
for how notifications

00:30:27.090 --> 00:30:29.740
and Do Not Disturb
mode work together.

00:30:29.740 --> 00:30:32.310
So for example,
post notifications

00:30:32.310 --> 00:30:35.467
with enough metadata
that the user can- there

00:30:35.467 --> 00:30:37.050
are ways in Do Not
Disturb mode to say

00:30:37.050 --> 00:30:39.560
oh, starred contacts get through
or certain apps get through.

00:30:39.560 --> 00:30:40.976
You populate all
that information,

00:30:40.976 --> 00:30:44.040
you give the user more ability
to safely enter the Do Not

00:30:44.040 --> 00:30:47.190
Disturb modes that we provide,
knowing that they're not

00:30:47.190 --> 00:30:49.500
going to miss important stuff.

00:30:49.500 --> 00:30:51.960
Another way you can
work with Do Not Disturb

00:30:51.960 --> 00:30:55.421
mode to help the user
manage their space is

00:30:55.421 --> 00:30:56.670
to actually respect it, right?

00:30:56.670 --> 00:30:59.670
So you can actually see what
the state of the device is.

00:30:59.670 --> 00:31:02.610
And maybe this now
is not the right time

00:31:02.610 --> 00:31:04.750
to try to get the
user's attention.

00:31:04.750 --> 00:31:05.250
Right?

00:31:05.250 --> 00:31:07.770
So there are ways that you
can already work with--

00:31:07.770 --> 00:31:10.419
and those APIs are
already in the platform.

00:31:10.419 --> 00:31:12.960
We've tuned them up a little
bit for P, but most of the stuff

00:31:12.960 --> 00:31:15.390
has been in there since we
introduced Do Not Disturb

00:31:15.390 --> 00:31:17.625
and then improved it
with channels in O.

00:31:17.625 --> 00:31:21.510
So look at those APIs, put
those data on the notifications

00:31:21.510 --> 00:31:23.040
to be able to
interoperate as best

00:31:23.040 --> 00:31:27.537
you can with the Do Not Disturb
feature we've already got.

00:31:27.537 --> 00:31:28.370
AUDIENCE: Thank you.

00:31:28.370 --> 00:31:29.700
Just a follow up question.

00:31:32.310 --> 00:31:36.300
If I'm interested in somehow
contributing with ideas

00:31:36.300 --> 00:31:39.860
or working together
in this area,

00:31:39.860 --> 00:31:43.590
it will be really cool if
I have a contact, some kind

00:31:43.590 --> 00:31:46.121
of contract I can refer to?

00:31:46.121 --> 00:31:47.965
AUDIENCE: [INAUDIBLE]

00:31:47.965 --> 00:31:48.887
[LAUGHTER]

00:31:48.887 --> 00:31:49.809
AUDIENCE: All right.

00:31:49.809 --> 00:31:50.740
Thank you.

00:31:50.740 --> 00:31:52.320
CHET HAASE: Thanks.

00:31:52.320 --> 00:31:56.094
AUDIENCE: So I have a question
about the Google Play services.

00:31:56.094 --> 00:31:59.740
You jumped from
version 12 to 15.

00:31:59.740 --> 00:32:01.458
What happened in between?

00:32:01.458 --> 00:32:03.090
[LAUGHTER]

00:32:03.090 --> 00:32:06.690
CHET HAASE: Hotels jump from
12 to 14 on their floors.

00:32:06.690 --> 00:32:09.900
We just wanted to go one better.

00:32:09.900 --> 00:32:11.550
I don't know the
story behind that.

00:32:11.550 --> 00:32:13.160
Burgeoning Google services?

00:32:13.160 --> 00:32:13.420
AURASH MAHBOD: I
didn't even know that.

00:32:13.420 --> 00:32:14.850
I think the releases
just started overlapping.

00:32:14.850 --> 00:32:16.650
We were testing a
bunch of experiments

00:32:16.650 --> 00:32:19.740
and we decided that we
should just snowplow forward

00:32:19.740 --> 00:32:21.350
to the latest release
for all users,

00:32:21.350 --> 00:32:24.589
as opposed to maintaining
a bunch of experiments.

00:32:24.589 --> 00:32:25.880
CHET HAASE: We're not good at--

00:32:25.880 --> 00:32:26.660
AUDIENCE: Thanks.

00:32:26.660 --> 00:32:28.297
AURASH MAHBOD: Nothing
hidden in there.

00:32:28.297 --> 00:32:29.630
CHET HAASE: It was three better.

00:32:33.210 --> 00:32:33.720
Thanks.

00:32:33.720 --> 00:32:34.599
Yes?

00:32:34.599 --> 00:32:35.140
AUDIENCE: OK.

00:32:35.140 --> 00:32:36.392
Is the sound good?

00:32:36.392 --> 00:32:37.100
CHET HAASE: Yeah.

00:32:37.100 --> 00:32:39.180
AUDIENCE: OK.

00:32:39.180 --> 00:32:44.990
So in our company, our goal
is to build an APK game

00:32:44.990 --> 00:32:50.270
with the least size so
the users in third world

00:32:50.270 --> 00:32:52.890
countries or
developing countries

00:32:52.890 --> 00:32:58.170
don't have to spend more
data to download the APK.

00:32:58.170 --> 00:33:01.740
So when last year you
guys released Kotlin,

00:33:01.740 --> 00:33:05.730
we didn't share because
we read that Kotlin

00:33:05.730 --> 00:33:08.940
will increase the APK size.

00:33:08.940 --> 00:33:15.090
So we are trying to save even if
it's like 100K in the APK size.

00:33:15.090 --> 00:33:19.110
So how are you going
to address that?

00:33:19.110 --> 00:33:21.150
Is it still the same case?

00:33:21.150 --> 00:33:25.097
If I try to move to Kotlin,
will my APK size increase?

00:33:27.114 --> 00:33:28.530
STEPH CUTHBERTSON:
That's probably

00:33:28.530 --> 00:33:30.826
a good question for Ben
and Brian [INAUDIBLE]

00:33:30.826 --> 00:33:33.000
and Jeffrey van Gogh.

00:33:33.000 --> 00:33:35.130
AUDIENCE: So
everyone the R8 team.

00:33:35.130 --> 00:33:37.190
So R8 is our new shrinker.

00:33:37.190 --> 00:33:40.350
And so we added
Kotlin-specific optimizations

00:33:40.350 --> 00:33:41.950
to make the code smaller.

00:33:41.950 --> 00:33:43.800
And we can actually do
quite a bit of things

00:33:43.800 --> 00:33:45.480
that you couldn't do
in Java because you

00:33:45.480 --> 00:33:47.250
have richer information
about your code

00:33:47.250 --> 00:33:49.050
when you're coding in Kotlin.

00:33:49.050 --> 00:33:51.390
We just started and R8
is still experimental,

00:33:51.390 --> 00:33:53.850
but I encourage you
to take a look at R8

00:33:53.850 --> 00:33:55.551
and see if it helps your case.

00:33:55.551 --> 00:33:57.300
CHET HAASE: Can they
try out R8 right now?

00:33:57.300 --> 00:33:57.610
Is that--

00:33:57.610 --> 00:33:59.568
AUDIENCE: Oh yeah, it's
an experimental feature

00:33:59.568 --> 00:34:00.900
in Android Studio 3.2.

00:34:00.900 --> 00:34:04.062
And there's docs on
how to opt into that.

00:34:04.062 --> 00:34:06.270
STEPH CUTHBERTSON: So if
you'd like to try the new R8

00:34:06.270 --> 00:34:08.150
compiler, just download
the latest preview

00:34:08.150 --> 00:34:09.853
of Android Studio 3.2.

00:34:09.853 --> 00:34:10.994
AUDIENCE: OK, thank you.

00:34:10.994 --> 00:34:11.785
CHET HAASE: Thanks.

00:34:15.659 --> 00:34:19.050
AUDIENCE: First off, excellent
work on Android P, everyone.

00:34:19.050 --> 00:34:24.389
As a follow-up question about
the Clear All notification,

00:34:24.389 --> 00:34:27.304
why is the clock
on the wrong side?

00:34:27.304 --> 00:34:31.160
[LAUGHTER]

00:34:34.469 --> 00:34:37.010
AUDIENCE: Actually, the Start
side, because if you're in LTR,

00:34:37.010 --> 00:34:39.308
everything flips over.

00:34:39.308 --> 00:34:41.224
I don't know why I reached
for the microphone,

00:34:41.224 --> 00:34:44.360
I didn't really want to--

00:34:44.360 --> 00:34:49.610
No, this is-- I mean, this comes
from the display cut out stuff

00:34:49.610 --> 00:34:50.870
that we see coming from OEMs.

00:34:50.870 --> 00:34:52.190
We know we need to
distribute things

00:34:52.190 --> 00:34:53.960
from one side of the
status bar to the other.

00:34:53.960 --> 00:34:55.520
Some of us have
kind of always been

00:34:55.520 --> 00:34:58.150
a little uncomfortable about
the asymmetry of the status bar.

00:34:58.150 --> 00:35:00.890
Like the most neutral
state is everything

00:35:00.890 --> 00:35:05.360
kind of on the right-hand
side, again the end-hand side.

00:35:05.360 --> 00:35:07.250
So by moving the
clock over, not only

00:35:07.250 --> 00:35:09.890
are we able to create
a consistent experience

00:35:09.890 --> 00:35:12.170
across Android
devices irrespective

00:35:12.170 --> 00:35:16.742
of whether they have an unbroken
top edge of the display panel,

00:35:16.742 --> 00:35:21.104
but we can bring just a little
more balance to it overall.

00:35:21.104 --> 00:35:22.520
CHET HAASE: I will
point out, too,

00:35:22.520 --> 00:35:24.260
that if you prefer
it on the right side,

00:35:24.260 --> 00:35:27.080
just take your phone
and turn it around.

00:35:27.080 --> 00:35:29.384
Just 180 degrees, it works
perfectly every time.

00:35:29.384 --> 00:35:31.550
AUDIENCE: But then the notch
would be on the bottom.

00:35:31.550 --> 00:35:33.175
CHET HAASE: Well,
there's other issues.

00:35:33.175 --> 00:35:35.990
I'm just saying, you know, it
depends on personal preference.

00:35:35.990 --> 00:35:38.510
DAVE BURKE: I actually, as
a personal anecdote, when

00:35:38.510 --> 00:35:40.580
we first moved the clock
over, I was like, oh,

00:35:40.580 --> 00:35:41.700
what are we doing?

00:35:41.700 --> 00:35:43.010
Why?

00:35:43.010 --> 00:35:45.310
And then I think about
seven or eight days later, I

00:35:45.310 --> 00:35:47.060
was like, somebody
came up to me and said,

00:35:47.060 --> 00:35:48.040
are you still really
worried about the clock?

00:35:48.040 --> 00:35:49.190
I'm like, no, it's fine.

00:35:49.190 --> 00:35:50.731
So you get used to
it really quickly.

00:35:53.620 --> 00:35:54.760
CHET HAASE: Yes.

00:35:54.760 --> 00:35:55.780
AUDIENCE: Yes.

00:35:55.780 --> 00:35:58.550
We use features such
as Android Enter--

00:35:58.550 --> 00:35:59.920
oh, OK.

00:35:59.920 --> 00:36:00.724
Can you hear me?

00:36:00.724 --> 00:36:01.390
CHET HAASE: Yes.

00:36:01.390 --> 00:36:02.223
AUDIENCE: All right.

00:36:02.223 --> 00:36:06.520
So we use features such as
Android Enterprise and Safety

00:36:06.520 --> 00:36:12.910
Net, but we have a lot of
customers with users in China.

00:36:12.910 --> 00:36:14.530
And so we wanted
to know if there's

00:36:14.530 --> 00:36:21.504
any guidance you can provide
for helping those users?

00:36:21.504 --> 00:36:22.170
CHET HAASE: Ben?

00:36:24.850 --> 00:36:27.820
BEN: I'm only getting
that because nobody knows.

00:36:27.820 --> 00:36:33.566
For China, it's complicated.

00:36:33.566 --> 00:36:34.450
I'm not going to--

00:36:34.450 --> 00:36:36.145
Google has limited access there.

00:36:36.145 --> 00:36:38.320
The servers, you
know, the whole issue.

00:36:38.320 --> 00:36:40.150
So I don't have a
good answer for you

00:36:40.150 --> 00:36:42.790
for what to do for China
other than it is something

00:36:42.790 --> 00:36:46.030
that I think myself and a few
others here think an awful lot

00:36:46.030 --> 00:36:47.290
about.

00:36:47.290 --> 00:36:49.900
And the shortest answer
is it's complicated.

00:36:49.900 --> 00:36:52.620
But we're not necessarily
giving up on it

00:36:52.620 --> 00:36:54.370
because it is a problem
that we recognize.

00:36:54.370 --> 00:36:56.080
There's an awful
lot of developers

00:36:56.080 --> 00:36:59.690
that need to deal with that
market and we need to do more.

00:36:59.690 --> 00:37:01.840
I'm not sure what that
means in terms of specifics,

00:37:01.840 --> 00:37:03.950
but it is something
that's on my mind.

00:37:03.950 --> 00:37:05.200
AUDIENCE: Thank you.

00:37:05.200 --> 00:37:06.010
CHET HAASE: Thanks.

00:37:06.010 --> 00:37:08.105
Probably time for a
couple more questions.

00:37:08.105 --> 00:37:09.230
We are running out of time.

00:37:09.230 --> 00:37:10.521
We'll get to as many as we can.

00:37:10.521 --> 00:37:11.360
Yes?

00:37:11.360 --> 00:37:12.190
AUDIENCE: Hello.

00:37:12.190 --> 00:37:14.500
I noticed some
stylistic differences

00:37:14.500 --> 00:37:19.210
between the AOSP Android
version and the version

00:37:19.210 --> 00:37:22.960
on Pixels, which we
saw through I/O, namely

00:37:22.960 --> 00:37:25.180
like rounded corners
versus square corners

00:37:25.180 --> 00:37:26.350
and some font choices.

00:37:26.350 --> 00:37:30.130
I was wondering what the
motivation behind that was?

00:37:34.695 --> 00:37:36.320
AUDIENCE: Sure, I'll
take this one too.

00:37:39.500 --> 00:37:40.417
They're small touches.

00:37:40.417 --> 00:37:41.916
I mean you just
said yourself, we're

00:37:41.916 --> 00:37:43.860
talking about fonts,
colors, rounded corners.

00:37:43.860 --> 00:37:48.570
Functionally, we try
to keep those targets

00:37:48.570 --> 00:37:51.270
as close as possible, because
if it's good for Pixel,

00:37:51.270 --> 00:37:52.590
it's good for everybody.

00:37:52.590 --> 00:37:53.730
But we do have--

00:37:53.730 --> 00:37:56.430
we want to put a little Google
touch on things that we're

00:37:56.430 --> 00:37:59.010
putting inside a box that's got
a nice big Google logo on it,

00:37:59.010 --> 00:38:02.280
so we use the Google
typeface in activities.

00:38:02.280 --> 00:38:04.530
And we've got some rounded
corners and different color

00:38:04.530 --> 00:38:07.832
choices, just a
little bit of pain.

00:38:07.832 --> 00:38:09.260
AUDIENCE: Thanks.

00:38:09.260 --> 00:38:10.740
CHET HAASE: Yes.

00:38:10.740 --> 00:38:14.970
AUDIENCE: With the whole Java
lawsuit and court ruling,

00:38:14.970 --> 00:38:17.714
how's it affecting Android?

00:38:17.714 --> 00:38:18.630
What should we expect?

00:38:18.630 --> 00:38:20.604
DAVE BURKE: Oh no,
we're out of time.

00:38:20.604 --> 00:38:23.466
[LAUGHTER]

00:38:25.860 --> 00:38:30.940
STEPH CUTHBERTSON: Our focus is
on developing a great operating

00:38:30.940 --> 00:38:31.440
system.

00:38:31.440 --> 00:38:33.029
That continues to be our focus.

00:38:33.029 --> 00:38:34.070
DAVE BURKE: Great answer.

00:38:34.070 --> 00:38:34.850
OK, next question.

00:38:34.850 --> 00:38:38.850
[LAUGHTER]

00:38:38.850 --> 00:38:40.960
CHET HAASE: I was told
to wrap this thing up.

00:38:40.960 --> 00:38:45.000
I did have one more important
one from the Twitter thread

00:38:45.000 --> 00:38:46.590
that I'll end this thing on.

00:38:46.590 --> 00:38:48.780
I'm sorry we couldn't get
to all of your questions,

00:38:48.780 --> 00:38:50.070
we would like to.

00:38:50.070 --> 00:38:53.190
Someone did ask online,
when will Google officially

00:38:53.190 --> 00:38:55.510
support Kotlin?

00:38:55.510 --> 00:38:56.670
ROMAIN GUY: Last year?

00:38:56.670 --> 00:39:00.030
CHET HAASE: May 17, 2017.

00:39:00.030 --> 00:39:02.880
So I think that's it.

00:39:02.880 --> 00:39:03.670
Thank you.

00:39:03.670 --> 00:39:04.697
ROMAIN GUY: Thank you.

00:39:04.697 --> 00:39:06.098
[APPLAUSE]

00:39:06.098 --> 00:39:10.617
[MUSIC PLAYING]

