WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:04.410
Naturally, with great power
comes great responsibility.

00:00:04.410 --> 00:00:08.320
Invoking a method that doesn't
exist is not usually a good idea.

00:00:08.320 --> 00:00:10.540
Let me show you what I mean.

00:00:10.540 --> 00:00:12.500
Here's an array,
similar to the last one,

00:00:12.500 --> 00:00:16.890
but this time I swapped out
the dealer object for a string.

00:00:16.890 --> 00:00:20.320
Now let's see what happens
when we call the method play.

00:00:20.320 --> 00:00:23.995
No compiler errors, so far so
good, and we press run.

00:00:23.995 --> 00:00:26.350
Uh-oh!

00:00:26.350 --> 00:00:29.000
Of course,
we knew that was going to happen because

00:00:29.000 --> 00:00:32.280
ns string obviously has
no method called play.

00:00:32.280 --> 00:00:34.780
Let's take a look at
what this error says.

00:00:34.780 --> 00:00:39.220
So, we'll scroll up to the top
of the console and it says

00:00:39.220 --> 00:00:44.410
unrecognized selector sent to instance
and then there's a string of numbers.

00:00:44.410 --> 00:00:47.070
You've probably seen in
an error like this before, but

00:00:47.070 --> 00:00:51.760
you may not have realized that that
word selector comes from Objective C.

00:00:51.760 --> 00:00:55.050
In Objective C,
selector is another name for method.

00:00:55.050 --> 00:00:58.520
So when you see this unrecognized
selector sent to instance,

00:00:58.520 --> 00:01:02.500
start debugging by investigating
objects with the type ID.

00:01:02.500 --> 00:01:05.360
It's possible that the class
of the offending object

00:01:05.360 --> 00:01:07.920
is not what you think it is at run time.

00:01:07.920 --> 00:01:10.680
And to defend your code
against the perils of ID,

00:01:10.680 --> 00:01:13.300
you can also use introspection.

00:01:13.300 --> 00:01:17.090
You can ask if the object at hand
responds to the selector in question.

