WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:03.320
So to summarize the scheduling policies, I already

00:00:03.320 --> 00:00:08.070
mentioned that first come first serve simply ignores affinity,

00:00:08.070 --> 00:00:11.070
and pays attention only to fairness. And these next

00:00:11.070 --> 00:00:13.840
two policies that I introduced to you, fixed processor

00:00:13.840 --> 00:00:17.280
and last processor, the focus is on cache affinity

00:00:17.280 --> 00:00:19.540
of a thread with respect to a particular processor.

00:00:19.540 --> 00:00:22.180
That's what we're focusing on. And Fixed Processor was

00:00:22.180 --> 00:00:26.350
the last processor. The next two policies, they focus

00:00:26.350 --> 00:00:28.770
not only on cache affinity, but also cache

00:00:28.770 --> 00:00:33.260
pollution. In particular it asks the question, how polluted

00:00:33.260 --> 00:00:37.800
is a cache going to be by the time Ti gets to run on the processor. That's

00:00:37.800 --> 00:00:40.540
the question we're asking (no period) In both

00:00:40.540 --> 00:00:45.070
minimum intervening, as well as minimum intervening plus queuing,

00:00:45.070 --> 00:00:47.590
in terms of making a scheduling decision. And that

00:00:47.590 --> 00:00:51.950
should be clear, from the discussion up until now,

00:00:51.950 --> 00:00:56.220
the amount of information that the scheduler has to keep. Grows

00:00:56.220 --> 00:00:59.860
as you grow, go down this list. The order of arrival is

00:00:59.860 --> 00:01:02.840
all that you care about, you put them in priority order

00:01:02.840 --> 00:01:05.000
in the queue and you're done with it. And you have, the

00:01:05.000 --> 00:01:06.990
schedule has to do a little bit more work, in each

00:01:06.990 --> 00:01:10.190
one of these cases, and corresponding with the amount of information that

00:01:10.190 --> 00:01:13.070
this schedule has to keep for every one of these scheduling

00:01:13.070 --> 00:01:17.120
policies is going to be more. But the result of scheduling decision is

00:01:17.120 --> 00:01:18.970
likely to be better when you have more

00:01:18.970 --> 00:01:21.630
information to make the scheduling decision. Another way to

00:01:21.630 --> 00:01:23.990
think about the scheduling policy is that, the

00:01:23.990 --> 00:01:27.520
fixed processor and the last processor is thread-centric in

00:01:27.520 --> 00:01:30.410
saying what is the best decision for a

00:01:30.410 --> 00:01:34.610
particular thread with respect to it's execution. Where does

00:01:34.610 --> 00:01:38.640
this MI and minimum intervening plus queuing? Both of

00:01:38.640 --> 00:01:42.140
these are processor-centric, saying that, what thread should a

00:01:42.140 --> 00:01:47.390
particular processor choose in order to maximize the chance that the

00:01:47.390 --> 00:01:50.550
amount of cache contents is going to be relevant for the

00:01:50.550 --> 00:01:53.880
currently scheduled thread? So that's what we're looking at. Now that

00:01:53.880 --> 00:01:58.350
I've introduced to you these scheduling policies, it's time for a quiz.

