WEBVTT
Kind: captions
Language: en

00:00:00.215 --> 00:00:00.840
[MUSIC PLAYING]

00:00:00.840 --> 00:00:02.110
TIMOTHY JORDAN: Hello,
I'm Timothy Jordan,

00:00:02.110 --> 00:00:04.443
and this is your update about
the coolest developer news

00:00:04.443 --> 00:00:06.190
from Google in the last week.

00:00:06.190 --> 00:00:08.520
We recently released a
new spatial audio software

00:00:08.520 --> 00:00:10.950
development kit called
Resonance Audio.

00:00:10.950 --> 00:00:14.310
It's based on technology
from Google's VR Audio SDK,

00:00:14.310 --> 00:00:17.970
and it works at scale across
mobile and desktop platforms.

00:00:17.970 --> 00:00:20.910
Links to the docs and GitHub
are on the post linked

00:00:20.910 --> 00:00:23.100
in the description below.

00:00:23.100 --> 00:00:25.020
Fast Pair is a
hassle-free process

00:00:25.020 --> 00:00:27.660
to pair your Bluetooth devices
on all supported Android

00:00:27.660 --> 00:00:32.009
devices running Google Play
services 11.7 and later,

00:00:32.009 --> 00:00:34.800
with compatibility
back to Marshmallow.

00:00:34.800 --> 00:00:38.070
Check out the post for an
example of how it works.

00:00:38.070 --> 00:00:40.470
We have added support
for high-availability

00:00:40.470 --> 00:00:44.190
and read replicas in Cloud
SQL for PostgreSQL, which

00:00:44.190 --> 00:00:47.700
will help ensure your database
workloads are fault tolerant.

00:00:47.700 --> 00:00:50.580
Diagrams and details
are on the post.

00:00:50.580 --> 00:00:54.300
The first Google Cloud Platform
region in India is now open.

00:00:54.300 --> 00:00:56.280
Hosting applications
in the new region

00:00:56.280 --> 00:01:01.350
can improve latency from 20% to
90% for end users in the area

00:01:01.350 --> 00:01:04.440
compared to hosting
them in Singapore.

00:01:04.440 --> 00:01:07.240
We recently introduced Eager
Execution for TensorFlow.

00:01:07.240 --> 00:01:09.630
It's an imperative,
defined-by-run interface

00:01:09.630 --> 00:01:12.180
where operations are
executed immediately

00:01:12.180 --> 00:01:14.255
as they are called from Python.

00:01:14.255 --> 00:01:16.380
This makes it easier to
get started with TensorFlow

00:01:16.380 --> 00:01:19.260
and can make research and
development more intuitive.

00:01:19.260 --> 00:01:22.110
Code and all the
links are on the post.

00:01:22.110 --> 00:01:24.540
Oh, and in case you missed
it, Firebase Predictions

00:01:24.540 --> 00:01:27.240
is now available to build
dynamic user groups based

00:01:27.240 --> 00:01:32.220
on predicted behavior determined
using a machine-learned model.

00:01:32.220 --> 00:01:33.900
These user groups
can then be targeted

00:01:33.900 --> 00:01:37.350
using Firebase Cloud Messaging,
Remote Config, and more.

00:01:37.350 --> 00:01:39.660
To learn how to use Firebase
Predictions for your app,

00:01:39.660 --> 00:01:42.694
check out the post linked
in the description below.

00:01:42.694 --> 00:01:44.610
Please remember to like,
subscribe, and share.

00:01:44.610 --> 00:01:46.830
I'm Timothy Jordan, and
I'll see you next week.

00:01:46.830 --> 00:01:47.970
[MUSIC PLAYING]

00:01:47.970 --> 00:01:48.700
Hey, everybody.

00:01:48.700 --> 00:01:50.940
Thanks for watching this week's
episode of "The Developer

00:01:50.940 --> 00:01:51.210
Show."

00:01:51.210 --> 00:01:53.380
If you'd like to catch
some of our prior episodes,

00:01:53.380 --> 00:01:55.940
check them out right over here.

