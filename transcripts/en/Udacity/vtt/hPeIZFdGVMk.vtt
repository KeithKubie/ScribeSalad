WEBVTT
Kind: captions
Language: en

00:00:00.024 --> 00:00:01.059
So here's the solution

00:00:01.059 --> 00:00:05.061
So we want to add an "if" statement because we want to make a decision

00:00:05.061 --> 00:00:06.079
We want a test

00:00:06.079 --> 00:00:09.099
If the start_link is equal to -1

00:00:09.099 --> 00:00:14.046
So that means that we did not find what we were looking for

00:00:14.046 --> 00:00:17.099
find returns to -1, so the value of start link is -1

00:00:17.099 --> 00:00:21.029
Well, then we don't want to do the rest, we don't have an URL to look for

00:00:21.029 --> 00:00:25.022
What we want to do is return the special value "None" and zero

00:00:25.022 --> 00:00:26.090
So that's the change

00:00:26.090 --> 00:00:30.084
Now when we run this with this string that does not have a link

00:00:30.084 --> 00:00:34.011
what we get as the output for the url is "None"

00:00:34.011 --> 00:00:38.009
We can't tell that's not a string, the way it prints out, but it's different from a string

00:00:38.009 --> 00:00:43.002
and one thing that we can do with "None" is sort of like "False"

00:00:43.002 --> 00:00:46.046
So if the value of the test expression in an "if" is "None"

00:00:46.046 --> 00:00:48.057
that's treated the same way as "False"

00:00:48.057 --> 00:00:52.029
So if url returned here is "None", then we'll print "Not here!"

00:00:52.029 --> 00:00:54.031
I guess that means we are here, but we are not "Here!"

00:00:54.031 --> 00:00:57.071
So here's what we get, we see that we got "Not here!"

00:00:57.071 --> 00:01:00.046
when we passed in a string that did not contain a link tag

00:01:00.046 --> 00:01:03.009
if we go back to the string that has a link tag

00:01:03.009 --> 00:01:09.084
and now we run the code, we'll see that the url was some string that's treated as "True"

00:01:09.084 --> 00:01:12.017
and we get the print "Here!"

00:01:12.017 --> 00:01:17.024
So the test condition for a boolean doesn't necessarily have to be just "True" or "False"

00:01:17.024 --> 00:01:20.010
Python will interpret different values as "True" and "False"

00:01:20.010 --> 00:01:25.047
and the important thing here is that any string value other than empty string is treated as "True"

00:01:25.047 --> 00:01:27.081
and we'll go through this part of the "if"

00:01:27.081 --> 00:01:31.081
The value "None" is treated as "False" and we will go to the else

