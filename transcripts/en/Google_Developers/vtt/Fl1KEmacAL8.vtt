WEBVTT
Kind: captions
Language: en

00:00:00.880 --> 00:00:03.780
RICHARD HYNDMAN: Kaj Nygren,
the CTO of Mag Interactive,

00:00:03.780 --> 00:00:05.360
is coming up to
share with you what

00:00:05.360 --> 00:00:08.150
happened when one of their
games exploded across the world,

00:00:08.150 --> 00:00:10.190
and how they dealt
with the situation.

00:00:10.190 --> 00:00:11.670
Please welcome Kaj.

00:00:11.670 --> 00:00:13.170
[APPLAUSE]

00:00:18.090 --> 00:00:20.510
KAJ NYGREN: Right, so
good afternoon, everybody.

00:00:20.510 --> 00:00:22.560
My name is Kaj
Nygren, as he said.

00:00:22.560 --> 00:00:25.180
I'm the CTO Mag Interactive.

00:00:25.180 --> 00:00:28.520
And what I'm going to talk
you about today is handling

00:00:28.520 --> 00:00:32.150
extreme growth,
or how we managed

00:00:32.150 --> 00:00:37.250
to scale our game, Ruzzle,
from zero to 50 million users

00:00:37.250 --> 00:00:40.140
in a very short period of time.

00:00:40.140 --> 00:00:41.540
So who are we?

00:00:41.540 --> 00:00:45.670
Well Mag Interactive is a
mobile game development company.

00:00:45.670 --> 00:00:49.730
We were based in
Stockholm, in Sweden.

00:00:49.730 --> 00:00:53.710
We like to think that we sit a
few hundred meters from King,

00:00:53.710 --> 00:00:55.920
whereas people
here like to think

00:00:55.920 --> 00:00:58.390
that they sit just
underneath of King.

00:00:58.390 --> 00:01:01.680
We have a bit of a debate
of where if King is

00:01:01.680 --> 00:01:04.129
like a Swedish company,
or an English company.

00:01:04.129 --> 00:01:09.710
But anyway, we were
founded back in 2010.

00:01:09.710 --> 00:01:12.110
We are currently
at 27 employees,

00:01:12.110 --> 00:01:18.470
and we're hoping to double
that in 2014, this year.

00:01:18.470 --> 00:01:21.530
So we had two games
live, as the sale.

00:01:21.530 --> 00:01:24.510
We have a game called
Ruzzle, a word game,

00:01:24.510 --> 00:01:27.790
with a bit over
50 million users.

00:01:27.790 --> 00:01:32.840
We also have a quiz game, kind
of like the little brother

00:01:32.840 --> 00:01:37.740
of Ruzzle, which has something
like six million users

00:01:37.740 --> 00:01:39.040
or something like that.

00:01:39.040 --> 00:01:45.790
We also actually have a new
game in the pre-launch face,

00:01:45.790 --> 00:01:48.620
called Ruzzle adventure,
which is a follow up Ruzzle.

00:01:48.620 --> 00:01:53.940
So it's currently in
soft launch in Sweden.

00:01:53.940 --> 00:01:57.180
We launched it a few days ago,
and it's doing pretty well.

00:01:57.180 --> 00:02:02.440
It's currently number
one on the Play,

00:02:02.440 --> 00:02:06.070
or on the app store
in Games in Sweden.

00:02:06.070 --> 00:02:09.840
So that's pretty exciting.

00:02:09.840 --> 00:02:14.870
But anyway, I guess
most of you here

00:02:14.870 --> 00:02:20.440
are either interested in
games, or game developers.

00:02:20.440 --> 00:02:22.300
If you're a game
developer, and especially

00:02:22.300 --> 00:02:24.590
if you're a game developer
in the mobile space,

00:02:24.590 --> 00:02:27.870
you want to hit it big on the
App Store or in Google Play.

00:02:27.870 --> 00:02:30.220
You want to have a mobile hit.

00:02:30.220 --> 00:02:32.800
But, I'm sorry, I
guess the sad thing

00:02:32.800 --> 00:02:39.480
is that, the harsh reality
is, that most games fail.

00:02:39.480 --> 00:02:42.260
And it is kind of weird, though.

00:02:42.260 --> 00:02:45.210
Because there is, if
you think about it,

00:02:45.210 --> 00:02:49.760
there's $2 billion smartphones
and tablets out there.

00:02:49.760 --> 00:02:52.520
And App Store and Google
Play makes it very easy

00:02:52.520 --> 00:02:53.970
to download stuff.

00:02:53.970 --> 00:02:57.070
So you would think
that there would

00:02:57.070 --> 00:03:01.170
be enough devices and enough
people for all the games,

00:03:01.170 --> 00:03:03.770
but the thing is,
people are lazy.

00:03:03.770 --> 00:03:06.690
So what they typically do is
that they talk with friends

00:03:06.690 --> 00:03:09.670
to find out which
games are hot and cool

00:03:09.670 --> 00:03:11.470
and that they should download.

00:03:11.470 --> 00:03:14.440
And other than that, they
usually just go to the top 5,

00:03:14.440 --> 00:03:17.360
top 10 charts and try to
download games from there.

00:03:17.360 --> 00:03:19.830
So there is a huge
app discovery problem.

00:03:19.830 --> 00:03:22.340
So you end up in
a situation where

00:03:22.340 --> 00:03:25.980
the vast majority of all the
games get very little download.

00:03:25.980 --> 00:03:30.730
And a few games get the vast
majority of all the downloads.

00:03:30.730 --> 00:03:35.890
Now to complicate this a bit
further, if you are very, very

00:03:35.890 --> 00:03:44.010
lucky and you happen to have
some type of social media hit,

00:03:44.010 --> 00:03:47.380
you will get an enormous
amount of downloads

00:03:47.380 --> 00:03:49.180
in a very short period of time.

00:03:49.180 --> 00:03:51.920
Because that's when the
2 billion devices really

00:03:51.920 --> 00:03:53.080
kicks in.

00:03:53.080 --> 00:03:59.630
So this obviously is a
very, very slim chance

00:03:59.630 --> 00:04:00.630
of it happening.

00:04:00.630 --> 00:04:02.100
But it might happen.

00:04:02.100 --> 00:04:05.330
And that makes it a
bit tricky if you're

00:04:05.330 --> 00:04:08.350
doing a mobile
game that will have

00:04:08.350 --> 00:04:10.820
some type of mobile backend.

00:04:10.820 --> 00:04:17.510
Because it might be that it's
like a player versus player

00:04:17.510 --> 00:04:21.024
game, or that you have some
type of downloadable content,

00:04:21.024 --> 00:04:22.440
or it's just that
you want to send

00:04:22.440 --> 00:04:24.380
push notifications to people.

00:04:24.380 --> 00:04:27.195
The thing is, the
most likely scenario

00:04:27.195 --> 00:04:29.420
is that you put
your game out there

00:04:29.420 --> 00:04:32.930
and it will have a few
downloads, but not that many.

00:04:32.930 --> 00:04:35.010
But then suddenly, boom!

00:04:35.010 --> 00:04:36.480
Something can happen.

00:04:36.480 --> 00:04:39.020
And you will get a
vast amount of download

00:04:39.020 --> 00:04:40.940
in a very short period of time.

00:04:40.940 --> 00:04:44.380
So how do you prepare for that?

00:04:44.380 --> 00:04:47.960
Well that's a very
good question.

00:04:47.960 --> 00:04:52.260
And I guess the reason why I'm
here to talk to you about this

00:04:52.260 --> 00:04:57.840
is that what happened to
Flappy Bird, about a month ago,

00:04:57.840 --> 00:05:03.440
kind of happened to one of
our games, about a year ago.

00:05:03.440 --> 00:05:08.010
So as I said, we have a
word game called Ruzzle.

00:05:08.010 --> 00:05:15.420
It's a game where you have
a set of 16 tiles, letters,

00:05:15.420 --> 00:05:17.130
and you compete
against each other

00:05:17.130 --> 00:05:20.570
in trying to find as many words
as possible in two minutes.

00:05:20.570 --> 00:05:23.375
It's like a Boggle-type game,
if you've ever played Boggle.

00:05:25.890 --> 00:05:30.760
So it's player versus
player, it has leaderboards,

00:05:30.760 --> 00:05:34.696
in-game chatting, friend
lists, achievements.

00:05:34.696 --> 00:05:36.070
It's also
cross-platform, so it's

00:05:36.070 --> 00:05:39.910
available in iOS, Android,
and Windows phone.

00:05:39.910 --> 00:05:42.070
So obviously given
this, we do have

00:05:42.070 --> 00:05:46.220
some type of mobile
backend to handle this.

00:05:46.220 --> 00:05:50.650
We launched this in March, 2012.

00:05:50.650 --> 00:05:54.800
And actually almost
immediately became a viral hit

00:05:54.800 --> 00:05:56.620
in Stockholm, or in Sweden.

00:05:56.620 --> 00:06:00.850
It took us nine days to become
number one on the Swedish app

00:06:00.850 --> 00:06:02.050
store.

00:06:02.050 --> 00:06:05.160
We had all these kids
playing in the schoolyards,

00:06:05.160 --> 00:06:07.690
and you had Swedish
celebrities tweeting about

00:06:07.690 --> 00:06:09.750
that this was like
the new Plague.

00:06:09.750 --> 00:06:13.059
And we appeared in cartoons
and newspapers and all that.

00:06:13.059 --> 00:06:15.350
So that was pretty cool,
since we're a Swedish company.

00:06:17.870 --> 00:06:25.060
Shortly afterwards we also
hit it big in the Netherlands,

00:06:25.060 --> 00:06:28.240
and we also became number
one in Norway and Denmark

00:06:28.240 --> 00:06:29.790
shortly after.

00:06:29.790 --> 00:06:31.900
So we were doing pretty well.

00:06:31.900 --> 00:06:34.900
But to be honest, I mean
these are small countries.

00:06:34.900 --> 00:06:43.020
So we had something like 5 or
6 million downloads, I guess.

00:06:43.020 --> 00:06:44.010
Something like that.

00:06:44.010 --> 00:06:45.669
So we were doing pretty well.

00:06:45.669 --> 00:06:47.210
We thought we were
doing pretty well.

00:06:47.210 --> 00:06:52.460
But then in December,
2012 something happened.

00:06:52.460 --> 00:06:59.080
We suddenly became a viral hit
in the United States and Italy

00:06:59.080 --> 00:07:02.050
at the same time.

00:07:02.050 --> 00:07:04.600
Now this is actually
pretty cool,

00:07:04.600 --> 00:07:09.180
because we have Google
Analytics integrated in Ruzzle.

00:07:09.180 --> 00:07:12.090
So we could track
on a daily basis

00:07:12.090 --> 00:07:13.920
where people were playing.

00:07:13.920 --> 00:07:17.010
So we know for a fact
that in the United States

00:07:17.010 --> 00:07:21.450
it started in a very small
town down in Mississippi.

00:07:21.450 --> 00:07:25.300
Where, most likely,
high school teenagers

00:07:25.300 --> 00:07:26.750
found out about
Ruzzle and started

00:07:26.750 --> 00:07:28.570
to play against each other.

00:07:28.570 --> 00:07:31.630
And then after a
few days, we could

00:07:31.630 --> 00:07:34.320
see that it had spread
from that little city

00:07:34.320 --> 00:07:36.500
to the neighboring cities.

00:07:36.500 --> 00:07:38.980
And then it spread to the
capital of Mississippi.

00:07:38.980 --> 00:07:41.760
And then it's spread to
the neighboring states.

00:07:41.760 --> 00:07:43.610
And then it just spread
like a viral disease

00:07:43.610 --> 00:07:45.600
all across America.

00:07:45.600 --> 00:07:48.990
And kind of the same
thing happened in Italy

00:07:48.990 --> 00:07:50.410
at the same time.

00:07:50.410 --> 00:07:55.460
So obviously when
these things happen,

00:07:55.460 --> 00:07:59.760
it has an impact on the number
of downloads that you get.

00:07:59.760 --> 00:08:04.840
So this is what our
download charts looked like.

00:08:04.840 --> 00:08:07.620
So the thing to remember
here is that the flat line

00:08:07.620 --> 00:08:09.680
at the bottom that
you see, looks

00:08:09.680 --> 00:08:11.720
like almost nothing,
that's actually

00:08:11.720 --> 00:08:14.880
a pretty healthy 30,000
downloads per day.

00:08:14.880 --> 00:08:17.570
But that grew within
a few weeks to close

00:08:17.570 --> 00:08:19.340
to a million downloads per day.

00:08:22.030 --> 00:08:24.539
Usually when you see
charts like this,

00:08:24.539 --> 00:08:26.830
that's usually when the
marketing department, they just

00:08:26.830 --> 00:08:30.490
go two thumbs up, and go
out and drink champagne.

00:08:30.490 --> 00:08:34.429
Whereas the guys in
the server department

00:08:34.429 --> 00:08:36.820
they just cross their
fingers, pray to God,

00:08:36.820 --> 00:08:39.304
and you just hope
everything sticks together.

00:08:39.304 --> 00:08:41.832
And for one reason
or another, I tend

00:08:41.832 --> 00:08:43.290
to end up in the
server department.

00:08:45.834 --> 00:08:47.500
Because the thing is,
I mean inevitable,

00:08:47.500 --> 00:08:51.340
if you have an exponential
increase in downloads,

00:08:51.340 --> 00:08:55.600
you will have an exponential
increase in traffic.

00:08:55.600 --> 00:08:57.620
And to just give
an idea what kind

00:08:57.620 --> 00:09:03.280
of numbers that we were dealing
with, we added, as I said,

00:09:03.280 --> 00:09:05.440
almost a million users per day.

00:09:05.440 --> 00:09:09.730
We had pretty good retention
numbers, so most of those users

00:09:09.730 --> 00:09:11.410
actually came back
the day after,

00:09:11.410 --> 00:09:14.370
where we added yet
another million users.

00:09:14.370 --> 00:09:17.420
We just kept on adding users,
users, users, and all of those

00:09:17.420 --> 00:09:20.190
are hitting our servers.

00:09:20.190 --> 00:09:24.600
We ended up in a situation
where we, on our peak,

00:09:24.600 --> 00:09:27.700
we had about 100
million games being

00:09:27.700 --> 00:09:30.810
played every day on our service.

00:09:30.810 --> 00:09:33.810
We sent out 150 million
push notifications today.

00:09:33.810 --> 00:09:37.240
And we had a sustained load
on the servers from the games,

00:09:37.240 --> 00:09:41.650
at roughly 30,000
requests per second.

00:09:41.650 --> 00:09:44.580
And to tell you the truth, I
mean we did have some problems.

00:09:44.580 --> 00:09:47.170
We had to tweak the
architecture a bit.

00:09:47.170 --> 00:09:49.650
We had to do some optimizations.

00:09:49.650 --> 00:09:52.560
But for the most
part, everything just

00:09:52.560 --> 00:09:54.380
scaled beautifully.

00:09:54.380 --> 00:09:56.780
So that was pretty, pretty cool.

00:09:56.780 --> 00:09:58.790
Now how did we do that?

00:09:58.790 --> 00:10:01.120
What are the key
things that you think

00:10:01.120 --> 00:10:04.940
about when you design a
game with a mobile backend?

00:10:10.430 --> 00:10:14.390
So you have essentially
a few options

00:10:14.390 --> 00:10:17.550
that Google has been
talking about here.

00:10:17.550 --> 00:10:21.116
If you have a simple
game, it might not

00:10:21.116 --> 00:10:22.615
be player versus
player, so you just

00:10:22.615 --> 00:10:24.380
need leaderboards, for example.

00:10:24.380 --> 00:10:28.760
Or it's something which is
it's player versus player,

00:10:28.760 --> 00:10:30.625
but you don't have any
special consideration

00:10:30.625 --> 00:10:32.600
in how you do matchmaking.

00:10:35.590 --> 00:10:39.010
Then you might be well off
using the Google Play Services,

00:10:39.010 --> 00:10:45.020
or Game Center if
you're strictly on iOS.

00:10:45.020 --> 00:10:47.340
And then on the other
spectrum, if you

00:10:47.340 --> 00:10:50.890
were doing real-time
gaming, maybe you're

00:10:50.890 --> 00:10:52.770
doing a Call of
Duty style thing,

00:10:52.770 --> 00:10:56.770
or you're doing new Clash
of Clans type things,

00:10:56.770 --> 00:11:00.810
you actually might have to
write a lot of stuff yourself,

00:11:00.810 --> 00:11:04.105
and put it in the cloud, and
[INAUDIBLE] server solution.

00:11:07.940 --> 00:11:09.620
But there is a middle
ground as well,

00:11:09.620 --> 00:11:12.100
and that's using AppEngine.

00:11:12.100 --> 00:11:15.790
That's what we ended up doing.

00:11:15.790 --> 00:11:18.030
I'm going to tell
you a little story.

00:11:18.030 --> 00:11:21.910
I was the guy who ended up doing
the evaluation on how we're

00:11:21.910 --> 00:11:24.720
supposed to solve the problem of
having a server in the middle.

00:11:24.720 --> 00:11:29.960
So I was basically evaluating
all the various options

00:11:29.960 --> 00:11:30.500
that we had.

00:11:30.500 --> 00:11:34.630
So we were basically
contemplating either

00:11:34.630 --> 00:11:37.270
writing stuff ourselves
and putting it on Amazon,

00:11:37.270 --> 00:11:40.720
or using AppEngine.

00:11:40.720 --> 00:11:43.110
We had this development
chart for Ruzzle,

00:11:43.110 --> 00:11:45.340
where we had a project plan.

00:11:45.340 --> 00:11:47.650
And a huge chunk of
this project plan

00:11:47.650 --> 00:11:51.970
was allocated in doing
server development.

00:11:51.970 --> 00:11:54.190
So when I started reading
about these things,

00:11:54.190 --> 00:11:56.330
I just realized
that it was actually

00:11:56.330 --> 00:11:59.380
pretty simple to do
this using AppEngine.

00:11:59.380 --> 00:12:01.390
So I went back to the
guys and I said, well

00:12:01.390 --> 00:12:05.810
I think we have overestimated
the amount of time

00:12:05.810 --> 00:12:09.390
that it would take us to
do this using AppEngine.

00:12:09.390 --> 00:12:12.946
And they said, no, no, no,
this is hugely complex.

00:12:12.946 --> 00:12:14.570
This is a very, very
difficult problem.

00:12:14.570 --> 00:12:19.210
So it's going to
take a lot of time.

00:12:19.210 --> 00:12:21.500
I guess just to
prove them wrong--

00:12:21.500 --> 00:12:26.980
this was on a Friday-- I just
went home and wrote about 80%

00:12:26.980 --> 00:12:31.280
of the stuff that we needed
to do to get Ruzzle up

00:12:31.280 --> 00:12:33.350
and launched over the weekend.

00:12:33.350 --> 00:12:35.600
Including client-server
communication, and the client

00:12:35.600 --> 00:12:37.430
side protocols,
and all that stuff.

00:12:37.430 --> 00:12:39.350
So it's hyperproductive.

00:12:39.350 --> 00:12:41.759
It's really, really
fast to do things in it.

00:12:41.759 --> 00:12:44.050
So that's one of the key
advantages of using AppEngine.

00:12:46.620 --> 00:12:50.770
So now we knew that we
could do this, technically.

00:12:50.770 --> 00:12:54.930
But you also need to try to
do your homework on economics.

00:12:54.930 --> 00:13:00.960
So you have to try to estimate
the server costs that you

00:13:00.960 --> 00:13:03.720
will have per daily active user.

00:13:03.720 --> 00:13:05.870
You also have to try
to estimate the revenue

00:13:05.870 --> 00:13:07.830
that you will get per
daily active user,

00:13:07.830 --> 00:13:09.620
because then you
know that you can

00:13:09.620 --> 00:13:13.970
run this service on a
profit, and not on a loss.

00:13:13.970 --> 00:13:16.530
And that the server
costs wouldn't eat up

00:13:16.530 --> 00:13:19.010
your profit margin.

00:13:19.010 --> 00:13:21.640
And the cool thing about
using cloud services

00:13:21.640 --> 00:13:26.220
is that ideally the cost
will adapt with traffic.

00:13:26.220 --> 00:13:28.900
So if you launched
a game and you

00:13:28.900 --> 00:13:31.950
don't have that much traffic,
at least the server side part

00:13:31.950 --> 00:13:35.040
of it won't cost you that much.

00:13:35.040 --> 00:13:36.810
And if you suddenly
end up in a situation

00:13:36.810 --> 00:13:39.000
where you have a lot
of traffic, if you've

00:13:39.000 --> 00:13:41.110
done your math correctly,
you shouldn't actually

00:13:41.110 --> 00:13:41.960
have a problem.

00:13:41.960 --> 00:13:44.790
You should just be glad.

00:13:44.790 --> 00:13:50.240
Also there's a lot of third
party solutions out there

00:13:50.240 --> 00:13:55.975
that help you with things
like push notifications, crash

00:13:55.975 --> 00:13:59.100
analysis, analytics,
things like that.

00:13:59.100 --> 00:14:00.990
A lot of these services,
they charge you

00:14:00.990 --> 00:14:01.990
per monthly active user.

00:14:05.360 --> 00:14:10.500
And you should make sure when
you do that that they-- I mean,

00:14:10.500 --> 00:14:13.520
if you have a game that has a
lot of monthly active users,

00:14:13.520 --> 00:14:16.260
but you don't actually earn
that much from each user,

00:14:16.260 --> 00:14:18.430
these services might become
prohibitively expense.

00:14:18.430 --> 00:14:20.590
So you have to
keep track of that.

00:14:20.590 --> 00:14:23.370
You also ideally should
verify all these assumptions

00:14:23.370 --> 00:14:25.636
by launching on
the trial market.

00:14:25.636 --> 00:14:27.260
We didn't do that
for Ruzzle because we

00:14:27.260 --> 00:14:28.740
didn't understand
that we should.

00:14:28.740 --> 00:14:29.930
But we do that nowadays.

00:14:34.430 --> 00:14:37.070
That brings us to analytics.

00:14:37.070 --> 00:14:40.860
It's like a lot of people
here have been saying,

00:14:40.860 --> 00:14:42.950
nowadays if you
launch a game, it's

00:14:42.950 --> 00:14:46.590
not that you launch a product
and then boom, you're done.

00:14:46.590 --> 00:14:49.290
Gaming nowadays is much,
much more like a service.

00:14:49.290 --> 00:14:51.450
So it's vital that
you know who's

00:14:51.450 --> 00:14:54.500
playing the game, who's
not playing the game, who's

00:14:54.500 --> 00:14:57.780
leaving the game, and why
are they leaving the game.

00:14:57.780 --> 00:15:01.540
So you have to have some
type of analytic solution

00:15:01.540 --> 00:15:04.060
that can capture all these
relevant stuff, like the D1, D7

00:15:04.060 --> 00:15:06.570
retentions.

00:15:06.570 --> 00:15:08.800
Daily active uses,
monthly active uses,

00:15:08.800 --> 00:15:13.090
the revenue get per user
per day, things like that.

00:15:13.090 --> 00:15:15.410
How many-- by the
way, do you know

00:15:15.410 --> 00:15:19.940
what we mean by D7 retention?

00:15:19.940 --> 00:15:22.010
Hardly anyone.

00:15:22.010 --> 00:15:25.980
Right, so the idea
with D1 retention

00:15:25.980 --> 00:15:31.020
is that typically if you
install the game, that's D0.

00:15:31.020 --> 00:15:34.750
if you come back exactly the
day after to play the game,

00:15:34.750 --> 00:15:36.415
that's D1.

00:15:36.415 --> 00:15:39.240
So if you have 50% of
your users coming back

00:15:39.240 --> 00:15:43.770
the day after to play the game,
you have a 50% D1 retention.

00:15:43.770 --> 00:15:48.620
If you have 30% of your users
coming back exactly seven days

00:15:48.620 --> 00:15:52.930
after installation,
that's a 30% D7 retention.

00:15:52.930 --> 00:15:54.730
Now why are these
numbers important?

00:15:54.730 --> 00:15:59.510
Well the thing is, if
you know these numbers,

00:15:59.510 --> 00:16:03.340
you can actually calculate
the player lifetime.

00:16:03.340 --> 00:16:07.570
That is, how many days of
activity your player will have.

00:16:07.570 --> 00:16:09.980
And if you know that, and
you know the average number

00:16:09.980 --> 00:16:12.930
of revenue you get
per daily active user,

00:16:12.930 --> 00:16:14.680
you can actually
calculate how much money

00:16:14.680 --> 00:16:17.060
you'll earn on each
specific download.

00:16:17.060 --> 00:16:19.010
Which is pretty
important, if you

00:16:19.010 --> 00:16:21.490
give the game away for free.

00:16:21.490 --> 00:16:25.380
So if you don't have analytics,
you don't know this stuff.

00:16:25.380 --> 00:16:29.370
So you actually
have to know this.

00:16:29.370 --> 00:16:32.250
Also you need to be
able to handle cohorts,

00:16:32.250 --> 00:16:34.580
so you can do AB testing
and all these things,

00:16:34.580 --> 00:16:36.660
because that's really,
really super important.

00:16:36.660 --> 00:16:39.140
So you know that you
don't make the game worse

00:16:39.140 --> 00:16:41.250
when you do changes.

00:16:41.250 --> 00:16:43.330
And most important,
you have to make sure

00:16:43.330 --> 00:16:45.690
that your analytic
solution scales as well.

00:16:45.690 --> 00:16:48.030
Because if you have
lots of traffic coming

00:16:48.030 --> 00:16:51.010
in from a lot of new users,
you will generate tons and tons

00:16:51.010 --> 00:16:55.110
of events, and you make sure
that that analytical solution

00:16:55.110 --> 00:16:57.520
can handle this.

00:16:57.520 --> 00:16:59.880
Now having said
all this, I thought

00:16:59.880 --> 00:17:02.150
I'd give you a sneak
peak of how we actually

00:17:02.150 --> 00:17:05.710
do things, how we
have solved things.

00:17:05.710 --> 00:17:10.599
So this is how our
architecture looks like.

00:17:10.599 --> 00:17:16.060
We are using Google
Cloud Services heavily.

00:17:16.060 --> 00:17:18.319
And the core of the
whole thing is AppEngine.

00:17:21.020 --> 00:17:23.740
So we essentially have
built a lot of service

00:17:23.740 --> 00:17:28.610
on top of AppEngine, where
we handle things like users.

00:17:28.610 --> 00:17:31.340
We have our own user database,
so we recognize all the users

00:17:31.340 --> 00:17:33.150
within our system.

00:17:33.150 --> 00:17:36.250
All the games being played,
all the chatting, leaderboards,

00:17:36.250 --> 00:17:38.980
all of that is
done in AppEngine.

00:17:38.980 --> 00:17:44.000
We expose an encrypted REST
API towards the client,

00:17:44.000 --> 00:17:47.280
so that they can
communicate with AppEngine.

00:17:47.280 --> 00:17:50.420
We use caching through
Memcache, and we also

00:17:50.420 --> 00:17:53.190
do our own matchmaking.

00:17:53.190 --> 00:17:55.700
We have a rather
advanced matchmaking

00:17:55.700 --> 00:17:59.540
that makes sure that when you
try to find a random opponent

00:17:59.540 --> 00:18:01.590
you will find somebody
with the same type

00:18:01.590 --> 00:18:03.620
of behavioral patterns
that you have.

00:18:03.620 --> 00:18:05.690
So you're not being
frustrated by having

00:18:05.690 --> 00:18:09.090
to wait for the other opponent,
if you're an eager player.

00:18:09.090 --> 00:18:13.980
And also that you meet somebody
with the right skill level.

00:18:13.980 --> 00:18:16.210
So we have backends
that take care

00:18:16.210 --> 00:18:18.310
of matchmaking,
things like that.

00:18:18.310 --> 00:18:20.620
We also do, as I
said, analytics.

00:18:20.620 --> 00:18:26.010
And we use BigQuery mainly
for all our analytics.

00:18:26.010 --> 00:18:33.070
So the cool thing about BigQuery
is that it's constant in time,

00:18:33.070 --> 00:18:34.720
but linear in cost.

00:18:34.720 --> 00:18:38.930
And that means that if you do--
it's really super fast as well.

00:18:38.930 --> 00:18:42.330
But the thing is, if
I take 10 million rows

00:18:42.330 --> 00:18:44.020
and I do a complex
query, I might

00:18:44.020 --> 00:18:46.510
get an answer in 13 seconds.

00:18:46.510 --> 00:18:50.190
And then I do the same query,
but I throw in 10 billion rows,

00:18:50.190 --> 00:18:51.870
it still takes 13 seconds.

00:18:51.870 --> 00:18:53.640
It's just it costs you more.

00:18:53.640 --> 00:18:57.860
And that makes it ideal if
you're doing in-game analytics,

00:18:57.860 --> 00:19:01.530
because you will generate tons
and tons and tons of events.

00:19:01.530 --> 00:19:03.770
And as long as you
can do the analytics,

00:19:03.770 --> 00:19:08.840
and can accept the cost of doing
analytics, this thing is ideal.

00:19:08.840 --> 00:19:11.650
So what we do is that
within AppEngine we

00:19:11.650 --> 00:19:12.730
have trigger points.

00:19:12.730 --> 00:19:15.710
So for example when
people register, or they

00:19:15.710 --> 00:19:18.830
play games or whatever, we
generate a lot of events.

00:19:18.830 --> 00:19:23.020
We stream these events in real
time through GCS into BigQuery,

00:19:23.020 --> 00:19:26.120
and then we do daily
jobs, aggregation jobs,

00:19:26.120 --> 00:19:29.420
to calculate retention figures,
daily active users, things

00:19:29.420 --> 00:19:32.230
like that on different markets.

00:19:32.230 --> 00:19:34.540
And then we have built
executive dashboards

00:19:34.540 --> 00:19:36.950
on top of that, so
that the management can

00:19:36.950 --> 00:19:40.140
go in and interactively go
in to monitor all the games

00:19:40.140 --> 00:19:43.580
and how they perform
on various markets.

00:19:43.580 --> 00:19:48.280
We also compliment this
with further like BI systems

00:19:48.280 --> 00:19:49.990
that we integrate.

00:19:49.990 --> 00:19:53.740
For example, ad revenues
into a consolidated place,

00:19:53.740 --> 00:19:56.580
so we can have a
monitoring to make sure

00:19:56.580 --> 00:19:59.490
that how much we are actually
earning from ads, on all

00:19:59.490 --> 00:20:03.412
the various markets on
all of the 25 various ad

00:20:03.412 --> 00:20:04.870
networks that we're
using globally.

00:20:08.080 --> 00:20:11.800
So we're using Compute Engine
and Cloud SQL for that.

00:20:11.800 --> 00:20:14.280
We also do third
party analytics.

00:20:14.280 --> 00:20:16.110
We have other
third party systems

00:20:16.110 --> 00:20:17.750
that we integrate
into this as well.

00:20:20.740 --> 00:20:23.090
We also do push messaging.

00:20:23.090 --> 00:20:26.404
So for Android
and Windows Phone,

00:20:26.404 --> 00:20:27.820
it's more or less
straightforward.

00:20:27.820 --> 00:20:30.640
Whenever we actually want
to send a push message,

00:20:30.640 --> 00:20:33.350
we do it straight from
AppEngine straight

00:20:33.350 --> 00:20:36.540
onto the various endpoints.

00:20:36.540 --> 00:20:39.060
iOS is a bit more
complicated, so we actually

00:20:39.060 --> 00:20:41.600
have our own push
notification gateway

00:20:41.600 --> 00:20:43.850
that we run in the cloud.

00:20:43.850 --> 00:20:46.970
So we use that to
communicate from AppEngine.

00:20:46.970 --> 00:20:49.580
And then we send that
through to Apple Service

00:20:49.580 --> 00:20:52.020
and down to the devices as well.

00:20:52.020 --> 00:21:00.410
So to make this a little
less abstract for all of you,

00:21:00.410 --> 00:21:04.440
I thought I'd go through a
bit of a case study of how

00:21:04.440 --> 00:21:07.720
we actually work with these
things on a daily basis.

00:21:07.720 --> 00:21:11.810
So a typical example would be
that our marketing department

00:21:11.810 --> 00:21:14.030
would essentially
come back to us

00:21:14.030 --> 00:21:18.530
and say, OK, it looks like
the monthly active users have

00:21:18.530 --> 00:21:21.050
started to drop in France.

00:21:21.050 --> 00:21:25.490
So we want to do some type of
targeted re-activation campaign

00:21:25.490 --> 00:21:28.164
for those French users.

00:21:28.164 --> 00:21:29.580
So what we typically
would do then

00:21:29.580 --> 00:21:32.450
is that we, through
BigQuery, we try

00:21:32.450 --> 00:21:35.540
to identify the
valuable players that we

00:21:35.540 --> 00:21:38.000
want to get back into the game.

00:21:38.000 --> 00:21:42.120
So we extract those users.

00:21:42.120 --> 00:21:46.425
We then do MapReduce job
into the BigTable database

00:21:46.425 --> 00:21:52.780
at Datastore, to extract those
actual user data that we have.

00:21:52.780 --> 00:21:55.970
And queue those
into a task queue,

00:21:55.970 --> 00:21:59.170
which is like Google's
asynchronous queue handling

00:21:59.170 --> 00:22:01.070
that they have.

00:22:01.070 --> 00:22:02.880
So that we enqueue
those so that we

00:22:02.880 --> 00:22:05.440
can send push notifications
to these people.

00:22:05.440 --> 00:22:08.910
We also typically try to
identify users patterns.

00:22:08.910 --> 00:22:12.925
So if you're, for
example, typically you

00:22:12.925 --> 00:22:16.010
play Ruzzle on the way
to work in the morning,

00:22:16.010 --> 00:22:18.310
we would know that
between 8:00 and 8:30

00:22:18.310 --> 00:22:20.610
in the morning, that's
usually when you play.

00:22:20.610 --> 00:22:24.550
So if we want to retarget you
as a user, to say come back

00:22:24.550 --> 00:22:27.810
and play, that's obviously
exactly in the time slot

00:22:27.810 --> 00:22:31.080
that we want to send that
push notification to you.

00:22:31.080 --> 00:22:33.530
So we try to do that.

00:22:33.530 --> 00:22:37.340
And also finally, after
we've done all this,

00:22:37.340 --> 00:22:40.500
we would then use
BigQuery to try

00:22:40.500 --> 00:22:43.340
to analyze the outcome of this.

00:22:43.340 --> 00:22:44.970
How many percent of
the users actually

00:22:44.970 --> 00:22:48.370
did come back and play,
and how much money more can

00:22:48.370 --> 00:22:51.770
we earn from this,
so we know that we're

00:22:51.770 --> 00:22:53.360
doing it in the right way.

00:22:53.360 --> 00:22:56.290
We also typically try to
do this with A/B tests,

00:22:56.290 --> 00:22:59.740
so we try to change
messages, to try

00:22:59.740 --> 00:23:02.050
to see which messages
are working better

00:23:02.050 --> 00:23:04.810
than others, things like that.

00:23:04.810 --> 00:23:10.670
So I guess that's more
or less it for me.

00:23:10.670 --> 00:23:16.620
We are really super happy that
we went with the various cloud

00:23:16.620 --> 00:23:18.650
services that we're using.

00:23:18.650 --> 00:23:21.290
It's been working
fantastically for us.

00:23:21.290 --> 00:23:22.680
So I can highly recommend it.

00:23:22.680 --> 00:23:25.810
But needs may vary, so it
depends on what type of game

00:23:25.810 --> 00:23:27.360
you're doing, and
all that stuff.

00:23:27.360 --> 00:23:30.680
But for us it's been fantastic.

00:23:30.680 --> 00:23:33.370
So that's about it.

00:23:33.370 --> 00:23:35.640
The last thing is
that we are hiring.

00:23:35.640 --> 00:23:40.480
So if you're a really
skilled game developer,

00:23:40.480 --> 00:23:42.640
and you're happy to
move to Stockholm,

00:23:42.640 --> 00:23:46.860
because it's a beautiful city,
then come to see me afterwards.

00:23:46.860 --> 00:23:48.190
Other than that, questions?

00:23:56.500 --> 00:23:57.056
AUDIENCE: Hi.

00:23:57.056 --> 00:23:57.680
KAJ NYGREN: Hi.

00:23:57.680 --> 00:23:59.846
AUDIENCE: What were the
differentiating factors that

00:23:59.846 --> 00:24:03.295
made you choose Google AppEngine
over something like AWS Elastic

00:24:03.295 --> 00:24:03.795
Beanstalk?

00:24:07.547 --> 00:24:08.880
KAJ NYGREN: I'd put it this way.

00:24:12.310 --> 00:24:19.990
First of all, why--
Elastic Beanstalk is

00:24:19.990 --> 00:24:24.530
a lot more of doing--
it's like a mixture.

00:24:24.530 --> 00:24:32.190
It's a halfway from just
doing a virtual like AVS, AWS,

00:24:32.190 --> 00:24:35.460
it's halfway to that
and an AppEngine.

00:24:35.460 --> 00:24:38.090
So you don't get as
much things for free.

00:24:38.090 --> 00:24:43.370
The cool thing here is
that you have like an API

00:24:43.370 --> 00:24:45.730
directly into BigTable.

00:24:45.730 --> 00:24:47.670
You have a shared Memcache.

00:24:47.670 --> 00:24:52.950
You have backends that you
can run for other tasks.

00:24:52.950 --> 00:24:55.330
You have task queues for
asynchronous handling,

00:24:55.330 --> 00:24:58.390
you have a lot of these things
that you just get for free.

00:24:58.390 --> 00:25:00.450
And usually it's just
a few lines of code

00:25:00.450 --> 00:25:04.290
to do this, to get things done.

00:25:04.290 --> 00:25:07.760
Whereas using
Elastic Beanstalk is

00:25:07.760 --> 00:25:13.580
much more of doing ordinary Java
development that just scales.

00:25:13.580 --> 00:25:15.432
So I guess that's
my answer to that.

00:25:18.560 --> 00:25:21.120
AUDIENCE: Hi, thanks for
sharing all of that data

00:25:21.120 --> 00:25:24.330
and how you do things, and
congrats on your success.

00:25:24.330 --> 00:25:26.677
Just a question that's
related to the last panel.

00:25:26.677 --> 00:25:29.260
I don't know the game that well,
but looking at the art style,

00:25:29.260 --> 00:25:31.825
and you mention that it's
played in kids' playgrounds

00:25:31.825 --> 00:25:34.890
or at schools, is this
a young kids game?

00:25:34.890 --> 00:25:36.440
Or is it preteen?

00:25:36.440 --> 00:25:41.190
And if so, can you comment
on how you monetized?

00:25:41.190 --> 00:25:43.150
What model you used?

00:25:43.150 --> 00:25:45.240
And also what kind
of infrastructure

00:25:45.240 --> 00:25:49.150
you might have to have for
things like all the player

00:25:49.150 --> 00:25:54.740
to player chats with regards
to younger players, and safety,

00:25:54.740 --> 00:25:56.370
and if that touches your game?

00:25:56.370 --> 00:25:58.721
I'm not sure.

00:25:58.721 --> 00:26:00.470
KAJ NYGREN: I'm actually
quite glad to say

00:26:00.470 --> 00:26:02.540
that we have a very
broad audience.

00:26:02.540 --> 00:26:06.860
We have people who are
playing Ruzzle-- obviously

00:26:06.860 --> 00:26:09.299
they need to be able
to read, otherwise

00:26:09.299 --> 00:26:11.340
it would be difficult,
this is a word-based game.

00:26:11.340 --> 00:26:16.710
But we have people that play
Ruzzle that are from 12 to 85

00:26:16.710 --> 00:26:19.210
probably, in age.

00:26:19.210 --> 00:26:22.340
I'd say that in Sweden
Ruzzle was probably

00:26:22.340 --> 00:26:24.470
the first mobile
game that people

00:26:24.470 --> 00:26:27.530
were playing for
a lot of people.

00:26:27.530 --> 00:26:31.620
We had a lot of old
people who just came in

00:26:31.620 --> 00:26:33.565
because they loved the
playing experience.

00:26:39.050 --> 00:26:43.000
So no, we don't target
just young players.

00:26:43.000 --> 00:26:49.860
We just, I guess, like to have
a playful style of our artwork.

00:26:49.860 --> 00:26:54.020
But it's actually
for a grown audience.

00:26:54.020 --> 00:26:57.320
Other than that we try
to monitor our chats.

00:26:59.920 --> 00:27:02.000
I mean obviously we have
incidents with chats.

00:27:02.000 --> 00:27:03.750
Some things happen.

00:27:03.750 --> 00:27:05.850
So if people report
things to us,

00:27:05.850 --> 00:27:10.870
we actually sometimes we report
to authorities things that

00:27:10.870 --> 00:27:13.090
happened.

00:27:13.090 --> 00:27:16.840
So we try to do that actively.

00:27:16.840 --> 00:27:17.580
AUDIENCE: Hello.

00:27:17.580 --> 00:27:19.254
I have two questions, actually.

00:27:19.254 --> 00:27:19.920
KAJ NYGREN: Yep.

00:27:19.920 --> 00:27:24.050
AUDIENCE: First of all, all
the CR magic behind Bing,

00:27:24.050 --> 00:27:28.630
or going viral, so having
a game for one year

00:27:28.630 --> 00:27:32.430
or so, and then just
from one day to another

00:27:32.430 --> 00:27:34.200
going to one million downloads.

00:27:34.200 --> 00:27:36.410
And then when you
went viral and you had

00:27:36.410 --> 00:27:40.870
one million daily active users,
did you do any other marketing?

00:27:40.870 --> 00:27:44.800
Did you use those money
to get even more users?

00:27:44.800 --> 00:27:46.800
KAJ NYGREN: Yeah, first
of all, a clarification.

00:27:46.800 --> 00:27:49.110
It's not that we have one
million daily active users.

00:27:49.110 --> 00:27:52.040
We added one million
daily active users today.

00:27:54.750 --> 00:27:56.440
So what's the magic?

00:27:56.440 --> 00:27:57.710
That's a very good question.

00:27:57.710 --> 00:28:00.400
If I actually knew all
the magic that we have,

00:28:00.400 --> 00:28:04.870
then we would have probably
30 games of the same caliber.

00:28:04.870 --> 00:28:07.450
But there is something
in the game play

00:28:07.450 --> 00:28:12.630
that appeals to a broad
audience, that's very sticky.

00:28:12.630 --> 00:28:14.430
Otherwise it wouldn't work.

00:28:14.430 --> 00:28:19.410
We do add and have things
that support virality.

00:28:19.410 --> 00:28:22.210
Like for example
in Italy, Facebook

00:28:22.210 --> 00:28:25.410
was a huge part of the virality.

00:28:25.410 --> 00:28:30.680
People were inviting each
other a lot on Facebook.

00:28:30.680 --> 00:28:34.030
In the United States it was
that we had Twitter integration.

00:28:34.030 --> 00:28:37.800
So Ruzzle was actually
the top tweeted word

00:28:37.800 --> 00:28:40.490
for awhile in the world.

00:28:49.195 --> 00:28:50.820
AUDIENCE: You said
that-- or that graph

00:28:50.820 --> 00:28:55.860
was showing that you had 30,000
new users up until December,

00:28:55.860 --> 00:29:00.450
which in my opinion, is enough
to get a game going viral.

00:29:00.450 --> 00:29:03.800
So I just don't understand
what was the point--

00:29:03.800 --> 00:29:05.050
KAJ NYGREN: The tipping point.

00:29:05.050 --> 00:29:08.402
Why it actually struck.

00:29:08.402 --> 00:29:09.360
That's a good question.

00:29:09.360 --> 00:29:11.260
As I said, when we
launched in Sweden,

00:29:11.260 --> 00:29:13.930
it took us nine days
to become a viral hit.

00:29:13.930 --> 00:29:18.800
It's just that we had a
super duper cool game.

00:29:18.800 --> 00:29:19.910
That's the short answer.

00:29:23.150 --> 00:29:26.030
So yeah, there is some
magic to it, obviously.

00:29:26.030 --> 00:29:28.620
And there's also obviously
some internal magic of things,

00:29:28.620 --> 00:29:31.637
and why we think that
we actually became

00:29:31.637 --> 00:29:32.720
hits in various countries.

00:29:32.720 --> 00:29:35.760
And I can't share all that data.

00:29:35.760 --> 00:29:38.930
As to do we do user
acquisition, yes we do as well.

00:29:41.680 --> 00:29:43.990
On some markets
we hit because we

00:29:43.990 --> 00:29:46.250
knew that we are
potentially viral.

00:29:46.250 --> 00:29:47.680
So we do user requisition.

00:29:47.680 --> 00:29:49.370
And then you hit
the tipping point,

00:29:49.370 --> 00:29:51.300
and then you go viral like this.

00:29:51.300 --> 00:29:53.050
In other markets,
like in the States,

00:29:53.050 --> 00:29:56.580
we had planned to do user
acquisition and marketing

00:29:56.580 --> 00:29:59.200
activities, but
we hadn't started.

00:29:59.200 --> 00:30:01.500
So that was spontaneous.

00:30:01.500 --> 00:30:03.440
These things can happen.

00:30:03.440 --> 00:30:05.400
Like Flappy Bird
for example, that's

00:30:05.400 --> 00:30:06.630
just spontaneous as well.

00:30:11.760 --> 00:30:14.060
AUDIENCE: If you
don't mind telling us,

00:30:14.060 --> 00:30:17.830
what percentage of your
players pay to play?

00:30:17.830 --> 00:30:21.530
KAJ NYGREN: Uh, no I can't
share that data, unfortunately.

00:30:21.530 --> 00:30:22.980
AUDIENCE: Roughly.

00:30:22.980 --> 00:30:26.010
KAJ NYGREN: I can't.

00:30:26.010 --> 00:30:30.330
But we're actually, I
mean, we're like Ruzzle,

00:30:30.330 --> 00:30:34.960
the game Ruzzle is actually
not a proper free to play game.

00:30:34.960 --> 00:30:37.680
It's a freemium type of game.

00:30:37.680 --> 00:30:39.560
So you have your free
experience with ads,

00:30:39.560 --> 00:30:41.680
then they can buy premium.

00:30:41.680 --> 00:30:43.710
And we have a pretty
good conversion rate

00:30:43.710 --> 00:30:45.350
usually of people
actually paying

00:30:45.350 --> 00:30:48.990
for premium, that I can say.

00:30:48.990 --> 00:30:51.220
The fall of Ruzzle
Adventure, which

00:30:51.220 --> 00:30:55.405
is in prelaunch, that's more
of a proper free to play game.

00:31:00.270 --> 00:31:03.230
RICHARD HYNDMAN: OK,
thank you very, Kaj.

00:31:03.230 --> 00:31:07.278
[APPLAUSE]

