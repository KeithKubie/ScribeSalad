WEBVTT
Kind: captions
Language: en

00:00:00.532 --> 00:00:02.640
 When it comes to idle status in the Marshmallow, 

00:00:02.640 --> 00:00:04.656
 I always say the developer does not need to worry 

00:00:04.656 --> 00:00:06.750
 And maybe you do not need to change any code either. 

00:00:06.750 --> 00:00:08.850
 But you need to test your application. 

00:00:08.850 --> 00:00:10.560
 I'm Joanna Smith and by this time, 

00:00:10.560 --> 00:00:13.210
 We must know that you can not escape the monster test. 

00:00:13.210 --> 00:00:14.420
 Some quick background. 

00:00:14.420 --> 00:00:15.960
 There is nothing worse for the user 

00:00:15.960 --> 00:00:17.709
 From trying to take a picture of his acting dog 

00:00:17.709 --> 00:00:20.170
 Gently, only to show that his battery is 6% 

00:00:20.170 --> 00:00:22.730
 And opening the camera kills their phones. 

00:00:22.730 --> 00:00:25.410
 Battery protection is caused by idle mode 

00:00:25.410 --> 00:00:28.090
 The system can place your application in it if it is not activated 

00:00:28.090 --> 00:00:28.930
 Recently. 

00:00:28.930 --> 00:00:31.330
 And while this may seem scary, the best advice 

00:00:31.330 --> 00:00:34.230
 I have you as a developer is to do nothing, 

00:00:34.230 --> 00:00:35.965
 Because the standby mode in the application is intelligent. 

00:00:35.965 --> 00:00:38.510
 This will not happen to applications that the user interacts with. 

00:00:38.510 --> 00:00:40.273
 Or which have effective activities and services 

00:00:40.273 --> 00:00:42.420
 In the background, or containing notification messages 

00:00:42.420 --> 00:00:43.660
 Hanging in the drawer. 

00:00:43.660 --> 00:00:46.310
 Standby mode is designed to restrict background synchronization operations 

00:00:46.310 --> 00:00:48.860
 And functions for applications that do not care 

00:00:48.860 --> 00:00:50.420
 Currently in use. 

00:00:50.420 --> 00:00:52.170
 So when your app is used 

00:00:52.170 --> 00:00:53.630
 He does not need to worry about that. 

00:00:53.630 --> 00:00:55.520
 And when it does not, it should not in fact 

00:00:55.520 --> 00:00:59.620
 To note that in the idle state, so my advice to do nothing, 

00:00:59.620 --> 00:01:02.120
 Except for testing your application. 

00:01:02.120 --> 00:01:04.750
 There - so. 

00:01:04.750 --> 00:01:07.340
 Quality Bezel retrieves your application from idle mode 

00:01:07.340 --> 00:01:10.930
 It is important to understand what users may see. 

00:01:10.930 --> 00:01:14.020
 So you'll be sure that any notifications are expected 

00:01:14.020 --> 00:01:17.020
 Created correctly, the download messages are stimulated 

00:01:17.020 --> 00:01:19.730
 The right answer immediately to high priority 

00:01:19.730 --> 00:01:23.170
 Or late for normal status, and that late and concurrent messages 

00:01:23.170 --> 00:01:25.820
 Cleaned in both the daily maintenance window 

00:01:25.820 --> 00:01:28.580
 Once your app is out of idle mode 

00:01:28.580 --> 00:01:30.730
 To help you, we have created a new "ADB" service 

00:01:30.730 --> 00:01:33.677
 Which will allow you to switch the entry and exit from standby in the application. 

00:01:33.677 --> 00:01:36.010
 So you need a device or simulator running the marchemelo, 

00:01:36.010 --> 00:01:38.767
 Then you need to open your application and leave it running. 

00:01:38.767 --> 00:01:41.010
 And then force your application to standby mode, 

00:01:41.010 --> 00:01:44.570
 You first need to order the device not to pull any power from its connection cable 

00:01:44.640 --> 00:01:46.970
 To your computer, because the plug 

00:01:46.970 --> 00:01:49.100
 I mean we are not worried about the battery anymore. 

00:01:49.100 --> 00:01:51.110
 Then set the "inactivity" as true or false 

00:01:51.110 --> 00:01:52.820
 To switch to or from standby in the application. 

00:01:52.820 --> 00:01:55.500
 The inactivity mode will allow you to check the current status. 

00:01:55.500 --> 00:01:57.910
 By switching status, you will know what to expect, 

00:01:57.910 --> 00:02:00.790
 You can notice whether your application is behaving correctly. 

00:02:00.790 --> 00:02:03.240
 In theory, there should be no surprises 

00:02:03.240 --> 00:02:04.350
 Because all background work 

00:02:04.350 --> 00:02:06.974
 It does not happen when running Idle should work as soon as you finish 

00:02:06.974 --> 00:02:08.610
 It is idle, and nothing is lost. 

00:02:08.610 --> 00:02:10.160
 Any action in front of me means you 

00:02:10.160 --> 00:02:12.710
 Do not move into idle mode in the first place. 

00:02:12.710 --> 00:02:14.900
 But if you notice something strange during the test, 

00:02:14.900 --> 00:02:16.580
 You can modify your properties. 

00:02:16.580 --> 00:02:18.000
 GCM messages marked with a tag 

00:02:18.000 --> 00:02:21.140
 High priority will come to your application even during standby, 

00:02:21.140 --> 00:02:24.260
 So that you can interact with the important information coming from your server 

00:02:24.260 --> 00:02:26.760
 Wake-up and alerts are honored by idle status. 

00:02:26.760 --> 00:02:29.610
 So if you need to interact with a certain time, you can. 

00:02:29.610 --> 00:02:32.580
 But for most applications, there must be little work, 

00:02:32.580 --> 00:02:35.440
 Which means that this time all you have to do is test the code "code" 

00:02:35.440 --> 00:02:37.220
 Then take a nap in order to build better applications. 

00:02:37.220 --> 00:02:40.270
 [Music] 

