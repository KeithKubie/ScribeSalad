WEBVTT
Kind: captions
Language: en

00:00:00.149 --> 00:00:04.460
&gt;&gt; CLERON: Hi, my name is Mike Cleron. I’m
the engineer on the Android Development Team.

00:00:04.460 --> 00:00:08.829
Android is an open software platform for mobile
development. It is intended to be a complete

00:00:08.829 --> 00:00:12.709
stack that includes everything from the operating
system through middleware, and up through

00:00:12.709 --> 00:00:17.910
the applications. Now I'm going to focus in
detail on a few of the APIs that I think provide

00:00:17.910 --> 00:00:23.769
fertile ground for innovation. The first is
the location manager. This is a set of APIs

00:00:23.769 --> 00:00:31.119
that allows you to get geographic information.
It will let you find out your current location,

00:00:31.119 --> 00:00:35.240
and it will also let you register to receive
notifications if you get close to something

00:00:35.240 --> 00:00:41.810
interesting. So you can actually register,
you can register an intent with the location

00:00:41.810 --> 00:00:46.760
manager that will be fired when you get close
to a point that you specify. And that lets

00:00:46.760 --> 00:00:51.130
you do things like being notified when you
get close to one of your friends, or it lets

00:00:51.130 --> 00:00:54.870
you be notified when you get close to, say,
an ice-cream shop that has particularly good

00:00:54.870 --> 00:01:00.300
ice-cream in it. It has that kind of an interesting
innovative application with this kind of API

00:01:00.300 --> 00:01:07.000
enables. The location manager will use GPS
if the device comes equipped with GPS. If

00:01:07.000 --> 00:01:12.300
it doesn’t, it will make do with whatever
information is available that might be getting

00:01:12.300 --> 00:01:17.409
information from cell tower IDs or if there's
a Wi-Fi network that has geographic location

00:01:17.409 --> 00:01:23.630
information in it, we'll use that information
to try to at least narrow down where you are.

00:01:23.630 --> 00:01:28.120
While building applications for the Android
platform, we found that it was useful to have

00:01:28.120 --> 00:01:34.700
and always on data connection so that the
server could send notifications to devices

00:01:34.700 --> 00:01:39.010
running the Android platform. It turned out
that it’s such a useful piece of infrastructure

00:01:39.010 --> 00:01:44.820
that we decided to package it up and make
it available as part of the public framework.

00:01:44.820 --> 00:01:51.260
And that has been done by creating the XMPP
Service APIs. The XMPP Service allows any

00:01:51.260 --> 00:01:57.990
application to send device-to-device data
messages to any user who's running Android

00:01:57.990 --> 00:02:04.200
upon their device. Now that data can be whatever
information make sense with the application.

00:02:04.200 --> 00:02:10.009
So for a multiplayer game, that might be that
I’ve moved my knights to a particular location,

00:02:10.009 --> 00:02:14.989
or whatever make sense for the game. But it
could also be something else like geographic

00:02:14.989 --> 00:02:22.299
information. So with appropriate permissions
and security, the user could send their location

00:02:22.299 --> 00:02:27.150
to their buddies so that their buddies could
actually see where they are at any given time

00:02:27.150 --> 00:02:33.109
and plot that information on a map. Again,
this works with any Gmail account, so any

00:02:33.109 --> 00:02:37.230
application can send this type of peer-to-peer
messages without having to build any server

00:02:37.230 --> 00:02:41.829
infrastructure. The next API is one of my
favorites. It’s called the Notification

00:02:41.829 --> 00:02:47.969
Manager, and it allows any application to
put a notification into the status bar. We

00:02:47.969 --> 00:02:54.090
use the status bar for things like SMS notifications,
voicemail notifications, all of the typical

00:02:54.090 --> 00:02:59.719
things you’d expect to see on a phone. However,
we make that same facility available to any

00:02:59.719 --> 00:03:05.029
application. And so, that means the developers
can have the same power to alert the user

00:03:05.029 --> 00:03:09.909
to interesting events as what have traditionally
been built-in applications. This has a lot

00:03:09.909 --> 00:03:16.120
of benefits. First, it means that all notifications
have a consistent presentation. Now the way

00:03:16.120 --> 00:03:22.590
we do it in the UI, we have a visible preview
of what the notification means. So if an icon

00:03:22.590 --> 00:03:28.189
appears in the status bar, you can click on
it or touch it to make it active so you can

00:03:28.189 --> 00:03:31.749
see a preview of what it means, which means
you don’t have to figure out what each of

00:03:31.749 --> 00:03:36.010
30 different hieroglyphics means. Then, if
you want to act on that notification, you

00:03:36.010 --> 00:03:40.579
can simply touch on it and you will be taken
to whatever application is responsible for

00:03:40.579 --> 00:03:46.040
that notification. This allows a lot of really
interesting scenarios. It means that applications

00:03:46.040 --> 00:03:50.749
can notify you of things like when an auction
is ending, or if someone has invited you to

00:03:50.749 --> 00:03:55.549
be their friend on a social network, or if
a bus is coming. And all of those notifications

00:03:55.549 --> 00:04:01.849
can have the same level of prominence in the
UI as something like voicemail or the other

00:04:01.849 --> 00:04:06.609
built-in notifications. And finally, I’d
like take a minute to talk about the view

00:04:06.609 --> 00:04:11.549
system in Android. Android provides a really
rich toolkit of built-in views, and you can

00:04:11.549 --> 00:04:16.250
use those to assemble your applications out
of standard parts. So we provide things like

00:04:16.250 --> 00:04:24.300
playlist view and a grid view, a gallery view.
We provide all the standard widgets like buttons

00:04:24.300 --> 00:04:29.639
and check boxes. And by combining those things,
you can build your applications really quickly.

00:04:29.639 --> 00:04:34.810
We've also done a lot of work in the framework
to support multiple input methods and multiple

00:04:34.810 --> 00:04:40.210
screen sizes and multiple keyboard configurations
in the view system itself so that you don’t

00:04:40.210 --> 00:04:44.930
have to worry about that in your application.
So for example are list of views work with

00:04:44.930 --> 00:04:49.620
touch but they also work if you want to drive
them with a [INDISTINCT] D-pad. And that’s

00:04:49.620 --> 00:04:54.759
just a built-in facility of the view framework.
In addition to that sort of views, we also

00:04:54.759 --> 00:05:03.229
are introducing two really innovative views.
The first is a map view. This is an actual,

00:05:03.229 --> 00:05:09.849
this is an implementation of the same map
rendering engine that’s in our maps application.

00:05:09.849 --> 00:05:15.259
But we decided to make that available as a
view so that applications can have really

00:05:15.259 --> 00:05:20.270
tight integration with geographic data. So
it’s, of course possible to always launch

00:05:20.270 --> 00:05:24.629
the map application to display a particular
location. But what the maps view let you do

00:05:24.629 --> 00:05:29.620
is actually embed a map view in your application
so that you can control it from your own code

00:05:29.620 --> 00:05:34.080
so you can set it to a particular locations,
zoom in, zoom out, pan the map, control all

00:05:34.080 --> 00:05:38.470
of that from your own code to build whatever
kind of application you want to build based

00:05:38.470 --> 00:05:43.789
on that. We've done something similar with
the browser. There’s a browser application

00:05:43.789 --> 00:05:49.240
that you can launch to display a webpage,
but we also have a web view that enables you

00:05:49.240 --> 00:05:55.280
to embed HTML content as a view in your application
that you can then fill with whatever data

00:05:55.280 --> 00:05:59.639
make sense for your app. Personally, what
I’m hoping to see come out of the Android

00:05:59.639 --> 00:06:04.969
effort is the kind of innovation that comes
from what I call a mash up effect. We really

00:06:04.969 --> 00:06:09.639
had two goals in mind when we set out to create
Android. The first was to provide developers

00:06:09.639 --> 00:06:14.819
with a powerful toolkit for building new types
of experiences. This toolkit includes things

00:06:14.819 --> 00:06:19.439
like the application framework, the view system,
things like the maps view and the web view

00:06:19.439 --> 00:06:25.569
that you can embed in your application, device-to
device messaging through XMPP, location services,

00:06:25.569 --> 00:06:30.250
notifications, and all the other pieces of
our API. But the second and more important

00:06:30.250 --> 00:06:36.159
goal was to be sufficiently open and extensible
to allow these pieces to be combined in ways

00:06:36.159 --> 00:06:40.349
that we really haven’t imagined yet. If
you're interested in finding out more about

00:06:40.349 --> 00:06:45.780
Android, I encourage you to visit the developer
site and download the SDK. In the SDK, you

00:06:45.780 --> 00:06:50.319
will find a lot more documentation and sample
code, and you’ll also be able to try built-in

00:06:50.319 --> 00:06:55.599
applications of your own. There's also a developer
group that you can join to find out more information.

00:06:55.599 --> 00:06:59.560
And I also encourage you to check back frequently
because we’ll be posting updates to the

00:06:59.560 --> 00:07:02.949
SDK as the platform of your choice. Thank
you for watching.

