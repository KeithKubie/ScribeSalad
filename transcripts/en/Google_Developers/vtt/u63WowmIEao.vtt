WEBVTT
Kind: captions
Language: en

00:00:01.182 --> 00:00:02.640
PENG YING: Hi, My
name is Peng Ying

00:00:02.640 --> 00:00:04.710
and I work on the
Google Wallet team.

00:00:04.710 --> 00:00:07.600
I'm here to talk about
the Instant Buy API.

00:00:07.600 --> 00:00:10.660
Instant Buy is a product that
enables seamless purchases

00:00:10.660 --> 00:00:13.770
of physical goods and
services from mobile devices.

00:00:13.770 --> 00:00:15.360
For purchases in
Android apps, Google

00:00:15.360 --> 00:00:17.320
provides two payment APIs.

00:00:17.320 --> 00:00:20.790
For digital goods, you can
use the In-app Billing API.

00:00:20.790 --> 00:00:22.610
For physical goods
and services, you

00:00:22.610 --> 00:00:26.280
can use the Instant Buy API
to enable seamless purchases

00:00:26.280 --> 00:00:28.120
for your users.

00:00:28.120 --> 00:00:29.990
And seamless purchases
of physical goods

00:00:29.990 --> 00:00:31.490
are important because
we're starting

00:00:31.490 --> 00:00:33.900
to see more apps
interacting with the world

00:00:33.900 --> 00:00:36.480
and creating better experiences.

00:00:36.480 --> 00:00:38.380
For example, rideshare
companies are

00:00:38.380 --> 00:00:41.430
transforming the
transportation industry.

00:00:41.430 --> 00:00:44.870
Before you would stay on the
corner and hope an empty cab

00:00:44.870 --> 00:00:48.630
would pass you by, but now you
know exactly where that car is

00:00:48.630 --> 00:00:50.290
and when it will arrive.

00:00:50.290 --> 00:00:53.220
And there's no more dealing
with broken credit card readers,

00:00:53.220 --> 00:00:54.900
there's no more
figuring out tip,

00:00:54.900 --> 00:00:57.620
there's no more manual
payment whatsoever.

00:00:57.620 --> 00:01:00.139
Everything is handled by
the device in your pocket.

00:01:00.139 --> 00:01:01.680
And when you get to
your destination,

00:01:01.680 --> 00:01:04.720
you just get out
of the car and go.

00:01:04.720 --> 00:01:07.030
The way that we order
food is changing.

00:01:07.030 --> 00:01:10.290
More restaurants like Domino's
have mobile ordering apps.

00:01:10.290 --> 00:01:13.515
Aggregators like Eat24 are
enabling smaller restaurants

00:01:13.515 --> 00:01:15.529
to accept mobile orders.

00:01:15.529 --> 00:01:17.820
I never know when that next
craving is going to strike,

00:01:17.820 --> 00:01:21.000
but when it does,
I'm fully prepared.

00:01:21.000 --> 00:01:23.180
Travel is becoming
more efficient.

00:01:23.180 --> 00:01:26.460
Companies like HotelTonight,
AirBnB, and Expedia

00:01:26.460 --> 00:01:29.090
are enabling travelers
to book on the go.

00:01:29.090 --> 00:01:31.990
And by enabling last minute
purchasing and filling

00:01:31.990 --> 00:01:33.930
mobile consumer
needs, they can help

00:01:33.930 --> 00:01:37.120
reduce the vacancy
rates of businesses.

00:01:37.120 --> 00:01:39.880
Lastly, we're starting to
see this internet of things

00:01:39.880 --> 00:01:40.980
taking shape.

00:01:40.980 --> 00:01:43.890
New experiences
powered by the web.

00:01:43.890 --> 00:01:45.530
Smart parking meters.

00:01:45.530 --> 00:01:48.360
Why do you need to go back
to the meter to add time

00:01:48.360 --> 00:01:50.450
or to figure out how
much time is left?

00:01:50.450 --> 00:01:51.890
Well, you don't.

00:01:51.890 --> 00:01:53.730
You can do that from your phone.

00:01:53.730 --> 00:01:56.040
And these meter apps
should do other things too,

00:01:56.040 --> 00:01:58.050
like tell you where
you parked and how

00:01:58.050 --> 00:02:00.120
to walk back to your car.

00:02:00.120 --> 00:02:02.700
And when mobile devices
integrate with cars,

00:02:02.700 --> 00:02:05.350
you should see even
more interaction.

00:02:05.350 --> 00:02:08.820
Imagine seeing all of the open
parking spots on your car's

00:02:08.820 --> 00:02:12.640
navigation screen,
wouldn't that be awesome?

00:02:12.640 --> 00:02:15.690
With Zipcar, City
CarShare, or iDrive

00:02:15.690 --> 00:02:18.840
you can find and reserve a
car rental from your phone.

00:02:18.840 --> 00:02:21.700
Whenever you need a car,
you can find one around you

00:02:21.700 --> 00:02:23.120
and book it.

00:02:23.120 --> 00:02:26.390
These services provide an
amazing amount of freedom.

00:02:26.390 --> 00:02:29.420
Developers like you are
thinking up of and building

00:02:29.420 --> 00:02:31.080
the apps that change
the way that we

00:02:31.080 --> 00:02:32.610
interact with the world.

00:02:32.610 --> 00:02:35.800
All powered by the
smart, contextual devices

00:02:35.800 --> 00:02:37.210
in our pockets.

00:02:37.210 --> 00:02:41.170
And Instant Buy makes payments
for these things seamless.

00:02:41.170 --> 00:02:43.450
If you're developing an app
that sells physical goods

00:02:43.450 --> 00:02:47.610
or services, you need to
integrate Instant Buy.

00:02:47.610 --> 00:02:50.020
Also, like many
things Google, it's

00:02:50.020 --> 00:02:52.760
free, so why wouldn't
you integrate?

00:02:52.760 --> 00:02:56.050
You only need to pay for
your payment processor.

00:02:56.050 --> 00:02:58.690
So how does it
simplify purchasing?

00:02:58.690 --> 00:03:03.710
Well, as many users know, check
out on the phone is a pain.

00:03:03.710 --> 00:03:06.070
And as many developers
know, this pain

00:03:06.070 --> 00:03:08.790
can cause a huge
conversion drop-off.

00:03:08.790 --> 00:03:12.520
Here's one example, I have
to type in my name, my street

00:03:12.520 --> 00:03:16.970
address, my zip, my city, my
state, and my phone number just

00:03:16.970 --> 00:03:18.260
to start.

00:03:18.260 --> 00:03:20.405
Then I get to open
my wallet, I have

00:03:20.405 --> 00:03:23.770
to get out my credit card,
type in the 16 digits,

00:03:23.770 --> 00:03:28.210
CVV, expiration, and if I have
a separate billing address,

00:03:28.210 --> 00:03:31.810
I pretty much just give up
and go buy it on Amazon.

00:03:31.810 --> 00:03:35.460
Every additional field requested
is an opportunity for me

00:03:35.460 --> 00:03:38.845
to hit the Home button and do
something else like play Candy

00:03:38.845 --> 00:03:40.140
Crush.

00:03:40.140 --> 00:03:42.502
And for every app that
I want to purchase from,

00:03:42.502 --> 00:03:43.960
and need to go
through this tedious

00:03:43.960 --> 00:03:48.540
process over and
over and over again.

00:03:48.540 --> 00:03:52.180
To improve this user experience
and create a seamless purchase

00:03:52.180 --> 00:03:55.510
flow, Instant Buy
uses Google Wallet.

00:03:55.510 --> 00:03:59.080
Wallet stores the user's
payment credentials in the Cloud

00:03:59.080 --> 00:04:01.520
and makes them
accessible to developers.

00:04:01.520 --> 00:04:04.040
This means that any one who's
purchased an item on a Google

00:04:04.040 --> 00:04:07.790
property such as Play,
YouTube, Drive, or Music,

00:04:07.790 --> 00:04:10.550
or purchasing an app that's
integrated within that

00:04:10.550 --> 00:04:13.660
billing-- such as Clash
of Clans, Candy Crush,

00:04:13.660 --> 00:04:18.040
or Pandora-- or purchase an app
that's integrated with Instant

00:04:18.040 --> 00:04:22.330
Buy-- such as Uber, Eat24,
Domino's-- already have

00:04:22.330 --> 00:04:24.940
their credentials stored
with Google Wallet.

00:04:24.940 --> 00:04:27.920
That's a lot of users.

00:04:27.920 --> 00:04:30.320
So instead of type, type,
type, type, type, type,

00:04:30.320 --> 00:04:33.180
type, with Instant
Buy users can just

00:04:33.180 --> 00:04:37.110
click, click, click, and buy.

00:04:37.110 --> 00:04:39.390
Google generates a
one-time use credit card

00:04:39.390 --> 00:04:42.710
that's backed by the customer's
stored payment credentials.

00:04:42.710 --> 00:04:45.560
This one-time card and the
customer's billing information

00:04:45.560 --> 00:04:48.480
is then passed to your app and
you can feed the credit card

00:04:48.480 --> 00:04:50.490
number into your
existing purchase flow

00:04:50.490 --> 00:04:53.680
and process the order just
like a regular credit card

00:04:53.680 --> 00:04:54.780
transaction.

00:04:54.780 --> 00:04:56.815
What this means is that
consumers experience

00:04:56.815 --> 00:05:01.150
a seamless purchase with
credentials secured by Google

00:05:01.150 --> 00:05:02.690
and merchants can
add Instant Buy

00:05:02.690 --> 00:05:06.040
without changing any existing
payment processing code.

00:05:06.040 --> 00:05:08.520
And did I mention it's free?

00:05:08.520 --> 00:05:11.987
So I'm assuming that you want
to learn more about integration,

00:05:11.987 --> 00:05:14.070
so let's walk through some
of the high level steps

00:05:14.070 --> 00:05:17.150
to integrate Instant
Buy on Android.

00:05:17.150 --> 00:05:19.140
First you need to
get credentials.

00:05:19.140 --> 00:05:22.110
For testing purposes, you can
use a Google Wallet sandbox

00:05:22.110 --> 00:05:22.637
account.

00:05:22.637 --> 00:05:24.053
For a production
account, you need

00:05:24.053 --> 00:05:25.844
to sign up at
getinstantbuy.withgoogle.com.

00:05:29.160 --> 00:05:32.070
The Instant Buy flow consists
of three main steps in addition

00:05:32.070 --> 00:05:35.270
to charging your order-- Masked
Wallet, Full Wallet, and Notify

00:05:35.270 --> 00:05:36.720
Transaction status.

00:05:36.720 --> 00:05:40.050
You handle charging the order
just as you normally would.

00:05:40.050 --> 00:05:43.710
Now, let's see what this looks
like in a real purchase flow.

00:05:43.710 --> 00:05:46.190
Here is your typical
shopping cart page.

00:05:46.190 --> 00:05:49.010
Selecting Buy with Google will
initiate the Masked Wallet

00:05:49.010 --> 00:05:50.120
request.

00:05:50.120 --> 00:05:52.040
The Masked Wallet
flow allows the user

00:05:52.040 --> 00:05:55.440
to choose their payment and
shipping information populated

00:05:55.440 --> 00:05:56.570
from Google Wallet.

00:05:56.570 --> 00:05:58.450
Once a user selects
their information,

00:05:58.450 --> 00:06:00.900
Instant Buy returns an
obfuscated version of it

00:06:00.900 --> 00:06:02.060
to your app.

00:06:02.060 --> 00:06:04.600
This obfuscated information
includes the last four

00:06:04.600 --> 00:06:07.491
of the user's credit card
and their billing zip.

00:06:07.491 --> 00:06:08.990
You should then use
this information

00:06:08.990 --> 00:06:11.230
to calculate shipping,
if necessary,

00:06:11.230 --> 00:06:13.770
and display their information
on the payment confirmation

00:06:13.770 --> 00:06:16.190
page for user verification.

00:06:16.190 --> 00:06:19.680
Once a customer's ready, they'll
tap to complete the order.

00:06:19.680 --> 00:06:22.500
Your confirmed order button
calls a Full Wallet request

00:06:22.500 --> 00:06:25.100
which will return the
credit card details.

00:06:25.100 --> 00:06:27.720
You can then charge a card
using your normal payment flow

00:06:27.720 --> 00:06:29.680
and show the user
your receipt page

00:06:29.680 --> 00:06:31.910
and send the transaction
status notification

00:06:31.910 --> 00:06:34.860
that the transaction
went through smoothly.

00:06:34.860 --> 00:06:38.500
Now let's take a look
at the code behind this.

00:06:38.500 --> 00:06:41.540
First, we create our
Mass Wallet request.

00:06:41.540 --> 00:06:43.280
This defines your
information that we're

00:06:43.280 --> 00:06:46.770
asking from a customer and the
estimated order information.

00:06:46.770 --> 00:06:49.360
In this specific case, we're
asking for the user's phone

00:06:49.360 --> 00:06:52.210
number, the shipping
address, but you

00:06:52.210 --> 00:06:54.130
should minimize the
request for your needs.

00:06:54.130 --> 00:06:56.296
You don't want to be asking
for the shipping address

00:06:56.296 --> 00:06:57.710
if you don't need it.

00:06:57.710 --> 00:07:00.440
Then we create and instantiate
the Wallet fragment style

00:07:00.440 --> 00:07:01.520
and options.

00:07:01.520 --> 00:07:03.115
Here it's a Buy
with Google button

00:07:03.115 --> 00:07:07.250
that's pointed towards sandbox
and uses the Holo Light theme.

00:07:07.250 --> 00:07:09.870
Finally, we initialize
a Wallet fragment.

00:07:09.870 --> 00:07:11.370
You need to use a
fragment manager

00:07:11.370 --> 00:07:13.820
to replace a holder layout
section with the Wallet

00:07:13.820 --> 00:07:14.650
fragment.

00:07:14.650 --> 00:07:18.380
This will create an add the Buy
with Google button to your app.

00:07:18.380 --> 00:07:20.480
You also need to handle
the onActivityResult

00:07:20.480 --> 00:07:22.640
to get the Mass
Wallet response which

00:07:22.640 --> 00:07:25.470
contains the obfuscated
user information.

00:07:25.470 --> 00:07:27.560
Once you have the
Mass Wallet response,

00:07:27.560 --> 00:07:29.890
you can create a Full
Wallet request object

00:07:29.890 --> 00:07:31.900
and issue the Full
Wallet request

00:07:31.900 --> 00:07:34.550
to retrieve customer
payment credentials.

00:07:34.550 --> 00:07:36.220
You can then charge
the credentials,

00:07:36.220 --> 00:07:38.230
and after charging,
notify Google

00:07:38.230 --> 00:07:39.830
of the transaction status.

00:07:39.830 --> 00:07:40.900
And that's it.

00:07:40.900 --> 00:07:42.980
It's that easy.

00:07:42.980 --> 00:07:45.060
So if you're working
on an app where

00:07:45.060 --> 00:07:47.590
users can purchase
physical goods or services,

00:07:47.590 --> 00:07:50.220
you need to integrate
Instant Buy.

00:07:50.220 --> 00:07:53.050
Integration is quick, the
user experience is seamless,

00:07:53.050 --> 00:07:54.890
and it's free.

00:07:54.890 --> 00:07:57.300
While we've only showed
Android in this video,

00:07:57.300 --> 00:08:01.340
Instant Buy also supports
the web, mobile web, and iOS.

00:08:01.340 --> 00:08:03.530
For detailed information
on integration

00:08:03.530 --> 00:08:06.000
and a step-by-step
tutorial, take a look

00:08:06.000 --> 00:08:08.060
at our developer documentation.

00:08:08.060 --> 00:08:10.700
I can't wait to
see what you build.

00:08:10.700 --> 00:08:13.730
I'm Peng Ying and
thanks for watching.

