WEBVTT
Kind: captions
Language: en

00:00:03.640 --> 00:00:05.670
PAUL IRISH: Hi, and welcome
to The Breakpoint.

00:00:05.670 --> 00:00:07.700
This time, I'm joined
by John McCutchan.

00:00:07.700 --> 00:00:08.770
JOHN MCCUTCHAN: Hey, everyone.

00:00:08.770 --> 00:00:11.470
PAUL IRISH: And we're going to
talk about remote debugging

00:00:11.470 --> 00:00:14.270
and getting a lot more insight
as far as what's going on on

00:00:14.270 --> 00:00:15.660
your mobile device.

00:00:15.660 --> 00:00:17.800
There's a lot of tools inside
of Chrome DevTools to deal

00:00:17.800 --> 00:00:20.670
with this and specifically
identify the pain points that

00:00:20.670 --> 00:00:24.970
you're having with performance
that you encounter on mobile.

00:00:24.970 --> 00:00:26.350
We're going to show a few
cool things today.

00:00:26.350 --> 00:00:30.000
We're going to show seeing the
things that are unique to

00:00:30.000 --> 00:00:32.750
mobile inside the DevTools
Timeline.

00:00:32.750 --> 00:00:34.645
We're going to cover
about:tracing and extracting

00:00:34.645 --> 00:00:39.060
one of those traces from the
phone, show off things like

00:00:39.060 --> 00:00:40.880
Continuous Paint, and
talk about why all

00:00:40.880 --> 00:00:42.030
this matters so much.

00:00:42.030 --> 00:00:42.450
Sound good?

00:00:42.450 --> 00:00:43.710
JOHN MCCUTCHAN: Yeah,
that sounds great.

00:00:43.710 --> 00:00:45.650
PAUL IRISH: All right, so first
up, we're going to dive

00:00:45.650 --> 00:00:47.700
into an app by the
"New York Times"

00:00:47.700 --> 00:00:49.130
called the Times Skimmer.

00:00:49.130 --> 00:00:51.220
And we're going to take a look
at the timeline of it.

00:00:51.220 --> 00:00:53.720
So I have this up here
on my phone.

00:00:53.720 --> 00:00:57.390
And meanwhile, I'm also
in Chrome DevTools.

00:00:57.390 --> 00:00:59.130
So I've already set this up
to do remote debugging.

00:00:59.130 --> 00:01:00.580
We'll show that in
a little bit.

00:01:00.580 --> 00:01:04.560
But I'm going to come over here
to the timeline and start

00:01:04.560 --> 00:01:06.450
a new recording.

00:01:06.450 --> 00:01:08.240
And now that I've got that
going, I'm just going to

00:01:08.240 --> 00:01:10.580
navigate to the new section
on my phone.

00:01:10.580 --> 00:01:13.665
So Times Skimmer is just going
to navigate over to--

00:01:17.070 --> 00:01:19.810
there he goes.

00:01:19.810 --> 00:01:22.560
And that's going to come in.

00:01:22.560 --> 00:01:23.870
So I got a few things
going on.

00:01:23.870 --> 00:01:28.750
That's why the phone is
a little sleepy here.

00:01:28.750 --> 00:01:30.945
But we're going to end
the recording.

00:01:30.945 --> 00:01:33.710
You can hit Command-E as
a little shortcut.

00:01:33.710 --> 00:01:35.800
And we can dive in to what's
going on here.

00:01:35.800 --> 00:01:39.746
So it looks like quite a bit.

00:01:39.746 --> 00:01:41.750
One of the things we see--

00:01:41.750 --> 00:01:46.420
this, actually, right here, so
this is a Rasterize call.

00:01:46.420 --> 00:01:51.520
And the reason why it's an
empty, hollow bar is because

00:01:51.520 --> 00:01:53.770
it happens off the
main thread.

00:01:53.770 --> 00:01:55.700
There's a lot of things on
Chrome on Android that do not

00:01:55.700 --> 00:01:57.140
happen inside the UI thread.

00:01:57.140 --> 00:01:59.770
Whereas on desktop, currently
some of them do.

00:01:59.770 --> 00:02:04.120
And this hollow bar indicates
that that is happening

00:02:04.120 --> 00:02:07.000
off-thread, which means that
this click event handler where

00:02:07.000 --> 00:02:11.250
we go into jQuery and we start
doing things, this can all be

00:02:11.250 --> 00:02:13.410
happening in parallel because
this is operating on a

00:02:13.410 --> 00:02:14.230
separate thread.

00:02:14.230 --> 00:02:16.178
JOHN MCCUTCHAN: Nice.

00:02:16.178 --> 00:02:17.150
PAUL IRISH: We go down here.

00:02:17.150 --> 00:02:18.860
We see all these paint and paint
and paint and paint and

00:02:18.860 --> 00:02:19.990
paint and paint and paint.

00:02:19.990 --> 00:02:21.700
All of them, they're very small,
and they're not taking

00:02:21.700 --> 00:02:23.300
up a lot of time.

00:02:23.300 --> 00:02:24.310
JOHN MCCUTCHAN: How long
are they taking?

00:02:24.310 --> 00:02:26.780
PAUL IRISH: Let's see.

00:02:26.780 --> 00:02:30.410
So we've got about a
millisecond each.

00:02:30.410 --> 00:02:31.220
That adds up.

00:02:31.220 --> 00:02:37.900
So we're targeting 16.6
milliseconds for 60 FPS, so at

00:02:37.900 --> 00:02:40.635
almost a millisecond
each, this is--

00:02:40.635 --> 00:02:41.640
JOHN MCCUTCHAN: It's going
to take a while.

00:02:41.640 --> 00:02:43.670
PAUL IRISH: It's going to
absorb quite a bit.

00:02:43.670 --> 00:02:45.220
So this is going to be
a little chunky.

00:02:45.220 --> 00:02:47.640
But sometimes it's hard to
identify what's going on here.

00:02:47.640 --> 00:02:51.100
So what I'm going to do is I'm
going to turn on another mode

00:02:51.100 --> 00:02:51.810
that we have.

00:02:51.810 --> 00:02:53.490
So I'm going over
to the Settings.

00:02:53.490 --> 00:02:56.760
I'm using the question mark--

00:02:56.760 --> 00:02:58.260
it's a little shortcut--
to get into Shortcuts.

00:02:58.260 --> 00:02:59.350
I go over to General.

00:02:59.350 --> 00:03:01.970
I'm going to turn on Show pane
rectangles and composited

00:03:01.970 --> 00:03:03.355
layer borders.

00:03:03.355 --> 00:03:05.020
Now, I come back.

00:03:05.020 --> 00:03:09.230
And on the phone, what we're
going to see is anything that

00:03:09.230 --> 00:03:13.000
gets painted is going to be
rendered in a red rectangle.

00:03:13.000 --> 00:03:15.340
Anything that is composited
as a layer onto the

00:03:15.340 --> 00:03:17.850
GPU has gold borders.

00:03:17.850 --> 00:03:24.335
And so this time, I'll try
recording in Timeline again.

00:03:24.335 --> 00:03:27.260
And we're going to navigate
once more.

00:03:27.260 --> 00:03:28.980
And now you see a few things.

00:03:28.980 --> 00:03:33.250
You see that there was just a
moment where there were gold

00:03:33.250 --> 00:03:38.850
borders around all the icons on
the side of the navigation.

00:03:38.850 --> 00:03:41.410
And then there was
a blink of red--

00:03:41.410 --> 00:03:43.850
red paints again.

00:03:43.850 --> 00:03:48.710
And the content is on its way.

00:03:48.710 --> 00:03:51.110
But now when we take a look
at what's going on in our

00:03:51.110 --> 00:03:57.770
Timeline, these small little
42 by 45 paints make a lot

00:03:57.770 --> 00:03:59.370
more sense.

00:03:59.370 --> 00:04:03.700
Even if I hover over them, we
see on the phone, a little

00:04:03.700 --> 00:04:07.500
blue area indicating the
dimensions of where that is.

00:04:07.500 --> 00:04:11.180
So right now, it's showing up
in the top left corner.

00:04:11.180 --> 00:04:14.410
And in about a week from now,
that'll be showing up right on

00:04:14.410 --> 00:04:16.470
the space where that
paint was done.

00:04:16.470 --> 00:04:18.890
But you're getting a good idea
of the dimensions of that

00:04:18.890 --> 00:04:21.110
paint and seeing where
it came from.

00:04:21.110 --> 00:04:23.130
JOHN MCCUTCHAN: So that means
I'll be able to, from within

00:04:23.130 --> 00:04:25.600
Timeline, hover over a paint
and see the visible

00:04:25.600 --> 00:04:26.580
region on the phone?

00:04:26.580 --> 00:04:26.830
PAUL IRISH: Exactly.

00:04:26.830 --> 00:04:26.970
Yeah.

00:04:26.970 --> 00:04:27.750
JOHN MCCUTCHAN: That's
awesome.

00:04:27.750 --> 00:04:31.140
PAUL IRISH: So not just the
duration of it, but we have a

00:04:31.140 --> 00:04:34.240
map of the location on where it
happened and the dimensions

00:04:34.240 --> 00:04:35.760
of the paint itself.

00:04:35.760 --> 00:04:37.490
And like I mentioned, there's a
small bug in location right

00:04:37.490 --> 00:04:40.320
now, but that's on
its way out.

00:04:40.320 --> 00:04:43.530
So this is pretty cool.

00:04:43.530 --> 00:04:47.070
So I'm getting a sense of not
only the full performance

00:04:47.070 --> 00:04:50.260
view, not just what's happening
in JavaScript, but

00:04:50.260 --> 00:04:52.660
all my paint costs as well,
and it can identify

00:04:52.660 --> 00:04:53.850
what's going on.

00:04:53.850 --> 00:04:57.390
And so this is a good example
here where it looks like we're

00:04:57.390 --> 00:04:58.500
parsing a bunch of HTML.

00:04:58.500 --> 00:04:59.610
It's taking a while.

00:04:59.610 --> 00:05:01.010
We're still parsing HTML.

00:05:01.010 --> 00:05:08.900
I think some JSON has come back
from this XHR, and we're

00:05:08.900 --> 00:05:11.240
now sending it through a
templating engine and piping

00:05:11.240 --> 00:05:13.360
it into the DOM.

00:05:13.360 --> 00:05:16.190
And it looks like this indicator
is telling us that

00:05:16.190 --> 00:05:19.350
we have a forced synchronous
layout as a possible

00:05:19.350 --> 00:05:20.230
performance bottleneck.

00:05:20.230 --> 00:05:22.910
And why is it forced?

00:05:22.910 --> 00:05:25.080
It's happening inside here.

00:05:25.080 --> 00:05:27.160
JOHN MCCUTCHAN: So is
this the call stack?

00:05:27.160 --> 00:05:29.600
PAUL IRISH: Yeah, so this is the
call stack of what led up

00:05:29.600 --> 00:05:31.070
to the layout being forced.

00:05:31.070 --> 00:05:33.880
JOHN MCCUTCHAN: And so this is
where the layout was forced in

00:05:33.880 --> 00:05:35.136
the bottom left.

00:05:35.136 --> 00:05:35.490
PAUL IRISH: Yeah.

00:05:35.490 --> 00:05:36.230
JOHN MCCUTCHAN: OK, great.

00:05:36.230 --> 00:05:40.620
PAUL IRISH: So I can click in
here and identify that--

00:05:40.620 --> 00:05:44.120
so, inside app source, it's
this guy right here.

00:05:44.120 --> 00:05:47.410
This.offsetHeight is a known
property that forces layout.

00:05:47.410 --> 00:05:51.590
The browser has figure out the
new geometry of the page.

00:05:51.590 --> 00:05:54.030
And so I know where
this is happening.

00:05:54.030 --> 00:05:56.810
And then if I want to get a good
idea of why we needed to

00:05:56.810 --> 00:06:00.330
even call that, we can watch
this call stack and see that

00:06:00.330 --> 00:06:01.660
we were in mark, notify.

00:06:01.660 --> 00:06:04.250
We were getting JSON
back here.

00:06:04.250 --> 00:06:08.850
But we needed to do some work
in order to figure this out.

00:06:08.850 --> 00:06:10.360
JOHN MCCUTCHAN: That's
really cool.

00:06:10.360 --> 00:06:13.790
To be able to see on the
Timeline that there's a really

00:06:13.790 --> 00:06:15.780
expensive layout operation going
on and then just jump

00:06:15.780 --> 00:06:19.130
right to the call stack, that
gets you right to the source

00:06:19.130 --> 00:06:19.610
of the problem.

00:06:19.610 --> 00:06:20.040
PAUL IRISH: Right.

00:06:20.040 --> 00:06:24.160
And so then the next thing best
to do at this point is to

00:06:24.160 --> 00:06:25.550
eradicate this.

00:06:25.550 --> 00:06:28.530
Basically, anytime you see this
little indicator, we want

00:06:28.530 --> 00:06:30.090
to get rid of it.

00:06:30.090 --> 00:06:33.690
And so in this case, if we can
avoid hitting offset top at

00:06:33.690 --> 00:06:36.580
this point-- maybe we can ask
for offset top earlier in the

00:06:36.580 --> 00:06:40.790
application, cache that, and
then just apply that value

00:06:40.790 --> 00:06:43.260
inside here so that we don't
have to go ask the DOM, hey,

00:06:43.260 --> 00:06:46.130
what's the news story in the
geometry of the page?

00:06:46.130 --> 00:06:49.530
That would mean that we don't
have this big jump between

00:06:49.530 --> 00:06:52.464
these operations, and then it
would be a lot more snappy.

00:06:52.464 --> 00:06:53.390
JOHN MCCUTCHAN: That's cool.

00:06:53.390 --> 00:06:55.900
PAUL IRISH: Yeah, so that's a
very quick summary of the

00:06:55.900 --> 00:07:00.680
power of the DevTools Timeline
on mobile and getting a good

00:07:00.680 --> 00:07:01.890
sense of what's actually
happening.

00:07:01.890 --> 00:07:03.970
There's things that I didn't
show as far as image decodes

00:07:03.970 --> 00:07:04.960
and image resizes.

00:07:04.960 --> 00:07:10.080
If you've seen these times on
desktop, you can expect them

00:07:10.080 --> 00:07:15.450
to take, on mobile, around 6 to
10 times the duration that

00:07:15.450 --> 00:07:16.610
you're used to on desktop.

00:07:16.610 --> 00:07:20.160
So all those costs are much more
expensive on the mobile.

00:07:20.160 --> 00:07:22.710
JOHN MCCUTCHAN: So that means is
if your site is running in,

00:07:22.710 --> 00:07:28.180
say, maybe 10 milliseconds per
update frame on desktop, then

00:07:28.180 --> 00:07:30.650
you could expect 100
milliseconds, maybe?

00:07:30.650 --> 00:07:31.490
PAUL IRISH: Pretty much.

00:07:31.490 --> 00:07:33.820
JOHN MCCUTCHAN: That's
a big difference.

00:07:33.820 --> 00:07:34.940
PAUL IRISH: It hurts.

00:07:34.940 --> 00:07:36.950
JOHN MCCUTCHAN: So the most
exciting thing for me about

00:07:36.950 --> 00:07:41.350
DevTools on mobile is that
it's the exact same as

00:07:41.350 --> 00:07:42.880
DevTools on desktop.

00:07:42.880 --> 00:07:47.430
So everything that you learn in
using the tools on desktop

00:07:47.430 --> 00:07:49.460
is applicable on
mobile as well.

00:07:49.460 --> 00:07:52.070
It looks like we just lost
our connection, but we'll

00:07:52.070 --> 00:07:53.498
reestablish that.

00:07:53.498 --> 00:07:55.370
PAUL IRISH: We should
have that back.

00:07:55.370 --> 00:07:55.838
There we go.

00:07:55.838 --> 00:07:57.450
JOHN MCCUTCHAN: There we go.

00:07:57.450 --> 00:07:57.950
PAUL IRISH: Cool.

00:07:57.950 --> 00:08:05.480
So we'll take out these
settings for now.

00:08:05.480 --> 00:08:05.850
Yeah.

00:08:05.850 --> 00:08:11.640
So do you want to show a little
bit more about:tracing?

00:08:11.640 --> 00:08:12.130
JOHN MCCUTCHAN: Yeah.

00:08:12.130 --> 00:08:12.590
Yeah.

00:08:12.590 --> 00:08:15.420
So for those of you aren't
familiar with about:tracing,

00:08:15.420 --> 00:08:19.850
this is a real low-level staring
at the guts of what

00:08:19.850 --> 00:08:22.970
Chrome is doing when it's
rendering your site.

00:08:22.970 --> 00:08:26.080
And so the way you access this
on the desktop is you navigate

00:08:26.080 --> 00:08:27.450
to about:tracing.

00:08:27.450 --> 00:08:29.510
And you can start a capture,
and it captures it.

00:08:29.510 --> 00:08:32.409
But since this is a mobile, it's
a little bit different.

00:08:32.409 --> 00:08:35.940
And I've been maintaining
a Python script

00:08:35.940 --> 00:08:37.370
that activates it.

00:08:37.370 --> 00:08:39.659
And so let me just
run it right now.

00:08:39.659 --> 00:08:42.030
And when I do this, Paul, could
you just navigate a

00:08:42.030 --> 00:08:43.040
little bit on the device?

00:08:43.040 --> 00:08:44.610
PAUL IRISH: Sure.

00:08:44.610 --> 00:08:45.570
JOHN MCCUTCHAN: OK,
are we ready?

00:08:45.570 --> 00:08:46.820
PAUL IRISH: Ready.

00:08:49.470 --> 00:08:51.120
JOHN MCCUTCHAN: So there's a
little balloon pop up, and

00:08:51.120 --> 00:08:55.200
Paul's going to navigate,
maybe scroll around.

00:08:57.728 --> 00:08:59.084
How are we doing?

00:08:59.084 --> 00:08:59.790
PAUL IRISH: There we go.

00:08:59.790 --> 00:09:02.950
We've got both things, scrolling
and navigating, so

00:09:02.950 --> 00:09:03.210
we're good.

00:09:03.210 --> 00:09:03.580
JOHN MCCUTCHAN: All right, so
we're going to press Enter

00:09:03.580 --> 00:09:06.260
there, and the balloon will pop
up on the mobile device

00:09:06.260 --> 00:09:09.700
saying that the capture is
complete and that it's going

00:09:09.700 --> 00:09:10.950
to copy it over to
the desktop.

00:09:17.000 --> 00:09:18.800
So I'll just load
up chrome.json.

00:09:18.800 --> 00:09:22.730
Wow, 16 megs-- a lot
of data in there.

00:09:22.730 --> 00:09:25.231
This is pretty low level.

00:09:25.231 --> 00:09:28.390
Oh, now this is starting
to look interesting.

00:09:28.390 --> 00:09:30.680
So we have some animations
here, stacked

00:09:30.680 --> 00:09:31.540
on top of each other.

00:09:31.540 --> 00:09:35.480
PAUL IRISH: Are these keyframe
CSS animation?

00:09:35.480 --> 00:09:37.730
JOHN MCCUTCHAN: There's comps
that are animation.

00:09:37.730 --> 00:09:41.950
So let's see here.

00:09:41.950 --> 00:09:44.150
We'll zoom in.

00:09:44.150 --> 00:09:47.160
So there's the VSync tick, so
this is kicking off the draw.

00:09:47.160 --> 00:09:51.020
And now, here you can see that
we're preparing to draw.

00:09:51.020 --> 00:09:52.000
We're doing the layout.

00:09:52.000 --> 00:09:54.290
Everything is being updated.

00:09:54.290 --> 00:09:57.160
When you really need to get this
low-level, nothing beats

00:09:57.160 --> 00:09:59.300
Chrome://tracing.

00:09:59.300 --> 00:10:01.840
And it works just like it does
on the desktop once you've

00:10:01.840 --> 00:10:02.600
captured the data.

00:10:02.600 --> 00:10:05.170
PAUL IRISH: And actually, you
have a whole other GDL session

00:10:05.170 --> 00:10:08.040
on this tool, what
you can learn.

00:10:08.040 --> 00:10:12.510
JOHN MCCUTCHAN: Yeah, I did a
GDL on Make the Web Faster in

00:10:12.510 --> 00:10:14.650
December of last year,
so check it out.

00:10:14.650 --> 00:10:17.760
I go into a lot of detail on the
value of this tool and how

00:10:17.760 --> 00:10:20.000
you can use it to actually
instrument your JavaScript

00:10:20.000 --> 00:10:21.600
code on top of just
instrumenting the

00:10:21.600 --> 00:10:23.600
internals of Chrome.

00:10:23.600 --> 00:10:24.880
I highly recommend it.

00:10:24.880 --> 00:10:25.800
PAUL IRISH: It's good.

00:10:25.800 --> 00:10:26.930
You look at this interface,
and it's

00:10:26.930 --> 00:10:29.910
pretty daunting at first.

00:10:29.910 --> 00:10:32.490
And there's a fantastic amount
of information there.

00:10:32.490 --> 00:10:35.530
And once you get used to reading
it, you can extract

00:10:35.530 --> 00:10:36.830
some really useful
insights in it.

00:10:36.830 --> 00:10:37.330
JOHN MCCUTCHAN: Yeah.

00:10:37.330 --> 00:10:40.070
To give you an idea, we spent
about an hour and a half

00:10:40.070 --> 00:10:44.380
discussing Chrome://tracing in
this Make the Web Faster GDL,

00:10:44.380 --> 00:10:46.910
and we're still just scratching
the surface.

00:10:46.910 --> 00:10:50.600
So this is a tool for experts,
but you need it to truly

00:10:50.600 --> 00:10:53.570
understand what's happening.

00:10:53.570 --> 00:10:56.240
PAUL IRISH: And one last thing
we'll show you is that there's

00:10:56.240 --> 00:10:59.530
a new feature that we're working
on that we want to

00:10:59.530 --> 00:11:00.730
show off that's called
continuous

00:11:00.730 --> 00:11:02.920
page repainting mode.

00:11:02.920 --> 00:11:05.420
And so we're going to come
back to the DevTools, and

00:11:05.420 --> 00:11:08.500
we're looking at one of the
pages inside Times Skimmer.

00:11:08.500 --> 00:11:10.890
So we're going to turn on
continuous page repainting.

00:11:10.890 --> 00:11:13.850
So what this does is it
basically says, browser, just

00:11:13.850 --> 00:11:15.940
continue to paint, again
and again and again.

00:11:15.940 --> 00:11:19.140
I know that you've painted it
once, but paint it over

00:11:19.140 --> 00:11:22.160
because I am going
to do some work.

00:11:22.160 --> 00:11:23.960
I'm going to play around
a little bit.

00:11:23.960 --> 00:11:27.920
So once we turn it on, we have
the little feedback on how

00:11:27.920 --> 00:11:30.740
long our paints are taking
on the phone.

00:11:30.740 --> 00:11:34.000
And then we can go inside of
the DOM and start to play

00:11:34.000 --> 00:11:34.860
around a little bit.

00:11:34.860 --> 00:11:37.480
So in this case, I'm
going to go in--

00:11:37.480 --> 00:11:37.810
JOHN MCCUTCHAN: So, hold on.

00:11:37.810 --> 00:11:39.730
Before you do that, why don't
we talk about the graph,

00:11:39.730 --> 00:11:42.460
actually, that is partially
visible in the upper

00:11:42.460 --> 00:11:44.230
right-hand corner of
the mobile device?

00:11:44.230 --> 00:11:47.730
So when mobile painting is
turned on, you get a min and a

00:11:47.730 --> 00:11:51.910
max paint time and the previous
frame's paint time

00:11:51.910 --> 00:11:53.530
and then a graph of
all of this data.

00:11:53.530 --> 00:11:56.000
So it's really interesting
to see.

00:11:56.000 --> 00:11:59.750
And the workflow here is you can
toggle on and off elements

00:11:59.750 --> 00:12:02.830
and toggle on and off styles,
and you can try and determine

00:12:02.830 --> 00:12:05.940
the cost of painting a specific
element with its

00:12:05.940 --> 00:12:09.590
style, which Paul's going to
demonstrate right now.

00:12:09.590 --> 00:12:11.450
PAUL IRISH: First thing, I'm
just going to bring us back to

00:12:11.450 --> 00:12:13.140
the page we were looking at.

00:12:13.140 --> 00:12:14.390
JOHN MCCUTCHAN: Cool.

00:12:16.730 --> 00:12:18.020
There we go.

00:12:18.020 --> 00:12:20.730
PAUL IRISH: All right.

00:12:20.730 --> 00:12:24.860
So now that we're back here,
one thing that we can

00:12:24.860 --> 00:12:28.280
experiment with in continuous
page repainting is taking

00:12:28.280 --> 00:12:29.210
things off.

00:12:29.210 --> 00:12:30.590
So there's a H shortcut.

00:12:30.590 --> 00:12:32.550
Now, you can use it all
the time if you just

00:12:32.550 --> 00:12:34.770
want to hide something.

00:12:34.770 --> 00:12:39.890
So just hit H, and it will
hide that DOM node.

00:12:39.890 --> 00:12:44.450
And so in page repainting mode,
what we're looking for

00:12:44.450 --> 00:12:50.980
is what effect not painting that
element at all has on the

00:12:50.980 --> 00:12:52.250
time to repaint.

00:12:52.250 --> 00:12:56.370
So if it has a big, significant
drop, then we know

00:12:56.370 --> 00:12:59.260
that this element and its
children are currently

00:12:59.260 --> 00:13:03.630
contributing quite a bit to
the cost of painting.

00:13:03.630 --> 00:13:04.900
JOHN MCCUTCHAN: Yeah,
that's exactly it.

00:13:04.900 --> 00:13:07.120
You're playing the
subtraction game.

00:13:07.120 --> 00:13:11.270
If I turn this element off or
disable a style on it, the

00:13:11.270 --> 00:13:14.530
time goes from being 100
milliseconds to 90

00:13:14.530 --> 00:13:15.230
milliseconds.

00:13:15.230 --> 00:13:18.590
So you can conclude that
that element cost 10.

00:13:18.590 --> 00:13:21.080
PAUL IRISH: And then once we
find out the elements that are

00:13:21.080 --> 00:13:25.370
costly, we can start working
through our styles in here in

00:13:25.370 --> 00:13:29.250
the DevTools, toggle them on
and off, and identify what

00:13:29.250 --> 00:13:31.080
parts of things are
contributing.

00:13:31.080 --> 00:13:34.570
And sometimes just images will
be contributing, like a large

00:13:34.570 --> 00:13:36.980
image will have a pretty
significant paint cost.

00:13:36.980 --> 00:13:39.850
Other times, you'll be finding
box shadow and border radius,

00:13:39.850 --> 00:13:44.100
and maybe some other CSS styles
will be contributing.

00:13:44.100 --> 00:13:46.980
But here, you'll finally get an
idea as far as if you are

00:13:46.980 --> 00:13:52.140
seeing large paint times in your
Timeline, we can identify

00:13:52.140 --> 00:13:55.852
what exactly is really
contributing to those.

00:13:55.852 --> 00:13:58.950
JOHN MCCUTCHAN: Yeah, just like
we were able to find the

00:13:58.950 --> 00:14:02.940
call stack for the expensive
forced layout, you're

00:14:02.940 --> 00:14:05.930
searching in that same sense for
the needle in the haystack

00:14:05.930 --> 00:14:08.150
of why is paint so expensive?

00:14:08.150 --> 00:14:11.550
And you can determine that just
by subtracting the paint

00:14:11.550 --> 00:14:13.180
time for each element.

00:14:13.180 --> 00:14:15.600
And you'll find one element
or a few elements that are

00:14:15.600 --> 00:14:17.170
particularly expensive.

00:14:17.170 --> 00:14:18.520
PAUL IRISH: Right.

00:14:18.520 --> 00:14:21.380
I think the last thing we should
add here is why this is

00:14:21.380 --> 00:14:22.640
all important.

00:14:22.640 --> 00:14:24.740
One of the big things that comes
up again and again when

00:14:24.740 --> 00:14:30.670
it comes to performance and
mobile is that a lot of times,

00:14:30.670 --> 00:14:33.550
the mobile web experience isn't
as fast as it could be.

00:14:33.550 --> 00:14:36.030
So this is really critical
to understanding, why?

00:14:36.030 --> 00:14:36.940
What is going on?

00:14:36.940 --> 00:14:39.130
It might not just be your
JavaScript is taking slow.

00:14:39.130 --> 00:14:40.870
It might be things like paint.

00:14:40.870 --> 00:14:42.930
But you really want to get
an idea of what are your

00:14:42.930 --> 00:14:45.940
bottlenecks, so you
can adjust them.

00:14:45.940 --> 00:14:47.700
The speed of scrolling is
something that we didn't

00:14:47.700 --> 00:14:49.240
really touch on too much.

00:14:49.240 --> 00:14:52.740
But you can also test this
inside the DevTools by going

00:14:52.740 --> 00:14:56.080
into settings and trying
out the FPS meter.

00:14:56.080 --> 00:14:58.040
So this is similar to continuous
page repainting.

00:14:58.040 --> 00:15:02.870
It gives you a little meter on
what the frames per second is,

00:15:02.870 --> 00:15:05.810
and I can scroll the page
and identify how

00:15:05.810 --> 00:15:07.520
well things are doing.

00:15:07.520 --> 00:15:09.880
Maybe something on the page
is really affecting

00:15:09.880 --> 00:15:12.140
my scrolling speed.

00:15:12.140 --> 00:15:16.330
But knowing that your page can
scroll fast means a huge

00:15:16.330 --> 00:15:19.865
difference to your users when
they're using your site or

00:15:19.865 --> 00:15:20.810
application.

00:15:20.810 --> 00:15:23.420
JOHN MCCUTCHAN: What was the
quote from Facebook where they

00:15:23.420 --> 00:15:27.160
went down from 60 frames per
second to 30 frames per second

00:15:27.160 --> 00:15:30.440
and saw a significant
drop in their users?

00:15:30.440 --> 00:15:30.820
PAUL IRISH: Yeah.

00:15:30.820 --> 00:15:36.800
So having a less fidelity
scrolling experience really

00:15:36.800 --> 00:15:40.610
hurts the engagement that
people-- like Facebook, who

00:15:40.610 --> 00:15:42.410
ran an experiment and
got data on this--

00:15:42.410 --> 00:15:43.100
have been seeing.

00:15:43.100 --> 00:15:48.070
So targeting your scrolling
performance and your start-up

00:15:48.070 --> 00:15:51.880
performance on mobile is really
key to holding on to

00:15:51.880 --> 00:15:53.230
your user's attention
and engagement.

00:15:53.230 --> 00:15:53.930
JOHN MCCUTCHAN: Yeah,
and you hit on a

00:15:53.930 --> 00:15:54.810
really important point.

00:15:54.810 --> 00:15:56.510
It's very important when
doing performance

00:15:56.510 --> 00:15:57.940
work to measure first.

00:15:57.940 --> 00:16:00.720
You always want to measure and
determine, oh, it wasn't the

00:16:00.720 --> 00:16:01.740
scripts that were slow.

00:16:01.740 --> 00:16:05.330
It was actually this image
decode or a certain paint.

00:16:05.330 --> 00:16:09.790
Once you have that data, you can
take the right action to

00:16:09.790 --> 00:16:10.830
make the biggest impact.

00:16:10.830 --> 00:16:12.170
PAUL IRISH: Yeah.

00:16:12.170 --> 00:16:17.860
Lastly, we started this up
really fast, so we didn't show

00:16:17.860 --> 00:16:21.300
off exactly how we got remote
debugging started.

00:16:21.300 --> 00:16:24.450
If you just look up remote
debugging in Chrome DevTools,

00:16:24.450 --> 00:16:27.670
this is a recently released
article all about

00:16:27.670 --> 00:16:29.810
how to get set up.

00:16:29.810 --> 00:16:33.676
Right now, so you'll have to
grab the Android SDK, and

00:16:33.676 --> 00:16:36.360
you're going to use a little
tool called ADB that connects

00:16:36.360 --> 00:16:39.620
your phone to your machine
over USB and sets

00:16:39.620 --> 00:16:42.230
up that data transfer.

00:16:42.230 --> 00:16:43.470
But the instructions
are all here.

00:16:43.470 --> 00:16:45.290
It's pretty straightforward
to get started there.

00:16:45.290 --> 00:16:46.360
JOHN MCCUTCHAN: Yeah, the
instructions are on

00:16:46.360 --> 00:16:50.940
developers.google.com, and I
have an article on HTML5

00:16:50.940 --> 00:16:53.330
Rocks, which also goes over
continuous paint mode on

00:16:53.330 --> 00:16:55.340
mobile and getting your
device connected.

00:16:55.340 --> 00:16:56.580
PAUL IRISH: Is that out?

00:16:56.580 --> 00:16:58.550
JOHN MCCUTCHAN: It's coming
out next Tuesday.

00:16:58.550 --> 00:16:59.120
PAUL IRISH: Nice.

00:16:59.120 --> 00:17:01.420
JOHN MCCUTCHAN: So by the
time you watch this--

00:17:01.420 --> 00:17:05.290
PAUL IRISH: So check out
html5rocks.com, covering

00:17:05.290 --> 00:17:06.740
pretty much all the stuff
that we just talked

00:17:06.740 --> 00:17:08.300
about in this episode--

00:17:08.300 --> 00:17:11.890
how to get set up and how to
identify and improve the

00:17:11.890 --> 00:17:14.020
performance on your mobile web

00:17:14.020 --> 00:17:15.430
applications and mobile websites.

00:17:15.430 --> 00:17:16.322
JOHN MCCUTCHAN: Yeah.

00:17:16.322 --> 00:17:17.369
PAUL IRISH: Cool.

00:17:17.369 --> 00:17:18.910
Thanks very much for
watching, guys.

00:17:18.910 --> 00:17:19.210
JOHN MCCUTCHAN: Thanks.

00:17:19.210 --> 00:17:20.460
PAUL IRISH: Cheers.

00:17:27.610 --> 00:17:29.518
[MUSIC PLAYING]

