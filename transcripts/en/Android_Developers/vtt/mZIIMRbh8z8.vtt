WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:01.710
IGNACIO MONEREO: Hi, everyone.

00:00:01.710 --> 00:00:03.450
Welcome.

00:00:03.450 --> 00:00:05.200
I think I know half
of the audience here.

00:00:05.200 --> 00:00:07.530
So please raise your hand
if you already know me,

00:00:07.530 --> 00:00:08.970
because it's kind of like, OK.

00:00:08.970 --> 00:00:11.250
Perfect this is the
perfect case scenario

00:00:11.250 --> 00:00:13.380
where you have a friendly
audience with you.

00:00:13.380 --> 00:00:15.600
So please laugh
with all my jokes.

00:00:15.600 --> 00:00:18.390
And make very, very
simple questions.

00:00:18.390 --> 00:00:20.810
So for those who don't
know me, welcome.

00:00:20.810 --> 00:00:22.380
My name is Ignacio, or Nacho.

00:00:22.380 --> 00:00:25.920
I am in the Google Play team,
business development manager.

00:00:25.920 --> 00:00:27.930
I'm based in London
and I'm working

00:00:27.930 --> 00:00:30.550
with MOBA game developers.

00:00:30.550 --> 00:00:33.030
So today we're going
to talk about lifetime.

00:00:33.030 --> 00:00:34.530
So thanks a lot for
coming because I

00:00:34.530 --> 00:00:35.988
know there's very
high competition,

00:00:35.988 --> 00:00:37.910
very tough competition,
and very good sessions

00:00:37.910 --> 00:00:39.327
at this very same time.

00:00:39.327 --> 00:00:41.160
I think my colleagues
are doing a great job,

00:00:41.160 --> 00:00:43.350
so the fact that
you're here, I'll

00:00:43.350 --> 00:00:46.150
try to make the most
out of the session.

00:00:46.150 --> 00:00:48.510
And the session is going
to last for 25 minutes

00:00:48.510 --> 00:00:50.500
and it's going to be recorded.

00:00:50.500 --> 00:00:53.400
So you can watch it later on.

00:00:53.400 --> 00:00:55.920
This is the agenda
and we're just

00:00:55.920 --> 00:00:57.260
going to cover some points.

00:00:57.260 --> 00:01:00.300
And I don't have the
answer to the lifetime

00:01:00.300 --> 00:01:01.600
value on the equation.

00:01:01.600 --> 00:01:04.170
And let's say that the
million dollar question, which

00:01:04.170 --> 00:01:07.440
is how we make money, but I
hope that the session today will

00:01:07.440 --> 00:01:10.020
help you to kind of like
understand this topic.

00:01:10.020 --> 00:01:13.040
And hopefully take some
decisions in the future.

00:01:13.040 --> 00:01:14.850
And it's useful for you.

00:01:14.850 --> 00:01:18.030
So the first question is
like, why LTV and why everyone

00:01:18.030 --> 00:01:20.290
is talking about lifetime value.

00:01:20.290 --> 00:01:22.000
So I'm not going to
spend too much time.

00:01:22.000 --> 00:01:24.744
I think we all know
that these days

00:01:24.744 --> 00:01:26.160
everyone is talking
about lifetime

00:01:26.160 --> 00:01:27.880
value for a couple of reasons.

00:01:27.880 --> 00:01:31.650
First, well mostly
the technology

00:01:31.650 --> 00:01:34.330
is enabling to
track more things,

00:01:34.330 --> 00:01:36.780
and we can
[INAUDIBLE] much more,

00:01:36.780 --> 00:01:40.080
more behaviors, rather
than just installs.

00:01:40.080 --> 00:01:42.470
We also see that
in game [INAUDIBLE]

00:01:42.470 --> 00:01:45.000
analytics and it's
becoming more relevant.

00:01:45.000 --> 00:01:47.670
And probably you have
all data analysts

00:01:47.670 --> 00:01:50.670
within your team
or your company.

00:01:50.670 --> 00:01:53.040
But also like the
whole ecosystem,

00:01:53.040 --> 00:01:56.010
that graph over there, we've
seen it a number of times,

00:01:56.010 --> 00:01:59.250
already, where revenues
and usage are increasing.

00:01:59.250 --> 00:02:02.370
But install seems
to be stagnating,

00:02:02.370 --> 00:02:04.590
or at least stabilizing,
which means that we need

00:02:04.590 --> 00:02:06.840
to make more out of our users.

00:02:06.840 --> 00:02:09.000
And then we need to think
about other metrics.

00:02:09.000 --> 00:02:11.130
Maybe metrics that--
before they didn't

00:02:11.130 --> 00:02:15.510
have so much relevance, such as
like long-term retentions, day

00:02:15.510 --> 00:02:17.640
90 or day 180.

00:02:17.640 --> 00:02:20.070
They become more relevant
nowadays, and also,

00:02:20.070 --> 00:02:21.700
lifetime value.

00:02:21.700 --> 00:02:24.840
So just to get on the
same page, let's think

00:02:24.840 --> 00:02:26.460
about what lifetime value is.

00:02:26.460 --> 00:02:28.680
Because I think we all
agree that lifetime value

00:02:28.680 --> 00:02:30.630
is kind of like the
expected revenues

00:02:30.630 --> 00:02:33.004
that our users are
going to generate

00:02:33.004 --> 00:02:34.170
in the lifetime of the game.

00:02:34.170 --> 00:02:37.470
However, we do not agree
in many other things.

00:02:37.470 --> 00:02:40.140
For example, the way to
calculate lifetime value,

00:02:40.140 --> 00:02:41.040
nobody agrees.

00:02:41.040 --> 00:02:43.620
Everyone has their
own custom way,

00:02:43.620 --> 00:02:45.510
and probably it's
actually right.

00:02:45.510 --> 00:02:47.940
So that's one thing that we
need to take into account when

00:02:47.940 --> 00:02:50.320
we are talking to someone
about lifetime value.

00:02:50.320 --> 00:02:52.779
It might be very different
from your calculation.

00:02:52.779 --> 00:02:53.820
A couple of other things.

00:02:53.820 --> 00:02:55.860
So for example, we
have a crystal ball

00:02:55.860 --> 00:02:57.900
illustrating this is
light, which means that we

00:02:57.900 --> 00:02:59.262
are predicting the future.

00:02:59.262 --> 00:03:01.220
And predicting the future
means that we are not

00:03:01.220 --> 00:03:02.100
going to be accurate.

00:03:02.100 --> 00:03:04.410
This is not an accurate
science, and therefore, we

00:03:04.410 --> 00:03:07.260
need to think about in terms
of like what is my error

00:03:07.260 --> 00:03:08.880
or interval of confidence.

00:03:08.880 --> 00:03:11.790
And therefore,
what is going to be

00:03:11.790 --> 00:03:14.340
the range of my lifetime value?

00:03:14.340 --> 00:03:18.060
And then two last things,
which would be dynamic metric.

00:03:18.060 --> 00:03:20.340
So my lifetime value
changes over time.

00:03:20.340 --> 00:03:23.640
And this we've seen it, not
only with external factors--

00:03:23.640 --> 00:03:26.100
let's imagine that we have
a competitor launching

00:03:26.100 --> 00:03:27.060
a similar game.

00:03:27.060 --> 00:03:29.070
And then, all of the
sudden, my users fly.

00:03:29.070 --> 00:03:32.760
But also, internally, we can
affect this lifetime value by,

00:03:32.760 --> 00:03:35.280
I don't know, releasing
new functionalities

00:03:35.280 --> 00:03:37.240
or new live ops, which
are going to help

00:03:37.240 --> 00:03:39.129
to increase it, hopefully.

00:03:39.129 --> 00:03:40.420
And then, last one is a metric.

00:03:40.420 --> 00:03:42.669
So it doesn't mean that by
having a very high lifetime

00:03:42.669 --> 00:03:45.360
value, you're going
to have a string

00:03:45.360 --> 00:03:48.104
and competitive
advantage over the rest.

00:03:48.104 --> 00:03:49.770
And therefore, we
need to think about it

00:03:49.770 --> 00:03:52.050
like this is just a
useful metric that

00:03:52.050 --> 00:03:53.970
is going to help us.

00:03:53.970 --> 00:03:55.470
So what are the usages?

00:03:55.470 --> 00:03:56.459
So the first--

00:03:56.459 --> 00:03:57.500
I think its clear, right?

00:03:57.500 --> 00:03:59.000
If we understand
the lifetime value,

00:03:59.000 --> 00:04:00.770
we can understand,
what are the costs?

00:04:00.770 --> 00:04:02.270
And therefore, we
can think about

00:04:02.270 --> 00:04:05.040
what is profitability
for every user?

00:04:05.040 --> 00:04:07.580
And this is very much
related to user acquisition

00:04:07.580 --> 00:04:10.070
and is being used
most of the times

00:04:10.070 --> 00:04:15.860
in terms of driving campaigns or
UA campaigns, where we actually

00:04:15.860 --> 00:04:17.390
know how much are
we going to spend,

00:04:17.390 --> 00:04:21.680
or at least what is our limit
for expenditure in campaigns.

00:04:21.680 --> 00:04:23.750
However, two other ideas--

00:04:23.750 --> 00:04:25.940
which my conversations
with developers,

00:04:25.940 --> 00:04:27.860
they haven't been
used that much--

00:04:27.860 --> 00:04:30.960
would be to think about lifetime
value also for live ops.

00:04:30.960 --> 00:04:33.380
So when we release a new
functionality, or new feature

00:04:33.380 --> 00:04:36.380
within the game, these might
have an impact in engagement,

00:04:36.380 --> 00:04:37.880
but also in monetization.

00:04:37.880 --> 00:04:40.420
So sometimes we might
see that the increase

00:04:40.420 --> 00:04:43.790
in the game in engagement
might offset the increase

00:04:43.790 --> 00:04:45.800
or [INAUDIBLE] decrease
in monetization.

00:04:45.800 --> 00:04:49.640
So the net effect of
that functionality

00:04:49.640 --> 00:04:51.200
is actually zero
for lifetime value.

00:04:51.200 --> 00:04:52.790
So you can think
about it this way.

00:04:52.790 --> 00:04:55.820
Also, for pipeline,
thinking about new games,

00:04:55.820 --> 00:04:58.530
if we start looking at this
data from the very beginning,

00:04:58.530 --> 00:05:01.490
and we have enough data, we
can think about a method,

00:05:01.490 --> 00:05:05.900
or take it into
consideration, these metrics

00:05:05.900 --> 00:05:08.250
by designing a game.

00:05:08.250 --> 00:05:11.510
So once we have these, what
I've done is to classify.

00:05:11.510 --> 00:05:15.950
I spoke-- and I'm talking
about popular ways, here--

00:05:15.950 --> 00:05:18.940
because I spoke to many of you,
actually, who are sitting here,

00:05:18.940 --> 00:05:21.040
and I want to
thank, at this point

00:05:21.040 --> 00:05:23.000
for participating
in these interviews

00:05:23.000 --> 00:05:26.060
that I run for the
last couple of months.

00:05:26.060 --> 00:05:28.170
And basically, I was
asking developers

00:05:28.170 --> 00:05:30.410
who are working on a
regular basis, what

00:05:30.410 --> 00:05:32.960
are the ways that they are
calculating lifetime value?

00:05:32.960 --> 00:05:35.660
And what we are going to
do, is just like basically,

00:05:35.660 --> 00:05:37.330
classify these ways.

00:05:37.330 --> 00:05:39.980
Share some of these insights
that you, basically,

00:05:39.980 --> 00:05:41.960
shared with us, and
try to figure out

00:05:41.960 --> 00:05:45.140
which ways might be more
relevant or more interesting

00:05:45.140 --> 00:05:47.360
for your actual game.

00:05:47.360 --> 00:05:50.890
So the first thing
is one common thing

00:05:50.890 --> 00:05:53.350
that we see in the lifetime
value is that either we

00:05:53.350 --> 00:05:58.150
are talking about retention, or
lifetime, a lifetime variable,

00:05:58.150 --> 00:06:00.340
or we are talking about
a monetization variable,

00:06:00.340 --> 00:06:01.360
in this case.

00:06:01.360 --> 00:06:04.960
But when it comes to lifetime,
we, again, do not agree.

00:06:04.960 --> 00:06:07.750
Because if you think about
retention, many of you

00:06:07.750 --> 00:06:11.440
might take retention as the
classic retention, right?

00:06:11.440 --> 00:06:13.720
However, some developers
that were talking to me

00:06:13.720 --> 00:06:16.750
and they're saying, well, in
my game, it makes more sense,

00:06:16.750 --> 00:06:18.250
you can see the
rolling retentions,

00:06:18.250 --> 00:06:19.630
or range retentions.

00:06:19.630 --> 00:06:22.660
Because they are episodes and
I'm launching a new season,

00:06:22.660 --> 00:06:24.620
things like that, for example.

00:06:24.620 --> 00:06:26.030
Or daily versus hourly.

00:06:26.030 --> 00:06:28.870
Why, in a casual game, it
might not make sense, actually,

00:06:28.870 --> 00:06:31.630
to look at daily retention,
but hourly retention,

00:06:31.630 --> 00:06:35.200
because that's when we are
losing the users very, very

00:06:35.200 --> 00:06:36.130
fast.

00:06:36.130 --> 00:06:38.680
Also, collect daily rewards
versus play a battle.

00:06:38.680 --> 00:06:42.590
As of today, retention is
defined by opening the app.

00:06:42.590 --> 00:06:45.040
But what about-- there's a
big difference between I'm

00:06:45.040 --> 00:06:47.700
opening the app just to
collect a daily reward,

00:06:47.700 --> 00:06:49.540
or actually playing a battle.

00:06:49.540 --> 00:06:51.760
The same stands
for monetization.

00:06:51.760 --> 00:06:55.180
Most of the time it's
our DAU RPPU, or RPPU,

00:06:55.180 --> 00:06:57.680
but in this case, also, how
do you calculate the ARPDAU

00:06:57.680 --> 00:06:58.930
is going to make a difference.

00:06:58.930 --> 00:07:02.062
Am I taking the last week
or the last three months,

00:07:02.062 --> 00:07:03.520
because it might
have a difference.

00:07:03.520 --> 00:07:06.190
So when I am talking
to developers,

00:07:06.190 --> 00:07:08.410
and I'm asking them
about lifetime value,

00:07:08.410 --> 00:07:10.766
I'm going to have all these
things into consideration.

00:07:10.766 --> 00:07:12.640
And it would be interesting
for you to think,

00:07:12.640 --> 00:07:15.230
before you're calculating it.

00:07:15.230 --> 00:07:18.870
Another common thing that most
developers have is the period.

00:07:18.870 --> 00:07:21.610
And this is interesting
because it depends a lot.

00:07:21.610 --> 00:07:23.660
It depends in a
couple of metrics.

00:07:23.660 --> 00:07:25.570
How are we going to
calculate the period?

00:07:25.570 --> 00:07:27.070
Like the lifetime
value, is it going

00:07:27.070 --> 00:07:31.600
to be for 90, 180 days, one
year, or even like five years.

00:07:31.600 --> 00:07:34.150
It might depend a lot
in some key factors.

00:07:34.150 --> 00:07:35.650
So out of those
conversations, we

00:07:35.650 --> 00:07:37.990
realize that things
like, for example, type

00:07:37.990 --> 00:07:40.570
of the game, which
makes sense, like,

00:07:40.570 --> 00:07:42.380
if it is a hardcore or casual.

00:07:42.380 --> 00:07:44.350
I might look at
longer lifetime values

00:07:44.350 --> 00:07:47.280
if it is a hardcore game, the
business model that I'm using,

00:07:47.280 --> 00:07:50.860
the stage of the company, and it
all comes down to the funding.

00:07:50.860 --> 00:07:55.120
So do I need to recover
the investment in 90 days,

00:07:55.120 --> 00:07:58.570
or do I need to recover
it in maybe 365?

00:07:58.570 --> 00:08:01.450
So these things are
also quite interesting

00:08:01.450 --> 00:08:03.190
because every company
they calculate it

00:08:03.190 --> 00:08:06.310
in a different way, depending
on some of these aspects.

00:08:06.310 --> 00:08:08.350
There are more
aspects, by the way,

00:08:08.350 --> 00:08:11.980
but these are the ones that
I just wanted to highlight.

00:08:11.980 --> 00:08:16.030
So let's think about then
how we classify all the ways

00:08:16.030 --> 00:08:19.550
that developers, nowadays,
are estimating lifetime value.

00:08:19.550 --> 00:08:23.740
So I just put an axis there,
on the left axis, "complexity."

00:08:23.740 --> 00:08:26.380
And then "accuracy," because I'm
assuming that the more complex

00:08:26.380 --> 00:08:28.780
you go, the more accurate
you're going to be.

00:08:28.780 --> 00:08:31.510
That's a priori because we
can see that, sometimes, you

00:08:31.510 --> 00:08:34.419
can go as complex as you
want, and then accuracy

00:08:34.419 --> 00:08:35.210
might not increase.

00:08:35.210 --> 00:08:37.990
But let's assume
that the first one

00:08:37.990 --> 00:08:41.049
would be very simple, historical
averages, or benchmarks.

00:08:41.049 --> 00:08:44.450
That could be an easy way
to estimate lifetime value.

00:08:44.450 --> 00:08:47.680
Then we would see simple
predictive models, a little bit

00:08:47.680 --> 00:08:51.610
more advanced predictive models,
and then, well, the super hyper

00:08:51.610 --> 00:08:53.170
advanced predictive models--

00:08:53.170 --> 00:08:55.870
I'm not going to cover them
because they're usually

00:08:55.870 --> 00:08:57.850
involving like
behavioral patterns.

00:08:57.850 --> 00:09:01.250
They are involving specific
things to the game.

00:09:01.250 --> 00:09:03.700
So if we look at the
three first models,

00:09:03.700 --> 00:09:05.770
the first one is quite easy.

00:09:05.770 --> 00:09:08.860
And talking to you, we are not
even looking at predictive.

00:09:08.860 --> 00:09:12.820
We're looking at our historical
data, if we have the data,

00:09:12.820 --> 00:09:17.590
and maybe just assessing the
RPPU of the last 180 days,

00:09:17.590 --> 00:09:21.830
if my game has been released
six months ago, was x amount.

00:09:21.830 --> 00:09:25.900
And I can basically estimate
with a new user at day three,

00:09:25.900 --> 00:09:28.690
is generating 70%, and
then I will just project.

00:09:28.690 --> 00:09:31.540
And 100% would be at day 180.

00:09:31.540 --> 00:09:34.650
That's very simple
and, to be honest,

00:09:34.650 --> 00:09:38.200
has some pros, which is
like very easy to estimate.

00:09:38.200 --> 00:09:39.940
It has also, some--

00:09:39.940 --> 00:09:42.740
well, enables quick decisions
at very early stages.

00:09:42.740 --> 00:09:45.750
But on the other hand,
it's not very precise,

00:09:45.750 --> 00:09:50.010
and the averages might kind
of like bias these results.

00:09:50.010 --> 00:09:52.940
But wait, if you don't have
data, most developers, what

00:09:52.940 --> 00:09:54.470
they are doing,
then it's looking

00:09:54.470 --> 00:09:57.040
at benchmarks or
maybe similar games

00:09:57.040 --> 00:09:58.610
that you have in your portfolio.

00:09:58.610 --> 00:10:00.790
And then you say, well,
in my previous game,

00:10:00.790 --> 00:10:03.410
I was generating x amount.

00:10:03.410 --> 00:10:05.920
So what is the
simple predictive?

00:10:05.920 --> 00:10:08.080
So when we talk about
simple predictive models,

00:10:08.080 --> 00:10:12.640
we see two models
which are quite used.

00:10:12.640 --> 00:10:14.680
The first one is the
kind like the top

00:10:14.680 --> 00:10:16.840
down, because we are
looking at all users.

00:10:16.840 --> 00:10:19.180
And then we are just going
to estimate the lifetime

00:10:19.180 --> 00:10:20.500
value with this formula.

00:10:20.500 --> 00:10:23.500
You've probably seen
it like in some places.

00:10:23.500 --> 00:10:25.000
And we are projecting
the retention,

00:10:25.000 --> 00:10:27.640
which is the typical
curve, survival curve.

00:10:27.640 --> 00:10:31.150
And then we look at, well,
at day 180, in this case,

00:10:31.150 --> 00:10:33.010
the retention is only 5%.

00:10:33.010 --> 00:10:36.790
So on average, nine days per
user, are going to use my app.

00:10:36.790 --> 00:10:39.100
If I multiply this
by the ARPDAU,

00:10:39.100 --> 00:10:43.240
then I can have in this case
$0.45 would be the retention--

00:10:43.240 --> 00:10:46.540
the lifetime value expectation
for this particular segment

00:10:46.540 --> 00:10:47.652
of users.

00:10:47.652 --> 00:10:48.360
A couple of pros.

00:10:48.360 --> 00:10:50.620
Relatively easy to calculate.

00:10:50.620 --> 00:10:53.800
There's a number of spreadsheets
online that you can download.

00:10:53.800 --> 00:10:56.830
And then the cons are it's
not very accurate, again,

00:10:56.830 --> 00:11:00.280
because we're taking
segments, and it depends.

00:11:00.280 --> 00:11:03.550
From conversations that we
have, the source of traffic

00:11:03.550 --> 00:11:05.540
might vary a lot
and might depend--

00:11:05.540 --> 00:11:08.230
the retention might
change, quite drastically.

00:11:08.230 --> 00:11:09.360
And then last one.

00:11:09.360 --> 00:11:11.910
ARPDAU usually
improves with life--

00:11:11.910 --> 00:11:16.300
with the life of the game,
because my users more loyal,

00:11:16.300 --> 00:11:18.890
the ones that pay, they
tend to stay longer.

00:11:18.890 --> 00:11:21.440
So my ARPDAU will improve.

00:11:21.440 --> 00:11:25.600
So let's look then at what about
if I look only at paying users.

00:11:25.600 --> 00:11:28.750
This is the bottoms
of the model, which

00:11:28.750 --> 00:11:31.370
is kind of like some model
that also many developers are

00:11:31.370 --> 00:11:31.870
looking at.

00:11:31.870 --> 00:11:33.940
And it's basically
projecting the RPPUs,

00:11:33.940 --> 00:11:36.250
so the average revenue
per paying users.

00:11:36.250 --> 00:11:39.010
In this case, we use a curve,
which is a logarithmic one,

00:11:39.010 --> 00:11:43.520
and we can project very similar
case, that at day three, just

00:11:43.520 --> 00:11:45.610
the spending, I'm getting $30--

00:11:45.610 --> 00:11:48.685
sorry, $0.30, I wish $30--

00:11:48.685 --> 00:11:54.500
and $0.45 at the end of the
period, which is day 180.

00:11:54.500 --> 00:11:56.840
A couple of pros, in this case.

00:11:56.840 --> 00:11:59.290
So again, relatively
easy to calculate.

00:11:59.290 --> 00:12:02.500
And we have also, that usually
the number, the percentage

00:12:02.500 --> 00:12:04.590
of conversions, it's
relatively stable,

00:12:04.590 --> 00:12:07.900
and we can see that it's
going to be like 1.5% or 2%

00:12:07.900 --> 00:12:09.340
of users paying.

00:12:09.340 --> 00:12:12.340
And the cons is usually
this model, what I heard,

00:12:12.340 --> 00:12:15.130
is that it works well, when
you have a game that most

00:12:15.130 --> 00:12:17.680
of monetization comes up front.

00:12:17.680 --> 00:12:19.630
But some of the hardcore
games or strategy

00:12:19.630 --> 00:12:21.980
games that you might
have longer monetization

00:12:21.980 --> 00:12:23.860
or the monetization
starts later,

00:12:23.860 --> 00:12:26.740
that curve might be
difficult to fit.

00:12:26.740 --> 00:12:29.530
So let's move to the
advanced predictive models.

00:12:29.530 --> 00:12:30.620
So what means advance?

00:12:30.620 --> 00:12:32.860
Well, notice that
the crystal ball

00:12:32.860 --> 00:12:34.970
is getting more sophisticated.

00:12:34.970 --> 00:12:37.060
We're using like
historical data and we

00:12:37.060 --> 00:12:39.280
are trying to predict
individual lifetime

00:12:39.280 --> 00:12:41.380
value in a probabilistic way.

00:12:41.380 --> 00:12:44.170
So it has some pros and cons.

00:12:44.170 --> 00:12:45.460
In this case, too.

00:12:45.460 --> 00:12:46.570
Whoops.

00:12:46.570 --> 00:12:49.180
So the first one is,
obviously, we kind of

00:12:49.180 --> 00:12:52.460
get an estimate at an individual
level, which is very useful.

00:12:52.460 --> 00:12:54.000
It's usually more accurate.

00:12:54.000 --> 00:12:57.480
And the cons are we need
extensive user data.

00:12:57.480 --> 00:13:00.160
And especially we need to have
the resources and capabilities

00:13:00.160 --> 00:13:02.380
to interpret these
data and execute

00:13:02.380 --> 00:13:06.550
based on this insight,
which is very interesting.

00:13:06.550 --> 00:13:08.440
And why do we need
predictive models?

00:13:08.440 --> 00:13:12.280
Well, let me just
illustrate with a very, very

00:13:12.280 --> 00:13:13.240
simple example.

00:13:13.240 --> 00:13:14.890
We have two users
download the app.

00:13:14.890 --> 00:13:19.230
Both of them have sunglasses
but it's not related in any way.

00:13:19.230 --> 00:13:21.100
And they start buying
some gems, so you

00:13:21.100 --> 00:13:24.580
can see Rick is a heavy buyer.

00:13:24.580 --> 00:13:29.720
And then Gabby, it is a more
constant, but less purchases.

00:13:29.720 --> 00:13:33.310
So if we look at certain models,
or if we look at the past,

00:13:33.310 --> 00:13:36.505
we can think that Rick, at
this stage, if you look forward

00:13:36.505 --> 00:13:39.460
to 180 days, would be
more valuable than Gabby.

00:13:39.460 --> 00:13:41.440
However, many of these
probabilistic models

00:13:41.440 --> 00:13:47.810
tell us, that indeed, Gabby is
more likely to make a purchase.

00:13:47.810 --> 00:13:48.310
OK.

00:13:48.310 --> 00:13:49.360
You might not like--

00:13:49.360 --> 00:13:50.030
why is that?

00:13:50.030 --> 00:13:51.160
And how is that?

00:13:51.160 --> 00:13:52.100
How do we do that?

00:13:52.100 --> 00:13:54.970
Well, I'm not going to talk
about any model, in particular,

00:13:54.970 --> 00:13:55.570
but I'm--

00:13:55.570 --> 00:13:58.180
sorry, I'm going to talk
about one model in particular.

00:13:58.180 --> 00:14:02.620
I'm not going to recommend it
because I'm not getting any--

00:14:02.620 --> 00:14:04.060
it's an open source model.

00:14:04.060 --> 00:14:06.510
But this is one model that
we are actually looking here

00:14:06.510 --> 00:14:07.685
at Google many times.

00:14:07.685 --> 00:14:09.310
It's called the Buy
Till You Die model.

00:14:09.310 --> 00:14:10.750
It's open source.

00:14:10.750 --> 00:14:14.849
It's backed by academia and
by some Wharton researchers.

00:14:14.849 --> 00:14:16.390
It's based on these
two models, which

00:14:16.390 --> 00:14:19.390
is the [INAUDIBLE]
and the BGNB model.

00:14:19.390 --> 00:14:20.380
And I kind of like--

00:14:20.380 --> 00:14:24.240
I recommend you to have a look,
because it's quite simple,

00:14:24.240 --> 00:14:27.130
and it might help you in
this, if you're thinking

00:14:27.130 --> 00:14:28.210
about a predictive model.

00:14:28.210 --> 00:14:30.590
So it's based on two sub models.

00:14:30.590 --> 00:14:32.920
One is actually looking
at the likelihood

00:14:32.920 --> 00:14:34.191
of making a transaction.

00:14:34.191 --> 00:14:36.190
And the other one would
be looking at the value,

00:14:36.190 --> 00:14:39.940
like what is going to be the
future average or the value

00:14:39.940 --> 00:14:42.350
of those transactions.

00:14:42.350 --> 00:14:45.380
So just to illustrate
how it works,

00:14:45.380 --> 00:14:46.910
I'm going to use
the same example.

00:14:46.910 --> 00:14:48.190
So we have Rick.

00:14:48.190 --> 00:14:51.040
Rick bought a lot of
times, and the likelihood

00:14:51.040 --> 00:14:53.650
of making a transaction is
based on two variables, which

00:14:53.650 --> 00:14:58.660
is recency, so we are assuming
that the most recent that you

00:14:58.660 --> 00:15:00.730
did a transaction
is, the more likely

00:15:00.730 --> 00:15:02.450
that you're going
to make another one.

00:15:02.450 --> 00:15:04.950
And then the frequency, which
is like how many times did you

00:15:04.950 --> 00:15:05.449
buy.

00:15:05.449 --> 00:15:07.620
So we are assuming,
basically, that a user that

00:15:07.620 --> 00:15:10.350
buys a lot, during a
long period of time,

00:15:10.350 --> 00:15:12.960
is going to be more likely
that he's going to buy again.

00:15:12.960 --> 00:15:17.130
So Rick bought a lot, but
only like in the first five

00:15:17.130 --> 00:15:20.670
days, which means that then,
he's probably very like you

00:15:20.670 --> 00:15:21.840
could see the colors.

00:15:21.840 --> 00:15:23.590
And he's in the dark,
dark blue, which

00:15:23.590 --> 00:15:27.160
means like very likely he's
not going to buy again.

00:15:27.160 --> 00:15:30.910
However, if we look at Gabby,
she bought very, very little.

00:15:30.910 --> 00:15:33.930
And then we can see
that, in this case,

00:15:33.930 --> 00:15:35.190
the likelihood of buying--

00:15:35.190 --> 00:15:36.720
and this is, again,
this is a model

00:15:36.720 --> 00:15:41.070
that is done based on research,
and empirically, also.

00:15:41.070 --> 00:15:43.020
We can see that she's
also buying-- she's

00:15:43.020 --> 00:15:45.310
going to be more likely to buy.

00:15:45.310 --> 00:15:48.900
So what can we get out
of these type of models?

00:15:48.900 --> 00:15:50.910
So most of the
times, we get first,

00:15:50.910 --> 00:15:52.930
the probability of being alive.

00:15:52.930 --> 00:15:55.920
So at a certain point of time,
looking forward, we can see,

00:15:55.920 --> 00:15:59.490
OK, this user is going
to buy again or not.

00:15:59.490 --> 00:16:01.830
So the number of
transactions that this person

00:16:01.830 --> 00:16:04.160
is going to make, this user.

00:16:04.160 --> 00:16:05.910
The expected
average order value,

00:16:05.910 --> 00:16:07.590
so how much he's going to spend.

00:16:07.590 --> 00:16:09.960
And finally, the expected
user LTV, which is,

00:16:09.960 --> 00:16:12.940
in the end-- it's the product
of all the other things.

00:16:12.940 --> 00:16:15.780
So just taking these
models as an example,

00:16:15.780 --> 00:16:18.480
what would be the
pros and the cons?

00:16:18.480 --> 00:16:20.520
So first, the pros.

00:16:20.520 --> 00:16:22.330
Again, we have individual
lifetime value,

00:16:22.330 --> 00:16:23.680
which is interesting.

00:16:23.680 --> 00:16:24.730
It's open source.

00:16:24.730 --> 00:16:28.230
You can download
the Python Package

00:16:28.230 --> 00:16:29.940
and you can start by today.

00:16:29.940 --> 00:16:33.060
And it's backed by
academia, and empirically.

00:16:33.060 --> 00:16:35.731
And also, can be used
for other purposes.

00:16:35.731 --> 00:16:38.230
I think this is interesting,
because some people are saying,

00:16:38.230 --> 00:16:40.440
well, you're only
taking purchases,

00:16:40.440 --> 00:16:42.390
but we can think about
also, some events.

00:16:42.390 --> 00:16:45.480
Like, for example, I
don't know, like level 1,

00:16:45.480 --> 00:16:49.110
you could even consider that
and estimate the likelihood

00:16:49.110 --> 00:16:50.870
of playing other levels.

00:16:50.870 --> 00:16:52.900
On the cons, what do we find?

00:16:52.900 --> 00:16:55.270
Well, as I said before, it
works within our purchases

00:16:55.270 --> 00:16:55.980
as of today.

00:16:55.980 --> 00:16:57.390
If we think about
advertising, it

00:16:57.390 --> 00:16:58.973
would be a little
bit more challenging

00:16:58.973 --> 00:17:02.040
because of the number of events
that this is registering.

00:17:02.040 --> 00:17:05.220
And it requires
significant amount of data.

00:17:05.220 --> 00:17:06.119
OK.

00:17:06.119 --> 00:17:11.109
So this would be the model,
so which one is the best?

00:17:11.109 --> 00:17:14.520
So again, it's quite
hard because every model

00:17:14.520 --> 00:17:17.038
has it's pros and cons.

00:17:17.038 --> 00:17:18.579
I would say that,
personally, I would

00:17:18.579 --> 00:17:21.480
try to look at predictive
models, whenever it's possible.

00:17:21.480 --> 00:17:22.599
There's many of them.

00:17:22.599 --> 00:17:25.240
This-- the one that I
explained is just one of them.

00:17:25.240 --> 00:17:27.450
But there's others
that could be useful.

00:17:27.450 --> 00:17:29.130
And I'll try to look
at these, whenever

00:17:29.130 --> 00:17:31.690
we have these other key
points into consideration.

00:17:31.690 --> 00:17:33.750
So what is the current
situation of the game?

00:17:33.750 --> 00:17:36.346
Have we launched it a while
ago and we have the data?

00:17:36.346 --> 00:17:38.720
What is the private [INAUDIBLE]
model that we're looking?

00:17:38.720 --> 00:17:39.840
The type of game?

00:17:39.840 --> 00:17:43.130
And finally, do we-- if we
have this information, about

00:17:43.130 --> 00:17:44.910
individual lifetime
value, can we

00:17:44.910 --> 00:17:46.380
do actually something with it?

00:17:46.380 --> 00:17:48.210
Or we're just going
to let it there

00:17:48.210 --> 00:17:50.040
and we actually do
not have resources,

00:17:50.040 --> 00:17:54.210
because we need to do
something else, right.

00:17:54.210 --> 00:17:56.550
So is that all?

00:17:56.550 --> 00:17:58.860
Well, actually, when talking
about lifetime value,

00:17:58.860 --> 00:18:02.920
there's other things that people
are considering, developers.

00:18:02.920 --> 00:18:05.640
So most of it at first
is most of developers

00:18:05.640 --> 00:18:08.190
they are looking at net
LTV and profitability,

00:18:08.190 --> 00:18:09.300
rather than gross LTV.

00:18:09.300 --> 00:18:12.224
So they are already
subtracting some of the cost.

00:18:12.224 --> 00:18:13.890
Then, the second one,
if you are looking

00:18:13.890 --> 00:18:17.640
at very long-term lifetime
values, like 180 days,

00:18:17.640 --> 00:18:20.700
farther, or beyond, you
might think about maybe

00:18:20.700 --> 00:18:22.580
looking at discounting it.

00:18:22.580 --> 00:18:24.370
Then, business models.

00:18:24.370 --> 00:18:26.610
Many of you are using
two business models

00:18:26.610 --> 00:18:29.520
at the same time, in-app
purchases and advertising.

00:18:29.520 --> 00:18:32.720
So one good way to think
about how would you

00:18:32.720 --> 00:18:35.250
integrate both of them, and you
would look at all your users

00:18:35.250 --> 00:18:38.080
from both business
models at the same time.

00:18:38.080 --> 00:18:40.170
And then, lastly, we
see a general trend

00:18:40.170 --> 00:18:43.110
in the business-- in the
mobile gaming industry,

00:18:43.110 --> 00:18:47.280
a lot of multiplayer online
games that might need, indeed,

00:18:47.280 --> 00:18:49.590
to assign some monetary
value to those users

00:18:49.590 --> 00:18:52.140
that they generate
some liquidity.

00:18:52.140 --> 00:18:55.350
You don't want to find yourself
playing against a board

00:18:55.350 --> 00:18:57.930
again and again and again over.

00:18:57.930 --> 00:19:01.020
And if you think about
other things-- so virality

00:19:01.020 --> 00:19:04.870
has a very, very
important function in UA,

00:19:04.870 --> 00:19:07.440
but it a priori doesn't
affect the lifetime value,

00:19:07.440 --> 00:19:10.450
because you're augmenting
the equity of players,

00:19:10.450 --> 00:19:12.900
and then putting that
example over there.

00:19:12.900 --> 00:19:15.090
But it shouldn't affect
the overall lifetime value,

00:19:15.090 --> 00:19:17.850
because you're just
adding new users.

00:19:17.850 --> 00:19:20.280
The equity of
those paying users,

00:19:20.280 --> 00:19:22.740
it's still is very important
from a UA perspective,

00:19:22.740 --> 00:19:25.560
because you're bringing in
another user with that user

00:19:25.560 --> 00:19:26.950
that you acquire.

00:19:26.950 --> 00:19:29.850
And then last two things would
be frequency of calculations.

00:19:29.850 --> 00:19:32.550
So how frequent are
you calculating?

00:19:32.550 --> 00:19:34.087
I wouldn't recommend
daily, but I

00:19:34.087 --> 00:19:35.670
would say like,
depending on the game,

00:19:35.670 --> 00:19:38.910
if you're constantly
updating, so think about this.

00:19:38.910 --> 00:19:42.010
And then, lastly, the segments
on the cohort analysis.

00:19:42.010 --> 00:19:44.340
The first one would be
top versus lower spenders.

00:19:44.340 --> 00:19:45.930
This is a typical one.

00:19:45.930 --> 00:19:48.600
Some developers are looking
at geographies, obviously,

00:19:48.600 --> 00:19:50.340
and then traffic sources.

00:19:50.340 --> 00:19:52.500
Those would be the
most typical ones.

00:19:52.500 --> 00:19:56.490
But there might be others that
you're currently overlooking.

00:19:56.490 --> 00:20:02.594
So with this-- so what are
the tips and best practices?

00:20:02.594 --> 00:20:04.010
So there are some
tips to improve.

00:20:04.010 --> 00:20:06.200
I asked many of the
developers, what would

00:20:06.200 --> 00:20:08.840
you do to improve the
LTV calculation, right?

00:20:08.840 --> 00:20:12.260
So the first one is forget
about vanity metrics,

00:20:12.260 --> 00:20:15.450
that they are not
used in the end.

00:20:15.450 --> 00:20:19.400
I put downloads, but sometimes,
because all registered users,

00:20:19.400 --> 00:20:20.750
we might argue this.

00:20:20.750 --> 00:20:22.640
But in the end, you
want to care only

00:20:22.640 --> 00:20:25.580
about those metrics that
are relevant for an LTV

00:20:25.580 --> 00:20:26.960
calculation, in this case.

00:20:26.960 --> 00:20:30.080
For example, active users, cost
of new customers, revenues,

00:20:30.080 --> 00:20:31.370
and profit.

00:20:31.370 --> 00:20:32.450
The plan, thirdly.

00:20:32.450 --> 00:20:36.110
It's super important to
try to plan in advance,

00:20:36.110 --> 00:20:39.680
rather than just going reactive
and trying to maybe delete

00:20:39.680 --> 00:20:44.480
events that they are not
used in your daily decisions.

00:20:44.480 --> 00:20:46.800
Integrity of data,
super important.

00:20:46.800 --> 00:20:49.640
We need to think about
how we have integrity,

00:20:49.640 --> 00:20:53.060
like data that is real
from the very first day.

00:20:53.060 --> 00:20:55.190
And then, lastly, is
making trade offs.

00:20:55.190 --> 00:20:59.660
So if we don't have enough data
to actually take a decision,

00:20:59.660 --> 00:21:01.850
we might have to think
about how we extract

00:21:01.850 --> 00:21:07.130
those whales or those users
that-- my heaviest spenders

00:21:07.130 --> 00:21:11.370
that might bias my sample.

00:21:11.370 --> 00:21:14.250
So conclusion, if
you reach to here,

00:21:14.250 --> 00:21:15.750
five things that I
want to remember.

00:21:15.750 --> 00:21:17.790
Like five is a lot, but--

00:21:17.790 --> 00:21:21.240
so the first one is LTV has
many usages, as of today it's

00:21:21.240 --> 00:21:23.000
very much useful for you.

00:21:23.000 --> 00:21:25.680
But you can think about also
from a live ops perspective

00:21:25.680 --> 00:21:28.380
to decide whether a new
functionality or feature is

00:21:28.380 --> 00:21:29.730
going to be useful.

00:21:29.730 --> 00:21:31.980
Then we can think about also
that it's not an accurate

00:21:31.980 --> 00:21:34.380
science, so think
about it-- when you're

00:21:34.380 --> 00:21:37.200
talking about lifetime
value, think about a range

00:21:37.200 --> 00:21:39.420
or an interval of confidence.

00:21:39.420 --> 00:21:41.880
Lastly, if you can,
the predictive models

00:21:41.880 --> 00:21:44.070
might be useful, if
you have the data

00:21:44.070 --> 00:21:45.330
and you have the capabilities.

00:21:45.330 --> 00:21:48.300
Again, I'm not saying
don't use the other ones,

00:21:48.300 --> 00:21:52.230
but just think about this, in
case you can actually run them.

00:21:52.230 --> 00:21:56.040
And then fifth point
would be decide

00:21:56.040 --> 00:21:58.980
in advance what are the
things that-- the cores,

00:21:58.980 --> 00:22:02.250
the frequency, how frequent
are you going to calculate LTV.

00:22:02.250 --> 00:22:04.680
And finally, make
sure that you try

00:22:04.680 --> 00:22:07.800
to rely on metrics, and
then you, basically,

00:22:07.800 --> 00:22:09.780
have things like
integrity of data,

00:22:09.780 --> 00:22:13.460
and take the decisions
based on relevant samples.

