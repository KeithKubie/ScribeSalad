WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
So now that we have the key, we have three main things:

00:00:03.000 --> 00:00:07.000
we have a message in the spaces of all messages,

00:00:07.000 --> 00:00:10.000
we have a ciphertext in the spaces of all ciphertexts,

00:00:10.000 --> 00:00:15.000
and we have a key in the space of all possible keys.

00:00:15.000 --> 00:00:22.000
And we want our encryption function--we'll take a message and a key--

00:00:22.000 --> 00:00:25.000
and map that to a ciphertext, and our decryption function

00:00:25.000 --> 00:00:31.000
will take a ciphertext and a key and map that to a message.

00:00:31.000 --> 00:00:36.000
And to be correct, we need to obtain the same message after decryption,

00:00:36.000 --> 00:00:42.000
we need to know--for all messages and keys--we have the property--

00:00:42.000 --> 00:00:47.000
the decrypting--using that key, and I'm going to use the notation

00:00:47.000 --> 00:00:49.000
where I put the key as a subscript to the decryption function,

00:00:49.000 --> 00:00:53.000
instead of as an input, but that means the same thing as saying

00:00:53.000 --> 00:00:55.000
there are two inputs to decryption, one is the key,

00:00:55.000 --> 00:01:00.000
one is to input ciphertext, and the input ciphertext is the result of encrypting

00:01:00.000 --> 00:01:04.000
using that same key--that message--and we want to know for correctness

00:01:04.000 --> 00:01:11.000
that that value must always be the message that was input to the encryption function.

00:01:11.000 --> 00:01:13.000
Correctness, of course, is not enough.

00:01:13.000 --> 00:01:15.000
We also want security,

00:01:15.000 --> 00:01:17.000
and our security property, in an ideal sense,

00:01:17.000 --> 00:01:21.000
would be that the ciphertext reveals nothing at all about the key or the message.

00:01:21.000 --> 00:01:24.000
We're going to formalize this a little later, this unit.

00:01:24.000 --> 00:01:27.000
For now, let's think about that property informally,

00:01:27.000 --> 00:01:29.000
and what I'm going to ask you is a quiz,

00:01:29.000 --> 00:01:33.000
to see whether given functions satisfy our correctness property.

00:01:33.000 --> 00:01:37.000
So now it's time for a quiz to see that you understand the correctness property

00:01:37.000 --> 00:01:39.000
for a symmetric cipher.

00:01:39.000 --> 00:01:44.000
Which of the functions below satisfy the correctness property

00:01:44.000 --> 00:01:46.000
for a symmetric cipher?

00:01:46.000 --> 00:01:49.000
And we'll assume both the message space--the set of all possible messages--

00:01:49.000 --> 00:01:53.000
and the key space--the set of all possible keys--are the natural numbers,

00:01:53.000 --> 00:01:54.000
so the whole numbers starting from 1.

00:01:54.000 --> 00:01:57.000
So, each choice is a pair of functions--the encryption function,

00:01:57.000 --> 00:01:59.000
and the decryption function.

00:01:59.000 --> 00:02:03.000
For the first choice, the encryption function adds the message and the key.

00:02:03.000 --> 00:02:08.000
For this decryption function, we subtract from the ciphertext, the key.

00:02:08.000 --> 00:02:12.000
For the second choice, the encryption function is the identity.

00:02:12.000 --> 00:02:15.000
The decryption function is the identity on the ciphertext.

00:02:15.000 --> 00:02:18.000
For the third choice, I am using the modulo operator,

00:02:18.000 --> 00:02:22.000
x modulo y is the remainder you get when you divide x by y,

00:02:22.000 --> 00:02:25.000
and modulo is a very useful operation in cryptography.

00:02:25.000 --> 99:59:59.000
We'll see that quite a bit later on this unit, as well as in later units.

