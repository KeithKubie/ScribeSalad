WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.360
 
hi I'm Fergus early product manager at

00:00:02.360 --> 00:00:02.370
hi I'm Fergus early product manager at
 

00:00:02.370 --> 00:00:04.970
hi I'm Fergus early product manager at
Google I'm gonna show you how to use

00:00:04.970 --> 00:00:04.980
Google I'm gonna show you how to use
 

00:00:04.980 --> 00:00:06.680
Google I'm gonna show you how to use
Android vials to keep an eye on your

00:00:06.680 --> 00:00:06.690
Android vials to keep an eye on your
 

00:00:06.690 --> 00:00:08.780
Android vials to keep an eye on your
apps engineering performance metrics so

00:00:08.780 --> 00:00:08.790
apps engineering performance metrics so
 

00:00:08.790 --> 00:00:10.640
apps engineering performance metrics so
you can fix any problems that may affect

00:00:10.640 --> 00:00:10.650
you can fix any problems that may affect
 

00:00:10.650 --> 00:00:14.150
you can fix any problems that may affect
your users what is it important to track

00:00:14.150 --> 00:00:14.160
your users what is it important to track
 

00:00:14.160 --> 00:00:16.279
your users what is it important to track
your engineering metrics because when

00:00:16.279 --> 00:00:16.289
your engineering metrics because when
 

00:00:16.289 --> 00:00:19.099
your engineering metrics because when
your app performs badly users notice in

00:00:19.099 --> 00:00:19.109
your app performs badly users notice in
 

00:00:19.109 --> 00:00:21.679
your app performs badly users notice in
fact almost half of one-star review on

00:00:21.679 --> 00:00:21.689
fact almost half of one-star review on
 

00:00:21.689 --> 00:00:23.450
fact almost half of one-star review on
the Play Store mention performance

00:00:23.450 --> 00:00:23.460
the Play Store mention performance
 

00:00:23.460 --> 00:00:25.849
the Play Store mention performance
issues like app stability on the other

00:00:25.849 --> 00:00:25.859
issues like app stability on the other
 

00:00:25.859 --> 00:00:27.740
issues like app stability on the other
hand when things are running smoothly

00:00:27.740 --> 00:00:27.750
hand when things are running smoothly
 

00:00:27.750 --> 00:00:32.030
hand when things are running smoothly
users are happy Android voice tracks the

00:00:32.030 --> 00:00:32.040
users are happy Android voice tracks the
 

00:00:32.040 --> 00:00:33.580
users are happy Android voice tracks the
metrics that matter most your users

00:00:33.580 --> 00:00:33.590
metrics that matter most your users
 

00:00:33.590 --> 00:00:37.280
metrics that matter most your users
battery use stability rendering startup

00:00:37.280 --> 00:00:37.290
battery use stability rendering startup
 

00:00:37.290 --> 00:00:40.160
battery use stability rendering startup
time and permission requests let's start

00:00:40.160 --> 00:00:40.170
time and permission requests let's start
 

00:00:40.170 --> 00:00:42.170
time and permission requests let's start
with batteries because probably the most

00:00:42.170 --> 00:00:42.180
with batteries because probably the most
 

00:00:42.180 --> 00:00:44.840
with batteries because probably the most
important of all nobody wants to use nap

00:00:44.840 --> 00:00:44.850
important of all nobody wants to use nap
 

00:00:44.850 --> 00:00:47.240
important of all nobody wants to use nap
the trains are battery so Android

00:00:47.240 --> 00:00:47.250
the trains are battery so Android
 

00:00:47.250 --> 00:00:48.889
the trains are battery so Android
violence reports on the four most

00:00:48.889 --> 00:00:48.899
violence reports on the four most
 

00:00:48.899 --> 00:00:50.619
violence reports on the four most
significant causes of battery drain

00:00:50.619 --> 00:00:50.629
significant causes of battery drain
 

00:00:50.629 --> 00:00:53.930
significant causes of battery drain
wakelocks wake-ups background Wi-Fi

00:00:53.930 --> 00:00:53.940
wakelocks wake-ups background Wi-Fi
 

00:00:53.940 --> 00:00:57.310
wakelocks wake-ups background Wi-Fi
scans and background network use

00:00:57.310 --> 00:00:57.320
scans and background network use
 

00:00:57.320 --> 00:00:59.330
scans and background network use
background partial wakelocks

00:00:59.330 --> 00:00:59.340
background partial wakelocks
 

00:00:59.340 --> 00:01:01.549
background partial wakelocks
or when your app keeps the CPU running

00:01:01.549 --> 00:01:01.559
or when your app keeps the CPU running
 

00:01:01.559 --> 00:01:04.280
or when your app keeps the CPU running
after the devices display turns off it

00:01:04.280 --> 00:01:04.290
after the devices display turns off it
 

00:01:04.290 --> 00:01:06.230
after the devices display turns off it
can become stuck if it's held for a long

00:01:06.230 --> 00:01:06.240
can become stuck if it's held for a long
 

00:01:06.240 --> 00:01:07.730
can become stuck if it's held for a long
time while your app runs in the

00:01:07.730 --> 00:01:07.740
time while your app runs in the
 

00:01:07.740 --> 00:01:10.250
time while your app runs in the
background this can drain the users

00:01:10.250 --> 00:01:10.260
background this can drain the users
 

00:01:10.260 --> 00:01:11.840
background this can drain the users
battery so you should use them sparingly

00:01:11.840 --> 00:01:11.850
battery so you should use them sparingly
 

00:01:11.850 --> 00:01:14.590
battery so you should use them sparingly
and release them as soon as possible

00:01:14.590 --> 00:01:14.600
and release them as soon as possible
 

00:01:14.600 --> 00:01:17.330
and release them as soon as possible
the second cause of battery drain is

00:01:17.330 --> 00:01:17.340
the second cause of battery drain is
 

00:01:17.340 --> 00:01:19.460
the second cause of battery drain is
excessive wake-ups these let your app

00:01:19.460 --> 00:01:19.470
excessive wake-ups these let your app
 

00:01:19.470 --> 00:01:21.920
excessive wake-ups these let your app
wake up a device at a certain time bring

00:01:21.920 --> 00:01:21.930
wake up a device at a certain time bring
 

00:01:21.930 --> 00:01:23.870
wake up a device at a certain time bring
it out of low-power mode and holding a

00:01:23.870 --> 00:01:23.880
it out of low-power mode and holding a
 

00:01:23.880 --> 00:01:25.670
it out of low-power mode and holding a
partial wake lock while the alarm

00:01:25.670 --> 00:01:25.680
partial wake lock while the alarm
 

00:01:25.680 --> 00:01:28.640
partial wake lock while the alarm
executes again these can drain your

00:01:28.640 --> 00:01:28.650
executes again these can drain your
 

00:01:28.650 --> 00:01:30.679
executes again these can drain your
users battery and you want to use them

00:01:30.679 --> 00:01:30.689
users battery and you want to use them
 

00:01:30.689 --> 00:01:34.429
users battery and you want to use them
as lil as possible the last two battery

00:01:34.429 --> 00:01:34.439
as lil as possible the last two battery
 

00:01:34.439 --> 00:01:36.499
as lil as possible the last two battery
related metrics we track our excessive

00:01:36.499 --> 00:01:36.509
related metrics we track our excessive
 

00:01:36.509 --> 00:01:38.719
related metrics we track our excessive
background Wi-Fi scans and network use

00:01:38.719 --> 00:01:38.729
background Wi-Fi scans and network use
 

00:01:38.729 --> 00:01:41.569
background Wi-Fi scans and network use
in both cases your app connects to the

00:01:41.569 --> 00:01:41.579
in both cases your app connects to the
 

00:01:41.579 --> 00:01:44.359
in both cases your app connects to the
Internet in the background waking up the

00:01:44.359 --> 00:01:44.369
Internet in the background waking up the
 

00:01:44.369 --> 00:01:46.700
Internet in the background waking up the
CPU and turning on the radio which is

00:01:46.700 --> 00:01:46.710
CPU and turning on the radio which is
 

00:01:46.710 --> 00:01:50.149
CPU and turning on the radio which is
draining the users battery if your app

00:01:50.149 --> 00:01:50.159
draining the users battery if your app
 

00:01:50.159 --> 00:01:51.859
draining the users battery if your app
doesn't use any of these features then

00:01:51.859 --> 00:01:51.869
doesn't use any of these features then
 

00:01:51.869 --> 00:01:53.690
doesn't use any of these features then
you will not see metrics in vials for

00:01:53.690 --> 00:01:53.700
you will not see metrics in vials for
 

00:01:53.700 --> 00:01:57.080
you will not see metrics in vials for
them also if your app does not have

00:01:57.080 --> 00:01:57.090
them also if your app does not have
 

00:01:57.090 --> 00:01:59.209
them also if your app does not have
enough users above the privacy threshold

00:01:59.209 --> 00:01:59.219
enough users above the privacy threshold
 

00:01:59.219 --> 00:02:03.170
enough users above the privacy threshold
then you will not see any data either so

00:02:03.170 --> 00:02:03.180
then you will not see any data either so
 

00:02:03.180 --> 00:02:04.520
then you will not see any data either so
now that we've covered battery life the

00:02:04.520 --> 00:02:04.530
now that we've covered battery life the
 

00:02:04.530 --> 00:02:06.590
now that we've covered battery life the
next most important area of Android

00:02:06.590 --> 00:02:06.600
next most important area of Android
 

00:02:06.600 --> 00:02:09.380
next most important area of Android
vials to focus on is app stability we

00:02:09.380 --> 00:02:09.390
vials to focus on is app stability we
 

00:02:09.390 --> 00:02:12.170
vials to focus on is app stability we
track to stability metrics in or events

00:02:12.170 --> 00:02:12.180
track to stability metrics in or events
 

00:02:12.180 --> 00:02:14.110
track to stability metrics in or events
and crashes

00:02:14.110 --> 00:02:14.120
and crashes
 

00:02:14.120 --> 00:02:16.370
and crashes
application not responding RA in or

00:02:16.370 --> 00:02:16.380
application not responding RA in or
 

00:02:16.380 --> 00:02:18.650
application not responding RA in or
events or when your app stops funding to

00:02:18.650 --> 00:02:18.660
events or when your app stops funding to
 

00:02:18.660 --> 00:02:21.290
events or when your app stops funding to
user input this happens when the UI

00:02:21.290 --> 00:02:21.300
user input this happens when the UI
 

00:02:21.300 --> 00:02:23.210
user input this happens when the UI
thread of the app is blocked for too

00:02:23.210 --> 00:02:23.220
thread of the app is blocked for too
 

00:02:23.220 --> 00:02:25.460
thread of the app is blocked for too
long so the user app appears to freeze

00:02:25.460 --> 00:02:25.470
long so the user app appears to freeze
 

00:02:25.470 --> 00:02:28.970
long so the user app appears to freeze
on them crashes occur when an unhandled

00:02:28.970 --> 00:02:28.980
on them crashes occur when an unhandled
 

00:02:28.980 --> 00:02:31.550
on them crashes occur when an unhandled
exception our signal cause your app to

00:02:31.550 --> 00:02:31.560
exception our signal cause your app to
 

00:02:31.560 --> 00:02:35.030
exception our signal cause your app to
exit unexpectedly of course you want to

00:02:35.030 --> 00:02:35.040
exit unexpectedly of course you want to
 

00:02:35.040 --> 00:02:37.250
exit unexpectedly of course you want to
keep both of these to a minimum your

00:02:37.250 --> 00:02:37.260
keep both of these to a minimum your
 

00:02:37.260 --> 00:02:38.930
keep both of these to a minimum your
Android boils dashboard also displays

00:02:38.930 --> 00:02:38.940
Android boils dashboard also displays
 

00:02:38.940 --> 00:02:41.060
Android boils dashboard also displays
your apps rendering metrics use one a

00:02:41.060 --> 00:02:41.070
your apps rendering metrics use one a
 

00:02:41.070 --> 00:02:42.950
your apps rendering metrics use one a
fast responsive application that runs

00:02:42.950 --> 00:02:42.960
fast responsive application that runs
 

00:02:42.960 --> 00:02:45.590
fast responsive application that runs
smoothly and doesn't lie or stall so we

00:02:45.590 --> 00:02:45.600
smoothly and doesn't lie or stall so we
 

00:02:45.600 --> 00:02:47.900
smoothly and doesn't lie or stall so we
track any instances of slow rendering

00:02:47.900 --> 00:02:47.910
track any instances of slow rendering
 

00:02:47.910 --> 00:02:51.110
track any instances of slow rendering
our frozen frames slow rendering is when

00:02:51.110 --> 00:02:51.120
our frozen frames slow rendering is when
 

00:02:51.120 --> 00:02:53.780
our frozen frames slow rendering is when
your app can't render frames in under 16

00:02:53.780 --> 00:02:53.790
your app can't render frames in under 16
 

00:02:53.790 --> 00:02:56.420
your app can't render frames in under 16
milliseconds when this happens your app

00:02:56.420 --> 00:02:56.430
milliseconds when this happens your app
 

00:02:56.430 --> 00:02:57.410
milliseconds when this happens your app
appears to stutter

00:02:57.410 --> 00:02:57.420
appears to stutter
 

00:02:57.420 --> 00:03:01.760
appears to stutter
we call it jank frozen frames occur when

00:03:01.760 --> 00:03:01.770
we call it jank frozen frames occur when
 

00:03:01.770 --> 00:03:02.570
we call it jank frozen frames occur when
you iframes

00:03:02.570 --> 00:03:02.580
you iframes
 

00:03:02.580 --> 00:03:04.490
you iframes
take longer than 700 milliseconds to

00:03:04.490 --> 00:03:04.500
take longer than 700 milliseconds to
 

00:03:04.500 --> 00:03:06.980
take longer than 700 milliseconds to
render this makes your app appear stuck

00:03:06.980 --> 00:03:06.990
render this makes your app appear stuck
 

00:03:06.990 --> 00:03:08.750
render this makes your app appear stuck
and unresponsive to user input for

00:03:08.750 --> 00:03:08.760
and unresponsive to user input for
 

00:03:08.760 --> 00:03:12.950
and unresponsive to user input for
almost a second users also expect your

00:03:12.950 --> 00:03:12.960
almost a second users also expect your
 

00:03:12.960 --> 00:03:15.140
almost a second users also expect your
app to launch quickly on your Android

00:03:15.140 --> 00:03:15.150
app to launch quickly on your Android
 

00:03:15.150 --> 00:03:16.610
app to launch quickly on your Android
viols dashboard you can easily identify

00:03:16.610 --> 00:03:16.620
viols dashboard you can easily identify
 

00:03:16.620 --> 00:03:18.680
viols dashboard you can easily identify
it when your app is loading slowly with

00:03:18.680 --> 00:03:18.690
it when your app is loading slowly with
 

00:03:18.690 --> 00:03:21.080
it when your app is loading slowly with
different metrics for cold starts warm

00:03:21.080 --> 00:03:21.090
different metrics for cold starts warm
 

00:03:21.090 --> 00:03:24.200
different metrics for cold starts warm
starts and hot starts a cool start is

00:03:24.200 --> 00:03:24.210
starts and hot starts a cool start is
 

00:03:24.210 --> 00:03:25.760
starts and hot starts a cool start is
when your app hasn't been launched for a

00:03:25.760 --> 00:03:25.770
when your app hasn't been launched for a
 

00:03:25.770 --> 00:03:27.620
when your app hasn't been launched for a
while and isn't in the devices memory

00:03:27.620 --> 00:03:27.630
while and isn't in the devices memory
 

00:03:27.630 --> 00:03:30.050
while and isn't in the devices memory
this means the device needs to create

00:03:30.050 --> 00:03:30.060
this means the device needs to create
 

00:03:30.060 --> 00:03:32.120
this means the device needs to create
and start all your apps resources to get

00:03:32.120 --> 00:03:32.130
and start all your apps resources to get
 

00:03:32.130 --> 00:03:34.970
and start all your apps resources to get
it running in this case a slow start

00:03:34.970 --> 00:03:34.980
it running in this case a slow start
 

00:03:34.980 --> 00:03:39.350
it running in this case a slow start
would mean five seconds or more a warm

00:03:39.350 --> 00:03:39.360
would mean five seconds or more a warm
 

00:03:39.360 --> 00:03:41.450
would mean five seconds or more a warm
start is when your app is in memory and

00:03:41.450 --> 00:03:41.460
start is when your app is in memory and
 

00:03:41.460 --> 00:03:43.250
start is when your app is in memory and
it simply needs to go from activity

00:03:43.250 --> 00:03:43.260
it simply needs to go from activity
 

00:03:43.260 --> 00:03:45.710
it simply needs to go from activity
launched activity running in this case a

00:03:45.710 --> 00:03:45.720
launched activity running in this case a
 

00:03:45.720 --> 00:03:49.030
launched activity running in this case a
slow start would be two seconds or more

00:03:49.030 --> 00:03:49.040
slow start would be two seconds or more
 

00:03:49.040 --> 00:03:51.740
slow start would be two seconds or more
finally a hot start is when your app and

00:03:51.740 --> 00:03:51.750
finally a hot start is when your app and
 

00:03:51.750 --> 00:03:54.080
finally a hot start is when your app and
its activity are in memory your app goes

00:03:54.080 --> 00:03:54.090
its activity are in memory your app goes
 

00:03:54.090 --> 00:03:57.160
its activity are in memory your app goes
from honoré start to activity running

00:03:57.160 --> 00:03:57.170
from honoré start to activity running
 

00:03:57.170 --> 00:03:59.630
from honoré start to activity running
from a hot start yaahh

00:03:59.630 --> 00:03:59.640
from a hot start yaahh
 

00:03:59.640 --> 00:04:01.850
from a hot start yaahh
shouldn't take longer than 1.5 seconds

00:04:01.850 --> 00:04:01.860
shouldn't take longer than 1.5 seconds
 

00:04:01.860 --> 00:04:07.040
shouldn't take longer than 1.5 seconds
to load the last metric in your

00:04:07.040 --> 00:04:07.050
to load the last metric in your
 

00:04:07.050 --> 00:04:09.800
to load the last metric in your
dashboard is all about permissions here

00:04:09.800 --> 00:04:09.810
dashboard is all about permissions here
 

00:04:09.810 --> 00:04:11.480
dashboard is all about permissions here
you'll see the percentage of people who

00:04:11.480 --> 00:04:11.490
you'll see the percentage of people who
 

00:04:11.490 --> 00:04:13.520
you'll see the percentage of people who
denied a permission request made by your

00:04:13.520 --> 00:04:13.530
denied a permission request made by your
 

00:04:13.530 --> 00:04:16.729
denied a permission request made by your
app if the level is high you may need to

00:04:16.729 --> 00:04:16.739
app if the level is high you may need to
 

00:04:16.739 --> 00:04:18.560
app if the level is high you may need to
explain the reason for your request or

00:04:18.560 --> 00:04:18.570
explain the reason for your request or
 

00:04:18.570 --> 00:04:20.990
explain the reason for your request or
rethink whether you actually need that

00:04:20.990 --> 00:04:21.000
rethink whether you actually need that
 

00:04:21.000 --> 00:04:23.930
rethink whether you actually need that
permission at all so how do you know if

00:04:23.930 --> 00:04:23.940
permission at all so how do you know if
 

00:04:23.940 --> 00:04:26.659
permission at all so how do you know if
your metrics are good on the dashboard

00:04:26.659 --> 00:04:26.669
your metrics are good on the dashboard
 

00:04:26.669 --> 00:04:28.790
your metrics are good on the dashboard
you'll see benchmarks for each file to

00:04:28.790 --> 00:04:28.800
you'll see benchmarks for each file to
 

00:04:28.800 --> 00:04:30.560
you'll see benchmarks for each file to
help you understand how your app our

00:04:30.560 --> 00:04:30.570
help you understand how your app our
 

00:04:30.570 --> 00:04:32.630
help you understand how your app our
game is performing and which issues if

00:04:32.630 --> 00:04:32.640
game is performing and which issues if
 

00:04:32.640 --> 00:04:35.360
game is performing and which issues if
any to prioritize for example people

00:04:35.360 --> 00:04:35.370
any to prioritize for example people
 

00:04:35.370 --> 00:04:37.370
any to prioritize for example people
expect board games to load faster than

00:04:37.370 --> 00:04:37.380
expect board games to load faster than
 

00:04:37.380 --> 00:04:39.440
expect board games to load faster than
racing games so your metrics will only

00:04:39.440 --> 00:04:39.450
racing games so your metrics will only
 

00:04:39.450 --> 00:04:43.340
racing games so your metrics will only
be measured against similar apps not

00:04:43.340 --> 00:04:43.350
be measured against similar apps not
 

00:04:43.350 --> 00:04:46.010
be measured against similar apps not
sure what focused on first well although

00:04:46.010 --> 00:04:46.020
sure what focused on first well although
 

00:04:46.020 --> 00:04:47.930
sure what focused on first well although
your metrics are important to monitor

00:04:47.930 --> 00:04:47.940
your metrics are important to monitor
 

00:04:47.940 --> 00:04:49.969
your metrics are important to monitor
we've highlighted the four most

00:04:49.969 --> 00:04:49.979
we've highlighted the four most
 

00:04:49.979 --> 00:04:52.190
we've highlighted the four most
important ones on your Android vayas

00:04:52.190 --> 00:04:52.200
important ones on your Android vayas
 

00:04:52.200 --> 00:04:54.110
important ones on your Android vayas
dashboard ARH

00:04:54.110 --> 00:04:54.120
dashboard ARH
 

00:04:54.120 --> 00:04:56.300
dashboard ARH
crash rate stock wakelocks in the

00:04:56.300 --> 00:04:56.310
crash rate stock wakelocks in the
 

00:04:56.310 --> 00:04:58.700
crash rate stock wakelocks in the
background and excessive wake-ups we

00:04:58.700 --> 00:04:58.710
background and excessive wake-ups we
 

00:04:58.710 --> 00:05:00.969
background and excessive wake-ups we
call these the core vials

00:05:00.969 --> 00:05:00.979
call these the core vials
 

00:05:00.979 --> 00:05:03.290
call these the core vials
hopefully your apps metrics all look

00:05:03.290 --> 00:05:03.300
hopefully your apps metrics all look
 

00:05:03.300 --> 00:05:04.850
hopefully your apps metrics all look
good but if something should go wrong

00:05:04.850 --> 00:05:04.860
good but if something should go wrong
 

00:05:04.860 --> 00:05:07.760
good but if something should go wrong
it's important to fix problem as quickly

00:05:07.760 --> 00:05:07.770
it's important to fix problem as quickly
 

00:05:07.770 --> 00:05:08.330
it's important to fix problem as quickly
as possible

00:05:08.330 --> 00:05:08.340
as possible
 

00:05:08.340 --> 00:05:10.640
as possible
that's why Android vials also provides

00:05:10.640 --> 00:05:10.650
that's why Android vials also provides
 

00:05:10.650 --> 00:05:13.070
that's why Android vials also provides
anomaly detection just click on the

00:05:13.070 --> 00:05:13.080
anomaly detection just click on the
 

00:05:13.080 --> 00:05:15.020
anomaly detection just click on the
dashboard alert to learn more about the

00:05:15.020 --> 00:05:15.030
dashboard alert to learn more about the
 

00:05:15.030 --> 00:05:17.060
dashboard alert to learn more about the
problem or you can sign up for anomaly

00:05:17.060 --> 00:05:17.070
problem or you can sign up for anomaly
 

00:05:17.070 --> 00:05:19.600
problem or you can sign up for anomaly
alerts emails

00:05:19.600 --> 00:05:19.610
alerts emails
 

00:05:19.610 --> 00:05:21.620
alerts emails
addressing these issues as quickly as

00:05:21.620 --> 00:05:21.630
addressing these issues as quickly as
 

00:05:21.630 --> 00:05:23.630
addressing these issues as quickly as
possible not only keeps your users happy

00:05:23.630 --> 00:05:23.640
possible not only keeps your users happy
 

00:05:23.640 --> 00:05:26.060
possible not only keeps your users happy
it also helps improve your apps profile

00:05:26.060 --> 00:05:26.070
it also helps improve your apps profile
 

00:05:26.070 --> 00:05:27.770
it also helps improve your apps profile
in the Play Store such as its

00:05:27.770 --> 00:05:27.780
in the Play Store such as its
 

00:05:27.780 --> 00:05:30.580
in the Play Store such as its
discoverability in the search results

00:05:30.580 --> 00:05:30.590
discoverability in the search results
 

00:05:30.590 --> 00:05:33.170
discoverability in the search results
android vitals gives you the tools to

00:05:33.170 --> 00:05:33.180
android vitals gives you the tools to
 

00:05:33.180 --> 00:05:35.240
android vitals gives you the tools to
monitor your apps performance and keep

00:05:35.240 --> 00:05:35.250
monitor your apps performance and keep
 

00:05:35.250 --> 00:05:37.880
monitor your apps performance and keep
it running smoothly for more advice on

00:05:37.880 --> 00:05:37.890
it running smoothly for more advice on
 

00:05:37.890 --> 00:05:40.220
it running smoothly for more advice on
how to address app use check out our

00:05:40.220 --> 00:05:40.230
how to address app use check out our
 

00:05:40.230 --> 00:05:41.900
how to address app use check out our
videos on stability and battery life

00:05:41.900 --> 00:05:41.910
videos on stability and battery life
 

00:05:41.910 --> 00:05:43.850
videos on stability and battery life
you'll find the links in the video

00:05:43.850 --> 00:05:43.860
you'll find the links in the video
 

00:05:43.860 --> 00:05:46.520
you'll find the links in the video
description to learn more about Android

00:05:46.520 --> 00:05:46.530
description to learn more about Android
 

00:05:46.530 --> 00:05:48.620
description to learn more about Android
files the rest of the play console are

00:05:48.620 --> 00:05:48.630
files the rest of the play console are
 

00:05:48.630 --> 00:05:50.660
files the rest of the play console are
for tips on how to grow your app our

00:05:50.660 --> 00:05:50.670
for tips on how to grow your app our
 

00:05:50.670 --> 00:05:51.470
for tips on how to grow your app our
game business

00:05:51.470 --> 00:05:51.480
game business
 

00:05:51.480 --> 00:05:53.000
game business
check out the playbook app on Google

00:05:53.000 --> 00:05:53.010
check out the playbook app on Google
 

00:05:53.010 --> 00:05:56.900
check out the playbook app on Google
Play thanks for watching

