WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:02.510
So Pete, I love the way breakpoints and

00:00:02.510 --> 00:00:05.700
media queries are giving us
control over our CSS styles.

00:00:05.700 --> 00:00:09.430
You know, you've had a lot of experience
in the past building responsive sites.

00:00:09.430 --> 00:00:13.150
What patterns or general strategies
have you found to be the most useful?

00:00:13.150 --> 00:00:13.720
&gt;&gt; You're right.

00:00:13.720 --> 00:00:15.820
There are several great
patterns out there.

00:00:15.820 --> 00:00:18.740
But I'll start with probably
the most simple and

00:00:18.740 --> 00:00:20.510
one of the most important ones.

00:00:20.510 --> 00:00:25.840
The grid fluid system,
with the grid fluid system columns end

00:00:25.840 --> 00:00:30.520
up wrapping to the next line as the
browser width starts getting smaller.

00:00:30.520 --> 00:00:34.060
There's a lot of good examples out there
that you can try like Bootstrap or

00:00:34.060 --> 00:00:38.560
the 960 pixel grid layout system,
that are easy to use and

00:00:38.560 --> 00:00:41.060
have everything done for you already.

00:00:41.060 --> 00:00:43.650
&gt;&gt; Huh, well, that does sound like
a pretty nice, flexible strategy.

00:00:43.650 --> 00:00:46.300
You know, I did a little searching,
and I found that

00:00:46.300 --> 00:00:51.130
the HTML 5 Rocks page is an example
of a site that uses a fluid grid.

00:00:51.130 --> 00:00:54.120
Notice how when I shrink the screen,
the articles that are three columns

00:00:54.120 --> 00:00:57.840
across in this main section
shift down to a single column.

00:00:57.840 --> 00:01:01.070
Also, if you're unfamiliar
with grid-based layouts, or

00:01:01.070 --> 00:01:03.610
you think you'd have a hard
time designing one of your own,

00:01:03.610 --> 00:01:07.320
in the Intro to HTML and
CSS course we cover grid-based layouts.

00:01:07.320 --> 00:01:09.110
Check out the link in
the instructor notes to learn more.

