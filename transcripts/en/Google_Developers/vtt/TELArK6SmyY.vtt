WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:01.630
JEFF BATES: This is
Google on Google--

00:00:01.630 --> 00:00:04.780
or, as I added on to this,
(Running) Google on Google.

00:00:04.780 --> 00:00:07.290
The focus of this session is
going to be talking about how

00:00:07.290 --> 00:00:10.800
we in Corporate Engineering have
kept pace with the growth

00:00:10.800 --> 00:00:14.510
of Google over the last
14 years or so.

00:00:14.510 --> 00:00:15.450
My name is Jeff Bates.

00:00:15.450 --> 00:00:18.460
I'm the open source IT program
manager within Corporate

00:00:18.460 --> 00:00:19.410
Engineering.

00:00:19.410 --> 00:00:22.900
And with me, as you can see on
this slide as well, is Iustin

00:00:22.900 --> 00:00:26.430
Pop, who is a systems engineer
in the tech lead on Ganeti,

00:00:26.430 --> 00:00:28.960
which is one of the products
that we built within Corporate

00:00:28.960 --> 00:00:30.210
Engineering as well.

00:00:33.046 --> 00:00:36.160
So, what is Corporate
Engineering?

00:00:36.160 --> 00:00:39.980
I suspect many of you in this
room have been in IT before.

00:00:39.980 --> 00:00:45.190
And Corporate Engineering is
what we call IT within Google.

00:00:45.190 --> 00:00:48.690
We do a lot of different things
inside of Google.

00:00:48.690 --> 00:00:52.720
And I think, as probably a lot
of you can attest to, IT ends

00:00:52.720 --> 00:00:55.470
up doing a lot of different
things within a lot of

00:00:55.470 --> 00:00:57.910
different companies as well.

00:00:57.910 --> 00:01:02.560
In our case, what we really
set out to do is empower

00:01:02.560 --> 00:01:05.459
Googlers with world-leading
technologies.

00:01:05.459 --> 00:01:08.180
So that can span a wide gamut
of things, from building

00:01:08.180 --> 00:01:11.550
systems to giving them
tools to work with.

00:01:11.550 --> 00:01:17.140
So to give you a sense of what
it is we do, we are the IT.

00:01:17.140 --> 00:01:19.460
What that means is that we're
supporting offices in every

00:01:19.460 --> 00:01:23.250
continent in the world except
for Antarctica, which turns

00:01:23.250 --> 00:01:25.680
out doesn't have a very large
population, so we haven't

00:01:25.680 --> 00:01:28.040
added any offices there yet.

00:01:28.040 --> 00:01:29.246
It means we work
with everyone--

00:01:29.246 --> 00:01:33.615
[MICROPHONE DROPS]

00:01:33.615 --> 00:01:38.800
Yes, we speak very quietly as I
tear the microphone from me.

00:01:38.800 --> 00:01:40.250
All right, I think
that works now.

00:01:40.250 --> 00:01:41.620
OK.

00:01:41.620 --> 00:01:44.620
That's a wardrobe malfunction,
perhaps.

00:01:44.620 --> 00:01:48.120
So we support everything from
the real estate services, who

00:01:48.120 --> 00:01:51.340
make the actual offices run and
getting people in there,

00:01:51.340 --> 00:01:53.210
and the security systems
that are associated

00:01:53.210 --> 00:01:54.800
with that as well.

00:01:54.800 --> 00:01:57.430
We make sure that everyone is
actually paid on time, because

00:01:57.430 --> 00:02:01.840
it turns out people like to do
things like buy food, and

00:02:01.840 --> 00:02:04.960
clothing, and go out, and
do things like that.

00:02:04.960 --> 00:02:09.120
And they also like to be paid
legally in regularly as well.

00:02:09.120 --> 00:02:11.890
As part of that, we also do the
compliance systems that

00:02:11.890 --> 00:02:12.550
comes with that.

00:02:12.550 --> 00:02:14.990
Because having all these
offices in all of these

00:02:14.990 --> 00:02:18.590
different countries means that
there are a lot of--

00:02:18.590 --> 00:02:21.060
countries like to do things
differently, it turns out.

00:02:21.060 --> 00:02:22.870
And we need to be able to
work with each of those

00:02:22.870 --> 00:02:24.360
environments.

00:02:24.360 --> 00:02:26.530
Part of what we do as
well is running the

00:02:26.530 --> 00:02:27.880
Help Desk within Google.

00:02:27.880 --> 00:02:30.720
And that's, again, within all of
the offices that we've got.

00:02:30.720 --> 00:02:31.640
We do something--

00:02:31.640 --> 00:02:33.540
as I'll talk about later
in the presentation--

00:02:33.540 --> 00:02:37.220
we take a very, I think,
innovative and unique approach

00:02:37.220 --> 00:02:37.830
to doing that.

00:02:37.830 --> 00:02:41.115
We call them Tech
Stops and we--

00:02:41.115 --> 00:02:43.820
well, I'll talk in more detail
about that later.

00:02:43.820 --> 00:02:46.510
Also, given that it's Google, we
have the all-important task

00:02:46.510 --> 00:02:49.020
of making sure that the massage
scheduling takes place

00:02:49.020 --> 00:02:53.220
on time, because that is
obviously very critical.

00:02:53.220 --> 00:02:56.160
But in addition, for those of
you who are based here in the

00:02:56.160 --> 00:02:59.660
Bay Area, you may have seen some
of the buses that go back

00:02:59.660 --> 00:03:04.020
and forth from Mountain View and
to the surrounding areas.

00:03:04.020 --> 00:03:06.430
Out here in the Bay Area, we end
up running something that

00:03:06.430 --> 00:03:09.920
is close to the largest private
bus fleet in the state

00:03:09.920 --> 00:03:11.120
of California.

00:03:11.120 --> 00:03:13.550
And this kind of gets back to
the idea of being able to

00:03:13.550 --> 00:03:15.730
empower Googlers.

00:03:15.730 --> 00:03:18.940
Rather than having people sit
in the parking lot that is

00:03:18.940 --> 00:03:21.730
referred to as Highway 101, we
want to keep them productive,

00:03:21.730 --> 00:03:23.580
we want to keep them efficient,
we want to keep

00:03:23.580 --> 00:03:24.540
them happy.

00:03:24.540 --> 00:03:28.220
And so when you're running on
the bus to and from work, we

00:03:28.220 --> 00:03:31.500
keep WiFi available, so that
people aren't using that time

00:03:31.500 --> 00:03:33.930
when they're sitting on 101
having their blood pressure

00:03:33.930 --> 00:03:37.160
slowly get higher, but instead
are able to work and are able

00:03:37.160 --> 00:03:40.090
to get things done as well.

00:03:40.090 --> 00:03:44.490
So part of how we go about
building these systems is like

00:03:44.490 --> 00:03:46.260
any company or any
organization.

00:03:46.260 --> 00:03:48.300
We have this choice
between buying

00:03:48.300 --> 00:03:50.520
systems, building systems.

00:03:50.520 --> 00:03:52.150
And we do both within CorpEng.

00:03:52.150 --> 00:03:55.340
And sometimes we're buying
something because it's going

00:03:55.340 --> 00:03:57.050
to be the best tool
that's available.

00:03:57.050 --> 00:03:59.830
Sometimes we're going to build
something because we want to

00:03:59.830 --> 00:04:01.150
solve a unique problem.

00:04:01.150 --> 00:04:03.550
Or we want to solve a problem
better than we think it has

00:04:03.550 --> 00:04:05.555
been solved elsewhere before.

00:04:05.555 --> 00:04:08.080
But one of the things we
consistently try to do with

00:04:08.080 --> 00:04:11.070
that is sharing the lessons that
we've learned, sometimes

00:04:11.070 --> 00:04:13.850
painfully, sometimes
not-quite-so painfully.

00:04:13.850 --> 00:04:16.709
So that people don't have to
go out and have the same

00:04:16.709 --> 00:04:20.329
problem, and solve the same
problems that we have already

00:04:20.329 --> 00:04:22.070
gone through.

00:04:22.070 --> 00:04:24.600
That takes a number of
different forms.

00:04:24.600 --> 00:04:26.620
At the end of the presentation,
and when this is

00:04:26.620 --> 00:04:30.780
posted later, I have a number of
links to some of the other

00:04:30.780 --> 00:04:33.250
materials that we've done
before, presentations that

00:04:33.250 --> 00:04:36.500
we've given, and other
usage Hangouts on the

00:04:36.500 --> 00:04:38.000
air to talk to people.

00:04:38.000 --> 00:04:41.490
In the various offices around
the world as well, we host

00:04:41.490 --> 00:04:44.620
user groups to come in, from the
Linux user groups to the

00:04:44.620 --> 00:04:48.130
Mac admin groups to programming
and other

00:04:48.130 --> 00:04:50.920
interdisciplinary
groups as well.

00:04:50.920 --> 00:04:54.880
And that includes people both
who work within Google and

00:04:54.880 --> 00:04:56.220
people who work elsewhere.

00:04:56.220 --> 00:04:59.650
Because it's only by actually
working and sharing the

00:04:59.650 --> 00:05:02.770
information together that things
actually move forward.

00:05:02.770 --> 00:05:05.490
And rather than seeing people
smash their head in the same

00:05:05.490 --> 00:05:08.730
wall that we've had
to, it just--

00:05:08.730 --> 00:05:10.960
a rising tide floats
all boats.

00:05:10.960 --> 00:05:13.860
The last is conference speaking,
which I think is

00:05:13.860 --> 00:05:16.380
probably self-evident
what that is.

00:05:16.380 --> 00:05:19.290
I assume if you're here
you recognize that.

00:05:19.290 --> 00:05:22.000
And within the links at the
back, we've also got the

00:05:22.000 --> 00:05:25.000
office hours that we host, the
IRC, the mailing list that we

00:05:25.000 --> 00:05:26.720
do as well.

00:05:26.720 --> 00:05:30.480
As I said, we absolutely do buy
software and bring it in

00:05:30.480 --> 00:05:31.580
and work with that.

00:05:31.580 --> 00:05:33.880
We also build software.

00:05:33.880 --> 00:05:36.980
And that is often--

00:05:36.980 --> 00:05:39.190
as I alluded to, that's when
we're trying to solve a unique

00:05:39.190 --> 00:05:41.430
problem or we're not happy
with the solutions

00:05:41.430 --> 00:05:42.480
that are out there.

00:05:42.480 --> 00:05:46.030
And what we try to do in that
case is often we will make

00:05:46.030 --> 00:05:49.230
that available under various
open-source licenses.

00:05:49.230 --> 00:05:51.540
And when I talked about building
the software, I'm

00:05:51.540 --> 00:05:53.140
talking about everything
from--

00:05:53.140 --> 00:05:55.760
one of the projects that we
have open sourced is a

00:05:55.760 --> 00:05:57.170
compliance framework.

00:05:57.170 --> 00:06:01.420
And that is for doing legal
compliance and being able to

00:06:01.420 --> 00:06:05.260
file the reports is building
a framework.

00:06:05.260 --> 00:06:06.380
That is a generic problem.

00:06:06.380 --> 00:06:08.750
That is something that people
can reuse that.

00:06:08.750 --> 00:06:11.300
So what we built internally, we
then made available to the

00:06:11.300 --> 00:06:12.660
rest of the world.

00:06:12.660 --> 00:06:15.380
Some of the other things that
we have released recently.

00:06:15.380 --> 00:06:17.650
One is the dowdy little
fellow there.

00:06:17.650 --> 00:06:21.420
He is in fact a cauliflower, and
he's wearing a vest, which

00:06:21.420 --> 00:06:24.690
is appropriate given that it
is called Cauliflower Vest.

00:06:24.690 --> 00:06:29.050
That is in fact an anagram for
File Vault Key Escrow.

00:06:29.050 --> 00:06:33.430
And part of what the reason for
that is, using the full

00:06:33.430 --> 00:06:36.430
disk encryption that Apple
shipped in most recent

00:06:36.430 --> 00:06:40.330
versions of the OS X, we wanted
a way to be able to

00:06:40.330 --> 00:06:41.760
manage that at scale.

00:06:41.760 --> 00:06:47.060
And there was not tools that we
thought were appropriate at

00:06:47.060 --> 00:06:48.170
hand to do that.

00:06:48.170 --> 00:06:51.450
So we set about building
Cauliflower Vest, and then

00:06:51.450 --> 00:06:54.450
released that to the
rest of the world.

00:06:54.450 --> 00:06:57.790
Similarly, we have one of the--
we have a very, very

00:06:57.790 --> 00:06:59.420
large Mac fleet internally.

00:06:59.420 --> 00:07:02.160
And managing that, managing the
licensing, managing the

00:07:02.160 --> 00:07:05.980
installation of software, was
a problem that, yeah, there

00:07:05.980 --> 00:07:07.490
are solutions that
are out there.

00:07:07.490 --> 00:07:11.680
But we figured out a way that
we wanted to do it and built

00:07:11.680 --> 00:07:15.370
something called Simian, which
is what we use internally for

00:07:15.370 --> 00:07:18.140
managing the software and the
Mac fleet, and have also made

00:07:18.140 --> 00:07:20.860
available under an open-source
license.

00:07:20.860 --> 00:07:24.010
But this is not just a scenario
in which we try to

00:07:24.010 --> 00:07:27.550
build one-off solutions because
we want to build

00:07:27.550 --> 00:07:28.980
something unique.

00:07:28.980 --> 00:07:32.250
Just as important in that is
contributing back to the other

00:07:32.250 --> 00:07:33.510
corpus of works.

00:07:33.510 --> 00:07:36.430
So part of what Simian is built
on to something called

00:07:36.430 --> 00:07:39.850
Monkey, which is another
open-source tool that was

00:07:39.850 --> 00:07:43.540
originally developed by folks
at Walt Disney Studios.

00:07:43.540 --> 00:07:47.720
And so it is something where
we will build something

00:07:47.720 --> 00:07:51.205
internally, but where we can,
and where it is appropriate,

00:07:51.205 --> 00:07:54.070
we will go through and actually
use what else is out

00:07:54.070 --> 00:07:58.950
there and contribute back to the
greater body of knowledge.

00:07:58.950 --> 00:08:02.380
So, obviously in this case,
I work within Google's IT.

00:08:02.380 --> 00:08:04.800
But I think the lessons that
we're talking about here are

00:08:04.800 --> 00:08:07.800
something that can be applied
within your own organization,

00:08:07.800 --> 00:08:09.570
regardless of your size.

00:08:09.570 --> 00:08:14.630
And this isn't something that
needs to be strictly applied

00:08:14.630 --> 00:08:16.520
to working with other
internal customers.

00:08:16.520 --> 00:08:19.090
This is something where the
lessons we've learned can also

00:08:19.090 --> 00:08:22.650
be applied to people
who are working.

00:08:22.650 --> 00:08:26.340
If your business is growing,
and you're having to figure

00:08:26.340 --> 00:08:30.770
out how you are going to have a
more efficient process, how

00:08:30.770 --> 00:08:34.350
to automate more, and how to be
able to do that so that you

00:08:34.350 --> 00:08:36.289
can scale with the growth of
your business, I think these

00:08:36.289 --> 00:08:39.669
lessons ring true as well.

00:08:39.669 --> 00:08:42.870
So to set a sense of
scale of what we've

00:08:42.870 --> 00:08:45.220
had to contend with.

00:08:45.220 --> 00:08:46.750
Math.

00:08:46.750 --> 00:08:55.160
I think it's probably fair to
say 284 and 32,467 are pretty

00:08:55.160 --> 00:08:56.950
different numbers.

00:08:56.950 --> 00:08:59.670
And for those of you who take
a particular excitement in

00:08:59.670 --> 00:09:04.560
reading SEC filings, you can
find in the most recent filing

00:09:04.560 --> 00:09:07.650
at the end of Q1 of this year
that Google is just over

00:09:07.650 --> 00:09:12.630
33,000 full-time employees
at this point.

00:09:12.630 --> 00:09:18.010
As I've said before, this is
also literally in every other

00:09:18.010 --> 00:09:19.620
continent but Antarctica.

00:09:19.620 --> 00:09:22.930
So this is a challenge both in
terms of the number of people

00:09:22.930 --> 00:09:26.990
who are involved, in the sheer
growth on that side, but also

00:09:26.990 --> 00:09:29.660
the number of environments that
are working as well, the

00:09:29.660 --> 00:09:32.950
number of countries, the sheer
number of different offices.

00:09:32.950 --> 00:09:36.360
And I think it's probably also
worth pointing out that the

00:09:36.360 --> 00:09:40.260
company that was there in 2001
and 2011, we do a lot of

00:09:40.260 --> 00:09:42.210
different stuff.

00:09:42.210 --> 00:09:45.800
I'm sure many of you saw the
keynote yesterday talking

00:09:45.800 --> 00:09:48.490
about the release
of Jelly Bean.

00:09:48.490 --> 00:09:51.550
Jelly Bean wasn't a glimmer
in-- well, maybe it was a

00:09:51.550 --> 00:09:53.620
glimmer in Andy's eye in 2001.

00:09:53.620 --> 00:09:54.250
We'll see.

00:09:54.250 --> 00:09:59.940
But the growth in what the
company has done has been a

00:09:59.940 --> 00:10:02.080
very meteoric rise, and
we've had to keep pace

00:10:02.080 --> 00:10:03.290
with that as well.

00:10:03.290 --> 00:10:05.610
And these are some of
the ways that we've

00:10:05.610 --> 00:10:07.420
gone about doing that.

00:10:07.420 --> 00:10:10.540
So let's take a practical
use case.

00:10:10.540 --> 00:10:14.960
I've long held this semi-private
theory that

00:10:14.960 --> 00:10:18.490
tickets ultimately function as a
neural network for a company

00:10:18.490 --> 00:10:20.140
or an organization.

00:10:20.140 --> 00:10:22.460
I'm sure almost everyone
in this room has work

00:10:22.460 --> 00:10:24.970
significantly with tickets in
the past, whether it be bug

00:10:24.970 --> 00:10:29.490
trackers, whether it be filing
tickets for HR benefits, for

00:10:29.490 --> 00:10:32.630
getting an office set up, for
dealing with the cable

00:10:32.630 --> 00:10:34.670
company, for anything
else like that.

00:10:34.670 --> 00:10:40.910
And within Google, this is
something that we use a lot.

00:10:40.910 --> 00:10:45.520
And by a lot, I mean last year
alone the support organization

00:10:45.520 --> 00:10:47.870
had over half a million
tickets.

00:10:47.870 --> 00:10:50.540
When talk about the support
organization, I'm talking

00:10:50.540 --> 00:10:52.940
about the IT support side.

00:10:52.940 --> 00:10:55.840
The total number tickets that
we were dealing with was a

00:10:55.840 --> 00:10:58.030
little bit over 2 million
tickets in the

00:10:58.030 --> 00:10:59.400
course of one year.

00:10:59.400 --> 00:11:01.430
A lot of that is
machine-generated tickets

00:11:01.430 --> 00:11:03.200
talking to another machine.

00:11:03.200 --> 00:11:10.910
But that level of growth, it
takes a lot of people to go

00:11:10.910 --> 00:11:12.230
and deal with those tickets.

00:11:12.230 --> 00:11:17.300
And we had to figure out,
especially a few years ago,

00:11:17.300 --> 00:11:19.200
how we were going to continue
to grow with that.

00:11:19.200 --> 00:11:22.070
Because the number of tickets
kept going up, the number of

00:11:22.070 --> 00:11:25.100
different ways that they were
used kept going up, and we had

00:11:25.100 --> 00:11:27.410
to figure out a way that this
would continue to be an

00:11:27.410 --> 00:11:30.890
efficient way for people to be
able to get things done, and

00:11:30.890 --> 00:11:33.480
how we're going to go about
building that tool.

00:11:33.480 --> 00:11:37.880
So enter the angry
clothes washer.

00:11:37.880 --> 00:11:41.820
This is actually the logo for
one of the tools that we've

00:11:41.820 --> 00:11:44.100
built internally that's
called Stuff-O-Matic.

00:11:44.100 --> 00:11:50.050
and Stuff-O-Matic is the epitome
of the approach that

00:11:50.050 --> 00:11:52.510
we've taken to working
with tickets

00:11:52.510 --> 00:11:54.710
and reproducing processes.

00:11:54.710 --> 00:11:57.560
So one of the other systems
that we use as

00:11:57.560 --> 00:11:59.740
well is called GTR.

00:11:59.740 --> 00:12:02.590
And that is Google
Ticket Routing.

00:12:02.590 --> 00:12:06.990
As you can see, naming is
something that took a lot of

00:12:06.990 --> 00:12:08.910
time on that one.

00:12:08.910 --> 00:12:12.350
So up until a few years ago, the
way that we dealt with the

00:12:12.350 --> 00:12:14.550
tickets is we had people.

00:12:14.550 --> 00:12:16.550
And they would go through and
they would categorize the

00:12:16.550 --> 00:12:21.230
tickets, and they would go and
categorize more tickets, and

00:12:21.230 --> 00:12:23.730
then they categorize more
tickets, and they would go

00:12:23.730 --> 00:12:26.120
through and people would work
off of them and send updates

00:12:26.120 --> 00:12:26.860
from there.

00:12:26.860 --> 00:12:31.020
But, as we got to this time
frame and the company was

00:12:31.020 --> 00:12:34.480
continuing its growth rate, it
became really, really clear

00:12:34.480 --> 00:12:38.870
that this was just not going to
be a way that we were going

00:12:38.870 --> 00:12:40.380
to be able to grow.

00:12:40.380 --> 00:12:43.620
That eventually you reach the
point where you can only have

00:12:43.620 --> 00:12:46.300
only so many humans doing
things, and you need to get

00:12:46.300 --> 00:12:48.950
computers involved in
making that happen.

00:12:48.950 --> 00:12:52.340
So at that point, we said,
well OK, what is

00:12:52.340 --> 00:12:54.360
this problem like?

00:12:54.360 --> 00:12:57.850
Well, it turns out dealing with
that many tickets is kind

00:12:57.850 --> 00:13:00.110
of like dealing with spam.

00:13:00.110 --> 00:13:03.490
And I certainly would not want
to impugn that any of my

00:13:03.490 --> 00:13:06.530
colleagues are spam farmers or
anything like that, but given

00:13:06.530 --> 00:13:08.810
the sheer amount of tickets
they're generating, there is a

00:13:08.810 --> 00:13:11.460
great degree of likeness
inside of there.

00:13:11.460 --> 00:13:14.890
So what we did is we said, hmm,
all right, what are the

00:13:14.890 --> 00:13:17.640
things inside of here that we
can recognize the patterns

00:13:17.640 --> 00:13:22.280
from and be able to build an
automated response to this?

00:13:22.280 --> 00:13:24.210
Not necessarily a response
that was going

00:13:24.210 --> 00:13:25.810
to resolve the ticket--

00:13:25.810 --> 00:13:27.720
we did start to do
that later--

00:13:27.720 --> 00:13:30.800
but even at that point, just
making sure the tickets ended

00:13:30.800 --> 00:13:32.820
up in the right place.

00:13:32.820 --> 00:13:36.690
And so we began to put this
system into place.

00:13:36.690 --> 00:13:40.290
And that was very,
very key for us.

00:13:40.290 --> 00:13:43.790
By running the math, the ability
to use the ticket

00:13:43.790 --> 00:13:44.970
routing system--

00:13:44.970 --> 00:13:49.530
which has pretty close to a 99.7
success rate for being

00:13:49.530 --> 00:13:52.420
able to get the tickets
to the right queues--

00:13:52.420 --> 00:13:58.030
in 2010, that saved us roughly
28,000 man hours of time.

00:13:58.030 --> 00:14:02.640
In 2011, it saved us 41,000
man hours in time.

00:14:02.640 --> 00:14:05.600
And that's a lot of time.

00:14:05.600 --> 00:14:08.050
And when you save that much
time, and you save that much

00:14:08.050 --> 00:14:11.630
money, you begin to put energy
into doing other things.

00:14:11.630 --> 00:14:13.350
Maybe it means hiring
more people.

00:14:13.350 --> 00:14:15.950
Maybe it means being able to
look at other problem that you

00:14:15.950 --> 00:14:19.370
can reduce down to a
reproducible problem and find

00:14:19.370 --> 00:14:23.740
a fix for and address that
particular set of issues.

00:14:23.740 --> 00:14:26.450
The other flipside is that
it meant the problems got

00:14:26.450 --> 00:14:27.410
resolved more quickly.

00:14:27.410 --> 00:14:29.050
It meant that queues--

00:14:29.050 --> 00:14:31.010
getting information into
the right category

00:14:31.010 --> 00:14:32.340
in the right queue--

00:14:32.340 --> 00:14:34.920
happened much more quickly
at that point.

00:14:34.920 --> 00:14:37.660
And that meant that you had
a much happier and more

00:14:37.660 --> 00:14:40.460
productive staff working
on issues as well.

00:14:40.460 --> 00:14:46.240
And this is not like we're
sending a rocket to Mars or

00:14:46.240 --> 00:14:47.670
anything like that.

00:14:47.670 --> 00:14:49.790
What it is is thinking
thoughtfully about the data

00:14:49.790 --> 00:14:52.250
that you have and what is going
to save time, and what

00:14:52.250 --> 00:14:54.410
is going to save energy, and
what is going to keep your

00:14:54.410 --> 00:14:58.950
team working as efficiently
and happily as possible.

00:14:58.950 --> 00:15:01.500
Both in terms of the customers
that you have, and also the

00:15:01.500 --> 00:15:03.050
teams that actually
need to work with

00:15:03.050 --> 00:15:06.090
these systems as well.

00:15:06.090 --> 00:15:08.210
So one of the other things
that we do is--

00:15:08.210 --> 00:15:10.330
I alluded to at the beginning--
we're in charge of

00:15:10.330 --> 00:15:13.760
running all of the Help
Desk inside of Google.

00:15:13.760 --> 00:15:18.890
But, at least in the companies
I've worked in in the past,

00:15:18.890 --> 00:15:21.910
sometimes the help desk is
literally someone's desk that

00:15:21.910 --> 00:15:26.660
is in a corner, and sometimes
that is how it needs to be.

00:15:26.660 --> 00:15:29.570
What we have done at Google
is we've tried to

00:15:29.570 --> 00:15:31.330
turn these into centers.

00:15:31.330 --> 00:15:32.970
We call them Tech Stops.

00:15:32.970 --> 00:15:35.820
And one of the most key things
that we have found inside of

00:15:35.820 --> 00:15:38.920
there is the philosophy
of solving the

00:15:38.920 --> 00:15:40.670
problem at first contact.

00:15:40.670 --> 00:15:43.600
So when someone comes in, and
they walk into a Tech Stop,

00:15:43.600 --> 00:15:45.970
and they're having a problem
with their machine, is how

00:15:45.970 --> 00:15:48.200
quickly can you solve
that problem?

00:15:48.200 --> 00:15:50.210
Or if they don't want to walk
into a Tech Stop, or they're

00:15:50.210 --> 00:15:53.140
working from home, you provide
the services to them in the

00:15:53.140 --> 00:15:55.580
way that is going to be most
convenient for them.

00:15:55.580 --> 00:15:59.880
Whether that be that via video
chat, or whether that be via

00:15:59.880 --> 00:16:04.230
text chat, or whether that be
self-service through being

00:16:04.230 --> 00:16:06.720
able to find the information
online.

00:16:06.720 --> 00:16:09.770
You want to get them the
information as efficiently and

00:16:09.770 --> 00:16:11.930
quickly as possible.

00:16:11.930 --> 00:16:16.730
And part of that is also
choosing who you hire into

00:16:16.730 --> 00:16:17.990
that organization.

00:16:17.990 --> 00:16:21.270
What we look for when we want
to hire people into there is

00:16:21.270 --> 00:16:25.310
people who, at a small company,
that might be the IT

00:16:25.310 --> 00:16:27.430
guy or the sysadmin that
is inside of there.

00:16:30.950 --> 00:16:34.270
My friend Rob Malda, he
and I started a site

00:16:34.270 --> 00:16:35.800
called Slashdot together.

00:16:35.800 --> 00:16:37.790
And he was often asked
to describe the

00:16:37.790 --> 00:16:39.010
demographic of the site.

00:16:39.010 --> 00:16:41.730
And, believe you me, there
is no way to describe the

00:16:41.730 --> 00:16:42.470
demographic.

00:16:42.470 --> 00:16:45.950
But he had a choice phrase,
which I think is an apt

00:16:45.950 --> 00:16:49.850
description for the
people who we want

00:16:49.850 --> 00:16:51.350
working the Tech Stops.

00:16:51.350 --> 00:16:54.700
It's people who have the love of
technology in their blood.

00:16:54.700 --> 00:16:57.610
It's people who are passionate
about technology.

00:16:57.610 --> 00:17:00.580
They're genderless, they're
intellectually curious, and

00:17:00.580 --> 00:17:02.380
they want to learn more.

00:17:02.380 --> 00:17:05.829
So you bring these people inside
of the organization.

00:17:05.829 --> 00:17:10.550
And in some cases, we use this
model that's been around for

00:17:10.550 --> 00:17:13.910
about 2000 years or so called
an apprenticeship, where you

00:17:13.910 --> 00:17:16.960
bring in people who are curious
and want to learn more

00:17:16.960 --> 00:17:19.540
and you have been paired with
people who have been doing

00:17:19.540 --> 00:17:22.060
this for a while and they
learn from them.

00:17:22.060 --> 00:17:25.609
And it turns out everyone
is far happier and more

00:17:25.609 --> 00:17:27.790
productive in that process.

00:17:27.790 --> 00:17:31.610
So I know that this sounds
all well and good.

00:17:31.610 --> 00:17:33.890
That, well you're Google, of
course you've been able to do

00:17:33.890 --> 00:17:39.470
this, you just hire all the
people and put it in there.

00:17:39.470 --> 00:17:42.540
What we have found by running
all the numbers is that

00:17:42.540 --> 00:17:48.330
actually, our cost to provide
support within the company is

00:17:48.330 --> 00:17:52.420
well below what the industry
average for support is.

00:17:52.420 --> 00:17:55.340
Because rather than focusing
on how much you can squeeze

00:17:55.340 --> 00:17:59.600
out of it, you want to get
people to be as productive and

00:17:59.600 --> 00:18:02.470
efficient and quickly
as possible.

00:18:02.470 --> 00:18:04.590
Back to work as quickly
as possible.

00:18:04.590 --> 00:18:09.840
Because it might in one sense be
like, well they have to do

00:18:09.840 --> 00:18:12.160
this this way, they have
to do this this way.

00:18:12.160 --> 00:18:14.060
No, what you really want to do
is you want to have someone

00:18:14.060 --> 00:18:16.120
come in, get their problem
solved, and be back to writing

00:18:16.120 --> 00:18:17.420
code as quickly as possible.

00:18:17.420 --> 00:18:19.190
Because them writing
code matters

00:18:19.190 --> 00:18:20.440
far more than whether--

00:18:22.960 --> 00:18:25.370
It's just a lot more pleasant
for everyone

00:18:25.370 --> 00:18:27.870
who's involved in that.

00:18:27.870 --> 00:18:31.160
Part of how we've gone about
doing that is really a

00:18:31.160 --> 00:18:33.610
two-fold side of choice
and transparency.

00:18:33.610 --> 00:18:36.000
You want to give people a choice
so that they're using

00:18:36.000 --> 00:18:38.180
the tools that are the most
effective for them.

00:18:38.180 --> 00:18:40.830
So you come to work
at Google--

00:18:40.830 --> 00:18:43.290
Iustin is running--

00:18:43.290 --> 00:18:46.230
well, the laptop's closed, but
he's running Linux over there.

00:18:46.230 --> 00:18:48.360
I'm running this is
off of a MacBook.

00:18:48.360 --> 00:18:50.430
You come in, you've got
a choice between them.

00:18:50.430 --> 00:18:52.750
And it's not like we're running
a commune where you

00:18:52.750 --> 00:18:55.300
can run whatever you want to
or something like that.

00:18:55.300 --> 00:18:57.740
You need to have everything
within the bounds of keeping

00:18:57.740 --> 00:19:00.170
the data and information
secure and

00:19:00.170 --> 00:19:03.550
safe and easily available.

00:19:03.550 --> 00:19:06.900
But you're trying to hire the
smartest people that you

00:19:06.900 --> 00:19:10.290
possibly can, regardless of the
company that you're in.

00:19:10.290 --> 00:19:12.960
So trying to constrain their
choice and make them use

00:19:12.960 --> 00:19:15.270
something that they're going to
be less effective in would

00:19:15.270 --> 00:19:18.010
seem, to me at least, to be
pretty counterproductive at

00:19:18.010 --> 00:19:19.360
that point.

00:19:19.360 --> 00:19:21.830
So we give them a choice.

00:19:21.830 --> 00:19:24.420
Part of it as well is also,
especially over the last

00:19:24.420 --> 00:19:26.390
several years, has
been changing how

00:19:26.390 --> 00:19:28.500
you deliver the services.

00:19:28.500 --> 00:19:32.260
Ultimately, the mindset of
making people operate within

00:19:32.260 --> 00:19:34.990
the constraints of how you
want them to and is most

00:19:34.990 --> 00:19:39.730
convenient for you,
that's riding the

00:19:39.730 --> 00:19:41.210
failboat at that point.

00:19:41.210 --> 00:19:43.600
So what that is meant is
delivering far more of the

00:19:43.600 --> 00:19:46.660
services through mobile
platform, or delivering it in

00:19:46.660 --> 00:19:48.380
a way they can access
it at home.

00:19:48.380 --> 00:19:51.200
Something like that.

00:19:51.200 --> 00:19:55.230
It's kind of hard to see here on
this slide here, but on the

00:19:55.230 --> 00:19:57.500
right side is a wire
frame rack.

00:19:57.500 --> 00:19:59.840
This is something that is a
common feature throughout the

00:19:59.840 --> 00:20:02.420
Tech Stops and throughout
the organization.

00:20:02.420 --> 00:20:04.660
And what that is, is that
you walk into the Tech

00:20:04.660 --> 00:20:07.260
Stop, and we have--

00:20:07.260 --> 00:20:09.660
let's see, on there is ethernet
cables, it's power

00:20:09.660 --> 00:20:15.550
adapters, it's headphones, its
cable organizers, it is all

00:20:15.550 --> 00:20:19.290
the various miscellaneous items
that you need to get

00:20:19.290 --> 00:20:20.530
your work done.

00:20:20.530 --> 00:20:24.760
And what we do is you walk in,
you swipe your badge, you use

00:20:24.760 --> 00:20:27.800
the little scan gun, and you
check the stuff out,

00:20:27.800 --> 00:20:29.500
and you walk away.

00:20:29.500 --> 00:20:31.500
But all right, so
that's great.

00:20:31.500 --> 00:20:32.590
That saves a lot of time.

00:20:32.590 --> 00:20:35.160
Rather than making someone file
a PO so that they can

00:20:35.160 --> 00:20:36.730
order a new mouse--

00:20:36.730 --> 00:20:41.180
a mouse costs almost nothing at
this point and you've just

00:20:41.180 --> 00:20:43.980
wasted a lot of time
making people jump

00:20:43.980 --> 00:20:45.150
through that hoop--

00:20:45.150 --> 00:20:47.710
so make it easy for them
to come up and get it.

00:20:47.710 --> 00:20:51.160
But part of that, back to hiring
smart people, is also

00:20:51.160 --> 00:20:52.665
treating them like adults.

00:20:52.665 --> 00:20:55.580
So when they come in, there is a
price for everything that is

00:20:55.580 --> 00:20:57.330
listed on there.

00:20:57.330 --> 00:20:59.990
We obviously don't charge them
for that, but we keep track of

00:20:59.990 --> 00:21:00.930
all of that.

00:21:00.930 --> 00:21:03.880
And so what that means is that
when people come in, and they

00:21:03.880 --> 00:21:06.730
get one of these items, they can
see all of the other stuff

00:21:06.730 --> 00:21:08.500
that they've gotten over time.

00:21:08.500 --> 00:21:11.880
And the interesting side effect
of that is it turns

00:21:11.880 --> 00:21:15.160
out, when you treat people
like adults they actually

00:21:15.160 --> 00:21:16.420
reciprocate.

00:21:16.420 --> 00:21:18.920
And so what happens is that when
people are using some of

00:21:18.920 --> 00:21:21.810
these items and they don't need
it anymore, they will

00:21:21.810 --> 00:21:25.020
come back and they'll check it
back in and put it away.

00:21:25.020 --> 00:21:29.010
So you get this constant cycle
of people using items.

00:21:29.010 --> 00:21:36.090
And it goes back to treat people
the way that you would

00:21:36.090 --> 00:21:37.860
like to be treated.

00:21:37.860 --> 00:21:41.980
So one of the other things
that has been key for our

00:21:41.980 --> 00:21:46.920
ability to grow has been
using our own tools.

00:21:46.920 --> 00:21:51.230
My Gmail, that I use every day
while I'm at work, is the

00:21:51.230 --> 00:21:55.890
Gmail that you, well hopefully,
are using to check

00:21:55.890 --> 00:21:58.260
your email as well.

00:21:58.260 --> 00:22:02.260
A lot of these tools we have
built for ourselves internally

00:22:02.260 --> 00:22:03.910
to solve problems.

00:22:03.910 --> 00:22:06.435
And, because we're solving
generic problems, then sharing

00:22:06.435 --> 00:22:07.890
it out with the world.

00:22:07.890 --> 00:22:11.890
The calendar really came about
because we weren't happy with

00:22:11.890 --> 00:22:14.110
the calendar tools that
we have within Google.

00:22:14.110 --> 00:22:17.310
We said, all right, we can
do a better job for this.

00:22:17.310 --> 00:22:19.720
Because scheduling meetings
across time zones and

00:22:19.720 --> 00:22:23.080
everything was not a
particularly pleasant process.

00:22:23.080 --> 00:22:26.510
And so when we built this, we
then said, well all right,

00:22:26.510 --> 00:22:27.770
we're pretty happy with this.

00:22:27.770 --> 00:22:30.000
How about we make this available
to everyone else?

00:22:30.000 --> 00:22:31.980
And this continues to
grow out over time.

00:22:31.980 --> 00:22:34.760
I mean, it's now been, I think,
a year in a day since

00:22:34.760 --> 00:22:41.710
Google+ was officially rolled
out, and part of the success

00:22:41.710 --> 00:22:44.900
of Google+ has been the
inclusion of the Hangouts.

00:22:44.900 --> 00:22:49.640
And part of where Hangouts
came from was, Google is

00:22:49.640 --> 00:22:54.350
something like the world's
largest private civilian-user

00:22:54.350 --> 00:22:55.910
video conferencing.

00:22:55.910 --> 00:22:57.430
Again, we've got all
these offices and

00:22:57.430 --> 00:23:00.330
everything else like that.

00:23:00.330 --> 00:23:02.690
It makes a huge difference,
when you can actually see

00:23:02.690 --> 00:23:04.980
someone on the other end, and
you can communicate with them,

00:23:04.980 --> 00:23:07.070
and you can see the body
language, and you can see what

00:23:07.070 --> 00:23:08.160
they're saying.

00:23:08.160 --> 00:23:11.020
That is a far more efficient
way for doing things.

00:23:11.020 --> 00:23:15.310
And we took the knowledge that
we had learned from that and

00:23:15.310 --> 00:23:17.650
said, well, this is something
that we should make available

00:23:17.650 --> 00:23:18.490
to the rest of world.

00:23:18.490 --> 00:23:22.180
Yeah, Gmail was letting you do
a chat, do video chat and

00:23:22.180 --> 00:23:23.440
things like that.

00:23:23.440 --> 00:23:25.820
But what Hangouts meant
is that it became a

00:23:25.820 --> 00:23:26.790
much broader affair.

00:23:26.790 --> 00:23:28.920
So you could have people
in different locations.

00:23:28.920 --> 00:23:33.440
And this goes back to the idea
of these problems that we try

00:23:33.440 --> 00:23:35.740
to solve for ourselves, we also
want to make available to

00:23:35.740 --> 00:23:38.210
the rest of the world, too.

00:23:38.210 --> 00:23:40.940
So foresight.

00:23:40.940 --> 00:23:43.860
I suppose another word for
foresight would be

00:23:43.860 --> 00:23:47.930
"proactive," but I really,
really can't stand the word

00:23:47.930 --> 00:23:53.120
"proactive," although it's
a fairly apt description.

00:23:53.120 --> 00:23:55.670
The ability to see what is
coming down the road.

00:23:55.670 --> 00:23:59.140
And the way that you can see
what is coming up is by--

00:23:59.140 --> 00:24:00.630
people talk about big data.

00:24:00.630 --> 00:24:03.270
I'd actually like all data.

00:24:03.270 --> 00:24:06.380
On a practical basis, you should
keep all of the logs

00:24:06.380 --> 00:24:10.120
and all of the data that you
possibly can, because it's

00:24:10.120 --> 00:24:12.700
only by looking at that data,
and it's only by looking that

00:24:12.700 --> 00:24:14.730
information, that you're going
to be able to figure out the

00:24:14.730 --> 00:24:19.250
problem that you need to solve
for 18 months from now, or two

00:24:19.250 --> 00:24:20.850
or two years from now.

00:24:20.850 --> 00:24:24.130
Because, as your business grows,
or as your organization

00:24:24.130 --> 00:24:27.070
grows, whatever you're doing
grows, what is a minor

00:24:27.070 --> 00:24:30.260
irritant to you right now is
going to become a giant

00:24:30.260 --> 00:24:33.240
flaming problem for you
18 months from now.

00:24:33.240 --> 00:24:37.110
At least hopefully, as odd as
that sentence may sound.

00:24:37.110 --> 00:24:41.160
And it's by looking at that
stuff and by having that

00:24:41.160 --> 00:24:43.580
available that you'll know what
problems it is that you

00:24:43.580 --> 00:24:44.935
need to address at that point.

00:24:48.470 --> 00:24:51.830
I know that that's probably
gravitational impossible.

00:24:51.830 --> 00:24:54.450
Unless the rock on the right
is a particularly

00:24:54.450 --> 00:24:55.680
porous form of rock.

00:24:55.680 --> 00:24:59.550
But what that comes down to is
how do you keep this balance

00:24:59.550 --> 00:25:03.350
inside of there, and how are you
able to continue to grow?

00:25:03.350 --> 00:25:09.100
If I could say, one of the best
things I've learned over

00:25:09.100 --> 00:25:12.400
time is, do not be beholden
to the past.

00:25:12.400 --> 00:25:16.500
So that has taken a number
of different forms within

00:25:16.500 --> 00:25:17.770
Corporate Engineering.

00:25:17.770 --> 00:25:21.580
One of them is, is that little
bit, about 2 and 1/2 years ago

00:25:21.580 --> 00:25:26.590
now, we began moving more and
more of our apps into Google's

00:25:26.590 --> 00:25:28.070
cloud platform.

00:25:28.070 --> 00:25:34.530
And I'm not going to say that it
was unicorns and fairy dust

00:25:34.530 --> 00:25:36.120
to start that from
the beginning.

00:25:36.120 --> 00:25:38.360
It requires a whole different
way of doing things.

00:25:38.360 --> 00:25:41.790
But once we started doing that,
and the benefits that we

00:25:41.790 --> 00:25:43.410
got from that, is--

00:25:43.410 --> 00:25:46.560
so, within the support
organization, for instance, it

00:25:46.560 --> 00:25:51.590
takes us 25% less time
to deliver new apps.

00:25:51.590 --> 00:25:54.760
Simply because of the ease of
being able to deploy on the

00:25:54.760 --> 00:25:57.690
cloud platform, and to build
something new, and to have it

00:25:57.690 --> 00:25:58.880
rolled out and delivered.

00:25:58.880 --> 00:26:01.860
And one of the other benefits
that has come from that is

00:26:01.860 --> 00:26:06.660
that we haven't had to get any
new pagers for people in the

00:26:06.660 --> 00:26:07.870
last couple years.

00:26:07.870 --> 00:26:10.450
Because we've been able to take
that problem of providing

00:26:10.450 --> 00:26:14.080
operational support and make it
someone else's problem at

00:26:14.080 --> 00:26:15.490
that point, actually.

00:26:15.490 --> 00:26:18.890
But what that means is you don't
have people having to

00:26:18.890 --> 00:26:21.340
get up in the middle of the
night and try to solve a

00:26:21.340 --> 00:26:24.460
problem, because you can rely
on the platform as a service

00:26:24.460 --> 00:26:25.730
to actually deal with that.

00:26:25.730 --> 00:26:28.560
And when you don't have to do
that, then you go back and you

00:26:28.560 --> 00:26:29.760
can start to look
at your data.

00:26:29.760 --> 00:26:31.890
And you can start to figure
out what you need to do to

00:26:31.890 --> 00:26:35.000
move things forward.

00:26:35.000 --> 00:26:37.980
The other point I would make
as well, with that, is that

00:26:37.980 --> 00:26:40.910
thinking about how you operate,
and changing that.

00:26:40.910 --> 00:26:44.430
So an example is, within
support, in the last couple

00:26:44.430 --> 00:26:47.900
years, the number of people that
the support organization

00:26:47.900 --> 00:26:51.320
actually supports has
grown by 68%.

00:26:51.320 --> 00:26:53.100
That's a lot of people.

00:26:53.100 --> 00:26:56.260
The support organization
has grown by 4%.

00:26:56.260 --> 00:26:59.320
4 and 68 are not close
to each other--

00:26:59.320 --> 00:27:01.500
well, I guess it depends on
your sense of scale--

00:27:01.500 --> 00:27:04.030
but they're pretty far off from
each other at that point.

00:27:04.030 --> 00:27:05.490
So how were we able
to do that?

00:27:05.490 --> 00:27:07.292
We were able to do that because
we went through and we

00:27:07.292 --> 00:27:09.090
said, OK, what's the information
people really

00:27:09.090 --> 00:27:13.380
want, and what is the best
way to deliver that?

00:27:13.380 --> 00:27:16.350
So making better tools
available, making it so the

00:27:16.350 --> 00:27:17.810
people can actually--

00:27:17.810 --> 00:27:19.920
again, this kind of like
proactive in that I hate the

00:27:19.920 --> 00:27:21.020
word, but it's accurate--

00:27:21.020 --> 00:27:22.530
crowdsourcing.

00:27:22.530 --> 00:27:26.470
Where people who have solved a
particular edge-case problem

00:27:26.470 --> 00:27:28.390
are able to share that
with each other.

00:27:28.390 --> 00:27:31.230
And that has led to a far
greater efficiency and

00:27:31.230 --> 00:27:32.780
productivity with that.

00:27:32.780 --> 00:27:36.190
But by the same notion of also
not being beholden to the

00:27:36.190 --> 00:27:39.040
past, you need to realize that
sometimes the problems you

00:27:39.040 --> 00:27:43.000
solve are ones that aren't
going to be answered by

00:27:43.000 --> 00:27:45.440
necessarily going into the
cloud or changing your

00:27:45.440 --> 00:27:47.620
traditional IT stack.

00:27:47.620 --> 00:27:51.300
And we still do run many
apps like that.

00:27:51.300 --> 00:27:54.210
And Iustin, who will be talking
next, is in charge of

00:27:54.210 --> 00:27:58.050
Ganeti, which is one of the
ways that we go about

00:27:58.050 --> 00:28:00.260
supporting that.

00:28:00.260 --> 00:28:01.510
IUSTIN POP: Thanks, Jeff.

00:28:06.790 --> 00:28:08.500
So, I everyone.

00:28:08.500 --> 00:28:11.480
My name is Iustin Pop,
and I work in the

00:28:11.480 --> 00:28:13.270
Google Switzerland office.

00:28:13.270 --> 00:28:15.910
And for most of my lifetime
in Google, I've

00:28:15.910 --> 00:28:18.620
been working on Ganeti.

00:28:18.620 --> 00:28:19.840
What is Ganeti?

00:28:19.840 --> 00:28:22.110
If you go to the project
homepage, you will see there

00:28:22.110 --> 00:28:23.340
are some very nice words.

00:28:23.340 --> 00:28:26.530
Open source, cluster-based
virtualization manager.

00:28:26.530 --> 00:28:31.810
And what it actually means is
that about six years ago, we

00:28:31.810 --> 00:28:33.410
said we want to start using

00:28:33.410 --> 00:28:35.570
virtualization in our IT fleet.

00:28:35.570 --> 00:28:39.210
And through the process which
Jeff described, we want to

00:28:39.210 --> 00:28:41.520
look at what the projects
were there.

00:28:41.520 --> 00:28:43.840
And of course, there was already
VMware, there was some

00:28:43.840 --> 00:28:45.300
open-source stuff, and so on.

00:28:45.300 --> 00:28:49.630
But none of the tools at that
time offered what we wanted, a

00:28:49.630 --> 00:28:52.200
way to scale from very small
deployments to large

00:28:52.200 --> 00:28:55.530
deployments while at the same
time not depending on external

00:28:55.530 --> 00:28:58.660
infrastructure like share
storage or very expensive

00:28:58.660 --> 00:29:00.760
networking gear and so on.

00:29:00.760 --> 00:29:04.760
So we said, let's go build
something simple, we'll run it

00:29:04.760 --> 00:29:07.010
for a couple of years on
a small scale, and

00:29:07.010 --> 00:29:09.200
that will be it.

00:29:09.200 --> 00:29:12.940
However, it didn't turn out
that simple in the end.

00:29:12.940 --> 00:29:17.160
Now we are still running Ganeti,
and we manage with it

00:29:17.160 --> 00:29:21.280
almost all the internal
virtualized fleet.

00:29:21.280 --> 00:29:24.630
We run it both in the offices
that Jeff mentioned, across

00:29:24.630 --> 00:29:28.070
the whole world, where we run
Ganeti, for example, in very

00:29:28.070 --> 00:29:29.740
small deployments.

00:29:29.740 --> 00:29:32.360
Like two, three physical
machines managed by Ganeti,

00:29:32.360 --> 00:29:36.710
which provide around 15 or
20 virtual machines.

00:29:36.710 --> 00:29:38.860
And we also run it at the other
end of the scale, in

00:29:38.860 --> 00:29:44.380
data centers where we have
various workloads like

00:29:44.380 --> 00:29:47.060
engineers that don't run
a [INAUDIBLE] stack the

00:29:47.060 --> 00:29:49.340
application cannot be moved to
the cloud yet, or so on.

00:29:49.340 --> 00:29:53.120
Or virtual workstations, which
we use a lot, and so on.

00:29:53.120 --> 00:29:55.100
So the scale that
Ganeti covers--

00:29:55.100 --> 00:29:59.430
from one, two physical machines
to 100 or 200

00:29:59.430 --> 00:30:02.900
physical machines, depending
to order of magnitude--

00:30:02.900 --> 00:30:07.790
means that there's a lot of
balance needed to make sure

00:30:07.790 --> 00:30:10.750
that Ganeti works well, both for
the lower end of the scale

00:30:10.750 --> 00:30:12.560
and for high end.

00:30:12.560 --> 00:30:15.970
So, for example, challenges
here are, we don't want

00:30:15.970 --> 00:30:20.010
someone who tries Ganeti at
first, for example, runs

00:30:20.010 --> 00:30:22.830
Debian or Ubuntu and just runs
app Ganeti and store Ganeti

00:30:22.830 --> 00:30:23.990
and configures the cluster.

00:30:23.990 --> 00:30:26.990
we don't want this person to be
burdened by a very complex

00:30:26.990 --> 00:30:31.100
setup procedure, and requiring
a very complex software

00:30:31.100 --> 00:30:32.490
environment.

00:30:32.490 --> 00:30:35.470
At the other end of the scale,
we don't want that scaling

00:30:35.470 --> 00:30:38.640
Ganeti up is hampered by the
fact that it also supports

00:30:38.640 --> 00:30:41.430
very small environments.

00:30:41.430 --> 00:30:46.300
So there's, as Jeff mentioned,
scale of scaling, or the

00:30:46.300 --> 00:30:49.690
problems in scaling up also
appear, not only in the

00:30:49.690 --> 00:30:52.800
organization, but also in the
kind of software development

00:30:52.800 --> 00:30:56.360
products that we do
in Corporate IT.

00:30:56.360 --> 00:31:01.370
And to help solve this, what
we did in Ganeti is simply

00:31:01.370 --> 00:31:06.150
make sure that the way we
[INAUDIBLE] the Ganeti is to

00:31:06.150 --> 00:31:09.030
allow for incremental
improvements and scalability

00:31:09.030 --> 00:31:11.980
and not requiring you, when you
move, for example, from 10

00:31:11.980 --> 00:31:14.230
physical machines to 100
physical machines, to change

00:31:14.230 --> 00:31:18.180
the way you deploy Ganeti or
the actual features that

00:31:18.180 --> 00:31:19.070
Ganeti offers you.

00:31:19.070 --> 00:31:22.540
And today, I think we were
pretty successful with that.

00:31:22.540 --> 00:31:25.710
You can start with installing
Ganeti on a single laptop, and

00:31:25.710 --> 00:31:29.460
then keep adding physical
machines to this environment

00:31:29.460 --> 00:31:31.980
and scale it up to 100 machines,
and it works well.

00:31:34.630 --> 00:31:37.990
We still have, of course, some
corner issues, some cases

00:31:37.990 --> 00:31:39.870
where scalability's
not that good.

00:31:39.870 --> 00:31:42.540
But overall, it works for us,
and we use it, as I said,

00:31:42.540 --> 00:31:43.790
extensively.

00:31:45.370 --> 00:31:49.380
Another problem that we have
with Ganeti is that, as I

00:31:49.380 --> 00:31:52.290
said, it's an open-source
project, and we want run it as

00:31:52.290 --> 00:31:53.740
an open source project.

00:31:53.740 --> 00:31:55.310
But this raises some
questions.

00:31:55.310 --> 00:31:58.760
For example, when we want to
add the new feature, it's

00:31:58.760 --> 00:32:00.650
always a question,
is this feature

00:32:00.650 --> 00:32:02.310
Google-specific, for example?

00:32:02.310 --> 00:32:04.820
Is this feature something that
will only be useful for large

00:32:04.820 --> 00:32:07.840
deployments, or is it something
that is generic?

00:32:07.840 --> 00:32:12.690
And not only on the feature
side, but, for example, how do

00:32:12.690 --> 00:32:14.370
we deal with designing Ganeti?

00:32:14.370 --> 00:32:18.070
Do we keep it a purely internal
issue, and do we do a

00:32:18.070 --> 00:32:20.950
closed-design process, and
then just make releases

00:32:20.950 --> 00:32:22.010
externally?

00:32:22.010 --> 00:32:24.490
Or we actually have an
open-source design process,

00:32:24.490 --> 00:32:27.175
and if so, how do we deal
with things that are

00:32:27.175 --> 00:32:30.330
Google-specific or, for example,
depend on the kind of

00:32:30.330 --> 00:32:32.410
hardware that you run Ganeti
on, inside Google or

00:32:32.410 --> 00:32:35.780
networking, and so on.

00:32:35.780 --> 00:32:40.380
So what we've tried is to make
sure that if you run a single

00:32:40.380 --> 00:32:44.530
Ganeti cluster and you don't
need a lot of automation, then

00:32:44.530 --> 00:32:46.320
you get the same features
as you have in Google.

00:32:46.320 --> 00:32:50.390
So by installing Ganeti from
Debian, you get exactly the

00:32:50.390 --> 00:32:52.630
same Ganeti as you run
internally, on a single

00:32:52.630 --> 00:32:54.640
cluster, let's say.

00:32:54.640 --> 00:32:58.250
Where we have internal
components, then is when we

00:32:58.250 --> 00:33:01.450
tie into the Google-specific
features like integration with

00:33:01.450 --> 00:33:03.760
machine management, integration
with monitoring,

00:33:03.760 --> 00:33:08.150
the integration with repairs,
workflow, and so on.

00:33:08.150 --> 00:33:10.610
Now, it would be nice if we
could open all of these, but

00:33:10.610 --> 00:33:13.580
they are mostly
corporation-specific or

00:33:13.580 --> 00:33:14.830
deployment-specific.

00:33:16.810 --> 00:33:21.020
Here we have done other
presentations, and you can

00:33:21.020 --> 00:33:25.200
find slides onto the project
website where we describe what

00:33:25.200 --> 00:33:26.020
we cannot open source.

00:33:26.020 --> 00:33:28.770
At least we describe the
software that we run together

00:33:28.770 --> 00:33:31.690
with Ganeti internally and the
way we deploy it internally,

00:33:31.690 --> 00:33:34.190
so that if you need to have a
large deployment, you can

00:33:34.190 --> 00:33:37.570
duplicate it also.

00:33:37.570 --> 00:33:40.210
There are a couple of
open-source alternatives to

00:33:40.210 --> 00:33:41.800
the tools we use internally.

00:33:41.800 --> 00:33:43.500
Of course, there are monitoring
solutions like

00:33:43.500 --> 00:33:46.400
Nagios and so on, and people
integrate that very

00:33:46.400 --> 00:33:48.170
successfully with Ganeti.

00:33:48.170 --> 00:33:51.430
There are also some open-source,
web-based

00:33:51.430 --> 00:33:55.530
interfaces to Ganeti which you
can use today and they work.

00:33:58.730 --> 00:34:00.990
Another issue that--

00:34:00.990 --> 00:34:04.520
again, it's a problem of
scaling-- is that originally

00:34:04.520 --> 00:34:07.100
we envisioned a small
deployment of

00:34:07.100 --> 00:34:08.080
Ganeti inside Google.

00:34:08.080 --> 00:34:11.630
So Ganeti started simply as a
command-line tool designed by

00:34:11.630 --> 00:34:12.840
sysadmins for sysadmins.

00:34:12.840 --> 00:34:16.500
So this can still be seen today
in the fact Ganeti is

00:34:16.500 --> 00:34:19.080
mainly a command-line
application, which might seem

00:34:19.080 --> 00:34:20.780
outdated in today's world.

00:34:23.469 --> 00:34:26.449
We realized this after while,
that once we deployed more and

00:34:26.449 --> 00:34:30.699
more, Ganeti was not the best
way to actually automate

00:34:30.699 --> 00:34:32.850
interaction with
Ganeti itself.

00:34:32.850 --> 00:34:36.570
So we started adding
an HTTP-based API.

00:34:36.570 --> 00:34:39.100
It's a REST-based, JSON
encoding and so on.

00:34:39.100 --> 00:34:40.870
Very standard.

00:34:40.870 --> 00:34:46.570
And today we have full parity
on the virtual machine

00:34:46.570 --> 00:34:49.120
operations, but not on the
cluster management operations.

00:34:49.120 --> 00:34:51.840
So, for example, if you just
want to create virtual

00:34:51.840 --> 00:34:55.125
machines, reboot them, resize
them, reinstall them, and so

00:34:55.125 --> 00:34:58.640
on, you can do this via the
HTTP-based API from whatever

00:34:58.640 --> 00:34:59.490
language you want.

00:34:59.490 --> 00:35:03.990
We also offer a higher-level
client in Python.

00:35:03.990 --> 00:35:06.820
But if you need to do cluster
management operations, like

00:35:06.820 --> 00:35:09.150
initializing the cluster in the
first place, adding more

00:35:09.150 --> 00:35:13.830
physical machines to the
cluster, doing some other

00:35:13.830 --> 00:35:16.540
not-so-usual cluster operations,
then you need to

00:35:16.540 --> 00:35:20.520
revert to the command
line API, the

00:35:20.520 --> 00:35:21.900
command line interface.

00:35:21.900 --> 00:35:25.770
So internally, we have tools
that use both of them.

00:35:25.770 --> 00:35:29.520
And this is not an ideal
situation, and we are trying,

00:35:29.520 --> 00:35:32.680
long-term , to move to offer
full parity between the two

00:35:32.680 --> 00:35:33.340
interfaces.

00:35:33.340 --> 00:35:36.510
But so far we have
this disconnect.

00:35:40.320 --> 00:35:45.090
Now, something slightly
more technical.

00:35:45.090 --> 00:35:47.640
Once we have dealt with the
processes and how we think

00:35:47.640 --> 00:35:49.580
about Ganeti, how do we
actually deploy Ganeti

00:35:49.580 --> 00:35:51.680
internally?

00:35:51.680 --> 00:35:56.270
We have two main release modes
that we do in Ganeti.

00:35:56.270 --> 00:35:58.190
One is what you call
a major release.

00:35:58.190 --> 00:36:00.640
Here we have release
cycle that is a bit

00:36:00.640 --> 00:36:01.950
longer than we like.

00:36:01.950 --> 00:36:05.050
We do usually seek around
six months.

00:36:05.050 --> 00:36:08.820
And in the major release cycles
is where we add major

00:36:08.820 --> 00:36:11.130
and backwards-incompatible
features.

00:36:11.130 --> 00:36:14.710
And because of this,
we do a very slow

00:36:14.710 --> 00:36:16.700
rollout of the new Ganeti.

00:36:16.700 --> 00:36:19.580
We start with a beta release.

00:36:19.580 --> 00:36:23.530
This is the point that we first
announce both internal

00:36:23.530 --> 00:36:26.130
things and external on the
external developer mailing

00:36:26.130 --> 00:36:29.500
list that the features
for the new

00:36:29.500 --> 00:36:31.670
release are kind of frozen.

00:36:31.670 --> 00:36:34.390
At least are testing your
tools that interact with

00:36:34.390 --> 00:36:35.840
Ganeti and so on.

00:36:35.840 --> 00:36:39.390
And probably here we have a
couple of weeks until people

00:36:39.390 --> 00:36:43.650
test and see what changes they
need to update in their tools.

00:36:43.650 --> 00:36:48.980
And internally, once all the
teams have confirmed that

00:36:48.980 --> 00:36:53.390
compatibility with the new
Ganeti API is OK, we start

00:36:53.390 --> 00:36:53.730
[INAUDIBLE]

00:36:53.730 --> 00:36:54.610
process.

00:36:54.610 --> 00:36:58.650
And we usually start on one or
two Ganeti clusters, and roll

00:36:58.650 --> 00:37:01.840
out incrementally, in a dramatic
fashion, two, four,

00:37:01.840 --> 00:37:03.670
eight and so on clusters.

00:37:03.670 --> 00:37:11.220
By the time we reach about 60%
of the fleet, we have quite a

00:37:11.220 --> 00:37:13.100
large deployment internally.

00:37:13.100 --> 00:37:16.950
We say, OK, the new version of
Ganeti looks good, and we make

00:37:16.950 --> 00:37:19.450
the .0 release.

00:37:19.450 --> 00:37:23.320
So whenever we publish an
external XY.0 release, then

00:37:23.320 --> 00:37:26.420
you can know that it's been
tested on the Google fleet and

00:37:26.420 --> 00:37:28.730
it works well.

00:37:28.730 --> 00:37:33.400
After this, we start we stop the
incremental route and do a

00:37:33.400 --> 00:37:37.250
full-scale roll out on
the internal fleet.

00:37:37.250 --> 00:37:41.600
The problem that we see with
major releases is that being

00:37:41.600 --> 00:37:44.510
incompatible, it's harder
to roll back

00:37:44.510 --> 00:37:45.310
from a major release.

00:37:45.310 --> 00:37:47.815
So this is why we are very
careful in making sure that we

00:37:47.815 --> 00:37:52.230
only roll out on a wide scale
after we know that the

00:37:52.230 --> 00:37:55.740
likeliness of to need to
roll back is very low.

00:37:55.740 --> 00:37:58.370
On the other hand, when we have
a minor release, which

00:37:58.370 --> 00:38:03.800
takes us, for example, from XY.0
to XY.0 plus 1, we try to

00:38:03.800 --> 00:38:05.410
keep these releases small.

00:38:05.410 --> 00:38:10.850
It's about a month between
them and they are fully

00:38:10.850 --> 00:38:13.620
backwards and forwards
compatible, so you can just

00:38:13.620 --> 00:38:15.770
install the new version of
Ganeti, something's broken for

00:38:15.770 --> 00:38:17.750
you, you can easily revert.

00:38:17.750 --> 00:38:22.310
Here, we don't have such
a longer [INAUDIBLE]

00:38:22.310 --> 00:38:22.860
process.

00:38:22.860 --> 00:38:27.060
We just do one or two weeks of
[INAUDIBLE] on a couple of

00:38:27.060 --> 00:38:30.220
clusters, and when that is done,
we roll very quickly to

00:38:30.220 --> 00:38:32.010
all the fleet.

00:38:32.010 --> 00:38:35.870
From time to time, we do add
some new features in the minor

00:38:35.870 --> 00:38:38.570
releases, but they are, again,
backwards and forwards

00:38:38.570 --> 00:38:42.335
compatible, so it's not actually
a problem to do this.

00:38:46.700 --> 00:38:50.640
After discussing the deployment
model, I would like

00:38:50.640 --> 00:38:52.610
to discuss a bit about the
development model.

00:38:52.610 --> 00:38:55.380
We run not a very complex
development model.

00:38:55.380 --> 00:38:58.810
It's the usual write code,
test, and so on.

00:38:58.810 --> 00:39:01.300
The difficulty or the challenge
here is how do we

00:39:01.300 --> 00:39:03.690
integrate actually requests.

00:39:03.690 --> 00:39:06.920
Being an open source project, it
is used both externally and

00:39:06.920 --> 00:39:09.460
internally an extensive way.

00:39:09.460 --> 00:39:12.820
The problem is how to prioritize
requests both from

00:39:12.820 --> 00:39:14.000
the internal things.

00:39:14.000 --> 00:39:17.450
For example, we have requests
from customers.

00:39:17.450 --> 00:39:21.240
They want their VMs to behave
slightly differently.

00:39:21.240 --> 00:39:24.430
For example, we have a group
internally that runs software

00:39:24.430 --> 00:39:27.540
load balancers on top of Ganeti,
and they've seen that,

00:39:27.540 --> 00:39:32.540
when live-migrating VMs, it can
be that the delay during

00:39:32.540 --> 00:39:35.480
live-migration is high enough
that it disrupts the software

00:39:35.480 --> 00:39:36.960
load balancer operation.

00:39:36.960 --> 00:39:39.860
So they want features like
being able to mark VMs as

00:39:39.860 --> 00:39:40.990
never live-migrate.

00:39:40.990 --> 00:39:44.910
It's better to do the HA at
the application level, and

00:39:44.910 --> 00:39:48.040
it's fine to shut down the VM.

00:39:48.040 --> 00:39:51.720
We also have internal requests
from the operations team.

00:39:51.720 --> 00:39:55.800
How, for example, to make sure
that Ganeti behaves better

00:39:55.800 --> 00:39:59.270
when you need to emergency shut
down a big cluster of

00:39:59.270 --> 00:40:03.360
Ganeti and you don't care so
much about the clean shut down

00:40:03.360 --> 00:40:05.810
all the VMs, but instead making
sure that you get the

00:40:05.810 --> 00:40:08.290
storage consistent in the
shortest amount of time

00:40:08.290 --> 00:40:09.900
possible, and so on.

00:40:09.900 --> 00:40:14.200
And the same when you bring
it back up, and so on.

00:40:14.200 --> 00:40:15.670
Besides this, we also
have requests

00:40:15.670 --> 00:40:16.840
from external customers.

00:40:16.840 --> 00:40:21.340
And the interesting part about
external people is that, even

00:40:21.340 --> 00:40:24.270
though they might deploy Ganeti
on the same scale as

00:40:24.270 --> 00:40:29.860
you do both in small clusters
and both in large clusters,

00:40:29.860 --> 00:40:32.720
they run it in different
modes.

00:40:32.720 --> 00:40:35.440
So, for example, when you
initially develop Ganeti, as

00:40:35.440 --> 00:40:37.470
Google does in your shared
storage, we simply offer

00:40:37.470 --> 00:40:39.900
support for local attached
storage.

00:40:39.900 --> 00:40:42.490
So people started asking,
can you support

00:40:42.490 --> 00:40:43.810
at all shared storage?

00:40:43.810 --> 00:40:46.000
Yes, but it's not a priority for
us, please send patches.

00:40:46.000 --> 00:40:51.290
And indeed we had some
significant contributions, for

00:40:51.290 --> 00:40:52.550
example, from the
Greek Research

00:40:52.550 --> 00:40:53.500
and Education Network.

00:40:53.500 --> 00:40:56.150
They are our biggest external
contributors.

00:40:56.150 --> 00:40:59.000
And they added shared storage
support, and you have a

00:40:59.000 --> 00:41:00.960
different number of
options there.

00:41:00.960 --> 00:41:03.700
And they also added
something that--

00:41:03.700 --> 00:41:06.100
as I mentioned, inside Google,
we have machine

00:41:06.100 --> 00:41:07.110
databases and so on.

00:41:07.110 --> 00:41:09.470
And the machine database
contains things such as host

00:41:09.470 --> 00:41:11.770
names, MAC addresses,
IP addresses.

00:41:11.770 --> 00:41:14.620
So when we developed Ganeti,
from our side, we don't need

00:41:14.620 --> 00:41:15.570
Ganeti to handle this.

00:41:15.570 --> 00:41:18.980
But other companies that run
Ganeti, they don't have this

00:41:18.980 --> 00:41:21.460
level of integration, so people
said, maybe we should

00:41:21.460 --> 00:41:23.980
add things like network
management in Ganeti so you

00:41:23.980 --> 00:41:29.070
can have single-place solutions
for all the

00:41:29.070 --> 00:41:32.980
management of also networking,
not only storage and

00:41:32.980 --> 00:41:35.400
virtualization.

00:41:35.400 --> 00:41:37.990
So it's good when external
requests come with patches.

00:41:37.990 --> 00:41:38.650
This is very good.

00:41:38.650 --> 00:41:39.900
Sometimes they don't
come with patches.

00:41:39.900 --> 00:41:43.730
So it's always a question of how
do you prioritize internal

00:41:43.730 --> 00:41:46.390
bugs, which are in the internal
backtracker, versus

00:41:46.390 --> 00:41:47.630
external bugs, and so on.

00:41:47.630 --> 00:41:52.250
And it's not always easy to
manage their release cycle to

00:41:52.250 --> 00:41:55.090
satisfy both internal and
external customers.

00:41:55.090 --> 00:41:57.660
And lastly, we have features
that we, as the development

00:41:57.660 --> 00:41:59.340
team, want to add to Ganeti.

00:41:59.340 --> 00:42:00.660
These are not short-term
features.

00:42:00.660 --> 00:42:03.730
Usually we know that, by this
time next year, we would like

00:42:03.730 --> 00:42:07.580
Ganeti to have this and this
feature added, or evolve in

00:42:07.580 --> 00:42:10.680
this direction, based on where
we see the use inside of

00:42:10.680 --> 00:42:14.780
Google going, or the industry
trends, and so on.

00:42:14.780 --> 00:42:16.580
So it's always a balance.

00:42:16.580 --> 00:42:24.020
After selecting the feature,
usual write code part starts.

00:42:24.020 --> 00:42:26.240
We use Git for version
control.

00:42:26.240 --> 00:42:29.730
So this allows us to work,
both when working in the

00:42:29.730 --> 00:42:31.440
Google office or when
traveling or on a

00:42:31.440 --> 00:42:34.060
plane, which is good.

00:42:34.060 --> 00:42:39.560
We use Python and Haskell for
Ganeti, due to a historical

00:42:39.560 --> 00:42:42.200
accident, or so to say.

00:42:42.200 --> 00:42:45.820
Most of the interaction with the
machine is done in Python,

00:42:45.820 --> 00:42:48.380
but there are some parts
in Ganeti like capacity

00:42:48.380 --> 00:42:50.950
calculation, cluster balancing,
and so on, which is

00:42:50.950 --> 00:42:55.700
more of mathematical model and
maps better to Haskell.

00:42:55.700 --> 00:42:59.340
On top of that, we use a
standard, [? no-based ?]

00:42:59.340 --> 00:43:00.920
build system, [? autoconf ?],
[? automake ?]

00:43:00.920 --> 00:43:01.620
and so on.

00:43:01.620 --> 00:43:04.660
And we use RSD and restructure
texts for documentation.

00:43:04.660 --> 00:43:07.090
So these are all very
standard tools.

00:43:07.090 --> 00:43:10.530
And in general, all our build
system and developer system is

00:43:10.530 --> 00:43:13.060
based on open-source software,
so external people can

00:43:13.060 --> 00:43:16.910
replicate our entire
setup if they want.

00:43:16.910 --> 00:43:21.180
Once this is done, we run tests
locally, of course.

00:43:21.180 --> 00:43:23.800
The test system is again,
very standard.

00:43:23.800 --> 00:43:27.250
In Python, it's based on the
standard unit test library.

00:43:27.250 --> 00:43:29.490
In Haskell, it's based
on QuickCheck.

00:43:29.490 --> 00:43:33.640
We also use Shell test, which
is an open-source tool for

00:43:33.640 --> 00:43:37.370
testing command line tools.

00:43:37.370 --> 00:43:41.030
And after developers run
tests locally, we

00:43:41.030 --> 00:43:42.380
move to buildbot try.

00:43:42.380 --> 00:43:43.820
Buildbot, you might
be aware of.

00:43:43.820 --> 00:43:48.050
It is an open-source continuous
test environment.

00:43:48.050 --> 00:43:49.840
We use it very successfully
internally.

00:43:49.840 --> 00:43:54.130
And they use Buildbot to make
sure that any tests that

00:43:54.130 --> 00:43:57.210
developers run locally also
run in a certain pristine

00:43:57.210 --> 00:44:01.590
environment so that we don't
have variations due to laptops

00:44:01.590 --> 00:44:05.700
or desktops with various Python
libraries and so on.

00:44:05.700 --> 00:44:08.660
And unit test only solves
part of the problem.

00:44:08.660 --> 00:44:11.560
For the other part of the
problem, which is testing how

00:44:11.560 --> 00:44:15.100
actually Ganeti works on the
real machines, we have a QA

00:44:15.100 --> 00:44:16.330
environment.

00:44:16.330 --> 00:44:19.770
But because of the QA
environment, a whole QA run

00:44:19.770 --> 00:44:20.500
takes a lot.

00:44:20.500 --> 00:44:24.380
We usually do this in parallel
with the review process.

00:44:24.380 --> 00:44:28.200
So what does the QA environment
do is go upload

00:44:28.200 --> 00:44:31.510
that version of Ganeti that we
wa want to test on actual

00:44:31.510 --> 00:44:34.580
physical machines, initialize
a cluster, add all the

00:44:34.580 --> 00:44:37.030
physical machines to the
cluster, and run through

00:44:37.030 --> 00:44:42.210
almost all the operations of the
cluster that you can do.

00:44:42.210 --> 00:44:46.220
However, the downside of the QA
environment is that Ganeti

00:44:46.220 --> 00:44:47.590
is quite complex.

00:44:47.590 --> 00:44:51.300
It supports seek storage
backends, [INAUDIBLE]

00:44:51.300 --> 00:44:54.890
free network backends,
it supports free

00:44:54.890 --> 00:44:56.500
virtualization solutions.

00:44:56.500 --> 00:45:00.040
So it's not feasible to test
all of these combinations.

00:45:00.040 --> 00:45:03.970
On top of that, KVM which is the
most complex backend, for

00:45:03.970 --> 00:45:05.980
example, has over forty
parameters.

00:45:05.980 --> 00:45:08.730
And there are some bugs which
manifest only in certain

00:45:08.730 --> 00:45:09.480
corner cases.

00:45:09.480 --> 00:45:14.670
A recent example is, for
example, that if you take KVM

00:45:14.670 --> 00:45:18.490
instance, and you run it with
VMC frontend, and with the

00:45:18.490 --> 00:45:21.610
custom key map, and you
live-migrated, this triggered

00:45:21.610 --> 00:45:22.390
bugging Ganeti.

00:45:22.390 --> 00:45:24.210
But only in this
configuration.

00:45:24.210 --> 00:45:28.010
So while we do a test the
actual configurations we

00:45:28.010 --> 00:45:31.500
deploy Ganeti internally, we
cannot test all the possible

00:45:31.500 --> 00:45:33.360
configurations of Ganeti.

00:45:33.360 --> 00:45:38.010
And here we rely on external
people to actually test setups

00:45:38.010 --> 00:45:41.560
that we don't run and maybe
don't think necessarily of,

00:45:41.560 --> 00:45:44.030
and see how it works for them.

00:45:44.030 --> 00:45:46.710
So while the QA runs, which
takes usually between one and

00:45:46.710 --> 00:45:50.090
three hours, depending on the
configuration, we do the code

00:45:50.090 --> 00:45:52.270
review process, as you might
know, inside of Google.

00:45:52.270 --> 00:45:55.480
Or code goes through a review
process and we keep the same

00:45:55.480 --> 00:45:58.130
model for Ganeti even though
it's an open-source model.

00:45:58.130 --> 00:46:00.705
And here again we use the
standard open-source tools.

00:46:00.705 --> 00:46:03.820
It's git format-patch, git
send-email , and a mailing

00:46:03.820 --> 00:46:06.820
list-based review process.

00:46:06.820 --> 00:46:10.560
In the review process, we care
about things like, of course,

00:46:10.560 --> 00:46:11.690
code quality and so on.

00:46:11.690 --> 00:46:14.850
But also style compliance.

00:46:14.850 --> 00:46:17.340
We try to have a consistent
style across all of Ganeti

00:46:17.340 --> 00:46:21.200
code base so that new developers
can easily come and

00:46:21.200 --> 00:46:26.120
touch all parts of the
code base and so on.

00:46:26.120 --> 00:46:31.170
And once the review process is
done, and, actually, hopefully

00:46:31.170 --> 00:46:36.860
the QA process has passed
successfully, we commit the

00:46:36.860 --> 00:46:40.430
code and then we push it to the
[? option ?] repository.

00:46:40.430 --> 00:46:44.980
And again, the repository
is fully visible.

00:46:44.980 --> 00:46:47.640
We don't have an internal
repository, and all the

00:46:47.640 --> 00:46:50.510
comments go to the extent of
Git repository, and you can

00:46:50.510 --> 00:46:52.760
follow the development there.

00:46:52.760 --> 00:46:56.790
And also, the design process
if I mentioned also is the

00:46:56.790 --> 00:46:59.260
design documents are also inside
the Ganeti source tree,

00:46:59.260 --> 00:47:02.850
so you can watch the design
process going exactly through

00:47:02.850 --> 00:47:05.680
the same thing, except no
unit test for design.

00:47:05.680 --> 00:47:09.590
But again, review discussion on
the mailing list and so on.

00:47:09.590 --> 00:47:13.410
Once the code is pushed to the
tree, Buildbot again will go

00:47:13.410 --> 00:47:17.220
and rerun now the officially
committed code, unit tests a

00:47:17.220 --> 00:47:18.910
longer QA this time.

00:47:18.910 --> 00:47:22.390
And once that's done and all the
Buildbot tests are green,

00:47:22.390 --> 00:47:25.430
then basically we are done with
the feature and people

00:47:25.430 --> 00:47:26.560
go, look at the [INAUDIBLE]

00:47:26.560 --> 00:47:29.140
again, internal, external,
and start

00:47:29.140 --> 00:47:30.950
working on a new feature.

00:47:30.950 --> 00:47:32.700
And with that, thank you.

00:47:32.700 --> 00:47:34.914
I pass it back to Jeff.

00:47:34.914 --> 00:47:39.590
[APPLAUSE]

00:47:39.590 --> 00:47:42.480
JEFF BATES: So I know we've got
a few minutes left here.

00:47:42.480 --> 00:47:45.190
Hopefully this is
has been useful.

00:47:45.190 --> 00:47:47.490
These are the lessons that we've
learned as Google has

00:47:47.490 --> 00:47:52.400
grown, and the various tools
that we've used, and how we've

00:47:52.400 --> 00:47:54.660
moved things forward.

00:47:54.660 --> 00:47:57.290
Given the last few minutes we
have left, if there are any

00:47:57.290 --> 00:47:59.530
questions I'd love
to take some.

00:47:59.530 --> 00:48:02.870
But thank you all for coming
and I hope you've

00:48:02.870 --> 00:48:04.200
had a great day here.

00:48:14.679 --> 00:48:15.690
Yeah?

00:48:15.690 --> 00:48:17.980
AUDIENCE: I was wondering if
you could say a few words

00:48:17.980 --> 00:48:22.550
about how you manage developer
laptops, especially with

00:48:22.550 --> 00:48:26.470
regards to building them
before and upgrading or

00:48:26.470 --> 00:48:27.720
repairing after damages.

00:48:30.280 --> 00:48:31.660
JEFF BATES: So when you're
talking about damages, are you

00:48:31.660 --> 00:48:35.195
referring to the physical
damage of the machines?

00:48:35.195 --> 00:48:39.510
AUDIENCE: Anything that would
require a replacement of the

00:48:39.510 --> 00:48:41.990
hard drive in particular,
I guess.

00:48:41.990 --> 00:48:47.010
If the developer's data
has to be migrated.

00:48:47.010 --> 00:48:48.260
JEFF BATES: Bob, do
you want to--

00:48:51.140 --> 00:48:52.535
since you get to deal
with that often?

00:49:01.370 --> 00:49:02.770
ROBERT: So I'm Robert.

00:49:02.770 --> 00:49:05.960
I did another presentation
earlier this week about how we

00:49:05.960 --> 00:49:07.580
do internal support.

00:49:07.580 --> 00:49:09.810
So your question was,
how do you deal

00:49:09.810 --> 00:49:11.950
with developer laptops?

00:49:11.950 --> 00:49:15.070
We actually have some policies
in place where you're not

00:49:15.070 --> 00:49:17.140
actually supposed to store
code on laptops.

00:49:17.140 --> 00:49:20.660
But typically, when you're
talking about hard drives,

00:49:20.660 --> 00:49:21.370
they are encrypted.

00:49:21.370 --> 00:49:29.270
So we do a data transfer to a
new hard drive, and replace it

00:49:29.270 --> 00:49:30.830
in the laptop.

00:49:30.830 --> 00:49:34.460
Or, if it's going to take a
long time, it'll be a new

00:49:34.460 --> 00:49:40.410
laptop with a similar build
laptop, but a new laptop.

00:49:40.410 --> 00:49:44.580
And essentially copy over the
critical stuff we can.

00:49:44.580 --> 00:49:46.590
Essentially we build it
for the user and get

00:49:46.590 --> 00:49:49.010
them on their way.

00:49:49.010 --> 00:49:52.290
Does that answer
your question?

00:49:52.290 --> 00:49:55.840
AUDIENCE: I was interested in
how you establish the base

00:49:55.840 --> 00:50:02.990
images for what the fresh laptop
install looks like.

00:50:02.990 --> 00:50:08.580
ROBERT: So the images we use to
give out to just anybody?

00:50:08.580 --> 00:50:09.580
AUDIENCE: Yeah.

00:50:09.580 --> 00:50:10.970
ROBERT: Yeah, we could talk
a little bit about that.

00:50:10.970 --> 00:50:14.840
We have basically standard
images for each

00:50:14.840 --> 00:50:17.250
model, or each OS.

00:50:17.250 --> 00:50:19.140
So Windows, Mac, and Linux.

00:50:19.140 --> 00:50:23.450
And then, from that standard
model, there's typically

00:50:23.450 --> 00:50:26.630
recommended packages that you
can install for developers, or

00:50:26.630 --> 00:50:31.060
for someone working in legal,
or for someone working in

00:50:31.060 --> 00:50:32.680
business applications.

00:50:32.680 --> 00:50:35.660
And that's basically a vanilla
image, and then the user

00:50:35.660 --> 00:50:38.300
basically determines what
they need with a

00:50:38.300 --> 00:50:39.640
recommended list, usually.

00:50:39.640 --> 00:50:42.740
And that's usually set up within
the first day or second

00:50:42.740 --> 00:50:44.422
day that they're working.

00:50:44.422 --> 00:50:46.255
Does that answer
your question?

00:50:46.255 --> 00:50:48.240
AUDIENCE: Yeah, I guess so.

00:50:48.240 --> 00:50:51.790
IUSTIN POP: And if I just might
add something here.

00:50:51.790 --> 00:50:55.910
What we try to do is make sure
that most of the developer

00:50:55.910 --> 00:50:58.120
builds and so on are not
on the actual laptop.

00:50:58.120 --> 00:51:02.020
So you use the laptop for a
regular machine, but, as I

00:51:02.020 --> 00:51:04.660
said, we use extensive internal
virtual desktops.

00:51:04.660 --> 00:51:07.840
So people get the laptop, but
the laptop is mostly used to

00:51:07.840 --> 00:51:10.090
connect to a virtual machine,
which runs in the data center,

00:51:10.090 --> 00:51:12.040
and there you have all your
desktop environment, built

00:51:12.040 --> 00:51:13.200
environment, and so on.

00:51:13.200 --> 00:51:16.350
So this mitigates, to a
certain degree, the

00:51:16.350 --> 00:51:20.090
replacement of the
laptop and so on.

00:51:20.090 --> 00:51:22.010
JEFF BATES: One of the other
benefits of moving--

00:51:22.010 --> 00:51:24.000
I was talking about moving
to the cloud earlier--

00:51:24.000 --> 00:51:26.840
we use Docs for almost
everything.

00:51:26.840 --> 00:51:31.450
Which means that, for anything
that has been written, whether

00:51:31.450 --> 00:51:34.960
I'm using my Chromebook, or
whether I'm using my MacBook,

00:51:34.960 --> 00:51:37.250
or whatever else might
be, I've got it

00:51:37.250 --> 00:51:38.065
then, there and available.

00:51:38.065 --> 00:51:41.620
And we try to apply that as
broadly as we possibly can in

00:51:41.620 --> 00:51:48.080
terms of all types of
information as well.

00:51:48.080 --> 00:51:49.930
AUDIENCE: Thanks.

00:51:49.930 --> 00:51:53.360
AUDIENCE: So I know you guys
write a lot of code.

00:51:53.360 --> 00:51:58.520
I'm just curious how similar
or different your SDLC and

00:51:58.520 --> 00:52:01.230
your tools or processes look
compared to the product

00:52:01.230 --> 00:52:02.480
engineering teams.

00:52:05.590 --> 00:52:10.330
IDs, the same practices
and standards?

00:52:10.330 --> 00:52:15.330
JEFF BATES: As closely as we
possibly can, we try to follow

00:52:15.330 --> 00:52:17.930
the same practices
and procedures.

00:52:17.930 --> 00:52:21.200
There's a little bit of variance
in terms of some of

00:52:21.200 --> 00:52:28.740
the tools the we build, for
instance, like how you have to

00:52:28.740 --> 00:52:31.810
do compliance sometimes,
and things like that.

00:52:31.810 --> 00:52:37.220
You have, shall we say,
non-technical external forces

00:52:37.220 --> 00:52:41.070
which will shape how you have
to keep data, and how it has

00:52:41.070 --> 00:52:43.010
to be made available,
and all of that.

00:52:43.010 --> 00:52:45.750
And so in that case, we will
have to do something that is a

00:52:45.750 --> 00:52:46.910
little bit different.

00:52:46.910 --> 00:52:52.230
But by and large, we try to run
exactly the same way as

00:52:52.230 --> 00:52:54.230
the prod environment does
as well and keeping

00:52:54.230 --> 00:52:55.370
with the same practices.

00:52:55.370 --> 00:52:59.960
So the same code reviews that
go through, making sure that

00:52:59.960 --> 00:53:03.800
all the engineers who are
looking at it that they're

00:53:03.800 --> 00:53:05.760
working in the right language,
and that they're following the

00:53:05.760 --> 00:53:07.190
same policies and procedures.

00:53:07.190 --> 00:53:11.200
And actually, in fact, there
will be people who work within

00:53:11.200 --> 00:53:14.890
Corporate Engineering who have
come from the production

00:53:14.890 --> 00:53:17.080
environment, and vice versa.

00:53:17.080 --> 00:53:20.540
That's one of the things we do
a lot of within Google, is

00:53:20.540 --> 00:53:23.390
encouraging people to work
within different areas.

00:53:23.390 --> 00:53:27.240
And so there's this
Circle of Life.

00:53:27.240 --> 00:53:30.100
But that would imply that people
are dying, so we try to

00:53:30.100 --> 00:53:30.890
avoid that part.

00:53:30.890 --> 00:53:33.820
But other than that, it is
something where we try to keep

00:53:33.820 --> 00:53:36.070
that circle inside of there,
so that you get the

00:53:36.070 --> 00:53:38.190
information that people have
learned from working on the

00:53:38.190 --> 00:53:41.400
production side that they can
apply within the internal

00:53:41.400 --> 00:53:43.640
environment, and vice
versa as well.

00:53:43.640 --> 00:53:49.620
So barring external forces,
or another need set that's

00:53:49.620 --> 00:53:52.680
associated with it, we
very much try to

00:53:52.680 --> 00:53:53.900
follow this same thing.

00:53:53.900 --> 00:53:56.230
It's a little bit different when
you start to talk about

00:53:56.230 --> 00:53:59.610
if we are integrating something
that we bought, for

00:53:59.610 --> 00:54:03.300
instance, because that's just
kind of a different

00:54:03.300 --> 00:54:05.150
development model
at that point.

00:54:05.150 --> 00:54:08.440
When you're using something that
is quote unquote "off the

00:54:08.440 --> 00:54:11.940
shelf." But when it comes to all
the things that we build,

00:54:11.940 --> 00:54:15.100
we try to adhere to
the same things.

00:54:18.540 --> 00:54:22.530
But one of the things that we
really try to do that may be a

00:54:22.530 --> 00:54:27.110
bit different is developing as
much as we can on top of the

00:54:27.110 --> 00:54:31.660
cloud platform, because it
just makes life way, way

00:54:31.660 --> 00:54:32.880
easier for us.

00:54:32.880 --> 00:54:35.720
And we've got a different scale
that we're working with

00:54:35.720 --> 00:54:36.530
at that point.

00:54:36.530 --> 00:54:39.310
So that is the difference
as well.

00:54:39.310 --> 00:54:40.200
AUDIENCE: Thanks.

00:54:40.200 --> 00:54:44.390
And as and enterprise IT guy, I
appreciate when you rub off

00:54:44.390 --> 00:54:48.336
on the product team, as
far as compliance and

00:54:48.336 --> 00:54:50.280
those external forces.

00:54:50.280 --> 00:54:50.590
JEFF BATES: Yes.

00:54:50.590 --> 00:54:52.690
The expression they get
sometimes when you have to

00:54:52.690 --> 00:54:55.120
explain things is slightly
priceless as well.

00:54:55.120 --> 00:54:56.460
You have to do what for what?

00:54:56.460 --> 00:54:58.150
You don't even want
to know why.

00:55:01.100 --> 00:55:01.510
AUDIENCE: OK.

00:55:01.510 --> 00:55:04.370
May ask, it wasn't completely
apparent to me.

00:55:04.370 --> 00:55:06.940
Of this infrastructure and the
tooling you mentioned, like,

00:55:06.940 --> 00:55:08.460
for instance, Ganeti.

00:55:08.460 --> 00:55:12.240
Is that what's bugging up
product development, or is it

00:55:12.240 --> 00:55:14.350
also what's behind the external

00:55:14.350 --> 00:55:17.310
products, like Gmail and--

00:55:17.310 --> 00:55:19.460
IUSTIN POP: So as you mentioned,
this is only

00:55:19.460 --> 00:55:20.710
Corporate IT.

00:55:20.710 --> 00:55:22.940
So for example, Ganeti is
used for the internal

00:55:22.940 --> 00:55:24.080
system, as I mentioned.

00:55:24.080 --> 00:55:26.730
DNS servers, caches,
and so on.

00:55:26.730 --> 00:55:29.570
But not for the prod network.

00:55:29.570 --> 00:55:32.370
Those are very different
in that sense.

00:55:32.370 --> 00:55:36.250
We use Ganeti for the non-cloud
part, and all those

00:55:36.250 --> 00:55:37.862
are cloud product,
in that sense.

00:55:37.862 --> 00:55:38.260
AUDIENCE: OK.

00:55:38.260 --> 00:55:40.250
Now I would like to ask two
specific questions.

00:55:40.250 --> 00:55:44.120
What sort of virtualization
technology Ganeti uses?

00:55:44.120 --> 00:55:46.550
IUSTIN POP: So Ganeti supports
Xen and KVM as

00:55:46.550 --> 00:55:48.090
production-level hypervisors.

00:55:48.090 --> 00:55:51.840
We also have LXC as an
experimental mode.

00:55:51.840 --> 00:55:53.810
Please try and report back.

00:55:53.810 --> 00:55:54.280
AUDIENCE: OK.

00:55:54.280 --> 00:55:57.400
And the last one is I would
like you to add a comment

00:55:57.400 --> 00:56:00.860
about how do you handle
diversity.

00:56:00.860 --> 00:56:03.820
Because you obviously have a
large fleet of machines, how

00:56:03.820 --> 00:56:07.320
do you handle diversity
on operating systems?

00:56:07.320 --> 00:56:09.730
I mean, running different
versions or

00:56:09.730 --> 00:56:10.920
the stuff like that.

00:56:10.920 --> 00:56:13.890
IUSTIN POP: So the way Ganeti
itself deals with operating

00:56:13.890 --> 00:56:17.610
system is that you simply have
to give operating system image

00:56:17.610 --> 00:56:19.220
definition.

00:56:19.220 --> 00:56:20.340
It's a very simple API.

00:56:20.340 --> 00:56:21.550
You have to provide
five scripts.

00:56:21.550 --> 00:56:24.410
One for creating the operating
systems, one for renaming

00:56:24.410 --> 00:56:27.020
them, import, export,
and so on.

00:56:27.020 --> 00:56:32.280
Internally, we don't run very
varied operating systems.

00:56:32.280 --> 00:56:35.660
So we run very standard
Linux and so on.

00:56:35.660 --> 00:56:38.430
The parts that we cannot
virtualize are the ones that

00:56:38.430 --> 00:56:40.450
are not certified
to run on their

00:56:40.450 --> 00:56:41.960
virtualization and sold on.

00:56:41.960 --> 00:56:46.240
So while Ganeti supports
multiple operating systems, we

00:56:46.240 --> 00:56:49.230
don't have a very heterogeneous
fleet.

00:56:49.230 --> 00:56:51.520
And this is, again, a difference
from external

00:56:51.520 --> 00:56:53.910
deployments, where usually
you have heterogeneous

00:56:53.910 --> 00:56:54.270
environments.

00:56:54.270 --> 00:56:54.450
AUDIENCE: OK.

00:56:54.450 --> 00:56:57.860
So you try to minimize diversity
in your fleet?

00:56:57.860 --> 00:56:59.250
IUSTIN POP: As much
as possible, yes.

00:56:59.250 --> 00:57:00.370
We have exceptions, of course.

00:57:00.370 --> 00:57:02.020
And if it needs to be
an exception, of

00:57:02.020 --> 00:57:02.990
course we allow it.

00:57:02.990 --> 00:57:06.580
But we try to keep it
homogeneous because it's

00:57:06.580 --> 00:57:07.830
easier to manage that.

00:57:12.200 --> 00:57:14.710
JEFF BATES: Well thank you
all for coming out.

00:57:14.710 --> 00:57:18.360
I think we are 30 seconds away
from the end of our time.

00:57:18.360 --> 00:57:21.710
So have a wonderful evening,
and thank you for coming.

