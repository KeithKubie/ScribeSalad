WEBVTT
Kind: captions
Language: en

00:00:00.880 --> 00:00:06.330
I can specify the output language, the
units in metric or imperial and more.

00:00:06.330 --> 00:00:07.850
Check out the link in
the instruction notes for

00:00:07.850 --> 00:00:09.500
a full list of optional parameters.

00:00:10.560 --> 00:00:13.380
Let's build this feature into our
site in the form of a search within

00:00:13.380 --> 00:00:14.080
time function.

00:00:15.110 --> 00:00:18.750
We're going to expand our user control
window to allow the user to specify

00:00:18.750 --> 00:00:22.140
the number of minutes they want to
take to get to a certain place,

00:00:22.140 --> 00:00:24.570
whether they walk, bike,
drive, or take transit.

00:00:25.806 --> 00:00:28.730
We could do it within a certain
distance, but in New York City I know

00:00:28.730 --> 00:00:32.900
people usually don't drive, and
I think time matters more to our users.

00:00:32.900 --> 00:00:35.070
So we're adding in a bit more html here.

00:00:36.340 --> 00:00:39.740
We're going to give the users the option
to choose a maximum duration, so

00:00:39.740 --> 00:00:42.900
the maximum time they'd
like to spend commuting and

00:00:42.900 --> 00:00:45.200
an option to chose a travel mode.

00:00:45.200 --> 00:00:48.830
Then we'll give them a place to input
the address that they're interested in.

00:00:48.830 --> 00:00:52.190
And we'll prompt them, for
something like their office address.

00:00:52.190 --> 00:00:53.690
And a go button.

00:00:53.690 --> 00:00:55.100
And we'll add in some additional CSS.

00:00:56.220 --> 00:00:59.990
Then, as usual, we'll just add
an event listener on the go button,

00:00:59.990 --> 00:01:02.870
to call our new function which
we'll call searchwithintime.

00:01:04.129 --> 00:01:08.510
Now at the high level, what the
searchwithintime function is going to do

00:01:08.510 --> 00:01:12.780
is use the DistanceMatrixService
to calculate the distances and

00:01:12.780 --> 00:01:16.780
the durations of travel between
each of our markers and

00:01:16.780 --> 00:01:19.270
the location that the user entered.

00:01:19.270 --> 00:01:22.960
We'll create our DistanceMatrixService
which we'll use and

00:01:22.960 --> 00:01:27.180
we'll capture the user entered address
and check to make sure it isn't blank.

00:01:27.180 --> 00:01:32.650
If it isn't, we'll create an origins
array from our list of markers.

00:01:32.650 --> 00:01:36.610
And use the user enter address
as the destination and

00:01:36.610 --> 00:01:40.280
we'll capture the travel mode that
was also entered by the user.

00:01:40.280 --> 00:01:43.680
Finally, we'll call
the getdistancematrix function,

00:01:43.680 --> 00:01:48.470
passing in our origins, our single
destination, the travel mode and

00:01:48.470 --> 00:01:51.280
specifying the unit should be imperial.

00:01:51.280 --> 00:01:55.710
When we get back the response we'll
check to make sure the status is okay

00:01:55.710 --> 00:01:59.910
and if the status is okay we'll
display all the markers that

00:01:59.910 --> 00:02:01.680
fit the criteria that the user entered.

00:02:01.680 --> 00:02:04.890
And we'll do this in a separate
function since this is getting huge.

00:02:04.890 --> 00:02:06.410
If the status wasn't okay,

00:02:06.410 --> 00:02:09.169
we're going to alert the user
with what the status was.

00:02:09.169 --> 00:02:12.990
This is an example of a more
specific error message.

00:02:12.990 --> 00:02:16.200
Let's move onto the next piece to
display the markers that were within

00:02:16.200 --> 00:02:18.290
the time that the user entered.

00:02:18.290 --> 00:02:21.160
Okay, so again,
we just used the DistanceMatrixService.

00:02:21.160 --> 00:02:24.480
We passed in all of our
markers as the origins and

00:02:24.480 --> 00:02:26.660
the users important place
as the destination.

00:02:27.680 --> 00:02:29.310
Now that we got back the response,

00:02:29.310 --> 00:02:32.080
we have to parse through
it to get the useful data.

00:02:32.080 --> 00:02:36.700
We'll recapture all of the origins and
destinations from the response, and

00:02:36.700 --> 00:02:40.850
also capture that user entered maximum
travel duration which was in minutes.

00:02:41.930 --> 00:02:47.670
We have a nested loop here to create one
element per origin and destination pair.

00:02:47.670 --> 00:02:52.810
That element is going to have a distance
and duration from point A to point B.

00:02:52.810 --> 00:02:54.700
We want to capture both the distance and

00:02:54.700 --> 00:02:58.920
the duration in text form because we're
going to display that to our users.

00:02:58.920 --> 00:03:02.090
And we also need the value
of the duration.

00:03:02.090 --> 00:03:05.110
Which we're going to compare
to our maximum value

00:03:05.110 --> 00:03:06.900
that was entered by the user.

00:03:06.900 --> 00:03:10.760
If the duration is within
that maximum value

00:03:10.760 --> 00:03:13.290
then we'll display
that marker on the map.

00:03:13.290 --> 00:03:16.110
We're also keeping track of
this at least one variable.

00:03:17.260 --> 00:03:20.160
This is important because
even if we get an okay

00:03:20.160 --> 00:03:24.770
response from the getdistancematrix
function, if we don't find any markers

00:03:24.770 --> 00:03:28.210
that are within the acceptable
commute we want to let the user know.

00:03:28.210 --> 00:03:32.270
For each marker that does appear,
we'll create a small info window.

00:03:32.270 --> 00:03:36.540
We'll display the duration and the
journey distance in that info window.

00:03:36.540 --> 00:03:39.530
Finally, we'll put a little event
listener on to that marker so

00:03:39.530 --> 00:03:43.450
that if the user clicks on it,
we'll close the little info window and

00:03:43.450 --> 00:03:45.960
make room for a big one that
has a street view panorama.

00:03:47.010 --> 00:03:48.080
Let's test out this feature.

00:03:49.960 --> 00:03:52.777
I'd like to stay within a 30
minute walk of my office.

00:03:52.777 --> 00:03:55.216
[BLANK_AUDIO]

00:03:55.216 --> 00:03:57.790
I can see that two listings
fit that criteria.

00:03:59.350 --> 00:04:01.980
And if I select them,
I can see more details.

00:04:01.980 --> 00:04:04.990
Before we move on, let's review
the distance matrix functionality.

