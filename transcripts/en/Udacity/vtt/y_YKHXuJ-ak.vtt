WEBVTT
Kind: captions
Language: en

00:00:00.490 --> 00:00:01.500
Throughout the course, Carolyn and

00:00:01.500 --> 00:00:04.190
I introduced a lot of new concepts and terminology.

00:00:04.190 --> 00:00:07.360
To help you keep track of everything, we'll build a map of these concepts,

00:00:07.360 --> 00:00:10.360
often asking you to think about how these ideas relate to one another and

00:00:10.360 --> 00:00:13.030
where the new ideas fit in to the grand scheme of things.

00:00:13.030 --> 00:00:14.440
Let's get started by writing down a few of

00:00:14.440 --> 00:00:16.350
the things we've talked about already.

00:00:16.350 --> 00:00:19.760
The first and biggest concept we've introduced is Version Control.

00:00:19.760 --> 00:00:23.600
This refers to any system that allows for systematic versioning of content.

00:00:23.600 --> 00:00:26.510
That is anything that makes it easy to create, store, and

00:00:26.510 --> 00:00:30.740
access different versions of the same documents, code, recipes, or

00:00:30.740 --> 00:00:32.290
whatever content you're working on.

00:00:32.290 --> 00:00:35.410
Here are some specific Version Control systems we've talked about.

00:00:35.410 --> 00:00:37.020
These are all types of Version Controls, so

00:00:37.020 --> 00:00:38.990
we could draw lines between each of them and

00:00:38.990 --> 00:00:43.710
the Version Control node and annotate the connections with labels like Type of.

00:00:43.710 --> 00:00:47.650
But if we do that, our map will soon get cluttered with tiny annotations.

00:00:47.650 --> 00:00:50.392
Instead, let's use colors to indicate what type of relationship each

00:00:50.392 --> 00:00:52.000
connection has.

00:00:52.000 --> 00:00:54.700
We'll use this color blue to mean Type of.

00:00:54.700 --> 00:00:58.540
As you've probably gathered by now, the system we'll be focusing on is Git.

00:00:58.540 --> 00:01:01.390
Though we will continue mentioning some of these others from time to time to

00:01:01.390 --> 00:01:03.920
contrast with Git using our comparison chart.

00:01:05.030 --> 00:01:07.480
The most recent concept we've come across is the Git Commit.

00:01:08.520 --> 00:01:12.000
This new concept is not directly related to Version Control.

00:01:12.000 --> 00:01:14.530
It connects through the Git system.

00:01:14.530 --> 00:01:17.170
And if we drew lines between every second order connection,

00:01:17.170 --> 00:01:19.170
our map would quickly get out of hand.

00:01:19.170 --> 00:01:23.660
Some of these other systems also involve some similar concepts to Commits.

00:01:23.660 --> 00:01:25.870
But they don't actually call them that.

00:01:25.870 --> 00:01:27.520
So we'll just keep it connected with Git.

00:01:27.520 --> 00:01:31.060
Do you think that this should be the same kind of connection as the ones we

00:01:31.060 --> 00:01:32.430
already have?

00:01:32.430 --> 00:01:35.300
Remember that those were type of connections.

00:01:35.300 --> 00:01:38.880
Commits aren't a type of Git, but rather a component.

00:01:38.880 --> 00:01:41.820
So the connection here should be a new color that indicates a part

00:01:41.820 --> 00:01:43.070
of connection.

00:01:43.070 --> 00:01:44.740
We'll use green for that.

00:01:44.740 --> 00:01:46.360
And we'll add the label here.

00:01:46.360 --> 00:01:49.260
Note this time, I walked you through the process of adding items to

00:01:49.260 --> 00:01:52.810
the concept map to give you an idea of what we're doing with it.

00:01:52.810 --> 00:01:56.730
Later on, you'll be asked to decide how new items fit in for yourself.

00:01:56.730 --> 00:01:59.550
Now, let's go to Caroline to find out how to view previous Commits and Git.

