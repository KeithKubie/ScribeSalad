WEBVTT
Kind: captions
Language: en

00:00:08.059 --> 00:00:10.669
 
hello my name is reto Meier and welcome

00:00:10.669 --> 00:00:10.679
hello my name is reto Meier and welcome
 

00:00:10.679 --> 00:00:12.589
hello my name is reto Meier and welcome
to a special extend edition of this week

00:00:12.589 --> 00:00:12.599
to a special extend edition of this week
 

00:00:12.599 --> 00:00:13.669
to a special extend edition of this week
in Android development

00:00:13.669 --> 00:00:13.679
in Android development
 

00:00:13.679 --> 00:00:17.090
in Android development
featuring what's new in Android 4.3 last

00:00:17.090 --> 00:00:17.100
featuring what's new in Android 4.3 last
 

00:00:17.100 --> 00:00:18.500
featuring what's new in Android 4.3 last
week was a big one for Android with the

00:00:18.500 --> 00:00:18.510
week was a big one for Android with the
 

00:00:18.510 --> 00:00:20.240
week was a big one for Android with the
release of the newest model Nexus 7

00:00:20.240 --> 00:00:20.250
release of the newest model Nexus 7
 

00:00:20.250 --> 00:00:21.769
release of the newest model Nexus 7
measuring almost two millimeters thinner

00:00:21.769 --> 00:00:21.779
measuring almost two millimeters thinner
 

00:00:21.779 --> 00:00:23.120
measuring almost two millimeters thinner
and 50 grams lighter than its

00:00:23.120 --> 00:00:23.130
and 50 grams lighter than its
 

00:00:23.130 --> 00:00:23.750
and 50 grams lighter than its
predecessor

00:00:23.750 --> 00:00:23.760
predecessor
 

00:00:23.760 --> 00:00:25.970
predecessor
it also features surround sound 5.1

00:00:25.970 --> 00:00:25.980
it also features surround sound 5.1
 

00:00:25.980 --> 00:00:28.640
it also features surround sound 5.1
front and rear facing cameras a 1.5

00:00:28.640 --> 00:00:28.650
front and rear facing cameras a 1.5
 

00:00:28.650 --> 00:00:30.800
front and rear facing cameras a 1.5
gigahertz processor 2 gigabytes of

00:00:30.800 --> 00:00:30.810
gigahertz processor 2 gigabytes of
 

00:00:30.810 --> 00:00:33.500
gigahertz processor 2 gigabytes of
memory and a 1920 by 1200 resolution

00:00:33.500 --> 00:00:33.510
memory and a 1920 by 1200 resolution
 

00:00:33.510 --> 00:00:36.799
memory and a 1920 by 1200 resolution
display all this and it confers a +3 to

00:00:36.799 --> 00:00:36.809
display all this and it confers a +3 to
 

00:00:36.809 --> 00:00:38.630
display all this and it confers a +3 to
both public speaking and asking our

00:00:38.630 --> 00:00:38.640
both public speaking and asking our
 

00:00:38.640 --> 00:00:40.970
both public speaking and asking our
girls if your apps aren't optimized for

00:00:40.970 --> 00:00:40.980
girls if your apps aren't optimized for
 

00:00:40.980 --> 00:00:42.560
girls if your apps aren't optimized for
tablets now is a good time to get

00:00:42.560 --> 00:00:42.570
tablets now is a good time to get
 

00:00:42.570 --> 00:00:44.630
tablets now is a good time to get
started but the real news for developers

00:00:44.630 --> 00:00:44.640
started but the real news for developers
 

00:00:44.640 --> 00:00:46.819
started but the real news for developers
is the release of Android 4.3 in

00:00:46.819 --> 00:00:46.829
is the release of Android 4.3 in
 

00:00:46.829 --> 00:00:48.560
is the release of Android 4.3 in
addition to the inclusion of even more

00:00:48.560 --> 00:00:48.570
addition to the inclusion of even more
 

00:00:48.570 --> 00:00:50.119
addition to the inclusion of even more
butter it includes support for

00:00:50.119 --> 00:00:50.129
butter it includes support for
 

00:00:50.129 --> 00:00:52.490
butter it includes support for
restricted profiles OpenGL ES 3

00:00:52.490 --> 00:00:52.500
restricted profiles OpenGL ES 3
 

00:00:52.500 --> 00:00:54.619
restricted profiles OpenGL ES 3
Bluetooth Low Energy and improvements to

00:00:54.619 --> 00:00:54.629
Bluetooth Low Energy and improvements to
 

00:00:54.629 --> 00:00:56.420
Bluetooth Low Energy and improvements to
media accessibility and performance

00:00:56.420 --> 00:00:56.430
media accessibility and performance
 

00:00:56.430 --> 00:00:58.819
media accessibility and performance
analysis let's take a closer look at

00:00:58.819 --> 00:00:58.829
analysis let's take a closer look at
 

00:00:58.829 --> 00:01:02.420
analysis let's take a closer look at
some of these new API s profiles builds

00:01:02.420 --> 00:01:02.430
some of these new API s profiles builds
 

00:01:02.430 --> 00:01:04.130
some of these new API s profiles builds
an e multi user user functionality

00:01:04.130 --> 00:01:04.140
an e multi user user functionality
 

00:01:04.140 --> 00:01:06.530
an e multi user user functionality
introduced in Android 4.1 allowing you

00:01:06.530 --> 00:01:06.540
introduced in Android 4.1 allowing you
 

00:01:06.540 --> 00:01:08.120
introduced in Android 4.1 allowing you
to create sub profiles that include

00:01:08.120 --> 00:01:08.130
to create sub profiles that include
 

00:01:08.130 --> 00:01:09.530
to create sub profiles that include
system-wide and app specific

00:01:09.530 --> 00:01:09.540
system-wide and app specific
 

00:01:09.540 --> 00:01:11.630
system-wide and app specific
restrictions that means your app can

00:01:11.630 --> 00:01:11.640
restrictions that means your app can
 

00:01:11.640 --> 00:01:13.280
restrictions that means your app can
declare restriction entries including

00:01:13.280 --> 00:01:13.290
declare restriction entries including
 

00:01:13.290 --> 00:01:15.620
declare restriction entries including
boolean flags choices and multi select

00:01:15.620 --> 00:01:15.630
boolean flags choices and multi select
 

00:01:15.630 --> 00:01:17.630
boolean flags choices and multi select
choices like this single choice

00:01:17.630 --> 00:01:17.640
choices like this single choice
 

00:01:17.640 --> 00:01:20.690
choices like this single choice
restriction entry each of which can

00:01:20.690 --> 00:01:20.700
restriction entry each of which can
 

00:01:20.700 --> 00:01:21.980
restriction entry each of which can
specify ways that your apps

00:01:21.980 --> 00:01:21.990
specify ways that your apps
 

00:01:21.990 --> 00:01:23.420
specify ways that your apps
functionality can potentially be

00:01:23.420 --> 00:01:23.430
functionality can potentially be
 

00:01:23.430 --> 00:01:25.399
functionality can potentially be
restricted your app will then appear in

00:01:25.399 --> 00:01:25.409
restricted your app will then appear in
 

00:01:25.409 --> 00:01:27.170
restricted your app will then appear in
these system settings where each of

00:01:27.170 --> 00:01:27.180
these system settings where each of
 

00:01:27.180 --> 00:01:28.880
these system settings where each of
these restrictions you defined will be

00:01:28.880 --> 00:01:28.890
these restrictions you defined will be
 

00:01:28.890 --> 00:01:31.069
these restrictions you defined will be
available to the device owner they can

00:01:31.069 --> 00:01:31.079
available to the device owner they can
 

00:01:31.079 --> 00:01:32.600
available to the device owner they can
select their preferences for your app

00:01:32.600 --> 00:01:32.610
select their preferences for your app
 

00:01:32.610 --> 00:01:35.090
select their preferences for your app
for each of their restricted users to

00:01:35.090 --> 00:01:35.100
for each of their restricted users to
 

00:01:35.100 --> 00:01:36.530
for each of their restricted users to
apply those preferences to your app at

00:01:36.530 --> 00:01:36.540
apply those preferences to your app at
 

00:01:36.540 --> 00:01:37.100
apply those preferences to your app at
runtime

00:01:37.100 --> 00:01:37.110
runtime
 

00:01:37.110 --> 00:01:39.440
runtime
simply check for a bundle of restriction

00:01:39.440 --> 00:01:39.450
simply check for a bundle of restriction
 

00:01:39.450 --> 00:01:41.300
simply check for a bundle of restriction
settings associated with your app by

00:01:41.300 --> 00:01:41.310
settings associated with your app by
 

00:01:41.310 --> 00:01:42.980
settings associated with your app by
query the user manager when you're a

00:01:42.980 --> 00:01:42.990
query the user manager when you're a
 

00:01:42.990 --> 00:01:44.870
query the user manager when you're a
presumes as shown in this code snippet

00:01:44.870 --> 00:01:44.880
presumes as shown in this code snippet
 

00:01:44.880 --> 00:01:47.960
presumes as shown in this code snippet
you can find out more about supporting

00:01:47.960 --> 00:01:47.970
you can find out more about supporting
 

00:01:47.970 --> 00:01:49.910
you can find out more about supporting
restricted profiles from rich hyneman's

00:01:49.910 --> 00:01:49.920
restricted profiles from rich hyneman's
 

00:01:49.920 --> 00:01:52.760
restricted profiles from rich hyneman's
dev byte also new to Android 4.3 is

00:01:52.760 --> 00:01:52.770
dev byte also new to Android 4.3 is
 

00:01:52.770 --> 00:01:54.530
dev byte also new to Android 4.3 is
platform support for Bluetooth Low

00:01:54.530 --> 00:01:54.540
platform support for Bluetooth Low
 

00:01:54.540 --> 00:01:57.050
platform support for Bluetooth Low
Energy ble support allows you to build

00:01:57.050 --> 00:01:57.060
Energy ble support allows you to build
 

00:01:57.060 --> 00:01:58.370
Energy ble support allows you to build
apps that interact with the latest

00:01:58.370 --> 00:01:58.380
apps that interact with the latest
 

00:01:58.380 --> 00:02:00.080
apps that interact with the latest
generation of small low-power devices

00:02:00.080 --> 00:02:00.090
generation of small low-power devices
 

00:02:00.090 --> 00:02:02.209
generation of small low-power devices
and sensors that use Bluetooth smart

00:02:02.209 --> 00:02:02.219
and sensors that use Bluetooth smart
 

00:02:02.219 --> 00:02:05.600
and sensors that use Bluetooth smart
technology to communicate the ble API is

00:02:05.600 --> 00:02:05.610
technology to communicate the ble API is
 

00:02:05.610 --> 00:02:07.310
technology to communicate the ble API is
used this workflow to interact with

00:02:07.310 --> 00:02:07.320
used this workflow to interact with
 

00:02:07.320 --> 00:02:09.499
used this workflow to interact with
supported devices you start by scanning

00:02:09.499 --> 00:02:09.509
supported devices you start by scanning
 

00:02:09.509 --> 00:02:11.210
supported devices you start by scanning
for nearby devices then manage

00:02:11.210 --> 00:02:11.220
for nearby devices then manage
 

00:02:11.220 --> 00:02:13.340
for nearby devices then manage
connections discover available services

00:02:13.340 --> 00:02:13.350
connections discover available services
 

00:02:13.350 --> 00:02:15.440
connections discover available services
and query and monitor characteristics

00:02:15.440 --> 00:02:15.450
and query and monitor characteristics
 

00:02:15.450 --> 00:02:18.560
and query and monitor characteristics
provided by connected devices you start

00:02:18.560 --> 00:02:18.570
provided by connected devices you start
 

00:02:18.570 --> 00:02:20.510
provided by connected devices you start
by scanning for ble devices calling

00:02:20.510 --> 00:02:20.520
by scanning for ble devices calling
 

00:02:20.520 --> 00:02:23.090
by scanning for ble devices calling
stylus scan on the phone's Bluetooth

00:02:23.090 --> 00:02:23.100
stylus scan on the phone's Bluetooth
 

00:02:23.100 --> 00:02:25.370
stylus scan on the phone's Bluetooth
adapter the scanner is also reported

00:02:25.370 --> 00:02:25.380
adapter the scanner is also reported
 

00:02:25.380 --> 00:02:27.290
adapter the scanner is also reported
using this less scan callback callback

00:02:27.290 --> 00:02:27.300
using this less scan callback callback
 

00:02:27.300 --> 00:02:29.660
using this less scan callback callback
they reports any detected devices a

00:02:29.660 --> 00:02:29.670
they reports any detected devices a
 

00:02:29.670 --> 00:02:31.700
they reports any detected devices a
received signal strength indication and

00:02:31.700 --> 00:02:31.710
received signal strength indication and
 

00:02:31.710 --> 00:02:33.710
received signal strength indication and
the inverter sment data describing the

00:02:33.710 --> 00:02:33.720
the inverter sment data describing the
 

00:02:33.720 --> 00:02:36.380
the inverter sment data describing the
services available from that device you

00:02:36.380 --> 00:02:36.390
services available from that device you
 

00:02:36.390 --> 00:02:39.200
services available from that device you
can then connect to that device using

00:02:39.200 --> 00:02:39.210
can then connect to that device using
 

00:02:39.210 --> 00:02:41.870
can then connect to that device using
its GATT server using the call connect

00:02:41.870 --> 00:02:41.880
its GATT server using the call connect
 

00:02:41.880 --> 00:02:43.820
its GATT server using the call connect
gap method implementing the Bluetooth

00:02:43.820 --> 00:02:43.830
gap method implementing the Bluetooth
 

00:02:43.830 --> 00:02:45.500
gap method implementing the Bluetooth
Gap call back to receive connection

00:02:45.500 --> 00:02:45.510
Gap call back to receive connection
 

00:02:45.510 --> 00:02:46.910
Gap call back to receive connection
results and one of the available

00:02:46.910 --> 00:02:46.920
results and one of the available
 

00:02:46.920 --> 00:02:49.490
results and one of the available
services and characteristics you can

00:02:49.490 --> 00:02:49.500
services and characteristics you can
 

00:02:49.500 --> 00:02:51.380
services and characteristics you can
then read and write those sensor values

00:02:51.380 --> 00:02:51.390
then read and write those sensor values
 

00:02:51.390 --> 00:02:53.630
then read and write those sensor values
and request notifications whenever a

00:02:53.630 --> 00:02:53.640
and request notifications whenever a
 

00:02:53.640 --> 00:02:56.240
and request notifications whenever a
particular characteristic changes your

00:02:56.240 --> 00:02:56.250
particular characteristic changes your
 

00:02:56.250 --> 00:02:57.740
particular characteristic changes your
app can work as either a client or a

00:02:57.740 --> 00:02:57.750
app can work as either a client or a
 

00:02:57.750 --> 00:02:59.570
app can work as either a client or a
server and can transmit and receive data

00:02:59.570 --> 00:02:59.580
server and can transmit and receive data
 

00:02:59.580 --> 00:03:00.440
server and can transmit and receive data
in either mode

00:03:00.440 --> 00:03:00.450
in either mode
 

00:03:00.450 --> 00:03:02.150
in either mode
the API is a generic so you'll be able

00:03:02.150 --> 00:03:02.160
the API is a generic so you'll be able
 

00:03:02.160 --> 00:03:03.830
the API is a generic so you'll be able
to interact with a variety of devices

00:03:03.830 --> 00:03:03.840
to interact with a variety of devices
 

00:03:03.840 --> 00:03:06.260
to interact with a variety of devices
including proximity tags watches Fitness

00:03:06.260 --> 00:03:06.270
including proximity tags watches Fitness
 

00:03:06.270 --> 00:03:08.030
including proximity tags watches Fitness
meters game controllers remote controls

00:03:08.030 --> 00:03:08.040
meters game controllers remote controls
 

00:03:08.040 --> 00:03:11.120
meters game controllers remote controls
and help devices for more details on

00:03:11.120 --> 00:03:11.130
and help devices for more details on
 

00:03:11.130 --> 00:03:13.130
and help devices for more details on
Bluetooth Low Energy and using these

00:03:13.130 --> 00:03:13.140
Bluetooth Low Energy and using these
 

00:03:13.140 --> 00:03:15.020
Bluetooth Low Energy and using these
api's in your app check out this dev

00:03:15.020 --> 00:03:15.030
api's in your app check out this dev
 

00:03:15.030 --> 00:03:18.410
api's in your app check out this dev
byte from our ble expert Fred Jung we've

00:03:18.410 --> 00:03:18.420
byte from our ble expert Fred Jung we've
 

00:03:18.420 --> 00:03:20.660
byte from our ble expert Fred Jung we've
also introduced Java interfaces and

00:03:20.660 --> 00:03:20.670
also introduced Java interfaces and
 

00:03:20.670 --> 00:03:23.870
also introduced Java interfaces and
native support for OpenGL ES 3 so games

00:03:23.870 --> 00:03:23.880
native support for OpenGL ES 3 so games
 

00:03:23.880 --> 00:03:25.790
native support for OpenGL ES 3 so games
and other apps with high performance 2d

00:03:25.790 --> 00:03:25.800
and other apps with high performance 2d
 

00:03:25.800 --> 00:03:27.920
and other apps with high performance 2d
and 3d graphics are now fully supported

00:03:27.920 --> 00:03:27.930
and 3d graphics are now fully supported
 

00:03:27.930 --> 00:03:29.680
and 3d graphics are now fully supported
by the underlying graphics hardware

00:03:29.680 --> 00:03:29.690
by the underlying graphics hardware
 

00:03:29.690 --> 00:03:32.330
by the underlying graphics hardware
OpenGL ES 3 includes many improvements

00:03:32.330 --> 00:03:32.340
OpenGL ES 3 includes many improvements
 

00:03:32.340 --> 00:03:34.370
OpenGL ES 3 includes many improvements
including these that support the

00:03:34.370 --> 00:03:34.380
including these that support the
 

00:03:34.380 --> 00:03:36.410
including these that support the
creation and complex but efficient

00:03:36.410 --> 00:03:36.420
creation and complex but efficient
 

00:03:36.420 --> 00:03:39.200
creation and complex but efficient
graphics that work across a range of

00:03:39.200 --> 00:03:39.210
graphics that work across a range of
 

00:03:39.210 --> 00:03:41.000
graphics that work across a range of
devices using a single texture

00:03:41.000 --> 00:03:41.010
devices using a single texture
 

00:03:41.010 --> 00:03:43.130
devices using a single texture
compression format there are also a

00:03:43.130 --> 00:03:43.140
compression format there are also a
 

00:03:43.140 --> 00:03:44.750
compression format there are also a
number of enhancements to Android's

00:03:44.750 --> 00:03:44.760
number of enhancements to Android's
 

00:03:44.760 --> 00:03:47.540
number of enhancements to Android's
media stack starting with a modular DRM

00:03:47.540 --> 00:03:47.550
media stack starting with a modular DRM
 

00:03:47.550 --> 00:03:48.860
media stack starting with a modular DRM
framework that makes it easier to

00:03:48.860 --> 00:03:48.870
framework that makes it easier to
 

00:03:48.870 --> 00:03:50.450
framework that makes it easier to
integrate DRM into your preferred

00:03:50.450 --> 00:03:50.460
integrate DRM into your preferred
 

00:03:50.460 --> 00:03:52.610
integrate DRM into your preferred
streaming protocols such as MPEG DASH

00:03:52.610 --> 00:03:52.620
streaming protocols such as MPEG DASH
 

00:03:52.620 --> 00:03:55.400
streaming protocols such as MPEG DASH
the new media DRM class is a module

00:03:55.400 --> 00:03:55.410
the new media DRM class is a module
 

00:03:55.410 --> 00:03:57.350
the new media DRM class is a module
solution that separates DRM from media

00:03:57.350 --> 00:03:57.360
solution that separates DRM from media
 

00:03:57.360 --> 00:03:59.780
solution that separates DRM from media
playback so for example you can playback

00:03:59.780 --> 00:03:59.790
playback so for example you can playback
 

00:03:59.790 --> 00:04:01.760
playback so for example you can playback
Widevine encrypted content without

00:04:01.760 --> 00:04:01.770
Widevine encrypted content without
 

00:04:01.770 --> 00:04:04.060
Widevine encrypted content without
having to use the Widevine media format

00:04:04.060 --> 00:04:04.070
having to use the Widevine media format
 

00:04:04.070 --> 00:04:06.980
having to use the Widevine media format
the media DRM API is should be used in

00:04:06.980 --> 00:04:06.990
the media DRM API is should be used in
 

00:04:06.990 --> 00:04:08.720
the media DRM API is should be used in
conjunction with the mediacodec api is

00:04:08.720 --> 00:04:08.730
conjunction with the mediacodec api is
 

00:04:08.730 --> 00:04:10.910
conjunction with the mediacodec api is
that we're introduced in android 4.1

00:04:10.910 --> 00:04:10.920
that we're introduced in android 4.1
 

00:04:10.920 --> 00:04:12.890
that we're introduced in android 4.1
including media codec for encoding and

00:04:12.890 --> 00:04:12.900
including media codec for encoding and
 

00:04:12.900 --> 00:04:15.020
including media codec for encoding and
decoding your content media crypto for

00:04:15.020 --> 00:04:15.030
decoding your content media crypto for
 

00:04:15.030 --> 00:04:16.700
decoding your content media crypto for
handling encrypted content and media

00:04:16.700 --> 00:04:16.710
handling encrypted content and media
 

00:04:16.710 --> 00:04:18.680
handling encrypted content and media
extractor for extracting and de-mux in

00:04:18.680 --> 00:04:18.690
extractor for extracting and de-mux in
 

00:04:18.690 --> 00:04:21.950
extractor for extracting and de-mux in
your content support for vp8 encoding is

00:04:21.950 --> 00:04:21.960
your content support for vp8 encoding is
 

00:04:21.960 --> 00:04:24.230
your content support for vp8 encoding is
also now available as framework and

00:04:24.230 --> 00:04:24.240
also now available as framework and
 

00:04:24.240 --> 00:04:26.190
also now available as framework and
native API for a range of four

00:04:26.190 --> 00:04:26.200
native API for a range of four
 

00:04:26.200 --> 00:04:28.650
native API for a range of four
the FBI's includes support for setting

00:04:28.650 --> 00:04:28.660
the FBI's includes support for setting
 

00:04:28.660 --> 00:04:30.630
the FBI's includes support for setting
target bit rate rate control selecting

00:04:30.630 --> 00:04:30.640
target bit rate rate control selecting
 

00:04:30.640 --> 00:04:32.940
target bit rate rate control selecting
frame weights token partitioning area

00:04:32.940 --> 00:04:32.950
frame weights token partitioning area
 

00:04:32.950 --> 00:04:34.830
frame weights token partitioning area
resilience reconstruction and loop

00:04:34.830 --> 00:04:34.840
resilience reconstruction and loop
 

00:04:34.840 --> 00:04:37.740
resilience reconstruction and loop
filters back in Android 4.1 the

00:04:37.740 --> 00:04:37.750
filters back in Android 4.1 the
 

00:04:37.750 --> 00:04:39.480
filters back in Android 4.1 the
mediacodec class introduced support for

00:04:39.480 --> 00:04:39.490
mediacodec class introduced support for
 

00:04:39.490 --> 00:04:41.340
mediacodec class introduced support for
low-level encoding and decoding of media

00:04:41.340 --> 00:04:41.350
low-level encoding and decoding of media
 

00:04:41.350 --> 00:04:43.530
low-level encoding and decoding of media
but it required that it be provided as a

00:04:43.530 --> 00:04:43.540
but it required that it be provided as a
 

00:04:43.540 --> 00:04:46.950
but it required that it be provided as a
byte buffer array in Android 4.3 you can

00:04:46.950 --> 00:04:46.960
byte buffer array in Android 4.3 you can
 

00:04:46.960 --> 00:04:48.840
byte buffer array in Android 4.3 you can
use a surface as the input to an encoder

00:04:48.840 --> 00:04:48.850
use a surface as the input to an encoder
 

00:04:48.850 --> 00:04:51.420
use a surface as the input to an encoder
so you can encode input directly from an

00:04:51.420 --> 00:04:51.430
so you can encode input directly from an
 

00:04:51.430 --> 00:04:53.310
so you can encode input directly from an
existing video file or using frames

00:04:53.310 --> 00:04:53.320
existing video file or using frames
 

00:04:53.320 --> 00:04:57.480
existing video file or using frames
generated from OpenGL es2 use the

00:04:57.480 --> 00:04:57.490
generated from OpenGL es2 use the
 

00:04:57.490 --> 00:04:59.220
generated from OpenGL es2 use the
surface as the input to an encoder call

00:04:59.220 --> 00:04:59.230
surface as the input to an encoder call
 

00:04:59.230 --> 00:05:01.110
surface as the input to an encoder call
configure on your media codec object

00:05:01.110 --> 00:05:01.120
configure on your media codec object
 

00:05:01.120 --> 00:05:03.300
configure on your media codec object
followed by a call create input surface

00:05:03.300 --> 00:05:03.310
followed by a call create input surface
 

00:05:03.310 --> 00:05:05.250
followed by a call create input surface
to receive the surface upon which you

00:05:05.250 --> 00:05:05.260
to receive the surface upon which you
 

00:05:05.260 --> 00:05:07.380
to receive the surface upon which you
can stream your media the beginning

00:05:07.380 --> 00:05:07.390
can stream your media the beginning
 

00:05:07.390 --> 00:05:09.210
can stream your media the beginning
coding call start on the media codec and

00:05:09.210 --> 00:05:09.220
coding call start on the media codec and
 

00:05:09.220 --> 00:05:11.010
coding call start on the media codec and
went down call signal end of the input

00:05:11.010 --> 00:05:11.020
went down call signal end of the input
 

00:05:11.020 --> 00:05:12.810
went down call signal end of the input
stream to terminate the encoding before

00:05:12.810 --> 00:05:12.820
stream to terminate the encoding before
 

00:05:12.820 --> 00:05:15.720
stream to terminate the encoding before
releasing the surface the media MUX a

00:05:15.720 --> 00:05:15.730
releasing the surface the media MUX a
 

00:05:15.730 --> 00:05:17.460
releasing the surface the media MUX a
class enables multiplexing between an

00:05:17.460 --> 00:05:17.470
class enables multiplexing between an
 

00:05:17.470 --> 00:05:19.350
class enables multiplexing between an
audio stream and a video stream it's

00:05:19.350 --> 00:05:19.360
audio stream and a video stream it's
 

00:05:19.360 --> 00:05:21.060
audio stream and a video stream it's
designed to work primarily with media

00:05:21.060 --> 00:05:21.070
designed to work primarily with media
 

00:05:21.070 --> 00:05:22.500
designed to work primarily with media
codec so you can perform video

00:05:22.500 --> 00:05:22.510
codec so you can perform video
 

00:05:22.510 --> 00:05:24.660
codec so you can perform video
processing using media codec and then

00:05:24.660 --> 00:05:24.670
processing using media codec and then
 

00:05:24.670 --> 00:05:26.910
processing using media codec and then
save the output to an mp4 file using the

00:05:26.910 --> 00:05:26.920
save the output to an mp4 file using the
 

00:05:26.920 --> 00:05:29.460
save the output to an mp4 file using the
media moxa the media Maxo can also be

00:05:29.460 --> 00:05:29.470
media moxa the media Maxo can also be
 

00:05:29.470 --> 00:05:31.050
media moxa the media Maxo can also be
used in combination with media extractor

00:05:31.050 --> 00:05:31.060
used in combination with media extractor
 

00:05:31.060 --> 00:05:32.850
used in combination with media extractor
to perform media editing without the

00:05:32.850 --> 00:05:32.860
to perform media editing without the
 

00:05:32.860 --> 00:05:35.790
to perform media editing without the
need to encode or decode currently mp4

00:05:35.790 --> 00:05:35.800
need to encode or decode currently mp4
 

00:05:35.800 --> 00:05:37.560
need to encode or decode currently mp4
is the only supported output format and

00:05:37.560 --> 00:05:37.570
is the only supported output format and
 

00:05:37.570 --> 00:05:39.510
is the only supported output format and
the media moxa supports only one audio

00:05:39.510 --> 00:05:39.520
the media moxa supports only one audio
 

00:05:39.520 --> 00:05:41.960
the media moxa supports only one audio
stream and one video stream at a time

00:05:41.960 --> 00:05:41.970
stream and one video stream at a time
 

00:05:41.970 --> 00:05:44.250
stream and one video stream at a time
the first jellybean release allowed

00:05:44.250 --> 00:05:44.260
the first jellybean release allowed
 

00:05:44.260 --> 00:05:46.050
the first jellybean release allowed
media players to offer playback controls

00:05:46.050 --> 00:05:46.060
media players to offer playback controls
 

00:05:46.060 --> 00:05:47.760
media players to offer playback controls
from remote control clients like the

00:05:47.760 --> 00:05:47.770
from remote control clients like the
 

00:05:47.770 --> 00:05:49.650
from remote control clients like the
lockscreen ongoing notifications and

00:05:49.650 --> 00:05:49.660
lockscreen ongoing notifications and
 

00:05:49.660 --> 00:05:51.870
lockscreen ongoing notifications and
Bluetooth remotes this was all done

00:05:51.870 --> 00:05:51.880
Bluetooth remotes this was all done
 

00:05:51.880 --> 00:05:54.450
Bluetooth remotes this was all done
using the remote control client API now

00:05:54.450 --> 00:05:54.460
using the remote control client API now
 

00:05:54.460 --> 00:05:56.250
using the remote control client API now
these applications can also display

00:05:56.250 --> 00:05:56.260
these applications can also display
 

00:05:56.260 --> 00:05:58.410
these applications can also display
playback progress and handle jumping to

00:05:58.410 --> 00:05:58.420
playback progress and handle jumping to
 

00:05:58.420 --> 00:05:59.910
playback progress and handle jumping to
a specific playback position via

00:05:59.910 --> 00:05:59.920
a specific playback position via
 

00:05:59.920 --> 00:06:02.190
a specific playback position via
scrubbing if you're already using the

00:06:02.190 --> 00:06:02.200
scrubbing if you're already using the
 

00:06:02.200 --> 00:06:03.960
scrubbing if you're already using the
remote control client API s then you can

00:06:03.960 --> 00:06:03.970
remote control client API s then you can
 

00:06:03.970 --> 00:06:05.910
remote control client API s then you can
add support for scrubbing by enabling

00:06:05.910 --> 00:06:05.920
add support for scrubbing by enabling
 

00:06:05.920 --> 00:06:09.450
add support for scrubbing by enabling
the flag key Media position update using

00:06:09.450 --> 00:06:09.460
the flag key Media position update using
 

00:06:09.460 --> 00:06:11.640
the flag key Media position update using
the set transport controls flags method

00:06:11.640 --> 00:06:11.650
the set transport controls flags method
 

00:06:11.650 --> 00:06:14.070
the set transport controls flags method
on the remote control client and this is

00:06:14.070 --> 00:06:14.080
on the remote control client and this is
 

00:06:14.080 --> 00:06:15.840
on the remote control client and this is
going to make the scrubber visible then

00:06:15.840 --> 00:06:15.850
going to make the scrubber visible then
 

00:06:15.850 --> 00:06:18.390
going to make the scrubber visible then
implementing both an on get playback

00:06:18.390 --> 00:06:18.400
implementing both an on get playback
 

00:06:18.400 --> 00:06:20.310
implementing both an on get playback
position listener overriding the on get

00:06:20.310 --> 00:06:20.320
position listener overriding the on get
 

00:06:20.320 --> 00:06:22.020
position listener overriding the on get
playback position method to return the

00:06:22.020 --> 00:06:22.030
playback position method to return the
 

00:06:22.030 --> 00:06:24.180
playback position method to return the
current position of your media and an on

00:06:24.180 --> 00:06:24.190
current position of your media and an on
 

00:06:24.190 --> 00:06:25.920
current position of your media and an on
playback position update listener with

00:06:25.920 --> 00:06:25.930
playback position update listener with
 

00:06:25.930 --> 00:06:27.690
playback position update listener with
an overridden on playback position

00:06:27.690 --> 00:06:27.700
an overridden on playback position
 

00:06:27.700 --> 00:06:29.820
an overridden on playback position
update method to listen for a new

00:06:29.820 --> 00:06:29.830
update method to listen for a new
 

00:06:29.830 --> 00:06:31.440
update method to listen for a new
timecode when the user scrubs the

00:06:31.440 --> 00:06:31.450
timecode when the user scrubs the
 

00:06:31.450 --> 00:06:34.600
timecode when the user scrubs the
playback using the remote control UI

00:06:34.600 --> 00:06:34.610
playback using the remote control UI
 

00:06:34.610 --> 00:06:37.070
playback using the remote control UI
with these interfaces defined you can

00:06:37.070 --> 00:06:37.080
with these interfaces defined you can
 

00:06:37.080 --> 00:06:38.720
with these interfaces defined you can
then set them on your remote control

00:06:38.720 --> 00:06:38.730
then set them on your remote control
 

00:06:38.730 --> 00:06:40.940
then set them on your remote control
client by calling set on get playback

00:06:40.940 --> 00:06:40.950
client by calling set on get playback
 

00:06:40.950 --> 00:06:42.500
client by calling set on get playback
position listener and set playback

00:06:42.500 --> 00:06:42.510
position listener and set playback
 

00:06:42.510 --> 00:06:46.130
position listener and set playback
position update listener a new UI

00:06:46.130 --> 00:06:46.140
position update listener a new UI
 

00:06:46.140 --> 00:06:47.990
position update listener a new UI
automation framework uses the

00:06:47.990 --> 00:06:48.000
automation framework uses the
 

00:06:48.000 --> 00:06:50.540
automation framework uses the
accessibility service API is to support

00:06:50.540 --> 00:06:50.550
accessibility service API is to support
 

00:06:50.550 --> 00:06:52.520
accessibility service API is to support
testing interact with the devices UI by

00:06:52.520 --> 00:06:52.530
testing interact with the devices UI by
 

00:06:52.530 --> 00:06:53.990
testing interact with the devices UI by
inspecting the screen content in

00:06:53.990 --> 00:06:54.000
inspecting the screen content in
 

00:06:54.000 --> 00:06:55.730
inspecting the screen content in
injecting arbitrary keyboard and touch

00:06:55.730 --> 00:06:55.740
injecting arbitrary keyboard and touch
 

00:06:55.740 --> 00:06:58.190
injecting arbitrary keyboard and touch
events you can also perform system UI

00:06:58.190 --> 00:06:58.200
events you can also perform system UI
 

00:06:58.200 --> 00:06:59.960
events you can also perform system UI
actions like hitting the back button or

00:06:59.960 --> 00:06:59.970
actions like hitting the back button or
 

00:06:59.970 --> 00:07:01.580
actions like hitting the back button or
at hitting the screen and even taking

00:07:01.580 --> 00:07:01.590
at hitting the screen and even taking
 

00:07:01.590 --> 00:07:03.830
at hitting the screen and even taking
screenshots best of all the UI

00:07:03.830 --> 00:07:03.840
screenshots best of all the UI
 

00:07:03.840 --> 00:07:05.390
screenshots best of all the UI
automation API is work across

00:07:05.390 --> 00:07:05.400
automation API is work across
 

00:07:05.400 --> 00:07:08.330
automation API is work across
application boundaries to get an

00:07:08.330 --> 00:07:08.340
application boundaries to get an
 

00:07:08.340 --> 00:07:09.950
application boundaries to get an
instance of the UI automation call

00:07:09.950 --> 00:07:09.960
instance of the UI automation call
 

00:07:09.960 --> 00:07:12.770
instance of the UI automation call
instrumentation get UI automation within

00:07:12.770 --> 00:07:12.780
instrumentation get UI automation within
 

00:07:12.780 --> 00:07:14.960
instrumentation get UI automation within
your instrumentation test case you can

00:07:14.960 --> 00:07:14.970
your instrumentation test case you can
 

00:07:14.970 --> 00:07:16.460
your instrumentation test case you can
then perform tests by creating events

00:07:16.460 --> 00:07:16.470
then perform tests by creating events
 

00:07:16.470 --> 00:07:18.290
then perform tests by creating events
and injecting them into the message loop

00:07:18.290 --> 00:07:18.300
and injecting them into the message loop
 

00:07:18.300 --> 00:07:20.360
and injecting them into the message loop
and confirm the results by introspecting

00:07:20.360 --> 00:07:20.370
and confirm the results by introspecting
 

00:07:20.370 --> 00:07:23.420
and confirm the results by introspecting
UI elements you do this by obtaining the

00:07:23.420 --> 00:07:23.430
UI elements you do this by obtaining the
 

00:07:23.430 --> 00:07:25.280
UI elements you do this by obtaining the
root accessibility node of the UI and

00:07:25.280 --> 00:07:25.290
root accessibility node of the UI and
 

00:07:25.290 --> 00:07:26.690
root accessibility node of the UI and
searching for the screen element you

00:07:26.690 --> 00:07:26.700
searching for the screen element you
 

00:07:26.700 --> 00:07:29.470
searching for the screen element you
want to inspect either by name or by ID

00:07:29.470 --> 00:07:29.480
want to inspect either by name or by ID
 

00:07:29.480 --> 00:07:32.330
want to inspect either by name or by ID
execute your tests using the adb am

00:07:32.330 --> 00:07:32.340
execute your tests using the adb am
 

00:07:32.340 --> 00:07:34.670
execute your tests using the adb am
instrument command specifying the - w

00:07:34.670 --> 00:07:34.680
instrument command specifying the - w
 

00:07:34.680 --> 00:07:37.690
instrument command specifying the - w
flag package name and test runner

00:07:37.690 --> 00:07:37.700
flag package name and test runner
 

00:07:37.700 --> 00:07:40.430
flag package name and test runner
next up the systrace tool has been

00:07:40.430 --> 00:07:40.440
next up the systrace tool has been
 

00:07:40.440 --> 00:07:42.260
next up the systrace tool has been
improved to make it easy to provide more

00:07:42.260 --> 00:07:42.270
improved to make it easy to provide more
 

00:07:42.270 --> 00:07:44.150
improved to make it easy to provide more
ways to profile the performance of your

00:07:44.150 --> 00:07:44.160
ways to profile the performance of your
 

00:07:44.160 --> 00:07:46.760
ways to profile the performance of your
app you can now collect trace data from

00:07:46.760 --> 00:07:46.770
app you can now collect trace data from
 

00:07:46.770 --> 00:07:48.680
app you can now collect trace data from
hardware modules kernel functions the

00:07:48.680 --> 00:07:48.690
hardware modules kernel functions the
 

00:07:48.690 --> 00:07:50.780
hardware modules kernel functions the
dalvik vm including garbage collection

00:07:50.780 --> 00:07:50.790
dalvik vm including garbage collection
 

00:07:50.790 --> 00:07:54.050
dalvik vm including garbage collection
resource loading and more Android 4.3

00:07:54.050 --> 00:07:54.060
resource loading and more Android 4.3
 

00:07:54.060 --> 00:07:56.090
resource loading and more Android 4.3
also introduces the trace class with the

00:07:56.090 --> 00:07:56.100
also introduces the trace class with the
 

00:07:56.100 --> 00:07:58.130
also introduces the trace class with the
new static methods begin section and end

00:07:58.130 --> 00:07:58.140
new static methods begin section and end
 

00:07:58.140 --> 00:07:59.690
new static methods begin section and end
section which allow you to define

00:07:59.690 --> 00:07:59.700
section which allow you to define
 

00:07:59.700 --> 00:08:01.190
section which allow you to define
specific parts of your code to include

00:08:01.190 --> 00:08:01.200
specific parts of your code to include
 

00:08:01.200 --> 00:08:03.590
specific parts of your code to include
insist trace reports so you can get a

00:08:03.590 --> 00:08:03.600
insist trace reports so you can get a
 

00:08:03.600 --> 00:08:05.330
insist trace reports so you can get a
much more detailed analysis of where

00:08:05.330 --> 00:08:05.340
much more detailed analysis of where
 

00:08:05.340 --> 00:08:07.760
much more detailed analysis of where
slowdown occurs within your app the

00:08:07.760 --> 00:08:07.770
slowdown occurs within your app the
 

00:08:07.770 --> 00:08:09.950
slowdown occurs within your app the
there are also new developer options to

00:08:09.950 --> 00:08:09.960
there are also new developer options to
 

00:08:09.960 --> 00:08:11.720
there are also new developer options to
help you analyze performance and spot

00:08:11.720 --> 00:08:11.730
help you analyze performance and spot
 

00:08:11.730 --> 00:08:14.240
help you analyze performance and spot
rendering issues the profile GPU

00:08:14.240 --> 00:08:14.250
rendering issues the profile GPU
 

00:08:14.250 --> 00:08:16.400
rendering issues the profile GPU
rendering option lets you visualize your

00:08:16.400 --> 00:08:16.410
rendering option lets you visualize your
 

00:08:16.410 --> 00:08:18.950
rendering option lets you visualize your
apps effective frame rate on screen you

00:08:18.950 --> 00:08:18.960
apps effective frame rate on screen you
 

00:08:18.960 --> 00:08:20.720
apps effective frame rate on screen you
can choose to display profiling data as

00:08:20.720 --> 00:08:20.730
can choose to display profiling data as
 

00:08:20.730 --> 00:08:23.450
can choose to display profiling data as
on-screen bar or line graphs with colors

00:08:23.450 --> 00:08:23.460
on-screen bar or line graphs with colors
 

00:08:23.460 --> 00:08:25.700
on-screen bar or line graphs with colors
indicating time spent creating drawing

00:08:25.700 --> 00:08:25.710
indicating time spent creating drawing
 

00:08:25.710 --> 00:08:27.920
indicating time spent creating drawing
commands blue issuing the commands

00:08:27.920 --> 00:08:27.930
commands blue issuing the commands
 

00:08:27.930 --> 00:08:29.750
commands blue issuing the commands
orange and waiting for the commands to

00:08:29.750 --> 00:08:29.760
orange and waiting for the commands to
 

00:08:29.760 --> 00:08:32.570
orange and waiting for the commands to
complete in yellow the on-screen graphs

00:08:32.570 --> 00:08:32.580
complete in yellow the on-screen graphs
 

00:08:32.580 --> 00:08:34.250
complete in yellow the on-screen graphs
are updated continuously showing a graph

00:08:34.250 --> 00:08:34.260
are updated continuously showing a graph
 

00:08:34.260 --> 00:08:36.409
are updated continuously showing a graph
for each visible activity as well as the

00:08:36.409 --> 00:08:36.419
for each visible activity as well as the
 

00:08:36.419 --> 00:08:38.360
for each visible activity as well as the
navigation bar a notification bar a

00:08:38.360 --> 00:08:38.370
navigation bar a notification bar a
 

00:08:38.370 --> 00:08:41.089
navigation bar a notification bar a
green line highlights the 60 millisecond

00:08:41.089 --> 00:08:41.099
green line highlights the 60 millisecond
 

00:08:41.099 --> 00:08:43.190
green line highlights the 60 millisecond
threshold for rendering operations so

00:08:43.190 --> 00:08:43.200
threshold for rendering operations so
 

00:08:43.200 --> 00:08:44.720
threshold for rendering operations so
you can see your apps effective frame

00:08:44.720 --> 00:08:44.730
you can see your apps effective frame
 

00:08:44.730 --> 00:08:47.490
you can see your apps effective frame
rate relative to a 60 fps

00:08:47.490 --> 00:08:47.500
rate relative to a 60 fps
 

00:08:47.500 --> 00:08:49.840
rate relative to a 60 fps
there are also improvements to

00:08:49.840 --> 00:08:49.850
there are also improvements to
 

00:08:49.850 --> 00:08:51.670
there are also improvements to
internationalization including new

00:08:51.670 --> 00:08:51.680
internationalization including new
 

00:08:51.680 --> 00:08:53.380
internationalization including new
utilities and api's for creating better

00:08:53.380 --> 00:08:53.390
utilities and api's for creating better
 

00:08:53.390 --> 00:08:55.450
utilities and api's for creating better
RTL strings and pseudo locales to make

00:08:55.450 --> 00:08:55.460
RTL strings and pseudo locales to make
 

00:08:55.460 --> 00:08:57.780
RTL strings and pseudo locales to make
it easy to test your apps localization

00:08:57.780 --> 00:08:57.790
it easy to test your apps localization
 

00:08:57.790 --> 00:09:00.010
it easy to test your apps localization
accessibility services can now observe

00:09:00.010 --> 00:09:00.020
accessibility services can now observe
 

00:09:00.020 --> 00:09:01.840
accessibility services can now observe
and filter key events so they can handle

00:09:01.840 --> 00:09:01.850
and filter key events so they can handle
 

00:09:01.850 --> 00:09:04.300
and filter key events so they can handle
keyboard shortcuts or provide navigation

00:09:04.300 --> 00:09:04.310
keyboard shortcuts or provide navigation
 

00:09:04.310 --> 00:09:06.310
keyboard shortcuts or provide navigation
in parity with gesture based input and

00:09:06.310 --> 00:09:06.320
in parity with gesture based input and
 

00:09:06.320 --> 00:09:08.680
in parity with gesture based input and
apps can now define the exit and entry

00:09:08.680 --> 00:09:08.690
apps can now define the exit and entry
 

00:09:08.690 --> 00:09:11.080
apps can now define the exit and entry
animation types used on a window when

00:09:11.080 --> 00:09:11.090
animation types used on a window when
 

00:09:11.090 --> 00:09:12.880
animation types used on a window when
the device is rotated you can set window

00:09:12.880 --> 00:09:12.890
the device is rotated you can set window
 

00:09:12.890 --> 00:09:15.040
the device is rotated you can set window
properties to enable jump cut crossfade

00:09:15.040 --> 00:09:15.050
properties to enable jump cut crossfade
 

00:09:15.050 --> 00:09:17.260
properties to enable jump cut crossfade
or standard windows rotation look for

00:09:17.260 --> 00:09:17.270
or standard windows rotation look for
 

00:09:17.270 --> 00:09:18.850
or standard windows rotation look for
more information on changes to the UI

00:09:18.850 --> 00:09:18.860
more information on changes to the UI
 

00:09:18.860 --> 00:09:21.160
more information on changes to the UI
including those animation changes from a

00:09:21.160 --> 00:09:21.170
including those animation changes from a
 

00:09:21.170 --> 00:09:24.010
including those animation changes from a
chat near you just in time for Android

00:09:24.010 --> 00:09:24.020
chat near you just in time for Android
 

00:09:24.020 --> 00:09:26.830
chat near you just in time for Android
4.3 the support package action bar API

00:09:26.830 --> 00:09:26.840
4.3 the support package action bar API
 

00:09:26.840 --> 00:09:30.700
4.3 the support package action bar API
now at last is available find out all

00:09:30.700 --> 00:09:30.710
now at last is available find out all
 

00:09:30.710 --> 00:09:32.200
now at last is available find out all
about how to integrate this critical

00:09:32.200 --> 00:09:32.210
about how to integrate this critical
 

00:09:32.210 --> 00:09:33.610
about how to integrate this critical
piece of the Android design language

00:09:33.610 --> 00:09:33.620
piece of the Android design language
 

00:09:33.620 --> 00:09:35.860
piece of the Android design language
into your app from this devbyte from our

00:09:35.860 --> 00:09:35.870
into your app from this devbyte from our
 

00:09:35.870 --> 00:09:39.010
into your app from this devbyte from our
very own Chris Bane's when we weren't

00:09:39.010 --> 00:09:39.020
very own Chris Bane's when we weren't
 

00:09:39.020 --> 00:09:41.350
very own Chris Bane's when we weren't
busy launching new jelly bean flavors we

00:09:41.350 --> 00:09:41.360
busy launching new jelly bean flavors we
 

00:09:41.360 --> 00:09:43.840
busy launching new jelly bean flavors we
were busy in our studio Ankara is

00:09:43.840 --> 00:09:43.850
were busy in our studio Ankara is
 

00:09:43.850 --> 00:09:45.370
were busy in our studio Ankara is
releasing the fourth part of his

00:09:45.370 --> 00:09:45.380
releasing the fourth part of his
 

00:09:45.380 --> 00:09:47.140
releasing the fourth part of his
five-part series on making apps

00:09:47.140 --> 00:09:47.150
five-part series on making apps
 

00:09:47.150 --> 00:09:48.790
five-part series on making apps
beautiful this time looking at

00:09:48.790 --> 00:09:48.800
beautiful this time looking at
 

00:09:48.800 --> 00:09:51.520
beautiful this time looking at
performance tuning Chet meantime returns

00:09:51.520 --> 00:09:51.530
performance tuning Chet meantime returns
 

00:09:51.530 --> 00:09:53.620
performance tuning Chet meantime returns
with the highly anticipated second part

00:09:53.620 --> 00:09:53.630
with the highly anticipated second part
 

00:09:53.630 --> 00:09:57.670
with the highly anticipated second part
on his series on anticipation and on the

00:09:57.670 --> 00:09:57.680
on his series on anticipation and on the
 

00:09:57.680 --> 00:09:59.530
on his series on anticipation and on the
app clinic last week I used Cricut apps

00:09:59.530 --> 00:09:59.540
app clinic last week I used Cricut apps
 

00:09:59.540 --> 00:10:01.810
app clinic last week I used Cricut apps
as an excuse design my own version of

00:10:01.810 --> 00:10:01.820
as an excuse design my own version of
 

00:10:01.820 --> 00:10:04.180
as an excuse design my own version of
the perfect sports tracking act my

00:10:04.180 --> 00:10:04.190
the perfect sports tracking act my
 

00:10:04.190 --> 00:10:06.190
the perfect sports tracking act my
artistic skills are roughly on a part of

00:10:06.190 --> 00:10:06.200
artistic skills are roughly on a part of
 

00:10:06.200 --> 00:10:07.810
artistic skills are roughly on a part of
the Australian top orders batting skills

00:10:07.810 --> 00:10:07.820
the Australian top orders batting skills
 

00:10:07.820 --> 00:10:09.700
the Australian top orders batting skills
so I devoted most of my session to

00:10:09.700 --> 00:10:09.710
so I devoted most of my session to
 

00:10:09.710 --> 00:10:11.500
so I devoted most of my session to
strategies for minimizing latency while

00:10:11.500 --> 00:10:11.510
strategies for minimizing latency while
 

00:10:11.510 --> 00:10:13.900
strategies for minimizing latency while
maximizing battery efficiency if your

00:10:13.900 --> 00:10:13.910
maximizing battery efficiency if your
 

00:10:13.910 --> 00:10:15.670
maximizing battery efficiency if your
app needs frequent updates but you don't

00:10:15.670 --> 00:10:15.680
app needs frequent updates but you don't
 

00:10:15.680 --> 00:10:17.290
app needs frequent updates but you don't
want to drain the battery check this one

00:10:17.290 --> 00:10:17.300
want to drain the battery check this one
 

00:10:17.300 --> 00:10:20.260
want to drain the battery check this one
out our design advocates will be taking

00:10:20.260 --> 00:10:20.270
out our design advocates will be taking
 

00:10:20.270 --> 00:10:21.760
out our design advocates will be taking
my amateur mocks and turning them into

00:10:21.760 --> 00:10:21.770
my amateur mocks and turning them into
 

00:10:21.770 --> 00:10:23.290
my amateur mocks and turning them into
something more inspirational on

00:10:23.290 --> 00:10:23.300
something more inspirational on
 

00:10:23.300 --> 00:10:25.330
something more inspirational on
tomorrow's episode of Android design in

00:10:25.330 --> 00:10:25.340
tomorrow's episode of Android design in
 

00:10:25.340 --> 00:10:27.520
tomorrow's episode of Android design in
action as always you can go to

00:10:27.520 --> 00:10:27.530
action as always you can go to
 

00:10:27.530 --> 00:10:29.530
action as always you can go to
developers.google.com slash live slash

00:10:29.530 --> 00:10:29.540
developers.google.com slash live slash
 

00:10:29.540 --> 00:10:30.760
developers.google.com slash live slash
Android to see what we've got planned

00:10:30.760 --> 00:10:30.770
Android to see what we've got planned
 

00:10:30.770 --> 00:10:34.030
Android to see what we've got planned
for ADL this coming week the release of

00:10:34.030 --> 00:10:34.040
for ADL this coming week the release of
 

00:10:34.040 --> 00:10:36.700
for ADL this coming week the release of
Android 4.3 also saw a flood of new and

00:10:36.700 --> 00:10:36.710
Android 4.3 also saw a flood of new and
 

00:10:36.710 --> 00:10:38.890
Android 4.3 also saw a flood of new and
improved apps to Google Play including

00:10:38.890 --> 00:10:38.900
improved apps to Google Play including
 

00:10:38.900 --> 00:10:40.420
improved apps to Google Play including
Beauty and the Beast with restricted

00:10:40.420 --> 00:10:40.430
Beauty and the Beast with restricted
 

00:10:40.430 --> 00:10:43.210
Beauty and the Beast with restricted
profile support a run tusk-tastic update

00:10:43.210 --> 00:10:43.220
profile support a run tusk-tastic update
 

00:10:43.220 --> 00:10:44.770
profile support a run tusk-tastic update
that supports Bluetooth Low Energy

00:10:44.770 --> 00:10:44.780
that supports Bluetooth Low Energy
 

00:10:44.780 --> 00:10:47.829
that supports Bluetooth Low Energy
Netflix updated to provide 1080p HD

00:10:47.829 --> 00:10:47.839
Netflix updated to provide 1080p HD
 

00:10:47.839 --> 00:10:50.620
Netflix updated to provide 1080p HD
video and games such as galaxy on fire 2

00:10:50.620 --> 00:10:50.630
video and games such as galaxy on fire 2
 

00:10:50.630 --> 00:10:53.170
video and games such as galaxy on fire 2
monster shooter 2 prince of persia'

00:10:53.170 --> 00:10:53.180
monster shooter 2 prince of persia'
 

00:10:53.180 --> 00:10:55.570
monster shooter 2 prince of persia'
shadow and the flame and Riptide gp2

00:10:55.570 --> 00:10:55.580
shadow and the flame and Riptide gp2
 

00:10:55.580 --> 00:10:58.540
shadow and the flame and Riptide gp2
from vector unit we'll be back next week

00:10:58.540 --> 00:10:58.550
from vector unit we'll be back next week
 

00:10:58.550 --> 00:11:00.249
from vector unit we'll be back next week
for more of what's new in Android

00:11:00.249 --> 00:11:00.259
for more of what's new in Android
 

00:11:00.259 --> 00:11:01.809
for more of what's new in Android
in the meantime that's all for our

00:11:01.809 --> 00:11:01.819
in the meantime that's all for our
 

00:11:01.819 --> 00:11:03.699
in the meantime that's all for our
special what's new in Android 4.3

00:11:03.699 --> 00:11:03.709
special what's new in Android 4.3
 

00:11:03.709 --> 00:11:05.679
special what's new in Android 4.3
edition thanks for watching and remember

00:11:05.679 --> 00:11:05.689
edition thanks for watching and remember
 

00:11:05.689 --> 00:11:10.389
edition thanks for watching and remember
that these Saiyans fall into my mind

