WEBVTT
Kind: captions
Language: en

00:00:03.640 --> 00:00:05.220
ANKUR: Hi everyone.

00:00:05.220 --> 00:00:07.480
Welcome to the Android
Developer Lab+.

00:00:07.480 --> 00:00:11.470
This week we're going to be
talking about notifications.

00:00:11.470 --> 00:00:13.630
And this is actually our second
run time through,

00:00:13.630 --> 00:00:17.130
because we seem to have some
technical difficulties.

00:00:17.130 --> 00:00:19.760
So hopefully we get it
right this time.

00:00:19.760 --> 00:00:23.090
And with that being said, let's
move on to news before

00:00:23.090 --> 00:00:24.910
we talk about notifications.

00:00:24.910 --> 00:00:27.710
So news for this week is
that we've launched a

00:00:27.710 --> 00:00:29.800
new developer console.

00:00:29.800 --> 00:00:33.630
So if you've ever published an
Android app before, or if

00:00:33.630 --> 00:00:36.810
you've even registered as an
Android developer, you can go

00:00:36.810 --> 00:00:40.310
to your developer console or
your publisher console now.

00:00:40.310 --> 00:00:42.980
And you can enable
the new console.

00:00:42.980 --> 00:00:46.320
It's something that we've been
working very hard towards.

00:00:46.320 --> 00:00:50.010
We announced its beta
at Google I/O three

00:00:50.010 --> 00:00:51.390
months ago in June.

00:00:51.390 --> 00:00:54.390
Actually, it's been over
three months ago.

00:00:54.390 --> 00:00:55.400
It was at the end of June.

00:00:55.400 --> 00:00:57.570
So three and half months ago.

00:00:57.570 --> 00:01:00.680
And we're thrilled that
we can finally

00:01:00.680 --> 00:01:01.590
launch it to the world.

00:01:01.590 --> 00:01:03.460
We've had some very
positive feedback.

00:01:03.460 --> 00:01:06.680
But we want to continue
to hear your feedback.

00:01:06.680 --> 00:01:10.470
So if there's something that you
feel could be better, we

00:01:10.470 --> 00:01:13.940
definitely want you to send
us that feedback.

00:01:13.940 --> 00:01:15.850
The other thing we want to
announce is that we now

00:01:15.850 --> 00:01:18.860
support a couple new
buyer currencies in

00:01:18.860 --> 00:01:20.580
India and in Russia.

00:01:20.580 --> 00:01:23.820
So you can actually now, when
you publish your apps, you can

00:01:23.820 --> 00:01:27.680
specify the local price
that users will

00:01:27.680 --> 00:01:30.160
pay in those countries.

00:01:30.160 --> 00:01:32.730
This is not seller support,
so don't get that

00:01:32.730 --> 00:01:33.940
part mixed up yet.

00:01:33.940 --> 00:01:36.530
We're still working
hard towards that.

00:01:36.530 --> 00:01:40.530
But this is a good first
stepping stone for Indian

00:01:40.530 --> 00:01:43.960
users and Russian users.

00:01:43.960 --> 00:01:46.310
So next slide, please.

00:01:46.310 --> 00:01:49.270
Last week we announced something
that we call ADL+

00:01:49.270 --> 00:01:50.490
experiments.

00:01:50.490 --> 00:01:55.920
And ADL+ experiments is
basically a way for Android

00:01:55.920 --> 00:01:59.780
developers to get involved in
some of the APIs that we

00:01:59.780 --> 00:02:02.480
present here on ADL+.

00:02:02.480 --> 00:02:05.870
So we're hoping that this is the
first of many experiments.

00:02:05.870 --> 00:02:09.639
And basically what it is is that
last week we presented on

00:02:09.639 --> 00:02:12.140
the connectivity APIs--

00:02:12.140 --> 00:02:13.670
or Anirudh presented.

00:02:13.670 --> 00:02:16.150
So we're asking you to build
something cool with those

00:02:16.150 --> 00:02:19.510
connectivity APIs and
showcase it to the

00:02:19.510 --> 00:02:22.880
Android developer community.

00:02:22.880 --> 00:02:24.740
So submit away.

00:02:24.740 --> 00:02:29.970
What you need to do is add +ADL+
Experiments on Google+.

00:02:29.970 --> 00:02:32.520
There's a shortened URL there.

00:02:32.520 --> 00:02:36.610
But you can just do a search
for it on Plus, too.

00:02:36.610 --> 00:02:40.370
And basically add that page,
build your app, your APK.

00:02:40.370 --> 00:02:42.850
Share it with that Plus page.

00:02:42.850 --> 00:02:45.890
And let us know how we
should use your app,

00:02:45.890 --> 00:02:47.370
what makes it cool.

00:02:47.370 --> 00:02:51.310
So we've set up a cut off date
of the 30th of October.

00:02:51.310 --> 00:02:53.980
So it gives you several
weeks to build it.

00:02:53.980 --> 00:02:55.720
And it doesn't have to
be totally polished.

00:02:55.720 --> 00:02:57.640
It's really about the creative
concepts that

00:02:57.640 --> 00:02:59.160
we're looking at.

00:02:59.160 --> 00:03:03.910
And the apps that we find to be
most creative, we will try

00:03:03.910 --> 00:03:07.940
and bring those developers on
ADL+ in a future episode.

00:03:07.940 --> 00:03:10.260
We're trying to showcase
your app.

00:03:10.260 --> 00:03:14.370
And yeah, we really want to be
just surprised and impressed

00:03:14.370 --> 00:03:18.680
by the creativity of
this community.

00:03:18.680 --> 00:03:21.440
So with that being said, I'm
going to now hand it over to

00:03:21.440 --> 00:03:24.250
Tony, who's going to talk
about notifications.

00:03:24.250 --> 00:03:26.260
TONY: Thank you, Ankur.

00:03:26.260 --> 00:03:31.140
So today our presentation
is about notifications.

00:03:31.140 --> 00:03:40.205
And so before we defer to the
details, let's do an overview

00:03:40.205 --> 00:03:43.610
of what notification is for.

00:03:43.610 --> 00:03:47.900
So notification is really a
feature to allow developers to

00:03:47.900 --> 00:03:53.700
display messages to the user
outside of your application

00:03:53.700 --> 00:03:56.140
user interface.

00:03:56.140 --> 00:04:00.470
And also keep the user informed
about some important

00:04:00.470 --> 00:04:05.250
events that requires immediate
attention.

00:04:05.250 --> 00:04:09.580
Another use case of notification
is you can use it

00:04:09.580 --> 00:04:14.680
as a log in Android that
chronicles events while the

00:04:14.680 --> 00:04:17.479
user is not using the phone
or paying attention.

00:04:20.290 --> 00:04:24.900
So when to use a display
of notification?

00:04:24.900 --> 00:04:31.040
So the primary use case is
really time sensitive events.

00:04:31.040 --> 00:04:35.240
And also usually these kind of
events also involve other

00:04:35.240 --> 00:04:39.300
people to the phone owner.

00:04:39.300 --> 00:04:43.305
Some other use cases could be
using a notification for

00:04:43.305 --> 00:04:45.630
asynchronous or undirected
information.

00:04:45.630 --> 00:04:54.180
But in these cases, we recommend
developer to allow

00:04:54.180 --> 00:05:00.970
user to opt in or opt out to
that kind of notification.

00:05:00.970 --> 00:05:05.790
So when not to display
a notification?

00:05:05.790 --> 00:05:11.200
So there are actually quite a
few scenarios you probably

00:05:11.200 --> 00:05:12.800
don't want to use
notification.

00:05:15.420 --> 00:05:20.570
One example is if the user is
already in your application,

00:05:20.570 --> 00:05:24.920
and the information you want
to be present in the

00:05:24.920 --> 00:05:29.120
notification is already
currently on the screen, don't

00:05:29.120 --> 00:05:31.820
create a notification.

00:05:31.820 --> 00:05:38.820
So also, low level technical
operations shouldn't be

00:05:38.820 --> 00:05:41.670
included in notifications
as well.

00:05:41.670 --> 00:05:46.640
And sometimes, like when you
have errors that your

00:05:46.640 --> 00:05:50.950
application can recover, those
are the stuff that are

00:05:50.950 --> 00:05:54.060
probably not a good candidate
for notification.

00:05:54.060 --> 00:06:00.740
And finally, if you just think
about presenting a

00:06:00.740 --> 00:06:05.680
notification just manually to
advertise your application or

00:06:05.680 --> 00:06:11.160
just create brand awareness,
those are not good candidates

00:06:11.160 --> 00:06:12.912
for notification again.

00:06:12.912 --> 00:06:15.670
And in those cases, you probably
want to consider

00:06:15.670 --> 00:06:20.440
building a widget in order to
keep your user engaged with

00:06:20.440 --> 00:06:21.720
your application.

00:06:24.530 --> 00:06:28.610
So what's new in Jelly
Bean in terms of

00:06:28.610 --> 00:06:30.090
notification features?

00:06:30.090 --> 00:06:34.790
So one main thing we introduced
in Jelly Bean is we

00:06:34.790 --> 00:06:37.370
added rich notification
support.

00:06:37.370 --> 00:06:40.960
And I will talk in detail
about that later.

00:06:43.860 --> 00:06:46.670
Another important thing
developers should be aware of

00:06:46.670 --> 00:06:53.200
is now in Jelly Bean later,
the user can now disable

00:06:53.200 --> 00:06:57.440
notification per application.

00:06:57.440 --> 00:07:04.070
So that really actually gives
developers an incentive to do

00:07:04.070 --> 00:07:05.340
notification properly.

00:07:05.340 --> 00:07:11.290
Because now the user can
completely disable your

00:07:11.290 --> 00:07:13.574
notification.

00:07:13.574 --> 00:07:18.410
Another nice thing we add in
notification in Jelly Bean is

00:07:18.410 --> 00:07:20.650
we added priority.

00:07:20.650 --> 00:07:25.150
So in the past, developer has
to be probably choose to use

00:07:25.150 --> 00:07:28.400
[? ongoing ?] notification
in order to keep their

00:07:28.400 --> 00:07:30.600
notifications sticky
on the screen.

00:07:30.600 --> 00:07:36.580
But now we have a better
mechanism to handle different

00:07:36.580 --> 00:07:41.320
kind of notification in
different priority.

00:07:41.320 --> 00:07:46.040
So notification,
we [INAUDIBLE].

00:08:00.780 --> 00:08:03.900
Before we talk about rich
notification, let's talk about

00:08:03.900 --> 00:08:07.030
the standard, basic layout
for notification.

00:08:07.030 --> 00:08:13.660
So this is what we have priority
on Jelly Bean.

00:08:13.660 --> 00:08:18.720
So it's really a few
components in the

00:08:18.720 --> 00:08:19.570
notification--

00:08:19.570 --> 00:08:24.100
the content title, there's
a large icon on the left.

00:08:24.100 --> 00:08:28.750
And also you can put some text
under the title, and also

00:08:28.750 --> 00:08:30.790
sometimes content information.

00:08:30.790 --> 00:08:33.530
In the lower right corner,
you can add a small icon.

00:08:33.530 --> 00:08:35.580
And also the time of
your notification.

00:08:38.700 --> 00:08:43.110
So next, we'll talk about
rich notification.

00:08:43.110 --> 00:08:46.960
So this is again introducing
Jelly Bean.

00:08:46.960 --> 00:08:53.230
And now one thing kind of
special is in the past, you

00:08:53.230 --> 00:08:58.345
needed to create a custom
view to create actions.

00:08:58.345 --> 00:09:02.310
But now actions are really first
class citizen in the

00:09:02.310 --> 00:09:04.336
notification framework.

00:09:04.336 --> 00:09:08.875
It also is a lot more flexible
in terms of size

00:09:08.875 --> 00:09:10.450
and size and layout.

00:09:10.450 --> 00:09:17.460
It can grow up to 256dp in
height, which is what we call

00:09:17.460 --> 00:09:19.870
four units of notifications.

00:09:19.870 --> 00:09:27.510
So in the past, it was 64dp
per notification.

00:09:27.510 --> 00:09:33.390
So you can have up to four times
the size of notification

00:09:33.390 --> 00:09:35.880
you can use.

00:09:35.880 --> 00:09:40.420
We added priority, so five
different type of priority.

00:09:40.420 --> 00:09:48.530
And again use those priorities
responsibly.

00:09:48.530 --> 00:09:53.450
So this is the big view I
was mentioning for rich

00:09:53.450 --> 00:09:55.240
notification.

00:09:55.240 --> 00:10:00.730
So pretty much, we still have
all the old components,

00:10:00.730 --> 00:10:01.850
existing components.

00:10:01.850 --> 00:10:06.550
But we added a new component
called detail

00:10:06.550 --> 00:10:10.992
areas for the big view.

00:10:10.992 --> 00:10:13.310
ANKUR: Yeah, I just want to--

00:10:13.310 --> 00:10:13.870
sorry, Tony--

00:10:13.870 --> 00:10:19.780
I just want to emphasize there
that notifications are--

00:10:19.780 --> 00:10:23.170
originally, they were just
being used as a way to

00:10:23.170 --> 00:10:27.060
showcase instantaneous
information.

00:10:27.060 --> 00:10:28.730
Like hey, you have an
instant message.

00:10:28.730 --> 00:10:31.990
But you can see with all of this
capability that we are

00:10:31.990 --> 00:10:34.810
adding into rich notifications,
it's a lot more

00:10:34.810 --> 00:10:38.560
than just conveying instant
information.

00:10:38.560 --> 00:10:40.980
You can see here in this screen
shot, we can see the

00:10:40.980 --> 00:10:44.100
list of Gmail conversations.

00:10:44.100 --> 00:10:46.650
Tony talked about the
fact that we can

00:10:46.650 --> 00:10:49.040
have actions on there.

00:10:49.040 --> 00:10:51.880
What that really means is that
users are able to interact

00:10:51.880 --> 00:10:54.740
with your app without actually
switching into your app.

00:10:54.740 --> 00:10:57.240
So it's a really great way to
keep them engaged without

00:10:57.240 --> 00:11:01.026
having them go in and out
of apps all the time.

00:11:01.026 --> 00:11:01.420
TONY: Yeah.

00:11:01.420 --> 00:11:07.530
So you really want to, for some
of the simple tasks that

00:11:07.530 --> 00:11:12.200
users can quickly handle within
the notifications--

00:11:12.200 --> 00:11:17.870
those are actually what the
action buttons are for.

00:11:17.870 --> 00:11:24.240
And for the complex task, it's
still recommended to redirect

00:11:24.240 --> 00:11:30.330
the user to your application
to do the [INAUDIBLE]

00:11:30.330 --> 00:11:31.390
complex tasks.

00:11:31.390 --> 00:11:34.600
And for simple stuff, you can
really enhance the user

00:11:34.600 --> 00:11:39.810
experience if you create
actions within the

00:11:39.810 --> 00:11:42.230
notification.

00:11:42.230 --> 00:11:46.600
So let's talk about how to
create a simple notification.

00:11:46.600 --> 00:11:52.840
So one thing we add later in
our API is we now have a

00:11:52.840 --> 00:11:58.640
builder to build notification.

00:11:58.640 --> 00:12:02.400
And we also introduce
something called

00:12:02.400 --> 00:12:06.080
NotificationCompat in
the support library.

00:12:06.080 --> 00:12:10.850
So that makes your notification
implementation

00:12:10.850 --> 00:12:12.100
backward compatible.

00:12:15.800 --> 00:12:19.630
It's not in the sense like order
in which notification

00:12:19.630 --> 00:12:29.150
feature will be available in
the older Android versions.

00:12:29.150 --> 00:12:35.395
But it has to make sure your
code will not break in

00:12:35.395 --> 00:12:36.645
[INAUDIBLE].

00:12:38.400 --> 00:12:41.720
There are a couple of required
contents in forming a

00:12:41.720 --> 00:12:42.820
notification.

00:12:42.820 --> 00:12:49.170
So a small icon, a title,
and the detail text.

00:12:49.170 --> 00:12:54.030
This is a code snippet on how
to use builder to build a

00:12:54.030 --> 00:12:55.465
simple notification.

00:13:01.430 --> 00:13:07.380
So the next thing I want to go
through is how to create a big

00:13:07.380 --> 00:13:11.970
view, so the rich
notification UI.

00:13:11.970 --> 00:13:15.990
So it turns out we
have a new style.

00:13:15.990 --> 00:13:18.760
We make it really easy
for developers to

00:13:18.760 --> 00:13:22.020
create these big views.

00:13:22.020 --> 00:13:23.630
So we have a few templates.

00:13:23.630 --> 00:13:26.650
So one of them is called
inbox style.

00:13:26.650 --> 00:13:33.490
So you can use the compatibility
library class

00:13:33.490 --> 00:13:34.210
inbox style.

00:13:34.210 --> 00:13:35.750
Create [INAUDIBLE] of that.

00:13:35.750 --> 00:13:41.630
And then you can add the content
title for the big

00:13:41.630 --> 00:13:48.520
view, which is a replacement of
the regular content title.

00:13:48.520 --> 00:13:52.810
And then you can add new
lines with the details.

00:13:52.810 --> 00:13:58.210
And then set the inbox style as
the style you use for big

00:13:58.210 --> 00:13:59.460
content view.

00:14:02.080 --> 00:14:05.070
So there are other styles, as
I mentioned, available.

00:14:05.070 --> 00:14:07.460
One is called the big
picture style.

00:14:07.460 --> 00:14:13.760
So if you are building some
social network style like

00:14:13.760 --> 00:14:20.230
application or photo application
that has a lot of

00:14:20.230 --> 00:14:24.255
pictures, you can consider
using the picture style.

00:14:24.255 --> 00:14:28.460
Big text, again, of course is if
you have more text you want

00:14:28.460 --> 00:14:31.470
to display, that's probably
what you want to use.

00:14:31.470 --> 00:14:39.040
And if your application actually
involves multiple

00:14:39.040 --> 00:14:42.790
messages or information, you
can use the inbox style.

00:14:42.790 --> 00:14:49.860
So here is kind of a breakdown
of things like how each

00:14:49.860 --> 00:14:54.520
different style, what is
available in each style.

00:14:54.520 --> 00:15:01.220
So title is really for
a notification.

00:15:01.220 --> 00:15:04.710
In the normal view, we use
set content title.

00:15:04.710 --> 00:15:07.560
And for all the big views,
we are using

00:15:07.560 --> 00:15:09.240
set big content title.

00:15:09.240 --> 00:15:14.940
It's merely a replacement of the
set content title content.

00:15:14.940 --> 00:15:20.070
Small icon is available
throughout all the

00:15:20.070 --> 00:15:22.150
normal and big view.

00:15:22.150 --> 00:15:25.912
One caveat we noticed is in
order to have that small icon

00:15:25.912 --> 00:15:29.070
to show up on the screen,
you really need to

00:15:29.070 --> 00:15:32.330
set the summary text.

00:15:32.330 --> 00:15:35.560
So large icons would be
available across all different

00:15:35.560 --> 00:15:37.040
style, again.

00:15:37.040 --> 00:15:41.660
And for content text--

00:15:41.660 --> 00:15:44.310
so normal style, you use
set content text.

00:15:44.310 --> 00:15:46.840
But for big text, it's actually
not available.

00:15:49.992 --> 00:15:54.680
For big text, we have a special
method called big text

00:15:54.680 --> 00:16:00.020
that allows a developer to
add the big chunk of

00:16:00.020 --> 00:16:04.380
text in the big view.

00:16:04.380 --> 00:16:07.560
Big picture is also, again,
only available in the big

00:16:07.560 --> 00:16:09.450
picture style.

00:16:09.450 --> 00:16:12.870
And finally, the summary
text is available

00:16:12.870 --> 00:16:15.520
in all the big views.

00:16:15.520 --> 00:16:21.010
This is kind of a nice summary
of what's available in

00:16:21.010 --> 00:16:22.710
different styles.

00:16:22.710 --> 00:16:24.510
ANKUR: I totally agree, Tony.

00:16:24.510 --> 00:16:29.000
This is actually a really,
really useful summary that you

00:16:29.000 --> 00:16:31.040
could spend some time trying
to find this sort of

00:16:31.040 --> 00:16:31.630
information.

00:16:31.630 --> 00:16:33.550
So it's really useful.

00:16:33.550 --> 00:16:37.300
One other thing that I'll just
add with the inbox style, is

00:16:37.300 --> 00:16:39.690
that you can actually add
multiple lines of text.

00:16:39.690 --> 00:16:42.260
There's a method called
add line.

00:16:42.260 --> 00:16:44.080
And it's quite interesting
in the way that it works.

00:16:44.080 --> 00:16:48.310
Whereas with big text, it'll
actually automatically wrap

00:16:48.310 --> 00:16:52.380
the line, and try and put as
much of the text in that view

00:16:52.380 --> 00:16:53.490
as possible.

00:16:53.490 --> 00:16:56.960
With inbox, what it will do
is, for each line, if that

00:16:56.960 --> 00:16:59.270
line is too long, it won't
wrap the line.

00:16:59.270 --> 00:17:00.350
It will ellipse size it.

00:17:00.350 --> 00:17:03.670
So basically what that means is,
it will truncate the text

00:17:03.670 --> 00:17:06.180
and put a dot, dot, dot at
the end of each line.

00:17:06.180 --> 00:17:08.170
So just a subtle difference
there

00:17:08.170 --> 00:17:10.886
that's also worth noting.

00:17:10.886 --> 00:17:12.260
TONY: Yep.

00:17:12.260 --> 00:17:14.150
Thanks, Ankur.

00:17:14.150 --> 00:17:22.530
So one thing probably you want
to pay attention is when the

00:17:22.530 --> 00:17:27.200
user actually click on the
notification, you really want

00:17:27.200 --> 00:17:30.770
to preserve the backstep
and the navigation.

00:17:33.820 --> 00:17:36.750
So here's how it works.

00:17:36.750 --> 00:17:38.340
You create an intent.

00:17:38.340 --> 00:17:40.750
You want to create
a pending intent.

00:17:40.750 --> 00:17:47.800
That's actually what you do when
you launch something from

00:17:47.800 --> 00:17:50.110
notification.

00:17:50.110 --> 00:17:55.000
But there's one additional step
you need to do, is to

00:17:55.000 --> 00:18:02.400
create a TaskStackBuilder to
add the previous activity

00:18:02.400 --> 00:18:05.600
before in the backstep.

00:18:05.600 --> 00:18:09.880
So that when the user hits the
back button, it won't just go

00:18:09.880 --> 00:18:11.390
back to the home screen.

00:18:11.390 --> 00:18:17.590
But instead, going to your
application, just normally

00:18:17.590 --> 00:18:24.090
what the user would experience
when he or she is using your

00:18:24.090 --> 00:18:25.200
application.

00:18:25.200 --> 00:18:29.385
So that's one thing you
need to pay attention.

00:18:32.370 --> 00:18:36.740
I just want to talk a little
bit about removing

00:18:36.740 --> 00:18:38.010
notifications.

00:18:38.010 --> 00:18:41.260
So there are a couple ways
you can do removing of

00:18:41.260 --> 00:18:42.040
notifications.

00:18:42.040 --> 00:18:46.800
So of course, the user
can do this manually.

00:18:46.800 --> 00:18:50.720
But when you're building a
notification, if you set

00:18:50.720 --> 00:18:54.820
AutoCancel, this will
automatically dismiss your

00:18:54.820 --> 00:18:57.210
notification when the user
actually touches the

00:18:57.210 --> 00:18:58.680
notification.

00:18:58.680 --> 00:19:03.960
Of course again, the user can
swipe left or right to create

00:19:03.960 --> 00:19:05.290
a notification.

00:19:05.290 --> 00:19:08.970
Or they simply click the
Clear All button.

00:19:08.970 --> 00:19:13.320
Also programmatically
in your application,

00:19:13.320 --> 00:19:15.966
you can use two methods--

00:19:15.966 --> 00:19:20.790
a cancel method provided with
the perimeter of the

00:19:20.790 --> 00:19:22.430
notification ID.

00:19:22.430 --> 00:19:25.490
Or you can cancel all the
notifications you create.

00:19:25.490 --> 00:19:31.450
So this is particularly useful
when you want to handle your

00:19:31.450 --> 00:19:32.600
notifications intelligently.

00:19:32.600 --> 00:19:38.650
We talk about that in some of
our talks before, to create

00:19:38.650 --> 00:19:40.330
intelligent notifications.

00:19:40.330 --> 00:19:47.010
Like one example is, if there
are some events that are

00:19:47.010 --> 00:19:52.070
already in the past, like
it could be a calendar

00:19:52.070 --> 00:19:56.150
application, you may want to
actually remove some of the

00:19:56.150 --> 00:19:57.145
[INAUDIBLE]

00:19:57.145 --> 00:20:04.750
and notification because it's
already passed the event.

00:20:04.750 --> 00:20:10.210
So these methods will be useful
for taking care of

00:20:10.210 --> 00:20:11.460
expired notifications.

00:20:13.980 --> 00:20:17.480
So just to summarize again.

00:20:17.480 --> 00:20:23.250
So one thing is use
notifications judiciously.

00:20:23.250 --> 00:20:27.020
Primarily, you want to only
use notification for time

00:20:27.020 --> 00:20:33.020
sensitive information or things
that involve people.

00:20:33.020 --> 00:20:38.760
And keep in mind to make
notification optional.

00:20:38.760 --> 00:20:42.270
Because as now in Jelly Bean
or later, a user can

00:20:42.270 --> 00:20:43.730
completely disable it.

00:20:43.730 --> 00:20:47.990
So your apps should not have
really features that are only

00:20:47.990 --> 00:20:52.680
available through actions
in the notifications.

00:20:52.680 --> 00:20:54.230
So that's very important.

00:20:54.230 --> 00:20:58.860
And finally, use
NotificationCompat in the

00:20:58.860 --> 00:21:03.446
support library to take out
backward compatibility.

00:21:03.446 --> 00:21:07.630
ANKUR: I just want to add to
the comment that Tony said

00:21:07.630 --> 00:21:10.850
about using them judiciously.

00:21:10.850 --> 00:21:13.870
An example of a way you would
call it a bad use of

00:21:13.870 --> 00:21:18.110
notifications is if you have
an app that preloads or

00:21:18.110 --> 00:21:21.550
refreshes every so often, it's
not a good idea to use a

00:21:21.550 --> 00:21:24.720
notification to say hey, I'm
doing this in the background.

00:21:24.720 --> 00:21:30.600
I'm fetching your next set of
emails or your news feed.

00:21:30.600 --> 00:21:33.770
That sort of information's
fairly superfluous.

00:21:33.770 --> 00:21:36.120
It's the kind of information
that you could choose if you

00:21:36.120 --> 00:21:39.930
wanted to show it within your
app, but the notification is

00:21:39.930 --> 00:21:42.880
certainly not the place where
you would do that.

00:21:42.880 --> 00:21:45.060
There are exceptions where it's

00:21:45.060 --> 00:21:46.530
something like a download.

00:21:46.530 --> 00:21:48.530
Because a download is something
that a user has

00:21:48.530 --> 00:21:49.975
explicitly initiated.

00:21:49.975 --> 00:21:54.580
So in a web browser, for
example, there it kind of

00:21:54.580 --> 00:21:55.770
makes a little bit more sense.

00:21:55.770 --> 00:21:58.290
Because they might be waiting
for that file to come through.

00:21:58.290 --> 00:22:00.710
But certainly, you shouldn't be
doing it just for periodic

00:22:00.710 --> 00:22:02.260
updates or anything like that.

00:22:02.260 --> 00:22:06.530
Those two points about being
time sensitive and involving

00:22:06.530 --> 00:22:12.090
either the user or people that
the user is familiar with,

00:22:12.090 --> 00:22:14.810
it's quite an important point.

00:22:14.810 --> 00:22:15.530
TONY: Right.

00:22:15.530 --> 00:22:20.360
So two things that can help you,
if you are really worried

00:22:20.360 --> 00:22:22.350
about the user experience.

00:22:22.350 --> 00:22:27.910
So two things that can help you
to do is to address that

00:22:27.910 --> 00:22:32.325
is, one, have a setting in
your application to make

00:22:32.325 --> 00:22:34.230
notification or some of the

00:22:34.230 --> 00:22:37.320
notifications opt-in or optional.

00:22:37.320 --> 00:22:39.660
So the user has a
choice to do it.

00:22:39.660 --> 00:22:41.980
The other thing is if you
think some of the

00:22:41.980 --> 00:22:48.150
notifications may be too low
level or not directly

00:22:48.150 --> 00:22:53.180
relevant, consider using a low
priority notification.

00:22:53.180 --> 00:22:56.240
Let the system, let the
framework handle those things

00:22:56.240 --> 00:22:58.460
properly for you.

00:22:58.460 --> 00:23:02.180
ANKUR: Yeah, actually one
of the games we recently

00:23:02.180 --> 00:23:05.920
featured, I think it was last
week or maybe the week before,

00:23:05.920 --> 00:23:09.290
called Kingdoms of Camelot, I
was trying this game out.

00:23:09.290 --> 00:23:12.910
And it's sort of like a
Farmville-type clone set up in

00:23:12.910 --> 00:23:13.760
a fantasy world.

00:23:13.760 --> 00:23:17.410
So you're building farms and
you're training armies and

00:23:17.410 --> 00:23:19.390
researching better
swords and so on.

00:23:19.390 --> 00:23:21.670
They had an interesting
use of notifications.

00:23:21.670 --> 00:23:24.630
Where, because the game is very
much based on real time,

00:23:24.630 --> 00:23:27.240
it'll say something like,
you can only build

00:23:27.240 --> 00:23:28.260
one building at once.

00:23:28.260 --> 00:23:30.370
And it's going to take two
hours to build it.

00:23:30.370 --> 00:23:33.900
They use a notification to let
the user know that, hey, the

00:23:33.900 --> 00:23:34.620
building is done.

00:23:34.620 --> 00:23:37.280
So it kind of reminds you
to get back in the game.

00:23:37.280 --> 00:23:39.130
It's a little bit
more engaging.

00:23:39.130 --> 00:23:42.290
Now that was kind of a nice way
to do it for that game.

00:23:42.290 --> 00:23:45.340
And in those situations, you
definitely want to have that

00:23:45.340 --> 00:23:48.410
setting like Tony said, to have
an option to turn that

00:23:48.410 --> 00:23:50.360
sort of stuff off.

00:23:50.360 --> 00:23:52.960
But that was a clever way of
doing it, because it was

00:23:52.960 --> 00:23:56.120
getting the user engaged
more with that title.

00:23:56.120 --> 00:24:00.080
You don't want to do it in just
a periodic daily, hey,

00:24:00.080 --> 00:24:02.420
have you come and launched
my app recently or

00:24:02.420 --> 00:24:04.120
anything like that.

00:24:04.120 --> 00:24:06.500
But think about really--

00:24:06.500 --> 00:24:09.230
at Google we always talk about
putting the user first.

00:24:09.230 --> 00:24:12.690
So think about what is it that
will add value to the user

00:24:12.690 --> 00:24:14.998
from your app.

00:24:14.998 --> 00:24:15.400
TONY: Yeah.

00:24:15.400 --> 00:24:18.365
So I think for the application,
another thing

00:24:18.365 --> 00:24:22.060
that may also complement what
they're doing is they can

00:24:22.060 --> 00:24:25.130
probably create a
widget as well.

00:24:25.130 --> 00:24:29.990
That may be also a good option
to keep the user

00:24:29.990 --> 00:24:33.140
engaged with the games.

00:24:33.140 --> 00:24:36.920
All right, so that's pretty much
what I have this week for

00:24:36.920 --> 00:24:37.980
the presentation.

00:24:37.980 --> 00:24:42.240
And let's move on to
Q&amp;A. Ankur, do

00:24:42.240 --> 00:24:45.631
you have the moderator?

00:24:45.631 --> 00:24:49.750
ANKUR: Well actually the first
moderator question was by

00:24:49.750 --> 00:24:52.990
Andrew Kelly, who's live
with us today.

00:24:52.990 --> 00:24:57.156
So Andrew, do you want
to just ask live?

00:24:57.156 --> 00:24:58.930
ANDREW: Yeah, sure,
no worries.

00:24:58.930 --> 00:25:04.460
It was related to, in app
billing, I've got an app that

00:25:04.460 --> 00:25:07.880
has in-app purchases
for managed items.

00:25:07.880 --> 00:25:12.880
And I was just trying to work
out, if they uninstall the app

00:25:12.880 --> 00:25:16.830
from the device and then
reinstall it, I can call a

00:25:16.830 --> 00:25:21.380
method to get back their
purchases from the Google Play

00:25:21.380 --> 00:25:25.020
store to see what items they've
actually purchased.

00:25:25.020 --> 00:25:28.060
But there doesn't seem to be a
way of getting the details of

00:25:28.060 --> 00:25:31.200
the individual items that
they've paid for and stuff.

00:25:31.200 --> 00:25:33.000
So I was just trying to work
out how I would do that

00:25:33.000 --> 00:25:35.130
without having to store
each one in a

00:25:35.130 --> 00:25:38.500
database on my server.

00:25:38.500 --> 00:25:39.750
ANKUR: Yeah, so typically--

00:25:42.670 --> 00:25:47.140
when you do restore
transactions, you are getting

00:25:47.140 --> 00:25:48.430
the transactions back, right?

00:25:48.430 --> 00:25:50.680
Like the purchases, you're
getting that information,

00:25:50.680 --> 00:25:51.950
aren't you?

00:25:51.950 --> 00:25:53.370
ANDREW: I don't think so.

00:25:53.370 --> 00:25:57.750
The callback method that gets
calls just seems to return a

00:25:57.750 --> 00:26:01.360
response object that
says yes or no.

00:26:01.360 --> 00:26:03.670
I'm just trying to work out
which part of the API actually

00:26:03.670 --> 00:26:04.940
provides the list of--

00:26:04.940 --> 00:26:07.180
ANKUR: So what it's supposed to
tell you is, hey, has that

00:26:07.180 --> 00:26:10.060
purchase been purchased or
not, is that correct?

00:26:12.580 --> 00:26:15.070
I guess, what information are
you trying to glean out of it

00:26:15.070 --> 00:26:16.130
in your app?

00:26:16.130 --> 00:26:20.640
Because the way restored
transactions from managed

00:26:20.640 --> 00:26:22.910
items works is that it basically
tells you, hey,

00:26:22.910 --> 00:26:25.240
these are the list of items
that have been purchased.

00:26:25.240 --> 00:26:28.520
And just for the audience,
managed items are typically

00:26:28.520 --> 00:26:29.980
one-off purchases.

00:26:29.980 --> 00:26:32.650
They're not the consumable
type of purchases.

00:26:32.650 --> 00:26:37.780
So once you know that you've
purchased a particular item,

00:26:37.780 --> 00:26:41.740
you know that it should be
unlocked in your app or

00:26:41.740 --> 00:26:44.860
available in your
app throughout.

00:26:44.860 --> 00:26:47.830
So it won't give you necessarily
all the same level

00:26:47.830 --> 00:26:52.270
of detail that you get when you
purchase the item for the

00:26:52.270 --> 00:26:52.840
first time.

00:26:52.840 --> 00:26:54.930
But it should at least
tell you--

00:26:54.930 --> 00:26:58.100
the API should be telling you,
hey, this particular item ID

00:26:58.100 --> 00:26:59.645
has been purchased.

00:26:59.645 --> 00:27:04.120
And pretty much on a restore
workflow, that should be

00:27:04.120 --> 00:27:06.750
enough to get you through.

00:27:06.750 --> 00:27:09.850
If you want to store the extra
information that we do on the

00:27:09.850 --> 00:27:13.870
initial purchase, you do need
to store it on a server.

00:27:13.870 --> 00:27:18.450
But I guess I'm trying to
understand, is there something

00:27:18.450 --> 00:27:21.790
critical that's missing on that
restore transaction that

00:27:21.790 --> 00:27:23.254
you're not getting?

00:27:23.254 --> 00:27:25.760
ANDREW: Well, I'm just trying to
work out which bit has that

00:27:25.760 --> 00:27:26.580
list of information.

00:27:26.580 --> 00:27:29.690
Because if I call the restore
transaction, the callback

00:27:29.690 --> 00:27:33.110
method is called on restore
transactions response.

00:27:33.110 --> 00:27:36.150
And the only two parameters that
get passed back there is

00:27:36.150 --> 00:27:38.620
the request and the
response to it.

00:27:38.620 --> 00:27:42.350
And the response to it only
seems to say, OK or not OK.

00:27:42.350 --> 00:27:47.130
It doesn't seem to have a list
of the actual items as part of

00:27:47.130 --> 00:27:48.446
that response.

00:27:48.446 --> 00:27:51.160
ANKUR: Oh, I see.

00:27:51.160 --> 00:27:53.180
Good question.

00:27:53.180 --> 00:27:54.850
I'm just looking that up.

00:27:54.850 --> 00:27:59.710
But if Tony or Anirudh, whilst
I'm looking it up, if you guys

00:27:59.710 --> 00:28:01.066
know off the top of your head.

00:28:01.066 --> 00:28:03.255
ANDREW: I'm using the flag at
the moment, the yes or no flag

00:28:03.255 --> 00:28:05.030
that comes back to kind of
hide my [INAUDIBLE].

00:28:05.030 --> 00:28:06.990
Because as soon as you make an
in-app purchase, I kind of

00:28:06.990 --> 00:28:10.080
remove my advertising.

00:28:10.080 --> 00:28:13.300
But the managed items in the
game form a progression.

00:28:13.300 --> 00:28:17.670
So you can only buy a level 10
after you've bought level one.

00:28:17.670 --> 00:28:21.810
So my shop changes based on
which items you've purchased

00:28:21.810 --> 00:28:22.330
previously.

00:28:22.330 --> 00:28:26.650
So I need to know those items
so I can change my UI.

00:28:31.390 --> 00:28:35.810
Maybe there's a callback that
I haven't got, that I'm

00:28:35.810 --> 00:28:37.070
missing or something.

00:28:37.070 --> 00:28:38.800
ANKUR: Let me--

00:28:38.800 --> 00:28:40.340
I don't know it off the
top of my head.

00:28:40.340 --> 00:28:44.150
But what I'll do is, let me
follow up with you after this.

00:28:44.150 --> 00:28:46.360
I'll look it up and I'll get
back in touch with you--

00:28:46.360 --> 00:28:47.272
ANDREW: No worries.

00:28:47.272 --> 00:28:50.500
ANKUR: --and we can take
it from there.

00:28:50.500 --> 00:28:54.910
And we'll share the answer on
next week's ADL+ as well.

00:28:57.480 --> 00:29:00.620
It's one of those things that
it's hard to know all of this

00:29:00.620 --> 00:29:02.930
stuff off the top
of your head.

00:29:02.930 --> 00:29:06.910
This is one that we don't know
off the top of our heads.

00:29:06.910 --> 00:29:11.590
OK, next question is from Andy
C in Perth, Australia.

00:29:11.590 --> 00:29:17.480
Are there any code examples of
using MediaCodec to encode

00:29:17.480 --> 00:29:20.960
audio, i.e., PCM to AAC.

00:29:20.960 --> 00:29:22.830
I'm having a hard
time finding any

00:29:22.830 --> 00:29:25.460
information about this class.

00:29:25.460 --> 00:29:28.400
Anirudh or Tony, do you guys
want to chime in here?

00:29:31.166 --> 00:29:35.300
ANIRUDH: I just collected a
sample from CBS, [INAUDIBLE]

00:29:35.300 --> 00:29:37.880
best suited, which has
a decoder text in it.

00:29:37.880 --> 00:29:42.754
And just let me pull
the link up.

00:29:52.310 --> 00:29:55.735
So I'm just going to place this
on the Hangout chat so

00:29:55.735 --> 00:29:56.985
that you'll be able
to see this.

00:29:59.690 --> 00:30:02.980
So I've pulled up the decoder
text, and below that, decoder

00:30:02.980 --> 00:30:03.560
[? textPlus, ?]

00:30:03.560 --> 00:30:06.482
which explains MediaCodec and
how do you initialize it and

00:30:06.482 --> 00:30:08.190
how do you take the
[INAUDIBLE]

00:30:08.190 --> 00:30:09.170
to decode.

00:30:09.170 --> 00:30:10.470
And below that, I have inserted

00:30:10.470 --> 00:30:11.670
some snippets of code.

00:30:11.670 --> 00:30:12.980
And they're going to follow
a similar pattern.

00:30:15.602 --> 00:30:17.670
These are the encoder
API codes.

00:30:17.670 --> 00:30:20.530
So you can probably look at
this and see if you can

00:30:20.530 --> 00:30:20.840
[INAUDIBLE] or something.

00:30:20.840 --> 00:30:22.090
Let us know how that
goes for you.

00:30:26.210 --> 00:30:27.370
ANKUR: All right, cool.

00:30:27.370 --> 00:30:32.140
Hey Andrew, I just wanted to
follow up on your question.

00:30:32.140 --> 00:30:36.240
And if this isn't sufficient
we will take it offline.

00:30:36.240 --> 00:30:38.150
But basically, what should
be happening is

00:30:38.150 --> 00:30:39.190
that you should be--

00:30:39.190 --> 00:30:41.190
when you do a restore
transaction--

00:30:41.190 --> 00:30:43.950
at some point you should be
getting an intent saying

00:30:43.950 --> 00:30:45.910
purchase state changed.

00:30:45.910 --> 00:30:49.570
And that should be the same
intent that you received when

00:30:49.570 --> 00:30:50.860
you first made the purchase.

00:30:50.860 --> 00:30:51.610
ANDREW: No worries.

00:30:51.610 --> 00:30:52.840
I've got that method
overridden.

00:30:52.840 --> 00:30:55.740
So yeah, maybe I just need to
do a little more testing.

00:30:55.740 --> 00:30:56.630
ANKUR: Yeah.

00:30:56.630 --> 00:30:59.470
So that part of the workflow
should be the same whether

00:30:59.470 --> 00:31:03.440
it's the initial purchase
or the restore.

00:31:03.440 --> 00:31:06.400
If you do have any issues with
that, reach out to me.

00:31:06.400 --> 00:31:08.990
And I'll be happy to help out.

00:31:08.990 --> 00:31:10.130
ANDREW: No worries, brilliant.

00:31:10.130 --> 00:31:11.120
Thank you.

00:31:11.120 --> 00:31:12.100
ANKUR: No problem.

00:31:12.100 --> 00:31:14.620
Just a couple of questions
from last week's ADL+.

00:31:14.620 --> 00:31:18.130
There was a question about a
developer having some map

00:31:18.130 --> 00:31:19.380
activity issues.

00:31:21.720 --> 00:31:24.340
We had some discussions offline
and we resolved it.

00:31:24.340 --> 00:31:28.850
Basically, if you saw the
question last week, it was

00:31:28.850 --> 00:31:34.410
basically along the lines of,
hey, I've got an app that uses

00:31:34.410 --> 00:31:38.640
map activities, and on certain
devices I'm noticing that it

00:31:38.640 --> 00:31:40.140
crashes on start up.

00:31:40.140 --> 00:31:43.470
It turns out that those devices
that they were running

00:31:43.470 --> 00:31:47.300
on were not your standard
Android devices that ship with

00:31:47.300 --> 00:31:49.500
the Google services.

00:31:49.500 --> 00:31:53.950
And so basically, the app was
crashing because Google Maps

00:31:53.950 --> 00:31:56.450
didn't exist on that device.

00:31:56.450 --> 00:32:00.120
The only situation where you can
get those kind of devices

00:32:00.120 --> 00:32:05.740
are devices that are not your
Google Play certified devices.

00:32:05.740 --> 00:32:09.290
So anything that ships with
Google Play, which is where

00:32:09.290 --> 00:32:12.740
this develop was distributing
their app, should have Google

00:32:12.740 --> 00:32:13.990
Maps on it.

00:32:16.310 --> 00:32:19.240
I pointed that developer also
towards some code that they

00:32:19.240 --> 00:32:23.660
could add in their app where,
at start up, they could

00:32:23.660 --> 00:32:28.040
statically check with the map
activity classes available.

00:32:28.040 --> 00:32:30.320
And if it's not, then degrade
the experience.

00:32:30.320 --> 00:32:33.390
So that their app doesn't crash,
but it doesn't provide

00:32:33.390 --> 00:32:37.480
the map capability that
might be there.

00:32:37.480 --> 00:32:40.930
So we were able to
resolve that.

00:32:40.930 --> 00:32:44.790
The other question that we had
last week that was unresolved

00:32:44.790 --> 00:32:49.280
was also to do with referrals.

00:32:49.280 --> 00:32:51.500
So if you've got an installation
referral, and you

00:32:51.500 --> 00:32:56.630
pass in referral IDs, about that
not being passed around

00:32:56.630 --> 00:33:00.690
so that they weren't able to
track when apps were installed

00:33:00.690 --> 00:33:03.310
as a result of other apps
referring them.

00:33:03.310 --> 00:33:05.870
Basically, the resolution there
was that they needed to

00:33:05.870 --> 00:33:09.040
use a URL as opposed
to an intent.

00:33:09.040 --> 00:33:14.240
The information that's passed
in an intent is not

00:33:14.240 --> 00:33:15.410
necessarily used.

00:33:15.410 --> 00:33:18.540
And what they should be doing is
passing in a Play URL with

00:33:18.540 --> 00:33:20.740
the extra parameters
at the end.

00:33:20.740 --> 00:33:23.440
And then the referral
ID should get

00:33:23.440 --> 00:33:26.180
passed through correctly.

00:33:26.180 --> 00:33:30.800
So that's all the questions
that are up this week.

00:33:30.800 --> 00:33:32.680
Is there anything else, Anirudh
or Tony, you guys

00:33:32.680 --> 00:33:35.720
wanted to add?

00:33:35.720 --> 00:33:36.240
No?

00:33:36.240 --> 00:33:38.660
All right, well thanks everyone
for tuning in.

00:33:38.660 --> 00:33:42.330
We will see you again next
week at the same time.

00:33:42.330 --> 00:33:44.340
Until then, see you later.

00:33:44.340 --> 00:33:48.510
Oh, and don't forget to continue
looking at the ADL+

00:33:48.510 --> 00:33:50.150
experiments.

00:33:50.150 --> 00:33:52.340
We're keeping an eye out
for those submissions.

00:33:52.340 --> 00:33:53.640
All right, thank you.

00:33:53.640 --> 00:33:54.530
See you later.

00:33:54.530 --> 00:33:55.430
Bye Andrew.

00:33:55.430 --> 00:33:56.680
ANDREW: See you.

