WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.880
[MUSIC  PLAYING]

00:00:16.010 --> 00:00:19.170
STEVE BAZYL: Hi, everyone, and
thank you for watching today's

00:00:19.170 --> 00:00:21.690
GDL on Google Drive.

00:00:21.690 --> 00:00:25.020
And today, we're announcing
two features for the

00:00:25.020 --> 00:00:27.120
Google Drive SDK.

00:00:27.120 --> 00:00:30.350
One is a little tiny feature
that you might find

00:00:30.350 --> 00:00:31.280
interesting.

00:00:31.280 --> 00:00:33.510
The other one that I'm going
to spend most of the time

00:00:33.510 --> 00:00:38.200
talking about is a really cool
feature for helping users

00:00:38.200 --> 00:00:40.995
discover content that they have
in Drive created by your

00:00:40.995 --> 00:00:42.010
app a lot easier.

00:00:42.010 --> 00:00:44.690
And this is custom thumbnails.

00:00:44.690 --> 00:00:51.910
One of the nice things in the
Drive UI is the ability to

00:00:51.910 --> 00:00:54.520
visually navigate your
Drive content.

00:00:54.520 --> 00:00:57.070
This is really important if
you're navigating through

00:00:57.070 --> 00:01:03.140
photos or if you have a lot of
content that was very visually

00:01:03.140 --> 00:01:06.290
focused, charting,
presentations, things like

00:01:06.290 --> 00:01:09.840
that, where seeing an image
representation of that content

00:01:09.840 --> 00:01:13.600
is a way for users to identify
that they're actually using

00:01:13.600 --> 00:01:15.340
the file that they want.

00:01:15.340 --> 00:01:18.960
So actually, I have up
here the Drive UI.

00:01:18.960 --> 00:01:21.190
And you can see I'm just in List
view right now where all

00:01:21.190 --> 00:01:25.510
we see is really the title and
just the icons for the

00:01:25.510 --> 00:01:26.310
applications.

00:01:26.310 --> 00:01:30.590
But when I switch over to Grid
view, I get this really nice

00:01:30.590 --> 00:01:32.730
visual representation
that I mentioned.

00:01:32.730 --> 00:01:34.820
So I can see that for the
images, I've got a nice little

00:01:34.820 --> 00:01:38.395
preview, same for documents
and PDFs.

00:01:38.395 --> 00:01:40.230
But then I have this
other doc here.

00:01:40.230 --> 00:01:43.740
And this is actually a chart
that I created with one of the

00:01:43.740 --> 00:01:44.850
Drive apps--

00:01:44.850 --> 00:01:46.090
Lucidchart.

00:01:46.090 --> 00:01:50.570
And all we can do in this case
is just show the icon for the

00:01:50.570 --> 00:01:51.720
application.

00:01:51.720 --> 00:01:58.720
And as a user, unless I name my
files really well, it's not

00:01:58.720 --> 00:02:01.800
really helpful for me to know if
I have a whole folder full

00:02:01.800 --> 00:02:05.850
of these files, which is one
that I really want to work on.

00:02:05.850 --> 00:02:08.270
And part of the reason why we
don't show thumbnails in this

00:02:08.270 --> 00:02:09.539
particular case, we
don't actually

00:02:09.539 --> 00:02:10.550
have the file content.

00:02:10.550 --> 00:02:13.290
They're using a feature of the
Drive SDK that we call

00:02:13.290 --> 00:02:16.280
shortcuts, which just allows
them to put a pointer to some

00:02:16.280 --> 00:02:19.600
files that they have stored
in their own database.

00:02:19.600 --> 00:02:22.250
So it would be great if they
could actually upload an image

00:02:22.250 --> 00:02:25.140
that would help the user,
like myself, identify

00:02:25.140 --> 00:02:26.290
that content quicker.

00:02:26.290 --> 00:02:28.670
So now we can do that.

00:02:28.670 --> 00:02:31.730
I'm going to switch over
to some code here.

00:02:31.730 --> 00:02:35.260
This is actually just the Ruby
QuickStart that we did a

00:02:35.260 --> 00:02:38.410
couple presentations on
these a few weeks ago.

00:02:38.410 --> 00:02:42.420
And I modified this to allow
us to upload a thumbnail.

00:02:42.420 --> 00:02:47.710
This is actually very similar
to how an application like

00:02:47.710 --> 00:02:52.060
Lucidchart that is using
shortcuts would go about

00:02:52.060 --> 00:02:53.380
creating a document.

00:02:53.380 --> 00:02:55.170
I'm not going to go through
the entire code here, just

00:02:55.170 --> 00:02:57.600
because we've already been
through these before.

00:02:57.600 --> 00:03:00.750
I just want to focus on the
actual changes around in

00:03:00.750 --> 00:03:02.390
serving the file data.

00:03:02.390 --> 00:03:06.230
And I've changed a few things
here from the QuickStart,

00:03:06.230 --> 00:03:08.130
mostly changing the MIME type.

00:03:08.130 --> 00:03:09.780
This is the MIME type
that we use when

00:03:09.780 --> 00:03:12.410
we're creating a shortcut.

00:03:12.410 --> 00:03:15.530
And I also inserted some
new properties.

00:03:15.530 --> 00:03:17.040
And these are properties
you'll find in the

00:03:17.040 --> 00:03:20.400
documentation now on the file
resource that allow us to

00:03:20.400 --> 00:03:21.390
upload a thumbnail.

00:03:21.390 --> 00:03:22.530
In this case, it's
really simple.

00:03:22.530 --> 00:03:23.330
It's thumbnail.

00:03:23.330 --> 00:03:26.430
And that has two properties in
it-- an image and a MIME type.

00:03:26.430 --> 00:03:29.920
Image is a Base64
encoded image.

00:03:29.920 --> 00:03:33.870
In this case, you can see
here earlier we're

00:03:33.870 --> 00:03:34.800
just reading a thumbnail.

00:03:34.800 --> 00:03:36.150
It's a PNG file.

00:03:36.150 --> 00:03:40.000
We Base64 encode it, set the
MIME type appropriately, and

00:03:40.000 --> 00:03:44.640
then execute the request
as normal.

00:03:44.640 --> 00:03:47.010
In this case, because I'm doing
a shortcut, I remove the

00:03:47.010 --> 00:03:50.000
code to do the multipart
or reasonable upload.

00:03:50.000 --> 00:03:53.550
I'm just putting metadata in
there, and life is good.

00:03:53.550 --> 00:03:55.400
If this were a real application,
we'd also want to

00:03:55.400 --> 00:03:58.410
do some other things for
shortcuts like uploading

00:03:58.410 --> 00:03:59.700
indexable text.

00:03:59.700 --> 00:04:02.430
That way, if somebody's doing a
search and there are certain

00:04:02.430 --> 00:04:05.070
keywords in the content that you
think might be helpful for

00:04:05.070 --> 00:04:07.340
a user to navigate their
content, that would make it

00:04:07.340 --> 00:04:10.010
available to Drive as well.

00:04:10.010 --> 00:04:12.810
But for here, we're just
focusing on thumbnails.

00:04:12.810 --> 00:04:18.690
And what we're going to do is
just run this really quick.

00:04:18.690 --> 00:04:21.410
Select my account, authorize.

00:04:24.790 --> 00:04:29.860
And if all goes well, we should
have a response back

00:04:29.860 --> 00:04:32.100
that says it inserted
the file.

00:04:32.100 --> 00:04:35.340
One thing that's really worth
noting here is it doesn't

00:04:35.340 --> 00:04:37.050
actually return the
thumbnails.

00:04:37.050 --> 00:04:38.810
Thumbnails are a write-only
property.

00:04:38.810 --> 00:04:41.040
So you can't read them back.

00:04:41.040 --> 00:04:45.090
But what we can do now is
go back and see the

00:04:45.090 --> 00:04:46.590
file that we created.

00:04:46.590 --> 00:04:47.760
And here it is as well.

00:04:47.760 --> 00:04:50.510
So now when we're in Grid view,
we actually get the

00:04:50.510 --> 00:04:51.390
image that we uploaded.

00:04:51.390 --> 00:04:54.750
This was actually the same
Lucidchart presentation that

00:04:54.750 --> 00:04:56.730
we just had the icon
for before.

00:04:56.730 --> 00:05:00.000
In this case, I just took the
PNG version of that, and I'm

00:05:00.000 --> 00:05:02.060
using it as a thumbnail.

00:05:02.060 --> 00:05:03.820
So really easy feature to use.

00:05:03.820 --> 00:05:06.940
For applications that are
using shortcuts, this is

00:05:06.940 --> 00:05:09.580
something that everyone should
be doing, particularly if the

00:05:09.580 --> 00:05:14.580
content that you have has
a very strong visual

00:05:14.580 --> 00:05:17.060
representation that's
helpful for users.

00:05:17.060 --> 00:05:19.270
You can think of this in a lot
of other contexts, too, even

00:05:19.270 --> 00:05:22.750
in cases where we're storing
the content.

00:05:22.750 --> 00:05:25.420
There are a lot of different
formats that applications use

00:05:25.420 --> 00:05:28.510
that we just simply don't have
the capability to generate

00:05:28.510 --> 00:05:30.462
thumbnails ourselves.

00:05:30.462 --> 00:05:32.550
I can think of something
like an MP3.

00:05:32.550 --> 00:05:38.660
You might want to do album art
as a thumbnail for better

00:05:38.660 --> 00:05:40.370
visual navigation.

00:05:40.370 --> 00:05:44.120
For things like CAD drawings,
where again we don't have the

00:05:44.120 --> 00:05:47.790
logic to render that, the
application can do a preview,

00:05:47.790 --> 00:05:50.980
a very quick rendering of
that, different charting

00:05:50.980 --> 00:05:54.100
applications with proprietary
formats.

00:05:54.100 --> 00:05:58.410
Really anything that you think
would be helpful for users to

00:05:58.410 --> 00:06:01.760
identify that content, upload
them as a thumbnail along with

00:06:01.760 --> 00:06:05.530
things like indexable text so
that content can be very

00:06:05.530 --> 00:06:08.970
easily discovered by users.

00:06:08.970 --> 00:06:10.900
A couple of catches with
thumbnails, of course.

00:06:10.900 --> 00:06:14.620
I mentioned already that these
are write-only properties.

00:06:14.620 --> 00:06:18.020
So you can't read back the
thumbnail and try to download

00:06:18.020 --> 00:06:20.800
it other than--

00:06:20.800 --> 00:06:23.800
well, yeah, you just can't.

00:06:23.800 --> 00:06:26.130
The other thing is that,
depending on the file type,

00:06:26.130 --> 00:06:28.290
you have to be careful about
how you maintain

00:06:28.290 --> 00:06:30.160
the thumbnail images.

00:06:30.160 --> 00:06:34.220
For shortcuts, maintenance
is actually pretty easy.

00:06:34.220 --> 00:06:36.780
Upload the thumbnail, and then
whenever there's a significant

00:06:36.780 --> 00:06:39.300
enough change on your
application to that content,

00:06:39.300 --> 00:06:41.900
just do an update on the
metadata to upload a new

00:06:41.900 --> 00:06:43.430
thumbnail image.

00:06:43.430 --> 00:06:45.950
With binary content, where we're
actually storing the

00:06:45.950 --> 00:06:50.160
content in Drive, the thumbnail
is actually removed

00:06:50.160 --> 00:06:52.560
in our system every time
the content changes.

00:06:52.560 --> 00:06:55.720
So it's really important that
if you are providing

00:06:55.720 --> 00:06:58.040
thumbnails, that every time that
you change the content

00:06:58.040 --> 00:07:02.120
for a particular file, that
you also upload a new

00:07:02.120 --> 00:07:03.380
thumbnail for that content.

00:07:03.380 --> 00:07:06.790
It may be the same thumbnail
as you uploaded previously.

00:07:06.790 --> 00:07:08.780
But it is important to keep
making sure that we have an

00:07:08.780 --> 00:07:13.350
updated copy any time that
content changes.

00:07:13.350 --> 00:07:15.840
There are some other
restrictions in terms of the

00:07:15.840 --> 00:07:17.150
size of the thumbnail.

00:07:17.150 --> 00:07:20.910
We do recommend the larger,
the better.

00:07:20.910 --> 00:07:22.560
There are different ways that
these can get done.

00:07:22.560 --> 00:07:25.980
If it's too small, you're only
going to see a very small

00:07:25.980 --> 00:07:28.240
image on the screen.

00:07:28.240 --> 00:07:30.430
But if it's too big, we're going
to downsize it anyway.

00:07:30.430 --> 00:07:34.445
So there's a maximum width
of about 1,600 pixels.

00:07:34.445 --> 00:07:37.950
About 2 megabytes for the image
size is about where

00:07:37.950 --> 00:07:40.350
we'll cap out as well.

00:07:40.350 --> 00:07:42.340
Most image formats
are supported.

00:07:42.340 --> 00:07:47.400
Generally, we recommend doing
formats like PNG, but GIFs and

00:07:47.400 --> 00:07:49.360
JPEGs are also fine.

00:07:49.360 --> 00:07:54.120
Other formats will work, but
just not recommended.

00:07:54.120 --> 00:07:56.860
So it's a really easy
feature to use.

00:07:56.860 --> 00:07:59.540
Again, it's a couple extra
fields on the file metadata

00:07:59.540 --> 00:08:03.740
when you're uploading or
inserting or modifying a file.

00:08:03.740 --> 00:08:06.610
Really valuable for users to
make the experience of your

00:08:06.610 --> 00:08:12.620
app and your files just blend
in a lot better into Drive.

00:08:12.620 --> 00:08:14.950
So that's thumbnails.

00:08:14.950 --> 00:08:16.750
Again, this just went
live today.

00:08:16.750 --> 00:08:19.880
There's actually a blog post on
the Google Apps Developer

00:08:19.880 --> 00:08:23.310
blog that you can go and read a
little bit more or find this

00:08:23.310 --> 00:08:26.820
in the documentation that just
went live probably about 20

00:08:26.820 --> 00:08:29.410
minutes ago.

00:08:29.410 --> 00:08:33.740
There's one other small feature
related to this that I

00:08:33.740 --> 00:08:36.679
want to point attention
to, and this is

00:08:36.679 --> 00:08:39.200
additional image metadata.

00:08:39.200 --> 00:08:40.929
We launched probably--

00:08:40.929 --> 00:08:43.950
maybe a month or so
back, some new

00:08:43.950 --> 00:08:45.590
properties on the file resource.

00:08:45.590 --> 00:08:50.870
We had this image media metadata
collection on files.

00:08:50.870 --> 00:08:53.730
And we haven't really done
a lot of presentations or

00:08:53.730 --> 00:08:54.540
talking about this.

00:08:54.540 --> 00:08:58.730
It's not really featured heavily
in the documentation.

00:08:58.730 --> 00:09:00.690
But for a certain class of
applications, these are

00:09:00.690 --> 00:09:03.190
actually really useful.

00:09:03.190 --> 00:09:05.610
So previously, we had some very
basic information like

00:09:05.610 --> 00:09:10.330
the width and the height,
geolocation information about

00:09:10.330 --> 00:09:10.770
that photo.

00:09:10.770 --> 00:09:12.730
And this is also that's
taken from the XF

00:09:12.730 --> 00:09:14.900
data in those images.

00:09:14.900 --> 00:09:17.320
And this is pretty useful if
you're building a photo

00:09:17.320 --> 00:09:19.740
browser that's integrated
with Drive or any

00:09:19.740 --> 00:09:21.700
sort of media tool.

00:09:21.700 --> 00:09:23.890
If you're building a photo
library management tool, I

00:09:23.890 --> 00:09:27.950
would personally love to see
somebody build something like

00:09:27.950 --> 00:09:31.710
an Aperture or a Lightroom
that was backed by Drive.

00:09:31.710 --> 00:09:33.000
I'd probably be the
first customer for

00:09:33.000 --> 00:09:34.250
something like that.

00:09:37.190 --> 00:09:39.790
So having width and height is
really useful if you're trying

00:09:39.790 --> 00:09:43.480
to do screen layout and you want
to basically pre-lay out

00:09:43.480 --> 00:09:47.200
the images while you're loading
up the thumbnails or

00:09:47.200 --> 00:09:51.310
the full-resolution images
asynchronously.

00:09:51.310 --> 00:09:54.590
But we also just recently
exposed a lot more of the

00:09:54.590 --> 00:09:56.670
metadata, things like the
camera make and model,

00:09:56.670 --> 00:10:00.480
exposure time, aperture, the
lens use focal length, and so

00:10:00.480 --> 00:10:04.750
on, which is all really useful
information that people who

00:10:04.750 --> 00:10:08.520
are very into their photo
editing may want to see that

00:10:08.520 --> 00:10:10.650
information.

00:10:10.650 --> 00:10:13.800
But we can actually preparse
that information for you so

00:10:13.800 --> 00:10:15.940
you don't actually need to
download the full version of

00:10:15.940 --> 00:10:20.220
the image, parse it, extract
the XF data in order to

00:10:20.220 --> 00:10:20.840
display that.

00:10:20.840 --> 00:10:22.560
So this gives you a way that you
can get that information

00:10:22.560 --> 00:10:25.460
to the user very quickly just
by reading the metadata from

00:10:25.460 --> 00:10:29.020
the files, while in the
background, you're loading

00:10:29.020 --> 00:10:31.610
either different resolution
thumbnails to progressively

00:10:31.610 --> 00:10:36.220
load or waiting for the full
version of that image to load.

00:10:36.220 --> 00:10:39.050
So not a feature that's useful
for all applications like the

00:10:39.050 --> 00:10:42.210
thumbnails, but it is
something that for a

00:10:42.210 --> 00:10:44.000
particular class of application
that we're seeing

00:10:44.000 --> 00:10:47.630
a lot more of, which are these
photo management apps and

00:10:47.630 --> 00:10:50.140
image editing tools, this is
a great feature to take

00:10:50.140 --> 00:10:52.720
advantage of.

00:10:52.720 --> 00:10:54.270
So that's really it for today.

00:10:54.270 --> 00:10:56.680
We actually do have some other
features that we're planning

00:10:56.680 --> 00:10:57.730
on announcing very soon.

00:10:57.730 --> 00:11:00.960
So keep tuning in to the GDLs.

00:11:00.960 --> 00:11:04.380
And I think either next week
or the week after there's

00:11:04.380 --> 00:11:08.880
actually some more parts of this
coming along that I think

00:11:08.880 --> 00:11:12.120
are even a little bit
bigger features.

00:11:12.120 --> 00:11:14.480
But it's all really cool
stuff, and we're really

00:11:14.480 --> 00:11:16.980
excited to see what people are
going to do with this.

00:11:16.980 --> 00:11:19.210
If you're building an
application and you're using

00:11:19.210 --> 00:11:22.500
shortcuts, jump on the
thumbnails right away.

00:11:22.500 --> 00:11:26.290
And if you're using any of these
apps for Drive yourself,

00:11:26.290 --> 00:11:29.450
expect to see developers
start to adopt this

00:11:29.450 --> 00:11:31.590
feature very quickly.

00:11:31.590 --> 00:11:33.480
That is all for today.

00:11:33.480 --> 00:11:37.260
As always, you can find
us here twice a week

00:11:37.260 --> 00:11:38.640
and on Stack Overflow.

00:11:38.640 --> 00:11:40.740
And we're happy to answer
whatever questions you have.

00:11:40.740 --> 00:11:41.310
Great.

00:11:41.310 --> 00:11:42.560
Thanks.

00:11:50.010 --> 00:11:58.333
[MUSIC PLAYING]

