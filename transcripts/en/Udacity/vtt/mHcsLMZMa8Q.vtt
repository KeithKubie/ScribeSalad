WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:04.160
The most common systems
actually implement ACLs.

00:00:04.160 --> 00:00:08.440
Operating systems have, in researches
I have studied, C-lists as well and

00:00:08.440 --> 00:00:11.210
we'll see there's some nice
properties they offer.

00:00:11.210 --> 00:00:14.180
So how would you implement C-lists?

00:00:14.180 --> 00:00:16.860
So first of all,
where would a C-list go?

00:00:16.860 --> 00:00:18.360
Where would it be stored?

00:00:18.360 --> 00:00:21.045
Remember, C-lists are per user.

00:00:21.045 --> 00:00:24.770
C-lists we get from each row of
the access control matrix, so

00:00:24.770 --> 00:00:26.160
it's very user.

00:00:26.160 --> 00:00:31.490
So the natural place for it is not
going to be where we kept ACLs.

00:00:31.490 --> 00:00:35.310
The other question one can ask
is what exactly is a capability?

00:00:35.310 --> 00:00:39.310
A capability, remember, says you
are capable of accessing that resource.

00:00:39.310 --> 00:00:41.880
You've been given permission
to access that resource.

00:00:41.880 --> 00:00:45.420
So typically a capability
implementation details differ, but

00:00:45.420 --> 00:00:47.720
is really a handle for a resource.

00:00:47.720 --> 00:00:53.370
A reference allows you to find or locate
the resource and be able to use it.

00:00:53.370 --> 00:00:55.600
So if you can go use the resource,

00:00:55.600 --> 00:00:58.950
you shouldn't be able to forge
a capability for that resource.

00:00:58.950 --> 00:01:02.050
Capabilities are sort of identifiers
you can think of them or

00:01:02.050 --> 00:01:03.410
references or handles.

00:01:03.410 --> 00:01:07.890
But one property the system has to
guarantee, is that these capabilities or

00:01:07.890 --> 00:01:10.470
handle that we're talking
about are unforgeable.

00:01:10.470 --> 00:01:14.970
So think about the user has
capabilities for a bunch of resources.

00:01:14.970 --> 00:01:19.910
List of those capabilities is what
defines a C-list for that given user.

00:01:19.910 --> 00:01:23.310
The way where C-list is going to go,

00:01:23.310 --> 00:01:27.540
we have to have a catalog for
each user that we have in the system.

00:01:27.540 --> 00:01:31.480
Similar to ACLs for each resource or
object that we had before,

00:01:31.480 --> 00:01:35.700
here we have to have a catalog of
capabilities, and system has to

00:01:35.700 --> 00:01:40.730
store the catalog of capabilities for
each user that we have in the system.

00:01:40.730 --> 00:01:44.310
The main capability systems
that have been explored and

00:01:44.310 --> 00:01:47.240
one of the interesting ones
was a system called Hydra.

00:01:47.240 --> 00:01:50.610
It was sort of a research
project done at Carnegie Mellon.

00:01:50.610 --> 00:01:54.950
This actually, you could have C-list
stored in objects themselves.

00:01:54.950 --> 00:01:56.800
So everything was an object.

00:01:56.800 --> 00:01:59.050
It was an object based system.

00:01:59.050 --> 00:02:01.500
And objects stored a C-list.

00:02:01.500 --> 00:02:06.280
So when you came to a certain object,
well you found new set of capabilities.

00:02:06.280 --> 00:02:10.610
And you could then use those to access
objects that you couldn't access before.

00:02:10.610 --> 00:02:14.100
You can access this new objects
while you are within this object.

00:02:14.100 --> 00:02:18.930
And you could take capabilities back to
the object it came from sometimes and

00:02:18.930 --> 00:02:20.620
not other times, and things like that.

00:02:20.620 --> 00:02:24.980
The basic idea is that capabilities
are how you decide, or

00:02:24.980 --> 00:02:28.180
the system makes the determination
that you can access or not.

00:02:28.180 --> 00:02:30.741
So you,
the user has to start with a catalog and

00:02:30.741 --> 00:02:33.960
as you execute maybe new
capabilities come your way.

00:02:33.960 --> 00:02:36.910
And that was this example
we're talking about.

00:02:36.910 --> 00:02:40.430
So one thing we didn't talk about is
actually how does sharing happen.

00:02:40.430 --> 00:02:46.050
The whole idea of who can access what,
and giving access to somebody else or

00:02:46.050 --> 00:02:50.200
the example or the quiz question we've
been doing, is how does sharing happen?

00:02:50.200 --> 00:02:52.840
With ACLs, we didn't talk about it.

00:02:52.840 --> 00:02:57.480
But someone who has the right to let
somebody else access a resource and

00:02:57.480 --> 00:03:02.235
make a system column have this new
user or this user that I'm specifying

00:03:02.235 --> 00:03:05.355
should be able to read this file foo and
what we're going to do is create

00:03:05.355 --> 00:03:09.185
a new ACE for this user,
if one doesn't already exist, and

00:03:09.185 --> 00:03:14.327
going to add this new access right to
that and then put that ACE in the ACL.

00:03:14.327 --> 00:03:18.237
So the new user will be able to go and
access this file in the future.

00:03:18.237 --> 00:03:20.037
Capabilities, what do we have to do?

00:03:20.037 --> 00:03:24.197
Sharing is going to requite
propagation of capabilities.

00:03:24.197 --> 00:03:28.330
The new user which should be able to
access this resource In the future.

00:03:28.330 --> 00:03:32.150
We have to provide this user with
the capability for this resource.

00:03:32.150 --> 00:03:34.340
So the capability has to be propagated.

00:03:34.340 --> 00:03:36.400
But remember they shouldn't
be able to forge it,

00:03:36.400 --> 00:03:41.110
shouldn't be able to mint a capability
unless it has been passed to them or

00:03:41.110 --> 00:03:43.800
someone had chosen to share
the resource with them.

00:03:43.800 --> 00:03:48.400
With capabilities sharing is going to
happen by propagation of capabilities.

00:03:48.400 --> 00:03:51.300
I'm going to give you a capability,
you're going to find a way for you to

00:03:51.300 --> 00:03:55.970
gain access to a capability that you can
then use to be able to use the resource.

00:03:55.970 --> 00:03:59.570
Remember, the one difference here is
that possession of a capability means

00:03:59.570 --> 00:04:00.780
you can access the resource.

00:04:00.780 --> 00:04:04.180
There is no access check required
as was necessary with ACLs.

