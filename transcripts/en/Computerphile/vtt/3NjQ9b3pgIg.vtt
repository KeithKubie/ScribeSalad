WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.520
Some people watching will have good
passwords, some people will have thought

00:00:02.520 --> 00:00:03.510
about this before,

00:00:03.510 --> 00:00:06.050
some people should have thought about
this and haven't, and hopefully will

00:00:06.060 --> 00:00:11.040
after we talked about this a little bit
more. Um, in the previous video I showed you

00:00:11.040 --> 00:00:13.820
cracking a password using pretty basic
techniques, right?

00:00:13.820 --> 00:00:14.490
There are people who know

00:00:14.490 --> 00:00:18.180
more about this than me who run other
custom dictionaries and rule-sets and

00:00:18.180 --> 00:00:18.780
things, right?

00:00:18.780 --> 00:00:21.260
It's not really important
for getting the message across of just

00:00:21.270 --> 00:00:22.650
how quick this is.

00:00:24.900 --> 00:00:26.900
Picking a good password
was actually a lot easier than people

00:00:26.910 --> 00:00:27.449
make it.

00:00:27.449 --> 00:00:30.960
XKCD alluded to this and we'll talk about that
in a minute. It didn't necessarily answer

00:00:30.960 --> 00:00:34.410
every question but it did get a good
message across and then as other aspects

00:00:34.420 --> 00:00:37.590
should you reuse passwords and, and so
on.

00:00:37.590 --> 00:00:41.850
Umm... so let's address these. Password
crackers and and people who research

00:00:41.850 --> 00:00:45.899
password security talk about something
called password entropy, which is the

00:00:45.899 --> 00:00:48.690
amount of information held in a password,

00:00:48.690 --> 00:00:51.510
the idea being that if you're not
holding much information in a password, it's

00:00:51.510 --> 00:00:53.550
going to be cracked very quickly because
it's not a much

00:00:53.550 --> 00:00:57.390
search space to go through. Now in some
ways I think that's a bit of an

00:00:57.390 --> 00:00:58.230
overcomplication

00:00:58.230 --> 00:01:01.739
I think practically you need to look at
two things. You say, first of all, can it

00:01:01.739 --> 00:01:03.629
be brute-forced, right?

00:01:03.629 --> 00:01:07.080
In which case if the answer is is your
password shorter or equal to 8 characters,

00:01:07.080 --> 00:01:08.280
the answer is yes,

00:01:08.280 --> 00:01:12.930
right? If your password's nine
characters and you're using symbols,

00:01:12.930 --> 00:01:16.510
you're probably ok, right? Fairly
straightforward, ok?

00:01:16.510 --> 00:01:18.030
As GPUs get faster,

00:01:18.030 --> 00:01:22.979
these barriers go down, and then you've got to
ask, "Is your password dictionary

00:01:22.979 --> 00:01:26.759
crackable?", right? Those people in the last
video didn't think so,

00:01:26.759 --> 00:01:30.150
and then there I was cracking their
passwords and they had quite good ones,

00:01:30.150 --> 00:01:30.690
some of them.

00:01:30.690 --> 00:01:32.610
So you've got to do two
things: you've got to make sure your

00:01:32.610 --> 00:01:35.569
password is long enough and uses
interesting characters so it can't be brute

00:01:35.579 --> 00:01:39.689
forced, but beyond that you've got to make
sure that you can't be dictionary attacked.

00:01:39.689 --> 00:01:42.750
Let's get this out the way first; if your
password is "password", you probably want

00:01:42.750 --> 00:01:46.850
to close out your browser right now and
change it and, you know, hang your head a

00:01:46.860 --> 00:01:50.250
little bit. If there's any variation on
the word "password" or has any of the

00:01:50.250 --> 00:01:53.610
numbers "1 2 3 4" in order in it, you need
to delete those passwords,

00:01:54.040 --> 00:01:59.020
maybe delete your account out of shame, right?
Because, oh dear.

00:01:59.610 --> 00:02:03.000
Ok, so I'm not addressing those, I'm
dressing... addressing, I guess, what

00:02:03.900 --> 00:02:07.980
what a better password will be. Now
password systems in general are not a very

00:02:07.980 --> 00:02:10.920
useful way to authenticate, right? A lot of
people think this,

00:02:10.920 --> 00:02:14.670
ok? Because they're hard to remember,
unless you pick an easy one to remember,

00:02:14.670 --> 00:02:17.910
in which case it's easy and not secure,
alright? So, in some sense we've tried to

00:02:17.910 --> 00:02:21.870
find a way of authenticating ourselves
which is hard for a human to remember,

00:02:21.870 --> 00:02:26.550
easy for a computer to guess, and people
do it badly, right? There's lots of

00:02:26.550 --> 00:02:30.280
reasons why passwords are terrible. Google
thinks passwords are going the way of the

00:02:30.300 --> 00:02:34.500
Dodo, because they're bringing in this new
authentication system where, you know, it

00:02:34.500 --> 00:02:36.630
tracks your movement in your pocket and
things like this.

00:02:36.640 --> 00:02:39.420
Fine, maybe that will work, but in the
back you're always going to have some

00:02:39.420 --> 00:02:42.000
kind of password, because you don't want
to be pulling your phone out of your

00:02:42.000 --> 00:02:45.690
pocket and Google saying, "you moved your
phone weirdly, so can you type in your

00:02:45.690 --> 00:02:49.310
PIN code", right? You're gonna have to have
something backing it up at all times.

00:02:49.320 --> 00:02:52.410
For now, we're going to have passwords for a
while longer.

00:02:52.420 --> 00:02:54.760
And so we have to think about what they
should be.

00:02:55.640 --> 00:02:59.780
So, obvious rules: 8 characters, 7 characters, not long enough,

00:02:59.790 --> 00:03:03.080
right? If you have an 8 character
password and you assume, just for a

00:03:03.080 --> 00:03:06.740
minute, that the website you're hosting
it on is storing them in MD5, then

00:03:06.750 --> 00:03:10.260
I'm going to be trying passwords at forty billion hashes per second.

00:03:10.260 --> 00:03:13.680
How long's it gonna take me to get
through eight? Not that long, right? If I'm

00:03:13.680 --> 00:03:17.130
smart about my character sets, less than
a day, a few hours probably.

00:03:18.630 --> 00:03:24.690
So, let's talk about the better approach
or the nearly perfect approach of XKCD

00:03:24.690 --> 00:03:27.780
and how can we improve even on that.

00:03:27.780 --> 00:03:32.010
So XKCD suggested the situation where you
had a decent password, because it was

00:03:32.010 --> 00:03:35.529
hard to remember, because it was some
word that you've got. Is it "troubadour"?

00:03:35.549 --> 00:03:38.670
And you change a few letters around for
numbers, and you capitalize things and

00:03:38.670 --> 00:03:42.150
you stick in a symbol somewhere and
things, and his argument is that this

00:03:42.150 --> 00:03:45.570
isn't a good password because there's
not much entropy, because you're doing

00:03:45.570 --> 00:03:49.110
standard things that people do in
passwords, right? Now that's absolutely

00:03:49.110 --> 00:03:52.820
true in the sense that if you replace an
'e' for a '3',

00:03:53.400 --> 00:03:55.480
everyone does that, that's number... rule

00:03:55.480 --> 00:03:59.319
one on the list, ok? Don't think that's
clever because it's not. lf you

00:03:59.460 --> 00:04:02.180
replace a 'z' for a '3', actually that's
still not very good.

00:04:02.180 --> 00:04:06.069
Let's pick a better one. If you... an 'o', if
you replace an 'o' for a '3', that's slightly

00:04:06.080 --> 00:04:08.941
better, but someone's still probably going
to have written that rule, because why wouldn't

00:04:08.950 --> 00:04:09.400
they

00:04:09.400 --> 00:04:13.030
when it's so fast to try them out? Ok, so
you've got one option which is up which

00:04:13.030 --> 00:04:16.840
is a kind of hard word to remember
with a bunch of weird to remember symbol

00:04:16.840 --> 00:04:20.019
exchanges, and then you've got another
one, which is just four words appended

00:04:20.019 --> 00:04:22.120
together: correct horse battery staple.

00:04:22.120 --> 00:04:24.970
Ok I think that's the order, right? Now
everyone knows that password which

00:04:24.970 --> 00:04:29.050
kinda means that password is not very good,
but the point remains: if you pick, his

00:04:29.050 --> 00:04:32.830
argument is that if you pick four words and just
stick them together, you have... It's

00:04:32.830 --> 00:04:35.400
inherently un-brute-forceable, if that's a
verb,

00:04:35.410 --> 00:04:38.470
right? Because it's too long, even with
all lowercase

00:04:38.470 --> 00:04:41.830
even without symbols and things, and it's
not really gonna come up in a dictionary

00:04:41.830 --> 00:04:44.830
much because those are weird
combinations of words that aren't very often

00:04:44.830 --> 00:04:46.240
used, and it's four of them.

00:04:46.240 --> 00:04:51.850
Ok, so how breakable are these two
passwords? Well, first of all, troubadour

00:04:51.850 --> 00:04:55.389
with all those exchanges probably
slightly harder than he suggests, because

00:04:55.389 --> 00:04:56.650
its entropy is not bad.

00:04:56.650 --> 00:05:00.190
I think it's 11 characters and you know
there's some exchanges there. Not all of them are

00:05:00.190 --> 00:05:01.300
immediately obvious.

00:05:01.300 --> 00:05:04.750
So it's not absolutely terrible and
perhaps slightly better than many things but

00:05:04.750 --> 00:05:07.810
he's absolutely right but it's quite
hard to remember and a bit of a pain,

00:05:08.380 --> 00:05:12.099
certainly a pain to type in. "correct
horse battery staple", much easier to remember,

00:05:12.099 --> 00:05:16.030
no funny characters to press, you get to
type that quite quickly but the issue is

00:05:16.030 --> 00:05:20.680
that we don't brute force passwords
of that length, we dictionary attack them, right?

00:05:20.680 --> 00:05:24.070
So the question really comes down to, "is
'correct horse battery staple' going to come

00:05:24.070 --> 00:05:28.240
up in a dictionary attack?", and the answer
is, "probably not", but once we start

00:05:28.240 --> 00:05:30.550
thinking people are just appending four
words together,

00:05:30.550 --> 00:05:35.440
maybe yes, ok? So instead of our password
cracking being a brute force of the

00:05:35.440 --> 00:05:38.200
number of characters to the power of the
length of our password,

00:05:38.200 --> 00:05:41.500
it becomes the number of words we might
use to the power of the number of words we

00:05:41.500 --> 00:05:42.940
are using, okay?

00:05:42.940 --> 00:05:46.880
So in this case, let's say the top
ten thousand words to the power of 4, okay?

00:05:46.880 --> 00:05:49.920
Which happens to be a very big number,
so we're kind of safe.

00:05:49.930 --> 00:05:54.039
But what if you only pick obvious words?
"Staple", I've checked, right? I've

00:05:54.039 --> 00:05:57.699
checked a list of about the top
20,000 english words; "staple" is somewhere

00:05:57.699 --> 00:06:01.150
around 12,000, right? Which means that we
don't tend to use it very often,

00:06:01.150 --> 00:06:05.590
that makes sense. "Horse" is much further up
the list so were "correct" and "batteries"

00:06:05.590 --> 00:06:06.910
further up the list as well.

00:06:06.910 --> 00:06:11.740
I mean, we all have phones, we talk about
battery all the time. So, if you

00:06:11.740 --> 00:06:15.790
hypothetically picked four words that were
in the top five hundred, then suddenly

00:06:15.790 --> 00:06:21.010
the search base is 500 to the power 4 which
is much smaller and your bad password

00:06:21.010 --> 00:06:22.090
is crackable.

00:06:22.090 --> 00:06:25.450
So, my advice to anyone
attempting a password system like this

00:06:25.450 --> 00:06:28.960
is to assume that the person attacking
you knows you're doing a password system

00:06:28.960 --> 00:06:34.720
like this and pick hard words, right? A
brand name or a word that isn't

00:06:34.720 --> 00:06:37.450
going to come up in a list of obvious
words that people use, ok?

00:06:37.450 --> 00:06:40.570
"staple" is not a bad word, the other
three are not great.

00:06:40.570 --> 00:06:43.690
So, you know, change it for something else, ok?

00:06:44.260 --> 00:06:49.150
Off the top of my head, uh... "lemming" is
probably not a very common word we use, ok?

00:06:49.150 --> 00:06:53.110
Don't use it now, because I said it. I've got
a Rubik's Cube, here "rubik" is probably

00:06:53.110 --> 00:06:57.100
not, or "Rubik's" is probably not in the top
ten thousand english words, right? Which

00:06:57.100 --> 00:06:59.050
makes a search space much harder to use, ok?

00:06:59.050 --> 00:07:02.560
We're changing the problem around to be
a question of can they guess the word you'll

00:07:02.560 --> 00:07:03.400
used

00:07:03.400 --> 00:07:08.230
not the structure of your password, ok? So
a really good password will be three

00:07:08.230 --> 00:07:12.190
english words, i would say, right? With one
word that's a bit out there

00:07:12.220 --> 00:07:17.110
Ok a bit odd; maybe it's a made-up word
or something, right? Because then you

00:07:17.110 --> 00:07:20.380
can't be brute forced because of the length,
you can't be brute force because of a

00:07:20.380 --> 00:07:23.620
combination of easy dictionary words,
right? And you don't need to put symbols

00:07:23.620 --> 00:07:25.330
in, because it's just too hard anyway.

00:07:25.330 --> 00:07:29.170
Ok, that would be really strong. If you
want to be even stronger than that

00:07:29.170 --> 00:07:31.720
then just stick an underscore right in
the middle of one of the words, just to

00:07:31.720 --> 00:07:35.950
really annoy everyone, right? Because if
you stick it between words it's going to

00:07:35.950 --> 00:07:39.880
fit into a standard rule set of the sort
of things people do with passwords, but

00:07:39.880 --> 00:07:42.400
if you put like an ampersand in the
middle of a word that shouldn't have an

00:07:42.400 --> 00:07:43.960
ampersand in it, like "horse",

00:07:43.960 --> 00:07:48.220
"ho&amp;rse" in the middle of
"correct ho&amp;rse battery staple",

00:07:48.400 --> 00:07:52.270
it's just that much harder to crack. And
then, for you to be able crack that

00:07:52.270 --> 00:07:54.940
password, a lot of things have to go
right for the attacker.

00:07:54.940 --> 00:07:58.060
They have to know the four words you're
going to use, in the right order, and they

00:07:58.060 --> 00:08:02.230
have to have tried that with the exact
right rule set that put an ampersand in at

00:08:02.230 --> 00:08:06.310
that exact position. And pick a word that
other people don't use very often, like

00:08:06.310 --> 00:08:08.620
your favorite band name or something
like that, ok?

00:08:08.620 --> 00:08:12.220
Because that way... maybe not your
favorite band name if you blog about them

00:08:12.220 --> 00:08:15.310
because then they can social engineer
the password, that's a different question.

00:08:15.310 --> 00:08:18.190
This is what you do if you have to pick
a password, right? But what you should

00:08:18.190 --> 00:08:20.560
really be doing now is using a password
manager.

00:08:20.560 --> 00:08:25.570
So, in some sense a password manager
swaps you remembering a bunch of

00:08:25.570 --> 00:08:29.620
passwords for you hopefully remembering
one really good password, ok?

00:08:29.620 --> 00:08:33.280
So this is the kind of password policy
that you go even further with and make

00:08:33.280 --> 00:08:34.780
that your master password.

00:08:34.780 --> 00:08:39.250
So what a password manager does if it's
well programmed is encrypt a database of

00:08:39.250 --> 00:08:43.570
your passwords for all your different websites
and and and you know accounts and then

00:08:43.570 --> 00:08:48.220
you secure that with a master password
of some description, right? And your

00:08:48.220 --> 00:08:52.480
master password has to be good and i
don't mean, you know, "password password

00:08:52.480 --> 00:08:55.900
password" because no one's going to guess
it's three times long, right?

00:08:55.900 --> 00:08:58.960
It needs to be of the level we were just
talking about.

00:08:58.980 --> 00:09:04.630
And you also need to look into what
encryption the password manager uses,

00:09:04.630 --> 00:09:07.480
where's the decription done, it's not
done on the server, we need to make

00:09:07.480 --> 00:09:10.660
absolutely sure it's all local and things
like this. So look into it and see how

00:09:10.660 --> 00:09:12.520
they do their security.

00:09:12.520 --> 00:09:15.460
I've looked into a lot of password managers.
They're all pretty good, you know, of

00:09:15.460 --> 00:09:20.590
the major players, right? They all use broadly similar schemes, they use very

00:09:20.590 --> 00:09:24.250
difficult to break hashes with lots of
iterations, which means that even if your

00:09:24.250 --> 00:09:28.540
passwords are released on the internet
they're in encrypted form and they can't

00:09:28.540 --> 00:09:30.700
be obtained.

00:09:30.700 --> 00:09:34.960
So all my passwords are 16 characters of
totally random and I don't know what

00:09:34.960 --> 00:09:35.470
they are, right?

00:09:35.470 --> 00:09:39.070
So if my... if my database
gets deleted i'm somewhat in a problem

00:09:39.070 --> 00:09:39.820
right?

00:09:39.820 --> 00:09:43.210
But, my master password is similar,

00:09:43.210 --> 00:09:46.960
I won't give away too many too much
information on what exactly it is it, right?

00:09:46.960 --> 00:09:52.330
But my master password is in a similar vein
to what we were discussing just now and

00:09:52.330 --> 00:09:58.810
I believe is essentially uncrackable at,
you know, currently. But i can type it in

00:09:58.810 --> 00:10:00.700
quite fast, because I've done it a lot.

00:10:00.700 --> 00:10:03.760
It's long enough and i can remember it,

00:10:03.760 --> 00:10:06.520
which is good, and i only have to
remember one which makes it that much

00:10:06.520 --> 00:10:07.270
easier.

00:10:07.270 --> 00:10:10.360
So now, when you log on to a website
and it says, "register for this

00:10:10.360 --> 00:10:12.339
website" again, and I'm only going to use it for five minutes,

00:10:12.339 --> 00:10:15.550
what am I going to do? I'll just
make it my standard password that I

00:10:15.550 --> 00:10:19.209
use every time. Instead of doing that, you
then go to your password manager and

00:10:19.209 --> 00:10:23.529
generate random 16 characters and it's
win-win because then, if you never use

00:10:23.529 --> 00:10:27.699
the website again, it doesn't matter anyway, because
you've got... you've got a random password.

00:10:27.699 --> 00:10:31.749
And if someone, if that website is a bit
dubious and they release your password

00:10:31.749 --> 00:10:35.110
later in a hack, it doesn't matter
because it's random, right?

00:10:35.110 --> 00:10:40.220
And that brings us on to last point:
never ever reuse passwords, ever.

00:10:40.240 --> 00:10:44.410
I fallen to this before, someone tried
to log into my Facebook once with a

00:10:44.410 --> 00:10:45.850
password that got leaked,

00:10:45.850 --> 00:10:49.689
someone tried to log into my Skype with a
password that got leaked, and that was my

00:10:49.689 --> 00:10:53.101
fault in a sense, because I used to use
the same password a number of times

00:10:53.110 --> 00:10:56.740
before I knew what I was doing,
right? This is a few years ago. Now, I know

00:10:56.740 --> 00:11:00.519
you have to have different passwords.
That way, if a password gets leaked down

00:11:00.519 --> 00:11:04.360
to the internet and hopefully it's random
anyway, from your password manager then

00:11:04.360 --> 00:11:07.540
we're in business, right? You change that
password, and you're secure again. If your

00:11:07.540 --> 00:11:13.749
master password for your... for your
database is weak, then they are going to

00:11:13.749 --> 00:11:17.709
hack it, and then if they get in they get
all your passwords. So, obviously that has to

00:11:17.709 --> 00:11:20.709
be really really strong.

00:11:21.720 --> 00:11:22.450
Last Password's

00:11:22.450 --> 00:11:25.810
been hacked a couple of times, but
this encryption is so strong that if your

00:11:25.810 --> 00:11:28.930
if your master password is strong it's
fine.

00:11:28.930 --> 00:11:31.930
Which is a bit Cavalier thing to say, but
it's actually true because of how many

00:11:31.930 --> 00:11:32.680
iterations they use.

