WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.790
[MUSIC PLAYING]

00:00:04.650 --> 00:00:06.592
My name's Peter Lewis.

00:00:06.592 --> 00:00:11.410
And I make voxup.co.uk, which
is a social enterprise that

00:00:11.410 --> 00:00:13.440
helps residents who
live in a neighborhood

00:00:13.440 --> 00:00:17.580
to discover local topics, give
their opinions on those topics,

00:00:17.580 --> 00:00:19.430
and get responses
from their elected

00:00:19.430 --> 00:00:23.120
representatives like
local councillors.

00:00:23.120 --> 00:00:25.650
Before we write a single
line of code on voXup,

00:00:25.650 --> 00:00:28.630
we were confident that our
fundamental idea would work.

00:00:28.630 --> 00:00:30.320
We had a bunch of users already.

00:00:30.320 --> 00:00:33.280
And among those users
was our first customer.

00:00:33.280 --> 00:00:35.000
In this video, I'm
going to tell you

00:00:35.000 --> 00:00:38.150
how to validate your
idea in just two days.

00:00:38.150 --> 00:00:41.440
If you want to copy our
approach, here's what to do.

00:00:41.440 --> 00:00:44.150
First up, think at a
really fundamental level

00:00:44.150 --> 00:00:47.730
what value your product
provides to your users.

00:00:47.730 --> 00:00:50.169
Try to ignore the
90% of cool features

00:00:50.169 --> 00:00:51.710
that you thought of
in the first five

00:00:51.710 --> 00:00:54.890
minutes of having had the idea.

00:00:54.890 --> 00:00:57.570
In our case, there was a forum
where people were already

00:00:57.570 --> 00:01:00.470
discussing local
topics-- the local pub.

00:01:00.470 --> 00:01:03.780
So we went to the pub,
armed with a sign that said,

00:01:03.780 --> 00:01:05.920
we'll buy you a drink
if you test our app.

00:01:05.920 --> 00:01:08.440
Of course, the wasn't
any app at this stage.

00:01:08.440 --> 00:01:09.990
But we asked people,
what would you

00:01:09.990 --> 00:01:12.290
change about your neighborhood?

00:01:12.290 --> 00:01:13.690
They told us some things.

00:01:13.690 --> 00:01:16.400
And we also asked them what
they thought of the topics

00:01:16.400 --> 00:01:19.990
that their neighbors had
already surfaced for us.

00:01:19.990 --> 00:01:22.540
We were able to simulate
all of this by hand.

00:01:22.540 --> 00:01:25.480
And in fact, that's exactly what
the first touchpoint of voXup

00:01:25.480 --> 00:01:27.200
does today.

00:01:27.200 --> 00:01:29.690
What we ended up with was
a list of local topics

00:01:29.690 --> 00:01:31.565
that people cared
about, and a list

00:01:31.565 --> 00:01:34.520
of phone numbers of the
people who cared about them.

00:01:34.520 --> 00:01:37.060
So we were able to go to
our local councillor armed

00:01:37.060 --> 00:01:39.680
with this list, and
then get responses

00:01:39.680 --> 00:01:42.300
that we could send to the
residents in our neighborhood.

00:01:42.300 --> 00:01:44.800
If you're thinking of
making something online,

00:01:44.800 --> 00:01:47.490
it'll almost certainly be
handling information that's

00:01:47.490 --> 00:01:50.550
already flowing through
a forum, either by email,

00:01:50.550 --> 00:01:54.480
or an online forum, or
Twitter, or even in real life.

00:01:54.480 --> 00:01:57.600
So you can do the processing
that your product does

00:01:57.600 --> 00:02:00.800
by hand for a few simple cases.

00:02:00.800 --> 00:02:03.570
And you can complete, in our
case, the feedback loops,

00:02:03.570 --> 00:02:07.590
back to residents without
writing a single line of code.

00:02:07.590 --> 00:02:10.139
In our case, we took
our list of opinions

00:02:10.139 --> 00:02:12.550
and we looked up a local
councillor's email address

00:02:12.550 --> 00:02:14.440
on the council website.

00:02:14.440 --> 00:02:16.140
We sent him the list,
and we asked him

00:02:16.140 --> 00:02:18.120
for a response on
some of the topics

00:02:18.120 --> 00:02:20.670
that we'd already
gathered opinions on.

00:02:20.670 --> 00:02:24.830
Once we got the response, we
sent SMS messages, by hand,

00:02:24.830 --> 00:02:27.430
to each of the people that
we talked to in the pub.

00:02:27.430 --> 00:02:30.000
And we said to them, what do
you think of this response?

00:02:30.000 --> 00:02:32.912
Is it a good response
or a bad response?

00:02:32.912 --> 00:02:34.870
When they started replying
to the text messages

00:02:34.870 --> 00:02:38.020
that we'd sent, we'd
validated that people

00:02:38.020 --> 00:02:40.600
cared about getting a
response to the topics

00:02:40.600 --> 00:02:43.620
that they'd said they
were interested in.

00:02:43.620 --> 00:02:46.870
The final thing is that you
can get the best feedback

00:02:46.870 --> 00:02:49.350
by going out of the building
and talking to your users

00:02:49.350 --> 00:02:51.030
face-to-face.

00:02:51.030 --> 00:02:55.030
In our case, we've now written
about 100,000 lines of code.

00:02:55.030 --> 00:02:57.250
voXup works at a
national scale with all

00:02:57.250 --> 00:02:59.430
of these steps
completely automated.

00:02:59.430 --> 00:03:01.300
But the best
feedback we ever got

00:03:01.300 --> 00:03:05.330
was from showing a really early
prototype to our first users.

00:03:05.330 --> 00:03:07.190
In that way we were
able to get feedback

00:03:07.190 --> 00:03:09.900
not on which was their
favorite shade of blue, but

00:03:09.900 --> 00:03:12.462
whether or not they valued
getting feedback on the topics

00:03:12.462 --> 00:03:13.920
that they said they
were interested

00:03:13.920 --> 00:03:16.820
in from their local
representatives.

00:03:16.820 --> 00:03:18.980
These steps that I've
described replicate

00:03:18.980 --> 00:03:23.600
each of the key touchpoints
that voXup recreates today.

00:03:23.600 --> 00:03:27.620
So although voXup is
online and very scalable,

00:03:27.620 --> 00:03:29.900
everything that it
does is possible to do

00:03:29.900 --> 00:03:32.480
with scraps of paper,
text messages, and trips

00:03:32.480 --> 00:03:34.510
to your local pub.

