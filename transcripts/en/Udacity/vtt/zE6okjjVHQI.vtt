WEBVTT
Kind: captions
Language: en

00:00:00.303 --> 00:00:04.471
So tell us about what dynamic parallelism adds to the CUDA programming model.

00:00:04.471 --> 00:00:09.446
&gt;&gt; So quite simply, it let's you launch kernels directly from inside another kernel,

00:00:09.446 --> 00:00:18.094
and that sounds relatively simple. If you like the analogy on the CPU side is when I could create threads inside of process.

00:00:18.094 --> 00:00:20.766
Instead of having to go back to the operating system to initiate a new process,

00:00:20.766 --> 00:00:25.196
I can suddenly spawn a P thread and do something asynchronously within the single process that I have,

00:00:25.196 --> 00:00:27.297
manage that all from within my own process.

00:00:27.297 --> 00:00:31.465
I can now do that on the GPU as well. I can create work and not just single threads,

00:00:31.465 --> 00:00:37.307
I create whole grids from inside of my GPU. So if my problem is working on something,

00:00:37.307 --> 00:00:42.140
and I suddenly need to invert a matrix or perform a Fourier transform or something,

00:00:42.140 --> 00:00:46.619
I can suddenly just call out into a kernel which does that for me, returns the data,

00:00:46.619 --> 00:00:55.558
and I can continue so I can embed parallel work exactly where I need it with the data that I have available inside my program.

00:00:55.558 --> 00:01:02.595
Sort of corollary to that is this idea of being able to take data that dynamically you are working on,

00:01:02.595 --> 00:01:07.999
a value that you have sort of mathematically, algorithmically generated,

00:01:07.999 --> 00:01:13.677
and use that value to make decisions on work you're going to do.

00:01:13.677 --> 00:01:17.410
If my value is 1 do this, if it's 2, do that.

00:01:17.410 --> 00:01:20.823
Or maybe I am partitioning a problem, I am building a tree,

00:01:20.823 --> 00:01:22.714
spatially partitioning something.

00:01:22.714 --> 00:01:27.052
If I have a certain number of things in one place and a larger number in another place,

00:01:27.052 --> 00:01:29.922
I can dynamically launch the correct number of threads to do that,

00:01:29.922 --> 00:01:35.663
and the ability to do this on the fly dynamically is really the power of this dynamic parallelism.

