WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.772
[MUSIC PLAYING]

00:00:06.010 --> 00:00:07.280
FIONA YEUNG: Good morning.

00:00:07.280 --> 00:00:09.520
Welcome to Prototyping
to Production--

00:00:09.520 --> 00:00:11.580
Bridging the Gap
with a Common Tool.

00:00:11.580 --> 00:00:14.560
You made it to the
final day of I/O 2017,

00:00:14.560 --> 00:00:16.930
and we hope you've been
enjoying your time here.

00:00:16.930 --> 00:00:19.760
My name is Fiona Yeung, and
I'm an interaction designer

00:00:19.760 --> 00:00:21.700
on a material design team.

00:00:21.700 --> 00:00:23.030
DAVID YANG: Hi, everybody.

00:00:23.030 --> 00:00:24.130
I'm David Yang.

00:00:24.130 --> 00:00:26.140
I'm a UX engineer,
and I work with Fiona.

00:00:29.290 --> 00:00:31.120
FIONA YEUNG: In my
world, as a designer,

00:00:31.120 --> 00:00:34.090
I aim to give users the best,
most delightful experience

00:00:34.090 --> 00:00:36.790
with any product I'm designing.

00:00:36.790 --> 00:00:40.160
I create meaningful interactions
that are easy, yet exciting

00:00:40.160 --> 00:00:43.120
that help get the user to their
end goal in as few steps as

00:00:43.120 --> 00:00:44.740
possible.

00:00:44.740 --> 00:00:46.510
Behind the screens,
I'm constantly

00:00:46.510 --> 00:00:48.632
in and out of design
brainstorm sessions,

00:00:48.632 --> 00:00:50.590
working closely with a
large variety of people.

00:00:53.200 --> 00:00:56.770
DAVID YANG: As a UX engineer,
I take Fiona's designs,

00:00:56.770 --> 00:00:59.480
ground them in reality,
and implement them in code.

00:01:02.340 --> 00:01:04.819
So let's imagine we
have our weekly standup

00:01:04.819 --> 00:01:07.022
between designers and engineers.

00:01:07.022 --> 00:01:09.230
Fiona is going to show me
some new designs that she's

00:01:09.230 --> 00:01:11.180
made and stuff that we're
trying to implement.

00:01:11.180 --> 00:01:11.990
FIONA YEUNG: Hey, David.

00:01:11.990 --> 00:01:12.240
DAVID YANG: Hey, Fiona.

00:01:12.240 --> 00:01:12.890
How's it going?

00:01:12.890 --> 00:01:13.160
FIONA YEUNG: Good.

00:01:13.160 --> 00:01:13.677
How are you?

00:01:13.677 --> 00:01:14.510
DAVID YANG: Not bad.

00:01:14.510 --> 00:01:16.926
FIONA YEUNG: I wanted to show
you this new Kangaroo Safari

00:01:16.926 --> 00:01:18.980
Valley card I designed.

00:01:18.980 --> 00:01:20.894
DAVID YANG: The design
looks pretty good.

00:01:20.894 --> 00:01:22.310
I wouldn't call
it a card, though.

00:01:22.310 --> 00:01:24.830
To me, it's more like a box
with a three-pixel border

00:01:24.830 --> 00:01:29.020
radius, a light black box
shadow, and a gray background.

00:01:29.020 --> 00:01:31.670
FIONA YEUNG: It's a really
simple material design card.

00:01:31.670 --> 00:01:33.545
DAVID YANG: Well, this
is how I'd code it up.

00:01:33.545 --> 00:01:34.925
Everybody knows code is a truth.

00:01:34.925 --> 00:01:36.800
FIONA YEUNG: Well, you
know, material design,

00:01:36.800 --> 00:01:38.300
you should probably
read up on it.

00:01:38.300 --> 00:01:39.920
It's Google's design language.

00:01:39.920 --> 00:01:40.250
DAVID YANG: I know.

00:01:40.250 --> 00:01:40.640
I know.

00:01:40.640 --> 00:01:43.181
But I'm really busy, and it's
summer, and I want to have fun.

00:01:46.060 --> 00:01:49.330
So this might-- this
is a perfect microcosm

00:01:49.330 --> 00:01:52.090
of the gap that's seen
often between designers

00:01:52.090 --> 00:01:53.690
and engineers.

00:01:53.690 --> 00:01:55.390
We come from two
different worlds.

00:01:55.390 --> 00:01:57.820
We have a different-- we
have different backgrounds,

00:01:57.820 --> 00:02:00.800
and we have different frameworks
about thinking about things.

00:02:00.800 --> 00:02:02.387
So we have the same
thing on screen

00:02:02.387 --> 00:02:03.970
and we have two
different views of it.

00:02:06.362 --> 00:02:08.320
FIONA YEUNG: When designers
and engineers meet,

00:02:08.320 --> 00:02:10.419
sometimes it's hard to
get a consensus because

00:02:10.419 --> 00:02:13.469
of our different backgrounds,
perspectives, and priorities.

00:02:13.469 --> 00:02:15.010
There are times when
I'm in a meeting

00:02:15.010 --> 00:02:16.635
and I think that
everything I'm showing

00:02:16.635 --> 00:02:18.080
is pretty straightforward.

00:02:18.080 --> 00:02:20.350
But then I realize that I
actually lost the engineers

00:02:20.350 --> 00:02:21.770
a few slides back.

00:02:21.770 --> 00:02:23.966
So even though we're working
towards a common goal,

00:02:23.966 --> 00:02:25.840
sometimes it still feels
really hard to speak

00:02:25.840 --> 00:02:26.589
the same language.

00:02:29.500 --> 00:02:31.960
DAVID YANG: And because we
don't speak the same language,

00:02:31.960 --> 00:02:34.510
sometimes this leads
to misunderstanding.

00:02:34.510 --> 00:02:37.234
And eventually, misunderstanding
can lead to distrust.

00:02:37.234 --> 00:02:38.650
So you have a lot
of friction when

00:02:38.650 --> 00:02:41.890
you try to get any idea from
design to implementation.

00:02:41.890 --> 00:02:45.520
Everything really feels
like an uphill battle.

00:02:45.520 --> 00:02:47.830
Ultimately, it's
the users that lose,

00:02:47.830 --> 00:02:49.990
because you lose focus on them.

00:02:49.990 --> 00:02:53.050
You're not able to iterate as
quickly to achieve your end

00:02:53.050 --> 00:02:56.170
goals, and you might not fully
implement the entire design

00:02:56.170 --> 00:02:58.750
vision.

00:02:58.750 --> 00:03:00.730
So what's the problem?

00:03:00.730 --> 00:03:03.316
We're not speaking the
same language here.

00:03:03.316 --> 00:03:04.815
And today, Fiona
and I will give you

00:03:04.815 --> 00:03:06.460
a glimpse of how
we try to attack

00:03:06.460 --> 00:03:08.590
this problem on our team.

00:03:08.590 --> 00:03:11.350
We leverage a
prototyping-centric workflow

00:03:11.350 --> 00:03:14.710
using the same tool, the
Flutter UI framework,

00:03:14.710 --> 00:03:17.350
across prototyping and
our production code

00:03:17.350 --> 00:03:19.191
in order to bridge this gap.

00:03:19.191 --> 00:03:21.190
FIONA YEUNG: We hope to
break down some barriers

00:03:21.190 --> 00:03:23.064
so that you can leave
this talk with a deeper

00:03:23.064 --> 00:03:25.030
understanding on how
to better collaborate

00:03:25.030 --> 00:03:26.980
with your entire
team, ultimately

00:03:26.980 --> 00:03:29.890
creating a better product,
better team culture, and better

00:03:29.890 --> 00:03:32.140
work efficiency.

00:03:32.140 --> 00:03:34.660
We'll go over the existing
workflow between designers

00:03:34.660 --> 00:03:37.960
and developers, for
a mindset to have

00:03:37.960 --> 00:03:42.790
to bridge this gap, the
power of prototyping,

00:03:42.790 --> 00:03:46.030
my personal journey to
coding, and we'll end it off

00:03:46.030 --> 00:03:49.830
with a live demo using Flutter.

00:03:49.830 --> 00:03:50.750
DAVID YANG: All right.

00:03:50.750 --> 00:03:52.666
Let's dive into the
workflow between designers

00:03:52.666 --> 00:03:54.545
and developers.

00:03:54.545 --> 00:03:56.170
FIONA YEUNG: As you
might already know,

00:03:56.170 --> 00:03:58.630
the design process
has several stages.

00:03:58.630 --> 00:04:00.270
It begins with understanding.

00:04:00.270 --> 00:04:02.110
First, you have to
understand our users.

00:04:02.110 --> 00:04:02.950
What do they want?

00:04:02.950 --> 00:04:04.300
What's the current problem?

00:04:04.300 --> 00:04:06.730
And what's wrong with
existing solutions?

00:04:06.730 --> 00:04:10.150
After we understand this
research, we begin to sketch.

00:04:10.150 --> 00:04:12.640
This is where we generate
a ton of different ideas

00:04:12.640 --> 00:04:16.870
before narrowing it down to
a select few for designing.

00:04:16.870 --> 00:04:19.420
The ideas that actually
make it to the design stage

00:04:19.420 --> 00:04:22.029
are then mapped out from
low to high fidelity

00:04:22.029 --> 00:04:23.890
before prototyping.

00:04:23.890 --> 00:04:26.080
And prototyping is not
only great for developers,

00:04:26.080 --> 00:04:29.020
but it's great for designers so
that we can test and validate

00:04:29.020 --> 00:04:30.880
our ideas.

00:04:30.880 --> 00:04:36.640
After several rounds of
this, we refine and iterate.

00:04:36.640 --> 00:04:39.010
So we have really
rough wireframes,

00:04:39.010 --> 00:04:40.570
lo-fidelity mockups,
which are just

00:04:40.570 --> 00:04:43.660
simple boxes for photos and
text placements, and then

00:04:43.660 --> 00:04:45.134
hi-fidelity mockups.

00:04:45.134 --> 00:04:47.300
This is what we want our
final designs to look like.

00:04:50.750 --> 00:04:52.640
Once we get to
hi-fidelity mockups,

00:04:52.640 --> 00:04:53.750
we create redlines. lines.

00:04:53.750 --> 00:04:55.833
And this is what we've
typically done in the past,

00:04:55.833 --> 00:04:57.830
but we find that it's
not the best way.

00:04:57.830 --> 00:05:00.170
So redlines, or
what we call spec,

00:05:00.170 --> 00:05:01.970
a basically detailed
design document

00:05:01.970 --> 00:05:04.670
that indicates the type
sizes, color swatches,

00:05:04.670 --> 00:05:06.740
and margin and padding units.

00:05:06.740 --> 00:05:09.350
And this is not a great
way, because if we create--

00:05:09.350 --> 00:05:12.410
if we treat this process like
a back and forth hand-off,

00:05:12.410 --> 00:05:14.030
it creates a lot of friction.

00:05:14.030 --> 00:05:15.890
As the designer, I
create the redlines,

00:05:15.890 --> 00:05:17.600
and it takes a lot
of time, and then

00:05:17.600 --> 00:05:20.210
I hand it off to my
developer, and he'll say.

00:05:20.210 --> 00:05:22.200
DAVID YANG: You know,
this is really hard.

00:05:22.200 --> 00:05:23.510
I don't think it's feasible.

00:05:23.510 --> 00:05:26.370
Let's just switch it
up and make it easier.

00:05:26.370 --> 00:05:29.150
FIONA YEUNG: Which means I
have to go back to my designs,

00:05:29.150 --> 00:05:31.460
make some changes,
redo the redlines,

00:05:31.460 --> 00:05:33.440
and it's just over
and over again,

00:05:33.440 --> 00:05:35.342
handing it off to
my developer again,

00:05:35.342 --> 00:05:36.800
and the same thing
happening again.

00:05:39.880 --> 00:05:42.720
DAVID YANG: Ultimately,
these comprehensive redlines

00:05:42.720 --> 00:05:46.140
are exhaustive, both for the
designers and developers.

00:05:46.140 --> 00:05:48.450
As a designer, you have to
cover every nook and cranny,

00:05:48.450 --> 00:05:51.704
so you have some padding
here and margin there.

00:05:51.704 --> 00:05:53.370
And your developer
is bound to come back

00:05:53.370 --> 00:05:54.940
with all these questions.

00:05:54.940 --> 00:05:56.730
What happens is
you end up building

00:05:56.730 --> 00:05:59.490
a lot of redundant artifacts
that are just thrown away

00:05:59.490 --> 00:06:01.230
in the process.

00:06:01.230 --> 00:06:02.640
There's another thing.

00:06:02.640 --> 00:06:08.130
These mockups don't convey the
animation, transition, and flow

00:06:08.130 --> 00:06:10.950
that oftentimes
really make a UI pop.

00:06:10.950 --> 00:06:13.560
So we lose a lot of
fidelity through this gap

00:06:13.560 --> 00:06:15.026
and through this transition.

00:06:18.680 --> 00:06:21.520
So before we jump into our tool,
let's talk about some simple

00:06:21.520 --> 00:06:26.710
mindsets to keep that
start to bridge this gap.

00:06:26.710 --> 00:06:28.750
The first one is we
have to be user-focused.

00:06:28.750 --> 00:06:31.130
This is important
for developers.

00:06:31.130 --> 00:06:34.300
So developers out there,
talk to your designers.

00:06:34.300 --> 00:06:35.899
Ask them about the use case.

00:06:35.899 --> 00:06:37.690
Ask them about why are
you building this UI

00:06:37.690 --> 00:06:39.940
and what's the end
objective for the user.

00:06:39.940 --> 00:06:42.100
That way you can understand
the overlying goals

00:06:42.100 --> 00:06:46.290
and have a clear communication
with your designers.

00:06:46.290 --> 00:06:48.040
FIONA YEUNG: It also
helps engage together

00:06:48.040 --> 00:06:49.930
early and often.

00:06:49.930 --> 00:06:53.230
Designers and developers,
don't silo each other out.

00:06:53.230 --> 00:06:56.260
Being on the same page
about expectations and goals

00:06:56.260 --> 00:06:59.260
means that you can
still redirect early on.

00:06:59.260 --> 00:07:01.270
It also helps to treat
it less like a hand-off

00:07:01.270 --> 00:07:03.470
and more as a group effort,
because ultimately, it

00:07:03.470 --> 00:07:06.970
will result in more viable
outcomes and less churn.

00:07:06.970 --> 00:07:09.762
As a bonus, if you involve
engineers early on,

00:07:09.762 --> 00:07:11.970
it means that they're less
likely to reject the idea.

00:07:14.851 --> 00:07:16.850
DAVID YANG: And it's also
important to establish

00:07:16.850 --> 00:07:19.340
the same building
blocks early on so you

00:07:19.340 --> 00:07:21.510
can build on top of each other.

00:07:21.510 --> 00:07:23.497
So Fiona and I should
agree what a card is,

00:07:23.497 --> 00:07:24.830
and use that from that point on.

00:07:27.069 --> 00:07:28.610
FIONA YEUNG: Designers,
you also need

00:07:28.610 --> 00:07:30.544
to understand
technical constraints.

00:07:30.544 --> 00:07:32.210
We have to know what
kind of information

00:07:32.210 --> 00:07:35.440
we have to work with, the
data, the API information,

00:07:35.440 --> 00:07:38.110
as well as the technical
limitations of the framework.

00:07:38.110 --> 00:07:39.980
In order for this--
this helps us prevent us

00:07:39.980 --> 00:07:44.701
from creating fantasy mocks that
I might become too attached to.

00:07:44.701 --> 00:07:45.200
All right.

00:07:45.200 --> 00:07:47.075
So we've talked about
four different mindsets

00:07:47.075 --> 00:07:48.200
to bridge this gap.

00:07:48.200 --> 00:07:50.624
What about a hands-on
method to improve this?

00:07:50.624 --> 00:07:52.040
DAVID YANG: Well,
hopefully, a lot

00:07:52.040 --> 00:07:55.130
of designers out there in the
room are already prototyping.

00:07:55.130 --> 00:07:56.935
And you realize the
power of a prototype,

00:07:56.935 --> 00:07:59.060
because you're able to
convey your design in a more

00:07:59.060 --> 00:08:02.510
visceral fashion that developers
can understand as well.

00:08:06.290 --> 00:08:09.250
The good news is there's an
influx of prototyping tools out

00:08:09.250 --> 00:08:11.290
there in the marketplace.

00:08:11.290 --> 00:08:13.360
They're highly
expressive, and they

00:08:13.360 --> 00:08:15.355
make it very easy for
designers to create

00:08:15.355 --> 00:08:16.355
these interactive flows.

00:08:18.940 --> 00:08:20.190
But we still have one problem.

00:08:23.080 --> 00:08:26.500
These prototyping
tools don't use

00:08:26.500 --> 00:08:30.650
the same language across
prototype into production.

00:08:30.650 --> 00:08:34.030
So what might be easy to do in
your prototyping tool actually

00:08:34.030 --> 00:08:36.100
might be hard to
do in production.

00:08:36.100 --> 00:08:38.530
And what might be hard to
do in your prototyping tool,

00:08:38.530 --> 00:08:41.090
actually might be very
easy to do in production.

00:08:41.090 --> 00:08:43.030
So as a designer, when
you're prototyping,

00:08:43.030 --> 00:08:44.770
you might not
understand and explore

00:08:44.770 --> 00:08:49.270
the full technical constraints
of your problem space.

00:08:49.270 --> 00:08:51.820
Additionally, if Fiona
cooks up some prototypes

00:08:51.820 --> 00:08:54.310
with these tools and
gives them to me,

00:08:54.310 --> 00:08:56.830
I can't just copy and
paste it into my code.

00:08:56.830 --> 00:09:00.100
So we have the same problem
as we had before, i.e.

00:09:00.100 --> 00:09:03.850
she either has to make redlines,
which we know are exhaustive,

00:09:03.850 --> 00:09:06.070
or I have to go and
eyeball the margins

00:09:06.070 --> 00:09:08.200
and paddings of these
prototypes, which

00:09:08.200 --> 00:09:09.250
just isn't ideal.

00:09:12.320 --> 00:09:14.420
So to solve this
problem, our team

00:09:14.420 --> 00:09:17.360
has embraced this UI
framework called Flutter.

00:09:17.360 --> 00:09:19.820
It's an open source
UI framework.

00:09:19.820 --> 00:09:21.980
Both our design and
engineering team

00:09:21.980 --> 00:09:27.105
uses Flutter for our prototypes
and our production code.

00:09:27.105 --> 00:09:28.730
FIONA YEUNG: What's
great about Flutter

00:09:28.730 --> 00:09:30.650
is that it allows for
rapid scaffolding.

00:09:33.660 --> 00:09:36.940
You can design fully for your
intent for both iOS and Android

00:09:36.940 --> 00:09:38.467
platforms.

00:09:38.467 --> 00:09:39.925
Our goal is to make
it easy for you

00:09:39.925 --> 00:09:42.820
to go beyond the limitations
of stock toolkits.

00:09:42.820 --> 00:09:47.900
And Flutter does this by
having composable components.

00:09:47.900 --> 00:09:49.910
It's also built in with
a rich set of widgets,

00:09:49.910 --> 00:09:51.775
like iOS amateur
design guidelines,

00:09:51.775 --> 00:09:53.900
like the card and the grid
list that you're already

00:09:53.900 --> 00:09:54.710
familiar with.

00:09:57.380 --> 00:09:58.972
Also, Flutter has an app--

00:09:58.972 --> 00:10:01.430
a gallery app for you to explore
the different widgets that

00:10:01.430 --> 00:10:04.340
are already pre-built
for you to explore.

00:10:04.340 --> 00:10:05.739
But that's not all.

00:10:05.739 --> 00:10:07.530
Flutter gives you the
freedom to be unique.

00:10:10.620 --> 00:10:13.020
You can design fully for
both your-- for your intent

00:10:13.020 --> 00:10:15.660
for both iOS and
Android platform.

00:10:15.660 --> 00:10:18.510
And Flutter does this by
using composable components

00:10:18.510 --> 00:10:23.220
and the ability to code
with a single codebase.

00:10:23.220 --> 00:10:27.525
Design once, code
once, ship it to all.

00:10:31.950 --> 00:10:33.750
DAVID YANG: And
hopefully, as a designer

00:10:33.750 --> 00:10:35.166
you realize it's
important to test

00:10:35.166 --> 00:10:36.670
your designs in the real world.

00:10:36.670 --> 00:10:38.130
So what does it mean to be real?

00:10:38.130 --> 00:10:41.290
Well, you want to hook your
designs up to real data,

00:10:41.290 --> 00:10:45.540
try to give it to real users,
and go through real workflows.

00:10:45.540 --> 00:10:49.800
Because Flutter is one tool that
can span from design prototypes

00:10:49.800 --> 00:10:53.830
to production, it can carry
you through this process.

00:10:53.830 --> 00:10:56.190
It has all the developer
goodies that we need,

00:10:56.190 --> 00:11:02.400
such as automated UI testing
framework, and IDE support.

00:11:02.400 --> 00:11:06.930
The cool thing is teams both
inside and outside of Google

00:11:06.930 --> 00:11:12.810
are shipping apps today on
iOS and Android using Flutter.

00:11:12.810 --> 00:11:15.120
FIONA YEUNG: Everything David
said sounds pretty good.

00:11:15.120 --> 00:11:17.036
But as the designer, the
thought of the coding

00:11:17.036 --> 00:11:19.260
is still really
overwhelming and scary.

00:11:19.260 --> 00:11:21.120
Let me walk you through
my personal journey

00:11:21.120 --> 00:11:22.119
of learning how to code.

00:11:24.880 --> 00:11:27.040
So prior to learning
Flutter a few months ago,

00:11:27.040 --> 00:11:29.010
I never really
touched much code.

00:11:29.010 --> 00:11:32.360
I had a few HTML and CSS
classes back in school,

00:11:32.360 --> 00:11:33.650
but that was pretty much it.

00:11:33.650 --> 00:11:36.670
I couldn't really get myself
past the long lines of texts.

00:11:36.670 --> 00:11:39.060
And to be honest, whenever
I did think of coding,

00:11:39.060 --> 00:11:42.430
I thought of "The Matrix," which
is really confusing and just

00:11:42.430 --> 00:11:44.170
not accurate.

00:11:44.170 --> 00:11:48.292
But luckily, I had a
really supportive team.

00:11:48.292 --> 00:11:50.500
DAVID YANG: Our engineering
team wanted our designers

00:11:50.500 --> 00:11:52.420
to come in and
take some ownership

00:11:52.420 --> 00:11:56.120
over the small things, such as
margins, padding, and color.

00:11:56.120 --> 00:11:58.660
And so we actually held
a series of workshops

00:11:58.660 --> 00:12:01.000
to teach our designers Flutter.

00:12:01.000 --> 00:12:03.460
Instead of focusing on
the intricacies of code,

00:12:03.460 --> 00:12:05.950
such as syntax and
inheritance, we just

00:12:05.950 --> 00:12:07.930
really focused on
the building blocks

00:12:07.930 --> 00:12:11.750
that designers would need to
create common UI patterns.

00:12:11.750 --> 00:12:13.750
FIONA YEUNG: So my first
experience with Flutter

00:12:13.750 --> 00:12:16.780
actually didn't involve any
technical coding at all.

00:12:16.780 --> 00:12:18.860
I simply learned drawing
boxes, representing

00:12:18.860 --> 00:12:20.860
columns and rows, which
are some of the building

00:12:20.860 --> 00:12:22.060
blocks of Flutter.

00:12:22.060 --> 00:12:25.090
So I learned that when objects
are stacked, it's in a column,

00:12:25.090 --> 00:12:27.700
and when they're side by side,
it's wrapped inside a row, just

00:12:27.700 --> 00:12:29.510
like this.

00:12:29.510 --> 00:12:31.690
And then I also learned
that you can wrap rows

00:12:31.690 --> 00:12:37.130
inside a column as its
children, and vice versa.

00:12:37.130 --> 00:12:39.670
So my first time actually
creating a mockup prototype

00:12:39.670 --> 00:12:41.830
was for this simple
recipe mockup.

00:12:41.830 --> 00:12:44.770
So on the left, we have recipe
information, and on the right,

00:12:44.770 --> 00:12:46.030
we have an image.

00:12:46.030 --> 00:12:48.010
So these two things
are side by side.

00:12:48.010 --> 00:12:50.931
So that's how I knew it
belonged inside a row.

00:12:50.931 --> 00:12:51.430
Diving

00:12:51.430 --> 00:12:54.380
Deeper into that
recipe component,

00:12:54.380 --> 00:12:58.180
there's the title,
description, ratings.

00:12:58.180 --> 00:13:00.580
And because ratings has
the icons on the left

00:13:00.580 --> 00:13:03.410
and reviews on the right, it
meant that it was side by side.

00:13:03.410 --> 00:13:06.100
So this was going to be
a row inside this column.

00:13:06.100 --> 00:13:08.410
And lastly, we have icons.

00:13:08.410 --> 00:13:10.660
The icons are also
side by side, which

00:13:10.660 --> 00:13:12.730
meant that they are
going to be in a row.

00:13:12.730 --> 00:13:14.920
And all of this,
because it's stacked,

00:13:14.920 --> 00:13:17.720
meant that it was going to
be wrapped inside a column.

00:13:17.720 --> 00:13:19.720
So this was what I
did every single time

00:13:19.720 --> 00:13:21.070
I wanted to code something.

00:13:21.070 --> 00:13:22.960
And because I was a
beginner, it really

00:13:22.960 --> 00:13:26.720
helped me map out and
visualize my designs.

00:13:26.720 --> 00:13:29.560
And it was a literal one-to-one
mapping into the code.

00:13:29.560 --> 00:13:32.260
So I would start with a
column, inside the column

00:13:32.260 --> 00:13:33.650
were its children.

00:13:33.650 --> 00:13:36.700
So in this children, I
would have a text for title,

00:13:36.700 --> 00:13:39.047
description, a
row for the icons,

00:13:39.047 --> 00:13:40.130
and a row for the ratings.

00:13:45.140 --> 00:13:47.120
DAVID YANG: What was
awesome was not only was

00:13:47.120 --> 00:13:51.560
Fiona's exploration and sketches
useful for the designers

00:13:51.560 --> 00:13:56.820
on her team, it was eye-opening
for the engineers on our team.

00:13:56.820 --> 00:13:59.060
It gave them a glimpse
of the mental model

00:13:59.060 --> 00:14:01.080
of how a designer
approached Flutter

00:14:01.080 --> 00:14:04.202
and how a designer
approached UI layout.

00:14:04.202 --> 00:14:05.660
They were really
energized by this,

00:14:05.660 --> 00:14:07.243
and in response,
they actually created

00:14:07.243 --> 00:14:12.410
a tutorial, which was entirely
based off of Fiona's work.

00:14:12.410 --> 00:14:15.210
And this is all live
on the Flutter website.

00:14:15.210 --> 00:14:18.440
Another one of our designers
came from a web prototyping

00:14:18.440 --> 00:14:19.250
world.

00:14:19.250 --> 00:14:23.240
So he was used to
using HTML and CSS.

00:14:23.240 --> 00:14:26.000
In order to help him
along the process,

00:14:26.000 --> 00:14:27.950
he created a series
of cheat sheets

00:14:27.950 --> 00:14:31.720
that mapped HTML code to Flutter
code to map these concepts.

00:14:34.420 --> 00:14:36.920
And just like before, in
response, the Flutter team

00:14:36.920 --> 00:14:39.080
found this really
insightful, and they

00:14:39.080 --> 00:14:40.670
published a
full-fledged tutorial,

00:14:40.670 --> 00:14:42.090
basically taking
his cheat sheets

00:14:42.090 --> 00:14:45.440
and showing-- helping web
developers or web prototypers

00:14:45.440 --> 00:14:47.570
move from the web to Flutter.

00:14:47.570 --> 00:14:50.820
What this really shows is it
shows the collaborative power

00:14:50.820 --> 00:14:53.840
of being on the same language
and using the same framework

00:14:53.840 --> 00:14:56.222
across engineering and design.

00:14:56.222 --> 00:14:57.680
Because of this,
we're able to have

00:14:57.680 --> 00:15:00.620
these serendipitous
collaborations, such as this,

00:15:00.620 --> 00:15:04.364
which produces artifacts that
are useful for everybody.

00:15:04.364 --> 00:15:05.780
FIONA YEUNG: So
what really helped

00:15:05.780 --> 00:15:08.150
me was to create
flashcards and guides,

00:15:08.150 --> 00:15:11.330
things that resonated with how
I understood these concepts.

00:15:11.330 --> 00:15:13.640
I also asked for help
a lot among my team,

00:15:13.640 --> 00:15:15.580
and also I use Stack
Overflow, which is

00:15:15.580 --> 00:15:17.930
a Q&amp;A site for coding topics.

00:15:17.930 --> 00:15:20.190
And lastly, just
keep practicing.

00:15:20.190 --> 00:15:22.895
And remember, you're not
trying to become a developer.

00:15:22.895 --> 00:15:24.520
There's still a ton
of technical things

00:15:24.520 --> 00:15:26.450
that I don't understand
myself, but that's

00:15:26.450 --> 00:15:28.550
the part-- that's not
the most important part.

00:15:28.550 --> 00:15:32.730
This is just bridging the gap
between you and the developers.

00:15:32.730 --> 00:15:33.230
All right.

00:15:33.230 --> 00:15:36.320
So we finished talking about
the problems and some solutions,

00:15:36.320 --> 00:15:40.010
let's dive into our prototype.

00:15:40.010 --> 00:15:43.040
Today we'll show you how we
used the Flutter UI framework

00:15:43.040 --> 00:15:45.410
to create this music mockup.

00:15:45.410 --> 00:15:48.090
And we'll focus specifically
on this Featured Artists card.

00:15:51.254 --> 00:15:52.170
DAVID YANG: All right.

00:15:52.170 --> 00:15:54.950
Let's jump to the code.

00:15:54.950 --> 00:15:56.210
FIONA YEUNG: All right.

00:15:56.210 --> 00:15:59.240
DAVID YANG: So what we
have here is IntelliJ,

00:15:59.240 --> 00:16:02.720
and IntelliJ is Flutter's
officially-supported IDE,

00:16:02.720 --> 00:16:06.380
so you're going to see
some nice things in here.

00:16:06.380 --> 00:16:09.470
As I mentioned before, or
as we mentioned before,

00:16:09.470 --> 00:16:12.890
Flutter's built on top of
these composable components.

00:16:12.890 --> 00:16:14.450
We call them widgets.

00:16:14.450 --> 00:16:19.310
So typically, you'll use simple
widgets, such as text, images,

00:16:19.310 --> 00:16:22.570
icons, rows, columns,
compose them together

00:16:22.570 --> 00:16:25.520
to form more complicated
widgets that ultimately

00:16:25.520 --> 00:16:27.627
result in your end UI.

00:16:27.627 --> 00:16:29.210
And what Fiona is
going to do is she's

00:16:29.210 --> 00:16:32.000
going to use these basic
widgets to code up the concerts

00:16:32.000 --> 00:16:34.500
mock that you just saw.

00:16:34.500 --> 00:16:37.220
FIONA YEUNG: So for my
mockup, we begin with a card.

00:16:37.220 --> 00:16:38.314
It's really simple.

00:16:38.314 --> 00:16:39.605
I'm just going to type in card.

00:16:43.620 --> 00:16:48.110
And then inside here,
we have a new column,

00:16:48.110 --> 00:16:50.600
which is the stack of items.

00:16:50.600 --> 00:16:53.140
DAVID YANG: And here we see
something really awesome.

00:16:53.140 --> 00:16:55.600
All Fiona needs to
do is type in card,

00:16:55.600 --> 00:16:57.070
and she gets a
material design card

00:16:57.070 --> 00:17:00.410
with all the padding,
shadows, and background.

00:17:00.410 --> 00:17:02.530
So it starts to
show that Flutter

00:17:02.530 --> 00:17:04.390
is designed to be
easily scaffolded

00:17:04.390 --> 00:17:05.680
for your common designs.

00:17:05.680 --> 00:17:07.960
And because of that, we can
speak the same language.

00:17:07.960 --> 00:17:09.579
Now we both understand
what a card is,

00:17:09.579 --> 00:17:12.140
because a card is in the code.

00:17:12.140 --> 00:17:14.500
FIONA YEUNG: So the first
part of this card is a photo.

00:17:14.500 --> 00:17:15.880
I've already
pre-coded this part,

00:17:15.880 --> 00:17:17.421
and I'll just paste
it right in here.

00:17:21.380 --> 00:17:21.880
OK.

00:17:21.880 --> 00:17:23.670
I want to remove the commenting.

00:17:23.670 --> 00:17:26.170
And check this part out.

00:17:26.170 --> 00:17:28.291
DAVID YANG: Flutter
uses the Dart language,

00:17:28.291 --> 00:17:30.540
and because of that, we get
all of the developer tools

00:17:30.540 --> 00:17:31.350
from Dart.

00:17:31.350 --> 00:17:33.180
Fiona is actually
using Dart format here

00:17:33.180 --> 00:17:35.940
to make her code all line up.

00:17:35.940 --> 00:17:38.370
And this is extremely
powerful as a designer,

00:17:38.370 --> 00:17:40.350
because you don't
want to focus on tabs

00:17:40.350 --> 00:17:42.270
versus spaces or alignment.

00:17:42.270 --> 00:17:44.690
So with the click of a
button, her code is formatted.

00:17:44.690 --> 00:17:47.067
And it eases the communication
between me and Fiona,

00:17:47.067 --> 00:17:48.900
because this is just
something that we don't

00:17:48.900 --> 00:17:50.484
have to worry about anymore.

00:17:50.484 --> 00:17:52.150
FIONA YEUNG: And
because I'm a designer,

00:17:52.150 --> 00:17:54.150
I really like to
visualize things.

00:17:54.150 --> 00:17:55.890
Just looking at the
code doesn't tell me

00:17:55.890 --> 00:17:57.230
what I've actually done.

00:17:57.230 --> 00:17:58.980
So one of my favorite
things about Flutter

00:17:58.980 --> 00:18:00.194
is the Hot Reload tool.

00:18:00.194 --> 00:18:01.860
So there's a little
lightning icon here.

00:18:01.860 --> 00:18:03.840
With the click of a
button, I can instantly

00:18:03.840 --> 00:18:06.210
see what I've created,
which is this photo.

00:18:06.210 --> 00:18:08.650
I also can see that there's
no margins or paddings.

00:18:08.650 --> 00:18:11.852
So let's go in and add that.

00:18:11.852 --> 00:18:14.060
DAVID YANG: This part makes
you smile as a developer,

00:18:14.060 --> 00:18:15.559
because what Fiona
is doing is she's

00:18:15.559 --> 00:18:17.720
taken ownership of the
small design details

00:18:17.720 --> 00:18:19.460
that she cares about.

00:18:19.460 --> 00:18:20.960
So she's setting the margins.

00:18:20.960 --> 00:18:23.210
And because she wrote this
code, if later on, she

00:18:23.210 --> 00:18:25.730
decides the margins
don't look right,

00:18:25.730 --> 00:18:27.560
she can easily go
back and tweak them

00:18:27.560 --> 00:18:29.122
without having to talk to me.

00:18:29.122 --> 00:18:30.080
FIONA YEUNG: All right.

00:18:30.080 --> 00:18:32.090
So with the click
of a button, now

00:18:32.090 --> 00:18:35.030
there's margins, the
spacing around the photo.

00:18:35.030 --> 00:18:38.180
Next up with this card, we
have the "Nonch Harpin" text.

00:18:38.180 --> 00:18:40.389
So again I've
pre-coded this part.

00:18:40.389 --> 00:18:42.680
And we're just going to paste
it right under the photo.

00:18:46.440 --> 00:18:49.660
So That's all wrapped
inside the children.

00:18:49.660 --> 00:18:50.180
OK.

00:18:50.180 --> 00:18:53.540
Autoformat, and then Hot Reload.

00:18:53.540 --> 00:18:55.750
And now we have the text.

00:18:55.750 --> 00:18:57.760
So everything was
almost ready, except we

00:18:57.760 --> 00:18:59.020
don't have the styling.

00:18:59.020 --> 00:19:02.110
So let's go in
and add that here.

00:19:02.110 --> 00:19:05.140
DAVID YANG: Flutter has these
objects called themes and text

00:19:05.140 --> 00:19:06.250
themes.

00:19:06.250 --> 00:19:08.830
They allow you to enforce
a consistent style

00:19:08.830 --> 00:19:12.610
throughout your app, which is
very powerful for designers.

00:19:12.610 --> 00:19:14.170
And because Flutter wants it--

00:19:14.170 --> 00:19:17.260
Flutter's designed to be
easy to make beautiful apps,

00:19:17.260 --> 00:19:19.680
it comes from with
material design

00:19:19.680 --> 00:19:22.250
and iOS themes all built-in.

00:19:22.250 --> 00:19:25.060
So terms such as
headline and body2

00:19:25.060 --> 00:19:27.574
are all really
familiar to Fiona.

00:19:27.574 --> 00:19:29.740
So again, we could start
speaking the same language,

00:19:29.740 --> 00:19:31.182
and we're on the same page.

00:19:31.182 --> 00:19:32.140
FIONA YEUNG: All right.

00:19:32.140 --> 00:19:34.060
So I've added the text styling.

00:19:34.060 --> 00:19:35.950
Now we're just missing
the Purchase button.

00:19:35.950 --> 00:19:36.991
Let's go in and add that.

00:19:42.574 --> 00:19:44.240
So right now, I'm
using a raised button,

00:19:44.240 --> 00:19:47.210
which is right out of the
material design guidelines.

00:19:47.210 --> 00:19:49.260
And let's see what
it looks like.

00:19:49.260 --> 00:19:49.760
OK.

00:19:49.760 --> 00:19:51.800
We have a simple
gray one right now.

00:19:51.800 --> 00:19:52.927
Now I click on it.

00:19:52.927 --> 00:19:54.260
There's already a ripple effect.

00:19:54.260 --> 00:19:57.540
And this is all built-in, so
I don't have to do anything.

00:19:57.540 --> 00:20:01.030
And because I'm the one who
designed this design, I can--

00:20:01.030 --> 00:20:02.810
I know that I want to
use a shopping cart,

00:20:02.810 --> 00:20:03.920
and I know I want
the button to be

00:20:03.920 --> 00:20:05.330
pink and the icon to the white.

00:20:05.330 --> 00:20:06.290
So let's add that.

00:20:10.560 --> 00:20:13.470
What's also really cool
is that when I type icons,

00:20:13.470 --> 00:20:15.720
I see a list of built-in
material design icons

00:20:15.720 --> 00:20:18.619
already, so it's not hard to
just insert whatever I need.

00:20:18.619 --> 00:20:20.160
I know that I need
the shopping cart.

00:20:20.160 --> 00:20:23.370
So let's add that.

00:20:23.370 --> 00:20:25.840
And same with colors.

00:20:25.840 --> 00:20:27.990
I want white.

00:20:27.990 --> 00:20:29.310
I want the button to be pink.

00:20:37.040 --> 00:20:38.090
Let's double check.

00:20:38.090 --> 00:20:38.840
There.

00:20:38.840 --> 00:20:40.790
Now the button is
exactly how I want it.

00:20:40.790 --> 00:20:43.470
And also, if you notice
on the left-hand column,

00:20:43.470 --> 00:20:46.354
we have a box for pink,
white, and the shopping icon.

00:20:46.354 --> 00:20:48.770
So they're just more visual
indicators of different things

00:20:48.770 --> 00:20:50.400
that I've used.

00:20:50.400 --> 00:20:51.680
How's it look, David?

00:20:51.680 --> 00:20:52.681
DAVID YANG: Pretty good.

00:20:52.681 --> 00:20:54.263
Well, actually, now
that I look at it.

00:20:54.263 --> 00:20:55.350
There's one small issue.

00:20:55.350 --> 00:20:56.391
FIONA YEUNG: What's that?

00:20:56.391 --> 00:20:58.340
DAVID YANG: Well,
according to material.io,

00:20:58.340 --> 00:20:59.640
when you have a
card, you always want

00:20:59.640 --> 00:21:01.520
to use a flat button
instead of a raised button.

00:21:01.520 --> 00:21:01.820
FIONA YEUNG: All right.

00:21:01.820 --> 00:21:02.720
David caught me.

00:21:02.720 --> 00:21:05.000
So apparently, you
can't use raised buttons

00:21:05.000 --> 00:21:06.620
on the material design card.

00:21:06.620 --> 00:21:08.870
So I can really
easily swap this out.

00:21:08.870 --> 00:21:12.625
So instead of my raised button
here, I can use a flat button.

00:21:12.625 --> 00:21:15.220
And just like that, the
shadows are now gone.

00:21:15.220 --> 00:21:17.584
And if I want to change
this for an iOS version,

00:21:17.584 --> 00:21:19.250
I can easily do that
right here as well.

00:21:24.040 --> 00:21:26.720
And there's just a red box here
to show that it's an overflow.

00:21:26.720 --> 00:21:28.469
But that's OK because
we're going to stick

00:21:28.469 --> 00:21:31.291
to the flat button today.

00:21:31.291 --> 00:21:31.790
OK.

00:21:31.790 --> 00:21:33.990
Now the button is
exactly how I want.

00:21:33.990 --> 00:21:35.360
But there's one last problem.

00:21:35.360 --> 00:21:37.239
The spacing with the
text is really close

00:21:37.239 --> 00:21:38.030
together right now.

00:21:38.030 --> 00:21:39.824
What can do about that?

00:21:39.824 --> 00:21:41.990
DAVID YANG: I would actually
use the visual debugger

00:21:41.990 --> 00:21:43.710
in this situation.

00:21:43.710 --> 00:21:46.010
What the visual debugger
does is it shows you

00:21:46.010 --> 00:21:48.760
how margins, padding,
and alignment are used

00:21:48.760 --> 00:21:50.600
to determine your final layout.

00:21:50.600 --> 00:21:53.500
So what we have here
is we see that the band

00:21:53.500 --> 00:21:56.300
name, Nonch Harpin, is getting
squished by our button.

00:21:56.300 --> 00:21:58.100
And we really want
to have that text

00:21:58.100 --> 00:22:01.280
space out for that entire row,
so we push our button flush

00:22:01.280 --> 00:22:02.240
right.

00:22:02.240 --> 00:22:03.020
FIONA YEUNG: OK.

00:22:03.020 --> 00:22:06.220
So that means I need to
use an expanded widget.

00:22:06.220 --> 00:22:10.040
So right here, expanded.

00:22:10.040 --> 00:22:12.580
I'm going to wrap
this column inside.

00:22:12.580 --> 00:22:15.050
So this column is
what the text is.

00:22:15.050 --> 00:22:18.290
So I'll just put it here.

00:22:18.290 --> 00:22:22.310
And voila, the first
part of the card is done.

00:22:22.310 --> 00:22:24.650
Now I'm going to hand off
my code directly to David,

00:22:24.650 --> 00:22:26.540
and he'll be able to
build right off of it,

00:22:26.540 --> 00:22:27.890
using exactly what I've created.

00:22:30.416 --> 00:22:31.790
DAVID YANG: And
hopefully you saw

00:22:31.790 --> 00:22:35.650
the power of having
a really great IDE

00:22:35.650 --> 00:22:38.780
and having a framework,
Flutter, that is

00:22:38.780 --> 00:22:40.640
designed to be design friendly.

00:22:40.640 --> 00:22:42.140
And so it was really
easy for Fiona

00:22:42.140 --> 00:22:47.220
to add her icons and
buttons and change things.

00:22:47.220 --> 00:22:47.840
OK.

00:22:47.840 --> 00:22:49.220
So now I'm going
to-- let's pre--

00:22:49.220 --> 00:22:51.410
I'm going to check
out Fiona's code.

00:22:51.410 --> 00:22:53.930
So she gave me some files, and
I'm going to check that out.

00:22:58.390 --> 00:22:58.890
Oops.

00:22:58.890 --> 00:22:59.882
Try that again.

00:23:08.330 --> 00:23:09.850
OK.

00:23:09.850 --> 00:23:12.890
Let's give it a run and
see what it looks like.

00:23:12.890 --> 00:23:15.100
So Fiona has actually
gone in ahead

00:23:15.100 --> 00:23:17.380
and created out the venues
detail section, which

00:23:17.380 --> 00:23:19.270
is on the bottom right here.

00:23:19.270 --> 00:23:21.870
So it shows that we're going
to this Nonch Harpin concert

00:23:21.870 --> 00:23:23.610
at McKillop's Bar.

00:23:23.610 --> 00:23:24.880
Cool.

00:23:24.880 --> 00:23:26.560
Now let's take a
look at the code.

00:23:26.560 --> 00:23:28.570
So I've gone in
ahead and started

00:23:28.570 --> 00:23:30.940
making the code a little
bit more production ready.

00:23:30.940 --> 00:23:35.050
So I extracted out her
UI into this widget

00:23:35.050 --> 00:23:36.880
called the Artist card,
which specifically

00:23:36.880 --> 00:23:40.900
represents this entire card.

00:23:40.900 --> 00:23:42.804
As you have seen,
maybe in Fiona's code,

00:23:42.804 --> 00:23:44.470
things started to get
a little bit long.

00:23:44.470 --> 00:23:47.710
We were nesting a lot of things
inside columns, inside rows,

00:23:47.710 --> 00:23:49.015
inside columns.

00:23:49.015 --> 00:23:50.890
So in order to make this
a little bit cleaner

00:23:50.890 --> 00:23:53.951
and semantic, I built
these helper functions.

00:23:53.951 --> 00:23:55.450
So we have the
buildHeader function,

00:23:55.450 --> 00:23:58.570
which just rebuilds
the widget that

00:23:58.570 --> 00:24:01.690
represents this top section.

00:24:01.690 --> 00:24:05.320
And then we have the
buildVenueDetails function,

00:24:05.320 --> 00:24:08.330
which just builds this
bottom part right here.

00:24:08.330 --> 00:24:11.489
And finally, we put these two
functions inside a column.

00:24:11.489 --> 00:24:13.030
So again, it shows
that everything is

00:24:13.030 --> 00:24:14.280
really composable in Flutter.

00:24:14.280 --> 00:24:16.750
They're just functions.

00:24:16.750 --> 00:24:18.580
What's really important
for our workflow

00:24:18.580 --> 00:24:21.370
is the fact that I've only
moved around Fiona's code.

00:24:21.370 --> 00:24:23.220
I didn't really
change it at all.

00:24:23.220 --> 00:24:25.530
So this is still Fiona's code--

00:24:25.530 --> 00:24:28.790
oops-- and she can go back and
make changes, if she wants to.

00:24:31.950 --> 00:24:33.722
So Fiona, what do we want today?

00:24:33.722 --> 00:24:34.680
What are we looking at?

00:24:34.680 --> 00:24:36.471
FIONA YEUNG: So when
I tap on Nonch Harpin,

00:24:36.471 --> 00:24:38.400
I want the venue details
to close or expand

00:24:38.400 --> 00:24:39.626
whenever I tap on it.

00:24:39.626 --> 00:24:40.500
DAVID YANG: OK, cool.

00:24:40.500 --> 00:24:43.140
So we want this card
to be toggleable

00:24:43.140 --> 00:24:46.710
so we can expand and
close the venue section.

00:24:46.710 --> 00:24:49.800
First, I'm going to make
a Boolean flag, which

00:24:49.800 --> 00:24:53.790
is my state, and this will
tell me when to open the card

00:24:53.790 --> 00:24:55.650
and close the card.

00:24:55.650 --> 00:24:59.770
By default, we'll
make the card closed.

00:24:59.770 --> 00:25:01.930
The next thing
I'm going to do is

00:25:01.930 --> 00:25:05.050
I'm going I want to animate
this opening and closing.

00:25:05.050 --> 00:25:09.070
Flutter has a widget built-in
called the animated crossfade.

00:25:09.070 --> 00:25:13.150
Now, what this does is it
animates between two widgets.

00:25:13.150 --> 00:25:16.420
So my first widget will
be the venue section.

00:25:16.420 --> 00:25:18.790
So I'm just going to copy
and paste this venue details

00:25:18.790 --> 00:25:21.700
function, plop it
in my first child.

00:25:24.720 --> 00:25:28.260
And then, because I'm opening
and closing this card,

00:25:28.260 --> 00:25:31.710
my second child is just going
to be an empty container.

00:25:31.710 --> 00:25:34.050
So I'm animating from
something to nothing.

00:25:41.780 --> 00:25:45.340
Finally, I have to
specify based on my state

00:25:45.340 --> 00:25:50.590
when to show the venue details
section and when to hide it.

00:25:50.590 --> 00:25:57.010
So when open is true, we'll
show the first widget.

00:26:10.712 --> 00:26:12.920
And when open is false,
we'll show the second widget,

00:26:12.920 --> 00:26:14.493
which is the empty container.

00:26:19.570 --> 00:26:20.070
All right.

00:26:20.070 --> 00:26:21.150
Great.

00:26:21.150 --> 00:26:24.355
Finally, we want to specify a
duration for this animation.

00:26:24.355 --> 00:26:25.980
Right now I'm just
going to eyeball it,

00:26:25.980 --> 00:26:29.790
maybe make it 400 milliseconds.

00:26:29.790 --> 00:26:32.280
But the cool part is
because Fiona and I are

00:26:32.280 --> 00:26:35.020
using the same codebase,
we're using the same language,

00:26:35.020 --> 00:26:36.862
if Fiona thinks this
doesn't look good,

00:26:36.862 --> 00:26:38.070
she can go back and tweak it.

00:26:38.070 --> 00:26:39.236
So I'm not too worried here.

00:26:41.680 --> 00:26:42.180
All right.

00:26:42.180 --> 00:26:44.350
Let's see what it looks like.

00:26:44.350 --> 00:26:46.980
So what we have is
we have the card--

00:26:46.980 --> 00:26:49.830
the venue section
details is hidden.

00:26:49.830 --> 00:26:52.710
And that's because by
default I set open to false.

00:26:52.710 --> 00:26:55.080
Now I actually want to
hook up a user action

00:26:55.080 --> 00:26:58.520
to toggle this state.

00:26:58.520 --> 00:27:01.250
Again, because Flutter has a
lot of material design widgets

00:27:01.250 --> 00:27:05.360
built-in, it makes it easy
to make this look nice.

00:27:05.360 --> 00:27:08.500
I'm going to use a widget
called the Inkwell.

00:27:08.500 --> 00:27:12.380
What the Inkwell does is it
shows a material design ripple

00:27:12.380 --> 00:27:14.930
every time a user
presses on that section.

00:27:14.930 --> 00:27:19.010
And now I can perform an
action based on that touch.

00:27:19.010 --> 00:27:22.160
So we're going to move all
the content of the card

00:27:22.160 --> 00:27:23.180
inside that Inkwell.

00:27:27.000 --> 00:27:28.470
Give it onTap callback.

00:27:32.770 --> 00:27:35.320
And let's see what we get.

00:27:35.320 --> 00:27:36.430
Oops.

00:27:36.430 --> 00:27:37.280
We have an error.

00:27:37.280 --> 00:27:39.440
That's fine, because I
put it in the wrong place.

00:27:39.440 --> 00:27:41.170
Let's put it right here.

00:27:41.170 --> 00:27:43.480
There we go.

00:27:43.480 --> 00:27:44.000
There we go.

00:27:44.000 --> 00:27:47.410
So when I tap it, I get
my material design ripple.

00:27:47.410 --> 00:27:51.340
Finally, I need to hook up that
action to change the state.

00:27:51.340 --> 00:27:54.760
In this case, it's
pretty simple.

00:27:54.760 --> 00:27:55.930
I just set--

00:27:55.930 --> 00:27:57.790
I just toggle my Boolean value.

00:28:02.860 --> 00:28:04.500
So open will be toggled.

00:28:07.320 --> 00:28:08.260
All right.

00:28:11.520 --> 00:28:12.020
Nice.

00:28:12.020 --> 00:28:13.550
We get this nice animation.

00:28:13.550 --> 00:28:15.245
And it looks pretty good to me.

00:28:15.245 --> 00:28:17.620
FIONA YEUNG: It looks pretty
good, but there's one thing.

00:28:17.620 --> 00:28:18.200
DAVID YANG: What's that?

00:28:18.200 --> 00:28:19.910
FIONA YEUNG: It's
a bit too slow.

00:28:19.910 --> 00:28:21.440
DAVID YANG: Oh, yeah,
go ahead and change it.

00:28:21.440 --> 00:28:23.564
FIONA YEUNG: So because
I'm familiar with this now,

00:28:23.564 --> 00:28:25.800
I can just go right
ahead and change it.

00:28:25.800 --> 00:28:28.070
So let's try 200 milliseconds.

00:28:31.072 --> 00:28:32.030
That's a little better.

00:28:32.030 --> 00:28:33.260
DAVID YANG: Yeah, great.

00:28:33.260 --> 00:28:33.470
FIONA YEUNG: All right.

00:28:33.470 --> 00:28:35.262
Can we switch it back
to the slides please?

00:28:35.262 --> 00:28:36.886
DAVID YANG: So
hopefully, this gave you

00:28:36.886 --> 00:28:38.900
a little snippet of the
advantages of working

00:28:38.900 --> 00:28:40.580
within the same language.

00:28:40.580 --> 00:28:43.250
Using the same tool from
prototyping to production,

00:28:43.250 --> 00:28:45.040
we're able to jump
in, collaborate,

00:28:45.040 --> 00:28:47.572
and I think we have a better
working relationship now.

00:28:47.572 --> 00:28:48.530
FIONA YEUNG: All right.

00:28:48.530 --> 00:28:52.672
So let's take a look at some key
takeaways from our talk today.

00:28:52.672 --> 00:28:55.130
One of the reoccurring themes
that we've been talking about

00:28:55.130 --> 00:28:57.170
is embrace the same language.

00:28:57.170 --> 00:28:59.270
Embracing the same language
allows you to actually

00:28:59.270 --> 00:29:00.950
be able to communicate
with each other

00:29:00.950 --> 00:29:03.080
with fewer misunderstandings.

00:29:03.080 --> 00:29:04.820
And you're able to
work better together,

00:29:04.820 --> 00:29:06.860
creating a more
user-centered product.

00:29:06.860 --> 00:29:08.979
And ultimately, you also
become more empathetic

00:29:08.979 --> 00:29:09.770
towards each other.

00:29:11.784 --> 00:29:13.200
DAVID YANG:
Hopefully, you've seen

00:29:13.200 --> 00:29:14.970
it's really a two-way street.

00:29:14.970 --> 00:29:16.570
It's a group effort.

00:29:16.570 --> 00:29:19.770
So designers need to take the
jump, dive into some code,

00:29:19.770 --> 00:29:22.140
and learn some of
these technical tools.

00:29:22.140 --> 00:29:24.120
But on the flip
side, the developers

00:29:24.120 --> 00:29:27.420
need to embrace design, and
also help their designers come

00:29:27.420 --> 00:29:28.420
to this world of coding.

00:29:28.420 --> 00:29:30.900
It's not easy, and requires--
and as you've seen,

00:29:30.900 --> 00:29:34.940
our team has held these
workshops to get this going.

00:29:34.940 --> 00:29:36.960
And it's pretty apparent
that it's a process.

00:29:36.960 --> 00:29:39.360
So to be honest, it took
a lot of upfront effort

00:29:39.360 --> 00:29:41.430
for our team to
get this through.

00:29:41.430 --> 00:29:43.830
It took a lot of
work and workshops.

00:29:43.830 --> 00:29:47.280
But I think, and we think
that this work is well

00:29:47.280 --> 00:29:49.870
paid in the long run and it's
going to benefit your team.

00:29:49.870 --> 00:29:51.554
You're going to iterate quicker.

00:29:51.554 --> 00:29:53.220
Your designers and
developers are really

00:29:53.220 --> 00:29:56.131
going to collaborate and
like working with each other.

00:29:56.131 --> 00:29:58.130
FIONA YEUNG: And lastly,
we can't stress enough,

00:29:58.130 --> 00:30:00.050
but aim to use a common tool.

00:30:00.050 --> 00:30:01.610
In our team, we use Flutter.

00:30:01.610 --> 00:30:03.480
But lots of things work for you.

00:30:03.480 --> 00:30:05.070
As long as you use
this common tool,

00:30:05.070 --> 00:30:07.028
it helps you break down
these walls between you

00:30:07.028 --> 00:30:08.940
and the developer or
designer, and bridges

00:30:08.940 --> 00:30:12.150
the gap between you guys.

00:30:12.150 --> 00:30:14.160
DAVID YANG: So hopefully,
you saw the problem,

00:30:14.160 --> 00:30:15.930
we're not speaking
the same language,

00:30:15.930 --> 00:30:17.490
and you had a glimpse
of how we tried

00:30:17.490 --> 00:30:19.050
to approach this in our team.

00:30:19.050 --> 00:30:20.970
The really cool part
is all that code

00:30:20.970 --> 00:30:22.980
that we showed you in
that mockup, that was

00:30:22.980 --> 00:30:24.990
all a real project on our team.

00:30:24.990 --> 00:30:27.390
And that stuff's all been
committed in our repos.

00:30:27.390 --> 00:30:29.910
So it's a real example.

00:30:29.910 --> 00:30:33.650
Finally, if the tool we used,
Flutter, really interests you,

00:30:33.650 --> 00:30:35.930
I'd recommend going
to this talk at 10:30

00:30:35.930 --> 00:30:38.310
by our coworkers
Emily and Emily.

00:30:38.310 --> 00:30:40.320
This is a more technical
talk, and they're

00:30:40.320 --> 00:30:43.860
going to build an app full
out in front of you for iOS

00:30:43.860 --> 00:30:48.240
and Android on the same time,
hooked up live to Firebase.

00:30:48.240 --> 00:30:50.594
And the best part is that
because we're Google,

00:30:50.594 --> 00:30:52.010
this app's going
to be a chat app.

00:30:56.290 --> 00:30:57.260
FIONA YEUNG: All right.

00:30:57.260 --> 00:30:59.540
So if you need more
available resources,

00:30:59.540 --> 00:31:03.800
we have a lot online,
Flutter.io, materialdesign.io.

00:31:03.800 --> 00:31:07.190
And don't forget to subscribe
to the Google Design newsletter.

00:31:07.190 --> 00:31:07.930
Thank you.

00:31:07.930 --> 00:31:08.190
[APPLAUSE]

00:31:08.190 --> 00:31:09.023
DAVID YANG: Hang on.

00:31:09.023 --> 00:31:12.854
[APPLAUSE]

00:31:12.854 --> 00:31:14.020
FIONA YEUNG: One last thing.

00:31:14.020 --> 00:31:15.812
DAVID YANG: Yeah, and
if you're interested,

00:31:15.812 --> 00:31:18.228
if you have more questions
about Flutter and our workflow,

00:31:18.228 --> 00:31:20.442
we'll be out there in the
patio, answering questions.

00:31:20.442 --> 00:31:22.400
And we'll also be giving
out some Flutter swag.

00:31:22.400 --> 00:31:24.611
So hopefully, we'll
see you guys later.

00:31:24.611 --> 00:31:25.110
Bye.

00:31:25.110 --> 00:31:25.943
FIONA YEUNG: Thanks.

00:31:25.943 --> 00:31:26.629
[APPLAUSE]

00:31:26.629 --> 00:31:30.080
[MUSIC PLAYING]

