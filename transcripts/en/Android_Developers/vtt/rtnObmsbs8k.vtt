WEBVTT
Kind: captions
Language: en

00:00:00.530 --> 00:00:03.260
The traditional way of
watching TV is channel surfing.

00:00:03.260 --> 00:00:04.760
You pick up the
remote, lean back,

00:00:04.760 --> 00:00:06.680
and flip through channels
to see what's on.

00:00:06.680 --> 00:00:10.450
On Android TV, app developers
can create TV channels

00:00:10.450 --> 00:00:12.994
so your content can be
part of this experience.

00:00:12.994 --> 00:00:14.660
To the user, your
channels look and feel

00:00:14.660 --> 00:00:16.260
like regular TV channels.

00:00:16.260 --> 00:00:19.290
But behind the scenes, they
stream video off the internet.

00:00:19.290 --> 00:00:21.674
You can create a TV channel
from a video playlist

00:00:21.674 --> 00:00:24.090
and have it appear alongside
other channels in the program

00:00:24.090 --> 00:00:25.030
guide.

00:00:25.030 --> 00:00:26.640
The feature that
makes this possible

00:00:26.640 --> 00:00:28.470
is the TV input framework.

00:00:28.470 --> 00:00:30.140
This defines how
Android TV works

00:00:30.140 --> 00:00:32.689
with channels provided
by a physical TV tuner

00:00:32.689 --> 00:00:36.030
as well as streaming-based
channels provided by an app.

00:00:36.030 --> 00:00:39.130
To create a channel, there are
two main classes to implement.

00:00:39.130 --> 00:00:41.650
The setup activity
communicates with the system

00:00:41.650 --> 00:00:43.980
to provide information
about your channels,

00:00:43.980 --> 00:00:46.020
like what programs
are on and when.

00:00:46.020 --> 00:00:47.910
The TV input service,
on the other hand,

00:00:47.910 --> 00:00:49.812
receives events from the system.

00:00:49.812 --> 00:00:51.770
These events inform you
when the user interacts

00:00:51.770 --> 00:00:53.978
with your channel-- for
example, when they tune to it

00:00:53.978 --> 00:00:55.527
or change the volume.

00:00:55.527 --> 00:00:57.360
The best way to learn
how to build a channel

00:00:57.360 --> 00:00:59.734
is to check out the Sample
app, which you can find linked

00:00:59.734 --> 00:01:01.167
in the description below.

00:01:01.167 --> 00:01:03.250
Install it, and you'll
find it provides a TV input

00:01:03.250 --> 00:01:05.899
source that you can configure
through the Live Channels app.

00:01:05.899 --> 00:01:08.190
This creates a variety of
channels that fully integrate

00:01:08.190 --> 00:01:09.710
with the Program Guide.

00:01:09.710 --> 00:01:11.582
Each of these shows off
a different feature.

00:01:11.582 --> 00:01:13.040
Some stream video
from the internet

00:01:13.040 --> 00:01:14.752
using MPEG Dash or HLS.

00:01:14.752 --> 00:01:16.210
And others show
how to use features

00:01:16.210 --> 00:01:19.056
like closed captioning
in multiple audio tracks.

00:01:19.056 --> 00:01:20.930
Another great feature
the Sample demonstrates

00:01:20.930 --> 00:01:22.270
is called app linking.

00:01:22.270 --> 00:01:24.440
With app linking, you
can provide a direct link

00:01:24.440 --> 00:01:26.400
to your app from your channel.

00:01:26.400 --> 00:01:29.000
And this is a great way
to increase engagement.

00:01:29.000 --> 00:01:31.650
Now, let's take a look at the
implementation at a high level.

00:01:31.650 --> 00:01:32.840
If you have an
existing app, then you

00:01:32.840 --> 00:01:34.760
can add support for
the TV input framework

00:01:34.760 --> 00:01:36.650
into your existing APK.

00:01:36.650 --> 00:01:39.460
As usual, start by updating
your application manifest.

00:01:39.460 --> 00:01:42.610
The first step is to declare
your TV input service,

00:01:42.610 --> 00:01:44.450
add the bind TV
input permission,

00:01:44.450 --> 00:01:46.800
and declare an intent filter
that specifies the TV input

00:01:46.800 --> 00:01:48.067
service.

00:01:48.067 --> 00:01:49.650
Within the service
declaration, you'll

00:01:49.650 --> 00:01:51.844
also need to point to
your setup activity.

00:01:51.844 --> 00:01:54.010
And you can do that by
providing a link to meta data

00:01:54.010 --> 00:01:56.190
in a separate XML resource.

00:01:56.190 --> 00:01:58.130
Once your manifest
is updated, it's

00:01:58.130 --> 00:01:59.830
time to implement your service.

00:01:59.830 --> 00:02:02.760
To do that, you extend the
TV input service class.

00:02:02.760 --> 00:02:04.550
Your service is started
by the system when

00:02:04.550 --> 00:02:05.950
the user tunes to your channel.

00:02:05.950 --> 00:02:08.160
And when that happens,
the onCreateSession method

00:02:08.160 --> 00:02:09.199
is invoked.

00:02:09.199 --> 00:02:11.620
Inside this method, you'll
return a TV input service

00:02:11.620 --> 00:02:12.900
session object.

00:02:12.900 --> 00:02:15.560
This contains callback methods
the system uses to inform you

00:02:15.560 --> 00:02:17.100
of different events,
like when it's

00:02:17.100 --> 00:02:19.680
time to begin playing
back your content.

00:02:19.680 --> 00:02:22.470
The first important
event is onSetSurface.

00:02:22.470 --> 00:02:24.650
This is used to provide
you with an Android surface

00:02:24.650 --> 00:02:26.790
object on which you
can play your content.

00:02:26.790 --> 00:02:28.790
And you can do that using
Android's Media Player

00:02:28.790 --> 00:02:31.039
or ExoPlayer and
other media players.

00:02:31.039 --> 00:02:32.830
And by the way, if
you're new to ExoPlayer,

00:02:32.830 --> 00:02:34.900
it's a Google-maintained,
open-source alternative

00:02:34.900 --> 00:02:37.207
to Android's Media Player API.

00:02:37.207 --> 00:02:39.040
When the user tunes to
one of your channels,

00:02:39.040 --> 00:02:41.050
the onTune callback is invoked.

00:02:41.050 --> 00:02:43.974
This signals it's time to
start playback on that surface.

00:02:43.974 --> 00:02:45.390
There are additional
callbacks you

00:02:45.390 --> 00:02:47.130
can implement to handle
things like closed captions

00:02:47.130 --> 00:02:48.180
and parental controls.

00:02:48.180 --> 00:02:51.382
And you can find more details
about these at this link.

00:02:51.382 --> 00:02:52.840
Now in your set up
activity, you'll

00:02:52.840 --> 00:02:54.550
need to provide
electronic program guide

00:02:54.550 --> 00:02:56.717
data, or EPG for short.

00:02:56.717 --> 00:02:58.800
This is just a list of
your channels and programs.

00:02:58.800 --> 00:03:01.590
It tells the system what
shows are on and when.

00:03:01.590 --> 00:03:03.579
Just like other media
data, Android TV

00:03:03.579 --> 00:03:05.120
keeps channel and
program information

00:03:05.120 --> 00:03:06.602
in content providers.

00:03:06.602 --> 00:03:08.060
Inside your set-up
activity, you'll

00:03:08.060 --> 00:03:10.940
map your program information to
the fields Android TV expects.

00:03:10.940 --> 00:03:13.210
You can find details about
these fields at this link

00:03:13.210 --> 00:03:15.410
and see a complete example
and some utility classes

00:03:15.410 --> 00:03:16.640
in the Sample app.

00:03:16.640 --> 00:03:19.170
Over time, you'll probably need
to update your program data.

00:03:19.170 --> 00:03:20.544
You can do that
in the background

00:03:20.544 --> 00:03:22.727
by using a built-in
solution like Job Scheduler.

00:03:22.727 --> 00:03:24.560
You can register your
job and run the update

00:03:24.560 --> 00:03:27.361
during idle time-- say,
every night at 3:00 AM.

00:03:27.361 --> 00:03:29.610
For more information, check
out the Developer Training

00:03:29.610 --> 00:03:30.590
and the Sample app.

00:03:30.590 --> 00:03:32.130
And visit the
Android TV Community

00:03:32.130 --> 00:03:33.910
to ask questions
and share ideas.

00:03:33.910 --> 00:03:36.326
Thanks very much for watching,
and I'll see you next time.

00:03:36.326 --> 00:03:38.130
[MUSIC PLAYING]

