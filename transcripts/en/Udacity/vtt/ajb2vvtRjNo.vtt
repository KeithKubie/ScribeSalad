WEBVTT
Kind: captions
Language: en

00:00:00.270 --> 00:00:02.360
So now we need to build and
install the application.

00:00:02.360 --> 00:00:03.620
Remember, there are two parts,

00:00:03.620 --> 00:00:06.260
the phone application and
the wearable application.

00:00:06.260 --> 00:00:08.710
Before, I mentioned that
the wearable application

00:00:08.710 --> 00:00:11.280
needs to be embedded into
the phone application.

00:00:11.280 --> 00:00:13.840
While this is required for
distribution through Google Play.

00:00:13.840 --> 00:00:17.550
it's actually possible to build and
deploy them separately for testing.

00:00:17.550 --> 00:00:21.120
So let's walk through how to build and
deploy our new application for testing.

00:00:21.120 --> 00:00:23.780
And then we can discuss
the embedding later.

00:00:23.780 --> 00:00:28.040
You'll notice here there are two
Gradle projects, Mobile and Wear.

00:00:28.040 --> 00:00:30.340
We can build and
install each of these separately.

00:00:30.340 --> 00:00:31.720
So make sure you connect
up your phone now.

00:00:31.720 --> 00:00:35.290
And ensure that the Android Debug Bridge
is working properly.

00:00:35.290 --> 00:00:38.550
Now select the mobile project,
and click the green Play button.

00:00:38.550 --> 00:00:41.110
This tells Gradle to run
the Assemble Debug task.

00:00:41.110 --> 00:00:43.990
Which compiles your code and
makes an APK out of it.

00:00:43.990 --> 00:00:46.990
Android Studio then installs
it to your device or emulator.

00:00:46.990 --> 00:00:49.420
We may need to select
a device to install it to.

00:00:49.420 --> 00:00:51.580
So select that,
in this case, my Nexus 5.

00:00:51.580 --> 00:00:52.950
And click okay to continue.

00:00:54.180 --> 00:00:55.580
After waiting a minute or two.

00:00:55.580 --> 00:00:58.200
You'll see the phone side of your
application running on the phone.

00:00:58.200 --> 00:01:01.210
This is exactly the same as what
you would have done previously

00:01:01.210 --> 00:01:03.090
when you learned Android programming.

00:01:03.090 --> 00:01:04.430
Now to get to the important part,

00:01:04.430 --> 00:01:06.820
building the wearable
side of the application.

00:01:06.820 --> 00:01:10.860
We now need to get your wearable paired
up over ADB just like your phone.

00:01:10.860 --> 00:01:14.270
Most Android Wear devices would come
with a cradle, like one of these.

00:01:14.270 --> 00:01:16.310
That allows you to connect to USB cable.

00:01:16.310 --> 00:01:18.550
So we make sure we've
got those connected up.

00:01:18.550 --> 00:01:21.780
Also, you'll need to enable
developer mode and usb debugging.

00:01:21.780 --> 00:01:27.340
So you need to go to Settings, About,
and tap on the Build number seven times.

00:01:27.340 --> 00:01:30.640
Then you go to developer mode and
enable USB Debugging.

00:01:31.670 --> 00:01:35.010
Your wearable will ask you if you want
to approve the permission request.

00:01:35.010 --> 00:01:37.620
Once this is done,
your wearable will be able to use ADB.

00:01:37.620 --> 00:01:40.930
If you're a Windows user, I've provided
a link in the instructor notes.

00:01:40.930 --> 00:01:44.760
To some documentation that shows how to
set up ADB for Android Wearable Devices.

00:01:44.760 --> 00:01:47.570
If you have a wearable device
that does not have a USB cradle.

00:01:47.570 --> 00:01:49.780
You can also set up ADB over Bluetooth.

00:01:49.780 --> 00:01:52.400
The instructor notes will have a link
that has more information about what you

00:01:52.400 --> 00:01:53.930
need to do that as well.

00:01:53.930 --> 00:01:56.690
Now that we have the wearable
device set up with ADB.

00:01:56.690 --> 00:01:58.550
We need to build the Wearable project.

00:01:58.550 --> 00:02:02.070
Let's select the Wearable Gradle project
and click the green Play button.

00:02:02.070 --> 00:02:04.450
This tells Gradle to run
the assemblydebug task,

00:02:04.450 --> 00:02:07.550
similar as before, but this time for
the Wearable side instead.

00:02:07.550 --> 00:02:10.150
Once it finishes building,
Android Studio will prompt you for

00:02:10.150 --> 00:02:12.300
which device to install the APK to.

00:02:12.300 --> 00:02:14.550
Since there are now two
devices connected by ADB.

00:02:14.550 --> 00:02:16.900
It's very important that you
pick the wearable device.

00:02:16.900 --> 00:02:20.420
If you pick the wrong one,
the app will not execute properly.

00:02:20.420 --> 00:02:22.370
So we select the wearable,
then we click okay.

00:02:22.370 --> 00:02:26.620
Now you'll see the wearable activity
appear on the wearable devices.

00:02:26.620 --> 00:02:28.200
So that's how you can easily test and

00:02:28.200 --> 00:02:31.660
debug phone and wearable apps
from within Android Studio.

00:02:31.660 --> 00:02:35.070
When you're ready to push the APK
to your users via Google Play.

00:02:35.070 --> 00:02:36.980
You'll need to do these
steps a little differently.

00:02:36.980 --> 00:02:38.510
You need to boot a release mode APK.

00:02:38.510 --> 00:02:42.020
Which is different than a debug
APK because it is signed with your

00:02:42.020 --> 00:02:44.630
development keys to
prove you built the APK.

00:02:44.630 --> 00:02:47.310
You can start this process
by using the build menu and

00:02:47.310 --> 00:02:49.220
selecting generate signed APK.

00:02:49.220 --> 00:02:51.730
Which uses the gradle assemble
release task internally.

00:02:51.730 --> 00:02:54.490
And this is how we go
start that process.

00:02:54.490 --> 00:02:57.540
Build, generate signed APK.

00:02:57.540 --> 00:03:00.620
And then you can follow through
by selecting the mobile project.

00:03:00.620 --> 00:03:04.940
And at this point now, you need
to provide all your key details.

00:03:04.940 --> 00:03:07.240
And then continue through
with the rest of the process.

00:03:07.240 --> 00:03:09.420
I'm not going to go through
that process right now though.

00:03:09.420 --> 00:03:11.770
So let's just hit cancel to
get back to where we were.

00:03:11.770 --> 00:03:14.440
If you go to the mobile
build.gradle file, like shown here.

00:03:14.440 --> 00:03:17.720
You can see there's a property
called wearApp at the bottom.

00:03:17.720 --> 00:03:20.030
That references the ware gradle project.

00:03:20.030 --> 00:03:22.980
This task tells gradle to embed
the wearable APK into the phone APK.

00:03:22.980 --> 00:03:26.770
You should note that this
only happens in release mode.

00:03:26.770 --> 00:03:28.900
When we did the testing
earlier in debug mode.

00:03:28.900 --> 00:03:30.310
There was no app embedding.

00:03:30.310 --> 00:03:33.360
So it's important that you test
your final APK in release mode

00:03:33.360 --> 00:03:34.910
by installing it to a phone.

00:03:34.910 --> 00:03:37.250
And checking that it syncs over
to the wearable correctly.

00:03:37.250 --> 00:03:40.090
If you make a mistake with any
of the wearable packaging steps,

00:03:40.090 --> 00:03:42.050
it'll fail to install in the wearable.

00:03:42.050 --> 00:03:44.930
By the way, if you're trying to debug
packaging installation problems.

00:03:44.930 --> 00:03:46.690
You can use adb logcat and search for

00:03:46.690 --> 00:03:50.070
the process WearablePkgInstaller
on the phone and wearable side.

00:03:50.070 --> 00:03:51.870
Which will tell you what the problem is.

00:03:51.870 --> 00:03:52.728
Oh and one more thing.

00:03:52.728 --> 00:03:55.800
I mention build.gradle files, but
did not go into much detail on them.

00:03:55.800 --> 00:03:58.230
For many cases you won't need
to edit these very often.

00:03:58.230 --> 00:03:59.421
But if you want to learn more.

00:03:59.421 --> 00:04:02.547
We have a whole class on Gradle that
teaches you everything you need to know.

00:04:02.547 --> 00:04:04.960
About dealing with dependencies and
Multiple Build Flavors.

00:04:04.960 --> 00:04:06.670
For a link check the instructor notes.

