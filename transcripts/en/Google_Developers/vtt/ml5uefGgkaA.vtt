WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.944
♪ (music) ♪

00:00:07.639 --> 00:00:10.589
If you need to give 
a deeply nested widget access to data

00:00:10.589 --> 00:00:15.009
stored near the top of the widget tree, 
<i>InheritedWidget</i> is a great way to do it.

00:00:15.009 --> 00:00:19.378
You just make your own subclass,
add a field or two for your data,

00:00:19.378 --> 00:00:21.827
and override the <i>updateShouldNotify</i> method,

00:00:21.827 --> 00:00:24.839
which determines whether
dependent widgets should get rebuilt

00:00:24.839 --> 00:00:26.779
if the <i>InheritedWidget</i> is replaced.

00:00:26.779 --> 00:00:29.719
Descendants can inherit from your widget
in their build methods,

00:00:30.249 --> 00:00:31.919
and off they go.

00:00:31.919 --> 00:00:35.718
If the <i>InheritedWidget</i> gets replaced,
<i>updateShouldNotify</i> kicks in

00:00:35.718 --> 00:00:39.090
and decides whether to rebuild
the descendants all at once.

00:00:39.090 --> 00:00:41.378
But what if those widgets 
are expensive to rebuild?

00:00:41.378 --> 00:00:43.849
Wouldn't it be nice if they could depend
on a particular piece

00:00:43.849 --> 00:00:46.480
of that ancestor's data, 
instead of the whole widget?

00:00:46.480 --> 00:00:48.419
For that, there's <i>InheritedModel</i>.

00:00:48.419 --> 00:00:52.298
It works just like <i>InheritedWidget</i>,
but when descendants inherit from it,

00:00:52.298 --> 00:00:56.558
they provide an aspect parameter 
to indicate which fields they care about,

00:00:56.558 --> 00:00:59.579
and <i>InheritedModel</i> has
an additional method you can override

00:00:59.579 --> 00:01:01.688
called <i>updateShouldNotifyDependent</i>.

00:01:01.688 --> 00:01:03.399
It runs once for each descendant

00:01:03.399 --> 00:01:06.079
to determine whether that widget
needs to be rebuilt.

00:01:06.079 --> 00:01:09.269
So your inherited model
can check the aspect for that widget

00:01:09.269 --> 00:01:13.059
and return <i>true</i> to rebuild
or <i>false</i> to keep things as is.

00:01:14.159 --> 00:01:16.250
So whether your widget
needs to store two colors

00:01:16.250 --> 00:01:18.738
or a dozen live network connections,

00:01:18.738 --> 00:01:22.629
<i>InheritedModel</i> can help you rebuild
its descendants only when necessary.

00:01:23.679 --> 00:01:26.987
For more info on <i>InheritedModel</i>
and all the other Flutter widgets,

00:01:26.987 --> 00:01:29.079
head to <i>flutter.io</i>

00:01:29.089 --> 00:01:31.499
♪ (music) ♪

