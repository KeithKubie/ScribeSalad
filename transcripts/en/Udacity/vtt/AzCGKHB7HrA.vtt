WEBVTT
Kind: captions
Language: en

00:00:00.240 --> 00:00:03.270
Let's look at the answer to our lock variable quiz.

00:00:03.270 --> 00:00:06.904
In this code we are using the lock, CountLock and it's

00:00:06.904 --> 00:00:09.610
an array of lock that has elements. So we are

00:00:09.610 --> 00:00:12.530
indexing into the array and getting that one element of the

00:00:12.530 --> 00:00:15.850
array and that's our lock that we lock to access

00:00:15.850 --> 00:00:18.710
count of L. And then we unlock that lock. So the

00:00:18.710 --> 00:00:22.030
question was, what is really this lock? Is it just another

00:00:22.030 --> 00:00:25.442
location in shared memory? So, CountLock of L really is just

00:00:25.442 --> 00:00:27.932
a memory word. Or is it a location in

00:00:27.932 --> 00:00:30.892
some sort of special synchronization memory? So, there is

00:00:30.892 --> 00:00:33.124
a sort of special memory where this array of

00:00:33.124 --> 00:00:36.385
locks is residing. Or is it that locks are special

00:00:36.385 --> 00:00:38.800
variables that we can refer to like this in

00:00:38.800 --> 00:00:43.380
code, but really they don't have memory addresses whatsoever?

00:00:43.380 --> 00:00:46.430
The correct answer here is that a lock is

00:00:46.430 --> 00:00:50.720
just another location in shared memory. So, a lock is

00:00:50.720 --> 00:00:54.750
a variable just like any other variable. It has a memory address.

00:00:54.750 --> 00:00:58.570
We can load to get its value, we can store to change its

00:00:58.570 --> 00:01:02.600
value and so on. So, now we will see what that variable looks

00:01:02.600 --> 00:01:06.130
like and what the lock and unlock functions are supposed to look like.

