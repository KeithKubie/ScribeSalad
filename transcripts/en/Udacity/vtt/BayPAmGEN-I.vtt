WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:02.830
There are three attributes
which work with aria-live to

00:00:02.830 --> 00:00:06.165
fine tune what is communicated to
the user when the live region changes.

00:00:06.165 --> 00:00:11.020
Aria-atomic indicates whether the entire
region should be considered as a whole

00:00:11.020 --> 00:00:13.010
when communicating updates.

00:00:13.010 --> 00:00:16.502
For example, if we couldn't use a date
input, we might want to create a date

00:00:16.502 --> 00:00:19.576
widget consisting of a stepper for
each of day, month, and year.

00:00:19.576 --> 00:00:21.895
With aria-live=polite and

00:00:21.895 --> 00:00:25.450
aria-atomic=true on
the containment node.

00:00:25.450 --> 00:00:29.110
If the user used the month stepper
to change the month value alone,

00:00:29.110 --> 00:00:32.000
the full contents of the date
widget would be read out.

00:00:32.000 --> 00:00:36.670
The values for aria-atomic may be true
or false, with false being the default.

00:00:36.670 --> 00:00:39.300
This means that you don't
need to explicitly specify

00:00:39.300 --> 00:00:40.365
when aria-atomic is false.

00:00:40.365 --> 00:00:45.830
Aria-relevant indicates what types of
changes should be presented to the user.

00:00:45.830 --> 00:00:48.390
There are three distinct options
which may be used separately or

00:00:48.390 --> 00:00:49.540
as a token list.

00:00:49.540 --> 00:00:51.120
Additions, removals, and text.

00:00:52.490 --> 00:00:55.210
An aria-relevant value of additions

00:00:55.210 --> 00:00:59.180
means that any element being added
to the live region is significant.

00:00:59.180 --> 00:01:02.210
For example, appending a span to

00:01:02.210 --> 00:01:06.120
our log of chat messages would mean that
the span would be announced to the user.

00:01:06.120 --> 00:01:08.840
Assuming that aria-atomic was false.

00:01:08.840 --> 00:01:12.980
An aria relevant value of text implies
that text content being added to

00:01:12.980 --> 00:01:15.550
any descendant node is
relevant regardless

00:01:15.550 --> 00:01:18.230
of whether a new element
is actually added.

00:01:18.230 --> 00:01:22.850
For example, changing the text
content of our alert bar would trigger

00:01:22.850 --> 00:01:26.970
an announcement, even though we haven't
actually added a descendant element.

00:01:26.970 --> 00:01:30.870
And aria-relevant value of removals
implies that removing any text or

00:01:30.870 --> 00:01:33.730
any descendant element should
trigger an announcement.

00:01:33.730 --> 00:01:34.875
The default value for

00:01:34.875 --> 00:01:39.430
aria-relevant is additions text, meaning
that adding either a descendant element,

00:01:39.430 --> 00:01:43.150
or adding text content through some
other mechanism is significant.

00:01:43.150 --> 00:01:44.890
This is the most common situation so

00:01:44.890 --> 00:01:48.660
it's rarely necessary to specify
aria-relevant explicitly.

00:01:48.660 --> 00:01:52.670
There's also an all option which is
shorthand for additions removals text.

00:01:52.670 --> 00:01:56.040
Meaning that literally any
change is significant.

00:01:56.040 --> 00:01:59.080
Finally, aria-busy let's us
notify a specific technology

00:01:59.080 --> 00:02:02.030
that it should temporarily
ignore changes to this element,

00:02:02.030 --> 00:02:05.960
such as when things alerting say
after a temporary connectivity lapse.

00:02:05.960 --> 00:02:09.320
Once everything is back in place,
aria-busy should be set to false.

