WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.579 align:start position:0%
 
all<00:00:00.420><c> right</c><00:00:00.690><c> I</c><00:00:00.870><c> think</c><00:00:01.020><c> there's</c><00:00:01.350><c> been</c><00:00:01.530><c> an</c>

00:00:01.579 --> 00:00:01.589 align:start position:0%
all right I think there's been an
 

00:00:01.589 --> 00:00:03.770 align:start position:0%
all right I think there's been an
exciting<00:00:01.800><c> video</c><00:00:02.280><c> in</c><00:00:02.550><c> this</c><00:00:02.760><c> video</c><00:00:03.090><c> you</c><00:00:03.179><c> see</c><00:00:03.570><c> how</c>

00:00:03.770 --> 00:00:03.780 align:start position:0%
exciting video in this video you see how
 

00:00:03.780 --> 00:00:06.230 align:start position:0%
exciting video in this video you see how
to<00:00:03.840><c> implement</c><00:00:04.290><c> gradient</c><00:00:04.770><c> descent</c><00:00:05.370><c> for</c><00:00:06.029><c> your</c>

00:00:06.230 --> 00:00:06.240 align:start position:0%
to implement gradient descent for your
 

00:00:06.240 --> 00:00:08.419 align:start position:0%
to implement gradient descent for your
neural<00:00:06.600><c> network</c><00:00:06.629><c> with</c><00:00:07.230><c> one</c><00:00:07.259><c> hidden</c><00:00:07.680><c> layer</c><00:00:07.830><c> in</c>

00:00:08.419 --> 00:00:08.429 align:start position:0%
neural network with one hidden layer in
 

00:00:08.429 --> 00:00:10.520 align:start position:0%
neural network with one hidden layer in
this<00:00:08.910><c> video</c><00:00:09.240><c> I'm</c><00:00:09.300><c> going</c><00:00:09.450><c> to</c><00:00:09.510><c> just</c><00:00:09.929><c> give</c><00:00:10.290><c> you</c>

00:00:10.520 --> 00:00:10.530 align:start position:0%
this video I'm going to just give you
 

00:00:10.530 --> 00:00:12.799 align:start position:0%
this video I'm going to just give you
the<00:00:10.800><c> equations</c><00:00:11.370><c> you</c><00:00:11.580><c> need</c><00:00:11.759><c> to</c><00:00:11.940><c> implement</c><00:00:12.300><c> in</c>

00:00:12.799 --> 00:00:12.809 align:start position:0%
the equations you need to implement in
 

00:00:12.809 --> 00:00:14.810 align:start position:0%
the equations you need to implement in
order<00:00:12.929><c> to</c><00:00:13.259><c> get</c><00:00:13.410><c> that</c><00:00:13.620><c> propagation</c><00:00:14.370><c> of</c><00:00:14.519><c> the</c><00:00:14.639><c> jet</c>

00:00:14.810 --> 00:00:14.820 align:start position:0%
order to get that propagation of the jet
 

00:00:14.820 --> 00:00:17.029 align:start position:0%
order to get that propagation of the jet
gradient<00:00:15.179><c> descent</c><00:00:15.450><c> working</c><00:00:15.870><c> and</c><00:00:16.080><c> then</c><00:00:16.770><c> in</c><00:00:16.920><c> the</c>

00:00:17.029 --> 00:00:17.039 align:start position:0%
gradient descent working and then in the
 

00:00:17.039 --> 00:00:19.429 align:start position:0%
gradient descent working and then in the
video<00:00:17.310><c> after</c><00:00:17.520><c> this</c><00:00:17.880><c> one</c><00:00:18.119><c> or</c><00:00:18.869><c> give</c><00:00:19.050><c> some</c><00:00:19.289><c> more</c>

00:00:19.429 --> 00:00:19.439 align:start position:0%
video after this one or give some more
 

00:00:19.439 --> 00:00:21.500 align:start position:0%
video after this one or give some more
intuition<00:00:19.890><c> about</c><00:00:20.220><c> why</c><00:00:20.550><c> these</c><00:00:21.119><c> particular</c>

00:00:21.500 --> 00:00:21.510 align:start position:0%
intuition about why these particular
 

00:00:21.510 --> 00:00:24.140 align:start position:0%
intuition about why these particular
equations<00:00:21.689><c> are</c><00:00:22.350><c> the</c><00:00:22.710><c> accurate</c><00:00:23.490><c> equations</c><00:00:23.970><c> or</c>

00:00:24.140 --> 00:00:24.150 align:start position:0%
equations are the accurate equations or
 

00:00:24.150 --> 00:00:26.060 align:start position:0%
equations are the accurate equations or
the<00:00:24.210><c> correct</c><00:00:24.449><c> equations</c><00:00:24.960><c> for</c><00:00:25.470><c> computing</c><00:00:25.949><c> the</c>

00:00:26.060 --> 00:00:26.070 align:start position:0%
the correct equations for computing the
 

00:00:26.070 --> 00:00:27.620 align:start position:0%
the correct equations for computing the
gradients<00:00:26.519><c> you</c><00:00:26.640><c> need</c><00:00:26.820><c> for</c><00:00:27.269><c> your</c><00:00:27.359><c> neural</c>

00:00:27.620 --> 00:00:27.630 align:start position:0%
gradients you need for your neural
 

00:00:27.630 --> 00:00:30.050 align:start position:0%
gradients you need for your neural
network<00:00:28.019><c> so</c><00:00:28.890><c> your</c><00:00:29.160><c> neural</c><00:00:29.429><c> network</c><00:00:29.460><c> with</c><00:00:30.000><c> a</c>

00:00:30.050 --> 00:00:30.060 align:start position:0%
network so your neural network with a
 

00:00:30.060 --> 00:00:32.510 align:start position:0%
network so your neural network with a
single<00:00:30.090><c> hidden</c><00:00:30.630><c> layer</c><00:00:30.779><c> for</c><00:00:31.199><c> now</c><00:00:31.279><c> will</c><00:00:32.279><c> have</c>

00:00:32.510 --> 00:00:32.520 align:start position:0%
single hidden layer for now will have
 

00:00:32.520 --> 00:00:39.920 align:start position:0%
single hidden layer for now will have
parameters<00:00:33.420><c> W</c><00:00:33.899><c> 1</c><00:00:34.550><c> V</c><00:00:35.550><c> 1</c><00:00:36.530><c> W</c><00:00:37.530><c> 2</c><00:00:37.590><c> and</c><00:00:37.980><c> B</c><00:00:38.610><c> 2</c><00:00:38.640><c> and</c><00:00:39.059><c> so</c><00:00:39.690><c> as</c>

00:00:39.920 --> 00:00:39.930 align:start position:0%
parameters W 1 V 1 W 2 and B 2 and so as
 

00:00:39.930 --> 00:00:44.750 align:start position:0%
parameters W 1 V 1 W 2 and B 2 and so as
a<00:00:39.960><c> reminder</c><00:00:40.350><c> if</c><00:00:40.829><c> you</c><00:00:41.100><c> have</c><00:00:41.129><c> an</c><00:00:41.820><c> X</c><00:00:43.760><c> alternative</c>

00:00:44.750 --> 00:00:44.760 align:start position:0%
a reminder if you have an X alternative
 

00:00:44.760 --> 00:00:50.389 align:start position:0%
a reminder if you have an X alternative
the<00:00:44.969><c> UM</c><00:00:45.210><c> n</c><00:00:46.140><c> 0</c><00:00:46.680><c> input</c><00:00:46.950><c> features</c><00:00:47.520><c> and</c><00:00:47.899><c> N</c><00:00:48.899><c> 1</c><00:00:49.440><c> hidden</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
the UM n 0 input features and N 1 hidden
 

00:00:50.399 --> 00:00:56.660 align:start position:0%
the UM n 0 input features and N 1 hidden
units<00:00:50.789><c> and</c><00:00:52.010><c> n</c><00:00:53.360><c> 2</c><00:00:54.360><c> output</c><00:00:54.960><c> units</c><00:00:55.350><c> in</c><00:00:56.190><c> our</c>

00:00:56.660 --> 00:00:56.670 align:start position:0%
units and n 2 output units in our
 

00:00:56.670 --> 00:00:59.139 align:start position:0%
units and n 2 output units in our
example<00:00:57.120><c> so</c><00:00:57.329><c> following</c><00:00:57.719><c> it</c><00:00:57.930><c> n</c><00:00:58.109><c> 2</c><00:00:58.320><c> equals</c><00:00:58.829><c> 1</c>

00:00:59.139 --> 00:00:59.149 align:start position:0%
example so following it n 2 equals 1
 

00:00:59.149 --> 00:01:06.500 align:start position:0%
example so following it n 2 equals 1
then<00:01:00.149><c> the</c><00:01:00.359><c> matrix</c><00:01:00.539><c> W</c><00:01:01.500><c> 1</c><00:01:01.710><c> will</c><00:01:02.100><c> be</c><00:01:02.340><c> N</c><00:01:02.690><c> 1</c><00:01:03.690><c> by</c><00:01:04.589><c> n</c><00:01:04.830><c> 0</c><00:01:05.510><c> B</c>

00:01:06.500 --> 00:01:06.510 align:start position:0%
then the matrix W 1 will be N 1 by n 0 B
 

00:01:06.510 --> 00:01:08.870 align:start position:0%
then the matrix W 1 will be N 1 by n 0 B
1<00:01:06.540><c> will</c><00:01:07.049><c> be</c><00:01:07.170><c> an</c><00:01:07.260><c> N</c><00:01:07.470><c> 1</c><00:01:07.710><c> dimensional</c><00:01:08.220><c> vector</c><00:01:08.280><c> so</c>

00:01:08.870 --> 00:01:08.880 align:start position:0%
1 will be an N 1 dimensional vector so
 

00:01:08.880 --> 00:01:11.240 align:start position:0%
1 will be an N 1 dimensional vector so
you<00:01:08.970><c> can</c><00:01:09.090><c> write</c><00:01:09.270><c> down</c><00:01:09.420><c> as</c><00:01:09.630><c> a</c><00:01:09.750><c> 10</c><00:01:09.930><c> 1</c><00:01:10.200><c> by</c><00:01:11.010><c> 1</c>

00:01:11.240 --> 00:01:11.250 align:start position:0%
you can write down as a 10 1 by 1
 

00:01:11.250 --> 00:01:13.340 align:start position:0%
you can write down as a 10 1 by 1
dimensional<00:01:11.760><c> matrix</c><00:01:12.360><c> really</c><00:01:12.960><c> a</c><00:01:12.990><c> column</c>

00:01:13.340 --> 00:01:13.350 align:start position:0%
dimensional matrix really a column
 

00:01:13.350 --> 00:01:16.490 align:start position:0%
dimensional matrix really a column
vector<00:01:13.380><c> the</c><00:01:14.340><c> dimensions</c><00:01:14.850><c> of</c><00:01:15.030><c> W</c><00:01:15.390><c> 2</c><00:01:15.570><c> will</c><00:01:15.840><c> be</c><00:01:15.960><c> n</c><00:01:16.140><c> 2</c>

00:01:16.490 --> 00:01:16.500 align:start position:0%
vector the dimensions of W 2 will be n 2
 

00:01:16.500 --> 00:01:20.830 align:start position:0%
vector the dimensions of W 2 will be n 2
by<00:01:17.369><c> N</c><00:01:17.400><c> 1</c><00:01:17.939><c> and</c><00:01:18.210><c> the</c><00:01:18.869><c> dimension</c><00:01:19.229><c> of</c><00:01:19.290><c> B</c><00:01:19.500><c> 2</c><00:01:19.740><c> will</c><00:01:20.159><c> be</c>

00:01:20.830 --> 00:01:20.840 align:start position:0%
by N 1 and the dimension of B 2 will be
 

00:01:20.840 --> 00:01:26.749 align:start position:0%
by N 1 and the dimension of B 2 will be
n<00:01:22.280><c> 2</c><00:01:23.810><c> by</c><00:01:24.810><c> 1</c><00:01:25.080><c> right</c><00:01:25.740><c> where</c><00:01:25.979><c> again</c><00:01:26.189><c> so</c><00:01:26.430><c> far</c><00:01:26.640><c> we've</c>

00:01:26.749 --> 00:01:26.759 align:start position:0%
n 2 by 1 right where again so far we've
 

00:01:26.759 --> 00:01:28.609 align:start position:0%
n 2 by 1 right where again so far we've
only<00:01:26.820><c> seen</c><00:01:27.150><c> examples</c><00:01:27.479><c> where</c><00:01:27.750><c> n</c><00:01:27.960><c> 2</c><00:01:28.200><c> is</c><00:01:28.320><c> equal</c><00:01:28.409><c> to</c>

00:01:28.609 --> 00:01:28.619 align:start position:0%
only seen examples where n 2 is equal to
 

00:01:28.619 --> 00:01:30.800 align:start position:0%
only seen examples where n 2 is equal to
one<00:01:28.799><c> where</c><00:01:28.979><c> you</c><00:01:29.070><c> have</c><00:01:29.159><c> just</c><00:01:29.220><c> one</c><00:01:29.579><c> a</c><00:01:30.390><c> single</c>

00:01:30.800 --> 00:01:30.810 align:start position:0%
one where you have just one a single
 

00:01:30.810 --> 00:01:36.920 align:start position:0%
one where you have just one a single
hidden<00:01:31.079><c> unit</c><00:01:31.970><c> so</c><00:01:33.229><c> you</c><00:01:34.229><c> also</c><00:01:34.500><c> have</c><00:01:35.130><c> a</c><00:01:35.930><c> cost</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
hidden unit so you also have a cost
 

00:01:36.930 --> 00:01:39.560 align:start position:0%
hidden unit so you also have a cost
function<00:01:37.460><c> for</c><00:01:38.460><c> a</c><00:01:38.490><c> neural</c><00:01:38.790><c> network</c><00:01:38.939><c> and</c><00:01:39.329><c> for</c>

00:01:39.560 --> 00:01:39.570 align:start position:0%
function for a neural network and for
 

00:01:39.570 --> 00:01:41.359 align:start position:0%
function for a neural network and for
now<00:01:39.659><c> I'm</c><00:01:39.960><c> just</c><00:01:39.990><c> going</c><00:01:40.320><c> to</c><00:01:40.409><c> assume</c><00:01:40.680><c> that</c><00:01:40.770><c> you're</c>

00:01:41.359 --> 00:01:41.369 align:start position:0%
now I'm just going to assume that you're
 

00:01:41.369 --> 00:01:44.210 align:start position:0%
now I'm just going to assume that you're
doing<00:01:41.700><c> binary</c><00:01:41.939><c> classification</c><00:01:42.829><c> so</c><00:01:43.829><c> in</c><00:01:44.070><c> that</c>

00:01:44.210 --> 00:01:44.220 align:start position:0%
doing binary classification so in that
 

00:01:44.220 --> 00:01:49.100 align:start position:0%
doing binary classification so in that
case<00:01:44.520><c> the</c><00:01:45.390><c> cost</c><00:01:45.750><c> of</c><00:01:46.140><c> your</c><00:01:46.670><c> parameters</c><00:01:48.110><c> as</c>

00:01:49.100 --> 00:01:49.110 align:start position:0%
case the cost of your parameters as
 

00:01:49.110 --> 00:01:51.760 align:start position:0%
case the cost of your parameters as
follows<00:01:49.590><c> is</c><00:01:49.860><c> going</c><00:01:50.070><c> to</c><00:01:50.189><c> be</c><00:01:50.280><c> 1</c><00:01:50.490><c> over</c><00:01:50.700><c> m</c><00:01:50.880><c> of</c><00:01:51.210><c> the</c>

00:01:51.760 --> 00:01:51.770 align:start position:0%
follows is going to be 1 over m of the
 

00:01:51.770 --> 00:01:57.080 align:start position:0%
follows is going to be 1 over m of the
average<00:01:52.770><c> of</c><00:01:53.210><c> that</c><00:01:54.770><c> loss</c><00:01:55.770><c> function</c><00:01:56.280><c> and</c><00:01:56.460><c> so</c><00:01:56.790><c> L</c>

00:01:57.080 --> 00:01:57.090 align:start position:0%
average of that loss function and so L
 

00:01:57.090 --> 00:01:59.959 align:start position:0%
average of that loss function and so L
here<00:01:57.509><c> is</c><00:01:57.829><c> the</c><00:01:58.829><c> loss</c><00:01:59.070><c> when</c><00:01:59.399><c> your</c><00:01:59.579><c> new</c><00:01:59.729><c> network</c>

00:01:59.959 --> 00:01:59.969 align:start position:0%
here is the loss when your new network
 

00:01:59.969 --> 00:02:03.020 align:start position:0%
here is the loss when your new network
predicts<00:02:00.780><c> y</c><00:02:01.290><c> hat</c><00:02:01.560><c> all</c><00:02:02.219><c> right</c><00:02:02.280><c> this</c><00:02:02.640><c> is</c><00:02:02.759><c> really</c>

00:02:03.020 --> 00:02:03.030 align:start position:0%
predicts y hat all right this is really
 

00:02:03.030 --> 00:02:05.899 align:start position:0%
predicts y hat all right this is really
a<00:02:03.060><c> a</c><00:02:03.420><c> to</c><00:02:03.860><c> when</c><00:02:04.860><c> the</c><00:02:04.950><c> ground</c><00:02:05.189><c> should</c><00:02:05.399><c> label</c><00:02:05.579><c> is</c><00:02:05.820><c> e</c>

00:02:05.899 --> 00:02:05.909 align:start position:0%
a a to when the ground should label is e
 

00:02:05.909 --> 00:02:07.639 align:start position:0%
a a to when the ground should label is e
to<00:02:06.000><c> the</c><00:02:06.030><c> Y</c><00:02:06.240><c> and</c><00:02:06.270><c> if</c><00:02:07.049><c> you're</c><00:02:07.259><c> doing</c><00:02:07.469><c> binary</c>

00:02:07.639 --> 00:02:07.649 align:start position:0%
to the Y and if you're doing binary
 

00:02:07.649 --> 00:02:09.499 align:start position:0%
to the Y and if you're doing binary
classification<00:02:08.069><c> the</c><00:02:08.610><c> loss</c><00:02:08.789><c> function</c><00:02:09.000><c> can</c><00:02:09.479><c> be</c>

00:02:09.499 --> 00:02:09.509 align:start position:0%
classification the loss function can be
 

00:02:09.509 --> 00:02:12.500 align:start position:0%
classification the loss function can be
exactly<00:02:09.989><c> what</c><00:02:10.349><c> you</c><00:02:10.470><c> use</c><00:02:10.709><c> for</c><00:02:11.150><c> logistic</c>

00:02:12.500 --> 00:02:12.510 align:start position:0%
exactly what you use for logistic
 

00:02:12.510 --> 00:02:15.020 align:start position:0%
exactly what you use for logistic
earlier<00:02:12.900><c> so</c><00:02:13.620><c> to</c><00:02:13.680><c> crane</c><00:02:14.159><c> the</c><00:02:14.280><c> parameters</c><00:02:14.790><c> your</c>

00:02:15.020 --> 00:02:15.030 align:start position:0%
earlier so to crane the parameters your
 

00:02:15.030 --> 00:02:18.410 align:start position:0%
earlier so to crane the parameters your
algorithms<00:02:15.569><c> you</c><00:02:16.170><c> need</c><00:02:16.379><c> to</c><00:02:16.560><c> perform</c><00:02:17.420><c> gradient</c>

00:02:18.410 --> 00:02:18.420 align:start position:0%
algorithms you need to perform gradient
 

00:02:18.420 --> 00:02:21.589 align:start position:0%
algorithms you need to perform gradient
descent<00:02:19.519><c> when</c><00:02:20.519><c> training</c><00:02:20.760><c> your</c><00:02:20.909><c> network</c><00:02:21.420><c> is</c>

00:02:21.589 --> 00:02:21.599 align:start position:0%
descent when training your network is
 

00:02:21.599 --> 00:02:23.750 align:start position:0%
descent when training your network is
important<00:02:22.140><c> to</c><00:02:22.319><c> initialize</c><00:02:22.920><c> the</c><00:02:23.189><c> parameters</c>

00:02:23.750 --> 00:02:23.760 align:start position:0%
important to initialize the parameters
 

00:02:23.760 --> 00:02:25.910 align:start position:0%
important to initialize the parameters
randomly<00:02:24.420><c> rather</c><00:02:24.810><c> than</c><00:02:25.079><c> to</c><00:02:25.230><c> all</c><00:02:25.379><c> the</c><00:02:25.590><c> URLs</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
randomly rather than to all the URLs
 

00:02:25.920 --> 00:02:28.130 align:start position:0%
randomly rather than to all the URLs
will<00:02:26.819><c> say</c><00:02:26.970><c> later</c><00:02:27.150><c> why</c><00:02:27.569><c> that's</c><00:02:27.810><c> the</c><00:02:27.930><c> case</c><00:02:27.959><c> but</c>

00:02:28.130 --> 00:02:28.140 align:start position:0%
will say later why that's the case but
 

00:02:28.140 --> 00:02:30.020 align:start position:0%
will say later why that's the case but
after<00:02:28.829><c> initializing</c><00:02:29.220><c> the</c><00:02:29.519><c> parameter</c><00:02:29.909><c> to</c>

00:02:30.020 --> 00:02:30.030 align:start position:0%
after initializing the parameter to
 

00:02:30.030 --> 00:02:32.330 align:start position:0%
after initializing the parameter to
something<00:02:30.450><c> each</c><00:02:31.200><c> loop</c><00:02:31.470><c> or</c><00:02:31.680><c> gradient</c><00:02:31.890><c> descent</c>

00:02:32.330 --> 00:02:32.340 align:start position:0%
something each loop or gradient descent
 

00:02:32.340 --> 00:02:34.130 align:start position:0%
something each loop or gradient descent
would<00:02:32.610><c> compute</c><00:02:33.299><c> the</c><00:02:33.450><c> predictions</c>

00:02:34.130 --> 00:02:34.140 align:start position:0%
would compute the predictions
 

00:02:34.140 --> 00:02:36.770 align:start position:0%
would compute the predictions
so<00:02:35.099><c> you</c><00:02:35.190><c> basically</c><00:02:35.340><c> compute</c><00:02:35.940><c> you</c><00:02:36.239><c> know</c><00:02:36.329><c> y</c><00:02:36.540><c> hat</c>

00:02:36.770 --> 00:02:36.780 align:start position:0%
so you basically compute you know y hat
 

00:02:36.780 --> 00:02:42.349 align:start position:0%
so you basically compute you know y hat
I<00:02:37.790><c> for</c><00:02:38.790><c> I</c><00:02:38.819><c> equals</c><00:02:39.269><c> 1</c><00:02:39.450><c> through</c><00:02:39.480><c> m</c><00:02:40.099><c> say</c><00:02:41.099><c> and</c><00:02:41.400><c> then</c>

00:02:42.349 --> 00:02:42.359 align:start position:0%
I for I equals 1 through m say and then
 

00:02:42.359 --> 00:02:44.479 align:start position:0%
I for I equals 1 through m say and then
you<00:02:42.989><c> need</c><00:02:43.140><c> to</c><00:02:43.170><c> compute</c><00:02:43.680><c> the</c><00:02:43.769><c> derivative</c><00:02:44.310><c> so</c>

00:02:44.479 --> 00:02:44.489 align:start position:0%
you need to compute the derivative so
 

00:02:44.489 --> 00:02:49.460 align:start position:0%
you need to compute the derivative so
you<00:02:44.670><c> need</c><00:02:44.909><c> to</c><00:02:45.030><c> compute</c><00:02:45.829><c> DW</c><00:02:46.829><c> 1</c><00:02:47.700><c> and</c><00:02:48.000><c> that's</c><00:02:48.900><c> this</c>

00:02:49.460 --> 00:02:49.470 align:start position:0%
you need to compute DW 1 and that's this
 

00:02:49.470 --> 00:02:51.410 align:start position:0%
you need to compute DW 1 and that's this
is<00:02:49.650><c> a</c><00:02:49.769><c> derivative</c><00:02:50.280><c> of</c><00:02:50.849><c> the</c><00:02:51.060><c> cost</c><00:02:51.239><c> function</c>

00:02:51.410 --> 00:02:51.420 align:start position:0%
is a derivative of the cost function
 

00:02:51.420 --> 00:02:54.349 align:start position:0%
is a derivative of the cost function
with<00:02:52.409><c> respect</c><00:02:52.799><c> to</c><00:02:52.859><c> the</c><00:02:53.010><c> parameter</c><00:02:53.459><c> w1</c><00:02:53.970><c> you</c>

00:02:54.349 --> 00:02:54.359 align:start position:0%
with respect to the parameter w1 you
 

00:02:54.359 --> 00:02:56.240 align:start position:0%
with respect to the parameter w1 you
need<00:02:54.480><c> to</c><00:02:54.540><c> compute</c><00:02:54.930><c> another</c><00:02:55.620><c> variable</c><00:02:56.220><c> which</c>

00:02:56.240 --> 00:02:56.250 align:start position:0%
need to compute another variable which
 

00:02:56.250 --> 00:02:59.210 align:start position:0%
need to compute another variable which
is<00:02:56.549><c> going</c><00:02:56.579><c> to</c><00:02:56.790><c> call</c><00:02:56.970><c> B</c><00:02:57.299><c> b1</c><00:02:57.739><c> which</c><00:02:58.739><c> is</c><00:02:58.769><c> the</c>

00:02:59.210 --> 00:02:59.220 align:start position:0%
is going to call B b1 which is the
 

00:02:59.220 --> 00:03:00.860 align:start position:0%
is going to call B b1 which is the
derivative<00:02:59.819><c> or</c><00:03:00.030><c> the</c><00:03:00.060><c> slope</c><00:03:00.150><c> of</c><00:03:00.569><c> your</c><00:03:00.629><c> cost</c>

00:03:00.860 --> 00:03:00.870 align:start position:0%
derivative or the slope of your cost
 

00:03:00.870 --> 00:03:04.129 align:start position:0%
derivative or the slope of your cost
function<00:03:01.319><c> with</c><00:03:02.129><c> respect</c><00:03:02.549><c> to</c><00:03:02.760><c> the</c><00:03:03.269><c> variable</c><00:03:03.750><c> B</c>

00:03:04.129 --> 00:03:04.139 align:start position:0%
function with respect to the variable B
 

00:03:04.139 --> 00:03:07.339 align:start position:0%
function with respect to the variable B
1<00:03:04.739><c> and</c><00:03:05.040><c> so</c><00:03:05.849><c> on</c><00:03:05.879><c> similarly</c><00:03:06.389><c> for</c><00:03:06.959><c> the</c><00:03:07.230><c> other</c>

00:03:07.339 --> 00:03:07.349 align:start position:0%
1 and so on similarly for the other
 

00:03:07.349 --> 00:03:10.430 align:start position:0%
1 and so on similarly for the other
parameters<00:03:07.889><c> W</c><00:03:08.430><c> 2</c><00:03:08.730><c> and</c><00:03:08.879><c> B</c><00:03:09.030><c> 2</c><00:03:09.060><c> and</c><00:03:09.540><c> then</c><00:03:09.959><c> finally</c>

00:03:10.430 --> 00:03:10.440 align:start position:0%
parameters W 2 and B 2 and then finally
 

00:03:10.440 --> 00:03:12.619 align:start position:0%
parameters W 2 and B 2 and then finally
the<00:03:10.680><c> gradient</c><00:03:11.069><c> descent</c><00:03:11.220><c> update</c><00:03:11.609><c> would</c><00:03:12.209><c> be</c><00:03:12.420><c> to</c>

00:03:12.619 --> 00:03:12.629 align:start position:0%
the gradient descent update would be to
 

00:03:12.629 --> 00:03:17.869 align:start position:0%
the gradient descent update would be to
update<00:03:12.870><c> W</c><00:03:13.530><c> 1</c><00:03:13.920><c> as</c><00:03:14.220><c> W</c><00:03:15.030><c> 1</c><00:03:15.269><c> minus</c><00:03:16.459><c> alpha</c><00:03:17.459><c> the</c>

00:03:17.869 --> 00:03:17.879 align:start position:0%
update W 1 as W 1 minus alpha the
 

00:03:17.879 --> 00:03:23.119 align:start position:0%
update W 1 as W 1 minus alpha the
learning<00:03:18.209><c> rate</c><00:03:18.359><c> times</c><00:03:18.389><c> d</c><00:03:19.310><c> w1</c><00:03:20.989><c> b1</c><00:03:21.989><c> gets</c><00:03:22.709><c> updated</c>

00:03:23.119 --> 00:03:23.129 align:start position:0%
learning rate times d w1 b1 gets updated
 

00:03:23.129 --> 00:03:27.500 align:start position:0%
learning rate times d w1 b1 gets updated
as<00:03:23.780><c> b1</c><00:03:24.780><c> minus</c><00:03:25.470><c> the</c><00:03:25.650><c> learning</c><00:03:25.980><c> rate</c><00:03:26.129><c> times</c><00:03:26.250><c> D</c><00:03:26.760><c> b1</c>

00:03:27.500 --> 00:03:27.510 align:start position:0%
as b1 minus the learning rate times D b1
 

00:03:27.510 --> 00:03:32.020 align:start position:0%
as b1 minus the learning rate times D b1
and<00:03:27.930><c> similarly</c><00:03:28.650><c> for</c><00:03:29.099><c> W</c><00:03:30.060><c> 2</c><00:03:30.239><c> and</c><00:03:30.510><c> B</c><00:03:31.379><c> 2</c><00:03:31.410><c> and</c>

00:03:32.020 --> 00:03:32.030 align:start position:0%
and similarly for W 2 and B 2 and
 

00:03:32.030 --> 00:03:34.729 align:start position:0%
and similarly for W 2 and B 2 and
sometimes<00:03:33.030><c> I</c><00:03:33.180><c> use</c><00:03:33.419><c> colon</c><00:03:34.139><c> equals</c><00:03:34.530><c> and</c>

00:03:34.729 --> 00:03:34.739 align:start position:0%
sometimes I use colon equals and
 

00:03:34.739 --> 00:03:36.319 align:start position:0%
sometimes I use colon equals and
sometimes<00:03:35.040><c> equals</c><00:03:35.400><c> as</c><00:03:35.609><c> either</c><00:03:35.790><c> either</c><00:03:36.180><c> the</c>

00:03:36.319 --> 00:03:36.329 align:start position:0%
sometimes equals as either either the
 

00:03:36.329 --> 00:03:38.479 align:start position:0%
sometimes equals as either either the
notation<00:03:36.720><c> works</c><00:03:36.930><c> fine</c><00:03:37.139><c> and</c><00:03:37.500><c> so</c><00:03:38.010><c> this</c><00:03:38.220><c> would</c><00:03:38.370><c> be</c>

00:03:38.479 --> 00:03:38.489 align:start position:0%
notation works fine and so this would be
 

00:03:38.489 --> 00:03:40.819 align:start position:0%
notation works fine and so this would be
one<00:03:38.699><c> iteration</c><00:03:39.359><c> of</c><00:03:39.569><c> gradient</c><00:03:39.989><c> descent</c><00:03:40.379><c> and</c>

00:03:40.819 --> 00:03:40.829 align:start position:0%
one iteration of gradient descent and
 

00:03:40.829 --> 00:03:42.500 align:start position:0%
one iteration of gradient descent and
then<00:03:41.040><c> you</c><00:03:41.160><c> repeat</c><00:03:41.489><c> this</c><00:03:41.730><c> some</c><00:03:42.180><c> number</c><00:03:42.419><c> of</c>

00:03:42.500 --> 00:03:42.510 align:start position:0%
then you repeat this some number of
 

00:03:42.510 --> 00:03:44.270 align:start position:0%
then you repeat this some number of
times<00:03:42.750><c> until</c><00:03:43.049><c> your</c><00:03:43.319><c> parameters</c><00:03:43.889><c> look</c><00:03:44.129><c> like</c>

00:03:44.270 --> 00:03:44.280 align:start position:0%
times until your parameters look like
 

00:03:44.280 --> 00:03:46.069 align:start position:0%
times until your parameters look like
they're<00:03:44.400><c> converging</c><00:03:44.879><c> so</c><00:03:45.239><c> in</c><00:03:45.359><c> previous</c><00:03:45.720><c> videos</c>

00:03:46.069 --> 00:03:46.079 align:start position:0%
they're converging so in previous videos
 

00:03:46.079 --> 00:03:47.839 align:start position:0%
they're converging so in previous videos
we<00:03:46.109><c> talked</c><00:03:46.620><c> about</c><00:03:46.739><c> how</c><00:03:47.160><c> to</c><00:03:47.220><c> compute</c>

00:03:47.839 --> 00:03:47.849 align:start position:0%
we talked about how to compute
 

00:03:47.849 --> 00:03:50.089 align:start position:0%
we talked about how to compute
predictions<00:03:48.750><c> how</c><00:03:49.139><c> to</c><00:03:49.199><c> compute</c><00:03:49.560><c> the</c><00:03:49.709><c> outputs</c>

00:03:50.089 --> 00:03:50.099 align:start position:0%
predictions how to compute the outputs
 

00:03:50.099 --> 00:03:51.619 align:start position:0%
predictions how to compute the outputs
and<00:03:50.489><c> we</c><00:03:50.639><c> saw</c><00:03:50.790><c> how</c><00:03:51.000><c> to</c><00:03:51.030><c> do</c><00:03:51.299><c> that</c><00:03:51.449><c> in</c><00:03:51.569><c> a</c>

00:03:51.619 --> 00:03:51.629 align:start position:0%
and we saw how to do that in a
 

00:03:51.629 --> 00:03:54.289 align:start position:0%
and we saw how to do that in a
vectorized<00:03:51.989><c> way</c><00:03:52.260><c> as</c><00:03:52.470><c> well</c><00:03:52.680><c> so</c><00:03:53.250><c> the</c><00:03:53.400><c> key</c><00:03:53.669><c> is</c><00:03:54.000><c> to</c>

00:03:54.289 --> 00:03:54.299 align:start position:0%
vectorized way as well so the key is to
 

00:03:54.299 --> 00:03:56.259 align:start position:0%
vectorized way as well so the key is to
know<00:03:54.660><c> how</c><00:03:55.079><c> to</c><00:03:55.139><c> compute</c><00:03:55.650><c> these</c><00:03:55.980><c> partial</c>

00:03:56.259 --> 00:03:56.269 align:start position:0%
know how to compute these partial
 

00:03:56.269 --> 00:04:00.140 align:start position:0%
know how to compute these partial
derivative<00:03:57.269><c> terms</c><00:03:57.299><c> the</c><00:03:57.870><c> DW</c><00:03:58.349><c> 1</c><00:03:58.530><c> DB</c><00:03:59.010><c> 1</c><00:03:59.250><c> as</c><00:03:59.459><c> well</c>

00:04:00.140 --> 00:04:00.150 align:start position:0%
derivative terms the DW 1 DB 1 as well
 

00:04:00.150 --> 00:04:04.069 align:start position:0%
derivative terms the DW 1 DB 1 as well
as<00:04:00.389><c> the</c><00:04:00.810><c> derivatives</c><00:04:01.379><c> BW</c><00:04:02.040><c> 2</c><00:04:02.190><c> and</c><00:04:02.370><c> DP</c><00:04:02.669><c> 2</c><00:04:02.849><c> so</c><00:04:03.780><c> what</c>

00:04:04.069 --> 00:04:04.079 align:start position:0%
as the derivatives BW 2 and DP 2 so what
 

00:04:04.079 --> 00:04:06.770 align:start position:0%
as the derivatives BW 2 and DP 2 so what
I'd<00:04:04.199><c> like</c><00:04:04.319><c> to</c><00:04:04.379><c> do</c><00:04:04.680><c> is</c><00:04:05.040><c> just</c><00:04:05.459><c> give</c><00:04:06.419><c> you</c><00:04:06.449><c> the</c>

00:04:06.770 --> 00:04:06.780 align:start position:0%
I'd like to do is just give you the
 

00:04:06.780 --> 00:04:09.409 align:start position:0%
I'd like to do is just give you the
equations<00:04:07.379><c> you</c><00:04:07.500><c> need</c><00:04:07.829><c> in</c><00:04:08.159><c> order</c><00:04:08.549><c> to</c><00:04:08.760><c> compute</c>

00:04:09.409 --> 00:04:09.419 align:start position:0%
equations you need in order to compute
 

00:04:09.419 --> 00:04:12.140 align:start position:0%
equations you need in order to compute
these<00:04:09.750><c> derivatives</c><00:04:10.530><c> and</c><00:04:10.739><c> I'll</c><00:04:11.340><c> defer</c><00:04:11.729><c> to</c><00:04:11.760><c> the</c>

00:04:12.140 --> 00:04:12.150 align:start position:0%
these derivatives and I'll defer to the
 

00:04:12.150 --> 00:04:14.689 align:start position:0%
these derivatives and I'll defer to the
next<00:04:12.510><c> video</c><00:04:12.810><c> which</c><00:04:13.079><c> is</c><00:04:13.229><c> an</c><00:04:13.379><c> optional</c><00:04:13.799><c> video</c><00:04:13.949><c> to</c>

00:04:14.689 --> 00:04:14.699 align:start position:0%
next video which is an optional video to
 

00:04:14.699 --> 00:04:17.420 align:start position:0%
next video which is an optional video to
go<00:04:14.940><c> greater</c><00:04:15.329><c> into</c><00:04:15.659><c> Jeff</c><00:04:15.930><c> about</c><00:04:16.169><c> how</c><00:04:17.010><c> we</c><00:04:17.070><c> came</c>

00:04:17.420 --> 00:04:17.430 align:start position:0%
go greater into Jeff about how we came
 

00:04:17.430 --> 00:04:20.060 align:start position:0%
go greater into Jeff about how we came
up<00:04:17.489><c> with</c><00:04:17.789><c> those</c><00:04:17.970><c> formulas</c><00:04:18.680><c> so</c><00:04:19.680><c> then</c><00:04:19.919><c> just</c>

00:04:20.060 --> 00:04:20.070 align:start position:0%
up with those formulas so then just
 

00:04:20.070 --> 00:04:23.080 align:start position:0%
up with those formulas so then just
summarize<00:04:20.700><c> again</c><00:04:20.940><c> the</c><00:04:21.389><c> equations</c><00:04:21.959><c> for</c>

00:04:23.080 --> 00:04:23.090 align:start position:0%
summarize again the equations for
 

00:04:23.090 --> 00:04:30.310 align:start position:0%
summarize again the equations for
for<00:04:23.750><c> propagation</c><00:04:25.120><c> so</c><00:04:26.120><c> you</c><00:04:26.180><c> have</c><00:04:26.630><c> z1</c><00:04:27.700><c> equals</c><00:04:29.320><c> W</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
for propagation so you have z1 equals W
 

00:04:30.320 --> 00:04:36.090 align:start position:0%
for propagation so you have z1 equals W
1x<00:04:30.770><c> plus</c><00:04:31.310><c> B</c><00:04:31.580><c> 1</c><00:04:31.820><c> and</c><00:04:32.230><c> then</c><00:04:33.230><c> a</c><00:04:33.610><c> 1</c><00:04:34.610><c> equals</c><00:04:35.389><c> the</c>

00:04:36.090 --> 00:04:36.100 align:start position:0%
1x plus B 1 and then a 1 equals the
 

00:04:36.100 --> 00:04:39.480 align:start position:0%
1x plus B 1 and then a 1 equals the
activation<00:04:37.100><c> function</c><00:04:37.130><c> in</c><00:04:37.880><c> that</c><00:04:38.150><c> layer</c>

00:04:39.480 --> 00:04:39.490 align:start position:0%
activation function in that layer
 

00:04:39.490 --> 00:04:43.180 align:start position:0%
activation function in that layer
applied<00:04:40.490><c> other</c><00:04:40.760><c> than</c><00:04:40.970><c> Y</c><00:04:41.150><c> since</c><00:04:41.480><c> V</c><00:04:41.690><c> 1</c><00:04:41.900><c> and</c><00:04:42.190><c> then</c>

00:04:43.180 --> 00:04:43.190 align:start position:0%
applied other than Y since V 1 and then
 

00:04:43.190 --> 00:04:51.159 align:start position:0%
applied other than Y since V 1 and then
Z<00:04:43.400><c> 2</c><00:04:43.610><c> equals</c><00:04:44.620><c> W</c><00:04:45.620><c> 2</c><00:04:45.830><c> A</c><00:04:46.160><c> 1</c><00:04:47.060><c> plus</c><00:04:48.669><c> B</c><00:04:49.669><c> 2</c><00:04:49.700><c> and</c><00:04:50.180><c> then</c>

00:04:51.159 --> 00:04:51.169 align:start position:0%
Z 2 equals W 2 A 1 plus B 2 and then
 

00:04:51.169 --> 00:04:54.280 align:start position:0%
Z 2 equals W 2 A 1 plus B 2 and then
finally<00:04:52.240><c> this</c><00:04:53.240><c> is</c><00:04:53.300><c> all</c><00:04:53.540><c> vectorize</c><00:04:53.990><c> across</c>

00:04:54.280 --> 00:04:54.290 align:start position:0%
finally this is all vectorize across
 

00:04:54.290 --> 00:04:56.320 align:start position:0%
finally this is all vectorize across
your<00:04:54.440><c> training</c><00:04:54.740><c> set</c><00:04:54.919><c> right</c><00:04:55.160><c> a</c><00:04:55.370><c> 2</c><00:04:55.430><c> is</c><00:04:55.940><c> equal</c><00:04:56.300><c> to</c>

00:04:56.320 --> 00:04:56.330 align:start position:0%
your training set right a 2 is equal to
 

00:04:56.330 --> 00:05:01.870 align:start position:0%
your training set right a 2 is equal to
G<00:04:57.010><c> 2</c><00:04:58.010><c> of</c><00:04:58.810><c> Z</c><00:04:59.810><c> 2</c><00:05:00.080><c> the</c><00:05:00.889><c> game</c><00:05:01.010><c> for</c><00:05:01.190><c> now</c><00:05:01.310><c> if</c><00:05:01.610><c> we</c><00:05:01.700><c> assume</c>

00:05:01.870 --> 00:05:01.880 align:start position:0%
G 2 of Z 2 the game for now if we assume
 

00:05:01.880 --> 00:05:03.700 align:start position:0%
G 2 of Z 2 the game for now if we assume
you're<00:05:02.240><c> doing</c><00:05:02.419><c> binary</c><00:05:02.750><c> classification</c><00:05:03.050><c> then</c>

00:05:03.700 --> 00:05:03.710 align:start position:0%
you're doing binary classification then
 

00:05:03.710 --> 00:05:05.920 align:start position:0%
you're doing binary classification then
this<00:05:04.370><c> activation</c><00:05:04.880><c> function</c><00:05:05.389><c> really</c><00:05:05.630><c> should</c>

00:05:05.920 --> 00:05:05.930 align:start position:0%
this activation function really should
 

00:05:05.930 --> 00:05:07.510 align:start position:0%
this activation function really should
be<00:05:06.050><c> the</c><00:05:06.139><c> sigmoid</c><00:05:06.590><c> function</c><00:05:07.010><c> so</c><00:05:07.220><c> I'm</c><00:05:07.310><c> just</c>

00:05:07.510 --> 00:05:07.520 align:start position:0%
be the sigmoid function so I'm just
 

00:05:07.520 --> 00:05:10.060 align:start position:0%
be the sigmoid function so I'm just
throw<00:05:08.180><c> that</c><00:05:08.360><c> in</c><00:05:08.419><c> 0</c><00:05:08.750><c> so</c><00:05:09.320><c> that</c><00:05:09.500><c> the</c><00:05:09.740><c> forward</c>

00:05:10.060 --> 00:05:10.070 align:start position:0%
throw that in 0 so that the forward
 

00:05:10.070 --> 00:05:13.060 align:start position:0%
throw that in 0 so that the forward
propagation<00:05:10.520><c> or</c><00:05:10.940><c> the</c><00:05:11.060><c> left-to-right</c><00:05:12.070><c> forward</c>

00:05:13.060 --> 00:05:13.070 align:start position:0%
propagation or the left-to-right forward
 

00:05:13.070 --> 00:05:15.190 align:start position:0%
propagation or the left-to-right forward
computation<00:05:13.370><c> for</c><00:05:13.850><c> your</c><00:05:14.000><c> neural</c><00:05:14.210><c> network</c><00:05:14.540><c> next</c>

00:05:15.190 --> 00:05:15.200 align:start position:0%
computation for your neural network next
 

00:05:15.200 --> 00:05:17.379 align:start position:0%
computation for your neural network next
let's<00:05:15.410><c> compute</c><00:05:15.740><c> the</c><00:05:15.889><c> derivatives</c><00:05:16.460><c> so</c><00:05:17.000><c> this</c><00:05:17.240><c> is</c>

00:05:17.379 --> 00:05:17.389 align:start position:0%
let's compute the derivatives so this is
 

00:05:17.389 --> 00:05:22.450 align:start position:0%
let's compute the derivatives so this is
the<00:05:17.630><c> back</c><00:05:18.410><c> propagation</c><00:05:19.840><c> step</c><00:05:21.250><c> we're</c><00:05:22.250><c> going</c><00:05:22.370><c> to</c>

00:05:22.450 --> 00:05:22.460 align:start position:0%
the back propagation step we're going to
 

00:05:22.460 --> 00:05:29.320 align:start position:0%
the back propagation step we're going to
compute<00:05:22.820><c> D</c><00:05:23.330><c> Z</c><00:05:23.690><c> 2</c><00:05:24.760><c> equals</c><00:05:25.760><c> a</c><00:05:26.410><c> 2</c><00:05:28.180><c> minus</c><00:05:29.180><c> the</c>

00:05:29.320 --> 00:05:29.330 align:start position:0%
compute D Z 2 equals a 2 minus the
 

00:05:29.330 --> 00:05:32.380 align:start position:0%
compute D Z 2 equals a 2 minus the
ground<00:05:29.600><c> truth</c><00:05:29.810><c> Y</c><00:05:30.050><c> and</c><00:05:30.789><c> just</c><00:05:31.789><c> just</c><00:05:32.210><c> as</c><00:05:32.360><c> a</c>

00:05:32.380 --> 00:05:32.390 align:start position:0%
ground truth Y and just just as a
 

00:05:32.390 --> 00:05:34.450 align:start position:0%
ground truth Y and just just as a
reminder<00:05:32.570><c> all</c><00:05:33.229><c> this</c><00:05:33.440><c> is</c><00:05:33.590><c> vectorize</c><00:05:34.100><c> across</c>

00:05:34.450 --> 00:05:34.460 align:start position:0%
reminder all this is vectorize across
 

00:05:34.460 --> 00:05:38.320 align:start position:0%
reminder all this is vectorize across
example<00:05:35.000><c> so</c><00:05:35.330><c> the</c><00:05:35.900><c> matrix</c><00:05:36.110><c> Y</c><00:05:36.590><c> is</c><00:05:36.979><c> the</c><00:05:37.310><c> sum</c><00:05:37.640><c> 1</c><00:05:38.090><c> by</c>

00:05:38.320 --> 00:05:38.330 align:start position:0%
example so the matrix Y is the sum 1 by
 

00:05:38.330 --> 00:05:41.860 align:start position:0%
example so the matrix Y is the sum 1 by
M<00:05:38.800><c> matrix</c><00:05:39.800><c> then</c><00:05:40.789><c> this</c><00:05:41.090><c> all</c><00:05:41.360><c> of</c><00:05:41.570><c> your</c><00:05:41.720><c> M</c>

00:05:41.860 --> 00:05:41.870 align:start position:0%
M matrix then this all of your M
 

00:05:41.870 --> 00:05:45.279 align:start position:0%
M matrix then this all of your M
examples<00:05:42.160><c> stacked</c><00:05:43.160><c> horizontally</c><00:05:44.140><c> then</c><00:05:45.140><c> it</c>

00:05:45.279 --> 00:05:45.289 align:start position:0%
examples stacked horizontally then it
 

00:05:45.289 --> 00:05:51.370 align:start position:0%
examples stacked horizontally then it
turns<00:05:45.560><c> out</c><00:05:45.710><c> DW</c><00:05:46.490><c> 2</c><00:05:46.700><c> is</c><00:05:47.300><c> equal</c><00:05:47.780><c> to</c><00:05:48.669><c> this</c><00:05:49.720><c> in</c><00:05:50.720><c> fact</c>

00:05:51.370 --> 00:05:51.380 align:start position:0%
turns out DW 2 is equal to this in fact
 

00:05:51.380 --> 00:05:55.270 align:start position:0%
turns out DW 2 is equal to this in fact
um<00:05:51.910><c> these</c><00:05:52.910><c> first</c><00:05:53.240><c> three</c><00:05:53.479><c> equations</c><00:05:54.080><c> are</c><00:05:54.380><c> very</c>

00:05:55.270 --> 00:05:55.280 align:start position:0%
um these first three equations are very
 

00:05:55.280 --> 00:05:58.870 align:start position:0%
um these first three equations are very
similar<00:05:55.970><c> to</c><00:05:56.960><c> gradient</c><00:05:57.710><c> descent</c><00:05:58.130><c> for</c><00:05:58.430><c> logistic</c>

00:05:58.870 --> 00:05:58.880 align:start position:0%
similar to gradient descent for logistic
 

00:05:58.880 --> 00:05:59.730 align:start position:0%
similar to gradient descent for logistic
regression

00:05:59.730 --> 00:05:59.740 align:start position:0%
regression
 

00:05:59.740 --> 00:06:06.610 align:start position:0%
regression
come<00:06:00.740><c> on</c><00:06:00.970><c> X</c><00:06:01.970><c> is</c><00:06:02.210><c> equals</c><00:06:02.510><c> 1</c><00:06:02.810><c> comma</c><00:06:03.430><c> um</c><00:06:05.620><c> chickens</c>

00:06:06.610 --> 00:06:06.620 align:start position:0%
come on X is equals 1 comma um chickens
 

00:06:06.620 --> 00:06:10.330 align:start position:0%
come on X is equals 1 comma um chickens
equals<00:06:07.430><c> true</c><00:06:07.850><c> and</c><00:06:08.289><c> just</c><00:06:09.289><c> a</c><00:06:09.470><c> little</c><00:06:09.919><c> detail</c>

00:06:10.330 --> 00:06:10.340 align:start position:0%
equals true and just a little detail
 

00:06:10.340 --> 00:06:14.409 align:start position:0%
equals true and just a little detail
this<00:06:11.590><c> NP</c><00:06:12.590><c> dot</c><00:06:12.770><c> some</c><00:06:13.100><c> is</c><00:06:13.310><c> a</c><00:06:13.430><c> Python</c><00:06:14.090><c> numpy</c>

00:06:14.409 --> 00:06:14.419 align:start position:0%
this NP dot some is a Python numpy
 

00:06:14.419 --> 00:06:17.080 align:start position:0%
this NP dot some is a Python numpy
come-on<00:06:15.320><c> for</c><00:06:15.530><c> something</c><00:06:15.919><c> across</c><00:06:16.160><c> one</c>

00:06:17.080 --> 00:06:17.090 align:start position:0%
come-on for something across one
 

00:06:17.090 --> 00:06:19.320 align:start position:0%
come-on for something across one
dimension<00:06:17.630><c> of</c><00:06:17.900><c> a</c><00:06:18.080><c> matrix</c><00:06:18.289><c> in</c><00:06:18.770><c> this</c><00:06:18.919><c> case</c>

00:06:19.320 --> 00:06:19.330 align:start position:0%
dimension of a matrix in this case
 

00:06:19.330 --> 00:06:22.090 align:start position:0%
dimension of a matrix in this case
something<00:06:20.330><c> horizontally</c><00:06:20.660><c> and</c><00:06:21.380><c> what</c><00:06:21.860><c> keep</c>

00:06:22.090 --> 00:06:22.100 align:start position:0%
something horizontally and what keep
 

00:06:22.100 --> 00:06:25.480 align:start position:0%
something horizontally and what keep
dims<00:06:22.400><c> does</c><00:06:22.700><c> is</c><00:06:23.060><c> it</c><00:06:23.630><c> prevents</c><00:06:24.250><c> python</c><00:06:25.250><c> from</c>

00:06:25.480 --> 00:06:25.490 align:start position:0%
dims does is it prevents python from
 

00:06:25.490 --> 00:06:29.129 align:start position:0%
dims does is it prevents python from
outputting<00:06:26.090><c> one</c><00:06:26.300><c> of</c><00:06:26.419><c> those</c><00:06:26.590><c> funny</c><00:06:27.590><c> rank</c><00:06:28.310><c> 1</c>

00:06:29.129 --> 00:06:29.139 align:start position:0%
outputting one of those funny rank 1
 

00:06:29.139 --> 00:06:31.750 align:start position:0%
outputting one of those funny rank 1
arrays<00:06:30.139><c> where</c><00:06:30.620><c> where</c><00:06:30.830><c> the</c><00:06:30.919><c> dimensions</c><00:06:31.220><c> was</c>

00:06:31.750 --> 00:06:31.760 align:start position:0%
arrays where where the dimensions was
 

00:06:31.760 --> 00:06:33.790 align:start position:0%
arrays where where the dimensions was
you<00:06:31.970><c> know</c><00:06:32.060><c> n</c><00:06:32.240><c> comma</c>

00:06:33.790 --> 00:06:33.800 align:start position:0%
you know n comma
 

00:06:33.800 --> 00:06:35.529 align:start position:0%
you know n comma
so<00:06:33.949><c> by</c><00:06:34.069><c> having</c><00:06:34.250><c> keep</c><00:06:34.639><c> them</c><00:06:34.849><c> as</c><00:06:34.940><c> equals</c><00:06:35.210><c> true</c>

00:06:35.529 --> 00:06:35.539 align:start position:0%
so by having keep them as equals true
 

00:06:35.539 --> 00:06:39.640 align:start position:0%
so by having keep them as equals true
this<00:06:36.379><c> ensures</c><00:06:36.800><c> that</c><00:06:37.000><c> Python</c><00:06:38.000><c> outputs</c><00:06:38.569><c> for</c><00:06:39.259><c> db2</c>

00:06:39.640 --> 00:06:39.650 align:start position:0%
this ensures that Python outputs for db2
 

00:06:39.650 --> 00:06:42.999 align:start position:0%
this ensures that Python outputs for db2
a<00:06:40.069><c> vector</c><00:06:40.580><c> that</c><00:06:41.240><c> is</c><00:06:41.300><c> sum</c><00:06:41.720><c> n</c><00:06:41.960><c> by</c><00:06:42.680><c> one</c>

00:06:42.999 --> 00:06:43.009 align:start position:0%
a vector that is sum n by one
 

00:06:43.009 --> 00:06:46.270 align:start position:0%
a vector that is sum n by one
technically<00:06:43.909><c> this</c><00:06:44.120><c> will</c><00:06:44.360><c> be</c><00:06:44.599><c> I</c><00:06:44.900><c> guess</c><00:06:45.770><c> n</c><00:06:45.979><c> to</c>

00:06:46.270 --> 00:06:46.280 align:start position:0%
technically this will be I guess n to
 

00:06:46.280 --> 00:06:48.369 align:start position:0%
technically this will be I guess n to
buy<00:06:46.520><c> one</c><00:06:46.819><c> in</c><00:06:47.060><c> this</c><00:06:47.419><c> case</c><00:06:47.599><c> is</c><00:06:47.659><c> just</c><00:06:47.840><c> a</c><00:06:48.080><c> one</c><00:06:48.229><c> by</c>

00:06:48.369 --> 00:06:48.379 align:start position:0%
buy one in this case is just a one by
 

00:06:48.379 --> 00:06:51.390 align:start position:0%
buy one in this case is just a one by
one<00:06:48.409><c> number</c><00:06:49.310><c> so</c><00:06:49.789><c> maybe</c><00:06:49.940><c> it</c><00:06:50.150><c> doesn't</c><00:06:50.750><c> matter</c>

00:06:51.390 --> 00:06:51.400 align:start position:0%
one number so maybe it doesn't matter
 

00:06:51.400 --> 00:06:54.070 align:start position:0%
one number so maybe it doesn't matter
but<00:06:52.400><c> later</c><00:06:52.729><c> on</c><00:06:53.000><c> we'll</c><00:06:53.330><c> see</c><00:06:53.360><c> when</c><00:06:53.720><c> it</c><00:06:53.840><c> really</c>

00:06:54.070 --> 00:06:54.080 align:start position:0%
but later on we'll see when it really
 

00:06:54.080 --> 00:06:57.279 align:start position:0%
but later on we'll see when it really
matters<00:06:55.150><c> so</c><00:06:56.150><c> so</c><00:06:56.330><c> far</c><00:06:56.539><c> what</c><00:06:56.780><c> we've</c><00:06:56.960><c> done</c><00:06:57.110><c> is</c>

00:06:57.279 --> 00:06:57.289 align:start position:0%
matters so so far what we've done is
 

00:06:57.289 --> 00:07:00.189 align:start position:0%
matters so so far what we've done is
very<00:06:57.530><c> similar</c><00:06:57.860><c> to</c><00:06:58.009><c> logistic</c><00:06:58.520><c> regression</c><00:06:59.330><c> but</c>

00:07:00.189 --> 00:07:00.199 align:start position:0%
very similar to logistic regression but
 

00:07:00.199 --> 00:07:02.890 align:start position:0%
very similar to logistic regression but
now<00:07:00.409><c> as</c><00:07:00.710><c> you</c><00:07:00.860><c> compute</c><00:07:01.310><c> two</c><00:07:01.729><c> new</c><00:07:01.879><c> to</c><00:07:02.240><c> run</c><00:07:02.659><c> back</c>

00:07:02.890 --> 00:07:02.900 align:start position:0%
now as you compute two new to run back
 

00:07:02.900 --> 00:07:09.100 align:start position:0%
now as you compute two new to run back
propagation<00:07:03.759><c> you</c><00:07:04.759><c> would</c><00:07:04.940><c> compute</c><00:07:05.300><c> this</c><00:07:08.110><c> easy</c>

00:07:09.100 --> 00:07:09.110 align:start position:0%
propagation you would compute this easy
 

00:07:09.110 --> 00:07:17.170 align:start position:0%
propagation you would compute this easy
two<00:07:10.840><c> times</c><00:07:11.919><c> G</c><00:07:12.919><c> one</c><00:07:13.490><c> prime</c><00:07:14.360><c> of</c><00:07:14.800><c> Z</c><00:07:15.800><c> 1</c><00:07:16.039><c> so</c><00:07:17.030><c> this</c>

00:07:17.170 --> 00:07:17.180 align:start position:0%
two times G one prime of Z 1 so this
 

00:07:17.180 --> 00:07:20.200 align:start position:0%
two times G one prime of Z 1 so this
quantity<00:07:17.569><c> G</c><00:07:17.930><c> 1</c><00:07:18.139><c> prime</c><00:07:18.440><c> is</c><00:07:18.470><c> the</c><00:07:19.370><c> derivative</c><00:07:19.400><c> of</c>

00:07:20.200 --> 00:07:20.210 align:start position:0%
quantity G 1 prime is the derivative of
 

00:07:20.210 --> 00:07:21.939 align:start position:0%
quantity G 1 prime is the derivative of
whatever<00:07:20.509><c> was</c><00:07:20.690><c> the</c><00:07:20.870><c> activation</c><00:07:21.380><c> function</c><00:07:21.409><c> you</c>

00:07:21.939 --> 00:07:21.949 align:start position:0%
whatever was the activation function you
 

00:07:21.949 --> 00:07:25.089 align:start position:0%
whatever was the activation function you
use<00:07:22.190><c> for</c><00:07:22.819><c> the</c><00:07:22.909><c> hidden</c><00:07:23.240><c> layer</c><00:07:23.419><c> and</c><00:07:23.979><c> for</c><00:07:24.979><c> the</c>

00:07:25.089 --> 00:07:25.099 align:start position:0%
use for the hidden layer and for the
 

00:07:25.099 --> 00:07:26.830 align:start position:0%
use for the hidden layer and for the
output<00:07:25.400><c> layer</c><00:07:25.550><c> I</c><00:07:25.789><c> assume</c><00:07:26.180><c> that</c><00:07:26.300><c> you're</c><00:07:26.630><c> doing</c>

00:07:26.830 --> 00:07:26.840 align:start position:0%
output layer I assume that you're doing
 

00:07:26.840 --> 00:07:28.959 align:start position:0%
output layer I assume that you're doing
binary<00:07:27.020><c> classification</c><00:07:27.500><c> with</c><00:07:28.370><c> the</c><00:07:28.520><c> sigmoid</c>

00:07:28.959 --> 00:07:28.969 align:start position:0%
binary classification with the sigmoid
 

00:07:28.969 --> 00:07:30.459 align:start position:0%
binary classification with the sigmoid
function<00:07:29.389><c> so</c><00:07:29.569><c> that's</c><00:07:29.780><c> already</c><00:07:29.930><c> baked</c><00:07:30.289><c> into</c>

00:07:30.459 --> 00:07:30.469 align:start position:0%
function so that's already baked into
 

00:07:30.469 --> 00:07:34.600 align:start position:0%
function so that's already baked into
that<00:07:30.800><c> formula</c><00:07:31.099><c> for</c><00:07:31.370><c> DZ</c><00:07:31.669><c> 2</c><00:07:32.169><c> and</c><00:07:33.169><c> this</c><00:07:33.590><c> times</c><00:07:34.250><c> is</c>

00:07:34.600 --> 00:07:34.610 align:start position:0%
that formula for DZ 2 and this times is
 

00:07:34.610 --> 00:07:39.249 align:start position:0%
that formula for DZ 2 and this times is
a<00:07:34.639><c> element-wise</c><00:07:36.009><c> product</c><00:07:37.240><c> so</c><00:07:38.240><c> this</c><00:07:38.630><c> here</c><00:07:39.080><c> is</c>

00:07:39.249 --> 00:07:39.259 align:start position:0%
a element-wise product so this here is
 

00:07:39.259 --> 00:07:44.529 align:start position:0%
a element-wise product so this here is
going<00:07:40.159><c> to</c><00:07:40.310><c> be</c><00:07:40.490><c> an</c><00:07:40.669><c> N</c><00:07:40.940><c> 1</c><00:07:41.240><c> by</c><00:07:42.229><c> M</c><00:07:42.469><c> matrix</c><00:07:43.069><c> and</c><00:07:43.539><c> this</c>

00:07:44.529 --> 00:07:44.539 align:start position:0%
going to be an N 1 by M matrix and this
 

00:07:44.539 --> 00:07:47.800 align:start position:0%
going to be an N 1 by M matrix and this
here<00:07:45.280><c> this</c><00:07:46.280><c> element</c><00:07:46.580><c> wise</c><00:07:46.940><c> derivative</c><00:07:47.630><c> thing</c>

00:07:47.800 --> 00:07:47.810 align:start position:0%
here this element wise derivative thing
 

00:07:47.810 --> 00:07:51.189 align:start position:0%
here this element wise derivative thing
is<00:07:47.960><c> also</c><00:07:48.289><c> going</c><00:07:48.560><c> to</c><00:07:48.650><c> be</c><00:07:48.889><c> an</c><00:07:49.009><c> N</c><00:07:49.219><c> 1</c><00:07:49.520><c> by</c><00:07:50.419><c> n</c><00:07:50.659><c> matrix</c>

00:07:51.189 --> 00:07:51.199 align:start position:0%
is also going to be an N 1 by n matrix
 

00:07:51.199 --> 00:07:53.439 align:start position:0%
is also going to be an N 1 by n matrix
and<00:07:51.469><c> so</c><00:07:51.830><c> this</c><00:07:52.069><c> times</c><00:07:52.400><c> there</c><00:07:52.699><c> is</c><00:07:52.909><c> an</c><00:07:53.090><c> element</c>

00:07:53.439 --> 00:07:53.449 align:start position:0%
and so this times there is an element
 

00:07:53.449 --> 00:07:56.379 align:start position:0%
and so this times there is an element
wise<00:07:53.659><c> products</c><00:07:54.319><c> of</c><00:07:54.500><c> two</c><00:07:54.710><c> matrices</c><00:07:55.389><c> then</c>

00:07:56.379 --> 00:07:56.389 align:start position:0%
wise products of two matrices then
 

00:07:56.389 --> 00:08:02.290 align:start position:0%
wise products of two matrices then
finally<00:07:57.490><c> DW</c><00:07:58.490><c> 1</c><00:07:58.669><c> is</c><00:07:59.330><c> equal</c><00:07:59.659><c> to</c><00:07:59.690><c> that</c><00:08:00.020><c> and</c><00:08:01.060><c> DB</c><00:08:02.060><c> 1</c>

00:08:02.290 --> 00:08:02.300 align:start position:0%
finally DW 1 is equal to that and DB 1
 

00:08:02.300 --> 00:08:13.769 align:start position:0%
finally DW 1 is equal to that and DB 1
is<00:08:02.889><c> equal</c><00:08:03.889><c> to</c><00:08:04.419><c> this</c><00:08:06.909><c> and</c><00:08:07.909><c> P</c><00:08:08.240><c> dot</c><00:08:08.509><c> some</c><00:08:09.400><c> D</c><00:08:11.529><c> Z</c><00:08:12.529><c> 1</c><00:08:12.800><c> X</c>

00:08:13.769 --> 00:08:13.779 align:start position:0%
is equal to this and P dot some D Z 1 X
 

00:08:13.779 --> 00:08:16.320 align:start position:0%
is equal to this and P dot some D Z 1 X
is<00:08:14.779><c> equals</c><00:08:15.139><c> 1</c>

00:08:16.320 --> 00:08:16.330 align:start position:0%
is equals 1
 

00:08:16.330 --> 00:08:21.890 align:start position:0%
is equals 1
keep<00:08:17.469><c> this</c><00:08:18.940><c> equals</c><00:08:19.940><c> true</c><00:08:20.319><c> so</c><00:08:21.319><c> we're</c>

00:08:21.890 --> 00:08:21.900 align:start position:0%
keep this equals true so we're
 

00:08:21.900 --> 00:08:23.749 align:start position:0%
keep this equals true so we're
previously<00:08:22.350><c> the</c><00:08:22.650><c> keep</c><00:08:22.889><c> dinners</c><00:08:23.250><c> maybe</c><00:08:23.460><c> matter</c>

00:08:23.749 --> 00:08:23.759 align:start position:0%
previously the keep dinners maybe matter
 

00:08:23.759 --> 00:08:27.680 align:start position:0%
previously the keep dinners maybe matter
less<00:08:24.120><c> if</c><00:08:24.330><c> n</c><00:08:24.509><c> 2</c><00:08:24.540><c> is</c><00:08:25.470><c> equal</c><00:08:25.530><c> to</c><00:08:26.040><c> 1</c><00:08:26.280><c> so</c><00:08:26.310><c> just</c><00:08:26.850><c> one</c><00:08:27.540><c> by</c>

00:08:27.680 --> 00:08:27.690 align:start position:0%
less if n 2 is equal to 1 so just one by
 

00:08:27.690 --> 00:08:30.640 align:start position:0%
less if n 2 is equal to 1 so just one by
one<00:08:27.900><c> thing</c><00:08:28.110><c> is</c><00:08:28.229><c> there's</c><00:08:28.380><c> a</c><00:08:28.440><c> real</c><00:08:28.590><c> number</c><00:08:29.000><c> here</c>

00:08:30.640 --> 00:08:30.650 align:start position:0%
one thing is there's a real number here
 

00:08:30.650 --> 00:08:36.529 align:start position:0%
one thing is there's a real number here
pp<00:08:31.650><c> 1</c><00:08:31.949><c> will</c><00:08:32.339><c> be</c><00:08:32.550><c> a</c><00:08:32.820><c> N</c><00:08:33.740><c> 1</c><00:08:34.740><c> by</c><00:08:35.460><c> 1</c><00:08:35.729><c> vector</c><00:08:35.760><c> and</c><00:08:36.210><c> so</c>

00:08:36.529 --> 00:08:36.539 align:start position:0%
pp 1 will be a N 1 by 1 vector and so
 

00:08:36.539 --> 00:08:38.930 align:start position:0%
pp 1 will be a N 1 by 1 vector and so
you<00:08:36.599><c> want</c><00:08:36.900><c> Python</c><00:08:37.830><c> you</c><00:08:37.979><c> want</c><00:08:38.190><c> n</c><00:08:38.339><c> P</c><00:08:38.520><c> dot</c><00:08:38.669><c> some</c>

00:08:38.930 --> 00:08:38.940 align:start position:0%
you want Python you want n P dot some
 

00:08:38.940 --> 00:08:40.610 align:start position:0%
you want Python you want n P dot some
output<00:08:39.479><c> something</c><00:08:39.719><c> of</c><00:08:39.930><c> this</c><00:08:40.140><c> dimension</c>

00:08:40.610 --> 00:08:40.620 align:start position:0%
output something of this dimension
 

00:08:40.620 --> 00:08:44.240 align:start position:0%
output something of this dimension
rather<00:08:40.950><c> than</c><00:08:41.310><c> a</c><00:08:41.599><c> family</c><00:08:42.599><c> right</c><00:08:42.779><c> one</c><00:08:43.110><c> array</c><00:08:43.409><c> of</c>

00:08:44.240 --> 00:08:44.250 align:start position:0%
rather than a family right one array of
 

00:08:44.250 --> 00:08:46.640 align:start position:0%
rather than a family right one array of
that<00:08:44.610><c> dimension</c><00:08:45.180><c> which</c><00:08:45.600><c> could</c><00:08:46.350><c> end</c><00:08:46.529><c> up</c>

00:08:46.640 --> 00:08:46.650 align:start position:0%
that dimension which could end up
 

00:08:46.650 --> 00:08:48.290 align:start position:0%
that dimension which could end up
messing<00:08:46.950><c> up</c><00:08:47.250><c> some</c><00:08:47.490><c> of</c><00:08:47.610><c> your</c><00:08:47.640><c> basic</c>

00:08:48.290 --> 00:08:48.300 align:start position:0%
messing up some of your basic
 

00:08:48.300 --> 00:08:50.570 align:start position:0%
messing up some of your basic
calculations<00:08:49.260><c> the</c><00:08:49.950><c> other</c><00:08:50.070><c> way</c><00:08:50.220><c> would</c><00:08:50.430><c> be</c><00:08:50.490><c> to</c>

00:08:50.570 --> 00:08:50.580 align:start position:0%
calculations the other way would be to
 

00:08:50.580 --> 00:08:53.300 align:start position:0%
calculations the other way would be to
not<00:08:50.880><c> have</c><00:08:51.120><c> to</c><00:08:51.240><c> keep</c><00:08:51.450><c> them</c><00:08:51.660><c> parameters</c><00:08:52.529><c> but</c><00:08:53.190><c> to</c>

00:08:53.300 --> 00:08:53.310 align:start position:0%
not have to keep them parameters but to
 

00:08:53.310 --> 00:08:56.900 align:start position:0%
not have to keep them parameters but to
explicitly<00:08:53.910><c> call</c><00:08:54.839><c> in</c><00:08:55.230><c> a</c><00:08:55.320><c> reshape</c><00:08:55.770><c> to</c><00:08:56.490><c> reshape</c>

00:08:56.900 --> 00:08:56.910 align:start position:0%
explicitly call in a reshape to reshape
 

00:08:56.910 --> 00:09:00.050 align:start position:0%
explicitly call in a reshape to reshape
the<00:08:57.089><c> output</c><00:08:57.480><c> of</c><00:08:57.510><c> and</c><00:08:57.810><c> P</c><00:08:58.290><c> dot</c><00:08:58.440><c> some</c><00:08:58.740><c> into</c><00:08:59.220><c> this</c>

00:09:00.050 --> 00:09:00.060 align:start position:0%
the output of and P dot some into this
 

00:09:00.060 --> 00:09:04.390 align:start position:0%
the output of and P dot some into this
dimension<00:09:01.190><c> which</c><00:09:02.190><c> you</c><00:09:02.339><c> would</c><00:09:02.490><c> like</c><00:09:02.640><c> dB</c><00:09:03.180><c> so</c><00:09:03.690><c> how</c>

00:09:04.390 --> 00:09:04.400 align:start position:0%
dimension which you would like dB so how
 

00:09:04.400 --> 00:09:08.300 align:start position:0%
dimension which you would like dB so how
so<00:09:05.400><c> that</c><00:09:05.670><c> was</c><00:09:05.880><c> more</c><00:09:06.450><c> propagation</c><00:09:07.170><c> in</c><00:09:07.500><c> I</c><00:09:07.770><c> guess</c>

00:09:08.300 --> 00:09:08.310 align:start position:0%
so that was more propagation in I guess
 

00:09:08.310 --> 00:09:11.329 align:start position:0%
so that was more propagation in I guess
four<00:09:08.760><c> equations</c><00:09:09.330><c> and</c><00:09:09.540><c> back</c><00:09:10.050><c> propagation</c><00:09:10.560><c> in</c><00:09:11.070><c> I</c>

00:09:11.329 --> 00:09:11.339 align:start position:0%
four equations and back propagation in I
 

00:09:11.339 --> 00:09:14.300 align:start position:0%
four equations and back propagation in I
guess<00:09:11.880><c> six</c><00:09:12.360><c> equations</c><00:09:12.630><c> I</c><00:09:13.170><c> knew</c><00:09:13.800><c> I</c><00:09:13.830><c> just</c><00:09:13.950><c> wrote</c>

00:09:14.300 --> 00:09:14.310 align:start position:0%
guess six equations I knew I just wrote
 

00:09:14.310 --> 00:09:16.670 align:start position:0%
guess six equations I knew I just wrote
down<00:09:14.490><c> these</c><00:09:14.700><c> equations</c><00:09:15.270><c> but</c><00:09:15.660><c> in</c><00:09:15.930><c> the</c><00:09:16.380><c> next</c>

00:09:16.670 --> 00:09:16.680 align:start position:0%
down these equations but in the next
 

00:09:16.680 --> 00:09:18.860 align:start position:0%
down these equations but in the next
optional<00:09:17.339><c> video</c><00:09:17.640><c> let's</c><00:09:18.240><c> go</c><00:09:18.420><c> over</c><00:09:18.839><c> some</c>

00:09:18.860 --> 00:09:18.870 align:start position:0%
optional video let's go over some
 

00:09:18.870 --> 00:09:22.040 align:start position:0%
optional video let's go over some
intuitions<00:09:19.860><c> for</c><00:09:20.130><c> how</c><00:09:20.310><c> the</c><00:09:20.850><c> six</c><00:09:21.150><c> equations</c><00:09:21.390><c> for</c>

00:09:22.040 --> 00:09:22.050 align:start position:0%
intuitions for how the six equations for
 

00:09:22.050 --> 00:09:23.930 align:start position:0%
intuitions for how the six equations for
the<00:09:22.140><c> back</c><00:09:22.290><c> propagation</c><00:09:22.830><c> algorithm</c><00:09:23.310><c> were</c>

00:09:23.930 --> 00:09:23.940 align:start position:0%
the back propagation algorithm were
 

00:09:23.940 --> 00:09:25.850 align:start position:0%
the back propagation algorithm were
derived<00:09:24.360><c> please</c><00:09:25.020><c> feel</c><00:09:25.200><c> free</c><00:09:25.230><c> to</c><00:09:25.350><c> watch</c><00:09:25.589><c> that</c>

00:09:25.850 --> 00:09:25.860 align:start position:0%
derived please feel free to watch that
 

00:09:25.860 --> 00:09:27.860 align:start position:0%
derived please feel free to watch that
or<00:09:26.010><c> not</c><00:09:26.190><c> but</c><00:09:26.640><c> either</c><00:09:26.790><c> way</c><00:09:27.060><c> if</c><00:09:27.360><c> you</c><00:09:27.450><c> implement</c>

00:09:27.860 --> 00:09:27.870 align:start position:0%
or not but either way if you implement
 

00:09:27.870 --> 00:09:29.990 align:start position:0%
or not but either way if you implement
these<00:09:28.020><c> algorithms</c><00:09:28.440><c> you</c><00:09:28.920><c> will</c><00:09:29.190><c> have</c><00:09:29.520><c> a</c><00:09:29.550><c> correct</c>

00:09:29.990 --> 00:09:30.000 align:start position:0%
these algorithms you will have a correct
 

00:09:30.000 --> 00:09:32.300 align:start position:0%
these algorithms you will have a correct
implementation<00:09:30.120><c> of</c><00:09:30.810><c> four</c><00:09:31.800><c> prop</c><00:09:32.100><c> and</c><00:09:32.250><c> back</c>

00:09:32.300 --> 00:09:32.310 align:start position:0%
implementation of four prop and back
 

00:09:32.310 --> 00:09:34.640 align:start position:0%
implementation of four prop and back
prop<00:09:32.510><c> and</c><00:09:33.510><c> you'll</c><00:09:33.660><c> be</c><00:09:33.779><c> able</c><00:09:33.839><c> to</c><00:09:34.140><c> compute</c><00:09:34.529><c> the</c>

00:09:34.640 --> 00:09:34.650 align:start position:0%
prop and you'll be able to compute the
 

00:09:34.650 --> 00:09:36.740 align:start position:0%
prop and you'll be able to compute the
derivative<00:09:35.130><c> you</c><00:09:35.279><c> need</c><00:09:35.490><c> in</c><00:09:35.760><c> order</c><00:09:36.089><c> to</c><00:09:36.390><c> apply</c>

00:09:36.740 --> 00:09:36.750 align:start position:0%
derivative you need in order to apply
 

00:09:36.750 --> 00:09:39.019 align:start position:0%
derivative you need in order to apply
gradient<00:09:37.200><c> descent</c><00:09:37.709><c> to</c><00:09:38.220><c> learn</c><00:09:38.370><c> the</c><00:09:38.520><c> parameters</c>

00:09:39.019 --> 00:09:39.029 align:start position:0%
gradient descent to learn the parameters
 

00:09:39.029 --> 00:09:41.510 align:start position:0%
gradient descent to learn the parameters
of<00:09:39.060><c> your</c><00:09:39.270><c> neural</c><00:09:39.480><c> network</c><00:09:39.839><c> it</c><00:09:40.709><c> is</c><00:09:40.890><c> possible</c><00:09:41.490><c> to</c>

00:09:41.510 --> 00:09:41.520 align:start position:0%
of your neural network it is possible to
 

00:09:41.520 --> 00:09:43.699 align:start position:0%
of your neural network it is possible to
implement<00:09:42.120><c> design</c><00:09:42.750><c> room</c><00:09:42.959><c> and</c><00:09:43.140><c> get</c><00:09:43.290><c> it</c><00:09:43.440><c> to</c><00:09:43.529><c> work</c>

00:09:43.699 --> 00:09:43.709 align:start position:0%
implement design room and get it to work
 

00:09:43.709 --> 00:09:45.199 align:start position:0%
implement design room and get it to work
without<00:09:43.920><c> deeply</c><00:09:44.459><c> understanding</c><00:09:45.060><c> the</c>

00:09:45.199 --> 00:09:45.209 align:start position:0%
without deeply understanding the
 

00:09:45.209 --> 00:09:47.300 align:start position:0%
without deeply understanding the
calculus<00:09:45.690><c> a</c><00:09:45.839><c> lot</c><00:09:46.380><c> of</c><00:09:46.560><c> successful</c><00:09:46.950><c> deep</c>

00:09:47.300 --> 00:09:47.310 align:start position:0%
calculus a lot of successful deep
 

00:09:47.310 --> 00:09:50.510 align:start position:0%
calculus a lot of successful deep
learning<00:09:47.520><c> practitioners</c><00:09:48.390><c> do</c><00:09:48.630><c> so</c><00:09:49.040><c> but</c><00:09:50.040><c> if</c><00:09:50.279><c> you</c>

00:09:50.510 --> 00:09:50.520 align:start position:0%
learning practitioners do so but if you
 

00:09:50.520 --> 00:09:52.310 align:start position:0%
learning practitioners do so but if you
want<00:09:50.760><c> you</c><00:09:51.000><c> can</c><00:09:51.150><c> also</c><00:09:51.300><c> watch</c><00:09:51.600><c> the</c><00:09:51.839><c> next</c><00:09:51.870><c> video</c>

00:09:52.310 --> 00:09:52.320 align:start position:0%
want you can also watch the next video
 

00:09:52.320 --> 00:09:54.170 align:start position:0%
want you can also watch the next video
just<00:09:52.350><c> to</c><00:09:52.770><c> get</c><00:09:52.950><c> a</c><00:09:52.980><c> bit</c><00:09:53.220><c> more</c><00:09:53.370><c> intuition</c><00:09:53.850><c> about</c>

00:09:54.170 --> 00:09:54.180 align:start position:0%
just to get a bit more intuition about
 

00:09:54.180 --> 00:09:56.570 align:start position:0%
just to get a bit more intuition about
the<00:09:54.360><c> derivation</c><00:09:54.630><c> of</c><00:09:55.230><c> these</c><00:09:55.560><c> of</c><00:09:56.400><c> these</c>

00:09:56.570 --> 00:09:56.580 align:start position:0%
the derivation of these of these
 

00:09:56.580 --> 00:09:58.820 align:start position:0%
the derivation of these of these
equations

