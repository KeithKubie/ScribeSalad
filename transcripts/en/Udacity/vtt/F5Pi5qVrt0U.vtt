WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
The answer is this one. Here is why.

00:00:02.000 --> 00:00:06.000
The signature is t^dB mod nB and this was t.

00:00:06.000 --> 00:00:12.000
That's what this is. We can use the property of exponents to simplify this.

00:00:12.000 --> 00:00:20.000
And now distributing the exponents, we get this. Here we have this term k^eBdB.

00:00:20.000 --> 00:00:27.000
Well, these are RSA keys--this is the public and the private key for that modulus.

00:00:27.000 --> 00:00:32.000
That is the equivalent to what happens when we do encryption and decryption.

00:00:32.000 --> 00:00:36.000
This is equivalent to k because these exponents

00:00:36.000 --> 00:00:39.000
end up performing encryption and decryption in the RSA system.

00:00:39.000 --> 00:00:47.000
They're designed so that's equivalent to 1, and so we get m^dB times k mod nB,

00:00:47.000 --> 00:00:51.000
while this value k--that was the the random value selected by Alice.

00:00:51.000 --> 00:00:56.000
She can just divide that out, and by dividing out the k, she gets m^dB mod mB,

00:00:56.000 --> 99:59:59.000
which is exactly what she wanted--that's the message m signed by the bank.

