WEBVTT
Kind: captions
Language: en

00:00:02.360 --> 00:00:06.230
 
at Google i/o 2017 we announced the life

00:00:06.230 --> 00:00:06.240
at Google i/o 2017 we announced the life
 

00:00:06.240 --> 00:00:08.419
at Google i/o 2017 we announced the life
cycle library a set of libraries and

00:00:08.419 --> 00:00:08.429
cycle library a set of libraries and
 

00:00:08.429 --> 00:00:10.040
cycle library a set of libraries and
guidance for avoiding memory leaks and

00:00:10.040 --> 00:00:10.050
guidance for avoiding memory leaks and
 

00:00:10.050 --> 00:00:11.570
guidance for avoiding memory leaks and
solving common Android lifecycle

00:00:11.570 --> 00:00:11.580
solving common Android lifecycle
 

00:00:11.580 --> 00:00:13.640
solving common Android lifecycle
challenges the life cycle library has

00:00:13.640 --> 00:00:13.650
challenges the life cycle library has
 

00:00:13.650 --> 00:00:16.010
challenges the life cycle library has
hid 2.0 it's also now part of jetpack

00:00:16.010 --> 00:00:16.020
hid 2.0 it's also now part of jetpack
 

00:00:16.020 --> 00:00:17.810
hid 2.0 it's also now part of jetpack
and includes new integrations with data

00:00:17.810 --> 00:00:17.820
and includes new integrations with data
 

00:00:17.820 --> 00:00:19.880
and includes new integrations with data
binding this is a tour of the lifecycle

00:00:19.880 --> 00:00:19.890
binding this is a tour of the lifecycle
 

00:00:19.890 --> 00:00:22.640
binding this is a tour of the lifecycle
libraries live data class live data is

00:00:22.640 --> 00:00:22.650
libraries live data class live data is
 

00:00:22.650 --> 00:00:24.769
libraries live data class live data is
an observable data holder class that is

00:00:24.769 --> 00:00:24.779
an observable data holder class that is
 

00:00:24.779 --> 00:00:27.019
an observable data holder class that is
also lifecycle aware let's take a look

00:00:27.019 --> 00:00:27.029
also lifecycle aware let's take a look
 

00:00:27.029 --> 00:00:29.060
also lifecycle aware let's take a look
at example you're gonna have your UI and

00:00:29.060 --> 00:00:29.070
at example you're gonna have your UI and
 

00:00:29.070 --> 00:00:30.710
at example you're gonna have your UI and
then you're also gonna have this live

00:00:30.710 --> 00:00:30.720
then you're also gonna have this live
 

00:00:30.720 --> 00:00:32.540
then you're also gonna have this live
data object which holds some data that

00:00:32.540 --> 00:00:32.550
data object which holds some data that
 

00:00:32.550 --> 00:00:35.000
data object which holds some data that
you want to show on screen the UI

00:00:35.000 --> 00:00:35.010
you want to show on screen the UI
 

00:00:35.010 --> 00:00:37.670
you want to show on screen the UI
observes the live data object this is

00:00:37.670 --> 00:00:37.680
observes the live data object this is
 

00:00:37.680 --> 00:00:39.709
observes the live data object this is
like saying the UI wants to be notified

00:00:39.709 --> 00:00:39.719
like saying the UI wants to be notified
 

00:00:39.719 --> 00:00:42.830
like saying the UI wants to be notified
of updates therefore when the live data

00:00:42.830 --> 00:00:42.840
of updates therefore when the live data
 

00:00:42.840 --> 00:00:45.200
of updates therefore when the live data
changes the UI will get notified and

00:00:45.200 --> 00:00:45.210
changes the UI will get notified and
 

00:00:45.210 --> 00:00:47.299
changes the UI will get notified and
then the UI can redraw itself with the

00:00:47.299 --> 00:00:47.309
then the UI can redraw itself with the
 

00:00:47.309 --> 00:00:47.900
then the UI can redraw itself with the
new data

00:00:47.900 --> 00:00:47.910
new data
 

00:00:47.910 --> 00:00:50.240
new data
so in short live data makes it easy to

00:00:50.240 --> 00:00:50.250
so in short live data makes it easy to
 

00:00:50.250 --> 00:00:52.160
so in short live data makes it easy to
keep what's going on screen and synch

00:00:52.160 --> 00:00:52.170
keep what's going on screen and synch
 

00:00:52.170 --> 00:00:54.799
keep what's going on screen and synch
with the data ok so here's some actual

00:00:54.799 --> 00:00:54.809
with the data ok so here's some actual
 

00:00:54.809 --> 00:00:57.139
with the data ok so here's some actual
code live data objects will usually be

00:00:57.139 --> 00:00:57.149
code live data objects will usually be
 

00:00:57.149 --> 00:00:59.029
code live data objects will usually be
kept in the view model class if you're

00:00:59.029 --> 00:00:59.039
kept in the view model class if you're
 

00:00:59.039 --> 00:01:00.410
kept in the view model class if you're
not sure what a view bubble is no

00:01:00.410 --> 00:01:00.420
not sure what a view bubble is no
 

00:01:00.420 --> 00:01:02.720
not sure what a view bubble is no
worries check out the video let's say

00:01:02.720 --> 00:01:02.730
worries check out the video let's say
 

00:01:02.730 --> 00:01:04.070
worries check out the video let's say
you're creating an activity and view

00:01:04.070 --> 00:01:04.080
you're creating an activity and view
 

00:01:04.080 --> 00:01:06.649
you're creating an activity and view
model for a user profile you'll have

00:01:06.649 --> 00:01:06.659
model for a user profile you'll have
 

00:01:06.659 --> 00:01:08.750
model for a user profile you'll have
this user live data object that holds a

00:01:08.750 --> 00:01:08.760
this user live data object that holds a
 

00:01:08.760 --> 00:01:11.090
this user live data object that holds a
user object now over in your activities

00:01:11.090 --> 00:01:11.100
user object now over in your activities
 

00:01:11.100 --> 00:01:13.010
user object now over in your activities
on create you'll get that live data from

00:01:13.010 --> 00:01:13.020
on create you'll get that live data from
 

00:01:13.020 --> 00:01:15.620
on create you'll get that live data from
the view model class call observe on the

00:01:15.620 --> 00:01:15.630
the view model class call observe on the
 

00:01:15.630 --> 00:01:17.570
the view model class call observe on the
live data for the first argument you're

00:01:17.570 --> 00:01:17.580
live data for the first argument you're
 

00:01:17.580 --> 00:01:19.520
live data for the first argument you're
gonna pass in the UI in this case the

00:01:19.520 --> 00:01:19.530
gonna pass in the UI in this case the
 

00:01:19.530 --> 00:01:21.410
gonna pass in the UI in this case the
activity the second argument is a

00:01:21.410 --> 00:01:21.420
activity the second argument is a
 

00:01:21.420 --> 00:01:24.260
activity the second argument is a
observer which is just a callback here

00:01:24.260 --> 00:01:24.270
observer which is just a callback here
 

00:01:24.270 --> 00:01:26.649
observer which is just a callback here
you will call the code to update the UI

00:01:26.649 --> 00:01:26.659
you will call the code to update the UI
 

00:01:26.659 --> 00:01:29.330
you will call the code to update the UI
now you can change the live data by

00:01:29.330 --> 00:01:29.340
now you can change the live data by
 

00:01:29.340 --> 00:01:31.429
now you can change the live data by
calling either set value or post value

00:01:31.429 --> 00:01:31.439
calling either set value or post value
 

00:01:31.439 --> 00:01:33.590
calling either set value or post value
use set value if you're running on the

00:01:33.590 --> 00:01:33.600
use set value if you're running on the
 

00:01:33.600 --> 00:01:35.569
use set value if you're running on the
UI thread and then use post value if

00:01:35.569 --> 00:01:35.579
UI thread and then use post value if
 

00:01:35.579 --> 00:01:36.609
UI thread and then use post value if
you're running on a background thread

00:01:36.609 --> 00:01:36.619
you're running on a background thread
 

00:01:36.619 --> 00:01:39.289
you're running on a background thread
when either set value or post value is

00:01:39.289 --> 00:01:39.299
when either set value or post value is
 

00:01:39.299 --> 00:01:41.359
when either set value or post value is
called the live data notifies active

00:01:41.359 --> 00:01:41.369
called the live data notifies active
 

00:01:41.369 --> 00:01:44.060
called the live data notifies active
observers if you're using Android studio

00:01:44.060 --> 00:01:44.070
observers if you're using Android studio
 

00:01:44.070 --> 00:01:46.819
observers if you're using Android studio
3.1 or higher live data and view models

00:01:46.819 --> 00:01:46.829
3.1 or higher live data and view models
 

00:01:46.829 --> 00:01:49.160
3.1 or higher live data and view models
work with data binding usually you're

00:01:49.160 --> 00:01:49.170
work with data binding usually you're
 

00:01:49.170 --> 00:01:50.300
work with data binding usually you're
going to go ahead and bind your view

00:01:50.300 --> 00:01:50.310
going to go ahead and bind your view
 

00:01:50.310 --> 00:01:52.039
going to go ahead and bind your view
model to your XML layout which is

00:01:52.039 --> 00:01:52.049
model to your XML layout which is
 

00:01:52.049 --> 00:01:54.260
model to your XML layout which is
explained in the view model video now

00:01:54.260 --> 00:01:54.270
explained in the view model video now
 

00:01:54.270 --> 00:01:55.940
explained in the view model video now
after associating your view model and

00:01:55.940 --> 00:01:55.950
after associating your view model and
 

00:01:55.950 --> 00:01:57.800
after associating your view model and
data binding layout you just need to add

00:01:57.800 --> 00:01:57.810
data binding layout you just need to add
 

00:01:57.810 --> 00:01:59.749
data binding layout you just need to add
the single line change to have your live

00:01:59.749 --> 00:01:59.759
the single line change to have your live
 

00:01:59.759 --> 00:02:01.670
the single line change to have your live
data be properly observed when bound to

00:02:01.670 --> 00:02:01.680
data be properly observed when bound to
 

00:02:01.680 --> 00:02:04.160
data be properly observed when bound to
the XML you can now include references

00:02:04.160 --> 00:02:04.170
the XML you can now include references
 

00:02:04.170 --> 00:02:06.230
the XML you can now include references
in your XML to your view model and the

00:02:06.230 --> 00:02:06.240
in your XML to your view model and the
 

00:02:06.240 --> 00:02:08.540
in your XML to your view model and the
live data stored within it if you use

00:02:08.540 --> 00:02:08.550
live data stored within it if you use
 

00:02:08.550 --> 00:02:10.190
live data stored within it if you use
data binding you're going to no longer

00:02:10.190 --> 00:02:10.200
data binding you're going to no longer
 

00:02:10.200 --> 00:02:11.990
data binding you're going to no longer
need to actually Mamie Li set up these

00:02:11.990 --> 00:02:12.000
need to actually Mamie Li set up these
 

00:02:12.000 --> 00:02:13.820
need to actually Mamie Li set up these
observers so instead of creating the

00:02:13.820 --> 00:02:13.830
observers so instead of creating the
 

00:02:13.830 --> 00:02:15.110
observers so instead of creating the
live data observer code that I showed

00:02:15.110 --> 00:02:15.120
live data observer code that I showed
 

00:02:15.120 --> 00:02:16.760
live data observer code that I showed
you before you could remove all that

00:02:16.760 --> 00:02:16.770
you before you could remove all that
 

00:02:16.770 --> 00:02:19.400
you before you could remove all that
boilerplate instead the text views xml

00:02:19.400 --> 00:02:19.410
boilerplate instead the text views xml
 

00:02:19.410 --> 00:02:22.220
boilerplate instead the text views xml
references that live data directly what

00:02:22.220 --> 00:02:22.230
references that live data directly what
 

00:02:22.230 --> 00:02:23.480
references that live data directly what
makes live down to different from other

00:02:23.480 --> 00:02:23.490
makes live down to different from other
 

00:02:23.490 --> 00:02:25.820
makes live down to different from other
observables is that it is also lifecycle

00:02:25.820 --> 00:02:25.830
observables is that it is also lifecycle
 

00:02:25.830 --> 00:02:27.890
observables is that it is also lifecycle
aware this means that it understands

00:02:27.890 --> 00:02:27.900
aware this means that it understands
 

00:02:27.900 --> 00:02:30.260
aware this means that it understands
whether your UI is on screen off screen

00:02:30.260 --> 00:02:30.270
whether your UI is on screen off screen
 

00:02:30.270 --> 00:02:32.900
whether your UI is on screen off screen
or destroyed live data knows about your

00:02:32.900 --> 00:02:32.910
or destroyed live data knows about your
 

00:02:32.910 --> 00:02:34.790
or destroyed live data knows about your
UI state because you pass it in when you

00:02:34.790 --> 00:02:34.800
UI state because you pass it in when you
 

00:02:34.800 --> 00:02:37.070
UI state because you pass it in when you
call observe okay so here are some

00:02:37.070 --> 00:02:37.080
call observe okay so here are some
 

00:02:37.080 --> 00:02:38.870
call observe okay so here are some
benefits of live datas lifecycle

00:02:38.870 --> 00:02:38.880
benefits of live datas lifecycle
 

00:02:38.880 --> 00:02:40.760
benefits of live datas lifecycle
awareness so let's say your activity is

00:02:40.760 --> 00:02:40.770
awareness so let's say your activity is
 

00:02:40.770 --> 00:02:42.710
awareness so let's say your activity is
not on screen then your live data

00:02:42.710 --> 00:02:42.720
not on screen then your live data
 

00:02:42.720 --> 00:02:44.780
not on screen then your live data
doesn't trigger useless UI updates if

00:02:44.780 --> 00:02:44.790
doesn't trigger useless UI updates if
 

00:02:44.790 --> 00:02:47.270
doesn't trigger useless UI updates if
the activity or UI gets destroyed that

00:02:47.270 --> 00:02:47.280
the activity or UI gets destroyed that
 

00:02:47.280 --> 00:02:48.980
the activity or UI gets destroyed that
the observation connection is cleaned up

00:02:48.980 --> 00:02:48.990
the observation connection is cleaned up
 

00:02:48.990 --> 00:02:50.870
the observation connection is cleaned up
automatically by live data thus you'll

00:02:50.870 --> 00:02:50.880
automatically by live data thus you'll
 

00:02:50.880 --> 00:02:52.730
automatically by live data thus you'll
never accidentally trigger an activity

00:02:52.730 --> 00:02:52.740
never accidentally trigger an activity
 

00:02:52.740 --> 00:02:54.260
never accidentally trigger an activity
or fragment that is off screen or

00:02:54.260 --> 00:02:54.270
or fragment that is off screen or
 

00:02:54.270 --> 00:02:56.840
or fragment that is off screen or
destroyed to redraw itself this is

00:02:56.840 --> 00:02:56.850
destroyed to redraw itself this is
 

00:02:56.850 --> 00:02:58.730
destroyed to redraw itself this is
possible in part because of interfaces

00:02:58.730 --> 00:02:58.740
possible in part because of interfaces
 

00:02:58.740 --> 00:03:00.380
possible in part because of interfaces
and classes in the lifecycle library

00:03:00.380 --> 00:03:00.390
and classes in the lifecycle library
 

00:03:00.390 --> 00:03:02.360
and classes in the lifecycle library
that are also used by framework classes

00:03:02.360 --> 00:03:02.370
that are also used by framework classes
 

00:03:02.370 --> 00:03:06.050
that are also used by framework classes
these classes are life cycle which is an

00:03:06.050 --> 00:03:06.060
these classes are life cycle which is an
 

00:03:06.060 --> 00:03:07.520
these classes are life cycle which is an
object that represents an android

00:03:07.520 --> 00:03:07.530
object that represents an android
 

00:03:07.530 --> 00:03:09.340
object that represents an android
lifecycle and what state it's in

00:03:09.340 --> 00:03:09.350
lifecycle and what state it's in
 

00:03:09.350 --> 00:03:11.690
lifecycle and what state it's in
lifecycle owner which is an interface

00:03:11.690 --> 00:03:11.700
lifecycle owner which is an interface
 

00:03:11.700 --> 00:03:14.090
lifecycle owner which is an interface
for objects that have a lifecycle like

00:03:14.090 --> 00:03:14.100
for objects that have a lifecycle like
 

00:03:14.100 --> 00:03:16.010
for objects that have a lifecycle like
app compat activity or an activity

00:03:16.010 --> 00:03:16.020
app compat activity or an activity
 

00:03:16.020 --> 00:03:18.680
app compat activity or an activity
fragment and finally lifecycle observer

00:03:18.680 --> 00:03:18.690
fragment and finally lifecycle observer
 

00:03:18.690 --> 00:03:20.750
fragment and finally lifecycle observer
which is an interface for observing a

00:03:20.750 --> 00:03:20.760
which is an interface for observing a
 

00:03:20.760 --> 00:03:23.720
which is an interface for observing a
lifecycle okay so live data is a

00:03:23.720 --> 00:03:23.730
lifecycle okay so live data is a
 

00:03:23.730 --> 00:03:26.300
lifecycle okay so live data is a
lifecycle observer it abstract away the

00:03:26.300 --> 00:03:26.310
lifecycle observer it abstract away the
 

00:03:26.310 --> 00:03:27.949
lifecycle observer it abstract away the
need for you to deal directly with

00:03:27.949 --> 00:03:27.959
need for you to deal directly with
 

00:03:27.959 --> 00:03:30.500
need for you to deal directly with
activity or fragment lifecycle so those

00:03:30.500 --> 00:03:30.510
activity or fragment lifecycle so those
 

00:03:30.510 --> 00:03:31.940
activity or fragment lifecycle so those
are the basics of working with live data

00:03:31.940 --> 00:03:31.950
are the basics of working with live data
 

00:03:31.950 --> 00:03:34.070
are the basics of working with live data
and why it's useful I'm going to touch

00:03:34.070 --> 00:03:34.080
and why it's useful I'm going to touch
 

00:03:34.080 --> 00:03:36.710
and why it's useful I'm going to touch
on a few more complex usages room is

00:03:36.710 --> 00:03:36.720
on a few more complex usages room is
 

00:03:36.720 --> 00:03:39.259
on a few more complex usages room is
built to work well with live data room

00:03:39.259 --> 00:03:39.269
built to work well with live data room
 

00:03:39.269 --> 00:03:41.120
built to work well with live data room
can return live data objects which are

00:03:41.120 --> 00:03:41.130
can return live data objects which are
 

00:03:41.130 --> 00:03:42.680
can return live data objects which are
automatically notified when the data

00:03:42.680 --> 00:03:42.690
automatically notified when the data
 

00:03:42.690 --> 00:03:44.780
automatically notified when the data
base data changes and have their data

00:03:44.780 --> 00:03:44.790
base data changes and have their data
 

00:03:44.790 --> 00:03:47.150
base data changes and have their data
loaded in a background thread this makes

00:03:47.150 --> 00:03:47.160
loaded in a background thread this makes
 

00:03:47.160 --> 00:03:49.009
loaded in a background thread this makes
it easy to have the UI update when your

00:03:49.009 --> 00:03:49.019
it easy to have the UI update when your
 

00:03:49.019 --> 00:03:50.990
it easy to have the UI update when your
database updates you can go ahead and

00:03:50.990 --> 00:03:51.000
database updates you can go ahead and
 

00:03:51.000 --> 00:03:52.070
database updates you can go ahead and
learn more about room in the

00:03:52.070 --> 00:03:52.080
learn more about room in the
 

00:03:52.080 --> 00:03:54.470
learn more about room in the
introduction to room video live data

00:03:54.470 --> 00:03:54.480
introduction to room video live data
 

00:03:54.480 --> 00:03:56.630
introduction to room video live data
also provides transformations including

00:03:56.630 --> 00:03:56.640
also provides transformations including
 

00:03:56.640 --> 00:03:58.640
also provides transformations including
map switch map and a class called

00:03:58.640 --> 00:03:58.650
map switch map and a class called
 

00:03:58.650 --> 00:04:00.470
map switch map and a class called
mediator live data for your own custom

00:04:00.470 --> 00:04:00.480
mediator live data for your own custom
 

00:04:00.480 --> 00:04:02.960
mediator live data for your own custom
transformations map lets you apply a

00:04:02.960 --> 00:04:02.970
transformations map lets you apply a
 

00:04:02.970 --> 00:04:04.759
transformations map lets you apply a
function to the output of live data a

00:04:04.759 --> 00:04:04.769
function to the output of live data a
 

00:04:04.769 --> 00:04:06.680
function to the output of live data a
and then propagate the results down

00:04:06.680 --> 00:04:06.690
and then propagate the results down
 

00:04:06.690 --> 00:04:09.320
and then propagate the results down
straight to live data B for example you

00:04:09.320 --> 00:04:09.330
straight to live data B for example you
 

00:04:09.330 --> 00:04:11.150
straight to live data B for example you
can use live data to take a user object

00:04:11.150 --> 00:04:11.160
can use live data to take a user object
 

00:04:11.160 --> 00:04:13.850
can use live data to take a user object
and instead output a string of the users

00:04:13.850 --> 00:04:13.860
and instead output a string of the users
 

00:04:13.860 --> 00:04:16.490
and instead output a string of the users
combined first and last name the switch

00:04:16.490 --> 00:04:16.500
combined first and last name the switch
 

00:04:16.500 --> 00:04:18.680
combined first and last name the switch
map function transformation is a lot

00:04:18.680 --> 00:04:18.690
map function transformation is a lot
 

00:04:18.690 --> 00:04:20.750
map function transformation is a lot
like map but for mapping functions that

00:04:20.750 --> 00:04:20.760
like map but for mapping functions that
 

00:04:20.760 --> 00:04:23.840
like map but for mapping functions that
emit live data instead of values so an

00:04:23.840 --> 00:04:23.850
emit live data instead of values so an
 

00:04:23.850 --> 00:04:25.880
emit live data instead of values so an
example here is if you have a bunch of

00:04:25.880 --> 00:04:25.890
example here is if you have a bunch of
 

00:04:25.890 --> 00:04:28.180
example here is if you have a bunch of
users perhaps stored in a room

00:04:28.180 --> 00:04:28.190
users perhaps stored in a room
 

00:04:28.190 --> 00:04:29.680
users perhaps stored in a room
you might have a lookup function for

00:04:29.680 --> 00:04:29.690
you might have a lookup function for
 

00:04:29.690 --> 00:04:32.290
you might have a lookup function for
those users using switch map you'd have

00:04:32.290 --> 00:04:32.300
those users using switch map you'd have
 

00:04:32.300 --> 00:04:33.879
those users using switch map you'd have
a live data for the user ID

00:04:33.879 --> 00:04:33.889
a live data for the user ID
 

00:04:33.889 --> 00:04:36.939
a live data for the user ID
whenever the ID changes your user lookup

00:04:36.939 --> 00:04:36.949
whenever the ID changes your user lookup
 

00:04:36.949 --> 00:04:38.490
whenever the ID changes your user lookup
function would be called with that ID

00:04:38.490 --> 00:04:38.500
function would be called with that ID
 

00:04:38.500 --> 00:04:41.379
function would be called with that ID
the results live data now reference is

00:04:41.379 --> 00:04:41.389
the results live data now reference is
 

00:04:41.389 --> 00:04:43.450
the results live data now reference is
the newly found user live data okay so

00:04:43.450 --> 00:04:43.460
the newly found user live data okay so
 

00:04:43.460 --> 00:04:45.399
the newly found user live data okay so
no matter how many different times you

00:04:45.399 --> 00:04:45.409
no matter how many different times you
 

00:04:45.409 --> 00:04:46.930
no matter how many different times you
call this lookup function again a

00:04:46.930 --> 00:04:46.940
call this lookup function again a
 

00:04:46.940 --> 00:04:49.390
call this lookup function again a
different live data your UI only needs

00:04:49.390 --> 00:04:49.400
different live data your UI only needs
 

00:04:49.400 --> 00:04:51.249
different live data your UI only needs
to observe the result live data at once

00:04:51.249 --> 00:04:51.259
to observe the result live data at once
 

00:04:51.259 --> 00:04:53.920
to observe the result live data at once
which is the power of switch map now if

00:04:53.920 --> 00:04:53.930
which is the power of switch map now if
 

00:04:53.930 --> 00:04:54.999
which is the power of switch map now if
you want to go ahead and make your own

00:04:54.999 --> 00:04:55.009
you want to go ahead and make your own
 

00:04:55.009 --> 00:04:56.950
you want to go ahead and make your own
custom data transformations you should

00:04:56.950 --> 00:04:56.960
custom data transformations you should
 

00:04:56.960 --> 00:04:58.510
custom data transformations you should
take a look at the mediator live data

00:04:58.510 --> 00:04:58.520
take a look at the mediator live data
 

00:04:58.520 --> 00:05:00.909
take a look at the mediator live data
class mediator live data includes

00:05:00.909 --> 00:05:00.919
class mediator live data includes
 

00:05:00.919 --> 00:05:03.129
class mediator live data includes
methods to add and remove source live

00:05:03.129 --> 00:05:03.139
methods to add and remove source live
 

00:05:03.139 --> 00:05:05.499
methods to add and remove source live
data objects you can then combine and

00:05:05.499 --> 00:05:05.509
data objects you can then combine and
 

00:05:05.509 --> 00:05:06.820
data objects you can then combine and
propagate events from all of these

00:05:06.820 --> 00:05:06.830
propagate events from all of these
 

00:05:06.830 --> 00:05:09.430
propagate events from all of these
sources downstream getting started with

00:05:09.430 --> 00:05:09.440
sources downstream getting started with
 

00:05:09.440 --> 00:05:11.260
sources downstream getting started with
live data is simple but there is a lot

00:05:11.260 --> 00:05:11.270
live data is simple but there is a lot
 

00:05:11.270 --> 00:05:13.120
live data is simple but there is a lot
of potential for experimentation with

00:05:13.120 --> 00:05:13.130
of potential for experimentation with
 

00:05:13.130 --> 00:05:14.620
of potential for experimentation with
this life cycle where observable

00:05:14.620 --> 00:05:14.630
this life cycle where observable
 

00:05:14.630 --> 00:05:16.779
this life cycle where observable
hopefully this is inspired you to build

00:05:16.779 --> 00:05:16.789
hopefully this is inspired you to build
 

00:05:16.789 --> 00:05:18.279
hopefully this is inspired you to build
something and as always the

00:05:18.279 --> 00:05:18.289
something and as always the
 

00:05:18.289 --> 00:05:21.219
something and as always the
documentation is linked

