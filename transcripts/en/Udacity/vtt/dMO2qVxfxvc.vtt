WEBVTT
Kind: captions
Language: en

00:00:00.220 --> 00:00:03.750
One way of cheating on associativity
is called way prediction.

00:00:03.750 --> 00:00:07.840
We start with a set-associative
cache which has a low miss rate but

00:00:07.840 --> 00:00:09.310
would have a slow hit time.

00:00:09.310 --> 00:00:15.488
Now what we do, we guess which line
in the set is the most likely to hit.

00:00:15.488 --> 00:00:19.140
So what we do is we use the index
bits to determine which set should we

00:00:19.140 --> 00:00:23.750
be looking at and now instead of reading
out all the tags in that line and

00:00:23.750 --> 00:00:27.410
checking which one hits, we guess
which one is the likely to hit and

00:00:27.410 --> 00:00:28.650
just check that one.

00:00:28.650 --> 00:00:31.953
So this gives us the access
time similar to a direct-mapped

00:00:31.953 --> 00:00:33.485
cache if we guessed right.

00:00:33.485 --> 00:00:38.810
If we are wrong,
then we got no hit on the line we tried.

00:00:38.810 --> 00:00:41.190
But the set has other lines, so

00:00:41.190 --> 00:00:45.970
we try a normal set-associative check,
which will have a higher hit time.

00:00:45.970 --> 00:00:51.870
So the idea is that, overall, our miss
rate is that of a set-associative cache.

00:00:51.870 --> 00:00:53.980
We either find it this way or this way.

00:00:55.000 --> 00:00:58.230
So the miss rate will be
similar to a set-associative

00:00:58.230 --> 00:01:01.300
cache because even if we didn't find
it in a kind of direct-mapped way,

00:01:01.300 --> 00:01:03.210
we will find it this way.

00:01:03.210 --> 00:01:06.210
But the hit time,
if our guesses are mostly right,

00:01:06.210 --> 00:01:09.300
is mostly that of a direct-mapped cache.

00:01:09.300 --> 00:01:14.030
So we have combined the low miss
rate of a set-associative cache with

00:01:14.030 --> 00:01:17.850
most of the time getting the hit time of
a direct-mapped cache and sometimes only

00:01:17.850 --> 00:01:22.000
having to suffer the longer hit time
of a normal set-associative cache.

