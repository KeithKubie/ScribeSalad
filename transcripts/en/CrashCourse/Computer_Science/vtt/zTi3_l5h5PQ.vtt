WEBVTT
Kind: captions
Language: en

00:00:03.160 --> 00:00:06.160
Hi, I’m Carrie Anne, and welcome to Crash
Course Computer Science!

00:00:06.160 --> 00:00:10.420
One of the most dramatic changes enabled by
computing technology has been the creation

00:00:10.420 --> 00:00:12.500
and widespread availability of information.

00:00:12.500 --> 00:00:15.940
There are currently 1.3 billion websites on
the internet.

00:00:15.950 --> 00:00:20.260
Wikipedia alone has five million English language
articles, spanning everything from the Dancing

00:00:20.260 --> 00:00:23.520
Plague of 1518 to proper toilet paper roll
orientation.

00:00:23.520 --> 00:00:27.640
Every day, Google serves up four billion searches
to access this information.

00:00:27.640 --> 00:00:32.970
And every minute, 3.5 million videos are viewed
on Youtube, and 400 hours of NEW video get

00:00:32.970 --> 00:00:34.240
uploaded by users.

00:00:34.240 --> 00:00:37.760
Lots of these views are people watching Gangnam
Style and Despacito.

00:00:37.760 --> 00:00:42.100
But another large percentage could be considered educational, like what you’re doing right now.

00:00:42.100 --> 00:00:45.920
This amazing treasure trove of information
can be accessed with just a few taps on your

00:00:45.920 --> 00:00:46.500
smartphone.

00:00:46.520 --> 00:00:47.920
Anywhere, anytime.

00:00:47.940 --> 00:00:51.120
But, having information available isn’t
the same as learning from it.

00:00:51.120 --> 00:00:55.440
To be clear, we here at Crash Course we are
big fans of interactive in-class learning,

00:00:55.440 --> 00:00:59.820
directed conversations, and hands-on experiences
as powerful tools for learning.

00:00:59.820 --> 00:01:03.660
But we also believe in the additive power
of educational technology both inside and

00:01:03.660 --> 00:01:04.850
outside the classroom.

00:01:04.850 --> 00:01:09.190
So today we’re going to go a little meta,
and talk specifically about how computer science

00:01:09.190 --> 00:01:11.720
can support learning with educational technology.

00:01:11.720 --> 00:01:20.620
Intro

00:01:20.620 --> 00:01:25.100
Technology, from paper and pencil to recent
machine-learning-based intelligent systems,

00:01:25.100 --> 00:01:29.380
has been supporting education for millennia
- even as early as humans drawing cave paintings

00:01:29.380 --> 00:01:31.820
to record hunting scenes for posterity.

00:01:31.820 --> 00:01:35.620
Teaching people at a distance has long been
a driver of educational technology.

00:01:35.620 --> 00:01:40.130
For example, around 50 CE, St. Paul was sending
epistles that offered lessons on religious

00:01:40.130 --> 00:01:42.930
teachings for new churches being set up in
Asia.

00:01:42.930 --> 00:01:47.580
Since then, several major waves of technological
advances have each promised to revolutionize

00:01:47.580 --> 00:01:51.320
education, from radio and television, to DVDs
and laserdiscs.

00:01:51.320 --> 00:01:55.090
In fact, as far back as 1913, Thomas Edison
predicted,

00:01:55.090 --> 00:01:57.920
“Books will soon be obsolete in the schools…

00:01:57.920 --> 00:02:01.979
It is possible to teach every branch of human
knowledge with the motion picture.

00:02:01.980 --> 00:02:05.520
Our school system will be completely changed
in the next ten years.”

00:02:05.520 --> 00:02:07.620
Of course, you know that didn’t happen.

00:02:07.620 --> 00:02:12.100
But distributing educational materials in
formats like video has become more and more popular.

00:02:12.100 --> 00:02:16.320
Before we discuss what educational technology
research can do for you, there are some simple

00:02:16.320 --> 00:02:20.380
things research has shown you can do, while
watching an educational video like this one,

00:02:20.380 --> 00:02:22.520
to significantly increase what you learn and
retain.

00:02:22.520 --> 00:02:27.240
First, video is naturally adjustable, so make
sure the pacing is right for you, by using

00:02:27.240 --> 00:02:28.950
the video speed controls.

00:02:28.950 --> 00:02:32.040
On YouTube, you can do that in the right hand
corner of the screen.

00:02:32.040 --> 00:02:36.380
You should be able to understand the video
and have enough time to reflect on the content.

00:02:36.380 --> 00:02:37.730
Second, pause!

00:02:37.730 --> 00:02:40.730
You learn more if you stop the video at the
difficult parts.

00:02:40.730 --> 00:02:44.840
When you do, ask yourself questions about
what you’ve watched, and see if you can answer.

00:02:44.840 --> 00:02:48.720
Or ask yourself questions about what might
be coming up next, and then play the video

00:02:48.720 --> 00:02:49.780
to see if you’re right.

00:02:49.780 --> 00:02:54.240
Third, try any examples or exercises that
are presented in the video on your own.

00:02:54.240 --> 00:02:59.340
Even if you aren’t a programmer, write pseudocode
on paper, and maybe even give coding a try.

00:02:59.340 --> 00:03:03.000
Active learning techniques like these have
been shown to increase learning by a factor

00:03:03.000 --> 00:03:04.000
of ten.

00:03:04.000 --> 00:03:07.099
And if you want more information like this
- we’ve got a whole course on it here.

00:03:07.099 --> 00:03:11.459
The idea of video as a way to spread quality
education has appealed to a lot of people

00:03:11.459 --> 00:03:12.690
over the last century.

00:03:12.690 --> 00:03:17.489
What’s just the latest incarnation of this
idea came in the form of Massive Open Online

00:03:17.489 --> 00:03:18.760
Courses, or MOOCs.

00:03:18.760 --> 00:03:22.180
In fact, the New York Times declared 2012
the Year of the MOOC!

00:03:22.180 --> 00:03:25.940
A lot of the early forms were just videos
of lectures from famous professors.

00:03:25.940 --> 00:03:30.060
But for a while, some people thought this
might mean the end of universities as we know them.

00:03:30.080 --> 00:03:34.160
Whether you were worried about this idea or
excited by it, that future also hasn’t really

00:03:34.160 --> 00:03:37.060
come to pass and most of the hype has dissipated.

00:03:37.070 --> 00:03:41.160
This is probably mostly because when you try
to scale up learning using technology to include

00:03:41.160 --> 00:03:45.590
millions of students simultaneously with small
numbers of instructional staff - or even none

00:03:45.590 --> 00:03:47.770
- you run into a lot of problems.

00:03:47.770 --> 00:03:51.540
Fortunately, these problems have intrigued
computer scientists and more specifically,

00:03:51.540 --> 00:03:54.980
educational technologists, who are finding
ways to solve them.

00:03:54.980 --> 00:03:59.100
For example, effective learning involves getting
timely and relevant feedback – but how do

00:03:59.110 --> 00:04:02.720
you give good feedback when you have millions
of learners and only one teacher?

00:04:02.720 --> 00:04:05.880
For that matter, how does a teacher grade
a million assignments?

00:04:05.880 --> 00:04:10.160
Solving many of these problems means creating
hybrid, human-technology systems.

00:04:10.170 --> 00:04:14.020
A useful, but controversial insight, was that
students could be a great resource to give

00:04:14.030 --> 00:04:15.140
each other feedback.

00:04:15.140 --> 00:04:18.850
Unfortunately, they’re often pretty bad
at doing so – they’re neither experts

00:04:18.850 --> 00:04:20.780
in the subject matter, nor teachers.

00:04:20.780 --> 00:04:23.460
However, we can support their efforts with
technology.

00:04:23.460 --> 00:04:28.360
Like, by using algorithms, we can match perfect
learning partners together, out of potentially

00:04:28.360 --> 00:04:29.420
millions of groupings.

00:04:29.420 --> 00:04:34.320
Also, parts of the grading can be done with
automated systems while humans do the rest.

00:04:34.320 --> 00:04:38.470
For instance, computer algorithms that grade
the writing portions of the SATs have been

00:04:38.470 --> 00:04:41.960
found to be just as accurate as humans hired
to grade them by hand.

00:04:41.960 --> 00:04:46.180
Other algorithms are being developed that
provide personalized learning experiences,

00:04:46.180 --> 00:04:51.340
much like Netflix’s personalized movie recommendations or Google’s personalized search results.

00:04:51.340 --> 00:04:55.280
To achieve this, the software needs to understand
what a learner knows and doesn’t know.

00:04:55.280 --> 00:04:59.280
With that understanding, the software can
present the right material, at the right time,

00:04:59.280 --> 00:05:03.410
to give each particular learner practice on
the things that are hardest for them, rather

00:05:03.410 --> 00:05:05.200
than what they’re already good at.

00:05:05.200 --> 00:05:08.980
Such systems – most often powered by Artificial
Intelligence – are broadly called

00:05:08.980 --> 00:05:10.920
Intelligent Tutoring Systems.

00:05:10.920 --> 00:05:14.310
Let’s break down a hypothetical system that
follows common conventions.

00:05:14.310 --> 00:05:19.460
So, imagine a student is working on this algebra
problem in our hypothetical tutoring software.

00:05:19.460 --> 00:05:22.759
The correct next step to solve it, is to subtract
both sides by 7.

00:05:22.760 --> 00:05:27.160
The knowledge required to do this step can
be represented by something called a production rule.

00:05:27.160 --> 00:05:29.980
These describe procedures as IF-THEN statements.

00:05:29.990 --> 00:05:33.880
The pseudo code of a production rule for this
step would say if there is a constant on the

00:05:33.880 --> 00:05:37.740
same side as the variable, then subtract that
constant from both sides.

00:05:37.740 --> 00:05:41.330
The cool thing about production rules is that
they can also be used to represent common

00:05:41.330 --> 00:05:43.210
mistakes a student might make.

00:05:43.210 --> 00:05:45.449
These production rules are called “buggy
rules”.

00:05:45.449 --> 00:05:50.180
For example, instead of subtracting the constant,
the student might mistakenly try to subtract

00:05:50.180 --> 00:05:51.180
the coefficient.

00:05:51.180 --> 00:05:52.260
No can do!

00:05:52.260 --> 00:05:56.460
It’s totally possible that multiple competing
production rules are triggered after a student

00:05:56.460 --> 00:06:01.280
completes a step – it may not be entirely
clear what misconception has led to a student’s answer.

00:06:01.280 --> 00:06:05.460
So, production rules are combined with an
algorithm that selects the most likely one.

00:06:05.480 --> 00:06:08.180
That way, the student can be given a helpful
piece of feedback.

00:06:08.180 --> 00:06:11.820
These production rules, and the selection
algorithm, combine to form what’s called

00:06:11.830 --> 00:06:16.660
a Domain Model, which is a formal representation
of the knowledge, procedures and skills of

00:06:16.669 --> 00:06:18.800
a particular discipline - like algebra.

00:06:18.800 --> 00:06:23.000
Domain models can be used to assist learners
on any individual problem, but they’re insufficient

00:06:23.000 --> 00:06:26.150
for helping learners move through a whole
curriculum because they don’t track any

00:06:26.150 --> 00:06:27.520
progress over time.

00:06:27.520 --> 00:06:31.630
For that, intelligent tutoring systems build
and maintain a student model – one that

00:06:31.630 --> 00:06:35.380
tracks, among other things, what production
rules a student has mastered, and where they

00:06:35.380 --> 00:06:36.720
still need practice.

00:06:36.720 --> 00:06:39.500
This is exactly what we need to properly personalize
the tutor.

00:06:39.500 --> 00:06:43.080
That doesn’t sound so hard, but it’s actually
a big challenge to figure out what a student

00:06:43.080 --> 00:06:46.139
knows and doesn’t know based only on their
answers to problems.

00:06:46.139 --> 00:06:49.970
A common technique for figuring this out is
Bayesian knowledge tracing.

00:06:49.970 --> 00:06:54.100
The algorithm treats student knowledge as
a set of latent variables, which are variables

00:06:54.100 --> 00:06:58.020
whose true value is hidden from an outside
observer, like our software.

00:06:58.020 --> 00:07:02.550
This is also true in the physical world, where
a teacher would not know for certain whether

00:07:02.550 --> 00:07:04.030
a student knows something completely.

00:07:04.030 --> 00:07:08.680
Instead, they might probe that knowledge using a test to see if the student gets the right answer.

00:07:08.700 --> 00:07:12.830
Similarly, Bayesian knowledge tracing updates
its estimate of the students’ knowledge

00:07:12.830 --> 00:07:15.940
by observing the correctness of each interaction
using that skill.

00:07:15.949 --> 00:07:18.919
To do this, the software maintains four probabilities..

00:07:18.919 --> 00:07:23.000
First is the probability that a student has
learned how to do a particular skill.

00:07:23.000 --> 00:07:27.240
For example, the skill of subtracting constants
from both sides of an algebraic equation.

00:07:27.240 --> 00:07:31.160
Let’s say our student correctly subtracts
both sides by 7.

00:07:31.160 --> 00:07:35.010
Because she got the problem correct, we might
assume she knows how to do this step.

00:07:35.010 --> 00:07:38.730
But there’s also the possibility that the
student got it correct by accident, and doesn’t

00:07:38.730 --> 00:07:40.979
actually understand how to solve the problem.

00:07:40.980 --> 00:07:42.740
This is the probability of guess.

00:07:42.740 --> 00:07:46.480
Similarly, if the student gets it wrong, you
might assume that she doesn’t know how to

00:07:46.490 --> 00:07:47.480
do the step.

00:07:47.480 --> 00:07:52.100
But, there’s also the possibility that she
knows it, but made a careless error or other slip-up.

00:07:52.160 --> 00:07:54.160
This is called the probability of slip.

00:07:54.170 --> 00:07:58.180
The last probability that Bayesian knowledge
tracing calculates is the probability that

00:07:58.180 --> 00:08:02.410
the student started off the problem not knowing
how to do the step, but learned how to do

00:08:02.410 --> 00:08:04.889
it as a result of working through the problem.

00:08:04.889 --> 00:08:06.990
This is called the probability of transit.

00:08:06.990 --> 00:08:11.210
These four probabilities are used in a set
of equations that update the student model,

00:08:11.210 --> 00:08:14.460
keeping a running assessment for each skill
the student is supposed to know.

00:08:14.460 --> 00:08:17.880
The first equation asks: what’s the probability
that the student has learned a particular

00:08:17.880 --> 00:08:22.760
skill which takes into account the probability
that it was already learned previously and

00:08:22.760 --> 00:08:24.140
the probability of transit.

00:08:24.140 --> 00:08:28.260
Like a teacher, our estimate of this probability that it was already learned previously

00:08:28.260 --> 00:08:31.660
depends on whether we observe a student getting a question correct or incorrect,

00:08:31.660 --> 00:08:34.200
and so we have these two equations to pick from.

00:08:34.209 --> 00:08:38.879
After we compute the right value, we plug
it into our first equation, updating the probability

00:08:38.879 --> 00:08:42.939
that a student has learned a particular skill,
which then gets stored in their student model.

00:08:42.939 --> 00:08:47.199
Although there are other approaches, intelligent
tutoring systems often use Bayesian knowledge

00:08:47.199 --> 00:08:51.489
tracing to support what’s called mastery
learning, where students practice skills,

00:08:51.489 --> 00:08:52.919
until they’re deeply understood.

00:08:52.919 --> 00:08:56.579
To do this most efficiently, the software
selects the best problems to present to the

00:08:56.580 --> 00:09:01.020
student to achieve mastery, what’s called
adaptive sequencing, which is one form of

00:09:01.020 --> 00:09:02.140
personalization.

00:09:02.140 --> 00:09:05.700
But, our example is still just dealing with
data from one student.

00:09:05.700 --> 00:09:10.420
Internet-connected educational apps or sites now allow teachers and researchers the ability

00:09:10.420 --> 00:09:12.820
to collect data from millions of learners.

00:09:12.829 --> 00:09:17.399
From that data, we can discover things like
common pitfalls and where students get frustrated.

00:09:17.399 --> 00:09:21.399
Beyond student responses to questions, this
can be done by looking at how long they pause

00:09:21.399 --> 00:09:25.569
before entering an answer, where they speed
up a video, and how they interact with other

00:09:25.569 --> 00:09:27.220
students on discussion forums.

00:09:27.220 --> 00:09:31.900
This field is called Educational Data Mining,
and it has the ability to use all those facepalms

00:09:31.910 --> 00:09:35.760
and “ah ha” moments to help improve personalized
learning in the future.

00:09:35.780 --> 00:09:40.300
Speaking of the future, educational technologists
have often drawn inspiration for their innovations

00:09:40.300 --> 00:09:41.700
from science fiction.

00:09:41.700 --> 00:09:45.760
In particular, many researchers were inspired
by the future envisioned in the book

00:09:45.760 --> 00:09:47.800
"The Diamond Age" by Neal Stephenson.

00:09:47.810 --> 00:09:51.640
It describes a young girl who learns from
a book that has a set of virtual agents who

00:09:51.649 --> 00:09:56.040
interact with her in natural language acting
as coaches, teachers, and mentors who grow

00:09:56.040 --> 00:09:58.110
and change with her as she grows up.

00:09:58.110 --> 00:10:01.470
They can detect what she knows and how’s
she’s feeling, and give just the right feedback

00:10:01.470 --> 00:10:03.160
and support to help her learn.

00:10:03.160 --> 00:10:07.660
Today, there are non-science-fiction researchers,
such as Justine Cassell, crafting pedagogical

00:10:07.660 --> 00:10:12.300
virtual agents that can “exhibit the verbal
and bodily behaviors found in conversation

00:10:12.300 --> 00:10:17.800
among humans, and in doing so, build trust, rapport and even friendship with their human students."

00:10:17.800 --> 00:10:22.780
Maybe Crash Course in 2040 will have a little John Green A.I. that lives on your iPhone 30.

00:10:22.780 --> 00:10:26.660
Educational technology and devices are now
moving off of laptop and desktop computers,

00:10:26.660 --> 00:10:32.220
and onto huge tabletop surfaces, where students
can collaborate in groups, and also tiny mobile

00:10:32.220 --> 00:10:34.300
devices, where students can learn on the go.

00:10:34.300 --> 00:10:38.759
Virtual reality and augmented reality are
also getting people excited and enabling new

00:10:38.759 --> 00:10:44.100
educational experiences for learners – diving
deep under the oceans, exploring outer space,

00:10:44.100 --> 00:10:47.939
traveling through the human body, or interacting
with cultures they might never encounter in

00:10:47.939 --> 00:10:48.939
their real lives.

00:10:48.939 --> 00:10:54.049
If we look far into the future, educational
interfaces might disappear entirely, and instead

00:10:54.049 --> 00:10:58.500
happen through direct brain learning, where
people can be uploaded with new skills, directly

00:10:58.500 --> 00:10:59.899
into their brains.

00:10:59.899 --> 00:11:04.639
This might seem really far fetched, but scientists
are making inroads already - such as detecting

00:11:04.640 --> 00:11:07.280
whether someone knows something just from
their brain signals.

00:11:07.280 --> 00:11:11.720
That leads to an interesting question: if
we can download things INTO our brains, could

00:11:11.720 --> 00:11:14.380
we also upload the contents of our brains?

00:11:14.380 --> 00:11:18.620
We’ll explore that in our series finale
next week about the far future of computing.

00:11:18.620 --> 00:11:19.720
I'll see you then.

