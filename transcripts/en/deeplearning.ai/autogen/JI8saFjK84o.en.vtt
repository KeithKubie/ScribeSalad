WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.330
most computer vision tasks could use

00:00:02.330 --> 00:00:02.340
most computer vision tasks could use
 

00:00:02.340 --> 00:00:05.780
most computer vision tasks could use
more data and so data augmentation is

00:00:05.780 --> 00:00:05.790
more data and so data augmentation is
 

00:00:05.790 --> 00:00:08.000
more data and so data augmentation is
one of the techniques that is often used

00:00:08.000 --> 00:00:08.010
one of the techniques that is often used
 

00:00:08.010 --> 00:00:10.669
one of the techniques that is often used
to improve the performance of computer

00:00:10.669 --> 00:00:10.679
to improve the performance of computer
 

00:00:10.679 --> 00:00:13.249
to improve the performance of computer
vision systems I think that can be the

00:00:13.249 --> 00:00:13.259
vision systems I think that can be the
 

00:00:13.259 --> 00:00:15.589
vision systems I think that can be the
vision is a pretty complicated task you

00:00:15.589 --> 00:00:15.599
vision is a pretty complicated task you
 

00:00:15.599 --> 00:00:17.450
vision is a pretty complicated task you
have to input this image all these

00:00:17.450 --> 00:00:17.460
have to input this image all these
 

00:00:17.460 --> 00:00:20.540
have to input this image all these
pixels and then figure out what is in

00:00:20.540 --> 00:00:20.550
pixels and then figure out what is in
 

00:00:20.550 --> 00:00:23.029
pixels and then figure out what is in
this picture and it seems like you need

00:00:23.029 --> 00:00:23.039
this picture and it seems like you need
 

00:00:23.039 --> 00:00:24.890
this picture and it seems like you need
to learn them decently complicated

00:00:24.890 --> 00:00:24.900
to learn them decently complicated
 

00:00:24.900 --> 00:00:28.160
to learn them decently complicated
function to do that and in practice for

00:00:28.160 --> 00:00:28.170
function to do that and in practice for
 

00:00:28.170 --> 00:00:30.560
function to do that and in practice for
almost all computer vision tasks having

00:00:30.560 --> 00:00:30.570
almost all computer vision tasks having
 

00:00:30.570 --> 00:00:33.350
almost all computer vision tasks having
more data will help this is unlike some

00:00:33.350 --> 00:00:33.360
more data will help this is unlike some
 

00:00:33.360 --> 00:00:35.630
more data will help this is unlike some
other domains where sometimes you can

00:00:35.630 --> 00:00:35.640
other domains where sometimes you can
 

00:00:35.640 --> 00:00:37.520
other domains where sometimes you can
get enough data that you don't feel as

00:00:37.520 --> 00:00:37.530
get enough data that you don't feel as
 

00:00:37.530 --> 00:00:39.799
get enough data that you don't feel as
much pressure to get even more data but

00:00:39.799 --> 00:00:39.809
much pressure to get even more data but
 

00:00:39.809 --> 00:00:41.360
much pressure to get even more data but
I think today the state of computer

00:00:41.360 --> 00:00:41.370
I think today the state of computer
 

00:00:41.370 --> 00:00:43.220
I think today the state of computer
vision is that for the majority of

00:00:43.220 --> 00:00:43.230
vision is that for the majority of
 

00:00:43.230 --> 00:00:45.529
vision is that for the majority of
computer vision problems we feel like we

00:00:45.529 --> 00:00:45.539
computer vision problems we feel like we
 

00:00:45.539 --> 00:00:48.049
computer vision problems we feel like we
just can't get enough data and this is

00:00:48.049 --> 00:00:48.059
just can't get enough data and this is
 

00:00:48.059 --> 00:00:49.880
just can't get enough data and this is
not true for all applications of machine

00:00:49.880 --> 00:00:49.890
not true for all applications of machine
 

00:00:49.890 --> 00:00:51.979
not true for all applications of machine
learning but it does feel like it's true

00:00:51.979 --> 00:00:51.989
learning but it does feel like it's true
 

00:00:51.989 --> 00:00:54.260
learning but it does feel like it's true
for computer vision so what that means

00:00:54.260 --> 00:00:54.270
for computer vision so what that means
 

00:00:54.270 --> 00:00:56.150
for computer vision so what that means
is that when you're training in computer

00:00:56.150 --> 00:00:56.160
is that when you're training in computer
 

00:00:56.160 --> 00:00:58.910
is that when you're training in computer
vision model often data augmentation

00:00:58.910 --> 00:00:58.920
vision model often data augmentation
 

00:00:58.920 --> 00:01:00.979
vision model often data augmentation
will help and this is true whether

00:01:00.979 --> 00:01:00.989
will help and this is true whether
 

00:01:00.989 --> 00:01:02.810
will help and this is true whether
you're using transfer learning and using

00:01:02.810 --> 00:01:02.820
you're using transfer learning and using
 

00:01:02.820 --> 00:01:04.789
you're using transfer learning and using
someone else's pre-trained brains to

00:01:04.789 --> 00:01:04.799
someone else's pre-trained brains to
 

00:01:04.799 --> 00:01:06.770
someone else's pre-trained brains to
start or whether you're trying to train

00:01:06.770 --> 00:01:06.780
start or whether you're trying to train
 

00:01:06.780 --> 00:01:09.260
start or whether you're trying to train
something yourself from scratch let's

00:01:09.260 --> 00:01:09.270
something yourself from scratch let's
 

00:01:09.270 --> 00:01:10.880
something yourself from scratch let's
take a look at the common data

00:01:10.880 --> 00:01:10.890
take a look at the common data
 

00:01:10.890 --> 00:01:13.179
take a look at the common data
augmentation methods in computer vision

00:01:13.179 --> 00:01:13.189
augmentation methods in computer vision
 

00:01:13.189 --> 00:01:16.280
augmentation methods in computer vision
perhaps the simplest data augmentation

00:01:16.280 --> 00:01:16.290
perhaps the simplest data augmentation
 

00:01:16.290 --> 00:01:19.390
perhaps the simplest data augmentation
method is mirroring on the vertical axis

00:01:19.390 --> 00:01:19.400
method is mirroring on the vertical axis
 

00:01:19.400 --> 00:01:21.920
method is mirroring on the vertical axis
where if you have this example in your

00:01:21.920 --> 00:01:21.930
where if you have this example in your
 

00:01:21.930 --> 00:01:24.530
where if you have this example in your
training set you flip it horizontally to

00:01:24.530 --> 00:01:24.540
training set you flip it horizontally to
 

00:01:24.540 --> 00:01:27.830
training set you flip it horizontally to
get that image on the right and for most

00:01:27.830 --> 00:01:27.840
get that image on the right and for most
 

00:01:27.840 --> 00:01:29.929
get that image on the right and for most
computer vision tasks if the left

00:01:29.929 --> 00:01:29.939
computer vision tasks if the left
 

00:01:29.939 --> 00:01:32.210
computer vision tasks if the left
picture is a cat then mirroring in this

00:01:32.210 --> 00:01:32.220
picture is a cat then mirroring in this
 

00:01:32.220 --> 00:01:34.670
picture is a cat then mirroring in this
throwing cat and if the mirroring

00:01:34.670 --> 00:01:34.680
throwing cat and if the mirroring
 

00:01:34.680 --> 00:01:37.069
throwing cat and if the mirroring
operation preserves whatever you're

00:01:37.069 --> 00:01:37.079
operation preserves whatever you're
 

00:01:37.079 --> 00:01:39.200
operation preserves whatever you're
trying to recognize in the picture this

00:01:39.200 --> 00:01:39.210
trying to recognize in the picture this
 

00:01:39.210 --> 00:01:41.749
trying to recognize in the picture this
would be a good data augmentation

00:01:41.749 --> 00:01:41.759
would be a good data augmentation
 

00:01:41.759 --> 00:01:44.990
would be a good data augmentation
technique to use another commonly used

00:01:44.990 --> 00:01:45.000
technique to use another commonly used
 

00:01:45.000 --> 00:01:47.569
technique to use another commonly used
technique is random cropping so given

00:01:47.569 --> 00:01:47.579
technique is random cropping so given
 

00:01:47.579 --> 00:01:49.580
technique is random cropping so given
this data set let's pick a few random

00:01:49.580 --> 00:01:49.590
this data set let's pick a few random
 

00:01:49.590 --> 00:01:51.980
this data set let's pick a few random
crops so you might pick that and take

00:01:51.980 --> 00:01:51.990
crops so you might pick that and take
 

00:01:51.990 --> 00:01:55.160
crops so you might pick that and take
that crop you might take that to that

00:01:55.160 --> 00:01:55.170
that crop you might take that to that
 

00:01:55.170 --> 00:01:59.120
that crop you might take that to that
crop take this take that crop and so

00:01:59.120 --> 00:01:59.130
crop take this take that crop and so
 

00:01:59.130 --> 00:02:01.190
crop take this take that crop and so
this gives you different examples to

00:02:01.190 --> 00:02:01.200
this gives you different examples to
 

00:02:01.200 --> 00:02:02.840
this gives you different examples to
feed in your training set but sort of

00:02:02.840 --> 00:02:02.850
feed in your training set but sort of
 

00:02:02.850 --> 00:02:05.090
feed in your training set but sort of
different random crops of your dataset

00:02:05.090 --> 00:02:05.100
different random crops of your dataset
 

00:02:05.100 --> 00:02:08.270
different random crops of your dataset
so random cropping isn't a perfect data

00:02:08.270 --> 00:02:08.280
so random cropping isn't a perfect data
 

00:02:08.280 --> 00:02:10.190
so random cropping isn't a perfect data
augmentation method you know what if you

00:02:10.190 --> 00:02:10.200
augmentation method you know what if you
 

00:02:10.200 --> 00:02:13.430
augmentation method you know what if you
randomly ended up taking that trough

00:02:13.430 --> 00:02:13.440
randomly ended up taking that trough
 

00:02:13.440 --> 00:02:15.770
randomly ended up taking that trough
which won't look much like the cat but

00:02:15.770 --> 00:02:15.780
which won't look much like the cat but
 

00:02:15.780 --> 00:02:17.990
which won't look much like the cat but
in practice and works well so long as

00:02:17.990 --> 00:02:18.000
in practice and works well so long as
 

00:02:18.000 --> 00:02:19.940
in practice and works well so long as
your random props are reasonably large

00:02:19.940 --> 00:02:19.950
your random props are reasonably large
 

00:02:19.950 --> 00:02:22.760
your random props are reasonably large
subset of the Arsenal image so mirroring

00:02:22.760 --> 00:02:22.770
subset of the Arsenal image so mirroring
 

00:02:22.770 --> 00:02:24.970
subset of the Arsenal image so mirroring
and random cropping are frequently used

00:02:24.970 --> 00:02:24.980
and random cropping are frequently used
 

00:02:24.980 --> 00:02:28.040
and random cropping are frequently used
and in theory you could also use things

00:02:28.040 --> 00:02:28.050
and in theory you could also use things
 

00:02:28.050 --> 00:02:31.100
and in theory you could also use things
like rotation sharing of the image so

00:02:31.100 --> 00:02:31.110
like rotation sharing of the image so
 

00:02:31.110 --> 00:02:32.000
like rotation sharing of the image so
that's the view

00:02:32.000 --> 00:02:32.010
that's the view
 

00:02:32.010 --> 00:02:34.910
that's the view
I'll do this too the image of distorted

00:02:34.910 --> 00:02:34.920
I'll do this too the image of distorted
 

00:02:34.920 --> 00:02:37.130
I'll do this too the image of distorted
thatwe introduced various forms of local

00:02:37.130 --> 00:02:37.140
thatwe introduced various forms of local
 

00:02:37.140 --> 00:02:40.190
thatwe introduced various forms of local
warping and so on and there's really no

00:02:40.190 --> 00:02:40.200
warping and so on and there's really no
 

00:02:40.200 --> 00:02:41.840
warping and so on and there's really no
harm we're trying all of these things as

00:02:41.840 --> 00:02:41.850
harm we're trying all of these things as
 

00:02:41.850 --> 00:02:43.970
harm we're trying all of these things as
well although in practice they seem to

00:02:43.970 --> 00:02:43.980
well although in practice they seem to
 

00:02:43.980 --> 00:02:47.210
well although in practice they seem to
be used a bit less perhaps because of

00:02:47.210 --> 00:02:47.220
be used a bit less perhaps because of
 

00:02:47.220 --> 00:02:53.380
be used a bit less perhaps because of
the complexity a second type of data

00:02:53.380 --> 00:02:53.390
the complexity a second type of data
 

00:02:53.390 --> 00:02:55.850
the complexity a second type of data
augmentation that is commonly used is

00:02:55.850 --> 00:02:55.860
augmentation that is commonly used is
 

00:02:55.860 --> 00:03:00.380
augmentation that is commonly used is
color shifting so given a picture like

00:03:00.380 --> 00:03:00.390
color shifting so given a picture like
 

00:03:00.390 --> 00:03:05.390
color shifting so given a picture like
this let's say you add to the our G and

00:03:05.390 --> 00:03:05.400
this let's say you add to the our G and
 

00:03:05.400 --> 00:03:10.190
this let's say you add to the our G and
B channels different distortions in this

00:03:10.190 --> 00:03:10.200
B channels different distortions in this
 

00:03:10.200 --> 00:03:12.980
B channels different distortions in this
example we are adding to the red and

00:03:12.980 --> 00:03:12.990
example we are adding to the red and
 

00:03:12.990 --> 00:03:15.320
example we are adding to the red and
blue channels and subtracting from the

00:03:15.320 --> 00:03:15.330
blue channels and subtracting from the
 

00:03:15.330 --> 00:03:19.340
blue channels and subtracting from the
green channel so red and blue make

00:03:19.340 --> 00:03:19.350
green channel so red and blue make
 

00:03:19.350 --> 00:03:21.770
green channel so red and blue make
purple so this makes the whole image a

00:03:21.770 --> 00:03:21.780
purple so this makes the whole image a
 

00:03:21.780 --> 00:03:23.990
purple so this makes the whole image a
bit more purpley and that creates a

00:03:23.990 --> 00:03:24.000
bit more purpley and that creates a
 

00:03:24.000 --> 00:03:26.500
bit more purpley and that creates a
distorted image for your training set

00:03:26.500 --> 00:03:26.510
distorted image for your training set
 

00:03:26.510 --> 00:03:29.270
distorted image for your training set
for illustration purposes are making

00:03:29.270 --> 00:03:29.280
for illustration purposes are making
 

00:03:29.280 --> 00:03:31.580
for illustration purposes are making
somewhat dramatic changes to the colors

00:03:31.580 --> 00:03:31.590
somewhat dramatic changes to the colors
 

00:03:31.590 --> 00:03:34.520
somewhat dramatic changes to the colors
and practices you draw our G and B from

00:03:34.520 --> 00:03:34.530
and practices you draw our G and B from
 

00:03:34.530 --> 00:03:37.310
and practices you draw our G and B from
some distribution that could be quite

00:03:37.310 --> 00:03:37.320
some distribution that could be quite
 

00:03:37.320 --> 00:03:41.720
some distribution that could be quite
small as well but what you do is take

00:03:41.720 --> 00:03:41.730
small as well but what you do is take
 

00:03:41.730 --> 00:03:44.479
small as well but what you do is take
different values of r g and b and use

00:03:44.479 --> 00:03:44.489
different values of r g and b and use
 

00:03:44.489 --> 00:03:46.970
different values of r g and b and use
them to distort the color channels so in

00:03:46.970 --> 00:03:46.980
them to distort the color channels so in
 

00:03:46.980 --> 00:03:50.030
them to distort the color channels so in
the second example we are making a less

00:03:50.030 --> 00:03:50.040
the second example we are making a less
 

00:03:50.040 --> 00:03:52.520
the second example we are making a less
red and more green and more blue so that

00:03:52.520 --> 00:03:52.530
red and more green and more blue so that
 

00:03:52.530 --> 00:03:54.170
red and more green and more blue so that
turns the whole image a bit more

00:03:54.170 --> 00:03:54.180
turns the whole image a bit more
 

00:03:54.180 --> 00:04:00.199
turns the whole image a bit more
yellowish and here we are making it much

00:04:00.199 --> 00:04:00.209
yellowish and here we are making it much
 

00:04:00.209 --> 00:04:02.840
yellowish and here we are making it much
more balloon just a tiny little bit more

00:04:02.840 --> 00:04:02.850
more balloon just a tiny little bit more
 

00:04:02.850 --> 00:04:04.670
more balloon just a tiny little bit more
variance but in practice the values are

00:04:04.670 --> 00:04:04.680
variance but in practice the values are
 

00:04:04.680 --> 00:04:07.430
variance but in practice the values are
g and b are drawn from some probability

00:04:07.430 --> 00:04:07.440
g and b are drawn from some probability
 

00:04:07.440 --> 00:04:12.470
g and b are drawn from some probability
distribution and motivation for this is

00:04:12.470 --> 00:04:12.480
distribution and motivation for this is
 

00:04:12.480 --> 00:04:15.620
distribution and motivation for this is
that if maybe the sunlight was a bit

00:04:15.620 --> 00:04:15.630
that if maybe the sunlight was a bit
 

00:04:15.630 --> 00:04:18.470
that if maybe the sunlight was a bit
yellower or maybe the info illumination

00:04:18.470 --> 00:04:18.480
yellower or maybe the info illumination
 

00:04:18.480 --> 00:04:21.020
yellower or maybe the info illumination
was a bit more yellow that could easily

00:04:21.020 --> 00:04:21.030
was a bit more yellow that could easily
 

00:04:21.030 --> 00:04:24.170
was a bit more yellow that could easily
change the color of an image but

00:04:24.170 --> 00:04:24.180
change the color of an image but
 

00:04:24.180 --> 00:04:26.090
change the color of an image but
the identity of the account or the

00:04:26.090 --> 00:04:26.100
the identity of the account or the
 

00:04:26.100 --> 00:04:28.610
the identity of the account or the
identity of the content the label why

00:04:28.610 --> 00:04:28.620
identity of the content the label why
 

00:04:28.620 --> 00:04:31.189
identity of the content the label why
should still say the same and so

00:04:31.189 --> 00:04:31.199
should still say the same and so
 

00:04:31.199 --> 00:04:33.920
should still say the same and so
introducing these color distortions or

00:04:33.920 --> 00:04:33.930
introducing these color distortions or
 

00:04:33.930 --> 00:04:36.560
introducing these color distortions or
by doing color shifting this makes your

00:04:36.560 --> 00:04:36.570
by doing color shifting this makes your
 

00:04:36.570 --> 00:04:39.260
by doing color shifting this makes your
learning algorithm more robust to

00:04:39.260 --> 00:04:39.270
learning algorithm more robust to
 

00:04:39.270 --> 00:04:47.270
learning algorithm more robust to
changes in the colors of your images um

00:04:47.270 --> 00:04:47.280
changes in the colors of your images um
 

00:04:47.280 --> 00:04:52.189
changes in the colors of your images um
just a comment for the advanced learners

00:04:52.189 --> 00:04:52.199
just a comment for the advanced learners
 

00:04:52.199 --> 00:04:56.390
just a comment for the advanced learners
in this course and it's okay if you

00:04:56.390 --> 00:04:56.400
in this course and it's okay if you
 

00:04:56.400 --> 00:04:58.580
in this course and it's okay if you
don't understand when I'm about the same

00:04:58.580 --> 00:04:58.590
don't understand when I'm about the same
 

00:04:58.590 --> 00:05:00.800
don't understand when I'm about the same
when were using in red there are

00:05:00.800 --> 00:05:00.810
when were using in red there are
 

00:05:00.810 --> 00:05:04.490
when were using in red there are
different ways to sample our G and B one

00:05:04.490 --> 00:05:04.500
different ways to sample our G and B one
 

00:05:04.500 --> 00:05:06.409
different ways to sample our G and B one
of the ways to infant color distortion

00:05:06.409 --> 00:05:06.419
of the ways to infant color distortion
 

00:05:06.419 --> 00:05:09.080
of the ways to infant color distortion
uses an algorithm called PCA this is

00:05:09.080 --> 00:05:09.090
uses an algorithm called PCA this is
 

00:05:09.090 --> 00:05:11.120
uses an algorithm called PCA this is
called principal components analysis

00:05:11.120 --> 00:05:11.130
called principal components analysis
 

00:05:11.130 --> 00:05:14.689
called principal components analysis
which I taught about in the machine

00:05:14.689 --> 00:05:14.699
which I taught about in the machine
 

00:05:14.699 --> 00:05:19.610
which I taught about in the machine
learning group India ml class thought

00:05:19.610 --> 00:05:19.620
learning group India ml class thought
 

00:05:19.620 --> 00:05:22.180
learning group India ml class thought
bulk machine learning course on Coursera

00:05:22.180 --> 00:05:22.190
bulk machine learning course on Coursera
 

00:05:22.190 --> 00:05:25.310
bulk machine learning course on Coursera
but the details of this are actually

00:05:25.310 --> 00:05:25.320
but the details of this are actually
 

00:05:25.320 --> 00:05:31.250
but the details of this are actually
given in the Malik's net paper and it's

00:05:31.250 --> 00:05:31.260
given in the Malik's net paper and it's
 

00:05:31.260 --> 00:05:34.670
given in the Malik's net paper and it's
called sometimes called PCA color

00:05:34.670 --> 00:05:34.680
called sometimes called PCA color
 

00:05:34.680 --> 00:05:37.850
called sometimes called PCA color
augmentation but the rough idea between

00:05:37.850 --> 00:05:37.860
augmentation but the rough idea between
 

00:05:37.860 --> 00:05:41.629
augmentation but the rough idea between
PCA color augmentation is for example if

00:05:41.629 --> 00:05:41.639
PCA color augmentation is for example if
 

00:05:41.639 --> 00:05:44.390
PCA color augmentation is for example if
your image is mainly purple if this

00:05:44.390 --> 00:05:44.400
your image is mainly purple if this
 

00:05:44.400 --> 00:05:47.960
your image is mainly purple if this
mainly has red and blue tint and very

00:05:47.960 --> 00:05:47.970
mainly has red and blue tint and very
 

00:05:47.970 --> 00:05:51.439
mainly has red and blue tint and very
little green then PCA color augmentation

00:05:51.439 --> 00:05:51.449
little green then PCA color augmentation
 

00:05:51.449 --> 00:05:53.899
little green then PCA color augmentation
will add and subtract a lot to red and

00:05:53.899 --> 00:05:53.909
will add and subtract a lot to red and
 

00:05:53.909 --> 00:05:56.510
will add and subtract a lot to red and
blue but relatively little to green so

00:05:56.510 --> 00:05:56.520
blue but relatively little to green so
 

00:05:56.520 --> 00:05:58.969
blue but relatively little to green so
it kind of keeps the overall color or

00:05:58.969 --> 00:05:58.979
it kind of keeps the overall color or
 

00:05:58.979 --> 00:06:03.200
it kind of keeps the overall color or
the tint the same if you didn't

00:06:03.200 --> 00:06:03.210
the tint the same if you didn't
 

00:06:03.210 --> 00:06:04.820
the tint the same if you didn't
understand any of this don't worry about

00:06:04.820 --> 00:06:04.830
understand any of this don't worry about
 

00:06:04.830 --> 00:06:09.680
understand any of this don't worry about
it but if you can search online for but

00:06:09.680 --> 00:06:09.690
it but if you can search online for but
 

00:06:09.690 --> 00:06:11.180
it but if you can search online for but
you can if you want to meet about the

00:06:11.180 --> 00:06:11.190
you can if you want to meet about the
 

00:06:11.190 --> 00:06:13.879
you can if you want to meet about the
details of it in the Alex net paper and

00:06:13.879 --> 00:06:13.889
details of it in the Alex net paper and
 

00:06:13.889 --> 00:06:15.620
details of it in the Alex net paper and
you can also find some open source

00:06:15.620 --> 00:06:15.630
you can also find some open source
 

00:06:15.630 --> 00:06:18.230
you can also find some open source
implementations of PC and color

00:06:18.230 --> 00:06:18.240
implementations of PC and color
 

00:06:18.240 --> 00:06:23.029
implementations of PC and color
augmentation and just use that so you

00:06:23.029 --> 00:06:23.039
augmentation and just use that so you
 

00:06:23.039 --> 00:06:25.399
augmentation and just use that so you
might have your data stored your

00:06:25.399 --> 00:06:25.409
might have your data stored your
 

00:06:25.409 --> 00:06:27.890
might have your data stored your
training data sort on a hard disk only

00:06:27.890 --> 00:06:27.900
training data sort on a hard disk only
 

00:06:27.900 --> 00:06:31.249
training data sort on a hard disk only
uses symbol this round pucker symbol to

00:06:31.249 --> 00:06:31.259
uses symbol this round pucker symbol to
 

00:06:31.259 --> 00:06:34.790
uses symbol this round pucker symbol to
represent your hard disk and if you have

00:06:34.790 --> 00:06:34.800
represent your hard disk and if you have
 

00:06:34.800 --> 00:06:36.560
represent your hard disk and if you have
a small training set you could do almost

00:06:36.560 --> 00:06:36.570
a small training set you could do almost
 

00:06:36.570 --> 00:06:37.210
a small training set you could do almost
any

00:06:37.210 --> 00:06:37.220
any
 

00:06:37.220 --> 00:06:39.550
any
and they'll be okay but if a very large

00:06:39.550 --> 00:06:39.560
and they'll be okay but if a very large
 

00:06:39.560 --> 00:06:41.260
and they'll be okay but if a very large
training set then this is how people

00:06:41.260 --> 00:06:41.270
training set then this is how people
 

00:06:41.270 --> 00:06:43.450
training set then this is how people
will often implement it which is you

00:06:43.450 --> 00:06:43.460
will often implement it which is you
 

00:06:43.460 --> 00:06:46.150
will often implement it which is you
might have a CPU thread that is

00:06:46.150 --> 00:06:46.160
might have a CPU thread that is
 

00:06:46.160 --> 00:06:50.620
might have a CPU thread that is
constantly loading images off your hard

00:06:50.620 --> 00:06:50.630
constantly loading images off your hard
 

00:06:50.630 --> 00:06:55.870
constantly loading images off your hard
disk so you have this you know stream of

00:06:55.870 --> 00:06:55.880
disk so you have this you know stream of
 

00:06:55.880 --> 00:07:00.810
disk so you have this you know stream of
images coming in from your hard disk and

00:07:00.810 --> 00:07:00.820
images coming in from your hard disk and
 

00:07:00.820 --> 00:07:04.300
images coming in from your hard disk and
what you can do is use maybe a CPU

00:07:04.300 --> 00:07:04.310
what you can do is use maybe a CPU
 

00:07:04.310 --> 00:07:09.550
what you can do is use maybe a CPU
thread to implement the distortions be

00:07:09.550 --> 00:07:09.560
thread to implement the distortions be
 

00:07:09.560 --> 00:07:11.470
thread to implement the distortions be
it the random cropping or the color

00:07:11.470 --> 00:07:11.480
it the random cropping or the color
 

00:07:11.480 --> 00:07:15.520
it the random cropping or the color
shifting or the mirroring but for each

00:07:15.520 --> 00:07:15.530
shifting or the mirroring but for each
 

00:07:15.530 --> 00:07:19.320
shifting or the mirroring but for each
image you might then end up with some

00:07:19.320 --> 00:07:19.330
image you might then end up with some
 

00:07:19.330 --> 00:07:22.030
image you might then end up with some
distorted version of it so let's see

00:07:22.030 --> 00:07:22.040
distorted version of it so let's see
 

00:07:22.040 --> 00:07:25.030
distorted version of it so let's see
this image I'm gonna mirror it and maybe

00:07:25.030 --> 00:07:25.040
this image I'm gonna mirror it and maybe
 

00:07:25.040 --> 00:07:26.830
this image I'm gonna mirror it and maybe
also implement color distortion and so

00:07:26.830 --> 00:07:26.840
also implement color distortion and so
 

00:07:26.840 --> 00:07:31.840
also implement color distortion and so
on and maybe this image ends up being

00:07:31.840 --> 00:07:31.850
on and maybe this image ends up being
 

00:07:31.850 --> 00:07:39.340
on and maybe this image ends up being
color shifted see you end up with you

00:07:39.340 --> 00:07:39.350
color shifted see you end up with you
 

00:07:39.350 --> 00:07:42.070
color shifted see you end up with you
know some different colored cat and so

00:07:42.070 --> 00:07:42.080
know some different colored cat and so
 

00:07:42.080 --> 00:07:45.610
know some different colored cat and so
your CPU thread is constantly loading

00:07:45.610 --> 00:07:45.620
your CPU thread is constantly loading
 

00:07:45.620 --> 00:07:48.640
your CPU thread is constantly loading
data as well as implementing whatever

00:07:48.640 --> 00:07:48.650
data as well as implementing whatever
 

00:07:48.650 --> 00:07:51.850
data as well as implementing whatever
distortions are needed to form a batch

00:07:51.850 --> 00:07:51.860
distortions are needed to form a batch
 

00:07:51.860 --> 00:07:58.300
distortions are needed to form a batch
or really mini batches of data and this

00:07:58.300 --> 00:07:58.310
or really mini batches of data and this
 

00:07:58.310 --> 00:08:02.170
or really mini batches of data and this
data is then constantly passed to some

00:08:02.170 --> 00:08:02.180
data is then constantly passed to some
 

00:08:02.180 --> 00:08:04.870
data is then constantly passed to some
other thread or some other process for

00:08:04.870 --> 00:08:04.880
other thread or some other process for
 

00:08:04.880 --> 00:08:06.550
other thread or some other process for
implementing training and this could be

00:08:06.550 --> 00:08:06.560
implementing training and this could be
 

00:08:06.560 --> 00:08:09.220
implementing training and this could be
done on the CPU or really increasingly

00:08:09.220 --> 00:08:09.230
done on the CPU or really increasingly
 

00:08:09.230 --> 00:08:12.280
done on the CPU or really increasingly
on the GPU if you have a large network

00:08:12.280 --> 00:08:12.290
on the GPU if you have a large network
 

00:08:12.290 --> 00:08:16.510
on the GPU if you have a large network
to train and so a pretty common way of

00:08:16.510 --> 00:08:16.520
to train and so a pretty common way of
 

00:08:16.520 --> 00:08:19.420
to train and so a pretty common way of
implementing data augmentation is to

00:08:19.420 --> 00:08:19.430
implementing data augmentation is to
 

00:08:19.430 --> 00:08:22.450
implementing data augmentation is to
really have you know one thread or

00:08:22.450 --> 00:08:22.460
really have you know one thread or
 

00:08:22.460 --> 00:08:27.190
really have you know one thread or
multiple threads that is responsible for

00:08:27.190 --> 00:08:27.200
multiple threads that is responsible for
 

00:08:27.200 --> 00:08:29.560
multiple threads that is responsible for
loading the data and implementing

00:08:29.560 --> 00:08:29.570
loading the data and implementing
 

00:08:29.570 --> 00:08:31.990
loading the data and implementing
distortions and then passing that to

00:08:31.990 --> 00:08:32.000
distortions and then passing that to
 

00:08:32.000 --> 00:08:33.219
distortions and then passing that to
some other thread will some of the

00:08:33.219 --> 00:08:33.229
some other thread will some of the
 

00:08:33.229 --> 00:08:35.860
some other thread will some of the
process that then does the training and

00:08:35.860 --> 00:08:35.870
process that then does the training and
 

00:08:35.870 --> 00:08:42.130
process that then does the training and
often this and this can run in parallel

00:08:42.130 --> 00:08:42.140
 

00:08:42.140 --> 00:08:45.970
so that's it for data augmentation and

00:08:45.970 --> 00:08:45.980
so that's it for data augmentation and
 

00:08:45.980 --> 00:08:48.740
so that's it for data augmentation and
similar to other parts of training a

00:08:48.740 --> 00:08:48.750
similar to other parts of training a
 

00:08:48.750 --> 00:08:50.290
similar to other parts of training a
deep neural network the data

00:08:50.290 --> 00:08:50.300
deep neural network the data
 

00:08:50.300 --> 00:08:53.330
deep neural network the data
augmentation process also as a few hyper

00:08:53.330 --> 00:08:53.340
augmentation process also as a few hyper
 

00:08:53.340 --> 00:08:55.130
augmentation process also as a few hyper
parameters such as how much

00:08:55.130 --> 00:08:55.140
parameters such as how much
 

00:08:55.140 --> 00:08:56.990
parameters such as how much
color-shifting do you implement and

00:08:56.990 --> 00:08:57.000
color-shifting do you implement and
 

00:08:57.000 --> 00:08:59.300
color-shifting do you implement and
exactly what parameters you use for

00:08:59.300 --> 00:08:59.310
exactly what parameters you use for
 

00:08:59.310 --> 00:09:02.360
exactly what parameters you use for
random cropping so similar to elsewhere

00:09:02.360 --> 00:09:02.370
random cropping so similar to elsewhere
 

00:09:02.370 --> 00:09:04.670
random cropping so similar to elsewhere
in computer vision a good place to get

00:09:04.670 --> 00:09:04.680
in computer vision a good place to get
 

00:09:04.680 --> 00:09:07.310
in computer vision a good place to get
started might be to use someone else's

00:09:07.310 --> 00:09:07.320
started might be to use someone else's
 

00:09:07.320 --> 00:09:09.800
started might be to use someone else's
open source implementation for how to

00:09:09.800 --> 00:09:09.810
open source implementation for how to
 

00:09:09.810 --> 00:09:12.800
open source implementation for how to
use data augmentation but of course if

00:09:12.800 --> 00:09:12.810
use data augmentation but of course if
 

00:09:12.810 --> 00:09:15.500
use data augmentation but of course if
you want to capture more in variances

00:09:15.500 --> 00:09:15.510
you want to capture more in variances
 

00:09:15.510 --> 00:09:17.210
you want to capture more in variances
that you think someone else's open

00:09:17.210 --> 00:09:17.220
that you think someone else's open
 

00:09:17.220 --> 00:09:20.060
that you think someone else's open
source implementation isn't it might be

00:09:20.060 --> 00:09:20.070
source implementation isn't it might be
 

00:09:20.070 --> 00:09:22.550
source implementation isn't it might be
reasonable to also to these hyper

00:09:22.550 --> 00:09:22.560
reasonable to also to these hyper
 

00:09:22.560 --> 00:09:25.760
reasonable to also to these hyper
parameters yourself so that I hope that

00:09:25.760 --> 00:09:25.770
parameters yourself so that I hope that
 

00:09:25.770 --> 00:09:27.740
parameters yourself so that I hope that
you'll be able to use data augmentation

00:09:27.740 --> 00:09:27.750
you'll be able to use data augmentation
 

00:09:27.750 --> 00:09:29.420
you'll be able to use data augmentation
to get your computer vision applications

00:09:29.420 --> 00:09:29.430
to get your computer vision applications
 

00:09:29.430 --> 00:09:32.810
to get your computer vision applications
to work better

