WEBVTT
Kind: captions
Language: en

00:00:00.089 --> 00:00:04.169
In 1963, if you wanted to do calculations,

00:00:04.750 --> 00:00:10.889
you had a mechanical calculator like this wonderful Odhner Brunsviga, but it's all mechanical.

00:00:11.530 --> 00:00:13.530
This guy, 1962–63,

00:00:13.630 --> 00:00:20.580
Bob Ragen, worked at Friden Incorporated, maker of mechanical calculators, had this idea—

00:00:21.160 --> 00:00:23.460
let's invent an

00:00:23.880 --> 00:00:26.780
all-electronic calculator! Indeed,

00:00:27.490 --> 00:00:33.299
nothing mechanical in it. It's all electronic, and I've been lucky enough to

00:00:34.000 --> 00:00:35.790
not just get one of them,

00:00:35.790 --> 00:00:41.240
but to meet and talk with the late Bob Ragen, who came by and helped me repair two of them.

00:00:41.240 --> 00:00:47.780
Signed by Bob Ragen, August 2006. This is a cathode ray tube out of an oscilloscope,

00:00:48.610 --> 00:00:49.980
four circuit boards.

00:00:49.980 --> 00:00:57.779
It's all discrete transistors. Each one of these is one transistor. Each of these probably cost five or ten dollars

00:00:57.800 --> 00:01:00.180
in 1962. Germanium transistors!

00:01:01.300 --> 00:01:08.159
Resistors, diodes... circuit boards that are not just double sided but sort of, in an odd way, four sided!

00:01:08.470 --> 00:01:12.059
It folds in on itself, plugs in, and there are four different...

00:01:13.750 --> 00:01:15.750
But even that's not

00:01:16.060 --> 00:01:18.240
what I find amazing. In a

00:01:18.490 --> 00:01:23.100
calculator you have to keep track. You need a memory; you need to keep track of the numbers.

00:01:23.100 --> 00:01:28.439
Where's the memory? This used a piece of piano wire for memory!

00:01:28.439 --> 00:01:32.039
You would tweak one end of the piano wire, vibrate,

00:01:32.439 --> 00:01:39.029
go around around around in a spiral, and at the far end there'd be a little microphone to hear it. Each pulse

00:01:39.600 --> 00:01:42.680
was a "ding!" [imitates buzzing noise]

00:01:42.680 --> 00:01:50.260
"Ding!" It was called "recirculating audio acoustic memory." It's all in here. The number 5—

00:01:51.250 --> 00:01:55.379
binary, 0101—had to have "ding,"

00:01:56.140 --> 00:01:58.140
no ding, "ding."

00:01:58.600 --> 00:02:03.449
So a ding was a bit. It remembers in time. It takes about, oh,

00:02:03.760 --> 00:02:10.700
a hundredth of a second for these little bits to go around this long spiral. Come on over, Brady, check this out.

00:02:13.400 --> 00:02:14.660
[BRADY: Oh!]

00:02:15.340 --> 00:02:17.340
Now let's look over here.

00:02:18.040 --> 00:02:22.620
First you can see there's a spiral out here. Every time there's a bit like

00:02:23.320 --> 00:02:26.579
the first, the first bit in the number 5,

00:02:27.940 --> 00:02:37.040
over here is a little speaker that goes "boink!" Little magnetic coil. It goes "boink" and launches a

00:02:37.900 --> 00:02:43.040
pulse. A little "doink" goes around here on the spiral of

00:02:43.870 --> 00:02:45.870
piano wire, steel wire,

00:02:46.690 --> 00:02:52.950
It spirals in, then spirals out, and a couple of milliseconds later it gets to the far

00:02:52.950 --> 00:02:56.849
end, where there's a tiny microphone, a microphone over here,

00:02:57.430 --> 00:03:01.650
which goes out into an amplifier and then into the circuit boards.

00:03:02.260 --> 00:03:05.670
So the memory of this calculator is

00:03:06.550 --> 00:03:08.550
all acoustic.

00:03:08.560 --> 00:03:15.480
Every time you type a number into it, the bitstream of the number is represented

00:03:16.240 --> 00:03:17.950
continuously as

00:03:17.950 --> 00:03:24.659
vibrations in this wire. The alternative, of course, is what we do today. You'd have solid-state memory

00:03:25.330 --> 00:03:27.540
Well, solid-state memory, well,

00:03:28.840 --> 00:03:30.070
there's

00:03:30.070 --> 00:03:32.070
five, let's say there's six,

00:03:32.440 --> 00:03:39.660
entries in the stack, each one has say, ten digits. It's more than that, it's thirteen digits, well,

00:03:39.660 --> 00:03:44.640
let's say ten, times six is sixty digits, times four bits per digit...

00:03:45.040 --> 00:03:52.529
It's on the order of 250. Maybe if I would need somewhere between 200 and 500 transistors and

00:03:53.470 --> 00:03:54.670
each

00:03:54.670 --> 00:03:55.810
transistor

00:03:55.810 --> 00:03:59.220
is costing me a dollar, that's big bucks.

00:03:59.890 --> 00:04:03.569
And on top of that, it takes up space, so rather than using

00:04:04.720 --> 00:04:07.170
transistors as we would today for memory,

00:04:08.500 --> 00:04:10.500
put all the information in

00:04:11.500 --> 00:04:17.880
acoustic memory. Okay, I'm working on this, my problem is:

00:04:20.040 --> 00:04:25.440
in August of 2006 I got it working.

00:04:26.600 --> 00:04:29.170
It was working in November of 2013.

00:04:30.110 --> 00:04:32.889
Today, I'm sorry guys, it's sort of...

00:04:33.560 --> 00:04:36.339
I'm sorry. It's sort of not working very well.

00:04:37.280 --> 00:04:42.309
And I'm going in with an oscilloscope. It's... the oscilloscope is there.

00:04:43.940 --> 00:04:45.940
Okay, so unfortunately,

00:04:46.760 --> 00:04:51.429
you can see it's dancing around. If we type a number in, BAM.

00:04:53.540 --> 00:05:00.879
I can see that two of the scanning boards are working. I can also see that I've got some troubles in the arithmetic board.

00:05:02.600 --> 00:05:06.790
And the logic. Nope, I've got work to do. The happy thing is,

00:05:09.620 --> 00:05:15.399
alongside this, that Bob Ragen helped me fix, I've got a second one which happily,

00:05:17.240 --> 00:05:19.600
as of last night, was working.

00:05:19.880 --> 00:05:25.420
Not sure it's working now, but let me give it a try. If I'm lucky... Oh!

00:05:25.880 --> 00:05:30.880
We'll do all our calculations with seven decimal places. There is a stack of four...

00:05:31.820 --> 00:05:37.989
four numbers and I enter on the lowest stack, which should be brightest. I'll enter 22.

00:05:38.990 --> 00:05:41.020
Enter. Now I have 22.

00:05:42.200 --> 00:05:44.229
Oh! I'm going to divide by 7.

00:05:45.260 --> 00:05:47.260
7.

00:05:47.620 --> 00:05:49.620
Divide.

00:05:50.420 --> 00:05:56.800
3.14, an approximation for pi. We just showed that it divided. Let's do a square root. Square root of 2.

00:05:57.620 --> 00:06:01.140
2, square root, watch how long it takes. Boop!

00:06:02.540 --> 00:06:09.429
It takes a second to do a square root. Let's actually go all the way out, do it to twelve decimal places.

00:06:10.880 --> 00:06:12.880
2.

00:06:13.100 --> 00:06:15.100
Square root.

00:06:16.730 --> 00:06:23.770
It takes the better part of a second to find the square root of two, but it does it, and in 1963,

00:06:24.620 --> 00:06:31.750
people were astonished. Hey, when I first used this in college in 1971–72, I was astonished!

00:06:32.440 --> 00:06:37.889
Bring the square root of two to a dozen decimal places in a second! Wow! I don't have to look it up,

00:06:37.890 --> 00:06:39.890
I don't have to do an expansion,

00:06:40.800 --> 00:06:44.600
absolutely sweet! So this machine that I'm working on,

00:06:45.540 --> 00:06:50.540
I compare voltages to this working machine, so I'm in there...

00:06:54.460 --> 00:07:01.109
and you can see—I hope it's visible, Brady—so now let's do the square root of 2.

00:07:02.650 --> 00:07:09.900
1.414. Let's crank the decimal place back here, clear entry, 22, enter,

00:07:11.170 --> 00:07:13.150
7, divide.

00:07:13.150 --> 00:07:18.540
And there's an approximation for pi. A little bit lousy, you know,

00:07:18.540 --> 00:07:25.920
a few digits of approximation. And so to repair this guy, I'll be comparing voltages from this guy here into here.

00:07:26.480 --> 00:07:29.200
And check this out, of course:

00:07:29.200 --> 00:07:31.200
It's a continuing problem.

00:07:31.750 --> 00:07:39.000
"November 2013 repaired! OK." So this guy's working. Why do I work on this? It's partly out of

00:07:39.520 --> 00:07:41.520
respect for those who came before me.

00:07:41.920 --> 00:07:44.609
Brilliant engineers. It's partly out of a sense of

00:07:46.150 --> 00:07:51.540
appreciation for their work, for their use of the available

00:07:52.060 --> 00:07:55.649
technology, that today, people will laugh at it. Discrete transistors?

00:07:55.980 --> 00:08:03.080
I'm not sure you can buy a discrete germanium transistor anymore, certainly not one made by Texas Instruments. It's admiration

00:08:03.760 --> 00:08:08.680
for those who came before me. And of course, it's also a

00:08:08.900 --> 00:08:11.140
wonderfully entertaining

00:08:11.140 --> 00:08:13.560
jigsaw puzzle. Debugging software? Hey,

00:08:13.560 --> 00:08:20.009
I don't need much more than a computer and a brain. Debugging hardware: it means understanding

00:08:20.650 --> 00:08:22.650
not just what's supposed to happen,

00:08:23.920 --> 00:08:28.500
understanding not just what is happening, but also understanding

00:08:29.140 --> 00:08:35.180
what was in the mind of the people who created this. The reason for

00:08:35.920 --> 00:08:42.119
working on this isn't "oh look, I've got a museum piece." No, that doesn't mean anything. The reason is,

00:08:42.730 --> 00:08:45.389
it teaches me, gives me a sense of...

00:08:46.329 --> 00:08:47.470
of...

00:08:47.470 --> 00:08:49.470
joy that I've—

00:08:49.750 --> 00:08:51.750
I'm bringing to life

00:08:52.630 --> 00:08:55.559
what people who came before me gave birth to.

