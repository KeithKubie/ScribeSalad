WEBVTT
Kind: captions
Language: en

00:00:08.657 --> 00:00:09.490
PAUL RASHIDI: Hello.

00:00:09.490 --> 00:00:11.620
I'm Paul Rashidi, a
Developer Programs Engineer

00:00:11.620 --> 00:00:13.290
on the Google Cloud Platform.

00:00:13.290 --> 00:00:16.239
I'm extremely passionate about
Compute Engine and mobile apps.

00:00:16.239 --> 00:00:17.810
So not too long
ago, I started work

00:00:17.810 --> 00:00:19.959
on some applications
that use both.

00:00:19.959 --> 00:00:22.250
I realize there are probably
other developers out there

00:00:22.250 --> 00:00:25.740
wanting to do something similar,
so I recently open sourced

00:00:25.740 --> 00:00:27.150
a sample app.

00:00:27.150 --> 00:00:28.880
I'm going to show
a demo of the app

00:00:28.880 --> 00:00:31.650
and then briefly talk about
the process of building it

00:00:31.650 --> 00:00:33.250
in Android Studio.

00:00:33.250 --> 00:00:36.710
The readme file included
with the sample app on GitHub

00:00:36.710 --> 00:00:38.910
explains how to deploy
the app for yourself

00:00:38.910 --> 00:00:42.460
so you can get it running
on your own Android device.

00:00:42.460 --> 00:00:44.290
First the demo.

00:00:44.290 --> 00:00:48.080
The application is a simple one
that utilizes the CE API Java

00:00:48.080 --> 00:00:51.180
client library to retrieve
project resource information.

00:00:51.180 --> 00:00:53.590
It pulls information
about all active resources

00:00:53.590 --> 00:00:56.310
from a developer project
you've previously registered.

00:00:56.310 --> 00:00:58.410
As you can see, we start
with the login page,

00:00:58.410 --> 00:01:00.360
where you can choose
a Google account.

00:01:00.360 --> 00:01:03.159
We're going to select
my sample account.

00:01:03.159 --> 00:01:05.450
This account listing is pulled
from the Google accounts

00:01:05.450 --> 00:01:07.100
registered on the
Android device,

00:01:07.100 --> 00:01:10.650
to avoid requiring the user
to re-enter their password.

00:01:10.650 --> 00:01:13.250
Now that we've done that, the
code asks Android for an OAuth

00:01:13.250 --> 00:01:16.660
2.0 token for that account, with
OAuth 2.0 scopes for Compute

00:01:16.660 --> 00:01:18.370
Engine and Cloud storage.

00:01:18.370 --> 00:01:20.820
I will accept this prompt,
and now the application

00:01:20.820 --> 00:01:23.570
is able to retrieve
OAuth 2.0 access tokens.

00:01:23.570 --> 00:01:25.690
As a reminder, an
OAuth 2.0 access token

00:01:25.690 --> 00:01:28.160
is a time-limited
authorization string

00:01:28.160 --> 00:01:29.990
that provides access
to Compute Engine

00:01:29.990 --> 00:01:33.140
and cloud storage APIs
on behalf of a user.

00:01:33.140 --> 00:01:35.720
Next, we type in a project
ID for the developer project

00:01:35.720 --> 00:01:37.580
that the Google
account has access to.

00:01:37.580 --> 00:01:40.050
This obviously needs to be
a project that is already

00:01:40.050 --> 00:01:43.140
using CE or at least
has the API enabled.

00:01:43.140 --> 00:01:45.980
This value can either be
the project name string

00:01:45.980 --> 00:01:48.830
or the project number, which
we receive from the console.

00:01:48.830 --> 00:01:51.070
We'll now click this
View Resources button,

00:01:51.070 --> 00:01:52.790
and a new activity is invoked.

00:01:52.790 --> 00:01:55.300
The app talks with the
CE API in the background

00:01:55.300 --> 00:01:57.050
and loads the
resource information.

00:01:57.050 --> 00:02:00.080
We can see that we have a few
instances and disks, as well

00:02:00.080 --> 00:02:02.610
as the zones that our
project has access to.

00:02:02.610 --> 00:02:04.270
We can also see
that this instance

00:02:04.270 --> 00:02:06.580
has a scheduled
outage coming up.

00:02:06.580 --> 00:02:09.030
This is actually an instance
I meant to delete earlier,

00:02:09.030 --> 00:02:12.220
so we'll drill into
this and delete it.

00:02:12.220 --> 00:02:16.340
Again, the app performs a delete
asynchronously with the CE API.

00:02:16.340 --> 00:02:17.510
Pretty simple app.

00:02:17.510 --> 00:02:20.160
For this app, we decided to
use the Android master detail

00:02:20.160 --> 00:02:20.920
sample.

00:02:20.920 --> 00:02:22.714
So if you run the
app on a tablet,

00:02:22.714 --> 00:02:25.380
you'll notice it nicely combines
the first and second activities

00:02:25.380 --> 00:02:26.110
together.

00:02:26.110 --> 00:02:28.460
This is Android fragments
at work, but more about this

00:02:28.460 --> 00:02:29.350
later.

00:02:29.350 --> 00:02:30.630
Now let's look at the code.

00:02:30.630 --> 00:02:32.088
In order to look
at the code, we're

00:02:32.088 --> 00:02:33.380
going to need to retrieve it.

00:02:33.380 --> 00:02:34.240
That's easy enough.

00:02:34.240 --> 00:02:36.365
We're going to check out
the source code using Git,

00:02:36.365 --> 00:02:38.570
and then import the project
via the import option

00:02:38.570 --> 00:02:40.380
in Android Studio.

00:02:40.380 --> 00:02:43.310
We'll select the
highest level project,

00:02:43.310 --> 00:02:46.084
use the Gradle wrapper
option and import.

00:02:46.084 --> 00:02:48.250
If you're having trouble
here, please see the readme

00:02:48.250 --> 00:02:51.489
in the code repo for more
comprehensive instructions.

00:02:51.489 --> 00:02:53.530
Now that we have the code,
the easiest way for us

00:02:53.530 --> 00:02:55.580
to understand this project
is to look at the code

00:02:55.580 --> 00:02:56.906
as it was committed.

00:02:56.906 --> 00:02:58.280
You can see the
first few commits

00:02:58.280 --> 00:03:00.840
are project wizard generated
code and are mainly

00:03:00.840 --> 00:03:02.980
defining entries in Git ignore.

00:03:02.980 --> 00:03:05.740
The structure is a bit different
from the Eclipse environment.

00:03:05.740 --> 00:03:08.840
As you can see, we're excluding
the build directory, as well as

00:03:08.840 --> 00:03:11.330
the idea and Gradle
hidden directories.

00:03:11.330 --> 00:03:13.380
All these files should
be inferred from the main

00:03:13.380 --> 00:03:14.790
build Gradle file.

00:03:14.790 --> 00:03:17.200
So there's no need
to check them in.

00:03:17.200 --> 00:03:19.370
We're also excluding
the lib directory,

00:03:19.370 --> 00:03:22.070
since we're pulling in
our dependencies via Maven

00:03:22.070 --> 00:03:23.870
vis a vis Gradle.

00:03:23.870 --> 00:03:25.670
More on Gradle a little later.

00:03:25.670 --> 00:03:28.190
For the project wizard commit,
I used all the defaults,

00:03:28.190 --> 00:03:30.690
except that I chose
a minimum SDK of 11

00:03:30.690 --> 00:03:32.820
so that I had Android
fragments available.

00:03:32.820 --> 00:03:34.490
This allowed me to
use the master detail

00:03:34.490 --> 00:03:36.336
sample as the basis of my app.

00:03:36.336 --> 00:03:38.210
You don't have to choose
version 11 if you're

00:03:38.210 --> 00:03:40.700
creating your own app
and don't want fragments.

00:03:40.700 --> 00:03:42.600
But I like the
simplicity of the tablet

00:03:42.600 --> 00:03:44.310
interface we saw earlier.

00:03:44.310 --> 00:03:45.820
The next commit is a doozy.

00:03:45.820 --> 00:03:48.100
It contains the addition
of the API interaction code

00:03:48.100 --> 00:03:49.060
to the project.

00:03:49.060 --> 00:03:52.020
All of our code that
uses the CE API is here,

00:03:52.020 --> 00:03:54.650
since we need to keep network
calls off the user interface

00:03:54.650 --> 00:03:55.380
thread.

00:03:55.380 --> 00:03:59.380
You can see we basically
instantiate an API stub,

00:03:59.380 --> 00:04:02.970
create a command, then
execute the command.

00:04:02.970 --> 00:04:05.240
In the case of a
delete command, we're

00:04:05.240 --> 00:04:07.230
going to make an
additional status call

00:04:07.230 --> 00:04:09.140
and wait for it to complete.

00:04:09.140 --> 00:04:11.170
In this commit, I also
snuck in the addition

00:04:11.170 --> 00:04:12.520
of a login activity.

00:04:12.520 --> 00:04:14.190
It's the sample
login activity that

00:04:14.190 --> 00:04:16.700
can be created with a right
click in Android studio,

00:04:16.700 --> 00:04:17.351
like this.

00:04:17.351 --> 00:04:19.100
Finally, you will
notice a critical change

00:04:19.100 --> 00:04:21.092
in the build.gradle
file in this commit.

00:04:21.092 --> 00:04:22.550
If you aren't
familiar with Gradle,

00:04:22.550 --> 00:04:24.466
then you could probably
get away with the fact

00:04:24.466 --> 00:04:26.990
that it's the new preferred
way to define your builds.

00:04:26.990 --> 00:04:28.620
This snippet is
specifically pulling

00:04:28.620 --> 00:04:30.570
in all of our dependencies
by defining them

00:04:30.570 --> 00:04:32.240
as Maven dependencies.

00:04:32.240 --> 00:04:34.750
All of the Google client
library for Android jars,

00:04:34.750 --> 00:04:36.920
as well as the surface
extension for Compute,

00:04:36.920 --> 00:04:39.277
will be added to the project
because of these lines.

00:04:39.277 --> 00:04:41.110
The snippet does use
Maven, but you're still

00:04:41.110 --> 00:04:44.460
required to have downloaded some
libraries via the SDK manager.

00:04:44.460 --> 00:04:46.560
Read through the
comments in the snippets

00:04:46.560 --> 00:04:49.770
for the specific packages you
need to have fully updated.

00:04:49.770 --> 00:04:52.200
The next commit has us
implementing the login activity

00:04:52.200 --> 00:04:53.990
to use the Google
account credential.

00:04:53.990 --> 00:04:55.610
This is an Android
aware credential

00:04:55.610 --> 00:04:57.930
that will reuse Google
accounts on the device

00:04:57.930 --> 00:05:00.810
and allow applications
OAuth 2.0 token access.

00:05:00.810 --> 00:05:02.460
Finally, the last
interesting commit

00:05:02.460 --> 00:05:05.410
is the implementation
of the resources list

00:05:05.410 --> 00:05:09.020
to connect to the async
tasks we checked in earlier.

00:05:09.020 --> 00:05:11.130
In this commit, we
adjusted the XML layout

00:05:11.130 --> 00:05:14.440
files to display our resources
and updated the list and detail

00:05:14.440 --> 00:05:18.200
fragments to display our
instances, disks, and zones.

00:05:18.200 --> 00:05:19.520
That's about it for the code.

00:05:19.520 --> 00:05:21.770
I'm really looking forward
to seeing some applications

00:05:21.770 --> 00:05:24.570
on mobile devices that use
the Compute Engine API.

00:05:24.570 --> 00:05:26.170
I appreciate your
time and would ask

00:05:26.170 --> 00:05:28.510
that you star our
project on GitHub and/or

00:05:28.510 --> 00:05:30.550
the video to indicate
they were useful.

00:05:30.550 --> 00:05:32.170
Thank you.

