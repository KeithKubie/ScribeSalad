WEBVTT
Kind: captions
Language: en

00:00:00.980 --> 00:00:01.860
PETER LUBBERS: Hello
and welcome to

00:00:01.860 --> 00:00:03.350
Google Developers Live.

00:00:03.350 --> 00:00:04.510
You're on the Chrome channel.

00:00:04.510 --> 00:00:07.750
I'm Peter Lubbers and with me
today I have special guest

00:00:07.750 --> 00:00:11.950
Addy Osmani, who's a developer
programs engineer in the

00:00:11.950 --> 00:00:14.400
Google Chrome Developer
relations team.

00:00:14.400 --> 00:00:15.510
Addy, how are you?

00:00:15.510 --> 00:00:16.770
ADDY OSMANI: I'm good, thanks.

00:00:16.770 --> 00:00:17.770
PETER LUBBERS: Right, right.

00:00:17.770 --> 00:00:21.140
So today we're really excited
to talk about Yeoman.

00:00:21.140 --> 00:00:24.170
There's been a lot of buzz
around it already.

00:00:24.170 --> 00:00:28.040
It was announced a couple weeks
ago at Google I/O by

00:00:28.040 --> 00:00:29.130
Paul Irish.

00:00:29.130 --> 00:00:32.720
And Addy is one of the main
contributors of the

00:00:32.720 --> 00:00:35.920
tool/workflow optimization.

00:00:35.920 --> 00:00:40.250
And we want to talk a little
bit more about that today.

00:00:40.250 --> 00:00:41.970
Addy's going to give
us a demo, talk a

00:00:41.970 --> 00:00:42.810
little bit about it.

00:00:42.810 --> 00:00:45.670
We have the moderator
questions as well.

00:00:45.670 --> 00:00:48.250
A lot of you have sent your
questions in, we've had

00:00:48.250 --> 00:00:50.600
hundreds of votes already
on those questions.

00:00:50.600 --> 00:00:52.580
So we'll go through
all of that.

00:00:52.580 --> 00:00:56.250
Total time will be about an
hour, and let's dive right in.

00:00:56.250 --> 00:00:58.280
So Addy, what--

00:00:58.280 --> 00:01:01.832
first of all, the pronunciation,
is It "Yo-man?"

00:01:01.832 --> 00:01:02.660
ADDY OSMANI: Yes,
that's perfect.

00:01:02.660 --> 00:01:04.440
PETER LUBBERS: OK, perfect.

00:01:04.440 --> 00:01:08.010
What exactly does Yeoman
do and how does it

00:01:08.010 --> 00:01:10.660
help me as a developer?

00:01:10.660 --> 00:01:13.180
ADDY OSMANI: So Yeoman is an
opinionated workflow for

00:01:13.180 --> 00:01:14.900
creating web applications.

00:01:14.900 --> 00:01:17.080
And when we created it, we took
a look at the way that

00:01:17.080 --> 00:01:19.290
developers are currently
creating web apps.

00:01:19.290 --> 00:01:20.950
And they're spending
quite a lot of time

00:01:20.950 --> 00:01:22.760
on things like process.

00:01:22.760 --> 00:01:24.860
They're spending a lot of time
trying to figure out what

00:01:24.860 --> 00:01:28.140
tools they should be using,
getting those tools into

00:01:28.140 --> 00:01:31.030
things like a build process,
and testing harnesses, and

00:01:31.030 --> 00:01:32.220
stuff like that.

00:01:32.220 --> 00:01:34.610
And then they're spending
a lot of time writing

00:01:34.610 --> 00:01:37.020
boilerplate code when they
want to start using a

00:01:37.020 --> 00:01:40.145
particular framework.

00:01:40.145 --> 00:01:42.480
For example, NBC Frameworks.

00:01:42.480 --> 00:01:46.060
And we thought about how we
could possibly, perhaps bring

00:01:46.060 --> 00:01:48.690
a whole set of opinionated
tools together and give

00:01:48.690 --> 00:01:51.720
developers a single option
that works well and has

00:01:51.720 --> 00:01:54.410
everything set up for them so
they can spend less time on

00:01:54.410 --> 00:01:57.755
process and a little bit more
time focusing on the logic for

00:01:57.755 --> 00:01:58.740
their apps.

00:01:58.740 --> 00:02:00.020
PETER LUBBERS: Great.

00:02:00.020 --> 00:02:03.340
So how did you come
up with the name?

00:02:03.340 --> 00:02:05.820
ADDY OSMANI: So Paul Irish
thought up the name on his way

00:02:05.820 --> 00:02:07.640
out of the bathroom
one day and--

00:02:07.640 --> 00:02:11.920
[LAUGHTER]

00:02:11.920 --> 00:02:13.370
ADDY OSMANI: They had a vote
about what name to go for.

00:02:13.370 --> 00:02:17.160
It wasn't initially the most
popular name, the other one

00:02:17.160 --> 00:02:18.700
was WebApp Boilerplate.

00:02:18.700 --> 00:02:21.340
But we figured there were a
few too many boiler plate

00:02:21.340 --> 00:02:22.920
projects out there
at the moment.

00:02:22.920 --> 00:02:25.390
And Yeoman was a good fit.

00:02:25.390 --> 00:02:30.160
So Yeoman in Old English times
was a servant to the sovereign

00:02:30.160 --> 00:02:32.650
that would perform a number of
different tasks for them.

00:02:32.650 --> 00:02:34.790
And we thought, that's
a pretty good fit,

00:02:34.790 --> 00:02:36.420
and the name stuck.

00:02:36.420 --> 00:02:37.290
PETER LUBBERS: Excellent,
excellent.

00:02:37.290 --> 00:02:40.040
I like the new logo for it.

00:02:40.040 --> 00:02:46.020
So is it at the high level,
is it easy install, to get

00:02:46.020 --> 00:02:48.442
started with it?

00:02:48.442 --> 00:02:49.320
How does that work?

00:02:49.320 --> 00:02:51.820
ADDY OSMANI: Yeoman takes just
a few minutes to install.

00:02:51.820 --> 00:02:53.990
And once it's done for the first
time, you don't have to

00:02:53.990 --> 00:02:54.790
do that again.

00:02:54.790 --> 00:02:57.870
You can easily start using
it to create projects.

00:02:57.870 --> 00:03:00.210
Whenever you're working with
particular dependencies,

00:03:00.210 --> 00:03:02.560
whether it be Twitter
Bootstrap, or HTML5

00:03:02.560 --> 00:03:05.960
Boilerplate, when we fetch
those, we actually catch them.

00:03:05.960 --> 00:03:08.980
So the time taken to actually
get those things is really

00:03:08.980 --> 00:03:10.210
only in the first instance.

00:03:10.210 --> 00:03:12.600
Every single other time we're
just fetching it from cache

00:03:12.600 --> 00:03:16.050
and we provide you ways to
update those if you want to.

00:03:16.050 --> 00:03:18.170
But getting started
is extremely easy.

00:03:18.170 --> 00:03:20.440
Anybody can get started
in just a few minutes.

00:03:20.440 --> 00:03:23.500
It's a fairly easy tool
to use, I think.

00:03:23.500 --> 00:03:23.605
PETER LUBBERS: Right.

00:03:23.605 --> 00:03:26.890
Now you say anybody, so is
it available for Windows?

00:03:26.890 --> 00:03:30.340
I think a lot of the demos
I saw were Ma-based.

00:03:30.340 --> 00:03:31.540
What's the latest on that?

00:03:31.540 --> 00:03:34.530
ADDY OSMANI: At the moment
we're targeting nix-based

00:03:34.530 --> 00:03:35.760
environments.

00:03:35.760 --> 00:03:38.800
We do have Windows on our sites
and we're hoping to

00:03:38.800 --> 00:03:41.510
target Windows users with the
next version of the projects.

00:03:41.510 --> 00:03:42.550
PETER LUBBERS: Right.

00:03:42.550 --> 00:03:45.750
Now tell me a little bit before
we get into an actual

00:03:45.750 --> 00:03:46.770
look of it.

00:03:46.770 --> 00:03:50.670
Tell me a little bit about
the current status of it.

00:03:50.670 --> 00:03:53.790
It was announced at I/O, what's
the current status, how

00:03:53.790 --> 00:03:56.050
can you get involved with it?

00:03:56.050 --> 00:03:57.470
ADDY OSMANI: So the project
was announced

00:03:57.470 --> 00:03:58.800
at I/O, as you mentioned.

00:03:58.800 --> 00:04:01.680
And we've spent a few weeks
refactoring it and getting a

00:04:01.680 --> 00:04:03.900
few new ideas into
the project.

00:04:03.900 --> 00:04:06.570
One that we're really excited
about is the concept of

00:04:06.570 --> 00:04:07.960
generators.

00:04:07.960 --> 00:04:10.590
For anybody that's used Ruby on
Rails before, you might be

00:04:10.590 --> 00:04:12.840
familiar with their
generator system.

00:04:12.840 --> 00:04:15.520
And we thought it would be
pretty cool if we were able to

00:04:15.520 --> 00:04:18.700
bring that to front-end
development so that developers

00:04:18.700 --> 00:04:20.310
don't have to spend that
much time running

00:04:20.310 --> 00:04:20.600
boiler place code.

00:04:20.600 --> 00:04:24.240
And they can say I was to use a
particular framework, maybe

00:04:24.240 --> 00:04:27.160
there's a Yeoman scaffold
available for it and I can

00:04:27.160 --> 00:04:30.240
start writing out my project
logic without having to do all

00:04:30.240 --> 00:04:32.890
the other manual plumbing that
I'd normally have to.

00:04:32.890 --> 00:04:34.170
So we've been working on that.

00:04:34.170 --> 00:04:37.445
We've been working on tidying
up the rest of the project,

00:04:37.445 --> 00:04:40.010
making sure it is as
stable as possible.

00:04:40.010 --> 00:04:42.190
And yeah, I'll hopefully
be showing you some

00:04:42.190 --> 00:04:43.375
of that stuff today.

00:04:43.375 --> 00:04:44.910
PETER LUBBERS: OK, excellent,
excellent.

00:04:44.910 --> 00:04:49.460
Well, how about maybe you
can share your demo

00:04:49.460 --> 00:04:50.360
with us and we can--

00:04:50.360 --> 00:04:51.160
ADDY OSMANI: Absolutely.

00:04:51.160 --> 00:04:52.070
PETER LUBBERS: --dive
right into it.

00:04:52.070 --> 00:04:53.390
So let's take a look at it.

00:04:53.390 --> 00:04:53.750
ADDY OSMANI: Certainly.

00:04:53.750 --> 00:04:54.952
PETER LUBBERS: What have
you got there?

00:04:54.952 --> 00:04:56.670
ADDY OSMANI: OK, so we're going
to start off with a

00:04:56.670 --> 00:04:58.750
command prompt.

00:04:58.750 --> 00:05:01.830
So Yeoman supports a few
different commands and you can

00:05:01.830 --> 00:05:03.770
access the list of
these using Help.

00:05:03.770 --> 00:05:06.130
And the list you'll see at the
moment includes Init for

00:05:06.130 --> 00:05:09.340
initializing scaffolding
projects using our generators.

00:05:09.340 --> 00:05:10.810
Build for building an optimized

00:05:10.810 --> 00:05:12.240
version of your project.

00:05:12.240 --> 00:05:14.700
Server, Test, and a few
others that I'll talk

00:05:14.700 --> 00:05:15.950
about in a few minutes.

00:05:15.950 --> 00:05:19.500
Now the basic idea that we
showed in the first video

00:05:19.500 --> 00:05:21.950
about Yeoman was that you could
pick off a project using

00:05:21.950 --> 00:05:23.630
Yeoman Init.

00:05:23.630 --> 00:05:25.620
Now over the past couple of
weeks, because we've been

00:05:25.620 --> 00:05:28.580
writing this generator system,
we figured well, why isn't

00:05:28.580 --> 00:05:30.700
Init also just another
scaffold?

00:05:30.700 --> 00:05:34.300
And so when we kick start this
off to create a new project,

00:05:34.300 --> 00:05:36.390
what you'll see is that you
get a welcome prompt.

00:05:36.390 --> 00:05:39.790
This is a scaffold, anybody can
go create their own one.

00:05:39.790 --> 00:05:42.370
They can include their own ASVR,
their own dependencies

00:05:42.370 --> 00:05:43.440
and things.

00:05:43.440 --> 00:05:45.710
There's already a project in
here at the moment, so I'm

00:05:45.710 --> 00:05:51.140
going to say Force, and it's now
going to ask me what I'd

00:05:51.140 --> 00:05:52.430
like to include in
the project.

00:05:52.430 --> 00:05:55.530
So here, in this particular
scaffold, we're going to by

00:05:55.530 --> 00:05:57.380
default include HTML5

00:05:57.380 --> 00:05:59.590
Boilerplate and Twitter Bootstrap.

00:05:59.590 --> 00:06:00.590
We find that quite a lot of

00:06:00.590 --> 00:06:02.910
developers use those regularly.

00:06:02.910 --> 00:06:05.513
But we thought, let's ask them
if they'd also like to include

00:06:05.513 --> 00:06:07.970
the Twitter Bootstrap plug-ins,
the jQuery plug-ins

00:06:07.970 --> 00:06:10.760
in case they perhaps want
to use those too.

00:06:10.760 --> 00:06:12.700
You can then go and
configure options.

00:06:12.700 --> 00:06:17.030
And we'll then go and pull the
latest versions of the HTML5

00:06:17.030 --> 00:06:21.610
Boilerplate projects, Compass
Bootstraps so you can edit the

00:06:21.610 --> 00:06:23.140
Twitter Bootstrap
source files.

00:06:23.140 --> 00:06:27.240
And we'll also set up a test
harness for Jasmine so you can

00:06:27.240 --> 00:06:29.100
start writing unit tests.

00:06:29.100 --> 00:06:31.070
Now I'm going to show
you something I

00:06:31.070 --> 00:06:33.510
think is pretty cool.

00:06:33.510 --> 00:06:36.670
I have to switch windows
very quickly, a second.

00:06:42.710 --> 00:06:46.610
So we just generated a directory
containing a bunch

00:06:46.610 --> 00:06:47.590
of different files.

00:06:47.590 --> 00:06:50.080
And the index file that's
created will look quite

00:06:50.080 --> 00:06:53.410
familiar to people who've used
HTML5 Boilerplate before.

00:06:53.410 --> 00:06:58.040
And when we go through it, you
see that it's fairly regular

00:06:58.040 --> 00:07:00.170
until we get to the very end.

00:07:00.170 --> 00:07:03.400
And in the end you see this
block-- let me zoom in a

00:07:03.400 --> 00:07:05.480
little bit so it's bit
easier to read.

00:07:05.480 --> 00:07:06.620
PETER LUBBERS: Thanks.

00:07:06.620 --> 00:07:09.160
ADDY OSMANI: So this is a really
interesting block.

00:07:09.160 --> 00:07:12.960
This code right around it, it's
an HTML comment, this is

00:07:12.960 --> 00:07:16.810
a decorative way we've invited
people to define what final

00:07:16.810 --> 00:07:21.200
output file you would like all
of the files inside a block to

00:07:21.200 --> 00:07:23.590
get concatenated and
minified into.

00:07:23.590 --> 00:07:25.850
So rather than you having to
go and set up any of this

00:07:25.850 --> 00:07:29.280
stuff inside a configuration
file, you can configure where

00:07:29.280 --> 00:07:32.630
any block of scripts finally
gets output to using your

00:07:32.630 --> 00:07:36.010
HTML, which we thought
was quite fun.

00:07:36.010 --> 00:07:37.980
PETER LUBBERS: Yeah,
that's great.

00:07:37.980 --> 00:07:41.060
ADDY OSMANI: What this actually
provides you with is

00:07:41.060 --> 00:07:42.650
fairly basic.

00:07:42.650 --> 00:07:46.672
Let's go back to the command
prompt very, very quickly.

00:07:46.672 --> 00:07:47.922
One second.

00:07:50.290 --> 00:07:51.910
Let's clear this out.

00:07:51.910 --> 00:07:56.590
Now when you want to get a
dependency for a project,

00:07:56.590 --> 00:07:59.730
whether it be jQuery, or
Backbone, or something else,

00:07:59.730 --> 00:08:02.030
you'll either go to GitHub and
try to get the latest version

00:08:02.030 --> 00:08:05.260
of the project, or you'll go the
project's homepage and get

00:08:05.260 --> 00:08:06.905
the latest version
that they've made

00:08:06.905 --> 00:08:07.800
available through there.

00:08:07.800 --> 00:08:11.060
That involves opening up a web
browser and doing quite a few

00:08:11.060 --> 00:08:13.460
manual steps to get
it and then saving

00:08:13.460 --> 00:08:14.210
it locally, et cetera.

00:08:14.210 --> 00:08:18.440
We thought well, systems like
NPM are really, really nice to

00:08:18.440 --> 00:08:19.350
pull packages down from.

00:08:19.350 --> 00:08:21.610
Why don't we provide developers
with something a

00:08:21.610 --> 00:08:22.840
little bit similar?

00:08:22.840 --> 00:08:26.270
So if I, for example, wanted
to go get a dependency, I

00:08:26.270 --> 00:08:28.320
already have jQuery in this
project, but let's say I

00:08:28.320 --> 00:08:30.360
wanted to grab it anyway.

00:08:30.360 --> 00:08:33.260
I can simply go and do Yeoman,
Install, jQuery.

00:08:33.260 --> 00:08:36.640
It'll check our registry for
that and if it finds it, it'll

00:08:36.640 --> 00:08:39.450
simply fetch it and provide
you with a local version.

00:08:39.450 --> 00:08:40.720
That's very, very simple.

00:08:40.720 --> 00:08:42.789
You didn't have to go to open
up a web browser or do

00:08:42.789 --> 00:08:44.140
anything else.

00:08:44.140 --> 00:08:49.060
If I wanted to include something
let's say, Backbone,

00:08:49.060 --> 00:08:51.460
it's a very, very
similar process.

00:08:51.460 --> 00:08:53.690
Split second, you've
got the dependency.

00:08:53.690 --> 00:08:56.070
And this isn't just going and
fetching you Backbone.

00:08:56.070 --> 00:08:59.240
It's resolving all the different
dependencies that a

00:08:59.240 --> 00:09:01.290
particular library
might also need.

00:09:01.290 --> 00:09:05.383
So Backbone, for example, will
need jQuery itself and it will

00:09:05.383 --> 00:09:06.675
also need Underscore.

00:09:06.675 --> 00:09:09.510
We've actually gone and fetched
those for you when you

00:09:09.510 --> 00:09:11.020
did Yeoman, Install, Backbone.

00:09:11.020 --> 00:09:14.540
So it's very, very easy to go
and start using libraries in

00:09:14.540 --> 00:09:17.060
your project regardless of
whether they have a ton of

00:09:17.060 --> 00:09:20.270
dependencies themselves
or not.

00:09:20.270 --> 00:09:22.910
Another really interesting thing
that I'd like to show

00:09:22.910 --> 00:09:26.730
you is an example of another
type of Yeoman generator.

00:09:26.730 --> 00:09:32.700
When I mentioned earlier on on
Twitter, I think a week or two

00:09:32.700 --> 00:09:35.590
ago, that we were working on
this generator system, quite a

00:09:35.590 --> 00:09:38.610
few people, and I think on the
moderator queue as well--

00:09:38.610 --> 00:09:38.770
PETER LUBBERS: Yeah.

00:09:38.770 --> 00:09:41.375
ADDY OSMANI: --were asking are
we going to support Ember, are

00:09:41.375 --> 00:09:44.600
we going to support Backbone
and Angular, and all these

00:09:44.600 --> 00:09:45.930
other frameworks?

00:09:45.930 --> 00:09:49.640
And I'll talk a little bit about
for a moment, second.

00:09:49.640 --> 00:09:51.750
Let's switch back
to the terminal.

00:09:55.770 --> 00:09:58.770
So I've scaffolded out a
very basic project now.

00:09:58.770 --> 00:10:02.840
If I want to start using a
library like Backbone and I

00:10:02.840 --> 00:10:05.970
want to not have to write all
the boilerplate code for my

00:10:05.970 --> 00:10:08.900
models and my collections and
my other bits and pieces, I

00:10:08.900 --> 00:10:13.880
can go and do Yeoman,
Init, Backbone, All.

00:10:13.880 --> 00:10:16.670
And that will automatically go
and create me a scaffolded

00:10:16.670 --> 00:10:18.000
version of my application.

00:10:18.000 --> 00:10:20.880
Now I'm going to run this
in just a second.

00:10:20.880 --> 00:10:22.910
Generators are really
interesting.

00:10:22.910 --> 00:10:25.040
They don't just support
scaffolding

00:10:25.040 --> 00:10:26.640
out an entire project.

00:10:26.640 --> 00:10:28.600
Every single part of a framework
that we have

00:10:28.600 --> 00:10:31.505
scaffolded out is considered
a sub-generator.

00:10:31.505 --> 00:10:35.170
So if you wanted to generate a
new model, all I have to is

00:10:35.170 --> 00:10:39.090
Backbone, Model, and
then my model name.

00:10:39.090 --> 00:10:41.320
The exact same thing with
a view or a collection.

00:10:44.540 --> 00:10:46.850
And that would work as well.

00:10:46.850 --> 00:10:50.030
For this case, I want to
basically create all of them

00:10:50.030 --> 00:10:50.980
just for our demo.

00:10:50.980 --> 00:10:54.090
And I know that I'm going to be
overwriting some existing

00:10:54.090 --> 00:10:57.070
files and so I'm going to pass
the Force flag in there.

00:10:57.070 --> 00:11:00.600
And very, very quickly it's gone
and it's created a bunch

00:11:00.600 --> 00:11:02.360
of different directories
for my application--

00:11:02.360 --> 00:11:04.810
models, collections,
views, routes--

00:11:04.810 --> 00:11:07.210
that are going to be needed by
the additional files that this

00:11:07.210 --> 00:11:09.880
particular framework uses.

00:11:09.880 --> 00:11:12.148
And I've got--

00:11:12.148 --> 00:11:15.355
I can't tell if you can see
the highlights of--

00:11:15.355 --> 00:11:16.630
PETER LUBBERS: Yeah,
I can see them.

00:11:16.630 --> 00:11:18.220
ADDY OSMANI: I've got my
application view, I've got a

00:11:18.220 --> 00:11:21.450
template for the view, I've got
a model created, I've got

00:11:21.450 --> 00:11:22.890
a collection created.

00:11:22.890 --> 00:11:24.950
And we can go and inspect
one of these files.

00:11:24.950 --> 00:11:32.740
So if we were to go to Apps.js
views, application view, take

00:11:32.740 --> 00:11:33.620
a look at that.

00:11:33.620 --> 00:11:36.390
It's actually scaffolded out an
extremely basic view that

00:11:36.390 --> 00:11:38.510
we can use.

00:11:38.510 --> 00:11:45.660
Now, if I very quickly show you
something else, I'm going

00:11:45.660 --> 00:11:48.900
to skip right back to the prompt
very quickly to show

00:11:48.900 --> 00:11:51.580
you the built-in Yeoman
server task.

00:11:51.580 --> 00:11:52.590
Oh, let's see.

00:11:52.590 --> 00:11:58.352
So when I preview this
application in a second.

00:11:58.352 --> 00:12:02.900
[TYPING]

00:12:02.900 --> 00:12:05.766
There we go.

00:12:05.766 --> 00:12:07.980
All right.

00:12:07.980 --> 00:12:13.100
So if I do Yeoman server, now.

00:12:13.100 --> 00:12:14.735
And I'll need to--

00:12:18.180 --> 00:12:20.445
pardon me for having to switch
through so many windows.

00:12:20.445 --> 00:12:21.070
PETER LUBBERS: No problem.

00:12:21.070 --> 00:12:23.480
What does the Yeoman
server do?

00:12:23.480 --> 00:12:25.620
ADDY OSMANI: So Yeoman server
basically kicks off a local

00:12:25.620 --> 00:12:28.930
http server that you can use
preview your application.

00:12:28.930 --> 00:12:31.970
And when you run that, we go and
we automatically compile

00:12:31.970 --> 00:12:34.210
all of your CoffeeScript files,
all of your Compass

00:12:34.210 --> 00:12:36.510
files, and any other files that
might need a level of

00:12:36.510 --> 00:12:40.136
compilation in them to provide
you with an intermediate view

00:12:40.136 --> 00:12:41.500
of your application.

00:12:41.500 --> 00:12:44.180
Consider it something a little
close to production-level

00:12:44.180 --> 00:12:47.360
build, but not quite there in
case you want to still edit

00:12:47.360 --> 00:12:49.820
some source files and make
other changes before we

00:12:49.820 --> 00:12:51.290
optimize everything.

00:12:51.290 --> 00:12:51.730
PETER LUBBERS: Great.

00:12:51.730 --> 00:12:55.560
What server are you using for it
now, or is it configurable?

00:12:55.560 --> 00:12:57.420
ADDY OSMANI: It's
configurable.

00:12:57.420 --> 00:13:01.580
We're also tying this in to the
Yeoman Watch Task, which

00:13:01.580 --> 00:13:02.550
again, does a very
similar thing.

00:13:02.550 --> 00:13:05.510
If you make changes to your
Compass or CoffeeScript files.

00:13:05.510 --> 00:13:08.600
It'll automatically go and
compile those files for you so

00:13:08.600 --> 00:13:11.510
your preview is constantly up to
date without you having to

00:13:11.510 --> 00:13:12.780
go and manually do anything.

00:13:12.780 --> 00:13:13.534
PETER LUBBERS: Excellent,
excellent.

00:13:13.534 --> 00:13:15.100
Wow.

00:13:15.100 --> 00:13:16.550
ADDY OSMANI: Now let me take
you to the preview.

00:13:16.550 --> 00:13:19.600
Now you be seeing the
window that's barely

00:13:19.600 --> 00:13:20.890
playing at the moment.

00:13:20.890 --> 00:13:23.790
There's nothing really in there,
but there's actually--

00:13:23.790 --> 00:13:25.510
that's our application.

00:13:25.510 --> 00:13:27.038
It's a very blank-looking
window.

00:13:27.038 --> 00:13:31.250
But you go to the development
tools, and what you see--

00:13:31.250 --> 00:13:33.860
I'm not sure if anybody can see
this, but there's a line

00:13:33.860 --> 00:13:36.195
that says, hello
from Backbone.

00:13:36.195 --> 00:13:38.470
PETER LUBBERS: Yep.

00:13:38.470 --> 00:13:44.260
ADDY OSMANI: And if we flip back
to Sublime very quickly,

00:13:44.260 --> 00:13:45.605
I think [INAUDIBLE] the code.

00:13:51.780 --> 00:13:53.030
Just a second.

00:13:59.760 --> 00:14:03.256
I'll take you through
the code.

00:14:03.256 --> 00:14:06.950
So we've got an application
view.

00:14:06.950 --> 00:14:11.470
Myapp.js is basically a file
which contains the initial

00:14:11.470 --> 00:14:12.245
part of your application.

00:14:12.245 --> 00:14:14.420
It contains the name, space,
generation stuff.

00:14:14.420 --> 00:14:16.960
So here for example, I'm
defining my name space.

00:14:16.960 --> 00:14:19.880
Where do I want my models,
inflections and other bits and

00:14:19.880 --> 00:14:20.980
pieces to go.

00:14:20.980 --> 00:14:24.110
And you can also see an Init
function here, which just

00:14:24.110 --> 00:14:27.280
says, hello from Backbone on
the console when it is

00:14:27.280 --> 00:14:28.190
correctly loaded up.

00:14:28.190 --> 00:14:30.490
And that means that everything
is working correctly.

00:14:30.490 --> 00:14:33.460
Backbone's properly loaded
up and everything from a

00:14:33.460 --> 00:14:35.960
scaffolding point of view
more or less works.

00:14:35.960 --> 00:14:38.260
But that's boring.

00:14:38.260 --> 00:14:41.590
What if we were to go to our
application view and stick

00:14:41.590 --> 00:14:44.570
something a little more
interesting in there.

00:14:44.570 --> 00:14:47.120
I wrote a very, very quick
Backbone application a few

00:14:47.120 --> 00:14:48.110
minutes ago.

00:14:48.110 --> 00:14:51.510
All it's doing is we're working
against the body.

00:14:51.510 --> 00:14:53.890
This is a self-rendering view.

00:14:53.890 --> 00:14:57.170
And we're going to pin some
content to it when the view

00:14:57.170 --> 00:14:58.310
gets initialized.

00:14:58.310 --> 00:15:00.860
So I'm updating the
names spaces

00:15:00.860 --> 00:15:02.800
that I'm working against.

00:15:02.800 --> 00:15:11.560
And I'm going to return back
now to a preview window.

00:15:11.560 --> 00:15:29.880
[TYPING]

00:15:29.880 --> 00:15:31.212
ADDY OSMANI: Just a second.

00:15:35.550 --> 00:15:40.650
And what you should see now
is Yeoman with hello

00:15:40.650 --> 00:15:41.660
developers in there.

00:15:41.660 --> 00:15:43.931
And we;ve got a view
that's working.

00:15:43.931 --> 00:15:45.860
We've got a very, very simple
application, but an

00:15:45.860 --> 00:15:48.460
application that's
working as well.

00:15:48.460 --> 00:15:49.880
That's all fine.

00:15:49.880 --> 00:15:53.430
But people probably also
interested in things like the

00:15:53.430 --> 00:15:54.100
build process.

00:15:54.100 --> 00:15:54.970
PETER LUBBERS: Right, right.

00:15:54.970 --> 00:15:58.330
There have been a couple of
questions online about the

00:15:58.330 --> 00:16:00.530
build process as well.

00:16:00.530 --> 00:16:03.600
So yeah, step us through
that a little bit.

00:16:03.600 --> 00:16:07.300
By the way, is that related to
the HTML5 Boilerplate build

00:16:07.300 --> 00:16:10.550
process that you said was
already included in that?

00:16:10.550 --> 00:16:13.890
ADDY OSMANI: So what we've done
is the node-build-script

00:16:13.890 --> 00:16:15.830
project is part of the HTML5

00:16:15.830 --> 00:16:18.270
Boilerplate umbrella of projects.

00:16:18.270 --> 00:16:20.990
And that's a part of Yeoman.

00:16:20.990 --> 00:16:26.970
We've taken a look at how to
redo that as better as we can.

00:16:26.970 --> 00:16:29.090
And we've built a lot
on top of that to--

00:16:29.090 --> 00:16:30.270
PETER LUBBERS: OK, great.

00:16:30.270 --> 00:16:31.510
ADDY OSMANI: --a little
bit better.

00:16:31.510 --> 00:16:35.230
Michael Daniels is the guy that
maintains that project

00:16:35.230 --> 00:16:37.600
and he's on the Yeoman team,
which has been really, really

00:16:37.600 --> 00:16:40.240
helpful for us.

00:16:40.240 --> 00:16:43.440
So I'm going to quickly
take you through the

00:16:43.440 --> 00:16:44.750
Yeoman build process.

00:16:44.750 --> 00:16:47.310
So very similar to the other
commands, when I do Yeoman

00:16:47.310 --> 00:16:51.830
build, it's going to go now
and build up the project.

00:16:51.830 --> 00:16:53.910
It's concatenating all the
script's, it's minifying

00:16:53.910 --> 00:16:56.950
everything, and it's producing
an optimized

00:16:56.950 --> 00:16:58.580
version of your project.

00:16:58.580 --> 00:17:02.030
Somebody earlier was asking on
the moderator queue, do we

00:17:02.030 --> 00:17:04.220
support file versioning.

00:17:04.220 --> 00:17:06.349
Take a look at some of the file
names that are initially

00:17:06.349 --> 00:17:08.870
being generated in one of
the intermediate steps.

00:17:08.870 --> 00:17:10.950
The answer to that
is yes, we do.

00:17:10.950 --> 00:17:14.359
We do support file versioning.

00:17:14.359 --> 00:17:16.819
And so what is the Yeoman
build process

00:17:16.819 --> 00:17:19.430
actually doing for you?

00:17:19.430 --> 00:17:21.010
We'll talk about that
very quickly.

00:17:21.010 --> 00:17:23.819
So when you start building a
project, the first thing we're

00:17:23.819 --> 00:17:26.520
going to do is actually see if
there's any optimizations we

00:17:26.520 --> 00:17:29.590
can make to the scripts
and the CSS files.

00:17:29.590 --> 00:17:30.890
What needs to be compiled?

00:17:30.890 --> 00:17:34.060
Again, we're talking about
Compass and CoffeeScript.

00:17:34.060 --> 00:17:35.090
We're then going to
take a look at the

00:17:35.090 --> 00:17:36.700
images in your project.

00:17:36.700 --> 00:17:39.010
We spent quite a lot of time
taking a look at image

00:17:39.010 --> 00:17:42.080
compression and we benchmarked
a lot of the solutions that

00:17:42.080 --> 00:17:46.290
are out there at the moment
for making the small size

00:17:46.290 --> 00:17:49.990
images with as little lost
quality as possible.

00:17:49.990 --> 00:17:51.580
And that's essentially
what we're going to

00:17:51.580 --> 00:17:52.300
do with your project.

00:17:52.300 --> 00:17:54.240
We're going to go through all
of your images, and produce

00:17:54.240 --> 00:17:56.710
optimal versions of them
that hopefully take up

00:17:56.710 --> 00:17:58.570
less space as well.

00:17:58.570 --> 00:18:02.340
We're then going to optimize
the rest of your payload,

00:18:02.340 --> 00:18:05.540
regenerate you an application
cache manifest.

00:18:05.540 --> 00:18:07.850
That's something that sometimes
developers that are

00:18:07.850 --> 00:18:10.960
interested and take a look at
offline have challenges with

00:18:10.960 --> 00:18:13.280
because not everybody
knows the structure

00:18:13.280 --> 00:18:14.370
to a manifest file--

00:18:14.370 --> 00:18:14.910
PETER LUBBERS: Yep.

00:18:14.910 --> 00:18:16.960
ADDY OSMANI: --and sometimes
end up having to go back to

00:18:16.960 --> 00:18:19.740
different articles to try
figuring out OK, how should it

00:18:19.740 --> 00:18:20.490
properly be done?

00:18:20.490 --> 00:18:24.300
With Yeoman we automatically
generate one of those for you.

00:18:24.300 --> 00:18:26.350
PETER LUBBERS: And you can
configure it like you did in,

00:18:26.350 --> 00:18:27.550
for example, in Boilerplate?

00:18:27.550 --> 00:18:31.590
That was a real huge time saver,
or aggravation saver,

00:18:31.590 --> 00:18:34.730
rather, because you have to
always update that manifest

00:18:34.730 --> 00:18:37.020
file and if you forget
it, then--

00:18:37.020 --> 00:18:38.620
[LAUGHTER]

00:18:38.620 --> 00:18:39.460
PETER LUBBERS: Perfect,
perfect.

00:18:39.460 --> 00:18:41.030
ADDY OSMANI: And we've of
course-- it looks like the

00:18:41.030 --> 00:18:43.030
lights have been turned off
here very, very quickly.

00:18:43.030 --> 00:18:44.300
I'm going to go activate them.

00:18:50.660 --> 00:18:52.314
Sorry about that.

00:18:52.314 --> 00:18:53.250
PETER LUBBERS: No problem.

00:18:53.250 --> 00:18:54.772
ADDY OSMANI: We're also going
to do things like run all of

00:18:54.772 --> 00:18:57.750
your unit tests through
PhantomJS, which is going to

00:18:57.750 --> 00:19:00.960
be doing the headless Webkit
testing for you.

00:19:00.960 --> 00:19:03.700
Another nice thing about the
Yeoman generator is that we're

00:19:03.700 --> 00:19:07.320
going to hopefully encourage
more developers to do, is to

00:19:07.320 --> 00:19:09.890
include automatic scaffolding
for basic unit

00:19:09.890 --> 00:19:11.170
tests to do the framework.

00:19:11.170 --> 00:19:14.800
So the Backbone one, or perhaps
an Ember one, or an

00:19:14.800 --> 00:19:17.590
AngularJS one, if you started
creating a model, wouldn't it

00:19:17.590 --> 00:19:21.050
be really cool if it also
created a scaffold for your

00:19:21.050 --> 00:19:23.200
unit tests to go with you?

00:19:23.200 --> 00:19:24.800
And we're taking a look
at that right now.

00:19:24.800 --> 00:19:27.745
We're hopeful that the
generators that we include out

00:19:27.745 --> 00:19:30.150
of the box with Yeoman are going
to include unit test

00:19:30.150 --> 00:19:32.020
scaffolds so that people
can take a

00:19:32.020 --> 00:19:34.010
look at them for reference.

00:19:34.010 --> 00:19:37.880
And we hope that we can do our
part to encourage developers

00:19:37.880 --> 00:19:41.020
to give unit testing a really
hard thing because it is an

00:19:41.020 --> 00:19:45.840
important part of the whole
process at the end of the day.

00:19:45.840 --> 00:19:48.270
Other than that, that's it
for the build process.

00:19:48.270 --> 00:19:51.600
There are few other minor
optimizations we make to your

00:19:51.600 --> 00:19:54.560
files, but that's really it.

00:19:54.560 --> 00:19:58.360
We have a few other commands
that help you search through

00:19:58.360 --> 00:20:00.850
the registry for different
dependencies you might need

00:20:00.850 --> 00:20:02.710
and other helpful [INAUDIBLE]

00:20:02.710 --> 00:20:03.910
unit testing.

00:20:03.910 --> 00:20:07.230
But I'm going to very quickly
show you an example of a

00:20:07.230 --> 00:20:08.900
Yeoman generator.

00:20:08.900 --> 00:20:11.920
This is probably the first
public code for Yeoman.

00:20:11.920 --> 00:20:13.870
PETER LUBBERS: OK.

00:20:13.870 --> 00:20:14.830
Excellent.

00:20:14.830 --> 00:20:16.616
ADDY OSMANI: Let me see if
I can pull it up quickly.

00:20:24.400 --> 00:20:25.600
OK.

00:20:25.600 --> 00:20:29.030
So you might remember the
Initial prompt that I showed

00:20:29.030 --> 00:20:31.460
you at the start where we asked
you if you'd like to

00:20:31.460 --> 00:20:34.050
include the Twitter Bootstrap
plug-ins and if you'd like to

00:20:34.050 --> 00:20:35.690
do one or two other things.

00:20:35.690 --> 00:20:39.420
Now the come for that is hooking
into our generator API

00:20:39.420 --> 00:20:41.050
and our prompts API.

00:20:41.050 --> 00:20:44.150
And we provided developers with
a really, really rich API

00:20:44.150 --> 00:20:46.740
for doing anything they
want with generators.

00:20:46.740 --> 00:20:50.070
If you want to create a
generator that depends on some

00:20:50.070 --> 00:20:53.100
different assets from Github or
through your site or from

00:20:53.100 --> 00:20:53.940
different servers.

00:20:53.940 --> 00:20:54.960
We're going to support
allowing you to

00:20:54.960 --> 00:20:56.540
easily pull those in.

00:20:56.540 --> 00:20:58.900
If you want to easily
wire things up.

00:20:58.900 --> 00:21:02.610
So if you downloaded perhaps an
entire repository as a part

00:21:02.610 --> 00:21:05.050
of your dependencies and you
only want to filter out a few

00:21:05.050 --> 00:21:08.340
files or perhaps you only want
to include a few files in the

00:21:08.340 --> 00:21:11.840
user's index, the user's app,
we give you easy methods to

00:21:11.840 --> 00:21:13.000
let you do those things.

00:21:13.000 --> 00:21:15.600
And there's a ton of different
helpers in place to help you

00:21:15.600 --> 00:21:19.030
achieve a lot of the tasks that
I think developers that

00:21:19.030 --> 00:21:22.080
want to write generators are
going to want to do.

00:21:22.080 --> 00:21:26.800
I think one of the moderator
questions was, is Yeoman going

00:21:26.800 --> 00:21:30.750
to include all these
generators for--

00:21:30.750 --> 00:21:31.790
[INTERPOSING VOICES]

00:21:31.790 --> 00:21:34.110
PETER LUBBERS: Yeah, they gave
us one from Yunkeltron from

00:21:34.110 --> 00:21:34.710
New Haven, so--

00:21:34.710 --> 00:21:34.990
ADDY OSMANI: Yes.

00:21:34.990 --> 00:21:37.030
PETER LUBBERS: Yeah, what work
has been done on generators

00:21:37.030 --> 00:21:40.200
front, and what will the
integration look like with

00:21:40.200 --> 00:21:42.140
respect to community
contributed?

00:21:42.140 --> 00:21:43.900
ADDY OSMANI: I think what Yeoman
will probably do is

00:21:43.900 --> 00:21:46.800
we'll probably give developers
one or two really, really good

00:21:46.800 --> 00:21:48.510
scaffolds right out
of the box.

00:21:48.510 --> 00:21:51.720
And we might start maintaining a
few others like experimental

00:21:51.720 --> 00:21:54.490
ones from Backbone and
another frameworks

00:21:54.490 --> 00:21:55.980
outside of the project.

00:21:55.980 --> 00:21:58.010
But we're going to work with
different people in the

00:21:58.010 --> 00:22:01.750
community, hopefully framework
authors, and develop the best

00:22:01.750 --> 00:22:04.860
set of generators hopefully.

00:22:04.860 --> 00:22:07.760
That maybe community driven and
can include all the best

00:22:07.760 --> 00:22:10.270
practices that particular
frameworks need to use.

00:22:10.270 --> 00:22:15.510
And hopefully that'll give
people some want to start

00:22:15.510 --> 00:22:18.710
creating whole communities and
whole sites full of generators

00:22:18.710 --> 00:22:20.580
that you can easily share
with other people.

00:22:20.580 --> 00:22:23.240
If somebody doesn't like a
particular generator and wants

00:22:23.240 --> 00:22:25.780
to easily customize it and do
other things, they've got

00:22:25.780 --> 00:22:30.770
entire API to play around with
that they can use to do that.

00:22:30.770 --> 00:22:33.790
And yeah, I mean it's
extremely simple.

00:22:33.790 --> 00:22:37.163
Here for example is some code
that is manually wiring in a

00:22:37.163 --> 00:22:39.370
bunch of scripts to do with the

00:22:39.370 --> 00:22:40.850
Twitter Bootstrap plug-ins.

00:22:40.850 --> 00:22:44.922
We also offer ways of pending
entire directories of scripts,

00:22:44.922 --> 00:22:48.532
for example, in this thing
that I've highlighted.

00:22:48.532 --> 00:22:51.480
It works really, really well
with AMD for people who like

00:22:51.480 --> 00:22:56.390
to use RequireJS and AMD modules
in their setups.

00:22:56.390 --> 00:23:00.270
And we've tried to be as
comprehensive as possible with

00:23:00.270 --> 00:23:03.120
what Yeoman lets developers
achieve.

00:23:03.120 --> 00:23:06.430
I don't think that there's
a popular set up that the

00:23:06.430 --> 00:23:09.420
project isn't going to support
out of the box.

00:23:09.420 --> 00:23:10.810
PETER LUBBERS: Great, great.

00:23:10.810 --> 00:23:12.040
Fantastic.

00:23:12.040 --> 00:23:15.570
So should we take a look at a
couple of the questions from

00:23:15.570 --> 00:23:16.050
the moderator?

00:23:16.050 --> 00:23:16.390
ADDY OSMANI: Absolutely.

00:23:16.390 --> 00:23:17.310
PETER LUBBERS: OK, great.

00:23:17.310 --> 00:23:20.870
Well one of the questions and
some of them you've obviously

00:23:20.870 --> 00:23:22.240
answered, but we'll
step through them.

00:23:22.240 --> 00:23:27.070
So the question is, when
will Yeoman be

00:23:27.070 --> 00:23:28.190
available for testing?

00:23:28.190 --> 00:23:30.250
You touched on this a little
bit already but

00:23:30.250 --> 00:23:31.770
maybe just to reiterate.

00:23:31.770 --> 00:23:33.710
This is from Mike from Denver.

00:23:33.710 --> 00:23:36.930
ADDY OSMANI: We currently
have a private

00:23:36.930 --> 00:23:38.360
beta open at the moment.

00:23:38.360 --> 00:23:41.060
Yeoman's been getting, quite

00:23:41.060 --> 00:23:43.020
thankfully, a lot of attention.

00:23:43.020 --> 00:23:46.785
We had 6,000 or 7,000 people
sign up for the beta in the

00:23:46.785 --> 00:23:48.950
first few days that
it was announced.

00:23:48.950 --> 00:23:51.425
And so we, of course, haven't
been able to let everybody in

00:23:51.425 --> 00:23:55.000
just yet, but we're slowly
including more and more people

00:23:55.000 --> 00:23:58.050
as we get closer to
an actual release.

00:23:58.050 --> 00:24:01.220
And we're hopeful that we'll be
able to get a release out

00:24:01.220 --> 00:24:04.725
for everybody to try out in
I think maybe, two weeks.

00:24:04.725 --> 00:24:07.130
So at the end of the
month, hopefully.

00:24:07.130 --> 00:24:07.690
PETER LUBBERS: OK, excellent.

00:24:07.690 --> 00:24:10.340
ADDY OSMANI: End of the month,
start of next month.

00:24:10.340 --> 00:24:12.650
But yeah, it should be soon.

00:24:12.650 --> 00:24:17.580
PETER LUBBERS: And they can
follow @Yeoman on Twitter?

00:24:17.580 --> 00:24:18.070
ADDY OSMANI: Yes.

00:24:18.070 --> 00:24:19.660
PETER LUBBERS: You have a
Google+ page as well?

00:24:19.660 --> 00:24:19.980
ADDY OSMANI: Yeah.

00:24:19.980 --> 00:24:24.260
All the links to our pages are
on Yeoman.I/O, and any

00:24:24.260 --> 00:24:26.710
information about the project
that we'll be posting whether

00:24:26.710 --> 00:24:29.990
it's previews of ideas that
we're trying out, or things

00:24:29.990 --> 00:24:33.600
that are definitely going to
be in a project that we've

00:24:33.600 --> 00:24:36.590
implemented and are going to be
coming close to a release

00:24:36.590 --> 00:24:40.360
date, those will all be on
Twitter or Google+ page and we

00:24:40.360 --> 00:24:42.950
encourage people to
check those out.

00:24:42.950 --> 00:24:42.980
PETER LUBBERS: Excellent.

00:24:42.980 --> 00:24:45.755
So another question from
Mooseman on the internet.

00:24:45.755 --> 00:24:47.720
[LAUGHTER]

00:24:47.720 --> 00:24:51.170
PETER LUBBERS: Can I use Yeoman
for minification,

00:24:51.170 --> 00:24:54.550
optimization of existing or
my already built project?

00:24:54.550 --> 00:24:57.960
That's actually interesting,
right, because you might--

00:24:57.960 --> 00:25:00.130
I was thinking about the same
thing, oh, I'd like to get

00:25:00.130 --> 00:25:02.165
that on an existing project.

00:25:02.165 --> 00:25:04.470
Is that possible?

00:25:04.470 --> 00:25:07.550
ADDY OSMANI: So as of today,
it isn't just yet.

00:25:07.550 --> 00:25:10.210
But we are working this
week on ways that we

00:25:10.210 --> 00:25:11.950
can make that happen.

00:25:11.950 --> 00:25:15.080
It's really a case of just
making sure that a few

00:25:15.080 --> 00:25:18.120
specific configuration files
get written into your

00:25:18.120 --> 00:25:20.830
directory without overriding
anything else going on in your

00:25:20.830 --> 00:25:21.730
application.

00:25:21.730 --> 00:25:22.430
But it should be--

00:25:22.430 --> 00:25:25.030
I think it's something we're
going to aim to get in place

00:25:25.030 --> 00:25:26.240
before our launch.

00:25:26.240 --> 00:25:27.680
PETER LUBBERS: OK, great.

00:25:27.680 --> 00:25:30.060
Yeah, there was another question
like it so-- that's

00:25:30.060 --> 00:25:32.150
from Dylan Green, so that's
the same answer.

00:25:32.150 --> 00:25:35.730
What about plans for
documentation generation like,

00:25:35.730 --> 00:25:36.850
for example, Doco.

00:25:36.850 --> 00:25:39.870
It's a question from
Millie Yell.

00:25:39.870 --> 00:25:43.410
ADDY OSMANI: So we don't
currently have an automatic

00:25:43.410 --> 00:25:48.120
documentation generation
task in place just yet.

00:25:48.120 --> 00:25:51.105
But I did read that question the
other day and I thought,

00:25:51.105 --> 00:25:53.130
that's a really cool idea.

00:25:53.130 --> 00:25:53.550
PETER LUBBERS: Yeah.

00:25:53.550 --> 00:25:56.165
ADDY OSMANI: And so we've
started discussions on maybe

00:25:56.165 --> 00:25:58.680
using Doco or another
solution.

00:25:58.680 --> 00:26:00.330
Whether that's something that
makes it into the first

00:26:00.330 --> 00:26:03.930
version of the project I'm not
sure, but it's definitely

00:26:03.930 --> 00:26:06.320
something that we're looking
at the moment and it might

00:26:06.320 --> 00:26:08.160
make its way into Yeoman
in the future.

00:26:08.160 --> 00:26:09.530
PETER LUBBERS: Perfect,
perfect.

00:26:09.530 --> 00:26:12.660
So then a question
from Guario.

00:26:12.660 --> 00:26:15.150
What kind of NVC generators
will you

00:26:15.150 --> 00:26:16.570
include at the launch?

00:26:16.570 --> 00:26:19.670
So you mentioned already, you
mentioned the architecture,

00:26:19.670 --> 00:26:25.720
but to check on that again, so
what does the current plan as

00:26:25.720 --> 00:26:29.430
mentioned, Backbone,
Ember, Knockout?

00:26:29.430 --> 00:26:34.130
ADDY OSMANI: So I think what
we'll probably do there, and

00:26:34.130 --> 00:26:36.680
we haven't got a firm plan for
this just yet, but we'll

00:26:36.680 --> 00:26:41.310
probably do is have community
maintained Yeoman generators

00:26:41.310 --> 00:26:42.535
for things like Backbone
and Ember.

00:26:42.535 --> 00:26:43.200
PETER LUBBERS: Right.

00:26:43.200 --> 00:26:45.450
ADDY OSMANI: We do have
proof of concepts in

00:26:45.450 --> 00:26:46.320
place at the moment.

00:26:46.320 --> 00:26:47.370
I was showing you the
Backbone one.

00:26:47.370 --> 00:26:47.660
PETER LUBBERS: Right.

00:26:47.660 --> 00:26:49.930
ADDY OSMANI: We've also got a
proof of concept of the Ember

00:26:49.930 --> 00:26:52.180
one and an AngularJS one.

00:26:52.180 --> 00:26:54.660
And a few for other
frameworks.

00:26:54.660 --> 00:26:59.830
And what we want to make sure
of is that obviously, we do

00:26:59.830 --> 00:27:02.100
have some experience with these
other frameworks, but

00:27:02.100 --> 00:27:04.820
the people using them, the
framework authors are going to

00:27:04.820 --> 00:27:07.050
be the ones that know exactly
what should be going into a

00:27:07.050 --> 00:27:09.390
proper Boilerplate scaffold.

00:27:09.390 --> 00:27:12.410
And we'd like to work with those
people perhaps to get

00:27:12.410 --> 00:27:13.880
the best set of generators
done.

00:27:13.880 --> 00:27:16.946
And maybe they'll be better
people to maintain them.

00:27:16.946 --> 00:27:18.740
PETER LUBBERS: Yeah,
exactly, exactly.

00:27:18.740 --> 00:27:22.910
ADDY OSMANI: Yeoman out of the
box, I think we'll try to get,

00:27:22.910 --> 00:27:26.910
we might try to get an AngularJS
one done included in

00:27:26.910 --> 00:27:28.110
the release.

00:27:28.110 --> 00:27:29.600
But other than that,
it's going to be

00:27:29.600 --> 00:27:32.700
community-maintained generators

00:27:32.700 --> 00:27:33.810
for everything else.

00:27:33.810 --> 00:27:35.330
PETER LUBBERS: OK, excellent,
excellent.

00:27:35.330 --> 00:27:38.490
Now there's a question from
Current in Vancouver.

00:27:38.490 --> 00:27:42.260
Any plans for a native live
reload functionality that

00:27:42.260 --> 00:27:45.000
isn't dependent on live
reload itself?

00:27:45.000 --> 00:27:47.410
What do you have for
live reloading?

00:27:47.410 --> 00:27:53.360
ADDY OSMANI: So you can use
live reload if you have it

00:27:53.360 --> 00:27:55.350
installed and you prefer
to use that system.

00:27:55.350 --> 00:27:57.930
We do recommend people
try that.

00:27:57.930 --> 00:28:01.130
But we've got a fallback that
will work pretty much in any

00:28:01.130 --> 00:28:04.040
browser that will automatically
refresh your

00:28:04.040 --> 00:28:06.020
page if you make
changes to it.

00:28:06.020 --> 00:28:08.920
It's not as good as the live
reload one, which is why we

00:28:08.920 --> 00:28:09.610
recommend using that.

00:28:09.610 --> 00:28:12.540
But we do have a cross-browser
solution in place.

00:28:12.540 --> 00:28:14.640
So yes, I guess is the answer.

00:28:14.640 --> 00:28:16.500
PETER LUBBERS: Great, great.

00:28:16.500 --> 00:28:20.690
Another question from K Lenny.

00:28:20.690 --> 00:28:23.050
Would it be possible to use
Yeoman with something like

00:28:23.050 --> 00:28:24.500
EmberJS or Meteor?

00:28:24.500 --> 00:28:27.770
Now you mentioned Ember already,
but any Meteor

00:28:27.770 --> 00:28:29.190
integration?

00:28:29.190 --> 00:28:32.080
ADDY OSMANI: I guess it is the
same thing that I would say

00:28:32.080 --> 00:28:33.840
about any other framework.

00:28:33.840 --> 00:28:36.970
We're going to provide
developers with all of the

00:28:36.970 --> 00:28:39.810
APIs that they need to write
generators to work with any

00:28:39.810 --> 00:28:41.240
frameworks.

00:28:41.240 --> 00:28:44.630
Whether it's Ember, or Meteor,
or something else, it should

00:28:44.630 --> 00:28:46.050
be possible to write
a scaffold that

00:28:46.050 --> 00:28:47.989
will work with it.

00:28:47.989 --> 00:28:49.260
PETER LUBBERS: Yeah,
yeah, yeah.

00:28:49.260 --> 00:28:50.800
Perfect.

00:28:50.800 --> 00:28:54.630
I think a couple
more questions.

00:28:54.630 --> 00:28:57.600
Is Yeoman using NPM for
package management?

00:28:57.600 --> 00:28:59.640
Or what is it using
on their covers?

00:28:59.640 --> 00:29:03.050
Levvy Dehon was asking that.

00:29:03.050 --> 00:29:05.865
ADDY OSMANI: So for our
own [INAUDIBLE]

00:29:05.865 --> 00:29:08.880
of some known dependencies, we
are using NPM for that, but

00:29:08.880 --> 00:29:12.760
what we have for everything
else, what you saw me doing

00:29:12.760 --> 00:29:16.720
when I was coding in jQuery and
Backbone, I was using a

00:29:16.720 --> 00:29:19.150
project by Twitter which hasn't
been released yet

00:29:19.150 --> 00:29:20.360
called Bower.

00:29:20.360 --> 00:29:23.440
And Bower is another package
management solution.

00:29:23.440 --> 00:29:24.950
PETER LUBBERS: How do
you spell that?

00:29:24.950 --> 00:29:26.635
ADDY OSMANI: So it's
B-O-W-E-R.

00:29:26.635 --> 00:29:29.520
PETER LUBBERS: OK, OK.

00:29:29.520 --> 00:29:33.680
ADDY OSMANI: The idea there is,
it's going to be another

00:29:33.680 --> 00:29:37.670
registry, but one which
framework authors and library

00:29:37.670 --> 00:29:40.340
authors and people that do
create different scripts to be

00:29:40.340 --> 00:29:42.760
used by other people can
easily push too.

00:29:42.760 --> 00:29:47.110
It's easy to use and as you saw
with Yeoman, it's fairly

00:29:47.110 --> 00:29:50.250
easy to replicate some of
the stuff that NPM does.

00:29:50.250 --> 00:29:52.860
Easily installing a dependency,
searching for it

00:29:52.860 --> 00:29:55.840
or resolving the other bits and
pieces that it might need.

00:29:55.840 --> 00:29:57.010
PETER LUBBERS: Perfect,
perfect.

00:29:57.010 --> 00:30:00.870
So one of the questions you
already answered in your

00:30:00.870 --> 00:30:04.170
earlier demo was the automated
final versioning.

00:30:04.170 --> 00:30:05.860
And this was from Mike
in New York.

00:30:05.860 --> 00:30:07.730
Any plans to add automated
file versioning?

00:30:07.730 --> 00:30:09.970
CheckSum added it as
a query parameter.

00:30:09.970 --> 00:30:14.090
But you mentioned that you were
thinking about that or

00:30:14.090 --> 00:30:16.220
will that also make it into--

00:30:16.220 --> 00:30:17.660
ADDY OSMANI: That's
already in place.

00:30:17.660 --> 00:30:18.044
PETER LUBBERS: OK, OK.

00:30:18.044 --> 00:30:18.740
Fantastic, fantastic.

00:30:18.740 --> 00:30:22.470
Well, let's see.

00:30:22.470 --> 00:30:25.190
In the event of Yeoman's success
and popularity, how

00:30:25.190 --> 00:30:26.480
soon can we expect Yeoman swag?

00:30:26.480 --> 00:30:30.330
[LAUGHTER]

00:30:30.330 --> 00:30:31.820
ADDY OSMANI: That's
a good question.

00:30:31.820 --> 00:30:36.600
We're currently working on
swag and you can probably

00:30:36.600 --> 00:30:38.790
expect to see some in the
very near future.

00:30:38.790 --> 00:30:40.180
PETER LUBBERS: All right.

00:30:40.180 --> 00:30:42.280
Well that's about a serious
as the other question from

00:30:42.280 --> 00:30:44.080
Charles of when can I get paid?

00:30:44.080 --> 00:30:46.840
[LAUGHTER]

00:30:46.840 --> 00:30:47.530
PETER LUBBERS: So in all

00:30:47.530 --> 00:30:50.430
seriousness, where can people--

00:30:50.430 --> 00:30:55.390
you mentioned that Yeomon.I/O
is the main site.

00:30:55.390 --> 00:30:57.670
From there, they can
follow you along.

00:31:01.340 --> 00:31:04.450
If you wanted to add your name
to the list of the private

00:31:04.450 --> 00:31:07.890
beta, is that still possible?

00:31:07.890 --> 00:31:11.490
ADDY OSMANI: You can currently
do that through Yeoman.I/O. As

00:31:11.490 --> 00:31:15.390
I mentioned, for people that
are interested in either

00:31:15.390 --> 00:31:19.620
helping out with the product
or really testing it out to

00:31:19.620 --> 00:31:23.280
it's limits, we are letting a
few people in right now as

00:31:23.280 --> 00:31:24.810
part of the private beta.

00:31:24.810 --> 00:31:28.630
We will be opening Yeoman out
to the public in the next

00:31:28.630 --> 00:31:31.360
couple of weeks hopefully.

00:31:31.360 --> 00:31:34.960
And yeah, Yeoman.I/O is going
to be the place to be.

00:31:34.960 --> 00:31:37.405
That's where we're going to
launch the whole new website,

00:31:37.405 --> 00:31:40.070
the holding page is going to go
and everything is going to

00:31:40.070 --> 00:31:42.420
be up there, from the
documentation to

00:31:42.420 --> 00:31:43.660
where you can get it.

00:31:43.660 --> 00:31:44.920
PETER LUBBERS: Fantastic.

00:31:44.920 --> 00:31:51.210
Great, so well I think, did you
have any other facts or

00:31:51.210 --> 00:31:52.930
tips and tricks to
share with us?

00:31:52.930 --> 00:31:56.100
Or I think that's pretty
much it, right?

00:31:56.100 --> 00:31:58.090
ADDY OSMANI: I think that's
pretty much it.

00:31:58.090 --> 00:32:01.680
Please be sure to follow us on
Twitter or Google+ and yeah,

00:32:01.680 --> 00:32:03.190
Yeoman should be out soon.

00:32:03.190 --> 00:32:04.070
PETER LUBBERS: Fantastic,
fantastic.

00:32:04.070 --> 00:32:07.750
Well thank you so much
for the great demo.

00:32:07.750 --> 00:32:10.070
We'll take care of the--

00:32:10.070 --> 00:32:11.590
I think we took care of
all the questions.

00:32:11.590 --> 00:32:14.460
If we didn't, then my apologies
and we'll answer

00:32:14.460 --> 00:32:19.650
them offline, And check out
Yeoman.I/O for all of the

00:32:19.650 --> 00:32:20.470
information.

00:32:20.470 --> 00:32:23.910
Sign up there for the private
beta and that's it.

00:32:23.910 --> 00:32:28.170
Thank you for joining and
until next time, thanks.

00:32:28.170 --> 00:32:29.310
Thanks, Addy.

00:32:29.310 --> 00:32:30.560
ADDY OSMANI: Thanks.

