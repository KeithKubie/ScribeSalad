WEBVTT
Kind: captions
Language: en

00:00:08.670 --> 00:00:12.900
Hello and welcome to another
episode of GDL IL Google

00:00:12.900 --> 00:00:14.660
Developer Live Israel.

00:00:14.660 --> 00:00:18.600
This episode we are going just
to elaborate a bit on the

00:00:18.600 --> 00:00:22.860
service site that we showed in
the last episode of the mobile

00:00:22.860 --> 00:00:24.980
web app with AppScript.

00:00:24.980 --> 00:00:27.580
And basically, what I would like
to do is to show you the

00:00:27.580 --> 00:00:31.420
code that we are leveraging in
AppScript inside our Google

00:00:31.420 --> 00:00:35.750
Sheet when we are coming to
build a service site that

00:00:35.750 --> 00:00:41.000
would enable us to manage our
content that later on we'll

00:00:41.000 --> 00:00:44.790
work with and show inside
the mobile web app.

00:00:44.790 --> 00:00:47.520
So let me share my screen.

00:00:47.520 --> 00:00:50.560
And as you could see
here, this is how

00:00:50.560 --> 00:00:52.880
a doc is look like.

00:00:52.880 --> 00:00:57.930
And you could see here that I'm
having few fields that I

00:00:57.930 --> 00:01:01.500
will ask my editor
to fill for me.

00:01:01.500 --> 00:01:05.160
And in a minute, we'll see how
easy it is to work and get an

00:01:05.160 --> 00:01:08.300
address and basically calculate
automatically from

00:01:08.300 --> 00:01:11.760
it the [INAUDIBLE] longitude
and latitude.

00:01:11.760 --> 00:01:14.740
Here, for instance,
as you could see--

00:01:14.740 --> 00:01:15.960
let me make it bigger.

00:01:15.960 --> 00:01:19.120
I'm just concatenating
using this function.

00:01:19.120 --> 00:01:23.190
So the value of column D will
basically be derived from

00:01:23.190 --> 00:01:26.320
column B and C, in this case.

00:01:26.320 --> 00:01:30.310
And here I'll just go and fill
the addresses I would like.

00:01:30.310 --> 00:01:32.900
In this example, it's in Hebrew,
but of course, you can

00:01:32.900 --> 00:01:35.820
imagine that it will be in
English or any other language.

00:01:35.820 --> 00:01:42.820
The other thing about it will be
that basically you'll to be

00:01:42.820 --> 00:01:47.440
able to work with this.

00:01:47.440 --> 00:01:51.990
And Google Geocoder will work
with any language that you

00:01:51.990 --> 00:01:54.370
will be able to be input here.

00:01:54.370 --> 00:01:56.340
And we'll see it in a second.

00:01:56.340 --> 00:02:01.400
So those are the input points
that the editor

00:02:01.400 --> 00:02:03.330
will fill for us.

00:02:03.330 --> 00:02:06.690
And then, what we'll need to
do is go here to File and

00:02:06.690 --> 00:02:09.160
basically publish
it to the web.

00:02:09.160 --> 00:02:11.660
And the nice thing here is that
we could choose several

00:02:11.660 --> 00:02:13.280
things when we want to do it.

00:02:13.280 --> 00:02:16.650
So once I'm clicking here on
Start Publishing, you could

00:02:16.650 --> 00:02:19.210
see that I have here the
timestamp of when

00:02:19.210 --> 00:02:20.930
it was first published.

00:02:20.930 --> 00:02:25.180
And from this minute any changes
that will be made will

00:02:25.180 --> 00:02:28.880
be automatically because I
clicked this check box.

00:02:28.880 --> 00:02:32.450
And here I could basically check
and see if I want it as

00:02:32.450 --> 00:02:36.580
a web page or maybe as
a Atom feed, RSS

00:02:36.580 --> 00:02:38.690
feed, and other things.

00:02:38.690 --> 00:02:44.870
If I'm doing things like
exporting it as RSS feed, here

00:02:44.870 --> 00:02:47.710
at the end if I'll change
it from RSS to JSON,

00:02:47.710 --> 00:02:48.670
it will also work.

00:02:48.670 --> 00:02:53.160
So for us, in the front end
development world, to work

00:02:53.160 --> 00:02:55.460
with JSON object will be
much easier and nicer.

00:02:55.460 --> 00:02:57.560
And we don't need any library
to parse Atom

00:02:57.560 --> 00:03:00.160
feeds or RSS feeds.

00:03:00.160 --> 00:03:03.160
Once I'm doing that, I'll
go here to Tools.

00:03:03.160 --> 00:03:06.510
And I'll basically click
on the Script Editor.

00:03:06.510 --> 00:03:09.430
And as you can see here, I'm
jumping to a new tab that's

00:03:09.430 --> 00:03:11.430
letting me work with
AppScript.

00:03:11.430 --> 00:03:14.760
Now here I'll make this code
just a bit larger and we'll go

00:03:14.760 --> 00:03:17.610
over quite quickly because
it's a very simple,

00:03:17.610 --> 00:03:19.720
self-explanatory code.

00:03:19.720 --> 00:03:23.600
What we're doing here is
basically on open I want to

00:03:23.600 --> 00:03:25.600
add a new menu item.

00:03:25.600 --> 00:03:28.200
And let me go back here
and show you.

00:03:28.200 --> 00:03:31.490
Here I have a new menu item
that I created for my app.

00:03:31.490 --> 00:03:35.650
So my editor, after he or she
are filling the details here,

00:03:35.650 --> 00:03:38.140
it's good to be able to
show them on a map.

00:03:38.140 --> 00:03:40.360
So when they are clicking, the
script is running in the

00:03:40.360 --> 00:03:42.630
background creating a map.

00:03:42.630 --> 00:03:44.952
And as you can see, I have
markers on the map that are

00:03:44.952 --> 00:03:47.830
just showing visually that what
we did is the correct.

00:03:47.830 --> 00:03:50.550
And of course, at the bottom we
have a widget containing a

00:03:50.550 --> 00:03:52.880
table with all the details.

00:03:52.880 --> 00:03:57.640
Now, in the script itself, this
four or five lines of

00:03:57.640 --> 00:04:00.980
code basically just adding this
menu to the spreadsheet

00:04:00.980 --> 00:04:06.460
and allowing me to execute the
station location map function.

00:04:06.460 --> 00:04:08.860
Actually, I need to put
a better name there.

00:04:08.860 --> 00:04:10.630
But it's OK.

00:04:10.630 --> 00:04:13.810
In the function itself, what
I'm getting is basically

00:04:13.810 --> 00:04:17.500
getting a handler on the current
sheet that I'm going

00:04:17.500 --> 00:04:18.320
to work with.

00:04:18.320 --> 00:04:20.760
And in our case, it's
the geo one.

00:04:20.760 --> 00:04:23.340
You can think about a scenario
when you want to keep revision

00:04:23.340 --> 00:04:24.330
of the history.

00:04:24.330 --> 00:04:28.640
That time then maybe you will
add more and more sheets to

00:04:28.640 --> 00:04:31.940
this main doc.

00:04:31.940 --> 00:04:37.110
After that I'm going and I'm
using Get Range function.

00:04:37.110 --> 00:04:40.600
And basically, I'm just focusing
on a portion of this

00:04:40.600 --> 00:04:44.270
spreadsheet just so I'll be
able to get the station

00:04:44.270 --> 00:04:45.090
information.

00:04:45.090 --> 00:04:49.760
In my case, I want to get the
address and then the city name

00:04:49.760 --> 00:04:55.130
because from the combination of
those two I'll be able to

00:04:55.130 --> 00:04:57.270
compose the address.

00:04:57.270 --> 00:05:01.770
Later on, I'm just calling a
static map object and of

00:05:01.770 --> 00:05:03.492
course, creating my UI.

00:05:03.492 --> 00:05:08.150
The UI is the dialog that you
saw that we presented the user

00:05:08.150 --> 00:05:10.340
after we gathered all
the information.

00:05:10.340 --> 00:05:13.510
And then I'm creating another
grid object that's letting me

00:05:13.510 --> 00:05:16.540
up the raw text information
below the map so it will be

00:05:16.540 --> 00:05:20.440
very clear which marker is
belonging to which station.

00:05:20.440 --> 00:05:24.670
And then, there's the simple
loop that's just going over

00:05:24.670 --> 00:05:29.280
those lines with addresses,
adding them to the map, as you

00:05:29.280 --> 00:05:32.290
could see here, with
the marker info.

00:05:32.290 --> 00:05:40.260
In our case, that row and
column, so the cell itself,

00:05:40.260 --> 00:05:41.960
will contain the geo location.

00:05:41.960 --> 00:05:46.170
And it's very easy to use that
marker with a geo point just

00:05:46.170 --> 00:05:49.490
to put it in a certain
place on the map.

00:05:49.490 --> 00:05:51.830
And for the grid widget, of
course, we'll want the full

00:05:51.830 --> 00:05:54.840
address and the name and
all the other things.

00:05:54.840 --> 00:05:56.540
Here there's an interesting
thing that I would

00:05:56.540 --> 00:05:57.260
love to show you.

00:05:57.260 --> 00:05:58.350
And I'll put a break point.

00:05:58.350 --> 00:06:00.240
And we'll go into
it in a second.

00:06:00.240 --> 00:06:05.430
And that's the newGeocoder
object that will basically

00:06:05.430 --> 00:06:09.453
allow us to get the address and
to extract and gain from

00:06:09.453 --> 00:06:11.200
it the longitude and latitude.

00:06:11.200 --> 00:06:14.810
You could get actually more geo
information out of this,

00:06:14.810 --> 00:06:17.520
but in this example, we'll
just focus on these two

00:06:17.520 --> 00:06:21.380
because that's what we need
to create our basic app.

00:06:21.380 --> 00:06:24.540
Let me try and run it in the
debug mode and show you how

00:06:24.540 --> 00:06:25.790
it's working.

00:06:25.790 --> 00:06:29.670
So here is a function
that I choose.

00:06:29.670 --> 00:06:31.810
And now I'll click debugging.

00:06:31.810 --> 00:06:34.210
And the first time that you run
it, you'll get a very big

00:06:34.210 --> 00:06:36.420
dialogue that just warns
you and ask your

00:06:36.420 --> 00:06:37.810
permission to do so.

00:06:37.810 --> 00:06:40.960
I did it in the final rehearsal
to this show, so it

00:06:40.960 --> 00:06:44.860
doesn't prompt it now to me.

00:06:44.860 --> 00:06:47.990
But after you acknowledge it
for the first time, it will

00:06:47.990 --> 00:06:50.281
work on each and every run.

00:06:50.281 --> 00:06:54.870
As you saw here, I just
got this break point.

00:06:54.870 --> 00:07:00.290
And if I'll, of course, go over
geoResults, you could see

00:07:00.290 --> 00:07:02.120
here that it's undefined.

00:07:02.120 --> 00:07:07.320
But if I'll just give it
permission to pass it, now you

00:07:07.320 --> 00:07:11.300
see here that in geoResults,
if I'll click on the plus

00:07:11.300 --> 00:07:13.280
sign, basically we
got two things.

00:07:13.280 --> 00:07:14.400
One is the status.

00:07:14.400 --> 00:07:16.460
And luckily for us,
everything is OK.

00:07:16.460 --> 00:07:19.580
So that's why here, on the next
line, I'll just make sure

00:07:19.580 --> 00:07:20.500
that it's OK.

00:07:20.500 --> 00:07:22.640
If it's OK, I can
parse the data.

00:07:22.640 --> 00:07:24.670
If it's not, I want to log it.

00:07:24.670 --> 00:07:25.960
And it's here.

00:07:25.960 --> 00:07:28.460
And if it's OK, like in our
case, you could see the

00:07:28.460 --> 00:07:30.890
results object that's containing
lots of different

00:07:30.890 --> 00:07:32.340
parameters.

00:07:32.340 --> 00:07:36.530
In our case, we have the
geometry that's containing

00:07:36.530 --> 00:07:39.960
bounds, viewports, location
data, and

00:07:39.960 --> 00:07:41.500
lots of other things.

00:07:41.500 --> 00:07:45.800
And in our case, as you could
see, I'm taking the longitude

00:07:45.800 --> 00:07:50.000
and the latitude, just the
opposite what I said, and once

00:07:50.000 --> 00:07:54.720
I got those two, I can release
it and just keep running and

00:07:54.720 --> 00:07:57.400
getting a new point each time.

00:07:57.400 --> 00:08:00.600
We could click on the view and
then basically see the logs.

00:08:00.600 --> 00:08:03.670
And as you could see while I'm
using the logger object, as

00:08:03.670 --> 00:08:06.820
you could see, I got the
new geo point from

00:08:06.820 --> 00:08:08.340
the specific address.

00:08:08.340 --> 00:08:12.760
I can now just turn off the
break point and resume the run

00:08:12.760 --> 00:08:14.670
of this script.

00:08:14.670 --> 00:08:18.800
And after it's done, you see
that everything is off from

00:08:18.800 --> 00:08:20.000
the debug mode.

00:08:20.000 --> 00:08:22.330
I can again to the logs and see
that for the three points

00:08:22.330 --> 00:08:26.200
that I have in the spreadsheet
I now have three geo points

00:08:26.200 --> 00:08:28.100
that I could use.

00:08:28.100 --> 00:08:32.179
One last nice little trick
that we have here is that

00:08:32.179 --> 00:08:34.840
we're using Waze web API.

00:08:34.840 --> 00:08:38.850
And if you are basically, in
your mobile web app, putting

00:08:38.850 --> 00:08:42.770
this link and the user will open
your mobile web app from

00:08:42.770 --> 00:08:47.010
any mobile devices out there,
and they already have Waze

00:08:47.010 --> 00:08:51.110
installed, this link will
basically inform the device

00:08:51.110 --> 00:08:54.610
itself to open the Waze
application with these

00:08:54.610 --> 00:08:55.410
specific points.

00:08:55.410 --> 00:08:59.750
So they could navigate to
this point immediately.

00:08:59.750 --> 00:09:01.150
The app itself--

00:09:01.150 --> 00:09:03.180
just to show you how
does it look like--

00:09:03.180 --> 00:09:05.750
is live and it's here.

00:09:05.750 --> 00:09:07.515
And we have two versions
of the app.

00:09:07.515 --> 00:09:09.280
One looks like that.

00:09:09.280 --> 00:09:11.870
And that's basically
a version that is

00:09:11.870 --> 00:09:13.200
based on Twitter Bootstrap.

00:09:13.200 --> 00:09:17.170
So it will work on all the major
browsers out there, i.e.

00:09:17.170 --> 00:09:19.520
Firefox, Safari, and
of course, Chrome.

00:09:19.520 --> 00:09:26.610
And another version of it is
[INAUDIBLE], but just add

00:09:26.610 --> 00:09:28.510
jQuery [INAUDIBLE]

00:09:28.510 --> 00:09:30.635
to the picture.

00:09:30.635 --> 00:09:31.920
And it will be here.

00:09:34.610 --> 00:09:39.590
And as you could see, it's more
themed as a mobile web

00:09:39.590 --> 00:09:43.870
app with some nice features,
like an about page that is

00:09:43.870 --> 00:09:47.820
flipping and other things that
you could do, like the buttons

00:09:47.820 --> 00:09:50.710
that will navigate and
other cool things.

00:09:50.710 --> 00:09:53.090
Of course, the map here
is fully functional.

00:09:53.090 --> 00:09:58.420
And the user can dive into it
and get direction on points

00:09:58.420 --> 00:10:00.490
and lots of other things.

00:10:00.490 --> 00:10:03.690
So that's basically the
major three components

00:10:03.690 --> 00:10:06.390
that I wanted to cover.

00:10:06.390 --> 00:10:08.070
If you have any questions
now it's an

00:10:08.070 --> 00:10:09.690
excellent time to do so.

00:10:09.690 --> 00:10:11.680
And if not, just feel
free to reach out to

00:10:11.680 --> 00:10:13.880
me on G+, on Twitter.

00:10:13.880 --> 00:10:16.400
On both of them, it's greenido
as one word.

00:10:16.400 --> 00:10:19.100
Let's see if we have on the
Hangout chat some question

00:10:19.100 --> 00:10:20.520
that people entered.

00:10:25.540 --> 00:10:30.380
I don't see any, so until next
week be strong and bye-bye.

