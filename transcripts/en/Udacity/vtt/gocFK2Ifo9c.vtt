WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:04.710
So as we just saw, plain, old
variables in Swift do not allow nils.

00:00:04.710 --> 00:00:08.070
But in some situations,
we want to allow for nil values.

00:00:08.070 --> 00:00:11.300
For situations like these,
Swift has a special data type.

00:00:11.300 --> 00:00:13.400
It's called the optional type.

00:00:13.400 --> 00:00:15.520
What is this optional data type?

00:00:15.520 --> 00:00:18.530
An optional is like a wrapped
box that might be empty.

00:00:18.530 --> 00:00:19.705
That's the option.

00:00:19.705 --> 00:00:21.695
It might have a value or
it might be nll.

00:00:23.140 --> 00:00:25.450
Whenever you specify
the optional data type,

00:00:25.450 --> 00:00:28.300
you also give the type of
the value that might be inside.

00:00:28.300 --> 00:00:30.630
So we make a distinction
between Int optionals, and

00:00:30.630 --> 00:00:35.360
String optionals, UIButton optionals,
and AnyObject optionals.

00:00:35.360 --> 00:00:39.220
But it's really only one generic
data type, the optional.

00:00:39.220 --> 00:00:41.660
We can't use optionals
without unwrapping them.

00:00:41.660 --> 00:00:45.420
In this equation,
the box represents an int optional.

00:00:45.420 --> 00:00:47.670
It might have a value or it might not.

00:00:47.670 --> 00:00:49.030
We can't tell until it's unwrapped.

00:00:50.590 --> 00:00:53.650
So now we come to the real
challenge with optionals.

00:00:53.650 --> 00:00:56.987
How do we use question marks and
exclamation points to declare and

00:00:56.987 --> 00:00:58.086
process optionals?

00:00:58.086 --> 00:00:59.126
[SOUND]

