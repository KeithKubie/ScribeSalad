WEBVTT
Kind: captions
Language: en

00:00:00.330 --> 00:00:03.280
So how would you use formal logic to
develop an agent that can solve Raven's

00:00:03.280 --> 00:00:04.820
progressive matrices?

00:00:04.820 --> 00:00:08.189
As with production systems, we can kind
of face this at two different levels.

00:00:08.189 --> 00:00:11.060
One, you could use formal logic to
represent the overall algorithm

00:00:11.060 --> 00:00:13.710
the agent uses to solve any new problem.

00:00:13.710 --> 00:00:17.510
Or secondly, the agent could use formal
logic to develop its understanding of

00:00:17.510 --> 00:00:19.500
a new problem that just came in.

00:00:19.500 --> 00:00:22.640
It could then use those formal rules to
develop the transformations that occur

00:00:22.640 --> 00:00:26.890
within the problem and transfer those
transformations into the new answer.

00:00:26.890 --> 00:00:30.340
Alternatively, you could also use formal
logic to allow your agent to prove why

00:00:30.340 --> 00:00:32.479
it's answer to a particular
problem is correct.

00:00:32.479 --> 00:00:34.440
Then if the answer is
actually incorrect,

00:00:34.440 --> 00:00:36.690
the agent may have the information
necessary to go back and

00:00:36.690 --> 00:00:38.740
repair it's reasoning and
do better next time.

