WEBVTT
Kind: captions
Language: en

00:00:03.770 --> 00:00:06.280
GUS CLASS: Hello, and welcome
to the Google+ developer

00:00:06.280 --> 00:00:07.630
office hours.

00:00:07.630 --> 00:00:10.270
I'm Gus Class, a developer
advocate for the Google+

00:00:10.270 --> 00:00:15.290
platform and I specialize in the
publisher features, such

00:00:15.290 --> 00:00:19.690
as the +1 button, Share, and
now the history API.

00:00:19.690 --> 00:00:22.280
Joining me is Jonathan.

00:00:22.280 --> 00:00:24.690
He's on my team and is also
a developer advocate.

00:00:24.690 --> 00:00:26.900
Jonathan, want to give
a little intro?

00:00:26.900 --> 00:00:28.860
JONATHAN BEYER: Hey everybody,
Jonathan Beyer here.

00:00:28.860 --> 00:00:32.170
I'm the Google+ developer
advocate for Hangouts.

00:00:35.110 --> 00:00:35.470
GUS CLASS: Awesome.

00:00:35.470 --> 00:00:40.340
So today, Jonathan will be
talking a little bit about the

00:00:40.340 --> 00:00:41.760
Google+ Hangout apps.

00:00:41.760 --> 00:00:46.240
And specifically, he'll be
talking about using the Google

00:00:46.240 --> 00:00:49.790
Wallet API for payments
within Hangouts apps.

00:00:49.790 --> 00:00:52.400
This is real exciting, because
it introduces a lot of new

00:00:52.400 --> 00:00:55.460
scenarios for people who are
interested in accepting

00:00:55.460 --> 00:00:57.630
payments from Hangouts.

00:00:57.630 --> 00:01:00.280
So Jonathan, want to
get going with it?

00:01:00.280 --> 00:01:01.120
JONATHAN BEYER: Yeah, sure.

00:01:01.120 --> 00:01:04.015
So for those who don't know
about the Google commerce APIs

00:01:04.015 --> 00:01:07.680
and specifically payments,
Google provides a really easy

00:01:07.680 --> 00:01:11.950
to use e-commerce API to allow
you to accept payments inside

00:01:11.950 --> 00:01:12.830
your web apps.

00:01:12.830 --> 00:01:15.830
And it's competitively
priced [INAUDIBLE]

00:01:15.830 --> 00:01:17.030
industry.

00:01:17.030 --> 00:01:20.870
But the key thing about it is
it's really easy to use.

00:01:20.870 --> 00:01:24.090
And by really easy to use, I
mean I had no idea how to use

00:01:24.090 --> 00:01:27.920
it, and I got it working
within an afternoon.

00:01:27.920 --> 00:01:30.690
I actually just used the public
documentation, and I

00:01:30.690 --> 00:01:34.080
was able to accept payments
within my Hangout app, which

00:01:34.080 --> 00:01:35.690
is really awesome.

00:01:35.690 --> 00:01:37.920
So I'm going to start with
screen shares to walk you

00:01:37.920 --> 00:01:39.820
through a few things.

00:01:39.820 --> 00:01:41.070
Switch over.

00:01:44.880 --> 00:01:46.480
Now, you should be
seeing my screen.

00:01:46.480 --> 00:01:46.690
Is that--

00:01:46.690 --> 00:01:48.130
Gus, can you see it?

00:01:48.130 --> 00:01:48.900
GUS CLASS: Yeah, I can see it.

00:01:48.900 --> 00:01:52.170
Also Jonathan, I want to remind
anyone who's watching

00:01:52.170 --> 00:01:55.780
to ask any questions you have
within the event, and we'll

00:01:55.780 --> 00:01:58.810
try to get to them
as we go along.

00:01:58.810 --> 00:01:59.200
JONATHAN BEYER: Great.

00:01:59.200 --> 00:02:02.070
So the homepage for the
Google Wallet is

00:02:02.070 --> 00:02:03.980
developers.google.com/commerce.

00:02:03.980 --> 00:02:06.880
And there's the Digital Goods
API which was formerly known

00:02:06.880 --> 00:02:10.440
as the In-app Payments API, and
that allows you to accept

00:02:10.440 --> 00:02:11.910
payments within your
application.

00:02:11.910 --> 00:02:15.010
Now, all it really requires you
do is to learn a little

00:02:15.010 --> 00:02:18.170
bit of technology which I'll go
over in a bit, and a simple

00:02:18.170 --> 00:02:21.150
JavaScript API.

00:02:21.150 --> 00:02:26.830
The piece that you've got to
learn is a thing called JWT.

00:02:26.830 --> 00:02:30.480
It's an acronym for JSON Web
Tokens, and it's just an

00:02:30.480 --> 00:02:34.150
encryption algorithm for
transporting secure

00:02:34.150 --> 00:02:37.810
JSON over the wire.

00:02:37.810 --> 00:02:40.270
The fortunate thing is there's
an array of libraries in

00:02:40.270 --> 00:02:42.640
pretty much every programming
language out there, so it was

00:02:42.640 --> 00:02:45.360
really easy for me to
get up and running.

00:02:45.360 --> 00:02:48.980
And using a sample application
that came with the developer

00:02:48.980 --> 00:02:54.010
site that's hosted there, I
was able to integrate that

00:02:54.010 --> 00:02:55.670
pretty quickly.

00:02:55.670 --> 00:03:00.630
So let me talk a short, brief
minute about what JSON Web

00:03:00.630 --> 00:03:02.910
Tokens are by going through
the documentation.

00:03:05.860 --> 00:03:07.930
And as it loads--

00:03:07.930 --> 00:03:13.210
so a JSON Web Token is really
an encrypted JSON file.

00:03:13.210 --> 00:03:17.125
And the pieces to the JSON Web
Token are some timestamp

00:03:17.125 --> 00:03:19.950
information like when it's
issued, an expiration date,

00:03:19.950 --> 00:03:24.940
and then the actual items
you are trying to sell.

00:03:24.940 --> 00:03:28.720
What makes it a token or
encrypted is your seller ID

00:03:28.720 --> 00:03:31.930
and the seller secret that
Google gives to you.

00:03:31.930 --> 00:03:35.270
And then the library that you
choose use wraps it up, and

00:03:35.270 --> 00:03:37.760
then you call a simple
JavaScript API.

00:03:37.760 --> 00:03:41.260
And on this page you'll see
the actual method is

00:03:41.260 --> 00:03:41.980
[? payment.in-app.buy ?].

00:03:41.980 --> 00:03:42.890
[? And ?]

00:03:42.890 --> 00:03:47.120
you pass in the JWT and you
start the purchase flow.

00:03:47.120 --> 00:03:48.390
It's really that easy.

00:03:52.590 --> 00:03:56.820
Now what I wanted to do,
switching back to camera, I

00:03:56.820 --> 00:03:59.130
want to make a very simple
application that allows me to

00:03:59.130 --> 00:04:02.090
buy something inside
of a Hangout.

00:04:02.090 --> 00:04:03.940
So to simplify--

00:04:03.940 --> 00:04:08.160
[INAUDIBLE I wrote a simple App
Engine project based off

00:04:08.160 --> 00:04:09.910
of the sample project
that whittles it

00:04:09.910 --> 00:04:12.160
down to an AJAX service.

00:04:12.160 --> 00:04:13.670
And I'm going to walk you
through the AJAX service.

00:04:13.670 --> 00:04:16.720
But the neat thing about the
AJAX service is, I just pass

00:04:16.720 --> 00:04:21.560
in the name, description, the
price in the URL to that AJAX

00:04:21.560 --> 00:04:24.170
request and it creates
a purchase.

00:04:24.170 --> 00:04:26.090
This is really good for
debugging and testing.

00:04:26.090 --> 00:04:29.030
Probably not something you want
to use in production.

00:04:29.030 --> 00:04:32.210
So switching to the
actual code.

00:04:35.790 --> 00:04:38.230
Can you see that OK, Gus?

00:04:38.230 --> 00:04:40.180
GUS CLASS: Jonathan, you may
want to make the font a little

00:04:40.180 --> 00:04:44.580
bit bigger for the people
looking because it's--

00:04:44.580 --> 00:04:47.900
I'm having trouble actually
maximizing this video for the

00:04:47.900 --> 00:04:48.730
full screen.

00:04:48.730 --> 00:04:49.240
JONATHAN BEYER: How about now?

00:04:49.240 --> 00:04:49.560
Is it--

00:04:49.560 --> 00:04:50.785
GUS CLASS: It looks
lot better for me.

00:04:50.785 --> 00:04:51.810
JONATHAN BEYER: OK, great.

00:04:51.810 --> 00:04:54.040
So for anybody who's
not used Python!

00:04:54.040 --> 00:04:56.370
With App Engine before,
this is a Python!

00:04:56.370 --> 00:04:58.600
project, it is very simple.

00:04:58.600 --> 00:05:01.970
The two things that you'll
notice at the top is we

00:05:01.970 --> 00:05:06.380
importing the JWT library and
we're also importing from the

00:05:06.380 --> 00:05:08.790
seller info file, my seller
ID and seller secret.

00:05:08.790 --> 00:05:11.045
I'm not going to show that to
you, because then people can

00:05:11.045 --> 00:05:12.750
start taking making
money for me.

00:05:12.750 --> 00:05:15.930
But there's a URL that we'll
have in the show notes that

00:05:15.930 --> 00:05:18.860
helps you generate your own
seller ID and seller secret.

00:05:18.860 --> 00:05:22.060
But outside of that, the
process is really easy.

00:05:22.060 --> 00:05:27.180
I have this route, this AJAX
JWT route, that creates a

00:05:27.180 --> 00:05:31.270
timestamp, assigns some default
values for the name,

00:05:31.270 --> 00:05:36.340
price, and description, and then
encodes that information

00:05:36.340 --> 00:05:39.010
into a JSON Web Token.

00:05:39.010 --> 00:05:43.380
And you can see, it's just
standard JSON with my seller

00:05:43.380 --> 00:05:46.470
secret which tokenizes it.

00:05:46.470 --> 00:05:50.230
And then, I do a
[? response.out.right ?]

00:05:50.230 --> 00:05:56.300
basically returning that JSON
Web Token to the AJAX request.

00:05:56.300 --> 00:05:59.890
A minor nit here, I'm
adding CORS headers.

00:05:59.890 --> 00:06:03.720
That allows me to do cross
domain requests in most modern

00:06:03.720 --> 00:06:06.740
browsers, and it works
pretty reliably.

00:06:06.740 --> 00:06:09.020
And that's in case you want to
do something like a gadget

00:06:09.020 --> 00:06:12.310
based Hangout app versus an
iframe based gadget app.

00:06:12.310 --> 00:06:14.820
Anyway, those are little
addendums.

00:06:14.820 --> 00:06:17.100
GUS CLASS: So Jonathan, to
clarify, so those CORS headers

00:06:17.100 --> 00:06:22.430
are used specifically for this
scenario because you're using

00:06:22.430 --> 00:06:24.650
cross domain scripting
on here?

00:06:24.650 --> 00:06:25.770
JONATHAN BEYER: Exactly.

00:06:25.770 --> 00:06:28.600
We have a sample application
that shows you how to serve

00:06:28.600 --> 00:06:30.490
your hang-up from
your own iframe.

00:06:30.490 --> 00:06:33.630
If you do that, if you want to
do AJAX from the same domain

00:06:33.630 --> 00:06:35.560
to same domain, works
no problem

00:06:35.560 --> 00:06:37.000
even in legacy browsers.

00:06:37.000 --> 00:06:39.540
If you're going to do something
like a cross domain,

00:06:39.540 --> 00:06:42.580
in a pure JavaScript
environment, because it's

00:06:42.580 --> 00:06:45.240
being hosted by Google,
different domain from where

00:06:45.240 --> 00:06:46.600
your AJAX is being hosted.

00:06:46.600 --> 00:06:48.860
GUS CLASS: So basically this
is AJAX being called from

00:06:48.860 --> 00:06:50.430
within an iframe.

00:06:50.430 --> 00:06:50.845
JONATHAN BEYER: Exactly.

00:06:50.845 --> 00:06:51.790
GUS CLASS: Cool.

00:06:51.790 --> 00:06:55.060
JONATHAN BEYER: I could have
not done this with AJAX, I

00:06:55.060 --> 00:06:57.350
could have done as a pure
server-side application which

00:06:57.350 --> 00:07:00.600
is probably the right way to
do it in many scenarios.

00:07:00.600 --> 00:07:04.630
And this is just for
demonstration purposes and

00:07:04.630 --> 00:07:05.590
flexibility.

00:07:05.590 --> 00:07:07.350
GUS CLASS: Great, thanks.

00:07:07.350 --> 00:07:08.850
JONATHAN BEYER: Now let's see.

00:07:08.850 --> 00:07:12.020
What was the next thing
I wanted to show?

00:07:12.020 --> 00:07:12.720
Yes.

00:07:12.720 --> 00:07:14.590
So now actually using that,
let me switch back to the

00:07:14.590 --> 00:07:15.840
screen share.

00:07:19.340 --> 00:07:22.640
Switching back to the screen
share, I have our Hangout app.

00:07:22.640 --> 00:07:25.420
This is a web app version, so
this will be iframe from my

00:07:25.420 --> 00:07:26.760
app engine domain.

00:07:26.760 --> 00:07:28.510
And for anybody's who's built
a Hangout app before, you'll

00:07:28.510 --> 00:07:33.190
recognize the hangouts.js In the
iframe technique we have

00:07:33.190 --> 00:07:37.660
to include an RPC library and
then we include the Google

00:07:37.660 --> 00:07:40.500
JavaScript API library, that's
this one right here.

00:07:40.500 --> 00:07:41.050
And that--

00:07:41.050 --> 00:07:45.410
it'll be familiar if you things
like maps and other

00:07:45.410 --> 00:07:47.990
APIs that are JavaScript
based.

00:07:47.990 --> 00:07:50.520
Then from here on out, actually
let me switch the

00:07:50.520 --> 00:07:53.310
syntax over to make it
a little bit more--

00:07:53.310 --> 00:07:54.910
ah, there we go.

00:07:54.910 --> 00:07:57.750
From here on out, we're just
going to do a basic XHR

00:07:57.750 --> 00:08:03.190
request, pass in the name
description and price.

00:08:03.190 --> 00:08:07.080
And here's where the actual
payment happens.

00:08:07.080 --> 00:08:09.820
On the response to that
XHR I call the

00:08:09.820 --> 00:08:12.270
goog.payments.inapp.buy.

00:08:12.270 --> 00:08:15.760
And I pass in the data, which
is the JSON Web Token.

00:08:15.760 --> 00:08:19.450
And any success or failure,
event handlers, they don't do

00:08:19.450 --> 00:08:21.540
anything interesting
right now.

00:08:21.540 --> 00:08:25.280
But when all is good, this will
start a purchase flow.

00:08:25.280 --> 00:08:28.560
It happens in an iframe,
within my application.

00:08:28.560 --> 00:08:30.230
As a developer, I don't have to
worry about anything that

00:08:30.230 --> 00:08:31.630
happens here on out.

00:08:31.630 --> 00:08:33.520
If there's a success,
there's a success.

00:08:33.520 --> 00:08:34.750
If there's a failure,
there's a failure.

00:08:34.750 --> 00:08:36.909
There's also a post back URL
that once the purchase

00:08:36.909 --> 00:08:41.039
happens, I can do additional
logging.

00:08:41.039 --> 00:08:44.240
The other thing that I skipped
over that's important to note

00:08:44.240 --> 00:08:48.020
as well, is that if you're using
the Google payments API

00:08:48.020 --> 00:08:51.250
for digital goods, you have
to load the library

00:08:51.250 --> 00:08:53.310
with that JSON API.

00:08:53.310 --> 00:08:54.770
And I do a google.load.

00:08:54.770 --> 00:08:57.900
This is all documented in the
Getting Started Guide, but the

00:08:57.900 --> 00:08:59.920
important thing to note here is
I'm actually running in a

00:08:59.920 --> 00:09:02.220
sandbox config.

00:09:02.220 --> 00:09:05.050
So when I'm running in the
sandbox config, it's a very

00:09:05.050 --> 00:09:07.260
useful feature, because none
of the credit card

00:09:07.260 --> 00:09:10.890
transactions will actually
really be charged.

00:09:10.890 --> 00:09:16.640
So I can keep on testing,
tweaking, and doing more

00:09:16.640 --> 00:09:19.970
development without actually
charging myself or doing $1.00

00:09:19.970 --> 00:09:22.990
transactions which would be the
case if we didn't have the

00:09:22.990 --> 00:09:24.160
sandbox environment.

00:09:24.160 --> 00:09:27.020
And when you're ready to go to
production, you literally

00:09:27.020 --> 00:09:28.700
change the package
to production.

00:09:28.700 --> 00:09:31.730
And now you can accept
payments with

00:09:31.730 --> 00:09:33.510
real credit card numbers.

00:09:40.450 --> 00:09:41.060
GUS CLASS: Sorry, Jon.

00:09:41.060 --> 00:09:42.750
JONATHAN BEYER: Oh,
no worries.

00:09:42.750 --> 00:09:44.860
Now that we've actually seen
some of the code, I'm going to

00:09:44.860 --> 00:09:49.660
try to see if I can do a screen
share of that simple

00:09:49.660 --> 00:09:51.620
app that's actually
running today.

00:09:51.620 --> 00:09:55.100
So let me screen share the
Hangout, this might have a

00:09:55.100 --> 00:09:57.730
hollow mirrors effect.

00:09:57.730 --> 00:09:58.980
I don't know yet.

00:10:01.605 --> 00:10:04.280
Let's see.

00:10:04.280 --> 00:10:06.046
Can you see the application?

00:10:06.046 --> 00:10:06.760
GUS CLASS: Yes.

00:10:06.760 --> 00:10:09.500
If you zoom in a little bit.

00:10:09.500 --> 00:10:11.140
JONATHAN BEYER: Yeah, yeah.

00:10:11.140 --> 00:10:13.060
So name, description, price.

00:10:13.060 --> 00:10:14.545
Those are the parameters
that I was passing

00:10:14.545 --> 00:10:16.320
into the AJAX request.

00:10:16.320 --> 00:10:19.730
I'm selling a Slicer-Dicer which
is the best salsa maker

00:10:19.730 --> 00:10:20.980
on the planet.

00:10:20.980 --> 00:10:25.755
This AJAX purchase is going to
initiate the buy method.

00:10:25.755 --> 00:10:30.260
And we'll see if that
successfully loads.

00:10:30.260 --> 00:10:31.990
So now from here on out, the
developer doesn't have to

00:10:31.990 --> 00:10:33.260
worry about anything.

00:10:33.260 --> 00:10:37.120
This is the Google Wallet
doing its thing.

00:10:37.120 --> 00:10:40.340
I have a test credit card.

00:10:40.340 --> 00:10:42.170
So you don't even have to use
your own credit cards.

00:10:42.170 --> 00:10:44.440
Google provides you with
an AmEx, MasterCard

00:10:44.440 --> 00:10:45.960
and a Visa, I think.

00:10:45.960 --> 00:10:49.060
So in sandbox, you can keep
on trying with that.

00:10:49.060 --> 00:10:52.640
So it's completely, completely
sandboxed.

00:10:52.640 --> 00:10:54.640
Go ahead and press Buy.

00:10:54.640 --> 00:10:57.156
The flow continues.

00:11:00.400 --> 00:11:01.880
Make sure that my Wi-Fi isn't.

00:11:01.880 --> 00:11:03.060
And guess what?

00:11:03.060 --> 00:11:05.030
The purchase has just
been successful.

00:11:05.030 --> 00:11:11.123
And I'll probably see a success
method if I look in

00:11:11.123 --> 00:11:11.710
the console.

00:11:11.710 --> 00:11:16.000
I don't know if you can see the
console, but payment was

00:11:16.000 --> 00:11:17.090
successful.

00:11:17.090 --> 00:11:20.150
There's some weirdness going
on with the Hangout, so at

00:11:20.150 --> 00:11:20.420
this point--

00:11:20.420 --> 00:11:27.210
GUS CLASS: So Jonathan, to
clarify what's going on here,

00:11:27.210 --> 00:11:29.800
you've got a sandbox account for
Google Wallet as well as

00:11:29.800 --> 00:11:32.050
for the Hangout.

00:11:32.050 --> 00:11:34.540
And so all of these transactions
that you are

00:11:34.540 --> 00:11:37.850
doing are just nulls?

00:11:37.850 --> 00:11:39.100
JONATHAN BEYER: Exactly,
exactly.

00:11:41.820 --> 00:11:45.490
And so it actually gets recorded
in the sandbox log,

00:11:45.490 --> 00:11:47.770
so you can see what's
being transpiring.

00:11:47.770 --> 00:11:50.750
But there's no real money being
charged or any fees

00:11:50.750 --> 00:11:52.900
being levied.

00:11:52.900 --> 00:11:55.360
So you keep on testing
in sandbox.

00:11:55.360 --> 00:11:59.220
And once you go to production,
you might want to have a bill

00:11:59.220 --> 00:12:01.310
that is the production bill,
that takes currency and then

00:12:01.310 --> 00:12:04.090
in your dev environment, keep
that sandbox built for

00:12:04.090 --> 00:12:05.850
additional testing,
and purchases,

00:12:05.850 --> 00:12:06.900
and things like that.

00:12:06.900 --> 00:12:07.350
GUS CLASS: Cool.

00:12:07.350 --> 00:12:10.720
So if you wanted other people
to test inside of your

00:12:10.720 --> 00:12:13.180
sandbox, what would
they have to do?

00:12:13.180 --> 00:12:15.610
Would you be able to share out
your app like you would any

00:12:15.610 --> 00:12:18.300
others sandbox app and then--

00:12:18.300 --> 00:12:18.880
JONATHAN BEYER: Exactly.

00:12:18.880 --> 00:12:20.550
If I send this to you,
Gus, you can go ahead

00:12:20.550 --> 00:12:21.510
and purchase that.

00:12:21.510 --> 00:12:24.390
I'd recommend you using a
test credit card, but--

00:12:24.390 --> 00:12:24.840
GUS CLASS: OK.

00:12:24.840 --> 00:12:26.570
JONATHAN BEYER: --of course it's
in the sandbox, so even a

00:12:26.570 --> 00:12:28.660
production one won't
be charged.

00:12:28.660 --> 00:12:30.210
But as long as you have access
to my application,

00:12:30.210 --> 00:12:31.610
you can test this.

00:12:31.610 --> 00:12:34.000
So it's really neat for other
developers when they are

00:12:34.000 --> 00:12:36.520
working together or if
you're doing Q&amp;A.

00:12:36.520 --> 00:12:37.770
GUS CLASS: Great, thanks.

00:12:40.310 --> 00:12:41.780
JONATHAN BEYER: Yeah, I
think that covers it.

00:12:41.780 --> 00:12:44.230
And you saw that code was
pretty straightforward.

00:12:44.230 --> 00:12:47.050
The documentation was
super helpful.

00:12:47.050 --> 00:12:50.630
We'll provide in the show notes
links to the sample

00:12:50.630 --> 00:12:52.320
code, because we'll be
publishing this probably

00:12:52.320 --> 00:12:56.810
tomorrow morning with the
App Engine project.

00:12:56.810 --> 00:12:58.980
[INAUDIBLE] credit cards, how to
get your cell information,

00:12:58.980 --> 00:13:02.600
and of course, the commerce
application, the digital goods

00:13:02.600 --> 00:13:07.065
application is already up, and a
link to all that afterwards.

00:13:07.065 --> 00:13:08.340
GUS CLASS: Great.

00:13:08.340 --> 00:13:12.940
So what we are seeing is a real
simple example of how to

00:13:12.940 --> 00:13:16.170
use Google Wallet APIs from
within a Hangout app.

00:13:16.170 --> 00:13:19.560
And so Jonathan, we'll make sure
that we include the link

00:13:19.560 --> 00:13:22.960
to the sample code with the
video so that people can

00:13:22.960 --> 00:13:25.250
download it, play with
it, experiment.

00:13:25.250 --> 00:13:29.950
And then we'll have a little
starter project for other

00:13:29.950 --> 00:13:30.870
developers out there.

00:13:30.870 --> 00:13:32.630
JONATHAN BEYER: Thank you.

00:13:32.630 --> 00:13:35.220
GUS CLASS: So I guess what would
be interesting now would

00:13:35.220 --> 00:13:38.180
be if anyone has any questions,
make sure that you

00:13:38.180 --> 00:13:40.150
ask them in the event, and
we're monitoring that.

00:13:40.150 --> 00:13:46.340
And so Allen just asked, are
there any best practices for

00:13:46.340 --> 00:13:49.760
determining what products a
person has purchased to make

00:13:49.760 --> 00:13:53.480
them available in
Hangout apps?

00:13:53.480 --> 00:13:56.520
JONATHAN BEYER: So let me think

00:13:56.520 --> 00:13:58.050
more about that question.

00:13:58.050 --> 00:13:58.805
There's a--

00:13:58.805 --> 00:14:02.790
I skipped over the JWT pretty
quickly, but let's see if I

00:14:02.790 --> 00:14:04.750
can go back to it.

00:14:04.750 --> 00:14:09.240
There's is a section in that JWT
that's called seller data.

00:14:09.240 --> 00:14:11.070
GUS CLASS: So could
you move that--

00:14:11.070 --> 00:14:12.560
can you actually expand
it a little bit more?

00:14:12.560 --> 00:14:15.970
We're having trouble
seeing it.

00:14:15.970 --> 00:14:17.460
JONATHAN BEYER: Let me
know if this is good.

00:14:20.245 --> 00:14:23.040
Looks good?

00:14:23.040 --> 00:14:24.820
GUS CLASS: Maybe a little
bit bigger?

00:14:24.820 --> 00:14:25.930
JONATHAN BEYER: OK.

00:14:25.930 --> 00:14:27.830
It's not very interesting what
I'm trying to show you, but

00:14:27.830 --> 00:14:30.170
there's a field called
seller data.

00:14:30.170 --> 00:14:32.860
And that's one of the attributes
on the JSON that

00:14:32.860 --> 00:14:34.350
gets encoded in the JWT.

00:14:34.350 --> 00:14:36.710
And that's where you want to put
some additional tracking

00:14:36.710 --> 00:14:37.890
information.

00:14:37.890 --> 00:14:42.790
So if you are trying to figure
out what part of your

00:14:42.790 --> 00:14:45.030
application it's being come
from, let's say you have

00:14:45.030 --> 00:14:49.070
different applications, both in
a Hangout and on the web,

00:14:49.070 --> 00:14:51.900
you'd probably want to stick
that in there so that purchase

00:14:51.900 --> 00:14:54.160
gets tied to whatever that
metadata is there.

00:14:54.160 --> 00:14:59.090
In terms of figuring out what to
sell, you probably want to

00:14:59.090 --> 00:15:02.190
think about creating your own
recommendation engine.

00:15:02.190 --> 00:15:05.700
There are, of course, plenty
of e-commerce solutions for

00:15:05.700 --> 00:15:06.950
recommending products.

00:15:09.210 --> 00:15:11.190
Your mileage may vary, I know
a bunch that I could

00:15:11.190 --> 00:15:14.120
recommend, because I've worked
with a lot of them.

00:15:14.120 --> 00:15:16.800
But to figure out what to sell
is going to become the bread

00:15:16.800 --> 00:15:19.140
and butter of your application
engine.

00:15:21.960 --> 00:15:23.780
GUS CLASS: Thanks, Jonathan.

00:15:23.780 --> 00:15:26.010
So also, what are the
types of scenarios

00:15:26.010 --> 00:15:27.680
that we really expect?

00:15:27.680 --> 00:15:31.510
Or what are people really been
excited about doing with

00:15:31.510 --> 00:15:32.870
in-app payments?

00:15:32.870 --> 00:15:34.170
JONATHAN BEYER: That's
a great question.

00:15:34.170 --> 00:15:36.610
So the traditional I'm buying
something within an

00:15:36.610 --> 00:15:38.180
application makes sense.

00:15:38.180 --> 00:15:41.720
Think about games, power-ups,
levels, customization for your

00:15:41.720 --> 00:15:43.602
characters.

00:15:43.602 --> 00:15:45.520
Those are pretty obvious.

00:15:45.520 --> 00:15:49.000
If you think of buying new
games within games.

00:15:49.000 --> 00:15:53.720
So if you have casual games like
checkers or chess, and if

00:15:53.720 --> 00:15:56.380
you want to buy a Chinese
backgammon or something like

00:15:56.380 --> 00:15:59.070
that, that's also totally within
the realms of what

00:15:59.070 --> 00:16:00.160
in-app payments do.

00:16:00.160 --> 00:16:03.290
But other scenarios which are
pretty interesting, if you

00:16:03.290 --> 00:16:07.370
want to do something like a
freemium model where you can

00:16:07.370 --> 00:16:09.150
provide a level of
your service.

00:16:09.150 --> 00:16:10.680
So if it's not even a game,
let's say it's for an activity

00:16:10.680 --> 00:16:14.280
app and you want to say oh, one
gig of storage is free.

00:16:14.280 --> 00:16:16.660
Additional storage you can use
in-app payments to buy that as

00:16:16.660 --> 00:16:18.300
a one time fee.

00:16:18.300 --> 00:16:21.000
But the other piece that we
didn't go over is the

00:16:21.000 --> 00:16:22.440
introduction of subscription
billing.

00:16:22.440 --> 00:16:26.090
So I believe at Google I/O, we
announced the ability to do

00:16:26.090 --> 00:16:27.480
subscription-based billing.

00:16:27.480 --> 00:16:30.980
So if you're doing a service,
maybe you're doing a

00:16:30.980 --> 00:16:35.170
subscription for lessons
inside of a Hangout.

00:16:35.170 --> 00:16:39.000
So something like a cooking
class or education where they

00:16:39.000 --> 00:16:40.180
load the application.

00:16:40.180 --> 00:16:42.130
Before they can start, you
check whether they have a

00:16:42.130 --> 00:16:42.570
subscription.

00:16:42.570 --> 00:16:45.940
Otherwise you do some sort
of prompt to subscribe.

00:16:45.940 --> 00:16:50.050
That's really interesting and I
think people will definitely

00:16:50.050 --> 00:16:53.020
start exploring that as
soon as they can.

00:16:53.020 --> 00:16:54.270
GUS CLASS: Cool, that's
pretty exciting.

00:16:57.460 --> 00:17:00.560
I guess another question would
be-- so we talked a little bit

00:17:00.560 --> 00:17:02.920
about best practices.

00:17:02.920 --> 00:17:04.609
What about security
considerations?

00:17:04.609 --> 00:17:08.300
How do we know that the
information that's being

00:17:08.300 --> 00:17:10.670
shared within the Hangout
because it's a JavaScript app

00:17:10.670 --> 00:17:12.490
in an iframe, right?

00:17:12.490 --> 00:17:13.470
How do we know that the various

00:17:13.470 --> 00:17:15.349
credentials are secure?

00:17:15.349 --> 00:17:21.040
And what are some of the key
security measures that are

00:17:21.040 --> 00:17:23.060
being demonstrated
in this sample?

00:17:23.060 --> 00:17:25.119
JONATHAN BEYER: That's also
a great question.

00:17:25.119 --> 00:17:29.930
The JSON Web Token is core to
what's making in-app payments,

00:17:29.930 --> 00:17:32.180
or digital goods
rather, secure.

00:17:32.180 --> 00:17:38.470
Because it is using a seller
secret and hashing that JSON,

00:17:38.470 --> 00:17:39.990
it's hard to decrypt it.

00:17:39.990 --> 00:17:45.580
There's also time stamps within
the JSON Web Token, so

00:17:45.580 --> 00:17:50.670
when it was created and when it
expires which is persistent

00:17:50.670 --> 00:17:53.590
on the server side, so it
validates that as well by

00:17:53.590 --> 00:17:55.970
making it moot if somebody tries
to figure it out after

00:17:55.970 --> 00:17:57.000
it's expired.

00:17:57.000 --> 00:18:00.030
And the communications
is done over HTTPS.

00:18:00.030 --> 00:18:04.840
So even if you're using a
non-Hangout app and it's over

00:18:04.840 --> 00:18:07.900
HTTP, the purchase is in an
iframe and it is secured.

00:18:07.900 --> 00:18:12.740
So we do our best attempt to
making it a fool-proof system.

00:18:12.740 --> 00:18:17.800
But you can rest assured that
there's all the industry

00:18:17.800 --> 00:18:20.130
controls around making a
secure payment system.

00:18:20.130 --> 00:18:21.680
We fall into those.

00:18:21.680 --> 00:18:22.790
GUS CLASS: Great, thank
you, Jonathan.

00:18:22.790 --> 00:18:24.280
Allen has a question.

00:18:24.280 --> 00:18:28.040
And he's asking, in the
context of items to be

00:18:28.040 --> 00:18:31.180
purchased and used inside
of the Hangout itself--

00:18:31.180 --> 00:18:35.070
let's say that he has a game
inside a Hangout, what's the

00:18:35.070 --> 00:18:37.090
best way to determine--

00:18:37.090 --> 00:18:38.340
actually it looks like--

00:18:40.350 --> 00:18:42.900
what's the best way to determine
what items they have

00:18:42.900 --> 00:18:45.420
purchased, and then if they
want to use them in a game

00:18:45.420 --> 00:18:51.080
later, what's the way to
synchronize across that?

00:18:51.080 --> 00:18:53.970
What he suggested is using the
user's ID, storing it on the

00:18:53.970 --> 00:18:57.870
server, and then using that to
look up which items they own,

00:18:57.870 --> 00:19:00.460
and then bringing
it back later.

00:19:00.460 --> 00:19:02.890
JONATHAN BEYER: You took the
words right out of my mouth.

00:19:02.890 --> 00:19:03.790
GUS CLASS: OK, cool.

00:19:03.790 --> 00:19:06.020
JONATHAN BEYER: In the context
of a Hangout, we've talked

00:19:06.020 --> 00:19:09.330
about this in former Hangout
office hours, about there's a

00:19:09.330 --> 00:19:12.220
Google+ ID, there's a Hangout
ID, and then there's the

00:19:12.220 --> 00:19:13.240
participant ID.

00:19:13.240 --> 00:19:15.680
They're all different,
they're all unique.

00:19:15.680 --> 00:19:19.490
In the context of this, the most
absolute, unique way of

00:19:19.490 --> 00:19:22.440
identifying the user on Google+
inside of a Hangout is

00:19:22.440 --> 00:19:25.020
to use the Google+, their ID.

00:19:25.020 --> 00:19:28.020
That's on the long URL when
you go to their profile.

00:19:28.020 --> 00:19:29.920
Go ahead, use that as the key.

00:19:29.920 --> 00:19:34.190
That's guaranteed and secure,
and we're not going to be

00:19:34.190 --> 00:19:34.790
changing that.

00:19:34.790 --> 00:19:36.940
So that's valid.

00:19:36.940 --> 00:19:41.070
And App Engine has a great back
end for doing large types

00:19:41.070 --> 00:19:43.490
of tables and big query
for big queries.

00:19:43.490 --> 00:19:47.260
So if you have a huge
application, you can easy

00:19:47.260 --> 00:19:49.960
troll through all those by
looking at the item ID

00:19:49.960 --> 00:19:52.560
compared to a user ID.

00:19:52.560 --> 00:19:54.060
That's the right way.

00:19:54.060 --> 00:19:54.720
GUS CLASS: Cool, great.

00:19:54.720 --> 00:19:55.650
Thanks for that suggestion.

00:19:55.650 --> 00:19:59.020
And I guess we're--

00:19:59.020 --> 00:20:00.280
I'm not seeing any questions
right now.

00:20:00.280 --> 00:20:01.960
We'll hang out a little
bit longer.

00:20:01.960 --> 00:20:08.220
Jonathan, if you could talk for
a moment about scenarios

00:20:08.220 --> 00:20:11.090
other than games,
specifically--

00:20:11.090 --> 00:20:13.480
people are interested in doing
things like accepting

00:20:13.480 --> 00:20:16.470
donations through Hangouts.

00:20:16.470 --> 00:20:19.650
And also about pay
per view content.

00:20:19.650 --> 00:20:22.320
So, featured speakers
and so forth.

00:20:22.320 --> 00:20:23.700
JONATHAN BEYER: Yeah.

00:20:23.700 --> 00:20:27.560
So donations work the same
way as in-app payment.

00:20:27.560 --> 00:20:30.000
We don't have a particular API
dedicated to donations.

00:20:30.000 --> 00:20:33.500
But as you can imagine, because
our split with the

00:20:33.500 --> 00:20:38.330
developers is so fair, it's
better than a lot of the

00:20:38.330 --> 00:20:39.930
donation services out there.

00:20:39.930 --> 00:20:43.370
So you would treat that as, I
want to donate $5 to this

00:20:43.370 --> 00:20:46.070
cause, you would do that
with the digital goods.

00:20:46.070 --> 00:20:48.640
In terms of non-game scenarios,
I think the

00:20:48.640 --> 00:20:51.390
freemium model is the right
place to talk about this,

00:20:51.390 --> 00:20:53.880
especially when you're talking
about productivity software.

00:20:53.880 --> 00:20:56.830
So if I have one user in the
system, or five users in the

00:20:56.830 --> 00:21:01.530
system that's free, if it's
a combine board, or a

00:21:01.530 --> 00:21:03.940
[? sprint ?] planning board, and
if I add additional users,

00:21:03.940 --> 00:21:05.370
I have to buy additional
seats.

00:21:05.370 --> 00:21:07.648
You can do that as a one-time
purchase, or you can do that

00:21:07.648 --> 00:21:09.620
as recurring billing.

00:21:09.620 --> 00:21:13.400
And then if you want to
piecemeal your product, so I

00:21:13.400 --> 00:21:16.680
have something where you can use
just the [? sprintboard ?]

00:21:16.680 --> 00:21:20.110
for free, but if you want to
have real time chat with

00:21:20.110 --> 00:21:23.580
logging, you have to pay an
additional $100 a year, or

00:21:23.580 --> 00:21:25.030
something like that.

00:21:25.030 --> 00:21:27.410
That's also a great scenario
to do that.

00:21:27.410 --> 00:21:34.480
I think the premium content
is very interesting, and I

00:21:34.480 --> 00:21:38.950
definitely like that model,
because you have full control

00:21:38.950 --> 00:21:41.470
of the application that's
running in the Hangout.

00:21:41.470 --> 00:21:47.980
And for somebody to do a
paywall, or subscription-based

00:21:47.980 --> 00:21:50.140
content viewing, the app
lets you have full

00:21:50.140 --> 00:21:51.480
control over that.

00:21:51.480 --> 00:21:55.740
The digital goods make it
accessible and monetizable.

00:21:55.740 --> 00:21:57.990
The one area that it gets tricky
is if you want to do

00:21:57.990 --> 00:22:00.210
that over Hangouts on Air.

00:22:00.210 --> 00:22:04.310
Because the Hangouts on Air is
not restricted to the app.

00:22:04.310 --> 00:22:07.400
The Hangouts on Air can run on
youtube.com, it can run on

00:22:07.400 --> 00:22:09.240
Google+ Stream, and it can run
anywhere you embed that

00:22:09.240 --> 00:22:10.020
YouTube feed.

00:22:10.020 --> 00:22:14.440
So if you're looking to control
streaming content or

00:22:14.440 --> 00:22:18.110
even just static content on an
HOA setting, then you're going

00:22:18.110 --> 00:22:22.100
to-- you can't use
digital goods.

00:22:22.100 --> 00:22:24.810
Now, you can prevent
that functionality.

00:22:24.810 --> 00:22:28.420
So within our API, you can
detect if somebody's

00:22:28.420 --> 00:22:31.680
broadcasting, and that's
something that we'll be

00:22:31.680 --> 00:22:33.730
exploring further to make
that even easier.

00:22:33.730 --> 00:22:37.340
And then you could say hey,
you're broadcasting this

00:22:37.340 --> 00:22:38.240
premium content.

00:22:38.240 --> 00:22:40.250
We're going to stop the
feed until you stop

00:22:40.250 --> 00:22:41.840
the Hangouts on Air.

00:22:41.840 --> 00:22:44.050
And that's probably the best
solution for anybody who's

00:22:44.050 --> 00:22:47.300
looking to do premium content
in a Hangout using digital

00:22:47.300 --> 00:22:49.730
goods to monetize it.

00:22:49.730 --> 00:22:49.990
GUS CLASS: Cool.

00:22:49.990 --> 00:22:52.140
So another question
has come up.

00:22:52.140 --> 00:22:56.160
What if you have a limited
set of products?

00:22:56.160 --> 00:23:00.180
So let's say you've got a
special edition item, and

00:23:00.180 --> 00:23:02.660
it'll be sold from within
a Hangout until

00:23:02.660 --> 00:23:03.490
there's zero left.

00:23:03.490 --> 00:23:06.050
You start with 10, and
it decrements.

00:23:06.050 --> 00:23:08.960
Is this possible using the
Wallet API, or would you have

00:23:08.960 --> 00:23:12.920
to use your own implementation
on the back end?

00:23:12.920 --> 00:23:16.200
JONATHAN BEYER: So inventory
management is not done by

00:23:16.200 --> 00:23:17.190
Google Wallet.

00:23:17.190 --> 00:23:21.250
The payments API is the quick
and easy way to make

00:23:21.250 --> 00:23:24.165
purchases, purchases
and subscriptions.

00:23:24.165 --> 00:23:26.260
For doing inventory, you're
going to have to build

00:23:26.260 --> 00:23:29.820
industry system or look towards
other systems that are

00:23:29.820 --> 00:23:31.070
out there for inventory.

00:23:34.790 --> 00:23:36.800
Your simple scenario, you
wouldn't need a full

00:23:36.800 --> 00:23:38.220
e-commerce back end.

00:23:38.220 --> 00:23:40.590
I worked with a bunch
of them in the past.

00:23:40.590 --> 00:23:42.770
Sometimes they're overhead
that you don't need.

00:23:42.770 --> 00:23:46.620
If you want to have 10 items
or X items and to decrement

00:23:46.620 --> 00:23:50.610
them, I would do a simple
App Engine project.

00:23:50.610 --> 00:23:54.980
Have one of our data store, or
even big query, depending on

00:23:54.980 --> 00:23:59.730
what you're looking at, and then
use something like AJAX

00:23:59.730 --> 00:24:01.270
to decrement each purchase.

00:24:01.270 --> 00:24:04.990
It's actually a very easy code,
but the Wallet won't do

00:24:04.990 --> 00:24:06.730
that for you.

00:24:06.730 --> 00:24:08.530
GUS CLASS: So you won't get the
transaction APIs for that,

00:24:08.530 --> 00:24:11.210
just from Wallet.

00:24:11.210 --> 00:24:14.790
So there's another question, and
I really wish we had one

00:24:14.790 --> 00:24:16.840
of the Wallet guys here, because
they'd totally be able

00:24:16.840 --> 00:24:17.590
to cover this stuff.

00:24:17.590 --> 00:24:21.000
But would you happen to know
what the limits are?

00:24:21.000 --> 00:24:27.280
What's the minimum and maximum
for Wallet API payments?

00:24:27.280 --> 00:24:28.550
JONATHAN BEYER: So
is that price?

00:24:28.550 --> 00:24:30.500
Or is that--

00:24:30.500 --> 00:24:32.740
GUS CLASS: Is it, I mean,
can you say--

00:24:32.740 --> 00:24:37.490
I know that particularly in app
stores you will see the

00:24:37.490 --> 00:24:40.558
minimum payment is like $1.

00:24:40.558 --> 00:24:42.930
JONATHAN BEYER: Um hmm.

00:24:42.930 --> 00:24:44.760
I don't know off the
top my head.

00:24:47.980 --> 00:24:48.890
There is--

00:24:48.890 --> 00:24:51.510
I can talk to you a little bit
about the pricing model

00:24:51.510 --> 00:24:54.030
because we actually introduced
a new pricing model at I/O.

00:24:54.030 --> 00:24:56.590
It's pretty favorable
for developers.

00:24:56.590 --> 00:25:02.030
So when in-app payments launched
last year or so, we

00:25:02.030 --> 00:25:06.810
had a flat 5% fee across
whatever your transaction was

00:25:06.810 --> 00:25:09.830
which is very competitive
compared to other products,

00:25:09.830 --> 00:25:11.450
which made it very desirable.

00:25:11.450 --> 00:25:16.390
Recently, we introduced a
secondary structure which is,

00:25:16.390 --> 00:25:23.390
I want to say, $0.30 plus 1.9%
off the total purchase.

00:25:23.390 --> 00:25:26.604
And the beauty of--

00:25:26.604 --> 00:25:28.610
GUS CLASS: Whoa, what
just happened?

00:25:33.110 --> 00:25:35.580
JONATHAN BEYER: --as long as
it's a measurable amount.

00:25:38.450 --> 00:25:41.850
But yeah, we'll have to follow
up with the Payments guys to

00:25:41.850 --> 00:25:43.910
figure that one out.

00:25:43.910 --> 00:25:45.160
GUS CLASS: Cool.

00:25:46.800 --> 00:25:49.230
So it looks like we're not
seeing too many more

00:25:49.230 --> 00:25:50.160
questions right now.

00:25:50.160 --> 00:25:53.150
We'll wait a minute or two.

00:25:53.150 --> 00:25:56.110
We had some minor technical
difficulties just recently

00:25:56.110 --> 00:25:59.060
with the Hangout, but
we should be good.

00:26:04.832 --> 00:26:06.305
JONATHAN BEYER: Well, Gus,
let me ask you question.

00:26:06.305 --> 00:26:06.970
GUS CLASS: Yeah?

00:26:06.970 --> 00:26:09.160
JONATHAN BEYER: You've
asked me so many.

00:26:09.160 --> 00:26:11.690
What's the first use that
you want to see

00:26:11.690 --> 00:26:16.590
with digital goods?

00:26:16.590 --> 00:26:18.690
GUS CLASS: I mean, certainly
something that is really fun

00:26:18.690 --> 00:26:26.080
is the notion of real
money within games.

00:26:26.080 --> 00:26:29.780
I think it'd be interesting to
see things like actual item

00:26:29.780 --> 00:26:34.580
purchases and other exciting
things for people who are

00:26:34.580 --> 00:26:35.840
actually creating games.

00:26:35.840 --> 00:26:41.580
I would really expect that to be
the first and most critical

00:26:41.580 --> 00:26:45.600
use of payments within apps.

00:26:45.600 --> 00:26:47.580
JONATHAN BEYER: Yeah,
definitely.

00:26:47.580 --> 00:26:51.520
We have a strong user base of
developers who are interested

00:26:51.520 --> 00:26:54.530
in games in Hangouts.

00:26:54.530 --> 00:26:57.366
It's obvious why there's
a happy marriage there.

00:26:57.366 --> 00:27:02.070
It's social, it's real
time, it's fun.

00:27:02.070 --> 00:27:05.050
And I think we're going to see
a lot of adoption from the

00:27:05.050 --> 00:27:09.570
games folks, bringing their
Hangout games, making it

00:27:09.570 --> 00:27:11.420
monetizable.

00:27:11.420 --> 00:27:14.490
GUS CLASS: I think it also is
going to mean more people

00:27:14.490 --> 00:27:18.730
looking at that Hangouts API
and looking at Hangouts for

00:27:18.730 --> 00:27:21.500
the kinds of games that
they can create.

00:27:21.500 --> 00:27:22.440
JONATHAN BEYER: Yeah,
definitely.

00:27:22.440 --> 00:27:24.600
And it's not just game
developers, it's not just

00:27:24.600 --> 00:27:27.930
productivity and traditional
app developers that we'll

00:27:27.930 --> 00:27:30.060
going to get interest from.

00:27:30.060 --> 00:27:33.330
Brands, and marketing companies,
and agencies are

00:27:33.330 --> 00:27:36.860
all saying, hey, this is a great
opportunity to build an

00:27:36.860 --> 00:27:41.650
interactive art piece or web app
that brands can actually

00:27:41.650 --> 00:27:45.050
get in front of the eyeballs
of their consumers.

00:27:45.050 --> 00:27:47.680
And then of course, if you have
a monetizable piece to

00:27:47.680 --> 00:27:49.270
that, that's awesome, right?

00:27:49.270 --> 00:27:52.030
It's really hard to get ROI
in a marketing campaign.

00:27:52.030 --> 00:27:55.370
But if you build a Hangout app,
which it's pretty easy to

00:27:55.370 --> 00:27:57.170
do, make it fun and
compelling, people

00:27:57.170 --> 00:27:59.706
could pony up for it.

00:27:59.706 --> 00:28:01.410
GUS CLASS: Yep, and we've
definitely heard some success

00:28:01.410 --> 00:28:05.310
stories about charities with
getting really good engagement

00:28:05.310 --> 00:28:07.460
from within Hangouts.

00:28:07.460 --> 00:28:11.060
And maybe supporting a donation
model within their

00:28:11.060 --> 00:28:15.340
Hangout apps and stuff could
give them direct revenue from

00:28:15.340 --> 00:28:15.990
within apps.

00:28:15.990 --> 00:28:18.980
So that's a cool scenario
for sure.

00:28:18.980 --> 00:28:20.500
JONATHAN BEYER: Yeah,
definitely.

00:28:20.500 --> 00:28:24.200
And there's a lot of traditional
Hangouts that are

00:28:24.200 --> 00:28:28.980
high-profile, low-profile,
crazy things going on in

00:28:28.980 --> 00:28:32.950
Hangouts that can be enhanced
with use of Hangout apps.

00:28:32.950 --> 00:28:34.200
What was the one
I saw recently?

00:28:37.110 --> 00:28:43.040
There was LA Robotics Club
was doing a hack-a-thon

00:28:43.040 --> 00:28:43.640
just the other day.

00:28:43.640 --> 00:28:49.340
Maybe the thing's still going
on today, and people were

00:28:49.340 --> 00:28:52.340
building together and hacking
and building crazy robots.

00:28:52.340 --> 00:28:55.820
But now imagine if you could
somehow turn that around and

00:28:55.820 --> 00:28:59.840
do a hack for good kind
of experience.

00:28:59.840 --> 00:29:03.830
It's not necessarily a
application or a game that you

00:29:03.830 --> 00:29:07.460
engage with, but maybe you
donate to a particular team so

00:29:07.460 --> 00:29:08.420
that they can get more stuff.

00:29:08.420 --> 00:29:10.910
And part of that revenue
goes to a foundation.

00:29:10.910 --> 00:29:15.520
Or whoever wins gets a pot and,
the remainder goes to the

00:29:15.520 --> 00:29:16.100
foundation.

00:29:16.100 --> 00:29:19.220
So this is not a web app, this
is not a game, but this is

00:29:19.220 --> 00:29:23.230
using Hangouts to connect people
and also the digital

00:29:23.230 --> 00:29:28.710
goods to bring monetization
opportunities.

00:29:28.710 --> 00:29:32.430
GUS CLASS: Great, so looks
like the conversation has

00:29:32.430 --> 00:29:33.350
quieted down a bit.

00:29:33.350 --> 00:29:37.010
And I think we're about ready
to wrap up, Jonathan.

00:29:37.010 --> 00:29:39.600
Thanks, everyone,
for watching.

00:29:39.600 --> 00:29:43.530
It's been a fun Hangout today,
and keep an eye out for

00:29:43.530 --> 00:29:46.010
Google+ office hours
in the future.

00:29:46.010 --> 00:29:49.340
Jonathan, Anything
left to say?

00:29:49.340 --> 00:29:50.070
JONATHAN BEYER: Just
thanks a lot.

00:29:50.070 --> 00:29:52.220
If you have any questions about
Hangouts or Hangout

00:29:52.220 --> 00:29:55.680
apps, or even digital
goods, feel free to

00:29:55.680 --> 00:29:56.815
+Mention us on Google+.

00:29:56.815 --> 00:29:59.730
And of course, we can connect
you if you have further

00:29:59.730 --> 00:30:03.970
questions about the
commerce APIs.

00:30:03.970 --> 00:30:04.320
GUS CLASS: Great.

00:30:04.320 --> 00:30:05.310
Thanks, everyone.

00:30:05.310 --> 00:30:08.670
Have a good week, and join us
again for office hours,

00:30:08.670 --> 00:30:10.850
probably next week.

00:30:10.850 --> 00:30:19.733
[MUSIC PLAYING]

