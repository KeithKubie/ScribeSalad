WEBVTT
Kind: captions
Language: en

00:00:07.760 --> 00:00:10.010
DYLAN THOMAS: Hello, and
welcome to What In The World.

00:00:10.010 --> 00:00:13.120
This is a show where
enterprise GeoGooglers look

00:00:13.120 --> 00:00:15.020
at something interesting
in the product.

00:00:15.020 --> 00:00:16.129
My name's Dylan Thomas.

00:00:16.129 --> 00:00:18.510
I'm a Community Manager
on the Maps team.

00:00:18.510 --> 00:00:20.540
And joining me today
is Ujaval Gandhi.

00:00:20.540 --> 00:00:21.040
Hi, Ujaval.

00:00:21.040 --> 00:00:22.081
UJAVAL GANDHI: Hi, Dylan.

00:00:22.081 --> 00:00:23.260
Thanks for having me here.

00:00:23.260 --> 00:00:24.551
DYLAN THOMAS: Yeah, no problem.

00:00:24.551 --> 00:00:28.210
And Ujaval is going to be
talking about a new Open Source

00:00:28.210 --> 00:00:32.119
connector that he's written for
the QGIS Desktop GIS product.

00:00:32.119 --> 00:00:36.010
And it lets you work
with GoogleMaps engine

00:00:36.010 --> 00:00:38.490
platform quite seamlessly.

00:00:38.490 --> 00:00:41.480
So why don't you just
start maybe by telling us

00:00:41.480 --> 00:00:43.140
what the reasoning
or the impetus

00:00:43.140 --> 00:00:44.687
was for you to work
on this tool bar?

00:00:44.687 --> 00:00:45.520
UJAVAL GANDHI: Sure.

00:00:45.520 --> 00:00:49.140
So the Maps engine
connector for QGIS, it's

00:00:49.140 --> 00:00:53.100
a Python plug-in that lets
you access your Maps engine

00:00:53.100 --> 00:00:56.110
data within the QGIS
desktop environment.

00:00:56.110 --> 00:00:59.340
So a lot of times, when you are
working in desktop environment,

00:00:59.340 --> 00:01:01.320
you want access to your
Maps engine layers.

00:01:01.320 --> 00:01:04.030
And this plug-in allows you
to securely bring those layers

00:01:04.030 --> 00:01:05.281
in to QGIS.

00:01:05.281 --> 00:01:07.572
DYLAN THOMAS: So [INAUDIBLE]
is a pretty important part

00:01:07.572 --> 00:01:09.240
of what you just
said there, right?

00:01:09.240 --> 00:01:10.690
UJAVAL GANDHI: Yes.

00:01:10.690 --> 00:01:15.100
And it also simplifies your
workflow, that a lot of times

00:01:15.100 --> 00:01:18.680
you are editing and preparing
your data in a desktop GIS,

00:01:18.680 --> 00:01:21.995
and to upload to
Maps, NGOs often

00:01:21.995 --> 00:01:24.370
need to hunt around for the
source files on your desktop.

00:01:24.370 --> 00:01:27.290
So this allows you to work
within your environment

00:01:27.290 --> 00:01:30.980
and press a button to upload the
data directly to Maps engine.

00:01:30.980 --> 00:01:32.730
DYLAN THOMAS: So it's
not just viewing it,

00:01:32.730 --> 00:01:34.354
which is, of course,
one of the things.

00:01:34.354 --> 00:01:37.090
But it's fitting into an
existing workflow for a GIS

00:01:37.090 --> 00:01:39.410
analyst, for example, sort
of managing their data

00:01:39.410 --> 00:01:41.490
and then push it to the cloud.

00:01:41.490 --> 00:01:42.670
UJAVAL GANDHI: Yes.

00:01:42.670 --> 00:01:45.470
And a side benefit
of this plug-in

00:01:45.470 --> 00:01:48.550
is that since it runs
within the QGIS environment,

00:01:48.550 --> 00:01:52.040
it can access all the data
types that QGIS can read.

00:01:52.040 --> 00:01:56.890
So a lot of enterprise users
use databases, like post GIS,

00:01:56.890 --> 00:01:58.220
to manage the data.

00:01:58.220 --> 00:02:02.980
And you could now upload
your post GIS layers

00:02:02.980 --> 00:02:04.772
direct to Maps engine
through this plug-in.

00:02:04.772 --> 00:02:06.105
DYLAN THOMAS: That's pretty key.

00:02:06.105 --> 00:02:07.760
So got a lot of times
in documentation

00:02:07.760 --> 00:02:11.310
and quick how-to's you see,
grab a shape file, upload it,

00:02:11.310 --> 00:02:13.020
and that's how you do it.

00:02:13.020 --> 00:02:15.090
And certainly, that's
a good way of doing it,

00:02:15.090 --> 00:02:19.360
but this is much more in line
with a process and a workflow,

00:02:19.360 --> 00:02:22.070
extracting data from
your internal database

00:02:22.070 --> 00:02:23.611
and pushing it out to the cloud.

00:02:23.611 --> 00:02:24.910
UJAVAL GANDHI: Yes, absolutely.

00:02:24.910 --> 00:02:27.530
And since the code
is Open Source,

00:02:27.530 --> 00:02:29.560
it's a great
reference for anybody

00:02:29.560 --> 00:02:32.380
who's looking to
develop using Python.

00:02:32.380 --> 00:02:35.430
You can pretty much
drop in the current code

00:02:35.430 --> 00:02:37.570
to your application and
start building from there.

00:02:37.570 --> 00:02:39.030
So it gives you
a good head start

00:02:39.030 --> 00:02:40.484
when you are building in Python.

00:02:40.484 --> 00:02:41.400
DYLAN THOMAS: Perfect.

00:02:41.400 --> 00:02:41.900
Great.

00:02:41.900 --> 00:02:45.170
So even beyond QGIS, it's
just kind of a nice reference

00:02:45.170 --> 00:02:46.309
implementation, basically.

00:02:46.309 --> 00:02:47.100
UJAVAL GANDHI: Yes.

00:02:47.100 --> 00:02:48.683
DYLAN THOMAS: So
thanks for the intro.

00:02:48.683 --> 00:02:50.960
That's good to
frames what you're

00:02:50.960 --> 00:02:54.350
going to do next, which I think
it demonstrate the connector.

00:02:54.350 --> 00:02:55.430
UJAVAL GANDHI: Sure.

00:02:55.430 --> 00:03:01.070
So as you can see, I'm in
my QGIS desktop environment.

00:03:01.070 --> 00:03:03.180
I've already
installed the plug-in.

00:03:03.180 --> 00:03:05.734
This shows up as a tool bar.

00:03:05.734 --> 00:03:07.650
The plug-in is already
labeled within the QGIS

00:03:07.650 --> 00:03:08.470
plug-in depository.

00:03:08.470 --> 00:03:10.600
So it's a one-click install.

00:03:10.600 --> 00:03:15.220
And you'll get updates
directly into QGIS.

00:03:15.220 --> 00:03:19.380
So the first thing
to do is to log in.

00:03:19.380 --> 00:03:29.670
So let me just-- Now
this uses OAuth2 flow

00:03:29.670 --> 00:03:32.210
to authenticate my credentials.

00:03:32.210 --> 00:03:34.880
And once the log-in
is successful,

00:03:34.880 --> 00:03:37.990
I get an authentication
token back from the server.

00:03:37.990 --> 00:03:41.300
And this is the access token
that is used by the API

00:03:41.300 --> 00:03:44.922
to get your private data
from Maps in a secure way.

00:03:44.922 --> 00:03:47.130
DYLAN THOMAS: Key point
there, you mentioned the API.

00:03:47.130 --> 00:03:49.725
So this is actually not just
a reference implementation

00:03:49.725 --> 00:03:53.040
for QGIS plug-in and Python, but
this is a really great example

00:03:53.040 --> 00:03:56.780
of how to use our
Maps engine API.

00:03:56.780 --> 00:04:01.860
And so during the
authentication flow there,

00:04:01.860 --> 00:04:04.410
you presumably want to make
sure you're in the right access

00:04:04.410 --> 00:04:05.475
control group, as well.

00:04:05.475 --> 00:04:07.350
So to set that up on
the server beforehand so

00:04:07.350 --> 00:04:08.980
that you can do this.

00:04:08.980 --> 00:04:11.120
UJAVAL GANDHI: Yes.

00:04:11.120 --> 00:04:14.260
So once you are
successfully logged in,

00:04:14.260 --> 00:04:16.579
you can see that the
Search tool is enabled now.

00:04:16.579 --> 00:04:20.570
And you can search for the
maps that you have access to.

00:04:20.570 --> 00:04:23.030
You can look at different
accounts, as well as

00:04:23.030 --> 00:04:24.230
the different maps you have.

00:04:24.230 --> 00:04:29.630
So let's load up this map
from Natural Earth here.

00:04:29.630 --> 00:04:33.000
Now what this does, it doesn't
actually load the map data,

00:04:33.000 --> 00:04:35.420
but it fetches a
bounding box layer

00:04:35.420 --> 00:04:40.370
from using the API that
shows what layers you have

00:04:40.370 --> 00:04:42.420
in your map and
what other extants.

00:04:42.420 --> 00:04:44.550
And it loads it up here.

00:04:44.550 --> 00:04:46.650
Once you have this
layer loaded, you

00:04:46.650 --> 00:04:49.030
can see the View tools
are all enabled now.

00:04:49.030 --> 00:04:54.360
And you can use the WMS tool
to get your data, via WMS,

00:04:54.360 --> 00:04:55.850
into your desktop.

00:04:55.850 --> 00:04:58.780
So let's just do that.

00:04:58.780 --> 00:05:00.539
And this shows the
couple of layers

00:05:00.539 --> 00:05:01.830
that are contained in this map.

00:05:01.830 --> 00:05:06.350
You can save the formats and
the projection and click Add.

00:05:06.350 --> 00:05:10.020
And this is fetching the
data from Google Maps

00:05:10.020 --> 00:05:12.100
engine as a WMS layer.

00:05:12.100 --> 00:05:16.190
And you can see, you
can interact it now

00:05:16.190 --> 00:05:18.494
just like it was another
[INAUDIBLE] layer.

00:05:18.494 --> 00:05:19.410
DYLAN THOMAS: Perfect.

00:05:19.410 --> 00:05:20.410
Now that's a nice touch.

00:05:20.410 --> 00:05:23.200
I like how you did the sort
of getting the metadata first,

00:05:23.200 --> 00:05:26.012
so that you're not just sucking
up API usage browsing around,

00:05:26.012 --> 00:05:28.220
trying to figure out where
the data is that you want.

00:05:28.220 --> 00:05:29.146
UJAVAL GANDHI: Yes.

00:05:29.146 --> 00:05:34.060
So another thing I can quickly
show is data uploading.

00:05:34.060 --> 00:05:37.860
So I've already
loaded a layer here.

00:05:37.860 --> 00:05:44.160
This is an SQLite layer,
a special light layer,

00:05:44.160 --> 00:05:45.840
which is going to [INAUDIBLE].

00:05:45.840 --> 00:05:49.390
And now you are able to
upload this data format

00:05:49.390 --> 00:05:51.520
into Maps Engine through QGIS.

00:05:51.520 --> 00:05:54.910
So if you select any of
the supported layer types,

00:05:54.910 --> 00:05:57.100
the intellect tool
becomes active.

00:05:57.100 --> 00:05:59.260
You can just click
on the upload button

00:05:59.260 --> 00:06:03.110
and see that there's a source.

00:06:03.110 --> 00:06:05.580
You can see the
SQLite source here.

00:06:05.580 --> 00:06:09.520
And you can rename the
layer, if you wanted to,

00:06:09.520 --> 00:06:18.710
add a description, and
put the access list

00:06:18.710 --> 00:06:20.690
to which this data
would be accessible.

00:06:20.690 --> 00:06:23.560
In this case, I'm
going to make it

00:06:23.560 --> 00:06:25.940
accessible to the
connected editors.

00:06:25.940 --> 00:06:27.500
You can add a tag,
if you wanted to.

00:06:27.500 --> 00:06:29.640
And just click OK.

00:06:29.640 --> 00:06:31.720
So what it's doing
right now is it's

00:06:31.720 --> 00:06:34.880
extracting the data
from the SQLite database

00:06:34.880 --> 00:06:37.135
and uploading the
data as a shape file.

00:06:37.135 --> 00:06:38.050
DYLAN THOMAS: Got it.

00:06:38.050 --> 00:06:38.550
OK.

00:06:38.550 --> 00:06:40.276
So you are actually
doing the shape file

00:06:40.276 --> 00:06:41.090
thing in the background.

00:06:41.090 --> 00:06:41.930
UJAVAL GANDHI: Yes.

00:06:41.930 --> 00:06:42.440
All right.

00:06:42.440 --> 00:06:45.630
So the data is now
uploaded to Maps Engine.

00:06:45.630 --> 00:06:49.620
And as you can see here, it's
uploaded as a shape file.

00:06:49.620 --> 00:06:52.359
And you can see your vector
data source in Maps Engine.

00:06:52.359 --> 00:06:54.650
DYLAN THOMAS: That's a really
nice round trip, I guess.

00:06:54.650 --> 00:06:56.960
Then you can sort of
view the same thing back

00:06:56.960 --> 00:07:01.010
in the connector or
any other client.

00:07:01.010 --> 00:07:01.570
That's great.

00:07:01.570 --> 00:07:03.610
So the other thing I
want to touch on briefly

00:07:03.610 --> 00:07:04.990
is the source code.

00:07:04.990 --> 00:07:06.960
That's the other
interesting aspect of this.

00:07:06.960 --> 00:07:08.310
Is that something you
could show us now?

00:07:08.310 --> 00:07:09.500
This is on GitHub, right?

00:07:09.500 --> 00:07:10.410
UJAVAL GANDHI: Yes.

00:07:10.410 --> 00:07:17.880
So the code lives at
GitHub.com/GoogleMaps.

00:07:17.880 --> 00:07:20.930
DYLAN THOMAS: And we'll include
a URL to this in the video,

00:07:20.930 --> 00:07:23.595
so that you can go
visit this yourself.

00:07:23.595 --> 00:07:24.970
UJAVAL GANDHI: So
as you can see,

00:07:24.970 --> 00:07:27.250
this is the code repository.

00:07:27.250 --> 00:07:30.130
It's got a nice Read Me
file at the top, which

00:07:30.130 --> 00:07:36.725
explains what the different
tools do and how some of the--

00:07:36.725 --> 00:07:39.672
DYLAN THOMAS: --the tools work.

00:07:39.672 --> 00:07:41.630
Most important thing for
an Open Source project

00:07:41.630 --> 00:07:44.830
is a good Read Me file, right?

00:07:44.830 --> 00:07:48.150
And I was going to ask whether
you're accepting contributions.

00:07:48.150 --> 00:07:51.299
Then I see, we talked earlier
about, you've already got one.

00:07:51.299 --> 00:07:52.090
UJAVAL GANDHI: Yes.

00:07:52.090 --> 00:07:55.240
So there is when we already
merged a pull request

00:07:55.240 --> 00:07:57.090
from a QGIS developer.

00:07:57.090 --> 00:07:59.401
And we're looking for
more contributions.

00:07:59.401 --> 00:08:00.400
DYLAN THOMAS: Excellent.

00:08:00.400 --> 00:08:01.500
So the future is bright.

00:08:01.500 --> 00:08:04.220
I'm sure you wrote amazing
code, but there's always

00:08:04.220 --> 00:08:05.970
room for additions
or improvements.

00:08:05.970 --> 00:08:07.053
UJAVAL GANDHI: Definitely.

00:08:07.053 --> 00:08:10.600
And if anybody finds a bug
or has a feature request,

00:08:10.600 --> 00:08:13.090
we'll be happy to look
into those, as well.

00:08:13.090 --> 00:08:14.090
DYLAN THOMAS: Perfect.

00:08:14.090 --> 00:08:15.720
One final question
I wanted to ask you

00:08:15.720 --> 00:08:18.280
is just revisit that
topic of the API.

00:08:18.280 --> 00:08:21.670
So it does use the
Maps Engine API.

00:08:21.670 --> 00:08:23.840
So how would you
suggest people use

00:08:23.840 --> 00:08:25.550
this in a production
environment?

00:08:25.550 --> 00:08:28.470
Would they, for example,
want to upload something

00:08:28.470 --> 00:08:30.625
that has two million
features in it?

00:08:30.625 --> 00:08:32.820
Or would you want
to do a little edit

00:08:32.820 --> 00:08:36.640
on one feature
using the connector.

00:08:36.640 --> 00:08:38.409
This sort of API
consumption is kind

00:08:38.409 --> 00:08:39.760
of the whole-- that's
how it works, right?

00:08:39.760 --> 00:08:41.010
So you want to keep
an eye on that.

00:08:41.010 --> 00:08:41.801
UJAVAL GANDHI: Yes.

00:08:41.801 --> 00:08:47.340
So this uses, when the
connector is first loaded,

00:08:47.340 --> 00:08:49.620
it would prompt you to enter
your client ID and client

00:08:49.620 --> 00:08:52.140
secret, which you get
from your API console.

00:08:52.140 --> 00:08:55.820
So this will use up the
API coder from that.

00:08:55.820 --> 00:08:57.902
So you need to keep
an eye on that.

00:08:57.902 --> 00:08:58.610
DYLAN THOMAS: OK.

00:08:58.610 --> 00:09:00.818
But then, I think the thing
you were showing, though,

00:09:00.818 --> 00:09:03.527
is also it uses basically
file upload, ultimately.

00:09:03.527 --> 00:09:04.360
That's what I think.

00:09:04.360 --> 00:09:06.110
So if you wanted to--
it's not like you're

00:09:06.110 --> 00:09:10.020
editing a million
feature polygon,

00:09:10.020 --> 00:09:11.740
for example, in the connector.

00:09:11.740 --> 00:09:13.599
You're doing a bulk upload.

00:09:13.599 --> 00:09:14.390
UJAVAL GANDHI: Yes.

00:09:14.390 --> 00:09:17.162
So it just, every time it
uploads the entire file.

00:09:17.162 --> 00:09:17.870
DYLAN THOMAS: OK.

00:09:17.870 --> 00:09:18.877
Great.

00:09:18.877 --> 00:09:20.710
That's really good to
know for the workflow.

00:09:20.710 --> 00:09:23.410
And it's good to know
for API consumption.

00:09:23.410 --> 00:09:24.090
So, great.

00:09:24.090 --> 00:09:26.760
Ujaval, thank you so much for
coming and showing this today.

00:09:26.760 --> 00:09:29.120
I'm really glad you
wrote the connector.

00:09:29.120 --> 00:09:31.450
And hopefully, we get
some great contributions

00:09:31.450 --> 00:09:33.984
from our Open Source users.

00:09:33.984 --> 00:09:34.900
UJAVAL GANDHI: Thanks.

00:09:34.900 --> 00:09:36.007
It was nice being here.

00:09:36.007 --> 00:09:38.090
DYLAN THOMAS: And that's
if for What In The World.

00:09:38.090 --> 00:09:40.280
We'll see you next time.

