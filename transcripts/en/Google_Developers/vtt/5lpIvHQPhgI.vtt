WEBVTT
Kind: captions
Language: en

00:00:00.908 --> 00:00:03.180
KEN HOETMER: Let's
get started.

00:00:03.180 --> 00:00:05.560
So my name is Ken, and
this is Brett.

00:00:05.560 --> 00:00:08.880
And what we want to do is to
spend a little time with you

00:00:08.880 --> 00:00:13.290
to talk about "Our Maps Your
Business-- a Guide for Using

00:00:13.290 --> 00:00:15.250
Our Enterprise Products."

00:00:15.250 --> 00:00:17.640
We're part of the--

00:00:17.640 --> 00:00:18.770
well, at least I am--

00:00:18.770 --> 00:00:21.250
part of a group of Google called
Maps for Business.

00:00:21.250 --> 00:00:23.350
And in Maps for Business, we do
a number of things beyond

00:00:23.350 --> 00:00:27.640
building out the Google Maps
APIs that you would most

00:00:27.640 --> 00:00:29.020
likely be familiar with.

00:00:29.020 --> 00:00:32.140
We also offer premium licenses
for those APIs.

00:00:32.140 --> 00:00:37.000
So for instance, if you need
SLA or premium support, you

00:00:37.000 --> 00:00:40.340
can buy that from us, as well
as we offer licenses for a

00:00:40.340 --> 00:00:43.280
number of the use cases that
are currently prohibited by

00:00:43.280 --> 00:00:45.540
the terms of use, such as asset
tracking or charging for

00:00:45.540 --> 00:00:46.340
your application.

00:00:46.340 --> 00:00:49.420
So we have a number of customers
who have these kinds

00:00:49.420 --> 00:00:51.150
of Maps for Business,
or enterprise

00:00:51.150 --> 00:00:51.990
agreements, with us.

00:00:51.990 --> 00:00:54.210
And actually, a couple of the
ones in the Sandbox--

00:00:54.210 --> 00:00:55.460
Nintendo and Mercedes--

00:00:55.460 --> 00:00:57.240
are these kinds of customers.

00:00:57.240 --> 00:01:01.830
We also offer products like
Earth Enterprise and Maps

00:01:01.830 --> 00:01:03.570
Engine Portal, which Sean
just talked about

00:01:03.570 --> 00:01:04.769
in the earlier session.

00:01:04.769 --> 00:01:07.420
And then we also offer a number
of products that are

00:01:07.420 --> 00:01:10.190
focused on managing
geographic data.

00:01:10.190 --> 00:01:11.880
And those are the products that
we're going to talk about

00:01:11.880 --> 00:01:13.220
in this session now.

00:01:13.220 --> 00:01:16.310
So just in case you've fallen
asleep because you're

00:01:16.310 --> 00:01:19.230
attending a talk about
enterprise, I thought I would

00:01:19.230 --> 00:01:21.410
talk about a couple things why
this actually might be

00:01:21.410 --> 00:01:23.830
relevant to you, and
why enterprise

00:01:23.830 --> 00:01:25.870
doesn't need to be boring.

00:01:25.870 --> 00:01:27.970
And the first assertion that
I'm going to make is that a

00:01:27.970 --> 00:01:29.260
start-up is an enterprise.

00:01:29.260 --> 00:01:32.870
And the enterprise term gets
bandied around as being, I

00:01:32.870 --> 00:01:36.160
think, often associated with
big established companies.

00:01:36.160 --> 00:01:38.640
But a small company that isn't
established yet is just an

00:01:38.640 --> 00:01:41.640
enterprise that hasn't reached
its hockey-stick moment.

00:01:41.640 --> 00:01:43.540
And the second is that--

00:01:43.540 --> 00:01:45.740
especially true, I think,
if you're here at this

00:01:45.740 --> 00:01:46.860
conference--

00:01:46.860 --> 00:01:50.480
is that your enterprise has
location data of some form.

00:01:50.480 --> 00:01:54.190
Bricks-and-mortar companies
have databases of customer

00:01:54.190 --> 00:01:57.020
addresses, which using a
geocoder, you can turn into

00:01:57.020 --> 00:01:58.090
location data.

00:01:58.090 --> 00:02:00.650
But if you're here at this
conference-- at a tech

00:02:00.650 --> 00:02:02.400
conference, and you're a
technology company--

00:02:02.400 --> 00:02:04.040
you're working on mobile
in some fashion.

00:02:04.040 --> 00:02:06.340
You've seen that's been one of
the major themes of this

00:02:06.340 --> 00:02:07.720
conference.

00:02:07.720 --> 00:02:10.889
And nothing else, based on the
attendance at the Android

00:02:10.889 --> 00:02:13.090
sessions with lineups
outside the door.

00:02:13.090 --> 00:02:16.760
And this location data in a
mobile world tends to come

00:02:16.760 --> 00:02:18.490
from the mobile devices that
are distributed around,

00:02:18.490 --> 00:02:19.810
whether your application
is on it, or your

00:02:19.810 --> 00:02:21.410
workers are using them.

00:02:21.410 --> 00:02:24.250
They're generating information
about the location of things

00:02:24.250 --> 00:02:25.260
at a very rapid rate.

00:02:25.260 --> 00:02:28.260
And that's a different kind
of data than we're used to

00:02:28.260 --> 00:02:30.860
managing in terms of location.

00:02:30.860 --> 00:02:35.170
And then the last point, which
should be obvious, but the

00:02:35.170 --> 00:02:36.730
Maps API doesn't manage data.

00:02:36.730 --> 00:02:40.570
The Maps API is on a million
different websites, and all of

00:02:40.570 --> 00:02:43.180
those different websites, for
the most part, are managing

00:02:43.180 --> 00:02:44.710
their own data in
some fashion.

00:02:44.710 --> 00:02:47.540
If you're dealing with databases
of addresses, which

00:02:47.540 --> 00:02:52.200
was the original Maps API
mash-up kind of data, that can

00:02:52.200 --> 00:02:54.320
often be stored in
an SQL database.

00:02:54.320 --> 00:02:56.415
And you use a bounding box query
to populate your map.

00:02:56.415 --> 00:02:59.350
And you naively would
get a map like this.

00:02:59.350 --> 00:03:01.920
But when you move into a more
mobile world, you get a

00:03:01.920 --> 00:03:04.040
different kind of data that's
much more complicated and

00:03:04.040 --> 00:03:05.660
comes in at much
higher volume.

00:03:05.660 --> 00:03:10.110
And so you need to have a
solution for that data.

00:03:10.110 --> 00:03:13.260
So what we're going to talk
about are three different

00:03:13.260 --> 00:03:15.230
enterprise products that we
offer as part of the Maps for

00:03:15.230 --> 00:03:16.860
Business group at Google.

00:03:16.860 --> 00:03:19.450
And the first is Google
Maps Coordinate.

00:03:19.450 --> 00:03:22.990
And Google Maps Coordinate is a
product released last year,

00:03:22.990 --> 00:03:25.860
which is an out-of-the-box
application.

00:03:25.860 --> 00:03:28.940
This is not actually an
API product, per se.

00:03:28.940 --> 00:03:33.200
This is a ready-to-use product
that involves mobile apps for

00:03:33.200 --> 00:03:35.520
Android and iOS, as well
as a dispatcher

00:03:35.520 --> 00:03:38.300
dashboard for the web.

00:03:38.300 --> 00:03:40.900
And what it allows you to
do is mobile workforce

00:03:40.900 --> 00:03:41.600
management.

00:03:41.600 --> 00:03:44.590
So you can dispatch jobs to
people who are out on the

00:03:44.590 --> 00:03:46.540
field using the app.

00:03:46.540 --> 00:03:50.770
And they can check into jobs
and then send you back

00:03:50.770 --> 00:03:53.730
information from the field.

00:03:53.730 --> 00:03:56.640
This is live and used by a
number of customers around the

00:03:56.640 --> 00:04:01.330
world, one of which is the San
Francisco 49ers, here in the

00:04:01.330 --> 00:04:06.550
Bay Area, whose security team
and the team that manages all

00:04:06.550 --> 00:04:10.850
of the logistics on the road
actually use this to work out

00:04:10.850 --> 00:04:12.550
picking up players from
hotels, and picking up

00:04:12.550 --> 00:04:14.030
equipment, and that sort
of thing to coordinate

00:04:14.030 --> 00:04:15.020
themselves.

00:04:15.020 --> 00:04:16.490
That's why it's called
Coordinate.

00:04:16.490 --> 00:04:19.200
The second product we'll talk
about is called the Google

00:04:19.200 --> 00:04:20.829
Maps Tracks API.

00:04:20.829 --> 00:04:23.830
And this has been mentioned in
a couple other sessions, but

00:04:23.830 --> 00:04:27.460
the tracks API is a
data-oriented API product that

00:04:27.460 --> 00:04:32.470
is about storing, analyzing,
and visualizing assets.

00:04:32.470 --> 00:04:35.970
It uses Google Cloud to store
that information.

00:04:35.970 --> 00:04:38.430
These assets could be anything
from trucks,

00:04:38.430 --> 00:04:40.860
to people, to whales.

00:04:40.860 --> 00:04:43.650
Whatever you can put a GPS
device on, you could use the

00:04:43.650 --> 00:04:45.890
Google Maps Tracks API.

00:04:45.890 --> 00:04:48.200
And then lastly, we'll talk a
bit about the Google Maps

00:04:48.200 --> 00:04:53.120
Engine platform, which is our
more all-purpose Cloud GIS.

00:04:53.120 --> 00:04:55.780
It leverages the power of
Google's Cloud to store your

00:04:55.780 --> 00:04:58.490
spatial data and provides a
number of different services

00:04:58.490 --> 00:05:01.320
around that, as well as an API,
which we actually just

00:05:01.320 --> 00:05:04.150
launched last week and haven't
been talking about a lot

00:05:04.150 --> 00:05:07.670
publicly, but we'll talk
a bit about here in

00:05:07.670 --> 00:05:09.040
this session today.

00:05:09.040 --> 00:05:12.100
And by the way, just to
reiterate, we're giving away

00:05:12.100 --> 00:05:16.230
free trial accounts to Google
Maps Engine Platform at this

00:05:16.230 --> 00:05:16.635
conference.

00:05:16.635 --> 00:05:19.650
So if you just head over to the
Sandbox, there are people

00:05:19.650 --> 00:05:23.035
there who can sign you up and
get you started right away for

00:05:23.035 --> 00:05:25.980
a trial account for Maps
Engine Platform.

00:05:25.980 --> 00:05:29.140
Great, so what we're
going to do--

00:05:29.140 --> 00:05:31.430
and to walk you through
these products that

00:05:31.430 --> 00:05:32.280
we're going to discuss--

00:05:32.280 --> 00:05:35.730
is we're going to walk you
through different stages of a

00:05:35.730 --> 00:05:40.450
fictional start-up of Brett
and I's called CatWalkr.

00:05:40.450 --> 00:05:42.560
So Brett and I spend a
lot of time online

00:05:42.560 --> 00:05:43.300
being Google employees.

00:05:43.300 --> 00:05:46.680
And of course, that means we
watch a lot of videos of cats.

00:05:46.680 --> 00:05:50.460
So we figured we'll have a
start-up about walking cats.

00:05:50.460 --> 00:05:52.360
And we got started on this
a couple months ago.

00:05:52.360 --> 00:05:55.070
And we realized very quickly
that it had a core problem,

00:05:55.070 --> 00:05:58.450
and that's that cats sleep.

00:05:58.450 --> 00:06:00.260
They don't walk.

00:06:00.260 --> 00:06:03.750
So we pivoted, like all
successful start-ups before

00:06:03.750 --> 00:06:07.480
us, and now our company
is called DawgWalkr.

00:06:07.480 --> 00:06:09.400
And we've done a little more
research on DawgWalkr.

00:06:09.400 --> 00:06:12.210
We've worked out there are 500
million dogs on the planet,

00:06:12.210 --> 00:06:14.070
and dogs do like to walk.

00:06:14.070 --> 00:06:18.330
So we reckon this one is going
to be massively successful.

00:06:18.330 --> 00:06:22.660
So the first thing we want to do
to digitize the dog-walking

00:06:22.660 --> 00:06:26.565
space is we're going to go out
and hire 10 dog walkers.

00:06:26.565 --> 00:06:29.210
We're going to hire them on a
contract basis, and we're

00:06:29.210 --> 00:06:32.800
going to put up a simple web
form where people can fill in

00:06:32.800 --> 00:06:37.080
their details about their dog
and when they want it walked.

00:06:37.080 --> 00:06:40.830
And that web form is going to
use a Google Maps Coordinate

00:06:40.830 --> 00:06:44.390
API to create jobs in
the dispatch screen.

00:06:44.390 --> 00:06:46.990
And then we're going to use
the Coordinate mobile

00:06:46.990 --> 00:06:50.800
applications that our 10
dog-walkers will use to

00:06:50.800 --> 00:06:54.480
actually manage the jobs and
take these dogs for a walk.

00:06:54.480 --> 00:06:57.360
At this point, I'm going to flip
it over to Brett, who's

00:06:57.360 --> 00:07:00.685
going to show you a demo.

00:07:00.685 --> 00:07:03.110
BRETT MORGAN: Thank you, Ken.

00:07:03.110 --> 00:07:08.190
So due to the nature of Wi-Fi
here at Moscone, I'm going to

00:07:08.190 --> 00:07:10.120
be showing you a video
version of this demo.

00:07:10.120 --> 00:07:11.750
This demo does actually work.

00:07:11.750 --> 00:07:14.180
I'm quite happy to show it to
you if you come over to the

00:07:14.180 --> 00:07:15.950
Sandbox afterwards.

00:07:15.950 --> 00:07:19.080
So just to set this up, it's
a series of videos.

00:07:19.080 --> 00:07:22.720
The first one is basically going
to show you that there's

00:07:22.720 --> 00:07:27.900
nothing in the Coordinate admin
interface, so there's no

00:07:27.900 --> 00:07:29.120
jobs waiting.

00:07:29.120 --> 00:07:33.180
We'll then go to a separate
tab, and I'll become Bob.

00:07:33.180 --> 00:07:36.550
Bob has a need to get his
dog Fluffy walked.

00:07:36.550 --> 00:07:39.600
He'll put in these details, and
then we'll come back and

00:07:39.600 --> 00:07:43.140
see the dispatch of that
job to a walker.

00:07:43.140 --> 00:07:43.590
So there we are.

00:07:43.590 --> 00:07:44.570
We have no jobs.

00:07:44.570 --> 00:07:48.060
I've got Bob putting his name,
his dog's name, and

00:07:48.060 --> 00:07:50.960
importantly, getting the address
of this wonderful

00:07:50.960 --> 00:07:53.540
location here at Moscone
autocompleted.

00:07:53.540 --> 00:07:56.900
And you can see the secondary
feedback on the right.

00:07:56.900 --> 00:07:57.870
He's got a phone number.

00:07:57.870 --> 00:08:01.110
The phone number also gets
handed off to the Coordinate

00:08:01.110 --> 00:08:04.140
mobile application to allow the
mobile worker to actually

00:08:04.140 --> 00:08:06.340
contact Bob directly.

00:08:06.340 --> 00:08:11.020
And of course, Fluffy
loves to run around.

00:08:11.020 --> 00:08:13.240
Now we go back to the
admin interface.

00:08:13.240 --> 00:08:14.665
The admin interface--

00:08:14.665 --> 00:08:17.480
you can see there's no jobs, and
suddenly there is a job.

00:08:17.480 --> 00:08:20.670
So the first thing the
dispatcher does is dispatch

00:08:20.670 --> 00:08:21.920
the job to a worker.

00:08:24.190 --> 00:08:26.720
Suddenly the mark on the
map has changed color.

00:08:26.720 --> 00:08:29.610
We've now got a job, and now
we're going to switch across

00:08:29.610 --> 00:08:33.789
to the mobile workers'
application.

00:08:33.789 --> 00:08:37.470
So this, in this case,
is a pretend iPhone.

00:08:37.470 --> 00:08:39.270
We're all mobile developers
these days.

00:08:39.270 --> 00:08:43.440
So here we've got--

00:08:43.440 --> 00:08:44.360
waiting for a job.

00:08:44.360 --> 00:08:45.390
Job comes in.

00:08:45.390 --> 00:08:46.280
You react to it.

00:08:46.280 --> 00:08:48.860
You actually look at the job,
figure out the details and go,

00:08:48.860 --> 00:08:51.220
yes, I will accept this job.

00:08:51.220 --> 00:08:53.730
And then you walk to the
location here at Moscone and

00:08:53.730 --> 00:08:55.220
go, I have the dog.

00:08:55.220 --> 00:08:56.150
I've accepted the job.

00:08:56.150 --> 00:09:02.400
I checked in, and then we're
back to the admin interface.

00:09:02.400 --> 00:09:05.720
What we can see here is the fact
that the mark was on the

00:09:05.720 --> 00:09:09.340
map, and it's about to change
color, notifying the dispatch

00:09:09.340 --> 00:09:13.000
center that the dog has
been picked up.

00:09:13.000 --> 00:09:14.250
It's a little quick, this one.

00:09:16.860 --> 00:09:20.810
So now that we've done that,
we've taken Fluffy for a walk

00:09:20.810 --> 00:09:23.020
around Moscone Center.

00:09:23.020 --> 00:09:26.800
And we're handing Fluffy
back to Bob.

00:09:26.800 --> 00:09:29.750
And so what we need to do on
the mobile interface is

00:09:29.750 --> 00:09:31.780
basically complete the job.

00:09:31.780 --> 00:09:35.240
This means that we've completed
the workflow.

00:09:35.240 --> 00:09:37.100
There's no more that needs
to be done here.

00:09:39.940 --> 00:09:43.770
And the team back at home base
get notified the job is

00:09:43.770 --> 00:09:45.480
complete, and there's no
more jobs waiting.

00:09:51.772 --> 00:09:52.740
So--

00:09:52.740 --> 00:09:53.224
that one.

00:09:53.224 --> 00:09:54.200
KEN HOETMER: Here you go.

00:09:54.200 --> 00:09:55.450
BRETT MORGAN: Thank you.

00:09:58.490 --> 00:10:00.500
So what do we actually
see there?

00:10:00.500 --> 00:10:04.260
We had a nice little web form
with a little bit of

00:10:04.260 --> 00:10:05.390
information.

00:10:05.390 --> 00:10:08.070
There were three integrations
with Google Maps.

00:10:08.070 --> 00:10:09.710
The first one was
our autocomplete

00:10:09.710 --> 00:10:11.340
API, which is important.

00:10:11.340 --> 00:10:13.970
It gets us coordinate
information.

00:10:13.970 --> 00:10:17.495
The second integration was the
map on the right-hand side

00:10:17.495 --> 00:10:19.710
that was showing the
user where we

00:10:19.710 --> 00:10:20.900
thought his address was.

00:10:20.900 --> 00:10:23.090
This is important for the user
to understand that we actually

00:10:23.090 --> 00:10:24.810
know what's going on.

00:10:24.810 --> 00:10:27.960
And thirdly, the one that the
user didn't see was the post

00:10:27.960 --> 00:10:31.570
back to Coordinate to actually
get the job in

00:10:31.570 --> 00:10:33.640
train, in the workflow.

00:10:33.640 --> 00:10:35.350
So looking at the
integration--

00:10:35.350 --> 00:10:38.150
because this is the one call
you need to make to us that

00:10:38.150 --> 00:10:41.480
makes it all work-- the first
two are parameters, our client

00:10:41.480 --> 00:10:43.250
ID API key.

00:10:43.250 --> 00:10:45.600
This is all to do with our
discovery-based APIs.

00:10:45.600 --> 00:10:48.380
If you've integrated with any
of Google's APIs in the last

00:10:48.380 --> 00:10:50.150
two years, you probably
know these and love

00:10:50.150 --> 00:10:51.500
these inside out.

00:10:51.500 --> 00:10:54.490
If you haven't, again, come and
hassle me in the Sandbox

00:10:54.490 --> 00:10:54.910
afterwards.

00:10:54.910 --> 00:10:57.070
I'll quite happily walk you
through getting through our

00:10:57.070 --> 00:11:00.890
Discovery API bootstrap, and
whichever client library you

00:11:00.890 --> 00:11:02.600
want to use, and all
that sort of thing.

00:11:02.600 --> 00:11:05.030
The next one is a Coordinate
team ID.

00:11:05.030 --> 00:11:07.900
This is the identifier so we
know which team to send the

00:11:07.900 --> 00:11:10.080
job to dispatch it.

00:11:10.080 --> 00:11:15.000
Our documentation walks through
where to find that.

00:11:15.000 --> 00:11:19.940
So you make a post back to our
servers at this address, and

00:11:19.940 --> 00:11:21.620
you pass us some information.

00:11:21.620 --> 00:11:24.140
The first important one
is the lat and long.

00:11:24.140 --> 00:11:27.200
This is why integrating with
something like autocomplete to

00:11:27.200 --> 00:11:29.580
get the correct lat and long
is very important, because

00:11:29.580 --> 00:11:31.030
that is the gold.

00:11:31.030 --> 00:11:33.380
We want change this.

00:11:33.380 --> 00:11:35.260
It's where your workers
will get sent by

00:11:35.260 --> 00:11:37.760
their mobile phone.

00:11:37.760 --> 00:11:41.510
The next chunk of information is
all the information around

00:11:41.510 --> 00:11:44.380
it to give the worker context.

00:11:44.380 --> 00:11:47.210
So the name of the guy he's
going to get the dog from, the

00:11:47.210 --> 00:11:52.000
action he's carrying out, the
phone number that Bob put in--

00:11:52.000 --> 00:11:54.370
all of this gets passed off to
Coordinate here and, thus,

00:11:54.370 --> 00:11:55.670
turns up on the mobile phone.

00:11:58.900 --> 00:12:00.710
And on to Stage 2.

00:12:00.710 --> 00:12:01.970
Thank you, Ken.

00:12:01.970 --> 00:12:03.390
KEN HOETMER: Perfect.

00:12:03.390 --> 00:12:06.480
So it's worth noting that Google
Maps Coordinate is

00:12:06.480 --> 00:12:09.120
already being used by a number
of people around the world

00:12:09.120 --> 00:12:11.490
outside of the San
Francisco 49ers.

00:12:11.490 --> 00:12:13.600
And we actually sell it
like Google Apps,

00:12:13.600 --> 00:12:15.050
on a per-user basis.

00:12:15.050 --> 00:12:17.090
So you don't need to be a
massive telco with thousands

00:12:17.090 --> 00:12:18.840
of workers in order to use it.

00:12:18.840 --> 00:12:22.230
You can use it with 10
people just handily.

00:12:22.230 --> 00:12:25.470
So let's move on to Stage 2
of our fictional company.

00:12:25.470 --> 00:12:29.450
And in Stage 2 we're going
to build a marketplace.

00:12:29.450 --> 00:12:32.530
So Stage 1 was all about us
running a little local

00:12:32.530 --> 00:12:35.650
business to walk dogs,
essentially.

00:12:35.650 --> 00:12:38.790
And the second is we actually
want to take this uber style

00:12:38.790 --> 00:12:41.920
and completely decentralize
and take it global.

00:12:41.920 --> 00:12:45.610
So what we want to do is build
one mobile application that

00:12:45.610 --> 00:12:50.050
walkers and dog-owners can use
to find each other and to

00:12:50.050 --> 00:12:52.700
organize dog walks.

00:12:52.700 --> 00:12:55.540
And the desires we have for this
mobile application is we

00:12:55.540 --> 00:12:59.060
want transparency between the
walkers and the dog-owners,

00:12:59.060 --> 00:13:01.600
and that means we want real-time
dog location.

00:13:01.600 --> 00:13:04.730
And we want to be able to
visualize the walks on a map

00:13:04.730 --> 00:13:06.426
as they're happening.

00:13:06.426 --> 00:13:09.700
And in order to do this, we're
going to need a data storage

00:13:09.700 --> 00:13:12.280
solution for the crumbs
that are coming

00:13:12.280 --> 00:13:13.530
from the mobile phones.

00:13:13.530 --> 00:13:16.270
And Google Maps Coordinate, at
this point, becomes less

00:13:16.270 --> 00:13:19.140
ideal, because we actually don't
want a dispatcher in the

00:13:19.140 --> 00:13:19.760
center of this.

00:13:19.760 --> 00:13:22.320
We want this to be decentralized
and working more

00:13:22.320 --> 00:13:25.780
on a peer-to-peer basis
between the users.

00:13:25.780 --> 00:13:27.730
So the product that we're going
to use is the Google

00:13:27.730 --> 00:13:28.860
Maps Tracks API.

00:13:28.860 --> 00:13:31.220
So we can gather crumbs
from the mobile

00:13:31.220 --> 00:13:33.660
phones as they're out.

00:13:33.660 --> 00:13:36.830
As the walkers are out walking
the dogs, we can push those up

00:13:36.830 --> 00:13:38.600
to the Google Maps Tracks API.

00:13:38.600 --> 00:13:43.370
And then on the dog-owner side,
we can actually send

00:13:43.370 --> 00:13:45.610
requests to the Tracks
API to pull down that

00:13:45.610 --> 00:13:47.230
information in real time.

00:13:47.230 --> 00:13:48.160
Do you understand that?

00:13:48.160 --> 00:13:49.690
So there's a hand-off of
the data up to the

00:13:49.690 --> 00:13:50.840
cloud and back down.

00:13:50.840 --> 00:13:54.980
And the Tracks API will handle
all of that for you at scale.

00:13:54.980 --> 00:13:57.910
So I'll flip it over now to
Brett, who's going to walk us

00:13:57.910 --> 00:14:00.000
through a demo of this piece.

00:14:03.140 --> 00:14:05.820
BRETT MORGAN: Aha, pressed
the right button again.

00:14:05.820 --> 00:14:10.000
So again, we're going to do
a couple of videos here.

00:14:10.000 --> 00:14:12.620
So we've got two applications.

00:14:12.620 --> 00:14:14.190
One of them is going to
be Android based.

00:14:14.190 --> 00:14:17.420
This one is the dog owner.

00:14:17.420 --> 00:14:19.940
And the other one is iOS based,
and that's going to the

00:14:19.940 --> 00:14:21.160
dog walker.

00:14:21.160 --> 00:14:26.040
So I'm effectively avoiding all
the chrome that you need

00:14:26.040 --> 00:14:28.220
to put on your app so that
people use it-- the good

00:14:28.220 --> 00:14:29.970
copyrighting, the wonderful
design--

00:14:29.970 --> 00:14:31.420
because I'm an engineer.

00:14:31.420 --> 00:14:34.510
I'm just focusing in on the core
aspect, which is getting

00:14:34.510 --> 00:14:38.580
the crumbs up to Tracks API and
querying them back down to

00:14:38.580 --> 00:14:42.960
effectively do near real-time
tracking of Fluffy.

00:14:42.960 --> 00:14:45.522
So kicking it off.

00:14:45.522 --> 00:14:49.900
What we have here is Bob playing
with a Android tablet

00:14:49.900 --> 00:14:52.460
trying to find the keys.

00:14:52.460 --> 00:14:55.800
We also see that we have a
different autocomplete, but it

00:14:55.800 --> 00:14:59.990
is Google Places API, to turn
around and make sure that the

00:14:59.990 --> 00:15:02.120
address and the location
is correct.

00:15:02.120 --> 00:15:05.730
Please turn around and use an
API like this that gives the

00:15:05.730 --> 00:15:08.660
use real-time feedback on
what they're typing in.

00:15:08.660 --> 00:15:09.960
Don't force them to
press a button to

00:15:09.960 --> 00:15:12.540
autocomplete an address.

00:15:12.540 --> 00:15:15.610
The next thing we see here
is Android Maps.

00:15:15.610 --> 00:15:19.940
It's a nice and shiny API, a
nice and shiny map look.

00:15:19.940 --> 00:15:25.380
And let's go across the iOS.

00:15:25.380 --> 00:15:27.090
So here we've got
the dog walker.

00:15:27.090 --> 00:15:30.415
The dog walker is waiting for
dogs, and he gets notified

00:15:30.415 --> 00:15:32.670
that there's a dog that needs
to be walked, clicks on the

00:15:32.670 --> 00:15:34.750
button, and now--

00:15:34.750 --> 00:15:36.600
well, I was actually going
to take you all down the

00:15:36.600 --> 00:15:39.510
escalator and around Moscone,
but I was figuring due to time

00:15:39.510 --> 00:15:42.110
constraints that maybe getting
you all afternoon exercise in

00:15:42.110 --> 00:15:43.990
the middle of our talk
wasn't the best idea.

00:15:43.990 --> 00:15:50.360
So we're just pretending to go
for a walk around Moscone.

00:15:50.360 --> 00:15:55.690
And if we were to bring up
Bob's machine at the same

00:15:55.690 --> 00:15:59.800
time, we would see a little
bit of lag due to the

00:15:59.800 --> 00:16:02.300
realities of light travel and
all that sort of thing.

00:16:02.300 --> 00:16:05.600
But Bob could see his dog--

00:16:05.600 --> 00:16:07.970
or more importantly,
his dog walker--

00:16:07.970 --> 00:16:08.760
out on the path.

00:16:08.760 --> 00:16:11.550
So he doesn't have to get
worried that the dog walker is

00:16:11.550 --> 00:16:14.420
just going down to the coffee
house and drinking three or

00:16:14.420 --> 00:16:18.170
four lattes before bringing
his dog back.

00:16:18.170 --> 00:16:28.010
So actually having a look at
the aforementioned crumbs--

00:16:28.010 --> 00:16:29.920
here's the actual information
that you

00:16:29.920 --> 00:16:31.680
push off to our servers.

00:16:31.680 --> 00:16:34.780
It's actually a fairly simple
piece of JSON, where you're

00:16:34.780 --> 00:16:37.370
basically telling us how
confident you are of the

00:16:37.370 --> 00:16:42.280
location, which you get from
your mobile device, if there

00:16:42.280 --> 00:16:46.340
are APIs in there to find that
out, a location where you are

00:16:46.340 --> 00:16:51.720
on the planet, and timestamp
is an epoch.

00:16:51.720 --> 00:16:54.840
You can also add other data that
you can then turn around

00:16:54.840 --> 00:16:56.370
and feed into our other APIs.

00:17:00.690 --> 00:17:01.100
KEN HOETMER: Great.

00:17:01.100 --> 00:17:06.530
So it's worth noting that the
Tracks API is an API that you

00:17:06.530 --> 00:17:10.089
can pick up and use for free for
a limited number of assets

00:17:10.089 --> 00:17:12.030
and a limited number
of tracks.

00:17:12.030 --> 00:17:14.890
So you don't have to wait or
contact our sales people.

00:17:14.890 --> 00:17:18.500
This is a product that has,
to a certain limited

00:17:18.500 --> 00:17:19.880
feature set, is free.

00:17:19.880 --> 00:17:22.670
And then if you want to build
something more involved that's

00:17:22.670 --> 00:17:24.770
going to involve a lot
more data, then it

00:17:24.770 --> 00:17:26.220
becomes a paid product.

00:17:26.220 --> 00:17:28.470
And it was an API that we
just launched last year.

00:17:28.470 --> 00:17:30.620
So go play with it.

00:17:30.620 --> 00:17:36.720
We want to move down to Stage
3, and Stage 3 is where we

00:17:36.720 --> 00:17:39.080
talk about the Google Maps
Engine Platform.

00:17:39.080 --> 00:17:43.380
So we're going to assume now
that our product is launched.

00:17:43.380 --> 00:17:45.410
Our mobile app is out there.

00:17:45.410 --> 00:17:48.700
And we have dogs and
walkers happening,

00:17:48.700 --> 00:17:50.490
but we want to grow.

00:17:50.490 --> 00:17:54.720
In order to do this, we want to
find a way to correlate dog

00:17:54.720 --> 00:17:59.010
parks in the area with
demographic data to try to

00:17:59.010 --> 00:18:03.080
find where we think there's a
hot spot that we might want to

00:18:03.080 --> 00:18:06.980
go out and do some walk around
and do some advertising.

00:18:06.980 --> 00:18:08.890
So what we want to use
for this is the

00:18:08.890 --> 00:18:10.390
Google Maps Engine Platform.

00:18:10.390 --> 00:18:13.540
The Google Maps Engine
is, as I mentioned

00:18:13.540 --> 00:18:14.970
earlier, a Cloud GIS.

00:18:14.970 --> 00:18:17.590
And it accepts data in a large
number of formats.

00:18:17.590 --> 00:18:21.670
Whether it's shapefile, or
GeoJSON, or whatever, you can

00:18:21.670 --> 00:18:23.190
upload it into Google
Maps Engine.

00:18:23.190 --> 00:18:25.800
You can create layers out of
that, and then you can overlay

00:18:25.800 --> 00:18:29.170
those layers on top of each
other in order to create an

00:18:29.170 --> 00:18:31.040
interesting visualization.

00:18:31.040 --> 00:18:33.060
So that's what we're going
to show you now.

00:18:33.060 --> 00:18:35.520
And we're actually going to flip
to a live demo this time.

00:18:35.520 --> 00:18:38.030
Because we're not using mobile
devices, and we can be wired

00:18:38.030 --> 00:18:39.130
into the network.

00:18:39.130 --> 00:18:44.350
And Brett's going to walk
you through this piece.

00:18:44.350 --> 00:18:44.850
BRETT MORGAN: OK.

00:18:44.850 --> 00:18:49.470
So a little bit of unusual
at this stage--

00:18:49.470 --> 00:18:52.690
we've actually got
a live web demo.

00:18:52.690 --> 00:18:54.170
Now our theory--

00:18:54.170 --> 00:18:55.130
KEN HOETMER: Hey,
are you using

00:18:55.130 --> 00:18:57.985
google.maps.visualRefresh
= true?

00:18:57.985 --> 00:18:59.120
BRETT MORGAN: I am.

00:18:59.120 --> 00:18:59.640
Look at this.

00:18:59.640 --> 00:19:00.295
It's all shiny.

00:19:00.295 --> 00:19:03.705
It's all new.

00:19:03.705 --> 00:19:04.620
KEN HOETMER: Sorry.

00:19:04.620 --> 00:19:06.518
Quick plug.

00:19:06.518 --> 00:19:07.890
BRETT MORGAN: So here's
San Francisco.

00:19:07.890 --> 00:19:10.300
I'm a Sydneysider, so I don't
know it that well.

00:19:10.300 --> 00:19:14.620
But diving into our data, we've
come up with a thesis.

00:19:14.620 --> 00:19:20.140
And our thesis is, well, we've
got a bunch of dog parks, and

00:19:20.140 --> 00:19:23.500
we're wondering, what does
San Francisco look like?

00:19:23.500 --> 00:19:26.180
So what's the best way
to understand a city?

00:19:26.180 --> 00:19:27.720
Well, that would
be census data.

00:19:27.720 --> 00:19:31.160
Has anyone here actually played
with census data?

00:19:31.160 --> 00:19:33.960
You'll quickly discover that it
comes in a shapefile with

00:19:33.960 --> 00:19:34.960
lots of stuff in it.

00:19:34.960 --> 00:19:37.410
And oh my God, trying to
understand what's in it, it's

00:19:37.410 --> 00:19:39.110
a bit of a pain.

00:19:39.110 --> 00:19:43.450
So what you really need is a
way to query that data and

00:19:43.450 --> 00:19:47.480
basically go, given a set of
attributes over a chunk of

00:19:47.480 --> 00:19:49.410
data, how do I look at it?

00:19:49.410 --> 00:19:51.170
So what we can do--

00:19:51.170 --> 00:19:54.730
and this is a completely custom
dashboard that I built

00:19:54.730 --> 00:19:56.250
on top of jME API.

00:19:56.250 --> 00:20:00.580
So it's basically firing SQL
LIKE where queries at our

00:20:00.580 --> 00:20:03.630
servers to actually figure
out what's going on.

00:20:03.630 --> 00:20:05.180
KEN HOETMER: And that's what
you've done-- before you move

00:20:05.180 --> 00:20:07.720
into the census bit-- that's
how you got the

00:20:07.720 --> 00:20:08.610
markers on the screen.

00:20:08.610 --> 00:20:10.590
So these are all the dog
parks in San Francisco.

00:20:10.590 --> 00:20:11.680
BRETT MORGAN: Yep, sorry.

00:20:11.680 --> 00:20:12.370
Thank you, Ken.

00:20:12.370 --> 00:20:14.190
KEN HOETMER: Yes, please explain
the dog parks to me.

00:20:14.190 --> 00:20:17.450
BRETT MORGAN: OK, the dog parks
are pulled from SF Rec

00:20:17.450 --> 00:20:21.350
Park, where we've got a list of
dog parks, constructed that

00:20:21.350 --> 00:20:24.850
as a KML file, and put that into
our servers so that we

00:20:24.850 --> 00:20:27.530
can then turn around and do
things like "dog parks near a

00:20:27.530 --> 00:20:30.370
point." At this point, I've just
pulled all the dog parks

00:20:30.370 --> 00:20:35.950
in San Francisco and put them on
the map using markers using

00:20:35.950 --> 00:20:37.960
a wonderful little thing
called GeoJSON.

00:20:37.960 --> 00:20:39.930
So it's really easy to walk
through in JavaScript.

00:20:44.380 --> 00:20:51.490
So diving into our data, we've
got a theory that there are

00:20:51.490 --> 00:20:56.440
parts of San Francisco that
have a whole lot of 30- to

00:20:56.440 --> 00:21:01.460
39-year-olds.

00:21:01.460 --> 00:21:05.130
And what just happened?

00:21:05.130 --> 00:21:08.850
Zooming out a bit so we can
actually see what's going on.

00:21:08.850 --> 00:21:11.260
Here we've got San Francisco.

00:21:11.260 --> 00:21:12.760
And suddenly level I've
overlayed on it the

00:21:12.760 --> 00:21:16.250
census-tracked blocks that have
a large concentration of

00:21:16.250 --> 00:21:19.390
30- to 39-year-olds.

00:21:19.390 --> 00:21:22.160
The interesting thing here is
that that was quick, it was

00:21:22.160 --> 00:21:25.400
painless, and I'm not actually
storing any data on my laptop

00:21:25.400 --> 00:21:27.270
to make this happen.

00:21:27.270 --> 00:21:30.810
I've fed the shapefile
into the GME.

00:21:30.810 --> 00:21:33.240
And now I'm firing queries
against it so that I can look

00:21:33.240 --> 00:21:36.690
at age, race, and whatever
else the census data

00:21:36.690 --> 00:21:37.950
tells me about it.

00:21:37.950 --> 00:21:39.590
KEN HOETMER: So you could just
change those numbers there,

00:21:39.590 --> 00:21:41.400
and it would fire off
another query.

00:21:41.400 --> 00:21:42.112
BRETT MORGAN: Certainly can.

00:21:42.112 --> 00:21:43.740
KEN HOETMER: And you'd get
different data back.

00:21:43.740 --> 00:21:44.010
So--

00:21:44.010 --> 00:21:44.660
BRETT MORGAN: So if you're--

00:21:44.660 --> 00:21:45.700
KEN HOETMER: --You're
not kidding me.

00:21:45.700 --> 00:21:51.400
BRETT MORGAN: --Looking for 20-
to 20-year-olds, then we

00:21:51.400 --> 00:21:55.091
get a different view
of San Francisco.

00:21:55.091 --> 00:21:55.540
KEN HOETMER: Great.

00:21:55.540 --> 00:21:58.620
So based on this data, where
would you recommend I go out

00:21:58.620 --> 00:22:01.090
on Saturday and hand
out flyers?

00:22:01.090 --> 00:22:03.530
BRETT MORGAN: I'm thinking
there's this little cluster of

00:22:03.530 --> 00:22:06.420
parks here with a whole bunch
of middle-aged people.

00:22:06.420 --> 00:22:08.460
I'm thinking they're probably
wrapped up doing start-ups.

00:22:08.460 --> 00:22:10.220
UPS I think that's where
we should go.

00:22:10.220 --> 00:22:10.590
KEN HOETMER: All right.

00:22:10.590 --> 00:22:14.000
So 30- to 39-year-olds living
near dog parks-- seems to be a

00:22:14.000 --> 00:22:16.080
cluster in that area.

00:22:16.080 --> 00:22:19.360
They're probably the kind
of people that have

00:22:19.360 --> 00:22:20.610
more money than time.

00:22:22.780 --> 00:22:24.000
So that's where we'll
go hand them out.

00:22:24.000 --> 00:22:25.870
We'll do a tour of those dog
parks on the weekend.

00:22:25.870 --> 00:22:26.960
BRETT MORGAN: Yep.

00:22:26.960 --> 00:22:27.220
KEN HOETMER: Great.

00:22:27.220 --> 00:22:28.470
Fantastic.

00:22:32.240 --> 00:22:35.240
BRETT MORGAN: So diving into
what just happened.

00:22:35.240 --> 00:22:38.370
Again, it's another
discovery-based API, so we've

00:22:38.370 --> 00:22:40.220
got an API key.

00:22:40.220 --> 00:22:43.650
The more important part
are these IDs.

00:22:43.650 --> 00:22:45.940
These IDs are actually
from jME.

00:22:45.940 --> 00:22:48.910
So when you upload a chunk of
data and create a vector

00:22:48.910 --> 00:22:52.090
table, it will turn around
and give you an asset ID.

00:22:52.090 --> 00:22:54.710
With this asset ID, you can
then turn around and query

00:22:54.710 --> 00:22:57.260
against jME.

00:22:57.260 --> 00:22:59.900
So there's a couple of queries
that I've got here.

00:22:59.900 --> 00:23:02.110
The first one was the
dog park URL.

00:23:02.110 --> 00:23:04.580
So this one is the markers.

00:23:04.580 --> 00:23:08.050
We're just requesting a
straight dump of those

00:23:08.050 --> 00:23:11.700
markers, and turning around and
walking through them, and

00:23:11.700 --> 00:23:15.300
putting on the screen as
points on a screen.

00:23:15.300 --> 00:23:16.310
KEN HOETMER: Just
a quick question

00:23:16.310 --> 00:23:17.820
before you go on here.

00:23:17.820 --> 00:23:21.030
I'm the product guy, so I have
an idea, which is I would love

00:23:21.030 --> 00:23:24.890
to show all of those dog parks
in the mobile app so that the

00:23:24.890 --> 00:23:28.010
walkers know where a
dog-friendly park is to go

00:23:28.010 --> 00:23:28.540
walk their dog.

00:23:28.540 --> 00:23:29.410
Is that possible?

00:23:29.410 --> 00:23:31.550
Could I use the same
thing to do that?

00:23:31.550 --> 00:23:32.730
BRETT MORGAN: Absolutely.

00:23:32.730 --> 00:23:33.350
This is--

00:23:33.350 --> 00:23:35.440
KEN HOETMER: A staged
question.

00:23:35.440 --> 00:23:35.930
BRETT MORGAN: Well,
not really.

00:23:35.930 --> 00:23:38.800
Didn't practice it before.

00:23:38.800 --> 00:23:40.665
I like it written down
in triplicate.

00:23:40.665 --> 00:23:43.530
OK, so yes, you can make those
queries from mobiles.

00:23:43.530 --> 00:23:46.090
You can do things like "points
near." so you can turn around

00:23:46.090 --> 00:23:48.960
and go as a mobile app, I'm
currently at this location.

00:23:48.960 --> 00:23:51.640
Tell me the dog parks that are
close to me and have jME API

00:23:51.640 --> 00:23:55.365
do the distance calculations
for you.

00:23:55.365 --> 00:23:57.150
KEN HOETMER: It'd be a similar
kind of integration.

00:23:57.150 --> 00:23:58.450
BRETT MORGAN: Just pointing
out that this is just a

00:23:58.450 --> 00:23:59.430
straight AJAX call.

00:23:59.430 --> 00:24:00.680
There's no magic here.

00:24:03.510 --> 00:24:06.260
The more interesting query,
from my point of view--

00:24:06.260 --> 00:24:09.630
and this is kind of new
for us, as a company I

00:24:09.630 --> 00:24:11.570
mean, not for jME--

00:24:11.570 --> 00:24:14.600
we have the ability to do SQL
LIKE where queries against our

00:24:14.600 --> 00:24:17.670
data, which means we can turn
around and filter based on the

00:24:17.670 --> 00:24:23.930
attributes of the points,
or paths, or parcels of

00:24:23.930 --> 00:24:25.380
land, in this case.

00:24:25.380 --> 00:24:28.680
So what we're doing here is the
query interface builder

00:24:28.680 --> 00:24:31.230
that you saw at the top left of
my screen before is being

00:24:31.230 --> 00:24:35.630
used to create SQL LIKE queries
and go, show me a

00:24:35.630 --> 00:24:38.290
chunk of San Francisco
where this value is

00:24:38.290 --> 00:24:41.596
between two nine points.

00:24:41.596 --> 00:24:43.870
KEN HOETMER: So I can upload a
data that has all sorts of

00:24:43.870 --> 00:24:46.880
different kinds of metadata in
it to Google Maps Engine--

00:24:46.880 --> 00:24:50.830
like a whole different series of
essentially column names--

00:24:50.830 --> 00:24:53.700
and then I can run like greater
than, less than, other

00:24:53.700 --> 00:24:58.760
kinds of binary queries via
the API on that data, my

00:24:58.760 --> 00:24:59.340
custom data.

00:24:59.340 --> 00:25:01.000
It's not restricted to--

00:25:01.000 --> 00:25:02.100
BRETT MORGAN: Absolutely.

00:25:02.100 --> 00:25:04.780
Like the good old
days, really.

00:25:04.780 --> 00:25:07.450
KEN HOETMER: Proper database.

00:25:07.450 --> 00:25:08.400
All right.

00:25:08.400 --> 00:25:11.360
So just a few conclusions
and parting thoughts.

00:25:11.360 --> 00:25:14.360
Because that ends our demo
of Google Maps Engine.

00:25:14.360 --> 00:25:17.870
The first is that you always
need more than a maps API.

00:25:17.870 --> 00:25:19.620
You always did.

00:25:19.620 --> 00:25:23.000
Any mashup that's been built
has always had to have some

00:25:23.000 --> 00:25:27.980
sort of back end, whether or
not it was a simple files

00:25:27.980 --> 00:25:31.420
stored on your server that you
pulled in, or it was something

00:25:31.420 --> 00:25:34.410
more complex, like an SQL
database that you're trying to

00:25:34.410 --> 00:25:37.500
run queries on, or you're using
PostGIS, or you're using

00:25:37.500 --> 00:25:39.010
something of that form.

00:25:39.010 --> 00:25:41.920
You always need more than a maps
API when you're building

00:25:41.920 --> 00:25:44.750
an application to do
with location.

00:25:44.750 --> 00:25:48.090
And the second is plan for a
large amount of location data,

00:25:48.090 --> 00:25:50.270
especially if you're working
in the mobile space.

00:25:50.270 --> 00:25:54.330
These phones, devices that are
out there-- even if it's not a

00:25:54.330 --> 00:25:58.390
phone, even it's just a
dedicated cheap GPS device--

00:25:58.390 --> 00:26:01.150
is going to be generating
a lot of crumbs.

00:26:01.150 --> 00:26:05.720
And those crumbs are actually at
high volume and take a bit

00:26:05.720 --> 00:26:06.850
of effort to store.

00:26:06.850 --> 00:26:09.370
So even if you're a small
organization, you should

00:26:09.370 --> 00:26:11.430
probably plan from the
beginning, just because of the

00:26:11.430 --> 00:26:13.330
volume of this, to scale.

00:26:13.330 --> 00:26:16.810
And so think about that when
you're designing your product.

00:26:16.810 --> 00:26:19.750
And last is we have some
questions now, but stick

00:26:19.750 --> 00:26:23.230
around for the fireside chat
that we're having after this

00:26:23.230 --> 00:26:26.550
session with the larger portion
of the Google Maps API

00:26:26.550 --> 00:26:29.220
Team, where we'll be happy to
answer all sorts of questions.

00:26:29.220 --> 00:26:30.440
Thank you.

00:26:30.440 --> 00:26:32.340
[APPLAUSE]

00:26:38.520 --> 00:26:41.510
BRETT MORGAN: If you'd
use the mike, please.

00:26:41.510 --> 00:26:43.110
KEN HOETMER: The talk is being
recorded, that's why.

00:26:43.110 --> 00:26:45.960
We could hear you, but the
people online watching later

00:26:45.960 --> 00:26:47.661
on YouTube won't be
able to hear you.

00:26:51.720 --> 00:26:52.030
AUDIENCE: Right.

00:26:52.030 --> 00:26:52.560
My name is [INAUDIBLE].

00:26:52.560 --> 00:26:55.920
I have a question regarding
the user data.

00:26:55.920 --> 00:26:59.780
So right now the user data can
only be in JSON format.

00:26:59.780 --> 00:27:03.590
Is there any way for you to
actually accept a banner user

00:27:03.590 --> 00:27:07.480
data, like a specific point, I
have a special image assigned

00:27:07.480 --> 00:27:10.440
for that dog, for example.

00:27:10.440 --> 00:27:13.100
KEN HOETMER: Are you speaking
about the Google Maps Engine

00:27:13.100 --> 00:27:15.360
Platform, or Tracks
API, or specific--

00:27:15.360 --> 00:27:20.285
AUDIENCE: Like a [? mixed ?]
engine platform, like your dog

00:27:20.285 --> 00:27:23.210
walker program.

00:27:23.210 --> 00:27:27.820
Like an owner wants to
actually send an

00:27:27.820 --> 00:27:31.820
image of the dog.

00:27:31.820 --> 00:27:35.160
KEN HOETMER: Yeah, so that's
a very good question.

00:27:35.160 --> 00:27:38.910
We don't have, at the moment,
support for images.

00:27:38.910 --> 00:27:42.330
You could potentially store the
image elsewhere, and then

00:27:42.330 --> 00:27:45.160
send a link to the image, and
then store the link to the

00:27:45.160 --> 00:27:48.600
image as a bit of text.

00:27:48.600 --> 00:27:50.820
So that might be a way
to get around it.

00:27:50.820 --> 00:27:56.890
But we're not in our products
tier to store

00:27:56.890 --> 00:27:58.130
the location data.

00:27:58.130 --> 00:28:00.730
We don't have the ability at
the moment to store large

00:28:00.730 --> 00:28:03.250
volumes of binary data
alongside it.

00:28:03.250 --> 00:28:03.620
AUDIENCE: All right.

00:28:03.620 --> 00:28:03.990
Got it.

00:28:03.990 --> 00:28:05.950
Thank you

00:28:05.950 --> 00:28:07.850
AUDIENCE: Sorry.

00:28:07.850 --> 00:28:10.070
By the way, very impressed with
the new version of Maps.

00:28:10.070 --> 00:28:13.340
It's some good things, but some
bad things, and I'll give

00:28:13.340 --> 00:28:14.300
you conjecture on the side.

00:28:14.300 --> 00:28:16.470
But one thing from a developer's
perspective, we

00:28:16.470 --> 00:28:18.540
can't use the new
Maps API yet.

00:28:18.540 --> 00:28:20.690
We're still using the
old versions of it.

00:28:20.690 --> 00:28:23.150
And so my question is
more fundamental.

00:28:23.150 --> 00:28:25.900
We can take KML data and
actually just insert it into

00:28:25.900 --> 00:28:28.750
Google Maps and have it
displayed in googlemaps.com.

00:28:28.750 --> 00:28:31.900
Or we can do these APIs
and have our own site.

00:28:31.900 --> 00:28:36.250
So KML's one segue to getting
data onto Google Maps, and

00:28:36.250 --> 00:28:37.010
there may be other ways.

00:28:37.010 --> 00:28:37.530
I'm not sure.

00:28:37.530 --> 00:28:38.450
I haven't evaluated them.

00:28:38.450 --> 00:28:40.790
But my question's more
fundamental.

00:28:40.790 --> 00:28:44.880
Are you encouraging mid-level
developers, not high-level

00:28:44.880 --> 00:28:46.010
development companies--

00:28:46.010 --> 00:28:49.340
we're a marketing company,
as you might tell--

00:28:49.340 --> 00:28:52.090
would you encourage us to
continue to do our own maps

00:28:52.090 --> 00:28:54.870
deployments on our own servers,
and our own websites,

00:28:54.870 --> 00:28:58.960
and our own maps apps on our
Android phones, or to leverage

00:28:58.960 --> 00:29:02.140
things like KML and going
into maps.com?

00:29:02.140 --> 00:29:05.880
KEN HOETMER: So I think
there are a couple

00:29:05.880 --> 00:29:07.120
angles to this question.

00:29:07.120 --> 00:29:11.450
The first is KML is a
data-exchange format.

00:29:11.450 --> 00:29:15.280
That's a standard, and is
supported by at least Google

00:29:15.280 --> 00:29:15.920
Maps Engine.

00:29:15.920 --> 00:29:18.840
Tracks API is about crumbs, so
it's not dealing with KML

00:29:18.840 --> 00:29:20.700
files, specifically.

00:29:20.700 --> 00:29:24.650
And so that's generally
supported in our API products.

00:29:24.650 --> 00:29:28.770
Now whether or not you want to
store the data yourself on

00:29:28.770 --> 00:29:32.890
your own servers or use our
cloud storage platforms to

00:29:32.890 --> 00:29:35.640
store that data, I think, is
a separate question and is

00:29:35.640 --> 00:29:37.640
related to your business.

00:29:37.640 --> 00:29:40.820
But I think KML as the exchange
format is really

00:29:40.820 --> 00:29:43.190
about how you communicate,
whether you're communicating

00:29:43.190 --> 00:29:45.470
with your own server or you're
communicating with our server.

00:29:45.470 --> 00:29:46.270
AUDIENCE: Sure.

00:29:46.270 --> 00:29:48.670
KEN HOETMER: You can then
use KML to visualize--

00:29:48.670 --> 00:29:51.210
AUDIENCE: But I guess my point
is the control of the map is a

00:29:51.210 --> 00:29:54.360
lot more precise when I have it
on my own website, whereas

00:29:54.360 --> 00:29:57.650
if I put my data as KML to
Google, I don't have the full

00:29:57.650 --> 00:29:59.870
extent of Maps API
at my hands.

00:29:59.870 --> 00:30:01.880
KEN HOETMER: Right, OK.

00:30:01.880 --> 00:30:03.270
In that case, I think we're
talking about a different

00:30:03.270 --> 00:30:06.080
question, which is, if you want
to visualize your KML

00:30:06.080 --> 00:30:10.930
file, you can potentially upload
it to what was My Maps

00:30:10.930 --> 00:30:13.330
and view it in maps.google.com.

00:30:13.330 --> 00:30:16.660
That's designed generally
for consumers.

00:30:16.660 --> 00:30:20.100
So a regular person who got a
KML file from somewhere and

00:30:20.100 --> 00:30:24.160
wants to just visualize it, they
can potentially do that.

00:30:24.160 --> 00:30:26.280
There's a different
question around

00:30:26.280 --> 00:30:27.180
building your own websites.

00:30:27.180 --> 00:30:28.690
AUDIENCE: Last question,
then, real quick.

00:30:28.690 --> 00:30:30.300
The My Maps--

00:30:30.300 --> 00:30:32.790
which is the next logical
question-- available in the

00:30:32.790 --> 00:30:38.400
new preview in the new Maps
version that's being previewed

00:30:38.400 --> 00:30:40.340
right now, or you know
if they're going to

00:30:40.340 --> 00:30:40.840
be extending that?

00:30:40.840 --> 00:30:44.330
KEN HOETMER: So My Maps is
currently only available in

00:30:44.330 --> 00:30:46.600
the older version
of Google Maps.

00:30:46.600 --> 00:30:50.260
And I can't stand here and speak
for their road map, or

00:30:50.260 --> 00:30:52.200
I'd get in trouble when
I leave the room.

00:30:52.200 --> 00:30:52.460
AUDIENCE: Gotcha.

00:30:52.460 --> 00:30:52.950
All right.

00:30:52.950 --> 00:30:53.230
Thank you much.

00:30:53.230 --> 00:30:53.600
KEN HOETMER: Sorry.

00:30:53.600 --> 00:30:54.850
AUDIENCE: I understand
the direction.

00:30:58.800 --> 00:31:02.230
AUDIENCE: Very good on
the APIs, by the way.

00:31:02.230 --> 00:31:04.440
BRETT MORGAN: Come and hassle
us in the Sandbox afterwards

00:31:04.440 --> 00:31:06.852
if you've got any questions.

00:31:06.852 --> 00:31:08.828
AUDIENCE: But you guys aren't
banking with the new version

00:31:08.828 --> 00:31:10.804
of Google Maps?

00:31:10.804 --> 00:31:13.280
That's not your team?

00:31:13.280 --> 00:31:14.970
KEN HOETMER: Ask at
the microphone.

00:31:14.970 --> 00:31:15.906
AUDIENCE: Sorry.

00:31:15.906 --> 00:31:17.310
AUDIENCE: [INAUDIBLE]
you want me to ask?

00:31:17.310 --> 00:31:18.560
KEN HOETMER: Sure.

00:31:22.060 --> 00:31:26.660
AUDIENCE: The question was, the
teams with the new design,

00:31:26.660 --> 00:31:29.590
doing the new preview design for
Google Maps and the Google

00:31:29.590 --> 00:31:32.590
Maps API team--

00:31:32.590 --> 00:31:35.590
has the new version of Google
Maps preview been done mostly

00:31:35.590 --> 00:31:38.480
as a back-end or more on a
front-end development?

00:31:38.480 --> 00:31:40.830
It appears to be it's more of a
front-end development versus

00:31:40.830 --> 00:31:42.340
the engine in the back end.

00:31:42.340 --> 00:31:44.370
There may be some visual effects
of like expanding the

00:31:44.370 --> 00:31:46.680
streets on the route that you're
taking, but I think

00:31:46.680 --> 00:31:48.940
those are just mathematical
offsets that could have been

00:31:48.940 --> 00:31:50.500
done on either front.

00:31:50.500 --> 00:31:52.735
KEN HOETMER: So we're all
part of the larger

00:31:52.735 --> 00:31:55.470
Geo Group at Google.

00:31:55.470 --> 00:31:59.580
The new Google Maps is a rebuild
of Google Maps from

00:31:59.580 --> 00:32:00.160
the bottom up.

00:32:00.160 --> 00:32:02.640
So they're storing the data
differently, all the way from

00:32:02.640 --> 00:32:07.000
the lowest levels to the way
they're visualizing it, where

00:32:07.000 --> 00:32:11.070
on the Maps API, we typically
leverage the pieces that are

00:32:11.070 --> 00:32:13.300
built for the consumer
applications.

00:32:13.300 --> 00:32:15.730
And we're currently, at the
moment, leveraging the pieces

00:32:15.730 --> 00:32:19.360
that were built for the existing
Google Maps, not the

00:32:19.360 --> 00:32:22.930
preview, which is why the API
that we have is still working

00:32:22.930 --> 00:32:30.190
on image-based maps rather than
the WebGL-based maps that

00:32:30.190 --> 00:32:31.820
you see in the new
Google Maps.

00:32:31.820 --> 00:32:34.920
AUDIENCE: Well, if I could put
conjecture about that design,

00:32:34.920 --> 00:32:37.390
even though it wasn't the point
of the session, but one

00:32:37.390 --> 00:32:40.180
of the things that you get as a
benefit of using the API is

00:32:40.180 --> 00:32:43.000
that you can implement those
design features of the slider

00:32:43.000 --> 00:32:45.990
and the carousel versus
a list view.

00:32:45.990 --> 00:32:48.850
Personally, I prefer list view
for when I'm searching for

00:32:48.850 --> 00:32:50.830
businesses and I don't know
which one I want.

00:32:50.830 --> 00:32:53.230
But I can see how the
map interface might

00:32:53.230 --> 00:32:54.160
work for some users.

00:32:54.160 --> 00:32:56.990
But it's just a difference
between classic mode

00:32:56.990 --> 00:32:58.810
versus Windows 8.

00:33:02.490 --> 00:33:03.345
BRETT MORGAN: Thank you
for that image.

00:33:03.345 --> 00:33:04.300
It's breaking my head.

00:33:04.300 --> 00:33:05.200
[LAUGHTER]

00:33:05.200 --> 00:33:06.310
AUDIENCE: There's a little
time, so I'll

00:33:06.310 --> 00:33:08.720
ask a question, too.

00:33:08.720 --> 00:33:10.700
I just thought of it based on
another question that was

00:33:10.700 --> 00:33:12.170
asked about photos.

00:33:12.170 --> 00:33:14.630
So I know that right now it's
not supported to upload large

00:33:14.630 --> 00:33:16.880
binary files in Maps Engine.

00:33:16.880 --> 00:33:20.000
But let's say I just want to
upload them to another service

00:33:20.000 --> 00:33:21.640
that Google offers--

00:33:21.640 --> 00:33:23.640
either photo or video, maybe
from the YouTube API or

00:33:23.640 --> 00:33:24.720
something--

00:33:24.720 --> 00:33:28.140
can I specially tag those and
then somehow pull them into a

00:33:28.140 --> 00:33:31.635
reference in a Google Map?

00:33:31.635 --> 00:33:33.950
KEN HOETMER: Are you talking
about specifically building

00:33:33.950 --> 00:33:35.310
your own application that would

00:33:35.310 --> 00:33:36.710
include video or photos--

00:33:36.710 --> 00:33:37.180
AUDIENCE: Correct.

00:33:37.180 --> 00:33:38.770
KEN HOETMER: --That would
say location tag.

00:33:38.770 --> 00:33:41.100
Yeah, so I was trying to
answer it in the last

00:33:41.100 --> 00:33:45.020
question, which is that I
think you would have to

00:33:45.020 --> 00:33:48.510
separate the storage of the
binary data from the linking

00:33:48.510 --> 00:33:50.700
of it in the store of
your location data.

00:33:50.700 --> 00:33:55.170
So if you, first step, took your
image and pushed it to

00:33:55.170 --> 00:33:58.200
one of our cloud storage
options for images--

00:33:58.200 --> 00:34:00.310
say Drive, right--

00:34:00.310 --> 00:34:03.150
as a public image, you could
then grab the URL and store

00:34:03.150 --> 00:34:06.500
that as metadata in the Tracks
API so that when you pulled

00:34:06.500 --> 00:34:10.790
down that information, you
could link them together.

00:34:10.790 --> 00:34:15.860
But remember that the Tracks
API is designed for crumbs.

00:34:15.860 --> 00:34:17.905
So that actually, probably, as
I'm talking through this, it

00:34:17.905 --> 00:34:20.050
doesn't make sense for you to
store images against crumbs,

00:34:20.050 --> 00:34:21.900
unless you're snapping an image
every time something

00:34:21.900 --> 00:34:24.380
moves, which might
not be the case.

00:34:24.380 --> 00:34:26.130
If you're doing that, then
you'd want to do it.

00:34:26.130 --> 00:34:28.010
Otherwise, you could,
yourself--

00:34:28.010 --> 00:34:30.739
because this is just a back-end
component of the

00:34:30.739 --> 00:34:31.860
application you're building--

00:34:31.860 --> 00:34:34.400
you're going to have a database
of assets, yourself,

00:34:34.400 --> 00:34:35.250
that you know of--

00:34:35.250 --> 00:34:35.929
your whales.

00:34:35.929 --> 00:34:37.610
You've got your list
of 20 whales.

00:34:37.610 --> 00:34:38.710
And you have photos of them.

00:34:38.710 --> 00:34:40.670
And you could store that
in your own back end.

00:34:40.670 --> 00:34:43.449
And you just need to relate
your asset ID

00:34:43.449 --> 00:34:44.480
in the Tracks API.

00:34:44.480 --> 00:34:47.570
So you pass your own asset ID
to the Tracks API when you

00:34:47.570 --> 00:34:48.850
store the crumbs.

00:34:48.850 --> 00:34:51.420
AUDIENCE: So the access control
list that you'd use to

00:34:51.420 --> 00:34:54.639
control access to who can see
this data, can you also apply

00:34:54.639 --> 00:34:56.290
those to the photos,
and videos, and

00:34:56.290 --> 00:34:58.070
other Google service?

00:34:58.070 --> 00:35:02.240
KEN HOETMER: So in the Tracks
API, your application has

00:35:02.240 --> 00:35:05.550
access to all of the data that
it stored in the Tracks API.

00:35:05.550 --> 00:35:09.680
So it's not a user-level access
control function.

00:35:09.680 --> 00:35:12.840
It's more of a back-end piece.

00:35:12.840 --> 00:35:15.540
If you have multiple users of
your application, you could

00:35:15.540 --> 00:35:18.220
control which tracks they're
allowed to view based on the

00:35:18.220 --> 00:35:19.510
fact that you have
an interface that

00:35:19.510 --> 00:35:20.910
sits in between them.

00:35:20.910 --> 00:35:23.400
AUDIENCE: For Maps Engine,
though, because that's a

00:35:23.400 --> 00:35:24.065
little different.

00:35:24.065 --> 00:35:27.700
KEN HOETMER: So Maps Engine's
a different product.

00:35:27.700 --> 00:35:29.280
We have an API that
lets you store the

00:35:29.280 --> 00:35:30.700
data and pull it down.

00:35:30.700 --> 00:35:32.630
We also-- this is
a good question.

00:35:32.630 --> 00:35:37.700
Maps Engine allows you to set
who has access to your data

00:35:37.700 --> 00:35:40.280
that you stored in the cloud and
to work together in teams.

00:35:40.280 --> 00:35:42.710
BRETT MORGAN: Both from
viewing and editing.

00:35:42.710 --> 00:35:44.090
They're separate ACLs.

00:35:44.090 --> 00:35:45.830
KEN HOETMER: Right.

00:35:45.830 --> 00:35:49.810
So but those ACLs are generally
designed for you in

00:35:49.810 --> 00:35:53.270
your own organization and in
your own team, rather than

00:35:53.270 --> 00:35:56.580
setting a different ACL on every
one of your end-users,

00:35:56.580 --> 00:35:58.880
potentially, who would be using
the data that you're

00:35:58.880 --> 00:36:01.290
serving out of it, if
that makes sense.

00:36:01.290 --> 00:36:01.670
AUDIENCE: I think so.

00:36:01.670 --> 00:36:02.020
KEN HOETMER: Right.

00:36:02.020 --> 00:36:05.790
So in DawgWalkr, Brett and I
could give each other access

00:36:05.790 --> 00:36:08.130
to the data but maybe not give
it to our finance guy, because

00:36:08.130 --> 00:36:10.410
he'll muck with it.

00:36:10.410 --> 00:36:13.630
But the end-users who are
walking their dogs, we would

00:36:13.630 --> 00:36:17.630
control how they get the data
based on the interface that we

00:36:17.630 --> 00:36:19.100
build in between.

00:36:19.100 --> 00:36:19.860
AUDIENCE: OK.

00:36:19.860 --> 00:36:21.110
Thank you.

00:36:26.794 --> 00:36:27.280
KEN HOETMER: All right.

00:36:27.280 --> 00:36:28.020
Well, let's wrap up there.

00:36:28.020 --> 00:36:28.380
Thank you.

00:36:28.380 --> 00:36:29.160
BRETT MORGAN: Thank you.

00:36:29.160 --> 00:36:30.410
[APPLAUSE]

