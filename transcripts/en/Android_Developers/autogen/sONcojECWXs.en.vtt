WEBVTT
Kind: captions
Language: en

00:00:07.460 --> 00:00:09.560
hi my name is Rotem aya

00:00:09.560 --> 00:00:09.570
hi my name is Rotem aya
 

00:00:09.570 --> 00:00:10.610
hi my name is Rotem aya
I'm the tech lead for the Android

00:00:10.610 --> 00:00:10.620
I'm the tech lead for the Android
 

00:00:10.620 --> 00:00:12.350
I'm the tech lead for the Android
developer relations team at Google and

00:00:12.350 --> 00:00:12.360
developer relations team at Google and
 

00:00:12.360 --> 00:00:13.850
developer relations team at Google and
I'm here to dig beneath the delicious

00:00:13.850 --> 00:00:13.860
I'm here to dig beneath the delicious
 

00:00:13.860 --> 00:00:15.379
I'm here to dig beneath the delicious
chocolate shell of the latest favor of

00:00:15.379 --> 00:00:15.389
chocolate shell of the latest favor of
 

00:00:15.389 --> 00:00:17.540
chocolate shell of the latest favor of
Android and into the wife of biscuity

00:00:17.540 --> 00:00:17.550
Android and into the wife of biscuity
 

00:00:17.550 --> 00:00:18.740
Android and into the wife of biscuity
goodness at the center of the new

00:00:18.740 --> 00:00:18.750
goodness at the center of the new
 

00:00:18.750 --> 00:00:20.840
goodness at the center of the new
developer features KitKat may only

00:00:20.840 --> 00:00:20.850
developer features KitKat may only
 

00:00:20.850 --> 00:00:22.580
developer features KitKat may only
represent a point one increase in

00:00:22.580 --> 00:00:22.590
represent a point one increase in
 

00:00:22.590 --> 00:00:24.410
represent a point one increase in
version number but it turns out that a

00:00:24.410 --> 00:00:24.420
version number but it turns out that a
 

00:00:24.420 --> 00:00:26.720
version number but it turns out that a
small bump can still include a lot of

00:00:26.720 --> 00:00:26.730
small bump can still include a lot of
 

00:00:26.730 --> 00:00:28.670
small bump can still include a lot of
new features where the defining

00:00:28.670 --> 00:00:28.680
new features where the defining
 

00:00:28.680 --> 00:00:30.410
new features where the defining
characteristic of jellybean was buttery

00:00:30.410 --> 00:00:30.420
characteristic of jellybean was buttery
 

00:00:30.420 --> 00:00:32.540
characteristic of jellybean was buttery
smoothness KitKat is all about memory

00:00:32.540 --> 00:00:32.550
smoothness KitKat is all about memory
 

00:00:32.550 --> 00:00:35.330
smoothness KitKat is all about memory
optimization Android 4.4 is designed to

00:00:35.330 --> 00:00:35.340
optimization Android 4.4 is designed to
 

00:00:35.340 --> 00:00:37.549
optimization Android 4.4 is designed to
run just as smoothly on a much broader

00:00:37.549 --> 00:00:37.559
run just as smoothly on a much broader
 

00:00:37.559 --> 00:00:39.979
run just as smoothly on a much broader
range of devices including those with as

00:00:39.979 --> 00:00:39.989
range of devices including those with as
 

00:00:39.989 --> 00:00:43.490
range of devices including those with as
little as 512 mix of RAM for developers

00:00:43.490 --> 00:00:43.500
little as 512 mix of RAM for developers
 

00:00:43.500 --> 00:00:45.380
little as 512 mix of RAM for developers
that means a selection of new api's and

00:00:45.380 --> 00:00:45.390
that means a selection of new api's and
 

00:00:45.390 --> 00:00:47.150
that means a selection of new api's and
tools to help us ensure that our apps

00:00:47.150 --> 00:00:47.160
tools to help us ensure that our apps
 

00:00:47.160 --> 00:00:49.040
tools to help us ensure that our apps
are as memory efficient as the platform

00:00:49.040 --> 00:00:49.050
are as memory efficient as the platform
 

00:00:49.050 --> 00:00:51.560
are as memory efficient as the platform
you can start by checking if your app is

00:00:51.560 --> 00:00:51.570
you can start by checking if your app is
 

00:00:51.570 --> 00:00:53.389
you can start by checking if your app is
running on a memory constrained device

00:00:53.389 --> 00:00:53.399
running on a memory constrained device
 

00:00:53.399 --> 00:00:56.479
running on a memory constrained device
using the new is low RAM device call on

00:00:56.479 --> 00:00:56.489
using the new is low RAM device call on
 

00:00:56.489 --> 00:00:58.700
using the new is low RAM device call on
the activity manager based on the result

00:00:58.700 --> 00:00:58.710
the activity manager based on the result
 

00:00:58.710 --> 00:01:00.619
the activity manager based on the result
you might choose to modify or even

00:01:00.619 --> 00:01:00.629
you might choose to modify or even
 

00:01:00.629 --> 00:01:02.299
you might choose to modify or even
disable features with significant memory

00:01:02.299 --> 00:01:02.309
disable features with significant memory
 

00:01:02.309 --> 00:01:04.340
disable features with significant memory
implications to ensure your app provides

00:01:04.340 --> 00:01:04.350
implications to ensure your app provides
 

00:01:04.350 --> 00:01:06.530
implications to ensure your app provides
a great user experience on devices with

00:01:06.530 --> 00:01:06.540
a great user experience on devices with
 

00:01:06.540 --> 00:01:08.300
a great user experience on devices with
memory limits similar to those featured

00:01:08.300 --> 00:01:08.310
memory limits similar to those featured
 

00:01:08.310 --> 00:01:10.580
memory limits similar to those featured
black guy Pearce's character in memento

00:01:10.580 --> 00:01:10.590
black guy Pearce's character in memento
 

00:01:10.590 --> 00:01:13.039
black guy Pearce's character in memento
of course disabling features is always a

00:01:13.039 --> 00:01:13.049
of course disabling features is always a
 

00:01:13.049 --> 00:01:15.080
of course disabling features is always a
last resort so check out this guide for

00:01:15.080 --> 00:01:15.090
last resort so check out this guide for
 

00:01:15.090 --> 00:01:16.880
last resort so check out this guide for
tips on how you can optimize your apps

00:01:16.880 --> 00:01:16.890
tips on how you can optimize your apps
 

00:01:16.890 --> 00:01:19.030
tips on how you can optimize your apps
memory usage without having to sacrifice

00:01:19.030 --> 00:01:19.040
memory usage without having to sacrifice
 

00:01:19.040 --> 00:01:22.070
memory usage without having to sacrifice
functionality but before you can start

00:01:22.070 --> 00:01:22.080
functionality but before you can start
 

00:01:22.080 --> 00:01:23.840
functionality but before you can start
improving your apps memory efficiency

00:01:23.840 --> 00:01:23.850
improving your apps memory efficiency
 

00:01:23.850 --> 00:01:25.850
improving your apps memory efficiency
you need to first understand how you're

00:01:25.850 --> 00:01:25.860
you need to first understand how you're
 

00:01:25.860 --> 00:01:28.490
you need to first understand how you're
using memory in the first place the new

00:01:28.490 --> 00:01:28.500
using memory in the first place the new
 

00:01:28.500 --> 00:01:30.859
using memory in the first place the new
product stats tool helps you analyze

00:01:30.859 --> 00:01:30.869
product stats tool helps you analyze
 

00:01:30.869 --> 00:01:33.109
product stats tool helps you analyze
memory resources providing a data about

00:01:33.109 --> 00:01:33.119
memory resources providing a data about
 

00:01:33.119 --> 00:01:35.420
memory resources providing a data about
apps execution durations and memory use

00:01:35.420 --> 00:01:35.430
apps execution durations and memory use
 

00:01:35.430 --> 00:01:40.370
apps execution durations and memory use
you can access proc stats from the adb

00:01:40.370 --> 00:01:40.380
you can access proc stats from the adb
 

00:01:40.380 --> 00:01:42.740
you can access proc stats from the adb
tool by calling adb shell dumps S proc

00:01:42.740 --> 00:01:42.750
tool by calling adb shell dumps S proc
 

00:01:42.750 --> 00:01:44.749
tool by calling adb shell dumps S proc
stats if command lines make you nervous

00:01:44.749 --> 00:01:44.759
stats if command lines make you nervous
 

00:01:44.759 --> 00:01:47.960
stats if command lines make you nervous
fear not Android 4.4 also includes a new

00:01:47.960 --> 00:01:47.970
fear not Android 4.4 also includes a new
 

00:01:47.970 --> 00:01:49.850
fear not Android 4.4 also includes a new
developer option that helps you analyze

00:01:49.850 --> 00:01:49.860
developer option that helps you analyze
 

00:01:49.860 --> 00:01:52.219
developer option that helps you analyze
your apps memory profile on any Android

00:01:52.219 --> 00:01:52.229
your apps memory profile on any Android
 

00:01:52.229 --> 00:01:54.770
your apps memory profile on any Android
4.4 device or emulator through the

00:01:54.770 --> 00:01:54.780
4.4 device or emulator through the
 

00:01:54.780 --> 00:01:57.100
4.4 device or emulator through the
process stats developer options screen

00:01:57.100 --> 00:01:57.110
process stats developer options screen
 

00:01:57.110 --> 00:01:59.719
process stats developer options screen
below the system memory summary there's

00:01:59.719 --> 00:01:59.729
below the system memory summary there's
 

00:01:59.729 --> 00:02:02.660
below the system memory summary there's
a list of blue bars indicating the

00:02:02.660 --> 00:02:02.670
a list of blue bars indicating the
 

00:02:02.670 --> 00:02:04.429
a list of blue bars indicating the
relative computed memory load of each

00:02:04.429 --> 00:02:04.439
relative computed memory load of each
 

00:02:04.439 --> 00:02:07.039
relative computed memory load of each
apps process and the relative percentage

00:02:07.039 --> 00:02:07.049
apps process and the relative percentage
 

00:02:07.049 --> 00:02:10.029
apps process and the relative percentage
of time each has spent in the background

00:02:10.029 --> 00:02:10.039
of time each has spent in the background
 

00:02:10.039 --> 00:02:12.440
of time each has spent in the background
selecting an app displays a summary of

00:02:12.440 --> 00:02:12.450
selecting an app displays a summary of
 

00:02:12.450 --> 00:02:13.290
selecting an app displays a summary of
the memory

00:02:13.290 --> 00:02:13.300
the memory
 

00:02:13.300 --> 00:02:14.850
the memory
and the percentage of the collection

00:02:14.850 --> 00:02:14.860
and the percentage of the collection
 

00:02:14.860 --> 00:02:16.950
and the percentage of the collection
interval that this particular app has

00:02:16.950 --> 00:02:16.960
interval that this particular app has
 

00:02:16.960 --> 00:02:18.750
interval that this particular app has
been running for as well as the average

00:02:18.750 --> 00:02:18.760
been running for as well as the average
 

00:02:18.760 --> 00:02:22.290
been running for as well as the average
and maximum RAM usage it's not all about

00:02:22.290 --> 00:02:22.300
and maximum RAM usage it's not all about
 

00:02:22.300 --> 00:02:24.150
and maximum RAM usage it's not all about
memory efficiency that a KitKat also

00:02:24.150 --> 00:02:24.160
memory efficiency that a KitKat also
 

00:02:24.160 --> 00:02:25.410
memory efficiency that a KitKat also
includes some new ways to build

00:02:25.410 --> 00:02:25.420
includes some new ways to build
 

00:02:25.420 --> 00:02:27.180
includes some new ways to build
beautiful apps starting with some

00:02:27.180 --> 00:02:27.190
beautiful apps starting with some
 

00:02:27.190 --> 00:02:29.040
beautiful apps starting with some
updates to the Android design guide

00:02:29.040 --> 00:02:29.050
updates to the Android design guide
 

00:02:29.050 --> 00:02:31.020
updates to the Android design guide
designed to help you create striking

00:02:31.020 --> 00:02:31.030
designed to help you create striking
 

00:02:31.030 --> 00:02:32.940
designed to help you create striking
innovative and distinctive apps that

00:02:32.940 --> 00:02:32.950
innovative and distinctive apps that
 

00:02:32.950 --> 00:02:34.890
innovative and distinctive apps that
offer users a magical experience for

00:02:34.890 --> 00:02:34.900
offer users a magical experience for
 

00:02:34.900 --> 00:02:37.140
offer users a magical experience for
more details check out tomorrow's

00:02:37.140 --> 00:02:37.150
more details check out tomorrow's
 

00:02:37.150 --> 00:02:39.210
more details check out tomorrow's
episode of Android design in action in

00:02:39.210 --> 00:02:39.220
episode of Android design in action in
 

00:02:39.220 --> 00:02:42.090
episode of Android design in action in
terms of API is there support for a more

00:02:42.090 --> 00:02:42.100
terms of API is there support for a more
 

00:02:42.100 --> 00:02:44.190
terms of API is there support for a more
immersive full-screen experience a new

00:02:44.190 --> 00:02:44.200
immersive full-screen experience a new
 

00:02:44.200 --> 00:02:45.930
immersive full-screen experience a new
transition framework for animating

00:02:45.930 --> 00:02:45.940
transition framework for animating
 

00:02:45.940 --> 00:02:48.210
transition framework for animating
scenes closed captioning support and a

00:02:48.210 --> 00:02:48.220
scenes closed captioning support and a
 

00:02:48.220 --> 00:02:50.100
scenes closed captioning support and a
new tool for high fidelity screen

00:02:50.100 --> 00:02:50.110
new tool for high fidelity screen
 

00:02:50.110 --> 00:02:52.560
new tool for high fidelity screen
recording the new full-screen immersive

00:02:52.560 --> 00:02:52.570
recording the new full-screen immersive
 

00:02:52.570 --> 00:02:54.330
recording the new full-screen immersive
mode lets you create full bleed you

00:02:54.330 --> 00:02:54.340
mode lets you create full bleed you
 

00:02:54.340 --> 00:02:55.920
mode lets you create full bleed you
wires that reach from edge to edge

00:02:55.920 --> 00:02:55.930
wires that reach from edge to edge
 

00:02:55.930 --> 00:02:58.140
wires that reach from edge to edge
hiding all system UI including the

00:02:58.140 --> 00:02:58.150
hiding all system UI including the
 

00:02:58.150 --> 00:03:00.120
hiding all system UI including the
status and navigation bars and allows

00:03:00.120 --> 00:03:00.130
status and navigation bars and allows
 

00:03:00.130 --> 00:03:01.860
status and navigation bars and allows
your app to respond to touch events from

00:03:01.860 --> 00:03:01.870
your app to respond to touch events from
 

00:03:01.870 --> 00:03:03.540
your app to respond to touch events from
areas that would otherwise be occupied

00:03:03.540 --> 00:03:03.550
areas that would otherwise be occupied
 

00:03:03.550 --> 00:03:07.080
areas that would otherwise be occupied
by the system bars it's a great solution

00:03:07.080 --> 00:03:07.090
by the system bars it's a great solution
 

00:03:07.090 --> 00:03:09.570
by the system bars it's a great solution
for rich visual content such as photos

00:03:09.570 --> 00:03:09.580
for rich visual content such as photos
 

00:03:09.580 --> 00:03:12.420
for rich visual content such as photos
videos maps books and games you can

00:03:12.420 --> 00:03:12.430
videos maps books and games you can
 

00:03:12.430 --> 00:03:13.950
videos maps books and games you can
enable this new mode using two new

00:03:13.950 --> 00:03:13.960
enable this new mode using two new
 

00:03:13.960 --> 00:03:16.140
enable this new mode using two new
mutually exclusive system UI flags

00:03:16.140 --> 00:03:16.150
mutually exclusive system UI flags
 

00:03:16.150 --> 00:03:19.770
mutually exclusive system UI flags
immersive and immersive sticky this code

00:03:19.770 --> 00:03:19.780
immersive and immersive sticky this code
 

00:03:19.780 --> 00:03:21.660
immersive and immersive sticky this code
shows how to toggle between an immersive

00:03:21.660 --> 00:03:21.670
shows how to toggle between an immersive
 

00:03:21.670 --> 00:03:23.490
shows how to toggle between an immersive
full-screen experience within your app

00:03:23.490 --> 00:03:23.500
full-screen experience within your app
 

00:03:23.500 --> 00:03:25.770
full-screen experience within your app
using the immersive flag alternatively

00:03:25.770 --> 00:03:25.780
using the immersive flag alternatively
 

00:03:25.780 --> 00:03:27.660
using the immersive flag alternatively
you can utilize the immersive sticky

00:03:27.660 --> 00:03:27.670
you can utilize the immersive sticky
 

00:03:27.670 --> 00:03:29.490
you can utilize the immersive sticky
flag to create a persistent immersive

00:03:29.490 --> 00:03:29.500
flag to create a persistent immersive
 

00:03:29.500 --> 00:03:31.170
flag to create a persistent immersive
experience that will automatically

00:03:31.170 --> 00:03:31.180
experience that will automatically
 

00:03:31.180 --> 00:03:33.300
experience that will automatically
rehire the system bars after a short

00:03:33.300 --> 00:03:33.310
rehire the system bars after a short
 

00:03:33.310 --> 00:03:35.520
rehire the system bars after a short
delay or if the user interacts with the

00:03:35.520 --> 00:03:35.530
delay or if the user interacts with the
 

00:03:35.530 --> 00:03:37.650
delay or if the user interacts with the
middle of the screen you can learn more

00:03:37.650 --> 00:03:37.660
middle of the screen you can learn more
 

00:03:37.660 --> 00:03:39.630
middle of the screen you can learn more
about the new immersive modes including

00:03:39.630 --> 00:03:39.640
about the new immersive modes including
 

00:03:39.640 --> 00:03:41.550
about the new immersive modes including
the best practices for using each

00:03:41.550 --> 00:03:41.560
the best practices for using each
 

00:03:41.560 --> 00:03:43.410
the best practices for using each
alternative in Roman Nurik immersive

00:03:43.410 --> 00:03:43.420
alternative in Roman Nurik immersive
 

00:03:43.420 --> 00:03:46.410
alternative in Roman Nurik immersive
mode dev byte to make it easier to

00:03:46.410 --> 00:03:46.420
mode dev byte to make it easier to
 

00:03:46.420 --> 00:03:48.240
mode dev byte to make it easier to
create high quality animations in your

00:03:48.240 --> 00:03:48.250
create high quality animations in your
 

00:03:48.250 --> 00:03:50.850
create high quality animations in your
app Android 4.4 also introduces a new

00:03:50.850 --> 00:03:50.860
app Android 4.4 also introduces a new
 

00:03:50.860 --> 00:03:52.620
app Android 4.4 also introduces a new
transitions framework for animating

00:03:52.620 --> 00:03:52.630
transitions framework for animating
 

00:03:52.630 --> 00:03:54.960
transitions framework for animating
between scenes now it's pretty common to

00:03:54.960 --> 00:03:54.970
between scenes now it's pretty common to
 

00:03:54.970 --> 00:03:56.850
between scenes now it's pretty common to
use animations to help users understand

00:03:56.850 --> 00:03:56.860
use animations to help users understand
 

00:03:56.860 --> 00:03:58.590
use animations to help users understand
their progress through UI states where

00:03:58.590 --> 00:03:58.600
their progress through UI states where
 

00:03:58.600 --> 00:04:00.810
their progress through UI states where
each state can expose different actions

00:04:00.810 --> 00:04:00.820
each state can expose different actions
 

00:04:00.820 --> 00:04:03.449
each state can expose different actions
the new transitions framework helps you

00:04:03.449 --> 00:04:03.459
the new transitions framework helps you
 

00:04:03.459 --> 00:04:05.580
the new transitions framework helps you
define these scenes typically view

00:04:05.580 --> 00:04:05.590
define these scenes typically view
 

00:04:05.590 --> 00:04:07.500
define these scenes typically view
hierarchies like these and the

00:04:07.500 --> 00:04:07.510
hierarchies like these and the
 

00:04:07.510 --> 00:04:09.330
hierarchies like these and the
transitions which define how to animate

00:04:09.330 --> 00:04:09.340
transitions which define how to animate
 

00:04:09.340 --> 00:04:11.370
transitions which define how to animate
the transformations between scenes when

00:04:11.370 --> 00:04:11.380
the transformations between scenes when
 

00:04:11.380 --> 00:04:14.100
the transformations between scenes when
the user enters or exit them you can use

00:04:14.100 --> 00:04:14.110
the user enters or exit them you can use
 

00:04:14.110 --> 00:04:15.990
the user enters or exit them you can use
one of several predefined transition

00:04:15.990 --> 00:04:16.000
one of several predefined transition
 

00:04:16.000 --> 00:04:17.729
one of several predefined transition
types based on specific properties like

00:04:17.729 --> 00:04:17.739
types based on specific properties like
 

00:04:17.739 --> 00:04:20.220
types based on specific properties like
layout balance or visibility or use the

00:04:20.220 --> 00:04:20.230
layout balance or visibility or use the
 

00:04:20.230 --> 00:04:22.080
layout balance or visibility or use the
auto transition type to automatically

00:04:22.080 --> 00:04:22.090
auto transition type to automatically
 

00:04:22.090 --> 00:04:25.020
auto transition type to automatically
fade move and resize views during a

00:04:25.020 --> 00:04:25.030
fade move and resize views during a
 

00:04:25.030 --> 00:04:25.970
fade move and resize views during a
scene change

00:04:25.970 --> 00:04:25.980
scene change
 

00:04:25.980 --> 00:04:28.460
scene change
you can also define custom transitions

00:04:28.460 --> 00:04:28.470
you can also define custom transitions
 

00:04:28.470 --> 00:04:29.870
you can also define custom transitions
that animate the properties that matter

00:04:29.870 --> 00:04:29.880
that animate the properties that matter
 

00:04:29.880 --> 00:04:31.910
that animate the properties that matter
most to your Apple even plug-in your own

00:04:31.910 --> 00:04:31.920
most to your Apple even plug-in your own
 

00:04:31.920 --> 00:04:34.580
most to your Apple even plug-in your own
animation styles for more details check

00:04:34.580 --> 00:04:34.590
animation styles for more details check
 

00:04:34.590 --> 00:04:36.440
animation styles for more details check
out the transitions dev byte from our

00:04:36.440 --> 00:04:36.450
out the transitions dev byte from our
 

00:04:36.450 --> 00:04:39.380
out the transitions dev byte from our
master of animation chet haase in an

00:04:39.380 --> 00:04:39.390
master of animation chet haase in an
 

00:04:39.390 --> 00:04:41.060
master of animation chet haase in an
effort to make your apps more accessible

00:04:41.060 --> 00:04:41.070
effort to make your apps more accessible
 

00:04:41.070 --> 00:04:43.130
effort to make your apps more accessible
Android 4.4 includes system-wide

00:04:43.130 --> 00:04:43.140
Android 4.4 includes system-wide
 

00:04:43.140 --> 00:04:45.020
Android 4.4 includes system-wide
preferences for closed captioning

00:04:45.020 --> 00:04:45.030
preferences for closed captioning
 

00:04:45.030 --> 00:04:47.480
preferences for closed captioning
users can now set global captioning

00:04:47.480 --> 00:04:47.490
users can now set global captioning
 

00:04:47.490 --> 00:04:49.640
users can now set global captioning
preferences and apps that use video can

00:04:49.640 --> 00:04:49.650
preferences and apps that use video can
 

00:04:49.650 --> 00:04:51.140
preferences and apps that use video can
use those settings to adjust how they

00:04:51.140 --> 00:04:51.150
use those settings to adjust how they
 

00:04:51.150 --> 00:04:53.270
use those settings to adjust how they
present closed captions by using the new

00:04:53.270 --> 00:04:53.280
present closed captions by using the new
 

00:04:53.280 --> 00:04:55.670
present closed captions by using the new
captioning manager apps that use video

00:04:55.670 --> 00:04:55.680
captioning manager apps that use video
 

00:04:55.680 --> 00:04:57.530
captioning manager apps that use video
view can simply pass a captioning stream

00:04:57.530 --> 00:04:57.540
view can simply pass a captioning stream
 

00:04:57.540 --> 00:05:00.500
view can simply pass a captioning stream
in web VTT format along with the video

00:05:00.500 --> 00:05:00.510
in web VTT format along with the video
 

00:05:00.510 --> 00:05:02.540
in web VTT format along with the video
stream for rendering and the system will

00:05:02.540 --> 00:05:02.550
stream for rendering and the system will
 

00:05:02.550 --> 00:05:03.860
stream for rendering and the system will
handle the display of the captions

00:05:03.860 --> 00:05:03.870
handle the display of the captions
 

00:05:03.870 --> 00:05:06.710
handle the display of the captions
according to those user preferences for

00:05:06.710 --> 00:05:06.720
according to those user preferences for
 

00:05:06.720 --> 00:05:08.600
according to those user preferences for
more details check out this devbyte by

00:05:08.600 --> 00:05:08.610
more details check out this devbyte by
 

00:05:08.610 --> 00:05:10.280
more details check out this devbyte by
alan beaver at the engineer who

00:05:10.280 --> 00:05:10.290
alan beaver at the engineer who
 

00:05:10.290 --> 00:05:12.770
alan beaver at the engineer who
implemented it all if you've ever tried

00:05:12.770 --> 00:05:12.780
implemented it all if you've ever tried
 

00:05:12.780 --> 00:05:14.660
implemented it all if you've ever tried
to record a demo of your app by holding

00:05:14.660 --> 00:05:14.670
to record a demo of your app by holding
 

00:05:14.670 --> 00:05:15.560
to record a demo of your app by holding
a video camera

00:05:15.560 --> 00:05:15.570
a video camera
 

00:05:15.570 --> 00:05:18.170
a video camera
very steady you'll appreciate the new

00:05:18.170 --> 00:05:18.180
very steady you'll appreciate the new
 

00:05:18.180 --> 00:05:19.700
very steady you'll appreciate the new
screen recording tool that lets you

00:05:19.700 --> 00:05:19.710
screen recording tool that lets you
 

00:05:19.710 --> 00:05:22.190
screen recording tool that lets you
capture video as you use the device and

00:05:22.190 --> 00:05:22.200
capture video as you use the device and
 

00:05:22.200 --> 00:05:25.040
capture video as you use the device and
store it as an mp4 you can record at any

00:05:25.040 --> 00:05:25.050
store it as an mp4 you can record at any
 

00:05:25.050 --> 00:05:26.570
store it as an mp4 you can record at any
device supported resolution and bitrate

00:05:26.570 --> 00:05:26.580
device supported resolution and bitrate
 

00:05:26.580 --> 00:05:28.490
device supported resolution and bitrate
and the output retains the aspect ratio

00:05:28.490 --> 00:05:28.500
and the output retains the aspect ratio
 

00:05:28.500 --> 00:05:31.130
and the output retains the aspect ratio
of the display you can access screen

00:05:31.130 --> 00:05:31.140
of the display you can access screen
 

00:05:31.140 --> 00:05:32.930
of the display you can access screen
recording through the ADB tool calling

00:05:32.930 --> 00:05:32.940
recording through the ADB tool calling
 

00:05:32.940 --> 00:05:35.030
recording through the ADB tool calling
adb shell screen record or through the

00:05:35.030 --> 00:05:35.040
adb shell screen record or through the
 

00:05:35.040 --> 00:05:37.450
adb shell screen record or through the
DDMS panel in eclipse or Android studio

00:05:37.450 --> 00:05:37.460
DDMS panel in eclipse or Android studio
 

00:05:37.460 --> 00:05:39.920
DDMS panel in eclipse or Android studio
KitKat also includes a couple of

00:05:39.920 --> 00:05:39.930
KitKat also includes a couple of
 

00:05:39.930 --> 00:05:43.370
KitKat also includes a couple of
significant new storage API changes with

00:05:43.370 --> 00:05:43.380
significant new storage API changes with
 

00:05:43.380 --> 00:05:45.080
significant new storage API changes with
a new storage access framework and a

00:05:45.080 --> 00:05:45.090
a new storage access framework and a
 

00:05:45.090 --> 00:05:48.080
a new storage access framework and a
fully supported SMS content provider the

00:05:48.080 --> 00:05:48.090
fully supported SMS content provider the
 

00:05:48.090 --> 00:05:49.700
fully supported SMS content provider the
new storage access framework makes it

00:05:49.700 --> 00:05:49.710
new storage access framework makes it
 

00:05:49.710 --> 00:05:51.920
new storage access framework makes it
easy for users to browse and open

00:05:51.920 --> 00:05:51.930
easy for users to browse and open
 

00:05:51.930 --> 00:05:54.530
easy for users to browse and open
documents images and other files across

00:05:54.530 --> 00:05:54.540
documents images and other files across
 

00:05:54.540 --> 00:05:56.060
documents images and other files across
all of the available local and

00:05:56.060 --> 00:05:56.070
all of the available local and
 

00:05:56.070 --> 00:05:58.160
all of the available local and
cloud-based document storage providers

00:05:58.160 --> 00:05:58.170
cloud-based document storage providers
 

00:05:58.170 --> 00:06:00.470
cloud-based document storage providers
if you develop an app that manages files

00:06:00.470 --> 00:06:00.480
if you develop an app that manages files
 

00:06:00.480 --> 00:06:02.180
if you develop an app that manages files
or users documents you can integrate

00:06:02.180 --> 00:06:02.190
or users documents you can integrate
 

00:06:02.190 --> 00:06:04.160
or users documents you can integrate
with the storage access framework using

00:06:04.160 --> 00:06:04.170
with the storage access framework using
 

00:06:04.170 --> 00:06:06.020
with the storage access framework using
the create document or open document

00:06:06.020 --> 00:06:06.030
the create document or open document
 

00:06:06.030 --> 00:06:08.090
the create document or open document
intents and the system will display the

00:06:08.090 --> 00:06:08.100
intents and the system will display the
 

00:06:08.100 --> 00:06:10.100
intents and the system will display the
standard UI including content from all

00:06:10.100 --> 00:06:10.110
standard UI including content from all
 

00:06:10.110 --> 00:06:12.830
standard UI including content from all
the available document providers if you

00:06:12.830 --> 00:06:12.840
the available document providers if you
 

00:06:12.840 --> 00:06:14.480
the available document providers if you
want to add a storage provider you

00:06:14.480 --> 00:06:14.490
want to add a storage provider you
 

00:06:14.490 --> 00:06:17.020
want to add a storage provider you
implement a new documents provider

00:06:17.020 --> 00:06:17.030
implement a new documents provider
 

00:06:17.030 --> 00:06:19.130
implement a new documents provider
overriding these four methods will let

00:06:19.130 --> 00:06:19.140
overriding these four methods will let
 

00:06:19.140 --> 00:06:20.750
overriding these four methods will let
you manage the browsing reading and

00:06:20.750 --> 00:06:20.760
you manage the browsing reading and
 

00:06:20.760 --> 00:06:22.940
you manage the browsing reading and
writing of any local or remote data that

00:06:22.940 --> 00:06:22.950
writing of any local or remote data that
 

00:06:22.950 --> 00:06:25.280
writing of any local or remote data that
can be represented as files then you

00:06:25.280 --> 00:06:25.290
can be represented as files then you
 

00:06:25.290 --> 00:06:27.140
can be represented as files then you
just need to add the documents provider

00:06:27.140 --> 00:06:27.150
just need to add the documents provider
 

00:06:27.150 --> 00:06:29.270
just need to add the documents provider
and MANET manifest intent filter and

00:06:29.270 --> 00:06:29.280
and MANET manifest intent filter and
 

00:06:29.280 --> 00:06:30.700
and MANET manifest intent filter and
request permission to manage documents

00:06:30.700 --> 00:06:30.710
request permission to manage documents
 

00:06:30.710 --> 00:06:33.140
request permission to manage documents
this process will register your provider

00:06:33.140 --> 00:06:33.150
this process will register your provider
 

00:06:33.150 --> 00:06:34.700
this process will register your provider
with the storage access framework and

00:06:34.700 --> 00:06:34.710
with the storage access framework and
 

00:06:34.710 --> 00:06:36.080
with the storage access framework and
make it available to the standard UI

00:06:36.080 --> 00:06:36.090
make it available to the standard UI
 

00:06:36.090 --> 00:06:38.930
make it available to the standard UI
then whenever your app is installed any

00:06:38.930 --> 00:06:38.940
then whenever your app is installed any
 

00:06:38.940 --> 00:06:40.370
then whenever your app is installed any
that uses this framework to view or

00:06:40.370 --> 00:06:40.380
that uses this framework to view or
 

00:06:40.380 --> 00:06:42.170
that uses this framework to view or
select files will provide access to your

00:06:42.170 --> 00:06:42.180
select files will provide access to your
 

00:06:42.180 --> 00:06:42.770
select files will provide access to your
content

00:06:42.770 --> 00:06:42.780
content
 

00:06:42.780 --> 00:06:45.110
content
our very own Lisa Raye has created dev

00:06:45.110 --> 00:06:45.120
our very own Lisa Raye has created dev
 

00:06:45.120 --> 00:06:47.510
our very own Lisa Raye has created dev
bytes for both provider and consumer

00:06:47.510 --> 00:06:47.520
bytes for both provider and consumer
 

00:06:47.520 --> 00:06:49.340
bytes for both provider and consumer
users of the storage access framework so

00:06:49.340 --> 00:06:49.350
users of the storage access framework so
 

00:06:49.350 --> 00:06:51.170
users of the storage access framework so
check them out for more details

00:06:51.170 --> 00:06:51.180
check them out for more details
 

00:06:51.180 --> 00:06:55.430
check them out for more details
now if you've been using undocumented

00:06:55.430 --> 00:06:55.440
now if you've been using undocumented
 

00:06:55.440 --> 00:06:57.620
now if you've been using undocumented
methods to provide an MS an SMS based

00:06:57.620 --> 00:06:57.630
methods to provide an MS an SMS based
 

00:06:57.630 --> 00:06:59.900
methods to provide an MS an SMS based
app now is an excellent opportunity to

00:06:59.900 --> 00:06:59.910
app now is an excellent opportunity to
 

00:06:59.910 --> 00:07:01.700
app now is an excellent opportunity to
familiarize yourself with the official

00:07:01.700 --> 00:07:01.710
familiarize yourself with the official
 

00:07:01.710 --> 00:07:04.310
familiarize yourself with the official
API as for SMS handling that primarily

00:07:04.310 --> 00:07:04.320
API as for SMS handling that primarily
 

00:07:04.320 --> 00:07:06.650
API as for SMS handling that primarily
involves a newly documented SMS content

00:07:06.650 --> 00:07:06.660
involves a newly documented SMS content
 

00:07:06.660 --> 00:07:08.420
involves a newly documented SMS content
provider but also introduces new

00:07:08.420 --> 00:07:08.430
provider but also introduces new
 

00:07:08.430 --> 00:07:10.430
provider but also introduces new
semantics for receiving messages and

00:07:10.430 --> 00:07:10.440
semantics for receiving messages and
 

00:07:10.440 --> 00:07:12.680
semantics for receiving messages and
writing to the provider when a message

00:07:12.680 --> 00:07:12.690
writing to the provider when a message
 

00:07:12.690 --> 00:07:13.940
writing to the provider when a message
is received the system routes it

00:07:13.940 --> 00:07:13.950
is received the system routes it
 

00:07:13.950 --> 00:07:15.890
is received the system routes it
directly to the users default messaging

00:07:15.890 --> 00:07:15.900
directly to the users default messaging
 

00:07:15.900 --> 00:07:18.440
directly to the users default messaging
app using the SMS deliver intent while

00:07:18.440 --> 00:07:18.450
app using the SMS deliver intent while
 

00:07:18.450 --> 00:07:19.970
app using the SMS deliver intent while
other apps can continue to listen for

00:07:19.970 --> 00:07:19.980
other apps can continue to listen for
 

00:07:19.980 --> 00:07:22.040
other apps can continue to listen for
incoming messages using the SMS received

00:07:22.040 --> 00:07:22.050
incoming messages using the SMS received
 

00:07:22.050 --> 00:07:24.560
incoming messages using the SMS received
intent only the default app is able to

00:07:24.560 --> 00:07:24.570
intent only the default app is able to
 

00:07:24.570 --> 00:07:26.690
intent only the default app is able to
write new messages to the SMS provider

00:07:26.690 --> 00:07:26.700
write new messages to the SMS provider
 

00:07:26.700 --> 00:07:28.610
write new messages to the SMS provider
though other apps can continue to read

00:07:28.610 --> 00:07:28.620
though other apps can continue to read
 

00:07:28.620 --> 00:07:31.280
though other apps can continue to read
from it apps that aren't the current

00:07:31.280 --> 00:07:31.290
from it apps that aren't the current
 

00:07:31.290 --> 00:07:32.780
from it apps that aren't the current
default can also continue to send

00:07:32.780 --> 00:07:32.790
default can also continue to send
 

00:07:32.790 --> 00:07:34.370
default can also continue to send
messages here the system will write

00:07:34.370 --> 00:07:34.380
messages here the system will write
 

00:07:34.380 --> 00:07:36.140
messages here the system will write
those outgoing messages to the provider

00:07:36.140 --> 00:07:36.150
those outgoing messages to the provider
 

00:07:36.150 --> 00:07:38.780
those outgoing messages to the provider
on your behalf so the users can still

00:07:38.780 --> 00:07:38.790
on your behalf so the users can still
 

00:07:38.790 --> 00:07:41.150
on your behalf so the users can still
see them in their default app for more

00:07:41.150 --> 00:07:41.160
see them in their default app for more
 

00:07:41.160 --> 00:07:43.340
see them in their default app for more
details check out Adams dev byte

00:07:43.340 --> 00:07:43.350
details check out Adams dev byte
 

00:07:43.350 --> 00:07:45.830
details check out Adams dev byte
also included in android 4.4 are a

00:07:45.830 --> 00:07:45.840
also included in android 4.4 are a
 

00:07:45.840 --> 00:07:47.330
also included in android 4.4 are a
number of additions to help your app

00:07:47.330 --> 00:07:47.340
number of additions to help your app
 

00:07:47.340 --> 00:07:49.790
number of additions to help your app
interact with the real world including

00:07:49.790 --> 00:07:49.800
interact with the real world including
 

00:07:49.800 --> 00:07:51.860
interact with the real world including
new Bluetooth profiles for Bluetooth hid

00:07:51.860 --> 00:07:51.870
new Bluetooth profiles for Bluetooth hid
 

00:07:51.870 --> 00:07:54.230
new Bluetooth profiles for Bluetooth hid
/ GATT which provides apps with a low

00:07:54.230 --> 00:07:54.240
/ GATT which provides apps with a low
 

00:07:54.240 --> 00:07:56.180
/ GATT which provides apps with a low
latency link for low-power peripheral

00:07:56.180 --> 00:07:56.190
latency link for low-power peripheral
 

00:07:56.190 --> 00:07:58.730
latency link for low-power peripheral
devices like mouse mice joysticks and

00:07:58.730 --> 00:07:58.740
devices like mouse mice joysticks and
 

00:07:58.740 --> 00:08:01.190
devices like mouse mice joysticks and
keyboards and Bluetooth map for nearby

00:08:01.190 --> 00:08:01.200
keyboards and Bluetooth map for nearby
 

00:08:01.200 --> 00:08:03.710
keyboards and Bluetooth map for nearby
device message exchange there's also new

00:08:03.710 --> 00:08:03.720
device message exchange there's also new
 

00:08:03.720 --> 00:08:05.420
device message exchange there's also new
platform support for built-in IR

00:08:05.420 --> 00:08:05.430
platform support for built-in IR
 

00:08:05.430 --> 00:08:07.280
platform support for built-in IR
blasters with a new API that lets you

00:08:07.280 --> 00:08:07.290
blasters with a new API that lets you
 

00:08:07.290 --> 00:08:08.780
blasters with a new API that lets you
check whether the device has an infrared

00:08:08.780 --> 00:08:08.790
check whether the device has an infrared
 

00:08:08.790 --> 00:08:10.940
check whether the device has an infrared
emitter query its carrier frequencies

00:08:10.940 --> 00:08:10.950
emitter query its carrier frequencies
 

00:08:10.950 --> 00:08:13.310
emitter query its carrier frequencies
and then send infrared signals there's

00:08:13.310 --> 00:08:13.320
and then send infrared signals there's
 

00:08:13.320 --> 00:08:16.159
and then send infrared signals there's
also support for host card emulation hce

00:08:16.159 --> 00:08:16.169
also support for host card emulation hce
 

00:08:16.169 --> 00:08:18.530
also support for host card emulation hce
add support for secure NFC based

00:08:18.530 --> 00:08:18.540
add support for secure NFC based
 

00:08:18.540 --> 00:08:20.180
add support for secure NFC based
transactions for things like payments

00:08:20.180 --> 00:08:20.190
transactions for things like payments
 

00:08:20.190 --> 00:08:22.730
transactions for things like payments
loyalty programs card access and transit

00:08:22.730 --> 00:08:22.740
loyalty programs card access and transit
 

00:08:22.740 --> 00:08:25.040
loyalty programs card access and transit
passes by allowing your app to emulate

00:08:25.040 --> 00:08:25.050
passes by allowing your app to emulate
 

00:08:25.050 --> 00:08:26.960
passes by allowing your app to emulate
an NFC smart card though without

00:08:26.960 --> 00:08:26.970
an NFC smart card though without
 

00:08:26.970 --> 00:08:28.970
an NFC smart card though without
requiring a provisioned secure element

00:08:28.970 --> 00:08:28.980
requiring a provisioned secure element
 

00:08:28.980 --> 00:08:31.670
requiring a provisioned secure element
it also supports a new reader mode to

00:08:31.670 --> 00:08:31.680
it also supports a new reader mode to
 

00:08:31.680 --> 00:08:33.500
it also supports a new reader mode to
have your app act as a reader for HTE

00:08:33.500 --> 00:08:33.510
have your app act as a reader for HTE
 

00:08:33.510 --> 00:08:35.829
have your app act as a reader for HTE
cards and other NFC based transactions

00:08:35.829 --> 00:08:35.839
cards and other NFC based transactions
 

00:08:35.839 --> 00:08:37.430
cards and other NFC based transactions
Android HCE

00:08:37.430 --> 00:08:37.440
Android HCE
 

00:08:37.440 --> 00:08:39.980
Android HCE
emulates ISO seven eight 16-bit smart

00:08:39.980 --> 00:08:39.990
emulates ISO seven eight 16-bit smart
 

00:08:39.990 --> 00:08:43.100
emulates ISO seven eight 16-bit smart
cards using the ISO 14 for 3-4 protocol

00:08:43.100 --> 00:08:43.110
cards using the ISO 14 for 3-4 protocol
 

00:08:43.110 --> 00:08:44.600
cards using the ISO 14 for 3-4 protocol
for transmission along with the

00:08:44.600 --> 00:08:44.610
for transmission along with the
 

00:08:44.610 --> 00:08:46.670
for transmission along with the
application identifiers as defined in

00:08:46.670 --> 00:08:46.680
application identifiers as defined in
 

00:08:46.680 --> 00:08:49.820
application identifiers as defined in
ISO 78 16-4 as the basis for routing

00:08:49.820 --> 00:08:49.830
ISO 78 16-4 as the basis for routing
 

00:08:49.830 --> 00:08:50.670
ISO 78 16-4 as the basis for routing
transaction

00:08:50.670 --> 00:08:50.680
transaction
 

00:08:50.680 --> 00:08:52.790
transaction
to the correct Android applications

00:08:52.790 --> 00:08:52.800
to the correct Android applications
 

00:08:52.800 --> 00:08:55.769
to the correct Android applications
there's also native platform support for

00:08:55.769 --> 00:08:55.779
there's also native platform support for
 

00:08:55.779 --> 00:08:57.750
there's also native platform support for
printing along with api's for managing

00:08:57.750 --> 00:08:57.760
printing along with api's for managing
 

00:08:57.760 --> 00:08:59.880
printing along with api's for managing
printing over Wi-Fi or cloud hosted

00:08:59.880 --> 00:08:59.890
printing over Wi-Fi or cloud hosted
 

00:08:59.890 --> 00:09:03.420
printing over Wi-Fi or cloud hosted
services such as Google Cloud Print you

00:09:03.420 --> 00:09:03.430
services such as Google Cloud Print you
 

00:09:03.430 --> 00:09:05.190
services such as Google Cloud Print you
can use these new api's to add printing

00:09:05.190 --> 00:09:05.200
can use these new api's to add printing
 

00:09:05.200 --> 00:09:06.750
can use these new api's to add printing
capabilities for nearly any type of

00:09:06.750 --> 00:09:06.760
capabilities for nearly any type of
 

00:09:06.760 --> 00:09:09.120
capabilities for nearly any type of
content from local images and documents

00:09:09.120 --> 00:09:09.130
content from local images and documents
 

00:09:09.130 --> 00:09:11.190
content from local images and documents
to network data or anything that you can

00:09:11.190 --> 00:09:11.200
to network data or anything that you can
 

00:09:11.200 --> 00:09:13.860
to network data or anything that you can
render to a canvas and reduces PDF as

00:09:13.860 --> 00:09:13.870
render to a canvas and reduces PDF as
 

00:09:13.870 --> 00:09:15.690
render to a canvas and reduces PDF as
its primary file format for printing so

00:09:15.690 --> 00:09:15.700
its primary file format for printing so
 

00:09:15.700 --> 00:09:17.100
its primary file format for printing so
it's best practice to use the helper

00:09:17.100 --> 00:09:17.110
it's best practice to use the helper
 

00:09:17.110 --> 00:09:19.079
it's best practice to use the helper
classes to print bitmaps or to generate

00:09:19.079 --> 00:09:19.089
classes to print bitmaps or to generate
 

00:09:19.089 --> 00:09:21.449
classes to print bitmaps or to generate
a properly paginate at PDF version of

00:09:21.449 --> 00:09:21.459
a properly paginate at PDF version of
 

00:09:21.459 --> 00:09:24.180
a properly paginate at PDF version of
your content for convenience the

00:09:24.180 --> 00:09:24.190
your content for convenience the
 

00:09:24.190 --> 00:09:26.519
your content for convenience the
printing API provides native and webview

00:09:26.519 --> 00:09:26.529
printing API provides native and webview
 

00:09:26.529 --> 00:09:28.470
printing API provides native and webview
help us to let you create PDFs using

00:09:28.470 --> 00:09:28.480
help us to let you create PDFs using
 

00:09:28.480 --> 00:09:30.810
help us to let you create PDFs using
standard Android drawing AP is if your

00:09:30.810 --> 00:09:30.820
standard Android drawing AP is if your
 

00:09:30.820 --> 00:09:33.269
standard Android drawing AP is if your
app knows how to draw the content it can

00:09:33.269 --> 00:09:33.279
app knows how to draw the content it can
 

00:09:33.279 --> 00:09:35.910
app knows how to draw the content it can
create a PDF for printing it Nazmul

00:09:35.910 --> 00:09:35.920
create a PDF for printing it Nazmul
 

00:09:35.920 --> 00:09:37.710
create a PDF for printing it Nazmul
Idris summarizes the best practices for

00:09:37.710 --> 00:09:37.720
Idris summarizes the best practices for
 

00:09:37.720 --> 00:09:39.840
Idris summarizes the best practices for
getting started with printing on Android

00:09:39.840 --> 00:09:39.850
getting started with printing on Android
 

00:09:39.850 --> 00:09:42.780
getting started with printing on Android
in this deaf-blind Kitcat also

00:09:42.780 --> 00:09:42.790
in this deaf-blind Kitcat also
 

00:09:42.790 --> 00:09:44.760
in this deaf-blind Kitcat also
introduces new ways to improve the power

00:09:44.760 --> 00:09:44.770
introduces new ways to improve the power
 

00:09:44.770 --> 00:09:47.220
introduces new ways to improve the power
use profile of device sensors starting

00:09:47.220 --> 00:09:47.230
use profile of device sensors starting
 

00:09:47.230 --> 00:09:48.990
use profile of device sensors starting
with cents of batching a new

00:09:48.990 --> 00:09:49.000
with cents of batching a new
 

00:09:49.000 --> 00:09:50.639
with cents of batching a new
optimization that delivers sensor

00:09:50.639 --> 00:09:50.649
optimization that delivers sensor
 

00:09:50.649 --> 00:09:52.860
optimization that delivers sensor
results in batches rather than as they

00:09:52.860 --> 00:09:52.870
results in batches rather than as they
 

00:09:52.870 --> 00:09:55.019
results in batches rather than as they
are detected this lets the application

00:09:55.019 --> 00:09:55.029
are detected this lets the application
 

00:09:55.029 --> 00:09:56.730
are detected this lets the application
processor stay in a low-power state

00:09:56.730 --> 00:09:56.740
processor stay in a low-power state
 

00:09:56.740 --> 00:09:59.100
processor stay in a low-power state
until each batch is delivered you can

00:09:59.100 --> 00:09:59.110
until each batch is delivered you can
 

00:09:59.110 --> 00:10:00.600
until each batch is delivered you can
define the interval at which you receive

00:10:00.600 --> 00:10:00.610
define the interval at which you receive
 

00:10:00.610 --> 00:10:02.670
define the interval at which you receive
batches or request immediate delivery of

00:10:02.670 --> 00:10:02.680
batches or request immediate delivery of
 

00:10:02.680 --> 00:10:05.130
batches or request immediate delivery of
events between batch cycles there's also

00:10:05.130 --> 00:10:05.140
events between batch cycles there's also
 

00:10:05.140 --> 00:10:07.410
events between batch cycles there's also
two new composite sensors step detection

00:10:07.410 --> 00:10:07.420
two new composite sensors step detection
 

00:10:07.420 --> 00:10:09.240
two new composite sensors step detection
and step counting both of which were

00:10:09.240 --> 00:10:09.250
and step counting both of which were
 

00:10:09.250 --> 00:10:10.829
and step counting both of which were
implemented within hardware to help

00:10:10.829 --> 00:10:10.839
implemented within hardware to help
 

00:10:10.839 --> 00:10:12.600
implemented within hardware to help
minimize the Associated power

00:10:12.600 --> 00:10:12.610
minimize the Associated power
 

00:10:12.610 --> 00:10:14.730
minimize the Associated power
consumption now that's just a small

00:10:14.730 --> 00:10:14.740
consumption now that's just a small
 

00:10:14.740 --> 00:10:16.380
consumption now that's just a small
taste of the new API is available

00:10:16.380 --> 00:10:16.390
taste of the new API is available
 

00:10:16.390 --> 00:10:19.140
taste of the new API is available
there's also a completely new

00:10:19.140 --> 00:10:19.150
there's also a completely new
 

00:10:19.150 --> 00:10:20.940
there's also a completely new
implementation of webview based on

00:10:20.940 --> 00:10:20.950
implementation of webview based on
 

00:10:20.950 --> 00:10:22.920
implementation of webview based on
Google chromium that offers the latest

00:10:22.920 --> 00:10:22.930
Google chromium that offers the latest
 

00:10:22.930 --> 00:10:24.829
Google chromium that offers the latest
in standard support performance and keep

00:10:24.829 --> 00:10:24.839
in standard support performance and keep
 

00:10:24.839 --> 00:10:27.150
in standard support performance and keep
compatibility and most of the html5

00:10:27.150 --> 00:10:27.160
compatibility and most of the html5
 

00:10:27.160 --> 00:10:29.220
compatibility and most of the html5
features available in Chrome for Android

00:10:29.220 --> 00:10:29.230
features available in Chrome for Android
 

00:10:29.230 --> 00:10:32.699
features available in Chrome for Android
version 30 plus an updated JavaScript v8

00:10:32.699 --> 00:10:32.709
version 30 plus an updated JavaScript v8
 

00:10:32.709 --> 00:10:35.370
version 30 plus an updated JavaScript v8
engine there's also a range of new API

00:10:35.370 --> 00:10:35.380
engine there's also a range of new API
 

00:10:35.380 --> 00:10:37.110
engine there's also a range of new API
eyes to better support RTL locales

00:10:37.110 --> 00:10:37.120
eyes to better support RTL locales
 

00:10:37.120 --> 00:10:39.000
eyes to better support RTL locales
including drawable mirroring and pseudo

00:10:39.000 --> 00:10:39.010
including drawable mirroring and pseudo
 

00:10:39.010 --> 00:10:41.819
including drawable mirroring and pseudo
locales declaring a drawable as Auto

00:10:41.819 --> 00:10:41.829
locales declaring a drawable as Auto
 

00:10:41.829 --> 00:10:43.920
locales declaring a drawable as Auto
Mirabal will allow the system to flip it

00:10:43.920 --> 00:10:43.930
Mirabal will allow the system to flip it
 

00:10:43.930 --> 00:10:46.680
Mirabal will allow the system to flip it
automatically for users using an RTL

00:10:46.680 --> 00:10:46.690
automatically for users using an RTL
 

00:10:46.690 --> 00:10:48.660
automatically for users using an RTL
locale preventing you from having to

00:10:48.660 --> 00:10:48.670
locale preventing you from having to
 

00:10:48.670 --> 00:10:51.180
locale preventing you from having to
duplicate your assets Android now also

00:10:51.180 --> 00:10:51.190
duplicate your assets Android now also
 

00:10:51.190 --> 00:10:53.639
duplicate your assets Android now also
includes an RTL pseudo locale as a new

00:10:53.639 --> 00:10:53.649
includes an RTL pseudo locale as a new
 

00:10:53.649 --> 00:10:55.740
includes an RTL pseudo locale as a new
developer option the pseudo locale

00:10:55.740 --> 00:10:55.750
developer option the pseudo locale
 

00:10:55.750 --> 00:10:57.720
developer option the pseudo locale
switches the device to an RTO layout for

00:10:57.720 --> 00:10:57.730
switches the device to an RTO layout for
 

00:10:57.730 --> 00:10:59.670
switches the device to an RTO layout for
all locales and displays text in the

00:10:59.670 --> 00:10:59.680
all locales and displays text in the
 

00:10:59.680 --> 00:11:01.890
all locales and displays text in the
current language this can help you find

00:11:01.890 --> 00:11:01.900
current language this can help you find
 

00:11:01.900 --> 00:11:03.910
current language this can help you find
layout issues across your app with

00:11:03.910 --> 00:11:03.920
layout issues across your app with
 

00:11:03.920 --> 00:11:06.040
layout issues across your app with
having to display the app in an RTL

00:11:06.040 --> 00:11:06.050
having to display the app in an RTL
 

00:11:06.050 --> 00:11:07.449
having to display the app in an RTL
language that you may not be able to

00:11:07.449 --> 00:11:07.459
language that you may not be able to
 

00:11:07.459 --> 00:11:10.000
language that you may not be able to
read there's also good news for fans of

00:11:10.000 --> 00:11:10.010
read there's also good news for fans of
 

00:11:10.010 --> 00:11:11.590
read there's also good news for fans of
high performance computation with

00:11:11.590 --> 00:11:11.600
high performance computation with
 

00:11:11.600 --> 00:11:13.120
high performance computation with
performance improvements to render

00:11:13.120 --> 00:11:13.130
performance improvements to render
 

00:11:13.130 --> 00:11:14.860
performance improvements to render
script and the new ability to take

00:11:14.860 --> 00:11:14.870
script and the new ability to take
 

00:11:14.870 --> 00:11:16.420
script and the new ability to take
advantage of render script directly from

00:11:16.420 --> 00:11:16.430
advantage of render script directly from
 

00:11:16.430 --> 00:11:19.420
advantage of render script directly from
your native code and you C++ API in the

00:11:19.420 --> 00:11:19.430
your native code and you C++ API in the
 

00:11:19.430 --> 00:11:21.400
your native code and you C++ API in the
NDK lets you access the same render

00:11:21.400 --> 00:11:21.410
NDK lets you access the same render
 

00:11:21.410 --> 00:11:22.900
NDK lets you access the same render
script functionality available through

00:11:22.900 --> 00:11:22.910
script functionality available through
 

00:11:22.910 --> 00:11:25.090
script functionality available through
the framework api's including script

00:11:25.090 --> 00:11:25.100
the framework api's including script
 

00:11:25.100 --> 00:11:28.060
the framework api's including script
intrinsics and custom kernels last but

00:11:28.060 --> 00:11:28.070
intrinsics and custom kernels last but
 

00:11:28.070 --> 00:11:30.699
intrinsics and custom kernels last but
by no means least is a series of

00:11:30.699 --> 00:11:30.709
by no means least is a series of
 

00:11:30.709 --> 00:11:32.410
by no means least is a series of
security enhancements including an

00:11:32.410 --> 00:11:32.420
security enhancements including an
 

00:11:32.420 --> 00:11:34.060
security enhancements including an
update to Android's SELinux

00:11:34.060 --> 00:11:34.070
update to Android's SELinux
 

00:11:34.070 --> 00:11:36.280
update to Android's SELinux
configuration changing from permissive

00:11:36.280 --> 00:11:36.290
configuration changing from permissive
 

00:11:36.290 --> 00:11:38.769
configuration changing from permissive
to enforcing and improved cryptographic

00:11:38.769 --> 00:11:38.779
to enforcing and improved cryptographic
 

00:11:38.779 --> 00:11:41.560
to enforcing and improved cryptographic
algorithms elliptic curve digital

00:11:41.560 --> 00:11:41.570
algorithms elliptic curve digital
 

00:11:41.570 --> 00:11:43.180
algorithms elliptic curve digital
signature algorithm support has been

00:11:43.180 --> 00:11:43.190
signature algorithm support has been
 

00:11:43.190 --> 00:11:44.800
signature algorithm support has been
added to the keystore provider and the

00:11:44.800 --> 00:11:44.810
added to the keystore provider and the
 

00:11:44.810 --> 00:11:46.720
added to the keystore provider and the
script key derivation function is now

00:11:46.720 --> 00:11:46.730
script key derivation function is now
 

00:11:46.730 --> 00:11:48.100
script key derivation function is now
implemented to protect the cryptographic

00:11:48.100 --> 00:11:48.110
implemented to protect the cryptographic
 

00:11:48.110 --> 00:11:51.600
implemented to protect the cryptographic
keys used for full disk encryption in

00:11:51.600 --> 00:11:51.610
keys used for full disk encryption in
 

00:11:51.610 --> 00:11:53.860
keys used for full disk encryption in
entirely related news there is a new

00:11:53.860 --> 00:11:53.870
entirely related news there is a new
 

00:11:53.870 --> 00:11:56.199
entirely related news there is a new
device in town with the launch of the

00:11:56.199 --> 00:11:56.209
device in town with the launch of the
 

00:11:56.209 --> 00:11:58.720
device in town with the launch of the
Nexus 5 check out Google Play for all

00:11:58.720 --> 00:11:58.730
Nexus 5 check out Google Play for all
 

00:11:58.730 --> 00:12:00.129
Nexus 5 check out Google Play for all
the details and grab one for yourself

00:12:00.129 --> 00:12:00.139
the details and grab one for yourself
 

00:12:00.139 --> 00:12:02.439
the details and grab one for yourself
purely for development purposes of

00:12:02.439 --> 00:12:02.449
purely for development purposes of
 

00:12:02.449 --> 00:12:05.710
purely for development purposes of
course the Android 4.4 SDK is now

00:12:05.710 --> 00:12:05.720
course the Android 4.4 SDK is now
 

00:12:05.720 --> 00:12:07.389
course the Android 4.4 SDK is now
available for your downloading and code

00:12:07.389 --> 00:12:07.399
available for your downloading and code
 

00:12:07.399 --> 00:12:09.400
available for your downloading and code
updating pleasure using the SDK manager

00:12:09.400 --> 00:12:09.410
updating pleasure using the SDK manager
 

00:12:09.410 --> 00:12:11.829
updating pleasure using the SDK manager
and you can get more details on all of

00:12:11.829 --> 00:12:11.839
and you can get more details on all of
 

00:12:11.839 --> 00:12:13.960
and you can get more details on all of
the new API s features best practice in

00:12:13.960 --> 00:12:13.970
the new API s features best practice in
 

00:12:13.970 --> 00:12:14.980
the new API s features best practice in
every other change at

00:12:14.980 --> 00:12:14.990
every other change at
 

00:12:14.990 --> 00:12:17.620
every other change at
developers.google.com

