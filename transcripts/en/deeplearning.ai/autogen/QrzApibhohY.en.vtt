WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.850
 
gradient checking this technique this

00:00:01.850 --> 00:00:01.860
gradient checking this technique this
 

00:00:01.860 --> 00:00:04.249
gradient checking this technique this
helped me save tons of time and help me

00:00:04.249 --> 00:00:04.259
helped me save tons of time and help me
 

00:00:04.259 --> 00:00:06.050
helped me save tons of time and help me
find bugs in my implementation of

00:00:06.050 --> 00:00:06.060
find bugs in my implementation of
 

00:00:06.060 --> 00:00:08.810
find bugs in my implementation of
backpropagation many times let's see how

00:00:08.810 --> 00:00:08.820
backpropagation many times let's see how
 

00:00:08.820 --> 00:00:11.390
backpropagation many times let's see how
you can use it to to debug or to verify

00:00:11.390 --> 00:00:11.400
you can use it to to debug or to verify
 

00:00:11.400 --> 00:00:13.490
you can use it to to debug or to verify
that your implementation of that top is

00:00:13.490 --> 00:00:13.500
that your implementation of that top is
 

00:00:13.500 --> 00:00:16.010
that your implementation of that top is
correct so your new network will have

00:00:16.010 --> 00:00:16.020
correct so your new network will have
 

00:00:16.020 --> 00:00:18.500
correct so your new network will have
some set of parameters W 1 V 1 and so on

00:00:18.500 --> 00:00:18.510
some set of parameters W 1 V 1 and so on
 

00:00:18.510 --> 00:00:21.740
some set of parameters W 1 V 1 and so on
up to WL PL so to implement gradient

00:00:21.740 --> 00:00:21.750
up to WL PL so to implement gradient
 

00:00:21.750 --> 00:00:23.179
up to WL PL so to implement gradient
checking the first thing you should do

00:00:23.179 --> 00:00:23.189
checking the first thing you should do
 

00:00:23.189 --> 00:00:25.130
checking the first thing you should do
is take all your parameters and reshape

00:00:25.130 --> 00:00:25.140
is take all your parameters and reshape
 

00:00:25.140 --> 00:00:29.900
is take all your parameters and reshape
them into a giant vector theta so so

00:00:29.900 --> 00:00:29.910
them into a giant vector theta so so
 

00:00:29.910 --> 00:00:31.669
them into a giant vector theta so so
what you should do is take W which is a

00:00:31.669 --> 00:00:31.679
what you should do is take W which is a
 

00:00:31.679 --> 00:00:34.069
what you should do is take W which is a
matrix and reshape it into a vector

00:00:34.069 --> 00:00:34.079
matrix and reshape it into a vector
 

00:00:34.079 --> 00:00:36.620
matrix and reshape it into a vector
you'll take all of these WS and reshape

00:00:36.620 --> 00:00:36.630
you'll take all of these WS and reshape
 

00:00:36.630 --> 00:00:38.900
you'll take all of these WS and reshape
them into vectors and then concatenate

00:00:38.900 --> 00:00:38.910
them into vectors and then concatenate
 

00:00:38.910 --> 00:00:42.500
them into vectors and then concatenate
all of these things so that you have a

00:00:42.500 --> 00:00:42.510
all of these things so that you have a
 

00:00:42.510 --> 00:00:45.590
all of these things so that you have a
giant vector theta giant vector

00:00:45.590 --> 00:00:45.600
giant vector theta giant vector
 

00:00:45.600 --> 00:00:47.779
giant vector theta giant vector
parameters theta so instead of a cost

00:00:47.779 --> 00:00:47.789
parameters theta so instead of a cost
 

00:00:47.789 --> 00:00:51.380
parameters theta so instead of a cost
function J being a function of you know

00:00:51.380 --> 00:00:51.390
function J being a function of you know
 

00:00:51.390 --> 00:00:54.229
function J being a function of you know
the W's and B's you will now have the

00:00:54.229 --> 00:00:54.239
the W's and B's you will now have the
 

00:00:54.239 --> 00:00:56.900
the W's and B's you will now have the
cost function J being just a function of

00:00:56.900 --> 00:00:56.910
cost function J being just a function of
 

00:00:56.910 --> 00:01:01.549
cost function J being just a function of
theta mixed with W and be ordered the

00:01:01.549 --> 00:01:01.559
theta mixed with W and be ordered the
 

00:01:01.559 --> 00:01:05.000
theta mixed with W and be ordered the
same way you can also take DW 1 DB 1 and

00:01:05.000 --> 00:01:05.010
same way you can also take DW 1 DB 1 and
 

00:01:05.010 --> 00:01:07.910
same way you can also take DW 1 DB 1 and
so on and reshape them into Big John

00:01:07.910 --> 00:01:07.920
so on and reshape them into Big John
 

00:01:07.920 --> 00:01:10.550
so on and reshape them into Big John
vector D theta of the same dimension as

00:01:10.550 --> 00:01:10.560
vector D theta of the same dimension as
 

00:01:10.560 --> 00:01:14.420
vector D theta of the same dimension as
theta right so same as before reshape DW

00:01:14.420 --> 00:01:14.430
theta right so same as before reshape DW
 

00:01:14.430 --> 00:01:16.700
theta right so same as before reshape DW
1 into the matrix EB ones already vector

00:01:16.700 --> 00:01:16.710
1 into the matrix EB ones already vector
 

00:01:16.710 --> 00:01:19.760
1 into the matrix EB ones already vector
reshape dwl all the DWS which are

00:01:19.760 --> 00:01:19.770
reshape dwl all the DWS which are
 

00:01:19.770 --> 00:01:23.330
reshape dwl all the DWS which are
matrices remember DW 1 has the same

00:01:23.330 --> 00:01:23.340
matrices remember DW 1 has the same
 

00:01:23.340 --> 00:01:26.300
matrices remember DW 1 has the same
dimension as W 1 DB 1 is sin which the B

00:01:26.300 --> 00:01:26.310
dimension as W 1 DB 1 is sin which the B
 

00:01:26.310 --> 00:01:28.600
dimension as W 1 DB 1 is sin which the B
1 so the same sort of reshaping and

00:01:28.600 --> 00:01:28.610
1 so the same sort of reshaping and
 

00:01:28.610 --> 00:01:31.760
1 so the same sort of reshaping and
concatenation operation you can then

00:01:31.760 --> 00:01:31.770
concatenation operation you can then
 

00:01:31.770 --> 00:01:34.100
concatenation operation you can then
reshape all of these derivatives into a

00:01:34.100 --> 00:01:34.110
reshape all of these derivatives into a
 

00:01:34.110 --> 00:01:36.800
reshape all of these derivatives into a
giant vector D theta which is same

00:01:36.800 --> 00:01:36.810
giant vector D theta which is same
 

00:01:36.810 --> 00:01:39.440
giant vector D theta which is same
dimension as theta so the question is

00:01:39.440 --> 00:01:39.450
dimension as theta so the question is
 

00:01:39.450 --> 00:01:44.120
dimension as theta so the question is
now is D theta the gradient or the slope

00:01:44.120 --> 00:01:44.130
now is D theta the gradient or the slope
 

00:01:44.130 --> 00:01:47.840
now is D theta the gradient or the slope
of the cost function J so just how you

00:01:47.840 --> 00:01:47.850
of the cost function J so just how you
 

00:01:47.850 --> 00:01:49.880
of the cost function J so just how you
implement gradient checking and often

00:01:49.880 --> 00:01:49.890
implement gradient checking and often
 

00:01:49.890 --> 00:01:51.740
implement gradient checking and often
abbreviate gradient checking into grande

00:01:51.740 --> 00:01:51.750
abbreviate gradient checking into grande
 

00:01:51.750 --> 00:01:54.740
abbreviate gradient checking into grande
check so first remember that J is now a

00:01:54.740 --> 00:01:54.750
check so first remember that J is now a
 

00:01:54.750 --> 00:01:57.740
check so first remember that J is now a
function of the giant parameter theta

00:01:57.740 --> 00:01:57.750
function of the giant parameter theta
 

00:01:57.750 --> 00:01:59.630
function of the giant parameter theta
right so you can also expand without the

00:01:59.630 --> 00:01:59.640
right so you can also expand without the
 

00:01:59.640 --> 00:02:02.389
right so you can also expand without the
J is a function of theta 1 theta 2 theta

00:02:02.389 --> 00:02:02.399
J is a function of theta 1 theta 2 theta
 

00:02:02.399 --> 00:02:07.160
J is a function of theta 1 theta 2 theta
3 and so on right however whatever the

00:02:07.160 --> 00:02:07.170
3 and so on right however whatever the
 

00:02:07.170 --> 00:02:10.249
3 and so on right however whatever the
dimension of this giant parameter vector

00:02:10.249 --> 00:02:10.259
dimension of this giant parameter vector
 

00:02:10.259 --> 00:02:11.130
dimension of this giant parameter vector
theta

00:02:11.130 --> 00:02:11.140
theta
 

00:02:11.140 --> 00:02:13.890
theta
so the implement drag check what you're

00:02:13.890 --> 00:02:13.900
so the implement drag check what you're
 

00:02:13.900 --> 00:02:16.170
so the implement drag check what you're
going to do is implement a loop so that

00:02:16.170 --> 00:02:16.180
going to do is implement a loop so that
 

00:02:16.180 --> 00:02:19.700
going to do is implement a loop so that
for each I so each component of data

00:02:19.700 --> 00:02:19.710
for each I so each component of data
 

00:02:19.710 --> 00:02:26.640
for each I so each component of data
let's compute D theta aprox I to be and

00:02:26.640 --> 00:02:26.650
let's compute D theta aprox I to be and
 

00:02:26.650 --> 00:02:27.570
let's compute D theta aprox I to be and
we're going to take a two sided

00:02:27.570 --> 00:02:27.580
we're going to take a two sided
 

00:02:27.580 --> 00:02:30.480
we're going to take a two sided
difference so I take J of theta theta 1

00:02:30.480 --> 00:02:30.490
difference so I take J of theta theta 1
 

00:02:30.490 --> 00:02:34.890
difference so I take J of theta theta 1
theta 2 up to theta I and we're going to

00:02:34.890 --> 00:02:34.900
theta 2 up to theta I and we're going to
 

00:02:34.900 --> 00:02:38.400
theta 2 up to theta I and we're going to
nudge theta I to add epsilon to this so

00:02:38.400 --> 00:02:38.410
nudge theta I to add epsilon to this so
 

00:02:38.410 --> 00:02:40.560
nudge theta I to add epsilon to this so
just you know increase play the I by

00:02:40.560 --> 00:02:40.570
just you know increase play the I by
 

00:02:40.570 --> 00:02:42.150
just you know increase play the I by
epsilon and keep everything all the same

00:02:42.150 --> 00:02:42.160
epsilon and keep everything all the same
 

00:02:42.160 --> 00:02:44.070
epsilon and keep everything all the same
and because it taking a two-sided

00:02:44.070 --> 00:02:44.080
and because it taking a two-sided
 

00:02:44.080 --> 00:02:46.680
and because it taking a two-sided
difference we're going to do the same on

00:02:46.680 --> 00:02:46.690
difference we're going to do the same on
 

00:02:46.690 --> 00:02:49.260
difference we're going to do the same on
the other side will stay to open now

00:02:49.260 --> 00:02:49.270
the other side will stay to open now
 

00:02:49.270 --> 00:02:52.229
the other side will stay to open now
minus epsilon and then all of the other

00:02:52.229 --> 00:02:52.239
minus epsilon and then all of the other
 

00:02:52.239 --> 00:02:53.970
minus epsilon and then all of the other
elements of theta are left alone and

00:02:53.970 --> 00:02:53.980
elements of theta are left alone and
 

00:02:53.980 --> 00:02:57.930
elements of theta are left alone and
then we'll take this and we divided by 2

00:02:57.930 --> 00:02:57.940
then we'll take this and we divided by 2
 

00:02:57.940 --> 00:03:01.440
then we'll take this and we divided by 2
theta and what we saw on from the

00:03:01.440 --> 00:03:01.450
theta and what we saw on from the
 

00:03:01.450 --> 00:03:04.170
theta and what we saw on from the
previous video is that this should be

00:03:04.170 --> 00:03:04.180
previous video is that this should be
 

00:03:04.180 --> 00:03:10.680
previous video is that this should be
approximately equal to D theta I which

00:03:10.680 --> 00:03:10.690
approximately equal to D theta I which
 

00:03:10.690 --> 00:03:12.300
approximately equal to D theta I which
which is supposed to be the partial

00:03:12.300 --> 00:03:12.310
which is supposed to be the partial
 

00:03:12.310 --> 00:03:15.630
which is supposed to be the partial
derivative of G with respect to I guess

00:03:15.630 --> 00:03:15.640
derivative of G with respect to I guess
 

00:03:15.640 --> 00:03:19.110
derivative of G with respect to I guess
data I if D theta I is you know the

00:03:19.110 --> 00:03:19.120
data I if D theta I is you know the
 

00:03:19.120 --> 00:03:21.330
data I if D theta I is you know the
derivative of the cost function J so

00:03:21.330 --> 00:03:21.340
derivative of the cost function J so
 

00:03:21.340 --> 00:03:22.259
derivative of the cost function J so
what you're going to do is you're going

00:03:22.259 --> 00:03:22.269
what you're going to do is you're going
 

00:03:22.269 --> 00:03:24.630
what you're going to do is you're going
to compute this for every value of I and

00:03:24.630 --> 00:03:24.640
to compute this for every value of I and
 

00:03:24.640 --> 00:03:27.210
to compute this for every value of I and
at the end you now end up with two

00:03:27.210 --> 00:03:27.220
at the end you now end up with two
 

00:03:27.220 --> 00:03:30.500
at the end you now end up with two
vectors you end up with this D theta

00:03:30.500 --> 00:03:30.510
vectors you end up with this D theta
 

00:03:30.510 --> 00:03:33.509
vectors you end up with this D theta
aprox and this is going to be the same

00:03:33.509 --> 00:03:33.519
aprox and this is going to be the same
 

00:03:33.519 --> 00:03:36.509
aprox and this is going to be the same
dimension as D theta and both of these

00:03:36.509 --> 00:03:36.519
dimension as D theta and both of these
 

00:03:36.519 --> 00:03:38.610
dimension as D theta and both of these
are in turn the same dimension as theta

00:03:38.610 --> 00:03:38.620
are in turn the same dimension as theta
 

00:03:38.620 --> 00:03:40.770
are in turn the same dimension as theta
and what you want to do is check of

00:03:40.770 --> 00:03:40.780
and what you want to do is check of
 

00:03:40.780 --> 00:03:43.199
and what you want to do is check of
these vectors are approximately equal to

00:03:43.199 --> 00:03:43.209
these vectors are approximately equal to
 

00:03:43.209 --> 00:03:46.380
these vectors are approximately equal to
each other so in detail well how do you

00:03:46.380 --> 00:03:46.390
each other so in detail well how do you
 

00:03:46.390 --> 00:03:48.360
each other so in detail well how do you
define whether or not two vectors are

00:03:48.360 --> 00:03:48.370
define whether or not two vectors are
 

00:03:48.370 --> 00:03:50.640
define whether or not two vectors are
really reasonably close to each other

00:03:50.640 --> 00:03:50.650
really reasonably close to each other
 

00:03:50.650 --> 00:03:52.979
really reasonably close to each other
what I do is the following on I would

00:03:52.979 --> 00:03:52.989
what I do is the following on I would
 

00:03:52.989 --> 00:03:55.710
what I do is the following on I would
compute the Euclidean distance between

00:03:55.710 --> 00:03:55.720
compute the Euclidean distance between
 

00:03:55.720 --> 00:03:58.860
compute the Euclidean distance between
these two vectors D theta aprox minus D

00:03:58.860 --> 00:03:58.870
these two vectors D theta aprox minus D
 

00:03:58.870 --> 00:04:02.400
these two vectors D theta aprox minus D
theta so just - OH - normal this notice

00:04:02.400 --> 00:04:02.410
theta so just - OH - normal this notice
 

00:04:02.410 --> 00:04:04.199
theta so just - OH - normal this notice
there's no square on top so this is the

00:04:04.199 --> 00:04:04.209
there's no square on top so this is the
 

00:04:04.209 --> 00:04:05.850
there's no square on top so this is the
sum of squares of elements of the

00:04:05.850 --> 00:04:05.860
sum of squares of elements of the
 

00:04:05.860 --> 00:04:07.380
sum of squares of elements of the
differences and then you take a square

00:04:07.380 --> 00:04:07.390
differences and then you take a square
 

00:04:07.390 --> 00:04:09.479
differences and then you take a square
root to get the Euclidean distance and

00:04:09.479 --> 00:04:09.489
root to get the Euclidean distance and
 

00:04:09.489 --> 00:04:13.080
root to get the Euclidean distance and
then just to normalize by the lengths of

00:04:13.080 --> 00:04:13.090
then just to normalize by the lengths of
 

00:04:13.090 --> 00:04:15.140
then just to normalize by the lengths of
these vectors are divided by D theta

00:04:15.140 --> 00:04:15.150
these vectors are divided by D theta
 

00:04:15.150 --> 00:04:16.319
these vectors are divided by D theta
aprox

00:04:16.319 --> 00:04:16.329
aprox
 

00:04:16.329 --> 00:04:19.949
aprox
plus D theta just take the Euclidean

00:04:19.949 --> 00:04:19.959
plus D theta just take the Euclidean
 

00:04:19.959 --> 00:04:22.760
plus D theta just take the Euclidean
length or from the defectors

00:04:22.760 --> 00:04:22.770
length or from the defectors
 

00:04:22.770 --> 00:04:25.129
length or from the defectors
the role for the denominators just in

00:04:25.129 --> 00:04:25.139
the role for the denominators just in
 

00:04:25.139 --> 00:04:26.689
the role for the denominators just in
case any of these vectors in really

00:04:26.689 --> 00:04:26.699
case any of these vectors in really
 

00:04:26.699 --> 00:04:28.550
case any of these vectors in really
small a really large you know the

00:04:28.550 --> 00:04:28.560
small a really large you know the
 

00:04:28.560 --> 00:04:31.490
small a really large you know the
denominator turns this formula

00:04:31.490 --> 00:04:31.500
denominator turns this formula
 

00:04:31.500 --> 00:04:33.710
denominator turns this formula
interracial so when you implement this

00:04:33.710 --> 00:04:33.720
interracial so when you implement this
 

00:04:33.720 --> 00:04:36.170
interracial so when you implement this
in practice I use epsilon equals maybe

00:04:36.170 --> 00:04:36.180
in practice I use epsilon equals maybe
 

00:04:36.180 --> 00:04:38.809
in practice I use epsilon equals maybe
10 to the minus 7 so you know one year

00:04:38.809 --> 00:04:38.819
10 to the minus 7 so you know one year
 

00:04:38.819 --> 00:04:41.029
10 to the minus 7 so you know one year
minus seven and with this range of

00:04:41.029 --> 00:04:41.039
minus seven and with this range of
 

00:04:41.039 --> 00:04:43.420
minus seven and with this range of
epsilon if you find that this formula

00:04:43.420 --> 00:04:43.430
epsilon if you find that this formula
 

00:04:43.430 --> 00:04:46.339
epsilon if you find that this formula
gives you a value like ten to the minus

00:04:46.339 --> 00:04:46.349
gives you a value like ten to the minus
 

00:04:46.349 --> 00:04:49.070
gives you a value like ten to the minus
seven or smaller then that's great

00:04:49.070 --> 00:04:49.080
seven or smaller then that's great
 

00:04:49.080 --> 00:04:50.930
seven or smaller then that's great
it means that your derivative

00:04:50.930 --> 00:04:50.940
it means that your derivative
 

00:04:50.940 --> 00:04:53.300
it means that your derivative
approximation is very likely correct now

00:04:53.300 --> 00:04:53.310
approximation is very likely correct now
 

00:04:53.310 --> 00:04:55.309
approximation is very likely correct now
this is just very small value it is

00:04:55.309 --> 00:04:55.319
this is just very small value it is
 

00:04:55.319 --> 00:04:57.559
this is just very small value it is
maybe on the range of ten to the minus

00:04:57.559 --> 00:04:57.569
maybe on the range of ten to the minus
 

00:04:57.569 --> 00:05:00.860
maybe on the range of ten to the minus
five I would take a careful look maybe

00:05:00.860 --> 00:05:00.870
five I would take a careful look maybe
 

00:05:00.870 --> 00:05:03.050
five I would take a careful look maybe
this is okay but I might double check

00:05:03.050 --> 00:05:03.060
this is okay but I might double check
 

00:05:03.060 --> 00:05:05.360
this is okay but I might double check
the components of this vector and make

00:05:05.360 --> 00:05:05.370
the components of this vector and make
 

00:05:05.370 --> 00:05:07.339
the components of this vector and make
sure that none of the components are to

00:05:07.339 --> 00:05:07.349
sure that none of the components are to
 

00:05:07.349 --> 00:05:09.409
sure that none of the components are to
launch and some of the components of

00:05:09.409 --> 00:05:09.419
launch and some of the components of
 

00:05:09.419 --> 00:05:11.059
launch and some of the components of
this difference are very large there may

00:05:11.059 --> 00:05:11.069
this difference are very large there may
 

00:05:11.069 --> 00:05:13.249
this difference are very large there may
be other bug somewhere and if this

00:05:13.249 --> 00:05:13.259
be other bug somewhere and if this
 

00:05:13.259 --> 00:05:15.290
be other bug somewhere and if this
formula on the left is you know on the

00:05:15.290 --> 00:05:15.300
formula on the left is you know on the
 

00:05:15.300 --> 00:05:17.480
formula on the left is you know on the
order of ten to the minus three then I

00:05:17.480 --> 00:05:17.490
order of ten to the minus three then I
 

00:05:17.490 --> 00:05:19.309
order of ten to the minus three then I
would worry it would be much more

00:05:19.309 --> 00:05:19.319
would worry it would be much more
 

00:05:19.319 --> 00:05:20.600
would worry it would be much more
concerned that maybe there's a bug

00:05:20.600 --> 00:05:20.610
concerned that maybe there's a bug
 

00:05:20.610 --> 00:05:22.459
concerned that maybe there's a bug
somewhere but you should really be

00:05:22.459 --> 00:05:22.469
somewhere but you should really be
 

00:05:22.469 --> 00:05:24.529
somewhere but you should really be
getting values much smaller than 10

00:05:24.529 --> 00:05:24.539
getting values much smaller than 10
 

00:05:24.539 --> 00:05:26.600
getting values much smaller than 10
minus vo and if there's any bigger than

00:05:26.600 --> 00:05:26.610
minus vo and if there's any bigger than
 

00:05:26.610 --> 00:05:29.149
minus vo and if there's any bigger than
10 to minus C then I would be quite

00:05:29.149 --> 00:05:29.159
10 to minus C then I would be quite
 

00:05:29.159 --> 00:05:31.249
10 to minus C then I would be quite
concerned I was seriously worried about

00:05:31.249 --> 00:05:31.259
concerned I was seriously worried about
 

00:05:31.259 --> 00:05:33.260
concerned I was seriously worried about
whether or not there's about and I would

00:05:33.260 --> 00:05:33.270
whether or not there's about and I would
 

00:05:33.270 --> 00:05:35.540
whether or not there's about and I would
then you should then look at the

00:05:35.540 --> 00:05:35.550
then you should then look at the
 

00:05:35.550 --> 00:05:37.339
then you should then look at the
individual components of theta to see

00:05:37.339 --> 00:05:37.349
individual components of theta to see
 

00:05:37.349 --> 00:05:40.129
individual components of theta to see
you know if there's a specific value of

00:05:40.129 --> 00:05:40.139
you know if there's a specific value of
 

00:05:40.139 --> 00:05:44.240
you know if there's a specific value of
I for which D theta cross I is very

00:05:44.240 --> 00:05:44.250
I for which D theta cross I is very
 

00:05:44.250 --> 00:05:46.399
I for which D theta cross I is very
different from D theta I and use that to

00:05:46.399 --> 00:05:46.409
different from D theta I and use that to
 

00:05:46.409 --> 00:05:48.350
different from D theta I and use that to
try to track down whether or not some of

00:05:48.350 --> 00:05:48.360
try to track down whether or not some of
 

00:05:48.360 --> 00:05:50.180
try to track down whether or not some of
your derivative computations might be

00:05:50.180 --> 00:05:50.190
your derivative computations might be
 

00:05:50.190 --> 00:05:51.950
your derivative computations might be
incorrect and after some amount of

00:05:51.950 --> 00:05:51.960
incorrect and after some amount of
 

00:05:51.960 --> 00:05:54.379
incorrect and after some amount of
debugging if finally it ends up being

00:05:54.379 --> 00:05:54.389
debugging if finally it ends up being
 

00:05:54.389 --> 00:05:56.749
debugging if finally it ends up being
this kind of very small value then you

00:05:56.749 --> 00:05:56.759
this kind of very small value then you
 

00:05:56.759 --> 00:05:58.839
this kind of very small value then you
probably have a correct implementation

00:05:58.839 --> 00:05:58.849
probably have a correct implementation
 

00:05:58.849 --> 00:06:01.339
probably have a correct implementation
so when implementing your network will

00:06:01.339 --> 00:06:01.349
so when implementing your network will
 

00:06:01.349 --> 00:06:03.350
so when implementing your network will
often happen as results in plan for

00:06:03.350 --> 00:06:03.360
often happen as results in plan for
 

00:06:03.360 --> 00:06:05.269
often happen as results in plan for
problems and back prop and then I might

00:06:05.269 --> 00:06:05.279
problems and back prop and then I might
 

00:06:05.279 --> 00:06:07.189
problems and back prop and then I might
find that this graduate gives a

00:06:07.189 --> 00:06:07.199
find that this graduate gives a
 

00:06:07.199 --> 00:06:09.050
find that this graduate gives a
relatively big value in and I was

00:06:09.050 --> 00:06:09.060
relatively big value in and I was
 

00:06:09.060 --> 00:06:11.420
relatively big value in and I was
suspected it must be a bug go in debug

00:06:11.420 --> 00:06:11.430
suspected it must be a bug go in debug
 

00:06:11.430 --> 00:06:13.430
suspected it must be a bug go in debug
debug debug and after debugging for a

00:06:13.430 --> 00:06:13.440
debug debug and after debugging for a
 

00:06:13.440 --> 00:06:15.469
debug debug and after debugging for a
while if I find it a partial strand

00:06:15.469 --> 00:06:15.479
while if I find it a partial strand
 

00:06:15.479 --> 00:06:17.330
while if I find it a partial strand
check with a small value then you know

00:06:17.330 --> 00:06:17.340
check with a small value then you know
 

00:06:17.340 --> 00:06:18.800
check with a small value then you know
you can be much more confident that is

00:06:18.800 --> 00:06:18.810
you can be much more confident that is
 

00:06:18.810 --> 00:06:20.899
you can be much more confident that is
them correct so you now know how a

00:06:20.899 --> 00:06:20.909
them correct so you now know how a
 

00:06:20.909 --> 00:06:22.820
them correct so you now know how a
gradient checking works doesn't help me

00:06:22.820 --> 00:06:22.830
gradient checking works doesn't help me
 

00:06:22.830 --> 00:06:24.559
gradient checking works doesn't help me
find lots of both in my implementations

00:06:24.559 --> 00:06:24.569
find lots of both in my implementations
 

00:06:24.569 --> 00:06:26.330
find lots of both in my implementations
at neural nets and I hope will help you

00:06:26.330 --> 00:06:26.340
at neural nets and I hope will help you
 

00:06:26.340 --> 00:06:26.749
at neural nets and I hope will help you
too

00:06:26.749 --> 00:06:26.759
too
 

00:06:26.759 --> 00:06:28.820
too
in the next video I want to share you

00:06:28.820 --> 00:06:28.830
in the next video I want to share you
 

00:06:28.830 --> 00:06:31.100
in the next video I want to share you
some tips or some notes on how to

00:06:31.100 --> 00:06:31.110
some tips or some notes on how to
 

00:06:31.110 --> 00:06:32.870
some tips or some notes on how to
actually implement gradient checking

00:06:32.870 --> 00:06:32.880
actually implement gradient checking
 

00:06:32.880 --> 00:06:36.500
actually implement gradient checking
let's go onto the next video

