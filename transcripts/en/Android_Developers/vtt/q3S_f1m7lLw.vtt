WEBVTT
Kind: captions
Language: en

00:00:06.874 --> 00:00:07.860
NICK BUTCHER: All right.

00:00:07.860 --> 00:00:10.150
Hello, and welcome to
today's Android

00:00:10.150 --> 00:00:12.140
Developers Office Hours.

00:00:12.140 --> 00:00:15.140
My name is Nick Butcher, and I'm
joined here in London by--

00:00:15.140 --> 00:00:16.010
MATT GAUNT: Matt.

00:00:16.010 --> 00:00:18.400
CHRIS BANES: And Chris Banes.

00:00:18.400 --> 00:00:21.695
NICK BUTCHER: Regulars Rich
Hyndman and Stephan at

00:00:21.695 --> 00:00:23.720
Droidcon Berlin today.

00:00:23.720 --> 00:00:28.170
So unless the Wi-Fi conference
gods are smiling on them, I

00:00:28.170 --> 00:00:29.640
don't think they're going
to be joining us.

00:00:29.640 --> 00:00:32.220
So as usual, this is your chance
to come and ask us, the

00:00:32.220 --> 00:00:34.700
Android Developer Relations
team, any questions about

00:00:34.700 --> 00:00:35.880
developing Android apps.

00:00:35.880 --> 00:00:38.560
It's not an opportunity to ask
us about unreleased features

00:00:38.560 --> 00:00:40.730
and products and stuff like that
and road-mapping needs,

00:00:40.730 --> 00:00:42.860
because we're not going to be
able to share that kind of

00:00:42.860 --> 00:00:44.250
information, unfortunately.

00:00:44.250 --> 00:00:49.300
So without further ado, it seems
that we have a couple of

00:00:49.300 --> 00:00:50.320
people joining us live.

00:00:50.320 --> 00:00:52.860
We have Yossi over there.

00:00:52.860 --> 00:00:53.060
Yossi?

00:00:53.060 --> 00:00:54.126
YOSSI ELKRIEF: Hi, guys.

00:00:54.126 --> 00:00:56.660
NICK BUTCHER: And Stephen
Charman I can see.

00:00:56.660 --> 00:00:58.550
And who's that who just
joined as well?

00:00:58.550 --> 00:01:00.110
Oh, everyone's joining.

00:01:00.110 --> 00:01:02.420
Hi, everyone.

00:01:02.420 --> 00:01:05.550
While everyone joins, should we
start off by taking a quick

00:01:05.550 --> 00:01:07.390
look at some of the questions
that have been pre-submitted

00:01:07.390 --> 00:01:09.260
into the moderator, and then
we can come back to that?

00:01:09.260 --> 00:01:09.950
CHRIS BANES: Yeah,
let's go for it.

00:01:09.950 --> 00:01:12.910
So Hugo Visser from the
Netherlands has asked, is

00:01:12.910 --> 00:01:15.280
there a supported way
to change the

00:01:15.280 --> 00:01:17.290
locale within your app?

00:01:17.290 --> 00:01:20.130
He's found a way on
Stack Overflows.

00:01:20.130 --> 00:01:21.570
There's a couple of
people [INAUDIBLE]

00:01:21.570 --> 00:01:26.480
had to do it who have a hack by
changing the configuration.

00:01:26.480 --> 00:01:28.330
And honestly, I don't know
the answer to it.

00:01:28.330 --> 00:01:30.810
I'd guess it's a hack and it
shouldn't really be done.

00:01:33.390 --> 00:01:35.210
You've got to ask yourself
why you want to do this.

00:01:35.210 --> 00:01:36.900
NICK BUTCHER: I'm curious and
that going to be my follow-up.

00:01:36.900 --> 00:01:37.570
Why would you do that?

00:01:37.570 --> 00:01:38.380
[INAUDIBLE]

00:01:38.380 --> 00:01:39.510
CHRIS BANES: Exactly.

00:01:39.510 --> 00:01:40.210
It's a system setting.

00:01:40.210 --> 00:01:41.400
They set it once.

00:01:41.400 --> 00:01:44.430
It's their language.

00:01:44.430 --> 00:01:48.160
What is the need for your app
to change their locale?

00:01:48.160 --> 00:01:52.450
So it sounds like you can do it,
but it's a hack and it may

00:01:52.450 --> 00:01:54.975
not work in the future.

00:01:54.975 --> 00:01:57.290
NICK BUTCHER: So I guess
the answer is no.

00:01:57.290 --> 00:01:58.665
We don't think there is a
supported way of doing it.

00:01:58.665 --> 00:01:59.490
CHRIS BANES: Not supported.

00:01:59.490 --> 00:02:00.128
NICK BUTCHER: Not--

00:02:00.128 --> 00:02:02.220
Yeah, exactly.

00:02:02.220 --> 00:02:03.270
Cool.

00:02:03.270 --> 00:02:03.865
Should we ask the--

00:02:03.865 --> 00:02:06.780
YOSSI ELKRIEF: But why not
suggest to the user to choose

00:02:06.780 --> 00:02:09.900
the language he wants to see the
menus for the application?

00:02:09.900 --> 00:02:12.270
NICK BUTCHER: Yeah, one thing
he could probably do is

00:02:12.270 --> 00:02:15.870
probably deep link them to the
screen in Settings where they

00:02:15.870 --> 00:02:16.390
can change it.

00:02:16.390 --> 00:02:18.600
So rather than automatically
changing it, he might be able

00:02:18.600 --> 00:02:19.360
to link them through.

00:02:19.360 --> 00:02:21.798
But I don't know about
automatically changing it.

00:02:21.798 --> 00:02:22.766
CHRIS BANES: Yeah, it's
a [INAUDIBLE].

00:02:22.766 --> 00:02:26.150
NICK BUTCHER: Whether you want
to be able to or not.

00:02:26.150 --> 00:02:29.432
CHRIS BANES: It sounds like it's
a question of, if you've

00:02:29.432 --> 00:02:32.587
got a user and you haven't
localized your app--

00:02:32.587 --> 00:02:33.837
[INAUDIBLE]

00:02:39.892 --> 00:02:40.379
[? NICK BUTCHER: ?]

00:02:40.379 --> 00:02:41.353
Cheers, Yossi.

00:02:41.353 --> 00:02:42.603
YOSSI ELKRIEF: Thanks.

00:02:45.249 --> 00:02:48.860
CHRIS BANES: Has anyone in the
Hangout got a question?

00:02:48.860 --> 00:02:51.880
YOSSI ELKRIEF: Yeah, I've
got one or two maybe.

00:02:51.880 --> 00:02:52.470
CHRIS BANES: Or two.

00:02:52.470 --> 00:02:52.540
Or three.

00:02:52.540 --> 00:02:54.280
YOSSI ELKRIEF: Yeah.

00:02:54.280 --> 00:02:55.520
No, no.

00:02:55.520 --> 00:02:59.250
First one, it's not really
related to Android, but I'm

00:02:59.250 --> 00:03:04.090
trying to see if there is
a Google Groups API.

00:03:04.090 --> 00:03:05.900
Do you know anything about it?

00:03:05.900 --> 00:03:07.310
NICK BUTCHER: Nope.

00:03:07.310 --> 00:03:08.930
CHRIS BANES: No.

00:03:08.930 --> 00:03:10.340
NICK BUTCHER: Sorry.

00:03:10.340 --> 00:03:11.250
Not my department.

00:03:11.250 --> 00:03:13.100
CHRIS BANES: I thought you could
access Google Groups via

00:03:13.100 --> 00:03:16.470
NNTP as like a standard
news group.

00:03:16.470 --> 00:03:19.340
YOSSI ELKRIEF: OK, I'll
check it out.

00:03:19.340 --> 00:03:21.090
CHRIS BANES: Yeah, because
that's how it was

00:03:21.090 --> 00:03:21.690
born, wasn't it?

00:03:21.690 --> 00:03:23.350
It was like a web interface
to news groups.

00:03:23.350 --> 00:03:25.970
And then it just kind of grew
into its own net product.

00:03:25.970 --> 00:03:27.820
So I'm sure they've still got
some binding somewhere.

00:03:27.820 --> 00:03:29.200
YOSSI ELKRIEF: OK.

00:03:29.200 --> 00:03:30.810
I'll do some searching.

00:03:30.810 --> 00:03:31.085
Thanks.

00:03:31.085 --> 00:03:32.290
CHRIS BANES: All right.

00:03:32.290 --> 00:03:34.040
Stephen's asked a question
with the sidebar.

00:03:34.040 --> 00:03:38.145
Can you un-mute and ask it
yourself or without video.

00:03:38.145 --> 00:03:39.424
NICK BUTCHER: It's on mute.

00:03:39.424 --> 00:03:40.890
CHRIS BANES: No mic.

00:03:40.890 --> 00:03:42.595
OK.

00:03:42.595 --> 00:03:44.490
MALE SPEAKER: I have
a question also.

00:03:44.490 --> 00:03:46.200
Can you hear me?

00:03:46.200 --> 00:03:48.143
CHRIS BANES: OK, you go for
it, and we'll come back to

00:03:48.143 --> 00:03:50.035
you, Stephen.

00:03:50.035 --> 00:03:51.590
Yes, we can hear you.

00:03:51.590 --> 00:03:52.570
MALE SPEAKER: Hello.

00:03:52.570 --> 00:03:53.900
Hi, everyone.

00:03:53.900 --> 00:03:57.660
I also added the question
to the moderator area.

00:03:57.660 --> 00:04:02.700
It's about the action view
intent and the possibility to

00:04:02.700 --> 00:04:09.250
add multiple URIs for images
in order for the gallery to

00:04:09.250 --> 00:04:11.110
act as in a slide show mode.

00:04:13.635 --> 00:04:15.070
Is this possible some way?

00:04:15.070 --> 00:04:17.034
CHRIS BANES: No.

00:04:17.034 --> 00:04:18.810
MALE SPEAKER: Ah, OK.

00:04:18.810 --> 00:04:21.630
So I need to implement something
by myself in order

00:04:21.630 --> 00:04:25.060
to provide such an action.

00:04:25.060 --> 00:04:25.840
OK, thanks.

00:04:25.840 --> 00:04:28.740
CHRIS BANES: There are a number
of libraries, open

00:04:28.740 --> 00:04:30.510
source libraries that you can
use for this kind of thing.

00:04:30.510 --> 00:04:32.580
And they make it really easy.

00:04:32.580 --> 00:04:34.045
So have a Google.

00:04:34.045 --> 00:04:36.994
MALE SPEAKER: OK, thanks.

00:04:36.994 --> 00:04:38.938
NICK BUTCHER: Should we give
it up to Stephen's?

00:04:38.938 --> 00:04:39.810
CHRIS BANES: Yeah.

00:04:39.810 --> 00:04:43.330
So in the sidebar Stephen asks,
is it good practice to

00:04:43.330 --> 00:04:45.385
open a connection to the
database and then hold onto it

00:04:45.385 --> 00:04:47.056
for the lifetime of
the application?

00:04:50.680 --> 00:04:53.850
The trouble you have with that
is you'll never know when to

00:04:53.850 --> 00:04:56.370
close the database, because
there is not a sort of

00:04:56.370 --> 00:04:56.770
[? undestroy ?]

00:04:56.770 --> 00:04:57.560
application.

00:04:57.560 --> 00:05:00.750
So you're going to keep holding
onto the database

00:05:00.750 --> 00:05:03.270
connection and it's never
going to be closed.

00:05:03.270 --> 00:05:05.980
So you shouldn't be holding
resources in your database.

00:05:05.980 --> 00:05:09.210
If you try and open that data
if your app gets killed, the

00:05:09.210 --> 00:05:10.560
database won't be closed.

00:05:10.560 --> 00:05:12.257
So the next time you try and
open it, you'll get an

00:05:12.257 --> 00:05:14.930
exception saying, database
isn't closed or something

00:05:14.930 --> 00:05:16.180
isn't right.

00:05:18.670 --> 00:05:20.990
It's a nice, easy option
to get around sort of

00:05:20.990 --> 00:05:22.740
[? handling ?] databases.

00:05:22.740 --> 00:05:24.043
I wouldn't recommend
it, personally.

00:05:24.043 --> 00:05:25.293
NICK BUTCHER: What would
you recommend?

00:05:28.864 --> 00:05:31.400
CHRIS BANES: I don't know.

00:05:31.400 --> 00:05:34.150
The more I sort of play with
databases, the more content

00:05:34.150 --> 00:05:36.490
providers just seem
the best way.

00:05:36.490 --> 00:05:38.280
There are a lot of boiler
plate we have to write.

00:05:38.280 --> 00:05:40.155
NICK BUTCHER: There's a ton of
good libraries that will help

00:05:40.155 --> 00:05:41.980
you write all that for
you like Storm

00:05:41.980 --> 00:05:45.146
and other such things.

00:05:45.146 --> 00:05:47.370
So I think content provider is
probably the way to go there,

00:05:47.370 --> 00:05:49.574
and have that handle your
database connection.

00:05:49.574 --> 00:05:50.870
CHRIS BANES: Yeah, I agree.

00:05:50.870 --> 00:05:52.970
NICK BUTCHER: Yeah, you get a
lot of stuff for free if you

00:05:52.970 --> 00:05:54.280
want to use loaders
and what not.

00:05:54.280 --> 00:05:58.075
Then you need to be using
this architecture.

00:05:58.075 --> 00:05:59.840
OK, cool, that was
my impression.

00:05:59.840 --> 00:06:00.240
Cool.

00:06:00.240 --> 00:06:00.650
Good.

00:06:00.650 --> 00:06:01.910
Glad we could confirm that.

00:06:01.910 --> 00:06:03.760
Any other live questions
before we jump

00:06:03.760 --> 00:06:04.670
back into the moderator?

00:06:04.670 --> 00:06:07.540
There is one guy whose avatar
is him with his hand up.

00:06:07.540 --> 00:06:08.830
And I keep on thinking he's
trying to ask a question.

00:06:08.830 --> 00:06:09.375
[INTERPOSING VOICES]

00:06:09.375 --> 00:06:12.772
CHRIS BANES: --but
that's just me.

00:06:12.772 --> 00:06:14.290
NICK BUTCHER: What's the
best way to access

00:06:14.290 --> 00:06:17.074
fragments by tag?

00:06:17.074 --> 00:06:18.510
Oh, by tag?

00:06:18.510 --> 00:06:19.620
Question mark, I'm guessing.

00:06:19.620 --> 00:06:21.705
CHRIS BANES: Find fragments
by tag as a method?

00:06:21.705 --> 00:06:23.410
NICK BUTCHER: Are you asking
like the best way to keep hold

00:06:23.410 --> 00:06:25.400
of them, like to get
hold of them?

00:06:25.400 --> 00:06:26.980
Then yeah, tag is
a very good way.

00:06:26.980 --> 00:06:28.230
MATT GAUNT: Yeah.

00:06:34.544 --> 00:06:35.360
NICK BUTCHER: Great.

00:06:35.360 --> 00:06:37.830
Makes a great video watching
us read a sidebar with a

00:06:37.830 --> 00:06:38.700
conversation going on.

00:06:38.700 --> 00:06:39.790
CHRIS BANES: Yeah.

00:06:39.790 --> 00:06:42.281
For view pages.

00:06:42.281 --> 00:06:44.400
MATT GAUNT: Oh, so if you're
using fragments within a view

00:06:44.400 --> 00:06:47.025
page, yeah.

00:06:47.025 --> 00:06:50.520
Why would you need to get
them via tag, though?

00:06:50.520 --> 00:06:54.854
Because couldn't you just pull
them out of the adapter.

00:06:54.854 --> 00:06:59.390
CHRIS BANES: No, because
it's a view, isn't it?

00:06:59.390 --> 00:07:03.560
Because view pager only
deals with views.

00:07:03.560 --> 00:07:07.006
You've got fragment pager
adapter, which sort of handles

00:07:07.006 --> 00:07:09.420
all the fragment [INAUDIBLE]
side of it.

00:07:09.420 --> 00:07:09.760
So yeah.

00:07:09.760 --> 00:07:13.550
The way you've put it
in is a good way.

00:07:13.550 --> 00:07:17.840
Sort of creating a custom tag
based on the position is the

00:07:17.840 --> 00:07:19.670
way I've done it in the past.

00:07:19.670 --> 00:07:21.959
So much like you've done.

00:07:21.959 --> 00:07:23.760
NICK BUTCHER: Oh,
[? by pinning ?] the position.

00:07:23.760 --> 00:07:24.219
CHRIS BANES: Yeah.

00:07:24.219 --> 00:07:25.469
NICK BUTCHER: Yeah.

00:07:28.809 --> 00:07:33.420
CHRIS BANES: Or you just create
custom sort of object,

00:07:33.420 --> 00:07:38.705
lots of strings that all
go to each fragment.

00:07:38.705 --> 00:07:40.302
Is this using a hidden feature?

00:07:40.302 --> 00:07:41.174
Is it not?

00:07:41.174 --> 00:07:44.640
NICK BUTCHER: Sort of.

00:07:44.640 --> 00:07:45.132
Yes, it's

00:07:45.132 --> 00:07:46.470
implementation-specific, isn't it?

00:07:46.470 --> 00:07:48.155
CHRIS BANES: Yeah.

00:07:48.155 --> 00:07:49.792
Anyway, that's the way
I've done it in

00:07:49.792 --> 00:07:52.320
the past and it works.

00:07:52.320 --> 00:07:54.640
I can't really think of a
better way of doing it.

00:07:54.640 --> 00:07:57.930
Just go for it.

00:07:57.930 --> 00:07:59.660
You got a questions
in the moderator?

00:07:59.660 --> 00:08:00.900
My tablet seized up.

00:08:00.900 --> 00:08:03.090
NICK BUTCHER: Yeah, OK.

00:08:03.090 --> 00:08:04.340
So go back into the moderator.

00:08:07.200 --> 00:08:08.140
When are you going to do this?

00:08:08.140 --> 00:08:09.420
Not going to comment on that.

00:08:12.570 --> 00:08:16.065
So let me find another one.

00:08:16.065 --> 00:08:16.760
Multiple images.

00:08:16.760 --> 00:08:18.110
So we just answered that one.

00:08:18.110 --> 00:08:19.830
CHRIS BANES: Yup.

00:08:19.830 --> 00:08:20.580
NICK BUTCHER: OK.

00:08:20.580 --> 00:08:24.770
So Kenny in Los Angeles says,
showAsAction="ifRoom" doesn't

00:08:24.770 --> 00:08:26.090
work as I would expect.

00:08:26.090 --> 00:08:27.770
Even when there's plenty
of room, these

00:08:27.770 --> 00:08:30.590
actions aren't shown.

00:08:30.590 --> 00:08:33.759
And it links through to a
Stack Overflow thread.

00:08:33.759 --> 00:08:35.150
Have you had a chance
to look at that one?

00:08:35.150 --> 00:08:35.768
CHRIS BANES: Yeah.

00:08:35.768 --> 00:08:39.040
I mean, the Stack Overflow
thread, answered it pretty

00:08:39.040 --> 00:08:40.030
well, and you've got an answer
from Jake Wharton.

00:08:40.030 --> 00:08:42.880
So it's a pretty definitive
answer.

00:08:42.880 --> 00:08:45.810
Basically, the action bar, sort
of the number of items

00:08:45.810 --> 00:08:50.040
you can have as action items is
fixed based on the resource

00:08:50.040 --> 00:08:53.960
of it, based on sort of size
of screen, what sort of

00:08:53.960 --> 00:08:55.265
orientation you've got
the device in.

00:08:55.265 --> 00:08:56.570
And it changes based on that.

00:08:56.570 --> 00:09:02.440
So for instance, on a 10-inch
tablet in landscape, it's five

00:09:02.440 --> 00:09:03.200
items you can have.

00:09:03.200 --> 00:09:04.110
NICK BUTCHER: Or two.

00:09:04.110 --> 00:09:07.200
CHRIS BANES: Yeah, or two.

00:09:07.200 --> 00:09:07.730
So if [? there ?]

00:09:07.730 --> 00:09:12.790
[? isn't ?] enough room on your
items, it will sort of

00:09:12.790 --> 00:09:14.365
wrap after five items.

00:09:14.365 --> 00:09:18.690
But you can force your items
to display using always.

00:09:18.690 --> 00:09:21.900
So there is that.

00:09:21.900 --> 00:09:25.120
It's kind been done like that
for sort of consistency.

00:09:25.120 --> 00:09:29.100
And also so the items displayed
don't change based

00:09:29.100 --> 00:09:30.210
on what else you've got
in the action bar.

00:09:30.210 --> 00:09:35.065
So total, subtotal, list
navigation, spinner.

00:09:35.065 --> 00:09:37.650
And so it still has room
for those items.

00:09:37.650 --> 00:09:42.080
And so if you hide or show any
of those, your item number

00:09:42.080 --> 00:09:43.410
isn't going to change.

00:09:43.410 --> 00:09:44.570
NICK BUTCHER: And I think these
are all documented on

00:09:44.570 --> 00:09:45.750
the design guidelines.

00:09:45.750 --> 00:09:48.580
If you get to the action bar
page on the developerandroid

00:09:48.580 --> 00:09:53.640
.com/design/pattern/actionbar
or something like that, then

00:09:53.640 --> 00:09:55.460
it's actually documented at
how many items are always

00:09:55.460 --> 00:09:59.380
shown in each size screen
and orientation.

00:09:59.380 --> 00:10:02.320
All right.

00:10:02.320 --> 00:10:05.800
We'll actually go from the
top, any questions.

00:10:05.800 --> 00:10:09.252
So Springy in the UK asks--

00:10:09.252 --> 00:10:15.550
he wants to use bidirectional
NFC transceiving, like the

00:10:15.550 --> 00:10:17.370
Google I/O example.

00:10:17.370 --> 00:10:19.500
ICS above, Android Beam
gets in the way.

00:10:19.500 --> 00:10:21.510
Is there any way to
work around it?

00:10:21.510 --> 00:10:23.050
CHRIS BANES: I honestly
don't know.

00:10:26.344 --> 00:10:29.030
Yeah, I can't answer that,
because I don't know enough

00:10:29.030 --> 00:10:30.640
about NFCs or the
Android Beam.

00:10:30.640 --> 00:10:33.070
[INTERPOSING VOICES]

00:10:33.070 --> 00:10:34.618
PAUL: Hi there?

00:10:34.618 --> 00:10:35.890
NICK BUTCHER: Hey, Paul.

00:10:35.890 --> 00:10:38.980
PAUL: We've recently been
looking into this.

00:10:38.980 --> 00:10:40.920
In fact, my boss was
at the Barcelona

00:10:40.920 --> 00:10:42.055
Mobile World Congress.

00:10:42.055 --> 00:10:44.035
CHRIS BANES: Oh, yeah?

00:10:44.035 --> 00:10:47.010
PAUL: Beam does seem to be
slightly a bit of a problem

00:10:47.010 --> 00:10:49.450
with the extra touch required.

00:10:49.450 --> 00:10:52.270
It wasn't going down too well
with some people who weren't

00:10:52.270 --> 00:10:53.690
familiar with NFC.

00:10:53.690 --> 00:10:56.090
And I'm basically trying to
find the same kind of way

00:10:56.090 --> 00:11:01.160
around this issue for doing
a kind of message sort of

00:11:01.160 --> 00:11:04.440
challenge response, kind
of two-way process.

00:11:04.440 --> 00:11:07.640
So at the moment, I'm not
getting any answers out of--

00:11:07.640 --> 00:11:11.060
there doesn't seem to be any way
around this at the moment.

00:11:11.060 --> 00:11:14.780
What was shown in the Google
I/O a few years ago was a

00:11:14.780 --> 00:11:17.260
previous version before they
had the touch to Beam.

00:11:17.260 --> 00:11:20.100
And it's slightly more easy to
work around, but I think it's

00:11:20.100 --> 00:11:20.940
been tightened up since then.

00:11:20.940 --> 00:11:22.960
But yeah, I'm in
the same boat.

00:11:22.960 --> 00:11:26.510
I'd love to know if there's
anything else coming up or

00:11:26.510 --> 00:11:28.822
anything else that's
been announced.

00:11:28.822 --> 00:11:31.700
But I haven't found
anything so far.

00:11:31.700 --> 00:11:33.730
CHRIS BANES: My suspicion
is no.

00:11:33.730 --> 00:11:34.600
PAUL: Yeah.

00:11:34.600 --> 00:11:35.120
I think so.

00:11:35.120 --> 00:11:36.860
CHRIS BANES: I think Beam
is the way forward.

00:11:36.860 --> 00:11:39.080
PAUL: Yeah.

00:11:39.080 --> 00:11:42.920
It would be great to, for the
sort of use cases that I'm

00:11:42.920 --> 00:11:46.960
facing and what this other
chap's facing, is to have a

00:11:46.960 --> 00:11:49.531
mechanism for a sort of--

00:11:49.531 --> 00:11:52.420
when you send some data and get
a response back, I'm not

00:11:52.420 --> 00:11:53.990
sure what the best way
is for the moment.

00:11:53.990 --> 00:11:56.395
So if there is something, it
would great to find out if

00:11:56.395 --> 00:11:57.840
there's something like
that in the future.

00:11:57.840 --> 00:11:59.090
NICK BUTCHER: Right.

00:12:02.257 --> 00:12:02.750
OK.

00:12:02.750 --> 00:12:04.350
Well, I guess that's one we're
going to have to take away.

00:12:04.350 --> 00:12:04.680
CHRIS BANES: Yeah,
we don't know.

00:12:04.680 --> 00:12:05.660
NICK BUTCHER: Thanks
for the feedback.

00:12:05.660 --> 00:12:07.610
That's interesting to
hear that Beam isn't

00:12:07.610 --> 00:12:09.116
always the way forward.

00:12:09.116 --> 00:12:10.366
OK.

00:12:15.281 --> 00:12:16.800
Trying to find the
next question.

00:12:20.080 --> 00:12:22.180
Multiple image URIs, we've
done that one.

00:12:22.180 --> 00:12:23.265
CHRIS BANES: Yeah,
done that one.

00:12:23.265 --> 00:12:26.900
MATT GAUNT: So there's the
in-app billing one.

00:12:26.900 --> 00:12:27.480
NICK BUTCHER: OK.

00:12:27.480 --> 00:12:30.920
MATT GAUNT: So Jeremy from
Australia is just essentially

00:12:30.920 --> 00:12:35.030
having issues with
in-app billing.

00:12:35.030 --> 00:12:36.710
Essentially, what's happening
is his activity's being

00:12:36.710 --> 00:12:41.630
destroyed before he's actually
receiving the billing result.

00:12:41.630 --> 00:12:43.375
And then, yeah, Chris has
already kind of answered on

00:12:43.375 --> 00:12:44.250
Stack Overflow.

00:12:44.250 --> 00:12:47.810
He kind of said, use an alert
dialogue, convert that to a

00:12:47.810 --> 00:12:50.640
DialogFragment, and try posting
a Runnable using

00:12:50.640 --> 00:12:51.293
run-on UI thread.

00:12:51.293 --> 00:12:52.240
CHRIS BANES: Yeah.

00:12:52.240 --> 00:12:54.670
So from what I read about that,
it's not really an issue

00:12:54.670 --> 00:12:57.400
with in-app purchase.

00:12:57.400 --> 00:12:59.800
It's just a general sort of
Android issue where your

00:12:59.800 --> 00:13:00.160
[INAUDIBLE]

00:13:00.160 --> 00:13:01.380
you're showing a dialogue
while the

00:13:01.380 --> 00:13:03.410
activity isn't being shown.

00:13:03.410 --> 00:13:06.500
So it's just [? something's ?]
been leaked.

00:13:06.500 --> 00:13:09.670
And sort of the in-app billing
side of it is kind of red

00:13:09.670 --> 00:13:12.231
herring from what I read.

00:13:12.231 --> 00:13:13.740
So yeah.

00:13:13.740 --> 00:13:16.550
DialogFragment was added so you
don't have to lose stuff

00:13:16.550 --> 00:13:19.590
anymore, so you don't have
to handle the life cycle.

00:13:19.590 --> 00:13:20.740
It's all handled for you--

00:13:20.740 --> 00:13:21.110
fragments.

00:13:21.110 --> 00:13:24.610
And it's just the nice
way of doing it now.

00:13:24.610 --> 00:13:28.950
Obviously there are some styling
issues in that you can

00:13:28.950 --> 00:13:30.660
use that alert dialogue,
and it gives you a lot

00:13:30.660 --> 00:13:32.350
of styling for free.

00:13:32.350 --> 00:13:35.330
But often the pros of using
DialogFragment with the life

00:13:35.330 --> 00:13:36.810
cycle is sort of--

00:13:36.810 --> 00:13:37.780
free-ness is good.

00:13:37.780 --> 00:13:40.470
NICK BUTCHER: And there was
a good post on the Android

00:13:40.470 --> 00:13:42.660
Developers blog about how
to use DialogFragment.

00:13:42.660 --> 00:13:45.642
Go to
android-developers.blogspot.com

00:13:45.642 --> 00:13:48.370
you can find that.

00:13:48.370 --> 00:13:49.430
Cool.

00:13:49.430 --> 00:13:51.720
And another one is just another
Stack Overflow link.

00:13:51.720 --> 00:13:52.330
Have a look at this one.

00:13:52.330 --> 00:13:54.210
When to delete files shared
with external

00:13:54.210 --> 00:13:57.501
apps by content provider.

00:13:57.501 --> 00:13:59.830
From Martin in Slovakia.

00:13:59.830 --> 00:14:03.410
CHRIS BANES: I'm on
the wrong page.

00:14:03.410 --> 00:14:05.130
NICK BUTCHER: Does
it ring a bell?

00:14:05.130 --> 00:14:06.810
CHRIS BANES: No,
I [INAUDIBLE].

00:14:06.810 --> 00:14:08.060
NICK BUTCHER: Let's
take a look at it.

00:14:10.984 --> 00:14:12.234
[INAUDIBLE]

00:14:15.430 --> 00:14:15.924
OK.

00:14:15.924 --> 00:14:17.340
We'll come back to that.

00:14:17.340 --> 00:14:21.290
CHRIS BANES: Yeah, I'm trying.

00:14:21.290 --> 00:14:24.020
So Efren from the Canary Islands
has asked, when are we

00:14:24.020 --> 00:14:26.520
going to start taking
the public sort

00:14:26.520 --> 00:14:29.112
of BugTracker seriously?

00:14:29.112 --> 00:14:31.640
He said, there are nearly 30,000
issues that nobody

00:14:31.640 --> 00:14:33.470
seems to care about.

00:14:33.470 --> 00:14:35.210
Some of them affect
millions of users.

00:14:38.910 --> 00:14:42.670
As I've said in the reply, the
tracker is checked, and it is

00:14:42.670 --> 00:14:43.490
checked very regularly.

00:14:43.490 --> 00:14:44.375
NICK BUTCHER: Every bug.

00:14:44.375 --> 00:14:45.625
CHRIS BANES: It's just
there may not be

00:14:45.625 --> 00:14:48.230
replies on each of them.

00:14:48.230 --> 00:14:50.250
And sort of fixes are put in.

00:14:50.250 --> 00:14:51.670
NICK BUTCHER: It's kind of the
way that Android is developed,

00:14:51.670 --> 00:14:53.620
because Android's developed
internally at Google and then

00:14:53.620 --> 00:14:55.220
open-sourced.

00:14:55.220 --> 00:14:58.120
We actually maintain like a
public-- sorry, private

00:14:58.120 --> 00:14:59.110
BugTracker as well.

00:14:59.110 --> 00:15:01.260
So things like that,
we'll look at.

00:15:01.260 --> 00:15:02.915
And then we might file internal
bugs and work on

00:15:02.915 --> 00:15:06.420
those internally, and then
you won't see them,

00:15:06.420 --> 00:15:07.570
the effects of this--

00:15:07.570 --> 00:15:09.650
the bug report you put in--
until the next release when

00:15:09.650 --> 00:15:10.500
that code's pushed.

00:15:10.500 --> 00:15:12.700
So it might seem like we're
not responding.

00:15:12.700 --> 00:15:14.590
But we do actually
read them all.

00:15:14.590 --> 00:15:17.715
And things like adding Arabic
support was because it was the

00:15:17.715 --> 00:15:19.870
number one starred issue
on BugTracker.

00:15:19.870 --> 00:15:21.690
And we do look at these for
prioritization as well.

00:15:21.690 --> 00:15:24.200
So sorry if it feels like you're
whistling in the wind,

00:15:24.200 --> 00:15:27.920
but we do look at it.

00:15:27.920 --> 00:15:29.170
So keep trying.

00:15:31.456 --> 00:15:34.650
CHRIS BANES: So Jean Francois
in France asked, what's the

00:15:34.650 --> 00:15:39.400
best solution to do a custom SSO
solution with an override

00:15:39.400 --> 00:15:42.100
of the authenticator
class and service?

00:15:42.100 --> 00:15:46.355
The account is linked to an
external state, which is there

00:15:46.355 --> 00:15:47.060
for credentials.

00:15:47.060 --> 00:15:48.330
Not quite sure what
he's asking.

00:15:48.330 --> 00:15:49.320
NICK BUTCHER: No,
neither do I.

00:15:49.320 --> 00:15:50.990
MATT GAUNT: I didn't get
that one either.

00:15:50.990 --> 00:15:54.090
NICK BUTCHER: So I'm guessing
you're asking [INAUDIBLE].

00:15:54.090 --> 00:15:58.570
So I guess you're asking for, if
you have the device hold a

00:15:58.570 --> 00:16:01.740
credential for your service,
your sites and have multiple

00:16:01.740 --> 00:16:03.980
apps using it, in which case,
I'd say, yeah, use Account

00:16:03.980 --> 00:16:05.860
Manager infrastructure.

00:16:05.860 --> 00:16:09.090
And it's definitely the way
forward to do that.

00:16:09.090 --> 00:16:10.910
If that's not what your question
is, can you please

00:16:10.910 --> 00:16:13.340
reply to the moderator
and clarify?

00:16:18.640 --> 00:16:20.092
CHRIS BANES: [INAUDIBLE] page.

00:16:20.092 --> 00:16:22.560
NICK BUTCHER: Why Android
isn't executing catch

00:16:22.560 --> 00:16:23.310
statement code?

00:16:23.310 --> 00:16:26.650
The exception is caught, but
it's only executing return

00:16:26.650 --> 00:16:29.660
statement or code before
in catch is executed.

00:16:29.660 --> 00:16:30.330
It's weird.

00:16:30.330 --> 00:16:32.510
This is the only ORMLite--
in other cases catching

00:16:32.510 --> 00:16:35.236
[INAUDIBLE] is working fine.

00:16:35.236 --> 00:16:37.400
CHRIS BANES: It sounds very much
[INAUDIBLE] specific if

00:16:37.400 --> 00:16:38.650
you mention ORMLite.

00:16:40.705 --> 00:16:41.599
Don't know.

00:16:41.599 --> 00:16:42.460
NICK BUTCHER: Yeah.

00:16:42.460 --> 00:16:44.460
I'd get in touch with a
developer of ORMLite because

00:16:44.460 --> 00:16:48.370
that does not sound like the
general state of the world,

00:16:48.370 --> 00:16:50.430
catch statements are executed.

00:16:50.430 --> 00:16:51.828
Or else we'd be in
a lot of trouble.

00:16:57.310 --> 00:17:00.220
CHRIS BANES: So Aiden in London
has asked-- is using

00:17:00.220 --> 00:17:03.030
the Google Maps API version 2.

00:17:03.030 --> 00:17:06.339
And the map fragment sometimes
freezes when it doesn't

00:17:06.339 --> 00:17:08.010
respond to user input.

00:17:08.010 --> 00:17:12.259
Is this something you're aware
of, and is there a fix?

00:17:12.259 --> 00:17:13.369
I don't know.

00:17:13.369 --> 00:17:14.694
Check betaandroid.com.

00:17:14.694 --> 00:17:17.734
There may be a bug report
already on there.

00:17:17.734 --> 00:17:20.740
MATT GAUNT: It might be a case
you're doing something on the

00:17:20.740 --> 00:17:22.569
UI thread as well.

00:17:22.569 --> 00:17:26.133
You're not quite thinking
[INAUDIBLE].

00:17:26.133 --> 00:17:28.510
I guess you could easily
identify that if you just had

00:17:28.510 --> 00:17:30.240
a button on the action
bar or something.

00:17:30.240 --> 00:17:32.630
If you don't click on that, then
the whole UI's blocked.

00:17:32.630 --> 00:17:34.450
CHRIS BANES: Or you
[INAUDIBLE]

00:17:34.450 --> 00:17:35.270
and see what's going on.

00:17:35.270 --> 00:17:36.480
MATT GAUNT: Yeah, even better.

00:17:36.480 --> 00:17:39.030
CHRIS BANES: Or maybe you're
using a live, sort of a UI

00:17:39.030 --> 00:17:42.530
widget which sort of intersects
touch events.

00:17:42.530 --> 00:17:44.425
Something like a sliding
library or something.

00:17:44.425 --> 00:17:45.560
I don't know.

00:17:45.560 --> 00:17:47.520
Which is [? inset ?] in touch
events at certain points.

00:17:47.520 --> 00:17:50.750
And so the map fragment
doesn't get them.

00:17:50.750 --> 00:17:52.230
NICK BUTCHER: Yeah.

00:17:52.230 --> 00:17:53.690
Well, systrace will tell
you what's going on.

00:17:53.690 --> 00:17:54.662
MATT GAUNT: Yeah.

00:17:54.662 --> 00:17:58.000
NICK BUTCHER: You see
where it is going.

00:17:58.000 --> 00:18:01.295
So Marius in Romania asks, is
it possible using Android

00:18:01.295 --> 00:18:04.490
Asset Studio at all to preserve
the content padding

00:18:04.490 --> 00:18:06.570
and stretch regions when
creating an eye patch?

00:18:06.570 --> 00:18:10.290
Right now, when changing the
image, the padding and stretch

00:18:10.290 --> 00:18:14.050
regions are reset to default.

00:18:14.050 --> 00:18:15.490
I think that sounds
like a bug.

00:18:15.490 --> 00:18:17.580
With Asset Studio, if it is
doing that, I don't think

00:18:17.580 --> 00:18:18.810
that's correct behavior.

00:18:18.810 --> 00:18:21.740
So there is actually a Report
A Bug, BugTracker section.

00:18:21.740 --> 00:18:22.970
It's just a Google
code project.

00:18:22.970 --> 00:18:25.747
So if you can file a bug on
that, then we'll take a look.

00:18:29.086 --> 00:18:32.500
MATT GAUNT: You have any
questions live while we're

00:18:32.500 --> 00:18:34.606
still going through these?

00:18:34.606 --> 00:18:35.856
I'm looking at you, Giuseppe.

00:18:35.856 --> 00:18:38.944
You've always got a question.

00:18:38.944 --> 00:18:42.860
MALE SPEAKER: I just wanted to
ask you another thing about

00:18:42.860 --> 00:18:44.670
the sliding menu.

00:18:44.670 --> 00:18:47.890
The same feature that we have
right now on Google +

00:18:47.890 --> 00:18:49.910
application in Android.

00:18:49.910 --> 00:18:53.445
I'm looking for a library to do
the same effect, to achieve

00:18:53.445 --> 00:18:54.150
the same effect.

00:18:54.150 --> 00:18:58.880
And I found several libraries,
and I want you to guide me to

00:18:58.880 --> 00:19:02.820
a specific one that you think
is more suitable.

00:19:02.820 --> 00:19:08.490
One is called Sliding Menu, and
it also has support for

00:19:08.490 --> 00:19:10.474
ActionBarSherlock.

00:19:10.474 --> 00:19:12.840
MATT GAUNT: [INAUDIBLE]

00:19:12.840 --> 00:19:13.970
Yeah.

00:19:13.970 --> 00:19:16.370
I tried a load of them and
Sliding Menu seemed to be the

00:19:16.370 --> 00:19:18.760
one that was the most active
with development.

00:19:18.760 --> 00:19:21.785
They also fixed some stuff after
Richard Hyndman had kind

00:19:21.785 --> 00:19:24.660
of had a look and realized that
you were actually still

00:19:24.660 --> 00:19:27.250
painting the menu even though
it was invisible.

00:19:27.250 --> 00:19:28.930
So they ended up fixing
that, which a lot

00:19:28.930 --> 00:19:31.100
of the others didn't.

00:19:31.100 --> 00:19:34.080
It seemed like the most robust
one that I played with.

00:19:34.080 --> 00:19:34.940
So yeah.

00:19:34.940 --> 00:19:36.080
That's what I'd go for.

00:19:36.080 --> 00:19:37.510
But there are a handful.

00:19:37.510 --> 00:19:40.954
MALE SPEAKER: OK, thanks.

00:19:40.954 --> 00:19:42.204
CHRIS BANES: Cool.

00:19:44.830 --> 00:19:47.000
NICK BUTCHER: My moderator
was turned around.

00:19:47.000 --> 00:19:49.340
So Andrew
One-Man-Motoration-Machine

00:19:49.340 --> 00:19:53.470
Kelly asks a long question.

00:19:53.470 --> 00:19:55.520
If I background my app using the
Home button is there any

00:19:55.520 --> 00:19:58.250
reason why, two seconds later,
when I relaunch the app, the

00:19:58.250 --> 00:20:00.710
complete back stack
is not restored?

00:20:00.710 --> 00:20:03.120
I have a front door activity
which keeps getting shown when

00:20:03.120 --> 00:20:07.115
foregrounding, even though
[INAUDIBLE].

00:20:07.115 --> 00:20:08.842
I think you answered this
one question already.

00:20:08.842 --> 00:20:11.870
CHRIS BANES: Yeah, this one--
we need more information.

00:20:11.870 --> 00:20:14.050
Well, I need more information.

00:20:14.050 --> 00:20:16.870
So I'd look for the source of
how it sort of-- your app is

00:20:16.870 --> 00:20:20.626
actually relaunched from
the recent apps drawer.

00:20:20.626 --> 00:20:22.000
And there's two things
that happen.

00:20:22.000 --> 00:20:24.100
If your app is still sort of
in memory and it's still

00:20:24.100 --> 00:20:27.150
active, it will just sort of
bring it to the front.

00:20:27.150 --> 00:20:31.080
And if not, it will launch
intent based on various things

00:20:31.080 --> 00:20:34.180
that will just relaunch
your app.

00:20:34.180 --> 00:20:37.540
I'm guessing that your app is
still sort of active, so it's

00:20:37.540 --> 00:20:39.570
doing the bring in to front.

00:20:39.570 --> 00:20:41.730
So I had to think about
how this might happen.

00:20:41.730 --> 00:20:43.780
And the only thing I can really
think is that you've

00:20:43.780 --> 00:20:46.286
got activities in
different tasks.

00:20:46.286 --> 00:20:49.060
And so you've got your activity
stack, and that's in

00:20:49.060 --> 00:20:50.280
a separate task.

00:20:50.280 --> 00:20:53.760
And then when it's brought
back to front, Android is

00:20:53.760 --> 00:20:55.160
relaunching your
original task.

00:20:55.160 --> 00:20:56.950
And so your original
activity's being

00:20:56.950 --> 00:20:59.870
sort of shown again.

00:20:59.870 --> 00:21:01.730
But I'm sorry, it's a
total guess from the

00:21:01.730 --> 00:21:02.290
description you give.

00:21:02.290 --> 00:21:02.980
NICK BUTCHER: Yeah.

00:21:02.980 --> 00:21:03.680
I'd say, yeah.

00:21:03.680 --> 00:21:07.190
Flags sound like a bit of a--
it could potentially mess up

00:21:07.190 --> 00:21:08.480
your history there.

00:21:08.480 --> 00:21:11.280
So check [INAUDIBLE] you have
the new task flag set on the

00:21:11.280 --> 00:21:14.010
activity, which it might be a
desired behavior for certain

00:21:14.010 --> 00:21:15.700
situations, it's going
to do that.

00:21:15.700 --> 00:21:18.162
That's going to be
the behavior.

00:21:18.162 --> 00:21:20.470
MATT GAUNT: Out of interest,
what would happen if you had

00:21:20.470 --> 00:21:23.290
don't keep activities ticked
in the developer options?

00:21:23.290 --> 00:21:25.635
Would that kill it if you
hit the Home button?

00:21:25.635 --> 00:21:26.225
NICK BUTCHER: Mm hmm.

00:21:26.225 --> 00:21:27.080
MATT GAUNT: So that
would create

00:21:27.080 --> 00:21:27.750
another thing if you've--

00:21:27.750 --> 00:21:29.740
CHRIS BANES: Yeah,
it's [INAUDIBLE].

00:21:29.740 --> 00:21:33.025
MATT GAUNT: Because I had that
before where it was just

00:21:33.025 --> 00:21:33.650
killing some stuff.

00:21:33.650 --> 00:21:36.150
And I had never really realized
why until I actually

00:21:36.150 --> 00:21:38.726
remembered I had switched
that on.

00:21:38.726 --> 00:21:41.604
So that might be something.

00:21:41.604 --> 00:21:43.008
That you just left on.

00:21:43.008 --> 00:21:45.390
CHRIS BANES: See, I'd check your
manifest and also your

00:21:45.390 --> 00:21:48.780
intents, and just triple check
whether you're doing some

00:21:48.780 --> 00:21:50.050
funky stuff.

00:21:50.050 --> 00:21:52.280
NICK BUTCHER: Cool.

00:21:52.280 --> 00:21:55.810
Ram in Chennai says, is it
advisable to restart a service

00:21:55.810 --> 00:21:57.180
from onDestroy()?

00:21:57.180 --> 00:21:59.690
And what happens to the data
storage or any storage options

00:21:59.690 --> 00:22:01.800
when the device power
fails suddenly?

00:22:01.800 --> 00:22:04.915
Since shared preferences use
XML file and DB uses file

00:22:04.915 --> 00:22:08.055
system to store data, will the
file DB get corrupted?

00:22:08.055 --> 00:22:11.810
CHRIS BANES: So for the first
question, depends on why your

00:22:11.810 --> 00:22:12.790
activity's being destroyed.

00:22:12.790 --> 00:22:13.290
If it's--

00:22:13.290 --> 00:22:14.080
NICK BUTCHER: [INAUDIBLE]

00:22:14.080 --> 00:22:14.515
service.

00:22:14.515 --> 00:22:15.700
CHRIS BANES: Oh, sorry.

00:22:15.700 --> 00:22:16.360
Service, yeah.

00:22:16.360 --> 00:22:18.430
So if it's being sort of
destroyed using memory

00:22:18.430 --> 00:22:21.015
constraints and sort of the
Android is actively sort of

00:22:21.015 --> 00:22:24.200
killing your service, what you
should use is you should use

00:22:24.200 --> 00:22:26.190
Start Sticky, because that
will automatically do

00:22:26.190 --> 00:22:27.980
all this for you.

00:22:27.980 --> 00:22:28.240
Somewhat.

00:22:28.240 --> 00:22:29.220
NICK BUTCHER: [INAUDIBLE]

00:22:29.220 --> 00:22:31.270
onStart command and then return
the right value from

00:22:31.270 --> 00:22:32.010
onStart command.

00:22:32.010 --> 00:22:34.230
So basically, don't
fight the system.

00:22:34.230 --> 00:22:36.360
And when it's trying to kill
you, trying to restart itself,

00:22:36.360 --> 00:22:39.640
that sounds pretty extreme and
like really try to avoid

00:22:39.640 --> 00:22:40.750
fighting the system.

00:22:40.750 --> 00:22:41.200
So yeah.

00:22:41.200 --> 00:22:44.900
More look at starting Sticky
and service, and the system

00:22:44.900 --> 00:22:47.540
will restart you when it has
enough resources to run you.

00:22:47.540 --> 00:22:49.690
CHRIS BANES: And if it is an
important service, you can use

00:22:49.690 --> 00:22:54.510
startForeground, which will
mean your service is as

00:22:54.510 --> 00:22:56.553
important as an activity,
foregrounded activity.

00:22:56.553 --> 00:22:59.292
MATT GAUNT: And you have to
provide a notification.

00:22:59.292 --> 00:23:00.560
CHRIS BANES: And second part.

00:23:00.560 --> 00:23:04.070
The question was something to
do with data power loss and

00:23:04.070 --> 00:23:04.790
[INAUDIBLE].

00:23:04.790 --> 00:23:07.830
So there are various things
that can happen in here.

00:23:07.830 --> 00:23:12.590
And it mostly sort of depends on
file systems, whether that

00:23:12.590 --> 00:23:16.950
sort of file system's got
journaling, so using the XT3

00:23:16.950 --> 00:23:17.730
or whatever.

00:23:17.730 --> 00:23:20.400
But these are all
device-specific sort of

00:23:20.400 --> 00:23:22.760
implementations.

00:23:22.760 --> 00:23:26.590
And so the only surefire thing
you can do, really, is to try

00:23:26.590 --> 00:23:28.410
and combat this, if
it ever happens.

00:23:28.410 --> 00:23:32.150
So if you try and read a
preference and it's not there

00:23:32.150 --> 00:23:35.445
or it's been corrupted or
whatever or the database has

00:23:35.445 --> 00:23:39.275
been corrupted, to try
and think of ways to

00:23:39.275 --> 00:23:39.740
sort of work around.

00:23:39.740 --> 00:23:40.130
It.

00:23:40.130 --> 00:23:41.880
So I don't know.

00:23:41.880 --> 00:23:45.100
Create backups of database or
your preferences as needed.

00:23:45.100 --> 00:23:46.890
NICK BUTCHER: If you're really
worried about it, if it's

00:23:46.890 --> 00:23:48.935
really critical that you don't
lose it, then probably you

00:23:48.935 --> 00:23:50.630
don't want to be using these
high-level abstractions like

00:23:50.630 --> 00:23:52.140
shared preferences
and databases.

00:23:52.140 --> 00:23:54.775
You probably want to be working
at the file level and

00:23:54.775 --> 00:23:56.860
then looking at the guarantees
that the different file

00:23:56.860 --> 00:23:57.870
systems will make to you.

00:23:57.870 --> 00:24:01.560
And if it's super critical
information like financial

00:24:01.560 --> 00:24:03.495
information, transaction
information you just cannot

00:24:03.495 --> 00:24:06.310
lose, then yeah, you probably
want to get a little bit lower

00:24:06.310 --> 00:24:09.800
level and look at the guarantees
they make.

00:24:09.800 --> 00:24:11.860
If it's not as critical, then
you probably can rely on these

00:24:11.860 --> 00:24:13.070
high-level abstractions.

00:24:13.070 --> 00:24:14.750
So if you're looking at
shared preferences,

00:24:14.750 --> 00:24:15.470
then there's two ways.

00:24:15.470 --> 00:24:17.570
You can either apply
or commit them.

00:24:17.570 --> 00:24:18.250
They're two different methods.

00:24:18.250 --> 00:24:20.800
One is going to be async So
there's a slightly larger

00:24:20.800 --> 00:24:26.080
chance of you not knowing it's
written and before it returns

00:24:26.080 --> 00:24:26.720
control to you.

00:24:26.720 --> 00:24:29.260
Whereas, if you do the
synchronous one, you'll know

00:24:29.260 --> 00:24:30.580
when it returns control to
your program that's been

00:24:30.580 --> 00:24:33.420
written, so you can guarantee
it's been persisted.

00:24:33.420 --> 00:24:37.280
So it depends on the data and
how critical it is and how the

00:24:37.280 --> 00:24:38.661
impact of losing any
of it will be.

00:24:41.490 --> 00:24:43.730
But generally, not a
massive issue, I'd

00:24:43.730 --> 00:24:44.670
say, to worry about.

00:24:44.670 --> 00:24:45.420
CHRIS BANES: Yeah, I
wouldn't say it's--

00:24:45.420 --> 00:24:47.248
NICK BUTCHER: It's not going
to keep me up at night.

00:24:47.248 --> 00:24:48.498
[INAUDIBLE]

00:24:50.960 --> 00:24:51.480
Right.

00:24:51.480 --> 00:24:53.120
I think we've exhausted
the moderator.

00:24:53.120 --> 00:24:54.820
MATT GAUNT: [INAUDIBLE]

00:24:54.820 --> 00:24:58.230
NICK BUTCHER: Go for it.

00:24:58.230 --> 00:25:00.570
MATT GAUNT: If you have a
premium app with a lot of

00:25:00.570 --> 00:25:03.130
customers who have already
paid but you want to

00:25:03.130 --> 00:25:05.950
transition to a freemium app
using in-app purchases in the

00:25:05.950 --> 00:25:09.480
subscriptions, will the Google
Play store properly return the

00:25:09.480 --> 00:25:11.480
original purchase status
to the [? last ?]

00:25:11.480 --> 00:25:14.025
API once you to declare
the app to be free?

00:25:14.025 --> 00:25:16.910
NICK BUTCHER: Unfortunately
not.

00:25:16.910 --> 00:25:18.850
This is a general problem of
which we don't have a great

00:25:18.850 --> 00:25:22.800
solution of migrating pages
to a freemium model.

00:25:22.800 --> 00:25:24.050
CHRIS BANES: Yeah.

00:25:26.215 --> 00:25:27.550
NICK BUTCHER: Yeah.

00:25:27.550 --> 00:25:30.890
I've seen some innovative
workarounds like [INAUDIBLE]

00:25:30.890 --> 00:25:31.600
sold the freemium app.

00:25:31.600 --> 00:25:34.900
And then in the freemium app,
you use package managers to

00:25:34.900 --> 00:25:36.700
detect if the premium
one is installed.

00:25:36.700 --> 00:25:39.260
Basically, it becomes
like an un-locker.

00:25:39.260 --> 00:25:42.950
You can issue an update so it
even removes the launcher icon

00:25:42.950 --> 00:25:45.840
but it stays installed as the
kind of un-locker app.

00:25:45.840 --> 00:25:48.105
And then enabling the same
functionality as if they'd

00:25:48.105 --> 00:25:49.080
done the app purchase.

00:25:49.080 --> 00:25:50.490
So that's one possible
work-around.

00:25:50.490 --> 00:25:51.940
But unfortunately, yeah.

00:25:51.940 --> 00:25:54.602
As we said, the service
[INAUDIBLE] won't

00:25:54.602 --> 00:25:55.650
return for a free app.

00:25:55.650 --> 00:25:57.970
CHRIS BANES: So Luke in
the chat has said

00:25:57.970 --> 00:25:59.215
we missed his question.

00:25:59.215 --> 00:26:00.120
MATT GAUNT: Ah.

00:26:00.120 --> 00:26:01.735
Do you want to ask it now?

00:26:01.735 --> 00:26:02.290
NICK BUTCHER: Yeah.

00:26:02.290 --> 00:26:03.540
Luke, what was your question?

00:26:05.796 --> 00:26:08.320
Can you un-mute or
are you no mic?

00:26:11.030 --> 00:26:16.130
MATT GAUNT: Also Anna Marie, I
do not understand what you're

00:26:16.130 --> 00:26:20.460
asking us at all.

00:26:20.460 --> 00:26:21.265
Sorry.

00:26:21.265 --> 00:26:23.200
If you can reword it,
then maybe we'll be

00:26:23.200 --> 00:26:24.130
able to answer it.

00:26:24.130 --> 00:26:27.550
But you have to be quick.

00:26:27.550 --> 00:26:29.636
NICK BUTCHER: Well, he's running
out of time here.

00:26:29.636 --> 00:26:32.100
CHRIS BANES: So I think, is
it Luke from Australia?

00:26:32.100 --> 00:26:33.630
I think that's the one.

00:26:33.630 --> 00:26:36.310
So he's asked, just wondering
if there's any way to change

00:26:36.310 --> 00:26:38.630
the default composition
arrow on map fragment?

00:26:38.630 --> 00:26:40.706
NICK BUTCHER: No, there's not.

00:26:40.706 --> 00:26:43.670
CHRIS BANES: Like a
car, for example.

00:26:43.670 --> 00:26:45.350
He used to have to do
this [INAUDIBLE]

00:26:45.350 --> 00:26:46.710
method in version 1.

00:26:46.710 --> 00:26:49.260
But it doesn't look like
you can in version 2.

00:26:49.260 --> 00:26:51.590
NICK BUTCHER: I don't know
the answer to that.

00:26:51.590 --> 00:26:54.880
CHRIS BANES: I don't
think you can.

00:26:54.880 --> 00:26:56.710
Because most of the methods
are final now,

00:26:56.710 --> 00:26:57.450
if I remember rightly.

00:26:57.450 --> 00:27:00.280
They've really tightened up map
fragment and all the sort

00:27:00.280 --> 00:27:01.530
of related methods.

00:27:04.040 --> 00:27:04.620
So yeah.

00:27:04.620 --> 00:27:05.870
Unfortunately, it doesn't
look like you can.

00:27:09.544 --> 00:27:12.000
NICK BUTCHER: Any other live
questions or should we wrap up

00:27:12.000 --> 00:27:12.790
a little early?

00:27:12.790 --> 00:27:15.020
Three minutes.

00:27:15.020 --> 00:27:16.445
Oh, Giuseppe's hand is up.

00:27:16.445 --> 00:27:17.000
MATT GAUNT: Who else.

00:27:17.000 --> 00:27:18.183
NICK BUTCHER: All right.

00:27:18.183 --> 00:27:19.170
MALE SPEAKER: Yeah.

00:27:19.170 --> 00:27:21.020
Just [INAUDIBLE]

00:27:21.020 --> 00:27:23.400
few minutes, OK?

00:27:23.400 --> 00:27:28.510
What is the best approach for
an application that must

00:27:28.510 --> 00:27:33.560
upload to a socket
[? center ?]

00:27:33.560 --> 00:27:35.590
continuously stream?

00:27:35.590 --> 00:27:39.870
I mean, suppose that
I [INAUDIBLE]

00:27:39.870 --> 00:27:42.190
the byte array from
the camera.

00:27:42.190 --> 00:27:42.550
OK?

00:27:42.550 --> 00:27:45.580
And I would like to upload
continuously

00:27:45.580 --> 00:27:47.600
to a dot net server.

00:27:47.600 --> 00:27:48.360
OK?

00:27:48.360 --> 00:27:50.900
What is the best approach
for Android [? Word? ?]

00:27:50.900 --> 00:27:53.640
The socket system?

00:27:53.640 --> 00:27:55.680
Another way?

00:27:55.680 --> 00:27:58.950
What do you suggest for
continuously upload?

00:28:01.850 --> 00:28:03.390
CHRIS BANES: In terms
of [INAUDIBLE]

00:28:03.390 --> 00:28:06.940
it's quite a broad
topic to do this.

00:28:06.940 --> 00:28:07.530
So it depends.

00:28:07.530 --> 00:28:09.460
Does it need to be real time?

00:28:09.460 --> 00:28:12.040
So does it need to be there
as fast as possible?

00:28:12.040 --> 00:28:14.060
Or is it kind of--

00:28:14.060 --> 00:28:16.665
MALE SPEAKER: Real time
with some delay.

00:28:16.665 --> 00:28:18.465
CHRIS BANES: Real time
with some delay.

00:28:18.465 --> 00:28:20.580
MALE SPEAKER: Yeah, five
seconds, six seconds, eight

00:28:20.580 --> 00:28:22.070
seconds is acceptable delay.

00:28:22.070 --> 00:28:25.540
MATT GAUNT: So you essentially
want to--

00:28:25.540 --> 00:28:28.650
so the way that I've done this
in the past was you can

00:28:28.650 --> 00:28:32.240
essentially get access
to the camera--

00:28:32.240 --> 00:28:34.244
so essentially take the camera's
view and stick it on

00:28:34.244 --> 00:28:34.750
a service view.

00:28:34.750 --> 00:28:36.706
And then you can read that and
there's a way you can convert

00:28:36.706 --> 00:28:38.880
it to an RTP stream.

00:28:38.880 --> 00:28:43.180
And then, essentially, stream
that and read it from the

00:28:43.180 --> 00:28:45.470
server side.

00:28:45.470 --> 00:28:46.925
There's a couple of open
source projects

00:28:46.925 --> 00:28:48.550
that do this for you.

00:28:48.550 --> 00:28:52.700
Because there's one little thing
where the header of each

00:28:52.700 --> 00:28:56.180
packet, there is no size.

00:28:56.180 --> 00:28:56.710
So yeah.

00:28:56.710 --> 00:28:59.370
Basically, the RTP stream, the
way it's done is it needs to

00:28:59.370 --> 00:29:01.720
know the packet size.

00:29:01.720 --> 00:29:05.455
And by default, that won't get
added in, so you have to do

00:29:05.455 --> 00:29:06.760
some chipping around with it.

00:29:06.760 --> 00:29:09.190
But it makes a lot of sense
in terms of you're using a

00:29:09.190 --> 00:29:12.070
standard stream protocol at
[? CDP ?] so it's going to get

00:29:12.070 --> 00:29:14.780
there as fast as it can.

00:29:14.780 --> 00:29:15.030
Yeah.

00:29:15.030 --> 00:29:17.266
That's the way I've done it.

00:29:17.266 --> 00:29:21.790
I think you were telling me
about this before, about the,

00:29:21.790 --> 00:29:24.370
is it the end data point?

00:29:24.370 --> 00:29:24.910
Something?

00:29:24.910 --> 00:29:25.670
I don't know.

00:29:25.670 --> 00:29:27.860
Look at the open source
projects, and you will see

00:29:27.860 --> 00:29:30.140
what I mean about the
length of the

00:29:30.140 --> 00:29:31.060
packets not being right.

00:29:31.060 --> 00:29:32.655
That's the only caveat.

00:29:32.655 --> 00:29:33.905
MALE SPEAKER: OK.

00:29:37.405 --> 00:29:38.660
NICK BUTCHER: Cool.

00:29:38.660 --> 00:29:39.860
Right.

00:29:39.860 --> 00:29:42.190
So I think that brings us to
the end of our time today.

00:29:42.190 --> 00:29:43.270
So thanks everyone
for joining us.

00:29:43.270 --> 00:29:46.320
And as always, we do prefer if
you can get the questions in

00:29:46.320 --> 00:29:48.480
ahead of time in the moderator,
so it actually

00:29:48.480 --> 00:29:52.425
gives us a chance to research
some of this stuff and get you

00:29:52.425 --> 00:29:53.170
a better answer.

00:29:53.170 --> 00:29:53.880
So yeah.

00:29:53.880 --> 00:29:55.940
Thanks everyone for joining us,
and we'll catch you same

00:29:55.940 --> 00:29:56.880
time next week.

00:29:56.880 --> 00:29:57.140
Bye.

00:29:57.140 --> 00:29:57.740
MATT GAUNT: Bye, everybody.

00:29:57.740 --> 00:29:59.190
CHRIS BANES: Cheers, guys.

00:29:59.190 --> 00:30:00.360
YOSSI ELKRIEF: Bye, guys.

00:30:00.360 --> 00:30:01.910
Thank you.

