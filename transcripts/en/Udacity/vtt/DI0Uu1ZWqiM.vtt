WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:02.510
In this lesson we're going to learn how to use

00:00:02.510 --> 00:00:05.930
memcache in App Engine applications. One good thing about using

00:00:05.930 --> 00:00:08.880
Objectify is that you can configure it to automatically use

00:00:08.880 --> 00:00:12.040
Memcahce to cache your entity data. All you have to

00:00:12.040 --> 00:00:16.850
do is add @cache annotation to your entity class. Then

00:00:16.850 --> 00:00:19.350
Objectify is going to do its best to use Memcache

00:00:19.350 --> 00:00:22.120
whenever possible when you try to get entity data, to

00:00:22.120 --> 00:00:25.400
reduce hits to the data store. It's really easy to use

00:00:25.400 --> 00:00:27.970
Objectify with Memcache, but there's a few things

00:00:27.970 --> 00:00:30.590
that you should know about how Objectify uses

00:00:30.590 --> 00:00:33.580
Memcache. For one thing, it only uses Memcache

00:00:33.580 --> 00:00:36.170
when you get an entity by key, you save

00:00:36.170 --> 00:00:39.840
it or you delete it. And query results

00:00:39.840 --> 00:00:43.900
are not cached. Objectify puts the property values into

00:00:43.900 --> 00:00:47.460
memcache. It doesn't put the entire entity into

00:00:47.460 --> 00:00:50.450
memcache. Another thing that is really helpful to be

00:00:50.450 --> 00:00:53.190
aware of is that objectify has its own session

00:00:53.190 --> 00:00:55.920
cache. So often when you do a get by key,

00:00:55.920 --> 00:00:58.390
objectify is going to get the results from the session cache

00:00:58.390 --> 00:01:00.950
without even going to memcache, let along going to the

00:01:00.950 --> 00:01:04.360
data store. So here's what the profile class looks

00:01:04.360 --> 00:01:08.405
like with the @Cache annotation. All I did was add

00:01:08.405 --> 00:01:12.660
@Cache to the entity class definition and now objectify is

00:01:12.660 --> 00:01:16.550
going to use memcache to cache property values whenever possible.

00:01:16.550 --> 00:01:18.550
I don't even have to write a single line of

00:01:18.550 --> 00:01:22.060
code to do it. So when you're applications been deployed

00:01:22.060 --> 00:01:24.840
to app spot, you can use the memcache viewer to

00:01:24.840 --> 00:01:29.090
view the memcache entries. I'm going to flush Memcache, to make

00:01:29.090 --> 00:01:33.650
sure, that I have no Memcache entries to start with.

00:01:33.650 --> 00:01:36.080
So now I have no entries in Memcache, I'm going to

00:01:36.080 --> 00:01:38.450
go and do some things in my application, to see

00:01:38.450 --> 00:01:41.700
if I can get some Memcache entries. When you go

00:01:41.700 --> 00:01:44.490
to the profile page, it gets your profile entity out

00:01:44.490 --> 00:01:47.270
of the data store if you already have a profile.

00:01:47.270 --> 00:01:49.550
That's how it knows what your display name and tee

00:01:49.550 --> 00:01:52.220
shirt size are. Here on the profile page, I'm going to

00:01:52.220 --> 00:01:55.840
make a change. Change my tee shirt size, and update

00:01:55.840 --> 00:01:58.770
my profile. I'm also going to go to the Show Conferences

00:01:58.770 --> 00:02:03.250
page and show all the conferences. The list of conferences

00:02:03.250 --> 00:02:06.320
is retrieved as a Query and as I already mentioned,

00:02:06.320 --> 00:02:10.520
objectify doesn't use Memcache for Query results. However, we do

00:02:10.520 --> 00:02:13.100
actually get the profile entity by key so we can

00:02:13.100 --> 00:02:15.830
figure out the display name of the organizer. I can

00:02:15.830 --> 00:02:19.900
also drill down into conference details. Which does a get by

00:02:19.900 --> 00:02:22.300
key. So now I've done a few things that involve

00:02:22.300 --> 00:02:25.020
getting entities by key from the data store. Let's see

00:02:25.020 --> 00:02:28.040
if any of the results got cached in Memcache. So

00:02:28.040 --> 00:02:31.340
you need to be sure to refresh the Memcache viewer to

00:02:31.340 --> 00:02:33.670
get the latest data. And here you see there are

00:02:33.670 --> 00:02:37.560
some Memcache entries. I've actually only got one item. And I

00:02:37.560 --> 00:02:40.560
thought maybe I would've had a few more than that. The

00:02:40.560 --> 00:02:43.200
reason there might not be as many items in Memcache as

00:02:43.200 --> 00:02:47.470
you expect, is because Objectify has its own session cache. So

00:02:47.470 --> 00:02:51.230
it's going to save data in the session cache, which will reduce

00:02:51.230 --> 00:02:54.200
the use not only of Memcache, but of the data store.

00:02:54.200 --> 00:02:56.510
So anyway, you end up seeing less items that you mark

00:02:56.510 --> 00:02:59.780
with the Memcache viewer, because of the session cache. So

00:02:59.780 --> 00:03:03.470
go ahead and update the conference and profile empty classes to

00:03:03.470 --> 00:03:07.110
use Memcache. It's a good practice to always check any changes

00:03:07.110 --> 00:03:10.060
to your app on localhost first. So feel free to do

00:03:10.060 --> 00:03:13.300
that. And you're going to need to deploy to appspot, because

00:03:13.300 --> 00:03:16.190
we want to use Memcache viewer. And for that, your app

00:03:16.190 --> 00:03:19.130
has to be running on appspot. After you've deployed your app

00:03:19.130 --> 00:03:21.710
to appspot, go to the Memcache viewer, and if you have

00:03:21.710 --> 00:03:24.220
any items in Memcache, you might or you might not.

00:03:24.220 --> 00:03:27.550
But if you do, go ahead and flush Memcache. Then

00:03:27.550 --> 00:03:30.300
in your application, go ahead and do some things to

00:03:30.300 --> 00:03:34.120
put some data into Memcache, so create some conferences, show

00:03:34.120 --> 00:03:38.660
conferences, view details, maybe create or change a profile. And

00:03:38.660 --> 00:03:41.550
then go back to the Memcache viewer and see if

00:03:41.550 --> 00:03:44.540
you've got any entries in Memcache. You might need to

00:03:44.540 --> 00:03:46.940
do a few things in your application to get some entries

00:03:46.940 --> 00:03:50.390
to show up. And you'll probably less items in the Memcache.

00:03:50.390 --> 00:03:54.350
Fewer than you might expect because Objectify uses it's own session cache.

