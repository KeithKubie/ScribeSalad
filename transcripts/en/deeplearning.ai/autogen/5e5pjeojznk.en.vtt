WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.990 align:start position:0%
 
you've<00:00:00.960><c> learned</c><00:00:01.230><c> about</c><00:00:01.380><c> object</c><00:00:02.190><c> localization</c>

00:00:02.990 --> 00:00:03.000 align:start position:0%
you've learned about object localization
 

00:00:03.000 --> 00:00:06.380 align:start position:0%
you've learned about object localization
as<00:00:03.240><c> well</c><00:00:03.750><c> as</c><00:00:03.929><c> landmark</c><00:00:04.650><c> detection</c><00:00:05.220><c> now</c><00:00:05.819><c> let's</c>

00:00:06.380 --> 00:00:06.390 align:start position:0%
as well as landmark detection now let's
 

00:00:06.390 --> 00:00:08.570 align:start position:0%
as well as landmark detection now let's
build<00:00:06.779><c> out</c><00:00:06.990><c> toward</c><00:00:07.410><c> an</c><00:00:07.589><c> object</c><00:00:07.770><c> detection</c>

00:00:08.570 --> 00:00:08.580 align:start position:0%
build out toward an object detection
 

00:00:08.580 --> 00:00:11.030 align:start position:0%
build out toward an object detection
algorithm<00:00:09.240><c> in</c><00:00:09.510><c> this</c><00:00:09.960><c> video</c><00:00:10.260><c> you</c><00:00:10.380><c> learned</c><00:00:10.769><c> how</c>

00:00:11.030 --> 00:00:11.040 align:start position:0%
algorithm in this video you learned how
 

00:00:11.040 --> 00:00:13.370 align:start position:0%
algorithm in this video you learned how
to<00:00:11.070><c> use</c><00:00:11.219><c> a</c><00:00:11.370><c> confident</c><00:00:12.090><c> to</c><00:00:12.630><c> perform</c><00:00:12.990><c> object</c>

00:00:13.370 --> 00:00:13.380 align:start position:0%
to use a confident to perform object
 

00:00:13.380 --> 00:00:15.320 align:start position:0%
to use a confident to perform object
detection<00:00:13.710><c> using</c><00:00:14.309><c> something</c><00:00:14.910><c> called</c><00:00:15.120><c> the</c>

00:00:15.320 --> 00:00:15.330 align:start position:0%
detection using something called the
 

00:00:15.330 --> 00:00:17.660 align:start position:0%
detection using something called the
sliding<00:00:15.990><c> windows</c><00:00:16.379><c> detection</c><00:00:17.039><c> algorithm</c>

00:00:17.660 --> 00:00:17.670 align:start position:0%
sliding windows detection algorithm
 

00:00:17.670 --> 00:00:19.790 align:start position:0%
sliding windows detection algorithm
let's<00:00:18.330><c> say</c><00:00:18.510><c> you</c><00:00:18.570><c> want</c><00:00:18.869><c> to</c><00:00:19.050><c> build</c><00:00:19.230><c> a</c><00:00:19.439><c> car</c>

00:00:19.790 --> 00:00:19.800 align:start position:0%
let's say you want to build a car
 

00:00:19.800 --> 00:00:21.980 align:start position:0%
let's say you want to build a car
detection<00:00:20.400><c> algorithm</c><00:00:20.970><c> here's</c><00:00:21.480><c> what</c><00:00:21.720><c> you</c><00:00:21.810><c> can</c>

00:00:21.980 --> 00:00:21.990 align:start position:0%
detection algorithm here's what you can
 

00:00:21.990 --> 00:00:24.230 align:start position:0%
detection algorithm here's what you can
do<00:00:22.199><c> you</c><00:00:22.470><c> can</c><00:00:22.619><c> first</c><00:00:22.830><c> create</c><00:00:23.220><c> a</c><00:00:23.250><c> label</c><00:00:23.640><c> training</c>

00:00:24.230 --> 00:00:24.240 align:start position:0%
do you can first create a label training
 

00:00:24.240 --> 00:00:27.220 align:start position:0%
do you can first create a label training
set<00:00:24.449><c> so</c><00:00:24.810><c> x</c><00:00:25.050><c> and</c><00:00:25.260><c> y</c><00:00:25.410><c> with</c><00:00:26.099><c> closely</c><00:00:26.580><c> cropped</c>

00:00:27.220 --> 00:00:27.230 align:start position:0%
set so x and y with closely cropped
 

00:00:27.230 --> 00:00:31.040 align:start position:0%
set so x and y with closely cropped
examples<00:00:28.230><c> of</c><00:00:28.529><c> cars</c><00:00:28.859><c> so</c><00:00:29.310><c> this</c><00:00:29.970><c> is</c><00:00:30.150><c> a</c><00:00:30.179><c> image</c><00:00:30.779><c> X</c>

00:00:31.040 --> 00:00:31.050 align:start position:0%
examples of cars so this is a image X
 

00:00:31.050 --> 00:00:33.110 align:start position:0%
examples of cars so this is a image X
that's<00:00:31.410><c> a</c><00:00:31.500><c> positive</c><00:00:31.740><c> example</c><00:00:32.009><c> as</c><00:00:32.489><c> a</c><00:00:32.520><c> car</c><00:00:32.820><c> is</c><00:00:33.030><c> a</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
that's a positive example as a car is a
 

00:00:33.120 --> 00:00:36.410 align:start position:0%
that's a positive example as a car is a
car<00:00:33.270><c> is</c><00:00:33.960><c> a</c><00:00:34.020><c> car</c><00:00:34.489><c> and</c><00:00:35.489><c> then</c><00:00:35.760><c> there's</c><00:00:35.940><c> not</c><00:00:36.059><c> a</c><00:00:36.120><c> car</c>

00:00:36.410 --> 00:00:36.420 align:start position:0%
car is a car and then there's not a car
 

00:00:36.420 --> 00:00:39.080 align:start position:0%
car is a car and then there's not a car
that's<00:00:36.840><c> not</c><00:00:37.079><c> a</c><00:00:37.110><c> car</c><00:00:37.410><c> and</c><00:00:37.649><c> for</c><00:00:38.309><c> our</c><00:00:38.399><c> purposes</c><00:00:38.850><c> in</c>

00:00:39.080 --> 00:00:39.090 align:start position:0%
that's not a car and for our purposes in
 

00:00:39.090 --> 00:00:40.880 align:start position:0%
that's not a car and for our purposes in
this<00:00:39.239><c> training</c><00:00:39.480><c> set</c><00:00:39.780><c> you</c><00:00:39.809><c> can</c><00:00:40.140><c> start</c><00:00:40.469><c> off</c><00:00:40.649><c> with</c>

00:00:40.880 --> 00:00:40.890 align:start position:0%
this training set you can start off with
 

00:00:40.890 --> 00:00:43.549 align:start position:0%
this training set you can start off with
I'm<00:00:41.579><c> going</c><00:00:41.760><c> to</c><00:00:41.850><c> call</c><00:00:42.030><c> closely</c><00:00:42.629><c> cropped</c><00:00:42.960><c> images</c>

00:00:43.549 --> 00:00:43.559 align:start position:0%
I'm going to call closely cropped images
 

00:00:43.559 --> 00:00:46.279 align:start position:0%
I'm going to call closely cropped images
meaning<00:00:44.070><c> that</c><00:00:44.250><c> X</c><00:00:44.700><c> is</c><00:00:45.090><c> you</c><00:00:45.660><c> know</c><00:00:45.780><c> pretty</c><00:00:46.170><c> much</c>

00:00:46.279 --> 00:00:46.289 align:start position:0%
meaning that X is you know pretty much
 

00:00:46.289 --> 00:00:48.200 align:start position:0%
meaning that X is you know pretty much
only<00:00:46.860><c> the</c><00:00:47.010><c> car</c><00:00:47.250><c> so</c><00:00:47.489><c> you</c><00:00:47.579><c> can</c><00:00:47.700><c> take</c><00:00:47.969><c> a</c><00:00:48.000><c> picture</c>

00:00:48.200 --> 00:00:48.210 align:start position:0%
only the car so you can take a picture
 

00:00:48.210 --> 00:00:50.420 align:start position:0%
only the car so you can take a picture
and<00:00:48.629><c> crop</c><00:00:48.989><c> out</c><00:00:49.200><c> and</c><00:00:49.469><c> just</c><00:00:49.649><c> cut</c><00:00:49.890><c> out</c><00:00:50.010><c> anything</c>

00:00:50.420 --> 00:00:50.430 align:start position:0%
and crop out and just cut out anything
 

00:00:50.430 --> 00:00:52.580 align:start position:0%
and crop out and just cut out anything
else<00:00:50.579><c> there's</c><00:00:50.879><c> not</c><00:00:51.120><c> part</c><00:00:51.780><c> of</c><00:00:51.870><c> a</c><00:00:51.989><c> car</c><00:00:52.230><c> so</c><00:00:52.500><c> you</c>

00:00:52.580 --> 00:00:52.590 align:start position:0%
else there's not part of a car so you
 

00:00:52.590 --> 00:00:55.910 align:start position:0%
else there's not part of a car so you
end<00:00:52.770><c> up</c><00:00:52.890><c> with</c><00:00:53.129><c> a</c><00:00:53.160><c> car</c><00:00:54.199><c> centered</c><00:00:55.199><c> and</c><00:00:55.379><c> in</c><00:00:55.649><c> pretty</c>

00:00:55.910 --> 00:00:55.920 align:start position:0%
end up with a car centered and in pretty
 

00:00:55.920 --> 00:00:58.520 align:start position:0%
end up with a car centered and in pretty
much<00:00:56.010><c> the</c><00:00:56.190><c> entire</c><00:00:56.699><c> image</c><00:00:56.969><c> given</c><00:00:57.930><c> this</c><00:00:58.079><c> labeled</c>

00:00:58.520 --> 00:00:58.530 align:start position:0%
much the entire image given this labeled
 

00:00:58.530 --> 00:01:00.889 align:start position:0%
much the entire image given this labeled
training<00:00:58.829><c> set</c><00:00:59.190><c> given</c><00:00:59.460><c> this</c><00:01:00.180><c> labeled</c><00:01:00.660><c> training</c>

00:01:00.889 --> 00:01:00.899 align:start position:0%
training set given this labeled training
 

00:01:00.899 --> 00:01:03.529 align:start position:0%
training set given this labeled training
set<00:01:01.260><c> you</c><00:01:01.440><c> can</c><00:01:01.649><c> then</c><00:01:01.859><c> train</c><00:01:02.250><c> a</c><00:01:02.280><c> confident</c><00:01:03.059><c> that</c>

00:01:03.529 --> 00:01:03.539 align:start position:0%
set you can then train a confident that
 

00:01:03.539 --> 00:01:05.929 align:start position:0%
set you can then train a confident that
inputs<00:01:04.080><c> an</c><00:01:04.350><c> image</c><00:01:05.220><c> like</c><00:01:05.519><c> one</c><00:01:05.729><c> of</c><00:01:05.820><c> these</c>

00:01:05.929 --> 00:01:05.939 align:start position:0%
inputs an image like one of these
 

00:01:05.939 --> 00:01:09.140 align:start position:0%
inputs an image like one of these
closely<00:01:06.270><c> cropped</c><00:01:06.659><c> images</c><00:01:07.310><c> and</c><00:01:08.310><c> then</c><00:01:08.670><c> the</c><00:01:08.909><c> job</c>

00:01:09.140 --> 00:01:09.150 align:start position:0%
closely cropped images and then the job
 

00:01:09.150 --> 00:01:13.010 align:start position:0%
closely cropped images and then the job
of<00:01:09.330><c> the</c><00:01:09.420><c> confident</c><00:01:09.990><c> is</c><00:01:10.200><c> to</c><00:01:10.770><c> output</c><00:01:11.010><c> y</c><00:01:11.850><c> 0</c><00:01:12.479><c> 1</c><00:01:12.810><c> is</c>

00:01:13.010 --> 00:01:13.020 align:start position:0%
of the confident is to output y 0 1 is
 

00:01:13.020 --> 00:01:14.260 align:start position:0%
of the confident is to output y 0 1 is
as<00:01:13.290><c> a</c><00:01:13.320><c> car</c><00:01:13.680><c> or</c><00:01:13.830><c> not</c>

00:01:14.260 --> 00:01:14.270 align:start position:0%
as a car or not
 

00:01:14.270 --> 00:01:16.880 align:start position:0%
as a car or not
once<00:01:15.270><c> you've</c><00:01:15.450><c> trained</c><00:01:15.810><c> up</c><00:01:16.020><c> this</c><00:01:16.229><c> confident</c>

00:01:16.880 --> 00:01:16.890 align:start position:0%
once you've trained up this confident
 

00:01:16.890 --> 00:01:19.429 align:start position:0%
once you've trained up this confident
you<00:01:17.159><c> can</c><00:01:17.280><c> then</c><00:01:17.460><c> use</c><00:01:17.729><c> it</c><00:01:17.939><c> in</c><00:01:18.180><c> sliding</c><00:01:18.840><c> windows</c>

00:01:19.429 --> 00:01:19.439 align:start position:0%
you can then use it in sliding windows
 

00:01:19.439 --> 00:01:21.950 align:start position:0%
you can then use it in sliding windows
detection<00:01:20.130><c> so</c><00:01:20.700><c> the</c><00:01:20.820><c> way</c><00:01:20.939><c> you</c><00:01:21.000><c> do</c><00:01:21.240><c> that</c><00:01:21.390><c> is</c><00:01:21.720><c> if</c>

00:01:21.950 --> 00:01:21.960 align:start position:0%
detection so the way you do that is if
 

00:01:21.960 --> 00:01:24.679 align:start position:0%
detection so the way you do that is if
you<00:01:22.110><c> have</c><00:01:22.259><c> a</c><00:01:22.290><c> test</c><00:01:22.619><c> image</c><00:01:22.860><c> like</c><00:01:23.280><c> this</c><00:01:23.570><c> what</c><00:01:24.570><c> you</c>

00:01:24.679 --> 00:01:24.689 align:start position:0%
you have a test image like this what you
 

00:01:24.689 --> 00:01:27.410 align:start position:0%
you have a test image like this what you
do<00:01:24.900><c> is</c><00:01:25.229><c> you</c><00:01:25.560><c> start</c><00:01:25.799><c> by</c><00:01:26.040><c> picking</c><00:01:26.580><c> a</c><00:01:26.970><c> certain</c>

00:01:27.410 --> 00:01:27.420 align:start position:0%
do is you start by picking a certain
 

00:01:27.420 --> 00:01:29.270 align:start position:0%
do is you start by picking a certain
window<00:01:27.780><c> sizes</c><00:01:28.259><c> are</c><00:01:28.350><c> shown</c><00:01:28.590><c> down</c><00:01:28.770><c> there</c><00:01:29.070><c> and</c>

00:01:29.270 --> 00:01:29.280 align:start position:0%
window sizes are shown down there and
 

00:01:29.280 --> 00:01:32.810 align:start position:0%
window sizes are shown down there and
then<00:01:29.909><c> you</c><00:01:29.939><c> would</c><00:01:30.270><c> input</c><00:01:30.900><c> into</c><00:01:31.860><c> this</c><00:01:32.040><c> confident</c>

00:01:32.810 --> 00:01:32.820 align:start position:0%
then you would input into this confident
 

00:01:32.820 --> 00:01:35.870 align:start position:0%
then you would input into this confident
a<00:01:33.000><c> small</c><00:01:33.930><c> rectangular</c><00:01:34.500><c> region</c><00:01:35.040><c> so</c><00:01:35.310><c> take</c><00:01:35.850><c> just</c>

00:01:35.870 --> 00:01:35.880 align:start position:0%
a small rectangular region so take just
 

00:01:35.880 --> 00:01:39.830 align:start position:0%
a small rectangular region so take just
this<00:01:36.450><c> little</c><00:01:36.770><c> red</c><00:01:37.770><c> square</c><00:01:38.250><c> and</c><00:01:38.549><c> put</c><00:01:39.150><c> that</c><00:01:39.420><c> into</c>

00:01:39.830 --> 00:01:39.840 align:start position:0%
this little red square and put that into
 

00:01:39.840 --> 00:01:42.410 align:start position:0%
this little red square and put that into
the<00:01:40.320><c> confident</c><00:01:40.920><c> and</c><00:01:41.130><c> have</c><00:01:41.670><c> a</c><00:01:41.700><c> confident</c><00:01:42.240><c> make</c>

00:01:42.410 --> 00:01:42.420 align:start position:0%
the confident and have a confident make
 

00:01:42.420 --> 00:01:44.510 align:start position:0%
the confident and have a confident make
a<00:01:42.450><c> prediction</c><00:01:42.930><c> and</c><00:01:43.140><c> presumably</c><00:01:43.530><c> for</c><00:01:44.310><c> that</c>

00:01:44.510 --> 00:01:44.520 align:start position:0%
a prediction and presumably for that
 

00:01:44.520 --> 00:01:47.510 align:start position:0%
a prediction and presumably for that
little<00:01:45.509><c> region</c><00:01:45.899><c> in</c><00:01:46.290><c> the</c><00:01:46.470><c> red</c><00:01:46.619><c> square</c><00:01:46.860><c> will</c><00:01:47.250><c> say</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
little region in the red square will say
 

00:01:47.520 --> 00:01:49.249 align:start position:0%
little region in the red square will say
no<00:01:47.759><c> that</c><00:01:48.060><c> little</c><00:01:48.210><c> red</c><00:01:48.509><c> square</c><00:01:48.810><c> does</c><00:01:49.079><c> not</c>

00:01:49.249 --> 00:01:49.259 align:start position:0%
no that little red square does not
 

00:01:49.259 --> 00:01:51.889 align:start position:0%
no that little red square does not
contain<00:01:49.680><c> a</c><00:01:49.740><c> call</c><00:01:50.009><c> in</c><00:01:50.340><c> the</c><00:01:51.180><c> sliding</c><00:01:51.600><c> windows</c>

00:01:51.889 --> 00:01:51.899 align:start position:0%
contain a call in the sliding windows
 

00:01:51.899 --> 00:01:53.929 align:start position:0%
contain a call in the sliding windows
detection<00:01:52.320><c> algorithm</c><00:01:52.770><c> what</c><00:01:53.189><c> you</c><00:01:53.310><c> do</c><00:01:53.520><c> is</c><00:01:53.759><c> you</c>

00:01:53.929 --> 00:01:53.939 align:start position:0%
detection algorithm what you do is you
 

00:01:53.939 --> 00:01:59.090 align:start position:0%
detection algorithm what you do is you
then<00:01:54.799><c> process</c><00:01:55.799><c> input</c><00:01:56.280><c> a</c><00:01:56.840><c> second</c><00:01:57.840><c> image</c><00:01:58.320><c> now</c>

00:01:59.090 --> 00:01:59.100 align:start position:0%
then process input a second image now
 

00:01:59.100 --> 00:02:01.280 align:start position:0%
then process input a second image now
bounded<00:01:59.790><c> by</c><00:01:59.939><c> this</c><00:02:00.000><c> red</c><00:02:00.450><c> square</c><00:02:00.780><c> shifted</c><00:02:01.259><c> a</c>

00:02:01.280 --> 00:02:01.290 align:start position:0%
bounded by this red square shifted a
 

00:02:01.290 --> 00:02:03.590 align:start position:0%
bounded by this red square shifted a
little<00:02:01.530><c> bit</c><00:02:01.649><c> over</c><00:02:01.979><c> and</c><00:02:02.189><c> feed</c><00:02:02.969><c> that</c><00:02:03.000><c> to</c><00:02:03.240><c> the</c>

00:02:03.590 --> 00:02:03.600 align:start position:0%
little bit over and feed that to the
 

00:02:03.600 --> 00:02:05.600 align:start position:0%
little bit over and feed that to the
confidence<00:02:04.140><c> you</c><00:02:04.350><c> speed</c><00:02:04.680><c> in</c><00:02:04.829><c> just</c><00:02:04.860><c> the</c><00:02:05.250><c> region</c>

00:02:05.600 --> 00:02:05.610 align:start position:0%
confidence you speed in just the region
 

00:02:05.610 --> 00:02:08.150 align:start position:0%
confidence you speed in just the region
of<00:02:05.729><c> the</c><00:02:05.820><c> image</c><00:02:06.149><c> in</c><00:02:07.140><c> the</c><00:02:07.469><c> Red</c><00:02:07.649><c> Square</c><00:02:07.829><c> to</c><00:02:08.099><c> the</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
of the image in the Red Square to the
 

00:02:08.160 --> 00:02:10.219 align:start position:0%
of the image in the Red Square to the
confident<00:02:08.729><c> and</c><00:02:08.879><c> run</c><00:02:09.270><c> the</c><00:02:09.420><c> con</c><00:02:09.629><c> phonetic</c><00:02:10.050><c> game</c>

00:02:10.219 --> 00:02:10.229 align:start position:0%
confident and run the con phonetic game
 

00:02:10.229 --> 00:02:12.619 align:start position:0%
confident and run the con phonetic game
and<00:02:10.440><c> then</c><00:02:11.069><c> you</c><00:02:11.099><c> do</c><00:02:11.520><c> that</c>

00:02:12.619 --> 00:02:12.629 align:start position:0%
and then you do that
 

00:02:12.629 --> 00:02:16.490 align:start position:0%
and then you do that
with<00:02:13.049><c> a</c><00:02:13.079><c> third</c><00:02:13.409><c> image</c><00:02:14.250><c> and</c><00:02:14.930><c> so</c><00:02:15.930><c> on</c><00:02:16.110><c> and</c><00:02:16.379><c> you</c>

00:02:16.490 --> 00:02:16.500 align:start position:0%
with a third image and so on and you
 

00:02:16.500 --> 00:02:19.520 align:start position:0%
with a third image and so on and you
keep<00:02:16.739><c> going</c><00:02:17.060><c> until</c><00:02:18.060><c> you've</c><00:02:18.540><c> you'll</c><00:02:18.989><c> slit</c><00:02:19.349><c> the</c>

00:02:19.520 --> 00:02:19.530 align:start position:0%
keep going until you've you'll slit the
 

00:02:19.530 --> 00:02:22.130 align:start position:0%
keep going until you've you'll slit the
window<00:02:19.920><c> across</c><00:02:20.579><c> every</c><00:02:21.329><c> position</c><00:02:21.689><c> in</c><00:02:22.049><c> the</c>

00:02:22.130 --> 00:02:22.140 align:start position:0%
window across every position in the
 

00:02:22.140 --> 00:02:25.130 align:start position:0%
window across every position in the
image<00:02:22.829><c> and</c><00:02:23.150><c> I'm</c><00:02:24.150><c> using</c><00:02:24.420><c> a</c><00:02:24.629><c> pretty</c><00:02:24.870><c> large</c>

00:02:25.130 --> 00:02:25.140 align:start position:0%
image and I'm using a pretty large
 

00:02:25.140 --> 00:02:27.470 align:start position:0%
image and I'm using a pretty large
stride<00:02:25.769><c> in</c><00:02:26.099><c> this</c><00:02:26.310><c> example</c><00:02:26.670><c> just</c><00:02:27.120><c> to</c><00:02:27.180><c> make</c><00:02:27.269><c> the</c>

00:02:27.470 --> 00:02:27.480 align:start position:0%
stride in this example just to make the
 

00:02:27.480 --> 00:02:30.140 align:start position:0%
stride in this example just to make the
animation<00:02:27.810><c> go</c><00:02:28.109><c> faster</c><00:02:28.620><c> but</c><00:02:29.159><c> the</c><00:02:29.280><c> idea</c><00:02:29.670><c> is</c><00:02:29.730><c> you</c>

00:02:30.140 --> 00:02:30.150 align:start position:0%
animation go faster but the idea is you
 

00:02:30.150 --> 00:02:33.140 align:start position:0%
animation go faster but the idea is you
basically<00:02:30.930><c> go</c><00:02:31.260><c> through</c><00:02:31.340><c> every</c><00:02:32.340><c> region</c><00:02:33.000><c> of</c>

00:02:33.140 --> 00:02:33.150 align:start position:0%
basically go through every region of
 

00:02:33.150 --> 00:02:36.800 align:start position:0%
basically go through every region of
this<00:02:33.659><c> size</c><00:02:33.900><c> and</c><00:02:34.970><c> pass</c><00:02:35.970><c> lots</c><00:02:36.450><c> of</c><00:02:36.599><c> little</c>

00:02:36.800 --> 00:02:36.810 align:start position:0%
this size and pass lots of little
 

00:02:36.810 --> 00:02:39.589 align:start position:0%
this size and pass lots of little
crafted<00:02:37.530><c> images</c><00:02:37.920><c> into</c><00:02:38.220><c> the</c><00:02:38.489><c> confident</c><00:02:39.359><c> and</c>

00:02:39.589 --> 00:02:39.599 align:start position:0%
crafted images into the confident and
 

00:02:39.599 --> 00:02:42.619 align:start position:0%
crafted images into the confident and
have<00:02:40.230><c> it</c><00:02:40.409><c> classify</c><00:02:41.010><c> 0</c><00:02:41.609><c> or</c><00:02:41.849><c> 1</c><00:02:42.090><c> for</c><00:02:42.450><c> each</c>

00:02:42.619 --> 00:02:42.629 align:start position:0%
have it classify 0 or 1 for each
 

00:02:42.629 --> 00:02:45.890 align:start position:0%
have it classify 0 or 1 for each
position<00:02:42.900><c> as</c><00:02:43.379><c> some</c><00:02:43.769><c> stride</c><00:02:44.269><c> now</c><00:02:45.269><c> having</c><00:02:45.720><c> done</c>

00:02:45.890 --> 00:02:45.900 align:start position:0%
position as some stride now having done
 

00:02:45.900 --> 00:02:50.599 align:start position:0%
position as some stride now having done
this<00:02:46.079><c> once</c><00:02:46.680><c> with</c><00:02:48.739><c> running</c><00:02:49.739><c> this</c><00:02:49.950><c> was</c><00:02:50.280><c> called</c><00:02:50.489><c> a</c>

00:02:50.599 --> 00:02:50.609 align:start position:0%
this once with running this was called a
 

00:02:50.609 --> 00:02:54.379 align:start position:0%
this once with running this was called a
sliding<00:02:51.030><c> window</c><00:02:51.200><c> through</c><00:02:52.200><c> the</c><00:02:52.319><c> image</c><00:02:53.389><c> you'd</c>

00:02:54.379 --> 00:02:54.389 align:start position:0%
sliding window through the image you'd
 

00:02:54.389 --> 00:02:56.990 align:start position:0%
sliding window through the image you'd
then<00:02:54.419><c> repeat</c><00:02:54.959><c> it</c><00:02:54.989><c> but</c><00:02:55.470><c> now</c><00:02:55.620><c> use</c><00:02:55.919><c> a</c><00:02:56.000><c> larger</c>

00:02:56.990 --> 00:02:57.000 align:start position:0%
then repeat it but now use a larger
 

00:02:57.000 --> 00:02:59.839 align:start position:0%
then repeat it but now use a larger
window<00:02:57.569><c> so</c><00:02:57.900><c> now</c><00:02:58.109><c> you</c><00:02:58.169><c> take</c><00:02:58.709><c> a</c><00:02:58.950><c> slightly</c><00:02:59.549><c> larger</c>

00:02:59.839 --> 00:02:59.849 align:start position:0%
window so now you take a slightly larger
 

00:02:59.849 --> 00:03:02.659 align:start position:0%
window so now you take a slightly larger
region<00:03:00.480><c> and</c><00:03:00.629><c> run</c><00:03:01.290><c> that</c><00:03:01.530><c> region</c><00:03:02.040><c> so</c><00:03:02.069><c> resize</c>

00:03:02.659 --> 00:03:02.669 align:start position:0%
region and run that region so resize
 

00:03:02.669 --> 00:03:05.000 align:start position:0%
region and run that region so resize
this<00:03:02.939><c> region</c><00:03:03.419><c> into</c><00:03:03.870><c> whatever</c><00:03:04.169><c> input</c><00:03:04.470><c> size</c><00:03:04.829><c> the</c>

00:03:05.000 --> 00:03:05.010 align:start position:0%
this region into whatever input size the
 

00:03:05.010 --> 00:03:07.550 align:start position:0%
this region into whatever input size the
continent<00:03:05.519><c> is</c><00:03:05.639><c> expecting</c><00:03:06.180><c> and</c><00:03:06.359><c> feed</c><00:03:07.019><c> that</c><00:03:07.049><c> to</c>

00:03:07.550 --> 00:03:07.560 align:start position:0%
continent is expecting and feed that to
 

00:03:07.560 --> 00:03:10.339 align:start position:0%
continent is expecting and feed that to
the<00:03:07.739><c> confident</c><00:03:08.340><c> and</c><00:03:08.489><c> have</c><00:03:08.609><c> it</c><00:03:08.730><c> output</c><00:03:09.090><c> 0</c><00:03:09.750><c> 1</c><00:03:10.109><c> and</c>

00:03:10.339 --> 00:03:10.349 align:start position:0%
the confident and have it output 0 1 and
 

00:03:10.349 --> 00:03:12.199 align:start position:0%
the confident and have it output 0 1 and
then<00:03:10.500><c> slide</c><00:03:10.769><c> the</c><00:03:10.889><c> window</c><00:03:11.159><c> over</c><00:03:11.340><c> again</c><00:03:11.879><c> using</c>

00:03:12.199 --> 00:03:12.209 align:start position:0%
then slide the window over again using
 

00:03:12.209 --> 00:03:16.490 align:start position:0%
then slide the window over again using
some<00:03:12.389><c> stride</c><00:03:12.829><c> and</c><00:03:13.829><c> so</c><00:03:14.549><c> on</c><00:03:14.760><c> and</c><00:03:15.090><c> you</c><00:03:16.049><c> run</c><00:03:16.349><c> that</c>

00:03:16.490 --> 00:03:16.500 align:start position:0%
some stride and so on and you run that
 

00:03:16.500 --> 00:03:19.550 align:start position:0%
some stride and so on and you run that
throughout<00:03:16.919><c> your</c><00:03:16.979><c> entire</c><00:03:17.459><c> image</c><00:03:18.290><c> until</c><00:03:19.290><c> you</c>

00:03:19.550 --> 00:03:19.560 align:start position:0%
throughout your entire image until you
 

00:03:19.560 --> 00:03:21.379 align:start position:0%
throughout your entire image until you
get<00:03:19.769><c> to</c><00:03:19.889><c> the</c><00:03:20.010><c> end</c><00:03:20.159><c> and</c><00:03:20.430><c> then</c><00:03:20.849><c> you</c><00:03:20.909><c> might</c><00:03:21.090><c> do</c><00:03:21.209><c> the</c>

00:03:21.379 --> 00:03:21.389 align:start position:0%
get to the end and then you might do the
 

00:03:21.389 --> 00:03:24.800 align:start position:0%
get to the end and then you might do the
third<00:03:21.629><c> time</c><00:03:21.900><c> using</c><00:03:22.470><c> even</c><00:03:22.799><c> larger</c><00:03:23.310><c> windows</c><00:03:23.810><c> and</c>

00:03:24.800 --> 00:03:24.810 align:start position:0%
third time using even larger windows and
 

00:03:24.810 --> 00:03:28.909 align:start position:0%
third time using even larger windows and
so<00:03:25.620><c> on</c><00:03:26.150><c> and</c><00:03:27.150><c> the</c><00:03:27.599><c> hope</c><00:03:27.840><c> is</c><00:03:28.139><c> that</c><00:03:28.379><c> if</c><00:03:28.620><c> you</c><00:03:28.739><c> do</c>

00:03:28.909 --> 00:03:28.919 align:start position:0%
so on and the hope is that if you do
 

00:03:28.919 --> 00:03:31.009 align:start position:0%
so on and the hope is that if you do
this<00:03:29.129><c> then</c><00:03:29.819><c> so</c><00:03:30.120><c> long</c><00:03:30.269><c> as</c><00:03:30.449><c> there's</c><00:03:30.690><c> a</c><00:03:30.750><c> car</c>

00:03:31.009 --> 00:03:31.019 align:start position:0%
this then so long as there's a car
 

00:03:31.019 --> 00:03:33.500 align:start position:0%
this then so long as there's a car
somewhere<00:03:31.560><c> in</c><00:03:31.769><c> the</c><00:03:31.889><c> image</c><00:03:32.220><c> that</c><00:03:32.970><c> there</c><00:03:33.269><c> will</c>

00:03:33.500 --> 00:03:33.510 align:start position:0%
somewhere in the image that there will
 

00:03:33.510 --> 00:03:37.309 align:start position:0%
somewhere in the image that there will
be<00:03:33.540><c> a</c><00:03:33.780><c> window</c><00:03:34.379><c> where</c><00:03:35.479><c> for</c><00:03:36.479><c> example</c><00:03:36.569><c> if</c><00:03:37.169><c> you</c>

00:03:37.309 --> 00:03:37.319 align:start position:0%
be a window where for example if you
 

00:03:37.319 --> 00:03:39.890 align:start position:0%
be a window where for example if you
were<00:03:37.409><c> passing</c><00:03:37.859><c> in</c><00:03:38.010><c> this</c><00:03:38.579><c> window</c><00:03:39.090><c> into</c><00:03:39.750><c> the</c>

00:03:39.890 --> 00:03:39.900 align:start position:0%
were passing in this window into the
 

00:03:39.900 --> 00:03:41.899 align:start position:0%
were passing in this window into the
confident<00:03:40.440><c> hopefully</c><00:03:41.099><c> the</c><00:03:41.220><c> confident</c><00:03:41.760><c> will</c>

00:03:41.899 --> 00:03:41.909 align:start position:0%
confident hopefully the confident will
 

00:03:41.909 --> 00:03:45.020 align:start position:0%
confident hopefully the confident will
have<00:03:42.030><c> output</c><00:03:42.479><c> 1</c><00:03:43.019><c> for</c><00:03:43.319><c> that</c><00:03:43.560><c> input</c><00:03:43.919><c> region</c><00:03:44.549><c> so</c>

00:03:45.020 --> 00:03:45.030 align:start position:0%
have output 1 for that input region so
 

00:03:45.030 --> 00:03:46.789 align:start position:0%
have output 1 for that input region so
then<00:03:45.269><c> you</c><00:03:45.449><c> detect</c><00:03:45.840><c> that</c><00:03:46.139><c> there</c><00:03:46.319><c> is</c><00:03:46.409><c> a</c><00:03:46.440><c> car</c>

00:03:46.789 --> 00:03:46.799 align:start position:0%
then you detect that there is a car
 

00:03:46.799 --> 00:03:49.280 align:start position:0%
then you detect that there is a car
there<00:03:47.069><c> so</c><00:03:48.060><c> this</c><00:03:48.239><c> algorithm</c><00:03:48.569><c> is</c><00:03:49.049><c> called</c>

00:03:49.280 --> 00:03:49.290 align:start position:0%
there so this algorithm is called
 

00:03:49.290 --> 00:03:51.830 align:start position:0%
there so this algorithm is called
sliding<00:03:49.769><c> windows</c><00:03:50.459><c> detection</c><00:03:51.120><c> because</c><00:03:51.359><c> you</c>

00:03:51.830 --> 00:03:51.840 align:start position:0%
sliding windows detection because you
 

00:03:51.840 --> 00:03:54.879 align:start position:0%
sliding windows detection because you
take<00:03:52.019><c> these</c><00:03:52.169><c> windows</c><00:03:52.680><c> these</c><00:03:53.040><c> some</c><00:03:53.479><c> square</c>

00:03:54.879 --> 00:03:54.889 align:start position:0%
take these windows these some square
 

00:03:54.889 --> 00:03:58.219 align:start position:0%
take these windows these some square
boxes<00:03:55.889><c> and</c><00:03:56.159><c> slide</c><00:03:56.970><c> them</c><00:03:57.239><c> across</c><00:03:57.479><c> the</c><00:03:57.959><c> entire</c>

00:03:58.219 --> 00:03:58.229 align:start position:0%
boxes and slide them across the entire
 

00:03:58.229 --> 00:04:01.189 align:start position:0%
boxes and slide them across the entire
image<00:03:58.439><c> and</c><00:03:58.769><c> classify</c><00:03:59.549><c> every</c><00:04:00.060><c> square</c><00:04:00.959><c> region</c>

00:04:01.189 --> 00:04:01.199 align:start position:0%
image and classify every square region
 

00:04:01.199 --> 00:04:04.189 align:start position:0%
image and classify every square region
with<00:04:02.040><c> some</c><00:04:02.189><c> stride</c><00:04:02.579><c> as</c><00:04:02.879><c> containing</c><00:04:03.419><c> a</c><00:04:03.689><c> car</c><00:04:03.989><c> or</c>

00:04:04.189 --> 00:04:04.199 align:start position:0%
with some stride as containing a car or
 

00:04:04.199 --> 00:04:07.879 align:start position:0%
with some stride as containing a car or
not<00:04:05.060><c> now</c><00:04:06.060><c> there's</c><00:04:06.449><c> a</c><00:04:06.510><c> huge</c><00:04:06.720><c> disadvantage</c><00:04:07.169><c> of</c>

00:04:07.879 --> 00:04:07.889 align:start position:0%
not now there's a huge disadvantage of
 

00:04:07.889 --> 00:04:10.960 align:start position:0%
not now there's a huge disadvantage of
sliding<00:04:08.579><c> windows</c><00:04:09.090><c> detection</c><00:04:09.810><c> which</c><00:04:10.349><c> is</c><00:04:10.530><c> the</c>

00:04:10.960 --> 00:04:10.970 align:start position:0%
sliding windows detection which is the
 

00:04:10.970 --> 00:04:13.909 align:start position:0%
sliding windows detection which is the
computational<00:04:11.970><c> cost</c><00:04:12.590><c> because</c><00:04:13.590><c> you're</c>

00:04:13.909 --> 00:04:13.919 align:start position:0%
computational cost because you're
 

00:04:13.919 --> 00:04:15.860 align:start position:0%
computational cost because you're
cropping<00:04:14.280><c> out</c><00:04:14.609><c> so</c><00:04:14.909><c> many</c><00:04:15.120><c> different</c><00:04:15.269><c> square</c>

00:04:15.860 --> 00:04:15.870 align:start position:0%
cropping out so many different square
 

00:04:15.870 --> 00:04:17.870 align:start position:0%
cropping out so many different square
regions<00:04:16.320><c> in</c><00:04:16.470><c> the</c><00:04:16.590><c> image</c><00:04:16.620><c> and</c><00:04:17.099><c> running</c><00:04:17.489><c> each</c><00:04:17.699><c> of</c>

00:04:17.870 --> 00:04:17.880 align:start position:0%
regions in the image and running each of
 

00:04:17.880 --> 00:04:18.650 align:start position:0%
regions in the image and running each of
them<00:04:18.060><c> in</c><00:04:18.269><c> the</c>

00:04:18.650 --> 00:04:18.660 align:start position:0%
them in the
 

00:04:18.660 --> 00:04:22.820 align:start position:0%
them in the
inde<00:04:19.050><c> through</c><00:04:19.709><c> a</c><00:04:19.739><c> confident</c><00:04:20.459><c> and</c><00:04:21.500><c> if</c><00:04:22.500><c> you</c><00:04:22.620><c> use</c>

00:04:22.820 --> 00:04:22.830 align:start position:0%
inde through a confident and if you use
 

00:04:22.830 --> 00:04:25.400 align:start position:0%
inde through a confident and if you use
the<00:04:23.040><c> very</c><00:04:23.250><c> course</c><00:04:23.700><c> write</c><00:04:24.330><c> a</c><00:04:24.360><c> very</c><00:04:24.750><c> big</c><00:04:24.990><c> Strider</c>

00:04:25.400 --> 00:04:25.410 align:start position:0%
the very course write a very big Strider
 

00:04:25.410 --> 00:04:27.470 align:start position:0%
the very course write a very big Strider
very<00:04:25.680><c> big</c><00:04:25.860><c> step</c><00:04:26.160><c> size</c><00:04:26.400><c> then</c><00:04:27.120><c> that</c><00:04:27.360><c> would</c>

00:04:27.470 --> 00:04:27.480 align:start position:0%
very big step size then that would
 

00:04:27.480 --> 00:04:29.870 align:start position:0%
very big step size then that would
reduce<00:04:27.840><c> the</c><00:04:27.900><c> number</c><00:04:28.170><c> of</c><00:04:28.470><c> windows</c><00:04:29.370><c> you</c><00:04:29.580><c> need</c><00:04:29.730><c> to</c>

00:04:29.870 --> 00:04:29.880 align:start position:0%
reduce the number of windows you need to
 

00:04:29.880 --> 00:04:31.970 align:start position:0%
reduce the number of windows you need to
pass<00:04:30.120><c> through</c><00:04:30.390><c> the</c><00:04:30.510><c> continent</c><00:04:31.080><c> but</c><00:04:31.680><c> that</c>

00:04:31.970 --> 00:04:31.980 align:start position:0%
pass through the continent but that
 

00:04:31.980 --> 00:04:35.350 align:start position:0%
pass through the continent but that
coarser<00:04:33.140><c> granularity</c><00:04:34.140><c> may</c><00:04:34.440><c> hurt</c><00:04:34.710><c> performance</c>

00:04:35.350 --> 00:04:35.360 align:start position:0%
coarser granularity may hurt performance
 

00:04:35.360 --> 00:04:37.070 align:start position:0%
coarser granularity may hurt performance
whereas<00:04:36.360><c> if</c><00:04:36.510><c> you</c><00:04:36.570><c> use</c><00:04:36.660><c> a</c><00:04:36.690><c> very</c><00:04:36.840><c> fine</c>

00:04:37.070 --> 00:04:37.080 align:start position:0%
whereas if you use a very fine
 

00:04:37.080 --> 00:04:40.010 align:start position:0%
whereas if you use a very fine
granularity<00:04:37.800><c> or</c><00:04:38.280><c> a</c><00:04:38.310><c> very</c><00:04:38.520><c> small</c><00:04:38.940><c> stride</c><00:04:39.300><c> then</c>

00:04:40.010 --> 00:04:40.020 align:start position:0%
granularity or a very small stride then
 

00:04:40.020 --> 00:04:42.470 align:start position:0%
granularity or a very small stride then
the<00:04:40.350><c> huge</c><00:04:40.680><c> number</c><00:04:41.130><c> of</c><00:04:41.490><c> you</c><00:04:41.970><c> know</c><00:04:42.030><c> all</c><00:04:42.240><c> these</c>

00:04:42.470 --> 00:04:42.480 align:start position:0%
the huge number of you know all these
 

00:04:42.480 --> 00:04:44.480 align:start position:0%
the huge number of you know all these
little<00:04:42.720><c> regions</c><00:04:43.320><c> you're</c><00:04:43.950><c> passing</c><00:04:44.460><c> through</c>

00:04:44.480 --> 00:04:44.490 align:start position:0%
little regions you're passing through
 

00:04:44.490 --> 00:04:46.490 align:start position:0%
little regions you're passing through
the<00:04:44.850><c> confident</c><00:04:45.420><c> means</c><00:04:45.960><c> that</c><00:04:46.170><c> there's</c><00:04:46.380><c> a</c><00:04:46.470><c> very</c>

00:04:46.490 --> 00:04:46.500 align:start position:0%
the confident means that there's a very
 

00:04:46.500 --> 00:04:50.030 align:start position:0%
the confident means that there's a very
high<00:04:46.950><c> computational</c><00:04:47.640><c> cost</c><00:04:48.350><c> so</c><00:04:49.350><c> before</c><00:04:49.890><c> the</c>

00:04:50.030 --> 00:04:50.040 align:start position:0%
high computational cost so before the
 

00:04:50.040 --> 00:04:52.010 align:start position:0%
high computational cost so before the
rise<00:04:50.280><c> of</c><00:04:50.520><c> neural</c><00:04:50.820><c> networks</c><00:04:51.300><c> people</c><00:04:51.660><c> used</c><00:04:51.900><c> to</c>

00:04:52.010 --> 00:04:52.020 align:start position:0%
rise of neural networks people used to
 

00:04:52.020 --> 00:04:54.140 align:start position:0%
rise of neural networks people used to
use<00:04:52.320><c> much</c><00:04:52.770><c> simpler</c><00:04:53.220><c> classifiers</c><00:04:53.940><c> like</c><00:04:54.120><c> a</c>

00:04:54.140 --> 00:04:54.150 align:start position:0%
use much simpler classifiers like a
 

00:04:54.150 --> 00:04:56.810 align:start position:0%
use much simpler classifiers like a
simple<00:04:54.630><c> linear</c><00:04:55.080><c> classifier</c><00:04:55.820><c> overhand</c>

00:04:56.810 --> 00:04:56.820 align:start position:0%
simple linear classifier overhand
 

00:04:56.820 --> 00:04:58.730 align:start position:0%
simple linear classifier overhand
engineer<00:04:57.330><c> features</c><00:04:57.750><c> in</c><00:04:57.990><c> order</c><00:04:58.260><c> to</c><00:04:58.590><c> perform</c>

00:04:58.730 --> 00:04:58.740 align:start position:0%
engineer features in order to perform
 

00:04:58.740 --> 00:05:01.400 align:start position:0%
engineer features in order to perform
object<00:04:59.550><c> detection</c><00:04:59.850><c> and</c><00:05:00.240><c> in</c><00:05:00.810><c> that</c><00:05:01.080><c> error</c>

00:05:01.400 --> 00:05:01.410 align:start position:0%
object detection and in that error
 

00:05:01.410 --> 00:05:03.920 align:start position:0%
object detection and in that error
because<00:05:02.250><c> each</c><00:05:02.520><c> classifier</c><00:05:03.120><c> was</c><00:05:03.450><c> relatively</c>

00:05:03.920 --> 00:05:03.930 align:start position:0%
because each classifier was relatively
 

00:05:03.930 --> 00:05:05.600 align:start position:0%
because each classifier was relatively
cheap<00:05:04.050><c> to</c><00:05:04.320><c> compute</c><00:05:04.860><c> it</c><00:05:05.040><c> was</c><00:05:05.130><c> just</c><00:05:05.340><c> a</c><00:05:05.430><c> linear</c>

00:05:05.600 --> 00:05:05.610 align:start position:0%
cheap to compute it was just a linear
 

00:05:05.610 --> 00:05:08.270 align:start position:0%
cheap to compute it was just a linear
function<00:05:06.150><c> sliding</c><00:05:06.900><c> windows</c><00:05:07.230><c> detection</c><00:05:07.800><c> ran</c>

00:05:08.270 --> 00:05:08.280 align:start position:0%
function sliding windows detection ran
 

00:05:08.280 --> 00:05:10.970 align:start position:0%
function sliding windows detection ran
okay<00:05:08.820><c> it</c><00:05:09.060><c> was</c><00:05:09.240><c> not</c><00:05:09.450><c> a</c><00:05:09.480><c> bad</c><00:05:09.750><c> method</c><00:05:09.960><c> but</c><00:05:10.770><c> with</c>

00:05:10.970 --> 00:05:10.980 align:start position:0%
okay it was not a bad method but with
 

00:05:10.980 --> 00:05:13.400 align:start position:0%
okay it was not a bad method but with
confidence<00:05:11.670><c> now</c><00:05:12.420><c> running</c><00:05:13.110><c> a</c><00:05:13.200><c> single</c>

00:05:13.400 --> 00:05:13.410 align:start position:0%
confidence now running a single
 

00:05:13.410 --> 00:05:15.590 align:start position:0%
confidence now running a single
classification<00:05:14.370><c> task</c><00:05:14.670><c> is</c><00:05:14.940><c> much</c><00:05:15.390><c> more</c>

00:05:15.590 --> 00:05:15.600 align:start position:0%
classification task is much more
 

00:05:15.600 --> 00:05:18.410 align:start position:0%
classification task is much more
expensive<00:05:15.900><c> and</c><00:05:16.580><c> sliding</c><00:05:17.580><c> windows</c><00:05:17.940><c> this</c><00:05:18.240><c> way</c>

00:05:18.410 --> 00:05:18.420 align:start position:0%
expensive and sliding windows this way
 

00:05:18.420 --> 00:05:22.640 align:start position:0%
expensive and sliding windows this way
is<00:05:18.950><c> infeasible</c><00:05:19.950><c> slow</c><00:05:20.310><c> and</c><00:05:21.260><c> unless</c><00:05:22.260><c> you</c><00:05:22.410><c> use</c><00:05:22.620><c> a</c>

00:05:22.640 --> 00:05:22.650 align:start position:0%
is infeasible slow and unless you use a
 

00:05:22.650 --> 00:05:25.340 align:start position:0%
is infeasible slow and unless you use a
very<00:05:23.010><c> fine</c><00:05:23.520><c> granularity</c><00:05:23.820><c> or</c><00:05:24.660><c> a</c><00:05:24.780><c> very</c><00:05:24.960><c> small</c>

00:05:25.340 --> 00:05:25.350 align:start position:0%
very fine granularity or a very small
 

00:05:25.350 --> 00:05:28.400 align:start position:0%
very fine granularity or a very small
stride<00:05:25.710><c> you</c><00:05:26.370><c> end</c><00:05:26.580><c> up</c><00:05:26.820><c> not</c><00:05:27.150><c> able</c><00:05:27.420><c> to</c><00:05:27.870><c> localize</c>

00:05:28.400 --> 00:05:28.410 align:start position:0%
stride you end up not able to localize
 

00:05:28.410 --> 00:05:31.430 align:start position:0%
stride you end up not able to localize
the<00:05:29.070><c> objects</c><00:05:29.910><c> that</c><00:05:30.060><c> accurately</c><00:05:30.810><c> within</c><00:05:31.290><c> the</c>

00:05:31.430 --> 00:05:31.440 align:start position:0%
the objects that accurately within the
 

00:05:31.440 --> 00:05:34.520 align:start position:0%
the objects that accurately within the
image<00:05:31.560><c> as</c><00:05:31.920><c> well</c><00:05:32.570><c> fortunately</c><00:05:33.570><c> however</c><00:05:33.750><c> this</c>

00:05:34.520 --> 00:05:34.530 align:start position:0%
image as well fortunately however this
 

00:05:34.530 --> 00:05:36.830 align:start position:0%
image as well fortunately however this
problem<00:05:35.100><c> of</c><00:05:35.280><c> computational</c><00:05:36.060><c> cost</c><00:05:36.300><c> has</c><00:05:36.810><c> a</c>

00:05:36.830 --> 00:05:36.840 align:start position:0%
problem of computational cost has a
 

00:05:36.840 --> 00:05:39.710 align:start position:0%
problem of computational cost has a
pretty<00:05:37.380><c> good</c><00:05:37.620><c> solution</c><00:05:38.160><c> in</c><00:05:38.340><c> particular</c><00:05:39.030><c> the</c>

00:05:39.710 --> 00:05:39.720 align:start position:0%
pretty good solution in particular the
 

00:05:39.720 --> 00:05:42.170 align:start position:0%
pretty good solution in particular the
sliding<00:05:40.169><c> windows</c><00:05:40.560><c> object</c><00:05:41.160><c> detector</c><00:05:41.640><c> can</c><00:05:42.150><c> be</c>

00:05:42.170 --> 00:05:42.180 align:start position:0%
sliding windows object detector can be
 

00:05:42.180 --> 00:05:45.020 align:start position:0%
sliding windows object detector can be
implemented<00:05:43.040><c> convolutional</c><00:05:44.040><c> e</c><00:05:44.250><c> or</c><00:05:44.460><c> much</c><00:05:44.820><c> more</c>

00:05:45.020 --> 00:05:45.030 align:start position:0%
implemented convolutional e or much more
 

00:05:45.030 --> 00:05:47.120 align:start position:0%
implemented convolutional e or much more
efficiently<00:05:45.540><c> let's</c><00:05:46.260><c> see</c><00:05:46.410><c> in</c><00:05:46.500><c> the</c><00:05:46.620><c> next</c><00:05:46.890><c> video</c>

00:05:47.120 --> 00:05:47.130 align:start position:0%
efficiently let's see in the next video
 

00:05:47.130 --> 00:05:50.120 align:start position:0%
efficiently let's see in the next video
how<00:05:47.340><c> you</c><00:05:47.520><c> can</c><00:05:47.790><c> do</c><00:05:47.940><c> that</c>

