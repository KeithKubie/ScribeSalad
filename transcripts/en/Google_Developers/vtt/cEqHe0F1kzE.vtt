WEBVTT
Kind: captions
Language: en

00:00:08.680 --> 00:00:09.680
AMY QUISPE: Hello world.

00:00:09.680 --> 00:00:10.689
My name is Amy Quispe.

00:00:10.689 --> 00:00:12.730
ERIC LEICHTENSCHLAG: And
I'm Eric Leichtenschlag.

00:00:12.730 --> 00:00:14.188
AMY QUISPE: And
we're here with you

00:00:14.188 --> 00:00:17.350
today from the Mobile Ads
Developer Relations Team.

00:00:17.350 --> 00:00:20.300
Today we'll talk about migrating
to Google Play Services.

00:00:20.300 --> 00:00:22.780
What Google Play Services
is, why you should migrate,

00:00:22.780 --> 00:00:25.910
and the nitty gritty of
actually changing your code

00:00:25.910 --> 00:00:28.885
from the old AdMob app to your
new Google Play Services app.

00:00:28.885 --> 00:00:30.260
ERIC LEICHTENSCHLAG:
So first I'm

00:00:30.260 --> 00:00:32.260
going to talk about what
is Google Play Services

00:00:32.260 --> 00:00:34.270
and why you should
upgrade your AdMob

00:00:34.270 --> 00:00:36.510
apps to use Google
Play Services.

00:00:36.510 --> 00:00:38.349
So Google Play
Services is an APK

00:00:38.349 --> 00:00:40.390
that's distributed through
the Google Play Store.

00:00:40.390 --> 00:00:43.220
It gives you access to the
latest and greatest Google

00:00:43.220 --> 00:00:44.800
Android APIs.

00:00:44.800 --> 00:00:49.730
And now the APIs are part
of Google Play Services.

00:00:49.730 --> 00:00:52.790
And the great advantage of using
the Google Play Services APIs

00:00:52.790 --> 00:00:56.010
is that devices with
the Google Play Store

00:00:56.010 --> 00:00:58.830
can get updates to the
library without you

00:00:58.830 --> 00:01:01.020
having to re-release your app.

00:01:01.020 --> 00:01:04.420
So if you push your app with
version one of Google Play

00:01:04.420 --> 00:01:09.190
services with AdMob in it, and
AdMob makes changes and pushes

00:01:09.190 --> 00:01:13.180
out a v2 onto those devices,
your app will start running v2

00:01:13.180 --> 00:01:18.810
and take advantage of the
latest fixes to the library.

00:01:18.810 --> 00:01:21.306
AMY QUISPE: So you should
update to Google Play Services

00:01:21.306 --> 00:01:23.180
because you will get
these automatic platform

00:01:23.180 --> 00:01:25.970
updates, which will
be a huge advantage.

00:01:25.970 --> 00:01:27.540
We'll also just give
you better APIs.

00:01:27.540 --> 00:01:29.710
We've totally revamped
a lot of the APIs

00:01:29.710 --> 00:01:31.400
to do things the Android way.

00:01:31.400 --> 00:01:34.376
Hopefully you'll find them
better and more intuitive.

00:01:34.376 --> 00:01:36.000
And then this will
also be the platform

00:01:36.000 --> 00:01:37.160
of choice going forward.

00:01:37.160 --> 00:01:40.160
So we won't continue to iterate
on the standalone AdMob SDK.

00:01:40.160 --> 00:01:42.950
But all of our new changes will
go to the Google Play Services

00:01:42.950 --> 00:01:43.800
library.

00:01:43.800 --> 00:01:47.000
So we hope that you can upgrade
so you can keep with the latest

00:01:47.000 --> 00:01:47.875
updates that we have.

00:01:47.875 --> 00:01:49.250
ERIC LEICHTENSCHLAG:
So now we're

00:01:49.250 --> 00:01:52.240
going to talk about how to
migrate from the old library

00:01:52.240 --> 00:01:54.890
to the new Google
Play Services APIs.

00:01:54.890 --> 00:01:57.580
So previously, when
integrating a library,

00:01:57.580 --> 00:02:01.160
you just had a jar and you would
put that jar into the libs/

00:02:01.160 --> 00:02:03.690
folder for AdMob
6.4.1 and below.

00:02:03.690 --> 00:02:05.530
In Google Play
Services you actually

00:02:05.530 --> 00:02:08.350
have to integrate the Google
Play Services library project

00:02:08.350 --> 00:02:11.821
and then reference that
project into your application.

00:02:11.821 --> 00:02:13.070
So there's a difference there.

00:02:13.070 --> 00:02:17.110
And then you'll also be using
the com.google.android.gms.ads

00:02:17.110 --> 00:02:19.790
namespace when referencing
on the classes instead

00:02:19.790 --> 00:02:22.890
of the com.google.ads namespace.

00:02:22.890 --> 00:02:24.640
AMY QUISPE: When you
declare an AdActivity

00:02:24.640 --> 00:02:26.970
in your manifest
XML, then you'll

00:02:26.970 --> 00:02:29.520
also have to make a
few minor changes.

00:02:29.520 --> 00:02:31.270
First you'll be
changing the namespace

00:02:31.270 --> 00:02:32.967
from
com.google.ads.AdActivity to

00:02:32.967 --> 00:02:34.550
com.google.android.gms.ads.AdActivity.

00:02:38.060 --> 00:02:41.575
Again, we'll be changing that
namespace all across your app.

00:02:41.575 --> 00:02:43.700
The other thing is you'll
have to add this metadata

00:02:43.700 --> 00:02:47.930
tag for the Android
Play Services version.

00:02:47.930 --> 00:02:51.120
So you'll use
com.google.android.gms.version

00:02:51.120 --> 00:02:54.679
and import the Play
Services version.

00:02:54.679 --> 00:02:56.220
Also, it's important
to note that all

00:02:56.220 --> 00:02:57.550
of your permissions
and everything else

00:02:57.550 --> 00:02:58.470
will stay the same.

00:02:58.470 --> 00:03:01.011
So you don't have to worry about
that when updating your app.

00:03:02.229 --> 00:03:03.770
ERIC LEICHTENSCHLAG:
So now I'm going

00:03:03.770 --> 00:03:05.870
to talk about
creating an AdView.

00:03:05.870 --> 00:03:08.910
So in AdMob 6.4.1, when
you created the AdView

00:03:08.910 --> 00:03:12.520
in the constructor, you'd
pass the activity context,

00:03:12.520 --> 00:03:15.440
the AdSize, and your AddUnitID.

00:03:15.440 --> 00:03:17.120
In Google Play
Services, we're doing it

00:03:17.120 --> 00:03:20.150
the Android way, where
a view object only

00:03:20.150 --> 00:03:22.720
needs to take the
activity context.

00:03:22.720 --> 00:03:25.820
So you just create a new AdView
with your activity context.

00:03:25.820 --> 00:03:29.570
And then there are setAdUnitID
and setAdSize methods

00:03:29.570 --> 00:03:32.820
to set the ad size and
pass your AdUnitID.

00:03:32.820 --> 00:03:35.090
Note that these should
only be called once.

00:03:35.090 --> 00:03:37.690
If you do it again you'll get
an illegal state exception.

00:03:37.690 --> 00:03:39.148
But there should
be no reason you'd

00:03:39.148 --> 00:03:42.210
have to call it more than once.

00:03:42.210 --> 00:03:44.260
AMY QUISPE: When you
create an AdRequest,

00:03:44.260 --> 00:03:47.000
you will no longer be
creating this AdRequest

00:03:47.000 --> 00:03:49.450
and then adding a test device
or doing these other changes

00:03:49.450 --> 00:03:51.290
directly to the AdRequest.

00:03:51.290 --> 00:03:54.440
Instead we've moved to
the builder paradigm,

00:03:54.440 --> 00:03:56.747
so you'll create an
AdRequest builder.

00:03:56.747 --> 00:03:58.830
Everything you'll do will
be done to this builder.

00:03:58.830 --> 00:04:01.170
The builder is an
immutable object,

00:04:01.170 --> 00:04:03.260
so everything you do
to it will actually

00:04:03.260 --> 00:04:04.350
be creating a new builder.

00:04:04.350 --> 00:04:05.808
So you won't be
able to mess things

00:04:05.808 --> 00:04:07.760
up in the middle of
running your application.

00:04:07.760 --> 00:04:10.009
And then once you've actually
made all of your changes

00:04:10.009 --> 00:04:12.150
to the builder, for example
adding a test device,

00:04:12.150 --> 00:04:13.580
then you actually
build a builder

00:04:13.580 --> 00:04:16.399
to create the AdRequest.

00:04:16.399 --> 00:04:19.720
ERIC LEICHTENSCHLAG: You should
also note that the identifier

00:04:19.720 --> 00:04:22.000
to get test ads on
emulators changed from

00:04:22.000 --> 00:04:25.827
AdRequest.TEST_EMULATOR to
AdRequest.DEVICE_ID_EMULATOR.

00:04:25.827 --> 00:04:28.410
AMY QUISPE: So next we'll talk
about creating a new AdListener

00:04:28.410 --> 00:04:29.870
object.

00:04:29.870 --> 00:04:31.720
So we changed the
AdListener object.

00:04:31.720 --> 00:04:34.970
Previously in the standalone
SDK the AdListener object

00:04:34.970 --> 00:04:38.100
was an interface so you
would extend your ad activity

00:04:38.100 --> 00:04:40.860
with this AdListener object and
implement all of these methods

00:04:40.860 --> 00:04:43.450
in order to track
what's going on.

00:04:43.450 --> 00:04:45.290
Now in the new Google
Play services version,

00:04:45.290 --> 00:04:46.840
we have an abstract class.

00:04:46.840 --> 00:04:50.310
And you'll be able to actually
just create an AdListener

00:04:50.310 --> 00:04:53.250
object on the fly, override
the methods that you need,

00:04:53.250 --> 00:04:55.870
and leave all the rest alone.

00:04:55.870 --> 00:04:58.790
One thing to note is that
we've changed the error code.

00:04:58.790 --> 00:05:01.072
So now the error code
is just an integer,

00:05:01.072 --> 00:05:03.030
and you'll have to create
a new method in order

00:05:03.030 --> 00:05:05.720
to extract meaning
from that integer.

00:05:05.720 --> 00:05:07.960
The other thing is
that we've changed

00:05:07.960 --> 00:05:10.030
all of the names of the methods.

00:05:10.030 --> 00:05:13.250
So onReceiveAd is
now onAdLoaded,

00:05:13.250 --> 00:05:17.980
onFailedToReceiveAd is
now onAdFailedToLoad.

00:05:17.980 --> 00:05:22.450
And all of these changes
are just one to one.

00:05:22.450 --> 00:05:25.039
It shouldn't be difficult to
change from one to the other.

00:05:25.039 --> 00:05:26.580
And then all of the
methods name will

00:05:26.580 --> 00:05:29.599
be more consistent with the
Android way of doing things.

00:05:29.599 --> 00:05:31.140
ERIC LEICHTENSCHLAG:
So now I'm going

00:05:31.140 --> 00:05:33.870
to talk about the
implementation of an AdListener

00:05:33.870 --> 00:05:35.820
and setting it on the adView.

00:05:35.820 --> 00:05:37.759
So when we had the
interface, your class

00:05:37.759 --> 00:05:39.300
that implemented
the AdListener would

00:05:39.300 --> 00:05:43.030
have to implement all
of the ad event methods

00:05:43.030 --> 00:05:44.570
in that interface.

00:05:44.570 --> 00:05:46.960
And then finally call
adView.SetAdListener

00:05:46.960 --> 00:05:49.882
with the object that
implemented the AdListener.

00:05:49.882 --> 00:05:52.690
In Google Play Services,
we use an abstract class.

00:05:52.690 --> 00:05:55.540
And so you can actually just
call adView.SetAdListener

00:05:55.540 --> 00:05:59.630
and create a new AdListener
in line like a subclass

00:05:59.630 --> 00:06:02.620
and just override the ad
events that you care about.

00:06:02.620 --> 00:06:06.980
So in this example, we have
onAdLoaded and onAdFailedToLoad

00:06:06.980 --> 00:06:08.950
implemented, but we
don't have to implement

00:06:08.950 --> 00:06:11.339
the rest of the methods here.

00:06:11.339 --> 00:06:13.130
AMY QUISPE: Next, we'll
talk about creating

00:06:13.130 --> 00:06:14.920
an adView in XML.

00:06:14.920 --> 00:06:16.680
Previously you were
able to do everything

00:06:16.680 --> 00:06:20.310
in XML if you wanted to
have a very simple adView.

00:06:20.310 --> 00:06:23.150
Now we'll have to actually
write a little bit of code.

00:06:23.150 --> 00:06:26.080
But first, let's talk about
the changes in the XML.

00:06:26.080 --> 00:06:28.070
So the main changes
in the XML are

00:06:28.070 --> 00:06:32.544
that you won't be able to use
ad testDevices and ad load

00:06:32.544 --> 00:06:34.671
on create in your XML.

00:06:34.671 --> 00:06:36.670
So you'll have to add a
test device in the code.

00:06:36.670 --> 00:06:38.840
And you also won't
be able to just load

00:06:38.840 --> 00:06:40.230
an ad on create in the XML.

00:06:40.230 --> 00:06:42.090
You'll have to remove
those attributes.

00:06:42.090 --> 00:06:44.530
The other thing to notice is
that you'll have to change

00:06:44.530 --> 00:06:51.420
your namespace from
apk/lib/com.google.ads

00:06:51.420 --> 00:06:53.940
to apk/res-auto.

00:06:53.940 --> 00:06:57.510
That's all going to
be auto imported.

00:06:57.510 --> 00:07:00.750
Eric's going to talk to you
about the changes in the code.

00:07:00.750 --> 00:07:03.730
ERIC LEICHTENSCHLAG: Yep, so the
change in the code for the XML

00:07:03.730 --> 00:07:06.790
AdView in Google Play Services
is you'll have to grab

00:07:06.790 --> 00:07:11.230
the AdView from the XML, create
a new AdRequest via the builder

00:07:11.230 --> 00:07:14.430
pattern, and call loadAd
with that AdRequest .

00:07:14.430 --> 00:07:17.135
As Amy mentioned,
in 6.4.1, there

00:07:17.135 --> 00:07:20.290
is actually no code required if
you had used the LoadAdOnCreate

00:07:20.290 --> 00:07:22.570
attribute to be true.

00:07:22.570 --> 00:07:25.320
But also note that if you want
to do anything more complicated

00:07:25.320 --> 00:07:27.210
like set an AdListener,
you'll still

00:07:27.210 --> 00:07:31.160
need to write some code in both
either 6.4.1 or Google Play

00:07:31.160 --> 00:07:33.260
services, and that
hasn't changed.

00:07:33.260 --> 00:07:36.010
AMY QUISPE: Now we'll talk about
the adView lifecycle methods.

00:07:36.010 --> 00:07:38.730
So previously in
the standalone SDK,

00:07:38.730 --> 00:07:40.970
we only had adView.destroy().

00:07:40.970 --> 00:07:43.790
Now we have adView.destroy(),
adView.pause()

00:07:43.790 --> 00:07:45.720
and adView.resume().

00:07:45.720 --> 00:07:49.500
These methods all allow you
to destroy, pause, or resume

00:07:49.500 --> 00:07:50.060
web view.

00:07:50.060 --> 00:07:51.910
So this gives you a
little bit more control

00:07:51.910 --> 00:07:53.910
over what's actually going
on in your lifecycle.

00:07:55.089 --> 00:07:56.630
ERIC LEICHTENSCHLAG:
So now I'm going

00:07:56.630 --> 00:07:59.020
to talk about passing
Extras to AdMob.

00:07:59.020 --> 00:08:01.370
You can do things like
set the background color

00:08:01.370 --> 00:08:02.370
and text of your ad.

00:08:02.370 --> 00:08:04.280
And that would be
done through Extras.

00:08:04.280 --> 00:08:06.740
So in 6.4.1, you would
create the new AdRequest,

00:08:06.740 --> 00:08:09.810
you'd create a new
AdMobAdapterExtras object,

00:08:09.810 --> 00:08:14.100
and pass the call addExtra
and pass key value pairs,

00:08:14.100 --> 00:08:17.000
for like background color
and text for example.

00:08:17.000 --> 00:08:19.600
And then call setNetworkExtras
with that object.

00:08:19.600 --> 00:08:22.240
In Google Play Services, it's
done a little bit differently.

00:08:22.240 --> 00:08:25.650
You have an AdMobExtras instead
of an AdMobAdapterExtras.

00:08:25.650 --> 00:08:27.250
And it accepts a
bundle, which have

00:08:27.250 --> 00:08:30.380
to create before you create
the AdMobExtras class.

00:08:30.380 --> 00:08:35.340
So you create a new bundle, put
string on your key value pairs,

00:08:35.340 --> 00:08:38.909
create the AdMobExtras
object, and then finally when

00:08:38.909 --> 00:08:41.679
you're creating the AdRequest
using the builder pattern,

00:08:41.679 --> 00:08:45.817
you just call addNetworkExtras
with those Extras and build it.

00:08:45.817 --> 00:08:47.900
AMY QUISPE: So we know
we've made a lot of changes

00:08:47.900 --> 00:08:49.010
to the SDK.

00:08:49.010 --> 00:08:50.795
So there's been a
couple questions.

00:08:50.795 --> 00:08:53.170
We're going to address three
of the most frequently asked

00:08:53.170 --> 00:08:54.380
questions.

00:08:54.380 --> 00:08:56.870
The first one is, does
Google Play Services

00:08:56.870 --> 00:08:59.160
support existing
mediation adapters?

00:08:59.160 --> 00:09:00.330
The answer is yes.

00:09:00.330 --> 00:09:02.860
We've made sure that none of
your mediation should break.

00:09:02.860 --> 00:09:05.430
So if you upgrade to
Google Play Services today,

00:09:05.430 --> 00:09:07.950
all of your mediation
should work as expected.

00:09:07.950 --> 00:09:10.430
The mediation adapters
will be the same

00:09:10.430 --> 00:09:13.920
for a long time in the future
if we do it right on mediation

00:09:13.920 --> 00:09:16.350
and expect to mediation
adapters to update.

00:09:16.350 --> 00:09:18.860
We still plan on
supporting legacy mediation

00:09:18.860 --> 00:09:20.294
for quite a while in the future.

00:09:20.294 --> 00:09:22.460
ERIC LEICHTENSCHLAG: The
next question guys have had

00:09:22.460 --> 00:09:25.540
is, will Google Play
Services APIs work on devices

00:09:25.540 --> 00:09:28.690
without Google Play
Services installed?

00:09:28.690 --> 00:09:29.980
And it does.

00:09:29.980 --> 00:09:31.640
The only difference
is that you won't

00:09:31.640 --> 00:09:33.690
get to take advantage
of the auto updates.

00:09:33.690 --> 00:09:36.840
So if you push your app
onto a Kindle that's

00:09:36.840 --> 00:09:40.640
using the ads APIs in
Google Play Services,

00:09:40.640 --> 00:09:44.590
that app won't get any
updates if Google Play pushes

00:09:44.590 --> 00:09:48.830
a new version of the AdMob
lib APIs in the Google Play

00:09:48.830 --> 00:09:50.060
Services library.

00:09:50.060 --> 00:09:52.560
But for devices that do have
Google Play Services installed,

00:09:52.560 --> 00:09:54.220
it will automatically
get those updates

00:09:54.220 --> 00:09:57.180
and be running against the
latest version of our library.

00:09:57.180 --> 00:09:59.860
AMY QUISPE: The last question
is if Google Play services

00:09:59.860 --> 00:10:03.160
is compatible with the
old standalone AdMob SDK.

00:10:03.160 --> 00:10:05.120
The answer is no, unfortunately.

00:10:05.120 --> 00:10:07.720
This was a side effect of
trying to keep mediation

00:10:07.720 --> 00:10:09.670
compatible with the new SDK.

00:10:09.670 --> 00:10:12.570
However, you should
expect DFP and search

00:10:12.570 --> 00:10:15.670
ads for apps and
everything else now

00:10:15.670 --> 00:10:18.522
in new Google Play Services SDK.

00:10:18.522 --> 00:10:20.480
So you shouldn't lose
any of that functionality

00:10:20.480 --> 00:10:22.146
and should be able
to upgrade everything

00:10:22.146 --> 00:10:23.670
to Google Play Services.

00:10:23.670 --> 00:10:26.210
The other thing is if you are
working with a library that's

00:10:26.210 --> 00:10:29.730
dependent on the
old SDK, then we

00:10:29.730 --> 00:10:32.696
hope that you can merge those
library developers to upgrade

00:10:32.696 --> 00:10:34.570
to the new Google Play
Services, since that's

00:10:34.570 --> 00:10:38.239
where we'll be pushing
all updates from now on.

00:10:38.239 --> 00:10:40.780
ERIC LEICHTENSCHLAG: So we've
given you a lot of information,

00:10:40.780 --> 00:10:43.659
and it might take some
time for it to sink in.

00:10:43.659 --> 00:10:45.200
Here are some more
resources that you

00:10:45.200 --> 00:10:47.281
can use if you have
more questions.

00:10:47.281 --> 00:10:49.530
So first you should check
out the Google Play Services

00:10:49.530 --> 00:10:52.240
set up, because that explains
how to get Google Play Services

00:10:52.240 --> 00:10:55.059
library into your app
so you can reference it.

00:10:55.059 --> 00:10:57.350
And then if you want to
reference anything else that we

00:10:57.350 --> 00:10:59.558
talked about today, you can
check out the Google Play

00:10:59.558 --> 00:11:00.650
Services migration guide.

00:11:00.650 --> 00:11:02.497
It has a lot of the
same information.

00:11:02.497 --> 00:11:04.580
AMY QUISPE: And if you
have any trouble upgrading,

00:11:04.580 --> 00:11:07.120
you can always hit up me
and Eric on the forums.

00:11:07.120 --> 00:11:09.930
You can also talk to
other AdMob developers

00:11:09.930 --> 00:11:13.882
there and see if they've had
the same troubles that you have.

00:11:13.882 --> 00:11:15.340
We hope that this
has been helpful,

00:11:15.340 --> 00:11:19.660
and we hope that you can enjoy
the new version of the AdMob

00:11:19.660 --> 00:11:20.690
SDK.

00:11:20.690 --> 00:11:21.400
Thank you.

00:11:21.400 --> 00:11:22.980
ERIC LEICHTENSCHLAG:
Thanks guys.

