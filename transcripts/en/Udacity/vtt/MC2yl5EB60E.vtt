WEBVTT
Kind: captions
Language: en

00:00:00.580 --> 00:00:02.180
So, we have the same goal, which is to create an

00:00:02.180 --> 00:00:04.935
awesome pizza application on Android. And now we've ended up with

00:00:04.935 --> 00:00:08.540
three feature lists, yours, mine, and yours. So what is the

00:00:08.540 --> 00:00:10.900
best set of features to end up in this perfect app?

00:00:10.900 --> 00:00:12.550
&gt;&gt; So this is a really common problem

00:00:12.550 --> 00:00:15.030
that you as a developer have probably faced

00:00:15.030 --> 00:00:16.520
over and over again. You have all these

00:00:16.520 --> 00:00:18.650
really great ideas, so which ones are going to go

00:00:18.650 --> 00:00:20.700
into your feature list? I can totally see

00:00:20.700 --> 00:00:22.160
a lot of people wanting to order the same

00:00:22.160 --> 00:00:23.710
thing every time. And I can also see

00:00:23.710 --> 00:00:26.310
a lot people wanting to order fresh new things.

00:00:26.310 --> 00:00:29.810
So what are our two main options here? What are our solutions?

00:00:29.810 --> 00:00:31.890
&gt;&gt; Well, there's two things we could do. One is, we could

00:00:31.890 --> 00:00:35.990
actually combine all the features. And end up with an application that

00:00:35.990 --> 00:00:39.120
has nine features. So, maybe accommodating

00:00:39.120 --> 00:00:43.310
everyone's perspectives into account and or,

00:00:43.310 --> 00:00:46.230
or another thing we could do is we could just pick one.

00:00:46.230 --> 00:00:46.350
&gt;&gt; Yeah.

00:00:46.350 --> 00:00:51.410
&gt;&gt; So basically pick either your or mine or your feature list and

00:00:51.410 --> 00:00:51.910
go with that.

00:00:52.940 --> 00:00:57.530
&gt;&gt; So these are really both bad options because if you

00:00:57.530 --> 00:01:00.080
were to combine one or more of these feature lists, you're

00:01:00.080 --> 00:01:02.840
going to kind of have an application that doesn't really please anyone.

00:01:02.840 --> 00:01:05.489
When you try to please everyone, you end up pleasing no one.

00:01:05.489 --> 00:01:06.390
&gt;&gt; Yeah, exactly.

00:01:06.390 --> 00:01:08.470
&gt;&gt; And if you were to just pick one application

00:01:08.470 --> 00:01:11.890
that maybe would represent you or your how do you know

00:01:11.890 --> 00:01:14.750
how many people out there actually have those same attributes?

00:01:14.750 --> 00:01:16.880
You could be missing out on a lot of different things.

00:01:16.880 --> 00:01:19.910
&gt;&gt; So how do we solve this if both of these are not that good of an option?

00:01:19.910 --> 00:01:22.570
&gt;&gt; Well, this is where user-centric design comes in. We

00:01:22.570 --> 00:01:26.050
design a product with a specific user in mind. So,

00:01:26.050 --> 00:01:28.750
one of the keys to user-centric design is overcoming our

00:01:28.750 --> 00:01:32.350
own biases. So what we've experienced here is preference bias,

00:01:32.350 --> 00:01:35.470
that our own preferences are really being put directly into

00:01:35.470 --> 00:01:37.630
a feature list, and we're not designing for user, we're

00:01:37.630 --> 00:01:40.170
just designing for ourselves. So next we're going to learn about

00:01:40.170 --> 00:01:42.090
another bias that we really need to be aware of.

