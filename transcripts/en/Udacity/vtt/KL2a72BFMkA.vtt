WEBVTT
Kind: captions
Language: en

00:00:00.390 --> 00:00:04.260
Now you might be thinking,
why are we writing the code to display

00:00:04.260 --> 00:00:07.820
a GIF if we haven't converted
the video to a GIF yet?

00:00:07.820 --> 00:00:08.760
The answer is,

00:00:08.760 --> 00:00:13.300
it's easier to test the GIF conversion
code if we can see the GIF.

00:00:13.300 --> 00:00:17.860
A UI image view off the shelf doesn't
have the ability to display a GIF.

00:00:17.860 --> 00:00:21.140
Let's see how the gif was displayed
in the Objective-C project.

00:00:21.140 --> 00:00:25.200
If we go into the WelcomeViewController
and look in the viewWillAppear method,

00:00:25.200 --> 00:00:29.920
we can see where this variable
firstLaunchGif is being initialized.

00:00:29.920 --> 00:00:32.531
If we Cmd+click on this
initWithName method,

00:00:32.531 --> 00:00:35.220
it'll take us inside the gif class.

00:00:35.220 --> 00:00:39.714
Here we can see that the image is
being set with a call to this method

00:00:39.714 --> 00:00:42.514
animatedImageWithAnimatedGifName.

00:00:42.514 --> 00:00:45.230
Okay, where's this method?

00:00:45.230 --> 00:00:50.860
Let's see, if we scroll up we can see
tat animatedImageWithAnimatedGifName

00:00:50.860 --> 00:00:54.440
is a part of this extension
that Rob Mayoff wrote,

00:00:54.440 --> 00:00:57.980
that UIImage+animatedGIF extension.

00:00:57.980 --> 00:01:00.810
This seems like it's getting
a little complicated.

00:01:00.810 --> 00:01:01.447
But guess what?

00:01:01.447 --> 00:01:06.190
Arne Bahlo has an extension that
does exactly what we need and

00:01:06.190 --> 00:01:07.005
it's written in Swift.

00:01:08.090 --> 00:01:11.420
So let's switch back to our
Swift project and go ahead and

00:01:11.420 --> 00:01:14.200
add a new file called UIImage+gif.

00:01:15.385 --> 00:01:17.980
You can find a link to
the GitHub repo containing

00:01:17.980 --> 00:01:21.845
Bahlo's SwiftGif extension
in the corresponding text.

00:01:21.845 --> 00:01:27.110
If we go into his repository and
we go into the SwiftGif common folder,

00:01:27.110 --> 00:01:31.310
we can see this UIImage+Gif.swift file.

00:01:31.310 --> 00:01:36.300
Go ahead and copy this code and put
it into the Swift file you just made.

00:01:36.300 --> 00:01:39.540
Make sure that you copy this
copyright information as well, so

00:01:39.540 --> 00:01:41.010
that Bahlo gets proper credit.

00:01:42.090 --> 00:01:44.540
Next we want to hook up
the storyboard outlet for

00:01:44.540 --> 00:01:47.640
our WelcomeViewController's
gifImageView.

00:01:47.640 --> 00:01:53.340
So let's open up the storyboard and
we'll open up the assistant editor.

00:01:53.340 --> 00:01:54.905
And we'll hook up the GIFImageView.

00:01:56.210 --> 00:01:59.450
Next we want to set the GIFImageView
here in viewWillAppear.

00:02:00.710 --> 00:02:04.630
If we go back to GitHub can see
here in our Arne Bahlo's readme for

00:02:04.630 --> 00:02:08.460
the UI image extension
how to use the extension.

00:02:08.460 --> 00:02:11.990
I'm going to call this
proofOfConceptGif for now.

00:02:11.990 --> 00:02:14.630
And then we'll call UIImage, and

00:02:15.820 --> 00:02:20.580
then the method gifWithName, and
then you'll notice that I've

00:02:20.580 --> 00:02:25.115
included a couple GIFs to get
you guys started in the project.

00:02:25.115 --> 00:02:30.860
hotlineBling is the name of one of them,
and then we need to set

00:02:30.860 --> 00:02:36.670
the image on our gifImageView
to be the proofOfConceptGif.

00:02:36.670 --> 00:02:39.150
And of course we don't want
to forget to call super.

00:02:39.150 --> 00:02:42.990
So we'll make sure to
call superViewWillAppear.

00:02:42.990 --> 00:02:45.570
And now we should be ready to run it.

00:02:45.570 --> 00:02:50.530
And when we run it,
sweet, there's Drake.

00:02:50.530 --> 00:02:53.710
Now when we convert our video into
a GIF, we'll be able to display it.

