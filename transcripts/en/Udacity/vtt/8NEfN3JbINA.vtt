WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:02.160
So this idea of Naive Bayes, where you have

00:00:02.160 --> 00:00:06.710
a network that has a label producing or, or

00:00:06.710 --> 00:00:10.880
conditionally producing a bunch of attribute values, is just

00:00:10.880 --> 00:00:13.330
a really cool and powerful idea. So one of the,

00:00:13.330 --> 00:00:15.544
one of the issues is that, even though inference

00:00:15.544 --> 00:00:19.346
in general is, is is a very difficult problem it's

00:00:19.346 --> 00:00:22.740
NP hard. To work out what these probabilities are,

00:00:22.740 --> 00:00:25.070
when you have a naive Bayes structure, it's cheap. It's,

00:00:25.070 --> 00:00:28.440
it's the formula that we had on the previous slide. The

00:00:28.440 --> 00:00:30.570
number of parameters that you need to write down, again even if

00:00:30.570 --> 00:00:33.970
you have a very large number of variables, it's not exponential

00:00:33.970 --> 00:00:38.450
in the number of variables, it's just linear. There's, two probabilities for

00:00:38.450 --> 00:00:42.050
each of the attributes and one probability for the class. We

00:00:42.050 --> 00:00:45.270
can actually estimate these probabilities. So so far, we've only been talking

00:00:45.270 --> 00:00:47.770
about Bayes Nets in, in not in a learning setting, but in

00:00:47.770 --> 00:00:50.700
a setting where we just write down what all the numbers are.

00:00:50.700 --> 00:00:54.780
We can actually very easily estimate these parameters. How would we

00:00:54.780 --> 00:00:56.660
do that? Well the odd, the easy way to do it, is

00:00:56.660 --> 00:01:01.220
you count. When you're trying to estimate the probability of a particular

00:01:01.220 --> 00:01:04.670
attribute value given a class, it's really just in your, in your

00:01:04.670 --> 00:01:08.170
labeled data. How often do you have an example that has an

00:01:08.170 --> 00:01:10.920
attribute value in that class, and then divide by the number of

00:01:10.920 --> 00:01:12.830
times you had that class at all, and that gives you the

00:01:12.830 --> 00:01:15.720
conditional probability. So this is, you know in, in the case of

00:01:15.720 --> 00:01:17.940
infinite data this is actually going to give you exactly the right

00:01:17.940 --> 00:01:20.870
number. It also connects this notion of inference that we've been

00:01:20.870 --> 00:01:23.670
talking about with classification. Which is mostly what this, this mini

00:01:23.670 --> 00:01:28.260
course has been about. So, that's really great to have a connection,

00:01:28.260 --> 00:01:30.450
it actually allows us to do all kinds of interesting things

00:01:30.450 --> 00:01:35.010
like instead of only generating what the labels are, we can actually

00:01:35.010 --> 00:01:37.810
generate what attributes are. We can do inference on, in, in

00:01:37.810 --> 00:01:41.780
any of these directions. And it turns out it's wildly successful empirically.

00:01:41.780 --> 00:01:45.680
So, my understanding is that Google uses a tremendous amount of Naive Bayes

00:01:45.680 --> 00:01:49.530
classification in what they do. If you have enough data you can estimate

00:01:49.530 --> 00:01:54.950
these values really well, and Naive Bayes is just remarkably good. So yeah

00:01:54.950 --> 00:01:59.030
so it's like unclear why we'd even have any other algorithms, right Charles?

00:01:59.030 --> 00:02:03.110
&gt;&gt; Well, there's no free lunch. But I, I gotta say I, I you know

00:02:03.110 --> 00:02:06.970
there's this as a famous man once said it works in practice but doesn't work

00:02:06.970 --> 00:02:11.800
in theory. And I'm trying to figure out how this can possibly work.

00:02:11.800 --> 00:02:15.680
So I noticed it's called Naive Bayes. And, I think I know why now.

00:02:15.680 --> 00:02:17.120
&gt;&gt; Alright.

00:02:17.120 --> 00:02:19.580
&gt;&gt; One is that it's well it's naive and

00:02:19.580 --> 00:02:23.560
in fact painfully ridiculous to believe that the bayesian

00:02:23.560 --> 00:02:24.854
net that you wrote up there in the upper

00:02:24.854 --> 00:02:27.910
right-hand corner represents the real world most of the time.

00:02:27.910 --> 00:02:31.540
&gt;&gt; Hm, I see, and why is that?

00:02:31.540 --> 00:02:32.270
&gt;&gt; Well because

00:02:32.270 --> 00:02:34.270
what the, what the network says is that all

00:02:34.270 --> 00:02:37.720
of the attributes are conditionally independent giving that you know

00:02:37.720 --> 00:02:41.250
the label, that just can't be true. We talked

00:02:41.250 --> 00:02:44.750
about this before where we were using Bayesian inference to,

00:02:44.750 --> 00:02:48.510
to derive the sum of squared errors that it

00:02:48.510 --> 00:02:51.240
makes a very strong assumption about where your errors come

00:02:51.240 --> 00:02:54.360
from and an even stronger assumption about where your errors

00:02:54.360 --> 00:02:57.270
don't come from. So you're not modeling any of the

00:02:57.270 --> 00:03:00.960
interrelationships, between, the different attributes and

00:03:00.960 --> 00:03:03.280
that just doesn't seem right. So, one

00:03:03.280 --> 00:03:06.600
question I have. I have two, we'll save the second one though. One question

00:03:06.600 --> 00:03:10.660
I have is, how in the world can it possibly be the case

00:03:10.660 --> 00:03:15.724
that this works in practice? Hm, that's a good question. It does. Moving on.

00:03:15.724 --> 00:03:18.330
&gt;&gt; [LAUGH] No, that's not satisfying.

00:03:18.330 --> 00:03:18.840
&gt;&gt; No?

00:03:18.840 --> 00:03:21.360
&gt;&gt; How about, how about I give it a guess? Okay?

00:03:21.360 --> 00:03:21.880
&gt;&gt; Alright.

00:03:21.880 --> 00:03:22.350
&gt;&gt; Now,

00:03:22.350 --> 00:03:24.660
now that I yelled at you, why don't I, why don't I give it a guess.

00:03:24.660 --> 00:03:24.829
&gt;&gt; [LAUGH]

00:03:24.829 --> 00:03:27.050
&gt;&gt; I think it comes back to one of

00:03:27.050 --> 00:03:29.500
the conversation we had in the previous slide. When

00:03:29.500 --> 00:03:31.330
I was saying well we don't have to care.

00:03:31.330 --> 00:03:33.390
We don't care about probabilities. And you said we

00:03:33.390 --> 00:03:35.390
do care about probabilities because of the question your

00:03:35.390 --> 00:03:38.380
asking and that was fair. But once were down

00:03:38.380 --> 00:03:43.070
to classification. The probabilities really don't matter. Right all

00:03:43.070 --> 00:03:47.570
that matters is that you get the right answers.

00:03:47.570 --> 00:03:50.810
So its okay I guess if the probabilities you

00:03:50.810 --> 00:03:53.568
get are long. So long as they're sort, sort

00:03:53.568 --> 00:03:55.370
of in the right direction right. That you end

00:03:55.370 --> 00:03:58.940
up getting the, the right label as a result.

00:03:58.940 --> 00:04:01.410
&gt;&gt; Yeah, that's a good point. That in fact

00:04:01.410 --> 00:04:03.861
we're introducing this idea in the context of, of

00:04:03.861 --> 00:04:06.312
Bayesian Inference it might actually not be so good

00:04:06.312 --> 00:04:09.250
at that even if it is particularly good at classification.

00:04:10.300 --> 00:04:12.540
&gt;&gt; Oh, oh actually I think I have a good example so,

00:04:12.540 --> 00:04:15.434
so here, here write this down. So let's imagine there are four

00:04:15.434 --> 00:04:18.796
actually you can use the network that you have up there okay

00:04:18.796 --> 00:04:19.216
&gt;&gt; Good.

00:04:19.216 --> 00:04:22.511
&gt;&gt; So let's say that the first attribute, I'm just going to call it A

00:04:22.511 --> 00:04:26.842
and the second attribute I'm going to call B, and let's say we're really, we're

00:04:26.842 --> 00:04:28.916
really lucky and our naÃ¯ve assumption is

00:04:28.916 --> 00:04:32.910
right and they really are conditionally independent. But

00:04:32.910 --> 00:04:36.090
let's say the third attribute, is actually

00:04:36.090 --> 00:04:38.200
just another way of writing down A, and

00:04:38.200 --> 00:04:40.550
the fourth attribute is just another way of writing down

00:04:40.550 --> 00:04:45.419
B. So, clearly there are interrelationships between the attributes, right?

00:04:45.419 --> 00:04:48.090
&gt;&gt; The third attiribute is the first one, the fourth attribute is

00:04:48.090 --> 00:04:51.032
the second one. There's not way around that. And so you'd think

00:04:51.032 --> 00:04:55.590
Naive Bayes would fail. But, actually, looking at your equation right below

00:04:55.590 --> 00:04:59.800
there where you're doing counting, I actually think, it'll work just fine.

00:04:59.800 --> 00:05:01.560
&gt;&gt; Why?

00:05:01.560 --> 00:05:03.380
&gt;&gt; Because all you're really doing

00:05:03.380 --> 00:05:06.080
is double counting the sort of weight of

00:05:06.080 --> 00:05:08.540
attribute A, but you're also double counting the

00:05:08.540 --> 00:05:10.980
weight of attribute B and they'll cancel each

00:05:10.980 --> 00:05:12.650
other out. And you'll get the right answer.

00:05:12.650 --> 00:05:15.060
&gt;&gt; When you do the arg max, but these

00:05:15.060 --> 00:05:15.820
&gt;&gt; When you do the arg max

00:05:15.820 --> 00:05:17.410
&gt;&gt; You get bad probabilities. The probabilities

00:05:17.410 --> 00:05:18.890
end up being kind of squared of what

00:05:18.890 --> 00:05:20.520
they should, what they're supposed to be.

00:05:20.520 --> 00:05:22.060
But that's okay because the ordering is preserved.

00:05:22.060 --> 00:05:25.780
&gt;&gt; Right, exactly. And so, even if you're unlucky and

00:05:25.780 --> 00:05:29.170
the fourth attribute wasn't B but it was something else, C.

00:05:29.170 --> 00:05:31.200
It doesn't matter if you double count A as

00:05:31.200 --> 00:05:32.700
long as it still gives you the right label.

00:05:32.700 --> 00:05:34.826
And you can imagine that if you have weak

00:05:34.826 --> 00:05:39.630
inner relationships or, you know, you have enough attributes and,

00:05:39.630 --> 00:05:41.370
and so on that you would still get the

00:05:41.370 --> 00:05:44.780
right, you know, yes this is the correct label, even

00:05:44.780 --> 00:05:46.780
if you've got the probabilities wildly wrong. Okay, so

00:05:46.780 --> 00:05:49.710
I'm willing to believe that that could happen in practice.

00:05:49.710 --> 00:05:49.930
&gt;&gt; Okay.

00:05:49.930 --> 00:05:54.870
&gt;&gt; So in fact, my guess is that Naive Bayes believes

00:05:54.870 --> 00:05:58.160
it's answer too much. But it doesn't matter if it happens to be right.

00:05:58.160 --> 00:06:00.465
&gt;&gt; All right and did you have other issues with it?

00:06:00.465 --> 00:06:03.270
&gt;&gt; So the second problem I have actually boils down to that

00:06:03.270 --> 00:06:06.320
equation you wrote there. So it's really nice and neat that you

00:06:06.320 --> 00:06:10.490
can compute the probabilities of seeing an attribute, given a value by

00:06:10.490 --> 00:06:14.740
just doing counting. But, I don't have an infinite amount of data, right?

00:06:14.740 --> 00:06:15.980
&gt;&gt; Not on a bad day, no.

00:06:15.980 --> 00:06:17.530
&gt;&gt; No. Or even on a good day I usually

00:06:17.530 --> 00:06:19.870
don't have an infinite amount of data. So what if

00:06:19.870 --> 00:06:25.040
I'm unlucky enough that for some particular attribute value,

00:06:25.040 --> 00:06:28.410
I have never seen it paired with that label, V.

00:06:28.410 --> 00:06:32.650
&gt;&gt; Right. So then, that means this numerator will be zero

00:06:32.650 --> 00:06:34.050
&gt;&gt; Right.

00:06:34.050 --> 00:06:34.960
&gt;&gt; So.

00:06:34.960 --> 00:06:36.810
&gt;&gt; Well that numerator is zero, but since

00:06:36.810 --> 00:06:40.120
the computation involves a product by just having

00:06:40.120 --> 00:06:43.170
one attribute value that I've never seen before.

00:06:43.170 --> 00:06:46.020
I'm going to end up saying well the probability

00:06:46.020 --> 00:06:50.170
of that entire product of seeing that value given

00:06:50.170 --> 00:06:52.180
a set of attributes is also going to be zero. So

00:06:52.180 --> 00:06:55.310
one unseen attribute, basically says it doesn't matter what else

00:06:55.310 --> 00:06:57.620
is going on. Which seems a little weird, right? You,

00:06:57.620 --> 00:07:00.080
you, you'd think that you, if all the other

00:07:00.080 --> 00:07:03.930
attributes are screaming yes, yes, yes, yes, it should be

00:07:03.930 --> 00:07:07.770
positive. But just because you haven't happened to have seen

00:07:07.770 --> 00:07:11.100
any examples of some other one single attribute, that shouldn't

00:07:11.100 --> 00:07:12.430
be enough to do veto.

00:07:12.430 --> 00:07:14.090
&gt;&gt; Good point, so in fact that's not what

00:07:14.090 --> 00:07:18.380
people often do. People will often, what they call smooth

00:07:18.380 --> 00:07:22.340
the probabilities, by essentially initializing the count, so that

00:07:22.340 --> 00:07:25.480
nothing is zero, everything has a tiny little non-zero value

00:07:25.480 --> 00:07:28.230
in it. And there's, there's smarter and less smart

00:07:28.230 --> 00:07:30.150
ways of doing that, but no, you're absolutely right. That,

00:07:30.150 --> 00:07:32.590
that is, that zeroing out problem is a real

00:07:32.590 --> 00:07:34.530
thing and you have to be a little bit careful.

00:07:34.530 --> 00:07:36.090
&gt;&gt; Hey, hey I just had a thought. So,

00:07:36.090 --> 00:07:38.800
if you, you have to do that, because if you don't do

00:07:38.800 --> 00:07:43.260
that, then you're believing your data too much. You're kind of over fitting.

00:07:43.260 --> 00:07:45.930
&gt;&gt; Ooh. Over fitting comes up again.

00:07:45.930 --> 00:07:49.310
&gt;&gt; Oh, oh, it's okay, okay so, so, so, so, so bear with

00:07:49.310 --> 00:07:52.200
me on this Michael. So if you're over fitting by believing the data,

00:07:52.200 --> 00:07:56.270
and you're fixing it by smooth, I usually spell it with a V,

00:07:56.270 --> 00:08:01.100
but whatever. If you, you'd think that by being smooth, then you're making

00:08:01.100 --> 00:08:04.200
an assumption. There's a kind of inductive

00:08:04.200 --> 00:08:07.690
bias, right? Your'e, you're saying that I go

00:08:07.690 --> 00:08:10.920
in with the assumption that they're sort

00:08:10.920 --> 00:08:13.020
of all things are at least mildly possible.

00:08:13.020 --> 00:08:13.324
&gt;&gt; Good.

00:08:13.324 --> 00:08:13.824
&gt;&gt; Huh.

00:08:14.960 --> 00:08:16.290
&gt;&gt; Yea, that's, that's right.

00:08:16.290 --> 00:08:19.470
&gt;&gt; Okay, Naive Bayes is cool, you've convinced me.

00:08:19.470 --> 00:08:20.220
&gt;&gt; Nice.

