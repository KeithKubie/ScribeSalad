WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.180 align:start position:0%
 
probably<00:00:00.420><c> say</c><00:00:00.630><c> that</c><00:00:00.989><c> the</c><00:00:01.199><c> computations</c><00:00:01.890><c> of</c><00:00:02.070><c> a</c>

00:00:02.180 --> 00:00:02.190 align:start position:0%
probably say that the computations of a
 

00:00:02.190 --> 00:00:03.649 align:start position:0%
probably say that the computations of a
neural<00:00:02.429><c> network</c><00:00:02.580><c> are</c><00:00:02.970><c> all</c><00:00:03.149><c> organized</c><00:00:03.629><c> in</c>

00:00:03.649 --> 00:00:03.659 align:start position:0%
neural network are all organized in
 

00:00:03.659 --> 00:00:06.170 align:start position:0%
neural network are all organized in
terms<00:00:04.080><c> of</c><00:00:04.380><c> a</c><00:00:04.589><c> forward</c><00:00:05.310><c> path</c><00:00:05.520><c> or</c><00:00:05.850><c> a</c><00:00:05.910><c> forward</c>

00:00:06.170 --> 00:00:06.180 align:start position:0%
terms of a forward path or a forward
 

00:00:06.180 --> 00:00:08.360 align:start position:0%
terms of a forward path or a forward
propagation<00:00:06.660><c> step</c><00:00:07.080><c> in</c><00:00:07.259><c> which</c><00:00:07.680><c> we</c><00:00:07.830><c> compute</c><00:00:08.250><c> the</c>

00:00:08.360 --> 00:00:08.370 align:start position:0%
propagation step in which we compute the
 

00:00:08.370 --> 00:00:10.910 align:start position:0%
propagation step in which we compute the
output<00:00:08.400><c> of</c><00:00:09.030><c> the</c><00:00:09.120><c> new</c><00:00:09.240><c> network</c><00:00:09.510><c> followed</c><00:00:10.500><c> by</c><00:00:10.650><c> a</c>

00:00:10.910 --> 00:00:10.920 align:start position:0%
output of the new network followed by a
 

00:00:10.920 --> 00:00:12.890 align:start position:0%
output of the new network followed by a
backward<00:00:11.460><c> pass</c><00:00:11.490><c> or</c><00:00:11.940><c> a</c><00:00:11.969><c> back</c><00:00:12.210><c> complication</c>

00:00:12.890 --> 00:00:12.900 align:start position:0%
backward pass or a back complication
 

00:00:12.900 --> 00:00:15.200 align:start position:0%
backward pass or a back complication
step<00:00:13.170><c> which</c><00:00:13.620><c> we</c><00:00:13.799><c> use</c><00:00:14.009><c> to</c><00:00:14.040><c> compute</c><00:00:14.610><c> gradients</c>

00:00:15.200 --> 00:00:15.210 align:start position:0%
step which we use to compute gradients
 

00:00:15.210 --> 00:00:18.109 align:start position:0%
step which we use to compute gradients
or<00:00:15.299><c> compute</c><00:00:15.690><c> derivatives</c><00:00:16.100><c> the</c><00:00:17.119><c> computation</c>

00:00:18.109 --> 00:00:18.119 align:start position:0%
or compute derivatives the computation
 

00:00:18.119 --> 00:00:20.720 align:start position:0%
or compute derivatives the computation
graph<00:00:18.420><c> explains</c><00:00:19.140><c> why</c><00:00:19.439><c> it</c><00:00:19.770><c> is</c><00:00:20.130><c> organized</c><00:00:20.580><c> this</c>

00:00:20.720 --> 00:00:20.730 align:start position:0%
graph explains why it is organized this
 

00:00:20.730 --> 00:00:23.120 align:start position:0%
graph explains why it is organized this
way<00:00:20.970><c> in</c><00:00:21.180><c> this</c><00:00:21.840><c> video</c><00:00:22.140><c> we'll</c><00:00:22.439><c> go</c><00:00:22.619><c> through</c><00:00:22.859><c> an</c>

00:00:23.120 --> 00:00:23.130 align:start position:0%
way in this video we'll go through an
 

00:00:23.130 --> 00:00:26.779 align:start position:0%
way in this video we'll go through an
example<00:00:23.869><c> in</c><00:00:24.869><c> order</c><00:00:25.289><c> to</c><00:00:25.740><c> illustrate</c><00:00:25.980><c> the</c>

00:00:26.779 --> 00:00:26.789 align:start position:0%
example in order to illustrate the
 

00:00:26.789 --> 00:00:29.570 align:start position:0%
example in order to illustrate the
computation<00:00:27.660><c> drought</c><00:00:27.960><c> let's</c><00:00:28.289><c> use</c><00:00:28.529><c> a</c><00:00:28.580><c> simpler</c>

00:00:29.570 --> 00:00:29.580 align:start position:0%
computation drought let's use a simpler
 

00:00:29.580 --> 00:00:32.510 align:start position:0%
computation drought let's use a simpler
example<00:00:29.730><c> than</c><00:00:30.570><c> logistic</c><00:00:31.439><c> regression</c><00:00:31.920><c> or</c><00:00:32.309><c> a</c>

00:00:32.510 --> 00:00:32.520 align:start position:0%
example than logistic regression or a
 

00:00:32.520 --> 00:00:35.000 align:start position:0%
example than logistic regression or a
full-blown<00:00:33.239><c> neural</c><00:00:33.540><c> network</c><00:00:33.930><c> let's</c><00:00:34.649><c> say</c><00:00:34.800><c> that</c>

00:00:35.000 --> 00:00:35.010 align:start position:0%
full-blown neural network let's say that
 

00:00:35.010 --> 00:00:37.010 align:start position:0%
full-blown neural network let's say that
we're<00:00:35.190><c> trying</c><00:00:35.399><c> to</c><00:00:35.520><c> compute</c><00:00:35.880><c> a</c><00:00:36.059><c> function</c><00:00:36.090><c> J</c>

00:00:37.010 --> 00:00:37.020 align:start position:0%
we're trying to compute a function J
 

00:00:37.020 --> 00:00:39.110 align:start position:0%
we're trying to compute a function J
which<00:00:37.320><c> is</c><00:00:37.350><c> a</c><00:00:37.500><c> function</c><00:00:37.980><c> of</c><00:00:38.160><c> three</c><00:00:38.430><c> variables</c><00:00:38.460><c> a</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
which is a function of three variables a
 

00:00:39.120 --> 00:00:42.020 align:start position:0%
which is a function of three variables a
B<00:00:39.450><c> and</c><00:00:39.570><c> C</c><00:00:39.840><c> and</c><00:00:40.170><c> let's</c><00:00:40.230><c> say</c><00:00:41.219><c> that</c><00:00:41.250><c> function</c><00:00:41.850><c> is</c>

00:00:42.020 --> 00:00:42.030 align:start position:0%
B and C and let's say that function is
 

00:00:42.030 --> 00:00:45.500 align:start position:0%
B and C and let's say that function is
three<00:00:42.270><c> times</c><00:00:42.629><c> a</c><00:00:42.989><c> plus</c><00:00:43.770><c> B</c><00:00:44.010><c> times</c><00:00:44.219><c> C</c><00:00:44.550><c> computing</c>

00:00:45.500 --> 00:00:45.510 align:start position:0%
three times a plus B times C computing
 

00:00:45.510 --> 00:00:47.600 align:start position:0%
three times a plus B times C computing
this<00:00:45.660><c> function</c><00:00:46.170><c> actually</c><00:00:46.739><c> has</c><00:00:47.010><c> three</c>

00:00:47.600 --> 00:00:47.610 align:start position:0%
this function actually has three
 

00:00:47.610 --> 00:00:50.240 align:start position:0%
this function actually has three
distinct<00:00:48.390><c> steps</c><00:00:48.629><c> the</c><00:00:49.320><c> first</c><00:00:49.620><c> is</c><00:00:49.890><c> you</c><00:00:50.070><c> need</c><00:00:50.219><c> to</c>

00:00:50.240 --> 00:00:50.250 align:start position:0%
distinct steps the first is you need to
 

00:00:50.250 --> 00:00:53.090 align:start position:0%
distinct steps the first is you need to
compute<00:00:50.730><c> what</c><00:00:51.329><c> is</c><00:00:51.480><c> B</c><00:00:51.660><c> times</c><00:00:51.960><c> C</c><00:00:52.260><c> and</c><00:00:52.469><c> let's</c><00:00:52.949><c> say</c>

00:00:53.090 --> 00:00:53.100 align:start position:0%
compute what is B times C and let's say
 

00:00:53.100 --> 00:00:55.340 align:start position:0%
compute what is B times C and let's say
we<00:00:53.219><c> store</c><00:00:53.520><c> that</c><00:00:53.670><c> in</c><00:00:53.850><c> a</c><00:00:53.940><c> variable</c><00:00:53.969><c> called</c><00:00:54.360><c> u</c><00:00:54.960><c> so</c>

00:00:55.340 --> 00:00:55.350 align:start position:0%
we store that in a variable called u so
 

00:00:55.350 --> 00:00:58.430 align:start position:0%
we store that in a variable called u so
U<00:00:55.430><c> is</c><00:00:56.430><c> equal</c><00:00:56.699><c> to</c><00:00:56.789><c> B</c><00:00:56.940><c> times</c><00:00:57.180><c> C</c><00:00:57.420><c> and</c><00:00:57.629><c> then</c><00:00:58.350><c> you</c>

00:00:58.430 --> 00:00:58.440 align:start position:0%
U is equal to B times C and then you
 

00:00:58.440 --> 00:01:01.760 align:start position:0%
U is equal to B times C and then you
might<00:00:58.590><c> compute</c><00:00:59.010><c> to</c><00:00:59.129><c> be</c><00:00:59.840><c> musical</c><00:01:00.840><c> a</c><00:01:00.960><c> times</c><00:01:01.199><c> u</c><00:01:01.469><c> so</c>

00:01:01.760 --> 00:01:01.770 align:start position:0%
might compute to be musical a times u so
 

00:01:01.770 --> 00:01:05.240 align:start position:0%
might compute to be musical a times u so
let's<00:01:01.949><c> say</c><00:01:02.129><c> you</c><00:01:02.820><c> know</c><00:01:02.910><c> this</c><00:01:03.239><c> is</c><00:01:04.080><c> V</c><00:01:04.439><c> and</c><00:01:04.680><c> then</c>

00:01:05.240 --> 00:01:05.250 align:start position:0%
let's say you know this is V and then
 

00:01:05.250 --> 00:01:09.530 align:start position:0%
let's say you know this is V and then
finally<00:01:05.700><c> your</c><00:01:06.330><c> output</c><00:01:06.720><c> J</c><00:01:06.990><c> is</c><00:01:07.290><c> V</c><00:01:07.950><c> times</c><00:01:08.460><c> V</c><00:01:08.760><c> so</c>

00:01:09.530 --> 00:01:09.540 align:start position:0%
finally your output J is V times V so
 

00:01:09.540 --> 00:01:13.969 align:start position:0%
finally your output J is V times V so
this<00:01:10.010><c> is</c><00:01:11.010><c> your</c><00:01:11.400><c> final</c><00:01:12.200><c> function</c><00:01:13.200><c> J</c><00:01:13.560><c> you</c><00:01:13.770><c> trying</c>

00:01:13.969 --> 00:01:13.979 align:start position:0%
this is your final function J you trying
 

00:01:13.979 --> 00:01:17.270 align:start position:0%
this is your final function J you trying
to<00:01:14.070><c> compute</c><00:01:14.750><c> we</c><00:01:15.750><c> can</c><00:01:16.049><c> take</c><00:01:16.259><c> these</c><00:01:16.470><c> three</c><00:01:16.979><c> steps</c>

00:01:17.270 --> 00:01:17.280 align:start position:0%
to compute we can take these three steps
 

00:01:17.280 --> 00:01:19.850 align:start position:0%
to compute we can take these three steps
and<00:01:17.700><c> draw</c><00:01:18.090><c> them</c><00:01:18.330><c> in</c><00:01:18.540><c> a</c><00:01:18.600><c> computation</c><00:01:18.990><c> graph</c><00:01:19.619><c> as</c>

00:01:19.850 --> 00:01:19.860 align:start position:0%
and draw them in a computation graph as
 

00:01:19.860 --> 00:01:20.539 align:start position:0%
and draw them in a computation graph as
follows

00:01:20.539 --> 00:01:20.549 align:start position:0%
follows
 

00:01:20.549 --> 00:01:24.890 align:start position:0%
follows
let's<00:01:21.119><c> say</c><00:01:21.360><c> I</c><00:01:22.369><c> draw</c><00:01:23.369><c> your</c><00:01:23.970><c> three</c><00:01:24.210><c> variables</c><00:01:24.659><c> a</c>

00:01:24.890 --> 00:01:24.900 align:start position:0%
let's say I draw your three variables a
 

00:01:24.900 --> 00:01:27.560 align:start position:0%
let's say I draw your three variables a
B<00:01:25.080><c> and</c><00:01:25.200><c> C</c><00:01:25.409><c> here</c><00:01:25.680><c> so</c><00:01:26.549><c> the</c><00:01:26.909><c> first</c><00:01:27.150><c> thing</c><00:01:27.299><c> we</c><00:01:27.390><c> did</c>

00:01:27.560 --> 00:01:27.570 align:start position:0%
B and C here so the first thing we did
 

00:01:27.570 --> 00:01:32.090 align:start position:0%
B and C here so the first thing we did
was<00:01:27.810><c> compute</c><00:01:28.439><c> u</c><00:01:29.159><c> equals</c><00:01:30.150><c> B</c><00:01:30.689><c> times</c><00:01:30.990><c> C</c><00:01:31.409><c> I'm</c><00:01:31.890><c> going</c>

00:01:32.090 --> 00:01:32.100 align:start position:0%
was compute u equals B times C I'm going
 

00:01:32.100 --> 00:01:34.999 align:start position:0%
was compute u equals B times C I'm going
to<00:01:32.189><c> put</c><00:01:32.310><c> a</c><00:01:32.600><c> rectangular</c><00:01:33.600><c> box</c><00:01:34.110><c> around</c><00:01:34.409><c> that</c><00:01:34.710><c> and</c>

00:01:34.999 --> 00:01:35.009 align:start position:0%
to put a rectangular box around that and
 

00:01:35.009 --> 00:01:37.880 align:start position:0%
to put a rectangular box around that and
so<00:01:35.670><c> the</c><00:01:35.820><c> inputs</c><00:01:36.150><c> of</c><00:01:36.240><c> that</c><00:01:36.420><c> are</c><00:01:36.689><c> B</c><00:01:37.229><c> and</c><00:01:37.350><c> C</c><00:01:37.590><c> and</c>

00:01:37.880 --> 00:01:37.890 align:start position:0%
so the inputs of that are B and C and
 

00:01:37.890 --> 00:01:45.770 align:start position:0%
so the inputs of that are B and C and
then<00:01:38.820><c> you</c><00:01:39.150><c> might</c><00:01:39.360><c> have</c><00:01:40.040><c> V</c><00:01:41.040><c> equals</c><00:01:41.970><c> a</c><00:01:42.649><c> plus</c><00:01:43.649><c> u</c><00:01:44.780><c> so</c>

00:01:45.770 --> 00:01:45.780 align:start position:0%
then you might have V equals a plus u so
 

00:01:45.780 --> 00:01:52.910 align:start position:0%
then you might have V equals a plus u so
the<00:01:45.960><c> inputs</c><00:01:46.290><c> to</c><00:01:46.409><c> that</c><00:01:46.470><c> ah</c><00:01:48.710><c> B</c><00:01:51.350><c> so</c><00:01:52.350><c> the</c><00:01:52.500><c> inputs</c><00:01:52.799><c> to</c>

00:01:52.910 --> 00:01:52.920 align:start position:0%
the inputs to that ah B so the inputs to
 

00:01:52.920 --> 00:01:54.830 align:start position:0%
the inputs to that ah B so the inputs to
that<00:01:52.950><c> are</c><00:01:53.399><c> you</c><00:01:53.670><c> which</c><00:01:53.970><c> we</c><00:01:54.119><c> just</c><00:01:54.299><c> computed</c>

00:01:54.830 --> 00:01:54.840 align:start position:0%
that are you which we just computed
 

00:01:54.840 --> 00:01:58.219 align:start position:0%
that are you which we just computed
together<00:01:55.590><c> with</c><00:01:55.710><c> a</c><00:01:55.860><c> and</c><00:01:56.159><c> then</c><00:01:57.149><c> finally</c><00:01:57.719><c> we</c><00:01:57.990><c> have</c>

00:01:58.219 --> 00:01:58.229 align:start position:0%
together with a and then finally we have
 

00:01:58.229 --> 00:02:04.780 align:start position:0%
together with a and then finally we have
J<00:01:59.060><c> equals</c><00:02:00.060><c> three</c><00:02:01.759><c> times</c><00:02:02.759><c> B</c><00:02:03.380><c> so</c><00:02:04.380><c> as</c><00:02:04.469><c> I</c><00:02:04.530><c> can</c>

00:02:04.780 --> 00:02:04.790 align:start position:0%
J equals three times B so as I can
 

00:02:04.790 --> 00:02:08.380 align:start position:0%
J equals three times B so as I can
for<00:02:04.880><c> example</c><00:02:05.360><c> if</c><00:02:05.480><c> equals</c><00:02:06.140><c> five</c><00:02:06.670><c> B</c><00:02:07.670><c> equals</c><00:02:07.970><c> V</c>

00:02:08.380 --> 00:02:08.390 align:start position:0%
for example if equals five B equals V
 

00:02:08.390 --> 00:02:12.820 align:start position:0%
for example if equals five B equals V
and<00:02:08.920><c> C</c><00:02:09.920><c> equals</c><00:02:10.280><c> two</c><00:02:10.550><c> then</c><00:02:11.300><c> du</c><00:02:11.600><c> equals</c><00:02:11.630><c> BC</c><00:02:12.230><c> would</c>

00:02:12.820 --> 00:02:12.830 align:start position:0%
and C equals two then du equals BC would
 

00:02:12.830 --> 00:02:16.570 align:start position:0%
and C equals two then du equals BC would
be<00:02:13.370><c> six</c><00:02:14.090><c> V</c><00:02:14.660><c> equals</c><00:02:14.930><c> a</c><00:02:15.110><c> plus</c><00:02:15.440><c> u</c><00:02:15.770><c> be</c><00:02:16.160><c> five</c><00:02:16.460><c> plus</c>

00:02:16.570 --> 00:02:16.580 align:start position:0%
be six V equals a plus u be five plus
 

00:02:16.580 --> 00:02:19.210 align:start position:0%
be six V equals a plus u be five plus
six<00:02:16.790><c> and</c><00:02:16.970><c> eleven</c><00:02:17.390><c> J</c><00:02:18.110><c> is</c><00:02:18.170><c> three</c><00:02:18.410><c> times</c><00:02:18.650><c> at</c><00:02:18.830><c> so</c><00:02:19.070><c> J</c>

00:02:19.210 --> 00:02:19.220 align:start position:0%
six and eleven J is three times at so J
 

00:02:19.220 --> 00:02:21.610 align:start position:0%
six and eleven J is three times at so J
is<00:02:19.250><c> equal</c><00:02:19.490><c> to</c><00:02:19.550><c> 33</c><00:02:19.880><c> and</c><00:02:20.270><c> and</c><00:02:20.720><c> indeed</c><00:02:21.170><c> hope</c><00:02:21.440><c> you</c>

00:02:21.610 --> 00:02:21.620 align:start position:0%
is equal to 33 and and indeed hope you
 

00:02:21.620 --> 00:02:24.820 align:start position:0%
is equal to 33 and and indeed hope you
can<00:02:21.770><c> verify</c><00:02:21.950><c> that</c><00:02:22.240><c> you</c><00:02:23.240><c> know</c><00:02:23.360><c> this</c><00:02:23.630><c> is</c><00:02:23.840><c> a</c><00:02:23.870><c> three</c>

00:02:24.820 --> 00:02:24.830 align:start position:0%
can verify that you know this is a three
 

00:02:24.830 --> 00:02:29.680 align:start position:0%
can verify that you know this is a three
times<00:02:25.510><c> five</c><00:02:26.510><c> plus</c><00:02:26.840><c> three</c><00:02:27.640><c> times</c><00:02:28.640><c> two</c><00:02:28.850><c> and</c><00:02:29.240><c> if</c>

00:02:29.680 --> 00:02:29.690 align:start position:0%
times five plus three times two and if
 

00:02:29.690 --> 00:02:30.700 align:start position:0%
times five plus three times two and if
you<00:02:29.780><c> expand</c><00:02:30.110><c> that</c><00:02:30.230><c> out</c>

00:02:30.700 --> 00:02:30.710 align:start position:0%
you expand that out
 

00:02:30.710 --> 00:02:32.890 align:start position:0%
you expand that out
you<00:02:31.070><c> know</c><00:02:31.220><c> you</c><00:02:31.490><c> actually</c><00:02:31.670><c> get</c><00:02:32.000><c> so</c><00:02:32.510><c> these</c><00:02:32.660><c> three</c>

00:02:32.890 --> 00:02:32.900 align:start position:0%
you know you actually get so these three
 

00:02:32.900 --> 00:02:35.920 align:start position:0%
you know you actually get so these three
has<00:02:33.080><c> the</c><00:02:33.110><c> value</c><00:02:33.560><c> of</c><00:02:33.710><c> J</c><00:02:33.910><c> so</c><00:02:34.910><c> the</c><00:02:35.270><c> computation</c>

00:02:35.920 --> 00:02:35.930 align:start position:0%
has the value of J so the computation
 

00:02:35.930 --> 00:02:38.310 align:start position:0%
has the value of J so the computation
graph<00:02:36.140><c> comes</c><00:02:36.410><c> in</c><00:02:36.620><c> handy</c><00:02:36.860><c> when</c><00:02:37.250><c> there</c><00:02:37.880><c> is</c><00:02:38.000><c> some</c>

00:02:38.310 --> 00:02:38.320 align:start position:0%
graph comes in handy when there is some
 

00:02:38.320 --> 00:02:41.199 align:start position:0%
graph comes in handy when there is some
distinguished<00:02:39.320><c> or</c><00:02:39.530><c> some</c><00:02:39.740><c> special</c><00:02:40.209><c> output</c>

00:02:41.199 --> 00:02:41.209 align:start position:0%
distinguished or some special output
 

00:02:41.209 --> 00:02:44.500 align:start position:0%
distinguished or some special output
variable<00:02:41.720><c> such</c><00:02:42.350><c> as</c><00:02:42.380><c> J</c><00:02:42.800><c> in</c><00:02:43.100><c> this</c><00:02:43.280><c> case</c><00:02:43.520><c> that</c><00:02:44.209><c> you</c>

00:02:44.500 --> 00:02:44.510 align:start position:0%
variable such as J in this case that you
 

00:02:44.510 --> 00:02:47.020 align:start position:0%
variable such as J in this case that you
want<00:02:44.750><c> to</c><00:02:44.990><c> optimize</c><00:02:45.290><c> and</c><00:02:46.040><c> in</c><00:02:46.520><c> the</c><00:02:46.610><c> case</c><00:02:46.820><c> of</c><00:02:46.970><c> the</c>

00:02:47.020 --> 00:02:47.030 align:start position:0%
want to optimize and in the case of the
 

00:02:47.030 --> 00:02:50.080 align:start position:0%
want to optimize and in the case of the
logistic<00:02:47.590><c> regression</c><00:02:48.590><c> J</c><00:02:48.950><c> is</c><00:02:49.100><c> of</c><00:02:49.280><c> course</c><00:02:49.520><c> the</c>

00:02:50.080 --> 00:02:50.090 align:start position:0%
logistic regression J is of course the
 

00:02:50.090 --> 00:02:51.970 align:start position:0%
logistic regression J is of course the
cost<00:02:50.420><c> function</c><00:02:50.959><c> that</c><00:02:51.200><c> we're</c><00:02:51.590><c> trying</c><00:02:51.830><c> to</c>

00:02:51.970 --> 00:02:51.980 align:start position:0%
cost function that we're trying to
 

00:02:51.980 --> 00:02:54.670 align:start position:0%
cost function that we're trying to
minimize<00:02:52.310><c> and</c><00:02:52.900><c> what</c><00:02:53.900><c> we've</c><00:02:54.050><c> seen</c><00:02:54.230><c> in</c><00:02:54.530><c> this</c>

00:02:54.670 --> 00:02:54.680 align:start position:0%
minimize and what we've seen in this
 

00:02:54.680 --> 00:02:57.070 align:start position:0%
minimize and what we've seen in this
little<00:02:55.250><c> example</c><00:02:55.340><c> is</c><00:02:56.030><c> that</c><00:02:56.060><c> through</c><00:02:57.050><c> a</c>

00:02:57.070 --> 00:02:57.080 align:start position:0%
little example is that through a
 

00:02:57.080 --> 00:02:59.680 align:start position:0%
little example is that through a
left-to-right<00:02:57.920><c> pause</c><00:02:58.430><c> you</c><00:02:58.940><c> can</c><00:02:59.150><c> compute</c><00:02:59.570><c> the</c>

00:02:59.680 --> 00:02:59.690 align:start position:0%
left-to-right pause you can compute the
 

00:02:59.690 --> 00:03:02.140 align:start position:0%
left-to-right pause you can compute the
value<00:03:00.080><c> of</c><00:03:00.110><c> J</c><00:03:00.530><c> and</c><00:03:00.770><c> what</c><00:03:01.430><c> we'll</c><00:03:01.580><c> see</c><00:03:01.760><c> in</c><00:03:02.120><c> the</c>

00:03:02.140 --> 00:03:02.150 align:start position:0%
value of J and what we'll see in the
 

00:03:02.150 --> 00:03:04.750 align:start position:0%
value of J and what we'll see in the
next<00:03:02.480><c> couple</c><00:03:02.870><c> slides</c><00:03:03.020><c> is</c><00:03:03.500><c> that</c><00:03:03.770><c> in</c><00:03:04.130><c> order</c><00:03:04.459><c> to</c>

00:03:04.750 --> 00:03:04.760 align:start position:0%
next couple slides is that in order to
 

00:03:04.760 --> 00:03:05.830 align:start position:0%
next couple slides is that in order to
compute<00:03:05.060><c> derivatives</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
compute derivatives
 

00:03:05.840 --> 00:03:10.180 align:start position:0%
compute derivatives
Opa<00:03:06.530><c> right</c><00:03:07.310><c> to</c><00:03:07.850><c> left</c><00:03:08.120><c> pause</c><00:03:09.050><c> like</c><00:03:09.620><c> this</c><00:03:09.860><c> kind</c>

00:03:10.180 --> 00:03:10.190 align:start position:0%
Opa right to left pause like this kind
 

00:03:10.190 --> 00:03:11.890 align:start position:0%
Opa right to left pause like this kind
of<00:03:10.250><c> going</c><00:03:10.580><c> in</c><00:03:10.670><c> the</c><00:03:10.760><c> opposite</c><00:03:11.209><c> direction</c><00:03:11.360><c> as</c>

00:03:11.890 --> 00:03:11.900 align:start position:0%
of going in the opposite direction as
 

00:03:11.900 --> 00:03:15.009 align:start position:0%
of going in the opposite direction as
the<00:03:12.500><c> blue</c><00:03:12.739><c> arrows</c><00:03:13.600><c> that</c><00:03:14.600><c> would</c><00:03:14.720><c> be</c><00:03:14.810><c> most</c>

00:03:15.009 --> 00:03:15.019 align:start position:0%
the blue arrows that would be most
 

00:03:15.019 --> 00:03:17.440 align:start position:0%
the blue arrows that would be most
natural<00:03:15.200><c> for</c><00:03:15.650><c> computing</c><00:03:16.070><c> the</c><00:03:16.190><c> derivatives</c><00:03:16.760><c> so</c>

00:03:17.440 --> 00:03:17.450 align:start position:0%
natural for computing the derivatives so
 

00:03:17.450 --> 00:03:19.180 align:start position:0%
natural for computing the derivatives so
the<00:03:17.570><c> recap</c><00:03:17.959><c> the</c><00:03:18.290><c> computation</c><00:03:18.980><c> graph</c>

00:03:19.180 --> 00:03:19.190 align:start position:0%
the recap the computation graph
 

00:03:19.190 --> 00:03:21.430 align:start position:0%
the recap the computation graph
organizes<00:03:19.970><c> a</c><00:03:20.000><c> computation</c><00:03:20.720><c> with</c><00:03:20.930><c> this</c><00:03:21.110><c> blue</c>

00:03:21.430 --> 00:03:21.440 align:start position:0%
organizes a computation with this blue
 

00:03:21.440 --> 00:03:24.490 align:start position:0%
organizes a computation with this blue
arrow<00:03:21.680><c> left</c><00:03:22.400><c> to</c><00:03:22.549><c> right</c><00:03:22.900><c> computation</c><00:03:23.900><c> lets</c>

00:03:24.490 --> 00:03:24.500 align:start position:0%
arrow left to right computation lets
 

00:03:24.500 --> 00:03:26.440 align:start position:0%
arrow left to right computation lets
defer<00:03:24.830><c> to</c><00:03:24.980><c> the</c><00:03:25.070><c> next</c><00:03:25.370><c> video</c><00:03:25.519><c> how</c><00:03:25.940><c> you</c><00:03:25.970><c> can</c><00:03:26.120><c> do</c>

00:03:26.440 --> 00:03:26.450 align:start position:0%
defer to the next video how you can do
 

00:03:26.450 --> 00:03:29.560 align:start position:0%
defer to the next video how you can do
the<00:03:26.600><c> backward</c><00:03:27.470><c> red</c><00:03:28.010><c> arrow</c><00:03:28.310><c> right</c><00:03:28.970><c> to</c><00:03:29.299><c> left</c>

00:03:29.560 --> 00:03:29.570 align:start position:0%
the backward red arrow right to left
 

00:03:29.570 --> 00:03:32.050 align:start position:0%
the backward red arrow right to left
computation<00:03:30.500><c> of</c><00:03:30.739><c> the</c><00:03:30.860><c> derivatives</c><00:03:31.400><c> let's</c><00:03:31.910><c> go</c>

00:03:32.050 --> 00:03:32.060 align:start position:0%
computation of the derivatives let's go
 

00:03:32.060 --> 00:03:34.810 align:start position:0%
computation of the derivatives let's go
on<00:03:32.150><c> to</c><00:03:32.180><c> the</c><00:03:32.360><c> next</c><00:03:32.540><c> video</c>

