WEBVTT
Kind: captions
Language: en

00:00:01.159 --> 00:00:04.220
you've seen how convolutions over to the

00:00:04.220 --> 00:00:04.230
you've seen how convolutions over to the
 

00:00:04.230 --> 00:00:06.800
you've seen how convolutions over to the
images works now let's see how you can

00:00:06.800 --> 00:00:06.810
images works now let's see how you can
 

00:00:06.810 --> 00:00:09.200
images works now let's see how you can
implement convolutions over not just to

00:00:09.200 --> 00:00:09.210
implement convolutions over not just to
 

00:00:09.210 --> 00:00:11.509
implement convolutions over not just to
the images but over three-dimensional

00:00:11.509 --> 00:00:11.519
the images but over three-dimensional
 

00:00:11.519 --> 00:00:13.360
the images but over three-dimensional
volumes

00:00:13.360 --> 00:00:13.370
volumes
 

00:00:13.370 --> 00:00:16.279
volumes
let's not serve an example let's say you

00:00:16.279 --> 00:00:16.289
let's not serve an example let's say you
 

00:00:16.289 --> 00:00:19.240
let's not serve an example let's say you
want to detect features not just in a

00:00:19.240 --> 00:00:19.250
want to detect features not just in a
 

00:00:19.250 --> 00:00:22.849
want to detect features not just in a
grayscale image but in a RGB image so an

00:00:22.849 --> 00:00:22.859
grayscale image but in a RGB image so an
 

00:00:22.859 --> 00:00:26.269
grayscale image but in a RGB image so an
RGB image might be instead of a six by

00:00:26.269 --> 00:00:26.279
RGB image might be instead of a six by
 

00:00:26.279 --> 00:00:28.490
RGB image might be instead of a six by
six image it could be six by six by

00:00:28.490 --> 00:00:28.500
six image it could be six by six by
 

00:00:28.500 --> 00:00:30.950
six image it could be six by six by
three where the three here corresponds

00:00:30.950 --> 00:00:30.960
three where the three here corresponds
 

00:00:30.960 --> 00:00:33.410
three where the three here corresponds
to the three colour channels so you

00:00:33.410 --> 00:00:33.420
to the three colour channels so you
 

00:00:33.420 --> 00:00:36.139
to the three colour channels so you
think of it as a step of three six by

00:00:36.139 --> 00:00:36.149
think of it as a step of three six by
 

00:00:36.149 --> 00:00:40.160
think of it as a step of three six by
six images in order to detect edges or

00:00:40.160 --> 00:00:40.170
six images in order to detect edges or
 

00:00:40.170 --> 00:00:42.110
six images in order to detect edges or
some other feature in this image you

00:00:42.110 --> 00:00:42.120
some other feature in this image you
 

00:00:42.120 --> 00:00:46.340
some other feature in this image you
convolve this not with a three by three

00:00:46.340 --> 00:00:46.350
convolve this not with a three by three
 

00:00:46.350 --> 00:00:49.610
convolve this not with a three by three
filter as you have previously but now

00:00:49.610 --> 00:00:49.620
filter as you have previously but now
 

00:00:49.620 --> 00:00:52.850
filter as you have previously but now
with also a 3d filter that's gonna be

00:00:52.850 --> 00:00:52.860
with also a 3d filter that's gonna be
 

00:00:52.860 --> 00:00:55.639
with also a 3d filter that's gonna be
three by three by three so the filter

00:00:55.639 --> 00:00:55.649
three by three by three so the filter
 

00:00:55.649 --> 00:01:00.430
three by three by three so the filter
itself will also have three layers

00:01:00.430 --> 00:01:00.440
itself will also have three layers
 

00:01:00.440 --> 00:01:02.540
itself will also have three layers
responding to the red green and blue

00:01:02.540 --> 00:01:02.550
responding to the red green and blue
 

00:01:02.550 --> 00:01:06.530
responding to the red green and blue
channels so to give these things some

00:01:06.530 --> 00:01:06.540
channels so to give these things some
 

00:01:06.540 --> 00:01:09.590
channels so to give these things some
names this first six here that's the

00:01:09.590 --> 00:01:09.600
names this first six here that's the
 

00:01:09.600 --> 00:01:14.350
names this first six here that's the
height at the image that's the width and

00:01:14.350 --> 00:01:14.360
height at the image that's the width and
 

00:01:14.360 --> 00:01:19.359
height at the image that's the width and
this 3 is the number of channels and

00:01:19.359 --> 00:01:19.369
this 3 is the number of channels and
 

00:01:19.369 --> 00:01:23.780
this 3 is the number of channels and
your filter also similarly has a height

00:01:23.780 --> 00:01:23.790
your filter also similarly has a height
 

00:01:23.790 --> 00:01:29.270
your filter also similarly has a height
width and the number of channels and the

00:01:29.270 --> 00:01:29.280
width and the number of channels and the
 

00:01:29.280 --> 00:01:32.270
width and the number of channels and the
number of channels in your image must

00:01:32.270 --> 00:01:32.280
number of channels in your image must
 

00:01:32.280 --> 00:01:34.429
number of channels in your image must
match the number of channels in your

00:01:34.429 --> 00:01:34.439
match the number of channels in your
 

00:01:34.439 --> 00:01:37.219
match the number of channels in your
filter so these two numbers have to be

00:01:37.219 --> 00:01:37.229
filter so these two numbers have to be
 

00:01:37.229 --> 00:01:40.340
filter so these two numbers have to be
equal we'll see on the next slide how

00:01:40.340 --> 00:01:40.350
equal we'll see on the next slide how
 

00:01:40.350 --> 00:01:41.899
equal we'll see on the next slide how
this convolution operation actually

00:01:41.899 --> 00:01:41.909
this convolution operation actually
 

00:01:41.909 --> 00:01:44.920
this convolution operation actually
works but the output of this will be a

00:01:44.920 --> 00:01:44.930
works but the output of this will be a
 

00:01:44.930 --> 00:01:47.330
works but the output of this will be a
four by four image and notice this is

00:01:47.330 --> 00:01:47.340
four by four image and notice this is
 

00:01:47.340 --> 00:01:50.060
four by four image and notice this is
four by four you know by one there's no

00:01:50.060 --> 00:01:50.070
four by four you know by one there's no
 

00:01:50.070 --> 00:01:55.010
four by four you know by one there's no
longer three at the end let's go through

00:01:55.010 --> 00:01:55.020
longer three at the end let's go through
 

00:01:55.020 --> 00:01:57.170
longer three at the end let's go through
in detail how this works but let's use a

00:01:57.170 --> 00:01:57.180
in detail how this works but let's use a
 

00:01:57.180 --> 00:02:02.660
in detail how this works but let's use a
more nicely drawn image so here's the

00:02:02.660 --> 00:02:02.670
more nicely drawn image so here's the
 

00:02:02.670 --> 00:02:05.959
more nicely drawn image so here's the
six by six by three image and here's a

00:02:05.959 --> 00:02:05.969
six by six by three image and here's a
 

00:02:05.969 --> 00:02:10.790
six by six by three image and here's a
three by three by three filter and this

00:02:10.790 --> 00:02:10.800
three by three by three filter and this
 

00:02:10.800 --> 00:02:12.570
three by three by three filter and this
last number the number

00:02:12.570 --> 00:02:12.580
last number the number
 

00:02:12.580 --> 00:02:15.150
last number the number
matches reaching the image and the

00:02:15.150 --> 00:02:15.160
matches reaching the image and the
 

00:02:15.160 --> 00:02:19.320
matches reaching the image and the
filter so to simplify the drawing of

00:02:19.320 --> 00:02:19.330
filter so to simplify the drawing of
 

00:02:19.330 --> 00:02:22.110
filter so to simplify the drawing of
this three by three by three filter is

00:02:22.110 --> 00:02:22.120
this three by three by three filter is
 

00:02:22.120 --> 00:02:24.320
this three by three by three filter is
sort of drawing it as a stack of three

00:02:24.320 --> 00:02:24.330
sort of drawing it as a stack of three
 

00:02:24.330 --> 00:02:27.150
sort of drawing it as a stack of three
matrices I'm also going to sometimes

00:02:27.150 --> 00:02:27.160
matrices I'm also going to sometimes
 

00:02:27.160 --> 00:02:28.770
matrices I'm also going to sometimes
it's drawn as this you know three

00:02:28.770 --> 00:02:28.780
it's drawn as this you know three
 

00:02:28.780 --> 00:02:34.530
it's drawn as this you know three
dimensional cube like that so to compute

00:02:34.530 --> 00:02:34.540
dimensional cube like that so to compute
 

00:02:34.540 --> 00:02:37.220
dimensional cube like that so to compute
the output of this convolution operation

00:02:37.220 --> 00:02:37.230
the output of this convolution operation
 

00:02:37.230 --> 00:02:39.840
the output of this convolution operation
what you would do is take the three by

00:02:39.840 --> 00:02:39.850
what you would do is take the three by
 

00:02:39.850 --> 00:02:42.900
what you would do is take the three by
three by three filter and first place it

00:02:42.900 --> 00:02:42.910
three by three filter and first place it
 

00:02:42.910 --> 00:02:45.600
three by three filter and first place it
in that upper leftmost position so

00:02:45.600 --> 00:02:45.610
in that upper leftmost position so
 

00:02:45.610 --> 00:02:48.060
in that upper leftmost position so
notice that this 3 by 3 by 3 filter has

00:02:48.060 --> 00:02:48.070
notice that this 3 by 3 by 3 filter has
 

00:02:48.070 --> 00:02:53.790
notice that this 3 by 3 by 3 filter has
27 numbers 27 parameters as T cubed and

00:02:53.790 --> 00:02:53.800
27 numbers 27 parameters as T cubed and
 

00:02:53.800 --> 00:02:58.710
27 numbers 27 parameters as T cubed and
so what you do is take each of these 27

00:02:58.710 --> 00:02:58.720
so what you do is take each of these 27
 

00:02:58.720 --> 00:03:02.790
so what you do is take each of these 27
numbers and multiply them with the

00:03:02.790 --> 00:03:02.800
numbers and multiply them with the
 

00:03:02.800 --> 00:03:05.970
numbers and multiply them with the
corresponding numbers from the red green

00:03:05.970 --> 00:03:05.980
corresponding numbers from the red green
 

00:03:05.980 --> 00:03:07.830
corresponding numbers from the red green
and blue channels from the image so take

00:03:07.830 --> 00:03:07.840
and blue channels from the image so take
 

00:03:07.840 --> 00:03:09.390
and blue channels from the image so take
the first nine numbers from red channel

00:03:09.390 --> 00:03:09.400
the first nine numbers from red channel
 

00:03:09.400 --> 00:03:11.580
the first nine numbers from red channel
then the three beneath it for the green

00:03:11.580 --> 00:03:11.590
then the three beneath it for the green
 

00:03:11.590 --> 00:03:13.140
then the three beneath it for the green
channel then the fee belief into the

00:03:13.140 --> 00:03:13.150
channel then the fee belief into the
 

00:03:13.150 --> 00:03:15.390
channel then the fee belief into the
blue Channel and multiply it with the

00:03:15.390 --> 00:03:15.400
blue Channel and multiply it with the
 

00:03:15.400 --> 00:03:18.180
blue Channel and multiply it with the
corresponding 27 numbers that are I

00:03:18.180 --> 00:03:18.190
corresponding 27 numbers that are I
 

00:03:18.190 --> 00:03:21.390
corresponding 27 numbers that are I
guess covered by this yellow tube shown

00:03:21.390 --> 00:03:21.400
guess covered by this yellow tube shown
 

00:03:21.400 --> 00:03:23.610
guess covered by this yellow tube shown
on the left then add up all those

00:03:23.610 --> 00:03:23.620
on the left then add up all those
 

00:03:23.620 --> 00:03:25.890
on the left then add up all those
numbers and this gives you this first

00:03:25.890 --> 00:03:25.900
numbers and this gives you this first
 

00:03:25.900 --> 00:03:29.880
numbers and this gives you this first
number in the output and then to compute

00:03:29.880 --> 00:03:29.890
number in the output and then to compute
 

00:03:29.890 --> 00:03:32.130
number in the output and then to compute
the Knicks output you take this cube and

00:03:32.130 --> 00:03:32.140
the Knicks output you take this cube and
 

00:03:32.140 --> 00:03:36.690
the Knicks output you take this cube and
slide it over by one and again do the

00:03:36.690 --> 00:03:36.700
slide it over by one and again do the
 

00:03:36.700 --> 00:03:38.910
slide it over by one and again do the
twenty-seven multiplications add up

00:03:38.910 --> 00:03:38.920
twenty-seven multiplications add up
 

00:03:38.920 --> 00:03:40.949
twenty-seven multiplications add up
between seven numbers that gives you

00:03:40.949 --> 00:03:40.959
between seven numbers that gives you
 

00:03:40.959 --> 00:03:43.380
between seven numbers that gives you
this Knicks output do it for the next

00:03:43.380 --> 00:03:43.390
this Knicks output do it for the next
 

00:03:43.390 --> 00:03:45.540
this Knicks output do it for the next
number over for the next position over

00:03:45.540 --> 00:03:45.550
number over for the next position over
 

00:03:45.550 --> 00:03:48.449
number over for the next position over
thank you the third output and so on you

00:03:48.449 --> 00:03:48.459
thank you the third output and so on you
 

00:03:48.459 --> 00:03:51.090
thank you the third output and so on you
know that gives you the four and then

00:03:51.090 --> 00:03:51.100
know that gives you the four and then
 

00:03:51.100 --> 00:03:54.180
know that gives you the four and then
one row down and then the next one the

00:03:54.180 --> 00:03:54.190
one row down and then the next one the
 

00:03:54.190 --> 00:03:56.640
one row down and then the next one the
next one the next one and so on

00:03:56.640 --> 00:03:56.650
next one the next one and so on
 

00:03:56.650 --> 00:04:00.840
next one the next one and so on
alright and you get the idea until at

00:04:00.840 --> 00:04:00.850
alright and you get the idea until at
 

00:04:00.850 --> 00:04:03.540
alright and you get the idea until at
the very end that's the position you

00:04:03.540 --> 00:04:03.550
the very end that's the position you
 

00:04:03.550 --> 00:04:09.660
the very end that's the position you
have for that final output so what does

00:04:09.660 --> 00:04:09.670
have for that final output so what does
 

00:04:09.670 --> 00:04:11.520
have for that final output so what does
this allow you to do well here's the

00:04:11.520 --> 00:04:11.530
this allow you to do well here's the
 

00:04:11.530 --> 00:04:14.370
this allow you to do well here's the
example this filter is three by three by

00:04:14.370 --> 00:04:14.380
example this filter is three by three by
 

00:04:14.380 --> 00:04:18.509
example this filter is three by three by
three so if you want to detect edges in

00:04:18.509 --> 00:04:18.519
three so if you want to detect edges in
 

00:04:18.519 --> 00:04:20.640
three so if you want to detect edges in
the red channel of the image then you

00:04:20.640 --> 00:04:20.650
the red channel of the image then you
 

00:04:20.650 --> 00:04:24.300
the red channel of the image then you
could have the first filter be one one

00:04:24.300 --> 00:04:24.310
could have the first filter be one one
 

00:04:24.310 --> 00:04:24.610
could have the first filter be one one
one

00:04:24.610 --> 00:04:24.620
one
 

00:04:24.620 --> 00:04:27.460
one
minus one minus one minus one as usual

00:04:27.460 --> 00:04:27.470
minus one minus one minus one as usual
 

00:04:27.470 --> 00:04:30.280
minus one minus one minus one as usual
and have a green channel be all zeros

00:04:30.280 --> 00:04:30.290
and have a green channel be all zeros
 

00:04:30.290 --> 00:04:34.930
and have a green channel be all zeros
and have the blue filter be all zeros

00:04:34.930 --> 00:04:34.940
and have the blue filter be all zeros
 

00:04:34.940 --> 00:04:37.240
and have the blue filter be all zeros
and if you have you know if you have

00:04:37.240 --> 00:04:37.250
and if you have you know if you have
 

00:04:37.250 --> 00:04:39.700
and if you have you know if you have
these three stack together to form your

00:04:39.700 --> 00:04:39.710
these three stack together to form your
 

00:04:39.710 --> 00:04:43.659
these three stack together to form your
three by three by three filter then this

00:04:43.659 --> 00:04:43.669
three by three by three filter then this
 

00:04:43.669 --> 00:04:45.790
three by three by three filter then this
would be a filter that detects edges

00:04:45.790 --> 00:04:45.800
would be a filter that detects edges
 

00:04:45.800 --> 00:04:48.189
would be a filter that detects edges
vertical edges but only in the red

00:04:48.189 --> 00:04:48.199
vertical edges but only in the red
 

00:04:48.199 --> 00:04:51.310
vertical edges but only in the red
channel or alternatively if you don't

00:04:51.310 --> 00:04:51.320
channel or alternatively if you don't
 

00:04:51.320 --> 00:04:54.790
channel or alternatively if you don't
care what color the vertical edges in

00:04:54.790 --> 00:04:54.800
care what color the vertical edges in
 

00:04:54.800 --> 00:04:58.120
care what color the vertical edges in
then you might have a filter just like

00:04:58.120 --> 00:04:58.130
then you might have a filter just like
 

00:04:58.130 --> 00:05:01.360
then you might have a filter just like
this whereas this one one one minus one

00:05:01.360 --> 00:05:01.370
this whereas this one one one minus one
 

00:05:01.370 --> 00:05:03.580
this whereas this one one one minus one
minus one minus one in all three

00:05:03.580 --> 00:05:03.590
minus one minus one in all three
 

00:05:03.590 --> 00:05:06.760
minus one minus one in all three
channels so by setting you know the

00:05:06.760 --> 00:05:06.770
channels so by setting you know the
 

00:05:06.770 --> 00:05:09.040
channels so by setting you know the
second alternative set of parameters you

00:05:09.040 --> 00:05:09.050
second alternative set of parameters you
 

00:05:09.050 --> 00:05:11.350
second alternative set of parameters you
then have an edge detector a fee by

00:05:11.350 --> 00:05:11.360
then have an edge detector a fee by
 

00:05:11.360 --> 00:05:13.120
then have an edge detector a fee by
three by three edge detector that

00:05:13.120 --> 00:05:13.130
three by three edge detector that
 

00:05:13.130 --> 00:05:15.930
three by three edge detector that
detects edges in you know any color and

00:05:15.930 --> 00:05:15.940
detects edges in you know any color and
 

00:05:15.940 --> 00:05:18.070
detects edges in you know any color and
with different choices of these

00:05:18.070 --> 00:05:18.080
with different choices of these
 

00:05:18.080 --> 00:05:20.409
with different choices of these
parameters you can get different feature

00:05:20.409 --> 00:05:20.419
parameters you can get different feature
 

00:05:20.419 --> 00:05:22.719
parameters you can get different feature
detectors out of this three by three by

00:05:22.719 --> 00:05:22.729
detectors out of this three by three by
 

00:05:22.729 --> 00:05:26.379
detectors out of this three by three by
three filter and by convention in

00:05:26.379 --> 00:05:26.389
three filter and by convention in
 

00:05:26.389 --> 00:05:28.870
three filter and by convention in
computer vision when you have an input

00:05:28.870 --> 00:05:28.880
computer vision when you have an input
 

00:05:28.880 --> 00:05:31.120
computer vision when you have an input
with a certain height a certain width

00:05:31.120 --> 00:05:31.130
with a certain height a certain width
 

00:05:31.130 --> 00:05:33.370
with a certain height a certain width
and a certain number of channels then

00:05:33.370 --> 00:05:33.380
and a certain number of channels then
 

00:05:33.380 --> 00:05:35.529
and a certain number of channels then
your filter will have a potential

00:05:35.529 --> 00:05:35.539
your filter will have a potential
 

00:05:35.539 --> 00:05:37.990
your filter will have a potential
different height different width but the

00:05:37.990 --> 00:05:38.000
different height different width but the
 

00:05:38.000 --> 00:05:40.450
different height different width but the
same number of channels and in theory is

00:05:40.450 --> 00:05:40.460
same number of channels and in theory is
 

00:05:40.460 --> 00:05:42.850
same number of channels and in theory is
possible to have a filter that maybe

00:05:42.850 --> 00:05:42.860
possible to have a filter that maybe
 

00:05:42.860 --> 00:05:45.339
possible to have a filter that maybe
only looks at the red Channel or maybe a

00:05:45.339 --> 00:05:45.349
only looks at the red Channel or maybe a
 

00:05:45.349 --> 00:05:47.409
only looks at the red Channel or maybe a
filter that looks at only the green

00:05:47.409 --> 00:05:47.419
filter that looks at only the green
 

00:05:47.419 --> 00:05:51.790
filter that looks at only the green
Channel and the blue Channel and once

00:05:51.790 --> 00:05:51.800
Channel and the blue Channel and once
 

00:05:51.800 --> 00:05:53.860
Channel and the blue Channel and once
again you notice that convolving a

00:05:53.860 --> 00:05:53.870
again you notice that convolving a
 

00:05:53.870 --> 00:05:56.610
again you notice that convolving a
volume a six by six by three

00:05:56.610 --> 00:05:56.620
volume a six by six by three
 

00:05:56.620 --> 00:06:00.189
volume a six by six by three
convolve with a three by three by three

00:06:00.189 --> 00:06:00.199
convolve with a three by three by three
 

00:06:00.199 --> 00:06:04.450
convolve with a three by three by three
that gives a four by four right to the

00:06:04.450 --> 00:06:04.460
that gives a four by four right to the
 

00:06:04.460 --> 00:06:09.520
that gives a four by four right to the
output now that you know how to convey

00:06:09.520 --> 00:06:09.530
output now that you know how to convey
 

00:06:09.530 --> 00:06:14.529
output now that you know how to convey
on volume does one loss idea they'll be

00:06:14.529 --> 00:06:14.539
on volume does one loss idea they'll be
 

00:06:14.539 --> 00:06:16.390
on volume does one loss idea they'll be
crucial for building convolutional

00:06:16.390 --> 00:06:16.400
crucial for building convolutional
 

00:06:16.400 --> 00:06:18.430
crucial for building convolutional
neural networks which is whether we

00:06:18.430 --> 00:06:18.440
neural networks which is whether we
 

00:06:18.440 --> 00:06:20.200
neural networks which is whether we
don't just wanted to take vertical edges

00:06:20.200 --> 00:06:20.210
don't just wanted to take vertical edges
 

00:06:20.210 --> 00:06:22.000
don't just wanted to take vertical edges
what do you want to detect vertical

00:06:22.000 --> 00:06:22.010
what do you want to detect vertical
 

00:06:22.010 --> 00:06:23.890
what do you want to detect vertical
edges and horizontal edges and maybe

00:06:23.890 --> 00:06:23.900
edges and horizontal edges and maybe
 

00:06:23.900 --> 00:06:26.080
edges and horizontal edges and maybe
45-degree edges and maybe seventy degree

00:06:26.080 --> 00:06:26.090
45-degree edges and maybe seventy degree
 

00:06:26.090 --> 00:06:28.390
45-degree edges and maybe seventy degree
edges as well but in other words what if

00:06:28.390 --> 00:06:28.400
edges as well but in other words what if
 

00:06:28.400 --> 00:06:30.760
edges as well but in other words what if
you want to use multiple filters at the

00:06:30.760 --> 00:06:30.770
you want to use multiple filters at the
 

00:06:30.770 --> 00:06:34.600
you want to use multiple filters at the
same time so here's the picture we had

00:06:34.600 --> 00:06:34.610
same time so here's the picture we had
 

00:06:34.610 --> 00:06:36.360
same time so here's the picture we had
from the previous line we had six

00:06:36.360 --> 00:06:36.370
from the previous line we had six
 

00:06:36.370 --> 00:06:37.980
from the previous line we had six
six-week involved with FIFA three or

00:06:37.980 --> 00:06:37.990
six-week involved with FIFA three or
 

00:06:37.990 --> 00:06:40.230
six-week involved with FIFA three or
three years four point four and maybe

00:06:40.230 --> 00:06:40.240
three years four point four and maybe
 

00:06:40.240 --> 00:06:42.629
three years four point four and maybe
this is a vertical edge detector or

00:06:42.629 --> 00:06:42.639
this is a vertical edge detector or
 

00:06:42.639 --> 00:06:44.460
this is a vertical edge detector or
maybe is learned you know to detect some

00:06:44.460 --> 00:06:44.470
maybe is learned you know to detect some
 

00:06:44.470 --> 00:06:49.200
maybe is learned you know to detect some
other feature now now maybe a second

00:06:49.200 --> 00:06:49.210
other feature now now maybe a second
 

00:06:49.210 --> 00:06:52.050
other feature now now maybe a second
filter may be denoted by this orange

00:06:52.050 --> 00:06:52.060
filter may be denoted by this orange
 

00:06:52.060 --> 00:06:57.840
filter may be denoted by this orange
color which could be a horizontal edge

00:06:57.840 --> 00:06:57.850
color which could be a horizontal edge
 

00:06:57.850 --> 00:07:00.110
color which could be a horizontal edge
detector

00:07:00.110 --> 00:07:00.120
detector
 

00:07:00.120 --> 00:07:02.730
detector
so maybe convolving it with the first

00:07:02.730 --> 00:07:02.740
so maybe convolving it with the first
 

00:07:02.740 --> 00:07:05.640
so maybe convolving it with the first
filter gives you this first you know

00:07:05.640 --> 00:07:05.650
filter gives you this first you know
 

00:07:05.650 --> 00:07:08.490
filter gives you this first you know
four by four output and convolving with

00:07:08.490 --> 00:07:08.500
four by four output and convolving with
 

00:07:08.500 --> 00:07:11.000
four by four output and convolving with
the second filter gives you a different

00:07:11.000 --> 00:07:11.010
the second filter gives you a different
 

00:07:11.010 --> 00:07:14.909
the second filter gives you a different
four by four output and what you can do

00:07:14.909 --> 00:07:14.919
four by four output and what you can do
 

00:07:14.919 --> 00:07:16.560
four by four output and what you can do
is then take these two four by four

00:07:16.560 --> 00:07:16.570
is then take these two four by four
 

00:07:16.570 --> 00:07:19.140
is then take these two four by four
outputs take this first one put it in

00:07:19.140 --> 00:07:19.150
outputs take this first one put it in
 

00:07:19.150 --> 00:07:21.900
outputs take this first one put it in
front and you can take the second filter

00:07:21.900 --> 00:07:21.910
front and you can take the second filter
 

00:07:21.910 --> 00:07:25.680
front and you can take the second filter
output and you draw here put in the back

00:07:25.680 --> 00:07:25.690
output and you draw here put in the back
 

00:07:25.690 --> 00:07:28.920
output and you draw here put in the back
as follows so that by stacking these two

00:07:28.920 --> 00:07:28.930
as follows so that by stacking these two
 

00:07:28.930 --> 00:07:32.370
as follows so that by stacking these two
together you end up with a four byte for

00:07:32.370 --> 00:07:32.380
together you end up with a four byte for
 

00:07:32.380 --> 00:07:37.110
together you end up with a four byte for
my two output volume right and you can

00:07:37.110 --> 00:07:37.120
my two output volume right and you can
 

00:07:37.120 --> 00:07:39.300
my two output volume right and you can
think of the volume as you grow this as

00:07:39.300 --> 00:07:39.310
think of the volume as you grow this as
 

00:07:39.310 --> 00:07:41.279
think of the volume as you grow this as
a box I guess it would maybe look like

00:07:41.279 --> 00:07:41.289
a box I guess it would maybe look like
 

00:07:41.289 --> 00:07:45.120
a box I guess it would maybe look like
this four by four by two output volume

00:07:45.120 --> 00:07:45.130
this four by four by two output volume
 

00:07:45.130 --> 00:07:48.120
this four by four by two output volume
which is the result of taking your six

00:07:48.120 --> 00:07:48.130
which is the result of taking your six
 

00:07:48.130 --> 00:07:50.370
which is the result of taking your six
by six line three image and convolving

00:07:50.370 --> 00:07:50.380
by six line three image and convolving
 

00:07:50.380 --> 00:07:53.279
by six line three image and convolving
it or applying to different three by

00:07:53.279 --> 00:07:53.289
it or applying to different three by
 

00:07:53.289 --> 00:07:56.040
it or applying to different three by
three filters to it resulting in two

00:07:56.040 --> 00:07:56.050
three filters to it resulting in two
 

00:07:56.050 --> 00:07:58.140
three filters to it resulting in two
four by four outputs then they get

00:07:58.140 --> 00:07:58.150
four by four outputs then they get
 

00:07:58.150 --> 00:08:00.560
four by four outputs then they get
snapped up to form a four by four by two

00:08:00.560 --> 00:08:00.570
snapped up to form a four by four by two
 

00:08:00.570 --> 00:08:04.020
snapped up to form a four by four by two
volume and the tomb here comes from the

00:08:04.020 --> 00:08:04.030
volume and the tomb here comes from the
 

00:08:04.030 --> 00:08:08.600
volume and the tomb here comes from the
fact that we use two different filters

00:08:08.600 --> 00:08:08.610
 

00:08:08.610 --> 00:08:14.270
so let's just summarize the dimensions

00:08:14.270 --> 00:08:14.280
so let's just summarize the dimensions
 

00:08:14.280 --> 00:08:18.930
so let's just summarize the dimensions
if you have a n by n by number of

00:08:18.930 --> 00:08:18.940
if you have a n by n by number of
 

00:08:18.940 --> 00:08:21.150
if you have a n by n by number of
channels input image so in the example

00:08:21.150 --> 00:08:21.160
channels input image so in the example
 

00:08:21.160 --> 00:08:23.430
channels input image so in the example
there's a six by six by three where n

00:08:23.430 --> 00:08:23.440
there's a six by six by three where n
 

00:08:23.440 --> 00:08:26.159
there's a six by six by three where n
subscript capital C is the number of

00:08:26.159 --> 00:08:26.169
subscript capital C is the number of
 

00:08:26.169 --> 00:08:28.409
subscript capital C is the number of
channels and you convolve that where

00:08:28.409 --> 00:08:28.419
channels and you convolve that where
 

00:08:28.419 --> 00:08:32.190
channels and you convolve that where
they F by F by and again this should be

00:08:32.190 --> 00:08:32.200
they F by F by and again this should be
 

00:08:32.200 --> 00:08:35.370
they F by F by and again this should be
the same NC so this was three by three

00:08:35.370 --> 00:08:35.380
the same NC so this was three by three
 

00:08:35.380 --> 00:08:42.920
the same NC so this was three by three
by three and by convention this and this

00:08:42.920 --> 00:08:42.930
by three and by convention this and this
 

00:08:42.930 --> 00:08:46.530
by three and by convention this and this
have to be the same number

00:08:46.530 --> 00:08:46.540
have to be the same number
 

00:08:46.540 --> 00:08:50.930
have to be the same number
then what you get is a n minus F plus 1

00:08:50.930 --> 00:08:50.940
then what you get is a n minus F plus 1
 

00:08:50.940 --> 00:08:56.970
then what you get is a n minus F plus 1
by n minus F plus 1by and then when you

00:08:56.970 --> 00:08:56.980
by n minus F plus 1by and then when you
 

00:08:56.980 --> 00:09:00.840
by n minus F plus 1by and then when you
use this NC Prime or really is really

00:09:00.840 --> 00:09:00.850
use this NC Prime or really is really
 

00:09:00.850 --> 00:09:03.090
use this NC Prime or really is really
and SIA the next layer but this is the

00:09:03.090 --> 00:09:03.100
and SIA the next layer but this is the
 

00:09:03.100 --> 00:09:07.259
and SIA the next layer but this is the
number of filters that you use so this

00:09:07.259 --> 00:09:07.269
number of filters that you use so this
 

00:09:07.269 --> 00:09:10.949
number of filters that you use so this
is in our example will be 4 by 4 by 2

00:09:10.949 --> 00:09:10.959
is in our example will be 4 by 4 by 2
 

00:09:10.959 --> 00:09:14.879
is in our example will be 4 by 4 by 2
and I wrote E is assuming that you use a

00:09:14.879 --> 00:09:14.889
and I wrote E is assuming that you use a
 

00:09:14.889 --> 00:09:17.550
and I wrote E is assuming that you use a
stride up one and no padding but did you

00:09:17.550 --> 00:09:17.560
stride up one and no padding but did you
 

00:09:17.560 --> 00:09:19.439
stride up one and no padding but did you
use a different stride or padding than

00:09:19.439 --> 00:09:19.449
use a different stride or padding than
 

00:09:19.449 --> 00:09:21.900
use a different stride or padding than
this n minus F plus 1 would be affected

00:09:21.900 --> 00:09:21.910
this n minus F plus 1 would be affected
 

00:09:21.910 --> 00:09:23.550
this n minus F plus 1 would be affected
in the usual way as we saw in the

00:09:23.550 --> 00:09:23.560
in the usual way as we saw in the
 

00:09:23.560 --> 00:09:27.120
in the usual way as we saw in the
previous videos so this idea of

00:09:27.120 --> 00:09:27.130
previous videos so this idea of
 

00:09:27.130 --> 00:09:30.059
previous videos so this idea of
convolution on volumes turns out to be

00:09:30.059 --> 00:09:30.069
convolution on volumes turns out to be
 

00:09:30.069 --> 00:09:32.730
convolution on volumes turns out to be
really powerful only a small part of it

00:09:32.730 --> 00:09:32.740
really powerful only a small part of it
 

00:09:32.740 --> 00:09:34.980
really powerful only a small part of it
is that you can now operate directly on

00:09:34.980 --> 00:09:34.990
is that you can now operate directly on
 

00:09:34.990 --> 00:09:38.910
is that you can now operate directly on
RGB images with 3 channels but even more

00:09:38.910 --> 00:09:38.920
RGB images with 3 channels but even more
 

00:09:38.920 --> 00:09:42.329
RGB images with 3 channels but even more
important is that you can now detect two

00:09:42.329 --> 00:09:42.339
important is that you can now detect two
 

00:09:42.339 --> 00:09:43.889
important is that you can now detect two
features like particular horizontal

00:09:43.889 --> 00:09:43.899
features like particular horizontal
 

00:09:43.899 --> 00:09:47.220
features like particular horizontal
agents or Tim or maybe 128 or maybe

00:09:47.220 --> 00:09:47.230
agents or Tim or maybe 128 or maybe
 

00:09:47.230 --> 00:09:49.290
agents or Tim or maybe 128 or maybe
several hundred different features and

00:09:49.290 --> 00:09:49.300
several hundred different features and
 

00:09:49.300 --> 00:09:52.949
several hundred different features and
the output will be then will then have a

00:09:52.949 --> 00:09:52.959
the output will be then will then have a
 

00:09:52.959 --> 00:09:55.199
the output will be then will then have a
number of channels equal to the number

00:09:55.199 --> 00:09:55.209
number of channels equal to the number
 

00:09:55.209 --> 00:09:59.819
number of channels equal to the number
of features you are detecting oh and as

00:09:59.819 --> 00:09:59.829
of features you are detecting oh and as
 

00:09:59.829 --> 00:10:02.250
of features you are detecting oh and as
a note in notation I've been using your

00:10:02.250 --> 00:10:02.260
a note in notation I've been using your
 

00:10:02.260 --> 00:10:05.400
a note in notation I've been using your
number of channels to denote this last

00:10:05.400 --> 00:10:05.410
number of channels to denote this last
 

00:10:05.410 --> 00:10:07.530
number of channels to denote this last
dimension in the literature people were

00:10:07.530 --> 00:10:07.540
dimension in the literature people were
 

00:10:07.540 --> 00:10:10.280
dimension in the literature people were
also often called as the depth of this

00:10:10.280 --> 00:10:10.290
also often called as the depth of this
 

00:10:10.290 --> 00:10:15.240
also often called as the depth of this
3d volume and both notations channels or

00:10:15.240 --> 00:10:15.250
3d volume and both notations channels or
 

00:10:15.250 --> 00:10:16.740
3d volume and both notations channels or
death are commonly used in the

00:10:16.740 --> 00:10:16.750
death are commonly used in the
 

00:10:16.750 --> 00:10:18.720
death are commonly used in the
literature but I find death more

00:10:18.720 --> 00:10:18.730
literature but I find death more
 

00:10:18.730 --> 00:10:20.939
literature but I find death more
confusing because we usually talk about

00:10:20.939 --> 00:10:20.949
confusing because we usually talk about
 

00:10:20.949 --> 00:10:23.160
confusing because we usually talk about
the death of a neural network as well so

00:10:23.160 --> 00:10:23.170
the death of a neural network as well so
 

00:10:23.170 --> 00:10:25.110
the death of a neural network as well so
I'm going to use the term channels in

00:10:25.110 --> 00:10:25.120
I'm going to use the term channels in
 

00:10:25.120 --> 00:10:28.199
I'm going to use the term channels in
these videos to refer to the size of

00:10:28.199 --> 00:10:28.209
these videos to refer to the size of
 

00:10:28.209 --> 00:10:32.370
these videos to refer to the size of
this 3rd dimension of these filters so

00:10:32.370 --> 00:10:32.380
this 3rd dimension of these filters so
 

00:10:32.380 --> 00:10:34.040
this 3rd dimension of these filters so
now that you know how to implement

00:10:34.040 --> 00:10:34.050
now that you know how to implement
 

00:10:34.050 --> 00:10:37.259
now that you know how to implement
convolutions over volumes you now are

00:10:37.259 --> 00:10:37.269
convolutions over volumes you now are
 

00:10:37.269 --> 00:10:39.629
convolutions over volumes you now are
ready to implement one layer of a

00:10:39.629 --> 00:10:39.639
ready to implement one layer of a
 

00:10:39.639 --> 00:10:42.030
ready to implement one layer of a
convolutional neural network let's see

00:10:42.030 --> 00:10:42.040
convolutional neural network let's see
 

00:10:42.040 --> 00:10:45.540
convolutional neural network let's see
how to do that in the next video

