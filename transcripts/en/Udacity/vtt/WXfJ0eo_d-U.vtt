WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:02.850
Now it's your turn to build 
the temperature unit setting.

00:00:02.850 --> 00:00:05.450
This will bring together a lot 
of the concepts that you've learned

00:00:05.450 --> 00:00:08.790
and will take some time to implement, 
but we think you're ready for it.

00:00:08.790 --> 00:00:11.140
Modify the app so that 
the right temperature units

00:00:11.140 --> 00:00:13.840
are displayed to the user. 
Use the assumption

00:00:13.840 --> 00:00:16.023
that we're syncing 
metric data from the server.

00:00:16.023 --> 00:00:18.786
Eventually, we'll have a database 
on the device and we don't want

00:00:18.786 --> 00:00:21.380
a mix of Fahrenheit 
and Celsius data in there.

00:00:21.380 --> 00:00:24.690
Hence, we'll stay consistent 
by getting metric data from the server.

00:00:24.890 --> 00:00:27.680
And then we'll convert 
on the fly to the preferred units

00:00:27.840 --> 00:00:30.960
when we update the UI. 
After you make these changes,

00:00:30.960 --> 00:00:33.230
I'll show you what it 
looks like on the device.

00:00:33.300 --> 00:00:36.820
If you go to settings, you'll see 
the temperature units preference.

00:00:37.220 --> 00:00:40.170
If you tap on that, 
you see a dialog with two options.

00:00:40.750 --> 00:00:43.070
If you switch to imperial 
and then you go back

00:00:43.070 --> 00:00:45.810
to the forecast list, then you see
that all the temperatures

00:00:45.810 --> 00:00:49.680
now are in Fahrenheit. 
Once it works, answer this question.

00:00:49.780 --> 00:00:52.030
Which subclass of preference did you use?

