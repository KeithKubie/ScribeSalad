WEBVTT
Kind: captions
Language: en

00:00:00.340 --> 00:00:06.110
Some other definitions we want to, to pull from during this lesson are, one from

00:00:06.110 --> 00:00:10.300
Dwayne Perry and Alex Wolf, that involves elements, forms and rationale.

00:00:10.300 --> 00:00:13.830
Rationale being the set of dis, the, the decisions and

00:00:13.830 --> 00:00:17.620
reasons for making them, that the architects have agreed on.

00:00:18.620 --> 00:00:22.070
Obviously, architecture involves the fundamental organization,

00:00:22.070 --> 00:00:23.580
components and relationships.

00:00:23.580 --> 00:00:25.940
This comes from the IEEE definition.

00:00:25.940 --> 00:00:30.930
Another element from Verhoff is the determination of what

00:00:30.930 --> 00:00:33.940
makes up the components here based upon

00:00:33.940 --> 00:00:37.260
hiding away those things which are hardest to change.

00:00:37.260 --> 00:00:40.930
That's a little bit different way of thinking about a system.

00:00:40.930 --> 00:00:43.860
But if you imagine what the system is going to be

00:00:43.860 --> 00:00:49.750
like several years after its initial release, it's going to change.

00:00:49.750 --> 00:00:56.000
And those changes have the potential of breaking the system in unexpected ways.

00:00:56.000 --> 00:01:02.290
So by hiding away those tough decisions

00:01:02.290 --> 00:01:06.410
we can help reduce the overall maintenance cost downstream.

00:01:06.410 --> 00:01:10.190
And then for the rest of this lesson, we're going to be guided by the Garlan and

00:01:10.190 --> 00:01:14.540
Shaw paper which is listed on the class resource page, and they talk about

00:01:14.540 --> 00:01:18.970
architecture in terms of its components, its connectors, and its configurations.

00:01:20.020 --> 00:01:22.690
What do they mean by these three terms?

00:01:22.690 --> 00:01:28.280
Well, a component is a computational or a data element, plus its interfaces,

00:01:28.280 --> 00:01:31.150
which they call ports, interfaces to the rest of the system.

00:01:32.240 --> 00:01:37.620
The interfaces express what the component requires or

00:01:37.620 --> 00:01:41.020
needs from the rest of the system, and what it provides.

00:01:41.020 --> 00:01:43.342
Recall from the UML component diagrams,

00:01:43.342 --> 00:01:47.250
this is exactly what the interfaces, represent.

00:01:47.250 --> 00:01:52.170
A connector is a, essentially a communication protocol among components,

00:01:52.170 --> 00:01:55.360
although it may have code associated with it for

00:01:55.360 --> 00:01:57.608
enforcing that particular protocol.

00:01:57.608 --> 00:02:02.920
It is its, its major element of defining the character is that protocol.

00:02:04.360 --> 00:02:07.530
And then configuration is how you put those pieces together.

00:02:07.530 --> 00:02:09.580
You plug a connector into a component.

00:02:09.580 --> 00:02:13.266
You plug the other end of the connector into another component if it's a binary

00:02:13.266 --> 00:02:19.160
connector, and the ports then can talk to each other using the connector.

00:02:19.160 --> 00:02:23.500
That overall topology for the pieces is called a configuration.

