WEBVTT
Kind: captions
Language: en

00:00:07.510 --> 00:00:09.220
MALE SPEAKER: Shangai
GDG is a very

00:00:09.220 --> 00:00:11.300
interesting developer community.

00:00:11.300 --> 00:00:12.140
FEMALE SPEAKER: I'm
glad somebody

00:00:12.140 --> 00:00:13.170
has asked this question.

00:00:13.170 --> 00:00:14.590
MALE SPEAKER: This is where
the magic happens.

00:00:14.590 --> 00:00:16.145
FEMALE SPEAKER: This is
primarily a question and

00:00:16.145 --> 00:00:16.780
answer show.

00:00:16.780 --> 00:00:18.750
So if any of you out there would
like to ask questions.

00:00:23.860 --> 00:00:26.470
JJ BEHRENS: Hey, this
is JJ and Seth Ladd.

00:00:26.470 --> 00:00:28.750
And this is Dartisans.

00:00:28.750 --> 00:00:30.820
SETH LADD: And good indeed,
Dartisans not Dartisians.

00:00:30.820 --> 00:00:32.400
JJ BEHRENS: Yeah, I'm so
embarrassed about that.

00:00:32.400 --> 00:00:34.570
I don't know how many times
I've misspelled it.

00:00:34.570 --> 00:00:37.000
I'm glad we finally decided
it's Dartisans, not

00:00:37.000 --> 00:00:37.910
Dartisians.

00:00:37.910 --> 00:00:38.880
SETH LADD: It's all good.

00:00:38.880 --> 00:00:39.500
Welcome, everyone.

00:00:39.500 --> 00:00:40.720
Good morning.

00:00:40.720 --> 00:00:42.300
Good evening, to wherever
you are.

00:00:42.300 --> 00:00:44.610
JJ BEHRENS: Dude, it is flipping
early out here.

00:00:44.610 --> 00:00:45.240
SETH LADD: It's OK.

00:00:45.240 --> 00:00:46.170
I like to get started earlier.

00:00:46.170 --> 00:00:48.060
We've got a lot of stuff to
talk about with Dart.

00:00:48.060 --> 00:00:51.750
And a lot of stuff has happened
actually since the

00:00:51.750 --> 00:00:53.180
last show we had, which
was really cool.

00:00:53.180 --> 00:00:54.460
Thank to you for hosting
that, JJ.

00:00:54.460 --> 00:00:55.670
JJ BEHRENS: It was
pretty awesome.

00:00:55.670 --> 00:00:56.730
This is Episode 10.

00:00:56.730 --> 00:00:59.890
We have special guests from
JetBrains to talk about their

00:00:59.890 --> 00:01:03.590
awesome Dart plugin for
IntelliJ and WebStorm.

00:01:03.590 --> 00:01:05.239
Have you used the editor?

00:01:05.239 --> 00:01:07.250
JJ BEHRENS: Yeah, I started
out using it this morning.

00:01:07.250 --> 00:01:08.910
And I'm a big IntelliJ fan.

00:01:08.910 --> 00:01:09.280
SETH LADD: Already?

00:01:09.280 --> 00:01:10.660
In 10 minutes, it's that good.

00:01:10.660 --> 00:01:11.990
JJ BEHRENS: I'm excited
about this.

00:01:11.990 --> 00:01:14.110
And these guys are from
Saint Petersburg.

00:01:14.110 --> 00:01:17.430
So anyone in Saint Petersburg
who's watching this, like

00:01:17.430 --> 00:01:19.540
major Brownie points for
staying up so late.

00:01:19.540 --> 00:01:21.900
And then anyone out from
California watching this,

00:01:21.900 --> 00:01:23.860
major Brownie points for
being up so early.

00:01:23.860 --> 00:01:24.450
SETH LADD: Yes, awesome.

00:01:24.450 --> 00:01:25.880
But we have a lot of
stuff to cover.

00:01:25.880 --> 00:01:29.340
So let's go into the news real
quick, before we start

00:01:29.340 --> 00:01:31.230
chatting with our guests.

00:01:31.230 --> 00:01:32.380
A lot has been happening.

00:01:32.380 --> 00:01:35.410
So we'll see what catches
JJ's ear here.

00:01:35.410 --> 00:01:39.610
I posted how to run Dart
server apps on Heroku.

00:01:39.610 --> 00:01:41.430
And you can find this
on my blog.

00:01:41.430 --> 00:01:42.460
That's sethladd.com

00:01:42.460 --> 00:01:45.020
Now this is cool, because I know
a lot of people know that

00:01:45.020 --> 00:01:47.610
you can run Dart apps, on the
client, compiling it to

00:01:47.610 --> 00:01:48.540
JavaScript.

00:01:48.540 --> 00:01:50.810
But did you know that you
can run Dart just on the

00:01:50.810 --> 00:01:52.100
standalone VM on a server?

00:01:52.100 --> 00:01:52.360
JJ BEHRENS: Yep.

00:01:52.360 --> 00:01:53.090
Absolutely.

00:01:53.090 --> 00:01:56.010
And I'm psyched about this,
because since I had a

00:01:56.010 --> 00:01:59.320
background doing Ruby on Rails,
as did you, I'm sure

00:01:59.320 --> 00:02:01.010
both of us love Heroku.

00:02:01.010 --> 00:02:02.720
Heroku is good stuff.

00:02:02.720 --> 00:02:04.800
SETH LADD: And so now you can
get your Dart apps into the

00:02:04.800 --> 00:02:07.650
cloud quite easily and start
playing around there.

00:02:07.650 --> 00:02:09.550
So in Dart, it is possible.

00:02:09.550 --> 00:02:10.229
Very cool.

00:02:10.229 --> 00:02:12.190
JJ BEHRENS: One day, it'll
be App Engine.

00:02:12.190 --> 00:02:13.120
SETH LADD: We can only hope.

00:02:13.120 --> 00:02:14.160
JJ BEHRENS: We can only hope.

00:02:14.160 --> 00:02:16.790
SETH LADD: So when was the
last time, JJ, that you

00:02:16.790 --> 00:02:20.870
actually sent XML data
via XML HTTP request?

00:02:20.870 --> 00:02:21.890
JJ BEHRENS: What's XML?

00:02:21.890 --> 00:02:22.920
SETH LADD: Exactly.

00:02:22.920 --> 00:02:26.150
And so the Dart team in their
continued efforts to make

00:02:26.150 --> 00:02:29.340
programming the browser easier
have been cleaning up names.

00:02:29.340 --> 00:02:30.990
And one of the names that
they've recently cleaned up,

00:02:30.990 --> 00:02:35.540
or the patch is going to land
very shortly, is changing XML

00:02:35.540 --> 00:02:38.580
HTTP requests to just
HTTP request.

00:02:38.580 --> 00:02:39.150
How does that make you feel?

00:02:39.150 --> 00:02:42.400
JJ BEHRENS: That really makes
me feel good inside, because

00:02:42.400 --> 00:02:45.920
every time I saw XML HTTP
requests, it drove me nuts.

00:02:45.920 --> 00:02:49.550
Because one of them is camel
caps and the other one isn't.

00:02:49.550 --> 00:02:52.980
And the internal inconsistency
just makes me

00:02:52.980 --> 00:02:54.770
feel uneasy, really.

00:02:54.770 --> 00:02:56.920
SETH LADD: Well, I think it's
just a holdover, a legacy

00:02:56.920 --> 00:02:58.920
component, from the
web platform.

00:02:58.920 --> 00:03:00.650
And so it's nice to see us
cleaning up these names.

00:03:00.650 --> 00:03:03.250
The other cool fact about this
is that it's one of the most

00:03:03.250 --> 00:03:04.620
highly starred feature
requests--

00:03:04.620 --> 00:03:05.690
JJ BEHRENS: Is that right?

00:03:05.690 --> 00:03:09.620
SETH LADD: --in our HTML
component in the bug tracker.

00:03:09.620 --> 00:03:11.300
JJ BEHRENS: I'm glad we
got the important

00:03:11.300 --> 00:03:12.290
things settled first.

00:03:12.290 --> 00:03:12.760
SETH LADD: No, this is good.

00:03:12.760 --> 00:03:15.590
I love handling the top feature

00:03:15.590 --> 00:03:16.610
requests from the community.

00:03:16.610 --> 00:03:19.040
And so keep voting and keep
starring for issues.

00:03:19.040 --> 00:03:21.410
It really does make
a difference.

00:03:21.410 --> 00:03:22.750
JJ BEHRENS: Absolutely.

00:03:22.750 --> 00:03:24.995
SETH LADD: Kevin Moore, a Dart
contributor-- he's actually in

00:03:24.995 --> 00:03:27.750
the author's file and also has
published some really cool

00:03:27.750 --> 00:03:29.210
open source libraries--

00:03:29.210 --> 00:03:31.990
has begun working on a
Minesweeper clone in Dart,

00:03:31.990 --> 00:03:33.660
which is very cool,
because he is

00:03:33.660 --> 00:03:35.750
publishing a developer diary.

00:03:35.750 --> 00:03:38.220
JJ BEHRENS: I heard that it's
going to be more fun, because

00:03:38.220 --> 00:03:39.690
it's HTML5.

00:03:39.690 --> 00:03:42.370
I mean, that's going to just
make it more playable.

00:03:42.370 --> 00:03:44.140
SETH LADD: Well, 16% more
playable, at least.

00:03:44.140 --> 00:03:46.400
We can measure these things.

00:03:46.400 --> 00:03:47.830
And so, see, you can follow
along with how

00:03:47.830 --> 00:03:48.740
he's doing, his progress.

00:03:48.740 --> 00:03:51.010
It's all open source, and he
blogs about what works and

00:03:51.010 --> 00:03:51.520
what didn't.

00:03:51.520 --> 00:03:54.360
It's very educational.

00:03:54.360 --> 00:03:56.780
Speaking about games, Danny
Hendrix has released a

00:03:56.780 --> 00:03:59.270
significant update
to his 2D game.

00:03:59.270 --> 00:04:01.520
And I don't know too many
details about this.

00:04:01.520 --> 00:04:03.190
But he posted a screenshot,
and it's really cool.

00:04:03.190 --> 00:04:04.650
It gives me the warm
fuzzy about the old

00:04:04.650 --> 00:04:05.830
8-bit console games.

00:04:05.830 --> 00:04:08.370
JJ BEHRENS: I was thinking about
the fact that I have a

00:04:08.370 --> 00:04:11.030
64-bit machine, but all
of the fun bits are in

00:04:11.030 --> 00:04:11.790
the lowest 8 bits.

00:04:11.790 --> 00:04:12.520
SETH LADD: That's good.

00:04:12.520 --> 00:04:14.230
Well, he's going to keep
working on that.

00:04:14.230 --> 00:04:16.570
And you can follow along
with that on Google+.

00:04:16.570 --> 00:04:17.950
Now, this is really cool.

00:04:17.950 --> 00:04:19.329
So Dockspawn--

00:04:19.329 --> 00:04:21.769
S-P-A-W-N spawn--

00:04:21.769 --> 00:04:25.470
is a web-based dock layout
engine that aids in creating

00:04:25.470 --> 00:04:28.790
flexible user interfaces by
enabling panels to be docked

00:04:28.790 --> 00:04:31.330
on the screen similar to
Visual Studio IDE.

00:04:31.330 --> 00:04:32.790
Now that's their description.

00:04:32.790 --> 00:04:33.880
But I checked this out.

00:04:33.880 --> 00:04:34.630
And this is really cool.

00:04:34.630 --> 00:04:37.130
Because it looks like
a really appy app.

00:04:37.130 --> 00:04:40.242
And the kicker is Dockspawn
is built with Dart.

00:04:40.242 --> 00:04:41.870
JJ BEHRENS: That sounds
really awesome.

00:04:41.870 --> 00:04:45.760
But I got nothing funny
to say about it.

00:04:45.760 --> 00:04:48.400
SETH LADD: I like to see people
use Dart to really

00:04:48.400 --> 00:04:50.550
build those kind of apps that
you would have seen maybe on

00:04:50.550 --> 00:04:53.220
native mobile or desktop and
really bring the app

00:04:53.220 --> 00:04:54.400
back into Web App.

00:04:54.400 --> 00:04:57.370
So I'm very excited to
see what Dockspawn is

00:04:57.370 --> 00:04:59.470
going to put out.

00:04:59.470 --> 00:05:01.810
We've seen Dart be really
interesting to a lot of Java

00:05:01.810 --> 00:05:02.830
developers.

00:05:02.830 --> 00:05:04.480
And Daniel Zwicker--

00:05:04.480 --> 00:05:07.520
I hope I said that right--
released his Java Maven

00:05:07.520 --> 00:05:09.180
plug-in for Dart.

00:05:09.180 --> 00:05:09.910
This is awesome.

00:05:09.910 --> 00:05:13.550
So now you can integrate Dart to
JS into your Maven workflow

00:05:13.550 --> 00:05:16.700
and integrate, as a
first class, Dart

00:05:16.700 --> 00:05:17.920
into your Java projects.

00:05:17.920 --> 00:05:19.630
JJ BEHRENS: So for all those
people out there wondering

00:05:19.630 --> 00:05:21.820
whether they should use Ant or
Maven, the answer is Maven.

00:05:21.820 --> 00:05:23.470
SETH LADD: It's Maven now,
if you want to be a good

00:05:23.470 --> 00:05:25.490
Dartisian-- uh, I almost
said Dartisian.

00:05:25.490 --> 00:05:26.610
JJ BEHRENS: Dartisans.

00:05:26.610 --> 00:05:26.900
SETH LADD: See?

00:05:26.900 --> 00:05:28.420
Dartisans, that's right.

00:05:28.420 --> 00:05:31.570
Moving back over to the Dart
project, Gilad Bracha, our

00:05:31.570 --> 00:05:35.560
language spec author and guest
and friend of the show, has

00:05:35.560 --> 00:05:38.030
published Dart's modest
proposal for Mixins.

00:05:38.030 --> 00:05:39.320
JJ BEHRENS: I love
me some Mixins.

00:05:39.320 --> 00:05:39.720
SETH LADD: It's good.

00:05:39.720 --> 00:05:42.070
You can find this on
news@dartlang.org.

00:05:42.070 --> 00:05:46.090
And my impression is that it's
not meant to be the last thing

00:05:46.090 --> 00:05:47.200
we see about Mixins.

00:05:47.200 --> 00:05:50.660
But it is meant to sort of get
Dart's feet wet with Mixins,

00:05:50.660 --> 00:05:54.260
and something that's a little
bit more tangible, and

00:05:54.260 --> 00:05:56.860
something we can start talking
about a little more concrete

00:05:56.860 --> 00:05:58.360
for the post M1 world.

00:05:58.360 --> 00:05:59.110
Now, have you read
this spec at all?

00:05:59.110 --> 00:06:00.210
JJ BEHRENS: I haven't read it.

00:06:00.210 --> 00:06:01.860
I was planning on reading
it later today.

00:06:01.860 --> 00:06:04.810
But I was thinking about the
fact that you have C++ with

00:06:04.810 --> 00:06:07.800
multiple inheritance, and you
have Ruby with Mixins and

00:06:07.800 --> 00:06:09.350
Small Talk with Mixins.

00:06:09.350 --> 00:06:12.230
And then you have traits from
the Scala background.

00:06:12.230 --> 00:06:14.050
These are all overlapping
things.

00:06:14.050 --> 00:06:16.360
And so I think we're going have
to get Gilad on the show

00:06:16.360 --> 00:06:19.420
and talk about why Mixins
why not Traits?

00:06:19.420 --> 00:06:22.250
What is the small difference
between those two different

00:06:22.250 --> 00:06:26.540
features that caused us to
pick the term Mixins?

00:06:26.540 --> 00:06:29.170
And maybe it's because of our
Small Talk background.

00:06:29.170 --> 00:06:30.550
SETH LADD: Yeah.

00:06:30.550 --> 00:06:32.520
The Dart editor team,
now, this is great.

00:06:32.520 --> 00:06:34.500
This is a highly, highly
requested feature.

00:06:34.500 --> 00:06:37.110
It has released their Dart
plug-in for Eclipse.

00:06:37.110 --> 00:06:37.680
JJ BEHRENS: That's awesome.

00:06:37.680 --> 00:06:39.030
SETH LADD: So you might
be aware that--

00:06:39.030 --> 00:06:40.280
JJ BEHRENS: Not really.

00:06:41.800 --> 00:06:43.760
We have the IntelliJ
guys right there.

00:06:43.760 --> 00:06:44.030
SETH LADD: That's great.

00:06:44.030 --> 00:06:47.480
We're going to talk to them
in just a minute.

00:06:47.480 --> 00:06:49.600
We publish the Dart Editor.

00:06:49.600 --> 00:06:51.870
And this is a standalone editing
experience, everything

00:06:51.870 --> 00:06:52.950
you need out of the box.

00:06:52.950 --> 00:06:54.530
But a lot of people like
their Eclipse.

00:06:54.530 --> 00:06:55.710
They like their plug-ins.

00:06:55.710 --> 00:06:58.680
They like being able to plug-in
the Git workflow and

00:06:58.680 --> 00:07:01.310
save their HTML5 syntax
highlighter, whatever it is.

00:07:01.310 --> 00:07:04.820
They've been asking, how do I
get Dart over into that world?

00:07:04.820 --> 00:07:06.280
And you can try that out now.

00:07:06.280 --> 00:07:09.760
And you get auto update, the
regular old plug-in install.

00:07:09.760 --> 00:07:12.120
JJ BEHRENS: I'm happy to tell
people that it now works.

00:07:12.120 --> 00:07:13.870
Because I've been asked
this many times.

00:07:16.565 --> 00:07:18.970
SETH LADD: And so this
is very cool.

00:07:18.970 --> 00:07:19.900
Have you heard about
Web Components?

00:07:19.900 --> 00:07:21.530
JJ BEHRENS: I have heard
about Web Components.

00:07:21.530 --> 00:07:22.910
SETH LADD: What do
they mean to you?

00:07:22.910 --> 00:07:26.660
JJ BEHRENS: I think that Web
Components are finally

00:07:26.660 --> 00:07:31.040
building something at the
browser level that everyone's

00:07:31.040 --> 00:07:33.980
been doing at a framework level
for a really long time.

00:07:33.980 --> 00:07:37.420
And because of that, I think
we're going to see better

00:07:37.420 --> 00:07:39.820
integration between multiple
frameworks.

00:07:39.820 --> 00:07:42.050
SETH LADD: Indeed, in fact,
as a developer in other

00:07:42.050 --> 00:07:44.580
platforms, when I came to the
web, the first thing that

00:07:44.580 --> 00:07:47.230
struck me was I couldn't
subclass button.

00:07:47.230 --> 00:07:49.510
I found that totally bizarre.

00:07:49.510 --> 00:07:50.670
JJ BEHRENS: That's
unacceptable.

00:07:50.670 --> 00:07:52.010
SETH LADD: So Web Components
will allow

00:07:52.010 --> 00:07:53.080
me to subclass button.

00:07:53.080 --> 00:07:56.210
And there's a whole bunch
of other aspects to Web

00:07:56.210 --> 00:07:56.970
Components out there.

00:07:56.970 --> 00:07:58.915
JJ BEHRENS: Is that the whole
reason GWT got started, just

00:07:58.915 --> 00:08:00.116
to subclass buttons?

00:08:00.116 --> 00:08:01.595
SETH LADD: I don't know.

00:08:01.595 --> 00:08:02.490
JJ BEHRENS: I suspect so.

00:08:02.490 --> 00:08:04.260
SETH LADD: So we highly
encourage you, if you are a

00:08:04.260 --> 00:08:06.180
cutting edge web developer and
want to know what's coming

00:08:06.180 --> 00:08:08.740
down for the future of web
development, check out Web

00:08:08.740 --> 00:08:09.800
Components.

00:08:09.800 --> 00:08:12.840
And they really do have the
potential to improve

00:08:12.840 --> 00:08:14.910
client-side web engineering.

00:08:14.910 --> 00:08:19.600
On that note, you can see one
of the ways Dart might play

00:08:19.600 --> 00:08:23.710
well with Web Components in the
future by our GitHub Repo

00:08:23.710 --> 00:08:24.770
Dart Web Components.

00:08:24.770 --> 00:08:27.570
And you can see some examples
there and some early R&amp;D about

00:08:27.570 --> 00:08:29.040
how you can actually build
and consume Web

00:08:29.040 --> 00:08:29.770
Components in Dart.

00:08:29.770 --> 00:08:32.490
JJ BEHRENS: That's
exciting stuff.

00:08:32.490 --> 00:08:34.809
SETH LADD: The last bit of news
I have here is-- speaking

00:08:34.809 --> 00:08:36.240
of GitHub--

00:08:36.240 --> 00:08:40.330
the www site for dartlang.org
is now posted to GitHub.

00:08:40.330 --> 00:08:44.169
And we've had some requests to
help with fixing typos or bugs

00:08:44.169 --> 00:08:46.640
or contributing articles
to the main site.

00:08:46.640 --> 00:08:47.480
We love it.

00:08:47.480 --> 00:08:48.580
We hope it happens.

00:08:48.580 --> 00:08:50.770
Since now we're on GitHub,
so you can contribute.

00:08:50.770 --> 00:08:52.950
It's just a pull request away.

00:08:52.950 --> 00:08:55.830
You can find the www site plus
a whole bunch of other great

00:08:55.830 --> 00:08:58.420
Dart sub projects as
well on GitHub.

00:08:58.420 --> 00:09:00.520
So I highly encourage everyone
to get involved.

00:09:00.520 --> 00:09:02.160
And we'll see you on GitHub.

00:09:02.160 --> 00:09:04.910
JJ BEHRENS: Yeah.

00:09:04.910 --> 00:09:08.570
A lot of companies ask you for
your GitHub account these days

00:09:08.570 --> 00:09:10.510
to see your contributions
to open source.

00:09:10.510 --> 00:09:12.970
And I've always found that one
of the best ways to get

00:09:12.970 --> 00:09:15.550
started contributing to an
open-source project is finding

00:09:15.550 --> 00:09:18.325
grammar typos in the
documentation and submitting

00:09:18.325 --> 00:09:19.930
pull requests.

00:09:19.930 --> 00:09:22.180
And so now I'm excited,
because I won't be

00:09:22.180 --> 00:09:23.083
the one doing it.

00:09:23.083 --> 00:09:24.080
You guys out there
will be doing it.

00:09:24.080 --> 00:09:25.430
SETH LADD: You can approve
their pull requests.

00:09:25.430 --> 00:09:27.170
That's exactly the low-hanging
fruit we

00:09:27.170 --> 00:09:28.320
want to try to encourage.

00:09:28.320 --> 00:09:30.880
And so help out, and we'll
be there to help

00:09:30.880 --> 00:09:32.290
you along the way.

00:09:32.290 --> 00:09:34.110
Well, that's the news
that I had today.

00:09:34.110 --> 00:09:35.170
JJ BEHRENS: That was
a lot of news.

00:09:35.170 --> 00:09:37.250
But now we get to go talk
to the JetBrains guys.

00:09:37.250 --> 00:09:38.200
SETH LADD: This is awesome.

00:09:38.200 --> 00:09:40.610
So let's flip over to Hangout
and welcome our special

00:09:40.610 --> 00:09:43.610
guests, all the way from
Russia, from JetBrains.

00:09:43.610 --> 00:09:46.136
Hello guys, welcome.

00:09:46.136 --> 00:09:46.548
KIRILL: Hello.

00:09:46.548 --> 00:09:46.960
FEDOR: Hello.

00:09:46.960 --> 00:09:50.990
JJ BEHRENS: So you guys want
to introduce yourselves.

00:09:50.990 --> 00:09:51.870
KIRILL: Yep.

00:09:51.870 --> 00:09:53.450
Let me start.

00:09:53.450 --> 00:09:54.770
My name is Kirill.

00:09:54.770 --> 00:09:56.920
I work for JetBrains
in IntelliJ IDEA

00:09:56.920 --> 00:09:59.680
and WebStorm teams.

00:09:59.680 --> 00:10:04.420
My focus is to coordinate the
activity that goes for

00:10:04.420 --> 00:10:07.410
[INAUDIBLE] development,
JavaScripts, and all around.

00:10:07.410 --> 00:10:13.260
And I also contribute to Flash
and Flex parts of IntelliJ and

00:10:13.260 --> 00:10:17.440
in the core of [INAUDIBLE].

00:10:17.440 --> 00:10:19.900
FEDOR: And my name is Fedor.

00:10:19.900 --> 00:10:22.480
I work at JetBrains, too.

00:10:22.480 --> 00:10:27.010
And I'm developing the
Dart plug-in for

00:10:27.010 --> 00:10:29.100
IntelliJ and WebStorm.

00:10:29.100 --> 00:10:36.460
Also, I'm developing a Hex
plug-in for IntelliJ and some

00:10:36.460 --> 00:10:38.550
other plug-ins.

00:10:38.550 --> 00:10:41.160
JJ BEHRENS: So you guys want
to show us what you've got?

00:10:41.160 --> 00:10:43.230
SETH LADD: First off,
thank you for

00:10:43.230 --> 00:10:44.520
building a Dart plug-in.

00:10:44.520 --> 00:10:45.730
This is so awesome.

00:10:45.730 --> 00:10:48.880
And I know that almost right
when the project launched,

00:10:48.880 --> 00:10:51.010
everyone's like, well, when is
IntelliJ going to get here?

00:10:51.010 --> 00:10:54.170
And so it's really, really cool
that you guys are helping

00:10:54.170 --> 00:10:56.340
out the community and building
such a great

00:10:56.340 --> 00:10:57.590
product with Dart support.

00:10:57.590 --> 00:10:58.360
So thank you for that.

00:10:58.360 --> 00:10:59.640
And I think you're right.

00:10:59.640 --> 00:11:02.010
I think if you guys can do a
demo for everyone, that would

00:11:02.010 --> 00:11:02.960
be fantastic.

00:11:02.960 --> 00:11:06.050
Show us what we can do.

00:11:06.050 --> 00:11:08.350
KIRILL: Let me probably
spend some minutes

00:11:08.350 --> 00:11:09.600
on introducing IntelliJ.

00:11:12.300 --> 00:11:15.470
Or if you think everyone
knows what is that?

00:11:15.470 --> 00:11:16.370
SETH LADD: I think most
people know, but

00:11:16.370 --> 00:11:17.720
go ahead and explain.

00:11:17.720 --> 00:11:21.090
I mean, we hear words like
PhpStorm and WebStorm and

00:11:21.090 --> 00:11:22.400
IntelliJ and JetBrains.

00:11:22.400 --> 00:11:25.330
So certainly, yeah, try to put
this in context for us.

00:11:25.330 --> 00:11:29.070
JJ BEHRENS: Maybe they want to
be modest, so let me brag for

00:11:29.070 --> 00:11:29.940
you guys a little bit.

00:11:29.940 --> 00:11:33.950
I went to Pi-Con a couple years
ago, and we had an IDEs

00:11:33.950 --> 00:11:37.000
panel, where we had all the
different Python IDEs.

00:11:37.000 --> 00:11:41.090
And the JetBrains guys were
there to represent PyCharm.

00:11:41.090 --> 00:11:44.790
And so you had the PyDev guys,
and you had PyCharm, and you

00:11:44.790 --> 00:11:49.930
had Wing IDE, and the EMACs
guys, and so forth.

00:11:49.930 --> 00:11:53.010
And all the guys were showing
the coolest features.

00:11:53.010 --> 00:11:56.010
And PyCharm just cleaned up.

00:11:56.010 --> 00:11:57.030
I mean, it was just
ridiculous.

00:11:57.030 --> 00:11:59.600
It was like, yeah, we have
all those features.

00:11:59.600 --> 00:12:01.190
And all these features
you haven't even

00:12:01.190 --> 00:12:02.160
thought about yet.

00:12:02.160 --> 00:12:04.290
It was kind of ridiculous.

00:12:04.290 --> 00:12:05.270
SETH LADD: Now, I'm excited.

00:12:05.270 --> 00:12:07.730
I want to see how this works.

00:12:07.730 --> 00:12:10.860
KIRILL: And the question I get,
from time to time, is how

00:12:10.860 --> 00:12:15.050
does IntelliJ correspond to the
WebStorm and PyCharm and

00:12:15.050 --> 00:12:16.890
all the products on
the team platform?

00:12:16.890 --> 00:12:20.880
So basically, IntelliJ is like
a super set of all the

00:12:20.880 --> 00:12:22.770
functionality that we have.

00:12:22.770 --> 00:12:25.880
It's like a platform with
more than 100 plug-ins.

00:12:25.880 --> 00:12:28.490
And for instance, WebStorm,
which is focused on web

00:12:28.490 --> 00:12:31.360
development, it's
like 35 plug-ins

00:12:31.360 --> 00:12:32.260
are bundled by default.

00:12:32.260 --> 00:12:36.295
The same for PyCharm and for
RubyMine, which is for web

00:12:36.295 --> 00:12:37.440
developers.

00:12:37.440 --> 00:12:42.590
And so WebStorm is focused on
that, on JavaScript, on CSS,

00:12:42.590 --> 00:12:45.280
on Node and CoffeeScript,
on stuff like this.

00:12:45.280 --> 00:12:49.230
And our plug-in is available for
IntelliJ and for WebStorm

00:12:49.230 --> 00:12:53.240
and other products as well.

00:12:53.240 --> 00:12:57.800
So no matter what you have, what
products have you got,

00:12:57.800 --> 00:13:01.890
you will get all of those
functionality with you.

00:13:01.890 --> 00:13:06.480
JJ BEHRENS: But you guys don't
support COBOL though, right?

00:13:06.480 --> 00:13:08.430
KIRILL: I have to check
with the plug-in repo.

00:13:08.430 --> 00:13:11.400
Maybe there is plug-in
for a COBOL.

00:13:11.400 --> 00:13:12.320
I'm not sure.

00:13:12.320 --> 00:13:13.140
SETH LADD: Don't underestimate
it.

00:13:13.140 --> 00:13:14.560
JJ BEHRENS: You know, one day.

00:13:14.560 --> 00:13:16.980
KIRILL: There is a 300
plug-ins on our

00:13:16.980 --> 00:13:19.710
repo, so I'm not sure.

00:13:19.710 --> 00:13:20.950
I will check, meanwhile.

00:13:20.950 --> 00:13:24.790
SETH LADD: Well, as Fedor and
Kirill are getting ready to do

00:13:24.790 --> 00:13:26.530
their demo with the screenshare,
I want to remind

00:13:26.530 --> 00:13:28.340
everyone watching that
you can go to

00:13:28.340 --> 00:13:32.930
developers@google.com/live and
ask and vote for questions.

00:13:32.930 --> 00:13:35.985
At the end of the demo and after
our chat, we will go

00:13:35.985 --> 00:13:37.450
ahead and go through the
Moderator questions.

00:13:37.450 --> 00:13:38.640
So if you want to talk
to these guys, go

00:13:38.640 --> 00:13:39.240
ahead and go there.

00:13:39.240 --> 00:13:42.490
But guys, why don't you share
your screen and walk us

00:13:42.490 --> 00:13:44.430
through some of the features.

00:13:44.430 --> 00:13:46.330
FEDOR: So let's share it.

00:13:50.340 --> 00:13:54.630
So I know that manuals for Dart
users who want so much.

00:13:54.630 --> 00:13:58.580
And we have a real nice format
for implementation.

00:13:58.580 --> 00:14:02.210
So it's a format of settings.

00:14:02.210 --> 00:14:08.580
You have a bunch of different
properties with spaces,

00:14:08.580 --> 00:14:10.430
idents, and so on.

00:14:10.430 --> 00:14:15.850
So, for example, let's change
some spaces, and add a comma,

00:14:15.850 --> 00:14:18.400
and add the space
before comma.

00:14:18.400 --> 00:14:23.390
So at the right side, you can
see what is changing.

00:14:23.390 --> 00:14:27.146
So I don't know if you
guys see it or not.

00:14:27.146 --> 00:14:29.250
JJ BEHRENS: That's a nice
feature, because we don't have

00:14:29.250 --> 00:14:29.860
a tool for that.

00:14:29.860 --> 00:14:30.840
FEDOR: Of course, you can
change wrappings.

00:14:30.840 --> 00:14:36.460
For example, let's wrap
a whole statement.

00:14:36.460 --> 00:14:37.710
Oops.

00:14:39.830 --> 00:14:41.860
Sorry.

00:14:41.860 --> 00:14:46.140
So I took my favorite example
from the SDK.

00:14:46.140 --> 00:14:47.620
It's a clock example.

00:14:47.620 --> 00:14:51.160
And add [INAUDIBLE].

00:14:51.160 --> 00:14:58.000
So currently, the clock
shows server uptime.

00:14:58.000 --> 00:15:05.520
So before start, let's refactor
a little bit.

00:15:05.520 --> 00:15:14.760
So the clock get message from
the sever every second.

00:15:14.760 --> 00:15:19.930
So let's introduce
our message.

00:15:19.930 --> 00:15:27.330
And you see that in IntelliJ
can find duplicates.

00:15:27.330 --> 00:15:29.100
So let's replace all the

00:15:29.100 --> 00:15:33.420
duplicates, and it's a message.

00:15:33.420 --> 00:15:35.000
Let's [INAUDIBLE].

00:15:40.830 --> 00:15:42.730
So here is the message.

00:15:42.730 --> 00:15:49.700
The message is just a date
in a string format.

00:15:49.700 --> 00:15:53.680
So you can debug both
server-side and client-side

00:15:53.680 --> 00:15:55.370
applications in IntelliJ.

00:15:58.680 --> 00:16:03.760
I think we're done with
launching the application.

00:16:09.070 --> 00:16:13.430
Now I'm going to show
so some other

00:16:13.430 --> 00:16:17.310
cool features of IntelliJ.

00:16:17.310 --> 00:16:26.490
So it really matters that you
have a good tool when you are

00:16:26.490 --> 00:16:29.450
learning a new language
or discovering

00:16:29.450 --> 00:16:31.190
someone else's code.

00:16:31.190 --> 00:16:34.600
So, for example, let's
find out how to

00:16:34.600 --> 00:16:38.300
change number of colors.

00:16:38.300 --> 00:16:39.550
[INTERPOSING VOICES].

00:16:43.910 --> 00:16:48.770
FEDOR: And let's check
that file structure.

00:16:48.770 --> 00:16:54.610
So I see that we have out
of date time method.

00:16:54.610 --> 00:16:58.040
So here is it.

00:16:58.040 --> 00:17:07.640
And we can see that clock number
represented by clock

00:17:07.640 --> 00:17:08.890
number plus.

00:17:11.349 --> 00:17:17.920
So clock number plus has
that bold color field.

00:17:17.920 --> 00:17:22.154
Let's find usage of
the bold color.

00:17:27.829 --> 00:17:30.580
Here is a nice view.

00:17:30.580 --> 00:17:36.140
So it turns out that
bold color is an

00:17:36.140 --> 00:17:42.356
index in array of images.

00:17:42.356 --> 00:17:42.840
Nice.

00:17:42.840 --> 00:17:46.880
Let's go to a bold class.

00:17:52.340 --> 00:18:01.168
So of course you can explore
the structure of the class.

00:18:01.168 --> 00:18:05.430
And you see the tons of
different properties.

00:18:05.430 --> 00:18:12.000
And for example, you can easily
see the implementation

00:18:12.000 --> 00:18:14.680
of random velocities.

00:18:14.680 --> 00:18:19.590
It shows random velocity, and
you can go through each item

00:18:19.590 --> 00:18:24.890
and the code is updating.

00:18:24.890 --> 00:18:30.330
So I think that was a
[INAUDIBLE] method, so I

00:18:30.330 --> 00:18:32.050
filter by [INAUDIBLE].

00:18:35.130 --> 00:18:38.980
Here we're changing some
stuff and so on.

00:18:38.980 --> 00:18:41.610
So, of course, we
can check with

00:18:41.610 --> 00:18:46.060
implementation on the fly.

00:18:46.060 --> 00:18:47.640
But here is it.

00:18:47.640 --> 00:18:57.895
Let's introduce the variable,
the place and date.

00:18:57.895 --> 00:19:01.080
Now, for example, I don't
want [INAUDIBLE].

00:19:01.080 --> 00:19:02.690
And I remain [INAUDIBLE]

00:19:02.690 --> 00:19:07.460
for example in the
[INAUDIBLE].

00:19:11.140 --> 00:19:15.950
So with latest version of Dart
plugin, which will be

00:19:15.950 --> 00:19:24.990
available in a few hours, we
have unit testing support.

00:19:24.990 --> 00:19:28.310
So here we have unit test.

00:19:28.310 --> 00:19:31.001
So just one of them.

00:19:36.320 --> 00:19:41.850
Here is it, nice
three of tests.

00:19:41.850 --> 00:19:43.590
You can observe a step
[INAUDIBLE].

00:19:52.670 --> 00:19:55.270
Also you can run a test
from the context.

00:19:55.270 --> 00:20:00.920
For example, I want to create a
one consideration for a bad

00:20:00.920 --> 00:20:02.370
test group.

00:20:02.370 --> 00:20:10.102
So I just right-click on
that all and run it.

00:20:13.270 --> 00:20:16.130
SETH LADD: Now, is that using
the unit test library that

00:20:16.130 --> 00:20:16.910
ships with the SDK?

00:20:16.910 --> 00:20:17.620
FEDOR: Yes.

00:20:17.620 --> 00:20:18.870
SETH LADD: That's fantastic.

00:20:22.006 --> 00:20:25.295
FEDOR: I have to develop
something in Dart.

00:20:30.110 --> 00:20:32.380
So I don't know what
to show you.

00:20:36.098 --> 00:20:39.510
I think I forgot something.

00:20:39.510 --> 00:20:41.720
KIRILL: Maybe you can show
us on generating stuff

00:20:41.720 --> 00:20:42.450
FEDOR: Oh, of course.

00:20:42.450 --> 00:20:42.880
Generating--

00:20:42.880 --> 00:20:45.820
KIRILL: Or like live template
suites or--

00:20:45.820 --> 00:20:47.820
FEDOR: Oh, right, right,
I'm sorry, of course.

00:20:47.820 --> 00:20:50.502
Let's go to the server.

00:20:50.502 --> 00:20:54.020
We have a stopwatch tick.

00:20:54.020 --> 00:21:01.100
It sends a date message
to the client.

00:21:01.100 --> 00:21:04.500
So let's introduce
our message.

00:21:04.500 --> 00:21:10.250
Then, for example, I don't
like ForEach method, then

00:21:10.250 --> 00:21:12.610
remove it, and iterate.

00:21:15.830 --> 00:21:28.000
And IntelliJ suggests to you
the components which has

00:21:28.000 --> 00:21:29.330
iterable type.

00:21:29.330 --> 00:21:32.350
So in my case it's
connections.

00:21:32.350 --> 00:21:35.448
So we can--

00:21:35.448 --> 00:21:37.340
it's connection.

00:21:37.340 --> 00:21:41.365
And, of course, you
get completion.

00:21:46.805 --> 00:21:49.445
And now the sample
about generation.

00:21:54.590 --> 00:21:56.690
I don't know what to generate.

00:22:04.570 --> 00:22:14.435
Let's generate some example
I don't have a file.

00:22:33.010 --> 00:22:38.320
KIRILL: Can you maybe also show
th3 color schemes and how

00:22:38.320 --> 00:22:41.740
you can highlight the source
codes with many colors?

00:22:41.740 --> 00:22:43.730
JJ BEHRENS: We don't care
about things like type

00:22:43.730 --> 00:22:45.170
completion and refactoring.

00:22:45.170 --> 00:22:48.320
We really just want to
see color schemes.

00:22:48.320 --> 00:22:53.210
KIRILL: When you are going to
use your tool all day, like 10

00:22:53.210 --> 00:22:59.230
hours a day, it can be very
important that you have the

00:22:59.230 --> 00:23:03.700
right colors, and your eyes
are relaxed, and so on.

00:23:03.700 --> 00:23:09.240
FEDOR: In IntelliJ, you can
choose color for sometimes the

00:23:09.240 --> 00:23:10.265
[INAUDIBLE]

00:23:10.265 --> 00:23:15.750
items, for example, for class
names and interfaces.

00:23:15.750 --> 00:23:24.920
So, for example, I want all of
these really, really pink.

00:23:24.920 --> 00:23:27.730
KIRILL: So you can spend a lot
of time setting up this stuff.

00:23:27.730 --> 00:23:31.575
FEDOR: And the interface
green.

00:23:34.970 --> 00:23:36.220
Whoops!

00:23:36.220 --> 00:23:41.050
Yeah, I want the interface
and I think it's--

00:23:41.050 --> 00:23:42.300
yes, it's true-- interface.

00:23:44.890 --> 00:23:47.810
Maybe another cool feature
is landmark.

00:23:47.810 --> 00:23:52.010
For example, let's go
to the list class.

00:23:56.730 --> 00:24:03.030
So let's check the old classes
that [INAUDIBLE].

00:24:10.160 --> 00:24:14.840
For example, in that
IntelliJ, you have

00:24:14.840 --> 00:24:19.200
landmarkers on there up.

00:24:19.200 --> 00:24:22.528
And we have both sides
and up and down.

00:24:35.220 --> 00:24:36.300
My demo.

00:24:36.300 --> 00:24:36.780
SETH LADD: Great.

00:24:36.780 --> 00:24:38.990
Thank you.

00:24:38.990 --> 00:24:40.550
JJ BEHRENS: I think we
have 10 minutes left.

00:24:40.550 --> 00:24:42.620
And we got a bunch of
questions lined up.

00:24:42.620 --> 00:24:43.360
SETH LADD: We do have
some questions.

00:24:43.360 --> 00:24:47.735
My first question is how much or
if any of the Dart SDK are

00:24:47.735 --> 00:24:50.200
you guys using to build
the plug-in?

00:24:58.140 --> 00:25:02.980
FEDOR: We don't use Dart as the
key like Synergy does all

00:25:02.980 --> 00:25:06.590
the syntax parsing of the AXT
building and on all the

00:25:06.590 --> 00:25:09.320
completion of the result
on itself.

00:25:09.320 --> 00:25:12.930
So we just integrated Dart
as the key to execute the

00:25:12.930 --> 00:25:16.770
launcher, the debugger,
and test runner.

00:25:16.770 --> 00:25:20.946
SETH LADD: So you have your own
static analyzer feature?

00:25:20.946 --> 00:25:23.360
FEDOR: Yeah.

00:25:23.360 --> 00:25:28.740
JJ BEHRENS: And there's a lot
of things to implement.

00:25:28.740 --> 00:25:30.240
And how far have
you come along?

00:25:30.240 --> 00:25:34.030
And how far do you have left
to go, before you are very

00:25:34.030 --> 00:25:35.440
comfortable with the plug-in?

00:25:35.440 --> 00:25:40.690
Are there big things that you
think are missing still?

00:25:40.690 --> 00:25:49.360
FEDOR: I think we need a bunch
of feedback, because, of

00:25:49.360 --> 00:25:52.100
course, I'm using it.

00:25:52.100 --> 00:26:05.742
But I think, for example, 100
people would be using it, then

00:26:05.742 --> 00:26:09.816
we will get proper feedback,
then we'll

00:26:09.816 --> 00:26:11.370
be absolutely great.

00:26:11.370 --> 00:26:19.640
Because I think now there is
some bugs, of course, and we

00:26:19.640 --> 00:26:22.400
need to fix them.

00:26:22.400 --> 00:26:24.230
SETH LADD: We'll get
you feedback.

00:26:24.230 --> 00:26:27.590
KIRILL: In general, we brought
all the basic stuff, like we

00:26:27.590 --> 00:26:28.670
can understand the language.

00:26:28.670 --> 00:26:31.580
We can parse the language.

00:26:31.580 --> 00:26:34.730
And all the foundation
is there.

00:26:34.730 --> 00:26:38.530
And right now there is a lot of
refactoring features that

00:26:38.530 --> 00:26:40.510
we can implement this or that.

00:26:40.510 --> 00:26:45.600
And so to choose which way to
go, we probably need some more

00:26:45.600 --> 00:26:47.445
feedback from you guys,
from users.

00:26:52.190 --> 00:26:54.420
Actually, right now, there is
only Fedor working on the

00:26:54.420 --> 00:26:57.180
plug-in, a single person
working on the plug-in.

00:26:57.180 --> 00:27:01.410
And no one in the company,
except him, uses Dart plug-in

00:27:01.410 --> 00:27:02.870
internally.

00:27:02.870 --> 00:27:06.130
Because we have like, I don't
know, several dozens of

00:27:06.130 --> 00:27:07.340
technologies to work on.

00:27:07.340 --> 00:27:10.430
Each one, each guy works
on his own [INAUDIBLE]

00:27:10.430 --> 00:27:10.930
list.

00:27:10.930 --> 00:27:15.260
And it's really impossible to
try like all the technologies

00:27:15.260 --> 00:27:17.900
that we have.

00:27:17.900 --> 00:27:19.170
JJ BEHRENS: I see that
you guys already

00:27:19.170 --> 00:27:20.760
have had 4,000 downloads.

00:27:20.760 --> 00:27:22.800
And so I think it's just a
matter of time before you get

00:27:22.800 --> 00:27:24.745
lots of feedback.

00:27:24.745 --> 00:27:28.505
KIRILL: Oh yeah, we get more and
more feedback every day.

00:27:28.505 --> 00:27:33.020
And expect for even more,
because only you real users

00:27:33.020 --> 00:27:39.160
can help us to choose the
direction to move and to find

00:27:39.160 --> 00:27:41.770
the most critical bugs.

00:27:41.770 --> 00:27:43.790
SETH LADD: Well, we have some
questions from the Moderator.

00:27:43.790 --> 00:27:45.090
So let's go to those.

00:27:45.090 --> 00:27:48.880
So Kai from Finland wants to
know, "Is there a plan to have

00:27:48.880 --> 00:27:51.995
the almighty Inspection
Power Pack for Dart?"

00:27:51.995 --> 00:27:53.245
FEDOR: Ah, yes.

00:27:56.080 --> 00:28:01.650
We used Dart Analyzer and in the
next version that will be

00:28:01.650 --> 00:28:06.830
available in few hours, there
is a huge improvement in

00:28:06.830 --> 00:28:08.600
working with Analyzer.

00:28:08.600 --> 00:28:11.420
So it works really well.

00:28:14.660 --> 00:28:17.830
SETH LADD: Neo writes, "Is the
Mirrors API going to work on

00:28:17.830 --> 00:28:20.050
the client side, and when should
we expect to see it?"

00:28:20.050 --> 00:28:22.470
So this isn't an IntelliJ
specific question.

00:28:22.470 --> 00:28:24.810
The answer is, yes, the Mirrors
API will work on the

00:28:24.810 --> 00:28:25.770
client side.

00:28:25.770 --> 00:28:26.930
When should we expect
to see it?

00:28:26.930 --> 00:28:27.780
I'm not sure.

00:28:27.780 --> 00:28:30.170
But I know that a lot of work is
happening on it right now.

00:28:30.170 --> 00:28:31.680
It's pretty important.

00:28:31.680 --> 00:28:32.220
JJ BEHRENS: It's important.

00:28:32.220 --> 00:28:33.320
It's coming.

00:28:33.320 --> 00:28:34.730
Here's one for JetBrains.

00:28:34.730 --> 00:28:38.430
How is the Pub Package Manager
support going for the Dart

00:28:38.430 --> 00:28:41.456
plug-in in IntelliJ?

00:28:41.456 --> 00:28:45.290
FEDOR: Yes, the latest version
of the plug-in

00:28:45.290 --> 00:28:47.770
supports the Pub.

00:28:47.770 --> 00:28:49.000
JJ BEHRENS: That's impressive.

00:28:49.000 --> 00:28:49.950
SETH LADD: What does
that mean exactly?

00:28:49.950 --> 00:28:51.750
What can you do?

00:28:51.750 --> 00:28:59.110
FEDOR: So we can install
packages and date packages.

00:28:59.110 --> 00:29:08.180
Also IntelliJ adds the new
package flag to the

00:29:08.180 --> 00:29:08.780
[INAUDIBLE]

00:29:08.780 --> 00:29:10.280
options.

00:29:10.280 --> 00:29:16.520
And, of course, we resolve
the package through this.

00:29:16.520 --> 00:29:17.930
JJ BEHRENS: Great.

00:29:17.930 --> 00:29:19.260
SETH LADD: Yeah, thank you
for working on that.

00:29:19.260 --> 00:29:21.890
I know that Pub is going to
really enable all of our third

00:29:21.890 --> 00:29:26.350
party developers to build
their own libraries and

00:29:26.350 --> 00:29:27.370
release them and publish them.

00:29:27.370 --> 00:29:29.560
It's really cool.

00:29:29.560 --> 00:29:32.600
Let's see, what's the status
of the proposal decision to

00:29:32.600 --> 00:29:35.450
remove explicit interfaces
from the spec.

00:29:35.450 --> 00:29:37.470
W. Brian from Madison.

00:29:37.470 --> 00:29:38.600
JJ BEHRENS: I don't know.

00:29:38.600 --> 00:29:39.820
I'm sorry.

00:29:39.820 --> 00:29:40.810
SETH LADD: It's going
to happen.

00:29:40.810 --> 00:29:43.620
I think the new version
spec should get

00:29:43.620 --> 00:29:45.380
published pretty soon.

00:29:45.380 --> 00:29:48.200
And that will essentially
become the M1 spec.

00:29:48.200 --> 00:29:50.730
And that will have explicit
interfaces moving.

00:29:50.730 --> 00:29:53.160
And then each class has their
own implicit interface that

00:29:53.160 --> 00:29:56.900
they project into the world.

00:29:56.900 --> 00:29:58.620
JJ BEHRENS: More
like Go there.

00:29:58.620 --> 00:29:59.640
SETH LADD: I think
it opposite.

00:29:59.640 --> 00:30:02.580
So in the Dart world
a class has its

00:30:02.580 --> 00:30:04.440
own implicit interface.

00:30:04.440 --> 00:30:04.770
JJ BEHRENS: Yes.

00:30:04.770 --> 00:30:07.240
SETH LADD: And you can
implement a class.

00:30:07.240 --> 00:30:08.480
But in Go, I think it's
the other way around.

00:30:08.480 --> 00:30:10.080
If you happen to conform
this thing, then

00:30:10.080 --> 00:30:10.840
you are this thing.

00:30:10.840 --> 00:30:14.670
JJ BEHRENS: Boy, and Seth
just schooled me.

00:30:14.670 --> 00:30:16.300
SETH LADD: That's because I
got schooled on this exact

00:30:16.300 --> 00:30:17.540
thing earlier.

00:30:17.540 --> 00:30:20.750
So Robert asks, when will get a
new version of the plug-in.

00:30:20.750 --> 00:30:22.560
It's been four weeks since
your last update.

00:30:22.560 --> 00:30:23.365
JJ BEHRENS: Four weeks?

00:30:23.365 --> 00:30:25.210
SETH LADD: A couple hours,
is that right?

00:30:25.210 --> 00:30:26.990
FEDOR: Yes.

00:30:26.990 --> 00:30:28.700
SETH LADD: We should actually
ask them this point.

00:30:28.700 --> 00:30:32.230
How does one get the Dart
plug-in for IntelliJ?

00:30:32.230 --> 00:30:33.590
How does one get started?

00:30:33.590 --> 00:30:34.690
Do I have to buy IntelliJ?

00:30:34.690 --> 00:30:35.970
Do I have to get WebStorm?

00:30:35.970 --> 00:30:38.240
How do you recommend
someone start?

00:30:38.240 --> 00:30:42.770
KIRILL: You can download
a version of

00:30:42.770 --> 00:30:44.390
IntelliJ at our web store.

00:30:44.390 --> 00:30:46.130
It is free for one month.

00:30:46.130 --> 00:30:50.520
So you have 30 days to try
it and then decide

00:30:50.520 --> 00:30:52.190
to buy it or not.

00:30:52.190 --> 00:30:54.720
And you start it.

00:30:54.720 --> 00:30:57.330
You can actually check out
the video from Fedor.

00:30:57.330 --> 00:30:59.030
It's how to install
the plug-in.

00:30:59.030 --> 00:31:01.120
So you basically open
[INAUDIBLE]

00:31:01.120 --> 00:31:03.460
to go to plug-in repo
and then choose

00:31:03.460 --> 00:31:04.520
the plug-in and install.

00:31:04.520 --> 00:31:06.505
Restart the IDE,
and that's it.

00:31:06.505 --> 00:31:09.030
Then you create the new
file and you're done.

00:31:09.030 --> 00:31:12.230
Or you can just clone the
project from GitHub.

00:31:12.230 --> 00:31:15.920
You go to main menu and
check that GitHub.

00:31:15.920 --> 00:31:18.310
And then enter your credentials,
choose the repo,

00:31:18.310 --> 00:31:19.700
and you're done.

00:31:19.700 --> 00:31:21.570
JJ BEHRENS: It took me three
minutes this morning, doing it

00:31:21.570 --> 00:31:24.060
for the first time.

00:31:24.060 --> 00:31:25.320
SETH LADD: And I should probably
not that you guys

00:31:25.320 --> 00:31:27.150
have sales every once
in a while too.

00:31:27.150 --> 00:31:29.010
And I'm just going
to get up on my

00:31:29.010 --> 00:31:31.070
soapbox for just a minute.

00:31:31.070 --> 00:31:33.070
Every once in a while I'll hear
like, ah, but IntelliJ

00:31:33.070 --> 00:31:33.850
costs money.

00:31:33.850 --> 00:31:38.700
But the way I look at is like
the master craftsman really

00:31:38.700 --> 00:31:42.430
invests in his tools, and he
really takes pride in the

00:31:42.430 --> 00:31:45.050
tools he curates, and
collects, and

00:31:45.050 --> 00:31:46.160
takes care of them.

00:31:46.160 --> 00:31:48.045
And those things are with
him for a long time.

00:31:48.045 --> 00:31:51.510
And I think master web engineers
should think of

00:31:51.510 --> 00:31:53.310
their tools in the same way.

00:31:53.310 --> 00:31:58.020
Investing in their tools is
a completely reasonable

00:31:58.020 --> 00:31:59.480
investment in their
own career.

00:31:59.480 --> 00:32:01.730
And so take a look at IntelliJ
as an option.

00:32:01.730 --> 00:32:04.110
JJ BEHRENS: And I would even
say that a master tools-man

00:32:04.110 --> 00:32:05.490
knows how to use
multiple tools.

00:32:05.490 --> 00:32:07.800
So sometimes he might need a
wrench, and sometimes he might

00:32:07.800 --> 00:32:09.900
need a socket set.

00:32:09.900 --> 00:32:14.300
And so, in the same way, I
have both Dart Editor and

00:32:14.300 --> 00:32:19.710
IntelliJ and WebStorm, all
working at the same time.

00:32:19.710 --> 00:32:22.640
I could do both VI and EMACs
because you wouldn't

00:32:22.640 --> 00:32:24.760
code LISP in VI.

00:32:24.760 --> 00:32:27.250
And there's lots of things
where I would prefer

00:32:27.250 --> 00:32:29.820
to code it in VI.

00:32:29.820 --> 00:32:30.860
SETH LADD: Well, here's
a great one for

00:32:30.860 --> 00:32:32.050
the JetBrains guys.

00:32:32.050 --> 00:32:35.430
Latislav, who is a really active
and helpful guy in the

00:32:35.430 --> 00:32:39.730
mailing list, wants to know,
"What parts of Dart are the

00:32:39.730 --> 00:32:45.100
most challenging to support in
an IDE such as IntelliJ?"

00:32:45.100 --> 00:32:46.710
FEDOR: I think the library.

00:32:46.710 --> 00:32:55.720
Because the common.library
contains only inputs and

00:32:55.720 --> 00:32:57.810
source statements.

00:32:57.810 --> 00:33:05.850
And when you, for example,
include the tool.files, for

00:33:05.850 --> 00:33:14.310
example, a.dart and b.dart,
you have to complete

00:33:14.310 --> 00:33:21.050
references from in a.dart
from b.dart.

00:33:21.050 --> 00:33:21.660
I don't know.

00:33:21.660 --> 00:33:24.342
Do you understand me?

00:33:24.342 --> 00:33:25.800
SETH LADD: This is
great feedback.

00:33:25.800 --> 00:33:28.600
FEDOR: That's the
difficult part.

00:33:28.600 --> 00:33:30.130
JJ BEHRENS: You have to
really, really, really

00:33:30.130 --> 00:33:32.050
understand the import
semantics.

00:33:32.050 --> 00:33:34.140
SETH LADD: And I think it's
bitten a couple people on the

00:33:34.140 --> 00:33:35.150
mailing list a couple times.

00:33:35.150 --> 00:33:37.030
So this is a tip for
everyone watching.

00:33:37.030 --> 00:33:41.340
If you import the same file via
two different URIs, Dart

00:33:41.340 --> 00:33:44.570
will treat that as two
separate namespaces.

00:33:44.570 --> 00:33:46.670
You can have a collision, even
though it's the same class.

00:33:46.670 --> 00:33:48.730
So be aware of that.

00:33:48.730 --> 00:33:50.190
And try to import from
the same URI.

00:33:54.310 --> 00:33:55.390
Well, we're running
out of time.

00:33:55.390 --> 00:33:56.740
So I'm sorry we didn't get
to all of the questions.

00:33:56.740 --> 00:33:57.880
JJ BEHRENS: Sorry about that.

00:33:57.880 --> 00:34:00.140
SETH LADD: But I do want to
say, thanks to our guests.

00:34:00.140 --> 00:34:05.000
Spasibo, for staying up
late and joining us.

00:34:05.000 --> 00:34:06.910
KIRILL: Thank you.

00:34:06.910 --> 00:34:08.239
FEDOR: Thank you guys.

00:34:08.239 --> 00:34:10.159
SETH LADD: For everyone watching
the live stream or

00:34:10.159 --> 00:34:11.909
catching us late, everything is

00:34:11.909 --> 00:34:13.260
recorded, posted to YouTube.

00:34:13.260 --> 00:34:17.199
And you can subscribe to
Dartisans via our podcast,

00:34:17.199 --> 00:34:18.320
which is also in iTunes.

00:34:18.320 --> 00:34:20.389
So lots of easy ways
to get them.

00:34:20.389 --> 00:34:21.860
So we'll post this up
in a little bit.

00:34:21.860 --> 00:34:23.900
And you could watch it later.

00:34:23.900 --> 00:34:25.840
You can catch all the episodes,
this and all the

00:34:25.840 --> 00:34:29.330
previous episodes, at
dartlang.org/dartisans.

00:34:29.330 --> 00:34:32.540
And we've got the videos on
there and links to the

00:34:32.540 --> 00:34:35.530
podcast, so lots of
different ways.

00:34:35.530 --> 00:34:38.400
And just thanks everyone
for watching.

00:34:38.400 --> 00:34:39.820
Dart is still technology
preview.

00:34:39.820 --> 00:34:42.790
But we are aiming really,
really fast

00:34:42.790 --> 00:34:43.920
towards the M1 release.

00:34:43.920 --> 00:34:45.870
And so these kind of feedbacks,
these kind of chats

00:34:45.870 --> 00:34:47.040
are really, really helpful.

00:34:47.040 --> 00:34:49.139
So stay involved in
the mailing list,

00:34:49.139 --> 00:34:51.989
dartlang.org/mailing-list.

00:34:51.989 --> 00:34:55.510
Stack Overflow is full of
awesome Dart community members

00:34:55.510 --> 00:34:57.240
helping out with the tag Dart.

00:34:57.240 --> 00:34:58.210
Lots of ways to get involved.

00:34:58.210 --> 00:34:59.550
Things around GitHub.

00:34:59.550 --> 00:35:01.220
And thanks for following
along.

00:35:01.220 --> 00:35:03.300
It's getting really exciting.

00:35:03.300 --> 00:35:04.820
So we'll see you next
time on Dartisans.

00:35:04.820 --> 00:35:06.940
Thank you JetBrains.

00:35:06.940 --> 00:35:07.840
KIRILL: Thank you.

00:35:07.840 --> 00:35:09.090
SETH LADD: Bye-bye.

