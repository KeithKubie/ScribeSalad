WEBVTT
Kind: captions
Language: en

00:00:00.050 --> 00:00:02.810
We have one more thing to
learn about while loops, and

00:00:02.810 --> 00:00:05.460
that's the break statement.

00:00:05.460 --> 00:00:10.220
Break gives us a way to stop the loop,
even while the test condition is true.

00:00:10.220 --> 00:00:12.940
So here's the typical structure
of a loop with a break.

00:00:12.940 --> 00:00:19.398
So we have the while as we did before
and we have the : and

00:00:19.398 --> 00:00:23.300
our general while structure
is we have a block.

00:00:23.300 --> 00:00:26.180
Now we're going to look inside this
block a little bit to see the kinds of

00:00:26.180 --> 00:00:27.530
things that could be here.

00:00:27.530 --> 00:00:29.556
And this is just an example of
what might be in the block.

00:00:29.556 --> 00:00:32.580
We have some code,
we have some python statements.

00:00:32.580 --> 00:00:34.270
Then we have an if statement.

00:00:34.270 --> 00:00:36.170
And that's going to have
another test expression.

00:00:36.170 --> 00:00:38.210
We'll call that the break test.

00:00:38.210 --> 00:00:42.290
That's a test expression that's checking
whether it's time to take a break.

00:00:42.290 --> 00:00:46.380
When the break test is true,
What we have is break,

00:00:46.380 --> 00:00:48.730
which by itself, is all we need.

00:00:48.730 --> 00:00:53.130
What break means is stop executing
the while loop, jump out of the while loop and

00:00:53.130 --> 00:00:55.150
continue with the code after that.

00:00:55.150 --> 00:00:59.290
So whatever we had here, this is more
code that was in the while block.

00:00:59.290 --> 00:01:00.710
That will get skipped and

00:01:00.710 --> 00:01:05.570
we'll jump to this point,
which is the code after the while.

00:01:05.570 --> 00:01:08.400
So what happens when we
execute a loop with a break,

00:01:08.400 --> 00:01:09.956
it executes like a normal loop.

00:01:09.956 --> 00:01:15.860
If the test expression is true, we go to
the code, if the break test is false,

00:01:15.860 --> 00:01:19.450
we don't execute the break,
we would continue with the More Code.

00:01:19.450 --> 00:01:21.180
We would go back to the loop test.

00:01:22.780 --> 00:01:26.880
Check the test expression again,
if it is true, we go run this code.

00:01:26.880 --> 00:01:30.310
If the break test is true,
then we execute the break and

00:01:30.310 --> 00:01:32.790
what break does is jump out of the loop.

00:01:32.790 --> 00:01:36.370
So we don't execute the more code we
don't execute the test expression again.

00:01:36.370 --> 00:01:39.998
If the break happens, what happens is
we jump to the code after the while.

00:01:41.160 --> 00:01:44.380
This gives us a way to break
out of the middle of the loop.

00:01:44.380 --> 00:01:46.800
Here's an example of
how we might use that.

00:01:46.800 --> 00:01:50.520
So before we define the procedure
print numbers without using break,

00:01:50.520 --> 00:01:51.940
we defined it like this.

00:01:51.940 --> 00:01:53.560
So this is the code we had before.

00:01:53.560 --> 00:01:55.860
We could re-write that using break.

00:01:55.860 --> 00:01:58.640
So now instead of having
the while test stop the loop,

00:01:58.640 --> 00:02:00.470
we'll make the while test true.

00:02:00.470 --> 00:02:01.720
True will never become false.

00:02:02.800 --> 00:02:06.900
That means if we didn't have a break,
the loop would keep going forever.

00:02:06.900 --> 00:02:08.770
But we're going to add a break.

00:02:08.770 --> 00:02:10.550
We're going to have
an if test that says.

00:02:10.550 --> 00:02:13.310
Well, the stopping condition
now is we're going to stop

00:02:13.310 --> 00:02:14.340
once i is greater than n.

00:02:14.340 --> 00:02:17.700
And the way to stop is to use break.

00:02:17.700 --> 00:02:20.080
If i is not greater than n then
we're going to keep going.

00:02:20.080 --> 00:02:21.580
We'll do the same thing we did before.

00:02:21.580 --> 00:02:22.210
We'll print i.

00:02:23.380 --> 00:02:24.540
And we'll add one to i.

00:02:25.540 --> 00:02:29.510
So this look has exactly the same
meaning as the one we had before.

00:02:29.510 --> 00:02:32.500
The previous one is better in every way,
right, so

00:02:32.500 --> 00:02:34.690
this is more complex is more code.

00:02:34.690 --> 00:02:37.085
This illustrates how we can use break.

00:02:37.085 --> 00:02:38.325
We wouldn't want to do it this way.

00:02:38.325 --> 00:02:39.945
This is much worse than
what we had before.

00:02:39.945 --> 00:02:42.445
We want to keep our code simple and
easy to understand.

00:02:42.445 --> 00:02:45.745
We'll see, once we get to the code for
abstracting all the links on the page,

00:02:45.745 --> 00:02:48.975
that there are cases where it's
easier to write the code using break,

00:02:48.975 --> 00:02:49.885
than it is without that.

