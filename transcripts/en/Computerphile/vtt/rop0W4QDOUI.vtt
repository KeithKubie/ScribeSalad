WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.580
try a little bit different today after

00:00:02.580 --> 00:00:04.230
we did the video on Dykstra I thought

00:00:04.230 --> 00:00:06.120
well you know sometimes I like to go

00:00:06.120 --> 00:00:07.890
home and sometimes do a bit of

00:00:07.890 --> 00:00:09.510
programming in front of the TV you know

00:00:09.510 --> 00:00:12.030
the person I am and one of the cool

00:00:12.030 --> 00:00:13.019
things that you about being other

00:00:13.019 --> 00:00:14.910
program is if you think all i wonder if

00:00:14.910 --> 00:00:15.960
i could write something that would solve

00:00:15.960 --> 00:00:17.940
mazes you can immediately go and

00:00:17.940 --> 00:00:19.590
actually do that that thing so that's

00:00:19.590 --> 00:00:21.689
what we're doing today I've come over a

00:00:21.689 --> 00:00:23.369
bit of a part of a small program not

00:00:23.369 --> 00:00:27.480
very complicated that fold mazes that

00:00:27.480 --> 00:00:29.640
you give it an image for you get amazed

00:00:29.640 --> 00:00:30.990
it worked his way through it and then

00:00:30.990 --> 00:00:33.270
output say the same picture made from

00:00:33.270 --> 00:00:36.180
red line on it is very exciting and but

00:00:36.180 --> 00:00:38.250
I've also actually implemented lot of

00:00:38.250 --> 00:00:39.510
different search approaches so I didn't

00:00:39.510 --> 00:00:40.680
go into depth and breadth first search

00:00:40.680 --> 00:00:44.600
and a star and Dykstra

00:00:45.560 --> 00:00:46.940
want to see the actual code those things

00:00:46.940 --> 00:00:48.710
then we'll make it available so other

00:00:48.710 --> 00:00:50.780
people can follow along tweak it maybe

00:00:50.780 --> 00:00:52.760
improve on what I've done it comes back

00:00:52.760 --> 00:00:55.760
down to date well for the implementation

00:00:55.760 --> 00:00:57.830
video doesn't it because there are so

00:00:57.830 --> 00:00:59.690
many ways you can program something that

00:00:59.690 --> 00:01:04.460
solves an image-based maze and how I've

00:01:04.460 --> 00:01:06.560
done it is okay it probably isn't the

00:01:06.560 --> 00:01:08.780
optimal I I had in mind i wanted to do

00:01:08.780 --> 00:01:10.700
really big mazes in fifteen thousand

00:01:10.700 --> 00:01:12.980
pixels by 15,000 pixel maybe bigger

00:01:12.980 --> 00:01:14.750
about around now so I can't go any

00:01:14.750 --> 00:01:17.930
bigger than that but so i'd love you to

00:01:17.930 --> 00:01:19.940
be most semi efficient at the very least

00:01:19.940 --> 00:01:22.160
you know not completely impractical and

00:01:22.160 --> 00:01:24.260
so I thought to started by coming up

00:01:24.260 --> 00:01:27.260
with some rules that my maid have to

00:01:27.260 --> 00:01:29.450
follow because yeah okay so I could I

00:01:29.450 --> 00:01:31.910
could give it any maze any picture made

00:01:31.910 --> 00:01:34.070
a photograph of amazed but then most of

00:01:34.070 --> 00:01:35.360
the time i'm going to be doing is now

00:01:35.360 --> 00:01:36.920
just trying to turn that into a

00:01:36.920 --> 00:01:39.320
structure in memory and that's what a

00:01:39.320 --> 00:01:41.119
job right you want to be there I mean

00:01:41.119 --> 00:01:42.380
yeah yeah and i'm just doing it in front

00:01:42.380 --> 00:01:44.180
of the TV you know I get carried away so

00:01:44.180 --> 00:01:47.720
what I said was I have a black and white

00:01:47.720 --> 00:01:51.530
pixel image that hopefully doesn't have

00:01:51.530 --> 00:01:53.360
jpeg compression on it because activex

00:01:53.360 --> 00:01:54.950
everything is a blackboard all the way

00:01:54.950 --> 00:01:56.660
around the outside that the wall and

00:01:56.660 --> 00:01:58.970
then any black pixels wall anyway pixels

00:01:58.970 --> 00:02:01.910
path and their intention to the top and

00:02:01.910 --> 00:02:03.590
an expert at the bottom that that was my

00:02:03.590 --> 00:02:04.700
boat my rules

00:02:04.700 --> 00:02:06.649
I almost the other boot made it don't

00:02:06.649 --> 00:02:08.390
follow the rules are going to work in

00:02:08.390 --> 00:02:10.340
myself where you can follow me to extend

00:02:10.340 --> 00:02:12.200
myself with how they're closed amazed if

00:02:12.200 --> 00:02:13.819
you want I've got a very small image

00:02:13.819 --> 00:02:17.840
here called tiny dot PNG which you can't

00:02:17.840 --> 00:02:19.760
see because windows does not like to

00:02:19.760 --> 00:02:22.790
expand these qualifies of images what

00:02:22.790 --> 00:02:24.620
you don't do is give it the 50,000

00:02:24.620 --> 00:02:26.510
50,000 image first go because if you

00:02:26.510 --> 00:02:27.980
have any kind of problem you've no idea

00:02:27.980 --> 00:02:29.990
what we want my baby started a small

00:02:29.990 --> 00:02:31.940
image you can actually sort of debug

00:02:31.940 --> 00:02:33.470
what's going on in the code you could

00:02:33.470 --> 00:02:35.030
say well I was expecting this to happen

00:02:35.030 --> 00:02:36.590
and it didn't which means i made a

00:02:36.590 --> 00:02:38.840
mistake or something like this to start

00:02:38.840 --> 00:02:41.180
with a small cases and then work your

00:02:41.180 --> 00:02:43.010
way up to the bigger think hopefully

00:02:43.010 --> 00:02:45.560
once you've got to add overbust album

00:02:45.560 --> 00:02:47.660
that work for small limited on the mazes

00:02:47.660 --> 00:02:50.510
just get a big amazing should figure

00:02:50.510 --> 00:02:53.959
cross work first time we should think so

00:02:53.959 --> 00:02:56.629
i've taught amazed right that took ages

00:02:56.629 --> 00:02:58.550
to draw in video it but

00:02:58.550 --> 00:03:00.410
you know just giving all this in a

00:03:00.410 --> 00:03:02.120
little bit wayward here but you know

00:03:02.120 --> 00:03:04.910
each of these square in a square and I

00:03:04.910 --> 00:03:06.200
had enough nothing like that about it

00:03:06.200 --> 00:03:06.800
than that

00:03:06.800 --> 00:03:11.000
so my walls are that the outside is

00:03:11.000 --> 00:03:11.690
black

00:03:11.690 --> 00:03:13.550
apart from the top has one picture of

00:03:13.550 --> 00:03:15.110
light which is the entrance and the

00:03:15.110 --> 00:03:16.670
bottom have one picture of which is the

00:03:16.670 --> 00:03:17.990
exit those are my rules that have come

00:03:17.990 --> 00:03:20.420
up with now I said there are loads of

00:03:20.420 --> 00:03:21.680
ways we could solve that maze

00:03:21.680 --> 00:03:23.990
programmatically perhaps the first one I

00:03:23.990 --> 00:03:25.820
did and it's so in the most obvious one

00:03:25.820 --> 00:03:28.100
is just to put it into memory and then

00:03:28.100 --> 00:03:29.900
kind of freak pixel look at the

00:03:29.900 --> 00:03:31.670
neighbors and see if we can go there and

00:03:31.670 --> 00:03:33.470
then move there and if maybe we can go a

00:03:33.470 --> 00:03:35.300
bit further and so on so that with my

00:03:35.300 --> 00:03:37.910
credit first trial implementation what I

00:03:37.910 --> 00:03:39.620
did was like I copied it into memory or

00:03:39.620 --> 00:03:41.900
storage array and then I say that's my

00:03:41.900 --> 00:03:45.920
start position at not 123 naught but and

00:03:45.920 --> 00:03:47.180
I said we'll look where can I go from

00:03:47.180 --> 00:03:49.670
free not well well the left pixel to

00:03:49.670 --> 00:03:52.040
know is is black the color there and the

00:03:52.040 --> 00:03:55.910
next pixel across for North is black

00:03:55.910 --> 00:03:58.400
longer there but this one isn't this 31

00:03:58.400 --> 00:04:00.620
is white so i'll go there and I'll

00:04:00.620 --> 00:04:02.120
continue my search from there and I

00:04:02.120 --> 00:04:03.650
think the same for the blue car looked

00:04:03.650 --> 00:04:05.720
at look left look like process and every

00:04:05.720 --> 00:04:08.480
pixel like this is basically a flat

00:04:08.480 --> 00:04:10.100
field but it's nothing smart about this

00:04:10.100 --> 00:04:14.870
and it does work in the sense that it

00:04:14.870 --> 00:04:16.430
will get into the end is loaded very

00:04:16.430 --> 00:04:18.290
quickly you have to have a small but

00:04:18.290 --> 00:04:20.000
says which nodes have been visited if

00:04:20.000 --> 00:04:21.350
you otherwise you're just going to go up

00:04:21.350 --> 00:04:23.030
and down up and down up and down up and

00:04:23.030 --> 00:04:25.640
down it and get yourself into a loop or

00:04:25.640 --> 00:04:27.740
here we got an actual loop we want to go

00:04:27.740 --> 00:04:29.330
around and mailed if we don't have any

00:04:29.330 --> 00:04:31.190
idea about where we've been so i created

00:04:31.190 --> 00:04:33.140
another a variety of the exact same size

00:04:33.140 --> 00:04:36.320
as this which was a true-or-false of a

00:04:36.320 --> 00:04:38.720
foodie the right and just if you've been

00:04:38.720 --> 00:04:40.970
visited you get that true and will ever

00:04:40.970 --> 00:04:42.950
go back there but because by definition

00:04:42.950 --> 00:04:45.530
we don't want to go backwards glue come

00:04:45.530 --> 00:04:46.070
from

00:04:46.070 --> 00:04:48.620
right but what if you get go to a

00:04:48.620 --> 00:04:51.530
dentist partially so the data structure

00:04:51.530 --> 00:04:52.850
that i'm using to do this breadth first

00:04:52.850 --> 00:04:57.560
search is it's one that keep a bit about

00:04:57.560 --> 00:04:58.910
our box to approach in our previous

00:04:58.910 --> 00:05:01.010
video keeps retractable windows that

00:05:01.010 --> 00:05:02.990
currently under consideration but

00:05:02.990 --> 00:05:04.400
haven't been invented yet

00:05:04.400 --> 00:05:05.960
so you know if it's been looking down

00:05:05.960 --> 00:05:08.090
here have this one and maybe this one

00:05:08.090 --> 00:05:10.190
maybe this one and when it gets to the

00:05:10.190 --> 00:05:11.230
end here

00:05:11.230 --> 00:05:12.910
we'll just go out and work out a little

00:05:12.910 --> 00:05:14.950
fall back to this one so it highly

00:05:14.950 --> 00:05:17.470
inherently allows itself to backtrack

00:05:17.470 --> 00:05:20.470
and if I love doing it as you said that

00:05:20.470 --> 00:05:22.720
as you sort of suggested which was I

00:05:22.720 --> 00:05:25.390
just kind of followed blindly then i'm

00:05:25.390 --> 00:05:26.500
going to be doing a lot of backtracking

00:05:26.500 --> 00:05:28.450
now I had actually implemented version

00:05:28.450 --> 00:05:32.050
of that was much aware that of life left

00:05:32.050 --> 00:05:35.020
turn version as well good luck Hardaway

00:05:35.020 --> 00:05:36.310
and implement a few different approaches

00:05:36.310 --> 00:05:38.590
the problem with what i did here by

00:05:38.590 --> 00:05:40.480
which is why i'm not showing the code of

00:05:40.480 --> 00:05:42.550
this particular version is that it's a

00:05:42.550 --> 00:05:45.610
beneficent like it's it's not massively

00:05:45.610 --> 00:05:46.990
inefficient in memory because the right

00:05:46.990 --> 00:05:48.850
don't take up a huge amount we even for

00:05:48.850 --> 00:05:50.800
a really big image you know you know we

00:05:50.800 --> 00:05:52.390
love these kind of images when we take

00:05:52.390 --> 00:05:54.070
high-resolution photographs and things

00:05:54.070 --> 00:05:57.370
so it's not inconceivable that you have

00:05:57.370 --> 00:06:00.340
that amount of memory the issue more is

00:06:00.340 --> 00:06:03.970
that over made of that kind of Sighs the

00:06:03.970 --> 00:06:06.190
amount of nose under consideration start

00:06:06.190 --> 00:06:08.440
to grow really quite rapidly that put

00:06:08.440 --> 00:06:09.760
the memory and computational overhead

00:06:09.760 --> 00:06:12.520
that we don't want and also if I'm

00:06:12.520 --> 00:06:14.830
walking down this path here let's say

00:06:14.830 --> 00:06:17.170
and I'm here like I can't let the right

00:06:17.170 --> 00:06:18.790
here called left or right here

00:06:18.790 --> 00:06:20.590
I called left to right here and I'm

00:06:20.590 --> 00:06:22.420
spending a lot of time going to this one

00:06:22.420 --> 00:06:23.890
adding it to the queue to this one and

00:06:23.890 --> 00:06:26.020
then and going down here i'm taking one

00:06:26.020 --> 00:06:28.210
two three four steps when we really want

00:06:28.210 --> 00:06:30.010
that with a surprise now spit at people

00:06:30.010 --> 00:06:31.870
interview at some point I'm going to

00:06:31.870 --> 00:06:34.120
have to travel down there but I don't

00:06:34.120 --> 00:06:35.590
want to store that information in memory

00:06:35.590 --> 00:06:37.660
just seems a bit inefficient

00:06:37.660 --> 00:06:42.100
so what i did was i wrote a a one-pass

00:06:42.100 --> 00:06:43.750
which means one look over the image out

00:06:43.750 --> 00:06:47.470
with them to turn this maze into a graph

00:06:47.470 --> 00:06:49.720
like that one too dr. video i have no

00:06:49.720 --> 00:06:51.430
idea is the optimal album for this

00:06:51.430 --> 00:06:53.440
probably not but it was not going to

00:06:53.440 --> 00:06:55.900
work and it extends quite reasonably two

00:06:55.900 --> 00:06:59.200
large mazes as well let's have a quick

00:06:59.200 --> 00:07:00.790
look at how that works let's go with our

00:07:00.790 --> 00:07:03.760
green pen if we do one part of them what

00:07:03.760 --> 00:07:04.780
we have to do is make all the decisions

00:07:04.780 --> 00:07:07.180
we want to make by just cutting process

00:07:07.180 --> 00:07:08.950
throughout medical office was and then

00:07:08.950 --> 00:07:10.600
across thrown across the rope and you

00:07:10.600 --> 00:07:12.520
could do it column wise but for the sake

00:07:12.520 --> 00:07:14.260
of argument I've got that the most

00:07:14.260 --> 00:07:15.790
obvious thing is once we get to the

00:07:15.790 --> 00:07:17.710
start we can slide that the start and

00:07:17.710 --> 00:07:19.990
that's good right so the first low we

00:07:19.990 --> 00:07:22.000
simply move along until we get to start

00:07:22.000 --> 00:07:23.920
and we create a node

00:07:23.920 --> 00:07:25.930
in that position that my note little

00:07:25.930 --> 00:07:28.240
have a little object in memory stored it

00:07:28.240 --> 00:07:30.130
and it will store any of these

00:07:30.130 --> 00:07:32.200
connections 20 neighbors but it can so

00:07:32.200 --> 00:07:35.200
that's RS in the dark shades RS yes but

00:07:35.200 --> 00:07:37.270
in in my implementation decision to

00:07:37.270 --> 00:07:39.160
somewhere in the array this is an actual

00:07:39.160 --> 00:07:41.470
tangible object in memory that has a

00:07:41.470 --> 00:07:43.450
north east and west connection that

00:07:43.450 --> 00:07:45.370
could have something connected to it in

00:07:45.370 --> 00:07:46.450
this case is not gonna have a lot of

00:07:46.450 --> 00:07:48.490
connection because you know not going to

00:07:48.490 --> 00:07:51.460
go anywhere so for the next row i came

00:07:51.460 --> 00:07:54.640
up with a number of rules that depending

00:07:54.640 --> 00:07:56.110
on whether you're looking at war on the

00:07:56.110 --> 00:07:58.150
flat part you do different things right

00:07:58.150 --> 00:08:00.010
so the first one for example is if

00:08:00.010 --> 00:08:01.030
you're on a wall

00:08:01.030 --> 00:08:03.280
don't do anything but you can't right

00:08:03.280 --> 00:08:04.900
now there you can't connect and he knows

00:08:04.900 --> 00:08:06.370
to that point it doesn't make any sense

00:08:06.370 --> 00:08:07.660
right so if you're on a wall but you do

00:08:07.660 --> 00:08:09.520
nothing right and it's reflected in the

00:08:09.520 --> 00:08:12.280
code if you're on a path and you were on

00:08:12.280 --> 00:08:14.020
a wall that means you want to start

00:08:14.020 --> 00:08:15.820
something new so we should create a node

00:08:15.820 --> 00:08:18.010
but it start to get a little bit

00:08:18.010 --> 00:08:19.930
confusing but I can basically I can't

00:08:19.930 --> 00:08:22.510
with different rules so in this one we

00:08:22.510 --> 00:08:24.490
talked their dad we can't go up we were

00:08:24.490 --> 00:08:25.870
already on the path that we do nothing

00:08:25.870 --> 00:08:28.030
this one we've got something about that

00:08:28.030 --> 00:08:29.020
we can connect to

00:08:29.020 --> 00:08:30.880
so we create a node here and we join

00:08:30.880 --> 00:08:33.070
them up and we've just created a note so

00:08:33.070 --> 00:08:35.050
we join them up like we know which is

00:08:35.050 --> 00:08:37.600
literally created on the left so we're

00:08:37.600 --> 00:08:39.430
tracking the ones above the ones to the

00:08:39.430 --> 00:08:41.650
left and we're going this way down

00:08:41.650 --> 00:08:43.630
always so microsoft way can I take a

00:08:43.630 --> 00:08:45.100
break in motion TV and then I come back

00:08:45.100 --> 00:08:47.800
the next day and and i'm going to ok so

00:08:47.800 --> 00:08:49.960
now but this node this goes into

00:08:49.960 --> 00:08:51.130
anything this doesn't do anything

00:08:51.130 --> 00:08:53.350
because awful down to glow decision to

00:08:53.350 --> 00:08:55.480
be made at this node is no point we make

00:08:55.480 --> 00:08:57.880
anything in memory for here here this is

00:08:57.880 --> 00:08:59.380
an obvious junction we can go down to

00:08:59.380 --> 00:09:01.780
this point so we created those and we

00:09:01.780 --> 00:09:03.340
connected back to the one we last saw on

00:09:03.340 --> 00:09:06.610
the left and then again we get to this

00:09:06.610 --> 00:09:08.560
one we're just in front of a wall at the

00:09:08.560 --> 00:09:10.150
end of the corridor that's so exciting

00:09:10.150 --> 00:09:12.970
we create a node and rejoined out by

00:09:12.970 --> 00:09:14.890
this now there's a few statements

00:09:14.890 --> 00:09:17.020
involved in that what you saw in your

00:09:17.020 --> 00:09:20.050
line think about the steps you have to

00:09:20.050 --> 00:09:22.750
take that each given position and what's

00:09:22.750 --> 00:09:24.610
going on at that position doesn't take

00:09:24.610 --> 00:09:26.560
very long to come up the steps you know

00:09:26.560 --> 00:09:28.750
if there is a war on the left is all the

00:09:28.750 --> 00:09:31.240
like is there a passel of those are the

00:09:31.240 --> 00:09:33.520
things we basically have to check and

00:09:33.520 --> 00:09:35.080
they will involve referencing the image

00:09:35.080 --> 00:09:37.160
and saying is it was all that pixel

00:09:37.160 --> 00:09:40.639
and the next one below by this one

00:09:40.639 --> 00:09:43.670
doesn't left her life so it's a path

00:09:43.670 --> 00:09:45.290
going downwards and don't do anything on

00:09:45.290 --> 00:09:45.949
this one

00:09:45.949 --> 00:09:47.779
alright this one the same this on the

00:09:47.779 --> 00:09:50.480
side on the next row this one is a

00:09:50.480 --> 00:09:53.000
junction so we created knows we

00:09:53.000 --> 00:09:54.439
connected to the last one is all about

00:09:54.439 --> 00:09:56.480
it which I stored in the list

00:09:56.480 --> 00:09:57.889
incidentally for those of you following

00:09:57.889 --> 00:09:59.509
along with my coach so we get to before

00:09:59.509 --> 00:10:00.649
mrs. that this is the end of the

00:10:00.649 --> 00:10:02.600
corridor we connect that in here we

00:10:02.600 --> 00:10:03.769
start one here because that's the

00:10:03.769 --> 00:10:05.629
beginning of a corridor end of the

00:10:05.629 --> 00:10:08.269
corridor connect them up this one take

00:10:08.269 --> 00:10:10.100
no action and you get the idea

00:10:10.100 --> 00:10:13.250
over time we start to fill in wherever

00:10:13.250 --> 00:10:15.050
there's an interesting junction anything

00:10:15.050 --> 00:10:15.709
to be done

00:10:15.709 --> 00:10:17.329
you see that this and we propagate this

00:10:17.329 --> 00:10:19.939
through until eventually we finish off

00:10:19.939 --> 00:10:22.009
our graph this unit I will actually

00:10:22.009 --> 00:10:23.209
finish it off because i went to all the

00:10:23.209 --> 00:10:25.850
trouble of doing out there we are

00:10:25.850 --> 00:10:28.430
but now it's my algorithm is correct all

00:10:28.430 --> 00:10:30.980
of these notes should exactly reflect

00:10:30.980 --> 00:10:33.019
are made and what we've got it

00:10:33.019 --> 00:10:35.060
insulated increase memory because these

00:10:35.060 --> 00:10:36.889
loads a slightly bigger objects in the

00:10:36.889 --> 00:10:38.629
underlying away which is just small

00:10:38.629 --> 00:10:41.360
numbers but we have to take many fewer

00:10:41.360 --> 00:10:43.759
steps to go across this late you know

00:10:43.759 --> 00:10:45.829
the step counts from here to here is one

00:10:45.829 --> 00:10:49.279
instead of 3 and so on and depending on

00:10:49.279 --> 00:10:50.509
the length of your corridors in your

00:10:50.509 --> 00:10:52.160
maze you can imagine that drastically

00:10:52.160 --> 00:10:53.810
decrease the number of nodes you have to

00:10:53.810 --> 00:10:57.259
be expanding into and so they want to

00:10:57.259 --> 00:10:59.389
did was I said well okay so i put this

00:10:59.389 --> 00:11:01.430
in the maze class so i go to class and

00:11:01.430 --> 00:11:03.199
object in memory that stores this maze

00:11:03.199 --> 00:11:04.579
have a start

00:11:04.579 --> 00:11:06.769
it happened and then I started writing

00:11:06.769 --> 00:11:09.290
other classes that their only task is to

00:11:09.290 --> 00:11:11.779
go to later be so i did that first

00:11:11.779 --> 00:11:13.970
search which expands all of them one

00:11:13.970 --> 00:11:14.630
after another

00:11:14.630 --> 00:11:16.610
remember next and the next and the flood

00:11:16.610 --> 00:11:18.829
fill that first search with his fans as

00:11:18.829 --> 00:11:20.480
far as to count one direction and then

00:11:20.480 --> 00:11:22.670
the next election and so on and then

00:11:22.670 --> 00:11:24.529
left her lonely which is where you with

00:11:24.529 --> 00:11:26.630
her less and you get stopped all the

00:11:26.630 --> 00:11:29.990
time and it with her left but it's a

00:11:29.990 --> 00:11:31.939
closed famous made solving album because

00:11:31.939 --> 00:11:34.250
if you're human and you can't see the

00:11:34.250 --> 00:11:35.180
whole maze

00:11:35.180 --> 00:11:37.819
it was quite well and then I also

00:11:37.819 --> 00:11:40.100
implemented Dykstra in a style as well

00:11:40.100 --> 00:11:41.870
so we'll see if it works

00:11:41.870 --> 00:11:44.449
so that's one of the command prompt soap

00:11:44.449 --> 00:11:46.910
in an ideal world I would have a name of

00:11:46.910 --> 00:11:49.040
the file read in from a command line

00:11:49.040 --> 00:11:50.570
parameters like I do actually have to do

00:11:50.570 --> 00:11:52.610
that apartment was a bit lazy and I

00:11:52.610 --> 00:11:55.220
hard-coded it so at the moment it was

00:11:55.220 --> 00:11:57.050
tiny dot PNG could have told me to and

00:11:57.050 --> 00:11:59.600
that's the only made it done so Python

00:11:59.600 --> 00:12:01.490
so dot pie

00:12:01.490 --> 00:12:03.140
there we are and so it creates the image

00:12:03.140 --> 00:12:05.180
didn't take long with this is not a big

00:12:05.180 --> 00:12:07.640
maze in fact it took no second to solve

00:12:07.640 --> 00:12:09.650
made it only got 23 knows

00:12:09.650 --> 00:12:13.940
let's see if that's true 123456789 10 12

00:12:13.940 --> 00:12:17.810
14 efficient any more than 20 22 23 1

00:12:17.810 --> 00:12:18.920
quite pleased actually because I could

00:12:18.920 --> 00:12:20.360
have been really embarrassing but it's

00:12:20.360 --> 00:12:22.040
that pile of debugging that I was doing

00:12:22.040 --> 00:12:23.900
early on and getting funny amount of

00:12:23.900 --> 00:12:25.610
nose and you think we're done wrong okay

00:12:25.610 --> 00:12:27.380
i must have not connected these popular

00:12:27.380 --> 00:12:28.610
something I've got a very technical

00:12:28.610 --> 00:12:31.250
question for you what was entirely while

00:12:31.250 --> 00:12:33.710
all this was going to wasn't le oh yeah

00:12:33.710 --> 00:12:35.630
good point arm something like that to

00:12:35.630 --> 00:12:37.460
cultural too hard it's got detailed plot

00:12:37.460 --> 00:12:38.960
is difficult for me to also do this

00:12:38.960 --> 00:12:40.220
community one thing that one

00:12:40.220 --> 00:12:42.380
it took six 10,000 for a second i think

00:12:42.380 --> 00:12:45.560
that is some fraction of a second to to

00:12:45.560 --> 00:12:47.780
actually find the path explored lighting

00:12:47.780 --> 00:12:49.610
know that means it looked at mind

00:12:49.610 --> 00:12:51.740
impossible cabin nodes and eventually

00:12:51.740 --> 00:12:53.780
found a path that would have length 94

00:12:53.780 --> 00:12:56.060
here and if we look at the image which

00:12:56.060 --> 00:12:58.640
again it difficult to do on this screen

00:12:58.640 --> 00:13:00.620
so using the magic of editing this will

00:13:00.620 --> 00:13:02.120
now appear very large and extremely

00:13:02.120 --> 00:13:05.120
positive rather than that which has also

00:13:05.120 --> 00:13:07.100
been linearly interpolated which is

00:13:07.100 --> 00:13:08.420
exactly what I didn't want to happen on

00:13:08.420 --> 00:13:10.970
this pc my previous video on linear

00:13:10.970 --> 00:13:13.040
interpolation so I thought a pass in

00:13:13.040 --> 00:13:14.750
from glutamate which represents the

00:13:14.750 --> 00:13:15.740
start to the end

00:13:15.740 --> 00:13:16.970
let's see if we can do something a

00:13:16.970 --> 00:13:20.540
little bit more challenging like so here

00:13:20.540 --> 00:13:23.450
i have a 2000 by 2000 image which when

00:13:23.450 --> 00:13:25.700
you load up on my screen looks like a my

00:13:25.700 --> 00:13:27.890
patent now i use the program with

00:13:27.890 --> 00:13:29.270
Daedalus to generate this and you can

00:13:29.270 --> 00:13:31.400
generate very large mazes I'm taking it

00:13:31.400 --> 00:13:32.810
in some way on faith that there is a

00:13:32.810 --> 00:13:36.020
bachelor star island could you know it

00:13:36.020 --> 00:13:37.430
doesn't make a slightly different life

00:13:37.430 --> 00:13:39.140
program so i had to go in and start the

00:13:39.140 --> 00:13:41.120
end by partnumber why did on this one

00:13:41.120 --> 00:13:43.550
and so on so let's see if it work

00:13:43.550 --> 00:13:46.370
so this is called 2000rpm gee that's a

00:13:46.370 --> 00:13:48.740
hard-coded change right on that and it

00:13:48.740 --> 00:13:50.000
will take a little bit longer to

00:13:50.000 --> 00:13:56.640
creative ways maybe

00:13:56.640 --> 00:14:01.170
get coffee there we go light so it took

00:14:01.170 --> 00:14:03.120
a second to create the maid and it had

00:14:03.120 --> 00:14:06.090
760,000 node now when you consider that

00:14:06.090 --> 00:14:08.460
amazing with two thousand pixels by 2000

00:14:08.460 --> 00:14:11.910
pixels which is four million pixels and

00:14:11.910 --> 00:14:13.650
let's say half of them white on average

00:14:13.650 --> 00:14:15.750
then you would expect about 2,000 loads

00:14:15.750 --> 00:14:17.910
if you were doing it the bad way

00:14:17.910 --> 00:14:19.710
how about I try to save some money this

00:14:19.710 --> 00:14:21.210
way it's essentially what i'm doing it

00:14:21.210 --> 00:14:23.730
and then the actual the actual worm was

00:14:23.730 --> 00:14:24.900
it that further breadth-first search

00:14:24.900 --> 00:14:27.180
everyone i was breadth-first apparently

00:14:27.180 --> 00:14:30.180
punch my code it takes 15 seconds not no

00:14:30.180 --> 00:14:31.860
longer to get through that made and

00:14:31.860 --> 00:14:34.110
again using wizardry I will resume in on

00:14:34.110 --> 00:14:36.060
this and you can see it has found a path

00:14:36.060 --> 00:14:37.740
through so it looks like a general

00:14:37.740 --> 00:14:39.420
arcing path but if we zoom in you can

00:14:39.420 --> 00:14:40.770
see it's actually finding its way from

00:14:40.770 --> 00:14:43.110
quite complicated maze the last in class

00:14:43.110 --> 00:14:45.030
is that the two major i just put in

00:14:45.030 --> 00:14:47.400
that's open perfect mazes that means

00:14:47.400 --> 00:14:49.080
there's only one possible solution

00:14:49.080 --> 00:14:50.790
everything else is by definition a dead

00:14:50.790 --> 00:14:53.760
end now somebody's are like that like if

00:14:53.760 --> 00:14:54.600
you were to think of the Manhattan

00:14:54.600 --> 00:14:59.040
Bridge systems amazed then in some ways

00:14:59.040 --> 00:15:00.000
there's a lot of different parties could

00:15:00.000 --> 00:15:01.260
take and really what you want to do is

00:15:01.260 --> 00:15:03.120
find the shortest one tomato got here

00:15:03.120 --> 00:15:06.660
has multiple solutions to it and so for

00:15:06.660 --> 00:15:08.100
example if I want a depth-first search

00:15:08.100 --> 00:15:10.320
on it it will be going down the first

00:15:10.320 --> 00:15:12.570
part fine as far as possible and it may

00:15:12.570 --> 00:15:14.640
well not take the shortest path because

00:15:14.640 --> 00:15:17.430
it would just go down as part of our two

00:15:17.430 --> 00:15:18.660
cans and that part might lead to the

00:15:18.660 --> 00:15:21.000
exit it just might be very long so if i

00:15:21.000 --> 00:15:23.160
change my algorithm to this image and

00:15:23.160 --> 00:15:26.250
then get first right and we run it

00:15:26.250 --> 00:15:30.540
okay he didn't take long 6300 knows a

00:15:30.540 --> 00:15:31.950
hundredth of a second to actually

00:15:31.950 --> 00:15:34.410
calculate it but it found all kinds of

00:15:34.410 --> 00:15:36.450
super group through my mace and so calm

00:15:36.450 --> 00:15:38.520
down here and then up here again and

00:15:38.520 --> 00:15:40.350
back down here now the chances i

00:15:40.350 --> 00:15:41.910
probably just jumped across here or

00:15:41.910 --> 00:15:42.780
something silly

00:15:42.780 --> 00:15:44.310
it just didn't occur to in some sense

00:15:44.310 --> 00:15:45.930
because it was falling apart was on I

00:15:45.930 --> 00:15:47.430
mean they're searching better associated

00:15:47.430 --> 00:15:49.500
is two different problems like depending

00:15:49.500 --> 00:15:51.030
on the northern knows you want to expand

00:15:51.030 --> 00:15:53.250
but in this case suboptimal it would be

00:15:53.250 --> 00:15:55.110
the site is not not the optimal

00:15:55.110 --> 00:15:57.150
algorithm to use so I've also

00:15:57.150 --> 00:15:59.190
implemented better search and a star and

00:15:59.190 --> 00:16:02.670
Isis dices shortest path and so on if I

00:16:02.670 --> 00:16:04.830
turn turn it into Dykstra has a bit of

00:16:04.830 --> 00:16:06.390
overhead because you've got to set up

00:16:06.390 --> 00:16:08.400
your quality q which i'm using Fibonacci

00:16:08.400 --> 00:16:09.150
heat

00:16:09.150 --> 00:16:11.850
do that because if not he also in the

00:16:11.850 --> 00:16:13.890
code that reprogram yourself so if we

00:16:13.890 --> 00:16:15.930
run this so the path length that debt

00:16:15.930 --> 00:16:17.910
first found with a fountain world and

00:16:17.910 --> 00:16:19.590
the parkland dr establish will be the

00:16:19.590 --> 00:16:22.890
shortest path is 897 long they've been

00:16:22.890 --> 00:16:24.600
taking a bit longer to do it just could

00:16:24.600 --> 00:16:26.490
have many overhead mostly there we go

00:16:26.490 --> 00:16:28.500
about the actual shortest path through

00:16:28.500 --> 00:16:30.030
that maze which is significantly better

00:16:30.030 --> 00:16:31.680
than the last one

00:16:31.680 --> 00:16:33.270
yeah get download the code have a play

00:16:33.270 --> 00:16:35.100
around see if you couldn't work out what

00:16:35.100 --> 00:16:36.450
I've done and what I shouldn't have done

00:16:36.450 --> 00:16:39.000
that maybe you can fix it and then come

00:16:39.000 --> 00:16:40.500
up with a live album if you want to try

00:16:40.500 --> 00:16:42.180
to work your way through to make and

00:16:42.180 --> 00:16:43.470
depend on how much rather you have you

00:16:43.470 --> 00:16:45.210
can see what kind of that size have made

00:16:45.210 --> 00:16:47.010
it will handle and we look forward to

00:16:47.010 --> 00:16:48.480
seeing some more pictures

00:16:48.480 --> 00:16:54.150
yes but partner isn't as fast as doing

00:16:54.150 --> 00:16:55.740
this in depth they see something like

00:16:55.740 --> 00:16:59.100
that but it's not too bad and absolute

00:16:59.100 --> 00:17:00.600
speed is not important for this because

00:17:00.600 --> 00:17:02.400
i was just looking for fun and deceive

00:17:02.400 --> 00:17:07.770
see you know with work right so you know

00:17:07.770 --> 00:17:10.440
if you want to be implemented in a park

00:17:10.440 --> 00:17:12.000
language is not the point arithmetic and

00:17:12.000 --> 00:17:16.070
so on been you know go for it but

