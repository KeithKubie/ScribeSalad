WEBVTT
Kind: captions
Language: en

00:00:00.130 --> 00:00:02.540
So let's finish this clustering process. So

00:00:02.540 --> 00:00:04.000
what were you thinking of doing next?

00:00:04.000 --> 00:00:07.320
&gt;&gt; Well, D and F and B and G, we both

00:00:07.320 --> 00:00:09.120
thought were pretty close. So let's just do D and F.

00:00:09.120 --> 00:00:10.740
&gt;&gt; Well, D and F doesn't matter much

00:00:10.740 --> 00:00:12.380
anymore because they're already in the same cluster.

00:00:12.380 --> 00:00:14.230
&gt;&gt; Oh, that's a good point. That's a good point.

00:00:14.230 --> 00:00:16.570
&gt;&gt; So what is their inter cluster distance?

00:00:16.570 --> 00:00:17.130
&gt;&gt; It's zero.

00:00:17.130 --> 00:00:17.860
&gt;&gt; Yes.

00:00:17.860 --> 00:00:18.840
&gt;&gt; because they're in the same cluster.

00:00:18.840 --> 00:00:20.100
That's a fun point you make there, Michael.

00:00:20.100 --> 00:00:21.340
&gt;&gt; Sure.

00:00:21.340 --> 00:00:25.380
&gt;&gt; How about B and G then? I like B and G. And what do we do next?

00:00:25.380 --> 00:00:30.150
&gt;&gt; Well, we have two, two nice clusters. So, actually

00:00:30.150 --> 00:00:32.280
if we were to merge the next cluster. We would

00:00:32.280 --> 00:00:35.132
end up with, I guess b and d together. Doesn't

00:00:35.132 --> 00:00:37.250
really matter because it's going to merge the last two clusters together.

00:00:37.250 --> 00:00:39.850
&gt;&gt; Yeah. So, in particular what I was what I was

00:00:39.850 --> 00:00:42.500
getting at is we don't do any emerging next because now this

00:00:42.500 --> 00:00:45.500
repeat loop is done. So that's, this is what we end

00:00:45.500 --> 00:00:48.167
up with assuming that we had started off setting K equals two.

00:00:48.167 --> 00:00:48.917
&gt;&gt; Um-hm.

00:00:48.917 --> 00:00:50.630
&gt;&gt; Then, then we're done at this point.

00:00:50.630 --> 00:00:52.990
We have what looks like a backwards R and

00:00:52.990 --> 00:00:56.240
a funny looking, actually they look like Hebrew letters to

00:00:56.240 --> 00:00:58.850
me but that's probably not a universal perspective. So

00:00:58.850 --> 00:01:01.030
just one other thing to point out quickly. So we

00:01:01.030 --> 00:01:04.599
can represent the series of merges that we did

00:01:04.599 --> 00:01:06.860
using a structure that's kind of like this. We merged

00:01:06.860 --> 00:01:12.460
a and b first, and then we merged c and d. And then we merged, I think d and e?

00:01:12.460 --> 00:01:12.940
&gt;&gt; Yeah.

00:01:12.940 --> 00:01:15.960
&gt;&gt; Or the c, d, and e. And then we merged

00:01:15.960 --> 00:01:20.790
e and f. And then we merged g and the, and the ab cluster. And

00:01:20.790 --> 00:01:24.430
then that left us with the two clusters. So, this, in some sense it, we've

00:01:24.430 --> 00:01:26.380
captured the same information about what's connected

00:01:26.380 --> 00:01:27.730
with what. But this is kind of a

00:01:27.730 --> 00:01:29.440
nice way of representing it, because it actually

00:01:29.440 --> 00:01:32.690
gives us a hierarchical structure. A tree structure.

00:01:32.690 --> 00:01:35.000
&gt;&gt; A kind of hierarchical agglomerative structure.

00:01:35.000 --> 00:01:37.710
&gt;&gt; And there's lots of applications where it's actually useful to have

00:01:37.710 --> 00:01:41.270
that, that extra bit of information. because we can now very easily,

00:01:41.270 --> 00:01:42.980
look at remember, in the beginning you

00:01:42.980 --> 00:01:44.650
said that you could see three clusters? Well

00:01:44.650 --> 00:01:48.370
you can see if you just cut this tree structure here, we get, we get the

00:01:48.370 --> 00:01:51.100
three. Oh. Not quite. We almost get the

00:01:51.100 --> 00:01:53.070
three clusters that you wanted. Here it looks

00:01:53.070 --> 00:01:54.840
like f is separated from the others. It

00:01:54.840 --> 00:01:57.410
depends which, which distances we thought were closer.

00:01:57.410 --> 00:02:00.440
&gt;&gt; And also if you combine those two clusters again, the last two

00:02:00.440 --> 00:02:04.000
clusters, then basically you, you have a true tree with a single root.

00:02:04.000 --> 00:02:06.590
&gt;&gt; That's right. And, and that's kind of, that summarizes

00:02:06.590 --> 00:02:08.810
all the different cluster structures that you

00:02:08.810 --> 00:02:10.258
can get out of single link clustering.

00:02:10.258 --> 00:02:12.680
&gt;&gt; Hm, I like that. So I have a question, Michael.

00:02:12.680 --> 00:02:13.420
&gt;&gt; Shoot.

00:02:14.470 --> 00:02:15.700
&gt;&gt; Well I have two questions. The first question

00:02:15.700 --> 00:02:17.690
is do you know the difference between further and farther?

00:02:18.750 --> 00:02:20.740
&gt;&gt; I do, though. I sometimes use them interchangeably.

00:02:20.740 --> 00:02:25.390
&gt;&gt; Yeah, it turns out interestingly enough that that definitions

00:02:25.390 --> 00:02:28.840
are further and farther switch every 100 years or so

00:02:28.840 --> 00:02:30.430
&gt;&gt; Hm

00:02:30.430 --> 00:02:31.600
&gt;&gt; And unfortunately I was

00:02:31.600 --> 00:02:34.140
born in a time period where they're switching meanings again

00:02:34.140 --> 00:02:36.270
and so it drives me nuts. But in any case

00:02:36.270 --> 00:02:40.740
for our listeners, further farther means physical distance, and further

00:02:40.740 --> 00:02:43.990
means metaphysical or metaphorical distance. So one lives farther down the

00:02:43.990 --> 00:02:47.730
road, but goes further into debt. And you should almost

00:02:47.730 --> 00:02:50.890
never confuse the two, the people currently are using further

00:02:50.890 --> 00:02:52.890
as if it means farther. So I have a question

00:02:52.890 --> 00:02:56.660
here for you, which is you define the inter cluster distance

00:02:56.660 --> 00:02:59.570
as the distance between the closest two points in the two clusters

00:02:59.570 --> 00:03:00.890
&gt;&gt; Yep, that's what it says right here.

00:03:00.890 --> 00:03:04.410
&gt;&gt; Yeah, as if that were an immutable fact of the

00:03:04.410 --> 00:03:06.880
algorithm. Is it, or could we do something else? What would

00:03:06.880 --> 00:03:10.740
happen if we picked average distance or distance between the farthest

00:03:10.740 --> 00:03:14.000
two points as opposed to furthest two points or some other measure?

00:03:14.000 --> 00:03:16.840
&gt;&gt; [LAUGH]

00:03:16.840 --> 00:03:18.470
Well, we don't know if this is physicaly distance

00:03:18.470 --> 00:03:21.890
or metaphotical distance, right? Or metaphysical distance, it's just d.

00:03:21.890 --> 00:03:23.330
&gt;&gt; That's true.

00:03:23.330 --> 00:03:26.600
&gt;&gt; So it's like, we'll call it forthest, with an o.

00:03:26.600 --> 00:03:29.081
&gt;&gt; [LAUGH] Please don't.

00:03:29.081 --> 00:03:31.920
&gt;&gt; The forthest point. Yes good. And

00:03:31.920 --> 00:03:34.360
average is another one. That's true. Yeah, these

00:03:34.360 --> 00:03:36.210
are different things you could define. I,

00:03:36.210 --> 00:03:38.150
my recollection of this is, they're no longer

00:03:38.150 --> 00:03:40.810
single link clustering. Single link clustering is

00:03:40.810 --> 00:03:42.960
defined to be closest. But you also have

00:03:42.960 --> 00:03:45.750
other things like average link clustering, which

00:03:45.750 --> 00:03:47.370
I think is the one with the average.

00:03:47.370 --> 00:03:49.560
And then there's maybe max link clustering. I forget

00:03:49.560 --> 00:03:52.030
exactly what it's called where it does the for list.

00:03:52.030 --> 00:03:57.280
&gt;&gt; I think I saw a talk once as I didn't

00:03:57.280 --> 00:04:01.080
understand which had to do with median distances. And that somehow

00:04:01.080 --> 00:04:04.230
you could prove interesting things because of it as opposed to

00:04:04.230 --> 00:04:06.770
the mean, which is what I think you mean by average there.

00:04:06.770 --> 00:04:12.440
&gt;&gt; Yeah. Average meaning mean. Yeah, I mean, generally,

00:04:12.440 --> 00:04:15.770
things like median are really good if the

00:04:15.770 --> 00:04:18.620
numbers on the distances don't matter, just their orderings.

00:04:18.620 --> 00:04:19.550
&gt;&gt; Mm.

00:04:19.550 --> 00:04:22.110
&gt;&gt; So, sometimes people dif, describe that as being

00:04:22.110 --> 00:04:25.650
metric versus non-metric. Non-metric, median is usually a non-metric

00:04:25.650 --> 00:04:28.430
statistic. Average is, is a metric statistic. It actually,

00:04:28.430 --> 00:04:30.540
the, the details of the numbers matter a lot.

00:04:30.540 --> 00:04:33.200
&gt;&gt; Okay. Well that all makes sense I guess the basic idea is

00:04:33.200 --> 00:04:37.810
that what I was saying before that the distance was some notion of where

00:04:37.810 --> 00:04:39.360
your domain knowledge comes in. I guess it's

00:04:39.360 --> 00:04:42.360
also true that the, how you define intercluster

00:04:42.360 --> 00:04:44.310
distance is also a kind of domain knowledge.

00:04:44.310 --> 00:04:46.620
It's another parameter to the algorithm. That seem fair?

00:04:46.620 --> 00:04:47.430
&gt;&gt; Yeah.

00:04:47.430 --> 00:04:48.070
&gt;&gt; Okay.

