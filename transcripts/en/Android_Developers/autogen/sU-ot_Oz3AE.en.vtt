WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.460
[Music]

00:00:06.460 --> 00:00:06.470
[Music]
 

00:00:06.470 --> 00:00:09.980
[Music]
today we are going to talk about room so

00:00:09.980 --> 00:00:09.990
today we are going to talk about room so
 

00:00:09.990 --> 00:00:12.620
today we are going to talk about room so
we ask people to write offline ready

00:00:12.620 --> 00:00:12.630
we ask people to write offline ready
 

00:00:12.630 --> 00:00:14.030
we ask people to write offline ready
applications throughout your application

00:00:14.030 --> 00:00:14.040
applications throughout your application
 

00:00:14.040 --> 00:00:17.480
applications throughout your application
to work without a network connection but

00:00:17.480 --> 00:00:17.490
to work without a network connection but
 

00:00:17.490 --> 00:00:20.210
to work without a network connection but
if you don't have a proper model inside

00:00:20.210 --> 00:00:20.220
if you don't have a proper model inside
 

00:00:20.220 --> 00:00:21.890
if you don't have a proper model inside
your application it's pretty much

00:00:21.890 --> 00:00:21.900
your application it's pretty much
 

00:00:21.900 --> 00:00:23.929
your application it's pretty much
impossible to write a good offline

00:00:23.929 --> 00:00:23.939
impossible to write a good offline
 

00:00:23.939 --> 00:00:26.839
impossible to write a good offline
explains so for that reason you do need

00:00:26.839 --> 00:00:26.849
explains so for that reason you do need
 

00:00:26.849 --> 00:00:30.019
explains so for that reason you do need
a database luckily on Android we have

00:00:30.019 --> 00:00:30.029
a database luckily on Android we have
 

00:00:30.029 --> 00:00:32.780
a database luckily on Android we have
SQLite and SQLite is a really really

00:00:32.780 --> 00:00:32.790
SQLite and SQLite is a really really
 

00:00:32.790 --> 00:00:35.900
SQLite and SQLite is a really really
awesome technology it's very fast and

00:00:35.900 --> 00:00:35.910
awesome technology it's very fast and
 

00:00:35.910 --> 00:00:38.510
awesome technology it's very fast and
when you need to optimize it for your

00:00:38.510 --> 00:00:38.520
when you need to optimize it for your
 

00:00:38.520 --> 00:00:42.319
when you need to optimize it for your
use case it's very easy to do so it's a

00:00:42.319 --> 00:00:42.329
use case it's very easy to do so it's a
 

00:00:42.329 --> 00:00:43.970
use case it's very easy to do so it's a
very powerful query language you can

00:00:43.970 --> 00:00:43.980
very powerful query language you can
 

00:00:43.980 --> 00:00:46.639
very powerful query language you can
express many different things and make

00:00:46.639 --> 00:00:46.649
express many different things and make
 

00:00:46.649 --> 00:00:48.950
express many different things and make
it concise and easily grab the data is

00:00:48.950 --> 00:00:48.960
it concise and easily grab the data is
 

00:00:48.960 --> 00:00:50.779
it concise and easily grab the data is
the biggest advantage compared to other

00:00:50.779 --> 00:00:50.789
the biggest advantage compared to other
 

00:00:50.789 --> 00:00:53.990
the biggest advantage compared to other
object stores or key value stores and

00:00:53.990 --> 00:00:54.000
object stores or key value stores and
 

00:00:54.000 --> 00:00:56.750
object stores or key value stores and
SQLite also skills very well I mean for

00:00:56.750 --> 00:00:56.760
SQLite also skills very well I mean for
 

00:00:56.760 --> 00:00:58.369
SQLite also skills very well I mean for
an application you probably won't have

00:00:58.369 --> 00:00:58.379
an application you probably won't have
 

00:00:58.379 --> 00:00:59.599
an application you probably won't have
much data but you can have multiple

00:00:59.599 --> 00:00:59.609
much data but you can have multiple
 

00:00:59.609 --> 00:01:01.520
much data but you can have multiple
gigabytes of data and SQLite will be

00:01:01.520 --> 00:01:01.530
gigabytes of data and SQLite will be
 

00:01:01.530 --> 00:01:04.399
gigabytes of data and SQLite will be
just fine and as company is using it on

00:01:04.399 --> 00:01:04.409
just fine and as company is using it on
 

00:01:04.409 --> 00:01:06.620
just fine and as company is using it on
the back end so for your like scalable

00:01:06.620 --> 00:01:06.630
the back end so for your like scalable
 

00:01:06.630 --> 00:01:08.510
the back end so for your like scalable
to data size these SQLite will be

00:01:08.510 --> 00:01:08.520
to data size these SQLite will be
 

00:01:08.520 --> 00:01:09.580
to data size these SQLite will be
perfect

00:01:09.580 --> 00:01:09.590
perfect
 

00:01:09.590 --> 00:01:14.630
perfect
now SQLite on Android was not that cool

00:01:14.630 --> 00:01:14.640
now SQLite on Android was not that cool
 

00:01:14.640 --> 00:01:16.999
now SQLite on Android was not that cool
you need to write out of boilerplate

00:01:16.999 --> 00:01:17.009
you need to write out of boilerplate
 

00:01:17.009 --> 00:01:19.039
you need to write out of boilerplate
code to convert between your Java code

00:01:19.039 --> 00:01:19.049
code to convert between your Java code
 

00:01:19.049 --> 00:01:22.820
code to convert between your Java code
line objects on your SQLite there is no

00:01:22.820 --> 00:01:22.830
line objects on your SQLite there is no
 

00:01:22.830 --> 00:01:24.560
line objects on your SQLite there is no
compile time safety so if you are

00:01:24.560 --> 00:01:24.570
compile time safety so if you are
 

00:01:24.570 --> 00:01:26.810
compile time safety so if you are
building in SQL query and you forget

00:01:26.810 --> 00:01:26.820
building in SQL query and you forget
 

00:01:26.820 --> 00:01:29.420
building in SQL query and you forget
like a one comma if case you're going to

00:01:29.420 --> 00:01:29.430
like a one comma if case you're going to
 

00:01:29.430 --> 00:01:31.249
like a one comma if case you're going to
get a runtime crash and it's very hard

00:01:31.249 --> 00:01:31.259
get a runtime crash and it's very hard
 

00:01:31.259 --> 00:01:34.460
get a runtime crash and it's very hard
to test all those cases you can also

00:01:34.460 --> 00:01:34.470
to test all those cases you can also
 

00:01:34.470 --> 00:01:36.679
to test all those cases you can also
cannot observe what has change that we

00:01:36.679 --> 00:01:36.689
cannot observe what has change that we
 

00:01:36.689 --> 00:01:38.090
cannot observe what has change that we
want people to write reactive

00:01:38.090 --> 00:01:38.100
want people to write reactive
 

00:01:38.100 --> 00:01:39.980
want people to write reactive
applications or react to us and if you

00:01:39.980 --> 00:01:39.990
applications or react to us and if you
 

00:01:39.990 --> 00:01:42.679
applications or react to us and if you
cannot observe your data model it's kind

00:01:42.679 --> 00:01:42.689
cannot observe your data model it's kind
 

00:01:42.689 --> 00:01:46.160
cannot observe your data model it's kind
of hard you have to build it yourself so

00:01:46.160 --> 00:01:46.170
of hard you have to build it yourself so
 

00:01:46.170 --> 00:01:50.120
of hard you have to build it yourself so
we build it for you so a two years ago

00:01:50.120 --> 00:01:50.130
we build it for you so a two years ago
 

00:01:50.130 --> 00:01:52.639
we build it for you so a two years ago
we ship room we introduced the compile

00:01:52.639 --> 00:01:52.649
we ship room we introduced the compile
 

00:01:52.649 --> 00:01:54.980
we ship room we introduced the compile
time safety we introduced observable T

00:01:54.980 --> 00:01:54.990
time safety we introduced observable T
 

00:01:54.990 --> 00:01:56.870
time safety we introduced observable T
and we introduced the strong IDE

00:01:56.870 --> 00:01:56.880
and we introduced the strong IDE
 

00:01:56.880 --> 00:01:59.030
and we introduced the strong IDE
integration as you can notice with like

00:01:59.030 --> 00:01:59.040
integration as you can notice with like
 

00:01:59.040 --> 00:02:01.219
integration as you can notice with like
we drew with navigation this is a big

00:02:01.219 --> 00:02:01.229
we drew with navigation this is a big
 

00:02:01.229 --> 00:02:03.590
we drew with navigation this is a big
team for us we want to develop libraries

00:02:03.590 --> 00:02:03.600
team for us we want to develop libraries
 

00:02:03.600 --> 00:02:06.109
team for us we want to develop libraries
together with Android studio to provide

00:02:06.109 --> 00:02:06.119
together with Android studio to provide
 

00:02:06.119 --> 00:02:09.919
together with Android studio to provide
a nice user experience then this year's

00:02:09.919 --> 00:02:09.929
a nice user experience then this year's
 

00:02:09.929 --> 00:02:12.170
a nice user experience then this year's
i/o we introduced writer logging which

00:02:12.170 --> 00:02:12.180
i/o we introduced writer logging which
 

00:02:12.180 --> 00:02:13.910
i/o we introduced writer logging which
subida SQLite

00:02:13.910 --> 00:02:13.920
subida SQLite
 

00:02:13.920 --> 00:02:16.040
subida SQLite
and we also introduced support for

00:02:16.040 --> 00:02:16.050
and we also introduced support for
 

00:02:16.050 --> 00:02:18.080
and we also introduced support for
Beijing so that you can have very large

00:02:18.080 --> 00:02:18.090
Beijing so that you can have very large
 

00:02:18.090 --> 00:02:20.449
Beijing so that you can have very large
data sets queries and you can easily

00:02:20.449 --> 00:02:20.459
data sets queries and you can easily
 

00:02:20.459 --> 00:02:24.199
data sets queries and you can easily
load them in Terry cycler wheel 2.0

00:02:24.199 --> 00:02:24.209
load them in Terry cycler wheel 2.0
 

00:02:24.209 --> 00:02:26.360
load them in Terry cycler wheel 2.0
release is just our conversion from

00:02:26.360 --> 00:02:26.370
release is just our conversion from
 

00:02:26.370 --> 00:02:29.570
release is just our conversion from
Android support to Android X and we kept

00:02:29.570 --> 00:02:29.580
Android support to Android X and we kept
 

00:02:29.580 --> 00:02:31.430
Android support to Android X and we kept
it the same as one point one so that you

00:02:31.430 --> 00:02:31.440
it the same as one point one so that you
 

00:02:31.440 --> 00:02:35.090
it the same as one point one so that you
can have an easy migration and two point

00:02:35.090 --> 00:02:35.100
can have an easy migration and two point
 

00:02:35.100 --> 00:02:37.220
can have an easy migration and two point
one is what we are going to talk about

00:02:37.220 --> 00:02:37.230
one is what we are going to talk about
 

00:02:37.230 --> 00:02:39.170
one is what we are going to talk about
today and this is actually kind of the

00:02:39.170 --> 00:02:39.180
today and this is actually kind of the
 

00:02:39.180 --> 00:02:42.830
today and this is actually kind of the
Excel 2.0 it's a very large release we

00:02:42.830 --> 00:02:42.840
Excel 2.0 it's a very large release we
 

00:02:42.840 --> 00:02:45.770
Excel 2.0 it's a very large release we
have like full-text search we use multi

00:02:45.770 --> 00:02:45.780
have like full-text search we use multi
 

00:02:45.780 --> 00:02:48.020
have like full-text search we use multi
instance foundation auto valium or rx

00:02:48.020 --> 00:02:48.030
instance foundation auto valium or rx
 

00:02:48.030 --> 00:02:50.240
instance foundation auto valium or rx
stuff so let's talk about them

00:02:50.240 --> 00:02:50.250
stuff so let's talk about them
 

00:02:50.250 --> 00:02:52.880
stuff so let's talk about them
Suite one of the pretty cool new

00:02:52.880 --> 00:02:52.890
Suite one of the pretty cool new
 

00:02:52.890 --> 00:02:55.130
Suite one of the pretty cool new
features we are in 2.1 it's full text

00:02:55.130 --> 00:02:55.140
features we are in 2.1 it's full text
 

00:02:55.140 --> 00:02:58.400
features we are in 2.1 it's full text
search or FPS and FPS is basically a way

00:02:58.400 --> 00:02:58.410
search or FPS and FPS is basically a way
 

00:02:58.410 --> 00:03:01.160
search or FPS and FPS is basically a way
to index text document and make them

00:03:01.160 --> 00:03:01.170
to index text document and make them
 

00:03:01.170 --> 00:03:03.560
to index text document and make them
searchable it's a little let's take a

00:03:03.560 --> 00:03:03.570
searchable it's a little let's take a
 

00:03:03.570 --> 00:03:06.770
searchable it's a little let's take a
look at an example imagine we have a

00:03:06.770 --> 00:03:06.780
look at an example imagine we have a
 

00:03:06.780 --> 00:03:09.140
look at an example imagine we have a
music app and we want a search

00:03:09.140 --> 00:03:09.150
music app and we want a search
 

00:03:09.150 --> 00:03:10.550
music app and we want a search
functionality to it you know you have a

00:03:10.550 --> 00:03:10.560
functionality to it you know you have a
 

00:03:10.560 --> 00:03:12.710
functionality to it you know you have a
search box you want to type something

00:03:12.710 --> 00:03:12.720
search box you want to type something
 

00:03:12.720 --> 00:03:15.130
search box you want to type something
and you want to be able to find songs

00:03:15.130 --> 00:03:15.140
and you want to be able to find songs
 

00:03:15.140 --> 00:03:18.500
and you want to be able to find songs
within the music app if we have room you

00:03:18.500 --> 00:03:18.510
within the music app if we have room you
 

00:03:18.510 --> 00:03:22.370
within the music app if we have room you
know we express we store this song data

00:03:22.370 --> 00:03:22.380
know we express we store this song data
 

00:03:22.380 --> 00:03:25.520
know we express we store this song data
in a table that's an entity conveniently

00:03:25.520 --> 00:03:25.530
in a table that's an entity conveniently
 

00:03:25.530 --> 00:03:27.949
in a table that's an entity conveniently
we have or label as an embedded updates

00:03:27.949 --> 00:03:27.959
we have or label as an embedded updates
 

00:03:27.959 --> 00:03:31.430
we have or label as an embedded updates
and or some labels you know what's the

00:03:31.430 --> 00:03:31.440
and or some labels you know what's the
 

00:03:31.440 --> 00:03:33.050
and or some labels you know what's the
sound name the album name an artist name

00:03:33.050 --> 00:03:33.060
sound name the album name an artist name
 

00:03:33.060 --> 00:03:35.259
sound name the album name an artist name
this is kind of like what we want to

00:03:35.259 --> 00:03:35.269
this is kind of like what we want to
 

00:03:35.269 --> 00:03:39.410
this is kind of like what we want to
search and make the index if we were to

00:03:39.410 --> 00:03:39.420
search and make the index if we were to
 

00:03:39.420 --> 00:03:42.289
search and make the index if we were to
do this with our ftes right now you know

00:03:42.289 --> 00:03:42.299
do this with our ftes right now you know
 

00:03:42.299 --> 00:03:46.270
do this with our ftes right now you know
we need to write a query and basically

00:03:46.270 --> 00:03:46.280
we need to write a query and basically
 

00:03:46.280 --> 00:03:50.060
we need to write a query and basically
you have to use the like operator this

00:03:50.060 --> 00:03:50.070
you have to use the like operator this
 

00:03:50.070 --> 00:03:53.949
you have to use the like operator this
is not very good it's very limited that

00:03:53.949 --> 00:03:53.959
is not very good it's very limited that
 

00:03:53.959 --> 00:03:56.030
is not very good it's very limited that
percentage sign it's kind of like a wild

00:03:56.030 --> 00:03:56.040
percentage sign it's kind of like a wild
 

00:03:56.040 --> 00:03:58.940
percentage sign it's kind of like a wild
card and this basically causes a full

00:03:58.940 --> 00:03:58.950
card and this basically causes a full
 

00:03:58.950 --> 00:04:01.729
card and this basically causes a full
table scan yeah like even a few index

00:04:01.729 --> 00:04:01.739
table scan yeah like even a few index
 

00:04:01.739 --> 00:04:03.680
table scan yeah like even a few index
that query column in the database

00:04:03.680 --> 00:04:03.690
that query column in the database
 

00:04:03.690 --> 00:04:05.960
that query column in the database
SQLite will not be able to use that

00:04:05.960 --> 00:04:05.970
SQLite will not be able to use that
 

00:04:05.970 --> 00:04:07.819
SQLite will not be able to use that
index because the index only works if

00:04:07.819 --> 00:04:07.829
index because the index only works if
 

00:04:07.829 --> 00:04:09.920
index because the index only works if
you are doing a prefix search which is

00:04:09.920 --> 00:04:09.930
you are doing a prefix search which is
 

00:04:09.930 --> 00:04:12.440
you are doing a prefix search which is
not what you want to do here yeah so

00:04:12.440 --> 00:04:12.450
not what you want to do here yeah so
 

00:04:12.450 --> 00:04:17.659
not what you want to do here yeah so
don't do this moreover if you try to

00:04:17.659 --> 00:04:17.669
don't do this moreover if you try to
 

00:04:17.669 --> 00:04:20.509
don't do this moreover if you try to
actually search across almond or an

00:04:20.509 --> 00:04:20.519
actually search across almond or an
 

00:04:20.519 --> 00:04:22.339
actually search across almond or an
artist you have to expand this query and

00:04:22.339 --> 00:04:22.349
artist you have to expand this query and
 

00:04:22.349 --> 00:04:24.080
artist you have to expand this query and
this as you can see doesn't doesn't

00:04:24.080 --> 00:04:24.090
this as you can see doesn't doesn't
 

00:04:24.090 --> 00:04:28.100
this as you can see doesn't doesn't
easily scale FTEs help us with this

00:04:28.100 --> 00:04:28.110
easily scale FTEs help us with this
 

00:04:28.110 --> 00:04:30.440
easily scale FTEs help us with this
because it create it now creates a

00:04:30.440 --> 00:04:30.450
because it create it now creates a
 

00:04:30.450 --> 00:04:33.290
because it create it now creates a
virtual table and all the other columns

00:04:33.290 --> 00:04:33.300
virtual table and all the other columns
 

00:04:33.300 --> 00:04:35.870
virtual table and all the other columns
are indexed and to use FTS you just now

00:04:35.870 --> 00:04:35.880
are indexed and to use FTS you just now
 

00:04:35.880 --> 00:04:40.940
are indexed and to use FTS you just now
annotate your entity with FTS now in the

00:04:40.940 --> 00:04:40.950
annotate your entity with FTS now in the
 

00:04:40.950 --> 00:04:42.440
annotate your entity with FTS now in the
query instead of using like you would

00:04:42.440 --> 00:04:42.450
query instead of using like you would
 

00:04:42.450 --> 00:04:44.090
query instead of using like you would
use match which is a different operator

00:04:44.090 --> 00:04:44.100
use match which is a different operator
 

00:04:44.100 --> 00:04:46.580
use match which is a different operator
and as you can see here we use square

00:04:46.580 --> 00:04:46.590
and as you can see here we use square
 

00:04:46.590 --> 00:04:48.910
and as you can see here we use square
spawn so we're using the same table name

00:04:48.910 --> 00:04:48.920
spawn so we're using the same table name
 

00:04:48.920 --> 00:04:51.230
spawn so we're using the same table name
as our column in our were statement and

00:04:51.230 --> 00:04:51.240
as our column in our were statement and
 

00:04:51.240 --> 00:04:54.200
as our column in our were statement and
that basically tells the match operation

00:04:54.200 --> 00:04:54.210
that basically tells the match operation
 

00:04:54.210 --> 00:04:55.790
that basically tells the match operation
that you want to search across all those

00:04:55.790 --> 00:04:55.800
that you want to search across all those
 

00:04:55.800 --> 00:04:57.800
that you want to search across all those
labels so this helped us with searching

00:04:57.800 --> 00:04:57.810
labels so this helped us with searching
 

00:04:57.810 --> 00:04:59.540
labels so this helped us with searching
across our Tunes an album if you have an

00:04:59.540 --> 00:04:59.550
across our Tunes an album if you have an
 

00:04:59.550 --> 00:05:05.060
across our Tunes an album if you have an
omnibus you might say oh then I can use

00:05:05.060 --> 00:05:05.070
omnibus you might say oh then I can use
 

00:05:05.070 --> 00:05:07.490
omnibus you might say oh then I can use
FDS on all of my tables if I have an

00:05:07.490 --> 00:05:07.500
FDS on all of my tables if I have an
 

00:05:07.500 --> 00:05:09.909
FDS on all of my tables if I have an
extreme but not quite so using FTS

00:05:09.909 --> 00:05:09.919
extreme but not quite so using FTS
 

00:05:09.919 --> 00:05:12.380
extreme but not quite so using FTS
consumes more disk space and the reason

00:05:12.380 --> 00:05:12.390
consumes more disk space and the reason
 

00:05:12.390 --> 00:05:15.050
consumes more disk space and the reason
is because when you create an SDS table

00:05:15.050 --> 00:05:15.060
is because when you create an SDS table
 

00:05:15.060 --> 00:05:16.490
is because when you create an SDS table
you actually create a retool table and

00:05:16.490 --> 00:05:16.500
you actually create a retool table and
 

00:05:16.500 --> 00:05:19.130
you actually create a retool table and
that's back by a few tables where your

00:05:19.130 --> 00:05:19.140
that's back by a few tables where your
 

00:05:19.140 --> 00:05:21.050
that's back by a few tables where your
content is and a lot of the indexing

00:05:21.050 --> 00:05:21.060
content is and a lot of the indexing
 

00:05:21.060 --> 00:05:23.360
content is and a lot of the indexing
information this is known as chatter

00:05:23.360 --> 00:05:23.370
information this is known as chatter
 

00:05:23.370 --> 00:05:26.300
information this is known as chatter
tables when you actually query from your

00:05:26.300 --> 00:05:26.310
tables when you actually query from your
 

00:05:26.310 --> 00:05:27.980
tables when you actually query from your
Beatle table the information actually

00:05:27.980 --> 00:05:27.990
Beatle table the information actually
 

00:05:27.990 --> 00:05:31.070
Beatle table the information actually
comes from these tables there's also a

00:05:31.070 --> 00:05:31.080
comes from these tables there's also a
 

00:05:31.080 --> 00:05:34.760
comes from these tables there's also a
few drawbacks also to FTS you cannot

00:05:34.760 --> 00:05:34.770
few drawbacks also to FTS you cannot
 

00:05:34.770 --> 00:05:37.040
few drawbacks also to FTS you cannot
have foreign keys on your entity or come

00:05:37.040 --> 00:05:37.050
have foreign keys on your entity or come
 

00:05:37.050 --> 00:05:40.370
have foreign keys on your entity or come
or compose primary keys but there's one

00:05:40.370 --> 00:05:40.380
or compose primary keys but there's one
 

00:05:40.380 --> 00:05:43.010
or compose primary keys but there's one
pretty neat feature which is external

00:05:43.010 --> 00:05:43.020
pretty neat feature which is external
 

00:05:43.020 --> 00:05:46.820
pretty neat feature which is external
content and let's go back to our song

00:05:46.820 --> 00:05:46.830
content and let's go back to our song
 

00:05:46.830 --> 00:05:49.070
content and let's go back to our song
entity if we wanted to instead use our

00:05:49.070 --> 00:05:49.080
entity if we wanted to instead use our
 

00:05:49.080 --> 00:05:51.770
entity if we wanted to instead use our
real table and create a second table for

00:05:51.770 --> 00:05:51.780
real table and create a second table for
 

00:05:51.780 --> 00:05:55.100
real table and create a second table for
only our labels we just basically use

00:05:55.100 --> 00:05:55.110
only our labels we just basically use
 

00:05:55.110 --> 00:05:57.770
only our labels we just basically use
that fds annotation but we tell it hey

00:05:57.770 --> 00:05:57.780
that fds annotation but we tell it hey
 

00:05:57.780 --> 00:05:59.960
that fds annotation but we tell it hey
my data is actually gonna be storing

00:05:59.960 --> 00:05:59.970
my data is actually gonna be storing
 

00:05:59.970 --> 00:06:03.010
my data is actually gonna be storing
this other real table that I already had

00:06:03.010 --> 00:06:03.020
this other real table that I already had
 

00:06:03.020 --> 00:06:06.200
this other real table that I already had
conveniently this new data class and the

00:06:06.200 --> 00:06:06.210
conveniently this new data class and the
 

00:06:06.210 --> 00:06:08.180
conveniently this new data class and the
virtual table only has the labels so in

00:06:08.180 --> 00:06:08.190
virtual table only has the labels so in
 

00:06:08.190 --> 00:06:09.200
virtual table only has the labels so in
a previous example

00:06:09.200 --> 00:06:09.210
a previous example
 

00:06:09.210 --> 00:06:11.960
a previous example
everything was indexed so even the URL

00:06:11.960 --> 00:06:11.970
everything was indexed so even the URL
 

00:06:11.970 --> 00:06:14.090
everything was indexed so even the URL
which is not quite what we wanted to

00:06:14.090 --> 00:06:14.100
which is not quite what we wanted to
 

00:06:14.100 --> 00:06:16.340
which is not quite what we wanted to
index in this case we only have the

00:06:16.340 --> 00:06:16.350
index in this case we only have the
 

00:06:16.350 --> 00:06:17.290
index in this case we only have the
labels

00:06:17.290 --> 00:06:17.300
labels
 

00:06:17.300 --> 00:06:20.420
labels
what happens now says we have a virtual

00:06:20.420 --> 00:06:20.430
what happens now says we have a virtual
 

00:06:20.430 --> 00:06:22.790
what happens now says we have a virtual
table in front of it asana TS and behind

00:06:22.790 --> 00:06:22.800
table in front of it asana TS and behind
 

00:06:22.800 --> 00:06:24.920
table in front of it asana TS and behind
it it has the same shadow tables for

00:06:24.920 --> 00:06:24.930
it it has the same shadow tables for
 

00:06:24.930 --> 00:06:27.140
it it has the same shadow tables for
anything but the actual content is

00:06:27.140 --> 00:06:27.150
anything but the actual content is
 

00:06:27.150 --> 00:06:29.390
anything but the actual content is
stored in the original some table that

00:06:29.390 --> 00:06:29.400
stored in the original some table that
 

00:06:29.400 --> 00:06:32.780
stored in the original some table that
we had this is way better in saving this

00:06:32.780 --> 00:06:32.790
we had this is way better in saving this
 

00:06:32.790 --> 00:06:34.400
we had this is way better in saving this
space and it's a little bit more

00:06:34.400 --> 00:06:34.410
space and it's a little bit more
 

00:06:34.410 --> 00:06:39.350
space and it's a little bit more
flexible to query this external content

00:06:39.350 --> 00:06:39.360
flexible to query this external content
 

00:06:39.360 --> 00:06:41.450
flexible to query this external content
place FTS table with external content

00:06:41.450 --> 00:06:41.460
place FTS table with external content
 

00:06:41.460 --> 00:06:43.820
place FTS table with external content
you do have to query from the virtual

00:06:43.820 --> 00:06:43.830
you do have to query from the virtual
 

00:06:43.830 --> 00:06:45.770
you do have to query from the virtual
table and then you would do a join

00:06:45.770 --> 00:06:45.780
table and then you would do a join
 

00:06:45.780 --> 00:06:47.450
table and then you would do a join
because we want to get the songs and

00:06:47.450 --> 00:06:47.460
because we want to get the songs and
 

00:06:47.460 --> 00:06:50.620
because we want to get the songs and
then similarly you will still use match

00:06:50.620 --> 00:06:50.630
then similarly you will still use match
 

00:06:50.630 --> 00:06:53.180
then similarly you will still use match
one thing though is that because these

00:06:53.180 --> 00:06:53.190
one thing though is that because these
 

00:06:53.190 --> 00:06:55.010
one thing though is that because these
are two different tables when you insert

00:06:55.010 --> 00:06:55.020
are two different tables when you insert
 

00:06:55.020 --> 00:06:57.800
are two different tables when you insert
into the sound tables things are not

00:06:57.800 --> 00:06:57.810
into the sound tables things are not
 

00:06:57.810 --> 00:06:59.990
into the sound tables things are not
actually inserted into the virtual table

00:06:59.990 --> 00:07:00.000
actually inserted into the virtual table
 

00:07:00.000 --> 00:07:01.820
actually inserted into the virtual table
at the s table which means your in this

00:07:01.820 --> 00:07:01.830
at the s table which means your in this
 

00:07:01.830 --> 00:07:03.529
at the s table which means your in this
is doesn't get updated so you have to do

00:07:03.529 --> 00:07:03.539
is doesn't get updated so you have to do
 

00:07:03.539 --> 00:07:04.430
is doesn't get updated so you have to do
that yourself

00:07:04.430 --> 00:07:04.440
that yourself
 

00:07:04.440 --> 00:07:05.600
that yourself
but you know we don't want you doing

00:07:05.600 --> 00:07:05.610
but you know we don't want you doing
 

00:07:05.610 --> 00:07:07.550
but you know we don't want you doing
this we make an ax we want to make it

00:07:07.550 --> 00:07:07.560
this we make an ax we want to make it
 

00:07:07.560 --> 00:07:09.830
this we make an ax we want to make it
easy so when you use wroom wroom will

00:07:09.830 --> 00:07:09.840
easy so when you use wroom wroom will
 

00:07:09.840 --> 00:07:11.600
easy so when you use wroom wroom will
actually create triggers for you to keep

00:07:11.600 --> 00:07:11.610
actually create triggers for you to keep
 

00:07:11.610 --> 00:07:13.520
actually create triggers for you to keep
these two things in sync that's pretty

00:07:13.520 --> 00:07:13.530
these two things in sync that's pretty
 

00:07:13.530 --> 00:07:18.589
these two things in sync that's pretty
cool right another important feature we

00:07:18.589 --> 00:07:18.599
cool right another important feature we
 

00:07:18.599 --> 00:07:21.070
cool right another important feature we
have added is support for database views

00:07:21.070 --> 00:07:21.080
have added is support for database views
 

00:07:21.080 --> 00:07:24.200
have added is support for database views
so let's go back to our song and album

00:07:24.200 --> 00:07:24.210
so let's go back to our song and album
 

00:07:24.210 --> 00:07:26.689
so let's go back to our song and album
example we have songs and they have

00:07:26.689 --> 00:07:26.699
example we have songs and they have
 

00:07:26.699 --> 00:07:28.460
example we have songs and they have
albums and a song might be multiple

00:07:28.460 --> 00:07:28.470
albums and a song might be multiple
 

00:07:28.470 --> 00:07:31.700
albums and a song might be multiple
albums so we have a junction table that

00:07:31.700 --> 00:07:31.710
albums so we have a junction table that
 

00:07:31.710 --> 00:07:35.149
albums so we have a junction table that
Association associate the songs with the

00:07:35.149 --> 00:07:35.159
Association associate the songs with the
 

00:07:35.159 --> 00:07:38.810
Association associate the songs with the
audience now this so cool so let's say

00:07:38.810 --> 00:07:38.820
audience now this so cool so let's say
 

00:07:38.820 --> 00:07:40.640
audience now this so cool so let's say
you want to fetch a listing right you

00:07:40.640 --> 00:07:40.650
you want to fetch a listing right you
 

00:07:40.650 --> 00:07:42.230
you want to fetch a listing right you
want to have the ugly name and all the

00:07:42.230 --> 00:07:42.240
want to have the ugly name and all the
 

00:07:42.240 --> 00:07:45.950
want to have the ugly name and all the
songs in it as a list okay cool we just

00:07:45.950 --> 00:07:45.960
songs in it as a list okay cool we just
 

00:07:45.960 --> 00:07:48.680
songs in it as a list okay cool we just
right there we have the listing cost and

00:07:48.680 --> 00:07:48.690
right there we have the listing cost and
 

00:07:48.690 --> 00:07:51.020
right there we have the listing cost and
we write a query and fetch from that

00:07:51.020 --> 00:07:51.030
we write a query and fetch from that
 

00:07:51.030 --> 00:07:54.020
we write a query and fetch from that
junction table unfortunately you cannot

00:07:54.020 --> 00:07:54.030
junction table unfortunately you cannot
 

00:07:54.030 --> 00:07:56.480
junction table unfortunately you cannot
do this because that table doesn't have

00:07:56.480 --> 00:07:56.490
do this because that table doesn't have
 

00:07:56.490 --> 00:08:00.110
do this because that table doesn't have
the song's name or the album's title you

00:08:00.110 --> 00:08:00.120
the song's name or the album's title you
 

00:08:00.120 --> 00:08:01.490
the song's name or the album's title you
kind of need to write a query like this

00:08:01.490 --> 00:08:01.500
kind of need to write a query like this
 

00:08:01.500 --> 00:08:03.680
kind of need to write a query like this
where you fetch from that table and join

00:08:03.680 --> 00:08:03.690
where you fetch from that table and join
 

00:08:03.690 --> 00:08:06.140
where you fetch from that table and join
it with the song and album table and

00:08:06.140 --> 00:08:06.150
it with the song and album table and
 

00:08:06.150 --> 00:08:08.570
it with the song and album table and
then you can return your listing data

00:08:08.570 --> 00:08:08.580
then you can return your listing data
 

00:08:08.580 --> 00:08:12.140
then you can return your listing data
now the section cool SQLite is powerful

00:08:12.140 --> 00:08:12.150
now the section cool SQLite is powerful
 

00:08:12.150 --> 00:08:14.060
now the section cool SQLite is powerful
that you can express this but if you

00:08:14.060 --> 00:08:14.070
that you can express this but if you
 

00:08:14.070 --> 00:08:15.589
that you can express this but if you
find yourself keep writing these things

00:08:15.589 --> 00:08:15.599
find yourself keep writing these things
 

00:08:15.599 --> 00:08:17.420
find yourself keep writing these things
it's kind of like a lot of boilerplate

00:08:17.420 --> 00:08:17.430
it's kind of like a lot of boilerplate
 

00:08:17.430 --> 00:08:18.920
it's kind of like a lot of boilerplate
like things you need to keep in your

00:08:18.920 --> 00:08:18.930
like things you need to keep in your
 

00:08:18.930 --> 00:08:22.370
like things you need to keep in your
mind wouldn't be cool if you could just

00:08:22.370 --> 00:08:22.380
mind wouldn't be cool if you could just
 

00:08:22.380 --> 00:08:25.370
mind wouldn't be cool if you could just
have a table that has the song and the

00:08:25.370 --> 00:08:25.380
have a table that has the song and the
 

00:08:25.380 --> 00:08:28.279
have a table that has the song and the
album together without you duplicating

00:08:28.279 --> 00:08:28.289
album together without you duplicating
 

00:08:28.289 --> 00:08:30.589
album together without you duplicating
the data into that table and the songs

00:08:30.589 --> 00:08:30.599
the data into that table and the songs
 

00:08:30.599 --> 00:08:33.440
the data into that table and the songs
and the album tables and this is where

00:08:33.440 --> 00:08:33.450
and the album tables and this is where
 

00:08:33.450 --> 00:08:36.260
and the album tables and this is where
database views come into place so you

00:08:36.260 --> 00:08:36.270
database views come into place so you
 

00:08:36.270 --> 00:08:38.990
database views come into place so you
basically write the query that defines

00:08:38.990 --> 00:08:39.000
basically write the query that defines
 

00:08:39.000 --> 00:08:43.339
basically write the query that defines
album and song together as a query you

00:08:43.339 --> 00:08:43.349
album and song together as a query you
 

00:08:43.349 --> 00:08:45.440
album and song together as a query you
annotate an entity with a database view

00:08:45.440 --> 00:08:45.450
annotate an entity with a database view
 

00:08:45.450 --> 00:08:47.000
annotate an entity with a database view
so you're saying that the second wheel

00:08:47.000 --> 00:08:47.010
so you're saying that the second wheel
 

00:08:47.010 --> 00:08:50.569
so you're saying that the second wheel
to this database and in that poor joe

00:08:50.569 --> 00:08:50.579
to this database and in that poor joe
 

00:08:50.579 --> 00:08:51.260
to this database and in that poor joe
this is the

00:08:51.260 --> 00:08:51.270
this is the
 

00:08:51.270 --> 00:08:53.420
this is the
room rules so you can have any power

00:08:53.420 --> 00:08:53.430
room rules so you can have any power
 

00:08:53.430 --> 00:08:56.270
room rules so you can have any power
over the embedded fields or whatnot

00:08:56.270 --> 00:08:56.280
over the embedded fields or whatnot
 

00:08:56.280 --> 00:08:59.510
over the embedded fields or whatnot
once you declare it and edit your room

00:08:59.510 --> 00:08:59.520
once you declare it and edit your room
 

00:08:59.520 --> 00:09:03.800
once you declare it and edit your room
database so we have that declaration if

00:09:03.800 --> 00:09:03.810
database so we have that declaration if
 

00:09:03.810 --> 00:09:05.510
database so we have that declaration if
you try to rewrite the previous query

00:09:05.510 --> 00:09:05.520
you try to rewrite the previous query
 

00:09:05.520 --> 00:09:08.120
you try to rewrite the previous query
you just get rid of all the joint and

00:09:08.120 --> 00:09:08.130
you just get rid of all the joint and
 

00:09:08.130 --> 00:09:11.270
you just get rid of all the joint and
instead select from that tables well we

00:09:11.270 --> 00:09:11.280
instead select from that tables well we
 

00:09:11.280 --> 00:09:12.950
instead select from that tables well we
are selected from a view that table

00:09:12.950 --> 00:09:12.960
are selected from a view that table
 

00:09:12.960 --> 00:09:15.440
are selected from a view that table
doesn't exist but for all intensive

00:09:15.440 --> 00:09:15.450
doesn't exist but for all intensive
 

00:09:15.450 --> 00:09:19.030
doesn't exist but for all intensive
purposes of querying that's a table and

00:09:19.030 --> 00:09:19.040
purposes of querying that's a table and
 

00:09:19.040 --> 00:09:22.790
purposes of querying that's a table and
now it's much much more simpler because

00:09:22.790 --> 00:09:22.800
now it's much much more simpler because
 

00:09:22.800 --> 00:09:24.920
now it's much much more simpler because
I say it's like a table you can also

00:09:24.920 --> 00:09:24.930
I say it's like a table you can also
 

00:09:24.930 --> 00:09:27.860
I say it's like a table you can also
return that POJO or you can even return

00:09:27.860 --> 00:09:27.870
return that POJO or you can even return
 

00:09:27.870 --> 00:09:30.590
return that POJO or you can even return
a live data because we know how that we

00:09:30.590 --> 00:09:30.600
a live data because we know how that we
 

00:09:30.600 --> 00:09:33.110
a live data because we know how that we
was constructed we know when the value

00:09:33.110 --> 00:09:33.120
was constructed we know when the value
 

00:09:33.120 --> 00:09:34.910
was constructed we know when the value
might change so you can get a live data

00:09:34.910 --> 00:09:34.920
might change so you can get a live data
 

00:09:34.920 --> 00:09:37.610
might change so you can get a live data
of it you can run queries like you could

00:09:37.610 --> 00:09:37.620
of it you can run queries like you could
 

00:09:37.620 --> 00:09:39.320
of it you can run queries like you could
pretty much do everything you can do

00:09:39.320 --> 00:09:39.330
pretty much do everything you can do
 

00:09:39.330 --> 00:09:41.690
pretty much do everything you can do
with a table except you cannot do

00:09:41.690 --> 00:09:41.700
with a table except you cannot do
 

00:09:41.700 --> 00:09:43.460
with a table except you cannot do
inserts and updates because there's no

00:09:43.460 --> 00:09:43.470
inserts and updates because there's no
 

00:09:43.470 --> 00:09:45.470
inserts and updates because there's no
baking data but you can have wheels

00:09:45.470 --> 00:09:45.480
baking data but you can have wheels
 

00:09:45.480 --> 00:09:47.540
baking data but you can have wheels
inside other wheels like all that stuff

00:09:47.540 --> 00:09:47.550
inside other wheels like all that stuff
 

00:09:47.550 --> 00:09:50.270
inside other wheels like all that stuff
works so this makes it much nicer to

00:09:50.270 --> 00:09:50.280
works so this makes it much nicer to
 

00:09:50.280 --> 00:09:52.520
works so this makes it much nicer to
write queries and it also allows you to

00:09:52.520 --> 00:09:52.530
write queries and it also allows you to
 

00:09:52.530 --> 00:09:57.530
write queries and it also allows you to
logically address your data another

00:09:57.530 --> 00:09:57.540
logically address your data another
 

00:09:57.540 --> 00:09:59.150
logically address your data another
important feature we have added is

00:09:59.150 --> 00:09:59.160
important feature we have added is
 

00:09:59.160 --> 00:10:03.650
important feature we have added is
support for multiple instances so let's

00:10:03.650 --> 00:10:03.660
support for multiple instances so let's
 

00:10:03.660 --> 00:10:05.480
support for multiple instances so let's
say we are writing the application so we

00:10:05.480 --> 00:10:05.490
say we are writing the application so we
 

00:10:05.490 --> 00:10:07.790
say we are writing the application so we
have a playlist all the songs and we

00:10:07.790 --> 00:10:07.800
have a playlist all the songs and we
 

00:10:07.800 --> 00:10:09.530
have a playlist all the songs and we
have a sync service that ghost our

00:10:09.530 --> 00:10:09.540
have a sync service that ghost our
 

00:10:09.540 --> 00:10:11.780
have a sync service that ghost our
back-end pulls the name updates for my

00:10:11.780 --> 00:10:11.790
back-end pulls the name updates for my
 

00:10:11.790 --> 00:10:13.510
back-end pulls the name updates for my
playlist and writes them into a database

00:10:13.510 --> 00:10:13.520
playlist and writes them into a database
 

00:10:13.520 --> 00:10:17.780
playlist and writes them into a database
when you're using room if the sync

00:10:17.780 --> 00:10:17.790
when you're using room if the sync
 

00:10:17.790 --> 00:10:19.340
when you're using room if the sync
service updates the database it

00:10:19.340 --> 00:10:19.350
service updates the database it
 

00:10:19.350 --> 00:10:22.280
service updates the database it
automatically updates the UI and this is

00:10:22.280 --> 00:10:22.290
automatically updates the UI and this is
 

00:10:22.290 --> 00:10:24.350
automatically updates the UI and this is
a super cool feature because you write

00:10:24.350 --> 00:10:24.360
a super cool feature because you write
 

00:10:24.360 --> 00:10:26.000
a super cool feature because you write
these two components absolutely

00:10:26.000 --> 00:10:26.010
these two components absolutely
 

00:10:26.010 --> 00:10:27.530
these two components absolutely
independent of each other they don't

00:10:27.530 --> 00:10:27.540
independent of each other they don't
 

00:10:27.540 --> 00:10:29.090
independent of each other they don't
know about each other they have the

00:10:29.090 --> 00:10:29.100
know about each other they have the
 

00:10:29.100 --> 00:10:31.880
know about each other they have the
database as a sync point this works

00:10:31.880 --> 00:10:31.890
database as a sync point this works
 

00:10:31.890 --> 00:10:34.820
database as a sync point this works
perfectly but then your startup is

00:10:34.820 --> 00:10:34.830
perfectly but then your startup is
 

00:10:34.830 --> 00:10:36.470
perfectly but then your startup is
successful you grow your team your

00:10:36.470 --> 00:10:36.480
successful you grow your team your
 

00:10:36.480 --> 00:10:38.510
successful you grow your team your
application is bloated so you decide to

00:10:38.510 --> 00:10:38.520
application is bloated so you decide to
 

00:10:38.520 --> 00:10:40.370
application is bloated so you decide to
move that synchronization inter

00:10:40.370 --> 00:10:40.380
move that synchronization inter
 

00:10:40.380 --> 00:10:42.860
move that synchronization inter
background process now it's been is

00:10:42.860 --> 00:10:42.870
background process now it's been is
 

00:10:42.870 --> 00:10:45.140
background process now it's been is
running in a different process it pause

00:10:45.140 --> 00:10:45.150
running in a different process it pause
 

00:10:45.150 --> 00:10:47.990
running in a different process it pause
the song rises in the database and your

00:10:47.990 --> 00:10:48.000
the song rises in the database and your
 

00:10:48.000 --> 00:10:50.840
the song rises in the database and your
UI has no idea it doesn't know the

00:10:50.840 --> 00:10:50.850
UI has no idea it doesn't know the
 

00:10:50.850 --> 00:10:53.240
UI has no idea it doesn't know the
database has change because it only

00:10:53.240 --> 00:10:53.250
database has change because it only
 

00:10:53.250 --> 00:10:55.880
database has change because it only
knows that data is exchanged if the same

00:10:55.880 --> 00:10:55.890
knows that data is exchanged if the same
 

00:10:55.890 --> 00:10:57.650
knows that data is exchanged if the same
room instance is the one making the

00:10:57.650 --> 00:10:57.660
room instance is the one making the
 

00:10:57.660 --> 00:10:59.780
room instance is the one making the
update so we can fake it because we

00:10:59.780 --> 00:10:59.790
update so we can fake it because we
 

00:10:59.790 --> 00:11:01.490
update so we can fake it because we
don't get any information from SQLite

00:11:01.490 --> 00:11:01.500
don't get any information from SQLite
 

00:11:01.500 --> 00:11:03.970
don't get any information from SQLite
there's something room tracks

00:11:03.970 --> 00:11:03.980
there's something room tracks
 

00:11:03.980 --> 00:11:08.199
there's something room tracks
now with room 2.1 you can enable multi

00:11:08.199 --> 00:11:08.209
now with room 2.1 you can enable multi
 

00:11:08.209 --> 00:11:09.999
now with room 2.1 you can enable multi
system validation when you build the

00:11:09.999 --> 00:11:10.009
system validation when you build the
 

00:11:10.009 --> 00:11:12.789
system validation when you build the
room instance which were loop which will

00:11:12.789 --> 00:11:12.799
room instance which were loop which will
 

00:11:12.799 --> 00:11:15.039
room instance which were loop which will
look for other instances of room that

00:11:15.039 --> 00:11:15.049
look for other instances of room that
 

00:11:15.049 --> 00:11:18.129
look for other instances of room that
are accessing the same database once you

00:11:18.129 --> 00:11:18.139
are accessing the same database once you
 

00:11:18.139 --> 00:11:21.009
are accessing the same database once you
do that now your background process

00:11:21.009 --> 00:11:21.019
do that now your background process
 

00:11:21.019 --> 00:11:23.229
do that now your background process
service can update the database and all

00:11:23.229 --> 00:11:23.239
service can update the database and all
 

00:11:23.239 --> 00:11:24.909
service can update the database and all
this and soft room will update

00:11:24.909 --> 00:11:24.919
this and soft room will update
 

00:11:24.919 --> 00:11:28.299
this and soft room will update
automatically now we don't do this this

00:11:28.299 --> 00:11:28.309
automatically now we don't do this this
 

00:11:28.309 --> 00:11:30.489
automatically now we don't do this this
is off by default because we need to

00:11:30.489 --> 00:11:30.499
is off by default because we need to
 

00:11:30.499 --> 00:11:32.199
is off by default because we need to
create the service there's some IPC

00:11:32.199 --> 00:11:32.209
create the service there's some IPC
 

00:11:32.209 --> 00:11:34.960
create the service there's some IPC
involved is not a big cost but it is a

00:11:34.960 --> 00:11:34.970
involved is not a big cost but it is a
 

00:11:34.970 --> 00:11:37.269
involved is not a big cost but it is a
cost that most people don't need so you

00:11:37.269 --> 00:11:37.279
cost that most people don't need so you
 

00:11:37.279 --> 00:11:39.460
cost that most people don't need so you
need to enable this flag to take

00:11:39.460 --> 00:11:39.470
need to enable this flag to take
 

00:11:39.470 --> 00:11:42.909
need to enable this flag to take
advantage of this feature another

00:11:42.909 --> 00:11:42.919
advantage of this feature another
 

00:11:42.919 --> 00:11:44.559
advantage of this feature another
feature we added which was actually

00:11:44.559 --> 00:11:44.569
feature we added which was actually
 

00:11:44.569 --> 00:11:47.769
feature we added which was actually
requested by the community is out of a

00:11:47.769 --> 00:11:47.779
requested by the community is out of a
 

00:11:47.779 --> 00:11:49.329
requested by the community is out of a
new support you know if you're using

00:11:49.329 --> 00:11:49.339
new support you know if you're using
 

00:11:49.339 --> 00:11:50.679
new support you know if you're using
Kotlin you don't have to worry about

00:11:50.679 --> 00:11:50.689
Kotlin you don't have to worry about
 

00:11:50.689 --> 00:11:52.150
Kotlin you don't have to worry about
this because you have data classes but

00:11:52.150 --> 00:11:52.160
this because you have data classes but
 

00:11:52.160 --> 00:11:54.369
this because you have data classes but
if you're stealing java well then you

00:11:54.369 --> 00:11:54.379
if you're stealing java well then you
 

00:11:54.379 --> 00:11:55.900
if you're stealing java well then you
might want to have you might be using

00:11:55.900 --> 00:11:55.910
might want to have you might be using
 

00:11:55.910 --> 00:11:57.789
might want to have you might be using
autovalue because you want Java

00:11:57.789 --> 00:11:57.799
autovalue because you want Java
 

00:11:57.799 --> 00:11:59.949
autovalue because you want Java
immutable objects all room.now can

00:11:59.949 --> 00:11:59.959
immutable objects all room.now can
 

00:11:59.959 --> 00:12:02.109
immutable objects all room.now can
understand these auto value annotated

00:12:02.109 --> 00:12:02.119
understand these auto value annotated
 

00:12:02.119 --> 00:12:06.489
understand these auto value annotated
updates even if you know a little bit

00:12:06.489 --> 00:12:06.499
updates even if you know a little bit
 

00:12:06.499 --> 00:12:07.900
updates even if you know a little bit
about what value you basically have an

00:12:07.900 --> 00:12:07.910
about what value you basically have an
 

00:12:07.910 --> 00:12:09.189
about what value you basically have an
abstract class and you annotate it with

00:12:09.189 --> 00:12:09.199
abstract class and you annotate it with
 

00:12:09.199 --> 00:12:10.749
abstract class and you annotate it with
auto value but now you can also

00:12:10.749 --> 00:12:10.759
auto value but now you can also
 

00:12:10.759 --> 00:12:12.519
auto value but now you can also
undertake that same math class with

00:12:12.519 --> 00:12:12.529
undertake that same math class with
 

00:12:12.529 --> 00:12:14.470
undertake that same math class with
identity and room will be able to

00:12:14.470 --> 00:12:14.480
identity and room will be able to
 

00:12:14.480 --> 00:12:17.319
identity and room will be able to
discover that you want to make a banking

00:12:17.319 --> 00:12:17.329
discover that you want to make a banking
 

00:12:17.329 --> 00:12:20.289
discover that you want to make a banking
SQLite table for it another value

00:12:20.289 --> 00:12:20.299
SQLite table for it another value
 

00:12:20.299 --> 00:12:21.909
SQLite table for it another value
instead of having fields you have

00:12:21.909 --> 00:12:21.919
instead of having fields you have
 

00:12:21.919 --> 00:12:24.249
instead of having fields you have
astrogators these can now be annotated

00:12:24.249 --> 00:12:24.259
astrogators these can now be annotated
 

00:12:24.259 --> 00:12:26.799
astrogators these can now be annotated
with room annotations to declare primary

00:12:26.799 --> 00:12:26.809
with room annotations to declare primary
 

00:12:26.809 --> 00:12:28.929
with room annotations to declare primary
key column information and things like

00:12:28.929 --> 00:12:28.939
key column information and things like
 

00:12:28.939 --> 00:12:31.479
key column information and things like
that the only caveat though is that you

00:12:31.479 --> 00:12:31.489
that the only caveat though is that you
 

00:12:31.489 --> 00:12:34.030
that the only caveat though is that you
do have to also add other values copy

00:12:34.030 --> 00:12:34.040
do have to also add other values copy
 

00:12:34.040 --> 00:12:38.139
do have to also add other values copy
annotation and this is this is the

00:12:38.139 --> 00:12:38.149
annotation and this is this is the
 

00:12:38.149 --> 00:12:39.579
annotation and this is this is the
annotation that basically makes these

00:12:39.579 --> 00:12:39.589
annotation that basically makes these
 

00:12:39.589 --> 00:12:41.679
annotation that basically makes these
two tools work together why do we

00:12:41.679 --> 00:12:41.689
two tools work together why do we
 

00:12:41.689 --> 00:12:43.600
two tools work together why do we
support this so normally these

00:12:43.600 --> 00:12:43.610
support this so normally these
 

00:12:43.610 --> 00:12:45.789
support this so normally these
annotations were only limited to fields

00:12:45.789 --> 00:12:45.799
annotations were only limited to fields
 

00:12:45.799 --> 00:12:48.699
annotations were only limited to fields
and we needed extend it to let you put

00:12:48.699 --> 00:12:48.709
and we needed extend it to let you put
 

00:12:48.709 --> 00:12:51.220
and we needed extend it to let you put
them on those abstract methods but it

00:12:51.220 --> 00:12:51.230
them on those abstract methods but it
 

00:12:51.230 --> 00:12:52.989
them on those abstract methods but it
only works if you're using author well

00:12:52.989 --> 00:12:52.999
only works if you're using author well
 

00:12:52.999 --> 00:12:54.549
only works if you're using author well
if you're not using autovalue we are not

00:12:54.549 --> 00:12:54.559
if you're not using autovalue we are not
 

00:12:54.559 --> 00:12:56.609
if you're not using autovalue we are not
gonna let it compile yep

00:12:56.609 --> 00:12:56.619
gonna let it compile yep
 

00:12:56.619 --> 00:12:59.590
gonna let it compile yep
similarly if you were writing a normal

00:12:59.590 --> 00:12:59.600
similarly if you were writing a normal
 

00:12:59.600 --> 00:13:01.449
similarly if you were writing a normal
but a class you have a constructor with

00:13:01.449 --> 00:13:01.459
but a class you have a constructor with
 

00:13:01.459 --> 00:13:03.759
but a class you have a constructor with
the fields in not value oh you still

00:13:03.759 --> 00:13:03.769
the fields in not value oh you still
 

00:13:03.769 --> 00:13:06.759
the fields in not value oh you still
need that factory method and we'll we'll

00:13:06.759 --> 00:13:06.769
need that factory method and we'll we'll
 

00:13:06.769 --> 00:13:08.799
need that factory method and we'll we'll
be able to discover this to create your

00:13:08.799 --> 00:13:08.809
be able to discover this to create your
 

00:13:08.809 --> 00:13:12.129
be able to discover this to create your
other value class and then you see net

00:13:12.129 --> 00:13:12.139
other value class and then you see net
 

00:13:12.139 --> 00:13:13.689
other value class and then you see net
is you would use it as any other data

00:13:13.689 --> 00:13:13.699
is you would use it as any other data
 

00:13:13.699 --> 00:13:15.220
is you would use it as any other data
class you would use the abstract class

00:13:15.220 --> 00:13:15.230
class you would use the abstract class
 

00:13:15.230 --> 00:13:16.960
class you would use the abstract class
that you declare

00:13:16.960 --> 00:13:16.970
that you declare
 

00:13:16.970 --> 00:13:21.460
that you declare
another highly requested feature that

00:13:21.460 --> 00:13:21.470
another highly requested feature that
 

00:13:21.470 --> 00:13:24.800
another highly requested feature that
has been working for we decided that has

00:13:24.800 --> 00:13:24.810
has been working for we decided that has
 

00:13:24.810 --> 00:13:26.060
has been working for we decided that has
been requested for a while and we

00:13:26.060 --> 00:13:26.070
been requested for a while and we
 

00:13:26.070 --> 00:13:29.420
been requested for a while and we
finally got it is more rx so now you can

00:13:29.420 --> 00:13:29.430
finally got it is more rx so now you can
 

00:13:29.430 --> 00:13:32.660
finally got it is more rx so now you can
actually have a synchrotron x

00:13:32.660 --> 00:13:32.670
actually have a synchrotron x
 

00:13:32.670 --> 00:13:35.180
actually have a synchrotron x
completable single and maybe in metal

00:13:35.180 --> 00:13:35.190
completable single and maybe in metal
 

00:13:35.190 --> 00:13:37.040
completable single and maybe in metal
sanitary will insert update and delete

00:13:37.040 --> 00:13:37.050
sanitary will insert update and delete
 

00:13:37.050 --> 00:13:38.960
sanitary will insert update and delete
so you know we'll listen and you when

00:13:38.960 --> 00:13:38.970
so you know we'll listen and you when
 

00:13:38.970 --> 00:13:40.430
so you know we'll listen and you when
you request our you know we'll listen

00:13:40.430 --> 00:13:40.440
you request our you know we'll listen
 

00:13:40.440 --> 00:13:45.020
you request our you know we'll listen
yeah yeah this is actually yeah it's

00:13:45.020 --> 00:13:45.030
yeah yeah this is actually yeah it's
 

00:13:45.030 --> 00:13:47.000
yeah yeah this is actually yeah it's
only available in rx that's interesting

00:13:47.000 --> 00:13:47.010
only available in rx that's interesting
 

00:13:47.010 --> 00:13:49.880
only available in rx that's interesting
might be available another other type of

00:13:49.880 --> 00:13:49.890
might be available another other type of
 

00:13:49.890 --> 00:13:52.640
might be available another other type of
passing like qualities call this maybe

00:13:52.640 --> 00:13:52.650
passing like qualities call this maybe
 

00:13:52.650 --> 00:13:58.010
passing like qualities call this maybe
please so so route 2.1 is a really big

00:13:58.010 --> 00:13:58.020
please so so route 2.1 is a really big
 

00:13:58.020 --> 00:14:00.470
please so so route 2.1 is a really big
release like the full-text search the

00:14:00.470 --> 00:14:00.480
release like the full-text search the
 

00:14:00.480 --> 00:14:04.490
release like the full-text search the
database views i were me decided which

00:14:04.490 --> 00:14:04.500
database views i were me decided which
 

00:14:04.500 --> 00:14:06.170
database views i were me decided which
features to work on we are basically

00:14:06.170 --> 00:14:06.180
features to work on we are basically
 

00:14:06.180 --> 00:14:08.420
features to work on we are basically
relying on your feedback like these are

00:14:08.420 --> 00:14:08.430
relying on your feedback like these are
 

00:14:08.430 --> 00:14:10.790
relying on your feedback like these are
literally like I personally objected

00:14:10.790 --> 00:14:10.800
literally like I personally objected
 

00:14:10.800 --> 00:14:12.890
literally like I personally objected
that allowing complete of less stuff in

00:14:12.890 --> 00:14:12.900
that allowing complete of less stuff in
 

00:14:12.900 --> 00:14:14.390
that allowing complete of less stuff in
those like insert queries for a long

00:14:14.390 --> 00:14:14.400
those like insert queries for a long
 

00:14:14.400 --> 00:14:17.270
those like insert queries for a long
time and I gave up because people really

00:14:17.270 --> 00:14:17.280
time and I gave up because people really
 

00:14:17.280 --> 00:14:20.420
time and I gave up because people really
wanted it and this is our development

00:14:20.420 --> 00:14:20.430
wanted it and this is our development
 

00:14:20.430 --> 00:14:22.250
wanted it and this is our development
philosophy we basically look at what the

00:14:22.250 --> 00:14:22.260
philosophy we basically look at what the
 

00:14:22.260 --> 00:14:24.320
philosophy we basically look at what the
community is doing how are they using it

00:14:24.320 --> 00:14:24.330
community is doing how are they using it
 

00:14:24.330 --> 00:14:27.410
community is doing how are they using it
what do they want and implement them so

00:14:27.410 --> 00:14:27.420
what do they want and implement them so
 

00:14:27.420 --> 00:14:31.040
what do they want and implement them so
please like try to use 2.1 is a very big

00:14:31.040 --> 00:14:31.050
please like try to use 2.1 is a very big
 

00:14:31.050 --> 00:14:34.460
please like try to use 2.1 is a very big
release and we want to just like ship it

00:14:34.460 --> 00:14:34.470
release and we want to just like ship it
 

00:14:34.470 --> 00:14:36.590
release and we want to just like ship it
as stable as soon as possible and we

00:14:36.590 --> 00:14:36.600
as stable as soon as possible and we
 

00:14:36.600 --> 00:14:38.870
as stable as soon as possible and we
need your feedback we basically look at

00:14:38.870 --> 00:14:38.880
need your feedback we basically look at
 

00:14:38.880 --> 00:14:40.940
need your feedback we basically look at
the number of apps shipping meet room

00:14:40.940 --> 00:14:40.950
the number of apps shipping meet room
 

00:14:40.950 --> 00:14:43.250
the number of apps shipping meet room
and see how they are using we look for

00:14:43.250 --> 00:14:43.260
and see how they are using we look for
 

00:14:43.260 --> 00:14:45.530
and see how they are using we look for
the incoming box I mean we don't really

00:14:45.530 --> 00:14:45.540
the incoming box I mean we don't really
 

00:14:45.540 --> 00:14:48.650
the incoming box I mean we don't really
have bugs but sometimes nobody look for

00:14:48.650 --> 00:14:48.660
have bugs but sometimes nobody look for
 

00:14:48.660 --> 00:14:52.880
have bugs but sometimes nobody look for
incoming user errors try to fix them

00:14:52.880 --> 00:14:52.890
incoming user errors try to fix them
 

00:14:52.890 --> 00:14:56.720
incoming user errors try to fix them
and then we try to ship so please work

00:14:56.720 --> 00:14:56.730
and then we try to ship so please work
 

00:14:56.730 --> 00:14:59.360
and then we try to ship so please work
with us and we will try to wrap it up

00:14:59.360 --> 00:14:59.370
with us and we will try to wrap it up
 

00:14:59.370 --> 00:15:01.430
with us and we will try to wrap it up
and ship it and also please let us know

00:15:01.430 --> 00:15:01.440
and ship it and also please let us know
 

00:15:01.440 --> 00:15:03.980
and ship it and also please let us know
what other features you want in groov so

00:15:03.980 --> 00:15:03.990
what other features you want in groov so
 

00:15:03.990 --> 00:15:06.620
what other features you want in groov so
that we can implement them alright

00:15:06.620 --> 00:15:06.630
that we can implement them alright
 

00:15:06.630 --> 00:15:08.570
that we can implement them alright
thanks a lot for coming to this talk I

00:15:08.570 --> 00:15:08.580
thanks a lot for coming to this talk I
 

00:15:08.580 --> 00:15:09.590
thanks a lot for coming to this talk I
hope it was useful

00:15:09.590 --> 00:15:09.600
hope it was useful
 

00:15:09.600 --> 00:15:13.770
hope it was useful
[Applause]

00:15:13.770 --> 00:15:13.780
[Applause]
 

00:15:13.780 --> 00:15:29.030
[Applause]
[Music]

00:15:29.030 --> 00:15:29.040
[Music]
 

00:15:29.040 --> 00:15:31.100
[Music]
you

