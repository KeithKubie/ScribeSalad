WEBVTT
Kind: captions
Language: en

00:00:00.550 --> 00:00:01.390
RONY ROZEN: Unless
you've been living

00:00:01.390 --> 00:00:03.010
under a rock for
the past few months,

00:00:03.010 --> 00:00:04.801
you know that there's
a new iPhone in town,

00:00:04.801 --> 00:00:07.970
and it's significantly different
than all previous models.

00:00:07.970 --> 00:00:10.120
Maybe you've been lucky
enough to get one by now.

00:00:10.120 --> 00:00:11.890
Maybe you just spent
some time admiring

00:00:11.890 --> 00:00:14.500
the new all-screen device
at the Apple Store near you,

00:00:14.500 --> 00:00:17.380
or maybe you're counting the
days for your device to arrive.

00:00:17.380 --> 00:00:20.227
Either way, some of you users
already have the new device,

00:00:20.227 --> 00:00:22.810
and your app is being tested on
it whether you're ready for it

00:00:22.810 --> 00:00:24.200
or not.

00:00:24.200 --> 00:00:26.199
So let's try to make
sure you are ready.

00:00:26.199 --> 00:00:28.240
You don't want your users
to be the first to test

00:00:28.240 --> 00:00:29.980
your app on a new
device without knowing

00:00:29.980 --> 00:00:32.259
what they should expect, right?

00:00:32.259 --> 00:00:35.260
If you're using standard UIQ
components and Auto Layout,

00:00:35.260 --> 00:00:37.250
you should be
relatively good to go.

00:00:37.250 --> 00:00:38.710
If you are using
custom controls,

00:00:38.710 --> 00:00:40.990
there may be some work
that needs to be done.

00:00:40.990 --> 00:00:43.750
Either way, if you haven't even
tested your app on the iPhone

00:00:43.750 --> 00:00:46.720
10 Simulator, now is a
good time to do that.

00:00:46.720 --> 00:00:49.900
All you need is to run it
using Xcode 9 with iOS 11

00:00:49.900 --> 00:00:53.230
as the base SDK, and make sure
you have a long storyboard.

00:00:53.230 --> 00:00:56.720
Don't forget about landscape
mode, both left and right.

00:00:56.720 --> 00:00:59.020
That's where you'll
encounter most of the issues.

00:00:59.020 --> 00:01:01.690
One example of iPhone 10
compatibility in Google Apps

00:01:01.690 --> 00:01:03.790
is the side navigation,
which is something

00:01:03.790 --> 00:01:06.460
you may have encountered
in many of our apps.

00:01:06.460 --> 00:01:08.930
This is how it used to
look before the iPhone 10

00:01:08.930 --> 00:01:11.200
adaptations, and
this is a screenshot

00:01:11.200 --> 00:01:13.400
from a recent release
of Google Photos.

00:01:13.400 --> 00:01:14.740
Want to know how we did it?

00:01:14.740 --> 00:01:16.490
Stay tuned.

00:01:16.490 --> 00:01:19.000
Let's start with a general
description of the new iPhone.

00:01:19.000 --> 00:01:24.340
It has a Super Retina display,
3x, 1,125 by 2,436 pixels.

00:01:24.340 --> 00:01:27.940
The screen size is
375 by 1,812 points,

00:01:27.940 --> 00:01:30.430
meaning same width
as the iPhone 6, 7,

00:01:30.430 --> 00:01:33.460
and 8 but 145 points
taller, which means

00:01:33.460 --> 00:01:35.770
roughly a 20% height addition.

00:01:35.770 --> 00:01:40.840
This means an aspect ratio of
9 to 19.5 instead of 9 to 16.

00:01:40.840 --> 00:01:42.660
Note that not all
of this new space

00:01:42.660 --> 00:01:45.310
is necessarily yours to
use, as the status bar now

00:01:45.310 --> 00:01:47.860
uses 44 points, and the
home indicator almost

00:01:47.860 --> 00:01:49.270
doubles the height
of the toolbar

00:01:49.270 --> 00:01:51.340
if and when one is used.

00:01:51.340 --> 00:01:53.260
One more point about
the status bar--

00:01:53.260 --> 00:01:55.660
since the status bar
is taller on iPhone 10,

00:01:55.660 --> 00:01:57.940
if you're using a 20-point
constant somewhere,

00:01:57.940 --> 00:01:59.470
now would be a
good time to change

00:01:59.470 --> 00:02:02.800
that to use the real status bar
height for the current device.

00:02:02.800 --> 00:02:05.200
Also, the status bar no
longer changes its height

00:02:05.200 --> 00:02:08.110
for different situations such
as location tracking or phone

00:02:08.110 --> 00:02:08.919
calls.

00:02:08.919 --> 00:02:12.400
The space used by the status bar
on both sides of sensor housing

00:02:12.400 --> 00:02:15.700
isn't used by the app, so if
you're hiding the status bar,

00:02:15.700 --> 00:02:17.050
you may want to reconsider.

00:02:17.050 --> 00:02:20.310
In landscape, due to the rounded
corners and the sensor housing,

00:02:20.310 --> 00:02:22.600
the layout margins
are now 64 points

00:02:22.600 --> 00:02:24.490
instead of just 20 points.

00:02:24.490 --> 00:02:26.950
Note that Apple's human
interface guidelines indicate

00:02:26.950 --> 00:02:29.650
that you should keep your UI
centered in landscape mode,

00:02:29.650 --> 00:02:32.440
and not change the margins based
on the side the sensor housing

00:02:32.440 --> 00:02:34.210
happens to be in at the moment.

00:02:34.210 --> 00:02:36.220
Your users will
appreciate the consistency

00:02:36.220 --> 00:02:38.090
and know where to
expect each control.

00:02:38.090 --> 00:02:40.090
So a few easy things
you can do in order

00:02:40.090 --> 00:02:42.880
to make your app more
iPhone 10 compatible--

00:02:42.880 --> 00:02:44.440
if you're using a
background image,

00:02:44.440 --> 00:02:46.130
it should cover
the entire screen,

00:02:46.130 --> 00:02:48.910
including the sensor housing
and home indicator areas.

00:02:48.910 --> 00:02:51.850
Don't try to hide these areas
or draw any special attention

00:02:51.850 --> 00:02:52.820
to them.

00:02:52.820 --> 00:02:55.510
Remember that the iPhone 10
has a different aspect ratio,

00:02:55.510 --> 00:02:57.880
and compose your images in a
way that the most important

00:02:57.880 --> 00:02:59.890
visual information
isn't lost when

00:02:59.890 --> 00:03:02.110
they are centered and cropped.

00:03:02.110 --> 00:03:04.750
Since you now need to support
multiple sizes of your image

00:03:04.750 --> 00:03:08.710
files, you can use PDF or
make sure you provide both @2x

00:03:08.710 --> 00:03:11.740
and @3x versions for
all of your images.

00:03:11.740 --> 00:03:14.800
More specifically, Apple's
human interface guidelines

00:03:14.800 --> 00:03:18.730
recommend using JPEG for photos,
PNG for photo realistic app

00:03:18.730 --> 00:03:22.450
icons, and PDF for glyphs and
other flat, vector artwork

00:03:22.450 --> 00:03:25.090
that requires high
resolution scaling.

00:03:25.090 --> 00:03:27.760
Similar to previous devices
with new capabilities,

00:03:27.760 --> 00:03:30.550
make sure to only use
capabilities that are supported

00:03:30.550 --> 00:03:31.810
on the current device.

00:03:31.810 --> 00:03:35.230
For example, don't reference
touchID on iPhone 10

00:03:35.230 --> 00:03:39.770
and don't reference faceID
on older unsupported devices.

00:03:39.770 --> 00:03:42.730
When placing controls,
avoid problematic positions

00:03:42.730 --> 00:03:44.560
such as overlapping
the home indicator

00:03:44.560 --> 00:03:46.480
or crop by the rounded corners.

00:03:46.480 --> 00:03:49.150
Instead, insert visual
elements to prevent

00:03:49.150 --> 00:03:50.759
cutting and overlapping.

00:03:50.759 --> 00:03:53.050
Note that the home indicator
will change its appearance

00:03:53.050 --> 00:03:55.330
based on the background
it's displayed on to ensure

00:03:55.330 --> 00:03:56.980
it's visible to the user.

00:03:56.980 --> 00:03:59.960
A couple more things you need to
know about the home indicator--

00:03:59.960 --> 00:04:01.360
now that the Home
button is gone,

00:04:01.360 --> 00:04:03.640
the user swipes up from
the bottom of the screen

00:04:03.640 --> 00:04:05.390
to get back to the home screen.

00:04:05.390 --> 00:04:07.390
This is what the home
indicator is for.

00:04:07.390 --> 00:04:09.970
Note that it shouldn't affect
vertical swipes or scrolling

00:04:09.970 --> 00:04:11.970
experience since
most of these start

00:04:11.970 --> 00:04:14.560
at the middle of the screen
and not the very bottom.

00:04:14.560 --> 00:04:16.269
If your app encourages
users to swipe

00:04:16.269 --> 00:04:19.240
from the very bottom of the
screen, please reconsider.

00:04:19.240 --> 00:04:22.000
If you still decide this is the
best experience for your app,

00:04:22.000 --> 00:04:25.570
you can use the preferredScreenE
dgesDeferringSystemGestures()

00:04:25.570 --> 00:04:28.390
method to indicate that the
first swipe will be handled

00:04:28.390 --> 00:04:31.300
by your app, and it will
require two such swipes in order

00:04:31.300 --> 00:04:33.510
for the home indicator
to take over.

00:04:33.510 --> 00:04:35.680
Note that taps in the
home indicator area

00:04:35.680 --> 00:04:37.780
are never hijacked
by the home indicator

00:04:37.780 --> 00:04:40.240
and will always be
handled by your app.

00:04:40.240 --> 00:04:42.580
If your app offers the
passive fullscreen experience,

00:04:42.580 --> 00:04:45.110
such as watching a full
screen video, for example,

00:04:45.110 --> 00:04:47.680
you can use the
prefersHomeIndicatorAutoHidden()

00:04:47.680 --> 00:04:48.574
method.

00:04:48.574 --> 00:04:49.990
This will cause
the home indicator

00:04:49.990 --> 00:04:52.540
to disappear when there
is no screen interaction.

00:04:52.540 --> 00:04:55.780
It will reappear when the user
interacts with the screen.

00:04:55.780 --> 00:04:58.630
Make sure to only use these
two methods when it is really

00:04:58.630 --> 00:05:00.870
the best or only solution.

00:05:00.870 --> 00:05:02.620
Your users are used
to certain interaction

00:05:02.620 --> 00:05:04.270
with the home indicator
and don't want

00:05:04.270 --> 00:05:06.310
to feel trapped in your app.

00:05:06.310 --> 00:05:08.080
And now for the
last tip and the one

00:05:08.080 --> 00:05:11.110
you'll probably use
most often, safe areas--

00:05:11.110 --> 00:05:14.680
in your XIB or storyboard file,
enable Use Safe Area Layout

00:05:14.680 --> 00:05:15.490
Guides.

00:05:15.490 --> 00:05:18.349
It won't be automatically
enabled for older files.

00:05:18.349 --> 00:05:20.140
This will automatically
change constraints,

00:05:20.140 --> 00:05:21.681
that are set to the
views boundaries,

00:05:21.681 --> 00:05:23.370
to use safe areas instead.

00:05:23.370 --> 00:05:25.480
Safe areas represent
the parts of your view

00:05:25.480 --> 00:05:28.240
that aren't obscured by rounded
corners, the home indicator,

00:05:28.240 --> 00:05:29.980
or the sensor housing.

00:05:29.980 --> 00:05:33.220
So if, for example, you have
the control with constraints

00:05:33.220 --> 00:05:35.800
to be displayed x points
from the bottom of the view,

00:05:35.800 --> 00:05:37.495
you'll probably
want to update it

00:05:37.495 --> 00:05:39.810
to be x points from
the bottom safe area,

00:05:39.810 --> 00:05:43.090
so that it won't be overlapped
by the home indicator.

00:05:43.090 --> 00:05:44.890
A specific example
for table views,

00:05:44.890 --> 00:05:47.530
as you can see in Apple
system apps, for example,

00:05:47.530 --> 00:05:49.930
is the table view,
itself, goes from one end

00:05:49.930 --> 00:05:51.340
to the screen to the other.

00:05:51.340 --> 00:05:53.410
It's easily visible
in the headers,

00:05:53.410 --> 00:05:55.480
while the actual
content is indented

00:05:55.480 --> 00:05:57.190
according to the safe areas.

00:05:57.190 --> 00:05:59.050
This is mainly
visible in landscape

00:05:59.050 --> 00:06:02.080
since there, the
left and right insets

00:06:02.080 --> 00:06:04.990
are significantly different
than on older devices

00:06:04.990 --> 00:06:06.857
due to the sensor housing.

00:06:06.857 --> 00:06:08.440
I hope you found
this useful, and will

00:06:08.440 --> 00:06:09.856
use what you learned
here in order

00:06:09.856 --> 00:06:12.460
to provide all of your users
on all devices the best

00:06:12.460 --> 00:06:15.070
possible user experience
while using your app.

00:06:15.070 --> 00:06:17.050
I can assure you,
they'll appreciate it.

00:06:17.050 --> 00:06:19.247
Until next time, I'm
Rony Rozen for Route 85.

00:06:19.247 --> 00:06:20.080
Thanks for watching.

00:06:20.080 --> 00:06:23.730
[MUSIC PLAYING]

