WEBVTT
Kind: captions
Language: en

00:00:03.220 --> 00:00:05.020
&gt;&gt;Ian Lewis: (Off mike.)
&gt;&gt;Dan Galpin: I think there are about two

00:00:05.020 --> 00:00:06.680
people who got --
&gt;&gt;Ian Lewis: Everyone in the front row got

00:00:06.680 --> 00:00:07.680
that joke.

00:00:07.680 --> 00:00:08.680
The rest of you, doesn't matter.

00:00:08.680 --> 00:00:09.680
[ Applause ]
&gt;&gt;Dan Galpin: It's not a very Googley joke,

00:00:09.680 --> 00:00:10.680
though, as they go.

00:00:10.680 --> 00:00:11.720
I guess we're going to go with half of a screen.

00:00:11.720 --> 00:00:12.720
&gt;&gt;Ian Lewis: People on the right side of the
room, sorry, man.

00:00:12.720 --> 00:00:13.720
Sorry.

00:00:13.720 --> 00:00:14.720
&gt;&gt;Dan Galpin: Now we need volume off of that,
believe it or not.

00:00:14.720 --> 00:00:15.720
Ooh, that's good.

00:00:15.720 --> 00:00:16.720
&gt;&gt;Ian Lewis: Oh, no.

00:00:16.720 --> 00:00:17.720
That one's better.

00:00:17.720 --> 00:00:18.720
Here.

00:00:18.720 --> 00:00:19.720
(Sound effects).

00:00:19.720 --> 00:00:20.720
&gt;&gt;Dan Galpin: There we are.

00:00:20.720 --> 00:00:21.720
Each week, deep in their secret chambers below
Google building 44, the Android editorial

00:00:21.720 --> 00:00:22.720
board meets to decide which apps and games
will be featured in the Google Play Store.

00:00:22.720 --> 00:00:23.720
This is an important decision.

00:00:23.720 --> 00:00:25.900
For a lot of developers, it's a matter of
life and death.

00:00:25.900 --> 00:00:28.349
So we take it very seriously.

00:00:28.349 --> 00:00:34.120
&gt;&gt;Ian Lewis: At the same time, it is an editorial
decision.

00:00:34.120 --> 00:00:36.940
What does that mean?

00:00:36.940 --> 00:00:38.050
You have no control over this.

00:00:38.050 --> 00:00:39.910
I have no control over this.

00:00:39.910 --> 00:00:45.519
The -- my wife wants to call me, but that's
not going to happen.

00:00:45.519 --> 00:00:47.840
[ Laughter ]
&gt;&gt;Dan Galpin: The one time you're allowed

00:00:47.840 --> 00:00:49.380
to say "no."

00:00:49.380 --> 00:00:51.239
&gt;&gt;Ian Lewis: Exactly.

00:00:51.239 --> 00:00:54.220
[ Laughter ]
&gt;&gt;Ian Lewis: You can't pay for featuring in

00:00:54.220 --> 00:00:55.340
Google Play.

00:00:55.340 --> 00:00:57.390
You can't bribe people.

00:00:57.390 --> 00:01:00.870
You can't send us bottles of Dom Perignon
and then get featured.

00:01:00.870 --> 00:01:04.379
That actually doesn't work as well as some
people seem to think.

00:01:04.379 --> 00:01:05.610
&gt;&gt;Dan Galpin: But keep trying.

00:01:05.610 --> 00:01:08.270
&gt;&gt;Ian Lewis: There's no sure-fire recipe for
getting featured.

00:01:08.270 --> 00:01:12.030
The decision is made by the editorial team
according to their own criteria.

00:01:12.030 --> 00:01:17.860
So you're never going to see a talk called,
"What to do to get featured on Google Play."

00:01:17.860 --> 00:01:24.050
At the same time, Dan and I have spent a lot
of time with the editorial board, and we've

00:01:24.050 --> 00:01:29.840
seen a lot of games, a lot of excellent games,
get rejected for what seem like sort of minor

00:01:29.840 --> 00:01:31.140
reasons.

00:01:31.140 --> 00:01:33.510
A lot of them are problems that are really
easy to fix.

00:01:33.510 --> 00:01:40.330
So although we can't talk about what to do
to get featured on Google Play, we can talk

00:01:40.330 --> 00:01:44.900
about what to not do to not not not get featured
on not --

00:01:44.900 --> 00:01:47.590
[ Laughter ]
&gt;&gt;Ian Lewis: -- not -- yeah.

00:01:47.590 --> 00:01:50.950
Anyway --
&gt;&gt;Dan Galpin: The transcription is going to

00:01:50.950 --> 00:01:51.950
be great there.

00:01:51.950 --> 00:01:57.190
&gt;&gt;Ian Lewis: More succinctly, ten things that
every Android gamer developer should know.

00:01:57.190 --> 00:02:00.130
So let's start with number one, Dan.

00:02:00.130 --> 00:02:02.710
&gt;&gt;Dan Galpin: All right.

00:02:02.710 --> 00:02:09.700
So one of the things that people do when they
go out and buy their great new Android handset

00:02:09.700 --> 00:02:14.230
is they come back and go to Google Play, and
they want to get great stuff.

00:02:14.230 --> 00:02:19.010
And, you know -- that was good -- we at Android
love all your releases, but we always have

00:02:19.010 --> 00:02:23.510
a special place in our heart for our newest
version and we love it when people use our

00:02:23.510 --> 00:02:27.730
newest operating system.

00:02:27.730 --> 00:02:29.920
We also love it when people buy now Android
devices.

00:02:29.920 --> 00:02:35.370
So we tend to avoid featuring anything that's
incompatible with the latest and greatest.

00:02:35.370 --> 00:02:37.420
The first thing you want to do is make sure
you support high resolutions.

00:02:37.420 --> 00:02:41.520
You'll need to author your assets today for
at least 720p.

00:02:41.520 --> 00:02:44.600
And remember that not all 720p displays are
equal.

00:02:44.600 --> 00:02:48.180
Assets that look great on a ten-inch tablet
aren't necessarily going to work on a seven-inch

00:02:48.180 --> 00:02:49.180
tablet or phone.

00:02:49.180 --> 00:02:54.181
And this is especially true for UI elements
that have to be sized like your fingers, like

00:02:54.181 --> 00:02:55.181
drumsticks.

00:02:55.181 --> 00:02:59.780
&gt;&gt;Ian Lewis: Oh, Dan, tell them what the dpi
the Nexus 7 is.

00:02:59.780 --> 00:03:03.610
&gt;&gt;Dan Galpin: So the Nexus 7 is in between.

00:03:03.610 --> 00:03:07.319
But you should really think of it for the
most part as being an hdpi device.

00:03:07.319 --> 00:03:10.370
We refer to it as tvdpi.

00:03:10.370 --> 00:03:14.480
And what this means is, don't expect to have
a resource that's sized for your finger.

00:03:14.480 --> 00:03:17.800
Instead, look at the display density and scale
your resources accordingly.

00:03:17.800 --> 00:03:23.930
&gt;&gt;Ian Lewis: Because you do not want to be
the guy that designs the Xbox one controller;

00:03:23.930 --> 00:03:24.959
right?

00:03:24.959 --> 00:03:27.190
I've seen tablet games that basically do that.

00:03:27.190 --> 00:03:31.239
&gt;&gt;Dan Galpin: Another thing you want to make
sure is do -- make sure your app isn't running

00:03:31.239 --> 00:03:33.560
compatibility mode on Honeycomb and above.

00:03:33.560 --> 00:03:36.500
You can tell you're in compatibility mode
because there will be extra icons in your

00:03:36.500 --> 00:03:39.709
status bar like the menu button.

00:03:39.709 --> 00:03:44.790
Not everyone knows what this means, but to
experienced users, it's a red flag.

00:03:44.790 --> 00:03:45.790
So what can you do about it?

00:03:45.790 --> 00:03:48.280
It turns out the solution is very simple.

00:03:48.280 --> 00:03:50.840
Just specify a target API of 11 or above.

00:03:50.840 --> 00:03:55.709
The target API for what reason is called target
SDK version in your application manifest and

00:03:55.709 --> 00:03:58.569
you should really target the latest version
as much as possible.

00:03:58.569 --> 00:04:03.769
All that really means is I have tested on
the latest version of Android.

00:04:03.769 --> 00:04:06.870
And this is good, because we won't turn on
any compatibility shims.

00:04:06.870 --> 00:04:11.690
&gt;&gt;Ian Lewis: Now, the compiler will give you
a warning.

00:04:11.690 --> 00:04:16.780
It will say, hey, you just specified a target
SDK that's greater than your min SDK, like

00:04:16.780 --> 00:04:18.090
that's a problem.

00:04:18.090 --> 00:04:19.130
&gt;&gt;Dan Galpin: Yeah, yeah.

00:04:19.130 --> 00:04:22.850
So that's the one time -- Normally, look at
Lint and be, like, "Yes, Lint is right."

00:04:22.850 --> 00:04:24.560
In this case, --
&gt;&gt;Ian Lewis: Don't believe its lies.

00:04:24.560 --> 00:04:25.560
&gt;&gt;Dan Galpin: Yeah.

00:04:25.560 --> 00:04:28.580
Lint will actually do the right thing and
it will actually tell you if you use API levels

00:04:28.580 --> 00:04:31.260
that aren't going to work on your target devices.

00:04:31.260 --> 00:04:32.580
So it's good.

00:04:32.580 --> 00:04:37.220
A lot of programmers worry that specifying
a high-target API is going to mean it gets

00:04:37.220 --> 00:04:38.580
filtered out on the Play Store.

00:04:38.580 --> 00:04:39.660
Of course, that isn't the case.

00:04:39.660 --> 00:04:42.820
It's just designed to turn off compatibility
shim.

00:04:42.820 --> 00:04:46.230
Filtering is done with min and max SDK version.

00:04:46.230 --> 00:04:50.770
And, in general, it makes sense to send min
SDK version to the lowest version that your

00:04:50.770 --> 00:04:54.250
game will run on, set target SDK version to
the version of the SDK you're compiling against

00:04:54.250 --> 00:04:58.810
or testing against, and really don't ever
set max SDK version.

00:04:58.810 --> 00:05:02.400
But you know what's cooler than API level
16?

00:05:02.400 --> 00:05:03.680
Lights out.

00:05:03.680 --> 00:05:09.820
You can almost completely hide the soft buttons.

00:05:09.820 --> 00:05:12.060
And this is really easy to do.

00:05:12.060 --> 00:05:16.009
Just, literally, take -- go to your view and
set your view to status bar hidden.

00:05:16.009 --> 00:05:17.440
You can only do this on Honeycomb and above.

00:05:17.440 --> 00:05:22.050
The good news is that it's very easy to put
in a conditional around that, as long as you're,

00:05:22.050 --> 00:05:24.139
you know, not targeting Donut or something
like that.

00:05:24.139 --> 00:05:25.139
&gt;&gt;Ian Lewis: Right.

00:05:25.139 --> 00:05:28.240
They told us by the way to put a code sample
in for that and we're like, these --

00:05:28.240 --> 00:05:31.170
&gt;&gt;Dan Galpin: They don't need a code sample
for that.

00:05:31.170 --> 00:05:36.830
&gt;&gt;Ian Lewis: We'll be posting code sample
later.

00:05:36.830 --> 00:05:43.320
So thing number two, how to evade pirates
and symptom vampires.

00:05:43.320 --> 00:05:49.410
So by "pirates" and "vampires," we mean people
who steal software and people who steal bandwidth

00:05:49.410 --> 00:05:52.770
by downloading game (indiscernible) resources
when they haven't actually bought your game.

00:05:52.770 --> 00:05:58.389
Now, we can go on and on about whether pirates
represent lost sales or theoretical lost sales

00:05:58.389 --> 00:06:02.830
or a wonderful new distribution mechanism
that's going to make us all rich.

00:06:02.830 --> 00:06:08.110
But of the two, vampires are the ones we're
most concerned about, because they represent

00:06:08.110 --> 00:06:15.000
an immediate bill to you for bandwidth that
you're using to download assets that were

00:06:15.000 --> 00:06:17.020
never paid for.

00:06:17.020 --> 00:06:23.300
So we want to stop vampires the most, but
we do want to stop them both.

00:06:23.300 --> 00:06:28.120
When we're talking about stopping pirates,
a lot of times we talk about copy protection.

00:06:28.120 --> 00:06:31.880
There's one thing that you should never do.

00:06:31.880 --> 00:06:38.300
And that is check the copy protection box
on the Google Play publisher site.

00:06:38.300 --> 00:06:45.220
We had this thing when we were sort of young
and naive as an operating system called forward-locking.

00:06:45.220 --> 00:06:50.240
And it prevented users from casually copying
APKs from phone to phone.

00:06:50.240 --> 00:06:54.980
We optimistically called it copy protection
because we thought that it would help to curb

00:06:54.980 --> 00:06:55.990
piracy.

00:06:55.990 --> 00:06:58.139
It turns out we were completely wrong.

00:06:58.139 --> 00:07:01.380
[ Laughter ]
&gt;&gt;Ian Lewis: Forward-locking doesn't actually

00:07:01.380 --> 00:07:02.690
stop piracy at all.

00:07:02.690 --> 00:07:05.010
It's supposed to keep users from copying games.

00:07:05.010 --> 00:07:10.889
But what it really does is prevents the completely
legitimate activity of putting a game on the

00:07:10.889 --> 00:07:12.410
SD card.

00:07:12.410 --> 00:07:14.069
But it gets better.

00:07:14.069 --> 00:07:20.060
Not only does forward-locking prevent you
from moving to SD card, but it also expands

00:07:20.060 --> 00:07:23.160
the size of the APK on your internal storage.

00:07:23.160 --> 00:07:27.710
So you basically have got the worst of both
worlds if you check that box.

00:07:27.710 --> 00:07:31.580
If you did ever check it, go uncheck it now.

00:07:31.580 --> 00:07:37.710
Just remember that once you remove forward-locking,
you will have to do another APK upload to

00:07:37.710 --> 00:07:42.610
get that update to come out.

00:07:42.610 --> 00:07:47.639
We're actually removing it very soon, because
it turned out to be a bit of what they call

00:07:47.639 --> 00:07:50.509
a Charlie Foxtrot in the business.

00:07:50.509 --> 00:07:52.259
So what do you do?

00:07:52.259 --> 00:07:58.819
Well, first, in order to deter pirates, you
should use the license verification library.

00:07:58.819 --> 00:08:01.789
Now, this isn't a perfect solution.

00:08:01.789 --> 00:08:04.970
But it will help to deter casual piracy.

00:08:04.970 --> 00:08:09.370
It will not stop the most determined hackers.

00:08:09.370 --> 00:08:13.100
For vampires, though, we have an extremely
good solution.

00:08:13.100 --> 00:08:19.060
It's already saved many of our partners hundreds
of thousands of dollars in bandwidth.

00:08:19.060 --> 00:08:24.620
And that is APK expansion files, which means
that Google is hosting your large files for

00:08:24.620 --> 00:08:29.430
you instead of you having to use your own
content distribution network.

00:08:29.430 --> 00:08:31.669
This is good for two reasons.

00:08:31.669 --> 00:08:34.750
First, no cost to you.

00:08:34.750 --> 00:08:39.250
Second, unless you're a very, very large company
yourself, we probably have a better CDN than

00:08:39.250 --> 00:08:40.349
you do.

00:08:40.349 --> 00:08:42.909
So faster and cheaper.

00:08:42.909 --> 00:08:46.660
Use APK expansion files.

00:08:46.660 --> 00:08:52.040
You can also, if you do want to serve your
own files, watch Dan's presentation from last

00:08:52.040 --> 00:09:00.699
year's Google I/O to understand how to tie
large file downloads to the LVL, license verification

00:09:00.699 --> 00:09:01.699
library.

00:09:01.699 --> 00:09:08.589
That's actually what the APK expansion system
does internally.

00:09:08.589 --> 00:09:12.209
And you can do it externally as well.

00:09:12.209 --> 00:09:15.239
Large file hosting is available now.

00:09:15.239 --> 00:09:18.589
It works on almost everything.

00:09:18.589 --> 00:09:25.279
And for the devices that were unable to get
the Google Play update that enables large

00:09:25.279 --> 00:09:34.600
files, you can download Dan's excellent shim
library that is chockful of best practices

00:09:34.600 --> 00:09:39.899
for how to do a background download, and you'll
find that your user experience for downloads

00:09:39.899 --> 00:09:41.889
is much, much better.

00:09:41.889 --> 00:09:46.209
&gt;&gt;Dan Galpin: Thank you.

00:09:46.209 --> 00:09:50.959
So now to point 3, which is don't mess with
the buttons.

00:09:50.959 --> 00:09:56.670
And as you noticed, these Android devices
have buttons on them, things like the lock

00:09:56.670 --> 00:10:03.149
button and the volume button and the back
button and the home button and the, you know,

00:10:03.149 --> 00:10:04.379
app switcher button.

00:10:04.379 --> 00:10:08.610
And, basically, the goal with most of these
is -- is either leave it alone because you

00:10:08.610 --> 00:10:15.329
can't do anything about it, or try to use
the default behavior of the framework.

00:10:15.329 --> 00:10:18.410
In the case of the volume keys, you want to
make sure those volume messages go to the

00:10:18.410 --> 00:10:22.509
framework so you actually get the normal popup
that the user expects for controlling the

00:10:22.509 --> 00:10:23.509
volume.

00:10:23.509 --> 00:10:29.230
Now, the one real question that game developers
have is, what do I do about the back button?

00:10:29.230 --> 00:10:32.799
Because most games actually consist of a single
activity.

00:10:32.799 --> 00:10:38.670
And the default behavior for the back button
is just to close, destroy the activity, and

00:10:38.670 --> 00:10:39.670
remove history.

00:10:39.670 --> 00:10:43.690
So the way we like to think of the back button
is it's sort of like the escape key.

00:10:43.690 --> 00:10:46.939
So let's take our example game here.

00:10:46.939 --> 00:10:53.420
And, you know, basically, you know, this is
-- you know, this is a simple arcade game.

00:10:53.420 --> 00:10:56.309
And we start the game.

00:10:56.309 --> 00:10:57.670
We go through a few menus.

00:10:57.670 --> 00:10:59.329
We're in the middle of our playing.

00:10:59.329 --> 00:11:01.600
And we hit the back key.

00:11:01.600 --> 00:11:04.999
And, boom, what does that do?

00:11:04.999 --> 00:11:11.209
Well, it makes sense for it to take us back
here, because that's what the user expects;

00:11:11.209 --> 00:11:12.209
right?

00:11:12.209 --> 00:11:13.319
That's the screen the user was on.

00:11:13.319 --> 00:11:17.619
Even though this was all a single activity,
we expect the Android navigation paradigm

00:11:17.619 --> 00:11:20.410
to be, you know, used.

00:11:20.410 --> 00:11:25.989
So another option is to actually pop up a
dialogue.

00:11:25.989 --> 00:11:27.250
And this is very common.

00:11:27.250 --> 00:11:28.769
A lot of game developers do this.

00:11:28.769 --> 00:11:34.059
It's not the best practice because it really
doesn't match the Android navigation paradigm.

00:11:34.059 --> 00:11:39.829
But it's very well known, and we certainly
don't have anything against this practice.

00:11:39.829 --> 00:11:42.610
So the real question now is, you put up this
dialogue.

00:11:42.610 --> 00:11:46.540
And where do you want it to go after you hit
the back key again?

00:11:46.540 --> 00:11:48.629
Do you want it to go back to this screen?

00:11:48.629 --> 00:11:52.339
Or do you want it to go back to the game play?

00:11:52.339 --> 00:11:58.109
And, really, if -- since this one is obviously
looking like a dialogue, we expect it to behave

00:11:58.109 --> 00:11:59.420
like a dialogue in Android.

00:11:59.420 --> 00:12:03.120
We pop the dialogue in the back key, and we
expect it to be dismissed.

00:12:03.120 --> 00:12:08.589
In general, what we're talking about here
is choosing the UI that will disrupt the user's

00:12:08.589 --> 00:12:10.619
game experience the least.

00:12:10.619 --> 00:12:18.199
So dismissing the pause menu like a dialogue
actually will be what the user expects.

00:12:18.199 --> 00:12:23.489
But even better again, we skip the pause menu
entirely, go back to our previous screen.

00:12:23.489 --> 00:12:27.499
We have some very obvious option to allow
the user to continue where they left off.

00:12:27.499 --> 00:12:33.160
&gt;&gt;Ian Lewis: Now, I realize that this is an
incredible mockup and you're probably thinking,

00:12:33.160 --> 00:12:35.420
okay, I want my game to look exactly like
that.

00:12:35.420 --> 00:12:38.970
But the truth is, Dan and I made it in Photoshop
and we're not professionals.

00:12:38.970 --> 00:12:41.179
So you might want to steer clear.

00:12:41.179 --> 00:12:44.079
But the main point that we're --
&gt;&gt;Dan Galpin: Are you saying we don't have

00:12:44.079 --> 00:12:45.410
elite design skills?

00:12:45.410 --> 00:12:47.309
&gt;&gt;Ian Lewis: No.

00:12:47.309 --> 00:12:49.889
No, we don't.

00:12:49.889 --> 00:12:55.740
The main point is that you want to be able
to go back to a previous UI screen, but always

00:12:55.740 --> 00:12:57.049
have a way to go forward again.

00:12:57.049 --> 00:12:58.179
&gt;&gt;Dan Galpin: Exactly.

00:12:58.179 --> 00:13:00.829
And here's the thing really, really not to
do.

00:13:00.829 --> 00:13:02.930
And there's a lot of reasons why this is bad.

00:13:02.930 --> 00:13:09.399
One that, obviously, this is a system dialogue
which drops the user out of their game.

00:13:09.399 --> 00:13:13.379
It's better than just quitting without warning,
admittedly, you know, because at least the

00:13:13.379 --> 00:13:16.689
user hasn't lost data and lost the state here.

00:13:16.689 --> 00:13:18.040
But not by much.

00:13:18.040 --> 00:13:19.889
It -- just don't do it.

00:13:19.889 --> 00:13:22.410
So here is our back button recap.

00:13:22.410 --> 00:13:26.009
And believe it or not, there have been internal
discussions about this, and debates.

00:13:26.009 --> 00:13:27.239
&gt;&gt;Ian Lewis: Ad nauseam.

00:13:27.239 --> 00:13:28.459
&gt;&gt;Dan Galpin: Yes, exactly.

00:13:28.459 --> 00:13:33.649
But this is the basic theory of back button
in Android games.

00:13:33.649 --> 00:13:35.760
In a dialogue, dismiss the dialogue.

00:13:35.760 --> 00:13:38.989
In a UI, whenever possible, move to previous
screen.

00:13:38.989 --> 00:13:45.309
In game play, either pause or do one of the
following: Show an options dialogue, move

00:13:45.309 --> 00:13:46.889
to the previous screen.

00:13:46.889 --> 00:13:49.269
And make sure that they haven't lost any state.

00:13:49.269 --> 00:13:51.619
And at the initial UI screen, you can just
dismiss the app.

00:13:51.619 --> 00:13:55.410
There's no need to put up a big screen that
says, "Do you really want to quit?"

00:13:55.410 --> 00:13:57.410
&gt;&gt;Ian Lewis: Do you really want to quit the
title screen?

00:13:57.410 --> 00:13:58.679
This is an awesome title screen.

00:13:58.679 --> 00:14:00.300
&gt;&gt;Dan Galpin: This is an epic title screen.

00:14:00.300 --> 00:14:01.300
&gt;&gt;Ian Lewis: Exactly.

00:14:01.300 --> 00:14:03.889
But the most important thing is, never lose
progress.

00:14:03.889 --> 00:14:05.299
&gt;&gt;Dan Galpin: Never.

00:14:05.299 --> 00:14:07.980
&gt;&gt;Ian Lewis: Never allow the user to lose
progress.

00:14:07.980 --> 00:14:08.980
That would suck.

00:14:08.980 --> 00:14:15.730
To a certain extent, that also means don't
lose progress in terms of needing to go back

00:14:15.730 --> 00:14:21.269
and load for 30 seconds, which sometimes you
can't do much about.

00:14:21.269 --> 00:14:23.379
All right.

00:14:23.379 --> 00:14:27.399
Number 4, respect the life cycle.

00:14:27.399 --> 00:14:35.329
We're going to illustrate the life cycle problem
with a little story.

00:14:35.329 --> 00:14:37.439
So wake up early in the morning.

00:14:37.439 --> 00:14:39.569
First thing I do is reach for my phone.

00:14:39.569 --> 00:14:42.579
Can you get a little gaming in before work?

00:14:42.579 --> 00:14:44.639
When I'm going to go to work and play for
games.

00:14:44.639 --> 00:14:46.009
But let's pretend this isn't me.

00:14:46.009 --> 00:14:47.879
This is some other dude.

00:14:47.879 --> 00:14:51.199
So, right, on a roll.

00:14:51.199 --> 00:14:52.350
Everything's cool.

00:14:52.350 --> 00:14:53.559
Totally lost track of time.

00:14:53.559 --> 00:14:55.679
Oh, no, I'm going to miss my bus.

00:14:55.679 --> 00:15:03.100
So really quick, throw on my -- my work clothes,
which totally look like this, and jump on

00:15:03.100 --> 00:15:06.220
the bus, head off to work.

00:15:06.220 --> 00:15:12.329
Now I'm giving a presentation to my boss.

00:15:12.329 --> 00:15:18.709
Everything's going well until I've got to
check something on my phone; right?

00:15:18.709 --> 00:15:19.709
Exactly.

00:15:19.709 --> 00:15:20.709
Pull that baby out.

00:15:20.709 --> 00:15:22.489
Turn it on.

00:15:22.489 --> 00:15:25.489
Oh, my God, what's going on here?

00:15:25.489 --> 00:15:28.559
It's not just that it's playing music.

00:15:28.559 --> 00:15:30.230
It's playing music and the phone is locked.

00:15:30.230 --> 00:15:34.429
And now I'm really stressed out and I've got
this lengthy PIN code that I need to enter

00:15:34.429 --> 00:15:36.980
and I can't even remember what it is; right?

00:15:36.980 --> 00:15:46.120
So everything sucks, my boss thinks I'm more
of an idiot than he already did.

00:15:46.120 --> 00:15:48.899
I've just ruined my whole day.

00:15:48.899 --> 00:15:52.620
What's the problem here?

00:15:52.620 --> 00:16:00.169
Well, the issue is that the life cycle here
is complicated.

00:16:00.169 --> 00:16:07.600
Not only is it complicated, it's varying slightly
from OS to OS, none of the delivery order

00:16:07.600 --> 00:16:09.410
that you're seeing here is guaranteed.

00:16:09.410 --> 00:16:18.579
In fact, it is changed in Jelly Bean because
-- (Clap) -- we told them to.

00:16:18.579 --> 00:16:23.100
[ Laughter ]
&gt;&gt;Ian Lewis: So the problem is, you lock your

00:16:23.100 --> 00:16:26.269
phone, and the app gets an onpause.

00:16:26.269 --> 00:16:30.779
And then it gets an onstop at some point.

00:16:30.779 --> 00:16:38.699
When you -- and, actually, the really great
thing is, on Honeycomb and ICS, there were

00:16:38.699 --> 00:16:43.669
some cases where while the phone was asleep,
you would get an onresume.

00:16:43.669 --> 00:16:44.929
We didn't cover that here.

00:16:44.929 --> 00:16:46.399
But sometimes that will happen.

00:16:46.399 --> 00:16:53.220
Then the user goes back and presses the lock
button again and the phone tries to wake up

00:16:53.220 --> 00:16:59.259
and sends the foreground app, an onrestart,
onresume.

00:16:59.259 --> 00:17:04.829
Now, you might be thinking at this point,
who's the foreground app?

00:17:04.829 --> 00:17:08.559
You would be justified in assuming that it's
the app in the foreground, which is the lock

00:17:08.559 --> 00:17:09.559
screen.

00:17:09.559 --> 00:17:10.559
Wrong.

00:17:10.559 --> 00:17:15.209
It's actually your app because until Jelly
Bean, the lock screen didn't count as an application,

00:17:15.209 --> 00:17:18.329
it was sort of a random overlay.

00:17:18.329 --> 00:17:25.149
So what will happen is your application thinks
that it's woken up and starts, you know, playing

00:17:25.149 --> 00:17:30.230
music or doing whatever, but it's actually
being hidden by the lock screen still, and

00:17:30.230 --> 00:17:33.669
that's a really, really annoying behavior.

00:17:33.669 --> 00:17:36.550
There's actually a very, very easy way to
fix this.

00:17:36.550 --> 00:17:41.330
And forget about all this life cycle stuff
because it's difficult.

00:17:41.330 --> 00:17:46.300
There are edge cases, it's incredibly annoying
to get right.

00:17:46.300 --> 00:17:52.850
All you need to do is this: If your application's
paused, if your game is paused, stop playing

00:17:52.850 --> 00:17:54.529
the sound.

00:17:54.529 --> 00:17:59.429
And when you want to start playing sound again,
what do you look for?

00:17:59.429 --> 00:18:04.480
Not some Android life cycle, you look for
the game getting unpaused which requires some

00:18:04.480 --> 00:18:06.890
sort of user activity, right?

00:18:06.890 --> 00:18:11.610
So the user hits a button to take you out
of pause and go back to game play, that's

00:18:11.610 --> 00:18:13.610
when you restart the sound.

00:18:13.610 --> 00:18:16.909
It turns out this is great for two reasons:
First, it avoids all this nonsense.

00:18:16.909 --> 00:18:22.080
Second, it turns out it's a great user experience
to leave the app and then when you come back

00:18:22.080 --> 00:18:29.320
in it's paused, so you don't just get thrown
right back into game play before you're prepared.

00:18:29.320 --> 00:18:40.159
Of course, hitting lock screen isn't the only
way that your game can get paused or even

00:18:40.159 --> 00:18:42.970
killed during game play.

00:18:42.970 --> 00:18:49.630
This is a consequence of being on a mobile
operating system, right?

00:18:49.630 --> 00:18:56.130
It's not about multitasking, it's not about,
you know, which model we chose or how we tombstone

00:18:56.130 --> 00:19:01.100
or anything like that, it's just the fact
that your user is playing your game on a device

00:19:01.100 --> 00:19:05.669
that's designed to let him know when important
things happen like a phone call comes in.

00:19:05.669 --> 00:19:09.590
It's designed to be put in a pocket when he
needs to catch the bus.

00:19:09.590 --> 00:19:16.000
Android, by its very nature, being a smartphone
OS, is interruptible, and so you need to be

00:19:16.000 --> 00:19:22.730
completely prepared to handle those interruptions
in a way that doesn't waste your users' time.

00:19:22.730 --> 00:19:28.720
So we said it before and we're going to recap
now -- never, ever, allow your user to lose

00:19:28.720 --> 00:19:35.130
progress based on an interruption that's beyond
their control or even an interruption that's

00:19:35.130 --> 00:19:36.309
under their control.

00:19:36.309 --> 00:19:39.380
Should we go to thing five?

00:19:39.380 --> 00:19:45.290
&gt;&gt;Dan Galpin: Exactly, all right, so Ian,
this is your chance to get on the synthesizer

00:19:45.290 --> 00:19:46.290
here.

00:19:46.290 --> 00:19:49.620
Just want you to know we're using an FM synthesizer
that is unfortunately -- there we are, we

00:19:49.620 --> 00:19:50.620
needed some volume.

00:19:50.620 --> 00:19:55.409
This is an open source project, so you're
more than welcome to download it and Ian is

00:19:55.409 --> 00:19:57.590
going to give me some nice -- that's good,
all right.

00:19:57.590 --> 00:19:59.080
[ Music ]
&gt;&gt;Ian Lewis: Howdy-doo, Dan!

00:19:59.080 --> 00:20:01.929
&gt;&gt;Dan Galpin: So minimize permissions.

00:20:01.929 --> 00:20:06.480
This is an actual application on Google Play.

00:20:06.480 --> 00:20:09.970
This is actually the list of permissions that
the user has to see.

00:20:09.970 --> 00:20:12.809
[ Laughter ]
&gt;&gt;Dan Galpin: And, you know, like, what is

00:20:12.809 --> 00:20:15.320
the user going to be like, gee, what am I
agreeing to?

00:20:15.320 --> 00:20:16.320
Okay.

00:20:16.320 --> 00:20:17.639
That is actually from the web interface.

00:20:17.639 --> 00:20:24.220
So what we have now is our top ten bad game
permissions.

00:20:24.220 --> 00:20:28.360
Yes, this is a top ten list inside of a top
ten list.

00:20:28.360 --> 00:20:31.800
&gt;&gt;Ian Lewis: By the way, you can tell that
this is a Dan Galpin slide deck because we

00:20:31.800 --> 00:20:35.320
used the fire effect more than once.

00:20:35.320 --> 00:20:36.369
Totally broke that rule.

00:20:36.369 --> 00:20:39.940
[ Laughter ]
&gt;&gt;Dan Galpin: Number one bad -- Number 10

00:20:39.940 --> 00:20:44.389
-- excuse me -- bad permission for a game
to have is change Wi-Fi settings.

00:20:44.389 --> 00:20:46.539
Why are you doing this?

00:20:46.539 --> 00:20:50.019
You're turning -- you're toggling Wi-Fi on
and you have no idea whether the user has

00:20:50.019 --> 00:20:54.150
actually set up Wi-Fi and even better, there's
an intent to throw the user right into the

00:20:54.150 --> 00:20:55.399
Wi-Fi chooser.

00:20:55.399 --> 00:20:57.450
So don't do it.

00:20:57.450 --> 00:20:58.870
Receive boot completed.

00:20:58.870 --> 00:21:02.960
Okay, admittedly there are some games that
are resource management kind of games and

00:21:02.960 --> 00:21:07.059
they really want to make sure they can constantly
set alarms, but in general most games don't

00:21:07.059 --> 00:21:10.179
need to do this unless they're trying to spam
the user with something.

00:21:10.179 --> 00:21:13.649
Just please don't do this unless you absolutely
have you have to.

00:21:13.649 --> 00:21:18.410
Probably the only good use of actually starting
your game up is because you want to set an

00:21:18.410 --> 00:21:19.410
alarm.

00:21:19.410 --> 00:21:20.410
And that's pretty much it.

00:21:20.410 --> 00:21:23.059
You want to make an alarm persist across a
boot.

00:21:23.059 --> 00:21:24.940
Do very, very lightweight stuff here.

00:21:24.940 --> 00:21:30.640
The real key thing is, whatever you do, do
not have a consistently running service that

00:21:30.640 --> 00:21:33.360
makes a network connection and sucks the user's
battery down.

00:21:33.360 --> 00:21:34.500
And we'll talk about that a little later.

00:21:34.500 --> 00:21:37.830
&gt;&gt;Ian Lewis: Unless you're making a game for
me because I love it when my game notifies

00:21:37.830 --> 00:21:40.789
me that my cow needs to be clicked, I would
forget to click that cow.

00:21:40.789 --> 00:21:41.789
&gt;&gt;Dan Galpin: Yeah, absolutely.

00:21:41.789 --> 00:21:46.730
Not to mention, it's really nice, it helps
to keep your hand warm as the phone's radio

00:21:46.730 --> 00:21:49.000
is constantly being kept on in your pocket.

00:21:49.000 --> 00:21:50.000
All right.

00:21:50.000 --> 00:21:52.590
Query running tasks.

00:21:52.590 --> 00:21:54.850
Why does a game want to spy other tasks?

00:21:54.850 --> 00:21:58.890
There are a couple semi-legitimate reasons
for this, but most of the time, your game

00:21:58.890 --> 00:22:01.899
doesn't need to know what other tasks are
running.

00:22:01.899 --> 00:22:03.519
Obtain fine location.

00:22:03.519 --> 00:22:07.860
Okay, now, there's a lot of people, like,
I have a location-based game, if you have

00:22:07.860 --> 00:22:11.929
a location-based game, if your game actually
maybe has a change in it, if the user walks

00:22:11.929 --> 00:22:15.710
into their local coffee shop, then, yeah,
obtain fine location is cool.

00:22:15.710 --> 00:22:20.370
For most games, users are concerned with analytics,
they want to know approximately where people

00:22:20.370 --> 00:22:23.740
are playing their game, they want to know
a little bit about the demographics of their

00:22:23.740 --> 00:22:24.740
marketing.

00:22:24.740 --> 00:22:29.169
Obtain fine location is just kind of creepy
and it requires firing up the GPS, using a

00:22:29.169 --> 00:22:30.380
lot of battery.

00:22:30.380 --> 00:22:31.860
Don't do it, course location is good enough.

00:22:31.860 --> 00:22:35.549
&gt;&gt;Ian Lewis: A lot of people will come back
and tell us, well, my ad network required

00:22:35.549 --> 00:22:36.549
that.

00:22:36.549 --> 00:22:37.549
You know what, no.

00:22:37.549 --> 00:22:42.350
Because, you know what, this guy does not
need different ads than that guy, all right?

00:22:42.350 --> 00:22:45.230
[ Laughter ]
&gt;&gt;Ian Lewis: This is not the way things work.

00:22:45.230 --> 00:22:47.320
So course location is fine for that.

00:22:47.320 --> 00:22:49.409
&gt;&gt;Dan Galpin: Read system log.

00:22:49.409 --> 00:22:52.539
Now, I've got bad news for you guys.

00:22:52.539 --> 00:22:57.039
If you haven't watched some of our other presentations,
read system log actually is gone as of J.

00:22:57.039 --> 00:23:00.059
There is no more read system log that you
can get.

00:23:00.059 --> 00:23:05.809
However -- however -- J allows you, without
a permission, to read the system log for your

00:23:05.809 --> 00:23:06.809
own app.

00:23:06.809 --> 00:23:07.809
All right?

00:23:07.809 --> 00:23:09.339
C'mon, this is really cool stuff.

00:23:09.339 --> 00:23:14.539
[ Applause ]
&gt;&gt;Dan Galpin: So the good news is no creepy

00:23:14.539 --> 00:23:19.309
spying on what the user is doing by turning
on their read system log permission.

00:23:19.309 --> 00:23:22.490
And at the same time you can still get to
the useful logs you need to help your debugging

00:23:22.490 --> 00:23:26.509
if the crash recording and all the stuff we
have on Google Play isn't enough.

00:23:26.509 --> 00:23:29.299
All right, directly call phone numbers.

00:23:29.299 --> 00:23:32.120
We've seen this in a lot of applications.

00:23:32.120 --> 00:23:34.700
I'm like, seriously, there's an intent.

00:23:34.700 --> 00:23:36.289
Fire off and call a phone number.

00:23:36.289 --> 00:23:38.240
Why would you actually use this permission?

00:23:38.240 --> 00:23:41.710
That's just like -- like do you really want
the game to pop up something that directly

00:23:41.710 --> 00:23:42.770
-- I don't get it.

00:23:42.770 --> 00:23:43.770
All right.

00:23:43.770 --> 00:23:45.559
Read and write contacts and calendar.

00:23:45.559 --> 00:23:50.911
Now, admittedly, there are some uses, but
most of them, 99% of them can actually be

00:23:50.911 --> 00:23:54.909
done with contact choosers and contact figures,
you don't actually need to have the contact

00:23:54.909 --> 00:23:57.860
permission if you just want to have the user
fill in a name.

00:23:57.860 --> 00:24:01.820
The only reason you need this is because you
need to do something like spam every single

00:24:01.820 --> 00:24:06.470
user, or even worse, go and read their contacts
and suck them into your own service and use

00:24:06.470 --> 00:24:07.630
them for nefarious purposes.

00:24:07.630 --> 00:24:12.230
And remember, these are not things that we're
saying you can't use.

00:24:12.230 --> 00:24:15.720
What we're saying is if you use these things,
you're going to really reduce your chance

00:24:15.720 --> 00:24:17.320
of ever being featured.

00:24:17.320 --> 00:24:22.370
Okay, so this is really the key thing about
this list is that we're going to take what

00:24:22.370 --> 00:24:27.500
you're doing reading the user's contacts and
calendar, and unless you have a really, really

00:24:27.500 --> 00:24:30.080
good excuse, we're not going to feature the
app.

00:24:30.080 --> 00:24:31.820
That's what the team is going to do.

00:24:31.820 --> 00:24:36.190
&gt;&gt;Ian Lewis: I just got a reminder, it's 9:30
a.m. Click cow.

00:24:36.190 --> 00:24:37.649
&gt;&gt;Dan Galpin: Oh, yeah.

00:24:37.649 --> 00:24:39.890
[ Laughter ]
&gt;&gt;Dan Galpin: Reading and writing bookmarks.

00:24:39.890 --> 00:24:40.890
Super creepy.

00:24:40.890 --> 00:24:45.850
I want to go and check out --
&gt;&gt;Ian Lewis: This is eastern European porn

00:24:45.850 --> 00:24:46.880
site stuff, people.

00:24:46.880 --> 00:24:51.269
&gt;&gt;Dan Galpin: Do you really -- does a game
really want to know the sites that someone

00:24:51.269 --> 00:24:52.450
else -- that's awful.

00:24:52.450 --> 00:24:54.330
And writing to the bookmarks is even worse.

00:24:54.330 --> 00:24:58.380
Like wait, where is that super annoying site
and how did it get to my -- so, you know,

00:24:58.380 --> 00:25:01.401
look, unless you have a -- I can't think of
a legitimate reason for using this, which

00:25:01.401 --> 00:25:05.450
is why it's number three, but you're going
to have to justify it seriously to the editorial

00:25:05.450 --> 00:25:08.799
board if you want to get a game featured with
that.

00:25:08.799 --> 00:25:11.220
Display system level alerts.

00:25:11.220 --> 00:25:16.070
This is the way you make your app do creepy
stuff and pop up on top of other applications.

00:25:16.070 --> 00:25:17.610
And it's just not good.

00:25:17.610 --> 00:25:22.460
There's a very, very good chance your game
has no possible useful way of doing this.

00:25:22.460 --> 00:25:25.470
Use the notification system we have built
into Android.

00:25:25.470 --> 00:25:26.830
That's what it's for.

00:25:26.830 --> 00:25:31.879
And then finally, our number one top ten bad
permission that is likely to get you not featured

00:25:31.879 --> 00:25:35.119
is send and receive SMS.

00:25:35.119 --> 00:25:39.809
[ Applause ]
&gt;&gt;Dan Galpin: And first of all, so receive

00:25:39.809 --> 00:25:44.909
SMS really sucks because it actually allows
your app to filter every single SMS message

00:25:44.909 --> 00:25:46.290
that comes into the device.

00:25:46.290 --> 00:25:47.290
Awful, awful, awful.

00:25:47.290 --> 00:25:50.330
As a user, I'm like no way am I downloading
that app.

00:25:50.330 --> 00:25:51.330
Okay?

00:25:51.330 --> 00:25:54.919
And then send SMS, well, that allows you to
bill people without them knowing that, isn't

00:25:54.919 --> 00:25:55.919
that awesome?

00:25:55.919 --> 00:26:00.110
So, yeah, seriously, if you ever want to get
featured and this is there, I mean, like the

00:26:00.110 --> 00:26:01.740
chances are basically zero.

00:26:01.740 --> 00:26:05.750
But there is a way, if you really want to
allow the user to share to all their friends

00:26:05.750 --> 00:26:08.009
over SMS, use the intent.

00:26:08.009 --> 00:26:11.500
There's no permission involved and the users
will thank you.

00:26:11.500 --> 00:26:17.919
All right, so there we are, our top ten list
of bad permissions for games to not get featured

00:26:17.919 --> 00:26:19.289
on Google Play.

00:26:19.289 --> 00:26:21.890
&gt;&gt;Ian Lewis: All right.

00:26:21.890 --> 00:26:26.659
[ Applause ]
&gt;&gt;Ian Lewis: And we're only half done, folks.

00:26:26.659 --> 00:26:30.269
But we did sort of front-load this thing because
we thought you'd all be gone by this point.

00:26:30.269 --> 00:26:34.240
So item six, ready?

00:26:34.240 --> 00:26:36.529
There is no item six.

00:26:36.529 --> 00:26:40.340
[ Laughter ]
&gt;&gt;Ian Lewis: Like two guys got that.

00:26:40.340 --> 00:26:42.460
Why did you do the hat?

00:26:42.460 --> 00:26:46.200
That's so unfair, you upstaged me with your
Cruella De Vil pimp hat.

00:26:46.200 --> 00:26:50.519
&gt;&gt;Dan Galpin: Hey, it was Pride last weekend
here in San Francisco, okay, they were selling

00:26:50.519 --> 00:26:51.600
these all over the streets.

00:26:51.600 --> 00:26:52.600
&gt;&gt;Ian Lewis: Pretty amazing.

00:26:52.600 --> 00:26:56.029
&gt;&gt;Dan Galpin: And it does say on my I/O tag
"wears funny hats," there we are.

00:26:56.029 --> 00:26:59.029
&gt;&gt;Ian Lewis: Good point.

00:26:59.029 --> 00:27:05.200
Well, actually, we brought out the funny hat
because -- yeah, this is the boring, freaky

00:27:05.200 --> 00:27:06.200
part.

00:27:06.200 --> 00:27:08.160
We're in San Francisco, Dan drives a Prius.

00:27:08.160 --> 00:27:11.889
&gt;&gt;Dan Galpin: You know, not everyone needs
to know that.

00:27:11.889 --> 00:27:14.980
There are at least two or three Google employees
who do not drive Priuses.

00:27:14.980 --> 00:27:20.769
&gt;&gt;Ian Lewis: That's true, I drive a '95 Integra
that doesn't pass emissions.

00:27:20.769 --> 00:27:26.039
That's the kind of guy I am.

00:27:26.039 --> 00:27:32.690
Environmental policy aside, it's important
to be green on your app on the phone.

00:27:32.690 --> 00:27:35.749
It's important to conserve your users' resources.

00:27:35.749 --> 00:27:40.659
You're game developers, you want to make the
coolest game possible, you want to monetize

00:27:40.659 --> 00:27:46.419
and do some analytics and drive engagement,
but these are portable devices, they have

00:27:46.419 --> 00:27:50.890
limited capabilities, they have limited resources.

00:27:50.890 --> 00:27:55.980
Your battery, your network bandwidth, your
memory and storage are all precious, precious

00:27:55.980 --> 00:28:00.289
commodities that your users try to maximize
at all times.

00:28:00.289 --> 00:28:05.220
And because users try to maximize these, we
give them tools to understand what's going

00:28:05.220 --> 00:28:06.350
on.

00:28:06.350 --> 00:28:12.250
And if you haven't already, you will find
that users use these tools all the time and

00:28:12.250 --> 00:28:14.059
they watch your game.

00:28:14.059 --> 00:28:20.740
And if your battery usage is high, if you're
always on the network, if you've got long-running

00:28:20.740 --> 00:28:26.269
services in the background, they will find
out and they will publicly shame you off and

00:28:26.269 --> 00:28:31.179
on Google+.

00:28:31.179 --> 00:28:36.499
APK expansion files.

00:28:36.499 --> 00:28:41.529
See, what will happen is Google Play drops
your APK expansion on the SDK card, which

00:28:41.529 --> 00:28:46.890
is cool, and then a lot of people say, you
know what, I actually had that all packed

00:28:46.890 --> 00:28:52.169
up into one file because the man wouldn't
let me upload more than two files.

00:28:52.169 --> 00:28:57.299
So I'm going to go ahead and unpack that so
that I can actually use it.

00:28:57.299 --> 00:29:03.039
Oh, but then, wait, I've just used up a bunch
more storage so my policy's going to be let's

00:29:03.039 --> 00:29:05.200
delete the original APK expansion file.

00:29:05.200 --> 00:29:10.029
That seems like it would make a lot of sense,
but it does not, three times, you see?

00:29:10.029 --> 00:29:12.549
See, we're so bad.

00:29:12.549 --> 00:29:16.960
The problem here is that now you've unpacked
your APK expansion file, you've left all this

00:29:16.960 --> 00:29:24.179
junk over the user's SDK card and the expansion
file is gone so what does Google Play do?

00:29:24.179 --> 00:29:29.450
What every sane system would do, dude, your
file's gone, want 'em back?

00:29:29.450 --> 00:29:33.029
[ Laughter ]
&gt;&gt;Ian Lewis: So now instead of a gig or whatever

00:29:33.029 --> 00:29:37.350
it was, you've got two gigs and you've got
some very unhappy users.

00:29:37.350 --> 00:29:44.600
Unfortunately, the way this works is you have
to use your APK expansion file in place.

00:29:44.600 --> 00:29:50.419
Now Dan's written a bunch of samples that
-- do you notice, by the way, every time we

00:29:50.419 --> 00:29:55.389
talk about sample code, it starts "Dan's written,"
and every time it's something I did, it starts

00:29:55.389 --> 00:29:56.580
"I was so drunk."

00:29:56.580 --> 00:30:01.730
This is exactly why he's the senior member
of our team.

00:30:01.730 --> 00:30:04.809
&gt;&gt;Dan Galpin: Because I'm a month older.

00:30:04.809 --> 00:30:06.129
There we are.

00:30:06.129 --> 00:30:07.889
&gt;&gt;Ian Lewis: That's true.

00:30:07.889 --> 00:30:13.820
So what you want to do is if you have your
own binary blob reader, you have pack files

00:30:13.820 --> 00:30:15.640
or whatever, go ahead and use that.

00:30:15.640 --> 00:30:21.910
If you don't, we do have some samples that
show you how to use an APK expansion file

00:30:21.910 --> 00:30:26.749
or even any type of zip file as a mountable
file system and that can actually make things

00:30:26.749 --> 00:30:27.749
easier for you.

00:30:27.749 --> 00:30:31.510
&gt;&gt;Dan Galpin: The thing is an APK file is
really just a zip file.

00:30:31.510 --> 00:30:34.999
A lot of people are like, well, I can't put
it in my APK, so it's not going to work.

00:30:34.999 --> 00:30:38.650
I'm like you can just put another zip file
on the drive and you can do exactly the same

00:30:38.650 --> 00:30:39.650
thing.

00:30:39.650 --> 00:30:40.650
In fact, a lot of people are doing this.

00:30:40.650 --> 00:30:43.779
In fact, they figured out that when they're
using something like unity, which normally

00:30:43.779 --> 00:30:47.639
pulls all of its resources out of the APK
file, all you have to do is point to unity

00:30:47.639 --> 00:30:52.009
and say actually my APK file is actually the
second thing that I download and then all

00:30:52.009 --> 00:30:53.970
of a sudden unity will pull all the files
out of that.

00:30:53.970 --> 00:30:57.220
And there's actually a tool that someone has
made that takes all of those unity files and

00:30:57.220 --> 00:30:58.950
pull them over to the second file.

00:30:58.950 --> 00:31:00.870
So it's not hard.

00:31:00.870 --> 00:31:04.320
But if you don't have it built into your tool,
I have a couple of things that you can look

00:31:04.320 --> 00:31:05.320
at.

00:31:05.320 --> 00:31:08.739
Look at the APK expansion file libraries,
there's actually a zip resource file that

00:31:08.739 --> 00:31:09.879
I put down there.

00:31:09.879 --> 00:31:14.860
There's a content provider example, so if
you really want to go all the way Android

00:31:14.860 --> 00:31:19.169
and you want to store content that's referenced
using an asset content provider, it's actually

00:31:19.169 --> 00:31:21.510
all there in sample code for you.

00:31:21.510 --> 00:31:23.580
So no excuses, man, okay?

00:31:23.580 --> 00:31:26.090
&gt;&gt;Ian Lewis: All right, we ready for seven?

00:31:26.090 --> 00:31:28.590
&gt;&gt;Dan Galpin: We're ready for seven.

00:31:28.590 --> 00:31:31.690
&gt;&gt;Ian Lewis: This is going to be so good.

00:31:31.690 --> 00:31:32.690
&gt;&gt;Dan Galpin: Oh, yeah.

00:31:32.690 --> 00:31:33.690
Oh, yeah.

00:31:33.690 --> 00:31:36.649
So one of the things that happens when you
sign up for Google Play is that you're actually

00:31:36.649 --> 00:31:40.070
asked to look at some things like what you
should do and what you shouldn't do on Google

00:31:40.070 --> 00:31:41.070
Play.

00:31:41.070 --> 00:31:47.259
If you think about Google Play is it is this
ecosystem where OEMs and developers and carriers

00:31:47.259 --> 00:31:52.200
all get together to make sure there's one
awesome place to find great stuff.

00:31:52.200 --> 00:31:58.850
&gt;&gt;Ian Lewis: A lot of times we do sort of
envision in our heads Google Play is like

00:31:58.850 --> 00:32:04.159
the old "Star Trek" when Spock would play
this three-dimensional game of chess except

00:32:04.159 --> 00:32:09.980
instead of Spock, it's Andy, and that's actually
totally downplaying the complexity of the

00:32:09.980 --> 00:32:10.980
system.

00:32:10.980 --> 00:32:15.899
There's a lot of players in the system and
it all combines to give you 400 million devices

00:32:15.899 --> 00:32:19.970
to sell to, but it does come with some restrictions.

00:32:19.970 --> 00:32:23.169
&gt;&gt;Dan Galpin: And the real key thing is we
want to make sure you can publish once and

00:32:23.169 --> 00:32:27.419
you don't have to go and hunt and to find
all sorts of places and rules and different

00:32:27.419 --> 00:32:31.320
sets of rules to publish your apps, so here
are our rules and they get you to the largest

00:32:31.320 --> 00:32:32.320
number of devices.

00:32:32.320 --> 00:32:33.390
All right.

00:32:33.390 --> 00:32:35.600
&gt;&gt;Ian Lewis: The three commandments.

00:32:35.600 --> 00:32:41.659
&gt;&gt;Dan Galpin: The three commandments of Google
Play.

00:32:41.659 --> 00:32:48.110
One, thou shalt have no payment providers
but Google Play.

00:32:48.110 --> 00:32:51.499
This is basically pretty simple.

00:32:51.499 --> 00:32:53.629
You're listing on our service.

00:32:53.629 --> 00:32:57.869
Don't confuse users by having them input all
sorts of different information, sending them

00:32:57.869 --> 00:33:00.120
to different places, billing them without
their knowledge.

00:33:00.120 --> 00:33:04.269
We want one straightforward way that users
understand they're paying for content.

00:33:04.269 --> 00:33:09.090
&gt;&gt;Ian Lewis: We would also like to be able
to continue paying for Google Play so that's

00:33:09.090 --> 00:33:13.580
-- we do have a bit of a selfish motive here.

00:33:13.580 --> 00:33:16.830
And these rules aren't --
&gt;&gt;Dan Galpin: We want carriers to keep putting

00:33:16.830 --> 00:33:17.879
Google Play on our devices.

00:33:17.879 --> 00:33:19.330
That's probably the most important thing.

00:33:19.330 --> 00:33:20.330
&gt;&gt;Ian Lewis: Yeah.

00:33:20.330 --> 00:33:22.759
So, sir, you in the back, with the golden
cap, put that away.

00:33:22.759 --> 00:33:28.820
&gt;&gt;Ian Lewis: Two, thou shalt not upload an
app that downloads other apps.

00:33:28.820 --> 00:33:34.259
Now, because the main goal of Google Play
is to be a place where people go to find content

00:33:34.259 --> 00:33:37.559
and it's not a place to distribute your app
store.

00:33:37.559 --> 00:33:40.330
If you want to distribute your app store,
distribute it somewhere else.

00:33:40.330 --> 00:33:42.600
Android is an open platform, okay?

00:33:42.600 --> 00:33:47.480
The second thing is if you're actually installing
other apps, it's a really bad user experience,

00:33:47.480 --> 00:33:48.480
you'll find out.

00:33:48.480 --> 00:33:53.440
So, yeah, don't do it, and it's a good way
to make sure things happen badly with our

00:33:53.440 --> 00:33:54.730
enforcement team.

00:33:54.730 --> 00:33:55.799
All right.

00:33:55.799 --> 00:34:01.190
And then finally, thou shalt not bribe thy
customers for five-star reviews.

00:34:01.190 --> 00:34:04.639
&gt;&gt;Ian Lewis: For that is hateful in my sight,
sayeth me.

00:34:04.639 --> 00:34:07.210
&gt;&gt;Dan Galpin: That was good.

00:34:07.210 --> 00:34:10.010
So don't provide incentives for specific review
scores.

00:34:10.010 --> 00:34:14.200
Google Play will not feature an app that incentivizes
review scores, partially because it's hard

00:34:14.200 --> 00:34:18.750
to tell what people actually think of your
game when they're being paid to rate it five

00:34:18.750 --> 00:34:19.750
stars.

00:34:19.750 --> 00:34:23.800
Besides, it's actually impossible for your
game to find out what score a particular user

00:34:23.800 --> 00:34:24.800
gave you.

00:34:24.800 --> 00:34:28.810
So promising to pay for a specific score is
kind of dishonest.

00:34:28.810 --> 00:34:33.579
So at the same time we don't want to discourage
apps from asking for ratings.

00:34:33.579 --> 00:34:37.030
The right way to ask for ratings is to be
upfront, honest and sincere.

00:34:37.030 --> 00:34:39.460
Ask users for their candid feedback.

00:34:39.460 --> 00:34:43.950
If you want to, you could incentivize your
user to leave a rating, just don't ask for

00:34:43.950 --> 00:34:44.950
a specific rating.

00:34:44.950 --> 00:34:48.559
You could also ask for a specific rating without
offering an incentive, that's within the letter

00:34:48.559 --> 00:34:49.960
of the law, but not really the spirit.

00:34:49.960 --> 00:34:53.599
The whole point of a review is to get honest
feedback so you can improve your game.

00:34:53.599 --> 00:34:58.119
&gt;&gt;Ian Lewis: So here's some examples that
we pulled from actual games and simply, you

00:34:58.119 --> 00:35:01.780
know, altered a little bit to protect the
innocent.

00:35:01.780 --> 00:35:08.100
And so when we did this presentation for our
team, we got two major pieces of feedback.

00:35:08.100 --> 00:35:11.740
One was the Australians thought that thing
six was racist.

00:35:11.740 --> 00:35:19.369
And two was -- you don't even remember what
thing six was so we didn't -- you'll wake

00:35:19.369 --> 00:35:21.270
-- the coffee will kick in in a little bit.

00:35:21.270 --> 00:35:29.069
Two was we see these -- these example dialogue
boxes, but there's no real feedback is -- as

00:35:29.069 --> 00:35:32.940
to which ones are good, which ones are bad
and how good and bad they are.

00:35:32.940 --> 00:35:35.210
So I've enlisted my baby daughter to help
out.

00:35:35.210 --> 00:35:38.790
"Thanks for playing, please take some time
to rate this game on Google Play.

00:35:38.790 --> 00:35:40.160
We want to know what you think."

00:35:40.160 --> 00:35:45.920
Baby daughter says, "Oh, Daddy, that's so
great!"

00:35:45.920 --> 00:35:49.740
&gt;&gt;Dan Galpin: "Did you enjoy this game?

00:35:49.740 --> 00:35:50.760
Rate it five stars!"

00:35:50.760 --> 00:35:51.760
Whew.

00:35:51.760 --> 00:35:54.660
&gt;&gt;Ian Lewis: Baby daughter says, "That's a
little sketchy, Daddy."

00:35:54.660 --> 00:35:57.109
&gt;&gt;Dan Galpin: Even worse, "Having fun?

00:35:57.109 --> 00:36:00.390
Your five-star rating helps us to keep this
game updated!"

00:36:00.390 --> 00:36:04.290
Oh, sad daughter!

00:36:04.290 --> 00:36:06.190
Or how about this, "Want more GalpinBux?

00:36:06.190 --> 00:36:10.150
Rate this game five stars and get 100 GalpinBux
right away and all of your friends will think

00:36:10.150 --> 00:36:13.770
you're cool!"

00:36:13.770 --> 00:36:16.980
Bad!

00:36:16.980 --> 00:36:21.180
So there's some shady characters out there
that will claim these rules don't apply to

00:36:21.180 --> 00:36:24.880
them or they're not enforced or they have
some sort of arrangement with Google that

00:36:24.880 --> 00:36:26.760
allows them to use a third-party payment processor.

00:36:26.760 --> 00:36:28.670
This is not true.

00:36:28.670 --> 00:36:29.760
Do not believe their lies.

00:36:29.760 --> 00:36:30.760
All right?

00:36:30.760 --> 00:36:33.590
So we are giving you the straight story here.

00:36:33.590 --> 00:36:35.610
And that takes us to point 8.

00:36:35.610 --> 00:36:38.059
&gt;&gt;Ian Lewis: Awesome.

00:36:38.059 --> 00:36:42.560
In-app payments are unfortunately easy to
get wrong.

00:36:42.560 --> 00:36:48.619
Now, our in-app payment system seems like
it should be relatively easy.

00:36:48.619 --> 00:36:49.619
Okay.

00:36:49.619 --> 00:36:57.140
Customer decides they are going to buy something,
they hit the big button, delivers the thing,

00:36:57.140 --> 00:37:00.570
and the customer receives it and everything
is cool.

00:37:00.570 --> 00:37:01.810
They are super happy.

00:37:01.810 --> 00:37:03.050
&gt;&gt;Dan Galpin: Thanks, bro.

00:37:03.050 --> 00:37:09.770
&gt;&gt;Ian Lewis: But what really happens is a
little bit like the FedEx scenario here, but

00:37:09.770 --> 00:37:11.589
you are asleep.

00:37:11.589 --> 00:37:13.790
Sometimes your app will be sleeping when this
message arrives.

00:37:13.790 --> 00:37:18.619
In that case, normal real world -- okay.

00:37:18.619 --> 00:37:22.380
Normal real world delivery companies have
a policy, right?

00:37:22.380 --> 00:37:26.890
They are going to try to deliver and if there's
somebody home, like your roommate, they will

00:37:26.890 --> 00:37:28.690
be like, oh, can you sign for this?

00:37:28.690 --> 00:37:29.730
Yeah, totally.

00:37:29.730 --> 00:37:33.251
And then later on your roommate gives you
the package and you're, like --

00:37:33.251 --> 00:37:35.690
&gt;&gt;Dan Galpin: Thanks, bro.

00:37:35.690 --> 00:37:37.520
&gt;&gt;Ian Lewis: Excellent.

00:37:37.520 --> 00:37:43.540
But what if your roommate is this guy?
[ Laughter ]

00:37:43.540 --> 00:37:50.750
&gt;&gt;Ian Lewis: So here's what happens.

00:37:50.750 --> 00:37:54.470
Very, very common in games because so many
games use native libraries.

00:37:54.470 --> 00:38:01.280
Game is going to be written with a big game
piece and this little billing service piece

00:38:01.280 --> 00:38:04.859
that you tacked on as an afterthought because
our documentation said that you had to.

00:38:04.859 --> 00:38:09.430
There is big shared library that both of those
pieces are going to talk to.

00:38:09.430 --> 00:38:16.660
And that is totally fine as long as you're
launching with the expected process.

00:38:16.660 --> 00:38:17.660
Right?

00:38:17.660 --> 00:38:24.299
So the user has clicked on your icon in a
launcher, launcher sends action main, game

00:38:24.299 --> 00:38:25.299
starts.

00:38:25.299 --> 00:38:28.299
It starts up the shared library.

00:38:28.299 --> 00:38:29.319
Service starts.

00:38:29.319 --> 00:38:33.660
Talks to the shared library, listens for billing
messages.

00:38:33.660 --> 00:38:34.839
Billing message gets there.

00:38:34.839 --> 00:38:42.609
It does whatever you do in the game to acknowledge
billing and fulfill it, and everybody is happy.

00:38:42.609 --> 00:38:50.690
But sometimes things don't go as planned because
when the message gets there, your app is no

00:38:50.690 --> 00:38:52.270
longer available.

00:38:52.270 --> 00:38:53.270
Why?

00:38:53.270 --> 00:38:55.799
Why would that happen?

00:38:55.799 --> 00:39:00.930
It's conventional wisdom to think this is
because our billing process took way too long

00:39:00.930 --> 00:39:02.630
and that's actually untrue.

00:39:02.630 --> 00:39:06.730
Not because our billing process is lightning
fast, although it frequently is, but because

00:39:06.730 --> 00:39:10.000
we actually just canceled the whole thing
after what is it?

00:39:10.000 --> 00:39:11.200
45 seconds?

00:39:11.200 --> 00:39:14.520
&gt;&gt;Dan Galpin: These are, for the most part
in your applications, these are synchronous

00:39:14.520 --> 00:39:15.520
transactions.

00:39:15.520 --> 00:39:20.540
&gt;&gt;Ian Lewis: Why is your app asleep?

00:39:20.540 --> 00:39:23.280
The first culprit is Google Play itself.

00:39:23.280 --> 00:39:28.840
In order to the in-app billing, we have to
launch Google Play.

00:39:28.840 --> 00:39:34.579
Google Play is not maybe the slimmest service
in the world and, in general, games aren't

00:39:34.579 --> 00:39:35.579
either.

00:39:35.579 --> 00:39:43.160
So when two large processes start on the Android
device, the OS starts to freakout.

00:39:43.160 --> 00:39:46.230
Like okay, one of these things has got to
go, right?

00:39:46.230 --> 00:39:51.829
&gt;&gt;Dan Galpin: One of the things to note is
your application will get long memory and

00:39:51.829 --> 00:39:57.339
it has the ability to eject stuff at this
point and try to keep itself alive.

00:39:57.339 --> 00:40:01.330
But, you know, a lot of game developers don't
really want to do that.

00:40:01.330 --> 00:40:04.960
They are like, life cycle, whatever, we will
let ourselves die.

00:40:04.960 --> 00:40:05.960
That's what happens.

00:40:05.960 --> 00:40:11.099
We go, you're the biggest thing going and
we can get rid of a lot of space to allow

00:40:11.099 --> 00:40:12.740
Google Play to actually run.

00:40:12.740 --> 00:40:17.839
&gt;&gt;Ian Lewis: Ironically enough, launching
the in-app billing kills your process, and

00:40:17.839 --> 00:40:23.289
then when you come back from in-app billing,
your process should restart but you frequently

00:40:23.289 --> 00:40:24.380
don't take care of that correctly.

00:40:24.380 --> 00:40:27.740
This is a little unexpected.

00:40:27.740 --> 00:40:34.400
But that aside, there's actually another really
good reason for your app to be asleep when

00:40:34.400 --> 00:40:35.799
a billing message arrives.

00:40:35.799 --> 00:40:41.150
I would like to illustrate this point with
a small shot of a portion of Dan's desk.

00:40:41.150 --> 00:40:45.230
[ Laughter ]
&gt;&gt;Ian Lewis: A lot of people have multiple

00:40:45.230 --> 00:40:46.780
devices.

00:40:46.780 --> 00:40:54.700
And Google Play policies allow you to buy
something once and use it on multiple devices.

00:40:54.700 --> 00:40:55.700
Customers love this.

00:40:55.700 --> 00:40:56.700
I love this.

00:40:56.700 --> 00:40:57.700
It's a great policy.

00:40:57.700 --> 00:41:02.730
But what it means is if I bought something
on my phone, my tablet is going to get a billing

00:41:02.730 --> 00:41:03.730
message.

00:41:03.730 --> 00:41:09.170
And since my tablet probably isn't even on,
the app that's supposed to receive it is probably

00:41:09.170 --> 00:41:10.660
asleep.

00:41:10.660 --> 00:41:11.890
So what happens?

00:41:11.890 --> 00:41:14.819
Well, of course you will wake up.

00:41:14.819 --> 00:41:16.060
We need to deliver this thing.

00:41:16.060 --> 00:41:18.190
So Google Play is going to try and wake you
up.

00:41:18.190 --> 00:41:20.560
But it's not going to try to wake up your
whole app.

00:41:20.560 --> 00:41:22.069
It just wakes up the service.

00:41:22.069 --> 00:41:28.170
The problem is, when the service wakes up,
you haven't written it to initialize all of

00:41:28.170 --> 00:41:29.170
the other code.

00:41:29.170 --> 00:41:30.170
You wouldn't want to.

00:41:30.170 --> 00:41:31.170
Right?

00:41:31.170 --> 00:41:33.750
A lot of times initializing the shared library,
loads your resources.

00:41:33.750 --> 00:41:37.130
You are doing a lot of expensive work.

00:41:37.130 --> 00:41:43.630
If the shared library is not there -- and
by shared library, that's a catch-all for

00:41:43.630 --> 00:41:51.060
your in-game message system, unity messages,
shared memory between yourselves and game.

00:41:51.060 --> 00:41:54.579
Anything that's not persistent.

00:41:54.579 --> 00:41:58.520
That will kill everything.

00:41:58.520 --> 00:42:03.910
&gt;&gt;Dan Galpin: I want to make it clear that
I actually didn't put the fire effects in

00:42:03.910 --> 00:42:04.910
this presentation, okay?

00:42:04.910 --> 00:42:06.630
&gt;&gt;Ian Lewis: I thought you did.

00:42:06.630 --> 00:42:08.440
&gt;&gt;Dan Galpin: Only one of them.

00:42:08.440 --> 00:42:10.339
&gt;&gt;Ian Lewis: Then I got a little excited.

00:42:10.339 --> 00:42:14.260
I want to be like Dan.

00:42:14.260 --> 00:42:16.730
A lot of times people say that's not a problem,
right?

00:42:16.730 --> 00:42:18.589
I read the documentation.

00:42:18.589 --> 00:42:19.589
This isn't an issue.

00:42:19.589 --> 00:42:20.880
You guys are reliable.

00:42:20.880 --> 00:42:26.730
If I don't acknowledge your receipt, then
you're just going to keep calling me back,

00:42:26.730 --> 00:42:27.730
right?

00:42:27.730 --> 00:42:30.069
Which is somewhat true.

00:42:30.069 --> 00:42:36.630
If you do not acknowledge a billing message,
we will keep calling you back until it gets

00:42:36.630 --> 00:42:37.839
acknowledged.

00:42:37.839 --> 00:42:43.060
Let's leave aside the fact that some developers
will acknowledge the billings message anyway

00:42:43.060 --> 00:42:44.900
without successfully delivering it.

00:42:44.900 --> 00:42:48.430
Those guys need to get their act together.

00:42:48.430 --> 00:42:54.160
Waiting for our billing message to be re-sent
has two issues.

00:42:54.160 --> 00:43:00.390
The first is, because we don't want to completely
spam the users device, we use exponential

00:43:00.390 --> 00:43:02.470
back-off.

00:43:02.470 --> 00:43:07.670
Since you have gotten yourself into a situation
where your app needs to be running in order

00:43:07.670 --> 00:43:15.940
for the billing message to be received, you're
in a crap shoot here because the user has

00:43:15.940 --> 00:43:21.570
to have launched your app in order for that
billing message to be received and the billing

00:43:21.570 --> 00:43:24.030
messages are comings at a slower and slower
rate.

00:43:24.030 --> 00:43:28.980
It's very, very unlikely that they are actually
going to have the app open at the correct

00:43:28.980 --> 00:43:29.980
time.

00:43:29.980 --> 00:43:33.480
Especially if they just closed it in frustration
because they think that you cheated them by

00:43:33.480 --> 00:43:37.260
not delivering the goods that they just purchased.

00:43:37.260 --> 00:43:42.119
But there's a second and more compelling reason
to be careful about this.

00:43:42.119 --> 00:43:46.820
And that is, during this entire time that
we are essentially leaving post-it notes on

00:43:46.820 --> 00:43:47.820
your door.

00:43:47.820 --> 00:43:49.740
Tried to deliver, we'll be back tomorrow.

00:43:49.740 --> 00:43:53.109
Tried to deliver, adult must sign.

00:43:53.109 --> 00:43:57.680
That whole time the user has already been
billed.

00:43:57.680 --> 00:43:59.280
So let me just emphasize that.

00:43:59.280 --> 00:44:01.170
The user has already been billed.

00:44:01.170 --> 00:44:05.089
We billed the user when we sent the first
acknowledgment.

00:44:05.089 --> 00:44:06.089
Why?

00:44:06.089 --> 00:44:10.309
Otherwise it would be trivial for an user
to buy something and then block your port

00:44:10.309 --> 00:44:12.520
so you couldn't send an acknowledgment.

00:44:12.520 --> 00:44:14.750
Then we would be like, oh, it never got delivered.

00:44:14.750 --> 00:44:19.369
Meanwhile you are like, oh, I guess it got
fulfilled.

00:44:19.369 --> 00:44:21.720
The user is, like, hee-hee-hee.

00:44:21.720 --> 00:44:24.099
The user will see this show up on its credit
card.

00:44:24.099 --> 00:44:28.980
If you don't fulfill it immediately, they
will think that you cheated them.

00:44:28.980 --> 00:44:31.150
You sort of did unintentionally.

00:44:31.150 --> 00:44:33.089
This turns into a support call for you.

00:44:33.089 --> 00:44:35.460
Often a support call for us.

00:44:35.460 --> 00:44:37.839
Overall a poor experience.

00:44:37.839 --> 00:44:39.450
Be very, very --
&gt;&gt;Dan Galpin: Bad ratings.

00:44:39.450 --> 00:44:40.880
That's the key thing.

00:44:40.880 --> 00:44:43.890
Bad ratings keep your app from being featured.

00:44:43.890 --> 00:44:45.530
&gt;&gt;Ian Lewis: Absolutely.

00:44:45.530 --> 00:44:46.530
What should you do?

00:44:46.530 --> 00:44:49.650
The right way to do this is to be reliable
for yourself.

00:44:49.650 --> 00:44:55.619
We took care of reliably delivering this thing
all the way across the Internet through miles

00:44:55.619 --> 00:45:01.570
and miles of fiber optic cables and harsh
vacuous space, the least you can do is reliably

00:45:01.570 --> 00:45:03.780
deliver it from one piece of your app to the
other.

00:45:03.780 --> 00:45:06.920
The right way to do this is persisting it.

00:45:06.920 --> 00:45:16.670
When your service wakes up to receive a notification
from the billing, it should persist that to

00:45:16.670 --> 00:45:17.670
some sort of storage.

00:45:17.670 --> 00:45:24.089
I don't care if you want to use a file, SQLite,
or whatever, then send your in-game message

00:45:24.089 --> 00:45:26.160
to say, they, go check your mailbox.

00:45:26.160 --> 00:45:31.960
Your app will check that and see that the
message came in and deal with it.

00:45:31.960 --> 00:45:36.230
If your app was sleeping at the time, then,
fine, you don't get the notification that

00:45:36.230 --> 00:45:37.750
says, hey, go check persistent storage.

00:45:37.750 --> 00:45:41.380
But the next time your app starts up, the
first thing do you is check for persistent

00:45:41.380 --> 00:45:42.670
storage.

00:45:42.670 --> 00:45:44.600
A purchase came in.

00:45:44.600 --> 00:45:50.430
Congratulations, you have a hundred more Galpin
bucks or whatever it is you are giving away.

00:45:50.430 --> 00:45:57.319
The user can immediately see that they did,
indeed, purchase and get value for the money

00:45:57.319 --> 00:45:58.640
that they just spent.

00:45:58.640 --> 00:46:01.309
&gt;&gt;Dan Galpin: Let's go quickly on to 9.

00:46:01.309 --> 00:46:05.290
Let's take a quick talk about testing.

00:46:05.290 --> 00:46:10.039
We have a lot of devices and the problem with
lots of devices is people are trying to figure

00:46:10.039 --> 00:46:15.119
out, how do I test with this vast ecosystem
that we have out here.

00:46:15.119 --> 00:46:19.140
But the truth is, most of this stuff is actually
really straightforward.

00:46:19.140 --> 00:46:25.069
Input devices, there are not that many input
devices on Android and you should support

00:46:25.069 --> 00:46:27.390
as many of them as you possibly can.

00:46:27.390 --> 00:46:28.960
Form factor, it's pretty straightforward.

00:46:28.960 --> 00:46:33.010
We don't actually have that many different
form factor styles in Android.

00:46:33.010 --> 00:46:40.520
You have to support a series of aspect ratios
between 69 and 133.

00:46:40.520 --> 00:46:45.450
And it's not the end of the world for most
titles if you started off the design of the

00:46:45.450 --> 00:46:47.110
title to support that.

00:46:47.110 --> 00:46:50.869
If you decided you will support one aspect
ratio from the beginning and then you are,

00:46:50.869 --> 00:46:56.170
like, oh, my goodness, I am now going to Android
that I have to support four, essentially,

00:46:56.170 --> 00:46:58.180
then this is going to be a rough transition
for you.

00:46:58.180 --> 00:47:01.010
It's good to start off designing for that.

00:47:01.010 --> 00:47:04.170
Even if you haven't designed for it, there
are things that you can do that are fairly

00:47:04.170 --> 00:47:06.880
straightforward to make it look like you designed
for it.

00:47:06.880 --> 00:47:08.930
OS version, that's pretty straightforward.

00:47:08.930 --> 00:47:11.849
The OS versions don't differ all that much.

00:47:11.849 --> 00:47:12.849
It's pretty easy to get.

00:47:12.849 --> 00:47:14.540
Here we get to the hard stuff.

00:47:14.540 --> 00:47:16.569
The driver stack and the GPU hardware.

00:47:16.569 --> 00:47:17.950
There's kind of two things to look at.

00:47:17.950 --> 00:47:23.760
One, of course, is -- this may be hard to
believe, there are sometimes bugs in drivers.

00:47:23.760 --> 00:47:28.819
I'm sure none of you have ever experienced
this on any other devices, but it actually

00:47:28.819 --> 00:47:29.819
happens.

00:47:29.819 --> 00:47:31.280
GPU hardware differs.

00:47:31.280 --> 00:47:36.370
Let's talk quickly about the most common GPUs
you will see in the Android world.

00:47:36.370 --> 00:47:39.140
We have Adreno, PowerVR, Tegra, Mali, Vivante,
and Broadcom.

00:47:39.140 --> 00:47:43.920
Many of you probably haven't heard of the
last two, but they are in many devices as

00:47:43.920 --> 00:47:47.940
well.

00:47:47.940 --> 00:47:52.849
All of them essentially work differently than
PowerVR.

00:47:52.849 --> 00:47:57.980
So if you all go and say I just tested on
that second one, if you only test on the Galaxy

00:47:57.980 --> 00:48:01.849
Nexus, if you only performance, profile and
optimize around the Galaxy Nexus, you will

00:48:01.849 --> 00:48:03.799
be sad.

00:48:03.799 --> 00:48:08.670
Because on PowerVR usually you get a lot of
performance by sorting things like by materials.

00:48:08.670 --> 00:48:14.339
You pretty much want to ignore sorting things
by geometry, depth, and complexity.

00:48:14.339 --> 00:48:18.960
On every one of these platforms, you get an
enormous performance boost by doing that.

00:48:18.960 --> 00:48:23.420
you want to have your engine and renderer
to be able work both ways.

00:48:23.420 --> 00:48:26.700
First of all, performance, there's that element.

00:48:26.700 --> 00:48:29.849
Also we have several different texture compression
formats.

00:48:29.849 --> 00:48:34.690
If you want the highest possible performance,
and all of these devices are ultimately fill

00:48:34.690 --> 00:48:35.690
limited.

00:48:35.690 --> 00:48:39.100
Then of course you want to use the best texture
compression possible.

00:48:39.100 --> 00:48:45.550
So for your non-alpha textures that are actually
fairly light photographic, you can use ETC1

00:48:45.550 --> 00:48:47.319
on every single one of these platforms.

00:48:47.319 --> 00:48:52.339
But when you get into things that are using
alpha, then you're going to be stuck going

00:48:52.339 --> 00:48:57.609
to one of the proprietary formats or using
a shader and 2EC1 textures which will slow

00:48:57.609 --> 00:48:58.609
things down.

00:48:58.609 --> 00:49:01.460
These are decisions you have to make as to
how optimal it is.

00:49:01.460 --> 00:49:04.640
You want your game to be how necessary it
is to make these optimizations.

00:49:04.640 --> 00:49:08.529
We actually support multiple APKs based upon
texture compression formats.

00:49:08.529 --> 00:49:15.730
So you can have a separate APK with a separate
APK expansion file.

00:49:15.730 --> 00:49:18.040
There are ways to tackle this problem.

00:49:18.040 --> 00:49:20.150
And again, it may not be necessary for your
title.

00:49:20.150 --> 00:49:25.029
The thing to do is make sure you have one
of at least four of these, probably the top

00:49:25.029 --> 00:49:29.099
four as they represent the largest majority
of devices out there to test on.

00:49:29.099 --> 00:49:32.000
And that's just the most important thing.

00:49:32.000 --> 00:49:36.660
If you are doing a 3D game -- if you're doing
a 2G game, chances are you may not notice.

00:49:36.660 --> 00:49:40.099
But if you are doing a 3D game, it's important
to make sure that you work with these different

00:49:40.099 --> 00:49:41.099
drivers.

00:49:41.099 --> 00:49:42.280
&gt;&gt;Ian Lewis: Excellent.

00:49:42.280 --> 00:49:48.329
Thing 10, I took a little bit about play listings.

00:49:48.329 --> 00:49:51.200
So let's say that you have done everything
that we have asked.

00:49:51.200 --> 00:49:53.660
You've got a great game, great ratings.

00:49:53.660 --> 00:49:55.540
You didn't screw up the in-app billing.

00:49:55.540 --> 00:50:00.270
You didn't do anything shady with your permissions
and we totally want to feature you.

00:50:00.270 --> 00:50:02.329
One problem.

00:50:02.329 --> 00:50:06.160
We need to actually get you into the store.

00:50:06.160 --> 00:50:11.299
And where a lot of people end up having problems
is on the listing itself.

00:50:11.299 --> 00:50:18.869
Now, it may not be obvious but when you upload
the gigantic graphic that we use on our web

00:50:18.869 --> 00:50:26.530
site, you are also actually uploading the
little itty-bitty graphic that we use on the

00:50:26.530 --> 00:50:27.530
device.

00:50:27.530 --> 00:50:28.530
&gt;&gt;Dan Galpin: It looks gruesome in both modes.

00:50:28.530 --> 00:50:29.990
&gt;&gt;Ian Lewis: It really does.

00:50:29.990 --> 00:50:35.839
We chose this graphic, A, because the game
is featured this week.

00:50:35.839 --> 00:50:43.049
B, because it does have a serious problem
in that the contrast here isn't really great

00:50:43.049 --> 00:50:48.480
enough for you to be able to read the title
Shane Reaction when that thing gets shrunk

00:50:48.480 --> 00:50:50.000
down to about an inch across.

00:50:50.000 --> 00:50:56.360
What I will usually tell people to do is attach
this to, like, Gmail or something that does

00:50:56.360 --> 00:50:58.339
a thumbnail preview.

00:50:58.339 --> 00:51:03.220
Get up from your desk, walk about six feet
back, look at it on your web browser and ask

00:51:03.220 --> 00:51:04.400
yourself, can you still read the title?

00:51:04.400 --> 00:51:05.720
Does it still look good?

00:51:05.720 --> 00:51:12.130
If it doesn't, then it's not going to look
good on a very small form factor device.

00:51:12.130 --> 00:51:16.549
So be careful to give yourself enough contrast.

00:51:16.549 --> 00:51:19.930
Use a large enough area for the title.

00:51:19.930 --> 00:51:22.410
And be a little careful of subtitles.

00:51:22.410 --> 00:51:29.700
You can see for instance on Real Soccer, although
they did a great job of making the RS and

00:51:29.700 --> 00:51:32.700
the Real Soccer big enough to read --
&gt;&gt;Dan Galpin: Dude.

00:51:32.700 --> 00:51:34.120
&gt;&gt;Ian Lewis: Oh, wow.

00:51:34.120 --> 00:51:42.940
&gt;&gt;Dan Galpin: That was a software update that
came right in the middle of our presentation.

00:51:42.940 --> 00:51:45.809
&gt;&gt;Ian Lewis: Thanks Google.

00:51:45.809 --> 00:51:46.809
All right.

00:51:46.809 --> 00:51:53.210
So, yeah, when you look at that on the small
device, the subtitle gets nearly lost.

00:51:53.210 --> 00:51:58.880
We usually tell people that if you're using
about 50% of the surface area of your graphic

00:51:58.880 --> 00:52:01.720
for your logo, that's probably going to show
up okay.

00:52:01.720 --> 00:52:05.920
If you are using less than that, you will
want to do some serious testing to make sure

00:52:05.920 --> 00:52:10.819
that it's not going to become Illegible when
it gets tiny.

00:52:10.819 --> 00:52:16.070
Speaking of feature graphic, sometimes people
omit them entirely.

00:52:16.070 --> 00:52:21.089
Like this famous developer, who apparently
knows nothing about Android.

00:52:21.089 --> 00:52:23.930
At least a few people recognize this game.

00:52:23.930 --> 00:52:31.240
So the problem with this now is that since
he didn't upload a web feature graphic, we

00:52:31.240 --> 00:52:34.670
are actually unable to feature the game at
all because we don't have anything to put

00:52:34.670 --> 00:52:35.670
in that space.

00:52:35.670 --> 00:52:40.240
You might say, oh, can't you guys use some
other graphic, wouldn't that be smart?

00:52:40.240 --> 00:52:42.099
Sure, but you know how software works.

00:52:42.099 --> 00:52:43.849
We totally don't have that pipeline.

00:52:43.849 --> 00:52:45.640
Some day we will, maybe.

00:52:45.640 --> 00:52:46.640
But not today.

00:52:46.640 --> 00:52:48.599
&gt;&gt;Dan Galpin: Besides, would you want to choose
one of these random screen shots?

00:52:48.599 --> 00:52:50.890
It doesn't make any sense.

00:52:50.890 --> 00:52:57.191
&gt;&gt;Ian Lewis: If you don't have a graphic here
on your web store listing, you're not going

00:52:57.191 --> 00:52:58.839
to get featured.

00:52:58.839 --> 00:53:05.119
You're also not going to get featured if your
description is terrible or if you use this

00:53:05.119 --> 00:53:10.539
space to do some key word spamming or if you've
got, all capitals, super excited stuff.

00:53:10.539 --> 00:53:17.270
Or if you say things like now the hit game
on this other platform finally comes to Android

00:53:17.270 --> 00:53:20.439
because it sucks less or something, you know.

00:53:20.439 --> 00:53:24.380
[ Laughter ]
&gt;&gt;Dan Galpin: The feature team loves that.

00:53:24.380 --> 00:53:32.299
&gt;&gt;Ian Lewis: By the way, if you've got a screen
shot here or more commonly a game play video

00:53:32.299 --> 00:53:37.400
that ends with a spinning shot of some other
device with a now available on some other

00:53:37.400 --> 00:53:40.460
store, that's sort of a party foul.

00:53:40.460 --> 00:53:41.460
You don't want to do that.

00:53:41.460 --> 00:53:42.460
We won't feature you.

00:53:42.460 --> 00:53:45.279
We will get on the phone, can you upload a
different video.

00:53:45.279 --> 00:53:47.800
But save us both some time and don't do that.

00:53:47.800 --> 00:53:50.099
&gt;&gt;Dan Galpin: Another thing to note here.

00:53:50.099 --> 00:53:53.660
There are rules against spamming and key word
spam in here.

00:53:53.660 --> 00:53:57.660
So you should actually go through the Google
Play terms of service because one thing you

00:53:57.660 --> 00:54:02.539
don't want to do is say, if you really liked
blah game and blah game, and blah game, you

00:54:02.539 --> 00:54:04.880
should like our clone of it.

00:54:04.880 --> 00:54:06.960
First of all, it looks kind of awful to do
that.

00:54:06.960 --> 00:54:10.600
And second of all, it is key word spam as
far as our team is concerned.

00:54:10.600 --> 00:54:14.619
And it can actually get your game, believe
it or not, suspended.

00:54:14.619 --> 00:54:17.660
So it's actually a very serious rule.

00:54:17.660 --> 00:54:20.920
They don't want people to try to leverage
other games' key words.

00:54:20.920 --> 00:54:26.650
&gt;&gt;Ian Lewis: The other thing about this description
is, although we don't want you to key word

00:54:26.650 --> 00:54:33.210
spam or use other service optimization techniques,
there are an optimization that will boost

00:54:33.210 --> 00:54:34.930
you in the search ratings.

00:54:34.930 --> 00:54:38.760
That is to make sure that your description
is localized.

00:54:38.760 --> 00:54:43.930
If your description is localized into the
users language, then that description will

00:54:43.930 --> 00:54:51.160
appear higher on search results compared to
similarly-ranked queries that are not localized.

00:54:51.160 --> 00:54:53.940
People say what should I localize into?

00:54:53.940 --> 00:54:55.609
And the most common response is going to be
EFIGS-CJK.

00:54:55.609 --> 00:55:02.960
English, French, Italian, German, Spanish,
Japanese, Italian, Korean.

00:55:02.960 --> 00:55:08.640
But if I had to pick two of these, the first
is English because, you know, we're white

00:55:08.640 --> 00:55:10.369
dudes.

00:55:10.369 --> 00:55:15.660
But second if you can only pick one non-English
language, you will probably best -- now, of

00:55:15.660 --> 00:55:20.450
course, this isn't advice that is universally
applicable, you would be better off with Korean

00:55:20.450 --> 00:55:22.840
because Korea loves Android.

00:55:22.840 --> 00:55:28.769
It's a huge, huge market for Android products
and Android games.

00:55:28.769 --> 00:55:30.319
So you go there and then maybe Japanese.

00:55:30.319 --> 00:55:31.440
&gt;&gt;Dan Galpin: Japan is pretty awesome.

00:55:31.440 --> 00:55:35.069
It depends on the title whether it is culturally
important.

00:55:35.069 --> 00:55:37.510
Most importantly, point 11.

00:55:37.510 --> 00:55:42.010
&gt;&gt;Ian Lewis: Because it goes to 11.

00:55:42.010 --> 00:55:45.460
&gt;&gt;Dan Galpin: Make a great game.

00:55:45.460 --> 00:55:47.099
I know, I know.

00:55:47.099 --> 00:55:52.000
So obviously as we said before, editorial
process.

00:55:52.000 --> 00:55:54.200
Ultimately, making awesome games is the way
to get featured.

00:55:54.200 --> 00:55:58.970
But if you do all of those other things, you're
going to not get featured.

00:55:58.970 --> 00:56:03.780
So we've told you what not to do and now go
out, make awesome games.

00:56:03.780 --> 00:56:06.109
Don't let these things block your games from
getting featured.

00:56:06.109 --> 00:56:08.609
We wanted to thank you for coming.

00:56:08.609 --> 00:56:13.869
We are out of time.

00:56:13.869 --> 00:56:18.400
[ Laughter ]
[ Applause ]

00:56:18.400 --> 00:56:24.339
&gt;&gt;Dan Galpin: We actually don't have time
for Q&amp;E.

00:56:24.339 --> 00:56:28.920
Ian and I will hang out after the session
a and answer your questions individually.

00:56:28.920 --> 00:56:34.039
Thank you all for coming to ten things Android
game developers should know.

00:56:34.039 --> 00:56:38.500
&gt;&gt;Ian Lewis: Don't forget to catch our YouTube
show every Friday 2 p.m.

00:56:38.500 --> 00:56:43.700
It gives us an excuse to drink beer and you
information for games we are looking at featuring

00:56:43.700 --> 00:56:49.210
and why or why not they might not pass our
review process.

