WEBVTT
Kind: captions
Language: en

00:00:08.330 --> 00:00:10.825
Welcome to
Google Developers Hackademy.

00:00:10.825 --> 00:00:13.957
This is the third part
of the Google Apps Script course

00:00:13.957 --> 00:00:17.495
created by Antonio Guzman,
from GDG Androititlan Mexico.

00:00:17.792 --> 00:00:20.033
If this is your first contact
with the course,

00:00:20.033 --> 00:00:23.429
I recommend you watch it
in order and do the exercises.

00:00:29.462 --> 00:00:32.594
Welcome to the third lesson
of the Google Apps Script

00:00:32.594 --> 00:00:35.198
introduction course,
I'm Antonio Guzman.

00:00:35.198 --> 00:00:38.132
In this lesson we will
integrate a script

00:00:38.132 --> 00:00:41.495
to a spreadsheet and execute it
upon a certain event:

00:00:41.495 --> 00:00:43.693
the opening of the spreadsheet.

00:00:43.693 --> 00:00:46.924
Today's themes are
container-bound scripts,

00:00:46.924 --> 00:00:49.330
The Tools menu options,

00:00:49.330 --> 00:00:51.066
which are Script Gallery,

00:00:51.066 --> 00:00:52.198
Script Manager

00:00:52.198 --> 00:00:53.693
and Script Editor.

00:00:53.693 --> 00:00:55.957
Finally, the ranges
of a spreadsheet

00:00:55.957 --> 00:00:57.462
and the notation we use.

00:00:57.462 --> 00:00:59.660
When we talk about
container-bound scripts,

00:00:59.660 --> 00:01:02.330
we talk about the type
of scripts accessible

00:01:02.330 --> 00:01:04.165
from Google Forms,

00:01:04.165 --> 00:01:05.462
Google Document

00:01:05.462 --> 00:01:07.099
and Google Spreadsheet.

00:01:07.099 --> 00:01:10.231
These scripts allow us
to extend the functionality

00:01:10.231 --> 00:01:13.429
of those applications.
A comparison would be macros,

00:01:13.429 --> 00:01:16.264
and in this lesson
we will build a script

00:01:16.264 --> 00:01:18.165
from a spreadsheet.

00:01:18.528 --> 00:01:19.924
LET'S GET TO WORK

00:01:21.495 --> 00:01:22.792
Let's go to Drive.

00:01:22.792 --> 00:01:26.693
We already have a spreadsheet
with some data.

00:01:27.330 --> 00:01:30.462
We decided to put
the names of the months

00:01:30.462 --> 00:01:32.792
and a numeric value,
which is right

00:01:33.132 --> 00:01:36.165
its corresponding month number.

00:01:37.363 --> 00:01:40.165
Now we will notate
this option, Tools.

00:01:40.165 --> 00:01:43.099
If you see, Tools has 3 options
for scripts.

00:01:43.099 --> 00:01:44.957
The first one is Script Gallery,

00:01:44.957 --> 00:01:46.198
Script Manager

00:01:46.198 --> 00:01:48.264
and we also have Script Editor.

00:01:48.264 --> 00:01:50.726
In Script Gallery we'll find

00:01:50.726 --> 00:01:54.297
a whole script collection
already developed by others,

00:01:54.759 --> 00:01:56.990
we don't need
to reinvent the wheel,

00:01:56.990 --> 00:01:59.693
there's already plenty of things
we can take,

00:01:59.693 --> 00:02:02.099
and besides, they're classified
by category.

00:02:02.099 --> 00:02:04.297
We just need to find
what we're interested in

00:02:04.297 --> 00:02:05.924
and we can use it.

00:02:06.132 --> 00:02:08.297
The other option I mentioned

00:02:08.594 --> 00:02:10.264
is Script Manager.

00:02:10.627 --> 00:02:12.627
From Script Manager

00:02:12.891 --> 00:02:15.594
we'll be able to list
all the scripts

00:02:15.594 --> 00:02:18.099
we have associated
to our spreadsheet

00:02:18.099 --> 00:02:19.660
or to create a new one.

00:02:19.660 --> 00:02:22.363
This time we don't have any.
Let's move on.

00:02:22.363 --> 00:02:25.660
Script Editor will be the option
that will let us build,

00:02:25.660 --> 00:02:29.429
in this case, the script that
will perform the functionality

00:02:29.429 --> 00:02:31.033
that we have planned.

00:02:31.990 --> 00:02:34.396
You know,
every time we enter,

00:02:34.396 --> 00:02:37.231
we will see
the welcoming screen.

00:02:37.231 --> 00:02:39.330
The same, a blank project.

00:02:39.330 --> 00:02:41.396
We want everything from scratch.

00:02:42.330 --> 00:02:43.924
We select it

00:02:44.396 --> 00:02:46.066
and we move on.

00:02:47.297 --> 00:02:51.231
We are going to name our script.

00:02:52.099 --> 00:02:53.099
"gas."

00:02:53.462 --> 00:02:55.660
Let's say, that nomenclature.

00:02:56.429 --> 00:02:57.957
"gas03."

00:02:58.429 --> 00:03:00.099
We save it and done.

00:03:00.396 --> 00:03:03.792
Let's write our function
and extract the data

00:03:03.792 --> 00:03:07.033
from our spreadsheet.
We declare our variable

00:03:07.330 --> 00:03:10.066
and we use the
"SpreadsheetApp" class.

00:03:11.495 --> 00:03:14.759
In SpreadsheetApp
we find a method

00:03:15.165 --> 00:03:18.066
that in this case is
"getActive".

00:03:18.891 --> 00:03:21.792
This time we won't
open it by ID,

00:03:22.132 --> 00:03:25.132
we will use
"getActiveSpreadsheet."

00:03:26.297 --> 00:03:29.297
That means it's going to take
the spreadsheet

00:03:29.297 --> 00:03:32.396
that, in the context of
our script, is executing it,

00:03:32.396 --> 00:03:33.726
the active one.

00:03:33.726 --> 00:03:37.792
Now, we declare
our sheet variable,

00:03:38.330 --> 00:03:43.561
where we will associate
that first sheet in our spread.

00:03:44.528 --> 00:03:47.693
That's where we will
paint our chart.

00:03:47.693 --> 00:03:50.792
So "spread.getSheet"

00:03:51.990 --> 00:03:55.462
and now we have our sheet.

00:03:56.924 --> 00:03:59.363
Which in this case is just one,

00:03:59.363 --> 00:04:02.495
so we reference
the first element

00:04:02.495 --> 00:04:04.033
and there we go.

00:04:05.231 --> 00:04:08.693
Now we need to create the chart.

00:04:09.330 --> 00:04:12.231
Let's create a variable
called "chart"

00:04:12.231 --> 00:04:14.825
and, on our sheet,

00:04:15.198 --> 00:04:17.099
we're going to use the method

00:04:17.429 --> 00:04:20.990
that allows us to create it.
We're going to use "newChart."

00:04:21.693 --> 00:04:24.297
"newChart" has several options.

00:04:24.297 --> 00:04:25.924
We'll go through them.

00:04:26.264 --> 00:04:29.627
The first will be
the type of chart we want.

00:04:29.627 --> 00:04:31.858
Which one? We're going to pick

00:04:31.858 --> 00:04:33.891
the BAR type.

00:04:34.858 --> 00:04:37.429
So "ChartType..."

00:04:42.528 --> 00:04:45.957
But BARS is not the only type,
there's AREA,

00:04:46.495 --> 00:04:47.825
we also have...

00:04:48.264 --> 00:04:50.627
I don't know, PIE, a classic,

00:04:50.627 --> 00:04:53.594
but we'll stay
with the BAR type.

00:04:53.594 --> 00:04:56.726
Now, we're going to identify
the information

00:04:56.726 --> 00:04:58.330
we want to paint.

00:04:58.330 --> 00:05:01.924
So we need to indicate
the information range.

00:05:03.264 --> 00:05:07.429
To do that, we're going to use
the "a1 Notation."

00:05:07.891 --> 00:05:11.165
That's the one we will use
in most of the cases.

00:05:11.165 --> 00:05:14.495
This a1 notation is the one,
you know this,

00:05:14.495 --> 00:05:18.165
it's a text chain which is
"first column,"

00:05:18.165 --> 00:05:21.660
left upper corner
of our data arrangement,

00:05:22.033 --> 00:05:24.462
and we write right lower corner,

00:05:24.462 --> 00:05:26.627
if we see it as a rectangle.

00:05:26.627 --> 00:05:29.165
In this case it is A1,
which is the first one,

00:05:29.165 --> 00:05:31.132
and B12, the last one.

00:05:31.132 --> 00:05:33.957
We will also indicate
where we want it.

00:05:34.198 --> 00:05:37.957
If you see, here we have
four location options

00:05:38.924 --> 00:05:42.099
so we will give "5"
to the initial values

00:05:42.462 --> 00:05:46.099
and we leave 0
for offsetX and offsetY.

00:05:46.825 --> 00:05:49.660
Now our chart is configured.

00:05:50.363 --> 00:05:53.033
Then, after that,
what we have to do

00:05:53.033 --> 00:05:56.957
is building our chart.
There's a method for that,

00:05:57.924 --> 00:06:00.330
"build," so we use it,

00:06:00.924 --> 00:06:02.924
we finish our sentence,

00:06:02.924 --> 00:06:04.693
you know with a ";"

00:06:05.033 --> 00:06:08.858
This way we now have a chart.
But, what's left?

00:06:08.858 --> 00:06:12.231
Painting and inserting it.
Where? In our sheet.

00:06:12.231 --> 00:06:15.891
So we reference it:
"sheetChart..."

00:06:17.231 --> 00:06:19.693
and, what are we going to do?

00:06:19.693 --> 00:06:22.528
Insert, insert a chart.

00:06:22.825 --> 00:06:26.066
So we finish our sentence
with a semicolon,

00:06:26.759 --> 00:06:31.660
and then we save our script.
Now the function is saved,

00:06:31.660 --> 00:06:32.957
everything's set,

00:06:32.957 --> 00:06:35.759
but now what do we have to do?

00:06:35.759 --> 00:06:37.957
We're talking about
a contained script

00:06:37.957 --> 00:06:40.660
in the context of a spreadsheet,

00:06:40.660 --> 00:06:43.429
So we want it to be executed
in that context.

00:06:43.429 --> 00:06:45.924
Let's create an extra function.

00:06:45.924 --> 00:06:47.891
"function onOpen."

00:06:48.297 --> 00:06:51.726
This function will be
automatically executed

00:06:51.726 --> 00:06:54.462
every time the event
"onOpen" takes place,

00:06:54.462 --> 00:06:57.660
that means every time someone
opens our spreadsheet,

00:06:57.660 --> 00:07:01.396
"myFunction" is going
to be called, so let's do it.

00:07:02.528 --> 00:07:05.627
onOpen we call myFunction...

00:07:06.660 --> 00:07:09.957
and, this way,
we'd already have

00:07:09.957 --> 00:07:13.561
our script ready
so it can be used.

00:07:15.132 --> 00:07:17.396
Now... we run it.

00:07:17.858 --> 00:07:20.429
It tells us
it's starting to run.

00:07:20.429 --> 00:07:23.495
Again, it'll request
authorization, there it is,

00:07:23.495 --> 00:07:25.561
so we grant it...

00:07:26.495 --> 00:07:30.297
It lets us know what kind
of data it'll have access to,

00:07:30.297 --> 00:07:32.825
which is the spreadsheets,
and that's it,

00:07:32.825 --> 00:07:34.693
our script has run.

00:07:34.693 --> 00:07:36.924
Let's go back
to the spreadsheet.

00:07:36.924 --> 00:07:39.495
There's the chart,
but we want...

00:07:39.495 --> 00:07:41.099
Let's delete it.

00:07:41.099 --> 00:07:43.297
Because what we want

00:07:43.297 --> 00:07:46.363
is that chart to be painted
every time

00:07:46.363 --> 00:07:47.990
the spreadsheet is open,

00:07:47.990 --> 00:07:50.924
and not only when the script
is run manually,

00:07:50.924 --> 00:07:54.429
but automatically
and in context. Let's close it.

00:07:54.429 --> 00:07:57.792
We close it... You see?
The script was closed too.

00:07:58.462 --> 00:08:00.495
Because it's a contained script,

00:08:00.495 --> 00:08:03.264
a script you can't see
from Google Drive.

00:08:03.264 --> 00:08:04.891
You see? It's not there.

00:08:05.264 --> 00:08:08.165
Let's reopen our spreadsheet.

00:08:09.231 --> 00:08:10.792
It's loading...

00:08:11.198 --> 00:08:12.759
It's being processed...

00:08:12.759 --> 00:08:14.825
the order is sent
that "onOpen"

00:08:14.825 --> 00:08:17.792
"myFunction" is executed.
What does myFunction do?

00:08:17.792 --> 00:08:19.165
It paints the chart

00:08:19.165 --> 00:08:22.330
with the data on the left
and there we have our chart.

00:08:23.165 --> 00:08:26.396
Each one of the months
with the values we marked.

00:08:26.660 --> 00:08:28.363
Now we go back to Tools.

00:08:28.660 --> 00:08:32.330
Remember that Script Manager
had the function list?

00:08:32.330 --> 00:08:35.033
There it is, the function
and script list,

00:08:35.033 --> 00:08:36.891
"myFunction" and "onOpen."

00:08:36.891 --> 00:08:39.396
If we want, we can edit it
from there.

00:08:39.396 --> 00:08:42.198
We're waiting for it to open,
we will verify

00:08:42.198 --> 00:08:45.363
that it takes us directly
to that function we had.

00:08:46.033 --> 00:08:49.099
It's loading and, done,
there is our script.

00:08:49.099 --> 00:08:53.066
Now we accessed it
through the Script Manager.

00:08:54.792 --> 00:08:56.858
Let's close
the Script Manager...

00:08:57.957 --> 00:09:00.066
we check everything's fine...

00:09:01.330 --> 00:09:02.429
it closes...

00:09:02.429 --> 00:09:04.297
we close our spreadsheet

00:09:04.297 --> 00:09:07.825
and, automatically,
our script closes too,

00:09:07.825 --> 00:09:10.198
because it's a contained script.

00:09:10.660 --> 00:09:12.066
LET'S DO AN EXERCISE

00:09:13.264 --> 00:09:15.693
In order to reaffirm
this lesson themes,

00:09:15.693 --> 00:09:17.528
we will do an exercise.

00:09:17.528 --> 00:09:20.264
Let's use a container-bound
type script

00:09:20.264 --> 00:09:23.066
to add a 16% tax

00:09:23.066 --> 00:09:25.198
to a series of ten products.

00:09:25.198 --> 00:09:27.858
Then, we will build a chart,

00:09:27.858 --> 00:09:29.990
but it won't be colored
on the first sheet,

00:09:29.990 --> 00:09:31.792
we color it on a second one

00:09:31.792 --> 00:09:34.132
and with the data comprising

00:09:34.132 --> 00:09:36.429
from the 3rd
to the 7th products.

00:09:36.429 --> 00:09:38.990
In the first sheet
we leave the values

00:09:38.990 --> 00:09:41.990
for product price, product tax

00:09:41.990 --> 00:09:44.561
and the result of price-tax.

00:09:44.561 --> 00:09:47.891
Finally, I recommend
you go to Script Gallery

00:09:47.891 --> 00:09:49.264
and explore it.

00:09:49.957 --> 00:09:52.033
RECAPITULATION

00:09:52.858 --> 00:09:54.990
Let's remember
that in this lesson

00:09:54.990 --> 00:09:57.759
we saw the definition for
container-bound script,

00:09:57.759 --> 00:09:59.891
the options in the Tools menu:

00:09:59.891 --> 00:10:02.429
Script Gallery, Script Manager

00:10:02.429 --> 00:10:03.957
and Script Editor.

00:10:03.957 --> 00:10:06.759
We also saw the ranges
and their notation.

00:10:06.759 --> 00:10:09.330
In the next lesson
we're going to work

00:10:09.330 --> 00:10:12.726
with another type of scripts,
container extension scripts,

00:10:12.726 --> 00:10:14.462
and we'll integrate
more services:

00:10:14.462 --> 00:10:16.957
Gmail, Forms,

00:10:16.957 --> 00:10:19.264
Drive, Documents y Spreadsheet.

00:10:19.825 --> 00:10:21.726
That will be all for now.

00:10:21.726 --> 00:10:23.132
Keep on programming.

