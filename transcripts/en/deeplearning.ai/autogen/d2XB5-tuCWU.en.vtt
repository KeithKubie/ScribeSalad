WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.570
one way to learn the parameters of the

00:00:02.570 --> 00:00:02.580
one way to learn the parameters of the
 

00:00:02.580 --> 00:00:04.550
one way to learn the parameters of the
neural network so that it gives you a

00:00:04.550 --> 00:00:04.560
neural network so that it gives you a
 

00:00:04.560 --> 00:00:07.039
neural network so that it gives you a
good encoding for your pictures of faces

00:00:07.039 --> 00:00:07.049
good encoding for your pictures of faces
 

00:00:07.049 --> 00:00:09.890
good encoding for your pictures of faces
is to define and apply gradient descent

00:00:09.890 --> 00:00:09.900
is to define and apply gradient descent
 

00:00:09.900 --> 00:00:12.410
is to define and apply gradient descent
on the triplet loss function let's see

00:00:12.410 --> 00:00:12.420
on the triplet loss function let's see
 

00:00:12.420 --> 00:00:14.600
on the triplet loss function let's see
what that means to apply the triplet

00:00:14.600 --> 00:00:14.610
what that means to apply the triplet
 

00:00:14.610 --> 00:00:18.230
what that means to apply the triplet
loss you need to compare pairs of images

00:00:18.230 --> 00:00:18.240
loss you need to compare pairs of images
 

00:00:18.240 --> 00:00:21.830
loss you need to compare pairs of images
for example given this picture to learn

00:00:21.830 --> 00:00:21.840
for example given this picture to learn
 

00:00:21.840 --> 00:00:24.349
for example given this picture to learn
the parameters of the neural network you

00:00:24.349 --> 00:00:24.359
the parameters of the neural network you
 

00:00:24.359 --> 00:00:26.599
the parameters of the neural network you
have to look at several pictures at the

00:00:26.599 --> 00:00:26.609
have to look at several pictures at the
 

00:00:26.609 --> 00:00:29.120
have to look at several pictures at the
same time for example given this pair of

00:00:29.120 --> 00:00:29.130
same time for example given this pair of
 

00:00:29.130 --> 00:00:31.189
same time for example given this pair of
images you want their encodings to be

00:00:31.189 --> 00:00:31.199
images you want their encodings to be
 

00:00:31.199 --> 00:00:32.990
images you want their encodings to be
similar because these are the same

00:00:32.990 --> 00:00:33.000
similar because these are the same
 

00:00:33.000 --> 00:00:33.650
similar because these are the same
person

00:00:33.650 --> 00:00:33.660
person
 

00:00:33.660 --> 00:00:35.990
person
whereas given this pair of images you

00:00:35.990 --> 00:00:36.000
whereas given this pair of images you
 

00:00:36.000 --> 00:00:38.119
whereas given this pair of images you
want their encodings to be quite

00:00:38.119 --> 00:00:38.129
want their encodings to be quite
 

00:00:38.129 --> 00:00:40.369
want their encodings to be quite
different because these are different

00:00:40.369 --> 00:00:40.379
different because these are different
 

00:00:40.379 --> 00:00:43.369
different because these are different
persons in the terminology of the

00:00:43.369 --> 00:00:43.379
persons in the terminology of the
 

00:00:43.379 --> 00:00:45.799
persons in the terminology of the
triplet loss what you're going to do is

00:00:45.799 --> 00:00:45.809
triplet loss what you're going to do is
 

00:00:45.809 --> 00:00:49.459
triplet loss what you're going to do is
always look at one anchor image and then

00:00:49.459 --> 00:00:49.469
always look at one anchor image and then
 

00:00:49.469 --> 00:00:51.770
always look at one anchor image and then
you want the distance between the anchor

00:00:51.770 --> 00:00:51.780
you want the distance between the anchor
 

00:00:51.780 --> 00:00:54.619
you want the distance between the anchor
and a positive image really a positive

00:00:54.619 --> 00:00:54.629
and a positive image really a positive
 

00:00:54.629 --> 00:00:57.170
and a positive image really a positive
example meaning is the same person to be

00:00:57.170 --> 00:00:57.180
example meaning is the same person to be
 

00:00:57.180 --> 00:01:00.200
example meaning is the same person to be
similar whereas you want the anchor when

00:01:00.200 --> 00:01:00.210
similar whereas you want the anchor when
 

00:01:00.210 --> 00:01:02.090
similar whereas you want the anchor when
pairs are compared to the negative

00:01:02.090 --> 00:01:02.100
pairs are compared to the negative
 

00:01:02.100 --> 00:01:05.929
pairs are compared to the negative
example for their distances to be much

00:01:05.929 --> 00:01:05.939
example for their distances to be much
 

00:01:05.939 --> 00:01:08.690
example for their distances to be much
further apart so this is what gives rise

00:01:08.690 --> 00:01:08.700
further apart so this is what gives rise
 

00:01:08.700 --> 00:01:11.240
further apart so this is what gives rise
to the term triplet loss which is that

00:01:11.240 --> 00:01:11.250
to the term triplet loss which is that
 

00:01:11.250 --> 00:01:14.120
to the term triplet loss which is that
you always be looking at three images at

00:01:14.120 --> 00:01:14.130
you always be looking at three images at
 

00:01:14.130 --> 00:01:16.670
you always be looking at three images at
a time you'll be looking at an anchor

00:01:16.670 --> 00:01:16.680
a time you'll be looking at an anchor
 

00:01:16.680 --> 00:01:20.289
a time you'll be looking at an anchor
image a positive image as well as a

00:01:20.289 --> 00:01:20.299
image a positive image as well as a
 

00:01:20.299 --> 00:01:22.520
image a positive image as well as a
negative image and I'm going to

00:01:22.520 --> 00:01:22.530
negative image and I'm going to
 

00:01:22.530 --> 00:01:24.440
negative image and I'm going to
abbreviate anchor a positive and

00:01:24.440 --> 00:01:24.450
abbreviate anchor a positive and
 

00:01:24.450 --> 00:01:28.940
abbreviate anchor a positive and
negative as a P and N so to formalize

00:01:28.940 --> 00:01:28.950
negative as a P and N so to formalize
 

00:01:28.950 --> 00:01:32.450
negative as a P and N so to formalize
this what you want is for the parameters

00:01:32.450 --> 00:01:32.460
this what you want is for the parameters
 

00:01:32.460 --> 00:01:33.800
this what you want is for the parameters
of your neural network or for your

00:01:33.800 --> 00:01:33.810
of your neural network or for your
 

00:01:33.810 --> 00:01:35.719
of your neural network or for your
encodings to have the following property

00:01:35.719 --> 00:01:35.729
encodings to have the following property
 

00:01:35.729 --> 00:01:39.310
encodings to have the following property
which is that you want the encoding

00:01:39.310 --> 00:01:39.320
which is that you want the encoding
 

00:01:39.320 --> 00:01:42.800
which is that you want the encoding
between the anchor - the encoding of the

00:01:42.800 --> 00:01:42.810
between the anchor - the encoding of the
 

00:01:42.810 --> 00:01:45.590
between the anchor - the encoding of the
positive example you want this to be

00:01:45.590 --> 00:01:45.600
positive example you want this to be
 

00:01:45.600 --> 00:01:48.530
positive example you want this to be
small and in particular you want this to

00:01:48.530 --> 00:01:48.540
small and in particular you want this to
 

00:01:48.540 --> 00:01:51.530
small and in particular you want this to
be less than or equal to the distance or

00:01:51.530 --> 00:01:51.540
be less than or equal to the distance or
 

00:01:51.540 --> 00:01:54.350
be less than or equal to the distance or
the squared norm between the encoding of

00:01:54.350 --> 00:01:54.360
the squared norm between the encoding of
 

00:01:54.360 --> 00:01:57.830
the squared norm between the encoding of
the anchor and the encoding of the

00:01:57.830 --> 00:01:57.840
the anchor and the encoding of the
 

00:01:57.840 --> 00:02:02.149
the anchor and the encoding of the
negative where of course this is d of a

00:02:02.149 --> 00:02:02.159
negative where of course this is d of a
 

00:02:02.159 --> 00:02:07.640
negative where of course this is d of a
P and this is d of a and

00:02:07.640 --> 00:02:07.650
P and this is d of a and
 

00:02:07.650 --> 00:02:10.400
P and this is d of a and
and you can think of D as a distance

00:02:10.400 --> 00:02:10.410
and you can think of D as a distance
 

00:02:10.410 --> 00:02:12.740
and you can think of D as a distance
function which is why we named it with

00:02:12.740 --> 00:02:12.750
function which is why we named it with
 

00:02:12.750 --> 00:02:16.100
function which is why we named it with
the alphabet D now if we move the term

00:02:16.100 --> 00:02:16.110
the alphabet D now if we move the term
 

00:02:16.110 --> 00:02:17.960
the alphabet D now if we move the term
from the right side of this equation to

00:02:17.960 --> 00:02:17.970
from the right side of this equation to
 

00:02:17.970 --> 00:02:20.420
from the right side of this equation to
the left side what you end up with is f

00:02:20.420 --> 00:02:20.430
the left side what you end up with is f
 

00:02:20.430 --> 00:02:25.490
the left side what you end up with is f
of a minus F of P squared minus when I

00:02:25.490 --> 00:02:25.500
of a minus F of P squared minus when I
 

00:02:25.500 --> 00:02:28.790
of a minus F of P squared minus when I
take the right hand side now minus F of

00:02:28.790 --> 00:02:28.800
take the right hand side now minus F of
 

00:02:28.800 --> 00:02:33.260
take the right hand side now minus F of
N squared you want this to be less than

00:02:33.260 --> 00:02:33.270
N squared you want this to be less than
 

00:02:33.270 --> 00:02:35.600
N squared you want this to be less than
or equal to zero but now we're going to

00:02:35.600 --> 00:02:35.610
or equal to zero but now we're going to
 

00:02:35.610 --> 00:02:38.090
or equal to zero but now we're going to
make a slight change to this expression

00:02:38.090 --> 00:02:38.100
make a slight change to this expression
 

00:02:38.100 --> 00:02:40.340
make a slight change to this expression
which is one trivial way to make sure

00:02:40.340 --> 00:02:40.350
which is one trivial way to make sure
 

00:02:40.350 --> 00:02:42.290
which is one trivial way to make sure
this is satisfied is to just learn

00:02:42.290 --> 00:02:42.300
this is satisfied is to just learn
 

00:02:42.300 --> 00:02:44.960
this is satisfied is to just learn
everything equals zero if F always

00:02:44.960 --> 00:02:44.970
everything equals zero if F always
 

00:02:44.970 --> 00:02:48.050
everything equals zero if F always
outputs 0 then this is 0 minus 0 which

00:02:48.050 --> 00:02:48.060
outputs 0 then this is 0 minus 0 which
 

00:02:48.060 --> 00:02:50.690
outputs 0 then this is 0 minus 0 which
is 0 this is 0 minus 0 which is 0 and so

00:02:50.690 --> 00:02:50.700
is 0 this is 0 minus 0 which is 0 and so
 

00:02:50.700 --> 00:02:55.880
is 0 this is 0 minus 0 which is 0 and so
well by saying F of any image equals a

00:02:55.880 --> 00:02:55.890
well by saying F of any image equals a
 

00:02:55.890 --> 00:02:57.650
well by saying F of any image equals a
vector of all zeros you can you know

00:02:57.650 --> 00:02:57.660
vector of all zeros you can you know
 

00:02:57.660 --> 00:03:00.790
vector of all zeros you can you know
almost trivially satisfy this equation

00:03:00.790 --> 00:03:00.800
almost trivially satisfy this equation
 

00:03:00.800 --> 00:03:03.590
almost trivially satisfy this equation
so to make sure that the neural network

00:03:03.590 --> 00:03:03.600
so to make sure that the neural network
 

00:03:03.600 --> 00:03:06.770
so to make sure that the neural network
doesn't just output 0 for all the

00:03:06.770 --> 00:03:06.780
doesn't just output 0 for all the
 

00:03:06.780 --> 00:03:08.750
doesn't just output 0 for all the
encoding so to make sure that it doesn't

00:03:08.750 --> 00:03:08.760
encoding so to make sure that it doesn't
 

00:03:08.760 --> 00:03:11.330
encoding so to make sure that it doesn't
set all the encoding 's equal to another

00:03:11.330 --> 00:03:11.340
set all the encoding 's equal to another
 

00:03:11.340 --> 00:03:13.250
set all the encoding 's equal to another
each other right another way for the

00:03:13.250 --> 00:03:13.260
each other right another way for the
 

00:03:13.260 --> 00:03:15.860
each other right another way for the
neural network to give a trivial output

00:03:15.860 --> 00:03:15.870
neural network to give a trivial output
 

00:03:15.870 --> 00:03:17.960
neural network to give a trivial output
is if the encoding for every image was

00:03:17.960 --> 00:03:17.970
is if the encoding for every image was
 

00:03:17.970 --> 00:03:19.760
is if the encoding for every image was
identical to the encoding to every other

00:03:19.760 --> 00:03:19.770
identical to the encoding to every other
 

00:03:19.770 --> 00:03:23.780
identical to the encoding to every other
image in which case you again get 0 0

00:03:23.780 --> 00:03:23.790
image in which case you again get 0 0
 

00:03:23.790 --> 00:03:26.840
image in which case you again get 0 0
minus 0 so to prevent in your network

00:03:26.840 --> 00:03:26.850
minus 0 so to prevent in your network
 

00:03:26.850 --> 00:03:29.120
minus 0 so to prevent in your network
from doing that what we're going to do

00:03:29.120 --> 00:03:29.130
from doing that what we're going to do
 

00:03:29.130 --> 00:03:32.030
from doing that what we're going to do
is modify this objective to say that

00:03:32.030 --> 00:03:32.040
is modify this objective to say that
 

00:03:32.040 --> 00:03:34.729
is modify this objective to say that
this doesn't need to be just less than

00:03:34.729 --> 00:03:34.739
this doesn't need to be just less than
 

00:03:34.739 --> 00:03:38.630
this doesn't need to be just less than
or equal to 0 it needs to be quite a bit

00:03:38.630 --> 00:03:38.640
or equal to 0 it needs to be quite a bit
 

00:03:38.640 --> 00:03:42.410
or equal to 0 it needs to be quite a bit
smaller than 0 so in particular we say

00:03:42.410 --> 00:03:42.420
smaller than 0 so in particular we say
 

00:03:42.420 --> 00:03:44.590
smaller than 0 so in particular we say
this needs to be less than negative

00:03:44.590 --> 00:03:44.600
this needs to be less than negative
 

00:03:44.600 --> 00:03:48.229
this needs to be less than negative
alpha where alpha is another hyper

00:03:48.229 --> 00:03:48.239
alpha where alpha is another hyper
 

00:03:48.239 --> 00:03:50.720
alpha where alpha is another hyper
parameter then this prevents the new

00:03:50.720 --> 00:03:50.730
parameter then this prevents the new
 

00:03:50.730 --> 00:03:52.550
parameter then this prevents the new
network from outputting the trivial

00:03:52.550 --> 00:03:52.560
network from outputting the trivial
 

00:03:52.560 --> 00:03:55.370
network from outputting the trivial
solutions and by convention usually we

00:03:55.370 --> 00:03:55.380
solutions and by convention usually we
 

00:03:55.380 --> 00:03:58.040
solutions and by convention usually we
write plus alpha instead of negative

00:03:58.040 --> 00:03:58.050
write plus alpha instead of negative
 

00:03:58.050 --> 00:04:01.330
write plus alpha instead of negative
alpha there and this is also called a

00:04:01.330 --> 00:04:01.340
alpha there and this is also called a
 

00:04:01.340 --> 00:04:04.610
alpha there and this is also called a
margin which is terminology that you'd

00:04:04.610 --> 00:04:04.620
margin which is terminology that you'd
 

00:04:04.620 --> 00:04:07.490
margin which is terminology that you'd
be familiar with if you've also seen the

00:04:07.490 --> 00:04:07.500
be familiar with if you've also seen the
 

00:04:07.500 --> 00:04:09.979
be familiar with if you've also seen the
literature on support vector machines

00:04:09.979 --> 00:04:09.989
literature on support vector machines
 

00:04:09.989 --> 00:04:12.180
literature on support vector machines
but don't worry about it if you haven't

00:04:12.180 --> 00:04:12.190
but don't worry about it if you haven't
 

00:04:12.190 --> 00:04:14.790
but don't worry about it if you haven't
and we can also modify this equation on

00:04:14.790 --> 00:04:14.800
and we can also modify this equation on
 

00:04:14.800 --> 00:04:18.270
and we can also modify this equation on
top by adding this margin parameter so

00:04:18.270 --> 00:04:18.280
top by adding this margin parameter so
 

00:04:18.280 --> 00:04:20.009
top by adding this margin parameter so
say we give an example let's say the

00:04:20.009 --> 00:04:20.019
say we give an example let's say the
 

00:04:20.019 --> 00:04:23.880
say we give an example let's say the
margin is set to zero point two if in

00:04:23.880 --> 00:04:23.890
margin is set to zero point two if in
 

00:04:23.890 --> 00:04:26.610
margin is set to zero point two if in
this example D of the anchor and the

00:04:26.610 --> 00:04:26.620
this example D of the anchor and the
 

00:04:26.620 --> 00:04:30.510
this example D of the anchor and the
positive is equal to 0.5 then you won't

00:04:30.510 --> 00:04:30.520
positive is equal to 0.5 then you won't
 

00:04:30.520 --> 00:04:33.300
positive is equal to 0.5 then you won't
be satisfied of D between the anchor and

00:04:33.300 --> 00:04:33.310
be satisfied of D between the anchor and
 

00:04:33.310 --> 00:04:34.800
be satisfied of D between the anchor and
the negative was just a little bit

00:04:34.800 --> 00:04:34.810
the negative was just a little bit
 

00:04:34.810 --> 00:04:39.750
the negative was just a little bit
bigger say 0.5 1 right even though 0.5 1

00:04:39.750 --> 00:04:39.760
bigger say 0.5 1 right even though 0.5 1
 

00:04:39.760 --> 00:04:42.450
bigger say 0.5 1 right even though 0.5 1
is bigger than 0.5 you're saying that's

00:04:42.450 --> 00:04:42.460
is bigger than 0.5 you're saying that's
 

00:04:42.460 --> 00:04:44.700
is bigger than 0.5 you're saying that's
not good enough we want D of a common

00:04:44.700 --> 00:04:44.710
not good enough we want D of a common
 

00:04:44.710 --> 00:04:48.060
not good enough we want D of a common
end to be much bigger than D of a tamo P

00:04:48.060 --> 00:04:48.070
end to be much bigger than D of a tamo P
 

00:04:48.070 --> 00:04:50.880
end to be much bigger than D of a tamo P
and in particular you want this to be at

00:04:50.880 --> 00:04:50.890
and in particular you want this to be at
 

00:04:50.890 --> 00:04:54.690
and in particular you want this to be at
least 0.7 or higher or alternatively to

00:04:54.690 --> 00:04:54.700
least 0.7 or higher or alternatively to
 

00:04:54.700 --> 00:04:57.600
least 0.7 or higher or alternatively to
achieve this margin or this gap of at

00:04:57.600 --> 00:04:57.610
achieve this margin or this gap of at
 

00:04:57.610 --> 00:04:59.280
achieve this margin or this gap of at
least zero point two you could either

00:04:59.280 --> 00:04:59.290
least zero point two you could either
 

00:04:59.290 --> 00:05:02.660
least zero point two you could either
push this up or push this down so that

00:05:02.660 --> 00:05:02.670
push this up or push this down so that
 

00:05:02.670 --> 00:05:05.580
push this up or push this down so that
there is this at least this gap of this

00:05:05.580 --> 00:05:05.590
there is this at least this gap of this
 

00:05:05.590 --> 00:05:08.220
there is this at least this gap of this
alpha hyper parameter alpha at 0.2

00:05:08.220 --> 00:05:08.230
alpha hyper parameter alpha at 0.2
 

00:05:08.230 --> 00:05:11.310
alpha hyper parameter alpha at 0.2
between the distance between the anchor

00:05:11.310 --> 00:05:11.320
between the distance between the anchor
 

00:05:11.320 --> 00:05:13.470
between the distance between the anchor
and the positive versus the anchor and

00:05:13.470 --> 00:05:13.480
and the positive versus the anchor and
 

00:05:13.480 --> 00:05:15.690
and the positive versus the anchor and
the negative so that's what having a

00:05:15.690 --> 00:05:15.700
the negative so that's what having a
 

00:05:15.700 --> 00:05:18.240
the negative so that's what having a
margin parameter here does which is it

00:05:18.240 --> 00:05:18.250
margin parameter here does which is it
 

00:05:18.250 --> 00:05:21.990
margin parameter here does which is it
pushes the anchor positive pair and the

00:05:21.990 --> 00:05:22.000
pushes the anchor positive pair and the
 

00:05:22.000 --> 00:05:24.360
pushes the anchor positive pair and the
anchor negative here further away from

00:05:24.360 --> 00:05:24.370
anchor negative here further away from
 

00:05:24.370 --> 00:05:26.940
anchor negative here further away from
each other so let's take this equation

00:05:26.940 --> 00:05:26.950
each other so let's take this equation
 

00:05:26.950 --> 00:05:30.180
each other so let's take this equation
we have here at the bottom and on the

00:05:30.180 --> 00:05:30.190
we have here at the bottom and on the
 

00:05:30.190 --> 00:05:33.270
we have here at the bottom and on the
next slide formalize it and define the

00:05:33.270 --> 00:05:33.280
next slide formalize it and define the
 

00:05:33.280 --> 00:05:36.780
next slide formalize it and define the
Triplett loss function so the Triplett

00:05:36.780 --> 00:05:36.790
Triplett loss function so the Triplett
 

00:05:36.790 --> 00:05:39.900
Triplett loss function so the Triplett
loss function is defined on triples of

00:05:39.900 --> 00:05:39.910
loss function is defined on triples of
 

00:05:39.910 --> 00:05:46.110
loss function is defined on triples of
images so given three images a P and n

00:05:46.110 --> 00:05:46.120
images so given three images a P and n
 

00:05:46.120 --> 00:05:48.270
images so given three images a P and n
the anchor positive and negative

00:05:48.270 --> 00:05:48.280
the anchor positive and negative
 

00:05:48.280 --> 00:05:51.030
the anchor positive and negative
examples so the positive examples is of

00:05:51.030 --> 00:05:51.040
examples so the positive examples is of
 

00:05:51.040 --> 00:05:53.670
examples so the positive examples is of
the same person as the anchor but the

00:05:53.670 --> 00:05:53.680
the same person as the anchor but the
 

00:05:53.680 --> 00:05:56.100
the same person as the anchor but the
negative is of a different person than

00:05:56.100 --> 00:05:56.110
negative is of a different person than
 

00:05:56.110 --> 00:05:59.640
negative is of a different person than
the anchor we're going to define the

00:05:59.640 --> 00:05:59.650
the anchor we're going to define the
 

00:05:59.650 --> 00:06:02.909
the anchor we're going to define the
loss as follows the loss on this example

00:06:02.909 --> 00:06:02.919
loss as follows the loss on this example
 

00:06:02.919 --> 00:06:04.980
loss as follows the loss on this example
which is really defined on a triplet of

00:06:04.980 --> 00:06:04.990
which is really defined on a triplet of
 

00:06:04.990 --> 00:06:08.190
which is really defined on a triplet of
images is let me first copy over what we

00:06:08.190 --> 00:06:08.200
images is let me first copy over what we
 

00:06:08.200 --> 00:06:11.180
images is let me first copy over what we
had on the previous slide so that was um

00:06:11.180 --> 00:06:11.190
had on the previous slide so that was um
 

00:06:11.190 --> 00:06:18.510
had on the previous slide so that was um
FA minus F P squared minus F

00:06:18.510 --> 00:06:18.520
FA minus F P squared minus F
 

00:06:18.520 --> 00:06:25.110
FA minus F P squared minus F
a minus F N squared and then plus alpha

00:06:25.110 --> 00:06:25.120
a minus F N squared and then plus alpha
 

00:06:25.120 --> 00:06:27.719
a minus F N squared and then plus alpha
the margin parameter and what you want

00:06:27.719 --> 00:06:27.729
the margin parameter and what you want
 

00:06:27.729 --> 00:06:30.570
the margin parameter and what you want
is for this to be less than or equal to

00:06:30.570 --> 00:06:30.580
is for this to be less than or equal to
 

00:06:30.580 --> 00:06:34.020
is for this to be less than or equal to
zero so to define the loss function

00:06:34.020 --> 00:06:34.030
zero so to define the loss function
 

00:06:34.030 --> 00:06:38.390
zero so to define the loss function
let's take the max between this and zero

00:06:38.390 --> 00:06:38.400
let's take the max between this and zero
 

00:06:38.400 --> 00:06:41.430
let's take the max between this and zero
so the effect of taking the max here is

00:06:41.430 --> 00:06:41.440
so the effect of taking the max here is
 

00:06:41.440 --> 00:06:44.760
so the effect of taking the max here is
that so long as this is less than zero

00:06:44.760 --> 00:06:44.770
that so long as this is less than zero
 

00:06:44.770 --> 00:06:47.969
that so long as this is less than zero
then the loss is zero because the max of

00:06:47.969 --> 00:06:47.979
then the loss is zero because the max of
 

00:06:47.979 --> 00:06:50.670
then the loss is zero because the max of
something less than equal to 0 with 0 is

00:06:50.670 --> 00:06:50.680
something less than equal to 0 with 0 is
 

00:06:50.680 --> 00:06:53.790
something less than equal to 0 with 0 is
going to be 0 so so long as you achieve

00:06:53.790 --> 00:06:53.800
going to be 0 so so long as you achieve
 

00:06:53.800 --> 00:06:55.710
going to be 0 so so long as you achieve
the goal of making this thing of

00:06:55.710 --> 00:06:55.720
the goal of making this thing of
 

00:06:55.720 --> 00:06:57.390
the goal of making this thing of
underlined in green so long as you've

00:06:57.390 --> 00:06:57.400
underlined in green so long as you've
 

00:06:57.400 --> 00:06:58.920
underlined in green so long as you've
achieved the objective of making that

00:06:58.920 --> 00:06:58.930
achieved the objective of making that
 

00:06:58.930 --> 00:07:01.559
achieved the objective of making that
less than or equal to zero then the loss

00:07:01.559 --> 00:07:01.569
less than or equal to zero then the loss
 

00:07:01.569 --> 00:07:04.559
less than or equal to zero then the loss
on this example is equal to zero but if

00:07:04.559 --> 00:07:04.569
on this example is equal to zero but if
 

00:07:04.569 --> 00:07:06.510
on this example is equal to zero but if
on the other hand if this is greater

00:07:06.510 --> 00:07:06.520
on the other hand if this is greater
 

00:07:06.520 --> 00:07:09.240
on the other hand if this is greater
than zero then if you take the max the

00:07:09.240 --> 00:07:09.250
than zero then if you take the max the
 

00:07:09.250 --> 00:07:11.189
than zero then if you take the max the
max who end up selecting this thing of

00:07:11.189 --> 00:07:11.199
max who end up selecting this thing of
 

00:07:11.199 --> 00:07:12.990
max who end up selecting this thing of
underline and green and so you would

00:07:12.990 --> 00:07:13.000
underline and green and so you would
 

00:07:13.000 --> 00:07:16.350
underline and green and so you would
have a positive loss so by trying to

00:07:16.350 --> 00:07:16.360
have a positive loss so by trying to
 

00:07:16.360 --> 00:07:18.600
have a positive loss so by trying to
minimize this this has the effect of

00:07:18.600 --> 00:07:18.610
minimize this this has the effect of
 

00:07:18.610 --> 00:07:22.200
minimize this this has the effect of
trying to send this thing to be zero or

00:07:22.200 --> 00:07:22.210
trying to send this thing to be zero or
 

00:07:22.210 --> 00:07:24.149
trying to send this thing to be zero or
less than equal to zero and then so long

00:07:24.149 --> 00:07:24.159
less than equal to zero and then so long
 

00:07:24.159 --> 00:07:26.159
less than equal to zero and then so long
as this zero or less than equal to zero

00:07:26.159 --> 00:07:26.169
as this zero or less than equal to zero
 

00:07:26.169 --> 00:07:29.399
as this zero or less than equal to zero
the neural network doesn't care how much

00:07:29.399 --> 00:07:29.409
the neural network doesn't care how much
 

00:07:29.409 --> 00:07:29.850
the neural network doesn't care how much
further

00:07:29.850 --> 00:07:29.860
further
 

00:07:29.860 --> 00:07:32.730
further
negative negative it is so this is how

00:07:32.730 --> 00:07:32.740
negative negative it is so this is how
 

00:07:32.740 --> 00:07:35.159
negative negative it is so this is how
you define the loss on a single triplet

00:07:35.159 --> 00:07:35.169
you define the loss on a single triplet
 

00:07:35.169 --> 00:07:37.649
you define the loss on a single triplet
and the overall cost function for your

00:07:37.649 --> 00:07:37.659
and the overall cost function for your
 

00:07:37.659 --> 00:07:40.680
and the overall cost function for your
neural network can be sum over a

00:07:40.680 --> 00:07:40.690
neural network can be sum over a
 

00:07:40.690 --> 00:07:43.620
neural network can be sum over a
training set of these individual losses

00:07:43.620 --> 00:07:43.630
training set of these individual losses
 

00:07:43.630 --> 00:07:49.920
training set of these individual losses
on different Triplets so if you have a

00:07:49.920 --> 00:07:49.930
on different Triplets so if you have a
 

00:07:49.930 --> 00:07:53.129
on different Triplets so if you have a
training set of say 10,000 pictures with

00:07:53.129 --> 00:07:53.139
training set of say 10,000 pictures with
 

00:07:53.139 --> 00:07:55.529
training set of say 10,000 pictures with
a thousand different persons what you

00:07:55.529 --> 00:07:55.539
a thousand different persons what you
 

00:07:55.539 --> 00:07:58.620
a thousand different persons what you
have to do is take your 10,000 pictures

00:07:58.620 --> 00:07:58.630
have to do is take your 10,000 pictures
 

00:07:58.630 --> 00:08:01.050
have to do is take your 10,000 pictures
and use it to generate to select

00:08:01.050 --> 00:08:01.060
and use it to generate to select
 

00:08:01.060 --> 00:08:03.839
and use it to generate to select
triplets like this and then train your

00:08:03.839 --> 00:08:03.849
triplets like this and then train your
 

00:08:03.849 --> 00:08:05.640
triplets like this and then train your
learning algorithm using gradient

00:08:05.640 --> 00:08:05.650
learning algorithm using gradient
 

00:08:05.650 --> 00:08:07.980
learning algorithm using gradient
descent on this type of cost function

00:08:07.980 --> 00:08:07.990
descent on this type of cost function
 

00:08:07.990 --> 00:08:10.110
descent on this type of cost function
which is really defined on Triplets of a

00:08:10.110 --> 00:08:10.120
which is really defined on Triplets of a
 

00:08:10.120 --> 00:08:13.879
which is really defined on Triplets of a
of images drawn from your training set

00:08:13.879 --> 00:08:13.889
of images drawn from your training set
 

00:08:13.889 --> 00:08:18.330
of images drawn from your training set
notice that in order to define this data

00:08:18.330 --> 00:08:18.340
notice that in order to define this data
 

00:08:18.340 --> 00:08:19.499
notice that in order to define this data
set of triplets

00:08:19.499 --> 00:08:19.509
set of triplets
 

00:08:19.509 --> 00:08:23.189
set of triplets
you do need some pairs of a and P pairs

00:08:23.189 --> 00:08:23.199
you do need some pairs of a and P pairs
 

00:08:23.199 --> 00:08:25.769
you do need some pairs of a and P pairs
of pictures of the same person so the

00:08:25.769 --> 00:08:25.779
of pictures of the same person so the
 

00:08:25.779 --> 00:08:27.959
of pictures of the same person so the
purpose of training your system you do

00:08:27.959 --> 00:08:27.969
purpose of training your system you do
 

00:08:27.969 --> 00:08:29.430
purpose of training your system you do
need a data sets where you

00:08:29.430 --> 00:08:29.440
need a data sets where you
 

00:08:29.440 --> 00:08:31.850
need a data sets where you
of multiple pictures of the same person

00:08:31.850 --> 00:08:31.860
of multiple pictures of the same person
 

00:08:31.860 --> 00:08:34.620
of multiple pictures of the same person
that's why in this example I said if you

00:08:34.620 --> 00:08:34.630
that's why in this example I said if you
 

00:08:34.630 --> 00:08:37.409
that's why in this example I said if you
have 10,000 pictures of 1000 different

00:08:37.409 --> 00:08:37.419
have 10,000 pictures of 1000 different
 

00:08:37.419 --> 00:08:39.600
have 10,000 pictures of 1000 different
persons so maybe you have ten pictures

00:08:39.600 --> 00:08:39.610
persons so maybe you have ten pictures
 

00:08:39.610 --> 00:08:42.630
persons so maybe you have ten pictures
on average of each of you 1000 persons

00:08:42.630 --> 00:08:42.640
on average of each of you 1000 persons
 

00:08:42.640 --> 00:08:44.940
on average of each of you 1000 persons
to make up you entire dataset if you had

00:08:44.940 --> 00:08:44.950
to make up you entire dataset if you had
 

00:08:44.950 --> 00:08:47.400
to make up you entire dataset if you had
just one picture of each person then you

00:08:47.400 --> 00:08:47.410
just one picture of each person then you
 

00:08:47.410 --> 00:08:50.130
just one picture of each person then you
can't actually train this system but of

00:08:50.130 --> 00:08:50.140
can't actually train this system but of
 

00:08:50.140 --> 00:08:53.250
can't actually train this system but of
course after training if you're applying

00:08:53.250 --> 00:08:53.260
course after training if you're applying
 

00:08:53.260 --> 00:08:55.710
course after training if you're applying
this but of course after having trained

00:08:55.710 --> 00:08:55.720
this but of course after having trained
 

00:08:55.720 --> 00:08:58.170
this but of course after having trained
this system you can then apply it to

00:08:58.170 --> 00:08:58.180
this system you can then apply it to
 

00:08:58.180 --> 00:09:01.170
this system you can then apply it to
your one-shot learning problem where for

00:09:01.170 --> 00:09:01.180
your one-shot learning problem where for
 

00:09:01.180 --> 00:09:03.150
your one-shot learning problem where for
your face recognition system maybe you

00:09:03.150 --> 00:09:03.160
your face recognition system maybe you
 

00:09:03.160 --> 00:09:05.430
your face recognition system maybe you
have only a single picture of someone

00:09:05.430 --> 00:09:05.440
have only a single picture of someone
 

00:09:05.440 --> 00:09:07.410
have only a single picture of someone
you might be trying to recognize but for

00:09:07.410 --> 00:09:07.420
you might be trying to recognize but for
 

00:09:07.420 --> 00:09:09.120
you might be trying to recognize but for
your training set you do need to make

00:09:09.120 --> 00:09:09.130
your training set you do need to make
 

00:09:09.130 --> 00:09:11.580
your training set you do need to make
sure you have multiple images of the

00:09:11.580 --> 00:09:11.590
sure you have multiple images of the
 

00:09:11.590 --> 00:09:13.410
sure you have multiple images of the
same person at least for some people in

00:09:13.410 --> 00:09:13.420
same person at least for some people in
 

00:09:13.420 --> 00:09:15.090
same person at least for some people in
your training set so that you can have

00:09:15.090 --> 00:09:15.100
your training set so that you can have
 

00:09:15.100 --> 00:09:19.860
your training set so that you can have
pairs of anchor and positive images now

00:09:19.860 --> 00:09:19.870
pairs of anchor and positive images now
 

00:09:19.870 --> 00:09:22.410
pairs of anchor and positive images now
how do you actually choose these

00:09:22.410 --> 00:09:22.420
how do you actually choose these
 

00:09:22.420 --> 00:09:25.470
how do you actually choose these
triplets to form your training set one

00:09:25.470 --> 00:09:25.480
triplets to form your training set one
 

00:09:25.480 --> 00:09:28.530
triplets to form your training set one
of the problems with if you choose a P

00:09:28.530 --> 00:09:28.540
of the problems with if you choose a P
 

00:09:28.540 --> 00:09:30.900
of the problems with if you choose a P
and n randomly from your training set

00:09:30.900 --> 00:09:30.910
and n randomly from your training set
 

00:09:30.910 --> 00:09:34.170
and n randomly from your training set
subject to a and P being the same person

00:09:34.170 --> 00:09:34.180
subject to a and P being the same person
 

00:09:34.180 --> 00:09:36.540
subject to a and P being the same person
and in n being different persons one of

00:09:36.540 --> 00:09:36.550
and in n being different persons one of
 

00:09:36.550 --> 00:09:38.730
and in n being different persons one of
the problems is that if you choose them

00:09:38.730 --> 00:09:38.740
the problems is that if you choose them
 

00:09:38.740 --> 00:09:41.520
the problems is that if you choose them
sort of at random then this constraint

00:09:41.520 --> 00:09:41.530
sort of at random then this constraint
 

00:09:41.530 --> 00:09:45.180
sort of at random then this constraint
is very easy to satisfy because given

00:09:45.180 --> 00:09:45.190
is very easy to satisfy because given
 

00:09:45.190 --> 00:09:48.020
is very easy to satisfy because given
two randomly chosen pictures of people

00:09:48.020 --> 00:09:48.030
two randomly chosen pictures of people
 

00:09:48.030 --> 00:09:51.330
two randomly chosen pictures of people
chances are a and n are much different

00:09:51.330 --> 00:09:51.340
chances are a and n are much different
 

00:09:51.340 --> 00:09:54.480
chances are a and n are much different
than a and P well and I hope you still

00:09:54.480 --> 00:09:54.490
than a and P well and I hope you still
 

00:09:54.490 --> 00:09:57.860
than a and P well and I hope you still
recognize this notation does D AP was

00:09:57.860 --> 00:09:57.870
recognize this notation does D AP was
 

00:09:57.870 --> 00:10:01.260
recognize this notation does D AP was
what we have written on the last few

00:10:01.260 --> 00:10:01.270
what we have written on the last few
 

00:10:01.270 --> 00:10:03.420
what we have written on the last few
slides as these encoding so this is just

00:10:03.420 --> 00:10:03.430
slides as these encoding so this is just
 

00:10:03.430 --> 00:10:07.530
slides as these encoding so this is just
equal to this squared norm distance

00:10:07.530 --> 00:10:07.540
equal to this squared norm distance
 

00:10:07.540 --> 00:10:09.870
equal to this squared norm distance
between the encoding is that we had on

00:10:09.870 --> 00:10:09.880
between the encoding is that we had on
 

00:10:09.880 --> 00:10:12.690
between the encoding is that we had on
the previous line but if a and n are two

00:10:12.690 --> 00:10:12.700
the previous line but if a and n are two
 

00:10:12.700 --> 00:10:14.820
the previous line but if a and n are two
randomly chosen different persons then

00:10:14.820 --> 00:10:14.830
randomly chosen different persons then
 

00:10:14.830 --> 00:10:16.440
randomly chosen different persons then
there's a very high chance that this

00:10:16.440 --> 00:10:16.450
there's a very high chance that this
 

00:10:16.450 --> 00:10:19.350
there's a very high chance that this
will be much bigger more than the margin

00:10:19.350 --> 00:10:19.360
will be much bigger more than the margin
 

00:10:19.360 --> 00:10:21.960
will be much bigger more than the margin
alpha then that term on the left and so

00:10:21.960 --> 00:10:21.970
alpha then that term on the left and so
 

00:10:21.970 --> 00:10:23.820
alpha then that term on the left and so
the neural network won't learn much from

00:10:23.820 --> 00:10:23.830
the neural network won't learn much from
 

00:10:23.830 --> 00:10:25.890
the neural network won't learn much from
it so to construct your training set

00:10:25.890 --> 00:10:25.900
it so to construct your training set
 

00:10:25.900 --> 00:10:27.450
it so to construct your training set
what you want to do is to choose

00:10:27.450 --> 00:10:27.460
what you want to do is to choose
 

00:10:27.460 --> 00:10:30.120
what you want to do is to choose
triplets a P and n that are hard to

00:10:30.120 --> 00:10:30.130
triplets a P and n that are hard to
 

00:10:30.130 --> 00:10:32.670
triplets a P and n that are hard to
train on so in particular what you want

00:10:32.670 --> 00:10:32.680
train on so in particular what you want
 

00:10:32.680 --> 00:10:35.900
train on so in particular what you want
is for all triplets that this constraint

00:10:35.900 --> 00:10:35.910
is for all triplets that this constraint
 

00:10:35.910 --> 00:10:38.790
is for all triplets that this constraint
be satisfied

00:10:38.790 --> 00:10:38.800
be satisfied
 

00:10:38.800 --> 00:10:42.150
be satisfied
so a triplet that is hard would be of

00:10:42.150 --> 00:10:42.160
so a triplet that is hard would be of
 

00:10:42.160 --> 00:10:46.019
so a triplet that is hard would be of
you choose values for a P and n so that

00:10:46.019 --> 00:10:46.029
you choose values for a P and n so that
 

00:10:46.029 --> 00:10:50.660
you choose values for a P and n so that
maybe D AP is actually quite close to D

00:10:50.660 --> 00:10:50.670
maybe D AP is actually quite close to D
 

00:10:50.670 --> 00:10:54.479
maybe D AP is actually quite close to D
am so in that case the learning

00:10:54.479 --> 00:10:54.489
am so in that case the learning
 

00:10:54.489 --> 00:10:57.179
am so in that case the learning
algorithm has to try extra hard to tick

00:10:57.179 --> 00:10:57.189
algorithm has to try extra hard to tick
 

00:10:57.189 --> 00:10:59.429
algorithm has to try extra hard to tick
this thing on the right and try to push

00:10:59.429 --> 00:10:59.439
this thing on the right and try to push
 

00:10:59.439 --> 00:11:01.289
this thing on the right and try to push
it up or take this thing on the left and

00:11:01.289 --> 00:11:01.299
it up or take this thing on the left and
 

00:11:01.299 --> 00:11:03.840
it up or take this thing on the left and
try to push it down too so that there is

00:11:03.840 --> 00:11:03.850
try to push it down too so that there is
 

00:11:03.850 --> 00:11:06.780
try to push it down too so that there is
at least a margin of alpha between the

00:11:06.780 --> 00:11:06.790
at least a margin of alpha between the
 

00:11:06.790 --> 00:11:09.030
at least a margin of alpha between the
left side and the right side and the

00:11:09.030 --> 00:11:09.040
left side and the right side and the
 

00:11:09.040 --> 00:11:11.220
left side and the right side and the
effect of choosing these triplets is

00:11:11.220 --> 00:11:11.230
effect of choosing these triplets is
 

00:11:11.230 --> 00:11:13.619
effect of choosing these triplets is
that it increases the computational

00:11:13.619 --> 00:11:13.629
that it increases the computational
 

00:11:13.629 --> 00:11:16.559
that it increases the computational
efficiency of your learning algorithm if

00:11:16.559 --> 00:11:16.569
efficiency of your learning algorithm if
 

00:11:16.569 --> 00:11:18.809
efficiency of your learning algorithm if
you choose the triplets randomly then

00:11:18.809 --> 00:11:18.819
you choose the triplets randomly then
 

00:11:18.819 --> 00:11:20.489
you choose the triplets randomly then
too many triplets would be really easy

00:11:20.489 --> 00:11:20.499
too many triplets would be really easy
 

00:11:20.499 --> 00:11:22.949
too many triplets would be really easy
and so gradient descent won't do

00:11:22.949 --> 00:11:22.959
and so gradient descent won't do
 

00:11:22.959 --> 00:11:24.539
and so gradient descent won't do
anything because you knew Network will

00:11:24.539 --> 00:11:24.549
anything because you knew Network will
 

00:11:24.549 --> 00:11:26.729
anything because you knew Network will
just get them right pretty much all the

00:11:26.729 --> 00:11:26.739
just get them right pretty much all the
 

00:11:26.739 --> 00:11:28.769
just get them right pretty much all the
time and is only by choosing hard

00:11:28.769 --> 00:11:28.779
time and is only by choosing hard
 

00:11:28.779 --> 00:11:30.960
time and is only by choosing hard
triplets that the gradient descent

00:11:30.960 --> 00:11:30.970
triplets that the gradient descent
 

00:11:30.970 --> 00:11:34.199
triplets that the gradient descent
procedure has to do some work to try to

00:11:34.199 --> 00:11:34.209
procedure has to do some work to try to
 

00:11:34.209 --> 00:11:37.079
procedure has to do some work to try to
push these quantities further away from

00:11:37.079 --> 00:11:37.089
push these quantities further away from
 

00:11:37.089 --> 00:11:39.689
push these quantities further away from
those quantities and if it interested

00:11:39.689 --> 00:11:39.699
those quantities and if it interested
 

00:11:39.699 --> 00:11:43.579
those quantities and if it interested
the details are presented in this paper

00:11:43.579 --> 00:11:43.589
the details are presented in this paper
 

00:11:43.589 --> 00:11:47.220
the details are presented in this paper
by Florence chef Dimitri colony chenko

00:11:47.220 --> 00:11:47.230
by Florence chef Dimitri colony chenko
 

00:11:47.230 --> 00:11:49.980
by Florence chef Dimitri colony chenko
and James Hoban where they have a system

00:11:49.980 --> 00:11:49.990
and James Hoban where they have a system
 

00:11:49.990 --> 00:11:52.289
and James Hoban where they have a system
called phase net which is where a lot of

00:11:52.289 --> 00:11:52.299
called phase net which is where a lot of
 

00:11:52.299 --> 00:11:54.269
called phase net which is where a lot of
the ideas are presenting in this video

00:11:54.269 --> 00:11:54.279
the ideas are presenting in this video
 

00:11:54.279 --> 00:11:57.179
the ideas are presenting in this video
had come from by the way this is also a

00:11:57.179 --> 00:11:57.189
had come from by the way this is also a
 

00:11:57.189 --> 00:11:59.999
had come from by the way this is also a
fun fact about how algorithms are often

00:11:59.999 --> 00:12:00.009
fun fact about how algorithms are often
 

00:12:00.009 --> 00:12:02.309
fun fact about how algorithms are often
named in the deep learning world which

00:12:02.309 --> 00:12:02.319
named in the deep learning world which
 

00:12:02.319 --> 00:12:04.889
named in the deep learning world which
is if you work on a certain domain let

00:12:04.889 --> 00:12:04.899
is if you work on a certain domain let
 

00:12:04.899 --> 00:12:06.569
is if you work on a certain domain let
me call that blank you often have a

00:12:06.569 --> 00:12:06.579
me call that blank you often have a
 

00:12:06.579 --> 00:12:10.980
me call that blank you often have a
system called blank net or deep blank so

00:12:10.980 --> 00:12:10.990
system called blank net or deep blank so
 

00:12:10.990 --> 00:12:12.090
system called blank net or deep blank so
we've been talking about face

00:12:12.090 --> 00:12:12.100
we've been talking about face
 

00:12:12.100 --> 00:12:15.179
we've been talking about face
recognition so this paper is called face

00:12:15.179 --> 00:12:15.189
recognition so this paper is called face
 

00:12:15.189 --> 00:12:17.939
recognition so this paper is called face
net and in the last video you just saw

00:12:17.939 --> 00:12:17.949
net and in the last video you just saw
 

00:12:17.949 --> 00:12:21.840
net and in the last video you just saw
deep face but this idea of a blank net

00:12:21.840 --> 00:12:21.850
deep face but this idea of a blank net
 

00:12:21.850 --> 00:12:24.749
deep face but this idea of a blank net
or deep blank is a very popular way of

00:12:24.749 --> 00:12:24.759
or deep blank is a very popular way of
 

00:12:24.759 --> 00:12:27.210
or deep blank is a very popular way of
naming algorithms in the deep learning

00:12:27.210 --> 00:12:27.220
naming algorithms in the deep learning
 

00:12:27.220 --> 00:12:30.299
naming algorithms in the deep learning
world and you should feel free to take a

00:12:30.299 --> 00:12:30.309
world and you should feel free to take a
 

00:12:30.309 --> 00:12:32.069
world and you should feel free to take a
look at that paper if you want to learn

00:12:32.069 --> 00:12:32.079
look at that paper if you want to learn
 

00:12:32.079 --> 00:12:34.619
look at that paper if you want to learn
some of these other details for speeding

00:12:34.619 --> 00:12:34.629
some of these other details for speeding
 

00:12:34.629 --> 00:12:36.689
some of these other details for speeding
up your algorithm by choosing the most

00:12:36.689 --> 00:12:36.699
up your algorithm by choosing the most
 

00:12:36.699 --> 00:12:39.329
up your algorithm by choosing the most
useful triplets to train on it is a nice

00:12:39.329 --> 00:12:39.339
useful triplets to train on it is a nice
 

00:12:39.339 --> 00:12:42.210
useful triplets to train on it is a nice
paper so just a wrap up to train on

00:12:42.210 --> 00:12:42.220
paper so just a wrap up to train on
 

00:12:42.220 --> 00:12:44.369
paper so just a wrap up to train on
triplet loss you need to take your

00:12:44.369 --> 00:12:44.379
triplet loss you need to take your
 

00:12:44.379 --> 00:12:46.229
triplet loss you need to take your
training set and map it to a lot of

00:12:46.229 --> 00:12:46.239
training set and map it to a lot of
 

00:12:46.239 --> 00:12:49.259
training set and map it to a lot of
triples so here is a triple with an

00:12:49.259 --> 00:12:49.269
triples so here is a triple with an
 

00:12:49.269 --> 00:12:51.090
triples so here is a triple with an
anchor and a positive both are the same

00:12:51.090 --> 00:12:51.100
anchor and a positive both are the same
 

00:12:51.100 --> 00:12:51.610
anchor and a positive both are the same
pair

00:12:51.610 --> 00:12:51.620
pair
 

00:12:51.620 --> 00:12:54.550
pair
negative of a different person here's

00:12:54.550 --> 00:12:54.560
negative of a different person here's
 

00:12:54.560 --> 00:12:57.490
negative of a different person here's
another one where the anchor and

00:12:57.490 --> 00:12:57.500
another one where the anchor and
 

00:12:57.500 --> 00:12:59.260
another one where the anchor and
positive are the same person

00:12:59.260 --> 00:12:59.270
positive are the same person
 

00:12:59.270 --> 00:13:01.810
positive are the same person
but the anchor and negative are verdant

00:13:01.810 --> 00:13:01.820
but the anchor and negative are verdant
 

00:13:01.820 --> 00:13:05.290
but the anchor and negative are verdant
persons and so on and what you do having

00:13:05.290 --> 00:13:05.300
persons and so on and what you do having
 

00:13:05.300 --> 00:13:07.480
persons and so on and what you do having
to find this training set of anchor

00:13:07.480 --> 00:13:07.490
to find this training set of anchor
 

00:13:07.490 --> 00:13:09.850
to find this training set of anchor
positive and negative triples is used

00:13:09.850 --> 00:13:09.860
positive and negative triples is used
 

00:13:09.860 --> 00:13:12.730
positive and negative triples is used
gradient descent to try to minimize the

00:13:12.730 --> 00:13:12.740
gradient descent to try to minimize the
 

00:13:12.740 --> 00:13:16.030
gradient descent to try to minimize the
cost function J we defined on an earlier

00:13:16.030 --> 00:13:16.040
cost function J we defined on an earlier
 

00:13:16.040 --> 00:13:18.370
cost function J we defined on an earlier
slide and that will have the effect of

00:13:18.370 --> 00:13:18.380
slide and that will have the effect of
 

00:13:18.380 --> 00:13:20.890
slide and that will have the effect of
back propagating to all the parameters

00:13:20.890 --> 00:13:20.900
back propagating to all the parameters
 

00:13:20.900 --> 00:13:23.140
back propagating to all the parameters
of the neural network in order to learn

00:13:23.140 --> 00:13:23.150
of the neural network in order to learn
 

00:13:23.150 --> 00:13:28.930
of the neural network in order to learn
an encoding so that D of two images will

00:13:28.930 --> 00:13:28.940
an encoding so that D of two images will
 

00:13:28.940 --> 00:13:32.290
an encoding so that D of two images will
be small when these two images are of

00:13:32.290 --> 00:13:32.300
be small when these two images are of
 

00:13:32.300 --> 00:13:36.040
be small when these two images are of
the same person and they'll be large

00:13:36.040 --> 00:13:36.050
the same person and they'll be large
 

00:13:36.050 --> 00:13:39.160
the same person and they'll be large
when these are two images of different

00:13:39.160 --> 00:13:39.170
when these are two images of different
 

00:13:39.170 --> 00:13:42.070
when these are two images of different
persons so that's it for the triplet

00:13:42.070 --> 00:13:42.080
persons so that's it for the triplet
 

00:13:42.080 --> 00:13:44.050
persons so that's it for the triplet
loss and how you can train a neural

00:13:44.050 --> 00:13:44.060
loss and how you can train a neural
 

00:13:44.060 --> 00:13:46.390
loss and how you can train a neural
network for learning and encoding for

00:13:46.390 --> 00:13:46.400
network for learning and encoding for
 

00:13:46.400 --> 00:13:49.540
network for learning and encoding for
face recognition now it turns out that

00:13:49.540 --> 00:13:49.550
face recognition now it turns out that
 

00:13:49.550 --> 00:13:51.790
face recognition now it turns out that
commercial face recognition systems are

00:13:51.790 --> 00:13:51.800
commercial face recognition systems are
 

00:13:51.800 --> 00:13:53.950
commercial face recognition systems are
trained on fairly large data sets at

00:13:53.950 --> 00:13:53.960
trained on fairly large data sets at
 

00:13:53.960 --> 00:13:55.840
trained on fairly large data sets at
this point often north of a million

00:13:55.840 --> 00:13:55.850
this point often north of a million
 

00:13:55.850 --> 00:13:58.720
this point often north of a million
images sometimes not infrequently north

00:13:58.720 --> 00:13:58.730
images sometimes not infrequently north
 

00:13:58.730 --> 00:14:00.940
images sometimes not infrequently north
of ten million images and there's some

00:14:00.940 --> 00:14:00.950
of ten million images and there's some
 

00:14:00.950 --> 00:14:03.280
of ten million images and there's some
commercial companies talking about using

00:14:03.280 --> 00:14:03.290
commercial companies talking about using
 

00:14:03.290 --> 00:14:05.530
commercial companies talking about using
over a hundred million images so these

00:14:05.530 --> 00:14:05.540
over a hundred million images so these
 

00:14:05.540 --> 00:14:08.500
over a hundred million images so these
are very large data sets by moderns that

00:14:08.500 --> 00:14:08.510
are very large data sets by moderns that
 

00:14:08.510 --> 00:14:11.230
are very large data sets by moderns that
even buy so that's it for the triplet

00:14:11.230 --> 00:14:11.240
even buy so that's it for the triplet
 

00:14:11.240 --> 00:14:13.329
even buy so that's it for the triplet
loss and how you can use it to train a

00:14:13.329 --> 00:14:13.339
loss and how you can use it to train a
 

00:14:13.339 --> 00:14:16.090
loss and how you can use it to train a
neural network to output a good encoding

00:14:16.090 --> 00:14:16.100
neural network to output a good encoding
 

00:14:16.100 --> 00:14:19.030
neural network to output a good encoding
for face recognition now it turns out

00:14:19.030 --> 00:14:19.040
for face recognition now it turns out
 

00:14:19.040 --> 00:14:21.310
for face recognition now it turns out
that today's face recognition systems

00:14:21.310 --> 00:14:21.320
that today's face recognition systems
 

00:14:21.320 --> 00:14:23.290
that today's face recognition systems
especially the large-scale commercial

00:14:23.290 --> 00:14:23.300
especially the large-scale commercial
 

00:14:23.300 --> 00:14:25.510
especially the large-scale commercial
face recognition systems are trained on

00:14:25.510 --> 00:14:25.520
face recognition systems are trained on
 

00:14:25.520 --> 00:14:28.360
face recognition systems are trained on
very large data sets david says north of

00:14:28.360 --> 00:14:28.370
very large data sets david says north of
 

00:14:28.370 --> 00:14:30.579
very large data sets david says north of
a million images is not uncommon some

00:14:30.579 --> 00:14:30.589
a million images is not uncommon some
 

00:14:30.589 --> 00:14:32.320
a million images is not uncommon some
companies are using north of ten million

00:14:32.320 --> 00:14:32.330
companies are using north of ten million
 

00:14:32.330 --> 00:14:34.660
companies are using north of ten million
images and some companies have north of

00:14:34.660 --> 00:14:34.670
images and some companies have north of
 

00:14:34.670 --> 00:14:36.670
images and some companies have north of
a hundred million images with which to

00:14:36.670 --> 00:14:36.680
a hundred million images with which to
 

00:14:36.680 --> 00:14:38.740
a hundred million images with which to
try to train these systems so these are

00:14:38.740 --> 00:14:38.750
try to train these systems so these are
 

00:14:38.750 --> 00:14:40.840
try to train these systems so these are
very large data sets even by modern

00:14:40.840 --> 00:14:40.850
very large data sets even by modern
 

00:14:40.850 --> 00:14:43.480
very large data sets even by modern
standards these data set asses are not

00:14:43.480 --> 00:14:43.490
standards these data set asses are not
 

00:14:43.490 --> 00:14:46.510
standards these data set asses are not
easy to acquire fortunately some of

00:14:46.510 --> 00:14:46.520
easy to acquire fortunately some of
 

00:14:46.520 --> 00:14:49.000
easy to acquire fortunately some of
these companies have trained these large

00:14:49.000 --> 00:14:49.010
these companies have trained these large
 

00:14:49.010 --> 00:14:52.090
these companies have trained these large
networks and posted parameters online so

00:14:52.090 --> 00:14:52.100
networks and posted parameters online so
 

00:14:52.100 --> 00:14:53.620
networks and posted parameters online so
rather than trying to train one of these

00:14:53.620 --> 00:14:53.630
rather than trying to train one of these
 

00:14:53.630 --> 00:14:56.110
rather than trying to train one of these
networks from scratch this is one domain

00:14:56.110 --> 00:14:56.120
networks from scratch this is one domain
 

00:14:56.120 --> 00:14:58.660
networks from scratch this is one domain
where because of the sheer data volume

00:14:58.660 --> 00:14:58.670
where because of the sheer data volume
 

00:14:58.670 --> 00:15:01.420
where because of the sheer data volume
sizes this is one domain where often it

00:15:01.420 --> 00:15:01.430
sizes this is one domain where often it
 

00:15:01.430 --> 00:15:03.010
sizes this is one domain where often it
might be useful for you to download

00:15:03.010 --> 00:15:03.020
might be useful for you to download
 

00:15:03.020 --> 00:15:05.079
might be useful for you to download
someone else's free training model

00:15:05.079 --> 00:15:05.089
someone else's free training model
 

00:15:05.089 --> 00:15:06.699
someone else's free training model
rather than to everything from scratch

00:15:06.699 --> 00:15:06.709
rather than to everything from scratch
 

00:15:06.709 --> 00:15:08.829
rather than to everything from scratch
yourself but even if you do download

00:15:08.829 --> 00:15:08.839
yourself but even if you do download
 

00:15:08.839 --> 00:15:10.569
yourself but even if you do download
someone else's pre-trained model I think

00:15:10.569 --> 00:15:10.579
someone else's pre-trained model I think
 

00:15:10.579 --> 00:15:12.819
someone else's pre-trained model I think
it's so useful to know how these

00:15:12.819 --> 00:15:12.829
it's so useful to know how these
 

00:15:12.829 --> 00:15:15.129
it's so useful to know how these
algorithms were trained in case you need

00:15:15.129 --> 00:15:15.139
algorithms were trained in case you need
 

00:15:15.139 --> 00:15:16.989
algorithms were trained in case you need
to apply these ideas from scratch

00:15:16.989 --> 00:15:16.999
to apply these ideas from scratch
 

00:15:16.999 --> 00:15:19.989
to apply these ideas from scratch
yourself for some application so that's

00:15:19.989 --> 00:15:19.999
yourself for some application so that's
 

00:15:19.999 --> 00:15:22.269
yourself for some application so that's
it for the triplet loss in the next

00:15:22.269 --> 00:15:22.279
it for the triplet loss in the next
 

00:15:22.279 --> 00:15:24.279
it for the triplet loss in the next
video I want to show you also some other

00:15:24.279 --> 00:15:24.289
video I want to show you also some other
 

00:15:24.289 --> 00:15:27.099
video I want to show you also some other
variations on siamese networks and how

00:15:27.099 --> 00:15:27.109
variations on siamese networks and how
 

00:15:27.109 --> 00:15:29.139
variations on siamese networks and how
to train G systems let's go onto the

00:15:29.139 --> 00:15:29.149
to train G systems let's go onto the
 

00:15:29.149 --> 00:15:31.659
to train G systems let's go onto the
next video

