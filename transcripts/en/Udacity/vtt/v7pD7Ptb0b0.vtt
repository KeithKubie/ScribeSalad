WEBVTT
Kind: captions
Language: en

00:00:00.650 --> 00:00:06.190
Second kind of middleware is MOM, okay, Message-Oriented Middleware. Here we

00:00:06.190 --> 00:00:11.830
are thinking about asynchronous message passing. Each of the pieces acts more or

00:00:11.830 --> 00:00:16.500
less autonomally, autonomously sending out messages when it needs to.

00:00:16.500 --> 00:00:21.370
These messages are queued up, so, we have some degree of fault tolerance because

00:00:21.370 --> 00:00:26.600
if a piece goes down the informa, the messages it has to deal with are still

00:00:26.600 --> 00:00:29.245
in the queue. And when it comes back up it can peel them off the queue.

00:00:29.245 --> 00:00:34.230
Message-Oriented Middleware is not particularly transparent

00:00:34.230 --> 00:00:39.610
because the clients must implement the coordination embedded in these messages.

00:00:39.610 --> 00:00:43.400
So messages not only transmit data, they also transmit information about

00:00:44.750 --> 00:00:50.730
about state. Some of the products that are involved here include IBM's MQSeries,

00:00:50.730 --> 00:00:57.240
SUN's Java Message Queues and and some of Amazon Queuing Solutions.

