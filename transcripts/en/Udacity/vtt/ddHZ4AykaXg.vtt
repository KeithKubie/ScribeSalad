WEBVTT
Kind: captions
Language: en

00:00:00.100 --> 00:00:03.200
The true power of UI
router is in nested views.

00:00:03.200 --> 00:00:05.980
Let's add a nested view
to the items detail page.

00:00:05.980 --> 00:00:09.900
Let's add a state to see an item's
reviews and one for its nutrition facts.

00:00:09.900 --> 00:00:11.030
To add a nested view,

00:00:11.030 --> 00:00:15.020
we need the same name as the main view
that this one will be nested inside.

00:00:15.020 --> 00:00:16.040
So that's item.

00:00:16.040 --> 00:00:18.817
Then we need a dot and
then it's the nested views name.

00:00:21.265 --> 00:00:23.610
We need to generate both
of these templates.

00:00:23.610 --> 00:00:26.790
But we don't need controllers because
they'll just inherit the item's data

00:00:26.790 --> 00:00:28.470
from the parent route scope.

00:00:28.470 --> 00:00:31.000
Here's what we have for the nutrition
template and over here is the one for

00:00:31.000 --> 00:00:31.880
the reviews.

00:00:31.880 --> 00:00:35.070
See that for the reviews template uses
an entry repeat directed to loop through

00:00:35.070 --> 00:00:36.360
all the reviews.

00:00:36.360 --> 00:00:39.050
Lastly, I added some reviews
to the item JSON file so

00:00:39.050 --> 00:00:40.328
that they'll have something to display.

00:00:40.328 --> 00:00:45.640
So UI router knows of the nested
item and the templates to use.

00:00:45.640 --> 00:00:48.780
We need to tell UI router where we
want these views to appear though.

00:00:48.780 --> 00:00:51.050
We need the UI view directive again.

00:00:51.050 --> 00:00:53.520
But since we want them to
display on an items page,

00:00:53.520 --> 00:00:56.000
we need to add it to our item.html.

00:00:56.000 --> 00:00:57.920
Finally, we need to create a link for
each view,

00:00:57.920 --> 00:01:00.240
and we now have nested routing.

00:01:00.240 --> 00:01:03.720
Nested views in at management can
be very complex and complicated.

00:01:03.720 --> 00:01:05.660
UI Router makes this
incredibly easy though.

