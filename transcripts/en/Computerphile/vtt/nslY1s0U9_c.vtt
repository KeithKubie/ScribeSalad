WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.600
As the Digital equivalent of the

00:00:04.980 --> 00:00:07.740
dilemma of the chicken and the egg.

00:00:08.000 --> 00:00:10.000
Which came first? Okay.

00:00:10.460 --> 00:00:13.160
Alright. And I was as confused as that.

00:00:13.160 --> 00:00:15.160
The reason its called bootstrapping

00:00:15.380 --> 00:00:21.680
Is that it comes from an old tale of literally pulling yourself up by your boot straps.

00:00:21.680 --> 00:00:26.460
So that way in which you would actually get something started is that you would pull yourself up with your bootstraps.

00:00:26.460 --> 00:00:29.720
and that bootstrapping sequence is the thing

00:00:29.720 --> 00:00:31.720
that starts that process.

00:00:34.100 --> 00:00:36.800
One of the hardest bits of doing Computing

00:00:37.520 --> 00:00:41.160
is that you ultimately have to recognise, that there comes a moment

00:00:41.160 --> 00:00:43.160
when you can't understand it all.

00:00:43.160 --> 00:00:46.660
You can't understand the thing that you are building

00:00:46.660 --> 00:00:50.720
is so complex that it doesn't all fit in your head.

00:00:51.100 --> 00:00:51.620
Okay?

00:00:52.220 --> 00:00:55.000
Thats the hardest and most difficult moment I face

00:00:55.000 --> 00:00:59.600
I've ever faced. And it's the bit that everybody kind of doing Computing, Struggles with.

00:00:59.600 --> 00:01:03.400
It happened to me when I learn't about Compilers.

00:01:03.400 --> 00:01:09.700
Now Compilers are the things which take the programming languages that we have

00:01:09.780 --> 00:01:18.020
and translate that programming language, into the sequence of instructions that run, at the chip, on that computer.

00:01:18.280 --> 00:01:19.040
Okay?

00:01:19.080 --> 00:01:22.400
So they go all the way from a high level programming language like Java

00:01:22.400 --> 00:01:25.380
down to the machine codes that you might be running on.

00:01:26.220 --> 00:01:31.400
Here's what it kind of gets difficult on this one. You're gonna have to bear with me on this one.

00:01:32.080 --> 00:01:41.800
And as the digital equivalent of the dilemma of the chicken and the egg. Which came first?

00:01:41.800 --> 00:01:42.520
Okay

00:01:42.520 --> 00:01:43.320
All right

00:01:43.460 --> 00:01:45.460
And as I was confuse in that. Okay.

00:01:45.560 --> 00:01:52.840
And so you will write something in a language, say for example,

00:01:52.840 --> 00:01:56.780
You write something in one of the language, let it be java

00:01:56.780 --> 00:01:58.900
And you write things in java

00:01:58.900 --> 00:02:01.040
And it has a particular style of writting

00:02:01.040 --> 00:02:02.560
"if", you know, if statements

00:02:02.560 --> 00:02:03.580
a whole set of things

00:02:03.580 --> 00:02:04.540
but how do you start?

00:02:04.540 --> 00:02:06.940
where do the first language come from?

00:02:06.940 --> 00:02:08.840
and how do you get there

00:02:08.840 --> 00:02:11.260
it is that moment of complexity

00:02:11.260 --> 00:02:12.840
that almost feels like magic

00:02:12.840 --> 00:02:15.200
ok, because it works

00:02:15.200 --> 00:02:18.040
And it teach you where to figure why it works

00:02:18.040 --> 00:02:20.220
And it feels quite allusive

00:02:20.220 --> 00:02:22.220
Bootstraping is

00:02:22.240 --> 00:02:24.220
is a means by wich

00:02:24.220 --> 00:02:26.220
we can allow

00:02:26.220 --> 00:02:28.220
our software systems to exist

00:02:28.220 --> 00:02:30.980
independent of the machines that they're running on.

00:02:31.040 --> 00:02:34.960
Without things like bootstrap and without compilers

00:02:34.960 --> 00:02:38.400
You'd essentially have to rewrite programs

00:02:38.400 --> 00:02:40.400
and replicate

00:02:40.400 --> 00:02:44.220
all the instructions for every machine  that you'd ever built; Ok,

00:02:44.760 --> 00:02:46.600
or every family of machines.

00:02:46.600 --> 00:02:50.320
so if you, if everything stayed at the level

00:02:50.320 --> 00:02:52.600
of ones and zeros and flicking switches

00:02:52.600 --> 00:02:54.600
you'd have to have a different sequence

00:02:54.600 --> 00:02:55.940
of flicking switches

00:02:55.940 --> 00:02:57.940
for every machine that exists in the world

00:02:57.940 --> 00:03:01.580
and that gets tiresome at best

00:03:01.580 --> 00:03:05.980
but virtually impossible given the complexity and the size we've got.

00:03:05.980 --> 00:03:07.980
 

