WEBVTT
Kind: captions
Language: en

00:00:04.033 --> 00:00:05.400
Hi, I'm Mano.

00:00:05.400 --> 00:00:07.734
I'm gonna be speaking
with Keith and Jeff

00:00:07.734 --> 00:00:10.400
about building
scalable GeoWeb applications

00:00:10.400 --> 00:00:12.067
at Google I/O.

00:00:12.067 --> 00:00:14.734
Over the last five years,
there's been an explosion

00:00:14.734 --> 00:00:17.434
of Web-based
geographic applications,

00:00:17.434 --> 00:00:19.567
which we often call the GeoWeb.

00:00:19.567 --> 00:00:22.734
The growth of these applications
has been driven by such tools

00:00:22.734 --> 00:00:25.234
as Google Maps API
and Google Earth.

00:00:25.234 --> 00:00:27.234
These tools take care of the
front end of the deployment--

00:00:27.234 --> 00:00:30.067
the complex job of putting
the right map tiles

00:00:30.067 --> 00:00:31.567
in front of the right people.

00:00:31.567 --> 00:00:36.734
However, developers
who have a rich spatial data set

00:00:36.734 --> 00:00:40.567
have to build the back ends for
these applications themselves.

00:00:40.567 --> 00:00:42.067
When these applications
scale up

00:00:42.067 --> 00:00:44.234
with tons of data
and lots of users,

00:00:44.234 --> 00:00:47.234
Geo Developers have to become
Web server architects,

00:00:47.234 --> 00:00:48.901
sharding their databases,

00:00:48.901 --> 00:00:50.400
balancing the loads
between servers,

00:00:50.400 --> 00:00:53.400
and spending a fair amount
of money, and lots of time,

00:00:53.400 --> 00:00:56.234
just to have their applications
continue to run.

00:00:56.234 --> 00:00:57.901
In this talk, we'll talk about

00:00:57.901 --> 00:00:59.901
what are the problems
of scalability,

00:00:59.901 --> 00:01:01.234
what are some
of the approaches,

00:01:01.234 --> 00:01:04.067
and what Google offers
in a way of data hosting

00:01:04.067 --> 00:01:06.234
that is useful
for spatial data.

00:01:06.234 --> 00:01:08.634
Specifically,
we'll talk about Google Base,

00:01:08.634 --> 00:01:09.868
Google App Engine,

00:01:09.868 --> 00:01:12.734
and the really exciting
new Google Maps data API,

00:01:12.734 --> 00:01:16.567
which uses the standard
Google Data API set

00:01:16.567 --> 00:01:18.133
based on Atom Pub.

00:01:18.133 --> 00:01:20.400
So here's the basic code.

00:01:20.400 --> 00:01:21.767
This is Atom Pub.

00:01:21.767 --> 00:01:25.234
Anybody who's familiar with it
will recognize this.

00:01:25.234 --> 00:01:27.400
This is posting an entry

00:01:27.400 --> 00:01:30.234
to edit a link
of an existing feature

00:01:30.234 --> 00:01:32.067
in Google Maps.

00:01:32.067 --> 00:01:34.400
You'll see here
you've got your atom entry.

00:01:34.400 --> 00:01:36.234
You've got title and content.

00:01:36.234 --> 00:01:38.400
These are all familiar to you
if you've used Atom Pub

00:01:38.400 --> 00:01:41.734
or any of the Google Data APIs
which are based on Atom Pub.

00:01:41.734 --> 00:01:43.067
Then you'll see "Placemark,"

00:01:43.067 --> 00:01:46.901
and that's
in the KML name space.

00:01:46.901 --> 00:01:48.901
Maps Data API reuses KML.

00:01:48.901 --> 00:01:50.234
It's really exciting.

00:01:50.234 --> 00:01:52.734
A lot of people
have been talking about this.

00:01:52.734 --> 00:01:55.567
How do you integrate,
you know, restful applications

00:01:55.567 --> 00:01:57.734
with KML?

00:01:57.734 --> 00:01:59.300
And here we are.

00:01:59.300 --> 00:02:02.234
"Description, style, point"--

00:02:02.234 --> 00:02:04.567
These are just standard KML.

00:02:04.567 --> 00:02:06.467
You're just posting
a Placemark.

00:02:06.467 --> 00:02:08.367
And that's it.
That's all you have to do.

00:02:08.367 --> 00:02:11.901
So we're gonna go over this
and a lot more during the talk,

00:02:11.901 --> 00:02:13.400
and I really look forward
to seeing you.

00:02:13.400 --> 00:02:15.000
Hope you can make it.

