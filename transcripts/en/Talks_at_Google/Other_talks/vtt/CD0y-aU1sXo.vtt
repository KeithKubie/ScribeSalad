WEBVTT
Kind: captions
Language: en

00:00:01.264 --> 00:00:02.514
ERIC BRECHNER: Thank you, sir.

00:00:02.514 --> 00:00:04.850
[APPLAUSE]

00:00:04.850 --> 00:00:10.410
We have a little video to
that the folks at my publisher

00:00:10.410 --> 00:00:11.470
asked me to do.

00:00:11.470 --> 00:00:14.112
But they let me do it
anyway I wanted, so I enjoy.

00:00:14.112 --> 00:00:16.070
I'll give you a little
introduction to the book

00:00:16.070 --> 00:00:17.412
and then we'll get started.

00:00:17.412 --> 00:00:20.646
[VIDEO PLAYBACK]

00:00:22.500 --> 00:00:23.510
-I'm Eric Brechner.

00:00:23.510 --> 00:00:25.840
I'm an experienced developer
at an established software

00:00:25.840 --> 00:00:26.790
company.

00:00:26.790 --> 00:00:31.040
My favorite C programming book
is thin, clear and complete,

00:00:31.040 --> 00:00:32.610
with plenty of examples.

00:00:32.610 --> 00:00:35.250
I didn't think life
could get any better.

00:00:35.250 --> 00:00:37.010
Until I found Kanban.

00:00:37.010 --> 00:00:39.550
After I found
Kanban, I joined Xbox

00:00:39.550 --> 00:00:43.290
and started shipping every day,
every week, and every month.

00:00:43.290 --> 00:00:45.520
With Kanban, there are
no milestones, sprints

00:00:45.520 --> 00:00:46.540
or overhead.

00:00:46.540 --> 00:00:50.600
Quality happens at every step
and you can ship every day.

00:00:50.600 --> 00:00:53.270
Kanban was built for
continuous delivery.

00:00:53.270 --> 00:00:57.810
I love Kanban so much that I
wrote a book about it, Agile

00:00:57.810 --> 00:00:59.700
Project Management with Kanban.

00:00:59.700 --> 00:01:04.550
It's thin, clear, and complete,
and with plenty of examples.

00:01:04.550 --> 00:01:07.360
There's even a quick start
guide, worksheets to fill out,

00:01:07.360 --> 00:01:09.860
checklist to follow,
and diagrams to ogle.

00:01:09.860 --> 00:01:12.550
Plus it covers planning
and estimation,

00:01:12.550 --> 00:01:14.740
working within
large orgs, adapting

00:01:14.740 --> 00:01:17.990
from traditional waterfall,
and evolving from Scrum.

00:01:17.990 --> 00:01:21.150
You'll love it, and your
team will love Kanban.

00:01:21.150 --> 00:01:23.260
Get it today from your
favorite book purveyor,

00:01:23.260 --> 00:01:25.980
and I'll throw in increased
productivity and quality,

00:01:25.980 --> 00:01:28.540
and decreased time
and cost for as long

00:01:28.540 --> 00:01:31.770
as you follow the easy
steps in these pages.

00:01:31.770 --> 00:01:34.310
Rejuvenate yourself and
your product development

00:01:34.310 --> 00:01:35.630
with Kanban.

00:01:35.630 --> 00:01:38.985
Get on board!

00:01:38.985 --> 00:01:40.440
[END PLAYBACK]

00:01:40.440 --> 00:01:43.190
ERIC BRECHNER: So,
a little fun there.

00:01:43.190 --> 00:01:44.575
I enjoyed that.

00:01:44.575 --> 00:01:46.870
A little bit about myself.

00:01:46.870 --> 00:01:48.520
I've been a
professional developer

00:01:48.520 --> 00:01:50.340
as [INAUDIBLE] mentioned.

00:01:50.340 --> 00:01:53.350
For a long time I've focused
on computer graphics,

00:01:53.350 --> 00:01:57.795
and then on data flow,
and then on image,

00:01:57.795 --> 00:01:59.670
you know, image editing
and things like that.

00:01:59.670 --> 00:02:01.169
I've done a lot of
different things.

00:02:01.169 --> 00:02:03.930
But the kind of the
side-- my side interest

00:02:03.930 --> 00:02:07.970
has always been on how
software development is done.

00:02:07.970 --> 00:02:11.590
If you ask my wife, I'm a little
OCD about how I do things.

00:02:11.590 --> 00:02:14.850
It's paid off professionally,
maybe a little annoying

00:02:14.850 --> 00:02:16.480
in my personal life.

00:02:16.480 --> 00:02:19.110
But nonetheless I've
just been fascinated

00:02:19.110 --> 00:02:22.130
by how work gets done, and
how to get the most out

00:02:22.130 --> 00:02:24.630
of every day and the
most out of my teams,

00:02:24.630 --> 00:02:26.980
now that I've been a development
manager for the better

00:02:26.980 --> 00:02:28.920
part of 15, 20 years now.

00:02:28.920 --> 00:02:33.450
So I-- since I manage my teams,
I get to tell them what to do,

00:02:33.450 --> 00:02:36.640
kind of-- we experiment a lot.

00:02:36.640 --> 00:02:38.430
So I've experimented
with just about

00:02:38.430 --> 00:02:40.570
every methodology
you could think of,

00:02:40.570 --> 00:02:44.530
everything from pair
programming to TSP

00:02:44.530 --> 00:02:48.910
to various forms of Agile
and test-driven development,

00:02:48.910 --> 00:02:50.350
obviously Scrum.

00:02:50.350 --> 00:02:52.350
Scrum was phenomenal.

00:02:52.350 --> 00:02:57.110
I used Scrum with my teams
for a good eight plus years.

00:02:57.110 --> 00:03:01.340
And then finally, I discovered
this thing called Kanban,

00:03:01.340 --> 00:03:04.450
and I've been using it with
my teams now for four years.

00:03:04.450 --> 00:03:10.840
And Kanban is just so
dramatically simpler,

00:03:10.840 --> 00:03:11.830
and yet better.

00:03:11.830 --> 00:03:16.970
It produces higher quality at a
much higher rate than anything

00:03:16.970 --> 00:03:19.350
else that I've ever used.

00:03:19.350 --> 00:03:21.375
I've just been captivated by it.

00:03:21.375 --> 00:03:24.237
It really is the first
time in my entire career--

00:03:24.237 --> 00:03:26.320
and I've been working since
professionally since I

00:03:26.320 --> 00:03:30.750
was 15 in software-- it's the
first time in my entire career

00:03:30.750 --> 00:03:34.330
that I feel like every
minute of the day

00:03:34.330 --> 00:03:37.370
that my team spends
working they're

00:03:37.370 --> 00:03:40.610
working on actual value
going into the product.

00:03:40.610 --> 00:03:44.070
They're not spending time
doing other things that

00:03:44.070 --> 00:03:47.185
contribute indirectly, but
really aren't that related.

00:03:47.185 --> 00:03:49.520
You know, having all these
extra meetings, and all

00:03:49.520 --> 00:03:52.760
these extra documentation,
and all this extra planning.

00:03:52.760 --> 00:03:55.610
It just doesn't
happen, they're just

00:03:55.610 --> 00:03:58.470
working on stuff for customers.

00:03:58.470 --> 00:04:02.070
And with Xbox, it's
a very, obviously,

00:04:02.070 --> 00:04:03.830
it's very consumer-facing.

00:04:03.830 --> 00:04:07.790
We ship to every
console every month.

00:04:07.790 --> 00:04:10.780
We ship online
multiple times a day.

00:04:10.780 --> 00:04:15.040
It's having that kind of
methodology at my disposal

00:04:15.040 --> 00:04:17.990
that has given my
team a real advantage.

00:04:17.990 --> 00:04:21.640
And I can do a lot
less-- excuse me--

00:04:21.640 --> 00:04:24.710
a lot more with a
lot fewer people.

00:04:24.710 --> 00:04:27.020
My team is an order
of magnitude smaller

00:04:27.020 --> 00:04:29.530
than the other teams that
do similar work to mine,

00:04:29.530 --> 00:04:33.370
and we produce a lot more with
a lot of higher quality, which

00:04:33.370 --> 00:04:35.100
helps me in my annual review.

00:04:35.100 --> 00:04:38.020
So life is good,
and it's so great

00:04:38.020 --> 00:04:40.540
that I finally decided I'm
going to go ahead and write

00:04:40.540 --> 00:04:43.000
a book about this, because
this is just too great.

00:04:43.000 --> 00:04:45.560
So that's what I'm going
to talk about today.

00:04:45.560 --> 00:04:46.600
Here's the book.

00:04:46.600 --> 00:04:48.030
We ordered some
but unfortunately

00:04:48.030 --> 00:04:50.000
they didn't arrive on time.

00:04:50.000 --> 00:04:51.490
But that's what it looks like.

00:04:51.490 --> 00:04:53.500
It really is that thin.

00:04:53.500 --> 00:04:57.480
I wrote it with folks
like you and your peers,

00:04:57.480 --> 00:04:59.730
my peers at work,
in mind, who don't

00:04:59.730 --> 00:05:01.730
like spending a lot of
time thinking about this,

00:05:01.730 --> 00:05:05.270
hate the idea of working on
process, it's just evil, right?

00:05:05.270 --> 00:05:08.530
This doesn't feel at all like
process, and that's part of it.

00:05:08.530 --> 00:05:10.280
There's just no
overhead involved

00:05:10.280 --> 00:05:14.560
and it gives us tremendous
project management capability.

00:05:14.560 --> 00:05:18.020
So without further ado,
let me talk about it.

00:05:18.020 --> 00:05:20.260
So the way that I'm
going to do this,

00:05:20.260 --> 00:05:24.170
is I'm going to run this
talk using a Kanban board.

00:05:24.170 --> 00:05:26.050
So I have no slides,
I'm just going

00:05:26.050 --> 00:05:27.390
to run it as a Kanban board.

00:05:27.390 --> 00:05:29.760
And what we're going to work
on today for our product

00:05:29.760 --> 00:05:31.720
is your questions.

00:05:31.720 --> 00:05:34.260
So I'm going to track your
questions on the Kanban board

00:05:34.260 --> 00:05:36.090
and answer them.

00:05:36.090 --> 00:05:39.210
Now I realize this isn't exactly
the same as writing software,

00:05:39.210 --> 00:05:41.840
but I'll draw the analogy as
we go and hopefully you'll be

00:05:41.840 --> 00:05:43.550
able to see that pretty easily.

00:05:43.550 --> 00:05:47.920
So to start with let's
just draw a Kanban board.

00:05:47.920 --> 00:05:51.750
The Kanban board is the center
of this particular approach

00:05:51.750 --> 00:05:54.290
and there is nothing else.

00:05:54.290 --> 00:05:57.560
It's not like there's extra
things to keep track of,

00:05:57.560 --> 00:05:58.880
spreadsheet stuff.

00:05:58.880 --> 00:06:01.330
It's just the Kanban board.

00:06:01.330 --> 00:06:04.150
So what does a Kanban
board look like?

00:06:04.150 --> 00:06:07.420
It's pretty straightforward,
you start out with a backlog.

00:06:07.420 --> 00:06:11.570
So I'll put the backlog.

00:06:11.570 --> 00:06:13.260
OK so we started with a backlog.

00:06:13.260 --> 00:06:15.730
How many people here
have used Scrum?

00:06:15.730 --> 00:06:16.480
Any people use?

00:06:16.480 --> 00:06:18.220
OK, a fair number of
people using Scrum.

00:06:18.220 --> 00:06:20.040
So you're familiar
with what a backlog is.

00:06:20.040 --> 00:06:23.240
If you use a more traditional
waterfall-- like old school

00:06:23.240 --> 00:06:25.300
Microsoft, and when I
was at Boeing and stuff

00:06:25.300 --> 00:06:29.020
we kind of used old school
waterfall-- that would just

00:06:29.020 --> 00:06:30.070
be a feature list, right?

00:06:30.070 --> 00:06:32.650
But the backlog is just a list
of stuff you've got to do.

00:06:32.650 --> 00:06:35.770
Typically it's prioritized,
it's ordered in some way.

00:06:35.770 --> 00:06:37.470
So that's the backlog.

00:06:37.470 --> 00:06:40.660
That's where I'll keep
all your questions.

00:06:40.660 --> 00:06:42.220
And then we have steps.

00:06:42.220 --> 00:06:44.470
So the next step
and in this case

00:06:44.470 --> 00:06:46.740
I'm answering your questions.

00:06:46.740 --> 00:06:48.260
The next step
here-- normally I'd

00:06:48.260 --> 00:06:49.820
just say I'd answer
the question--

00:06:49.820 --> 00:06:51.610
but some questions
are kind of big.

00:06:51.610 --> 00:06:54.090
And that's true in software
development as well.

00:06:54.090 --> 00:06:56.690
The things in your backlog
aren't all the same size,

00:06:56.690 --> 00:06:58.730
some of them may take
just a couple of days,

00:06:58.730 --> 00:07:01.190
but some of them may
take a few months.

00:07:01.190 --> 00:07:03.290
They just come in
different shapes and sizes.

00:07:03.290 --> 00:07:05.280
So you kind of want
to break those down

00:07:05.280 --> 00:07:08.071
into equally sized pieces, and
the same thing with questions.

00:07:08.071 --> 00:07:09.820
You could ask a very
complicated question,

00:07:09.820 --> 00:07:10.650
and you're going to
want to break it down

00:07:10.650 --> 00:07:12.276
into a few different questions.

00:07:12.276 --> 00:07:13.734
So the next step
will be breakdown.

00:07:18.090 --> 00:07:19.690
All right, and
then after that I'm

00:07:19.690 --> 00:07:20.898
going to answer the question.

00:07:25.540 --> 00:07:27.464
And then, after that
I want to validate

00:07:27.464 --> 00:07:29.380
that I answer the question,
because I'm trying

00:07:29.380 --> 00:07:30.720
to be a good speaker here.

00:07:30.720 --> 00:07:32.610
So I don't want to
just answer whatever

00:07:32.610 --> 00:07:34.670
question I thought
you asked, I want

00:07:34.670 --> 00:07:37.960
to make sure I'm answering the
question that you asked for.

00:07:37.960 --> 00:07:40.022
Sound familiar in product
development, right?

00:07:40.022 --> 00:07:42.480
You code up something, but
until you get customer feedback,

00:07:42.480 --> 00:07:43.980
you don't really
know what you have.

00:07:43.980 --> 00:07:45.940
So last step here
will be validate.

00:07:49.730 --> 00:07:51.720
So that's my Kanban board.

00:07:51.720 --> 00:07:53.270
You see, it didn't
take me very long.

00:07:53.270 --> 00:07:56.960
Our actual Kanban boards
are just like this.

00:07:56.960 --> 00:07:58.360
They're a little
bit bigger, it's

00:07:58.360 --> 00:08:01.760
kind of a small white board,
but they're just like this.

00:08:01.760 --> 00:08:04.260
And they have the
same number of steps.

00:08:04.260 --> 00:08:05.960
We have a breakdown
step, some people

00:08:05.960 --> 00:08:09.320
call it specify because you do
a little bit of specking there,

00:08:09.320 --> 00:08:12.890
just enough to break
it down into pieces.

00:08:12.890 --> 00:08:16.590
Answers, typically implements,
and validate is validate.

00:08:16.590 --> 00:08:18.780
You can obviously name the
steps anything you want,

00:08:18.780 --> 00:08:21.190
and you can have as
many steps as you want.

00:08:21.190 --> 00:08:24.010
This is just an example.

00:08:24.010 --> 00:08:27.280
So that's it, so we're going
to track all our work here.

00:08:27.280 --> 00:08:30.230
Now we get to the
first place where

00:08:30.230 --> 00:08:32.820
this seems a little
different from what

00:08:32.820 --> 00:08:36.909
many of you who may use boards--
I know a lot of people using

00:08:36.909 --> 00:08:38.840
Scrum and even
Waterfall use boards

00:08:38.840 --> 00:08:42.590
to track their work-- this is
the first step where it really

00:08:42.590 --> 00:08:47.230
kind of differentiates itself
from just regularly using

00:08:47.230 --> 00:08:49.370
a whiteboard to track your work.

00:08:49.370 --> 00:08:54.500
Each step has an active
and a done column.

00:08:54.500 --> 00:08:57.460
So each step is broken into two.

00:08:57.460 --> 00:09:01.150
So we're working on
breaking it down,

00:09:01.150 --> 00:09:02.537
we've finished breaking it down.

00:09:02.537 --> 00:09:04.870
We're working on answering,
it we finished answering it.

00:09:04.870 --> 00:09:07.710
We're working on validating,
we finished validating.

00:09:07.710 --> 00:09:10.330
So that's a little
different with Kanban.

00:09:10.330 --> 00:09:13.550
And it turns out to be
really important in order

00:09:13.550 --> 00:09:15.930
to use Kanban as a project
management technique,

00:09:15.930 --> 00:09:19.770
rather than just a visualize
your work technique.

00:09:19.770 --> 00:09:24.280
So with each of
these steps, we want

00:09:24.280 --> 00:09:28.280
to be able to specify-- that
one of the reasons for having

00:09:28.280 --> 00:09:32.760
the I'm working on it,
I'm done, is to specify

00:09:32.760 --> 00:09:35.300
what it means to be done.

00:09:35.300 --> 00:09:40.520
Now I'm not saying that
engineers might occasionally

00:09:40.520 --> 00:09:44.370
cut corners, maybe
not get a code review,

00:09:44.370 --> 00:09:47.712
not do a full bill, not
run all their tests,

00:09:47.712 --> 00:09:48.670
or write the unit disk.

00:09:48.670 --> 00:09:50.430
I'm not saying
that ever happens,

00:09:50.430 --> 00:09:54.260
but just in case there's
someone-- not you,

00:09:54.260 --> 00:09:57.090
but someone you know--
who doesn't always

00:09:57.090 --> 00:09:59.330
do all those things,
you want to have a check

00:09:59.330 --> 00:10:02.420
to make sure that they're
not just moving things along

00:10:02.420 --> 00:10:05.940
without actually following
through on all of their work.

00:10:05.940 --> 00:10:07.450
This never happens at Xbox.

00:10:07.450 --> 00:10:11.370
OK, so what you want
here, is you want rules.

00:10:11.370 --> 00:10:12.615
We call these done rules.

00:10:15.980 --> 00:10:20.790
You want rules that specify
when something is done.

00:10:20.790 --> 00:10:23.830
So for the breakdown
step-- now these

00:10:23.830 --> 00:10:26.010
rules I'm going to make
for these questions.

00:10:26.010 --> 00:10:28.640
But you can imagine different
rules for actual software

00:10:28.640 --> 00:10:29.860
development.

00:10:29.860 --> 00:10:31.944
So for breaking
down a question, I

00:10:31.944 --> 00:10:34.110
want to make sure-- it's
not going to be broken down

00:10:34.110 --> 00:10:36.520
unless the question can
be answered in like less

00:10:36.520 --> 00:10:38.000
than two minutes each.

00:10:38.000 --> 00:10:40.060
So I'll just say less
than two minutes,

00:10:40.060 --> 00:10:43.060
and then I'll know I'm
done breaking it down.

00:10:43.060 --> 00:10:46.220
Because I want the questions
to be about the same size,

00:10:46.220 --> 00:10:48.110
and not take too long.

00:10:48.110 --> 00:10:52.580
For answering, when is a
question going to be answered?

00:10:52.580 --> 00:10:55.880
Now this is being recorded,
it's being streamed,

00:10:55.880 --> 00:10:57.780
so I'm going to want
to repeat the question.

00:10:57.780 --> 00:11:02.870
So I better repeat, and then I
need to answer it, of course.

00:11:07.910 --> 00:11:10.950
OK so when it's repeated
and answered, here we go,

00:11:10.950 --> 00:11:14.100
past tense, then it's done.

00:11:14.100 --> 00:11:16.430
So that'll be my done
rule for that step.

00:11:16.430 --> 00:11:18.760
If that were implement,
in product development,

00:11:18.760 --> 00:11:23.320
you can imagine that saying,
it's been a code reviewed,

00:11:23.320 --> 00:11:26.630
it's been unit tested, you've
run through all that stuff.

00:11:26.630 --> 00:11:31.050
Whatever other steps you would
normally do to say something's

00:11:31.050 --> 00:11:32.770
finished being implemented.

00:11:32.770 --> 00:11:36.440
And then finally for validate,
I'm answering questions here.

00:11:36.440 --> 00:11:39.540
I want to make sure that
the questioner is satisfied.

00:11:39.540 --> 00:11:41.730
Did I answer your
question, kind of thing.

00:11:41.730 --> 00:11:48.804
So for this one it will
be questioner satisfied.

00:11:48.804 --> 00:11:50.428
And then I know I'm
done with validate.

00:11:54.150 --> 00:11:57.230
And that's it except
for one other element,

00:11:57.230 --> 00:11:58.710
which is a little tricky.

00:11:58.710 --> 00:12:00.980
But before I get to
that, I want to make sure

00:12:00.980 --> 00:12:03.250
that I've answered any
questions you have for now.

00:12:03.250 --> 00:12:03.868
So yes.

00:12:03.868 --> 00:12:05.620
AUDIENCE: [INAUDIBLE]

00:12:05.620 --> 00:12:08.370
ERIC BRECHNER: OK so
two questions there.

00:12:08.370 --> 00:12:15.340
One on prioritization and
one on due dates, absolutely.

00:12:15.340 --> 00:12:17.130
And I'll talk about
these, obviously,

00:12:17.130 --> 00:12:19.470
in a lot more detail when
I actually answer them,

00:12:19.470 --> 00:12:21.750
but the two questions there.

00:12:21.750 --> 00:12:24.010
One was on how do you
handle dependencies,

00:12:24.010 --> 00:12:28.658
and the other question was, how
do you handle assigning work?

00:12:28.658 --> 00:12:31.130
AUDIENCE: In what scenarios
does Kanban not work?

00:12:31.130 --> 00:12:35.160
ERIC BRECHNER: So
when not Kanban?

00:12:35.160 --> 00:12:36.129
Just such a sec.

00:12:36.129 --> 00:12:37.920
Continuous improvement,
I was just kidding.

00:12:40.470 --> 00:12:44.700
And then there was
a second question?

00:12:44.700 --> 00:12:45.785
Evil, evil meetings.

00:12:45.785 --> 00:12:46.660
AUDIENCE: [INAUDIBLE]

00:12:46.660 --> 00:12:48.451
ERIC BRECHNER: We do
have a daily stand up.

00:12:48.451 --> 00:12:52.060
Oh, look, hey, I
just did something.

00:12:52.060 --> 00:12:55.460
So we're running Kanban here,
and right now collecting

00:12:55.460 --> 00:12:58.190
items for the backlog,
and there is a question

00:12:58.190 --> 00:13:00.930
about how often do
you have meetings,

00:13:00.930 --> 00:13:02.370
what meetings do you have.

00:13:02.370 --> 00:13:05.214
And I just answered
it straight out.

00:13:05.214 --> 00:13:06.880
We just have a daily
stand up, but there

00:13:06.880 --> 00:13:10.320
are no other meetings,
that's the answer.

00:13:10.320 --> 00:13:14.090
There are no Kanban police, no
one just marched into this room

00:13:14.090 --> 00:13:19.440
and put me up against the wall
and said horrible things to me.

00:13:19.440 --> 00:13:21.810
It's not like that,
Kanban is just

00:13:21.810 --> 00:13:24.580
a tool to help you
manage your project.

00:13:24.580 --> 00:13:26.830
You don't have to put
all your emails on here.

00:13:26.830 --> 00:13:28.670
If there's a quick
piece of work that's

00:13:28.670 --> 00:13:31.540
going to take you five,
10 minutes, maybe an hour,

00:13:31.540 --> 00:13:35.300
you can do that, it's OK.

00:13:35.300 --> 00:13:39.370
It's all right to just do work
as it comes in if you need to.

00:13:39.370 --> 00:13:41.590
Kanban is here to
help you manage

00:13:41.590 --> 00:13:44.270
work that's going to
take a few days, that's

00:13:44.270 --> 00:13:46.230
more like project type work.

00:13:46.230 --> 00:13:49.980
But you know there aren't
hard and fast rules,

00:13:49.980 --> 00:13:53.240
and people that are going to
make fun of you and say you're

00:13:53.240 --> 00:13:56.430
doing it all wrong and
all that sort of thing.

00:13:56.430 --> 00:13:59.530
This is a tool to help you work.

00:13:59.530 --> 00:14:00.670
Any other questions?

00:14:00.670 --> 00:14:03.130
We might as well-- why don't
we go ahead and get started,

00:14:03.130 --> 00:14:07.250
and then you can ask questions
all along, which is by the way,

00:14:07.250 --> 00:14:09.260
a lot like product development.

00:14:09.260 --> 00:14:11.850
We're going to go ahead and
prioritize everything and start

00:14:11.850 --> 00:14:14.830
working on it and the new
feature requests will come in,

00:14:14.830 --> 00:14:16.300
in the form of more questions.

00:14:16.300 --> 00:14:20.880
And we'll just slot those in
to our existing priorities.

00:14:20.880 --> 00:14:24.320
So let's see we've
got lots of questions.

00:14:24.320 --> 00:14:26.940
First step, we want
to prioritize them.

00:14:26.940 --> 00:14:28.920
Let's talk about
prioritization, that's

00:14:28.920 --> 00:14:30.170
going to be my first question.

00:14:30.170 --> 00:14:32.380
It's straightforward, I
don't need to break it down

00:14:32.380 --> 00:14:33.390
into more than one.

00:14:33.390 --> 00:14:35.400
I move it over, and now
I'm going to answer it.

00:14:35.400 --> 00:14:38.370
You can move the
stickies at any time.

00:14:38.370 --> 00:14:40.700
Typically it's a whole team,
not one person doing this,

00:14:40.700 --> 00:14:41.210
of course.

00:14:41.210 --> 00:14:45.080
But you can do Kanban at home,
it's called personal Kanban.

00:14:45.080 --> 00:14:46.630
Anyway, it really is.

00:14:46.630 --> 00:14:49.700
It just has three columns,
a backlog, doing, and done.

00:14:49.700 --> 00:14:51.710
And that's it, it's very simple.

00:14:51.710 --> 00:14:53.890
But it's pretty handy,
a lot of people like it.

00:14:53.890 --> 00:14:57.100
Anyway, so for
prioritization we're

00:14:57.100 --> 00:15:02.350
going to put things in
order and the team just

00:15:02.350 --> 00:15:04.610
does that together,
based on their shared

00:15:04.610 --> 00:15:06.040
sense of priorities.

00:15:06.040 --> 00:15:07.940
They can do it in
a daily stand up.

00:15:07.940 --> 00:15:09.440
So what am I going to do here?

00:15:09.440 --> 00:15:10.180
Let's see.

00:15:10.180 --> 00:15:15.320
I definitely want to cover
estimation and due dates,

00:15:15.320 --> 00:15:18.780
because lots of
people ask about that.

00:15:18.780 --> 00:15:21.370
And then when to launch
is related to that,

00:15:21.370 --> 00:15:24.710
and then dependencies
are nasty after that.

00:15:24.710 --> 00:15:27.590
Put those closer to this side.

00:15:27.590 --> 00:15:32.281
Dependencies, maybe
assignments, how large a team,

00:15:32.281 --> 00:15:33.155
setting expectations.

00:15:35.840 --> 00:15:38.470
Roles, how about over there?

00:15:38.470 --> 00:15:40.280
Onboarding time.

00:15:40.280 --> 00:15:41.345
Oops I lost one.

00:15:41.345 --> 00:15:42.220
AUDIENCE: [INAUDIBLE]

00:15:42.220 --> 00:15:45.620
ERIC BRECHNER: I am doing this
in order most important down,

00:15:45.620 --> 00:15:46.620
and then again.

00:15:46.620 --> 00:15:49.010
And I'm doing it based on
my personal preference,

00:15:49.010 --> 00:15:50.760
because I am in charge.

00:15:50.760 --> 00:15:53.621
AUDIENCE: [INAUDIBLE]

00:15:53.621 --> 00:15:56.120
ERIC BRECHNER: Oh, you would
do it together at a daily stand

00:15:56.120 --> 00:15:56.420
up.

00:15:56.420 --> 00:15:58.550
Again, answering questions
straight off the bat.

00:15:58.550 --> 00:16:01.520
That was a quick one.

00:16:01.520 --> 00:16:03.200
You could have a
quarterly meeting

00:16:03.200 --> 00:16:05.504
if you wanted to, if
it was a major deal.

00:16:05.504 --> 00:16:07.170
And I talk about that,
there's a chapter

00:16:07.170 --> 00:16:08.820
in the book all
about using Kanban

00:16:08.820 --> 00:16:10.620
within a large organization.

00:16:10.620 --> 00:16:13.180
I'm currently within the
Windows organization,

00:16:13.180 --> 00:16:16.910
there's 13000 of us
in that organization.

00:16:16.910 --> 00:16:19.380
There's about 8,000 of
us that are engineers,

00:16:19.380 --> 00:16:22.170
so it works well
within that framework.

00:16:22.170 --> 00:16:24.140
But obviously there's
more to it when

00:16:24.140 --> 00:16:25.868
you're fitting into a big team.

00:16:25.868 --> 00:16:26.743
AUDIENCE: [INAUDIBLE]

00:16:28.940 --> 00:16:31.199
ERIC BRECHNER: Absolutely,
of course, that's

00:16:31.199 --> 00:16:32.240
what I'm doing right now.

00:16:32.240 --> 00:16:37.010
This is how you prioritize,
so that is how you prioritize.

00:16:37.010 --> 00:16:40.110
It's not hard, it
doesn't involve

00:16:40.110 --> 00:16:43.090
a lot of extra whatever.

00:16:43.090 --> 00:16:45.460
It's stickies and
you move them around.

00:16:45.460 --> 00:16:51.230
If you're curious about
how you re-prioritize,

00:16:51.230 --> 00:16:53.680
I have re-prioritized.

00:16:53.680 --> 00:16:55.070
That's all there is to it.

00:16:55.070 --> 00:16:58.350
Like I said, Kanban is really
simple and really quick.

00:16:58.350 --> 00:17:01.730
It's why my teams now I have
gotten just absurdly fast.

00:17:01.730 --> 00:17:02.550
Yes?

00:17:02.550 --> 00:17:03.650
You're absolutely right.

00:17:03.650 --> 00:17:08.099
So the point that this
person was just making

00:17:08.099 --> 00:17:11.140
was it's a lot easier for me
to do it when it's just me.

00:17:11.140 --> 00:17:13.970
It's harder when you've
got a whole team, let alone

00:17:13.970 --> 00:17:16.430
you're in an organization
like 8000 people.

00:17:16.430 --> 00:17:18.630
So obviously with 8000
people is more involved,

00:17:18.630 --> 00:17:21.829
and there's a top down and
bottom up thing going on.

00:17:21.829 --> 00:17:24.153
And I describe all that in
a lot of detail in the book.

00:17:24.153 --> 00:17:25.569
I can add that as
a question here,

00:17:25.569 --> 00:17:28.000
if you're interested,
on how that works.

00:17:28.000 --> 00:17:29.880
So large scale.

00:17:29.880 --> 00:17:33.570
But at some point or
another, your individual team

00:17:33.570 --> 00:17:35.380
has a set of work
they need to do.

00:17:35.380 --> 00:17:41.150
At some point that happens,
and you do need to sort it.

00:17:41.150 --> 00:17:44.370
And what we do is,
just have the team

00:17:44.370 --> 00:17:46.830
together at the daily stand up.

00:17:46.830 --> 00:17:48.970
It's time to re-sort the work.

00:17:48.970 --> 00:17:51.220
We do this, well
we do it every day

00:17:51.220 --> 00:17:52.709
kind of as an insertion sort.

00:17:52.709 --> 00:17:54.750
But sometimes you need to
re-sort the whole thing

00:17:54.750 --> 00:17:56.320
because something has changed.

00:17:56.320 --> 00:17:58.940
And then just have
conversations about what

00:17:58.940 --> 00:18:01.240
it is, and talk about
what the customers need,

00:18:01.240 --> 00:18:03.850
what the expectations are
of executives and partners,

00:18:03.850 --> 00:18:04.940
and stuff like that.

00:18:04.940 --> 00:18:07.390
And you reorder it, and
you reorder it very much

00:18:07.390 --> 00:18:09.700
like I did, but obviously
it will take you

00:18:09.700 --> 00:18:13.420
more than the three
minutes that I spent.

00:18:13.420 --> 00:18:15.970
But it wouldn't take you much
longer than about 20 minutes.

00:18:15.970 --> 00:18:16.845
AUDIENCE: [INAUDIBLE]

00:18:18.589 --> 00:18:20.880
ERIC BRECHNER: Quick question
about the daily stand up.

00:18:20.880 --> 00:18:22.810
How long does the
daily stand up take?

00:18:22.810 --> 00:18:25.440
Some teams do it in
less than five minutes.

00:18:25.440 --> 00:18:30.150
My teams typically use it
to socialize a little bit,

00:18:30.150 --> 00:18:32.800
so they typically take
about a half an hour.

00:18:32.800 --> 00:18:35.300
But that's just
personal preference.

00:18:35.300 --> 00:18:38.695
In terms of how much work it
is, it's not a lot of work.

00:18:38.695 --> 00:18:40.820
Obviously if you are going
to redo your whole board

00:18:40.820 --> 00:18:43.390
that would take a little
bit longer for that one.

00:18:43.390 --> 00:18:44.840
OK.

00:18:44.840 --> 00:18:47.390
So that is prioritization.

00:18:47.390 --> 00:18:49.200
Let's go ahead and validate.

00:18:49.200 --> 00:18:50.940
Did I answer the
prioritization question?

00:18:50.940 --> 00:18:51.870
AUDIENCE: Validated.

00:18:51.870 --> 00:18:53.930
ERIC BRECHNER:
Excellent, all right.

00:18:53.930 --> 00:18:56.500
OK, now before I move
on to estimation,

00:18:56.500 --> 00:19:01.800
I want to make sure I talk about
that last element of Kanban.

00:19:01.800 --> 00:19:04.080
And it's an extremely
important one,

00:19:04.080 --> 00:19:06.390
although all it
is just a number.

00:19:06.390 --> 00:19:10.980
Next to each step, and it's
called a work in progress limit

00:19:10.980 --> 00:19:13.280
or WIP, work in progress.

00:19:13.280 --> 00:19:14.750
A WIP limit.

00:19:14.750 --> 00:19:17.760
And you assign WIP
limits to every step.

00:19:17.760 --> 00:19:20.520
And this is the part, along
with the done rules, that really

00:19:20.520 --> 00:19:23.130
makes this project management.

00:19:23.130 --> 00:19:26.437
Because until then you could
just work willy-nilly and maybe

00:19:26.437 --> 00:19:28.270
your project's on track,
and maybe it isn't.

00:19:28.270 --> 00:19:29.190
Who knows?

00:19:29.190 --> 00:19:29.697
Right?

00:19:29.697 --> 00:19:32.030
The done rules will give you
a certain amount of quality

00:19:32.030 --> 00:19:36.359
assurance, but the actual
management of the work,

00:19:36.359 --> 00:19:37.650
there's not much going on here.

00:19:37.650 --> 00:19:39.820
You can just see it.

00:19:39.820 --> 00:19:41.380
So what are the WIP limits?

00:19:41.380 --> 00:19:45.190
The WIP limits are just a number
associated with each step,

00:19:45.190 --> 00:19:49.410
and they limit the number of
stickies allowed in that step.

00:19:49.410 --> 00:19:50.601
That's it.

00:19:50.601 --> 00:19:52.010
That's what they do.

00:19:52.010 --> 00:19:54.610
So the way that I just
treated prioritization,

00:19:54.610 --> 00:19:56.940
I had a WIP limit of
one across the board.

00:19:56.940 --> 00:20:00.150
I just moved one sticky
all the way through.

00:20:00.150 --> 00:20:04.750
But for a team, a larger
size team, of course,

00:20:04.750 --> 00:20:06.760
these WIP limits are
going to be a bit larger.

00:20:06.760 --> 00:20:08.260
One of the questions
a lot of people

00:20:08.260 --> 00:20:09.860
have when they're
first using Kanban

00:20:09.860 --> 00:20:12.920
is how do you set the WIP
limited appropriately?

00:20:12.920 --> 00:20:15.420
What do you use?

00:20:15.420 --> 00:20:18.090
And for that there's a
fairly simple answer.

00:20:18.090 --> 00:20:20.920
And I have little
Excel spreadsheet

00:20:20.920 --> 00:20:23.760
you can use to calculate
this for yourself.

00:20:23.760 --> 00:20:26.460
You can download it, it's
very simple but nonetheless

00:20:26.460 --> 00:20:27.820
spreadsheets are cool.

00:20:27.820 --> 00:20:32.405
So here's what you do to set
up your initial WIP limits.

00:20:32.405 --> 00:20:34.030
And then over time,
you can adjust them

00:20:34.030 --> 00:20:36.640
if you're finding that things
aren't working quite right.

00:20:36.640 --> 00:20:39.370
So for the initial WIP
limits, one of these steps

00:20:39.370 --> 00:20:42.980
typically takes longer
than the others,

00:20:42.980 --> 00:20:45.000
often it's the
implementation step.

00:20:45.000 --> 00:20:48.340
Doesn't have to be, but for
the sake of argument here,

00:20:48.340 --> 00:20:51.340
I'm going to say that the
answer step is the longest step.

00:20:51.340 --> 00:20:54.340
That's often the longest
step, the implementation step.

00:20:54.340 --> 00:20:58.470
So I'm going to set
that WIP limit first.

00:20:58.470 --> 00:21:02.640
I'm going to set that WIP limit
to be the number of people

00:21:02.640 --> 00:21:06.740
that are involved in working on
it, in my case it's just one.

00:21:06.740 --> 00:21:09.350
But for a team, let's
say you had a team,

00:21:09.350 --> 00:21:12.000
and it had five
developers on it,

00:21:12.000 --> 00:21:15.230
and some people who were doing
the specifications, some people

00:21:15.230 --> 00:21:18.270
maybe were testing it, maybe
the developers also test it.

00:21:18.270 --> 00:21:20.930
But let's say there were five
people who could actually

00:21:20.930 --> 00:21:23.180
do the implementation
step, you would

00:21:23.180 --> 00:21:24.675
see that WIP limit to five.

00:21:24.675 --> 00:21:26.050
Make sure they
all have something

00:21:26.050 --> 00:21:28.670
to do, plus a little
bit of buffer, right?

00:21:28.670 --> 00:21:30.520
Because there is some
variation in work

00:21:30.520 --> 00:21:31.910
sometimes you get stuck
for a little while

00:21:31.910 --> 00:21:32.640
and you want to
work on something

00:21:32.640 --> 00:21:34.431
else for a little bit,
something like that.

00:21:34.431 --> 00:21:37.676
You want a little bit of buffer,
so maybe add on 50% of that

00:21:37.676 --> 00:21:38.550
and then you're good.

00:21:38.550 --> 00:21:42.192
For me, I'm going round
up and call this two.

00:21:42.192 --> 00:21:43.650
So that's going to
be my WIP limit.

00:21:43.650 --> 00:21:48.600
I'm maxed out, I can only have
two stickies in that column.

00:21:48.600 --> 00:21:50.850
And that includes on either
side, whether they're done

00:21:50.850 --> 00:21:52.220
or I'm working on them.

00:21:52.220 --> 00:21:54.600
I can only have two total.

00:21:54.600 --> 00:21:57.450
And that's the WIP limit.

00:21:57.450 --> 00:22:01.170
Once you have the WIP
limit set for one column,

00:22:01.170 --> 00:22:04.650
you then can set the WIP
limits for the other columns

00:22:04.650 --> 00:22:06.690
so they match the pace.

00:22:06.690 --> 00:22:09.720
And this is where it
becomes project management.

00:22:09.720 --> 00:22:12.050
You want them to match
the pace because you

00:22:12.050 --> 00:22:19.070
don't want to overload the
implementation step with specs.

00:22:19.070 --> 00:22:21.240
You've probably worked
on teams before where

00:22:21.240 --> 00:22:25.390
you do a whole ton of
work on all these things

00:22:25.390 --> 00:22:26.540
you're going to do next.

00:22:26.540 --> 00:22:30.130
And it just piles up,
and then maybe get to it,

00:22:30.130 --> 00:22:31.310
maybe you don't.

00:22:31.310 --> 00:22:33.350
Maybe you get to some
of it, and by the time

00:22:33.350 --> 00:22:35.030
you've done some
of it, you realize

00:22:35.030 --> 00:22:38.160
the first part, the rest
of it was just wrong.

00:22:38.160 --> 00:22:40.690
And you need to start over, and
you've wasted all that time.

00:22:40.690 --> 00:22:44.700
Not a complete waste of time,
but kind of a waste of time.

00:22:44.700 --> 00:22:48.390
You don't want to
overload things.

00:22:48.390 --> 00:22:50.140
You want to break
down step to kind

00:22:50.140 --> 00:22:52.220
of match the pace
of the answer step,

00:22:52.220 --> 00:22:54.140
and likewise with validate.

00:22:54.140 --> 00:22:55.990
You want the speed at
which you can validate

00:22:55.990 --> 00:22:58.080
things to match the pace
the speed at which you

00:22:58.080 --> 00:22:59.750
can implement them.

00:22:59.750 --> 00:23:02.670
So you set the WIP limits
for these other ones

00:23:02.670 --> 00:23:04.100
to match that pace.

00:23:04.100 --> 00:23:07.310
And for me, and the
minimum WIP limit is one,

00:23:07.310 --> 00:23:09.390
so for me I'm just going
to take that one, one.

00:23:09.390 --> 00:23:13.700
Because those are a lot faster,
I can just set those as one.

00:23:13.700 --> 00:23:17.870
For your individual team,
calculating these throughputs

00:23:17.870 --> 00:23:19.230
is fairly straightforward.

00:23:19.230 --> 00:23:21.930
And like I said, I have
a nice little spreadsheet

00:23:21.930 --> 00:23:23.430
for those people
who don't even want

00:23:23.430 --> 00:23:27.590
to do the division and stuff,
it will calculate it for you.

00:23:27.590 --> 00:23:30.202
So that's setting
those WIP limits

00:23:30.202 --> 00:23:31.660
and that's what
I'm going to follow

00:23:31.660 --> 00:23:34.900
as I go through the
rest of these questions.

00:23:34.900 --> 00:23:39.910
And that's everything, by
the way, that's all of it.

00:23:39.910 --> 00:23:41.920
There's not really a
lot of extra complexity,

00:23:41.920 --> 00:23:43.850
except of course, there
is subtleties to how

00:23:43.850 --> 00:23:46.380
you do some of these things
that people have asked about.

00:23:46.380 --> 00:23:50.920
So let's start with estimation.

00:23:50.920 --> 00:23:54.920
So estimation, a lot of people
struggle with estimation

00:23:54.920 --> 00:23:57.740
whether they're using
Kanban or some other method.

00:23:57.740 --> 00:24:00.170
I'm going to break this down
into two different things.

00:24:00.170 --> 00:24:03.282
One is how fast you are.

00:24:09.580 --> 00:24:14.535
And then another
is how many tasks.

00:24:21.009 --> 00:24:23.390
AUDIENCE: [INAUDIBLE]

00:24:23.390 --> 00:24:27.010
ERIC BRECHNER: I'll get to that.

00:24:27.010 --> 00:24:30.710
OK so my estimation
step has now become,

00:24:30.710 --> 00:24:34.110
or my estimation question has
now become these two questions.

00:24:34.110 --> 00:24:37.210
And I'll start with
how fast you go.

00:24:37.210 --> 00:24:39.500
So in order to
estimate anything,

00:24:39.500 --> 00:24:42.289
you need to know how long
it how long it takes, right?

00:24:42.289 --> 00:24:43.830
That's the whole
point, you're trying

00:24:43.830 --> 00:24:45.788
to estimate how long
something's going to take.

00:24:45.788 --> 00:24:47.740
So when it's going
to be ready, you

00:24:47.740 --> 00:24:50.030
can calculate from how
long it's going to take.

00:24:50.030 --> 00:24:53.300
So to calculate that
in Kanban turns out

00:24:53.300 --> 00:24:55.930
to be pretty straightforward.

00:24:55.930 --> 00:24:58.160
What you do is you pick
some amount of time

00:24:58.160 --> 00:24:59.740
that you're going
to measure, you're

00:24:59.740 --> 00:25:02.354
going to actually pay attention
and measure these things.

00:25:02.354 --> 00:25:03.770
Maybe you have an
automated system

00:25:03.770 --> 00:25:06.510
that could do that
all the time, but now

00:25:06.510 --> 00:25:09.570
let's just say you just got this
board, that's all you've got.

00:25:09.570 --> 00:25:12.260
And you're deciding, OK how
fast am I finishing things?

00:25:12.260 --> 00:25:17.780
All you do is you say, OK, how
many stickies make it to done

00:25:17.780 --> 00:25:20.390
within a certain time period?

00:25:20.390 --> 00:25:24.280
Say two weeks, or a
month, whatever you want.

00:25:24.280 --> 00:25:26.940
So you pick that
time period, you

00:25:26.940 --> 00:25:29.280
count how many stickies
move all the way

00:25:29.280 --> 00:25:34.120
through during that
time period, you divide

00:25:34.120 --> 00:25:36.880
and you get stickies per day.

00:25:36.880 --> 00:25:38.530
Now you know how
fast you're going.

00:25:40.820 --> 00:25:41.320
Ta da.

00:25:45.090 --> 00:25:47.381
Any questions on how
to calculate how fast?

00:25:47.381 --> 00:25:47.880
Yes?

00:25:47.880 --> 00:25:48.755
AUDIENCE: [INAUDIBLE]

00:25:51.800 --> 00:25:55.720
ERIC BRECHNER: So quick follow
up here, sometimes-- oh look!

00:25:55.720 --> 00:25:58.980
I'm handling a bug.

00:25:58.980 --> 00:26:04.310
OK, so I implemented an
answer, and it didn't quite

00:26:04.310 --> 00:26:06.720
meet with the
validation criteria.

00:26:06.720 --> 00:26:08.920
There was a bug, I
hadn't quite answered it

00:26:08.920 --> 00:26:11.940
because there's variation in
size as you were pointing out.

00:26:11.940 --> 00:26:13.940
So how do you handle bugs?

00:26:13.940 --> 00:26:15.740
There's two ways to handle bugs.

00:26:15.740 --> 00:26:17.860
Sometimes those bugs
are trivial to fix,

00:26:17.860 --> 00:26:20.520
they'll just take you a few
minutes, and you can fix them.

00:26:20.520 --> 00:26:21.920
This is an example of that.

00:26:21.920 --> 00:26:24.310
I can answer that
question very quickly.

00:26:24.310 --> 00:26:25.700
So you just fix it.

00:26:25.700 --> 00:26:28.295
Just fix the bug, don't
get hung up here, right?

00:26:28.295 --> 00:26:29.920
It's like answering
the quick question.

00:26:29.920 --> 00:26:32.211
You just fix it, you don't
have to put it on the board.

00:26:32.211 --> 00:26:34.520
But sometimes bugs
are really nasty,

00:26:34.520 --> 00:26:37.280
and will take you a long time,
you actually have to design it,

00:26:37.280 --> 00:26:39.170
you have to code it up.

00:26:39.170 --> 00:26:40.820
It's going to, I
mean, it's going

00:26:40.820 --> 00:26:42.114
to be a lot of work to do.

00:26:42.114 --> 00:26:44.030
Obviously you code up
all fixes, but you know.

00:26:44.030 --> 00:26:45.321
It's going to be a lot of work.

00:26:45.321 --> 00:26:49.830
For one of those, we would
write a new sticky that

00:26:49.830 --> 00:26:52.720
talks about fixing
that big bug, we

00:26:52.720 --> 00:26:54.940
prioritize it on the list
with everything else,

00:26:54.940 --> 00:26:57.680
we'd pass it through the
same steps as anything else.

00:26:57.680 --> 00:26:58.720
And we'd fix it.

00:26:58.720 --> 00:27:02.800
In this case, your
question was about what

00:27:02.800 --> 00:27:04.590
about different sizes?

00:27:04.590 --> 00:27:07.720
And that's the idea
of the breakdown step.

00:27:07.720 --> 00:27:09.620
The breakdown step
should take things

00:27:09.620 --> 00:27:11.247
that are of varying
different size,

00:27:11.247 --> 00:27:12.830
and break them down
to the things that

00:27:12.830 --> 00:27:15.780
are roughly the same size.

00:27:15.780 --> 00:27:18.650
The metric I like to
use is they'll take me

00:27:18.650 --> 00:27:21.117
one to three days-ish each.

00:27:21.117 --> 00:27:22.950
So that's what you want
to break it down to,

00:27:22.950 --> 00:27:27.160
things that take a few days.

00:27:27.160 --> 00:27:31.880
And it's typically pretty easy
to do in the break down step.

00:27:31.880 --> 00:27:33.990
Just break it down into tasks.

00:27:33.990 --> 00:27:37.320
Does that answer your question?

00:27:37.320 --> 00:27:38.160
For the how fast?

00:27:38.160 --> 00:27:38.980
AUDIENCE: Yes.

00:27:38.980 --> 00:27:39.730
ERIC BRECHNER: OK.

00:27:43.330 --> 00:27:47.770
Let me cover how many tasks,
and then we'll finish this off.

00:27:47.770 --> 00:27:52.500
OK, so now we know how
fast things move through.

00:27:52.500 --> 00:27:59.840
We can do two, and 2.3 tasks
per day, something like that.

00:27:59.840 --> 00:28:02.470
That's what it comes out
to be, something like that.

00:28:02.470 --> 00:28:03.540
OK, great.

00:28:03.540 --> 00:28:06.944
So how many tasks do we have
because the whole point of this

00:28:06.944 --> 00:28:08.360
is saying I've got
a project, I've

00:28:08.360 --> 00:28:11.710
got a whole backlog
worth of stuff,

00:28:11.710 --> 00:28:14.780
I want to know how long
it's going to take,

00:28:14.780 --> 00:28:16.190
so I've got to compute that.

00:28:16.190 --> 00:28:20.980
All right, for that you need
to do an actual old school type

00:28:20.980 --> 00:28:23.930
estimation, but what
you're estimating now

00:28:23.930 --> 00:28:29.340
is not how many tasks hours
or how many story points

00:28:29.340 --> 00:28:30.730
or something like that.

00:28:30.730 --> 00:28:35.300
What you're doing instead is
saying, all right for this item

00:28:35.300 --> 00:28:38.020
how many tasks would
that break down into?

00:28:38.020 --> 00:28:39.980
Which is very
intuitive for folks.

00:28:39.980 --> 00:28:42.400
People can figure that
out pretty easily.

00:28:42.400 --> 00:28:46.150
Just OK, this is a big thing,
how many different tasks?

00:28:46.150 --> 00:28:51.427
Each one taking a couple days,
how many of those are there?

00:28:51.427 --> 00:28:52.760
Most people can figure that out.

00:28:52.760 --> 00:28:55.540
Now you can use Planning
Poker for that if you like,

00:28:55.540 --> 00:28:57.880
if you happen to
like Planning Poker.

00:28:57.880 --> 00:28:59.270
You can use your
favorite method.

00:28:59.270 --> 00:29:00.970
And by the way, you can
use your favorite method

00:29:00.970 --> 00:29:02.230
to do estimation in general.

00:29:02.230 --> 00:29:04.070
There's nothing special
about Kanban here.

00:29:04.070 --> 00:29:06.111
I'm giving you one that
fits in well with Kanban,

00:29:06.111 --> 00:29:08.760
but any estimation
technique will work.

00:29:08.760 --> 00:29:11.490
But this one is a little
more intuitive to folks.

00:29:11.490 --> 00:29:14.040
It's not this abstract
thing, the story points,

00:29:14.040 --> 00:29:15.370
or something like that.

00:29:15.370 --> 00:29:19.320
It's just how many different
tasks is that one made of?

00:29:19.320 --> 00:29:22.200
So you make that
estimate, you add those up

00:29:22.200 --> 00:29:24.680
for all your different
features, you

00:29:24.680 --> 00:29:29.320
multiply them by a task per day,
or divide, or whatever that is.

00:29:29.320 --> 00:29:31.830
I have a spreadsheet for
that too, not that it's hard,

00:29:31.830 --> 00:29:35.070
but you just divide,
and then ta da!

00:29:35.070 --> 00:29:38.400
You get how many days
it's going to be.

00:29:38.400 --> 00:29:40.070
And then you can
plan dates around it.

00:29:40.070 --> 00:29:41.620
If the number of
days is beyond when

00:29:41.620 --> 00:29:44.000
you're supposed to ship, you
can have those discussions,

00:29:44.000 --> 00:29:46.120
you can simplify things,
you can add people

00:29:46.120 --> 00:29:48.390
to the team well in
advance if you need to.

00:29:48.390 --> 00:29:49.890
That doesn't always
work, but you

00:29:49.890 --> 00:29:52.550
can make adjustments
of one kind or another

00:29:52.550 --> 00:29:54.600
to try and meet your dates.

00:29:54.600 --> 00:29:56.700
But that's how you do it.

00:29:56.700 --> 00:30:01.970
Does that answer your question?

00:30:01.970 --> 00:30:03.410
Good.

00:30:03.410 --> 00:30:07.850
So let's say you
have a due date.

00:30:07.850 --> 00:30:11.910
We have due dates, we have
dates at Xbox, that's for sure.

00:30:11.910 --> 00:30:13.930
So let's say you have
a due date and you

00:30:13.930 --> 00:30:16.240
have a bunch of work
queued up, and you

00:30:16.240 --> 00:30:19.110
want to make sure that that
work is done by the date.

00:30:19.110 --> 00:30:21.410
You would estimate
how many tasks

00:30:21.410 --> 00:30:24.100
are in each of the items
that are due by that date,

00:30:24.100 --> 00:30:27.250
you would use your task
completion rate to figure out

00:30:27.250 --> 00:30:29.040
how long it's actually
going to take,

00:30:29.040 --> 00:30:32.200
and then you would
compare that calendar

00:30:32.200 --> 00:30:34.920
date to the actual date that
you're supposed to deliver.

00:30:34.920 --> 00:30:37.320
And that would either
be before it, yay.

00:30:37.320 --> 00:30:38.060
Win.

00:30:38.060 --> 00:30:39.920
Or after it, boo.

00:30:39.920 --> 00:30:43.420
AUDIENCE: [INAUDIBLE]

00:30:45.240 --> 00:30:47.160
ERIC BRECHNER:
Right, because you've

00:30:47.160 --> 00:30:50.350
take two weeks, a month,
whatever it is, and calculated,

00:30:50.350 --> 00:30:53.460
just counted how many tasks
you can do during that time.

00:30:53.460 --> 00:30:56.180
All those tasks are going
to be roughly the same size

00:30:56.180 --> 00:30:59.380
because they were broken down.

00:30:59.380 --> 00:31:01.130
So now you estimate
how many tasks

00:31:01.130 --> 00:31:03.650
are going to have that you
need to finish by the date,

00:31:03.650 --> 00:31:05.680
you have your rate
of completion,

00:31:05.680 --> 00:31:07.992
so you know exactly how
long it's going to take.

00:31:07.992 --> 00:31:09.170
Ta da.

00:31:09.170 --> 00:31:11.610
And it takes all the
different factors

00:31:11.610 --> 00:31:13.850
of how big your team
is, whether or not

00:31:13.850 --> 00:31:17.359
you work on weekends, all the
bugs that you might have fixed,

00:31:17.359 --> 00:31:18.900
all the e-mail you
might have gotten.

00:31:18.900 --> 00:31:20.608
All that's taken into
account because you

00:31:20.608 --> 00:31:23.980
counted how many actual task
you completed during that time

00:31:23.980 --> 00:31:24.680
period.

00:31:24.680 --> 00:31:28.220
So you just have it.

00:31:28.220 --> 00:31:30.610
Does that answer question?

00:31:30.610 --> 00:31:31.302
OK.

00:31:31.302 --> 00:31:33.930
AUDIENCE: [INAUDIBLE]

00:31:33.930 --> 00:31:36.560
ERIC BRECHNER: OK so the
question was, how do you

00:31:36.560 --> 00:31:38.020
make tasks the same size?

00:31:38.020 --> 00:31:40.020
I mean obviously you can
do the breakdown thing.

00:31:40.020 --> 00:31:42.280
You can say they're
roughly the same size,

00:31:42.280 --> 00:31:45.160
but life is full of surprises.

00:31:45.160 --> 00:31:48.970
So tasks sometimes are much
bigger than you expected.

00:31:48.970 --> 00:31:50.882
Even though you
broke them down, you

00:31:50.882 --> 00:31:52.840
thought they were going
to be a couple of days,

00:31:52.840 --> 00:31:56.050
maybe they're big.

00:31:56.050 --> 00:32:01.850
So the follow on question was,
since tasks can vary in size,

00:32:01.850 --> 00:32:03.957
the estimate will be inaccurate.

00:32:03.957 --> 00:32:05.790
But again, we're taking
that breakdown step.

00:32:05.790 --> 00:32:07.590
So the variation in
size is only going

00:32:07.590 --> 00:32:11.980
to be plus or minus a day,
and that variance in average

00:32:11.980 --> 00:32:14.734
just evens out over time.

00:32:14.734 --> 00:32:16.900
There are statistics about
this and stuff like that.

00:32:16.900 --> 00:32:18.980
It follows a normal distribution
because you're adding them up

00:32:18.980 --> 00:32:19.630
and all this.

00:32:19.630 --> 00:32:22.890
But, you know, it's going
to be pretty fricking good.

00:32:22.890 --> 00:32:25.400
Now I will say this
about estimation.

00:32:25.400 --> 00:32:28.440
So we just spent a bunch
of time talking about this.

00:32:28.440 --> 00:32:32.100
Interestingly enough, my
team doesn't do this anymore.

00:32:32.100 --> 00:32:34.220
So we did at first.

00:32:34.220 --> 00:32:36.220
I actually have a number
of teams, none of them

00:32:36.220 --> 00:32:37.500
do it anymore.

00:32:37.500 --> 00:32:41.400
We did at first, because
people wanted to know,

00:32:41.400 --> 00:32:42.710
of course they wanted to know.

00:32:42.710 --> 00:32:45.220
You have to hit your due dates.

00:32:45.220 --> 00:32:51.910
But we delivered early
or on time all the time.

00:32:55.060 --> 00:32:57.720
It's just a machine,
just flows right through,

00:32:57.720 --> 00:32:59.670
the flow is so smooth.

00:32:59.670 --> 00:33:03.630
We were so predictable
that the team

00:33:03.630 --> 00:33:06.690
stopped asking us for due
dates and just started

00:33:06.690 --> 00:33:09.600
focusing on where they
were in our order.

00:33:09.600 --> 00:33:11.780
Because they knew if
they were in our order,

00:33:11.780 --> 00:33:13.760
it was going to
come through, and it

00:33:13.760 --> 00:33:17.200
was going to come through
in plenty of time.

00:33:17.200 --> 00:33:20.230
So we just haven't been asked
for estimates much at all

00:33:20.230 --> 00:33:20.807
anymore.

00:33:20.807 --> 00:33:22.140
I'm not saying that we never do.

00:33:22.140 --> 00:33:26.260
We occasionally do it,
but it's become rare.

00:33:26.260 --> 00:33:28.970
The quality is always
there, the speed at which

00:33:28.970 --> 00:33:31.555
we operate is always faster
than the other teams.

00:33:31.555 --> 00:33:33.430
And they're asking for
something because they

00:33:33.430 --> 00:33:34.820
have work that they
need to do and they

00:33:34.820 --> 00:33:36.860
want to know when our
thing is going to be ready,

00:33:36.860 --> 00:33:38.235
and by the time
they think of it,

00:33:38.235 --> 00:33:41.050
by the time they're ready to go,
we're typically there already.

00:33:41.050 --> 00:33:42.841
So they just need to
make sure that they're

00:33:42.841 --> 00:33:44.760
in higher enough
priority on our board,

00:33:44.760 --> 00:33:47.220
and that's what they concern
themselves with, not how

00:33:47.220 --> 00:33:49.060
long it's going to take us.

00:33:49.060 --> 00:33:53.532
Because we just developed this
reputation, it's fantastic.

00:33:53.532 --> 00:33:55.990
Now I'm not saying, I'm not
guaranteeing that for everyone,

00:33:55.990 --> 00:33:58.140
and obviously there's
different organizations

00:33:58.140 --> 00:34:01.560
who have different demands
on specifying exactly what

00:34:01.560 --> 00:34:03.590
date you're going to
be done with whatever.

00:34:03.590 --> 00:34:06.410
And there are methodologies that
I talked about that give you

00:34:06.410 --> 00:34:10.590
very good estimates,
but I'm just

00:34:10.590 --> 00:34:14.590
saying that it's so
reliable and so continuous

00:34:14.590 --> 00:34:18.590
that we just haven't had that
demand on us much anymore,

00:34:18.590 --> 00:34:20.210
which is pretty nice.

00:34:20.210 --> 00:34:21.188
Yes?

00:34:21.188 --> 00:34:22.214
AUDIENCE: [INAUDIBLE]

00:34:22.214 --> 00:34:23.630
ERIC BRECHNER: So
the comment here

00:34:23.630 --> 00:34:25.639
was that it's a sign of
a mature team regardless

00:34:25.639 --> 00:34:28.460
of what methodology they're
using, when they become really

00:34:28.460 --> 00:34:32.500
reliable both in terms
of quality and timing,

00:34:32.500 --> 00:34:35.320
their need to take care
of these little details

00:34:35.320 --> 00:34:37.429
about what-- just go down.

00:34:37.429 --> 00:34:39.934
And that's certainly
been my experience.

00:34:39.934 --> 00:34:41.412
AUDIENCE: [INAUDIBLE]

00:34:41.412 --> 00:34:43.120
ERIC BRECHNER: So the
quick question here

00:34:43.120 --> 00:34:47.750
was, in terms of the backlog,
do we fill it up as we go?

00:34:47.750 --> 00:34:49.120
And who does that?

00:34:49.120 --> 00:34:50.310
When does that happen?

00:34:50.310 --> 00:34:52.730
And the answer is yes,
we fill it up as we go.

00:34:52.730 --> 00:34:55.120
We do an insertion
sort into it, which is

00:34:55.120 --> 00:34:56.420
exactly what I've been doing.

00:34:56.420 --> 00:34:57.720
That's just what we do.

00:34:57.720 --> 00:35:00.310
And no we don't have any sprint
planning meetings or anything

00:35:00.310 --> 00:35:03.730
like that, which again
is more time focused

00:35:03.730 --> 00:35:06.435
on just delivering value,
and less time on overhead.

00:35:06.435 --> 00:35:07.790
AUDIENCE: [INAUDIBLE]

00:35:07.790 --> 00:35:10.380
ERIC BRECHNER: Right so the
follow on point was, yeah,

00:35:10.380 --> 00:35:12.780
but when you have a specific
due date you can't just

00:35:12.780 --> 00:35:15.920
arbitrarily insertion sort, you
need to make sure that it hits

00:35:15.920 --> 00:35:17.590
and place it accordingly.

00:35:17.590 --> 00:35:21.970
The experience of my team has
been that doesn't come up.

00:35:21.970 --> 00:35:23.220
And here's why.

00:35:23.220 --> 00:35:25.990
Because someone gives us an
absurd due date on an item

00:35:25.990 --> 00:35:28.930
that's not that important.

00:35:28.930 --> 00:35:30.830
That's because that's
their job, they

00:35:30.830 --> 00:35:32.940
assume that they are the
only ones in the world,

00:35:32.940 --> 00:35:34.710
and we must serve them.

00:35:34.710 --> 00:35:37.140
Fair enough, that's
everyone's right.

00:35:37.140 --> 00:35:39.010
So they give us
this thing, and they

00:35:39.010 --> 00:35:41.740
say we must have this tomorrow.

00:35:41.740 --> 00:35:44.150
And we say wow,
we're not going to be

00:35:44.150 --> 00:35:45.750
able to deliver
to you by tomorrow

00:35:45.750 --> 00:35:50.870
because we have way more
important things on our board.

00:35:50.870 --> 00:35:53.120
Oh but I am the most
important person in the world,

00:35:53.120 --> 00:35:55.310
you must do it in time for me.

00:35:55.310 --> 00:35:57.670
And then we show them the board.

00:35:57.670 --> 00:35:59.610
It's a great thing
about a physical board.

00:35:59.610 --> 00:36:03.160
Hey here's our board,
please place your sticky

00:36:03.160 --> 00:36:05.410
where you think it belongs.

00:36:05.410 --> 00:36:07.740
They put it on top, we
say, OK let me tell you

00:36:07.740 --> 00:36:11.410
what the top one is, it's
this, it's a KERNAL thing,

00:36:11.410 --> 00:36:13.310
and the one under that
is a driver thing,

00:36:13.310 --> 00:36:14.890
and the one after
that is something

00:36:14.890 --> 00:36:17.910
that the VP asked for.

00:36:17.910 --> 00:36:21.620
Oh, OK, well maybe here?

00:36:21.620 --> 00:36:24.630
OK, well that's this--
Oh, how about here?

00:36:24.630 --> 00:36:27.610
Looks about right good, A plus.

00:36:27.610 --> 00:36:30.392
Now you're going to get it
after we do those other things.

00:36:30.392 --> 00:36:32.850
We will do those other things,
and if they need an estimate

00:36:32.850 --> 00:36:34.690
obviously we can
provide an estimate.

00:36:34.690 --> 00:36:38.030
And then they can adjust
their dates accordingly.

00:36:38.030 --> 00:36:42.810
But again, the conversation
is about priorities.

00:36:42.810 --> 00:36:45.140
It's not about dates
as much anymore,

00:36:45.140 --> 00:36:47.140
because we will hit
the date, assuming

00:36:47.140 --> 00:36:49.429
that the priority is right.

00:36:49.429 --> 00:36:51.720
And I'd much rather have that
conversation because that

00:36:51.720 --> 00:36:53.800
sounds like a
business conversation,

00:36:53.800 --> 00:36:57.760
rather than a ooh I want it
by my birthday conversation.

00:36:57.760 --> 00:37:00.260
AUDIENCE: Dates aren't always
driven by the business though.

00:37:00.260 --> 00:37:01.960
ERIC BRECHNER: I
understand, and when

00:37:01.960 --> 00:37:03.750
dates aren't driven
by the business,

00:37:03.750 --> 00:37:05.420
we have a methodology
that handles that.

00:37:05.420 --> 00:37:07.860
And the priorities
would reflect it.

00:37:07.860 --> 00:37:09.580
But very often we
get requests that

00:37:09.580 --> 00:37:10.960
have nothing to do with that.

00:37:10.960 --> 00:37:15.350
They have to do with one team's
wanting to feel a certain way.

00:37:15.350 --> 00:37:17.719
It's not always the case,
not always the case,

00:37:17.719 --> 00:37:18.510
and I respect that.

00:37:18.510 --> 00:37:20.630
And this handles it just fine.

00:37:20.630 --> 00:37:24.361
I'm just saying, day-to-day
this is where we've landed.

00:37:24.361 --> 00:37:26.110
That has nothing to
do with Kanban, that's

00:37:26.110 --> 00:37:27.340
just how our team has landed.

00:37:27.340 --> 00:37:28.250
Yes?

00:37:28.250 --> 00:37:29.330
AUDIENCE: [INAUDIBLE]

00:37:29.330 --> 00:37:33.940
ERIC BRECHNER: So open ended
tasks, how do you handle those?

00:37:33.940 --> 00:37:35.580
Somewhere in here.

00:37:35.580 --> 00:37:37.625
OK, let's talk
about dependencies.

00:37:43.210 --> 00:37:44.710
I'm going to go
ahead and answer it.

00:37:44.710 --> 00:37:50.166
OK, so dependencies, and next
up will be when to launch.

00:37:50.166 --> 00:37:52.700
And we can do roles.

00:37:52.700 --> 00:37:56.710
So dependencies,
obviously, not everything

00:37:56.710 --> 00:37:59.180
shows up the way you
want it when you need.

00:37:59.180 --> 00:38:01.850
Even if you give
people due dates,

00:38:01.850 --> 00:38:03.700
and even if they
are good about that,

00:38:03.700 --> 00:38:06.630
sometimes people slip,
or they deliver to you

00:38:06.630 --> 00:38:09.370
and it's not quite working
the way you'd hoped.

00:38:09.370 --> 00:38:11.880
So how do you handle
that situation?

00:38:11.880 --> 00:38:15.114
So I'm assuming you've already
prioritized accordingly,

00:38:15.114 --> 00:38:17.030
they've already given
you an idea of when it's

00:38:17.030 --> 00:38:19.380
going to be ready,
and you placed things

00:38:19.380 --> 00:38:21.820
with that expectation,
then you're

00:38:21.820 --> 00:38:25.150
working on it, mix
it up to the top,

00:38:25.150 --> 00:38:26.950
you go and grab that dependency.

00:38:26.950 --> 00:38:29.720
You try and use it and
it's either not there

00:38:29.720 --> 00:38:30.879
or it's not working right.

00:38:30.879 --> 00:38:31.670
Now what do you do?

00:38:31.670 --> 00:38:34.810
Now you're stuck, you
can't continue work.

00:38:34.810 --> 00:38:36.030
What do you do?

00:38:36.030 --> 00:38:43.494
So what we do, is we go ahead
and added an extra column

00:38:43.494 --> 00:38:44.660
in the middle of our answer.

00:38:50.970 --> 00:38:54.710
This is small board,
we have a wider one.

00:38:54.710 --> 00:38:56.360
We had an extra
column called Track.

00:38:59.670 --> 00:39:03.740
And then we'll take the
dependency that stuck,

00:39:03.740 --> 00:39:04.714
and we'll put it there.

00:39:08.890 --> 00:39:10.870
All right now what
do we do there?

00:39:10.870 --> 00:39:12.210
What's happening there?

00:39:12.210 --> 00:39:15.110
So we're trying to work
on it, but it's stuck.

00:39:15.110 --> 00:39:17.420
Obviously we don't want
it to hold up all work

00:39:17.420 --> 00:39:20.609
and have everything just shut
down, but at the same time,

00:39:20.609 --> 00:39:22.025
we don't want to
just ignore this.

00:39:22.025 --> 00:39:24.186
This was the highest
priority item,

00:39:24.186 --> 00:39:25.560
there are expectations
around it,

00:39:25.560 --> 00:39:27.400
there may be due
dates around it.

00:39:27.400 --> 00:39:30.230
We need to meet our commitments,
and we take those commitments

00:39:30.230 --> 00:39:31.500
quite seriously.

00:39:31.500 --> 00:39:32.670
So what do we do?

00:39:32.670 --> 00:39:36.010
We put in the track
column, and then, that's

00:39:36.010 --> 00:39:37.460
assigned to somebody.

00:39:37.460 --> 00:39:39.276
Sometimes it's the
same developer that

00:39:39.276 --> 00:39:40.650
was supposed to
be working on it,

00:39:40.650 --> 00:39:43.030
sometimes we have someone
who works across teams,

00:39:43.030 --> 00:39:44.412
we call them program managers.

00:39:44.412 --> 00:39:46.120
And they're the ones
who are handling it,

00:39:46.120 --> 00:39:47.750
but it's assigned to somebody.

00:39:47.750 --> 00:39:49.680
And that person's
responsibility when

00:39:49.680 --> 00:39:53.930
that's in the track
column, is to drive that

00:39:53.930 --> 00:39:56.990
to the correct state.

00:39:56.990 --> 00:39:59.270
And maybe that correct
state is we work around it.

00:39:59.270 --> 00:40:02.330
Maybe that correct
state is we add the task

00:40:02.330 --> 00:40:06.130
that the other team hasn't
finished yet to our backlog,

00:40:06.130 --> 00:40:08.530
and we start working on them.

00:40:08.530 --> 00:40:10.050
They pop up to the
top here, they're

00:40:10.050 --> 00:40:11.140
the most important things.

00:40:11.140 --> 00:40:14.140
They go right up to the top
and we start working on those.

00:40:14.140 --> 00:40:16.980
Sometimes we change
what the feature is

00:40:16.980 --> 00:40:18.180
or what we're expecting.

00:40:18.180 --> 00:40:20.070
Maybe we lower the
priority, but we're

00:40:20.070 --> 00:40:24.230
going to do something
with that track task.

00:40:24.230 --> 00:40:25.800
And then every stand
up we're talking

00:40:25.800 --> 00:40:27.130
about those track tasks.

00:40:27.130 --> 00:40:32.320
Now the track tasks don't
add to the WIP limit.

00:40:32.320 --> 00:40:34.010
So we can continue
on work, they're

00:40:34.010 --> 00:40:36.390
not going to stop
the rest of the work.

00:40:36.390 --> 00:40:38.690
Of course, if we decide
to take on the work that's

00:40:38.690 --> 00:40:40.890
necessary to complete
that dependency

00:40:40.890 --> 00:40:43.590
from the other team-- because
we have to-- then of course

00:40:43.590 --> 00:40:45.670
that work will flow through.

00:40:45.670 --> 00:40:49.700
But eventually that
dependency will get unblocked

00:40:49.700 --> 00:40:51.850
because we're going to
work it hard every day.

00:40:51.850 --> 00:40:53.760
And by the way, this
comes up all the time.

00:40:53.760 --> 00:40:55.320
We typically have
two or three items

00:40:55.320 --> 00:40:59.230
that are in this track
column, because, you know,

00:40:59.230 --> 00:41:01.140
it's a tough world.

00:41:01.140 --> 00:41:04.880
As soon as it gets
unblocked, then it

00:41:04.880 --> 00:41:08.660
pops into the implement, because
it is the highest priority

00:41:08.660 --> 00:41:09.160
item.

00:41:09.160 --> 00:41:11.160
We're not going to take
something from the left,

00:41:11.160 --> 00:41:12.730
we're going to take something
from the track column

00:41:12.730 --> 00:41:13.813
as soon as it's unblocked.

00:41:13.813 --> 00:41:15.600
Because, it's by
definition, we're

00:41:15.600 --> 00:41:18.100
working on it before anything
else, it's the top priority.

00:41:18.100 --> 00:41:19.406
And then we work it through.

00:41:22.740 --> 00:41:27.700
All right, when to launch?

00:41:27.700 --> 00:41:33.130
So, you're working on a whole
bunch of different features,

00:41:33.130 --> 00:41:35.630
you're continuously
moving them through.

00:41:35.630 --> 00:41:38.310
Notice that unlike Scrum
or Waterfall or something

00:41:38.310 --> 00:41:42.584
like that, there isn't one
specific day when you're

00:41:42.584 --> 00:41:44.750
finished with something,
you're finished with things

00:41:44.750 --> 00:41:46.320
all the time.

00:41:46.320 --> 00:41:48.490
You're finishing
tasks all the time,

00:41:48.490 --> 00:41:51.770
and there's quality
bars for every step.

00:41:51.770 --> 00:41:54.800
So by the time it hits
the end, it's ready.

00:41:54.800 --> 00:41:56.900
It's ready for wherever
it's supposed to go.

00:41:56.900 --> 00:42:00.610
In our case, that's
either an RI into WinMain

00:42:00.610 --> 00:42:05.690
for when we're doing Windows,
or it's actually posting it out

00:42:05.690 --> 00:42:06.500
to Azure.

00:42:06.500 --> 00:42:08.480
It's part of the service.

00:42:08.480 --> 00:42:11.760
That's what happens at the
end of that, so it's done.

00:42:11.760 --> 00:42:14.810
So theoretically you can release
at any time, but, of course,

00:42:14.810 --> 00:42:15.800
that's a little silly.

00:42:15.800 --> 00:42:19.650
You want your releases to
have some coherency to them.

00:42:19.650 --> 00:42:23.200
So what we do for
things that are

00:42:23.200 --> 00:42:25.100
part of-- when it's
not just day-to-day--

00:42:25.100 --> 00:42:26.940
we can publish it all the time.

00:42:26.940 --> 00:42:28.910
And some of our stuff
works exactly that way.

00:42:28.910 --> 00:42:32.940
We just go to production all
the time with them, no big deal.

00:42:32.940 --> 00:42:35.500
But sometimes it's part
of a larger collection,

00:42:35.500 --> 00:42:37.740
and sometimes with a due date.

00:42:37.740 --> 00:42:40.630
And when it's like
that, then we wait

00:42:40.630 --> 00:42:42.920
until all the
stickies associated

00:42:42.920 --> 00:42:45.690
with that particular launch
that we were going to do

00:42:45.690 --> 00:42:47.280
are complete.

00:42:47.280 --> 00:42:48.840
And then when
they're all complete,

00:42:48.840 --> 00:42:52.840
they've all made it over
here, we then ship it.

00:42:52.840 --> 00:42:57.530
And, in the case of one of my
teams, we get ourselves a-- OK,

00:42:57.530 --> 00:43:05.000
this is like our little-- a
maple bar bacon cake, which

00:43:05.000 --> 00:43:08.910
is really delicious,
but not good for you.

00:43:08.910 --> 00:43:13.490
Anyway, so we celebrate
when that's done.

00:43:13.490 --> 00:43:17.170
Now if we've completed
the work before the rest

00:43:17.170 --> 00:43:20.100
of the organization completed
their work associated

00:43:20.100 --> 00:43:22.580
with that, we'll still
have the maple bark car.

00:43:22.580 --> 00:43:26.000
That's not going to be denied,
but we may not actually

00:43:26.000 --> 00:43:29.160
go out the door with it
and signify the release

00:43:29.160 --> 00:43:32.060
until everyone else
has reached that point.

00:43:32.060 --> 00:43:33.590
And sometimes when
it's something

00:43:33.590 --> 00:43:35.423
that has to go with a
bunch of other things,

00:43:35.423 --> 00:43:38.830
we actually need to track that
we have a special section here,

00:43:38.830 --> 00:43:41.050
in this last done
column for things that

00:43:41.050 --> 00:43:42.840
are waiting to go out the door.

00:43:42.840 --> 00:43:44.890
And we'll put it there
until it actually goes out

00:43:44.890 --> 00:43:46.723
the door with everybody
else, and then we'll

00:43:46.723 --> 00:43:49.440
move it into the
final done column.

00:43:49.440 --> 00:43:53.681
Did that answer the question
about when to launch?

00:43:53.681 --> 00:43:54.180
Roles.

00:43:58.080 --> 00:44:02.170
With Kanban there are
no specific roles.

00:44:02.170 --> 00:44:05.800
That isn't to say that people
don't generally have roles.

00:44:05.800 --> 00:44:10.060
They do on any team, but there's
no specific specified roles.

00:44:10.060 --> 00:44:11.890
That said, there are
some natural roles

00:44:11.890 --> 00:44:15.126
that people kind of
fall into on the teams

00:44:15.126 --> 00:44:16.750
that I run with
Kanban, and other teams

00:44:16.750 --> 00:44:19.960
I've known who use Kanban.

00:44:19.960 --> 00:44:22.530
There's the role of the
person who kind of runs

00:44:22.530 --> 00:44:24.480
stand up every day.

00:44:24.480 --> 00:44:27.010
That's one particular
person on each of my teams

00:44:27.010 --> 00:44:28.380
that's assigned to do that.

00:44:28.380 --> 00:44:29.676
Obviously other people fill in.

00:44:29.676 --> 00:44:31.050
There's nothing
special about it,

00:44:31.050 --> 00:44:32.760
they're just get up
there and kind of

00:44:32.760 --> 00:44:34.830
make sure the conversations
don't go completely

00:44:34.830 --> 00:44:37.680
off the deep end.

00:44:37.680 --> 00:44:40.190
So there's that role.

00:44:40.190 --> 00:44:42.620
We do projects,
we use this thing

00:44:42.620 --> 00:44:45.750
called TFS, which
is a lot like JIRA,

00:44:45.750 --> 00:44:48.800
or other work item
tracking systems.

00:44:48.800 --> 00:44:50.920
So there's a big work
item tracking system

00:44:50.920 --> 00:44:52.870
that we use inside of Windows.

00:44:52.870 --> 00:44:55.830
Windows Phone, and Xbox
are all using the same OS,

00:44:55.830 --> 00:44:59.420
coming soon to a PC near you.

00:44:59.420 --> 00:45:01.720
OK, fine it's Chrome.

00:45:01.720 --> 00:45:04.210
Anyway, it's all good.

00:45:04.210 --> 00:45:05.960
So we're all working
on the same operating

00:45:05.960 --> 00:45:07.690
system at the same
time, which means

00:45:07.690 --> 00:45:10.490
that we're kind of sharing at
a lot of status all the way up.

00:45:10.490 --> 00:45:13.380
And so what that
person does is that he

00:45:13.380 --> 00:45:17.330
picks a few minutes every day
and just transfers information

00:45:17.330 --> 00:45:20.330
about which stickies have moved
into the work item tracking

00:45:20.330 --> 00:45:21.280
system.

00:45:21.280 --> 00:45:24.800
And it takes him just
a few minutes each day.

00:45:24.800 --> 00:45:28.250
And that way everyone can see
what we're seeing on our board,

00:45:28.250 --> 00:45:30.400
but in the work item
tracking system.

00:45:30.400 --> 00:45:32.740
So those are sort of roles.

00:45:32.740 --> 00:45:35.790
The other roles are that
some members of the team kind

00:45:35.790 --> 00:45:38.750
of focus in on certain steps.

00:45:38.750 --> 00:45:43.760
If you had a formal test team--
we have a kind of DevOps type

00:45:43.760 --> 00:45:46.490
situation-- but if you
had a formal test team,

00:45:46.490 --> 00:45:49.560
maybe they would mostly be
the ones doing the validate.

00:45:49.560 --> 00:45:51.150
The dev team,
obviously, mostly does

00:45:51.150 --> 00:45:53.910
the implement sort of step,
and then the program managers

00:45:53.910 --> 00:45:55.650
and stuff mostly do
the breakdown step.

00:45:55.650 --> 00:45:58.060
But that varies.

00:45:58.060 --> 00:45:59.640
Any member of the
team can do this,

00:45:59.640 --> 00:46:00.920
which is kind of like Scrum.

00:46:00.920 --> 00:46:02.310
Any member of the
team can do it,

00:46:02.310 --> 00:46:04.600
but if you wanted to be formal
about it, you certainly could.

00:46:04.600 --> 00:46:06.220
There's nothing
specific in Kanban

00:46:06.220 --> 00:46:08.960
that says it has to
be a certain way.

00:46:08.960 --> 00:46:10.970
Right, yeah, so that's
exactly what happened.

00:46:10.970 --> 00:46:12.780
So the question was
about breakdown.

00:46:12.780 --> 00:46:15.230
There's the original
sticky, which was big,

00:46:15.230 --> 00:46:17.430
made up of a bunch
of different tasks,

00:46:17.430 --> 00:46:19.560
and it breaks down into
lots of different stickies.

00:46:19.560 --> 00:46:21.964
What we typically do is we'll
keep that original sticky,

00:46:21.964 --> 00:46:24.130
but we'll put it underneath
the pile of the stickies

00:46:24.130 --> 00:46:25.270
that it breaks down into.

00:46:25.270 --> 00:46:29.050
And that counts as one in
terms of the breakdown count,

00:46:29.050 --> 00:46:30.090
the WIP limit here.

00:46:30.090 --> 00:46:32.470
That counts as one bundle.

00:46:32.470 --> 00:46:34.520
And then we'll peel
those off one at a time

00:46:34.520 --> 00:46:36.190
and move them through.

00:46:36.190 --> 00:46:38.720
OK so the follow on
question to the roles

00:46:38.720 --> 00:46:42.170
was is there the equivalent
of a product owner?

00:46:42.170 --> 00:46:45.870
And the short answer
to that is, it varies.

00:46:45.870 --> 00:46:47.620
It depends on the feature.

00:46:47.620 --> 00:46:49.770
So some features,
if they're driven

00:46:49.770 --> 00:46:55.050
from partners to what we call
the PM, a program manager,

00:46:55.050 --> 00:46:57.200
they act as that product owner.

00:46:57.200 --> 00:46:59.710
They know that they've been
working with those other teams,

00:46:59.710 --> 00:47:01.640
they know exactly what
they're expecting,

00:47:01.640 --> 00:47:03.050
they kind of represent them.

00:47:03.050 --> 00:47:05.500
But there are other features
that are brought up maybe

00:47:05.500 --> 00:47:08.270
they're infrastructure
fixes, maybe they're

00:47:08.270 --> 00:47:10.650
taking care of technical
debt, maybe they're

00:47:10.650 --> 00:47:13.110
a feature that someone on the
team came up with themselves,

00:47:13.110 --> 00:47:14.860
and they act more as
the product owner.

00:47:14.860 --> 00:47:18.670
So it's not a it's not a
very specific static role.

00:47:18.670 --> 00:47:22.170
The team just works together.

00:47:22.170 --> 00:47:24.900
But you could have it be--
there's nothing in Kanban that

00:47:24.900 --> 00:47:27.760
keeps you from having
it be a particular role,

00:47:27.760 --> 00:47:29.630
it's just it doesn't
say that you have to.

00:47:29.630 --> 00:47:30.130
Yeah?

00:47:30.130 --> 00:47:32.710
AUDIENCE: Is there a
concept of swarming?

00:47:32.710 --> 00:47:34.950
ERIC BRECHNER: Absolutely
so the question was,

00:47:34.950 --> 00:47:36.870
is there a concept of swarming?

00:47:36.870 --> 00:47:37.560
Absolutely.

00:47:37.560 --> 00:47:41.550
So let's say we've got
a situation-- so where

00:47:41.550 --> 00:47:45.590
is the one about tasks too
big-- let's talk about that one.

00:47:45.590 --> 00:47:47.680
OK so let's say
you've got a task,

00:47:47.680 --> 00:47:51.310
and we'll do open-ended
tasks as well, OK.

00:47:51.310 --> 00:47:54.315
So let's say you've
got a task, and you

00:47:54.315 --> 00:47:56.690
thought it was going to be
one to three days or something

00:47:56.690 --> 00:48:01.599
like that, but it turns
out it's a monster.

00:48:01.599 --> 00:48:03.390
When you started going
into it, or maybe it

00:48:03.390 --> 00:48:05.130
was kind of an open
ended sort of thing,

00:48:05.130 --> 00:48:08.880
it just ended up being way
bigger than you thought.

00:48:08.880 --> 00:48:12.000
If that were the case,
then what happened

00:48:12.000 --> 00:48:17.000
is on the board you see
the WIP limit here is two.

00:48:17.000 --> 00:48:20.760
So what happens on the board
is that you'd have your items

00:48:20.760 --> 00:48:25.310
here, and they're not moving.

00:48:25.310 --> 00:48:26.620
They're just sitting there.

00:48:26.620 --> 00:48:28.000
They're not moving.

00:48:28.000 --> 00:48:32.560
In the meantime the person has
already broken down a step,

00:48:32.560 --> 00:48:33.950
these are all validated.

00:48:33.950 --> 00:48:37.630
Now you've got a situation
in which this person can't

00:48:37.630 --> 00:48:41.310
do any more breakdown, there's
already one item in there.

00:48:41.310 --> 00:48:43.009
So they're not supposed
to do that work.

00:48:43.009 --> 00:48:44.550
The validate people
they've finished,

00:48:44.550 --> 00:48:46.700
everything's all
validated because they're

00:48:46.700 --> 00:48:47.857
working on a flow.

00:48:47.857 --> 00:48:49.190
And now everything's stuck here.

00:48:49.190 --> 00:48:52.830
It's obvious, you've
got people who

00:48:52.830 --> 00:48:54.910
are supposed to be doing
breakdown and validate,

00:48:54.910 --> 00:48:55.970
they got nothing to do.

00:48:59.270 --> 00:49:02.950
Now on a regular team without
any project management

00:49:02.950 --> 00:49:05.577
stuff going on
there, this person

00:49:05.577 --> 00:49:07.410
just keep breaking down
more and more stuff,

00:49:07.410 --> 00:49:09.390
building up a crap
load of the things

00:49:09.390 --> 00:49:11.230
that you're not getting to now.

00:49:11.230 --> 00:49:13.580
While the validate people,
who knows what they would do?

00:49:13.580 --> 00:49:17.980
Work on more test harnesses,
I don't know, something.

00:49:17.980 --> 00:49:20.877
But what they wouldn't be
doing is solving this problem.

00:49:20.877 --> 00:49:22.710
But in Kanban you're
not allowed to do that.

00:49:22.710 --> 00:49:26.180
These WIP limits force you
to stop and you notice,

00:49:26.180 --> 00:49:29.240
you notice right away,
typically same day.

00:49:29.240 --> 00:49:32.270
If not, at the next stand
up the following day,

00:49:32.270 --> 00:49:35.807
you notice something's wrong.

00:49:35.807 --> 00:49:37.390
And when you notice
something's wrong,

00:49:37.390 --> 00:49:39.306
there's a bunch of things
you can do about it.

00:49:39.306 --> 00:49:41.140
Obviously, you're
going to talk about it.

00:49:41.140 --> 00:49:43.450
Why is this stuck?

00:49:43.450 --> 00:49:44.840
And then you can swarm to it.

00:49:44.840 --> 00:49:47.730
You can have everyone who now
is idle-- they can't do anything

00:49:47.730 --> 00:49:49.642
else-- they can swarm
to it and help out,

00:49:49.642 --> 00:49:51.850
they can break it down, they
can talk to other teams,

00:49:51.850 --> 00:49:54.940
they can-- obviously
depends on the situation.

00:49:54.940 --> 00:49:58.950
But you get to just
attack that problem.

00:49:58.950 --> 00:50:01.700
And again it's a
immediately evident

00:50:01.700 --> 00:50:04.966
because you can see it on the
board, people are just stuck.

00:50:09.560 --> 00:50:10.380
That's what you do.

00:50:10.380 --> 00:50:13.090
Did I answer the question
about tasks too big?

00:50:13.090 --> 00:50:13.680
Oh good.

00:50:16.850 --> 00:50:20.210
For open ended tasks
you would just--

00:50:20.210 --> 00:50:23.080
I'll just leave it there,
I'm working on answering it.

00:50:23.080 --> 00:50:27.250
For an open ended task, you just
break down as much as you can,

00:50:27.250 --> 00:50:29.940
start working on it, it
becomes other things,

00:50:29.940 --> 00:50:32.772
just add those back
more to the backlog.

00:50:32.772 --> 00:50:34.980
There's no reason why you
can't use this in research,

00:50:34.980 --> 00:50:39.100
or really anything else that
follows just kind of a pattern

00:50:39.100 --> 00:50:39.752
to it.

00:50:43.880 --> 00:50:47.630
For the open ended
one-- oh, here's

00:50:47.630 --> 00:50:50.620
something that comes up
fairly frequently actually.

00:50:50.620 --> 00:50:53.070
Occasionally, we
have features that

00:50:53.070 --> 00:50:56.710
are so big and complicated that
we can't even do the breakdown.

00:50:56.710 --> 00:50:59.350
A lot of analysis needs
to go to even to doing

00:50:59.350 --> 00:51:00.320
the breakdown for them.

00:51:00.320 --> 00:51:03.990
They're just big
and hairy and yuck.

00:51:03.990 --> 00:51:07.510
In that case, we take
that sticky for them

00:51:07.510 --> 00:51:13.600
and we say this is going to
be the design document task.

00:51:13.600 --> 00:51:15.810
And now instead of
actually implementing

00:51:15.810 --> 00:51:18.200
it, what we do in
the implement step

00:51:18.200 --> 00:51:20.110
is we write the design document.

00:51:20.110 --> 00:51:21.850
And well first in
the breakdown, we

00:51:21.850 --> 00:51:23.275
break down the design document.

00:51:23.275 --> 00:51:25.650
First we're going to research
all these different things,

00:51:25.650 --> 00:51:27.700
we're going to have to talk
to these different people,

00:51:27.700 --> 00:51:29.440
we're going to come up
with an architecture,

00:51:29.440 --> 00:51:31.481
then we're going to write
up the design document.

00:51:31.481 --> 00:51:34.260
So we break it down and then
we move those stickies through.

00:51:34.260 --> 00:51:36.030
The validate step
becomes reviewing

00:51:36.030 --> 00:51:37.839
that with the rest of
the team, making sure

00:51:37.839 --> 00:51:39.380
we didn't miss
anything and what not.

00:51:39.380 --> 00:51:41.254
And then by the time
the whole thing is done,

00:51:41.254 --> 00:51:43.860
now we actually have
a fully fleshed out

00:51:43.860 --> 00:51:46.120
design for that big thing.

00:51:46.120 --> 00:51:48.670
And now we can actually
do the breakdown.

00:51:48.670 --> 00:51:52.870
So that's an example of an
open ended sort of thing.

00:51:52.870 --> 00:51:55.120
Did that answer the open
ended task question?

00:51:58.620 --> 00:52:00.940
So that's assignment,
so I will talk

00:52:00.940 --> 00:52:02.284
about assignment in a moment.

00:52:02.284 --> 00:52:04.200
Was the rest of the
question answered for you?

00:52:06.760 --> 00:52:08.870
OK.

00:52:08.870 --> 00:52:10.200
Ah.

00:52:10.200 --> 00:52:11.450
I'll go here.

00:52:11.450 --> 00:52:16.790
All right, the Kanban cop
still didn't show up, I'm OK.

00:52:16.790 --> 00:52:20.600
So let's talk a bit
about assignment.

00:52:20.600 --> 00:52:21.940
So how do you assign tasks?

00:52:21.940 --> 00:52:26.230
Well tasks comes up, someone
has finished something.

00:52:26.230 --> 00:52:29.180
There's an open slot,
the WIP limit is two,

00:52:29.180 --> 00:52:30.660
but now there's
just one in there.

00:52:30.660 --> 00:52:32.540
I can fit in
another one, we just

00:52:32.540 --> 00:52:37.530
pull the next one in
priority order in, ta da.

00:52:37.530 --> 00:52:38.460
We're set.

00:52:38.460 --> 00:52:40.350
And who gets assigned to that?

00:52:40.350 --> 00:52:43.130
The person who's available.

00:52:43.130 --> 00:52:44.470
And then they just work on it.

00:52:44.470 --> 00:52:46.650
Typically we put that
person's initials on it

00:52:46.650 --> 00:52:48.820
so we can keep track
of who's doing what.

00:52:48.820 --> 00:52:50.930
But that's all there is to it.

00:52:50.930 --> 00:52:52.800
Now occasionally,
of course, there

00:52:52.800 --> 00:52:56.670
are tasks that only
certain people can do.

00:52:56.670 --> 00:52:58.950
Maybe it's doing that
complicated design,

00:52:58.950 --> 00:53:02.410
maybe it's a particular feature
area that's really tricky

00:53:02.410 --> 00:53:05.130
and you need some new super
experienced in that area.

00:53:05.130 --> 00:53:06.440
So what do you do then?

00:53:06.440 --> 00:53:08.410
You have a few
different options.

00:53:08.410 --> 00:53:11.660
One, you could
move it into track

00:53:11.660 --> 00:53:13.660
and wait for that person
to become available.

00:53:13.660 --> 00:53:15.982
It's blocked, you can't
do anything about it,

00:53:15.982 --> 00:53:17.940
you're tracking until
that person is available.

00:53:17.940 --> 00:53:19.773
And then you're getting
all over that person

00:53:19.773 --> 00:53:21.689
to finish up what they're doing.

00:53:21.689 --> 00:53:24.230
You could obviously have people
swap what they're working on,

00:53:24.230 --> 00:53:25.680
of course.

00:53:25.680 --> 00:53:29.290
My preferred approach
to that situation

00:53:29.290 --> 00:53:31.380
is to assign it to the
next available person,

00:53:31.380 --> 00:53:33.580
even though they're
not qualified.

00:53:33.580 --> 00:53:38.070
The reason why I prefer that is
that I hate having bottlenecks,

00:53:38.070 --> 00:53:42.670
and I hate being dependent on
a single person for any one

00:53:42.670 --> 00:53:44.960
particular area of
what we're working on.

00:53:44.960 --> 00:53:46.640
That's scary to me.

00:53:46.640 --> 00:53:48.800
It's scary because that
person can get sick,

00:53:48.800 --> 00:53:50.950
that person could win the
lottery, that person may

00:53:50.950 --> 00:53:53.950
have a baby, that person's
parents could get ill,

00:53:53.950 --> 00:53:55.010
who knows.

00:53:55.010 --> 00:53:59.130
Stuff happens, and if
the success of my team

00:53:59.130 --> 00:54:02.780
hinges on one individual,
I've got a problem.

00:54:02.780 --> 00:54:06.430
So I'd much rather assign
it to who's ever available.

00:54:06.430 --> 00:54:10.210
And then I'll have the
person who's better qualified

00:54:10.210 --> 00:54:12.100
basically buddy up with them.

00:54:12.100 --> 00:54:13.750
Now they got their
main assignment,

00:54:13.750 --> 00:54:16.070
they're not working on
this thing full time,

00:54:16.070 --> 00:54:18.940
but they're there to do all
the design reviews and code

00:54:18.940 --> 00:54:22.510
reviews, they're there to
give them advice and so on.

00:54:22.510 --> 00:54:24.260
And that way I'm going
to bring someone up

00:54:24.260 --> 00:54:26.750
to speed on it so now
I don't have this area

00:54:26.750 --> 00:54:28.790
with a single point of failure.

00:54:28.790 --> 00:54:31.620
Does that answer the
assignment question?

00:54:31.620 --> 00:54:34.160
She actually had to go.

00:54:34.160 --> 00:54:35.870
We're good?

00:54:35.870 --> 00:54:37.460
Still kind of over here.

00:54:37.460 --> 00:54:40.140
The following question of
this was, what about long term

00:54:40.140 --> 00:54:41.079
projects?

00:54:41.079 --> 00:54:43.370
If we are assigning different
tasks to different people

00:54:43.370 --> 00:54:47.550
all the time, you want some
continuity with those projects.

00:54:47.550 --> 00:54:50.140
Typically that works out by
itself because in the breakdown

00:54:50.140 --> 00:54:53.584
you've got this whole stack
of stickies here for that.

00:54:53.584 --> 00:54:55.000
And usually we
have more than one.

00:54:55.000 --> 00:54:57.810
I have one here because
it's one person.

00:54:57.810 --> 00:55:00.910
But often people
just keep peeling off

00:55:00.910 --> 00:55:02.670
that stack as they finish stuff.

00:55:02.670 --> 00:55:06.460
So the same person tends
to be on it the whole time.

00:55:06.460 --> 00:55:10.770
But if the flow of work
is such that things

00:55:10.770 --> 00:55:13.690
are getting held up
because of one person,

00:55:13.690 --> 00:55:15.840
we need to be flexible.

00:55:15.840 --> 00:55:17.910
And we'll get back
to that normality

00:55:17.910 --> 00:55:19.690
where one person who's
the real expert on

00:55:19.690 --> 00:55:22.680
is working on all the time
very quickly after that.

00:55:22.680 --> 00:55:24.707
But we don't want to
hold up our customers,

00:55:24.707 --> 00:55:26.290
we don't want to
hold up our partners,

00:55:26.290 --> 00:55:28.210
we don't want to hold up
the whole thing just because

00:55:28.210 --> 00:55:28.900
of one person.

00:55:28.900 --> 00:55:31.170
That's not a good place to be.

00:55:31.170 --> 00:55:35.000
Does that answer the question?

00:55:35.000 --> 00:55:40.214
All right, let's to how large a
team and let's do large scale.

00:55:44.130 --> 00:55:46.740
So how large a team can you do?

00:55:46.740 --> 00:55:49.480
There are documented
cases of people

00:55:49.480 --> 00:55:53.770
having Kanban serving
a team of 70 people.

00:55:53.770 --> 00:55:55.750
That's a lot.

00:55:55.750 --> 00:55:59.770
They need a big room
and a big board.

00:55:59.770 --> 00:56:04.339
But they do it and their stand
ups are less than 15 minutes.

00:56:04.339 --> 00:56:06.380
Because their stand ups
aren't about what did you

00:56:06.380 --> 00:56:07.690
do yesterday?

00:56:07.690 --> 00:56:09.390
What are you going
to do tomorrow?

00:56:09.390 --> 00:56:11.820
Because you know,
it's on the board.

00:56:11.820 --> 00:56:13.960
That's already been
documented, and they've already

00:56:13.960 --> 00:56:15.580
moved around their stickies.

00:56:15.580 --> 00:56:17.680
So that doesn't
take up any time.

00:56:17.680 --> 00:56:19.660
The only time that you
spend in the daily stand

00:56:19.660 --> 00:56:23.130
up, especially with that large
of group, is talk about issues

00:56:23.130 --> 00:56:25.720
that we talked about earlier,
where someone's blocked.

00:56:25.720 --> 00:56:28.330
You focus on the blocking
items, and that's usually

00:56:28.330 --> 00:56:30.830
a small percentage of the
overall items on the board,

00:56:30.830 --> 00:56:32.860
so it doesn't take
that long to cover it.

00:56:32.860 --> 00:56:35.590
However, that's an
awfully big thing

00:56:35.590 --> 00:56:38.490
I can tell you for the teams
that I've run Kanban with,

00:56:38.490 --> 00:56:43.390
they've been in the range
of four to 10 people.

00:56:43.390 --> 00:56:44.750
And I like it that way.

00:56:44.750 --> 00:56:46.890
There's a lot of
camaraderie on the team,

00:56:46.890 --> 00:56:50.690
people can cover for
one another easily.

00:56:50.690 --> 00:56:54.380
Talking about the Kanban
doesn't take very long at all.

00:56:54.380 --> 00:56:56.830
It's just a nice size.

00:56:56.830 --> 00:56:59.630
And it's a multi-discipline.

00:56:59.630 --> 00:57:01.124
These are
multi-disciplinary teams,

00:57:01.124 --> 00:57:02.540
running through a
bunch of things.

00:57:02.540 --> 00:57:04.373
You could use it within
the same discipline,

00:57:04.373 --> 00:57:07.940
and there are teams in Xbox
that are all the same discipline

00:57:07.940 --> 00:57:11.450
using Kanban, but it doesn't
work quite as nicely, really.

00:57:11.450 --> 00:57:13.990
It's better, I think,
cross-discipline.

00:57:13.990 --> 00:57:16.320
In terms of the
number of disciplines,

00:57:16.320 --> 00:57:19.680
that you can have
using Kanban I've

00:57:19.680 --> 00:57:23.390
seen five, six different
disciplines using it.

00:57:23.390 --> 00:57:28.740
I know for my own teams, we
have typically three on any one

00:57:28.740 --> 00:57:30.360
given team.

00:57:30.360 --> 00:57:37.730
But I've also seen designers,
obviously testers, things

00:57:37.730 --> 00:57:38.230
like that.

00:57:38.230 --> 00:57:40.140
A bunch of different
disciplines.

00:57:40.140 --> 00:57:43.670
You can have as many steps
as you like, as well.

00:57:43.670 --> 00:57:46.470
I'm showing you three
steps here, plus a backlog.

00:57:46.470 --> 00:57:49.660
But you can have as
many steps as you want.

00:57:49.660 --> 00:57:53.010
Just how you run, it's
very flexible that way.

00:57:53.010 --> 00:57:55.890
And you can change
the board at any time,

00:57:55.890 --> 00:58:01.440
because it's stickies and white
board, it's not like in stone.

00:58:01.440 --> 00:58:05.850
Did that answer the question
for how large a team?

00:58:05.850 --> 00:58:08.479
All right so how do
you handle large scale?

00:58:08.479 --> 00:58:10.020
Obviously if you're
running something

00:58:10.020 --> 00:58:14.020
as big as Windows, or
Windows Phone and Xbox,

00:58:14.020 --> 00:58:15.949
something of that
scale, you're not

00:58:15.949 --> 00:58:17.990
going to just have a bunch
of stickies on a board

00:58:17.990 --> 00:58:19.040
and manage them.

00:58:19.040 --> 00:58:20.700
Of course not.

00:58:20.700 --> 00:58:23.190
So there we're going
to do a whole bunch

00:58:23.190 --> 00:58:25.810
of top down analysis
with the executives, who

00:58:25.810 --> 00:58:27.510
are going to
determine what is it

00:58:27.510 --> 00:58:30.490
that the next version of
Windows is going to have.

00:58:30.490 --> 00:58:32.490
What are the main scenarios
it's going to have?

00:58:32.490 --> 00:58:35.990
What are the main
differentiation

00:58:35.990 --> 00:58:38.460
in the market we're going
to have from our competitors

00:58:38.460 --> 00:58:39.942
and also our previous versions?

00:58:39.942 --> 00:58:40.900
All that sort of thing.

00:58:40.900 --> 00:58:42.720
We're going to a ton
of market research,

00:58:42.720 --> 00:58:44.303
we're going to have
tons of designers,

00:58:44.303 --> 00:58:47.230
we're going to have a bunch
of business development

00:58:47.230 --> 00:58:50.715
people, sales,
marketing, the whole bit.

00:58:50.715 --> 00:58:52.090
They're all going
to get together

00:58:52.090 --> 00:58:53.230
and they're going
to talk about what

00:58:53.230 --> 00:58:55.396
are the big themes, what
are the big scenarios we're

00:58:55.396 --> 00:58:56.570
going to support.

00:58:56.570 --> 00:59:00.150
Once they do that, at the
same time, the organizations

00:59:00.150 --> 00:59:03.220
themselves, individual teams
of-- as I was mentioning

00:59:03.220 --> 00:59:05.200
4 to 10 people--
they're going to come up

00:59:05.200 --> 00:59:07.090
with all the cool stuff
that they want to do.

00:59:07.090 --> 00:59:08.980
Plus all the stuff,
the technical debt

00:59:08.980 --> 00:59:10.500
they're going to want fixed.

00:59:10.500 --> 00:59:12.720
So they're going to
bubble all that up

00:59:12.720 --> 00:59:15.370
as technical opportunity,
and then that

00:59:15.370 --> 00:59:18.940
gets mixed in at the top with
all of the high level stuff

00:59:18.940 --> 00:59:20.060
that we're going to do.

00:59:20.060 --> 00:59:23.630
And then there's meetings
about that and everything else,

00:59:23.630 --> 00:59:27.290
and you kind of cull
it down per group.

00:59:27.290 --> 00:59:30.430
Basically at my level
is where it gets culled.

00:59:30.430 --> 00:59:33.720
For each group, what are they
actually going to focus on?

00:59:33.720 --> 00:59:35.220
Now you've got a
set of stuff you're

00:59:35.220 --> 00:59:38.314
going to focus on,
from that-- this

00:59:38.314 --> 00:59:40.230
is the part of the
scenario you're working on,

00:59:40.230 --> 00:59:41.850
of these scenarios
you're working on.

00:59:41.850 --> 00:59:43.270
Here's the technical
debt that got approved

00:59:43.270 --> 00:59:44.520
that you can go ahead and fix.

00:59:44.520 --> 00:59:46.410
Or here's the amount
of time that we have

00:59:46.410 --> 00:59:47.670
that we can dedicate to that.

00:59:47.670 --> 00:59:49.940
However that looks,
that particular release.

00:59:49.940 --> 00:59:54.710
And so now we've got a bunch
of stuff we're supposed to do.

00:59:54.710 --> 00:59:57.920
At that point then we go
through the same thing

00:59:57.920 --> 00:59:59.570
that I just talked about here.

00:59:59.570 --> 01:00:02.185
We go ahead and prioritize
our backlog, we order it

01:00:02.185 --> 01:00:04.440
and everything else,
then we have discussions

01:00:04.440 --> 01:00:06.652
with the other teams.

01:00:06.652 --> 01:00:08.860
You know, the other teams
that are dependent upon us,

01:00:08.860 --> 01:00:10.749
to make sure we're lining up.

01:00:10.749 --> 01:00:12.540
My favorite way of
doing that is putting it

01:00:12.540 --> 01:00:16.540
on a huge board that's laid
out in time, in time sequence,

01:00:16.540 --> 01:00:19.260
and the different teams on
different rows of that board.

01:00:19.260 --> 01:00:20.719
And you put up your things.

01:00:20.719 --> 01:00:22.510
You don't need a precise
estimate for this,

01:00:22.510 --> 01:00:24.530
just kind of what month
things are landing.

01:00:24.530 --> 01:00:26.770
And then everyone
has a hissy fit

01:00:26.770 --> 01:00:28.790
and you meet with each
other and all that.

01:00:28.790 --> 01:00:31.600
And you rearrange
things accordingly,

01:00:31.600 --> 01:00:34.210
and eventually you get to a
point where everyone's like, OK

01:00:34.210 --> 01:00:37.090
that seems legit, until the
next horrible thing happens

01:00:37.090 --> 01:00:38.750
and the whole thing
gets tossed out.

01:00:38.750 --> 01:00:41.490
And then, now you
have your ordering,

01:00:41.490 --> 01:00:44.440
you put that onto
your backlog, done.

01:00:44.440 --> 01:00:47.600
So that's how we do it
at very large scale,

01:00:47.600 --> 01:00:50.440
and then we'll revisit that
every few months to make

01:00:50.440 --> 01:00:51.990
sure we're still
on the same page.

01:00:51.990 --> 01:00:54.660
And of course, we're revisiting
the specific ordering

01:00:54.660 --> 01:00:58.330
of the backlog every day
as new stuff comes in.

01:00:58.330 --> 01:01:00.170
But that's basically
how it works.

01:01:00.170 --> 01:01:04.260
All of that, it's a lot
of work, for something

01:01:04.260 --> 01:01:05.950
the size of Windows.

01:01:05.950 --> 01:01:08.250
You know, that often
takes a few months to do.

01:01:08.250 --> 01:01:11.410
So we don't do it every
month or anything like that.

01:01:11.410 --> 01:01:14.370
We're doing that big
operation once a year,

01:01:14.370 --> 01:01:17.210
and then the resetting
maybe once every few months.

01:01:20.210 --> 01:01:23.055
Excuse me, does that
answer the question?

01:01:27.310 --> 01:01:31.940
All right, adapting from X
and setting expectations with

01:01:31.940 --> 01:01:34.430
stakeholders.

01:01:34.430 --> 01:01:39.660
All right, adapting
from Scrum or waterfall.

01:01:39.660 --> 01:01:41.770
I say adapting there
very specifically,

01:01:41.770 --> 01:01:45.827
because, as you can see, it's
not dramatically different.

01:01:48.410 --> 01:01:51.090
When I had a waterfall
team switchover,

01:01:51.090 --> 01:01:53.200
the way I described
it to them is

01:01:53.200 --> 01:01:55.310
that OK we're going to
put the work on a board,

01:01:55.310 --> 01:01:58.820
and everyone was like oh, OK,
we'll put the work on a board.

01:01:58.820 --> 01:02:00.760
It's not that crazy thing to do.

01:02:00.760 --> 01:02:03.510
So we're going to put
the work on the board,

01:02:03.510 --> 01:02:05.052
we're going to have
these WIP limits,

01:02:05.052 --> 01:02:06.759
but all we're going
to do is exactly what

01:02:06.759 --> 01:02:09.270
you're doing before, when you're
doing traditional waterfall

01:02:09.270 --> 01:02:09.830
thing.

01:02:09.830 --> 01:02:11.413
We're going to spec
stuff, we're going

01:02:11.413 --> 01:02:13.240
to implement it, we're
going to test it,

01:02:13.240 --> 01:02:14.524
just like you did before.

01:02:14.524 --> 01:02:15.940
The only difference
is we're going

01:02:15.940 --> 01:02:19.520
to do a small batch at a time,
rather than a whole crud load

01:02:19.520 --> 01:02:23.250
of things at once, we're going
to do just a few at a time.

01:02:23.250 --> 01:02:24.590
Otherwise it's the same.

01:02:24.590 --> 01:02:27.535
Oh, and by the way, we're
going to track it on a board.

01:02:27.535 --> 01:02:29.950
They were like, oh.

01:02:29.950 --> 01:02:32.580
OK, and then they do it.

01:02:32.580 --> 01:02:35.310
And within a week or two,
it's like they've been

01:02:35.310 --> 01:02:36.940
doing it their whole lives.

01:02:36.940 --> 01:02:38.780
So it's pretty straightforward.

01:02:38.780 --> 01:02:43.511
For Scrum, for the Scrum
teams, I said great.

01:02:43.511 --> 01:02:45.010
I just want you to
put on the board,

01:02:45.010 --> 01:02:46.680
I want to obey the WIP limits.

01:02:46.680 --> 01:02:48.680
They already had a board
that they were tracking

01:02:48.680 --> 01:02:50.010
a lot of the same stuff.

01:02:50.010 --> 01:02:52.265
So you're going to have
WIP limits from now on,

01:02:52.265 --> 01:02:54.390
but you can do all the
things you're used to doing.

01:02:54.390 --> 01:02:56.920
You can do your sprint
planning, and you

01:02:56.920 --> 01:03:00.220
can do your sprint reviews,
you can do retrospectives,

01:03:00.220 --> 01:03:01.154
and demos.

01:03:01.154 --> 01:03:03.070
You can do all that stuff
on the same schedule

01:03:03.070 --> 01:03:03.735
you were doing before.

01:03:03.735 --> 01:03:06.026
You don't have to change a
thing, just start keeping it

01:03:06.026 --> 01:03:07.694
on a board, that's all I want.

01:03:07.694 --> 01:03:09.360
If you want to drop
any of those things,

01:03:09.360 --> 01:03:12.410
you can because you don't
need them, but I understand,

01:03:12.410 --> 01:03:13.620
you're used to Scrum.

01:03:13.620 --> 01:03:14.780
It's all good.

01:03:14.780 --> 01:03:16.750
Keep doing them.

01:03:16.750 --> 01:03:19.696
And they did, they
kept doing them.

01:03:19.696 --> 01:03:21.900
And slowly but
surely they realized

01:03:21.900 --> 01:03:24.620
they didn't need to
do them, and so they

01:03:24.620 --> 01:03:28.570
stopped because they
were wasting their time.

01:03:28.570 --> 01:03:30.360
So then they slowly
but surely stopped

01:03:30.360 --> 01:03:32.020
having the sprint
planning and stopped

01:03:32.020 --> 01:03:34.520
doing all those other
things, and just

01:03:34.520 --> 01:03:38.170
did the basics here because
that's all that was needed.

01:03:38.170 --> 01:03:40.926
But it was a very simple
transition for them.

01:03:40.926 --> 01:03:42.800
And, like I said, it's
more of an adaptation.

01:03:42.800 --> 01:03:45.170
You're just kind of
adding something in,

01:03:45.170 --> 01:03:49.630
that's pretty simple,
pretty intuitive.

01:03:49.630 --> 01:03:52.149
And then using it,
and then slowly

01:03:52.149 --> 01:03:53.690
but surely you
realize you don't need

01:03:53.690 --> 01:03:57.020
any of the rest of that stuff.

01:03:57.020 --> 01:03:59.980
If you like the idea, all this
stuff and all these questions

01:03:59.980 --> 01:04:01.970
that I've answered
today, as well as

01:04:01.970 --> 01:04:04.200
the ones that are left
here, I do in fact talk

01:04:04.200 --> 01:04:05.090
about in the book.

01:04:05.090 --> 01:04:08.690
I know it's hard to believe,
it's so thin, but in fact I do.

01:04:08.690 --> 01:04:10.480
There's a
troubleshooting section

01:04:10.480 --> 01:04:12.785
that talks about-- I
basically modeled it

01:04:12.785 --> 01:04:15.074
after when you get an
Xbox and you open it up

01:04:15.074 --> 01:04:17.490
and then there's a quick start
guide and a troubleshooting

01:04:17.490 --> 01:04:20.250
thing, and then there's
more details online.

01:04:20.250 --> 01:04:22.200
I basically modeled
the book the same way

01:04:22.200 --> 01:04:24.740
because I figured people just
want something quick to use.

01:04:24.740 --> 01:04:26.180
And it's so simple.

01:04:26.180 --> 01:04:29.560
So thanks very much, and
I'll stay for more questions.

