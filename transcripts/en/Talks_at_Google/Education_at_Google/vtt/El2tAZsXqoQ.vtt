WEBVTT
Kind: captions
Language: en

00:00:01.432 --> 00:00:02.890
MAGGIE JOHNSON:
The way that Google

00:00:02.890 --> 00:00:06.680
started was an academic venture.

00:00:06.680 --> 00:00:08.810
JEFF DEAN: How do you
find interesting problems

00:00:08.810 --> 00:00:09.490
in the world?

00:00:09.490 --> 00:00:11.740
ALFRED SPECTOR: Google
depends on academia.

00:00:11.740 --> 00:00:14.100
So many of the good ideas
that we have brought forward

00:00:14.100 --> 00:00:15.920
to the world come from academia.

00:00:15.920 --> 00:00:18.860
JEFF DEAN: One of the real
reasons to engage with academia

00:00:18.860 --> 00:00:20.571
is to get a really
fresh perspective.

00:00:20.571 --> 00:00:22.070
MAGGIE JOHNSON: We
empower academics

00:00:22.070 --> 00:00:23.290
to work on real problems.

00:00:23.290 --> 00:00:25.700
And in the other
direction, academics

00:00:25.700 --> 00:00:28.290
bring ideas and
new approaches that

00:00:28.290 --> 00:00:31.400
are put into practice
much more quickly

00:00:31.400 --> 00:00:33.344
than in an academic environment.

00:00:33.344 --> 00:00:34.760
JEFF DEAN: Oh,
that's interesting.

00:00:34.760 --> 00:00:35.551
That's interesting.

00:00:35.551 --> 00:00:36.544
That's interesting.

00:00:36.544 --> 00:00:38.210
All of a sudden,
you've knitted together

00:00:38.210 --> 00:00:40.555
something that's really,
really tremendously powerful.

00:00:40.555 --> 00:00:42.930
MAGGIE JOHNSON: We need their
help because of the problem

00:00:42.930 --> 00:00:44.514
we're trying to
solve internally.

00:00:44.514 --> 00:00:46.930
ALFRED SPECTOR: Academia can
look far out into the future.

00:00:46.930 --> 00:00:50.270
It can take greater risks and
look for really interesting

00:00:50.270 --> 00:00:52.000
solutions that industry
sometimes cannot.

00:01:03.971 --> 00:01:05.679
DAVID KONERDING: Hi,
I'm David Konerding.

00:01:05.679 --> 00:01:07.570
I'm a software
engineer at Google,

00:01:07.570 --> 00:01:10.072
and I work on scientific
computing problems.

00:01:10.072 --> 00:01:11.530
KAI KOHLHOFF: Hi,
I'm Kai Kohlhoff.

00:01:11.530 --> 00:01:13.780
I'm a research scientist
here at Google.

00:01:13.780 --> 00:01:17.300
And I used to work on protein
structure and protein dynamics

00:01:17.300 --> 00:01:18.775
before coming here.

00:01:18.775 --> 00:01:20.650
When I was applying to
Google, I was actually

00:01:20.650 --> 00:01:23.420
thinking of just spending
three to six months

00:01:23.420 --> 00:01:27.070
and just trying out some
bioinformatics algorithms

00:01:27.070 --> 00:01:29.344
on some of Google technologies.

00:01:29.344 --> 00:01:31.510
And when I actually heard
about what Dave was doing,

00:01:31.510 --> 00:01:32.885
I was really
surprised because it

00:01:32.885 --> 00:01:34.360
meant I could just
continue my work

00:01:34.360 --> 00:01:36.382
but doing it at an
even larger scale.

00:01:36.382 --> 00:01:37.840
DAVID KONERDING:
Yeah, Exacycle was

00:01:37.840 --> 00:01:41.350
inspired by Folding@home and
Seti@home and other volunteer

00:01:41.350 --> 00:01:43.020
computing projects.

00:01:43.020 --> 00:01:44.910
But we had an even
more ambitious goal.

00:01:44.910 --> 00:01:46.530
What we realized
was when you had

00:01:46.530 --> 00:01:49.020
that much computing
available to you,

00:01:49.020 --> 00:01:52.240
the amount of data you generated
overwhelmed every computing

00:01:52.240 --> 00:01:54.065
system's power to analyze it.

00:01:54.065 --> 00:01:57.350
I was originally the software
developer for Exacycle and Kai

00:01:57.350 --> 00:02:01.120
focused primarily on running
his simulations on the platform.

00:02:01.120 --> 00:02:03.400
Eventually we kind
of converged and Kai

00:02:03.400 --> 00:02:06.140
was spending as much time
developing the software.

00:02:06.140 --> 00:02:08.479
He helped us launch
it to trusted testers

00:02:08.479 --> 00:02:11.240
and did a tremendous
amount of work

00:02:11.240 --> 00:02:12.732
on the software
engineering side.

00:02:12.732 --> 00:02:14.690
And it was really valuable
because that gave me

00:02:14.690 --> 00:02:18.250
the feedback from a real user
who could also understand how

00:02:18.250 --> 00:02:19.820
the system worked on the inside.

00:02:19.820 --> 00:02:22.960
And we used his insights
to improve the system such

00:02:22.960 --> 00:02:25.250
that when we started delivering
it to more scientists,

00:02:25.250 --> 00:02:25.870
they said, OK.

00:02:25.870 --> 00:02:28.230
This already has the
features we want.

00:02:28.230 --> 00:02:32.000
Speaking of the scale that Kai
said, importantly, not only did

00:02:32.000 --> 00:02:34.650
it have been roughly
the number of computers

00:02:34.650 --> 00:02:37.370
available that Folding@home
would have provided him,

00:02:37.370 --> 00:02:39.210
he had it dedicated to himself.

00:02:39.210 --> 00:02:41.250
So for a short
period of time, Kai

00:02:41.250 --> 00:02:43.070
had access to more
computing power

00:02:43.070 --> 00:02:45.300
than any other
person on the planet.

00:02:45.300 --> 00:02:49.170
We basically ran
up to 700,000 cores

00:02:49.170 --> 00:02:53.030
simultaneously, days
upon days upon days

00:02:53.030 --> 00:02:55.640
upon months up to
several years in fact,

00:02:55.640 --> 00:02:56.800
running these simulations.

00:02:56.800 --> 00:02:58.320
What this allows
scientists to do

00:02:58.320 --> 00:03:01.520
is carry out science and
ask questions more quickly

00:03:01.520 --> 00:03:03.100
and get feedback
faster than they

00:03:03.100 --> 00:03:06.715
would be able to, while also
spending much less money.

00:03:06.715 --> 00:03:09.090
What we'd like to do is actually
take the kinds of things

00:03:09.090 --> 00:03:11.320
that we learn and share
them with the world.

00:03:11.320 --> 00:03:13.710
I think that it's really
going to benefit scientists

00:03:13.710 --> 00:03:16.300
and industry and the
government if they

00:03:16.300 --> 00:03:18.500
know how to deal with
systems of this scale.

00:03:18.500 --> 00:03:20.640
We're actually publishing
papers with methods

00:03:20.640 --> 00:03:22.580
that explain how
we did what we did,

00:03:22.580 --> 00:03:26.120
how to reproduce what we did,
and how to analyze the data,

00:03:26.120 --> 00:03:28.330
and then making that data
available to everyone

00:03:28.330 --> 00:03:29.654
so that they can process it.

00:03:29.654 --> 00:03:31.070
I don't think that
this has really

00:03:31.070 --> 00:03:33.860
been seen before in
academia, where people

00:03:33.860 --> 00:03:36.540
are sharing hundreds of
terabytes with other people

00:03:36.540 --> 00:03:39.690
and saying there's probably a
lot of useful data out there.

00:03:39.690 --> 00:03:41.020
Here's how we explored it.

00:03:41.020 --> 00:03:44.750
Why don't you also use
similar techniques, like Flume

00:03:44.750 --> 00:03:46.554
to analyze that data at scale.

00:03:46.554 --> 00:03:48.970
And so we think that this is
going to completely transform

00:03:48.970 --> 00:03:52.140
how people do molecular dynamics
and a lot of different kinds

00:03:52.140 --> 00:03:54.557
of data and compute
driven sciences.

00:03:54.557 --> 00:03:56.682
KAI KOHLHOFF: I really have
the best of both worlds

00:03:56.682 --> 00:03:59.790
here, because at
Stanford I had the chance

00:03:59.790 --> 00:04:03.340
to take on the risk of studying
a G protein-coupled receptor

00:04:03.340 --> 00:04:05.394
without knowing what
the outcome might be.

00:04:05.394 --> 00:04:07.560
And I basically spent over
a year just looking at it

00:04:07.560 --> 00:04:09.726
and trying to figure out
how I can best simulate it,

00:04:09.726 --> 00:04:12.650
and how to build a system that
will be stable at large scale.

00:04:12.650 --> 00:04:15.810
And so being able to take
on that risk in academia

00:04:15.810 --> 00:04:18.230
is one thing, but then
you come to a company,

00:04:18.230 --> 00:04:21.529
and suddenly everything
is really efficient.

00:04:21.529 --> 00:04:23.860
And you get high
throughput very quickly.

00:04:23.860 --> 00:04:26.000
And you kind of combine
these two things,

00:04:26.000 --> 00:04:27.980
and that's how you
really can make progress.

00:04:27.980 --> 00:04:29.480
DAVID KONERDING: What I'm
trying to do right now

00:04:29.480 --> 00:04:32.410
is take the experiences that Kai
and the other visiting faculty

00:04:32.410 --> 00:04:35.750
have and figure out ways that
we can make Exacycle easier,

00:04:35.750 --> 00:04:37.580
so users don't
have to understand

00:04:37.580 --> 00:04:39.804
how to scale systems
to that level.

00:04:39.804 --> 00:04:42.220
They should just be able to
describe the problem that they

00:04:42.220 --> 00:04:45.950
have and point us at the
tools, and we handle things

00:04:45.950 --> 00:04:48.490
like scaling the IO
and running millions

00:04:48.490 --> 00:04:50.110
of jobs at the same time.

00:04:50.110 --> 00:04:51.520
These are hard problems.

00:04:51.520 --> 00:04:53.970
And Google has a lot
of experience doing it

00:04:53.970 --> 00:04:54.980
for its own business.

00:04:54.980 --> 00:04:57.070
And we think we can
translate that and expose

00:04:57.070 --> 00:04:59.380
that kind of functionality
through our cloud

00:04:59.380 --> 00:05:00.919
to a really wide range of users.

00:05:00.919 --> 00:05:02.460
KAI KOHLHOFF: I
think that's actually

00:05:02.460 --> 00:05:03.730
kind of the vision
for the future,

00:05:03.730 --> 00:05:05.520
because as a researcher,
you should really

00:05:05.520 --> 00:05:07.205
be able to focus
on your research.

00:05:07.205 --> 00:05:08.580
You shouldn't
spend all your time

00:05:08.580 --> 00:05:11.940
just administrating servers and
building out the infrastructure

00:05:11.940 --> 00:05:14.520
and programming and trying
to get everything to work.

00:05:14.520 --> 00:05:15.937
What it should be
like is that you

00:05:15.937 --> 00:05:17.561
know exactly what
you want to simulate.

00:05:17.561 --> 00:05:19.900
And you should just basically
send that off somewhere

00:05:19.900 --> 00:05:22.109
without knowing exactly
what's happening,

00:05:22.109 --> 00:05:24.150
just knowing that your
data comes back eventually

00:05:24.150 --> 00:05:26.060
and then knowing how
to deal with that.

00:05:26.060 --> 00:05:27.900
And so your job
would be much more

00:05:27.900 --> 00:05:31.120
just devising
experiments, carrying out

00:05:31.120 --> 00:05:33.774
the simulations, and then
the analyzing the results

00:05:33.774 --> 00:05:35.440
and writing the papers,
rather than also

00:05:35.440 --> 00:05:39.090
having to deal with all the
technical issues in between.

00:05:39.090 --> 00:05:41.422
It was just really fascinating
to see in which scale

00:05:41.422 --> 00:05:42.380
you can actually think.

00:05:42.380 --> 00:05:44.810
And everything becomes
basically just data driven.

00:05:44.810 --> 00:05:46.670
You don't really think about
the smaller things anymore.

00:05:46.670 --> 00:05:48.086
You just say, OK,
we're just going

00:05:48.086 --> 00:05:50.270
to throw data at the
problem, and everything

00:05:50.270 --> 00:05:51.520
will come together.

00:05:51.520 --> 00:05:54.350
Because it actually I think
also changed my thinking.

00:05:54.350 --> 00:05:56.200
Because initially,
I thought, OK,

00:05:56.200 --> 00:05:58.450
if you want to
study a protein, you

00:05:58.450 --> 00:06:00.340
have to come up with
some hypotheses.

00:06:00.340 --> 00:06:02.514
And then we need to find
a way to prove these.

00:06:02.514 --> 00:06:04.930
But I think what it became in
the end is that you suddenly

00:06:04.930 --> 00:06:06.680
just generate lots
and lots of data.

00:06:06.680 --> 00:06:10.620
And then all of these things
that you wanted to investigate,

00:06:10.620 --> 00:06:12.890
they basically kind
of pop out of the data

00:06:12.890 --> 00:06:14.140
by just doing the right thing.

00:06:14.140 --> 00:06:17.135
So it's not really
biased in that way.

00:06:17.135 --> 00:06:19.060
And I think that's very
typical for Google.

00:06:19.060 --> 00:06:21.254
You just basically let
the data speak for itself

00:06:21.254 --> 00:06:22.670
rather than trying
to interpret it

00:06:22.670 --> 00:06:24.254
before you actually
go and look at it.

00:06:24.254 --> 00:06:25.711
DAVID KONERDING:
I think it's going

00:06:25.711 --> 00:06:27.720
to make a tremendous
change in the future.

00:06:27.720 --> 00:06:29.750
I'm already starting to
see the next generation

00:06:29.750 --> 00:06:34.840
of grad students moving onto
the cloud, Amazon and Google,

00:06:34.840 --> 00:06:37.360
using GitHub, being
very sophisticated

00:06:37.360 --> 00:06:39.900
about their software
development processes,

00:06:39.900 --> 00:06:42.480
and also their data management
and network communication

00:06:42.480 --> 00:06:43.220
processes.

00:06:43.220 --> 00:06:45.490
So we're starting
to see the beginning

00:06:45.490 --> 00:06:49.020
of an exponential increase
in scientific progress

00:06:49.020 --> 00:06:51.480
as a function of the
ability to analyze

00:06:51.480 --> 00:06:52.672
enormous amounts of data.

00:06:52.672 --> 00:06:54.880
KAI KOHLHOFF: And I think
that's just one part of it.

00:06:54.880 --> 00:06:57.640
I think you also start creating
this kind of dialogue where

00:06:57.640 --> 00:06:58.910
your data is online.

00:06:58.910 --> 00:07:02.190
Your processing has being done
online, somewhere in the cloud.

00:07:02.190 --> 00:07:07.010
So really your experiments have
become much more reproducible.

00:07:07.010 --> 00:07:09.080
You just tell people,
here are my scripts.

00:07:09.080 --> 00:07:10.150
Here's the data.

00:07:10.150 --> 00:07:12.150
You can run all of
this in the cloud,

00:07:12.150 --> 00:07:13.912
and you can change the
parameters at will.

00:07:13.912 --> 00:07:15.370
DAVID KONERDING:
What we want to do

00:07:15.370 --> 00:07:18.480
is see more and more of that
data live in Google's cloud

00:07:18.480 --> 00:07:21.230
and in Amazon's cloud
and in Microsoft's cloud

00:07:21.230 --> 00:07:24.980
and be accessible to hundreds
or thousands of scientists.

00:07:24.980 --> 00:07:26.346
Get away from the file formats.

00:07:26.346 --> 00:07:27.720
Get used to dealing
with hundreds

00:07:27.720 --> 00:07:30.060
of terabytes stored
in the cloud.

00:07:30.060 --> 00:07:31.580
And don't be afraid of that.

00:07:31.580 --> 00:07:34.260
There are ways to manage
that kind of data.

00:07:34.260 --> 00:07:36.350
And we've publish papers
explaining how to do it.

00:07:36.350 --> 00:07:37.891
And the open source
community has now

00:07:37.891 --> 00:07:40.800
made those things
available to everybody.

00:07:40.800 --> 00:07:43.800
I hope you'll go and watch the
Tech Talk that Kai and I put

00:07:43.800 --> 00:07:48.090
together to speak about what
he did with Exacycle at Google.

00:07:48.090 --> 00:07:51.010
KAI KOHLHOFF: And here are some
of the highlights of our talk.

