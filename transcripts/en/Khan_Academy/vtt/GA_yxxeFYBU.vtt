WEBVTT
Kind: captions
Language: en

00:00:00.063 --> 00:00:02.583
- So I have a function here, h of n,

00:00:02.583 --> 00:00:04.547
and let's say that it explicitly defines

00:00:04.547 --> 00:00:05.890
the terms of a sequence.

00:00:05.890 --> 00:00:06.842
Let me make a little...

00:00:06.842 --> 00:00:09.986
Let me make a quick table here.

00:00:11.736 --> 00:00:15.318
We have n, and then we have h of n.

00:00:15.318 --> 00:00:19.430
When n is equal to one,
h of n is negative 31,

00:00:19.430 --> 00:00:22.752
minus seven times one minus one,

00:00:22.752 --> 00:00:23.876
which is going to be...

00:00:23.876 --> 00:00:25.234
This is just going to be zero,

00:00:25.234 --> 00:00:27.440
so it's going to be negative 31.

00:00:27.440 --> 00:00:31.640
When n is equal to two,
it's going to be negative 31

00:00:31.640 --> 00:00:36.054
minus seven times two minus one,

00:00:36.054 --> 00:00:38.385
so two minus one.

00:00:38.385 --> 00:00:40.407
This is just going to be one,

00:00:40.407 --> 00:00:42.241
so it's negative 31 minus seven,

00:00:42.241 --> 00:00:45.994
which is equal to negative 38.

00:00:45.994 --> 00:00:47.662
When n is equal to three,

00:00:47.662 --> 00:00:51.296
it's gonna be negative 31 minus seven

00:00:51.296 --> 00:00:52.910
times three minus one,

00:00:52.910 --> 00:00:54.059
which is just two,

00:00:54.059 --> 00:00:56.988
so we're gonna subtract seven twice.

00:00:56.988 --> 00:01:00.467
It's gonna be negative 31 minus 14,

00:01:00.467 --> 00:01:03.323
which is equal negative 45.

00:01:03.323 --> 00:01:05.678
What do we see happening here?

00:01:05.678 --> 00:01:07.828
We're starting at negative 31,

00:01:07.828 --> 00:01:10.228
and then we keep subtracting,

00:01:10.228 --> 00:01:12.947
we keep subtracting negative seven.

00:01:12.947 --> 00:01:15.907
We keep subtracting
negative seven from that.

00:01:15.907 --> 00:01:19.561
In fact we subtract negative
seven one less than the term...

00:01:19.561 --> 00:01:22.026
We subtract negative seven one less times

00:01:22.026 --> 00:01:23.198
than the term we're dealing with.

00:01:23.198 --> 00:01:24.556
If we're dealing with the third term

00:01:24.556 --> 00:01:26.576
we subtract negative seven twice.

00:01:26.576 --> 00:01:28.074
If we're dealing with the second term

00:01:28.074 --> 00:01:30.274
we subtract negative seven once.

00:01:30.274 --> 00:01:31.498
This is all nice,

00:01:31.498 --> 00:01:33.437
but what I want you to
do now is pause the video

00:01:33.437 --> 00:01:36.223
and see if you can define
this exact same sequence.

00:01:36.223 --> 00:01:38.777
The sequence here is you
start at negative 31,

00:01:38.777 --> 00:01:40.658
and you keep subtracting negative seven,

00:01:40.658 --> 00:01:43.943
so negative 38, negative 45.

00:01:43.943 --> 00:01:47.050
The next one is gonna be negative 52,

00:01:47.050 --> 00:01:48.210
and you go on and on and on.

00:01:48.210 --> 00:01:50.311
You keep subtracting negative seven.

00:01:50.311 --> 00:01:52.830
Can we define this sequence

00:01:52.830 --> 00:01:55.321
in terms of a recursive function?

00:01:55.321 --> 00:01:56.872
Why don't you have a go at that.

00:01:57.512 --> 00:01:59.761
Let's try to define it in
terms of a recursive function.

00:01:59.761 --> 00:02:01.968
Let's just call that g of n,

00:02:01.968 --> 00:02:03.290
so g of n.

00:02:03.290 --> 00:02:05.199
In some ways a recursive
function is easier,

00:02:05.199 --> 00:02:06.297
because you can say okay look.

00:02:06.297 --> 00:02:08.619
The first term when n is equal to one,

00:02:08.619 --> 00:02:11.184
if n is equal to one,
let me just write it,

00:02:11.184 --> 00:02:12.990
If n is equal to one,

00:02:12.990 --> 00:02:16.067
if n is equal to one,

00:02:16.067 --> 00:02:17.680
what's g of n gonna be?

00:02:17.680 --> 00:02:19.568
It's gonna be negative 31,

00:02:19.568 --> 00:02:20.943
negative 31.

00:02:20.943 --> 00:02:22.760
And if n,

00:02:22.760 --> 00:02:26.387
if n is greater than
one and a whole number,

00:02:26.387 --> 00:02:28.883
so this is gonna be defined
for all positive integers,

00:02:28.883 --> 00:02:32.441
and whole, and whole number,

00:02:32.441 --> 00:02:34.989
it's just going to be the previous term,

00:02:34.989 --> 00:02:37.764
so g of n minus one

00:02:37.764 --> 00:02:39.100
minus seven,

00:02:39.100 --> 00:02:40.469
minus seven.

00:02:40.469 --> 00:02:41.528
We're saying hey

00:02:42.738 --> 00:02:44.764
if we're just picking an arbitrary term

00:02:44.764 --> 00:02:46.285
we just have to look at the previous term

00:02:46.285 --> 00:02:49.628
and then subtract, and
then subtract seven.

00:02:49.628 --> 00:02:51.764
It all works out nice and easy,

00:02:51.764 --> 00:02:52.763
because you keep looking at

00:02:52.763 --> 00:02:54.051
previous, previous, previous terms

00:02:54.051 --> 00:02:56.652
all the way until you
get to the base case,

00:02:56.652 --> 00:02:58.103
which is when n is equal to one,

00:02:58.103 --> 00:02:59.984
and you can build up back from that.

00:02:59.984 --> 00:03:02.886
You get this exact same sequence.

00:03:02.886 --> 00:03:03.989
Let's do another example,

00:03:03.989 --> 00:03:05.742
but let's go the other way around.

00:03:05.742 --> 00:03:08.645
Here we have a, we have a

00:03:08.645 --> 00:03:10.722
sequence defined recursively,

00:03:10.722 --> 00:03:12.382
and I want to create a function

00:03:12.382 --> 00:03:15.132
that defines a sequence explicitly.

00:03:15.132 --> 00:03:16.781
Let's think about this.

00:03:16.781 --> 00:03:17.664
One way to think about it,

00:03:17.664 --> 00:03:19.431
this sequence,

00:03:19.431 --> 00:03:22.679
when n is equal to one it starts at 9.6,

00:03:22.679 --> 00:03:25.967
and then every term is the previous term

00:03:25.967 --> 00:03:28.274
minus 0.1.

00:03:28.274 --> 00:03:30.576
The second term is gonna
be the previous term

00:03:30.576 --> 00:03:33.963
minus 0.1, so it's gonna be 9.5.

00:03:33.963 --> 00:03:35.928
Then you're gonna go to 9.4.

00:03:35.928 --> 00:03:37.752
Then you're gonna go to 9.3.

00:03:37.752 --> 00:03:40.326
We could keep going on and on and on.

00:03:40.326 --> 00:03:42.794
If we want, we could
make a little table here,

00:03:43.524 --> 00:03:45.503
and we could say

00:03:45.503 --> 00:03:48.823
this is n, this is h of n,

00:03:48.823 --> 00:03:50.727
and you see when n is equal to one,

00:03:50.727 --> 00:03:52.864
h of n is 9.6.

00:03:52.864 --> 00:03:54.105
When n is equal to two,

00:03:54.105 --> 00:03:55.382
we're now in this case over here,

00:03:55.382 --> 00:03:57.402
it's gonna h of two minus one,

00:03:57.402 --> 00:04:01.687
so it's gonna be h of one minus 0.1.

00:04:02.357 --> 00:04:04.542
It's just gonna be this minus 0.1,

00:04:04.542 --> 00:04:07.862
which is going to be 9.5.

00:04:07.862 --> 00:04:11.953
When h is three, it's gonna be h of two,

00:04:11.953 --> 00:04:15.436
h of two minus 0.1,

00:04:15.436 --> 00:04:17.538
minus 0.1.

00:04:17.538 --> 00:04:19.001
H of two is right over here.

00:04:19.001 --> 00:04:22.600
You subtract a tenth you're gonna get 9.4,

00:04:22.600 --> 00:04:24.504
exactly what we saw over here.

00:04:24.504 --> 00:04:26.529
Let's see if we can pause the video now

00:04:26.529 --> 00:04:28.144
and define this...

00:04:28.144 --> 00:04:30.761
Create a function that
constructs or defines

00:04:30.761 --> 00:04:33.698
this arithmetic sequence explicitly.

00:04:33.698 --> 00:04:34.522
Here it was recursively.

00:04:34.522 --> 00:04:36.735
We wanna define it explicitly.

00:04:37.695 --> 00:04:38.888
So let's just call it, I don't know,

00:04:38.888 --> 00:04:41.254
let's just call it f of n.

00:04:41.254 --> 00:04:43.939
We can say look, it's gonna be 9.6,

00:04:44.709 --> 00:04:46.272
but we're gonna subtract,

00:04:46.272 --> 00:04:48.257
we're gonna subtract 0.1

00:04:48.257 --> 00:04:49.696
a certain number of times

00:04:49.696 --> 00:04:51.716
depending on what term
we're talking about.

00:04:51.716 --> 00:04:53.817
We're gonna subtract 0.1,

00:04:53.817 --> 00:04:55.849
but how many times are
we gonna subtract it

00:04:55.849 --> 00:04:57.753
as a function of n?

00:04:58.463 --> 00:04:58.890
Let's see.

00:04:58.890 --> 00:05:00.028
If we're talking about the first term

00:05:00.028 --> 00:05:02.127
we subtract zero times.

00:05:02.127 --> 00:05:04.968
The second term we subtract one time.

00:05:04.968 --> 00:05:07.354
The third term we subtract two times.

00:05:07.354 --> 00:05:09.907
The fourth term we subtract three times.

00:05:09.907 --> 00:05:11.533
Whatever term we're talking about

00:05:11.533 --> 00:05:15.468
we subtract that term minus one times.

00:05:15.468 --> 00:05:16.977
If we're talking about the nth term,

00:05:16.977 --> 00:05:21.273
we subtracted this
value n minus one times.

00:05:21.273 --> 00:05:23.420
You can verify that this is going to work.

00:05:23.420 --> 00:05:25.738
When n is equal to one

00:05:25.738 --> 00:05:27.623
this term here is going to be zero,

00:05:27.623 --> 00:05:28.679
so this whole thing is gonna be zero.

00:05:28.679 --> 00:05:30.003
You get 9.6.

00:05:30.003 --> 00:05:32.314
When n is equal to two,

00:05:32.314 --> 00:05:33.619
two minus one,

00:05:33.619 --> 00:05:36.573
you subtract 0.1 one time.

00:05:36.573 --> 00:05:39.290
9.6 minus 0.1 is 9.5.

00:05:39.290 --> 00:05:40.033
You could keep doing that.

00:05:40.033 --> 00:05:41.171
You could draw a table,

00:05:41.171 --> 00:05:42.633
and evaluate these if you want to.

00:05:42.633 --> 00:05:45.531
The key thing is your'e starting at 9.6

00:05:45.531 --> 00:05:47.882
and you're subtracting 0.1

00:05:47.882 --> 00:05:50.411
one fewer times than the
term you're looking at.

00:05:50.411 --> 00:05:52.849
If you're looking at the if n is equal to,

00:05:52.849 --> 00:05:55.090
this is n is equal to four,

00:05:55.090 --> 00:05:57.922
well you're gonna subtract 0.1 three times,

00:05:57.922 --> 00:05:58.886
and you see that.

00:05:58.886 --> 00:06:00.603
Subtract 0.1 once,

00:06:00.603 --> 00:06:02.206
subtract 0.1 twice,

00:06:02.206 --> 00:06:06.271
subtract 0.1 three times.

