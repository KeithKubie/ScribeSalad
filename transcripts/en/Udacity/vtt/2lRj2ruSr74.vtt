WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:03.140
Let's discuss something that it often jokingly called Lhadma's

00:00:03.140 --> 00:00:07.400
Law. This is really Amdahl spelled in reverse. And, it

00:00:07.400 --> 00:00:11.170
says, that although Amdahl's Law pretty much tells us to

00:00:11.170 --> 00:00:14.635
make the common case fast. We should not mess up

00:00:14.635 --> 00:00:17.930
the uncommon case too badly while doing that. Let's

00:00:17.930 --> 00:00:20.770
consider an example, in which we can achieve an improvement

00:00:20.770 --> 00:00:23.460
of a factor of 2, or 90% of the execution

00:00:23.460 --> 00:00:25.130
time. So, we can achieve a speed up of 2,

00:00:25.130 --> 00:00:31.330
or 90% of the execution time. But at the cost of slowing down the rest by 10x.

00:00:31.330 --> 00:00:37.100
Meaning the remaining 10% now gets 10 times as much execution time as before.

00:00:38.200 --> 00:00:41.130
The overall speed up can be now expressed

00:00:41.130 --> 00:00:43.890
as, both of these are affected by different

00:00:43.890 --> 00:00:50.148
so called improvements. We have one of them, the 10%, is effected by a speed up

00:00:50.148 --> 00:00:55.400
of 0.1 because this is a 10 times slow down, this is a slow down

00:00:55.400 --> 00:01:00.289
of 0.1. And the other the 90% are

00:01:00.289 --> 00:01:05.476
sped up by a factor of 2 and we get 1 over 1 plus

00:01:05.476 --> 00:01:11.180
0.45 equal 0.7. So we actually got an overall slowdown.

00:01:11.180 --> 00:01:15.970
In fact even with an infinite improvement on 90%, this will

00:01:15.970 --> 00:01:18.754
become 0. We will still have a speed of

00:01:18.754 --> 00:01:23.478
1, meaning no improvement. So basically, if you have

00:01:23.478 --> 00:01:25.686
a huge worsening on even a small part of

00:01:25.686 --> 00:01:29.210
the execution time, the overall speedup will not be good.

