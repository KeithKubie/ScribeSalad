WEBVTT
Kind: captions
Language: en

00:00:00.360 --> 00:00:04.150
When you want to create a fresh
libGDX Project, you can actually use

00:00:04.150 --> 00:00:07.450
the super-convenient libGDX
Project Setup utility.

00:00:07.450 --> 00:00:09.690
We actually included it at
the root of the course code.

00:00:09.690 --> 00:00:12.430
It's called gdx-setup.jar.

00:00:12.430 --> 00:00:15.330
If you want to download the setup app
for yourself, you can just search for

00:00:15.330 --> 00:00:16.850
libgdx.

00:00:16.850 --> 00:00:18.120
This first result's the one you want.

00:00:20.220 --> 00:00:24.890
Select Download and
select Download Setup App.

00:00:24.890 --> 00:00:28.080
If you get this alert saying that
gdx-setup can't be opened because it's

00:00:28.080 --> 00:00:31.550
buy an unidentified developer,
you can fix that by opening up your

00:00:31.550 --> 00:00:35.000
System Preferences,
going to Security and Privacy,

00:00:35.000 --> 00:00:38.970
and checking the radio button for
Allow apps downloaded from Anywhere.

00:00:42.270 --> 00:00:46.200
Now the setup app needs some information
to configure our new project.

00:00:46.200 --> 00:00:48.470
We'll give it the name Icicles.

00:00:48.470 --> 00:00:52.400
We use the package
com.udacity.gamedev.icicles.

00:00:52.400 --> 00:00:54.275
We'll name the game class IciclesGame.

00:00:55.370 --> 00:00:59.250
Destination is where the project setup
utility will crate your new project,

00:00:59.250 --> 00:01:02.070
we'll just say Desktop/Icicles.

00:01:02.070 --> 00:01:04.989
Next, the project set up
utility needs the path of

00:01:04.989 --> 00:01:06.450
your Android software development kit.

00:01:07.690 --> 00:01:11.320
If you don't remember where that is
you can open up the Preferences pane

00:01:11.320 --> 00:01:12.930
of Android Studio, search for

00:01:12.930 --> 00:01:17.460
sdk and then up in this box here
you'll find the path of your SDK.

00:01:17.460 --> 00:01:21.650
We'll just copy that and we'll paste it
into the libGDX Project Setup utility.

00:01:22.765 --> 00:01:25.975
Next you can select what version
of libGDX you'd like to use.

00:01:25.975 --> 00:01:28.620
You'll almost always just
want to use the most recent.

00:01:28.620 --> 00:01:31.920
Then you need to decide what
subprojects you want to include.

00:01:31.920 --> 00:01:34.720
Unless you're using some particular
extension that doesn't support

00:01:34.720 --> 00:01:37.970
all the different subprojects, you
should probably just include them all.

00:01:37.970 --> 00:01:41.650
It's much easier to remove a platform
you don't plan to support later,

00:01:41.650 --> 00:01:44.010
than it is to add in a new platform.

00:01:44.010 --> 00:01:46.680
Finally, you can include
various extensions.

00:01:46.680 --> 00:01:48.660
Box2D is included by default.

00:01:48.660 --> 00:01:51.410
It's a super powerful
2D physics engine and

00:01:51.410 --> 00:01:53.130
we'll end up using
that in a later course.

00:01:53.130 --> 00:01:54.090
But uncheck that for now.

00:01:55.160 --> 00:01:57.214
Finally, hit Generate.

00:01:57.214 --> 00:02:00.260
42 seconds later,
we have a successful build.

00:02:00.260 --> 00:02:01.460
Let's go load up our new project.

00:02:02.580 --> 00:02:05.730
As usual, we open up Android Studio and
select Import Project.

00:02:06.800 --> 00:02:08.690
We can hit this button
to jump to the desktop.

00:02:09.710 --> 00:02:12.500
Here's the Icicles
folder we just created.

00:02:12.500 --> 00:02:14.360
Now it looks like we're all loaded up.

00:02:14.360 --> 00:02:16.090
Let's open up the Terminal.

00:02:16.090 --> 00:02:19.314
And we can run the desktop run
task to see what we've got.

00:02:19.314 --> 00:02:22.830
[LAUGH] All right, looks like
the default project just comes with

00:02:22.830 --> 00:02:26.090
a red background and
the Bad Logic Games logo.

00:02:26.090 --> 00:02:29.630
Awesome, now you can create
whatever new projects you want and

00:02:29.630 --> 00:02:32.700
you don't have to rely on our starter
code in the course repository.

