WEBVTT
Kind: captions
Language: en

00:00:00.260 --> 00:00:04.930
We can also use public key cryptography
for mutual authentication.

00:00:04.930 --> 00:00:08.180
Suppose Alice and
Bob have each other's public key.

00:00:08.180 --> 00:00:13.340
In this protocol, first,
Alice sends Bob a challenge R2 and

00:00:13.340 --> 00:00:16.329
R2 is encrypted using Bob's public key.

00:00:16.329 --> 00:00:20.860
Second, upon receiving this challenge
Bob decrypts the server text

00:00:20.860 --> 00:00:26.320
using his own public key, and
sends back the plain text challenge R2,

00:00:26.320 --> 00:00:29.560
along with his own challenge R1.

00:00:29.560 --> 00:00:33.790
And R1 is encrypted using
Alice's public key.

00:00:33.790 --> 00:00:39.086
Third, when Alice gets the response
from Bob, the plain text R2 in

00:00:39.086 --> 00:00:45.560
Bob's response, tells Alice that she's
communicating with Bob because only Bob

00:00:45.560 --> 00:00:50.270
has the private key that is paired
with the public key that encrypted R2.

00:00:50.270 --> 00:00:55.550
Alice also decrypts the server text
R1 using her own private key and

00:00:55.550 --> 00:00:59.590
sends a plain text back
to Bob in step three.

00:00:59.590 --> 00:01:04.019
Bob will then know that he is
communicating with Alice because only

00:01:04.019 --> 00:01:09.790
Alice has the private key that is paired
with the public key used to encrypt R1.

00:01:09.790 --> 00:01:12.730
As an exercise,
you can modify this protocol

00:01:12.730 --> 00:01:17.242
to use signing with private keys
instead of encryption with public keys.

