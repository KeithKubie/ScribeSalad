WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:07.990
&gt;&gt; TENBERG: Hello, my name is Paul Tenberg.
I’m a director of business development for

00:00:07.990 --> 00:00:15.160
Queplix. Queplix is an enterprise software
application vendor. We have suite of front

00:00:15.160 --> 00:00:27.239
office automation solutions that range from
CRM to customer care, HR, IT help desks, and

00:00:27.239 --> 00:00:36.290
a whole lot of full featured enterprise solutions.
We also have a set of tools that can crawl

00:00:36.290 --> 00:00:43.440
through your legacy applications that are
not--no longer supported by vendors, and we

00:00:43.440 --> 00:00:49.000
have an ability to extract business objects
out of those structured databases. And out

00:00:49.000 --> 00:00:56.649
of those business objects we can create applications
based on JE2E platform that can be put into

00:00:56.649 --> 00:01:05.520
a legacy-ready JE2E architecture. We also
work with Google to enable structured [INDISTINCT]

00:01:05.520 --> 00:01:13.471
enterprise search. In other words, we can
search through various legacy applications

00:01:13.471 --> 00:01:22.610
or DBMS types of applications and extract
also synthetic business objects and enable

00:01:22.610 --> 00:01:28.860
universal search [INDISTINCT] applications.
And we work in conjunction with Google Search

00:01:28.860 --> 00:01:34.640
Appliance to do that. Google Search Appliance
is very good in searching, of course, unstructured

00:01:34.640 --> 00:01:54.310
data and we provide the structured data capability.
&gt;&gt; YASKIN: Yes. As Paul mentioned the application

00:01:54.310 --> 00:02:00.480
is based on the GWT. The legacy conversion
application process is basically converting

00:02:00.480 --> 00:02:07.860
the entire people [INDISTINCT] or remedy or
vent of application. It’s a GWT-based collection

00:02:07.860 --> 00:02:15.870
of screens. We had to create our own library
for GWT. We’re using a lot of out-of-the-box

00:02:15.870 --> 00:02:20.569
components; data widgets, UI widgets, but
we also created a whole library of additional

00:02:20.569 --> 00:02:29.670
components to match what legacy application
had. So we’re creating a variety of UI elements

00:02:29.670 --> 00:02:34.489
to represent the data in a certain way that
people are used to looking at the legacy applications.

00:02:34.489 --> 00:02:39.030
&gt;&gt; MALE: Can you tell me a little bit about
how you came about in choosing, I mean, what

00:02:39.030 --> 00:02:44.159
were the technical reasons in choosing GWT?
&gt;&gt; YASKIN: Sure. Yeah. One big primary reason

00:02:44.159 --> 00:02:52.469
we chose GWT over competing frameworks, in
GWT, we believe we took a long time trying

00:02:52.469 --> 00:02:57.670
to evaluate. We had even experienced in house
with frameworks like Dojo for example and

00:02:57.670 --> 00:03:02.580
it took us a while to make that call. But
then once we established that we are a Java

00:03:02.580 --> 00:03:06.989
shop and we used to just start off company
at that time, I think it was a no-brainer

00:03:06.989 --> 00:03:14.230
for us because we all speak Java in our daily
life; we eat, breathe Java. And choosing GWT

00:03:14.230 --> 00:03:20.720
because it allows us to write everything in
pure Java code and not having to deal with

00:03:20.720 --> 00:03:27.249
the JavaScript and inter-browser compatibilities,
it was pretty straight choice for us, so that

00:03:27.249 --> 00:03:34.370
was a winner. We never looked back.
&gt;&gt; MALE: So, as developers, we really value

00:03:34.370 --> 00:03:45.879
if can share war stories and lessons for technical
challenges. Can you tell us about one particular

00:03:45.879 --> 00:03:46.879
difficult period of development that you faced
and how you approached that technical challenge?

00:03:46.879 --> 00:03:50.879
&gt;&gt; YASKIN: Sure. When we started, I think
we were one of the very first large scale

00:03:50.879 --> 00:03:59.329
enterprise apps that was using GWT. And we
have pretty large customers like in the Fortune

00:03:59.329 --> 00:04:08.319
500 range with 30,000 seats deployments each.
And one of the first challenges I think we

00:04:08.319 --> 00:04:18.180
came across was lack of widgets. And, you
know, we, I guess, have that problem is a

00:04:18.180 --> 00:04:22.600
little bit unique to us because, again, we’re
converting legacy apps and they all look a

00:04:22.600 --> 00:04:30.110
little bit different. And in our case, we
have to make our GWT based app look almost

00:04:30.110 --> 00:04:35.430
identical to the legacy systems to minimize
user retraining. So we were right away faced

00:04:35.430 --> 00:04:42.300
with the lack of libraries offering various
UI widgets, so we had to create our own. That

00:04:42.300 --> 00:04:46.300
took some time but now it’s open source;
it’s available to everybody who is using

00:04:46.300 --> 00:04:53.560
GWT. So we're happy to contribute to the community.
That was one thing. Also, not being able to

00:04:53.560 --> 00:04:58.560
use debugger in Chrome and we advertise Chrome
all over the place, so it’s just so much

00:04:58.560 --> 00:05:05.610
faster. The bugger did not work to the same
degree in Chrome as it did in other browsers

00:05:05.610 --> 00:05:12.710
like IE, so few challenges like that but I
think the benefits outweighed the challenges

00:05:12.710 --> 00:05:18.479
that we’ve come across so far using GWT.
&gt;&gt; MALE: Three more questions.

00:05:18.479 --> 00:05:23.121
&gt;&gt; YASKIN: Sure.
&gt;&gt; MALE: So what are the three top features

00:05:23.121 --> 00:05:25.030
you like best about GWT?
&gt;&gt; YASKIN: Top three features, well, Java,

00:05:25.030 --> 00:05:31.690
Java, Java. How about that? You know, writing
in Java and straight Java, pure Java code

00:05:31.690 --> 00:05:39.660
is probably our top three benefits that we
got out of GWT. Not having to deal with the

00:05:39.660 --> 00:05:47.330
clients’ side with the front end probably
took away 80 percent of time that we had to

00:05:47.330 --> 00:05:54.759
spend otherwise. Browser compatibility probably
is another thing that just by writing pure

00:05:54.759 --> 00:06:00.729
Java code you’ll eliminate all the things
that we struggled with in our framework which

00:06:00.729 --> 00:06:04.639
we used before GWT. So I would say those three
probably top.

00:06:04.639 --> 00:06:13.979
&gt;&gt; MALE: Okay. So where did you feel GWT being...?
&gt;&gt; YASKIN: I think there’s a lot of things

00:06:13.979 --> 00:06:20.960
could be done to the debugger still. We still
see a lot of improvement there. Other than

00:06:20.960 --> 00:06:25.919
that, we're just excited to get the new version
every time it comes out. We see a lot of improvement

00:06:25.919 --> 00:06:26.919
in each version.
&gt;&gt; MALE: Last question.

00:06:26.919 --> 00:06:27.919
&gt;&gt; YASKIN: Sure.
&gt;&gt; MALE: How long did it take your team to

00:06:27.919 --> 00:06:35.330
build the first out of your application of
GWT and how many team developers from the

00:06:35.330 --> 00:06:39.539
team?
&gt;&gt; YASKIN: Yeah. We have team dedicated to

00:06:39.539 --> 00:06:48.610
GWT development of UI. The team is about eight
to ten people right now. Initial version,

00:06:48.610 --> 00:06:54.879
a GWT-based version was out in three--three
to four months, so it’s fairly fast even

00:06:54.879 --> 00:06:59.919
to start up company that we used to be. It’s
fairly fast considering our customer is a

00:06:59.919 --> 00:07:07.469
pretty large organization. Okay. So, we’re
very excited about using GWT. All right. Thank

00:07:07.469 --> 00:07:07.699
you.

