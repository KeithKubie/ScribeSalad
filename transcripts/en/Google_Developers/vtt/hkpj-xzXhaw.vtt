WEBVTT
Kind: captions
Language: en

00:00:00.912 --> 00:00:01.870
WESLEY CHUN: Hey, all.

00:00:01.870 --> 00:00:02.930
This is Wesley Chun.

00:00:02.930 --> 00:00:05.620
Welcome to another Google
Apps Script episode.

00:00:05.620 --> 00:00:07.860
If you're new to that
technology, pause and click

00:00:07.860 --> 00:00:09.359
on the link in the
description below

00:00:09.359 --> 00:00:14.380
to watch the intro video
first, then rejoin us here.

00:00:14.380 --> 00:00:14.880
All right.

00:00:14.880 --> 00:00:16.590
Now you may be
wondering, accessing

00:00:16.590 --> 00:00:18.660
Google Maps from a spreadsheet?

00:00:18.660 --> 00:00:19.980
Sound crazy?

00:00:19.980 --> 00:00:23.380
Did you think I made it up
just to get your attention?

00:00:23.380 --> 00:00:25.020
Well, quite the
opposite actually.

00:00:25.020 --> 00:00:28.040
In this video, I'll teach you
to write code that not only does

00:00:28.040 --> 00:00:30.970
what's advertised, but also
why it's useful to do this.

00:00:30.970 --> 00:00:33.860
And that little star there
means that I may also

00:00:33.860 --> 00:00:38.329
throw in a little extra surprise
at the end, so stay tuned.

00:00:38.329 --> 00:00:40.870
In this episode, we're going to
start with a new Google sheet

00:00:40.870 --> 00:00:44.890
and put some data in it,
such as a street address.

00:00:44.890 --> 00:00:46.820
Then we're going to
have our spreadsheet ask

00:00:46.820 --> 00:00:49.170
Google Maps to create a
map for us, specifically

00:00:49.170 --> 00:00:51.824
a map of that address
that's in the spreadsheet.

00:00:51.824 --> 00:00:53.490
This is fine and all,
and you can easily

00:00:53.490 --> 00:00:55.560
imagine more than
one address, right?

00:00:55.560 --> 00:00:59.050
The problem is putting each
address into Google Maps.

00:00:59.050 --> 00:01:01.180
You'd have to go back
and forth between Maps

00:01:01.180 --> 00:01:02.480
and the spreadsheet, right?

00:01:02.480 --> 00:01:05.291
Well, what if I could just
click a link in the spreadsheet?

00:01:05.291 --> 00:01:06.540
That's what we're going to do.

00:01:06.540 --> 00:01:08.350
To complete the circle,
we'll save a link

00:01:08.350 --> 00:01:11.030
to that map back into
the Google sheet.

00:01:11.030 --> 00:01:13.250
As mentioned earlier, the
technology we'll be using

00:01:13.250 --> 00:01:14.455
is Google Apps Script.

00:01:14.455 --> 00:01:16.580
The documents and spreadsheets
in your Google Drive

00:01:16.580 --> 00:01:19.510
can actually be programmed
using a subset of JavaScript

00:01:19.510 --> 00:01:20.790
called Apps Script.

00:01:20.790 --> 00:01:22.850
Apps Script code can
access data in Google Apps,

00:01:22.850 --> 00:01:25.040
as well as call other
Google services,

00:01:25.040 --> 00:01:26.900
Google Maps being one of them.

00:01:26.900 --> 00:01:28.650
Again, if you haven't
seen that video yet,

00:01:28.650 --> 00:01:31.120
or if you're new to Apps Script,
please check it out first.

00:01:31.120 --> 00:01:32.661
The link is still
in the description.

00:01:32.661 --> 00:01:35.332
It hasn't moved since
we last mentioned that.

00:01:35.332 --> 00:01:36.790
Or here it is for
your convenience,

00:01:36.790 --> 00:01:38.550
if you're on a computer.

00:01:38.550 --> 00:01:40.026
Another reason to
watch it first is

00:01:40.026 --> 00:01:42.400
because we're going to build
on its "Hello World" example

00:01:42.400 --> 00:01:43.820
that you see here.

00:01:43.820 --> 00:01:48.230
If you're all set, then
let's go to the computer now.

00:01:48.230 --> 00:01:48.730
All right.

00:01:48.730 --> 00:01:51.313
Before we get started, I want
to strongly encourage all of you

00:01:51.313 --> 00:01:53.900
to do this with me,
because doing the hands-on

00:01:53.900 --> 00:01:57.230
is much more valuable than
just watching a video.

00:01:57.230 --> 00:01:59.950
You can pause and resume
as often as you need to,

00:01:59.950 --> 00:02:02.012
because I'm not going anywhere.

00:02:02.012 --> 00:02:04.220
We're going to take what we
learned in the first Apps

00:02:04.220 --> 00:02:06.670
Script episode and
build on from there,

00:02:06.670 --> 00:02:09.800
allowing your spreadsheet
to talk to Google Maps.

00:02:09.800 --> 00:02:12.360
Just like we did the last
time, go to Google Drive

00:02:12.360 --> 00:02:14.500
and create a new Google sheet.

00:02:14.500 --> 00:02:16.515
When you're done, come
back and join me here.

00:02:20.080 --> 00:02:20.700
All right.

00:02:20.700 --> 00:02:21.890
Let's go.

00:02:21.890 --> 00:02:25.400
Start at the first cell and
put any street address into it.

00:02:25.400 --> 00:02:32.460
For example, we'll use 76
9th Avenue in New York.

00:02:32.460 --> 00:02:34.780
Feel free to expand
your spreadsheet columns

00:02:34.780 --> 00:02:37.980
if you need to make them wider
so that you can see everything,

00:02:37.980 --> 00:02:40.120
but it's optional.

00:02:40.120 --> 00:02:41.670
And that's it.

00:02:41.670 --> 00:02:43.920
It's time to write some code.

00:02:43.920 --> 00:02:49.100
Go up to the Menu
bar and select Tools.

00:02:49.100 --> 00:02:53.090
Then pull down Script Editor.

00:02:53.090 --> 00:02:55.260
Just like in the
previous episode,

00:02:55.260 --> 00:02:57.005
we're going to start
with Blank Project,

00:02:57.005 --> 00:02:58.630
because we're not
really going to write

00:02:58.630 --> 00:03:00.280
that many lines of code.

00:03:00.280 --> 00:03:02.000
Four, to be exact.

00:03:02.000 --> 00:03:04.310
And also just like
the last episode,

00:03:04.310 --> 00:03:06.340
we need to get the
current spreadsheet,

00:03:06.340 --> 00:03:07.980
so we're going to
use Spreadsheet

00:03:07.980 --> 00:03:10.580
App and its Get
Active Sheet method

00:03:10.580 --> 00:03:11.830
to get the current sheet.

00:03:15.910 --> 00:03:20.450
This time, let's save it
to a variable-named sheet,

00:03:20.450 --> 00:03:23.470
because we're going to
use it more than once.

00:03:23.470 --> 00:03:25.205
Naming make sense, right?

00:03:25.205 --> 00:03:26.890
All right.

00:03:26.890 --> 00:03:28.950
Last time, we used
the Get Range method

00:03:28.950 --> 00:03:32.310
to get the first cell,
which was A1, remember?

00:03:32.310 --> 00:03:34.000
We're going to do
something similar.

00:03:34.000 --> 00:03:36.130
We're going to use
Get Range again,

00:03:36.130 --> 00:03:39.730
and we're also going
to use the A1 notation.

00:03:39.730 --> 00:03:42.920
Let's just confirm that by
taking a quick peek back

00:03:42.920 --> 00:03:45.130
at the spreadsheet to
confirm where our address is.

00:03:45.130 --> 00:03:46.650
And there it is.

00:03:46.650 --> 00:03:49.290
But instead of using Set
Value to write "Hello World"

00:03:49.290 --> 00:03:52.510
into that cell, we're going
to use Get Value to pull out

00:03:52.510 --> 00:03:56.720
the address and save that
to a variable-named address.

00:03:56.720 --> 00:03:58.435
Again, appropriately-named.

00:04:01.680 --> 00:04:02.890
All right.

00:04:02.890 --> 00:04:05.690
Now here comes the magic part.

00:04:05.690 --> 00:04:07.800
Spreadsheet App is the
Apps Script endpoint

00:04:07.800 --> 00:04:10.130
for accessing Google Sheets.

00:04:10.130 --> 00:04:12.140
Now in order to
talk to Google Maps,

00:04:12.140 --> 00:04:14.510
we need an equivalent object.

00:04:14.510 --> 00:04:17.649
And that's going to be Maps.

00:04:17.649 --> 00:04:21.050
As you can see here, the
Maps object has many methods,

00:04:21.050 --> 00:04:25.000
but the one we care
about is New Static Map.

00:04:25.000 --> 00:04:26.510
What are we going to do?

00:04:26.510 --> 00:04:28.510
We're going to create
a new Google map,

00:04:28.510 --> 00:04:31.870
but we also want a map that
has a pin on that address that

00:04:31.870 --> 00:04:35.140
was in the first column.

00:04:35.140 --> 00:04:37.730
The way you do that is you pass
the address to the Ad Marker

00:04:37.730 --> 00:04:39.860
method, like you see
there, and now let's

00:04:39.860 --> 00:04:43.680
save the map to a
variable named "that."

00:04:43.680 --> 00:04:45.960
Again, appropriately-named.

00:04:45.960 --> 00:04:48.160
Then the final step
is to store a link

00:04:48.160 --> 00:04:52.090
to that map in the cell next to
the address in the spreadsheet.

00:04:52.090 --> 00:04:54.630
So we're going to use the
sheet's Get Range method again,

00:04:54.630 --> 00:04:56.580
also A1 notation.

00:04:56.580 --> 00:05:00.600
We saw a moment ago that the
cell next to the address is B1,

00:05:00.600 --> 00:05:03.880
so this time we're going to use
its Set Value method in order

00:05:03.880 --> 00:05:06.290
to write that map's
link to the cell.

00:05:06.290 --> 00:05:10.040
And you can get that by using
the Maps' Get Map URL method.

00:05:13.990 --> 00:05:16.810
And that is it.

00:05:16.810 --> 00:05:17.310
Oh.

00:05:17.310 --> 00:05:18.851
If you haven't named
your script yet,

00:05:18.851 --> 00:05:20.650
you're going to be
prompted, as before,

00:05:20.650 --> 00:05:23.190
to do so when you
save or run it.

00:05:23.190 --> 00:05:27.400
We'll call it Google Maps demo,
for lack of a better name.

00:05:29.940 --> 00:05:32.070
Now when we run it
again, you'll see

00:05:32.070 --> 00:05:34.310
that we need to do
the OAuth thing,

00:05:34.310 --> 00:05:38.330
and grant this code access
to our spreadsheet data.

00:05:38.330 --> 00:05:41.830
Once you opt-in and are able
to run it successfully--

00:05:41.830 --> 00:05:45.690
and you can tell it's done when
the yellow run dialog shows

00:05:45.690 --> 00:05:48.910
up and disappears-- and if
everything went according

00:05:48.910 --> 00:05:51.430
to plan, when we pop back
into the spreadsheet,

00:05:51.430 --> 00:05:53.390
you'll see the map's
link in cell B1.

00:05:53.390 --> 00:05:54.010
There it is.

00:05:54.010 --> 00:05:55.594
And if you click
on it, you'll see

00:05:55.594 --> 00:05:58.010
that it's the map that we asked
Google Maps to make, along

00:05:58.010 --> 00:05:59.890
with a pin at that address.

00:05:59.890 --> 00:06:02.350
Isn't that awesome?

00:06:02.350 --> 00:06:02.850
All right.

00:06:02.850 --> 00:06:03.870
That's it.

00:06:03.870 --> 00:06:05.580
We only needed four
lines of JavaScript

00:06:05.580 --> 00:06:07.880
connecting a spreadsheet
to Google Maps.

00:06:07.880 --> 00:06:10.010
Hope you enjoyed this
demo, and more importantly,

00:06:10.010 --> 00:06:12.294
are able to see how,
in a few lines of code,

00:06:12.294 --> 00:06:13.960
you could do something
that could almost

00:06:13.960 --> 00:06:15.550
be considered useful.

00:06:15.550 --> 00:06:17.240
So was this all for show?

00:06:17.240 --> 00:06:19.180
Was this just a party trick?

00:06:19.180 --> 00:06:20.850
How can you take
this and turn it

00:06:20.850 --> 00:06:22.860
into something really useful?

00:06:22.860 --> 00:06:25.120
Well, there are
many possibilities.

00:06:25.120 --> 00:06:27.920
Perhaps you've got the addresses
of all your local customers

00:06:27.920 --> 00:06:30.380
in New York City, and want
to plot them on a Google Map

00:06:30.380 --> 00:06:33.580
to help you plan to visit
them all in a single day.

00:06:33.580 --> 00:06:36.300
Well the code you just
completed is your launch point.

00:06:36.300 --> 00:06:38.670
Or maybe this is the
monthly user group.

00:06:38.670 --> 00:06:40.060
Or a club meeting.

00:06:40.060 --> 00:06:40.980
Right?

00:06:40.980 --> 00:06:43.320
Well instead of manually
entering in the spreadsheet

00:06:43.320 --> 00:06:45.370
data, perhaps you
pulled the membership

00:06:45.370 --> 00:06:47.790
so that the data comes
from a Google form.

00:06:47.790 --> 00:06:49.650
As you can guess
by now, Apps Script

00:06:49.650 --> 00:06:52.540
gives you the ability to turn
generic, boring spreadsheet

00:06:52.540 --> 00:06:56.550
data into an app, processing
and managing member info as well

00:06:56.550 --> 00:06:58.600
as possible meet-up locations.

00:06:58.600 --> 00:07:00.310
To find out more
about what you can

00:07:00.310 --> 00:07:02.310
do with Google Maps
from Apps Script,

00:07:02.310 --> 00:07:04.640
check out the first
link that you see here.

00:07:04.640 --> 00:07:07.240
Of course, Apps Script gives
you access not only to Maps,

00:07:07.240 --> 00:07:08.980
but other Google services, too.

00:07:08.980 --> 00:07:12.060
To find out about what other
services are available to you,

00:07:12.060 --> 00:07:13.800
check out the second link.

00:07:13.800 --> 00:07:15.480
Finally, the resources
at the bottom

00:07:15.480 --> 00:07:18.380
will point you to more episodes
in this and other developers'

00:07:18.380 --> 00:07:21.190
series where you can subscribe
to always get our latest

00:07:21.190 --> 00:07:23.200
episodes.

00:07:23.200 --> 00:07:24.230
That's it for now.

00:07:24.230 --> 00:07:27.070
But as you can guess, it's
just the beginning for you.

00:07:27.070 --> 00:07:28.880
Stay tuned for future
episodes, where

00:07:28.880 --> 00:07:31.110
we'll do more stuff
with Maps, Forms,

00:07:31.110 --> 00:07:33.779
and explore other Google
services from Apps Script.

00:07:33.779 --> 00:07:36.320
This is Wesley Chun from Google,
and we'll see you next time.

00:07:43.010 --> 00:07:46.110
What-- wha-- you're still here?

00:07:46.110 --> 00:07:47.879
It's over.

00:07:47.879 --> 00:07:48.545
Go back to work.

00:07:55.090 --> 00:07:55.920
All right.

00:07:55.920 --> 00:07:56.640
Fine.

00:07:56.640 --> 00:07:59.610
Apparently you won't go away
until you get some more.

00:07:59.610 --> 00:08:00.110
All right.

00:08:00.110 --> 00:08:03.400
Let's go back to
the computer, then.

00:08:03.400 --> 00:08:05.780
When we last left off,
we had just gone back

00:08:05.780 --> 00:08:08.330
into the spreadsheet to
click on the link in the cell

00:08:08.330 --> 00:08:10.730
next to the address to see
the map that Google Maps had

00:08:10.730 --> 00:08:11.750
generated.

00:08:11.750 --> 00:08:14.360
Let's go back to the code and
revisit the fourth and final

00:08:14.360 --> 00:08:15.420
line.

00:08:15.420 --> 00:08:17.110
Sure, it's a good
demo of how you

00:08:17.110 --> 00:08:20.340
can write data such as the map's
link back to the spreadsheet,

00:08:20.340 --> 00:08:22.950
but we can do something
more exciting, right?

00:08:22.950 --> 00:08:25.290
Follow along with me and
change the first part

00:08:25.290 --> 00:08:29.920
of the line, specifically
this part here.

00:08:29.920 --> 00:08:34.260
Call the MailApp object's
Send Email method.

00:08:34.260 --> 00:08:36.409
Oh, and by the way,
choose the second one

00:08:36.409 --> 00:08:38.130
that takes three parameters.

00:08:38.130 --> 00:08:41.500
We'll start with your friend's
email address as the recipient.

00:08:41.500 --> 00:08:43.289
Also enter a subject line.

00:08:43.289 --> 00:08:47.400
Choose something like,
I don't know, map?

00:08:47.400 --> 00:08:50.420
And finally, reuse
the link to the map

00:08:50.420 --> 00:08:52.510
as the body, which is
the final argument.

00:08:52.510 --> 00:08:54.240
And that's it.

00:08:54.240 --> 00:08:56.810
Any guess as to what this does?

00:08:56.810 --> 00:09:00.350
Hint-- it's got something
to do with Gmail.

00:09:00.350 --> 00:09:01.664
Yes, that's right.

00:09:01.664 --> 00:09:03.830
Instead of writing the link
back to the spreadsheet,

00:09:03.830 --> 00:09:05.580
don't you think it's
way more cool to send

00:09:05.580 --> 00:09:07.080
this map to my friend?

00:09:07.080 --> 00:09:09.410
Well in this demo, I'm just
going to send it to myself,

00:09:09.410 --> 00:09:12.070
but you can pretend it's
your friend for now.

00:09:12.070 --> 00:09:12.790
All right.

00:09:12.790 --> 00:09:15.190
Save, and run as usual.

00:09:15.190 --> 00:09:18.790
Notice that you get
another OAuth prompt here.

00:09:18.790 --> 00:09:22.040
This time, it's for you to
give this script permission

00:09:22.040 --> 00:09:25.721
to send email on your behalf.

00:09:25.721 --> 00:09:26.220
Oh.

00:09:26.220 --> 00:09:29.530
By the way, be sure the
email that your app sends

00:09:29.530 --> 00:09:32.110
does not violate Gmail's
terms of service and program

00:09:32.110 --> 00:09:33.140
policies.

00:09:33.140 --> 00:09:37.310
But that's a no-brainer, right?

00:09:37.310 --> 00:09:39.240
Then go ahead and accept.

00:09:39.240 --> 00:09:44.100
And when it's done,
let's check our Gmail.

00:09:44.100 --> 00:09:45.220
There's the message.

00:09:45.220 --> 00:09:48.030
Boom!

00:09:48.030 --> 00:09:50.300
If your friend clicks on
the link in the message

00:09:50.300 --> 00:09:54.440
that he or she receives, they'll
see the same auto-generated map

00:09:54.440 --> 00:09:57.180
that you saw earlier, and
can now meet you at the party

00:09:57.180 --> 00:10:01.020
to celebrate your
awesome coding skills!

00:10:01.020 --> 00:10:01.520
Wow.

00:10:01.520 --> 00:10:02.820
So what were we left with?

00:10:02.820 --> 00:10:04.860
A four-line script
that now interacts

00:10:04.860 --> 00:10:06.930
with three different
Google products--

00:10:06.930 --> 00:10:09.780
Google Sheets, Google
Maps and Gmail.

00:10:09.780 --> 00:10:11.680
Four lines, that's it.

00:10:11.680 --> 00:10:13.460
I'd say this
enhancement is even more

00:10:13.460 --> 00:10:16.140
useful and intriguing
than our first version.

00:10:16.140 --> 00:10:17.970
We invite you to
use your imagination

00:10:17.970 --> 00:10:21.306
to see what you can accomplish
with the power of Apps Script.

00:10:21.306 --> 00:10:22.680
Hope you got your
fill this time,

00:10:22.680 --> 00:10:26.240
because you need to go back to
work, and I need to go, too.

00:10:26.240 --> 00:10:29.850
Happy coding, and I'll see
you soon on another episode.

