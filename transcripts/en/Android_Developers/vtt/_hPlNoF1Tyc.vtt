WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.928
[MUSIC PLAYING]

00:00:07.664 --> 00:00:09.330
BRIAN KEMLER: Good
afternoon, everybody.

00:00:09.330 --> 00:00:10.580
My name is Brian Kemler.

00:00:10.580 --> 00:00:13.979
I'm a product manager, and I
work on Android accessibility.

00:00:13.979 --> 00:00:15.770
RICARDO GARCIA: Hi,
and I'm Ricardo Garcia,

00:00:15.770 --> 00:00:19.550
a software engineer in the
audio framework team in Android.

00:00:19.550 --> 00:00:22.520
BRIAN KEMLER: How's
everybody's last day of I/O?

00:00:22.520 --> 00:00:25.290
Last session, woo!

00:00:25.290 --> 00:00:26.850
You made it, through.

00:00:26.850 --> 00:00:28.560
Thank you so much
for coming out.

00:00:28.560 --> 00:00:31.860
It was a great
I/O. Today we have

00:00:31.860 --> 00:00:35.880
a lot of really exciting
things to talk about,

00:00:35.880 --> 00:00:38.310
primarily geared for developers.

00:00:38.310 --> 00:00:42.510
We're going to be talking about
a new sound enhanced future

00:00:42.510 --> 00:00:47.040
in Android P called
Sound Amplifier.

00:00:47.040 --> 00:00:49.410
We're going to be doing a
little bit of a live demo

00:00:49.410 --> 00:00:54.720
to show how we can improve the
sound in any type of situation

00:00:54.720 --> 00:00:58.770
for users, and how you can
do the same as a developer.

00:00:58.770 --> 00:01:03.080
We're going to go and do a deep
dive into the inner workings

00:01:03.080 --> 00:01:06.900
of Sound Amplifier and the
dynamics processing effect

00:01:06.900 --> 00:01:09.810
upon which it's built,
live with code examples.

00:01:09.810 --> 00:01:11.430
That's going to be really cool.

00:01:11.430 --> 00:01:14.640
Let's dive right in.

00:01:14.640 --> 00:01:20.910
Listening is difficult,
even in an empty field

00:01:20.910 --> 00:01:24.660
with a massive set of ears.

00:01:24.660 --> 00:01:28.960
But the everyday reality
is we live, work,

00:01:28.960 --> 00:01:33.010
and play with an increasing
amount of environmental noise.

00:01:33.010 --> 00:01:37.410
In fact, unwanted sound
is one of the most common

00:01:37.410 --> 00:01:39.870
environmental problems.

00:01:39.870 --> 00:01:43.080
It's not only annoying,
but it prevents us

00:01:43.080 --> 00:01:47.880
from understanding our friends,
colleagues, and loved ones.

00:01:47.880 --> 00:01:51.210
No matter how well
we can hear, most of

00:01:51.210 --> 00:01:54.870
us can relate to the following
acoustically challenging

00:01:54.870 --> 00:01:57.480
situations--

00:01:57.480 --> 00:02:00.210
trying to understand your
date in a loud restaurant

00:02:00.210 --> 00:02:04.650
or a loud bar, trying to
listen to a caller in a really

00:02:04.650 --> 00:02:08.070
loud airport lounge,
trying to listen

00:02:08.070 --> 00:02:14.490
to a speaker who's talking
way too softly, like me now.

00:02:14.490 --> 00:02:18.210
One could think of
environmental noise

00:02:18.210 --> 00:02:21.720
as a form of
situational disability.

00:02:21.720 --> 00:02:24.450
But what if you could
hear better using just

00:02:24.450 --> 00:02:26.610
your smartphone so
you'd never miss

00:02:26.610 --> 00:02:29.880
a word in the conversation?

00:02:29.880 --> 00:02:36.090
Now you can, because today we're
introducing Sound Amplifier.

00:02:39.100 --> 00:02:41.860
What is Sound Amplifier?

00:02:41.860 --> 00:02:45.490
Sound Amplifier is a new
accessibility service

00:02:45.490 --> 00:02:50.380
that helps users focus on
real world conversations using

00:02:50.380 --> 00:02:54.700
only your Android smartphone
and a set of headphones.

00:02:54.700 --> 00:02:58.930
Users can tune to hundreds
of personalized levels

00:02:58.930 --> 00:03:01.990
to optimize their
listening experience

00:03:01.990 --> 00:03:06.040
to the current environment.

00:03:06.040 --> 00:03:09.965
Its two sliders for loudness
and tuning dynamically

00:03:09.965 --> 00:03:15.250
adjust just over 100 audio
presets in the background.

00:03:15.250 --> 00:03:19.990
These settings can be applied
independently to each ear.

00:03:19.990 --> 00:03:23.440
Adjusting them improves
the sound quality

00:03:23.440 --> 00:03:26.920
in an array of situations,
including the following--

00:03:26.920 --> 00:03:30.190
enhancing sound in loud,
dissonant, or otherwise

00:03:30.190 --> 00:03:33.370
acoustically
challenging situations,

00:03:33.370 --> 00:03:38.650
increasing the volume of
somebody who speaks too softly,

00:03:38.650 --> 00:03:41.260
turning up the TV
volume to one that's

00:03:41.260 --> 00:03:43.090
acceptable to
everybody in the room

00:03:43.090 --> 00:03:46.120
without blasting everybody else.

00:03:46.120 --> 00:03:50.500
So now I'm going to go in and
talk a little bit about how

00:03:50.500 --> 00:03:54.790
we built it, the APIs and the
effect upon which it was built,

00:03:54.790 --> 00:03:57.990
and I'll do some demos.

00:03:57.990 --> 00:04:02.520
Sound Amplifier is based
on Android P's new dynamics

00:04:02.520 --> 00:04:05.100
processing effect.

00:04:05.100 --> 00:04:09.840
The effect is a four-stage
signal processing architecture,

00:04:09.840 --> 00:04:11.850
and I'm going to walk
you through each stage,

00:04:11.850 --> 00:04:14.140
and then Ricardo's going
to come in a little bit

00:04:14.140 --> 00:04:17.640
and really deep dive into
this, and show the developers

00:04:17.640 --> 00:04:21.240
in the audience exactly
how they can adapt this

00:04:21.240 --> 00:04:23.020
to their applications.

00:04:23.020 --> 00:04:26.550
So first, stage one.

00:04:26.550 --> 00:04:29.490
Stage one is pre-equalization.

00:04:29.490 --> 00:04:30.960
You can think of
pre-equalization

00:04:30.960 --> 00:04:34.440
as an equalizer that
you can programmatically

00:04:34.440 --> 00:04:38.040
adjust any audio frequency.

00:04:38.040 --> 00:04:43.260
Think bass, mid-range, treble--
the entire audio spectrum.

00:04:43.260 --> 00:04:47.070
Stage two is a
multiband compressor.

00:04:47.070 --> 00:04:51.060
The multiband compressor
is the heart and soul

00:04:51.060 --> 00:04:54.420
of the dynamics processing
effect, because what it does

00:04:54.420 --> 00:04:56.500
is really unique.

00:04:56.500 --> 00:05:01.200
It can simultaneously adjust
down really loud or irritating

00:05:01.200 --> 00:05:05.130
sounds- don't worry,
I won't make any--

00:05:05.130 --> 00:05:09.690
and adjust up sounds
that are too soft.

00:05:09.690 --> 00:05:12.450
It could do all of
this without changing

00:05:12.450 --> 00:05:15.420
the characteristics of
the underlying audio

00:05:15.420 --> 00:05:18.240
that you put into the system.

00:05:18.240 --> 00:05:21.680
The third stage is also an
equalization [INAUDIBLE]..

00:05:21.680 --> 00:05:24.140
Post-equalization
allows you to fine tune

00:05:24.140 --> 00:05:29.900
the output from the original NBC
and the original pre-equalizer.

00:05:29.900 --> 00:05:33.650
And lastly is the limiter.

00:05:33.650 --> 00:05:38.120
What the limiter does
is protects users

00:05:38.120 --> 00:05:41.210
from additional gain
or additional volume

00:05:41.210 --> 00:05:44.660
above a certain
developer-designated threshold

00:05:44.660 --> 00:05:47.300
so that there are
no loud, jarring,

00:05:47.300 --> 00:05:51.560
or uncomfortable noises.

00:05:51.560 --> 00:05:55.145
So now I'm going to switch
over and do a little demo.

00:05:58.290 --> 00:06:02.450
So I'm going to play a very
typical Google microkitchen,

00:06:02.450 --> 00:06:07.280
water cooler-type of break
where there's a loud espresso

00:06:07.280 --> 00:06:08.780
maker in the background.

00:06:08.780 --> 00:06:09.920
And I'm in this.

00:06:09.920 --> 00:06:12.208
I star in this.

00:06:12.208 --> 00:06:12.874
[VIDEO PLAYBACK]

00:06:12.874 --> 00:06:13.847
- Do you really?

00:06:13.847 --> 00:06:14.347
Wow.

00:06:14.347 --> 00:06:15.330
- [INAUDIBLE]

00:06:15.330 --> 00:06:17.047
- [INAUDIBLE]

00:06:17.047 --> 00:06:18.880
BRIAN KEMLER: So you
can hear the sound is--

00:06:18.880 --> 00:06:20.630
you can't really hear
the conversation.

00:06:20.630 --> 00:06:24.970
- [INAUDIBLE]

00:06:24.970 --> 00:06:27.840
- So you could've escaped
from Alcatraz if you had to.

00:06:27.840 --> 00:06:29.970
- I swam far enough to
escape from Alcatraz.

00:06:29.970 --> 00:06:31.205
- Did you really?

00:06:31.205 --> 00:06:32.360
Wow.

00:06:32.360 --> 00:06:34.517
You should have
swum to Alcatraz.

00:06:34.517 --> 00:06:35.100
[END PLAYBACK]

00:06:35.100 --> 00:06:36.516
BRIAN KEMLER: So
I can dynamically

00:06:36.516 --> 00:06:39.560
adjust this and start to
hear the conversation.

00:06:39.560 --> 00:06:44.380
Remember, this is customizable
or tunable for every user.

00:06:44.380 --> 00:06:45.400
Doing this again--

00:06:45.400 --> 00:06:46.990
I get to star again.

00:06:46.990 --> 00:06:50.710
I'm really not this into myself.

00:06:50.710 --> 00:06:54.520
Here's me talking, kind of
rehearsing this talk right now.

00:06:54.520 --> 00:06:57.940
And I'm speaking
too quietly, so this

00:06:57.940 --> 00:07:01.270
will be another example of
how I can adjust the sound so

00:07:01.270 --> 00:07:02.780
that I can hear it better.

00:07:02.780 --> 00:07:04.780
The other thing that I
also forgot to mention

00:07:04.780 --> 00:07:07.660
was you use this
with your headphones,

00:07:07.660 --> 00:07:10.960
so you can think of what's in
the video as what you would

00:07:10.960 --> 00:07:12.400
be hearing in your headphones.

00:07:12.400 --> 00:07:13.066
[VIDEO PLAYBACK]

00:07:13.066 --> 00:07:15.460
- So listening is
difficult, even

00:07:15.460 --> 00:07:18.782
under the best circumstances,
in a quiet field

00:07:18.782 --> 00:07:23.697
with no background noise
and a large set of ears.

00:07:23.697 --> 00:07:24.280
[END PLAYBACK]

00:07:24.280 --> 00:07:25.550
BRIAN KEMLER: So you
can hear the boost.

00:07:25.550 --> 00:07:26.216
[VIDEO PLAYBACK]

00:07:26.216 --> 00:07:29.020
- But in noisy conditions,
the everyday reality

00:07:29.020 --> 00:07:32.290
is that we work, play, and
live with an increasing

00:07:32.290 --> 00:07:36.387
amount of environmental noise,
so listening is difficult.

00:07:36.387 --> 00:07:36.970
[END PLAYBACK]

00:07:36.970 --> 00:07:40.930
BRIAN KEMLER: So it's
very easy to fine tune

00:07:40.930 --> 00:07:48.590
any acoustic situation to the
environment, to your ears,

00:07:48.590 --> 00:07:49.400
and so forth.

00:07:49.400 --> 00:07:53.570
And Ricardo's going to deep dive
in and talk a little bit more

00:07:53.570 --> 00:07:55.550
about the dynamics
processing effect,

00:07:55.550 --> 00:07:58.135
and how developers can
start using this today.

00:07:58.135 --> 00:07:59.510
RICARDO GARCIA:
Thank you, Brian.

00:07:59.510 --> 00:08:00.926
BRIAN KEMLER: Off
to you, Ricardo.

00:08:00.926 --> 00:08:02.630
RICARDO GARCIA: Thank you.

00:08:02.630 --> 00:08:08.210
Well, now we saw the demos
and we saw the Sound Amplifier

00:08:08.210 --> 00:08:10.460
actually working in real life.

00:08:10.460 --> 00:08:12.380
So we are going
to go down and see

00:08:12.380 --> 00:08:14.390
how the Sound Amplifier
actually works,

00:08:14.390 --> 00:08:17.280
and what is the magic behind it.

00:08:17.280 --> 00:08:21.629
So for that, I want to introduce
to you the hearing threshold.

00:08:21.629 --> 00:08:23.420
I'm going to be on this
slide for a second.

00:08:23.420 --> 00:08:25.660
I'm going to explain
to you what is here.

00:08:25.660 --> 00:08:28.700
And here, we are seeing what is
the average hearing threshold

00:08:28.700 --> 00:08:30.200
for the average human.

00:08:30.200 --> 00:08:32.659
The hearing
threshold is actually

00:08:32.659 --> 00:08:35.750
how much energy we
need to have to be

00:08:35.750 --> 00:08:37.590
able to listen to the sound.

00:08:37.590 --> 00:08:40.760
So in this plot, we can
see from left to right,

00:08:40.760 --> 00:08:43.429
from low frequency
to high frequencies,

00:08:43.429 --> 00:08:45.740
from 20 hertz to 20 kilohertz.

00:08:45.740 --> 00:08:49.520
And in the vertical axis,
we can see the amplitude.

00:08:49.520 --> 00:08:51.560
We see how much energy
we actually will

00:08:51.560 --> 00:08:53.750
need to hear of the sounds.

00:08:53.750 --> 00:08:56.180
So because this is the
threshold of hearing in quiet,

00:08:56.180 --> 00:08:58.070
this [INAUDIBLE]
telling that anything

00:08:58.070 --> 00:09:01.590
that is below that threshold
will not be heard by people.

00:09:01.590 --> 00:09:05.270
So for example, if we go and
we look into the 4,000 hertz,

00:09:05.270 --> 00:09:07.910
we see that the threshold
is lower in there.

00:09:07.910 --> 00:09:10.670
That means that we
need less energy.

00:09:10.670 --> 00:09:13.670
The sounds can be fainter,
they can be softer,

00:09:13.670 --> 00:09:14.940
and we will hear them.

00:09:14.940 --> 00:09:18.230
But if we have a sound that
is about the same level in

00:09:18.230 --> 00:09:20.330
around, I don't
know, 100 hertz, you

00:09:20.330 --> 00:09:22.410
will not be able to hear that.

00:09:22.410 --> 00:09:25.340
So this is important
because many companies

00:09:25.340 --> 00:09:29.450
use these curves, these kind
of hearing threshold curves

00:09:29.450 --> 00:09:30.980
to design their equipment.

00:09:30.980 --> 00:09:34.460
When you are designing, I
don't know, MP3 or CD players,

00:09:34.460 --> 00:09:35.990
these curves are present.

00:09:35.990 --> 00:09:39.860
Or if you are tuning a
headset, speakers, microphones,

00:09:39.860 --> 00:09:42.050
all of these curves are
really important to know

00:09:42.050 --> 00:09:46.751
what people will actually hear
and what they are sensitive to.

00:09:46.751 --> 00:09:49.880
But these curves can shift.

00:09:49.880 --> 00:09:52.880
So we can have hearing
threshold shifts

00:09:52.880 --> 00:09:55.610
due to many
circumstances-- let's say,

00:09:55.610 --> 00:09:57.410
the noise in the environment.

00:09:57.410 --> 00:10:00.020
A minute ago, we had
the AC blasting in here

00:10:00.020 --> 00:10:01.700
and there was a threshold shift.

00:10:01.700 --> 00:10:04.790
We needed to have sounds
that were way louder

00:10:04.790 --> 00:10:08.300
over that threshold to be able
to listen to hear the sounds.

00:10:08.300 --> 00:10:10.190
When the AC turned
off a minute ago,

00:10:10.190 --> 00:10:14.100
as well, we can speak
softer and we hear that.

00:10:14.100 --> 00:10:17.180
Our threshold shifted
down at that moment.

00:10:17.180 --> 00:10:20.000
So a threshold shift
is a region that

00:10:20.000 --> 00:10:25.200
will need more energy for you
to be able to notice that.

00:10:25.200 --> 00:10:26.820
We have other shifts.

00:10:26.820 --> 00:10:29.310
We can have shifts that
are not as broadband,

00:10:29.310 --> 00:10:30.870
not all over the spectrum.

00:10:30.870 --> 00:10:34.290
On the previous one, we can have
shifts that are more localized.

00:10:34.290 --> 00:10:37.930
This blue curve in here
is showing us a shift

00:10:37.930 --> 00:10:39.980
that is around 500 hertz--

00:10:39.980 --> 00:10:41.160
really, really, really high.

00:10:41.160 --> 00:10:43.590
There is some noise or
some obstruction there

00:10:43.590 --> 00:10:45.600
that is not going to
allow you to hear things

00:10:45.600 --> 00:10:48.360
very well around 500 hertz.

00:10:48.360 --> 00:10:50.562
This shift could be permanent--

00:10:50.562 --> 00:10:52.770
all your life you're going
to have that shift-- or it

00:10:52.770 --> 00:10:54.150
could be temporary.

00:10:54.150 --> 00:10:56.700
As Brian mentioned, it could
be a temporary situation

00:10:56.700 --> 00:10:57.960
or disability.

00:10:57.960 --> 00:11:00.630
That means that for
that period of time,

00:11:00.630 --> 00:11:02.550
you are not going to
be able to hear things

00:11:02.550 --> 00:11:05.850
around those frequencies because
either your headphones are not

00:11:05.850 --> 00:11:08.370
working well, you are
in a noisy environment,

00:11:08.370 --> 00:11:12.270
your ears are not working
well at that moment.

00:11:12.270 --> 00:11:15.540
Sounds that are below
that threshold, that

00:11:15.540 --> 00:11:18.610
shifted threshold, you are not
going to be able to hear that,

00:11:18.610 --> 00:11:20.700
and that's the important
take-away from this.

00:11:20.700 --> 00:11:24.360
If it's below the threshold,
you cannot hear it.

00:11:24.360 --> 00:11:26.750
So what happens when we
have a sound of interest?

00:11:26.750 --> 00:11:28.820
Let's say that you are
listening to music,

00:11:28.820 --> 00:11:32.840
or someone is speaking, or
some sound that interests you.

00:11:32.840 --> 00:11:36.250
So in the plot I just put a blob
that's a green blob in there,

00:11:36.250 --> 00:11:37.910
and it's a broadband sound.

00:11:37.910 --> 00:11:39.980
It has a lot of frequencies
and it has energy

00:11:39.980 --> 00:11:41.360
all over the place.

00:11:41.360 --> 00:11:44.320
But if you notice,
again, around 500 hertz,

00:11:44.320 --> 00:11:47.210
a lot of the energy that
is below the threshold,

00:11:47.210 --> 00:11:50.480
the shifted threshold, the
blue one, is going to be lost.

00:11:50.480 --> 00:11:52.760
When you have a sound
of interest that

00:11:52.760 --> 00:11:56.860
is below the threshold,
the shifted threshold,

00:11:56.860 --> 00:11:58.640
it's going to be
difficult to be heard,

00:11:58.640 --> 00:12:01.610
or the intelligibility
is really bad.

00:12:01.610 --> 00:12:03.860
You cannot understand the sound.

00:12:03.860 --> 00:12:05.830
So this is the
question that everybody

00:12:05.830 --> 00:12:09.140
is asking-- how can Sound
Amplifier help us right now?

00:12:09.140 --> 00:12:10.930
So I'm glad that you asked.

00:12:10.930 --> 00:12:14.660
Sound Amplifier is
going to take the sounds

00:12:14.660 --> 00:12:16.930
and is going to
actually boost them

00:12:16.930 --> 00:12:18.770
where you need them the most.

00:12:18.770 --> 00:12:22.920
If we look again in the range
from 500 hertz to 1 kilohertz,

00:12:22.920 --> 00:12:26.030
we took the sounds, and in
this new, processed sound,

00:12:26.030 --> 00:12:28.820
we took the sounds that were
really soft, that they didn't

00:12:28.820 --> 00:12:31.250
have that much energy,
and we boosted them

00:12:31.250 --> 00:12:33.710
all the way over the
shifted threshold,

00:12:33.710 --> 00:12:35.570
so now we can hear those.

00:12:35.570 --> 00:12:38.690
But-- very important-- we took
the sounds the were really

00:12:38.690 --> 00:12:42.450
loud, we moved them up,
but not too much up,

00:12:42.450 --> 00:12:46.110
so the loud sounds get
louder, but not too loud.

00:12:46.110 --> 00:12:49.760
So if you see the
process that happened,

00:12:49.760 --> 00:12:52.580
it was not uniform
all over the spectrum.

00:12:52.580 --> 00:12:55.700
It was shifting things and
trying to accommodate them

00:12:55.700 --> 00:12:57.680
over our shifted threshold.

00:12:57.680 --> 00:13:01.010
So it was doing very
intelligent boost in there.

00:13:01.010 --> 00:13:04.390
All of this processing is done
by the new dynamics processing

00:13:04.390 --> 00:13:07.266
effect that we
introduced in Android P.

00:13:07.266 --> 00:13:08.390
And I'm going to talk more.

00:13:08.390 --> 00:13:10.220
I'm going to show
[INAUDIBLE] in a minute.

00:13:10.220 --> 00:13:11.160
I promise.

00:13:11.160 --> 00:13:16.010
So the dynamics processing
effect, as Brian mentioned,

00:13:16.010 --> 00:13:18.560
is the new processing
effect that we have.

00:13:18.560 --> 00:13:19.850
It has four stages--

00:13:19.850 --> 00:13:21.860
the pre-EQ,
multiband compressor,

00:13:21.860 --> 00:13:24.100
post-EQ, and limiter.

00:13:24.100 --> 00:13:26.180
And when we are
using this effect,

00:13:26.180 --> 00:13:28.790
we have two big questions
that we need to answer,

00:13:28.790 --> 00:13:30.820
especially for our
Sound Amplifier.

00:13:30.820 --> 00:13:33.920
First is what kind of
processing do we actually

00:13:33.920 --> 00:13:35.300
want to hear sounds?

00:13:35.300 --> 00:13:38.320
To be able to, depending
of the needs that we have--

00:13:38.320 --> 00:13:41.240
if we're in a loud environment,
or we are in a bad connection,

00:13:41.240 --> 00:13:43.820
or we are in an airport--

00:13:43.820 --> 00:13:45.620
what kind of
processing do we need

00:13:45.620 --> 00:13:49.770
to make things above the
shifted threshold that we have?

00:13:49.770 --> 00:13:52.370
And the second is how
users can actually

00:13:52.370 --> 00:13:54.650
go and move and find
the right parameters

00:13:54.650 --> 00:13:55.880
that they need for you.

00:13:55.880 --> 00:13:59.000
So we have two big
questions to answer.

00:13:59.000 --> 00:14:00.590
The first one, for
the processing,

00:14:00.590 --> 00:14:03.360
what kind of
processing we want, we

00:14:03.360 --> 00:14:06.050
did what Google
is really good at.

00:14:06.050 --> 00:14:09.840
We took a lot of data and we
started crunching that data.

00:14:09.840 --> 00:14:13.610
So we took data from
hearing thresholds

00:14:13.610 --> 00:14:16.620
from regular and
hearing-impaired users,

00:14:16.620 --> 00:14:20.330
so actually how people hear,
how their ears respond,

00:14:20.330 --> 00:14:22.160
and we put them in there.

00:14:22.160 --> 00:14:26.000
We took threshold shifts from
different environment places

00:14:26.000 --> 00:14:27.590
and different
environment noises.

00:14:27.590 --> 00:14:29.300
We went to airports,
restaurants,

00:14:29.300 --> 00:14:32.300
and places where we have
noise obstructions--

00:14:32.300 --> 00:14:36.050
things that are going to shift
our threshold of hearing--

00:14:36.050 --> 00:14:38.600
and we also put
them in the blender.

00:14:38.600 --> 00:14:44.870
And we went and tried to get
the audio content that people

00:14:44.870 --> 00:14:46.370
actually want to hear--

00:14:46.370 --> 00:14:50.600
conversations, movies,
music, live concerts,

00:14:50.600 --> 00:14:53.960
lectures-- and we managed
to pull all of this

00:14:53.960 --> 00:14:59.150
together and come up with a
set of recipes, of parameters,

00:14:59.150 --> 00:15:01.490
that would be good
for processing

00:15:01.490 --> 00:15:03.740
the sound in many situations.

00:15:03.740 --> 00:15:06.830
When you do that, you
end up with, I will say,

00:15:06.830 --> 00:15:09.530
a multi-dimensional space,
a bunch of solutions,

00:15:09.530 --> 00:15:11.660
that are pretty
much very complex

00:15:11.660 --> 00:15:15.140
parameters that you want to tell
the dynamics effects processor,

00:15:15.140 --> 00:15:16.940
oh, for this
situation, this will

00:15:16.940 --> 00:15:18.140
be good to shift the sound.

00:15:18.140 --> 00:15:19.930
For this situation,
it will be that.

00:15:19.930 --> 00:15:21.380
But that's unmanageable.

00:15:21.380 --> 00:15:23.250
If you want to tell
the users, well,

00:15:23.250 --> 00:15:25.190
start moving
parameters like this,

00:15:25.190 --> 00:15:26.720
there will be
hundreds of parameters

00:15:26.720 --> 00:15:28.940
and it will be very
difficult for the users

00:15:28.940 --> 00:15:30.860
to make something
good with this.

00:15:30.860 --> 00:15:33.110
So we took a
further step and did

00:15:33.110 --> 00:15:35.270
some dimensionality reduction.

00:15:35.270 --> 00:15:37.880
Took all of those recipes,
multi-dimensional space,

00:15:37.880 --> 00:15:42.120
and flattened them out and
plotted them in two dimensions.

00:15:42.120 --> 00:15:43.860
And here, in the
plot on the right,

00:15:43.860 --> 00:15:46.430
you can see that we
see each one of those

00:15:46.430 --> 00:15:49.970
is kind of a formula
or a processing recipe

00:15:49.970 --> 00:15:53.450
that we want to feed
the dynamics processing

00:15:53.450 --> 00:15:55.460
effect to change the sound.

00:15:55.460 --> 00:15:57.470
And with the
dimensionality reduction,

00:15:57.470 --> 00:15:59.390
we found two major axes--

00:15:59.390 --> 00:16:02.270
the tone and the boost.

00:16:02.270 --> 00:16:04.400
So this solves the second
question that we have,

00:16:04.400 --> 00:16:06.400
how the users are
going to navigate this.

00:16:06.400 --> 00:16:09.500
Well, they don't need to
know all the parameters

00:16:09.500 --> 00:16:12.620
that we need, we just
give them two sliders--

00:16:12.620 --> 00:16:15.090
the two sliders that we
just saw on the demo.

00:16:15.090 --> 00:16:17.730
And by moving
those sliders, they

00:16:17.730 --> 00:16:20.420
are actually doing a
very intelligent mapping

00:16:20.420 --> 00:16:24.740
and going and moving
hundreds of parameters

00:16:24.740 --> 00:16:27.350
that are moving for
each channel in there.

00:16:27.350 --> 00:16:30.760
When the user goes and
iterates using these sliders,

00:16:30.760 --> 00:16:34.910
they are actually going
through a bunch of recipes,

00:16:34.910 --> 00:16:37.850
a bunch of processings,
and they come

00:16:37.850 --> 00:16:40.700
find the one that suits
them the best at that moment

00:16:40.700 --> 00:16:42.850
for that user in that location.

00:16:42.850 --> 00:16:44.390
And that's what we wanted to do.

00:16:44.390 --> 00:16:46.550
So that was kind of
like a bird's eye view

00:16:46.550 --> 00:16:48.530
of how the Sound
Amplifier works.

00:16:48.530 --> 00:16:51.860
Now we are going to go deeper
and start talking about code.

00:16:51.860 --> 00:16:56.330
What can you do with the
dynamics processing effects?

00:16:56.330 --> 00:16:59.420
So you can find the
dynamics processing effect

00:16:59.420 --> 00:17:02.840
in [INAUDIBLE] library in the
Android media audio effects--

00:17:02.840 --> 00:17:04.135
dynamics processing.

00:17:07.380 --> 00:17:09.630
So let's start talking
about use cases.

00:17:09.630 --> 00:17:12.740
So when can you use a
dynamics processing effect?

00:17:12.740 --> 00:17:15.050
The first use case
we saw at length,

00:17:15.050 --> 00:17:16.640
you can do a Sound Amplifier.

00:17:16.640 --> 00:17:19.220
So if you go today,
because this is now

00:17:19.220 --> 00:17:22.069
available in the Android
P developer preview,

00:17:22.069 --> 00:17:22.964
you can go tonight--

00:17:22.964 --> 00:17:25.130
I'm sure that everybody is
going to skip the party--

00:17:25.130 --> 00:17:28.790
and go and create your
own Sound Amplifier.

00:17:28.790 --> 00:17:31.910
So with the Sound Amplifier,
with the dynamics processing

00:17:31.910 --> 00:17:35.000
effect, we are expecting
people to create

00:17:35.000 --> 00:17:37.970
their own Sound Amplifiers
or create their own solutions

00:17:37.970 --> 00:17:41.110
to be able to hear
better, to listen better.

00:17:41.110 --> 00:17:44.420
Another example, another
[INAUDIBLE] that can happen

00:17:44.420 --> 00:17:47.720
is when you have a
device, an Android device,

00:17:47.720 --> 00:17:50.780
and you want to tune the
speakers or the headphones.

00:17:50.780 --> 00:17:55.460
Many companies have software
that will equalize or do

00:17:55.460 --> 00:17:58.190
something to the headphones
to make them sound flatter,

00:17:58.190 --> 00:18:00.830
better, to have more
bass-- something you want.

00:18:00.830 --> 00:18:02.540
Now, with this
effect, it will be

00:18:02.540 --> 00:18:05.664
easy for you and for
your clients to do that.

00:18:05.664 --> 00:18:07.580
Another application that
is really interesting

00:18:07.580 --> 00:18:09.580
is the TV midnight mode.

00:18:09.580 --> 00:18:12.380
If you are watching TV,
2:00 AM, you cannot sleep,

00:18:12.380 --> 00:18:13.940
but if you start
watching a movie,

00:18:13.940 --> 00:18:16.490
and sometimes someone is
whispering in the movie,

00:18:16.490 --> 00:18:19.460
just saying something really
quiet, and immediately, bam,

00:18:19.460 --> 00:18:22.070
music comes in there,
something really loud,

00:18:22.070 --> 00:18:24.010
you woke up everybody
in the house.

00:18:24.010 --> 00:18:25.700
With the dynamics
processing effect,

00:18:25.700 --> 00:18:28.240
you can actually have
something that they whisper--

00:18:28.240 --> 00:18:31.940
the very soft parts of the movie
can be raised up, but the very

00:18:31.940 --> 00:18:34.010
loud music or
gunshots or whatever

00:18:34.010 --> 00:18:36.280
is happening in the
movie, it can bring down,

00:18:36.280 --> 00:18:38.720
and everything is
going to work on a more

00:18:38.720 --> 00:18:42.050
level of sound in there,
[INAUDIBLE] sound.

00:18:42.050 --> 00:18:45.040
Another example can
be for media players.

00:18:45.040 --> 00:18:46.760
You are doing your
own media player

00:18:46.760 --> 00:18:50.510
and you want to actually do
some loudness maximization

00:18:50.510 --> 00:18:51.770
or mastering.

00:18:51.770 --> 00:18:55.040
You want to listen to classical
music in your media player

00:18:55.040 --> 00:18:56.504
and you are in a train.

00:18:56.504 --> 00:18:57.920
You would like to
have the control

00:18:57.920 --> 00:19:01.740
to be able to, again, squeeze
the loud sounds on bring up

00:19:01.740 --> 00:19:04.760
the soft sounds so
everything is working well

00:19:04.760 --> 00:19:07.340
for the dynamic range
that you have in there.

00:19:07.340 --> 00:19:09.590
Now I'm going to talk a
little bit about architecture,

00:19:09.590 --> 00:19:11.390
and I promise code
is coming, but I

00:19:11.390 --> 00:19:12.870
want to show the architecture.

00:19:12.870 --> 00:19:15.900
We are giving you a lot
of power with this effect.

00:19:15.900 --> 00:19:19.610
So the architecture
that we showed before,

00:19:19.610 --> 00:19:20.690
we were kind of lying.

00:19:20.690 --> 00:19:21.710
It's not as simple.

00:19:21.710 --> 00:19:23.345
It's a little bit more complex.

00:19:23.345 --> 00:19:25.640
The architecture-- yes,
we have four stages.

00:19:25.640 --> 00:19:29.060
We have a pre-EQ, multiband
compressor, post-EQ,

00:19:29.060 --> 00:19:33.080
and limiter, but we can
do more things in there.

00:19:33.080 --> 00:19:35.060
Inside of each one
of those stages,

00:19:35.060 --> 00:19:37.970
we have a lot of parameters
that you can control.

00:19:37.970 --> 00:19:41.950
We have the bands, and in the
pre-EQ, multiband compressor,

00:19:41.950 --> 00:19:45.020
and post-EQ, we can have
as many bands as you want,

00:19:45.020 --> 00:19:46.880
and you can control
each one of those bands

00:19:46.880 --> 00:19:48.740
and the parameters
in those bands.

00:19:48.740 --> 00:19:50.630
The limiter is a
single-band limiter,

00:19:50.630 --> 00:19:52.970
but you can also control that.

00:19:52.970 --> 00:19:57.980
All of these comes
into a channel.

00:19:57.980 --> 00:19:59.750
We have defined the
channel as let's say

00:19:59.750 --> 00:20:01.150
you have a stereo signal.

00:20:01.150 --> 00:20:04.170
Stereo signal has two
channels, left and right,

00:20:04.170 --> 00:20:06.530
so we are going to have
channel 0 and channel 1,

00:20:06.530 --> 00:20:09.590
and you can control all
of those independently,

00:20:09.590 --> 00:20:11.510
or you can have
many more channels.

00:20:11.510 --> 00:20:14.900
Let's say that you
have a 5.1 signal.

00:20:14.900 --> 00:20:17.900
You actually have six
channels that you can control,

00:20:17.900 --> 00:20:20.540
and you can index all of
those channels and say,

00:20:20.540 --> 00:20:24.370
I want to change the
multiband controller

00:20:24.370 --> 00:20:27.950
band number 3 in the channel
2, and I want to change this.

00:20:27.950 --> 00:20:31.530
We are giving you an API
to do all of those things.

00:20:31.530 --> 00:20:34.140
One thing that I want you
to notice is the limiters.

00:20:34.140 --> 00:20:36.374
The limiters are
linked limiters.

00:20:36.374 --> 00:20:37.790
I'm going to talk
more about that,

00:20:37.790 --> 00:20:39.620
but it's important
when you are talking

00:20:39.620 --> 00:20:43.130
about [INAUDIBLE] channel to be
able to change all the limiters

00:20:43.130 --> 00:20:46.070
kind of at once if you need to.

00:20:46.070 --> 00:20:47.840
So now, finally, code.

00:20:47.840 --> 00:20:48.590
Yes.

00:20:48.590 --> 00:20:50.640
We promised code,
we have some code.

00:20:50.640 --> 00:20:53.740
So this is an instantiation
example of the dynamics

00:20:53.740 --> 00:20:55.010
processing effect.

00:20:55.010 --> 00:20:58.370
For this, we decided, because we
have so many parameters and so

00:20:58.370 --> 00:21:00.200
many things that
can be configured,

00:21:00.200 --> 00:21:01.940
to have a config builder.

00:21:01.940 --> 00:21:04.640
So you create a config
builder, and then we

00:21:04.640 --> 00:21:06.740
are actually going to
instantiate the effect.

00:21:06.740 --> 00:21:10.430
First, with the config
builder in this example,

00:21:10.430 --> 00:21:14.261
we can have some parameters,
like the variant,

00:21:14.261 --> 00:21:15.260
the number of channels--

00:21:15.260 --> 00:21:17.550
I'm going to talk more
about that in a second.

00:21:17.550 --> 00:21:21.020
Then we can enable or disable
each one of the stages.

00:21:21.020 --> 00:21:23.540
In this example, we have all
the stages enabled-- yes,

00:21:23.540 --> 00:21:26.300
we want to use pre-EQ,
multiband compressor, post-EQ,

00:21:26.300 --> 00:21:27.440
and limiter--

00:21:27.440 --> 00:21:29.150
and the number of bands.

00:21:29.150 --> 00:21:33.030
We can say how many bands
we want per stage type.

00:21:33.030 --> 00:21:36.110
So all the pre-EQs
can have, let's say,

00:21:36.110 --> 00:21:39.350
8 bands, the multiband
compressors 10 bands,

00:21:39.350 --> 00:21:41.600
and they post-EQ 13 bands.

00:21:41.600 --> 00:21:44.150
The only limitation is,
like, the stage type needs

00:21:44.150 --> 00:21:45.770
to have the same
number of bands,

00:21:45.770 --> 00:21:48.740
but then you can choose any
number of bands that you want.

00:21:48.740 --> 00:21:51.200
We have some extra
parameters, as I mentioned--

00:21:51.200 --> 00:21:54.620
the variant and the number of
channels and the set prefered

00:21:54.620 --> 00:21:56.420
frame duration--

00:21:56.420 --> 00:21:59.300
that you can set in
the config builder.

00:21:59.300 --> 00:22:01.550
Then in the last
line, we are actually

00:22:01.550 --> 00:22:03.170
creating a configuration.

00:22:03.170 --> 00:22:06.280
We are saying build, and we
have a configuration object.

00:22:09.090 --> 00:22:12.500
Then I don't want to use
the configuration directly.

00:22:12.500 --> 00:22:16.220
Sometimes I want to finish
the architecture of my effect

00:22:16.220 --> 00:22:19.350
and go and change the
default parameters.

00:22:19.350 --> 00:22:21.970
So in this example,
I'm getting a channel,

00:22:21.970 --> 00:22:25.580
I'm getting a channel object in
the first line from the config,

00:22:25.580 --> 00:22:28.930
and I'm saying, from channel
number 0, in this case,

00:22:28.930 --> 00:22:30.410
get the multiband compressor.

00:22:30.410 --> 00:22:32.730
We have the multiband
compressor stage.

00:22:32.730 --> 00:22:37.520
And then I iterate
through the eight bands

00:22:37.520 --> 00:22:39.410
that I have in my
multiband compressor,

00:22:39.410 --> 00:22:42.900
and I went and changed the
parameters in each one of them.

00:22:42.900 --> 00:22:44.510
This is an example
for I/O. I'm sure

00:22:44.510 --> 00:22:47.810
that in real-world applications,
you can go and do more things.

00:22:47.810 --> 00:22:50.900
But you see that we can go
and set each one of the things

00:22:50.900 --> 00:22:51.620
that we want--

00:22:51.620 --> 00:22:53.132
that release, the
attack, the ratio

00:22:53.132 --> 00:22:54.590
of the threshold--
the way that you

00:22:54.590 --> 00:22:56.600
want for each one of the bands.

00:22:56.600 --> 00:23:01.280
And finally, we
go and instantiate

00:23:01.280 --> 00:23:04.280
my dynamics processing effect,
and you can instantiate it

00:23:04.280 --> 00:23:06.980
with the config
file that we just

00:23:06.980 --> 00:23:09.560
created and the session ID.

00:23:09.560 --> 00:23:12.980
That's where you attach
this effect to whatever

00:23:12.980 --> 00:23:16.790
the media player or the audio
track of interest for you.

00:23:16.790 --> 00:23:19.190
And then you kind of start
just going in your program

00:23:19.190 --> 00:23:21.800
and controlling everything.

00:23:21.800 --> 00:23:25.220
Instead of going on the API and
just showing the [INAUDIBLE],,

00:23:25.220 --> 00:23:28.070
I'm going to go a little bit
more meta, more conceptual,

00:23:28.070 --> 00:23:30.510
to show this in
graphics a little bit.

00:23:30.510 --> 00:23:34.880
So in the configuration, or
when we are running real time,

00:23:34.880 --> 00:23:38.490
we can have access to
channels that I just show you.

00:23:38.490 --> 00:23:40.100
And we have many channels.

00:23:40.100 --> 00:23:42.050
So the channel object,
and we can index

00:23:42.050 --> 00:23:43.810
the channel by index numbers.

00:23:43.810 --> 00:23:47.090
So 0, 1, 2, 3-- we
can get the channel.

00:23:47.090 --> 00:23:50.810
Each channel object
actually has some parameters

00:23:50.810 --> 00:23:54.050
like the input gain that you can
go and change on the channel.

00:23:54.050 --> 00:23:55.250
Or you have the stages.

00:23:55.250 --> 00:23:58.150
You can access the [? pre-q ?]
multiband compressor,

00:23:58.150 --> 00:24:00.380
[? post-q, ?] or limiter.

00:24:00.380 --> 00:24:03.570
And let's say at this
moment, in the EQ,

00:24:03.570 --> 00:24:05.240
you can actually grab the EQ.

00:24:05.240 --> 00:24:08.270
Both EQs look exactly the
same from the API level,

00:24:08.270 --> 00:24:09.830
from the API viewpoint.

00:24:09.830 --> 00:24:12.290
And you can go and change
the parameters on the EQ

00:24:12.290 --> 00:24:15.650
or change the parameters in
each one of the bands there.

00:24:15.650 --> 00:24:16.910
Sorry, it's going very deeper.

00:24:16.910 --> 00:24:21.413
So we can go from
band to the EQ,

00:24:21.413 --> 00:24:23.870
from channel and then the
collection of channels.

00:24:23.870 --> 00:24:26.360
So we have access to
all the granularities

00:24:26.360 --> 00:24:27.947
that we want there.

00:24:27.947 --> 00:24:29.780
The same thing for the
multiband compressor.

00:24:29.780 --> 00:24:31.610
We can access the
multiband compressor

00:24:31.610 --> 00:24:35.480
on the side of the channel
and then access the parameters

00:24:35.480 --> 00:24:38.420
that we have in each
one of the bands.

00:24:38.420 --> 00:24:39.579
And lastly, the limiter.

00:24:39.579 --> 00:24:41.870
We don't have bands in the
limiter, only the parameters

00:24:41.870 --> 00:24:42.470
there.

00:24:42.470 --> 00:24:44.270
And we can access that.

00:24:44.270 --> 00:24:46.610
So now I'm going to
dive a little bit more

00:24:46.610 --> 00:24:50.660
on each stage type and what
are the accessors that we have,

00:24:50.660 --> 00:24:53.150
the setters and getters
that we have there?

00:24:53.150 --> 00:24:55.550
First, the equalizer.

00:24:55.550 --> 00:24:58.260
I think that most people are
familiar with the equalizer,

00:24:58.260 --> 00:24:59.490
what an equalizer does.

00:24:59.490 --> 00:25:01.340
But if, not very quickly--

00:25:01.340 --> 00:25:04.771
with an equalizer, we are going
to specify different frequency

00:25:04.771 --> 00:25:05.270
bands.

00:25:05.270 --> 00:25:07.220
We are going to
have bands from 0

00:25:07.220 --> 00:25:11.440
to 500 hertz, 500 to
3,000, 3,000 to 7,000.

00:25:11.440 --> 00:25:15.140
And we are going to change the
energy, the level or the gain

00:25:15.140 --> 00:25:18.160
that we have in each
one of those bands.

00:25:18.160 --> 00:25:21.360
In here, we can set the
bands any way that we want.

00:25:21.360 --> 00:25:25.010
So we can have many bands,
and we can have any color

00:25:25.010 --> 00:25:26.360
frequencies that we want.

00:25:26.360 --> 00:25:27.920
And this graph is
kind of misleading,

00:25:27.920 --> 00:25:30.660
because all of the bands
have the same width.

00:25:30.660 --> 00:25:31.380
That's not true.

00:25:31.380 --> 00:25:33.670
You can do any
width that you want.

00:25:33.670 --> 00:25:36.460
And once that you set
up the bands, you can go

00:25:36.460 --> 00:25:38.210
and, with the accessors
that we have here,

00:25:38.210 --> 00:25:40.250
we can get the gain--
what is the current gain--

00:25:40.250 --> 00:25:41.615
or we can set the gain.

00:25:41.615 --> 00:25:46.010
And we can change all of
this, also, real time.

00:25:46.010 --> 00:25:47.840
We are going to--

00:25:47.840 --> 00:25:49.610
then, the multiband compressor.

00:25:49.610 --> 00:25:50.870
So first a disclaimer.

00:25:50.870 --> 00:25:52.700
Someone was pointing
out you are only

00:25:52.700 --> 00:25:54.730
showing one band in the
multiband compressor.

00:25:54.730 --> 00:25:58.010
And yes, I'm showing
one band, but this

00:25:58.010 --> 00:26:01.880
is easy to show what the
multiband compressor does.

00:26:01.880 --> 00:26:04.470
As Brian mentioned
and we have mentioned,

00:26:04.470 --> 00:26:07.010
when you have a compressor,
a multiband compressor,

00:26:07.010 --> 00:26:09.950
the main goal is to take
sounds that are really loud

00:26:09.950 --> 00:26:12.830
and make them softer, and
sounds that are very soft

00:26:12.830 --> 00:26:14.640
and make them louder.

00:26:14.640 --> 00:26:16.610
The way that we have
here represented,

00:26:16.610 --> 00:26:18.410
we have the same
sentence in the before.

00:26:18.410 --> 00:26:21.020
We have the sentence
that is loud, medium,

00:26:21.020 --> 00:26:22.860
and soft in the top.

00:26:22.860 --> 00:26:25.310
And after we apply
the processing

00:26:25.310 --> 00:26:29.090
of the multiband compressor, is
going to look like the after.

00:26:29.090 --> 00:26:31.370
That is, the loud sound
is a little bit softer.

00:26:31.370 --> 00:26:33.070
The medium one stays medium.

00:26:33.070 --> 00:26:35.810
And the soft one goes very loud.

00:26:35.810 --> 00:26:38.420
The way that a multiband
compressor works,

00:26:38.420 --> 00:26:41.750
or the parameters work-- bear
with me for a second for this

00:26:41.750 --> 00:26:42.530
graphic--

00:26:42.530 --> 00:26:47.390
is we have the inputs, what
is the level of the signal

00:26:47.390 --> 00:26:50.140
in the horizontal axis.

00:26:50.140 --> 00:26:53.630
And the numbers are
from minus 100 to 10.

00:26:53.630 --> 00:26:55.940
The lower the
number, like minus 50

00:26:55.940 --> 00:26:59.550
is way softer than maybe
minus 10, for example.

00:26:59.550 --> 00:27:02.420
So minus 10 will be
louder, a louder sound.

00:27:02.420 --> 00:27:07.150
And the compressor what is doing
this is analyzing the input.

00:27:07.150 --> 00:27:11.150
And if the input is above the
threshold-- we have a threshold

00:27:11.150 --> 00:27:13.550
parameter-- it's going to
decide to say, you know,

00:27:13.550 --> 00:27:14.270
that's too loud.

00:27:14.270 --> 00:27:15.800
I'm going to bring you down.

00:27:15.800 --> 00:27:18.020
But if it happens to
be below the threshold,

00:27:18.020 --> 00:27:19.280
it's not touched.

00:27:19.280 --> 00:27:23.310
So for example, in this
graphic, we choose minus 40.

00:27:23.310 --> 00:27:25.335
The input was minus 40 level.

00:27:25.335 --> 00:27:27.800
The output will
exactly minus 40.

00:27:27.800 --> 00:27:29.180
We are below the threshold.

00:27:29.180 --> 00:27:31.650
We are not going to
modify that signal.

00:27:31.650 --> 00:27:35.180
But the threshold here
is around minus 25.

00:27:35.180 --> 00:27:38.870
So if I choose a
value of minus 20,

00:27:38.870 --> 00:27:42.500
the actual output
will be around--

00:27:42.500 --> 00:27:45.580
sorry, let's choose an
impulse of minus 10.

00:27:45.580 --> 00:27:47.300
Sorry, that's better.

00:27:47.300 --> 00:27:52.050
Minus 10 as an input will map
to a minus 20 to the output.

00:27:52.050 --> 00:27:55.010
That means that the sound
became softer just because it

00:27:55.010 --> 00:27:57.260
was above the threshold.

00:27:57.260 --> 00:28:00.620
With all these parameters,
with the compression ratio,

00:28:00.620 --> 00:28:04.970
the threshold, and the
input gain, the output gain,

00:28:04.970 --> 00:28:07.130
and the other parameters,
we are able to do

00:28:07.130 --> 00:28:08.660
what we have been
promising, that we

00:28:08.660 --> 00:28:11.720
are able to take sounds
and make them louder,

00:28:11.720 --> 00:28:14.480
but take loud sounds
and make them softer.

00:28:14.480 --> 00:28:16.530
And that's what a multiband
compressor is doing.

00:28:16.530 --> 00:28:19.160
And it's doing this
in different bands.

00:28:19.160 --> 00:28:24.310
We can take regions of
frequency from 0 to 1,000 hertz

00:28:24.310 --> 00:28:28.010
and behave in a different way
than the region from 1,000

00:28:28.010 --> 00:28:29.690
to 5,000 will behave.

00:28:29.690 --> 00:28:31.895
We are giving you all
that power to control.

00:28:35.320 --> 00:28:38.560
The multiband compressor, being
one of the most complex ones,

00:28:38.560 --> 00:28:40.540
you can get these
setters and getters.

00:28:40.540 --> 00:28:43.900
So you can get the attack
time, the release time, ratio--

00:28:43.900 --> 00:28:47.320
all these parameters that you
need to actually configure

00:28:47.320 --> 00:28:48.610
a compressor.

00:28:48.610 --> 00:28:51.360
And you do this per band.

00:28:51.360 --> 00:28:53.200
As I-- well.

00:28:53.200 --> 00:28:55.870
There is one thing, and I'm sure
that everybody is asking this.

00:28:55.870 --> 00:28:58.090
Why do you have a
pre-gain, a post-gain,

00:28:58.090 --> 00:29:01.990
if your multiband compressor
is before and after

00:29:01.990 --> 00:29:03.620
an equalization?

00:29:03.620 --> 00:29:05.860
And it's true,
they are redundant.

00:29:05.860 --> 00:29:08.330
They are doing pretty
much exactly the same.

00:29:08.330 --> 00:29:10.270
But we did that for one reason.

00:29:10.270 --> 00:29:12.610
We talked to a lot of
developers and people

00:29:12.610 --> 00:29:15.820
that actually have a lot of
these algorithms in real life.

00:29:15.820 --> 00:29:19.510
And a big portion
of them, they'd

00:29:19.510 --> 00:29:21.570
really like to have an
equalization and then

00:29:21.570 --> 00:29:24.130
a multiband compressor
to do some tuning

00:29:24.130 --> 00:29:26.410
of their microphones
or the speakers.

00:29:26.410 --> 00:29:29.520
Some of them want to have a
multiband compressor and then

00:29:29.520 --> 00:29:31.180
an equalization state.

00:29:31.180 --> 00:29:35.650
So the easiest way for us to
make this effect very universal

00:29:35.650 --> 00:29:40.780
was to build in some redundancy
and do the API in such a way

00:29:40.780 --> 00:29:46.160
that they can easily port
older algorithms to this.

00:29:46.160 --> 00:29:48.260
The last stage is the limiter.

00:29:48.260 --> 00:29:50.080
The limiter is
pretty much the same

00:29:50.080 --> 00:29:52.540
that the multiband compressor,
but it's a single band.

00:29:52.540 --> 00:29:54.400
So we don't have multiple bands.

00:29:54.400 --> 00:29:57.340
And what this is doing
is pretty much the same.

00:29:57.340 --> 00:29:59.920
It's taking a sound, and
if it's way too loud--

00:29:59.920 --> 00:30:01.960
if it's above a certain
level in the threshold--

00:30:01.960 --> 00:30:04.380
it's just going to
squash that down.

00:30:04.380 --> 00:30:06.130
It's very useful.

00:30:06.130 --> 00:30:09.370
And it's usually found at the
end of any audio processing

00:30:09.370 --> 00:30:11.484
chain, especially to
protect the speakers.

00:30:11.484 --> 00:30:12.900
You don't want
that the processing

00:30:12.900 --> 00:30:15.784
did something funky and
the sound is really loud.

00:30:15.784 --> 00:30:17.200
And you don't want
that loud sound

00:30:17.200 --> 00:30:18.790
to come out of the speakers.

00:30:18.790 --> 00:30:21.520
So you go, and the limiter
is going to say, OK, sorry,

00:30:21.520 --> 00:30:22.420
this is too loud.

00:30:22.420 --> 00:30:24.190
I'm not going to
clip, but I'm just

00:30:24.190 --> 00:30:27.700
going to squash it down so it
doesn't destroy the speakers.

00:30:27.700 --> 00:30:29.560
So the limiter is really good.

00:30:29.560 --> 00:30:31.690
And I promised to mention
something about the link.

00:30:31.690 --> 00:30:35.650
The limiters are link limiters,
and we have the link group.

00:30:35.650 --> 00:30:37.385
When we have multiple
channels-- let's

00:30:37.385 --> 00:30:38.635
say that we have two channels.

00:30:42.079 --> 00:30:43.370
And they are in the same group.

00:30:43.370 --> 00:30:44.980
And one of the channels,
the left channel,

00:30:44.980 --> 00:30:46.910
something really loud
happen in that channel

00:30:46.910 --> 00:30:48.850
and is very, very loud.

00:30:48.850 --> 00:30:52.550
It will squish all down
only the left channel.

00:30:52.550 --> 00:30:55.240
The stereo image will shift
all the way to the right.

00:30:55.240 --> 00:30:57.820
Because this, the
right one, did nothing.

00:30:57.820 --> 00:31:00.160
But if they are linked
and, for some reason,

00:31:00.160 --> 00:31:03.460
one of the channels got a loud
sound, both will come down

00:31:03.460 --> 00:31:06.820
simultaneously and the stereo
signal, the stereo image,

00:31:06.820 --> 00:31:08.050
it will not move.

00:31:08.050 --> 00:31:11.120
It will stay in the center,
stay where they need it to be.

00:31:11.120 --> 00:31:14.800
So being able to control the
link groups in a stereo signal

00:31:14.800 --> 00:31:17.350
or in a multichannel
environment--

00:31:17.350 --> 00:31:19.750
let's say you want to
link the stereo speakers,

00:31:19.750 --> 00:31:22.180
the surround speakers
in a different group,

00:31:22.180 --> 00:31:26.530
so you can keep your
spatial image intact.

00:31:26.530 --> 00:31:29.260
And that was another feature
that was asked for us to do.

00:31:31.980 --> 00:31:34.470
Well, so some more comments
about the dynamics processing

00:31:34.470 --> 00:31:35.100
effect.

00:31:35.100 --> 00:31:37.230
First one, the
real time controls.

00:31:37.230 --> 00:31:40.080
All the controls on the API that
I tried to summarize in here,

00:31:40.080 --> 00:31:41.280
but it's really big.

00:31:41.280 --> 00:31:44.850
I will encourage you to go on
and read the API documentation.

00:31:44.850 --> 00:31:48.420
All these controls, most of
them are real-time controls.

00:31:48.420 --> 00:31:50.910
You can use them, and once
that your effect is running,

00:31:50.910 --> 00:31:52.935
you can go and change
pretty much any parameter

00:31:52.935 --> 00:31:53.540
that you want.

00:31:53.540 --> 00:31:55.440
You can change the
levels in here.

00:31:55.440 --> 00:31:58.474
You can change the attack,
the release, the ratio--

00:31:58.474 --> 00:32:00.390
anything that you want
in any of the channels,

00:32:00.390 --> 00:32:02.310
in any of the bands.

00:32:02.310 --> 00:32:06.120
You can also use pretty much
the same API for instantiation.

00:32:06.120 --> 00:32:08.340
Sometimes you want
to create an effect

00:32:08.340 --> 00:32:10.260
and have it ready
to go immediately.

00:32:10.260 --> 00:32:12.150
As soon as it
starts playing, it's

00:32:12.150 --> 00:32:13.830
playing with all the parameters.

00:32:13.830 --> 00:32:15.850
So it will work like that.

00:32:15.850 --> 00:32:18.230
We also have some
implementations.

00:32:18.230 --> 00:32:20.760
At this moment, we are
offering two implementations,

00:32:20.760 --> 00:32:25.710
two variants that we call a
favor frequency favor time.

00:32:25.710 --> 00:32:28.590
Sometimes, for these effects,
if you have a frequency domain

00:32:28.590 --> 00:32:30.630
implementation, it's
good because you

00:32:30.630 --> 00:32:34.140
can have very precise
frequency splits in the bands

00:32:34.140 --> 00:32:35.990
that you may need
for your outgoing.

00:32:35.990 --> 00:32:39.510
And at the same time, we are
also giving the desired frame

00:32:39.510 --> 00:32:40.350
size.

00:32:40.350 --> 00:32:42.870
A hint that you can give
to the audio engine--

00:32:42.870 --> 00:32:44.400
to the effect engine--

00:32:44.400 --> 00:32:47.280
to say, well, you
know, I like frequency

00:32:47.280 --> 00:32:50.100
and I would like to have frames
of about 10 milliseconds, 20

00:32:50.100 --> 00:32:51.850
milliseconds, for
your processing.

00:32:51.850 --> 00:32:54.000
So although it's
not a guarantee,

00:32:54.000 --> 00:32:59.334
you can tell the engine,
I would like to do that.

00:32:59.334 --> 00:33:01.000
Another important
thing with this effect

00:33:01.000 --> 00:33:03.120
is, it's built in into AOSB.

00:33:03.120 --> 00:33:09.000
So all AOSB, Android AOSB is
shipping with this effect.

00:33:09.000 --> 00:33:11.170
But it's an
OEM-replaceable effect.

00:33:11.170 --> 00:33:14.460
So if an OEM really wants
to come with a snappier

00:33:14.460 --> 00:33:17.730
effect or a snappier
implementation or something,

00:33:17.730 --> 00:33:19.030
they are encouraged to do that.

00:33:19.030 --> 00:33:20.780
And if we have OEM
people in the audience,

00:33:20.780 --> 00:33:22.290
please talk to me afterwards.

00:33:22.290 --> 00:33:24.390
But yes, go ahead and do this.

00:33:24.390 --> 00:33:27.180
And the only thing is, please
do very cool effects with these.

00:33:27.180 --> 00:33:29.370
Some very good quality effects.

00:33:29.370 --> 00:33:32.510
The other thing is, this effect
is available for developers

00:33:32.510 --> 00:33:35.020
as an insert effect.

00:33:35.020 --> 00:33:37.730
You can go unimplemented
in your applications.

00:33:37.730 --> 00:33:38.760
You have a media player.

00:33:38.760 --> 00:33:40.020
You have a music application.

00:33:40.020 --> 00:33:42.900
You just go and use the
Android media, all the effects,

00:33:42.900 --> 00:33:45.900
dynamic processing effects, and
it will be available for you

00:33:45.900 --> 00:33:48.360
there in the implementation.

00:33:48.360 --> 00:33:53.230
So summary-- today, we
learned a bunch of things.

00:33:53.230 --> 00:33:56.250
The first one, we
introduced a new feature,

00:33:56.250 --> 00:33:57.640
the sound amplifier.

00:33:57.640 --> 00:34:00.360
So it's the new
accessibility feature.

00:34:00.360 --> 00:34:03.690
It uses only the smartphone
and a set of headphones

00:34:03.690 --> 00:34:06.840
and helps you improve
your listening experience.

00:34:06.840 --> 00:34:10.073
Brian showed you a couple
of very cool demos.

00:34:10.073 --> 00:34:11.489
And thank you for
the sound people

00:34:11.489 --> 00:34:13.238
that they turned off
the AC at that moment

00:34:13.238 --> 00:34:17.250
so we could hear things
a little bit better.

00:34:17.250 --> 00:34:19.830
We learned about the hearing
threshold and the hearing

00:34:19.830 --> 00:34:23.190
threshold shifts and
how they power the way

00:34:23.190 --> 00:34:25.810
that the sound amplifier works.

00:34:25.810 --> 00:34:29.409
And the last thing, we showed
the dynamics processing effect,

00:34:29.409 --> 00:34:32.850
the code, how the stages work,
and how can you go and create

00:34:32.850 --> 00:34:34.530
your own dynamics
processing effect

00:34:34.530 --> 00:34:37.389
to embed in your
own applications.

00:34:37.389 --> 00:34:39.989
So with that, we
want to give thanks

00:34:39.989 --> 00:34:42.460
to a lot of people that were
involved in this project--

00:34:42.460 --> 00:34:45.000
Brian's team, the Android
accessibility team;

00:34:45.000 --> 00:34:47.449
my team, the Android
media framework team;

00:34:47.449 --> 00:34:51.260
the research team at Google;
the sound understanding team;

00:34:51.260 --> 00:34:53.580
our team in Taipei
that they helped

00:34:53.580 --> 00:34:56.313
implement the applications
that you saw today.

00:34:56.313 --> 00:34:58.800
And I want to thank
you for staying

00:34:58.800 --> 00:35:03.030
so late the last day of
I/O. And please, contact us

00:35:03.030 --> 00:35:05.410
if you have any questions.

00:35:05.410 --> 00:35:06.770
Thank you.

