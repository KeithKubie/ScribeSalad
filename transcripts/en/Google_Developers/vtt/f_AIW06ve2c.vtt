WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.900
ARUN NAGARAJAN: Hello and
welcome to another episode of

00:00:01.900 --> 00:00:03.190
Google Developers Live.

00:00:03.190 --> 00:00:04.950
My name is Arun Nagarajan.

00:00:04.950 --> 00:00:06.520
KALYAN REDDY: And I'm
Kalyan Reddy.

00:00:06.520 --> 00:00:07.970
ARUN NAGARAJAN: This
is Google Apps

00:00:07.970 --> 00:00:10.570
Unscripted July, 2013 edition.

00:00:10.570 --> 00:00:14.320
So this is our monthly office
hours slash announcements, and

00:00:14.320 --> 00:00:17.330
just general discussion
GDL that we do.

00:00:17.330 --> 00:00:18.784
We've started doing this, I
think for a few months now,

00:00:18.784 --> 00:00:20.730
and it has been really,
really successful.

00:00:20.730 --> 00:00:22.580
And I'm really excited
to see all the people

00:00:22.580 --> 00:00:24.630
jump in, ask questions.

00:00:24.630 --> 00:00:29.400
And we're deep in the summer,
so really excited to pick up

00:00:29.400 --> 00:00:32.619
the pace and have a lot of
announcements and really cool

00:00:32.619 --> 00:00:33.590
things that we're working on.

00:00:33.590 --> 00:00:35.520
We'll be sharing that
with you very soon.

00:00:35.520 --> 00:00:38.120
KALYAN REDDY: If you're tuning
in live, we're going to start

00:00:38.120 --> 00:00:40.240
with release notes and
other new and cool

00:00:40.240 --> 00:00:41.480
features and app script.

00:00:41.480 --> 00:00:43.110
We'll get to your questions
towards the second half.

00:00:43.110 --> 00:00:43.970
ARUN NAGARAJAN: That's right.

00:00:43.970 --> 00:00:46.980
Yeah, to give us about 10
minutes to bring up to speed

00:00:46.980 --> 00:00:48.950
on what we've done
so far in July.

00:00:48.950 --> 00:00:52.216
And then we'll save plenty of
time for Q&amp;A. So Kalyan, do

00:00:52.216 --> 00:00:54.480
you want to start us off with
release notes and the two

00:00:54.480 --> 00:00:55.800
releases we've done
so far this month?

00:00:55.800 --> 00:00:56.470
KALYAN REDDY: Sure.

00:00:56.470 --> 00:01:00.000
Oh, and by the way, there's a
Hangouts link as well so you

00:01:00.000 --> 00:01:02.680
can join us there and you can
chime in with your questions

00:01:02.680 --> 00:01:04.760
and we'll try our best
to answer them.

00:01:04.760 --> 00:01:05.069
All right.

00:01:05.069 --> 00:01:07.050
Let's go ahead and get started
with release notes here.

00:01:07.050 --> 00:01:11.200
We've had two releases so far
in July since our last Apps

00:01:11.200 --> 00:01:12.130
Unscripted.

00:01:12.130 --> 00:01:17.230
The first one here on July 9,
we added a new XML Service.

00:01:17.230 --> 00:01:19.880
This is actually a direct
replacement for our old XML

00:01:19.880 --> 00:01:24.350
Service and it features several
improvements here.

00:01:24.350 --> 00:01:26.900
Our colleague [? Eric Coleta ?],
you might

00:01:26.900 --> 00:01:29.940
know him from previous
episodes--

00:01:29.940 --> 00:01:32.140
he created this blog post that
you should check out on our

00:01:32.140 --> 00:01:33.305
Apps Script blog,
googleappsdevelo

00:01:33.305 --> 00:01:36.010
per.blogspot.com.

00:01:36.010 --> 00:01:39.230
He basically goes through a very
simple example of how you

00:01:39.230 --> 00:01:43.060
create various elements with
the new XML Service.

00:01:43.060 --> 00:01:43.330
[INAUDIBLE]

00:01:43.330 --> 00:01:47.010
inbox threads, put them as
XML elements, give them

00:01:47.010 --> 00:01:48.750
attributes and such.

00:01:48.750 --> 00:01:50.530
And it's all very
straightforward.

00:01:50.530 --> 00:01:52.346
So it's worth checking out.

00:01:52.346 --> 00:01:54.770
One thing you'll notice is that
if you're familiar with

00:01:54.770 --> 00:01:58.390
jdom this should look similar,
and you should have no trouble

00:01:58.390 --> 00:01:59.310
getting started with that.

00:01:59.310 --> 00:02:01.340
ARUN NAGARAJAN: An important
thing to note here is that the

00:02:01.340 --> 00:02:06.320
old one that we deprecated is
just called XML, which is a

00:02:06.320 --> 00:02:08.289
little confusing and
inconsistent with some of the

00:02:08.289 --> 00:02:09.970
other services that we have.

00:02:09.970 --> 00:02:13.010
So the new one is called XML
Service, and it's easier to

00:02:13.010 --> 00:02:14.020
find and easier to use.

00:02:14.020 --> 00:02:21.110
KALYAN REDDY: And so if you're
looking for the documentation,

00:02:21.110 --> 00:02:24.410
it's in the same place as the
old one except you'll see the

00:02:24.410 --> 00:02:30.870
old as it's actually deprecated
down here.

00:02:30.870 --> 00:02:31.640
That's the old service.

00:02:31.640 --> 00:02:33.270
And then the new one is here.

00:02:33.270 --> 00:02:35.360
ARUN NAGARAJAN: So just keep
that in mind when you're

00:02:35.360 --> 00:02:36.590
searching for this.

00:02:36.590 --> 00:02:40.130
KALYAN REDDY: So along with that
we also deprecated the

00:02:40.130 --> 00:02:43.060
[INAUDIBLE] service so now
you're able to just use the

00:02:43.060 --> 00:02:47.720
new XML Service with your URL
fetch app and replicate a lot

00:02:47.720 --> 00:02:48.410
of the functionality.

00:02:48.410 --> 00:02:49.020
ARUN NAGARAJAN: That's right.

00:02:49.020 --> 00:02:51.600
You can template an XML file as
well so you could use the

00:02:51.600 --> 00:02:55.590
HTML services templating
capability depopulate your XML

00:02:55.590 --> 00:03:00.560
template, if you have one, or
as most API's have gone JSON

00:03:00.560 --> 00:03:02.890
and REST-based services have
kind of taken over.

00:03:02.890 --> 00:03:05.370
So obviously we provide a really
good support for that

00:03:05.370 --> 00:03:06.030
for a long time.

00:03:06.030 --> 00:03:08.400
So keep that in mind as well.

00:03:08.400 --> 00:03:09.860
KALYAN REDDY: All right,
let's see.

00:03:09.860 --> 00:03:11.210
Some issue fixes here.

00:03:11.210 --> 00:03:14.170
One is that, if you were using
the advanced Google services--

00:03:14.170 --> 00:03:16.265
again, these are things
like URL Shortener--

00:03:16.265 --> 00:03:16.875
ARUN NAGARAJAN: Tasks.

00:03:16.875 --> 00:03:19.050
KALYAN REDDY: --that live
under-- yeah, tasks that live

00:03:19.050 --> 00:03:21.030
under the advanced google
services tab in our

00:03:21.030 --> 00:03:23.640
documentation, if you're using
those, there was a slight

00:03:23.640 --> 00:03:26.700
problem in which if you were
chaining method calls together

00:03:26.700 --> 00:03:29.820
instead of doing each method
on a separate line as a

00:03:29.820 --> 00:03:31.990
different statement then
there was an error.

00:03:31.990 --> 00:03:33.710
And that's no longer [INAUDIBLE]
temporary issue

00:03:33.710 --> 00:03:34.300
that we fixed.

00:03:34.300 --> 00:03:34.700
ARUN NAGARAJAN: Yeah.

00:03:34.700 --> 00:03:36.350
We apologize for those issues.

00:03:36.350 --> 00:03:39.390
If you did change your code to
not chain them, it's OK.

00:03:39.390 --> 00:03:40.260
You can leave it as such.

00:03:40.260 --> 00:03:42.870
But if you're copying and
pasting our samples or you

00:03:42.870 --> 00:03:45.090
want to keep your code
really succinct, you

00:03:45.090 --> 00:03:46.410
can change them again.

00:03:46.410 --> 00:03:48.600
KALYAN REDDY: And finally
the remove editor

00:03:48.600 --> 00:03:50.100
method on a file object.

00:03:50.100 --> 00:03:53.030
It no longer throws an exception
when the editor is a

00:03:53.030 --> 00:03:56.030
group and not an individual
user.

00:03:56.030 --> 00:03:56.450
Let's see.

00:03:56.450 --> 00:03:59.660
On the July 22 release we added
two of our new services

00:03:59.660 --> 00:04:01.450
that we released
in the I/O time

00:04:01.450 --> 00:04:02.530
frame that you'll remember.

00:04:02.530 --> 00:04:04.110
We added that to the app
script dashboard.

00:04:04.110 --> 00:04:08.760
So now you can get alerts
whenever a service has

00:04:08.760 --> 00:04:10.860
reliability issues or
something for a day.

00:04:10.860 --> 00:04:12.175
You'll see that tracked.

00:04:12.175 --> 00:04:12.990
ARUN NAGARAJAN: That's right.

00:04:12.990 --> 00:04:13.430
Yeah.

00:04:13.430 --> 00:04:15.350
And dashboard is actually--

00:04:15.350 --> 00:04:17.690
I think it's
script.google.com/dashboard.

00:04:17.690 --> 00:04:18.269
Is that right?

00:04:18.269 --> 00:04:18.690
KALYAN REDDY: Yep.

00:04:18.690 --> 00:04:20.700
ARUN NAGARAJAN:
Script.google.com/dashboard.

00:04:20.700 --> 00:04:21.720
If you think you're
having an issue--

00:04:21.720 --> 00:04:23.030
I think I have the URL right.

00:04:23.030 --> 00:04:25.500
Let's just quickly verify
and see if I--

00:04:25.500 --> 00:04:26.355
KALYAN REDDY: Let's
quiz our own here.

00:04:26.355 --> 00:04:27.108
ARUN NAGARAJAN: Yes!

00:04:27.108 --> 00:04:28.572
KALYAN REDDY: There we go.

00:04:28.572 --> 00:04:29.550
Alright.

00:04:29.550 --> 00:04:32.152
So you'll see there here
[INAUDIBLE] up in format for

00:04:32.152 --> 00:04:33.280
the two that we added.

00:04:33.280 --> 00:04:33.850
ARUN NAGARAJAN: Yeah.

00:04:33.850 --> 00:04:36.550
So if you think you're having
some issue or outage, make

00:04:36.550 --> 00:04:37.790
sure you check there.

00:04:37.790 --> 00:04:39.920
That'll be a really good
indication of what's going on.

00:04:39.920 --> 00:04:42.500
And it took us a while to put
it up there, but now you can

00:04:42.500 --> 00:04:44.910
check there for the new services
we launched as well.

00:04:44.910 --> 00:04:45.730
KALYAN REDDY: Yeah.

00:04:45.730 --> 00:04:49.430
And this interesting issue
that we fixed, it came up

00:04:49.430 --> 00:04:52.870
basically when you exposed a
script as a web app, there

00:04:52.870 --> 00:04:56.010
were certain URL parameters that
were getting, like, cut.

00:04:56.010 --> 00:04:56.640
[INAUDIBLE]

00:04:56.640 --> 00:05:00.510
I think one was question
mark PLI equals 1.

00:05:00.510 --> 00:05:03.610
And you would think, you know,
why now just use other

00:05:03.610 --> 00:05:04.210
parameters?

00:05:04.210 --> 00:05:07.660
But there's certain
organizations where they by

00:05:07.660 --> 00:05:09.010
default require these.

00:05:09.010 --> 00:05:10.650
There's some special
meaning to them.

00:05:10.650 --> 00:05:13.530
In any case, we fixed it such
that now you can use whatever

00:05:13.530 --> 00:05:14.380
parameter you want.

00:05:14.380 --> 00:05:17.650
All of them will get past to
your application without being

00:05:17.650 --> 00:05:18.260
trimmed of cut.

00:05:18.260 --> 00:05:19.010
ARUN NAGARAJAN: That's right.

00:05:19.010 --> 00:05:22.090
I think it mostly came up when
you had a web app embedded

00:05:22.090 --> 00:05:25.020
into a google site and there
were certain parameters either

00:05:25.020 --> 00:05:27.590
added in manually or
automatically by some system,

00:05:27.590 --> 00:05:30.780
and the web app never got
those parameters.

00:05:30.780 --> 00:05:32.710
So we fixed that.

00:05:32.710 --> 00:05:33.480
KALYAN REDDY: Awesome.

00:05:33.480 --> 00:05:33.830
That's it for release notes.

00:05:33.830 --> 00:05:34.370
ARUN NAGARAJAN: Yeah.

00:05:34.370 --> 00:05:37.200
The two releases and hopefully
I'll kind of walk you through

00:05:37.200 --> 00:05:41.893
what we've added or updated, or
in one case deprecated and

00:05:41.893 --> 00:05:42.730
replaced with something
better.

00:05:42.730 --> 00:05:45.930
KALYAN REDDY: There's also
another nice addition here.

00:05:45.930 --> 00:05:46.470
ARUN NAGARAJAN: That's right.

00:05:46.470 --> 00:05:48.440
So one of the things that we
didn't really make it part of

00:05:48.440 --> 00:05:49.900
the release notes,
but we think it's

00:05:49.900 --> 00:05:51.250
really big and important.

00:05:51.250 --> 00:05:54.120
It's sort of the top post right
now on our developer

00:05:54.120 --> 00:05:58.360
blog is the end user experience
of authorizing your

00:05:58.360 --> 00:05:59.140
application.

00:05:59.140 --> 00:06:02.425
It just got probably, I don't
know, ten times, a hundred

00:06:02.425 --> 00:06:04.840
times better.

00:06:04.840 --> 00:06:08.010
It's been one of the long term
pain points that we've heard

00:06:08.010 --> 00:06:11.760
from a lot of different
developers.

00:06:11.760 --> 00:06:13.900
The developers that started
working on the platform

00:06:13.900 --> 00:06:16.420
several years ago I think have
gotten used to this by now,

00:06:16.420 --> 00:06:19.380
but hopefully the new developers
and the new users

00:06:19.380 --> 00:06:22.000
you're acquiring are
experiencing a much nicer

00:06:22.000 --> 00:06:23.550
authorization process.

00:06:23.550 --> 00:06:27.250
Essentially what this is going
to be now is a very standard

00:06:27.250 --> 00:06:31.110
authorization process that an
end user sees, that they see

00:06:31.110 --> 00:06:35.410
when they authorize a standard
web app that's built on Google

00:06:35.410 --> 00:06:36.110
technologies.

00:06:36.110 --> 00:06:38.660
That's using OAuth2,
generally speaking.

00:06:38.660 --> 00:06:41.130
And they get a really nice
screen that's very clean and

00:06:41.130 --> 00:06:44.660
concise, tells the user what
your script is trying to do,

00:06:44.660 --> 00:06:46.710
and then they get a very
straightforward blue accept

00:06:46.710 --> 00:06:49.990
button where they can authorize
your application.

00:06:49.990 --> 00:06:54.370
None of this sort of red screen
if it's asking for some

00:06:54.370 --> 00:06:57.440
extra permissions, your email
address is not front and

00:06:57.440 --> 00:06:59.110
center in the authorization
dialogue--

00:06:59.110 --> 00:07:00.060
KALYAN REDDY: Different
color border.

00:07:00.060 --> 00:07:01.810
ARUN NAGARAJAN: Different
color borders.

00:07:01.810 --> 00:07:03.665
KALYAN REDDY: I know a lot of
long-time app scripters are

00:07:03.665 --> 00:07:06.130
like, back in my day--

00:07:06.130 --> 00:07:06.800
ARUN NAGARAJAN: Yeah.

00:07:06.800 --> 00:07:09.970
You probably are upset this
it's taken this long.

00:07:09.970 --> 00:07:13.110
But it took us a lot of effort
to make sure this is

00:07:13.110 --> 00:07:17.110
consistent, this is without
any issues.

00:07:17.110 --> 00:07:20.080
If you remember, actually back
in I/O, we launched it as an

00:07:20.080 --> 00:07:23.660
opt-in only option for
a script developer.

00:07:23.660 --> 00:07:27.090
So they could upgrade the
authorization experience

00:07:27.090 --> 00:07:28.530
through a menu option.

00:07:28.530 --> 00:07:29.755
We've now made this
the default.

00:07:29.755 --> 00:07:33.200
So if you create a new script
it will now take this

00:07:33.200 --> 00:07:34.385
capability on.

00:07:34.385 --> 00:07:36.910
The existing scripts, you
still need to upgrade it

00:07:36.910 --> 00:07:39.820
yourself because it is, we
think, an important decision

00:07:39.820 --> 00:07:42.850
our developer makes rather than
us just flipping them off

00:07:42.850 --> 00:07:44.440
or flipping them on
for everything.

00:07:44.440 --> 00:07:46.540
But you should definitely
check this out.

00:07:46.540 --> 00:07:49.630
I think it's going to be, in
the long run, a really good

00:07:49.630 --> 00:07:52.130
developer and user experience.

00:07:52.130 --> 00:07:54.570
So just to kind of show you what
this means, if you take a

00:07:54.570 --> 00:08:00.050
look at the blog posts these
are two screenshots of the

00:08:00.050 --> 00:08:04.410
same authorization experience
for an end user.

00:08:04.410 --> 00:08:06.200
So I forget what
the script is.

00:08:06.200 --> 00:08:07.670
I think this is Gmail Snooze.

00:08:07.670 --> 00:08:10.920
Gmail Snooze, very popular
script, allows you to attach a

00:08:10.920 --> 00:08:14.200
label to a Gmail thread and
say, resurface this in x

00:08:14.200 --> 00:08:16.480
number of minutes or
hours or days.

00:08:16.480 --> 00:08:18.080
Notice the difference
in the look and

00:08:18.080 --> 00:08:19.330
feel for the end user.

00:08:19.330 --> 00:08:22.360
The first one has the email
address actually blacked out

00:08:22.360 --> 00:08:24.560
because we didn't want that
to be in the post.

00:08:24.560 --> 00:08:26.320
But you can see that it's
a lot less scary.

00:08:26.320 --> 00:08:28.540
End users now will be more
likely to authorize your

00:08:28.540 --> 00:08:30.670
script, or at least they're
not going to

00:08:30.670 --> 00:08:32.480
be startled by it.

00:08:32.480 --> 00:08:34.419
There's some really nice
benefits because of this.

00:08:34.419 --> 00:08:36.510
So first of all, the
cleanliness and the

00:08:36.510 --> 00:08:38.360
consistency is really
important.

00:08:38.360 --> 00:08:40.960
But if you actually go and
create a new script--

00:08:40.960 --> 00:08:42.130
let's just talk from
our developer's

00:08:42.130 --> 00:08:43.320
standpoint for a second--

00:08:43.320 --> 00:08:47.580
script.google.com, logged in
here as client's test account.

00:08:47.580 --> 00:08:49.790
So this is going to
create a script.

00:08:49.790 --> 00:08:54.820
I'm just going to call
it GDL test.

00:08:54.820 --> 00:08:57.900
The first thing that I'll do
is just do a really simple

00:08:57.900 --> 00:08:59.820
Gmail app dot get aliases.

00:08:59.820 --> 00:09:01.885
A really simple thing that,
by itself, it's

00:09:01.885 --> 00:09:03.070
not going to do anything.

00:09:03.070 --> 00:09:08.530
But if I hit run the script
obviously checks the code and

00:09:08.530 --> 00:09:10.640
makes sure that authorization
is required.

00:09:10.640 --> 00:09:12.050
Click on the authorize
dialogue.

00:09:12.050 --> 00:09:15.930
A pop up comes up, really
nice consistent pop up.

00:09:15.930 --> 00:09:19.250
And then it kind of has the
ability Kalyan to actually

00:09:19.250 --> 00:09:20.660
switch authorization.

00:09:20.660 --> 00:09:23.430
Once he's actually logged into
multiple accounts you can

00:09:23.430 --> 00:09:25.650
decide which account
to authorize in.

00:09:25.650 --> 00:09:29.130
So that was something that
was not possible before.

00:09:29.130 --> 00:09:32.190
Whichever default account when
you logged into your browser,

00:09:32.190 --> 00:09:33.160
we pick that up.

00:09:33.160 --> 00:09:35.140
So that's really important.

00:09:35.140 --> 00:09:39.850
And now the fact that I can
click accept as a developer

00:09:39.850 --> 00:09:42.350
and the script just picks up and
runs, so I don't have to

00:09:42.350 --> 00:09:44.130
go back and hit Run again.

00:09:44.130 --> 00:09:45.990
That's something that I think a
lot of people have probably

00:09:45.990 --> 00:09:48.600
gotten used to, but now we
actually continue the

00:09:48.600 --> 00:09:51.100
execution process after
the authorization.

00:09:51.100 --> 00:09:52.890
That's really, really nice.

00:09:52.890 --> 00:09:55.750
And then the other big developer
benefit is that if

00:09:55.750 --> 00:09:58.850
you are using Google API, the
advanced services that we

00:09:58.850 --> 00:10:03.080
offer, one of the nice things is
that before you had to copy

00:10:03.080 --> 00:10:06.650
and paste a API key from a
developer console project that

00:10:06.650 --> 00:10:09.510
you created manually and
you're supposed to

00:10:09.510 --> 00:10:10.820
synchronize the keys.

00:10:10.820 --> 00:10:15.060
Now we create a project for
you automatically just by

00:10:15.060 --> 00:10:18.980
enabling the project that's
OAuth2 enabled, which is all

00:10:18.980 --> 00:10:19.720
new projects.

00:10:19.720 --> 00:10:23.810
KALYAN REDDY: At the developer
console, just to be clear,

00:10:23.810 --> 00:10:24.620
it's the Google API's console.

00:10:24.620 --> 00:10:25.330
ARUN NAGARAJAN: That's right.

00:10:25.330 --> 00:10:25.410
Sorry.

00:10:25.410 --> 00:10:26.880
The Google API's console.

00:10:26.880 --> 00:10:28.520
I call it the developer
console a lot.

00:10:28.520 --> 00:10:30.600
It's very confusing, I know.

00:10:30.600 --> 00:10:32.530
This is the one that
you get by

00:10:32.530 --> 00:10:36.090
code.google.com/apis/console.

00:10:36.090 --> 00:10:38.476
And you can see that the project
name is the same as

00:10:38.476 --> 00:10:39.610
the script name.

00:10:39.610 --> 00:10:41.910
And it takes you right to the
services panel where you can

00:10:41.910 --> 00:10:46.660
enable a service, or you can
automatically go and--

00:10:46.660 --> 00:10:48.920
if I just enable a service,
let's just take the adminsdk

00:10:48.920 --> 00:10:53.130
for a second, agree to it,
and you get the key

00:10:53.130 --> 00:10:54.680
automatically created.

00:10:54.680 --> 00:10:57.500
And we pick up the key for you,
and you don't have to

00:10:57.500 --> 00:10:59.010
copy and paste this key in.

00:10:59.010 --> 00:11:03.690
So this is automatically enabled
for your script.

00:11:03.690 --> 00:11:06.650
So this becomes a lot easier for
developers to just use new

00:11:06.650 --> 00:11:09.160
services without having
to think about which

00:11:09.160 --> 00:11:10.250
keys they're using.

00:11:10.250 --> 00:11:11.660
I probably picked
a bad example.

00:11:11.660 --> 00:11:13.660
I should have gone with the
Tasks API, something that we

00:11:13.660 --> 00:11:17.260
support in this list, but you
get the idea of how that has

00:11:17.260 --> 00:11:18.740
become a lot better as well.

00:11:18.740 --> 00:11:22.150
So bottom line, the
authorization process has

00:11:22.150 --> 00:11:25.030
gotten a lot better for
developers, a lot better for

00:11:25.030 --> 00:11:28.760
end users, and we really hope
that this allows you to build

00:11:28.760 --> 00:11:31.920
more very interesting
applications, without a lot of

00:11:31.920 --> 00:11:33.450
hand-holding for end users.

00:11:33.450 --> 00:11:35.020
KALYAN REDDY: And if you do want
this for your existing

00:11:35.020 --> 00:11:37.380
scripts you can just still do
the upgrade authorization

00:11:37.380 --> 00:11:39.740
experience that you
get from the file.

00:11:39.740 --> 00:11:40.150
ARUN NAGARAJAN: That's right.

00:11:40.150 --> 00:11:43.370
Since this is a brand new script
I created, if I go

00:11:43.370 --> 00:11:47.450
under File, this is greyed out
because that's already enabled

00:11:47.450 --> 00:11:50.980
for you, but for your existing
scripts please turn that on

00:11:50.980 --> 00:11:54.360
and you'll, I think, really
enjoy what that brings to you.

00:11:54.360 --> 00:11:57.440
And let us know if you have any
issues and at some point

00:11:57.440 --> 00:12:01.210
we will remove this option
all-together.

00:12:01.210 --> 00:12:03.600
The next thing that we want to
talk about is a community

00:12:03.600 --> 00:12:07.710
member, [? Kaisuke Osahi ?],
I think I'm saying his name

00:12:07.710 --> 00:12:10.760
correctly, built a really
interesting application using

00:12:10.760 --> 00:12:13.890
the import export API that we
launched about a month ago

00:12:13.890 --> 00:12:17.850
that allows you to get access
to your source code from an

00:12:17.850 --> 00:12:20.560
external application or Python
app or node app--

00:12:20.560 --> 00:12:22.015
KALYAN REDDY: This
is the Drive API.

00:12:22.015 --> 00:12:24.210
ARUN NAGARAJAN: This is the
Drive API that allows you to

00:12:24.210 --> 00:12:25.880
get and set source code off our

00:12:25.880 --> 00:12:27.780
Google Apps script project.

00:12:27.780 --> 00:12:30.100
And he has actually built some
really interesting tools.

00:12:30.100 --> 00:12:33.300
So the first tool that he built
was a no-js application

00:12:33.300 --> 00:12:36.810
that allowed you to essentially
mirror your source

00:12:36.810 --> 00:12:38.970
on an app script project
on your local hard

00:12:38.970 --> 00:12:41.070
drive and edit locally.

00:12:41.070 --> 00:12:42.390
Really nice job.

00:12:42.390 --> 00:12:44.130
I had a chance to try it out.

00:12:44.130 --> 00:12:45.340
Works really well.

00:12:45.340 --> 00:12:47.630
It requires a bit of a set up
so that I can get my refresh

00:12:47.630 --> 00:12:50.380
tokens and things like that
which, one time experience

00:12:50.380 --> 00:12:54.100
from the apps scripts with the
Google APIs playground, OAuth2

00:12:54.100 --> 00:12:55.820
playground, I should say.

00:12:55.820 --> 00:12:57.680
And then from there
on it just worked.

00:12:57.680 --> 00:12:59.810
You just run this command line
and it automatically

00:12:59.810 --> 00:13:01.150
synchronizes your code.

00:13:01.150 --> 00:13:03.650
What he's also done is he's
taken that and then wrap it

00:13:03.650 --> 00:13:07.480
into a Sublime Text plug-in.

00:13:07.480 --> 00:13:10.100
So here so that the markup file
that essentially allows

00:13:10.100 --> 00:13:14.440
you to set up your Sublime Text
to, when you hit Save,

00:13:14.440 --> 00:13:17.340
runs the code to save it up
to the apps script API.

00:13:17.340 --> 00:13:19.080
So it's got a couple of screen
shots that kind of shows you

00:13:19.080 --> 00:13:20.020
that in action.

00:13:20.020 --> 00:13:22.570
KALYAN REDDY: And Sublime, if
you're not familiar, is an

00:13:22.570 --> 00:13:25.870
editor with nice default syntax
highlighting that a lot

00:13:25.870 --> 00:13:26.330
of us here use.

00:13:26.330 --> 00:13:27.410
ARUN NAGARAJAN: That's right.

00:13:27.410 --> 00:13:30.830
And you probably saw me use it
in my demo of the app script

00:13:30.830 --> 00:13:31.670
import export API.

00:13:31.670 --> 00:13:33.730
So nice job, [? Kaisuke ?].

00:13:33.730 --> 00:13:35.790
Really, really excited
to show this off.

00:13:35.790 --> 00:13:39.490
And a really good example of
a community member posting

00:13:39.490 --> 00:13:41.950
something on the G Plus apps
script community, and we'll

00:13:41.950 --> 00:13:43.850
pick it up and we'll share.

00:13:43.850 --> 00:13:44.670
So Yeah.

00:13:44.670 --> 00:13:46.610
Definitely let us know if you
build anything interesting,

00:13:46.610 --> 00:13:49.940
and we'll share with
the audience here.

00:13:49.940 --> 00:13:50.450
So yeah.

00:13:50.450 --> 00:13:52.900
Just wanted to give a quick
plug to [? Kaisuke ?].

00:13:52.900 --> 00:13:55.610
I know a lot of people want to
develop outside of the script

00:13:55.610 --> 00:13:57.660
editor, and now it's possible.

00:13:57.660 --> 00:14:00.110
It takes a little bit of effort,
and we're always

00:14:00.110 --> 00:14:02.060
looking for ways where the
community members are

00:14:02.060 --> 00:14:06.210
improving that experience
for the larger audience.

00:14:06.210 --> 00:14:06.520
Cool.

00:14:06.520 --> 00:14:07.580
You want to take
some questions?

00:14:07.580 --> 00:14:12.140
Are there any one on
the live Hangout?

00:14:12.140 --> 00:14:12.618
All right.

00:14:12.618 --> 00:14:14.665
I think we have a bunch of
people on the Hangout.

00:14:14.665 --> 00:14:16.870
If there are any questions
please go ahead.

00:14:16.870 --> 00:14:17.990
MALE SPEAKER: Yes.

00:14:17.990 --> 00:14:19.080
Yes, Hello.

00:14:19.080 --> 00:14:20.550
My name is Harry
[? Ausfein ?].

00:14:20.550 --> 00:14:21.646
ARUN NAGARAJAN: Hi, Harry,
how are you?

00:14:21.646 --> 00:14:26.430
MALE SPEAKER: And I think I like
the new authorization.

00:14:26.430 --> 00:14:28.435
I would like it even more if you
could share the screen so

00:14:28.435 --> 00:14:29.870
we could see what
you were doing.

00:14:29.870 --> 00:14:30.480
ARUN NAGARAJAN: Oh, I'm sorry.

00:14:30.480 --> 00:14:32.120
KALYAN REDDY: Oh, it
did not go up.

00:14:32.120 --> 00:14:35.090
ARUN NAGARAJAN: I think the
screen may not be visible in

00:14:35.090 --> 00:14:35.690
the Hangout.

00:14:35.690 --> 00:14:38.490
I think if you watch the
YouTube session.

00:14:38.490 --> 00:14:41.160
So maybe there's just an issue
with the screen sharing with

00:14:41.160 --> 00:14:41.952
the Hangout.

00:14:41.952 --> 00:14:43.330
We apologize.

00:14:43.330 --> 00:14:45.980
MALE SPEAKER: I'll check
back on YouTube then.

00:14:45.980 --> 00:14:48.790
My question is about a
script that I have.

00:14:48.790 --> 00:14:50.120
It's running in a background.

00:14:50.120 --> 00:14:53.120
There's five or six
hundred users.

00:14:53.120 --> 00:14:56.870
And if I upgrade the
authorization does it mean

00:14:56.870 --> 00:15:00.740
that all users get a list of
errors that they have to

00:15:00.740 --> 00:15:01.860
reauthorize?

00:15:01.860 --> 00:15:02.660
ARUN NAGARAJAN: That
is correct.

00:15:02.660 --> 00:15:05.560
So let me just repeat the
question in case the folks on

00:15:05.560 --> 00:15:08.310
YouTube or recorded
can't hear it.

00:15:08.310 --> 00:15:11.940
The question from Harry was, I
have several hundred users

00:15:11.940 --> 00:15:14.370
using my app that they've
previously authorized and

00:15:14.370 --> 00:15:15.930
running on the background.

00:15:15.930 --> 00:15:18.250
If I say, upgrade authorization
experience, will

00:15:18.250 --> 00:15:19.700
they need to reauthorize?

00:15:19.700 --> 00:15:21.330
And the answer is yes.

00:15:21.330 --> 00:15:23.980
That's why we're not doing this
automatically for you.

00:15:23.980 --> 00:15:27.750
We think it's an important
developer experience,

00:15:27.750 --> 00:15:32.340
developer step to turn this on
because of this end user

00:15:32.340 --> 00:15:33.770
authorization process.

00:15:33.770 --> 00:15:38.160
It's really tricky to
convert OAuth1 based

00:15:38.160 --> 00:15:41.160
grant to OAuth2 grants.

00:15:41.160 --> 00:15:43.810
And there's some security issues
that we have to be

00:15:43.810 --> 00:15:44.530
concerned with.

00:15:44.530 --> 00:15:46.580
So end users do need
to reauthorize it.

00:15:49.590 --> 00:15:52.160
If you release a new feature
perhaps that's the right time

00:15:52.160 --> 00:15:52.880
to rolls it in.

00:15:52.880 --> 00:15:53.860
MALE SPEAKER: Exactly, yeah.

00:15:53.860 --> 00:15:54.600
ARUN NAGARAJAN: So, yeah.

00:15:54.600 --> 00:15:55.870
There is some planning
required.

00:15:55.870 --> 00:15:57.370
Good question.

00:15:57.370 --> 00:15:59.120
And I think it's stated in the

00:15:59.120 --> 00:16:00.910
documentation that that's required.

00:16:00.910 --> 00:16:03.260
But we should be very clear
that if you upgrade

00:16:03.260 --> 00:16:06.430
authorization experience on your
project, end users will

00:16:06.430 --> 00:16:08.260
need to reauthorize
your scripts.

00:16:08.260 --> 00:16:08.920
MALE SPEAKER: OK.

00:16:08.920 --> 00:16:11.072
So better wait for
next upgrade.

00:16:11.072 --> 00:16:11.984
ARUN NAGARAJAN: Uhh, yep.

00:16:11.984 --> 00:16:12.440
Yeah.

00:16:12.440 --> 00:16:14.030
So you'll have to
plan that out.

00:16:14.030 --> 00:16:15.510
Good point, Harry.

00:16:15.510 --> 00:16:16.760
Any other questions?

00:16:19.609 --> 00:16:20.510
Cool.

00:16:20.510 --> 00:16:24.840
So while we're waiting for
questions, let's go down the

00:16:24.840 --> 00:16:27.170
list of questions on Moderator,
actually.

00:16:27.170 --> 00:16:31.456
There's quite a few folks that
posted ahead of time.

00:16:31.456 --> 00:16:32.850
Do you want to start taking
some of these questions?

00:16:32.850 --> 00:16:33.610
KALYAN REDDY: Yeah, sure.

00:16:33.610 --> 00:16:34.620
ARUN NAGARAJAN: I'll
jump in as well.

00:16:34.620 --> 00:16:35.350
KALYAN REDDY: Let's see.

00:16:35.350 --> 00:16:38.210
It would be great if we could
have some sort of quotas app

00:16:38.210 --> 00:16:41.790
API to know the current state
of my scripts used or

00:16:41.790 --> 00:16:43.860
remaining quotas.

00:16:43.860 --> 00:16:45.540
Currently it's a black box.

00:16:45.540 --> 00:16:47.841
You don't have any predictions
on when your script will

00:16:47.841 --> 00:16:49.170
suddenly fail.

00:16:49.170 --> 00:16:52.250
So unfortunately that's true.

00:16:52.250 --> 00:16:55.420
We don't currently have this
functionality to know, for

00:16:55.420 --> 00:16:56.880
most services.

00:16:56.880 --> 00:16:59.150
For certain services
there is a method.

00:16:59.150 --> 00:17:02.370
So for example, the mail
service has [INAUDIBLE]

00:17:02.370 --> 00:17:05.460
remaining daily limits.

00:17:08.310 --> 00:17:11.880
So the essence of this question
is, does this exist

00:17:11.880 --> 00:17:13.819
in the general case
and can we get it?

00:17:13.819 --> 00:17:17.240
So that's something that
we're looking at.

00:17:17.240 --> 00:17:20.579
For right now, if you want
to implement some of this

00:17:20.579 --> 00:17:23.349
functionality, you can do it
in the form of like a try

00:17:23.349 --> 00:17:23.895
catch statement.

00:17:23.895 --> 00:17:24.450
ARUN NAGARAJAN: Right.

00:17:24.450 --> 00:17:28.359
So if you don't want your script
to just throw an error

00:17:28.359 --> 00:17:31.064
to the user, you could catch
that error and then you could

00:17:31.064 --> 00:17:33.930
present it in a nicer way, or
you could retry it behind the

00:17:33.930 --> 00:17:38.420
scenes if it's like a rate
issue, for example.

00:17:38.420 --> 00:17:39.440
ARUN NAGARAJAN: That's
right, yeah.

00:17:39.440 --> 00:17:41.380
So there's a combination
of a few things here.

00:17:41.380 --> 00:17:43.430
Obviously you want to make
this very transparent and

00:17:43.430 --> 00:17:46.260
visible, so we're working on
ways where we can improve

00:17:46.260 --> 00:17:49.880
this, either through an API or
some sort of other tools that

00:17:49.880 --> 00:17:53.840
you may be able to inspect
your API usage.

00:17:53.840 --> 00:17:55.610
It's nothing to announce
at this point.

00:17:55.610 --> 00:17:57.390
We're looking at this
and we're really

00:17:57.390 --> 00:17:58.360
aware of this issue.

00:17:58.360 --> 00:18:00.950
And it's something that we feel
ourselves when we build

00:18:00.950 --> 00:18:03.200
scripts internally.

00:18:03.200 --> 00:18:06.550
Keep staring issues on
the issue tracker.

00:18:06.550 --> 00:18:09.450
Make sure that you put a lot
of good details into issue

00:18:09.450 --> 00:18:12.870
tracker, and get people on the
Google Plus community to star

00:18:12.870 --> 00:18:15.700
it as well, to put their
use cases in.

00:18:15.700 --> 00:18:18.410
We'll definitely continue
to look at this.

00:18:18.410 --> 00:18:21.250
The one thing to keep in mind
is that a lot of the quotas

00:18:21.250 --> 00:18:25.530
are actually pretty good, if
you're writing it to run as

00:18:25.530 --> 00:18:26.870
the end user.

00:18:26.870 --> 00:18:31.620
So if you write a script as
a web app, or as a Google

00:18:31.620 --> 00:18:35.426
document sidebar app, or
something along those lines,

00:18:35.426 --> 00:18:37.670
the person that opens
the document,

00:18:37.670 --> 00:18:39.470
it uses their quotas.

00:18:39.470 --> 00:18:42.890
Which, for them, it should be
sufficient to create calendar

00:18:42.890 --> 00:18:45.120
events or scanning email.

00:18:45.120 --> 00:18:47.150
So you have to be really
thinking about the quotas.

00:18:47.150 --> 00:18:50.590
Think about, is it running as
the user, the owner of the

00:18:50.590 --> 00:18:53.530
script, or is it running as
the user at the keyboard?

00:18:53.530 --> 00:18:56.970
So if you think about that
oftentimes your about to run

00:18:56.970 --> 00:18:59.540
it as the user at the keyboard,
you might be able to

00:18:59.540 --> 00:19:00.403
do more with the quotas.

00:19:00.403 --> 00:19:01.920
KALYAN REDDY: Right.

00:19:01.920 --> 00:19:05.270
And the general rule of thumb
is, if you're providing a

00:19:05.270 --> 00:19:08.230
service that operates on each
user's inbox, or something

00:19:08.230 --> 00:19:10.400
that's tailored for each
individual, then you should

00:19:10.400 --> 00:19:13.820
probably try to use
their quota.

00:19:13.820 --> 00:19:16.950
Because their operations really
should be debited to

00:19:16.950 --> 00:19:18.455
their individual accounts.

00:19:18.455 --> 00:19:19.440
ARUN NAGARAJAN: That's right.

00:19:19.440 --> 00:19:20.980
That's right.

00:19:20.980 --> 00:19:23.900
The next one is, do you have
any tips or best practices

00:19:23.900 --> 00:19:26.280
when using app script to monitor
calendar events?

00:19:26.280 --> 00:19:27.390
Oh, it just updated.

00:19:27.390 --> 00:19:28.460
New questions came in.

00:19:28.460 --> 00:19:30.310
Let me just take that question
from, I think it

00:19:30.310 --> 00:19:32.100
was Will, in Boston.

00:19:32.100 --> 00:19:33.190
It's a really good question.

00:19:33.190 --> 00:19:38.380
It's something that we think the
best way to do it would be

00:19:38.380 --> 00:19:40.830
using the push notification
scheme that we have, getting

00:19:40.830 --> 00:19:43.460
sort of alerts or triggers or
something along those lines.

00:19:43.460 --> 00:19:46.560
Today there is no good way to do
that, just to kind of jump

00:19:46.560 --> 00:19:48.520
ahead and talk about
the other question.

00:19:48.520 --> 00:19:51.760
To receive a push notification
you have to be able to

00:19:51.760 --> 00:19:54.440
authorize the URL, you
have to be able

00:19:54.440 --> 00:19:56.180
to accept HTTP headers.

00:19:56.180 --> 00:19:57.560
Those are things that
are not very

00:19:57.560 --> 00:19:59.080
straightforward with app script.

00:19:59.080 --> 00:20:04.090
So, as of now, a polling based
system is probably the easiest

00:20:04.090 --> 00:20:04.670
way to do it.

00:20:04.670 --> 00:20:08.400
And you can get clever with it
including search parameters,

00:20:08.400 --> 00:20:12.690
and including date parameters
to make sure you're only

00:20:12.690 --> 00:20:15.180
polling on as small a
subset as possible.

00:20:15.180 --> 00:20:17.945
But without that, I can't really
think of a much more

00:20:17.945 --> 00:20:19.060
creative way to do this.

00:20:19.060 --> 00:20:22.330
KALYAN REDDY: And for example,
if you already got all the

00:20:22.330 --> 00:20:24.770
events for certain dates in the
past, then you can only

00:20:24.770 --> 00:20:28.010
start looking for events for
and you can restrict the

00:20:28.010 --> 00:20:30.620
search dates to be,
you know, tomorrow

00:20:30.620 --> 00:20:32.880
until the future time.

00:20:32.880 --> 00:20:34.800
And then you can keep on
incrementing that as well.

00:20:34.800 --> 00:20:36.270
ARUN NAGARAJAN: If you remember
the last time poll,

00:20:36.270 --> 00:20:40.010
then you can keep moving the
window to get the smallest

00:20:40.010 --> 00:20:44.600
response set possible for you
to do something effectively.

00:20:44.600 --> 00:20:45.940
Let's do the next one.

00:20:45.940 --> 00:20:48.600
I would like to embed Apps
Script into Docs or Sheets

00:20:48.600 --> 00:20:49.860
programmatically.

00:20:49.860 --> 00:20:52.325
This will be possible in the
future, when will the Script

00:20:52.325 --> 00:20:52.940
Gallery improve?

00:20:52.940 --> 00:20:53.760
A-ha.

00:20:53.760 --> 00:20:56.680
So you're saying Script Gallery
is not good enough?

00:20:56.680 --> 00:20:58.280
So it's a really
good question.

00:20:58.280 --> 00:21:03.120
As you can imagine, I think at
Google I/O [? Glen Sarab ?]

00:21:03.120 --> 00:21:06.320
and Jonathan [? Rasher ?], they
showed off the Google

00:21:06.320 --> 00:21:10.470
Docs experience, how you can
write scripts for it.

00:21:10.470 --> 00:21:14.050
We had not included the Script
Gallery for Docs and we had

00:21:14.050 --> 00:21:16.660
mentioned that we're looking at
ways to holistically make

00:21:16.660 --> 00:21:19.070
that much better.

00:21:19.070 --> 00:21:19.930
That's a process.

00:21:19.930 --> 00:21:21.630
That's an important
project for us.

00:21:21.630 --> 00:21:29.290
And so the answer for this is,
the Google Script Gallery will

00:21:29.290 --> 00:21:33.260
improve, and that'll
be the answer.

00:21:33.260 --> 00:21:35.270
And that will allow you to do
a lot better things as a

00:21:35.270 --> 00:21:38.396
developer, and for
your end users.

00:21:38.396 --> 00:21:41.770
KALYAN REDDY: And as far as the
programmatic aspect, do

00:21:41.770 --> 00:21:45.350
you think they want to have
another script that attaches

00:21:45.350 --> 00:21:47.250
this script to--

00:21:47.250 --> 00:21:48.140
ARUN NAGARAJAN: Yeah, I was
trying to make sense

00:21:48.140 --> 00:21:48.890
out of that, too.

00:21:48.890 --> 00:21:50.320
There's a couple ways you
could do-- there was a

00:21:50.320 --> 00:21:53.610
question on Stack Overflow which
we answered where, if

00:21:53.610 --> 00:21:57.250
you have like a template
document that has a script

00:21:57.250 --> 00:22:00.990
associated with it, if you copy
it using the Drive APIs

00:22:00.990 --> 00:22:04.040
that we offer in Apps Script,
you'll get the script

00:22:04.040 --> 00:22:05.030
associated with it.

00:22:05.030 --> 00:22:07.150
That's one way to distribute
a document

00:22:07.150 --> 00:22:09.180
and a script together.

00:22:09.180 --> 00:22:12.420
Another way is to use libraries,
where you have a

00:22:12.420 --> 00:22:15.500
library that's included
by your script.

00:22:15.500 --> 00:22:18.210
And that library will be
available in every copy of

00:22:18.210 --> 00:22:19.330
that document.

00:22:19.330 --> 00:22:23.200
I think, if you want to be able
to programmatically open

00:22:23.200 --> 00:22:26.440
up a document, inject some
script code and do it, as of

00:22:26.440 --> 00:22:28.820
now we're not really
considering that.

00:22:28.820 --> 00:22:31.460
Pretty complicated
to have that, and

00:22:31.460 --> 00:22:34.492
security-wise as well.

00:22:34.492 --> 00:22:35.400
KALYAN REDDY: All right.

00:22:35.400 --> 00:22:37.270
Any more questions on
the web hangout?

00:22:40.910 --> 00:22:42.873
ARUN NAGARAJAN: Just speak up
on the live Hangout if you

00:22:42.873 --> 00:22:43.470
have any questions.

00:22:43.470 --> 00:22:45.622
KALYAN REDDY: Yeah, we'll
keep the mike on.

00:22:45.622 --> 00:22:48.082
All right.

00:22:48.082 --> 00:22:49.340
I'll take the next one here.

00:22:49.340 --> 00:22:50.000
What do we have?

00:22:50.000 --> 00:22:52.242
ARUN NAGARAJAN: The
ScriptDb one.

00:22:52.242 --> 00:22:54.620
KALYAN REDDY: I like to use
ScriptDb but tests show that

00:22:54.620 --> 00:22:56.665
it's slow on data writes,
even in batch.

00:22:56.665 --> 00:22:59.960
400 object writes in about
37 seconds [INAUDIBLE]

00:22:59.960 --> 00:23:02.700
speed it up.

00:23:02.700 --> 00:23:06.470
So using batch writes, I guess
it generally depends on how

00:23:06.470 --> 00:23:08.690
large your objects are.

00:23:08.690 --> 00:23:12.421
That determines the speed
at which it writes.

00:23:12.421 --> 00:23:12.980
ARUN NAGARAJAN: Yeah.

00:23:12.980 --> 00:23:16.690
I haven't taken a look at this
particular question.

00:23:16.690 --> 00:23:21.810
So in general, yes, the plans
are to continue to make

00:23:21.810 --> 00:23:24.760
ScriptDb, just the whole
system, faster.

00:23:24.760 --> 00:23:28.070
So if there any specific
instances like this, certainly

00:23:28.070 --> 00:23:31.350
log an enhancement request with
reasonable details on

00:23:31.350 --> 00:23:33.060
what tests you've conducted.

00:23:33.060 --> 00:23:38.060
And again, build consensus
around it.

00:23:38.060 --> 00:23:40.890
ScriptDb continues to be
experimental as of now.

00:23:40.890 --> 00:23:45.150
So if you are looking for ways
to store data in a much more

00:23:45.150 --> 00:23:48.760
robust production quality system
I would use something

00:23:48.760 --> 00:23:50.810
like Cloud SQL or
Cloud Datastore.

00:23:50.810 --> 00:23:54.260
Other systems that Google offers
that has building and

00:23:54.260 --> 00:23:57.320
quotas and a much
more production

00:23:57.320 --> 00:23:59.270
capable systems available.

00:23:59.270 --> 00:24:02.200
So that's something that I
would look at, is if your

00:24:02.200 --> 00:24:05.780
performance is really slow, take
a look at some of those

00:24:05.780 --> 00:24:07.430
other systems that we
have access to.

00:24:07.430 --> 00:24:09.630
KALYAN REDDY: And you can also
use the JDBC service to

00:24:09.630 --> 00:24:13.820
connect to an external database
using App Script.

00:24:13.820 --> 00:24:17.620
ScriptDb is really nice if you
want to do something quick.

00:24:17.620 --> 00:24:20.050
If you want a script that's used
by either just yourself

00:24:20.050 --> 00:24:22.560
or a couple of users and you
want throw small objects in

00:24:22.560 --> 00:24:23.550
there and retrieve them.

00:24:23.550 --> 00:24:25.170
It's perfect for
that situation.

00:24:25.170 --> 00:24:27.980
But if you want to do anything
serious, you know, have large

00:24:27.980 --> 00:24:30.450
objects or lots of objects, you
do want to consider some

00:24:30.450 --> 00:24:32.685
of these other connectors
that we expose.

00:24:32.685 --> 00:24:33.320
ARUN NAGARAJAN: Yeah.

00:24:33.320 --> 00:24:35.760
And I've written scripts that
have saved thousands of

00:24:35.760 --> 00:24:39.800
objects, and it does take a few
dozen second sometimes.

00:24:39.800 --> 00:24:43.010
But if you're doing it the sort
of asynchronous process

00:24:43.010 --> 00:24:45.860
or the user doesn't have to wait
for that, there might be

00:24:45.860 --> 00:24:51.400
better ways to also not let
the user see that issue.

00:24:51.400 --> 00:24:52.160
All right.

00:24:52.160 --> 00:24:52.775
Next one.

00:24:52.775 --> 00:24:54.025
KALYAN REDDY: We covered
the events one.

00:24:56.630 --> 00:24:58.990
ARUN NAGARAJAN: The
next question--

00:24:58.990 --> 00:25:00.055
we should probably go
into presentation

00:25:00.055 --> 00:25:02.760
mode here, I think.

00:25:02.760 --> 00:25:04.880
Let's see where the presentation
mode is.

00:25:04.880 --> 00:25:06.920
I forget where the link is.

00:25:06.920 --> 00:25:07.620
I apologize.

00:25:07.620 --> 00:25:10.090
It's sorting as you guys are
voting on these questions.

00:25:10.090 --> 00:25:12.250
All right, we'll just
pick off something.

00:25:12.250 --> 00:25:15.610
When using new authorization
flow it would be great to be

00:25:15.610 --> 00:25:17.130
able to add additional
scopes and then

00:25:17.130 --> 00:25:18.840
automatically insert tokens.

00:25:18.840 --> 00:25:19.390
Yes.

00:25:19.390 --> 00:25:20.370
That's a great question.

00:25:20.370 --> 00:25:21.890
So let me rephrase this.

00:25:21.890 --> 00:25:28.720
So today we pick up OAuth scopes
that a script needs by

00:25:28.720 --> 00:25:31.450
evaluating the project and
looking at all the API's a

00:25:31.450 --> 00:25:33.740
project the script is using.

00:25:33.740 --> 00:25:37.380
That list is today opaque
to the script developer.

00:25:37.380 --> 00:25:41.900
So you don't get too add or
remove scopes that we have

00:25:41.900 --> 00:25:44.050
evaluated from your script.

00:25:44.050 --> 00:25:47.415
The question here is, we would
like to be able to specify our

00:25:47.415 --> 00:25:50.380
own scopes along with what the
script needs so that we could

00:25:50.380 --> 00:25:53.876
use that scope for, the token
for, other calls that we may

00:25:53.876 --> 00:25:57.680
be making, like with the, I
don't know, the Google Glass

00:25:57.680 --> 00:26:00.830
API or something like that
that we may have.

00:26:00.830 --> 00:26:02.820
It's a really good
feature request.

00:26:02.820 --> 00:26:06.700
You should log this in the
issue tracker, I think.

00:26:06.700 --> 00:26:09.380
It's something that we are
very much thinking about.

00:26:09.380 --> 00:26:11.120
It's a really good idea
and something

00:26:11.120 --> 00:26:13.050
that we want to support.

00:26:13.050 --> 00:26:14.905
No time frames, unfortunately.

00:26:14.905 --> 00:26:18.340
It's a tricky one.

00:26:18.340 --> 00:26:19.250
Let's see.

00:26:19.250 --> 00:26:20.890
A quota question around
ScriptDb.

00:26:20.890 --> 00:26:27.870
I think something that, again
no new announcements here.

00:26:27.870 --> 00:26:30.350
Something that you have to kind
of manually watch for

00:26:30.350 --> 00:26:33.590
now, how much you're inserting,
do some fuzzy math

00:26:33.590 --> 00:26:39.190
to, say, if my object size in
general is about 500 bytes I

00:26:39.190 --> 00:26:42.370
have this many inserts
I can do.

00:26:42.370 --> 00:26:44.240
So you kind of have to
keep an eye on that.

00:26:44.240 --> 00:26:50.110
And there's no good way to ask
a ScriptDb instance how many

00:26:50.110 --> 00:26:51.750
objects are in there, quickly.

00:26:51.750 --> 00:26:55.380
And, more importantly, how much
space it's occupying.

00:26:55.380 --> 00:26:59.060
KALYAN REDDY: But there are
methods that let you know that

00:26:59.060 --> 00:27:01.686
after you performed a series
of writes, if they all

00:27:01.686 --> 00:27:02.170
succeeded or not.

00:27:02.170 --> 00:27:02.750
ARUN NAGARAJAN: That's right.

00:27:02.750 --> 00:27:04.190
KALYAN REDDY: So we have
examples on our

00:27:04.190 --> 00:27:05.410
using ScriptDb page.

00:27:05.410 --> 00:27:07.030
You can go and get the
snippet there.

00:27:07.030 --> 00:27:10.120
And basically it iterates and
calls all OK method and then

00:27:10.120 --> 00:27:12.646
just see that if it's
successfully wrote to the

00:27:12.646 --> 00:27:13.480
database or not.

00:27:13.480 --> 00:27:14.535
ARUN NAGARAJAN: Cool.

00:27:14.535 --> 00:27:18.900
The next question's about the
source code of a library.

00:27:18.900 --> 00:27:22.190
Really good question around,
can a script developer, if

00:27:22.190 --> 00:27:25.360
they distribute their project as
a library for other scripts

00:27:25.360 --> 00:27:29.560
to use, can they rely on their
script to be invisible, the

00:27:29.560 --> 00:27:32.090
code to be invisible from the
script developers, and the

00:27:32.090 --> 00:27:33.530
answer is no.

00:27:33.530 --> 00:27:38.530
So you can in fact look at the
source code of a library.

00:27:38.530 --> 00:27:43.410
The reason is that we think of
library as a way to distribute

00:27:43.410 --> 00:27:47.780
functionality, not a way
to hide keys or other

00:27:47.780 --> 00:27:49.990
functionality implementation
details.

00:27:49.990 --> 00:27:55.190
So if you are really interested
in sharing

00:27:55.190 --> 00:27:59.020
execution code, the best way
might be to do it as a web app

00:27:59.020 --> 00:28:01.830
where you publish it as a web
app or as a content service

00:28:01.830 --> 00:28:02.760
application.

00:28:02.760 --> 00:28:06.320
Because then all you're sharing
with your end users is

00:28:06.320 --> 00:28:11.100
a URL, rather than a library
which allows them to look at

00:28:11.100 --> 00:28:13.370
your source code, but not
change it or execute--

00:28:13.370 --> 00:28:15.930
I guess it allows them
to execute it.

00:28:15.930 --> 00:28:17.090
So it's a good question.

00:28:17.090 --> 00:28:20.170
I think our library's page
makes that clear.

00:28:20.170 --> 00:28:20.780
If not, it should.

00:28:20.780 --> 00:28:21.040
KALYAN REDDY: Yeah.

00:28:21.040 --> 00:28:24.290
So basically, in order for
people to use your library

00:28:24.290 --> 00:28:28.350
they need to have at least
view permissions so that

00:28:28.350 --> 00:28:30.270
allows them to view
the script source.

00:28:30.270 --> 00:28:30.890
ARUN NAGARAJAN: That's
right, yes.

00:28:30.890 --> 00:28:37.380
It's not a foolproof way to
secure your source code.

00:28:37.380 --> 00:28:40.280
It's really just a way to share
code rather than to lock

00:28:40.280 --> 00:28:42.420
away stuff.

00:28:42.420 --> 00:28:43.400
Push notifications.

00:28:43.400 --> 00:28:45.510
We spoke about that in the
context of calendar.

00:28:45.510 --> 00:28:48.480
Same thing applies here.

00:28:48.480 --> 00:28:49.600
Let's see.

00:28:49.600 --> 00:28:52.080
That only support OAuth1.

00:28:52.080 --> 00:28:54.270
AppEngine cloud endpoints
limitation which uses OAuth2.

00:28:56.920 --> 00:28:59.130
What's the best practice with
Apps Script accessing these

00:28:59.130 --> 00:29:02.000
Cloud endpoints given apps
only supports OAuth1?

00:29:02.000 --> 00:29:03.010
So it's a really
good question.

00:29:03.010 --> 00:29:05.420
I'll respond to this on
the moderator as well.

00:29:05.420 --> 00:29:09.570
So OAuth2 actually is much more
straightforward decoded

00:29:09.570 --> 00:29:11.276
yourself versus OAuth1.

00:29:11.276 --> 00:29:15.070
OAuth1 required you to do
cryptography on the message

00:29:15.070 --> 00:29:18.180
and create this thing called the
nonce which was sort of a

00:29:18.180 --> 00:29:21.270
time-based setting that
you had to track.

00:29:21.270 --> 00:29:25.420
So while we have built-in OAuth1
support you can always

00:29:25.420 --> 00:29:28.050
do OAuth2 by yourself.

00:29:28.050 --> 00:29:29.950
So you can publish your
web app an endpoint to

00:29:29.950 --> 00:29:31.250
receive the call back.

00:29:31.250 --> 00:29:32.740
And there's several
examples of this.

00:29:32.740 --> 00:29:36.590
If you look at my Google I/O
2013 presentation on the

00:29:36.590 --> 00:29:40.820
YouTube Analytics API, Github
had the whole code posted,

00:29:40.820 --> 00:29:43.260
including how you can
get refresh tokens.

00:29:43.260 --> 00:29:47.610
So one time authorization that
grabs an offline grant and

00:29:47.610 --> 00:29:49.520
just behind the scenes
every hour gets a

00:29:49.520 --> 00:29:51.500
new token, if needed.

00:29:51.500 --> 00:29:54.670
So it's a one time process to
authorize your script, along

00:29:54.670 --> 00:29:55.810
with the OAuth2.

00:29:55.810 --> 00:29:58.610
And then from there on it's good
to go and running as the

00:29:58.610 --> 00:30:00.020
end user that authorized it.

00:30:00.020 --> 00:30:03.000
So the bottom line is,
it's possible.

00:30:03.000 --> 00:30:05.980
It does require a bit
more time to set up.

00:30:05.980 --> 00:30:06.440
Let's see.

00:30:06.440 --> 00:30:08.930
KALYAN REDDY: The final
question, I need to buy more

00:30:08.930 --> 00:30:11.910
quotas in Google Apps Script.

00:30:11.910 --> 00:30:16.080
We are definitely aware that
this is a feature that users

00:30:16.080 --> 00:30:17.890
would like.

00:30:17.890 --> 00:30:19.200
Started on issue tracker.

00:30:19.200 --> 00:30:22.510
Nothing to announce at
this time for this.

00:30:22.510 --> 00:30:26.770
But if more and more users
require this functionality

00:30:26.770 --> 00:30:29.011
we'll definitely
look into that.

00:30:29.011 --> 00:30:29.980
ARUN NAGARAJAN: All right.

00:30:29.980 --> 00:30:31.610
Just wanted to quickly
look through it.

00:30:31.610 --> 00:30:34.190
There's a question around
converting from

00:30:34.190 --> 00:30:35.880
UI App to HTML service.

00:30:35.880 --> 00:30:37.790
I'll just very quickly
respond to that.

00:30:37.790 --> 00:30:38.990
UI app is still supported.

00:30:38.990 --> 00:30:42.120
So no need to jump or anything
along those lines.

00:30:42.120 --> 00:30:44.580
But we do think HTML service
will provide much more

00:30:44.580 --> 00:30:47.310
flexibility and we'll keep
looking at ways to provide

00:30:47.310 --> 00:30:48.310
more samples.

00:30:48.310 --> 00:30:49.000
[? Eric Coleta ?]

00:30:49.000 --> 00:30:51.470
recently shared some
really good samples

00:30:51.470 --> 00:30:53.350
around the tasks API.

00:30:53.350 --> 00:30:54.870
Please take a look at
that for some best

00:30:54.870 --> 00:30:56.730
practices and sample code.

00:30:56.730 --> 00:30:58.750
I think we're approaching
time.

00:30:58.750 --> 00:31:01.690
KALYAN REDDY: I just want to
throw out there that we do

00:31:01.690 --> 00:31:04.980
have some more extended samples
currently in the works

00:31:04.980 --> 00:31:08.900
that show functionality on how
to get HTML service running.

00:31:08.900 --> 00:31:11.040
We understand that UI app is
like a dead simple thing.

00:31:11.040 --> 00:31:12.245
This is what you do here, this
is what you do here, and

00:31:12.245 --> 00:31:14.010
you're done.

00:31:14.010 --> 00:31:15.220
So that's upcoming.

00:31:15.220 --> 00:31:18.550
Stay tuned, keep a look out on
our developer page, and then

00:31:18.550 --> 00:31:20.385
you'll find these
as they come in.

00:31:20.385 --> 00:31:21.100
ARUN NAGARAJAN: All right.

00:31:21.100 --> 00:31:22.080
Lots of really good questions.

00:31:22.080 --> 00:31:24.220
I think we're up on time.

00:31:24.220 --> 00:31:27.200
We'll schedule this again, and
we're hoping to hear more

00:31:27.200 --> 00:31:31.550
questions and future requests
and ideas from you guys.

00:31:31.550 --> 00:31:34.740
We'll also continue to answer
questions in the moderator as

00:31:34.740 --> 00:31:36.290
we get them.

00:31:36.290 --> 00:31:36.810
All right.

00:31:36.810 --> 00:31:38.970
Thank you very much and looking
forward to chatting

00:31:38.970 --> 00:31:39.660
with you guys again.

00:31:39.660 --> 00:31:40.910
KALYAN REDDY: Thanks
for tuning in.

