WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.090
[MUSIC PLAYING]

00:00:04.090 --> 00:00:06.480
Hello and welcome back
to Route 85, our show

00:00:06.480 --> 00:00:09.260
for iOS developers,
because we love you too.

00:00:09.260 --> 00:00:11.490
And the second part of our
series on how to open web

00:00:11.490 --> 00:00:13.731
links in Google Chrome on iOS.

00:00:13.731 --> 00:00:16.230
Now, in the previous episode--
which you should watch if you

00:00:16.230 --> 00:00:19.060
haven't-- I showed you how to
detect if the user has Google

00:00:19.060 --> 00:00:22.150
Chrome installed and how to open
a link in Chrome if they do.

00:00:22.150 --> 00:00:24.030
But I'd like to explore
one other feature

00:00:24.030 --> 00:00:25.360
that we haven't covered yet.

00:00:25.360 --> 00:00:27.610
And it's the one that's
probably most important to you

00:00:27.610 --> 00:00:29.360
app developers,
which is the ability

00:00:29.360 --> 00:00:31.720
to add that nice little
Back button in Chrome that

00:00:31.720 --> 00:00:34.070
takes users back to
your application.

00:00:34.070 --> 00:00:35.602
I know it seems
like a small thing.

00:00:35.602 --> 00:00:37.310
But going back to your
app with one press

00:00:37.310 --> 00:00:40.487
as opposed to going through the
Multitasker, it's really nice.

00:00:40.487 --> 00:00:42.820
Now, Chrome does this by
taking advantage of an emerging

00:00:42.820 --> 00:00:46.470
standard in the iOS development
world called x-callback-url.

00:00:46.470 --> 00:00:48.710
This is a convention
that allows applications

00:00:48.710 --> 00:00:51.260
a little bit of
two-way communication.

00:00:51.260 --> 00:00:52.960
What you're basically
doing is when

00:00:52.960 --> 00:00:55.630
you open a custom URL
in another application,

00:00:55.630 --> 00:00:58.190
within that URL you're also
telling the target app what

00:00:58.190 --> 00:01:01.730
your own application URL scheme
is so that when the user is

00:01:01.730 --> 00:01:04.709
done doing whatever they need
to do in that second app,

00:01:04.709 --> 00:01:07.880
that application can open a new
URL with a custom scheme that

00:01:07.880 --> 00:01:09.560
points back to the first app.

00:01:09.560 --> 00:01:11.610
The whole thing's
actually pretty clever.

00:01:11.610 --> 00:01:13.420
So what does this look
like in real life?

00:01:13.420 --> 00:01:16.080
Well, let's take a look
at our Google Chrome URL.

00:01:16.080 --> 00:01:16.640
Here it is.

00:01:16.640 --> 00:01:17.690
It's pretty basic.

00:01:17.690 --> 00:01:21.732
But now, instead of asking it
to open the host www.google.com,

00:01:21.732 --> 00:01:25.176
I'm going to ask it to open
the host x-callback-url.

00:01:25.176 --> 00:01:27.050
This is basically the
signal to Google Chrome

00:01:27.050 --> 00:01:29.430
that, hey, I'm going to give
you some information using

00:01:29.430 --> 00:01:32.030
the x-callback protocol
so that you can swap back

00:01:32.030 --> 00:01:34.160
to my application
when you're done.

00:01:34.160 --> 00:01:36.290
After this, I'm going
to add the action open

00:01:36.290 --> 00:01:39.480
And then pass in a
URL argument called

00:01:39.480 --> 00:01:41.910
url that equals the
link we want to visit--

00:01:41.910 --> 00:01:45.160
or I guess more accurately, the
URL encoded version of that.

00:01:45.160 --> 00:01:47.760
So you end up with something
that looks like this.

00:01:47.760 --> 00:01:50.270
Now, if I were to actually
open this URL it would work.

00:01:50.270 --> 00:01:53.770
In fact, let's try this right
now in our sample application.

00:01:53.770 --> 00:01:56.350
So here we are back in
my OpenInChromeExample

00:01:56.350 --> 00:01:57.540
application.

00:01:57.540 --> 00:02:00.080
And I'm going to
create a new URL along

00:02:00.080 --> 00:02:02.405
with the Safari and
Chrome URL that I

00:02:02.405 --> 00:02:04.915
am going to call my callbackURL.

00:02:08.250 --> 00:02:12.675
And it's going to look fairly
similar to my Chrome one.

00:02:12.675 --> 00:02:15.240
I got this URL, URL string.

00:02:15.240 --> 00:02:18.200
Except that my string here
is going to be googlechromes.

00:02:21.490 --> 00:02:26.320
But then for my host, I'm going
to go with x-callback-url.

00:02:26.320 --> 00:02:30.790
I'm going to add the action
open and then I'm going to say

00:02:30.790 --> 00:02:36.990
url=https://www.google.com.

00:02:36.990 --> 00:02:40.810
Now, this won't quite work
because I need a-- yes, Xcode,

00:02:40.810 --> 00:02:43.420
I know I need a
semicolon-- because I

00:02:43.420 --> 00:02:46.400
need to URL escape these
three characters here.

00:02:46.400 --> 00:02:47.930
So let's do that as well.

00:02:47.930 --> 00:02:54.330
This should be : / and /.

00:02:57.266 --> 00:02:59.140
Does anybody know if
Xcode will automatically

00:02:59.140 --> 00:03:00.560
URL escape strings for you?

00:03:00.560 --> 00:03:02.930
If so, let me know
in the comments.

00:03:02.930 --> 00:03:05.060
So anyway, lastly,
I need to make sure

00:03:05.060 --> 00:03:10.610
that I replace my Chrome URL
here with my callback URL.

00:03:10.610 --> 00:03:13.780
Oh and I guess it'd be nice if
I spelled URL correctly, huh?

00:03:13.780 --> 00:03:14.830
Wouldn't that be nice?

00:03:14.830 --> 00:03:16.070
Let's fix that.

00:03:16.070 --> 00:03:17.800
Edit All in Scope.

00:03:17.800 --> 00:03:20.090
And I'll change that to URL.

00:03:20.090 --> 00:03:22.550
That's better.

00:03:22.550 --> 00:03:24.010
Now I can run this on my device.

00:03:29.030 --> 00:03:33.230
And when we click
on this button,

00:03:33.230 --> 00:03:37.170
we can see that, yes,
my URL opens in Chrome.

00:03:37.170 --> 00:03:40.090
But there's still no Back
button pointing to our app.

00:03:40.090 --> 00:03:41.890
And that's because
we haven't actually

00:03:41.890 --> 00:03:44.680
told Chrome anything about
the app that called it.

00:03:44.680 --> 00:03:46.290
Now, in order to
do that, we need

00:03:46.290 --> 00:03:48.410
to register our own URL scheme.

00:03:48.410 --> 00:03:49.910
The same way that
Chrome declares

00:03:49.910 --> 00:03:52.810
that it owns any URL
beginning with googlechrome,

00:03:52.810 --> 00:03:56.630
we can declare our own custom
URL scheme for our example app.

00:03:56.630 --> 00:03:58.080
So let's do that now.

00:03:58.080 --> 00:03:59.540
I'm going to go
back to Xcode here.

00:03:59.540 --> 00:04:05.140
Let's open the project
and check out the target.

00:04:05.140 --> 00:04:09.620
And over here in the
info section down here

00:04:09.620 --> 00:04:13.100
at the bottom, there is this
section called URL types.

00:04:13.100 --> 00:04:16.300
This is where our application
can declare any URL schemes

00:04:16.300 --> 00:04:17.579
that it can open.

00:04:17.579 --> 00:04:18.532
So let's expand this.

00:04:18.532 --> 00:04:19.990
And right now
there's nothing here.

00:04:19.990 --> 00:04:23.220
But let's click the
plus sign and add one.

00:04:23.220 --> 00:04:26.100
So identifier here is a
human readable version

00:04:26.100 --> 00:04:28.090
of our URL scheme.

00:04:28.090 --> 00:04:29.720
Most developers that
I know just seem

00:04:29.720 --> 00:04:31.070
to make this their bundle ID.

00:04:31.070 --> 00:04:32.639
So I guess I'll do the same.

00:04:32.639 --> 00:04:34.055
So
com.google.openinchromeexample.

00:04:40.210 --> 00:04:42.840
And of course, feel free
to replace com.google

00:04:42.840 --> 00:04:46.750
with whatever is appropriate
for your organization.

00:04:46.750 --> 00:04:50.030
Now, URL schemes here,
this is the string

00:04:50.030 --> 00:04:52.640
that is going to
go before the colon

00:04:52.640 --> 00:04:54.430
that we say we are going to own.

00:04:54.430 --> 00:04:57.370
Now, this should be unique
for your application.

00:04:57.370 --> 00:05:00.160
Now, if you're an application
like Chrome or Google Maps

00:05:00.160 --> 00:05:03.980
that's expecting to be called
by many other third-party apps,

00:05:03.980 --> 00:05:06.940
you could try something like a
variation on your application's

00:05:06.940 --> 00:05:07.710
name.

00:05:07.710 --> 00:05:09.590
But if you're really
only registering

00:05:09.590 --> 00:05:12.020
this URL for
situations like ours

00:05:12.020 --> 00:05:14.390
where we're going to be
telling the target app what

00:05:14.390 --> 00:05:17.320
our URL scheme is and we don't
expect a lot of third party

00:05:17.320 --> 00:05:20.420
developers to know it, I
think it's generally safest

00:05:20.420 --> 00:05:24.070
just to use your bundle ID,
maybe without the periods.

00:05:24.070 --> 00:05:25.790
So we'll do
something like this--

00:05:25.790 --> 00:05:26.998
comgoogleopeninchromeexample.

00:05:31.765 --> 00:05:33.770
I need to make sure
I spelled this right.

00:05:33.770 --> 00:05:35.310
Yeah, it looks good.

00:05:35.310 --> 00:05:38.690
I'm going to copy this because
we're going to use it later.

00:05:38.690 --> 00:05:40.300
So now we've
declared that any URL

00:05:40.300 --> 00:05:43.440
that begins with
comgoogleopeninchromeexample

00:05:43.440 --> 00:05:47.794
colon whatever will open
up in this application.

00:05:47.794 --> 00:05:49.210
So now that we've
done that, let's

00:05:49.210 --> 00:05:51.120
go back to our callback URL.

00:05:51.120 --> 00:05:54.950
I'm going to open up
ViewController.m here.

00:05:54.950 --> 00:05:56.699
And here's our callback URL.

00:05:56.699 --> 00:05:57.990
And we're going to modify this.

00:05:57.990 --> 00:06:00.320
So I'm going to continue
this on another line

00:06:00.320 --> 00:06:02.157
because we're getting
a little crowded here.

00:06:02.157 --> 00:06:04.657
And the first thing we're going
to do is add an &amp;x-source=My

00:06:04.657 --> 00:06:10.620
App argument.

00:06:10.620 --> 00:06:12.190
So this is a human
readable version

00:06:12.190 --> 00:06:13.790
of our application name.

00:06:13.790 --> 00:06:16.430
And in Chrome's case it's
going to use this value

00:06:16.430 --> 00:06:19.320
to determine what text to put
in that little Back button.

00:06:19.320 --> 00:06:21.270
And again, we need
to URL escape this.

00:06:21.270 --> 00:06:25.140
So I'm going to replace
that space with a .

00:06:25.140 --> 00:06:31.590
The next thing we're going to
do is add an x-success argument.

00:06:31.590 --> 00:06:33.690
Now, in the
x-callback world, this

00:06:33.690 --> 00:06:35.980
is a URL that our
target app will

00:06:35.980 --> 00:06:39.460
attempt to open once the user
is done doing whatever he wanted

00:06:39.460 --> 00:06:42.870
to do in that app and things
have proceeded normally.

00:06:42.870 --> 00:06:44.630
Note that in Chrome's
case it's going

00:06:44.630 --> 00:06:48.750
to use this URL whether or not
the page you're trying to open

00:06:48.750 --> 00:06:51.930
has actually opened or whether
it's gotten a 404 or whatever.

00:06:51.930 --> 00:06:54.180
It's always going to
use this success value.

00:06:54.180 --> 00:06:56.450
So for the value of
our success argument

00:06:56.450 --> 00:06:58.580
we're going to set it to
a URL that points back

00:06:58.580 --> 00:07:01.670
to our app, which in this
case is our custom scheme.

00:07:01.670 --> 00:07:03.210
And luckily I copied it.

00:07:03.210 --> 00:07:06.670
So I'm going to paste it here,
comgoogleopeninchromeexample

00:07:06.670 --> 00:07:07.940
with a colon at the end.

00:07:07.940 --> 00:07:09.880
And again, that colon
needs to be escaped.

00:07:09.880 --> 00:07:13.150
So I'm going to
replace it with a :.

00:07:13.150 --> 00:07:15.900
And so now we have this
much larger URL but one

00:07:15.900 --> 00:07:18.870
that has an x-source argument
and an x-success argument.

00:07:18.870 --> 00:07:20.995
So let's try running this
now and see what happens.

00:07:24.410 --> 00:07:26.950
So I'm going to click
this button now.

00:07:26.950 --> 00:07:28.930
And looky here.

00:07:28.930 --> 00:07:30.360
It's open in Chrome.

00:07:30.360 --> 00:07:32.070
And now there's
this Back button.

00:07:32.070 --> 00:07:33.980
The title is equal
to My App, which

00:07:33.980 --> 00:07:36.380
is what we specified
as our source.

00:07:36.380 --> 00:07:43.480
And when we click on it, it now
goes back to our application.

00:07:43.480 --> 00:07:45.820
So that's pretty awesome.

00:07:45.820 --> 00:07:49.620
Incidentally, if you notice that
your Chrome browser does not

00:07:49.620 --> 00:07:52.560
have a Back button, the
most common reason for that

00:07:52.560 --> 00:07:55.900
is that what you've
added as your x-success

00:07:55.900 --> 00:07:58.830
URL here does not
actually equal what

00:07:58.830 --> 00:08:03.010
is in this URL types
URL scheme section.

00:08:03.010 --> 00:08:05.590
Chrome does its
own UI application

00:08:05.590 --> 00:08:08.770
Can't Open URL check to
determine whether it should

00:08:08.770 --> 00:08:10.940
display that Back button
in the first place.

00:08:10.940 --> 00:08:12.790
And if this value
in the URL scheme

00:08:12.790 --> 00:08:15.225
does not match what
you have put in here

00:08:15.225 --> 00:08:18.280
in your x-success
argument, it'll say,

00:08:18.280 --> 00:08:19.850
oh no, I can't open that URL.

00:08:19.850 --> 00:08:21.790
And it just won't
show the button.

00:08:21.790 --> 00:08:24.920
So let's review that giant
URL one more time here.

00:08:24.920 --> 00:08:27.050
Whoa!

00:08:27.050 --> 00:08:29.470
So the Google Chrome URL
scheme at the beginning

00:08:29.470 --> 00:08:31.899
is asking us to
open Google Chrome.

00:08:31.899 --> 00:08:34.490
The x-callback URL
host is warning Chrome

00:08:34.490 --> 00:08:36.230
that it's about to
receive an argument

00:08:36.230 --> 00:08:38.659
in the x-callback URL form.

00:08:38.659 --> 00:08:41.190
The open action followed
by the URL argument

00:08:41.190 --> 00:08:43.840
is telling Chrome what
page to actually visit.

00:08:43.840 --> 00:08:45.970
And the x-success
argument is telling

00:08:45.970 --> 00:08:48.990
Chrome what URL scheme to
open when it's all done.

00:08:48.990 --> 00:08:51.110
And finally this
x-source argument

00:08:51.110 --> 00:08:53.970
tells Chrome what text to put
in that little button that

00:08:53.970 --> 00:08:56.340
takes the user back
to your application.

00:08:56.340 --> 00:08:57.440
So this is great.

00:08:57.440 --> 00:08:58.960
But we're not done yet.

00:08:58.960 --> 00:09:00.944
See, it turns out
everything we've just done,

00:09:00.944 --> 00:09:02.360
it doesn't actually
work if you've

00:09:02.360 --> 00:09:04.660
got a version of Chrome
that's a few years old.

00:09:04.660 --> 00:09:06.830
Admittedly, not a common
situation these days,

00:09:06.830 --> 00:09:08.010
but it could happen.

00:09:08.010 --> 00:09:08.810
And let's face it.

00:09:08.810 --> 00:09:10.810
Our code is starting to
look a little messy here

00:09:10.810 --> 00:09:13.060
and it might even get
messier before we're done.

00:09:13.060 --> 00:09:13.892
But not to worry.

00:09:13.892 --> 00:09:16.350
We're going to deal with both
of these problems in the very

00:09:16.350 --> 00:09:17.260
next lesson.

00:09:17.260 --> 00:09:18.170
So stay tuned.

00:09:18.170 --> 00:09:19.720
[MUSIC PLAYING]

