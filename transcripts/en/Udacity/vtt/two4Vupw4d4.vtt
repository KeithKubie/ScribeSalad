WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.000
If you remember our program works going through the individual states of the finite state machine,

00:00:06.000 --> 00:00:10.000
you will find that this input is not processed correctly.

00:00:10.000 --> 00:00:15.000
What we have in here in our input is the character that can also be mistaken

00:00:15.000 --> 00:00:17.000
for the end of tag in HTML markup.

00:00:17.000 --> 00:00:22.000
A program does not know about the special meaning of double quotes, so what it does is--

00:00:22.000 --> 00:00:28.000
it starts interpreting everything as HTML but only up to the closing tag.

00:00:28.000 --> 00:00:32.000
The double quote in here is interpreted as text input.

00:00:32.000 --> 00:00:37.000
The greater than sign is ignored even in a non-tag mode. The text is doing just fine.

00:00:37.000 --> 00:00:39.000
And the remaining HTML markup is ignored.

00:00:39.000 --> 00:00:44.000
So what we should get as output is double quote foo and you can see that the output

00:00:44.000 --> 00:00:47.000
still contains part of the original HTML markup.

00:00:47.000 --> 00:00:53.000
So this is the correct answer. The others all work fine. Let me demonstrate this in the IDE.

00:00:53.000 --> 00:00:58.000
Since I'm now having double quotes in my script, I use single quotes in Python,

00:00:58.000 --> 00:01:01.000
which I can also use to delimit a string.

00:01:01.000 --> 00:01:06.000
Rule of thumb--if your string contains double quotes, use single quotes as string delimiters.

00:01:06.000 --> 00:01:10.000
If your string contains single quotes, use double quotes as delimiters.

00:01:10.000 --> 00:01:13.000
If there's no quotes in your string, well feel free whatever you like.

00:01:13.000 --> 00:01:17.000
Here's our input with greater than and double quotes, we run the whole thing,

00:01:17.000 --> 00:01:22.000
and we see that the output indeed contains part of the HTML markup

00:01:22.000 --> 00:01:24.000
that is the double quote is still in there.

