WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:05.680 align:start position:0%
 
[Music]

00:00:05.680 --> 00:00:05.690 align:start position:0%
[Music]
 

00:00:05.690 --> 00:00:07.639 align:start position:0%
[Music]
hello<00:00:06.690><c> welcome</c>

00:00:07.639 --> 00:00:07.649 align:start position:0%
hello welcome
 

00:00:07.649 --> 00:00:10.100 align:start position:0%
hello welcome
I'm<00:00:07.980><c> Huntsville</c><00:00:08.700><c> I'm</c><00:00:09.030><c> a</c><00:00:09.090><c> software</c><00:00:09.690><c> engineer</c>

00:00:10.100 --> 00:00:10.110 align:start position:0%
I'm Huntsville I'm a software engineer
 

00:00:10.110 --> 00:00:12.230 align:start position:0%
I'm Huntsville I'm a software engineer
in<00:00:10.170><c> the</c><00:00:10.440><c> Android</c><00:00:10.830><c> runtime</c><00:00:10.860><c> group</c><00:00:11.610><c> and</c><00:00:11.849><c> I'm</c>

00:00:12.230 --> 00:00:12.240 align:start position:0%
in the Android runtime group and I'm
 

00:00:12.240 --> 00:00:13.700 align:start position:0%
in the Android runtime group and I'm
here<00:00:12.540><c> to</c><00:00:12.660><c> talk</c><00:00:12.840><c> to</c><00:00:12.900><c> you</c><00:00:13.110><c> about</c><00:00:13.200><c> how</c><00:00:13.410><c> to</c><00:00:13.469><c> manage</c>

00:00:13.700 --> 00:00:13.710 align:start position:0%
here to talk to you about how to manage
 

00:00:13.710 --> 00:00:20.439 align:start position:0%
here to talk to you about how to manage
native<00:00:14.280><c> C++</c><00:00:14.460><c> from</c><00:00:15.089><c> memory</c><00:00:15.540><c> in</c><00:00:15.750><c> Android</c>

00:00:20.439 --> 00:00:20.449 align:start position:0%
 
 

00:00:20.449 --> 00:00:23.210 align:start position:0%
 
generally<00:00:21.449><c> most</c><00:00:21.689><c> Android</c><00:00:22.170><c> applications</c><00:00:23.039><c> are</c>

00:00:23.210 --> 00:00:23.220 align:start position:0%
generally most Android applications are
 

00:00:23.220 --> 00:00:25.759 align:start position:0%
generally most Android applications are
written<00:00:23.340><c> in</c><00:00:23.670><c> Java</c><00:00:23.970><c> today</c><00:00:24.539><c> maybe</c><00:00:25.050><c> Catalan</c><00:00:25.650><c> in</c>

00:00:25.759 --> 00:00:25.769 align:start position:0%
written in Java today maybe Catalan in
 

00:00:25.769 --> 00:00:28.220 align:start position:0%
written in Java today maybe Catalan in
the<00:00:25.890><c> future</c><00:00:26.720><c> but</c><00:00:27.720><c> there</c><00:00:27.869><c> are</c><00:00:28.050><c> sometimes</c>

00:00:28.220 --> 00:00:28.230 align:start position:0%
the future but there are sometimes
 

00:00:28.230 --> 00:00:30.200 align:start position:0%
the future but there are sometimes
reasons<00:00:28.859><c> to</c><00:00:29.039><c> also</c><00:00:29.340><c> write</c><00:00:29.490><c> pieces</c><00:00:29.760><c> of</c><00:00:30.090><c> the</c>

00:00:30.200 --> 00:00:30.210 align:start position:0%
reasons to also write pieces of the
 

00:00:30.210 --> 00:00:34.670 align:start position:0%
reasons to also write pieces of the
application<00:00:30.960><c> in</c><00:00:31.140><c> C</c><00:00:31.470><c> or</c><00:00:31.500><c> C++</c><00:00:31.700><c> code</c><00:00:33.350><c> it</c><00:00:34.350><c> may</c><00:00:34.620><c> be</c>

00:00:34.670 --> 00:00:34.680 align:start position:0%
application in C or C++ code it may be
 

00:00:34.680 --> 00:00:36.680 align:start position:0%
application in C or C++ code it may be
the<00:00:34.920><c> case</c><00:00:35.100><c> that</c><00:00:35.160><c> you</c><00:00:35.610><c> can</c><00:00:35.640><c> implement</c><00:00:36.480><c> some</c>

00:00:36.680 --> 00:00:36.690 align:start position:0%
the case that you can implement some
 

00:00:36.690 --> 00:00:38.780 align:start position:0%
the case that you can implement some
algorithm<00:00:37.410><c> more</c><00:00:37.530><c> efficiently</c><00:00:38.190><c> in</c><00:00:38.640><c> the</c>

00:00:38.780 --> 00:00:38.790 align:start position:0%
algorithm more efficiently in the
 

00:00:38.790 --> 00:00:43.490 align:start position:0%
algorithm more efficiently in the
language<00:00:39.420><c> like</c><00:00:39.690><c> C++</c><00:00:41.030><c> or</c><00:00:42.030><c> you</c><00:00:42.899><c> may</c><00:00:43.320><c> have</c><00:00:43.469><c> a</c>

00:00:43.490 --> 00:00:43.500 align:start position:0%
language like C++ or you may have a
 

00:00:43.500 --> 00:00:46.040 align:start position:0%
language like C++ or you may have a
native<00:00:44.129><c> library</c><00:00:44.820><c> that</c><00:00:44.940><c> already</c><00:00:45.300><c> exists</c><00:00:45.870><c> that</c>

00:00:46.040 --> 00:00:46.050 align:start position:0%
native library that already exists that
 

00:00:46.050 --> 00:00:49.340 align:start position:0%
native library that already exists that
you<00:00:46.200><c> wanted</c><00:00:46.440><c> to</c><00:00:46.559><c> use</c><00:00:46.829><c> or</c><00:00:47.250><c> the</c><00:00:47.280><c> like</c><00:00:48.140><c> here</c><00:00:49.140><c> we're</c>

00:00:49.340 --> 00:00:49.350 align:start position:0%
you wanted to use or the like here we're
 

00:00:49.350 --> 00:00:50.600 align:start position:0%
you wanted to use or the like here we're
really<00:00:49.530><c> talking</c><00:00:49.829><c> about</c><00:00:50.039><c> multi-language</c>

00:00:50.600 --> 00:00:50.610 align:start position:0%
really talking about multi-language
 

00:00:50.610 --> 00:00:53.660 align:start position:0%
really talking about multi-language
applications<00:00:51.600><c> that</c><00:00:51.780><c> combines</c><00:00:52.260><c> a</c><00:00:53.070><c> Java</c><00:00:53.370><c> and</c>

00:00:53.660 --> 00:00:53.670 align:start position:0%
applications that combines a Java and
 

00:00:53.670 --> 00:00:59.180 align:start position:0%
applications that combines a Java and
C++<00:00:55.489><c> and</c><00:00:56.690><c> it</c><00:00:57.690><c> turns</c><00:00:58.050><c> out</c><00:00:58.170><c> that</c><00:00:58.379><c> even</c><00:00:58.620><c> if</c><00:00:58.920><c> you're</c>

00:00:59.180 --> 00:00:59.190 align:start position:0%
C++ and it turns out that even if you're
 

00:00:59.190 --> 00:01:00.619 align:start position:0%
C++ and it turns out that even if you're
in<00:00:59.280><c> the</c><00:00:59.370><c> business</c><00:00:59.550><c> of</c><00:00:59.879><c> writing</c><00:01:00.059><c> a</c><00:01:00.300><c> hundred</c>

00:01:00.619 --> 00:01:00.629 align:start position:0%
in the business of writing a hundred
 

00:01:00.629 --> 00:01:03.740 align:start position:0%
in the business of writing a hundred
percent<00:01:00.780><c> Java</c><00:01:01.289><c> apps</c><00:01:01.680><c> as</c><00:01:02.100><c> you</c><00:01:02.180><c> maybe</c><00:01:03.180><c> some</c><00:01:03.629><c> of</c>

00:01:03.740 --> 00:01:03.750 align:start position:0%
percent Java apps as you maybe some of
 

00:01:03.750 --> 00:01:05.359 align:start position:0%
percent Java apps as you maybe some of
what<00:01:03.899><c> I'm</c><00:01:04.019><c> going</c><00:01:04.199><c> to</c><00:01:04.290><c> talk</c><00:01:04.439><c> about</c><00:01:04.470><c> what</c><00:01:05.100><c> may</c>

00:01:05.359 --> 00:01:05.369 align:start position:0%
what I'm going to talk about what may
 

00:01:05.369 --> 00:01:07.399 align:start position:0%
what I'm going to talk about what may
still<00:01:05.700><c> occur</c><00:01:06.060><c> may</c><00:01:06.360><c> still</c><00:01:06.630><c> be</c><00:01:06.780><c> an</c><00:01:06.900><c> issue</c><00:01:07.049><c> in</c>

00:01:07.399 --> 00:01:07.409 align:start position:0%
still occur may still be an issue in
 

00:01:07.409 --> 00:01:11.570 align:start position:0%
still occur may still be an issue in
certain<00:01:07.770><c> isolated</c><00:01:08.670><c> cases</c><00:01:09.710><c> for</c><00:01:10.710><c> example</c><00:01:11.280><c> if</c>

00:01:11.570 --> 00:01:11.580 align:start position:0%
certain isolated cases for example if
 

00:01:11.580 --> 00:01:14.289 align:start position:0%
certain isolated cases for example if
you<00:01:11.880><c> look</c><00:01:12.119><c> at</c><00:01:12.330><c> the</c><00:01:12.799><c> Android</c><00:01:13.799><c> platform</c>

00:01:14.289 --> 00:01:14.299 align:start position:0%
you look at the Android platform
 

00:01:14.299 --> 00:01:16.580 align:start position:0%
you look at the Android platform
implementation<00:01:15.299><c> the</c><00:01:15.840><c> big</c><00:01:16.170><c> integer</c>

00:01:16.580 --> 00:01:16.590 align:start position:0%
implementation the big integer
 

00:01:16.590 --> 00:01:18.260 align:start position:0%
implementation the big integer
implementation<00:01:17.430><c> that</c><00:01:17.549><c> you're</c><00:01:17.729><c> using</c><00:01:17.939><c> if</c><00:01:18.180><c> you</c>

00:01:18.260 --> 00:01:18.270 align:start position:0%
implementation that you're using if you
 

00:01:18.270 --> 00:01:21.440 align:start position:0%
implementation that you're using if you
bake<00:01:18.509><c> it</c><00:01:18.540><c> using</c><00:01:18.960><c> big</c><00:01:19.140><c> integer</c><00:01:19.619><c> at</c><00:01:19.799><c> all</c><00:01:20.450><c> is</c>

00:01:21.440 --> 00:01:21.450 align:start position:0%
bake it using big integer at all is
 

00:01:21.450 --> 00:01:24.050 align:start position:0%
bake it using big integer at all is
actually<00:01:22.409><c> implemented</c><00:01:23.159><c> in</c><00:01:23.340><c> terms</c><00:01:23.549><c> of</c><00:01:23.729><c> native</c>

00:01:24.050 --> 00:01:24.060 align:start position:0%
actually implemented in terms of native
 

00:01:24.060 --> 00:01:26.749 align:start position:0%
actually implemented in terms of native
code<00:01:24.270><c> underneath</c><00:01:24.810><c> and</c><00:01:25.080><c> that</c><00:01:26.070><c> may</c><00:01:26.310><c> in</c><00:01:26.580><c> other</c>

00:01:26.749 --> 00:01:26.759 align:start position:0%
code underneath and that may in other
 

00:01:26.759 --> 00:01:28.280 align:start position:0%
code underneath and that may in other
cases<00:01:27.090><c> that</c><00:01:27.450><c> sort</c><00:01:27.659><c> of</c><00:01:27.689><c> thing</c><00:01:27.900><c> may</c><00:01:28.080><c> actually</c>

00:01:28.280 --> 00:01:28.290 align:start position:0%
cases that sort of thing may actually
 

00:01:28.290 --> 00:01:30.800 align:start position:0%
cases that sort of thing may actually
show<00:01:28.829><c> too</c><00:01:28.890><c> so</c><00:01:29.790><c> that</c><00:01:29.970><c> was</c><00:01:30.119><c> one</c><00:01:30.270><c> of</c><00:01:30.299><c> the</c><00:01:30.479><c> reasons</c>

00:01:30.800 --> 00:01:30.810 align:start position:0%
show too so that was one of the reasons
 

00:01:30.810 --> 00:01:32.749 align:start position:0%
show too so that was one of the reasons
I<00:01:30.869><c> got</c><00:01:30.900><c> involved</c><00:01:31.350><c> in</c><00:01:31.590><c> this</c><00:01:31.740><c> I</c><00:01:32.009><c> actually</c><00:01:32.189><c> spent</c>

00:01:32.749 --> 00:01:32.759 align:start position:0%
I got involved in this I actually spent
 

00:01:32.759 --> 00:01:34.069 align:start position:0%
I got involved in this I actually spent
some<00:01:32.850><c> time</c><00:01:33.180><c> working</c><00:01:33.360><c> on</c><00:01:33.659><c> the</c><00:01:33.780><c> Android</c>

00:01:34.069 --> 00:01:34.079 align:start position:0%
some time working on the Android
 

00:01:34.079 --> 00:01:35.749 align:start position:0%
some time working on the Android
calculator<00:01:34.590><c> app</c><00:01:34.829><c> which</c><00:01:35.040><c> happens</c><00:01:35.430><c> to</c><00:01:35.579><c> be</c><00:01:35.729><c> a</c>

00:01:35.749 --> 00:01:35.759 align:start position:0%
calculator app which happens to be a
 

00:01:35.759 --> 00:01:41.210 align:start position:0%
calculator app which happens to be a
major<00:01:36.030><c> client</c><00:01:36.390><c> of</c><00:01:36.600><c> big</c><00:01:36.750><c> integer</c><00:01:38.509><c> and</c><00:01:40.220><c> here</c>

00:01:41.210 --> 00:01:41.220 align:start position:0%
major client of big integer and here
 

00:01:41.220 --> 00:01:44.480 align:start position:0%
major client of big integer and here
we're<00:01:41.400><c> going</c><00:01:41.430><c> to</c><00:01:41.670><c> use</c><00:01:41.820><c> a</c><00:01:41.850><c> running</c><00:01:42.329><c> example</c><00:01:43.490><c> of</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
we're going to use a running example of
 

00:01:44.490 --> 00:01:47.600 align:start position:0%
we're going to use a running example of
a<00:01:44.909><c> hypothetical</c><00:01:45.590><c> C++</c><00:01:46.590><c> package</c><00:01:47.070><c> that</c><00:01:47.310><c> we</c><00:01:47.430><c> want</c>

00:01:47.600 --> 00:01:47.610 align:start position:0%
a hypothetical C++ package that we want
 

00:01:47.610 --> 00:01:50.179 align:start position:0%
a hypothetical C++ package that we want
to<00:01:47.670><c> access</c><00:01:48.180><c> from</c><00:01:48.390><c> Java</c><00:01:48.659><c> language</c><00:01:49.140><c> code</c><00:01:49.500><c> that</c>

00:01:50.179 --> 00:01:50.189 align:start position:0%
to access from Java language code that
 

00:01:50.189 --> 00:01:52.670 align:start position:0%
to access from Java language code that
manipulates<00:01:50.790><c> polynomials</c><00:01:51.570><c> over</c><00:01:51.720><c> GF</c><00:01:52.229><c> 2</c><00:01:52.259><c> does</c>

00:01:52.670 --> 00:01:52.680 align:start position:0%
manipulates polynomials over GF 2 does
 

00:01:52.680 --> 00:01:55.639 align:start position:0%
manipulates polynomials over GF 2 does
anybody<00:01:52.890><c> know</c><00:01:53.159><c> what</c><00:01:53.340><c> that</c><00:01:53.490><c> means</c><00:01:54.380><c> good</c><00:01:55.380><c> you're</c>

00:01:55.639 --> 00:01:55.649 align:start position:0%
anybody know what that means good you're
 

00:01:55.649 --> 00:01:58.399 align:start position:0%
anybody know what that means good you're
not<00:01:55.740><c> supposed</c><00:01:56.130><c> to</c><00:01:56.189><c> it</c><00:01:56.310><c> doesn't</c><00:01:56.579><c> matter</c><00:01:56.960><c> as</c><00:01:57.960><c> far</c>

00:01:58.399 --> 00:01:58.409 align:start position:0%
not supposed to it doesn't matter as far
 

00:01:58.409 --> 00:02:00.230 align:start position:0%
not supposed to it doesn't matter as far
as<00:01:58.950><c> we're</c><00:01:59.100><c> concerned</c><00:01:59.430><c> these</c><00:01:59.640><c> are</c><00:01:59.700><c> basically</c>

00:02:00.230 --> 00:02:00.240 align:start position:0%
as we're concerned these are basically
 

00:02:00.240 --> 00:02:01.940 align:start position:0%
as we're concerned these are basically
bit<00:02:00.600><c> vectors</c><00:02:00.990><c> with</c><00:02:01.200><c> an</c><00:02:01.320><c> odd</c><00:02:01.469><c> notion</c><00:02:01.860><c> of</c>

00:02:01.940 --> 00:02:01.950 align:start position:0%
bit vectors with an odd notion of
 

00:02:01.950 --> 00:02:03.469 align:start position:0%
bit vectors with an odd notion of
multiplication<00:02:02.729><c> but</c><00:02:02.880><c> I</c><00:02:02.909><c> don't</c><00:02:03.119><c> even</c><00:02:03.240><c> care</c>

00:02:03.469 --> 00:02:03.479 align:start position:0%
multiplication but I don't even care
 

00:02:03.479 --> 00:02:04.969 align:start position:0%
multiplication but I don't even care
about<00:02:03.540><c> that</c><00:02:03.960><c> I'm</c><00:02:04.170><c> not</c><00:02:04.200><c> going</c><00:02:04.469><c> to</c><00:02:04.560><c> show</c><00:02:04.680><c> you</c><00:02:04.740><c> the</c>

00:02:04.969 --> 00:02:04.979 align:start position:0%
about that I'm not going to show you the
 

00:02:04.979 --> 00:02:08.570 align:start position:0%
about that I'm not going to show you the
C++<00:02:05.520><c> code</c><00:02:05.549><c> actually</c><00:02:06.680><c> in</c><00:02:07.680><c> this</c><00:02:08.069><c> this</c>

00:02:08.570 --> 00:02:08.580 align:start position:0%
C++ code actually in this this
 

00:02:08.580 --> 00:02:10.850 align:start position:0%
C++ code actually in this this
particular<00:02:08.759><c> example</c><00:02:09.660><c> is</c><00:02:09.959><c> good</c><00:02:10.140><c> because</c><00:02:10.410><c> it</c>

00:02:10.850 --> 00:02:10.860 align:start position:0%
particular example is good because it
 

00:02:10.860 --> 00:02:12.140 align:start position:0%
particular example is good because it
turns<00:02:11.099><c> out</c><00:02:11.220><c> that</c><00:02:11.400><c> in</c><00:02:11.640><c> spite</c><00:02:11.879><c> of</c>

00:02:12.140 --> 00:02:12.150 align:start position:0%
turns out that in spite of
 

00:02:12.150 --> 00:02:13.729 align:start position:0%
turns out that in spite of
fact<00:02:12.390><c> that</c><00:02:12.510><c> it</c><00:02:12.659><c> seems</c><00:02:12.870><c> esoteric</c><00:02:13.439><c> modern</c>

00:02:13.729 --> 00:02:13.739 align:start position:0%
fact that it seems esoteric modern
 

00:02:13.739 --> 00:02:16.339 align:start position:0%
fact that it seems esoteric modern
Harvard<00:02:14.189><c> often</c><00:02:15.060><c> has</c><00:02:15.209><c> a</c><00:02:15.269><c> hardware</c><00:02:15.810><c> support</c><00:02:16.170><c> for</c>

00:02:16.339 --> 00:02:16.349 align:start position:0%
Harvard often has a hardware support for
 

00:02:16.349 --> 00:02:17.690 align:start position:0%
Harvard often has a hardware support for
this<00:02:16.470><c> so</c><00:02:16.680><c> you</c><00:02:16.739><c> can</c><00:02:16.950><c> actually</c><00:02:16.980><c> build</c><00:02:17.549><c> a</c>

00:02:17.690 --> 00:02:17.700 align:start position:0%
this so you can actually build a
 

00:02:17.700 --> 00:02:19.690 align:start position:0%
this so you can actually build a
blazingly<00:02:18.120><c> fast</c><00:02:18.409><c> really</c><00:02:19.409><c> low-level</c>

00:02:19.690 --> 00:02:19.700 align:start position:0%
blazingly fast really low-level
 

00:02:19.700 --> 00:02:22.100 align:start position:0%
blazingly fast really low-level
implementation<00:02:20.700><c> so</c><00:02:21.180><c> what</c><00:02:21.360><c> we</c><00:02:21.480><c> want</c><00:02:21.689><c> to</c><00:02:21.780><c> do</c><00:02:21.930><c> is</c>

00:02:22.100 --> 00:02:22.110 align:start position:0%
implementation so what we want to do is
 

00:02:22.110 --> 00:02:24.110 align:start position:0%
implementation so what we want to do is
we<00:02:22.290><c> have</c><00:02:22.470><c> this</c><00:02:22.590><c> library</c><00:02:22.890><c> and</c><00:02:23.459><c> we</c><00:02:23.640><c> want</c><00:02:23.819><c> to</c><00:02:23.909><c> call</c>

00:02:24.110 --> 00:02:24.120 align:start position:0%
we have this library and we want to call
 

00:02:24.120 --> 00:02:30.649 align:start position:0%
we have this library and we want to call
that<00:02:24.150><c> library</c><00:02:24.870><c> from</c><00:02:25.349><c> Java</c><00:02:25.920><c> code</c><00:02:29.329><c> so</c><00:02:30.329><c> what</c><00:02:30.510><c> this</c>

00:02:30.649 --> 00:02:30.659 align:start position:0%
that library from Java code so what this
 

00:02:30.659 --> 00:02:36.349 align:start position:0%
that library from Java code so what this
looks<00:02:31.620><c> like</c><00:02:31.920><c> roughly</c><00:02:32.549><c> is</c><00:02:33.349><c> the</c><00:02:34.349><c> following</c><00:02:35.359><c> it's</c>

00:02:36.349 --> 00:02:36.359 align:start position:0%
looks like roughly is the following it's
 

00:02:36.359 --> 00:02:39.949 align:start position:0%
looks like roughly is the following it's
because<00:02:36.750><c> that</c><00:02:36.900><c> you</c><00:02:37.079><c> see</c><00:02:37.319><c> up</c><00:02:37.530><c> here</c><00:02:38.359><c> so</c><00:02:39.359><c> the</c>

00:02:39.949 --> 00:02:39.959 align:start position:0%
because that you see up here so the
 

00:02:39.959 --> 00:02:42.649 align:start position:0%
because that you see up here so the
important<00:02:40.470><c> part</c><00:02:40.620><c> here</c><00:02:40.950><c> is</c><00:02:41.370><c> we</c><00:02:41.790><c> have</c><00:02:41.819><c> a</c><00:02:42.000><c> Java</c>

00:02:42.649 --> 00:02:42.659 align:start position:0%
important part here is we have a Java
 

00:02:42.659 --> 00:02:47.539 align:start position:0%
important part here is we have a Java
class<00:02:43.430><c> which</c><00:02:44.430><c> logically</c><00:02:45.389><c> owns</c><00:02:45.900><c> a</c><00:02:46.319><c> C++</c><00:02:46.950><c> object</c>

00:02:47.539 --> 00:02:47.549 align:start position:0%
class which logically owns a C++ object
 

00:02:47.549 --> 00:02:49.190 align:start position:0%
class which logically owns a C++ object
that<00:02:47.670><c> actually</c><00:02:47.879><c> contains</c><00:02:48.510><c> the</c><00:02:48.750><c> guts</c><00:02:48.930><c> of</c><00:02:49.049><c> the</c>

00:02:49.190 --> 00:02:49.200 align:start position:0%
that actually contains the guts of the
 

00:02:49.200 --> 00:02:51.199 align:start position:0%
that actually contains the guts of the
implementation<00:02:49.500><c> that</c><00:02:50.190><c> actually</c><00:02:50.639><c> implements</c>

00:02:51.199 --> 00:02:51.209 align:start position:0%
implementation that actually implements
 

00:02:51.209 --> 00:02:54.379 align:start position:0%
implementation that actually implements
the<00:02:51.769><c> the</c><00:02:52.769><c> real</c><00:02:52.950><c> functionality</c><00:02:53.879><c> which</c><00:02:54.090><c> I'm</c><00:02:54.269><c> not</c>

00:02:54.379 --> 00:02:54.389 align:start position:0%
the the real functionality which I'm not
 

00:02:54.389 --> 00:02:56.890 align:start position:0%
the the real functionality which I'm not
going<00:02:54.599><c> to</c><00:02:54.720><c> show</c><00:02:54.930><c> you</c><00:02:55.220><c> what</c><00:02:56.220><c> the</c><00:02:56.400><c> Java</c><00:02:56.700><c> object</c>

00:02:56.890 --> 00:02:56.900 align:start position:0%
going to show you what the Java object
 

00:02:56.900 --> 00:03:00.470 align:start position:0%
going to show you what the Java object
holds<00:02:57.900><c> is</c><00:02:58.079><c> a</c><00:02:58.709><c> Java</c><00:02:59.129><c> long</c><00:02:59.489><c> which</c><00:02:59.909><c> is</c><00:02:59.939><c> really</c><00:03:00.450><c> a</c>

00:03:00.470 --> 00:03:00.480 align:start position:0%
holds is a Java long which is really a
 

00:03:00.480 --> 00:03:04.940 align:start position:0%
holds is a Java long which is really a
C++<00:03:01.200><c> pointed</c><00:03:01.680><c> in</c><00:03:01.799><c> disguise</c><00:03:02.810><c> this</c><00:03:03.810><c> then</c><00:03:04.200><c> what</c>

00:03:04.940 --> 00:03:04.950 align:start position:0%
C++ pointed in disguise this then what
 

00:03:04.950 --> 00:03:06.920 align:start position:0%
C++ pointed in disguise this then what
it's<00:03:05.129><c> going</c><00:03:05.310><c> to</c><00:03:05.430><c> do</c><00:03:05.609><c> is</c><00:03:05.670><c> for</c><00:03:06.090><c> example</c><00:03:06.269><c> when</c><00:03:06.780><c> you</c>

00:03:06.920 --> 00:03:06.930 align:start position:0%
it's going to do is for example when you
 

00:03:06.930 --> 00:03:08.509 align:start position:0%
it's going to do is for example when you
want<00:03:07.079><c> to</c><00:03:07.139><c> multiply</c><00:03:07.260><c> two</c><00:03:07.560><c> of</c><00:03:07.980><c> these</c><00:03:08.129><c> this</c><00:03:08.340><c> is</c>

00:03:08.509 --> 00:03:08.519 align:start position:0%
want to multiply two of these this is
 

00:03:08.519 --> 00:03:10.250 align:start position:0%
want to multiply two of these this is
eventually<00:03:09.000><c> going</c><00:03:09.389><c> to</c><00:03:09.480><c> call</c><00:03:09.689><c> this</c><00:03:09.870><c> native</c>

00:03:10.250 --> 00:03:10.260 align:start position:0%
eventually going to call this native
 

00:03:10.260 --> 00:03:13.069 align:start position:0%
eventually going to call this native
multiply<00:03:10.739><c> function</c><00:03:11.150><c> it's</c><00:03:12.150><c> going</c><00:03:12.389><c> to</c><00:03:12.510><c> pass</c><00:03:12.750><c> it</c>

00:03:13.069 --> 00:03:13.079 align:start position:0%
multiply function it's going to pass it
 

00:03:13.079 --> 00:03:16.520 align:start position:0%
multiply function it's going to pass it
to<00:03:13.349><c> Java</c><00:03:13.950><c> Long's</c><00:03:14.629><c> this</c><00:03:15.629><c> is</c><00:03:15.780><c> going</c><00:03:16.019><c> to</c><00:03:16.109><c> go</c><00:03:16.260><c> into</c>

00:03:16.520 --> 00:03:16.530 align:start position:0%
to Java Long's this is going to go into
 

00:03:16.530 --> 00:03:18.890 align:start position:0%
to Java Long's this is going to go into
some<00:03:16.739><c> J&amp;I</c><00:03:17.160><c> code</c><00:03:17.549><c> which</c><00:03:17.849><c> will</c><00:03:18.030><c> cast</c><00:03:18.329><c> those</c><00:03:18.599><c> Java</c>

00:03:18.890 --> 00:03:18.900 align:start position:0%
some J&amp;I code which will cast those Java
 

00:03:18.900 --> 00:03:22.099 align:start position:0%
some J&amp;I code which will cast those Java
Long's<00:03:19.260><c> to</c><00:03:19.650><c> C++</c><00:03:19.949><c> pointers</c><00:03:20.790><c> and</c><00:03:21.109><c> manipulate</c>

00:03:22.099 --> 00:03:22.109 align:start position:0%
Long's to C++ pointers and manipulate
 

00:03:22.109 --> 00:03:24.500 align:start position:0%
Long's to C++ pointers and manipulate
the<00:03:22.290><c> C++</c><00:03:22.829><c> object</c><00:03:23.370><c> and</c><00:03:23.699><c> in</c><00:03:24.209><c> this</c><00:03:24.329><c> particular</c>

00:03:24.500 --> 00:03:24.510 align:start position:0%
the C++ object and in this particular
 

00:03:24.510 --> 00:03:27.080 align:start position:0%
the C++ object and in this particular
case<00:03:24.930><c> we</c><00:03:25.500><c> turn</c><00:03:25.739><c> another</c><00:03:26.040><c> Java</c><00:03:26.430><c> long</c><00:03:26.730><c> which</c><00:03:26.940><c> is</c>

00:03:27.080 --> 00:03:27.090 align:start position:0%
case we turn another Java long which is
 

00:03:27.090 --> 00:03:31.640 align:start position:0%
case we turn another Java long which is
really<00:03:27.359><c> a</c><00:03:27.389><c> C++</c><00:03:28.019><c> pointer</c><00:03:29.419><c> so</c><00:03:30.419><c> the</c><00:03:30.629><c> the</c><00:03:31.349><c> Java</c>

00:03:31.640 --> 00:03:31.650 align:start position:0%
really a C++ pointer so the the Java
 

00:03:31.650 --> 00:03:34.099 align:start position:0%
really a C++ pointer so the the Java
level<00:03:32.099><c> multiplication</c><00:03:32.909><c> routine</c><00:03:33.329><c> is</c><00:03:33.629><c> really</c>

00:03:34.099 --> 00:03:34.109 align:start position:0%
level multiplication routine is really
 

00:03:34.109 --> 00:03:37.430 align:start position:0%
level multiplication routine is really
one<00:03:34.409><c> that</c><00:03:35.190><c> just</c><00:03:35.519><c> gives</c><00:03:35.790><c> me</c><00:03:36.000><c> back</c><00:03:36.299><c> a</c><00:03:36.659><c> new</c><00:03:36.989><c> binary</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
one that just gives me back a new binary
 

00:03:37.440 --> 00:03:42.259 align:start position:0%
one that just gives me back a new binary
poly<00:03:37.980><c> object</c><00:03:39.560><c> containing</c><00:03:40.560><c> this</c><00:03:41.040><c> Java</c><00:03:41.970><c> long</c>

00:03:42.259 --> 00:03:42.269 align:start position:0%
poly object containing this Java long
 

00:03:42.269 --> 00:03:45.710 align:start position:0%
poly object containing this Java long
which<00:03:42.690><c> really</c><00:03:42.930><c> points</c><00:03:43.409><c> to</c><00:03:43.500><c> C++</c><00:03:43.769><c> code</c><00:03:44.540><c> which</c><00:03:45.540><c> I</c>

00:03:45.710 --> 00:03:45.720 align:start position:0%
which really points to C++ code which I
 

00:03:45.720 --> 00:03:48.500 align:start position:0%
which really points to C++ code which I
obtained<00:03:46.530><c> by</c><00:03:46.799><c> I</c><00:03:46.829><c> obtained</c><00:03:47.699><c> the</c><00:03:48.000><c> the</c>

00:03:48.500 --> 00:03:48.510 align:start position:0%
obtained by I obtained the the
 

00:03:48.510 --> 00:03:52.309 align:start position:0%
obtained by I obtained the the
underlying<00:03:48.949><c> the</c><00:03:49.949><c> underlying</c><00:03:50.720><c> C++</c><00:03:51.720><c> pointer</c><00:03:52.139><c> by</c>

00:03:52.309 --> 00:03:52.319 align:start position:0%
underlying the underlying C++ pointer by
 

00:03:52.319 --> 00:03:56.479 align:start position:0%
underlying the underlying C++ pointer by
calling<00:03:52.739><c> this</c><00:03:52.889><c> native</c><00:03:53.220><c> multiply</c><00:03:53.609><c> routine</c><00:03:55.489><c> so</c>

00:03:56.479 --> 00:03:56.489 align:start position:0%
calling this native multiply routine so
 

00:03:56.489 --> 00:03:58.039 align:start position:0%
calling this native multiply routine so
what<00:03:56.669><c> here's</c><00:03:56.970><c> a</c><00:03:57.030><c> pictorial</c><00:03:57.449><c> representation</c>

00:03:58.039 --> 00:03:58.049 align:start position:0%
what here's a pictorial representation
 

00:03:58.049 --> 00:04:00.920 align:start position:0%
what here's a pictorial representation
of<00:03:58.560><c> what</c><00:03:58.709><c> this</c><00:03:58.889><c> looks</c><00:03:59.129><c> like</c><00:03:59.340><c> I</c><00:03:59.639><c> have</c><00:04:00.239><c> a</c><00:04:00.269><c> the</c>

00:04:00.920 --> 00:04:00.930 align:start position:0%
of what this looks like I have a the
 

00:04:00.930 --> 00:04:03.099 align:start position:0%
of what this looks like I have a the
Java<00:04:01.260><c> object</c><00:04:01.379><c> at</c><00:04:01.919><c> the</c><00:04:02.040><c> top</c><00:04:02.069><c> of</c><00:04:02.400><c> the</c><00:04:02.519><c> slide</c>

00:04:03.099 --> 00:04:03.109 align:start position:0%
Java object at the top of the slide
 

00:04:03.109 --> 00:04:05.390 align:start position:0%
Java object at the top of the slide
which<00:04:04.109><c> is</c><00:04:04.290><c> the</c><00:04:04.440><c> only</c><00:04:04.590><c> thing</c><00:04:04.919><c> that</c><00:04:05.069><c> the</c><00:04:05.190><c> job</c>

00:04:05.390 --> 00:04:05.400 align:start position:0%
which is the only thing that the job
 

00:04:05.400 --> 00:04:08.629 align:start position:0%
which is the only thing that the job
that<00:04:05.669><c> my</c><00:04:05.909><c> client</c><00:04:06.419><c> actually</c><00:04:06.930><c> sees</c><00:04:07.229><c> so</c><00:04:08.099><c> I</c><00:04:08.129><c> want</c>

00:04:08.629 --> 00:04:08.639 align:start position:0%
that my client actually sees so I want
 

00:04:08.639 --> 00:04:11.479 align:start position:0%
that my client actually sees so I want
the<00:04:09.239><c> client</c><00:04:09.479><c> to</c><00:04:09.720><c> be</c><00:04:09.870><c> able</c><00:04:10.019><c> to</c><00:04:10.199><c> treat</c><00:04:10.530><c> this</c><00:04:10.829><c> Java</c>

00:04:11.479 --> 00:04:11.489 align:start position:0%
the client to be able to treat this Java
 

00:04:11.489 --> 00:04:13.039 align:start position:0%
the client to be able to treat this Java
object<00:04:11.970><c> as</c><00:04:12.120><c> though</c><00:04:12.359><c> it</c><00:04:12.419><c> were</c><00:04:12.599><c> implemented</c>

00:04:13.039 --> 00:04:13.049 align:start position:0%
object as though it were implemented
 

00:04:13.049 --> 00:04:14.990 align:start position:0%
object as though it were implemented
completely<00:04:13.769><c> in</c><00:04:13.919><c> Java</c><00:04:14.220><c> and</c><00:04:14.489><c> ignore</c><00:04:14.819><c> the</c><00:04:14.970><c> fact</c>

00:04:14.990 --> 00:04:15.000 align:start position:0%
completely in Java and ignore the fact
 

00:04:15.000 --> 00:04:18.050 align:start position:0%
completely in Java and ignore the fact
that<00:04:15.329><c> the</c><00:04:15.540><c> C++</c><00:04:16.109><c> code</c><00:04:16.139><c> underneath</c><00:04:17.060><c> the</c>

00:04:18.050 --> 00:04:18.060 align:start position:0%
that the C++ code underneath the
 

00:04:18.060 --> 00:04:20.390 align:start position:0%
that the C++ code underneath the
dot-dash<00:04:18.570><c> line</c><00:04:18.989><c> here</c><00:04:19.500><c> is</c><00:04:19.620><c> the</c><00:04:19.799><c> Java</c><00:04:20.070><c> long</c>

00:04:20.390 --> 00:04:20.400 align:start position:0%
dot-dash line here is the Java long
 

00:04:20.400 --> 00:04:23.450 align:start position:0%
dot-dash line here is the Java long
which<00:04:20.760><c> is</c><00:04:20.909><c> really</c><00:04:21.180><c> a</c><00:04:21.209><c> C++</c><00:04:21.900><c> pointer</c><00:04:22.380><c> which</c><00:04:23.070><c> sort</c>

00:04:23.450 --> 00:04:23.460 align:start position:0%
which is really a C++ pointer which sort
 

00:04:23.460 --> 00:04:25.850 align:start position:0%
which is really a C++ pointer which sort
of<00:04:23.520><c> points</c><00:04:24.000><c> to</c><00:04:24.060><c> the</c><00:04:24.389><c> C++</c><00:04:25.050><c> object</c><00:04:25.469><c> reference</c>

00:04:25.850 --> 00:04:25.860 align:start position:0%
of points to the C++ object reference
 

00:04:25.860 --> 00:04:28.640 align:start position:0%
of points to the C++ object reference
though<00:04:26.430><c> Java</c><00:04:26.699><c> doesn't</c><00:04:27.090><c> know</c><00:04:27.180><c> that</c><00:04:27.659><c> and</c><00:04:27.750><c> inside</c>

00:04:28.640 --> 00:04:28.650 align:start position:0%
though Java doesn't know that and inside
 

00:04:28.650 --> 00:04:30.770 align:start position:0%
though Java doesn't know that and inside
the<00:04:28.860><c> C++</c><00:04:29.400><c> object</c><00:04:29.789><c> representation</c><00:04:30.539><c> there</c><00:04:30.659><c> may</c>

00:04:30.770 --> 00:04:30.780 align:start position:0%
the C++ object representation there may
 

00:04:30.780 --> 00:04:32.330 align:start position:0%
the C++ object representation there may
be<00:04:30.810><c> additional</c><00:04:31.139><c> pointers</c><00:04:31.860><c> that</c><00:04:31.889><c> point</c><00:04:32.069><c> to</c>

00:04:32.330 --> 00:04:32.340 align:start position:0%
be additional pointers that point to
 

00:04:32.340 --> 00:04:37.249 align:start position:0%
be additional pointers that point to
additional<00:04:32.430><c> C++</c><00:04:33.360><c> data</c><00:04:33.599><c> structures</c><00:04:36.050><c> so</c><00:04:37.050><c> what's</c>

00:04:37.249 --> 00:04:37.259 align:start position:0%
additional C++ data structures so what's
 

00:04:37.259 --> 00:04:41.059 align:start position:0%
additional C++ data structures so what's
the<00:04:37.439><c> problem</c><00:04:37.830><c> with</c><00:04:38.009><c> doing</c><00:04:38.219><c> this</c><00:04:39.560><c> the</c><00:04:40.560><c> problem</c>

00:04:41.059 --> 00:04:41.069 align:start position:0%
the problem with doing this the problem
 

00:04:41.069 --> 00:04:43.459 align:start position:0%
the problem with doing this the problem
comes<00:04:41.370><c> into</c><00:04:41.639><c> play</c><00:04:41.849><c> when</c><00:04:42.180><c> we</c><00:04:42.210><c> try</c><00:04:42.569><c> to</c><00:04:42.629><c> think</c>

00:04:43.459 --> 00:04:43.469 align:start position:0%
comes into play when we try to think
 

00:04:43.469 --> 00:04:45.860 align:start position:0%
comes into play when we try to think
about<00:04:43.770><c> how</c><00:04:44.189><c> objects</c><00:04:44.819><c> how</c><00:04:45.270><c> memory</c><00:04:45.629><c> gets</c>

00:04:45.860 --> 00:04:45.870 align:start position:0%
about how objects how memory gets
 

00:04:45.870 --> 00:04:48.529 align:start position:0%
about how objects how memory gets
managed<00:04:46.439><c> and</c><00:04:46.800><c> how</c><00:04:46.979><c> objects</c><00:04:47.550><c> get</c><00:04:47.669><c> be</c><00:04:47.849><c> allocated</c>

00:04:48.529 --> 00:04:48.539 align:start position:0%
managed and how objects get be allocated
 

00:04:48.539 --> 00:04:51.619 align:start position:0%
managed and how objects get be allocated
on<00:04:48.689><c> the</c><00:04:49.620><c> on</c><00:04:49.979><c> the</c><00:04:50.219><c> Java</c><00:04:50.520><c> language</c><00:04:50.729><c> side</c><00:04:51.240><c> we</c><00:04:51.479><c> have</c>

00:04:51.619 --> 00:04:51.629 align:start position:0%
on the on the Java language side we have
 

00:04:51.629 --> 00:04:53.270 align:start position:0%
on the on the Java language side we have
a<00:04:51.659><c> garbage</c><00:04:51.900><c> collector</c><00:04:52.319><c> that</c><00:04:52.560><c> cleans</c><00:04:52.860><c> up</c><00:04:53.039><c> after</c>

00:04:53.270 --> 00:04:53.280 align:start position:0%
a garbage collector that cleans up after
 

00:04:53.280 --> 00:04:55.040 align:start position:0%
a garbage collector that cleans up after
us<00:04:53.669><c> and</c><00:04:53.969><c> we</c><00:04:54.090><c> generally</c><00:04:54.330><c> don't</c><00:04:54.599><c> have</c><00:04:54.689><c> to</c><00:04:54.870><c> worry</c>

00:04:55.040 --> 00:04:55.050 align:start position:0%
us and we generally don't have to worry
 

00:04:55.050 --> 00:04:56.540 align:start position:0%
us and we generally don't have to worry
about<00:04:55.199><c> this</c><00:04:55.469><c> too</c><00:04:55.680><c> much</c><00:04:55.860><c> when</c><00:04:56.099><c> things</c><00:04:56.340><c> are</c><00:04:56.460><c> no</c>

00:04:56.540 --> 00:04:56.550 align:start position:0%
about this too much when things are no
 

00:04:56.550 --> 00:04:58.159 align:start position:0%
about this too much when things are no
longer<00:04:56.580><c> reference</c><00:04:57.270><c> they</c><00:04:57.449><c> go</c><00:04:57.629><c> away</c><00:04:57.840><c> when</c><00:04:58.050><c> they</c>

00:04:58.159 --> 00:04:58.169 align:start position:0%
longer reference they go away when they
 

00:04:58.169 --> 00:05:02.059 align:start position:0%
longer reference they go away when they
become<00:04:58.439><c> unreachable</c><00:04:58.830><c> they</c><00:04:59.310><c> go</c><00:04:59.490><c> away</c><00:05:00.349><c> on</c><00:05:01.349><c> the</c>

00:05:02.059 --> 00:05:02.069 align:start position:0%
become unreachable they go away on the
 

00:05:02.069 --> 00:05:04.279 align:start position:0%
become unreachable they go away on the
c++<00:05:02.759><c> side</c><00:05:03.060><c> we</c><00:05:03.479><c> have</c><00:05:03.659><c> a</c><00:05:03.689><c> manual</c><00:05:04.139><c> memory</c>

00:05:04.279 --> 00:05:04.289 align:start position:0%
c++ side we have a manual memory
 

00:05:04.289 --> 00:05:06.920 align:start position:0%
c++ side we have a manual memory
management<00:05:04.469><c> discipline</c><00:05:05.430><c> usually</c><00:05:05.930><c> which</c>

00:05:06.920 --> 00:05:06.930 align:start position:0%
management discipline usually which
 

00:05:06.930 --> 00:05:09.050 align:start position:0%
management discipline usually which
means<00:05:07.229><c> we</c><00:05:07.439><c> explicitly</c><00:05:07.800><c> need</c><00:05:08.310><c> to</c><00:05:08.460><c> call</c><00:05:08.699><c> some</c>

00:05:09.050 --> 00:05:09.060 align:start position:0%
means we explicitly need to call some
 

00:05:09.060 --> 00:05:11.330 align:start position:0%
means we explicitly need to call some
delete<00:05:09.419><c> functions</c><00:05:09.960><c> and</c><00:05:10.169><c> bolita</c><00:05:10.500><c> in</c><00:05:10.830><c> order</c><00:05:11.159><c> to</c>

00:05:11.330 --> 00:05:11.340 align:start position:0%
delete functions and bolita in order to
 

00:05:11.340 --> 00:05:12.920 align:start position:0%
delete functions and bolita in order to
deallocate<00:05:11.580><c> the</c><00:05:12.060><c> memory</c><00:05:12.360><c> when</c><00:05:12.599><c> it's</c><00:05:12.779><c> no</c>

00:05:12.920 --> 00:05:12.930 align:start position:0%
deallocate the memory when it's no
 

00:05:12.930 --> 00:05:16.040 align:start position:0%
deallocate the memory when it's no
longer<00:05:12.960><c> reachable</c><00:05:14.210><c> and</c><00:05:15.210><c> so</c><00:05:15.569><c> how</c><00:05:15.810><c> do</c><00:05:15.870><c> we</c>

00:05:16.040 --> 00:05:16.050 align:start position:0%
longer reachable and so how do we
 

00:05:16.050 --> 00:05:17.779 align:start position:0%
longer reachable and so how do we
actually<00:05:16.259><c> do</c><00:05:16.650><c> that</c><00:05:16.680><c> we</c><00:05:17.009><c> have</c><00:05:17.129><c> to</c><00:05:17.279><c> arrange</c><00:05:17.490><c> for</c>

00:05:17.779 --> 00:05:17.789 align:start position:0%
actually do that we have to arrange for
 

00:05:17.789 --> 00:05:19.820 align:start position:0%
actually do that we have to arrange for
somebody<00:05:18.060><c> to</c><00:05:18.389><c> call</c><00:05:18.629><c> the</c><00:05:18.779><c> delete</c><00:05:19.080><c> function</c><00:05:19.620><c> on</c>

00:05:19.820 --> 00:05:19.830 align:start position:0%
somebody to call the delete function on
 

00:05:19.830 --> 00:05:24.529 align:start position:0%
somebody to call the delete function on
the<00:05:19.979><c> c++</c><00:05:20.490><c> object</c><00:05:22.520><c> so</c><00:05:23.520><c> here's</c><00:05:23.759><c> the</c><00:05:23.909><c> traditional</c>

00:05:24.529 --> 00:05:24.539 align:start position:0%
the c++ object so here's the traditional
 

00:05:24.539 --> 00:05:26.390 align:start position:0%
the c++ object so here's the traditional
way<00:05:24.689><c> to</c><00:05:24.750><c> do</c><00:05:24.990><c> this</c><00:05:25.229><c> and</c><00:05:25.560><c> the</c><00:05:25.919><c> point</c><00:05:26.099><c> of</c><00:05:26.250><c> this</c>

00:05:26.390 --> 00:05:26.400 align:start position:0%
way to do this and the point of this
 

00:05:26.400 --> 00:05:28.939 align:start position:0%
way to do this and the point of this
talk<00:05:26.699><c> is</c><00:05:27.029><c> largely</c><00:05:27.539><c> to</c><00:05:28.080><c> talk</c><00:05:28.379><c> you</c><00:05:28.529><c> out</c><00:05:28.590><c> of</c><00:05:28.680><c> doing</c>

00:05:28.939 --> 00:05:28.949 align:start position:0%
talk is largely to talk you out of doing
 

00:05:28.949 --> 00:05:33.829 align:start position:0%
talk is largely to talk you out of doing
it<00:05:29.159><c> this</c><00:05:29.279><c> way</c><00:05:30.620><c> so</c><00:05:32.120><c> the</c><00:05:33.120><c> traditional</c><00:05:33.629><c> way</c><00:05:33.690><c> of</c>

00:05:33.829 --> 00:05:33.839 align:start position:0%
it this way so the traditional way of
 

00:05:33.839 --> 00:05:35.510 align:start position:0%
it this way so the traditional way of
doing<00:05:33.990><c> this</c><00:05:34.349><c> which</c><00:05:34.560><c> has</c><00:05:34.740><c> the</c><00:05:34.860><c> attraction</c>

00:05:35.510 --> 00:05:35.520 align:start position:0%
doing this which has the attraction
 

00:05:35.520 --> 00:05:37.550 align:start position:0%
doing this which has the attraction
admittedly<00:05:36.120><c> that</c><00:05:36.270><c> it's</c><00:05:36.629><c> relatively</c><00:05:37.020><c> simple</c>

00:05:37.550 --> 00:05:37.560 align:start position:0%
admittedly that it's relatively simple
 

00:05:37.560 --> 00:05:38.990 align:start position:0%
admittedly that it's relatively simple
to<00:05:37.680><c> write</c><00:05:37.800><c> the</c><00:05:37.979><c> code</c><00:05:38.219><c> compared</c><00:05:38.699><c> to</c><00:05:38.759><c> what</c><00:05:38.879><c> I'm</c>

00:05:38.990 --> 00:05:39.000 align:start position:0%
to write the code compared to what I'm
 

00:05:39.000 --> 00:05:41.839 align:start position:0%
to write the code compared to what I'm
going<00:05:39.210><c> to</c><00:05:39.300><c> show</c><00:05:39.449><c> you</c><00:05:39.479><c> is</c><00:05:39.870><c> that</c><00:05:40.469><c> in</c><00:05:41.250><c> addition</c><00:05:41.819><c> to</c>

00:05:41.839 --> 00:05:41.849 align:start position:0%
going to show you is that in addition to
 

00:05:41.849 --> 00:05:43.820 align:start position:0%
going to show you is that in addition to
things<00:05:42.360><c> like</c><00:05:42.599><c> the</c><00:05:42.750><c> native</c><00:05:42.990><c> multiply</c><00:05:43.409><c> method</c>

00:05:43.820 --> 00:05:43.830 align:start position:0%
things like the native multiply method
 

00:05:43.830 --> 00:05:46.040 align:start position:0%
things like the native multiply method
I'll<00:05:44.009><c> have</c><00:05:44.190><c> a</c><00:05:44.219><c> native</c><00:05:44.580><c> delete</c><00:05:44.909><c> method</c><00:05:45.539><c> to</c>

00:05:46.040 --> 00:05:46.050 align:start position:0%
I'll have a native delete method to
 

00:05:46.050 --> 00:05:49.369 align:start position:0%
I'll have a native delete method to
which<00:05:46.199><c> I</c><00:05:46.319><c> also</c><00:05:46.560><c> pass</c><00:05:46.919><c> a</c><00:05:46.949><c> job</c><00:05:47.370><c> along</c><00:05:47.930><c> and</c><00:05:48.930><c> then</c>

00:05:49.369 --> 00:05:49.379 align:start position:0%
which I also pass a job along and then
 

00:05:49.379 --> 00:05:51.019 align:start position:0%
which I also pass a job along and then
the<00:05:49.589><c> native</c><00:05:49.979><c> delete</c><00:05:50.279><c> method</c><00:05:50.669><c> will</c><00:05:50.819><c> again</c>

00:05:51.019 --> 00:05:51.029 align:start position:0%
the native delete method will again
 

00:05:51.029 --> 00:05:52.909 align:start position:0%
the native delete method will again
convert<00:05:51.389><c> that</c><00:05:51.569><c> to</c><00:05:51.779><c> the</c><00:05:51.810><c> C++</c><00:05:52.379><c> pointer</c><00:05:52.770><c> and</c>

00:05:52.909 --> 00:05:52.919 align:start position:0%
convert that to the C++ pointer and
 

00:05:52.919 --> 00:05:54.529 align:start position:0%
convert that to the C++ pointer and
invoke<00:05:53.250><c> delete</c><00:05:53.580><c> on</c><00:05:53.759><c> it</c><00:05:53.969><c> or</c><00:05:54.120><c> invoke</c><00:05:54.389><c> the</c>

00:05:54.529 --> 00:05:54.539 align:start position:0%
invoke delete on it or invoke the
 

00:05:54.539 --> 00:05:57.230 align:start position:0%
invoke delete on it or invoke the
appropriate<00:05:55.020><c> D</c><00:05:55.110><c> leader</c><00:05:55.319><c> on</c><00:05:55.589><c> it</c><00:05:55.740><c> and</c><00:05:55.979><c> I</c><00:05:56.969><c> will</c>

00:05:57.230 --> 00:05:57.240 align:start position:0%
appropriate D leader on it and I will
 

00:05:57.240 --> 00:06:01.369 align:start position:0%
appropriate D leader on it and I will
call<00:05:58.020><c> this</c><00:05:58.439><c> I</c><00:05:58.909><c> will</c><00:05:59.909><c> call</c><00:06:00.270><c> that</c><00:06:00.300><c> native</c><00:06:00.990><c> delete</c>

00:06:01.369 --> 00:06:01.379 align:start position:0%
call this I will call that native delete
 

00:06:01.379 --> 00:06:04.450 align:start position:0%
call this I will call that native delete
from<00:06:02.219><c> a</c><00:06:02.550><c> java</c><00:06:03.089><c> finalizer</c>

00:06:04.450 --> 00:06:04.460 align:start position:0%
from a java finalizer
 

00:06:04.460 --> 00:06:07.219 align:start position:0%
from a java finalizer
the<00:06:05.460><c> finalizer</c><00:06:06.060><c> is</c><00:06:06.389><c> invoked</c><00:06:06.750><c> more</c><00:06:07.050><c> or</c><00:06:07.110><c> less</c>

00:06:07.219 --> 00:06:07.229 align:start position:0%
the finalizer is invoked more or less
 

00:06:07.229 --> 00:06:09.649 align:start position:0%
the finalizer is invoked more or less
when<00:06:07.439><c> the</c><00:06:07.560><c> object</c><00:06:07.949><c> becomes</c><00:06:08.279><c> unreachable</c><00:06:08.659><c> so</c>

00:06:09.649 --> 00:06:09.659 align:start position:0%
when the object becomes unreachable so
 

00:06:09.659 --> 00:06:11.659 align:start position:0%
when the object becomes unreachable so
that<00:06:09.900><c> then</c><00:06:10.139><c> goes</c><00:06:10.379><c> ahead</c><00:06:10.589><c> and</c><00:06:10.889><c> invoke</c><00:06:11.099><c> the</c><00:06:11.339><c> ADT</c>

00:06:11.659 --> 00:06:11.669 align:start position:0%
that then goes ahead and invoke the ADT
 

00:06:11.669 --> 00:06:13.519 align:start position:0%
that then goes ahead and invoke the ADT
Leeton<00:06:11.879><c> correctly</c><00:06:12.449><c> allocates</c><00:06:12.870><c> the</c><00:06:12.960><c> c++</c>

00:06:13.519 --> 00:06:13.529 align:start position:0%
Leeton correctly allocates the c++
 

00:06:13.529 --> 00:06:16.129 align:start position:0%
Leeton correctly allocates the c++
object<00:06:13.710><c> as</c><00:06:14.159><c> well</c><00:06:14.370><c> I'll</c><00:06:15.000><c> show</c><00:06:15.689><c> you</c><00:06:15.750><c> some</c>

00:06:16.129 --> 00:06:16.139 align:start position:0%
object as well I'll show you some
 

00:06:16.139 --> 00:06:21.709 align:start position:0%
object as well I'll show you some
reasons<00:06:16.560><c> why</c><00:06:16.650><c> this</c><00:06:16.800><c> is</c><00:06:17.069><c> problematic</c><00:06:17.729><c> here</c><00:06:20.719><c> so</c>

00:06:21.709 --> 00:06:21.719 align:start position:0%
reasons why this is problematic here so
 

00:06:21.719 --> 00:06:23.839 align:start position:0%
reasons why this is problematic here so
I'll<00:06:21.870><c> go</c><00:06:22.050><c> through</c><00:06:22.349><c> a</c><00:06:22.409><c> long</c><00:06:22.620><c> list</c><00:06:22.919><c> of</c><00:06:23.129><c> finalizer</c>

00:06:23.839 --> 00:06:23.849 align:start position:0%
I'll go through a long list of finalizer
 

00:06:23.849 --> 00:06:26.749 align:start position:0%
I'll go through a long list of finalizer
of<00:06:24.000><c> finalizer</c><00:06:24.930><c> problems</c><00:06:25.580><c> finalizes</c><00:06:26.580><c> have</c><00:06:26.729><c> a</c>

00:06:26.749 --> 00:06:26.759 align:start position:0%
of finalizer problems finalizes have a
 

00:06:26.759 --> 00:06:29.059 align:start position:0%
of finalizer problems finalizes have a
deserved<00:06:27.180><c> reputation</c><00:06:27.629><c> for</c><00:06:28.229><c> being</c><00:06:28.349><c> hazardous</c>

00:06:29.059 --> 00:06:29.069 align:start position:0%
deserved reputation for being hazardous
 

00:06:29.069 --> 00:06:31.820 align:start position:0%
deserved reputation for being hazardous
and<00:06:29.339><c> I'll</c><00:06:29.849><c> only</c><00:06:30.060><c> confirm</c><00:06:30.599><c> that</c><00:06:30.839><c> here</c><00:06:31.259><c> but</c><00:06:31.710><c> I'll</c>

00:06:31.820 --> 00:06:31.830 align:start position:0%
and I'll only confirm that here but I'll
 

00:06:31.830 --> 00:06:34.339 align:start position:0%
and I'll only confirm that here but I'll
actually<00:06:32.069><c> emphasize</c><00:06:32.819><c> some</c><00:06:33.240><c> some</c><00:06:33.719><c> relatively</c>

00:06:34.339 --> 00:06:34.349 align:start position:0%
actually emphasize some some relatively
 

00:06:34.349 --> 00:06:35.930 align:start position:0%
actually emphasize some some relatively
lesser<00:06:34.560><c> known</c><00:06:34.860><c> problems</c><00:06:35.399><c> which</c><00:06:35.610><c> in</c><00:06:35.789><c> my</c>

00:06:35.930 --> 00:06:35.940 align:start position:0%
lesser known problems which in my
 

00:06:35.940 --> 00:06:37.140 align:start position:0%
lesser known problems which in my
opinion<00:06:36.089><c> actually</c><00:06:36.870><c> the</c>

00:06:37.140 --> 00:06:37.150 align:start position:0%
opinion actually the
 

00:06:37.150 --> 00:06:38.910 align:start position:0%
opinion actually the
serious<00:06:37.570><c> ones</c><00:06:37.810><c> to</c><00:06:37.990><c> try</c><00:06:38.170><c> to</c><00:06:38.230><c> get</c><00:06:38.440><c> to</c><00:06:38.590><c> get</c><00:06:38.740><c> come</c>

00:06:38.910 --> 00:06:38.920 align:start position:0%
serious ones to try to get to get come
 

00:06:38.920 --> 00:06:40.860 align:start position:0%
serious ones to try to get to get come
to<00:06:39.010><c> grips</c><00:06:39.130><c> with</c><00:06:39.490><c> and</c><00:06:39.700><c> then</c><00:06:40.240><c> I'll</c><00:06:40.360><c> show</c><00:06:40.570><c> you</c><00:06:40.630><c> how</c>

00:06:40.860 --> 00:06:40.870 align:start position:0%
to grips with and then I'll show you how
 

00:06:40.870 --> 00:06:44.670 align:start position:0%
to grips with and then I'll show you how
to<00:06:40.900><c> work</c><00:06:41.170><c> around</c><00:06:41.350><c> those</c><00:06:42.810><c> so</c><00:06:43.810><c> the</c><00:06:43.990><c> the</c><00:06:44.650><c> first</c>

00:06:44.670 --> 00:06:44.680 align:start position:0%
to work around those so the the first
 

00:06:44.680 --> 00:06:47.730 align:start position:0%
to work around those so the the first
problem<00:06:45.520><c> is</c><00:06:45.730><c> that</c><00:06:45.790><c> if</c><00:06:46.420><c> two</c><00:06:46.780><c> objects</c><00:06:47.350><c> become</c>

00:06:47.730 --> 00:06:47.740 align:start position:0%
problem is that if two objects become
 

00:06:47.740 --> 00:06:51.090 align:start position:0%
problem is that if two objects become
unreachable<00:06:48.270><c> the</c><00:06:49.270><c> finalizes</c><00:06:50.230><c> actually</c><00:06:50.890><c> run</c>

00:06:51.090 --> 00:06:51.100 align:start position:0%
unreachable the finalizes actually run
 

00:06:51.100 --> 00:06:53.760 align:start position:0%
unreachable the finalizes actually run
in<00:06:51.250><c> arbitrary</c><00:06:51.730><c> order</c><00:06:51.990><c> that</c><00:06:52.990><c> includes</c><00:06:53.530><c> the</c>

00:06:53.760 --> 00:06:53.770 align:start position:0%
in arbitrary order that includes the
 

00:06:53.770 --> 00:06:56.040 align:start position:0%
in arbitrary order that includes the
case<00:06:54.010><c> in</c><00:06:54.340><c> which</c><00:06:54.550><c> two</c><00:06:54.790><c> objects</c><00:06:55.210><c> that</c><00:06:55.270><c> point</c><00:06:55.690><c> to</c>

00:06:56.040 --> 00:06:56.050 align:start position:0%
case in which two objects that point to
 

00:06:56.050 --> 00:06:57.690 align:start position:0%
case in which two objects that point to
each<00:06:56.170><c> other</c><00:06:56.410><c> become</c><00:06:56.860><c> unreachable</c><00:06:57.190><c> at</c><00:06:57.580><c> the</c>

00:06:57.690 --> 00:06:57.700 align:start position:0%
each other become unreachable at the
 

00:06:57.700 --> 00:07:00.630 align:start position:0%
each other become unreachable at the
same<00:06:57.910><c> time</c><00:06:58.270><c> they</c><00:06:59.170><c> can</c><00:06:59.380><c> be</c><00:06:59.410><c> finalized</c><00:07:00.070><c> in</c><00:07:00.460><c> the</c>

00:07:00.630 --> 00:07:00.640 align:start position:0%
same time they can be finalized in the
 

00:07:00.640 --> 00:07:04.740 align:start position:0%
same time they can be finalized in the
wrong<00:07:00.850><c> order</c><00:07:01.270><c> meaning</c><00:07:02.230><c> that</c><00:07:02.650><c> the</c><00:07:03.210><c> the</c><00:07:04.210><c> second</c>

00:07:04.740 --> 00:07:04.750 align:start position:0%
wrong order meaning that the the second
 

00:07:04.750 --> 00:07:06.930 align:start position:0%
wrong order meaning that the the second
one<00:07:04.930><c> to</c><00:07:05.290><c> be</c><00:07:05.410><c> finalized</c><00:07:05.950><c> actually</c><00:07:06.700><c> try</c><00:07:06.910><c> to</c>

00:07:06.930 --> 00:07:06.940 align:start position:0%
one to be finalized actually try to
 

00:07:06.940 --> 00:07:08.610 align:start position:0%
one to be finalized actually try to
access<00:07:07.240><c> an</c><00:07:07.570><c> object</c><00:07:07.690><c> that's</c><00:07:08.080><c> already</c><00:07:08.350><c> been</c>

00:07:08.610 --> 00:07:08.620 align:start position:0%
access an object that's already been
 

00:07:08.620 --> 00:07:11.070 align:start position:0%
access an object that's already been
finalized<00:07:09.190><c> I'll</c><00:07:09.790><c> go</c><00:07:10.120><c> into</c><00:07:10.330><c> some</c><00:07:10.360><c> more</c><00:07:10.660><c> details</c>

00:07:11.070 --> 00:07:11.080 align:start position:0%
finalized I'll go into some more details
 

00:07:11.080 --> 00:07:14.130 align:start position:0%
finalized I'll go into some more details
there<00:07:11.940><c> so</c><00:07:12.940><c> as</c><00:07:13.060><c> a</c><00:07:13.120><c> result</c><00:07:13.330><c> of</c><00:07:13.630><c> that</c><00:07:13.750><c> what</c><00:07:13.990><c> can</c>

00:07:14.130 --> 00:07:14.140 align:start position:0%
there so as a result of that what can
 

00:07:14.140 --> 00:07:15.870 align:start position:0%
there so as a result of that what can
happen<00:07:14.350><c> is</c><00:07:14.650><c> that</c><00:07:14.680><c> you</c><00:07:14.920><c> can</c><00:07:15.100><c> get</c><00:07:15.460><c> dangling</c>

00:07:15.870 --> 00:07:15.880 align:start position:0%
happen is that you can get dangling
 

00:07:15.880 --> 00:07:20.000 align:start position:0%
happen is that you can get dangling
pointers<00:07:16.390><c> and</c><00:07:17.130><c> CD</c><00:07:18.130><c> allocated</c><00:07:18.700><c> C++</c><00:07:19.240><c> objects</c>

00:07:20.000 --> 00:07:20.010 align:start position:0%
pointers and CD allocated C++ objects
 

00:07:20.010 --> 00:07:22.860 align:start position:0%
pointers and CD allocated C++ objects
the<00:07:21.010><c> thing</c><00:07:21.190><c> to</c><00:07:21.280><c> keep</c><00:07:21.430><c> in</c><00:07:21.610><c> mind</c><00:07:21.670><c> here</c><00:07:22.270><c> is</c><00:07:22.330><c> that</c>

00:07:22.860 --> 00:07:22.870 align:start position:0%
the thing to keep in mind here is that
 

00:07:22.870 --> 00:07:25.500 align:start position:0%
the thing to keep in mind here is that
as<00:07:23.080><c> a</c><00:07:23.560><c> result</c><00:07:24.130><c> of</c><00:07:24.340><c> dangling</c><00:07:24.760><c> pointers</c><00:07:25.210><c> in</c><00:07:25.390><c> this</c>

00:07:25.500 --> 00:07:25.510 align:start position:0%
as a result of dangling pointers in this
 

00:07:25.510 --> 00:07:28.260 align:start position:0%
as a result of dangling pointers in this
environment<00:07:25.840><c> is</c><00:07:26.410><c> that</c><00:07:26.710><c> you</c><00:07:26.980><c> and</c><00:07:27.550><c> very</c><00:07:28.030><c> often</c>

00:07:28.260 --> 00:07:28.270 align:start position:0%
environment is that you and very often
 

00:07:28.270 --> 00:07:32.790 align:start position:0%
environment is that you and very often
end<00:07:28.600><c> up</c><00:07:28.690><c> corrupting</c><00:07:29.260><c> the</c><00:07:29.380><c> c++</c><00:07:30.010><c> c</c><00:07:31.230><c> but</c><00:07:32.230><c> what's</c>

00:07:32.790 --> 00:07:32.800 align:start position:0%
end up corrupting the c++ c but what's
 

00:07:32.800 --> 00:07:36.120 align:start position:0%
end up corrupting the c++ c but what's
the<00:07:32.980><c> math</c><00:07:33.190><c> the</c><00:07:33.990><c> the</c><00:07:34.990><c> java</c><00:07:35.380><c> language</c><00:07:35.500><c> runtime</c>

00:07:36.120 --> 00:07:36.130 align:start position:0%
the math the the java language runtime
 

00:07:36.130 --> 00:07:39.570 align:start position:0%
the math the the java language runtime
actually<00:07:37.120><c> relies</c><00:07:37.510><c> on</c><00:07:37.540><c> the</c><00:07:38.080><c> c++</c><00:07:38.890><c> heap</c><00:07:39.100><c> as</c><00:07:39.310><c> well</c>

00:07:39.570 --> 00:07:39.580 align:start position:0%
actually relies on the c++ heap as well
 

00:07:39.580 --> 00:07:42.390 align:start position:0%
actually relies on the c++ heap as well
so<00:07:40.360><c> what</c><00:07:40.540><c> if</c><00:07:40.870><c> when</c><00:07:41.050><c> this</c><00:07:41.200><c> happens</c><00:07:41.650><c> often</c><00:07:42.010><c> what</c>

00:07:42.390 --> 00:07:42.400 align:start position:0%
so what if when this happens often what
 

00:07:42.400 --> 00:07:45.030 align:start position:0%
so what if when this happens often what
you<00:07:42.550><c> end</c><00:07:42.700><c> up</c><00:07:42.820><c> with</c><00:07:43.060><c> is</c><00:07:43.240><c> also</c><00:07:43.630><c> a</c><00:07:43.740><c> compacted</c><00:07:44.740><c> Java</c>

00:07:45.030 --> 00:07:45.040 align:start position:0%
you end up with is also a compacted Java
 

00:07:45.040 --> 00:07:47.760 align:start position:0%
you end up with is also a compacted Java
Runtime<00:07:45.610><c> and</c><00:07:45.880><c> you</c><00:07:46.570><c> may</c><00:07:46.720><c> end</c><00:07:46.870><c> up</c><00:07:46.960><c> seeing</c><00:07:47.020><c> caches</c>

00:07:47.760 --> 00:07:47.770 align:start position:0%
Runtime and you may end up seeing caches
 

00:07:47.770 --> 00:07:49.350 align:start position:0%
Runtime and you may end up seeing caches
that<00:07:47.800><c> actually</c><00:07:48.280><c> look</c><00:07:48.460><c> like</c><00:07:48.490><c> Java</c><00:07:49.000><c> garbage</c>

00:07:49.350 --> 00:07:49.360 align:start position:0%
that actually look like Java garbage
 

00:07:49.360 --> 00:07:56.130 align:start position:0%
that actually look like Java garbage
collector<00:07:49.750><c> caches</c><00:07:50.200><c> or</c><00:07:50.350><c> the</c><00:07:50.440><c> like</c><00:07:54.480><c> so</c><00:07:55.480><c> here's</c>

00:07:56.130 --> 00:07:56.140 align:start position:0%
collector caches or the like so here's
 

00:07:56.140 --> 00:08:00.390 align:start position:0%
collector caches or the like so here's
to<00:07:56.680><c> illustrate</c><00:07:57.630><c> how</c><00:07:58.630><c> this</c><00:07:58.810><c> can</c><00:07:59.080><c> go</c><00:07:59.200><c> on</c><00:07:59.400><c> here's</c>

00:08:00.390 --> 00:08:00.400 align:start position:0%
to illustrate how this can go on here's
 

00:08:00.400 --> 00:08:02.580 align:start position:0%
to illustrate how this can go on here's
a<00:08:00.430><c> sample</c><00:08:01.240><c> client</c><00:08:01.630><c> application</c><00:08:02.410><c> that</c>

00:08:02.580 --> 00:08:02.590 align:start position:0%
a sample client application that
 

00:08:02.590 --> 00:08:05.100 align:start position:0%
a sample client application that
actually<00:08:02.740><c> uses</c><00:08:03.250><c> the</c><00:08:03.640><c> binary</c><00:08:04.060><c> poly</c><00:08:04.360><c> class</c><00:08:04.750><c> that</c>

00:08:05.100 --> 00:08:05.110 align:start position:0%
actually uses the binary poly class that
 

00:08:05.110 --> 00:08:08.790 align:start position:0%
actually uses the binary poly class that
we<00:08:05.230><c> just</c><00:08:05.410><c> talked</c><00:08:05.680><c> about</c><00:08:06.330><c> and</c><00:08:07.330><c> this</c><00:08:07.630><c> is</c><00:08:07.840><c> this</c><00:08:08.560><c> in</c>

00:08:08.790 --> 00:08:08.800 align:start position:0%
we just talked about and this is this in
 

00:08:08.800 --> 00:08:10.920 align:start position:0%
we just talked about and this is this in
combination<00:08:09.550><c> with</c><00:08:09.760><c> the</c><00:08:09.910><c> previous</c><00:08:10.330><c> class</c><00:08:10.600><c> will</c>

00:08:10.920 --> 00:08:10.930 align:start position:0%
combination with the previous class will
 

00:08:10.930 --> 00:08:13.170 align:start position:0%
combination with the previous class will
definitely<00:08:11.530><c> break</c><00:08:11.770><c> so</c><00:08:12.100><c> definitely</c><00:08:12.670><c> do</c><00:08:12.820><c> not</c><00:08:12.940><c> do</c>

00:08:13.170 --> 00:08:13.180 align:start position:0%
definitely break so definitely do not do
 

00:08:13.180 --> 00:08:16.080 align:start position:0%
definitely break so definitely do not do
this<00:08:13.740><c> so</c><00:08:14.740><c> what</c><00:08:14.890><c> this</c><00:08:15.070><c> is</c><00:08:15.250><c> doing</c><00:08:15.640><c> in</c><00:08:15.880><c> its</c>

00:08:16.080 --> 00:08:16.090 align:start position:0%
this so what this is doing in its
 

00:08:16.090 --> 00:08:18.150 align:start position:0%
this so what this is doing in its
finalized<00:08:16.630><c> method</c><00:08:17.170><c> it's</c><00:08:17.680><c> just</c><00:08:17.950><c> doing</c>

00:08:18.150 --> 00:08:18.160 align:start position:0%
finalized method it's just doing
 

00:08:18.160 --> 00:08:21.690 align:start position:0%
finalized method it's just doing
something<00:08:18.310><c> innocuous</c><00:08:19.030><c> on</c><00:08:19.860><c> my</c><00:08:20.860><c> binary</c><00:08:21.160><c> poly</c>

00:08:21.690 --> 00:08:21.700 align:start position:0%
something innocuous on my binary poly
 

00:08:21.700 --> 00:08:23.820 align:start position:0%
something innocuous on my binary poly
which<00:08:22.090><c> is</c><00:08:22.270><c> this</c><00:08:22.480><c> field</c><00:08:22.840><c> that</c><00:08:23.110><c> happens</c><00:08:23.500><c> to</c><00:08:23.650><c> hold</c>

00:08:23.820 --> 00:08:23.830 align:start position:0%
which is this field that happens to hold
 

00:08:23.830 --> 00:08:25.950 align:start position:0%
which is this field that happens to hold
a<00:08:23.920><c> pointer</c><00:08:24.220><c> to</c><00:08:24.250><c> the</c><00:08:24.400><c> binary</c><00:08:24.610><c> poly</c><00:08:25.060><c> now</c><00:08:25.900><c> the</c>

00:08:25.950 --> 00:08:25.960 align:start position:0%
a pointer to the binary poly now the
 

00:08:25.960 --> 00:08:27.960 align:start position:0%
a pointer to the binary poly now the
problem<00:08:26.500><c> here</c><00:08:26.530><c> is</c><00:08:26.830><c> that</c><00:08:27.040><c> it's</c><00:08:27.610><c> entirely</c>

00:08:27.960 --> 00:08:27.970 align:start position:0%
problem here is that it's entirely
 

00:08:27.970 --> 00:08:31.560 align:start position:0%
problem here is that it's entirely
possible<00:08:28.390><c> that</c><00:08:28.780><c> the</c><00:08:29.160><c> my</c><00:08:30.160><c> binary</c><00:08:30.460><c> poly</c><00:08:30.940><c> object</c>

00:08:31.560 --> 00:08:31.570 align:start position:0%
possible that the my binary poly object
 

00:08:31.570 --> 00:08:35.790 align:start position:0%
possible that the my binary poly object
actually<00:08:32.230><c> gets</c><00:08:32.710><c> finalized</c><00:08:33.280><c> first</c><00:08:34.320><c> so</c><00:08:35.320><c> what</c>

00:08:35.790 --> 00:08:35.800 align:start position:0%
actually gets finalized first so what
 

00:08:35.800 --> 00:08:38.010 align:start position:0%
actually gets finalized first so what
you're<00:08:35.980><c> accessing</c><00:08:36.430><c> here</c><00:08:37.000><c> is</c><00:08:37.090><c> in</c><00:08:37.330><c> my</c><00:08:37.540><c> binary</c>

00:08:38.010 --> 00:08:38.020 align:start position:0%
you're accessing here is in my binary
 

00:08:38.020 --> 00:08:40.590 align:start position:0%
you're accessing here is in my binary
poly<00:08:38.560><c> which</c><00:08:39.370><c> actually</c><00:08:39.880><c> has</c><00:08:40.090><c> already</c><00:08:40.450><c> been</c>

00:08:40.590 --> 00:08:40.600 align:start position:0%
poly which actually has already been
 

00:08:40.600 --> 00:08:44.070 align:start position:0%
poly which actually has already been
finalized<00:08:41.230><c> so</c><00:08:42.190><c> by</c><00:08:42.400><c> the</c><00:08:42.460><c> time</c><00:08:42.820><c> you</c><00:08:43.120><c> you</c><00:08:43.630><c> access</c>

00:08:44.070 --> 00:08:44.080 align:start position:0%
finalized so by the time you you access
 

00:08:44.080 --> 00:08:47.010 align:start position:0%
finalized so by the time you you access
it<00:08:44.290><c> the</c><00:08:44.470><c> pointer</c><00:08:44.920><c> the</c><00:08:45.310><c> c++</c><00:08:46.030><c> object</c><00:08:46.240><c> underlying</c>

00:08:47.010 --> 00:08:47.020 align:start position:0%
it the pointer the c++ object underlying
 

00:08:47.020 --> 00:08:49.500 align:start position:0%
it the pointer the c++ object underlying
it<00:08:47.230><c> will</c><00:08:47.380><c> have</c><00:08:47.500><c> been</c><00:08:47.680><c> de-allocated</c><00:08:48.310><c> and</c><00:08:48.670><c> the</c>

00:08:49.500 --> 00:08:49.510 align:start position:0%
it will have been de-allocated and the
 

00:08:49.510 --> 00:08:50.850 align:start position:0%
it will have been de-allocated and the
native<00:08:49.840><c> pointer</c><00:08:50.290><c> that</c><00:08:50.410><c> you're</c><00:08:50.620><c> using</c>

00:08:50.850 --> 00:08:50.860 align:start position:0%
native pointer that you're using
 

00:08:50.860 --> 00:08:54.720 align:start position:0%
native pointer that you're using
actually<00:08:51.550><c> points</c><00:08:51.910><c> to</c><00:08:52.030><c> nowhere</c><00:08:53.370><c> so</c><00:08:54.370><c> that's</c><00:08:54.610><c> a</c>

00:08:54.720 --> 00:08:54.730 align:start position:0%
actually points to nowhere so that's a
 

00:08:54.730 --> 00:08:57.030 align:start position:0%
actually points to nowhere so that's a
bad<00:08:54.940><c> thing</c>

00:08:57.030 --> 00:08:57.040 align:start position:0%
 
 

00:08:57.040 --> 00:08:58.950 align:start position:0%
 
there's<00:08:57.910><c> the</c><00:08:58.030><c> second</c><00:08:58.420><c> problem</c><00:08:58.660><c> with</c>

00:08:58.950 --> 00:08:58.960 align:start position:0%
there's the second problem with
 

00:08:58.960 --> 00:09:01.320 align:start position:0%
there's the second problem with
finalizes<00:08:59.710><c> which</c><00:08:59.980><c> is</c><00:09:00.130><c> actually</c><00:09:00.640><c> it</c><00:09:00.910><c> turns</c><00:09:01.150><c> out</c>

00:09:01.320 --> 00:09:01.330 align:start position:0%
finalizes which is actually it turns out
 

00:09:01.330 --> 00:09:04.140 align:start position:0%
finalizes which is actually it turns out
to<00:09:01.480><c> be</c><00:09:01.510><c> more</c><00:09:01.840><c> complicated</c><00:09:02.200><c> to</c><00:09:02.590><c> work</c><00:09:02.620><c> around</c><00:09:03.150><c> in</c>

00:09:04.140 --> 00:09:04.150 align:start position:0%
to be more complicated to work around in
 

00:09:04.150 --> 00:09:06.420 align:start position:0%
to be more complicated to work around in
it's<00:09:04.690><c> less</c><00:09:04.900><c> employ</c><00:09:05.260><c> less</c><00:09:05.710><c> important</c><00:09:06.310><c> on</c>

00:09:06.420 --> 00:09:06.430 align:start position:0%
it's less employ less important on
 

00:09:06.430 --> 00:09:09.300 align:start position:0%
it's less employ less important on
Android<00:09:06.900><c> but</c><00:09:07.900><c> it's</c><00:09:08.110><c> generally</c><00:09:08.830><c> important</c>

00:09:09.300 --> 00:09:09.310 align:start position:0%
Android but it's generally important
 

00:09:09.310 --> 00:09:12.690 align:start position:0%
Android but it's generally important
when<00:09:09.490><c> writing</c><00:09:09.820><c> java</c><00:09:10.060><c> language</c><00:09:10.240><c> code</c><00:09:11.520><c> so</c><00:09:12.520><c> by</c>

00:09:12.690 --> 00:09:12.700 align:start position:0%
when writing java language code so by
 

00:09:12.700 --> 00:09:14.880 align:start position:0%
when writing java language code so by
Java<00:09:13.060><c> language</c><00:09:13.420><c> rules</c><00:09:13.990><c> and</c><00:09:14.470><c> this</c><00:09:14.590><c> is</c><00:09:14.740><c> not</c>

00:09:14.880 --> 00:09:14.890 align:start position:0%
Java language rules and this is not
 

00:09:14.890 --> 00:09:16.890 align:start position:0%
Java language rules and this is not
currently<00:09:15.340><c> -</c><00:09:15.670><c> on</c><00:09:15.850><c> Android</c><00:09:16.240><c> and</c><00:09:16.390><c> not</c><00:09:16.540><c> currently</c>

00:09:16.890 --> 00:09:16.900 align:start position:0%
currently - on Android and not currently
 

00:09:16.900 --> 00:09:18.830 align:start position:0%
currently - on Android and not currently
believed<00:09:17.200><c> to</c><00:09:17.350><c> be</c><00:09:17.440><c> true</c><00:09:17.650><c> on</c><00:09:17.770><c> Android</c><00:09:18.190><c> and</c>

00:09:18.830 --> 00:09:18.840 align:start position:0%
believed to be true on Android and
 

00:09:18.840 --> 00:09:21.840 align:start position:0%
believed to be true on Android and
object<00:09:19.840><c> X</c><00:09:20.080><c> is</c><00:09:20.320><c> finalized</c><00:09:20.950><c> it</c><00:09:21.190><c> may</c><00:09:21.340><c> actually</c><00:09:21.550><c> be</c>

00:09:21.840 --> 00:09:21.850 align:start position:0%
object X is finalized it may actually be
 

00:09:21.850 --> 00:09:24.090 align:start position:0%
object X is finalized it may actually be
invoked<00:09:22.240><c> while</c><00:09:22.510><c> one</c><00:09:22.750><c> of</c><00:09:22.780><c> X's</c><00:09:23.320><c> methods</c><00:09:23.770><c> is</c>

00:09:24.090 --> 00:09:24.100 align:start position:0%
invoked while one of X's methods is
 

00:09:24.100 --> 00:09:27.180 align:start position:0%
invoked while one of X's methods is
still<00:09:24.340><c> running</c><00:09:24.780><c> so</c><00:09:25.780><c> while</c><00:09:26.080><c> while</c><00:09:26.710><c> I'm</c><00:09:26.920><c> still</c>

00:09:27.180 --> 00:09:27.190 align:start position:0%
still running so while while I'm still
 

00:09:27.190 --> 00:09:28.770 align:start position:0%
still running so while while I'm still
running<00:09:27.520><c> a</c><00:09:27.610><c> method</c><00:09:27.910><c> on</c><00:09:28.000><c> that</c><00:09:28.060><c> object</c><00:09:28.240><c> that</c>

00:09:28.770 --> 00:09:28.780 align:start position:0%
running a method on that object that
 

00:09:28.780 --> 00:09:31.980 align:start position:0%
running a method on that object that
object<00:09:28.990><c> may</c><00:09:29.320><c> end</c><00:09:29.500><c> up</c><00:09:29.560><c> getting</c><00:09:29.920><c> finalized</c><00:09:30.990><c> this</c>

00:09:31.980 --> 00:09:31.990 align:start position:0%
object may end up getting finalized this
 

00:09:31.990 --> 00:09:33.600 align:start position:0%
object may end up getting finalized this
can<00:09:32.350><c> result</c><00:09:32.710><c> in</c><00:09:32.980><c> the</c><00:09:33.010><c> same</c><00:09:33.130><c> sort</c><00:09:33.550><c> of</c>

00:09:33.600 --> 00:09:33.610 align:start position:0%
can result in the same sort of
 

00:09:33.610 --> 00:09:35.490 align:start position:0%
can result in the same sort of
phenomenon<00:09:34.150><c> I</c><00:09:34.240><c> get</c><00:09:34.480><c> native</c><00:09:34.810><c> heat</c><00:09:34.960><c> corruption</c>

00:09:35.490 --> 00:09:35.500 align:start position:0%
phenomenon I get native heat corruption
 

00:09:35.500 --> 00:09:37.830 align:start position:0%
phenomenon I get native heat corruption
as<00:09:35.650><c> and</c><00:09:35.920><c> as</c><00:09:36.040><c> a</c><00:09:36.070><c> result</c><00:09:36.550><c> possibly</c><00:09:37.120><c> Java</c><00:09:37.360><c> Runtime</c>

00:09:37.830 --> 00:09:37.840 align:start position:0%
as and as a result possibly Java Runtime
 

00:09:37.840 --> 00:09:39.000 align:start position:0%
as and as a result possibly Java Runtime
corruption

00:09:39.000 --> 00:09:39.010 align:start position:0%
corruption
 

00:09:39.010 --> 00:09:43.200 align:start position:0%
corruption
let<00:09:39.640><c> me</c><00:09:39.760><c> explain</c><00:09:40.180><c> why</c><00:09:40.540><c> that</c><00:09:40.750><c> happens</c><00:09:42.210><c> so</c>

00:09:43.200 --> 00:09:43.210 align:start position:0%
let me explain why that happens so
 

00:09:43.210 --> 00:09:45.090 align:start position:0%
let me explain why that happens so
here's<00:09:43.510><c> sort</c><00:09:43.660><c> of</c><00:09:43.750><c> again</c><00:09:44.050><c> an</c><00:09:44.200><c> excerpt</c><00:09:44.650><c> from</c><00:09:44.890><c> the</c>

00:09:45.090 --> 00:09:45.100 align:start position:0%
here's sort of again an excerpt from the
 

00:09:45.100 --> 00:09:49.050 align:start position:0%
here's sort of again an excerpt from the
binary<00:09:45.460><c> poly</c><00:09:45.790><c> class</c><00:09:46.260><c> I</c><00:09:47.260><c> have</c><00:09:48.010><c> I</c><00:09:48.250><c> used</c><00:09:48.730><c> native</c>

00:09:49.050 --> 00:09:49.060 align:start position:0%
binary poly class I have I used native
 

00:09:49.060 --> 00:09:51.480 align:start position:0%
binary poly class I have I used native
mobile<00:09:49.270><c> I</c><00:09:49.840><c> use</c><00:09:50.020><c> multiply</c><00:09:50.560><c> before</c><00:09:50.620><c> I'll</c><00:09:51.160><c> use</c><00:09:51.340><c> it</c>

00:09:51.480 --> 00:09:51.490 align:start position:0%
mobile I use multiply before I'll use it
 

00:09:51.490 --> 00:09:53.190 align:start position:0%
mobile I use multiply before I'll use it
again<00:09:51.580><c> here's</c><00:09:52.030><c> I</c><00:09:52.210><c> have</c><00:09:52.330><c> this</c><00:09:52.420><c> native</c><00:09:52.780><c> multiply</c>

00:09:53.190 --> 00:09:53.200 align:start position:0%
again here's I have this native multiply
 

00:09:53.200 --> 00:09:57.030 align:start position:0%
again here's I have this native multiply
method<00:09:53.650><c> that</c><00:09:54.100><c> gets</c><00:09:54.280><c> called</c><00:09:54.430><c> by</c><00:09:54.790><c> multiply</c><00:09:56.040><c> if</c>

00:09:57.030 --> 00:09:57.040 align:start position:0%
method that gets called by multiply if
 

00:09:57.040 --> 00:09:58.920 align:start position:0%
method that gets called by multiply if
you<00:09:57.490><c> look</c><00:09:57.700><c> at</c><00:09:57.850><c> what</c><00:09:58.030><c> this</c><00:09:58.180><c> actually</c><00:09:58.450><c> gets</c>

00:09:58.920 --> 00:09:58.930 align:start position:0%
you look at what this actually gets
 

00:09:58.930 --> 00:10:00.960 align:start position:0%
you look at what this actually gets
compiled<00:09:59.380><c> to</c><00:09:59.710><c> and</c><00:09:59.980><c> this</c><00:10:00.100><c> isn't</c><00:10:00.310><c> real</c><00:10:00.610><c> this</c><00:10:00.820><c> is</c>

00:10:00.960 --> 00:10:00.970 align:start position:0%
compiled to and this isn't real this is
 

00:10:00.970 --> 00:10:04.010 align:start position:0%
compiled to and this isn't real this is
sort<00:10:01.150><c> of</c><00:10:01.180><c> pseudocode</c>

00:10:04.010 --> 00:10:04.020 align:start position:0%
 
 

00:10:04.020 --> 00:10:07.890 align:start position:0%
 
pseudocode<00:10:05.020><c> it</c><00:10:05.380><c> gets</c><00:10:05.560><c> compiled</c><00:10:05.950><c> to</c><00:10:06.900><c> look</c>

00:10:07.890 --> 00:10:07.900 align:start position:0%
pseudocode it gets compiled to look
 

00:10:07.900 --> 00:10:12.570 align:start position:0%
pseudocode it gets compiled to look
something<00:10:08.380><c> like</c><00:10:08.410><c> this</c><00:10:10.440><c> so</c><00:10:11.440><c> what</c><00:10:11.710><c> happens</c><00:10:12.220><c> when</c>

00:10:12.570 --> 00:10:12.580 align:start position:0%
something like this so what happens when
 

00:10:12.580 --> 00:10:16.080 align:start position:0%
something like this so what happens when
I<00:10:12.610><c> want</c><00:10:12.880><c> to</c><00:10:12.970><c> multiply</c><00:10:13.420><c> to</c><00:10:13.480><c> two</c><00:10:14.410><c> values</c><00:10:14.980><c> I</c><00:10:15.310><c> first</c>

00:10:16.080 --> 00:10:16.090 align:start position:0%
I want to multiply to two values I first
 

00:10:16.090 --> 00:10:19.350 align:start position:0%
I want to multiply to two values I first
end<00:10:16.330><c> up</c><00:10:16.450><c> leaving</c><00:10:17.110><c> the</c><00:10:17.350><c> the</c><00:10:18.340><c> native</c><00:10:18.910><c> handles</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
end up leaving the the native handles
 

00:10:19.360 --> 00:10:21.690 align:start position:0%
end up leaving the the native handles
from<00:10:19.720><c> both</c><00:10:19.900><c> of</c><00:10:19.930><c> them</c><00:10:20.230><c> in</c><00:10:20.710><c> this</c><00:10:20.920><c> case</c><00:10:21.160><c> from</c><00:10:21.400><c> this</c>

00:10:21.690 --> 00:10:21.700 align:start position:0%
from both of them in this case from this
 

00:10:21.700 --> 00:10:24.390 align:start position:0%
from both of them in this case from this
and<00:10:22.030><c> I</c><00:10:22.090><c> may</c><00:10:22.240><c> put</c><00:10:22.570><c> this</c><00:10:23.110><c> in</c><00:10:23.350><c> here</c><00:10:23.530><c> explicitly</c><00:10:23.890><c> to</c>

00:10:24.390 --> 00:10:24.400 align:start position:0%
and I may put this in here explicitly to
 

00:10:24.400 --> 00:10:25.350 align:start position:0%
and I may put this in here explicitly to
make<00:10:24.550><c> that</c><00:10:24.730><c> clear</c>

00:10:25.350 --> 00:10:25.360 align:start position:0%
make that clear
 

00:10:25.360 --> 00:10:27.540 align:start position:0%
make that clear
so<00:10:25.900><c> I</c><00:10:25.930><c> repeat</c><00:10:26.140><c> and</c><00:10:26.590><c> native</c><00:10:26.890><c> handle</c><00:10:27.190><c> from</c><00:10:27.370><c> this</c>

00:10:27.540 --> 00:10:27.550 align:start position:0%
so I repeat and native handle from this
 

00:10:27.550 --> 00:10:29.520 align:start position:0%
so I repeat and native handle from this
and<00:10:27.820><c> I</c><00:10:27.880><c> repeat</c><00:10:28.270><c> and</c><00:10:28.510><c> they</c><00:10:28.660><c> don't</c><00:10:28.870><c> handle</c><00:10:29.350><c> from</c>

00:10:29.520 --> 00:10:29.530 align:start position:0%
and I repeat and they don't handle from
 

00:10:29.530 --> 00:10:31.830 align:start position:0%
and I repeat and they don't handle from
other<00:10:29.800><c> then</c><00:10:30.550><c> I</c><00:10:30.700><c> might</c><00:10:30.910><c> allocate</c><00:10:31.210><c> the</c><00:10:31.660><c> new</c>

00:10:31.830 --> 00:10:31.840 align:start position:0%
other then I might allocate the new
 

00:10:31.840 --> 00:10:36.180 align:start position:0%
other then I might allocate the new
binary<00:10:32.230><c> poly</c><00:10:32.680><c> object</c><00:10:33.810><c> and</c><00:10:34.810><c> then</c><00:10:35.320><c> I</c><00:10:35.560><c> will</c><00:10:36.040><c> go</c>

00:10:36.180 --> 00:10:36.190 align:start position:0%
binary poly object and then I will go
 

00:10:36.190 --> 00:10:39.480 align:start position:0%
binary poly object and then I will go
ahead<00:10:36.310><c> and</c><00:10:36.610><c> call</c><00:10:36.790><c> the</c><00:10:36.970><c> native</c><00:10:37.270><c> method</c><00:10:38.370><c> so</c><00:10:39.370><c> the</c>

00:10:39.480 --> 00:10:39.490 align:start position:0%
ahead and call the native method so the
 

00:10:39.490 --> 00:10:42.330 align:start position:0%
ahead and call the native method so the
problem<00:10:40.030><c> with</c><00:10:40.270><c> this</c><00:10:40.480><c> is</c><00:10:40.750><c> if</c><00:10:41.140><c> we</c><00:10:41.440><c> look</c><00:10:41.710><c> at</c><00:10:41.920><c> the</c>

00:10:42.330 --> 00:10:42.340 align:start position:0%
problem with this is if we look at the
 

00:10:42.340 --> 00:10:45.870 align:start position:0%
problem with this is if we look at the
uses<00:10:42.940><c> of</c><00:10:42.970><c> the</c><00:10:43.420><c> actual</c><00:10:43.840><c> Java</c><00:10:44.140><c> objects</c><00:10:45.010><c> the</c><00:10:45.580><c> last</c>

00:10:45.870 --> 00:10:45.880 align:start position:0%
uses of the actual Java objects the last
 

00:10:45.880 --> 00:10:48.900 align:start position:0%
uses of the actual Java objects the last
use<00:10:46.420><c> of</c><00:10:46.450><c> this</c><00:10:47.080><c> and</c><00:10:47.380><c> other</c><00:10:47.590><c> actually</c><00:10:48.460><c> happened</c>

00:10:48.900 --> 00:10:48.910 align:start position:0%
use of this and other actually happened
 

00:10:48.910 --> 00:10:53.130 align:start position:0%
use of this and other actually happened
before<00:10:49.350><c> allocate</c><00:10:50.350><c> the</c><00:10:50.500><c> new</c><00:10:50.650><c> binary</c><00:10:50.890><c> poly</c><00:10:52.140><c> at</c>

00:10:53.130 --> 00:10:53.140 align:start position:0%
before allocate the new binary poly at
 

00:10:53.140 --> 00:10:56.820 align:start position:0%
before allocate the new binary poly at
that<00:10:53.500><c> point</c><00:10:54.540><c> from</c><00:10:55.540><c> that</c><00:10:55.720><c> point</c><00:10:56.020><c> on</c><00:10:56.260><c> this</c>

00:10:56.820 --> 00:10:56.830 align:start position:0%
that point from that point on this
 

00:10:56.830 --> 00:10:59.040 align:start position:0%
that point from that point on this
method<00:10:57.310><c> doesn't</c><00:10:57.580><c> use</c><00:10:57.940><c> either</c><00:10:58.300><c> this</c><00:10:58.630><c> or</c><00:10:58.840><c> other</c>

00:10:59.040 --> 00:10:59.050 align:start position:0%
method doesn't use either this or other
 

00:10:59.050 --> 00:10:59.840 align:start position:0%
method doesn't use either this or other
anymore

00:10:59.840 --> 00:10:59.850 align:start position:0%
anymore
 

00:10:59.850 --> 00:11:02.000 align:start position:0%
anymore
and<00:11:00.000><c> it</c><00:11:00.630><c> may</c><00:11:00.780><c> so</c><00:11:01.020><c> happen</c><00:11:01.050><c> that</c><00:11:01.470><c> this</c><00:11:01.740><c> is</c><00:11:01.890><c> in</c>

00:11:02.000 --> 00:11:02.010 align:start position:0%
and it may so happen that this is in
 

00:11:02.010 --> 00:11:04.790 align:start position:0%
and it may so happen that this is in
fact<00:11:02.280><c> the</c><00:11:02.490><c> last</c><00:11:02.760><c> call</c><00:11:03.210><c> on</c><00:11:03.480><c> those</c><00:11:03.750><c> so</c><00:11:04.500><c> this</c><00:11:04.620><c> is</c>

00:11:04.790 --> 00:11:04.800 align:start position:0%
fact the last call on those so this is
 

00:11:04.800 --> 00:11:06.680 align:start position:0%
fact the last call on those so this is
in<00:11:04.950><c> fact</c><00:11:04.980><c> the</c><00:11:05.370><c> point</c><00:11:05.580><c> at</c><00:11:05.820><c> which</c><00:11:05.970><c> those</c><00:11:06.240><c> become</c>

00:11:06.680 --> 00:11:06.690 align:start position:0%
in fact the point at which those become
 

00:11:06.690 --> 00:11:08.330 align:start position:0%
in fact the point at which those become
garbage<00:11:07.200><c> and</c><00:11:07.440><c> the</c><00:11:07.560><c> garbage</c><00:11:07.860><c> collected</c>

00:11:08.330 --> 00:11:08.340 align:start position:0%
garbage and the garbage collected
 

00:11:08.340 --> 00:11:10.100 align:start position:0%
garbage and the garbage collected
notices<00:11:08.850><c> that</c><00:11:09.030><c> they're</c><00:11:09.210><c> no</c><00:11:09.300><c> longer</c><00:11:09.330><c> teachable</c>

00:11:10.100 --> 00:11:10.110 align:start position:0%
notices that they're no longer teachable
 

00:11:10.110 --> 00:11:14.120 align:start position:0%
notices that they're no longer teachable
so<00:11:10.980><c> what</c><00:11:11.160><c> can</c><00:11:11.340><c> happen</c><00:11:11.580><c> at</c><00:11:11.910><c> that</c><00:11:12.090><c> point</c><00:11:12.450><c> if</c><00:11:13.130><c> the</c>

00:11:14.120 --> 00:11:14.130 align:start position:0%
so what can happen at that point if the
 

00:11:14.130 --> 00:11:18.770 align:start position:0%
so what can happen at that point if the
if<00:11:14.640><c> the</c><00:11:14.970><c> ad</c><00:11:15.540><c> is</c><00:11:16.460><c> designed</c><00:11:17.460><c> to</c><00:11:17.850><c> allow</c><00:11:18.060><c> this</c><00:11:18.390><c> and</c>

00:11:18.770 --> 00:11:18.780 align:start position:0%
if the ad is designed to allow this and
 

00:11:18.780 --> 00:11:21.950 align:start position:0%
if the ad is designed to allow this and
if<00:11:19.380><c> all</c><00:11:20.010><c> the</c><00:11:20.190><c> stalls</c><00:11:20.430><c> line</c><00:11:20.730><c> up</c><00:11:20.940><c> just</c><00:11:21.120><c> right</c><00:11:21.360><c> it</c>

00:11:21.950 --> 00:11:21.960 align:start position:0%
if all the stalls line up just right it
 

00:11:21.960 --> 00:11:23.420 align:start position:0%
if all the stalls line up just right it
can<00:11:22.200><c> in</c><00:11:22.320><c> fact</c><00:11:22.470><c> happen</c><00:11:22.980><c> that</c><00:11:23.130><c> the</c><00:11:23.250><c> garbage</c>

00:11:23.420 --> 00:11:23.430 align:start position:0%
can in fact happen that the garbage
 

00:11:23.430 --> 00:11:26.030 align:start position:0%
can in fact happen that the garbage
collector<00:11:23.970><c> at</c><00:11:24.150><c> that</c><00:11:24.270><c> point</c><00:11:24.660><c> besides</c><00:11:25.650><c> that</c>

00:11:26.030 --> 00:11:26.040 align:start position:0%
collector at that point besides that
 

00:11:26.040 --> 00:11:28.220 align:start position:0%
collector at that point besides that
these<00:11:26.250><c> are</c><00:11:26.430><c> no</c><00:11:26.550><c> longer</c><00:11:26.600><c> that</c><00:11:27.600><c> this</c><00:11:27.900><c> and</c><00:11:28.110><c> other</c>

00:11:28.220 --> 00:11:28.230 align:start position:0%
these are no longer that this and other
 

00:11:28.230 --> 00:11:31.220 align:start position:0%
these are no longer that this and other
no<00:11:28.560><c> longer</c><00:11:28.890><c> needed</c><00:11:29.280><c> and</c><00:11:29.900><c> arrange</c><00:11:30.900><c> for</c><00:11:31.020><c> the</c>

00:11:31.220 --> 00:11:31.230 align:start position:0%
no longer needed and arrange for the
 

00:11:31.230 --> 00:11:33.230 align:start position:0%
no longer needed and arrange for the
finalizes<00:11:32.040><c> on</c><00:11:32.220><c> both</c><00:11:32.400><c> of</c><00:11:32.580><c> those</c><00:11:32.730><c> to</c><00:11:32.940><c> get</c><00:11:33.120><c> it</c>

00:11:33.230 --> 00:11:33.240 align:start position:0%
finalizes on both of those to get it
 

00:11:33.240 --> 00:11:37.580 align:start position:0%
finalizes on both of those to get it
vote<00:11:35.360><c> roughly</c><00:11:36.360><c> where</c><00:11:36.630><c> the</c><00:11:36.720><c> new</c><00:11:36.870><c> binary</c><00:11:37.110><c> poly</c>

00:11:37.580 --> 00:11:37.590 align:start position:0%
vote roughly where the new binary poly
 

00:11:37.590 --> 00:11:40.700 align:start position:0%
vote roughly where the new binary poly
happens<00:11:38.130><c> occurs</c><00:11:38.610><c> what</c><00:11:39.540><c> then</c><00:11:39.720><c> happens</c><00:11:40.290><c> is</c><00:11:40.500><c> that</c>

00:11:40.700 --> 00:11:40.710 align:start position:0%
happens occurs what then happens is that
 

00:11:40.710 --> 00:11:43.010 align:start position:0%
happens occurs what then happens is that
when<00:11:40.920><c> we</c><00:11:41.040><c> call</c><00:11:41.250><c> native</c><00:11:41.580><c> multiply</c><00:11:42.150><c> we</c><00:11:42.840><c> don't</c>

00:11:43.010 --> 00:11:43.020 align:start position:0%
when we call native multiply we don't
 

00:11:43.020 --> 00:11:44.570 align:start position:0%
when we call native multiply we don't
need<00:11:43.110><c> the</c><00:11:43.230><c> objects</c><00:11:43.740><c> anymore</c><00:11:44.100><c> but</c><00:11:44.310><c> we</c><00:11:44.400><c> still</c>

00:11:44.570 --> 00:11:44.580 align:start position:0%
need the objects anymore but we still
 

00:11:44.580 --> 00:11:46.580 align:start position:0%
need the objects anymore but we still
need<00:11:44.790><c> the</c><00:11:44.880><c> native</c><00:11:45.180><c> handles</c><00:11:45.630><c> but</c><00:11:46.350><c> now</c><00:11:46.530><c> the</c>

00:11:46.580 --> 00:11:46.590 align:start position:0%
need the native handles but now the
 

00:11:46.590 --> 00:11:48.350 align:start position:0%
need the native handles but now the
native<00:11:46.980><c> handles</c><00:11:47.340><c> that</c><00:11:47.430><c> would</c><00:11:47.640><c> be</c><00:11:47.730><c> allocated</c>

00:11:48.350 --> 00:11:48.360 align:start position:0%
native handles that would be allocated
 

00:11:48.360 --> 00:11:51.620 align:start position:0%
native handles that would be allocated
so<00:11:49.260><c> in</c><00:11:49.410><c> fact</c><00:11:49.680><c> I'm</c><00:11:50.010><c> accessing</c><00:11:50.610><c> objects</c><00:11:51.510><c> that</c>

00:11:51.620 --> 00:11:51.630 align:start position:0%
so in fact I'm accessing objects that
 

00:11:51.630 --> 00:11:54.830 align:start position:0%
so in fact I'm accessing objects that
are<00:11:51.780><c> no</c><00:11:51.900><c> longer</c><00:11:52.080><c> around</c><00:11:53.180><c> this</c><00:11:54.180><c> is</c><00:11:54.330><c> allowed</c><00:11:54.600><c> by</c>

00:11:54.830 --> 00:11:54.840 align:start position:0%
are no longer around this is allowed by
 

00:11:54.840 --> 00:11:57.470 align:start position:0%
are no longer around this is allowed by
the<00:11:54.900><c> Java</c><00:11:55.200><c> language</c><00:11:55.410><c> specification</c><00:11:55.890><c> and</c><00:11:56.880><c> it's</c>

00:11:57.470 --> 00:11:57.480 align:start position:0%
the Java language specification and it's
 

00:11:57.480 --> 00:11:59.930 align:start position:0%
the Java language specification and it's
something<00:11:57.840><c> that</c><00:11:58.020><c> that</c><00:11:58.980><c> has</c><00:11:59.130><c> been</c><00:11:59.370><c> seen</c><00:11:59.670><c> on</c><00:11:59.910><c> the</c>

00:11:59.930 --> 00:11:59.940 align:start position:0%
something that that has been seen on the
 

00:11:59.940 --> 00:12:01.640 align:start position:0%
something that that has been seen on the
ground<00:12:00.180><c> occasion</c><00:12:00.780><c> in</c><00:12:00.900><c> the</c><00:12:00.990><c> wild</c><00:12:01.350><c> but</c><00:12:01.560><c> it</c>

00:12:01.640 --> 00:12:01.650 align:start position:0%
ground occasion in the wild but it
 

00:12:01.650 --> 00:12:07.010 align:start position:0%
ground occasion in the wild but it
doesn't<00:12:01.920><c> happen</c><00:12:02.040><c> very</c><00:12:02.220><c> often</c><00:12:05.780><c> there</c><00:12:06.780><c> are</c><00:12:06.840><c> more</c>

00:12:07.010 --> 00:12:07.020 align:start position:0%
doesn't happen very often there are more
 

00:12:07.020 --> 00:12:10.130 align:start position:0%
doesn't happen very often there are more
problems<00:12:07.230><c> with</c><00:12:07.590><c> finalizes</c><00:12:08.690><c> you</c><00:12:09.690><c> can</c><00:12:09.900><c> see</c><00:12:10.110><c> a</c>

00:12:10.130 --> 00:12:10.140 align:start position:0%
problems with finalizes you can see a
 

00:12:10.140 --> 00:12:12.170 align:start position:0%
problems with finalizes you can see a
lot<00:12:10.410><c> of</c><00:12:10.440><c> them</c><00:12:10.740><c> by</c><00:12:10.890><c> looking</c><00:12:11.040><c> at</c><00:12:11.400><c> the</c><00:12:11.610><c> joshua</c>

00:12:12.170 --> 00:12:12.180 align:start position:0%
lot of them by looking at the joshua
 

00:12:12.180 --> 00:12:14.570 align:start position:0%
lot of them by looking at the joshua
blocks<00:12:12.680><c> effective</c><00:12:13.680><c> java</c><00:12:13.920><c> book</c><00:12:14.280><c> which</c>

00:12:14.570 --> 00:12:14.580 align:start position:0%
blocks effective java book which
 

00:12:14.580 --> 00:12:16.100 align:start position:0%
blocks effective java book which
actually<00:12:15.000><c> has</c><00:12:15.150><c> a</c><00:12:15.180><c> section</c><00:12:15.660><c> on</c><00:12:15.750><c> the</c><00:12:15.930><c> on</c>

00:12:16.100 --> 00:12:16.110 align:start position:0%
actually has a section on the on
 

00:12:16.110 --> 00:12:21.560 align:start position:0%
actually has a section on the on
entitled<00:12:16.860><c> I</c><00:12:16.920><c> believe</c><00:12:17.190><c> avoid</c><00:12:17.460><c> finalizes</c><00:12:20.570><c> one</c>

00:12:21.560 --> 00:12:21.570 align:start position:0%
entitled I believe avoid finalizes one
 

00:12:21.570 --> 00:12:23.570 align:start position:0%
entitled I believe avoid finalizes one
one<00:12:22.050><c> thing</c><00:12:22.230><c> to</c><00:12:22.350><c> indicate</c><00:12:22.770><c> the</c><00:12:22.950><c> problems</c><00:12:23.370><c> is</c>

00:12:23.570 --> 00:12:23.580 align:start position:0%
one thing to indicate the problems is
 

00:12:23.580 --> 00:12:26.090 align:start position:0%
one thing to indicate the problems is
that<00:12:23.610><c> it's</c><00:12:23.970><c> actually</c><00:12:24.510><c> the</c><00:12:25.260><c> plan</c><00:12:25.530><c> as</c><00:12:25.800><c> I</c><00:12:25.950><c> believe</c>

00:12:26.090 --> 00:12:26.100 align:start position:0%
that it's actually the plan as I believe
 

00:12:26.100 --> 00:12:29.540 align:start position:0%
that it's actually the plan as I believe
to<00:12:26.430><c> deprecate</c><00:12:26.840><c> finalized</c><00:12:27.840><c> and</c><00:12:28.340><c> finalized</c><00:12:29.340><c> in</c>

00:12:29.540 --> 00:12:29.550 align:start position:0%
to deprecate finalized and finalized in
 

00:12:29.550 --> 00:12:33.740 align:start position:0%
to deprecate finalized and finalized in
JDK<00:12:30.270><c> 9</c><00:12:31.280><c> another</c><00:12:32.280><c> issue</c><00:12:32.610><c> which</c><00:12:32.940><c> I</c><00:12:33.090><c> look</c><00:12:33.600><c> at</c>

00:12:33.740 --> 00:12:33.750 align:start position:0%
JDK 9 another issue which I look at
 

00:12:33.750 --> 00:12:36.650 align:start position:0%
JDK 9 another issue which I look at
occasional<00:12:34.380><c> here</c><00:12:34.620><c> a</c><00:12:34.650><c> little</c><00:12:34.860><c> bit</c><00:12:35.100><c> is</c><00:12:35.310><c> that</c><00:12:36.030><c> for</c>

00:12:36.650 --> 00:12:36.660 align:start position:0%
occasional here a little bit is that for
 

00:12:36.660 --> 00:12:39.680 align:start position:0%
occasional here a little bit is that for
these<00:12:36.780><c> for</c><00:12:37.230><c> this</c><00:12:37.380><c> to</c><00:12:37.560><c> work</c><00:12:37.800><c> correctly</c><00:12:37.830><c> and</c><00:12:38.790><c> if</c>

00:12:39.680 --> 00:12:39.690 align:start position:0%
these for this to work correctly and if
 

00:12:39.690 --> 00:12:42.290 align:start position:0%
these for this to work correctly and if
you<00:12:40.170><c> run</c><00:12:40.440><c> an</c><00:12:40.560><c> application</c><00:12:41.340><c> that</c><00:12:41.520><c> allocates</c>

00:12:42.290 --> 00:12:42.300 align:start position:0%
you run an application that allocates
 

00:12:42.300 --> 00:12:44.660 align:start position:0%
you run an application that allocates
lots<00:12:42.630><c> of</c><00:12:42.840><c> native</c><00:12:43.080><c> memory</c><00:12:43.470><c> and</c><00:12:43.890><c> relatively</c>

00:12:44.660 --> 00:12:44.670 align:start position:0%
lots of native memory and relatively
 

00:12:44.670 --> 00:12:47.030 align:start position:0%
lots of native memory and relatively
little<00:12:45.030><c> Java</c><00:12:45.270><c> memory</c><00:12:45.600><c> it</c><00:12:45.960><c> may</c><00:12:46.470><c> actually</c><00:12:46.680><c> not</c>

00:12:47.030 --> 00:12:47.040 align:start position:0%
little Java memory it may actually not
 

00:12:47.040 --> 00:12:48.830 align:start position:0%
little Java memory it may actually not
be<00:12:47.100><c> the</c><00:12:47.400><c> case</c><00:12:47.610><c> that</c><00:12:47.850><c> you</c><00:12:48.060><c> the</c><00:12:48.510><c> garbage</c>

00:12:48.830 --> 00:12:48.840 align:start position:0%
be the case that you the garbage
 

00:12:48.840 --> 00:12:50.720 align:start position:0%
be the case that you the garbage
collector<00:12:49.260><c> runs</c><00:12:49.410><c> fondly</c><00:12:49.950><c> enough</c><00:12:50.340><c> to</c><00:12:50.550><c> actually</c>

00:12:50.720 --> 00:12:50.730 align:start position:0%
collector runs fondly enough to actually
 

00:12:50.730 --> 00:12:53.330 align:start position:0%
collector runs fondly enough to actually
invoke<00:12:51.420><c> finalizes</c><00:12:52.320><c> or</c><00:12:52.470><c> the</c><00:12:52.560><c> other</c><00:12:52.710><c> mechanism</c>

00:12:53.330 --> 00:12:53.340 align:start position:0%
invoke finalizes or the other mechanism
 

00:12:53.340 --> 00:12:56.000 align:start position:0%
invoke finalizes or the other mechanism
also<00:12:53.490><c> just</c><00:12:53.880><c> in</c><00:12:54.030><c> a</c><00:12:54.090><c> minute</c><00:12:54.210><c> here</c><00:12:54.690><c> so</c><00:12:55.010><c> you</c>

00:12:56.000 --> 00:12:56.010 align:start position:0%
also just in a minute here so you
 

00:12:56.010 --> 00:12:57.680 align:start position:0%
also just in a minute here so you
actually<00:12:56.520><c> may</c><00:12:56.730><c> have</c><00:12:56.880><c> to</c><00:12:57.090><c> invoke</c><00:12:57.360><c> these</c>

00:12:57.680 --> 00:12:57.690 align:start position:0%
actually may have to invoke these
 

00:12:57.690 --> 00:12:59.690 align:start position:0%
actually may have to invoke these
systems<00:12:58.530><c> RTC</c><00:12:58.980><c> and</c><00:12:59.010><c> system</c><00:12:59.430><c> to</c><00:12:59.520><c> run</c>

00:12:59.690 --> 00:12:59.700 align:start position:0%
systems RTC and system to run
 

00:12:59.700 --> 00:13:02.060 align:start position:0%
systems RTC and system to run
finalization<00:13:00.740><c> occasionally</c><00:13:01.740><c> which</c><00:13:01.920><c> is</c>

00:13:02.060 --> 00:13:02.070 align:start position:0%
finalization occasionally which is
 

00:13:02.070 --> 00:13:03.740 align:start position:0%
finalization occasionally which is
tricky<00:13:02.280><c> to</c><00:13:02.430><c> do</c><00:13:02.670><c> because</c><00:13:02.880><c> if</c><00:13:03.150><c> you</c><00:13:03.240><c> do</c><00:13:03.450><c> it</c><00:13:03.570><c> too</c>

00:13:03.740 --> 00:13:03.750 align:start position:0%
tricky to do because if you do it too
 

00:13:03.750 --> 00:13:05.270 align:start position:0%
tricky to do because if you do it too
much<00:13:03.780><c> it</c><00:13:04.140><c> will</c><00:13:04.260><c> greatly</c><00:13:04.710><c> slow</c><00:13:04.920><c> down</c><00:13:05.100><c> your</c>

00:13:05.270 --> 00:13:05.280 align:start position:0%
much it will greatly slow down your
 

00:13:05.280 --> 00:13:07.340 align:start position:0%
much it will greatly slow down your
application<00:13:05.400><c> and</c><00:13:06.090><c> many</c><00:13:06.720><c> people</c><00:13:07.080><c> have</c><00:13:07.200><c> fallen</c>

00:13:07.340 --> 00:13:07.350 align:start position:0%
application and many people have fallen
 

00:13:07.350 --> 00:13:10.220 align:start position:0%
application and many people have fallen
into<00:13:07.680><c> that</c><00:13:07.770><c> trap</c><00:13:08.660><c> there's</c><00:13:09.660><c> a</c><00:13:09.750><c> more</c><00:13:09.930><c> subtle</c>

00:13:10.220 --> 00:13:10.230 align:start position:0%
into that trap there's a more subtle
 

00:13:10.230 --> 00:13:12.350 align:start position:0%
into that trap there's a more subtle
issue<00:13:10.380><c> that</c><00:13:10.830><c> they</c><00:13:10.950><c> sometimes</c><00:13:11.190><c> finalize</c><00:13:12.120><c> those</c>

00:13:12.350 --> 00:13:12.360 align:start position:0%
issue that they sometimes finalize those
 

00:13:12.360 --> 00:13:12.980 align:start position:0%
issue that they sometimes finalize those
actually

00:13:12.980 --> 00:13:12.990 align:start position:0%
actually
 

00:13:12.990 --> 00:13:15.320 align:start position:0%
actually
extend<00:13:13.560><c> the</c><00:13:13.680><c> lifetime</c><00:13:13.890><c> of</c><00:13:14.220><c> the</c><00:13:14.520><c> Java</c><00:13:14.790><c> object</c>

00:13:15.320 --> 00:13:15.330 align:start position:0%
extend the lifetime of the Java object
 

00:13:15.330 --> 00:13:17.000 align:start position:0%
extend the lifetime of the Java object
for<00:13:15.510><c> another</c><00:13:15.690><c> garbage</c><00:13:15.990><c> collection</c><00:13:16.560><c> cycle</c>

00:13:17.000 --> 00:13:17.010 align:start position:0%
for another garbage collection cycle
 

00:13:17.010 --> 00:13:19.040 align:start position:0%
for another garbage collection cycle
which<00:13:17.730><c> means</c><00:13:18.029><c> for</c><00:13:18.300><c> generational</c><00:13:18.899><c> garbage</c>

00:13:19.040 --> 00:13:19.050 align:start position:0%
which means for generational garbage
 

00:13:19.050 --> 00:13:21.050 align:start position:0%
which means for generational garbage
collected<00:13:19.709><c> they</c><00:13:19.830><c> may</c><00:13:20.010><c> actually</c><00:13:20.250><c> cause</c><00:13:20.760><c> it</c><00:13:20.790><c> to</c>

00:13:21.050 --> 00:13:21.060 align:start position:0%
collected they may actually cause it to
 

00:13:21.060 --> 00:13:23.360 align:start position:0%
collected they may actually cause it to
survive<00:13:21.660><c> into</c><00:13:22.200><c> the</c><00:13:22.230><c> old</c><00:13:22.470><c> generation</c><00:13:23.130><c> that</c><00:13:23.250><c> it</c>

00:13:23.360 --> 00:13:23.370 align:start position:0%
survive into the old generation that it
 

00:13:23.370 --> 00:13:25.670 align:start position:0%
survive into the old generation that it
may<00:13:23.520><c> be</c><00:13:23.580><c> the</c><00:13:24.360><c> lifetime</c><00:13:24.779><c> may</c><00:13:25.200><c> be</c><00:13:25.260><c> greatly</c>

00:13:25.670 --> 00:13:25.680 align:start position:0%
may be the lifetime may be greatly
 

00:13:25.680 --> 00:13:27.500 align:start position:0%
may be the lifetime may be greatly
extended<00:13:26.279><c> as</c><00:13:26.430><c> a</c><00:13:26.459><c> result</c><00:13:26.850><c> of</c><00:13:26.970><c> just</c><00:13:27.000><c> having</c><00:13:27.330><c> a</c>

00:13:27.500 --> 00:13:27.510 align:start position:0%
extended as a result of just having a
 

00:13:27.510 --> 00:13:28.810 align:start position:0%
extended as a result of just having a
finalizar

00:13:28.810 --> 00:13:28.820 align:start position:0%
finalizar
 

00:13:28.820 --> 00:13:32.090 align:start position:0%
finalizar
and<00:13:29.820><c> there</c><00:13:30.029><c> are</c><00:13:30.120><c> other</c><00:13:30.240><c> issues</c><00:13:30.800><c> which</c><00:13:31.800><c> I</c><00:13:31.950><c> won't</c>

00:13:32.090 --> 00:13:32.100 align:start position:0%
and there are other issues which I won't
 

00:13:32.100 --> 00:13:35.210 align:start position:0%
and there are other issues which I won't
go<00:13:32.279><c> into</c><00:13:32.310><c> here</c><00:13:32.910><c> so</c><00:13:33.410><c> how</c><00:13:34.410><c> do</c><00:13:34.470><c> you</c><00:13:34.589><c> really</c><00:13:34.920><c> delete</c>

00:13:35.210 --> 00:13:35.220 align:start position:0%
go into here so how do you really delete
 

00:13:35.220 --> 00:13:42.560 align:start position:0%
go into here so how do you really delete
C++<00:13:35.820><c> objects</c><00:13:36.450><c> I</c><00:13:41.060><c> should</c><00:13:42.060><c> point</c><00:13:42.209><c> out</c><00:13:42.360><c> the</c><00:13:42.540><c> usual</c>

00:13:42.560 --> 00:13:42.570 align:start position:0%
C++ objects I should point out the usual
 

00:13:42.570 --> 00:13:46.010 align:start position:0%
C++ objects I should point out the usual
advice<00:13:43.380><c> here</c><00:13:43.800><c> which</c><00:13:43.980><c> I'll</c><00:13:44.450><c> skim</c><00:13:45.450><c> over</c><00:13:45.750><c> briefly</c>

00:13:46.010 --> 00:13:46.020 align:start position:0%
advice here which I'll skim over briefly
 

00:13:46.020 --> 00:13:49.100 align:start position:0%
advice here which I'll skim over briefly
is<00:13:46.470><c> to</c><00:13:46.800><c> use</c><00:13:47.100><c> explicit</c><00:13:47.580><c> clothes</c><00:13:48.180><c> and</c><00:13:48.630><c> tie</c><00:13:48.899><c> with</c>

00:13:49.100 --> 00:13:49.110 align:start position:0%
is to use explicit clothes and tie with
 

00:13:49.110 --> 00:13:51.110 align:start position:0%
is to use explicit clothes and tie with
resources<00:13:49.680><c> so</c><00:13:49.920><c> Java</c><00:13:50.190><c> has</c><00:13:50.459><c> a</c><00:13:50.520><c> syntactic</c>

00:13:51.110 --> 00:13:51.120 align:start position:0%
resources so Java has a syntactic
 

00:13:51.120 --> 00:13:54.829 align:start position:0%
resources so Java has a syntactic
facility<00:13:51.980><c> which</c><00:13:52.980><c> allow</c><00:13:53.370><c> us</c><00:13:53.399><c> essentially</c><00:13:54.029><c> C++</c>

00:13:54.829 --> 00:13:54.839 align:start position:0%
facility which allow us essentially C++
 

00:13:54.839 --> 00:13:57.290 align:start position:0%
facility which allow us essentially C++
style<00:13:55.170><c> distraction</c><00:13:55.950><c> when</c><00:13:56.459><c> you</c><00:13:56.610><c> leave</c><00:13:56.820><c> a</c><00:13:56.850><c> scope</c>

00:13:57.290 --> 00:13:57.300 align:start position:0%
style distraction when you leave a scope
 

00:13:57.300 --> 00:14:00.290 align:start position:0%
style distraction when you leave a scope
you<00:13:57.630><c> can</c><00:13:57.810><c> arrange</c><00:13:58.110><c> to</c><00:13:58.370><c> to</c><00:13:59.370><c> explicitly</c><00:13:59.940><c> call</c>

00:14:00.290 --> 00:14:00.300 align:start position:0%
you can arrange to to explicitly call
 

00:14:00.300 --> 00:14:04.160 align:start position:0%
you can arrange to to explicitly call
the<00:14:00.450><c> close</c><00:14:00.690><c> function</c><00:14:00.990><c> and</c><00:14:02.270><c> that</c><00:14:03.270><c> works</c><00:14:03.720><c> when</c>

00:14:04.160 --> 00:14:04.170 align:start position:0%
the close function and that works when
 

00:14:04.170 --> 00:14:06.920 align:start position:0%
the close function and that works when
it's<00:14:04.350><c> applicable</c><00:14:04.589><c> so</c><00:14:05.490><c> there</c><00:14:05.670><c> cases</c><00:14:06.000><c> like</c><00:14:06.450><c> file</c>

00:14:06.920 --> 00:14:06.930 align:start position:0%
it's applicable so there cases like file
 

00:14:06.930 --> 00:14:09.620 align:start position:0%
it's applicable so there cases like file
like<00:14:07.170><c> object</c><00:14:07.770><c> system</c><00:14:08.130><c> allocated</c><00:14:09.029><c> objects</c><00:14:09.480><c> and</c>

00:14:09.620 --> 00:14:09.630 align:start position:0%
like object system allocated objects and
 

00:14:09.630 --> 00:14:11.630 align:start position:0%
like object system allocated objects and
torn<00:14:09.870><c> with</c><00:14:10.410><c> it's</c><00:14:10.589><c> generally</c><00:14:10.980><c> that</c><00:14:11.100><c> I</c><00:14:11.220><c> approach</c>

00:14:11.630 --> 00:14:11.640 align:start position:0%
torn with it's generally that I approach
 

00:14:11.640 --> 00:14:14.840 align:start position:0%
torn with it's generally that I approach
and<00:14:12.060><c> that's</c><00:14:13.050><c> the</c><00:14:13.200><c> main</c><00:14:13.610><c> recommendation</c><00:14:14.610><c> on</c>

00:14:14.840 --> 00:14:14.850 align:start position:0%
and that's the main recommendation on
 

00:14:14.850 --> 00:14:16.220 align:start position:0%
and that's the main recommendation on
the<00:14:14.940><c> other</c><00:14:15.060><c> hand</c><00:14:15.300><c> there</c><00:14:15.420><c> are</c><00:14:15.450><c> many</c><00:14:15.630><c> cases</c><00:14:15.870><c> in</c>

00:14:16.220 --> 00:14:16.230 align:start position:0%
the other hand there are many cases in
 

00:14:16.230 --> 00:14:18.680 align:start position:0%
the other hand there are many cases in
my<00:14:16.350><c> experience</c><00:14:16.980><c> where</c><00:14:17.370><c> that</c><00:14:18.089><c> doesn't</c><00:14:18.450><c> work</c>

00:14:18.680 --> 00:14:18.690 align:start position:0%
my experience where that doesn't work
 

00:14:18.690 --> 00:14:20.960 align:start position:0%
my experience where that doesn't work
and<00:14:18.990><c> in</c><00:14:19.589><c> general</c><00:14:19.890><c> people</c><00:14:20.070><c> already</c><00:14:20.430><c> use</c><00:14:20.760><c> this</c>

00:14:20.960 --> 00:14:20.970 align:start position:0%
and in general people already use this
 

00:14:20.970 --> 00:14:23.329 align:start position:0%
and in general people already use this
wing<00:14:21.270><c> in</c><00:14:21.570><c> those</c><00:14:21.779><c> cases</c><00:14:22.050><c> where</c><00:14:22.529><c> it</c><00:14:22.800><c> where</c><00:14:23.190><c> it's</c>

00:14:23.329 --> 00:14:23.339 align:start position:0%
wing in those cases where it where it's
 

00:14:23.339 --> 00:14:27.829 align:start position:0%
wing in those cases where it where it's
applicable<00:14:24.230><c> so</c><00:14:25.230><c> for</c><00:14:25.649><c> example</c><00:14:26.130><c> if</c><00:14:26.399><c> I</c><00:14:26.850><c> mention</c><00:14:27.630><c> C</c>

00:14:27.829 --> 00:14:27.839 align:start position:0%
applicable so for example if I mention C
 

00:14:27.839 --> 00:14:30.889 align:start position:0%
applicable so for example if I mention C
is<00:14:28.079><c> the</c><00:14:28.500><c> java.lang</c><00:14:29.190><c> big</c><00:14:29.490><c> integer</c><00:14:29.970><c> and</c><00:14:30.180><c> example</c>

00:14:30.889 --> 00:14:30.899 align:start position:0%
is the java.lang big integer and example
 

00:14:30.899 --> 00:14:32.810 align:start position:0%
is the java.lang big integer and example
in<00:14:31.020><c> the</c><00:14:31.110><c> platform</c><00:14:31.680><c> you</c><00:14:32.130><c> really</c><00:14:32.430><c> don't</c><00:14:32.640><c> want</c><00:14:32.790><c> to</c>

00:14:32.810 --> 00:14:32.820 align:start position:0%
in the platform you really don't want to
 

00:14:32.820 --> 00:14:34.460 align:start position:0%
in the platform you really don't want to
have<00:14:32.940><c> to</c><00:14:33.089><c> call</c><00:14:33.300><c> big</c><00:14:33.570><c> integer</c><00:14:33.930><c> that</c><00:14:34.079><c> close</c>

00:14:34.460 --> 00:14:34.470 align:start position:0%
have to call big integer that close
 

00:14:34.470 --> 00:14:35.960 align:start position:0%
have to call big integer that close
every<00:14:34.860><c> time</c><00:14:35.040><c> one</c><00:14:35.160><c> of</c><00:14:35.220><c> those</c><00:14:35.430><c> goes</c><00:14:35.670><c> out</c><00:14:35.850><c> of</c>

00:14:35.960 --> 00:14:35.970 align:start position:0%
every time one of those goes out of
 

00:14:35.970 --> 00:14:38.150 align:start position:0%
every time one of those goes out of
scope<00:14:36.240><c> that</c><00:14:37.020><c> would</c><00:14:37.200><c> be</c><00:14:37.320><c> completely</c><00:14:37.589><c> untenable</c>

00:14:38.150 --> 00:14:38.160 align:start position:0%
scope that would be completely untenable
 

00:14:38.160 --> 00:14:40.340 align:start position:0%
scope that would be completely untenable
and<00:14:38.579><c> there</c><00:14:38.790><c> are</c><00:14:38.850><c> many</c><00:14:39.029><c> or</c><00:14:39.240><c> more</c><00:14:39.630><c> examples</c><00:14:40.170><c> like</c>

00:14:40.340 --> 00:14:40.350 align:start position:0%
and there are many or more examples like
 

00:14:40.350 --> 00:14:45.800 align:start position:0%
and there are many or more examples like
that<00:14:40.410><c> in</c><00:14:40.770><c> the</c><00:14:40.890><c> Android</c><00:14:41.220><c> platform</c><00:14:41.459><c> I</c><00:14:44.810><c> should</c>

00:14:45.800 --> 00:14:45.810 align:start position:0%
that in the Android platform I should
 

00:14:45.810 --> 00:14:47.569 align:start position:0%
that in the Android platform I should
warn<00:14:45.990><c> you</c><00:14:46.110><c> that</c><00:14:46.170><c> for</c><00:14:46.770><c> what</c><00:14:46.950><c> are</c><00:14:47.040><c> the</c><00:14:47.310><c> solutions</c>

00:14:47.569 --> 00:14:47.579 align:start position:0%
warn you that for what are the solutions
 

00:14:47.579 --> 00:14:49.670 align:start position:0%
warn you that for what are the solutions
I'm<00:14:47.940><c> talking</c><00:14:48.420><c> about</c><00:14:48.510><c> a</c><00:14:48.870><c> lot</c><00:14:49.200><c> of</c><00:14:49.320><c> this</c><00:14:49.500><c> is</c>

00:14:49.670 --> 00:14:49.680 align:start position:0%
I'm talking about a lot of this is
 

00:14:49.680 --> 00:14:51.470 align:start position:0%
I'm talking about a lot of this is
actually<00:14:49.890><c> not</c><00:14:50.250><c> fully</c><00:14:50.550><c> settled</c><00:14:50.880><c> in</c><00:14:51.270><c> the</c>

00:14:51.470 --> 00:14:51.480 align:start position:0%
actually not fully settled in the
 

00:14:51.480 --> 00:14:53.810 align:start position:0%
actually not fully settled in the
community<00:14:52.020><c> as</c><00:14:52.170><c> a</c><00:14:52.200><c> whole</c><00:14:52.380><c> this</c><00:14:53.370><c> is</c><00:14:53.579><c> sort</c><00:14:53.760><c> of</c>

00:14:53.810 --> 00:14:53.820 align:start position:0%
community as a whole this is sort of
 

00:14:53.820 --> 00:14:57.170 align:start position:0%
community as a whole this is sort of
beyond<00:14:54.180><c> Android</c><00:14:54.870><c> as</c><00:14:55.140><c> well</c><00:14:55.170><c> it's</c><00:14:56.000><c> still</c><00:14:57.000><c> trying</c>

00:14:57.170 --> 00:14:57.180 align:start position:0%
beyond Android as well it's still trying
 

00:14:57.180 --> 00:14:58.430 align:start position:0%
beyond Android as well it's still trying
to<00:14:57.270><c> figure</c><00:14:57.480><c> out</c><00:14:57.570><c> what</c><00:14:57.779><c> the</c><00:14:57.870><c> right</c><00:14:57.990><c> way</c><00:14:58.170><c> to</c><00:14:58.230><c> do</c>

00:14:58.430 --> 00:14:58.440 align:start position:0%
to figure out what the right way to do
 

00:14:58.440 --> 00:15:00.019 align:start position:0%
to figure out what the right way to do
this<00:14:58.620><c> is</c><00:14:58.829><c> these</c><00:14:59.010><c> are</c><00:14:59.160><c> mostly</c><00:14:59.399><c> sort</c><00:14:59.640><c> of</c><00:14:59.730><c> general</c>

00:15:00.019 --> 00:15:00.029 align:start position:0%
this is these are mostly sort of general
 

00:15:00.029 --> 00:15:01.639 align:start position:0%
this is these are mostly sort of general
Java<00:15:00.300><c> language</c><00:15:00.540><c> issues</c><00:15:01.079><c> that</c><00:15:01.260><c> are</c><00:15:01.350><c> actually</c>

00:15:01.639 --> 00:15:01.649 align:start position:0%
Java language issues that are actually
 

00:15:01.649 --> 00:15:06.380 align:start position:0%
Java language issues that are actually
not<00:15:01.680><c> specific</c><00:15:02.399><c> to</c><00:15:02.430><c> Android</c><00:15:04.790><c> but</c><00:15:05.790><c> there</c><00:15:06.120><c> seems</c>

00:15:06.380 --> 00:15:06.390 align:start position:0%
not specific to Android but there seems
 

00:15:06.390 --> 00:15:08.780 align:start position:0%
not specific to Android but there seems
to<00:15:06.480><c> be</c><00:15:06.570><c> it</c><00:15:06.839><c> seems</c><00:15:07.680><c> to</c><00:15:07.829><c> be</c><00:15:07.920><c> agreement</c><00:15:08.279><c> that</c><00:15:08.670><c> you</c>

00:15:08.780 --> 00:15:08.790 align:start position:0%
to be it seems to be agreement that you
 

00:15:08.790 --> 00:15:10.610 align:start position:0%
to be it seems to be agreement that you
shouldn't<00:15:09.060><c> use</c><00:15:09.240><c> object</c><00:15:09.660><c> not</c><00:15:09.779><c> finalized</c><00:15:10.320><c> as</c>

00:15:10.610 --> 00:15:10.620 align:start position:0%
shouldn't use object not finalized as
 

00:15:10.620 --> 00:15:12.170 align:start position:0%
shouldn't use object not finalized as
evidenced<00:15:11.190><c> by</c><00:15:11.279><c> the</c><00:15:11.339><c> fact</c><00:15:11.610><c> that</c><00:15:11.730><c> it's</c><00:15:11.940><c> going</c><00:15:12.120><c> to</c>

00:15:12.170 --> 00:15:12.180 align:start position:0%
evidenced by the fact that it's going to
 

00:15:12.180 --> 00:15:16.670 align:start position:0%
evidenced by the fact that it's going to
be<00:15:12.240><c> deprecated</c><00:15:12.720><c> sometime</c><00:15:13.649><c> in</c><00:15:13.770><c> the</c><00:15:13.860><c> future</c><00:15:15.680><c> so</c>

00:15:16.670 --> 00:15:16.680 align:start position:0%
be deprecated sometime in the future so
 

00:15:16.680 --> 00:15:18.440 align:start position:0%
be deprecated sometime in the future so
the<00:15:16.800><c> advice</c><00:15:17.220><c> here</c><00:15:17.640><c> and</c><00:15:17.730><c> I'll</c><00:15:17.820><c> go</c><00:15:17.970><c> into</c><00:15:18.180><c> how</c><00:15:18.390><c> to</c>

00:15:18.440 --> 00:15:18.450 align:start position:0%
the advice here and I'll go into how to
 

00:15:18.450 --> 00:15:20.720 align:start position:0%
the advice here and I'll go into how to
do<00:15:18.690><c> this</c><00:15:18.959><c> is</c><00:15:19.260><c> we</c><00:15:20.040><c> use</c><00:15:20.220><c> something</c><00:15:20.550><c> called</c>

00:15:20.720 --> 00:15:20.730 align:start position:0%
do this is we use something called
 

00:15:20.730 --> 00:15:24.199 align:start position:0%
do this is we use something called
java.lang<00:15:21.720><c> graph</c><00:15:22.020><c> phantom</c><00:15:22.500><c> reference</c><00:15:22.980><c> and</c>

00:15:24.199 --> 00:15:24.209 align:start position:0%
java.lang graph phantom reference and
 

00:15:24.209 --> 00:15:26.939 align:start position:0%
java.lang graph phantom reference and
many<00:15:25.209><c> of</c><00:15:25.360><c> you</c><00:15:25.540><c> may</c><00:15:25.750><c> have</c><00:15:25.779><c> encountered</c><00:15:26.680><c> that</c><00:15:26.829><c> as</c>

00:15:26.939 --> 00:15:26.949 align:start position:0%
many of you may have encountered that as
 

00:15:26.949 --> 00:15:28.740 align:start position:0%
many of you may have encountered that as
far<00:15:27.129><c> as</c><00:15:27.160><c> I</c><00:15:27.279><c> can</c><00:15:27.339><c> tell</c><00:15:27.579><c> most</c><00:15:27.819><c> people</c><00:15:28.240><c> look</c><00:15:28.389><c> at</c><00:15:28.540><c> it</c>

00:15:28.740 --> 00:15:28.750 align:start position:0%
far as I can tell most people look at it
 

00:15:28.750 --> 00:15:31.980 align:start position:0%
far as I can tell most people look at it
and<00:15:28.899><c> ignore</c><00:15:29.199><c> it</c><00:15:29.790><c> because</c><00:15:30.790><c> it's</c><00:15:31.120><c> it's</c><00:15:31.449><c> somewhat</c>

00:15:31.980 --> 00:15:31.990 align:start position:0%
and ignore it because it's it's somewhat
 

00:15:31.990 --> 00:15:33.689 align:start position:0%
and ignore it because it's it's somewhat
complicated<00:15:32.529><c> probably</c><00:15:32.949><c> appears</c><00:15:33.250><c> even</c><00:15:33.490><c> more</c>

00:15:33.689 --> 00:15:33.699 align:start position:0%
complicated probably appears even more
 

00:15:33.699 --> 00:15:36.780 align:start position:0%
complicated probably appears even more
complicated<00:15:34.329><c> than</c><00:15:34.449><c> it</c><00:15:34.629><c> actually</c><00:15:34.779><c> is</c><00:15:35.610><c> it's</c><00:15:36.610><c> not</c>

00:15:36.780 --> 00:15:36.790 align:start position:0%
complicated than it actually is it's not
 

00:15:36.790 --> 00:15:38.639 align:start position:0%
complicated than it actually is it's not
really<00:15:37.060><c> commonly</c><00:15:37.449><c> used</c><00:15:37.779><c> but</c><00:15:37.990><c> it</c><00:15:38.110><c> actually</c><00:15:38.319><c> is</c>

00:15:38.639 --> 00:15:38.649 align:start position:0%
really commonly used but it actually is
 

00:15:38.649 --> 00:15:41.600 align:start position:0%
really commonly used but it actually is
a<00:15:38.680><c> better</c><00:15:38.980><c> replacement</c><00:15:39.370><c> for</c><00:15:39.910><c> finalizes</c><00:15:40.600><c> it</c>

00:15:41.600 --> 00:15:41.610 align:start position:0%
a better replacement for finalizes it
 

00:15:41.610 --> 00:15:44.069 align:start position:0%
a better replacement for finalizes it
avoids<00:15:42.610><c> the</c><00:15:42.879><c> problem</c><00:15:43.300><c> that</c><00:15:43.420><c> the</c><00:15:43.569><c> finalizar</c>

00:15:44.069 --> 00:15:44.079 align:start position:0%
avoids the problem that the finalizar
 

00:15:44.079 --> 00:15:46.800 align:start position:0%
avoids the problem that the finalizar
can<00:15:44.439><c> see</c><00:15:44.649><c> finalized</c><00:15:45.220><c> objects</c><00:15:46.060><c> because</c><00:15:46.449><c> of</c><00:15:46.600><c> the</c>

00:15:46.800 --> 00:15:46.810 align:start position:0%
can see finalized objects because of the
 

00:15:46.810 --> 00:15:49.860 align:start position:0%
can see finalized objects because of the
ordering<00:15:47.319><c> issues</c><00:15:48.240><c> phantom</c><00:15:49.240><c> references</c>

00:15:49.860 --> 00:15:49.870 align:start position:0%
ordering issues phantom references
 

00:15:49.870 --> 00:15:52.019 align:start position:0%
ordering issues phantom references
ensure<00:15:50.439><c> that</c><00:15:50.769><c> you</c><00:15:50.980><c> run</c><00:15:51.160><c> the</c><00:15:51.339><c> cleanup</c><00:15:51.639><c> code</c>

00:15:52.019 --> 00:15:52.029 align:start position:0%
ensure that you run the cleanup code
 

00:15:52.029 --> 00:15:54.329 align:start position:0%
ensure that you run the cleanup code
only<00:15:52.329><c> when</c><00:15:52.689><c> the</c><00:15:52.810><c> object</c><00:15:53.259><c> really</c><00:15:53.529><c> is</c><00:15:53.680><c> about</c><00:15:54.189><c> to</c>

00:15:54.329 --> 00:15:54.339 align:start position:0%
only when the object really is about to
 

00:15:54.339 --> 00:15:56.040 align:start position:0%
only when the object really is about to
go<00:15:54.490><c> away</c><00:15:54.579><c> and</c><00:15:54.850><c> nobody</c><00:15:55.149><c> can</c><00:15:55.300><c> use</c><00:15:55.480><c> it</c><00:15:55.660><c> and</c><00:15:55.810><c> nobody</c>

00:15:56.040 --> 00:15:56.050 align:start position:0%
go away and nobody can use it and nobody
 

00:15:56.050 --> 00:15:57.650 align:start position:0%
go away and nobody can use it and nobody
can<00:15:56.199><c> see</c><00:15:56.410><c> it</c><00:15:56.500><c> anymore</c>

00:15:57.650 --> 00:15:57.660 align:start position:0%
can see it anymore
 

00:15:57.660 --> 00:16:00.059 align:start position:0%
can see it anymore
it<00:15:58.660><c> suddenly</c><00:15:58.930><c> deals</c><00:15:59.290><c> with</c><00:15:59.500><c> finalized</c>

00:16:00.059 --> 00:16:00.069 align:start position:0%
it suddenly deals with finalized
 

00:16:00.069 --> 00:16:02.720 align:start position:0%
it suddenly deals with finalized
application<00:16:00.730><c> issues</c><00:16:01.060><c> it's</c><00:16:01.300><c> not</c><00:16:01.449><c> going</c><00:16:01.750><c> away</c>

00:16:02.720 --> 00:16:02.730 align:start position:0%
application issues it's not going away
 

00:16:02.730 --> 00:16:06.329 align:start position:0%
application issues it's not going away
it<00:16:03.730><c> also</c><00:16:04.569><c> ends</c><00:16:05.079><c> up</c><00:16:05.139><c> dealing</c><00:16:05.439><c> with</c><00:16:05.740><c> some</c><00:16:06.040><c> of</c><00:16:06.069><c> the</c>

00:16:06.329 --> 00:16:06.339 align:start position:0%
it also ends up dealing with some of the
 

00:16:06.339 --> 00:16:08.819 align:start position:0%
it also ends up dealing with some of the
more<00:16:06.550><c> subtle</c><00:16:06.730><c> issues</c><00:16:07.329><c> though</c><00:16:07.629><c> not</c><00:16:08.470><c> all</c><00:16:08.680><c> of</c>

00:16:08.819 --> 00:16:08.829 align:start position:0%
more subtle issues though not all of
 

00:16:08.829 --> 00:16:11.100 align:start position:0%
more subtle issues though not all of
them<00:16:09.040><c> it</c><00:16:09.220><c> does</c><00:16:09.819><c> not</c><00:16:10.000><c> feel</c><00:16:10.360><c> with</c><00:16:10.660><c> the</c><00:16:10.779><c> premature</c>

00:16:11.100 --> 00:16:11.110 align:start position:0%
them it does not feel with the premature
 

00:16:11.110 --> 00:16:12.840 align:start position:0%
them it does not feel with the premature
cleanup<00:16:11.709><c> issue</c><00:16:11.949><c> that</c><00:16:12.279><c> I</c><00:16:12.310><c> mentioned</c><00:16:12.399><c> earlier</c>

00:16:12.840 --> 00:16:12.850 align:start position:0%
cleanup issue that I mentioned earlier
 

00:16:12.850 --> 00:16:14.850 align:start position:0%
cleanup issue that I mentioned earlier
that<00:16:13.060><c> an</c><00:16:13.389><c> object</c><00:16:13.779><c> can</c><00:16:13.839><c> be</c><00:16:14.079><c> finalized</c><00:16:14.589><c> while</c>

00:16:14.850 --> 00:16:14.860 align:start position:0%
that an object can be finalized while
 

00:16:14.860 --> 00:16:16.499 align:start position:0%
that an object can be finalized while
one<00:16:15.040><c> of</c><00:16:15.160><c> its</c><00:16:15.279><c> methods</c><00:16:15.459><c> is</c><00:16:15.819><c> still</c><00:16:16.000><c> running</c><00:16:16.209><c> for</c>

00:16:16.499 --> 00:16:16.509 align:start position:0%
one of its methods is still running for
 

00:16:16.509 --> 00:16:19.769 align:start position:0%
one of its methods is still running for
example<00:16:17.310><c> the</c><00:16:18.310><c> major</c><00:16:18.519><c> difficulty</c><00:16:19.269><c> with</c><00:16:19.420><c> using</c>

00:16:19.769 --> 00:16:19.779 align:start position:0%
example the major difficulty with using
 

00:16:19.779 --> 00:16:21.449 align:start position:0%
example the major difficulty with using
it<00:16:19.899><c> and</c><00:16:20.019><c> I'll</c><00:16:20.079><c> go</c><00:16:20.259><c> through</c><00:16:20.439><c> an</c><00:16:20.529><c> example</c><00:16:21.040><c> here</c>

00:16:21.449 --> 00:16:21.459 align:start position:0%
it and I'll go through an example here
 

00:16:21.459 --> 00:16:24.090 align:start position:0%
it and I'll go through an example here
is<00:16:21.610><c> that</c><00:16:22.060><c> it's</c><00:16:22.240><c> relatively</c><00:16:23.170><c> complicated</c><00:16:23.680><c> to</c>

00:16:24.090 --> 00:16:24.100 align:start position:0%
is that it's relatively complicated to
 

00:16:24.100 --> 00:16:26.340 align:start position:0%
is that it's relatively complicated to
use<00:16:24.310><c> at</c><00:16:24.550><c> the</c><00:16:24.670><c> moment</c><00:16:24.819><c> and</c><00:16:25.240><c> we're</c><00:16:26.079><c> in</c><00:16:26.230><c> the</c>

00:16:26.340 --> 00:16:26.350 align:start position:0%
use at the moment and we're in the
 

00:16:26.350 --> 00:16:27.990 align:start position:0%
use at the moment and we're in the
process<00:16:26.829><c> of</c><00:16:26.949><c> making</c><00:16:27.129><c> that</c><00:16:27.399><c> better</c><00:16:27.699><c> I</c><00:16:27.819><c> think</c>

00:16:27.990 --> 00:16:28.000 align:start position:0%
process of making that better I think
 

00:16:28.000 --> 00:16:29.550 align:start position:0%
process of making that better I think
various<00:16:28.449><c> groups</c><00:16:28.720><c> are</c><00:16:28.899><c> in</c><00:16:28.959><c> the</c><00:16:29.079><c> process</c><00:16:29.259><c> of</c>

00:16:29.550 --> 00:16:29.560 align:start position:0%
various groups are in the process of
 

00:16:29.560 --> 00:16:33.240 align:start position:0%
various groups are in the process of
making<00:16:29.920><c> that</c><00:16:30.040><c> better</c><00:16:30.810><c> so</c><00:16:31.810><c> Java</c><00:16:32.290><c> 9</c><00:16:32.589><c> actually</c>

00:16:33.240 --> 00:16:33.250 align:start position:0%
making that better so Java 9 actually
 

00:16:33.250 --> 00:16:35.249 align:start position:0%
making that better so Java 9 actually
has<00:16:33.490><c> this</c><00:16:33.730><c> notion</c><00:16:34.029><c> of</c><00:16:34.269><c> a</c><00:16:34.360><c> cleaner</c><00:16:34.660><c> which</c><00:16:35.019><c> makes</c>

00:16:35.249 --> 00:16:35.259 align:start position:0%
has this notion of a cleaner which makes
 

00:16:35.259 --> 00:16:39.120 align:start position:0%
has this notion of a cleaner which makes
this<00:16:35.410><c> a</c><00:16:35.470><c> little</c><00:16:35.740><c> bit</c><00:16:36.009><c> simpler</c><00:16:37.589><c> weave</c><00:16:38.589><c> inside</c>

00:16:39.120 --> 00:16:39.130 align:start position:0%
this a little bit simpler weave inside
 

00:16:39.130 --> 00:16:41.400 align:start position:0%
this a little bit simpler weave inside
the<00:16:39.670><c> platform</c><00:16:39.939><c> we</c><00:16:40.540><c> actually</c><00:16:40.990><c> have</c><00:16:41.139><c> something</c>

00:16:41.400 --> 00:16:41.410 align:start position:0%
the platform we actually have something
 

00:16:41.410 --> 00:16:43.319 align:start position:0%
the platform we actually have something
called<00:16:41.589><c> native</c><00:16:42.100><c> allocation</c><00:16:42.730><c> registry</c><00:16:43.300><c> that</c>

00:16:43.319 --> 00:16:43.329 align:start position:0%
called native allocation registry that
 

00:16:43.329 --> 00:16:45.509 align:start position:0%
called native allocation registry that
deals<00:16:43.810><c> with</c><00:16:43.899><c> some</c><00:16:44.199><c> of</c><00:16:44.319><c> this</c><00:16:44.470><c> this</c><00:16:45.069><c> is</c><00:16:45.130><c> at</c><00:16:45.399><c> the</c>

00:16:45.509 --> 00:16:45.519 align:start position:0%
deals with some of this this is at the
 

00:16:45.519 --> 00:16:48.870 align:start position:0%
deals with some of this this is at the
moment<00:16:45.670><c> not</c><00:16:45.939><c> a</c><00:16:46.000><c> public</c><00:16:46.449><c> API</c><00:16:47.550><c> but</c><00:16:48.550><c> if</c><00:16:48.699><c> you're</c>

00:16:48.870 --> 00:16:48.880 align:start position:0%
moment not a public API but if you're
 

00:16:48.880 --> 00:16:50.400 align:start position:0%
moment not a public API but if you're
interested<00:16:49.420><c> in</c><00:16:49.540><c> this</c><00:16:49.689><c> we're</c><00:16:49.959><c> trying</c><00:16:50.230><c> to</c>

00:16:50.400 --> 00:16:50.410 align:start position:0%
interested in this we're trying to
 

00:16:50.410 --> 00:16:51.929 align:start position:0%
interested in this we're trying to
assess<00:16:50.769><c> whether</c><00:16:51.069><c> it</c><00:16:51.279><c> would</c><00:16:51.399><c> be</c><00:16:51.519><c> good</c><00:16:51.670><c> to</c><00:16:51.790><c> make</c>

00:16:51.929 --> 00:16:51.939 align:start position:0%
assess whether it would be good to make
 

00:16:51.939 --> 00:16:54.120 align:start position:0%
assess whether it would be good to make
that<00:16:52.180><c> a</c><00:16:52.209><c> public</c><00:16:52.630><c> API</c><00:16:52.810><c> or</c><00:16:53.350><c> whether</c><00:16:53.620><c> and</c><00:16:53.949><c> whether</c>

00:16:54.120 --> 00:16:54.130 align:start position:0%
that a public API or whether and whether
 

00:16:54.130 --> 00:17:00.420 align:start position:0%
that a public API or whether and whether
this<00:16:54.339><c> is</c><00:16:54.490><c> the</c><00:16:54.519><c> right</c><00:16:54.759><c> API</c><00:16:55.180><c> to</c><00:16:55.810><c> do</c><00:16:55.959><c> that</c><00:16:56.139><c> with</c><00:16:59.430><c> so</c>

00:17:00.420 --> 00:17:00.430 align:start position:0%
this is the right API to do that with so
 

00:17:00.430 --> 00:17:02.340 align:start position:0%
this is the right API to do that with so
what<00:17:00.639><c> should</c><00:17:00.850><c> you</c><00:17:01.000><c> use</c><00:17:01.180><c> instead</c><00:17:01.689><c> well</c><00:17:02.319><c> I</c>

00:17:02.340 --> 00:17:02.350 align:start position:0%
what should you use instead well I
 

00:17:02.350 --> 00:17:04.319 align:start position:0%
what should you use instead well I
mentioned<00:17:02.680><c> these</c><00:17:02.920><c> phantom</c><00:17:03.370><c> references</c><00:17:04.089><c> so</c>

00:17:04.319 --> 00:17:04.329 align:start position:0%
mentioned these phantom references so
 

00:17:04.329 --> 00:17:08.179 align:start position:0%
mentioned these phantom references so
what<00:17:04.510><c> are</c><00:17:04.689><c> they</c><00:17:04.900><c> a</c><00:17:06.179><c> phantom</c><00:17:07.179><c> reference</c><00:17:07.780><c> is</c>

00:17:08.179 --> 00:17:08.189 align:start position:0%
what are they a phantom reference is
 

00:17:08.189 --> 00:17:10.949 align:start position:0%
what are they a phantom reference is
shown<00:17:09.189><c> here</c><00:17:09.549><c> with</c><00:17:09.760><c> the</c><00:17:09.789><c> ghost</c><00:17:10.150><c> next</c><00:17:10.510><c> to</c><00:17:10.780><c> it</c>

00:17:10.949 --> 00:17:10.959 align:start position:0%
shown here with the ghost next to it
 

00:17:10.959 --> 00:17:15.569 align:start position:0%
shown here with the ghost next to it
it's<00:17:11.949><c> an</c><00:17:12.400><c> object</c><00:17:13.380><c> that's</c><00:17:14.380><c> associated</c><00:17:14.919><c> with</c>

00:17:15.569 --> 00:17:15.579 align:start position:0%
it's an object that's associated with
 

00:17:15.579 --> 00:17:17.279 align:start position:0%
it's an object that's associated with
the<00:17:15.730><c> object</c><00:17:16.179><c> whose</c><00:17:16.390><c> lifetime</c><00:17:16.630><c> you</c><00:17:17.049><c> want</c><00:17:17.199><c> to</c>

00:17:17.279 --> 00:17:17.289 align:start position:0%
the object whose lifetime you want to
 

00:17:17.289 --> 00:17:20.819 align:start position:0%
the object whose lifetime you want to
monitor<00:17:17.789><c> so</c><00:17:18.789><c> it</c><00:17:18.939><c> doesn't</c><00:17:19.329><c> actually</c><00:17:20.319><c> it</c>

00:17:20.819 --> 00:17:20.829 align:start position:0%
monitor so it doesn't actually it
 

00:17:20.829 --> 00:17:24.120 align:start position:0%
monitor so it doesn't actually it
doesn't<00:17:21.130><c> actually</c><00:17:21.789><c> point</c><00:17:22.299><c> to</c><00:17:22.449><c> or</c><00:17:22.990><c> equal</c><00:17:23.860><c> to</c>

00:17:24.120 --> 00:17:24.130 align:start position:0%
doesn't actually point to or equal to
 

00:17:24.130 --> 00:17:26.539 align:start position:0%
doesn't actually point to or equal to
the<00:17:24.309><c> the</c><00:17:24.909><c> binary</c><00:17:25.270><c> poly</c><00:17:25.600><c> object</c><00:17:26.199><c> that</c><00:17:26.319><c> we</c><00:17:26.500><c> want</c>

00:17:26.539 --> 00:17:26.549 align:start position:0%
the the binary poly object that we want
 

00:17:26.549 --> 00:17:28.919 align:start position:0%
the the binary poly object that we want
monitored<00:17:27.549><c> and</c><00:17:27.760><c> then</c><00:17:27.880><c> we</c><00:17:28.030><c> want</c><00:17:28.390><c> to</c><00:17:28.510><c> be</c><00:17:28.600><c> cleaned</c>

00:17:28.919 --> 00:17:28.929 align:start position:0%
monitored and then we want to be cleaned
 

00:17:28.929 --> 00:17:31.320 align:start position:0%
monitored and then we want to be cleaned
up<00:17:29.080><c> after</c><00:17:29.590><c> so</c><00:17:30.220><c> you</c><00:17:30.250><c> can</c><00:17:30.640><c> sort</c><00:17:30.820><c> of</c><00:17:30.850><c> think</c><00:17:31.059><c> of</c><00:17:31.210><c> the</c>

00:17:31.320 --> 00:17:31.330 align:start position:0%
up after so you can sort of think of the
 

00:17:31.330 --> 00:17:33.240 align:start position:0%
up after so you can sort of think of the
phantom<00:17:31.750><c> reference</c><00:17:32.200><c> as</c><00:17:32.380><c> the</c><00:17:32.559><c> last</c><00:17:32.770><c> will</c><00:17:33.070><c> and</c>

00:17:33.240 --> 00:17:33.250 align:start position:0%
phantom reference as the last will and
 

00:17:33.250 --> 00:17:35.490 align:start position:0%
phantom reference as the last will and
testament<00:17:33.820><c> of</c><00:17:33.909><c> the</c><00:17:34.090><c> years</c><00:17:34.270><c> of</c><00:17:34.450><c> Java</c><00:17:34.659><c> object</c>

00:17:35.490 --> 00:17:35.500 align:start position:0%
testament of the years of Java object
 

00:17:35.500 --> 00:17:37.560 align:start position:0%
testament of the years of Java object
it<00:17:35.950><c> tells</c><00:17:36.280><c> you</c><00:17:36.460><c> what</c><00:17:36.610><c> to</c><00:17:36.670><c> do</c><00:17:36.910><c> how</c><00:17:37.060><c> to</c><00:17:37.090><c> clean</c><00:17:37.420><c> up</c>

00:17:37.560 --> 00:17:37.570 align:start position:0%
it tells you what to do how to clean up
 

00:17:37.570 --> 00:17:39.330 align:start position:0%
it tells you what to do how to clean up
the<00:17:37.720><c> object</c><00:17:38.140><c> once</c><00:17:38.380><c> a</c><00:17:38.500><c> die</c><00:17:38.620><c> once</c><00:17:38.950><c> the</c><00:17:39.100><c> Java</c>

00:17:39.330 --> 00:17:39.340 align:start position:0%
the object once a die once the Java
 

00:17:39.340 --> 00:17:44.460 align:start position:0%
the object once a die once the Java
object<00:17:39.460><c> dies</c><00:17:40.110><c> and</c><00:17:41.880><c> so</c><00:17:42.880><c> both</c><00:17:43.240><c> the</c><00:17:43.570><c> the</c><00:17:43.600><c> way</c><00:17:44.260><c> this</c>

00:17:44.460 --> 00:17:44.470 align:start position:0%
object dies and so both the the way this
 

00:17:44.470 --> 00:17:48.360 align:start position:0%
object dies and so both the the way this
works<00:17:44.890><c> normally</c><00:17:45.990><c> in</c><00:17:46.990><c> order</c><00:17:47.350><c> to</c><00:17:47.650><c> actually</c><00:17:47.830><c> use</c>

00:17:48.360 --> 00:17:48.370 align:start position:0%
works normally in order to actually use
 

00:17:48.370 --> 00:17:49.890 align:start position:0%
works normally in order to actually use
a<00:17:48.400><c> phantom</c><00:17:49.000><c> reference</c><00:17:49.450><c> you'll</c><00:17:49.660><c> usually</c>

00:17:49.890 --> 00:17:49.900 align:start position:0%
a phantom reference you'll usually
 

00:17:49.900 --> 00:17:52.620 align:start position:0%
a phantom reference you'll usually
inherit<00:17:50.650><c> from</c><00:17:50.920><c> it</c><00:17:51.100><c> and</c><00:17:51.400><c> the</c><00:17:52.030><c> inherited</c>

00:17:52.620 --> 00:17:52.630 align:start position:0%
inherit from it and the inherited
 

00:17:52.630 --> 00:17:55.920 align:start position:0%
inherit from it and the inherited
derived<00:17:53.050><c> class</c><00:17:53.830><c> the</c><00:17:54.610><c> Class</c><00:17:54.850><c> VI</c><00:17:55.090><c> from</c><00:17:55.270><c> Phantom</c>

00:17:55.920 --> 00:17:55.930 align:start position:0%
derived class the Class VI from Phantom
 

00:17:55.930 --> 00:17:58.290 align:start position:0%
derived class the Class VI from Phantom
reference<00:17:56.350><c> will</c><00:17:56.890><c> have</c><00:17:57.040><c> a</c><00:17:57.070><c> pointer</c><00:17:57.490><c> to</c><00:17:57.520><c> the</c><00:17:57.730><c> C++</c>

00:17:58.290 --> 00:17:58.300 align:start position:0%
reference will have a pointer to the C++
 

00:17:58.300 --> 00:18:01.830 align:start position:0%
reference will have a pointer to the C++
object<00:17:58.930><c> along</c><00:17:59.590><c> with</c><00:18:00.040><c> the</c><00:18:00.310><c> the</c><00:18:00.790><c> Java</c><00:18:01.300><c> binary</c>

00:18:01.830 --> 00:18:01.840 align:start position:0%
object along with the the Java binary
 

00:18:01.840 --> 00:18:03.990 align:start position:0%
object along with the the Java binary
poly<00:18:02.140><c> object</c><00:18:02.680><c> there's</c><00:18:03.310><c> also</c><00:18:03.580><c> a</c><00:18:03.730><c> reference</c>

00:18:03.990 --> 00:18:04.000 align:start position:0%
poly object there's also a reference
 

00:18:04.000 --> 00:18:07.260 align:start position:0%
poly object there's also a reference
queue<00:18:04.510><c> off</c><00:18:04.660><c> to</c><00:18:04.900><c> the</c><00:18:05.020><c> side</c><00:18:05.230><c> here</c><00:18:06.030><c> which</c><00:18:07.030><c> I'll</c>

00:18:07.260 --> 00:18:07.270 align:start position:0%
queue off to the side here which I'll
 

00:18:07.270 --> 00:18:09.180 align:start position:0%
queue off to the side here which I'll
show<00:18:07.600><c> you</c><00:18:07.630><c> what</c><00:18:07.870><c> all</c><00:18:08.110><c> that</c><00:18:08.260><c> plays</c><00:18:08.530><c> in</c><00:18:08.710><c> a</c><00:18:08.830><c> second</c>

00:18:09.180 --> 00:18:09.190 align:start position:0%
show you what all that plays in a second
 

00:18:09.190 --> 00:18:11.190 align:start position:0%
show you what all that plays in a second
here<00:18:09.400><c> notice</c><00:18:09.970><c> that</c><00:18:10.090><c> I</c><00:18:10.270><c> put</c><00:18:10.360><c> those</c><00:18:10.720><c> grounds</c>

00:18:11.190 --> 00:18:11.200 align:start position:0%
here notice that I put those grounds
 

00:18:11.200 --> 00:18:12.900 align:start position:0%
here notice that I put those grounds
symbols<00:18:11.590><c> in</c><00:18:11.800><c> here</c><00:18:12.040><c> in</c><00:18:12.100><c> a</c><00:18:12.160><c> few</c><00:18:12.340><c> places</c><00:18:12.490><c> to</c>

00:18:12.900 --> 00:18:12.910 align:start position:0%
symbols in here in a few places to
 

00:18:12.910 --> 00:18:15.150 align:start position:0%
symbols in here in a few places to
indicate<00:18:13.360><c> that</c><00:18:13.630><c> these</c><00:18:13.810><c> are</c><00:18:13.980><c> those</c><00:18:14.980><c> are</c>

00:18:15.150 --> 00:18:15.160 align:start position:0%
indicate that these are those are
 

00:18:15.160 --> 00:18:16.800 align:start position:0%
indicate that these are those are
objects<00:18:15.700><c> that</c><00:18:15.730><c> we</c><00:18:15.940><c> need</c><00:18:16.090><c> to</c><00:18:16.180><c> make</c><00:18:16.330><c> sure</c><00:18:16.360><c> don't</c>

00:18:16.800 --> 00:18:16.810 align:start position:0%
objects that we need to make sure don't
 

00:18:16.810 --> 00:18:18.540 align:start position:0%
objects that we need to make sure don't
get<00:18:17.050><c> garbage</c><00:18:17.440><c> collected</c><00:18:17.470><c> so</c><00:18:18.100><c> we</c><00:18:18.220><c> need</c><00:18:18.370><c> to</c><00:18:18.460><c> have</c>

00:18:18.540 --> 00:18:18.550 align:start position:0%
get garbage collected so we need to have
 

00:18:18.550 --> 00:18:20.160 align:start position:0%
get garbage collected so we need to have
some<00:18:18.730><c> mechanism</c><00:18:19.270><c> for</c><00:18:19.300><c> keeping</c><00:18:19.540><c> those</c><00:18:19.840><c> around</c>

00:18:20.160 --> 00:18:20.170 align:start position:0%
some mechanism for keeping those around
 

00:18:20.170 --> 00:18:21.810 align:start position:0%
some mechanism for keeping those around
that<00:18:20.530><c> applies</c><00:18:20.860><c> to</c><00:18:20.890><c> both</c><00:18:21.160><c> defense</c><00:18:21.700><c> and</c>

00:18:21.810 --> 00:18:21.820 align:start position:0%
that applies to both defense and
 

00:18:21.820 --> 00:18:24.930 align:start position:0%
that applies to both defense and
reference<00:18:22.300><c> and</c><00:18:22.510><c> the</c><00:18:22.570><c> reference</c><00:18:22.930><c> queue</c><00:18:23.940><c> so</c>

00:18:24.930 --> 00:18:24.940 align:start position:0%
reference and the reference queue so
 

00:18:24.940 --> 00:18:27.720 align:start position:0%
reference and the reference queue so
what<00:18:25.120><c> happens</c><00:18:25.660><c> after</c><00:18:26.020><c> binary</c><00:18:27.010><c> poly</c><00:18:27.280><c> becomes</c>

00:18:27.720 --> 00:18:27.730 align:start position:0%
what happens after binary poly becomes
 

00:18:27.730 --> 00:18:31.740 align:start position:0%
what happens after binary poly becomes
unreachable<00:18:29.010><c> the</c><00:18:30.010><c> phantom</c><00:18:30.880><c> reference</c><00:18:31.360><c> itself</c>

00:18:31.740 --> 00:18:31.750 align:start position:0%
unreachable the phantom reference itself
 

00:18:31.750 --> 00:18:33.660 align:start position:0%
unreachable the phantom reference itself
gets<00:18:32.080><c> added</c><00:18:32.380><c> to</c><00:18:32.560><c> the</c><00:18:32.830><c> associated</c><00:18:33.460><c> reference</c>

00:18:33.660 --> 00:18:33.670 align:start position:0%
gets added to the associated reference
 

00:18:33.670 --> 00:18:36.180 align:start position:0%
gets added to the associated reference
queue<00:18:34.240><c> and</c><00:18:34.450><c> that's</c><00:18:35.380><c> basically</c><00:18:35.800><c> all</c><00:18:35.920><c> that</c>

00:18:36.180 --> 00:18:36.190 align:start position:0%
queue and that's basically all that
 

00:18:36.190 --> 00:18:38.220 align:start position:0%
queue and that's basically all that
happens<00:18:36.610><c> the</c><00:18:36.760><c> Java</c><00:18:37.000><c> object</c><00:18:37.120><c> gets</c><00:18:37.660><c> immediately</c>

00:18:38.220 --> 00:18:38.230 align:start position:0%
happens the Java object gets immediately
 

00:18:38.230 --> 00:18:40.410 align:start position:0%
happens the Java object gets immediately
collected<00:18:38.530><c> there's</c><00:18:39.340><c> no</c><00:18:39.670><c> longer</c><00:18:40.000><c> any</c><00:18:40.150><c> need</c><00:18:40.240><c> for</c>

00:18:40.410 --> 00:18:40.420 align:start position:0%
collected there's no longer any need for
 

00:18:40.420 --> 00:18:42.420 align:start position:0%
collected there's no longer any need for
it<00:18:40.690><c> because</c><00:18:41.140><c> the</c><00:18:41.290><c> phantom</c><00:18:41.620><c> reference</c><00:18:42.010><c> itself</c>

00:18:42.420 --> 00:18:42.430 align:start position:0%
it because the phantom reference itself
 

00:18:42.430 --> 00:18:49.890 align:start position:0%
it because the phantom reference itself
knows<00:18:42.940><c> how</c><00:18:43.180><c> to</c><00:18:43.240><c> clean</c><00:18:43.540><c> up</c><00:18:47.670><c> so</c><00:18:48.670><c> I'll</c><00:18:49.180><c> show</c><00:18:49.630><c> you</c><00:18:49.660><c> a</c>

00:18:49.890 --> 00:18:49.900 align:start position:0%
knows how to clean up so I'll show you a
 

00:18:49.900 --> 00:18:52.110 align:start position:0%
knows how to clean up so I'll show you a
sort<00:18:50.560><c> of</c><00:18:50.620><c> quick</c><00:18:50.890><c> implementation</c><00:18:51.790><c> of</c><00:18:51.940><c> this</c>

00:18:52.110 --> 00:18:52.120 align:start position:0%
sort of quick implementation of this
 

00:18:52.120 --> 00:18:55.680 align:start position:0%
sort of quick implementation of this
year<00:18:52.570><c> in</c><00:18:52.840><c> in</c><00:18:53.170><c> this</c><00:18:53.350><c> case</c><00:18:54.310><c> this</c><00:18:54.970><c> pub</c><00:18:55.240><c> actually</c>

00:18:55.680 --> 00:18:55.690 align:start position:0%
year in in this case this pub actually
 

00:18:55.690 --> 00:18:57.900 align:start position:0%
year in in this case this pub actually
is<00:18:55.840><c> fairly</c><00:18:56.110><c> easy</c><00:18:56.230><c> so</c><00:18:56.710><c> we've</c><00:18:56.950><c> modified</c><00:18:57.310><c> binary</c>

00:18:57.900 --> 00:18:57.910 align:start position:0%
is fairly easy so we've modified binary
 

00:18:57.910 --> 00:19:00.960 align:start position:0%
is fairly easy so we've modified binary
poly<00:18:58.620><c> to</c><00:18:59.620><c> deal</c><00:18:59.830><c> with</c><00:19:00.100><c> this</c><00:19:00.280><c> sort</c><00:19:00.490><c> of</c><00:19:00.550><c> reference</c>

00:19:00.960 --> 00:19:00.970 align:start position:0%
poly to deal with this sort of reference
 

00:19:00.970 --> 00:19:04.320 align:start position:0%
poly to deal with this sort of reference
cleanup<00:19:01.620><c> and</c><00:19:02.620><c> what</c><00:19:03.160><c> I've</c><00:19:03.280><c> done</c><00:19:03.520><c> is</c><00:19:03.790><c> and</c><00:19:04.030><c> on</c><00:19:04.210><c> the</c>

00:19:04.320 --> 00:19:04.330 align:start position:0%
cleanup and what I've done is and on the
 

00:19:04.330 --> 00:19:06.540 align:start position:0%
cleanup and what I've done is and on the
next<00:19:04.570><c> slide</c><00:19:04.690><c> I'll</c><00:19:05.140><c> show</c><00:19:05.170><c> you</c><00:19:05.470><c> BP</c><00:19:06.100><c> phantom</c>

00:19:06.540 --> 00:19:06.550 align:start position:0%
next slide I'll show you BP phantom
 

00:19:06.550 --> 00:19:09.600 align:start position:0%
next slide I'll show you BP phantom
reference<00:19:07.860><c> implementation</c><00:19:08.860><c> that</c><00:19:09.040><c> inherits</c>

00:19:09.600 --> 00:19:09.610 align:start position:0%
reference implementation that inherits
 

00:19:09.610 --> 00:19:11.340 align:start position:0%
reference implementation that inherits
from<00:19:09.700><c> phantom</c><00:19:10.240><c> references</c><00:19:10.870><c> the</c><00:19:10.990><c> kind</c><00:19:11.200><c> of</c>

00:19:11.340 --> 00:19:11.350 align:start position:0%
from phantom references the kind of
 

00:19:11.350 --> 00:19:13.470 align:start position:0%
from phantom references the kind of
phantom<00:19:11.680><c> reference</c><00:19:12.070><c> that</c><00:19:12.250><c> specialized</c><00:19:12.790><c> with</c>

00:19:13.470 --> 00:19:13.480 align:start position:0%
phantom reference that specialized with
 

00:19:13.480 --> 00:19:15.890 align:start position:0%
phantom reference that specialized with
some<00:19:13.720><c> additional</c><00:19:14.140><c> functionality</c><00:19:14.380><c> here</c><00:19:15.310><c> and</c>

00:19:15.890 --> 00:19:15.900 align:start position:0%
some additional functionality here and
 

00:19:15.900 --> 00:19:19.200 align:start position:0%
some additional functionality here and
what<00:19:16.900><c> this</c><00:19:17.110><c> what</c><00:19:17.680><c> this</c><00:19:17.890><c> does</c><00:19:18.160><c> here</c><00:19:18.610><c> is</c><00:19:18.880><c> we</c>

00:19:19.200 --> 00:19:19.210 align:start position:0%
what this what this does here is we
 

00:19:19.210 --> 00:19:20.910 align:start position:0%
what this what this does here is we
still<00:19:19.480><c> have</c><00:19:19.660><c> the</c><00:19:19.780><c> native</c><00:19:20.080><c> delete</c><00:19:20.380><c> method</c><00:19:20.770><c> that</c>

00:19:20.910 --> 00:19:20.920 align:start position:0%
still have the native delete method that
 

00:19:20.920 --> 00:19:24.770 align:start position:0%
still have the native delete method that
actually<00:19:21.280><c> he</c><00:19:21.400><c> allocates</c><00:19:21.760><c> the</c><00:19:21.910><c> C++</c><00:19:22.510><c> object</c>

00:19:24.770 --> 00:19:24.780 align:start position:0%
actually he allocates the C++ object
 

00:19:24.780 --> 00:19:28.500 align:start position:0%
actually he allocates the C++ object
when<00:19:25.780><c> I</c><00:19:26.160><c> whenever</c><00:19:27.160><c> I</c><00:19:27.400><c> allocate</c><00:19:28.150><c> a</c><00:19:28.180><c> binary</c>

00:19:28.500 --> 00:19:28.510 align:start position:0%
when I whenever I allocate a binary
 

00:19:28.510 --> 00:19:30.270 align:start position:0%
when I whenever I allocate a binary
object<00:19:29.230><c> and</c><00:19:29.440><c> now</c><00:19:29.590><c> do</c><00:19:29.650><c> it</c><00:19:29.920><c> through</c><00:19:30.160><c> this</c>

00:19:30.270 --> 00:19:30.280 align:start position:0%
object and now do it through this
 

00:19:30.280 --> 00:19:33.690 align:start position:0%
object and now do it through this
factory<00:19:30.760><c> method</c><00:19:31.650><c> which</c><00:19:32.650><c> allocates</c><00:19:33.280><c> via</c><00:19:33.490><c> which</c>

00:19:33.690 --> 00:19:33.700 align:start position:0%
factory method which allocates via which
 

00:19:33.700 --> 00:19:35.850 align:start position:0%
factory method which allocates via which
constructs<00:19:34.090><c> and</c><00:19:34.330><c> allocates</c><00:19:34.750><c> the</c><00:19:34.870><c> object</c><00:19:35.380><c> but</c>

00:19:35.850 --> 00:19:35.860 align:start position:0%
constructs and allocates the object but
 

00:19:35.860 --> 00:19:38.180 align:start position:0%
constructs and allocates the object but
then<00:19:36.010><c> immediately</c><00:19:36.250><c> goes</c><00:19:36.790><c> and</c><00:19:37.030><c> registers</c><00:19:37.630><c> it</c>

00:19:38.180 --> 00:19:38.190 align:start position:0%
then immediately goes and registers it
 

00:19:38.190 --> 00:19:41.070 align:start position:0%
then immediately goes and registers it
through<00:19:39.190><c> a</c><00:19:39.220><c> static</c><00:19:39.700><c> method</c><00:19:39.880><c> in</c><00:19:40.300><c> VP</c><00:19:40.660><c> phantom</c>

00:19:41.070 --> 00:19:41.080 align:start position:0%
through a static method in VP phantom
 

00:19:41.080 --> 00:19:42.600 align:start position:0%
through a static method in VP phantom
reference<00:19:41.500><c> the</c><00:19:41.650><c> way</c><00:19:41.770><c> I've</c><00:19:41.890><c> implemented</c><00:19:42.310><c> it</c>

00:19:42.600 --> 00:19:42.610 align:start position:0%
reference the way I've implemented it
 

00:19:42.610 --> 00:19:46.580 align:start position:0%
reference the way I've implemented it
here<00:19:43.200><c> now</c><00:19:44.200><c> what's</c><00:19:44.410><c> pp</c><00:19:44.770><c> phantom</c><00:19:45.160><c> reference</c>

00:19:46.580 --> 00:19:46.590 align:start position:0%
here now what's pp phantom reference
 

00:19:46.590 --> 00:19:50.279 align:start position:0%
here now what's pp phantom reference
so<00:19:47.590><c> that</c><00:19:47.740><c> fits</c><00:19:48.039><c> on</c><00:19:48.220><c> a</c><00:19:48.250><c> slide</c><00:19:48.700><c> in</c><00:19:49.179><c> the</c><00:19:49.210><c> same</c><00:19:49.539><c> in</c>

00:19:50.279 --> 00:19:50.289 align:start position:0%
so that fits on a slide in the same in
 

00:19:50.289 --> 00:19:52.980 align:start position:0%
so that fits on a slide in the same in
the<00:19:50.470><c> same</c><00:19:50.679><c> way</c><00:19:50.860><c> that</c><00:19:51.330><c> in</c><00:19:52.330><c> the</c><00:19:52.539><c> sense</c><00:19:52.750><c> of</c><00:19:52.870><c> the</c>

00:19:52.980 --> 00:19:52.990 align:start position:0%
the same way that in the sense of the
 

00:19:52.990 --> 00:19:54.600 align:start position:0%
the same way that in the sense of the
old<00:19:53.110><c> Midas</c><00:19:53.500><c> commercial</c><00:19:53.980><c> if</c><00:19:54.100><c> you</c><00:19:54.130><c> remember</c>

00:19:54.600 --> 00:19:54.610 align:start position:0%
old Midas commercial if you remember
 

00:19:54.610 --> 00:20:01.409 align:start position:0%
old Midas commercial if you remember
that<00:19:56.520><c> but</c><00:19:57.520><c> I</c><00:19:59.669><c> fetched</c><00:20:00.669><c> it</c><00:20:00.850><c> to</c><00:20:01.000><c> fit</c><00:20:01.179><c> it</c><00:20:01.270><c> on</c><00:20:01.390><c> a</c>

00:20:01.409 --> 00:20:01.419 align:start position:0%
that but I fetched it to fit it on a
 

00:20:01.419 --> 00:20:04.649 align:start position:0%
that but I fetched it to fit it on a
slide<00:20:01.779><c> here</c><00:20:02.460><c> so</c><00:20:03.460><c> what</c><00:20:03.640><c> that</c><00:20:03.789><c> does</c><00:20:04.029><c> is</c><00:20:04.090><c> it</c>

00:20:04.649 --> 00:20:04.659 align:start position:0%
slide here so what that does is it
 

00:20:04.659 --> 00:20:06.570 align:start position:0%
slide here so what that does is it
introduces<00:20:04.929><c> a</c><00:20:05.409><c> couple</c><00:20:05.860><c> of</c><00:20:05.950><c> static</c><00:20:06.400><c> data</c>

00:20:06.570 --> 00:20:06.580 align:start position:0%
introduces a couple of static data
 

00:20:06.580 --> 00:20:09.240 align:start position:0%
introduces a couple of static data
structures<00:20:07.179><c> one</c><00:20:08.049><c> of</c><00:20:08.230><c> them</c><00:20:08.440><c> is</c><00:20:08.679><c> the</c><00:20:08.860><c> actual</c>

00:20:09.240 --> 00:20:09.250 align:start position:0%
structures one of them is the actual
 

00:20:09.250 --> 00:20:11.070 align:start position:0%
structures one of them is the actual
reference<00:20:09.610><c> cue</c><00:20:09.970><c> which</c><00:20:10.179><c> will</c><00:20:10.390><c> be</c><00:20:10.480><c> used</c><00:20:10.720><c> to</c><00:20:10.960><c> in</c>

00:20:11.070 --> 00:20:11.080 align:start position:0%
reference cue which will be used to in
 

00:20:11.080 --> 00:20:14.430 align:start position:0%
reference cue which will be used to in
cue<00:20:11.490><c> phantom</c><00:20:12.490><c> these</c><00:20:13.059><c> PP</c><00:20:13.450><c> phantom</c><00:20:13.809><c> references</c>

00:20:14.430 --> 00:20:14.440 align:start position:0%
cue phantom these PP phantom references
 

00:20:14.440 --> 00:20:16.260 align:start position:0%
cue phantom these PP phantom references
once<00:20:14.679><c> the</c><00:20:14.830><c> corresponding</c><00:20:15.370><c> java</c><00:20:15.580><c> object</c><00:20:16.000><c> is</c><00:20:16.150><c> no</c>

00:20:16.260 --> 00:20:16.270 align:start position:0%
once the corresponding java object is no
 

00:20:16.270 --> 00:20:20.130 align:start position:0%
once the corresponding java object is no
longer<00:20:16.510><c> needed</c><00:20:16.840><c> and</c><00:20:17.309><c> I</c><00:20:18.309><c> also</c><00:20:18.580><c> have</c><00:20:19.029><c> a</c><00:20:19.110><c> need</c><00:20:20.110><c> to</c>

00:20:20.130 --> 00:20:20.140 align:start position:0%
longer needed and I also have a need to
 

00:20:20.140 --> 00:20:22.470 align:start position:0%
longer needed and I also have a need to
have<00:20:20.289><c> a</c><00:20:20.440><c> concurrently</c><00:20:21.010><c> accessible</c><00:20:21.669><c> set</c><00:20:21.970><c> here</c>

00:20:22.470 --> 00:20:22.480 align:start position:0%
have a concurrently accessible set here
 

00:20:22.480 --> 00:20:25.529 align:start position:0%
have a concurrently accessible set here
some<00:20:23.200><c> way</c><00:20:23.350><c> to</c><00:20:23.409><c> just</c><00:20:23.740><c> keep</c><00:20:24.010><c> the</c><00:20:24.250><c> BP</c><00:20:25.149><c> phantom</c>

00:20:25.529 --> 00:20:25.539 align:start position:0%
some way to just keep the BP phantom
 

00:20:25.539 --> 00:20:27.899 align:start position:0%
some way to just keep the BP phantom
references<00:20:26.169><c> around</c><00:20:26.620><c> so</c><00:20:27.460><c> they</c><00:20:27.610><c> don't</c><00:20:27.789><c> get</c>

00:20:27.899 --> 00:20:27.909 align:start position:0%
references around so they don't get
 

00:20:27.909 --> 00:20:30.510 align:start position:0%
references around so they don't get
garbage<00:20:28.270><c> collected</c><00:20:28.299><c> themselves</c><00:20:29.100><c> so</c><00:20:30.100><c> I</c><00:20:30.130><c> just</c>

00:20:30.510 --> 00:20:30.520 align:start position:0%
garbage collected themselves so I just
 

00:20:30.520 --> 00:20:33.779 align:start position:0%
garbage collected themselves so I just
keep<00:20:30.730><c> those</c><00:20:30.909><c> around</c><00:20:31.149><c> as</c><00:20:31.570><c> long</c><00:20:31.779><c> as</c><00:20:32.789><c> basically</c>

00:20:33.779 --> 00:20:33.789 align:start position:0%
keep those around as long as basically
 

00:20:33.789 --> 00:20:37.320 align:start position:0%
keep those around as long as basically
until<00:20:34.090><c> they</c><00:20:34.240><c> explicitly</c><00:20:34.539><c> removed</c><00:20:35.230><c> and</c><00:20:36.330><c> so</c>

00:20:37.320 --> 00:20:37.330 align:start position:0%
until they explicitly removed and so
 

00:20:37.330 --> 00:20:42.659 align:start position:0%
until they explicitly removed and so
what<00:20:37.539><c> I</c><00:20:37.570><c> do</c><00:20:37.750><c> then</c><00:20:37.960><c> is</c><00:20:40.080><c> whenever</c><00:20:41.080><c> I</c><00:20:41.620><c> whenever</c><00:20:42.399><c> I</c>

00:20:42.659 --> 00:20:42.669 align:start position:0%
what I do then is whenever I whenever I
 

00:20:42.669 --> 00:20:44.610 align:start position:0%
what I do then is whenever I whenever I
allocate<00:20:43.419><c> whenever</c><00:20:43.720><c> I</c><00:20:43.809><c> can</c><00:20:44.049><c> select</c><00:20:44.289><c> one</c><00:20:44.590><c> of</c>

00:20:44.610 --> 00:20:44.620 align:start position:0%
allocate whenever I can select one of
 

00:20:44.620 --> 00:20:47.460 align:start position:0%
allocate whenever I can select one of
these<00:20:44.799><c> PP</c><00:20:45.220><c> phantom</c><00:20:45.640><c> references</c><00:20:46.270><c> I</c><00:20:46.480><c> first</c><00:20:47.289><c> of</c>

00:20:47.460 --> 00:20:47.470 align:start position:0%
these PP phantom references I first of
 

00:20:47.470 --> 00:20:49.139 align:start position:0%
these PP phantom references I first of
all<00:20:47.620><c> can</c><00:20:47.860><c> select</c><00:20:48.159><c> the</c><00:20:48.309><c> Phantom</c><00:20:48.700><c> reference</c>

00:20:49.139 --> 00:20:49.149 align:start position:0%
all can select the Phantom reference
 

00:20:49.149 --> 00:20:50.880 align:start position:0%
all can select the Phantom reference
giving<00:20:49.539><c> it</c><00:20:49.659><c> the</c><00:20:49.779><c> Java</c><00:20:50.049><c> object</c><00:20:50.620><c> and</c><00:20:50.799><c> the</c>

00:20:50.880 --> 00:20:50.890 align:start position:0%
giving it the Java object and the
 

00:20:50.890 --> 00:20:53.159 align:start position:0%
giving it the Java object and the
reference<00:20:51.279><c> cue</c><00:20:51.610><c> so</c><00:20:52.240><c> that</c><00:20:52.360><c> this</c><00:20:52.480><c> helps</c><00:20:53.080><c> the</c>

00:20:53.159 --> 00:20:53.169 align:start position:0%
reference cue so that this helps the
 

00:20:53.169 --> 00:20:54.389 align:start position:0%
reference cue so that this helps the
underlying<00:20:53.590><c> phantom</c><00:20:54.010><c> reference</c>

00:20:54.389 --> 00:20:54.399 align:start position:0%
underlying phantom reference
 

00:20:54.399 --> 00:20:57.930 align:start position:0%
underlying phantom reference
implementation<00:20:55.470><c> to</c><00:20:56.470><c> watch</c><00:20:56.740><c> that</c><00:20:57.039><c> Java</c><00:20:57.370><c> object</c>

00:20:57.930 --> 00:20:57.940 align:start position:0%
implementation to watch that Java object
 

00:20:57.940 --> 00:20:59.909 align:start position:0%
implementation to watch that Java object
and<00:20:58.149><c> put</c><00:20:58.330><c> it</c><00:20:58.480><c> onto</c><00:20:58.630><c> the</c><00:20:58.870><c> cue</c><00:20:59.110><c> that</c><00:20:59.320><c> I</c><00:20:59.380><c> gave</c><00:20:59.710><c> it</c>

00:20:59.909 --> 00:20:59.919 align:start position:0%
and put it onto the cue that I gave it
 

00:20:59.919 --> 00:21:04.560 align:start position:0%
and put it onto the cue that I gave it
when<00:21:00.190><c> the</c><00:21:00.309><c> Java</c><00:21:00.549><c> object</c><00:21:01.059><c> goes</c><00:21:01.240><c> away</c><00:21:02.820><c> and</c><00:21:03.820><c> then</c>

00:21:04.560 --> 00:21:04.570 align:start position:0%
when the Java object goes away and then
 

00:21:04.570 --> 00:21:07.049 align:start position:0%
when the Java object goes away and then
I<00:21:04.840><c> also</c><00:21:05.289><c> remember</c><00:21:05.980><c> the</c><00:21:06.159><c> native</c><00:21:06.460><c> handle</c><00:21:06.850><c> so</c><00:21:07.000><c> I</c>

00:21:07.049 --> 00:21:07.059 align:start position:0%
I also remember the native handle so I
 

00:21:07.059 --> 00:21:08.880 align:start position:0%
I also remember the native handle so I
can<00:21:07.299><c> actually</c><00:21:07.480><c> invoke</c><00:21:07.990><c> the</c><00:21:08.169><c> allocation</c>

00:21:08.880 --> 00:21:08.890 align:start position:0%
can actually invoke the allocation
 

00:21:08.890 --> 00:21:12.690 align:start position:0%
can actually invoke the allocation
function<00:21:09.370><c> when</c><00:21:09.730><c> it's</c><00:21:09.909><c> time</c><00:21:11.100><c> so</c><00:21:12.100><c> what</c><00:21:12.250><c> happens</c>

00:21:12.690 --> 00:21:12.700 align:start position:0%
function when it's time so what happens
 

00:21:12.700 --> 00:21:14.730 align:start position:0%
function when it's time so what happens
when<00:21:12.909><c> I</c><00:21:12.970><c> register</c><00:21:13.720><c> one</c><00:21:13.929><c> of</c><00:21:13.960><c> these</c><00:21:14.230><c> things</c><00:21:14.500><c> I</c>

00:21:14.730 --> 00:21:14.740 align:start position:0%
when I register one of these things I
 

00:21:14.740 --> 00:21:16.380 align:start position:0%
when I register one of these things I
register<00:21:15.370><c> Java</c><00:21:15.669><c> object</c><00:21:16.179><c> and</c><00:21:16.330><c> the</c>

00:21:16.380 --> 00:21:16.390 align:start position:0%
register Java object and the
 

00:21:16.390 --> 00:21:19.860 align:start position:0%
register Java object and the
corresponding<00:21:16.990><c> native</c><00:21:17.320><c> handle</c><00:21:17.740><c> I</c><00:21:18.539><c> create</c><00:21:19.539><c> a</c>

00:21:19.860 --> 00:21:19.870 align:start position:0%
corresponding native handle I create a
 

00:21:19.870 --> 00:21:24.269 align:start position:0%
corresponding native handle I create a
new<00:21:20.039><c> BP</c><00:21:21.039><c> phantom</c><00:21:21.429><c> reference</c><00:21:21.940><c> and</c><00:21:22.320><c> I</c><00:21:23.320><c> added</c><00:21:23.710><c> to</c>

00:21:24.269 --> 00:21:24.279 align:start position:0%
new BP phantom reference and I added to
 

00:21:24.279 --> 00:21:26.220 align:start position:0%
new BP phantom reference and I added to
my<00:21:24.309><c> set</c><00:21:24.820><c> here</c><00:21:25.149><c> just</c><00:21:25.539><c> to</c><00:21:25.630><c> make</c><00:21:25.779><c> sure</c><00:21:25.809><c> that</c><00:21:26.110><c> it</c>

00:21:26.220 --> 00:21:26.230 align:start position:0%
my set here just to make sure that it
 

00:21:26.230 --> 00:21:30.960 align:start position:0%
my set here just to make sure that it
doesn't<00:21:26.500><c> go</c><00:21:26.620><c> away</c><00:21:28.230><c> and</c><00:21:29.230><c> then</c><00:21:29.860><c> and</c><00:21:30.190><c> this</c><00:21:30.789><c> is</c>

00:21:30.960 --> 00:21:30.970 align:start position:0%
doesn't go away and then and this is
 

00:21:30.970 --> 00:21:32.730 align:start position:0%
doesn't go away and then and this is
sort<00:21:31.179><c> of</c><00:21:31.240><c> part</c><00:21:31.630><c> of</c><00:21:31.690><c> the</c><00:21:31.750><c> ugliness</c><00:21:32.230><c> of</c><00:21:32.590><c> the</c>

00:21:32.730 --> 00:21:32.740 align:start position:0%
sort of part of the ugliness of the
 

00:21:32.740 --> 00:21:34.470 align:start position:0%
sort of part of the ugliness of the
scheme<00:21:33.039><c> unfortunately</c><00:21:33.880><c> that</c><00:21:34.090><c> we're</c><00:21:34.270><c> trying</c>

00:21:34.470 --> 00:21:34.480 align:start position:0%
scheme unfortunately that we're trying
 

00:21:34.480 --> 00:21:37.260 align:start position:0%
scheme unfortunately that we're trying
to<00:21:34.630><c> address</c><00:21:34.809><c> at</c><00:21:35.440><c> some</c><00:21:36.340><c> point</c><00:21:36.580><c> every</c><00:21:36.909><c> once</c><00:21:37.090><c> in</c><00:21:37.179><c> a</c>

00:21:37.260 --> 00:21:37.270 align:start position:0%
to address at some point every once in a
 

00:21:37.270 --> 00:21:40.470 align:start position:0%
to address at some point every once in a
while<00:21:37.299><c> I</c><00:21:37.480><c> I</c><00:21:37.899><c> actually</c><00:21:38.860><c> need</c><00:21:39.309><c> to</c><00:21:39.340><c> arrange</c><00:21:40.120><c> that</c>

00:21:40.470 --> 00:21:40.480 align:start position:0%
while I I actually need to arrange that
 

00:21:40.480 --> 00:21:42.120 align:start position:0%
while I I actually need to arrange that
everything<00:21:41.049><c> that's</c><00:21:41.200><c> on</c><00:21:41.409><c> the</c><00:21:41.529><c> reference</c><00:21:41.890><c> queue</c>

00:21:42.120 --> 00:21:42.130 align:start position:0%
everything that's on the reference queue
 

00:21:42.130 --> 00:21:44.820 align:start position:0%
everything that's on the reference queue
gets<00:21:42.279><c> deleted</c><00:21:42.730><c> and</c><00:21:43.210><c> I've</c><00:21:43.840><c> done</c><00:21:44.049><c> that</c><00:21:44.260><c> here</c><00:21:44.559><c> by</c>

00:21:44.820 --> 00:21:44.830 align:start position:0%
gets deleted and I've done that here by
 

00:21:44.830 --> 00:21:48.120 align:start position:0%
gets deleted and I've done that here by
providing<00:21:45.580><c> a</c><00:21:45.760><c> method</c><00:21:46.450><c> do</c><00:21:46.659><c> deletes</c><00:21:47.080><c> which</c><00:21:47.830><c> just</c>

00:21:48.120 --> 00:21:48.130 align:start position:0%
providing a method do deletes which just
 

00:21:48.130 --> 00:21:49.889 align:start position:0%
providing a method do deletes which just
checks<00:21:48.490><c> whether</c><00:21:48.909><c> there's</c><00:21:49.210><c> anything</c>

00:21:49.889 --> 00:21:49.899 align:start position:0%
checks whether there's anything
 

00:21:49.899 --> 00:21:53.190 align:start position:0%
checks whether there's anything
available<00:21:50.559><c> for</c><00:21:51.370><c> deletion</c><00:21:51.700><c> and</c><00:21:52.179><c> if</c><00:21:52.659><c> so</c><00:21:52.899><c> it</c><00:21:53.020><c> goes</c>

00:21:53.190 --> 00:21:53.200 align:start position:0%
available for deletion and if so it goes
 

00:21:53.200 --> 00:21:57.240 align:start position:0%
available for deletion and if so it goes
ahead<00:21:53.380><c> and</c><00:21:53.649><c> deletes</c><00:21:54.010><c> that</c><00:21:54.990><c> in</c><00:21:55.990><c> other</c><00:21:56.409><c> context</c>

00:21:57.240 --> 00:21:57.250 align:start position:0%
ahead and deletes that in other context
 

00:21:57.250 --> 00:21:58.770 align:start position:0%
ahead and deletes that in other context
you<00:21:57.429><c> may</c><00:21:57.580><c> want</c><00:21:57.820><c> to</c><00:21:57.909><c> do</c><00:21:58.030><c> this</c><00:21:58.179><c> differently</c>

00:21:58.770 --> 00:21:58.780 align:start position:0%
you may want to do this differently
 

00:21:58.780 --> 00:21:59.860 align:start position:0%
you may want to do this differently
rather<00:21:59.200><c> than</c>

00:21:59.860 --> 00:21:59.870 align:start position:0%
rather than
 

00:21:59.870 --> 00:22:01.210 align:start position:0%
rather than
just<00:22:00.050><c> polling</c><00:22:00.470><c> whether</c><00:22:00.710><c> something</c><00:22:01.130><c> is</c>

00:22:01.210 --> 00:22:01.220 align:start position:0%
just polling whether something is
 

00:22:01.220 --> 00:22:02.680 align:start position:0%
just polling whether something is
available<00:22:01.370><c> you</c><00:22:01.910><c> may</c><00:22:02.059><c> actually</c><00:22:02.270><c> want</c><00:22:02.600><c> to</c>

00:22:02.680 --> 00:22:02.690 align:start position:0%
available you may actually want to
 

00:22:02.690 --> 00:22:05.410 align:start position:0%
available you may actually want to
template<00:22:03.080><c> fed</c><00:22:03.320><c> for</c><00:22:03.559><c> this</c><00:22:03.680><c> and</c><00:22:03.920><c> block</c><00:22:04.180><c> it</c><00:22:05.180><c> sort</c>

00:22:05.410 --> 00:22:05.420 align:start position:0%
template fed for this and block it sort
 

00:22:05.420 --> 00:22:07.720 align:start position:0%
template fed for this and block it sort
of<00:22:05.480><c> depends</c><00:22:05.900><c> on</c><00:22:05.990><c> the</c><00:22:06.140><c> context</c><00:22:06.650><c> it's</c><00:22:07.309><c> a</c><00:22:07.460><c> little</c>

00:22:07.720 --> 00:22:07.730 align:start position:0%
of depends on the context it's a little
 

00:22:07.730 --> 00:22:10.780 align:start position:0%
of depends on the context it's a little
bit<00:22:07.910><c> tricky</c><00:22:08.240><c> here</c><00:22:08.660><c> to</c><00:22:09.350><c> do</c><00:22:09.530><c> this</c><00:22:09.740><c> well</c><00:22:10.460><c> in</c><00:22:10.490><c> a</c>

00:22:10.780 --> 00:22:10.790 align:start position:0%
bit tricky here to do this well in a
 

00:22:10.790 --> 00:22:13.840 align:start position:0%
bit tricky here to do this well in a
loft<00:22:11.000><c> system</c><00:22:11.980><c> because</c><00:22:12.980><c> the</c><00:22:13.160><c> easy</c><00:22:13.340><c> way</c><00:22:13.580><c> to</c><00:22:13.640><c> do</c>

00:22:13.840 --> 00:22:13.850 align:start position:0%
loft system because the easy way to do
 

00:22:13.850 --> 00:22:15.520 align:start position:0%
loft system because the easy way to do
this<00:22:14.000><c> is</c><00:22:14.150><c> to</c><00:22:14.270><c> create</c><00:22:14.450><c> a</c><00:22:14.540><c> new</c><00:22:14.780><c> thread</c><00:22:15.050><c> for</c><00:22:15.320><c> every</c>

00:22:15.520 --> 00:22:15.530 align:start position:0%
this is to create a new thread for every
 

00:22:15.530 --> 00:22:17.170 align:start position:0%
this is to create a new thread for every
class<00:22:15.770><c> that</c><00:22:16.070><c> does</c><00:22:16.250><c> this</c><00:22:16.460><c> which</c><00:22:16.760><c> may</c><00:22:16.970><c> or</c><00:22:17.090><c> may</c>

00:22:17.170 --> 00:22:17.180 align:start position:0%
class that does this which may or may
 

00:22:17.180 --> 00:22:18.640 align:start position:0%
class that does this which may or may
not<00:22:17.210><c> be</c><00:22:17.480><c> acceptable</c><00:22:17.930><c> depending</c><00:22:18.380><c> on</c><00:22:18.470><c> how</c><00:22:18.590><c> many</c>

00:22:18.640 --> 00:22:18.650 align:start position:0%
not be acceptable depending on how many
 

00:22:18.650 --> 00:22:26.230 align:start position:0%
not be acceptable depending on how many
of<00:22:18.860><c> these</c><00:22:18.980><c> you</c><00:22:19.040><c> have</c><00:22:24.160><c> so</c><00:22:25.160><c> then</c><00:22:25.370><c> in</c><00:22:25.730><c> order</c><00:22:26.120><c> to</c>

00:22:26.230 --> 00:22:26.240 align:start position:0%
of these you have so then in order to
 

00:22:26.240 --> 00:22:28.660 align:start position:0%
of these you have so then in order to
actually<00:22:26.390><c> make</c><00:22:26.630><c> this</c><00:22:26.960><c> work</c><00:22:27.020><c> my</c><00:22:27.830><c> application</c>

00:22:28.660 --> 00:22:28.670 align:start position:0%
actually make this work my application
 

00:22:28.670 --> 00:22:30.450 align:start position:0%
actually make this work my application
needs<00:22:28.910><c> to</c><00:22:29.059><c> do</c><00:22:29.240><c> the</c><00:22:29.360><c> following</c><00:22:29.720><c> things</c>

00:22:30.450 --> 00:22:30.460 align:start position:0%
needs to do the following things
 

00:22:30.460 --> 00:22:33.220 align:start position:0%
needs to do the following things
periodically<00:22:31.460><c> in</c><00:22:32.000><c> simple</c><00:22:32.510><c> cases</c><00:22:32.750><c> you</c><00:22:33.080><c> can</c>

00:22:33.220 --> 00:22:33.230 align:start position:0%
periodically in simple cases you can
 

00:22:33.230 --> 00:22:35.260 align:start position:0%
periodically in simple cases you can
skip<00:22:33.500><c> the</c><00:22:33.650><c> system</c><00:22:34.010><c> GC</c><00:22:34.490><c> and</c><00:22:34.700><c> system</c><00:22:34.970><c> dot</c><00:22:35.059><c> run</c>

00:22:35.260 --> 00:22:35.270 align:start position:0%
skip the system GC and system dot run
 

00:22:35.270 --> 00:22:37.210 align:start position:0%
skip the system GC and system dot run
finalization<00:22:36.140><c> if</c><00:22:36.260><c> you</c><00:22:36.710><c> notice</c><00:22:36.980><c> that</c><00:22:37.100><c> the</c>

00:22:37.210 --> 00:22:37.220 align:start position:0%
finalization if you notice that the
 

00:22:37.220 --> 00:22:38.740 align:start position:0%
finalization if you notice that the
garbage<00:22:37.520><c> collector</c><00:22:37.880><c> isn't</c><00:22:38.179><c> running</c><00:22:38.360><c> enough</c>

00:22:38.740 --> 00:22:38.750 align:start position:0%
garbage collector isn't running enough
 

00:22:38.750 --> 00:22:40.180 align:start position:0%
garbage collector isn't running enough
because<00:22:39.140><c> you're</c><00:22:39.320><c> not</c><00:22:39.440><c> allocating</c><00:22:40.100><c> enough</c>

00:22:40.180 --> 00:22:40.190 align:start position:0%
because you're not allocating enough
 

00:22:40.190 --> 00:22:41.799 align:start position:0%
because you're not allocating enough
Java<00:22:40.610><c> objects</c><00:22:41.210><c> in</c><00:22:41.300><c> order</c><00:22:41.450><c> to</c><00:22:41.630><c> actually</c>

00:22:41.799 --> 00:22:41.809 align:start position:0%
Java objects in order to actually
 

00:22:41.809 --> 00:22:44.290 align:start position:0%
Java objects in order to actually
trigger<00:22:42.230><c> it</c><00:22:42.530><c> you</c><00:22:43.070><c> may</c><00:22:43.220><c> have</c><00:22:43.250><c> to</c><00:22:43.520><c> explicitly</c><00:22:44.059><c> do</c>

00:22:44.290 --> 00:22:44.300 align:start position:0%
trigger it you may have to explicitly do
 

00:22:44.300 --> 00:22:47.260 align:start position:0%
trigger it you may have to explicitly do
that<00:22:44.480><c> but</c><00:22:44.690><c> usually</c><00:22:44.840><c> that's</c><00:22:45.440><c> not</c><00:22:45.590><c> an</c><00:22:45.830><c> issue</c><00:22:46.270><c> but</c>

00:22:47.260 --> 00:22:47.270 align:start position:0%
that but usually that's not an issue but
 

00:22:47.270 --> 00:22:49.510 align:start position:0%
that but usually that's not an issue but
you<00:22:47.390><c> do</c><00:22:47.570><c> have</c><00:22:47.780><c> to</c><00:22:48.050><c> regularly</c><00:22:48.410><c> call</c><00:22:48.920><c> BP</c><00:22:49.309><c> plan</c>

00:22:49.510 --> 00:22:49.520 align:start position:0%
you do have to regularly call BP plan
 

00:22:49.520 --> 00:22:50.980 align:start position:0%
you do have to regularly call BP plan
time<00:22:49.700><c> reference</c><00:22:50.120><c> not</c><00:22:50.330><c> do</c><00:22:50.480><c> deletes</c><00:22:50.840><c> to</c>

00:22:50.980 --> 00:22:50.990 align:start position:0%
time reference not do deletes to
 

00:22:50.990 --> 00:22:53.020 align:start position:0%
time reference not do deletes to
actually<00:22:51.440><c> do</c><00:22:51.559><c> the</c><00:22:51.710><c> cleanup</c><00:22:51.980><c> the</c><00:22:52.730><c> way</c><00:22:52.880><c> I've</c>

00:22:53.020 --> 00:22:53.030 align:start position:0%
actually do the cleanup the way I've
 

00:22:53.030 --> 00:22:58.330 align:start position:0%
actually do the cleanup the way I've
done<00:22:53.179><c> things</c><00:22:53.390><c> here</c><00:22:53.750><c> so</c><00:22:56.770><c> the</c><00:22:57.770><c> next</c><00:22:57.920><c> problem</c>

00:22:58.330 --> 00:22:58.340 align:start position:0%
done things here so the next problem
 

00:22:58.340 --> 00:23:01.799 align:start position:0%
done things here so the next problem
here<00:22:58.850><c> that</c><00:22:58.880><c> I</c><00:22:59.230><c> that</c><00:23:00.230><c> I</c><00:23:00.260><c> mentioned</c><00:23:00.890><c> is</c><00:23:01.070><c> the</c>

00:23:01.799 --> 00:23:01.809 align:start position:0%
here that I that I mentioned is the
 

00:23:01.809 --> 00:23:04.299 align:start position:0%
here that I that I mentioned is the
premature<00:23:02.809><c> and</c><00:23:03.170><c> queuing</c><00:23:03.530><c> while</c><00:23:03.740><c> a</c><00:23:03.770><c> method</c><00:23:04.160><c> is</c>

00:23:04.299 --> 00:23:04.309 align:start position:0%
premature and queuing while a method is
 

00:23:04.309 --> 00:23:08.470 align:start position:0%
premature and queuing while a method is
still<00:23:04.550><c> running</c><00:23:06.490><c> as</c><00:23:07.490><c> I</c><00:23:07.760><c> said</c><00:23:07.970><c> this</c><00:23:08.120><c> is</c><00:23:08.179><c> not</c>

00:23:08.470 --> 00:23:08.480 align:start position:0%
still running as I said this is not
 

00:23:08.480 --> 00:23:10.419 align:start position:0%
still running as I said this is not
actually<00:23:09.020><c> an</c><00:23:09.140><c> issue</c><00:23:09.290><c> for</c><00:23:09.559><c> Android</c><00:23:09.950><c> but</c><00:23:09.980><c> it</c><00:23:10.309><c> is</c>

00:23:10.419 --> 00:23:10.429 align:start position:0%
actually an issue for Android but it is
 

00:23:10.429 --> 00:23:14.290 align:start position:0%
actually an issue for Android but it is
an<00:23:10.550><c> issue</c><00:23:10.730><c> for</c><00:23:10.850><c> portable</c><00:23:11.450><c> code</c><00:23:12.370><c> so</c><00:23:13.370><c> there's</c><00:23:14.179><c> a</c>

00:23:14.290 --> 00:23:14.300 align:start position:0%
an issue for portable code so there's a
 

00:23:14.300 --> 00:23:16.990 align:start position:0%
an issue for portable code so there's a
partial<00:23:14.660><c> solution</c><00:23:15.080><c> to</c><00:23:15.590><c> this</c><00:23:15.770><c> in</c><00:23:16.100><c> actually</c><00:23:16.760><c> in</c>

00:23:16.990 --> 00:23:17.000 align:start position:0%
partial solution to this in actually in
 

00:23:17.000 --> 00:23:20.140 align:start position:0%
partial solution to this in actually in
Java<00:23:17.390><c> 9</c><00:23:18.280><c> which</c><00:23:19.280><c> is</c><00:23:19.309><c> this</c><00:23:19.580><c> thing</c><00:23:19.640><c> called</c><00:23:20.000><c> a</c>

00:23:20.140 --> 00:23:20.150 align:start position:0%
Java 9 which is this thing called a
 

00:23:20.150 --> 00:23:21.730 align:start position:0%
Java 9 which is this thing called a
teachability<00:23:20.600><c> fence</c><00:23:21.110><c> which</c><00:23:21.410><c> you</c><00:23:21.559><c> can</c>

00:23:21.730 --> 00:23:21.740 align:start position:0%
teachability fence which you can
 

00:23:21.740 --> 00:23:23.530 align:start position:0%
teachability fence which you can
explicitly<00:23:22.130><c> invoke</c><00:23:22.910><c> to</c><00:23:22.940><c> tell</c><00:23:23.390><c> the</c>

00:23:23.530 --> 00:23:23.540 align:start position:0%
explicitly invoke to tell the
 

00:23:23.540 --> 00:23:26.110 align:start position:0%
explicitly invoke to tell the
implementation<00:23:24.410><c> don't</c><00:23:25.160><c> let</c><00:23:25.340><c> the</c><00:23:25.460><c> argument</c><00:23:26.000><c> go</c>

00:23:26.110 --> 00:23:26.120 align:start position:0%
implementation don't let the argument go
 

00:23:26.120 --> 00:23:28.210 align:start position:0%
implementation don't let the argument go
away<00:23:26.390><c> yet</c><00:23:26.660><c> it's</c><00:23:26.960><c> still</c><00:23:27.080><c> live</c><00:23:27.410><c> to</c><00:23:27.860><c> the</c><00:23:27.950><c> should</c>

00:23:28.210 --> 00:23:28.220 align:start position:0%
away yet it's still live to the should
 

00:23:28.220 --> 00:23:29.650 align:start position:0%
away yet it's still live to the should
still<00:23:28.400><c> be</c><00:23:28.520><c> live</c><00:23:28.670><c> to</c><00:23:28.880><c> the</c><00:23:29.000><c> garbage</c><00:23:29.150><c> collector</c>

00:23:29.650 --> 00:23:29.660 align:start position:0%
still be live to the garbage collector
 

00:23:29.660 --> 00:23:31.390 align:start position:0%
still be live to the garbage collector
even<00:23:29.900><c> though</c><00:23:29.990><c> it</c><00:23:30.080><c> might</c><00:23:30.230><c> not</c><00:23:30.260><c> look</c><00:23:30.590><c> it</c><00:23:30.890><c> might</c>

00:23:31.390 --> 00:23:31.400 align:start position:0%
even though it might not look it might
 

00:23:31.400 --> 00:23:33.910 align:start position:0%
even though it might not look it might
not<00:23:31.550><c> look</c><00:23:31.730><c> like</c><00:23:32.030><c> it</c><00:23:32.240><c> and</c><00:23:32.600><c> that's</c><00:23:33.470><c> not</c><00:23:33.679><c> really</c>

00:23:33.910 --> 00:23:33.920 align:start position:0%
not look like it and that's not really
 

00:23:33.920 --> 00:23:35.470 align:start position:0%
not look like it and that's not really
available<00:23:34.610><c> basically</c><00:23:35.000><c> in</c><00:23:35.300><c> any</c>

00:23:35.470 --> 00:23:35.480 align:start position:0%
available basically in any
 

00:23:35.480 --> 00:23:37.090 align:start position:0%
available basically in any
implementation<00:23:35.780><c> that</c><00:23:36.290><c> you</c><00:23:36.440><c> can</c><00:23:36.620><c> use</c><00:23:36.800><c> at</c><00:23:37.010><c> the</c>

00:23:37.090 --> 00:23:37.100 align:start position:0%
implementation that you can use at the
 

00:23:37.100 --> 00:23:40.000 align:start position:0%
implementation that you can use at the
moment<00:23:37.520><c> so</c><00:23:38.210><c> the</c><00:23:38.390><c> best</c><00:23:38.600><c> solution</c><00:23:39.260><c> that</c><00:23:39.290><c> my</c>

00:23:40.000 --> 00:23:40.010 align:start position:0%
moment so the best solution that my
 

00:23:40.010 --> 00:23:41.650 align:start position:0%
moment so the best solution that my
colleagues<00:23:40.460><c> and</c><00:23:40.580><c> I</c><00:23:40.730><c> could</c><00:23:41.000><c> come</c><00:23:41.179><c> up</c><00:23:41.210><c> with</c><00:23:41.450><c> at</c>

00:23:41.650 --> 00:23:41.660 align:start position:0%
colleagues and I could come up with at
 

00:23:41.660 --> 00:23:45.250 align:start position:0%
colleagues and I could come up with at
the<00:23:41.780><c> moment</c><00:23:42.170><c> is</c><00:23:42.290><c> the</c><00:23:42.440><c> following</c><00:23:44.080><c> which</c><00:23:45.080><c> is</c>

00:23:45.250 --> 00:23:45.260 align:start position:0%
the moment is the following which is
 

00:23:45.260 --> 00:23:47.020 align:start position:0%
the moment is the following which is
relatively<00:23:45.770><c> simple</c><00:23:46.100><c> but</c><00:23:46.280><c> not</c><00:23:46.610><c> exactly</c>

00:23:47.020 --> 00:23:47.030 align:start position:0%
relatively simple but not exactly
 

00:23:47.030 --> 00:23:51.549 align:start position:0%
relatively simple but not exactly
performance<00:23:47.630><c> neutral</c><00:23:48.080><c> is</c><00:23:48.290><c> that</c><00:23:49.840><c> is</c><00:23:50.840><c> that</c>

00:23:51.549 --> 00:23:51.559 align:start position:0%
performance neutral is that is that
 

00:23:51.559 --> 00:23:54.820 align:start position:0%
performance neutral is that is that
instead<00:23:52.550><c> of</c><00:23:52.610><c> having</c><00:23:53.120><c> simple</c><00:23:54.110><c> methods</c><00:23:54.530><c> like</c>

00:23:54.820 --> 00:23:54.830 align:start position:0%
instead of having simple methods like
 

00:23:54.830 --> 00:23:56.980 align:start position:0%
instead of having simple methods like
multiply<00:23:55.429><c> that</c><00:23:55.730><c> just</c><00:23:55.970><c> invoked</c><00:23:56.450><c> the</c><00:23:56.660><c> native</c>

00:23:56.980 --> 00:23:56.990 align:start position:0%
multiply that just invoked the native
 

00:23:56.990 --> 00:23:59.350 align:start position:0%
multiply that just invoked the native
method<00:23:57.410><c> with</c><00:23:57.620><c> the</c><00:23:57.770><c> native</c><00:23:58.100><c> handles</c><00:23:58.520><c> what</c><00:23:59.270><c> we</c>

00:23:59.350 --> 00:23:59.360 align:start position:0%
method with the native handles what we
 

00:23:59.360 --> 00:24:01.330 align:start position:0%
method with the native handles what we
do<00:23:59.540><c> instead</c><00:23:59.900><c> is</c><00:24:00.110><c> we</c><00:24:00.350><c> invoke</c><00:24:00.830><c> the</c><00:24:01.010><c> native</c>

00:24:01.330 --> 00:24:01.340 align:start position:0%
do instead is we invoke the native
 

00:24:01.340 --> 00:24:03.580 align:start position:0%
do instead is we invoke the native
method<00:24:01.820><c> with</c><00:24:02.030><c> both</c><00:24:02.330><c> the</c><00:24:02.570><c> native</c><00:24:02.750><c> handles</c><00:24:03.320><c> and</c>

00:24:03.580 --> 00:24:03.590 align:start position:0%
method with both the native handles and
 

00:24:03.590 --> 00:24:08.440 align:start position:0%
method with both the native handles and
the<00:24:03.740><c> java</c><00:24:03.980><c> object</c><00:24:06.460><c> so</c><00:24:07.460><c> what</c><00:24:07.640><c> I</c><00:24:07.670><c> do</c><00:24:07.790><c> instead</c><00:24:08.150><c> is</c>

00:24:08.440 --> 00:24:08.450 align:start position:0%
the java object so what I do instead is
 

00:24:08.450 --> 00:24:10.510 align:start position:0%
the java object so what I do instead is
I<00:24:08.690><c> have</c><00:24:08.840><c> a</c><00:24:08.870><c> native</c><00:24:09.230><c> multiply</c><00:24:09.710><c> that</c><00:24:10.010><c> takes</c><00:24:10.310><c> the</c>

00:24:10.510 --> 00:24:10.520 align:start position:0%
I have a native multiply that takes the
 

00:24:10.520 --> 00:24:13.280 align:start position:0%
I have a native multiply that takes the
2j<00:24:10.970><c> object</c><00:24:11.450><c> as</c><00:24:11.720><c> well</c>

00:24:13.280 --> 00:24:13.290 align:start position:0%
2j object as well
 

00:24:13.290 --> 00:24:15.350 align:start position:0%
2j object as well
and<00:24:13.410><c> current</c><00:24:14.100><c> implementations</c><00:24:15.000><c> though</c><00:24:15.210><c> the</c>

00:24:15.350 --> 00:24:15.360 align:start position:0%
and current implementations though the
 

00:24:15.360 --> 00:24:18.260 align:start position:0%
and current implementations though the
spec<00:24:15.600><c> doesn't</c><00:24:15.890><c> 100%</c><00:24:16.890><c> guarantee</c><00:24:17.310><c> that</c><00:24:17.490><c> current</c>

00:24:18.260 --> 00:24:18.270 align:start position:0%
spec doesn't 100% guarantee that current
 

00:24:18.270 --> 00:24:19.700 align:start position:0%
spec doesn't 100% guarantee that current
implementations<00:24:19.080><c> are</c><00:24:19.230><c> essentially</c>

00:24:19.700 --> 00:24:19.710 align:start position:0%
implementations are essentially
 

00:24:19.710 --> 00:24:21.500 align:start position:0%
implementations are essentially
essentially<00:24:20.310><c> guarantee</c><00:24:20.910><c> that</c><00:24:21.090><c> this</c><00:24:21.300><c> and</c>

00:24:21.500 --> 00:24:21.510 align:start position:0%
essentially guarantee that this and
 

00:24:21.510 --> 00:24:23.240 align:start position:0%
essentially guarantee that this and
other<00:24:21.630><c> turns</c><00:24:22.050><c> into</c><00:24:22.260><c> a</c><00:24:22.380><c> local</c><00:24:22.710><c> graph</c><00:24:22.950><c> which</c>

00:24:23.240 --> 00:24:23.250 align:start position:0%
other turns into a local graph which
 

00:24:23.250 --> 00:24:26.000 align:start position:0%
other turns into a local graph which
tells<00:24:23.550><c> the</c><00:24:23.760><c> garbage</c><00:24:24.090><c> collector</c><00:24:24.830><c> to</c><00:24:25.830><c> keep</c>

00:24:26.000 --> 00:24:26.010 align:start position:0%
tells the garbage collector to keep
 

00:24:26.010 --> 00:24:28.130 align:start position:0%
tells the garbage collector to keep
these<00:24:26.190><c> around</c><00:24:26.580><c> as</c><00:24:26.850><c> long</c><00:24:27.090><c> as</c><00:24:27.450><c> the</c><00:24:27.750><c> native</c>

00:24:28.130 --> 00:24:28.140 align:start position:0%
these around as long as the native
 

00:24:28.140 --> 00:24:29.960 align:start position:0%
these around as long as the native
method<00:24:28.470><c> is</c><00:24:28.590><c> running</c><00:24:28.980><c> so</c><00:24:29.520><c> things</c><00:24:29.790><c> will</c>

00:24:29.960 --> 00:24:29.970 align:start position:0%
method is running so things will
 

00:24:29.970 --> 00:24:31.340 align:start position:0%
method is running so things will
actually<00:24:30.120><c> work</c><00:24:30.510><c> out</c><00:24:30.630><c> correctly</c><00:24:30.840><c> at</c><00:24:31.320><c> the</c>

00:24:31.340 --> 00:24:31.350 align:start position:0%
actually work out correctly at the
 

00:24:31.350 --> 00:24:33.470 align:start position:0%
actually work out correctly at the
expense<00:24:31.860><c> of</c><00:24:32.010><c> passing</c><00:24:32.460><c> additional</c><00:24:32.580><c> parameters</c>

00:24:33.470 --> 00:24:33.480 align:start position:0%
expense of passing additional parameters
 

00:24:33.480 --> 00:24:38.390 align:start position:0%
expense of passing additional parameters
to<00:24:33.660><c> J&amp;I</c><00:24:35.630><c> again</c><00:24:36.630><c> this</c><00:24:36.810><c> is</c><00:24:37.470><c> recommended</c><00:24:37.800><c> if</c><00:24:38.250><c> you</c>

00:24:38.390 --> 00:24:38.400 align:start position:0%
to J&amp;I again this is recommended if you
 

00:24:38.400 --> 00:24:40.460 align:start position:0%
to J&amp;I again this is recommended if you
have<00:24:38.520><c> to</c><00:24:38.640><c> write</c><00:24:38.790><c> for</c><00:24:39.030><c> if</c><00:24:39.390><c> you</c><00:24:39.660><c> write</c><00:24:39.960><c> portable</c>

00:24:40.460 --> 00:24:40.470 align:start position:0%
have to write for if you write portable
 

00:24:40.470 --> 00:24:43.490 align:start position:0%
have to write for if you write portable
code<00:24:40.910><c> for</c><00:24:41.910><c> Android</c><00:24:42.600><c> I</c><00:24:42.750><c> currently</c><00:24:43.050><c> wouldn't</c>

00:24:43.490 --> 00:24:43.500 align:start position:0%
code for Android I currently wouldn't
 

00:24:43.500 --> 00:24:45.530 align:start position:0%
code for Android I currently wouldn't
recommend<00:24:43.740><c> doing</c><00:24:44.070><c> that</c><00:24:44.220><c> eventually</c><00:24:44.910><c> sometime</c>

00:24:45.530 --> 00:24:45.540 align:start position:0%
recommend doing that eventually sometime
 

00:24:45.540 --> 00:24:46.820 align:start position:0%
recommend doing that eventually sometime
in<00:24:45.690><c> the</c><00:24:45.780><c> future</c><00:24:45.900><c> I</c><00:24:46.110><c> think</c><00:24:46.410><c> we'll</c><00:24:46.590><c> have</c><00:24:46.770><c> a</c>

00:24:46.820 --> 00:24:46.830 align:start position:0%
in the future I think we'll have a
 

00:24:46.830 --> 00:24:48.410 align:start position:0%
in the future I think we'll have a
better<00:24:47.010><c> we</c><00:24:47.490><c> will</c><00:24:47.610><c> probably</c><00:24:48.090><c> have</c><00:24:48.210><c> a</c><00:24:48.240><c> better</c>

00:24:48.410 --> 00:24:48.420 align:start position:0%
better we will probably have a better
 

00:24:48.420 --> 00:24:58.370 align:start position:0%
better we will probably have a better
solution<00:24:48.660><c> to</c><00:24:48.930><c> this</c><00:24:56.150><c> so</c><00:24:57.150><c> one</c><00:24:57.690><c> more</c><00:24:57.900><c> hazard</c><00:24:58.350><c> that</c>

00:24:58.370 --> 00:24:58.380 align:start position:0%
solution to this so one more hazard that
 

00:24:58.380 --> 00:25:00.680 align:start position:0%
solution to this so one more hazard that
I<00:24:58.560><c> want</c><00:24:58.830><c> to</c><00:24:58.920><c> go</c><00:24:59.010><c> over</c><00:24:59.280><c> quickly</c><00:24:59.550><c> in</c><00:25:00.120><c> pulse</c>

00:25:00.680 --> 00:25:00.690 align:start position:0%
I want to go over quickly in pulse
 

00:25:00.690 --> 00:25:04.850 align:start position:0%
I want to go over quickly in pulse
because<00:25:01.440><c> this</c><00:25:02.010><c> actually</c><00:25:03.380><c> this</c><00:25:04.380><c> is</c><00:25:04.530><c> near</c><00:25:04.800><c> and</c>

00:25:04.850 --> 00:25:04.860 align:start position:0%
because this actually this is near and
 

00:25:04.860 --> 00:25:07.220 align:start position:0%
because this actually this is near and
dear<00:25:05.010><c> to</c><00:25:05.130><c> my</c><00:25:05.340><c> heart</c><00:25:05.370><c> because</c><00:25:06.060><c> it</c><00:25:06.330><c> sort</c><00:25:06.630><c> of</c><00:25:06.750><c> took</c>

00:25:07.220 --> 00:25:07.230 align:start position:0%
dear to my heart because it sort of took
 

00:25:07.230 --> 00:25:08.990 align:start position:0%
dear to my heart because it sort of took
several<00:25:07.500><c> months</c><00:25:07.800><c> of</c><00:25:08.040><c> several</c><00:25:08.340><c> people's</c><00:25:08.670><c> time</c>

00:25:08.990 --> 00:25:09.000 align:start position:0%
several months of several people's time
 

00:25:09.000 --> 00:25:11.480 align:start position:0%
several months of several people's time
to<00:25:09.420><c> debug</c><00:25:10.260><c> platform</c><00:25:10.830><c> code</c><00:25:11.010><c> that</c><00:25:11.220><c> had</c><00:25:11.370><c> this</c>

00:25:11.480 --> 00:25:11.490 align:start position:0%
to debug platform code that had this
 

00:25:11.490 --> 00:25:14.420 align:start position:0%
to debug platform code that had this
issue<00:25:11.700><c> if</c><00:25:12.030><c> you're</c><00:25:12.720><c> using</c><00:25:13.050><c> C++</c><00:25:13.830><c> code</c><00:25:14.100><c> in</c><00:25:14.250><c> this</c>

00:25:14.420 --> 00:25:14.430 align:start position:0%
issue if you're using C++ code in this
 

00:25:14.430 --> 00:25:16.910 align:start position:0%
issue if you're using C++ code in this
way<00:25:14.670><c> you</c><00:25:15.480><c> need</c><00:25:15.660><c> to</c><00:25:15.750><c> be</c><00:25:15.870><c> really</c><00:25:16.290><c> careful</c><00:25:16.530><c> that</c>

00:25:16.910 --> 00:25:16.920 align:start position:0%
way you need to be really careful that
 

00:25:16.920 --> 00:25:18.710 align:start position:0%
way you need to be really careful that
you're<00:25:17.100><c> actually</c><00:25:17.310><c> calling</c><00:25:17.790><c> it</c><00:25:18.030><c> correctly</c><00:25:18.480><c> and</c>

00:25:18.710 --> 00:25:18.720 align:start position:0%
you're actually calling it correctly and
 

00:25:18.720 --> 00:25:20.960 align:start position:0%
you're actually calling it correctly and
not<00:25:18.870><c> violating</c><00:25:19.470><c> the</c><00:25:19.590><c> C++</c><00:25:20.160><c> levels</c><00:25:20.490><c> underneath</c>

00:25:20.960 --> 00:25:20.970 align:start position:0%
not violating the C++ levels underneath
 

00:25:20.970 --> 00:25:23.300 align:start position:0%
not violating the C++ levels underneath
and<00:25:21.330><c> that</c><00:25:22.080><c> can</c><00:25:22.260><c> be</c><00:25:22.380><c> quite</c><00:25:22.620><c> tricky</c><00:25:22.920><c> to</c><00:25:23.160><c> do</c>

00:25:23.300 --> 00:25:23.310 align:start position:0%
and that can be quite tricky to do
 

00:25:23.310 --> 00:25:26.210 align:start position:0%
and that can be quite tricky to do
correctly<00:25:24.230><c> so</c><00:25:25.230><c> in</c><00:25:25.410><c> particular</c><00:25:25.710><c> if</c><00:25:26.070><c> you're</c>

00:25:26.210 --> 00:25:26.220 align:start position:0%
correctly so in particular if you're
 

00:25:26.220 --> 00:25:28.670 align:start position:0%
correctly so in particular if you're
calling<00:25:26.490><c> C++</c><00:25:27.120><c> code</c><00:25:27.360><c> from</c><00:25:27.570><c> Java</c><00:25:27.630><c> sets</c><00:25:28.230><c> it</c><00:25:28.470><c> still</c>

00:25:28.670 --> 00:25:28.680 align:start position:0%
calling C++ code from Java sets it still
 

00:25:28.680 --> 00:25:30.230 align:start position:0%
calling C++ code from Java sets it still
has<00:25:28.800><c> to</c><00:25:28.920><c> be</c><00:25:29.040><c> fed</c><00:25:29.280><c> safe</c><00:25:29.550><c> as</c><00:25:29.790><c> though</c><00:25:29.970><c> you</c><00:25:30.030><c> were</c>

00:25:30.230 --> 00:25:30.240 align:start position:0%
has to be fed safe as though you were
 

00:25:30.240 --> 00:25:34.640 align:start position:0%
has to be fed safe as though you were
calling<00:25:30.600><c> it</c><00:25:30.720><c> for</c><00:25:30.840><c> multiple</c><00:25:31.200><c> C++</c><00:25:31.800><c> beds</c><00:25:32.810><c> and</c><00:25:33.810><c> you</c>

00:25:34.640 --> 00:25:34.650 align:start position:0%
calling it for multiple C++ beds and you
 

00:25:34.650 --> 00:25:35.780 align:start position:0%
calling it for multiple C++ beds and you
have<00:25:34.770><c> to</c><00:25:34.890><c> make</c><00:25:35.010><c> sure</c><00:25:35.040><c> to</c><00:25:35.310><c> follow</c><00:25:35.520><c> those</c><00:25:35.730><c> rules</c>

00:25:35.780 --> 00:25:35.790 align:start position:0%
have to make sure to follow those rules
 

00:25:35.790 --> 00:25:38.030 align:start position:0%
have to make sure to follow those rules
this<00:25:36.300><c> is</c><00:25:36.360><c> a</c><00:25:36.510><c> bit</c><00:25:36.780><c> aggravated</c><00:25:37.470><c> by</c><00:25:37.620><c> the</c><00:25:37.680><c> fact</c>

00:25:38.030 --> 00:25:38.040 align:start position:0%
this is a bit aggravated by the fact
 

00:25:38.040 --> 00:25:40.550 align:start position:0%
this is a bit aggravated by the fact
that<00:25:38.190><c> some</c><00:25:38.510><c> some</c><00:25:39.510><c> android</c><00:25:39.900><c> framework</c><00:25:40.140><c> classes</c>

00:25:40.550 --> 00:25:40.560 align:start position:0%
that some some android framework classes
 

00:25:40.560 --> 00:25:43.640 align:start position:0%
that some some android framework classes
actually<00:25:41.400><c> use</c><00:25:41.580><c> C++</c><00:25:41.850><c> code</c><00:25:42.360><c> internally</c><00:25:42.990><c> so</c><00:25:43.500><c> this</c>

00:25:43.640 --> 00:25:43.650 align:start position:0%
actually use C++ code internally so this
 

00:25:43.650 --> 00:25:45.290 align:start position:0%
actually use C++ code internally so this
gets<00:25:43.800><c> back</c><00:25:43.950><c> to</c><00:25:44.250><c> the</c><00:25:44.370><c> point</c><00:25:44.580><c> I</c><00:25:44.670><c> was</c><00:25:44.790><c> making</c><00:25:44.850><c> at</c>

00:25:45.290 --> 00:25:45.300 align:start position:0%
gets back to the point I was making at
 

00:25:45.300 --> 00:25:47.690 align:start position:0%
gets back to the point I was making at
the<00:25:45.420><c> beginning</c><00:25:45.540><c> that</c><00:25:46.140><c> you</c><00:25:46.890><c> have</c><00:25:47.100><c> to</c><00:25:47.280><c> make</c><00:25:47.430><c> sure</c>

00:25:47.690 --> 00:25:47.700 align:start position:0%
the beginning that you have to make sure
 

00:25:47.700 --> 00:25:49.340 align:start position:0%
the beginning that you have to make sure
to<00:25:47.730><c> use</c><00:25:48.090><c> those</c><00:25:48.390><c> frameworks</c><00:25:48.690><c> classes</c>

00:25:49.340 --> 00:25:49.350 align:start position:0%
to use those frameworks classes
 

00:25:49.350 --> 00:25:50.840 align:start position:0%
to use those frameworks classes
correctly<00:25:49.800><c> because</c><00:25:49.950><c> otherwise</c><00:25:50.310><c> you</c><00:25:50.550><c> can</c><00:25:50.670><c> run</c>

00:25:50.840 --> 00:25:50.850 align:start position:0%
correctly because otherwise you can run
 

00:25:50.850 --> 00:25:52.850 align:start position:0%
correctly because otherwise you can run
into<00:25:51.090><c> this</c><00:25:51.240><c> problem</c><00:25:51.300><c> even</c><00:25:52.020><c> without</c><00:25:52.470><c> actually</c>

00:25:52.850 --> 00:25:52.860 align:start position:0%
into this problem even without actually
 

00:25:52.860 --> 00:25:58.010 align:start position:0%
into this problem even without actually
writing<00:25:53.010><c> native</c><00:25:53.430><c> code</c><00:25:55.760><c> and</c><00:25:56.760><c> one</c><00:25:57.450><c> particular</c>

00:25:58.010 --> 00:25:58.020 align:start position:0%
writing native code and one particular
 

00:25:58.020 --> 00:26:00.110 align:start position:0%
writing native code and one particular
issue<00:25:58.560><c> one</c><00:25:59.040><c> issue</c><00:25:59.250><c> that's</c><00:25:59.610><c> particularly</c>

00:26:00.110 --> 00:26:00.120 align:start position:0%
issue one issue that's particularly
 

00:26:00.120 --> 00:26:02.930 align:start position:0%
issue one issue that's particularly
subtle<00:26:00.690><c> on</c><00:26:00.990><c> the</c><00:26:01.110><c> C++</c><00:26:01.770><c> side</c><00:26:02.040><c> that</c><00:26:02.760><c> actually</c>

00:26:02.930 --> 00:26:02.940 align:start position:0%
subtle on the C++ side that actually
 

00:26:02.940 --> 00:26:04.790 align:start position:0%
subtle on the C++ side that actually
contributed<00:26:03.780><c> to</c><00:26:03.960><c> this</c><00:26:04.080><c> problem</c><00:26:04.560><c> that</c><00:26:04.590><c> we</c>

00:26:04.790 --> 00:26:04.800 align:start position:0%
contributed to this problem that we
 

00:26:04.800 --> 00:26:08.390 align:start position:0%
contributed to this problem that we
spend<00:26:05.070><c> lots</c><00:26:05.190><c> of</c><00:26:05.370><c> time</c><00:26:05.430><c> on</c><00:26:06.110><c> is</c><00:26:07.110><c> that</c><00:26:07.770><c> often</c><00:26:08.310><c> on</c>

00:26:08.390 --> 00:26:08.400 align:start position:0%
spend lots of time on is that often on
 

00:26:08.400 --> 00:26:10.730 align:start position:0%
spend lots of time on is that often on
the<00:26:08.550><c> C++</c><00:26:09.120><c> side</c><00:26:09.360><c> when</c><00:26:09.690><c> you</c><00:26:09.810><c> call</c><00:26:10.020><c> the</c><00:26:10.200><c> leaf</c><00:26:10.410><c> you</c>

00:26:10.730 --> 00:26:10.740 align:start position:0%
the C++ side when you call the leaf you
 

00:26:10.740 --> 00:26:12.620 align:start position:0%
the C++ side when you call the leaf you
actually<00:26:11.160><c> end</c><00:26:11.370><c> up</c><00:26:11.460><c> invoking</c><00:26:11.910><c> some</c><00:26:12.240><c> reference</c>

00:26:12.620 --> 00:26:12.630 align:start position:0%
actually end up invoking some reference
 

00:26:12.630 --> 00:26:14.450 align:start position:0%
actually end up invoking some reference
counting<00:26:12.990><c> mechanism</c><00:26:13.590><c> that</c><00:26:13.710><c> then</c><00:26:13.920><c> takes</c><00:26:14.190><c> care</c>

00:26:14.450 --> 00:26:14.460 align:start position:0%
counting mechanism that then takes care
 

00:26:14.460 --> 00:26:16.520 align:start position:0%
counting mechanism that then takes care
of<00:26:14.490><c> the</c><00:26:14.760><c> underlying</c><00:26:15.150><c> C++</c><00:26:15.810><c> objects</c><00:26:16.380><c> that</c><00:26:16.470><c> I</c>

00:26:16.520 --> 00:26:16.530 align:start position:0%
of the underlying C++ objects that I
 

00:26:16.530 --> 00:26:20.930 align:start position:0%
of the underlying C++ objects that I
indirectly<00:26:17.070><c> reference</c><00:26:18.260><c> you</c><00:26:19.260><c> have</c><00:26:19.500><c> to</c><00:26:19.680><c> be</c><00:26:19.940><c> you</c>

00:26:20.930 --> 00:26:20.940 align:start position:0%
indirectly reference you have to be you
 

00:26:20.940 --> 00:26:22.880 align:start position:0%
indirectly reference you have to be you
have<00:26:21.060><c> to</c><00:26:21.180><c> be</c><00:26:21.300><c> really</c><00:26:21.660><c> careful</c><00:26:21.900><c> in</c><00:26:22.350><c> that</c><00:26:22.500><c> doing</c>

00:26:22.880 --> 00:26:22.890 align:start position:0%
have to be really careful in that doing
 

00:26:22.890 --> 00:26:23.960 align:start position:0%
have to be really careful in that doing
that<00:26:23.040><c> correctly</c>

00:26:23.960 --> 00:26:23.970 align:start position:0%
that correctly
 

00:26:23.970 --> 00:26:26.899 align:start position:0%
that correctly
I<00:26:24.440><c> highly</c><00:26:25.440><c> recommend</c><00:26:25.980><c> using</c><00:26:26.250><c> an</c><00:26:26.519><c> expert</c>

00:26:26.899 --> 00:26:26.909 align:start position:0%
I highly recommend using an expert
 

00:26:26.909 --> 00:26:29.180 align:start position:0%
I highly recommend using an expert
developed<00:26:27.389><c> implementation</c><00:26:28.260><c> of</c><00:26:28.440><c> reference</c>

00:26:29.180 --> 00:26:29.190 align:start position:0%
developed implementation of reference
 

00:26:29.190 --> 00:26:31.850 align:start position:0%
developed implementation of reference
counting<00:26:29.639><c> not</c><00:26:29.850><c> to</c><00:26:30.029><c> all</c><00:26:30.210><c> your</c><00:26:30.419><c> own</c><00:26:30.600><c> I</c><00:26:30.899><c> spend</c><00:26:31.799><c> a</c>

00:26:31.850 --> 00:26:31.860 align:start position:0%
counting not to all your own I spend a
 

00:26:31.860 --> 00:26:33.769 align:start position:0%
counting not to all your own I spend a
lot<00:26:31.889><c> of</c><00:26:32.039><c> time</c><00:26:32.309><c> recently</c><00:26:32.549><c> fixing</c><00:26:33.210><c> bugs</c><00:26:33.419><c> in</c>

00:26:33.769 --> 00:26:33.779 align:start position:0%
lot of time recently fixing bugs in
 

00:26:33.779 --> 00:26:35.360 align:start position:0%
lot of time recently fixing bugs in
Android<00:26:34.200><c> platform</c><00:26:34.710><c> reference</c><00:26:35.070><c> counting</c>

00:26:35.360 --> 00:26:35.370 align:start position:0%
Android platform reference counting
 

00:26:35.370 --> 00:26:39.980 align:start position:0%
Android platform reference counting
implementations<00:26:36.649><c> so</c><00:26:37.649><c> it's</c><00:26:38.580><c> not</c><00:26:38.909><c> too</c><00:26:39.389><c> likely</c><00:26:39.720><c> I</c>

00:26:39.980 --> 00:26:39.990 align:start position:0%
implementations so it's not too likely I
 

00:26:39.990 --> 00:26:41.779 align:start position:0%
implementations so it's not too likely I
think<00:26:40.409><c> that</c><00:26:40.559><c> most</c><00:26:40.830><c> people</c><00:26:40.950><c> will</c><00:26:41.399><c> get</c><00:26:41.580><c> this</c>

00:26:41.779 --> 00:26:41.789 align:start position:0%
think that most people will get this
 

00:26:41.789 --> 00:26:44.779 align:start position:0%
think that most people will get this
right<00:26:42.799><c> implementing</c><00:26:43.799><c> it</c><00:26:43.919><c> themselves</c><00:26:44.100><c> there</c>

00:26:44.779 --> 00:26:44.789 align:start position:0%
right implementing it themselves there
 

00:26:44.789 --> 00:26:46.340 align:start position:0%
right implementing it themselves there
are<00:26:44.820><c> whole</c><00:26:45.000><c> bunch</c><00:26:45.149><c> of</c><00:26:45.330><c> different</c><00:26:45.510><c> issues</c><00:26:45.870><c> here</c>

00:26:46.340 --> 00:26:46.350 align:start position:0%
are whole bunch of different issues here
 

00:26:46.350 --> 00:26:48.200 align:start position:0%
are whole bunch of different issues here
having<00:26:46.649><c> to</c><00:26:46.679><c> do</c><00:26:46.919><c> with</c><00:26:47.130><c> memory</c><00:26:47.399><c> ordering</c><00:26:47.970><c> bugs</c>

00:26:48.200 --> 00:26:48.210 align:start position:0%
having to do with memory ordering bugs
 

00:26:48.210 --> 00:26:51.110 align:start position:0%
having to do with memory ordering bugs
and<00:26:48.630><c> self</c><00:26:48.870><c> assignments</c><00:26:49.620><c> and</c><00:26:49.799><c> so</c><00:26:50.010><c> on</c><00:26:50.100><c> it</c><00:26:50.700><c> only</c>

00:26:51.110 --> 00:26:51.120 align:start position:0%
and self assignments and so on it only
 

00:26:51.120 --> 00:26:53.840 align:start position:0%
and self assignments and so on it only
is<00:26:51.360><c> this</c><00:26:52.289><c> tiny</c><00:26:52.649><c> amount</c><00:26:52.830><c> of</c><00:26:53.100><c> code</c><00:26:53.309><c> but</c><00:26:53.580><c> it's</c><00:26:53.730><c> a</c>

00:26:53.840 --> 00:26:53.850 align:start position:0%
is this tiny amount of code but it's a
 

00:26:53.850 --> 00:26:59.690 align:start position:0%
is this tiny amount of code but it's a
really<00:26:54.179><c> tricky</c><00:26:54.389><c> tricky</c><00:26:55.139><c> piece</c><00:26:55.320><c> of</c><00:26:55.470><c> code</c><00:26:58.700><c> but</c>

00:26:59.690 --> 00:26:59.700 align:start position:0%
really tricky tricky piece of code but
 

00:26:59.700 --> 00:27:00.950 align:start position:0%
really tricky tricky piece of code but
assuming<00:27:00.149><c> you</c><00:27:00.210><c> have</c><00:27:00.389><c> a</c><00:27:00.450><c> correct</c><00:27:00.690><c> reference</c>

00:27:00.950 --> 00:27:00.960 align:start position:0%
assuming you have a correct reference
 

00:27:00.960 --> 00:27:03.680 align:start position:0%
assuming you have a correct reference
counting<00:27:01.500><c> implementation</c><00:27:02.309><c> it's</c><00:27:02.909><c> still</c><00:27:03.240><c> hard</c>

00:27:03.680 --> 00:27:03.690 align:start position:0%
counting implementation it's still hard
 

00:27:03.690 --> 00:27:06.980 align:start position:0%
counting implementation it's still hard
to<00:27:03.840><c> use</c><00:27:04.169><c> it</c><00:27:04.350><c> correctly</c><00:27:05.450><c> so</c><00:27:06.450><c> one</c><00:27:06.659><c> thing</c><00:27:06.840><c> you</c>

00:27:06.980 --> 00:27:06.990 align:start position:0%
to use it correctly so one thing you
 

00:27:06.990 --> 00:27:08.629 align:start position:0%
to use it correctly so one thing you
have<00:27:07.169><c> to</c><00:27:07.200><c> remember</c><00:27:07.590><c> for</c><00:27:07.980><c> something</c><00:27:08.309><c> like</c><00:27:08.429><c> the</c>

00:27:08.629 --> 00:27:08.639 align:start position:0%
have to remember for something like the
 

00:27:08.639 --> 00:27:10.250 align:start position:0%
have to remember for something like the
walls<00:27:08.850><c> vary</c><00:27:09.149><c> a</c><00:27:09.269><c> little</c><00:27:09.450><c> bit</c><00:27:09.600><c> depending</c><00:27:09.720><c> on</c><00:27:10.139><c> the</c>

00:27:10.250 --> 00:27:10.260 align:start position:0%
walls vary a little bit depending on the
 

00:27:10.260 --> 00:27:11.750 align:start position:0%
walls vary a little bit depending on the
implementation<00:27:10.470><c> but</c><00:27:11.190><c> for</c><00:27:11.370><c> something</c><00:27:11.639><c> like</c>

00:27:11.750 --> 00:27:11.760 align:start position:0%
implementation but for something like
 

00:27:11.760 --> 00:27:13.370 align:start position:0%
implementation but for something like
stitch<00:27:11.940><c> footer</c>

00:27:13.370 --> 00:27:13.380 align:start position:0%
stitch footer
 

00:27:13.380 --> 00:27:15.409 align:start position:0%
stitch footer
when<00:27:14.070><c> you</c><00:27:14.190><c> create</c><00:27:14.429><c> your</c><00:27:14.519><c> shell</c><00:27:14.909><c> put</c><00:27:15.149><c> it</c><00:27:15.299><c> to</c>

00:27:15.409 --> 00:27:15.419 align:start position:0%
when you create your shell put it to
 

00:27:15.419 --> 00:27:19.399 align:start position:0%
when you create your shell put it to
something<00:27:16.399><c> the</c><00:27:17.399><c> object</c><00:27:18.059><c> will</c><00:27:18.389><c> will</c><00:27:19.260><c> be</c>

00:27:19.399 --> 00:27:19.409 align:start position:0%
something the object will will be
 

00:27:19.409 --> 00:27:21.409 align:start position:0%
something the object will will be
de-allocated<00:27:19.710><c> when</c><00:27:20.399><c> the</c><00:27:20.519><c> reference</c><00:27:20.909><c> counts</c>

00:27:21.409 --> 00:27:21.419 align:start position:0%
de-allocated when the reference counts
 

00:27:21.419 --> 00:27:23.539 align:start position:0%
de-allocated when the reference counts
associated<00:27:22.169><c> with</c><00:27:22.440><c> copies</c><00:27:22.889><c> of</c><00:27:22.919><c> that</c><00:27:23.250><c> shared</c>

00:27:23.539 --> 00:27:23.549 align:start position:0%
associated with copies of that shared
 

00:27:23.549 --> 00:27:26.269 align:start position:0%
associated with copies of that shared
Potter<00:27:23.820><c> goes</c><00:27:24.120><c> to</c><00:27:24.360><c> zero</c><00:27:24.659><c> so</c><00:27:25.320><c> creating</c><00:27:25.889><c> multiple</c>

00:27:26.269 --> 00:27:26.279 align:start position:0%
Potter goes to zero so creating multiple
 

00:27:26.279 --> 00:27:29.480 align:start position:0%
Potter goes to zero so creating multiple
shell<00:27:26.700><c> footers</c><00:27:27.120><c> to</c><00:27:27.149><c> the</c><00:27:27.510><c> same</c><00:27:27.720><c> underlying</c><00:27:28.490><c> to</c>

00:27:29.480 --> 00:27:29.490 align:start position:0%
shell footers to the same underlying to
 

00:27:29.490 --> 00:27:31.250 align:start position:0%
shell footers to the same underlying to
the<00:27:29.639><c> same</c><00:27:30.059><c> corresponding</c><00:27:30.870><c> to</c><00:27:30.960><c> the</c><00:27:31.080><c> same</c>

00:27:31.250 --> 00:27:31.260 align:start position:0%
the same corresponding to the same
 

00:27:31.260 --> 00:27:33.980 align:start position:0%
the same corresponding to the same
underlying<00:27:31.880><c> bare</c><00:27:32.880><c> pointer</c><00:27:33.389><c> it's</c><00:27:33.600><c> not</c><00:27:33.720><c> likely</c>

00:27:33.980 --> 00:27:33.990 align:start position:0%
underlying bare pointer it's not likely
 

00:27:33.990 --> 00:27:37.460 align:start position:0%
underlying bare pointer it's not likely
to<00:27:34.320><c> work</c><00:27:34.500><c> well</c><00:27:35.059><c> it's</c><00:27:36.059><c> also</c><00:27:36.539><c> not</c><00:27:36.870><c> likely</c><00:27:37.260><c> to</c>

00:27:37.460 --> 00:27:37.470 align:start position:0%
to work well it's also not likely to
 

00:27:37.470 --> 00:27:39.139 align:start position:0%
to work well it's also not likely to
work<00:27:37.769><c> well</c><00:27:38.070><c> to</c><00:27:38.370><c> generate</c><00:27:38.880><c> a</c><00:27:38.909><c> reference</c>

00:27:39.139 --> 00:27:39.149 align:start position:0%
work well to generate a reference
 

00:27:39.149 --> 00:27:40.789 align:start position:0%
work well to generate a reference
counter<00:27:39.659><c> pointer</c><00:27:39.990><c> to</c><00:27:40.139><c> this</c><00:27:40.289><c> and</c><00:27:40.559><c> they</c><00:27:40.620><c> can</c>

00:27:40.789 --> 00:27:40.799 align:start position:0%
counter pointer to this and they can
 

00:27:40.799 --> 00:27:42.620 align:start position:0%
counter pointer to this and they can
selectively<00:27:41.279><c> for</c><00:27:41.519><c> similar</c><00:27:41.880><c> sort</c><00:27:42.090><c> of</c><00:27:42.149><c> reason</c>

00:27:42.620 --> 00:27:42.630 align:start position:0%
selectively for similar sort of reason
 

00:27:42.630 --> 00:27:44.720 align:start position:0%
selectively for similar sort of reason
because<00:27:43.470><c> probably</c><00:27:43.980><c> by</c><00:27:44.100><c> the</c><00:27:44.159><c> time</c><00:27:44.429><c> you</c><00:27:44.549><c> leave</c>

00:27:44.720 --> 00:27:44.730 align:start position:0%
because probably by the time you leave
 

00:27:44.730 --> 00:27:46.370 align:start position:0%
because probably by the time you leave
the<00:27:44.789><c> constructor</c><00:27:45.510><c> that</c><00:27:45.539><c> reference</c><00:27:46.169><c> count</c>

00:27:46.370 --> 00:27:46.380 align:start position:0%
the constructor that reference count
 

00:27:46.380 --> 00:27:47.750 align:start position:0%
the constructor that reference count
will<00:27:46.529><c> have</c><00:27:46.649><c> gone</c><00:27:46.799><c> to</c><00:27:46.950><c> zero</c><00:27:47.159><c> and</c><00:27:47.370><c> you</c><00:27:47.429><c> will</c><00:27:47.610><c> be</c>

00:27:47.750 --> 00:27:47.760 align:start position:0%
will have gone to zero and you will be
 

00:27:47.760 --> 00:27:49.129 align:start position:0%
will have gone to zero and you will be
allocate<00:27:48.149><c> the</c><00:27:48.269><c> object</c><00:27:48.299><c> before</c><00:27:48.779><c> you</c><00:27:49.019><c> ever</c>

00:27:49.129 --> 00:27:49.139 align:start position:0%
allocate the object before you ever
 

00:27:49.139 --> 00:27:50.779 align:start position:0%
allocate the object before you ever
leave<00:27:49.380><c> the</c><00:27:49.529><c> constructor</c><00:27:50.070><c> which</c><00:27:50.279><c> is</c><00:27:50.399><c> not</c><00:27:50.549><c> good</c>

00:27:50.779 --> 00:27:50.789 align:start position:0%
leave the constructor which is not good
 

00:27:50.789 --> 00:27:53.330 align:start position:0%
leave the constructor which is not good
so<00:27:51.450><c> you</c><00:27:52.139><c> have</c><00:27:52.260><c> to</c><00:27:52.350><c> be</c><00:27:52.470><c> careful</c><00:27:52.830><c> with</c><00:27:52.950><c> that</c><00:27:52.980><c> sort</c>

00:27:53.330 --> 00:27:53.340 align:start position:0%
so you have to be careful with that sort
 

00:27:53.340 --> 00:27:57.019 align:start position:0%
so you have to be careful with that sort
of<00:27:53.399><c> thing</c><00:27:54.049><c> the</c><00:27:55.049><c> dead</c><00:27:55.500><c> safety</c><00:27:56.010><c> walls</c><00:27:56.309><c> are</c><00:27:56.669><c> in</c>

00:27:57.019 --> 00:27:57.029 align:start position:0%
of thing the dead safety walls are in
 

00:27:57.029 --> 00:27:59.600 align:start position:0%
of thing the dead safety walls are in
some<00:27:57.480><c> ways</c><00:27:57.659><c> even</c><00:27:58.230><c> more</c><00:27:58.409><c> subtle</c><00:27:58.860><c> and</c><00:27:59.130><c> something</c>

00:27:59.600 --> 00:27:59.610 align:start position:0%
some ways even more subtle and something
 

00:27:59.610 --> 00:28:01.399 align:start position:0%
some ways even more subtle and something
and<00:27:59.820><c> also</c><00:28:00.330><c> something</c><00:28:00.570><c> that</c><00:28:00.750><c> you</c><00:28:00.960><c> really</c><00:28:01.139><c> want</c>

00:28:01.399 --> 00:28:01.409 align:start position:0%
and also something that you really want
 

00:28:01.409 --> 00:28:02.889 align:start position:0%
and also something that you really want
to<00:28:01.470><c> watch</c><00:28:01.620><c> out</c><00:28:01.860><c> for</c>

00:28:02.889 --> 00:28:02.899 align:start position:0%
to watch out for
 

00:28:02.899 --> 00:28:05.840 align:start position:0%
to watch out for
so<00:28:03.899><c> assuming</c><00:28:04.620><c> here</c><00:28:04.950><c> I</c><00:28:05.010><c> have</c><00:28:05.279><c> a</c><00:28:05.309><c> bunch</c><00:28:05.669><c> of</c>

00:28:05.840 --> 00:28:05.850 align:start position:0%
so assuming here I have a bunch of
 

00:28:05.850 --> 00:28:10.360 align:start position:0%
so assuming here I have a bunch of
shared<00:28:06.179><c> photos</c><00:28:07.250><c> it's</c><00:28:08.330><c> actually</c><00:28:09.330><c> okay</c>

00:28:10.360 --> 00:28:10.370 align:start position:0%
shared photos it's actually okay
 

00:28:10.370 --> 00:28:13.039 align:start position:0%
shared photos it's actually okay
according<00:28:11.370><c> to</c><00:28:11.519><c> the</c><00:28:11.639><c> normal</c><00:28:12.029><c> C++</c><00:28:12.750><c> thread</c>

00:28:13.039 --> 00:28:13.049 align:start position:0%
according to the normal C++ thread
 

00:28:13.049 --> 00:28:16.789 align:start position:0%
according to the normal C++ thread
safety<00:28:13.350><c> rules</c><00:28:13.830><c> if</c><00:28:14.070><c> I</c><00:28:14.340><c> take</c><00:28:14.639><c> X</c><00:28:15.269><c> the</c><00:28:15.899><c> shell</c><00:28:16.169><c> put</c><00:28:16.409><c> X</c>

00:28:16.789 --> 00:28:16.799 align:start position:0%
safety rules if I take X the shell put X
 

00:28:16.799 --> 00:28:19.370 align:start position:0%
safety rules if I take X the shell put X
and<00:28:17.190><c> copy</c><00:28:17.880><c> it</c><00:28:18.149><c> simultaneously</c><00:28:18.539><c> in</c><00:28:19.260><c> two</c>

00:28:19.370 --> 00:28:19.380 align:start position:0%
and copy it simultaneously in two
 

00:28:19.380 --> 00:28:21.769 align:start position:0%
and copy it simultaneously in two
different<00:28:19.889><c> threads</c><00:28:20.039><c> to</c><00:28:21.029><c> two</c><00:28:21.269><c> different</c><00:28:21.419><c> other</c>

00:28:21.769 --> 00:28:21.779 align:start position:0%
different threads to two different other
 

00:28:21.779 --> 00:28:24.440 align:start position:0%
different threads to two different other
pointers<00:28:22.380><c> this</c><00:28:22.980><c> will</c><00:28:23.279><c> tie</c><00:28:23.519><c> to</c><00:28:23.580><c> simultaneously</c>

00:28:24.440 --> 00:28:24.450 align:start position:0%
pointers this will tie to simultaneously
 

00:28:24.450 --> 00:28:26.330 align:start position:0%
pointers this will tie to simultaneously
update<00:28:24.690><c> the</c><00:28:25.080><c> reference</c><00:28:25.470><c> count</c><00:28:25.740><c> associated</c>

00:28:26.330 --> 00:28:26.340 align:start position:0%
update the reference count associated
 

00:28:26.340 --> 00:28:28.250 align:start position:0%
update the reference count associated
with<00:28:26.490><c> X</c><00:28:26.760><c> but</c><00:28:27.389><c> that's</c><00:28:27.510><c> okay</c><00:28:27.899><c> it's</c><00:28:28.110><c> the</c>

00:28:28.250 --> 00:28:28.260 align:start position:0%
with X but that's okay it's the
 

00:28:28.260 --> 00:28:29.990 align:start position:0%
with X but that's okay it's the
implementations<00:28:29.039><c> job</c><00:28:29.309><c> to</c><00:28:29.519><c> make</c><00:28:29.669><c> sure</c><00:28:29.880><c> that</c>

00:28:29.990 --> 00:28:30.000 align:start position:0%
implementations job to make sure that
 

00:28:30.000 --> 00:28:32.779 align:start position:0%
implementations job to make sure that
that<00:28:30.149><c> works</c><00:28:30.419><c> correctly</c><00:28:31.100><c> so</c><00:28:32.100><c> that's</c><00:28:32.279><c> that's</c>

00:28:32.779 --> 00:28:32.789 align:start position:0%
that works correctly so that's that's
 

00:28:32.789 --> 00:28:35.690 align:start position:0%
that works correctly so that's that's
fine<00:28:33.210><c> what's</c><00:28:34.139><c> not</c><00:28:34.379><c> fine</c><00:28:34.830><c> and</c><00:28:35.340><c> what</c><00:28:35.519><c> in</c><00:28:35.669><c> fact</c>

00:28:35.690 --> 00:28:35.700 align:start position:0%
fine what's not fine and what in fact
 

00:28:35.700 --> 00:28:37.460 align:start position:0%
fine what's not fine and what in fact
calls<00:28:36.210><c> the</c><00:28:36.480><c> sort</c><00:28:36.750><c> of</c><00:28:36.809><c> law</c>

00:28:37.460 --> 00:28:37.470 align:start position:0%
calls the sort of law
 

00:28:37.470 --> 00:28:39.260 align:start position:0%
calls the sort of law
extending<00:28:37.919><c> bugs</c><00:28:38.130><c> that</c><00:28:38.400><c> we</c><00:28:38.580><c> have</c><00:28:38.730><c> to</c><00:28:38.850><c> deal</c><00:28:39.000><c> with</c>

00:28:39.260 --> 00:28:39.270 align:start position:0%
extending bugs that we have to deal with
 

00:28:39.270 --> 00:28:42.520 align:start position:0%
extending bugs that we have to deal with
here<00:28:39.630><c> is</c><00:28:39.840><c> the</c><00:28:40.650><c> last</c><00:28:40.919><c> thing</c><00:28:41.309><c> on</c><00:28:41.520><c> the</c><00:28:41.640><c> slide</c><00:28:41.909><c> here</c>

00:28:42.520 --> 00:28:42.530 align:start position:0%
here is the last thing on the slide here
 

00:28:42.530 --> 00:28:44.750 align:start position:0%
here is the last thing on the slide here
simultaneous<00:28:43.530><c> assignments</c><00:28:44.280><c> to</c><00:28:44.429><c> the</c><00:28:44.460><c> same</c>

00:28:44.750 --> 00:28:44.760 align:start position:0%
simultaneous assignments to the same
 

00:28:44.760 --> 00:28:46.880 align:start position:0%
simultaneous assignments to the same
reference<00:28:45.030><c> counted</c><00:28:45.600><c> pointers</c><00:28:46.020><c> if</c><00:28:46.260><c> I</c>

00:28:46.880 --> 00:28:46.890 align:start position:0%
reference counted pointers if I
 

00:28:46.890 --> 00:28:49.220 align:start position:0%
reference counted pointers if I
simultaneously<00:28:47.820><c> assign</c><00:28:48.179><c> even</c><00:28:48.600><c> null</c><00:28:48.809><c> to</c><00:28:49.110><c> the</c>

00:28:49.220 --> 00:28:49.230 align:start position:0%
simultaneously assign even null to the
 

00:28:49.230 --> 00:28:51.110 align:start position:0%
simultaneously assign even null to the
same<00:28:49.500><c> reference</c><00:28:49.740><c> counted</c><00:28:50.340><c> pointer</c><00:28:50.730><c> that</c>

00:28:51.110 --> 00:28:51.120 align:start position:0%
same reference counted pointer that
 

00:28:51.120 --> 00:28:52.880 align:start position:0%
same reference counted pointer that
looks<00:28:51.360><c> pretty</c><00:28:51.539><c> benign</c><00:28:51.809><c> I'm</c><00:28:52.289><c> assigning</c><00:28:52.650><c> the</c>

00:28:52.880 --> 00:28:52.890 align:start position:0%
looks pretty benign I'm assigning the
 

00:28:52.890 --> 00:28:54.590 align:start position:0%
looks pretty benign I'm assigning the
same<00:28:53.100><c> thing</c><00:28:53.400><c> concurrently</c><00:28:53.940><c> to</c><00:28:54.000><c> two</c><00:28:54.240><c> different</c>

00:28:54.590 --> 00:28:54.600 align:start position:0%
same thing concurrently to two different
 

00:28:54.600 --> 00:28:56.810 align:start position:0%
same thing concurrently to two different
threads<00:28:54.780><c> which</c><00:28:55.110><c> what</c><00:28:55.500><c> could</c><00:28:55.679><c> go</c><00:28:55.710><c> wrong</c><00:28:56.010><c> the</c>

00:28:56.810 --> 00:28:56.820 align:start position:0%
threads which what could go wrong the
 

00:28:56.820 --> 00:28:59.690 align:start position:0%
threads which what could go wrong the
problem<00:28:57.299><c> is</c><00:28:57.539><c> its</c><00:28:57.900><c> disallowed</c><00:28:58.559><c> by</c><00:28:58.799><c> C++</c><00:28:59.400><c> rules</c>

00:28:59.690 --> 00:28:59.700 align:start position:0%
problem is its disallowed by C++ rules
 

00:28:59.700 --> 00:29:01.520 align:start position:0%
problem is its disallowed by C++ rules
for<00:28:59.940><c> good</c><00:29:00.090><c> reason</c><00:29:00.510><c> because</c><00:29:00.720><c> what</c><00:29:01.110><c> happens</c>

00:29:01.520 --> 00:29:01.530 align:start position:0%
for good reason because what happens
 

00:29:01.530 --> 00:29:04.039 align:start position:0%
for good reason because what happens
here<00:29:01.650><c> is</c><00:29:02.100><c> both</c><00:29:03.000><c> threads</c><00:29:03.360><c> will</c><00:29:03.809><c> try</c><00:29:04.020><c> to</c>

00:29:04.039 --> 00:29:04.049 align:start position:0%
here is both threads will try to
 

00:29:04.049 --> 00:29:07.430 align:start position:0%
here is both threads will try to
simultaneously<00:29:05.010><c> the</c><00:29:05.280><c> allocated</c><00:29:06.440><c> decremented</c>

00:29:07.430 --> 00:29:07.440 align:start position:0%
simultaneously the allocated decremented
 

00:29:07.440 --> 00:29:10.070 align:start position:0%
simultaneously the allocated decremented
reference<00:29:07.799><c> count</c><00:29:08.600><c> associated</c><00:29:09.600><c> with</c><00:29:09.840><c> the</c>

00:29:10.070 --> 00:29:10.080 align:start position:0%
reference count associated with the
 

00:29:10.080 --> 00:29:13.490 align:start position:0%
reference count associated with the
original<00:29:10.679><c> value</c><00:29:11.100><c> of</c><00:29:11.220><c> P</c><00:29:11.490><c> if</c><00:29:12.330><c> they</c><00:29:13.200><c> race</c><00:29:13.470><c> each</c>

00:29:13.490 --> 00:29:13.500 align:start position:0%
original value of P if they race each
 

00:29:13.500 --> 00:29:16.039 align:start position:0%
original value of P if they race each
other<00:29:13.919><c> just</c><00:29:14.370><c> right</c><00:29:14.549><c> so</c><00:29:15.090><c> they</c><00:29:15.240><c> both</c><00:29:15.539><c> do</c><00:29:15.840><c> this</c>

00:29:16.039 --> 00:29:16.049 align:start position:0%
other just right so they both do this
 

00:29:16.049 --> 00:29:18.740 align:start position:0%
other just right so they both do this
before<00:29:16.650><c> either</c><00:29:17.130><c> one</c><00:29:17.400><c> actually</c><00:29:17.940><c> assigns</c><00:29:18.299><c> no</c><00:29:18.539><c> to</c>

00:29:18.740 --> 00:29:18.750 align:start position:0%
before either one actually assigns no to
 

00:29:18.750 --> 00:29:20.659 align:start position:0%
before either one actually assigns no to
the<00:29:18.840><c> pointer</c><00:29:19.260><c> they</c><00:29:19.770><c> will</c><00:29:20.010><c> end</c><00:29:20.220><c> up</c><00:29:20.370><c> both</c>

00:29:20.659 --> 00:29:20.669 align:start position:0%
the pointer they will end up both
 

00:29:20.669 --> 00:29:22.820 align:start position:0%
the pointer they will end up both
decrementing<00:29:21.600><c> the</c><00:29:22.049><c> reference</c><00:29:22.470><c> count</c><00:29:22.679><c> which</c>

00:29:22.820 --> 00:29:22.830 align:start position:0%
decrementing the reference count which
 

00:29:22.830 --> 00:29:25.159 align:start position:0%
decrementing the reference count which
was<00:29:23.010><c> originally</c><00:29:23.730><c> had</c><00:29:23.909><c> a</c><00:29:23.940><c> value</c><00:29:24.330><c> of</c><00:29:24.450><c> 1</c><00:29:24.720><c> because</c>

00:29:25.159 --> 00:29:25.169 align:start position:0%
was originally had a value of 1 because
 

00:29:25.169 --> 00:29:29.600 align:start position:0%
was originally had a value of 1 because
it<00:29:25.320><c> was</c><00:29:25.440><c> referenced</c><00:29:25.620><c> by</c><00:29:26.100><c> P</c><00:29:26.159><c> that</c><00:29:28.490><c> doesn't</c><00:29:29.490><c> go</c>

00:29:29.600 --> 00:29:29.610 align:start position:0%
it was referenced by P that doesn't go
 

00:29:29.610 --> 00:29:32.000 align:start position:0%
it was referenced by P that doesn't go
well<00:29:29.850><c> in</c><00:29:30.690><c> the</c><00:29:30.870><c> excellent</c><00:29:31.320><c> reference</c><00:29:31.770><c> count</c>

00:29:32.000 --> 00:29:32.010 align:start position:0%
well in the excellent reference count
 

00:29:32.010 --> 00:29:39.159 align:start position:0%
well in the excellent reference count
that<00:29:32.220><c> Commander's</c><00:29:32.760><c> is</c><00:29:33.059><c> always</c><00:29:33.539><c> there</c><00:29:33.840><c> so</c>

00:29:39.159 --> 00:29:39.169 align:start position:0%
 
 

00:29:39.169 --> 00:29:43.399 align:start position:0%
 
summarizing<00:29:40.169><c> here</c><00:29:41.990><c> important</c><00:29:42.990><c> point</c><00:29:43.230><c> is</c>

00:29:43.399 --> 00:29:43.409 align:start position:0%
summarizing here important point is
 

00:29:43.409 --> 00:29:47.779 align:start position:0%
summarizing here important point is
avoid<00:29:43.789><c> finalization</c><00:29:45.620><c> use</c><00:29:46.620><c> java.lang</c><00:29:47.429><c> that</c>

00:29:47.779 --> 00:29:47.789 align:start position:0%
avoid finalization use java.lang that
 

00:29:47.789 --> 00:29:50.659 align:start position:0%
avoid finalization use java.lang that
phantom<00:29:48.299><c> reference</c><00:29:48.809><c> instead</c><00:29:49.669><c> currently</c>

00:29:50.659 --> 00:29:50.669 align:start position:0%
phantom reference instead currently
 

00:29:50.669 --> 00:29:52.760 align:start position:0%
phantom reference instead currently
that's<00:29:50.880><c> a</c><00:29:51.000><c> little</c><00:29:51.210><c> bit</c><00:29:51.390><c> clumsy</c><00:29:51.690><c> but</c><00:29:51.929><c> it</c><00:29:52.320><c> boyd's</c>

00:29:52.760 --> 00:29:52.770 align:start position:0%
that's a little bit clumsy but it boyd's
 

00:29:52.770 --> 00:29:54.169 align:start position:0%
that's a little bit clumsy but it boyd's
you<00:29:52.980><c> also</c><00:29:53.130><c> the</c><00:29:53.370><c> source</c><00:29:53.760><c> of</c><00:29:53.850><c> potential</c>

00:29:54.169 --> 00:29:54.179 align:start position:0%
you also the source of potential
 

00:29:54.179 --> 00:29:58.340 align:start position:0%
you also the source of potential
headaches<00:29:55.490><c> it's</c><00:29:56.490><c> if</c><00:29:57.450><c> you</c><00:29:57.600><c> want</c><00:29:57.780><c> to</c><00:29:57.870><c> read</c><00:29:58.020><c> up</c><00:29:58.169><c> on</c>

00:29:58.340 --> 00:29:58.350 align:start position:0%
headaches it's if you want to read up on
 

00:29:58.350 --> 00:30:00.919 align:start position:0%
headaches it's if you want to read up on
this<00:29:58.530><c> more</c><00:29:58.890><c> I</c><00:29:59.190><c> suggest</c><00:29:59.700><c> you</c><00:30:00.090><c> actually</c><00:30:00.539><c> look</c><00:30:00.750><c> up</c>

00:30:00.919 --> 00:30:00.929 align:start position:0%
this more I suggest you actually look up
 

00:30:00.929 --> 00:30:03.909 align:start position:0%
this more I suggest you actually look up
the<00:30:01.289><c> the</c><00:30:01.770><c> Java</c><00:30:02.159><c> 9</c><00:30:02.429><c> reach</c><00:30:02.700><c> ability</c><00:30:02.970><c> fence</c>

00:30:03.909 --> 00:30:03.919 align:start position:0%
the the Java 9 reach ability fence
 

00:30:03.919 --> 00:30:06.380 align:start position:0%
the the Java 9 reach ability fence
contact<00:30:04.919><c> and</c><00:30:05.190><c> discussion</c><00:30:05.789><c> that'll</c><00:30:06.120><c> give</c><00:30:06.270><c> you</c>

00:30:06.380 --> 00:30:06.390 align:start position:0%
contact and discussion that'll give you
 

00:30:06.390 --> 00:30:08.830 align:start position:0%
contact and discussion that'll give you
a<00:30:06.419><c> little</c><00:30:06.630><c> more</c><00:30:06.870><c> insight</c><00:30:07.289><c> as</c><00:30:07.530><c> to</c><00:30:07.559><c> why</c><00:30:07.860><c> this</c><00:30:07.919><c> is</c>

00:30:08.830 --> 00:30:08.840 align:start position:0%
a little more insight as to why this is
 

00:30:08.840 --> 00:30:11.480 align:start position:0%
a little more insight as to why this is
why<00:30:09.840><c> some</c><00:30:10.260><c> of</c><00:30:10.289><c> these</c><00:30:10.470><c> things</c><00:30:10.679><c> are</c><00:30:10.890><c> problem</c><00:30:11.309><c> and</c>

00:30:11.480 --> 00:30:11.490 align:start position:0%
why some of these things are problem and
 

00:30:11.490 --> 00:30:13.000 align:start position:0%
why some of these things are problem and
particular<00:30:11.909><c> why</c><00:30:12.150><c> you</c><00:30:12.210><c> have</c><00:30:12.510><c> to</c><00:30:12.659><c> worry</c><00:30:12.870><c> about</c>

00:30:13.000 --> 00:30:13.010 align:start position:0%
particular why you have to worry about
 

00:30:13.010 --> 00:30:16.820 align:start position:0%
particular why you have to worry about
premature<00:30:14.010><c> premature</c><00:30:14.970><c> cleanup</c><00:30:15.900><c> with</c><00:30:16.620><c> the</c>

00:30:16.820 --> 00:30:16.830 align:start position:0%
premature premature cleanup with the
 

00:30:16.830 --> 00:30:18.950 align:start position:0%
premature premature cleanup with the
Java<00:30:17.159><c> semantics</c><00:30:17.880><c> again</c><00:30:18.299><c> not</c><00:30:18.480><c> so</c><00:30:18.659><c> much</c><00:30:18.780><c> on</c>

00:30:18.950 --> 00:30:18.960 align:start position:0%
Java semantics again not so much on
 

00:30:18.960 --> 00:30:22.340 align:start position:0%
Java semantics again not so much on
Android<00:30:19.350><c> and</c><00:30:20.090><c> then</c><00:30:21.090><c> stay</c><00:30:21.450><c> tuned</c><00:30:21.750><c> for</c><00:30:21.990><c> future</c>

00:30:22.340 --> 00:30:22.350 align:start position:0%
Android and then stay tuned for future
 

00:30:22.350 --> 00:30:26.990 align:start position:0%
Android and then stay tuned for future
improvements<00:30:22.650><c> in</c><00:30:23.159><c> this</c><00:30:23.280><c> area</c><00:30:23.490><c> here</c><00:30:25.039><c> if</c><00:30:26.039><c> you</c>

00:30:26.990 --> 00:30:27.000 align:start position:0%
improvements in this area here if you
 

00:30:27.000 --> 00:30:29.810 align:start position:0%
improvements in this area here if you
allocate<00:30:27.600><c> a</c><00:30:27.659><c> lot</c><00:30:27.840><c> of</c><00:30:28.289><c> C++</c><00:30:28.860><c> objects</c><00:30:29.429><c> if</c><00:30:29.549><c> that's</c>

00:30:29.810 --> 00:30:29.820 align:start position:0%
allocate a lot of C++ objects if that's
 

00:30:29.820 --> 00:30:31.850 align:start position:0%
allocate a lot of C++ objects if that's
where<00:30:30.030><c> most</c><00:30:30.360><c> of</c><00:30:30.539><c> your</c><00:30:30.809><c> heat</c><00:30:31.080><c> space</c><00:30:31.409><c> ends</c><00:30:31.740><c> up</c>

00:30:31.850 --> 00:30:31.860 align:start position:0%
where most of your heat space ends up
 

00:30:31.860 --> 00:30:33.380 align:start position:0%
where most of your heat space ends up
getting<00:30:32.010><c> spent</c><00:30:32.520><c> then</c><00:30:32.940><c> you</c><00:30:33.120><c> should</c><00:30:33.270><c> think</c>

00:30:33.380 --> 00:30:33.390 align:start position:0%
getting spent then you should think
 

00:30:33.390 --> 00:30:36.260 align:start position:0%
getting spent then you should think
about<00:30:33.570><c> explicit</c><00:30:34.230><c> DC</c><00:30:34.590><c> triggering</c><00:30:35.130><c> but</c><00:30:35.940><c> doing</c>

00:30:36.260 --> 00:30:36.270 align:start position:0%
about explicit DC triggering but doing
 

00:30:36.270 --> 00:30:37.730 align:start position:0%
about explicit DC triggering but doing
it<00:30:36.419><c> really</c><00:30:36.659><c> carefully</c><00:30:36.900><c> make</c><00:30:37.320><c> sure</c><00:30:37.470><c> you</c><00:30:37.590><c> keep</c>

00:30:37.730 --> 00:30:37.740 align:start position:0%
it really carefully make sure you keep
 

00:30:37.740 --> 00:30:39.740 align:start position:0%
it really carefully make sure you keep
track<00:30:37.799><c> of</c><00:30:38.070><c> how</c><00:30:38.280><c> much</c><00:30:38.520><c> C++</c><00:30:39.240><c> memory</c><00:30:39.570><c> you've</c>

00:30:39.740 --> 00:30:39.750 align:start position:0%
track of how much C++ memory you've
 

00:30:39.750 --> 00:30:41.840 align:start position:0%
track of how much C++ memory you've
allocated<00:30:40.080><c> and</c><00:30:40.590><c> when</c><00:30:41.039><c> you've</c><00:30:41.159><c> allocated</c><00:30:41.370><c> a</c>

00:30:41.840 --> 00:30:41.850 align:start position:0%
allocated and when you've allocated a
 

00:30:41.850 --> 00:30:44.570 align:start position:0%
allocated and when you've allocated a
lot<00:30:42.090><c> so</c><00:30:42.360><c> you</c><00:30:42.419><c> think</c><00:30:42.659><c> it</c><00:30:42.750><c> might</c><00:30:42.929><c> be</c><00:30:42.960><c> useful</c><00:30:43.580><c> then</c>

00:30:44.570 --> 00:30:44.580 align:start position:0%
lot so you think it might be useful then
 

00:30:44.580 --> 00:30:47.090 align:start position:0%
lot so you think it might be useful then
you<00:30:44.610><c> can</c><00:30:45.059><c> invoke</c><00:30:45.299><c> the</c><00:30:45.510><c> garbage</c><00:30:45.870><c> collector</c><00:30:46.500><c> so</c>

00:30:47.090 --> 00:30:47.100 align:start position:0%
you can invoke the garbage collector so
 

00:30:47.100 --> 00:30:49.520 align:start position:0%
you can invoke the garbage collector so
phantom<00:30:47.940><c> references</c><00:30:48.630><c> for</c><00:30:48.870><c> dead</c><00:30:49.020><c> objects</c>

00:30:49.520 --> 00:30:49.530 align:start position:0%
phantom references for dead objects
 

00:30:49.530 --> 00:30:50.820 align:start position:0%
phantom references for dead objects
getting<00:30:49.830><c> queued</c><00:30:50.100><c> at</c><00:30:50.250><c> that</c><00:30:50.429><c> point</c>

00:30:50.820 --> 00:30:50.830 align:start position:0%
getting queued at that point
 

00:30:50.830 --> 00:30:52.889 align:start position:0%
getting queued at that point
you<00:30:51.010><c> can</c><00:30:51.159><c> actually</c><00:30:51.309><c> do</c><00:30:51.640><c> the</c><00:30:51.789><c> C++</c><00:30:52.299><c> cleanup</c><00:30:52.750><c> at</c>

00:30:52.889 --> 00:30:52.899 align:start position:0%
you can actually do the C++ cleanup at
 

00:30:52.899 --> 00:30:55.230 align:start position:0%
you can actually do the C++ cleanup at
that<00:30:53.049><c> point</c><00:30:53.320><c> otherwise</c><00:30:54.220><c> if</c><00:30:54.490><c> you</c><00:30:54.610><c> know</c><00:30:54.730><c> how</c><00:30:54.880><c> not</c>

00:30:55.230 --> 00:30:55.240 align:start position:0%
that point otherwise if you know how not
 

00:30:55.240 --> 00:30:57.450 align:start position:0%
that point otherwise if you know how not
allocating<00:30:55.870><c> any</c><00:30:55.929><c> Java</c><00:30:56.289><c> memory</c><00:30:56.679><c> usually</c><00:30:57.100><c> the</c>

00:30:57.450 --> 00:30:57.460 align:start position:0%
allocating any Java memory usually the
 

00:30:57.460 --> 00:30:58.889 align:start position:0%
allocating any Java memory usually the
Java<00:30:57.669><c> garbage</c><00:30:58.059><c> collector</c><00:30:58.419><c> will</c><00:30:58.450><c> not</c><00:30:58.720><c> get</c>

00:30:58.889 --> 00:30:58.899 align:start position:0%
Java garbage collector will not get
 

00:30:58.899 --> 00:31:02.610 align:start position:0%
Java garbage collector will not get
otherwise<00:30:59.200><c> get</c><00:30:59.440><c> triggered</c><00:30:59.830><c> and</c><00:31:01.200><c> be</c><00:31:02.200><c> careful</c>

00:31:02.610 --> 00:31:02.620 align:start position:0%
otherwise get triggered and be careful
 

00:31:02.620 --> 00:31:04.769 align:start position:0%
otherwise get triggered and be careful
with<00:31:02.769><c> C++</c><00:31:03.039><c> memory</c><00:31:03.760><c> management</c><00:31:04.360><c> and</c>

00:31:04.769 --> 00:31:04.779 align:start position:0%
with C++ memory management and
 

00:31:04.779 --> 00:31:12.810 align:start position:0%
with C++ memory management and
understand<00:31:05.230><c> the</c><00:31:05.350><c> walls</c><00:31:09.630><c> so</c><00:31:11.340><c> we</c><00:31:12.340><c> actually</c><00:31:12.669><c> have</c>

00:31:12.810 --> 00:31:12.820 align:start position:0%
understand the walls so we actually have
 

00:31:12.820 --> 00:31:14.700 align:start position:0%
understand the walls so we actually have
a<00:31:12.850><c> little</c><00:31:13.090><c> bit</c><00:31:13.179><c> of</c><00:31:13.360><c> time</c><00:31:13.570><c> for</c><00:31:13.929><c> questions</c><00:31:14.409><c> here</c>

00:31:14.700 --> 00:31:14.710 align:start position:0%
a little bit of time for questions here
 

00:31:14.710 --> 00:31:18.090 align:start position:0%
a little bit of time for questions here
if<00:31:14.980><c> there</c><00:31:15.159><c> are</c><00:31:15.279><c> any</c><00:31:16.559><c> that's</c><00:31:17.559><c> the</c><00:31:17.769><c> end</c><00:31:17.919><c> of</c><00:31:18.010><c> it</c>

00:31:18.090 --> 00:31:18.100 align:start position:0%
if there are any that's the end of it
 

00:31:18.100 --> 00:31:20.270 align:start position:0%
if there are any that's the end of it
thank<00:31:18.340><c> you</c><00:31:18.429><c> very</c><00:31:18.610><c> much</c><00:31:18.789><c> for</c><00:31:19.090><c> attending</c>

00:31:20.270 --> 00:31:20.280 align:start position:0%
thank you very much for attending
 

00:31:20.280 --> 00:31:25.810 align:start position:0%
thank you very much for attending
[Applause]

00:31:25.810 --> 00:31:25.820 align:start position:0%
[Applause]
 

00:31:25.820 --> 00:31:39.749 align:start position:0%
[Applause]
[Music]

