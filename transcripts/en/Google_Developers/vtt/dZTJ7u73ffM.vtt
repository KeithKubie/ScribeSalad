WEBVTT
Kind: captions
Language: en

00:00:08.825 --> 00:00:11.198
Welcome to Google
Developers Hackademy.

00:00:11.198 --> 00:00:13.627
This is the first part
of the Android SDK

00:00:13.627 --> 00:00:15.132
introduction course,

00:00:15.132 --> 00:00:18.231
developed by Enrique Diaz,
from GDG Androidtitlan Mexico.

00:00:18.231 --> 00:00:20.198
If this is your first contact
with the course,

00:00:20.198 --> 00:00:23.429
I recommend you watch it
in order and do the exercises.

00:00:29.825 --> 00:00:31.693
Welcome to lesson 3:

00:00:31.693 --> 00:00:33.825
"Building blocks for Android."

00:00:33.825 --> 00:00:35.396
My name is Enrique Diaz

00:00:35.396 --> 00:00:37.594
and remember
that last time we saw

00:00:37.594 --> 00:00:40.726
basic tools for developing
in Eclipse IDE.

00:00:41.231 --> 00:00:42.957
In this lesson we will see

00:00:42.957 --> 00:00:45.561
three very important things
for developing.

00:00:45.561 --> 00:00:47.924
We will learn what's an activity,

00:00:48.198 --> 00:00:50.462
we will implement a fragment,

00:00:50.462 --> 00:00:53.957
and finally, we will learn
how to start an intent.

00:00:54.627 --> 00:00:57.693
Next, we will talk about
what's an activity.

00:00:57.924 --> 00:01:02.066
An activity is a class contained
in Android framework

00:01:02.066 --> 00:01:04.693
to create use interfaces.

00:01:05.264 --> 00:01:09.231
Imagine, like in a browser
we have windows,

00:01:09.990 --> 00:01:12.627
it's equivalent in Android
is an activity.

00:01:13.264 --> 00:01:16.924
I already have a project here
called Hola Mundo,

00:01:17.429 --> 00:01:20.924
in which we will implement
an activity.

00:01:21.528 --> 00:01:24.297
So we enter MainActivity

00:01:25.264 --> 00:01:27.825
and will go quickly over

00:01:27.825 --> 00:01:29.990
which methods are implemented.

00:01:29.990 --> 00:01:31.264
They are two:

00:01:31.594 --> 00:01:34.429
onCreate and
onCreateOptionsMenu.

00:01:34.429 --> 00:01:37.825
In order to create an activity,
with a right click,

00:01:38.330 --> 00:01:41.726
we hit "New"
and then we look for "Class,"

00:01:42.726 --> 00:01:45.297
and, when we select it,

00:01:45.297 --> 00:01:48.462
it creates a window

00:01:48.462 --> 00:01:51.528
where we need to add a name

00:01:52.561 --> 00:01:53.957
and a superclass.

00:01:54.528 --> 00:01:57.363
In this case we will name it
"OtherActivity"

00:01:57.792 --> 00:01:59.396
and we will inherit

00:02:00.033 --> 00:02:01.462
from Activity.

00:02:01.462 --> 00:02:04.462
Having this we hit on "Finish"

00:02:05.957 --> 00:02:08.693
and, in our package

00:02:08.693 --> 00:02:12.165
mx.androidtitlan.holamundo,

00:02:12.825 --> 00:02:16.759
we already have
this class created

00:02:16.759 --> 00:02:18.627
just as we did it.

00:02:18.627 --> 00:02:21.825
Now we will override
a method

00:02:22.561 --> 00:02:25.759
in order to add onCreate.

00:02:26.132 --> 00:02:28.693
We hit "OK"
and automatically

00:02:28.693 --> 00:02:30.264
it generates this codelines.

00:02:30.264 --> 00:02:33.330
I format a bit
and now I'm writing

00:02:33.330 --> 00:02:35.528
the setContentView method,

00:02:36.099 --> 00:02:38.429
which receives a parameter,

00:02:38.924 --> 00:02:41.792
which is the layout
of my activity.

00:02:41.792 --> 00:02:45.594
We can see it on this side,
where we have our files,

00:02:45.594 --> 00:02:47.462
in the layout folder.

00:02:47.462 --> 00:02:50.759
We will also create
an .xml file in there

00:02:50.759 --> 00:02:54.957
right-clicking
on my layout folder,

00:02:55.990 --> 00:02:57.264
I hit "New..."

00:02:58.264 --> 00:03:00.561
and then "Android XML file."

00:03:00.561 --> 00:03:04.660
There, it will allow me to add
a name for my file.

00:03:05.099 --> 00:03:10.099
This one I will name
activity_other.xml.

00:03:10.099 --> 00:03:13.594
And while I'm at it,
I can see

00:03:14.165 --> 00:03:16.792
which elements I can have

00:03:16.792 --> 00:03:20.561
as parent of my file.

00:03:22.297 --> 00:03:25.066
We have ScrollView,
SlidingDrawer,

00:03:25.066 --> 00:03:26.924
Space, Spinner,

00:03:26.924 --> 00:03:29.759
TextView, etcetera, etcetera.

00:03:29.759 --> 00:03:32.462
In this case I look for
RelativeLayout,

00:03:32.462 --> 00:03:37.033
which is the layout
that allows us to add views

00:03:37.990 --> 00:03:40.297
and define them
depending on others.

00:03:40.297 --> 00:03:44.066
When I open my file,
I can notice it has nothing,

00:03:44.066 --> 00:03:47.165
just the title inside my file,

00:03:47.165 --> 00:03:49.462
but I can also see
its parent tag,

00:03:49.462 --> 00:03:51.990
which is just RelativeLayout.

00:03:51.990 --> 00:03:54.363
We will add the first activity

00:03:54.363 --> 00:03:56.066
in the first TextView.

00:03:56.066 --> 00:03:58.858
In the second TextView
we will just place

00:03:58.858 --> 00:04:01.132
a TextView, we format it,

00:04:01.132 --> 00:04:04.825
we take the chance to visualize
some properties

00:04:05.990 --> 00:04:07.561
of RelativeLayout,

00:04:07.561 --> 00:04:12.891
like aligning to the parent
at the top,

00:04:13.792 --> 00:04:16.825
wide, tall, margin.

00:04:17.198 --> 00:04:19.924
And if we go to
the graphical interface,

00:04:19.924 --> 00:04:21.957
we can notice the change.

00:04:21.957 --> 00:04:23.990
I'm going to close this file.

00:04:25.330 --> 00:04:28.594
And inside the method
setContentView

00:04:29.066 --> 00:04:31.264
of OtherActivity

00:04:31.858 --> 00:04:35.693
I'm going to pass it
this other .xml file

00:04:35.693 --> 00:04:38.396
and, as with any activity,

00:04:39.066 --> 00:04:42.165
I have to declare it
inside AndroidManifest.

00:04:42.165 --> 00:04:46.099
In this case,
in HolaMundoManifest

00:04:47.396 --> 00:04:51.693
I have to copy
the activity tags.

00:04:53.099 --> 00:04:55.297
And now I'm going to run
my example.

00:04:55.297 --> 00:04:58.825
For that, see the play button
of the upper menu?

00:04:59.198 --> 00:05:02.462
I click on it and then,
in that window that shows up,

00:05:02.462 --> 00:05:04.330
I hit Android Application.

00:05:04.330 --> 00:05:07.033
So I select it and I'll wait
for the emulator

00:05:07.033 --> 00:05:08.759
to launch the application.

00:05:09.264 --> 00:05:12.363
Before it's launched,
a window will show up

00:05:12.363 --> 00:05:14.462
where it allows me to choose

00:05:14.462 --> 00:05:17.858
if I want to launch
the application in a device

00:05:17.858 --> 00:05:20.693
that is already ready,

00:05:20.693 --> 00:05:23.396
connected to the framework,

00:05:23.858 --> 00:05:26.990
or if I want to launch
a new virtual device.

00:05:27.660 --> 00:05:31.033
In this case, I will use one
that is already connected.

00:05:31.396 --> 00:05:35.297
One interesting thing
about this window

00:05:35.297 --> 00:05:39.660
is that it tells you to select
a device with the minimum API

00:05:40.231 --> 00:05:42.792
your project is configured with.

00:05:42.792 --> 00:05:45.264
In this case, it's API level 8.

00:05:45.561 --> 00:05:49.297
I select
genymotion-galaxy_nexus,

00:05:49.990 --> 00:05:51.495
I hit "OK,"

00:05:52.099 --> 00:05:53.198
and that's it!

00:05:53.198 --> 00:05:56.099
We can already see
my app Hola Mundo

00:05:57.462 --> 00:06:00.561
with two texts that we created.

00:06:00.957 --> 00:06:04.066
"Mi primer Activity"
and "TextView."

00:06:04.528 --> 00:06:07.924
Up next we will see
the concept of intent.

00:06:07.924 --> 00:06:11.990
An intent is a class
within the framework

00:06:12.561 --> 00:06:15.660
that allows us to relate
one activity with another.

00:06:15.660 --> 00:06:18.594
Whether we know it or not.

00:06:19.627 --> 00:06:21.231
That, precisely,

00:06:21.231 --> 00:06:24.462
is the concept of explicit
or implicit intent.

00:06:25.957 --> 00:06:26.957
Okay...

00:06:26.957 --> 00:06:30.165
Now, the same instance
of Hola Mundo.

00:06:30.165 --> 00:06:32.330
Let's create an intent.

00:06:32.330 --> 00:06:35.858
For that, I'll go to
OtherActivity.java

00:06:35.858 --> 00:06:38.363
and I will modify the .xml file

00:06:38.363 --> 00:06:41.858
called "Activity_other.xml."

00:06:42.594 --> 00:06:45.594
I'm going to drag a button
from the user interface,

00:06:45.594 --> 00:06:47.693
and I'll add another one
below it.

00:06:47.693 --> 00:06:50.396
I'll name the first one
"Open browser,"

00:06:53.066 --> 00:06:55.660
and the second one,
in the "text" property,

00:06:55.660 --> 00:06:58.264
will be
"Enter another activity."

00:06:58.264 --> 00:07:00.891
Besides, I will add
the onClick property,

00:07:00.891 --> 00:07:03.990
which will receive a method
for both buttons.

00:07:05.957 --> 00:07:08.462
The first one will be
"openBrowser,"

00:07:08.462 --> 00:07:12.198
and the second one, the method
will be "openActivity."

00:07:12.561 --> 00:07:14.528
The onClick property,

00:07:14.528 --> 00:07:17.858
in a view, like a button,

00:07:17.858 --> 00:07:21.594
allows us to send to it
a method as a parameter

00:07:21.594 --> 00:07:24.297
which, in Java coding,
will do something.

00:07:24.297 --> 00:07:27.264
This is the easiest way
of making

00:07:27.264 --> 00:07:29.462
a listener of a button.

00:07:29.792 --> 00:07:33.891
Now, in my
OtherActivity.java class,

00:07:33.891 --> 00:07:36.396
I'm going to build both methods.

00:07:37.231 --> 00:07:39.990
For that, I have to write this:

00:07:40.396 --> 00:07:42.627
"public void method"

00:07:42.627 --> 00:07:45.033
and I pass it a parameter,

00:07:45.033 --> 00:07:48.330
which is the view
that will be called.

00:07:48.330 --> 00:07:51.396
Inside the method
I'm going to declare

00:07:51.396 --> 00:07:54.363
an intent-like object.

00:07:54.363 --> 00:07:56.528
This one will be called
"openBrowser."

00:07:56.528 --> 00:07:58.792
Inside openBrowser method,

00:07:58.792 --> 00:08:01.627
which receives
the "view" parameter,

00:08:01.627 --> 00:08:05.429
where "view" is the button
to which we're sending

00:08:05.429 --> 00:08:07.792
or defining the method,

00:08:07.792 --> 00:08:11.429
we're going to create
an intent instance,

00:08:11.429 --> 00:08:13.858
which receives two parameters:

00:08:13.858 --> 00:08:16.297
intent.ACTION_VIEW,

00:08:16.297 --> 00:08:20.462
and the URL which I want
to access.

00:08:21.264 --> 00:08:23.990
Besides, I have to initialize
the activity

00:08:23.990 --> 00:08:26.462
with the startActivity method,

00:08:26.462 --> 00:08:30.165
and which receives the intent
as a parameter.

00:08:30.165 --> 00:08:35.165
Then, I will create another
method called "openActivity."

00:08:37.297 --> 00:08:41.198
It will also receive a View
as a parameter.

00:08:41.198 --> 00:08:44.528
Besides, I will create
an intent instance.

00:08:44.858 --> 00:08:48.759
The difference is it'll receive
two different parameters.

00:08:48.759 --> 00:08:50.660
In this second intent,

00:08:50.660 --> 00:08:53.825
it will receive the context
of the package and of the class.

00:08:53.825 --> 00:08:57.462
In this case is one
of the parameters,

00:08:57.462 --> 00:08:59.990
otherActivity.this,

00:09:00.528 --> 00:09:03.627
and the second parameter
is where I want to go.

00:09:03.627 --> 00:09:06.066
Said in a simpler way,

00:09:06.066 --> 00:09:09.594
de second parameter
of the intent it receives

00:09:09.594 --> 00:09:12.066
is where I am,

00:09:12.066 --> 00:09:14.594
and where I want to access.

00:09:14.594 --> 00:09:18.033
And I also initialize
the activity

00:09:18.033 --> 00:09:21.561
with the method startActivity
and I pass the intent to it,

00:09:22.297 --> 00:09:23.561
as a parameter.

00:09:23.561 --> 00:09:26.561
I'm going to run the app.
the same dialogue shows up.

00:09:26.561 --> 00:09:30.132
Done, I now have both buttons
inside my activity.

00:09:30.132 --> 00:09:32.990
What each button should do

00:09:32.990 --> 00:09:34.957
is, the first button,

00:09:34.957 --> 00:09:37.198
ask me
"What do you want to open?,"

00:09:37.198 --> 00:09:39.858
because, in the particular case
of my emulator,

00:09:39.858 --> 00:09:45.561
I have two applications
that open URIs,

00:09:46.759 --> 00:09:49.231
which is the URL
I'm passing to it.

00:09:49.231 --> 00:09:51.561
Here we proved
an implicit un intent.

00:09:51.561 --> 00:09:54.627
I can select
any of the two options,

00:09:55.066 --> 00:09:57.858
I can select it does it
every time it's opened

00:09:57.858 --> 00:09:59.330
or just once.

00:09:59.330 --> 00:10:02.891
And when I click on it,
it automatically opens

00:10:02.891 --> 00:10:06.990
the browser and it will enter
the URL I sent to it

00:10:06.990 --> 00:10:08.726
inside the intent,

00:10:08.726 --> 00:10:11.660
which in this case is
androidtitlan.mx.

00:10:12.066 --> 00:10:14.957
Back to the example,
and with the other button,

00:10:14.957 --> 00:10:17.858
all it does is send me
to the other activity.

00:10:17.858 --> 00:10:22.165
Why? this other intent
is an explicit intent,

00:10:22.165 --> 00:10:25.726
because what I'm defining
is where I am

00:10:25.726 --> 00:10:27.627
and where I want to go.

00:10:27.957 --> 00:10:30.693
Now we will se how to implement

00:10:30.693 --> 00:10:32.033
a fragment.

00:10:32.033 --> 00:10:34.858
A fragment is an user interface

00:10:34.858 --> 00:10:37.858
that's not a view
or an activity.

00:10:38.495 --> 00:10:42.231
It's rather a subactivity,
in some way.

00:10:42.231 --> 00:10:46.099
It allows us to insert,
in a programmatic way,

00:10:46.099 --> 00:10:49.396
or through an XML,
any element

00:10:49.396 --> 00:10:52.330
we want to reuse in our code.

00:10:52.924 --> 00:10:54.660
In this example,

00:10:55.033 --> 00:10:58.297
which will be a totally new one,

00:10:58.297 --> 00:11:03.297
we enter the package
mx.androidtitlan.xmlfragment.

00:11:04.594 --> 00:11:07.528
In the class MainActivity.java,

00:11:07.528 --> 00:11:10.858
the first thing we have to do
is change the class

00:11:10.858 --> 00:11:12.726
from which it inherits

00:11:13.198 --> 00:11:16.759
and we will modify it
through fragmentActivity.

00:11:17.495 --> 00:11:19.330
We will leave as it is,

00:11:19.330 --> 00:11:21.825
but we will create
a new fragment,

00:11:21.825 --> 00:11:25.132
a Java class that will be
called Simplefragment,

00:11:25.132 --> 00:11:28.858
that will inherit from Fragment.

00:11:28.858 --> 00:11:31.198
In my Simplefragment.java,

00:11:31.198 --> 00:11:34.594
what I will return
in onCreateView

00:11:34.594 --> 00:11:38.066
is the LayoutInflater,

00:11:38.066 --> 00:11:41.627
which is the one in charge
of inflating views, layouts,

00:11:41.990 --> 00:11:43.957
inflater.inlfate,

00:11:43.957 --> 00:11:47.693
and I'll pass it the interface
that I want to inflate.

00:11:47.693 --> 00:11:51.561
Inside my fragment
I contain a TextView.

00:11:51.561 --> 00:11:55.495
I'm going to change the text
for "fragment" only

00:11:55.495 --> 00:11:58.924
and I'll add a background
to the parent view,

00:11:59.957 --> 00:12:03.363
any color,
in this case, "f123."

00:12:04.231 --> 00:12:07.132
I use the "f" to define,

00:12:07.891 --> 00:12:10.660
whether the parameter,
or I use it to define

00:12:10.660 --> 00:12:12.396
if it'll have a transparency.

00:12:12.396 --> 00:12:14.594
When you put "f"
in hexadecimals

00:12:14.594 --> 00:12:16.396
that have no transparency,

00:12:16.396 --> 00:12:19.033
and "123" is
a hexadecimal as it is.

00:12:19.033 --> 00:12:22.561
And I'll also modify
the activity_main file,

00:12:22.561 --> 00:12:25.462
which is the interface
of my activity.

00:12:25.462 --> 00:12:28.792
What I'm going to do is enter
the graphical interface,

00:12:28.792 --> 00:12:31.990
and I drag
the "fragment" component.

00:12:31.990 --> 00:12:35.297
So, as you can see,
it's shown on the display,

00:12:35.297 --> 00:12:37.330
and I'll modify some things.

00:12:37.330 --> 00:12:40.099
I'll modify the width
and the height,

00:12:40.099 --> 00:12:44.264
just to have control and to know
where's my fragment,

00:12:44.264 --> 00:12:47.528
that is being called
from an .xml file.

00:12:47.990 --> 00:12:51.066
Now I run the application
and there it is,

00:12:51.066 --> 00:12:55.759
I can see a "Hello world,"
which contains the activity,

00:12:56.297 --> 00:13:00.891
but also, I see a square
the size of my fragment.

00:13:00.891 --> 00:13:05.066
This means that what I did was,
through the .xml file,

00:13:05.066 --> 00:13:08.990
show a fragment
inside an activity,

00:13:08.990 --> 00:13:10.429
insert it.

00:13:12.594 --> 00:13:15.561
Now, let's do another example

00:13:16.627 --> 00:13:19.924
but inserting the fragment
programmatically.

00:13:19.924 --> 00:13:23.099
This means it will be
through Java code.

00:13:23.099 --> 00:13:27.198
For that, the same way,
I'm going to build a fragment

00:13:29.099 --> 00:13:31.231
that will be named as:

00:13:34.330 --> 00:13:36.033
"SimpleFragment,"

00:13:37.066 --> 00:13:40.264
and that will also inherit
from Fragment.

00:13:41.462 --> 00:13:43.462
Careful, it's very important

00:13:43.462 --> 00:13:46.429
that it inherits from
android.support.v4,

00:13:46.429 --> 00:13:50.627
because that way we can use
this compatibility backwards

00:13:50.627 --> 00:13:53.033
and we can develop apps

00:13:53.627 --> 00:13:55.627
from API level 4.

00:13:55.627 --> 00:13:57.924
I select it, hit "Finish,"

00:13:58.528 --> 00:14:01.363
and I wait for it to visualize
in my package.

00:14:02.495 --> 00:14:06.660
I also implement a method
that is also onCreateView.

00:14:06.660 --> 00:14:10.066
What I will return
in the method onCreateView

00:14:10.429 --> 00:14:13.495
will be inflater.inflate

00:14:15.363 --> 00:14:18.462
and now I will pass it
three parameters,

00:14:18.825 --> 00:14:22.627
which are what's the interface
I want to be shown,

00:14:23.231 --> 00:14:25.693
the container, which is

00:14:26.891 --> 00:14:30.462
the activity to which
it is being added,

00:14:30.462 --> 00:14:32.957
and a Boolean parameter,
which is false.

00:14:35.132 --> 00:14:39.033
Besides, I'll take the chance
to create another .xml file

00:14:41.396 --> 00:14:43.627
that will be called
fragment_main.

00:14:46.528 --> 00:14:48.462
To this one I'll pass,

00:14:48.462 --> 00:14:53.165
inside the parent view,
which is the RelativeLayout,

00:14:53.594 --> 00:14:56.231
a parameter,
which is background,

00:14:56.231 --> 00:14:59.660
with a "f123" numeral.

00:15:00.264 --> 00:15:03.957
What this means is that
I'm passing it a color

00:15:03.957 --> 00:15:06.033
where my first digit

00:15:06.033 --> 00:15:09.198
is the transparency,
and the other three

00:15:09.198 --> 00:15:11.297
are a hexadecimal number.

00:15:11.297 --> 00:15:15.396
Besides, inside the text
contained in this fragment,

00:15:15.396 --> 00:15:17.957
I'll write "fragment" only.

00:15:18.330 --> 00:15:23.693
Now, the parameter I need
in the interface

00:15:24.594 --> 00:15:27.429
of the main activity is the ID.

00:15:28.759 --> 00:15:30.330
So I declare it:

00:15:30.330 --> 00:15:32.396
android:id

00:15:32.726 --> 00:15:35.297
and I use "@+id"

00:15:35.660 --> 00:15:39.429
because that way I tell
my class R

00:15:39.429 --> 00:15:41.660
that I want to add an instance,

00:15:41.660 --> 00:15:43.759
which I want to access.

00:15:43.759 --> 00:15:46.759
I close that file
and now I'm going to declare,

00:15:47.726 --> 00:15:49.990
inside the .xml file,

00:15:50.957 --> 00:15:53.693
how I am going to call
my fragment.

00:15:53.693 --> 00:15:56.627
I'll do it right below
setContentView,

00:15:56.924 --> 00:16:01.066
but besides, don't forget
to change the superclass.

00:16:02.297 --> 00:16:04.990
In this case it will be
"FragmentActivity."

00:16:05.363 --> 00:16:08.396
It will inherit MainActivity
from FragmentActivity.

00:16:08.396 --> 00:16:12.198
To be able to call
getSupportFragmentManager

00:16:12.198 --> 00:16:15.363
.beginTransaction.add,

00:16:15.726 --> 00:16:18.396
to which I will pass
two parameters.

00:16:18.396 --> 00:16:21.396
What's the ID to which
I want to add

00:16:21.396 --> 00:16:23.231
within my interface?

00:16:24.099 --> 00:16:27.528
I mean, I am using
ID container

00:16:27.957 --> 00:16:31.033
that I added
inside my RelativeLayout,

00:16:31.363 --> 00:16:33.231
that I just modified,

00:16:33.231 --> 00:16:36.099
and I show it
what I want to add.

00:16:36.099 --> 00:16:39.693
In this case,
I just wrote a line above

00:16:39.693 --> 00:16:43.330
where I am defining
a SimpleFragment instance,

00:16:43.759 --> 00:16:46.858
which is SimpleFragment,
that is called

00:16:46.858 --> 00:16:49.495
fragment = new SimpleFragment.

00:16:49.495 --> 00:16:51.264
I launch my application...

00:16:51.264 --> 00:16:54.891
and that's it, I can see that,
in a programmatic way,

00:16:54.891 --> 00:16:57.594
I'm calling a fragment

00:16:57.594 --> 00:17:00.792
that is being executed
or inserted

00:17:01.132 --> 00:17:02.891
inside my activity.

00:17:03.726 --> 00:17:05.099
Let's recapitulate.

00:17:05.396 --> 00:17:08.429
In this lesson we saw
three important points:

00:17:08.792 --> 00:17:11.660
we created and understood
what is an activity,

00:17:12.330 --> 00:17:14.264
we implemented an intent,

00:17:15.528 --> 00:17:18.429
and, finally, we knew
the power of a fragment.

00:17:18.792 --> 00:17:21.231
Remember, next lesson
we will see

00:17:21.231 --> 00:17:22.693
a real life example

00:17:22.693 --> 00:17:24.660
creating my own Android app.

00:17:24.660 --> 00:17:27.462
My name is Enrique Diaz.
Keep on programming!

