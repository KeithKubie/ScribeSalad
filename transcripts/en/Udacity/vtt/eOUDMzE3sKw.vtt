WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Let me ask you a leading question if I can, since I introduced our students very briefly

00:00:05.000 --> 00:00:08.000
to optimization at the JavaScript AST level.

00:00:08.000 --> 00:00:14.000
We might replace the subtrees like x * 1 with just x if we believed that that preserve semantics.

00:00:14.000 --> 00:00:18.000
I was wondering if you could just give me a hint without telling me any trade secrets

00:00:18.000 --> 00:00:21.000
about higher level optimizations that are important.

00:00:21.000 --> 00:00:25.000
What's the next step after replacing subtrees?

00:00:25.000 --> 00:00:30.000
In our JavaScript Engine, we've recently had a great boost from type inference.

00:00:30.000 --> 00:00:35.000
JavaScript is a very simply called untyped or dynamically type of language.

00:00:35.000 --> 00:00:40.000
It's important not to burn the programmers with writing down type decorations like in Java.

00:00:40.000 --> 00:00:44.000
That was never in the scope of JavaScript and rightly so,

00:00:44.000 --> 00:00:49.000
but the underlying runtime--the just-in-time compiling JavaScript Engine

00:00:49.000 --> 00:00:53.000
has to know the types to get very concrete and use the hardware well.

00:00:53.000 --> 00:00:58.000
We have a very adaptive sort of online-type inference algorithm.

00:00:58.000 --> 00:01:04.000
You can study the code and try to infer type,s and if some codes gets loaded or invalid,

00:01:04.000 --> 00:01:09.000
it can change its mind or it can conserve what is good and throw away what was invalidated.

00:01:09.000 --> 00:01:13.000
That's very important for performance.

00:01:13.000 --> 00:01:18.000
There are the traditional sort of loop invariant code motion optimizations

00:01:18.000 --> 00:01:21.000
that we're getting into more and more because before people are writing JavaScript

00:01:21.000 --> 00:01:26.000
that looks more like C or even Fortran in the old days. We see more graphics code.

00:01:26.000 --> 00:01:29.000
We see more numerical processing.

00:01:29.000 --> 09:59:59.000
Thank you for taking the time to tell us about it. &gt;&gt;Sure. My pleasure.

