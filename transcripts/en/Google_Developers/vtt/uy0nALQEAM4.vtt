WEBVTT
Kind: captions
Language: en

00:00:01.630 --> 00:00:03.500
PETER S. MAGNUSSON: So of
course, we miserably failed

00:00:03.500 --> 00:00:06.820
this morning to make sure that
the blimp looked like this,

00:00:06.820 --> 00:00:09.630
from which the jumping
was done.

00:00:09.630 --> 00:00:13.590
But we'll see what
we do next I/O.

00:00:13.590 --> 00:00:14.710
All right, good afternoon,
everybody.

00:00:14.710 --> 00:00:17.930
Thank you for joining us for
this App Engine overview.

00:00:17.930 --> 00:00:19.500
It's a real treat to be here.

00:00:19.500 --> 00:00:22.020
We have some fun news
to share with you.

00:00:22.020 --> 00:00:25.580
So for those of you out there
on your Livestream, don't

00:00:25.580 --> 00:00:27.780
touch that dial.

00:00:27.780 --> 00:00:30.070
And for everybody, and in
particular those on

00:00:30.070 --> 00:00:35.210
Livestream, here's a link for
the Google Moderator for

00:00:35.210 --> 00:00:36.000
getting questions.

00:00:36.000 --> 00:00:40.640
And our suggested hash is
#io12 and #appengine.

00:00:40.640 --> 00:00:45.430
So we'll be reminding you of
this link for questions

00:00:45.430 --> 00:00:46.460
throughout.

00:00:46.460 --> 00:00:49.540
And we'll try to stay on
schedule as best as possible

00:00:49.540 --> 00:00:53.490
to give room for
Q&amp;A at the end.

00:00:53.490 --> 00:00:55.790
So if by any chance you have no
idea what Google App Engine

00:00:55.790 --> 00:00:57.340
is, this is what
we strive for.

00:00:57.340 --> 00:00:59.850
We strive for development
platform in the clouds that

00:00:59.850 --> 00:01:02.600
makes it easy to write
applications, simple to scale

00:01:02.600 --> 00:01:05.150
them to a global audience,
and trivial to manage

00:01:05.150 --> 00:01:06.870
running them over time.

00:01:06.870 --> 00:01:09.040
The genesis for App Engine was
the internal development

00:01:09.040 --> 00:01:11.720
stacks at Google, and a desire
by the founding team to

00:01:11.720 --> 00:01:14.580
package them into a form that
lots of developers the world

00:01:14.580 --> 00:01:16.420
over can use.

00:01:16.420 --> 00:01:19.540
Since we launched in 2008, we
stayed true to this philosophy

00:01:19.540 --> 00:01:21.180
and success has followed.

00:01:21.180 --> 00:01:25.680
Adoption of App Engine has been
remarkably strong despite

00:01:25.680 --> 00:01:27.210
a few limitations.

00:01:27.210 --> 00:01:29.780
App Engine launched
with [INAUDIBLE]

00:01:29.780 --> 00:01:32.230
surprisingly short list of
features, with a different

00:01:32.230 --> 00:01:35.690
approach to writing modern
cloud applications.

00:01:35.690 --> 00:01:38.160
But it was truly a child of
the new era of computing,

00:01:38.160 --> 00:01:40.570
creating an opinionated
framework with large benefits

00:01:40.570 --> 00:01:41.870
to early adapters.

00:01:41.870 --> 00:01:43.880
Since the launch, we've been
hard at work in fleshing out

00:01:43.880 --> 00:01:46.390
the platform, continuing our
quest for the ultimate cloud

00:01:46.390 --> 00:01:48.360
platform service.

00:01:48.360 --> 00:01:50.930
Over time, as we continue to
ramp our investments in cloud

00:01:50.930 --> 00:01:53.750
computing, we continue to build
out our cloud products.

00:01:53.750 --> 00:01:56.460
In addition App Engine, and also
over the last year and a

00:01:56.460 --> 00:01:59.180
half, announcing products like
BigQuery, Google Storage for

00:01:59.180 --> 00:02:00.895
developers, and Google
Cloud SQL.

00:02:05.770 --> 00:02:08.775
In fact, traction has been
quite remarkable.

00:02:08.775 --> 00:02:10.210
So I have a couple
of fun numbers to

00:02:10.210 --> 00:02:11.550
share with you today.

00:02:11.550 --> 00:02:15.650
If we look at the month in the
life of App Engine, we see

00:02:15.650 --> 00:02:17.510
over one million hosted
applications.

00:02:17.510 --> 00:02:20.130
So we recently passed
one million.

00:02:20.130 --> 00:02:22.070
Not all of them were written by
everybody in the room here,

00:02:22.070 --> 00:02:23.853
but thank you, developers,
for using App

00:02:23.853 --> 00:02:24.820
Engine to develop apps.

00:02:24.820 --> 00:02:27.750
This is pretty awesome.

00:02:27.750 --> 00:02:30.170
Got to get you guys
going, here.

00:02:30.170 --> 00:02:32.780
Yeah, I'm not diving for a
blimp, but this is still

00:02:32.780 --> 00:02:35.560
pretty cool stuff.

00:02:35.560 --> 00:02:37.930
The main storage system by
many of these Apps is our

00:02:37.930 --> 00:02:40.340
multi-data center High
Replication Datastore.

00:02:40.340 --> 00:02:43.330
And as far as we can tell, it's
the world's largest third

00:02:43.330 --> 00:02:44.480
party NoSQL system.

00:02:44.480 --> 00:02:49.380
In a given month, it processes
over two trillion operations.

00:02:49.380 --> 00:02:50.760
Besides brand names
and [INAUDIBLE]

00:02:50.760 --> 00:02:51.600
[? startups, ?]

00:02:51.600 --> 00:02:54.330
App Engine powers hundreds of
thousands of applications that

00:02:54.330 --> 00:02:55.800
you've never heard of.

00:02:55.800 --> 00:02:59.600
In fact, we recently estimated
the overall reach of App

00:02:59.600 --> 00:03:01.110
Engine applications.

00:03:01.110 --> 00:03:02.640
And it's pretty breathtaking.

00:03:02.640 --> 00:03:06.810
By our math, of all the internet
active addresses that

00:03:06.810 --> 00:03:09.370
are active in any given week--
so of all the internet IP

00:03:09.370 --> 00:03:13.040
addresses that we see being
active in a week--

00:03:13.040 --> 00:03:17.570
over half of them touch App
Engine in any given week.

00:03:17.570 --> 00:03:20.460
We can't track how many users
that corresponds to,

00:03:20.460 --> 00:03:22.270
obviously, because there's
hundreds of thousands of

00:03:22.270 --> 00:03:23.840
applications doing different.

00:03:23.840 --> 00:03:27.080
But it's a pretty sizable
footprint.

00:03:27.080 --> 00:03:29.460
Obviously, we're curious
about what's

00:03:29.460 --> 00:03:30.670
behind these usage numbers.

00:03:30.670 --> 00:03:34.060
So we look for patterns of
usage to guide us to what

00:03:34.060 --> 00:03:35.760
features to prioritize.

00:03:35.760 --> 00:03:37.520
With over a million
applications, the simplest

00:03:37.520 --> 00:03:40.260
answer to the question of what
runs on App Engine is

00:03:40.260 --> 00:03:41.370
everything.

00:03:41.370 --> 00:03:43.310
But that's not really
very interesting.

00:03:43.310 --> 00:03:46.090
We have seen some pretty
interesting broad patterns.

00:03:46.090 --> 00:03:48.210
And they are quite
illuminating.

00:03:48.210 --> 00:03:50.190
And in some ways, in hindsight,

00:03:50.190 --> 00:03:50.980
they're fairly obvious.

00:03:50.980 --> 00:03:53.940
I'm going to mention a couple
of areas of particular App

00:03:53.940 --> 00:03:55.400
Engine traction.

00:03:55.400 --> 00:03:58.020
The first one is sometimes
referred to

00:03:58.020 --> 00:03:59.230
as Enterprise Edge.

00:03:59.230 --> 00:04:01.860
So that's applications developed
by traditional

00:04:01.860 --> 00:04:04.660
enterprises, but where the
target is mostly external to

00:04:04.660 --> 00:04:05.530
the company.

00:04:05.530 --> 00:04:08.070
It can be to reach tens of
thousands of partners, or

00:04:08.070 --> 00:04:09.790
millions of customers.

00:04:09.790 --> 00:04:12.740
The second is a fairly obvious
area, that of high tech

00:04:12.740 --> 00:04:16.420
startups, which I suspect is a
big representation of Google

00:04:16.420 --> 00:04:21.980
I/O participants, in particular
ones that are

00:04:21.980 --> 00:04:23.940
social or mobile dimensions.

00:04:23.940 --> 00:04:27.370
There's quite a number of
successful smartphone and

00:04:27.370 --> 00:04:30.780
tablet applications that had
parts or whole of their

00:04:30.780 --> 00:04:33.770
back-end infrastructure
running on App Engine.

00:04:33.770 --> 00:04:35.960
The third one is
not so obvious.

00:04:35.960 --> 00:04:37.530
And that's productivity
software.

00:04:37.530 --> 00:04:42.650
I'm gonna talk about that
a little more later.

00:04:42.650 --> 00:04:48.110
But first, I would like to
invite on stage Robert Fea

00:04:48.110 --> 00:04:52.350
from a company that is
a household name.

00:04:52.350 --> 00:04:58.964
[RIMSHOT SOUND]

00:04:58.964 --> 00:05:04.910
[APPLAUSE]

00:05:04.910 --> 00:05:06.200
ROBERT FEA: Thank you, Peter.

00:05:06.200 --> 00:05:06.630
Hi, everyone.

00:05:06.630 --> 00:05:07.420
My name is Robert Fea.

00:05:07.420 --> 00:05:11.010
I'm part of the Lowes.com
IT solutions team.

00:05:11.010 --> 00:05:13.210
I'm going to take the next
several minutes to talk about

00:05:13.210 --> 00:05:15.910
how we're using App Engine to
provide a better online

00:05:15.910 --> 00:05:19.460
experience for our MyLowes
customers.

00:05:19.460 --> 00:05:21.260
So of those of you who
aren't familiar with

00:05:21.260 --> 00:05:23.610
MyLowes, what is MyLowes?

00:05:23.610 --> 00:05:26.050
It's an initiative that we
launched last year to allow

00:05:26.050 --> 00:05:27.530
Lowe's customers to
manage everything

00:05:27.530 --> 00:05:29.720
about their homes online.

00:05:29.720 --> 00:05:32.910
So they can manage and track
their purchase history, as

00:05:32.910 --> 00:05:35.070
well as manage useful
characteristics about their

00:05:35.070 --> 00:05:38.690
home, such as measuring out
their room dimensions, or

00:05:38.690 --> 00:05:42.410
recording how much it costs
to mulch their yard.

00:05:42.410 --> 00:05:46.610
And as part of our mantra to
never stop improving, we're

00:05:46.610 --> 00:05:49.790
going to be introducing a new
file upload service using

00:05:49.790 --> 00:05:53.130
Google App Engine that will
allow users to upload digital

00:05:53.130 --> 00:05:55.450
assets into their MyLowes
accounts.

00:05:55.450 --> 00:05:57.360
So we're going to walk through
a quick demonstration of how

00:05:57.360 --> 00:05:59.590
that works.

00:05:59.590 --> 00:06:01.760
As my colleague here is setting
up, let me just walk

00:06:01.760 --> 00:06:04.300
you through a quick use case
how this might be useful.

00:06:04.300 --> 00:06:06.290
So say you were remodeling
a kitchen.

00:06:06.290 --> 00:06:09.790
And as part of that remodeling
you need to buy a new

00:06:09.790 --> 00:06:11.070
refrigerator.

00:06:11.070 --> 00:06:13.300
You saw a new Samsung
refrigerator that you really

00:06:13.300 --> 00:06:16.110
liked at Lowes.com and
decided to buy it.

00:06:16.110 --> 00:06:18.480
And for some reason or another,
you've had bad

00:06:18.480 --> 00:06:20.360
experiences in the past
with refrigerators.

00:06:20.360 --> 00:06:23.590
So you decided to buy the
warranty along with it.

00:06:23.590 --> 00:06:26.420
Now, a lot of times with
warranty purchases, you'll

00:06:26.420 --> 00:06:28.990
need to have the original
purchase receipt, as well as

00:06:28.990 --> 00:06:31.390
the warranty receipt in order
to have any kind of service

00:06:31.390 --> 00:06:32.830
done on a product.

00:06:32.830 --> 00:06:34.590
And if you have trouble tracking
receipts, like

00:06:34.590 --> 00:06:36.980
myself, this new feature
will definitely take

00:06:36.980 --> 00:06:38.770
the pain out of it.

00:06:38.770 --> 00:06:41.690
So as you can see here, my
colleague logged into his

00:06:41.690 --> 00:06:43.130
Lowe's account.

00:06:43.130 --> 00:06:45.065
He's going to go into
his home profile.

00:06:47.890 --> 00:06:50.450
And from your home profile, you
can see you can enter in

00:06:50.450 --> 00:06:54.510
all sorts of different
information about their homes.

00:06:54.510 --> 00:06:56.500
But for this demonstration,
we're going to look at the

00:06:56.500 --> 00:06:59.970
Photos tab, and the
Documents tab.

00:06:59.970 --> 00:07:01.680
So you can see here, you
have the ability

00:07:01.680 --> 00:07:03.540
now to upload pictures.

00:07:03.540 --> 00:07:05.730
So say you wanted to upload a
picture of the fridge that you

00:07:05.730 --> 00:07:06.980
just bought.

00:07:15.310 --> 00:07:18.570
Now, keep in mind, all this
upload feature is being done

00:07:18.570 --> 00:07:19.820
through the App Engine.

00:07:22.849 --> 00:07:24.890
So you took a picture of
your fridge when you

00:07:24.890 --> 00:07:27.400
first bought it.

00:07:27.400 --> 00:07:30.840
And now it shows up on
your MyLowes account.

00:07:30.840 --> 00:07:36.360
If you click on the
fridge itself, you

00:07:36.360 --> 00:07:37.845
can make useful notes.

00:07:37.845 --> 00:07:40.255
And you can zoom, also, in
and out in the picture.

00:07:48.280 --> 00:07:51.780
OK, you can also have the
ability to upload--

00:07:51.780 --> 00:07:53.100
in our scenario--

00:07:53.100 --> 00:07:54.110
the warranty information.

00:07:54.110 --> 00:07:56.320
So if we go to the
Documents tab--

00:08:05.060 --> 00:08:07.310
So say I have the warranty
saved on my computer.

00:08:07.310 --> 00:08:09.780
I just wanted to upload it to
my account and forget about

00:08:09.780 --> 00:08:11.030
it, until I need it.

00:08:19.950 --> 00:08:20.880
This is a pretty big file.

00:08:20.880 --> 00:08:25.560
So we're giving users up to 200
megabytes of storage space

00:08:25.560 --> 00:08:29.330
with file sizes ranging
up to 20 megabytes.

00:08:29.330 --> 00:08:31.420
So now you have the
document uploaded.

00:08:31.420 --> 00:08:33.230
If you need to ever refer
to it again, you can

00:08:33.230 --> 00:08:34.789
simply click the link.

00:08:34.789 --> 00:08:38.100
And it should show up.

00:08:38.100 --> 00:08:39.522
Download, right there.

00:08:43.990 --> 00:08:45.310
And there's our warranty
information.

00:08:55.280 --> 00:08:58.530
So like I said, what are we
really using App Engine for?

00:08:58.530 --> 00:09:01.490
Well, App Engine provides us a
useful set of RESTful APIs

00:09:01.490 --> 00:09:03.390
that we can use to upload files

00:09:03.390 --> 00:09:06.210
directly into cloud storage.

00:09:06.210 --> 00:09:07.450
What else does it provide?

00:09:07.450 --> 00:09:10.390
We're using the concept of
service accounts, so MyLowes

00:09:10.390 --> 00:09:13.540
customers only need to sign in
once to access any information

00:09:13.540 --> 00:09:14.790
in their cloud storage.

00:09:17.180 --> 00:09:21.250
And I don't know if you were
paying attention, but we also

00:09:21.250 --> 00:09:25.180
leveraged the App Engine API
image generation features.

00:09:25.180 --> 00:09:27.990
So any time a user uploads
pictures into their MyLowes

00:09:27.990 --> 00:09:29.195
accounts, we generate them.

00:09:29.195 --> 00:09:31.320
They also have different
sizes that we use

00:09:31.320 --> 00:09:32.570
throughout the site.

00:09:34.940 --> 00:09:36.870
And we also do some Mime-Type
checking.

00:09:36.870 --> 00:09:39.635
So we prevent users from
uploading harmful files into

00:09:39.635 --> 00:09:40.885
their accounts.

00:09:44.750 --> 00:09:47.510
Why did we decide to
go with cloud and

00:09:47.510 --> 00:09:48.330
App Engine in general?

00:09:48.330 --> 00:09:51.200
Well, as you may or may
not know, Lowe's is

00:09:51.200 --> 00:09:52.520
not a software company.

00:09:52.520 --> 00:09:57.790
So in order to make this kind
of feature work in our own

00:09:57.790 --> 00:09:59.760
environment, we were looking
at potentially millions of

00:09:59.760 --> 00:10:02.150
dollars in upfront hardware
investment.

00:10:02.150 --> 00:10:05.390
Whereas, if we use App Engine,
we're looking, worst-case

00:10:05.390 --> 00:10:07.970
scenario, hundreds of thousands
of dollars.

00:10:07.970 --> 00:10:10.910
And because this is a new
feature, if it does take off,

00:10:10.910 --> 00:10:14.140
we know that App Engine can
handle however many requests

00:10:14.140 --> 00:10:16.800
users throw at it, and scale
without a problem.

00:10:20.200 --> 00:10:22.870
That's pretty much it for my
part of the presentation.

00:10:22.870 --> 00:10:24.650
I'm going to hand it
now back to Peter.

00:10:24.650 --> 00:10:25.980
PETER S. MAGNUSSON: Thank
you very much.

00:10:25.980 --> 00:10:35.100
[APPLAUSE]

00:10:35.100 --> 00:10:36.170
PETER S. MAGNUSSON: Software
updates are

00:10:36.170 --> 00:10:38.810
available for your computer.

00:10:38.810 --> 00:10:40.460
Thank you, Firefox.

00:10:40.460 --> 00:10:41.400
OK.

00:10:41.400 --> 00:10:43.550
Think we'll skip through on
the upgrade [INAUDIBLE].

00:10:43.550 --> 00:10:47.400
The cloud is interrupting
my cloud talk.

00:10:47.400 --> 00:10:49.132
Did I need to get--

00:10:49.132 --> 00:10:50.076
there we go.

00:10:50.076 --> 00:10:52.440
All right.

00:10:52.440 --> 00:10:56.070
All right, thank you
very much, Robert.

00:10:56.070 --> 00:10:59.960
So it's actually not a joke
that Robert looked at me.

00:10:59.960 --> 00:11:02.810
I actually am remodeling my
kitchen at this very day.

00:11:02.810 --> 00:11:05.410
I actually got a text for my
girlfriend on the fridge that

00:11:05.410 --> 00:11:07.140
got delivered today.

00:11:07.140 --> 00:11:09.480
So I was going to put in a joke
here about software, and

00:11:09.480 --> 00:11:10.920
getting the kitchen sink,
because we actually

00:11:10.920 --> 00:11:12.750
bought it at Lowe's.

00:11:12.750 --> 00:11:16.280
But I'm going to
spare you guys.

00:11:16.280 --> 00:11:20.655
The use case of Lowe's is a very
interesting one because

00:11:20.655 --> 00:11:22.760
it leverages the tight
integration between Google

00:11:22.760 --> 00:11:27.540
Cloud, Google Cloud Storage,
and Google App Engine.

00:11:27.540 --> 00:11:29.480
So there's a lot of use cases--
in particular, in

00:11:29.480 --> 00:11:33.330
Enterprise Edge-- that really
are storage-related problems,

00:11:33.330 --> 00:11:35.930
that you need business logic
and processing and identity

00:11:35.930 --> 00:11:39.450
and authentication, and so
forth, around storage issues.

00:11:39.450 --> 00:11:42.750
And we already have quite a
good set of integration

00:11:42.750 --> 00:11:45.680
features, and expect to see a
lot more because we think this

00:11:45.680 --> 00:11:51.810
is a really important use case,
of basically building

00:11:51.810 --> 00:11:55.330
logic on top of storage.

00:11:55.330 --> 00:11:58.665
And it's also, of course,
a very good use case for

00:11:58.665 --> 00:12:00.910
Platform-as-a-Service
in general.

00:12:00.910 --> 00:12:03.610
Because even though I'm sure
MyLowes is going to have 10

00:12:03.610 --> 00:12:06.270
million customers using this,
the adoption rates are always

00:12:06.270 --> 00:12:07.185
going to be difficult
to predict.

00:12:07.185 --> 00:12:08.930
So the usage patterns
are going to be

00:12:08.930 --> 00:12:09.830
difficult to predict.

00:12:09.830 --> 00:12:12.590
And they don't really have to
commit to any particular CAPEX

00:12:12.590 --> 00:12:14.180
spending for this.

00:12:14.180 --> 00:12:17.540
So if you remember my slide from
just before Robert joined

00:12:17.540 --> 00:12:20.510
me, the second area of usage
that we found particular

00:12:20.510 --> 00:12:23.790
traction for App Engine is in
startups, in particular, with

00:12:23.790 --> 00:12:26.090
social or mobile direction.

00:12:26.090 --> 00:12:29.190
And a most excellent example
is my next guest speaker.

00:12:29.190 --> 00:12:32.220
Welcome on stage, Elliot.

00:12:32.220 --> 00:12:39.150
[APPLAUSE]

00:12:39.150 --> 00:12:40.270
ELLIOT KROO: So Hi.

00:12:40.270 --> 00:12:43.040
I'm Elliot Kroo, Founder and
Engineering Director at

00:12:43.040 --> 00:12:45.690
Getaround, where we're
disrupting the transportation

00:12:45.690 --> 00:12:47.770
industry by enabling people
to share their

00:12:47.770 --> 00:12:50.240
cars with others nearby.

00:12:50.240 --> 00:12:52.790
So Peter ask me here to talk a
little bit about Getaround,

00:12:52.790 --> 00:12:54.030
and how we've grown
with App Engine.

00:12:54.030 --> 00:12:56.660
I'm going to tell you a little
bit about Getaround, and then

00:12:56.660 --> 00:13:00.640
how we've grown with App
Engine as a platform.

00:13:00.640 --> 00:13:03.860
So right now, there are a
billion cars in the world.

00:13:03.860 --> 00:13:09.130
Each car sits idle about 92%
of every single day.

00:13:09.130 --> 00:13:10.730
They're literally
assets sitting

00:13:10.730 --> 00:13:13.290
unused all of the time.

00:13:13.290 --> 00:13:15.140
Getaround is here to
solve that problem.

00:13:15.140 --> 00:13:18.150
Car owners make money from
an idle car that

00:13:18.150 --> 00:13:20.220
they're renting out.

00:13:20.220 --> 00:13:23.020
And car renters can get a
car when they need it.

00:13:23.020 --> 00:13:25.060
This changes the transportation
game,

00:13:25.060 --> 00:13:28.790
fundamentally, from ownership
to access.

00:13:28.790 --> 00:13:31.010
Getaround is a marketplace.

00:13:31.010 --> 00:13:33.940
So when you log in, you can
browse through full car

00:13:33.940 --> 00:13:37.510
profiles that owners have
built for their car.

00:13:37.510 --> 00:13:39.370
When you find cars that you
want, you can send out a

00:13:39.370 --> 00:13:41.860
request to that owner
asking them to share

00:13:41.860 --> 00:13:42.590
their car with you.

00:13:42.590 --> 00:13:44.050
The owner can approve or deny.

00:13:44.050 --> 00:13:47.970
If they choose to approve it,
they can send a digital key to

00:13:47.970 --> 00:13:50.800
you to get into the car without
having to meet the

00:13:50.800 --> 00:13:54.030
owner and exchange the key.

00:13:54.030 --> 00:13:57.780
So Getaround started as a
university project, and made

00:13:57.780 --> 00:14:02.030
its debut at a hackathon in
2009, about a year after App

00:14:02.030 --> 00:14:04.000
Engine launched.

00:14:04.000 --> 00:14:06.670
In two days and about four hours
of sleep, we built a

00:14:06.670 --> 00:14:08.760
mobile app and a back-end
infrastructure to connect

00:14:08.760 --> 00:14:11.120
owners and renters, and then
call out to a piece of

00:14:11.120 --> 00:14:13.480
hardware connected to the
door locks of the car

00:14:13.480 --> 00:14:15.460
that's being rented.

00:14:15.460 --> 00:14:18.230
This is actually one of App
Engine's greatest strengths.

00:14:18.230 --> 00:14:22.680
The ability to go in and take
an idea all the way to

00:14:22.680 --> 00:14:25.410
execution, and launch a
production web application in

00:14:25.410 --> 00:14:28.440
hours or minutes is something
that App Engine has been

00:14:28.440 --> 00:14:30.320
really good at since day one.

00:14:30.320 --> 00:14:32.040
There's no reconfiguration
required.

00:14:32.040 --> 00:14:33.390
Google handles all
the boring stuff.

00:14:33.390 --> 00:14:36.480
And we can focus on execution.

00:14:36.480 --> 00:14:40.210
In 2011, everything seemingly
fell into place for us at

00:14:40.210 --> 00:14:42.480
TechCrunch Disrupt.

00:14:42.480 --> 00:14:47.120
So TechCrunch Disrupt is a major
startup competition.

00:14:47.120 --> 00:14:49.790
It's a pretty big opportunity
for us.

00:14:49.790 --> 00:14:52.220
In our case, we actually went
on to win both the main

00:14:52.220 --> 00:14:56.080
VC-judged award, and the
audience choice award.

00:14:56.080 --> 00:15:00.220
We were actually double-digit
percentage of all the Twitter

00:15:00.220 --> 00:15:03.610
traffic during the main event.

00:15:03.610 --> 00:15:06.560
So that led to massive
publicity.

00:15:06.560 --> 00:15:09.450
A 30x increase in traffic
over that one

00:15:09.450 --> 00:15:10.810
and a half hour period.

00:15:10.810 --> 00:15:17.160
And best of all for me, the huge
opportunity for downtime

00:15:17.160 --> 00:15:20.050
of our service right when
we needed it most.

00:15:20.050 --> 00:15:23.790
Ultimately, it is me who's
responsible for keeping the

00:15:23.790 --> 00:15:24.680
website up.

00:15:24.680 --> 00:15:29.120
And right then, I was busy
getting drenched in champagne.

00:15:29.120 --> 00:15:32.330
So you can guess how fast
I was paged with

00:15:32.330 --> 00:15:34.110
our site going down.

00:15:34.110 --> 00:15:38.240
It was literally never.

00:15:38.240 --> 00:15:39.310
App Engine was great.

00:15:39.310 --> 00:15:40.740
It over-provisioned
defensively.

00:15:40.740 --> 00:15:44.930
And our latency during this time
of huge traffic went down

00:15:44.930 --> 00:15:47.140
rather than up.

00:15:47.140 --> 00:15:51.280
So App Engine has actually
been pretty cool.

00:15:51.280 --> 00:15:54.100
In the last year, we've matured
as an organization,

00:15:54.100 --> 00:15:57.370
both on the engineering side
and as a business.

00:15:57.370 --> 00:15:59.940
And we've grown a lot.

00:15:59.940 --> 00:16:02.420
Right now, we actually have an
inventory of thousands of

00:16:02.420 --> 00:16:05.530
cars, ranging from Nissan LEAFs
to Tesla Roadsters.

00:16:05.530 --> 00:16:08.070
And actually, we don't just have
one Tesla Roadster, we

00:16:08.070 --> 00:16:09.950
now have seven listed on
the site that you can

00:16:09.950 --> 00:16:11.760
rent out at any point.

00:16:11.760 --> 00:16:14.850
And as we've matured, App Engine
has grown as well.

00:16:14.850 --> 00:16:18.580
In 2009, App Engine was really
good to start on.

00:16:18.580 --> 00:16:20.370
On the other hand,
it had a lot of

00:16:20.370 --> 00:16:21.310
things that were missing.

00:16:21.310 --> 00:16:22.540
It had no SLA.

00:16:22.540 --> 00:16:25.350
It was missing the reliability
of the High Replication

00:16:25.350 --> 00:16:26.920
Datastore when we
first started.

00:16:26.920 --> 00:16:28.810
You couldn't even process
requests for

00:16:28.810 --> 00:16:29.940
longer than 30 seconds.

00:16:29.940 --> 00:16:31.900
There was just no
way to do that.

00:16:31.900 --> 00:16:35.390
Over the last several years,
the App Engine team, one by

00:16:35.390 --> 00:16:37.930
one, has been solving every
single one of these

00:16:37.930 --> 00:16:39.590
limitations.

00:16:39.590 --> 00:16:42.510
So now, with Python 2.7 support,
we can use a wide

00:16:42.510 --> 00:16:45.450
variety of external libraries
on Python.

00:16:45.450 --> 00:16:49.110
We use a MapReduce pipeline now
to power all of our weekly

00:16:49.110 --> 00:16:51.620
analytics and report generation
over our now

00:16:51.620 --> 00:16:54.130
massive data site that
we deal with.

00:16:54.130 --> 00:16:57.240
And recently, we've been able to
move Search, which was our

00:16:57.240 --> 00:17:00.190
last major component running
outside of App Engine, or in

00:17:00.190 --> 00:17:05.190
our infrastructure from an
external third party index

00:17:05.190 --> 00:17:08.150
server, to our own custom
in-memory time series

00:17:08.150 --> 00:17:11.290
database, sitting on back-ends
right next to our front-end

00:17:11.290 --> 00:17:14.520
instances in the same
data centers.

00:17:14.520 --> 00:17:17.520
So just fairly recently,
actually-- it's pretty

00:17:17.520 --> 00:17:20.380
exciting-- we're now able to run
our entire product, from

00:17:20.380 --> 00:17:25.410
end to end, from the web app
and our mobile applications

00:17:25.410 --> 00:17:28.250
infrastructure, to being able
to call out to our hardware

00:17:28.250 --> 00:17:31.350
that we've built, without
compromise.

00:17:31.350 --> 00:17:35.200
The whole system is now
running on App Engine.

00:17:35.200 --> 00:17:38.080
This last 2 and 1/2 years
has seen a remarkable

00:17:38.080 --> 00:17:39.660
transformation.

00:17:39.660 --> 00:17:42.290
We've seen a remarkable
transformation in the way App

00:17:42.290 --> 00:17:43.250
Engine has run.

00:17:43.250 --> 00:17:46.170
It started as a young platform,
great for launching

00:17:46.170 --> 00:17:50.120
new products, to a mature and
robust platform that we're

00:17:50.120 --> 00:17:53.480
proud to run all of our
infrastructure on top of.

00:17:53.480 --> 00:17:55.810
And we've grown as well, from
a hackathon project to a

00:17:55.810 --> 00:17:57.750
successful business
with customers who

00:17:57.750 --> 00:17:59.300
love what we're doing.

00:17:59.300 --> 00:18:01.820
We're now 40 people strong
and growing.

00:18:01.820 --> 00:18:04.080
So if you're passionate about
engineering and changing the

00:18:04.080 --> 00:18:07.240
world, we're looking for
more people to join us.

00:18:07.240 --> 00:18:09.080
So thanks so much, Peter.

00:18:09.080 --> 00:18:11.250
PETER S. MAGNUSSON: Thank
you very much, Elliot.

00:18:11.250 --> 00:18:19.410
[APPLAUSE]

00:18:19.410 --> 00:18:21.930
All right, thank
you very much.

00:18:21.930 --> 00:18:24.250
So I was tempted to insert a
joke about engines here.

00:18:24.250 --> 00:18:26.030
But I will resist
that as well.

00:18:26.030 --> 00:18:28.960
So what we've seen are two great
examples of successful

00:18:28.960 --> 00:18:29.690
App Engine used.

00:18:29.690 --> 00:18:32.860
The first time was Enterprise,
customer-facing application.

00:18:32.860 --> 00:18:39.170
And the second one was a mobile
startup created in the

00:18:39.170 --> 00:18:42.610
intensity of hackathons, and
then growing smoothly to be a

00:18:42.610 --> 00:18:43.560
successful company.

00:18:43.560 --> 00:18:45.490
And that's extremely exciting.

00:18:45.490 --> 00:18:48.700
The third area that I wanted to
highlight today is a little

00:18:48.700 --> 00:18:52.120
subtle, which is enterprise
productivity.

00:18:52.120 --> 00:18:55.050
We have customers developing
hundreds of internal

00:18:55.050 --> 00:18:57.740
applications on a per-company
basis on App Engine.

00:18:57.740 --> 00:18:58.880
And in some cases--

00:18:58.880 --> 00:19:00.790
including Google ourselves--

00:19:00.790 --> 00:19:02.770
thousands of applications.

00:19:02.770 --> 00:19:08.340
It turns out that much of the
work that we've spent to make

00:19:08.340 --> 00:19:11.270
App Engine applications very
simple to own and manage--

00:19:11.270 --> 00:19:15.710
we strive to make it trivial
to be actually running it--

00:19:15.710 --> 00:19:18.950
in effect, translates into a
very low product lifecycle

00:19:18.950 --> 00:19:20.370
management cost.

00:19:20.370 --> 00:19:24.170
And this is very attractive to
companies that want to be able

00:19:24.170 --> 00:19:27.525
to build and run lots
of applications.

00:19:31.110 --> 00:19:36.130
So our next speaker is Mani,
who is from OrangeScape--

00:19:36.130 --> 00:19:39.400
come up on stage-- who will
tell us a little bit about

00:19:39.400 --> 00:19:41.532
their workflow technology.

00:19:41.532 --> 00:19:47.430
[APPLAUSE]

00:19:47.430 --> 00:19:49.700
MANI DORAISAMY: Thanks, Peter.

00:19:49.700 --> 00:19:51.070
So my name is Mani Doraisamy.

00:19:51.070 --> 00:19:53.040
I'm the co-founder and
CTO of OrangeScape.

00:19:53.040 --> 00:19:54.990
I'm here to talk about
a new workflow

00:19:54.990 --> 00:19:57.220
product called KISSFLOW.

00:19:57.220 --> 00:19:59.560
Now, what's this new product?

00:19:59.560 --> 00:20:03.010
Let's step back a little bit and
understand why KISSFLOW.

00:20:03.010 --> 00:20:04.960
Now, most of us in this
room already use

00:20:04.960 --> 00:20:05.890
Google Apps, right?

00:20:05.890 --> 00:20:07.290
It's not just us.

00:20:07.290 --> 00:20:12.030
Four million businesses are
already using Google Apps.

00:20:12.030 --> 00:20:14.770
So Google Apps is collaboration
at its best.

00:20:14.770 --> 00:20:17.760
If you look at Mail, Docs,
Calendars, all of them allows

00:20:17.760 --> 00:20:21.890
you to do collaboration
on cloud very easy.

00:20:21.890 --> 00:20:24.080
You can even put together
very simple data capture

00:20:24.080 --> 00:20:28.480
applications on top of Google
Apps and spreadsheets,

00:20:28.480 --> 00:20:31.160
especially the spreadsheets and
[INAUDIBLE] part of it.

00:20:31.160 --> 00:20:33.990
But beyond that, when the users
want to implement a

00:20:33.990 --> 00:20:37.010
slightly more sophisticated
enterprise application, let's

00:20:37.010 --> 00:20:39.340
say a workflow application
like a recruitment

00:20:39.340 --> 00:20:42.360
application, or for example,
a travel reimbursement

00:20:42.360 --> 00:20:45.200
application, then we expect
them to be superheroes.

00:20:45.200 --> 00:20:48.940
We want them to learn Python,
Java, understand the data

00:20:48.940 --> 00:20:53.610
store concepts like BigTable on
top of Google App Engine.

00:20:53.610 --> 00:20:57.500
Now, we thought, how will it
be if you can leverage the

00:20:57.500 --> 00:21:01.550
power of Google App Engine and
make the workflow product as

00:21:01.550 --> 00:21:04.100
simple as using Google Apps?

00:21:04.100 --> 00:21:06.360
That's basically this
new product.

00:21:06.360 --> 00:21:08.910
Today, we're excited to announce
the availability of

00:21:08.910 --> 00:21:12.380
KISSFLOW, a simple and smart
way of building workflow

00:21:12.380 --> 00:21:14.010
applications for Google Apps.

00:21:14.010 --> 00:21:15.650
It's the first workflow product

00:21:15.650 --> 00:21:17.430
exclusively for Google Apps.

00:21:17.430 --> 00:21:19.470
And it leverages the full power
of Google Cloud, which

00:21:19.470 --> 00:21:23.460
means it runs on top of Google
App Engine and Cloud SQL.

00:21:23.460 --> 00:21:28.330
And it integrates with Google
Docs, and also Google Contacts

00:21:28.330 --> 00:21:30.520
for collaborating.

00:21:30.520 --> 00:21:33.330
And all of them come within
your workflow.

00:21:33.330 --> 00:21:34.500
That's the beauty of it.

00:21:34.500 --> 00:21:38.470
Let's take a quick look at how
workflow can be built on top

00:21:38.470 --> 00:21:39.920
of KISSFLOW.

00:21:42.860 --> 00:21:45.310
OK, so I think we are up on the

00:21:45.310 --> 00:21:46.570
screen, on both the screens.

00:21:46.570 --> 00:21:49.750
So this is how the workflow
looks like, building process

00:21:49.750 --> 00:21:50.480
looks like.

00:21:50.480 --> 00:21:54.632
So let's say, for example,
this company, Dark Knight

00:21:54.632 --> 00:22:00.210
Enterprises, wants to clean up
their travel claim workflow.

00:22:00.210 --> 00:22:04.100
It asks for Bruce Wayne, who's
the head of the department, to

00:22:04.100 --> 00:22:07.670
create a workflow for automating
this process.

00:22:07.670 --> 00:22:10.120
So KISSFLOW gives you a very
simple, five-step process to

00:22:10.120 --> 00:22:11.200
create a wizard.

00:22:11.200 --> 00:22:13.930
First, you start off with
naming the process.

00:22:13.930 --> 00:22:18.470
And then you go into creating
the fields in the process.

00:22:18.470 --> 00:22:22.990
Like, for example, in the case
of a travel claim form, you

00:22:22.990 --> 00:22:27.210
have the purpose of travel,
which is what you capture to

00:22:27.210 --> 00:22:29.410
claim the amount.

00:22:29.410 --> 00:22:31.230
And then you have
the description.

00:22:31.230 --> 00:22:36.850
And you also have fields, like
for example, amount, the date

00:22:36.850 --> 00:22:39.010
on which the amount was
spent, and so on.

00:22:45.610 --> 00:22:51.130
Once we complete creating this
form, for example, you can add

00:22:51.130 --> 00:22:53.520
amount, which is basically
a number field.

00:22:53.520 --> 00:22:56.590
And I can also make this
a required field.

00:22:56.590 --> 00:23:00.910
And you can save this field and
that completes how expense

00:23:00.910 --> 00:23:02.540
claim forms will look like.

00:23:02.540 --> 00:23:06.020
So once I complete that, I can
go and define a process, a

00:23:06.020 --> 00:23:07.060
workflow process.

00:23:07.060 --> 00:23:08.890
A workflow process for a
travel claim would be,

00:23:08.890 --> 00:23:11.000
typically, a two-step
approval process.

00:23:11.000 --> 00:23:13.790
Like, for example, first, you
might want to send it to the

00:23:13.790 --> 00:23:15.660
department head for approval.

00:23:15.660 --> 00:23:20.540
So let's add Department Head
approval, which we will assign

00:23:20.540 --> 00:23:21.820
it to two users.

00:23:21.820 --> 00:23:23.860
One is, obviously, Bruce
Wayne himself.

00:23:23.860 --> 00:23:26.370
And then we will assign
it to another user.

00:23:26.370 --> 00:23:29.700
Like, for example, in this case,
we will assign it first

00:23:29.700 --> 00:23:30.930
to Harvey Dent.

00:23:30.930 --> 00:23:33.850
And then we will assign
it to Bruce Wayne.

00:23:33.850 --> 00:23:37.240
So you can see that we are not
trying to integrate anything

00:23:37.240 --> 00:23:37.930
with Google Apps.

00:23:37.930 --> 00:23:40.490
All of the users get
synchronized directly from

00:23:40.490 --> 00:23:42.450
Google Apps into KISSFLOW.

00:23:42.450 --> 00:23:45.880
Similarly, we will add the
second step, which is for

00:23:45.880 --> 00:23:48.670
finance approval, because
finance team would want to do

00:23:48.670 --> 00:23:49.990
the approval themselves.

00:23:49.990 --> 00:23:53.320
So in this case, we will assign
this to a Google group.

00:23:53.320 --> 00:23:57.600
So anybody in this group can
approve this request.

00:23:57.600 --> 00:24:00.610
Again, you can see you can
centrally manage all the user

00:24:00.610 --> 00:24:03.165
management and group management
without having to

00:24:03.165 --> 00:24:05.680
define roles, and manage
all of those things.

00:24:05.680 --> 00:24:10.520
So once I am done with the
process creation and the form

00:24:10.520 --> 00:24:12.790
creation, I can publish
this process.

00:24:12.790 --> 00:24:14.460
And this is how it
looks [INAUDIBLE]

00:24:14.460 --> 00:24:14.950
in the run time.

00:24:14.950 --> 00:24:17.900
So you have a very similar
Gmail-like look and feel.

00:24:17.900 --> 00:24:20.060
And I can initiate the
request where I can

00:24:20.060 --> 00:24:21.390
see the expense claim.

00:24:21.390 --> 00:24:23.940
And I can initiate the expense
claim request.

00:24:23.940 --> 00:24:28.650
So this is exactly how you
saw in the Form Design

00:24:28.650 --> 00:24:29.490
[INAUDIBLE].

00:24:29.490 --> 00:24:34.490
So I can enter the
process purpose.

00:24:34.490 --> 00:24:37.990
For example, I have broken my
car, and then I can specify

00:24:37.990 --> 00:24:40.550
its official expense.

00:24:40.550 --> 00:24:43.460
I don't know how many people
will claim breaking a car into

00:24:43.460 --> 00:24:44.690
an official expense.

00:24:44.690 --> 00:24:46.680
We'll put some amount
as 4,000.

00:24:46.680 --> 00:24:49.600
And I can also attach a document
directly from here.

00:24:49.600 --> 00:24:53.800
For example, I can attach a
travel document, so that the

00:24:53.800 --> 00:24:56.520
next set of approvals
can look at this

00:24:56.520 --> 00:24:57.930
document and do the approval.

00:24:57.930 --> 00:25:00.545
So once we are done, I
can submit this item.

00:25:00.545 --> 00:25:03.040
So this item, from the
initiator, will move

00:25:03.040 --> 00:25:04.080
into the next step.

00:25:04.080 --> 00:25:07.910
In this case, we defined
Department Head approval as

00:25:07.910 --> 00:25:08.830
the next step.

00:25:08.830 --> 00:25:11.180
So I can go into Approval
Request.

00:25:11.180 --> 00:25:14.140
And then I can see the progress
of my entire process.

00:25:14.140 --> 00:25:16.720
For example, I have initiated
from Bruce Wayne.

00:25:16.720 --> 00:25:19.830
And it's waiting for department
approval.

00:25:19.830 --> 00:25:24.380
So Bruce and Harvey are the
people who can approve it.

00:25:24.380 --> 00:25:26.280
So I can click on Approve.

00:25:26.280 --> 00:25:28.960
So if I click on Approve, it
goes into the next stage.

00:25:28.960 --> 00:25:32.370
This way, I have completed my
automation of the process.

00:25:32.370 --> 00:25:36.370
And I can also track to the
progress of the process,

00:25:36.370 --> 00:25:38.780
without having to do
any coding at all.

00:25:38.780 --> 00:25:40.400
That's the purpose
of this product.

00:25:40.400 --> 00:25:42.910
Now, it's not just about
tracking of the workflow.

00:25:42.910 --> 00:25:47.400
You can also do reporting
on top of this workflow.

00:25:47.400 --> 00:25:51.740
For example, if I go to a
reporting tab, I can look at

00:25:51.740 --> 00:25:56.310
the items as to how these
things can be

00:25:56.310 --> 00:25:59.190
filtered and reported.

00:25:59.190 --> 00:26:02.420
So with that, let me go into
the summary of KISSFLOW.

00:26:02.420 --> 00:26:05.350
KISSFLOW is a very simple and
smart way of building

00:26:05.350 --> 00:26:07.920
workflows, no technology
knowledge required.

00:26:07.920 --> 00:26:11.480
But it also seamlessly
integrates with Google Apps.

00:26:11.480 --> 00:26:14.650
So you get all of the
goodies of Google

00:26:14.650 --> 00:26:16.810
Docs, Mail, and Contacts.

00:26:16.810 --> 00:26:19.550
But it leverages the
power of Google App

00:26:19.550 --> 00:26:20.530
Engine and Cloud SQL.

00:26:20.530 --> 00:26:24.390
So when you log in, you have
a separate Google database,

00:26:24.390 --> 00:26:27.690
which is a Cloud SQL
allocated to you.

00:26:27.690 --> 00:26:29.830
So you don't have a problem
of sharing.

00:26:29.830 --> 00:26:32.740
It's standardized for all of the
enterprises, because most

00:26:32.740 --> 00:26:34.780
of the enterprise use RDBMS.

00:26:34.780 --> 00:26:38.340
So you get the power of Google
Cloud, as well as the

00:26:38.340 --> 00:26:39.980
power of Cloud SQL.

00:26:39.980 --> 00:26:41.740
So thanks for your time.

00:26:41.740 --> 00:26:42.820
We are at Sandbox.

00:26:42.820 --> 00:26:45.050
You can always visit us for
more demo because there is

00:26:45.050 --> 00:26:47.100
quite cool stuff that's
around there.

00:26:47.100 --> 00:26:51.500
And you can also try it out
at www.kissflow.com.

00:26:51.500 --> 00:26:52.852
Thank you.

00:26:52.852 --> 00:26:58.490
[APPLAUSE]

00:26:58.490 --> 00:26:59.530
PETER S. MAGNUSSON: I
need the clicker.

00:26:59.530 --> 00:27:00.646
Thank you.

00:27:00.646 --> 00:27:01.951
All right, thank
you very much.

00:27:04.600 --> 00:27:06.060
And now the moment you've
all been waiting for.

00:27:06.060 --> 00:27:09.080
We have a couple of improvements
to announce to

00:27:09.080 --> 00:27:11.090
App Engine today.

00:27:11.090 --> 00:27:13.405
So for that I'd like to
welcome on stage, Greg

00:27:13.405 --> 00:27:17.190
D'Alesandre, the lead product
manager of Google App Engine.

00:27:17.190 --> 00:27:18.340
Take it away, Greg.

00:27:18.340 --> 00:27:19.030
Let's hear it.

00:27:19.030 --> 00:27:20.401
GREG D'ALESANDRE: Thank
you, Peter.

00:27:20.401 --> 00:27:24.060
[APPLAUSE]

00:27:24.060 --> 00:27:26.850
GREG D'ALESANDRE: So I know
we're running out of time.

00:27:26.850 --> 00:27:28.670
So I'll try to get through
this quickly.

00:27:28.670 --> 00:27:30.540
We've made a lot of improvements
to App Engine.

00:27:30.540 --> 00:27:32.540
But I wanted to give you a
little bit of insight of

00:27:32.540 --> 00:27:34.720
what's been going on with App
Engine since we came out of

00:27:34.720 --> 00:27:36.900
preview in November
of last year.

00:27:36.900 --> 00:27:40.650
We've continued our rapid pace
of innovation, continuing to

00:27:40.650 --> 00:27:43.200
produce approximately one
release per month, including

00:27:43.200 --> 00:27:46.450
such things as Python 7, Backup
and Restore, traffic

00:27:46.450 --> 00:27:49.330
splitting threads, but a number
of improvements that

00:27:49.330 --> 00:27:51.580
have happened over the course
of the last six months.

00:27:51.580 --> 00:27:54.710
Today, though, we want
to talk about 1.7.0.

00:27:54.710 --> 00:27:57.570
In 1.7.0, we have a number of
things coming into general

00:27:57.570 --> 00:28:00.820
availability that people have
been requesting for, in some

00:28:00.820 --> 00:28:04.800
cases, a very long time, as well
as some new surprises.

00:28:04.800 --> 00:28:08.650
The first I'd like to talk
about is SSL for custom

00:28:08.650 --> 00:28:11.948
domains is finally
going into GAE.

00:28:11.948 --> 00:28:16.080
[APPLAUSE]

00:28:16.080 --> 00:28:17.060
GREG D'ALESANDRE: There
are two flavors of it.

00:28:17.060 --> 00:28:20.880
There is SNI, which supports
the majority of browsers.

00:28:20.880 --> 00:28:23.620
But for some people, some of
their applications, it doesn't

00:28:23.620 --> 00:28:23.950
support it.

00:28:23.950 --> 00:28:27.790
So we also support
a VIP option.

00:28:27.790 --> 00:28:28.830
SNI's a little cheaper.

00:28:28.830 --> 00:28:31.630
Because VIPs, we actually need
to give you a dedicated IP

00:28:31.630 --> 00:28:33.560
address, which, if you can
believe it, is expensive.

00:28:36.950 --> 00:28:40.240
Single VIPs and SNI can actually
support multiple

00:28:40.240 --> 00:28:43.540
applications by use of wildcard
or multi-domain

00:28:43.540 --> 00:28:44.310
certificates.

00:28:44.310 --> 00:28:46.370
All right, I'm going to start
talking fast to make sure we

00:28:46.370 --> 00:28:48.210
get all the information
out there.

00:28:48.210 --> 00:28:51.340
Cloud SQL, again, one of the
most requested features for

00:28:51.340 --> 00:28:53.330
App Engine, today is going
into open sign up.

00:28:53.330 --> 00:28:55.950
So now, anyone can
use Cloud SQL.

00:28:55.950 --> 00:28:59.080
Cloud SQL's a MySQL database in
the cloud, easy management,

00:28:59.080 --> 00:29:04.050
so zero admin configuration,
synchronous, geo-replication.

00:29:04.050 --> 00:29:07.260
It's already being very heavily
used by a lot of our

00:29:07.260 --> 00:29:10.820
customers, including
OrangeScape, as you just saw.

00:29:10.820 --> 00:29:16.070
And there is zero admin from
configurations backup.

00:29:16.070 --> 00:29:18.160
Next, the Search API.

00:29:18.160 --> 00:29:20.670
So we released our experimental
Search API

00:29:20.670 --> 00:29:22.390
approximately a month ago.

00:29:22.390 --> 00:29:25.120
I just wanted to highlight that
experimental Search API

00:29:25.120 --> 00:29:25.570
is out there.

00:29:25.570 --> 00:29:27.630
And as of 1.7.0, we've actually

00:29:27.630 --> 00:29:29.340
added in GeoPoint support.

00:29:29.340 --> 00:29:31.030
So you can make location-aware
searches.

00:29:31.030 --> 00:29:33.190
This is one of the biggest
requests we had for Search.

00:29:33.190 --> 00:29:35.520
And we just added it
in this release.

00:29:35.520 --> 00:29:40.340
The Search API itself allows
for the indexes are

00:29:40.340 --> 00:29:44.700
schemaless, giving you
scalability and flexibility in

00:29:44.700 --> 00:29:46.190
your search indexes.

00:29:46.190 --> 00:29:48.190
You can do things like
custom scoring and

00:29:48.190 --> 00:29:50.630
snippets, et cetera.

00:29:50.630 --> 00:29:54.420
Next, Google App Engine
European Data Centers.

00:29:54.420 --> 00:29:57.392
So Google App Engine is
now being hosted--

00:29:57.392 --> 00:30:01.640
[APPLAUSE]

00:30:01.640 --> 00:30:03.440
GREG D'ALESANDRE: Google App
Engine is now being hosted out

00:30:03.440 --> 00:30:06.190
of both the US and the
European Union.

00:30:06.190 --> 00:30:09.230
So this is for customers who
are interested in running

00:30:09.230 --> 00:30:11.430
their applications out of the
European Union, either for

00:30:11.430 --> 00:30:14.950
performance reasons, for their
customers in other parts of

00:30:14.950 --> 00:30:18.260
the world, or for compliance
reasons.

00:30:18.260 --> 00:30:21.780
When you run out of the EU, your
application instances run

00:30:21.780 --> 00:30:22.410
out of the EU.

00:30:22.410 --> 00:30:25.100
But all of your end-user
data is stored at rest

00:30:25.100 --> 00:30:26.740
in the EU as well.

00:30:26.740 --> 00:30:29.930
This is launching today for
premiere customers.

00:30:29.930 --> 00:30:32.450
Simultaneously, we also have
local contracts available for

00:30:32.450 --> 00:30:36.410
Premier customers in Europe, as
well as local currencies,

00:30:36.410 --> 00:30:40.422
such as British pounds, euros,
yen, and Australian dollars.

00:30:40.422 --> 00:30:41.750
[APPLAUSE]

00:30:41.750 --> 00:30:42.130
GREG D'ALESANDRE: [LAUGH]

00:30:42.130 --> 00:30:43.980
There's some international
people out there that are very

00:30:43.980 --> 00:30:46.200
excited about that.

00:30:46.200 --> 00:30:49.690
Next, PageSpeed Service
for App Engine.

00:30:49.690 --> 00:30:53.490
Let me show you a little
bit of a demo on this.

00:30:53.490 --> 00:30:57.880
This is actually the blog for an
App Engine customer, Pulse.

00:30:57.880 --> 00:31:02.400
What you will see here is
the before and after.

00:31:02.400 --> 00:31:04.720
So you'll notice--

00:31:04.720 --> 00:31:08.840
if I can pause it-- after about
1.8 seconds, everything

00:31:08.840 --> 00:31:10.930
had rendered on their
blog, initially,

00:31:10.930 --> 00:31:11.870
of what they needed.

00:31:11.870 --> 00:31:14.540
And then full rendering was
done in 8.2 seconds, as

00:31:14.540 --> 00:31:17.580
opposed to the 11 seconds
that it used to take.

00:31:17.580 --> 00:31:20.250
What PageSpeed Service does,
it's a service we launched a

00:31:20.250 --> 00:31:22.080
little while ago at
Google in general.

00:31:22.080 --> 00:31:24.130
But we've now made it available
to App Engine that

00:31:24.130 --> 00:31:27.480
you can enable with
a single click.

00:31:27.480 --> 00:31:31.200
It automatically optimizes
performance, such as image

00:31:31.200 --> 00:31:33.680
optimization, deferring
JavaScript loading, inlining

00:31:33.680 --> 00:31:36.490
CSS in JavaScript, rewriting
cache headers.

00:31:36.490 --> 00:31:40.040
It does all of the stuff you
need to do to increase

00:31:40.040 --> 00:31:40.510
performance.

00:31:40.510 --> 00:31:42.900
And let me move on from that,
because who knows what's going

00:31:42.900 --> 00:31:44.070
to be on that YouTube?

00:31:44.070 --> 00:31:45.140
Yeah, there we go.

00:31:45.140 --> 00:31:46.610
The next thing I wanted to talk

00:31:46.610 --> 00:31:50.200
about was Cloud Endpoints.

00:31:50.200 --> 00:31:52.080
This is the last thing
I wanted to bring up.

00:31:52.080 --> 00:31:54.730
But it's, frankly, one of the
things I'm most excited about.

00:31:54.730 --> 00:31:58.130
It's really in the spirit
of App Engine.

00:31:58.130 --> 00:32:01.480
What we brought you with Cloud
Endpoints is a really easy way

00:32:01.480 --> 00:32:05.390
to make mobile backends, and
backends for web-based

00:32:05.390 --> 00:32:08.900
applications using App Engine.

00:32:08.900 --> 00:32:12.590
So it exposes a REST API
for Android iOS and web

00:32:12.590 --> 00:32:13.480
applications.

00:32:13.480 --> 00:32:17.370
There's a JavaScript client
library, strongly typed client

00:32:17.370 --> 00:32:20.440
libraries in Java and
Objective-C, as well as we

00:32:20.440 --> 00:32:22.140
take care of all that
OOF2 that no one

00:32:22.140 --> 00:32:23.650
wants to learn about.

00:32:23.650 --> 00:32:27.120
The whole goal is really to
make it so that if you're

00:32:27.120 --> 00:32:29.520
building a mobile application
and you want a backend on your

00:32:29.520 --> 00:32:33.240
mobile application, it's really
easy to use App Engine

00:32:33.240 --> 00:32:35.510
to get that done without
having to learn all the

00:32:35.510 --> 00:32:37.520
details and do any of
the heavy lifting.

00:32:37.520 --> 00:32:40.600
In many ways, it's the
promise we've always

00:32:40.600 --> 00:32:43.790
wanted with App Engine.

00:32:43.790 --> 00:32:46.080
All right, that's 1.7.0
in a nutshell.

00:32:46.080 --> 00:32:48.710
And I don't think I've ever
talked that fast before.

00:32:48.710 --> 00:32:50.420
But that's 1.7.0
in a nutshell.

00:32:50.420 --> 00:32:52.310
We wanted to save a little bit
of time for questions.

00:32:52.310 --> 00:32:54.780
And I know there are probably
a couple out there.

00:32:54.780 --> 00:32:58.400
So the last thing I want to
do, as we're answering

00:32:58.400 --> 00:33:02.610
questions, is please come visit
our Partner Sandbox.

00:33:02.610 --> 00:33:04.730
There's a number of customers
that are using App Engine and

00:33:04.730 --> 00:33:06.520
Partner Sandbox.

00:33:06.520 --> 00:33:09.970
You can talk to App Engine
developers in the Sandbox.

00:33:09.970 --> 00:33:15.010
We also have crazy plushies
over there that you can

00:33:15.010 --> 00:33:17.880
probably sweet talk your way
into, t-shirts, custom

00:33:17.880 --> 00:33:19.520
chocolate bars, and gel skins.

00:33:19.520 --> 00:33:22.050
It's a lot of swag this year.

00:33:22.050 --> 00:33:24.740
So I think we have a
couple minutes, if

00:33:24.740 --> 00:33:25.990
people have any questions.

00:33:28.430 --> 00:33:29.620
I see someone getting up now.

00:33:29.620 --> 00:33:30.720
Although, he might be leaving.

00:33:30.720 --> 00:33:32.690
PETER S. MAGNUSSON: Do
we have a microphone?

00:33:32.690 --> 00:33:33.940
GREG D'ALESANDRE: There we go.

00:33:36.630 --> 00:33:37.090
AUDIENCE: Hi, I had
a question--

00:33:37.090 --> 00:33:37.480
PETER S. MAGNUSSON: Start with
an audience question.

00:33:37.480 --> 00:33:38.200
Go ahead.

00:33:38.200 --> 00:33:43.750
AUDIENCE: I had a question
about the control over

00:33:43.750 --> 00:33:45.410
synchronization across
continents.

00:33:45.410 --> 00:33:52.730
Do you have the ability to,
for example, block an App

00:33:52.730 --> 00:34:01.280
Engine from being replicated
over to the EU?

00:34:01.280 --> 00:34:02.870
GREG D'ALESANDRE: Is your
question, if you currently

00:34:02.870 --> 00:34:05.260
have an App Engine in the US
and you want to move your

00:34:05.260 --> 00:34:06.930
application over to the EU,
how do you do that?

00:34:06.930 --> 00:34:08.380
AUDIENCE: Well, we want
to restrict it to

00:34:08.380 --> 00:34:08.940
a particular continent.

00:34:08.940 --> 00:34:09.980
GREG D'ALESANDRE: To both?

00:34:09.980 --> 00:34:14.139
So as of today, the way it works
is you choose, when you

00:34:14.139 --> 00:34:16.420
create your application, if you
want it in the EU, or if

00:34:16.420 --> 00:34:17.790
you want it in the US.

00:34:17.790 --> 00:34:21.350
So we don't currently have a way
that your application can

00:34:21.350 --> 00:34:22.840
be shared across both places.

00:34:22.840 --> 00:34:26.730
Although, you could build your
own structure for essentially

00:34:26.730 --> 00:34:30.400
storing data and routing
traffic into

00:34:30.400 --> 00:34:31.925
the appropriate location.

00:34:31.925 --> 00:34:34.010
PETER S. MAGNUSSON: And to be
clear, that's a feature.

00:34:34.010 --> 00:34:35.440
So that's very intentional.

00:34:35.440 --> 00:34:38.150
In fact, we had to do
engineering to not have data

00:34:38.150 --> 00:34:39.750
going back and forth.

00:34:39.750 --> 00:34:42.150
Because we want to be able
to-- for all European

00:34:42.150 --> 00:34:42.790
customers--

00:34:42.790 --> 00:34:45.639
to be clear that, unless they
say very specifically

00:34:45.639 --> 00:34:51.139
otherwise, the application and
user data resides in the EU.

00:34:51.139 --> 00:34:53.210
AUDIENCE: I'm a federal
government customer, which is

00:34:53.210 --> 00:34:54.230
why I was asking.

00:34:54.230 --> 00:35:00.080
Because if we wanted to create
App Engine applications for

00:35:00.080 --> 00:35:03.970
Enterprise, we wanted to make
sure that it remains within

00:35:03.970 --> 00:35:07.190
the continental US.

00:35:07.190 --> 00:35:08.800
GREG D'ALESANDRE: I'm sorry,
I don't think I got that.

00:35:08.800 --> 00:35:11.790
AUDIENCE: We wanted to make
sure that the application

00:35:11.790 --> 00:35:14.440
remains in continental US.

00:35:14.440 --> 00:35:15.390
GREG D'ALESANDRE: Ah, yes.

00:35:15.390 --> 00:35:16.720
Oh, yes, absolutely.

00:35:16.720 --> 00:35:19.890
Sorry, that's the feature that
Peter was referring to.

00:35:19.890 --> 00:35:23.460
We make it very clear, you
choose either US or the EU.

00:35:23.460 --> 00:35:25.700
We don't automatically share
your application anywhere.

00:35:25.700 --> 00:35:27.710
You're making an explicit choice
where you want to host

00:35:27.710 --> 00:35:28.166
your application.

00:35:28.166 --> 00:35:29.020
AUDIENCE: OK, thank you.

00:35:29.020 --> 00:35:31.645
PETER S. MAGNUSSON: So we have
some moderator questions.

00:35:31.645 --> 00:35:32.970
So I'll read them.

00:35:32.970 --> 00:35:35.590
First one, "Where do you think
GAE pricing is heading?

00:35:35.590 --> 00:35:37.740
As developers leverage the
platforms more and more,

00:35:37.740 --> 00:35:40.510
pricing certainly becomes one
of the main selling points."

00:35:40.510 --> 00:35:42.640
And stay tuned.

00:35:42.640 --> 00:35:46.135
We are working on some news on
that that did not make press

00:35:46.135 --> 00:35:51.350
line for Google I/O. But
we're very aware of it.

00:35:51.350 --> 00:35:53.720
GREG D'ALESANDRE: Let's be
clear, good news on that.

00:35:53.720 --> 00:35:53.910
PETER S. MAGNUSSON: Good news.

00:35:53.910 --> 00:35:55.420
Yeah, let's be very clear
on that, yes.

00:35:55.420 --> 00:35:57.320
GREG D'ALESANDRE: I was on
stage last year with some

00:35:57.320 --> 00:35:58.205
other news.

00:35:58.205 --> 00:35:59.570
PETER S. MAGNUSSON: Yes.

00:35:59.570 --> 00:36:00.020
Yeah, yeah, yeah.

00:36:00.020 --> 00:36:03.580
So no, we're not
raising prices.

00:36:03.580 --> 00:36:07.130
We're looking at various forms
and more control for

00:36:07.130 --> 00:36:09.260
customers, and more options.

00:36:09.260 --> 00:36:13.630
So it basically, to
allow as your

00:36:13.630 --> 00:36:15.540
application becomes bigger--

00:36:15.540 --> 00:36:18.350
what we found is that when
you're a startup, and you're

00:36:18.350 --> 00:36:20.310
early, you're building small
applications, you're not very

00:36:20.310 --> 00:36:23.800
sensitive to inefficiencies
of your design.

00:36:23.800 --> 00:36:27.730
But as you scale up, App Engine
provides all these

00:36:27.730 --> 00:36:30.313
wonderful ways of shooting
yourself in the foot because

00:36:30.313 --> 00:36:31.250
it's very easy to use.

00:36:31.250 --> 00:36:33.390
It's very easy to start using
a lot of resources.

00:36:33.390 --> 00:36:35.160
So we find that larger
customers with larger

00:36:35.160 --> 00:36:41.650
footprints need to have more
options to trade off between

00:36:41.650 --> 00:36:43.920
features and capabilities
and price.

00:36:43.920 --> 00:36:46.690
So stay tuned on that.

00:36:46.690 --> 00:36:50.800
We hope to have updates on
that no later than Q3.

00:36:50.800 --> 00:36:52.195
GREG D'ALESANDRE: Should we take
another live question?

00:36:52.195 --> 00:36:53.593
PETER S. MAGNUSSON:
Let's do two, one.

00:36:53.593 --> 00:36:53.966
GREG D'ALESANDRE: Oh, sure.

00:36:53.966 --> 00:36:55.405
PETER S. MAGNUSSON: Because
this is all the Livestream

00:36:55.405 --> 00:36:57.590
folks as well.

00:36:57.590 --> 00:37:02.970
So second one is, "App Engine
just released OR queries in

00:37:02.970 --> 00:37:03.660
the new SDK.

00:37:03.660 --> 00:37:07.390
Are these true OR queries or do
multiple queries then merge

00:37:07.390 --> 00:37:07.870
the results?

00:37:07.870 --> 00:37:11.070
If so, how does the billing
work on these?"

00:37:11.070 --> 00:37:12.707
So let's do an audience
question.

00:37:12.707 --> 00:37:14.200
[LAUGHING]

00:37:14.200 --> 00:37:17.320
GREG D'ALESANDRE: I tried,
man, I tried.

00:37:17.320 --> 00:37:19.980
I'm looking down to the App
Engine team in the audience.

00:37:19.980 --> 00:37:21.412
Actually, that's a detail
I don't know off

00:37:21.412 --> 00:37:21.740
the top of my head.

00:37:21.740 --> 00:37:25.200
PETER S. MAGNUSSON: Everyone is
looking at somebody else.

00:37:25.200 --> 00:37:26.810
So let's do an audience
question.

00:37:26.810 --> 00:37:27.850
We'll get back on this.

00:37:27.850 --> 00:37:29.925
GREG D'ALESANDRE: As they're
texting the people who do know

00:37:29.925 --> 00:37:31.430
the answer to that question.

00:37:31.430 --> 00:37:33.680
AUDIENCE: So you're not going
to get away from answering

00:37:33.680 --> 00:37:36.110
cost information that fast.

00:37:36.110 --> 00:37:39.380
Actually, my question has to
do with how should large

00:37:39.380 --> 00:37:43.060
companies deal with deployments
of App Engine

00:37:43.060 --> 00:37:46.650
applications, in terms of cost,
because they're unknown.

00:37:46.650 --> 00:37:48.570
Basically, there is the
App Premier, or

00:37:48.570 --> 00:37:49.590
the App Engine premier.

00:37:49.590 --> 00:37:51.800
There is a bunch of costs
associated with

00:37:51.800 --> 00:37:54.090
anything you do.

00:37:54.090 --> 00:37:55.950
And at the end of the day,

00:37:55.950 --> 00:37:57.810
budgeting-wise, it's a nightmare.

00:37:57.810 --> 00:38:00.070
How do you even know what this
application is going to cost?

00:38:00.070 --> 00:38:05.558
And should you have done it in
house, versus send it out?

00:38:05.558 --> 00:38:08.080
Are there any tools, for
example, if you use Django

00:38:08.080 --> 00:38:11.120
inside to be able to instrument
these things, and

00:38:11.120 --> 00:38:13.880
be able to at least get a
baseline, or an idea of what

00:38:13.880 --> 00:38:16.480
this thing's going to cost?

00:38:16.480 --> 00:38:17.980
GREG D'ALESANDRE: So in general,
the best way to

00:38:17.980 --> 00:38:20.560
understand how much our
applications are going to cost

00:38:20.560 --> 00:38:22.680
is by running it and
load-testing it to get an

00:38:22.680 --> 00:38:27.190
understanding of whether it's
the number of users you have,

00:38:27.190 --> 00:38:29.820
or the number of calls, or
whatever is the metric you're

00:38:29.820 --> 00:38:35.690
looking to scale to understand
how many that you can handle

00:38:35.690 --> 00:38:37.020
with an individual instance.

00:38:37.020 --> 00:38:40.450
The way App Engine pricing works
is, either you're paying

00:38:40.450 --> 00:38:44.310
for API call, which are very
set, or you're paying for

00:38:44.310 --> 00:38:47.180
instances, which are a
combination of CPU and memory.

00:38:47.180 --> 00:38:49.310
And it's how we've run
your application.

00:38:49.310 --> 00:38:52.120
Because the instances of a code
you write, the only way

00:38:52.120 --> 00:38:54.790
you can really know how many
instances you're going to need

00:38:54.790 --> 00:38:58.450
are by load-testing it and
seeing how your application

00:38:58.450 --> 00:38:59.600
does behave under load.

00:38:59.600 --> 00:39:03.490
So the way to understand and
predict how much App Engine

00:39:03.490 --> 00:39:06.200
will cost is by, essentially,
running your application

00:39:06.200 --> 00:39:10.670
there, and testing it, and
seeing what it uses.

00:39:10.670 --> 00:39:12.810
It's part of the reason we give
a free quota, so that

00:39:12.810 --> 00:39:15.230
people can test applications out
there to see what it would

00:39:15.230 --> 00:39:16.030
take to run.

00:39:16.030 --> 00:39:16.710
PETER S. MAGNUSSON:
So I'd like to add

00:39:16.710 --> 00:39:17.520
two things to that.

00:39:17.520 --> 00:39:20.240
So we see these things in the
enterprise space falling down

00:39:20.240 --> 00:39:22.140
in two broad areas.

00:39:22.140 --> 00:39:25.200
One is the load-testing, where
we're looking at ways to make

00:39:25.200 --> 00:39:27.680
it easier for you to build
load tests and cost

00:39:27.680 --> 00:39:28.465
estimators, and so forth.

00:39:28.465 --> 00:39:30.700
We're looking at those things.

00:39:30.700 --> 00:39:36.160
And the other area is around of
control of costs, which as

00:39:36.160 --> 00:39:37.810
your developer team-- especially
in Enterprise

00:39:37.810 --> 00:39:40.310
case-- starts growing up,
you need to have--

00:39:40.310 --> 00:39:43.770
you know, in App Engine, if you
create a premier account,

00:39:43.770 --> 00:39:46.490
basically you have
very coarse-grain

00:39:46.490 --> 00:39:47.520
controls in the budgets.

00:39:47.520 --> 00:39:50.960
And you need to have more
fine-grain ones, so that some

00:39:50.960 --> 00:39:54.360
arbitrary contractor that you
bring in doesn't change a set

00:39:54.360 --> 00:39:54.740
of indexes.

00:39:54.740 --> 00:39:56.990
And before you know it, you're
burning through 100K more a

00:39:56.990 --> 00:39:59.500
month than was necessary
because it wasn't being

00:39:59.500 --> 00:40:00.980
caught, and things like that.

00:40:00.980 --> 00:40:05.610
So those are the two areas that
we're looking at, that

00:40:05.610 --> 00:40:08.170
we're working on bringing
you things.

00:40:08.170 --> 00:40:09.740
One is to make it simpler.

00:40:09.740 --> 00:40:11.520
You can do it today, do
all the benchmarking

00:40:11.520 --> 00:40:12.580
and measuring yourself.

00:40:12.580 --> 00:40:14.910
But there are lots of things
we can do to make

00:40:14.910 --> 00:40:16.350
that simpler for you.

00:40:16.350 --> 00:40:20.370
And the other one is to provide
more fine-grain

00:40:20.370 --> 00:40:22.880
controls around budgeting.

00:40:22.880 --> 00:40:25.340
AUDIENCE: All right, thanks.

00:40:25.340 --> 00:40:26.630
PETER S. MAGNUSSON: Want to
do another audience one?

00:40:26.630 --> 00:40:28.900
Because I'm scared now of
the online questions.

00:40:28.900 --> 00:40:31.160
GREG D'ALESANDRE: Well,
any news on using

00:40:31.160 --> 00:40:32.050
SSL with custom domain?

00:40:32.050 --> 00:40:33.740
Yes, there is news.

00:40:33.740 --> 00:40:35.840
It's now GAE.

00:40:35.840 --> 00:40:38.926
I love answering the
easy questions.

00:40:38.926 --> 00:40:41.150
PETER S. MAGNUSSON: Yes,
we now have it.

00:40:41.150 --> 00:40:42.770
[INAUDIBLE] " Because of
limitation of Google App

00:40:42.770 --> 00:40:45.930
Engine, many useful Python
libraries couldn't be used on

00:40:45.930 --> 00:40:47.040
the Google App Engine
platform.

00:40:47.040 --> 00:40:49.090
Is App Engine team planning some
way to solve the problem

00:40:49.090 --> 00:40:53.942
to prevent developers keep
rebuilding the wheel?" Yes.

00:40:53.942 --> 00:40:57.820
[LAUGHING]

00:40:57.820 --> 00:41:00.000
PETER S. MAGNUSSON: Question
from the audience.

00:41:00.000 --> 00:41:03.160
AUDIENCE: I'm looking for a
CouchDB type replacement.

00:41:03.160 --> 00:41:07.640
So regarding the Enterprise
Edge, I'm really interested in

00:41:07.640 --> 00:41:11.930
the enterprise synchronization
across Europe and the US.

00:41:11.930 --> 00:41:14.740
But I'd also be able to like
to synchronize into a

00:41:14.740 --> 00:41:17.430
disconnected device when
it's disconnected.

00:41:17.430 --> 00:41:20.620
So if there's a pilot flying
around in a 747, is carrying

00:41:20.620 --> 00:41:23.940
an Android, when it lands
somewhere, I'd like to be able

00:41:23.940 --> 00:41:24.920
to synchronize.

00:41:24.920 --> 00:41:27.810
And of course, when it's up in
the air, you can't do that for

00:41:27.810 --> 00:41:29.010
different reasons.

00:41:29.010 --> 00:41:30.900
Same for precision
agriculture.

00:41:30.900 --> 00:41:34.030
The same for, actually,
military logistics.

00:41:34.030 --> 00:41:35.330
PETER S. MAGNUSSON: All right,
so those are sort of two

00:41:35.330 --> 00:41:35.830
different areas.

00:41:35.830 --> 00:41:40.250
Synchronization between the EU
and the US, we are for now not

00:41:40.250 --> 00:41:41.710
looking at any particular
features.

00:41:41.710 --> 00:41:43.320
You need to code
that yourself.

00:41:43.320 --> 00:41:45.110
And the reason for that
is very intentional.

00:41:45.110 --> 00:41:49.790
It's that you own the legal,
and whatever consequences

00:41:49.790 --> 00:41:51.470
there are of those algorithms.

00:41:51.470 --> 00:41:55.180
So we don't want to be in a
situation where a corporation

00:41:55.180 --> 00:41:57.820
in Europe, who is
jurisdictionally required to

00:41:57.820 --> 00:42:00.840
keep end-user data locally
because of some setting in

00:42:00.840 --> 00:42:04.300
some dialogue box somewhere
suddenly got synced over to US

00:42:04.300 --> 00:42:05.930
Supreme Court jurisdiction.

00:42:05.930 --> 00:42:10.070
So this is actually a feature
that we explicitly want to

00:42:10.070 --> 00:42:13.490
make the developer problems, so
the developer can decide on

00:42:13.490 --> 00:42:14.160
the policy.

00:42:14.160 --> 00:42:16.650
So that Google can
just say, no, the

00:42:16.650 --> 00:42:17.890
developer's decided for.

00:42:17.890 --> 00:42:19.830
And it's the developer's
responsibility.

00:42:19.830 --> 00:42:22.250
The other one is synchronization
between App

00:42:22.250 --> 00:42:23.500
Engine and mobile devices.

00:42:26.280 --> 00:42:27.790
Was that the other part of it?

00:42:27.790 --> 00:42:29.150
AUDIENCE: Yeah, and really,
how would I synchronize

00:42:29.150 --> 00:42:32.710
[INAUDIBLE] from App Engine to a
disconnected Android device?

00:42:32.710 --> 00:42:33.650
PETER S. MAGNUSSON: Right.

00:42:33.650 --> 00:42:37.510
So for us, that's higher
up in the stack.

00:42:37.510 --> 00:42:43.600
So there are lots of other cool
talks at Google I/O about

00:42:43.600 --> 00:42:45.040
how to do mono-web
applications.

00:42:45.040 --> 00:42:49.250
I would direct you to the talk
that Dan is doing on

00:42:49.250 --> 00:42:50.320
Dart, and using it.

00:42:50.320 --> 00:42:53.740
So we have various web stack
technology stuff going on to

00:42:53.740 --> 00:42:54.750
make that simpler.

00:42:54.750 --> 00:42:56.670
From the App Engine point
of view, that is

00:42:56.670 --> 00:42:58.320
the application layer.

00:42:58.320 --> 00:42:59.890
AUDIENCE: OK, thanks.

00:42:59.890 --> 00:43:03.790
GREG D'ALESANDRE: And speaking
of talks, I would highlight,

00:43:03.790 --> 00:43:06.340
check out all the sessions
around Cloud platform.

00:43:06.340 --> 00:43:08.560
There's a session tomorrow
morning around Cloud Endpoints

00:43:08.560 --> 00:43:11.070
to go into a lot more detail
about how to use them, and how

00:43:11.070 --> 00:43:12.200
to build them.

00:43:12.200 --> 00:43:13.420
I did mention I was
excited about it.

00:43:13.420 --> 00:43:15.430
So I'm going to mention that
talk over and over again.

00:43:15.430 --> 00:43:19.110
There's also a talk on Friday
about optimizing your App

00:43:19.110 --> 00:43:21.000
Engine application.

00:43:21.000 --> 00:43:24.490
So there's a number of talks
over the course of I/O around

00:43:24.490 --> 00:43:25.220
using App Engine.

00:43:25.220 --> 00:43:29.260
I think there's a Python 2.7
talk tomorrow as well.

00:43:29.260 --> 00:43:30.625
PETER S. MAGNUSSON: Want to
take an audience question?

00:43:30.625 --> 00:43:32.380
GREG D'ALESANDRE: Sure.

00:43:32.380 --> 00:43:34.410
PETER S. MAGNUSSON: Oh, we're
going to alternate.

00:43:34.410 --> 00:43:37.380
AUDIENCE: I run a data
center in Asia.

00:43:37.380 --> 00:43:39.688
Do you have any plan?

00:43:39.688 --> 00:43:43.065
GREG D'ALESANDRE: Do we have
plans for Asian data centers?

00:43:43.065 --> 00:43:43.760
AUDIENCE: Yes.

00:43:43.760 --> 00:43:45.290
GREG D'ALESANDRE: Was
that the question?

00:43:45.290 --> 00:43:46.776
PETER S. MAGNUSSON: We have
nothing to announce today.

00:43:50.010 --> 00:43:52.050
So one of the things I wanted
to emphasize is that App

00:43:52.050 --> 00:43:54.410
Engine runs on many
data centers.

00:43:54.410 --> 00:43:55.520
So we don't have a
single point of

00:43:55.520 --> 00:43:57.080
failure on a data center.

00:43:57.080 --> 00:44:00.510
So as opposed to some Cloud
products, we can't say we're

00:44:00.510 --> 00:44:02.650
in a region just because there's
one data center there.

00:44:02.650 --> 00:44:05.690
We have to have several.

00:44:05.690 --> 00:44:07.380
And so we have to have a
pretty large footprint.

00:44:07.380 --> 00:44:10.160
So we currently have sorted
that out in Europe.

00:44:10.160 --> 00:44:15.990
And we've said before with HRD,
we copy, we make, we can

00:44:15.990 --> 00:44:18.770
handle more than one data
center failure.

00:44:18.770 --> 00:44:23.760
So we're running at a set of
data centers that are spread

00:44:23.760 --> 00:44:25.410
apart over multiple countries.

00:44:25.410 --> 00:44:30.000
And we've been doing US
for several years.

00:44:30.000 --> 00:44:33.160
In Q4 last year, we went out of
preview and became a fully

00:44:33.160 --> 00:44:34.200
supported commercial product.

00:44:34.200 --> 00:44:35.510
And this year, we're
announcing Europe.

00:44:35.510 --> 00:44:38.160
So you can extrapolate from
that curve on what we're

00:44:38.160 --> 00:44:39.280
likely to be doing.

00:44:39.280 --> 00:44:42.520
One thing we have said is that
Japan is App Engine's

00:44:42.520 --> 00:44:46.730
second-largest customer,
which is awesome.

00:44:46.730 --> 00:44:50.440
So Asia is very big.

00:44:50.440 --> 00:44:52.640
So we'll take an online one
here. "Could you please

00:44:52.640 --> 00:44:54.990
provide the roadmap to improve
the datastore backup and

00:44:54.990 --> 00:44:57.150
restore functionalities, in
particular the restore by

00:44:57.150 --> 00:45:00.580
namespace?" We are working
on this as well.

00:45:00.580 --> 00:45:00.830
GREG D'ALESANDRE:
We are indeed.

00:45:00.830 --> 00:45:02.220
PETER S. MAGNUSSON: Nothing
specific to announce today.

00:45:02.220 --> 00:45:05.010
GREG D'ALESANDRE: And I didn't
mention it as part of 1.7.0.

00:45:05.010 --> 00:45:08.050
But as part of 1.7.0, there
actually was an improvement to

00:45:08.050 --> 00:45:13.110
backup and restore in order to
allow you to restore to a

00:45:13.110 --> 00:45:14.980
different app ID after
you've done a backup.

00:45:14.980 --> 00:45:17.190
That came out in 1.7.0.

00:45:17.190 --> 00:45:18.190
I just gave the highlights.

00:45:18.190 --> 00:45:19.650
But you should definitely
check out the

00:45:19.650 --> 00:45:20.580
release notes for 1.7.0.

00:45:20.580 --> 00:45:22.710
There's a ton of new
stuff in there.

00:45:22.710 --> 00:45:26.360
But the specific question around
backup and restore for

00:45:26.360 --> 00:45:29.200
namespace, we've definitely
heard before and we are

00:45:29.200 --> 00:45:31.870
looking at.

00:45:31.870 --> 00:45:33.670
PETER S. MAGNUSSON: "Does App
Engine plan on integrating

00:45:33.670 --> 00:45:35.880
with any version control
system such as GitHub,

00:45:35.880 --> 00:45:39.910
Project, or Subversion?"
We have looked

00:45:39.910 --> 00:45:40.830
at this in the past.

00:45:40.830 --> 00:45:44.540
We've talked to some of these
players in the past.

00:45:44.540 --> 00:45:47.170
We're probably going to have
a second look at that.

00:45:47.170 --> 00:45:50.010
It's something that makes
a lot of sense.

00:45:50.010 --> 00:45:54.800
So I think the short answer is,
yes, we plan on developing

00:45:54.800 --> 00:45:58.290
integrations, or facilitating
for integrating with version

00:45:58.290 --> 00:45:59.070
control systems.

00:45:59.070 --> 00:46:00.682
We want to take [INAUDIBLE]?

00:46:00.682 --> 00:46:02.550
AUDIENCE: Any plans
for support of

00:46:02.550 --> 00:46:06.340
Node.js, or other languages?

00:46:06.340 --> 00:46:07.815
PETER S. MAGNUSSON: Yes,
more language supports.

00:46:10.580 --> 00:46:15.520
Yes, we want to add more
languages to App Engine.

00:46:15.520 --> 00:46:16.540
And we're working on it.

00:46:16.540 --> 00:46:18.310
We have nothing more to
announce at this I/O,

00:46:18.310 --> 00:46:19.560
unfortunately.

00:46:21.460 --> 00:46:23.950
Another online. "App Engine
continues to be compared to

00:46:23.950 --> 00:46:24.995
traditional relational
databases.

00:46:24.995 --> 00:46:27.380
Do you see Google making
it even more easier for

00:46:27.380 --> 00:46:29.870
developers to transition by
adding features to App Engine,

00:46:29.870 --> 00:46:33.330
documentation, use cases,
et cetera?"

00:46:33.330 --> 00:46:35.480
Yes, I think we're doing
quite a lot.

00:46:35.480 --> 00:46:40.180
So the usability of the
datastore, of the Google NoSQL

00:46:40.180 --> 00:46:43.870
solution, I think, over time has
been adding features and

00:46:43.870 --> 00:46:47.430
reducing the restrictions that
are fundamental, that have

00:46:47.430 --> 00:46:48.900
been viewed as being
fundamental

00:46:48.900 --> 00:46:51.800
between SQL and NoSQL.

00:46:51.800 --> 00:46:54.540
I think we're going to continue
down the path if we

00:46:54.540 --> 00:46:58.730
take the 30,000-foot view of
cloud-based SQL system

00:46:58.730 --> 00:47:03.110
becoming faster and more
scalable, while at same time,

00:47:03.110 --> 00:47:07.540
cloud-based NoSQL systems slowly
start shedding the

00:47:07.540 --> 00:47:10.270
historical limitations of what
sort of queries and processing

00:47:10.270 --> 00:47:12.400
that you can officially
do against them.

00:47:12.400 --> 00:47:15.030
And then, in the not too distant
future, I think,

00:47:15.030 --> 00:47:17.460
actually, we're going to end
up having not much of a

00:47:17.460 --> 00:47:19.670
difference between them.

00:47:19.670 --> 00:47:21.730
So one of things that we're
trying to do with App Engine,

00:47:21.730 --> 00:47:24.460
with the addition of Google
Cloud SQL, is not

00:47:24.460 --> 00:47:26.300
just SQL, per se.

00:47:26.300 --> 00:47:28.980
But it's to provide MySQL
interface that has a lot of

00:47:28.980 --> 00:47:31.530
aspects that people are
very familiar with.

00:47:31.530 --> 00:47:34.120
So we're trying to create an
environment in App Engine,

00:47:34.120 --> 00:47:40.090
where if you want the very
scalable in terms of lots of

00:47:40.090 --> 00:47:43.240
queries, of the types that
web applications do,

00:47:43.240 --> 00:47:44.490
we can scale great.

00:47:44.490 --> 00:47:47.250
Whereas, if you have this
account data, or internal

00:47:47.250 --> 00:47:50.970
application data that requires
SQL reporting, or things like

00:47:50.970 --> 00:47:53.710
that, you can put those
in Google Cloud SQL.

00:47:53.710 --> 00:47:57.230
So I think what you can
anticipate us doing in Cloud

00:47:57.230 --> 00:48:00.410
in general, is to continue
to improve datastore's

00:48:00.410 --> 00:48:03.950
capabilities, and working on
reducing or minimizing the

00:48:03.950 --> 00:48:06.655
restrictions that NoSQL have
historically done, while at

00:48:06.655 --> 00:48:09.920
the same time improving the
integration with SQL.

00:48:09.920 --> 00:48:13.380
But for a long time, I think
the best way of building

00:48:13.380 --> 00:48:16.090
applications is to think about,
what data naturally

00:48:16.090 --> 00:48:20.120
resides in memcache, what
naturally resides in a NoSQL

00:48:20.120 --> 00:48:23.580
part, and what naturally resides
in the SQL part.

00:48:23.580 --> 00:48:24.610
Want to take a--

00:48:24.610 --> 00:48:27.620
GREG D'ALESANDRE: Yeah, let's
take a live question.

00:48:27.620 --> 00:48:30.110
AUDIENCE: Every App Engine
developer in the enterprise

00:48:30.110 --> 00:48:33.060
eventually has a conversation,
usually with boss of the boss

00:48:33.060 --> 00:48:36.290
of the boss of his boss, where
the assistant executive vice

00:48:36.290 --> 00:48:39.050
president says, but my
data is precious.

00:48:39.050 --> 00:48:40.050
It's mine.

00:48:40.050 --> 00:48:43.230
How can I trust that Google will
not take it, and do what

00:48:43.230 --> 00:48:45.220
we're doing, but better?

00:48:45.220 --> 00:48:46.780
So what is the answer?

00:48:46.780 --> 00:48:49.180
What are the guarantees?

00:48:49.180 --> 00:48:52.700
GREG D'ALESANDRE: Well, a couple
of the guarantees we

00:48:52.700 --> 00:48:54.640
make are illegal ones.

00:48:54.640 --> 00:48:58.690
If you read our terms of
service, it does say what we

00:48:58.690 --> 00:49:00.140
can and can't do to the data.

00:49:00.140 --> 00:49:02.830
I know that there are a lot of
people have asked a similar

00:49:02.830 --> 00:49:05.750
question of, like, are you going
to take my data and put

00:49:05.750 --> 00:49:08.980
it into a search index and make
search all that better?

00:49:08.980 --> 00:49:11.060
First of all, I think we'd have
a hard time understanding

00:49:11.060 --> 00:49:12.880
your data to try to put it
into a search index.

00:49:12.880 --> 00:49:16.885
But secondly, contractually,
we can't.

00:49:16.885 --> 00:49:20.220
We basically say that we can't
take your data and then

00:49:20.220 --> 00:49:23.000
re-share it.

00:49:23.000 --> 00:49:26.380
We essentially can use your
data for the purpose of

00:49:26.380 --> 00:49:29.220
providing you your application,
not for

00:49:29.220 --> 00:49:31.920
essentially anything we want.

00:49:31.920 --> 00:49:34.225
But this is one of the
transitions that's going on in

00:49:34.225 --> 00:49:38.060
the world right now, is as data
is moving into the cloud,

00:49:38.060 --> 00:49:39.520
some people get anxious
about it.

00:49:39.520 --> 00:49:41.650
And the best that we
can do is show that

00:49:41.650 --> 00:49:42.880
we've never done that.

00:49:42.880 --> 00:49:44.490
We've never implied we're
going to do that.

00:49:44.490 --> 00:49:45.910
We've never hinted we're
going to do that.

00:49:45.910 --> 00:49:48.920
And we have contracts saying
we can't do it.

00:49:48.920 --> 00:49:52.030
Beyond that, other than me going
and talking to them and

00:49:52.030 --> 00:49:53.540
saying, no, seriously,
seriously, we're

00:49:53.540 --> 00:49:54.370
not going to do it.

00:49:54.370 --> 00:49:58.890
You know, it's hard to make
more guarantees than that.

00:49:58.890 --> 00:50:01.310
PETER S. MAGNUSSON: Over the
last year, I've been on a

00:50:01.310 --> 00:50:05.130
number of panels and discussions
around the world

00:50:05.130 --> 00:50:08.610
where variations of this
topic comes up.

00:50:08.610 --> 00:50:11.550
And I've been on stage in
various combinations with

00:50:11.550 --> 00:50:14.490
pretty much all the other large
public cloud providers,

00:50:14.490 --> 00:50:16.160
all the names you've
all heard of.

00:50:16.160 --> 00:50:19.872
And there's a pretty strong
consensus in the industry--

00:50:19.872 --> 00:50:22.390
of at least us vendors--

00:50:22.390 --> 00:50:25.920
that we're seeing all of our
Enterprise customers adjusting

00:50:25.920 --> 00:50:28.630
to the absolute opposite
point of view.

00:50:28.630 --> 00:50:33.670
Which is that the enterprises
start trusting the public

00:50:33.670 --> 00:50:39.100
cloud provider to manage their
data more than their own

00:50:39.100 --> 00:50:41.970
capabilities of doing it,
simply because we

00:50:41.970 --> 00:50:43.280
live and die by this.

00:50:43.280 --> 00:50:48.300
I mean, Google fundamentally,
from the start, has had a huge

00:50:48.300 --> 00:50:52.160
element of handling privacy
implications, legal

00:50:52.160 --> 00:50:54.390
implications,
cross-jurisdictional issues

00:50:54.390 --> 00:50:57.030
about all the data that's in
Gmail, all the data that's in

00:50:57.030 --> 00:51:01.790
Docs, all the data that we're
crawling everywhere, all the

00:51:01.790 --> 00:51:03.830
various challenges we've had
with things like Street View,

00:51:03.830 --> 00:51:04.370
and so forth.

00:51:04.370 --> 00:51:09.860
So Google's DNA, from the ground
up, is totally even

00:51:09.860 --> 00:51:12.540
over-sensitized to
these issues.

00:51:12.540 --> 00:51:15.620
So actually, one of the
reasons we've had--

00:51:15.620 --> 00:51:17.390
maybe I even shouldn't say
this-- but one of the reasons

00:51:17.390 --> 00:51:19.335
we've been challenged with
adding more languages to App

00:51:19.335 --> 00:51:22.860
Engine, is precisely because of
internal security concerns.

00:51:22.860 --> 00:51:25.520
So we have so many layers of
approvals and review and

00:51:25.520 --> 00:51:28.480
audits and design commentary,
and so forth.

00:51:28.480 --> 00:51:30.040
And it's very difficult
for us.

00:51:30.040 --> 00:51:32.440
We can't just start building
shit and running it on our

00:51:32.440 --> 00:51:33.080
data centers.

00:51:33.080 --> 00:51:34.260
It's not allowed.

00:51:34.260 --> 00:51:37.210
It's a public fact that Google
has over 300 full-time

00:51:37.210 --> 00:51:39.410
engineers that all they
do is security.

00:51:39.410 --> 00:51:42.460
So whenever you read about the
various security breaches that

00:51:42.460 --> 00:51:45.060
happen to companies, you never
see it happening with the

00:51:45.060 --> 00:51:48.700
large public cloud providers,
because that is

00:51:48.700 --> 00:51:49.920
our bread and butter.

00:51:49.920 --> 00:51:53.250
But that said, as anybody who
actually knows things about

00:51:53.250 --> 00:51:56.290
security, there's no such thing
as the 100% guarantee.

00:51:56.290 --> 00:52:01.495
But this pervades all
of our activities

00:52:01.495 --> 00:52:03.340
and building services.

00:52:03.340 --> 00:52:05.380
And one of things I would say
to your boss's boss's boss's

00:52:05.380 --> 00:52:11.140
boss is that almost 50% of the
Fortune 100 companies' SEC

00:52:11.140 --> 00:52:13.610
filings are now done
on web filings,

00:52:13.610 --> 00:52:14.950
which runs on App Engine.

00:52:14.950 --> 00:52:18.970
So I've been on numerous
conference calls with CIOs of

00:52:18.970 --> 00:52:22.980
Fortune 100, and a couple of
CIOs from Fortune 10 companies

00:52:22.980 --> 00:52:24.970
and walked them through
these issues.

00:52:24.970 --> 00:52:27.530
And what tends to happen is
that there's push back.

00:52:27.530 --> 00:52:28.440
And they don't quite
understand it.

00:52:28.440 --> 00:52:33.220
Then they realize, OK, the
public cloud is, if anything,

00:52:33.220 --> 00:52:37.400
safer than running
it yourself.

00:52:37.400 --> 00:52:39.590
It's very, very difficult to
have high security yourself.

00:52:39.590 --> 00:52:41.000
It's a little bit like
driving versus

00:52:41.000 --> 00:52:42.100
flying commercial airlines.

00:52:42.100 --> 00:52:45.710
You think that you're safer
because you're in control.

00:52:45.710 --> 00:52:47.860
The reality is, that that
pilot's probably a better

00:52:47.860 --> 00:52:50.370
educated flyer than you are.

00:52:50.370 --> 00:52:52.050
Should we cut it right there?

00:52:52.050 --> 00:52:54.290
GREG D'ALESANDRE: Yeah,
we could do one more.

00:52:54.290 --> 00:52:54.680
[INAUDIBLE].

00:52:54.680 --> 00:52:56.350
PETER S. MAGNUSSON: One more?

00:52:56.350 --> 00:52:58.770
Let's look which one it
is before we do it.

00:52:58.770 --> 00:53:00.690
"Logs of the App Engine are
close to impossible to use.

00:53:00.690 --> 00:53:02.900
Are there plans to support
better search and browsing

00:53:02.900 --> 00:53:05.420
capabilities?" Oh my god, yes!

00:53:05.420 --> 00:53:07.690
GREG D'ALESANDRE:
Yes, exactly.

00:53:07.690 --> 00:53:09.684
Absolutely, without question.

00:53:09.684 --> 00:53:10.530
[APPLAUSE]

00:53:10.530 --> 00:53:12.600
PETER S. MAGNUSSON: Actually,
when I joined Google, this was

00:53:12.600 --> 00:53:13.750
one of the first things.

00:53:13.750 --> 00:53:16.520
I think after six weeks I said,
can we please add better

00:53:16.520 --> 00:53:18.570
logs processing systems?

00:53:18.570 --> 00:53:21.060
So yes, we are working
on a lot of stuff.

00:53:21.060 --> 00:53:24.790
And in fact, I think you're
going to see us leapfrog from

00:53:24.790 --> 00:53:27.470
one extreme of having
a pretty--

00:53:27.470 --> 00:53:29.050
yeah, I'm not going to use
derogatory words about our own

00:53:29.050 --> 00:53:31.550
product-- but challenging
environment for managing and

00:53:31.550 --> 00:53:34.670
searching and analyzing large
logs, to the other extreme,

00:53:34.670 --> 00:53:39.070
where we plan to have the best
logs management support system

00:53:39.070 --> 00:53:40.290
on the planet.

00:53:40.290 --> 00:53:41.700
You should expect Google
BigQuery to be

00:53:41.700 --> 00:53:43.710
a big part of that.

00:53:43.710 --> 00:53:44.810
Thank you very much,
everybody.

00:53:44.810 --> 00:53:46.590
[APPLAUSE]

00:53:46.590 --> 00:53:47.670
GREG D'ALESANDRE: Oh, yeah.

00:53:47.670 --> 00:53:49.540
Code Lab, when's Code Lab?

00:53:52.620 --> 00:53:55.470
There's a video of a Code Lab
showing how to get your App

00:53:55.470 --> 00:54:00.240
Engine logs into BigQuery, to
do analytics on your logs.

00:54:00.240 --> 00:54:01.920
That was a Code Lab that
happened earlier today.

