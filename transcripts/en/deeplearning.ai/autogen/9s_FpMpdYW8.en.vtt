WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.610
 
you've already seen most of the

00:00:01.610 --> 00:00:01.620
you've already seen most of the
 

00:00:01.620 --> 00:00:04.490
you've already seen most of the
components of object detection in this

00:00:04.490 --> 00:00:04.500
components of object detection in this
 

00:00:04.500 --> 00:00:06.289
components of object detection in this
video let's put all the components

00:00:06.289 --> 00:00:06.299
video let's put all the components
 

00:00:06.299 --> 00:00:09.709
video let's put all the components
together to form the Yolo object

00:00:09.709 --> 00:00:09.719
together to form the Yolo object
 

00:00:09.719 --> 00:00:11.660
together to form the Yolo object
detection algorithm first let's see how

00:00:11.660 --> 00:00:11.670
detection algorithm first let's see how
 

00:00:11.670 --> 00:00:14.480
detection algorithm first let's see how
you construct your training set suppose

00:00:14.480 --> 00:00:14.490
you construct your training set suppose
 

00:00:14.490 --> 00:00:15.860
you construct your training set suppose
you're trying to train an algorithm to

00:00:15.860 --> 00:00:15.870
you're trying to train an algorithm to
 

00:00:15.870 --> 00:00:18.109
you're trying to train an algorithm to
detect three objects pedestrians cars

00:00:18.109 --> 00:00:18.119
detect three objects pedestrians cars
 

00:00:18.119 --> 00:00:20.570
detect three objects pedestrians cars
and motorcycles and you will need to

00:00:20.570 --> 00:00:20.580
and motorcycles and you will need to
 

00:00:20.580 --> 00:00:22.160
and motorcycles and you will need to
explicitly have the full background

00:00:22.160 --> 00:00:22.170
explicitly have the full background
 

00:00:22.170 --> 00:00:25.519
explicitly have the full background
class so just v-class labels here if

00:00:25.519 --> 00:00:25.529
class so just v-class labels here if
 

00:00:25.529 --> 00:00:28.970
class so just v-class labels here if
you're using to anchor boxes then the

00:00:28.970 --> 00:00:28.980
you're using to anchor boxes then the
 

00:00:28.980 --> 00:00:31.910
you're using to anchor boxes then the
outputs Y will be 3 by 3 because you're

00:00:31.910 --> 00:00:31.920
outputs Y will be 3 by 3 because you're
 

00:00:31.920 --> 00:00:33.830
outputs Y will be 3 by 3 because you're
using a three by three prints l by 2

00:00:33.830 --> 00:00:33.840
using a three by three prints l by 2
 

00:00:33.840 --> 00:00:36.830
using a three by three prints l by 2
this is the number of anchors by 8

00:00:36.830 --> 00:00:36.840
this is the number of anchors by 8
 

00:00:36.840 --> 00:00:40.010
this is the number of anchors by 8
because that's the dimension of this 8

00:00:40.010 --> 00:00:40.020
because that's the dimension of this 8
 

00:00:40.020 --> 00:00:44.180
because that's the dimension of this 8
is actually 5 which is and then plus the

00:00:44.180 --> 00:00:44.190
is actually 5 which is and then plus the
 

00:00:44.190 --> 00:00:47.240
is actually 5 which is and then plus the
number of classes so 5 because you have

00:00:47.240 --> 00:00:47.250
number of classes so 5 because you have
 

00:00:47.250 --> 00:00:50.060
number of classes so 5 because you have
PC and in the bounding boxes that's 5

00:00:50.060 --> 00:00:50.070
PC and in the bounding boxes that's 5
 

00:00:50.070 --> 00:00:54.500
PC and in the bounding boxes that's 5
and then C 1 C 2 C 3 that dimension is

00:00:54.500 --> 00:00:54.510
and then C 1 C 2 C 3 that dimension is
 

00:00:54.510 --> 00:00:56.779
and then C 1 C 2 C 3 that dimension is
equal to the number of classes and you

00:00:56.779 --> 00:00:56.789
equal to the number of classes and you
 

00:00:56.789 --> 00:00:59.150
equal to the number of classes and you
can either view this as 3 by 3 by 2 by 8

00:00:59.150 --> 00:00:59.160
can either view this as 3 by 3 by 2 by 8
 

00:00:59.160 --> 00:01:04.670
can either view this as 3 by 3 by 2 by 8
or 3 by 3 by 16 so to construct the

00:01:04.670 --> 00:01:04.680
or 3 by 3 by 16 so to construct the
 

00:01:04.680 --> 00:01:06.679
or 3 by 3 by 16 so to construct the
training set you go through each of

00:01:06.679 --> 00:01:06.689
training set you go through each of
 

00:01:06.689 --> 00:01:08.870
training set you go through each of
these 9 grid cells and form the

00:01:08.870 --> 00:01:08.880
these 9 grid cells and form the
 

00:01:08.880 --> 00:01:11.929
these 9 grid cells and form the
appropriate target vector Y so take this

00:01:11.929 --> 00:01:11.939
appropriate target vector Y so take this
 

00:01:11.939 --> 00:01:14.390
appropriate target vector Y so take this
first print cell there's nothing worth

00:01:14.390 --> 00:01:14.400
first print cell there's nothing worth
 

00:01:14.400 --> 00:01:16.940
first print cell there's nothing worth
detecting in that grid cell none of the

00:01:16.940 --> 00:01:16.950
detecting in that grid cell none of the
 

00:01:16.950 --> 00:01:18.789
detecting in that grid cell none of the
three causes pedestrian car motorcycle

00:01:18.789 --> 00:01:18.799
three causes pedestrian car motorcycle
 

00:01:18.799 --> 00:01:21.410
three causes pedestrian car motorcycle
appear in the upper left grid cell and

00:01:21.410 --> 00:01:21.420
appear in the upper left grid cell and
 

00:01:21.420 --> 00:01:25.219
appear in the upper left grid cell and
so the target y corresponding to that

00:01:25.219 --> 00:01:25.229
so the target y corresponding to that
 

00:01:25.229 --> 00:01:29.600
so the target y corresponding to that
grid cell will be equal to this where PC

00:01:29.600 --> 00:01:29.610
grid cell will be equal to this where PC
 

00:01:29.610 --> 00:01:32.120
grid cell will be equal to this where PC
for the first anchor box is 0 because

00:01:32.120 --> 00:01:32.130
for the first anchor box is 0 because
 

00:01:32.130 --> 00:01:33.469
for the first anchor box is 0 because
there's nothing associated the first

00:01:33.469 --> 00:01:33.479
there's nothing associated the first
 

00:01:33.479 --> 00:01:36.590
there's nothing associated the first
hanger box and is also 0 for the second

00:01:36.590 --> 00:01:36.600
hanger box and is also 0 for the second
 

00:01:36.600 --> 00:01:39.560
hanger box and is also 0 for the second
actor box and so all of these are the

00:01:39.560 --> 00:01:39.570
actor box and so all of these are the
 

00:01:39.570 --> 00:01:43.160
actor box and so all of these are the
values are don't cares now most of the

00:01:43.160 --> 00:01:43.170
values are don't cares now most of the
 

00:01:43.170 --> 00:01:46.039
values are don't cares now most of the
grid cells have nothing in them but for

00:01:46.039 --> 00:01:46.049
grid cells have nothing in them but for
 

00:01:46.049 --> 00:01:49.249
grid cells have nothing in them but for
that box over there you would have this

00:01:49.249 --> 00:01:49.259
that box over there you would have this
 

00:01:49.259 --> 00:01:54.649
that box over there you would have this
target vector Y so assuming that your

00:01:54.649 --> 00:01:54.659
target vector Y so assuming that your
 

00:01:54.659 --> 00:01:57.859
target vector Y so assuming that your
training set has a bounding box like

00:01:57.859 --> 00:01:57.869
training set has a bounding box like
 

00:01:57.869 --> 00:01:59.359
training set has a bounding box like
this for the car it's just a little bit

00:01:59.359 --> 00:01:59.369
this for the car it's just a little bit
 

00:01:59.369 --> 00:02:02.510
this for the car it's just a little bit
wider than it is tall and so if your

00:02:02.510 --> 00:02:02.520
wider than it is tall and so if your
 

00:02:02.520 --> 00:02:04.789
wider than it is tall and so if your
anchor boxes are that this is a good box

00:02:04.789 --> 00:02:04.799
anchor boxes are that this is a good box
 

00:02:04.799 --> 00:02:08.270
anchor boxes are that this is a good box
1 this is anchor box 2 then the red box

00:02:08.270 --> 00:02:08.280
1 this is anchor box 2 then the red box
 

00:02:08.280 --> 00:02:11.360
1 this is anchor box 2 then the red box
has just slightly higher iou with anchor

00:02:11.360 --> 00:02:11.370
has just slightly higher iou with anchor
 

00:02:11.370 --> 00:02:12.720
has just slightly higher iou with anchor
box 2

00:02:12.720 --> 00:02:12.730
box 2
 

00:02:12.730 --> 00:02:14.850
box 2
so the car gets associated with this

00:02:14.850 --> 00:02:14.860
so the car gets associated with this
 

00:02:14.860 --> 00:02:18.180
so the car gets associated with this
lower portion of the vector so notice

00:02:18.180 --> 00:02:18.190
lower portion of the vector so notice
 

00:02:18.190 --> 00:02:21.780
lower portion of the vector so notice
then that PC associative Xbox one is

00:02:21.780 --> 00:02:21.790
then that PC associative Xbox one is
 

00:02:21.790 --> 00:02:23.850
then that PC associative Xbox one is
zero so you have don't care as for all

00:02:23.850 --> 00:02:23.860
zero so you have don't care as for all
 

00:02:23.860 --> 00:02:25.860
zero so you have don't care as for all
of these components then you have this

00:02:25.860 --> 00:02:25.870
of these components then you have this
 

00:02:25.870 --> 00:02:28.800
of these components then you have this
PC is equal to one then you should use

00:02:28.800 --> 00:02:28.810
PC is equal to one then you should use
 

00:02:28.810 --> 00:02:32.309
PC is equal to one then you should use
these to specify the position of the red

00:02:32.309 --> 00:02:32.319
these to specify the position of the red
 

00:02:32.319 --> 00:02:36.300
these to specify the position of the red
bounding box and then specify that the

00:02:36.300 --> 00:02:36.310
bounding box and then specify that the
 

00:02:36.310 --> 00:02:40.020
bounding box and then specify that the
correct object is crossed to right that

00:02:40.020 --> 00:02:40.030
correct object is crossed to right that
 

00:02:40.030 --> 00:02:43.110
correct object is crossed to right that
it is a car so you go through this and

00:02:43.110 --> 00:02:43.120
it is a car so you go through this and
 

00:02:43.120 --> 00:02:45.479
it is a car so you go through this and
for each of your nine grid positions for

00:02:45.479 --> 00:02:45.489
for each of your nine grid positions for
 

00:02:45.489 --> 00:02:46.559
for each of your nine grid positions for
each of your three by three grid

00:02:46.559 --> 00:02:46.569
each of your three by three grid
 

00:02:46.569 --> 00:02:49.170
each of your three by three grid
positions you will come up with a vector

00:02:49.170 --> 00:02:49.180
positions you will come up with a vector
 

00:02:49.180 --> 00:02:51.479
positions you will come up with a vector
like this come up with a 16 dimensional

00:02:51.479 --> 00:02:51.489
like this come up with a 16 dimensional
 

00:02:51.489 --> 00:02:53.819
like this come up with a 16 dimensional
vector and so that's why the final

00:02:53.819 --> 00:02:53.829
vector and so that's why the final
 

00:02:53.829 --> 00:02:57.949
vector and so that's why the final
output volume is going to be 3 by 3 by

00:02:57.949 --> 00:02:57.959
output volume is going to be 3 by 3 by
 

00:02:57.959 --> 00:03:02.069
output volume is going to be 3 by 3 by
16 oh and as usual for simplicity on

00:03:02.069 --> 00:03:02.079
16 oh and as usual for simplicity on
 

00:03:02.079 --> 00:03:03.660
16 oh and as usual for simplicity on
this slide I've used a three by three

00:03:03.660 --> 00:03:03.670
this slide I've used a three by three
 

00:03:03.670 --> 00:03:06.059
this slide I've used a three by three
grid in practice it might be more like a

00:03:06.059 --> 00:03:06.069
grid in practice it might be more like a
 

00:03:06.069 --> 00:03:10.530
grid in practice it might be more like a
19 by 19 by 16 or in fact if you used

00:03:10.530 --> 00:03:10.540
19 by 19 by 16 or in fact if you used
 

00:03:10.540 --> 00:03:15.150
19 by 19 by 16 or in fact if you used
more anchor boxes maybe 19 by 19 by 5

00:03:15.150 --> 00:03:15.160
more anchor boxes maybe 19 by 19 by 5
 

00:03:15.160 --> 00:03:18.150
more anchor boxes maybe 19 by 19 by 5
times 8 is 5 times 8 is 40 so being 19

00:03:18.150 --> 00:03:18.160
times 8 is 5 times 8 is 40 so being 19
 

00:03:18.160 --> 00:03:22.319
times 8 is 5 times 8 is 40 so being 19
by 19 by 40 that's if you use 5 anchor

00:03:22.319 --> 00:03:22.329
by 19 by 40 that's if you use 5 anchor
 

00:03:22.329 --> 00:03:26.190
by 19 by 40 that's if you use 5 anchor
boxes so that's training and you train a

00:03:26.190 --> 00:03:26.200
boxes so that's training and you train a
 

00:03:26.200 --> 00:03:31.050
boxes so that's training and you train a
confident that inputs an image maybe 100

00:03:31.050 --> 00:03:31.060
confident that inputs an image maybe 100
 

00:03:31.060 --> 00:03:34.860
confident that inputs an image maybe 100
by 100 by 3 and your confident would

00:03:34.860 --> 00:03:34.870
by 100 by 3 and your confident would
 

00:03:34.870 --> 00:03:38.069
by 100 by 3 and your confident would
then finally output this output volume

00:03:38.069 --> 00:03:38.079
then finally output this output volume
 

00:03:38.079 --> 00:03:42.390
then finally output this output volume
in our example 3 by 3 by 16 or 3 by 3 by

00:03:42.390 --> 00:03:42.400
in our example 3 by 3 by 16 or 3 by 3 by
 

00:03:42.400 --> 00:03:45.089
in our example 3 by 3 by 16 or 3 by 3 by
2 by 8 next let's look at how your

00:03:45.089 --> 00:03:45.099
2 by 8 next let's look at how your
 

00:03:45.099 --> 00:03:48.150
2 by 8 next let's look at how your
algorithm can make predictions given an

00:03:48.150 --> 00:03:48.160
algorithm can make predictions given an
 

00:03:48.160 --> 00:03:50.580
algorithm can make predictions given an
image your neural network will output

00:03:50.580 --> 00:03:50.590
image your neural network will output
 

00:03:50.590 --> 00:03:53.819
image your neural network will output
this 3 by 3 by 2 by 8 volume where for

00:03:53.819 --> 00:03:53.829
this 3 by 3 by 2 by 8 volume where for
 

00:03:53.829 --> 00:03:55.770
this 3 by 3 by 2 by 8 volume where for
each of the nine current cells you get a

00:03:55.770 --> 00:03:55.780
each of the nine current cells you get a
 

00:03:55.780 --> 00:03:59.009
each of the nine current cells you get a
vector like that so for the grid cell

00:03:59.009 --> 00:03:59.019
vector like that so for the grid cell
 

00:03:59.019 --> 00:04:01.680
vector like that so for the grid cell
here on the upper left if there's no

00:04:01.680 --> 00:04:01.690
here on the upper left if there's no
 

00:04:01.690 --> 00:04:04.199
here on the upper left if there's no
object there hopefully your neural

00:04:04.199 --> 00:04:04.209
object there hopefully your neural
 

00:04:04.209 --> 00:04:06.869
object there hopefully your neural
network or I'll put 0 here and 0 here

00:04:06.869 --> 00:04:06.879
network or I'll put 0 here and 0 here
 

00:04:06.879 --> 00:04:08.849
network or I'll put 0 here and 0 here
and then I'll put some of the values

00:04:08.849 --> 00:04:08.859
and then I'll put some of the values
 

00:04:08.859 --> 00:04:10.710
and then I'll put some of the values
your new network and I'll put a question

00:04:10.710 --> 00:04:10.720
your new network and I'll put a question
 

00:04:10.720 --> 00:04:13.170
your new network and I'll put a question
mark an output it don't care so I'll put

00:04:13.170 --> 00:04:13.180
mark an output it don't care so I'll put
 

00:04:13.180 --> 00:04:15.509
mark an output it don't care so I'll put
some numbers for the rest but these

00:04:15.509 --> 00:04:15.519
some numbers for the rest but these
 

00:04:15.519 --> 00:04:17.310
some numbers for the rest but these
numbers will basically ignore because

00:04:17.310 --> 00:04:17.320
numbers will basically ignore because
 

00:04:17.320 --> 00:04:19.080
numbers will basically ignore because
the neural network is telling you that

00:04:19.080 --> 00:04:19.090
the neural network is telling you that
 

00:04:19.090 --> 00:04:21.120
the neural network is telling you that
there's no object there so it doesn't

00:04:21.120 --> 00:04:21.130
there's no object there so it doesn't
 

00:04:21.130 --> 00:04:22.830
there's no object there so it doesn't
really matter whether it outputs is a

00:04:22.830 --> 00:04:22.840
really matter whether it outputs is a
 

00:04:22.840 --> 00:04:24.570
really matter whether it outputs is a
bound the involved Sosuke also basically

00:04:24.570 --> 00:04:24.580
bound the involved Sosuke also basically
 

00:04:24.580 --> 00:04:25.490
bound the involved Sosuke also basically
be just be

00:04:25.490 --> 00:04:25.500
be just be
 

00:04:25.500 --> 00:04:27.290
be just be
some said the numbers are more less

00:04:27.290 --> 00:04:27.300
some said the numbers are more less
 

00:04:27.300 --> 00:04:30.940
some said the numbers are more less
noise in contrast for this box over here

00:04:30.940 --> 00:04:30.950
noise in contrast for this box over here
 

00:04:30.950 --> 00:04:34.670
noise in contrast for this box over here
hopefully the value of y2 the output for

00:04:34.670 --> 00:04:34.680
hopefully the value of y2 the output for
 

00:04:34.680 --> 00:04:38.030
hopefully the value of y2 the output for
that box at the bottom left hopefully

00:04:38.030 --> 00:04:38.040
that box at the bottom left hopefully
 

00:04:38.040 --> 00:04:40.340
that box at the bottom left hopefully
would be something like 0 4 bounding box

00:04:40.340 --> 00:04:40.350
would be something like 0 4 bounding box
 

00:04:40.350 --> 00:04:42.080
would be something like 0 4 bounding box
1 and then you know just up with a bunch

00:04:42.080 --> 00:04:42.090
1 and then you know just up with a bunch
 

00:04:42.090 --> 00:04:44.810
1 and then you know just up with a bunch
of numbers just noise hopefully your

00:04:44.810 --> 00:04:44.820
of numbers just noise hopefully your
 

00:04:44.820 --> 00:04:47.840
of numbers just noise hopefully your
also output a certain numbers that

00:04:47.840 --> 00:04:47.850
also output a certain numbers that
 

00:04:47.850 --> 00:04:50.750
also output a certain numbers that
corresponds to specifying a pretty

00:04:50.750 --> 00:04:50.760
corresponds to specifying a pretty
 

00:04:50.760 --> 00:04:53.300
corresponds to specifying a pretty
accurate bounding box for the car so

00:04:53.300 --> 00:04:53.310
accurate bounding box for the car so
 

00:04:53.310 --> 00:04:54.950
accurate bounding box for the car so
that's how the neural network will make

00:04:54.950 --> 00:04:54.960
that's how the neural network will make
 

00:04:54.960 --> 00:04:58.220
that's how the neural network will make
predictions finally you would run this

00:04:58.220 --> 00:04:58.230
predictions finally you would run this
 

00:04:58.230 --> 00:05:01.580
predictions finally you would run this
through non max suppression so just to

00:05:01.580 --> 00:05:01.590
through non max suppression so just to
 

00:05:01.590 --> 00:05:03.080
through non max suppression so just to
make it interesting let's look at a new

00:05:03.080 --> 00:05:03.090
make it interesting let's look at a new
 

00:05:03.090 --> 00:05:06.409
make it interesting let's look at a new
test set image here's how you run nan

00:05:06.409 --> 00:05:06.419
test set image here's how you run nan
 

00:05:06.419 --> 00:05:09.350
test set image here's how you run nan
next suppression if you're using to

00:05:09.350 --> 00:05:09.360
next suppression if you're using to
 

00:05:09.360 --> 00:05:11.930
next suppression if you're using to
anchor boxes then for each of the nine

00:05:11.930 --> 00:05:11.940
anchor boxes then for each of the nine
 

00:05:11.940 --> 00:05:14.090
anchor boxes then for each of the nine
grid cells you get two predicted

00:05:14.090 --> 00:05:14.100
grid cells you get two predicted
 

00:05:14.100 --> 00:05:16.190
grid cells you get two predicted
bounding boxes some of them will have

00:05:16.190 --> 00:05:16.200
bounding boxes some of them will have
 

00:05:16.200 --> 00:05:20.210
bounding boxes some of them will have
very low probability very low PC but you

00:05:20.210 --> 00:05:20.220
very low probability very low PC but you
 

00:05:20.220 --> 00:05:22.340
very low probability very low PC but you
still get two predicted bounding boxes

00:05:22.340 --> 00:05:22.350
still get two predicted bounding boxes
 

00:05:22.350 --> 00:05:24.409
still get two predicted bounding boxes
for each of the nine treated cells so

00:05:24.409 --> 00:05:24.419
for each of the nine treated cells so
 

00:05:24.419 --> 00:05:26.360
for each of the nine treated cells so
let's say those are the bounding boxes

00:05:26.360 --> 00:05:26.370
let's say those are the bounding boxes
 

00:05:26.370 --> 00:05:28.730
let's say those are the bounding boxes
you get and notice that some of the

00:05:28.730 --> 00:05:28.740
you get and notice that some of the
 

00:05:28.740 --> 00:05:32.000
you get and notice that some of the
bounding boxes can go outside the height

00:05:32.000 --> 00:05:32.010
bounding boxes can go outside the height
 

00:05:32.010 --> 00:05:34.070
bounding boxes can go outside the height
and width of the grid cell then it came

00:05:34.070 --> 00:05:34.080
and width of the grid cell then it came
 

00:05:34.080 --> 00:05:37.280
and width of the grid cell then it came
from NYX you then get rid of the low

00:05:37.280 --> 00:05:37.290
from NYX you then get rid of the low
 

00:05:37.290 --> 00:05:39.500
from NYX you then get rid of the low
probability predictions so get rid of

00:05:39.500 --> 00:05:39.510
probability predictions so get rid of
 

00:05:39.510 --> 00:05:41.450
probability predictions so get rid of
the ones that even a neural network says

00:05:41.450 --> 00:05:41.460
the ones that even a neural network says
 

00:05:41.460 --> 00:05:44.360
the ones that even a neural network says
gee this object probably is in there so

00:05:44.360 --> 00:05:44.370
gee this object probably is in there so
 

00:05:44.370 --> 00:05:47.360
gee this object probably is in there so
you get rid of those and then finally if

00:05:47.360 --> 00:05:47.370
you get rid of those and then finally if
 

00:05:47.370 --> 00:05:49.550
you get rid of those and then finally if
you have three classes you're trying to

00:05:49.550 --> 00:05:49.560
you have three classes you're trying to
 

00:05:49.560 --> 00:05:52.430
you have three classes you're trying to
detect trying to detect pedestrians cars

00:05:52.430 --> 00:05:52.440
detect trying to detect pedestrians cars
 

00:05:52.440 --> 00:05:55.010
detect trying to detect pedestrians cars
and motorcycles what you do is for each

00:05:55.010 --> 00:05:55.020
and motorcycles what you do is for each
 

00:05:55.020 --> 00:05:58.010
and motorcycles what you do is for each
of the three classes independently run

00:05:58.010 --> 00:05:58.020
of the three classes independently run
 

00:05:58.020 --> 00:06:00.560
of the three classes independently run
non-mac suppression for the objects that

00:06:00.560 --> 00:06:00.570
non-mac suppression for the objects that
 

00:06:00.570 --> 00:06:02.090
non-mac suppression for the objects that
were predicted to come from that class

00:06:02.090 --> 00:06:02.100
were predicted to come from that class
 

00:06:02.100 --> 00:06:05.300
were predicted to come from that class
but use non-mac suppression for that for

00:06:05.300 --> 00:06:05.310
but use non-mac suppression for that for
 

00:06:05.310 --> 00:06:07.130
but use non-mac suppression for that for
predictions of the pedestrian the class

00:06:07.130 --> 00:06:07.140
predictions of the pedestrian the class
 

00:06:07.140 --> 00:06:09.469
predictions of the pedestrian the class
for a non-expert suppression for the car

00:06:09.469 --> 00:06:09.479
for a non-expert suppression for the car
 

00:06:09.479 --> 00:06:11.450
for a non-expert suppression for the car
cross and run on Mac suppression for the

00:06:11.450 --> 00:06:11.460
cross and run on Mac suppression for the
 

00:06:11.460 --> 00:06:14.330
cross and run on Mac suppression for the
motorcycle cause but run that University

00:06:14.330 --> 00:06:14.340
motorcycle cause but run that University
 

00:06:14.340 --> 00:06:16.610
motorcycle cause but run that University
three times to generate the final

00:06:16.610 --> 00:06:16.620
three times to generate the final
 

00:06:16.620 --> 00:06:19.550
three times to generate the final
predictions and so the output of this is

00:06:19.550 --> 00:06:19.560
predictions and so the output of this is
 

00:06:19.560 --> 00:06:21.530
predictions and so the output of this is
hopefully that you will have detected

00:06:21.530 --> 00:06:21.540
hopefully that you will have detected
 

00:06:21.540 --> 00:06:24.110
hopefully that you will have detected
all the cause and all the pedestrians in

00:06:24.110 --> 00:06:24.120
all the cause and all the pedestrians in
 

00:06:24.120 --> 00:06:27.560
all the cause and all the pedestrians in
this image so that's it for the yellow

00:06:27.560 --> 00:06:27.570
this image so that's it for the yellow
 

00:06:27.570 --> 00:06:29.510
this image so that's it for the yellow
object detection algorithm which is

00:06:29.510 --> 00:06:29.520
object detection algorithm which is
 

00:06:29.520 --> 00:06:31.850
object detection algorithm which is
really one of the most effective object

00:06:31.850 --> 00:06:31.860
really one of the most effective object
 

00:06:31.860 --> 00:06:33.469
really one of the most effective object
detection algorithms that also

00:06:33.469 --> 00:06:33.479
detection algorithms that also
 

00:06:33.479 --> 00:06:35.750
detection algorithms that also
encompasses many of the best ideas

00:06:35.750 --> 00:06:35.760
encompasses many of the best ideas
 

00:06:35.760 --> 00:06:37.520
encompasses many of the best ideas
across the entire computer vision

00:06:37.520 --> 00:06:37.530
across the entire computer vision
 

00:06:37.530 --> 00:06:39.360
across the entire computer vision
literature that remain

00:06:39.360 --> 00:06:39.370
literature that remain
 

00:06:39.370 --> 00:06:42.270
literature that remain
to object detection and you get a chance

00:06:42.270 --> 00:06:42.280
to object detection and you get a chance
 

00:06:42.280 --> 00:06:45.000
to object detection and you get a chance
to practice implementing many components

00:06:45.000 --> 00:06:45.010
to practice implementing many components
 

00:06:45.010 --> 00:06:46.830
to practice implementing many components
of this yourself in this week's program

00:06:46.830 --> 00:06:46.840
of this yourself in this week's program
 

00:06:46.840 --> 00:06:49.830
of this yourself in this week's program
exercise so I hope you enjoy this week's

00:06:49.830 --> 00:06:49.840
exercise so I hope you enjoy this week's
 

00:06:49.840 --> 00:06:52.650
exercise so I hope you enjoy this week's
from exercise there's also an optional

00:06:52.650 --> 00:06:52.660
from exercise there's also an optional
 

00:06:52.660 --> 00:06:54.360
from exercise there's also an optional
video that follows this one which you

00:06:54.360 --> 00:06:54.370
video that follows this one which you
 

00:06:54.370 --> 00:06:56.280
video that follows this one which you
can either watch or not watch as you

00:06:56.280 --> 00:06:56.290
can either watch or not watch as you
 

00:06:56.290 --> 00:06:58.770
can either watch or not watch as you
please but either way I also look

00:06:58.770 --> 00:06:58.780
please but either way I also look
 

00:06:58.780 --> 00:07:02.520
please but either way I also look
forward to seeing you next week

