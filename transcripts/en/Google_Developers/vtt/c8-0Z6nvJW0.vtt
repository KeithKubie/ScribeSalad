WEBVTT
Kind: captions
Language: en

00:00:03.210 --> 00:00:04.700
MALE SPEAKER: I
think it's running.

00:00:04.700 --> 00:00:06.510
So welcome back to Devoxx.

00:00:06.510 --> 00:00:10.462
We're here to talk about
more Android with Nicolas.

00:00:10.462 --> 00:00:11.170
Welcome, Nicolas.

00:00:11.170 --> 00:00:12.564
NICOLAS ROARD: Thanks.

00:00:12.564 --> 00:00:13.980
MALE SPEAKER:
Nicolas, here you're

00:00:13.980 --> 00:00:20.220
talking about effective image
manipulation on Android.

00:00:20.220 --> 00:00:22.630
So obviously, Android is
a constrained environment,

00:00:22.630 --> 00:00:25.820
because it's a
mobile environment.

00:00:25.820 --> 00:00:27.500
What are the options
for developers

00:00:27.500 --> 00:00:29.849
that they can use when
it comes to images?

00:00:29.849 --> 00:00:31.640
NICOLAS ROARD: So there
are various options

00:00:31.640 --> 00:00:33.990
that you can use
in your program.

00:00:33.990 --> 00:00:37.940
The common ones are
probably OpenGL and native.

00:00:37.940 --> 00:00:40.360
And those two actually
have a lot of issues

00:00:40.360 --> 00:00:43.850
and a lot of constraints
that you have to deal with.

00:00:43.850 --> 00:00:48.410
One of the recent
possibilities for Android

00:00:48.410 --> 00:00:51.430
is Render Script, which is a
new framework, a new [INAUDIBLE]

00:00:51.430 --> 00:00:54.700
for processing images that has
a lot of advantages compared

00:00:54.700 --> 00:00:56.416
to those two other solutions.

00:00:56.416 --> 00:00:58.040
MALE SPEAKER: OK, so
we'll get to that,

00:00:58.040 --> 00:01:00.380
and to your experience.

00:01:00.380 --> 00:01:03.770
Anything against OpenGL
specifically, or native?

00:01:03.770 --> 00:01:05.179
I mean, what are
the shortcomings

00:01:05.179 --> 00:01:06.470
before we get to Render Script?

00:01:06.470 --> 00:01:09.020
NICOLAS ROARD: No,
nothing particularly.

00:01:09.020 --> 00:01:13.532
The only thing is
that I guess native--

00:01:13.532 --> 00:01:15.240
by native, what I mean
is that you simply

00:01:15.240 --> 00:01:17.010
pass a bitmap to the native it.

00:01:17.010 --> 00:01:17.730
You process it.

00:01:17.730 --> 00:01:18.896
It's pretty easy to process.

00:01:18.896 --> 00:01:22.670
The problem is that if
you want to optimize,

00:01:22.670 --> 00:01:28.120
you're going to have to
optimize for particular devices.

00:01:28.120 --> 00:01:31.120
It's going to be difficult
to optimize for everything.

00:01:31.120 --> 00:01:34.400
And compared to OpenGL,
it's a bit slower.

00:01:34.400 --> 00:01:36.763
You also have to deal with
memory, et cetera, et cetera.

00:01:36.763 --> 00:01:37.550
MALE SPEAKER: Oh,
back to native.

00:01:37.550 --> 00:01:38.240
NICOLAS ROARD: All the
problems with native, right?

00:01:38.240 --> 00:01:40.390
With some advantages,
some inconvenience.

00:01:40.390 --> 00:01:44.280
OpenGL, the good thing is
that it should be fast.

00:01:44.280 --> 00:01:47.120
The bad thing is well,
[INAUDIBLE] OpenGL

00:01:47.120 --> 00:01:52.020
depends a lot on
drivers and some GPUs

00:01:52.020 --> 00:01:53.450
appears better than others.

00:01:53.450 --> 00:01:54.320
MALE SPEAKER: OK.

00:01:54.320 --> 00:01:56.220
NICOLAS ROARD:
And some GPUs have

00:01:56.220 --> 00:01:57.720
constraints that
others do not have.

00:01:57.720 --> 00:02:00.380
You have like a maximum size of
textures and stuff like that.

00:02:00.380 --> 00:02:01.379
MALE SPEAKER: Right, OK.

00:02:03.397 --> 00:02:05.730
So you're talking about this
because you have experience

00:02:05.730 --> 00:02:08.680
with this, and you've
been building--

00:02:08.680 --> 00:02:11.140
NICOLAS ROARD: I've been
working this past year basically

00:02:11.140 --> 00:02:14.670
on the new photo
editing touring gallery.

00:02:14.670 --> 00:02:15.554
MALE SPEAKER: Yes.

00:02:15.554 --> 00:02:17.220
NICOLAS ROARD: Where
we actually started

00:02:17.220 --> 00:02:21.250
the first version really is,
back last November, last year,

00:02:21.250 --> 00:02:24.801
was mostly using
native processing.

00:02:24.801 --> 00:02:27.092
We're just passing the bitmaps
through the native side,

00:02:27.092 --> 00:02:29.270
doing something in
C, and that's it.

00:02:29.270 --> 00:02:34.320
But since then, we moved a
lot more to [INAUDIBLE] Script

00:02:34.320 --> 00:02:37.440
and for quite a few reasons.

00:02:37.440 --> 00:02:41.030
The big difference
for us is that we

00:02:41.030 --> 00:02:44.820
want the software to run on
as many devices as possible.

00:02:44.820 --> 00:02:46.135
MALE SPEAKER: Of course, yeah.

00:02:46.135 --> 00:02:47.760
NICOLAS ROARD: It
gets difficult if you

00:02:47.760 --> 00:02:51.540
have to test and be 100%
sure that your code, OpenGL,

00:02:51.540 --> 00:02:53.510
for instance, is going
to work everywhere.

00:02:53.510 --> 00:02:55.530
So that's why we originally
went with native.

00:02:55.530 --> 00:02:58.030
Even if it's not
as fast as OpenGL,

00:02:58.030 --> 00:03:00.050
it's a more tractable
problem to be sure

00:03:00.050 --> 00:03:02.260
that everything would work well.

00:03:02.260 --> 00:03:05.180
But if we want to
make it faster to have

00:03:05.180 --> 00:03:08.891
really good interactive
speed, then OpenGL

00:03:08.891 --> 00:03:10.140
starts to look more appealing.

00:03:10.140 --> 00:03:11.885
But then you end up
with all those issues

00:03:11.885 --> 00:03:14.450
with compatibility,
and et cetera.

00:03:14.450 --> 00:03:16.480
Render Script, on
the other hand,

00:03:16.480 --> 00:03:18.920
has quite a few nice advantages.

00:03:18.920 --> 00:03:22.700
One of the advantages is that
it's a specific language that

00:03:22.700 --> 00:03:26.150
actually looks-- It's
basically C99 with vector

00:03:26.150 --> 00:03:28.020
extensions, which
means that it's

00:03:28.020 --> 00:03:32.156
both a good language for
image processing because

00:03:32.156 --> 00:03:33.280
of those vector extensions.

00:03:33.280 --> 00:03:35.200
So you can actually
write a version that

00:03:35.200 --> 00:03:39.350
are cleaner and simpler
and make a lot more sense.

00:03:39.350 --> 00:03:41.820
And at the same time,
it's not particularly

00:03:41.820 --> 00:03:45.150
different than a [INAUDIBLE]
or that C. It's C99.

00:03:45.150 --> 00:03:50.400
You basically use it as a VM
the compiler to generate that.

00:03:50.400 --> 00:03:52.200
And then with the
detect the scripts

00:03:52.200 --> 00:03:56.450
and execute it through VM,
do a bunch of optimization,

00:03:56.450 --> 00:03:59.650
and more importantly, execute
all of that in parallel.

00:03:59.650 --> 00:04:03.900
So in terms of
performances, what

00:04:03.900 --> 00:04:06.310
you get is something that
is completely paralyzed,

00:04:06.310 --> 00:04:08.400
that really takes
advantage of all the calls

00:04:08.400 --> 00:04:10.940
on your device, which is
pretty important to us.

00:04:10.940 --> 00:04:11.390
MALE SPEAKER: How about the GPU?

00:04:11.390 --> 00:04:12.520
Can we use the GPU as well?

00:04:12.520 --> 00:04:14.895
NICOLAS ROARD: And that's one
of the big thing this year,

00:04:14.895 --> 00:04:19.410
is that we now support GPU
drivers for Render Script.

00:04:19.410 --> 00:04:22.460
So on all the Nexus devices,
we do have GPU drivers.

00:04:22.460 --> 00:04:23.070
MALE SPEAKER: But
what does it mean?

00:04:23.070 --> 00:04:25.210
Do you get to choose as a
developer if it runs on one

00:04:25.210 --> 00:04:26.750
of the other, what's
available, what's--

00:04:26.750 --> 00:04:28.950
NICOLAS ROARD: So you can
either choose or not choose.

00:04:28.950 --> 00:04:30.408
I mean, you have
the option, right?

00:04:30.408 --> 00:04:32.190
So if you don't do
anything, Render Script

00:04:32.190 --> 00:04:35.760
will just say I'm going to run
on the fastest possible thing.

00:04:35.760 --> 00:04:37.420
You can also specify,
hey, I'm going

00:04:37.420 --> 00:04:40.410
to run on the CPU,
which sometimes

00:04:40.410 --> 00:04:43.980
is a really good thing to do
because the CPU is a lot more

00:04:43.980 --> 00:04:46.410
predictable than the GPU.

00:04:46.410 --> 00:04:48.540
So depending on what you
do, that might be better.

00:04:48.540 --> 00:04:49.890
MALE SPEAKER: OK, interesting.

00:04:49.890 --> 00:04:52.430
So just so people have an
idea of the work you've done,

00:04:52.430 --> 00:04:54.860
this is the gallery, the
editor in the gallery.

00:04:54.860 --> 00:04:58.046
There's a video online
available so people--

00:04:58.046 --> 00:04:58.840
NICOLAS ROARD: Yes.

00:04:58.840 --> 00:05:02.370
We posted it online and there's
some reviews this past week

00:05:02.370 --> 00:05:03.477
about it.

00:05:03.477 --> 00:05:04.560
So that's the [INAUDIBLE].

00:05:04.560 --> 00:05:06.650
MALE SPEAKER: And you're doing
some pretty heavy lifting

00:05:06.650 --> 00:05:07.149
with this.

00:05:07.149 --> 00:05:09.670
It's not just adding
a simple filter

00:05:09.670 --> 00:05:11.060
and being done with it, right?

00:05:11.060 --> 00:05:13.330
NICOLAS ROARD: And I think
it's a good example of what

00:05:13.330 --> 00:05:14.260
kind of script is there.

00:05:14.260 --> 00:05:14.890
You can use it.

00:05:14.890 --> 00:05:15.390
It works.

00:05:15.390 --> 00:05:17.050
It's fast.

00:05:17.050 --> 00:05:19.420
MALE SPEAKER: So give us
examples of, I don't know,

00:05:19.420 --> 00:05:22.480
the type of transformation it's
doing, or work you're doing,

00:05:22.480 --> 00:05:26.347
and the size of the image
maybe you're able to work with.

00:05:26.347 --> 00:05:27.180
NICOLAS ROARD: Yeah.

00:05:27.180 --> 00:05:30.357
So the way it actually works on
the arbitrary sizes of images.

00:05:30.357 --> 00:05:31.940
MALE SPEAKER: And
it's non-disruptive.

00:05:31.940 --> 00:05:33.560
NICOLAS ROARD: It's
non-disruptive.

00:05:33.560 --> 00:05:36.160
We do a lot effects, not
just global effects, but also

00:05:36.160 --> 00:05:37.880
local effects.

00:05:37.880 --> 00:05:41.920
All the common ones, vignette,
contrast, saturation.

00:05:41.920 --> 00:05:45.360
We do a bunch of interesting
things like that.

00:05:45.360 --> 00:05:47.930
What I'm really happy with
is that it scales very well,

00:05:47.930 --> 00:05:50.520
and it's non-disruptive, which
means that you can always

00:05:50.520 --> 00:05:52.590
come back, reapply an
effect, change an effect,

00:05:52.590 --> 00:05:54.240
and it's still going to
be at the same point.

00:05:54.240 --> 00:05:54.310
MALE SPEAKER: Right.

00:05:54.310 --> 00:05:55.810
There's a pipeline
effect you apply,

00:05:55.810 --> 00:05:57.790
and you can move back too.

00:05:57.790 --> 00:05:58.990
And how about the previews?

00:05:58.990 --> 00:06:01.400
Do you actually compute
those for the entire image,

00:06:01.400 --> 00:06:04.930
or how do you make
that so snappy?

00:06:04.930 --> 00:06:08.710
NICOLAS ROARD: In general,
the way you do it,

00:06:08.710 --> 00:06:12.010
you can't actually run
everything on the full image

00:06:12.010 --> 00:06:14.790
all the time because it's
going to be too slow.

00:06:14.790 --> 00:06:17.860
So what you really care about is
to have something that is fast,

00:06:17.860 --> 00:06:19.550
that is really
interactive for the user.

00:06:19.550 --> 00:06:22.770
So you just shit.

00:06:22.770 --> 00:06:25.020
What we do in the editor is
that we compute everything

00:06:25.020 --> 00:06:30.700
on a very small preview image,
and because it's smaller,

00:06:30.700 --> 00:06:34.420
we can run the stuff at
an interactive speed.

00:06:34.420 --> 00:06:36.924
The UI elements themselves
are animated at 60fps,

00:06:36.924 --> 00:06:39.090
so when you move something,
when you move a control,

00:06:39.090 --> 00:06:41.780
it always follows
your actions, which

00:06:41.780 --> 00:06:46.032
is really what's
the important point.

00:06:46.032 --> 00:06:48.000
The preview itself is
very fast, and then

00:06:48.000 --> 00:06:49.830
we have a progressive
preview, so as soon

00:06:49.830 --> 00:06:52.700
as you start moving stuff, we
compute a higher resolution

00:06:52.700 --> 00:06:56.354
image, and higher and higher,
until you get the final 1:1

00:06:56.354 --> 00:06:56.854
image.

00:06:56.854 --> 00:06:58.520
MALE SPEAKER: And you
have this nice way

00:06:58.520 --> 00:07:00.040
of comparing before and after?

00:07:00.040 --> 00:07:01.540
NICOLAS ROARD: Yeah,
there is some--

00:07:01.540 --> 00:07:02.860
MALE SPEAKER: Some [INAUDIBLE].

00:07:02.860 --> 00:07:04.460
Or the other way you apply.

00:07:04.460 --> 00:07:06.030
I encourage people
to check it out

00:07:06.030 --> 00:07:08.680
as end users, maybe
not as developers.

00:07:08.680 --> 00:07:10.500
So great.

00:07:10.500 --> 00:07:13.439
Where should people go to
learn more about Render Script?

00:07:13.439 --> 00:07:15.230
NICOLAS ROARD: There
is some documentation.

00:07:15.230 --> 00:07:16.740
Online.

00:07:16.740 --> 00:07:17.700
MALE SPEAKER: Maybe--

00:07:17.700 --> 00:07:21.000
NICOLAS ROARD: The documentation
that's there is sadly not as--

00:07:21.000 --> 00:07:22.250
MALE SPEAKER: --comprehensive?

00:07:22.250 --> 00:07:24.000
NICOLAS ROARD: --as I
would like it to be,

00:07:24.000 --> 00:07:27.200
but the Render Script
team is working on that.

00:07:27.200 --> 00:07:29.000
This past year,
the focus has been

00:07:29.000 --> 00:07:31.974
more on getting out
compatibility library, which

00:07:31.974 --> 00:07:34.640
means that-- and it's actually a
very important point-- it means

00:07:34.640 --> 00:07:36.300
that you can write
from the script,

00:07:36.300 --> 00:07:39.800
and you can run new applications
using [INAUDIBLE] scripts

00:07:39.800 --> 00:07:43.760
on devices that go back to I
think Gingerbread [INAUDIBLE]

00:07:43.760 --> 00:07:44.260
library.

00:07:44.260 --> 00:07:47.320
But internally, we even
made it run on Froyo.

00:07:47.320 --> 00:07:47.845
It's good.

00:07:47.845 --> 00:07:49.645
That actually-- it's
very compatible.

00:07:49.645 --> 00:07:51.320
It means I write
some code, and I

00:07:51.320 --> 00:07:52.832
know it's going to
work everywhere.

00:07:52.832 --> 00:07:54.040
MALE SPEAKER: That actually--

00:07:54.040 --> 00:07:54.770
NICOLAS ROARD:
And yet it's going

00:07:54.770 --> 00:07:56.330
to be fast and [INAUDIBLE].

00:07:56.330 --> 00:07:59.697
MALE SPEAKER: OK, so the Android
website, there's documentation?

00:07:59.697 --> 00:08:00.655
NICOLAS ROARD: Exactly.

00:08:00.655 --> 00:08:03.119
On the website.

00:08:03.119 --> 00:08:05.160
MALE SPEAKER: It's going
to get better over time.

00:08:05.160 --> 00:08:07.240
But there's something
to start with.

00:08:07.240 --> 00:08:08.990
Great, well Nicolas,
thanks for your time.

00:08:08.990 --> 00:08:12.219
That's what I wanted to cover
here, and I'll see you soon.

00:08:12.219 --> 00:08:13.260
NICOLAS ROARD: All right.

00:08:13.260 --> 00:08:14.810
Thanks.

