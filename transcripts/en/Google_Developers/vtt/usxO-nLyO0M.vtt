WEBVTT
Kind: captions
Language: en

00:00:04.000 --> 00:00:06.634
Hey, my name is Eric, and I'll
be co-presenting with Monsur.

00:00:06.634 --> 00:00:09.334
So what
we'll be talking about--

00:00:09.334 --> 00:00:10.767
first I'm going to be
giving you an introduction

00:00:10.767 --> 00:00:12.467
to Oauth.

00:00:12.467 --> 00:00:13.968
So for those
who aren't familiar,

00:00:13.968 --> 00:00:15.367
Oauth is an open standard

00:00:15.367 --> 00:00:17.701
for authorizing
data access on the web,

00:00:17.701 --> 00:00:19.200
sharing users' private data.

00:00:19.200 --> 00:00:21.367
We'll be going into a little bit
about the details of the app,

00:00:21.367 --> 00:00:25.200
but mainly focusing on how that
incorporates into a gadget.

00:00:25.200 --> 00:00:28.334
Next thing
we'll be talking about

00:00:28.334 --> 00:00:31.000
is OpenSocial.

00:00:31.000 --> 00:00:32.667
So in the case of iGoogle,

00:00:32.667 --> 00:00:35.167
you can create a really
interesting OpenSocial gadget

00:00:35.167 --> 00:00:36.834
using Oauth

00:00:36.834 --> 00:00:39.367
to access a user's
private calendar data,

00:00:39.367 --> 00:00:41.501
Blogger data,
contacts, what have you

00:00:41.501 --> 00:00:42.801
with the Google Data APIs.

00:00:42.801 --> 00:00:46.334
Lastly, we're going
to go into the Google Data

00:00:46.334 --> 00:00:50.634
JavaScript client library,

00:00:50.634 --> 00:00:52.834
which is a great J.S. library

00:00:52.834 --> 00:00:54.434
for reading and writing
data on the web.

00:00:54.434 --> 00:00:57.100
It makes OpenSocial gadgets
particularly easy.

00:00:57.100 --> 00:00:58.901
So here's some skeleton code

00:00:58.901 --> 00:01:00.067
that's sort of--
we're going to explain

00:01:00.067 --> 00:01:01.734
about the Oauth flow.

00:01:01.734 --> 00:01:03.367
The Oauth flow actually,
in iGoogle,

00:01:03.367 --> 00:01:04.634
involves a pop-up window,

00:01:04.634 --> 00:01:06.334
and that gives
the user the ability

00:01:06.334 --> 00:01:08.601
to grant or deny
access to the data.

00:01:08.601 --> 00:01:10.767
So the first thing they see
when they come to iGoogle

00:01:10.767 --> 00:01:12.534
is this
"Sign in to Blogger"

00:01:12.534 --> 00:01:14.400
in this example gadget.

00:01:14.400 --> 00:01:16.567
We've created an OnClick
handler for that.

00:01:16.567 --> 00:01:18.067
And so when they click that,

00:01:18.067 --> 00:01:19.634
this pop-up window
pops up--

00:01:19.634 --> 00:01:21.267
this is a Google page,

00:01:21.267 --> 00:01:22.968
and they are choosing
or denying access

00:01:22.968 --> 00:01:24.200
to their Blogger data.

00:01:24.200 --> 00:01:27.300
And so if they choose
to grant access,

00:01:27.300 --> 00:01:30.367
the gadget
will refresh itself.

00:01:30.367 --> 00:01:32.167
And last but not least,

00:01:32.167 --> 00:01:34.133
this is the normal state
of the gadget.

00:01:34.133 --> 00:01:35.334
The gadget's
been authenticated.

00:01:35.334 --> 00:01:37.334
The token is registered
in the O/I proxy,

00:01:37.334 --> 00:01:40.200
and you can post away
to Blogger via iGoogle,

00:01:40.200 --> 00:01:41.801
which is really cool.

00:01:41.801 --> 00:01:44.467
We'll talk about how
to do this in OpenSocial

00:01:44.467 --> 00:01:47.667
and then how much easier it is

00:01:47.667 --> 00:01:50.334
actually using the G-Data
JavaScript client library.

00:01:50.334 --> 00:01:51.501
So I hope to see you there.

00:01:51.501 --> 00:01:52.901
We'll be at Google I/O
in May.

