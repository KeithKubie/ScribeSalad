WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:04.780
 
[Music]

00:00:04.780 --> 00:00:04.790
[Music]
 

00:00:04.790 --> 00:00:08.000
[Music]
I'll welcome good afternoon everybody I

00:00:08.000 --> 00:00:08.010
I'll welcome good afternoon everybody I
 

00:00:08.010 --> 00:00:09.860
I'll welcome good afternoon everybody I
meet I'm the technical lead for

00:00:09.860 --> 00:00:09.870
meet I'm the technical lead for
 

00:00:09.870 --> 00:00:11.990
meet I'm the technical lead for
architecture components and I'm here

00:00:11.990 --> 00:00:12.000
architecture components and I'm here
 

00:00:12.000 --> 00:00:14.390
architecture components and I'm here
joining with Kel it's also part of the

00:00:14.390 --> 00:00:14.400
joining with Kel it's also part of the
 

00:00:14.400 --> 00:00:17.439
joining with Kel it's also part of the
team so today we are going to talk about

00:00:17.439 --> 00:00:17.449
team so today we are going to talk about
 

00:00:17.449 --> 00:00:22.250
team so today we are going to talk about
persistence now if this is a loading

00:00:22.250 --> 00:00:22.260
persistence now if this is a loading
 

00:00:22.260 --> 00:00:24.849
persistence now if this is a loading
screen this is all my favorite screen

00:00:24.849 --> 00:00:24.859
screen this is all my favorite screen
 

00:00:24.859 --> 00:00:28.490
screen this is all my favorite screen
said no one no one ever said I like the

00:00:28.490 --> 00:00:28.500
said no one no one ever said I like the
 

00:00:28.500 --> 00:00:31.849
said no one no one ever said I like the
way especially if there's some content

00:00:31.849 --> 00:00:31.859
way especially if there's some content
 

00:00:31.859 --> 00:00:34.220
way especially if there's some content
did they have already seen and if you

00:00:34.220 --> 00:00:34.230
did they have already seen and if you
 

00:00:34.230 --> 00:00:37.250
did they have already seen and if you
are making the user wait to see the same

00:00:37.250 --> 00:00:37.260
are making the user wait to see the same
 

00:00:37.260 --> 00:00:37.910
are making the user wait to see the same
content

00:00:37.910 --> 00:00:37.920
content
 

00:00:37.920 --> 00:00:40.610
content
it's horrible like you're a bad person

00:00:40.610 --> 00:00:40.620
it's horrible like you're a bad person
 

00:00:40.620 --> 00:00:45.680
it's horrible like you're a bad person
and everything so now how to fix this we

00:00:45.680 --> 00:00:45.690
and everything so now how to fix this we
 

00:00:45.690 --> 00:00:47.479
and everything so now how to fix this we
purchase the data this is what we

00:00:47.479 --> 00:00:47.489
purchase the data this is what we
 

00:00:47.489 --> 00:00:49.010
purchase the data this is what we
recommend developers whatever

00:00:49.010 --> 00:00:49.020
recommend developers whatever
 

00:00:49.020 --> 00:00:51.709
recommend developers whatever
information you fetch from your network

00:00:51.709 --> 00:00:51.719
information you fetch from your network
 

00:00:51.719 --> 00:00:54.590
information you fetch from your network
different data sources save it to this

00:00:54.590 --> 00:00:54.600
different data sources save it to this
 

00:00:54.600 --> 00:00:57.380
different data sources save it to this
so that if your application is restarted

00:00:57.380 --> 00:00:57.390
so that if your application is restarted
 

00:00:57.390 --> 00:00:59.540
so that if your application is restarted
when there is no network conditions you

00:00:59.540 --> 00:00:59.550
when there is no network conditions you
 

00:00:59.550 --> 00:01:01.459
when there is no network conditions you
can show something to the user you can

00:01:01.459 --> 00:01:01.469
can show something to the user you can
 

00:01:01.469 --> 00:01:04.910
can show something to the user you can
make that experience seamless let me say

00:01:04.910 --> 00:01:04.920
make that experience seamless let me say
 

00:01:04.920 --> 00:01:07.250
make that experience seamless let me say
purchase on Android we know this is a

00:01:07.250 --> 00:01:07.260
purchase on Android we know this is a
 

00:01:07.260 --> 00:01:08.719
purchase on Android we know this is a
very crowded sphere there is out of

00:01:08.719 --> 00:01:08.729
very crowded sphere there is out of
 

00:01:08.729 --> 00:01:10.910
very crowded sphere there is out of
different options different companies

00:01:10.910 --> 00:01:10.920
different options different companies
 

00:01:10.920 --> 00:01:13.609
different options different companies
and most of these solutions are really

00:01:13.609 --> 00:01:13.619
and most of these solutions are really
 

00:01:13.619 --> 00:01:16.910
and most of these solutions are really
really good solutions but if you come to

00:01:16.910 --> 00:01:16.920
really good solutions but if you come to
 

00:01:16.920 --> 00:01:18.980
really good solutions but if you come to
Andrew it and like if you're new to the

00:01:18.980 --> 00:01:18.990
Andrew it and like if you're new to the
 

00:01:18.990 --> 00:01:20.960
Andrew it and like if you're new to the
platform what you would do you will

00:01:20.960 --> 00:01:20.970
platform what you would do you will
 

00:01:20.970 --> 00:01:22.670
platform what you would do you will
check what is inside the framework

00:01:22.670 --> 00:01:22.680
check what is inside the framework
 

00:01:22.680 --> 00:01:25.399
check what is inside the framework
already so there's these three things

00:01:25.399 --> 00:01:25.409
already so there's these three things
 

00:01:25.409 --> 00:01:27.760
already so there's these three things
that come with the standard library and

00:01:27.760 --> 00:01:27.770
that come with the standard library and
 

00:01:27.770 --> 00:01:30.200
that come with the standard library and
if you read about them you realize that

00:01:30.200 --> 00:01:30.210
if you read about them you realize that
 

00:01:30.210 --> 00:01:33.200
if you read about them you realize that
if you want to put structured data then

00:01:33.200 --> 00:01:33.210
if you want to put structured data then
 

00:01:33.210 --> 00:01:35.990
if you want to put structured data then
you want to go with SQLite SQLite is

00:01:35.990 --> 00:01:36.000
you want to go with SQLite SQLite is
 

00:01:36.000 --> 00:01:37.700
you want to go with SQLite SQLite is
something we have been shipping since

00:01:37.700 --> 00:01:37.710
something we have been shipping since
 

00:01:37.710 --> 00:01:40.700
something we have been shipping since
Android 1 it's a proven technology works

00:01:40.700 --> 00:01:40.710
Android 1 it's a proven technology works
 

00:01:40.710 --> 00:01:43.130
Android 1 it's a proven technology works
very well so you go ahead and say ok I

00:01:43.130 --> 00:01:43.140
very well so you go ahead and say ok I
 

00:01:43.140 --> 00:01:46.219
very well so you go ahead and say ok I
know a scale I want to use SQLite you go

00:01:46.219 --> 00:01:46.229
know a scale I want to use SQLite you go
 

00:01:46.229 --> 00:01:48.080
know a scale I want to use SQLite you go
to this page this is the very first page

00:01:48.080 --> 00:01:48.090
to this page this is the very first page
 

00:01:48.090 --> 00:01:51.230
to this page this is the very first page
you see this is horrible this is like

00:01:51.230 --> 00:01:51.240
you see this is horrible this is like
 

00:01:51.240 --> 00:01:53.030
you see this is horrible this is like
it's kind of trying to say you know what

00:01:53.030 --> 00:01:53.040
it's kind of trying to say you know what
 

00:01:53.040 --> 00:01:57.800
it's kind of trying to say you know what
you don't want the person it's not what

00:01:57.800 --> 00:01:57.810
you don't want the person it's not what
 

00:01:57.810 --> 00:02:00.889
you don't want the person it's not what
we meant but this is what we have so you

00:02:00.889 --> 00:02:00.899
we meant but this is what we have so you
 

00:02:00.899 --> 00:02:04.219
we meant but this is what we have so you
say you know what let's let's look at

00:02:04.219 --> 00:02:04.229
say you know what let's let's look at
 

00:02:04.229 --> 00:02:05.899
say you know what let's let's look at
this page like we want to make this

00:02:05.899 --> 00:02:05.909
this page like we want to make this
 

00:02:05.909 --> 00:02:07.609
this page like we want to make this
better right let's get this page it's

00:02:07.609 --> 00:02:07.619
better right let's get this page it's
 

00:02:07.619 --> 00:02:09.830
better right let's get this page it's
trying to say I want to select these

00:02:09.830 --> 00:02:09.840
trying to say I want to select these
 

00:02:09.840 --> 00:02:12.530
trying to say I want to select these
columns with this constraint

00:02:12.530 --> 00:02:12.540
columns with this constraint
 

00:02:12.540 --> 00:02:15.649
columns with this constraint
with this order so if you look at this

00:02:15.649 --> 00:02:15.659
with this order so if you look at this
 

00:02:15.659 --> 00:02:19.339
with this order so if you look at this
this is a very very simple SQL query but

00:02:19.339 --> 00:02:19.349
this is a very very simple SQL query but
 

00:02:19.349 --> 00:02:21.080
this is a very very simple SQL query but
it takes a lot of stuff to write it you

00:02:21.080 --> 00:02:21.090
it takes a lot of stuff to write it you
 

00:02:21.090 --> 00:02:22.970
it takes a lot of stuff to write it you
need to define all these concepts which

00:02:22.970 --> 00:02:22.980
need to define all these concepts which
 

00:02:22.980 --> 00:02:25.940
need to define all these concepts which
are not even visible on this page so I

00:02:25.940 --> 00:02:25.950
are not even visible on this page so I
 

00:02:25.950 --> 00:02:26.960
are not even visible on this page so I
want to say okay

00:02:26.960 --> 00:02:26.970
want to say okay
 

00:02:26.970 --> 00:02:28.670
want to say okay
there should be some room for

00:02:28.670 --> 00:02:28.680
there should be some room for
 

00:02:28.680 --> 00:02:31.699
there should be some room for
improvement and came up with room which

00:02:31.699 --> 00:02:31.709
improvement and came up with room which
 

00:02:31.709 --> 00:02:35.140
improvement and came up with room which
is an object mapping library for SQLite

00:02:35.140 --> 00:02:35.150
is an object mapping library for SQLite
 

00:02:35.150 --> 00:02:38.210
is an object mapping library for SQLite
now okay we said okay let's let's step

00:02:38.210 --> 00:02:38.220
now okay we said okay let's let's step
 

00:02:38.220 --> 00:02:40.309
now okay we said okay let's let's step
back we said writing the same thing with

00:02:40.309 --> 00:02:40.319
back we said writing the same thing with
 

00:02:40.319 --> 00:02:43.099
back we said writing the same thing with
SQL is a lot shorter a lot nicer so

00:02:43.099 --> 00:02:43.109
SQL is a lot shorter a lot nicer so
 

00:02:43.109 --> 00:02:45.619
SQL is a lot shorter a lot nicer so
let's go back to our roots which now

00:02:45.619 --> 00:02:45.629
let's go back to our roots which now
 

00:02:45.629 --> 00:02:47.390
let's go back to our roots which now
there's a nice karakuri that we assign

00:02:47.390 --> 00:02:47.400
there's a nice karakuri that we assign
 

00:02:47.400 --> 00:02:51.349
there's a nice karakuri that we assign
it a string it is standard SQLite now of

00:02:51.349 --> 00:02:51.359
it a string it is standard SQLite now of
 

00:02:51.359 --> 00:02:54.619
it a string it is standard SQLite now of
course if it is like this the we cannot

00:02:54.619 --> 00:02:54.629
course if it is like this the we cannot
 

00:02:54.629 --> 00:02:57.559
course if it is like this the we cannot
understand it we low annotation so we

00:02:57.559 --> 00:02:57.569
understand it we low annotation so we
 

00:02:57.569 --> 00:03:00.080
understand it we low annotation so we
put it inside an annotation and it is

00:03:00.080 --> 00:03:00.090
put it inside an annotation and it is
 

00:03:00.090 --> 00:03:01.849
put it inside an annotation and it is
inside annotation now you want to get

00:03:01.849 --> 00:03:01.859
inside annotation now you want to get
 

00:03:01.859 --> 00:03:04.550
inside annotation now you want to get
the response from the query want to say

00:03:04.550 --> 00:03:04.560
the response from the query want to say
 

00:03:04.560 --> 00:03:06.949
the response from the query want to say
well put it into a method so we can

00:03:06.949 --> 00:03:06.959
well put it into a method so we can
 

00:03:06.959 --> 00:03:08.569
well put it into a method so we can
understand what the query wants to

00:03:08.569 --> 00:03:08.579
understand what the query wants to
 

00:03:08.579 --> 00:03:11.809
understand what the query wants to
return now we know that this is a query

00:03:11.809 --> 00:03:11.819
return now we know that this is a query
 

00:03:11.819 --> 00:03:15.199
return now we know that this is a query
it wants to fish these columns from this

00:03:15.199 --> 00:03:15.209
it wants to fish these columns from this
 

00:03:15.209 --> 00:03:17.930
it wants to fish these columns from this
table and with this constraint but if

00:03:17.930 --> 00:03:17.940
table and with this constraint but if
 

00:03:17.940 --> 00:03:19.280
table and with this constraint but if
you look at the constraint there is

00:03:19.280 --> 00:03:19.290
you look at the constraint there is
 

00:03:19.290 --> 00:03:21.050
you look at the constraint there is
actually a bind parameter this is a

00:03:21.050 --> 00:03:21.060
actually a bind parameter this is a
 

00:03:21.060 --> 00:03:23.990
actually a bind parameter this is a
SQLite standard byte parameter syntax we

00:03:23.990 --> 00:03:24.000
SQLite standard byte parameter syntax we
 

00:03:24.000 --> 00:03:26.300
SQLite standard byte parameter syntax we
didn't came up with this so where do we

00:03:26.300 --> 00:03:26.310
didn't came up with this so where do we
 

00:03:26.310 --> 00:03:28.699
didn't came up with this so where do we
get this bind parameters how do you get

00:03:28.699 --> 00:03:28.709
get this bind parameters how do you get
 

00:03:28.709 --> 00:03:30.860
get this bind parameters how do you get
parameters to your functions from the

00:03:30.860 --> 00:03:30.870
parameters to your functions from the
 

00:03:30.870 --> 00:03:33.170
parameters to your functions from the
function arguments so we put a test the

00:03:33.170 --> 00:03:33.180
function arguments so we put a test the
 

00:03:33.180 --> 00:03:35.330
function arguments so we put a test the
most obvious place to get this argument

00:03:35.330 --> 00:03:35.340
most obvious place to get this argument
 

00:03:35.340 --> 00:03:38.150
most obvious place to get this argument
from and none last but not least we want

00:03:38.150 --> 00:03:38.160
from and none last but not least we want
 

00:03:38.160 --> 00:03:40.520
from and none last but not least we want
to know what it wants to return okay so

00:03:40.520 --> 00:03:40.530
to know what it wants to return okay so
 

00:03:40.530 --> 00:03:43.490
to know what it wants to return okay so
it's returning list of weeds now of

00:03:43.490 --> 00:03:43.500
it's returning list of weeds now of
 

00:03:43.500 --> 00:03:45.319
it's returning list of weeds now of
course there's a feed class so it needs

00:03:45.319 --> 00:03:45.329
course there's a feed class so it needs
 

00:03:45.329 --> 00:03:48.170
course there's a feed class so it needs
to be somewhere we have that class and I

00:03:48.170 --> 00:03:48.180
to be somewhere we have that class and I
 

00:03:48.180 --> 00:03:50.210
to be somewhere we have that class and I
want to put this query inside that data

00:03:50.210 --> 00:03:50.220
want to put this query inside that data
 

00:03:50.220 --> 00:03:52.400
want to put this query inside that data
access object that's what does stands

00:03:52.400 --> 00:03:52.410
access object that's what does stands
 

00:03:52.410 --> 00:03:54.259
access object that's what does stands
for because you don't want to have your

00:03:54.259 --> 00:03:54.269
for because you don't want to have your
 

00:03:54.269 --> 00:03:56.240
for because you don't want to have your
application making database queries

00:03:56.240 --> 00:03:56.250
application making database queries
 

00:03:56.250 --> 00:03:58.339
application making database queries
along the code base you want to put

00:03:58.339 --> 00:03:58.349
along the code base you want to put
 

00:03:58.349 --> 00:04:00.649
along the code base you want to put
these into certain causes which we call

00:04:00.649 --> 00:04:00.659
these into certain causes which we call
 

00:04:00.659 --> 00:04:03.530
these into certain causes which we call
data access objects so said all we need

00:04:03.530 --> 00:04:03.540
data access objects so said all we need
 

00:04:03.540 --> 00:04:05.599
data access objects so said all we need
to tell the room that this is a doll and

00:04:05.599 --> 00:04:05.609
to tell the room that this is a doll and
 

00:04:05.609 --> 00:04:07.789
to tell the room that this is a doll and
I mean it's a child room that feed is

00:04:07.789 --> 00:04:07.799
I mean it's a child room that feed is
 

00:04:07.799 --> 00:04:09.860
I mean it's a child room that feed is
some class that it would like the purses

00:04:09.860 --> 00:04:09.870
some class that it would like the purses
 

00:04:09.870 --> 00:04:12.920
some class that it would like the purses
into a database last but not least we

00:04:12.920 --> 00:04:12.930
into a database last but not least we
 

00:04:12.930 --> 00:04:14.629
into a database last but not least we
need the database to put these two

00:04:14.629 --> 00:04:14.639
need the database to put these two
 

00:04:14.639 --> 00:04:17.930
need the database to put these two
things together that needs to expand the

00:04:17.930 --> 00:04:17.940
things together that needs to expand the
 

00:04:17.940 --> 00:04:21.259
things together that needs to expand the
room database cost and so the feed dog

00:04:21.259 --> 00:04:21.269
room database cost and so the feed dog
 

00:04:21.269 --> 00:04:24.110
room database cost and so the feed dog
we defined us we just say this database

00:04:24.110 --> 00:04:24.120
we defined us we just say this database
 

00:04:24.120 --> 00:04:25.900
we defined us we just say this database
has this tall

00:04:25.900 --> 00:04:25.910
has this tall
 

00:04:25.910 --> 00:04:28.420
has this tall
and the feed entity we define that we

00:04:28.420 --> 00:04:28.430
and the feed entity we define that we
 

00:04:28.430 --> 00:04:30.040
and the feed entity we define that we
put inside data so you can have multiple

00:04:30.040 --> 00:04:30.050
put inside data so you can have multiple
 

00:04:30.050 --> 00:04:32.770
put inside data so you can have multiple
entities multiple dolls you can actually

00:04:32.770 --> 00:04:32.780
entities multiple dolls you can actually
 

00:04:32.780 --> 00:04:35.020
entities multiple dolls you can actually
have multiple database definitions that

00:04:35.020 --> 00:04:35.030
have multiple database definitions that
 

00:04:35.030 --> 00:04:37.060
have multiple database definitions that
access the same dolls as long as

00:04:37.060 --> 00:04:37.070
access the same dolls as long as
 

00:04:37.070 --> 00:04:39.520
access the same dolls as long as
whatever schema you define in that

00:04:39.520 --> 00:04:39.530
whatever schema you define in that
 

00:04:39.530 --> 00:04:42.220
whatever schema you define in that
database works with the dolls and

00:04:42.220 --> 00:04:42.230
database works with the dolls and
 

00:04:42.230 --> 00:04:47.140
database works with the dolls and
entities wrong with results once you

00:04:47.140 --> 00:04:47.150
entities wrong with results once you
 

00:04:47.150 --> 00:04:49.690
entities wrong with results once you
have all that description you can get

00:04:49.690 --> 00:04:49.700
have all that description you can get
 

00:04:49.700 --> 00:04:51.790
have all that description you can get
the implementation of the database

00:04:51.790 --> 00:04:51.800
the implementation of the database
 

00:04:51.800 --> 00:04:54.130
the implementation of the database
through this builder it's very similar

00:04:54.130 --> 00:04:54.140
through this builder it's very similar
 

00:04:54.140 --> 00:04:56.320
through this builder it's very similar
to how you use retrofit dagger you

00:04:56.320 --> 00:04:56.330
to how you use retrofit dagger you
 

00:04:56.330 --> 00:04:59.200
to how you use retrofit dagger you
provide the you define the interfaces we

00:04:59.200 --> 00:04:59.210
provide the you define the interfaces we
 

00:04:59.210 --> 00:05:03.040
provide the you define the interfaces we
provide the implementation now of course

00:05:03.040 --> 00:05:03.050
provide the implementation now of course
 

00:05:03.050 --> 00:05:04.890
provide the implementation now of course
because we are doing the implementation

00:05:04.890 --> 00:05:04.900
because we are doing the implementation
 

00:05:04.900 --> 00:05:07.210
because we are doing the implementation
select queries are very specific we

00:05:07.210 --> 00:05:07.220
select queries are very specific we
 

00:05:07.220 --> 00:05:08.440
select queries are very specific we
really don't know how you will select

00:05:08.440 --> 00:05:08.450
really don't know how you will select
 

00:05:08.450 --> 00:05:10.150
really don't know how you will select
but there are other queries that you

00:05:10.150 --> 00:05:10.160
but there are other queries that you
 

00:05:10.160 --> 00:05:11.980
but there are other queries that you
would like to use or something into

00:05:11.980 --> 00:05:11.990
would like to use or something into
 

00:05:11.990 --> 00:05:14.110
would like to use or something into
database so we said okay we can just

00:05:14.110 --> 00:05:14.120
database so we said okay we can just
 

00:05:14.120 --> 00:05:16.150
database so we said okay we can just
define other annotations to make it

00:05:16.150 --> 00:05:16.160
define other annotations to make it
 

00:05:16.160 --> 00:05:19.480
define other annotations to make it
easier for you inside these annotations

00:05:19.480 --> 00:05:19.490
easier for you inside these annotations
 

00:05:19.490 --> 00:05:21.220
easier for you inside these annotations
these are actually very very flexible

00:05:21.220 --> 00:05:21.230
these are actually very very flexible
 

00:05:21.230 --> 00:05:23.530
these are actually very very flexible
you can say we could pass multiple

00:05:23.530 --> 00:05:23.540
you can say we could pass multiple
 

00:05:23.540 --> 00:05:25.660
you can say we could pass multiple
arguments like if you read this method

00:05:25.660 --> 00:05:25.670
arguments like if you read this method
 

00:05:25.670 --> 00:05:28.510
arguments like if you read this method
it says inside both you really want to

00:05:28.510 --> 00:05:28.520
it says inside both you really want to
 

00:05:28.520 --> 00:05:30.250
it says inside both you really want to
enjoy both of them to database and the

00:05:30.250 --> 00:05:30.260
enjoy both of them to database and the
 

00:05:30.260 --> 00:05:33.010
enjoy both of them to database and the
room understand this you can send a list

00:05:33.010 --> 00:05:33.020
room understand this you can send a list
 

00:05:33.020 --> 00:05:35.410
room understand this you can send a list
of items you can send variable arguments

00:05:35.410 --> 00:05:35.420
of items you can send variable arguments
 

00:05:35.420 --> 00:05:37.120
of items you can send variable arguments
multiple parameters like if it is

00:05:37.120 --> 00:05:37.130
multiple parameters like if it is
 

00:05:37.130 --> 00:05:42.250
multiple parameters like if it is
readable room we'll make it work you can

00:05:42.250 --> 00:05:42.260
readable room we'll make it work you can
 

00:05:42.260 --> 00:05:44.920
readable room we'll make it work you can
even say like if your Titans are this

00:05:44.920 --> 00:05:44.930
even say like if your Titans are this
 

00:05:44.930 --> 00:05:47.320
even say like if your Titans are this
thing if there's a unique key conflict

00:05:47.320 --> 00:05:47.330
thing if there's a unique key conflict
 

00:05:47.330 --> 00:05:49.900
thing if there's a unique key conflict
in the database do this so you can also

00:05:49.900 --> 00:05:49.910
in the database do this so you can also
 

00:05:49.910 --> 00:05:53.680
in the database do this so you can also
specify these constraints so since we

00:05:53.680 --> 00:05:53.690
specify these constraints so since we
 

00:05:53.690 --> 00:05:55.300
specify these constraints so since we
have the insert annotation we have

00:05:55.300 --> 00:05:55.310
have the insert annotation we have
 

00:05:55.310 --> 00:05:57.790
have the insert annotation we have
similarly delete or update annotations

00:05:57.790 --> 00:05:57.800
similarly delete or update annotations
 

00:05:57.800 --> 00:06:02.350
similarly delete or update annotations
just for the very common tasks now this

00:06:02.350 --> 00:06:02.360
just for the very common tasks now this
 

00:06:02.360 --> 00:06:04.690
just for the very common tasks now this
so we said we just starts up on that

00:06:04.690 --> 00:06:04.700
so we said we just starts up on that
 

00:06:04.700 --> 00:06:06.760
so we said we just starts up on that
SQLite but there are some cases where

00:06:06.760 --> 00:06:06.770
SQLite but there are some cases where
 

00:06:06.770 --> 00:06:08.980
SQLite but there are some cases where
writing SQLite is harder for example I

00:06:08.980 --> 00:06:08.990
writing SQLite is harder for example I
 

00:06:08.990 --> 00:06:11.110
writing SQLite is harder for example I
have this query where I want to query

00:06:11.110 --> 00:06:11.120
have this query where I want to query
 

00:06:11.120 --> 00:06:13.480
have this query where I want to query
these feeds but I'm trying to return a

00:06:13.480 --> 00:06:13.490
these feeds but I'm trying to return a
 

00:06:13.490 --> 00:06:15.490
these feeds but I'm trying to return a
list of feed which means like I want to

00:06:15.490 --> 00:06:15.500
list of feed which means like I want to
 

00:06:15.500 --> 00:06:17.860
list of feed which means like I want to
get multiple feed items right so that

00:06:17.860 --> 00:06:17.870
get multiple feed items right so that
 

00:06:17.870 --> 00:06:20.230
get multiple feed items right so that
means I want to get them by ID so I

00:06:20.230 --> 00:06:20.240
means I want to get them by ID so I
 

00:06:20.240 --> 00:06:23.110
means I want to get them by ID so I
probably want to pass multiple IDs now

00:06:23.110 --> 00:06:23.120
probably want to pass multiple IDs now
 

00:06:23.120 --> 00:06:26.590
probably want to pass multiple IDs now
in SQL you will do this in these IDs but

00:06:26.590 --> 00:06:26.600
in SQL you will do this in these IDs but
 

00:06:26.600 --> 00:06:28.540
in SQL you will do this in these IDs but
you need to know how many IDs you have

00:06:28.540 --> 00:06:28.550
you need to know how many IDs you have
 

00:06:28.550 --> 00:06:30.850
you need to know how many IDs you have
so you can put that number of bind

00:06:30.850 --> 00:06:30.860
so you can put that number of bind
 

00:06:30.860 --> 00:06:33.370
so you can put that number of bind
parameters but this is some information

00:06:33.370 --> 00:06:33.380
parameters but this is some information
 

00:06:33.380 --> 00:06:35.440
parameters but this is some information
we don't know while writing this query

00:06:35.440 --> 00:06:35.450
we don't know while writing this query
 

00:06:35.450 --> 00:06:37.930
we don't know while writing this query
right well that's okay room can

00:06:37.930 --> 00:06:37.940
right well that's okay room can
 

00:06:37.940 --> 00:06:39.670
right well that's okay room can
understand it if whatever the

00:06:39.670 --> 00:06:39.680
understand it if whatever the
 

00:06:39.680 --> 00:06:41.950
understand it if whatever the
mitr you are passing to a function is a

00:06:41.950 --> 00:06:41.960
mitr you are passing to a function is a
 

00:06:41.960 --> 00:06:44.529
mitr you are passing to a function is a
collection rule knows that okay

00:06:44.529 --> 00:06:44.539
collection rule knows that okay
 

00:06:44.539 --> 00:06:46.390
collection rule knows that okay
this they want to have multiple bind

00:06:46.390 --> 00:06:46.400
this they want to have multiple bind
 

00:06:46.400 --> 00:06:48.969
this they want to have multiple bind
parameters at runtime we will generate

00:06:48.969 --> 00:06:48.979
parameters at runtime we will generate
 

00:06:48.979 --> 00:06:50.950
parameters at runtime we will generate
the right query for you and we will do

00:06:50.950 --> 00:06:50.960
the right query for you and we will do
 

00:06:50.960 --> 00:06:53.650
the right query for you and we will do
that san dimas' NL a fundamentalist

00:06:53.650 --> 00:06:53.660
that san dimas' NL a fundamentalist
 

00:06:53.660 --> 00:06:55.900
that san dimas' NL a fundamentalist
doesn't really matter if it is if room

00:06:55.900 --> 00:06:55.910
doesn't really matter if it is if room
 

00:06:55.910 --> 00:06:59.040
doesn't really matter if it is if room
can understand it will do it for you now

00:06:59.040 --> 00:06:59.050
can understand it will do it for you now
 

00:06:59.050 --> 00:07:02.050
can understand it will do it for you now
the most important part about room is

00:07:02.050 --> 00:07:02.060
the most important part about room is
 

00:07:02.060 --> 00:07:03.879
the most important part about room is
that once we let you define all these

00:07:03.879 --> 00:07:03.889
that once we let you define all these
 

00:07:03.889 --> 00:07:06.400
that once we let you define all these
things let your room understand these

00:07:06.400 --> 00:07:06.410
things let your room understand these
 

00:07:06.410 --> 00:07:09.040
things let your room understand these
queries not just say like you know take

00:07:09.040 --> 00:07:09.050
queries not just say like you know take
 

00:07:09.050 --> 00:07:10.900
queries not just say like you know take
this SQL and then like compile time

00:07:10.900 --> 00:07:10.910
this SQL and then like compile time
 

00:07:10.910 --> 00:07:13.659
this SQL and then like compile time
generate the code room understands it

00:07:13.659 --> 00:07:13.669
generate the code room understands it
 

00:07:13.669 --> 00:07:15.430
generate the code room understands it
knows what you are trying to do and this

00:07:15.430 --> 00:07:15.440
knows what you are trying to do and this
 

00:07:15.440 --> 00:07:18.310
knows what you are trying to do and this
gives us a lot of power for example if

00:07:18.310 --> 00:07:18.320
gives us a lot of power for example if
 

00:07:18.320 --> 00:07:19.689
gives us a lot of power for example if
the room looks at the screen it says

00:07:19.689 --> 00:07:19.699
the room looks at the screen it says
 

00:07:19.699 --> 00:07:23.650
the room looks at the screen it says
okay this is a select query with this

00:07:23.650 --> 00:07:23.660
okay this is a select query with this
 

00:07:23.660 --> 00:07:25.510
okay this is a select query with this
bind parameter which is passing as a

00:07:25.510 --> 00:07:25.520
bind parameter which is passing as a
 

00:07:25.520 --> 00:07:26.350
bind parameter which is passing as a
string

00:07:26.350 --> 00:07:26.360
string
 

00:07:26.360 --> 00:07:31.210
string
I knows it is from the feed table and it

00:07:31.210 --> 00:07:31.220
I knows it is from the feed table and it
 

00:07:31.220 --> 00:07:33.580
I knows it is from the feed table and it
wants to return items this feeds the

00:07:33.580 --> 00:07:33.590
wants to return items this feeds the
 

00:07:33.590 --> 00:07:36.400
wants to return items this feeds the
room goes and says ok can I relate this

00:07:36.400 --> 00:07:36.410
room goes and says ok can I relate this
 

00:07:36.410 --> 00:07:39.010
room goes and says ok can I relate this
yes the tail the table has these three

00:07:39.010 --> 00:07:39.020
yes the tail the table has these three
 

00:07:39.020 --> 00:07:41.529
yes the tail the table has these three
columns the feed item has these three

00:07:41.529 --> 00:07:41.539
columns the feed item has these three
 

00:07:41.539 --> 00:07:44.350
columns the feed item has these three
columns these match verify you could

00:07:44.350 --> 00:07:44.360
columns these match verify you could
 

00:07:44.360 --> 00:07:46.750
columns these match verify you could
have another card instead of that feed

00:07:46.750 --> 00:07:46.760
have another card instead of that feed
 

00:07:46.760 --> 00:07:49.180
have another card instead of that feed
that has these three fields rumors to

00:07:49.180 --> 00:07:49.190
that has these three fields rumors to
 

00:07:49.190 --> 00:07:55.210
that has these three fields rumors to
work now after this verification let's

00:07:55.210 --> 00:07:55.220
work now after this verification let's
 

00:07:55.220 --> 00:07:56.830
work now after this verification let's
say you made a typo right like the

00:07:56.830 --> 00:07:56.840
say you made a typo right like the
 

00:07:56.840 --> 00:07:59.200
say you made a typo right like the
reason why we define all those constants

00:07:59.200 --> 00:07:59.210
reason why we define all those constants
 

00:07:59.210 --> 00:08:02.670
reason why we define all those constants
or use Java builders is also avoid these

00:08:02.670 --> 00:08:02.680
or use Java builders is also avoid these
 

00:08:02.680 --> 00:08:05.860
or use Java builders is also avoid these
piping like mistyping queries room can

00:08:05.860 --> 00:08:05.870
piping like mistyping queries room can
 

00:08:05.870 --> 00:08:08.230
piping like mistyping queries room can
do this relation for you similarly Java

00:08:08.230 --> 00:08:08.240
do this relation for you similarly Java
 

00:08:08.240 --> 00:08:10.180
do this relation for you similarly Java
code right you don't use builders to

00:08:10.180 --> 00:08:10.190
code right you don't use builders to
 

00:08:10.190 --> 00:08:11.920
code right you don't use builders to
write java code you write your Java code

00:08:11.920 --> 00:08:11.930
write java code you write your Java code
 

00:08:11.930 --> 00:08:14.230
write java code you write your Java code
compiles tells you if it is wrong and

00:08:14.230 --> 00:08:14.240
compiles tells you if it is wrong and
 

00:08:14.240 --> 00:08:16.570
compiles tells you if it is wrong and
the ID helps you with this so the reason

00:08:16.570 --> 00:08:16.580
the ID helps you with this so the reason
 

00:08:16.580 --> 00:08:18.610
the ID helps you with this so the reason
why we don't have builders is that we

00:08:18.610 --> 00:08:18.620
why we don't have builders is that we
 

00:08:18.620 --> 00:08:21.339
why we don't have builders is that we
think helping you write SQL query is the

00:08:21.339 --> 00:08:21.349
think helping you write SQL query is the
 

00:08:21.349 --> 00:08:23.770
think helping you write SQL query is the
job of Android studio which they are

00:08:23.770 --> 00:08:23.780
job of Android studio which they are
 

00:08:23.780 --> 00:08:26.050
job of Android studio which they are
working on it but once you write the

00:08:26.050 --> 00:08:26.060
working on it but once you write the
 

00:08:26.060 --> 00:08:28.719
working on it but once you write the
query room verifies that it is correct

00:08:28.719 --> 00:08:28.729
query room verifies that it is correct
 

00:08:28.729 --> 00:08:31.180
query room verifies that it is correct
so if you do this mistake room will not

00:08:31.180 --> 00:08:31.190
so if you do this mistake room will not
 

00:08:31.190 --> 00:08:32.880
so if you do this mistake room will not
let you compile the application

00:08:32.880 --> 00:08:32.890
let you compile the application
 

00:08:32.890 --> 00:08:35.019
let you compile the application
similarly if you access some columns

00:08:35.019 --> 00:08:35.029
similarly if you access some columns
 

00:08:35.029 --> 00:08:37.240
similarly if you access some columns
that doesn't exist in the database again

00:08:37.240 --> 00:08:37.250
that doesn't exist in the database again
 

00:08:37.250 --> 00:08:39.819
that doesn't exist in the database again
it will be a compile time error by the

00:08:39.819 --> 00:08:39.829
it will be a compile time error by the
 

00:08:39.829 --> 00:08:41.469
it will be a compile time error by the
way it can be any query you might be

00:08:41.469 --> 00:08:41.479
way it can be any query you might be
 

00:08:41.479 --> 00:08:43.690
way it can be any query you might be
joining five tables room will still

00:08:43.690 --> 00:08:43.700
joining five tables room will still
 

00:08:43.700 --> 00:08:45.780
joining five tables room will still
understand you might have grouping like

00:08:45.780 --> 00:08:45.790
understand you might have grouping like
 

00:08:45.790 --> 00:08:49.990
understand you might have grouping like
almost anything in SQL let's say we made

00:08:49.990 --> 00:08:50.000
almost anything in SQL let's say we made
 

00:08:50.000 --> 00:08:52.600
almost anything in SQL let's say we made
it mistake like that where we only fetch

00:08:52.600 --> 00:08:52.610
it mistake like that where we only fetch
 

00:08:52.610 --> 00:08:53.440
it mistake like that where we only fetch
the subtype

00:08:53.440 --> 00:08:53.450
the subtype
 

00:08:53.450 --> 00:08:56.050
the subtype
: but we want to return this as they fit

00:08:56.050 --> 00:08:56.060
: but we want to return this as they fit
 

00:08:56.060 --> 00:08:58.960
: but we want to return this as they fit
now in this case the feed object also

00:08:58.960 --> 00:08:58.970
now in this case the feed object also
 

00:08:58.970 --> 00:09:00.790
now in this case the feed object also
has a subtitle : so this might be

00:09:00.790 --> 00:09:00.800
has a subtitle : so this might be
 

00:09:00.800 --> 00:09:02.829
has a subtitle : so this might be
intentional maybe you are going to fill

00:09:02.829 --> 00:09:02.839
intentional maybe you are going to fill
 

00:09:02.839 --> 00:09:04.960
intentional maybe you are going to fill
in those fields later on or you made a

00:09:04.960 --> 00:09:04.970
in those fields later on or you made a
 

00:09:04.970 --> 00:09:07.509
in those fields later on or you made a
mistake we don't know in this case room

00:09:07.509 --> 00:09:07.519
mistake we don't know in this case room
 

00:09:07.519 --> 00:09:10.449
mistake we don't know in this case room
just generates the warning it says hey

00:09:10.449 --> 00:09:10.459
just generates the warning it says hey
 

00:09:10.459 --> 00:09:13.480
just generates the warning it says hey
feed classes to other fields that you

00:09:13.480 --> 00:09:13.490
feed classes to other fields that you
 

00:09:13.490 --> 00:09:16.540
feed classes to other fields that you
are not returning from the query it will

00:09:16.540 --> 00:09:16.550
are not returning from the query it will
 

00:09:16.550 --> 00:09:18.699
are not returning from the query it will
just give you all the details well what

00:09:18.699 --> 00:09:18.709
just give you all the details well what
 

00:09:18.709 --> 00:09:20.920
just give you all the details well what
the query returns maybe you made a typo

00:09:20.920 --> 00:09:20.930
the query returns maybe you made a typo
 

00:09:20.930 --> 00:09:23.050
the query returns maybe you made a typo
and what are the fields in the comb in

00:09:23.050 --> 00:09:23.060
and what are the fields in the comb in
 

00:09:23.060 --> 00:09:25.689
and what are the fields in the comb in
the entity now there are two ways you

00:09:25.689 --> 00:09:25.699
the entity now there are two ways you
 

00:09:25.699 --> 00:09:28.269
the entity now there are two ways you
can get rid of this morning the first

00:09:28.269 --> 00:09:28.279
can get rid of this morning the first
 

00:09:28.279 --> 00:09:30.460
can get rid of this morning the first
thing you can do maybe you really want

00:09:30.460 --> 00:09:30.470
thing you can do maybe you really want
 

00:09:30.470 --> 00:09:33.340
thing you can do maybe you really want
to return them as feed instances and I

00:09:33.340 --> 00:09:33.350
to return them as feed instances and I
 

00:09:33.350 --> 00:09:35.560
to return them as feed instances and I
can tell the room to ignore it now I

00:09:35.560 --> 00:09:35.570
can tell the room to ignore it now I
 

00:09:35.570 --> 00:09:36.730
can tell the room to ignore it now I
know what I'm doing

00:09:36.730 --> 00:09:36.740
know what I'm doing
 

00:09:36.740 --> 00:09:39.550
know what I'm doing
suppress this morning alternatively you

00:09:39.550 --> 00:09:39.560
suppress this morning alternatively you
 

00:09:39.560 --> 00:09:42.250
suppress this morning alternatively you
can just create any closets I said you

00:09:42.250 --> 00:09:42.260
can just create any closets I said you
 

00:09:42.260 --> 00:09:44.230
can just create any closets I said you
can just say return me these as a string

00:09:44.230 --> 00:09:44.240
can just say return me these as a string
 

00:09:44.240 --> 00:09:46.660
can just say return me these as a string
right you are returning one column is a

00:09:46.660 --> 00:09:46.670
right you are returning one column is a
 

00:09:46.670 --> 00:09:50.860
right you are returning one column is a
string and room will do it for you very

00:09:50.860 --> 00:09:50.870
string and room will do it for you very
 

00:09:50.870 --> 00:09:52.509
string and room will do it for you very
similarly what if we are returning ID

00:09:52.509 --> 00:09:52.519
similarly what if we are returning ID
 

00:09:52.519 --> 00:09:55.750
similarly what if we are returning ID
and title and that case again room will

00:09:55.750 --> 00:09:55.760
and title and that case again room will
 

00:09:55.760 --> 00:09:57.699
and title and that case again room will
say well there's two columns one string

00:09:57.699 --> 00:09:57.709
say well there's two columns one string
 

00:09:57.709 --> 00:09:59.920
say well there's two columns one string
that doesn't match it will give you an

00:09:59.920 --> 00:09:59.930
that doesn't match it will give you an
 

00:09:59.930 --> 00:10:02.920
that doesn't match it will give you an
error when that happens you can just

00:10:02.920 --> 00:10:02.930
error when that happens you can just
 

00:10:02.930 --> 00:10:05.050
error when that happens you can just
create a POJO again any class in your

00:10:05.050 --> 00:10:05.060
create a POJO again any class in your
 

00:10:05.060 --> 00:10:07.840
create a POJO again any class in your
application I think is we we can read

00:10:07.840 --> 00:10:07.850
application I think is we we can read
 

00:10:07.850 --> 00:10:10.269
application I think is we we can read
what's inside it and it matches what the

00:10:10.269 --> 00:10:10.279
what's inside it and it matches what the
 

00:10:10.279 --> 00:10:12.850
what's inside it and it matches what the
query returns we will generate the code

00:10:12.850 --> 00:10:12.860
query returns we will generate the code
 

00:10:12.860 --> 00:10:14.920
query returns we will generate the code
and to make the match you can you know

00:10:14.920 --> 00:10:14.930
and to make the match you can you know
 

00:10:14.930 --> 00:10:16.990
and to make the match you can you know
you can rename the columns in SQLite all

00:10:16.990 --> 00:10:17.000
you can rename the columns in SQLite all
 

00:10:17.000 --> 00:10:21.400
you can rename the columns in SQLite all
of those things works here now this room

00:10:21.400 --> 00:10:21.410
of those things works here now this room
 

00:10:21.410 --> 00:10:23.290
of those things works here now this room
does everything automatic about this

00:10:23.290 --> 00:10:23.300
does everything automatic about this
 

00:10:23.300 --> 00:10:25.389
does everything automatic about this
sometimes you have clauses we don't know

00:10:25.389 --> 00:10:25.399
sometimes you have clauses we don't know
 

00:10:25.399 --> 00:10:27.730
sometimes you have clauses we don't know
about now what they might kill to talk

00:10:27.730 --> 00:10:27.740
about now what they might kill to talk
 

00:10:27.740 --> 00:10:28.449
about now what they might kill to talk
about them

00:10:28.449 --> 00:10:28.459
about them
 

00:10:28.459 --> 00:10:30.340
about them
how do we expand room kill right thank

00:10:30.340 --> 00:10:30.350
how do we expand room kill right thank
 

00:10:30.350 --> 00:10:32.710
how do we expand room kill right thank
you so let's talk about and something a

00:10:32.710 --> 00:10:32.720
you so let's talk about and something a
 

00:10:32.720 --> 00:10:35.110
you so let's talk about and something a
little bit more interesting going back

00:10:35.110 --> 00:10:35.120
little bit more interesting going back
 

00:10:35.120 --> 00:10:37.509
little bit more interesting going back
to this Nancy do object that has one ad

00:10:37.509 --> 00:10:37.519
to this Nancy do object that has one ad
 

00:10:37.519 --> 00:10:40.210
to this Nancy do object that has one ad
integer field and two strings these are

00:10:40.210 --> 00:10:40.220
integer field and two strings these are
 

00:10:40.220 --> 00:10:42.009
integer field and two strings these are
primitive types that are directly

00:10:42.009 --> 00:10:42.019
primitive types that are directly
 

00:10:42.019 --> 00:10:43.600
primitive types that are directly
supported by the underlying SQLite

00:10:43.600 --> 00:10:43.610
supported by the underlying SQLite
 

00:10:43.610 --> 00:10:46.059
supported by the underlying SQLite
database what happens if we want to add

00:10:46.059 --> 00:10:46.069
database what happens if we want to add
 

00:10:46.069 --> 00:10:49.269
database what happens if we want to add
a field of a type that is not directly

00:10:49.269 --> 00:10:49.279
a field of a type that is not directly
 

00:10:49.279 --> 00:10:51.220
a field of a type that is not directly
supported by skew lights such as Java

00:10:51.220 --> 00:10:51.230
supported by skew lights such as Java
 

00:10:51.230 --> 00:10:54.069
supported by skew lights such as Java
util date in this case at compile time

00:10:54.069 --> 00:10:54.079
util date in this case at compile time
 

00:10:54.079 --> 00:10:56.259
util date in this case at compile time
room is going to tell us well I can't

00:10:56.259 --> 00:10:56.269
room is going to tell us well I can't
 

00:10:56.269 --> 00:10:58.269
room is going to tell us well I can't
really figure out how to save this you

00:10:58.269 --> 00:10:58.279
really figure out how to save this you
 

00:10:58.279 --> 00:11:00.550
really figure out how to save this you
need to help me out and the way you help

00:11:00.550 --> 00:11:00.560
need to help me out and the way you help
 

00:11:00.560 --> 00:11:03.579
need to help me out and the way you help
out in this case is provide cue methods

00:11:03.579 --> 00:11:03.589
out in this case is provide cue methods
 

00:11:03.589 --> 00:11:06.970
out in this case is provide cue methods
to take your original data

00:11:06.970 --> 00:11:06.980
to take your original data
 

00:11:06.980 --> 00:11:09.040
to take your original data
versus to something that sqf can store

00:11:09.040 --> 00:11:09.050
versus to something that sqf can store
 

00:11:09.050 --> 00:11:11.769
versus to something that sqf can store
so that is going into the database and

00:11:11.769 --> 00:11:11.779
so that is going into the database and
 

00:11:11.779 --> 00:11:14.230
so that is going into the database and
on the way out when you're doing the

00:11:14.230 --> 00:11:14.240
on the way out when you're doing the
 

00:11:14.240 --> 00:11:16.389
on the way out when you're doing the
queries convert back from that

00:11:16.389 --> 00:11:16.399
queries convert back from that
 

00:11:16.399 --> 00:11:18.340
queries convert back from that
representation in the database to your

00:11:18.340 --> 00:11:18.350
representation in the database to your
 

00:11:18.350 --> 00:11:21.100
representation in the database to your
original data type you implement these

00:11:21.100 --> 00:11:21.110
original data type you implement these
 

00:11:21.110 --> 00:11:22.870
original data type you implement these
two method in this particular case we

00:11:22.870 --> 00:11:22.880
two method in this particular case we
 

00:11:22.880 --> 00:11:24.879
two method in this particular case we
are converting data long and back from

00:11:24.879 --> 00:11:24.889
are converting data long and back from
 

00:11:24.889 --> 00:11:27.730
are converting data long and back from
long to date we annotate them as it said

00:11:27.730 --> 00:11:27.740
long to date we annotate them as it said
 

00:11:27.740 --> 00:11:30.550
long to date we annotate them as it said
we love annotations we use the type

00:11:30.550 --> 00:11:30.560
we love annotations we use the type
 

00:11:30.560 --> 00:11:32.050
we love annotations we use the type
conversion annotations on these two

00:11:32.050 --> 00:11:32.060
conversion annotations on these two
 

00:11:32.060 --> 00:11:33.819
conversion annotations on these two
methods and then we take this my

00:11:33.819 --> 00:11:33.829
methods and then we take this my
 

00:11:33.829 --> 00:11:37.030
methods and then we take this my
conversions class and use the type

00:11:37.030 --> 00:11:37.040
conversions class and use the type
 

00:11:37.040 --> 00:11:40.300
conversions class and use the type
converters annotation pointing to these

00:11:40.300 --> 00:11:40.310
converters annotation pointing to these
 

00:11:40.310 --> 00:11:41.889
converters annotation pointing to these
two methods pointing essentially to this

00:11:41.889 --> 00:11:41.899
two methods pointing essentially to this
 

00:11:41.899 --> 00:11:43.900
two methods pointing essentially to this
class that has our conversion methods

00:11:43.900 --> 00:11:43.910
class that has our conversion methods
 

00:11:43.910 --> 00:11:46.629
class that has our conversion methods
you can put it directly on the field in

00:11:46.629 --> 00:11:46.639
you can put it directly on the field in
 

00:11:46.639 --> 00:11:49.000
you can put it directly on the field in
your entity object you can put it on the

00:11:49.000 --> 00:11:49.010
your entity object you can put it on the
 

00:11:49.010 --> 00:11:51.610
your entity object you can put it on the
entity object itself you can put it onto

00:11:51.610 --> 00:11:51.620
entity object itself you can put it onto
 

00:11:51.620 --> 00:11:54.579
entity object itself you can put it onto
your there data access object class or

00:11:54.579 --> 00:11:54.589
your there data access object class or
 

00:11:54.589 --> 00:11:56.949
your there data access object class or
the specific query in it or you can put

00:11:56.949 --> 00:11:56.959
the specific query in it or you can put
 

00:11:56.959 --> 00:11:58.420
the specific query in it or you can put
it on your database class no matter

00:11:58.420 --> 00:11:58.430
it on your database class no matter
 

00:11:58.430 --> 00:12:00.670
it on your database class no matter
where you put it at compile time and at

00:12:00.670 --> 00:12:00.680
where you put it at compile time and at
 

00:12:00.680 --> 00:12:02.710
where you put it at compile time and at
runtime room will do the right thing to

00:12:02.710 --> 00:12:02.720
runtime room will do the right thing to
 

00:12:02.720 --> 00:12:06.910
runtime room will do the right thing to
find those two methods now with this we

00:12:06.910 --> 00:12:06.920
find those two methods now with this we
 

00:12:06.920 --> 00:12:09.310
find those two methods now with this we
can write a query that finds the list of

00:12:09.310 --> 00:12:09.320
can write a query that finds the list of
 

00:12:09.320 --> 00:12:10.840
can write a query that finds the list of
all the fields that were posted between

00:12:10.840 --> 00:12:10.850
all the fields that were posted between
 

00:12:10.850 --> 00:12:14.500
all the fields that were posted between
two specific dates from and two so here

00:12:14.500 --> 00:12:14.510
two specific dates from and two so here
 

00:12:14.510 --> 00:12:17.019
two specific dates from and two so here
since we are accessing the from and to

00:12:17.019 --> 00:12:17.029
since we are accessing the from and to
 

00:12:17.029 --> 00:12:20.290
since we are accessing the from and to
fields or columns in the database that

00:12:20.290 --> 00:12:20.300
fields or columns in the database that
 

00:12:20.300 --> 00:12:24.069
fields or columns in the database that
are defined as long when the database

00:12:24.069 --> 00:12:24.079
are defined as long when the database
 

00:12:24.079 --> 00:12:26.769
are defined as long when the database
table is created you don't really want

00:12:26.769 --> 00:12:26.779
table is created you don't really want
 

00:12:26.779 --> 00:12:29.170
table is created you don't really want
to use long as the implementation detail

00:12:29.170 --> 00:12:29.180
to use long as the implementation detail
 

00:12:29.180 --> 00:12:32.319
to use long as the implementation detail
since you are using the date class for

00:12:32.319 --> 00:12:32.329
since you are using the date class for
 

00:12:32.329 --> 00:12:35.949
since you are using the date class for
your entity data field you want to use

00:12:35.949 --> 00:12:35.959
your entity data field you want to use
 

00:12:35.959 --> 00:12:38.170
your entity data field you want to use
the date objects in the query itself and

00:12:38.170 --> 00:12:38.180
the date objects in the query itself and
 

00:12:38.180 --> 00:12:40.030
the date objects in the query itself and
this is what you do here and when the

00:12:40.030 --> 00:12:40.040
this is what you do here and when the
 

00:12:40.040 --> 00:12:42.910
this is what you do here and when the
query runs these two values from and two

00:12:42.910 --> 00:12:42.920
query runs these two values from and two
 

00:12:42.920 --> 00:12:44.620
query runs these two values from and two
are going to be converted to long the

00:12:44.620 --> 00:12:44.630
are going to be converted to long the
 

00:12:44.630 --> 00:12:47.019
are going to be converted to long the
query will run and on the way back when

00:12:47.019 --> 00:12:47.029
query will run and on the way back when
 

00:12:47.029 --> 00:12:50.110
query will run and on the way back when
room construct and fills these feed

00:12:50.110 --> 00:12:50.120
room construct and fills these feed
 

00:12:50.120 --> 00:12:52.240
room construct and fills these feed
objects is going to convert back from

00:12:52.240 --> 00:12:52.250
objects is going to convert back from
 

00:12:52.250 --> 00:12:53.160
objects is going to convert back from
long to days

00:12:53.160 --> 00:12:53.170
long to days
 

00:12:53.170 --> 00:12:56.439
long to days
now let's talk about even more

00:12:56.439 --> 00:12:56.449
now let's talk about even more
 

00:12:56.449 --> 00:12:59.860
now let's talk about even more
complicated stuff what happens if you

00:12:59.860 --> 00:12:59.870
complicated stuff what happens if you
 

00:12:59.870 --> 00:13:03.670
complicated stuff what happens if you
have a class ERG in your kind of data

00:13:03.670 --> 00:13:03.680
have a class ERG in your kind of data
 

00:13:03.680 --> 00:13:09.759
have a class ERG in your kind of data
model universe that has object graph

00:13:09.759 --> 00:13:09.769
model universe that has object graph
 

00:13:09.769 --> 00:13:12.280
model universe that has object graph
that is not flat in this case we are

00:13:12.280 --> 00:13:12.290
that is not flat in this case we are
 

00:13:12.290 --> 00:13:14.259
that is not flat in this case we are
adding a location object that has two

00:13:14.259 --> 00:13:14.269
adding a location object that has two
 

00:13:14.269 --> 00:13:16.809
adding a location object that has two
double fields latitude longitude into

00:13:16.809 --> 00:13:16.819
double fields latitude longitude into
 

00:13:16.819 --> 00:13:19.389
double fields latitude longitude into
our feed now what happens at compile

00:13:19.389 --> 00:13:19.399
our feed now what happens at compile
 

00:13:19.399 --> 00:13:20.350
our feed now what happens at compile
time

00:13:20.350 --> 00:13:20.360
time
 

00:13:20.360 --> 00:13:22.389
time
once again at compile time you need to

00:13:22.389 --> 00:13:22.399
once again at compile time you need to
 

00:13:22.399 --> 00:13:26.829
once again at compile time you need to
tell room how to store this field since

00:13:26.829 --> 00:13:26.839
tell room how to store this field since
 

00:13:26.839 --> 00:13:29.470
tell room how to store this field since
especially here it not even it's not a

00:13:29.470 --> 00:13:29.480
especially here it not even it's not a
 

00:13:29.480 --> 00:13:31.749
especially here it not even it's not a
primitive type but it's the types ax has

00:13:31.749 --> 00:13:31.759
primitive type but it's the types ax has
 

00:13:31.759 --> 00:13:34.569
primitive type but it's the types ax has
subfields in it so one option is going

00:13:34.569 --> 00:13:34.579
subfields in it so one option is going
 

00:13:34.579 --> 00:13:38.049
subfields in it so one option is going
back to our type adaptors you can do

00:13:38.049 --> 00:13:38.059
back to our type adaptors you can do
 

00:13:38.059 --> 00:13:39.970
back to our type adaptors you can do
something like take latitude and

00:13:39.970 --> 00:13:39.980
something like take latitude and
 

00:13:39.980 --> 00:13:42.220
something like take latitude and
longitude and convert them into a single

00:13:42.220 --> 00:13:42.230
longitude and convert them into a single
 

00:13:42.230 --> 00:13:44.049
longitude and convert them into a single
concatenated string with some kind of

00:13:44.049 --> 00:13:44.059
concatenated string with some kind of
 

00:13:44.059 --> 00:13:46.419
concatenated string with some kind of
let's say semicolon as a separator on

00:13:46.419 --> 00:13:46.429
let's say semicolon as a separator on
 

00:13:46.429 --> 00:13:48.729
let's say semicolon as a separator on
the way in and on the way back it's

00:13:48.729 --> 00:13:48.739
the way in and on the way back it's
 

00:13:48.739 --> 00:13:51.189
the way in and on the way back it's
going to be some kind of a split where

00:13:51.189 --> 00:13:51.199
going to be some kind of a split where
 

00:13:51.199 --> 00:13:52.539
going to be some kind of a split where
the string goes back through these two

00:13:52.539 --> 00:13:52.549
the string goes back through these two
 

00:13:52.549 --> 00:13:55.329
the string goes back through these two
doubles or you can go to do something

00:13:55.329 --> 00:13:55.339
doubles or you can go to do something
 

00:13:55.339 --> 00:13:57.579
doubles or you can go to do something
like bit masking and bit shifting to try

00:13:57.579 --> 00:13:57.589
like bit masking and bit shifting to try
 

00:13:57.589 --> 00:13:59.350
like bit masking and bit shifting to try
and convert these two doubles encode

00:13:59.350 --> 00:13:59.360
and convert these two doubles encode
 

00:13:59.360 --> 00:14:03.669
and convert these two doubles encode
them in one long field this is going to

00:14:03.669 --> 00:14:03.679
them in one long field this is going to
 

00:14:03.679 --> 00:14:06.369
them in one long field this is going to
be hard to query even for this simple

00:14:06.369 --> 00:14:06.379
be hard to query even for this simple
 

00:14:06.379 --> 00:14:08.739
be hard to query even for this simple
case when we only have two doubles that

00:14:08.739 --> 00:14:08.749
case when we only have two doubles that
 

00:14:08.749 --> 00:14:10.389
case when we only have two doubles that
we are trying to encode we're trying to

00:14:10.389 --> 00:14:10.399
we are trying to encode we're trying to
 

00:14:10.399 --> 00:14:12.720
we are trying to encode we're trying to
kind of compact it into one field and

00:14:12.720 --> 00:14:12.730
kind of compact it into one field and
 

00:14:12.730 --> 00:14:16.119
kind of compact it into one field and
the more complicated the data structure

00:14:16.119 --> 00:14:16.129
the more complicated the data structure
 

00:14:16.129 --> 00:14:18.910
the more complicated the data structure
is the harder it becomes to use type

00:14:18.910 --> 00:14:18.920
is the harder it becomes to use type
 

00:14:18.920 --> 00:14:22.359
is the harder it becomes to use type
adaptors for these cases another option

00:14:22.359 --> 00:14:22.369
adaptors for these cases another option
 

00:14:22.369 --> 00:14:24.970
adaptors for these cases another option
is to say that I'm going to flatten

00:14:24.970 --> 00:14:24.980
is to say that I'm going to flatten
 

00:14:24.980 --> 00:14:27.309
is to say that I'm going to flatten
everything that you are going to flatten

00:14:27.309 --> 00:14:27.319
everything that you are going to flatten
 

00:14:27.319 --> 00:14:29.590
everything that you are going to flatten
everything for us so instead of having

00:14:29.590 --> 00:14:29.600
everything for us so instead of having
 

00:14:29.600 --> 00:14:32.259
everything for us so instead of having
the location data field in your data

00:14:32.259 --> 00:14:32.269
the location data field in your data
 

00:14:32.269 --> 00:14:34.509
the location data field in your data
entity you are essentially flattening

00:14:34.509 --> 00:14:34.519
entity you are essentially flattening
 

00:14:34.519 --> 00:14:36.369
entity you are essentially flattening
all the fields from the location class

00:14:36.369 --> 00:14:36.379
all the fields from the location class
 

00:14:36.379 --> 00:14:39.759
all the fields from the location class
into the main seed class and then room

00:14:39.759 --> 00:14:39.769
into the main seed class and then room
 

00:14:39.769 --> 00:14:41.319
into the main seed class and then room
is going to create this to latitude

00:14:41.319 --> 00:14:41.329
is going to create this to latitude
 

00:14:41.329 --> 00:14:44.409
is going to create this to latitude
longitude columns which works but first

00:14:44.409 --> 00:14:44.419
longitude columns which works but first
 

00:14:44.419 --> 00:14:46.539
longitude columns which works but first
of all you lose the encapsulation now

00:14:46.539 --> 00:14:46.549
of all you lose the encapsulation now
 

00:14:46.549 --> 00:14:48.129
of all you lose the encapsulation now
you just look at the definition of your

00:14:48.129 --> 00:14:48.139
you just look at the definition of your
 

00:14:48.139 --> 00:14:51.069
you just look at the definition of your
data class of this feed object or

00:14:51.069 --> 00:14:51.079
data class of this feed object or
 

00:14:51.079 --> 00:14:53.949
data class of this feed object or
somebody else in your in your project

00:14:53.949 --> 00:14:53.959
somebody else in your in your project
 

00:14:53.959 --> 00:14:55.720
somebody else in your in your project
looks at that and it's not really clear

00:14:55.720 --> 00:14:55.730
looks at that and it's not really clear
 

00:14:55.730 --> 00:14:57.669
looks at that and it's not really clear
that these two objects kind of represent

00:14:57.669 --> 00:14:57.679
that these two objects kind of represent
 

00:14:57.679 --> 00:15:00.759
that these two objects kind of represent
one single entity and another thing is

00:15:00.759 --> 00:15:00.769
one single entity and another thing is
 

00:15:00.769 --> 00:15:02.530
one single entity and another thing is
just because you want to persist this

00:15:02.530 --> 00:15:02.540
just because you want to persist this
 

00:15:02.540 --> 00:15:05.259
just because you want to persist this
object and later on retrieve it why

00:15:05.259 --> 00:15:05.269
object and later on retrieve it why
 

00:15:05.269 --> 00:15:07.929
object and later on retrieve it why
should you be changing the definition of

00:15:07.929 --> 00:15:07.939
should you be changing the definition of
 

00:15:07.939 --> 00:15:10.530
should you be changing the definition of
your data classes that's not good

00:15:10.530 --> 00:15:10.540
your data classes that's not good
 

00:15:10.540 --> 00:15:14.739
your data classes that's not good
instead there's another option which is

00:15:14.739 --> 00:15:14.749
instead there's another option which is
 

00:15:14.749 --> 00:15:18.129
instead there's another option which is
also not ideal you can say we have a few

00:15:18.129 --> 00:15:18.139
also not ideal you can say we have a few
 

00:15:18.139 --> 00:15:20.409
also not ideal you can say we have a few
data classes why don't we store these

00:15:20.409 --> 00:15:20.419
data classes why don't we store these
 

00:15:20.419 --> 00:15:22.329
data classes why don't we store these
objects each one in its own separate

00:15:22.329 --> 00:15:22.339
objects each one in its own separate
 

00:15:22.339 --> 00:15:25.090
objects each one in its own separate
database table so we have our seed

00:15:25.090 --> 00:15:25.100
database table so we have our seed
 

00:15:25.100 --> 00:15:27.879
database table so we have our seed
object with ID title subtitle and posted

00:15:27.879 --> 00:15:27.889
object with ID title subtitle and posted
 

00:15:27.889 --> 00:15:29.650
object with ID title subtitle and posted
at the date and then we have the

00:15:29.650 --> 00:15:29.660
at the date and then we have the
 

00:15:29.660 --> 00:15:32.199
at the date and then we have the
location latitude longitude now in order

00:15:32.199 --> 00:15:32.209
location latitude longitude now in order
 

00:15:32.209 --> 00:15:33.290
location latitude longitude now in order
to connect them

00:15:33.290 --> 00:15:33.300
to connect them
 

00:15:33.300 --> 00:15:35.240
to connect them
not when you say but when you retrieve

00:15:35.240 --> 00:15:35.250
not when you say but when you retrieve
 

00:15:35.250 --> 00:15:37.430
not when you say but when you retrieve
them in order to connect the location

00:15:37.430 --> 00:15:37.440
them in order to connect the location
 

00:15:37.440 --> 00:15:39.680
them in order to connect the location
back to back to its feed you need to

00:15:39.680 --> 00:15:39.690
back to back to its feed you need to
 

00:15:39.690 --> 00:15:42.769
back to back to its feed you need to
have the primary key the CDD so that

00:15:42.769 --> 00:15:42.779
have the primary key the CDD so that
 

00:15:42.779 --> 00:15:45.350
have the primary key the CDD so that
they are combined together once again it

00:15:45.350 --> 00:15:45.360
they are combined together once again it
 

00:15:45.360 --> 00:15:49.730
they are combined together once again it
works first of all yet another table is

00:15:49.730 --> 00:15:49.740
works first of all yet another table is
 

00:15:49.740 --> 00:15:52.550
works first of all yet another table is
not very clean but also going back to

00:15:52.550 --> 00:15:52.560
not very clean but also going back to
 

00:15:52.560 --> 00:15:54.560
not very clean but also going back to
what I mentioned before why should you

00:15:54.560 --> 00:15:54.570
what I mentioned before why should you
 

00:15:54.570 --> 00:15:57.980
what I mentioned before why should you
be forced to change and tweak the

00:15:57.980 --> 00:15:57.990
be forced to change and tweak the
 

00:15:57.990 --> 00:15:59.840
be forced to change and tweak the
definition of your data model classes

00:15:59.840 --> 00:15:59.850
definition of your data model classes
 

00:15:59.850 --> 00:16:02.600
definition of your data model classes
just because you want to persist them so

00:16:02.600 --> 00:16:02.610
just because you want to persist them so
 

00:16:02.610 --> 00:16:06.230
just because you want to persist them so
what would be ideal is that you have

00:16:06.230 --> 00:16:06.240
what would be ideal is that you have
 

00:16:06.240 --> 00:16:08.090
what would be ideal is that you have
your clean separation of how you define

00:16:08.090 --> 00:16:08.100
your clean separation of how you define
 

00:16:08.100 --> 00:16:12.139
your clean separation of how you define
your data process but at some time the

00:16:12.139 --> 00:16:12.149
your data process but at some time the
 

00:16:12.149 --> 00:16:15.290
your data process but at some time the
way the feed object is persistent is in

00:16:15.290 --> 00:16:15.300
way the feed object is persistent is in
 

00:16:15.300 --> 00:16:17.630
way the feed object is persistent is in
one flatten table so essentially the

00:16:17.630 --> 00:16:17.640
one flatten table so essentially the
 

00:16:17.640 --> 00:16:19.940
one flatten table so essentially the
latitude and longitude fields from the

00:16:19.940 --> 00:16:19.950
latitude and longitude fields from the
 

00:16:19.950 --> 00:16:21.769
latitude and longitude fields from the
location are flattened into the same

00:16:21.769 --> 00:16:21.779
location are flattened into the same
 

00:16:21.779 --> 00:16:24.650
location are flattened into the same
table and the way you do it is with this

00:16:24.650 --> 00:16:24.660
table and the way you do it is with this
 

00:16:24.660 --> 00:16:27.319
table and the way you do it is with this
embedded annotation at compile time and

00:16:27.319 --> 00:16:27.329
embedded annotation at compile time and
 

00:16:27.329 --> 00:16:29.360
embedded annotation at compile time and
at runtime room is going to figure out

00:16:29.360 --> 00:16:29.370
at runtime room is going to figure out
 

00:16:29.370 --> 00:16:32.720
at runtime room is going to figure out
how to flatten your entire turkey into

00:16:32.720 --> 00:16:32.730
how to flatten your entire turkey into
 

00:16:32.730 --> 00:16:36.259
how to flatten your entire turkey into
this one table now you can write a query

00:16:36.259 --> 00:16:36.269
this one table now you can write a query
 

00:16:36.269 --> 00:16:38.360
this one table now you can write a query
like this in your data access object we

00:16:38.360 --> 00:16:38.370
like this in your data access object we
 

00:16:38.370 --> 00:16:41.780
like this in your data access object we
are going to select all the feeds in the

00:16:41.780 --> 00:16:41.790
are going to select all the feeds in the
 

00:16:41.790 --> 00:16:44.680
are going to select all the feeds in the
specific geographical rectangular area

00:16:44.680 --> 00:16:44.690
specific geographical rectangular area
 

00:16:44.690 --> 00:16:46.730
specific geographical rectangular area
as you can see we're referencing

00:16:46.730 --> 00:16:46.740
as you can see we're referencing
 

00:16:46.740 --> 00:16:49.280
as you can see we're referencing
latitude and longitude in the query

00:16:49.280 --> 00:16:49.290
latitude and longitude in the query
 

00:16:49.290 --> 00:16:51.230
latitude and longitude in the query
directly they are not in a separate

00:16:51.230 --> 00:16:51.240
directly they are not in a separate
 

00:16:51.240 --> 00:16:53.690
directly they are not in a separate
table and you are just using the same

00:16:53.690 --> 00:16:53.700
table and you are just using the same
 

00:16:53.700 --> 00:16:57.769
table and you are just using the same
names for the database columns as the

00:16:57.769 --> 00:16:57.779
names for the database columns as the
 

00:16:57.779 --> 00:17:00.199
names for the database columns as the
attributes in your location object you

00:17:00.199 --> 00:17:00.209
attributes in your location object you
 

00:17:00.209 --> 00:17:01.870
attributes in your location object you
can write a query like this to select

00:17:01.870 --> 00:17:01.880
can write a query like this to select
 

00:17:01.880 --> 00:17:05.540
can write a query like this to select
the location for the specific feed based

00:17:05.540 --> 00:17:05.550
the location for the specific feed based
 

00:17:05.550 --> 00:17:08.270
the location for the specific feed based
on the CID and room is going to figure

00:17:08.270 --> 00:17:08.280
on the CID and room is going to figure
 

00:17:08.280 --> 00:17:10.699
on the CID and room is going to figure
out that while it needs to fetch the

00:17:10.699 --> 00:17:10.709
out that while it needs to fetch the
 

00:17:10.709 --> 00:17:13.040
out that while it needs to fetch the
entire row from the database it only

00:17:13.040 --> 00:17:13.050
entire row from the database it only
 

00:17:13.050 --> 00:17:15.650
entire row from the database it only
needs to create and feel the location

00:17:15.650 --> 00:17:15.660
needs to create and feel the location
 

00:17:15.660 --> 00:17:17.689
needs to create and feel the location
object because this is what this time

00:17:17.689 --> 00:17:17.699
object because this is what this time
 

00:17:17.699 --> 00:17:20.030
object because this is what this time
method wants to return or if you want to

00:17:20.030 --> 00:17:20.040
method wants to return or if you want to
 

00:17:20.040 --> 00:17:23.059
method wants to return or if you want to
be more specific you can say I only want

00:17:23.059 --> 00:17:23.069
be more specific you can say I only want
 

00:17:23.069 --> 00:17:24.470
be more specific you can say I only want
you to fetch the latitude and longitude

00:17:24.470 --> 00:17:24.480
you to fetch the latitude and longitude
 

00:17:24.480 --> 00:17:26.559
you to fetch the latitude and longitude
from the table

00:17:26.559 --> 00:17:26.569
from the table
 

00:17:26.569 --> 00:17:29.900
from the table
the last part about embedded objects is

00:17:29.900 --> 00:17:29.910
the last part about embedded objects is
 

00:17:29.910 --> 00:17:33.440
the last part about embedded objects is
what happens when you have more than one

00:17:33.440 --> 00:17:33.450
what happens when you have more than one
 

00:17:33.450 --> 00:17:36.700
what happens when you have more than one
field of the same kind of nested class

00:17:36.700 --> 00:17:36.710
field of the same kind of nested class
 

00:17:36.710 --> 00:17:39.140
field of the same kind of nested class
so in this case we want to store two

00:17:39.140 --> 00:17:39.150
so in this case we want to store two
 

00:17:39.150 --> 00:17:41.510
so in this case we want to store two
locations so what is going to happen at

00:17:41.510 --> 00:17:41.520
locations so what is going to happen at
 

00:17:41.520 --> 00:17:44.690
locations so what is going to happen at
compile time room is going to say as I

00:17:44.690 --> 00:17:44.700
compile time room is going to say as I
 

00:17:44.700 --> 00:17:47.210
compile time room is going to say as I
was flattening these fields in two

00:17:47.210 --> 00:17:47.220
was flattening these fields in two
 

00:17:47.220 --> 00:17:50.270
was flattening these fields in two
one database table definition I see that

00:17:50.270 --> 00:17:50.280
one database table definition I see that
 

00:17:50.280 --> 00:17:52.610
one database table definition I see that
the same latitude field is defined by

00:17:52.610 --> 00:17:52.620
the same latitude field is defined by
 

00:17:52.620 --> 00:17:55.789
the same latitude field is defined by
two objects and since SQLite doesn't

00:17:55.789 --> 00:17:55.799
two objects and since SQLite doesn't
 

00:17:55.799 --> 00:17:59.690
two objects and since SQLite doesn't
support having two columns with the same

00:17:59.690 --> 00:17:59.700
support having two columns with the same
 

00:17:59.700 --> 00:18:02.060
support having two columns with the same
name in the same database table it's

00:18:02.060 --> 00:18:02.070
name in the same database table it's
 

00:18:02.070 --> 00:18:03.740
name in the same database table it's
going to fail as an error not as a

00:18:03.740 --> 00:18:03.750
going to fail as an error not as a
 

00:18:03.750 --> 00:18:08.779
going to fail as an error not as a
warning and what you need to do is in

00:18:08.779 --> 00:18:08.789
warning and what you need to do is in
 

00:18:08.789 --> 00:18:11.060
warning and what you need to do is in
case you do want to have something like

00:18:11.060 --> 00:18:11.070
case you do want to have something like
 

00:18:11.070 --> 00:18:12.950
case you do want to have something like
this to have in this particular case two

00:18:12.950 --> 00:18:12.960
this to have in this particular case two
 

00:18:12.960 --> 00:18:15.620
this to have in this particular case two
locations you want to use the prefix

00:18:15.620 --> 00:18:15.630
locations you want to use the prefix
 

00:18:15.630 --> 00:18:18.919
locations you want to use the prefix
attribute on the embedded annotation at

00:18:18.919 --> 00:18:18.929
attribute on the embedded annotation at
 

00:18:18.929 --> 00:18:21.620
attribute on the embedded annotation at
compile time and at run time it's going

00:18:21.620 --> 00:18:21.630
compile time and at run time it's going
 

00:18:21.630 --> 00:18:24.680
compile time and at run time it's going
to be used as roommates flattening the

00:18:24.680 --> 00:18:24.690
to be used as roommates flattening the
 

00:18:24.690 --> 00:18:27.440
to be used as roommates flattening the
data graph definition it's going to use

00:18:27.440 --> 00:18:27.450
data graph definition it's going to use
 

00:18:27.450 --> 00:18:29.659
data graph definition it's going to use
these prefix to create latitude

00:18:29.659 --> 00:18:29.669
these prefix to create latitude
 

00:18:29.669 --> 00:18:31.909
these prefix to create latitude
longitude for the original for the first

00:18:31.909 --> 00:18:31.919
longitude for the original for the first
 

00:18:31.919 --> 00:18:34.760
longitude for the original for the first
location and seen what if you'd still

00:18:34.760 --> 00:18:34.770
location and seen what if you'd still
 

00:18:34.770 --> 00:18:37.840
location and seen what if you'd still
longitude for the second location object

00:18:37.840 --> 00:18:37.850
longitude for the second location object
 

00:18:37.850 --> 00:18:40.250
longitude for the second location object
now let's talk about observer ability

00:18:40.250 --> 00:18:40.260
now let's talk about observer ability
 

00:18:40.260 --> 00:18:42.289
now let's talk about observer ability
for those of you who have listened to

00:18:42.289 --> 00:18:42.299
for those of you who have listened to
 

00:18:42.299 --> 00:18:45.260
for those of you who have listened to
yesterday's introduction session and who

00:18:45.260 --> 00:18:45.270
yesterday's introduction session and who
 

00:18:45.270 --> 00:18:47.570
yesterday's introduction session and who
have been here at them earlier in the

00:18:47.570 --> 00:18:47.580
have been here at them earlier in the
 

00:18:47.580 --> 00:18:50.720
have been here at them earlier in the
day to listen to the life cycle live

00:18:50.720 --> 00:18:50.730
day to listen to the life cycle live
 

00:18:50.730 --> 00:18:54.289
day to listen to the life cycle live
data view model we want to talk about

00:18:54.289 --> 00:18:54.299
data view model we want to talk about
 

00:18:54.299 --> 00:18:57.890
data view model we want to talk about
observability so this is a simple query

00:18:57.890 --> 00:18:57.900
observability so this is a simple query
 

00:18:57.900 --> 00:19:00.039
observability so this is a simple query
that returns the list of feeds based on

00:19:00.039 --> 00:19:00.049
that returns the list of feeds based on
 

00:19:00.049 --> 00:19:03.830
that returns the list of feeds based on
particular query this is kind of a

00:19:03.830 --> 00:19:03.840
particular query this is kind of a
 

00:19:03.840 --> 00:19:06.080
particular query this is kind of a
snapshot a point in time where you have

00:19:06.080 --> 00:19:06.090
snapshot a point in time where you have
 

00:19:06.090 --> 00:19:08.870
snapshot a point in time where you have
run this query and however many seeds it

00:19:08.870 --> 00:19:08.880
run this query and however many seeds it
 

00:19:08.880 --> 00:19:12.500
run this query and however many seeds it
returns it represents the state of your

00:19:12.500 --> 00:19:12.510
returns it represents the state of your
 

00:19:12.510 --> 00:19:14.450
returns it represents the state of your
data universe at that particular moment

00:19:14.450 --> 00:19:14.460
data universe at that particular moment
 

00:19:14.460 --> 00:19:18.260
data universe at that particular moment
what happens if your data is dynamic it

00:19:18.260 --> 00:19:18.270
what happens if your data is dynamic it
 

00:19:18.270 --> 00:19:20.270
what happens if your data is dynamic it
can be manipulated directly by your

00:19:20.270 --> 00:19:20.280
can be manipulated directly by your
 

00:19:20.280 --> 00:19:22.880
can be manipulated directly by your
users in the app or maybe it's push to

00:19:22.880 --> 00:19:22.890
users in the app or maybe it's push to
 

00:19:22.890 --> 00:19:25.100
users in the app or maybe it's push to
pull them from the server so in this

00:19:25.100 --> 00:19:25.110
pull them from the server so in this
 

00:19:25.110 --> 00:19:27.830
pull them from the server so in this
case if one of the feed changes in the

00:19:27.830 --> 00:19:27.840
case if one of the feed changes in the
 

00:19:27.840 --> 00:19:30.080
case if one of the feed changes in the
database when you add new feeds when you

00:19:30.080 --> 00:19:30.090
database when you add new feeds when you
 

00:19:30.090 --> 00:19:32.120
database when you add new feeds when you
delete existing feeds that match this

00:19:32.120 --> 00:19:32.130
delete existing feeds that match this
 

00:19:32.130 --> 00:19:35.600
delete existing feeds that match this
query every single time to reflect these

00:19:35.600 --> 00:19:35.610
query every single time to reflect these
 

00:19:35.610 --> 00:19:38.210
query every single time to reflect these
changes back onto the screen you would

00:19:38.210 --> 00:19:38.220
changes back onto the screen you would
 

00:19:38.220 --> 00:19:42.289
changes back onto the screen you would
need to refresh this query explicitly to

00:19:42.289 --> 00:19:42.299
need to refresh this query explicitly to
 

00:19:42.299 --> 00:19:46.270
need to refresh this query explicitly to
run this query again and again instead

00:19:46.270 --> 00:19:46.280
run this query again and again instead
 

00:19:46.280 --> 00:19:49.340
run this query again and again instead
instead of returning list of seeds you

00:19:49.340 --> 00:19:49.350
instead of returning list of seeds you
 

00:19:49.350 --> 00:19:53.029
instead of returning list of seeds you
can wrap this return object it can be a

00:19:53.029 --> 00:19:53.039
can wrap this return object it can be a
 

00:19:53.039 --> 00:19:55.070
can wrap this return object it can be a
single feed or a list of feeds in a live

00:19:55.070 --> 00:19:55.080
single feed or a list of feeds in a live
 

00:19:55.080 --> 00:19:58.250
single feed or a list of feeds in a live
data object this instructs true not only

00:19:58.250 --> 00:19:58.260
data object this instructs true not only
 

00:19:58.260 --> 00:19:59.680
data object this instructs true not only
to fetch it one

00:19:59.680 --> 00:19:59.690
to fetch it one
 

00:19:59.690 --> 00:20:04.119
to fetch it one
but also update the live data the

00:20:04.119 --> 00:20:04.129
but also update the live data the
 

00:20:04.129 --> 00:20:05.769
but also update the live data the
callbacks that you pass to the live data

00:20:05.769 --> 00:20:05.779
callbacks that you pass to the live data
 

00:20:05.779 --> 00:20:07.690
callbacks that you pass to the live data
when you call the dot observe will see

00:20:07.690 --> 00:20:07.700
when you call the dot observe will see
 

00:20:07.700 --> 00:20:10.360
when you call the dot observe will see
it in a few slides every single time any

00:20:10.360 --> 00:20:10.370
it in a few slides every single time any
 

00:20:10.370 --> 00:20:13.299
it in a few slides every single time any
one of the objects that were returned by

00:20:13.299 --> 00:20:13.309
one of the objects that were returned by
 

00:20:13.309 --> 00:20:16.090
one of the objects that were returned by
this query was changed or new objects

00:20:16.090 --> 00:20:16.100
this query was changed or new objects
 

00:20:16.100 --> 00:20:18.009
this query was changed or new objects
were added or existing objects were

00:20:18.009 --> 00:20:18.019
were added or existing objects were
 

00:20:18.019 --> 00:20:19.990
were added or existing objects were
removed from the result of the query and

00:20:19.990 --> 00:20:20.000
removed from the result of the query and
 

00:20:20.000 --> 00:20:23.249
removed from the result of the query and
this is my favorite part by far of an

00:20:23.249 --> 00:20:23.259
this is my favorite part by far of an
 

00:20:23.259 --> 00:20:27.430
this is my favorite part by far of an
architecture components and also we

00:20:27.430 --> 00:20:27.440
architecture components and also we
 

00:20:27.440 --> 00:20:29.980
architecture components and also we
provide support for using flow both from

00:20:29.980 --> 00:20:29.990
provide support for using flow both from
 

00:20:29.990 --> 00:20:35.200
provide support for using flow both from
our X Java tube so let's see like this

00:20:35.200 --> 00:20:35.210
our X Java tube so let's see like this
 

00:20:35.210 --> 00:20:39.940
our X Java tube so let's see like this
one ok so let's see an example of how

00:20:39.940 --> 00:20:39.950
one ok so let's see an example of how
 

00:20:39.950 --> 00:20:42.879
one ok so let's see an example of how
room integrates with the rest of life

00:20:42.879 --> 00:20:42.889
room integrates with the rest of life
 

00:20:42.889 --> 00:20:45.759
room integrates with the rest of life
cycle aware and life cycle where parts

00:20:45.759 --> 00:20:45.769
cycle aware and life cycle where parts
 

00:20:45.769 --> 00:20:48.220
cycle aware and life cycle where parts
of architecture components we're going

00:20:48.220 --> 00:20:48.230
of architecture components we're going
 

00:20:48.230 --> 00:20:49.509
of architecture components we're going
to start with a simple database

00:20:49.509 --> 00:20:49.519
to start with a simple database
 

00:20:49.519 --> 00:20:52.509
to start with a simple database
interface it has one method to load a

00:20:52.509 --> 00:20:52.519
interface it has one method to load a
 

00:20:52.519 --> 00:20:55.930
interface it has one method to load a
data for the specific user and one

00:20:55.930 --> 00:20:55.940
data for the specific user and one
 

00:20:55.940 --> 00:20:57.730
data for the specific user and one
method to save the data the first time

00:20:57.730 --> 00:20:57.740
method to save the data the first time
 

00:20:57.740 --> 00:20:59.980
method to save the data the first time
is going to be a simple insert and then

00:20:59.980 --> 00:20:59.990
is going to be a simple insert and then
 

00:20:59.990 --> 00:21:01.930
is going to be a simple insert and then
as the data changes is going to be an

00:21:01.930 --> 00:21:01.940
as the data changes is going to be an
 

00:21:01.940 --> 00:21:05.110
as the data changes is going to be an
update or replace as you can see here

00:21:05.110 --> 00:21:05.120
update or replace as you can see here
 

00:21:05.120 --> 00:21:06.669
update or replace as you can see here
instead of returning the user object

00:21:06.669 --> 00:21:06.679
instead of returning the user object
 

00:21:06.679 --> 00:21:08.680
instead of returning the user object
directly in our load method we're

00:21:08.680 --> 00:21:08.690
directly in our load method we're
 

00:21:08.690 --> 00:21:10.659
directly in our load method we're
returning a live data that wraps the

00:21:10.659 --> 00:21:10.669
returning a live data that wraps the
 

00:21:10.669 --> 00:21:13.810
returning a live data that wraps the
information about this user now we're

00:21:13.810 --> 00:21:13.820
information about this user now we're
 

00:21:13.820 --> 00:21:15.639
information about this user now we're
going to set up the data binding to

00:21:15.639 --> 00:21:15.649
going to set up the data binding to
 

00:21:15.649 --> 00:21:17.259
going to set up the data binding to
actually show the information on that

00:21:17.259 --> 00:21:17.269
actually show the information on that
 

00:21:17.269 --> 00:21:17.619
actually show the information on that
user

00:21:17.619 --> 00:21:17.629
user
 

00:21:17.629 --> 00:21:19.779
user
perhaps in the detail stage or somewhere

00:21:19.779 --> 00:21:19.789
perhaps in the detail stage or somewhere
 

00:21:19.789 --> 00:21:22.960
perhaps in the detail stage or somewhere
in some kind of a profile page we have

00:21:22.960 --> 00:21:22.970
in some kind of a profile page we have
 

00:21:22.970 --> 00:21:24.970
in some kind of a profile page we have
our life cycle activity it can be a life

00:21:24.970 --> 00:21:24.980
our life cycle activity it can be a life
 

00:21:24.980 --> 00:21:26.499
our life cycle activity it can be a life
cycle fragment it can be a life cycle

00:21:26.499 --> 00:21:26.509
cycle fragment it can be a life cycle
 

00:21:26.509 --> 00:21:28.930
cycle fragment it can be a life cycle
service or your custom life cycle owner

00:21:28.930 --> 00:21:28.940
service or your custom life cycle owner
 

00:21:28.940 --> 00:21:31.149
service or your custom life cycle owner
in this case we're using a life cycle

00:21:31.149 --> 00:21:31.159
in this case we're using a life cycle
 

00:21:31.159 --> 00:21:34.509
in this case we're using a life cycle
activity and in oncreate we're going to

00:21:34.509 --> 00:21:34.519
activity and in oncreate we're going to
 

00:21:34.519 --> 00:21:36.820
activity and in oncreate we're going to
get access to our database and database

00:21:36.820 --> 00:21:36.830
get access to our database and database
 

00:21:36.830 --> 00:21:39.399
get access to our database and database
access object we're going to call our

00:21:39.399 --> 00:21:39.409
access object we're going to call our
 

00:21:39.409 --> 00:21:41.289
access object we're going to call our
load method that returns the live data

00:21:41.289 --> 00:21:41.299
load method that returns the live data
 

00:21:41.299 --> 00:21:44.889
load method that returns the live data
that wraps at user data and now we are

00:21:44.889 --> 00:21:44.899
that wraps at user data and now we are
 

00:21:44.899 --> 00:21:47.590
that wraps at user data and now we are
going to use the observe method on this

00:21:47.590 --> 00:21:47.600
going to use the observe method on this
 

00:21:47.600 --> 00:21:49.600
going to use the observe method on this
live data object passing two parameters

00:21:49.600 --> 00:21:49.610
live data object passing two parameters
 

00:21:49.610 --> 00:21:51.940
live data object passing two parameters
the first parameter is the reference to

00:21:51.940 --> 00:21:51.950
the first parameter is the reference to
 

00:21:51.950 --> 00:21:54.279
the first parameter is the reference to
the lifecycle owner this is our activity

00:21:54.279 --> 00:21:54.289
the lifecycle owner this is our activity
 

00:21:54.289 --> 00:21:56.409
the lifecycle owner this is our activity
and the second parameter is the callback

00:21:56.409 --> 00:21:56.419
and the second parameter is the callback
 

00:21:56.419 --> 00:21:58.810
and the second parameter is the callback
that is going to be invoked by a room at

00:21:58.810 --> 00:21:58.820
that is going to be invoked by a room at
 

00:21:58.820 --> 00:22:02.369
that is going to be invoked by a room at
runtime every time this user information

00:22:02.369 --> 00:22:02.379
runtime every time this user information
 

00:22:02.379 --> 00:22:04.749
runtime every time this user information
changes in the database on the first

00:22:04.749 --> 00:22:04.759
changes in the database on the first
 

00:22:04.759 --> 00:22:07.810
changes in the database on the first
load or on the subsequent updates now

00:22:07.810 --> 00:22:07.820
load or on the subsequent updates now
 

00:22:07.820 --> 00:22:10.180
load or on the subsequent updates now
word of caution because it's kind of

00:22:10.180 --> 00:22:10.190
word of caution because it's kind of
 

00:22:10.190 --> 00:22:11.470
word of caution because it's kind of
like you know we don't want to put too

00:22:11.470 --> 00:22:11.480
like you know we don't want to put too
 

00:22:11.480 --> 00:22:13.270
like you know we don't want to put too
many lines of code here

00:22:13.270 --> 00:22:13.280
many lines of code here
 

00:22:13.280 --> 00:22:16.920
many lines of code here
on one slide you usually don't want to

00:22:16.920 --> 00:22:16.930
on one slide you usually don't want to
 

00:22:16.930 --> 00:22:20.260
on one slide you usually don't want to
kind of expose database details or

00:22:20.260 --> 00:22:20.270
kind of expose database details or
 

00:22:20.270 --> 00:22:22.420
kind of expose database details or
details about loading this information

00:22:22.420 --> 00:22:22.430
details about loading this information
 

00:22:22.430 --> 00:22:24.670
details about loading this information
from your web service or caching it

00:22:24.670 --> 00:22:24.680
from your web service or caching it
 

00:22:24.680 --> 00:22:26.770
from your web service or caching it
locally in some form directly to the

00:22:26.770 --> 00:22:26.780
locally in some form directly to the
 

00:22:26.780 --> 00:22:28.810
locally in some form directly to the
activity or directly to the fragment so

00:22:28.810 --> 00:22:28.820
activity or directly to the fragment so
 

00:22:28.820 --> 00:22:30.880
activity or directly to the fragment so
this code is highly recommended to be

00:22:30.880 --> 00:22:30.890
this code is highly recommended to be
 

00:22:30.890 --> 00:22:35.440
this code is highly recommended to be
put in a view model and once again the

00:22:35.440 --> 00:22:35.450
put in a view model and once again the
 

00:22:35.450 --> 00:22:37.780
put in a view model and once again the
most powerful part here is this

00:22:37.780 --> 00:22:37.790
most powerful part here is this
 

00:22:37.790 --> 00:22:39.520
most powerful part here is this
connection between the lifecycle

00:22:39.520 --> 00:22:39.530
connection between the lifecycle
 

00:22:39.530 --> 00:22:42.580
connection between the lifecycle
activity the owner that says I'm active

00:22:42.580 --> 00:22:42.590
activity the owner that says I'm active
 

00:22:42.590 --> 00:22:45.730
activity the owner that says I'm active
I am NOT active and the live data the

00:22:45.730 --> 00:22:45.740
I am NOT active and the live data the
 

00:22:45.740 --> 00:22:47.470
I am NOT active and the live data the
trim returns as a result of this

00:22:47.470 --> 00:22:47.480
trim returns as a result of this
 

00:22:47.480 --> 00:22:50.800
trim returns as a result of this
particular query this callback the

00:22:50.800 --> 00:22:50.810
particular query this callback the
 

00:22:50.810 --> 00:22:52.360
particular query this callback the
callback that you provide as the second

00:22:52.360 --> 00:22:52.370
callback that you provide as the second
 

00:22:52.370 --> 00:22:54.880
callback that you provide as the second
parameter to the method once again is

00:22:54.880 --> 00:22:54.890
parameter to the method once again is
 

00:22:54.890 --> 00:22:57.130
parameter to the method once again is
going to be invoked every time room

00:22:57.130 --> 00:22:57.140
going to be invoked every time room
 

00:22:57.140 --> 00:23:00.070
going to be invoked every time room
detects that the result of that query

00:23:00.070 --> 00:23:00.080
detects that the result of that query
 

00:23:00.080 --> 00:23:02.530
detects that the result of that query
that you wrote select star from the user

00:23:02.530 --> 00:23:02.540
that you wrote select star from the user
 

00:23:02.540 --> 00:23:07.630
that you wrote select star from the user
database table has changed once again

00:23:07.630 --> 00:23:07.640
database table has changed once again
 

00:23:07.640 --> 00:23:09.880
database table has changed once again
the flow of information is one part of

00:23:09.880 --> 00:23:09.890
the flow of information is one part of
 

00:23:09.890 --> 00:23:11.530
the flow of information is one part of
you app it can be some kind of a service

00:23:11.530 --> 00:23:11.540
you app it can be some kind of a service
 

00:23:11.540 --> 00:23:14.020
you app it can be some kind of a service
that pulls information from your

00:23:14.020 --> 00:23:14.030
that pulls information from your
 

00:23:14.030 --> 00:23:16.000
that pulls information from your
back-end or maybe the information is

00:23:16.000 --> 00:23:16.010
back-end or maybe the information is
 

00:23:16.010 --> 00:23:17.820
back-end or maybe the information is
pushed or some kind of network tickles

00:23:17.820 --> 00:23:17.830
pushed or some kind of network tickles
 

00:23:17.830 --> 00:23:22.060
pushed or some kind of network tickles
it gets updates on the data it's using

00:23:22.060 --> 00:23:22.070
it gets updates on the data it's using
 

00:23:22.070 --> 00:23:24.730
it gets updates on the data it's using
this save method to insert the

00:23:24.730 --> 00:23:24.740
this save method to insert the
 

00:23:24.740 --> 00:23:26.680
this save method to insert the
information into the database or update

00:23:26.680 --> 00:23:26.690
information into the database or update
 

00:23:26.690 --> 00:23:30.370
information into the database or update
the existing information as the data is

00:23:30.370 --> 00:23:30.380
the existing information as the data is
 

00:23:30.380 --> 00:23:33.370
the existing information as the data is
updated in the database room is going to

00:23:33.370 --> 00:23:33.380
updated in the database room is going to
 

00:23:33.380 --> 00:23:36.070
updated in the database room is going to
detect at runtime all those active

00:23:36.070 --> 00:23:36.080
detect at runtime all those active
 

00:23:36.080 --> 00:23:39.070
detect at runtime all those active
places in your app activity fragment

00:23:39.070 --> 00:23:39.080
places in your app activity fragment
 

00:23:39.080 --> 00:23:41.530
places in your app activity fragment
service or your custom lifecycle owners

00:23:41.530 --> 00:23:41.540
service or your custom lifecycle owners
 

00:23:41.540 --> 00:23:44.710
service or your custom lifecycle owners
that are active and that are subscribed

00:23:44.710 --> 00:23:44.720
that are active and that are subscribed
 

00:23:44.720 --> 00:23:48.430
that are active and that are subscribed
or observing a live data object that

00:23:48.430 --> 00:23:48.440
or observing a live data object that
 

00:23:48.440 --> 00:23:50.860
or observing a live data object that
traps the information that has been

00:23:50.860 --> 00:23:50.870
traps the information that has been
 

00:23:50.870 --> 00:23:54.400
traps the information that has been
updated and then this callback is going

00:23:54.400 --> 00:23:54.410
updated and then this callback is going
 

00:23:54.410 --> 00:23:58.210
updated and then this callback is going
to be invoked letting you know that most

00:23:58.210 --> 00:23:58.220
to be invoked letting you know that most
 

00:23:58.220 --> 00:23:59.560
to be invoked letting you know that most
probably you want to update whatever

00:23:59.560 --> 00:23:59.570
probably you want to update whatever
 

00:23:59.570 --> 00:24:03.250
probably you want to update whatever
slice of data is right now showing in

00:24:03.250 --> 00:24:03.260
slice of data is right now showing in
 

00:24:03.260 --> 00:24:05.560
slice of data is right now showing in
the application screen so for example it

00:24:05.560 --> 00:24:05.570
the application screen so for example it
 

00:24:05.570 --> 00:24:07.870
the application screen so for example it
can be an app that shows live results

00:24:07.870 --> 00:24:07.880
can be an app that shows live results
 

00:24:07.880 --> 00:24:12.070
can be an app that shows live results
for some sports games or live updates

00:24:12.070 --> 00:24:12.080
for some sports games or live updates
 

00:24:12.080 --> 00:24:14.140
for some sports games or live updates
for the web for weather wherever you

00:24:14.140 --> 00:24:14.150
for the web for weather wherever you
 

00:24:14.150 --> 00:24:16.480
for the web for weather wherever you
happen to be all live updates to a

00:24:16.480 --> 00:24:16.490
happen to be all live updates to a
 

00:24:16.490 --> 00:24:19.500
happen to be all live updates to a
market stock prices one part of your app

00:24:19.500 --> 00:24:19.510
market stock prices one part of your app
 

00:24:19.510 --> 00:24:21.970
market stock prices one part of your app
handles the data flow get that

00:24:21.970 --> 00:24:21.980
handles the data flow get that
 

00:24:21.980 --> 00:24:24.970
handles the data flow get that
information and display and and they

00:24:24.970 --> 00:24:24.980
information and display and and they
 

00:24:24.980 --> 00:24:27.160
information and display and and they
insert it into the database or

00:24:27.160 --> 00:24:27.170
insert it into the database or
 

00:24:27.170 --> 00:24:29.290
insert it into the database or
date in the database and the other part

00:24:29.290 --> 00:24:29.300
date in the database and the other part
 

00:24:29.300 --> 00:24:32.050
date in the database and the other part
gets notified by room and the live data

00:24:32.050 --> 00:24:32.060
gets notified by room and the live data
 

00:24:32.060 --> 00:24:35.950
gets notified by room and the live data
that the information is now has like you

00:24:35.950 --> 00:24:35.960
that the information is now has like you
 

00:24:35.960 --> 00:24:38.800
that the information is now has like you
know new new data and you need to update

00:24:38.800 --> 00:24:38.810
know new new data and you need to update
 

00:24:38.810 --> 00:24:41.710
know new new data and you need to update
whatever the presentation is once again

00:24:41.710 --> 00:24:41.720
whatever the presentation is once again
 

00:24:41.720 --> 00:24:43.720
whatever the presentation is once again
in your activity in your fragment or in

00:24:43.720 --> 00:24:43.730
in your activity in your fragment or in
 

00:24:43.730 --> 00:24:45.090
in your activity in your fragment or in
your service that post may be

00:24:45.090 --> 00:24:45.100
your service that post may be
 

00:24:45.100 --> 00:24:49.840
your service that post may be
notification of handles a widget thank

00:24:49.840 --> 00:24:49.850
notification of handles a widget thank
 

00:24:49.850 --> 00:24:54.610
notification of handles a widget thank
you so let's focus on another important

00:24:54.610 --> 00:24:54.620
you so let's focus on another important
 

00:24:54.620 --> 00:24:57.820
you so let's focus on another important
topic which is relations now SQLite is a

00:24:57.820 --> 00:24:57.830
topic which is relations now SQLite is a
 

00:24:57.830 --> 00:25:00.130
topic which is relations now SQLite is a
relational database so it can understand

00:25:00.130 --> 00:25:00.140
relational database so it can understand
 

00:25:00.140 --> 00:25:03.190
relational database so it can understand
the relations between entities and if

00:25:03.190 --> 00:25:03.200
the relations between entities and if
 

00:25:03.200 --> 00:25:06.370
the relations between entities and if
you are using any or M on androids or

00:25:06.370 --> 00:25:06.380
you are using any or M on androids or
 

00:25:06.380 --> 00:25:08.530
you are using any or M on androids or
like any other platform they usually try

00:25:08.530 --> 00:25:08.540
like any other platform they usually try
 

00:25:08.540 --> 00:25:10.990
like any other platform they usually try
to handle these relations for you so

00:25:10.990 --> 00:25:11.000
to handle these relations for you so
 

00:25:11.000 --> 00:25:14.260
to handle these relations for you so
let's look at it how it works in room so

00:25:14.260 --> 00:25:14.270
let's look at it how it works in room so
 

00:25:14.270 --> 00:25:16.510
let's look at it how it works in room so
we we feed we probably also has a user

00:25:16.510 --> 00:25:16.520
we we feed we probably also has a user
 

00:25:16.520 --> 00:25:19.210
we we feed we probably also has a user
object which has posted this feed item

00:25:19.210 --> 00:25:19.220
object which has posted this feed item
 

00:25:19.220 --> 00:25:21.100
object which has posted this feed item
so you want to have a user field inside

00:25:21.100 --> 00:25:21.110
so you want to have a user field inside
 

00:25:21.110 --> 00:25:24.880
so you want to have a user field inside
that field inside that entity if you do

00:25:24.880 --> 00:25:24.890
that field inside that entity if you do
 

00:25:24.890 --> 00:25:27.550
that field inside that entity if you do
this in room it actually won't compile

00:25:27.550 --> 00:25:27.560
this in room it actually won't compile
 

00:25:27.560 --> 00:25:30.850
this in room it actually won't compile
the application the moral of the story

00:25:30.850 --> 00:25:30.860
the application the moral of the story
 

00:25:30.860 --> 00:25:33.760
the application the moral of the story
we don't allow entities to contain other

00:25:33.760 --> 00:25:33.770
we don't allow entities to contain other
 

00:25:33.770 --> 00:25:37.030
we don't allow entities to contain other
entities now you're probably asking why

00:25:37.030 --> 00:25:37.040
entities now you're probably asking why
 

00:25:37.040 --> 00:25:39.100
entities now you're probably asking why
everybody else does this and if we can

00:25:39.100 --> 00:25:39.110
everybody else does this and if we can
 

00:25:39.110 --> 00:25:41.560
everybody else does this and if we can
understand all this SQLite why can't we

00:25:41.560 --> 00:25:41.570
understand all this SQLite why can't we
 

00:25:41.570 --> 00:25:43.690
understand all this SQLite why can't we
just enable this now there's a very

00:25:43.690 --> 00:25:43.700
just enable this now there's a very
 

00:25:43.700 --> 00:25:46.480
just enable this now there's a very
particular reason for us not to this is

00:25:46.480 --> 00:25:46.490
particular reason for us not to this is
 

00:25:46.490 --> 00:25:48.400
particular reason for us not to this is
we have seen a lot of problems with

00:25:48.400 --> 00:25:48.410
we have seen a lot of problems with
 

00:25:48.410 --> 00:25:51.580
we have seen a lot of problems with
applications caused by these kind of

00:25:51.580 --> 00:25:51.590
applications caused by these kind of
 

00:25:51.590 --> 00:25:55.030
applications caused by these kind of
models so I just want to go through an

00:25:55.030 --> 00:25:55.040
models so I just want to go through an
 

00:25:55.040 --> 00:25:57.160
models so I just want to go through an
example so first let's look at this

00:25:57.160 --> 00:25:57.170
example so first let's look at this
 

00:25:57.170 --> 00:26:00.130
example so first let's look at this
query strikes to select a feed with some

00:26:00.130 --> 00:26:00.140
query strikes to select a feed with some
 

00:26:00.140 --> 00:26:03.340
query strikes to select a feed with some
ID when we select this feed or when you

00:26:03.340 --> 00:26:03.350
ID when we select this feed or when you
 

00:26:03.350 --> 00:26:06.130
ID when we select this feed or when you
look at this feed item you cannot know

00:26:06.130 --> 00:26:06.140
look at this feed item you cannot know
 

00:26:06.140 --> 00:26:09.100
look at this feed item you cannot know
whether it also fetches the user or not

00:26:09.100 --> 00:26:09.110
whether it also fetches the user or not
 

00:26:09.110 --> 00:26:11.830
whether it also fetches the user or not
it's very hard to define and most of the

00:26:11.830 --> 00:26:11.840
it's very hard to define and most of the
 

00:26:11.840 --> 00:26:14.260
it's very hard to define and most of the
oil Rams the way they solve this problem

00:26:14.260 --> 00:26:14.270
oil Rams the way they solve this problem
 

00:26:14.270 --> 00:26:16.870
oil Rams the way they solve this problem
is to just say lazy loading right until

00:26:16.870 --> 00:26:16.880
is to just say lazy loading right until
 

00:26:16.880 --> 00:26:19.180
is to just say lazy loading right until
the user wants to fetch that data don't

00:26:19.180 --> 00:26:19.190
the user wants to fetch that data don't
 

00:26:19.190 --> 00:26:21.490
the user wants to fetch that data don't
load it which works very well if you are

00:26:21.490 --> 00:26:21.500
load it which works very well if you are
 

00:26:21.500 --> 00:26:24.340
load it which works very well if you are
working on the server side but on the UI

00:26:24.340 --> 00:26:24.350
working on the server side but on the UI
 

00:26:24.350 --> 00:26:28.210
working on the server side but on the UI
it is a little bit more tricky so let's

00:26:28.210 --> 00:26:28.220
it is a little bit more tricky so let's
 

00:26:28.220 --> 00:26:29.980
it is a little bit more tricky so let's
implant that lazy loading right you

00:26:29.980 --> 00:26:29.990
implant that lazy loading right you
 

00:26:29.990 --> 00:26:31.990
implant that lazy loading right you
could just generate this code for you we

00:26:31.990 --> 00:26:32.000
could just generate this code for you we
 

00:26:32.000 --> 00:26:34.600
could just generate this code for you we
could say I just keep a user ID also

00:26:34.600 --> 00:26:34.610
could say I just keep a user ID also
 

00:26:34.610 --> 00:26:37.450
could say I just keep a user ID also
keep a user instance when they get used

00:26:37.450 --> 00:26:37.460
keep a user instance when they get used
 

00:26:37.460 --> 00:26:39.310
keep a user instance when they get used
it is called because if the user is the

00:26:39.310 --> 00:26:39.320
it is called because if the user is the
 

00:26:39.320 --> 00:26:40.570
it is called because if the user is the
first time now

00:26:40.570 --> 00:26:40.580
first time now
 

00:26:40.580 --> 00:26:42.940
first time now
Edge's from the database otherwise just

00:26:42.940 --> 00:26:42.950
Edge's from the database otherwise just
 

00:26:42.950 --> 00:26:44.830
Edge's from the database otherwise just
return the existing girl work it's very

00:26:44.830 --> 00:26:44.840
return the existing girl work it's very
 

00:26:44.840 --> 00:26:48.940
return the existing girl work it's very
easy we believe this is a Chilean mine

00:26:48.940 --> 00:26:48.950
easy we believe this is a Chilean mine
 

00:26:48.950 --> 00:26:52.419
easy we believe this is a Chilean mine
planted in your code base let's see how

00:26:52.419 --> 00:26:52.429
planted in your code base let's see how
 

00:26:52.429 --> 00:26:55.149
planted in your code base let's see how
we explode it we are using a recycling

00:26:55.149 --> 00:26:55.159
we explode it we are using a recycling
 

00:26:55.159 --> 00:26:57.639
we explode it we are using a recycling
bin where we show these feed items and I

00:26:57.639 --> 00:26:57.649
bin where we show these feed items and I
 

00:26:57.649 --> 00:26:59.470
bin where we show these feed items and I
will get the faith and will show the

00:26:59.470 --> 00:26:59.480
will get the faith and will show the
 

00:26:59.480 --> 00:27:01.570
will get the faith and will show the
title and the subtitle of the feed item

00:27:01.570 --> 00:27:01.580
title and the subtitle of the feed item
 

00:27:01.580 --> 00:27:04.570
title and the subtitle of the feed item
so looks fine and I'm like two months

00:27:04.570 --> 00:27:04.580
so looks fine and I'm like two months
 

00:27:04.580 --> 00:27:06.220
so looks fine and I'm like two months
later your product manager comes

00:27:06.220 --> 00:27:06.230
later your product manager comes
 

00:27:06.230 --> 00:27:08.590
later your product manager comes
actually you know what let's show the

00:27:08.590 --> 00:27:08.600
actually you know what let's show the
 

00:27:08.600 --> 00:27:10.659
actually you know what let's show the
user name in that feed icon as well

00:27:10.659 --> 00:27:10.669
user name in that feed icon as well
 

00:27:10.669 --> 00:27:13.810
user name in that feed icon as well
right it makes sense like okay so easy

00:27:13.810 --> 00:27:13.820
right it makes sense like okay so easy
 

00:27:13.820 --> 00:27:15.879
right it makes sense like okay so easy
your developer goals just add now feed

00:27:15.879 --> 00:27:15.889
your developer goals just add now feed
 

00:27:15.889 --> 00:27:18.430
your developer goals just add now feed
get user get user name put it on the

00:27:18.430 --> 00:27:18.440
get user get user name put it on the
 

00:27:18.440 --> 00:27:20.799
get user get user name put it on the
TechSoup you are done you send the code

00:27:20.799 --> 00:27:20.809
TechSoup you are done you send the code
 

00:27:20.809 --> 00:27:23.889
TechSoup you are done you send the code
real it looks obvious it passes the code

00:27:23.889 --> 00:27:23.899
real it looks obvious it passes the code
 

00:27:23.899 --> 00:27:26.560
real it looks obvious it passes the code
real you test it it looks fine as well

00:27:26.560 --> 00:27:26.570
real you test it it looks fine as well
 

00:27:26.570 --> 00:27:29.799
real you test it it looks fine as well
but when your users start using it and

00:27:29.799 --> 00:27:29.809
but when your users start using it and
 

00:27:29.809 --> 00:27:32.320
but when your users start using it and
any application starts singing these NS

00:27:32.320 --> 00:27:32.330
any application starts singing these NS
 

00:27:32.330 --> 00:27:34.389
any application starts singing these NS
which stands for application not

00:27:34.389 --> 00:27:34.399
which stands for application not
 

00:27:34.399 --> 00:27:36.659
which stands for application not
responding

00:27:36.659 --> 00:27:36.669
 
 

00:27:36.669 --> 00:27:39.399
 
this happens because when you are

00:27:39.399 --> 00:27:39.409
this happens because when you are
 

00:27:39.409 --> 00:27:41.139
this happens because when you are
testing the application your own device

00:27:41.139 --> 00:27:41.149
testing the application your own device
 

00:27:41.149 --> 00:27:43.480
testing the application your own device
is good Network everything is fast but

00:27:43.480 --> 00:27:43.490
is good Network everything is fast but
 

00:27:43.490 --> 00:27:45.430
is good Network everything is fast but
when the user is using their application

00:27:45.430 --> 00:27:45.440
when the user is using their application
 

00:27:45.440 --> 00:27:47.740
when the user is using their application
there is public 50 applications that are

00:27:47.740 --> 00:27:47.750
there is public 50 applications that are
 

00:27:47.750 --> 00:27:49.840
there is public 50 applications that are
also trying to run and if you want to

00:27:49.840 --> 00:27:49.850
also trying to run and if you want to
 

00:27:49.850 --> 00:27:52.120
also trying to run and if you want to
relate to this just try to use your

00:27:52.120 --> 00:27:52.130
relate to this just try to use your
 

00:27:52.130 --> 00:27:54.399
relate to this just try to use your
application when Placer is updating your

00:27:54.399 --> 00:27:54.409
application when Placer is updating your
 

00:27:54.409 --> 00:27:58.080
application when Placer is updating your
applications you will see how it is I

00:27:58.080 --> 00:27:58.090
applications you will see how it is I
 

00:27:58.090 --> 00:28:01.360
applications you will see how it is I
mean these are still mobile devices at

00:28:01.360 --> 00:28:01.370
mean these are still mobile devices at
 

00:28:01.370 --> 00:28:03.610
mean these are still mobile devices at
least on these devices like accelerated

00:28:03.610 --> 00:28:03.620
least on these devices like accelerated
 

00:28:03.620 --> 00:28:06.580
least on these devices like accelerated
is slower so and the UI thread only has

00:28:06.580 --> 00:28:06.590
is slower so and the UI thread only has
 

00:28:06.590 --> 00:28:09.100
is slower so and the UI thread only has
16 milliseconds so even if your credit

00:28:09.100 --> 00:28:09.110
16 milliseconds so even if your credit
 

00:28:09.110 --> 00:28:11.289
16 milliseconds so even if your credit
takes 5 milliseconds like ignore all the

00:28:11.289 --> 00:28:11.299
takes 5 milliseconds like ignore all the
 

00:28:11.299 --> 00:28:13.240
takes 5 milliseconds like ignore all the
likes and everything here is 5

00:28:13.240 --> 00:28:13.250
likes and everything here is 5
 

00:28:13.250 --> 00:28:14.980
likes and everything here is 5
milliseconds 5 milliseconds a lot of

00:28:14.980 --> 00:28:14.990
milliseconds 5 milliseconds a lot of
 

00:28:14.990 --> 00:28:17.320
milliseconds 5 milliseconds a lot of
time you can probably like lay up to any

00:28:17.320 --> 00:28:17.330
time you can probably like lay up to any
 

00:28:17.330 --> 00:28:20.860
time you can probably like lay up to any
recycle of use at that time so how do

00:28:20.860 --> 00:28:20.870
recycle of use at that time so how do
 

00:28:20.870 --> 00:28:23.049
recycle of use at that time so how do
you solve this problem we through now

00:28:23.049 --> 00:28:23.059
you solve this problem we through now
 

00:28:23.059 --> 00:28:25.269
you solve this problem we through now
previously we said SQLite is a

00:28:25.269 --> 00:28:25.279
previously we said SQLite is a
 

00:28:25.279 --> 00:28:27.009
previously we said SQLite is a
relational database right we should just

00:28:27.009 --> 00:28:27.019
relational database right we should just
 

00:28:27.019 --> 00:28:30.100
relational database right we should just
take advantage of it we just keep the

00:28:30.100 --> 00:28:30.110
take advantage of it we just keep the
 

00:28:30.110 --> 00:28:31.899
take advantage of it we just keep the
user ID we know the feed is a user ID

00:28:31.899 --> 00:28:31.909
user ID we know the feed is a user ID
 

00:28:31.909 --> 00:28:34.210
user ID we know the feed is a user ID
just keep it and now we can write a

00:28:34.210 --> 00:28:34.220
just keep it and now we can write a
 

00:28:34.220 --> 00:28:37.810
just keep it and now we can write a
query they say I want title subtitle and

00:28:37.810 --> 00:28:37.820
query they say I want title subtitle and
 

00:28:37.820 --> 00:28:40.690
query they say I want title subtitle and
user name and join me these two tables

00:28:40.690 --> 00:28:40.700
user name and join me these two tables
 

00:28:40.700 --> 00:28:43.629
user name and join me these two tables
on this constraint like this is already

00:28:43.629 --> 00:28:43.639
on this constraint like this is already
 

00:28:43.639 --> 00:28:46.720
on this constraint like this is already
a solved problem on the SQLite land why

00:28:46.720 --> 00:28:46.730
a solved problem on the SQLite land why
 

00:28:46.730 --> 00:28:49.600
a solved problem on the SQLite land why
don't we just embrace it when you do

00:28:49.600 --> 00:28:49.610
don't we just embrace it when you do
 

00:28:49.610 --> 00:28:52.810
don't we just embrace it when you do
this it's faster you're on the fetch the

00:28:52.810 --> 00:28:52.820
this it's faster you're on the fetch the
 

00:28:52.820 --> 00:28:54.190
this it's faster you're on the fetch the
data you need and

00:28:54.190 --> 00:28:54.200
data you need and
 

00:28:54.200 --> 00:28:56.170
data you need and
my official data you know that data is

00:28:56.170 --> 00:28:56.180
my official data you know that data is
 

00:28:56.180 --> 00:28:59.320
my official data you know that data is
in memory our sake wait what is this

00:28:59.320 --> 00:28:59.330
in memory our sake wait what is this
 

00:28:59.330 --> 00:29:02.260
in memory our sake wait what is this
item let's see it can be like any Java

00:29:02.260 --> 00:29:02.270
item let's see it can be like any Java
 

00:29:02.270 --> 00:29:04.420
item let's see it can be like any Java
class it may even have a constructor

00:29:04.420 --> 00:29:04.430
class it may even have a constructor
 

00:29:04.430 --> 00:29:06.880
class it may even have a constructor
with public fields on the final fields

00:29:06.880 --> 00:29:06.890
with public fields on the final fields
 

00:29:06.890 --> 00:29:09.040
with public fields on the final fields
room will set this without any

00:29:09.040 --> 00:29:09.050
room will set this without any
 

00:29:09.050 --> 00:29:12.870
room will set this without any
reflection we will use that constructor

00:29:12.870 --> 00:29:12.880
 
 

00:29:12.880 --> 00:29:15.280
 
you can even see return a light data

00:29:15.280 --> 00:29:15.290
you can even see return a light data
 

00:29:15.290 --> 00:29:17.680
you can even see return a light data
because room knows about the query it

00:29:17.680 --> 00:29:17.690
because room knows about the query it
 

00:29:17.690 --> 00:29:19.480
because room knows about the query it
knows it's creating these two tables

00:29:19.480 --> 00:29:19.490
knows it's creating these two tables
 

00:29:19.490 --> 00:29:22.030
knows it's creating these two tables
like think about the other example if

00:29:22.030 --> 00:29:22.040
like think about the other example if
 

00:29:22.040 --> 00:29:24.100
like think about the other example if
you were observing the feed if the user

00:29:24.100 --> 00:29:24.110
you were observing the feed if the user
 

00:29:24.110 --> 00:29:26.440
you were observing the feed if the user
changes how do we know should be emailed

00:29:26.440 --> 00:29:26.450
changes how do we know should be emailed
 

00:29:26.450 --> 00:29:28.780
changes how do we know should be emailed
at the feed or not but when you wrote

00:29:28.780 --> 00:29:28.790
at the feed or not but when you wrote
 

00:29:28.790 --> 00:29:30.880
at the feed or not but when you wrote
this we actually know we know what you

00:29:30.880 --> 00:29:30.890
this we actually know we know what you
 

00:29:30.890 --> 00:29:32.950
this we actually know we know what you
are returning we know which tables you

00:29:32.950 --> 00:29:32.960
are returning we know which tables you
 

00:29:32.960 --> 00:29:34.720
are returning we know which tables you
are creating so we can be clever about

00:29:34.720 --> 00:29:34.730
are creating so we can be clever about
 

00:29:34.730 --> 00:29:38.770
are creating so we can be clever about
this so it's what we tell people if you

00:29:38.770 --> 00:29:38.780
this so it's what we tell people if you
 

00:29:38.780 --> 00:29:41.200
this so it's what we tell people if you
want to have relations and you cannot

00:29:41.200 --> 00:29:41.210
want to have relations and you cannot
 

00:29:41.210 --> 00:29:43.570
want to have relations and you cannot
use embedded or type adaptors you

00:29:43.570 --> 00:29:43.580
use embedded or type adaptors you
 

00:29:43.580 --> 00:29:45.910
use embedded or type adaptors you
probably want to use poles for your

00:29:45.910 --> 00:29:45.920
probably want to use poles for your
 

00:29:45.920 --> 00:29:47.920
probably want to use poles for your
relations which means you don't have any

00:29:47.920 --> 00:29:47.930
relations which means you don't have any
 

00:29:47.930 --> 00:29:50.380
relations which means you don't have any
hidden costs you only fetch what you

00:29:50.380 --> 00:29:50.390
hidden costs you only fetch what you
 

00:29:50.390 --> 00:29:52.960
hidden costs you only fetch what you
need and it's still observable and you

00:29:52.960 --> 00:29:52.970
need and it's still observable and you
 

00:29:52.970 --> 00:29:56.350
need and it's still observable and you
don't need to do anything for that but

00:29:56.350 --> 00:29:56.360
don't need to do anything for that but
 

00:29:56.360 --> 00:29:58.390
don't need to do anything for that but
of course we said SQLite is relational

00:29:58.390 --> 00:29:58.400
of course we said SQLite is relational
 

00:29:58.400 --> 00:30:00.850
of course we said SQLite is relational
and supports foreign keys room support

00:30:00.850 --> 00:30:00.860
and supports foreign keys room support
 

00:30:00.860 --> 00:30:03.010
and supports foreign keys room support
foreign keys as well so inside your

00:30:03.010 --> 00:30:03.020
foreign keys as well so inside your
 

00:30:03.020 --> 00:30:05.440
foreign keys as well so inside your
entity you can say this entity has a

00:30:05.440 --> 00:30:05.450
entity you can say this entity has a
 

00:30:05.450 --> 00:30:09.250
entity you can say this entity has a
foreign key to this other entity where I

00:30:09.250 --> 00:30:09.260
foreign key to this other entity where I
 

00:30:09.260 --> 00:30:11.290
foreign key to this other entity where I
want to match the ID column in that

00:30:11.290 --> 00:30:11.300
want to match the ID column in that
 

00:30:11.300 --> 00:30:14.560
want to match the ID column in that
entity with this child column SQLite

00:30:14.560 --> 00:30:14.570
entity with this child column SQLite
 

00:30:14.570 --> 00:30:16.660
entity with this child column SQLite
foreign keys also support like you may

00:30:16.660 --> 00:30:16.670
foreign keys also support like you may
 

00:30:16.670 --> 00:30:18.850
foreign keys also support like you may
have multiple fields matching multiple

00:30:18.850 --> 00:30:18.860
have multiple fields matching multiple
 

00:30:18.860 --> 00:30:20.800
have multiple fields matching multiple
fields in the other tables it's very

00:30:20.800 --> 00:30:20.810
fields in the other tables it's very
 

00:30:20.810 --> 00:30:22.660
fields in the other tables it's very
complex you should just go ahead and

00:30:22.660 --> 00:30:22.670
complex you should just go ahead and
 

00:30:22.670 --> 00:30:25.120
complex you should just go ahead and
read but once you declare this now

00:30:25.120 --> 00:30:25.130
read but once you declare this now
 

00:30:25.130 --> 00:30:27.550
read but once you declare this now
SQLite knows about this relationship if

00:30:27.550 --> 00:30:27.560
SQLite knows about this relationship if
 

00:30:27.560 --> 00:30:29.440
SQLite knows about this relationship if
it knows you can say things like you

00:30:29.440 --> 00:30:29.450
it knows you can say things like you
 

00:30:29.450 --> 00:30:30.850
it knows you can say things like you
know what if someone tries to delete

00:30:30.850 --> 00:30:30.860
know what if someone tries to delete
 

00:30:30.860 --> 00:30:33.220
know what if someone tries to delete
that users don't let them delete because

00:30:33.220 --> 00:30:33.230
that users don't let them delete because
 

00:30:33.230 --> 00:30:36.370
that users don't let them delete because
I have a feed for them or you can say if

00:30:36.370 --> 00:30:36.380
I have a feed for them or you can say if
 

00:30:36.380 --> 00:30:38.890
I have a feed for them or you can say if
that user is updated please update me as

00:30:38.890 --> 00:30:38.900
that user is updated please update me as
 

00:30:38.900 --> 00:30:42.130
that user is updated please update me as
well so we trying to embrace SQLite

00:30:42.130 --> 00:30:42.140
well so we trying to embrace SQLite
 

00:30:42.140 --> 00:30:43.990
well so we trying to embrace SQLite
rather than trying to hide these details

00:30:43.990 --> 00:30:44.000
rather than trying to hide these details
 

00:30:44.000 --> 00:30:47.620
rather than trying to hide these details
and like create a bunch of pitfalls it

00:30:47.620 --> 00:30:47.630
and like create a bunch of pitfalls it
 

00:30:47.630 --> 00:30:49.920
and like create a bunch of pitfalls it
makes it is another great thing now the

00:30:49.920 --> 00:30:49.930
makes it is another great thing now the
 

00:30:49.930 --> 00:30:52.720
makes it is another great thing now the
SQLite keeps the data on the disk in a

00:30:52.720 --> 00:30:52.730
SQLite keeps the data on the disk in a
 

00:30:52.730 --> 00:30:54.820
SQLite keeps the data on the disk in a
structured way so that you can query

00:30:54.820 --> 00:30:54.830
structured way so that you can query
 

00:30:54.830 --> 00:30:57.910
structured way so that you can query
effect as I'm going to clear like this

00:30:57.910 --> 00:30:57.920
effect as I'm going to clear like this
 

00:30:57.920 --> 00:30:59.530
effect as I'm going to clear like this
where you want to select feed items

00:30:59.530 --> 00:30:59.540
where you want to select feed items
 

00:30:59.540 --> 00:31:02.500
where you want to select feed items
which has a certain title but if you

00:31:02.500 --> 00:31:02.510
which has a certain title but if you
 

00:31:02.510 --> 00:31:04.000
which has a certain title but if you
just write this query and don't do

00:31:04.000 --> 00:31:04.010
just write this query and don't do
 

00:31:04.010 --> 00:31:04.720
just write this query and don't do
anything else

00:31:04.720 --> 00:31:04.730
anything else
 

00:31:04.730 --> 00:31:06.880
anything else
that means SQLite needs to go through

00:31:06.880 --> 00:31:06.890
that means SQLite needs to go through
 

00:31:06.890 --> 00:31:07.990
that means SQLite needs to go through
every single row

00:31:07.990 --> 00:31:08.000
every single row
 

00:31:08.000 --> 00:31:10.360
every single row
in the database to find the ones that

00:31:10.360 --> 00:31:10.370
in the database to find the ones that
 

00:31:10.370 --> 00:31:12.760
in the database to find the ones that
are matching now if you're not making

00:31:12.760 --> 00:31:12.770
are matching now if you're not making
 

00:31:12.770 --> 00:31:15.580
are matching now if you're not making
this very frequently that's fine but

00:31:15.580 --> 00:31:15.590
this very frequently that's fine but
 

00:31:15.590 --> 00:31:17.080
this very frequently that's fine but
this is the query that you run

00:31:17.080 --> 00:31:17.090
this is the query that you run
 

00:31:17.090 --> 00:31:20.130
this is the query that you run
frequently you probably want to index it

00:31:20.130 --> 00:31:20.140
frequently you probably want to index it
 

00:31:20.140 --> 00:31:22.900
frequently you probably want to index it
it's very simple in room you just inside

00:31:22.900 --> 00:31:22.910
it's very simple in room you just inside
 

00:31:22.910 --> 00:31:24.970
it's very simple in room you just inside
enter the annotation you can say well

00:31:24.970 --> 00:31:24.980
enter the annotation you can say well
 

00:31:24.980 --> 00:31:26.950
enter the annotation you can say well
can you please index the script in this

00:31:26.950 --> 00:31:26.960
can you please index the script in this
 

00:31:26.960 --> 00:31:30.790
can you please index the script in this
column if your queries like this where

00:31:30.790 --> 00:31:30.800
column if your queries like this where
 

00:31:30.800 --> 00:31:32.980
column if your queries like this where
you have like you query title and

00:31:32.980 --> 00:31:32.990
you have like you query title and
 

00:31:32.990 --> 00:31:35.950
you have like you query title and
subtitle together you can also create a

00:31:35.950 --> 00:31:35.960
subtitle together you can also create a
 

00:31:35.960 --> 00:31:38.530
subtitle together you can also create a
composite index which means these two

00:31:38.530 --> 00:31:38.540
composite index which means these two
 

00:31:38.540 --> 00:31:40.210
composite index which means these two
things will be indexed together so if

00:31:40.210 --> 00:31:40.220
things will be indexed together so if
 

00:31:40.220 --> 00:31:43.060
things will be indexed together so if
you are querying together that will be

00:31:43.060 --> 00:31:43.070
you are querying together that will be
 

00:31:43.070 --> 00:31:47.470
you are querying together that will be
fast and you can have multiple indices

00:31:47.470 --> 00:31:47.480
fast and you can have multiple indices
 

00:31:47.480 --> 00:31:48.850
fast and you can have multiple indices
like it doesn't matter by the way like

00:31:48.850 --> 00:31:48.860
like it doesn't matter by the way like
 

00:31:48.860 --> 00:31:50.470
like it doesn't matter by the way like
just because you're creating something

00:31:50.470 --> 00:31:50.480
just because you're creating something
 

00:31:50.480 --> 00:31:52.540
just because you're creating something
doesn't mean you should index it because

00:31:52.540 --> 00:31:52.550
doesn't mean you should index it because
 

00:31:52.550 --> 00:31:55.480
doesn't mean you should index it because
every index you add has a cost on every

00:31:55.480 --> 00:31:55.490
every index you add has a cost on every
 

00:31:55.490 --> 00:31:58.150
every index you add has a cost on every
insertion or data change so you need to

00:31:58.150 --> 00:31:58.160
insertion or data change so you need to
 

00:31:58.160 --> 00:32:00.790
insertion or data change so you need to
be you need to just measure and see why

00:32:00.790 --> 00:32:00.800
be you need to just measure and see why
 

00:32:00.800 --> 00:32:02.410
be you need to just measure and see why
what's the best way and a SQLite

00:32:02.410 --> 00:32:02.420
what's the best way and a SQLite
 

00:32:02.420 --> 00:32:05.230
what's the best way and a SQLite
documentation on query planner is

00:32:05.230 --> 00:32:05.240
documentation on query planner is
 

00:32:05.240 --> 00:32:07.660
documentation on query planner is
amazing like if you read that you will

00:32:07.660 --> 00:32:07.670
amazing like if you read that you will
 

00:32:07.670 --> 00:32:09.310
amazing like if you read that you will
know how to write queries and how to

00:32:09.310 --> 00:32:09.320
know how to write queries and how to
 

00:32:09.320 --> 00:32:14.590
know how to write queries and how to
optimize it now testing we know in the

00:32:14.590 --> 00:32:14.600
optimize it now testing we know in the
 

00:32:14.600 --> 00:32:16.870
optimize it now testing we know in the
past we haven't been very good in this

00:32:16.870 --> 00:32:16.880
past we haven't been very good in this
 

00:32:16.880 --> 00:32:18.130
past we haven't been very good in this
area but when we were designing

00:32:18.130 --> 00:32:18.140
area but when we were designing
 

00:32:18.140 --> 00:32:20.260
area but when we were designing
architecture components testing was a

00:32:20.260 --> 00:32:20.270
architecture components testing was a
 

00:32:20.270 --> 00:32:23.020
architecture components testing was a
very very important topic for us we want

00:32:23.020 --> 00:32:23.030
very very important topic for us we want
 

00:32:23.030 --> 00:32:24.520
very very important topic for us we want
to take whatever we create for

00:32:24.520 --> 00:32:24.530
to take whatever we create for
 

00:32:24.530 --> 00:32:26.710
to take whatever we create for
architecture components that they can

00:32:26.710 --> 00:32:26.720
architecture components that they can
 

00:32:26.720 --> 00:32:30.820
architecture components that they can
scale and that can be testable so let's

00:32:30.820 --> 00:32:30.830
scale and that can be testable so let's
 

00:32:30.830 --> 00:32:33.580
scale and that can be testable so let's
look at how you can run test your

00:32:33.580 --> 00:32:33.590
look at how you can run test your
 

00:32:33.590 --> 00:32:35.890
look at how you can run test your
queries by there you should really test

00:32:35.890 --> 00:32:35.900
queries by there you should really test
 

00:32:35.900 --> 00:32:37.810
queries by there you should really test
just because we are refining your SQL

00:32:37.810 --> 00:32:37.820
just because we are refining your SQL
 

00:32:37.820 --> 00:32:39.820
just because we are refining your SQL
queries doesn't mean that that's what

00:32:39.820 --> 00:32:39.830
queries doesn't mean that that's what
 

00:32:39.830 --> 00:32:42.130
queries doesn't mean that that's what
you really intended right this your java

00:32:42.130 --> 00:32:42.140
you really intended right this your java
 

00:32:42.140 --> 00:32:44.590
you really intended right this your java
code compiles but you still test it

00:32:44.590 --> 00:32:44.600
code compiles but you still test it
 

00:32:44.600 --> 00:32:46.480
code compiles but you still test it
similarly if your roommate scale

00:32:46.480 --> 00:32:46.490
similarly if your roommate scale
 

00:32:46.490 --> 00:32:49.840
similarly if your roommate scale
compiles you should still test it what

00:32:49.840 --> 00:32:49.850
compiles you should still test it what
 

00:32:49.850 --> 00:32:51.610
compiles you should still test it what
testing room is actually is and now we

00:32:51.610 --> 00:32:51.620
testing room is actually is and now we
 

00:32:51.620 --> 00:32:53.710
testing room is actually is and now we
student comment testing on the device

00:32:53.710 --> 00:32:53.720
student comment testing on the device
 

00:32:53.720 --> 00:32:56.110
student comment testing on the device
but there is no activity or UI so they

00:32:56.110 --> 00:32:56.120
but there is no activity or UI so they
 

00:32:56.120 --> 00:32:59.110
but there is no activity or UI so they
run faster you can also test on the JVM

00:32:59.110 --> 00:32:59.120
run faster you can also test on the JVM
 

00:32:59.120 --> 00:33:02.520
run faster you can also test on the JVM
by changing the SQLite bindings videos

00:33:02.520 --> 00:33:02.530
by changing the SQLite bindings videos
 

00:33:02.530 --> 00:33:05.140
by changing the SQLite bindings videos
say say in a way I'm just going through

00:33:05.140 --> 00:33:05.150
say say in a way I'm just going through
 

00:33:05.150 --> 00:33:07.930
say say in a way I'm just going through
a sample case so before each test is

00:33:07.930 --> 00:33:07.940
a sample case so before each test is
 

00:33:07.940 --> 00:33:10.540
a sample case so before each test is
created I create my database but I

00:33:10.540 --> 00:33:10.550
created I create my database but I
 

00:33:10.550 --> 00:33:13.090
created I create my database but I
create an in-memory database which means

00:33:13.090 --> 00:33:13.100
create an in-memory database which means
 

00:33:13.100 --> 00:33:15.400
create an in-memory database which means
the data little created man the test

00:33:15.400 --> 00:33:15.410
the data little created man the test
 

00:33:15.410 --> 00:33:17.800
the data little created man the test
starts and I can clean it afterwards you

00:33:17.800 --> 00:33:17.810
starts and I can clean it afterwards you
 

00:33:17.810 --> 00:33:20.440
starts and I can clean it afterwards you
want these tests to run isolated from

00:33:20.440 --> 00:33:20.450
want these tests to run isolated from
 

00:33:20.450 --> 00:33:21.580
want these tests to run isolated from
other tests

00:33:21.580 --> 00:33:21.590
other tests
 

00:33:21.590 --> 00:33:23.110
other tests
so you don't want to say the data into

00:33:23.110 --> 00:33:23.120
so you don't want to say the data into
 

00:33:23.120 --> 00:33:26.080
so you don't want to say the data into
disk so I said after just closed the

00:33:26.080 --> 00:33:26.090
disk so I said after just closed the
 

00:33:26.090 --> 00:33:27.820
disk so I said after just closed the
database so the memory can be released

00:33:27.820 --> 00:33:27.830
database so the memory can be released
 

00:33:27.830 --> 00:33:30.760
database so the memory can be released
fast and I can write it as Lewis this is

00:33:30.760 --> 00:33:30.770
fast and I can write it as Lewis this is
 

00:33:30.770 --> 00:33:33.820
fast and I can write it as Lewis this is
just like I create an item I inserted

00:33:33.820 --> 00:33:33.830
just like I create an item I inserted
 

00:33:33.830 --> 00:33:36.040
just like I create an item I inserted
the room and then make some queries on

00:33:36.040 --> 00:33:36.050
the room and then make some queries on
 

00:33:36.050 --> 00:33:39.810
the room and then make some queries on
it and I verify that this what I expect

00:33:39.810 --> 00:33:39.820
it and I verify that this what I expect
 

00:33:39.820 --> 00:33:42.910
it and I verify that this what I expect
but the way room is designed actually

00:33:42.910 --> 00:33:42.920
but the way room is designed actually
 

00:33:42.920 --> 00:33:44.470
but the way room is designed actually
helps with the overall application

00:33:44.470 --> 00:33:44.480
helps with the overall application
 

00:33:44.480 --> 00:33:46.600
helps with the overall application
testing do you remember we talked about

00:33:46.600 --> 00:33:46.610
testing do you remember we talked about
 

00:33:46.610 --> 00:33:50.470
testing do you remember we talked about
those doll classes we generate because

00:33:50.470 --> 00:33:50.480
those doll classes we generate because
 

00:33:50.480 --> 00:33:52.990
those doll classes we generate because
you defined how you access the database

00:33:52.990 --> 00:33:53.000
you defined how you access the database
 

00:33:53.000 --> 00:33:55.840
you defined how you access the database
as an interface which has nothing to do

00:33:55.840 --> 00:33:55.850
as an interface which has nothing to do
 

00:33:55.850 --> 00:33:58.510
as an interface which has nothing to do
with SQL you can very very easily mock

00:33:58.510 --> 00:33:58.520
with SQL you can very very easily mock
 

00:33:58.520 --> 00:34:02.590
with SQL you can very very easily mock
it so if you have a V model that you

00:34:02.590 --> 00:34:02.600
it so if you have a V model that you
 

00:34:02.600 --> 00:34:03.970
it so if you have a V model that you
want to test first of all you can't test

00:34:03.970 --> 00:34:03.980
want to test first of all you can't test
 

00:34:03.980 --> 00:34:06.910
want to test first of all you can't test
view models on the on your computer you

00:34:06.910 --> 00:34:06.920
view models on the on your computer you
 

00:34:06.920 --> 00:34:09.670
view models on the on your computer you
don't need to run them on the device you

00:34:09.670 --> 00:34:09.680
don't need to run them on the device you
 

00:34:09.680 --> 00:34:12.430
don't need to run them on the device you
can create a mock of that towel you can

00:34:12.430 --> 00:34:12.440
can create a mock of that towel you can
 

00:34:12.440 --> 00:34:14.560
can create a mock of that towel you can
just use more Kito to mark it and now

00:34:14.560 --> 00:34:14.570
just use more Kito to mark it and now
 

00:34:14.570 --> 00:34:16.330
just use more Kito to mark it and now
you can write a test like this like when

00:34:16.330 --> 00:34:16.340
you can write a test like this like when
 

00:34:16.340 --> 00:34:18.160
you can write a test like this like when
load feed with this parameter is called

00:34:18.160 --> 00:34:18.170
load feed with this parameter is called
 

00:34:18.170 --> 00:34:21.190
load feed with this parameter is called
return these feeds because it's just a

00:34:21.190 --> 00:34:21.200
return these feeds because it's just a
 

00:34:21.200 --> 00:34:22.780
return these feeds because it's just a
Java interface like there is not even

00:34:22.780 --> 00:34:22.790
Java interface like there is not even
 

00:34:22.790 --> 00:34:26.020
Java interface like there is not even
any mention of database - this is all

00:34:26.020 --> 00:34:26.030
any mention of database - this is all
 

00:34:26.030 --> 00:34:28.420
any mention of database - this is all
very well abstracted without you doing

00:34:28.420 --> 00:34:28.430
very well abstracted without you doing
 

00:34:28.430 --> 00:34:34.780
very well abstracted without you doing
anything now migrations is another

00:34:34.780 --> 00:34:34.790
anything now migrations is another
 

00:34:34.790 --> 00:34:36.850
anything now migrations is another
important topic right so if you use the

00:34:36.850 --> 00:34:36.860
important topic right so if you use the
 

00:34:36.860 --> 00:34:40.210
important topic right so if you use the
application over time your entities will

00:34:40.210 --> 00:34:40.220
application over time your entities will
 

00:34:40.220 --> 00:34:42.910
application over time your entities will
change they fear this user object now we

00:34:42.910 --> 00:34:42.920
change they fear this user object now we
 

00:34:42.920 --> 00:34:45.070
change they fear this user object now we
start the show user photos so you wanted

00:34:45.070 --> 00:34:45.080
start the show user photos so you wanted
 

00:34:45.080 --> 00:34:48.250
start the show user photos so you wanted
to add this name field into that if you

00:34:48.250 --> 00:34:48.260
to add this name field into that if you
 

00:34:48.260 --> 00:34:51.910
to add this name field into that if you
do that when you run the application as

00:34:51.910 --> 00:34:51.920
do that when you run the application as
 

00:34:51.920 --> 00:34:53.920
do that when you run the application as
soon as room like your first access the

00:34:53.920 --> 00:34:53.930
soon as room like your first access the
 

00:34:53.930 --> 00:34:55.870
soon as room like your first access the
database room of the herbs looks like

00:34:55.870 --> 00:34:55.880
database room of the herbs looks like
 

00:34:55.880 --> 00:34:57.640
database room of the herbs looks like
you change the schema but you didn't

00:34:57.640 --> 00:34:57.650
you change the schema but you didn't
 

00:34:57.650 --> 00:35:00.280
you change the schema but you didn't
increase the version it's going to crash

00:35:00.280 --> 00:35:00.290
increase the version it's going to crash
 

00:35:00.290 --> 00:35:02.590
increase the version it's going to crash
your application now you need to handle

00:35:02.590 --> 00:35:02.600
your application now you need to handle
 

00:35:02.600 --> 00:35:04.300
your application now you need to handle
this you can simply Inc you increase

00:35:04.300 --> 00:35:04.310
this you can simply Inc you increase
 

00:35:04.310 --> 00:35:06.460
this you can simply Inc you increase
your database version in the annotation

00:35:06.460 --> 00:35:06.470
your database version in the annotation
 

00:35:06.470 --> 00:35:08.470
your database version in the annotation
which means you don't want any of the

00:35:08.470 --> 00:35:08.480
which means you don't want any of the
 

00:35:08.480 --> 00:35:10.090
which means you don't want any of the
previous data you want to start from

00:35:10.090 --> 00:35:10.100
previous data you want to start from
 

00:35:10.100 --> 00:35:14.980
previous data you want to start from
scratch or you can write a migration now

00:35:14.980 --> 00:35:14.990
scratch or you can write a migration now
 

00:35:14.990 --> 00:35:17.110
scratch or you can write a migration now
to write the migrations in our database

00:35:17.110 --> 00:35:17.120
to write the migrations in our database
 

00:35:17.120 --> 00:35:19.630
to write the migrations in our database
builder you can just test a couple of

00:35:19.630 --> 00:35:19.640
builder you can just test a couple of
 

00:35:19.640 --> 00:35:21.520
builder you can just test a couple of
migration implementations like this one

00:35:21.520 --> 00:35:21.530
migration implementations like this one
 

00:35:21.530 --> 00:35:23.740
migration implementations like this one
says I know how to migrate from one to

00:35:23.740 --> 00:35:23.750
says I know how to migrate from one to
 

00:35:23.750 --> 00:35:26.260
says I know how to migrate from one to
two you can have one from 2 to 3 3 to 4

00:35:26.260 --> 00:35:26.270
two you can have one from 2 to 3 3 to 4
 

00:35:26.270 --> 00:35:28.780
two you can have one from 2 to 3 3 to 4
and then rule will run whatever

00:35:28.780 --> 00:35:28.790
and then rule will run whatever
 

00:35:28.790 --> 00:35:30.550
and then rule will run whatever
necessary from the current version on

00:35:30.550 --> 00:35:30.560
necessary from the current version on
 

00:35:30.560 --> 00:35:32.380
necessary from the current version on
the device to your latest version it

00:35:32.380 --> 00:35:32.390
the device to your latest version it
 

00:35:32.390 --> 00:35:34.660
the device to your latest version it
will just chain them and if anything in

00:35:34.660 --> 00:35:34.670
will just chain them and if anything in
 

00:35:34.670 --> 00:35:35.320
will just chain them and if anything in
the middle is

00:35:35.320 --> 00:35:35.330
the middle is
 

00:35:35.330 --> 00:35:38.250
the middle is
Simmonds going to recreate the database

00:35:38.250 --> 00:35:38.260
Simmonds going to recreate the database
 

00:35:38.260 --> 00:35:40.270
Simmonds going to recreate the database
another important to know in these

00:35:40.270 --> 00:35:40.280
another important to know in these
 

00:35:40.280 --> 00:35:42.310
another important to know in these
migrations don't use any constants

00:35:42.310 --> 00:35:42.320
migrations don't use any constants
 

00:35:42.320 --> 00:35:44.560
migrations don't use any constants
always useful SQLite because over time

00:35:44.560 --> 00:35:44.570
always useful SQLite because over time
 

00:35:44.570 --> 00:35:46.450
always useful SQLite because over time
your application will change those

00:35:46.450 --> 00:35:46.460
your application will change those
 

00:35:46.460 --> 00:35:48.190
your application will change those
constants may change and you will get

00:35:48.190 --> 00:35:48.200
constants may change and you will get
 

00:35:48.200 --> 00:35:52.750
constants may change and you will get
bugs okay we wrote this but like we said

00:35:52.750 --> 00:35:52.760
bugs okay we wrote this but like we said
 

00:35:52.760 --> 00:35:55.810
bugs okay we wrote this but like we said
testing is important right so room also

00:35:55.810 --> 00:35:55.820
testing is important right so room also
 

00:35:55.820 --> 00:35:58.150
testing is important right so room also
comes with a testing maven artifact like

00:35:58.150 --> 00:35:58.160
comes with a testing maven artifact like
 

00:35:58.160 --> 00:36:00.220
comes with a testing maven artifact like
we carry separate objects so that you

00:36:00.220 --> 00:36:00.230
we carry separate objects so that you
 

00:36:00.230 --> 00:36:03.370
we carry separate objects so that you
can test your migrations now this is a

00:36:03.370 --> 00:36:03.380
can test your migrations now this is a
 

00:36:03.380 --> 00:36:05.440
can test your migrations now this is a
couple of steps first when we compile

00:36:05.440 --> 00:36:05.450
couple of steps first when we compile
 

00:36:05.450 --> 00:36:08.410
couple of steps first when we compile
room we can actually ask room to export

00:36:08.410 --> 00:36:08.420
room we can actually ask room to export
 

00:36:08.420 --> 00:36:10.570
room we can actually ask room to export
the schema this how your database looks

00:36:10.570 --> 00:36:10.580
the schema this how your database looks
 

00:36:10.580 --> 00:36:13.690
the schema this how your database looks
into some JSON files which you should be

00:36:13.690 --> 00:36:13.700
into some JSON files which you should be
 

00:36:13.700 --> 00:36:15.250
into some JSON files which you should be
committing to your version control

00:36:15.250 --> 00:36:15.260
committing to your version control
 

00:36:15.260 --> 00:36:19.210
committing to your version control
system pass argument and then we want

00:36:19.210 --> 00:36:19.220
system pass argument and then we want
 

00:36:19.220 --> 00:36:21.160
system pass argument and then we want
these skill files to be visible to our

00:36:21.160 --> 00:36:21.170
these skill files to be visible to our
 

00:36:21.170 --> 00:36:24.750
these skill files to be visible to our
tests right so that we can access them

00:36:24.750 --> 00:36:24.760
tests right so that we can access them
 

00:36:24.760 --> 00:36:27.490
tests right so that we can access them
last but not least for our Android test

00:36:27.490 --> 00:36:27.500
last but not least for our Android test
 

00:36:27.500 --> 00:36:29.830
last but not least for our Android test
we add this Neve dependency from room

00:36:29.830 --> 00:36:29.840
we add this Neve dependency from room
 

00:36:29.840 --> 00:36:32.230
we add this Neve dependency from room
which includes some helpful classes that

00:36:32.230 --> 00:36:32.240
which includes some helpful classes that
 

00:36:32.240 --> 00:36:35.160
which includes some helpful classes that
will help us with our migration testing

00:36:35.160 --> 00:36:35.170
will help us with our migration testing
 

00:36:35.170 --> 00:36:38.140
will help us with our migration testing
so let's say we are trying to test a

00:36:38.140 --> 00:36:38.150
so let's say we are trying to test a
 

00:36:38.150 --> 00:36:40.960
so let's say we are trying to test a
migration from version 1 to 3

00:36:40.960 --> 00:36:40.970
migration from version 1 to 3
 

00:36:40.970 --> 00:36:43.180
migration from version 1 to 3
this is this migration test helper comes

00:36:43.180 --> 00:36:43.190
this is this migration test helper comes
 

00:36:43.190 --> 00:36:47.800
this is this migration test helper comes
which comes from that artifact we create

00:36:47.800 --> 00:36:47.810
which comes from that artifact we create
 

00:36:47.810 --> 00:36:49.960
which comes from that artifact we create
an instance of that helper this

00:36:49.960 --> 00:36:49.970
an instance of that helper this
 

00:36:49.970 --> 00:36:52.930
an instance of that helper this
canonical name is how room x-force these

00:36:52.930 --> 00:36:52.940
canonical name is how room x-force these
 

00:36:52.940 --> 00:36:55.630
canonical name is how room x-force these
files by default need to think about

00:36:55.630 --> 00:36:55.640
files by default need to think about
 

00:36:55.640 --> 00:36:57.730
files by default need to think about
much and we create an open helper

00:36:57.730 --> 00:36:57.740
much and we create an open helper
 

00:36:57.740 --> 00:36:58.450
much and we create an open helper
Factory

00:36:58.450 --> 00:36:58.460
Factory
 

00:36:58.460 --> 00:37:01.120
Factory
once we have that we say ok migrate from

00:37:01.120 --> 00:37:01.130
once we have that we say ok migrate from
 

00:37:01.130 --> 00:37:01.840
once we have that we say ok migrate from
1 to 3

00:37:01.840 --> 00:37:01.850
1 to 3
 

00:37:01.850 --> 00:37:04.750
1 to 3
we ask helpful to create a database at

00:37:04.750 --> 00:37:04.760
we ask helpful to create a database at
 

00:37:04.760 --> 00:37:06.700
we ask helpful to create a database at
version 1 like you may even have

00:37:06.700 --> 00:37:06.710
version 1 like you may even have
 

00:37:06.710 --> 00:37:08.710
version 1 like you may even have
entities that doesn't exist anymore it

00:37:08.710 --> 00:37:08.720
entities that doesn't exist anymore it
 

00:37:08.720 --> 00:37:10.960
entities that doesn't exist anymore it
doesn't matter because it did export the

00:37:10.960 --> 00:37:10.970
doesn't matter because it did export the
 

00:37:10.970 --> 00:37:14.020
doesn't matter because it did export the
schema previously by reading that it can

00:37:14.020 --> 00:37:14.030
schema previously by reading that it can
 

00:37:14.030 --> 00:37:16.480
schema previously by reading that it can
recreate your database in that version

00:37:16.480 --> 00:37:16.490
recreate your database in that version
 

00:37:16.490 --> 00:37:19.240
recreate your database in that version
you can just change it directly you can

00:37:19.240 --> 00:37:19.250
you can just change it directly you can
 

00:37:19.250 --> 00:37:21.370
you can just change it directly you can
do whatever you want but it is you

00:37:21.370 --> 00:37:21.380
do whatever you want but it is you
 

00:37:21.380 --> 00:37:23.080
do whatever you want but it is you
realize this doesn't return your dog it

00:37:23.080 --> 00:37:23.090
realize this doesn't return your dog it
 

00:37:23.090 --> 00:37:24.700
realize this doesn't return your dog it
just returns your database instance

00:37:24.700 --> 00:37:24.710
just returns your database instance
 

00:37:24.710 --> 00:37:27.750
just returns your database instance
because Dahl may not be valid anymore

00:37:27.750 --> 00:37:27.760
because Dahl may not be valid anymore
 

00:37:27.760 --> 00:37:30.940
because Dahl may not be valid anymore
you can just say run these migrations

00:37:30.940 --> 00:37:30.950
you can just say run these migrations
 

00:37:30.950 --> 00:37:33.580
you can just say run these migrations
and will date the schema oh there we

00:37:33.580 --> 00:37:33.590
and will date the schema oh there we
 

00:37:33.590 --> 00:37:35.440
and will date the schema oh there we
give the database day we give it to

00:37:35.440 --> 00:37:35.450
give the database day we give it to
 

00:37:35.450 --> 00:37:38.470
give the database day we give it to
version we want now you may have tables

00:37:38.470 --> 00:37:38.480
version we want now you may have tables
 

00:37:38.480 --> 00:37:41.440
version we want now you may have tables
that you had before and maybe you want

00:37:41.440 --> 00:37:41.450
that you had before and maybe you want
 

00:37:41.450 --> 00:37:43.270
that you had before and maybe you want
to keep them but don't tell them about

00:37:43.270 --> 00:37:43.280
to keep them but don't tell them about
 

00:37:43.280 --> 00:37:45.340
to keep them but don't tell them about
it so you can decide whether we should

00:37:45.340 --> 00:37:45.350
it so you can decide whether we should
 

00:37:45.350 --> 00:37:47.200
it so you can decide whether we should
check for these or not

00:37:47.200 --> 00:37:47.210
check for these or not
 

00:37:47.210 --> 00:37:49.750
check for these or not
and now you give a list of migration so

00:37:49.750 --> 00:37:49.760
and now you give a list of migration so
 

00:37:49.760 --> 00:37:51.819
and now you give a list of migration so
I have these are the old migrations we

00:37:51.819 --> 00:37:51.829
I have these are the old migrations we
 

00:37:51.829 --> 00:37:54.130
I have these are the old migrations we
have most of the room please migrate the

00:37:54.130 --> 00:37:54.140
have most of the room please migrate the
 

00:37:54.140 --> 00:37:56.319
have most of the room please migrate the
database from the previous version to

00:37:56.319 --> 00:37:56.329
database from the previous version to
 

00:37:56.329 --> 00:37:57.819
database from the previous version to
the new version and then check the

00:37:57.819 --> 00:37:57.829
the new version and then check the
 

00:37:57.829 --> 00:38:00.280
the new version and then check the
schema for you and then you can also

00:38:00.280 --> 00:38:00.290
schema for you and then you can also
 

00:38:00.290 --> 00:38:02.319
schema for you and then you can also
have like if you have custom things have

00:38:02.319 --> 00:38:02.329
have like if you have custom things have
 

00:38:02.329 --> 00:38:04.120
have like if you have custom things have
changed

00:38:04.120 --> 00:38:04.130
changed
 

00:38:04.130 --> 00:38:07.690
changed
entities in the previous versions to the

00:38:07.690 --> 00:38:07.700
entities in the previous versions to the
 

00:38:07.700 --> 00:38:09.099
entities in the previous versions to the
new versions then you can manually

00:38:09.099 --> 00:38:09.109
new versions then you can manually
 

00:38:09.109 --> 00:38:12.240
new versions then you can manually
assert on these things

00:38:12.240 --> 00:38:12.250
 
 

00:38:12.250 --> 00:38:15.609
 
okay so that was room we have a detailed

00:38:15.609 --> 00:38:15.619
okay so that was room we have a detailed
 

00:38:15.619 --> 00:38:17.680
okay so that was room we have a detailed
documentation page on the documentation

00:38:17.680 --> 00:38:17.690
documentation page on the documentation
 

00:38:17.690 --> 00:38:20.109
documentation page on the documentation
on the web page why do you like like we

00:38:20.109 --> 00:38:20.119
on the web page why do you like like we
 

00:38:20.119 --> 00:38:22.000
on the web page why do you like like we
do for room also for all our

00:38:22.000 --> 00:38:22.010
do for room also for all our
 

00:38:22.010 --> 00:38:24.730
do for room also for all our
architecture components we have a

00:38:24.730 --> 00:38:24.740
architecture components we have a
 

00:38:24.740 --> 00:38:27.520
architecture components we have a
testing artifact which includes one rule

00:38:27.520 --> 00:38:27.530
testing artifact which includes one rule
 

00:38:27.530 --> 00:38:30.099
testing artifact which includes one rule
for a unit on one rule for your

00:38:30.099 --> 00:38:30.109
for a unit on one rule for your
 

00:38:30.109 --> 00:38:32.290
for a unit on one rule for your
instrumentation test that how is it

00:38:32.290 --> 00:38:32.300
instrumentation test that how is it
 

00:38:32.300 --> 00:38:33.609
instrumentation test that how is it
dealing with the background threads

00:38:33.609 --> 00:38:33.619
dealing with the background threads
 

00:38:33.619 --> 00:38:36.190
dealing with the background threads
videos so we want to make sure

00:38:36.190 --> 00:38:36.200
videos so we want to make sure
 

00:38:36.200 --> 00:38:38.349
videos so we want to make sure
everything we have here is testable and

00:38:38.349 --> 00:38:38.359
everything we have here is testable and
 

00:38:38.359 --> 00:38:40.990
everything we have here is testable and
if it is not we all fix it so what's

00:38:40.990 --> 00:38:41.000
if it is not we all fix it so what's
 

00:38:41.000 --> 00:38:44.140
if it is not we all fix it so what's
next for you room is available today

00:38:44.140 --> 00:38:44.150
next for you room is available today
 

00:38:44.150 --> 00:38:46.270
next for you room is available today
please go check it like play with it

00:38:46.270 --> 00:38:46.280
please go check it like play with it
 

00:38:46.280 --> 00:38:49.750
please go check it like play with it
see how it looks check out the warp

00:38:49.750 --> 00:38:49.760
see how it looks check out the warp
 

00:38:49.760 --> 00:38:52.000
see how it looks check out the warp
renders come / arch which is the main

00:38:52.000 --> 00:38:52.010
renders come / arch which is the main
 

00:38:52.010 --> 00:38:53.650
renders come / arch which is the main
page for all of these architecture

00:38:53.650 --> 00:38:53.660
page for all of these architecture
 

00:38:53.660 --> 00:38:56.170
page for all of these architecture
components now we say these can work

00:38:56.170 --> 00:38:56.180
components now we say these can work
 

00:38:56.180 --> 00:38:58.240
components now we say these can work
independently but these also work very

00:38:58.240 --> 00:38:58.250
independently but these also work very
 

00:38:58.250 --> 00:39:00.849
independently but these also work very
well together is you seen in the live

00:39:00.849 --> 00:39:00.859
well together is you seen in the live
 

00:39:00.859 --> 00:39:03.640
well together is you seen in the live
data example Creole hat so check it out

00:39:03.640 --> 00:39:03.650
data example Creole hat so check it out
 

00:39:03.650 --> 00:39:05.799
data example Creole hat so check it out
and also check out the code labs we have

00:39:05.799 --> 00:39:05.809
and also check out the code labs we have
 

00:39:05.809 --> 00:39:08.740
and also check out the code labs we have
colors for both room and lifecycles and

00:39:08.740 --> 00:39:08.750
colors for both room and lifecycles and
 

00:39:08.750 --> 00:39:10.740
colors for both room and lifecycles and
they're available in the code lab pants

00:39:10.740 --> 00:39:10.750
they're available in the code lab pants
 

00:39:10.750 --> 00:39:12.400
they're available in the code lab pants
thank

00:39:12.400 --> 00:39:12.410
thank
 

00:39:12.410 --> 00:39:15.610
thank
[Applause]

00:39:15.610 --> 00:39:15.620
[Applause]
 

00:39:15.620 --> 00:39:26.520
[Applause]
[Music]

00:39:26.520 --> 00:39:26.530
 
 

00:39:26.530 --> 00:39:29.549
 
[Music]

