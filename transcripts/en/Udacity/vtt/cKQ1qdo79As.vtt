WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
In 1992 I did my master's thesis on a tool

00:00:05.000 --> 00:00:08.000
that would take a program and visualize this

00:00:08.000 --> 00:00:11.000
in various graphical forms.

00:00:11.000 --> 00:00:15.000
I will produce correctly formatted text, flow charts,

00:00:15.000 --> 00:00:18.000
or Nassiâ€“Shneiderman diagrams.

00:00:18.000 --> 00:00:23.000
And you'd even be able to edit these in an editor.

00:00:23.000 --> 00:00:26.000
Later I went on pursuing my Ph.D.,

00:00:26.000 --> 00:00:29.000
which I completed in 1997 on a topic named

00:00:29.000 --> 00:00:32.000
configuration management with feature logic.

00:00:32.000 --> 00:00:35.000
The idea was to use description logic to model

00:00:35.000 --> 00:00:39.000
changes in variance and to detect inconsistencies.

00:00:39.000 --> 00:00:42.000
This was pretty cool, but the problem was that

00:00:42.000 --> 00:00:46.000
apparently no developer was willing to learn description logics.

00:00:46.000 --> 00:00:49.000
Plus, configuration management was essentially

00:00:49.000 --> 00:00:51.000
solved so I was disappointed.

00:00:51.000 --> 00:00:55.000
That's when a student of mine, Dorothea Litkehaus, came along,

00:00:55.000 --> 00:00:58.000
and we developed the idea to use

00:00:58.000 --> 00:01:02.000
my old library for visualizing programs

00:01:02.000 --> 00:01:06.000
to visualize data structures rather than programs.

00:01:06.000 --> 00:01:10.000
Finally, I would be doing something useful.

00:01:10.000 --> 00:01:14.000
The resulting tool became a debugger named DDD

00:01:14.000 --> 00:01:17.000
for data display debugger.

00:01:17.000 --> 00:01:19.000
This is what DDD looked like.

00:01:19.000 --> 00:01:21.000
It had a command line interface

00:01:21.000 --> 00:01:24.000
so you could enter arbitrary commands.

00:01:24.000 --> 00:01:26.000
You'd also see the source code.

00:01:26.000 --> 00:01:29.000
You would be able to set break points,

00:01:29.000 --> 00:01:32.000
and see the current execution position.

00:01:32.000 --> 00:01:34.000
The interesting thing however about DDD,

00:01:34.000 --> 00:01:37.000
as the name says data display debugger,

00:01:37.000 --> 00:01:40.000
was the ability to show data structures.

00:01:40.000 --> 00:01:46.000
For instance, up here we have visualized that pointer list,

00:01:46.000 --> 00:01:51.000
and now I can double click on the pointer to see where it points to.

00:01:51.000 --> 00:01:54.000
This is the element the pointer points to.

00:01:54.000 --> 00:01:57.000
I can check out what self points to.

00:01:57.000 --> 00:02:00.000
Obviously, it points to itself.

00:02:00.000 --> 00:02:02.000
I can look up the next value.

00:02:02.000 --> 00:02:04.000
Again, look up self,

00:02:04.000 --> 00:02:07.000
and again look up the next value

00:02:07.000 --> 00:02:12.000
and see that the whole thing becomes actually a linked list.

00:02:12.000 --> 00:02:15.000
Needless to say, as I keep on stepping through the program,

00:02:15.000 --> 00:02:17.000
and as the values change,

00:02:17.000 --> 00:02:22.000
the display would be updated automatically just as well.

00:02:22.000 --> 00:02:24.000
DDD eventually became free software,

00:02:24.000 --> 00:02:27.000
and was even adopted by the GNU project.

00:02:27.000 --> 00:02:30.000
So it became GNU DDD,

00:02:30.000 --> 00:02:34.000
and it became very popular with C and C++ programmers.

00:02:34.000 --> 00:02:38.000
Today there is even python support build into DDD,

00:02:38.000 --> 00:02:40.000
but I'm not maintaining this anymore

00:02:40.000 --> 00:02:42.000
so I don't know how well this works.

