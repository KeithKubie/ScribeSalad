WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.309
when implementing the deep neural

00:00:01.309 --> 00:00:01.319
when implementing the deep neural
 

00:00:01.319 --> 00:00:03.590
when implementing the deep neural
network one of the debugging tools I

00:00:03.590 --> 00:00:03.600
network one of the debugging tools I
 

00:00:03.600 --> 00:00:06.050
network one of the debugging tools I
often use to check the correctness of my

00:00:06.050 --> 00:00:06.060
often use to check the correctness of my
 

00:00:06.060 --> 00:00:08.179
often use to check the correctness of my
code it's a total piece of paper and

00:00:08.179 --> 00:00:08.189
code it's a total piece of paper and
 

00:00:08.189 --> 00:00:10.280
code it's a total piece of paper and
just work through the dimensions and

00:00:10.280 --> 00:00:10.290
just work through the dimensions and
 

00:00:10.290 --> 00:00:12.320
just work through the dimensions and
matrix I'm working with so let me show

00:00:12.320 --> 00:00:12.330
matrix I'm working with so let me show
 

00:00:12.330 --> 00:00:13.999
matrix I'm working with so let me show
you how to do that since I hope this

00:00:13.999 --> 00:00:14.009
you how to do that since I hope this
 

00:00:14.009 --> 00:00:16.189
you how to do that since I hope this
will make it easier for you to implement

00:00:16.189 --> 00:00:16.199
will make it easier for you to implement
 

00:00:16.199 --> 00:00:19.220
will make it easier for you to implement
your dependences what so capital L is

00:00:19.220 --> 00:00:19.230
your dependences what so capital L is
 

00:00:19.230 --> 00:00:21.380
your dependences what so capital L is
equal to five and come down quickly

00:00:21.380 --> 00:00:21.390
equal to five and come down quickly
 

00:00:21.390 --> 00:00:23.320
equal to five and come down quickly
not counting the input layer there are

00:00:23.320 --> 00:00:23.330
not counting the input layer there are
 

00:00:23.330 --> 00:00:26.390
not counting the input layer there are
five layers here so 400 layers and one

00:00:26.390 --> 00:00:26.400
five layers here so 400 layers and one
 

00:00:26.400 --> 00:00:28.640
five layers here so 400 layers and one
output layer and so if you implement

00:00:28.640 --> 00:00:28.650
output layer and so if you implement
 

00:00:28.650 --> 00:00:30.679
output layer and so if you implement
forward propagation the first step will

00:00:30.679 --> 00:00:30.689
forward propagation the first step will
 

00:00:30.689 --> 00:00:38.350
forward propagation the first step will
be Z 1 equals W 1 x equal features X

00:00:38.350 --> 00:00:38.360
be Z 1 equals W 1 x equal features X
 

00:00:38.360 --> 00:00:44.090
be Z 1 equals W 1 x equal features X
plus B 1 so let's ignore the on bias

00:00:44.090 --> 00:00:44.100
plus B 1 so let's ignore the on bias
 

00:00:44.100 --> 00:00:46.670
plus B 1 so let's ignore the on bias
terms B for now and focus on the

00:00:46.670 --> 00:00:46.680
terms B for now and focus on the
 

00:00:46.680 --> 00:00:49.959
terms B for now and focus on the
parameter W now this first hidden layer

00:00:49.959 --> 00:00:49.969
parameter W now this first hidden layer
 

00:00:49.969 --> 00:00:54.590
parameter W now this first hidden layer
has three hidden units so this is on

00:00:54.590 --> 00:00:54.600
has three hidden units so this is on
 

00:00:54.600 --> 00:00:57.380
has three hidden units so this is on
layer 0 layer 1 layer 2 layer 3

00:00:57.380 --> 00:00:57.390
layer 0 layer 1 layer 2 layer 3
 

00:00:57.390 --> 00:01:00.439
layer 0 layer 1 layer 2 layer 3
therefore and there five so using the

00:01:00.439 --> 00:01:00.449
therefore and there five so using the
 

00:01:00.449 --> 00:01:02.750
therefore and there five so using the
notation we had from the previous video

00:01:02.750 --> 00:01:02.760
notation we had from the previous video
 

00:01:02.760 --> 00:01:05.030
notation we had from the previous video
we have the N 1 which is the number of

00:01:05.030 --> 00:01:05.040
we have the N 1 which is the number of
 

00:01:05.040 --> 00:01:08.560
we have the N 1 which is the number of
10 units on layer 1 is equal to 3 and

00:01:08.560 --> 00:01:08.570
10 units on layer 1 is equal to 3 and
 

00:01:08.570 --> 00:01:12.649
10 units on layer 1 is equal to 3 and
here we would have 2 n 2 is equal to 5

00:01:12.649 --> 00:01:12.659
here we would have 2 n 2 is equal to 5
 

00:01:12.659 --> 00:01:18.859
here we would have 2 n 2 is equal to 5
and 3 is equal to 4 and 4 is equal to 2

00:01:18.859 --> 00:01:18.869
and 3 is equal to 4 and 4 is equal to 2
 

00:01:18.869 --> 00:01:23.929
and 3 is equal to 4 and 4 is equal to 2
and n 5 is equal to 1 and so far we've

00:01:23.929 --> 00:01:23.939
and n 5 is equal to 1 and so far we've
 

00:01:23.939 --> 00:01:26.149
and n 5 is equal to 1 and so far we've
only seen your networks with a single

00:01:26.149 --> 00:01:26.159
only seen your networks with a single
 

00:01:26.159 --> 00:01:28.429
only seen your networks with a single
output unit that later in later courses

00:01:28.429 --> 00:01:28.439
output unit that later in later courses
 

00:01:28.439 --> 00:01:30.590
output unit that later in later courses
we'll talk about neural network with

00:01:30.590 --> 00:01:30.600
we'll talk about neural network with
 

00:01:30.600 --> 00:01:32.569
we'll talk about neural network with
multiple output units as well and

00:01:32.569 --> 00:01:32.579
multiple output units as well and
 

00:01:32.579 --> 00:01:36.410
multiple output units as well and
finally for the input layer we also have

00:01:36.410 --> 00:01:36.420
finally for the input layer we also have
 

00:01:36.420 --> 00:01:40.730
finally for the input layer we also have
and 0 equals and X is equal to 2 so now

00:01:40.730 --> 00:01:40.740
and 0 equals and X is equal to 2 so now
 

00:01:40.740 --> 00:01:44.480
and 0 equals and X is equal to 2 so now
let's think about the dimensions of Z W

00:01:44.480 --> 00:01:44.490
let's think about the dimensions of Z W
 

00:01:44.490 --> 00:01:48.469
let's think about the dimensions of Z W
and X V is the vector of activations for

00:01:48.469 --> 00:01:48.479
and X V is the vector of activations for
 

00:01:48.479 --> 00:01:53.149
and X V is the vector of activations for
this first hidden layer so Z is going to

00:01:53.149 --> 00:01:53.159
this first hidden layer so Z is going to
 

00:01:53.159 --> 00:01:57.620
this first hidden layer so Z is going to
be V by 1 is going to be a 3 dimensional

00:01:57.620 --> 00:01:57.630
be V by 1 is going to be a 3 dimensional
 

00:01:57.630 --> 00:02:01.910
be V by 1 is going to be a 3 dimensional
vector so I'm going to write it as a n1

00:02:01.910 --> 00:02:01.920
vector so I'm going to write it as a n1
 

00:02:01.920 --> 00:02:04.789
vector so I'm going to write it as a n1
by 1 dimensional vector and 1 by 1

00:02:04.789 --> 00:02:04.799
by 1 dimensional vector and 1 by 1
 

00:02:04.799 --> 00:02:07.280
by 1 dimensional vector and 1 by 1
dimensional matrix is 3 3 by 1 in this

00:02:07.280 --> 00:02:07.290
dimensional matrix is 3 3 by 1 in this
 

00:02:07.290 --> 00:02:07.770
dimensional matrix is 3 3 by 1 in this
case

00:02:07.770 --> 00:02:07.780
case
 

00:02:07.780 --> 00:02:10.950
case
now how about the input features X X we

00:02:10.950 --> 00:02:10.960
now how about the input features X X we
 

00:02:10.960 --> 00:02:13.440
now how about the input features X X we
have two input features so X is in this

00:02:13.440 --> 00:02:13.450
have two input features so X is in this
 

00:02:13.450 --> 00:02:16.710
have two input features so X is in this
example two by one but more generally it

00:02:16.710 --> 00:02:16.720
example two by one but more generally it
 

00:02:16.720 --> 00:02:20.250
example two by one but more generally it
will be n 0 by 1 so what we need is for

00:02:20.250 --> 00:02:20.260
will be n 0 by 1 so what we need is for
 

00:02:20.260 --> 00:02:23.280
will be n 0 by 1 so what we need is for
the matrix w1 to be something that when

00:02:23.280 --> 00:02:23.290
the matrix w1 to be something that when
 

00:02:23.290 --> 00:02:25.940
the matrix w1 to be something that when
we multiply and n 0 by 1 vector to it

00:02:25.940 --> 00:02:25.950
we multiply and n 0 by 1 vector to it
 

00:02:25.950 --> 00:02:30.300
we multiply and n 0 by 1 vector to it
begin an one by one vector right so you

00:02:30.300 --> 00:02:30.310
begin an one by one vector right so you
 

00:02:30.310 --> 00:02:34.110
begin an one by one vector right so you
have sort of a three dimensional vector

00:02:34.110 --> 00:02:34.120
have sort of a three dimensional vector
 

00:02:34.120 --> 00:02:37.680
have sort of a three dimensional vector
equals something times a 2 dimensional

00:02:37.680 --> 00:02:37.690
equals something times a 2 dimensional
 

00:02:37.690 --> 00:02:41.010
equals something times a 2 dimensional
vector and so by the rules of matrix

00:02:41.010 --> 00:02:41.020
vector and so by the rules of matrix
 

00:02:41.020 --> 00:02:44.100
vector and so by the rules of matrix
multiplication this has got to be a me

00:02:44.100 --> 00:02:44.110
multiplication this has got to be a me
 

00:02:44.110 --> 00:02:49.170
multiplication this has got to be a me
by 2 matrix right because the 3 by 2

00:02:49.170 --> 00:02:49.180
by 2 matrix right because the 3 by 2
 

00:02:49.180 --> 00:02:52.470
by 2 matrix right because the 3 by 2
matrix times a 2 by 1 matrix or times a

00:02:52.470 --> 00:02:52.480
matrix times a 2 by 1 matrix or times a
 

00:02:52.480 --> 00:02:55.050
matrix times a 2 by 1 matrix or times a
2 or one vector that gives you a fee by

00:02:55.050 --> 00:02:55.060
2 or one vector that gives you a fee by
 

00:02:55.060 --> 00:02:55.770
2 or one vector that gives you a fee by
one vector

00:02:55.770 --> 00:02:55.780
one vector
 

00:02:55.780 --> 00:02:58.110
one vector
and more generally this is going to be

00:02:58.110 --> 00:02:58.120
and more generally this is going to be
 

00:02:58.120 --> 00:03:03.150
and more generally this is going to be
an N 1 by n 0 dimensional matrix so what

00:03:03.150 --> 00:03:03.160
an N 1 by n 0 dimensional matrix so what
 

00:03:03.160 --> 00:03:04.800
an N 1 by n 0 dimensional matrix so what
we think about here is that the

00:03:04.800 --> 00:03:04.810
we think about here is that the
 

00:03:04.810 --> 00:03:11.270
we think about here is that the
dimensions of w1 has to be N 1 by n 0

00:03:11.270 --> 00:03:11.280
dimensions of w1 has to be N 1 by n 0
 

00:03:11.280 --> 00:03:16.979
dimensions of w1 has to be N 1 by n 0
and more generally the dimensions of WL

00:03:16.979 --> 00:03:16.989
and more generally the dimensions of WL
 

00:03:16.989 --> 00:03:20.670
and more generally the dimensions of WL
must be NF L by n L minus 1 so for

00:03:20.670 --> 00:03:20.680
must be NF L by n L minus 1 so for
 

00:03:20.680 --> 00:03:24.150
must be NF L by n L minus 1 so for
example the dimensions of W 2 for this

00:03:24.150 --> 00:03:24.160
example the dimensions of W 2 for this
 

00:03:24.160 --> 00:03:31.170
example the dimensions of W 2 for this
it will have to be 5 by 3 or it will be

00:03:31.170 --> 00:03:31.180
it will have to be 5 by 3 or it will be
 

00:03:31.180 --> 00:03:36.539
it will have to be 5 by 3 or it will be
n 2 by N 1 because we're going to

00:03:36.539 --> 00:03:36.549
n 2 by N 1 because we're going to
 

00:03:36.549 --> 00:03:47.520
n 2 by N 1 because we're going to
compute Z 2 as W 2 times a 1 and again

00:03:47.520 --> 00:03:47.530
compute Z 2 as W 2 times a 1 and again
 

00:03:47.530 --> 00:03:51.630
compute Z 2 as W 2 times a 1 and again
this ignore the bias for now but so this

00:03:51.630 --> 00:03:51.640
this ignore the bias for now but so this
 

00:03:51.640 --> 00:03:55.860
this ignore the bias for now but so this
is going to be 3 by 1 and we need this

00:03:55.860 --> 00:03:55.870
is going to be 3 by 1 and we need this
 

00:03:55.870 --> 00:04:00.840
is going to be 3 by 1 and we need this
to be 5 by 1 and so this had better be 5

00:04:00.840 --> 00:04:00.850
to be 5 by 1 and so this had better be 5
 

00:04:00.850 --> 00:04:07.170
to be 5 by 1 and so this had better be 5
by 3 and similarly W 3 will be is really

00:04:07.170 --> 00:04:07.180
by 3 and similarly W 3 will be is really
 

00:04:07.180 --> 00:04:11.490
by 3 and similarly W 3 will be is really
the dimension of the next layer comma 2

00:04:11.490 --> 00:04:11.500
the dimension of the next layer comma 2
 

00:04:11.500 --> 00:04:13.830
the dimension of the next layer comma 2
dimension of the previous layer so this

00:04:13.830 --> 00:04:13.840
dimension of the previous layer so this
 

00:04:13.840 --> 00:04:21.270
dimension of the previous layer so this
is going to be 4 by 5 w 4

00:04:21.270 --> 00:04:21.280
 

00:04:21.280 --> 00:04:30.940
is going to be on 2x4 and w5 is going to

00:04:30.940 --> 00:04:30.950
is going to be on 2x4 and w5 is going to
 

00:04:30.950 --> 00:04:35.980
is going to be on 2x4 and w5 is going to
be 1 by 2 okay so the general formula to

00:04:35.980 --> 00:04:35.990
be 1 by 2 okay so the general formula to
 

00:04:35.990 --> 00:04:37.690
be 1 by 2 okay so the general formula to
check is that when you're implementing

00:04:37.690 --> 00:04:37.700
check is that when you're implementing
 

00:04:37.700 --> 00:04:40.660
check is that when you're implementing
the matrix for a layer L to the

00:04:40.660 --> 00:04:40.670
the matrix for a layer L to the
 

00:04:40.670 --> 00:04:46.050
the matrix for a layer L to the
dimension of that matrix B and L by n L

00:04:46.050 --> 00:04:46.060
dimension of that matrix B and L by n L
 

00:04:46.060 --> 00:04:50.530
dimension of that matrix B and L by n L
minus 1 now let's think about the

00:04:50.530 --> 00:04:50.540
minus 1 now let's think about the
 

00:04:50.540 --> 00:04:55.960
minus 1 now let's think about the
dimension of this vector B this is going

00:04:55.960 --> 00:04:55.970
dimension of this vector B this is going
 

00:04:55.970 --> 00:04:59.560
dimension of this vector B this is going
to be a 3 by 1 vector so you have to add

00:04:59.560 --> 00:04:59.570
to be a 3 by 1 vector so you have to add
 

00:04:59.570 --> 00:05:03.340
to be a 3 by 1 vector so you have to add
that to another 3 by 1 vector in order

00:05:03.340 --> 00:05:03.350
that to another 3 by 1 vector in order
 

00:05:03.350 --> 00:05:06.720
that to another 3 by 1 vector in order
to get a 3 by 1 vector as the output or

00:05:06.720 --> 00:05:06.730
to get a 3 by 1 vector as the output or
 

00:05:06.730 --> 00:05:09.640
to get a 3 by 1 vector as the output or
in this example you need to add this

00:05:09.640 --> 00:05:09.650
in this example you need to add this
 

00:05:09.650 --> 00:05:12.580
in this example you need to add this
this is going to be 5 by 1 so it's going

00:05:12.580 --> 00:05:12.590
this is going to be 5 by 1 so it's going
 

00:05:12.590 --> 00:05:15.670
this is going to be 5 by 1 so it's going
to be another 5 by 1 vector in order for

00:05:15.670 --> 00:05:15.680
to be another 5 by 1 vector in order for
 

00:05:15.680 --> 00:05:17.440
to be another 5 by 1 vector in order for
you know the sum of these two things

00:05:17.440 --> 00:05:17.450
you know the sum of these two things
 

00:05:17.450 --> 00:05:20.050
you know the sum of these two things
that have in the boxes to be honest L

00:05:20.050 --> 00:05:20.060
that have in the boxes to be honest L
 

00:05:20.060 --> 00:05:23.770
that have in the boxes to be honest L
divided by 1 vector so the more general

00:05:23.770 --> 00:05:23.780
divided by 1 vector so the more general
 

00:05:23.780 --> 00:05:26.050
divided by 1 vector so the more general
rule is that um in the example on the

00:05:26.050 --> 00:05:26.060
rule is that um in the example on the
 

00:05:26.060 --> 00:05:32.260
rule is that um in the example on the
Left B 1 is N 1 by 1 right that's 3 by 1

00:05:32.260 --> 00:05:32.270
Left B 1 is N 1 by 1 right that's 3 by 1
 

00:05:32.270 --> 00:05:36.850
Left B 1 is N 1 by 1 right that's 3 by 1
and in the second example it is on this

00:05:36.850 --> 00:05:36.860
and in the second example it is on this
 

00:05:36.860 --> 00:05:43.330
and in the second example it is on this
is n 2 by 1 and so the more general case

00:05:43.330 --> 00:05:43.340
is n 2 by 1 and so the more general case
 

00:05:43.340 --> 00:05:49.090
is n 2 by 1 and so the more general case
is that BL should be n L by 1

00:05:49.090 --> 00:05:49.100
is that BL should be n L by 1
 

00:05:49.100 --> 00:05:52.030
is that BL should be n L by 1
dimensional so hopefully these two

00:05:52.030 --> 00:05:52.040
dimensional so hopefully these two
 

00:05:52.040 --> 00:05:54.190
dimensional so hopefully these two
equations help you to double check that

00:05:54.190 --> 00:05:54.200
equations help you to double check that
 

00:05:54.200 --> 00:05:57.670
equations help you to double check that
the dimensions of your matrices W as

00:05:57.670 --> 00:05:57.680
the dimensions of your matrices W as
 

00:05:57.680 --> 00:06:00.190
the dimensions of your matrices W as
well as of your vectors P are the

00:06:00.190 --> 00:06:00.200
well as of your vectors P are the
 

00:06:00.200 --> 00:06:02.800
well as of your vectors P are the
correct dimensions and of course if

00:06:02.800 --> 00:06:02.810
correct dimensions and of course if
 

00:06:02.810 --> 00:06:04.690
correct dimensions and of course if
you're implementing back propagation

00:06:04.690 --> 00:06:04.700
you're implementing back propagation
 

00:06:04.700 --> 00:06:08.770
you're implementing back propagation
then the dimensions of DW should be the

00:06:08.770 --> 00:06:08.780
then the dimensions of DW should be the
 

00:06:08.780 --> 00:06:12.850
then the dimensions of DW should be the
same as the dimension of W so DW should

00:06:12.850 --> 00:06:12.860
same as the dimension of W so DW should
 

00:06:12.860 --> 00:06:17.700
same as the dimension of W so DW should
be the same dimension as W and D D

00:06:17.700 --> 00:06:17.710
be the same dimension as W and D D
 

00:06:17.710 --> 00:06:22.510
be the same dimension as W and D D
should be the same dimension as B now

00:06:22.510 --> 00:06:22.520
should be the same dimension as B now
 

00:06:22.520 --> 00:06:24.610
should be the same dimension as B now
the other key set of quantities whose

00:06:24.610 --> 00:06:24.620
the other key set of quantities whose
 

00:06:24.620 --> 00:06:28.870
the other key set of quantities whose
dimensions to check are these Z X as

00:06:28.870 --> 00:06:28.880
dimensions to check are these Z X as
 

00:06:28.880 --> 00:06:32.300
dimensions to check are these Z X as
well as a of L which we didn't talk

00:06:32.300 --> 00:06:32.310
well as a of L which we didn't talk
 

00:06:32.310 --> 00:06:35.870
well as a of L which we didn't talk
too much about here but because Z eval

00:06:35.870 --> 00:06:35.880
too much about here but because Z eval
 

00:06:35.880 --> 00:06:40.400
too much about here but because Z eval
is equal to G of a of L apply

00:06:40.400 --> 00:06:40.410
is equal to G of a of L apply
 

00:06:40.410 --> 00:06:43.610
is equal to G of a of L apply
element-wise then Z and a should have

00:06:43.610 --> 00:06:43.620
element-wise then Z and a should have
 

00:06:43.620 --> 00:06:45.320
element-wise then Z and a should have
the same dimension in these types of

00:06:45.320 --> 00:06:45.330
the same dimension in these types of
 

00:06:45.330 --> 00:06:48.440
the same dimension in these types of
networks now let's see what happens when

00:06:48.440 --> 00:06:48.450
networks now let's see what happens when
 

00:06:48.450 --> 00:06:50.420
networks now let's see what happens when
you have a vectorized implementation

00:06:50.420 --> 00:06:50.430
you have a vectorized implementation
 

00:06:50.430 --> 00:06:52.040
you have a vectorized implementation
that looked at multiple examples at a

00:06:52.040 --> 00:06:52.050
that looked at multiple examples at a
 

00:06:52.050 --> 00:06:54.230
that looked at multiple examples at a
time even for a vectorized

00:06:54.230 --> 00:06:54.240
time even for a vectorized
 

00:06:54.240 --> 00:06:56.390
time even for a vectorized
implementation of course the dimensions

00:06:56.390 --> 00:06:56.400
implementation of course the dimensions
 

00:06:56.400 --> 00:07:00.980
implementation of course the dimensions
of WB DW and DB will stay the same but

00:07:00.980 --> 00:07:00.990
of WB DW and DB will stay the same but
 

00:07:00.990 --> 00:07:05.540
of WB DW and DB will stay the same but
the dimensions of VA as well as X will

00:07:05.540 --> 00:07:05.550
the dimensions of VA as well as X will
 

00:07:05.550 --> 00:07:07.580
the dimensions of VA as well as X will
change a bit in your vectorized

00:07:07.580 --> 00:07:07.590
change a bit in your vectorized
 

00:07:07.590 --> 00:07:12.790
change a bit in your vectorized
implementation so previously we had Z 1

00:07:12.790 --> 00:07:12.800
implementation so previously we had Z 1
 

00:07:12.800 --> 00:07:22.760
implementation so previously we had Z 1
equals W 1 times X plus B 1 where this

00:07:22.760 --> 00:07:22.770
equals W 1 times X plus B 1 where this
 

00:07:22.770 --> 00:07:34.580
equals W 1 times X plus B 1 where this
was n 1 by 1 plus N 1 by M 0 X was n 0

00:07:34.580 --> 00:07:34.590
was n 1 by 1 plus N 1 by M 0 X was n 0
 

00:07:34.590 --> 00:07:41.630
was n 1 by 1 plus N 1 by M 0 X was n 0
by 1 and B was n 1 by 1 now in a

00:07:41.630 --> 00:07:41.640
by 1 and B was n 1 by 1 now in a
 

00:07:41.640 --> 00:07:44.560
by 1 and B was n 1 by 1 now in a
vectorized implementation you would have

00:07:44.560 --> 00:07:44.570
vectorized implementation you would have
 

00:07:44.570 --> 00:07:53.810
vectorized implementation you would have
Z 1 equals W 1 times X plus B 1 where

00:07:53.810 --> 00:07:53.820
Z 1 equals W 1 times X plus B 1 where
 

00:07:53.820 --> 00:07:57.890
Z 1 equals W 1 times X plus B 1 where
now Z 1 is obtained by taking the Z ones

00:07:57.890 --> 00:07:57.900
now Z 1 is obtained by taking the Z ones
 

00:07:57.900 --> 00:08:00.440
now Z 1 is obtained by taking the Z ones
for the individual example so that z11

00:08:00.440 --> 00:08:00.450
for the individual example so that z11
 

00:08:00.450 --> 00:08:06.710
for the individual example so that z11
z12 up to Z 1 m and stacking them as

00:08:06.710 --> 00:08:06.720
z12 up to Z 1 m and stacking them as
 

00:08:06.720 --> 00:08:10.730
z12 up to Z 1 m and stacking them as
follows and this gives you V 1 so the

00:08:10.730 --> 00:08:10.740
follows and this gives you V 1 so the
 

00:08:10.740 --> 00:08:12.920
follows and this gives you V 1 so the
dimension of V 1 is that instead of

00:08:12.920 --> 00:08:12.930
dimension of V 1 is that instead of
 

00:08:12.930 --> 00:08:15.020
dimension of V 1 is that instead of
being n1 by 1

00:08:15.020 --> 00:08:15.030
being n1 by 1
 

00:08:15.030 --> 00:08:18.560
being n1 by 1
it ends up being n1 by M if M is the

00:08:18.560 --> 00:08:18.570
it ends up being n1 by M if M is the
 

00:08:18.570 --> 00:08:21.100
it ends up being n1 by M if M is the
size your training set the dimensions of

00:08:21.100 --> 00:08:21.110
size your training set the dimensions of
 

00:08:21.110 --> 00:08:25.400
size your training set the dimensions of
w1 stays the same cystal and 1 by n 0

00:08:25.400 --> 00:08:25.410
w1 stays the same cystal and 1 by n 0
 

00:08:25.410 --> 00:08:30.560
w1 stays the same cystal and 1 by n 0
and X instead of being n 0 by 1 is now

00:08:30.560 --> 00:08:30.570
and X instead of being n 0 by 1 is now
 

00:08:30.570 --> 00:08:32.600
and X instead of being n 0 by 1 is now
all your training examples stamped

00:08:32.600 --> 00:08:32.610
all your training examples stamped
 

00:08:32.610 --> 00:08:36.380
all your training examples stamped
horizontally so is now n 0 by M and so

00:08:36.380 --> 00:08:36.390
horizontally so is now n 0 by M and so
 

00:08:36.390 --> 00:08:39.680
horizontally so is now n 0 by M and so
you notice that when you take a N 1 by n

00:08:39.680 --> 00:08:39.690
you notice that when you take a N 1 by n
 

00:08:39.690 --> 00:08:42.650
you notice that when you take a N 1 by n
0 matrix and multiply that line and 0 by

00:08:42.650 --> 00:08:42.660
0 matrix and multiply that line and 0 by
 

00:08:42.660 --> 00:08:45.420
0 matrix and multiply that line and 0 by
n matrix that together they

00:08:45.420 --> 00:08:45.430
n matrix that together they
 

00:08:45.430 --> 00:08:47.280
n matrix that together they
actually give you an N 1 by M

00:08:47.280 --> 00:08:47.290
actually give you an N 1 by M
 

00:08:47.290 --> 00:08:50.490
actually give you an N 1 by M
dimensional matrix as expected now the

00:08:50.490 --> 00:08:50.500
dimensional matrix as expected now the
 

00:08:50.500 --> 00:08:54.930
dimensional matrix as expected now the
final detail is that B 1 is still an one

00:08:54.930 --> 00:08:54.940
final detail is that B 1 is still an one
 

00:08:54.940 --> 00:08:58.050
final detail is that B 1 is still an one
by one but when you take this and add it

00:08:58.050 --> 00:08:58.060
by one but when you take this and add it
 

00:08:58.060 --> 00:09:00.930
by one but when you take this and add it
to B then through pipes and Broadcasting

00:09:00.930 --> 00:09:00.940
to B then through pipes and Broadcasting
 

00:09:00.940 --> 00:09:04.410
to B then through pipes and Broadcasting
this will get duplicated into an N 1 by

00:09:04.410 --> 00:09:04.420
this will get duplicated into an N 1 by
 

00:09:04.420 --> 00:09:08.400
this will get duplicated into an N 1 by
M matrix and then added element wise so

00:09:08.400 --> 00:09:08.410
M matrix and then added element wise so
 

00:09:08.410 --> 00:09:10.170
M matrix and then added element wise so
on the previous slide we talked about

00:09:10.170 --> 00:09:10.180
on the previous slide we talked about
 

00:09:10.180 --> 00:09:15.660
on the previous slide we talked about
the dimensions of WB DW and DB here what

00:09:15.660 --> 00:09:15.670
the dimensions of WB DW and DB here what
 

00:09:15.670 --> 00:09:20.990
the dimensions of WB DW and DB here what
we see is that whereas ZL as well as al

00:09:20.990 --> 00:09:21.000
we see is that whereas ZL as well as al
 

00:09:21.000 --> 00:09:27.930
we see is that whereas ZL as well as al
are of dimension n L by 1 we have now

00:09:27.930 --> 00:09:27.940
are of dimension n L by 1 we have now
 

00:09:27.940 --> 00:09:31.980
are of dimension n L by 1 we have now
instead that capital ZL as well as

00:09:31.980 --> 00:09:31.990
instead that capital ZL as well as
 

00:09:31.990 --> 00:09:38.970
instead that capital ZL as well as
capital al are ml by M and a special

00:09:38.970 --> 00:09:38.980
capital al are ml by M and a special
 

00:09:38.980 --> 00:09:42.630
capital al are ml by M and a special
case of this is when L is equal to 0 in

00:09:42.630 --> 00:09:42.640
case of this is when L is equal to 0 in
 

00:09:42.640 --> 00:09:46.380
case of this is when L is equal to 0 in
which case a 0 which is equal to just

00:09:46.380 --> 00:09:46.390
which case a 0 which is equal to just
 

00:09:46.390 --> 00:09:48.870
which case a 0 which is equal to just
your training set input features X is

00:09:48.870 --> 00:09:48.880
your training set input features X is
 

00:09:48.880 --> 00:09:52.800
your training set input features X is
going to be equal to n 0 by M as

00:09:52.800 --> 00:09:52.810
going to be equal to n 0 by M as
 

00:09:52.810 --> 00:09:56.070
going to be equal to n 0 by M as
expected and of course when you're

00:09:56.070 --> 00:09:56.080
expected and of course when you're
 

00:09:56.080 --> 00:10:01.250
expected and of course when you're
implementing this in back propagation

00:10:01.250 --> 00:10:01.260
implementing this in back propagation
 

00:10:01.260 --> 00:10:04.710
implementing this in back propagation
we'll see later you end up computing DZ

00:10:04.710 --> 00:10:04.720
we'll see later you end up computing DZ
 

00:10:04.720 --> 00:10:10.199
we'll see later you end up computing DZ
as well as da and so these will of

00:10:10.199 --> 00:10:10.209
as well as da and so these will of
 

00:10:10.209 --> 00:10:14.190
as well as da and so these will of
course have the same dimension as Z and

00:10:14.190 --> 00:10:14.200
course have the same dimension as Z and
 

00:10:14.200 --> 00:10:17.790
course have the same dimension as Z and
a so I hope the exercise went through

00:10:17.790 --> 00:10:17.800
a so I hope the exercise went through
 

00:10:17.800 --> 00:10:19.920
a so I hope the exercise went through
house clarified the dimensions of the

00:10:19.920 --> 00:10:19.930
house clarified the dimensions of the
 

00:10:19.930 --> 00:10:21.420
house clarified the dimensions of the
various matrices you'll be working with

00:10:21.420 --> 00:10:21.430
various matrices you'll be working with
 

00:10:21.430 --> 00:10:23.970
various matrices you'll be working with
when you implement back-propagation for

00:10:23.970 --> 00:10:23.980
when you implement back-propagation for
 

00:10:23.980 --> 00:10:26.250
when you implement back-propagation for
deep neural network so long as you work

00:10:26.250 --> 00:10:26.260
deep neural network so long as you work
 

00:10:26.260 --> 00:10:27.510
deep neural network so long as you work
through your code and make sure that all

00:10:27.510 --> 00:10:27.520
through your code and make sure that all
 

00:10:27.520 --> 00:10:29.940
through your code and make sure that all
the matrices dimensions are consistent

00:10:29.940 --> 00:10:29.950
the matrices dimensions are consistent
 

00:10:29.950 --> 00:10:32.579
the matrices dimensions are consistent
that will usually help you go some ways

00:10:32.579 --> 00:10:32.589
that will usually help you go some ways
 

00:10:32.589 --> 00:10:34.530
that will usually help you go some ways
towards eliminating some class of

00:10:34.530 --> 00:10:34.540
towards eliminating some class of
 

00:10:34.540 --> 00:10:37.019
towards eliminating some class of
possible bugs so I hope that exercise

00:10:37.019 --> 00:10:37.029
possible bugs so I hope that exercise
 

00:10:37.029 --> 00:10:39.150
possible bugs so I hope that exercise
for figure out the dimensions of the

00:10:39.150 --> 00:10:39.160
for figure out the dimensions of the
 

00:10:39.160 --> 00:10:41.040
for figure out the dimensions of the
various matrices you'll be working on is

00:10:41.040 --> 00:10:41.050
various matrices you'll be working on is
 

00:10:41.050 --> 00:10:43.319
various matrices you'll be working on is
helpful when you implement a deep neural

00:10:43.319 --> 00:10:43.329
helpful when you implement a deep neural
 

00:10:43.329 --> 00:10:45.120
helpful when you implement a deep neural
network if you keep straight the

00:10:45.120 --> 00:10:45.130
network if you keep straight the
 

00:10:45.130 --> 00:10:46.860
network if you keep straight the
dimensions of these various matrices and

00:10:46.860 --> 00:10:46.870
dimensions of these various matrices and
 

00:10:46.870 --> 00:10:48.540
dimensions of these various matrices and
vectors you're working with hopefully

00:10:48.540 --> 00:10:48.550
vectors you're working with hopefully
 

00:10:48.550 --> 00:10:50.550
vectors you're working with hopefully
they'll help you eliminate some cause of

00:10:50.550 --> 00:10:50.560
they'll help you eliminate some cause of
 

00:10:50.560 --> 00:10:52.470
they'll help you eliminate some cause of
possible bug them it certainly helps me

00:10:52.470 --> 00:10:52.480
possible bug them it certainly helps me
 

00:10:52.480 --> 00:10:54.640
possible bug them it certainly helps me
get my code right

00:10:54.640 --> 00:10:54.650
get my code right
 

00:10:54.650 --> 00:10:57.040
get my code right
so next we've now seen some of the

00:10:57.040 --> 00:10:57.050
so next we've now seen some of the
 

00:10:57.050 --> 00:10:59.440
so next we've now seen some of the
mechanics of how to do certain forward

00:10:59.440 --> 00:10:59.450
mechanics of how to do certain forward
 

00:10:59.450 --> 00:11:01.900
mechanics of how to do certain forward
propagation in a neural network but why

00:11:01.900 --> 00:11:01.910
propagation in a neural network but why
 

00:11:01.910 --> 00:11:04.360
propagation in a neural network but why
are people Network so effective and why

00:11:04.360 --> 00:11:04.370
are people Network so effective and why
 

00:11:04.370 --> 00:11:06.100
are people Network so effective and why
do they do better than shallow

00:11:06.100 --> 00:11:06.110
do they do better than shallow
 

00:11:06.110 --> 00:11:08.140
do they do better than shallow
representations let's spend a few

00:11:08.140 --> 00:11:08.150
representations let's spend a few
 

00:11:08.150 --> 00:11:11.710
representations let's spend a few
minutes in the next video to discuss

