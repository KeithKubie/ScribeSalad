WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.720 align:start position:0%
 
in<00:00:00.510><c> the</c><00:00:00.659><c> previous</c><00:00:01.079><c> video</c><00:00:01.380><c> we</c><00:00:01.439><c> saw</c><00:00:01.890><c> how</c><00:00:01.920><c> with</c>

00:00:02.720 --> 00:00:02.730 align:start position:0%
in the previous video we saw how with
 

00:00:02.730 --> 00:00:04.420 align:start position:0%
in the previous video we saw how with
your<00:00:02.760><c> training</c><00:00:03.240><c> examples</c><00:00:03.689><c> backed</c><00:00:04.020><c> up</c>

00:00:04.420 --> 00:00:04.430 align:start position:0%
your training examples backed up
 

00:00:04.430 --> 00:00:07.280 align:start position:0%
your training examples backed up
horizontally<00:00:05.430><c> in</c><00:00:05.670><c> the</c><00:00:05.700><c> matrix</c><00:00:06.330><c> X</c><00:00:06.600><c> you</c><00:00:07.109><c> can</c>

00:00:07.280 --> 00:00:07.290 align:start position:0%
horizontally in the matrix X you can
 

00:00:07.290 --> 00:00:09.830 align:start position:0%
horizontally in the matrix X you can
derive<00:00:07.620><c> a</c><00:00:08.040><c> vectorized</c><00:00:08.760><c> implementation</c><00:00:09.570><c> of</c>

00:00:09.830 --> 00:00:09.840 align:start position:0%
derive a vectorized implementation of
 

00:00:09.840 --> 00:00:11.509 align:start position:0%
derive a vectorized implementation of
for<00:00:10.080><c> propagation</c><00:00:10.710><c> through</c><00:00:10.889><c> in</c><00:00:11.040><c> your</c><00:00:11.070><c> network</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
for propagation through in your network
 

00:00:11.519 --> 00:00:13.580 align:start position:0%
for propagation through in your network
let's<00:00:12.120><c> give</c><00:00:12.300><c> a</c><00:00:12.330><c> bit</c><00:00:12.540><c> more</c><00:00:12.570><c> justification</c><00:00:13.049><c> for</c>

00:00:13.580 --> 00:00:13.590 align:start position:0%
let's give a bit more justification for
 

00:00:13.590 --> 00:00:15.620 align:start position:0%
let's give a bit more justification for
why<00:00:13.769><c> the</c><00:00:13.830><c> equations</c><00:00:14.370><c> we</c><00:00:14.490><c> wrote</c><00:00:14.700><c> down</c><00:00:14.880><c> is</c><00:00:15.150><c> a</c>

00:00:15.620 --> 00:00:15.630 align:start position:0%
why the equations we wrote down is a
 

00:00:15.630 --> 00:00:17.960 align:start position:0%
why the equations we wrote down is a
correct<00:00:16.020><c> implementation</c><00:00:16.289><c> of</c><00:00:16.970><c> vectorizing</c>

00:00:17.960 --> 00:00:17.970 align:start position:0%
correct implementation of vectorizing
 

00:00:17.970 --> 00:00:20.450 align:start position:0%
correct implementation of vectorizing
across<00:00:18.300><c> multiple</c><00:00:18.660><c> examples</c><00:00:18.859><c> so</c><00:00:19.859><c> let's</c><00:00:20.250><c> go</c>

00:00:20.450 --> 00:00:20.460 align:start position:0%
across multiple examples so let's go
 

00:00:20.460 --> 00:00:23.210 align:start position:0%
across multiple examples so let's go
through<00:00:20.699><c> part</c><00:00:21.449><c> of</c><00:00:21.630><c> the</c><00:00:22.220><c> propagation</c>

00:00:23.210 --> 00:00:23.220 align:start position:0%
through part of the propagation
 

00:00:23.220 --> 00:00:25.490 align:start position:0%
through part of the propagation
calculation<00:00:24.000><c> for</c><00:00:24.210><c> a</c><00:00:24.269><c> few</c><00:00:24.449><c> examples</c><00:00:24.990><c> let's</c><00:00:25.350><c> say</c>

00:00:25.490 --> 00:00:25.500 align:start position:0%
calculation for a few examples let's say
 

00:00:25.500 --> 00:00:27.769 align:start position:0%
calculation for a few examples let's say
that<00:00:25.680><c> for</c><00:00:25.890><c> the</c><00:00:26.519><c> first</c><00:00:26.550><c> training</c><00:00:27.029><c> example</c><00:00:27.090><c> you</c>

00:00:27.769 --> 00:00:27.779 align:start position:0%
that for the first training example you
 

00:00:27.779 --> 00:00:36.580 align:start position:0%
that for the first training example you
end<00:00:27.960><c> up</c><00:00:28.019><c> computing</c><00:00:28.730><c> this</c><00:00:32.120><c> X</c><00:00:33.120><c> 1</c><00:00:33.890><c> plus</c><00:00:35.059><c> b1</c><00:00:36.059><c> and</c>

00:00:36.580 --> 00:00:36.590 align:start position:0%
end up computing this X 1 plus b1 and
 

00:00:36.590 --> 00:00:38.990 align:start position:0%
end up computing this X 1 plus b1 and
then<00:00:37.590><c> for</c><00:00:37.829><c> the</c><00:00:37.890><c> second</c><00:00:38.250><c> training</c><00:00:38.399><c> example</c><00:00:38.460><c> you</c>

00:00:38.990 --> 00:00:39.000 align:start position:0%
then for the second training example you
 

00:00:39.000 --> 00:00:48.430 align:start position:0%
then for the second training example you
end<00:00:39.090><c> up</c><00:00:39.210><c> computing</c><00:00:39.770><c> this</c><00:00:42.829><c> X</c><00:00:43.829><c> 2</c><00:00:45.050><c> plus</c><00:00:46.050><c> b1</c><00:00:47.239><c> and</c>

00:00:48.430 --> 00:00:48.440 align:start position:0%
end up computing this X 2 plus b1 and
 

00:00:48.440 --> 00:00:50.869 align:start position:0%
end up computing this X 2 plus b1 and
then<00:00:49.440><c> for</c><00:00:49.649><c> the</c><00:00:49.739><c> third</c><00:00:49.770><c> training</c><00:00:50.219><c> example</c><00:00:50.730><c> the</c>

00:00:50.869 --> 00:00:50.879 align:start position:0%
then for the third training example the
 

00:00:50.879 --> 00:00:57.709 align:start position:0%
then for the third training example the
end<00:00:51.059><c> of</c><00:00:51.239><c> computing</c><00:00:51.809><c> this</c><00:00:52.969><c> 3</c><00:00:54.199><c> plus</c><00:00:55.199><c> e1</c><00:00:56.360><c> so</c><00:00:57.360><c> just</c>

00:00:57.709 --> 00:00:57.719 align:start position:0%
end of computing this 3 plus e1 so just
 

00:00:57.719 --> 00:00:59.540 align:start position:0%
end of computing this 3 plus e1 so just
to<00:00:57.809><c> simplify</c><00:00:58.140><c> the</c><00:00:58.350><c> explanation</c><00:00:58.859><c> on</c><00:00:59.309><c> this</c>

00:00:59.540 --> 00:00:59.550 align:start position:0%
to simplify the explanation on this
 

00:00:59.550 --> 00:01:01.279 align:start position:0%
to simplify the explanation on this
slide<00:00:59.789><c> I'm</c><00:00:59.969><c> going</c><00:01:00.000><c> to</c><00:01:00.180><c> ignore</c><00:01:00.329><c> B</c><00:01:00.750><c> so</c><00:01:01.079><c> let's</c>

00:01:01.279 --> 00:01:01.289 align:start position:0%
slide I'm going to ignore B so let's
 

00:01:01.289 --> 00:01:04.039 align:start position:0%
slide I'm going to ignore B so let's
just<00:01:01.469><c> say</c><00:01:01.620><c> you</c><00:01:02.309><c> know</c><00:01:02.430><c> for</c><00:01:02.699><c> the</c><00:01:02.789><c> to</c><00:01:03.570><c> simplify</c>

00:01:04.039 --> 00:01:04.049 align:start position:0%
just say you know for the to simplify
 

00:01:04.049 --> 00:01:05.990 align:start position:0%
just say you know for the to simplify
this<00:01:04.110><c> justification</c><00:01:04.680><c> a</c><00:01:04.949><c> little</c><00:01:05.159><c> bit</c><00:01:05.309><c> that</c><00:01:05.760><c> B</c>

00:01:05.990 --> 00:01:06.000 align:start position:0%
this justification a little bit that B
 

00:01:06.000 --> 00:01:09.679 align:start position:0%
this justification a little bit that B
is<00:01:06.180><c> equal</c><00:01:06.360><c> to</c><00:01:06.720><c> 0</c><00:01:07.790><c> so</c><00:01:08.790><c> the</c><00:01:08.970><c> argument</c><00:01:09.420><c> going</c><00:01:09.570><c> to</c>

00:01:09.679 --> 00:01:09.689 align:start position:0%
is equal to 0 so the argument going to
 

00:01:09.689 --> 00:01:11.420 align:start position:0%
is equal to 0 so the argument going to
lay<00:01:09.810><c> out</c><00:01:09.960><c> will</c><00:01:10.229><c> you</c><00:01:10.560><c> know</c><00:01:10.619><c> work</c><00:01:10.860><c> with</c><00:01:11.040><c> just</c><00:01:11.340><c> a</c>

00:01:11.420 --> 00:01:11.430 align:start position:0%
lay out will you know work with just a
 

00:01:11.430 --> 00:01:13.429 align:start position:0%
lay out will you know work with just a
little<00:01:11.549><c> bit</c><00:01:11.729><c> of</c><00:01:11.850><c> a</c><00:01:11.909><c> change</c><00:01:12.150><c> even</c><00:01:12.750><c> when</c><00:01:13.049><c> B</c><00:01:13.290><c> is</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
little bit of a change even when B is
 

00:01:13.439 --> 00:01:15.350 align:start position:0%
little bit of a change even when B is
nonzero<00:01:13.740><c> it</c><00:01:14.340><c> does</c><00:01:14.490><c> just</c><00:01:14.670><c> simplify</c><00:01:15.299><c> the</c>

00:01:15.350 --> 00:01:15.360 align:start position:0%
nonzero it does just simplify the
 

00:01:15.360 --> 00:01:18.530 align:start position:0%
nonzero it does just simplify the
description<00:01:15.990><c> on</c><00:01:16.080><c> this</c><00:01:16.229><c> slide</c><00:01:16.470><c> of</c><00:01:16.619><c> it</c><00:01:16.740><c> now</c><00:01:17.670><c> w1</c>

00:01:18.530 --> 00:01:18.540 align:start position:0%
description on this slide of it now w1
 

00:01:18.540 --> 00:01:21.350 align:start position:0%
description on this slide of it now w1
is<00:01:19.320><c> going</c><00:01:19.650><c> to</c><00:01:19.770><c> be</c><00:01:19.890><c> some</c><00:01:20.130><c> matrix</c><00:01:20.640><c> right</c><00:01:21.000><c> so</c><00:01:21.330><c> I</c>

00:01:21.350 --> 00:01:21.360 align:start position:0%
is going to be some matrix right so I
 

00:01:21.360 --> 00:01:24.850 align:start position:0%
is going to be some matrix right so I
have<00:01:21.540><c> some</c><00:01:22.350><c> number</c><00:01:22.680><c> of</c><00:01:22.740><c> rows</c><00:01:23.009><c> in</c><00:01:23.369><c> this</c><00:01:24.240><c> matrix</c>

00:01:24.850 --> 00:01:24.860 align:start position:0%
have some number of rows in this matrix
 

00:01:24.860 --> 00:01:28.420 align:start position:0%
have some number of rows in this matrix
so<00:01:25.860><c> if</c><00:01:26.189><c> you</c><00:01:26.280><c> look</c><00:01:26.400><c> at</c><00:01:26.520><c> this</c><00:01:26.700><c> calculation</c><00:01:27.420><c> x1</c>

00:01:28.420 --> 00:01:28.430 align:start position:0%
so if you look at this calculation x1
 

00:01:28.430 --> 00:01:36.859 align:start position:0%
so if you look at this calculation x1
what<00:01:29.430><c> you</c><00:01:29.520><c> have</c><00:01:29.729><c> is</c><00:01:30.000><c> that</c><00:01:31.640><c> W</c><00:01:32.640><c> 1</c><00:01:32.790><c> times</c><00:01:34.790><c> X</c><00:01:35.790><c> 1</c><00:01:36.119><c> did</c>

00:01:36.859 --> 00:01:36.869 align:start position:0%
what you have is that W 1 times X 1 did
 

00:01:36.869 --> 00:01:40.789 align:start position:0%
what you have is that W 1 times X 1 did
use<00:01:37.170><c> some</c><00:01:37.820><c> column</c><00:01:38.820><c> vector</c><00:01:39.210><c> which</c><00:01:39.540><c> means</c><00:01:39.900><c> draw</c>

00:01:40.789 --> 00:01:40.799 align:start position:0%
use some column vector which means draw
 

00:01:40.799 --> 00:01:45.050 align:start position:0%
use some column vector which means draw
a<00:01:40.829><c> light</c><00:01:41.040><c> ball</c><00:01:41.250><c> like</c><00:01:41.820><c> this</c><00:01:42.030><c> and</c><00:01:43.070><c> similarly</c><00:01:44.070><c> if</c>

00:01:45.050 --> 00:01:45.060 align:start position:0%
a light ball like this and similarly if
 

00:01:45.060 --> 00:01:48.080 align:start position:0%
a light ball like this and similarly if
you<00:01:45.450><c> look</c><00:01:45.479><c> at</c><00:01:45.810><c> this</c><00:01:45.990><c> vector</c><00:01:46.439><c> X</c><00:01:46.619><c> 2</c><00:01:47.280><c> you</c><00:01:47.820><c> have</c>

00:01:48.080 --> 00:01:48.090 align:start position:0%
you look at this vector X 2 you have
 

00:01:48.090 --> 00:01:58.749 align:start position:0%
you look at this vector X 2 you have
that<00:01:50.689><c> W</c><00:01:51.689><c> 1</c><00:01:53.540><c> times</c><00:01:54.540><c> X</c><00:01:54.840><c> 2</c><00:01:55.369><c> gives</c><00:01:56.369><c> some</c><00:01:56.759><c> other</c>

00:01:58.749 --> 00:01:58.759 align:start position:0%
that W 1 times X 2 gives some other
 

00:01:58.759 --> 00:02:01.160 align:start position:0%
that W 1 times X 2 gives some other
column<00:01:59.759><c> vector</c><00:02:00.180><c> R</c><00:02:00.360><c> and</c><00:02:00.689><c> that's</c><00:02:00.960><c> you</c><00:02:01.140><c> know</c>

00:02:01.160 --> 00:02:01.170 align:start position:0%
column vector R and that's you know
 

00:02:01.170 --> 00:02:04.330 align:start position:0%
column vector R and that's you know
gives<00:02:01.439><c> you</c><00:02:01.530><c> this</c><00:02:01.770><c> I</c><00:02:01.829><c> guess</c><00:02:02.130><c> z1</c><00:02:02.700><c> 2</c><00:02:02.939><c> and</c><00:02:03.329><c> finally</c>

00:02:04.330 --> 00:02:04.340 align:start position:0%
gives you this I guess z1 2 and finally
 

00:02:04.340 --> 00:02:10.680 align:start position:0%
gives you this I guess z1 2 and finally
if<00:02:05.340><c> you</c><00:02:05.520><c> look</c><00:02:05.670><c> at</c><00:02:05.790><c> X</c><00:02:05.939><c> 3</c><00:02:06.079><c> you</c><00:02:07.079><c> have</c><00:02:07.320><c> W</c><00:02:07.890><c> 1</c><00:02:08.069><c> times</c>

00:02:10.680 --> 00:02:10.690 align:start position:0%
if you look at X 3 you have W 1 times
 

00:02:10.690 --> 00:02:16.680 align:start position:0%
if you look at X 3 you have W 1 times
x3<00:02:12.090><c> gives</c><00:02:13.090><c> you</c><00:02:14.220><c> some</c><00:02:15.220><c> third</c><00:02:15.550><c> column</c><00:02:16.330><c> vector</c>

00:02:16.680 --> 00:02:16.690 align:start position:0%
x3 gives you some third column vector
 

00:02:16.690 --> 00:02:21.300 align:start position:0%
x3 gives you some third column vector
that<00:02:16.900><c> is</c><00:02:16.960><c> this</c><00:02:17.520><c> z13</c><00:02:18.720><c> so</c><00:02:19.720><c> now</c><00:02:19.930><c> if</c><00:02:20.560><c> you</c><00:02:21.010><c> consider</c>

00:02:21.300 --> 00:02:21.310 align:start position:0%
that is this z13 so now if you consider
 

00:02:21.310 --> 00:02:27.060 align:start position:0%
that is this z13 so now if you consider
the<00:02:23.100><c> training</c><00:02:24.100><c> set</c><00:02:24.370><c> capital</c><00:02:25.120><c> X</c><00:02:25.560><c> which</c><00:02:26.560><c> we</c><00:02:26.740><c> form</c>

00:02:27.060 --> 00:02:27.070 align:start position:0%
the training set capital X which we form
 

00:02:27.070 --> 00:02:30.150 align:start position:0%
the training set capital X which we form
by<00:02:27.310><c> stacking</c><00:02:27.670><c> together</c><00:02:28.510><c> all</c><00:02:29.260><c> of</c><00:02:29.650><c> our</c><00:02:29.740><c> training</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
by stacking together all of our training
 

00:02:30.160 --> 00:02:33.390 align:start position:0%
by stacking together all of our training
examples<00:02:30.810><c> so</c><00:02:31.810><c> the</c><00:02:31.960><c> matrix</c><00:02:32.140><c> capital</c><00:02:32.770><c> X</c><00:02:33.040><c> is</c>

00:02:33.390 --> 00:02:33.400 align:start position:0%
examples so the matrix capital X is
 

00:02:33.400 --> 00:02:36.500 align:start position:0%
examples so the matrix capital X is
formed<00:02:33.790><c> by</c><00:02:33.910><c> taking</c><00:02:34.140><c> the</c><00:02:35.140><c> vector</c><00:02:35.530><c> X</c><00:02:35.710><c> 1</c><00:02:35.950><c> and</c>

00:02:36.500 --> 00:02:36.510 align:start position:0%
formed by taking the vector X 1 and
 

00:02:36.510 --> 00:02:40.980 align:start position:0%
formed by taking the vector X 1 and
stacking<00:02:37.510><c> it</c><00:02:37.660><c> vertically</c><00:02:38.080><c> with</c><00:02:38.740><c> X</c><00:02:38.950><c> 2</c><00:02:39.280><c> and</c><00:02:39.990><c> then</c>

00:02:40.980 --> 00:02:40.990 align:start position:0%
stacking it vertically with X 2 and then
 

00:02:40.990 --> 00:02:45.420 align:start position:0%
stacking it vertically with X 2 and then
also<00:02:42.120><c> X</c><00:02:43.120><c> 3</c><00:02:43.540><c> this</c><00:02:44.080><c> is</c><00:02:44.200><c> if</c><00:02:44.350><c> we</c><00:02:44.470><c> have</c><00:02:44.560><c> only</c><00:02:44.710><c> three</c>

00:02:45.420 --> 00:02:45.430 align:start position:0%
also X 3 this is if we have only three
 

00:02:45.430 --> 00:02:46.920 align:start position:0%
also X 3 this is if we have only three
training<00:02:45.730><c> examples</c><00:02:45.760><c> if</c><00:02:46.300><c> you</c><00:02:46.360><c> have</c><00:02:46.450><c> more</c><00:02:46.630><c> you</c>

00:02:46.920 --> 00:02:46.930 align:start position:0%
training examples if you have more you
 

00:02:46.930 --> 00:02:48.660 align:start position:0%
training examples if you have more you
know<00:02:46.990><c> the</c><00:02:47.110><c> obeah</c><00:02:47.380><c> will</c><00:02:48.010><c> keep</c><00:02:48.400><c> stacking</c>

00:02:48.660 --> 00:02:48.670 align:start position:0%
know the obeah will keep stacking
 

00:02:48.670 --> 00:02:51.510 align:start position:0%
know the obeah will keep stacking
horizontally<00:02:49.540><c> like</c><00:02:49.690><c> that</c><00:02:49.870><c> but</c><00:02:50.770><c> if</c><00:02:51.010><c> you</c><00:02:51.370><c> now</c>

00:02:51.510 --> 00:02:51.520 align:start position:0%
horizontally like that but if you now
 

00:02:51.520 --> 00:02:55.460 align:start position:0%
horizontally like that but if you now
take<00:02:51.760><c> this</c><00:02:51.910><c> matrix</c><00:02:52.360><c> X</c><00:02:52.600><c> and</c><00:02:53.020><c> multiply</c><00:02:53.590><c> it</c><00:02:53.650><c> by</c><00:02:54.120><c> W</c>

00:02:55.460 --> 00:02:55.470 align:start position:0%
take this matrix X and multiply it by W
 

00:02:55.470 --> 00:02:58.440 align:start position:0%
take this matrix X and multiply it by W
then<00:02:56.470><c> you</c><00:02:56.650><c> end</c><00:02:56.830><c> up</c><00:02:57.010><c> with</c><00:02:57.280><c> if</c><00:02:58.060><c> you</c><00:02:58.180><c> think</c><00:02:58.360><c> about</c>

00:02:58.440 --> 00:02:58.450 align:start position:0%
then you end up with if you think about
 

00:02:58.450 --> 00:03:00.450 align:start position:0%
then you end up with if you think about
how<00:02:58.750><c> matrix</c><00:02:59.200><c> multiplication</c><00:02:59.740><c> works</c><00:02:59.860><c> you</c><00:03:00.280><c> end</c>

00:03:00.450 --> 00:03:00.460 align:start position:0%
how matrix multiplication works you end
 

00:03:00.460 --> 00:03:02.760 align:start position:0%
how matrix multiplication works you end
up<00:03:00.610><c> with</c><00:03:00.790><c> the</c><00:03:00.940><c> first</c><00:03:01.150><c> column</c><00:03:01.590><c> being</c><00:03:02.590><c> these</c>

00:03:02.760 --> 00:03:02.770 align:start position:0%
up with the first column being these
 

00:03:02.770 --> 00:03:05.580 align:start position:0%
up with the first column being these
same<00:03:03.520><c> values</c><00:03:04.000><c> that</c><00:03:04.330><c> had</c><00:03:04.840><c> drawn</c><00:03:05.110><c> up</c><00:03:05.140><c> there</c><00:03:05.440><c> in</c>

00:03:05.580 --> 00:03:05.590 align:start position:0%
same values that had drawn up there in
 

00:03:05.590 --> 00:03:08.880 align:start position:0%
same values that had drawn up there in
purple<00:03:05.980><c> the</c><00:03:06.580><c> second</c><00:03:07.000><c> column</c><00:03:07.530><c> will</c><00:03:08.530><c> be</c><00:03:08.680><c> those</c>

00:03:08.880 --> 00:03:08.890 align:start position:0%
purple the second column will be those
 

00:03:08.890 --> 00:03:12.410 align:start position:0%
purple the second column will be those
same<00:03:09.550><c> four</c><00:03:09.820><c> values</c><00:03:10.270><c> and</c><00:03:10.600><c> the</c><00:03:11.260><c> third</c><00:03:11.500><c> column</c>

00:03:12.410 --> 00:03:12.420 align:start position:0%
same four values and the third column
 

00:03:12.420 --> 00:03:16.770 align:start position:0%
same four values and the third column
will<00:03:13.420><c> be</c><00:03:14.459><c> those</c><00:03:15.459><c> are</c><00:03:15.700><c> orange</c><00:03:16.090><c> values</c><00:03:16.540><c> what</c>

00:03:16.770 --> 00:03:16.780 align:start position:0%
will be those are orange values what
 

00:03:16.780 --> 00:03:20.729 align:start position:0%
will be those are orange values what
they<00:03:16.959><c> turn</c><00:03:17.200><c> out</c><00:03:17.320><c> to</c><00:03:17.470><c> be</c><00:03:18.690><c> but</c><00:03:19.690><c> of</c><00:03:19.840><c> course</c><00:03:20.110><c> this</c>

00:03:20.729 --> 00:03:20.739 align:start position:0%
they turn out to be but of course this
 

00:03:20.739 --> 00:03:27.720 align:start position:0%
they turn out to be but of course this
is<00:03:20.980><c> just</c><00:03:21.280><c> equal</c><00:03:21.730><c> to</c><00:03:24.209><c> z1</c><00:03:25.209><c> one</c><00:03:26.580><c> expressed</c><00:03:27.580><c> as</c><00:03:27.700><c> a</c>

00:03:27.720 --> 00:03:27.730 align:start position:0%
is just equal to z1 one expressed as a
 

00:03:27.730 --> 00:03:33.690 align:start position:0%
is just equal to z1 one expressed as a
column<00:03:28.120><c> vector</c><00:03:29.310><c> followed</c><00:03:30.310><c> by</c><00:03:30.489><c> z1</c><00:03:31.180><c> to</c><00:03:32.700><c> express</c>

00:03:33.690 --> 00:03:33.700 align:start position:0%
column vector followed by z1 to express
 

00:03:33.700 --> 00:03:36.560 align:start position:0%
column vector followed by z1 to express
as<00:03:33.880><c> a</c><00:03:33.910><c> column</c><00:03:34.300><c> vector</c><00:03:34.590><c> followed</c><00:03:35.590><c> by</c><00:03:35.709><c> z1</c><00:03:36.160><c> me</c>

00:03:36.560 --> 00:03:36.570 align:start position:0%
as a column vector followed by z1 me
 

00:03:36.570 --> 00:03:39.600 align:start position:0%
as a column vector followed by z1 me
also<00:03:37.570><c> express</c><00:03:37.989><c> as</c><00:03:38.320><c> a</c><00:03:38.350><c> column</c><00:03:38.770><c> vector</c><00:03:39.100><c> and</c><00:03:39.310><c> this</c>

00:03:39.600 --> 00:03:39.610 align:start position:0%
also express as a column vector and this
 

00:03:39.610 --> 00:03:41.250 align:start position:0%
also express as a column vector and this
is<00:03:39.760><c> again</c><00:03:40.180><c> featuring</c><00:03:40.600><c> examples</c><00:03:41.110><c> you</c><00:03:41.230><c> have</c>

00:03:41.250 --> 00:03:41.260 align:start position:0%
is again featuring examples you have
 

00:03:41.260 --> 00:03:43.259 align:start position:0%
is again featuring examples you have
more<00:03:41.590><c> examples</c><00:03:41.680><c> and</c><00:03:42.370><c> dug</c><00:03:42.519><c> in</c><00:03:42.670><c> more</c><00:03:42.850><c> columns</c>

00:03:43.259 --> 00:03:43.269 align:start position:0%
more examples and dug in more columns
 

00:03:43.269 --> 00:03:49.380 align:start position:0%
more examples and dug in more columns
and<00:03:43.870><c> so</c><00:03:44.620><c> this</c><00:03:44.980><c> is</c><00:03:45.310><c> just</c><00:03:45.760><c> our</c><00:03:47.790><c> matrix</c><00:03:48.790><c> capital</c>

00:03:49.380 --> 00:03:49.390 align:start position:0%
and so this is just our matrix capital
 

00:03:49.390 --> 00:03:52.949 align:start position:0%
and so this is just our matrix capital
z1<00:03:50.670><c> so</c><00:03:51.670><c> I</c><00:03:51.730><c> hope</c><00:03:51.940><c> this</c><00:03:52.150><c> gives</c><00:03:52.390><c> a</c><00:03:52.570><c> justification</c>

00:03:52.949 --> 00:03:52.959 align:start position:0%
z1 so I hope this gives a justification
 

00:03:52.959 --> 00:03:59.580 align:start position:0%
z1 so I hope this gives a justification
to<00:03:53.320><c> why</c><00:03:53.709><c> when</c><00:03:54.130><c> we</c><00:03:54.340><c> had</c><00:03:54.840><c> previously</c><00:03:57.060><c> W</c><00:03:58.060><c> 1</c><00:03:58.810><c> times</c>

00:03:59.580 --> 00:03:59.590 align:start position:0%
to why when we had previously W 1 times
 

00:03:59.590 --> 00:04:06.479 align:start position:0%
to why when we had previously W 1 times
X<00:04:00.580><c> I</c><00:04:01.260><c> equals</c><00:04:02.310><c> Z</c><00:04:03.310><c> 1</c><00:04:03.910><c> I</c><00:04:04.890><c> when</c><00:04:05.890><c> we're</c><00:04:06.070><c> looking</c><00:04:06.160><c> at</c>

00:04:06.479 --> 00:04:06.489 align:start position:0%
X I equals Z 1 I when we're looking at
 

00:04:06.489 --> 00:04:08.759 align:start position:0%
X I equals Z 1 I when we're looking at
single<00:04:06.790><c> training</c><00:04:07.150><c> example</c><00:04:07.209><c> the</c><00:04:07.630><c> time</c><00:04:07.840><c> when</c>

00:04:08.759 --> 00:04:08.769 align:start position:0%
single training example the time when
 

00:04:08.769 --> 00:04:10.320 align:start position:0%
single training example the time when
you<00:04:08.920><c> took</c><00:04:09.160><c> the</c><00:04:09.340><c> different</c><00:04:09.640><c> training</c><00:04:09.880><c> examples</c>

00:04:10.320 --> 00:04:10.330 align:start position:0%
you took the different training examples
 

00:04:10.330 --> 00:04:12.090 align:start position:0%
you took the different training examples
and<00:04:10.480><c> stack</c><00:04:10.780><c> them</c><00:04:11.019><c> up</c><00:04:11.140><c> in</c><00:04:11.380><c> different</c><00:04:11.560><c> columns</c>

00:04:12.090 --> 00:04:12.100 align:start position:0%
and stack them up in different columns
 

00:04:12.100 --> 00:04:14.520 align:start position:0%
and stack them up in different columns
then<00:04:12.880><c> the</c><00:04:13.030><c> corresponding</c><00:04:13.420><c> result</c><00:04:14.110><c> is</c><00:04:14.380><c> that</c>

00:04:14.520 --> 00:04:14.530 align:start position:0%
then the corresponding result is that
 

00:04:14.530 --> 00:04:17.370 align:start position:0%
then the corresponding result is that
you<00:04:14.769><c> end</c><00:04:14.920><c> up</c><00:04:15.100><c> with</c><00:04:15.239><c> disease</c><00:04:16.239><c> also</c><00:04:16.600><c> stat</c>

00:04:17.370 --> 00:04:17.380 align:start position:0%
you end up with disease also stat
 

00:04:17.380 --> 00:04:20.130 align:start position:0%
you end up with disease also stat
different<00:04:17.739><c> columns</c><00:04:18.130><c> and</c><00:04:18.459><c> I</c><00:04:19.390><c> won't</c><00:04:19.660><c> show</c><00:04:19.870><c> but</c>

00:04:20.130 --> 00:04:20.140 align:start position:0%
different columns and I won't show but
 

00:04:20.140 --> 00:04:22.200 align:start position:0%
different columns and I won't show but
you<00:04:20.200><c> can</c><00:04:20.430><c> convince</c><00:04:21.430><c> yourself</c><00:04:21.789><c> if</c><00:04:21.910><c> you</c><00:04:22.000><c> want</c>

00:04:22.200 --> 00:04:22.210 align:start position:0%
you can convince yourself if you want
 

00:04:22.210 --> 00:04:24.250 align:start position:0%
you can convince yourself if you want
stats<00:04:22.570><c> with</c><00:04:22.840><c> Python</c><00:04:23.620><c> broadcast</c>

00:04:24.250 --> 00:04:24.260 align:start position:0%
stats with Python broadcast
 

00:04:24.260 --> 00:04:28.530 align:start position:0%
stats with Python broadcast
if<00:04:24.770><c> you</c><00:04:24.980><c> add</c><00:04:25.190><c> back</c><00:04:25.460><c> in</c><00:04:25.820><c> these</c><00:04:26.510><c> values</c><00:04:26.870><c> of</c><00:04:27.260><c> B</c><00:04:27.500><c> the</c>

00:04:28.530 --> 00:04:28.540 align:start position:0%
if you add back in these values of B the
 

00:04:28.540 --> 00:04:30.880 align:start position:0%
if you add back in these values of B the
values<00:04:29.540><c> are</c><00:04:29.720><c> still</c><00:04:29.930><c> correct</c><00:04:30.290><c> and</c><00:04:30.590><c> what</c>

00:04:30.880 --> 00:04:30.890 align:start position:0%
values are still correct and what
 

00:04:30.890 --> 00:04:32.380 align:start position:0%
values are still correct and what
actually<00:04:31.100><c> ends</c><00:04:31.310><c> up</c><00:04:31.370><c> happening</c><00:04:31.580><c> is</c><00:04:31.970><c> you</c><00:04:32.000><c> end</c><00:04:32.240><c> up</c>

00:04:32.380 --> 00:04:32.390 align:start position:0%
actually ends up happening is you end up
 

00:04:32.390 --> 00:04:34.990 align:start position:0%
actually ends up happening is you end up
with<00:04:32.830><c> Python</c><00:04:33.830><c> broadcasting</c><00:04:34.490><c> you</c><00:04:34.610><c> end</c><00:04:34.790><c> up</c>

00:04:34.990 --> 00:04:35.000 align:start position:0%
with Python broadcasting you end up
 

00:04:35.000 --> 00:04:39.790 align:start position:0%
with Python broadcasting you end up
adding<00:04:35.360><c> bi</c><00:04:37.120><c> individually</c><00:04:38.320><c> to</c><00:04:39.320><c> each</c><00:04:39.350><c> of</c><00:04:39.710><c> the</c>

00:04:39.790 --> 00:04:39.800 align:start position:0%
adding bi individually to each of the
 

00:04:39.800 --> 00:04:42.460 align:start position:0%
adding bi individually to each of the
columns<00:04:40.220><c> of</c><00:04:40.370><c> this</c><00:04:40.490><c> matrix</c><00:04:41.020><c> so</c><00:04:42.020><c> on</c><00:04:42.170><c> this</c><00:04:42.320><c> slide</c>

00:04:42.460 --> 00:04:42.470 align:start position:0%
columns of this matrix so on this slide
 

00:04:42.470 --> 00:04:48.760 align:start position:0%
columns of this matrix so on this slide
I've<00:04:42.770><c> only</c><00:04:42.950><c> justified</c><00:04:43.880><c> that</c><00:04:44.740><c> V</c><00:04:45.740><c> 1</c><00:04:46.960><c> equals</c><00:04:47.960><c> W</c><00:04:48.560><c> 1</c>

00:04:48.760 --> 00:04:48.770 align:start position:0%
I've only justified that V 1 equals W 1
 

00:04:48.770 --> 00:04:52.870 align:start position:0%
I've only justified that V 1 equals W 1
X<00:04:49.460><c> plus</c><00:04:50.300><c> B</c><00:04:50.720><c> 1</c><00:04:50.960><c> there's</c><00:04:51.770><c> a</c><00:04:52.100><c> correct</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
X plus B 1 there's a correct
 

00:04:52.880 --> 00:04:55.420 align:start position:0%
X plus B 1 there's a correct
factorization<00:04:53.300><c> of</c><00:04:53.930><c> the</c><00:04:54.110><c> first</c><00:04:54.410><c> step</c><00:04:54.710><c> of</c><00:04:54.920><c> the</c>

00:04:55.420 --> 00:04:55.430 align:start position:0%
factorization of the first step of the
 

00:04:55.430 --> 00:04:56.830 align:start position:0%
factorization of the first step of the
four<00:04:55.640><c> steps</c><00:04:55.880><c> we</c><00:04:56.090><c> had</c><00:04:56.270><c> on</c><00:04:56.390><c> the</c><00:04:56.450><c> previous</c><00:04:56.480><c> slide</c>

00:04:56.830 --> 00:04:56.840 align:start position:0%
four steps we had on the previous slide
 

00:04:56.840 --> 00:04:58.840 align:start position:0%
four steps we had on the previous slide
but<00:04:57.260><c> it</c><00:04:57.770><c> turns</c><00:04:57.950><c> out</c><00:04:58.130><c> that</c><00:04:58.370><c> the</c><00:04:58.490><c> similar</c>

00:04:58.840 --> 00:04:58.850 align:start position:0%
but it turns out that the similar
 

00:04:58.850 --> 00:05:01.000 align:start position:0%
but it turns out that the similar
analysis<00:04:59.360><c> allows</c><00:04:59.690><c> you</c><00:04:59.870><c> to</c><00:04:59.990><c> show</c><00:05:00.140><c> that</c><00:05:00.170><c> the</c>

00:05:01.000 --> 00:05:01.010 align:start position:0%
analysis allows you to show that the
 

00:05:01.010 --> 00:05:02.860 align:start position:0%
analysis allows you to show that the
other<00:05:01.160><c> steps</c><00:05:01.460><c> also</c><00:05:01.820><c> work</c><00:05:02.030><c> on</c><00:05:02.240><c> using</c><00:05:02.630><c> a</c><00:05:02.690><c> very</c>

00:05:02.860 --> 00:05:02.870 align:start position:0%
other steps also work on using a very
 

00:05:02.870 --> 00:05:05.530 align:start position:0%
other steps also work on using a very
similar<00:05:03.170><c> logic</c><00:05:03.470><c> where</c><00:05:04.010><c> if</c><00:05:04.970><c> you</c><00:05:05.090><c> stack</c><00:05:05.330><c> the</c>

00:05:05.530 --> 00:05:05.540 align:start position:0%
similar logic where if you stack the
 

00:05:05.540 --> 00:05:07.600 align:start position:0%
similar logic where if you stack the
inputs<00:05:05.960><c> and</c><00:05:06.050><c> columns</c><00:05:06.470><c> then</c><00:05:07.070><c> after</c><00:05:07.490><c> the</c>

00:05:07.600 --> 00:05:07.610 align:start position:0%
inputs and columns then after the
 

00:05:07.610 --> 00:05:08.740 align:start position:0%
inputs and columns then after the
equation<00:05:08.060><c> you</c><00:05:08.240><c> get</c><00:05:08.420><c> the</c><00:05:08.510><c> corresponding</c>

00:05:08.740 --> 00:05:08.750 align:start position:0%
equation you get the corresponding
 

00:05:08.750 --> 00:05:10.950 align:start position:0%
equation you get the corresponding
outputs<00:05:09.470><c> also</c><00:05:09.620><c> stacked</c><00:05:10.070><c> up</c><00:05:10.250><c> in</c><00:05:10.370><c> columns</c>

00:05:10.950 --> 00:05:10.960 align:start position:0%
outputs also stacked up in columns
 

00:05:10.960 --> 00:05:13.390 align:start position:0%
outputs also stacked up in columns
finally<00:05:11.960><c> let's</c><00:05:12.290><c> just</c><00:05:12.470><c> recap</c><00:05:12.860><c> everything</c><00:05:13.280><c> we</c>

00:05:13.390 --> 00:05:13.400 align:start position:0%
finally let's just recap everything we
 

00:05:13.400 --> 00:05:15.610 align:start position:0%
finally let's just recap everything we
talked<00:05:13.610><c> about</c><00:05:13.730><c> in</c><00:05:13.910><c> this</c><00:05:14.030><c> video</c><00:05:14.210><c> the</c><00:05:15.140><c> existence</c>

00:05:15.610 --> 00:05:15.620 align:start position:0%
talked about in this video the existence
 

00:05:15.620 --> 00:05:17.710 align:start position:0%
talked about in this video the existence
your<00:05:15.710><c> neural</c><00:05:15.980><c> network</c><00:05:16.010><c> we</c><00:05:16.610><c> said</c><00:05:16.880><c> that</c><00:05:17.150><c> this</c><00:05:17.420><c> is</c>

00:05:17.710 --> 00:05:17.720 align:start position:0%
your neural network we said that this is
 

00:05:17.720 --> 00:05:19.270 align:start position:0%
your neural network we said that this is
what<00:05:17.930><c> you</c><00:05:18.050><c> need</c><00:05:18.200><c> to</c><00:05:18.320><c> do</c><00:05:18.500><c> if</c><00:05:18.830><c> you</c><00:05:18.950><c> were</c><00:05:19.100><c> to</c>

00:05:19.270 --> 00:05:19.280 align:start position:0%
what you need to do if you were to
 

00:05:19.280 --> 00:05:22.060 align:start position:0%
what you need to do if you were to
implement<00:05:19.820><c> for</c><00:05:20.170><c> propagation</c><00:05:21.170><c> one</c><00:05:21.740><c> training</c>

00:05:22.060 --> 00:05:22.070 align:start position:0%
implement for propagation one training
 

00:05:22.070 --> 00:05:24.970 align:start position:0%
implement for propagation one training
example<00:05:22.250><c> at</c><00:05:22.820><c> a</c><00:05:22.910><c> time</c><00:05:22.940><c> going</c><00:05:23.390><c> from</c><00:05:23.630><c> I</c><00:05:23.930><c> equals</c><00:05:24.920><c> 1</c>

00:05:24.970 --> 00:05:24.980 align:start position:0%
example at a time going from I equals 1
 

00:05:24.980 --> 00:05:29.110 align:start position:0%
example at a time going from I equals 1
through<00:05:25.340><c> m</c><00:05:25.550><c> and</c><00:05:25.820><c> we</c><00:05:26.780><c> said</c><00:05:27.340><c> let's</c><00:05:28.340><c> stack</c><00:05:28.790><c> up</c><00:05:29.000><c> the</c>

00:05:29.110 --> 00:05:29.120 align:start position:0%
through m and we said let's stack up the
 

00:05:29.120 --> 00:05:30.850 align:start position:0%
through m and we said let's stack up the
training<00:05:29.420><c> examples</c><00:05:29.810><c> in</c><00:05:29.900><c> columns</c><00:05:30.290><c> like</c><00:05:30.440><c> so</c><00:05:30.680><c> and</c>

00:05:30.850 --> 00:05:30.860 align:start position:0%
training examples in columns like so and
 

00:05:30.860 --> 00:05:35.230 align:start position:0%
training examples in columns like so and
so<00:05:31.700><c> each</c><00:05:32.030><c> of</c><00:05:32.180><c> these</c><00:05:32.270><c> values</c><00:05:32.540><c> V</c><00:05:33.140><c> 1</c><00:05:33.800><c> a</c><00:05:34.040><c> 1</c><00:05:34.490><c> Z</c><00:05:34.850><c> 2</c><00:05:34.880><c> a</c><00:05:35.060><c> 2</c>

00:05:35.230 --> 00:05:35.240 align:start position:0%
so each of these values V 1 a 1 Z 2 a 2
 

00:05:35.240 --> 00:05:37.630 align:start position:0%
so each of these values V 1 a 1 Z 2 a 2
the<00:05:36.020><c> stack</c><00:05:36.350><c> of</c><00:05:36.380><c> the</c><00:05:36.590><c> corresponding</c><00:05:37.190><c> columns</c>

00:05:37.630 --> 00:05:37.640 align:start position:0%
the stack of the corresponding columns
 

00:05:37.640 --> 00:05:41.050 align:start position:0%
the stack of the corresponding columns
as<00:05:37.790><c> follows</c><00:05:38.180><c> so</c><00:05:38.420><c> this</c><00:05:38.600><c> example</c><00:05:38.810><c> for</c><00:05:39.380><c> a</c><00:05:39.530><c> a</c><00:05:40.400><c> 1</c><00:05:40.790><c> but</c>

00:05:41.050 --> 00:05:41.060 align:start position:0%
as follows so this example for a a 1 but
 

00:05:41.060 --> 00:05:48.340 align:start position:0%
as follows so this example for a a 1 but
this<00:05:41.750><c> is</c><00:05:41.810><c> true</c><00:05:42.110><c> for</c><00:05:42.140><c> Z</c><00:05:43.100><c> 1</c><00:05:43.310><c> a</c><00:05:43.580><c> 1</c><00:05:44.420><c> z</c><00:05:44.870><c> 2</c><00:05:45.050><c> na</c><00:05:45.380><c> 2</c><00:05:47.350><c> then</c>

00:05:48.340 --> 00:05:48.350 align:start position:0%
this is true for Z 1 a 1 z 2 na 2 then
 

00:05:48.350 --> 00:05:50.290 align:start position:0%
this is true for Z 1 a 1 z 2 na 2 then
when<00:05:48.530><c> we</c><00:05:48.620><c> showed</c><00:05:48.860><c> on</c><00:05:49.160><c> the</c><00:05:49.220><c> previous</c><00:05:49.370><c> slide</c><00:05:49.760><c> was</c>

00:05:50.290 --> 00:05:50.300 align:start position:0%
when we showed on the previous slide was
 

00:05:50.300 --> 00:05:54.840 align:start position:0%
when we showed on the previous slide was
that<00:05:50.530><c> this</c><00:05:51.530><c> line</c><00:05:52.870><c> allows</c><00:05:53.870><c> you</c><00:05:54.110><c> to</c><00:05:54.350><c> vectorize</c>

00:05:54.840 --> 00:05:54.850 align:start position:0%
that this line allows you to vectorize
 

00:05:54.850 --> 00:05:57.910 align:start position:0%
that this line allows you to vectorize
this<00:05:55.850><c> across</c><00:05:56.510><c> all</c><00:05:56.780><c> M</c><00:05:57.020><c> examples</c><00:05:57.290><c> at</c><00:05:57.650><c> the</c><00:05:57.710><c> same</c>

00:05:57.910 --> 00:05:57.920 align:start position:0%
this across all M examples at the same
 

00:05:57.920 --> 00:06:00.040 align:start position:0%
this across all M examples at the same
time<00:05:58.130><c> and</c><00:05:58.400><c> it</c><00:05:59.180><c> turns</c><00:05:59.390><c> out</c><00:05:59.570><c> with</c><00:05:59.720><c> the</c><00:05:59.810><c> sum</c><00:06:00.020><c> of</c>

00:06:00.040 --> 00:06:00.050 align:start position:0%
time and it turns out with the sum of
 

00:06:00.050 --> 00:06:02.440 align:start position:0%
time and it turns out with the sum of
usernames<00:06:00.560><c> you</c><00:06:00.680><c> can</c><00:06:00.830><c> show</c><00:06:01.040><c> that</c><00:06:01.340><c> all</c><00:06:02.000><c> of</c><00:06:02.150><c> the</c>

00:06:02.440 --> 00:06:02.450 align:start position:0%
usernames you can show that all of the
 

00:06:02.450 --> 00:06:05.050 align:start position:0%
usernames you can show that all of the
other<00:06:02.570><c> lines</c><00:06:02.840><c> are</c><00:06:03.440><c> correct</c><00:06:04.280><c> vectorization</c>

00:06:05.050 --> 00:06:05.060 align:start position:0%
other lines are correct vectorization
 

00:06:05.060 --> 00:06:09.550 align:start position:0%
other lines are correct vectorization
or<00:06:05.420><c> four</c><00:06:06.110><c> of</c><00:06:06.800><c> these</c><00:06:07.340><c> lines</c><00:06:07.610><c> of</c><00:06:07.760><c> code</c><00:06:07.970><c> and</c><00:06:08.560><c> just</c>

00:06:09.550 --> 00:06:09.560 align:start position:0%
or four of these lines of code and just
 

00:06:09.560 --> 00:06:13.990 align:start position:0%
or four of these lines of code and just
as<00:06:09.740><c> a</c><00:06:09.770><c> reminder</c><00:06:09.920><c> because</c><00:06:10.850><c> X</c><00:06:11.360><c> is</c><00:06:12.190><c> also</c><00:06:13.190><c> equal</c><00:06:13.370><c> to</c>

00:06:13.990 --> 00:06:14.000 align:start position:0%
as a reminder because X is also equal to
 

00:06:14.000 --> 00:06:19.120 align:start position:0%
as a reminder because X is also equal to
a<00:06:15.130><c> zero</c><00:06:16.130><c> because</c><00:06:16.520><c> you</c><00:06:16.610><c> remember</c><00:06:17.980><c> that</c><00:06:18.980><c> the</c>

00:06:19.120 --> 00:06:19.130 align:start position:0%
a zero because you remember that the
 

00:06:19.130 --> 00:06:21.310 align:start position:0%
a zero because you remember that the
input<00:06:19.490><c> feature</c><00:06:19.730><c> vector</c><00:06:20.330><c> X</c><00:06:20.360><c> was</c><00:06:20.780><c> equal</c><00:06:20.930><c> to</c><00:06:21.140><c> a</c>

00:06:21.310 --> 00:06:21.320 align:start position:0%
input feature vector X was equal to a
 

00:06:21.320 --> 00:06:28.480 align:start position:0%
input feature vector X was equal to a
zero<00:06:22.210><c> so</c><00:06:23.210><c> X</c><00:06:23.570><c> I</c><00:06:23.920><c> equals</c><00:06:24.920><c> a</c><00:06:25.390><c> zero</c><00:06:26.390><c> i</c><00:06:26.770><c> right</c><00:06:27.770><c> then</c>

00:06:28.480 --> 00:06:28.490 align:start position:0%
zero so X I equals a zero i right then
 

00:06:28.490 --> 00:06:31.000 align:start position:0%
zero so X I equals a zero i right then
does<00:06:28.850><c> a</c><00:06:28.970><c> certain</c><00:06:29.780><c> symmetry</c><00:06:30.380><c> to</c><00:06:30.830><c> these</c>

00:06:31.000 --> 00:06:31.010 align:start position:0%
does a certain symmetry to these
 

00:06:31.010 --> 00:06:33.580 align:start position:0%
does a certain symmetry to these
equations<00:06:31.550><c> where</c><00:06:32.000><c> this</c><00:06:32.570><c> first</c><00:06:32.840><c> equation</c><00:06:33.080><c> can</c>

00:06:33.580 --> 00:06:33.590 align:start position:0%
equations where this first equation can
 

00:06:33.590 --> 00:06:36.749 align:start position:0%
equations where this first equation can
also<00:06:33.710><c> be</c><00:06:33.920><c> written</c><00:06:34.150><c> Z</c><00:06:35.150><c> 1</c><00:06:35.360><c> equals</c>

00:06:36.749 --> 00:06:36.759 align:start position:0%
also be written Z 1 equals
 

00:06:36.759 --> 00:06:42.989 align:start position:0%
also be written Z 1 equals
w1<00:06:37.300><c> a</c><00:06:38.339><c> 0</c><00:06:39.539><c> plus</c><00:06:40.539><c> B</c><00:06:40.809><c> 1</c><00:06:40.839><c> and</c><00:06:41.499><c> so</c><00:06:42.069><c> you</c><00:06:42.129><c> see</c><00:06:42.460><c> that</c><00:06:42.729><c> some</c>

00:06:42.989 --> 00:06:42.999 align:start position:0%
w1 a 0 plus B 1 and so you see that some
 

00:06:42.999 --> 00:06:45.299 align:start position:0%
w1 a 0 plus B 1 and so you see that some
you<00:06:43.839><c> know</c><00:06:43.900><c> this</c><00:06:44.139><c> pair</c><00:06:44.409><c> of</c><00:06:44.499><c> equations</c><00:06:44.710><c> in</c><00:06:45.189><c> this</c>

00:06:45.299 --> 00:06:45.309 align:start position:0%
you know this pair of equations in this
 

00:06:45.309 --> 00:06:46.739 align:start position:0%
you know this pair of equations in this
pair<00:06:45.580><c> of</c><00:06:45.610><c> equations</c><00:06:45.759><c> actually</c><00:06:46.389><c> look</c><00:06:46.689><c> very</c>

00:06:46.739 --> 00:06:46.749 align:start position:0%
pair of equations actually look very
 

00:06:46.749 --> 00:06:48.689 align:start position:0%
pair of equations actually look very
similar<00:06:47.409><c> but</c><00:06:47.589><c> just</c><00:06:47.949><c> of</c><00:06:48.249><c> all</c><00:06:48.430><c> of</c><00:06:48.580><c> these</c>

00:06:48.689 --> 00:06:48.699 align:start position:0%
similar but just of all of these
 

00:06:48.699 --> 00:06:52.290 align:start position:0%
similar but just of all of these
industries<00:06:49.180><c> advanced</c><00:06:49.569><c> by</c><00:06:49.809><c> one</c><00:06:50.939><c> so</c><00:06:51.939><c> this</c><00:06:52.120><c> kind</c>

00:06:52.290 --> 00:06:52.300 align:start position:0%
industries advanced by one so this kind
 

00:06:52.300 --> 00:06:54.749 align:start position:0%
industries advanced by one so this kind
of<00:06:52.360><c> shows</c><00:06:52.539><c> that</c><00:06:52.830><c> the</c><00:06:53.830><c> different</c><00:06:54.159><c> layers</c><00:06:54.339><c> of</c><00:06:54.490><c> a</c>

00:06:54.749 --> 00:06:54.759 align:start position:0%
of shows that the different layers of a
 

00:06:54.759 --> 00:06:56.579 align:start position:0%
of shows that the different layers of a
neural<00:06:54.999><c> network</c><00:06:55.180><c> are</c><00:06:55.569><c> you</c><00:06:56.050><c> know</c><00:06:56.169><c> roughly</c>

00:06:56.579 --> 00:06:56.589 align:start position:0%
neural network are you know roughly
 

00:06:56.589 --> 00:06:58.049 align:start position:0%
neural network are you know roughly
doing<00:06:56.919><c> the</c><00:06:57.039><c> same</c><00:06:57.249><c> thing</c><00:06:57.490><c> or</c><00:06:57.669><c> just</c><00:06:57.699><c> doing</c><00:06:57.939><c> the</c>

00:06:58.049 --> 00:06:58.059 align:start position:0%
doing the same thing or just doing the
 

00:06:58.059 --> 00:07:01.019 align:start position:0%
doing the same thing or just doing the
same<00:06:58.210><c> computation</c><00:06:58.990><c> over</c><00:06:59.710><c> and</c><00:06:59.830><c> over</c><00:07:00.159><c> and</c><00:07:00.370><c> here</c>

00:07:01.019 --> 00:07:01.029 align:start position:0%
same computation over and over and here
 

00:07:01.029 --> 00:07:03.390 align:start position:0%
same computation over and over and here
we<00:07:01.180><c> have</c><00:07:01.300><c> a</c><00:07:01.330><c> two</c><00:07:01.779><c> layer</c><00:07:01.960><c> neural</c><00:07:02.169><c> network</c><00:07:02.650><c> where</c>

00:07:03.390 --> 00:07:03.400 align:start position:0%
we have a two layer neural network where
 

00:07:03.400 --> 00:07:06.179 align:start position:0%
we have a two layer neural network where
we<00:07:03.430><c> go</c><00:07:03.759><c> to</c><00:07:03.819><c> a</c><00:07:04.059><c> much</c><00:07:04.629><c> deeper</c><00:07:04.930><c> neural</c><00:07:05.409><c> network</c><00:07:05.770><c> in</c>

00:07:06.179 --> 00:07:06.189 align:start position:0%
we go to a much deeper neural network in
 

00:07:06.189 --> 00:07:09.809 align:start position:0%
we go to a much deeper neural network in
next<00:07:06.969><c> week's</c><00:07:07.180><c> videos</c><00:07:07.870><c> you</c><00:07:08.559><c> see</c><00:07:08.860><c> that</c><00:07:09.219><c> even</c>

00:07:09.809 --> 00:07:09.819 align:start position:0%
next week's videos you see that even
 

00:07:09.819 --> 00:07:11.369 align:start position:0%
next week's videos you see that even
deeper<00:07:10.180><c> in</c><00:07:10.240><c> your</c><00:07:10.360><c> networks</c><00:07:10.899><c> are</c><00:07:11.050><c> basically</c>

00:07:11.369 --> 00:07:11.379 align:start position:0%
deeper in your networks are basically
 

00:07:11.379 --> 00:07:13.170 align:start position:0%
deeper in your networks are basically
taking<00:07:11.800><c> these</c><00:07:12.009><c> two</c><00:07:12.279><c> steps</c><00:07:12.580><c> and</c><00:07:12.789><c> just</c><00:07:12.849><c> doing</c>

00:07:13.170 --> 00:07:13.180 align:start position:0%
taking these two steps and just doing
 

00:07:13.180 --> 00:07:14.999 align:start position:0%
taking these two steps and just doing
them<00:07:13.449><c> even</c><00:07:13.930><c> more</c><00:07:14.110><c> times</c><00:07:14.349><c> than</c><00:07:14.589><c> you're</c><00:07:14.740><c> seeing</c>

00:07:14.999 --> 00:07:15.009 align:start position:0%
them even more times than you're seeing
 

00:07:15.009 --> 00:07:17.399 align:start position:0%
them even more times than you're seeing
here<00:07:15.419><c> so</c><00:07:16.419><c> that's</c><00:07:16.809><c> how</c><00:07:16.960><c> you</c><00:07:17.020><c> can</c><00:07:17.229><c> vectorize</c>

00:07:17.399 --> 00:07:17.409 align:start position:0%
here so that's how you can vectorize
 

00:07:17.409 --> 00:07:19.829 align:start position:0%
here so that's how you can vectorize
your<00:07:18.099><c> network</c><00:07:18.490><c> across</c><00:07:18.969><c> multiple</c><00:07:19.419><c> training</c>

00:07:19.829 --> 00:07:19.839 align:start position:0%
your network across multiple training
 

00:07:19.839 --> 00:07:23.040 align:start position:0%
your network across multiple training
examples<00:07:20.520><c> mix</c><00:07:21.520><c> was</c><00:07:21.849><c> so</c><00:07:21.999><c> far</c><00:07:22.240><c> then</c><00:07:22.449><c> using</c><00:07:22.839><c> the</c>

00:07:23.040 --> 00:07:23.050 align:start position:0%
examples mix was so far then using the
 

00:07:23.050 --> 00:07:24.779 align:start position:0%
examples mix was so far then using the
sigmoid<00:07:23.529><c> function</c><00:07:24.039><c> throughout</c><00:07:24.309><c> that</c><00:07:24.550><c> neural</c>

00:07:24.779 --> 00:07:24.789 align:start position:0%
sigmoid function throughout that neural
 

00:07:24.789 --> 00:07:26.700 align:start position:0%
sigmoid function throughout that neural
network<00:07:25.149><c> turns</c><00:07:25.779><c> out</c><00:07:25.960><c> that's</c><00:07:26.169><c> actually</c><00:07:26.379><c> not</c>

00:07:26.700 --> 00:07:26.710 align:start position:0%
network turns out that's actually not
 

00:07:26.710 --> 00:07:28.739 align:start position:0%
network turns out that's actually not
the<00:07:26.770><c> best</c><00:07:27.159><c> choice</c><00:07:27.249><c> um</c><00:07:27.789><c> in</c><00:07:28.149><c> the</c><00:07:28.270><c> next</c><00:07:28.389><c> video</c>

00:07:28.739 --> 00:07:28.749 align:start position:0%
the best choice um in the next video
 

00:07:28.749 --> 00:07:30.239 align:start position:0%
the best choice um in the next video
let's<00:07:29.020><c> delve</c><00:07:29.259><c> a</c><00:07:29.349><c> little</c><00:07:29.379><c> bit</c><00:07:29.649><c> further</c><00:07:29.919><c> into</c>

00:07:30.239 --> 00:07:30.249 align:start position:0%
let's delve a little bit further into
 

00:07:30.249 --> 00:07:32.459 align:start position:0%
let's delve a little bit further into
how<00:07:31.120><c> you</c><00:07:31.180><c> can</c><00:07:31.389><c> use</c><00:07:31.539><c> different</c><00:07:31.779><c> what's</c><00:07:32.229><c> called</c>

00:07:32.459 --> 00:07:32.469 align:start position:0%
how you can use different what's called
 

00:07:32.469 --> 00:07:34.200 align:start position:0%
how you can use different what's called
activation<00:07:33.009><c> functions</c><00:07:33.699><c> of</c><00:07:33.909><c> which</c><00:07:34.059><c> the</c>

00:07:34.200 --> 00:07:34.210 align:start position:0%
activation functions of which the
 

00:07:34.210 --> 00:07:36.329 align:start position:0%
activation functions of which the
sigmoid<00:07:34.599><c> function</c><00:07:35.050><c> is</c><00:07:35.379><c> just</c><00:07:35.710><c> one</c><00:07:35.889><c> possible</c>

00:07:36.329 --> 00:07:36.339 align:start position:0%
sigmoid function is just one possible
 

00:07:36.339 --> 00:07:38.399 align:start position:0%
sigmoid function is just one possible
choice

