WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.465
[MUSIC PLAYING]

00:00:09.410 --> 00:00:12.390
Are you interested in
making your app smarter?

00:00:12.390 --> 00:00:13.930
Understanding your
user's location

00:00:13.930 --> 00:00:16.210
is one of the key
ingredients that can help

00:00:16.210 --> 00:00:19.860
unlock a simpler and more
intuitive user experience.

00:00:19.860 --> 00:00:22.010
I'm James McGill, and
I'm going to show you

00:00:22.010 --> 00:00:25.100
how you can use the Google
Places API for Android

00:00:25.100 --> 00:00:28.000
to intelligently adapt
your app's behavior based

00:00:28.000 --> 00:00:30.140
on the user's current location.

00:00:30.140 --> 00:00:31.900
For some time,
developers have been

00:00:31.900 --> 00:00:34.170
able to use the Location
Services on Android

00:00:34.170 --> 00:00:36.890
to better understand
where their users are.

00:00:36.890 --> 00:00:39.120
However, our users
and these APIs

00:00:39.120 --> 00:00:41.720
have been talking in
two different languages.

00:00:41.720 --> 00:00:45.390
Location APIs communicate
using latitude and longitude.

00:00:45.390 --> 00:00:47.560
But when you and I talk
about where to meet,

00:00:47.560 --> 00:00:51.030
we use the name of a particular
cafe or restaurant, not

00:00:51.030 --> 00:00:52.310
long numbers.

00:00:52.310 --> 00:00:54.180
The Google Places
API for Android

00:00:54.180 --> 00:00:57.460
provides the missing key needed
to translate between these two

00:00:57.460 --> 00:01:01.420
languages and powered by
Google's database of over 100

00:01:01.420 --> 00:01:02.750
million places.

00:01:02.750 --> 00:01:06.750
So that you can
turn this into this.

00:01:06.750 --> 00:01:08.960
Let's imagine that we're
building an application

00:01:08.960 --> 00:01:12.440
to improve our users' well-being
by providing fitness tips no

00:01:12.440 --> 00:01:14.100
matter where they are.

00:01:14.100 --> 00:01:16.050
When a user opens
the app, we want

00:01:16.050 --> 00:01:18.470
to show the information
that is most useful to them

00:01:18.470 --> 00:01:22.010
at that time, and at
that particular place.

00:01:22.010 --> 00:01:23.630
We could ask them
where they are,

00:01:23.630 --> 00:01:25.370
but who needs
another tap getting

00:01:25.370 --> 00:01:28.110
in the way of using our app?

00:01:28.110 --> 00:01:31.390
Using the Google Places API
Get Current Place method

00:01:31.390 --> 00:01:34.040
we can skip that prompt,
and automatically

00:01:34.040 --> 00:01:36.990
determine which
place the user is at.

00:01:36.990 --> 00:01:39.500
Get Current Place
returns a list of places

00:01:39.500 --> 00:01:41.580
based on the device's
current location

00:01:41.580 --> 00:01:43.450
and ordered by likelihood.

00:01:43.450 --> 00:01:46.290
While similar functionality
has been available via the Web

00:01:46.290 --> 00:01:49.780
Places API for some time,
we have significantly

00:01:49.780 --> 00:01:52.350
improved both
accuracy and precision

00:01:52.350 --> 00:01:54.320
in bringing the API to Android.

00:01:54.320 --> 00:01:56.950
We've achieved this by
deeply integrating the API

00:01:56.950 --> 00:01:59.490
with the wide variety
of sensors available

00:01:59.490 --> 00:02:03.520
on a modern mobile device,
including Wi-Fi and Bluetooth.

00:02:03.520 --> 00:02:05.610
By combining the
list of likely places

00:02:05.610 --> 00:02:08.289
with context from the app, we
can improve these estimates

00:02:08.289 --> 00:02:09.289
even further.

00:02:09.289 --> 00:02:12.400
In our case, we can use
the place type associated

00:02:12.400 --> 00:02:15.560
with each entry to filter
down to only fitness venues,

00:02:15.560 --> 00:02:18.080
like parks and gyms.

00:02:18.080 --> 00:02:21.030
Along with each place, they
Get Current Place method also

00:02:21.030 --> 00:02:22.810
returns a likelihood.

00:02:22.810 --> 00:02:25.210
That's a value
between zero and one

00:02:25.210 --> 00:02:27.480
representing how likely
it is that the device is

00:02:27.480 --> 00:02:29.210
at a particular place.

00:02:29.210 --> 00:02:31.920
We can use this value as
a threshold in our app

00:02:31.920 --> 00:02:35.150
to ensure that we only infer
the location when it really

00:02:35.150 --> 00:02:36.620
makes sense.

00:02:36.620 --> 00:02:40.120
For our fitness app, a
likelihood of more than 0.7

00:02:40.120 --> 00:02:44.020
for a place that is identified
as being either a gym or a park

00:02:44.020 --> 00:02:46.100
is a very strong
signal, which we

00:02:46.100 --> 00:02:49.540
can use to avoid having to
ask the user where they are.

00:02:49.540 --> 00:02:50.750
Awesome.

00:02:50.750 --> 00:02:54.020
The Google APIs team is invested
in improving the accuracy

00:02:54.020 --> 00:02:55.800
of these place detection APIs.

00:02:55.800 --> 00:02:57.810
So over time, you
should expect to see

00:02:57.810 --> 00:03:00.940
the likelihood of the first
place returned increase.

00:03:00.940 --> 00:03:02.990
If you want to help
us get there faster,

00:03:02.990 --> 00:03:06.640
you can by calling the
Report Device at Place method

00:03:06.640 --> 00:03:09.060
in cases where you
have a strong signal

00:03:09.060 --> 00:03:12.220
that the user is at a
particular location.

00:03:12.220 --> 00:03:15.190
Once submitted, this data is
used anonymously to improve

00:03:15.190 --> 00:03:17.830
our model of the world,
but cannot be retrieved

00:03:17.830 --> 00:03:20.240
by your application
or end users.

00:03:20.240 --> 00:03:22.430
So if it's important to
have access to this data,

00:03:22.430 --> 00:03:25.420
you should also store in
a persistent data store.

00:03:25.420 --> 00:03:27.790
The best part is that
this functionality

00:03:27.790 --> 00:03:29.920
is available for
free up to a default

00:03:29.920 --> 00:03:34.430
limit of 150,000 queries per
day for verified developers.

00:03:34.430 --> 00:03:35.260
Need more?

00:03:35.260 --> 00:03:36.280
No worries.

00:03:36.280 --> 00:03:38.220
Get in touch with
us at this URL,

00:03:38.220 --> 00:03:40.200
or check out this
site for instructions

00:03:40.200 --> 00:03:43.120
on how to verify your
development project.

00:03:43.120 --> 00:03:45.370
With the Google
Places API, you can

00:03:45.370 --> 00:03:49.160
bring the intelligence of
semantic location to your app.

00:03:49.160 --> 00:03:51.290
To get started, check
out the Getting Started

00:03:51.290 --> 00:03:53.320
Guide at this URL.

00:03:53.320 --> 00:03:55.210
I'm James McGill,
and I can't wait

00:03:55.210 --> 00:03:59.720
to see you going places with the
Google Places API for Android.

00:03:59.720 --> 00:04:02.770
[MUSIC PLAYING]

