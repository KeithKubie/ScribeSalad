WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.044
[MUSIC PLAYING]

00:00:05.044 --> 00:00:05.710
DAN SANDLER: Hi.

00:00:05.710 --> 00:00:06.850
My name is Dan.

00:00:06.850 --> 00:00:09.730
I'm here with Hyunyoung
and Sunny and Selim.

00:00:09.730 --> 00:00:14.191
And we are from the Android
system UI and launcher teams.

00:00:14.191 --> 00:00:16.149
We always have some fun
stuff in every release.

00:00:16.149 --> 00:00:17.590
We're going to talk
about some of it here.

00:00:17.590 --> 00:00:19.590
Some of it's great stuff
for users, some of it's

00:00:19.590 --> 00:00:21.370
stuff you need to
know as developers.

00:00:21.370 --> 00:00:22.600
Either way, we're
really proud of it.

00:00:22.600 --> 00:00:23.590
These are the people
that built it.

00:00:23.590 --> 00:00:26.230
I'm super proud to be up here
with them telling you about it.

00:00:26.230 --> 00:00:28.840
So let's-- we got a
lot to talk about.

00:00:28.840 --> 00:00:30.340
I don't want to
waste a lot of time.

00:00:30.340 --> 00:00:31.923
Hyunyoung, why don't
you take it away?

00:00:31.923 --> 00:00:33.520
Tell us about new
stuff in icons.

00:00:33.520 --> 00:00:36.730
HYUNYOUNG SONG:
OK, thank you Dan.

00:00:36.730 --> 00:00:37.550
Hi, everybody.

00:00:37.550 --> 00:00:39.516
My name is Hyunyoung
Song, and today I'm

00:00:39.516 --> 00:00:41.140
going to talk about
new changes that we

00:00:41.140 --> 00:00:47.060
introduced around launcher
icons in O platform.

00:00:47.060 --> 00:00:51.440
OK, so what is the problem that
we're trying to solve here?

00:00:51.440 --> 00:00:54.980
One of the things the developers
like about pre-O Android icons

00:00:54.980 --> 00:00:56.780
is that it's very flexible.

00:00:56.780 --> 00:01:01.250
Aside from the constraint that
Play Console impose on you,

00:01:01.250 --> 00:01:04.819
the 48 dp size limit, you
can choose whatever shape

00:01:04.819 --> 00:01:08.600
or size or padding or
shadow that you like.

00:01:08.600 --> 00:01:11.030
Of course, there's a
material UI design guideline

00:01:11.030 --> 00:01:14.900
around how you should do
them, but not all developers

00:01:14.900 --> 00:01:16.850
abides by them.

00:01:16.850 --> 00:01:18.280
And so this flex--

00:01:18.280 --> 00:01:21.770
and this flexibility is
actually a double edged sword

00:01:21.770 --> 00:01:26.840
because, if you look at a lot
of the OEM launcher screens

00:01:26.840 --> 00:01:28.910
or home screens,
what you notice is

00:01:28.910 --> 00:01:31.730
that your icon doesn't look
the same as what you actually

00:01:31.730 --> 00:01:32.635
added to your APK.

00:01:36.510 --> 00:01:40.440
Like in this example of
Chrome and Play Store icon,

00:01:40.440 --> 00:01:42.120
they shrink it
down, and then they

00:01:42.120 --> 00:01:46.850
put it on a background
color that the OEM decided.

00:01:46.850 --> 00:01:51.510
In this example, the
same Play Store icon

00:01:51.510 --> 00:01:54.120
is cut around the corners.

00:01:54.120 --> 00:01:58.800
And at least these icons
preserve its original look.

00:01:58.800 --> 00:02:00.870
Sometimes they even
use icon packs,

00:02:00.870 --> 00:02:04.770
which completely changes how
your brand identity looks like.

00:02:04.770 --> 00:02:08.509
And that's what we're trying
to solve in Adaptive Icons.

00:02:11.850 --> 00:02:13.800
So let's bring up
the slides that you

00:02:13.800 --> 00:02:15.810
may have seen Dan
already presented

00:02:15.810 --> 00:02:20.010
during What's New in Android O.
So there's a simple formula--

00:02:20.010 --> 00:02:22.830
app developers will provide
foreground and background

00:02:22.830 --> 00:02:23.670
layers.

00:02:23.670 --> 00:02:26.910
One of these layers have
to be full-bleed, opaque.

00:02:26.910 --> 00:02:29.890
And the different devices--

00:02:29.890 --> 00:02:33.720
the OEM or the platform, they
specify what kind of mask that

00:02:33.720 --> 00:02:37.630
will be used on these icons.

00:02:37.630 --> 00:02:39.810
If the mask was
circle, then the user

00:02:39.810 --> 00:02:43.590
will see circle-shaped icons all
across the system UI surfaces.

00:02:43.590 --> 00:02:46.720
And this not only
include the launcher,

00:02:46.720 --> 00:02:50.550
but settings UI, apps
list, apps info page,

00:02:50.550 --> 00:02:53.760
and then also the recents
and overview titlebar.

00:02:53.760 --> 00:02:57.510
And lastly the
share sheet dialog

00:02:57.510 --> 00:02:59.460
will also use this
launcher icon.

00:02:59.460 --> 00:03:04.260
So the shape will change
throughout these surfaces.

00:03:04.260 --> 00:03:06.990
If the mask was
rounded direct then

00:03:06.990 --> 00:03:09.600
the result will be
a round direct icon.

00:03:12.710 --> 00:03:16.360
So while we were
changing the Android--

00:03:16.360 --> 00:03:20.060
the icon API, the first
thing that we also changed

00:03:20.060 --> 00:03:22.670
is the visible size of the icon.

00:03:22.670 --> 00:03:25.400
Previously, it used to be 48 dp.

00:03:25.400 --> 00:03:28.790
But lately, there are
wider range of icon sizes

00:03:28.790 --> 00:03:31.820
that different launchers,
third party launchers uses.

00:03:31.820 --> 00:03:35.030
And some of them are 60
dp, some of them are 72 dp.

00:03:35.030 --> 00:03:41.000
So we decided that the
visible size should be 72 dp.

00:03:41.000 --> 00:03:43.100
But the foreground
and background layer

00:03:43.100 --> 00:03:45.650
that we actually want
you to upgrade to,

00:03:45.650 --> 00:03:49.250
we want you to provide 108 dp.

00:03:49.250 --> 00:03:53.180
We want you to add 25%
of the viewport inset

00:03:53.180 --> 00:03:57.200
around four edges, either
using the extension

00:03:57.200 --> 00:04:00.200
of your foreground layer,
or as a transparency

00:04:00.200 --> 00:04:04.910
so that we can add delightful
animations such these,

00:04:04.910 --> 00:04:08.000
like the parallax, and
pulsing, and there is actually

00:04:08.000 --> 00:04:09.440
a lot more.

00:04:09.440 --> 00:04:13.820
But unfortunately, on your
today's developer preview,

00:04:13.820 --> 00:04:15.590
you will not see any
of these animations

00:04:15.590 --> 00:04:19.160
because we're still vetting
how to best place these.

00:04:19.160 --> 00:04:21.129
But it will come up
in future releases.

00:04:23.850 --> 00:04:26.130
So let's talk about safe zone.

00:04:26.130 --> 00:04:30.300
When you're adding your main
logo, or the badge of your icon

00:04:30.300 --> 00:04:32.880
in the foreground layer,
you might be curious, OK,

00:04:32.880 --> 00:04:34.800
how do I make sure
that all of these

00:04:34.800 --> 00:04:37.410
show up on every
single platform?

00:04:37.410 --> 00:04:40.820
And that's what safe
zone does for you.

00:04:40.820 --> 00:04:43.920
When an OEM defines
their mask shape,

00:04:43.920 --> 00:04:47.590
it cannot cut into
the safe zone.

00:04:47.590 --> 00:04:50.190
And this is enforced
by the system--

00:04:50.190 --> 00:04:53.010
by the API.

00:04:53.010 --> 00:04:54.960
What this means is
that if you happen

00:04:54.960 --> 00:04:59.970
to have a badge on the
right bottom corner

00:04:59.970 --> 00:05:03.660
of this risky zone that I
labeled, then what it will mean

00:05:03.660 --> 00:05:08.010
is that if it's rendered
on a platform that

00:05:08.010 --> 00:05:11.760
is close to a rectangle,
then it may get shown.

00:05:11.760 --> 00:05:16.110
But if it's on a device where
it has circle mask shape,

00:05:16.110 --> 00:05:18.720
it'll be clipped off,
or not shown at all.

00:05:18.720 --> 00:05:21.990
But I'm not saying that
you should not add badges.

00:05:21.990 --> 00:05:24.960
Just make sure that they're
inside the safe zone

00:05:24.960 --> 00:05:26.705
to be shown on every platform.

00:05:29.750 --> 00:05:31.085
OK, so let's talk about API.

00:05:34.650 --> 00:05:37.140
The main class that
we added to O platform

00:05:37.140 --> 00:05:39.570
is AdaptiveIconDrawable class.

00:05:39.570 --> 00:05:42.600
It supports two elements--
background and foreground,

00:05:42.600 --> 00:05:46.770
and one attribute-- drawable,
where you can specify either

00:05:46.770 --> 00:05:51.300
the asset or another--

00:05:51.300 --> 00:05:56.520
basically you can specify
either a drawable or a color.

00:05:56.520 --> 00:05:59.970
And where this class fits
in the drawable family tree,

00:05:59.970 --> 00:06:03.210
its parent probably could
be the LayerDrawable,

00:06:03.210 --> 00:06:08.320
and its half sibling will
be the RippleDrawable.

00:06:08.320 --> 00:06:11.680
And after you define
this XML file,

00:06:11.680 --> 00:06:17.650
you don't actually specify
this in Android manifest file.

00:06:17.650 --> 00:06:21.370
The old Android icon
attribute is still in affect.

00:06:21.370 --> 00:06:24.700
As a matter of fact, you do
not remove the Legacy icon

00:06:24.700 --> 00:06:28.060
because in previous platforms
before O, they will not--

00:06:28.060 --> 00:06:31.690
it will not know how to handle
or inflate adaptive icons.

00:06:31.690 --> 00:06:34.300
So you still have to
keep this adaptive icon.

00:06:34.300 --> 00:06:37.840
But as of O, what
you do is, you'd

00:06:37.840 --> 00:06:41.860
create a same-name XML file
as the Legacy png asset,

00:06:41.860 --> 00:06:44.390
and then add it
into mipmap-anydpi.

00:06:44.390 --> 00:06:49.300
And whatever foreground and
background layer is neat,

00:06:49.300 --> 00:06:52.750
like this ic_foreground.png,
you'd add it

00:06:52.750 --> 00:06:56.110
to the density-specific
mipmap directory.

00:06:56.110 --> 00:07:00.790
And at compile time, AAPT will
scan your mipmap and your DPI

00:07:00.790 --> 00:07:01.700
directory.

00:07:01.700 --> 00:07:03.180
And if it sees
adaptive icon, it'll

00:07:03.180 --> 00:07:06.460
move to v26 particular
directory so

00:07:06.460 --> 00:07:10.960
that only platform 26 and above
will inflate it and use it.

00:07:13.900 --> 00:07:19.270
One thing to note is that some
of you good Android citizen may

00:07:19.270 --> 00:07:20.980
already know about
this round icon

00:07:20.980 --> 00:07:22.560
attribute that we added in NMR1.

00:07:25.390 --> 00:07:29.170
If you happen to be the few
Android developers that did use

00:07:29.170 --> 00:07:35.500
it, then we recommend that you
create the same-name XML file

00:07:35.500 --> 00:07:37.590
as the Legacy--

00:07:37.590 --> 00:07:40.720
as the original adaptive
icon file, but the contents

00:07:40.720 --> 00:07:42.080
can be the same.

00:07:42.080 --> 00:07:45.790
Now, regarding why we decided
to not deprecate this,

00:07:45.790 --> 00:07:49.210
and why you have
to override this,

00:07:49.210 --> 00:07:51.040
I am not going to
go into detail,

00:07:51.040 --> 00:07:53.550
but I strongly urge you to
read them on our websites.

00:07:57.550 --> 00:07:59.320
Now, some of you
sitting in the audience

00:07:59.320 --> 00:08:03.310
may think 108 dp,
that is really huge.

00:08:03.310 --> 00:08:05.320
And maybe to make
the matter worse,

00:08:05.320 --> 00:08:09.500
your APK size is very close to
hitting that Play Console max

00:08:09.500 --> 00:08:10.600
size limit.

00:08:10.600 --> 00:08:13.750
In which case,
what you can do is,

00:08:13.750 --> 00:08:19.310
in O, we added fraction-type.

00:08:19.310 --> 00:08:21.610
The inset drawables
support fraction-type.

00:08:21.610 --> 00:08:24.310
And if you remember, the
inset that I asked you to add

00:08:24.310 --> 00:08:25.630
was 18 dp.

00:08:25.630 --> 00:08:28.410
If you divide that
by 108, that is 16%.

00:08:28.410 --> 00:08:34.630
So if you specify
16% as your inset,

00:08:34.630 --> 00:08:38.440
and then use your Legacy--
appoint the inset drawables'

00:08:38.440 --> 00:08:41.539
main content to be
the Legacy icon,

00:08:41.539 --> 00:08:46.150
then there will be
no APK size increase,

00:08:46.150 --> 00:08:52.450
and you will be able to upgrade
to adaptive icons for free.

00:08:52.450 --> 00:08:56.380
And, as of Android N,
the vector drawables

00:08:56.380 --> 00:08:59.790
became so much more expressive
that almost every element

00:08:59.790 --> 00:09:03.400
in SVG file can now be
supported in vector drawables.

00:09:03.400 --> 00:09:05.080
So if you actually
use vector drawables

00:09:05.080 --> 00:09:07.780
as either your foreground
and background element,

00:09:07.780 --> 00:09:09.770
then your APK size
will actually decrease.

00:09:19.710 --> 00:09:25.860
And now I'm going to do a demo
of how the icon wizard now

00:09:25.860 --> 00:09:28.500
support creating
adaptive icon wizard.

00:09:28.500 --> 00:09:32.640
If you right click your
resource directory,

00:09:32.640 --> 00:09:38.160
and then choose New Image
Asset, then you get this page.

00:09:38.160 --> 00:09:40.920
And here you can
configure your foreground,

00:09:40.920 --> 00:09:43.500
you can select different
asset type as image.

00:09:43.500 --> 00:09:45.180
I'm going to choose Image here.

00:09:45.180 --> 00:09:48.090
And then, what you're
seeing on the right side is,

00:09:48.090 --> 00:09:50.190
this is a preview of
what your icon will

00:09:50.190 --> 00:09:53.790
look like on four different
platforms with different mask.

00:09:53.790 --> 00:09:55.960
And what you're
adding into your APK

00:09:55.960 --> 00:09:59.740
is actually presented
here in full-bleed layers.

00:09:59.740 --> 00:10:01.800
Now, you can toggle
the show safe zone

00:10:01.800 --> 00:10:04.710
to see if your foreground
element is fully

00:10:04.710 --> 00:10:06.270
within the safe zone.

00:10:06.270 --> 00:10:08.880
And so that you can
resize, you make

00:10:08.880 --> 00:10:11.220
sure that everything
is the foreground.

00:10:11.220 --> 00:10:13.020
And in background
layer, I'm going

00:10:13.020 --> 00:10:18.030
to change the color to
something hopefully help--

00:10:18.030 --> 00:10:21.400
not so help, OK, whatever.

00:10:21.400 --> 00:10:27.780
And then that's what
we're going to use.

00:10:27.780 --> 00:10:31.590
And the last tab is
actually very important

00:10:31.590 --> 00:10:35.520
because as I mentioned earlier,
if you just add adaptive icons,

00:10:35.520 --> 00:10:38.700
your app will not have any
icons in previous platforms.

00:10:38.700 --> 00:10:41.790
So you can use this third
tab to generate the Legacy

00:10:41.790 --> 00:10:49.030
icon, the Legacy round icon
for circle shape mask shaped

00:10:49.030 --> 00:10:50.060
devices.

00:10:50.060 --> 00:10:52.170
And then this--
you can also even

00:10:52.170 --> 00:10:56.310
generate the 512 by 512
image that you upload

00:10:56.310 --> 00:10:58.050
to your Play Console here.

00:10:58.050 --> 00:10:59.824
And then click Next.

00:10:59.824 --> 00:11:01.740
And then, this is the
same directory structure

00:11:01.740 --> 00:11:03.780
that I showed you earlier on.

00:11:03.780 --> 00:11:05.580
You'll say Finish.

00:11:05.580 --> 00:11:13.660
And then since-- before all
devices become available,

00:11:13.660 --> 00:11:17.260
you can test this
on the emulator.

00:11:17.260 --> 00:11:19.720
And now I'm installing the app.

00:11:19.720 --> 00:11:25.440
And as you can see, this is
the icon that I just created.

00:11:25.440 --> 00:11:30.140
And this emulator has
circle as the mask.

00:11:30.140 --> 00:11:32.940
And-- oh, OK.

00:11:38.970 --> 00:11:39.470
Oh.

00:11:39.470 --> 00:11:41.600
And so what I'm showing
you right now is,

00:11:41.600 --> 00:11:45.530
this is an option that you
can see on the main launcher

00:11:45.530 --> 00:11:47.690
of your emulator.

00:11:47.690 --> 00:11:52.280
It lets you-- first, this
is what it should have been.

00:11:52.280 --> 00:11:56.000
The main mask shape on
this device is circle.

00:11:56.000 --> 00:11:59.210
But just for
developer purpose, you

00:11:59.210 --> 00:12:02.540
can change the icon
shape so that you

00:12:02.540 --> 00:12:04.970
can check what it will
look like on other devices.

00:12:04.970 --> 00:12:08.100
And let's pick something
fun, like teardrop.

00:12:08.100 --> 00:12:13.012
And so now you have
teardrop shape icon

00:12:13.012 --> 00:12:14.470
without having to
make any changes.

00:12:17.823 --> 00:12:20.218
[APPLAUSE]

00:12:25.500 --> 00:12:27.300
That's all, everything
to adaptive icons.

00:12:27.300 --> 00:12:28.716
And on that note,
I'll pass it off

00:12:28.716 --> 00:12:32.585
to Sunny, who will tell you more
about shortcuts and widgets.

00:12:32.585 --> 00:12:33.710
SUNNY GOYAL: Thank you, HY.

00:12:33.710 --> 00:12:37.098
[APPLAUSE]

00:12:39.518 --> 00:12:41.020
Hello, everyone.

00:12:41.020 --> 00:12:43.360
Just now, Hyunyoung
Song talked about how

00:12:43.360 --> 00:12:45.790
to make your app icons
look even better.

00:12:45.790 --> 00:12:49.507
This helps a lot in improving
your app's experience.

00:12:49.507 --> 00:12:51.340
Another way to improve
your app's experience

00:12:51.340 --> 00:12:54.270
is by adding shortcuts.

00:12:54.270 --> 00:12:57.460
Shortcuts allow apps to
expose deep links directly

00:12:57.460 --> 00:12:59.170
on the user's home screen.

00:12:59.170 --> 00:13:00.895
For example, a
messenger app can expose

00:13:00.895 --> 00:13:03.830
shortcut for frequently
used contacts,

00:13:03.830 --> 00:13:06.390
allowing the user to get
to those contacts quickly.

00:13:09.670 --> 00:13:11.610
An app can define
a shortcut using

00:13:11.610 --> 00:13:14.692
API defined last year in NML1.

00:13:14.692 --> 00:13:16.920
It would give it a
shortcutting for object,

00:13:16.920 --> 00:13:18.870
and parsing all the
related information,

00:13:18.870 --> 00:13:21.376
like label, icon, and intent.

00:13:21.376 --> 00:13:23.250
Then using the
ShortcutManager manager class,

00:13:23.250 --> 00:13:25.839
it can add, update, or
delete the shortcuts.

00:13:25.839 --> 00:13:27.880
The system will manage
the shortcuts for the app,

00:13:27.880 --> 00:13:30.190
and even back them up
on the cloud if needed.

00:13:34.020 --> 00:13:35.880
These dynamically-added
shortcuts

00:13:35.880 --> 00:13:38.510
are shown as additional
options for the app.

00:13:38.510 --> 00:13:41.310
For example, when Hyunyoung
clicked that icon.

00:13:41.310 --> 00:13:44.420
but the launcher can
also allow the user

00:13:44.420 --> 00:13:46.520
to pin the shortcuts
on the home screen

00:13:46.520 --> 00:13:50.880
where they exist as
independent icons.

00:13:50.880 --> 00:13:53.840
Previously, to create
these pin shortcuts,

00:13:53.840 --> 00:13:56.660
an app would send a
install shortcut broadcast,

00:13:56.660 --> 00:13:58.520
and hope that the
launcher gets to broadcast

00:13:58.520 --> 00:13:59.960
and does the right thing.

00:13:59.960 --> 00:14:02.300
But there are many
downsides to this flow.

00:14:02.300 --> 00:14:04.377
For example, the
app loses control,

00:14:04.377 --> 00:14:05.960
and there's no way
for the app to know

00:14:05.960 --> 00:14:08.510
that the shortcut was added.

00:14:08.510 --> 00:14:11.250
Also, since the user is
not involved in this flow,

00:14:11.250 --> 00:14:13.420
there's a potential for spam.

00:14:13.420 --> 00:14:17.330
Starting with Android O,
this API will no longer work.

00:14:17.330 --> 00:14:20.050
Instead, the app would
get a ShortcutInfo object,

00:14:20.050 --> 00:14:22.580
as explained in previous
slides, and call

00:14:22.580 --> 00:14:25.310
the requestPinShortcut API.

00:14:25.310 --> 00:14:28.020
This will make the launcher
show a confirmation prompt,

00:14:28.020 --> 00:14:30.210
allowing the user
to pin the shortcut,

00:14:30.210 --> 00:14:32.530
place the shortcut
on the home screen.

00:14:32.530 --> 00:14:34.610
Once a shortcut is
added, it behaves

00:14:34.610 --> 00:14:36.800
like any other shortcut,
and can be updated

00:14:36.800 --> 00:14:37.850
using the existing APIs.

00:14:41.220 --> 00:14:44.450
Another way to create
shortcut is from the registry.

00:14:44.450 --> 00:14:47.040
An app can define
a custom shortcut

00:14:47.040 --> 00:14:50.110
which shows a configuration
activity when the user tries

00:14:50.110 --> 00:14:53.540
to add them on the home screen.

00:14:53.540 --> 00:14:55.500
To define a custom
shortcut, the app

00:14:55.500 --> 00:14:57.590
would declare the
configuration activity

00:14:57.590 --> 00:15:01.250
in the manifest with the
create shortcut intent filter.

00:15:01.250 --> 00:15:03.710
This is the activity which
is started before the app--

00:15:03.710 --> 00:15:06.030
before the user adds the
shortcut on the home screen,

00:15:06.030 --> 00:15:09.870
which allows the user to
configure the shortcut.

00:15:09.870 --> 00:15:11.580
From this activity,
the app would

00:15:11.580 --> 00:15:13.830
return the shortcut
as Intent.EXTRA

00:15:13.830 --> 00:15:15.840
directly to the launcher.

00:15:15.840 --> 00:15:18.570
This has similar downsides as
the INSTALL_SHORTCUT flow--

00:15:18.570 --> 00:15:22.822
that the app loses control, and
it does not work cross-profile.

00:15:27.070 --> 00:15:30.420
In O, now app can directly
return a shortcut info object,

00:15:30.420 --> 00:15:32.170
and thus retain control
over the shortcut.

00:15:36.500 --> 00:15:39.130
From the registry, a user
can also add widgets.

00:15:39.130 --> 00:15:42.080
Now, this is the only way
for a user to add widget.

00:15:42.080 --> 00:15:43.735
If an app wants to
add a widget, it

00:15:43.735 --> 00:15:45.380
will have to explain
to the user how

00:15:45.380 --> 00:15:49.500
to get to the registry, which
may vary from device to device.

00:15:49.500 --> 00:15:52.190
Now, in O, an app can simply
call the RequestPinAppWidget

00:15:52.190 --> 00:15:55.330
a API This will show
a confirmation prompt

00:15:55.330 --> 00:15:58.220
similar to that of a shortcut,
and allow user to place

00:15:58.220 --> 00:16:00.390
the widget on the home screen.

00:16:00.390 --> 00:16:02.090
Once the widget has
been added, the app

00:16:02.090 --> 00:16:04.940
would get the widget ID
as part of the callback,

00:16:04.940 --> 00:16:06.500
and can be used to
update the widget.

00:16:10.420 --> 00:16:13.010
To summarize the changes,
INSTALL_SHORTCUT broadcast

00:16:13.010 --> 00:16:15.940
will no longer work on O.
Doesn't matter if the app is

00:16:15.940 --> 00:16:17.460
targeting O or not.

00:16:17.460 --> 00:16:19.420
An app should instead
use the new APIs

00:16:19.420 --> 00:16:21.310
to add shortcuts and widget.

00:16:21.310 --> 00:16:23.380
Make sure to check out
the documentation for more

00:16:23.380 --> 00:16:26.071
information on these APIs.

00:16:26.071 --> 00:16:29.053
[APPLAUSE]

00:16:29.053 --> 00:16:32.730
I'll hand over to Selim
for notifications.

00:16:32.730 --> 00:16:34.080
SELIM CINEK: Thank you, Sunny.

00:16:34.080 --> 00:16:34.930
Hello, everyone.

00:16:34.930 --> 00:16:39.870
I'm Selim, and I'm here today
to talk about notifications.

00:16:39.870 --> 00:16:42.630
Notifications have been one of
the key components of Android

00:16:42.630 --> 00:16:43.680
for many years.

00:16:43.680 --> 00:16:45.840
And in each of our
previous releases,

00:16:45.840 --> 00:16:48.020
we have continuously
improved on them.

00:16:48.020 --> 00:16:50.910
In Android O, we are
further improving our system

00:16:50.910 --> 00:16:53.050
in many different areas.

00:16:53.050 --> 00:16:57.420
Let me first talk about the
visual changes we are doing.

00:16:57.420 --> 00:17:00.030
The first key area of
improvements that we are doing

00:17:00.030 --> 00:17:02.790
is the channel visual
notification hierarchy.

00:17:02.790 --> 00:17:04.589
For a user, not
all notifications

00:17:04.589 --> 00:17:05.849
are created alike.

00:17:05.849 --> 00:17:07.740
So for example, a
user cares way more

00:17:07.740 --> 00:17:11.119
about the messaging notification
compared to a lower party

00:17:11.119 --> 00:17:12.770
weather notification.

00:17:12.770 --> 00:17:15.000
But in today's world,
all notifications

00:17:15.000 --> 00:17:17.849
look very similar, and the
user has a really hard time

00:17:17.849 --> 00:17:20.050
parsing its notifications.

00:17:20.050 --> 00:17:22.500
So starting in
Android O, we're going

00:17:22.500 --> 00:17:26.790
to be more opinionated about
the order of notifications.

00:17:26.790 --> 00:17:29.460
In order to do this, we're
dividing the section up

00:17:29.460 --> 00:17:32.100
in four different areas.

00:17:32.100 --> 00:17:36.910
On the very top, we have a new
section called Major Ongoing.

00:17:36.910 --> 00:17:40.860
Below these, we have People
to People notifications,

00:17:40.860 --> 00:17:45.480
followed tightly by General
notifications that behave

00:17:45.480 --> 00:17:48.690
just the way they do today.

00:17:48.690 --> 00:17:50.970
On the very bottom, we also
have a new section called

00:17:50.970 --> 00:17:53.550
By The Way notifications.

00:17:53.550 --> 00:17:58.960
Let me go into detail for
all of these sections.

00:17:58.960 --> 00:18:02.010
So the very first section
that appears on the very top

00:18:02.010 --> 00:18:03.930
is called the Major
Ongoing, and it

00:18:03.930 --> 00:18:07.800
is reserved for high
priority ongoing tasks.

00:18:07.800 --> 00:18:10.890
Good examples here are
music notifications,

00:18:10.890 --> 00:18:13.500
like an ongoing
navigation notification,

00:18:13.500 --> 00:18:16.140
or basically only
something that is

00:18:16.140 --> 00:18:17.940
really important to
the user, and the user

00:18:17.940 --> 00:18:21.390
must know that it exists.

00:18:21.390 --> 00:18:26.100
There are basically two ways
how a notification can end up

00:18:26.100 --> 00:18:27.460
in this area.

00:18:27.460 --> 00:18:30.270
The first one doesn't require
any developer interaction

00:18:30.270 --> 00:18:30.840
at all.

00:18:30.840 --> 00:18:33.930
And this reserved for
media notifications.

00:18:33.930 --> 00:18:35.510
Starting in Android
O, we are going

00:18:35.510 --> 00:18:38.340
to colorize the background
of notifications

00:18:38.340 --> 00:18:41.270
based on the media artwork.

00:18:41.270 --> 00:18:44.150
An example you can
see on the slide--

00:18:44.150 --> 00:18:46.230
as you can see, we are
extracting the background

00:18:46.230 --> 00:18:47.700
and the foreground
color directly

00:18:47.700 --> 00:18:49.760
from the album
artwork, and it will

00:18:49.760 --> 00:18:54.600
creates a really nice,
structured image.

00:18:54.600 --> 00:18:57.690
The second way how a
notification can be colorized

00:18:57.690 --> 00:19:00.570
is by opting in
by the developer.

00:19:00.570 --> 00:19:02.700
So a developer actually
has to do something

00:19:02.700 --> 00:19:05.920
if he wants to get there.

00:19:05.920 --> 00:19:08.610
The way to do this is, it's
reserve for foreground services

00:19:08.610 --> 00:19:09.900
notifications.

00:19:09.900 --> 00:19:12.340
And they can use a
new method called

00:19:12.340 --> 00:19:14.950
setColorized on the builder.

00:19:14.950 --> 00:19:17.010
The background
color will then be

00:19:17.010 --> 00:19:20.010
colorized by the app-provided
notification color.

00:19:23.047 --> 00:19:25.380
I want to really stress here
that please, please, please

00:19:25.380 --> 00:19:26.880
don't abuse these [INAUDIBLE].

00:19:26.880 --> 00:19:29.310
We're putting a lot
of, lot of trust

00:19:29.310 --> 00:19:31.380
into the developer ecosystem.

00:19:31.380 --> 00:19:34.230
And if you see just
being abused too much,

00:19:34.230 --> 00:19:37.340
we will have to change
it in the future.

00:19:37.340 --> 00:19:40.170
Another thing I really want
to stress that's colorized

00:19:40.170 --> 00:19:42.310
isn't the new white.

00:19:42.310 --> 00:19:45.000
By default, a notification
shouldn't be colorized.

00:19:45.000 --> 00:19:48.430
We don't want to create a
shade of rainbow colors.

00:19:48.430 --> 00:19:50.500
We want to achieve the opposite.

00:19:50.500 --> 00:19:53.610
We want to put focus on the
one notification that matters.

00:19:56.350 --> 00:19:58.990
All right, so below these
ongoing notification,

00:19:58.990 --> 00:20:01.570
we have People to
People notifications.

00:20:01.570 --> 00:20:04.840
And research has shown
that users usually

00:20:04.840 --> 00:20:08.120
care about people
notification the most.

00:20:08.120 --> 00:20:09.902
And if you're
interested about that,

00:20:09.902 --> 00:20:11.860
you should definitely go
to this talk tomorrow.

00:20:11.860 --> 00:20:14.500
It's happening at 12:30,
and it's a design talk.

00:20:14.500 --> 00:20:17.740
And [INAUDIBLE] if you're
interested about how

00:20:17.740 --> 00:20:20.320
to post notifications,
and how developers today

00:20:20.320 --> 00:20:24.590
abuse all our notification,
you should really go there.

00:20:24.590 --> 00:20:26.920
So in Android O, we're
transforming People

00:20:26.920 --> 00:20:29.160
to People notifications
by, first of all,

00:20:29.160 --> 00:20:31.900
ranking them higher up so
that the user sees them

00:20:31.900 --> 00:20:33.040
more quickly.

00:20:33.040 --> 00:20:36.230
And second of all, we're
also expanding their size.

00:20:36.230 --> 00:20:39.280
So even in a collapsed
form, the user

00:20:39.280 --> 00:20:41.410
can see up to three
lines of text,

00:20:41.410 --> 00:20:45.080
which obviously makes it way
easier to parse a notification.

00:20:45.080 --> 00:20:47.690
And this also happens
on a lock screen.

00:20:47.690 --> 00:20:50.020
So if you have been away from
your phone and come back,

00:20:50.020 --> 00:20:55.050
you can immediately see what is
relevant, and get back to it.

00:20:55.050 --> 00:20:56.800
All right, so below
these People to People

00:20:56.800 --> 00:20:59.350
notifications, as I said, are
the channel notifications.

00:20:59.350 --> 00:21:02.950
They behave just like
they did before, and--

00:21:02.950 --> 00:21:05.650
so I won't go into
detail to that section.

00:21:05.650 --> 00:21:08.140
So the last section in
the notification chain

00:21:08.140 --> 00:21:10.660
is called By The
Way notification.

00:21:10.660 --> 00:21:12.760
And this is completely new.

00:21:12.760 --> 00:21:15.630
And as you can
see, in Android O,

00:21:15.630 --> 00:21:18.910
we are transforming these
min priority notifications

00:21:18.910 --> 00:21:21.540
to show only a
single line of text.

00:21:21.540 --> 00:21:23.290
A user, if he's
interested in it,

00:21:23.290 --> 00:21:27.220
he can still make that
visible by clicking on it.

00:21:27.220 --> 00:21:28.750
Good examples of
notifications that

00:21:28.750 --> 00:21:31.660
should appear there
are an ongoing traffic

00:21:31.660 --> 00:21:32.950
notification, the weather--

00:21:32.950 --> 00:21:35.290
basically anything that
is important and could

00:21:35.290 --> 00:21:39.112
actually relevant, but doesn't
require immediate attention.

00:21:42.070 --> 00:21:46.810
All right, so this completes the
visual notification hierarchy.

00:21:46.810 --> 00:21:49.600
And let's get to the next
feature we are working on.

00:21:49.600 --> 00:21:51.520
So the other feature
we working on

00:21:51.520 --> 00:21:53.440
is called the Visual Stability.

00:21:53.440 --> 00:21:57.760
And let's consider a situation
you maybe encounter every day.

00:21:57.760 --> 00:22:00.610
You're carefully
crafting, and you

00:22:00.610 --> 00:22:03.370
reply to maybe a friend, Selim.

00:22:03.370 --> 00:22:07.971
And just about when
you were to hit send,

00:22:07.971 --> 00:22:09.970
then obviously the whole
notification just going

00:22:09.970 --> 00:22:10.480
to reorder.

00:22:10.480 --> 00:22:14.320
And it sucks, and probably you
hit the wrong notification,

00:22:14.320 --> 00:22:17.402
and magic stuff happens, and
you don't know what happened.

00:22:17.402 --> 00:22:19.360
And of course, this is
a really bad experience,

00:22:19.360 --> 00:22:21.040
and we want to improve on it.

00:22:21.040 --> 00:22:23.680
And so the goal sounds
relatively simple--

00:22:23.680 --> 00:22:26.900
don't reorder notifications
while you're looking at them.

00:22:26.900 --> 00:22:29.110
In reality, unfortunately,
this is slightly harder

00:22:29.110 --> 00:22:32.642
than it sounds because if you
get a new message, for example,

00:22:32.642 --> 00:22:34.350
you still want to know
about that, right?

00:22:34.350 --> 00:22:36.299
And yeah.

00:22:36.299 --> 00:22:37.840
We actually like
this feature so much

00:22:37.840 --> 00:22:39.790
that it's even
available in NMR2,

00:22:39.790 --> 00:22:40.990
and we backboarded it there.

00:22:40.990 --> 00:22:44.230
So if you have a phone already
in NMR2, that's already there.

00:22:46.900 --> 00:22:49.750
All right, so if you know me,
and you know me personally,

00:22:49.750 --> 00:22:51.340
I'm all about notifications.

00:22:51.340 --> 00:22:54.730
And I'm all about animations
with notification.

00:22:54.730 --> 00:22:57.930
I care about every detail, and
even the slightest little thing

00:22:57.930 --> 00:23:00.790
should be pixel
perfect and animated.

00:23:00.790 --> 00:23:06.220
And in Android O, my
designers and my coworkers

00:23:06.220 --> 00:23:07.960
let me off my
leash a little bit,

00:23:07.960 --> 00:23:10.090
and I was allowed to go wild.

00:23:10.090 --> 00:23:14.890
So I created this animation
between expand, and basically

00:23:14.890 --> 00:23:17.470
where we expand the
notification chain.

00:23:17.470 --> 00:23:20.530
I think the slide explains it
way better than I ever could,

00:23:20.530 --> 00:23:23.310
but the key goal,
essentially, is

00:23:23.310 --> 00:23:25.600
to create a sense of
object permanence.

00:23:25.600 --> 00:23:28.830
A user should always know
where his notification are,

00:23:28.830 --> 00:23:30.300
no matter whether
they're collapsed

00:23:30.300 --> 00:23:33.490
in an icon form
in the status bar,

00:23:33.490 --> 00:23:35.837
or when they're expanded
into full modification shade.

00:23:35.837 --> 00:23:38.170
And obviously there needs to
be a really nice transition

00:23:38.170 --> 00:23:39.910
between those.

00:23:39.910 --> 00:23:41.770
As you can see, By
The Way notification

00:23:41.770 --> 00:23:45.250
appear on the very bottom,
and appear as overflow dots

00:23:45.250 --> 00:23:46.490
to indicate an overflow.

00:23:46.490 --> 00:23:49.480
And they go away when
you close the shade.

00:23:49.480 --> 00:23:51.130
All right, let me
hand it over to Dan

00:23:51.130 --> 00:23:54.476
to talk about channels
and other nice features.

00:23:54.476 --> 00:23:56.340
[APPLAUSE]

00:23:56.340 --> 00:23:58.408
DAN SANDLER: Thanks, Selim.

00:23:58.408 --> 00:23:59.830
HYUNYOUNG SONG: Nice job.

00:23:59.830 --> 00:24:02.110
DAN SANDLER: Hi, it's me again.

00:24:02.110 --> 00:24:03.610
Notification
channels is probably

00:24:03.610 --> 00:24:07.180
the biggest piece of new API
surface in the notification

00:24:07.180 --> 00:24:07.700
system.

00:24:07.700 --> 00:24:10.460
So there's a lot of interesting
design decisions there.

00:24:10.460 --> 00:24:12.500
Let's talk about it.

00:24:12.500 --> 00:24:15.100
OK, so let's just start
with the base assumption

00:24:15.100 --> 00:24:17.100
that apps post a lot
of notifications.

00:24:17.100 --> 00:24:21.270
Like, kind of a lot.

00:24:21.270 --> 00:24:23.950
But that's OK, because
users like notifications,

00:24:23.950 --> 00:24:25.537
also kind of a lot.

00:24:25.537 --> 00:24:27.370
So there's actually a
good state of affairs.

00:24:27.370 --> 00:24:30.220
And to tell you the
full story of channels,

00:24:30.220 --> 00:24:33.850
I need to sort of stop for a
second and talk about my friend

00:24:33.850 --> 00:24:35.550
here.

00:24:35.550 --> 00:24:36.750
It might be your friend.

00:24:36.750 --> 00:24:38.750
This is my friend.

00:24:38.750 --> 00:24:40.716
This is the
neurotransmitter dopamine.

00:24:40.716 --> 00:24:43.090
It's actually a cartoon of
the neurotransmitter dopamine,

00:24:43.090 --> 00:24:45.250
which is fine, because
I'm not a neuroscientist,

00:24:45.250 --> 00:24:46.833
so you shouldn't
really trust anything

00:24:46.833 --> 00:24:48.440
I say about brain
chemistry anyway.

00:24:48.440 --> 00:24:50.860
But let's just say
that this is dopamine.

00:24:50.860 --> 00:24:53.280
It's really, really complicated
how it works in the brain,

00:24:53.280 --> 00:24:53.779
in the body.

00:24:53.779 --> 00:24:55.350
It's involved in
all kinds of stuff.

00:24:55.350 --> 00:24:57.190
But what we're going
to talk about today

00:24:57.190 --> 00:25:01.700
is the things that
it's associated

00:25:01.700 --> 00:25:03.950
with that I show here.

00:25:03.950 --> 00:25:06.340
So things like
anticipation of reward,

00:25:06.340 --> 00:25:14.030
motivation seeking rewards,
your attention, salience,

00:25:14.030 --> 00:25:17.060
you're in the moment and
looking for something--

00:25:17.060 --> 00:25:19.160
including the right
word for that slide.

00:25:19.160 --> 00:25:22.370
It's basically the user
engagement chemical

00:25:22.370 --> 00:25:23.820
in your brain.

00:25:23.820 --> 00:25:27.860
And so bringing
this back to what

00:25:27.860 --> 00:25:30.200
we were talking about
here, dopamine on its own

00:25:30.200 --> 00:25:31.619
doesn't make you happy, right?

00:25:31.619 --> 00:25:34.160
There are lots of other great
neurotransmitters and chemicals

00:25:34.160 --> 00:25:35.670
that make you feel
happy and satisfied.

00:25:35.670 --> 00:25:36.669
That's not it's purpose.

00:25:36.669 --> 00:25:39.920
Dopamine is to get you there.

00:25:39.920 --> 00:25:42.290
And notifications work
exactly the same way.

00:25:42.290 --> 00:25:46.180
They get your attention,
you become attuned to them,

00:25:46.180 --> 00:25:48.980
you anticipate a reward,
so you tap on it.

00:25:48.980 --> 00:25:50.810
Maybe what's behind
it is useful, maybe

00:25:50.810 --> 00:25:52.610
what's behind it is
deeply satisfying.

00:25:52.610 --> 00:25:55.970
You hope it is, maybe it's not.

00:25:55.970 --> 00:25:59.990
So with every app fighting for
the user's limited attention

00:25:59.990 --> 00:26:02.600
span, limited supply of
dopamine, limited ability

00:26:02.600 --> 00:26:05.300
to care about
distractions and stuff

00:26:05.300 --> 00:26:08.600
that the device wants
to tell you, suddenly

00:26:08.600 --> 00:26:10.850
you're not nearly as excited
about those notifications

00:26:10.850 --> 00:26:11.570
at all.

00:26:11.570 --> 00:26:12.830
And everybody loses.

00:26:12.830 --> 00:26:15.095
The user loses,
every app loses, it's

00:26:15.095 --> 00:26:18.149
a tragedy of the commons
in a classic sense.

00:26:18.149 --> 00:26:20.690
But I know that's actually not
a problem for anybody in here.

00:26:20.690 --> 00:26:22.648
All of you-- I can tell
just by looking at you,

00:26:22.648 --> 00:26:24.410
you've all got
good notifications.

00:26:24.410 --> 00:26:27.050
Your notifications are the
ones that the user really

00:26:27.050 --> 00:26:27.620
wants to see.

00:26:27.620 --> 00:26:28.130
I know that.

00:26:28.130 --> 00:26:28.820
I understand.

00:26:28.820 --> 00:26:29.660
We get ourselves.

00:26:29.660 --> 00:26:31.760
But there are other
notifications out there that

00:26:31.760 --> 00:26:33.590
are not doing so well, right?

00:26:33.590 --> 00:26:36.170
So maybe you messed
up one time, and you

00:26:36.170 --> 00:26:39.300
made a notification that had
a really loud beeping tone,

00:26:39.300 --> 00:26:41.510
and so the user banned
your app forever.

00:26:41.510 --> 00:26:43.850
Or like when you had a
new recommendation engine,

00:26:43.850 --> 00:26:46.444
and your machine learning was
kind of in machine preschool,

00:26:46.444 --> 00:26:48.110
and it didn't recommend
the right thing,

00:26:48.110 --> 00:26:50.356
so the user blocked your
app or uninstalled it.

00:26:50.356 --> 00:26:52.730
Or you're trying to try out
some new kind of notification

00:26:52.730 --> 00:26:55.532
that you know that some of
your users are going to love,

00:26:55.532 --> 00:26:56.990
and others are
going to like, yeah,

00:26:56.990 --> 00:26:58.156
I could take it or leave it.

00:26:58.156 --> 00:27:00.620
And you're running the risk
of making them unhappy.

00:27:00.620 --> 00:27:05.716
So the Android way is to
give users control, OK?

00:27:05.716 --> 00:27:08.090
And Android already lets you
have a little bit of control

00:27:08.090 --> 00:27:10.670
over apps that are maybe
not quite matched to what

00:27:10.670 --> 00:27:12.200
you expect other notifications.

00:27:12.200 --> 00:27:13.330
You can uninstall them.

00:27:13.330 --> 00:27:15.080
In Jellybean, we added
the ability for you

00:27:15.080 --> 00:27:17.780
to block notifications, but
leave the rest of the app

00:27:17.780 --> 00:27:19.284
working just as it did.

00:27:19.284 --> 00:27:21.200
In Nougat, we made that
a little more refined,

00:27:21.200 --> 00:27:23.162
gave you some more options.

00:27:23.162 --> 00:27:24.620
But in Android O,
we're introducing

00:27:24.620 --> 00:27:26.150
notification channels.

00:27:26.150 --> 00:27:28.715
So a channel is a data structure
that you create and hand

00:27:28.715 --> 00:27:30.850
to the notification
manager that describes

00:27:30.850 --> 00:27:33.615
a category of notifications
from your app specific

00:27:33.615 --> 00:27:35.240
to your channel,
specific to your app--

00:27:35.240 --> 00:27:38.045
they don't match any
other app's channels.

00:27:38.045 --> 00:27:40.170
Everything on the channel
shares the same behavior.

00:27:40.170 --> 00:27:41.780
And you see some icons
representing the behavior

00:27:41.780 --> 00:27:42.290
there.

00:27:42.290 --> 00:27:45.500
Behaviors like sound,
vibration, whether they pop up

00:27:45.500 --> 00:27:49.207
on the screen, whether they
light the LED, and so forth.

00:27:49.207 --> 00:27:51.290
And this category is
arranged so that the user can

00:27:51.290 --> 00:27:54.290
understand these notifications,
and can control them.

00:27:54.290 --> 00:27:55.874
Category of
notifications from an app

00:27:55.874 --> 00:27:57.290
with the same
behavior so the user

00:27:57.290 --> 00:28:00.209
can understand and control them.

00:28:00.209 --> 00:28:02.750
All right, I've got an example
here from a fictitious airline

00:28:02.750 --> 00:28:04.190
Crane Air.

00:28:04.190 --> 00:28:05.945
Usually they post
notifications like,

00:28:05.945 --> 00:28:08.070
your flight is delayed,
which are really important.

00:28:08.070 --> 00:28:10.730
Or here's your boarding
pass, also extremely useful.

00:28:10.730 --> 00:28:12.854
And then one day they post
you something that says,

00:28:12.854 --> 00:28:14.480
you earned 2,560 points today.

00:28:14.480 --> 00:28:16.490
You're only 500
points away from being

00:28:16.490 --> 00:28:18.320
able to sit in the humane seats.

00:28:18.320 --> 00:28:21.282
So many users might
really love this.

00:28:21.282 --> 00:28:22.490
Oh my gosh, that's fantastic.

00:28:22.490 --> 00:28:24.960
Oh, I'll take that last trip.

00:28:24.960 --> 00:28:26.980
I'll get to that status level.

00:28:26.980 --> 00:28:28.909
Others users might
find, OK, wow,

00:28:28.909 --> 00:28:30.450
I'm just going to
uninstall this app,

00:28:30.450 --> 00:28:34.470
I don't need that kind
of garbage in my life.

00:28:34.470 --> 00:28:35.960
In a channels
world, in Android O,

00:28:35.960 --> 00:28:37.501
you can long-press
this notification,

00:28:37.501 --> 00:28:40.130
or use our new
short swipe gesture

00:28:40.130 --> 00:28:43.070
to get to the inside of this
notification, the Inspector,

00:28:43.070 --> 00:28:45.345
where you can see the
app that posted it.

00:28:45.345 --> 00:28:46.970
Of course you want
that accountability,

00:28:46.970 --> 00:28:49.149
we introduced that in Nougat.

00:28:49.149 --> 00:28:50.690
You also see the
name of the channel.

00:28:50.690 --> 00:28:53.120
In this case, the channel
is The Executive Program.

00:28:53.120 --> 00:28:55.647
You see that there are other
channels available to sort

00:28:55.647 --> 00:28:56.480
of give you context.

00:28:56.480 --> 00:28:58.604
And of course you see here,
it's called Categories.

00:28:58.604 --> 00:29:01.296
Our user-facing name for
this feature is Categories,

00:29:01.296 --> 00:29:03.170
but of course, you and
I know that we already

00:29:03.170 --> 00:29:05.000
had something inside
the notification

00:29:05.000 --> 00:29:06.530
API called Categories.

00:29:06.530 --> 00:29:08.300
So internally it's
called Channels,

00:29:08.300 --> 00:29:12.366
but we call it Categories
in the UI strings.

00:29:12.366 --> 00:29:14.240
So if you really-- you
got this notification,

00:29:14.240 --> 00:29:15.740
you long-press, you
see this screen.

00:29:15.740 --> 00:29:16.710
What do you do?

00:29:16.710 --> 00:29:18.890
You touch that switch
on the right hand side,

00:29:18.890 --> 00:29:20.030
and they're gone.

00:29:20.030 --> 00:29:22.550
The Executive Program
notifications only are gone.

00:29:22.550 --> 00:29:24.470
Every other notification
from that app

00:29:24.470 --> 00:29:26.120
works as it did before.

00:29:26.120 --> 00:29:29.030
OK, all right, so maybe you
didn't want to block them.

00:29:29.030 --> 00:29:31.730
That's useful information,
but it beeped,

00:29:31.730 --> 00:29:34.670
it made the phone do something
that you didn't like.

00:29:34.670 --> 00:29:36.740
So OK, maybe this is
the kind of notification

00:29:36.740 --> 00:29:39.230
that you would prefer to be
more of the By The Way sort

00:29:39.230 --> 00:29:40.495
that Selim described.

00:29:40.495 --> 00:29:41.870
So instead of
hitting the switch,

00:29:41.870 --> 00:29:43.790
you touch All Categories.

00:29:43.790 --> 00:29:46.717
All Categories takes you into
the Android Settings app.

00:29:46.717 --> 00:29:49.050
This is not setting surface
that you create in your app,

00:29:49.050 --> 00:29:52.100
this is actually in
settings.APK on the ROM.

00:29:52.100 --> 00:29:55.584
It shows you the app name, it
gives you a big master switch

00:29:55.584 --> 00:29:57.500
that you can block
notifications as you always

00:29:57.500 --> 00:29:58.796
have been able to do.

00:29:58.796 --> 00:30:01.420
It's got a switch that I'll tell
you about the end of the talk,

00:30:01.420 --> 00:30:03.010
and then it lists
all the categories.

00:30:03.010 --> 00:30:05.140
And each of these corresponds to
one of the notification channel

00:30:05.140 --> 00:30:06.764
objects that you
created and handed off

00:30:06.764 --> 00:30:09.130
to the notification
manager to partition

00:30:09.130 --> 00:30:10.510
your space of notifications.

00:30:10.510 --> 00:30:12.340
From this space,
the user can quickly

00:30:12.340 --> 00:30:14.350
block or unblock that
channel, and even

00:30:14.350 --> 00:30:17.274
dig in deeper to control
the very specific details

00:30:17.274 --> 00:30:18.940
of that behavior, if
you really want to.

00:30:18.940 --> 00:30:20.731
Because again, the
point here is that we're

00:30:20.731 --> 00:30:23.279
giving the user control over
everything the app can do.

00:30:23.279 --> 00:30:24.820
Before I move on,
I want to point out

00:30:24.820 --> 00:30:26.140
that there is a link
at the bottom there

00:30:26.140 --> 00:30:28.620
that goes straight to your
app's own notification settings.

00:30:28.620 --> 00:30:30.619
We'll talk in a little
bit about what goes here,

00:30:30.619 --> 00:30:31.866
and what goes there.

00:30:31.866 --> 00:30:33.490
But just to show you
an example, if you

00:30:33.490 --> 00:30:34.600
touch one of those
channels, you'll

00:30:34.600 --> 00:30:36.975
see a screen a little bit like
this where you can, again,

00:30:36.975 --> 00:30:38.170
block just that channel.

00:30:38.170 --> 00:30:39.586
That switch is the
same as the one

00:30:39.586 --> 00:30:41.890
you saw in the previous
slide on the row item.

00:30:41.890 --> 00:30:43.765
You can change the
importance, which

00:30:43.765 --> 00:30:47.860
is our new system that
replaces the old priority APIs,

00:30:47.860 --> 00:30:49.180
if you're familiar with those.

00:30:49.180 --> 00:30:50.971
In this case, importance
is what determines

00:30:50.971 --> 00:30:53.050
whether a notification
pops up, makes sound, is

00:30:53.050 --> 00:30:56.420
unable to make sound, ends
up in BTW, and so forth.

00:30:56.420 --> 00:30:58.120
You can actually
change the sound here.

00:30:58.120 --> 00:31:00.078
You can change the
vibration, and a whole bunch

00:31:00.078 --> 00:31:02.580
of other stuff if you're really
a superfan of notifications.

00:31:02.580 --> 00:31:05.062
But if you're not, you may
never get this far down

00:31:05.062 --> 00:31:05.770
into this screen.

00:31:05.770 --> 00:31:08.080
And again, we've got another
link to your App Settings here,

00:31:08.080 --> 00:31:09.880
and we'll put extra
stuff in the intent

00:31:09.880 --> 00:31:12.160
so you know exactly which
channel the user was trying

00:31:12.160 --> 00:31:13.840
to configure at that time.

00:31:13.840 --> 00:31:15.927
And there's actually
also a little description

00:31:15.927 --> 00:31:16.510
at the bottom.

00:31:16.510 --> 00:31:17.800
You can set a
description to explain

00:31:17.800 --> 00:31:18.800
what the channel is for.

00:31:21.600 --> 00:31:24.140
I have a little bit of code
here, just a little bit.

00:31:24.140 --> 00:31:26.480
There's much more extensive
code samples obviously

00:31:26.480 --> 00:31:28.730
on d.Android.com, but
this is effectively

00:31:28.730 --> 00:31:30.040
how this is going to work.

00:31:30.040 --> 00:31:32.630
To set up your notification
channels, you create one.

00:31:32.630 --> 00:31:35.650
The most important
thing is the channel ID,

00:31:35.650 --> 00:31:37.900
which is the first parameter
to the constructor there.

00:31:37.900 --> 00:31:39.860
That's just a string,
and it's totally

00:31:39.860 --> 00:31:41.270
whatever you want it to be.

00:31:41.270 --> 00:31:43.519
It becomes the unique
identifier for that channel when

00:31:43.519 --> 00:31:45.306
you post a notification later.

00:31:45.306 --> 00:31:47.180
Everything else about
the channel you set up,

00:31:47.180 --> 00:31:48.060
it's pretty straightforward.

00:31:48.060 --> 00:31:49.893
You give it a localized
string that the user

00:31:49.893 --> 00:31:51.560
can understand as the title.

00:31:51.560 --> 00:31:54.440
You give it the importance that
you would like for it to have,

00:31:54.440 --> 00:31:56.450
you give it the sound that
you would like for it to have,

00:31:56.450 --> 00:31:58.770
you give it the vibration that
you would like for it to have,

00:31:58.770 --> 00:31:59.300
and so on.

00:31:59.300 --> 00:32:02.150
You set up all the initial
parameters, all the behaviors

00:32:02.150 --> 00:32:03.419
of this channel.

00:32:03.419 --> 00:32:05.210
And then you tell the
notification manager,

00:32:05.210 --> 00:32:06.560
please create this.

00:32:06.560 --> 00:32:10.427
Now, if you don't want to
track, oh, did I ever--

00:32:10.427 --> 00:32:12.260
have I ever done this
on this device before?

00:32:12.260 --> 00:32:14.009
Because the notification
manager of course

00:32:14.009 --> 00:32:15.950
persists all this
information between reboots,

00:32:15.950 --> 00:32:18.199
you can do this anytime your
app or service starts up,

00:32:18.199 --> 00:32:19.069
and it's very cheap.

00:32:19.069 --> 00:32:21.110
If the notification manager
sees that you already

00:32:21.110 --> 00:32:23.840
made this channel, you can
skip-- it skips right over it.

00:32:23.840 --> 00:32:27.437
So you can do this in
any of your setup code.

00:32:27.437 --> 00:32:29.270
And then when you go
to post a notification,

00:32:29.270 --> 00:32:31.940
you just throw it into
the builder constructor.

00:32:31.940 --> 00:32:34.262
And that's it.

00:32:34.262 --> 00:32:37.190
[APPLAUSE]

00:32:39.826 --> 00:32:41.200
Not that's it for
the talk, we've

00:32:41.200 --> 00:32:42.459
got more things to talk about.

00:32:42.459 --> 00:32:44.750
Remember I said that there
was some question about what

00:32:44.750 --> 00:32:46.400
settings go where?

00:32:46.400 --> 00:32:49.040
So there's app settings, the
settings inside your app,

00:32:49.040 --> 00:32:51.600
and the settings that I've now
shown you are inside Android.

00:32:51.600 --> 00:32:53.987
Well, truth be told, there
were always two places

00:32:53.987 --> 00:32:55.070
for notification settings.

00:32:55.070 --> 00:32:57.486
There's always been a thing
that you can go to in settings

00:32:57.486 --> 00:33:00.290
to control whether vibration
works, how loud things are,

00:33:00.290 --> 00:33:01.029
and so forth.

00:33:01.029 --> 00:33:03.320
But we've actually made a
much clearer distinction in O

00:33:03.320 --> 00:33:05.230
about what belongs where.

00:33:05.230 --> 00:33:07.400
In the app, we're
now letting you--

00:33:07.400 --> 00:33:09.620
we're staying focused
on the business

00:33:09.620 --> 00:33:13.070
rules, the what, when, why
of what kind of notifications

00:33:13.070 --> 00:33:16.460
exist in your world, when they
get posted, what they mean.

00:33:16.460 --> 00:33:18.140
The system doesn't
want to know that you

00:33:18.140 --> 00:33:21.171
have a geofencing feature,
or what your social graph is.

00:33:21.171 --> 00:33:22.670
Android doesn't
care about all that.

00:33:22.670 --> 00:33:24.570
You define all of those rules.

00:33:24.570 --> 00:33:26.945
The only thing that we're
moving over to Android settings

00:33:26.945 --> 00:33:30.340
is how it behaves once it
gets on screen, or on vibrate,

00:33:30.340 --> 00:33:32.240
or on speakers.

00:33:32.240 --> 00:33:34.280
And that's the thing that
then the user can make

00:33:34.280 --> 00:33:37.790
editorial control of later.

00:33:37.790 --> 00:33:40.142
OK, there are some
questions whenever

00:33:40.142 --> 00:33:41.600
we describe this
about, OK, well, I

00:33:41.600 --> 00:33:43.280
don't know how to
organize my channels.

00:33:43.280 --> 00:33:44.900
Do I have one per--

00:33:44.900 --> 00:33:46.110
I don't know, just one?

00:33:46.110 --> 00:33:46.910
Do I have--

00:33:46.910 --> 00:33:50.120
OK, so here's a recommendation--

00:33:50.120 --> 00:33:51.509
pick something that makes sense.

00:33:51.509 --> 00:33:54.050
Pick something that is going to
make sense to your user, such

00:33:54.050 --> 00:33:56.550
that if the user says, oh, I
kind of want this set of things

00:33:56.550 --> 00:33:59.750
to behave differently,
that defines your channel.

00:33:59.750 --> 00:34:01.940
So let's say that it's--

00:34:01.940 --> 00:34:04.340
you're in some kind
of business chat app.

00:34:04.340 --> 00:34:06.320
Maybe every room
is its own channel.

00:34:06.320 --> 00:34:08.989
Your app might even call
them channels already.

00:34:08.989 --> 00:34:12.080
Or perhaps a different
topic in a news app,

00:34:12.080 --> 00:34:18.020
or a different sender, different
chat group in a messaging app.

00:34:18.020 --> 00:34:20.270
Anything that you want the
user to tweak in isolation,

00:34:20.270 --> 00:34:22.229
or anything that you need
to behave differently

00:34:22.229 --> 00:34:24.603
from your other notifications,
put it in its own channel.

00:34:24.603 --> 00:34:26.330
Because remember,
everything in a channel

00:34:26.330 --> 00:34:28.590
behaves exactly the same way.

00:34:28.590 --> 00:34:30.679
They all have the same
behavior so the user

00:34:30.679 --> 00:34:32.780
can understand and control it.

00:34:32.780 --> 00:34:35.060
We give you one additional
level of hierarchy, just

00:34:35.060 --> 00:34:37.230
for presentation, just to make
it a little easier to organize

00:34:37.230 --> 00:34:38.060
in the settings app.

00:34:38.060 --> 00:34:39.260
They're called
notification groups.

00:34:39.260 --> 00:34:40.340
I didn't show you
the code for that.

00:34:40.340 --> 00:34:42.139
It's really easy--
just give it a title,

00:34:42.139 --> 00:34:44.219
and assign it to each
channel as you create it.

00:34:44.219 --> 00:34:46.730
This allows you to segment
channels as we've done here.

00:34:46.730 --> 00:34:49.380
It's really useful for, for
example, multiple accounts.

00:34:49.380 --> 00:34:51.600
So again, this is the
Settings app inside Android.

00:34:51.600 --> 00:34:53.774
You can see I've got one
account, channel, channel,

00:34:53.774 --> 00:34:55.940
channel, another account,
channel, channel, channel.

00:34:55.940 --> 00:34:57.890
So you can control all
of that independently.

00:34:57.890 --> 00:35:00.069
And again, the user may
never, ever see this screen.

00:35:00.069 --> 00:35:02.610
They may just see notifications
doing exactly what they want.

00:35:02.610 --> 00:35:04.970
But if you long-press it and
you say, oh, this is calls.

00:35:04.970 --> 00:35:06.803
You go in here, oh,
it's called specifically

00:35:06.803 --> 00:35:08.169
from my personal account.

00:35:08.169 --> 00:35:09.460
Now I can make changes to that.

00:35:12.970 --> 00:35:15.730
Many of you are already sitting
there thinking, well, OK, hmm,

00:35:15.730 --> 00:35:16.927
I see some ways around this.

00:35:16.927 --> 00:35:19.010
We've been thinking about
this for a little while.

00:35:19.010 --> 00:35:20.410
Let's walk through it.

00:35:20.410 --> 00:35:23.080
First thing is the
apps have a million

00:35:23.080 --> 00:35:25.900
ways to be cruel to the user.

00:35:25.900 --> 00:35:29.060
Stopping them is impossible.

00:35:29.060 --> 00:35:32.050
What we want to do is, deal
with obvious things, right?

00:35:32.050 --> 00:35:34.840
Because an obvious abusive
app results in uninstalls,

00:35:34.840 --> 00:35:37.120
or it results in bad
ratings, bad reviews.

00:35:37.120 --> 00:35:38.420
You don't want that, OK?

00:35:38.420 --> 00:35:40.420
So now we have to worry
about the sneaky things.

00:35:40.420 --> 00:35:42.160
And for sneaky
things, again, we want

00:35:42.160 --> 00:35:44.320
to either prevent
them if we can,

00:35:44.320 --> 00:35:46.210
or move them into the
obvious category, which

00:35:46.210 --> 00:35:48.239
we know how to deal with.

00:35:48.239 --> 00:35:50.530
So here's an example of
something that an app could do.

00:35:50.530 --> 00:35:53.087
Oh, well, if the user
changes the channel settings,

00:35:53.087 --> 00:35:54.670
like oh, I want to
block that channel,

00:35:54.670 --> 00:35:56.290
or I want to put it in BTW--

00:35:56.290 --> 00:35:59.710
well, what if I
just change it back?

00:35:59.710 --> 00:36:02.440
And our mitigation for that
is, the API doesn't let you.

00:36:02.440 --> 00:36:04.930
Once the user has voted,
the channel is locked.

00:36:04.930 --> 00:36:07.360
You can't make changes to
it after you've created it.

00:36:07.360 --> 00:36:11.660
The user has the final say in
what that channel does, period.

00:36:11.660 --> 00:36:15.061
OK, all right, so OK, if I can't
change the channel settings,

00:36:15.061 --> 00:36:16.810
I'm just going to
delete that channel that

00:36:16.810 --> 00:36:19.300
has properties I don't
like, and create a new one.

00:36:19.300 --> 00:36:21.460
OK, fine, thanks for
gaslighting the user.

00:36:21.460 --> 00:36:23.050
So what we do in
the Settings app is,

00:36:23.050 --> 00:36:26.302
we actually show you how many
channels the app has deleted.

00:36:26.302 --> 00:36:28.760
We don't show you exactly what
they are for privacy reasons

00:36:28.760 --> 00:36:30.712
so that an app can
actually clear its state

00:36:30.712 --> 00:36:32.170
and not leak
information about you.

00:36:32.170 --> 00:36:33.961
But you can go into
settings and see, yeah,

00:36:33.961 --> 00:36:36.180
I feel like I've block
that five times before.

00:36:36.180 --> 00:36:38.470
Oh yeah, sure enough,
five deleted channels.

00:36:38.470 --> 00:36:41.590
Mm-hm, OK, now the app's
malfeasance is obvious.

00:36:44.220 --> 00:36:46.390
OK, well, all right,
I feel like I just

00:36:46.390 --> 00:36:47.800
want to opt out of all of this.

00:36:47.800 --> 00:36:51.160
Can I please just make one
channel for everything?

00:36:51.160 --> 00:36:52.630
You can do that.

00:36:52.630 --> 00:36:54.730
And if your app only has
one thing that it does,

00:36:54.730 --> 00:36:58.492
like it just chimes on the
hour, that probably makes sense.

00:36:58.492 --> 00:36:59.950
But if what you're
doing is saying,

00:36:59.950 --> 00:37:02.650
I want my critical
notifications to be

00:37:02.650 --> 00:37:05.800
tied in fate to my
recommendations,

00:37:05.800 --> 00:37:08.800
or my speculative
notifications, then the user's

00:37:08.800 --> 00:37:10.300
going to have a bad
time, and you're

00:37:10.300 --> 00:37:12.841
going to have a bad time because
all those notifications will

00:37:12.841 --> 00:37:15.110
behave the same way, and
they'll get blocked together.

00:37:18.610 --> 00:37:21.650
OK, wrapping up on channels.

00:37:21.650 --> 00:37:23.240
You set up your categories.

00:37:23.240 --> 00:37:25.790
After that, the user's in
control of how they behave.

00:37:25.790 --> 00:37:27.570
The user happiness
should be your goal.

00:37:27.570 --> 00:37:28.940
You work to make the user happy.

00:37:28.940 --> 00:37:31.160
The user will get the
notifications that they want,

00:37:31.160 --> 00:37:32.780
that you want them to see.

00:37:32.780 --> 00:37:35.150
Everybody gets their
dopamine and serotonin

00:37:35.150 --> 00:37:37.790
and norepinephrine,
and again I don't--

00:37:37.790 --> 00:37:39.052
I think that's-- no, anyway.

00:37:39.052 --> 00:37:41.510
One more thing that I want to
mention before we go-- and we

00:37:41.510 --> 00:37:43.370
only have another
minute left, channels

00:37:43.370 --> 00:37:45.990
are mandatory once you
target O. Specifically,

00:37:45.990 --> 00:37:47.780
once you target API 26.

00:37:47.780 --> 00:37:49.820
Before API 26, you can
start using these APIs

00:37:49.820 --> 00:37:51.486
and start moving your
notifications over

00:37:51.486 --> 00:37:52.640
to channels piecemeal.

00:37:52.640 --> 00:37:55.130
Once you start targeting
O, any notification

00:37:55.130 --> 00:37:57.240
you post that doesn't
have a channel

00:37:57.240 --> 00:37:58.370
gets dropped on the floor.

00:37:58.370 --> 00:38:00.203
I shouldn't have done
that with the clicker.

00:38:00.203 --> 00:38:03.210
A notification gets dropped,
it never shows up for the user.

00:38:03.210 --> 00:38:05.810
So this is definitely
something that you

00:38:05.810 --> 00:38:08.390
have a limited amount of
time to move everything over.

00:38:08.390 --> 00:38:09.954
Take a look at
your notifications,

00:38:09.954 --> 00:38:11.120
organize them into channels.

00:38:11.120 --> 00:38:12.950
You'll be amazed at how many
teams are like, you know,

00:38:12.950 --> 00:38:15.680
I didn't even really realize
how many notifications we post.

00:38:15.680 --> 00:38:18.590
What a great time to take stock,
and clean house, and get things

00:38:18.590 --> 00:38:22.180
organized so that you can
go from this situation

00:38:22.180 --> 00:38:24.680
where all the notifications are
competing for your attention

00:38:24.680 --> 00:38:26.750
and draining your
will to live, and go

00:38:26.750 --> 00:38:28.195
to this situation where--

00:38:28.195 --> 00:38:30.320
there's nothing on this
slide, go to this situation

00:38:30.320 --> 00:38:31.992
where the user sees
the ones that they

00:38:31.992 --> 00:38:33.950
want to see in the order
they want to see them,

00:38:33.950 --> 00:38:38.590
and is very happy and
blinky, and so forth.

00:38:38.590 --> 00:38:40.090
Oh, one last thing--

00:38:40.090 --> 00:38:41.380
and we've got almost no time.

00:38:41.380 --> 00:38:43.644
We did introduce
badges on app icons.

00:38:43.644 --> 00:38:45.310
That sort of slipped
out in the keynote,

00:38:45.310 --> 00:38:46.630
kind of a late-breaking thing.

00:38:46.630 --> 00:38:48.430
But we want to do
the Android thing

00:38:48.430 --> 00:38:51.649
and make them low anxiety, give
the user control over them,

00:38:51.649 --> 00:38:53.440
make them look nice,
and fundamentally make

00:38:53.440 --> 00:38:55.630
them oriented around
our notification system.

00:38:55.630 --> 00:38:57.760
So what you'll
see in the beta is

00:38:57.760 --> 00:38:59.620
what we call notification dots.

00:38:59.620 --> 00:39:03.334
The dot just means there are
notifications for this app.

00:39:03.334 --> 00:39:05.500
You get to choose, as an
app, which of your channels

00:39:05.500 --> 00:39:06.036
get dots.

00:39:06.036 --> 00:39:07.660
So for example, a
music player wouldn't

00:39:07.660 --> 00:39:10.120
have a dot for its
playback controls,

00:39:10.120 --> 00:39:12.670
but it would have a dot
for its recommendations.

00:39:12.670 --> 00:39:15.640
And users can turn those on and
off per channel, or globally

00:39:15.640 --> 00:39:16.990
across the system as they will.

00:39:16.990 --> 00:39:18.685
If you dismiss a notification,
the dot disappears,

00:39:18.685 --> 00:39:20.150
so the user's in total control.

00:39:22.455 --> 00:39:27.650
[MUSIC PLAYING]

