WEBVTT
Kind: captions
Language: en

00:00:00.400 --> 00:00:02.690
JOSH BARRY: Hey everybody.

00:00:02.690 --> 00:00:07.900
Welcome to this week's Google+
Platform Office Hours.

00:00:07.900 --> 00:00:08.700
I'm Josh Barry.

00:00:08.700 --> 00:00:09.425
WOLF DOBSON: I'm Wolf Dobson.

00:00:09.425 --> 00:00:10.380
How are you?

00:00:10.380 --> 00:00:12.060
JOSH BARRY: Hey guys.

00:00:12.060 --> 00:00:13.880
This week we're a little bit
short staffed, so it's just

00:00:13.880 --> 00:00:18.360
going to be us folks talking
JavaScript in APIs.

00:00:18.360 --> 00:00:20.830
And no [? Curtis Spence ?]

00:00:20.830 --> 00:00:21.190
this week.

00:00:21.190 --> 00:00:25.650
But if you have questions,
please feel free to ask on the

00:00:25.650 --> 00:00:26.560
Google+ post --

00:00:26.560 --> 00:00:27.700
WOLF DOBSON: Watching
it right now.

00:00:27.700 --> 00:00:31.490
JOSH BARRY: On the Google+
developer's plus page.

00:00:31.490 --> 00:00:34.340
So, JavaScript.

00:00:34.340 --> 00:00:37.130
Just using the Google+ APIs,
and actually a lot of the

00:00:37.130 --> 00:00:41.400
other Google APIs, is a
lot easier these days.

00:00:41.400 --> 00:00:44.620
Especially with the newer APIs
we've been releasing, we make

00:00:44.620 --> 00:00:48.980
it easy to call it from, let's
say, something like native

00:00:48.980 --> 00:00:54.020
JavaScript, or from one of
our client libraries.

00:00:54.020 --> 00:00:56.360
Actually, I'm going to do some
coding, show you some code,

00:00:56.360 --> 00:00:57.760
and walk through some
documentation.

00:00:57.760 --> 00:01:00.560
So we're going to switch over
to this laptop with a screen

00:01:00.560 --> 00:01:01.280
share enabled.

00:01:01.280 --> 00:01:02.170
WOLF DOBSON: And I'll
be right back.

00:01:02.170 --> 00:01:03.390
Hold on.

00:01:03.390 --> 00:01:04.150
All right.

00:01:04.150 --> 00:01:04.779
And we're back.

00:01:04.779 --> 00:01:09.260
JOSH BARRY: So now, the first
place to look about the

00:01:09.260 --> 00:01:12.480
Google+ APIs is obviously
our developer site

00:01:12.480 --> 00:01:16.490
developers.google.com/+/api.

00:01:16.490 --> 00:01:21.340
There's a nice overview of
things like API quota,

00:01:21.340 --> 00:01:27.840
authorization, API calls, but in
regards to JavaScript, for

00:01:27.840 --> 00:01:31.490
anybody who's tried to call a
rest API from the browser, you

00:01:31.490 --> 00:01:34.730
run into our friend called
Same Origin Policy which

00:01:34.730 --> 00:01:37.420
basically prevents you from
making calls in an insecure

00:01:37.420 --> 00:01:39.530
way that may compromise
the user.

00:01:39.530 --> 00:01:42.200
That's a good thing in some
contexts, but it makes it hard

00:01:42.200 --> 00:01:43.630
to use APIs.

00:01:43.630 --> 00:01:48.040
There are newer techniques that
are part of HTML5 spec,

00:01:48.040 --> 00:01:51.330
but there's actually ways around
in the older browsers

00:01:51.330 --> 00:01:54.580
to allow you to call
RESTful APIs.

00:01:54.580 --> 00:01:56.870
And we call that JSON peer,
or JSON with padding.

00:01:56.870 --> 00:02:01.000
And the Google+ APIs
support JSONP.

00:02:01.000 --> 00:02:04.760
And all you have to do is, in
the API you're going to call,

00:02:04.760 --> 00:02:08.370
include a Callback parameter,
and the name of a function you

00:02:08.370 --> 00:02:12.640
need to find within that page,
so when that [UNINTELLIGIBLE]

00:02:12.640 --> 00:02:17.875
gets called, it actually fires
the function you specified in

00:02:17.875 --> 00:02:22.500
the Callback with
the response.

00:02:22.500 --> 00:02:24.570
And that's true with Google+
APIs and some

00:02:24.570 --> 00:02:26.540
of our other APIs.

00:02:26.540 --> 00:02:29.930
So I'm going to show you an
example of doing that.

00:02:29.930 --> 00:02:32.270
Of course, with all new
projects, were going to start

00:02:32.270 --> 00:02:36.270
a new project with our API
explorer So let me create a

00:02:36.270 --> 00:02:40.420
new project right now, through
our console [? router. ?]

00:02:40.420 --> 00:02:45.709
We're going to call this
Office Hours JS Demo.

00:02:45.709 --> 00:02:47.465
WOLF DOBSON: That'a
a great title.

00:02:47.465 --> 00:02:48.715
JOSH BARRY: I'll be able
to find it later.

00:02:51.010 --> 00:02:54.942
As you see, we have
a lot of projects.

00:02:54.942 --> 00:02:57.151
WOLF DOBSON: Comes with
the territory.

00:02:57.151 --> 00:03:01.160
JOSH BARRY: So, to use a Google+
rest API I'm going to

00:03:01.160 --> 00:03:04.380
enable the Google+
API service.

00:03:04.380 --> 00:03:06.860
Got to agree to the standard
terms and conditions.

00:03:09.620 --> 00:03:10.600
And there we go.

00:03:10.600 --> 00:03:12.530
That service is enabled
for this project.

00:03:16.350 --> 00:03:25.630
Now, I have a sample here,
and there's us.

00:03:25.630 --> 00:03:28.470
So, what's going on here?

00:03:28.470 --> 00:03:31.620
I'm actually going to use a bit
of jQuery to make this a

00:03:31.620 --> 00:03:34.720
little faster, but this would
work in standard JavaScript.

00:03:34.720 --> 00:03:36.880
It's just an Ajax call
with that parameter,

00:03:36.880 --> 00:03:38.830
the Callback parameter.

00:03:38.830 --> 00:03:41.400
And jQuery just makes it
easy to type it up.

00:03:41.400 --> 00:03:46.080
So, right here we have
the jQuery Get JSON.

00:03:46.080 --> 00:03:49.970
JSON is shorthand for Ajax with
JSON response, which all

00:03:49.970 --> 00:03:53.050
of our APIs respond in JSON.

00:03:53.050 --> 00:03:56.730
And then we pass in the end
point we want to call.

00:03:56.730 --> 00:04:01.700
I'm going to do B1
People Search.

00:04:01.700 --> 00:04:04.420
The query that I'm actually
going to pass is Barry, which

00:04:04.420 --> 00:04:05.230
is my last name.

00:04:05.230 --> 00:04:05.640
WOLF DOBSON: Are you
ego surfing?

00:04:05.640 --> 00:04:07.610
Is that what's going on?

00:04:07.610 --> 00:04:09.770
JOSH BARRY: Well, I know there's
going to be a reply

00:04:09.770 --> 00:04:10.270
for that one.

00:04:10.270 --> 00:04:11.500
WOLF DOBSON: That is true.

00:04:11.500 --> 00:04:12.960
JOSH BARRY: And then there's
a key parameter.

00:04:12.960 --> 00:04:16.519
So key parameter's the first
required field for all API

00:04:16.519 --> 00:04:18.079
requests, and that's
an API key.

00:04:18.079 --> 00:04:22.520
So if we go back to the console,
the key comes from

00:04:22.520 --> 00:04:24.300
the API console.

00:04:24.300 --> 00:04:29.190
And within the API console you
go to the API Access section,

00:04:29.190 --> 00:04:31.930
and then we have this
Unique key.

00:04:31.930 --> 00:04:32.920
Don't copy this down.

00:04:32.920 --> 00:04:35.010
I'm going to delete it later.

00:04:35.010 --> 00:04:37.810
But use that for each one of
your projects so we know how

00:04:37.810 --> 00:04:39.350
to do bucketing.

00:04:39.350 --> 00:04:41.690
And the calls will fail.

00:04:41.690 --> 00:04:43.460
So I'm actually putting
my key.

00:04:48.910 --> 00:04:50.470
Make sure I save that.

00:04:50.470 --> 00:04:52.660
And then that Callback
parameter.

00:04:52.660 --> 00:04:54.380
That's the third thing.

00:04:54.380 --> 00:04:55.400
And this is just a string.

00:04:55.400 --> 00:04:56.360
I'm concatenating it.

00:04:56.360 --> 00:04:59.300
And then I'm passing in
Callback function.

00:04:59.300 --> 00:05:01.990
I defined that function
up here.

00:05:01.990 --> 00:05:03.500
And that function is
pretty simple.

00:05:03.500 --> 00:05:08.260
Just take the response,
and spit out for

00:05:08.260 --> 00:05:09.960
the different fields.

00:05:09.960 --> 00:05:12.970
So let's try this.

00:05:12.970 --> 00:05:14.220
I have it running already.

00:05:17.270 --> 00:05:19.270
And there you go.

00:05:19.270 --> 00:05:21.600
This is the first 10 results.

00:05:21.600 --> 00:05:25.740
It's the standard page size from
this people search query.

00:05:25.740 --> 00:05:29.100
That's using JavaScript
straight up.

00:05:29.100 --> 00:05:30.579
WOLF DOBSON: Why don't you go
ahead and make that bigger so

00:05:30.579 --> 00:05:32.620
you can read it?

00:05:32.620 --> 00:05:33.512
That's better.

00:05:33.512 --> 00:05:35.630
JOSH BARRY: And there's
me at the bottom.

00:05:35.630 --> 00:05:35.910
Let's see.

00:05:35.910 --> 00:05:37.250
What can I show you here?

00:05:42.790 --> 00:05:45.950
The first thing you'll notice
is that this is not an

00:05:45.950 --> 00:05:47.790
authenticated call.

00:05:47.790 --> 00:05:52.450
So, for any resources that are
private, we use OAuth 2 for

00:05:52.450 --> 00:05:54.910
all of our authentication.

00:05:54.910 --> 00:05:57.200
And that gets a little bit more
complicated and jQuery

00:05:57.200 --> 00:05:58.520
doesn't help a whole
lot there.

00:05:58.520 --> 00:06:00.970
And you would have to construct
the whole key change

00:06:00.970 --> 00:06:03.380
and the secrets.

00:06:03.380 --> 00:06:06.540
But we do have a client library
that's in alpha, which

00:06:06.540 --> 00:06:07.880
is the next thing I
wanted to show.

00:06:10.742 --> 00:06:13.980
WOLF DOBSON: In this case you
were able to make the

00:06:13.980 --> 00:06:17.420
unauthenticated call, but you
included the API key.

00:06:17.420 --> 00:06:17.990
JOSH BARRY: Yep.

00:06:17.990 --> 00:06:21.230
WOLF DOBSON: Which then
means you aren't

00:06:21.230 --> 00:06:22.220
going to get bounced.

00:06:22.220 --> 00:06:26.570
Otherwise you get a
400, or is it --

00:06:26.570 --> 00:06:29.040
JOSH BARRY: Let's just
make up a key.

00:06:29.040 --> 00:06:30.290
And we're going to
call this --

00:06:32.780 --> 00:06:35.910
WOLF DOBSON: Yeah, it's some
really inadequate key.

00:06:35.910 --> 00:06:38.060
JOSH BARRY: So if you don't
include a key, or if you

00:06:38.060 --> 00:06:40.800
include a silly key like
this one, you get an

00:06:40.800 --> 00:06:43.710
[UNINTELLIGIBLE] exception and
everything starts failing

00:06:43.710 --> 00:06:45.812
because you don't have access.

00:06:45.812 --> 00:06:48.400
WOLF DOBSON: You also, if you
don't include a key at all,

00:06:48.400 --> 00:06:49.515
you're actually going
to end up getting --

00:06:49.515 --> 00:06:54.560
You might actually get through
once, but you'll rapidly run

00:06:54.560 --> 00:06:56.270
out of courtesy quota.

00:06:56.270 --> 00:07:01.480
And so that's why we want
you to create a project

00:07:01.480 --> 00:07:04.810
and use an API key.

00:07:04.810 --> 00:07:09.950
JOSH BARRY: So, we have client
libraries in different levels

00:07:09.950 --> 00:07:13.570
of completeness, or
stages of release.

00:07:13.570 --> 00:07:17.750
For example, we have our
Java one is pretty well

00:07:17.750 --> 00:07:19.180
supported in beta.

00:07:19.180 --> 00:07:19.830
We have Python.

00:07:19.830 --> 00:07:21.670
I think you worked on the
Python didn't you?

00:07:21.670 --> 00:07:22.600
WOLF DOBSON: A little bit.

00:07:22.600 --> 00:07:23.690
JOSH BARRY: And that's
in beta.

00:07:23.690 --> 00:07:25.770
And then we also have our
friend JavaScript.

00:07:25.770 --> 00:07:29.960
And the JavaScript client
library, what that does is,

00:07:29.960 --> 00:07:33.020
allows you to do these calls,
but it actually invokes our

00:07:33.020 --> 00:07:37.290
Discovery Service So it works
with the other APIs that are

00:07:37.290 --> 00:07:38.900
Discovery Service enabled.

00:07:38.900 --> 00:07:42.370
For those who are not familiar
with Discovery Service, it is

00:07:42.370 --> 00:07:46.370
a way for us to publish a JSON
schema, a JSON definition

00:07:46.370 --> 00:07:51.340
basically, of all the APIs that
allow a clever client

00:07:51.340 --> 00:07:55.180
library to suck them in and
create an easy use API

00:07:55.180 --> 00:07:57.130
interface in that
native language.

00:07:57.130 --> 00:07:59.970
So for Python it creates
Python friendly APIs.

00:07:59.970 --> 00:08:02.970
For JavaScript it creates
JavaScript friendly APIs.

00:08:02.970 --> 00:08:07.090
And Ruby, and so on.

00:08:07.090 --> 00:08:09.200
If you're interested, definitely
check out the

00:08:09.200 --> 00:08:10.800
Discovery Service and
how that works.

00:08:10.800 --> 00:08:12.730
It'll help you understand
the API better.

00:08:12.730 --> 00:08:14.950
But to be honest, if you just
want to get up and running,

00:08:14.950 --> 00:08:16.690
get one of the clients.

00:08:16.690 --> 00:08:20.260
So with the JavaScript client,
it's JavaScript, so I can run

00:08:20.260 --> 00:08:20.710
it from the browser.

00:08:20.710 --> 00:08:22.800
I actually don't have to
download anything.

00:08:22.800 --> 00:08:25.540
There's just a simple Include
I add to my page.

00:08:25.540 --> 00:08:28.590
And then I instantiate
that API.

00:08:28.590 --> 00:08:31.260
Once I instantiate the API
I pass in the service I'm

00:08:31.260 --> 00:08:35.020
interested in, and it starts
dynamically building the set

00:08:35.020 --> 00:08:38.750
of API interfaces that I need.

00:08:38.750 --> 00:08:40.929
We're going to use Google+
obviously.

00:08:40.929 --> 00:08:44.560
So here's the Start application
that's using the

00:08:44.560 --> 00:08:50.080
same unauthenticated API,
but with the client.

00:08:50.080 --> 00:08:51.920
So, how does that look like?

00:08:51.920 --> 00:08:56.970
I have a single script Include
here at the bottom.

00:08:56.970 --> 00:09:00.100
There's a convenient onload
ready handler that you attach

00:09:00.100 --> 00:09:03.820
as a URL parameter
to the Include.

00:09:03.820 --> 00:09:06.630
WOLF DOBSON: That'll be the last
thing that gets called

00:09:06.630 --> 00:09:07.820
after the page loads.

00:09:07.820 --> 00:09:10.810
JOSH BARRY: Yeah, so DOM on
ready, as well as the API has

00:09:10.810 --> 00:09:12.185
been instantiated.

00:09:12.185 --> 00:09:13.990
It fires this guy.

00:09:13.990 --> 00:09:16.780
And you'll see there's just two
simple parameters to get

00:09:16.780 --> 00:09:17.610
this going.

00:09:17.610 --> 00:09:19.470
I pass in an API key.

00:09:19.470 --> 00:09:20.906
Like I did before.

00:09:20.906 --> 00:09:22.715
WOLF DOBSON: Probably something
not your key.

00:09:22.715 --> 00:09:23.450
JOSH BARRY: Not your key.

00:09:23.450 --> 00:09:25.000
I'll use the same
one as before.

00:09:25.000 --> 00:09:28.550
And then the API you
want to load.

00:09:28.550 --> 00:09:30.380
This one is called Plus,
conveniently.

00:09:30.380 --> 00:09:31.680
And then the version.

00:09:31.680 --> 00:09:34.800
And then a Callback
one that's ready.

00:09:34.800 --> 00:09:37.830
Let me just go back to
our API explorer.

00:09:37.830 --> 00:09:40.750
If you guys haven't seen our API
explorer, it's super handy

00:09:40.750 --> 00:09:43.120
for working with the
Google API stack.

00:09:46.680 --> 00:09:50.600
But that means any API that's
defined within the explorer is

00:09:50.600 --> 00:09:52.970
available to any one
of our clients.

00:09:52.970 --> 00:09:57.530
And that includes Analytics,
or Blogger, or Freebase.

00:09:57.530 --> 00:10:01.260
So you can use that in Python,
in JavaScript, in Ruby, with a

00:10:01.260 --> 00:10:02.850
convenient wrapper.

00:10:02.850 --> 00:10:08.126
So we go back, grab
that API key.

00:10:08.126 --> 00:10:10.600
WOLF DOBSON: And that's
highlighted in blue there.

00:10:13.288 --> 00:10:16.900
JOSH BARRY: I'm going
to paste that in.

00:10:16.900 --> 00:10:19.535
Because this is supposed to
feel native for JavaScript

00:10:19.535 --> 00:10:21.310
developers, it's
Callback based.

00:10:21.310 --> 00:10:23.950
So, you'll see that we have our
onload handler that passes

00:10:23.950 --> 00:10:27.005
in a Callback that calls a Load
function, or On Ready

00:10:27.005 --> 00:10:30.965
function, and then the On Ready
function has its own

00:10:30.965 --> 00:10:33.980
Load function that calls a Make
request That Make request

00:10:33.980 --> 00:10:39.580
builds the request and fires
it off and then passes on a

00:10:39.580 --> 00:10:43.220
Callback for the Execute
function.

00:10:43.220 --> 00:10:47.820
Right here is the Onload
Here's the native Make

00:10:47.820 --> 00:10:50.780
request, and then there's a
Callback function for the

00:10:50.780 --> 00:10:52.170
Execute with a response.

00:10:52.170 --> 00:10:53.580
We did Inline function here.

00:10:53.580 --> 00:10:56.400
You could have just passed it
to another function to go

00:10:56.400 --> 00:10:59.010
ahead and handle
it separately.

00:10:59.010 --> 00:11:00.310
What are the parameters?

00:11:00.310 --> 00:11:02.350
For the Make request?

00:11:02.350 --> 00:11:06.600
You build the requests, you
invoke the Request function.

00:11:06.600 --> 00:11:10.060
Again, this is
gappy.client.plus.people.

00:11:10.060 --> 00:11:11.410
And that's dynamically
generated from

00:11:11.410 --> 00:11:13.250
the Discovery Service.

00:11:13.250 --> 00:11:16.420
And then the particular
parameters for this API is

00:11:16.420 --> 00:11:20.430
query, which we saw before, and
then you just attach an

00:11:20.430 --> 00:11:22.790
Execurte on top of
that object.

00:11:22.790 --> 00:11:24.580
And then we're good to go.

00:11:24.580 --> 00:11:26.025
So, going back to the browser.

00:11:28.820 --> 00:11:29.140
There you go.

00:11:29.140 --> 00:11:35.660
We have the same response, and
it spit out a console.log I

00:11:35.660 --> 00:11:39.488
think my console.log
got screwed up.

00:11:39.488 --> 00:11:40.738
One second.

00:11:45.460 --> 00:11:52.090
So you guys see this happening
I'm actually modifying the CSS

00:11:52.090 --> 00:11:56.320
of the Dev Tool so we can
properly read what's happening

00:11:56.320 --> 00:11:57.000
in the console.

00:11:57.000 --> 00:12:00.730
I think It's not being
honored right now.

00:12:04.496 --> 00:12:06.820
WOLF DOBSON: You can just zoom
in using the browser

00:12:06.820 --> 00:12:07.320
[UNINTELLIGIBLE].

00:12:07.320 --> 00:12:07.820
Did you?

00:12:07.820 --> 00:12:10.070
JOSH BARRY: No.

00:12:10.070 --> 00:12:11.090
Oh.

00:12:11.090 --> 00:12:12.956
How do you do?

00:12:12.956 --> 00:12:14.035
WOLF DOBSON: That's
why I'm here.

00:12:14.035 --> 00:12:15.510
JOSH BARRY: Thanks, Wolf.

00:12:15.510 --> 00:12:18.740
I also outputted an object
for the response.

00:12:18.740 --> 00:12:21.370
That line is found
right here --

00:12:21.370 --> 00:12:22.620
console.log response.

00:12:24.790 --> 00:12:26.570
And this is the actual
API response.

00:12:26.570 --> 00:12:28.590
It's the same response
that we got in the

00:12:28.590 --> 00:12:29.510
native JavaScript call.

00:12:29.510 --> 00:12:31.960
It's the same response you'll
get if you do the same query

00:12:31.960 --> 00:12:33.700
within the API explorer.

00:12:33.700 --> 00:12:36.280
WOLF DOBSON: And also using any
of the client libraries --

00:12:36.280 --> 00:12:36.950
Python, Ruby.

00:12:36.950 --> 00:12:39.800
And in fact Python and Ruby are
structured very similarly

00:12:39.800 --> 00:12:43.410
to this, where you request a
client, once the client is

00:12:43.410 --> 00:12:49.070
loaded then you make calls on
it, and those calls executed.

00:12:49.070 --> 00:12:51.810
Actually, in the case of the
Ruby client, they're executed

00:12:51.810 --> 00:12:52.720
synchronously.

00:12:52.720 --> 00:12:54.590
So execute and they come back.

00:12:54.590 --> 00:12:56.630
JOSH BARRY: But the neat thing
about this is, most of the

00:12:56.630 --> 00:12:58.890
client library handles the
creating functions, and the

00:12:58.890 --> 00:13:03.110
objects, and once you go from
there you can easily output

00:13:03.110 --> 00:13:05.350
the different response
objects.

00:13:05.350 --> 00:13:10.550
So we had the item we spit out,
then we had this array of

00:13:10.550 --> 00:13:12.240
objects that we were output.

00:13:12.240 --> 00:13:14.284
I just outputted this by name,
and we could do what

00:13:14.284 --> 00:13:16.580
we want with that.

00:13:16.580 --> 00:13:18.620
So now, very powerful.

00:13:18.620 --> 00:13:21.780
It simplifies integrating with
many other Google APIs, and

00:13:21.780 --> 00:13:23.958
also makes the Google+
API integration

00:13:23.958 --> 00:13:26.840
a little bit easier.

00:13:26.840 --> 00:13:30.350
It's powerful, and now with
other APIs there's

00:13:30.350 --> 00:13:31.340
authenticated research.

00:13:31.340 --> 00:13:33.970
Even Google+ has some
OAuth scopes.

00:13:33.970 --> 00:13:36.210
So, how do we do that?

00:13:36.210 --> 00:13:39.440
The client library, all client
libraries handle that, and JS

00:13:39.440 --> 00:13:40.740
client is no different.

00:13:40.740 --> 00:13:42.580
It's a little bit more code --

00:13:42.580 --> 00:13:46.870
I think I should remove of these
comments -- but it's not

00:13:46.870 --> 00:13:48.930
too much different.

00:13:48.930 --> 00:13:51.330
So, we have the same JS include

00:13:51.330 --> 00:13:51.960
with an Onload Handler.

00:13:51.960 --> 00:13:53.950
And this one is Handle
Client Load.

00:13:57.022 --> 00:14:00.160
What we do here is, instead of
just having an API key, we

00:14:00.160 --> 00:14:05.280
have a client ID as well, and
the scopes for OAuth.

00:14:05.280 --> 00:14:09.420
Or the way we do our
OAuth is version 23

00:14:09.420 --> 00:14:11.240
of the OAuth 2 spec.

00:14:11.240 --> 00:14:13.080
But you define a bunch of
scopes, you pass in which we

00:14:13.080 --> 00:14:16.582
request, and then the user can
go ahead and authorize that in

00:14:16.582 --> 00:14:19.010
the OAuth dialog.

00:14:19.010 --> 00:14:23.900
So let me pass in that API key,
but when you're using

00:14:23.900 --> 00:14:26.210
OAuth with any one of our APIs,
you have to make sure

00:14:26.210 --> 00:14:29.050
you create a client ID.

00:14:29.050 --> 00:14:32.674
So you go back to the API access
section, create an

00:14:32.674 --> 00:14:34.090
OAuth 2 client ID.

00:14:34.090 --> 00:14:40.810
We're going to just call this
OAuth Office Hours.

00:14:40.810 --> 00:14:42.520
You can just put a display
name and logo.

00:14:42.520 --> 00:14:45.633
This is what gets showed up in
the OAuth dialogue and it's

00:14:45.633 --> 00:14:47.930
important for later, but for
this purpose we don't really

00:14:47.930 --> 00:14:50.280
care about it.

00:14:50.280 --> 00:14:52.000
You set a host name for this.

00:14:52.000 --> 00:14:54.550
I'm actual going to use Local
Host, because we're running on

00:14:54.550 --> 00:14:57.260
Local Host, but you would set
the domain that you're

00:14:57.260 --> 00:14:59.280
actually calling the API from.

00:14:59.280 --> 00:15:03.930
And you create a client ID.

00:15:03.930 --> 00:15:05.470
You saw there's two different
types of client IDs.

00:15:05.470 --> 00:15:08.010
If you're doing a desktop
application or some of our new

00:15:08.010 --> 00:15:09.310
implementations as well.

00:15:09.310 --> 00:15:10.940
And you can create multiple
client IDs

00:15:10.940 --> 00:15:11.720
for the same project.

00:15:11.720 --> 00:15:14.800
So if you have a JavaScript
client, as well as, say an App

00:15:14.800 --> 00:15:17.320
Engine client, they can use
separate IDs if you want to

00:15:17.320 --> 00:15:19.180
bucket it that way.

00:15:19.180 --> 00:15:21.280
If you choose to sign
you application.

00:15:21.280 --> 00:15:22.860
WOLF DOBSON: You probably do
want to bucket it that way.

00:15:27.510 --> 00:15:31.190
You can also enter more than
one JavaScript origin.

00:15:31.190 --> 00:15:36.410
So if you want to have a test
version and a version that is

00:15:36.410 --> 00:15:38.900
running on your server, you can
actually enter them both

00:15:38.900 --> 00:15:41.610
in that JavaScript
Origins box.

00:15:41.610 --> 00:15:43.570
Which can be nice.

00:15:43.570 --> 00:15:46.880
As he's showing there, you
can just enter more

00:15:46.880 --> 00:15:48.790
than one in a line.

00:15:48.790 --> 00:15:51.010
That will save you the trouble
of creating, like, three dozen

00:15:51.010 --> 00:15:54.700
client IDs for your three
developers, or your 30

00:15:54.700 --> 00:15:56.905
developers, I guess.

00:15:56.905 --> 00:16:01.080
JOSH BARRY: Make sure I paste
everything right, without the

00:16:01.080 --> 00:16:03.590
copy paste error, which
we don't have an error

00:16:03.590 --> 00:16:06.088
response for that.

00:16:06.088 --> 00:16:08.410
WOLF DOBSON: 418.

00:16:08.410 --> 00:16:11.090
JOSH BARRY: [? IDZ 10? ?]

00:16:11.090 --> 00:16:14.550
WOLF DOBSON: 418 is
not a teapot.

00:16:14.550 --> 00:16:16.265
JOSH BARRY: Are you
a teapot, Wolf?

00:16:16.265 --> 00:16:18.622
WOLF DOBSON: Only if
I get a 418 back.

00:16:18.622 --> 00:16:19.510
JOSH BARRY: Cool.

00:16:19.510 --> 00:16:21.030
So, I added a client ID.

00:16:21.030 --> 00:16:21.910
I added API key.

00:16:21.910 --> 00:16:24.510
The scopes, Google+ only has one
scope right now, which is

00:16:24.510 --> 00:16:28.570
the plus.me OAuth scope, which
basically identifies the

00:16:28.570 --> 00:16:30.270
currently logged in user.

00:16:30.270 --> 00:16:38.220
And I pass in the API key, and
I do an OAuth dialog pop up,

00:16:38.220 --> 00:16:41.460
which is the Authorize
API endpoint.

00:16:41.460 --> 00:16:44.980
Which you pass in the client
ID, pass in the scopes, and

00:16:44.980 --> 00:16:47.070
another piece of metadata, which
is basically all this

00:16:47.070 --> 00:16:49.050
now, authorize right away.

00:16:49.050 --> 00:16:53.780
And then we, assuming that the
user has authorized the OAuth

00:16:53.780 --> 00:16:55.470
dialog, then there's a Callback

00:16:55.470 --> 00:16:58.250
to handle Auth results.

00:16:58.250 --> 00:17:01.385
And it passes that to a new
function, namely we display

00:17:01.385 --> 00:17:02.900
some stuff.

00:17:02.900 --> 00:17:06.089
The stuff is very similar to
what we did last time.

00:17:06.089 --> 00:17:09.319
Everything else is the exact
same as unauthenticated API.

00:17:09.319 --> 00:17:12.875
It just so happens that we're
choosing a simple API, but you

00:17:12.875 --> 00:17:15.050
would have to handle the
different APIs and however you

00:17:15.050 --> 00:17:16.780
want to display the
information.

00:17:16.780 --> 00:17:20.430
So let's see if we copy and
pasted everything, and it's

00:17:20.430 --> 00:17:21.680
configured properly.

00:17:25.500 --> 00:17:28.225
So you get an Authorize
button.

00:17:28.225 --> 00:17:31.200
You get a nice Authorize
dialogue.

00:17:31.200 --> 00:17:34.380
So that's the name of the
project you guys set.

00:17:34.380 --> 00:17:37.700
Allow access, and boom.

00:17:37.700 --> 00:17:40.085
It's actually pulling in
my Google+ profile

00:17:40.085 --> 00:17:41.600
for this demo account.

00:17:41.600 --> 00:17:45.380
Profile picture and the name
that I set it's using OAuth in

00:17:45.380 --> 00:17:46.340
JavaScript.

00:17:46.340 --> 00:17:49.580
And this handles relatively
easily.

00:17:49.580 --> 00:17:51.540
So, a note about the
JavaScript client.

00:17:51.540 --> 00:17:54.630
That is an alpha, but we're
using it, obviously.

00:17:54.630 --> 00:17:56.470
And we have people using
it in production.

00:17:56.470 --> 00:17:59.120
It's pretty stable even though
it's in the alpha state.

00:17:59.120 --> 00:18:03.260
And if you have any feedback
or bugs, there's a group

00:18:03.260 --> 00:18:05.546
associated with the JavaScript
client where you can report

00:18:05.546 --> 00:18:07.350
all those issues.

00:18:07.350 --> 00:18:10.445
Wolf, any closing thoughts
on JavaScript?

00:18:10.445 --> 00:18:13.045
WOLF DOBSON: JavaScript
is awesome.

00:18:13.045 --> 00:18:15.160
JOSH BARRY: I agree.

00:18:15.160 --> 00:18:21.170
WOLF DOBSON: No, it's really
useful, and it's a way to get

00:18:21.170 --> 00:18:24.170
authentication done
very easily.

00:18:24.170 --> 00:18:27.490
Otherwise you're writing your
own handlers, and you're

00:18:27.490 --> 00:18:28.710
dealing with refresh
tokens, and all the

00:18:28.710 --> 00:18:29.340
rest of that stuff.

00:18:29.340 --> 00:18:31.980
And the JavaScript client
will hide that from you.

00:18:31.980 --> 00:18:33.180
In a good way.

00:18:33.180 --> 00:18:35.085
It'll make it so it's a seamless
experience for your

00:18:35.085 --> 00:18:37.180
users, and a seamless
experience for you.

00:18:37.180 --> 00:18:38.620
JOSH BARRY: And, you know,
just as a JavaScript

00:18:38.620 --> 00:18:40.890
developer, the API is
pretty natural.

00:18:40.890 --> 00:18:44.340
That Callback flow, and
dynamically generating the

00:18:44.340 --> 00:18:46.830
objects attached for all of
the method calls, and it's

00:18:46.830 --> 00:18:48.310
pretty nice.

00:18:48.310 --> 00:18:52.730
Cool, well I think that's
it for the live demo.

00:18:52.730 --> 00:18:55.183
Let's go to the plus
thread, and see if

00:18:55.183 --> 00:18:56.433
you have any questions.

00:18:59.416 --> 00:19:05.910
WOLF DOBSON: We have that, and
then we have this one.

00:19:05.910 --> 00:19:06.630
JOSH BARRY: Yes.

00:19:06.630 --> 00:19:07.750
So from yesterday.

00:19:07.750 --> 00:19:10.572
Why don't you read it to them?

00:19:10.572 --> 00:19:12.400
WOLF DOBSON: Are you planning to
change +1 [UNINTELLIGIBLE]

00:19:12.400 --> 00:19:12.910
in back?

00:19:12.910 --> 00:19:16.710
JOSH BARRY: There was a very
active interesting said on the

00:19:16.710 --> 00:19:19.170
developers + post about
these office hours,

00:19:19.170 --> 00:19:20.530
about the +1 button.

00:19:20.530 --> 00:19:23.990
And in general it seemed to be
a lot of end users, which a

00:19:23.990 --> 00:19:28.670
lot of the developers are,
talking about whether they

00:19:28.670 --> 00:19:31.130
liked the +1 buttons, they don't
like the changes, and

00:19:31.130 --> 00:19:35.020
their opinions on how that
affects the ecosystem.

00:19:35.020 --> 00:19:38.550
Typically, this is developer
office hours, so we answer

00:19:38.550 --> 00:19:40.340
developer questions, but I think
it's a fair question to

00:19:40.340 --> 00:19:41.870
still address.

00:19:41.870 --> 00:19:44.010
It's a very simple
answer of the

00:19:44.010 --> 00:19:45.280
evolution of the +1 button.

00:19:45.280 --> 00:19:50.220
The overall design direction
Google+ has been going to its

00:19:50.220 --> 00:19:54.010
red and white theme, and we just
upgraded that original

00:19:54.010 --> 00:19:55.800
scheme to the new one.

00:19:55.800 --> 00:19:59.320
And the numbers seem to be in
general that people like it

00:19:59.320 --> 00:20:02.630
and it's improving things,
so that's why

00:20:02.630 --> 00:20:03.670
we made that change.

00:20:03.670 --> 00:20:05.970
And of course, if you have more
feedback, the Feedback

00:20:05.970 --> 00:20:10.030
button on the consumer version,
lower left hand

00:20:10.030 --> 00:20:12.095
corner, is the best place
to vocalize that.

00:20:12.095 --> 00:20:15.313
Though of course, on Google+
is also a good place to

00:20:15.313 --> 00:20:16.030
vocalize it.

00:20:16.030 --> 00:20:17.860
WOLF DOBSON: Another question
we got is will this be

00:20:17.860 --> 00:20:19.200
recorded and posted
on YouTube.

00:20:19.200 --> 00:20:23.000
The answer Is yes.

00:20:23.000 --> 00:20:24.890
JOSH BARRY: For those who
haven't been in an on-air

00:20:24.890 --> 00:20:27.830
Hangout, or just not familiar
with it, is a

00:20:27.830 --> 00:20:28.670
YouTube live stream.

00:20:28.670 --> 00:20:31.880
So we're done with this, we'll
go ahead and clean up the bits

00:20:31.880 --> 00:20:35.170
and pieces and post that, as
well as with show notes, which

00:20:35.170 --> 00:20:38.650
includes any sample code that
I demo, the interesting

00:20:38.650 --> 00:20:41.870
questions need further
explanation, or links that are

00:20:41.870 --> 00:20:44.642
interesting during
office hours.

00:20:44.642 --> 00:20:48.080
WOLF DOBSON: One of the
questions we got also is,

00:20:48.080 --> 00:20:52.600
looking at the code.google.com
Google+ platform issues list,

00:20:52.600 --> 00:20:55.110
and the question was,
do we read those?

00:20:55.110 --> 00:20:58.300
The answer is, oh yes,
we read them.

00:20:58.300 --> 00:20:59.035
We do read them.

00:20:59.035 --> 00:21:02.210
We read all the posts that come
in on google+developers.

00:21:02.210 --> 00:21:04.100
Our Google group.

00:21:04.100 --> 00:21:05.180
We do read them all.

00:21:05.180 --> 00:21:06.070
We know about them all.

00:21:06.070 --> 00:21:09.050
We really thank you for
reporting them.

00:21:09.050 --> 00:21:12.535
Obviously, we bring them
to the [UNINTELLIGIBLE]

00:21:12.535 --> 00:21:15.070
teams in the cases where
that's going to help.

00:21:15.070 --> 00:21:17.070
We talk about them internally.

00:21:17.070 --> 00:21:20.790
And we try to keep those updated
as things change.

00:21:20.790 --> 00:21:22.846
So yes, absolutely,
we see them.

00:21:22.846 --> 00:21:26.420
JOSH BARRY: And the
differentiation between the

00:21:26.420 --> 00:21:29.630
issues list versus the general
Feedback button.

00:21:29.630 --> 00:21:30.820
The general Feedback button --

00:21:30.820 --> 00:21:32.470
WOLF DOBSON: And when he's
saying that, he's talking

00:21:32.470 --> 00:21:34.000
about this button that's in the
lower left hand corner.

00:21:34.000 --> 00:21:40.680
The one if you're looking at
Google+ it's right over there.

00:21:40.680 --> 00:21:43.070
That button, when you click
Send Feedback, goes to the

00:21:43.070 --> 00:21:43.620
product team.

00:21:43.620 --> 00:21:49.030
That's going to be feedback
about, I want to know how I

00:21:49.030 --> 00:21:51.240
can post this, I want to --

00:21:51.240 --> 00:21:52.270
JOSH BARRY: Feature requests.

00:21:52.270 --> 00:21:53.750
WOLF DOBSON: Yeah, exactly.

00:21:53.750 --> 00:21:57.460
I want to be able to share this
with these other people.

00:21:57.460 --> 00:22:00.240
I have feedback about
those Circles UI.

00:22:00.240 --> 00:22:00.730
Things like that.

00:22:00.730 --> 00:22:01.520
JOSH BARRY: Or even
just issues.

00:22:01.520 --> 00:22:03.470
General issues that you
have with Google+.

00:22:03.470 --> 00:22:06.180
Like my screen's not loading,
or the CSS is shifting

00:22:06.180 --> 00:22:07.270
everything to the left.

00:22:07.270 --> 00:22:11.000
WOLF DOBSON: Those, again, just
as with the issues list,

00:22:11.000 --> 00:22:12.135
we read them all.

00:22:12.135 --> 00:22:14.610
JOSH BARRY: And there's huge
amounts of people who go

00:22:14.610 --> 00:22:16.515
through all of it, sift
it, collate, send it

00:22:16.515 --> 00:22:17.140
to the right group.

00:22:17.140 --> 00:22:19.430
So hang out issues go to hang
outs, and stream issues go to

00:22:19.430 --> 00:22:21.680
streams, and [UNINTELLIGIBLE]
go to [UNINTELLIGIBLE].

00:22:21.680 --> 00:22:25.690
But we manage the developers
issue list. So those are

00:22:25.690 --> 00:22:29.690
features that developers who
use our APIs and our other

00:22:29.690 --> 00:22:33.810
plug-ins and such,
find issues with.

00:22:33.810 --> 00:22:36.200
So we actually manage that list.
So we read every single

00:22:36.200 --> 00:22:37.360
one of those, personally.

00:22:37.360 --> 00:22:38.020
WOLF DOBSON: Oh yes.

00:22:38.020 --> 00:22:41.070
And you're absolutely welcome
to post issues there.

00:22:41.070 --> 00:22:44.440
Though we currently are focusing
on issues with the

00:22:44.440 --> 00:22:49.294
Google+, platform, the rest
APIs, and the Hangouts API.

00:22:49.294 --> 00:22:51.185
JOSH BARRY: And plug-ins.

00:22:51.185 --> 00:22:51.870
WOLF DOBSON: Oh yes.

00:22:51.870 --> 00:22:52.370
Absolutely.

00:22:52.370 --> 00:22:53.410
JOSH BARRY: Plus One buttons.

00:22:53.410 --> 00:22:53.860
WOLF DOBSON: Plus One buttons.

00:22:53.860 --> 00:22:54.370
JOSH BARRY: The badges.

00:22:54.370 --> 00:22:54.840
WOLF DOBSON: Personal badges.

00:22:54.840 --> 00:22:56.090
All that good stuff.

00:22:58.480 --> 00:22:59.070
JOSH BARRY: Also typos.

00:22:59.070 --> 00:23:01.830
If you find any typos in
our documentation.

00:23:01.830 --> 00:23:02.670
We're happy to fix those.

00:23:02.670 --> 00:23:03.650
WOLF DOBSON: Oh yeah.

00:23:03.650 --> 00:23:06.260
We definitely want
that to be good.

00:23:09.500 --> 00:23:12.950
And that looks like pretty much
it, although there's some

00:23:12.950 --> 00:23:17.210
disagreement over whether we're
in Standard Time or

00:23:17.210 --> 00:23:17.555
[UNINTELLIGIBLE]

00:23:17.555 --> 00:23:18.590
Time.

00:23:18.590 --> 00:23:22.830
We're definitely in Pacific
Time, and I think it's

00:23:22.830 --> 00:23:24.795
currently daylight savings.

00:23:24.795 --> 00:23:28.199
So that's what you
need to know.

00:23:28.199 --> 00:23:30.464
JOSH BARRY: timeofday.com

00:23:30.464 --> 00:23:33.020
WOLF DOBSON: We're in Mountain
View, California right now.

00:23:33.020 --> 00:23:35.880
Right out there,
Mountain View.

00:23:35.880 --> 00:23:40.190
Although, no actual mountains
to be seen in Mountain View.

00:23:40.190 --> 00:23:41.671
We're facing the wrong
direction.

00:23:41.671 --> 00:23:44.600
JOSH BARRY: Well, that
was all the content I

00:23:44.600 --> 00:23:45.395
had for this week.

00:23:45.395 --> 00:23:47.120
It was a short one.

00:23:47.120 --> 00:23:50.335
But I hope that gave you guys
a sense of what you can do

00:23:50.335 --> 00:23:52.840
with JavaScript, with
regards to our APIs.

00:23:52.840 --> 00:23:57.240
Of course, there's also our
favorite topic, which is the

00:23:57.240 --> 00:23:59.400
Google+ Hangout app, which
is in developer preview.

00:23:59.400 --> 00:24:02.000
And that's completely in
JavaScript as well.

00:24:02.000 --> 00:24:04.500
And you may be able to use some
of the techniques you saw

00:24:04.500 --> 00:24:06.892
today inside of a Hangout app.

00:24:06.892 --> 00:24:10.970
I believe you have a blog that
goes with techniques, and

00:24:10.970 --> 00:24:13.040
tips, and tricks that
you discovered.

00:24:13.040 --> 00:24:16.930
WOLF DOBSON: It has two tips,
but they're good ones.

00:24:16.930 --> 00:24:19.330
You go to
hangoutbox.blogspot.com.

00:24:19.330 --> 00:24:22.540
I've been posting a couple
of things that we use.

00:24:22.540 --> 00:24:27.955
We have an example of that
is just using JS

00:24:27.955 --> 00:24:29.460
API inside a Hangout.

00:24:29.460 --> 00:24:32.590
It works.

00:24:32.590 --> 00:24:34.780
It works differently, depending
on whether you're a

00:24:34.780 --> 00:24:36.715
gadget, versus whether
or not you're

00:24:36.715 --> 00:24:38.400
using the iFrame solution.

00:24:38.400 --> 00:24:41.440
Which we also posted there,
which is a way around

00:24:41.440 --> 00:24:43.940
cross-site scripting problems,
same origin policy,

00:24:43.940 --> 00:24:45.500
that sort of thing.

00:24:45.500 --> 00:24:50.202
I encourage to take a look at
it, and give me feedback.

00:24:50.202 --> 00:24:53.600
JOSH BARRY: Yeah and thanks
everybody watching the stream.

00:24:53.600 --> 00:24:57.510
It was live, and everybody's
watching it years later.

00:24:57.510 --> 00:24:59.610
And of course anybody who's
asking questions on --

00:24:59.610 --> 00:25:01.340
WOLF DOBSON: People
in the future.

00:25:01.340 --> 00:25:04.440
JOSH BARRY: Ooo, what do I
look like in the future?

00:25:04.440 --> 00:25:06.290
For asking questions
on the thread.

00:25:06.290 --> 00:25:11.641
I just want to make one last
note that the Office Hours is

00:25:11.641 --> 00:25:12.790
a great place to ask questions,
including the

00:25:12.790 --> 00:25:15.290
threat that we start around each
one, but we're here to

00:25:15.290 --> 00:25:19.495
help in many different ways
at all different times.

00:25:19.495 --> 00:25:23.240
Of course, you can ask us
directly on Goggle+.

00:25:23.240 --> 00:25:26.150
Our profiles are pretty
prominent and easy to find.

00:25:26.150 --> 00:25:28.650
WOLF DOBSON: We absolutely
recommend that you use the

00:25:28.650 --> 00:25:29.770
Google Plus Developers.

00:25:29.770 --> 00:25:31.580
It's google-plus-developers.

00:25:31.580 --> 00:25:33.090
And plus is spelled
out P-L-U-S.

00:25:33.090 --> 00:25:35.370
JOSH BARRY: And we actually
have a link from our

00:25:35.370 --> 00:25:36.335
developers site.

00:25:36.335 --> 00:25:37.770
WOLF DOBSON: If you click
on Discussions.

00:25:40.970 --> 00:25:46.580
That gets read by everybody
on the team, and also our

00:25:46.580 --> 00:25:49.855
wonderful community that
will also help you out.

00:25:49.855 --> 00:25:52.050
JOSH BARRY: And there's actually
quite a few folks in

00:25:52.050 --> 00:25:55.470
there now who are sort of de
facto community managers.

00:25:55.470 --> 00:25:56.580
Pretty awesome to see.

00:25:56.580 --> 00:25:58.480
They've played around with our
APIs, our technology, and

00:25:58.480 --> 00:25:59.980
they've gone through some of
the struggles that you may

00:25:59.980 --> 00:26:03.351
have, and they tend to answer
sometimes before we do.

00:26:03.351 --> 00:26:04.910
Which is good for us.

00:26:04.910 --> 00:26:05.790
WOLF DOBSON: Which is great.

00:26:05.790 --> 00:26:09.480
And it's wonderful to have
such a strong community.

00:26:09.480 --> 00:26:13.530
JOSH BARRY: And of course, the
issues list. For any things

00:26:13.530 --> 00:26:15.790
you feel like they to be
communicated to that list.

00:26:15.790 --> 00:26:18.820
WOLF DOBSON: And
our last note.

00:26:18.820 --> 00:26:22.810
Especially people who having
questions or issues with the

00:26:22.810 --> 00:26:26.230
plug-ins, with the plus badges
and the profile badges, I

00:26:26.230 --> 00:26:29.690
absolutely encourage you guys to
post a link to your site so

00:26:29.690 --> 00:26:33.620
that we or somebody in the
community can take a look.

00:26:33.620 --> 00:26:36.220
A lot of times it's a matter
of, like, oh yeah, you have

00:26:36.220 --> 00:26:37.950
this kind of iFrame
or whatever.

00:26:37.950 --> 00:26:40.480
Or we can just look
at your console.

00:26:40.480 --> 00:26:41.470
We can look at your code.

00:26:41.470 --> 00:26:44.150
We can get it turned around
to a lot faster.

00:26:44.150 --> 00:26:45.010
JOSH BARRY: Also JS
[? Fiddle. ?]

00:26:45.010 --> 00:26:48.230
And you could have this
for JavaScript.

00:26:48.230 --> 00:26:49.435
WOLF DOBSON: Yes.

00:26:49.435 --> 00:26:50.410
JOSH BARRY: Cool.

00:26:50.410 --> 00:26:54.810
I think on that note, we're
done for this week.

00:26:54.810 --> 00:26:57.732
Check back next week for
the next Office Hours.

00:26:57.732 --> 00:26:58.390
WOLF DOBSON: Bye.

00:26:58.390 --> 00:26:59.640
JOSH BARRY: See ya.

