WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:02.370
GUI stands for a graphical user interface GUI

00:00:03.189 --> 00:00:10.559
And so you get the acronym GUI and he's probably the predominant way we interact with computers today and with mobile phones

00:00:10.599 --> 00:00:16.049
That's the term that sees these days in the 80s people tended to refer to them as wimps windows

00:00:16.240 --> 00:00:20.639
Icons mice and pulldown menus or windows icons menus and pointers

00:00:20.980 --> 00:00:25.350
Depending on which version of the acronym you went to well that pretty much just describes

00:00:25.869 --> 00:00:31.678
The systems we get on computers today a GUI can refer to any sort of graphical user interface

00:00:31.679 --> 00:00:32.279
for example

00:00:32.279 --> 00:00:39.898
Your mobile phone doesn't have pointers on it and so on a 3d virtual reality interface is a graphical user interface

00:00:39.899 --> 00:00:42.299
but if put doesn't have nice or pulldown menus involved

00:00:44.649 --> 00:00:47.699
When it comes to writing GUI software things become

00:00:48.280 --> 00:00:52.770
More interesting than writing sort of traditional command-line software or software

00:00:53.410 --> 00:01:00.479
Where you're typing into the software and the reason is is that when you write a program of the traditional sort the command line sort

00:01:00.969 --> 00:01:06.419
You have control as a programmer. I mean, let's think about that simple program. We looked at before and I shall just sketch it out

00:01:06.970 --> 00:01:12.749
We have our main function and then we say printf and then we have some text hello world

00:01:12.970 --> 00:01:15.900
Whatever it is and it prints out in that order now

00:01:15.900 --> 00:01:22.830
Let's say we wanted to write a program that would ask you what your name is. And then ask you when your birthday is

00:01:23.159 --> 00:01:25.529
So we could write the same cell phone

00:01:25.530 --> 00:01:29.790
so we print out that and then we would say we want to read some text and because we're using

00:01:29.890 --> 00:01:32.640
C we need space to read in the name

00:01:32.860 --> 00:01:38.040
So we need a variable to store that in might be a long name and then we say we want to read in

00:01:38.740 --> 00:01:40.740
we using the scanf function a

00:01:41.860 --> 00:01:48.059
String in two names so we can read him today and then we can print out another message

00:01:48.399 --> 00:01:50.759
Please enter your age your birthday

00:01:50.759 --> 00:01:52.949
whatever it is you want and then you can say

00:01:53.170 --> 00:01:59.879
read in that and you can specify that you want that to be an integer followed by slash followed by

00:02:00.490 --> 00:02:06.240
Another integer followed by a slash followed by another integer don't like that

00:02:06.310 --> 00:02:08.729
And so then you can read in that and you've got control

00:02:08.729 --> 00:02:10.729
You know that when the user types here

00:02:10.929 --> 00:02:17.689
They're typing in their name or should be typing in the name because of putting in keys there and when you're typing in here

00:02:17.700 --> 00:02:19.610
They're typing in the date and you can check them

00:02:19.610 --> 00:02:22.849
They've put the right things it if we were to do the same thing where the GUI

00:02:23.220 --> 00:02:29.690
Then things get a little bit more interesting. So let's try and create one. I'm using Xcode

00:02:29.690 --> 00:02:35.239
I'm using a Mac here because I have a Mac on my desk exactly the same would apply for Windows and Atari ST

00:02:35.819 --> 00:02:38.268
A I'll click on it archimedes

00:02:38.269 --> 00:02:44.929
Whatever is it you wanted to do it on so let's have a window and let's start building the same sort of thing

00:02:44.930 --> 00:02:50.720
So we've got our window so we want some text. So let's put in a label that says name

00:02:51.269 --> 00:02:55.309
And then we want to actually put in space for the person's type in their name

00:02:55.769 --> 00:03:00.529
So we'd have a text field drop that in as well. We can line all that's it

00:03:00.560 --> 00:03:07.759
We've now got space for that to do so and do the same again. They report birthday

00:03:08.760 --> 00:03:12.170
and again, we'd have another text field so it isn't just

00:03:16.530 --> 00:03:17.959
One summer so yeah, I mean at this point

00:03:17.959 --> 00:03:24.319
we're not really what we are programming but we're declaring so what we want in the thing and we're defining it using a sort of

00:03:24.630 --> 00:03:29.539
GUI thing which makes it nice and relatively straightforward to implement

00:03:31.109 --> 00:03:33.109
And that's great but that

00:03:33.690 --> 00:03:38.059
Only gets us as far as what peers in though that just saves typing lots and lots of boilerplate code

00:03:38.060 --> 00:03:45.169
Which says add a text box at this position and so on and does that and gooeys are a great example of abstraction

00:03:45.169 --> 00:03:49.909
We talked about again the other day in action because you can abstract lots of things

00:03:49.910 --> 00:03:53.569
So all the code that's generating. These user interface is still there

00:03:53.569 --> 00:03:59.689
I'm just not having to write it the computer can create it and loading the take data files and so on for me

00:03:59.690 --> 00:04:01.560
so we've now got

00:04:01.560 --> 00:04:07.009
Roughly the same sort of thing here and if we run the program now, you should hopefully pop up

00:04:07.919 --> 00:04:10.339
and you program let's get rid of Xcode and

00:04:11.129 --> 00:04:16.459
Eventually my program that's up and I can enter my name and I can enter my birthday

00:04:17.010 --> 00:04:24.140
1/2/3 but whereas before if I was to write this program and that's write a command line version just to compare

00:04:24.750 --> 00:04:26.750
Here I am going to

00:04:26.960 --> 00:04:28.940
Print out, please

00:04:28.940 --> 00:04:30.940
Enter your name

00:04:31.430 --> 00:04:35.229
Support computer program so we need a variable to store that

00:04:36.410 --> 00:04:38.410
We probably want one for the day

00:04:39.200 --> 00:04:41.200
month and year

00:04:41.330 --> 00:04:46.479
So we can then read in from that you want to read in the string and we'll put that into name

00:04:46.730 --> 00:04:49.210
And we want to print out now enter

00:04:49.880 --> 00:04:51.880
your birthday

00:04:52.550 --> 00:04:54.550
Don't to print out a new line there either

00:04:56.390 --> 00:04:58.390
Then we can read in

00:04:59.600 --> 00:05:04.809
That as well so we read in the day the month and

00:05:06.650 --> 00:05:08.480
The year

00:05:08.480 --> 00:05:14.200
And then we can print out your birthday. Then we can print out those values again

00:05:14.420 --> 00:05:17.590
so we've got two programs that allow us to enter our name and

00:05:18.710 --> 00:05:21.909
Birthday, but if we run them they work in very very different ways

00:05:21.910 --> 00:05:27.130
So let's just get a command line so we can run the command line one. So let's run this program

00:05:27.740 --> 00:05:31.269
Just please enter your name Shaun enter your birthday

00:05:32.000 --> 00:05:33.140
1/2/3

00:05:33.140 --> 00:05:34.550
and

00:05:34.550 --> 00:05:41.379
Yeah short vowel and it says your birthday is 1/2 accessory so we can write a program we can collect some data from the user

00:05:41.690 --> 00:05:46.809
But our programs in control we could either we have to enter our name because it's after our name

00:05:46.820 --> 00:05:52.390
We have to enter our birthday because it ssj4 our birthday if we go back to the gooey one

00:05:52.970 --> 00:05:57.610
Then things are different because now we're in control because we've got the box

00:05:57.610 --> 00:06:02.469
they're saying enter your name so we could enter our name and then our birthday or

00:06:03.050 --> 00:06:09.249
We could enter our birthday first and then we can enter our name or we can start typing in our thing

00:06:09.250 --> 00:06:11.250
they better put the birthday in and then

00:06:11.690 --> 00:06:14.350
Better complete the birthday and type it in

00:06:14.870 --> 00:06:16.550
and different things so

00:06:16.550 --> 00:06:22.659
When we write a command line program or certainly simple command line programs the programs in control

00:06:22.660 --> 00:06:28.150
It asks the user for input it gets that input for the user. It's asking for what particular type is and so on

00:06:28.760 --> 00:06:30.320
When you get a GUI?

00:06:30.320 --> 00:06:36.340
It changes you present the user with something. They will then fill it in in the order

00:06:36.340 --> 00:06:41.829
They want or click the button and the order they do to do the task. And then you have to do whatever it is

00:06:42.409 --> 00:06:45.159
At that point. So at this point we've put that values in

00:06:46.249 --> 00:06:47.259
When it's finished

00:06:47.259 --> 00:06:50.859
I'd probably have an OK button and add in so I'd have an OK button when that fires

00:06:50.929 --> 00:06:54.759
We could run some code which occur close to values and put them together

00:06:55.999 --> 00:07:00.879
So when we write a program to the GUI, they're working in a very different style

00:07:01.939 --> 00:07:03.919
They have to be driven by what we call

00:07:03.919 --> 00:07:08.648
Events things happening outside the program that they react to so the user clicks on a button

00:07:09.050 --> 00:07:15.759
The user clicks the mouse user puts the mouse button back up. The user moves the mouse the windows move

00:07:15.759 --> 00:07:20.378
You have to redraw the contents. How does that happens? When does that happen? All these things?

00:07:20.930 --> 00:07:23.680
Have to be responded to by your program

00:07:23.680 --> 00:07:27.939
So you're no longer saying ok do this then this then this and this you have to respond

00:07:28.219 --> 00:07:33.398
To the events as they come as the programs running. So we've got a very different way of writing

00:07:33.399 --> 00:07:36.309
Our program command-line programs can get like that

00:07:36.979 --> 00:07:39.458
If you think about something the hair say like VY

00:07:40.009 --> 00:07:42.429
You can press different keys and it does different things

00:07:42.469 --> 00:07:44.588
so you press again because different things and

00:07:44.689 --> 00:07:50.468
Do things at different times or you might have menu options and depending on what key it is you do different things in different orders

00:07:50.469 --> 00:07:55.239
So you can't get to that point but by that point you becoming less of a command-line program and more

00:07:55.459 --> 00:08:00.639
GUI like by the sounds of it in that kind of a command-line program where it's getting like a GUI

00:08:00.639 --> 00:08:02.978
It's almost like you're writing the GUI

00:08:04.459 --> 00:08:05.949
And yes, exactly

00:08:05.949 --> 00:08:09.609
So you command line program you could write it to the point where it becomes more and more

00:08:10.069 --> 00:08:16.929
Like a GUI effectively in you displaying that I mean the Debian Linux command line installs a building an example of this

00:08:16.930 --> 00:08:18.169
Is that it looks?

00:08:18.169 --> 00:08:24.788
More and more like a GUI drawn with text characters in a window rather than with lines and pixels

00:08:24.860 --> 00:08:30.490
It's sort of where and how you respond to the input. So any write a computer program like this

00:08:31.129 --> 00:08:33.129
Why do you call scanf for?

00:08:33.380 --> 00:08:36.519
Input in basic or whatever it is. You using to read from the keyboard

00:08:36.740 --> 00:08:39.939
You've said I want to read a series of things from the keyboard until

00:08:40.130 --> 00:08:45.880
Something happens or get me a key that's been pressed and you know, that key is going to be pressed when you're writing a GUI

00:08:46.970 --> 00:08:51.250
Any number of things could happen based on what's happening? It could be the someone's the window

00:08:51.650 --> 00:08:54.790
So you need to redraw that bit of the screen. It could be that someone's clicked a button

00:08:54.790 --> 00:08:56.780
So you have to respond to that button

00:08:56.780 --> 00:08:59.559
it could be that another program is running and

00:08:59.780 --> 00:09:04.899
Someone's dragged a file and dropped it onto yours and you have to respond to that so you have to respond to all these things

00:09:04.900 --> 00:09:10.449
And you can't just assume your programs going to linearly follow each line of code one after the other

00:09:10.750 --> 00:09:12.640
Of course, that's what's actually happening

00:09:12.640 --> 00:09:17.319
The CPU is still doing that but it's actually jumping between the operating system in your code

00:09:17.540 --> 00:09:22.029
Between the gooey libraries and things that are supported to implement your thing

00:09:22.030 --> 00:09:26.290
Depending on what level it is to make the program run in different things. So what we'll do

00:09:26.960 --> 00:09:30.369
over the next few computer files because we'll actually start to

00:09:31.220 --> 00:09:37.239
Look at how we write GUI software. So we'll actually look at how we implement it and we started to look here

00:09:37.240 --> 00:09:41.590
We've got a high level system cocoa on the Mac. There's equivalents WPF on

00:09:42.110 --> 00:09:44.499
Windows and things and we can look at them and how they do it

00:09:44.500 --> 00:09:48.580
They provide a very easy way to do things because I say I want

00:09:49.010 --> 00:09:52.390
To text fields I can get the values from them and do things

00:09:52.640 --> 00:09:57.189
But we'll also look at a lower level at some of the earlier Geary's cups like the original Macintosh

00:09:58.280 --> 00:10:01.989
version or what happened on the Atari what happened on riscos and so on and

00:10:02.060 --> 00:10:06.910
See how they work and then we'll start to look under the hood of what's going on and seeing how this program actually

00:10:07.010 --> 00:10:10.869
Functions how we get to these things and how we implement the GUI

00:10:12.830 --> 00:10:20.080
Image here into a set of pixels that are either black or white but which are compensating for the error and so again,

00:10:20.080 --> 00:10:22.080
we'll give the appearance of

00:10:22.940 --> 00:10:24.280
the original gray things

00:10:24.280 --> 00:10:27.550
But if you were to zoom in on this you would say it's been found a hundred and eleven

00:10:27.800 --> 00:10:31.089
Thousand times dyes engrave what that means is that in

