WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.060
MALE SPEAKER:
AppCompat gives you

00:00:02.060 --> 00:00:03.847
a consistent base
for your Android

00:00:03.847 --> 00:00:06.400
app built on the principles
of material design.

00:00:06.400 --> 00:00:08.250
But material design
is a lot more

00:00:08.250 --> 00:00:10.670
than adding a toolbar
and some accent colors.

00:00:10.670 --> 00:00:13.280
For everything else,
there's a design library.

00:00:13.280 --> 00:00:16.730
The design library provides many
of the high-level components

00:00:16.730 --> 00:00:19.160
you'll need to build
a great app that feels

00:00:19.160 --> 00:00:21.780
at home with material design.

00:00:21.780 --> 00:00:22.960
So what do you get?

00:00:22.960 --> 00:00:26.400
A text input layout for adding
floating labels and errors

00:00:26.400 --> 00:00:27.910
to edit text.

00:00:27.910 --> 00:00:30.390
Floating action button
for the primary action

00:00:30.390 --> 00:00:31.720
in your interface.

00:00:31.720 --> 00:00:34.390
SnackBars for quick
feedback messages

00:00:34.390 --> 00:00:36.230
with an optional action.

00:00:36.230 --> 00:00:39.450
Material design compliant
tabs and navigation

00:00:39.450 --> 00:00:42.610
view for building your
Navigation Drawer menu items.

00:00:42.610 --> 00:00:46.570
Plus a lot of work, specifically
around motion and scrolling.

00:00:46.570 --> 00:00:49.750
All this back through API7.

00:00:49.750 --> 00:00:53.510
Text Input Layer wraps and edits
text, providing always visible

00:00:53.510 --> 00:00:55.920
hint text, and a convenient
way of showing error

00:00:55.920 --> 00:00:58.440
text via the set error method.

00:00:58.440 --> 00:01:01.570
Floating Action Buttons are
ideal for that primary action

00:01:01.570 --> 00:01:02.970
in your UI.

00:01:02.970 --> 00:01:05.090
The design library's
Floating Action Button

00:01:05.090 --> 00:01:08.480
sports both a default size
as well as a mini size,

00:01:08.480 --> 00:01:10.890
useful for when the
Floating Action Button needs

00:01:10.890 --> 00:01:13.700
to match with other elements.

00:01:13.700 --> 00:01:16.970
Snackbars are a new way to
provide lightweight feedback

00:01:16.970 --> 00:01:17.940
to your users.

00:01:17.940 --> 00:01:21.750
Unlike toast messages, SnackBars
are an interactive part

00:01:21.750 --> 00:01:25.260
of your UI, allowing you
to add an optional action

00:01:25.260 --> 00:01:29.010
or allow the user to swipe
to dismiss the SnackBar.

00:01:29.010 --> 00:01:32.660
This makes SnackBars very useful
around potentially destructive

00:01:32.660 --> 00:01:33.835
operations.

00:01:33.835 --> 00:01:36.730
A Click Undo Action can
save a lot of headache,

00:01:36.730 --> 00:01:39.600
while providing a far better
experience than confirmation

00:01:39.600 --> 00:01:41.100
dialogs.

00:01:41.100 --> 00:01:43.800
Tabs have always been a
common pattern on Android,

00:01:43.800 --> 00:01:46.770
both as top level
navigation for your app,

00:01:46.770 --> 00:01:49.380
and for grouping
content within your app.

00:01:49.380 --> 00:01:52.840
The design library's tab
layout supports fixed tabs

00:01:52.840 --> 00:01:56.970
where each views width is split
equally between tabs, suitable

00:01:56.970 --> 00:01:59.580
if you only have a
few important tabs,

00:01:59.580 --> 00:02:01.670
as well supporting
scrollable tabs where you

00:02:01.670 --> 00:02:03.610
have a large number of tabs.

00:02:03.610 --> 00:02:07.310
We've made it easy to attach
your tab layout to a ViewPager,

00:02:07.310 --> 00:02:10.610
keeping your tabs and
pages content in sync.

00:02:10.610 --> 00:02:13.070
Just make sure your
pager adapter overrides

00:02:13.070 --> 00:02:14.560
Get Page Title.

00:02:14.560 --> 00:02:16.520
And then call Set
Up With ViewPager

00:02:16.520 --> 00:02:18.960
to tie everything together.

00:02:18.960 --> 00:02:22.730
An alternative to using tabs
as your top-level navigation

00:02:22.730 --> 00:02:25.120
is the Navigation
Drawer-- a slide out

00:02:25.120 --> 00:02:27.710
pane which offers navigation
between different parts

00:02:27.710 --> 00:02:28.940
of your app.

00:02:28.940 --> 00:02:32.020
Navigation View gives you
a perfectly styled drawer.

00:02:32.020 --> 00:02:34.710
You just provide the
header, and then you

00:02:34.710 --> 00:02:37.250
can add navigation
items programmatically

00:02:37.250 --> 00:02:39.960
or via a Menu Resource File.

00:02:39.960 --> 00:02:43.360
The simplest drawer menus will
have a group of checkable menu

00:02:43.360 --> 00:02:45.150
items, using the
checkable behavior

00:02:45.150 --> 00:02:46.980
equals single attribute.

00:02:46.980 --> 00:02:50.460
This ensures that the checked
items will appear highlighted

00:02:50.460 --> 00:02:52.370
in the Navigation View.

00:02:52.370 --> 00:02:57.030
Support for subheaders using
subviews is also available.

00:02:57.030 --> 00:03:00.280
That takes care of a lot of
the visuals of material design.

00:03:00.280 --> 00:03:02.960
What about the motion
side of material design?

00:03:02.960 --> 00:03:06.560
Coordinator motion is critical
to a great experience.

00:03:06.560 --> 00:03:10.820
That's why the design library is
introducing CoordinatorLayout.

00:03:10.820 --> 00:03:12.690
CoordinatorLayout
is a new layout

00:03:12.690 --> 00:03:15.900
that allows children to
declare a behavior, giving them

00:03:15.900 --> 00:03:18.120
extra controls
around touch events

00:03:18.120 --> 00:03:22.290
and the ability to build
dependencies between views.

00:03:22.290 --> 00:03:25.230
A great example of this is
when you use CoordinatorLayout

00:03:25.230 --> 00:03:28.730
with the floating action button,
and then show a Snackbar.

00:03:28.730 --> 00:03:30.890
The default behavior
for these components

00:03:30.890 --> 00:03:33.920
allow the floating action
button to automatically move up

00:03:33.920 --> 00:03:36.560
as the Snackbar animates
onto the screen,

00:03:36.560 --> 00:03:38.345
ensuring that components
don't overlap,

00:03:38.345 --> 00:03:41.940
without you writing
any code at all.

00:03:41.940 --> 00:03:43.930
A major focus for
CoordinatorLayout

00:03:43.930 --> 00:03:45.620
in this initial
release is around

00:03:45.620 --> 00:03:49.790
enabling your appbar to react
to your main content scrolling.

00:03:49.790 --> 00:03:52.440
By wrapping your toolbar
and other views, such as Tab

00:03:52.440 --> 00:03:54.440
Layout, in an appbar
layout, you'll

00:03:54.440 --> 00:03:56.910
gain access to the
special control flags,

00:03:56.910 --> 00:03:59.420
allowing you to annotate each
component as something that

00:03:59.420 --> 00:04:01.350
scrolls off the
screen, stays pinned

00:04:01.350 --> 00:04:03.950
to the top of the screen,
or even returns immediately,

00:04:03.950 --> 00:04:07.010
when you downward scroll, making
implementing a quick return

00:04:07.010 --> 00:04:09.350
pattern just a few lines of XML.

00:04:09.350 --> 00:04:12.740
No custom synchronized
scrolling code needed.

00:04:12.740 --> 00:04:15.700
You can take things even further
by using a collapsing toolbar

00:04:15.700 --> 00:04:16.540
layout.

00:04:16.540 --> 00:04:18.529
This allows an
extended hide toolbar

00:04:18.529 --> 00:04:22.350
to grow and shrink its title
text size as it collapses.

00:04:22.350 --> 00:04:25.050
Pin elements to the top
of the collapsing toolbar,

00:04:25.050 --> 00:04:28.290
parallax images, and even
add a full bleed scrim color

00:04:28.290 --> 00:04:29.700
once it becomes collapsed.

00:04:29.700 --> 00:04:33.380
Again, just a few lines of XML,
and that's all you'll need.

00:04:33.380 --> 00:04:35.400
Getting started with the
design library is easy.

00:04:35.400 --> 00:04:37.780
It's just a single
dependency to add.

00:04:37.780 --> 00:04:40.870
With AppCompat as the base,
and the components provided

00:04:40.870 --> 00:04:42.695
by the design
library on top of it,

00:04:42.695 --> 00:04:45.600
there's no better time to get
started building great material

00:04:45.600 --> 00:04:47.480
design apps.

00:04:47.480 --> 00:04:50.250
We've only touched on the
features in the design library.

00:04:50.250 --> 00:04:53.060
You're can learn even more about
the design library in the blog

00:04:53.060 --> 00:04:55.320
post and on the developer site.

00:04:55.320 --> 00:04:59.120
I'm looking forward to your
great material design apps.

