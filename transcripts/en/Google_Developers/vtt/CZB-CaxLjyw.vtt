WEBVTT
Kind: captions
Language: en

00:00:00.565 --> 00:00:01.190
DAN GALVIN: Hi.

00:00:01.190 --> 00:00:04.210
I'm Dan Galvin, an Engineer and
Developer Advocate at Google.

00:00:04.210 --> 00:00:08.340
And this is a Google data
center, 110,000 square feet

00:00:08.340 --> 00:00:10.730
of efficiency in
Council Bluffs, Iowa.

00:00:10.730 --> 00:00:12.990
This is the beginning
of Google scale.

00:00:12.990 --> 00:00:15.320
And when I say Google scale,
I mean the architecture

00:00:15.320 --> 00:00:19.040
that powers 1 and 1/2 million
Android activations per day,

00:00:19.040 --> 00:00:21.810
6 billion hours of
monthly YouTube viewing,

00:00:21.810 --> 00:00:25.760
and 20 billion pages crawled
and indexed for Google search.

00:00:25.760 --> 00:00:29.540
To do this, we built a
network that spans the globe.

00:00:29.540 --> 00:00:31.550
And this is what it looks like.

00:00:31.550 --> 00:00:33.040
Our data centers
are places where

00:00:33.040 --> 00:00:36.010
science becomes art, such as
in this data center in Oregon,

00:00:36.010 --> 00:00:38.520
where the labeling of a
function of a cooling pipe

00:00:38.520 --> 00:00:42.210
makes a facility feel like
a multicolored playground.

00:00:42.210 --> 00:00:45.320
These servers in Georgia
are lit by efficient LEDs.

00:00:45.320 --> 00:00:46.960
Green and blue mean
that all is well.

00:00:46.960 --> 00:00:48.580
If there was a
problem, a technician

00:00:48.580 --> 00:00:51.580
would be immediately able to
locate it when dispatched.

00:00:51.580 --> 00:00:54.220
While you and I might never
get this close to the inside

00:00:54.220 --> 00:00:57.280
of a Google data center,
such as this one in Oklahoma,

00:00:57.280 --> 00:00:58.560
our code can.

00:00:58.560 --> 00:01:01.780
Residing on the same
compute, storage, and network

00:01:01.780 --> 00:01:07.170
that allows Google scale, using
the Google Cloud Platform.

00:01:07.170 --> 00:01:09.630
Applications run on the
Google Cloud Platform

00:01:09.630 --> 00:01:13.620
using Compute Engine, our raw
infrastructure as a service.

00:01:13.620 --> 00:01:15.230
It is the fundamental
building block

00:01:15.230 --> 00:01:17.020
for services such as
Google App Engine,

00:01:17.020 --> 00:01:18.940
our platform as a service.

00:01:18.940 --> 00:01:20.920
This allows you to
build your own software

00:01:20.920 --> 00:01:24.890
as a service at the top
of the pyramid stack.

00:01:24.890 --> 00:01:27.570
Here's an overview of what
makes App Engine scale.

00:01:27.570 --> 00:01:29.690
First, we start with disk.

00:01:29.690 --> 00:01:32.610
These disks are distributed and
mirrored across data centers,

00:01:32.610 --> 00:01:34.270
with different
access layers based

00:01:34.270 --> 00:01:36.230
on the needs of
your application.

00:01:36.230 --> 00:01:38.930
Cloud Storage is
great for large files.

00:01:38.930 --> 00:01:41.860
Datastore is deeply distributed
and works with very large data

00:01:41.860 --> 00:01:42.410
sets.

00:01:42.410 --> 00:01:45.290
While Cloud SQL has the
versatility to handle complex

00:01:45.290 --> 00:01:46.832
SQL queries.

00:01:46.832 --> 00:01:49.040
In front of that, we have
lightweight and distributed

00:01:49.040 --> 00:01:50.580
app servers.

00:01:50.580 --> 00:01:53.220
We provide memcache to allow
you to reduce data storage

00:01:53.220 --> 00:01:56.480
operations and improve
performance as you scale up.

00:01:56.480 --> 00:01:59.330
The front end provides load
balancing and session delivery,

00:01:59.330 --> 00:02:01.412
freeing up app
servers more quickly.

00:02:01.412 --> 00:02:03.120
The services then
connect to the internet

00:02:03.120 --> 00:02:05.510
through yet another series
of distributed systems that

00:02:05.510 --> 00:02:07.592
provide features
such as edge caching.

00:02:07.592 --> 00:02:09.490
Well, how does this
work in production?

00:02:09.490 --> 00:02:12.850
For Song Pop, one engineer was
enough to identify the scaling

00:02:12.850 --> 00:02:14.670
road blocks and
quickly solve them,

00:02:14.670 --> 00:02:17.980
taking a product
from 0 to 2.4 million

00:02:17.980 --> 00:02:20.430
daily active users in
a year while working

00:02:20.430 --> 00:02:22.850
on adding features to the
game at the same time.

00:02:22.850 --> 00:02:26.880
Cloud Storage also helped as a
scalable, affordable, reliable,

00:02:26.880 --> 00:02:30.300
and high-performance
content delivery service.

00:02:30.300 --> 00:02:32.540
Many of you may
recognize this icon.

00:02:32.540 --> 00:02:34.600
What many of you may not
know is that Snapchat

00:02:34.600 --> 00:02:36.700
is hosted on App Engine.

00:02:36.700 --> 00:02:39.015
Here's the initial team of
four people from Snapchat

00:02:39.015 --> 00:02:41.260
that now uses App
Engine to exchange

00:02:41.260 --> 00:02:45.060
350 million photos per day.

00:02:45.060 --> 00:02:47.490
Compute Engine, our
infrastructure as a service,

00:02:47.490 --> 00:02:50.300
leverages the same reliable
highly-distributed data

00:02:50.300 --> 00:02:52.640
storage layers
used by App Engine,

00:02:52.640 --> 00:02:55.990
adding mountable persistent
disk storage to the mix.

00:02:55.990 --> 00:02:58.060
These talk to the
Compute Engine VMs,

00:02:58.060 --> 00:03:00.860
which are heavier weight than
the App Engine instances.

00:03:00.860 --> 00:03:03.070
On top of these we have
a powerful load balancer,

00:03:03.070 --> 00:03:06.260
which connects the
system to the internet.

00:03:06.260 --> 00:03:07.920
The graph highlights
the stability

00:03:07.920 --> 00:03:11.950
of the load-balancing service,
one million requests per second

00:03:11.950 --> 00:03:14.640
without any pre-warming.

00:03:14.640 --> 00:03:17.480
We can patch and maintain
hosts without any downtime

00:03:17.480 --> 00:03:19.070
to the running VM.

00:03:19.070 --> 00:03:20.490
When Right Scale
tested this, they

00:03:20.490 --> 00:03:25.880
saw nothing, which means that
the feature works as expected.

00:03:25.880 --> 00:03:28.510
And of course, we can
combine these solutions,

00:03:28.510 --> 00:03:30.150
allowing for App
Engine instances

00:03:30.150 --> 00:03:33.190
to run on Compute Engine's
VMs, opening the system up

00:03:33.190 --> 00:03:36.010
to doing massive compute tasks
with a powerful scheduling

00:03:36.010 --> 00:03:38.790
dynamic resource allocation
features of App Engine,

00:03:38.790 --> 00:03:41.100
the continuum of computing.

00:03:41.100 --> 00:03:43.790
So what brings us
to Google scale?

00:03:43.790 --> 00:03:46.950
It's the pipes and
wires, bolts and fiber,

00:03:46.950 --> 00:03:50.140
engineering excellence,
and raw computing power.

00:03:50.140 --> 00:03:52.010
This data center
in Finland is green

00:03:52.010 --> 00:03:53.770
because it is built
in an old mill.

00:03:53.770 --> 00:03:55.890
Using the pre-existing
water infrastructure

00:03:55.890 --> 00:03:59.510
to cool our server racks,
we've spent the last 15 years

00:03:59.510 --> 00:04:01.430
engineering beautiful solutions.

00:04:01.430 --> 00:04:04.710
Solutions we can
now share with you.

00:04:04.710 --> 00:04:08.430
Come to cloud.google.com where
you can see case studies.

00:04:08.430 --> 00:04:11.780
And go to
developers.google.com/cloud

00:04:11.780 --> 00:04:12.995
to check out our APIs.

00:04:15.770 --> 00:04:19.480
Come and leverage the
power of Google scale.

