WEBVTT
Kind: captions
Language: en

00:00:24.030 --> 00:00:26.260
GUEST SPEAKER 1: So the
original idea that we had

00:00:26.260 --> 00:00:29.660
was to have music
and lecture that

00:00:29.660 --> 00:00:33.430
was triggered by when you
got within a certain distance

00:00:33.430 --> 00:00:35.860
of it, it would just
turn on and start going.

00:00:35.860 --> 00:00:40.580
But we had some problems
with triggering this

00:00:40.580 --> 00:00:41.884
upon coming close enough.

00:00:41.884 --> 00:00:45.700
So this is the LED
lights that dance

00:00:45.700 --> 00:00:47.110
to the tempo of the music.

00:00:47.110 --> 00:00:49.360
GUEST SPEAKER 2: And one of
the cool things that we do

00:00:49.360 --> 00:00:51.010
is actually use
another environment

00:00:51.010 --> 00:00:53.410
as well in conjunction
with our Arduino.

00:00:53.410 --> 00:00:54.410
It's called Processing.

00:00:54.410 --> 00:00:57.660
So it's another
environment that allows

00:00:57.660 --> 00:01:02.782
you to integrate with other
software on the computer--

00:01:02.782 --> 00:01:04.500
[CLICK]

00:01:04.500 --> 00:01:05.710
--any MP3 that you have.

00:01:05.710 --> 00:01:07.330
So depending on
the frequency, you

00:01:07.330 --> 00:01:09.700
can assign a bass or a treble.

00:01:09.700 --> 00:01:13.525
And so that's what
assigns to each pin.

00:01:13.525 --> 00:01:15.610
And so it's a really
cool thing to know

00:01:15.610 --> 00:01:19.840
that there's other environments
that work alongside Arduino.

00:01:19.840 --> 00:01:21.820
And we figured that
within a couple hours

00:01:21.820 --> 00:01:24.026
and I think it
worked out nicely.

00:01:24.026 --> 00:01:26.510
GUEST SPEAKER 3: And then
along with the light show,

00:01:26.510 --> 00:01:31.405
there's also letters for MIT.

00:01:31.405 --> 00:01:33.530
GUEST SPEAKER 2: So we're
going to be playing "Back

00:01:33.530 --> 00:01:38.460
in Black," in honor of Tony
Stark, an alumni of MIT.

00:01:47.424 --> 00:01:51.408
[MUSIC PLAYING]

00:02:02.938 --> 00:02:04.854
GUEST SPEAKER 3: It goes
on for three minutes.

00:02:04.854 --> 00:02:05.850
[LAUGHTER]

00:02:05.850 --> 00:02:08.003
GUEST SPEAKER 1: It does.

00:02:08.003 --> 00:02:09.336
[MUSIC - AC/DC, "BACK IN BLACK"]

00:02:09.336 --> 00:02:10.336
[SINGING] Back in black.

00:02:10.336 --> 00:02:11.826
I hit the sack.

00:02:11.826 --> 00:02:14.316
I've been too long,
I'm glad to be back.

00:02:14.316 --> 00:02:17.304
Yes, I'm let loose
from the noose,

00:02:17.304 --> 00:02:21.288
that's kept me hanging about.

00:02:21.288 --> 00:02:24.287
AUDIENCE: Are the two different
colors of lights [INAUDIBLE]??

00:02:24.287 --> 00:02:25.620
GUEST SPEAKER 2: Yeah, they are.

00:02:25.620 --> 00:02:26.080
AUDIENCE: [INAUDIBLE]

00:02:26.080 --> 00:02:27.690
GUEST SPEAKER 2: Yeah, they're--

00:02:27.690 --> 00:02:29.550
so you could set those
values differently.

00:02:29.550 --> 00:02:33.480
Also, you could slice it up to
more frequencies and ranges.

00:02:33.480 --> 00:02:36.470
We almost had the
sensor working.

00:02:36.470 --> 00:02:41.640
It's just you need to have
the processing language.

00:02:41.640 --> 00:02:44.270
It doesn't have
all the libraries

00:02:44.270 --> 00:02:46.830
that the Arduino
environment has,

00:02:46.830 --> 00:02:50.280
so that's why the
sensor wouldn't work.

00:02:50.280 --> 00:02:52.170
Or you could also
try to create--

00:02:52.170 --> 00:02:55.620
next stage had the Arduino
run a processing file

00:02:55.620 --> 00:03:00.030
and activate the communication
between both softwares.

00:03:00.030 --> 00:03:02.530
So that would be the next stage
to get actual sensor working

00:03:02.530 --> 00:03:03.270
on Arduino.

00:03:03.270 --> 00:03:05.880
And then run the
processing environment

00:03:05.880 --> 00:03:06.915
that runs Arduino again.

00:03:06.915 --> 00:03:08.748
AUDIENCE: Due to the
processing environment,

00:03:08.748 --> 00:03:13.907
is the sensor for the sound
or is there a sound sensor?

00:03:13.907 --> 00:03:14.740
GUEST SPEAKER 2: No.

00:03:14.740 --> 00:03:18.220
So we have code that
slices the MP3 there.

00:03:18.220 --> 00:03:21.450
So that's where the
slicing code is.

00:03:21.450 --> 00:03:23.800
And the processing
has libraries where

00:03:23.800 --> 00:03:28.080
you do Arduino dot this
function, and Arduino library,

00:03:28.080 --> 00:03:28.910
and it runs it.

00:03:28.910 --> 00:03:30.110
AUDIENCE: I see.

00:03:30.110 --> 00:03:31.660
GUEST SPEAKER 2: Yeah.

