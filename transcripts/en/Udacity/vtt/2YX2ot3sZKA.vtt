WEBVTT
Kind: captions
Language: en

00:00:00.067 --> 00:00:05.475
So, broadly, as you and your team are thinking about what to put in the next 3,

00:00:05.475 --> 00:00:09.312
4, 5 generations of CUDA, you know, what's foremost in your mind?

00:00:09.312 --> 00:00:14.116
What are the sort of characteristics that you're thinking about to pick design features

00:00:14.116 --> 00:00:16.488
that are going to move CUDA forward?

00:00:16.488 --> 00:00:22.492
&gt;&gt;I'm really focused right now on the heterogeneity problem, that is,

00:00:22.492 --> 00:00:26.429
I've got this system where I've got processors which are good at one thing,

00:00:26.429 --> 00:00:30.581
serial processing, a processor which is good at another thing, parallel processing.

00:00:30.581 --> 00:00:35.605
They're 2 separate processors, and they live with their own separate execution spaces

00:00:35.605 --> 00:00:38.411
and memory and hardware and all that kind of thing,

00:00:38.411 --> 00:00:43.618
and bridging that gap to make it easier for the programmer to reason about what he wants to do

00:00:43.618 --> 00:00:47.215
and to express what he wants without having to fight the system.

00:00:47.215 --> 00:00:51.785
That's really where I think that the biggest advances need to be made.

00:00:51.785 --> 00:00:56.258
So I'm putting, I'm spending a lot of time thinking about memory models, for example,

00:00:56.258 --> 00:01:01.766
making life easier for people who, you know, you might not always know what memory you need to move,

00:01:01.766 --> 00:01:07.411
or you might find it inconvenient to figure out how do I move data while I'm computing on something else.

00:01:07.411 --> 00:01:12.342
All of those types of things that you have to think about in heterogeneous system.

00:01:12.342 --> 00:01:18.479
Anything I can do, and I am really not sure what that is yet, I am still working on it though.

00:01:18.479 --> 00:01:23.102
I really see the direction such that whatever we can do to make it that easier

00:01:23.102 --> 00:01:31.575
will make the system easier to program, and I think inevitably in the future there is a place where

00:01:31.575 --> 00:01:36.881
you've got specialist processors working on the task for which they are ideally suited,

00:01:36.881 --> 00:01:39.869
because that gives you the best performance for the power that you've got,

00:01:39.869 --> 00:01:44.914
the best performance for the silicone that you've put in there, it probably will solve the problem faster.

00:01:44.914 --> 00:01:48.585
You know if you got a massively parallel processor, do your parallel work on it,

00:01:48.585 --> 00:01:53.628
but it now means you've got this space where the programmer's no longer thinking about one type of program,

00:01:53.628 --> 00:01:57.555
he has to think about 2 or 3 or 4 or however many disparate things he's got.

00:01:57.555 --> 00:02:01.555
And you know, I've not yet seen a great solution to this. But, you know, we're working towards trying to find one.

