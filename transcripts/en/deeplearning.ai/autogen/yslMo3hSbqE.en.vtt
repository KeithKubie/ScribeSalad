WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.309 align:start position:0%
 
when<00:00:00.269><c> implementing</c><00:00:00.870><c> the</c><00:00:00.960><c> deep</c><00:00:01.140><c> neural</c>

00:00:01.309 --> 00:00:01.319 align:start position:0%
when implementing the deep neural
 

00:00:01.319 --> 00:00:03.590 align:start position:0%
when implementing the deep neural
network<00:00:01.800><c> one</c><00:00:02.100><c> of</c><00:00:02.250><c> the</c><00:00:02.370><c> debugging</c><00:00:02.760><c> tools</c><00:00:02.939><c> I</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
network one of the debugging tools I
 

00:00:03.600 --> 00:00:06.050 align:start position:0%
network one of the debugging tools I
often<00:00:04.110><c> use</c><00:00:04.319><c> to</c><00:00:04.350><c> check</c><00:00:05.220><c> the</c><00:00:05.370><c> correctness</c><00:00:05.700><c> of</c><00:00:05.850><c> my</c>

00:00:06.050 --> 00:00:06.060 align:start position:0%
often use to check the correctness of my
 

00:00:06.060 --> 00:00:08.179 align:start position:0%
often use to check the correctness of my
code<00:00:06.299><c> it's</c><00:00:06.660><c> a</c><00:00:06.930><c> total</c><00:00:07.350><c> piece</c><00:00:07.470><c> of</c><00:00:07.620><c> paper</c><00:00:07.799><c> and</c>

00:00:08.179 --> 00:00:08.189 align:start position:0%
code it's a total piece of paper and
 

00:00:08.189 --> 00:00:10.280 align:start position:0%
code it's a total piece of paper and
just<00:00:08.220><c> work</c><00:00:08.940><c> through</c><00:00:08.970><c> the</c><00:00:09.510><c> dimensions</c><00:00:10.080><c> and</c>

00:00:10.280 --> 00:00:10.290 align:start position:0%
just work through the dimensions and
 

00:00:10.290 --> 00:00:12.320 align:start position:0%
just work through the dimensions and
matrix<00:00:10.650><c> I'm</c><00:00:10.769><c> working</c><00:00:11.130><c> with</c><00:00:11.309><c> so</c><00:00:11.910><c> let</c><00:00:12.150><c> me</c><00:00:12.210><c> show</c>

00:00:12.320 --> 00:00:12.330 align:start position:0%
matrix I'm working with so let me show
 

00:00:12.330 --> 00:00:13.999 align:start position:0%
matrix I'm working with so let me show
you<00:00:12.420><c> how</c><00:00:12.540><c> to</c><00:00:12.570><c> do</c><00:00:12.809><c> that</c><00:00:12.960><c> since</c><00:00:13.410><c> I</c><00:00:13.559><c> hope</c><00:00:13.799><c> this</c>

00:00:13.999 --> 00:00:14.009 align:start position:0%
you how to do that since I hope this
 

00:00:14.009 --> 00:00:16.189 align:start position:0%
you how to do that since I hope this
will<00:00:14.370><c> make</c><00:00:14.730><c> it</c><00:00:14.849><c> easier</c><00:00:15.269><c> for</c><00:00:15.360><c> you</c><00:00:15.719><c> to</c><00:00:15.929><c> implement</c>

00:00:16.189 --> 00:00:16.199 align:start position:0%
will make it easier for you to implement
 

00:00:16.199 --> 00:00:19.220 align:start position:0%
will make it easier for you to implement
your<00:00:16.529><c> dependences</c><00:00:17.220><c> what</c><00:00:17.460><c> so</c><00:00:17.750><c> capital</c><00:00:18.750><c> L</c><00:00:18.930><c> is</c>

00:00:19.220 --> 00:00:19.230 align:start position:0%
your dependences what so capital L is
 

00:00:19.230 --> 00:00:21.380 align:start position:0%
your dependences what so capital L is
equal<00:00:19.590><c> to</c><00:00:19.650><c> five</c><00:00:19.920><c> and</c><00:00:20.250><c> come</c><00:00:20.820><c> down</c><00:00:21.000><c> quickly</c>

00:00:21.380 --> 00:00:21.390 align:start position:0%
equal to five and come down quickly
 

00:00:21.390 --> 00:00:23.320 align:start position:0%
equal to five and come down quickly
not<00:00:21.689><c> counting</c><00:00:21.869><c> the</c><00:00:22.140><c> input</c><00:00:22.500><c> layer</c><00:00:22.650><c> there</c><00:00:22.949><c> are</c>

00:00:23.320 --> 00:00:23.330 align:start position:0%
not counting the input layer there are
 

00:00:23.330 --> 00:00:26.390 align:start position:0%
not counting the input layer there are
five<00:00:24.330><c> layers</c><00:00:24.720><c> here</c><00:00:24.930><c> so</c><00:00:25.410><c> 400</c><00:00:25.920><c> layers</c><00:00:26.070><c> and</c><00:00:26.279><c> one</c>

00:00:26.390 --> 00:00:26.400 align:start position:0%
five layers here so 400 layers and one
 

00:00:26.400 --> 00:00:28.640 align:start position:0%
five layers here so 400 layers and one
output<00:00:26.789><c> layer</c><00:00:26.939><c> and</c><00:00:27.180><c> so</c><00:00:27.900><c> if</c><00:00:28.230><c> you</c><00:00:28.349><c> implement</c>

00:00:28.640 --> 00:00:28.650 align:start position:0%
output layer and so if you implement
 

00:00:28.650 --> 00:00:30.679 align:start position:0%
output layer and so if you implement
forward<00:00:29.130><c> propagation</c><00:00:29.550><c> the</c><00:00:29.939><c> first</c><00:00:30.210><c> step</c><00:00:30.449><c> will</c>

00:00:30.679 --> 00:00:30.689 align:start position:0%
forward propagation the first step will
 

00:00:30.689 --> 00:00:38.350 align:start position:0%
forward propagation the first step will
be<00:00:31.189><c> Z</c><00:00:32.189><c> 1</c><00:00:32.899><c> equals</c><00:00:34.760><c> W</c><00:00:35.760><c> 1</c><00:00:35.940><c> x</c><00:00:36.809><c> equal</c><00:00:37.680><c> features</c><00:00:38.010><c> X</c>

00:00:38.350 --> 00:00:38.360 align:start position:0%
be Z 1 equals W 1 x equal features X
 

00:00:38.360 --> 00:00:44.090 align:start position:0%
be Z 1 equals W 1 x equal features X
plus<00:00:39.890><c> B</c><00:00:40.890><c> 1</c><00:00:41.129><c> so</c><00:00:41.730><c> let's</c><00:00:42.149><c> ignore</c><00:00:42.329><c> the</c><00:00:42.719><c> on</c><00:00:43.100><c> bias</c>

00:00:44.090 --> 00:00:44.100 align:start position:0%
plus B 1 so let's ignore the on bias
 

00:00:44.100 --> 00:00:46.670 align:start position:0%
plus B 1 so let's ignore the on bias
terms<00:00:44.550><c> B</c><00:00:45.059><c> for</c><00:00:45.360><c> now</c><00:00:45.480><c> and</c><00:00:45.840><c> focus</c><00:00:45.989><c> on</c><00:00:46.469><c> the</c>

00:00:46.670 --> 00:00:46.680 align:start position:0%
terms B for now and focus on the
 

00:00:46.680 --> 00:00:49.959 align:start position:0%
terms B for now and focus on the
parameter<00:00:47.250><c> W</c><00:00:47.550><c> now</c><00:00:48.180><c> this</c><00:00:48.600><c> first</c><00:00:48.899><c> hidden</c><00:00:49.170><c> layer</c>

00:00:49.959 --> 00:00:49.969 align:start position:0%
parameter W now this first hidden layer
 

00:00:49.969 --> 00:00:54.590 align:start position:0%
parameter W now this first hidden layer
has<00:00:50.969><c> three</c><00:00:51.390><c> hidden</c><00:00:51.660><c> units</c><00:00:52.340><c> so</c><00:00:53.340><c> this</c><00:00:54.180><c> is</c><00:00:54.360><c> on</c>

00:00:54.590 --> 00:00:54.600 align:start position:0%
has three hidden units so this is on
 

00:00:54.600 --> 00:00:57.380 align:start position:0%
has three hidden units so this is on
layer<00:00:55.379><c> 0</c><00:00:55.410><c> layer</c><00:00:56.160><c> 1</c><00:00:56.430><c> layer</c><00:00:56.460><c> 2</c><00:00:56.699><c> layer</c><00:00:57.030><c> 3</c>

00:00:57.380 --> 00:00:57.390 align:start position:0%
layer 0 layer 1 layer 2 layer 3
 

00:00:57.390 --> 00:01:00.439 align:start position:0%
layer 0 layer 1 layer 2 layer 3
therefore<00:00:58.289><c> and</c><00:00:58.649><c> there</c><00:00:58.770><c> five</c><00:00:59.039><c> so</c><00:00:59.850><c> using</c><00:01:00.359><c> the</c>

00:01:00.439 --> 00:01:00.449 align:start position:0%
therefore and there five so using the
 

00:01:00.449 --> 00:01:02.750 align:start position:0%
therefore and there five so using the
notation<00:01:00.780><c> we</c><00:01:01.109><c> had</c><00:01:01.350><c> from</c><00:01:01.710><c> the</c><00:01:01.770><c> previous</c><00:01:02.129><c> video</c>

00:01:02.750 --> 00:01:02.760 align:start position:0%
notation we had from the previous video
 

00:01:02.760 --> 00:01:05.030 align:start position:0%
notation we had from the previous video
we<00:01:02.820><c> have</c><00:01:03.270><c> the</c><00:01:03.449><c> N</c><00:01:03.629><c> 1</c><00:01:04.019><c> which</c><00:01:04.350><c> is</c><00:01:04.500><c> the</c><00:01:04.680><c> number</c><00:01:05.010><c> of</c>

00:01:05.030 --> 00:01:05.040 align:start position:0%
we have the N 1 which is the number of
 

00:01:05.040 --> 00:01:08.560 align:start position:0%
we have the N 1 which is the number of
10<00:01:05.549><c> units</c><00:01:06.000><c> on</c><00:01:06.119><c> layer</c><00:01:06.299><c> 1</c><00:01:06.570><c> is</c><00:01:06.780><c> equal</c><00:01:07.439><c> to</c><00:01:07.470><c> 3</c><00:01:07.830><c> and</c>

00:01:08.560 --> 00:01:08.570 align:start position:0%
10 units on layer 1 is equal to 3 and
 

00:01:08.570 --> 00:01:12.649 align:start position:0%
10 units on layer 1 is equal to 3 and
here<00:01:09.570><c> we</c><00:01:09.810><c> would</c><00:01:09.990><c> have</c><00:01:10.140><c> 2</c><00:01:10.290><c> n</c><00:01:10.530><c> 2</c><00:01:10.830><c> is</c><00:01:11.490><c> equal</c><00:01:11.909><c> to</c><00:01:11.939><c> 5</c>

00:01:12.649 --> 00:01:12.659 align:start position:0%
here we would have 2 n 2 is equal to 5
 

00:01:12.659 --> 00:01:18.859 align:start position:0%
here we would have 2 n 2 is equal to 5
and<00:01:13.280><c> 3</c><00:01:14.280><c> is</c><00:01:15.240><c> equal</c><00:01:15.509><c> to</c><00:01:15.570><c> 4</c><00:01:15.869><c> and</c><00:01:16.430><c> 4</c><00:01:17.430><c> is</c><00:01:17.939><c> equal</c><00:01:18.330><c> to</c><00:01:18.540><c> 2</c>

00:01:18.859 --> 00:01:18.869 align:start position:0%
and 3 is equal to 4 and 4 is equal to 2
 

00:01:18.869 --> 00:01:23.929 align:start position:0%
and 3 is equal to 4 and 4 is equal to 2
and<00:01:19.140><c> n</c><00:01:19.979><c> 5</c><00:01:20.479><c> is</c><00:01:21.479><c> equal</c><00:01:21.659><c> to</c><00:01:21.869><c> 1</c><00:01:22.530><c> and</c><00:01:22.920><c> so</c><00:01:23.520><c> far</c><00:01:23.729><c> we've</c>

00:01:23.929 --> 00:01:23.939 align:start position:0%
and n 5 is equal to 1 and so far we've
 

00:01:23.939 --> 00:01:26.149 align:start position:0%
and n 5 is equal to 1 and so far we've
only<00:01:24.090><c> seen</c><00:01:24.390><c> your</c><00:01:24.810><c> networks</c><00:01:25.290><c> with</c><00:01:25.590><c> a</c><00:01:25.619><c> single</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
only seen your networks with a single
 

00:01:26.159 --> 00:01:28.429 align:start position:0%
only seen your networks with a single
output<00:01:26.549><c> unit</c><00:01:26.880><c> that</c><00:01:27.150><c> later</c><00:01:27.390><c> in</c><00:01:27.960><c> later</c><00:01:28.140><c> courses</c>

00:01:28.429 --> 00:01:28.439 align:start position:0%
output unit that later in later courses
 

00:01:28.439 --> 00:01:30.590 align:start position:0%
output unit that later in later courses
we'll<00:01:28.890><c> talk</c><00:01:29.070><c> about</c><00:01:29.220><c> neural</c><00:01:29.520><c> network</c><00:01:29.939><c> with</c>

00:01:30.590 --> 00:01:30.600 align:start position:0%
we'll talk about neural network with
 

00:01:30.600 --> 00:01:32.569 align:start position:0%
we'll talk about neural network with
multiple<00:01:30.750><c> output</c><00:01:31.380><c> units</c><00:01:31.710><c> as</c><00:01:31.829><c> well</c><00:01:32.009><c> and</c>

00:01:32.569 --> 00:01:32.579 align:start position:0%
multiple output units as well and
 

00:01:32.579 --> 00:01:36.410 align:start position:0%
multiple output units as well and
finally<00:01:33.409><c> for</c><00:01:34.409><c> the</c><00:01:34.740><c> input</c><00:01:35.220><c> layer</c><00:01:35.400><c> we</c><00:01:35.759><c> also</c><00:01:36.000><c> have</c>

00:01:36.410 --> 00:01:36.420 align:start position:0%
finally for the input layer we also have
 

00:01:36.420 --> 00:01:40.730 align:start position:0%
finally for the input layer we also have
and<00:01:36.659><c> 0</c><00:01:37.650><c> equals</c><00:01:38.369><c> and</c><00:01:38.579><c> X</c><00:01:38.790><c> is</c><00:01:39.479><c> equal</c><00:01:39.840><c> to</c><00:01:39.960><c> 2</c><00:01:40.140><c> so</c><00:01:40.560><c> now</c>

00:01:40.730 --> 00:01:40.740 align:start position:0%
and 0 equals and X is equal to 2 so now
 

00:01:40.740 --> 00:01:44.480 align:start position:0%
and 0 equals and X is equal to 2 so now
let's<00:01:41.189><c> think</c><00:01:41.280><c> about</c><00:01:41.490><c> the</c><00:01:41.970><c> dimensions</c><00:01:42.630><c> of</c><00:01:42.960><c> Z</c><00:01:43.770><c> W</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
let's think about the dimensions of Z W
 

00:01:44.490 --> 00:01:48.469 align:start position:0%
let's think about the dimensions of Z W
and<00:01:44.729><c> X</c><00:01:45.210><c> V</c><00:01:46.200><c> is</c><00:01:46.530><c> the</c><00:01:46.829><c> vector</c><00:01:46.979><c> of</c><00:01:47.189><c> activations</c><00:01:47.880><c> for</c>

00:01:48.469 --> 00:01:48.479 align:start position:0%
and X V is the vector of activations for
 

00:01:48.479 --> 00:01:53.149 align:start position:0%
and X V is the vector of activations for
this<00:01:49.140><c> first</c><00:01:49.560><c> hidden</c><00:01:50.310><c> layer</c><00:01:50.490><c> so</c><00:01:51.450><c> Z</c><00:01:52.409><c> is</c><00:01:52.740><c> going</c><00:01:53.040><c> to</c>

00:01:53.149 --> 00:01:53.159 align:start position:0%
this first hidden layer so Z is going to
 

00:01:53.159 --> 00:01:57.620 align:start position:0%
this first hidden layer so Z is going to
be<00:01:53.520><c> V</c><00:01:54.619><c> by</c><00:01:55.619><c> 1</c><00:01:55.920><c> is</c><00:01:56.130><c> going</c><00:01:56.399><c> to</c><00:01:56.490><c> be</c><00:01:56.579><c> a</c><00:01:56.670><c> 3</c><00:01:56.969><c> dimensional</c>

00:01:57.620 --> 00:01:57.630 align:start position:0%
be V by 1 is going to be a 3 dimensional
 

00:01:57.630 --> 00:02:01.910 align:start position:0%
be V by 1 is going to be a 3 dimensional
vector<00:01:58.439><c> so</c><00:01:58.770><c> I'm</c><00:01:59.520><c> going</c><00:01:59.670><c> to</c><00:01:59.700><c> write</c><00:01:59.880><c> it</c><00:02:00.060><c> as</c><00:02:00.210><c> a</c><00:02:00.920><c> n1</c>

00:02:01.910 --> 00:02:01.920 align:start position:0%
vector so I'm going to write it as a n1
 

00:02:01.920 --> 00:02:04.789 align:start position:0%
vector so I'm going to write it as a n1
by<00:02:02.729><c> 1</c><00:02:03.030><c> dimensional</c><00:02:03.630><c> vector</c><00:02:03.689><c> and</c><00:02:04.229><c> 1</c><00:02:04.439><c> by</c><00:02:04.590><c> 1</c>

00:02:04.789 --> 00:02:04.799 align:start position:0%
by 1 dimensional vector and 1 by 1
 

00:02:04.799 --> 00:02:07.280 align:start position:0%
by 1 dimensional vector and 1 by 1
dimensional<00:02:05.280><c> matrix</c><00:02:05.670><c> is</c><00:02:06.090><c> 3</c><00:02:06.450><c> 3</c><00:02:06.630><c> by</c><00:02:06.840><c> 1</c><00:02:06.869><c> in</c><00:02:07.170><c> this</c>

00:02:07.280 --> 00:02:07.290 align:start position:0%
dimensional matrix is 3 3 by 1 in this
 

00:02:07.290 --> 00:02:07.770 align:start position:0%
dimensional matrix is 3 3 by 1 in this
case

00:02:07.770 --> 00:02:07.780 align:start position:0%
case
 

00:02:07.780 --> 00:02:10.950 align:start position:0%
case
now<00:02:08.500><c> how</c><00:02:08.950><c> about</c><00:02:09.039><c> the</c><00:02:09.310><c> input</c><00:02:09.670><c> features</c><00:02:10.030><c> X</c><00:02:10.240><c> X</c><00:02:10.539><c> we</c>

00:02:10.950 --> 00:02:10.960 align:start position:0%
now how about the input features X X we
 

00:02:10.960 --> 00:02:13.440 align:start position:0%
now how about the input features X X we
have<00:02:11.110><c> two</c><00:02:11.320><c> input</c><00:02:11.710><c> features</c><00:02:12.070><c> so</c><00:02:12.400><c> X</c><00:02:12.670><c> is</c><00:02:13.000><c> in</c><00:02:13.300><c> this</c>

00:02:13.440 --> 00:02:13.450 align:start position:0%
have two input features so X is in this
 

00:02:13.450 --> 00:02:16.710 align:start position:0%
have two input features so X is in this
example<00:02:13.780><c> two</c><00:02:14.320><c> by</c><00:02:14.530><c> one</c><00:02:14.910><c> but</c><00:02:15.910><c> more</c><00:02:16.030><c> generally</c><00:02:16.570><c> it</c>

00:02:16.710 --> 00:02:16.720 align:start position:0%
example two by one but more generally it
 

00:02:16.720 --> 00:02:20.250 align:start position:0%
example two by one but more generally it
will<00:02:16.780><c> be</c><00:02:16.930><c> n</c><00:02:17.110><c> 0</c><00:02:17.710><c> by</c><00:02:17.980><c> 1</c><00:02:18.400><c> so</c><00:02:18.940><c> what</c><00:02:19.210><c> we</c><00:02:19.330><c> need</c><00:02:19.570><c> is</c><00:02:19.810><c> for</c>

00:02:20.250 --> 00:02:20.260 align:start position:0%
will be n 0 by 1 so what we need is for
 

00:02:20.260 --> 00:02:23.280 align:start position:0%
will be n 0 by 1 so what we need is for
the<00:02:20.350><c> matrix</c><00:02:20.740><c> w1</c><00:02:21.400><c> to</c><00:02:21.670><c> be</c><00:02:21.790><c> something</c><00:02:22.240><c> that</c><00:02:22.570><c> when</c>

00:02:23.280 --> 00:02:23.290 align:start position:0%
the matrix w1 to be something that when
 

00:02:23.290 --> 00:02:25.940 align:start position:0%
the matrix w1 to be something that when
we<00:02:23.410><c> multiply</c><00:02:23.590><c> and</c><00:02:24.190><c> n</c><00:02:24.400><c> 0</c><00:02:24.880><c> by</c><00:02:24.940><c> 1</c><00:02:25.300><c> vector</c><00:02:25.330><c> to</c><00:02:25.900><c> it</c>

00:02:25.940 --> 00:02:25.950 align:start position:0%
we multiply and n 0 by 1 vector to it
 

00:02:25.950 --> 00:02:30.300 align:start position:0%
we multiply and n 0 by 1 vector to it
begin<00:02:26.950><c> an</c><00:02:27.070><c> one</c><00:02:27.520><c> by</c><00:02:27.760><c> one</c><00:02:28.000><c> vector</c><00:02:28.980><c> right</c><00:02:29.980><c> so</c><00:02:30.250><c> you</c>

00:02:30.300 --> 00:02:30.310 align:start position:0%
begin an one by one vector right so you
 

00:02:30.310 --> 00:02:34.110 align:start position:0%
begin an one by one vector right so you
have<00:02:30.550><c> sort</c><00:02:30.940><c> of</c><00:02:31.030><c> a</c><00:02:32.490><c> three</c><00:02:33.490><c> dimensional</c><00:02:33.970><c> vector</c>

00:02:34.110 --> 00:02:34.120 align:start position:0%
have sort of a three dimensional vector
 

00:02:34.120 --> 00:02:37.680 align:start position:0%
have sort of a three dimensional vector
equals<00:02:35.050><c> something</c><00:02:35.620><c> times</c><00:02:36.550><c> a</c><00:02:36.880><c> 2</c><00:02:37.510><c> dimensional</c>

00:02:37.680 --> 00:02:37.690 align:start position:0%
equals something times a 2 dimensional
 

00:02:37.690 --> 00:02:41.010 align:start position:0%
equals something times a 2 dimensional
vector<00:02:38.380><c> and</c><00:02:38.560><c> so</c><00:02:38.890><c> by</c><00:02:39.130><c> the</c><00:02:39.190><c> rules</c><00:02:40.090><c> of</c><00:02:40.300><c> matrix</c>

00:02:41.010 --> 00:02:41.020 align:start position:0%
vector and so by the rules of matrix
 

00:02:41.020 --> 00:02:44.100 align:start position:0%
vector and so by the rules of matrix
multiplication<00:02:41.250><c> this</c><00:02:42.250><c> has</c><00:02:42.489><c> got</c><00:02:42.760><c> to</c><00:02:42.940><c> be</c><00:02:42.970><c> a</c><00:02:43.330><c> me</c>

00:02:44.100 --> 00:02:44.110 align:start position:0%
multiplication this has got to be a me
 

00:02:44.110 --> 00:02:49.170 align:start position:0%
multiplication this has got to be a me
by<00:02:44.380><c> 2</c><00:02:44.459><c> matrix</c><00:02:47.430><c> right</c><00:02:48.430><c> because</c><00:02:48.760><c> the</c><00:02:48.850><c> 3</c><00:02:49.000><c> by</c><00:02:49.150><c> 2</c>

00:02:49.170 --> 00:02:49.180 align:start position:0%
by 2 matrix right because the 3 by 2
 

00:02:49.180 --> 00:02:52.470 align:start position:0%
by 2 matrix right because the 3 by 2
matrix<00:02:49.540><c> times</c><00:02:50.290><c> a</c><00:02:50.470><c> 2</c><00:02:50.650><c> by</c><00:02:50.830><c> 1</c><00:02:51.010><c> matrix</c><00:02:51.070><c> or</c><00:02:51.760><c> times</c><00:02:52.360><c> a</c>

00:02:52.470 --> 00:02:52.480 align:start position:0%
matrix times a 2 by 1 matrix or times a
 

00:02:52.480 --> 00:02:55.050 align:start position:0%
matrix times a 2 by 1 matrix or times a
2<00:02:52.600><c> or</c><00:02:52.780><c> one</c><00:02:52.810><c> vector</c><00:02:53.320><c> that</c><00:02:53.890><c> gives</c><00:02:54.190><c> you</c><00:02:54.400><c> a</c><00:02:54.430><c> fee</c><00:02:54.880><c> by</c>

00:02:55.050 --> 00:02:55.060 align:start position:0%
2 or one vector that gives you a fee by
 

00:02:55.060 --> 00:02:55.770 align:start position:0%
2 or one vector that gives you a fee by
one<00:02:55.300><c> vector</c>

00:02:55.770 --> 00:02:55.780 align:start position:0%
one vector
 

00:02:55.780 --> 00:02:58.110 align:start position:0%
one vector
and<00:02:55.959><c> more</c><00:02:56.650><c> generally</c><00:02:56.680><c> this</c><00:02:57.489><c> is</c><00:02:57.640><c> going</c><00:02:57.880><c> to</c><00:02:58.000><c> be</c>

00:02:58.110 --> 00:02:58.120 align:start position:0%
and more generally this is going to be
 

00:02:58.120 --> 00:03:03.150 align:start position:0%
and more generally this is going to be
an<00:02:58.330><c> N</c><00:02:58.900><c> 1</c><00:02:59.320><c> by</c><00:02:59.950><c> n</c><00:03:00.220><c> 0</c><00:03:00.690><c> dimensional</c><00:03:01.690><c> matrix</c><00:03:02.050><c> so</c><00:03:02.950><c> what</c>

00:03:03.150 --> 00:03:03.160 align:start position:0%
an N 1 by n 0 dimensional matrix so what
 

00:03:03.160 --> 00:03:04.800 align:start position:0%
an N 1 by n 0 dimensional matrix so what
we<00:03:03.310><c> think</c><00:03:03.550><c> about</c><00:03:03.790><c> here</c><00:03:04.120><c> is</c><00:03:04.330><c> that</c><00:03:04.360><c> the</c>

00:03:04.800 --> 00:03:04.810 align:start position:0%
we think about here is that the
 

00:03:04.810 --> 00:03:11.270 align:start position:0%
we think about here is that the
dimensions<00:03:05.350><c> of</c><00:03:05.530><c> w1</c><00:03:06.330><c> has</c><00:03:07.330><c> to</c><00:03:07.600><c> be</c><00:03:07.750><c> N</c><00:03:07.989><c> 1</c><00:03:09.600><c> by</c><00:03:10.600><c> n</c><00:03:10.930><c> 0</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
dimensions of w1 has to be N 1 by n 0
 

00:03:11.280 --> 00:03:16.979 align:start position:0%
dimensions of w1 has to be N 1 by n 0
and<00:03:12.280><c> more</c><00:03:13.209><c> generally</c><00:03:13.750><c> the</c><00:03:14.140><c> dimensions</c><00:03:14.709><c> of</c><00:03:15.989><c> WL</c>

00:03:16.979 --> 00:03:16.989 align:start position:0%
and more generally the dimensions of WL
 

00:03:16.989 --> 00:03:20.670 align:start position:0%
and more generally the dimensions of WL
must<00:03:17.530><c> be</c><00:03:17.680><c> NF</c><00:03:18.100><c> L</c><00:03:18.400><c> by</c><00:03:18.790><c> n</c><00:03:19.030><c> L</c><00:03:19.299><c> minus</c><00:03:19.750><c> 1</c><00:03:20.019><c> so</c><00:03:20.470><c> for</c>

00:03:20.670 --> 00:03:20.680 align:start position:0%
must be NF L by n L minus 1 so for
 

00:03:20.680 --> 00:03:24.150 align:start position:0%
must be NF L by n L minus 1 so for
example<00:03:21.100><c> the</c><00:03:21.700><c> dimensions</c><00:03:22.209><c> of</c><00:03:22.390><c> W</c><00:03:22.750><c> 2</c><00:03:22.980><c> for</c><00:03:23.980><c> this</c>

00:03:24.150 --> 00:03:24.160 align:start position:0%
example the dimensions of W 2 for this
 

00:03:24.160 --> 00:03:31.170 align:start position:0%
example the dimensions of W 2 for this
it<00:03:24.489><c> will</c><00:03:24.910><c> have</c><00:03:25.120><c> to</c><00:03:25.299><c> be</c><00:03:26.489><c> 5</c><00:03:27.489><c> by</c><00:03:28.239><c> 3</c><00:03:28.780><c> or</c><00:03:29.880><c> it</c><00:03:30.880><c> will</c><00:03:31.030><c> be</c>

00:03:31.170 --> 00:03:31.180 align:start position:0%
it will have to be 5 by 3 or it will be
 

00:03:31.180 --> 00:03:36.539 align:start position:0%
it will have to be 5 by 3 or it will be
n<00:03:31.390><c> 2</c><00:03:32.730><c> by</c><00:03:33.730><c> N</c><00:03:33.760><c> 1</c><00:03:34.830><c> because</c><00:03:35.830><c> we're</c><00:03:36.250><c> going</c><00:03:36.430><c> to</c>

00:03:36.539 --> 00:03:36.549 align:start position:0%
n 2 by N 1 because we're going to
 

00:03:36.549 --> 00:03:47.520 align:start position:0%
n 2 by N 1 because we're going to
compute<00:03:37.320><c> Z</c><00:03:38.320><c> 2</c><00:03:38.590><c> as</c><00:03:41.310><c> W</c><00:03:42.310><c> 2</c><00:03:42.489><c> times</c><00:03:43.360><c> a</c><00:03:45.150><c> 1</c><00:03:46.150><c> and</c><00:03:46.530><c> again</c>

00:03:47.520 --> 00:03:47.530 align:start position:0%
compute Z 2 as W 2 times a 1 and again
 

00:03:47.530 --> 00:03:51.630 align:start position:0%
compute Z 2 as W 2 times a 1 and again
this<00:03:47.739><c> ignore</c><00:03:48.489><c> the</c><00:03:48.640><c> bias</c><00:03:49.000><c> for</c><00:03:49.180><c> now</c><00:03:50.220><c> but</c><00:03:51.220><c> so</c><00:03:51.400><c> this</c>

00:03:51.630 --> 00:03:51.640 align:start position:0%
this ignore the bias for now but so this
 

00:03:51.640 --> 00:03:55.860 align:start position:0%
this ignore the bias for now but so this
is<00:03:51.850><c> going</c><00:03:52.060><c> to</c><00:03:52.239><c> be</c><00:03:52.360><c> 3</c><00:03:52.750><c> by</c><00:03:52.989><c> 1</c><00:03:53.019><c> and</c><00:03:54.420><c> we</c><00:03:55.420><c> need</c><00:03:55.660><c> this</c>

00:03:55.860 --> 00:03:55.870 align:start position:0%
is going to be 3 by 1 and we need this
 

00:03:55.870 --> 00:04:00.840 align:start position:0%
is going to be 3 by 1 and we need this
to<00:03:56.230><c> be</c><00:03:56.260><c> 5</c><00:03:56.739><c> by</c><00:03:56.950><c> 1</c><00:03:57.220><c> and</c><00:03:57.489><c> so</c><00:03:58.299><c> this</c><00:03:58.630><c> had</c><00:03:58.989><c> better</c><00:03:59.200><c> be</c><00:03:59.850><c> 5</c>

00:04:00.840 --> 00:04:00.850 align:start position:0%
to be 5 by 1 and so this had better be 5
 

00:04:00.850 --> 00:04:07.170 align:start position:0%
to be 5 by 1 and so this had better be 5
by<00:04:01.150><c> 3</c><00:04:01.570><c> and</c><00:04:02.730><c> similarly</c><00:04:03.930><c> W</c><00:04:04.930><c> 3</c><00:04:05.310><c> will</c><00:04:06.310><c> be</c><00:04:06.489><c> is</c><00:04:06.940><c> really</c>

00:04:07.170 --> 00:04:07.180 align:start position:0%
by 3 and similarly W 3 will be is really
 

00:04:07.180 --> 00:04:11.490 align:start position:0%
by 3 and similarly W 3 will be is really
the<00:04:07.510><c> dimension</c><00:04:08.260><c> of</c><00:04:08.760><c> the</c><00:04:09.760><c> next</c><00:04:10.090><c> layer</c><00:04:10.269><c> comma</c><00:04:10.900><c> 2</c>

00:04:11.490 --> 00:04:11.500 align:start position:0%
the dimension of the next layer comma 2
 

00:04:11.500 --> 00:04:13.830 align:start position:0%
the dimension of the next layer comma 2
dimension<00:04:12.010><c> of</c><00:04:12.220><c> the</c><00:04:12.700><c> previous</c><00:04:13.150><c> layer</c><00:04:13.299><c> so</c><00:04:13.780><c> this</c>

00:04:13.830 --> 00:04:13.840 align:start position:0%
dimension of the previous layer so this
 

00:04:13.840 --> 00:04:21.270 align:start position:0%
dimension of the previous layer so this
is<00:04:14.049><c> going</c><00:04:14.290><c> to</c><00:04:14.380><c> be</c><00:04:14.790><c> 4</c><00:04:15.790><c> by</c><00:04:15.940><c> 5</c><00:04:17.520><c> w</c><00:04:18.520><c> 4</c>

00:04:21.270 --> 00:04:21.280 align:start position:0%
 
 

00:04:21.280 --> 00:04:30.940 align:start position:0%
 
is<00:04:22.280><c> going</c><00:04:22.610><c> to</c><00:04:22.790><c> be</c><00:04:23.410><c> on</c><00:04:26.170><c> 2x4</c><00:04:27.170><c> and</c><00:04:28.330><c> w5</c><00:04:29.380><c> is</c><00:04:30.380><c> going</c><00:04:30.800><c> to</c>

00:04:30.940 --> 00:04:30.950 align:start position:0%
is going to be on 2x4 and w5 is going to
 

00:04:30.950 --> 00:04:35.980 align:start position:0%
is going to be on 2x4 and w5 is going to
be<00:04:31.160><c> 1</c><00:04:32.090><c> by</c><00:04:32.330><c> 2</c><00:04:32.500><c> okay</c><00:04:33.500><c> so</c><00:04:33.940><c> the</c><00:04:34.940><c> general</c><00:04:35.330><c> formula</c><00:04:35.660><c> to</c>

00:04:35.980 --> 00:04:35.990 align:start position:0%
be 1 by 2 okay so the general formula to
 

00:04:35.990 --> 00:04:37.690 align:start position:0%
be 1 by 2 okay so the general formula to
check<00:04:36.260><c> is</c><00:04:36.530><c> that</c><00:04:36.590><c> when</c><00:04:37.100><c> you're</c><00:04:37.220><c> implementing</c>

00:04:37.690 --> 00:04:37.700 align:start position:0%
check is that when you're implementing
 

00:04:37.700 --> 00:04:40.660 align:start position:0%
check is that when you're implementing
the<00:04:38.570><c> matrix</c><00:04:38.750><c> for</c><00:04:39.260><c> a</c><00:04:39.290><c> layer</c><00:04:39.500><c> L</c><00:04:39.770><c> to</c><00:04:40.520><c> the</c>

00:04:40.660 --> 00:04:40.670 align:start position:0%
the matrix for a layer L to the
 

00:04:40.670 --> 00:04:46.050 align:start position:0%
the matrix for a layer L to the
dimension<00:04:41.180><c> of</c><00:04:41.330><c> that</c><00:04:41.360><c> matrix</c><00:04:41.690><c> B</c><00:04:42.260><c> and</c><00:04:42.520><c> L</c><00:04:43.600><c> by</c><00:04:44.600><c> n</c><00:04:44.870><c> L</c>

00:04:46.050 --> 00:04:46.060 align:start position:0%
dimension of that matrix B and L by n L
 

00:04:46.060 --> 00:04:50.530 align:start position:0%
dimension of that matrix B and L by n L
minus<00:04:47.060><c> 1</c><00:04:47.710><c> now</c><00:04:48.710><c> let's</c><00:04:49.520><c> think</c><00:04:50.150><c> about</c><00:04:50.270><c> the</c>

00:04:50.530 --> 00:04:50.540 align:start position:0%
minus 1 now let's think about the
 

00:04:50.540 --> 00:04:55.960 align:start position:0%
minus 1 now let's think about the
dimension<00:04:51.050><c> of</c><00:04:51.260><c> this</c><00:04:51.590><c> vector</c><00:04:51.650><c> B</c><00:04:53.140><c> this</c><00:04:54.610><c> is</c><00:04:55.610><c> going</c>

00:04:55.960 --> 00:04:55.970 align:start position:0%
dimension of this vector B this is going
 

00:04:55.970 --> 00:04:59.560 align:start position:0%
dimension of this vector B this is going
to<00:04:56.150><c> be</c><00:04:56.330><c> a</c><00:04:56.570><c> 3</c><00:04:57.260><c> by</c><00:04:57.290><c> 1</c><00:04:57.470><c> vector</c><00:04:57.970><c> so</c><00:04:58.970><c> you</c><00:04:59.030><c> have</c><00:04:59.300><c> to</c><00:04:59.420><c> add</c>

00:04:59.560 --> 00:04:59.570 align:start position:0%
to be a 3 by 1 vector so you have to add
 

00:04:59.570 --> 00:05:03.340 align:start position:0%
to be a 3 by 1 vector so you have to add
that<00:04:59.600><c> to</c><00:05:00.200><c> another</c><00:05:00.610><c> 3</c><00:05:01.610><c> by</c><00:05:01.790><c> 1</c><00:05:01.820><c> vector</c><00:05:02.030><c> in</c><00:05:02.900><c> order</c>

00:05:03.340 --> 00:05:03.350 align:start position:0%
that to another 3 by 1 vector in order
 

00:05:03.350 --> 00:05:06.720 align:start position:0%
that to another 3 by 1 vector in order
to<00:05:03.620><c> get</c><00:05:03.860><c> a</c><00:05:03.890><c> 3</c><00:05:04.460><c> by</c><00:05:04.610><c> 1</c><00:05:04.640><c> vector</c><00:05:04.820><c> as</c><00:05:05.420><c> the</c><00:05:05.690><c> output</c><00:05:05.900><c> or</c>

00:05:06.720 --> 00:05:06.730 align:start position:0%
to get a 3 by 1 vector as the output or
 

00:05:06.730 --> 00:05:09.640 align:start position:0%
to get a 3 by 1 vector as the output or
in<00:05:07.730><c> this</c><00:05:07.910><c> example</c><00:05:08.270><c> you</c><00:05:08.750><c> need</c><00:05:08.900><c> to</c><00:05:08.960><c> add</c><00:05:09.170><c> this</c>

00:05:09.640 --> 00:05:09.650 align:start position:0%
in this example you need to add this
 

00:05:09.650 --> 00:05:12.580 align:start position:0%
in this example you need to add this
this<00:05:09.710><c> is</c><00:05:10.130><c> going</c><00:05:10.250><c> to</c><00:05:10.400><c> be</c><00:05:10.460><c> 5</c><00:05:10.760><c> by</c><00:05:10.940><c> 1</c><00:05:11.290><c> so</c><00:05:12.290><c> it's</c><00:05:12.440><c> going</c>

00:05:12.580 --> 00:05:12.590 align:start position:0%
this is going to be 5 by 1 so it's going
 

00:05:12.590 --> 00:05:15.670 align:start position:0%
this is going to be 5 by 1 so it's going
to<00:05:12.650><c> be</c><00:05:12.770><c> another</c><00:05:13.040><c> 5</c><00:05:13.700><c> by</c><00:05:13.880><c> 1</c><00:05:14.060><c> vector</c><00:05:14.090><c> in</c><00:05:14.870><c> order</c><00:05:15.350><c> for</c>

00:05:15.670 --> 00:05:15.680 align:start position:0%
to be another 5 by 1 vector in order for
 

00:05:15.680 --> 00:05:17.440 align:start position:0%
to be another 5 by 1 vector in order for
you<00:05:16.100><c> know</c><00:05:16.190><c> the</c><00:05:16.340><c> sum</c><00:05:16.610><c> of</c><00:05:16.640><c> these</c><00:05:16.940><c> two</c><00:05:17.180><c> things</c>

00:05:17.440 --> 00:05:17.450 align:start position:0%
you know the sum of these two things
 

00:05:17.450 --> 00:05:20.050 align:start position:0%
you know the sum of these two things
that<00:05:17.720><c> have</c><00:05:17.900><c> in</c><00:05:18.050><c> the</c><00:05:18.110><c> boxes</c><00:05:18.560><c> to</c><00:05:18.830><c> be</c><00:05:18.860><c> honest</c><00:05:19.820><c> L</c>

00:05:20.050 --> 00:05:20.060 align:start position:0%
that have in the boxes to be honest L
 

00:05:20.060 --> 00:05:23.770 align:start position:0%
that have in the boxes to be honest L
divided<00:05:20.450><c> by</c><00:05:20.480><c> 1</c><00:05:20.870><c> vector</c><00:05:22.210><c> so</c><00:05:23.210><c> the</c><00:05:23.330><c> more</c><00:05:23.510><c> general</c>

00:05:23.770 --> 00:05:23.780 align:start position:0%
divided by 1 vector so the more general
 

00:05:23.780 --> 00:05:26.050 align:start position:0%
divided by 1 vector so the more general
rule<00:05:23.930><c> is</c><00:05:24.260><c> that</c><00:05:24.320><c> um</c><00:05:25.130><c> in</c><00:05:25.490><c> the</c><00:05:25.580><c> example</c><00:05:25.910><c> on</c><00:05:25.940><c> the</c>

00:05:26.050 --> 00:05:26.060 align:start position:0%
rule is that um in the example on the
 

00:05:26.060 --> 00:05:32.260 align:start position:0%
rule is that um in the example on the
Left<00:05:26.270><c> B</c><00:05:26.720><c> 1</c><00:05:26.990><c> is</c><00:05:27.260><c> N</c><00:05:28.419><c> 1</c><00:05:29.470><c> by</c><00:05:30.470><c> 1</c><00:05:30.740><c> right</c><00:05:31.460><c> that's</c><00:05:31.790><c> 3</c><00:05:32.060><c> by</c><00:05:32.240><c> 1</c>

00:05:32.260 --> 00:05:32.270 align:start position:0%
Left B 1 is N 1 by 1 right that's 3 by 1
 

00:05:32.270 --> 00:05:36.850 align:start position:0%
Left B 1 is N 1 by 1 right that's 3 by 1
and<00:05:33.050><c> in</c><00:05:34.010><c> the</c><00:05:34.130><c> second</c><00:05:34.430><c> example</c><00:05:34.580><c> it</c><00:05:35.150><c> is</c><00:05:35.570><c> on</c><00:05:35.860><c> this</c>

00:05:36.850 --> 00:05:36.860 align:start position:0%
and in the second example it is on this
 

00:05:36.860 --> 00:05:43.330 align:start position:0%
and in the second example it is on this
is<00:05:37.820><c> n</c><00:05:38.270><c> 2</c><00:05:39.250><c> by</c><00:05:40.250><c> 1</c><00:05:40.490><c> and</c><00:05:41.290><c> so</c><00:05:42.290><c> the</c><00:05:42.500><c> more</c><00:05:42.710><c> general</c><00:05:43.130><c> case</c>

00:05:43.330 --> 00:05:43.340 align:start position:0%
is n 2 by 1 and so the more general case
 

00:05:43.340 --> 00:05:49.090 align:start position:0%
is n 2 by 1 and so the more general case
is<00:05:43.610><c> that</c><00:05:43.870><c> BL</c><00:05:44.870><c> should</c><00:05:45.680><c> be</c><00:05:45.919><c> n</c><00:05:46.570><c> L</c><00:05:48.070><c> by</c><00:05:49.070><c> 1</c>

00:05:49.090 --> 00:05:49.100 align:start position:0%
is that BL should be n L by 1
 

00:05:49.100 --> 00:05:52.030 align:start position:0%
is that BL should be n L by 1
dimensional<00:05:50.020><c> so</c><00:05:51.020><c> hopefully</c><00:05:51.590><c> these</c><00:05:51.800><c> two</c>

00:05:52.030 --> 00:05:52.040 align:start position:0%
dimensional so hopefully these two
 

00:05:52.040 --> 00:05:54.190 align:start position:0%
dimensional so hopefully these two
equations<00:05:52.610><c> help</c><00:05:53.240><c> you</c><00:05:53.419><c> to</c><00:05:53.570><c> double</c><00:05:53.930><c> check</c><00:05:53.960><c> that</c>

00:05:54.190 --> 00:05:54.200 align:start position:0%
equations help you to double check that
 

00:05:54.200 --> 00:05:57.670 align:start position:0%
equations help you to double check that
the<00:05:54.500><c> dimensions</c><00:05:55.070><c> of</c><00:05:55.250><c> your</c><00:05:55.310><c> matrices</c><00:05:56.169><c> W</c><00:05:57.169><c> as</c>

00:05:57.670 --> 00:05:57.680 align:start position:0%
the dimensions of your matrices W as
 

00:05:57.680 --> 00:06:00.190 align:start position:0%
the dimensions of your matrices W as
well<00:05:58.340><c> as</c><00:05:58.520><c> of</c><00:05:58.790><c> your</c><00:05:59.000><c> vectors</c><00:05:59.510><c> P</c><00:05:59.810><c> are</c><00:06:00.140><c> the</c>

00:06:00.190 --> 00:06:00.200 align:start position:0%
well as of your vectors P are the
 

00:06:00.200 --> 00:06:02.800 align:start position:0%
well as of your vectors P are the
correct<00:06:00.890><c> dimensions</c><00:06:01.400><c> and</c><00:06:01.700><c> of</c><00:06:02.330><c> course</c><00:06:02.570><c> if</c>

00:06:02.800 --> 00:06:02.810 align:start position:0%
correct dimensions and of course if
 

00:06:02.810 --> 00:06:04.690 align:start position:0%
correct dimensions and of course if
you're<00:06:03.169><c> implementing</c><00:06:03.680><c> back</c><00:06:04.100><c> propagation</c>

00:06:04.690 --> 00:06:04.700 align:start position:0%
you're implementing back propagation
 

00:06:04.700 --> 00:06:08.770 align:start position:0%
you're implementing back propagation
then<00:06:05.540><c> the</c><00:06:05.720><c> dimensions</c><00:06:06.320><c> of</c><00:06:06.700><c> DW</c><00:06:07.700><c> should</c><00:06:08.570><c> be</c><00:06:08.690><c> the</c>

00:06:08.770 --> 00:06:08.780 align:start position:0%
then the dimensions of DW should be the
 

00:06:08.780 --> 00:06:12.850 align:start position:0%
then the dimensions of DW should be the
same<00:06:08.990><c> as</c><00:06:09.169><c> the</c><00:06:09.260><c> dimension</c><00:06:09.380><c> of</c><00:06:09.919><c> W</c><00:06:10.490><c> so</c><00:06:10.880><c> DW</c><00:06:11.860><c> should</c>

00:06:12.850 --> 00:06:12.860 align:start position:0%
same as the dimension of W so DW should
 

00:06:12.860 --> 00:06:17.700 align:start position:0%
same as the dimension of W so DW should
be<00:06:13.010><c> the</c><00:06:13.160><c> same</c><00:06:13.400><c> dimension</c><00:06:13.640><c> as</c><00:06:14.590><c> W</c><00:06:15.590><c> and</c><00:06:15.800><c> D</c><00:06:16.580><c> D</c>

00:06:17.700 --> 00:06:17.710 align:start position:0%
be the same dimension as W and D D
 

00:06:17.710 --> 00:06:22.510 align:start position:0%
be the same dimension as W and D D
should<00:06:18.710><c> be</c><00:06:18.770><c> the</c><00:06:18.979><c> same</c><00:06:19.160><c> dimension</c><00:06:19.760><c> as</c><00:06:20.110><c> B</c><00:06:21.520><c> now</c>

00:06:22.510 --> 00:06:22.520 align:start position:0%
should be the same dimension as B now
 

00:06:22.520 --> 00:06:24.610 align:start position:0%
should be the same dimension as B now
the<00:06:22.580><c> other</c><00:06:23.000><c> key</c><00:06:23.390><c> set</c><00:06:23.660><c> of</c><00:06:23.780><c> quantities</c><00:06:24.320><c> whose</c>

00:06:24.610 --> 00:06:24.620 align:start position:0%
the other key set of quantities whose
 

00:06:24.620 --> 00:06:28.870 align:start position:0%
the other key set of quantities whose
dimensions<00:06:25.190><c> to</c><00:06:25.370><c> check</c><00:06:25.610><c> are</c><00:06:25.880><c> these</c><00:06:26.630><c> Z</c><00:06:27.430><c> X</c><00:06:28.430><c> as</c>

00:06:28.870 --> 00:06:28.880 align:start position:0%
dimensions to check are these Z X as
 

00:06:28.880 --> 00:06:32.300 align:start position:0%
dimensions to check are these Z X as
well<00:06:29.510><c> as</c><00:06:29.570><c> a</c><00:06:30.050><c> of</c><00:06:30.890><c> L</c><00:06:31.099><c> which</c><00:06:31.460><c> we</c><00:06:31.640><c> didn't</c><00:06:31.820><c> talk</c>

00:06:32.300 --> 00:06:32.310 align:start position:0%
well as a of L which we didn't talk
 

00:06:32.310 --> 00:06:35.870 align:start position:0%
well as a of L which we didn't talk
too<00:06:32.790><c> much</c><00:06:32.970><c> about</c><00:06:33.150><c> here</c><00:06:33.450><c> but</c><00:06:33.690><c> because</c><00:06:34.620><c> Z</c><00:06:35.610><c> eval</c>

00:06:35.870 --> 00:06:35.880 align:start position:0%
too much about here but because Z eval
 

00:06:35.880 --> 00:06:40.400 align:start position:0%
too much about here but because Z eval
is<00:06:36.180><c> equal</c><00:06:36.870><c> to</c><00:06:37.050><c> G</c><00:06:37.380><c> of</c><00:06:37.650><c> a</c><00:06:38.490><c> of</c><00:06:39.150><c> L</c><00:06:39.410><c> apply</c>

00:06:40.400 --> 00:06:40.410 align:start position:0%
is equal to G of a of L apply
 

00:06:40.410 --> 00:06:43.610 align:start position:0%
is equal to G of a of L apply
element-wise<00:06:41.040><c> then</c><00:06:41.460><c> Z</c><00:06:41.850><c> and</c><00:06:42.120><c> a</c><00:06:42.810><c> should</c><00:06:43.590><c> have</c>

00:06:43.610 --> 00:06:43.620 align:start position:0%
element-wise then Z and a should have
 

00:06:43.620 --> 00:06:45.320 align:start position:0%
element-wise then Z and a should have
the<00:06:43.830><c> same</c><00:06:44.040><c> dimension</c><00:06:44.580><c> in</c><00:06:44.790><c> these</c><00:06:44.970><c> types</c><00:06:45.240><c> of</c>

00:06:45.320 --> 00:06:45.330 align:start position:0%
the same dimension in these types of
 

00:06:45.330 --> 00:06:48.440 align:start position:0%
the same dimension in these types of
networks<00:06:46.220><c> now</c><00:06:47.220><c> let's</c><00:06:47.520><c> see</c><00:06:47.700><c> what</c><00:06:47.850><c> happens</c><00:06:48.270><c> when</c>

00:06:48.440 --> 00:06:48.450 align:start position:0%
networks now let's see what happens when
 

00:06:48.450 --> 00:06:50.420 align:start position:0%
networks now let's see what happens when
you<00:06:48.540><c> have</c><00:06:48.750><c> a</c><00:06:48.780><c> vectorized</c><00:06:49.430><c> implementation</c>

00:06:50.420 --> 00:06:50.430 align:start position:0%
you have a vectorized implementation
 

00:06:50.430 --> 00:06:52.040 align:start position:0%
you have a vectorized implementation
that<00:06:50.700><c> looked</c><00:06:50.940><c> at</c><00:06:51.090><c> multiple</c><00:06:51.450><c> examples</c><00:06:51.510><c> at</c><00:06:51.960><c> a</c>

00:06:52.040 --> 00:06:52.050 align:start position:0%
that looked at multiple examples at a
 

00:06:52.050 --> 00:06:54.230 align:start position:0%
that looked at multiple examples at a
time<00:06:52.700><c> even</c><00:06:53.700><c> for</c><00:06:53.820><c> a</c><00:06:53.880><c> vectorized</c>

00:06:54.230 --> 00:06:54.240 align:start position:0%
time even for a vectorized
 

00:06:54.240 --> 00:06:56.390 align:start position:0%
time even for a vectorized
implementation<00:06:55.080><c> of</c><00:06:55.350><c> course</c><00:06:55.650><c> the</c><00:06:55.830><c> dimensions</c>

00:06:56.390 --> 00:06:56.400 align:start position:0%
implementation of course the dimensions
 

00:06:56.400 --> 00:07:00.980 align:start position:0%
implementation of course the dimensions
of<00:06:57.170><c> WB</c><00:06:58.170><c> DW</c><00:06:59.040><c> and</c><00:06:59.250><c> DB</c><00:06:59.610><c> will</c><00:06:59.820><c> stay</c><00:07:00.000><c> the</c><00:07:00.120><c> same</c><00:07:00.270><c> but</c>

00:07:00.980 --> 00:07:00.990 align:start position:0%
of WB DW and DB will stay the same but
 

00:07:00.990 --> 00:07:05.540 align:start position:0%
of WB DW and DB will stay the same but
the<00:07:01.140><c> dimensions</c><00:07:01.650><c> of</c><00:07:02.330><c> VA</c><00:07:03.330><c> as</c><00:07:03.960><c> well</c><00:07:04.800><c> as</c><00:07:04.950><c> X</c><00:07:05.220><c> will</c>

00:07:05.540 --> 00:07:05.550 align:start position:0%
the dimensions of VA as well as X will
 

00:07:05.550 --> 00:07:07.580 align:start position:0%
the dimensions of VA as well as X will
change<00:07:05.820><c> a</c><00:07:05.940><c> bit</c><00:07:05.970><c> in</c><00:07:06.360><c> your</c><00:07:06.780><c> vectorized</c>

00:07:07.580 --> 00:07:07.590 align:start position:0%
change a bit in your vectorized
 

00:07:07.590 --> 00:07:12.790 align:start position:0%
change a bit in your vectorized
implementation<00:07:09.050><c> so</c><00:07:10.050><c> previously</c><00:07:10.680><c> we</c><00:07:10.770><c> had</c><00:07:11.280><c> Z</c><00:07:11.760><c> 1</c>

00:07:12.790 --> 00:07:12.800 align:start position:0%
implementation so previously we had Z 1
 

00:07:12.800 --> 00:07:22.760 align:start position:0%
implementation so previously we had Z 1
equals<00:07:14.060><c> W</c><00:07:15.060><c> 1</c><00:07:15.590><c> times</c><00:07:16.590><c> X</c><00:07:17.430><c> plus</c><00:07:18.560><c> B</c><00:07:19.560><c> 1</c><00:07:21.110><c> where</c><00:07:22.110><c> this</c>

00:07:22.760 --> 00:07:22.770 align:start position:0%
equals W 1 times X plus B 1 where this
 

00:07:22.770 --> 00:07:34.580 align:start position:0%
equals W 1 times X plus B 1 where this
was<00:07:23.070><c> n</c><00:07:23.400><c> 1</c><00:07:24.180><c> by</c><00:07:25.170><c> 1</c><00:07:25.470><c> plus</c><00:07:26.460><c> N</c><00:07:26.940><c> 1</c><00:07:28.490><c> by</c><00:07:29.490><c> M</c><00:07:29.700><c> 0</c><00:07:30.590><c> X</c><00:07:31.590><c> was</c><00:07:32.250><c> n</c><00:07:33.590><c> 0</c>

00:07:34.580 --> 00:07:34.590 align:start position:0%
was n 1 by 1 plus N 1 by M 0 X was n 0
 

00:07:34.590 --> 00:07:41.630 align:start position:0%
was n 1 by 1 plus N 1 by M 0 X was n 0
by<00:07:34.920><c> 1</c><00:07:35.580><c> and</c><00:07:35.990><c> B</c><00:07:36.990><c> was</c><00:07:37.380><c> n</c><00:07:37.770><c> 1</c><00:07:38.870><c> by</c><00:07:39.870><c> 1</c><00:07:40.160><c> now</c><00:07:41.160><c> in</c><00:07:41.460><c> a</c>

00:07:41.630 --> 00:07:41.640 align:start position:0%
by 1 and B was n 1 by 1 now in a
 

00:07:41.640 --> 00:07:44.560 align:start position:0%
by 1 and B was n 1 by 1 now in a
vectorized<00:07:42.090><c> implementation</c><00:07:43.080><c> you</c><00:07:43.950><c> would</c><00:07:44.130><c> have</c>

00:07:44.560 --> 00:07:44.570 align:start position:0%
vectorized implementation you would have
 

00:07:44.570 --> 00:07:53.810 align:start position:0%
vectorized implementation you would have
Z<00:07:45.570><c> 1</c><00:07:46.190><c> equals</c><00:07:47.510><c> W</c><00:07:48.510><c> 1</c><00:07:48.690><c> times</c><00:07:49.170><c> X</c><00:07:49.890><c> plus</c><00:07:50.540><c> B</c><00:07:51.980><c> 1</c><00:07:52.980><c> where</c>

00:07:53.810 --> 00:07:53.820 align:start position:0%
Z 1 equals W 1 times X plus B 1 where
 

00:07:53.820 --> 00:07:57.890 align:start position:0%
Z 1 equals W 1 times X plus B 1 where
now<00:07:54.000><c> Z</c><00:07:54.630><c> 1</c><00:07:54.870><c> is</c><00:07:55.080><c> obtained</c><00:07:55.650><c> by</c><00:07:55.830><c> taking</c><00:07:55.860><c> the</c><00:07:56.570><c> Z</c><00:07:57.570><c> ones</c>

00:07:57.890 --> 00:07:57.900 align:start position:0%
now Z 1 is obtained by taking the Z ones
 

00:07:57.900 --> 00:08:00.440 align:start position:0%
now Z 1 is obtained by taking the Z ones
for<00:07:58.560><c> the</c><00:07:58.680><c> individual</c><00:07:59.130><c> example</c><00:07:59.610><c> so</c><00:07:59.850><c> that</c><00:07:59.880><c> z11</c>

00:08:00.440 --> 00:08:00.450 align:start position:0%
for the individual example so that z11
 

00:08:00.450 --> 00:08:06.710 align:start position:0%
for the individual example so that z11
z12<00:08:01.170><c> up</c><00:08:01.860><c> to</c><00:08:02.520><c> Z</c><00:08:02.760><c> 1</c><00:08:02.970><c> m</c><00:08:03.870><c> and</c><00:08:04.470><c> stacking</c><00:08:05.430><c> them</c><00:08:05.850><c> as</c>

00:08:06.710 --> 00:08:06.720 align:start position:0%
z12 up to Z 1 m and stacking them as
 

00:08:06.720 --> 00:08:10.730 align:start position:0%
z12 up to Z 1 m and stacking them as
follows<00:08:07.590><c> and</c><00:08:07.830><c> this</c><00:08:08.490><c> gives</c><00:08:08.760><c> you</c><00:08:09.000><c> V</c><00:08:09.480><c> 1</c><00:08:09.690><c> so</c><00:08:10.620><c> the</c>

00:08:10.730 --> 00:08:10.740 align:start position:0%
follows and this gives you V 1 so the
 

00:08:10.740 --> 00:08:12.920 align:start position:0%
follows and this gives you V 1 so the
dimension<00:08:11.220><c> of</c><00:08:11.370><c> V</c><00:08:11.640><c> 1</c><00:08:11.820><c> is</c><00:08:12.090><c> that</c><00:08:12.480><c> instead</c><00:08:12.870><c> of</c>

00:08:12.920 --> 00:08:12.930 align:start position:0%
dimension of V 1 is that instead of
 

00:08:12.930 --> 00:08:15.020 align:start position:0%
dimension of V 1 is that instead of
being<00:08:13.230><c> n1</c><00:08:13.770><c> by</c><00:08:14.520><c> 1</c>

00:08:15.020 --> 00:08:15.030 align:start position:0%
being n1 by 1
 

00:08:15.030 --> 00:08:18.560 align:start position:0%
being n1 by 1
it<00:08:15.090><c> ends</c><00:08:15.420><c> up</c><00:08:15.480><c> being</c><00:08:15.540><c> n1</c><00:08:16.500><c> by</c><00:08:17.130><c> M</c><00:08:17.430><c> if</c><00:08:17.730><c> M</c><00:08:18.090><c> is</c><00:08:18.360><c> the</c>

00:08:18.560 --> 00:08:18.570 align:start position:0%
it ends up being n1 by M if M is the
 

00:08:18.570 --> 00:08:21.100 align:start position:0%
it ends up being n1 by M if M is the
size<00:08:18.780><c> your</c><00:08:18.990><c> training</c><00:08:19.320><c> set</c><00:08:19.530><c> the</c><00:08:20.400><c> dimensions</c><00:08:20.910><c> of</c>

00:08:21.100 --> 00:08:21.110 align:start position:0%
size your training set the dimensions of
 

00:08:21.110 --> 00:08:25.400 align:start position:0%
size your training set the dimensions of
w1<00:08:22.110><c> stays</c><00:08:22.470><c> the</c><00:08:22.680><c> same</c><00:08:22.760><c> cystal</c><00:08:23.790><c> and</c><00:08:24.000><c> 1</c><00:08:24.540><c> by</c><00:08:24.750><c> n</c><00:08:24.990><c> 0</c>

00:08:25.400 --> 00:08:25.410 align:start position:0%
w1 stays the same cystal and 1 by n 0
 

00:08:25.410 --> 00:08:30.560 align:start position:0%
w1 stays the same cystal and 1 by n 0
and<00:08:25.730><c> X</c><00:08:27.350><c> instead</c><00:08:28.350><c> of</c><00:08:28.440><c> being</c><00:08:28.620><c> n</c><00:08:28.740><c> 0</c><00:08:29.250><c> by</c><00:08:29.280><c> 1</c><00:08:29.640><c> is</c><00:08:29.880><c> now</c>

00:08:30.560 --> 00:08:30.570 align:start position:0%
and X instead of being n 0 by 1 is now
 

00:08:30.570 --> 00:08:32.600 align:start position:0%
and X instead of being n 0 by 1 is now
all<00:08:30.810><c> your</c><00:08:31.020><c> training</c><00:08:31.260><c> examples</c><00:08:31.860><c> stamped</c>

00:08:32.600 --> 00:08:32.610 align:start position:0%
all your training examples stamped
 

00:08:32.610 --> 00:08:36.380 align:start position:0%
all your training examples stamped
horizontally<00:08:33.420><c> so</c><00:08:33.630><c> is</c><00:08:33.720><c> now</c><00:08:33.840><c> n</c><00:08:34.050><c> 0</c><00:08:34.470><c> by</c><00:08:34.500><c> M</c><00:08:35.180><c> and</c><00:08:36.180><c> so</c>

00:08:36.380 --> 00:08:36.390 align:start position:0%
horizontally so is now n 0 by M and so
 

00:08:36.390 --> 00:08:39.680 align:start position:0%
horizontally so is now n 0 by M and so
you<00:08:36.450><c> notice</c><00:08:36.900><c> that</c><00:08:36.930><c> when</c><00:08:37.800><c> you</c><00:08:37.890><c> take</c><00:08:38.100><c> a</c><00:08:38.160><c> N</c><00:08:38.520><c> 1</c><00:08:39.270><c> by</c><00:08:39.480><c> n</c>

00:08:39.680 --> 00:08:39.690 align:start position:0%
you notice that when you take a N 1 by n
 

00:08:39.690 --> 00:08:42.650 align:start position:0%
you notice that when you take a N 1 by n
0<00:08:39.720><c> matrix</c><00:08:40.290><c> and</c><00:08:40.800><c> multiply</c><00:08:41.310><c> that</c><00:08:41.520><c> line</c><00:08:41.790><c> and</c><00:08:42.000><c> 0</c><00:08:42.450><c> by</c>

00:08:42.650 --> 00:08:42.660 align:start position:0%
0 matrix and multiply that line and 0 by
 

00:08:42.660 --> 00:08:45.420 align:start position:0%
0 matrix and multiply that line and 0 by
n<00:08:42.840><c> matrix</c><00:08:43.410><c> that</c><00:08:44.100><c> together</c><00:08:44.460><c> they</c>

00:08:45.420 --> 00:08:45.430 align:start position:0%
n matrix that together they
 

00:08:45.430 --> 00:08:47.280 align:start position:0%
n matrix that together they
actually<00:08:45.790><c> give</c><00:08:45.970><c> you</c><00:08:46.149><c> an</c><00:08:46.300><c> N</c><00:08:46.480><c> 1</c><00:08:46.750><c> by</c><00:08:47.020><c> M</c>

00:08:47.280 --> 00:08:47.290 align:start position:0%
actually give you an N 1 by M
 

00:08:47.290 --> 00:08:50.490 align:start position:0%
actually give you an N 1 by M
dimensional<00:08:47.860><c> matrix</c><00:08:48.250><c> as</c><00:08:48.460><c> expected</c><00:08:49.440><c> now</c><00:08:50.440><c> the</c>

00:08:50.490 --> 00:08:50.500 align:start position:0%
dimensional matrix as expected now the
 

00:08:50.500 --> 00:08:54.930 align:start position:0%
dimensional matrix as expected now the
final<00:08:50.950><c> detail</c><00:08:51.339><c> is</c><00:08:51.580><c> that</c><00:08:51.760><c> B</c><00:08:52.180><c> 1</c><00:08:52.420><c> is</c><00:08:53.290><c> still</c><00:08:53.710><c> an</c><00:08:53.980><c> one</c>

00:08:54.930 --> 00:08:54.940 align:start position:0%
final detail is that B 1 is still an one
 

00:08:54.940 --> 00:08:58.050 align:start position:0%
final detail is that B 1 is still an one
by<00:08:55.120><c> one</c><00:08:55.720><c> but</c><00:08:56.529><c> when</c><00:08:56.680><c> you</c><00:08:56.800><c> take</c><00:08:57.040><c> this</c><00:08:57.339><c> and</c><00:08:57.640><c> add</c><00:08:57.880><c> it</c>

00:08:58.050 --> 00:08:58.060 align:start position:0%
by one but when you take this and add it
 

00:08:58.060 --> 00:09:00.930 align:start position:0%
by one but when you take this and add it
to<00:08:58.089><c> B</c><00:08:58.450><c> then</c><00:08:59.200><c> through</c><00:08:59.470><c> pipes</c><00:08:59.890><c> and</c><00:09:00.070><c> Broadcasting</c>

00:09:00.930 --> 00:09:00.940 align:start position:0%
to B then through pipes and Broadcasting
 

00:09:00.940 --> 00:09:04.410 align:start position:0%
to B then through pipes and Broadcasting
this<00:09:01.510><c> will</c><00:09:01.690><c> get</c><00:09:01.870><c> duplicated</c><00:09:02.620><c> into</c><00:09:03.250><c> an</c><00:09:03.339><c> N</c><00:09:03.520><c> 1</c><00:09:03.790><c> by</c>

00:09:04.410 --> 00:09:04.420 align:start position:0%
this will get duplicated into an N 1 by
 

00:09:04.420 --> 00:09:08.400 align:start position:0%
this will get duplicated into an N 1 by
M<00:09:04.720><c> matrix</c><00:09:05.529><c> and</c><00:09:05.800><c> then</c><00:09:06.040><c> added</c><00:09:06.430><c> element</c><00:09:06.910><c> wise</c><00:09:07.410><c> so</c>

00:09:08.400 --> 00:09:08.410 align:start position:0%
M matrix and then added element wise so
 

00:09:08.410 --> 00:09:10.170 align:start position:0%
M matrix and then added element wise so
on<00:09:08.740><c> the</c><00:09:08.980><c> previous</c><00:09:09.370><c> slide</c><00:09:09.520><c> we</c><00:09:09.760><c> talked</c><00:09:10.029><c> about</c>

00:09:10.170 --> 00:09:10.180 align:start position:0%
on the previous slide we talked about
 

00:09:10.180 --> 00:09:15.660 align:start position:0%
on the previous slide we talked about
the<00:09:10.450><c> dimensions</c><00:09:11.020><c> of</c><00:09:11.370><c> WB</c><00:09:12.370><c> DW</c><00:09:13.270><c> and</c><00:09:13.480><c> DB</c><00:09:14.370><c> here</c><00:09:15.370><c> what</c>

00:09:15.660 --> 00:09:15.670 align:start position:0%
the dimensions of WB DW and DB here what
 

00:09:15.670 --> 00:09:20.990 align:start position:0%
the dimensions of WB DW and DB here what
we<00:09:15.790><c> see</c><00:09:15.820><c> is</c><00:09:16.029><c> that</c><00:09:16.350><c> whereas</c><00:09:17.350><c> ZL</c><00:09:18.570><c> as</c><00:09:19.570><c> well</c><00:09:20.170><c> as</c><00:09:20.290><c> al</c>

00:09:20.990 --> 00:09:21.000 align:start position:0%
we see is that whereas ZL as well as al
 

00:09:21.000 --> 00:09:27.930 align:start position:0%
we see is that whereas ZL as well as al
are<00:09:22.000><c> of</c><00:09:22.899><c> dimension</c><00:09:23.080><c> n</c><00:09:23.850><c> L</c><00:09:24.850><c> by</c><00:09:25.300><c> 1</c><00:09:26.459><c> we</c><00:09:27.459><c> have</c><00:09:27.700><c> now</c>

00:09:27.930 --> 00:09:27.940 align:start position:0%
are of dimension n L by 1 we have now
 

00:09:27.940 --> 00:09:31.980 align:start position:0%
are of dimension n L by 1 we have now
instead<00:09:28.510><c> that</c><00:09:29.220><c> capital</c><00:09:30.220><c> ZL</c><00:09:30.610><c> as</c><00:09:30.910><c> well</c><00:09:31.870><c> as</c>

00:09:31.980 --> 00:09:31.990 align:start position:0%
instead that capital ZL as well as
 

00:09:31.990 --> 00:09:38.970 align:start position:0%
instead that capital ZL as well as
capital<00:09:32.320><c> al</c><00:09:32.890><c> are</c><00:09:34.589><c> ml</c><00:09:36.209><c> by</c><00:09:37.209><c> M</c><00:09:37.480><c> and</c><00:09:37.930><c> a</c><00:09:38.560><c> special</c>

00:09:38.970 --> 00:09:38.980 align:start position:0%
capital al are ml by M and a special
 

00:09:38.980 --> 00:09:42.630 align:start position:0%
capital al are ml by M and a special
case<00:09:39.160><c> of</c><00:09:39.190><c> this</c><00:09:39.520><c> is</c><00:09:39.760><c> when</c><00:09:40.149><c> L</c><00:09:40.450><c> is</c><00:09:40.810><c> equal</c><00:09:40.839><c> to</c><00:09:41.410><c> 0</c><00:09:41.830><c> in</c>

00:09:42.630 --> 00:09:42.640 align:start position:0%
case of this is when L is equal to 0 in
 

00:09:42.640 --> 00:09:46.380 align:start position:0%
case of this is when L is equal to 0 in
which<00:09:42.820><c> case</c><00:09:42.850><c> a</c><00:09:43.770><c> 0</c><00:09:44.770><c> which</c><00:09:45.430><c> is</c><00:09:45.580><c> equal</c><00:09:45.910><c> to</c><00:09:45.940><c> just</c>

00:09:46.380 --> 00:09:46.390 align:start position:0%
which case a 0 which is equal to just
 

00:09:46.390 --> 00:09:48.870 align:start position:0%
which case a 0 which is equal to just
your<00:09:46.600><c> training</c><00:09:47.200><c> set</c><00:09:47.440><c> input</c><00:09:47.920><c> features</c><00:09:48.279><c> X</c><00:09:48.490><c> is</c>

00:09:48.870 --> 00:09:48.880 align:start position:0%
your training set input features X is
 

00:09:48.880 --> 00:09:52.800 align:start position:0%
your training set input features X is
going<00:09:49.450><c> to</c><00:09:49.630><c> be</c><00:09:49.720><c> equal</c><00:09:50.110><c> to</c><00:09:50.350><c> n</c><00:09:50.589><c> 0</c><00:09:51.240><c> by</c><00:09:52.240><c> M</c><00:09:52.540><c> as</c>

00:09:52.800 --> 00:09:52.810 align:start position:0%
going to be equal to n 0 by M as
 

00:09:52.810 --> 00:09:56.070 align:start position:0%
going to be equal to n 0 by M as
expected<00:09:53.529><c> and</c><00:09:54.000><c> of</c><00:09:55.000><c> course</c><00:09:55.270><c> when</c><00:09:55.810><c> you're</c>

00:09:56.070 --> 00:09:56.080 align:start position:0%
expected and of course when you're
 

00:09:56.080 --> 00:10:01.250 align:start position:0%
expected and of course when you're
implementing<00:09:56.650><c> this</c><00:09:57.040><c> in</c><00:10:00.000><c> back</c><00:10:01.000><c> propagation</c>

00:10:01.250 --> 00:10:01.260 align:start position:0%
implementing this in back propagation
 

00:10:01.260 --> 00:10:04.710 align:start position:0%
implementing this in back propagation
we'll<00:10:02.260><c> see</c><00:10:02.440><c> later</c><00:10:02.620><c> you</c><00:10:02.830><c> end</c><00:10:03.070><c> up</c><00:10:03.400><c> computing</c><00:10:03.760><c> DZ</c>

00:10:04.710 --> 00:10:04.720 align:start position:0%
we'll see later you end up computing DZ
 

00:10:04.720 --> 00:10:10.199 align:start position:0%
we'll see later you end up computing DZ
as<00:10:05.580><c> well</c><00:10:06.580><c> as</c><00:10:07.230><c> da</c><00:10:08.230><c> and</c><00:10:08.770><c> so</c><00:10:09.610><c> these</c><00:10:09.820><c> will</c><00:10:10.120><c> of</c>

00:10:10.199 --> 00:10:10.209 align:start position:0%
as well as da and so these will of
 

00:10:10.209 --> 00:10:14.190 align:start position:0%
as well as da and so these will of
course<00:10:10.420><c> have</c><00:10:10.690><c> the</c><00:10:10.750><c> same</c><00:10:11.020><c> dimension</c><00:10:11.620><c> as</c><00:10:12.450><c> Z</c><00:10:13.450><c> and</c>

00:10:14.190 --> 00:10:14.200 align:start position:0%
course have the same dimension as Z and
 

00:10:14.200 --> 00:10:17.790 align:start position:0%
course have the same dimension as Z and
a<00:10:14.760><c> so</c><00:10:15.760><c> I</c><00:10:15.790><c> hope</c><00:10:16.060><c> the</c><00:10:16.390><c> exercise</c><00:10:17.290><c> went</c><00:10:17.560><c> through</c>

00:10:17.790 --> 00:10:17.800 align:start position:0%
a so I hope the exercise went through
 

00:10:17.800 --> 00:10:19.920 align:start position:0%
a so I hope the exercise went through
house<00:10:18.160><c> clarified</c><00:10:18.880><c> the</c><00:10:19.150><c> dimensions</c><00:10:19.690><c> of</c><00:10:19.810><c> the</c>

00:10:19.920 --> 00:10:19.930 align:start position:0%
house clarified the dimensions of the
 

00:10:19.930 --> 00:10:21.420 align:start position:0%
house clarified the dimensions of the
various<00:10:20.200><c> matrices</c><00:10:20.410><c> you'll</c><00:10:20.920><c> be</c><00:10:21.010><c> working</c><00:10:21.400><c> with</c>

00:10:21.420 --> 00:10:21.430 align:start position:0%
various matrices you'll be working with
 

00:10:21.430 --> 00:10:23.970 align:start position:0%
various matrices you'll be working with
when<00:10:22.209><c> you</c><00:10:22.360><c> implement</c><00:10:22.660><c> back-propagation</c><00:10:23.080><c> for</c>

00:10:23.970 --> 00:10:23.980 align:start position:0%
when you implement back-propagation for
 

00:10:23.980 --> 00:10:26.250 align:start position:0%
when you implement back-propagation for
deep<00:10:24.190><c> neural</c><00:10:24.339><c> network</c><00:10:24.760><c> so</c><00:10:25.300><c> long</c><00:10:25.510><c> as</c><00:10:25.690><c> you</c><00:10:25.900><c> work</c>

00:10:26.250 --> 00:10:26.260 align:start position:0%
deep neural network so long as you work
 

00:10:26.260 --> 00:10:27.510 align:start position:0%
deep neural network so long as you work
through<00:10:26.290><c> your</c><00:10:26.529><c> code</c><00:10:26.800><c> and</c><00:10:27.040><c> make</c><00:10:27.130><c> sure</c><00:10:27.250><c> that</c><00:10:27.400><c> all</c>

00:10:27.510 --> 00:10:27.520 align:start position:0%
through your code and make sure that all
 

00:10:27.520 --> 00:10:29.940 align:start position:0%
through your code and make sure that all
the<00:10:27.640><c> matrices</c><00:10:28.140><c> dimensions</c><00:10:29.140><c> are</c><00:10:29.320><c> consistent</c>

00:10:29.940 --> 00:10:29.950 align:start position:0%
the matrices dimensions are consistent
 

00:10:29.950 --> 00:10:32.579 align:start position:0%
the matrices dimensions are consistent
that<00:10:30.490><c> will</c><00:10:30.730><c> usually</c><00:10:31.000><c> help</c><00:10:31.450><c> you</c><00:10:31.900><c> go</c><00:10:32.140><c> some</c><00:10:32.380><c> ways</c>

00:10:32.579 --> 00:10:32.589 align:start position:0%
that will usually help you go some ways
 

00:10:32.589 --> 00:10:34.530 align:start position:0%
that will usually help you go some ways
towards<00:10:33.100><c> eliminating</c><00:10:33.640><c> some</c><00:10:34.120><c> class</c><00:10:34.329><c> of</c>

00:10:34.530 --> 00:10:34.540 align:start position:0%
towards eliminating some class of
 

00:10:34.540 --> 00:10:37.019 align:start position:0%
towards eliminating some class of
possible<00:10:34.690><c> bugs</c><00:10:35.140><c> so</c><00:10:36.010><c> I</c><00:10:36.040><c> hope</c><00:10:36.370><c> that</c><00:10:36.400><c> exercise</c>

00:10:37.019 --> 00:10:37.029 align:start position:0%
possible bugs so I hope that exercise
 

00:10:37.029 --> 00:10:39.150 align:start position:0%
possible bugs so I hope that exercise
for<00:10:37.450><c> figure</c><00:10:38.020><c> out</c><00:10:38.050><c> the</c><00:10:38.320><c> dimensions</c><00:10:38.860><c> of</c><00:10:39.040><c> the</c>

00:10:39.150 --> 00:10:39.160 align:start position:0%
for figure out the dimensions of the
 

00:10:39.160 --> 00:10:41.040 align:start position:0%
for figure out the dimensions of the
various<00:10:39.430><c> matrices</c><00:10:39.670><c> you'll</c><00:10:40.180><c> be</c><00:10:40.270><c> working</c><00:10:40.630><c> on</c><00:10:40.750><c> is</c>

00:10:41.040 --> 00:10:41.050 align:start position:0%
various matrices you'll be working on is
 

00:10:41.050 --> 00:10:43.319 align:start position:0%
various matrices you'll be working on is
helpful<00:10:41.620><c> when</c><00:10:42.399><c> you</c><00:10:42.520><c> implement</c><00:10:42.910><c> a</c><00:10:42.970><c> deep</c><00:10:43.180><c> neural</c>

00:10:43.319 --> 00:10:43.329 align:start position:0%
helpful when you implement a deep neural
 

00:10:43.329 --> 00:10:45.120 align:start position:0%
helpful when you implement a deep neural
network<00:10:43.779><c> if</c><00:10:44.050><c> you</c><00:10:44.260><c> keep</c><00:10:44.649><c> straight</c><00:10:44.980><c> the</c>

00:10:45.120 --> 00:10:45.130 align:start position:0%
network if you keep straight the
 

00:10:45.130 --> 00:10:46.860 align:start position:0%
network if you keep straight the
dimensions<00:10:45.640><c> of</c><00:10:45.820><c> these</c><00:10:45.940><c> various</c><00:10:46.240><c> matrices</c><00:10:46.450><c> and</c>

00:10:46.860 --> 00:10:46.870 align:start position:0%
dimensions of these various matrices and
 

00:10:46.870 --> 00:10:48.540 align:start position:0%
dimensions of these various matrices and
vectors<00:10:46.930><c> you're</c><00:10:47.380><c> working</c><00:10:47.709><c> with</c><00:10:47.920><c> hopefully</c>

00:10:48.540 --> 00:10:48.550 align:start position:0%
vectors you're working with hopefully
 

00:10:48.550 --> 00:10:50.550 align:start position:0%
vectors you're working with hopefully
they'll<00:10:48.760><c> help</c><00:10:48.970><c> you</c><00:10:49.120><c> eliminate</c><00:10:49.420><c> some</c><00:10:50.079><c> cause</c><00:10:50.320><c> of</c>

00:10:50.550 --> 00:10:50.560 align:start position:0%
they'll help you eliminate some cause of
 

00:10:50.560 --> 00:10:52.470 align:start position:0%
they'll help you eliminate some cause of
possible<00:10:51.010><c> bug</c><00:10:51.190><c> them</c><00:10:51.550><c> it</c><00:10:51.760><c> certainly</c><00:10:51.910><c> helps</c><00:10:52.329><c> me</c>

00:10:52.470 --> 00:10:52.480 align:start position:0%
possible bug them it certainly helps me
 

00:10:52.480 --> 00:10:54.640 align:start position:0%
possible bug them it certainly helps me
get<00:10:52.959><c> my</c><00:10:53.110><c> code</c><00:10:53.380><c> right</c>

00:10:54.640 --> 00:10:54.650 align:start position:0%
get my code right
 

00:10:54.650 --> 00:10:57.040 align:start position:0%
get my code right
so<00:10:55.100><c> next</c><00:10:55.550><c> we've</c><00:10:56.300><c> now</c><00:10:56.450><c> seen</c><00:10:56.660><c> some</c><00:10:56.900><c> of</c><00:10:56.990><c> the</c>

00:10:57.040 --> 00:10:57.050 align:start position:0%
so next we've now seen some of the
 

00:10:57.050 --> 00:10:59.440 align:start position:0%
so next we've now seen some of the
mechanics<00:10:57.740><c> of</c><00:10:57.950><c> how</c><00:10:58.160><c> to</c><00:10:58.220><c> do</c><00:10:58.670><c> certain</c><00:10:59.030><c> forward</c>

00:10:59.440 --> 00:10:59.450 align:start position:0%
mechanics of how to do certain forward
 

00:10:59.450 --> 00:11:01.900 align:start position:0%
mechanics of how to do certain forward
propagation<00:10:59.900><c> in</c><00:11:00.320><c> a</c><00:11:00.440><c> neural</c><00:11:00.680><c> network</c><00:11:00.830><c> but</c><00:11:01.580><c> why</c>

00:11:01.900 --> 00:11:01.910 align:start position:0%
propagation in a neural network but why
 

00:11:01.910 --> 00:11:04.360 align:start position:0%
propagation in a neural network but why
are<00:11:02.120><c> people</c><00:11:02.420><c> Network</c><00:11:03.110><c> so</c><00:11:03.530><c> effective</c><00:11:04.040><c> and</c><00:11:04.190><c> why</c>

00:11:04.360 --> 00:11:04.370 align:start position:0%
are people Network so effective and why
 

00:11:04.370 --> 00:11:06.100 align:start position:0%
are people Network so effective and why
do<00:11:04.430><c> they</c><00:11:04.700><c> do</c><00:11:04.910><c> better</c><00:11:05.150><c> than</c><00:11:05.570><c> shallow</c>

00:11:06.100 --> 00:11:06.110 align:start position:0%
do they do better than shallow
 

00:11:06.110 --> 00:11:08.140 align:start position:0%
do they do better than shallow
representations<00:11:06.980><c> let's</c><00:11:07.640><c> spend</c><00:11:07.880><c> a</c><00:11:07.970><c> few</c>

00:11:08.140 --> 00:11:08.150 align:start position:0%
representations let's spend a few
 

00:11:08.150 --> 00:11:11.710 align:start position:0%
representations let's spend a few
minutes<00:11:08.270><c> in</c><00:11:08.510><c> the</c><00:11:08.570><c> next</c><00:11:08.840><c> video</c><00:11:09.080><c> to</c><00:11:09.350><c> discuss</c>

