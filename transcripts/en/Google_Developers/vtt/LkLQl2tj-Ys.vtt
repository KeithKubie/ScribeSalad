WEBVTT
Kind: captions
Language: en

00:00:03.745 --> 00:00:05.620
WAYNE PIEKARSKI: Welcome
to the Fireside Chat

00:00:05.620 --> 00:00:06.759
for Brillo and Weave.

00:00:06.759 --> 00:00:09.050
I hope you've had a great
day seeing all the talks here

00:00:09.050 --> 00:00:10.465
at the Ubiquity conference.

00:00:10.465 --> 00:00:12.090
As you can see, we've
had a whole bunch

00:00:12.090 --> 00:00:13.870
of really cool information
just come out today

00:00:13.870 --> 00:00:16.244
about Brillo and Weave and
all the exciting possibilities

00:00:16.244 --> 00:00:17.614
that it has.

00:00:17.614 --> 00:00:19.030
My name's Wayne
Piekarski, and I'm

00:00:19.030 --> 00:00:22.000
a Developer Advocate at Google.

00:00:22.000 --> 00:00:25.530
I work with the product teams
to communicate information

00:00:25.530 --> 00:00:27.432
to developers and
also feed information

00:00:27.432 --> 00:00:29.890
back to the product teams to
help make our products better,

00:00:29.890 --> 00:00:30.431
and so forth.

00:00:30.431 --> 00:00:33.320
So we all work together,
and we run events like this,

00:00:33.320 --> 00:00:35.000
and so we hope you
found it very useful.

00:00:35.000 --> 00:00:37.800
What we thought we'd do is have
a session where we can sit down

00:00:37.800 --> 00:00:40.175
with some of the important
people on the Brillo and Weave

00:00:40.175 --> 00:00:41.974
team-- talk to them
about what makes

00:00:41.974 --> 00:00:44.640
them do the things that they do,
and what they find interesting,

00:00:44.640 --> 00:00:46.420
and what kind of
ideas that they have.

00:00:46.420 --> 00:00:49.230
So today, we have
three speakers.

00:00:49.230 --> 00:00:51.740
We've got Ryan Cairns,
we've got Paul Westbrook,

00:00:51.740 --> 00:00:52.960
and we've got Guarav Shah.

00:00:52.960 --> 00:00:54.570
And what I'll do
is I'll start off

00:00:54.570 --> 00:00:56.940
by just asking them to say
a little bit about what

00:00:56.940 --> 00:01:00.480
they do at Google and what
their important role is.

00:01:00.480 --> 00:01:01.230
RYAN CAIRNS: Sure.

00:01:01.230 --> 00:01:01.944
My name's Ryan.

00:01:01.944 --> 00:01:03.110
I'm an engineering director.

00:01:03.110 --> 00:01:04.840
I run the Brillo
and Weave project.

00:01:04.840 --> 00:01:07.660
I started the project
about three years ago.

00:01:07.660 --> 00:01:10.600
And I take care of all
the engineering stuff.

00:01:10.600 --> 00:01:12.350
PAUL WESTBROOK: My
name is Paul Westbrook.

00:01:12.350 --> 00:01:14.190
I'm the engineering
lead of Weave.

00:01:14.190 --> 00:01:17.370
We're focusing on the mobile
device side and server

00:01:17.370 --> 00:01:20.100
side of Weave.

00:01:20.100 --> 00:01:21.460
GUARAV SHAH: Hey, I'm Guarav.

00:01:21.460 --> 00:01:24.274
I'm the engineering
lead for Brillo.

00:01:24.274 --> 00:01:25.190
WAYNE PIEKARSKI: Cool.

00:01:25.190 --> 00:01:27.280
Thanks.

00:01:27.280 --> 00:01:28.780
I was hoping with
the Fireside Chat,

00:01:28.780 --> 00:01:29.980
we'd have an actual
fireplace here.

00:01:29.980 --> 00:01:30.710
But we don't have that.

00:01:30.710 --> 00:01:33.200
They wouldn't let us run a
fireplace screen on this thing.

00:01:33.200 --> 00:01:37.364
Anyway, today we had the little
pet feeder during the keynote.

00:01:37.364 --> 00:01:38.780
That's something
where I was like,

00:01:38.780 --> 00:01:40.150
you know what, I really
want this pet feeder,

00:01:40.150 --> 00:01:41.700
because it solves a
problem that I have.

00:01:41.700 --> 00:01:44.158
And so I thought it would be
a really cool question to ask.

00:01:44.158 --> 00:01:45.874
What magic device
have you always wanted

00:01:45.874 --> 00:01:47.540
that, now that we
have Brillo and Weave,

00:01:47.540 --> 00:01:49.415
you maybe could build--
or someone else could

00:01:49.415 --> 00:01:51.980
build-- and sell it as
a product or whatever?

00:01:51.980 --> 00:01:53.720
What's something
that's exciting?

00:01:53.720 --> 00:01:56.120
Guarav?

00:01:56.120 --> 00:02:02.690
GUARAV SHAH: I guess my dream
project is, all the walls are

00:02:02.690 --> 00:02:06.020
screens, and it's easy
for me to project anything

00:02:06.020 --> 00:02:10.780
on any of the screens,
or rather, the walls.

00:02:10.780 --> 00:02:13.480
So that's what I would like
to be able to prototype.

00:02:13.480 --> 00:02:14.450
WAYNE PIEKARSKI: I guess
some of these little boards

00:02:14.450 --> 00:02:16.490
were giving-- they have like,
little HDMI ports on them,

00:02:16.490 --> 00:02:18.700
so you could do something
like that pretty easily.

00:02:18.700 --> 00:02:19.700
GUARAV SHAH: Absolutely.

00:02:19.700 --> 00:02:23.924
And you can also drive LEDs and
LCD screens via the [INAUDIBLE]

00:02:23.924 --> 00:02:24.840
WAYNE PIEKARSKI: Yeah.

00:02:24.840 --> 00:02:26.256
Actually, one of
my colleagues had

00:02:26.256 --> 00:02:27.780
this cool project
where they were

00:02:27.780 --> 00:02:29.420
controlling strips of lights
and they were blinking,

00:02:29.420 --> 00:02:30.080
all kinds of things.

00:02:30.080 --> 00:02:32.290
And there's all kinds of cool
possibilities of little things

00:02:32.290 --> 00:02:34.290
you can do that doesn't
require a massive screen,

00:02:34.290 --> 00:02:35.930
but you can use really
cheap little components

00:02:35.930 --> 00:02:37.220
to make something interesting.

00:02:37.220 --> 00:02:37.580
GUARAV SHAH: Yeah.

00:02:37.580 --> 00:02:38.200
Definitely.

00:02:38.200 --> 00:02:41.319
You can daisy chain
them, and yeah.

00:02:41.319 --> 00:02:41.985
Pretty exciting.

00:02:41.985 --> 00:02:42.901
WAYNE PIEKARSKI: Cool.

00:02:42.901 --> 00:02:44.810
What about you, Paul?

00:02:44.810 --> 00:02:47.110
PAUL WESTBROOK: One of the
things that I want to build

00:02:47.110 --> 00:02:50.250
is something to
control my garage door.

00:02:50.250 --> 00:02:52.750
Because oftentimes,
I will-- I'm always

00:02:52.750 --> 00:02:54.710
worried about leaving it open.

00:02:54.710 --> 00:02:55.870
RYAN CAIRNS: Well, then
you just drive your car

00:02:55.870 --> 00:02:58.161
and come back home and check
again, and then drive off.

00:02:58.161 --> 00:02:59.516
Right?

00:02:59.516 --> 00:03:02.090
PAUL WESTBROOK: Well, that,
but then-- you're wasting gas.

00:03:02.090 --> 00:03:05.270
But the other thing is
making sure the lights turn

00:03:05.270 --> 00:03:07.620
on and off, especially
to detect presence.

00:03:07.620 --> 00:03:10.120
WAYNE PIEKARSKI: I was thinking
I've always wanted something

00:03:10.120 --> 00:03:12.286
where it's like-- what's
the state of all the doors?

00:03:12.286 --> 00:03:13.970
Show me every time
they opened, show me

00:03:13.970 --> 00:03:15.678
a log or something
interesting like that.

00:03:15.678 --> 00:03:18.150
Because the door may have
been opened unexpectedly

00:03:18.150 --> 00:03:19.150
or something like that.

00:03:19.150 --> 00:03:20.920
Yeah, it's interesting.

00:03:20.920 --> 00:03:22.726
What about you?

00:03:22.726 --> 00:03:24.225
RYAN CAIRNS: For
me, it was really--

00:03:24.225 --> 00:03:25.933
I was working on
Chromebooks at the time,

00:03:25.933 --> 00:03:27.780
and we were doing a
bunch of Wi-Fi stuff.

00:03:27.780 --> 00:03:30.113
And I really wanted a Wi-Fi
router that was easy to use.

00:03:30.113 --> 00:03:31.730
So I'd kick that product off.

00:03:31.730 --> 00:03:33.770
And then, beyond products,
one of the reasons

00:03:33.770 --> 00:03:36.619
that we did Brillo and Weave
in the first place was we

00:03:36.619 --> 00:03:38.910
just saw people wrestling
with the same set of problems

00:03:38.910 --> 00:03:40.300
over and over again.

00:03:40.300 --> 00:03:42.400
Google was getting
into doing hardware.

00:03:42.400 --> 00:03:44.140
Everybody was fighting
to figure out, OK,

00:03:44.140 --> 00:03:45.470
what Wi-Fi solution
do I need to use?

00:03:45.470 --> 00:03:47.030
What Bluetooth solution
do I need to use?

00:03:47.030 --> 00:03:48.363
How's auto-update going to work?

00:03:48.363 --> 00:03:49.680
What's my security story?

00:03:49.680 --> 00:03:50.630
And we already solved
a bunch of that

00:03:50.630 --> 00:03:52.310
stuff, so we were looking
at, how do we package that up

00:03:52.310 --> 00:03:52.809
for people?

00:03:52.809 --> 00:03:54.260
That was really
my goal with this.

00:03:54.260 --> 00:03:55.255
WAYNE PIEKARSKI: Yeah.

00:03:55.255 --> 00:03:56.630
Security is an
interesting thing.

00:03:56.630 --> 00:03:59.230
Because I always have this
terrifying thought of, well,

00:03:59.230 --> 00:04:01.730
if my heater is controlled by
my computer, and someone hacks

00:04:01.730 --> 00:04:03.460
into it, they can set my house
on fire or something like that.

00:04:03.460 --> 00:04:05.090
So security seems
a really big deal

00:04:05.090 --> 00:04:07.250
that you really have
to get this right.

00:04:07.250 --> 00:04:09.450
And so, what kind
of things are we

00:04:09.450 --> 00:04:11.060
doing to make sure
that security--

00:04:11.060 --> 00:04:12.720
because it seems like that's
like the number one priority

00:04:12.720 --> 00:04:13.928
for a lot of things nowadays.

00:04:13.928 --> 00:04:16.694
So what are we doing to
make it really awesome?

00:04:16.694 --> 00:04:18.110
RYAN CAIRNS: There's
a few things.

00:04:18.110 --> 00:04:20.925
At a high level, we're working
on some platform security

00:04:20.925 --> 00:04:22.800
features in the OS, and
we'll let Guarav talk

00:04:22.800 --> 00:04:24.399
about that in a second.

00:04:24.399 --> 00:04:26.190
We're enabling software
updates, because we

00:04:26.190 --> 00:04:28.920
don't think that you can have a
security solution with devices

00:04:28.920 --> 00:04:29.740
being fixed in the field.

00:04:29.740 --> 00:04:31.630
You always need to be able
to push new code to them.

00:04:31.630 --> 00:04:33.546
And then on the Weave
side, I'll let Paul talk

00:04:33.546 --> 00:04:36.040
to what we're doing about
local authentication and things

00:04:36.040 --> 00:04:36.540
like that.

00:04:38.862 --> 00:04:41.070
GUARAV SHAH: So yeah, I can
speak to the Brillo side.

00:04:41.070 --> 00:04:42.986
Interestingly, before I
was working on Brillo,

00:04:42.986 --> 00:04:44.910
I was working on
Chromebook security.

00:04:44.910 --> 00:04:49.170
And we ended up designing a
very defense in-depth model

00:04:49.170 --> 00:04:52.360
for building a
very secure device.

00:04:52.360 --> 00:04:56.870
And that's pretty much been
verified time and time again

00:04:56.870 --> 00:05:02.010
based on various security
competitions and intrusion

00:05:02.010 --> 00:05:05.850
detection-- the
performance of Chromebooks

00:05:05.850 --> 00:05:07.750
at these kind of events.

00:05:07.750 --> 00:05:11.560
So for Brillo, I think there
are a couple of things that

00:05:11.560 --> 00:05:13.580
are in boat on the platform.

00:05:13.580 --> 00:05:15.920
So verified boot,
which makes sure

00:05:15.920 --> 00:05:18.480
that you're not running
malicious code on your device.

00:05:18.480 --> 00:05:20.800
I think that's a core
part of the security,

00:05:20.800 --> 00:05:23.210
and we talk about
verified boot starting

00:05:23.210 --> 00:05:26.280
from when your device boots
up, so all the code that runs

00:05:26.280 --> 00:05:27.870
is verified.

00:05:27.870 --> 00:05:30.120
Then the other thing
that you want to enable

00:05:30.120 --> 00:05:34.660
is, we want to enable sandboxing
and other mechanisms that

00:05:34.660 --> 00:05:39.030
are default on and that
are very easy to use.

00:05:39.030 --> 00:05:41.700
So we have kind of build a
lot of the same technologies

00:05:41.700 --> 00:05:44.710
that Android already has,
plus some of the things

00:05:44.710 --> 00:05:46.770
that we designed
for Chromebooks,

00:05:46.770 --> 00:05:50.550
like second BPF and other
sandboxing mechanisms.

00:05:50.550 --> 00:05:52.390
These are a core part of Brillo.

00:05:55.200 --> 00:05:59.110
The final part that Ryan
alluded to is updates.

00:05:59.110 --> 00:06:01.620
We really feel that
updates are really

00:06:01.620 --> 00:06:04.325
a core part of building
a secure device,

00:06:04.325 --> 00:06:06.450
because anything you build,
any software you write,

00:06:06.450 --> 00:06:07.837
it's always going to have bugs.

00:06:07.837 --> 00:06:09.920
And being able to update
this device in the field,

00:06:09.920 --> 00:06:13.572
and doing so in a way that is
very seamless, non-destructive,

00:06:13.572 --> 00:06:14.780
error-free is very important.

00:06:14.780 --> 00:06:18.094
And so update is a core part
of Brillo security as well.

00:06:18.094 --> 00:06:19.760
WAYNE PIEKARSKI: I
guess one other thing

00:06:19.760 --> 00:06:22.930
is that a lot of OEMs
will make a device,

00:06:22.930 --> 00:06:25.520
then they just forget about
it, whereas at least Google

00:06:25.520 --> 00:06:28.390
does some of the work of
doing the security patches.

00:06:28.390 --> 00:06:30.920
And you can just pull down
updates and build it out

00:06:30.920 --> 00:06:33.662
without having to have your
own team maintaining all these.

00:06:33.662 --> 00:06:35.620
You don't have to worry
so much about security.

00:06:35.620 --> 00:06:36.370
GUARAV SHAH: Yeah.

00:06:36.370 --> 00:06:39.419
I think a large part of why
we don't see a lot of updates

00:06:39.419 --> 00:06:41.960
happening in the field is that
it's kind of always the device

00:06:41.960 --> 00:06:43.150
side, the device software.

00:06:43.150 --> 00:06:45.970
But there's also infrastructure
for running updates,

00:06:45.970 --> 00:06:48.830
for actually serving the
updates, for managing updates.

00:06:48.830 --> 00:06:51.060
And with Brillo, we are
making that something that

00:06:51.060 --> 00:06:53.870
is the same infrastructure
that we use in Google,

00:06:53.870 --> 00:06:55.290
for Chromebooks
and other devices,

00:06:55.290 --> 00:06:57.248
and we are making that
available for developers

00:06:57.248 --> 00:06:59.926
to use for their devices.

00:06:59.926 --> 00:07:01.300
So I really feel
like that really

00:07:01.300 --> 00:07:03.280
makes updates a
no-brainer, if you're

00:07:03.280 --> 00:07:05.805
building a connected device
using Brillo and Weave.

00:07:05.805 --> 00:07:08.138
WAYNE PIEKARSKI: See, I've
got to focus on feeding dogs.

00:07:08.138 --> 00:07:10.154
I don't want to worry
about all that stuff.

00:07:10.154 --> 00:07:12.070
RYAN CAIRNS: Just to add
to the update story--

00:07:12.070 --> 00:07:14.361
one of the big things is
like, when people are shipping

00:07:14.361 --> 00:07:16.060
devices that don't
update themselves--

00:07:16.060 --> 00:07:17.690
the whole internet is moving
forward all the time, right?

00:07:17.690 --> 00:07:18.880
People are building new code.

00:07:18.880 --> 00:07:20.480
So those devices are just
going to break over time.

00:07:20.480 --> 00:07:21.480
They're going to bit rot.

00:07:21.480 --> 00:07:23.030
The user is going to
buy an experience today,

00:07:23.030 --> 00:07:25.440
and in a year, that experience
is going to be broken.

00:07:25.440 --> 00:07:26.815
And what we really
want to enable

00:07:26.815 --> 00:07:29.390
is an always up-to-date,
always working experience,

00:07:29.390 --> 00:07:32.120
for devices that get better, as
opposed to degrade over time.

00:07:32.120 --> 00:07:33.707
WAYNE PIEKARSKI: Yeah.

00:07:33.707 --> 00:07:35.040
You want to say something, Paul?

00:07:35.040 --> 00:07:36.650
PAUL WESTBROOK: Yes, I was going
to talk about the Weave side.

00:07:36.650 --> 00:07:37.566
WAYNE PIEKARSKI: Sure.

00:07:37.566 --> 00:07:40.380
RYAN CAIRNS: So on the Weave
side, one of the benefits of it

00:07:40.380 --> 00:07:42.400
is actually dealing
with the Google Clouds.

00:07:42.400 --> 00:07:43.875
So the devices
themselves actually

00:07:43.875 --> 00:07:45.750
have a secure connection
to the Google Cloud,

00:07:45.750 --> 00:07:47.672
so they can ensure
that the commands that

00:07:47.672 --> 00:07:49.880
are received by the device
are actually authenticated

00:07:49.880 --> 00:07:51.140
to come from Google.

00:07:51.140 --> 00:07:55.250
And then also, the other part
is actually the authentication,

00:07:55.250 --> 00:07:56.700
or actually, the sharing model.

00:07:56.700 --> 00:07:59.850
So the user has ultimate
control over which

00:07:59.850 --> 00:08:01.360
user, as well as
which applications,

00:08:01.360 --> 00:08:04.290
have access to their device.

00:08:04.290 --> 00:08:07.280
And so then they can both
grant access as well as

00:08:07.280 --> 00:08:09.400
be able to revoke
it, in case there's

00:08:09.400 --> 00:08:12.664
a bad actor or some behavior
that's actually not expected.

00:08:12.664 --> 00:08:14.330
WAYNE PIEKARSKI: Well,
that's the thing.

00:08:14.330 --> 00:08:17.050
I mean, there's the
possibility of bad actors

00:08:17.050 --> 00:08:19.470
at so many places in the
chain that it's very important

00:08:19.470 --> 00:08:20.330
that you secure everything.

00:08:20.330 --> 00:08:22.538
You can't just get away with
having some parts secure

00:08:22.538 --> 00:08:24.619
and some parts not.

00:08:24.619 --> 00:08:25.660
PAUL WESTBROOK: We agree.

00:08:25.660 --> 00:08:27.860
And in addition to
the cloud connection,

00:08:27.860 --> 00:08:30.330
Weave also has local
authentication.

00:08:30.330 --> 00:08:31.830
So when commands--
like for example,

00:08:31.830 --> 00:08:33.663
let's say the internet
connection goes down.

00:08:33.663 --> 00:08:36.539
So commands that go between
a phone to a device,

00:08:36.539 --> 00:08:39.620
we can still ensure
that that communication

00:08:39.620 --> 00:08:41.440
is secure as well.

00:08:41.440 --> 00:08:42.840
WAYNE PIEKARSKI: Cool.

00:08:42.840 --> 00:08:45.610
So one question I hear
people ask me every so

00:08:45.610 --> 00:08:46.980
often is, so we've got Weave.

00:08:46.980 --> 00:08:49.977
And then we have Nest,
which have their own IoT

00:08:49.977 --> 00:08:50.560
story as well.

00:08:50.560 --> 00:08:52.420
So how does the
whole Weave story

00:08:52.420 --> 00:08:54.700
fit in with what Nest
is doing right now?

00:08:54.700 --> 00:08:57.100
RYAN CAIRNS: They're
different product experiences

00:08:57.100 --> 00:08:58.310
for the consumer.

00:08:58.310 --> 00:09:00.770
From a technical perspective,
we're very compatible.

00:09:00.770 --> 00:09:02.850
In fact, we're trying
to offer Thread in Weave

00:09:02.850 --> 00:09:04.859
on top of Brillo,
so that people who

00:09:04.859 --> 00:09:06.900
want to build works with
Nest devices with Brillo

00:09:06.900 --> 00:09:08.370
are able to do that.

00:09:08.370 --> 00:09:10.590
So with Thread, you've
got layer 2, layer 3.

00:09:10.590 --> 00:09:12.520
With Weave, you've got
higher-level protocol.

00:09:12.520 --> 00:09:14.410
And with our Weave,
really the idea

00:09:14.410 --> 00:09:17.420
was to tie in the mobile
experience with the device.

00:09:17.420 --> 00:09:19.170
So we wanted to focus
on gateway protocols

00:09:19.170 --> 00:09:22.320
instead of focusing on more
edge-oriented protocols,

00:09:22.320 --> 00:09:25.180
so that we could leverage
the technologies that

00:09:25.180 --> 00:09:27.864
are in the phone-- so
primarily Wi-Fi and Bluetooth.

00:09:27.864 --> 00:09:28.780
WAYNE PIEKARSKI: Yeah.

00:09:28.780 --> 00:09:29.280
OK.

00:09:29.280 --> 00:09:29.901
Anything else?

00:09:29.901 --> 00:09:31.400
PAUL WESTBROOK: In
addition, as some

00:09:31.400 --> 00:09:34.260
of the previous talks mentioned,
about the schemas-- so we've

00:09:34.260 --> 00:09:37.300
been actually working with
Nest, too, on the device model

00:09:37.300 --> 00:09:38.059
schemas.

00:09:38.059 --> 00:09:40.350
So there's a consistent model
for actually representing

00:09:40.350 --> 00:09:42.897
devices across both platforms.

00:09:42.897 --> 00:09:43.730
WAYNE PIEKARSKI: OK.

00:09:43.730 --> 00:09:44.920
Cool.

00:09:44.920 --> 00:09:46.930
Another question
people commonly ask me,

00:09:46.930 --> 00:09:48.304
which I thought
I'd bring up here

00:09:48.304 --> 00:09:50.510
as well as that there's
lots of IoT devices

00:09:50.510 --> 00:09:53.606
and microcontrollers and kits
and different ways of building

00:09:53.606 --> 00:09:55.730
little apps that flash
lights and things like that.

00:09:55.730 --> 00:09:58.530
So how does Brillo
differentiate itself from there?

00:09:58.530 --> 00:09:59.990
It seems like the
market is quite

00:09:59.990 --> 00:10:01.990
saturated with different
projects and companies.

00:10:01.990 --> 00:10:04.405
So what are your guys'
thoughts on that?

00:10:04.405 --> 00:10:06.030
RYAN CAIRNS: Yeah,
so the thing that we

00:10:06.030 --> 00:10:09.350
found with a lot of
these other platforms

00:10:09.350 --> 00:10:11.050
is that they're really
great experiences

00:10:11.050 --> 00:10:16.240
for trying something out,
prototyping, having some fun

00:10:16.240 --> 00:10:17.170
on a weekend.

00:10:17.170 --> 00:10:19.260
But when you go to
commercialize a device

00:10:19.260 --> 00:10:21.810
or take it to manufacturing,
there's a lot of challenges.

00:10:21.810 --> 00:10:22.310
Right?

00:10:22.310 --> 00:10:24.170
Then it's not easy
to do out of the box.

00:10:24.170 --> 00:10:26.170
And what we have is a system
that you can take all the way

00:10:26.170 --> 00:10:27.878
from the prototyping
stage-- where you've

00:10:27.878 --> 00:10:29.674
got a bunch of dev
boards that you can buy,

00:10:29.674 --> 00:10:31.590
when you've got new
silica, and it's very easy

00:10:31.590 --> 00:10:33.610
to move your project
to a new board

00:10:33.610 --> 00:10:36.020
without much code change--
and take that all the way

00:10:36.020 --> 00:10:37.860
through the
manufacturing process.

00:10:37.860 --> 00:10:39.526
And I think that's a
key differentiator.

00:10:39.526 --> 00:10:41.870
WAYNE PIEKARSKI: So
how does that work?

00:10:41.870 --> 00:10:45.927
So the manufacturers have some
ability to customize them, or?

00:10:45.927 --> 00:10:47.510
RYAN CAIRNS: No,
it's more about being

00:10:47.510 --> 00:10:49.051
able to work with
the silicon vendors

00:10:49.051 --> 00:10:50.630
and tap into the
hardware ecosystem

00:10:50.630 --> 00:10:53.610
so that you can have
a common bit of code,

00:10:53.610 --> 00:10:56.540
and then go to a Qualcomm,
or a Marbel, or Mediatech,

00:10:56.540 --> 00:10:58.920
or an Intel, and
get a BSP from them.

00:10:58.920 --> 00:11:01.732
WAYNE PIEKARSKI: So they
provide the support package

00:11:01.732 --> 00:11:03.440
for their particular
processes, whatever.

00:11:03.440 --> 00:11:05.071
So then you can
make your own board,

00:11:05.071 --> 00:11:06.820
and then drop their
processor, and they've

00:11:06.820 --> 00:11:08.400
ported the kernel
over, and the drivers,

00:11:08.400 --> 00:11:08.780
and all that kind of stuff.

00:11:08.780 --> 00:11:09.655
RYAN CAIRNS: Exactly.

00:11:09.655 --> 00:11:11.210
So you're not tied
into the platform

00:11:11.210 --> 00:11:12.350
that you ended up
prototyping with.

00:11:12.350 --> 00:11:14.016
You can go talk to
anybody, whether it's

00:11:14.016 --> 00:11:15.065
Imagination or Intel or--

00:11:15.065 --> 00:11:15.940
WAYNE PIEKARSKI: Mhm.

00:11:15.940 --> 00:11:16.580
OK, cool.

00:11:19.290 --> 00:11:22.680
Right now, I guess everyone got
their little kits to work with.

00:11:22.680 --> 00:11:25.470
Some people got DragonBoards,
some people got Edisons.

00:11:25.470 --> 00:11:27.860
The cool thing about them
is they're very similar,

00:11:27.860 --> 00:11:29.384
the build process is the same.

00:11:29.384 --> 00:11:31.800
RYAN CAIRNS: And over time,
as people build these devices,

00:11:31.800 --> 00:11:33.690
we anticipate that they're not
actually going to build one.

00:11:33.690 --> 00:11:33.980
Right?

00:11:33.980 --> 00:11:35.400
You're going to be successful.

00:11:35.400 --> 00:11:37.120
You go out this year, you
have different silicon

00:11:37.120 --> 00:11:39.036
than you have in the
next spin of the product.

00:11:39.036 --> 00:11:41.109
And the code,
maybe, is the same,

00:11:41.109 --> 00:11:43.150
and we want to make sure
that your projects can--

00:11:43.150 --> 00:11:45.270
you can have the same project
on top of multiple boards

00:11:45.270 --> 00:11:47.145
that you've shipped, so
that you don't end up

00:11:47.145 --> 00:11:49.020
with a morass of all
this code that you

00:11:49.020 --> 00:11:51.272
have to maintain for
basically different spins

00:11:51.272 --> 00:11:52.105
of the same project.

00:11:52.105 --> 00:11:53.021
WAYNE PIEKARSKI: Yeah.

00:11:53.021 --> 00:11:55.600
So in the past, when someone
made a router or a light

00:11:55.600 --> 00:11:58.160
or something like
that-- so what,

00:11:58.160 --> 00:12:00.270
they had teams of people
who had to have kernels,

00:12:00.270 --> 00:12:05.220
and what's the difference
from before till now?

00:12:05.220 --> 00:12:08.236
Now that we've got Brillo and
Weave, this is the workflow.

00:12:08.236 --> 00:12:09.485
How complicated was it before?

00:12:09.485 --> 00:12:12.210
Do you want to explain
how much people you needed

00:12:12.210 --> 00:12:15.050
to have to build a product?

00:12:15.050 --> 00:12:21.080
GUARAV SHAH: I think--
the development model was

00:12:21.080 --> 00:12:23.110
very specific to
the board, and it

00:12:23.110 --> 00:12:24.915
was pretty much throwaway work.

00:12:24.915 --> 00:12:27.040
So let's say that you are
trying to build a router,

00:12:27.040 --> 00:12:29.400
and you started on a
particular chipset.

00:12:29.400 --> 00:12:31.316
You decided to move to
a different chipset.

00:12:31.316 --> 00:12:33.440
It's just going to mean a
completely new code drop,

00:12:33.440 --> 00:12:34.600
and you're going to
start from scratch.

00:12:34.600 --> 00:12:37.290
You're going to rewrite a large
number of portions of things,

00:12:37.290 --> 00:12:39.380
because you don't have
things like a HAL.

00:12:39.380 --> 00:12:41.080
So the hardware
is not abstracted.

00:12:41.080 --> 00:12:44.034
So you're writing
a better software,

00:12:44.034 --> 00:12:45.950
but you're also writing
a better software that

00:12:45.950 --> 00:12:49.380
is very much dependent
and makes assumptions

00:12:49.380 --> 00:12:51.035
of the architecture
it's running on,

00:12:51.035 --> 00:12:53.680
on the specific details
of the hardware.

00:12:53.680 --> 00:12:55.520
And I think one of
the things that we're

00:12:55.520 --> 00:12:59.250
trying to do with Brillo is
to make that to abstract away

00:12:59.250 --> 00:13:02.910
those interfaces, whether it's
things like various hardware

00:13:02.910 --> 00:13:05.560
peripheral interfaces,
or it's like, how

00:13:05.560 --> 00:13:08.890
do you configure your
[? kung ?] specific features,

00:13:08.890 --> 00:13:11.590
or APS for dealing with
sensors, for example.

00:13:11.590 --> 00:13:14.900
So we're trying to
abstract away these details

00:13:14.900 --> 00:13:17.490
so that when you're
writing your code,

00:13:17.490 --> 00:13:20.980
you don't have to
make assumptions

00:13:20.980 --> 00:13:23.699
about the various
hardware implementations.

00:13:23.699 --> 00:13:24.615
WAYNE PIEKARSKI: Yeah.

00:13:24.615 --> 00:13:25.779
Yeah.

00:13:25.779 --> 00:13:27.320
It sounds like a
nightmare where it's

00:13:27.320 --> 00:13:30.389
like, a kernel bug comes
out, so they might patch

00:13:30.389 --> 00:13:31.680
in a Linux kernel or something.

00:13:31.680 --> 00:13:33.962
But then you don't
know it's there,

00:13:33.962 --> 00:13:35.670
or you don't know what
version you're on.

00:13:35.670 --> 00:13:36.775
You might not follow it.

00:13:36.775 --> 00:13:38.400
So if you forget to
pull those patches,

00:13:38.400 --> 00:13:39.950
you got all these
vulnerable devices

00:13:39.950 --> 00:13:43.585
that people don't know
about, it's just-- yeah.

00:13:43.585 --> 00:13:46.110
And if you've got a
billion devices out there,

00:13:46.110 --> 00:13:49.060
and you need to keep them up to
date, if you missed this patch,

00:13:49.060 --> 00:13:50.794
then it could be catastrophic.

00:13:50.794 --> 00:13:51.585
RYAN CAIRNS: Right.

00:13:51.585 --> 00:13:52.420
And what we're trying
to do is create

00:13:52.420 --> 00:13:54.660
a center of gravity
for all these BSPs

00:13:54.660 --> 00:13:57.774
upstream in our repository so
that when these bugs get found

00:13:57.774 --> 00:14:00.190
by the vendor or by us, they
could get fixed in one place,

00:14:00.190 --> 00:14:01.630
and then everybody can
then pull from them

00:14:01.630 --> 00:14:02.730
for their own
individual products.

00:14:02.730 --> 00:14:03.110
WAYNE PIEKARSKI: Yeah.

00:14:03.110 --> 00:14:03.780
Cool, cool.

00:14:03.780 --> 00:14:04.580
Nice.

00:14:04.580 --> 00:14:05.890
OK.

00:14:05.890 --> 00:14:07.174
We have the audience here.

00:14:07.174 --> 00:14:09.340
We have a microphone floating
around somewhere here,

00:14:09.340 --> 00:14:12.956
so if anyone has any questions
you'd like to ask of the team--

00:14:12.956 --> 00:14:14.080
do we have a mic somewhere?

00:14:14.080 --> 00:14:16.421
RYAN CAIRNS: We've got two
mics in the back on the ends

00:14:16.421 --> 00:14:16.920
out there--

00:14:16.920 --> 00:14:16.995
WAYNE PIEKARSKI: Yeah.

00:14:16.995 --> 00:14:18.460
In the corner of the
room, we have a mic there,

00:14:18.460 --> 00:14:19.126
and a mic there.

00:14:22.900 --> 00:14:28.160
If you had a question, we'll
see what we can answer for you.

00:14:28.160 --> 00:14:29.540
AUDIENCE: Excuse me.

00:14:29.540 --> 00:14:31.840
So if I understand
correctly, you

00:14:31.840 --> 00:14:35.290
want us to make our
devices available on Weave

00:14:35.290 --> 00:14:38.040
or through Weave,
but Google itself

00:14:38.040 --> 00:14:42.730
will not make Nest
available through Weave?

00:14:42.730 --> 00:14:46.430
Because it's special?

00:14:46.430 --> 00:14:48.057
I don't understand this.

00:14:48.057 --> 00:14:50.390
WAYNE PIEKARSKI: This is more
about the Nest experience.

00:14:50.390 --> 00:14:51.670
So what does it mean--

00:14:51.670 --> 00:14:53.795
RYAN CAIRNS: Yeah, we're
working with the Nest team

00:14:53.795 --> 00:14:56.022
to try to make Nest available
through Weave as well.

00:14:56.022 --> 00:14:57.480
The big thing today
is that they're

00:14:57.480 --> 00:14:58.780
different because
we're different teams,

00:14:58.780 --> 00:15:00.010
and we're trying to
align those things.

00:15:00.010 --> 00:15:01.980
Like Paul said, we're
working on shared schemas

00:15:01.980 --> 00:15:03.800
so that the developer
experience for a Nest device

00:15:03.800 --> 00:15:06.010
shouldn't be different
than developer experience

00:15:06.010 --> 00:15:09.180
for the same, like
kind of Weave device.

00:15:09.180 --> 00:15:11.610
AUDIENCE: So it will become
available through Weave?

00:15:11.610 --> 00:15:13.205
RYAN CAIRNS: We'd like to.

00:15:13.205 --> 00:15:15.080
WAYNE PIEKARSKI: I guess
the thing with Weave

00:15:15.080 --> 00:15:16.800
is that right now,
we have specs for it.

00:15:16.800 --> 00:15:18.170
There's all these
different device types.

00:15:18.170 --> 00:15:19.390
I can't remember off
the top of my head.

00:15:19.390 --> 00:15:20.330
Do you remember?

00:15:20.330 --> 00:15:22.590
It's like light bulb, and--

00:15:22.590 --> 00:15:24.810
PAUL WESTBROOK: I can briefly
talk about the schemas.

00:15:24.810 --> 00:15:26.393
So we actually have
some device guides

00:15:26.393 --> 00:15:28.970
that actually talk about light
bulbs, and air conditioners,

00:15:28.970 --> 00:15:30.801
and a number of other things.

00:15:30.801 --> 00:15:32.800
But the one thing about
the schemas is actually,

00:15:32.800 --> 00:15:33.591
they're composable.

00:15:33.591 --> 00:15:35.900
So we actually take the
individual traits of,

00:15:35.900 --> 00:15:38.910
let's say, a light bulb
may be dimmable or not,

00:15:38.910 --> 00:15:41.494
or have color or not,
and a hardware maker

00:15:41.494 --> 00:15:43.910
should be able to take the
individual components that they

00:15:43.910 --> 00:15:48.300
want and actually define
the behavior that actually

00:15:48.300 --> 00:15:50.536
corresponds to their device.

00:15:50.536 --> 00:15:51.910
So yes, we do have
device guides,

00:15:51.910 --> 00:15:56.867
but we also define the schema
as individual traits fit.

00:15:56.867 --> 00:15:58.450
RYAN CAIRNS: We're
also trying to work

00:15:58.450 --> 00:16:00.325
to align the Nest cloud
and the Google Cloud,

00:16:00.325 --> 00:16:03.069
so that developers
can work with both.

00:16:03.069 --> 00:16:04.610
WAYNE PIEKARSKI:
The other cool thing

00:16:04.610 --> 00:16:08.370
is that, with these schemas,
if you build a device that

00:16:08.370 --> 00:16:10.600
implements the
light bulb schema--

00:16:10.600 --> 00:16:12.770
anyone can write an app
that controls light bulbs.

00:16:12.770 --> 00:16:15.228
And anyone can write an app
that controls air conditioners.

00:16:15.228 --> 00:16:17.690
And the app doesn't have
to be tied to that device.

00:16:17.690 --> 00:16:18.440
It's kind of nice.

00:16:18.440 --> 00:16:20.120
Because you could have a house
with different light bulbs

00:16:20.120 --> 00:16:22.584
from different companies, and
they can all talk together,

00:16:22.584 --> 00:16:25.000
which is sort of a new thing
that-- I think someone talked

00:16:25.000 --> 00:16:27.772
about it today, earlier, during
one of the talks, which is,

00:16:27.772 --> 00:16:30.230
you want to be able to make
these things all work together.

00:16:30.230 --> 00:16:31.800
You come home, your
light bulb turns

00:16:31.800 --> 00:16:34.086
on, your doorbell is
synced to it, your music

00:16:34.086 --> 00:16:35.460
starts playing,
things like that.

00:16:35.460 --> 00:16:37.450
So people have the
ability to build

00:16:37.450 --> 00:16:39.290
these kind of cool,
combined experiences

00:16:39.290 --> 00:16:41.730
that has been very
difficult to do before.

00:16:41.730 --> 00:16:42.440
PAUL WESTBROOK:
Personally, I'm very

00:16:42.440 --> 00:16:43.610
excited about some
of the opportunities

00:16:43.610 --> 00:16:44.930
that app developers have now.

00:16:44.930 --> 00:16:47.770
I mean, being able to actually
combine these capabilities

00:16:47.770 --> 00:16:50.564
into a single experience.

00:16:50.564 --> 00:16:51.480
WAYNE PIEKARSKI: Yeah.

00:16:51.480 --> 00:16:53.630
Do you have any
things that you're

00:16:53.630 --> 00:16:56.910
excited about in particular?

00:16:56.910 --> 00:16:59.984
Is there a particular kind of
scenario or demo that you want?

00:16:59.984 --> 00:17:01.400
Because I'm sure
someone will have

00:17:01.400 --> 00:17:03.060
one of these built by the
end of the code lab tomorrow.

00:17:03.060 --> 00:17:05.160
PAUL WESTBROOK: OK, so
this is what I want.

00:17:05.160 --> 00:17:07.550
For example, I think being
able to unlock a door

00:17:07.550 --> 00:17:09.675
and actually have your
lights turn on automatically

00:17:09.675 --> 00:17:13.250
for you, or based on the time of
day, have different behaviors.

00:17:13.250 --> 00:17:15.619
I think there's a lot of
experiences, especially

00:17:15.619 --> 00:17:18.150
across different manufacturers,
to be able to actually

00:17:18.150 --> 00:17:20.150
have the consumer not
have to worry about buying

00:17:20.150 --> 00:17:21.599
one particular
brand of a product,

00:17:21.599 --> 00:17:24.060
and be able to actually have
it work on multiple brands.

00:17:24.060 --> 00:17:25.560
WAYNE PIEKARSKI:
The other thing is,

00:17:25.560 --> 00:17:26.950
because this is a ubiquitous
computing conference,

00:17:26.950 --> 00:17:29.226
and we're talking about
many different areas--

00:17:29.226 --> 00:17:30.850
so beacons could be
combined with this,

00:17:30.850 --> 00:17:34.350
like a beacon can
announce presence.

00:17:34.350 --> 00:17:36.120
You could have a beacon
on your key chain,

00:17:36.120 --> 00:17:38.091
or you could have one in
your car or something.

00:17:38.091 --> 00:17:40.090
And then it's possible
for your phone to detect,

00:17:40.090 --> 00:17:41.770
OK, I noticed you've just
gotten out of your car,

00:17:41.770 --> 00:17:43.353
but now you're
approaching your house.

00:17:43.353 --> 00:17:45.981
Or Wayne has come home, or Paul
has come home, or whatever.

00:17:45.981 --> 00:17:47.480
And you can detect
different things.

00:17:47.480 --> 00:17:49.070
And you have different
theme music on.

00:17:49.070 --> 00:17:52.579
So when I walk in, I
can have my theme music.

00:17:52.579 --> 00:17:54.620
Actually, I remember I
went to a conference once,

00:17:54.620 --> 00:17:57.120
and this guy was talking about
this concept of playing theme

00:17:57.120 --> 00:17:58.590
music whenever he came home.

00:17:58.590 --> 00:18:00.032
RYAN CAIRNS: What would
your theme music be?

00:18:00.032 --> 00:18:01.490
WAYNE PIEKARSKI:
I-- Wait a minute,

00:18:01.490 --> 00:18:03.430
I'm asking the questions here.

00:18:03.430 --> 00:18:04.895
What's your theme music?

00:18:04.895 --> 00:18:07.950
RYAN CAIRNS: I have
no theme music.

00:18:07.950 --> 00:18:10.975
PAUL WESTBROOK:
But I could imagine

00:18:10.975 --> 00:18:13.350
using the beacons to actually
detect presence in the room

00:18:13.350 --> 00:18:15.683
and actually turn on and off
lights, to actually control

00:18:15.683 --> 00:18:16.980
the air conditioner fans.

00:18:16.980 --> 00:18:18.970
There's a lot of
opportunity, especially

00:18:18.970 --> 00:18:22.155
being able to talk to
devices as well as detect.

00:18:22.155 --> 00:18:24.030
WAYNE PIEKARSKI: What
I want to do, actually,

00:18:24.030 --> 00:18:26.060
is I want to put a beacon
on my dog's collar.

00:18:26.060 --> 00:18:27.690
And then, I have a
sensor on my couch

00:18:27.690 --> 00:18:29.356
that detects when
they get on the couch.

00:18:29.356 --> 00:18:31.579
And then it sets off an
alarm or something like that.

00:18:31.579 --> 00:18:33.870
Because I actually have a
legitimate problem with this.

00:18:33.870 --> 00:18:35.746
A lot of my ideas that
I build are actually

00:18:35.746 --> 00:18:37.620
problems that I'm trying
to solve for myself,

00:18:37.620 --> 00:18:39.350
but I turn them
into work problems,

00:18:39.350 --> 00:18:41.849
so then I can write blog posts
about it and stuff like that.

00:18:41.849 --> 00:18:45.050
But my current challenge is
a couch detector or something

00:18:45.050 --> 00:18:45.800
to keep them off.

00:18:45.800 --> 00:18:46.950
Because it's
actually really hard.

00:18:46.950 --> 00:18:48.410
And I would love to buy
something like this.

00:18:48.410 --> 00:18:50.077
And like a trash
can that detects

00:18:50.077 --> 00:18:51.660
when it's been popped
open incorrectly

00:18:51.660 --> 00:18:53.196
when the dog sticks his head
in there to pull food out,

00:18:53.196 --> 00:18:53.696
you know?

00:18:53.696 --> 00:18:57.300
All kinds of-- yeah, the
internet of dog products.

00:18:57.300 --> 00:18:58.774
It's exciting stuff.

00:18:58.774 --> 00:19:00.940
RYAN CAIRNS: I was going
to add, the big thing to me

00:19:00.940 --> 00:19:03.821
is that we don't make
end users programmers.

00:19:03.821 --> 00:19:04.320
Right?

00:19:04.320 --> 00:19:05.470
Like I want to buy
all these products,

00:19:05.470 --> 00:19:06.560
I want to bring
them into my house,

00:19:06.560 --> 00:19:08.060
I want to do different
things with them,

00:19:08.060 --> 00:19:09.930
but I want those experiences
to be suggestive.

00:19:09.930 --> 00:19:11.190
I don't want to have
to think about, OK,

00:19:11.190 --> 00:19:12.800
how am I going to
combine these things?

00:19:12.800 --> 00:19:13.100
WAYNE PIEKARSKI: Yeah.

00:19:13.100 --> 00:19:14.040
I was thinking a
lot of people don't

00:19:14.040 --> 00:19:16.000
know-- they want to
have a good time,

00:19:16.000 --> 00:19:17.930
but they don't know how to code.

00:19:17.930 --> 00:19:21.835
And you don't want to have a "if
this, then else" type scenario.

00:19:21.835 --> 00:19:23.960
And I guess that's where
Nest has been successful--

00:19:23.960 --> 00:19:24.580
this thermostat.

00:19:24.580 --> 00:19:25.955
And it just does
the right thing.

00:19:25.955 --> 00:19:28.101
And you play with
the thermostat,

00:19:28.101 --> 00:19:30.350
but it's not a traditional,
set-the-number type thing.

00:19:30.350 --> 00:19:31.900
It tries to look
at your patterns.

00:19:31.900 --> 00:19:33.930
And I guess now people
have the opportunity

00:19:33.930 --> 00:19:35.450
to build exciting
things like this.

00:19:35.450 --> 00:19:37.027
But that's the challenge now.

00:19:37.027 --> 00:19:39.360
And so we've had a bunch of
talks about machine learning

00:19:39.360 --> 00:19:42.009
and TensorFlow and all
these other things today.

00:19:42.009 --> 00:19:43.800
I guess the thing with
ubiquitous computing

00:19:43.800 --> 00:19:45.900
is we're combining all these
different areas together.

00:19:45.900 --> 00:19:47.399
So you've got your
air conditioning,

00:19:47.399 --> 00:19:49.000
you've got your car
and your-- but you

00:19:49.000 --> 00:19:51.480
can use machine learning
algorithms to study patterns

00:19:51.480 --> 00:19:55.072
and try to do the right thing
for the user when they want it.

00:19:55.072 --> 00:19:56.780
And we have a question
in the back there.

00:19:56.780 --> 00:19:57.360
Yeah.

00:19:57.360 --> 00:19:59.020
AUDIENCE: Hi there.

00:19:59.020 --> 00:20:01.780
I hear a lot of you talking
about both Brillo and Weave

00:20:01.780 --> 00:20:06.180
on setting state, on, "This
will turn a light on."

00:20:06.180 --> 00:20:08.120
"I will know when a
light is turned on."

00:20:08.120 --> 00:20:09.470
I'll have all of these things.

00:20:09.470 --> 00:20:12.770
What I'm not hearing are
the inputs for some of them.

00:20:12.770 --> 00:20:14.380
So I'm not hearing,
for example, how

00:20:14.380 --> 00:20:20.890
to use Weave to create the light
switch-- just the switch part.

00:20:20.890 --> 00:20:24.120
I kind of have an idea on
how Weave would do that

00:20:24.120 --> 00:20:28.180
on sending it, but not
how that switch would say,

00:20:28.180 --> 00:20:31.260
OK, this person
has now toggled--

00:20:31.260 --> 00:20:33.800
this person's now issuing
showing a toggle command.

00:20:33.800 --> 00:20:39.440
Or even on the Weave side, how
to read for a toggle command.

00:20:39.440 --> 00:20:42.077
So that's what I want to hear
more about at this point.

00:20:42.077 --> 00:20:43.993
WAYNE PIEKARSKI: Yeah,
that's a good question.

00:20:43.993 --> 00:20:44.705
Yeah.

00:20:44.705 --> 00:20:45.580
PAUL WESTBROOK: Sure.

00:20:45.580 --> 00:20:48.140
I can start with the
Weave side of this.

00:20:48.140 --> 00:20:49.995
So as part of the
schemas, like for example,

00:20:49.995 --> 00:20:53.946
let's take a light
switch, for example.

00:20:53.946 --> 00:20:55.740
The schema for a device
actually represents

00:20:55.740 --> 00:20:56.640
a couple of different things.

00:20:56.640 --> 00:20:58.380
One is the commands
that it can handle,

00:20:58.380 --> 00:21:00.700
and the second part
is actually the state

00:21:00.700 --> 00:21:04.800
that it's currently in now.

00:21:04.800 --> 00:21:06.550
For example, an
application or a service

00:21:06.550 --> 00:21:08.300
can actually watch the
state and actually watch

00:21:08.300 --> 00:21:09.720
state transitions
and potentially

00:21:09.720 --> 00:21:13.251
use that as a trigger
to perform some action.

00:21:13.251 --> 00:21:15.250
Whether the action happens
to be another command

00:21:15.250 --> 00:21:19.420
or happens to be--
whatever it wants to be.

00:21:19.420 --> 00:21:21.740
The other part is
actually the commands.

00:21:21.740 --> 00:21:26.534
For example, in order to
issue a command to a device,

00:21:26.534 --> 00:21:28.200
there is some schema
and so applications

00:21:28.200 --> 00:21:29.110
would have to actually do that.

00:21:29.110 --> 00:21:31.068
So in the case that you
gave, like for example,

00:21:31.068 --> 00:21:33.297
a light switch,
I would imagine--

00:21:33.297 --> 00:21:35.380
this is just off the top
my head-- I would imagine

00:21:35.380 --> 00:21:37.450
a light switch would
actually define

00:21:37.450 --> 00:21:40.440
a state which is on or off,
maybe its brightness if it's

00:21:40.440 --> 00:21:42.660
a fancy light switch.

00:21:42.660 --> 00:21:45.474
But it would also
represent a command.

00:21:45.474 --> 00:21:47.640
And so I would be able to
issue that command to that

00:21:47.640 --> 00:21:50.138
light switch to
actually trigger that.

00:21:50.138 --> 00:21:53.690
That command would
actually affect the state.

00:21:53.690 --> 00:21:55.380
So then the
application, in addition

00:21:55.380 --> 00:21:59.139
to actually controlling
the voltage of whatever

00:21:59.139 --> 00:22:00.680
was connected to
that thing, it could

00:22:00.680 --> 00:22:02.760
also-- applications could
watch that state change.

00:22:02.760 --> 00:22:03.650
AUDIENCE: Well,
but the problem is

00:22:03.650 --> 00:22:05.800
that whatever is
connected to that thing

00:22:05.800 --> 00:22:08.890
is another, completely
separate Brillo device.

00:22:08.890 --> 00:22:12.340
So really, I now have a virtual
switch and a virtual light,

00:22:12.340 --> 00:22:15.040
and somewhere I need to make
the connection that says,

00:22:15.040 --> 00:22:17.760
when I toggle any of
these three switches

00:22:17.760 --> 00:22:19.910
on different sides
of my dining room,

00:22:19.910 --> 00:22:21.730
my dining room light
needs to turn on.

00:22:21.730 --> 00:22:25.050
And I can see how each
individual part of that works,

00:22:25.050 --> 00:22:28.380
but I can't see how
it comes together.

00:22:28.380 --> 00:22:30.800
RYAN CAIRNS: So the first
kind that we have is very much

00:22:30.800 --> 00:22:32.920
phone-to-device, but
we're also working

00:22:32.920 --> 00:22:36.169
on triggers and signals, which
we haven't rolled out yet.

00:22:36.169 --> 00:22:36.710
AUDIENCE: OK.

00:22:36.710 --> 00:22:37.750
RYAN CAIRNS: And that'll
let you do things like--

00:22:37.750 --> 00:22:38.070
WAYNE PIEKARSKI:
That's the glue.

00:22:38.070 --> 00:22:39.260
RYAN CAIRNS: --the
device-to-device stuff,

00:22:39.260 --> 00:22:39.820
what you're talking about.

00:22:39.820 --> 00:22:41.580
Like I flicked
this device, now I

00:22:41.580 --> 00:22:43.538
need to go send a message
to these other things

00:22:43.538 --> 00:22:44.961
to go broadcast what changed.

00:22:44.961 --> 00:22:46.960
Or somebody might have
to subscribe to something

00:22:46.960 --> 00:22:48.910
and say, oh, this state changed.

00:22:48.910 --> 00:22:50.324
How do I take action on it?

00:22:50.324 --> 00:22:51.990
We're working on
rolling that stuff out.

00:22:51.990 --> 00:22:53.862
It'll be a little
bit, but stay tuned.

00:22:53.862 --> 00:22:55.570
WAYNE PIEKARSKI: I
guess the thing, also,

00:22:55.570 --> 00:22:56.986
that's important
is that the Weave

00:22:56.986 --> 00:22:58.650
API is a very cross-platform.

00:22:58.650 --> 00:23:02.660
They work on iOS, Android,
web-- have I missed anything?

00:23:02.660 --> 00:23:04.890
Yeah, they work across
most of the major devices.

00:23:04.890 --> 00:23:07.410
So it's nice, because
you're not restricted

00:23:07.410 --> 00:23:10.630
to just forcing it to work
on a phone or anything.

00:23:10.630 --> 00:23:13.164
You could build something that
runs on a server in the cloud

00:23:13.164 --> 00:23:14.080
somewhere or whatever.

00:23:16.900 --> 00:23:17.579
OK.

00:23:17.579 --> 00:23:20.120
While we're talking about light
switches and stuff like that,

00:23:20.120 --> 00:23:21.530
what kind of
markets are you guys

00:23:21.530 --> 00:23:24.540
excited about for
different-- what

00:23:24.540 --> 00:23:28.272
are the big areas you
think are going to be huge?

00:23:28.272 --> 00:23:30.730
RYAN CAIRNS: We're doing a lot
of consumer stuff right now.

00:23:30.730 --> 00:23:32.520
We're talking a lot
about home automation.

00:23:32.520 --> 00:23:35.250
And I think the opportunity here
is a lot bigger than just home

00:23:35.250 --> 00:23:37.708
automation, which I think is
a really interesting vertical,

00:23:37.708 --> 00:23:40.160
but not the whole pie.

00:23:40.160 --> 00:23:41.660
The thing I've been
telling the team

00:23:41.660 --> 00:23:44.530
is like, think about how we
put a computer in every device,

00:23:44.530 --> 00:23:46.020
and what does that look like?

00:23:46.020 --> 00:23:48.430
And I think there's a lot of
scenarios like smart cities,

00:23:48.430 --> 00:23:50.138
like parking meters
and things like that.

00:23:50.138 --> 00:23:51.820
There's a lot of
industrial use cases.

00:23:51.820 --> 00:23:53.830
There's a lot of, potentially,
healthcare use cases--

00:23:53.830 --> 00:23:55.996
I don't know if we're going
to get into that or not,

00:23:55.996 --> 00:23:57.716
but definitely a
lot of potential

00:23:57.716 --> 00:23:58.840
to put computers in things.

00:23:58.840 --> 00:24:00.256
And interesting
problems fall out.

00:24:00.256 --> 00:24:01.200
And I think we can--

00:24:01.200 --> 00:24:01.340
WAYNE PIEKARSKI: Yeah.

00:24:01.340 --> 00:24:02.923
Well, that's the
thing with software--

00:24:02.923 --> 00:24:05.170
not everything is
about consumer devices.

00:24:05.170 --> 00:24:07.970
There's a lot of companies
that do contracting work, who--

00:24:07.970 --> 00:24:09.620
they're asked to
build infrastructure,

00:24:09.620 --> 00:24:12.709
to put a smart meter in every
house to measure its power

00:24:12.709 --> 00:24:13.500
usage or something.

00:24:13.500 --> 00:24:17.134
And those kind of things will
all be useful for that too.

00:24:17.134 --> 00:24:19.050
RYAN CAIRNS: One example
would be cars, right?

00:24:19.050 --> 00:24:21.280
Everybody thinks about cars
in terms of, oh, you're

00:24:21.280 --> 00:24:24.330
going to put a computer in
the car, navigation system,

00:24:24.330 --> 00:24:26.120
infotainment, that
sort of stuff.

00:24:26.120 --> 00:24:27.210
And that's great.

00:24:27.210 --> 00:24:28.890
I think Android Auto
is pretty awesome.

00:24:28.890 --> 00:24:31.265
But there's all of these other
subsystems inside of cars,

00:24:31.265 --> 00:24:32.560
too, that we don't address.

00:24:32.560 --> 00:24:35.887
For instance, in a Tesla, they
have an NVIDIA Tegra processor

00:24:35.887 --> 00:24:37.470
just running the
gauge cluster, that's

00:24:37.470 --> 00:24:41.187
doing some basic graphics for
things like speedometer and end

00:24:41.187 --> 00:24:42.520
user input and things like that.

00:24:42.520 --> 00:24:44.436
And there's all sorts
of other subsystems too.

00:24:44.436 --> 00:24:46.300
WAYNE PIEKARSKI: Yeah.

00:24:46.300 --> 00:24:48.054
Earlier, we talked
about displays.

00:24:48.054 --> 00:24:50.720
So the little Brillo boards that
have an HDMI output-- what kind

00:24:50.720 --> 00:24:53.771
of hardware do they have
for graphics rendering?

00:24:53.771 --> 00:24:54.770
Do they do open gel, or?

00:24:54.770 --> 00:24:56.470
I'm not sure, actually.

00:24:56.470 --> 00:24:58.710
GUARAV SHAH: Right
now, graphics support

00:24:58.710 --> 00:25:03.840
is-- we can support very
basic, non-x related graphics.

00:25:03.840 --> 00:25:05.190
But we're working on it.

00:25:05.190 --> 00:25:06.620
But nothing to
announce right now.

00:25:06.620 --> 00:25:09.121
RYAN CAIRNS: The goal is to be
headless, for the short term.

00:25:09.121 --> 00:25:10.036
WAYNE PIEKARSKI: Yeah.

00:25:10.036 --> 00:25:11.680
Well, that makes it
really low-powered.

00:25:11.680 --> 00:25:14.580
Although those boards
are really powerful.

00:25:14.580 --> 00:25:17.389
They're almost the same chip
as in a cell phone, basically.

00:25:17.389 --> 00:25:18.180
RYAN CAIRNS: Right.

00:25:18.180 --> 00:25:19.390
A lot of that
comes from the fact

00:25:19.390 --> 00:25:21.681
that we were trying to get
something to market quickly.

00:25:21.681 --> 00:25:24.720
And Qualcomm and all
of our other partners

00:25:24.720 --> 00:25:27.660
wanted to put out a very
full-featured set of boards

00:25:27.660 --> 00:25:29.650
so the developers have
access to everything.

00:25:29.650 --> 00:25:31.060
And the goal would be
you start with something

00:25:31.060 --> 00:25:32.670
like that, that's geared
towards a cell phone,

00:25:32.670 --> 00:25:33.620
and then scale it down.

00:25:33.620 --> 00:25:34.100
WAYNE PIEKARSKI: Yeah.

00:25:34.100 --> 00:25:34.690
Yeah.

00:25:34.690 --> 00:25:35.309
OK, cool.

00:25:35.309 --> 00:25:36.100
Any more questions?

00:25:36.100 --> 00:25:38.101
One in the back there, yeah.

00:25:38.101 --> 00:25:39.850
AUDIENCE: This is going
back a little bit,

00:25:39.850 --> 00:25:41.570
back a question or so.

00:25:41.570 --> 00:25:44.730
So my use case is,
I just got the word,

00:25:44.730 --> 00:25:48.170
I'm heading into Tier 3
from PG&amp;E. My question is,

00:25:48.170 --> 00:25:50.580
who's responsible around here?

00:25:50.580 --> 00:25:54.290
That's a historical question.

00:25:54.290 --> 00:25:57.690
Where does Weave
run when you have

00:25:57.690 --> 00:26:00.670
a question about a
number of devices

00:26:00.670 --> 00:26:03.040
that are all secondary devices?

00:26:03.040 --> 00:26:05.560
They're power users.

00:26:05.560 --> 00:26:07.740
And I can get how much
power they're using,

00:26:07.740 --> 00:26:08.680
but where do I put it?

00:26:08.680 --> 00:26:10.930
Do I have to throw it all
the way back to the cloud,

00:26:10.930 --> 00:26:11.970
and does that scale?

00:26:11.970 --> 00:26:13.500
Really?

00:26:13.500 --> 00:26:20.150
If it's a local resource,
is it a capable device?

00:26:20.150 --> 00:26:22.780
A capable thermostat
that it would run on?

00:26:22.780 --> 00:26:25.477
Or some kind of
neutral gateway device?

00:26:25.477 --> 00:26:27.810
WAYNE PIEKARSKI: It sounds
like there's logging in here.

00:26:27.810 --> 00:26:29.620
Where would we put that?

00:26:29.620 --> 00:26:30.910
AUDIENCE: Yeah.

00:26:30.910 --> 00:26:34.125
I do historical log--
I log continuously.

00:26:34.125 --> 00:26:35.500
PAUL WESTBROOK:
Just to make sure

00:26:35.500 --> 00:26:37.510
I understand the
question correctly--

00:26:37.510 --> 00:26:41.010
you would like to create a
device that actually tracks

00:26:41.010 --> 00:26:43.640
the power usage at your
house, or you want the power

00:26:43.640 --> 00:26:46.106
usage of the Weave devices?

00:26:46.106 --> 00:26:49.490
AUDIENCE: Oh, of the
lights and the appliances

00:26:49.490 --> 00:26:50.620
within the house, not the--

00:26:50.620 --> 00:26:51.250
WAYNE PIEKARSKI: He wants
to find the culprit.

00:26:51.250 --> 00:26:52.910
RYAN CAIRNS: You're
aggregating everything.

00:26:52.910 --> 00:26:53.493
AUDIENCE: Yes.

00:26:53.493 --> 00:26:56.510
Yeah, and recording
it piecemeal.

00:26:56.510 --> 00:26:58.160
PAUL WESTBROOK: Sure.

00:26:58.160 --> 00:26:59.922
This is possible
to do with Weave.

00:26:59.922 --> 00:27:01.755
One thing that you can
do is actually create

00:27:01.755 --> 00:27:04.770
a Weave device that actually
aggregates this and actually

00:27:04.770 --> 00:27:08.960
represents this power
state as state changes.

00:27:08.960 --> 00:27:11.210
And you could actually
decide-- if you don't associate

00:27:11.210 --> 00:27:14.020
that device with the cloud,
then that logging would actually

00:27:14.020 --> 00:27:18.330
remain local, and you
can continue that.

00:27:18.330 --> 00:27:21.110
Or you could actually associate
that with a Google account,

00:27:21.110 --> 00:27:24.199
and then that would actually
then propagate to the cloud.

00:27:24.199 --> 00:27:24.740
AUDIENCE: OK.

00:27:24.740 --> 00:27:27.650
And this would not be
a smartphone platform.

00:27:27.650 --> 00:27:32.370
This would be a
permanently resident device

00:27:32.370 --> 00:27:40.150
within the home, perhaps DSL
modem, an augmented gateway

00:27:40.150 --> 00:27:41.610
device.

00:27:41.610 --> 00:27:43.899
Weave capable.

00:27:43.899 --> 00:27:44.690
PAUL WESTBROOK: OK.

00:27:44.690 --> 00:27:47.180
So there is a
hardware device that's

00:27:47.180 --> 00:27:50.700
in the house that would actually
gather this information?

00:27:53.600 --> 00:27:57.100
That should be definitely
doable with Weave, as well as

00:27:57.100 --> 00:27:58.392
that could run Brillo, as well.

00:27:58.392 --> 00:28:01.016
RYAN CAIRNS: It's in the things
like the data retention policy,

00:28:01.016 --> 00:28:02.740
and how much you
upload to the cloud,

00:28:02.740 --> 00:28:05.440
and how long you keep things
uploaded to the cloud,

00:28:05.440 --> 00:28:07.065
and who's allowed to
see it, and things

00:28:07.065 --> 00:28:09.450
like that all come down to
sort of both OEM preference

00:28:09.450 --> 00:28:10.658
and probably user preference.

00:28:10.658 --> 00:28:12.470
And depending on who
made the metering,

00:28:12.470 --> 00:28:14.010
or what the user
wants to pay for,

00:28:14.010 --> 00:28:16.720
or what the economics
of the situation are,

00:28:16.720 --> 00:28:19.540
the device maker, I think, would
come up with a suitable policy

00:28:19.540 --> 00:28:20.247
there.

00:28:20.247 --> 00:28:22.330
But we should be able to
have a lot of flexibility

00:28:22.330 --> 00:28:24.690
in the platform to be able to
do different things for that.

00:28:24.690 --> 00:28:25.850
WAYNE PIEKARSKI: The
devices can be shared, too.

00:28:25.850 --> 00:28:27.830
Like if you came over to
my house, I could say,

00:28:27.830 --> 00:28:29.300
hey, I'll share this
device with you,

00:28:29.300 --> 00:28:31.299
so you could feed my dog
or something like that.

00:28:31.299 --> 00:28:34.190
So you can give access to
other people for the device--

00:28:34.190 --> 00:28:35.481
PAUL WESTBROOK: That's correct.

00:28:35.481 --> 00:28:37.220
And even sharing
devices, not even

00:28:37.220 --> 00:28:39.530
necessarily for functional,
but for viewing access.

00:28:39.530 --> 00:28:41.190
So, for example, in the
case of a power meter.

00:28:41.190 --> 00:28:43.330
Let's say, for example, I
want to share this device

00:28:43.330 --> 00:28:45.580
with my wife so she can see
how much electricity we're

00:28:45.580 --> 00:28:46.660
using at home.

00:28:46.660 --> 00:28:48.987
That's also possible as well.

00:28:48.987 --> 00:28:49.820
WAYNE PIEKARSKI: OK.

00:28:49.820 --> 00:28:51.486
And we have another
question over there.

00:28:51.486 --> 00:28:53.610
AUDIENCE: Yeah, I got
a couple questions.

00:28:53.610 --> 00:28:59.010
Just really simple is,
what Android version

00:28:59.010 --> 00:29:01.020
is Brillo based on?

00:29:01.020 --> 00:29:06.350
And then is there any plans
to bring that modular update

00:29:06.350 --> 00:29:10.950
architecture to just
standard Android on phones?

00:29:10.950 --> 00:29:13.680
So I don't have to wait like a
year for the Marshmallow update

00:29:13.680 --> 00:29:15.797
on my phone?

00:29:15.797 --> 00:29:16.630
WAYNE PIEKARSKI: OK.

00:29:16.630 --> 00:29:18.963
RYAN CAIRNS: So nothing to
say about updates on Android,

00:29:18.963 --> 00:29:22.140
but we can tell
you what version.

00:29:22.140 --> 00:29:27.460
GUARAV SHAH: It is based
on the latest AOSP sources.

00:29:27.460 --> 00:29:30.670
In fact we do all our
development in open source.

00:29:30.670 --> 00:29:34.865
And we do it regularly,
not just code drops.

00:29:34.865 --> 00:29:36.650
RYAN CAIRNS: Yeah,
we work in the open.

00:29:36.650 --> 00:29:37.690
GUARAV SHAH: In
terms of versioning,

00:29:37.690 --> 00:29:39.064
I think one thing
to keep in mind

00:29:39.064 --> 00:29:41.720
is that we're not using the
same version or numbering

00:29:41.720 --> 00:29:42.570
scheme as--

00:29:42.570 --> 00:29:44.986
WAYNE PIEKARSKI: Yeah, it's
not like KitKat, Marshmallow--

00:29:44.986 --> 00:29:45.760
GUARAV SHAH: Yeah.

00:29:45.760 --> 00:29:49.495
And that's just because all
our development is in AOSP.

00:29:49.495 --> 00:29:50.870
RYAN CAIRNS: Having
said that, we

00:29:50.870 --> 00:29:52.328
don't want to
encourage people just

00:29:52.328 --> 00:29:54.700
to take random snapshots of
AOSP and push them to users.

00:29:54.700 --> 00:29:56.570
We want to have some
well-defined releases,

00:29:56.570 --> 00:29:59.090
but we want to do it at a
more granular level than what

00:29:59.090 --> 00:30:02.620
Android does today with
the dessert releases.

00:30:02.620 --> 00:30:04.190
AUDIENCE: And also
my second question

00:30:04.190 --> 00:30:11.690
is, what's in it for
Google, or what's

00:30:11.690 --> 00:30:13.100
your monetization strategy?

00:30:13.100 --> 00:30:16.220
Is there some kind of
licensing that you're

00:30:16.220 --> 00:30:17.890
doing for hardware
manufacturers,

00:30:17.890 --> 00:30:20.570
or are the app developers going
to have to pay its licensing

00:30:20.570 --> 00:30:22.890
fees, or what's up with that?

00:30:22.890 --> 00:30:25.140
RYAN CAIRNS: So we're
not taking a license fee.

00:30:25.140 --> 00:30:27.232
When I think about
what's in it for Google,

00:30:27.232 --> 00:30:29.190
especially when people
ask me at Google, what's

00:30:29.190 --> 00:30:31.254
in it for Google, the
answer is, we have

00:30:31.254 --> 00:30:32.420
a lot of Android developers.

00:30:32.420 --> 00:30:33.970
And we have a lot of
developers that we

00:30:33.970 --> 00:30:35.410
want to make sure
that they can program

00:30:35.410 --> 00:30:36.534
against the physical world.

00:30:36.534 --> 00:30:38.010
This is one way to do it.

00:30:38.010 --> 00:30:40.290
We also have a lot of
services, and our developers

00:30:40.290 --> 00:30:41.790
build a lot of
services, and we want

00:30:41.790 --> 00:30:44.540
to create a platform where
both our developers and us can

00:30:44.540 --> 00:30:46.950
easily distribute our
software on top of.

00:30:46.950 --> 00:30:48.850
And I think, by doing
that, that creates

00:30:48.850 --> 00:30:52.250
a lot of future monetization
opportunities for both Google

00:30:52.250 --> 00:30:53.520
and our developers.

00:30:53.520 --> 00:30:54.940
WAYNE PIEKARSKI: That's also why
we're running this conference,

00:30:54.940 --> 00:30:57.106
I guess, is it's part of
all the different products.

00:30:57.106 --> 00:30:59.430
They all sort of fit together.

00:30:59.430 --> 00:31:02.300
You've got Brillo and Weave and
beacons and wearables and all

00:31:02.300 --> 00:31:04.559
these different
things, and they each

00:31:04.559 --> 00:31:06.600
bring a piece of the puzzle
that-- they can't all

00:31:06.600 --> 00:31:08.947
solve the puzzle by themselves,
but combined together,

00:31:08.947 --> 00:31:10.280
they do very interesting things.

00:31:10.280 --> 00:31:12.446
Like you said, there's all
these Android developers.

00:31:12.446 --> 00:31:15.000
That gives them new capabilities
and things like that.

00:31:15.000 --> 00:31:15.750
AUDIENCE: Awesome.

00:31:15.750 --> 00:31:18.050
Well, thank you for that.

00:31:18.050 --> 00:31:20.700
The other guys are doing
pretty much the exact opposite.

00:31:20.700 --> 00:31:22.290
So thanks.

00:31:22.290 --> 00:31:23.443
WAYNE PIEKARSKI: Thank you.

00:31:23.443 --> 00:31:24.430
Question over there?

00:31:24.430 --> 00:31:26.620
AUDIENCE: Yeah, I had
two different questions.

00:31:26.620 --> 00:31:28.390
The first one is,
considering that Weave

00:31:28.390 --> 00:31:31.430
is a crucial part of
the infrastructure

00:31:31.430 --> 00:31:35.090
in communications, what
is your target SLA for it?

00:31:35.090 --> 00:31:38.820
And if there's any sort of
queuing in case of an outage

00:31:38.820 --> 00:31:41.297
or any sort of downtimes?

00:31:41.297 --> 00:31:43.630
WAYNE PIEKARSKI: I missed the
last part of the question,

00:31:43.630 --> 00:31:43.750
but--

00:31:43.750 --> 00:31:44.240
PAUL WESTBROOK: Yeah.

00:31:44.240 --> 00:31:45.823
Would you mind
repeating the question?

00:31:45.823 --> 00:31:49.230
AUDIENCE: Just, what would be
the SLA of the Weave services

00:31:49.230 --> 00:31:51.630
as a whole in the
cloud API side of it?

00:31:51.630 --> 00:31:55.630
And is there any sort
of road maps for queuing

00:31:55.630 --> 00:31:58.960
or any sort of contingency
plans when there is an outage?

00:32:01.840 --> 00:32:04.880
PAUL WESTBROOK: Google services
are-- the Weave service

00:32:04.880 --> 00:32:07.450
is running in our backend.

00:32:07.450 --> 00:32:10.100
I don't know if we
publicly say SLAs.

00:32:10.100 --> 00:32:11.400
RYAN CAIRNS: Yeah.

00:32:11.400 --> 00:32:14.194
Being that this
hasn't been fully

00:32:14.194 --> 00:32:15.860
released to everybody
yet, I think we're

00:32:15.860 --> 00:32:17.531
holding back what our SLAs are.

00:32:17.531 --> 00:32:18.030
But--

00:32:18.030 --> 00:32:19.490
WAYNE PIEKARSKI: Yeah, right
now it's a developer product.

00:32:19.490 --> 00:32:22.080
So please do not build a
nuclear reactor or anything

00:32:22.080 --> 00:32:23.510
important with it.

00:32:23.510 --> 00:32:25.080
Because that's not cool.

00:32:25.080 --> 00:32:27.439
It is beta software, so
please treat it accordingly.

00:32:27.439 --> 00:32:28.980
RYAN CAIRNS: Like
any Google product,

00:32:28.980 --> 00:32:30.310
we're all carrying pagers.

00:32:30.310 --> 00:32:32.040
And we're all trying
to get latency down.

00:32:32.040 --> 00:32:34.750
And we really care that 90th
percentile is really fast

00:32:34.750 --> 00:32:36.322
and their uptime is really high.

00:32:36.322 --> 00:32:38.780
Unfortunately, I can't quote
you an exact number right now.

00:32:38.780 --> 00:32:39.230
AUDIENCE: Fair enough.

00:32:39.230 --> 00:32:39.730
Yeah.

00:32:39.730 --> 00:32:44.370
The second question is, the
whole movement of Brillo Weave

00:32:44.370 --> 00:32:48.780
is about interoperability,
ability to connect everything.

00:32:48.780 --> 00:32:50.610
But the realistic
sense is that there

00:32:50.610 --> 00:32:53.560
are several other IoT-based
platforms out there.

00:32:53.560 --> 00:32:57.670
And for you to expect
a consumer to only use

00:32:57.670 --> 00:33:02.060
Brillo or Weave-connected
device is probably unrealistic.

00:33:02.060 --> 00:33:03.860
And is there any
thoughts-- and this

00:33:03.860 --> 00:33:06.290
is not any plans or anything
like that-- any thoughts

00:33:06.290 --> 00:33:11.130
from you guys as far as
any future plans or talks

00:33:11.130 --> 00:33:14.750
or discussions with other
major partners or players

00:33:14.750 --> 00:33:18.747
out there for interoperability
between platforms?

00:33:18.747 --> 00:33:20.830
PAUL WESTBROOK: At least
from the Brillo and Weave

00:33:20.830 --> 00:33:23.760
point of view, we're open.

00:33:23.760 --> 00:33:27.410
For example, if a OEM wants to
make a Brillo and Weave device,

00:33:27.410 --> 00:33:29.910
we're not going to prevent them
from integrating that device

00:33:29.910 --> 00:33:30.951
with any other platforms.

00:33:33.620 --> 00:33:35.306
AUDIENCE: Thank you.

00:33:35.306 --> 00:33:37.180
WAYNE PIEKARSKI: Another
question over there.

00:33:37.180 --> 00:33:39.000
AUDIENCE: Just curious
for your thoughts.

00:33:39.000 --> 00:33:41.060
Let's say that I'm a
device manufacturer,

00:33:41.060 --> 00:33:45.375
and I'm deciding what platform
to build my new device off of.

00:33:45.375 --> 00:33:47.500
I'm kind of curious what
your thoughts on the story

00:33:47.500 --> 00:33:48.708
would be that you would tell.

00:33:48.708 --> 00:33:50.920
Why would I choose
to build on Brillo,

00:33:50.920 --> 00:33:53.330
say, as to just
putting together a set

00:33:53.330 --> 00:33:56.210
of yocto patches or some
other embedded Linux system?

00:33:56.210 --> 00:33:58.382
Is it just primarily
the Google services,

00:33:58.382 --> 00:34:00.590
the over-the-air updates
metrics, that sort of thing?

00:34:00.590 --> 00:34:03.450
Or are there benefits to,
say, using the Android stack,

00:34:03.450 --> 00:34:05.225
or other things that
you see bringing

00:34:05.225 --> 00:34:08.040
an advantage to a device
manufacturer over something

00:34:08.040 --> 00:34:10.510
like that?

00:34:10.510 --> 00:34:11.969
RYAN CAIRNS: I
think a few things.

00:34:11.969 --> 00:34:15.250
I'll take a couple, and then
maybe Guarav can chime in.

00:34:15.250 --> 00:34:17.900
But the one I think of most is
the Android hardware ecosystem.

00:34:17.900 --> 00:34:19.510
It's very easy to
go to any silicon

00:34:19.510 --> 00:34:21.940
vendor who's supporting
Android and say, give me

00:34:21.940 --> 00:34:23.204
a Brillo thing.

00:34:23.204 --> 00:34:25.120
And the second one is,
obviously, the services

00:34:25.120 --> 00:34:25.911
that you mentioned.

00:34:25.911 --> 00:34:28.351
There's a lot of stuff
like updates and analytics

00:34:28.351 --> 00:34:30.600
and things like that that
you get from Brillo that you

00:34:30.600 --> 00:34:32.659
don't get in other stacks.

00:34:32.659 --> 00:34:34.840
Guarav, security?

00:34:34.840 --> 00:34:35.590
GUARAV SHAH: Yeah.

00:34:35.590 --> 00:34:37.929
I think security
developer experience,

00:34:37.929 --> 00:34:44.020
hardware ecosystem-- yeah,
I think that covers it.

00:34:44.020 --> 00:34:49.150
I think we're also very proud
of the services with respect

00:34:49.150 --> 00:34:50.940
to analytics and updates.

00:34:50.940 --> 00:34:55.219
I really think we have the
best of the great there.

00:34:55.219 --> 00:34:56.926
AUDIENCE: Thank you.

00:34:56.926 --> 00:34:58.425
WAYNE PIEKARSKI: Over there?

00:34:58.425 --> 00:34:59.050
AUDIENCE: Yeah.

00:34:59.050 --> 00:35:01.870
I'm pretty sure this is more
of a manufacturing concern,

00:35:01.870 --> 00:35:03.880
but we talked a
lot about security.

00:35:03.880 --> 00:35:04.820
How about safety?

00:35:04.820 --> 00:35:09.160
Like when you define the schemas
or whatnot, are you concerned?

00:35:09.160 --> 00:35:12.950
Like I might turn--
a user or a developer

00:35:12.950 --> 00:35:15.760
might turn on the thermostat
to like 160 degrees rapidly,

00:35:15.760 --> 00:35:18.606
or even other things like that.

00:35:20.432 --> 00:35:21.890
PAUL WESTBROOK:
That's kind of hot.

00:35:25.527 --> 00:35:26.860
I think there's a couple things.

00:35:26.860 --> 00:35:30.830
One is, we are working with the
OEMs and the hardware makers

00:35:30.830 --> 00:35:33.170
to actually define the schemas.

00:35:33.170 --> 00:35:34.860
So there's going
to be-- the schemas

00:35:34.860 --> 00:35:38.890
also support limits and ranges.

00:35:38.890 --> 00:35:40.810
For example, let's say
if all manufacturers

00:35:40.810 --> 00:35:43.143
agreed that-- I'm just going
to pick a thermostat-- say,

00:35:43.143 --> 00:35:44.717
that 160 degrees is too hot.

00:35:44.717 --> 00:35:46.300
There would be some
agreement, working

00:35:46.300 --> 00:35:49.210
with all the manufacturers to
actually have some fixed limit.

00:35:49.210 --> 00:35:50.900
But ultimately,
the hardware maker

00:35:50.900 --> 00:35:54.700
is the one that's
responsible for making sure

00:35:54.700 --> 00:35:57.200
that the hardware actually
functions correctly.

00:35:57.200 --> 00:35:59.080
I think that whether
it's actually

00:35:59.080 --> 00:36:02.310
through Weave or someone
just spinning the dial too

00:36:02.310 --> 00:36:06.890
far to the right, the device
itself should behave correctly.

00:36:06.890 --> 00:36:09.140
WAYNE PIEKARSKI: That's
something else to think about.

00:36:09.140 --> 00:36:11.723
Because when I was building the
dog feeder, one of my concerns

00:36:11.723 --> 00:36:13.910
actually is that if the
dog feeder fed continuously

00:36:13.910 --> 00:36:16.010
that entire tub, it can
actually kill a dog.

00:36:16.010 --> 00:36:17.510
I've actually taken
my dog to the ER

00:36:17.510 --> 00:36:18.890
twice from eating too much.

00:36:18.890 --> 00:36:19.860
They will eat too much.

00:36:19.860 --> 00:36:20.630
I couldn't believe it, right?

00:36:20.630 --> 00:36:21.460
Cost me $500.

00:36:21.460 --> 00:36:24.320
But anyway, the point is
that I was like, well,

00:36:24.320 --> 00:36:27.681
if the software fails, or if a
wire shorts out, or something,

00:36:27.681 --> 00:36:29.930
you really have to build
multiple layers of protection

00:36:29.930 --> 00:36:30.596
into the device.

00:36:30.596 --> 00:36:33.054
So maybe with the switch
that runs the paddle feeder,

00:36:33.054 --> 00:36:34.720
it should say, well,
if the switch ticks

00:36:34.720 --> 00:36:37.610
more than four times in a
second, you should shut down.

00:36:37.610 --> 00:36:39.384
And if this happens,
you should shut down.

00:36:39.384 --> 00:36:41.800
You could have all these extra
safety features in hardware

00:36:41.800 --> 00:36:44.450
as close to the metal
as possible to shut it

00:36:44.450 --> 00:36:46.280
down and put it in
a fail-safe mode

00:36:46.280 --> 00:36:50.340
so that it fails gracefully,
because putting all

00:36:50.340 --> 00:36:52.122
the food out is unacceptable.

00:36:52.122 --> 00:36:54.080
It's like an airplane
shutting its engines down

00:36:54.080 --> 00:36:55.538
if it doesn't know
what it's doing.

00:36:55.538 --> 00:36:57.920
You've got to design the
hardware in a way that really

00:36:57.920 --> 00:37:00.370
tries to think about, what's
the worst case scenario,

00:37:00.370 --> 00:37:01.619
and what can I do about it?

00:37:01.619 --> 00:37:03.160
So like if it had
a 160-degree thing,

00:37:03.160 --> 00:37:06.070
you'd have a thermal fuse
that melts at 150 to stop it

00:37:06.070 --> 00:37:08.500
from getting to that point.

00:37:08.500 --> 00:37:10.130
Have multiple levels
of protection,

00:37:10.130 --> 00:37:12.370
and don't just rely on the
software somewhere else.

00:37:12.370 --> 00:37:14.640
Because the user, if
they set the dial,

00:37:14.640 --> 00:37:18.150
then it would be kind of crazy
to allow them to do that.

00:37:18.150 --> 00:37:18.900
RYAN CAIRNS: Yeah.

00:37:18.900 --> 00:37:21.310
We certainly can't
design Brillo and Weave

00:37:21.310 --> 00:37:25.860
to deal with operator
error or malintent

00:37:25.860 --> 00:37:28.602
from the hardware
or things like that.

00:37:28.602 --> 00:37:31.060
WAYNE PIEKARSKI: Well, that's
the thing is that there might

00:37:31.060 --> 00:37:33.310
be cases where you want
to set a thermostat to 160

00:37:33.310 --> 00:37:35.643
because you're building an
industrial oven or something,

00:37:35.643 --> 00:37:37.440
and that's a desirable outcome.

00:37:37.440 --> 00:37:40.590
So you've got to make sure
that-- the designer still

00:37:40.590 --> 00:37:43.610
has to think about these
things very carefully.

00:37:43.610 --> 00:37:44.470
Any more questions?

00:37:44.470 --> 00:37:45.021
Yeah.

00:37:45.021 --> 00:37:46.896
AUDIENCE: Was that dog
that overate different

00:37:46.896 --> 00:37:47.820
than [INAUDIBLE]?

00:37:49.977 --> 00:37:52.310
WAYNE PIEKARSKI: A fellow
Googler from the San Francisco

00:37:52.310 --> 00:37:54.830
office had that dog.

00:37:54.830 --> 00:37:57.950
My dogs are at home,
but different dog.

00:37:57.950 --> 00:37:59.120
It's a constant challenge.

00:37:59.120 --> 00:38:03.676
And it's a great motivator for
coming up with innovations.

00:38:03.676 --> 00:38:04.849
AUDIENCE: Early adapter dog.

00:38:04.849 --> 00:38:05.890
WAYNE PIEKARSKI: Exactly.

00:38:05.890 --> 00:38:06.380
Exactly.

00:38:06.380 --> 00:38:06.790
Yeah.

00:38:06.790 --> 00:38:07.490
RYAN CAIRNS: I
got to say, I hope

00:38:07.490 --> 00:38:09.656
you guys are learning as
much about Brillo and Weave

00:38:09.656 --> 00:38:11.435
as I am about Wayne's dogs.

00:38:11.435 --> 00:38:13.810
WAYNE PIEKARSKI: I gotta write
a book about them one day.

00:38:13.810 --> 00:38:14.480
Yeah, question.

00:38:14.480 --> 00:38:16.915
AUDIENCE: So I haven't
heard much mention of this,

00:38:16.915 --> 00:38:18.456
and I don't know,
it's kind of early,

00:38:18.456 --> 00:38:22.305
but I was wondering what the
pricing model for [INAUDIBLE]?

00:38:22.305 --> 00:38:23.430
WAYNE PIEKARSKI: All right.

00:38:23.430 --> 00:38:24.960
Just to repeat the
question-- for anyone

00:38:24.960 --> 00:38:26.550
else who has questions, if
you could go to the mics.

00:38:26.550 --> 00:38:29.470
But the question was, what's
the pricing model for the cloud

00:38:29.470 --> 00:38:30.900
services and things like that?

00:38:30.900 --> 00:38:32.720
RYAN CAIRNS: TBD.

00:38:32.720 --> 00:38:35.150
Right now, there's no
charge for, I think,

00:38:35.150 --> 00:38:37.575
up to 500 developers.

00:38:37.575 --> 00:38:38.450
WAYNE PIEKARSKI: 500?

00:38:38.450 --> 00:38:39.880
RYAN CAIRNS: I think,
for early access.

00:38:39.880 --> 00:38:40.838
Don't quote me on that.

00:38:40.838 --> 00:38:41.830
It might be 100.

00:38:41.830 --> 00:38:44.580
AUDIENCE: So some of the
other cloud services, they

00:38:44.580 --> 00:38:45.830
offer assistance [INAUDIBLE]?

00:38:49.145 --> 00:38:51.270
WAYNE PIEKARSKI: Assistance
with programming stuff?

00:38:51.270 --> 00:38:52.390
Like what kind of assistance?

00:38:52.390 --> 00:38:53.460
RYAN CAIRNS: Like do you
want back-end storage

00:38:53.460 --> 00:38:54.335
and things like that?

00:38:54.335 --> 00:38:56.310
And how are we going to
price those services?

00:38:56.310 --> 00:38:56.814
TBD.

00:38:56.814 --> 00:38:57.980
Nothing to talk about today.

00:38:57.980 --> 00:38:58.886
Sorry.

00:38:58.886 --> 00:39:01.760
AUDIENCE: Right now it's
just bare bones [INAUDIBLE].

00:39:01.760 --> 00:39:02.510
RYAN CAIRNS: Yeah.

00:39:02.510 --> 00:39:03.884
Right now, we have
crash reports,

00:39:03.884 --> 00:39:09.310
analytics, storage for
updates-- Lawrence,

00:39:09.310 --> 00:39:10.824
do you have a number in mind?

00:39:10.824 --> 00:39:12.740
WAYNE PIEKARSKI: Do you
want to go to the mic?

00:39:12.740 --> 00:39:13.140
Are the mics ready?

00:39:13.140 --> 00:39:13.640
Yeah.

00:39:17.100 --> 00:39:18.980
MALE SPEAKER: So for
things like metrics,

00:39:18.980 --> 00:39:22.410
the storage requirements
are so low that it's likely

00:39:22.410 --> 00:39:23.610
that they'll remain free.

00:39:23.610 --> 00:39:27.100
But for updates, for
now, everything is free.

00:39:27.100 --> 00:39:29.800
But once we see what
the adoption is like,

00:39:29.800 --> 00:39:32.720
and if people start to store
a lot of different updates

00:39:32.720 --> 00:39:36.560
and doing it every day, then
we may have to revisit that.

00:39:36.560 --> 00:39:37.670
But for now, it's free.

00:39:37.670 --> 00:39:39.301
And TBD what the
pricing model will be.

00:39:39.301 --> 00:39:41.050
WAYNE PIEKARSKI:
Actually, I remember when

00:39:41.050 --> 00:39:43.417
I saw Lawrence's talk earlier.

00:39:43.417 --> 00:39:46.000
It has all these graphs that you
can draw of like temperatures

00:39:46.000 --> 00:39:46.670
and things like that.

00:39:46.670 --> 00:39:48.128
And I think it's
going to be really

00:39:48.128 --> 00:39:49.545
cool, because some
company's going

00:39:49.545 --> 00:39:52.128
to make a fleet of devices, and
they're going to be like, wow.

00:39:52.128 --> 00:39:53.979
We had a huge failure
rate, and all of them

00:39:53.979 --> 00:39:55.520
had a little spike
in temperature one

00:39:55.520 --> 00:39:57.700
week before they blew up.

00:39:57.700 --> 00:39:59.240
And so a week before,
you hear, oop,

00:39:59.240 --> 00:40:00.448
that device is going to fail.

00:40:00.448 --> 00:40:02.222
We can send a field
technician out.

00:40:02.222 --> 00:40:03.680
And so there might
be a possibility

00:40:03.680 --> 00:40:05.138
that you'll just
get a call saying,

00:40:05.138 --> 00:40:06.560
hey, your oven's about to fail.

00:40:06.560 --> 00:40:08.351
We've already scheduled
someone to come out

00:40:08.351 --> 00:40:10.640
between next week and next
Christmas to come out.

00:40:10.640 --> 00:40:12.740
And they can fix it up
for you, or whatever.

00:40:12.740 --> 00:40:14.360
It will be a way of
preemptively doing maintenance.

00:40:14.360 --> 00:40:15.840
Because the worst thing
that can happen is,

00:40:15.840 --> 00:40:17.980
it's the middle of Thanksgiving,
and your oven fails.

00:40:17.980 --> 00:40:20.438
Whereas I think there's all
kinds of exciting possibilities

00:40:20.438 --> 00:40:24.490
to learn about your device
fleet and what's going on.

00:40:24.490 --> 00:40:27.532
And it helps you with
maintenance and doing research

00:40:27.532 --> 00:40:29.240
into making more
reliable products, and--

00:40:29.240 --> 00:40:29.750
RYAN CAIRNS: Yeah.

00:40:29.750 --> 00:40:31.624
It helps with things
like phone support, too.

00:40:31.624 --> 00:40:36.070
If you could give that data to
your phone techs in the future,

00:40:36.070 --> 00:40:38.012
maybe that's a problem
that we can help solve.

00:40:38.012 --> 00:40:40.470
WAYNE PIEKARSKI: Many years
ago, I did tech support in ISP,

00:40:40.470 --> 00:40:42.241
and doing that was
the hardest thing when

00:40:42.241 --> 00:40:43.490
you didn't have remote access.

00:40:43.490 --> 00:40:44.950
You had to coach
them through a phone.

00:40:44.950 --> 00:40:46.480
And it was even better
when they couldn't

00:40:46.480 --> 00:40:48.790
get the phone to their computer,
and then you had to talk--

00:40:48.790 --> 00:40:49.950
RYAN CAIRNS: Well, I mean
not so much remote access.

00:40:49.950 --> 00:40:51.660
I mean like if you had people
working the call center,

00:40:51.660 --> 00:40:53.670
and you knew that there was a
big failure of all your devices

00:40:53.670 --> 00:40:54.540
in the field, you
could tell them

00:40:54.540 --> 00:40:56.420
like, hey-- call volumes
are going to go up,

00:40:56.420 --> 00:40:57.580
and here's what you
can tell people.

00:40:57.580 --> 00:40:57.820
WAYNE PIEKARSKI: Yeah.

00:40:57.820 --> 00:40:58.390
Yeah.

00:40:58.390 --> 00:41:00.340
RYAN CAIRNS: Even before
the remote access stuff.

00:41:00.340 --> 00:41:01.100
WAYNE PIEKARSKI:
I think it's going

00:41:01.100 --> 00:41:03.430
to add a lot of really cool
possibilities for that.

00:41:03.430 --> 00:41:04.940
We just haven't been able
to have that kind of thing.

00:41:04.940 --> 00:41:06.820
Like PCs, they can kind
of do remote support,

00:41:06.820 --> 00:41:10.010
but every other device is
kind of like, press the button

00:41:10.010 --> 00:41:11.820
and bring it in and replace it.

00:41:11.820 --> 00:41:13.190
And that's quite expensive.

00:41:13.190 --> 00:41:17.500
If devices could self-report,
that would be really cool.

00:41:17.500 --> 00:41:18.390
Any more questions?

00:41:18.390 --> 00:41:19.860
AUDIENCE: That's actually a
great lead in to my question.

00:41:19.860 --> 00:41:21.740
We heard a lot about
rollout support.

00:41:21.740 --> 00:41:23.790
What about rollback support?

00:41:23.790 --> 00:41:24.290
So if--

00:41:24.290 --> 00:41:25.910
WAYNE PIEKARSKI: As in
backing a firmware update?

00:41:25.910 --> 00:41:27.990
AUDIENCE: As in, if you push
something out to the field,

00:41:27.990 --> 00:41:30.070
and you start seeing a
tremendous number of failures

00:41:30.070 --> 00:41:31.445
with that, is
there a way to say,

00:41:31.445 --> 00:41:34.430
OK, let's easily go back to
the previous version, which

00:41:34.430 --> 00:41:36.020
may or may not
still be installed

00:41:36.020 --> 00:41:37.690
on the person's device?

00:41:37.690 --> 00:41:39.860
Because we heard about
partitioning, also.

00:41:39.860 --> 00:41:42.190
Is there a way to say,
look, you know that thing

00:41:42.190 --> 00:41:43.870
that we sent you yesterday?

00:41:43.870 --> 00:41:44.380
Forget it.

00:41:44.380 --> 00:41:45.610
Just forget it.

00:41:48.360 --> 00:41:50.660
GUARAV SHAH: We can always--
there's always the option

00:41:50.660 --> 00:41:54.690
to push back a previous update.

00:41:54.690 --> 00:41:57.890
When the update is pushed ,
your user data is on a different

00:41:57.890 --> 00:42:00.570
partition, so that's
not clobbered.

00:42:00.570 --> 00:42:02.950
So you can, actually, go
back in the same state you

00:42:02.950 --> 00:42:06.050
were before the botched update.

00:42:06.050 --> 00:42:10.600
But in general, we have actually
designed the update model

00:42:10.600 --> 00:42:13.287
to make it easy to do rollbacks.

00:42:13.287 --> 00:42:14.870
AUDIENCE: And is
that a real rollback,

00:42:14.870 --> 00:42:17.096
or is that just pushing
out a new version that just

00:42:17.096 --> 00:42:18.220
looks like the old version?

00:42:18.220 --> 00:42:21.350
GUARAV SHAH: So there are
two kinds of rollbacks.

00:42:21.350 --> 00:42:23.540
There is a rollback that
will happen automatically

00:42:23.540 --> 00:42:25.900
when the device detects
that the new update is bad.

00:42:25.900 --> 00:42:29.374
And that's basically-- it
won't finalize the new update.

00:42:29.374 --> 00:42:31.040
And it will keep the
old version around,

00:42:31.040 --> 00:42:33.840
and it will roll back to it
when it detects that condition.

00:42:33.840 --> 00:42:38.830
And if that, that usually
catches 99.999% of the cases

00:42:38.830 --> 00:42:39.800
if done right.

00:42:39.800 --> 00:42:42.141
And I think we do
it quite right.

00:42:42.141 --> 00:42:43.640
And if that doesn't
work, then there

00:42:43.640 --> 00:42:49.750
is always the option to push
the old update payload again,

00:42:49.750 --> 00:42:54.822
and use that to bring the device
back to the original state.

00:42:54.822 --> 00:42:55.655
WAYNE PIEKARSKI: OK.

00:42:55.655 --> 00:42:56.400
Cool.

00:42:56.400 --> 00:42:56.900
All right.

00:42:56.900 --> 00:43:00.080
Well, I guess we're
almost out of time.

00:43:00.080 --> 00:43:01.640
Did you guys have
any final thoughts?

00:43:01.640 --> 00:43:02.329
Oh.

00:43:02.329 --> 00:43:03.370
You had a question there?

00:43:03.370 --> 00:43:05.119
AUDIENCE: It was an
extension of the OTAs.

00:43:05.119 --> 00:43:06.620
Is there going to
be a certain time

00:43:06.620 --> 00:43:08.022
limit the OTA should complete?

00:43:08.022 --> 00:43:09.480
Like it shouldn't
take half an hour

00:43:09.480 --> 00:43:11.790
if my door lock can't
open for half an hour.

00:43:11.790 --> 00:43:15.510
So is there going to be
like, your update should only

00:43:15.510 --> 00:43:17.304
take 30 seconds or?

00:43:17.304 --> 00:43:19.720
RYAN CAIRNS: So updates actually
happen in the background.

00:43:19.720 --> 00:43:22.190
So the device should still
function while updating.

00:43:22.190 --> 00:43:25.190
It's when the device decides
to apply the update which

00:43:25.190 --> 00:43:26.630
is the question.

00:43:26.630 --> 00:43:28.310
And that policy
would be different

00:43:28.310 --> 00:43:30.300
depending on the type
of device that's there.

00:43:30.300 --> 00:43:32.400
So the user shouldn't
be hung up waiting

00:43:32.400 --> 00:43:34.720
to interact with a device
while it's updating.

00:43:34.720 --> 00:43:36.470
That would be a
pretty bad experience.

00:43:36.470 --> 00:43:37.220
GUARAV SHAH: Yeah.

00:43:37.220 --> 00:43:40.790
And the other technology we
have is we do delta updates.

00:43:40.790 --> 00:43:44.960
So the actual size of
the update is very small.

00:43:44.960 --> 00:43:47.140
So you're not
downloading-- let's

00:43:47.140 --> 00:43:48.570
say your image size is 100 megs.

00:43:48.570 --> 00:43:49.740
You're not downloading
100 megs, you're

00:43:49.740 --> 00:43:51.330
just downloading
the delta, which

00:43:51.330 --> 00:43:53.985
might be something as
small as like 6 megabytes.

00:43:53.985 --> 00:43:56.360
So that means that the time
to download and time to apply

00:43:56.360 --> 00:43:59.100
is also less.

00:43:59.100 --> 00:44:00.090
WAYNE PIEKARSKI: Cool.

00:44:00.090 --> 00:44:00.585
AUDIENCE: Just a last question.

00:44:00.585 --> 00:44:02.565
The main goal of
Weave [INAUDIBLE]?

00:44:05.850 --> 00:44:06.600
RYAN CAIRNS: Yeah.

00:44:06.600 --> 00:44:10.957
The question was, is the main
goal of Weave interoperability?

00:44:10.957 --> 00:44:12.790
PAUL WESTBROOK: I would
say that's one goal.

00:44:12.790 --> 00:44:16.280
The other goal is
actually enabling-- well,

00:44:16.280 --> 00:44:17.630
security is always a goal.

00:44:17.630 --> 00:44:19.930
But I think it's enabling
application and device

00:44:19.930 --> 00:44:20.680
developers.

00:44:20.680 --> 00:44:24.770
So I think that with the
Weave APIs in Android and iOS

00:44:24.770 --> 00:44:27.660
and web, it's very easy to
write an application that

00:44:27.660 --> 00:44:28.830
talked to multiple devices.

00:44:28.830 --> 00:44:29.960
RYAN CAIRNS: And one thing
that we haven't mentioned

00:44:29.960 --> 00:44:31.790
about Weave is smart setup.

00:44:31.790 --> 00:44:33.400
One of the big
challenges that we see

00:44:33.400 --> 00:44:35.270
is when users take
these devices home,

00:44:35.270 --> 00:44:38.590
the first step is
getting it on your Wi-Fi.

00:44:38.590 --> 00:44:40.690
The second step might be
provisioning an account.

00:44:40.690 --> 00:44:42.689
And the third step might
be downloading the app.

00:44:42.689 --> 00:44:44.570
And with the smart
setup stuff, you

00:44:44.570 --> 00:44:47.300
can just go and say OK,
Google, set up my device.

00:44:47.300 --> 00:44:49.350
We scan for the
device, you select it.

00:44:49.350 --> 00:44:51.090
The app for that
device automatically

00:44:51.090 --> 00:44:53.590
downloads in the background,
and it connects to your Wi-Fi

00:44:53.590 --> 00:44:54.200
automatically.

00:44:54.200 --> 00:44:56.370
So the provisioning of
it is very seamless.

00:44:56.370 --> 00:45:00.231
And what we find for legacy
products are things like--

00:45:00.231 --> 00:45:02.730
things that were designed to
be used in a dumb way and maybe

00:45:02.730 --> 00:45:04.245
a smart way is that--

00:45:04.245 --> 00:45:07.557
AUDIENCE: For dumb
TV remote controls.

00:45:07.557 --> 00:45:09.140
RYAN CAIRNS: Potentially
still dumb TV

00:45:09.140 --> 00:45:11.720
remote controls, as well as
smart TV remote controls,

00:45:11.720 --> 00:45:14.072
but yeah.

00:45:14.072 --> 00:45:15.530
But the idea is
that you don't have

00:45:15.530 --> 00:45:17.380
these misconfigured devices.

00:45:17.380 --> 00:45:19.630
There's a lot of people who
sell Wi-Fi enabled devices

00:45:19.630 --> 00:45:21.560
where something like
50%, 60% of the users

00:45:21.560 --> 00:45:23.310
don't actually connect
them to Wi-Fi ever.

00:45:23.310 --> 00:45:25.140
And one of the goals
of Weave is making sure

00:45:25.140 --> 00:45:27.250
that the complete experience
is configured out of the box

00:45:27.250 --> 00:45:28.160
without much effort.

00:45:28.160 --> 00:45:29.076
WAYNE PIEKARSKI: Yeah.

00:45:29.076 --> 00:45:29.810
Nice.

00:45:29.810 --> 00:45:32.130
OK, well, we're
kind of out of time.

00:45:32.130 --> 00:45:34.660
We got another
session coming up.

00:45:34.660 --> 00:45:36.610
At the end of this
session, we have

00:45:36.610 --> 00:45:39.220
a bunch of demos happening
during the cocktail hour.

00:45:39.220 --> 00:45:42.220
So some Googlers have actually
brought in machines and devices

00:45:42.220 --> 00:45:44.766
that they've built to show
off some things that they've

00:45:44.766 --> 00:45:45.890
done with Brillo and Weave.

00:45:45.890 --> 00:45:47.860
We've got that happening.

00:45:47.860 --> 00:45:50.420
We're all going to be
around to ask questions of.

00:45:50.420 --> 00:45:52.410
And then tomorrow,
in the code lab room,

00:45:52.410 --> 00:45:55.470
which is outside the building
and one building over,

00:45:55.470 --> 00:45:58.230
we have computers set up where
you can try out the Brillo

00:45:58.230 --> 00:45:59.800
BDK on one of our machines.

00:45:59.800 --> 00:46:01.570
You can also show up
with your own laptop.

00:46:01.570 --> 00:46:03.111
And we're going to
have office hours,

00:46:03.111 --> 00:46:05.440
where various people from
the Brillo and Weave teams--

00:46:05.440 --> 00:46:07.260
all kinds of different people,
like engineers, programmers,

00:46:07.260 --> 00:46:09.676
managers, things like that--
everyone's going to be there.

00:46:09.676 --> 00:46:12.130
And you can ask
questions, show them code,

00:46:12.130 --> 00:46:15.187
or we can walk you through the
code labs and things like that.

00:46:15.187 --> 00:46:17.520
And if you've had trouble
setting up one of your devices

00:46:17.520 --> 00:46:18.690
that you got in
your little toolbox,

00:46:18.690 --> 00:46:20.065
we can help out
things like that.

00:46:20.065 --> 00:46:22.660
So there's a lot of-- please
take advantage of the fact

00:46:22.660 --> 00:46:25.730
that everyone's here
tomorrow, and enjoy that.

00:46:25.730 --> 00:46:27.990
So that's the end
of this session.

00:46:27.990 --> 00:46:30.402
Thanks very much for
coming by, and we

00:46:30.402 --> 00:46:31.610
hope you all had a good time.

00:46:31.610 --> 00:46:33.260
Thank you.

