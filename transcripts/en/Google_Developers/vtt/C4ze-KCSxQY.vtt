WEBVTT
Kind: captions
Language: en

00:00:00.180 --> 00:00:01.810
So as you might
know by now, you can

00:00:01.810 --> 00:00:04.000
use Google Cloud Messaging
to send notifications

00:00:04.000 --> 00:00:06.580
to iOS devices through APNs.

00:00:06.580 --> 00:00:08.790
Now in a previous video,
we shed a little light

00:00:08.790 --> 00:00:11.396
on how the APNs half
of this combo works.

00:00:11.396 --> 00:00:13.270
Let's see if we can do
the same thing for GCM

00:00:13.270 --> 00:00:15.536
on this episode of "Route 85."

00:00:15.536 --> 00:00:19.488
[MUSIC PLAYING]

00:00:22.890 --> 00:00:25.030
So before we go any
further, I'd recommend

00:00:25.030 --> 00:00:27.460
watching this video
on understanding APNs

00:00:27.460 --> 00:00:28.460
if you haven't yet.

00:00:28.460 --> 00:00:30.640
If you have, here's
a real quick review.

00:00:30.640 --> 00:00:32.659
When you send a
notification through APNs,

00:00:32.659 --> 00:00:35.560
it requires two important
pieces of information.

00:00:35.560 --> 00:00:37.730
First is the device
token, which is basically

00:00:37.730 --> 00:00:39.830
an alias for the device
you want to talk to.

00:00:39.830 --> 00:00:41.630
Remember, that's like
the secret fake name

00:00:41.630 --> 00:00:43.270
rock stars leave at
the hotel register

00:00:43.270 --> 00:00:45.510
so that their real
friends can find them.

00:00:45.510 --> 00:00:48.010
Second is the APNs
certificate, which basically

00:00:48.010 --> 00:00:49.510
contains a public
key that you can

00:00:49.510 --> 00:00:51.580
use to communicate with APNs.

00:00:51.580 --> 00:00:53.620
Oh yeah, and there's
the notification itself.

00:00:53.620 --> 00:00:56.460
So I guess that's three
pieces of information.

00:00:56.460 --> 00:00:58.270
Now, sending
notifications through GCM

00:00:58.270 --> 00:01:00.469
is similar, but
not quite the same.

00:01:00.469 --> 00:01:02.260
Let's look at the two
pieces of information

00:01:02.260 --> 00:01:05.200
you need to send a
notification through GCM.

00:01:05.200 --> 00:01:07.240
First is the registration token.

00:01:07.240 --> 00:01:09.590
Like the APNs device
token, it's the address

00:01:09.590 --> 00:01:11.110
of the device you
want to talk to.

00:01:11.110 --> 00:01:14.030
Or I guess more accurately,
it's the fake rock star alias

00:01:14.030 --> 00:01:15.790
for the device you
want to talk to.

00:01:15.790 --> 00:01:17.930
Now, GCM has its own
token that it uses,

00:01:17.930 --> 00:01:20.570
but it turns out there are
other services-- not just

00:01:20.570 --> 00:01:22.680
Cloud Messaging-- that
could theoretically

00:01:22.680 --> 00:01:24.350
use this token, as well.

00:01:24.350 --> 00:01:26.680
So while you'll often
hear it referred to

00:01:26.680 --> 00:01:29.660
as a GCM registration
token, its real name

00:01:29.660 --> 00:01:31.449
is an instance ID token.

00:01:31.449 --> 00:01:32.990
And when it gets
down to implementing

00:01:32.990 --> 00:01:34.410
this thing for
reals, you're going

00:01:34.410 --> 00:01:37.090
to see that you'll be using a
library called the Instance ID

00:01:37.090 --> 00:01:39.090
Library to get one of these.

00:01:39.090 --> 00:01:40.920
Now second is the API key.

00:01:40.920 --> 00:01:43.420
You don't need a certificate
with its own private/public key

00:01:43.420 --> 00:01:45.740
combination to communicate
with GCM servers

00:01:45.740 --> 00:01:47.710
the way you do with APNs.

00:01:47.710 --> 00:01:49.760
Instead, you send
across an API key

00:01:49.760 --> 00:01:52.280
that is unique to your
application with every request

00:01:52.280 --> 00:01:53.360
that you make.

00:01:53.360 --> 00:01:56.060
This API key is generated by
the console when you first

00:01:56.060 --> 00:01:58.330
set up your project,
and is what GCM

00:01:58.330 --> 00:02:01.070
uses to confirm that, yes,
you really are communicating

00:02:01.070 --> 00:02:04.106
on behalf of your application,
which means this is something

00:02:04.106 --> 00:02:06.230
you want to treat with the
same kind of sensitivity

00:02:06.230 --> 00:02:07.850
as, say, a password.

00:02:07.850 --> 00:02:09.600
Don't make it easy for
people to discover.

00:02:09.600 --> 00:02:12.080
Don't put it in a public
file on a server somewhere.

00:02:12.080 --> 00:02:15.470
And for crying out loud, don't
ever put this on your client.

00:02:15.470 --> 00:02:18.810
So if we were using GCM to make
a request to an Android device,

00:02:18.810 --> 00:02:21.190
it would look pretty
similar to the APNs flow.

00:02:21.190 --> 00:02:24.310
Our server would talk to GCM
using the API key as proof

00:02:24.310 --> 00:02:26.440
that, yes, we're really
who we say we are.

00:02:26.440 --> 00:02:27.994
Then, we'd use the
registration token

00:02:27.994 --> 00:02:30.660
to both find the right device to
talk to, as well as prove that,

00:02:30.660 --> 00:02:33.110
yes, we really have the
right to talk to this user

00:02:33.110 --> 00:02:35.400
because they gave us
their rock star alias.

00:02:35.400 --> 00:02:38.510
Add on the rest of our data,
and our notification gets sent.

00:02:38.510 --> 00:02:39.950
Yay.

00:02:39.950 --> 00:02:41.970
But we're dealing with
the iOS world, where

00:02:41.970 --> 00:02:43.626
things are slightly different.

00:02:43.626 --> 00:02:46.300
GCM still needs to route
all of its requests

00:02:46.300 --> 00:02:49.270
through APNs if we want to bring
up any kind of notification

00:02:49.270 --> 00:02:51.050
in the background or anything.

00:02:51.050 --> 00:02:54.260
So before you ask GCM to create
a registration token for you

00:02:54.260 --> 00:02:57.880
on iOS, you first need
an APNs device token.

00:02:57.880 --> 00:03:00.000
Then, you tell Google
servers, hey, here's

00:03:00.000 --> 00:03:01.140
an APNs device token.

00:03:01.140 --> 00:03:02.920
Can you create a
GCM registration

00:03:02.920 --> 00:03:07.704
token associated with this APNs
token, and then send me a copy.

00:03:07.704 --> 00:03:09.120
This is probably
inaccurate, but I

00:03:09.120 --> 00:03:11.410
like to think that, when you're
done, there's a database table

00:03:11.410 --> 00:03:13.810
out there somewhere that now
has your GCM registration

00:03:13.810 --> 00:03:16.660
token, your APNs device
token, and your sender ID

00:03:16.660 --> 00:03:18.280
all in a row.

00:03:18.280 --> 00:03:21.060
Now, also remember that
GCM, like any other server,

00:03:21.060 --> 00:03:24.050
needs an APNs certificate
to communicate with the APNs

00:03:24.050 --> 00:03:24.650
service.

00:03:24.650 --> 00:03:26.108
Yes, I know that's
still redundant.

00:03:26.108 --> 00:03:26.837
Shut up.

00:03:26.837 --> 00:03:29.170
So at around the same time
you register your application

00:03:29.170 --> 00:03:31.830
with GCM and you
create your API key,

00:03:31.830 --> 00:03:34.680
you're also going to upload
your APNs certificate to Google

00:03:34.680 --> 00:03:38.060
servers to tell it that this
is the APNs certificate that it

00:03:38.060 --> 00:03:40.470
should associate
with its GCM key.

00:03:40.470 --> 00:03:41.870
Again, probably
inaccurate, but I

00:03:41.870 --> 00:03:43.744
like to think that, in
another database table

00:03:43.744 --> 00:03:46.840
somewhere, there's a row that's
got your GCM API key, your APNs

00:03:46.840 --> 00:03:50.040
certificate, and your app
sender ID all in a row.

00:03:50.040 --> 00:03:51.240
With me so far?

00:03:51.240 --> 00:03:52.050
OK, cool.

00:03:52.050 --> 00:03:54.250
So let's review the
higher end-to-end process

00:03:54.250 --> 00:03:57.290
of sending a notification to
APNs through GCM, starting

00:03:57.290 --> 00:03:59.320
with the set-up process.

00:03:59.320 --> 00:04:02.289
And yes, I did spend Google's
money purchasing a stock photo

00:04:02.289 --> 00:04:03.205
image of an enchilada.

00:04:03.205 --> 00:04:05.896
So let's take a moment
to admire it, shall we?

00:04:05.896 --> 00:04:06.396
Mm.

00:04:06.396 --> 00:04:07.220
All right.

00:04:07.220 --> 00:04:08.612
I'm getting hungry.

00:04:08.612 --> 00:04:10.820
So at some point when you're
first building your app,

00:04:10.820 --> 00:04:13.900
you register with the APNs
servers using iTunes Connect.

00:04:13.900 --> 00:04:15.860
You tell it about your
app, your bundle ID,

00:04:15.860 --> 00:04:18.430
and you generate your
APNs certificate.

00:04:18.430 --> 00:04:20.510
Then, you go ahead and
register that same app

00:04:20.510 --> 00:04:22.129
with GCM using the console.

00:04:22.129 --> 00:04:23.920
Now at this point,
you're going to get back

00:04:23.920 --> 00:04:27.260
an API key, which you'll use to
identify your app to GCM when

00:04:27.260 --> 00:04:28.750
you talk with it.

00:04:28.750 --> 00:04:30.970
Now at some point, quite
possibly the same time

00:04:30.970 --> 00:04:33.180
you're creating this API
key in the first place,

00:04:33.180 --> 00:04:35.500
you're also going to upload
your APNs certificate

00:04:35.500 --> 00:04:36.980
to GCM servers.

00:04:36.980 --> 00:04:38.930
GCM then associates
that certificate

00:04:38.930 --> 00:04:41.460
with the app that is
identified by that API key

00:04:41.460 --> 00:04:42.879
that it just gave you.

00:04:42.879 --> 00:04:44.920
So now let's move on to
the worlds of the client,

00:04:44.920 --> 00:04:48.710
and what happens when it asks
to receive some notifications.

00:04:48.710 --> 00:04:50.670
First off, your client
will tell iOS, hey,

00:04:50.670 --> 00:04:52.030
I want to receive notifications.

00:04:52.030 --> 00:04:55.120
iOS will ask the
user if that's OK.

00:04:55.120 --> 00:04:58.140
Now, if the user says yes,
iOS registers your app

00:04:58.140 --> 00:05:00.629
with its servers and
gets back an APNs device

00:05:00.629 --> 00:05:02.420
token-- remember, that's
the fake rock star

00:05:02.420 --> 00:05:04.690
alias-- that it
shares with your app.

00:05:04.690 --> 00:05:07.327
Your app then needs to ping
the instance ID service which,

00:05:07.327 --> 00:05:09.660
for simplicity and because
I'm running out of room here,

00:05:09.660 --> 00:05:13.410
we'll pretend is a part of GCM
for its registration token.

00:05:13.410 --> 00:05:16.330
And as part of the request, it
passes along the device token

00:05:16.330 --> 00:05:18.470
that it just got from APNs.

00:05:18.470 --> 00:05:21.434
The instance ID service then
returns a registration token,

00:05:21.434 --> 00:05:22.850
and that is the
token you're going

00:05:22.850 --> 00:05:26.190
to use if you want to send a
message to this target device.

00:05:26.190 --> 00:05:27.624
OK, so registration is done.

00:05:27.624 --> 00:05:29.040
Let's see what
happens when we now

00:05:29.040 --> 00:05:31.506
want to go ahead and
send a notification.

00:05:31.506 --> 00:05:32.880
Now in our scenario,
let's assume

00:05:32.880 --> 00:05:34.550
you want to ping this
individual device

00:05:34.550 --> 00:05:37.570
and you have a little bit of
code on your server to do it.

00:05:37.570 --> 00:05:39.040
For that to work,
the user's client

00:05:39.040 --> 00:05:41.360
will now need to send back
this registration token

00:05:41.360 --> 00:05:42.330
to your server.

00:05:42.330 --> 00:05:44.570
How you do that is
kind of up to you.

00:05:44.570 --> 00:05:47.360
So when you want to send a
notification to this device,

00:05:47.360 --> 00:05:49.930
your servers are going to send
off a notification request

00:05:49.930 --> 00:05:51.400
to the GCM servers.

00:05:51.400 --> 00:05:53.960
Now it's going to pass along
the API key and the GCM

00:05:53.960 --> 00:05:57.210
token for this device along
with that notification.

00:05:57.210 --> 00:05:59.490
GCM servers are going
to verify that the API

00:05:59.490 --> 00:06:02.837
key and the registration token
both exist on its servers,

00:06:02.837 --> 00:06:05.170
and it's going to make sure
that they both correctly map

00:06:05.170 --> 00:06:06.495
to the same app.

00:06:06.495 --> 00:06:08.620
Assuming all that's good,
it will then notice, hey,

00:06:08.620 --> 00:06:11.800
this registration token contains
an entry for an APNs device

00:06:11.800 --> 00:06:12.460
token.

00:06:12.460 --> 00:06:14.560
That's its cue that our
target device is actually

00:06:14.560 --> 00:06:15.670
an iOS device.

00:06:15.670 --> 00:06:18.510
So it'll grab that, along
with the APNs certificate

00:06:18.510 --> 00:06:20.530
associated with the
API key, and use

00:06:20.530 --> 00:06:23.457
those two bits to
communicate to Apple servers.

00:06:23.457 --> 00:06:25.290
It will then take your
notification request,

00:06:25.290 --> 00:06:27.900
alter it a bit to fit
Apple's notification format,

00:06:27.900 --> 00:06:29.810
and then send that
notification request

00:06:29.810 --> 00:06:33.250
to APNs along with the device
token that it found earlier.

00:06:33.250 --> 00:06:35.070
Apple will receive
this information,

00:06:35.070 --> 00:06:37.200
confirm that everything
looks correct on this end,

00:06:37.200 --> 00:06:40.220
and then send the notification
along to the user's device.

00:06:40.220 --> 00:06:41.535
Hooray.

00:06:41.535 --> 00:06:43.410
All right, well that
was an awful lot of work

00:06:43.410 --> 00:06:45.875
just to send one little
notification, right?

00:06:45.875 --> 00:06:47.750
But don't worry too
much-- a lot of this work

00:06:47.750 --> 00:06:49.291
is setup stuff that
you're only going

00:06:49.291 --> 00:06:51.990
to need to do once per app, and
a lot of the other work really

00:06:51.990 --> 00:06:53.620
just gets taken care
of automatically

00:06:53.620 --> 00:06:55.036
for you behind the scenes.

00:06:55.036 --> 00:06:56.410
Now granted, I
haven't talked yet

00:06:56.410 --> 00:06:57.910
about things like
upstream messaging--

00:06:57.910 --> 00:06:59.909
which is a whole other
kettle of fish-- or topic

00:06:59.909 --> 00:07:01.564
messaging or some
other edge cases,

00:07:01.564 --> 00:07:03.230
but I think, for the
purposes of getting

00:07:03.230 --> 00:07:06.810
started with GCM on iOS, this
is probably everything you need.

00:07:06.810 --> 00:07:07.310
See?

00:07:07.310 --> 00:07:11.552
Our giant black rectangle is
now a lightish gray rectangle.

00:07:11.552 --> 00:07:13.260
So with this information
under your belt,

00:07:13.260 --> 00:07:15.560
I suggest you now go and
tackle the documentation,

00:07:15.560 --> 00:07:16.570
if you haven't yet.

00:07:16.570 --> 00:07:18.790
It'll probably be a little
easier to digest now

00:07:18.790 --> 00:07:20.600
that you have some
background information.

00:07:20.600 --> 00:07:23.082
And be on the lookout for
future episodes of "Route 85."

00:07:23.082 --> 00:07:24.790
I'll see if I can
tackle some of the nuts

00:07:24.790 --> 00:07:26.970
and bolts of this process
in a screencast or two.

00:07:26.970 --> 00:07:28.010
Wouldn't that be nice?

00:07:28.010 --> 00:07:28.700
Yes, it would.

00:07:28.700 --> 00:07:31.750
But you're going to have to
wait until after I-- I'm busy.

00:07:31.750 --> 00:07:35.400
[MUSIC PLAYING]

