WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:03.170
Okay the answer to this question, the options

00:00:03.170 --> 00:00:05.570
that would result in a frameshift mutation are the

00:00:05.570 --> 00:00:08.900
first, the second and the last. Now this was

00:00:08.900 --> 00:00:11.380
a little bit tricky. I was trying to be

00:00:11.380 --> 00:00:14.260
a little deceitful on you here because the

00:00:14.260 --> 00:00:18.650
position of the insertion or deletion makes no difference.

00:00:18.650 --> 00:00:21.200
So you can ignore it. What we care about

00:00:21.200 --> 00:00:25.750
is when we actually have the insertion. Or deletion

00:00:25.750 --> 00:00:32.509
are we shifting our frame by a multiple of three or not? If we're shifting

00:00:32.509 --> 00:00:38.850
by a multiple of 3, 6, 9 then we are going to keep everything down from the

00:00:38.850 --> 00:00:42.090
insertion and deletion in frame it's still going

00:00:42.090 --> 00:00:45.390
to be the same set of three letters,

00:00:45.390 --> 00:00:47.870
the same codons all the way down. But

00:00:47.870 --> 00:00:50.190
if we insert one letter, delete one letter,

00:00:50.190 --> 00:00:53.910
insert two letters, or delete two letters, its going to throw

00:00:53.910 --> 00:00:57.130
off everything downstream to a different frame. Same thing is

00:00:57.130 --> 00:00:59.950
true of four letters, or five letters, or seven letters,

00:00:59.950 --> 00:01:02.860
or eight letters. Anything that's not a multiple of three is

00:01:02.860 --> 00:01:06.690
going to cause a frame-shift mutation. If you're having trouble understanding

00:01:06.690 --> 00:01:09.190
the idea of a frameshift, try to think about it

00:01:09.190 --> 00:01:11.990
like this very simple sentence here. The dog can eat

00:01:11.990 --> 00:01:15.310
and run, is made up of words with only three letters

00:01:15.310 --> 00:01:18.840
in them. If we were forced to read words

00:01:18.840 --> 00:01:21.920
as sets of three letters And let's say I

00:01:21.920 --> 00:01:26.270
deleted this letter right here. The e in eat.

00:01:26.270 --> 00:01:28.220
Then we'd end up with the dog can ata

00:01:28.220 --> 00:01:31.130
ndr un. Right we can't read this. This doesn't

00:01:31.130 --> 00:01:34.710
make sense anymore. We're out of frame. Whereas if

00:01:34.710 --> 00:01:40.720
we had just deleted the whole word eat we would end up with the dog can and run.

00:01:40.720 --> 00:01:43.850
And sure, it doesn't make a whole lot of sense to have the

00:01:43.850 --> 00:01:47.030
e removed, but at least all of these are words, and they make

00:01:47.030 --> 00:01:51.350
sense, and it gives semblance to the original sequence. This is what makes

00:01:51.350 --> 00:01:54.270
frame shifts so dangerous. Is because

00:01:54.270 --> 00:01:57.110
frame shifts throw off everything else downstream.

