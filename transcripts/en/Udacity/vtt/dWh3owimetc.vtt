WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.000
And the solution is that all of these modes can be decrypted in parallel.

00:00:06.000 --> 00:00:09.000
Let's look at each one of these modes one at a time.

00:00:09.000 --> 00:00:12.000
ECB can be decrypted in parallel

00:00:12.000 --> 00:00:14.000
because for each C-naught that we have

00:00:14.000 --> 00:00:17.000
we can decrypt it in reverse

00:00:17.000 --> 00:00:19.000
to end up with our original message.

00:00:19.000 --> 00:00:21.000
This can be run on one processor,

00:00:21.000 --> 00:00:24.000
and you do the same thing on this one and for all the other chunks

00:00:24.000 --> 00:00:28.000
of the message that we have, and all those can be run in parallel.

00:00:28.000 --> 00:00:30.000
Counter mode is also decryptable in parallel.

00:00:30.000 --> 00:00:34.000
For counter mode, the important part that we need to calculate

00:00:34.000 --> 00:00:37.000
is this bit into the XOR, and we know our nonce,

00:00:37.000 --> 00:00:39.000
and we know our counter advance,

00:00:39.000 --> 00:00:41.000
so this whole chunk can be calculated at one processor.

00:00:41.000 --> 00:00:44.000
This whole chunk can be calculated on another processor,

00:00:44.000 --> 00:00:48.000
and so on, and once we calculate those, we can calculate our XORs

00:00:48.000 --> 00:00:52.000
to reverse the C1 into the message, and this can also all be done in parallel.

00:00:52.000 --> 00:00:55.000
For cipher block chaining mode, similar to counter mode,

00:00:55.000 --> 00:00:58.000
the important part, this input into the xor again,

00:00:58.000 --> 00:01:02.000
which for the first block we know the initialization vector,

00:01:02.000 --> 00:01:04.000
so that can be calculated.

00:01:04.000 --> 00:01:06.000
Independently, we are already given C-naught,

00:01:06.000 --> 00:01:11.000
which can be processed in parallel to this part.

00:01:11.000 --> 00:01:14.000
In C-1 we know, and this could be processed in parallel, and again,

00:01:14.000 --> 00:01:17.000
we can process--calculate this, calculate this,

00:01:17.000 --> 00:01:20.000
and CBC can be decrypted in parallel.

00:01:20.000 --> 00:01:23.000
Similar to cipher block chaining mode, the cipher feedback mode

00:01:23.000 --> 00:01:26.000
is decryptable in parallel.

00:01:26.000 --> 00:01:31.000
The idea is very similar to the 2 modes we just discussed.

00:01:31.000 --> 00:01:34.000
We need to calculate the input into the XOR.

00:01:34.000 --> 00:01:38.000
This entire chain is known in advance.

00:01:38.000 --> 00:01:41.000
From C-naught we have this entire chain, which is also known in advance,

00:01:41.000 --> 99:59:59.000
and we can calculate all these inputs into the XOR in parallel and decrypt our message.

