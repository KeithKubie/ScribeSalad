WEBVTT
Kind: captions
Language: en

00:00:00.577 --> 00:00:01.660
NICK BUTCHER: --at Google.

00:00:01.660 --> 00:00:04.520
And my job is really to work
with people making Android apps

00:00:04.520 --> 00:00:06.294
to help them make the
best possible app.

00:00:06.294 --> 00:00:08.710
I'm going to talk to you a
little bit about Android today.

00:00:08.710 --> 00:00:10.800
I've been given
20 minutes, which

00:00:10.800 --> 00:00:12.820
is pretty lean to talk
about a subject which

00:00:12.820 --> 00:00:15.450
I could wax lyrical
about all day long.

00:00:15.450 --> 00:00:20.550
So I decided to condense it
down to talking about thinking

00:00:20.550 --> 00:00:26.230
outside on two topics which I
think are really key to making

00:00:26.230 --> 00:00:28.730
an amazing mobile experience--
making an awesome Android

00:00:28.730 --> 00:00:30.230
application.

00:00:30.230 --> 00:00:33.900
This is two things which I
think people aren't thinking

00:00:33.900 --> 00:00:36.995
about enough or not
really understanding,

00:00:36.995 --> 00:00:39.650
that if you bear in mind when
you're designing and building

00:00:39.650 --> 00:00:41.810
your application, you can
build an awesome Android

00:00:41.810 --> 00:00:46.119
application that's going to take
you to next level and go crazy.

00:00:46.119 --> 00:00:48.160
I'm going to focus on
thinking outside the screen

00:00:48.160 --> 00:00:49.368
and thinking outside the app.

00:00:49.368 --> 00:00:51.630
And I'll take you
through what that means.

00:00:51.630 --> 00:00:54.540
Starting thinking about screens.

00:00:54.540 --> 00:00:57.830
When people look at the Android
landscape or the devices

00:00:57.830 --> 00:01:00.042
out there, they sometimes
have this whoa moment.

00:01:00.042 --> 00:01:01.500
There's all these
different devices

00:01:01.500 --> 00:01:04.610
you might have seen-- scary
charts saying that there's

00:01:04.610 --> 00:01:06.950
all these different resolutions.

00:01:06.950 --> 00:01:09.534
So people seem to tend
to latch onto resolution.

00:01:09.534 --> 00:01:10.700
They understand this number.

00:01:10.700 --> 00:01:13.522
This is how many pixels
there are on a screen.

00:01:13.522 --> 00:01:15.230
But what I'm going to
encourage you to do

00:01:15.230 --> 00:01:17.530
is to throw that number away.

00:01:17.530 --> 00:01:18.830
Just don't think about it all.

00:01:18.830 --> 00:01:22.310
And instead, think about
the size and density.

00:01:22.310 --> 00:01:24.914
So if you think about a screen,
if you consider the size,

00:01:24.914 --> 00:01:27.080
like the physical size--
this is a five-inch screen,

00:01:27.080 --> 00:01:29.274
this is a seven-inch
screen-- and density,

00:01:29.274 --> 00:01:31.190
then you can actually
forget about resolution.

00:01:31.190 --> 00:01:33.190
All the same information
that resolution conveys

00:01:33.190 --> 00:01:36.890
can be thought about in
these two orthogonal things.

00:01:36.890 --> 00:01:38.640
And if you do that,
then Android gives you

00:01:38.640 --> 00:01:42.210
really, really powerful
tools to dealing with that.

00:01:42.210 --> 00:01:45.010
The first thing is this
little guy called the DIP.

00:01:45.010 --> 00:01:47.990
This is what we call a
Density Independent Pixel.

00:01:47.990 --> 00:01:51.250
It's a way of abstracting away
the density of the screen.

00:01:51.250 --> 00:01:52.764
What it is, as the
line there says,

00:01:52.764 --> 00:01:54.180
it's an unit of
measure that keeps

00:01:54.180 --> 00:01:57.770
things the same physical
size across different density

00:01:57.770 --> 00:01:58.890
screens.

00:01:58.890 --> 00:02:01.890
So what that means is, if I have
this tablet on the left, which

00:02:01.890 --> 00:02:04.090
is what we call a
medium-density device,

00:02:04.090 --> 00:02:07.110
and I size an element
to be 200 DIPs say,

00:02:07.110 --> 00:02:10.740
it's going to perhaps use 200
physical pixels to show that.

00:02:10.740 --> 00:02:12.560
On a much higher-density
device, what

00:02:12.560 --> 00:02:14.630
we call an extra-high
density device,

00:02:14.630 --> 00:02:17.160
it might actually use
400 physical pixels

00:02:17.160 --> 00:02:18.280
to show the same thing.

00:02:18.280 --> 00:02:21.697
But as you see, they'll
be the same size.

00:02:21.697 --> 00:02:23.780
So the power of this is,
you forget about density.

00:02:23.780 --> 00:02:25.910
You can just forget about
it and size stuff, saying,

00:02:25.910 --> 00:02:27.034
I need this to be this big.

00:02:27.034 --> 00:02:29.650
I need this to be
this much room to show

00:02:29.650 --> 00:02:32.640
an image or this much room
to show a block of text.

00:02:32.640 --> 00:02:36.610
And you can abstract
away from it.

00:02:36.610 --> 00:02:38.740
Another example of
why this is powerful

00:02:38.740 --> 00:02:40.760
is if you have
these two tablets,

00:02:40.760 --> 00:02:43.490
on the left this is like a Zoom
that came out a couple of years

00:02:43.490 --> 00:02:46.150
ago, which had this
resolution of 1,280 by 800.

00:02:46.150 --> 00:02:47.879
And then a year
later, another tablet

00:02:47.879 --> 00:02:49.545
with this crazy, much
bigger resolution.

00:02:49.545 --> 00:02:51.240
And you might think
oh, crap, how's

00:02:51.240 --> 00:02:54.040
my app going to work or
scale onto this screen?

00:02:54.040 --> 00:02:56.590
But if you sized everything
in these DIP units,

00:02:56.590 --> 00:02:57.600
it actually works out.

00:02:57.600 --> 00:02:59.308
Because this one's a
much higher density.

00:02:59.308 --> 00:03:02.080
They're exactly the
same resolution in DIPs.

00:03:02.080 --> 00:03:03.910
So if you designed
the layout for one,

00:03:03.910 --> 00:03:05.785
it's just going to work
on this other device,

00:03:05.785 --> 00:03:08.420
even though you had no idea
about this screen resolution

00:03:08.420 --> 00:03:11.300
when you designed for it.

00:03:11.300 --> 00:03:13.705
What's more, all developers
out there want units in DIPs.

00:03:13.705 --> 00:03:15.080
This is the easiest
way that they

00:03:15.080 --> 00:03:16.530
can code all the light layouts.

00:03:16.530 --> 00:03:17.280
Here's an example.

00:03:17.280 --> 00:03:18.820
I think from the
YouTube application

00:03:18.820 --> 00:03:20.278
or from a Google
app, where you can

00:03:20.278 --> 00:03:23.570
see we're using DIPs everywhere
to size how much space should

00:03:23.570 --> 00:03:26.190
things take up, the paddings,
and margins, text size, and so

00:03:26.190 --> 00:03:31.300
on-- all in these kind
of abstracted units.

00:03:31.300 --> 00:03:33.400
So that's thinking
about size in DIPs.

00:03:33.400 --> 00:03:35.734
Another thing I told you
to think about is density.

00:03:35.734 --> 00:03:37.650
And the only time you
want to think about that

00:03:37.650 --> 00:03:39.610
is when you have bitmap assets.

00:03:39.610 --> 00:03:43.151
So when you supply an icon
for example, it needs to be,

00:03:43.151 --> 00:03:44.650
when you're in
Photoshop or whatever

00:03:44.650 --> 00:03:47.170
use to create your
bitmap assets,

00:03:47.170 --> 00:03:50.210
you need to be a certain size.

00:03:50.210 --> 00:03:52.829
So this is where you have
to think about density.

00:03:52.829 --> 00:03:54.370
So if you have an
icon which is going

00:03:54.370 --> 00:03:57.610
to take up 32-by-32
bits for example,

00:03:57.610 --> 00:04:00.490
then you want to provide
different sized assets

00:04:00.490 --> 00:04:02.680
so that they show,
so they stay crisp.

00:04:02.680 --> 00:04:04.789
So they don't get, you're
not blowing up an asset

00:04:04.789 --> 00:04:06.330
and it gets will
blurry and horrible.

00:04:06.330 --> 00:04:07.704
So this is the
only time you want

00:04:07.704 --> 00:04:11.100
to think about densities, when
you're doing bitmap assets.

00:04:11.100 --> 00:04:13.780
So when you think about
the two orthogonally,

00:04:13.780 --> 00:04:16.250
your life is going
to be much easier.

00:04:16.250 --> 00:04:17.934
So yeah, that's the
takeaway message.

00:04:17.934 --> 00:04:19.600
Think about size and
density separately.

00:04:19.600 --> 00:04:21.640
The opacity is not coming
out from the projector,

00:04:21.640 --> 00:04:24.223
but the slides will be available
for your downloading pleasure

00:04:24.223 --> 00:04:25.120
later on.

00:04:25.120 --> 00:04:28.240
And so yeah, think about
density asset crispness,

00:04:28.240 --> 00:04:30.610
and think about size for layout.

00:04:30.610 --> 00:04:33.730
And you'll be happy.

00:04:33.730 --> 00:04:36.530
An example of this is how
it can future proof you.

00:04:36.530 --> 00:04:39.230
So on the left, we have
a high-density phone.

00:04:39.230 --> 00:04:43.720
And then in the middle, we have
a large, medium-density tablet.

00:04:43.720 --> 00:04:46.220
So if you designed, if you
provided assets for the phone

00:04:46.220 --> 00:04:49.170
and you've done the layout for
the tablet, at some later date,

00:04:49.170 --> 00:04:50.836
a new device comes
out that you've never

00:04:50.836 --> 00:04:52.377
even thought of or
considered, and it

00:04:52.377 --> 00:04:54.396
has the same density as
the phone, the same size

00:04:54.396 --> 00:04:55.770
as the tablet,
and it just works.

00:04:55.770 --> 00:04:57.860
Because you've thought about
these two things orthogonally.

00:04:57.860 --> 00:04:59.420
You don't have to
think about what

00:04:59.420 --> 00:05:00.900
devices are coming
in the future.

00:05:00.900 --> 00:05:05.470
It's going to pick up the right
assets and layouts for you.

00:05:05.470 --> 00:05:08.370
And this brings me on to the
subject of responsive design.

00:05:08.370 --> 00:05:12.550
So I think Android's learned a
lot from web-inspired layouts--

00:05:12.550 --> 00:05:14.130
things like liquid
layouts and so on.

00:05:14.130 --> 00:05:16.347
And they get you so far--
having things scaled,

00:05:16.347 --> 00:05:18.180
taking up proportional
amounts of the screen

00:05:18.180 --> 00:05:19.040
will get you so far.

00:05:19.040 --> 00:05:22.850
But I think as the
web world has learned,

00:05:22.850 --> 00:05:24.660
the onset to this
plethora of form factors

00:05:24.660 --> 00:05:27.470
out there really is to
really embrace the variety

00:05:27.470 --> 00:05:28.370
and respond to it.

00:05:31.057 --> 00:05:32.890
Yeah, a lot of people
look at this landscape

00:05:32.890 --> 00:05:35.360
and they think, how do I do I
deal with all of this stuff?

00:05:35.360 --> 00:05:37.120
And so the responsive
design approach

00:05:37.120 --> 00:05:39.170
has taught us to think
about break points,

00:05:39.170 --> 00:05:42.580
think about step changes,
where your layouts break

00:05:42.580 --> 00:05:45.230
and where you need to change
to a different representation.

00:05:45.230 --> 00:05:46.730
So you might do
something like this.

00:05:46.730 --> 00:05:50.810
You might say, organize devices
into small, medium, and large,

00:05:50.810 --> 00:05:53.450
and have different layouts that
work for those different sized

00:05:53.450 --> 00:05:53.967
screens.

00:05:53.967 --> 00:05:55.800
And the cool thing is
that Android gives you

00:05:55.800 --> 00:05:56.590
tools to do this.

00:05:56.590 --> 00:05:59.990
It's embraced this in
its very foundations.

00:05:59.990 --> 00:06:00.680
So here we look.

00:06:00.680 --> 00:06:03.030
I've used these little
crazy looking identifiers

00:06:03.030 --> 00:06:06.330
at the bottom to divide
these buckets up.

00:06:06.330 --> 00:06:09.790
You have a look at one
of those-- sw600dp.

00:06:09.790 --> 00:06:12.730
DP again, for those paying
attention, is the DIP unit.

00:06:12.730 --> 00:06:18.960
And what that little
phrase says is the smallest

00:06:18.960 --> 00:06:21.080
width that this layout
is going to work on

00:06:21.080 --> 00:06:22.295
is if there's 600 DPs.

00:06:22.295 --> 00:06:24.490
So you can use
this as a boundary.

00:06:24.490 --> 00:06:28.030
If the device has
400 DPs of width,

00:06:28.030 --> 00:06:29.560
then you'll use a
different layout.

00:06:29.560 --> 00:06:32.642
If it has 600, then it's going
to pick a different layout.

00:06:32.642 --> 00:06:34.100
So using these
boundary points, you

00:06:34.100 --> 00:06:35.827
can construct different layouts.

00:06:35.827 --> 00:06:37.660
And the device will
just pick the right one,

00:06:37.660 --> 00:06:40.250
depending on how
big or small it is.

00:06:40.250 --> 00:06:42.907
I've also listed out,
there's a bunch of different

00:06:42.907 --> 00:06:44.490
what we call resource
qualifies, which

00:06:44.490 --> 00:06:45.920
you can use to create
these boundary points.

00:06:45.920 --> 00:06:48.180
You can have different layout
in landscape or portrait,

00:06:48.180 --> 00:06:49.846
or depending it it's
a different height,

00:06:49.846 --> 00:06:52.905
or if it's a TV rather
than a phone, and so on.

00:06:52.905 --> 00:06:54.780
Android gives you the
flexibility to do this.

00:06:54.780 --> 00:06:56.405
So to walk you through
a simple example

00:06:56.405 --> 00:07:00.870
of how you might do that, if you
want to do this master detail

00:07:00.870 --> 00:07:04.200
view, this is an example
that my team made,

00:07:04.200 --> 00:07:05.822
somehow like meat
news or bacon news.

00:07:05.822 --> 00:07:07.780
Which, I don't know, if
you went down that well

00:07:07.780 --> 00:07:11.690
when I presented this in
Israel-- the bacon news reader.

00:07:11.690 --> 00:07:12.790
Carrying on.

00:07:12.790 --> 00:07:14.515
So say you want to do
this master detail.

00:07:14.515 --> 00:07:16.140
On a phone, you have
these two screens.

00:07:16.140 --> 00:07:17.830
On a tablet, you have
them both at once.

00:07:17.830 --> 00:07:19.350
So easy on Android.

00:07:19.350 --> 00:07:22.270
Basically, you just define
one activity for the home.

00:07:22.270 --> 00:07:24.020
An activity is a
screen basically.

00:07:24.020 --> 00:07:26.920
And then on the tablet,
there's a SW qualify guy

00:07:26.920 --> 00:07:29.000
that I talked about.

00:07:29.000 --> 00:07:33.160
By defining when it is at
least 720 DIPs in width,

00:07:33.160 --> 00:07:34.664
and use this alternative layout.

00:07:34.664 --> 00:07:35.830
And this alternative layout.

00:07:35.830 --> 00:07:37.560
Will just put them
both together rather

00:07:37.560 --> 00:07:39.550
than just showing one time.

00:07:39.550 --> 00:07:40.690
So you can keep it DRY.

00:07:40.690 --> 00:07:42.974
You can be declarative about it.

00:07:42.974 --> 00:07:45.140
Very, very easy to handle
these different scenarios.

00:07:48.810 --> 00:07:50.260
The next I'll
encourage you to do

00:07:50.260 --> 00:07:52.220
is thinking about
these break points

00:07:52.220 --> 00:07:53.785
is to start with your content.

00:07:53.785 --> 00:07:55.910
Quite a lot of people will
get caught up in saying,

00:07:55.910 --> 00:07:58.160
I'm going to design
my tablet layout now.

00:07:58.160 --> 00:08:00.270
And they'll say, OK, so
a tablet is this big.

00:08:00.270 --> 00:08:02.062
Therefore, I need to
design this layout.

00:08:02.062 --> 00:08:03.520
What the problem
with that approach

00:08:03.520 --> 00:08:06.052
is, is if someone comes out
with a slightly smaller device--

00:08:06.052 --> 00:08:08.260
something in between what
you've thought about-- then

00:08:08.260 --> 00:08:08.990
you're stuck.

00:08:08.990 --> 00:08:11.640
You have to end up tweaking
these things all of the time.

00:08:11.640 --> 00:08:12.790
I would encourage
you instead, when

00:08:12.790 --> 00:08:14.498
you're thinking about
these break points,

00:08:14.498 --> 00:08:18.280
is to start with your content--
what's in the application.

00:08:18.280 --> 00:08:20.470
And then, work out how
much space that needs.

00:08:20.470 --> 00:08:23.439
So say you could have
that example there.

00:08:23.439 --> 00:08:25.480
I could lay it out either
as two separate screens

00:08:25.480 --> 00:08:27.880
or is it a dual-column layout.

00:08:27.880 --> 00:08:29.870
I would start with the
content and work out

00:08:29.870 --> 00:08:32.490
how much space I need
for a dual-column layout

00:08:32.490 --> 00:08:35.049
and then set that break
point based on the content,

00:08:35.049 --> 00:08:36.622
not based oh, I've got a tablet.

00:08:36.622 --> 00:08:38.080
I want a dual column
on the tablet,

00:08:38.080 --> 00:08:39.393
and the tablet is this big.

00:08:39.393 --> 00:08:41.309
Doing that means you'll
be happy in the future

00:08:41.309 --> 00:08:43.020
when new devices
come up and pop up

00:08:43.020 --> 00:08:44.820
in between that you
hadn't thought about.

00:08:44.820 --> 00:08:46.950
If you size it to your
content, you'll be happy.

00:08:50.400 --> 00:08:52.655
A few quick examples of
doing good just response

00:08:52.655 --> 00:08:55.910
design on Android-- share a
couple from the Google suite.

00:08:55.910 --> 00:08:58.040
So this is a Google
Play Music application.

00:08:58.040 --> 00:09:01.730
As you can see, as we
go to larger devices,

00:09:01.730 --> 00:09:04.320
it really easily just
rearranges the same content.

00:09:04.320 --> 00:09:07.314
So things get bigger or get
restacked next to each other.

00:09:07.314 --> 00:09:08.980
So this is like using
those break points

00:09:08.980 --> 00:09:11.510
to say, oh, I need at least
so many pixels of width

00:09:11.510 --> 00:09:15.220
or DIPs of width in order to
do this horizontal layout.

00:09:15.220 --> 00:09:19.320
Otherwise, if it's smaller,
go into this vertical layout.

00:09:19.320 --> 00:09:21.980
Within items as well, if you
see here, this row of cards,

00:09:21.980 --> 00:09:25.531
you see, we're changing how much
crop, how many cards are shown,

00:09:25.531 --> 00:09:27.280
how much information
it shows in each one.

00:09:27.280 --> 00:09:28.422
Very, very simple stuff.

00:09:28.422 --> 00:09:30.630
Just by using these same
break points I talked about,

00:09:30.630 --> 00:09:33.000
you can just
optimize the content

00:09:33.000 --> 00:09:37.010
to respond to the amount
of space available.

00:09:37.010 --> 00:09:39.760
So again, simple stuff.

00:09:39.760 --> 00:09:42.570
Here's the Calendar application.

00:09:42.570 --> 00:09:44.827
Sometimes it doesn't come
out particularly well

00:09:44.827 --> 00:09:46.910
on the projector, but
basically, we just introduce

00:09:46.910 --> 00:09:48.974
margins when you get
over a certain point.

00:09:48.974 --> 00:09:50.640
If you didn't do
something, you can just

00:09:50.640 --> 00:09:52.431
let the content stretch
all the way across.

00:09:52.431 --> 00:09:54.504
It'll be a pretty
uncomfortable experience.

00:09:54.504 --> 00:09:56.420
So you can do some really,
really simple stuff

00:09:56.420 --> 00:09:58.520
to make your application
just so much easier

00:09:58.520 --> 00:10:01.110
to use for your users.

00:10:01.110 --> 00:10:02.950
OK, setting maximum widths.

00:10:02.950 --> 00:10:03.450
OK.

00:10:03.450 --> 00:10:04.360
There's a great job.

00:10:04.360 --> 00:10:07.010
So it changes up from a list,
to a grid, to a staggered grid

00:10:07.010 --> 00:10:08.426
as you get more
[INAUDIBLE] space.

00:10:08.426 --> 00:10:10.987
Again, very easy to do.

00:10:10.987 --> 00:10:13.070
Etsy did a fantastic job
with this staggered grid,

00:10:13.070 --> 00:10:14.195
which they've open-sourced.

00:10:14.195 --> 00:10:16.840
I've put the links to
that if you're interested.

00:10:16.840 --> 00:10:17.600
Cool.

00:10:17.600 --> 00:10:19.960
That was a million miles
an hour through thinking

00:10:19.960 --> 00:10:22.190
about the screen,
outside the screen.

00:10:22.190 --> 00:10:23.820
The second topic
I want to focus on

00:10:23.820 --> 00:10:26.415
is thinking about
outside the app.

00:10:26.415 --> 00:10:28.540
So it's just really
embracing what

00:10:28.540 --> 00:10:31.800
you can do in Android to make
an amazing, immersive experience

00:10:31.800 --> 00:10:35.086
that's different to
the web or something.

00:10:35.086 --> 00:10:36.460
And to illustrate
that, I'm going

00:10:36.460 --> 00:10:39.900
to take you through just a quick
video of a journey on my Home

00:10:39.900 --> 00:10:40.409
screen.

00:10:40.409 --> 00:10:40.950
So here I am.

00:10:40.950 --> 00:10:43.230
I'm on my Home screen--
well, on my device.

00:10:43.230 --> 00:10:44.480
And I can already see content.

00:10:44.480 --> 00:10:45.930
There's widgets and so on.

00:10:45.930 --> 00:10:48.717
And this is the Home
screen on my phone.

00:10:48.717 --> 00:10:51.300
If you're not an Android user,
this might look strange to you.

00:10:51.300 --> 00:10:53.790
But Android users can
customize and show

00:10:53.790 --> 00:10:56.650
widgets and a huge amount
of personalization.

00:10:56.650 --> 00:10:59.760
So here, I decided to
just move a widget.

00:10:59.760 --> 00:11:02.990
This is my web bookmarks--
move it up to the top.

00:11:02.990 --> 00:11:05.470
And I decided to carry
on a search, which

00:11:05.470 --> 00:11:07.970
I saved to my bookmarks,
which is pubs in London.

00:11:07.970 --> 00:11:08.720
So there they are.

00:11:08.720 --> 00:11:10.045
So I click that.

00:11:10.045 --> 00:11:11.920
And if you notice anything
interesting there,

00:11:11.920 --> 00:11:16.460
so I clicked on a map
and an app opened.

00:11:16.460 --> 00:11:18.400
Some people think
URLs don't open apps,

00:11:18.400 --> 00:11:20.289
but on Android they can.

00:11:20.289 --> 00:11:20.830
So here I am.

00:11:20.830 --> 00:11:22.910
So now in a map,
the web browsers

00:11:22.910 --> 00:11:24.800
have this full
multi-touch gestural

00:11:24.800 --> 00:11:26.340
3D building type
experience, and I

00:11:26.340 --> 00:11:27.742
can find a pub I
was looking for.

00:11:27.742 --> 00:11:29.700
And I decide I want to
share that with someone.

00:11:29.700 --> 00:11:31.530
So I could either use the
built-in sharing, or just

00:11:31.530 --> 00:11:32.570
[INAUDIBLE] right there.

00:11:32.570 --> 00:11:35.850
I just use the keys to take a
screenshot, and there it is.

00:11:35.850 --> 00:11:38.100
You can see, it gives me a
little notification saying,

00:11:38.100 --> 00:11:40.260
hey, there's a screen
shot just saved for you.

00:11:40.260 --> 00:11:41.730
And if I swipe
down from the top,

00:11:41.730 --> 00:11:43.880
I get the list of notifications.

00:11:43.880 --> 00:11:46.280
I can quickly, I don't
need those emails.

00:11:46.280 --> 00:11:48.450
And I can quickly
use a simple gesture

00:11:48.450 --> 00:11:51.992
to expand out that screenshot
I just took, hit Share.

00:11:51.992 --> 00:11:53.700
And I want to share
this with my friends.

00:11:53.700 --> 00:11:56.286
I'm going to use Google+.

00:11:56.286 --> 00:11:57.630
And blah, blah, blah.

00:11:57.630 --> 00:12:00.630
So Google+ pops up
a little dialogue,

00:12:00.630 --> 00:12:03.790
and I can type in a quick
message, and hit Share.

00:12:03.790 --> 00:12:06.034
So that was a really
simple kind of interaction.

00:12:06.034 --> 00:12:08.200
But I think the most important
and interesting thing

00:12:08.200 --> 00:12:11.340
about that is never once
did I launch an app, per se.

00:12:11.340 --> 00:12:13.250
I didn't go to the
Home screen of tiles,

00:12:13.250 --> 00:12:17.300
and click into a tile,
and do something, and then

00:12:17.300 --> 00:12:19.180
create a screen shot,
and then go into Home,

00:12:19.180 --> 00:12:20.763
and then go into
another app, and then

00:12:20.763 --> 00:12:23.230
pull in that screen
shot, and then share it.

00:12:23.230 --> 00:12:25.860
The whole thing was just
one continuous flow,

00:12:25.860 --> 00:12:29.406
based on what I
was wanting to do.

00:12:29.406 --> 00:12:30.530
I like to think about this.

00:12:30.530 --> 00:12:32.029
A lot of people say
the word "open."

00:12:32.029 --> 00:12:33.800
And Android is open,
and it has a lot

00:12:33.800 --> 00:12:35.445
of meaning depending
how you take it.

00:12:35.445 --> 00:12:37.320
I like to think of
Android being open as it's

00:12:37.320 --> 00:12:39.890
open for making more
interesting applications.

00:12:39.890 --> 00:12:42.390
And I like to think of
that as a task-based flow.

00:12:42.390 --> 00:12:44.166
So rather than being
an app-based flow,

00:12:44.166 --> 00:12:46.540
where everyone's going into
your app, and then back Home,

00:12:46.540 --> 00:12:47.540
and out, and then
into another app.

00:12:47.540 --> 00:12:49.280
And there's these
little silos of data

00:12:49.280 --> 00:12:50.910
that never talk to each other.

00:12:50.910 --> 00:12:53.360
Android lets you build
these incredible flows

00:12:53.360 --> 00:12:54.434
that work together.

00:12:54.434 --> 00:12:55.850
So I went between
the Home screen,

00:12:55.850 --> 00:12:58.890
and the Maps application,
and Google+ applications

00:12:58.890 --> 00:12:59.640
seamlessly.

00:12:59.640 --> 00:13:02.040
I wasn't thinking about which
application I was using.

00:13:02.040 --> 00:13:03.539
I was thinking about
the task that I

00:13:03.539 --> 00:13:07.680
was trying achieve-- find a
pub, share it to a friend.

00:13:07.680 --> 00:13:10.030
And you can build these
seamless experiences

00:13:10.030 --> 00:13:11.705
really easy on Android.

00:13:11.705 --> 00:13:13.080
The other thing
I think is really

00:13:13.080 --> 00:13:14.000
interesting about
Android is it's

00:13:14.000 --> 00:13:15.740
open for innovation, which
should be interesting for you

00:13:15.740 --> 00:13:16.770
guys.

00:13:16.770 --> 00:13:19.400
Because at any point,
you can replace

00:13:19.400 --> 00:13:21.980
the default way of
doing something.

00:13:21.980 --> 00:13:24.800
So what I mean is, Android
has a built-in text

00:13:24.800 --> 00:13:26.430
messaging app or dialer.

00:13:26.430 --> 00:13:29.495
But if you have a cool
idea about replacing that,

00:13:29.495 --> 00:13:30.370
you can replace that.

00:13:30.370 --> 00:13:32.932
You can plug into these
different task flows

00:13:32.932 --> 00:13:34.140
that people are trying to do.

00:13:34.140 --> 00:13:35.680
It's incredibly
open and flexible.

00:13:35.680 --> 00:13:38.064
And it's all available to you.

00:13:38.064 --> 00:13:40.230
So I'm going to be a bit
more technical now and talk

00:13:40.230 --> 00:13:41.350
about intents.

00:13:41.350 --> 00:13:46.200
Intents are the glue that
make this all possible.

00:13:46.200 --> 00:13:48.950
As I said, they're the glue
between application components.

00:13:48.950 --> 00:13:50.491
And what's interesting
is, they allow

00:13:50.491 --> 00:13:53.190
you to do this thing I like to
refer to as outsourcing tasks

00:13:53.190 --> 00:13:55.370
to other apps.

00:13:55.370 --> 00:13:58.630
To walk you through what
that means, to break it down,

00:13:58.630 --> 00:14:03.040
intent is basically a
combination of both an action

00:14:03.040 --> 00:14:09.132
and a piece of data-- view
this URL or edit this contract.

00:14:09.132 --> 00:14:10.590
And what's more
is, they can result

00:14:10.590 --> 00:14:13.475
in a return piece of data.

00:14:13.475 --> 00:14:14.850
So when you write
an application,

00:14:14.850 --> 00:14:19.360
you can tell the phone
these are the intents which

00:14:19.360 --> 00:14:20.630
I know how to handle.

00:14:20.630 --> 00:14:23.080
For example, if I wanted
to share a piece of text,

00:14:23.080 --> 00:14:26.850
like I love gamma frames, every
single app on the system says,

00:14:26.850 --> 00:14:28.970
hey, I know how to
share a piece of text

00:14:28.970 --> 00:14:31.470
will appear in that share box.

00:14:31.470 --> 00:14:35.642
So when I shared that image
from Maps, the options that

00:14:35.642 --> 00:14:38.100
popped up from every app I had
installed on the phone which

00:14:38.100 --> 00:14:40.650
said hey, I know how
to share an image.

00:14:40.650 --> 00:14:43.910
So by using the system to
be this bus, to outsource

00:14:43.910 --> 00:14:46.520
these tasks, you
can plug-in your app

00:14:46.520 --> 00:14:49.050
into other people's flows.

00:14:49.050 --> 00:14:52.280
So here are a few more
examples of how this works.

00:14:52.280 --> 00:14:53.470
Say you have an application.

00:14:53.470 --> 00:14:56.850
And in your app, you want to
scan barcodes for some reason

00:14:56.850 --> 00:14:59.590
and to link the real
and virtual world.

00:14:59.590 --> 00:15:01.446
But you don't
actually want to have

00:15:01.446 --> 00:15:03.970
to build the barcode scanning
application yourself.

00:15:03.970 --> 00:15:07.321
Instead, what you can
do is you can just

00:15:07.321 --> 00:15:11.270
start an intent saying, there's
a well-known intent out there

00:15:11.270 --> 00:15:12.770
with an action of
scanning barcodes.

00:15:12.770 --> 00:15:14.480
So you just invoke that.

00:15:14.480 --> 00:15:17.580
And the system will say, hey,
you have this app installed

00:15:17.580 --> 00:15:18.840
which knows how to do that.

00:15:18.840 --> 00:15:20.590
It will launch that
other application.

00:15:20.590 --> 00:15:23.197
It'll perform the
task, read a barcode,

00:15:23.197 --> 00:15:24.655
and then it returns
it back to you.

00:15:24.655 --> 00:15:27.660
So you outsource that task
to another application.

00:15:27.660 --> 00:15:29.970
Or you can write an
application and offer

00:15:29.970 --> 00:15:31.130
an API almost the same.

00:15:31.130 --> 00:15:32.580
These are the intents I support.

00:15:32.580 --> 00:15:36.110
And other people can invoke you.

00:15:36.110 --> 00:15:37.969
Another example is
picking a contact.

00:15:37.969 --> 00:15:40.260
You might want to pick a
contact from the address book,

00:15:40.260 --> 00:15:42.280
but you don't want to have to
write all that code to do it.

00:15:42.280 --> 00:15:44.530
The contacts book, or your
address book on your phone,

00:15:44.530 --> 00:15:47.109
already knows how to do
picking contact type stuff.

00:15:47.109 --> 00:15:48.900
So you just fire off
an intent saying, hey,

00:15:48.900 --> 00:15:51.220
does anyone know how
to pick me a contact.

00:15:51.220 --> 00:15:53.650
The contacts app says yep,
I can do that for you,

00:15:53.650 --> 00:15:55.710
picks a contact,
returns it back to you.

00:15:55.710 --> 00:15:57.700
You didn't have to
write any code to that.

00:15:57.700 --> 00:16:00.000
It's great.

00:16:00.000 --> 00:16:02.900
And another example, this is how
the Maps example worked early

00:16:02.900 --> 00:16:06.590
on, is that your
app can declare it

00:16:06.590 --> 00:16:13.150
can handle certain kind of
URL schemas, as it were.

00:16:13.150 --> 00:16:16.279
So when I clicked on that
picture of a map and it opened

00:16:16.279 --> 00:16:18.820
in the Maps application, that's
because the Maps app had said

00:16:18.820 --> 00:16:22.954
hey, any URL which looks like
maps.google.com/whatever,

00:16:22.954 --> 00:16:23.620
give that to me.

00:16:23.620 --> 00:16:24.820
I know how to handle that.

00:16:24.820 --> 00:16:27.100
And the user can pick, do
you want to use the browser

00:16:27.100 --> 00:16:28.190
or do you want to
use this Maps app.

00:16:28.190 --> 00:16:30.600
And you can set a default
and all that good stuff.

00:16:30.600 --> 00:16:31.770
But this is really powerful.

00:16:31.770 --> 00:16:33.800
This means if in
your marketing, you

00:16:33.800 --> 00:16:37.200
want to send out a
URL to your service,

00:16:37.200 --> 00:16:39.352
and you don't have to
have your special thing,

00:16:39.352 --> 00:16:40.810
like if you have
the app installed,

00:16:40.810 --> 00:16:42.500
then click here or
otherwise click here.

00:16:42.500 --> 00:16:44.425
You can just send out
a normal restful URL.

00:16:44.425 --> 00:16:46.800
And if they don't have the
app installed, fine, whatever.

00:16:46.800 --> 00:16:47.630
It goes off to the browser.

00:16:47.630 --> 00:16:49.010
If they do have
the app installed,

00:16:49.010 --> 00:16:50.509
you get into this
richer experience.

00:16:50.509 --> 00:16:52.960
It lets you build these
really great experiences

00:16:52.960 --> 00:16:55.355
for the users.

00:16:55.355 --> 00:16:56.980
And the last thing
I want to talk about

00:16:56.980 --> 00:17:00.260
is on this [INAUDIBLE]
the app is notification.

00:17:00.260 --> 00:17:02.990
Notifications is an incredibly
powerful thing, I think.

00:17:02.990 --> 00:17:06.079
And it's always been
very rich on Android.

00:17:06.079 --> 00:17:08.776
You can have these large
style notifications,

00:17:08.776 --> 00:17:09.609
I like to call them.

00:17:09.609 --> 00:17:10.810
So you either have
a standard one

00:17:10.810 --> 00:17:12.684
or these-- I'm going to
take you through some

00:17:12.684 --> 00:17:13.790
of the more powerful ones.

00:17:13.790 --> 00:17:16.310
So we have these different
standard layouts,

00:17:16.310 --> 00:17:18.329
where you can have even
larger amounts of text,

00:17:18.329 --> 00:17:20.745
show an image in there, have
a completely custom layout.

00:17:20.745 --> 00:17:22.703
So there's an example of
the music layer, which

00:17:22.703 --> 00:17:24.190
you can control
completely without having

00:17:24.190 --> 00:17:25.314
to go into the application.

00:17:25.314 --> 00:17:28.651
You can just do pause, play,
fast forward, and so on.

00:17:28.651 --> 00:17:30.150
And I think almost
more interesting,

00:17:30.150 --> 00:17:31.320
you can have these actions.

00:17:31.320 --> 00:17:33.460
You saw when I shared
that screen shot earlier.

00:17:33.460 --> 00:17:35.510
I just went to the notification,
hit Share straight from there.

00:17:35.510 --> 00:17:36.890
I didn't have to go
into the application.

00:17:36.890 --> 00:17:38.910
I just used the
notification as a shortcut.

00:17:38.910 --> 00:17:41.550
And what this does is, it
lets you get your app out

00:17:41.550 --> 00:17:42.180
of the way.

00:17:42.180 --> 00:17:43.520
You don't have to
launch the application.

00:17:43.520 --> 00:17:45.770
You can offer some functionality
and complete it very,

00:17:45.770 --> 00:17:46.530
very quickly.

00:17:46.530 --> 00:17:48.360
So you're a ticketing
app or something.

00:17:48.360 --> 00:17:50.640
You could say, new ticket
for this band you like.

00:17:50.640 --> 00:17:53.006
Just hit Buy straightaway
from the notification.

00:17:53.006 --> 00:17:54.380
Having these actual
notifications

00:17:54.380 --> 00:17:57.190
is incredibly powerful.

00:17:57.190 --> 00:17:58.820
It's also one of
these with great power

00:17:58.820 --> 00:17:59.944
comes great responsibility.

00:17:59.944 --> 00:18:02.820
People are getting a bit spammed
out by some notifications.

00:18:02.820 --> 00:18:06.035
So here's some
guidelines about when

00:18:06.035 --> 00:18:07.850
is a good time to
show a notification.

00:18:07.850 --> 00:18:10.832
If it's time sensitive,
your calendar appointment

00:18:10.832 --> 00:18:11.540
is in 10 minutes.

00:18:11.540 --> 00:18:15.620
Or another person, like you
have a WhatsApp from your wife,

00:18:15.620 --> 00:18:17.320
or she specifically
requested it.

00:18:17.320 --> 00:18:20.750
These are good examples of
times to show a notification.

00:18:20.750 --> 00:18:22.880
If in doubt, probably err
on the side of caution,

00:18:22.880 --> 00:18:25.010
because you don't
want spam the users.

00:18:25.010 --> 00:18:27.116
Or be smart about it,
like show a notification

00:18:27.116 --> 00:18:28.740
and track whether
they responded to it.

00:18:28.740 --> 00:18:31.330
If the user didn't respond, then
perhaps back off your strategy.

00:18:31.330 --> 00:18:33.010
Or if they did respond,
and they're liking it,

00:18:33.010 --> 00:18:33.860
maybe ramp it up.

00:18:33.860 --> 00:18:36.410
Be a bit smart about it.

00:18:36.410 --> 00:18:38.490
Android has this notion
of priority as well.

00:18:38.490 --> 00:18:42.520
So you can say that an incoming
call is much more high priority

00:18:42.520 --> 00:18:45.030
than there's traffic on your
[INAUDIBLE] home, or something

00:18:45.030 --> 00:18:46.140
like that.

00:18:46.140 --> 00:18:48.706
So if you indicate the
priority to Android

00:18:48.706 --> 00:18:51.330
of your notification, then it'll
use that to kind of rank them.

00:18:51.330 --> 00:18:53.180
So it will give you the
most priority ones higher

00:18:53.180 --> 00:18:54.850
and will also display
them slightly differently.

00:18:54.850 --> 00:18:56.510
So if you, interestingly,
use this one,

00:18:56.510 --> 00:18:58.280
this minimum
priority, what we call

00:18:58.280 --> 00:19:00.670
it an opportunistic
notification,

00:19:00.670 --> 00:19:03.120
then we won't even show an
icon at the top of the phone.

00:19:03.120 --> 00:19:05.100
But if you go into
the notification tray,

00:19:05.100 --> 00:19:06.180
then we'll show it there.

00:19:06.180 --> 00:19:07.340
It's an interesting thing.

00:19:07.340 --> 00:19:10.890
So use this smartly.

00:19:10.890 --> 00:19:11.990
Let's get on.

00:19:11.990 --> 00:19:14.700
And so you might have seen
the Android Wear announcement.

00:19:14.700 --> 00:19:16.450
I think this is an
example of the power

00:19:16.450 --> 00:19:17.910
of those actionable
notifications.

00:19:17.910 --> 00:19:20.140
The Android Wear platform
is built entirely

00:19:20.140 --> 00:19:21.452
on the notifications API.

00:19:21.452 --> 00:19:23.910
So these things that show up
as notification on your phone,

00:19:23.910 --> 00:19:25.120
they have actions.

00:19:25.120 --> 00:19:27.890
And they come out as
quickly actionable things

00:19:27.890 --> 00:19:28.716
on your wrist.

00:19:28.716 --> 00:19:30.090
So if you think
about it, you can

00:19:30.090 --> 00:19:31.220
build an application very easy.

00:19:31.220 --> 00:19:31.800
It shows notifications.

00:19:31.800 --> 00:19:33.216
It's going to show
up on my wrist.

00:19:33.216 --> 00:19:34.786
And I can quickly
action it saying,

00:19:34.786 --> 00:19:36.660
tickets have just come
out for a band I want.

00:19:36.660 --> 00:19:37.160
Buy it.

00:19:37.160 --> 00:19:37.990
Done.

00:19:37.990 --> 00:19:41.730
Very, very powerful stuff.

00:19:41.730 --> 00:19:44.990
And so I want to finish up just
giving you a few examples which

00:19:44.990 --> 00:19:46.980
I think really
embody this thinking

00:19:46.980 --> 00:19:49.530
outside the app principle
I'm talking about-- building

00:19:49.530 --> 00:19:52.670
applications, which work
with other people [INAUDIBLE]

00:19:52.670 --> 00:19:53.940
think about them.

00:19:53.940 --> 00:19:56.670
So SwiftKey, I hope you know,
is an awesome keyboard, only

00:19:56.670 --> 00:19:58.770
possible in Android, that you
can replace one of these system

00:19:58.770 --> 00:19:59.340
components.

00:19:59.340 --> 00:20:01.630
Because Android is open, you
can just completely say yeah,

00:20:01.630 --> 00:20:03.213
there's a keyboard
that comes with it,

00:20:03.213 --> 00:20:06.850
but here's one that
I think's better.

00:20:06.850 --> 00:20:10.110
Aviate, which I think
Twitter just bought recently,

00:20:10.110 --> 00:20:11.390
is a home screen replacement.

00:20:11.390 --> 00:20:14.677
So it smartly recommends apps
to you based on where you are,

00:20:14.677 --> 00:20:17.177
and what time of day, and what
apps might be relevant to you

00:20:17.177 --> 00:20:18.210
there.

00:20:18.210 --> 00:20:20.300
Again, only possible
because you can completely

00:20:20.300 --> 00:20:21.940
replace a component in Android.

00:20:24.239 --> 00:20:25.780
Has anyone heard of
this Link Bubble?

00:20:25.780 --> 00:20:26.460
It's quite cool.

00:20:26.460 --> 00:20:29.120
This is a browser which came
out quite recently which

00:20:29.120 --> 00:20:31.134
lets you do like tab
browsing as it were.

00:20:31.134 --> 00:20:32.550
So here I am in
my Twitter stream.

00:20:32.550 --> 00:20:34.216
And I'm clicking on
just standard links.

00:20:34.216 --> 00:20:36.591
And instead of popping up
and being one app at a time,

00:20:36.591 --> 00:20:38.340
they just open up in
these little bubbles,

00:20:38.340 --> 00:20:39.173
letting me carry on.

00:20:39.173 --> 00:20:40.820
So when I'm on my
train commute which

00:20:40.820 --> 00:20:42.640
has no signal through
Wimbledon, I can just

00:20:42.640 --> 00:20:44.848
keep on opening up all the
links in the Twitter feed,

00:20:44.848 --> 00:20:46.784
and they open in like
tabs, as it were.

00:20:46.784 --> 00:20:48.450
And then I can just
when they're loaded,

00:20:48.450 --> 00:20:50.367
I can just read
them when I want.

00:20:50.367 --> 00:20:51.200
Really, really cool.

00:20:51.200 --> 00:20:53.350
And this is all because of
this intent-based system

00:20:53.350 --> 00:20:55.030
that you can do all of this.

00:20:57.920 --> 00:21:00.160
And the last one-- oh
no, there's one more.

00:21:00.160 --> 00:21:02.376
Bolt again, is a pretty
innovative dialer.

00:21:02.376 --> 00:21:03.750
It replaces your
standard dialer.

00:21:03.750 --> 00:21:06.090
But if your friend's
using Bolt, then it'll

00:21:06.090 --> 00:21:09.290
use VOiP rather than PSTN, so
you get free calling to them.

00:21:09.290 --> 00:21:11.246
And it's just
really, really smart.

00:21:11.246 --> 00:21:13.870
Again, only possible because you
can replace a system component

00:21:13.870 --> 00:21:16.152
and do all this good stuff.

00:21:16.152 --> 00:21:18.360
And lastly, one more favorite
app from my colleagues.

00:21:18.360 --> 00:21:21.460
It's called Myseu, which
is a wallpaper application.

00:21:21.460 --> 00:21:26.222
It will show you a wallpaper,
a different wallpaper a day.

00:21:26.222 --> 00:21:27.680
But one of the cool
things about it

00:21:27.680 --> 00:21:31.410
is, it offers a plug-in API so
that different applications can

00:21:31.410 --> 00:21:34.190
supply different images which
you can set as your wallpaper.

00:21:34.190 --> 00:21:37.904
Again because of this
inter-app communication stuff,

00:21:37.904 --> 00:21:39.070
this is really, really cool.

00:21:39.070 --> 00:21:40.654
You can just install
this and then

00:21:40.654 --> 00:21:42.320
other applications
can offer up sources.

00:21:42.320 --> 00:21:44.236
So if you have a Flickr
application installed,

00:21:44.236 --> 00:21:45.780
it could offer you
photos from Flickr

00:21:45.780 --> 00:21:47.321
to show up in your
wallpaper, because

00:21:47.321 --> 00:21:49.206
of this inter-app stuff.

00:21:49.206 --> 00:21:50.705
So there's just a
few quick examples

00:21:50.705 --> 00:21:54.540
to inspire you with stuff
that you can build on Android.

00:21:54.540 --> 00:21:57.250
I'm going to end up the
talk with a couple of plugs.

00:21:57.250 --> 00:21:59.500
First off, if you remember
one URL from this talk,

00:21:59.500 --> 00:22:02.780
go to developer-- or "d",
save you a few keystrokes--

00:22:02.780 --> 00:22:04.300
android.com/design.

00:22:04.300 --> 00:22:07.682
And this will give you all
of our US patents and so on.

00:22:07.682 --> 00:22:09.140
It's a really,
really awesome site.

00:22:09.140 --> 00:22:11.000
And my favorite thing about
it is, it's quite small.

00:22:11.000 --> 00:22:13.420
So you can actually read the
whole thing in about an hour,

00:22:13.420 --> 00:22:16.852
and really get going
on Android design.

00:22:16.852 --> 00:22:18.810
If you are interested in
designing for Android,

00:22:18.810 --> 00:22:22.166
I do a monthly
now YouTube show--

00:22:22.166 --> 00:22:23.540
about a half an
hour show, called

00:22:23.540 --> 00:22:26.180
"Android Design
in Action," where

00:22:26.180 --> 00:22:28.980
we talk about different
Android design topics.

00:22:28.980 --> 00:22:30.470
Check it out.

00:22:30.470 --> 00:22:32.150
And that's me.

00:22:32.150 --> 00:22:33.460
And this is this talk.

00:22:33.460 --> 00:22:35.950
So I think they're going
to be distributed later.

00:22:35.950 --> 00:22:38.050
But if you want to
get it now, you can.

00:22:38.050 --> 00:22:39.023
Thanks very much.

00:22:44.939 --> 00:22:47.180
FEMALE SPEAKER: Thanks, Nick.

