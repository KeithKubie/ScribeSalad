WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.460 align:start position:0%
 
[Music]

00:00:06.460 --> 00:00:06.470 align:start position:0%
 
 

00:00:06.470 --> 00:00:10.040 align:start position:0%
 
hi<00:00:07.470><c> everyone</c><00:00:07.649><c> my</c><00:00:08.189><c> name</c><00:00:08.309><c> is</c><00:00:08.340><c> Wojtek</c><00:00:08.719><c> and</c><00:00:09.719><c> i</c>

00:00:10.040 --> 00:00:10.050 align:start position:0%
hi everyone my name is Wojtek and i
 

00:00:10.050 --> 00:00:11.450 align:start position:0%
hi everyone my name is Wojtek and i
wanted<00:00:10.260><c> to</c><00:00:10.349><c> share</c><00:00:10.469><c> with</c><00:00:10.559><c> you</c><00:00:10.679><c> a</c><00:00:10.769><c> short</c><00:00:11.309><c> story</c>

00:00:11.450 --> 00:00:11.460 align:start position:0%
wanted to share with you a short story
 

00:00:11.460 --> 00:00:13.100 align:start position:0%
wanted to share with you a short story
about<00:00:11.639><c> my</c><00:00:11.940><c> experience</c><00:00:11.969><c> with</c><00:00:12.480><c> the</c><00:00:12.660><c> new</c><00:00:12.750><c> cullen</c>

00:00:13.100 --> 00:00:13.110 align:start position:0%
about my experience with the new cullen
 

00:00:13.110 --> 00:00:15.079 align:start position:0%
about my experience with the new cullen
multi-platform<00:00:13.679><c> projects</c><00:00:14.099><c> in</c><00:00:14.250><c> Kotlin</c><00:00:14.969><c> one</c>

00:00:15.079 --> 00:00:15.089 align:start position:0%
multi-platform projects in Kotlin one
 

00:00:15.089 --> 00:00:17.150 align:start position:0%
multi-platform projects in Kotlin one
three<00:00:15.299><c> so</c><00:00:16.289><c> when</c><00:00:16.740><c> we</c><00:00:16.830><c> come</c><00:00:16.980><c> to</c><00:00:17.070><c> these</c>

00:00:17.150 --> 00:00:17.160 align:start position:0%
three so when we come to these
 

00:00:17.160 --> 00:00:18.769 align:start position:0%
three so when we come to these
conferences<00:00:17.490><c> talk</c><00:00:18.000><c> about</c><00:00:18.210><c> Android</c><00:00:18.510><c> talk</c>

00:00:18.769 --> 00:00:18.779 align:start position:0%
conferences talk about Android talk
 

00:00:18.779 --> 00:00:20.240 align:start position:0%
conferences talk about Android talk
about<00:00:18.990><c> running</c><00:00:19.199><c> Kotlin</c><00:00:19.650><c> on</c><00:00:19.740><c> Android</c><00:00:20.039><c> for</c>

00:00:20.240 --> 00:00:20.250 align:start position:0%
about running Kotlin on Android for
 

00:00:20.250 --> 00:00:21.830 align:start position:0%
about running Kotlin on Android for
making<00:00:20.460><c> Android</c><00:00:20.699><c> that's</c><00:00:20.789><c> what</c><00:00:21.539><c> we</c><00:00:21.660><c> really</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
making Android that's what we really
 

00:00:21.840 --> 00:00:24.679 align:start position:0%
making Android that's what we really
mean<00:00:22.740><c> is</c><00:00:22.980><c> :</c><00:00:23.460><c> JVM</c>

00:00:24.679 --> 00:00:24.689 align:start position:0%
mean is : JVM
 

00:00:24.689 --> 00:00:26.839 align:start position:0%
mean is : JVM
that's<00:00:25.050><c> the</c><00:00:25.260><c> Kotlin</c><00:00:26.130><c> that</c><00:00:26.250><c> we</c><00:00:26.340><c> know</c><00:00:26.460><c> that</c><00:00:26.670><c> gets</c>

00:00:26.839 --> 00:00:26.849 align:start position:0%
that's the Kotlin that we know that gets
 

00:00:26.849 --> 00:00:28.009 align:start position:0%
that's the Kotlin that we know that gets
compiled<00:00:27.210><c> to</c><00:00:27.510><c> Java</c>

00:00:28.009 --> 00:00:28.019 align:start position:0%
compiled to Java
 

00:00:28.019 --> 00:00:30.290 align:start position:0%
compiled to Java
and<00:00:28.590><c> then</c><00:00:29.070><c> you</c><00:00:29.429><c> know</c><00:00:29.550><c> we</c><00:00:29.670><c> can</c><00:00:29.820><c> transform</c><00:00:30.179><c> it</c>

00:00:30.290 --> 00:00:30.300 align:start position:0%
and then you know we can transform it
 

00:00:30.300 --> 00:00:32.840 align:start position:0%
and then you know we can transform it
into<00:00:30.510><c> Dex</c><00:00:30.869><c> files</c><00:00:31.320><c> run</c><00:00:31.769><c> it</c><00:00:31.859><c> on</c><00:00:31.949><c> Android</c><00:00:32.189><c> but</c><00:00:32.759><c> it</c>

00:00:32.840 --> 00:00:32.850 align:start position:0%
into Dex files run it on Android but it
 

00:00:32.850 --> 00:00:34.819 align:start position:0%
into Dex files run it on Android but it
can<00:00:32.969><c> also</c><00:00:33.120><c> run</c><00:00:33.390><c> on</c><00:00:33.660><c> Cloud</c><00:00:34.079><c> Servers</c><00:00:34.469><c> on</c><00:00:34.710><c> our</c>

00:00:34.819 --> 00:00:34.829 align:start position:0%
can also run on Cloud Servers on our
 

00:00:34.829 --> 00:00:37.370 align:start position:0%
can also run on Cloud Servers on our
desktops<00:00:35.309><c> and</c><00:00:35.489><c> so</c><00:00:35.640><c> on</c><00:00:35.809><c> now</c><00:00:36.809><c> there</c><00:00:37.170><c> are</c><00:00:37.260><c> two</c>

00:00:37.370 --> 00:00:37.380 align:start position:0%
desktops and so on now there are two
 

00:00:37.380 --> 00:00:38.869 align:start position:0%
desktops and so on now there are two
more<00:00:37.530><c> flavors</c><00:00:37.920><c> of</c><00:00:38.070><c> Kotlin</c><00:00:38.430><c> actually</c><00:00:38.760><c> or</c>

00:00:38.869 --> 00:00:38.879 align:start position:0%
more flavors of Kotlin actually or
 

00:00:38.879 --> 00:00:41.540 align:start position:0%
more flavors of Kotlin actually or
compilation<00:00:39.450><c> targets</c><00:00:39.870><c> first</c><00:00:40.620><c> one</c><00:00:40.800><c> called</c><00:00:41.129><c> nsj</c>

00:00:41.540 --> 00:00:41.550 align:start position:0%
compilation targets first one called nsj
 

00:00:41.550 --> 00:00:44.209 align:start position:0%
compilation targets first one called nsj
for<00:00:42.270><c> running</c><00:00:42.540><c> javascript</c><00:00:43.469><c> in</c><00:00:43.680><c> a</c><00:00:43.829><c> web</c><00:00:44.190><c> browser</c>

00:00:44.209 --> 00:00:44.219 align:start position:0%
for running javascript in a web browser
 

00:00:44.219 --> 00:00:46.639 align:start position:0%
for running javascript in a web browser
environment<00:00:44.969><c> or</c><00:00:45.360><c> even</c><00:00:45.660><c> something</c><00:00:45.870><c> like</c><00:00:46.020><c> cloud</c>

00:00:46.639 --> 00:00:46.649 align:start position:0%
environment or even something like cloud
 

00:00:46.649 --> 00:00:49.760 align:start position:0%
environment or even something like cloud
functions<00:00:47.100><c> or</c><00:00:47.309><c> nodejs</c><00:00:47.730><c> and</c><00:00:48.090><c> then</c><00:00:49.020><c> there's</c><00:00:49.200><c> :</c>

00:00:49.760 --> 00:00:49.770 align:start position:0%
functions or nodejs and then there's :
 

00:00:49.770 --> 00:00:51.799 align:start position:0%
functions or nodejs and then there's :
native<00:00:50.070><c> which</c><00:00:50.489><c> compiles</c><00:00:50.940><c> down</c><00:00:51.270><c> to</c><00:00:51.539><c> machine</c>

00:00:51.799 --> 00:00:51.809 align:start position:0%
native which compiles down to machine
 

00:00:51.809 --> 00:00:54.350 align:start position:0%
native which compiles down to machine
code<00:00:52.140><c> in</c><00:00:52.410><c> you</c><00:00:52.980><c> know</c><00:00:53.070><c> native</c><00:00:53.399><c> libraries</c><00:00:53.789><c> that</c>

00:00:54.350 --> 00:00:54.360 align:start position:0%
code in you know native libraries that
 

00:00:54.360 --> 00:00:57.350 align:start position:0%
code in you know native libraries that
can<00:00:54.539><c> run</c><00:00:54.750><c> or</c><00:00:55.020><c> target</c><00:00:55.739><c> various</c><00:00:56.730><c> platforms</c><00:00:57.210><c> such</c>

00:00:57.350 --> 00:00:57.360 align:start position:0%
can run or target various platforms such
 

00:00:57.360 --> 00:00:59.840 align:start position:0%
can run or target various platforms such
as<00:00:57.390><c> iOS</c><00:00:57.930><c> desktop</c><00:00:58.590><c> apps</c><00:00:58.829><c> even</c><00:00:59.100><c> web</c><00:00:59.430><c> assembly</c>

00:00:59.840 --> 00:00:59.850 align:start position:0%
as iOS desktop apps even web assembly
 

00:00:59.850 --> 00:01:02.869 align:start position:0%
as iOS desktop apps even web assembly
and<00:00:59.969><c> even</c><00:01:00.149><c> Android</c><00:01:00.500><c> so</c><00:01:01.520><c> how</c><00:01:02.520><c> do</c><00:01:02.579><c> we</c><00:01:02.760><c> actually</c>

00:01:02.869 --> 00:01:02.879 align:start position:0%
and even Android so how do we actually
 

00:01:02.879 --> 00:01:04.969 align:start position:0%
and even Android so how do we actually
get<00:01:03.090><c> started</c><00:01:03.329><c> with</c><00:01:03.600><c> this</c><00:01:03.719><c> so</c><00:01:04.290><c> count</c><00:01:04.500><c> them</c><00:01:04.589><c> 1</c><00:01:04.769><c> 3</c>

00:01:04.969 --> 00:01:04.979 align:start position:0%
get started with this so count them 1 3
 

00:01:04.979 --> 00:01:06.890 align:start position:0%
get started with this so count them 1 3
introduces<00:01:05.670><c> a</c><00:01:05.700><c> new</c><00:01:05.850><c> project</c><00:01:06.030><c> structure</c><00:01:06.390><c> and</c><00:01:06.720><c> a</c>

00:01:06.890 --> 00:01:06.900 align:start position:0%
introduces a new project structure and a
 

00:01:06.900 --> 00:01:08.570 align:start position:0%
introduces a new project structure and a
new<00:01:07.110><c> plug-in</c><00:01:07.560><c> that's</c><00:01:07.920><c> called</c><00:01:08.250><c> called</c><00:01:08.490><c> a</c>

00:01:08.570 --> 00:01:08.580 align:start position:0%
new plug-in that's called called a
 

00:01:08.580 --> 00:01:10.460 align:start position:0%
new plug-in that's called called a
multi-platform<00:01:09.000><c> and</c><00:01:09.479><c> if</c><00:01:09.869><c> you</c><00:01:09.990><c> apply</c><00:01:10.260><c> that</c><00:01:10.290><c> to</c>

00:01:10.460 --> 00:01:10.470 align:start position:0%
multi-platform and if you apply that to
 

00:01:10.470 --> 00:01:13.820 align:start position:0%
multi-platform and if you apply that to
any<00:01:10.740><c> of</c><00:01:11.040><c> your</c><00:01:11.189><c> modules</c><00:01:11.549><c> you</c><00:01:12.150><c> can</c><00:01:12.330><c> then</c><00:01:12.830><c> select</c>

00:01:13.820 --> 00:01:13.830 align:start position:0%
any of your modules you can then select
 

00:01:13.830 --> 00:01:17.060 align:start position:0%
any of your modules you can then select
from<00:01:14.310><c> a</c><00:01:14.610><c> preset</c><00:01:15.060><c> from</c><00:01:15.780><c> a</c><00:01:15.900><c> set</c><00:01:16.049><c> of</c><00:01:16.140><c> presets</c><00:01:16.530><c> to</c>

00:01:17.060 --> 00:01:17.070 align:start position:0%
from a preset from a set of presets to
 

00:01:17.070 --> 00:01:18.740 align:start position:0%
from a preset from a set of presets to
target<00:01:17.400><c> any</c><00:01:17.549><c> of</c><00:01:17.670><c> these</c><00:01:17.820><c> platforms</c><00:01:18.030><c> so</c><00:01:18.540><c> here</c>

00:01:18.740 --> 00:01:18.750 align:start position:0%
target any of these platforms so here
 

00:01:18.750 --> 00:01:20.810 align:start position:0%
target any of these platforms so here
for<00:01:18.900><c> example</c><00:01:19.140><c> I'm</c><00:01:19.470><c> targeting</c><00:01:19.890><c> a</c><00:01:20.100><c> Android</c>

00:01:20.810 --> 00:01:20.820 align:start position:0%
for example I'm targeting a Android
 

00:01:20.820 --> 00:01:24.770 align:start position:0%
for example I'm targeting a Android
library<00:01:21.150><c> and</c><00:01:21.350><c> ajs</c><00:01:22.350><c> target</c><00:01:23.360><c> now</c><00:01:24.360><c> when</c><00:01:24.570><c> you</c><00:01:24.659><c> add</c>

00:01:24.770 --> 00:01:24.780 align:start position:0%
library and ajs target now when you add
 

00:01:24.780 --> 00:01:26.719 align:start position:0%
library and ajs target now when you add
these<00:01:24.900><c> to</c><00:01:25.080><c> your</c><00:01:25.110><c> module</c><00:01:25.470><c> it</c><00:01:26.220><c> automatically</c>

00:01:26.719 --> 00:01:26.729 align:start position:0%
these to your module it automatically
 

00:01:26.729 --> 00:01:28.760 align:start position:0%
these to your module it automatically
creates<00:01:26.939><c> source</c><00:01:27.630><c> sets</c><00:01:27.900><c> for</c><00:01:28.259><c> each</c><00:01:28.470><c> of</c><00:01:28.650><c> these</c>

00:01:28.760 --> 00:01:28.770 align:start position:0%
creates source sets for each of these
 

00:01:28.770 --> 00:01:30.950 align:start position:0%
creates source sets for each of these
platform<00:01:29.280><c> specific</c><00:01:29.729><c> cutland</c><00:01:30.030><c> files</c><00:01:30.270><c> so</c><00:01:30.840><c> if</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
platform specific cutland files so if
 

00:01:30.960 --> 00:01:32.510 align:start position:0%
platform specific cutland files so if
you<00:01:31.049><c> put</c><00:01:31.229><c> your</c><00:01:31.320><c> column</c><00:01:31.680><c> files</c><00:01:31.920><c> in</c><00:01:32.130><c> the</c><00:01:32.220><c> J's</c>

00:01:32.510 --> 00:01:32.520 align:start position:0%
you put your column files in the J's
 

00:01:32.520 --> 00:01:34.940 align:start position:0%
you put your column files in the J's
main<00:01:32.820><c> folder</c><00:01:33.150><c> they</c><00:01:33.600><c> will</c><00:01:33.750><c> get</c><00:01:33.840><c> compiled</c><00:01:34.799><c> or</c>

00:01:34.940 --> 00:01:34.950 align:start position:0%
main folder they will get compiled or
 

00:01:34.950 --> 00:01:38.210 align:start position:0%
main folder they will get compiled or
transpiled<00:01:35.430><c> to</c><00:01:35.640><c> JavaScript</c><00:01:36.090><c> files</c><00:01:36.950><c> now</c><00:01:37.950><c> what</c>

00:01:38.210 --> 00:01:38.220 align:start position:0%
transpiled to JavaScript files now what
 

00:01:38.220 --> 00:01:41.359 align:start position:0%
transpiled to JavaScript files now what
do<00:01:38.280><c> I</c><00:01:38.369><c> mean</c><00:01:38.549><c> by</c><00:01:38.610><c> calling</c><00:01:39.360><c> specific</c><00:01:40.369><c> sorry</c>

00:01:41.359 --> 00:01:41.369 align:start position:0%
do I mean by calling specific sorry
 

00:01:41.369 --> 00:01:43.580 align:start position:0%
do I mean by calling specific sorry
platform<00:01:41.790><c> specific</c><00:01:42.270><c> Kotlin</c><00:01:42.659><c> now</c><00:01:43.229><c> if</c><00:01:43.350><c> you</c><00:01:43.439><c> go</c>

00:01:43.580 --> 00:01:43.590 align:start position:0%
platform specific Kotlin now if you go
 

00:01:43.590 --> 00:01:44.870 align:start position:0%
platform specific Kotlin now if you go
and<00:01:43.619><c> browse</c><00:01:43.920><c> the</c><00:01:44.100><c> documentation</c><00:01:44.729><c> the</c>

00:01:44.870 --> 00:01:44.880 align:start position:0%
and browse the documentation the
 

00:01:44.880 --> 00:01:46.429 align:start position:0%
and browse the documentation the
reference<00:01:45.180><c> pages</c><00:01:45.420><c> for</c><00:01:45.750><c> each</c><00:01:45.899><c> of</c><00:01:46.049><c> the</c><00:01:46.170><c> column</c>

00:01:46.429 --> 00:01:46.439 align:start position:0%
reference pages for each of the column
 

00:01:46.439 --> 00:01:49.340 align:start position:0%
reference pages for each of the column
packages<00:01:46.890><c> and</c><00:01:47.070><c> you</c><00:01:47.790><c> mouse</c><00:01:48.119><c> over</c><00:01:48.450><c> any</c><00:01:48.899><c> of</c><00:01:49.079><c> them</c>

00:01:49.340 --> 00:01:49.350 align:start position:0%
packages and you mouse over any of them
 

00:01:49.350 --> 00:01:51.200 align:start position:0%
packages and you mouse over any of them
in<00:01:49.560><c> the</c><00:01:49.950><c> top</c><00:01:50.130><c> right</c><00:01:50.340><c> you</c><00:01:50.549><c> will</c><00:01:50.579><c> see</c><00:01:50.909><c> these</c>

00:01:51.200 --> 00:01:51.210 align:start position:0%
in the top right you will see these
 

00:01:51.210 --> 00:01:53.510 align:start position:0%
in the top right you will see these
multicolored<00:01:51.869><c> chips</c><00:01:52.200><c> that</c><00:01:52.470><c> tell</c><00:01:52.740><c> you</c><00:01:52.920><c> which</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
multicolored chips that tell you which
 

00:01:53.520 --> 00:01:55.490 align:start position:0%
multicolored chips that tell you which
compilation<00:01:54.180><c> target</c><00:01:54.600><c> this</c><00:01:54.990><c> library</c><00:01:55.229><c> is</c>

00:01:55.490 --> 00:01:55.500 align:start position:0%
compilation target this library is
 

00:01:55.500 --> 00:01:57.859 align:start position:0%
compilation target this library is
available<00:01:55.920><c> on</c><00:01:56.040><c> so</c><00:01:56.520><c> here</c><00:01:56.939><c> for</c><00:01:57.270><c> example</c><00:01:57.719><c> the</c>

00:01:57.859 --> 00:01:57.869 align:start position:0%
available on so here for example the
 

00:01:57.869 --> 00:02:00.440 align:start position:0%
available on so here for example the
Kotlin<00:01:58.259><c> browser</c><00:01:58.530><c> package</c><00:01:59.340><c> that</c><00:02:00.149><c> lets</c><00:02:00.270><c> you</c>

00:02:00.440 --> 00:02:00.450 align:start position:0%
Kotlin browser package that lets you
 

00:02:00.450 --> 00:02:02.240 align:start position:0%
Kotlin browser package that lets you
access<00:02:00.600><c> interfaces</c><00:02:01.409><c> for</c><00:02:01.590><c> document</c><00:02:02.100><c> and</c>

00:02:02.240 --> 00:02:02.250 align:start position:0%
access interfaces for document and
 

00:02:02.250 --> 00:02:03.740 align:start position:0%
access interfaces for document and
window<00:02:02.490><c> from</c><00:02:02.700><c> the</c><00:02:02.759><c> web</c><00:02:02.939><c> browser</c><00:02:03.060><c> environment</c>

00:02:03.740 --> 00:02:03.750 align:start position:0%
window from the web browser environment
 

00:02:03.750 --> 00:02:05.600 align:start position:0%
window from the web browser environment
probably<00:02:04.320><c> only</c><00:02:04.649><c> makes</c><00:02:04.829><c> sense</c><00:02:05.040><c> on</c><00:02:05.219><c> a</c><00:02:05.250><c> gest</c>

00:02:05.600 --> 00:02:05.610 align:start position:0%
probably only makes sense on a gest
 

00:02:05.610 --> 00:02:08.320 align:start position:0%
probably only makes sense on a gest
target<00:02:05.939><c> and</c><00:02:06.119><c> that's</c><00:02:06.329><c> that's</c><00:02:06.770><c> how</c><00:02:07.770><c> it</c><00:02:07.890><c> is</c><00:02:08.039><c> now</c>

00:02:08.320 --> 00:02:08.330 align:start position:0%
target and that's that's how it is now
 

00:02:08.330 --> 00:02:10.790 align:start position:0%
target and that's that's how it is now
fortunately<00:02:09.330><c> many</c><00:02:09.989><c> many</c><00:02:10.289><c> of</c><00:02:10.470><c> the</c><00:02:10.590><c> core</c>

00:02:10.790 --> 00:02:10.800 align:start position:0%
fortunately many many of the core
 

00:02:10.800 --> 00:02:12.410 align:start position:0%
fortunately many many of the core
libraries<00:02:11.220><c> and</c><00:02:11.400><c> functions</c><00:02:11.790><c> are</c><00:02:12.120><c> available</c>

00:02:12.410 --> 00:02:12.420 align:start position:0%
libraries and functions are available
 

00:02:12.420 --> 00:02:13.400 align:start position:0%
libraries and functions are available
across

00:02:13.400 --> 00:02:13.410 align:start position:0%
across
 

00:02:13.410 --> 00:02:15.590 align:start position:0%
across
all<00:02:13.500><c> the</c><00:02:13.770><c> compilation</c><00:02:14.040><c> targets</c><00:02:14.670><c> in</c><00:02:14.790><c> fact</c><00:02:15.390><c> you</c>

00:02:15.590 --> 00:02:15.600 align:start position:0%
all the compilation targets in fact you
 

00:02:15.600 --> 00:02:17.900 align:start position:0%
all the compilation targets in fact you
can<00:02:15.750><c> see</c><00:02:15.930><c> a</c><00:02:15.960><c> fourth</c><00:02:16.320><c> one</c><00:02:16.560><c> cutland</c><00:02:17.520><c> common</c>

00:02:17.900 --> 00:02:17.910 align:start position:0%
can see a fourth one cutland common
 

00:02:17.910 --> 00:02:19.610 align:start position:0%
can see a fourth one cutland common
which<00:02:18.330><c> means</c><00:02:18.570><c> this</c><00:02:18.870><c> is</c><00:02:18.930><c> a</c><00:02:19.050><c> pure</c><00:02:19.260><c> Kotlin</c>

00:02:19.610 --> 00:02:19.620 align:start position:0%
which means this is a pure Kotlin
 

00:02:19.620 --> 00:02:21.770 align:start position:0%
which means this is a pure Kotlin
library<00:02:19.920><c> that</c><00:02:20.070><c> can</c><00:02:20.190><c> run</c><00:02:20.480><c> independent</c><00:02:21.480><c> of</c><00:02:21.570><c> any</c>

00:02:21.770 --> 00:02:21.780 align:start position:0%
library that can run independent of any
 

00:02:21.780 --> 00:02:25.820 align:start position:0%
library that can run independent of any
platform<00:02:22.200><c> that's</c><00:02:22.610><c> targeting</c><00:02:24.230><c> and</c><00:02:25.230><c> in</c><00:02:25.380><c> fact</c><00:02:25.560><c> if</c>

00:02:25.820 --> 00:02:25.830 align:start position:0%
platform that's targeting and in fact if
 

00:02:25.830 --> 00:02:27.590 align:start position:0%
platform that's targeting and in fact if
you<00:02:25.860><c> add</c><00:02:26.130><c> a</c><00:02:26.160><c> multi-platform</c><00:02:26.940><c> plug-in</c><00:02:27.420><c> to</c><00:02:27.510><c> your</c>

00:02:27.590 --> 00:02:27.600 align:start position:0%
you add a multi-platform plug-in to your
 

00:02:27.600 --> 00:02:29.840 align:start position:0%
you add a multi-platform plug-in to your
project<00:02:28.110><c> along</c><00:02:28.770><c> with</c><00:02:28.920><c> the</c><00:02:29.040><c> platform</c><00:02:29.220><c> specific</c>

00:02:29.840 --> 00:02:29.850 align:start position:0%
project along with the platform specific
 

00:02:29.850 --> 00:02:32.210 align:start position:0%
project along with the platform specific
source<00:02:30.090><c> set</c><00:02:30.330><c> you</c><00:02:30.660><c> also</c><00:02:30.840><c> get</c><00:02:31.260><c> a</c><00:02:31.440><c> common</c><00:02:31.890><c> source</c>

00:02:32.210 --> 00:02:32.220 align:start position:0%
source set you also get a common source
 

00:02:32.220 --> 00:02:33.770 align:start position:0%
source set you also get a common source
set<00:02:32.460><c> where</c><00:02:32.640><c> you</c><00:02:32.730><c> can</c><00:02:32.880><c> put</c><00:02:33.090><c> platform</c>

00:02:33.770 --> 00:02:33.780 align:start position:0%
set where you can put platform
 

00:02:33.780 --> 00:02:35.810 align:start position:0%
set where you can put platform
independent<00:02:34.320><c> code</c><00:02:34.500><c> now</c><00:02:35.370><c> the</c><00:02:35.430><c> thing</c><00:02:35.790><c> about</c>

00:02:35.810 --> 00:02:35.820 align:start position:0%
independent code now the thing about
 

00:02:35.820 --> 00:02:37.970 align:start position:0%
independent code now the thing about
platform<00:02:36.450><c> independent</c><00:02:36.900><c> code</c><00:02:37.080><c> is</c><00:02:37.230><c> it</c><00:02:37.470><c> cannot</c>

00:02:37.970 --> 00:02:37.980 align:start position:0%
platform independent code is it cannot
 

00:02:37.980 --> 00:02:40.520 align:start position:0%
platform independent code is it cannot
call<00:02:38.220><c> any</c><00:02:38.490><c> of</c><00:02:38.790><c> the</c><00:02:38.940><c> platform</c><00:02:39.360><c> api's</c><00:02:39.690><c> it</c><00:02:40.230><c> cannot</c>

00:02:40.520 --> 00:02:40.530 align:start position:0%
call any of the platform api's it cannot
 

00:02:40.530 --> 00:02:42.590 align:start position:0%
call any of the platform api's it cannot
call<00:02:40.800><c> any</c><00:02:41.040><c> of</c><00:02:41.100><c> the</c><00:02:41.220><c> J's</c><00:02:41.520><c> specific</c><00:02:42.120><c> or</c><00:02:42.240><c> Android</c>

00:02:42.590 --> 00:02:42.600 align:start position:0%
call any of the J's specific or Android
 

00:02:42.600 --> 00:02:45.770 align:start position:0%
call any of the J's specific or Android
specific<00:02:43.110><c> ap</c><00:02:43.800><c> is</c><00:02:43.920><c> the</c><00:02:44.220><c> other</c><00:02:45.000><c> way</c><00:02:45.210><c> of</c><00:02:45.480><c> course</c>

00:02:45.770 --> 00:02:45.780 align:start position:0%
specific ap is the other way of course
 

00:02:45.780 --> 00:02:47.060 align:start position:0%
specific ap is the other way of course
works<00:02:46.020><c> you</c><00:02:46.230><c> can</c><00:02:46.350><c> have</c><00:02:46.500><c> your</c><00:02:46.650><c> platform</c>

00:02:47.060 --> 00:02:47.070 align:start position:0%
works you can have your platform
 

00:02:47.070 --> 00:02:48.860 align:start position:0%
works you can have your platform
specific<00:02:47.520><c> code</c><00:02:47.730><c> from</c><00:02:47.940><c> any</c><00:02:48.150><c> of</c><00:02:48.330><c> the</c><00:02:48.480><c> flavors</c>

00:02:48.860 --> 00:02:48.870 align:start position:0%
specific code from any of the flavors
 

00:02:48.870 --> 00:02:51.710 align:start position:0%
specific code from any of the flavors
depend<00:02:49.620><c> on</c><00:02:49.800><c> a</c><00:02:49.860><c> shared</c><00:02:50.310><c> common</c><00:02:50.850><c> library</c><00:02:51.570><c> or</c>

00:02:51.710 --> 00:02:51.720 align:start position:0%
depend on a shared common library or
 

00:02:51.720 --> 00:02:55.160 align:start position:0%
depend on a shared common library or
source<00:02:52.260><c> set</c><00:02:52.970><c> so</c><00:02:53.970><c> knowing</c><00:02:54.270><c> all</c><00:02:54.360><c> that</c><00:02:54.600><c> I</c><00:02:54.780><c> set</c><00:02:55.050><c> out</c>

00:02:55.160 --> 00:02:55.170 align:start position:0%
source set so knowing all that I set out
 

00:02:55.170 --> 00:02:56.870 align:start position:0%
source set so knowing all that I set out
to<00:02:55.350><c> write</c><00:02:55.500><c> an</c><00:02:55.680><c> example</c><00:02:55.980><c> app</c><00:02:56.250><c> just</c><00:02:56.640><c> to</c><00:02:56.790><c> learn</c>

00:02:56.870 --> 00:02:56.880 align:start position:0%
to write an example app just to learn
 

00:02:56.880 --> 00:02:58.790 align:start position:0%
to write an example app just to learn
about<00:02:56.940><c> called</c><00:02:57.570><c> a</c><00:02:57.660><c> multi</c><00:02:57.870><c> platform</c><00:02:58.080><c> and</c><00:02:58.590><c> I</c>

00:02:58.790 --> 00:02:58.800 align:start position:0%
about called a multi platform and I
 

00:02:58.800 --> 00:03:01.640 align:start position:0%
about called a multi platform and I
decided<00:02:59.130><c> to</c><00:02:59.220><c> make</c><00:02:59.490><c> a</c><00:02:59.520><c> small</c><00:02:59.760><c> Sudoku</c><00:03:00.330><c> game</c><00:03:00.650><c> now</c>

00:03:01.640 --> 00:03:01.650 align:start position:0%
decided to make a small Sudoku game now
 

00:03:01.650 --> 00:03:03.080 align:start position:0%
decided to make a small Sudoku game now
one<00:03:01.950><c> thing</c><00:03:02.100><c> I</c><00:03:02.190><c> have</c><00:03:02.310><c> to</c><00:03:02.340><c> say</c><00:03:02.550><c> about</c><00:03:02.670><c> Kotlin</c>

00:03:03.080 --> 00:03:03.090 align:start position:0%
one thing I have to say about Kotlin
 

00:03:03.090 --> 00:03:05.240 align:start position:0%
one thing I have to say about Kotlin
multi<00:03:03.300><c> platform</c><00:03:03.510><c> is</c><00:03:03.990><c> it's</c><00:03:04.410><c> not</c><00:03:04.710><c> a</c><00:03:04.740><c> toolkit</c>

00:03:05.240 --> 00:03:05.250 align:start position:0%
multi platform is it's not a toolkit
 

00:03:05.250 --> 00:03:07.250 align:start position:0%
multi platform is it's not a toolkit
that<00:03:05.460><c> lets</c><00:03:05.670><c> you</c><00:03:05.820><c> write</c><00:03:06.030><c> an</c><00:03:06.240><c> app</c><00:03:06.390><c> once</c><00:03:06.720><c> and</c><00:03:06.990><c> run</c>

00:03:07.250 --> 00:03:07.260 align:start position:0%
that lets you write an app once and run
 

00:03:07.260 --> 00:03:09.290 align:start position:0%
that lets you write an app once and run
it<00:03:07.380><c> everywhere</c><00:03:07.830><c> I</c><00:03:08.010><c> still</c><00:03:08.580><c> need</c><00:03:08.700><c> to</c><00:03:08.820><c> create</c><00:03:09.090><c> an</c>

00:03:09.290 --> 00:03:09.300 align:start position:0%
it everywhere I still need to create an
 

00:03:09.300 --> 00:03:11.630 align:start position:0%
it everywhere I still need to create an
Android<00:03:09.720><c> app</c><00:03:09.900><c> with</c><00:03:10.470><c> Android</c><00:03:10.980><c> specific</c><00:03:11.400><c> code</c>

00:03:11.630 --> 00:03:11.640 align:start position:0%
Android app with Android specific code
 

00:03:11.640 --> 00:03:13.730 align:start position:0%
Android app with Android specific code
just<00:03:11.910><c> like</c><00:03:12.000><c> I</c><00:03:12.180><c> normally</c><00:03:12.240><c> would</c><00:03:12.600><c> and</c><00:03:12.900><c> then</c><00:03:12.960><c> a</c>

00:03:13.730 --> 00:03:13.740 align:start position:0%
just like I normally would and then a
 

00:03:13.740 --> 00:03:15.890 align:start position:0%
just like I normally would and then a
web<00:03:14.010><c> page</c><00:03:14.190><c> with</c><00:03:14.820><c> some</c><00:03:15.000><c> JavaScript</c><00:03:15.450><c> code</c><00:03:15.540><c> just</c>

00:03:15.890 --> 00:03:15.900 align:start position:0%
web page with some JavaScript code just
 

00:03:15.900 --> 00:03:17.780 align:start position:0%
web page with some JavaScript code just
like<00:03:16.020><c> initialize</c><00:03:16.680><c> things</c><00:03:17.010><c> like</c><00:03:17.190><c> entry</c><00:03:17.520><c> points</c>

00:03:17.780 --> 00:03:17.790 align:start position:0%
like initialize things like entry points
 

00:03:17.790 --> 00:03:20.270 align:start position:0%
like initialize things like entry points
to<00:03:17.910><c> my</c><00:03:18.030><c> app</c><00:03:18.180><c> lifecycle</c><00:03:18.450><c> UI</c><00:03:19.050><c> and</c><00:03:19.290><c> so</c><00:03:19.440><c> on</c><00:03:19.590><c> but</c>

00:03:20.270 --> 00:03:20.280 align:start position:0%
to my app lifecycle UI and so on but
 

00:03:20.280 --> 00:03:22.400 align:start position:0%
to my app lifecycle UI and so on but
then<00:03:20.520><c> what</c><00:03:20.760><c> I</c><00:03:20.790><c> do</c><00:03:20.880><c> is</c><00:03:21.000><c> all</c><00:03:21.510><c> my</c><00:03:21.870><c> shared</c><00:03:22.170><c> business</c>

00:03:22.400 --> 00:03:22.410 align:start position:0%
then what I do is all my shared business
 

00:03:22.410 --> 00:03:24.590 align:start position:0%
then what I do is all my shared business
logic<00:03:22.770><c> so</c><00:03:23.160><c> in</c><00:03:23.340><c> my</c><00:03:23.490><c> case</c><00:03:23.730><c> it's</c><00:03:24.030><c> the</c><00:03:24.120><c> pseudocode</c>

00:03:24.590 --> 00:03:24.600 align:start position:0%
logic so in my case it's the pseudocode
 

00:03:24.600 --> 00:03:26.450 align:start position:0%
logic so in my case it's the pseudocode
engine<00:03:25.050><c> that</c><00:03:25.230><c> solves</c><00:03:25.800><c> and</c><00:03:25.950><c> generates</c><00:03:26.310><c> two</c>

00:03:26.450 --> 00:03:26.460 align:start position:0%
engine that solves and generates two
 

00:03:26.460 --> 00:03:29.210 align:start position:0%
engine that solves and generates two
Doku<00:03:26.700><c> boards</c><00:03:26.940><c> for</c><00:03:27.120><c> me</c><00:03:27.240><c> I</c><00:03:27.390><c> take</c><00:03:28.260><c> it</c><00:03:28.440><c> out</c><00:03:28.560><c> and</c><00:03:28.740><c> put</c>

00:03:29.210 --> 00:03:29.220 align:start position:0%
Doku boards for me I take it out and put
 

00:03:29.220 --> 00:03:31.400 align:start position:0%
Doku boards for me I take it out and put
it<00:03:29.340><c> in</c><00:03:29.430><c> a</c><00:03:29.520><c> shared</c><00:03:29.850><c> library</c><00:03:30.300><c> using</c><00:03:30.840><c> caudill</c><00:03:31.350><c> in</c>

00:03:31.400 --> 00:03:31.410 align:start position:0%
it in a shared library using caudill in
 

00:03:31.410 --> 00:03:34.880 align:start position:0%
it in a shared library using caudill in
common<00:03:31.740><c> and</c><00:03:31.920><c> in</c><00:03:32.910><c> fact</c><00:03:33.060><c> the</c><00:03:33.900><c> only</c><00:03:34.140><c> source</c><00:03:34.620><c> set</c><00:03:34.860><c> I</c>

00:03:34.880 --> 00:03:34.890 align:start position:0%
common and in fact the only source set I
 

00:03:34.890 --> 00:03:37.610 align:start position:0%
common and in fact the only source set I
have<00:03:35.130><c> in</c><00:03:35.280><c> this</c><00:03:35.430><c> library</c><00:03:35.910><c> is</c><00:03:36.360><c> common</c><00:03:37.080><c> main</c><00:03:37.290><c> so</c><00:03:37.590><c> I</c>

00:03:37.610 --> 00:03:37.620 align:start position:0%
have in this library is common main so I
 

00:03:37.620 --> 00:03:39.710 align:start position:0%
have in this library is common main so I
put<00:03:37.890><c> all</c><00:03:38.040><c> my</c><00:03:38.070><c> code</c><00:03:38.400><c> there</c><00:03:38.670><c> and</c><00:03:38.790><c> that</c><00:03:39.540><c> means</c>

00:03:39.710 --> 00:03:39.720 align:start position:0%
put all my code there and that means
 

00:03:39.720 --> 00:03:41.330 align:start position:0%
put all my code there and that means
it's<00:03:39.900><c> available</c><00:03:40.140><c> across</c><00:03:40.680><c> all</c><00:03:41.010><c> the</c><00:03:41.220><c> platforms</c>

00:03:41.330 --> 00:03:41.340 align:start position:0%
it's available across all the platforms
 

00:03:41.340 --> 00:03:44.480 align:start position:0%
it's available across all the platforms
that<00:03:41.760><c> I</c><00:03:41.910><c> choose</c><00:03:42.150><c> to</c><00:03:42.240><c> target</c><00:03:43.100><c> ok</c><00:03:44.100><c> but</c><00:03:44.250><c> then</c><00:03:44.400><c> I</c>

00:03:44.480 --> 00:03:44.490 align:start position:0%
that I choose to target ok but then I
 

00:03:44.490 --> 00:03:47.150 align:start position:0%
that I choose to target ok but then I
thought<00:03:44.730><c> ok</c><00:03:45.390><c> I</c><00:03:45.420><c> have</c><00:03:45.630><c> this</c><00:03:45.780><c> core</c><00:03:46.290><c> engine</c><00:03:46.890><c> for</c>

00:03:47.150 --> 00:03:47.160 align:start position:0%
thought ok I have this core engine for
 

00:03:47.160 --> 00:03:49.100 align:start position:0%
thought ok I have this core engine for
solving<00:03:47.550><c> my</c><00:03:47.640><c> Sudoku</c><00:03:48.000><c> code</c><00:03:48.180><c> but</c><00:03:48.720><c> I</c><00:03:48.750><c> would</c><00:03:48.930><c> also</c>

00:03:49.100 --> 00:03:49.110 align:start position:0%
solving my Sudoku code but I would also
 

00:03:49.110 --> 00:03:51.100 align:start position:0%
solving my Sudoku code but I would also
like<00:03:49.410><c> to</c><00:03:49.470><c> draw</c><00:03:49.830><c> the</c><00:03:49.890><c> board</c><00:03:50.190><c> on</c><00:03:50.310><c> the</c><00:03:50.400><c> screen</c><00:03:50.640><c> and</c>

00:03:51.100 --> 00:03:51.110 align:start position:0%
like to draw the board on the screen and
 

00:03:51.110 --> 00:03:54.110 align:start position:0%
like to draw the board on the screen and
why<00:03:52.110><c> code</c><00:03:52.590><c> it</c><00:03:52.740><c> for</c><00:03:53.010><c> each</c><00:03:53.160><c> platform</c><00:03:53.430><c> separately</c>

00:03:54.110 --> 00:03:54.120 align:start position:0%
why code it for each platform separately
 

00:03:54.120 --> 00:03:56.720 align:start position:0%
why code it for each platform separately
if<00:03:54.300><c> it</c><00:03:54.870><c> should</c><00:03:55.410><c> look</c><00:03:55.560><c> the</c><00:03:55.709><c> same</c><00:03:55.890><c> on</c><00:03:56.340><c> each</c><00:03:56.430><c> of</c>

00:03:56.720 --> 00:03:56.730 align:start position:0%
if it should look the same on each of
 

00:03:56.730 --> 00:03:58.670 align:start position:0%
if it should look the same on each of
them<00:03:56.940><c> so</c><00:03:57.480><c> I</c><00:03:57.510><c> thought</c><00:03:57.720><c> wouldn't</c><00:03:58.080><c> it</c><00:03:58.140><c> be</c><00:03:58.200><c> nice</c><00:03:58.440><c> if</c>

00:03:58.670 --> 00:03:58.680 align:start position:0%
them so I thought wouldn't it be nice if
 

00:03:58.680 --> 00:04:00.860 align:start position:0%
them so I thought wouldn't it be nice if
I<00:03:58.890><c> had</c><00:03:58.920><c> an</c><00:03:59.250><c> API</c><00:03:59.610><c> for</c><00:03:59.730><c> drawing</c><00:04:00.330><c> on</c><00:04:00.540><c> the</c><00:04:00.630><c> screen</c>

00:04:00.860 --> 00:04:00.870 align:start position:0%
I had an API for drawing on the screen
 

00:04:00.870 --> 00:04:02.480 align:start position:0%
I had an API for drawing on the screen
that's<00:04:01.110><c> completely</c><00:04:01.470><c> platform</c><00:04:01.950><c> independent</c>

00:04:02.480 --> 00:04:02.490 align:start position:0%
that's completely platform independent
 

00:04:02.490 --> 00:04:04.600 align:start position:0%
that's completely platform independent
something<00:04:03.120><c> I</c><00:04:03.180><c> can</c><00:04:03.330><c> multi</c><00:04:03.600><c> platform</c><00:04:03.810><c> canvas</c>

00:04:04.600 --> 00:04:04.610 align:start position:0%
something I can multi platform canvas
 

00:04:04.610 --> 00:04:07.400 align:start position:0%
something I can multi platform canvas
but<00:04:05.610><c> then</c><00:04:05.790><c> what</c><00:04:05.970><c> I</c><00:04:06.000><c> want</c><00:04:06.150><c> to</c><00:04:06.300><c> do</c><00:04:06.420><c> is</c><00:04:06.630><c> I</c><00:04:06.990><c> want</c><00:04:07.320><c> to</c>

00:04:07.400 --> 00:04:07.410 align:start position:0%
but then what I want to do is I want to
 

00:04:07.410 --> 00:04:10.280 align:start position:0%
but then what I want to do is I want to
actually<00:04:07.590><c> have</c><00:04:08.400><c> it</c><00:04:09.180><c> delegate</c><00:04:09.660><c> to</c><00:04:09.870><c> each</c><00:04:10.020><c> of</c><00:04:10.200><c> the</c>

00:04:10.280 --> 00:04:10.290 align:start position:0%
actually have it delegate to each of the
 

00:04:10.290 --> 00:04:12.170 align:start position:0%
actually have it delegate to each of the
platform<00:04:10.650><c> simple</c><00:04:10.980><c> implementations</c><00:04:11.730><c> so</c><00:04:12.150><c> I</c>

00:04:12.170 --> 00:04:12.180 align:start position:0%
platform simple implementations so I
 

00:04:12.180 --> 00:04:13.850 align:start position:0%
platform simple implementations so I
want<00:04:12.570><c> to</c><00:04:12.690><c> use</c><00:04:12.810><c> the</c><00:04:12.930><c> Android</c><00:04:13.110><c> canvas</c><00:04:13.620><c> to</c><00:04:13.740><c> draw</c>

00:04:13.850 --> 00:04:13.860 align:start position:0%
want to use the Android canvas to draw
 

00:04:13.860 --> 00:04:16.580 align:start position:0%
want to use the Android canvas to draw
an<00:04:14.010><c> Android</c><00:04:14.310><c> while</c><00:04:14.880><c> I</c><00:04:15.270><c> use</c><00:04:15.660><c> the</c><00:04:15.690><c> HTML</c><00:04:16.380><c> canvas</c>

00:04:16.580 --> 00:04:16.590 align:start position:0%
an Android while I use the HTML canvas
 

00:04:16.590 --> 00:04:19.520 align:start position:0%
an Android while I use the HTML canvas
to<00:04:16.980><c> draw</c><00:04:17.100><c> on</c><00:04:17.280><c> a</c><00:04:17.310><c> website</c><00:04:17.810><c> the</c><00:04:18.810><c> thing</c><00:04:18.989><c> is</c><00:04:19.140><c> I</c><00:04:19.290><c> just</c>

00:04:19.520 --> 00:04:19.530 align:start position:0%
to draw on a website the thing is I just
 

00:04:19.530 --> 00:04:21.950 align:start position:0%
to draw on a website the thing is I just
told<00:04:19.739><c> you</c><00:04:19.890><c> that</c><00:04:19.920><c> Kotlin</c><00:04:20.880><c> common</c><00:04:21.270><c> code</c><00:04:21.510><c> cannot</c>

00:04:21.950 --> 00:04:21.960 align:start position:0%
told you that Kotlin common code cannot
 

00:04:21.960 --> 00:04:24.440 align:start position:0%
told you that Kotlin common code cannot
call<00:04:22.260><c> any</c><00:04:22.500><c> platform</c><00:04:23.010><c> interfaces</c><00:04:23.640><c> so</c><00:04:24.390><c> I</c>

00:04:24.440 --> 00:04:24.450 align:start position:0%
call any platform interfaces so I
 

00:04:24.450 --> 00:04:26.210 align:start position:0%
call any platform interfaces so I
currently<00:04:24.720><c> depend</c><00:04:25.320><c> on</c><00:04:25.470><c> these</c><00:04:25.560><c> and</c><00:04:25.860><c> export</c>

00:04:26.210 --> 00:04:26.220 align:start position:0%
currently depend on these and export
 

00:04:26.220 --> 00:04:26.930 align:start position:0%
currently depend on these and export
them<00:04:26.340><c> from</c><00:04:26.550><c> from</c><00:04:26.760><c> this</c>

00:04:26.930 --> 00:04:26.940 align:start position:0%
them from from this
 

00:04:26.940 --> 00:04:29.090 align:start position:0%
them from from this
module<00:04:27.240><c> so</c><00:04:27.780><c> how</c><00:04:27.960><c> does</c><00:04:28.110><c> it</c><00:04:28.230><c> does</c><00:04:28.710><c> it</c><00:04:28.830><c> work</c><00:04:28.950><c> in</c>

00:04:29.090 --> 00:04:29.100 align:start position:0%
module so how does it does it work in
 

00:04:29.100 --> 00:04:31.820 align:start position:0%
module so how does it does it work in
Kotlin<00:04:29.490><c> well</c><00:04:30.300><c> there's</c><00:04:30.540><c> this</c><00:04:30.690><c> this</c><00:04:31.020><c> expect</c><00:04:31.650><c> an</c>

00:04:31.820 --> 00:04:31.830 align:start position:0%
Kotlin well there's this this expect an
 

00:04:31.830 --> 00:04:34.370 align:start position:0%
Kotlin well there's this this expect an
actual<00:04:32.280><c> mechanism</c><00:04:32.820><c> lets</c><00:04:33.390><c> you</c><00:04:33.600><c> declare</c>

00:04:34.370 --> 00:04:34.380 align:start position:0%
actual mechanism lets you declare
 

00:04:34.380 --> 00:04:36.740 align:start position:0%
actual mechanism lets you declare
expected<00:04:35.370><c> classes</c><00:04:35.820><c> in</c><00:04:35.970><c> your</c><00:04:36.150><c> common</c><00:04:36.510><c> code</c>

00:04:36.740 --> 00:04:36.750 align:start position:0%
expected classes in your common code
 

00:04:36.750 --> 00:04:38.690 align:start position:0%
expected classes in your common code
which<00:04:37.350><c> is</c><00:04:37.470><c> something</c><00:04:37.710><c> like</c><00:04:37.950><c> almost</c><00:04:38.340><c> like</c>

00:04:38.690 --> 00:04:38.700 align:start position:0%
which is something like almost like
 

00:04:38.700 --> 00:04:41.390 align:start position:0%
which is something like almost like
defining<00:04:39.150><c> an</c><00:04:39.240><c> interface</c><00:04:39.660><c> in</c><00:04:39.810><c> Java</c><00:04:39.840><c> and</c><00:04:40.410><c> then</c>

00:04:41.390 --> 00:04:41.400 align:start position:0%
defining an interface in Java and then
 

00:04:41.400 --> 00:04:44.360 align:start position:0%
defining an interface in Java and then
in<00:04:41.760><c> each</c><00:04:42.030><c> of</c><00:04:42.180><c> my</c><00:04:42.330><c> platform</c><00:04:42.600><c> specific</c><00:04:43.370><c> source</c>

00:04:44.360 --> 00:04:44.370 align:start position:0%
in each of my platform specific source
 

00:04:44.370 --> 00:04:46.520 align:start position:0%
in each of my platform specific source
set<00:04:44.580><c> I</c><00:04:44.820><c> provide</c><00:04:45.600><c> the</c><00:04:45.810><c> actual</c><00:04:45.990><c> implementation</c>

00:04:46.520 --> 00:04:46.530 align:start position:0%
set I provide the actual implementation
 

00:04:46.530 --> 00:04:49.580 align:start position:0%
set I provide the actual implementation
that<00:04:47.460><c> can</c><00:04:47.700><c> depend</c><00:04:48.180><c> and</c><00:04:48.600><c> use</c><00:04:48.810><c> platform</c><00:04:49.350><c> API</c>

00:04:49.580 --> 00:04:49.590 align:start position:0%
that can depend and use platform API
 

00:04:49.590 --> 00:04:53.150 align:start position:0%
that can depend and use platform API
such<00:04:49.710><c> as</c><00:04:50.190><c> the</c><00:04:50.670><c> Android</c><00:04:50.850><c> canvas</c><00:04:51.740><c> now</c><00:04:52.740><c> when</c><00:04:53.130><c> I</c>

00:04:53.150 --> 00:04:53.160 align:start position:0%
such as the Android canvas now when I
 

00:04:53.160 --> 00:04:55.040 align:start position:0%
such as the Android canvas now when I
add<00:04:53.370><c> that</c><00:04:53.550><c> dependency</c><00:04:54.090><c> from</c><00:04:54.420><c> my</c><00:04:54.570><c> common</c>

00:04:55.040 --> 00:04:55.050 align:start position:0%
add that dependency from my common
 

00:04:55.050 --> 00:04:57.560 align:start position:0%
add that dependency from my common
source<00:04:55.290><c> set</c><00:04:55.530><c> to</c><00:04:55.830><c> the</c><00:04:55.920><c> other</c><00:04:56.070><c> one</c><00:04:56.310><c> and</c><00:04:57.300><c> looks</c>

00:04:57.560 --> 00:04:57.570 align:start position:0%
source set to the other one and looks
 

00:04:57.570 --> 00:05:00.680 align:start position:0%
source set to the other one and looks
something<00:04:57.750><c> like</c><00:04:57.870><c> this</c><00:04:58.730><c> but</c><00:04:59.730><c> actually</c><00:05:00.180><c> when</c>

00:05:00.680 --> 00:05:00.690 align:start position:0%
something like this but actually when
 

00:05:00.690 --> 00:05:02.600 align:start position:0%
something like this but actually when
compiling<00:05:01.140><c> for</c><00:05:01.440><c> a</c><00:05:01.470><c> specific</c><00:05:01.680><c> platform</c><00:05:02.340><c> such</c>

00:05:02.600 --> 00:05:02.610 align:start position:0%
compiling for a specific platform such
 

00:05:02.610 --> 00:05:05.360 align:start position:0%
compiling for a specific platform such
as<00:05:02.640><c> Jas</c><00:05:03.080><c> this</c><00:05:04.080><c> depends</c><00:05:04.440><c> on</c><00:05:04.500><c> dependency</c><00:05:05.190><c> will</c>

00:05:05.360 --> 00:05:05.370 align:start position:0%
as Jas this depends on dependency will
 

00:05:05.370 --> 00:05:08.710 align:start position:0%
as Jas this depends on dependency will
actually<00:05:05.820><c> use</c><00:05:06.030><c> the</c><00:05:06.420><c> correct</c><00:05:06.780><c> html5</c><00:05:07.560><c> canvas</c>

00:05:08.710 --> 00:05:08.720 align:start position:0%
actually use the correct html5 canvas
 

00:05:08.720 --> 00:05:10.270 align:start position:0%
actually use the correct html5 canvas
[Laughter]

00:05:10.270 --> 00:05:10.280 align:start position:0%
[Laughter]
 

00:05:10.280 --> 00:05:12.620 align:start position:0%
[Laughter]
okay<00:05:11.280><c> if</c><00:05:11.490><c> I</c><00:05:11.730><c> could</c><00:05:11.910><c> just</c><00:05:12.060><c> show</c><00:05:12.240><c> the</c><00:05:12.360><c> link</c><00:05:12.540><c> to</c>

00:05:12.620 --> 00:05:12.630 align:start position:0%
okay if I could just show the link to
 

00:05:12.630 --> 00:05:15.440 align:start position:0%
okay if I could just show the link to
the<00:05:12.720><c> project</c><00:05:13.140><c> so</c><00:05:13.290><c> that</c><00:05:13.320><c> everyone</c><00:05:13.800><c> can</c><00:05:14.330><c> look</c><00:05:15.330><c> at</c>

00:05:15.440 --> 00:05:15.450 align:start position:0%
the project so that everyone can look at
 

00:05:15.450 --> 00:05:16.460 align:start position:0%
the project so that everyone can look at
it<00:05:15.600><c> that</c><00:05:15.780><c> would</c><00:05:16.110><c> be</c><00:05:16.170><c> great</c>

00:05:16.460 --> 00:05:16.470 align:start position:0%
it that would be great
 

00:05:16.470 --> 00:05:27.250 align:start position:0%
it that would be great
[Laughter]

00:05:27.250 --> 00:05:27.260 align:start position:0%
 
 

00:05:27.260 --> 00:05:35.620 align:start position:0%
 
[Music]

00:05:35.620 --> 00:05:35.630 align:start position:0%
 
 

00:05:35.630 --> 00:05:42.069 align:start position:0%
 
[Music]

