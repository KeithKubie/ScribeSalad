WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Our first guest is Peter Winkler who is a world expert in discrete mathematics and combinatorics

00:00:05.000 --> 00:00:09.000
and a mathematics and computer science professor at Dartmouth College.

00:00:09.000 --> 00:00:12.000
His work has had substantial impact on the design of algorithms

00:00:12.000 --> 00:00:15.000
and theoretical computer science.

00:00:15.000 --> 00:00:17.000
He is also a celebrated collector of mathematical puzzles,

00:00:17.000 --> 00:00:21.000
having written two books on the subject as well as a monthly column

00:00:21.000 --> 00:00:23.000
for the communications of the ACM.

00:00:23.000 --> 00:00:27.000
Now, since I've started off every unit with a mathematical magic trick,

00:00:27.000 --> 00:00:29.000
I thought Peter would be an excellent person to beguile us

00:00:29.000 --> 00:00:32.000
with a few fascinating tricks of his own.

00:00:32.000 --> 00:00:36.000
[Peter Winkler, Professor, Dartmouth College] I have a puzzle from my book about a spy

00:00:36.000 --> 00:00:42.000
who is trying to convey information to her control,

00:00:42.000 --> 00:00:49.000
but the only means she has for conveying information

00:00:49.000 --> 00:00:55.000
is that there is a 15-bit radio broadcast every morning,

00:00:55.000 --> 00:01:02.000
and she has the ability if she wishes to alter 1 bit of that broadcast.

00:01:02.000 --> 00:01:07.000
But she doesn't know in advance what the broadcast will be.

00:01:07.000 --> 00:01:11.000
So, this is a case where, potentially, there are 16 different things she can do.

00:01:11.000 --> 00:01:17.000
There are 15 bits she can alter, or she can choose not to alter any bit,

00:01:17.000 --> 00:01:22.000
which means that in theory perhaps she could convey as many as 4 bits

00:01:22.000 --> 00:01:25.000
of information this way.

00:01:25.000 --> 00:01:29.000
Well, surprisingly, she can actually do that.

00:01:29.000 --> 00:01:31.000
All right. Let's make sure that we understand the setup here.

00:01:31.000 --> 00:01:33.000
I'm going to do this as a magic trick.

00:01:33.000 --> 00:01:40.000
So, I'm a spy, and I'm in enemy territory, and I've got a message--0110--

00:01:40.000 --> 00:01:43.000
that I need to transmit to my boss.

00:01:43.000 --> 00:01:45.000
Now, that's going to be tricky to do, because I don't want anybody to know

00:01:45.000 --> 00:01:48.000
that I'm a spy in enemy territory.

00:01:48.000 --> 00:01:52.000
Fortunately, there is a radio broadcast tower in enemy territory,

00:01:52.000 --> 00:01:56.000
and everyday it sends out a 15-bit message.

00:01:56.000 --> 00:01:58.000
There's an example of a 15-bit message.

00:01:58.000 --> 00:02:01.000
Now, I can use that message to communicate with my boss,

00:02:01.000 --> 00:02:07.000
but I can't just change it arbitrarily to something completely different,

00:02:07.000 --> 00:02:09.000
because then people will know that something weird has happened.

00:02:09.000 --> 00:02:11.000
But I can flip just 1 bit.

00:02:11.000 --> 00:02:15.000
I can zap the message and change just one of the bits,

00:02:15.000 --> 00:02:19.000
and my boss then is going to hear that,

00:02:19.000 --> 00:02:24.000
and we'd like him to actually interpret that as the message that I want to send.

00:02:24.000 --> 00:02:26.000
Let's see if it worked.

00:02:26.000 --> 00:02:29.000
Hmm...based on the 15-bit broadcast I'm hearing,

00:02:29.000 --> 00:02:32.000
and the protocol that my spy and I arranged in advance,

00:02:32.000 --> 00:02:38.000
I know that the message he is sending to me is 0110. Nice work, agent P.

00:02:38.000 --> 00:02:41.000
Ta-da!

00:02:41.000 --> 00:02:47.000
Here's what you can do, and the solution involves nimbers,

00:02:47.000 --> 00:02:50.000
which come up in other problems as well.

00:02:50.000 --> 00:02:54.000
A nimber is just a binary number.

00:02:54.000 --> 00:03:00.000
What makes it different from an ordinary number is that when you add two of them,

00:03:00.000 --> 00:03:03.000
you add without carry.

00:03:03.000 --> 00:03:11.000
So, they're added like vectors in a vector space over zÂ˛.

00:03:11.000 --> 00:03:15.000
They were called nimbers by John Conway,

00:03:15.000 --> 00:03:20.000
because, as you may know, they are useful in analyzing a game of Nim.

00:03:20.000 --> 00:03:28.000
So, what we can do is we take these 15 bits

00:03:28.000 --> 00:03:33.000
and we number them from 1-15,

00:03:33.000 --> 00:03:36.000
but instead of thinking of those numbers as ordinary decimal numbers,

00:03:36.000 --> 00:03:39.000
we think of them as nimbers.

00:03:39.000 --> 00:03:49.000
Each position has a non-zero nimber starting with 001 for the first position

00:03:49.000 --> 00:03:54.000
and ending with 1111 for the fifteenth position.

00:03:54.000 --> 00:04:02.000
What the spy wants to do is to convey some nimber of her choice to her control.

00:04:02.000 --> 00:04:10.000
For example, suppose to wants to convey the nimber 1100 to her control.

00:04:10.000 --> 00:04:13.000
What she's going to do is she's going to simply tell her control,

00:04:13.000 --> 00:04:18.000
"Look at this radio broadcast after I've altered it,

00:04:18.000 --> 00:04:24.000
and add up the nimbers of all the positions of where you see a 1."

00:04:24.000 --> 00:04:31.000
Now, when the spy sees the radio broadcast,

00:04:31.000 --> 00:04:37.000
she looks at what the nimbers currently add up to.

00:04:37.000 --> 00:04:41.000
Say the nimbers currently add up to 1010.

00:04:41.000 --> 00:04:48.000
Then if she changed the 1010 bit, they would add up to 0000,

00:04:48.000 --> 00:04:52.000
so that's what she would do if she wanted to convey 0000.

00:04:52.000 --> 00:04:58.000
She wants to convey 1100 so she adds that to 1010.

00:04:58.000 --> 00:05:02.000
That gives her a nimber. She changes the value of the bit at that nimber.

00:05:02.000 --> 00:05:05.000
It works. Marvelous.

