WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:00.830
 

00:00:00.830 --> 00:00:03.340
Would you like to learn
more about Kiosk Apps?

00:00:03.340 --> 00:00:07.210
I'm Vidya, and I'll help you
explore what Kiosk Apps can do

00:00:07.210 --> 00:00:08.850
and how you can build them.

00:00:08.850 --> 00:00:11.210
Hang on tight, and
enjoy the ride.

00:00:11.210 --> 00:00:14.190
Unleash the power of
Kiosk Apps with me.

00:00:14.190 --> 00:00:16.810
First, let's see some
single-purpose devices

00:00:16.810 --> 00:00:17.850
in action.

00:00:17.850 --> 00:00:19.820
Although you might
not even realize it,

00:00:19.820 --> 00:00:22.030
these devices are
all around you.

00:00:22.030 --> 00:00:25.030
Here is a restaurant cafe
with an interactive display

00:00:25.030 --> 00:00:27.650
showing the menu and
specials for the day.

00:00:27.650 --> 00:00:30.030
A customer can walk
up to a display

00:00:30.030 --> 00:00:33.720
and scan the QR code for
a chance to win a meal.

00:00:33.720 --> 00:00:36.500
You might also find a
device at a doctor's office

00:00:36.500 --> 00:00:39.662
where patients check
in and wait their turn.

00:00:39.662 --> 00:00:44.110
Many grocery stores now support
self-serve point of sale kiosks

00:00:44.110 --> 00:00:47.770
where customers can scan
items and pay for them.

00:00:47.770 --> 00:00:51.410
Self-serve kiosks are also
appearing at movie theaters

00:00:51.410 --> 00:00:53.910
where guests can
purchase tickets.

00:00:53.910 --> 00:00:57.950
An innovative application is
an integrated library catalog,

00:00:57.950 --> 00:01:00.800
and they find our kiosk
showing the map of the library

00:01:00.800 --> 00:01:01.770
building.

00:01:01.770 --> 00:01:04.050
A guest can browse
the collection,

00:01:04.050 --> 00:01:06.020
determine if a
book is available,

00:01:06.020 --> 00:01:09.210
and locate the section
that contains the book.

00:01:09.210 --> 00:01:12.770
These devices are also used
in educational environments.

00:01:12.770 --> 00:01:15.430
Here is a fifth grade
class where students

00:01:15.430 --> 00:01:18.220
are taking online tests
in a locked-down, secured

00:01:18.220 --> 00:01:19.600
environment.

00:01:19.600 --> 00:01:22.450
All of the single-purpose
use cases you just saw

00:01:22.450 --> 00:01:26.020
could be powered by Kiosk
Apps running on Chromeboxes.

00:01:26.020 --> 00:01:29.650
The possibilities are
limitless-- gaming consoles,

00:01:29.650 --> 00:01:33.060
photobooths, displays in
public transportation,

00:01:33.060 --> 00:01:35.520
billboards, ATM machines.

00:01:35.520 --> 00:01:38.450
All of this can be
powered by Kiosk Apps.

00:01:38.450 --> 00:01:41.380
Did you know that the
displays and registration

00:01:41.380 --> 00:01:43.900
Kiosks at Google
I/O have also been

00:01:43.900 --> 00:01:47.330
powered by Kiosk
Apps on Chromeboxes?

00:01:47.330 --> 00:01:49.730
You may ask why
would a Chromebox

00:01:49.730 --> 00:01:52.000
be the best choice
to run a Kiosk.

00:01:52.000 --> 00:01:54.440
Well, there are many reasons.

00:01:54.440 --> 00:01:57.120
Chromeboxes are fast and secure.

00:01:57.120 --> 00:02:00.110
You no longer have to
worry about OS patches

00:02:00.110 --> 00:02:02.750
or install antivirus software.

00:02:02.750 --> 00:02:06.350
OS updates are taken care
of automatically for you.

00:02:06.350 --> 00:02:09.759
Further, the OS and the
Kiosk App running on it

00:02:09.759 --> 00:02:12.280
have independent update cycles.

00:02:12.280 --> 00:02:16.130
So as an app developer, you
only have to update your app

00:02:16.130 --> 00:02:18.870
and Chrome OS keeps
the rest fresh.

00:02:18.870 --> 00:02:20.820
And with the Chrome
management console,

00:02:20.820 --> 00:02:23.150
you can easily
deploy and remotely

00:02:23.150 --> 00:02:25.260
manage a fleet of
Chromeboxes that

00:02:25.260 --> 00:02:27.880
maybe distributed
around the world.

00:02:27.880 --> 00:02:33.210
A Kiosk App is just a Chrome app
with HTML, CSS, and JavaScript.

00:02:33.210 --> 00:02:36.760
You can build powerful apps
that interact with network

00:02:36.760 --> 00:02:40.630
and hybrid devices, media
tools, and much more.

00:02:40.630 --> 00:02:42.770
You can enhance
the user experience

00:02:42.770 --> 00:02:45.160
through touch, with
virtual keyboard support,

00:02:45.160 --> 00:02:48.340
and by listening for
mouth and touch events.

00:02:48.340 --> 00:02:51.950
For example, you can build
a point of sale Kiosk App

00:02:51.950 --> 00:02:56.390
that uses the Chrome USB API
to communicate with USB devices

00:02:56.390 --> 00:03:00.060
like barcode scanners, credit
card readers, and printers.

00:03:00.060 --> 00:03:02.210
You can also use
the Bluetooth API

00:03:02.210 --> 00:03:04.620
to talk to Bluetooth devices.

00:03:04.620 --> 00:03:07.620
However, there are
indeed some differences

00:03:07.620 --> 00:03:09.815
between Kiosk and
regular Chrome apps.

00:03:09.815 --> 00:03:12.660
Now, consider the display
at an airport terminal

00:03:12.660 --> 00:03:15.180
using an interactive Kiosk App.

00:03:15.180 --> 00:03:18.480
The app is set to auto-launch
when the Chromebox first boots

00:03:18.480 --> 00:03:20.860
up and always runs
in full screen,

00:03:20.860 --> 00:03:23.970
providing a dedicated
user experience.

00:03:23.970 --> 00:03:27.430
Here I check on the status of
the flight from Minneapolis

00:03:27.430 --> 00:03:30.660
on one of the displays and
click on "Southwest flight

00:03:30.660 --> 00:03:34.360
SWA3236" for more information.

00:03:34.360 --> 00:03:36.360
The app updates
the flight tracker

00:03:36.360 --> 00:03:39.010
with the route map
of that flight.

00:03:39.010 --> 00:03:41.590
I realize that the
flight has been delayed

00:03:41.590 --> 00:03:43.570
and want to get
something to eat.

00:03:43.570 --> 00:03:46.170
I can scan the QR
code on the display

00:03:46.170 --> 00:03:49.670
and grab the flight information
for me to look at on my phone

00:03:49.670 --> 00:03:51.350
while I'm in transit.

00:03:51.350 --> 00:03:53.570
I now click on "Dining"
which brings up

00:03:53.570 --> 00:03:55.890
a map with the nearest
places to eat along

00:03:55.890 --> 00:03:57.520
with restaurant ratings.

00:03:57.520 --> 00:03:59.540
I decide to go to
Fresh Roll Vietnamese

00:03:59.540 --> 00:04:02.620
as it's got the best
ratings and it's close by.

00:04:02.620 --> 00:04:04.650
Google Maps gives me
directions to help

00:04:04.650 --> 00:04:06.130
me get to the restaurant.

00:04:06.130 --> 00:04:09.990
As a bonus, I can also redeem
a coupon for a combo meal

00:04:09.990 --> 00:04:13.800
if I scan the QR code on
the display with my phone.

00:04:13.800 --> 00:04:16.980
I can also click on "Weather,"
get the five-day local weather

00:04:16.980 --> 00:04:20.160
forecast, and get some fast
facts about the airport.

00:04:20.160 --> 00:04:23.130
It's interesting that there
were 31,000 check-ins today.

00:04:23.130 --> 00:04:25.380
Lots of travel indeed.

00:04:25.380 --> 00:04:28.020
You might have noticed that,
when this app is running,

00:04:28.020 --> 00:04:31.280
the user cannot exit the app
or switch to another task.

00:04:31.280 --> 00:04:34.430
However, the app could
offer a logout button

00:04:34.430 --> 00:04:36.720
that allows the user
to close all windows

00:04:36.720 --> 00:04:39.310
and terminate the session.

00:04:39.310 --> 00:04:43.020
To convert a Chrome app into a
Kiosk App, all you need to do

00:04:43.020 --> 00:04:46.110
is add the attributes
Kiosk Enabled and Kiosk

00:04:46.110 --> 00:04:49.810
Only to the manifest.json file
to ensure that the app will

00:04:49.810 --> 00:04:53.900
only run in full-screen
using single-app Kiosk Mode.

00:04:53.900 --> 00:04:56.420
After writing a Kiosk
App, you can publish it

00:04:56.420 --> 00:04:57.830
to the Chrome Web Store.

00:04:57.830 --> 00:05:01.470
You can either monetize the app
or just use the app in-house.

00:05:01.470 --> 00:05:04.450
You can also test the app
in single-app Kiosk Mode

00:05:04.450 --> 00:05:07.220
by firing up a browser
and add the Kiosk App

00:05:07.220 --> 00:05:09.860
at the Chrome Extensions page.

00:05:09.860 --> 00:05:12.800
Installed Kiosk Apps will
now appear in the tree,

00:05:12.800 --> 00:05:14.760
under "Apps," in
the login screen.

00:05:14.760 --> 00:05:17.080
You can then manually
launch the app from the tree

00:05:17.080 --> 00:05:18.420
and test the app.

00:05:18.420 --> 00:05:21.940
As an app developer, you can
choose to download and cache

00:05:21.940 --> 00:05:24.970
any assets you need so that,
the next time your user

00:05:24.970 --> 00:05:27.690
launches the app, the
cached assets are available

00:05:27.690 --> 00:05:30.420
immediately, even when offline.

00:05:30.420 --> 00:05:32.230
The Chrome management
console can then

00:05:32.230 --> 00:05:35.860
be used to deploy an app
to a fleet of Chromeboxes.

00:05:35.860 --> 00:05:38.880
There is also an option
to automatically launch

00:05:38.880 --> 00:05:42.600
the app on the Chromebox when
the device first boots up.

00:05:42.600 --> 00:05:45.760
We're excited to see what
kind of apps you will build.

00:05:45.760 --> 00:05:48.920
You can take it for a spin today
by going to the links here.

00:05:48.920 --> 00:05:52.120
There are sample Kiosk Apps
that you can play with.

00:05:52.120 --> 00:05:55.580
Let us know what you think,
and thanks for watching.

00:05:55.580 --> 00:06:04.041
 

