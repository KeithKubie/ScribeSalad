WEBVTT
Kind: captions
Language: en

00:00:00.280 --> 00:00:06.110
So, why is it a big deal that we can get
HTTP responses with Netcat and printf?

00:00:06.110 --> 00:00:09.710
It's a big deal, because printf doesn't
know anything about the network.

00:00:09.710 --> 00:00:13.590
And Netcat doesn't know anything
about forming HTTP requests.

00:00:13.590 --> 00:00:18.330
All Netcat is doing is, connecting to
a port and sending a string over it.

00:00:18.330 --> 00:00:22.270
To the web server, that string happens
to look like an HTTP request and so,

00:00:22.270 --> 00:00:23.352
the server responds.

00:00:23.352 --> 00:00:27.788
Now, NetCat is a lower level
tool than something like Curl or

00:00:27.788 --> 00:00:29.800
web app a.p.i for that matter.

00:00:29.800 --> 00:00:35.370
What we've done here is to separate
out two different layers of activity.

00:00:35.370 --> 00:00:37.950
The text of the issue to p request and

00:00:37.950 --> 00:00:41.265
the connect to a port transmit some
data and get some results part.

00:00:41.265 --> 00:00:44.310
In everyday software, the http

00:00:44.310 --> 00:00:47.750
layer is implemented by programs
such as web browsers and servers.

00:00:47.750 --> 00:00:51.790
Whereas the lower layer, TCP is
implemented in the operating system.

00:00:51.790 --> 00:00:55.080
The NC command is a thin
wrapper over TCP.

00:00:55.080 --> 00:00:58.020
Now, there are several
different layer models for

00:00:58.020 --> 00:00:59.790
talking about network protocols.

00:00:59.790 --> 00:01:03.840
In this course, we'll be using
the IETF model, which looks like this.

00:01:03.840 --> 00:01:05.970
The top layer is the application layer.

00:01:05.970 --> 00:01:10.280
Protocol such as htp or
SSH are application protocols.

00:01:10.280 --> 00:01:12.400
Concepts we see at this
layer are things like,

00:01:12.400 --> 00:01:18.090
URL's, passwords, the head command,
server headers, web pages.

00:01:18.090 --> 00:01:20.260
Things that make sense to
specific applications,

00:01:20.260 --> 00:01:23.600
such as web browsers or SSH clans.

00:01:23.600 --> 00:01:26.830
Application protocols are based on
protocols with a transport layer,

00:01:26.830 --> 00:01:28.900
like TCP and UDP.

00:01:28.900 --> 00:01:31.670
These provide things like port numbers.

00:01:31.670 --> 00:01:34.600
Transport layer protocols
are based on the internet layer,

00:01:34.600 --> 00:01:38.570
which is basically the same as
the one single protocol IP.

00:01:38.570 --> 00:01:39.250
It's at this layer,

00:01:39.250 --> 00:01:43.230
that we start talking about things
like IP addresses and routes.

00:01:43.230 --> 00:01:47.950
And IP in turn, runs on top of different
kinds of hardware, like wi-fi or

00:01:47.950 --> 00:01:50.220
ethernet or DSL lines.

00:01:50.220 --> 00:01:51.170
Layers above this,

00:01:51.170 --> 00:01:55.040
don't need to worry about things like,
how strong is my wireless signal.

00:01:55.040 --> 00:01:57.410
Each of these layers depends
on the one below it and

00:01:57.410 --> 00:02:00.570
provides particular guarantees
to the layers above it.

00:02:00.570 --> 00:02:03.660
You can think of them as offering and
using api's,

00:02:03.660 --> 00:02:07.375
separating out specific concerns and
making it possible to reuse features.

00:02:07.375 --> 00:02:11.820
Like both http and
ssh have some of the same needs.

00:02:11.820 --> 00:02:15.180
They need the idea of making
a connection to a server and

00:02:15.180 --> 00:02:17.810
those needs are bundled
into the TCP layer.

00:02:17.810 --> 00:02:21.460
Now this layer model isn't perfect,
there are a bunch of network protocols

00:02:21.460 --> 00:02:24.320
that don't exactly fit
into any of these layers.

00:02:24.320 --> 00:02:26.490
But even with these
added to the picture,

00:02:26.490 --> 00:02:30.790
you can notice that all of these
things above depend on IP.

00:02:30.790 --> 00:02:33.710
An IP can depend on various
things underneath it.

00:02:33.710 --> 00:02:36.370
IP itself,
is the only thing on its layer.

00:02:36.370 --> 00:02:40.520
Some folks refer to this is the narrow
waste of the internet protocol stack,

00:02:40.520 --> 00:02:43.020
because everything above and
below, goes through IP

