WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:02.720
in the previous video we saw how with

00:00:02.720 --> 00:00:02.730
in the previous video we saw how with
 

00:00:02.730 --> 00:00:04.420
in the previous video we saw how with
your training examples backed up

00:00:04.420 --> 00:00:04.430
your training examples backed up
 

00:00:04.430 --> 00:00:07.280
your training examples backed up
horizontally in the matrix X you can

00:00:07.280 --> 00:00:07.290
horizontally in the matrix X you can
 

00:00:07.290 --> 00:00:09.830
horizontally in the matrix X you can
derive a vectorized implementation of

00:00:09.830 --> 00:00:09.840
derive a vectorized implementation of
 

00:00:09.840 --> 00:00:11.509
derive a vectorized implementation of
for propagation through in your network

00:00:11.509 --> 00:00:11.519
for propagation through in your network
 

00:00:11.519 --> 00:00:13.580
for propagation through in your network
let's give a bit more justification for

00:00:13.580 --> 00:00:13.590
let's give a bit more justification for
 

00:00:13.590 --> 00:00:15.620
let's give a bit more justification for
why the equations we wrote down is a

00:00:15.620 --> 00:00:15.630
why the equations we wrote down is a
 

00:00:15.630 --> 00:00:17.960
why the equations we wrote down is a
correct implementation of vectorizing

00:00:17.960 --> 00:00:17.970
correct implementation of vectorizing
 

00:00:17.970 --> 00:00:20.450
correct implementation of vectorizing
across multiple examples so let's go

00:00:20.450 --> 00:00:20.460
across multiple examples so let's go
 

00:00:20.460 --> 00:00:23.210
across multiple examples so let's go
through part of the propagation

00:00:23.210 --> 00:00:23.220
through part of the propagation
 

00:00:23.220 --> 00:00:25.490
through part of the propagation
calculation for a few examples let's say

00:00:25.490 --> 00:00:25.500
calculation for a few examples let's say
 

00:00:25.500 --> 00:00:27.769
calculation for a few examples let's say
that for the first training example you

00:00:27.769 --> 00:00:27.779
that for the first training example you
 

00:00:27.779 --> 00:00:36.580
that for the first training example you
end up computing this X 1 plus b1 and

00:00:36.580 --> 00:00:36.590
end up computing this X 1 plus b1 and
 

00:00:36.590 --> 00:00:38.990
end up computing this X 1 plus b1 and
then for the second training example you

00:00:38.990 --> 00:00:39.000
then for the second training example you
 

00:00:39.000 --> 00:00:48.430
then for the second training example you
end up computing this X 2 plus b1 and

00:00:48.430 --> 00:00:48.440
end up computing this X 2 plus b1 and
 

00:00:48.440 --> 00:00:50.869
end up computing this X 2 plus b1 and
then for the third training example the

00:00:50.869 --> 00:00:50.879
then for the third training example the
 

00:00:50.879 --> 00:00:57.709
then for the third training example the
end of computing this 3 plus e1 so just

00:00:57.709 --> 00:00:57.719
end of computing this 3 plus e1 so just
 

00:00:57.719 --> 00:00:59.540
end of computing this 3 plus e1 so just
to simplify the explanation on this

00:00:59.540 --> 00:00:59.550
to simplify the explanation on this
 

00:00:59.550 --> 00:01:01.279
to simplify the explanation on this
slide I'm going to ignore B so let's

00:01:01.279 --> 00:01:01.289
slide I'm going to ignore B so let's
 

00:01:01.289 --> 00:01:04.039
slide I'm going to ignore B so let's
just say you know for the to simplify

00:01:04.039 --> 00:01:04.049
just say you know for the to simplify
 

00:01:04.049 --> 00:01:05.990
just say you know for the to simplify
this justification a little bit that B

00:01:05.990 --> 00:01:06.000
this justification a little bit that B
 

00:01:06.000 --> 00:01:09.679
this justification a little bit that B
is equal to 0 so the argument going to

00:01:09.679 --> 00:01:09.689
is equal to 0 so the argument going to
 

00:01:09.689 --> 00:01:11.420
is equal to 0 so the argument going to
lay out will you know work with just a

00:01:11.420 --> 00:01:11.430
lay out will you know work with just a
 

00:01:11.430 --> 00:01:13.429
lay out will you know work with just a
little bit of a change even when B is

00:01:13.429 --> 00:01:13.439
little bit of a change even when B is
 

00:01:13.439 --> 00:01:15.350
little bit of a change even when B is
nonzero it does just simplify the

00:01:15.350 --> 00:01:15.360
nonzero it does just simplify the
 

00:01:15.360 --> 00:01:18.530
nonzero it does just simplify the
description on this slide of it now w1

00:01:18.530 --> 00:01:18.540
description on this slide of it now w1
 

00:01:18.540 --> 00:01:21.350
description on this slide of it now w1
is going to be some matrix right so I

00:01:21.350 --> 00:01:21.360
is going to be some matrix right so I
 

00:01:21.360 --> 00:01:24.850
is going to be some matrix right so I
have some number of rows in this matrix

00:01:24.850 --> 00:01:24.860
have some number of rows in this matrix
 

00:01:24.860 --> 00:01:28.420
have some number of rows in this matrix
so if you look at this calculation x1

00:01:28.420 --> 00:01:28.430
so if you look at this calculation x1
 

00:01:28.430 --> 00:01:36.859
so if you look at this calculation x1
what you have is that W 1 times X 1 did

00:01:36.859 --> 00:01:36.869
what you have is that W 1 times X 1 did
 

00:01:36.869 --> 00:01:40.789
what you have is that W 1 times X 1 did
use some column vector which means draw

00:01:40.789 --> 00:01:40.799
use some column vector which means draw
 

00:01:40.799 --> 00:01:45.050
use some column vector which means draw
a light ball like this and similarly if

00:01:45.050 --> 00:01:45.060
a light ball like this and similarly if
 

00:01:45.060 --> 00:01:48.080
a light ball like this and similarly if
you look at this vector X 2 you have

00:01:48.080 --> 00:01:48.090
you look at this vector X 2 you have
 

00:01:48.090 --> 00:01:58.749
you look at this vector X 2 you have
that W 1 times X 2 gives some other

00:01:58.749 --> 00:01:58.759
that W 1 times X 2 gives some other
 

00:01:58.759 --> 00:02:01.160
that W 1 times X 2 gives some other
column vector R and that's you know

00:02:01.160 --> 00:02:01.170
column vector R and that's you know
 

00:02:01.170 --> 00:02:04.330
column vector R and that's you know
gives you this I guess z1 2 and finally

00:02:04.330 --> 00:02:04.340
gives you this I guess z1 2 and finally
 

00:02:04.340 --> 00:02:10.680
gives you this I guess z1 2 and finally
if you look at X 3 you have W 1 times

00:02:10.680 --> 00:02:10.690
if you look at X 3 you have W 1 times
 

00:02:10.690 --> 00:02:16.680
if you look at X 3 you have W 1 times
x3 gives you some third column vector

00:02:16.680 --> 00:02:16.690
x3 gives you some third column vector
 

00:02:16.690 --> 00:02:21.300
x3 gives you some third column vector
that is this z13 so now if you consider

00:02:21.300 --> 00:02:21.310
that is this z13 so now if you consider
 

00:02:21.310 --> 00:02:27.060
that is this z13 so now if you consider
the training set capital X which we form

00:02:27.060 --> 00:02:27.070
the training set capital X which we form
 

00:02:27.070 --> 00:02:30.150
the training set capital X which we form
by stacking together all of our training

00:02:30.150 --> 00:02:30.160
by stacking together all of our training
 

00:02:30.160 --> 00:02:33.390
by stacking together all of our training
examples so the matrix capital X is

00:02:33.390 --> 00:02:33.400
examples so the matrix capital X is
 

00:02:33.400 --> 00:02:36.500
examples so the matrix capital X is
formed by taking the vector X 1 and

00:02:36.500 --> 00:02:36.510
formed by taking the vector X 1 and
 

00:02:36.510 --> 00:02:40.980
formed by taking the vector X 1 and
stacking it vertically with X 2 and then

00:02:40.980 --> 00:02:40.990
stacking it vertically with X 2 and then
 

00:02:40.990 --> 00:02:45.420
stacking it vertically with X 2 and then
also X 3 this is if we have only three

00:02:45.420 --> 00:02:45.430
also X 3 this is if we have only three
 

00:02:45.430 --> 00:02:46.920
also X 3 this is if we have only three
training examples if you have more you

00:02:46.920 --> 00:02:46.930
training examples if you have more you
 

00:02:46.930 --> 00:02:48.660
training examples if you have more you
know the obeah will keep stacking

00:02:48.660 --> 00:02:48.670
know the obeah will keep stacking
 

00:02:48.670 --> 00:02:51.510
know the obeah will keep stacking
horizontally like that but if you now

00:02:51.510 --> 00:02:51.520
horizontally like that but if you now
 

00:02:51.520 --> 00:02:55.460
horizontally like that but if you now
take this matrix X and multiply it by W

00:02:55.460 --> 00:02:55.470
take this matrix X and multiply it by W
 

00:02:55.470 --> 00:02:58.440
take this matrix X and multiply it by W
then you end up with if you think about

00:02:58.440 --> 00:02:58.450
then you end up with if you think about
 

00:02:58.450 --> 00:03:00.450
then you end up with if you think about
how matrix multiplication works you end

00:03:00.450 --> 00:03:00.460
how matrix multiplication works you end
 

00:03:00.460 --> 00:03:02.760
how matrix multiplication works you end
up with the first column being these

00:03:02.760 --> 00:03:02.770
up with the first column being these
 

00:03:02.770 --> 00:03:05.580
up with the first column being these
same values that had drawn up there in

00:03:05.580 --> 00:03:05.590
same values that had drawn up there in
 

00:03:05.590 --> 00:03:08.880
same values that had drawn up there in
purple the second column will be those

00:03:08.880 --> 00:03:08.890
purple the second column will be those
 

00:03:08.890 --> 00:03:12.410
purple the second column will be those
same four values and the third column

00:03:12.410 --> 00:03:12.420
same four values and the third column
 

00:03:12.420 --> 00:03:16.770
same four values and the third column
will be those are orange values what

00:03:16.770 --> 00:03:16.780
will be those are orange values what
 

00:03:16.780 --> 00:03:20.729
will be those are orange values what
they turn out to be but of course this

00:03:20.729 --> 00:03:20.739
they turn out to be but of course this
 

00:03:20.739 --> 00:03:27.720
they turn out to be but of course this
is just equal to z1 one expressed as a

00:03:27.720 --> 00:03:27.730
is just equal to z1 one expressed as a
 

00:03:27.730 --> 00:03:33.690
is just equal to z1 one expressed as a
column vector followed by z1 to express

00:03:33.690 --> 00:03:33.700
column vector followed by z1 to express
 

00:03:33.700 --> 00:03:36.560
column vector followed by z1 to express
as a column vector followed by z1 me

00:03:36.560 --> 00:03:36.570
as a column vector followed by z1 me
 

00:03:36.570 --> 00:03:39.600
as a column vector followed by z1 me
also express as a column vector and this

00:03:39.600 --> 00:03:39.610
also express as a column vector and this
 

00:03:39.610 --> 00:03:41.250
also express as a column vector and this
is again featuring examples you have

00:03:41.250 --> 00:03:41.260
is again featuring examples you have
 

00:03:41.260 --> 00:03:43.259
is again featuring examples you have
more examples and dug in more columns

00:03:43.259 --> 00:03:43.269
more examples and dug in more columns
 

00:03:43.269 --> 00:03:49.380
more examples and dug in more columns
and so this is just our matrix capital

00:03:49.380 --> 00:03:49.390
and so this is just our matrix capital
 

00:03:49.390 --> 00:03:52.949
and so this is just our matrix capital
z1 so I hope this gives a justification

00:03:52.949 --> 00:03:52.959
z1 so I hope this gives a justification
 

00:03:52.959 --> 00:03:59.580
z1 so I hope this gives a justification
to why when we had previously W 1 times

00:03:59.580 --> 00:03:59.590
to why when we had previously W 1 times
 

00:03:59.590 --> 00:04:06.479
to why when we had previously W 1 times
X I equals Z 1 I when we're looking at

00:04:06.479 --> 00:04:06.489
X I equals Z 1 I when we're looking at
 

00:04:06.489 --> 00:04:08.759
X I equals Z 1 I when we're looking at
single training example the time when

00:04:08.759 --> 00:04:08.769
single training example the time when
 

00:04:08.769 --> 00:04:10.320
single training example the time when
you took the different training examples

00:04:10.320 --> 00:04:10.330
you took the different training examples
 

00:04:10.330 --> 00:04:12.090
you took the different training examples
and stack them up in different columns

00:04:12.090 --> 00:04:12.100
and stack them up in different columns
 

00:04:12.100 --> 00:04:14.520
and stack them up in different columns
then the corresponding result is that

00:04:14.520 --> 00:04:14.530
then the corresponding result is that
 

00:04:14.530 --> 00:04:17.370
then the corresponding result is that
you end up with disease also stat

00:04:17.370 --> 00:04:17.380
you end up with disease also stat
 

00:04:17.380 --> 00:04:20.130
you end up with disease also stat
different columns and I won't show but

00:04:20.130 --> 00:04:20.140
different columns and I won't show but
 

00:04:20.140 --> 00:04:22.200
different columns and I won't show but
you can convince yourself if you want

00:04:22.200 --> 00:04:22.210
you can convince yourself if you want
 

00:04:22.210 --> 00:04:24.250
you can convince yourself if you want
stats with Python broadcast

00:04:24.250 --> 00:04:24.260
stats with Python broadcast
 

00:04:24.260 --> 00:04:28.530
stats with Python broadcast
if you add back in these values of B the

00:04:28.530 --> 00:04:28.540
if you add back in these values of B the
 

00:04:28.540 --> 00:04:30.880
if you add back in these values of B the
values are still correct and what

00:04:30.880 --> 00:04:30.890
values are still correct and what
 

00:04:30.890 --> 00:04:32.380
values are still correct and what
actually ends up happening is you end up

00:04:32.380 --> 00:04:32.390
actually ends up happening is you end up
 

00:04:32.390 --> 00:04:34.990
actually ends up happening is you end up
with Python broadcasting you end up

00:04:34.990 --> 00:04:35.000
with Python broadcasting you end up
 

00:04:35.000 --> 00:04:39.790
with Python broadcasting you end up
adding bi individually to each of the

00:04:39.790 --> 00:04:39.800
adding bi individually to each of the
 

00:04:39.800 --> 00:04:42.460
adding bi individually to each of the
columns of this matrix so on this slide

00:04:42.460 --> 00:04:42.470
columns of this matrix so on this slide
 

00:04:42.470 --> 00:04:48.760
columns of this matrix so on this slide
I've only justified that V 1 equals W 1

00:04:48.760 --> 00:04:48.770
I've only justified that V 1 equals W 1
 

00:04:48.770 --> 00:04:52.870
I've only justified that V 1 equals W 1
X plus B 1 there's a correct

00:04:52.870 --> 00:04:52.880
X plus B 1 there's a correct
 

00:04:52.880 --> 00:04:55.420
X plus B 1 there's a correct
factorization of the first step of the

00:04:55.420 --> 00:04:55.430
factorization of the first step of the
 

00:04:55.430 --> 00:04:56.830
factorization of the first step of the
four steps we had on the previous slide

00:04:56.830 --> 00:04:56.840
four steps we had on the previous slide
 

00:04:56.840 --> 00:04:58.840
four steps we had on the previous slide
but it turns out that the similar

00:04:58.840 --> 00:04:58.850
but it turns out that the similar
 

00:04:58.850 --> 00:05:01.000
but it turns out that the similar
analysis allows you to show that the

00:05:01.000 --> 00:05:01.010
analysis allows you to show that the
 

00:05:01.010 --> 00:05:02.860
analysis allows you to show that the
other steps also work on using a very

00:05:02.860 --> 00:05:02.870
other steps also work on using a very
 

00:05:02.870 --> 00:05:05.530
other steps also work on using a very
similar logic where if you stack the

00:05:05.530 --> 00:05:05.540
similar logic where if you stack the
 

00:05:05.540 --> 00:05:07.600
similar logic where if you stack the
inputs and columns then after the

00:05:07.600 --> 00:05:07.610
inputs and columns then after the
 

00:05:07.610 --> 00:05:08.740
inputs and columns then after the
equation you get the corresponding

00:05:08.740 --> 00:05:08.750
equation you get the corresponding
 

00:05:08.750 --> 00:05:10.950
equation you get the corresponding
outputs also stacked up in columns

00:05:10.950 --> 00:05:10.960
outputs also stacked up in columns
 

00:05:10.960 --> 00:05:13.390
outputs also stacked up in columns
finally let's just recap everything we

00:05:13.390 --> 00:05:13.400
finally let's just recap everything we
 

00:05:13.400 --> 00:05:15.610
finally let's just recap everything we
talked about in this video the existence

00:05:15.610 --> 00:05:15.620
talked about in this video the existence
 

00:05:15.620 --> 00:05:17.710
talked about in this video the existence
your neural network we said that this is

00:05:17.710 --> 00:05:17.720
your neural network we said that this is
 

00:05:17.720 --> 00:05:19.270
your neural network we said that this is
what you need to do if you were to

00:05:19.270 --> 00:05:19.280
what you need to do if you were to
 

00:05:19.280 --> 00:05:22.060
what you need to do if you were to
implement for propagation one training

00:05:22.060 --> 00:05:22.070
implement for propagation one training
 

00:05:22.070 --> 00:05:24.970
implement for propagation one training
example at a time going from I equals 1

00:05:24.970 --> 00:05:24.980
example at a time going from I equals 1
 

00:05:24.980 --> 00:05:29.110
example at a time going from I equals 1
through m and we said let's stack up the

00:05:29.110 --> 00:05:29.120
through m and we said let's stack up the
 

00:05:29.120 --> 00:05:30.850
through m and we said let's stack up the
training examples in columns like so and

00:05:30.850 --> 00:05:30.860
training examples in columns like so and
 

00:05:30.860 --> 00:05:35.230
training examples in columns like so and
so each of these values V 1 a 1 Z 2 a 2

00:05:35.230 --> 00:05:35.240
so each of these values V 1 a 1 Z 2 a 2
 

00:05:35.240 --> 00:05:37.630
so each of these values V 1 a 1 Z 2 a 2
the stack of the corresponding columns

00:05:37.630 --> 00:05:37.640
the stack of the corresponding columns
 

00:05:37.640 --> 00:05:41.050
the stack of the corresponding columns
as follows so this example for a a 1 but

00:05:41.050 --> 00:05:41.060
as follows so this example for a a 1 but
 

00:05:41.060 --> 00:05:48.340
as follows so this example for a a 1 but
this is true for Z 1 a 1 z 2 na 2 then

00:05:48.340 --> 00:05:48.350
this is true for Z 1 a 1 z 2 na 2 then
 

00:05:48.350 --> 00:05:50.290
this is true for Z 1 a 1 z 2 na 2 then
when we showed on the previous slide was

00:05:50.290 --> 00:05:50.300
when we showed on the previous slide was
 

00:05:50.300 --> 00:05:54.840
when we showed on the previous slide was
that this line allows you to vectorize

00:05:54.840 --> 00:05:54.850
that this line allows you to vectorize
 

00:05:54.850 --> 00:05:57.910
that this line allows you to vectorize
this across all M examples at the same

00:05:57.910 --> 00:05:57.920
this across all M examples at the same
 

00:05:57.920 --> 00:06:00.040
this across all M examples at the same
time and it turns out with the sum of

00:06:00.040 --> 00:06:00.050
time and it turns out with the sum of
 

00:06:00.050 --> 00:06:02.440
time and it turns out with the sum of
usernames you can show that all of the

00:06:02.440 --> 00:06:02.450
usernames you can show that all of the
 

00:06:02.450 --> 00:06:05.050
usernames you can show that all of the
other lines are correct vectorization

00:06:05.050 --> 00:06:05.060
other lines are correct vectorization
 

00:06:05.060 --> 00:06:09.550
other lines are correct vectorization
or four of these lines of code and just

00:06:09.550 --> 00:06:09.560
or four of these lines of code and just
 

00:06:09.560 --> 00:06:13.990
or four of these lines of code and just
as a reminder because X is also equal to

00:06:13.990 --> 00:06:14.000
as a reminder because X is also equal to
 

00:06:14.000 --> 00:06:19.120
as a reminder because X is also equal to
a zero because you remember that the

00:06:19.120 --> 00:06:19.130
a zero because you remember that the
 

00:06:19.130 --> 00:06:21.310
a zero because you remember that the
input feature vector X was equal to a

00:06:21.310 --> 00:06:21.320
input feature vector X was equal to a
 

00:06:21.320 --> 00:06:28.480
input feature vector X was equal to a
zero so X I equals a zero i right then

00:06:28.480 --> 00:06:28.490
zero so X I equals a zero i right then
 

00:06:28.490 --> 00:06:31.000
zero so X I equals a zero i right then
does a certain symmetry to these

00:06:31.000 --> 00:06:31.010
does a certain symmetry to these
 

00:06:31.010 --> 00:06:33.580
does a certain symmetry to these
equations where this first equation can

00:06:33.580 --> 00:06:33.590
equations where this first equation can
 

00:06:33.590 --> 00:06:36.749
equations where this first equation can
also be written Z 1 equals

00:06:36.749 --> 00:06:36.759
also be written Z 1 equals
 

00:06:36.759 --> 00:06:42.989
also be written Z 1 equals
w1 a 0 plus B 1 and so you see that some

00:06:42.989 --> 00:06:42.999
w1 a 0 plus B 1 and so you see that some
 

00:06:42.999 --> 00:06:45.299
w1 a 0 plus B 1 and so you see that some
you know this pair of equations in this

00:06:45.299 --> 00:06:45.309
you know this pair of equations in this
 

00:06:45.309 --> 00:06:46.739
you know this pair of equations in this
pair of equations actually look very

00:06:46.739 --> 00:06:46.749
pair of equations actually look very
 

00:06:46.749 --> 00:06:48.689
pair of equations actually look very
similar but just of all of these

00:06:48.689 --> 00:06:48.699
similar but just of all of these
 

00:06:48.699 --> 00:06:52.290
similar but just of all of these
industries advanced by one so this kind

00:06:52.290 --> 00:06:52.300
industries advanced by one so this kind
 

00:06:52.300 --> 00:06:54.749
industries advanced by one so this kind
of shows that the different layers of a

00:06:54.749 --> 00:06:54.759
of shows that the different layers of a
 

00:06:54.759 --> 00:06:56.579
of shows that the different layers of a
neural network are you know roughly

00:06:56.579 --> 00:06:56.589
neural network are you know roughly
 

00:06:56.589 --> 00:06:58.049
neural network are you know roughly
doing the same thing or just doing the

00:06:58.049 --> 00:06:58.059
doing the same thing or just doing the
 

00:06:58.059 --> 00:07:01.019
doing the same thing or just doing the
same computation over and over and here

00:07:01.019 --> 00:07:01.029
same computation over and over and here
 

00:07:01.029 --> 00:07:03.390
same computation over and over and here
we have a two layer neural network where

00:07:03.390 --> 00:07:03.400
we have a two layer neural network where
 

00:07:03.400 --> 00:07:06.179
we have a two layer neural network where
we go to a much deeper neural network in

00:07:06.179 --> 00:07:06.189
we go to a much deeper neural network in
 

00:07:06.189 --> 00:07:09.809
we go to a much deeper neural network in
next week's videos you see that even

00:07:09.809 --> 00:07:09.819
next week's videos you see that even
 

00:07:09.819 --> 00:07:11.369
next week's videos you see that even
deeper in your networks are basically

00:07:11.369 --> 00:07:11.379
deeper in your networks are basically
 

00:07:11.379 --> 00:07:13.170
deeper in your networks are basically
taking these two steps and just doing

00:07:13.170 --> 00:07:13.180
taking these two steps and just doing
 

00:07:13.180 --> 00:07:14.999
taking these two steps and just doing
them even more times than you're seeing

00:07:14.999 --> 00:07:15.009
them even more times than you're seeing
 

00:07:15.009 --> 00:07:17.399
them even more times than you're seeing
here so that's how you can vectorize

00:07:17.399 --> 00:07:17.409
here so that's how you can vectorize
 

00:07:17.409 --> 00:07:19.829
here so that's how you can vectorize
your network across multiple training

00:07:19.829 --> 00:07:19.839
your network across multiple training
 

00:07:19.839 --> 00:07:23.040
your network across multiple training
examples mix was so far then using the

00:07:23.040 --> 00:07:23.050
examples mix was so far then using the
 

00:07:23.050 --> 00:07:24.779
examples mix was so far then using the
sigmoid function throughout that neural

00:07:24.779 --> 00:07:24.789
sigmoid function throughout that neural
 

00:07:24.789 --> 00:07:26.700
sigmoid function throughout that neural
network turns out that's actually not

00:07:26.700 --> 00:07:26.710
network turns out that's actually not
 

00:07:26.710 --> 00:07:28.739
network turns out that's actually not
the best choice um in the next video

00:07:28.739 --> 00:07:28.749
the best choice um in the next video
 

00:07:28.749 --> 00:07:30.239
the best choice um in the next video
let's delve a little bit further into

00:07:30.239 --> 00:07:30.249
let's delve a little bit further into
 

00:07:30.249 --> 00:07:32.459
let's delve a little bit further into
how you can use different what's called

00:07:32.459 --> 00:07:32.469
how you can use different what's called
 

00:07:32.469 --> 00:07:34.200
how you can use different what's called
activation functions of which the

00:07:34.200 --> 00:07:34.210
activation functions of which the
 

00:07:34.210 --> 00:07:36.329
activation functions of which the
sigmoid function is just one possible

00:07:36.329 --> 00:07:36.339
sigmoid function is just one possible
 

00:07:36.339 --> 00:07:38.399
sigmoid function is just one possible
choice

