WEBVTT
Kind: captions
Language: en

00:00:00.954 --> 00:00:03.816
[MUSIC PLAYING]

00:00:06.680 --> 00:00:08.700
TIM SNEATH: Thank you so much.

00:00:08.700 --> 00:00:11.240
Welcome to Flutter Live.

00:00:11.240 --> 00:00:13.470
Thank you all for coming.

00:00:13.470 --> 00:00:15.200
This is a global event.

00:00:15.200 --> 00:00:18.230
We have hundreds of thousands
of people watching this

00:00:18.230 --> 00:00:21.260
all over the world,
whether via livestream

00:00:21.260 --> 00:00:26.190
or at the over 150 viewing
parties around the world.

00:00:26.190 --> 00:00:28.550
Whether you're watching us
over a morning cup of coffee

00:00:28.550 --> 00:00:32.540
in Seattle, or whether you're
attending a meeting after work

00:00:32.540 --> 00:00:36.590
in Berlin or joining a pajama
party in Bangkok, welcome.

00:00:39.440 --> 00:00:42.800
I want to start by paying
credit to the many software

00:00:42.800 --> 00:00:44.980
engineers who contributed
to this project

00:00:44.980 --> 00:00:48.030
and without whom we
wouldn't all be here today.

00:00:48.030 --> 00:00:51.390
With Flutter, we assembled
the best engineering talent

00:00:51.390 --> 00:00:54.330
from across the
industry, all of whom

00:00:54.330 --> 00:01:00.400
shared a dream of reinventing
how user interfaces are built.

00:01:00.400 --> 00:01:04.989
Our team includes leaders with
pedigrees from web, desktop,

00:01:04.989 --> 00:01:07.450
and mobile UI toolkits.

00:01:07.450 --> 00:01:11.140
It includes the former
editor of the HTML standard,

00:01:11.140 --> 00:01:14.410
leading developers who have
worked on WebKit and Blink,

00:01:14.410 --> 00:01:17.920
and architects who created
the first version of V8,

00:01:17.920 --> 00:01:21.060
the JavaScript engine
that powers Chrome.

00:01:21.060 --> 00:01:23.070
And then beyond our
own team, we also

00:01:23.070 --> 00:01:25.920
have hundreds of contributors
from the community

00:01:25.920 --> 00:01:29.610
who have identified issues,
contributed to patches,

00:01:29.610 --> 00:01:32.220
and even introduced
new features.

00:01:32.220 --> 00:01:36.780
And all of that has brought
us to this moment today.

00:01:36.780 --> 00:01:40.650
This isn't just our product,
but it's your product,

00:01:40.650 --> 00:01:43.470
and we're so proud to be
part of the journey with you.

00:01:46.160 --> 00:01:48.900
So let's talk about Flutter.

00:01:48.900 --> 00:01:51.060
Our vision for Flutter is
something that many of us

00:01:51.060 --> 00:01:53.490
have been dreaming
of for years--

00:01:53.490 --> 00:01:58.260
a powerful, general
purpose, open UI toolkit

00:01:58.260 --> 00:02:02.340
for building stunning
experiences on any device--

00:02:02.340 --> 00:02:07.670
embedded, mobile,
desktop, or beyond.

00:02:07.670 --> 00:02:09.919
While we're still in the
early stages of this journey,

00:02:09.919 --> 00:02:12.500
we're already depending
on Flutter ourselves

00:02:12.500 --> 00:02:16.980
at Google to power many
different apps and services.

00:02:16.980 --> 00:02:19.250
We know from direct
experience that it's

00:02:19.250 --> 00:02:22.370
ready for beautiful
production apps,

00:02:22.370 --> 00:02:27.360
and now we're delighted
to share it with you also.

00:02:27.360 --> 00:02:31.550
Our immediate focus
is the mobile phone.

00:02:31.550 --> 00:02:34.820
Developers today are
forced to compromise

00:02:34.820 --> 00:02:38.270
between either building
the same app multiple times

00:02:38.270 --> 00:02:42.020
on multiple operating
systems or accepting a lowest

00:02:42.020 --> 00:02:45.290
common denominator solution
that trades native speed

00:02:45.290 --> 00:02:48.150
and accuracy for portability.

00:02:48.150 --> 00:02:51.390
With Flutter, the days of
compromise are finally over.

00:02:54.690 --> 00:02:57.540
There are four
characteristics of Flutter

00:02:57.540 --> 00:03:00.750
that we think make it a
unique platform for you

00:03:00.750 --> 00:03:06.020
to build native mobile
application experiences.

00:03:06.020 --> 00:03:11.360
Firstly, Flutter enables
you to build beautiful apps.

00:03:11.360 --> 00:03:13.730
As you'll hear later, Flutter
provides a rich palette

00:03:13.730 --> 00:03:19.320
of tools that give you control
over every pixel on the screen.

00:03:19.320 --> 00:03:23.690
Designers will never again have
to compromise on their vision.

00:03:23.690 --> 00:03:25.730
Flutter includes a
full set of widgets

00:03:25.730 --> 00:03:29.180
that deliver pixel-perfect
experiences on both iOS

00:03:29.180 --> 00:03:30.800
and Android.

00:03:30.800 --> 00:03:37.450
And it enables the ultimate
realization of material design.

00:03:37.450 --> 00:03:40.830
So whether you're building
a highly tailored, branded

00:03:40.830 --> 00:03:44.869
experience or a native
iPhone or Android app,

00:03:44.869 --> 00:03:46.410
you should find that
Flutter provides

00:03:46.410 --> 00:03:49.770
everything you need to build
a beautiful, award-winning

00:03:49.770 --> 00:03:52.750
interface.

00:03:52.750 --> 00:03:54.750
Secondly, Flutter is fast.

00:03:54.750 --> 00:03:58.600
I'ts powered by the blazing
speed Skia 2D graphics engine

00:03:58.600 --> 00:04:01.600
which enables
hardware-accelerated graphics.

00:04:01.600 --> 00:04:03.850
From the start, we
architected Flutter

00:04:03.850 --> 00:04:07.310
to be able to support
glitch-free, jank-free graphics

00:04:07.310 --> 00:04:10.180
at the native speed
of your display.

00:04:10.180 --> 00:04:12.620
Flutter code is compiled.

00:04:12.620 --> 00:04:13.940
It's not interpreted.

00:04:13.940 --> 00:04:15.740
It doesn't go through
a virtual machine.

00:04:15.740 --> 00:04:17.360
When your application
is finished,

00:04:17.360 --> 00:04:20.120
it's compiled to
native machine code.

00:04:22.960 --> 00:04:25.670
Thirdly, Flutter is productive.

00:04:25.670 --> 00:04:28.660
Flutter introduces a
revolutionary new capability

00:04:28.660 --> 00:04:31.270
for developers and designers
to iterate on their apps

00:04:31.270 --> 00:04:35.850
in real time, and we call
this stateful hot reload.

00:04:35.850 --> 00:04:38.230
And it enables you to
change the code of your app

00:04:38.230 --> 00:04:40.870
and see the changes in
real time without having

00:04:40.870 --> 00:04:44.820
to restart the app or get
back to the screen you are on.

00:04:44.820 --> 00:04:48.010
And we think stateful
hot reload transforms

00:04:48.010 --> 00:04:49.945
the way you build an app.

00:04:49.945 --> 00:04:52.570
And developers who use it-- some
of you may be here in the room

00:04:52.570 --> 00:04:53.230
today--

00:04:53.230 --> 00:04:57.790
say it makes them up to
three times more productive.

00:04:57.790 --> 00:05:00.920
And lastly, Flutter is open.

00:05:00.920 --> 00:05:02.740
Flutter itself is open source--

00:05:02.740 --> 00:05:05.980
open for contributions,
open for extensibility.

00:05:05.980 --> 00:05:08.050
Every line of code
is available for you

00:05:08.050 --> 00:05:11.890
to read, fork, extend, amend.

00:05:11.890 --> 00:05:15.220
You don't have to buy a
developer tool to use Flutter

00:05:15.220 --> 00:05:16.730
or to use its tools.

00:05:16.730 --> 00:05:21.220
Everything is licensed freely
under a BSD-style license.

00:05:21.220 --> 00:05:23.650
And of course, that openness
extends to the community.

00:05:23.650 --> 00:05:27.250
There are already thousands
of Flutter plug-ins out there.

00:05:27.250 --> 00:05:31.240
And of course anything that
the underlying operating system

00:05:31.240 --> 00:05:34.240
exposes is available to
Flutter, whether it's

00:05:34.240 --> 00:05:38.140
written in Kotlin or
Java on Android or Swift

00:05:38.140 --> 00:05:41.990
or Objective C on iOS.

00:05:41.990 --> 00:05:47.090
So put all this together,
combine it with best in class

00:05:47.090 --> 00:05:52.490
tooling for Visual Studio Code
or Android Studio, IntelliJ,

00:05:52.490 --> 00:05:55.010
or the programming
editor of your choice,

00:05:55.010 --> 00:05:57.230
and you have Flutter--

00:05:57.230 --> 00:06:01.250
a framework for building
beautiful native experiences

00:06:01.250 --> 00:06:06.070
for iOS or Android from
a single code base.

00:06:06.070 --> 00:06:07.850
So what does this mean for you?

00:06:07.850 --> 00:06:12.670
Well, as a business, you no
longer need to fund two teams.

00:06:12.670 --> 00:06:15.550
You can put all your
resources towards crafting

00:06:15.550 --> 00:06:20.260
one beautiful native experience
that's available everywhere

00:06:20.260 --> 00:06:23.020
you need to be.

00:06:23.020 --> 00:06:25.860
But today, we're not just
here to talk about Flutter.

00:06:25.860 --> 00:06:29.610
We want to show you some
examples of Flutter in action.

00:06:29.610 --> 00:06:31.639
And to do that,
here's Filip Hracek.

00:06:31.639 --> 00:06:32.430
Over to you, Filip.

00:06:32.430 --> 00:06:35.274
[APPLAUSE]

00:06:37.870 --> 00:06:38.870
FILIP HRACEK: Thank you.

00:06:38.870 --> 00:06:40.160
Thank you.

00:06:40.160 --> 00:06:43.670
So Tim told you about the
four tenets of Flutter--

00:06:43.670 --> 00:06:46.680
beautiful, fast,
productive, and open.

00:06:46.680 --> 00:06:50.110
And it was OK.

00:06:50.110 --> 00:06:52.080
It was a little bit theoretical.

00:06:52.080 --> 00:06:54.880
But fortunately, I'm here now.

00:06:54.880 --> 00:06:57.340
And I'm going to
show you how that

00:06:57.340 --> 00:07:01.160
translates to practical stuff.

00:07:01.160 --> 00:07:04.880
So we built an app
for this event.

00:07:04.880 --> 00:07:09.080
It's called The
History of Everything.

00:07:09.080 --> 00:07:12.340
And I'm going to give you
a little tour of the app,

00:07:12.340 --> 00:07:17.680
and I'm going to show you how
different things about Flutter

00:07:17.680 --> 00:07:21.750
made things possible
or at least easier.

00:07:21.750 --> 00:07:25.120
So I'll start with the basics.

00:07:25.120 --> 00:07:29.680
The app starts immediately.

00:07:29.680 --> 00:07:34.080
This is because Flutter compiles
ahead of time to arm code.

00:07:34.080 --> 00:07:36.510
So there's no Jit to warm up.

00:07:36.510 --> 00:07:38.660
There are no scripts to parse.

00:07:38.660 --> 00:07:42.500
It just starts executing-- fast.

00:07:42.500 --> 00:07:47.850
Second, this is an Android
device, and this is an iPhone.

00:07:47.850 --> 00:07:51.510
And as you can see,
the basic interaction

00:07:51.510 --> 00:07:54.480
is completely natural.

00:07:54.480 --> 00:07:58.080
If you go to a different
screen, everything

00:07:58.080 --> 00:08:00.710
works as you would expect.

00:08:00.710 --> 00:08:02.630
So these are the basics.

00:08:02.630 --> 00:08:05.050
And this is how
Flutter makes you

00:08:05.050 --> 00:08:09.400
productive by letting you
focus on the custom stuff

00:08:09.400 --> 00:08:14.050
while doing the basics itself.

00:08:14.050 --> 00:08:16.360
We're going to get rid
of one of the phones

00:08:16.360 --> 00:08:19.540
just because it's
distracting to have two.

00:08:19.540 --> 00:08:23.980
And I'm just going
to focus on this one.

00:08:23.980 --> 00:08:26.470
So let's take this
a little further.

00:08:26.470 --> 00:08:34.130
It's nice to have scrolling, but
how can we turn this up to 11?

00:08:34.130 --> 00:08:40.809
So in this view, we have this
very interactive, very animated

00:08:40.809 --> 00:08:43.450
timeline where you can go from--

00:08:43.450 --> 00:08:48.570
all the way from
Big Bang to today.

00:08:48.570 --> 00:08:54.610
And if you see that red dot,
that's all of human history.

00:08:54.610 --> 00:08:55.940
We'll get back to that.

00:08:55.940 --> 00:09:00.020
But what I'm going to
show you now is actually--

00:09:00.020 --> 00:09:02.680
so the scroll behavior is
still completely natural

00:09:02.680 --> 00:09:07.120
to the platform, but
we added this really--

00:09:07.120 --> 00:09:09.970
I think it's fun
bouncy effect, just

00:09:09.970 --> 00:09:13.870
to make it more interesting
to interact with the app.

00:09:13.870 --> 00:09:17.440
And this is actually a testament
to the openness of Flutter,

00:09:17.440 --> 00:09:20.560
because we were able
to use Flutter physics,

00:09:20.560 --> 00:09:25.270
scroll physics, and add
a custom layer on top.

00:09:25.270 --> 00:09:28.360
So Flutter is not just
open as in open source,

00:09:28.360 --> 00:09:31.150
as you can read the
code, of course.

00:09:31.150 --> 00:09:34.390
But also, it gives
you, as a developer,

00:09:34.390 --> 00:09:38.500
access to all these classes and
functionality that you can then

00:09:38.500 --> 00:09:40.570
build on top of.

00:09:40.570 --> 00:09:42.250
But let's take this
a little further.

00:09:42.250 --> 00:09:44.950
So it's nice to
scroll, but let's zoom.

00:09:44.950 --> 00:09:49.360
So I'm going to zoom right past
dinosaurs, because it turns out

00:09:49.360 --> 00:09:51.830
nobody likes dinosaurs.

00:09:51.830 --> 00:09:53.060
Humans.

00:09:53.060 --> 00:09:55.270
This is the red dot
that we saw earlier.

00:09:55.270 --> 00:10:00.520
And now, as you can see, at any
moment, at any scroll position,

00:10:00.520 --> 00:10:04.720
at any zoom level, we show
what makes the most sense.

00:10:04.720 --> 00:10:09.730
And that is possible, again,
because Flutter is fast.

00:10:09.730 --> 00:10:15.180
We can actually recompute
what you show on every frame.

00:10:15.180 --> 00:10:18.250
And this is basically a
requirement for any very custom

00:10:18.250 --> 00:10:23.620
UI where you want to be able
to rebuild things and be

00:10:23.620 --> 00:10:27.456
interactive, 60
frames per second.

00:10:27.456 --> 00:10:28.330
OK.

00:10:28.330 --> 00:10:30.830
Well, let's take this
a little bit further.

00:10:30.830 --> 00:10:33.430
So you might be thinking,
oh, these are cool.

00:10:33.430 --> 00:10:36.310
I like these little animations.

00:10:36.310 --> 00:10:40.600
And you might also be thinking
that these are actually

00:10:40.600 --> 00:10:44.740
pre-computed, a GIF
or maybe a video.

00:10:44.740 --> 00:10:47.830
But these are actually
vector animations

00:10:47.830 --> 00:10:52.270
that we're building on
every frame with Flutter.

00:10:52.270 --> 00:10:58.000
So for example, this one, I can
sway the tree above of Newton.

00:10:58.000 --> 00:11:03.145
And I like how the apple
still falls on Newton's head.

00:11:03.145 --> 00:11:07.060
It's because life is hard.

00:11:07.060 --> 00:11:10.480
And this is possible because,
again, Flutter is fast,

00:11:10.480 --> 00:11:13.120
but also, because Flutter,
at its deepest level,

00:11:13.120 --> 00:11:15.620
uses Skia engine.

00:11:15.620 --> 00:11:17.860
Skia is hardware accelerated.

00:11:17.860 --> 00:11:20.590
It paints directly to
your graphics card,

00:11:20.590 --> 00:11:22.640
and you own all the pixels.

00:11:22.640 --> 00:11:30.040
So whatever beautiful design
your designer designs, whatever

00:11:30.040 --> 00:11:35.530
artwork your art person
does, you can do it.

00:11:35.530 --> 00:11:38.960
And you can do it, again,
for 60 frames per second.

00:11:38.960 --> 00:11:40.720
And that's really cool.

00:11:40.720 --> 00:11:43.420
Now you might be thinking,
this is all cool,

00:11:43.420 --> 00:11:45.880
but you're showing Pixel 3.

00:11:45.880 --> 00:11:48.370
That's a very modern phone.

00:11:48.370 --> 00:11:50.770
How about older phones?

00:11:50.770 --> 00:11:52.180
And I'm glad you asked.

00:11:52.180 --> 00:11:58.270
Because by chance, I have
other phones with me today.

00:11:58.270 --> 00:12:03.670
So this is an Android
phone from 2014, Samsung.

00:12:03.670 --> 00:12:07.040
And it's running, I
think, Android Kit Kat.

00:12:07.040 --> 00:12:09.890
And as you can see,
it works just fine.

00:12:09.890 --> 00:12:15.370
And here, if I can
make it go away--

00:12:15.370 --> 00:12:20.080
and here we have an iPhone
from 2013, so five years ago.

00:12:20.080 --> 00:12:23.650
And again, it runs just fine.

00:12:23.650 --> 00:12:27.850
So it's not just
the modern phones.

00:12:27.850 --> 00:12:36.950
If we go to the computer
screen, what magic is this?

00:12:36.950 --> 00:12:38.750
I'm not going to
do any live coding,

00:12:38.750 --> 00:12:43.280
but I just wanted you to see
that it's just Flutter code.

00:12:43.280 --> 00:12:45.710
The app itself is all Flutter.

00:12:45.710 --> 00:12:47.480
There is no magic behind it.

00:12:47.480 --> 00:12:51.650
It's all the Flutter that you
all probably-- or at least many

00:12:51.650 --> 00:12:53.240
of you know and love.

00:12:53.240 --> 00:13:02.330
So it just compiles to APK
for Android and IPA for iOS,

00:13:02.330 --> 00:13:10.060
and then it gets
published to the stores.

00:13:10.060 --> 00:13:13.300
This is actually published
maybe two hours ago.

00:13:13.300 --> 00:13:16.970
This is the app store, and
this is the Play Store.

00:13:16.970 --> 00:13:19.480
If we get back to the phone--

00:13:19.480 --> 00:13:21.260
so yeah, we were able--

00:13:21.260 --> 00:13:24.820
in maybe something like
6,000 lines of code,

00:13:24.820 --> 00:13:30.300
were able to build a very
custom app in three months

00:13:30.300 --> 00:13:34.100
with three people who were
busy doing other stuff as well.

00:13:34.100 --> 00:13:37.810
So that's the productive part.

00:13:37.810 --> 00:13:40.030
But there are things
that you won't

00:13:40.030 --> 00:13:43.161
find in the released
version of the app.

00:13:43.161 --> 00:13:43.660
Why?

00:13:43.660 --> 00:13:48.610
Because I believe that just
because you can do something

00:13:48.610 --> 00:13:51.370
with Flutter doesn't
mean you should.

00:13:51.370 --> 00:13:57.700
For example, can you add
150 little animated hearts

00:13:57.700 --> 00:13:58.960
to the timeline?

00:13:58.960 --> 00:14:03.190
Let's scroll with it and
get bigger and smaller

00:14:03.190 --> 00:14:04.150
and all that.

00:14:04.150 --> 00:14:05.410
Sure.

00:14:05.410 --> 00:14:06.951
Should you do that?

00:14:06.951 --> 00:14:07.450
No.

00:14:10.570 --> 00:14:11.860
Maybe yes, but no.

00:14:14.950 --> 00:14:18.910
Second that we didn't
add to the production app

00:14:18.910 --> 00:14:22.210
is the last event
in the timeline.

00:14:22.210 --> 00:14:26.410
And that is obviously
Flutter Live,

00:14:26.410 --> 00:14:28.480
because the history
of everything

00:14:28.480 --> 00:14:30.930
ends with Flutter Live.

00:14:30.930 --> 00:14:32.830
No, think about it.

00:14:32.830 --> 00:14:36.610
Everything that ever happened
since the history of time

00:14:36.610 --> 00:14:39.220
has led us to this moment.

00:14:39.220 --> 00:14:40.732
It's true.

00:14:40.732 --> 00:14:42.490
[APPLAUSE]

00:14:42.490 --> 00:14:43.830
Yeah.

00:14:43.830 --> 00:14:46.990
A little bit of philosophy.

00:14:46.990 --> 00:14:48.700
Anyway, what I
wanted to show here

00:14:48.700 --> 00:14:53.110
is that Flutter is all widgets.

00:14:53.110 --> 00:14:56.810
It's open, and it's composable.

00:14:56.810 --> 00:15:02.110
So if we want to have a video
playing in our very custom

00:15:02.110 --> 00:15:05.560
timeline, and being included
by all these things,

00:15:05.560 --> 00:15:07.780
we can, because it's
just another way to--

00:15:07.780 --> 00:15:11.620
it's Flutter, so sure.

00:15:11.620 --> 00:15:14.750
The last thing I want to
show you is basically this.

00:15:14.750 --> 00:15:18.490
But can we take it
a little further?

00:15:18.490 --> 00:15:22.720
So that's the blue
dot just above here,

00:15:22.720 --> 00:15:25.660
and that is actually a
very substantial event

00:15:25.660 --> 00:15:27.340
in the history of everything.

00:15:27.340 --> 00:15:32.690
This is me trying to find
this venue earlier today.

00:15:32.690 --> 00:15:36.530
I got lost in London,
and I was very sad.

00:15:36.530 --> 00:15:40.720
But I had a device with me
connected to the internet.

00:15:40.720 --> 00:15:46.090
And there's this
service by Google

00:15:46.090 --> 00:15:49.390
that you use if you have a
phone with you and you're lost.

00:15:51.970 --> 00:15:57.800
And as you can see in
this little animation--

00:15:57.800 --> 00:15:59.440
wait, what is this?

00:15:59.440 --> 00:16:00.970
Can you see that?

00:16:00.970 --> 00:16:03.600
Let me zoom in.

00:16:03.600 --> 00:16:07.620
Oh, is this an actual
Google map running

00:16:07.620 --> 00:16:16.661
inside my Flutter application
while it's being swayed around?

00:16:16.661 --> 00:16:17.160
Sure.

00:16:17.160 --> 00:16:19.820
[APPLAUSE]

00:16:19.820 --> 00:16:22.261
Because this is Flutter,
so it's another widget.

00:16:22.261 --> 00:16:22.760
OK.

00:16:22.760 --> 00:16:26.510
So to summarize, we've
seen an application

00:16:26.510 --> 00:16:31.460
that I think is beautiful,
that was built in three months

00:16:31.460 --> 00:16:36.980
by three people, that is fast
on a wide range of devices,

00:16:36.980 --> 00:16:39.260
and that, because of
the openness of Flutter,

00:16:39.260 --> 00:16:41.610
can do cool things like this.

00:16:41.610 --> 00:16:42.832
Thank you for attention.

00:16:42.832 --> 00:16:45.604
[APPLAUSE]

00:16:47.397 --> 00:16:48.480
TIM SNEATH: Thanks, Filip.

00:16:48.480 --> 00:16:49.574
What do you think?

00:16:49.574 --> 00:16:52.538
[APPLAUSE]

00:16:55.510 --> 00:16:57.850
So to me, that's a great
example of Flutter.

00:16:57.850 --> 00:17:01.060
It's a beautiful experience
that does things that even

00:17:01.060 --> 00:17:06.500
a traditional native platform
solution might struggle to do.

00:17:06.500 --> 00:17:10.190
So you've seen a little
of what Flutter can do.

00:17:10.190 --> 00:17:14.224
And today, it gives
me great pleasure

00:17:14.224 --> 00:17:19.230
to announce the general
availability of Flutter 1.0.

00:17:19.230 --> 00:17:22.085
[APPLAUSE]

00:17:25.530 --> 00:17:27.454
Thank you.

00:17:27.454 --> 00:17:29.820
So today's release
marks a key milestone

00:17:29.820 --> 00:17:31.620
for the product where
we declare it's not

00:17:31.620 --> 00:17:33.510
just ready for early adopters.

00:17:33.510 --> 00:17:36.990
It's ready for everyone.

00:17:36.990 --> 00:17:38.970
We released the
first beta of Flutter

00:17:38.970 --> 00:17:43.050
back at Mobile World Congress
in February of this year.

00:17:43.050 --> 00:17:45.780
And looking back over
the last nine months,

00:17:45.780 --> 00:17:48.390
it's been really quite
humbling from our point of view

00:17:48.390 --> 00:17:52.980
to see how people have adopted
and responded to Flutter.

00:17:52.980 --> 00:17:58.080
Since February, well over a
quarter of a million developers

00:17:58.080 --> 00:18:00.260
have used Flutter.

00:18:00.260 --> 00:18:02.630
Companies large and
small, including the likes

00:18:02.630 --> 00:18:06.200
of Alibaba, Groupon,
Tencent, Capital

00:18:06.200 --> 00:18:09.570
One, Philips Hue,
and of course Google,

00:18:09.570 --> 00:18:11.360
are developing with Flutter.

00:18:11.360 --> 00:18:13.100
And even in this
pre-release stage

00:18:13.100 --> 00:18:17.480
up till now, we've seen
over 3,000 apps published

00:18:17.480 --> 00:18:22.770
on the Play Store alone reaching
hundreds of millions of users.

00:18:22.770 --> 00:18:25.045
To show you some of the
momentum that already exists

00:18:25.045 --> 00:18:26.670
for Flutter, we
thought it would be fun

00:18:26.670 --> 00:18:29.085
to put together a quick video
that shows the great work

00:18:29.085 --> 00:18:32.940
that many of you have
done with Flutter so far.

00:18:32.940 --> 00:18:35.990
[MUSIC PLAYING]

