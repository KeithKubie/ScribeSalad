WEBVTT
Kind: captions
Language: en

00:00:00.870 --> 00:00:03.070
DAN KOULOMZIN: Hello everybody.

00:00:03.070 --> 00:00:03.570
Hi.

00:00:03.570 --> 00:00:04.230
Oh, thank you.

00:00:04.230 --> 00:00:07.240
Thank you.

00:00:07.240 --> 00:00:09.570
Big warm welcome to everybody
who's here in person,

00:00:09.570 --> 00:00:12.260
and a big shout out to everyone
watching online-- hi, mom.

00:00:12.260 --> 00:00:15.070
This is What's New
in Android Wear 2.0.

00:00:15.070 --> 00:00:16.210
I'm Dan Koulomzin.

00:00:16.210 --> 00:00:19.930
I'm the tech lead for
System UI on Android Wear.

00:00:19.930 --> 00:00:21.440
BRETT LIDER: And
I'm Brett Lider.

00:00:21.440 --> 00:00:23.348
I'm the design lead
for Android Wear.

00:00:26.280 --> 00:00:28.660
And so for Android
Wear 2.0, we want

00:00:28.660 --> 00:00:32.930
to redefine what it means to
be a great, useful, smartwatch.

00:00:32.930 --> 00:00:34.460
And we want to
enable you developers

00:00:34.460 --> 00:00:39.090
to build great experiences
for it, for users.

00:00:39.090 --> 00:00:41.316
And so to talk about
what's new in Android Wear,

00:00:41.316 --> 00:00:43.940
we're actually going to reflect
back a little bit on the things

00:00:43.940 --> 00:00:45.720
that we've learned
over the last two years

00:00:45.720 --> 00:00:46.910
since Android Wear came out.

00:00:50.030 --> 00:00:52.860
When Android Wear
first came out,

00:00:52.860 --> 00:00:56.200
it was very much
tethered to the phone.

00:00:56.200 --> 00:00:58.200
And this was a great
solution two years ago

00:00:58.200 --> 00:01:01.760
when Wi-Fi and cellular
seemed really far out for us.

00:01:01.760 --> 00:01:04.790
But in listening to users
and listening to developers,

00:01:04.790 --> 00:01:07.330
they have higher expectations
for a smartwatch.

00:01:07.330 --> 00:01:11.580
They want the watch to be
able to do stuff on its own.

00:01:11.580 --> 00:01:13.310
And so with Android
Wear 2.0, we're

00:01:13.310 --> 00:01:15.860
introducing the concept of
untethered experiences--

00:01:15.860 --> 00:01:18.490
where the watch can talk
to the cloud, your cloud,

00:01:18.490 --> 00:01:20.530
over cellular and Wi-Fi.

00:01:20.530 --> 00:01:22.810
And of course,
Bluetooth to the handset

00:01:22.810 --> 00:01:24.760
is still great for many things.

00:01:24.760 --> 00:01:28.890
It's about adding and
evolving the platform.

00:01:28.890 --> 00:01:33.220
Second-- so we call
this concept standalone.

00:01:33.220 --> 00:01:36.219
So second, Android Wear has
been about personal expression

00:01:36.219 --> 00:01:37.010
from the beginning.

00:01:37.010 --> 00:01:41.120
We have over 100 physical
designs that you can buy,

00:01:41.120 --> 00:01:44.110
and we have over 4,000 watch
faces on the Play Store.

00:01:44.110 --> 00:01:46.035
And so when it comes
to watch faces,

00:01:46.035 --> 00:01:47.410
we really believe
that you should

00:01:47.410 --> 00:01:50.636
be able to choose what you
want to be your watch face.

00:01:50.636 --> 00:01:51.760
But we want more than that.

00:01:51.760 --> 00:01:53.093
And users wanted more than that.

00:01:53.093 --> 00:01:56.050
They want utility and
personal expression.

00:01:56.050 --> 00:01:58.840
And so we're evolving the watch
face with Android Wear 2.0

00:01:58.840 --> 00:02:01.770
to put glanceable
information and action

00:02:01.770 --> 00:02:03.820
right on your watch face.

00:02:03.820 --> 00:02:08.539
So this is the new Android
Wear 2.0 watch faces.

00:02:08.539 --> 00:02:11.220
And Android Wear has always
been great at quick replies

00:02:11.220 --> 00:02:13.540
about messages that are
coming your way from people

00:02:13.540 --> 00:02:14.384
that you care about.

00:02:14.384 --> 00:02:15.800
But we heard from
people that they

00:02:15.800 --> 00:02:16.966
wanted a lot more than that.

00:02:16.966 --> 00:02:19.110
They wanted conversations.

00:02:19.110 --> 00:02:21.090
They wanted to be able
to express themselves

00:02:21.090 --> 00:02:24.900
in a multitude of ways, and
have those conversations live on

00:02:24.900 --> 00:02:27.580
over their watch over
the course of the day.

00:02:27.580 --> 00:02:30.380
So we call this Messaging,
making messaging great.

00:02:30.380 --> 00:02:33.134
And we're going to talk
about that as well.

00:02:33.134 --> 00:02:34.550
And finally, Android
Wear launched

00:02:34.550 --> 00:02:36.267
with Activity Tracking.

00:02:36.267 --> 00:02:38.100
Google Fit does a great
job of keeping track

00:02:38.100 --> 00:02:41.030
of your walking, your running,
your biking, in the background.

00:02:41.030 --> 00:02:42.900
But we heard from people
and from developers

00:02:42.900 --> 00:02:44.400
that they want to
do more than that.

00:02:44.400 --> 00:02:47.210
They wanted activity
tracking with insight.

00:02:47.210 --> 00:02:49.640
And so with this
example, this thing

00:02:49.640 --> 00:02:51.780
that I've done this
morning, which is nervously

00:02:51.780 --> 00:02:53.260
eat a little too much breakfast.

00:02:53.260 --> 00:02:55.260
DAN KOULOMZIN: Whoops.

00:02:55.260 --> 00:02:57.975
BRETT LIDER: And a fitness
app can say, well, you know,

00:02:57.975 --> 00:02:59.520
you did that.

00:02:59.520 --> 00:03:02.080
And you can get back on track
towards your fitness goals

00:03:02.080 --> 00:03:03.240
by doing the following.

00:03:03.240 --> 00:03:06.692
So this is helping users with
insight that's meaningful.

00:03:06.692 --> 00:03:08.650
So we talk about this as
building great fitness

00:03:08.650 --> 00:03:10.510
experiences for Android Wear.

00:03:10.510 --> 00:03:14.560
And together, these
are Android Wear 2.0.

00:03:14.560 --> 00:03:16.630
So we're launching
a developer preview.

00:03:16.630 --> 00:03:18.040
We want your feedback.

00:03:18.040 --> 00:03:21.520
And we're going to go into
detail on all of these topics.

00:03:21.520 --> 00:03:24.810
So fitness, messaging, the
watch face, standalone apps,

00:03:24.810 --> 00:03:27.420
and we've got a new user
interface for both the system

00:03:27.420 --> 00:03:30.340
UI and apps, to tie
it all together.

00:03:30.340 --> 00:03:33.210
And so to start we're going to
give a tour of that new user

00:03:33.210 --> 00:03:34.690
interface.

00:03:34.690 --> 00:03:36.594
And let's roll the video please.

00:03:39.810 --> 00:03:40.540
So here I am.

00:03:40.540 --> 00:03:42.550
I'm starting out
on my watch face.

00:03:42.550 --> 00:03:45.730
And this is an Android
Wear 1.0-style watch face.

00:03:45.730 --> 00:03:49.250
It's got the time, it's got the
date, but not a lot else that

00:03:49.250 --> 00:03:51.200
helps me get through my day.

00:03:51.200 --> 00:03:54.230
So with a simple
left-to-right swipe

00:03:54.230 --> 00:03:56.442
on my watch face,
a sideways swipe,

00:03:56.442 --> 00:03:58.400
I'm going to zoom out to
the watch face picker.

00:04:02.070 --> 00:04:03.105
Any second now.

00:04:07.340 --> 00:04:08.230
Here we go.

00:04:08.230 --> 00:04:11.140
So just like that, I'm zoomed
out to the watch face picker.

00:04:11.140 --> 00:04:13.400
And if I keep
sliding to the left,

00:04:13.400 --> 00:04:14.900
I'm actually on my
next watch face.

00:04:14.900 --> 00:04:16.941
And I've selected
Elements Analog.

00:04:16.941 --> 00:04:18.399
The Elements Analog
is a watch face

00:04:18.399 --> 00:04:20.857
that we built to show off the
capabilities of the new watch

00:04:20.857 --> 00:04:21.687
face API.

00:04:21.687 --> 00:04:24.020
So I've already customized
it with four different things

00:04:24.020 --> 00:04:25.184
that help me.

00:04:25.184 --> 00:04:27.100
And let's say I wanted
to change one of these.

00:04:27.100 --> 00:04:31.640
I wanted to change this calorie
tracker over to something else.

00:04:31.640 --> 00:04:34.150
So I'm just going to
do a sideways swipe,

00:04:34.150 --> 00:04:36.589
tap on the gear
icon at the bottom,

00:04:36.589 --> 00:04:38.630
and I'm editing the settings
for this watch face.

00:04:38.630 --> 00:04:41.590
So I tap on Complications,
the left hand dial.

00:04:41.590 --> 00:04:43.960
And Lifesum is a partner
that we've worked with--

00:04:43.960 --> 00:04:46.320
and they help me track things
like how much water I've

00:04:46.320 --> 00:04:47.340
drunk through the day.

00:04:47.340 --> 00:04:50.530
So let's tap on that, and
set that as my complication.

00:04:50.530 --> 00:04:52.030
So with a few swipes
and taps, I've

00:04:52.030 --> 00:04:54.050
made my watch face more my own.

00:04:54.050 --> 00:04:56.660
And it looks like I'm a little
behind on drinking water,

00:04:56.660 --> 00:05:00.062
and I'll get to that as
soon as I get off the stage.

00:05:00.062 --> 00:05:01.520
So that's a watch
face we've built,

00:05:01.520 --> 00:05:03.570
but what can third parties do?

00:05:03.570 --> 00:05:07.430
So let's check out a
third party watch face.

00:05:07.430 --> 00:05:11.240
So again, a left sideways
swipe gets me over

00:05:11.240 --> 00:05:12.440
to my next watch face.

00:05:16.690 --> 00:05:19.900
And here's Ranger from Zuhanden.

00:05:19.900 --> 00:05:22.110
And Ranger's got a
very unique aesthetic.

00:05:22.110 --> 00:05:26.060
Zuhanden's really good at
making Ranger sing on its own.

00:05:26.060 --> 00:05:28.450
And so we wanted to give watch
face developers the power

00:05:28.450 --> 00:05:31.690
to style these bits of data,
that we call complications,

00:05:31.690 --> 00:05:33.880
exactly the way they want to.

00:05:33.880 --> 00:05:37.960
So Zuhanden's got its own color
scheme, its own type face.

00:05:37.960 --> 00:05:40.587
And as a user, I can also
customize the watch face

00:05:40.587 --> 00:05:42.920
to have different complications
on different watch faces

00:05:42.920 --> 00:05:47.287
to suit different aspects of
what I need from my watch.

00:05:47.287 --> 00:05:49.370
And Dan is going to tell
us a lot more about this.

00:05:49.370 --> 00:05:51.990
So now let's go check out how
to add other favorite watch

00:05:51.990 --> 00:05:53.000
faces to my watch.

00:05:53.000 --> 00:05:56.680
So I swipe over to the right,
and I browse my watch face

00:05:56.680 --> 00:05:57.770
drawer.

00:05:57.770 --> 00:05:59.670
And so I just tap on
Elements Digital here,

00:05:59.670 --> 00:06:01.740
and I've added it
to my favorites.

00:06:01.740 --> 00:06:02.540
So cool.

00:06:02.540 --> 00:06:04.770
I've got four
favorite watch faces.

00:06:04.770 --> 00:06:06.324
But you know, this
1.0 style one,

00:06:06.324 --> 00:06:08.490
this one that doesn't have
actual information on it,

00:06:08.490 --> 00:06:09.615
I'm going to get rid of it.

00:06:09.615 --> 00:06:11.540
So all I have to
do is toss it up.

00:06:11.540 --> 00:06:12.120
It's gone.

00:06:12.120 --> 00:06:15.720
So Elements is my
watch face now.

00:06:15.720 --> 00:06:17.420
I want to cover another
important aspect

00:06:17.420 --> 00:06:21.460
of Android Wear 2.0, which is
a basic navigational concept

00:06:21.460 --> 00:06:24.400
of how to get the user
back to the watch face.

00:06:24.400 --> 00:06:26.930
And so from anywhere on Android
Wear, all you have to do

00:06:26.930 --> 00:06:29.222
is hit the hardware button
on the side of the device.

00:06:29.222 --> 00:06:31.680
So let's say I scroll to the
bottom of my watch face figure

00:06:31.680 --> 00:06:33.780
here, and nothing's
really resonating for me.

00:06:33.780 --> 00:06:34.740
So I decide to go back.

00:06:34.740 --> 00:06:36.790
I hit the hardware
button on the side,

00:06:36.790 --> 00:06:38.807
and I'll go back to
my list of favorites.

00:06:38.807 --> 00:06:41.140
And I hit the hardware button
on the side one more time,

00:06:41.140 --> 00:06:42.700
and I'll be back
at the watch face.

00:06:42.700 --> 00:06:46.800
So hardware button equals back.

00:06:46.800 --> 00:06:48.480
And now let's check
out Quick Settings

00:06:48.480 --> 00:06:50.910
So Quick Settings is the
place where you can quickly

00:06:50.910 --> 00:06:52.910
get your watch to do
what you want to do,

00:06:52.910 --> 00:06:54.230
kind of at the system level.

00:06:54.230 --> 00:06:57.020
So all you do is drag down
from the top of the watch.

00:06:57.020 --> 00:06:59.400
And we've made Quick
Settings a lot more compact,

00:06:59.400 --> 00:07:02.400
and put all the actions that
you want right in one place.

00:07:02.400 --> 00:07:05.354
And we've especially gone
deep on brightness controls.

00:07:05.354 --> 00:07:07.270
So if you tap on the
little brightness control

00:07:07.270 --> 00:07:10.460
here on the left, you
get up and down paddles.

00:07:10.460 --> 00:07:12.340
And as you start
interacting with them,

00:07:12.340 --> 00:07:14.960
we give you a live preview
of what that brightness

00:07:14.960 --> 00:07:18.510
control is going to do to your
currently selected watch face.

00:07:18.510 --> 00:07:21.390
It's pretty
gratifying in person.

00:07:21.390 --> 00:07:24.000
So I hit the hardware
button to go back.

00:07:24.000 --> 00:07:26.440
And I'll hit the hardware
button to go back again,

00:07:26.440 --> 00:07:29.710
and I'm back on the watch face.

00:07:29.710 --> 00:07:31.220
So let's check
out app launching.

00:07:31.220 --> 00:07:32.540
That's something we also
wanted to make better

00:07:32.540 --> 00:07:33.570
in Android Wear 2.0.

00:07:33.570 --> 00:07:37.092
So from the watch face, again
I hit the hardware button

00:07:37.092 --> 00:07:38.592
and that will open
the App Launcher.

00:07:41.820 --> 00:07:44.490
And let's-- we'll go back
hitting the hardware button

00:07:44.490 --> 00:07:46.021
again, and go into it again.

00:07:46.021 --> 00:07:47.770
And you can see that
it actually comes out

00:07:47.770 --> 00:07:50.269
from where the hardware button
is on the side of the device.

00:07:50.269 --> 00:07:52.350
And it has this really
nice, circular reveal.

00:07:52.350 --> 00:07:54.070
And of course, the
App Launcher itself

00:07:54.070 --> 00:07:57.560
takes advantage of the fact
that it's on a circular watch

00:07:57.560 --> 00:07:59.200
and it weighs itself
out accordingly.

00:07:59.200 --> 00:08:01.670
And we've made managed to
make the App Launcher have

00:08:01.670 --> 00:08:03.220
more icons on it.

00:08:03.220 --> 00:08:05.550
And you can tap anywhere
to launch an app.

00:08:05.550 --> 00:08:08.000
So here I've scrolled down
to Strava, and I can tap it,

00:08:08.000 --> 00:08:09.730
and it zooms into Strava.

00:08:09.730 --> 00:08:13.092
And when I'm done recording
my hike or my ride,

00:08:13.092 --> 00:08:14.800
I can hit the hardware
button to go back,

00:08:14.800 --> 00:08:16.139
and I'm back in the launcher.

00:08:16.139 --> 00:08:18.430
And I hit the hardware button
to go back one more time,

00:08:18.430 --> 00:08:19.762
and I'm back on the watch face.

00:08:23.170 --> 00:08:26.092
And let's say I want
to launch Strava again.

00:08:26.092 --> 00:08:27.050
So how could I do that?

00:08:27.050 --> 00:08:29.830
I just go into the App Launcher,
and Strava's right at the top.

00:08:29.830 --> 00:08:31.580
So we keep track of
the apps that the user

00:08:31.580 --> 00:08:33.309
launches the most,
and put them right

00:08:33.309 --> 00:08:36.010
at the top of the launcher.

00:08:36.010 --> 00:08:36.709
OK.

00:08:36.709 --> 00:08:39.250
So let's get into the bread and
butter of Android Wear, which

00:08:39.250 --> 00:08:40.809
is notifications--
and especially

00:08:40.809 --> 00:08:43.470
messaging from people
that you care about.

00:08:43.470 --> 00:08:45.410
So if my watch was in
its always-on mode,

00:08:45.410 --> 00:08:46.910
telling me the
time and showing me

00:08:46.910 --> 00:08:49.180
the data in my
complications, let's

00:08:49.180 --> 00:08:51.880
say I got a message
from a colleague.

00:08:51.880 --> 00:08:54.630
What would that
experience be like?

00:08:54.630 --> 00:08:56.671
So here's the always-on
mode, and I'm going

00:08:56.671 --> 00:08:57.920
to get a message from Krystal.

00:09:00.460 --> 00:09:03.380
So Krystal's message
takes over my watch face

00:09:03.380 --> 00:09:05.150
in ambient mode
for a few seconds,

00:09:05.150 --> 00:09:08.450
and if I don't interact
with it, it goes away.

00:09:08.450 --> 00:09:11.710
And then later, maybe when I'm
done talking to all of you,

00:09:11.710 --> 00:09:13.040
I would wake up the watch face.

00:09:13.040 --> 00:09:16.620
And Krystal's avatar and the app
that she sent that message from

00:09:16.620 --> 00:09:18.970
would come up and
visit the watch face.

00:09:18.970 --> 00:09:20.990
And now if I scroll
up, her avatar

00:09:20.990 --> 00:09:24.020
will reenter on top
of the notification

00:09:24.020 --> 00:09:27.340
card for this conversation.

00:09:27.340 --> 00:09:29.500
So yeah, let's reply
to Krystal here.

00:09:29.500 --> 00:09:32.310
So I've got this
conversational detail view

00:09:32.310 --> 00:09:33.620
on the notification.

00:09:33.620 --> 00:09:35.780
If I tap on Reply,
I can do voice

00:09:35.780 --> 00:09:38.160
reply, emoji, smart
reply-- but let's

00:09:38.160 --> 00:09:41.570
go use the qwerty keyboard.

00:09:41.570 --> 00:09:45.910
And with a few taps,
P and R gets me

00:09:45.910 --> 00:09:47.410
the word I want-- "pretty."

00:09:47.410 --> 00:09:49.610
G gets me "good."

00:09:49.610 --> 00:09:51.320
S gets me "so."

00:09:51.320 --> 00:09:52.750
And it's predicted "far."

00:09:52.750 --> 00:09:54.850
And so with like
four or five taps,

00:09:54.850 --> 00:09:57.410
I've got the sentence
I want and I'm done.

00:09:57.410 --> 00:10:01.090
And with the new notification
API in Android Wear,

00:10:01.090 --> 00:10:03.200
my message has been appended
to the conversation.

00:10:03.200 --> 00:10:04.920
And Krystal's already
replied, to keep

00:10:04.920 --> 00:10:06.420
this conversation long lived.

00:10:06.420 --> 00:10:08.460
And Dan's going to talk
a lot more about that.

00:10:08.460 --> 00:10:11.130
So I'll hit the hardware
button to go back.

00:10:11.130 --> 00:10:12.674
I'm back in the card stream.

00:10:12.674 --> 00:10:14.090
And now I can
scroll and check out

00:10:14.090 --> 00:10:15.880
the rest of my notifications.

00:10:15.880 --> 00:10:19.070
So here's one from Alexandra.

00:10:19.070 --> 00:10:21.820
And then here's one
from Google Fit.

00:10:21.820 --> 00:10:23.510
And you can see,
as I'm scrolling

00:10:23.510 --> 00:10:25.470
I'm getting a scroll
bar on the side

00:10:25.470 --> 00:10:28.210
with a thumb that tells me
exactly where I am in the card

00:10:28.210 --> 00:10:28.860
stream.

00:10:28.860 --> 00:10:30.310
Helps me orient myself.

00:10:30.310 --> 00:10:33.220
Tells me how many
notifications I have.

00:10:33.220 --> 00:10:35.150
So I hit the hardware
button to go back,

00:10:35.150 --> 00:10:37.290
get taken right back
to the watch face.

00:10:37.290 --> 00:10:40.250
And that's the tour
of the new system UI.

00:10:40.250 --> 00:10:42.480
Let's go back to the
slides and check out

00:10:42.480 --> 00:10:45.490
how this relates
to app patterns.

00:10:45.490 --> 00:10:47.390
So material design
for apps is something

00:10:47.390 --> 00:10:49.530
we're introducing
with Android Wear 2.0.

00:10:49.530 --> 00:10:50.960
And we're really
excited what this

00:10:50.960 --> 00:10:52.790
will do for app developers.

00:10:52.790 --> 00:10:55.120
So with Android Wear
1.0, we had the concept

00:10:55.120 --> 00:10:59.370
of users navigating a relatively
big two dimensional space.

00:10:59.370 --> 00:11:00.610
Users could scroll down.

00:11:00.610 --> 00:11:01.702
They could scroll up.

00:11:01.702 --> 00:11:02.660
They could scroll left.

00:11:02.660 --> 00:11:03.890
They could scroll right.

00:11:03.890 --> 00:11:05.550
They had a lot of power.

00:11:05.550 --> 00:11:07.750
But we found that just a
little too often, users

00:11:07.750 --> 00:11:09.583
would get a little
confused-- where should I

00:11:09.583 --> 00:11:12.540
go next to get more
content, to get more action?

00:11:12.540 --> 00:11:15.480
So we've doubled down on the
concept of a vertical layout

00:11:15.480 --> 00:11:17.720
where users start out
anchored at the top,

00:11:17.720 --> 00:11:19.700
so they always know
exactly where to go to get

00:11:19.700 --> 00:11:21.410
more-- it's to scroll down.

00:11:21.410 --> 00:11:23.806
And this is reinforced, of
course, in the system UI,

00:11:23.806 --> 00:11:25.180
where you start
on the watch face

00:11:25.180 --> 00:11:26.674
and scroll down
for notifications.

00:11:26.674 --> 00:11:28.090
And you start in
the App Launcher,

00:11:28.090 --> 00:11:29.870
and you scroll down
through your apps.

00:11:29.870 --> 00:11:31.850
So we think that
consistency from system

00:11:31.850 --> 00:11:33.790
UI all the way through
apps will really

00:11:33.790 --> 00:11:36.640
help users navigate Android
Wear even more quickly,

00:11:36.640 --> 00:11:38.654
and get the most
out of your app.

00:11:38.654 --> 00:11:40.570
So we'll look at this
in a little more detail.

00:11:40.570 --> 00:11:42.450
We've got these classic
isomorphic drawings

00:11:42.450 --> 00:11:45.450
that we in the Material
Design team love to make.

00:11:45.450 --> 00:11:47.940
So your app is
mostly this content

00:11:47.940 --> 00:11:50.630
view-- the main piece
of information or action

00:11:50.630 --> 00:11:52.550
that your app is
responsible for.

00:11:52.550 --> 00:11:54.670
And what you can do, if
you need to add actions

00:11:54.670 --> 00:11:57.925
that the user needs to take,
you can add a wearable action

00:11:57.925 --> 00:11:59.120
drawer to the bottom.

00:11:59.120 --> 00:12:01.495
And when the user reaches the
bottom of the content view,

00:12:01.495 --> 00:12:04.590
or changes scroll
directions, this component

00:12:04.590 --> 00:12:06.590
can peek into view.

00:12:06.590 --> 00:12:08.500
And if you have a more
complicated app that

00:12:08.500 --> 00:12:11.880
has multiple views that are
necessary to render in it,

00:12:11.880 --> 00:12:14.480
you can add a wearable
Navigation Drawer

00:12:14.480 --> 00:12:16.590
to the top of the app
that peeks in when

00:12:16.590 --> 00:12:18.640
the user reaches the top.

00:12:18.640 --> 00:12:22.520
So the main benefit of this,
is that the relatively small

00:12:22.520 --> 00:12:24.870
screen of a Wear
device is maximized

00:12:24.870 --> 00:12:27.400
by having the content
be front and center.

00:12:27.400 --> 00:12:30.000
And then actions are
available just off the screen,

00:12:30.000 --> 00:12:32.270
and navigation is available
just off the screen.

00:12:32.270 --> 00:12:34.310
So let's take a look at
this from the end user's

00:12:34.310 --> 00:12:35.110
point of view.

00:12:35.110 --> 00:12:38.650
So here's a user
scrolling down in an app

00:12:38.650 --> 00:12:40.580
and they reach the
bottom and the drawer's

00:12:40.580 --> 00:12:42.600
right there for them to grab.

00:12:42.600 --> 00:12:44.800
And we'll loop
that around again.

00:12:44.800 --> 00:12:47.510
So they scroll down, they
either change scroll direction

00:12:47.510 --> 00:12:49.354
or reach the bottom,
and the drawers there.

00:12:49.354 --> 00:12:50.770
And there's a
primary action there

00:12:50.770 --> 00:12:52.820
that they could have tapped,
if that's what they wanted.

00:12:52.820 --> 00:12:54.528
But if they want to
explore more actions,

00:12:54.528 --> 00:12:57.040
they just drag that drawer up.

00:12:57.040 --> 00:12:58.565
Let's look at the
Navigation Drawer.

00:12:58.565 --> 00:12:59.940
And we'll wait
for this animation

00:12:59.940 --> 00:13:02.560
to come around, one more time.

00:13:02.560 --> 00:13:05.052
And so here's the user
at the top of their app.

00:13:05.052 --> 00:13:07.010
And they drag down for
their Navigation Drawer,

00:13:07.010 --> 00:13:08.500
and they can change views.

00:13:08.500 --> 00:13:10.505
We'll watch this one
more time for clarity.

00:13:10.505 --> 00:13:12.630
They drag down, they're in
their Navigation Drawer,

00:13:12.630 --> 00:13:15.297
and they can change views.

00:13:15.297 --> 00:13:17.630
So now that we've talked about
layout and functionality,

00:13:17.630 --> 00:13:19.920
let's talk a little
bit about aesthetics.

00:13:19.920 --> 00:13:23.200
Android Wear 1.0
apps have generally

00:13:23.200 --> 00:13:26.150
taken their design cues from
handset-- which generally

00:13:26.150 --> 00:13:29.750
means bright white apps.

00:13:29.750 --> 00:13:31.780
And we think this
is great, but we

00:13:31.780 --> 00:13:34.600
want to make something that's
really specific for wearables.

00:13:34.600 --> 00:13:36.766
And that means that we're
recommending that all apps

00:13:36.766 --> 00:13:41.800
develop a dark color palette.

00:13:41.800 --> 00:13:43.730
There's two big
benefits for this.

00:13:43.730 --> 00:13:45.560
One is that OLED
displays are actually

00:13:45.560 --> 00:13:47.450
very powerful on
Android Wear devices,

00:13:47.450 --> 00:13:49.190
and they're very popular.

00:13:49.190 --> 00:13:51.960
And OLED displays consume
a lot less power when

00:13:51.960 --> 00:13:54.320
they're set to emit less light.

00:13:54.320 --> 00:14:01.160
So if you have less
light emitting,

00:14:01.160 --> 00:14:03.220
you'll save the user power.

00:14:03.220 --> 00:14:07.920
The other main benefit is
social appropriateness.

00:14:07.920 --> 00:14:10.420
There's just a lot of contexts
where emitting a lot of light

00:14:10.420 --> 00:14:12.250
is just not good design.

00:14:12.250 --> 00:14:14.160
So if you're watching
a movie in the evening,

00:14:14.160 --> 00:14:16.070
or out at a restaurant
at night, you

00:14:16.070 --> 00:14:18.690
don't want your watch
throwing off a lot of light.

00:14:18.690 --> 00:14:21.300
And we'll make this easy for
you, developers, to adopt.

00:14:21.300 --> 00:14:23.690
All you have to do is tell
us your primary app color,

00:14:23.690 --> 00:14:25.410
and we can compute
all the other shades

00:14:25.410 --> 00:14:26.534
that you need for your app.

00:14:29.730 --> 00:14:32.250
And this works more than like
the purple-y apps out there,

00:14:32.250 --> 00:14:36.420
it works for all of the
apps on the rainbow.

00:14:36.420 --> 00:14:37.970
And yeah, don't
forget the Android

00:14:37.970 --> 00:14:39.140
Wear apps are real apps.

00:14:39.140 --> 00:14:42.141
They have access to
the entire Android SDK.

00:14:42.141 --> 00:14:44.140
And the Android Wear apps
are even more powerful

00:14:44.140 --> 00:14:46.181
than the actual normal
Android apps, in that they

00:14:46.181 --> 00:14:47.700
have always-on capabilities.

00:14:47.700 --> 00:14:50.310
So what this means that,
if I've got visitors

00:14:50.310 --> 00:14:53.650
from out of town that
like their Marmite,

00:14:53.650 --> 00:14:55.715
and I go to the
store to shop for it,

00:14:55.715 --> 00:14:57.340
and I bring that up
on my wrist and I'm

00:14:57.340 --> 00:15:01.230
wandering the store and my
short term memory is not great,

00:15:01.230 --> 00:15:03.300
so I just forget what
I was shopping for.

00:15:03.300 --> 00:15:05.070
But my watch goes
into always-on mode

00:15:05.070 --> 00:15:06.840
and it reminds me
what I'm shopping for.

00:15:06.840 --> 00:15:10.520
It's great for to-do lists,
it's great for fitness apps.

00:15:10.520 --> 00:15:12.810
Definitely take
advantage of always-on.

00:15:12.810 --> 00:15:15.980
And to talk, oh yes-- to wrap
up on system UI material design,

00:15:15.980 --> 00:15:18.520
we've got a new watch face
picker, a new app launcher,

00:15:18.520 --> 00:15:21.550
a new notification stream,
a new navigation model,

00:15:21.550 --> 00:15:23.519
material design
patterns for wearables.

00:15:23.519 --> 00:15:25.810
We really want to hear what
you have to think about all

00:15:25.810 --> 00:15:26.450
of this.

00:15:26.450 --> 00:15:28.060
And I'm going to
turn it over to Dan

00:15:28.060 --> 00:15:30.092
for more about standalone apps.

00:15:30.092 --> 00:15:31.508
DAN KOULOMZIN: Thanks, Brett.

00:15:31.508 --> 00:15:32.924
[APPLAUSE]

00:15:36.228 --> 00:15:36.970
All right.

00:15:36.970 --> 00:15:39.609
So standalone apps, as
Bret mentioned before,

00:15:39.609 --> 00:15:41.400
we think that the
independence of the watch

00:15:41.400 --> 00:15:43.774
is going to be really key for
experiences in Android Wear

00:15:43.774 --> 00:15:45.010
2.0.

00:15:45.010 --> 00:15:47.290
So that's going to let a
user slap on their watch

00:15:47.290 --> 00:15:48.410
and go for a run.

00:15:48.410 --> 00:15:49.890
They can count their steps.

00:15:49.890 --> 00:15:52.000
They can track their progress.

00:15:52.000 --> 00:15:53.812
And they can actually
stream music,

00:15:53.812 --> 00:15:55.520
all without having to
bring their phones,

00:15:55.520 --> 00:15:57.780
so they get faster times.

00:15:57.780 --> 00:16:00.130
And this is also really
going to dramatically change

00:16:00.130 --> 00:16:02.520
the developer experience
that you guys have.

00:16:02.520 --> 00:16:03.370
And that's because
we're going to be

00:16:03.370 --> 00:16:05.840
able to bring a more Android-y
development experience when

00:16:05.840 --> 00:16:09.890
it comes to cloud and data,
authentication, notifications,

00:16:09.890 --> 00:16:13.030
and distribution.

00:16:13.030 --> 00:16:15.646
So for cloud and data,
here's how it used to work.

00:16:15.646 --> 00:16:17.520
If the watch needed some
data from the cloud,

00:16:17.520 --> 00:16:19.922
it would start with a
request to the phone.

00:16:19.922 --> 00:16:22.130
And then the phone would
get the data from the cloud,

00:16:22.130 --> 00:16:24.470
download it, put it back
in the wearable data layer,

00:16:24.470 --> 00:16:26.344
take it over to the
watch, and then the watch

00:16:26.344 --> 00:16:27.920
could then display it.

00:16:27.920 --> 00:16:30.820
Well, with standalone
apps, you'll

00:16:30.820 --> 00:16:32.990
be able to use the network
connection directly

00:16:32.990 --> 00:16:34.920
on the watch.

00:16:34.920 --> 00:16:38.436
So you'll be able to use HTTP,
TCP, UDP, whatever you want.

00:16:38.436 --> 00:16:39.810
And you don't have
to worry about

00:16:39.810 --> 00:16:42.910
whether that device has
a Wi-Fi or cellular radio

00:16:42.910 --> 00:16:45.020
because no matter
what, we'll still

00:16:45.020 --> 00:16:50.110
be able to, if we need to, proxy
the network from the phone.

00:16:50.110 --> 00:16:52.464
And so you'll be able to
take all the development

00:16:52.464 --> 00:16:54.630
patterns that you know from
Android phone and tablet

00:16:54.630 --> 00:16:58.640
development, use all the
libraries like Volley,

00:16:58.640 --> 00:17:02.720
and you'll maybe even be able to
reuse some code from your phone

00:17:02.720 --> 00:17:05.500
and tablet apps
right on the watch.

00:17:05.500 --> 00:17:07.170
And of course, you'll
still want to use

00:17:07.170 --> 00:17:09.104
the best practices you've
learned from writing

00:17:09.104 --> 00:17:10.020
phone and tablet apps.

00:17:10.020 --> 00:17:11.780
And I just want to
call attention to two.

00:17:11.780 --> 00:17:14.510
One is, don't grab data that
you're not going to use.

00:17:14.510 --> 00:17:16.839
One mistake we see
sometimes is people

00:17:16.839 --> 00:17:19.361
get images that are way
larger than their screen.

00:17:19.361 --> 00:17:21.569
Well, there's no sense in
downloading data you're not

00:17:21.569 --> 00:17:22.599
going to show the user.

00:17:22.599 --> 00:17:24.050
So just in general, avoid that.

00:17:24.050 --> 00:17:26.819
It'll hurt latency
and battery life.

00:17:26.819 --> 00:17:29.660
Also, I want to talk a little
bit about Doze and Doze Light.

00:17:29.660 --> 00:17:32.150
So those are coming
to Android Wear 2.0.

00:17:32.150 --> 00:17:33.730
They're important
ways that we manage

00:17:33.730 --> 00:17:35.515
the battery life of the watch.

00:17:35.515 --> 00:17:37.640
And so you definitely want
to play nice with those.

00:17:37.640 --> 00:17:40.150
They are responsible for
minimizing the wake ups which

00:17:40.150 --> 00:17:43.000
are really battery impacting.

00:17:43.000 --> 00:17:45.130
And so you can schedule
jobs using job scheduler--

00:17:45.130 --> 00:17:47.510
this is our
recommended practice.

00:17:47.510 --> 00:17:50.172
You'll be able to schedule
those jobs on the basis of time,

00:17:50.172 --> 00:17:52.380
whether or not you need a
connection to the internet,

00:17:52.380 --> 00:17:54.460
or whether or not you need
power for long running

00:17:54.460 --> 00:17:56.180
tasks or things like that.

00:17:56.180 --> 00:17:57.810
And so this is
really great already

00:17:57.810 --> 00:18:00.417
for things like downloading
the weather from the cloud,

00:18:00.417 --> 00:18:01.500
and showing that to users.

00:18:01.500 --> 00:18:06.320
But if you're wanting to do more
maybe privacy sensitive things,

00:18:06.320 --> 00:18:08.060
maybe a messaging
application, then you

00:18:08.060 --> 00:18:10.480
want to worry about
authentication.

00:18:10.480 --> 00:18:14.610
And so with Android Wear
2.0 for standalone apps,

00:18:14.610 --> 00:18:17.180
the watch will be managing
its own authentication.

00:18:17.180 --> 00:18:20.790
We have several patterns
available that you can look at.

00:18:20.790 --> 00:18:24.120
There's patterns
that-- all the patterns

00:18:24.120 --> 00:18:27.240
balance developer time, user
experience, and flexibility

00:18:27.240 --> 00:18:29.910
in terms of what platform
is running on the phone.

00:18:29.910 --> 00:18:31.910
I'm not going to go into
all the nitty gritty.

00:18:31.910 --> 00:18:34.400
There's tons more information
available at the Standalone

00:18:34.400 --> 00:18:39.622
talk later today and online,
so do check that out.

00:18:39.622 --> 00:18:40.580
So on to notifications.

00:18:40.580 --> 00:18:41.960
So notifications
have always been

00:18:41.960 --> 00:18:44.929
the lifeblood of Android Wear.

00:18:44.929 --> 00:18:46.470
And the magic of
the experience comes

00:18:46.470 --> 00:18:50.040
from them being
the same experience

00:18:50.040 --> 00:18:53.830
in terms of the notification
between the watch

00:18:53.830 --> 00:18:54.460
and the phone.

00:18:54.460 --> 00:18:57.610
So if you get a
notification from an app,

00:18:57.610 --> 00:18:58.990
it appears in both places.

00:18:58.990 --> 00:19:01.030
If you take action on
either of those places,

00:19:01.030 --> 00:19:02.580
it's reflected in the other.

00:19:02.580 --> 00:19:04.620
And of course, if you
dismiss from one place,

00:19:04.620 --> 00:19:06.860
it's gone from
the other as well.

00:19:06.860 --> 00:19:09.290
And that has been achieved
in the past with notification

00:19:09.290 --> 00:19:09.790
bridging.

00:19:09.790 --> 00:19:11.770
And that's still definitely
an option for you.

00:19:11.770 --> 00:19:13.730
But now that you've
got the network,

00:19:13.730 --> 00:19:16.260
you may want to manage
notifications directly

00:19:16.260 --> 00:19:19.170
from your standalone app.

00:19:19.170 --> 00:19:21.500
So you can, by the way, use
Firebase Cloud Messaging,

00:19:21.500 --> 00:19:24.300
formally known as GCM,
Google Cloud Messaging,

00:19:24.300 --> 00:19:27.170
to actually have the
server wake up your watch

00:19:27.170 --> 00:19:30.330
and then the watch
can notify the user.

00:19:30.330 --> 00:19:32.800
So now that you're able to
generate notifications directly

00:19:32.800 --> 00:19:37.230
from the watch, you may want to
shut off notification bridging.

00:19:37.230 --> 00:19:38.770
And there's an API for that.

00:19:38.770 --> 00:19:40.520
And also we have some
patterns on helping

00:19:40.520 --> 00:19:45.350
to keep that replicated
experience so that interactions

00:19:45.350 --> 00:19:46.780
seem to happen in both places.

00:19:49.750 --> 00:19:51.220
So now onto distribution.

00:19:51.220 --> 00:19:55.630
So this is a big change
in Android Wear 2.0.

00:19:55.630 --> 00:19:57.960
It used to be that to
ship watch software,

00:19:57.960 --> 00:20:01.160
you would embed it
in your phone APK.

00:20:01.160 --> 00:20:05.380
And it's been unnecessary
stuff for users to download.

00:20:05.380 --> 00:20:08.350
And it, of course,
affects disk space.

00:20:08.350 --> 00:20:11.950
And now in Android
Wear 2.0, watches

00:20:11.950 --> 00:20:15.080
can download and install apps
directly from the Play Store.

00:20:15.080 --> 00:20:20.090
And not only does this fix the
problem of growing phone APKs,

00:20:20.090 --> 00:20:23.010
but it also makes it
possible to ship apps

00:20:23.010 --> 00:20:25.980
to watches without
having to worry

00:20:25.980 --> 00:20:28.730
about what operating system is
running on the paired phone.

00:20:28.730 --> 00:20:31.830
So you'll be able to
reach a lot more users.

00:20:31.830 --> 00:20:34.814
And so yeah, it's great news.

00:20:34.814 --> 00:20:38.090
[APPLAUSE]

00:20:38.090 --> 00:20:39.831
So standalone is a
really big change.

00:20:39.831 --> 00:20:42.080
Not only does it let users
interact with their devices

00:20:42.080 --> 00:20:46.030
in more ways, but it's also
a huge change for developers.

00:20:46.030 --> 00:20:49.750
So now you can just do so
much more on the watch itself,

00:20:49.750 --> 00:20:53.140
and we're really excited to
see what happens now with you

00:20:53.140 --> 00:20:56.300
guys taking advantage of this.

00:20:56.300 --> 00:20:58.160
All right, on to watch faces.

00:20:58.160 --> 00:21:00.470
Now watch faces have always
been a really key part

00:21:00.470 --> 00:21:01.960
of Android Wear.

00:21:01.960 --> 00:21:04.610
From the very start, we
had always-on watch faces

00:21:04.610 --> 00:21:07.740
so the watch is always
ready to tell you the time.

00:21:07.740 --> 00:21:10.640
And you developers really
ran with our watch face APIs,

00:21:10.640 --> 00:21:12.390
and now there are
thousands of watch

00:21:12.390 --> 00:21:13.930
faces available
on the Play Store.

00:21:13.930 --> 00:21:15.450
They let users
really customize how

00:21:15.450 --> 00:21:17.570
their watches look-- super
important, considering

00:21:17.570 --> 00:21:18.653
this is something we wear.

00:21:21.080 --> 00:21:26.020
And then the interactivity APIs
that we added last year really

00:21:26.020 --> 00:21:27.580
made the watch face a tool.

00:21:27.580 --> 00:21:29.600
So it's not just
for showing data,

00:21:29.600 --> 00:21:31.160
it's for interaction as well.

00:21:31.160 --> 00:21:32.910
And so we wanted to
take that and bring it

00:21:32.910 --> 00:21:35.880
to all of the apps that
run on Android Wear.

00:21:35.880 --> 00:21:39.100
So imagine if all of the apps
could participate on the watch

00:21:39.100 --> 00:21:41.450
face, show information,
and then generate

00:21:41.450 --> 00:21:43.610
those user experiences.

00:21:43.610 --> 00:21:45.590
So we're adding this
complications API

00:21:45.590 --> 00:21:48.240
in Android Wear 2.0.

00:21:48.240 --> 00:21:50.690
So the term
"complications" comes

00:21:50.690 --> 00:21:52.650
from traditional
watchmaking, and it

00:21:52.650 --> 00:21:54.690
refers to any
informative element

00:21:54.690 --> 00:21:57.210
on the watch face that's not
just telling you the time.

00:21:57.210 --> 00:21:59.060
So on traditional
watch faces, this

00:21:59.060 --> 00:22:00.980
can tell you the
day of the week,

00:22:00.980 --> 00:22:03.450
or the day of the month, when
your alarm's going to go off,

00:22:03.450 --> 00:22:04.887
or maybe the phases of the moon.

00:22:04.887 --> 00:22:06.220
BRETT LIDER: Phases of the moon.

00:22:06.220 --> 00:22:07.428
Super important to have that.

00:22:07.428 --> 00:22:08.300
DAN KOULOMZIN: Yeah.

00:22:08.300 --> 00:22:11.505
If you're a werewolf
hunter, very important.

00:22:11.505 --> 00:22:13.270
And we think for
smartwatches, they

00:22:13.270 --> 00:22:15.357
should be able to do
smartwatch-y things,

00:22:15.357 --> 00:22:16.190
these complications.

00:22:16.190 --> 00:22:18.720
So they should tell you
smartwatch type of data,

00:22:18.720 --> 00:22:20.180
like how many
steps you've taken,

00:22:20.180 --> 00:22:21.780
how many calories
maybe you've eaten,

00:22:21.780 --> 00:22:23.990
if you have incoming messages.

00:22:23.990 --> 00:22:25.990
And of course, they should
also react to touch.

00:22:25.990 --> 00:22:29.050
So touching that
notification should drive me

00:22:29.050 --> 00:22:31.720
to an experience where
I can then act on it.

00:22:31.720 --> 00:22:36.380
And so the complications API
is an API for data providers

00:22:36.380 --> 00:22:37.930
and watch face developers.

00:22:37.930 --> 00:22:40.300
And it lets the
two work together

00:22:40.300 --> 00:22:42.897
to provide both form and
function to the watch face.

00:22:42.897 --> 00:22:45.480
And there's no need for them to
know anything about each other

00:22:45.480 --> 00:22:47.960
in advance-- no biz dev
deals to sign for data,

00:22:47.960 --> 00:22:49.980
or anything like that.

00:22:49.980 --> 00:22:52.140
So for data providers,
this is a big deal.

00:22:52.140 --> 00:22:55.250
It's going to let you get your
interactions, and your data,

00:22:55.250 --> 00:22:56.550
on a lot more watch faces.

00:22:56.550 --> 00:22:59.040
In fact, you'll be able
to have your data rendered

00:22:59.040 --> 00:23:01.210
by top fashion brands
and other experts

00:23:01.210 --> 00:23:03.090
making beautiful watch faces.

00:23:03.090 --> 00:23:05.590
And of course, you can drive
users back to your applications

00:23:05.590 --> 00:23:09.220
by when they touch the
complications because you

00:23:09.220 --> 00:23:12.500
assign a pending intent that
gets sent when they do that.

00:23:12.500 --> 00:23:15.050
So Lifesum has been able to
add some complications to watch

00:23:15.050 --> 00:23:20.230
faces that can do things like
track Brett's drinks of water,

00:23:20.230 --> 00:23:23.320
let him know how he's
doing with his goals.

00:23:23.320 --> 00:23:27.812
And you get back to
Lifesum to blob all that.

00:23:27.812 --> 00:23:29.270
And watch face
developers are going

00:23:29.270 --> 00:23:33.270
to be able to concentrate on
making really beautiful watch

00:23:33.270 --> 00:23:36.400
faces, and they don't have to
acquire a ton of experience

00:23:36.400 --> 00:23:38.230
with fitness or
messaging in order

00:23:38.230 --> 00:23:39.865
to provide that
functionality to users.

00:23:42.852 --> 00:23:43.810
So here's how it works.

00:23:43.810 --> 00:23:46.010
Android Wear X is a broker,
so the two never really

00:23:46.010 --> 00:23:48.080
talk directly to each other.

00:23:48.080 --> 00:23:49.670
It starts when it
decides it needs

00:23:49.670 --> 00:23:51.230
to have a complication drawn.

00:23:51.230 --> 00:23:53.400
It sends an update request
to the data provider.

00:23:53.400 --> 00:23:55.070
The data provider
gets that request,

00:23:55.070 --> 00:23:57.240
it fills out this
complication data object,

00:23:57.240 --> 00:23:59.536
and sends it back
to Android Wear.

00:23:59.536 --> 00:24:02.110
Android Wear then forwards
it onto the watch face,

00:24:02.110 --> 00:24:04.660
which then can draw it with
whatever aesthetic it wants,

00:24:04.660 --> 00:24:08.290
because it owns the entire
drawing part of that.

00:24:08.290 --> 00:24:12.440
And the way they coordinate
on the general idea

00:24:12.440 --> 00:24:14.810
of the presentation, is
through the type that's

00:24:14.810 --> 00:24:16.770
on that complication data.

00:24:16.770 --> 00:24:19.450
So there's lots of different
types for lots of different use

00:24:19.450 --> 00:24:20.620
cases.

00:24:20.620 --> 00:24:24.590
I'm going to walk through
just a few of them.

00:24:24.590 --> 00:24:28.499
So if you want to show the day
of the month, how many messages

00:24:28.499 --> 00:24:30.290
you have, or maybe the
temperature outside,

00:24:30.290 --> 00:24:31.623
you can use the short text type.

00:24:31.623 --> 00:24:35.100
It's just a little bit of
text, and maybe an icon.

00:24:35.100 --> 00:24:36.800
If you can go even
simpler, then maybe

00:24:36.800 --> 00:24:38.390
you want to use the icon type.

00:24:38.390 --> 00:24:39.500
This just shows a picture.

00:24:39.500 --> 00:24:42.120
So, for example, it might
tell me it's sunny outside,

00:24:42.120 --> 00:24:43.240
if I see a sun.

00:24:43.240 --> 00:24:46.390
And of course, since these
complications receive touches,

00:24:46.390 --> 00:24:48.170
they can also be
used as just icons

00:24:48.170 --> 00:24:52.100
so the user knows it's like
a launcher back to your app.

00:24:52.100 --> 00:24:53.660
And there's also a
range value type.

00:24:53.660 --> 00:24:57.380
Think of this as a value between
a minimum and a maximum--

00:24:57.380 --> 00:25:00.500
maybe a percentage, how many of
my daily calories I've eaten,

00:25:00.500 --> 00:25:02.440
or how much gas is in my car.

00:25:02.440 --> 00:25:04.570
And there's lots more examples.

00:25:04.570 --> 00:25:08.920
You can read about them
online or you can talk to us

00:25:08.920 --> 00:25:10.860
in the sandbox later.

00:25:10.860 --> 00:25:12.530
And so if you're
a data provider,

00:25:12.530 --> 00:25:14.460
you want to be thinking about
all the different kinds of data

00:25:14.460 --> 00:25:16.190
that you have that
you can show users.

00:25:16.190 --> 00:25:18.950
And you want to think about
what action they can take when

00:25:18.950 --> 00:25:21.659
they touch those complications.

00:25:21.659 --> 00:25:23.200
And if you're a
watch face developer,

00:25:23.200 --> 00:25:26.160
you want to think about how you
can make these things really

00:25:26.160 --> 00:25:27.161
beautiful for users.

00:25:27.161 --> 00:25:28.660
So I want to show
you a few examples

00:25:28.660 --> 00:25:29.660
from our partner, ustwo.

00:25:31.952 --> 00:25:32.910
There's three examples.

00:25:32.910 --> 00:25:36.665
In this first one, they've
taken a existing watch face,

00:25:36.665 --> 00:25:38.540
so they already shipped,
and they've upgraded

00:25:38.540 --> 00:25:39.810
it to use complications.

00:25:39.810 --> 00:25:41.310
You can see they've added it
into the left and the right

00:25:41.310 --> 00:25:42.320
there.

00:25:42.320 --> 00:25:45.800
They found some space to their
existing face, and add them.

00:25:45.800 --> 00:25:48.120
And it fits right in.

00:25:48.120 --> 00:25:50.950
And I think it's pretty nice.

00:25:50.950 --> 00:25:54.350
This next example
is a new watch face

00:25:54.350 --> 00:25:57.300
that they've written to take
advantage of the complication

00:25:57.300 --> 00:25:58.632
API.

00:25:58.632 --> 00:26:00.590
And you can see that it
makes obvious reference

00:26:00.590 --> 00:26:02.760
to mechanical watch faces.

00:26:02.760 --> 00:26:06.200
And of course, it has
that classic-looking dial

00:26:06.200 --> 00:26:07.940
complication.

00:26:07.940 --> 00:26:10.650
So if you want that
classic look on your watch,

00:26:10.650 --> 00:26:14.230
this is a great choice.

00:26:14.230 --> 00:26:17.230
This last one takes a
lot more creative liberty

00:26:17.230 --> 00:26:18.880
with data visualization.

00:26:18.880 --> 00:26:21.842
It's using the background and
the color of the background--

00:26:21.842 --> 00:26:23.550
the texture and color
of the background--

00:26:23.550 --> 00:26:25.920
to render some data.

00:26:25.920 --> 00:26:28.540
So if they were to hook this
up to a range value type,

00:26:28.540 --> 00:26:32.520
then maybe as it
gets warmer outside,

00:26:32.520 --> 00:26:34.114
the watch face gets redder.

00:26:34.114 --> 00:26:36.280
BRETT LIDER: Our watches
were red all day yesterday.

00:26:36.280 --> 00:26:38.780
DAN KOULOMZIN: Yeah, our watches
were red all day yesterday.

00:26:38.780 --> 00:26:41.400
And I think my face may have
gotten redder in the sun too.

00:26:41.400 --> 00:26:43.250
All right.

00:26:43.250 --> 00:26:46.376
So Watch Faces
2.0-- it's a nice,

00:26:46.376 --> 00:26:48.000
it's a huge change
actually, to the way

00:26:48.000 --> 00:26:51.680
watch faces are going to
be as user experiences

00:26:51.680 --> 00:26:53.995
and as developer experiences
on Android Wear 2.0.

00:26:53.995 --> 00:26:56.120
I think it's really going
to unlock some great form

00:26:56.120 --> 00:26:57.453
and function for the watch face.

00:27:01.310 --> 00:27:02.860
All right, let's
get on to messaging.

00:27:02.860 --> 00:27:06.010
So Android Wear has always been
a great platform for receiving

00:27:06.010 --> 00:27:07.360
and replying to messages.

00:27:07.360 --> 00:27:11.240
We want to make that
experience last longer

00:27:11.240 --> 00:27:13.210
and make it more conversational.

00:27:13.210 --> 00:27:15.020
So you could get
back to messages

00:27:15.020 --> 00:27:17.052
as you go through your day.

00:27:17.052 --> 00:27:19.010
So we started by looking
at what we have today,

00:27:19.010 --> 00:27:22.180
and I just want to walk
you through what we saw.

00:27:22.180 --> 00:27:24.860
So here I've gotten a
message from my friend Jim.

00:27:24.860 --> 00:27:27.820
We've been chatting about
my friend Charles's new dog.

00:27:27.820 --> 00:27:30.140
And he's asking,
what's the name?

00:27:30.140 --> 00:27:32.150
So I'm going to swipe over.

00:27:32.150 --> 00:27:34.630
I'm going to touch reply,
and I'll speak my reply.

00:27:34.630 --> 00:27:36.130
The dog's name is
Brooklyn, which is

00:27:36.130 --> 00:27:38.580
a pretty cute name for a dog.

00:27:38.580 --> 00:27:40.026
And then I get
this nice checkmark

00:27:40.026 --> 00:27:41.900
that tells me that the
message has been sent,

00:27:41.900 --> 00:27:43.110
and I feel great.

00:27:43.110 --> 00:27:46.254
And then I realize, actually,
my friend with the dog, Charles,

00:27:46.254 --> 00:27:47.420
is looking for a dog walker.

00:27:47.420 --> 00:27:50.040
So I'd like to actually
tell Jim, hey, maybe

00:27:50.040 --> 00:27:51.480
this would be awesome for you.

00:27:51.480 --> 00:27:53.750
And so I go back to the
stream and look for that card,

00:27:53.750 --> 00:27:54.790
and it's gone.

00:27:54.790 --> 00:27:58.741
And this is actually because
the messaging app has marked

00:27:58.741 --> 00:28:00.740
the conversation as read
because it acted on it,

00:28:00.740 --> 00:28:02.240
and it's withdrawn
the notification.

00:28:02.240 --> 00:28:05.440
So now I kind of have to hassle
to get back to my friend.

00:28:05.440 --> 00:28:09.940
So let's see what we've done
now in Android Wear 2.0.

00:28:09.940 --> 00:28:12.964
You can see that there's
a big visual change.

00:28:12.964 --> 00:28:14.880
And we've added-- I just
want to draw your eye

00:28:14.880 --> 00:28:16.050
to this icon at the bottom.

00:28:16.050 --> 00:28:19.767
That's actually an in-line
action, in this case,

00:28:19.767 --> 00:28:20.600
it's a reply action.

00:28:20.600 --> 00:28:22.349
And it's super easy
for users to discover.

00:28:22.349 --> 00:28:23.900
It's right there on the card.

00:28:23.900 --> 00:28:25.560
And when they
touch that, they're

00:28:25.560 --> 00:28:29.340
going to get to this
new remote input UI.

00:28:29.340 --> 00:28:33.480
As you can see, we're offering
choices now on the input method

00:28:33.480 --> 00:28:36.769
that you pick to
talk or to respond.

00:28:36.769 --> 00:28:38.810
And voice is still there
in case you're on the go

00:28:38.810 --> 00:28:40.268
or don't have your
hands available.

00:28:40.268 --> 00:28:42.770
But we also now have
touch-based input methods.

00:28:42.770 --> 00:28:45.200
And it's an entire
input method framework.

00:28:45.200 --> 00:28:48.590
So our creative
partner, TouchPal

00:28:48.590 --> 00:28:51.040
has made this nice
new watch face.

00:28:51.040 --> 00:28:52.900
And you'll be able
to make watch faces.

00:28:52.900 --> 00:28:54.608
And when users download
and install them,

00:28:54.608 --> 00:28:58.280
they'll be ready to go for
when users want to type.

00:28:58.280 --> 00:28:59.650
And so now I've sent my message.

00:28:59.650 --> 00:29:01.090
I see it appear
right in the card,

00:29:01.090 --> 00:29:02.770
and the card doesn't go away.

00:29:02.770 --> 00:29:04.321
And this happens
for two reasons.

00:29:04.321 --> 00:29:06.070
The first is we're
using the new messaging

00:29:06.070 --> 00:29:08.460
style for notifications that's
been added in Android N,

00:29:08.460 --> 00:29:11.710
and it's also on
Android Wear 2.0.

00:29:11.710 --> 00:29:14.114
And that's going to allow
the UI to take that reply

00:29:14.114 --> 00:29:15.530
and just put it
right on the card.

00:29:15.530 --> 00:29:18.270
It knows where to put it,
because of the clearly defined

00:29:18.270 --> 00:29:20.330
semantics of the message.

00:29:20.330 --> 00:29:24.390
And also we're asking developers
not to retract messages

00:29:24.390 --> 00:29:26.560
until they know that the
user has dismissed them.

00:29:26.560 --> 00:29:29.060
And we think that that's going
to create that longer running

00:29:29.060 --> 00:29:30.870
conversational experience.

00:29:30.870 --> 00:29:33.550
And in general,
notifications on Wear 2.0

00:29:33.550 --> 00:29:36.500
are going to be a lot more like
they are on phones and tablets.

00:29:36.500 --> 00:29:38.560
On a phone or a tablet,
you have this expectation

00:29:38.560 --> 00:29:40.960
that if you swipe
down on a shade

00:29:40.960 --> 00:29:43.480
and you touch a notification,
you get to an experience

00:29:43.480 --> 00:29:46.320
that, for the app that
submitted the notification,

00:29:46.320 --> 00:29:48.340
you get to a part of that
app where you can then

00:29:48.340 --> 00:29:51.100
act on whatever you've seen.

00:29:51.100 --> 00:29:53.560
And we want that to work
the same for Android Wear.

00:29:53.560 --> 00:29:55.890
So we're asking developers
to set the Content

00:29:55.890 --> 00:29:58.530
Intent to drive users
back to your carefully

00:29:58.530 --> 00:30:00.420
crafted experiences.

00:30:00.420 --> 00:30:03.470
Now if you're using notification
bridging, what happens?

00:30:03.470 --> 00:30:07.112
So in this case, there
isn't an app on the watch.

00:30:07.112 --> 00:30:08.070
But we have a solution.

00:30:08.070 --> 00:30:11.330
So we decided to make a
great expanded notification

00:30:11.330 --> 00:30:13.850
experience, and this works
for all notifications.

00:30:13.850 --> 00:30:16.450
When you touch a notification,
you launch into it.

00:30:16.450 --> 00:30:19.330
And it kind of stands
in for the app.

00:30:19.330 --> 00:30:22.180
And for messaging,
especially, we're

00:30:22.180 --> 00:30:24.510
able to present an
experience that's

00:30:24.510 --> 00:30:27.860
a lot like with the best of
what we see in messaging apps.

00:30:27.860 --> 00:30:30.290
So because of all the data
you add in your messaging

00:30:30.290 --> 00:30:32.500
style for the notification,
we can show you

00:30:32.500 --> 00:30:33.840
conversation history.

00:30:33.840 --> 00:30:35.970
Your messages come
in the right place.

00:30:35.970 --> 00:30:37.800
And we've also added
a smart replies

00:30:37.800 --> 00:30:41.520
API that lets Android
Wear insert contextually

00:30:41.520 --> 00:30:42.749
appropriate possible replies.

00:30:42.749 --> 00:30:44.540
And it does that using
the machine learning

00:30:44.540 --> 00:30:46.607
model right on the device.

00:30:46.607 --> 00:30:48.940
And of course, as you use
your conversational apps more,

00:30:48.940 --> 00:30:51.720
they show up on the launcher
in the recent section,

00:30:51.720 --> 00:30:53.090
so they're easy to get back to.

00:30:53.090 --> 00:30:58.947
And the new complications will
allow users to add shortcuts

00:30:58.947 --> 00:31:01.530
to conversations and people they
care about right on the watch

00:31:01.530 --> 00:31:02.030
face.

00:31:02.030 --> 00:31:03.720
So my partner is
just one touch away.

00:31:06.280 --> 00:31:09.399
So messaging just got a
lot more conversational.

00:31:09.399 --> 00:31:11.190
We now have in-line
actions that are easily

00:31:11.190 --> 00:31:12.899
discoverable and easy to use.

00:31:12.899 --> 00:31:14.940
We have in-line replies
so messages show up right

00:31:14.940 --> 00:31:16.870
in the right place.

00:31:16.870 --> 00:31:19.169
We have content intents
that launch apps,

00:31:19.169 --> 00:31:20.710
and of course,
expanded notifications

00:31:20.710 --> 00:31:23.780
that stand in for those
apps when they're not there.

00:31:23.780 --> 00:31:26.630
The App Launcher is
much faster to get back

00:31:26.630 --> 00:31:27.896
to conversational apps.

00:31:27.896 --> 00:31:30.270
And saved conversations-- you
can save your conversations

00:31:30.270 --> 00:31:32.061
and put them right on
the watch face so you

00:31:32.061 --> 00:31:33.880
can get back to them easily.

00:31:33.880 --> 00:31:34.380
All right.

00:31:34.380 --> 00:31:38.490
Back over to Brett for
hearing about the Fit

00:31:38.490 --> 00:31:39.880
platform on Android Wear.

00:31:39.880 --> 00:31:41.390
Thank you.

00:31:41.390 --> 00:31:43.787
[APPLAUSE]

00:31:48.776 --> 00:31:51.150
BRETT LIDER: So as we've heard
from users and developers,

00:31:51.150 --> 00:31:57.130
users want more from
their wearable experiences

00:31:57.130 --> 00:31:59.350
in terms of helping them
reach their fitness goals.

00:31:59.350 --> 00:32:01.750
And developers wanted more
out of the Fit platform

00:32:01.750 --> 00:32:03.480
in terms of being
able to help users.

00:32:03.480 --> 00:32:06.240
So we've heard that feedback,
and we have a bunch of stuff

00:32:06.240 --> 00:32:08.520
to talk about in the
fitness platform.

00:32:08.520 --> 00:32:12.550
So we're doing three things in
2016-- real-time data update

00:32:12.550 --> 00:32:15.720
notifications, so that you can
drive contextual notifications

00:32:15.720 --> 00:32:18.990
and experiences for users;
real-time gym activity

00:32:18.990 --> 00:32:23.390
recognition, so that untapped
experience of being in the gym

00:32:23.390 --> 00:32:27.670
can get a lot better with
a wearable fitness app;

00:32:27.670 --> 00:32:29.610
and the one I'm
really excited about,

00:32:29.610 --> 00:32:32.470
a really magical one, which
is real-time walking, running,

00:32:32.470 --> 00:32:34.500
and bicycling recognition.

00:32:34.500 --> 00:32:35.830
So let's talk about these.

00:32:35.830 --> 00:32:38.460
So real-time data
update notifications

00:32:38.460 --> 00:32:40.180
allow you to set
a pending intent

00:32:40.180 --> 00:32:44.250
to get updates on any of these
data types in the Fit platform.

00:32:44.250 --> 00:32:47.730
Concretely, it means
that an app like Lifesum

00:32:47.730 --> 00:32:52.610
can look for when I've stopped a
fitness activity, like the walk

00:32:52.610 --> 00:32:53.616
I went on this morning.

00:32:53.616 --> 00:32:55.865
And it can say, hey, you
should have a glass of water,

00:32:55.865 --> 00:32:58.670
based on the length
of that activity.

00:32:58.670 --> 00:33:00.570
Or if I did a long bike
ride, it might say,

00:33:00.570 --> 00:33:04.270
you should have two or
three glasses of water.

00:33:04.270 --> 00:33:06.330
And call back to our
earlier experience,

00:33:06.330 --> 00:33:10.150
if I have overeaten a little
bit, and log that in an app,

00:33:10.150 --> 00:33:13.350
another app can look at that and
say, hey to get back on track,

00:33:13.350 --> 00:33:17.360
maybe eat a little less or
do a little bit of a workout.

00:33:17.360 --> 00:33:20.530
So these kind of real-time,
contextually-driven

00:33:20.530 --> 00:33:23.090
notifications are just
a lot more possible

00:33:23.090 --> 00:33:24.370
in Android Wear 2.0.

00:33:24.370 --> 00:33:27.400
And we're looking forward
to what you do with them.

00:33:27.400 --> 00:33:30.230
Second, is that we're
working on an API

00:33:30.230 --> 00:33:32.720
for launching later
this year, that actually

00:33:32.720 --> 00:33:35.530
recognizes the actions that
people are doing in the gym.

00:33:35.530 --> 00:33:41.090
So that means that bicep curl,
deadlifts, push-ups, squats can

00:33:41.090 --> 00:33:44.180
all be recognized in real time.

00:33:44.180 --> 00:33:46.450
And then you can build
fitness experiences

00:33:46.450 --> 00:33:50.990
around that for
people's gym time.

00:33:50.990 --> 00:33:55.390
Third is recognizing outdoor
activities such as walking,

00:33:55.390 --> 00:33:56.300
running, and cycling.

00:33:56.300 --> 00:33:58.750
This means that the user,
just by wearing their wearable

00:33:58.750 --> 00:34:02.500
and starting a run, the app that
they want to launch when they

00:34:02.500 --> 00:34:05.170
start that activity will
just launch and support

00:34:05.170 --> 00:34:06.170
that activity.

00:34:06.170 --> 00:34:08.620
So for me, that's Strava.

00:34:08.620 --> 00:34:11.030
And I can't wait to
actually use this

00:34:11.030 --> 00:34:15.300
so that I don't have to fiddle
with my watch to launch an app

00:34:15.300 --> 00:34:16.230
to support my run.

00:34:16.230 --> 00:34:18.840
We're really excited
about this one.

00:34:18.840 --> 00:34:23.540
So that's all the fitness
stuff for Android Wear 2.0.

00:34:23.540 --> 00:34:25.620
And then just in
summary, we've made

00:34:25.620 --> 00:34:27.840
a lot of improvements
across the entire platform--

00:34:27.840 --> 00:34:31.920
fitness, messaging, the
watch face, standalone apps,

00:34:31.920 --> 00:34:33.639
and a new user interface
and app patterns

00:34:33.639 --> 00:34:37.170
to tie it all together.

00:34:37.170 --> 00:34:38.750
But this is a developer preview.

00:34:38.750 --> 00:34:40.480
So we want to hear from you.

00:34:40.480 --> 00:34:42.250
So come talk to us.

00:34:42.250 --> 00:34:44.610
Come talk to Dan and
I after the talk.

00:34:44.610 --> 00:34:49.679
Go to g.co/wearpreview and
you can download developer

00:34:49.679 --> 00:34:53.540
guidelines, designer
guidelines, the new emulator,

00:34:53.540 --> 00:34:55.810
and system images for
a couple of watches,

00:34:55.810 --> 00:34:58.252
DAN KOULOMZIN: Yeah, and this
developer preview is it's

00:34:58.252 --> 00:34:59.960
not just about us
telling you what to do.

00:34:59.960 --> 00:35:01.980
We also want to hear
what you need from us.

00:35:01.980 --> 00:35:05.831
So please do, let's start
the conversation real soon.

00:35:05.831 --> 00:35:06.330
Thank you.

00:35:06.330 --> 00:35:07.705
BRETT LIDER: Thank
you, everyone.

00:35:07.705 --> 00:35:09.030
[APPLAUSE]

00:35:09.030 --> 00:35:10.580
[MUSIC PLAYING]

