WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.967
[MUSIC PLAYING]

00:00:01.967 --> 00:00:03.300
COLT MCANLIS: So let's be clear.

00:00:03.300 --> 00:00:06.990
Launch screens are all the rage
nowadays with material design.

00:00:06.990 --> 00:00:10.420
But you have to make sure that
you do it in the right way.

00:00:10.420 --> 00:00:13.030
My name is Colt McAnlis, and
doing launch screens properly

00:00:13.030 --> 00:00:15.380
results in a great
branded experience.

00:00:15.380 --> 00:00:19.290
But the wrong way could hurt the
user perception of performance.

00:00:19.290 --> 00:00:21.370
Remember, when the
user launches your app,

00:00:21.370 --> 00:00:24.110
they'll be shown a launch
screen while your app is loading

00:00:24.110 --> 00:00:25.380
and getting ready to display.

00:00:25.380 --> 00:00:27.260
If your application
launches pretty quick,

00:00:27.260 --> 00:00:30.220
then this preview window is only
displayed for a quick flash,

00:00:30.220 --> 00:00:31.690
and then your app will appear.

00:00:31.690 --> 00:00:34.160
However, if you have a
slow-loading experience,

00:00:34.160 --> 00:00:36.580
this image can hang around on
screen for quite some time,

00:00:36.580 --> 00:00:38.500
causing users to
either exit out.

00:00:38.500 --> 00:00:40.400
Or you could get the
dreaded Application

00:00:40.400 --> 00:00:42.120
Not Responding dialog.

00:00:42.120 --> 00:00:46.520
Now, some developers, in
order to hide this slow launch

00:00:46.520 --> 00:00:50.100
experience, decide to theme
their app's launch screen so

00:00:50.100 --> 00:00:52.340
that it's thematically
consistent with the rest

00:00:52.340 --> 00:00:54.890
of the app rather than looking
like the system theme start

00:00:54.890 --> 00:00:55.570
window.

00:00:55.570 --> 00:00:56.300
Let's be clear.

00:00:56.300 --> 00:00:59.340
While this seems like it
solves the problem, it doesn't.

00:00:59.340 --> 00:01:01.510
See, in this scenario, the
screen may look better.

00:01:01.510 --> 00:01:03.430
But that doesn't make
it immune to users

00:01:03.430 --> 00:01:06.862
exiting due to slow load times
or the ANR dialog popping up.

00:01:06.862 --> 00:01:08.820
Basically, you're just
covering up the problem.

00:01:08.820 --> 00:01:12.520
Another way to cover this up is
to turn off the initial startup

00:01:12.520 --> 00:01:15.292
window using the Window
Disable Preview attribute.

00:01:15.292 --> 00:01:17.500
When you do this, rather
than the launch screen being

00:01:17.500 --> 00:01:19.027
displayed, nothing is shown.

00:01:19.027 --> 00:01:21.360
So the Home screen sticks
around until your app suddenly

00:01:21.360 --> 00:01:22.180
pops up.

00:01:22.180 --> 00:01:25.490
This feels like a different
problem to the user--

00:01:25.490 --> 00:01:27.940
basically, what appears
to be the screen freezing

00:01:27.940 --> 00:01:29.670
or stop responding to input.

00:01:29.670 --> 00:01:31.890
And they sit there and just
jam their finger at it.

00:01:31.890 --> 00:01:35.890
Listen, user perception of your
launch time is really important

00:01:35.890 --> 00:01:37.474
and not something
you want to mess up.

00:01:37.474 --> 00:01:39.848
So if you're going to put in
some launch screen branding,

00:01:39.848 --> 00:01:41.280
make sure to do
it the right way.

00:01:41.280 --> 00:01:43.065
First, you should
address your load time

00:01:43.065 --> 00:01:44.190
issues of your application.

00:01:44.190 --> 00:01:46.270
Now, things like
long view inflation,

00:01:46.270 --> 00:01:49.390
lots of object instantiation, or
too many resources being loaded

00:01:49.390 --> 00:01:52.450
are common things which can
be fixed to allow a faster

00:01:52.450 --> 00:01:53.700
experience for your users.

00:01:53.700 --> 00:01:55.960
Check out the videos that
we've done on those topics.

00:01:55.960 --> 00:01:58.850
When that's done, and
only when that's done,

00:01:58.850 --> 00:02:00.850
you can think about
your loading screens.

00:02:00.850 --> 00:02:03.742
And if you're going to do
it, do it the right way.

00:02:03.742 --> 00:02:05.450
Rather than disabling
the Preview window,

00:02:05.450 --> 00:02:08.669
it's recommended to follow the
common material design patterns

00:02:08.669 --> 00:02:10.470
and provide a simple
custom drawable

00:02:10.470 --> 00:02:11.862
for the starting activity.

00:02:11.862 --> 00:02:13.820
This will cause your app
to display your custom

00:02:13.820 --> 00:02:16.627
drawable as a Startup window
rather than the default one.

00:02:16.627 --> 00:02:18.460
However, once it's time
for the app to load,

00:02:18.460 --> 00:02:19.918
you need to set
your activity theme

00:02:19.918 --> 00:02:23.430
to the real theme you want
inside of your onCreate method.

00:02:23.430 --> 00:02:25.520
The result is a nice
branding experience,

00:02:25.520 --> 00:02:28.600
coupled with quick load times,
resulting in happier users.

00:02:28.600 --> 00:02:30.600
And that's really what
performance is all about,

00:02:30.600 --> 00:02:31.100
right?

00:02:31.100 --> 00:02:32.669
Faster apps leading
to happier users?

00:02:32.669 --> 00:02:34.960
That's why you should check
out the rest of the Android

00:02:34.960 --> 00:02:36.190
Performance Patterns content.

00:02:36.190 --> 00:02:38.930
And don't forget to join our
Google+ community for other

00:02:38.930 --> 00:02:40.330
great tips and tricks.

00:02:40.330 --> 00:02:43.820
So keep calm, profile your
code, and always remember,

00:02:43.820 --> 00:02:44.850
perf matters.

00:02:44.850 --> 00:02:47.300
[MUSIC PLAYING]

