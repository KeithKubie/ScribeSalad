WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:02.990
Consider now the data
that we're going to use.

00:00:02.990 --> 00:00:06.585
We're going to have features that
we've computed, these are things like

00:00:06.585 --> 00:00:11.630
Bollinger bands and momentum and
price change and things like that.

00:00:11.630 --> 00:00:18.200
We're going to use these features to try
and predict prices or price changes.

00:00:18.200 --> 00:00:22.080
So this is our X data, and
if we've got multiple features,

00:00:22.080 --> 00:00:24.460
we've got multiple dimensions in X.

00:00:24.460 --> 00:00:30.590
So this might be X1, X2, X3, and so on.

00:00:30.590 --> 00:00:34.660
And this is our Y data,
which we're trying to predict.

00:00:34.660 --> 00:00:38.460
In order to evaluate our learning
algorithms in a scientific manner

00:00:38.460 --> 00:00:43.040
we need to split this data
into at least two sections.

00:00:43.040 --> 00:00:46.160
A training section and
a testing section.

00:00:46.160 --> 00:00:49.810
If we trained over the same
data that we tested over,

00:00:49.810 --> 00:00:53.310
the results would be suspicious
because we should obviously be able

00:00:53.310 --> 00:00:57.640
to do very well if we test over
the same data we trained on.

00:00:57.640 --> 00:01:00.400
This procedure of separating testing and

00:01:00.400 --> 00:01:05.120
training data from one another
is called out of sample testing.

00:01:05.120 --> 00:01:08.450
This is a very important and
essential technique.

00:01:08.450 --> 00:01:13.220
We'll call the X data that we use for
training, Xtrain and

00:01:13.220 --> 00:01:16.750
the Y data that we use for
training, Ytrain.

00:01:16.750 --> 00:01:22.380
Similarly, the data we'll test
on will be split into X and

00:01:22.380 --> 00:01:24.980
Y sections, Xtest and Ytest.

00:01:24.980 --> 00:01:29.051
So the general idea here is that
we'll take our Xtrain data and

00:01:29.051 --> 00:01:33.831
our Ytrain data, run that through
our machine learning algorithm which

00:01:33.831 --> 00:01:37.960
might be linear regression or
KNN to generate a model.

00:01:37.960 --> 00:01:43.760
We can then test the accuracy
of that model using this data.

00:01:43.760 --> 00:01:50.460
So, the input to the model is Xtest,
so we plug that X data into the model,

00:01:50.460 --> 00:01:54.830
and out comes something, some kind of Y.

00:01:54.830 --> 00:02:01.700
And the question is, is that Y equal to
this Y which we know is ground truth.

00:02:02.770 --> 00:02:07.000
The more closely the model
outputs a Y that reflects

00:02:07.000 --> 00:02:11.550
this Xtest data,
the more accurate the model is.

00:02:11.550 --> 00:02:15.110
Something that I didn't mention,
is that in this class,

00:02:15.110 --> 00:02:17.800
our data is time oriented.

00:02:17.800 --> 00:02:21.160
So, as you move downward,
we're going forward in time.

00:02:22.200 --> 00:02:26.370
We typically split the data
up according to time.

00:02:26.370 --> 00:02:31.480
We train our model on older data and
test it on newer data.

00:02:31.480 --> 00:02:34.530
It's generally frowned
upon to do the reverse.

00:02:34.530 --> 00:02:37.260
You might argue, well this
data's different than that data.

00:02:37.260 --> 00:02:39.080
It's still out of sample.

00:02:39.080 --> 00:02:44.920
But there are certain look-ahead
biases that can occur

00:02:44.920 --> 00:02:49.380
if you were to train on later data and
test on earlier data.

