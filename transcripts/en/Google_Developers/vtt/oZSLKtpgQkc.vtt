WEBVTT
Kind: captions
Language: en

00:00:12.110 --> 00:00:14.610
TIMOTHY JORDAN: Welcome to the
Glass Development Kit sneak

00:00:14.610 --> 00:00:15.480
peek.

00:00:15.480 --> 00:00:16.009
Come on.

00:00:16.009 --> 00:00:17.126
This is cool.

00:00:17.126 --> 00:00:22.819
[APPLAUSE]

00:00:22.819 --> 00:00:23.610
TIMOTHY JORDAN: Hi.

00:00:23.610 --> 00:00:24.520
I'm Timothy Jordan.

00:00:24.520 --> 00:00:26.570
I'll be your developer
advocate for the next,

00:00:26.570 --> 00:00:29.230
I don't know, forever.

00:00:29.230 --> 00:00:32.270
You can reach me online at
google.com/+TimothyJordan,

00:00:32.270 --> 00:00:34.840
because the conversation
doesn't need to end here.

00:00:34.840 --> 00:00:39.310
Also check out
 developers.google.com/glass/community.

00:00:39.310 --> 00:00:42.340
You can find links to our
Stack Overflow tag, our issue

00:00:42.340 --> 00:00:44.700
tracker, and we can
continue hanging out

00:00:44.700 --> 00:00:47.360
even when we're not in a room,
because the internet is really

00:00:47.360 --> 00:00:48.920
that cool.

00:00:48.920 --> 00:00:51.210
We've got a lot to
talk about today.

00:00:51.210 --> 00:00:54.341
Just a handful of things that we
need to do are up on the board

00:00:54.341 --> 00:00:54.840
here.

00:00:54.840 --> 00:00:57.125
We're going to talk
about the Glass platform.

00:00:57.125 --> 00:01:00.580
We're going to talk about
the components, the building

00:01:00.580 --> 00:01:02.535
blocks of Glassware.

00:01:02.535 --> 00:01:03.910
We're going to
spend a little bit

00:01:03.910 --> 00:01:06.500
time of asking the
question, what is the GDK?

00:01:06.500 --> 00:01:08.120
But it's not that existential.

00:01:08.120 --> 00:01:10.700
It's very clear and
straightforward.

00:01:10.700 --> 00:01:13.360
And then we're going to look
at some development paradigms

00:01:13.360 --> 00:01:14.960
or patterns for Glass.

00:01:14.960 --> 00:01:16.990
Does it sound like fun?

00:01:16.990 --> 00:01:17.490
All right.

00:01:17.490 --> 00:01:19.180
So let's jump into it.

00:01:19.180 --> 00:01:22.150
First off, I wanted to
say a note about Glass.

00:01:22.150 --> 00:01:25.180
Glass is this really
cool thing, as we all

00:01:25.180 --> 00:01:27.450
know in this room,
that gives us access

00:01:27.450 --> 00:01:31.420
to the technology that we love
without getting in the way.

00:01:31.420 --> 00:01:33.000
And that's very cool.

00:01:33.000 --> 00:01:35.270
But what's even
cooler is that it's

00:01:35.270 --> 00:01:38.290
a way to build services
for users that they

00:01:38.290 --> 00:01:43.597
can use in a natural and
everyday way in their lives.

00:01:43.597 --> 00:01:46.180
We knew this was awesome when
we started building the hardware

00:01:46.180 --> 00:01:47.660
and software at Google.

00:01:47.660 --> 00:01:50.297
We knew it was going to be
even cooler when you built

00:01:50.297 --> 00:01:51.880
the things that we
knew you were going

00:01:51.880 --> 00:01:53.890
to build on this platform.

00:01:53.890 --> 00:01:57.020
But even more exciting is the
stuff that we couldn't even

00:01:57.020 --> 00:01:59.080
have imagined that
you've started to build

00:01:59.080 --> 00:02:02.750
and you're yet to build now
that you have access to the GDK

00:02:02.750 --> 00:02:05.620
that really reaches these
users in their everyday lives

00:02:05.620 --> 00:02:09.030
in a way you could never do
before Glass was available.

00:02:09.030 --> 00:02:10.289
And that's the Glass platform.

00:02:10.289 --> 00:02:13.860
You've been building on it using
the Google Mirror API, which

00:02:13.860 --> 00:02:16.800
is a RESTful web-based API.

00:02:19.410 --> 00:02:23.270
And those services
that you've built,

00:02:23.270 --> 00:02:27.440
there's only a handful of them
that are available online.

00:02:27.440 --> 00:02:30.570
And even though it's early
days, 83% of Glass users

00:02:30.570 --> 00:02:34.660
have at least one of those third
party Glass services installed,

00:02:34.660 --> 00:02:37.484
which is a huge number
for just a handful that

00:02:37.484 --> 00:02:38.400
are available to them.

00:02:41.020 --> 00:02:43.840
Now again, the Mirror API
is what you built these on.

00:02:43.840 --> 00:02:46.970
And it's a cloud-based
API that allows

00:02:46.970 --> 00:02:50.090
you to insert timeline cards,
respond to user notifications,

00:02:50.090 --> 00:02:52.470
and do sharing from Glass.

00:02:52.470 --> 00:02:54.527
You can do a lot
with the Mirror API,

00:02:54.527 --> 00:02:55.860
but you've been asking for more.

00:02:55.860 --> 00:02:57.840
And we knew we needed
to give you more.

00:02:57.840 --> 00:02:59.240
That's why we built the GDK.

00:02:59.240 --> 00:03:03.860
We talked about this at
this last Google I/O,

00:03:03.860 --> 00:03:05.290
and we've been
building it since.

00:03:05.290 --> 00:03:08.360
And we're going to tell you
all the details about today.

00:03:08.360 --> 00:03:10.390
There are three
major things here

00:03:10.390 --> 00:03:14.090
that you can do on Glass now
that you couldn't do before.

00:03:14.090 --> 00:03:17.220
The first one is offline.

00:03:17.220 --> 00:03:21.630
You can now build code that runs
on Glass so the user can use it

00:03:21.630 --> 00:03:25.240
whether or not they're
connected to the internet.

00:03:25.240 --> 00:03:31.140
And you can also get real
time immediate user response.

00:03:31.140 --> 00:03:35.297
This is a Glassware
that's installed on Glass

00:03:35.297 --> 00:03:36.880
and the user can
interact with, and it

00:03:36.880 --> 00:03:38.838
doesn't need to do a
round trip to your service

00:03:38.838 --> 00:03:42.160
in the cloud to be able to
respond to a user request.

00:03:42.160 --> 00:03:45.500
And then, finally, deeper
access to hardware,

00:03:45.500 --> 00:03:48.000
such as the Accelerometer
and the GPS.

00:03:51.380 --> 00:03:54.930
Now these three things are cool.

00:03:54.930 --> 00:03:55.430
Trust me.

00:03:55.430 --> 00:03:56.020
They're very cool.

00:03:56.020 --> 00:03:57.010
And we're going
to get into detail

00:03:57.010 --> 00:03:58.870
about how these are
implemented in the GDK.

00:03:58.870 --> 00:04:01.000
But before we get there,
I want to show you.

00:04:01.000 --> 00:04:02.675
Should we do a demo right away?

00:04:02.675 --> 00:04:04.944
[APPLAUSE]

00:04:04.944 --> 00:04:05.735
TIMOTHY JORDAN: OK.

00:04:08.410 --> 00:04:11.450
This is Word Lens on Glass.

00:04:11.450 --> 00:04:15.430
And I don't know if you've
had this happen to you,

00:04:15.430 --> 00:04:16.870
but I've had it
quite a few times

00:04:16.870 --> 00:04:20.399
where I'm in a foreign country
and there's a sign like this.

00:04:20.399 --> 00:04:23.040
It's like that guy looks
like he's having so much fun.

00:04:23.040 --> 00:04:25.110
I want to do that.

00:04:25.110 --> 00:04:27.030
But maybe I should
read the sign first.

00:04:27.030 --> 00:04:28.342
You think?

00:04:28.342 --> 00:04:30.550
So typically what I'll do
is I'll have a travel book,

00:04:30.550 --> 00:04:32.383
and I'll flip through
and try and translate.

00:04:32.383 --> 00:04:35.140
Or if I happen to have a SIM
in my phone for that country,

00:04:35.140 --> 00:04:37.230
I'll bring up Google
Translate, and I'm

00:04:37.230 --> 00:04:39.210
trying to enter in the
foreign characters.

00:04:39.210 --> 00:04:42.960
But on Glass, as you'll see,
it's a way cooler experience.

00:04:42.960 --> 00:04:48.110
OK, Glass, translate this.

00:04:48.110 --> 00:04:49.910
I'm just going to
look at the sign,

00:04:49.910 --> 00:04:56.480
and through Glass I'm going
to see the translation.

00:04:56.480 --> 00:04:58.146
Which is pretty cool, huh?

00:04:58.146 --> 00:04:59.257
[APPLAUSE]

00:04:59.257 --> 00:05:00.590
TIMOTHY JORDAN: Thank you, Lisa.

00:05:03.230 --> 00:05:05.870
And I now know that I'm not
going to jump off that cliff,

00:05:05.870 --> 00:05:08.060
because I might
plummet to my death.

00:05:08.060 --> 00:05:10.080
That would be bad.

00:05:10.080 --> 00:05:11.462
So these demos,
I'm going to show

00:05:11.462 --> 00:05:12.670
you quite a few more of them.

00:05:12.670 --> 00:05:15.530
Remember, it's a cooler
experience on Glass

00:05:15.530 --> 00:05:17.025
when you actually
try it on Glass.

00:05:17.025 --> 00:05:18.900
And everybody in this
room will have a chance

00:05:18.900 --> 00:05:21.600
to try to all of these
demos a little bit later.

00:05:21.600 --> 00:05:26.550
But I want to show them to you
in the context of explaining

00:05:26.550 --> 00:05:29.760
the GDK, so please bear with
me, even though it's little bit

00:05:29.760 --> 00:05:33.440
more choppy and ressed
up on the screen.

00:05:33.440 --> 00:05:35.990
Now Word Lens does each
of those three things

00:05:35.990 --> 00:05:37.520
that you can now
do with the GDK.

00:05:37.520 --> 00:05:40.780
It does offline processing.

00:05:40.780 --> 00:05:43.170
All that translation
is happening directly

00:05:43.170 --> 00:05:46.000
on Glass without any
internet communication.

00:05:46.000 --> 00:05:48.230
You can switch languages.

00:05:48.230 --> 00:05:50.420
I could translate from
Spanish to English, English

00:05:50.420 --> 00:05:53.630
to Portuguese, quite a few
languages on Word Lens.

00:05:53.630 --> 00:05:56.240
And I can do all of that and
switch all of those languages

00:05:56.240 --> 00:05:58.120
immediately on Glass.

00:05:58.120 --> 00:06:01.560
Then, last but not least,
is it's accessing the camera

00:06:01.560 --> 00:06:04.970
and doing that overlay and
translation directly on Glass,

00:06:04.970 --> 00:06:07.910
accessing that
hardware directly.

00:06:07.910 --> 00:06:09.250
Pretty cool, huh?

00:06:09.250 --> 00:06:10.150
OK.

00:06:10.150 --> 00:06:13.782
Let's talk about the building
blocks of what makes Glassware.

00:06:13.782 --> 00:06:15.240
These are our
Glassware components,

00:06:15.240 --> 00:06:18.390
and there's three areas
that I'd like to talk about.

00:06:18.390 --> 00:06:20.960
First are types, what
kind of Glassware

00:06:20.960 --> 00:06:25.600
that you might want
to build, invocation,

00:06:25.600 --> 00:06:28.680
this is how you
start the Glassware,

00:06:28.680 --> 00:06:32.690
and elements, the
primary UI components

00:06:32.690 --> 00:06:35.880
that are presented to the user.

00:06:35.880 --> 00:06:38.434
With types-- and you'll
see all these listed there.

00:06:38.434 --> 00:06:40.100
They're very simple
and straightforward,

00:06:40.100 --> 00:06:43.087
like development on
Glass-- there's the GDK,

00:06:43.087 --> 00:06:45.420
which we're introducing today
and you're learn all about

00:06:45.420 --> 00:06:50.335
in the next however long
this takes, the Mirror API--

00:06:50.335 --> 00:06:53.200
this is what you've already
been doing with the cloud-based

00:06:53.200 --> 00:06:55.734
API-- and GDK+ Mirror.

00:06:55.734 --> 00:06:57.650
You can, in fact, use
both of these in a dance

00:06:57.650 --> 00:07:00.730
together for a single
user experience.

00:07:00.730 --> 00:07:03.260
For invocation,
typically users are

00:07:03.260 --> 00:07:06.135
going to start Glassware
via the OK Glass menu.

00:07:06.135 --> 00:07:08.800
This is a top-level
voice menu that

00:07:08.800 --> 00:07:11.460
can trigger your Glassware
either via the Mirror

00:07:11.460 --> 00:07:14.420
API or the GDK.

00:07:14.420 --> 00:07:20.210
Menu item on a timeline card, so
you can interact with Glassware

00:07:20.210 --> 00:07:23.360
and even start up
a GDK Glassware

00:07:23.360 --> 00:07:27.530
from the menu item on a
timeline card and timeline cards

00:07:27.530 --> 00:07:31.994
themselves, which are
inserted from the Mirror API.

00:07:31.994 --> 00:07:33.160
Then there's these elements.

00:07:33.160 --> 00:07:37.040
Let's actually dive deeper
into these elements.

00:07:37.040 --> 00:07:39.180
This is kind of
what they look like.

00:07:39.180 --> 00:07:41.180
The first one, live
card, this is something

00:07:41.180 --> 00:07:43.221
that you couldn't do on
Glass with the Mirror API

00:07:43.221 --> 00:07:45.350
but you can now do with the GDK.

00:07:45.350 --> 00:07:49.280
Now this is something that
gives developers the ability

00:07:49.280 --> 00:07:53.970
to draw directly into the
Glass timeline in real time.

00:07:53.970 --> 00:07:57.010
And the reason I chose
that particular example

00:07:57.010 --> 00:07:58.790
is that this is
stopwatch running

00:07:58.790 --> 00:08:02.070
on Glass with millisecond
updates on Glass.

00:08:02.070 --> 00:08:04.300
So you can actually see
that stopwatch count up,

00:08:04.300 --> 00:08:07.190
and you can scroll through Glass
to other parts of your timeline

00:08:07.190 --> 00:08:11.016
and scroll back, and that
card is still updating.

00:08:11.016 --> 00:08:13.390
Static cards, which you already
know from the Mirror API.

00:08:13.390 --> 00:08:15.360
This is a moment
in time that you

00:08:15.360 --> 00:08:17.180
insert into the
user's Glass timeline.

00:08:17.180 --> 00:08:19.230
It has a timestamp,
and it can interact

00:08:19.230 --> 00:08:21.590
with that card via
the menu items.

00:08:21.590 --> 00:08:25.440
Immersions, this is another
new thing with the GDK today.

00:08:25.440 --> 00:08:27.500
This is a focused
user experience

00:08:27.500 --> 00:08:29.820
where the rest of the Glass
UX kind of fades away,

00:08:29.820 --> 00:08:32.370
and they're focused on
just doing that task.

00:08:32.370 --> 00:08:34.179
You saw that with Word
Lens a moment ago,

00:08:34.179 --> 00:08:36.549
and I'll give you more examples.

00:08:36.549 --> 00:08:38.169
And then background services.

00:08:38.169 --> 00:08:41.503
Background services are web
services or GDK services

00:08:41.503 --> 00:08:42.919
that every once
in a while show up

00:08:42.919 --> 00:08:47.500
with timeline cards or
live cards or immersions.

00:08:47.500 --> 00:08:49.140
Let's look at an
actual flow here.

00:08:49.140 --> 00:08:51.880
This is a live card flow,
which you would typically

00:08:51.880 --> 00:08:55.500
start with an OK,
Glass voice command.

00:08:55.500 --> 00:08:57.780
It'll start up a
Glassware service.

00:08:57.780 --> 00:09:00.870
This is an Android service
that creates the live card

00:09:00.870 --> 00:09:02.605
and inserts it into
the Glass timeline.

00:09:05.110 --> 00:09:08.420
Live cards appear
to the left of Home.

00:09:08.420 --> 00:09:10.650
Your Home is your
clock, and to the right

00:09:10.650 --> 00:09:12.960
is everything that's sort
of fading into the past

00:09:12.960 --> 00:09:14.900
on your timeline, your
history if you will.

00:09:14.900 --> 00:09:17.950
And to the left is everything
that's happening right now

00:09:17.950 --> 00:09:19.160
or is about to happen.

00:09:19.160 --> 00:09:20.500
That includes live cards.

00:09:23.100 --> 00:09:25.430
Static cards are inserted
into the Glass timeline,

00:09:25.430 --> 00:09:27.850
and they appear to the right
of Home, as you'd expect

00:09:27.850 --> 00:09:32.630
and as you already know
from using the Mirror API.

00:09:32.630 --> 00:09:36.780
Now immersions, you start
with a voice command,

00:09:36.780 --> 00:09:40.360
and they take over the
Glass user experience.

00:09:40.360 --> 00:09:42.270
Unlike live cards where
if you swipe forward

00:09:42.270 --> 00:09:44.052
you go to the next
card in the timeline,

00:09:44.052 --> 00:09:46.010
immersions if you swipe
forward that's captured

00:09:46.010 --> 00:09:49.050
by that experience and maybe
used by that Glassware.

00:09:49.050 --> 00:09:52.395
So those gestures can be used
as part of the user experience.

00:09:55.510 --> 00:09:57.490
Then, finally, services.

00:09:57.490 --> 00:10:00.010
And again, these are
background services.

00:10:00.010 --> 00:10:04.310
Most Mirror API Glassware are
services and something that's

00:10:04.310 --> 00:10:07.530
running on the cloud constantly
and every once in a while

00:10:07.530 --> 00:10:09.280
throws a timeline card your way.

00:10:09.280 --> 00:10:13.020
You can also run GDK
Glassware as a service,

00:10:13.020 --> 00:10:16.700
and it will show up maybe
with a live card or perhaps

00:10:16.700 --> 00:10:21.140
an immersion when it's important
to the user for it to do so.

00:10:21.140 --> 00:10:21.680
OK.

00:10:21.680 --> 00:10:22.950
Those are building blocks.

00:10:22.950 --> 00:10:25.430
And I'm going to
describe each of these

00:10:25.430 --> 00:10:29.790
a little bit more later when we
get into the demos, more demos.

00:10:29.790 --> 00:10:32.020
But first, let's take a
step back and say, well,

00:10:32.020 --> 00:10:35.210
what is this GDK thing?

00:10:35.210 --> 00:10:38.960
The GDK is super
straightforward and simple.

00:10:38.960 --> 00:10:41.690
We worked really
hard to make sure

00:10:41.690 --> 00:10:44.389
that if you're an Android
developer developing for Glass

00:10:44.389 --> 00:10:45.180
would feel natural.

00:10:45.180 --> 00:10:48.010
It uses the same paradigms
that you're already used to.

00:10:48.010 --> 00:10:51.660
So we built the GDK with
standard Android APIs compiled

00:10:51.660 --> 00:10:55.790
for Glass so that when you use
those Android APIs on Glass

00:10:55.790 --> 00:10:59.740
it gives you the experience
that it should on Glass.

00:10:59.740 --> 00:11:02.975
And I'll describe some of
those in detail in a moment.

00:11:02.975 --> 00:11:05.050
For procedures
specific to Glass,

00:11:05.050 --> 00:11:07.030
we have a simple
add-on that you add

00:11:07.030 --> 00:11:11.630
into your already standard
Android development environment

00:11:11.630 --> 00:11:13.690
and gives you access to
those specific features,

00:11:13.690 --> 00:11:17.640
things like the live card or
the voice invocation commands.

00:11:20.791 --> 00:11:21.290
All right.

00:11:21.290 --> 00:11:24.000
Let's look at both those
lists in a bit more detail.

00:11:24.000 --> 00:11:30.090
The platform features are things
like the Location Provider.

00:11:30.090 --> 00:11:32.490
Now those of you that have
experienced directions

00:11:32.490 --> 00:11:34.785
on Glass, you know
that you need Glass

00:11:34.785 --> 00:11:36.160
tethered with your
Android phone,

00:11:36.160 --> 00:11:39.380
because Glass uses the
GPS from the phone.

00:11:39.380 --> 00:11:41.530
This complexity is
completely abstracted

00:11:41.530 --> 00:11:43.530
away when you're
building with the GDK.

00:11:43.530 --> 00:11:45.920
You use the normal
Location Provider,

00:11:45.920 --> 00:11:48.110
like you would on any
other Android device,

00:11:48.110 --> 00:11:50.780
and location will just
work when the user has

00:11:50.780 --> 00:11:53.720
that Android phone tethered.

00:11:53.720 --> 00:11:56.970
The camera intent also works
like it should on an Android

00:11:56.970 --> 00:11:59.310
device, but it'll
use the Glass camera.

00:11:59.310 --> 00:12:01.275
The recognizer
intent will start up

00:12:01.275 --> 00:12:06.300
the Glass-specific
speech-to-text UX.

00:12:06.300 --> 00:12:09.720
And then the Options menu,
it's just an Options menu

00:12:09.720 --> 00:12:11.110
like you would have on Android.

00:12:11.110 --> 00:12:16.150
Only on Glass, it will
render a Glass-specific menu.

00:12:16.150 --> 00:12:18.660
The add-on features,
these are new things.

00:12:18.660 --> 00:12:21.950
And you use the
add-on to get these.

00:12:21.950 --> 00:12:26.530
It's a voice trigger-- which
allows you to insert commands

00:12:26.530 --> 00:12:29.617
into the OK Glass menu--
gesture detection--

00:12:29.617 --> 00:12:31.450
so as you're moving
around on the touch pad,

00:12:31.450 --> 00:12:35.650
you can capture those gestures--
cards and card scroller-- which

00:12:35.650 --> 00:12:37.690
will allow you to
build timeline cards

00:12:37.690 --> 00:12:41.220
and arrange them on a mini
timeline in your Glassware,

00:12:41.220 --> 00:12:45.270
so the users can scroll through
them like a Glass timeline--

00:12:45.270 --> 00:12:47.350
and then live cards.

00:12:47.350 --> 00:12:50.210
Live cards are that way
that you can draw directly

00:12:50.210 --> 00:12:51.700
into the Glass timeline.

00:12:51.700 --> 00:12:56.910
With all these features,
you can build the same level

00:12:56.910 --> 00:13:00.390
of Glassware that's already
built into some of the system

00:13:00.390 --> 00:13:02.532
Glassware, such as Directions.

00:13:02.532 --> 00:13:03.990
But we also think
that you're going

00:13:03.990 --> 00:13:07.050
to build a lot of new
and interesting stuff.

00:13:07.050 --> 00:13:10.540
When users install
these Glassware,

00:13:10.540 --> 00:13:13.600
they go to MyGlass like normal,
and they hit that On button.

00:13:13.600 --> 00:13:16.369
And the APK is downloaded
to their Glass device.

00:13:16.369 --> 00:13:17.910
And it'll look like
this to the user.

00:13:17.910 --> 00:13:19.170
They'll see that card.

00:13:19.170 --> 00:13:21.270
They hit that On switch.

00:13:21.270 --> 00:13:23.950
Then on Glass, they
see a live card

00:13:23.950 --> 00:13:27.180
to the left of Home saying
Activating this Glassware.

00:13:27.180 --> 00:13:28.980
In this case, the
example is Word Lens.

00:13:28.980 --> 00:13:31.720
And as soon as the
entire APK is downloaded,

00:13:31.720 --> 00:13:33.170
that card moves
into the timeline,

00:13:33.170 --> 00:13:35.420
and it says Activated.

00:13:35.420 --> 00:13:37.800
Really simple flow for users.

00:13:37.800 --> 00:13:41.770
For Glassware that needs
authentication of an account--

00:13:41.770 --> 00:13:43.080
and this will be released soon.

00:13:43.080 --> 00:13:44.590
We're still hammering
out a few details,

00:13:44.590 --> 00:13:46.673
but it'll come out when
there's the full developer

00:13:46.673 --> 00:13:51.150
preview-- the user goes through
the normal install flow,

00:13:51.150 --> 00:13:54.090
but they're also given a
pop-up window to your web page

00:13:54.090 --> 00:13:55.450
where they sign in.

00:13:55.450 --> 00:13:59.000
Then you JSON encode an Android
Account Manager account,

00:13:59.000 --> 00:14:02.210
send that to a Google
API, and then Google

00:14:02.210 --> 00:14:03.830
will send that to
the user's Glass.

00:14:03.830 --> 00:14:06.460
So when they run the
Glassware on Glass,

00:14:06.460 --> 00:14:09.610
the Account Manager is already
populated with that account.

00:14:12.410 --> 00:14:15.490
The GDK has all these
features, and we're

00:14:15.490 --> 00:14:17.640
adding more all the time.

00:14:17.640 --> 00:14:21.150
What's going to be
released is a sneak peek.

00:14:21.150 --> 00:14:23.140
Next up is the
developer preview where

00:14:23.140 --> 00:14:25.440
we'll get things like OAuth
and even more features,

00:14:25.440 --> 00:14:27.189
hopefully based on a
lot of your feedback.

00:14:31.910 --> 00:14:32.410
OK.

00:14:32.410 --> 00:14:35.180
Now I want to give you
some really solid use cases

00:14:35.180 --> 00:14:38.650
and examples of great Glassware.

00:14:38.650 --> 00:14:41.670
And I'd like to do so
sort of in the perspective

00:14:41.670 --> 00:14:43.460
of these development patterns.

00:14:43.460 --> 00:14:45.870
There's about four
that we see developers

00:14:45.870 --> 00:14:47.230
using to build Glassware.

00:14:47.230 --> 00:14:51.420
And the first two you're already
doing with the Mirror API.

00:14:51.420 --> 00:14:53.220
One of these is
periodic notifications.

00:14:53.220 --> 00:14:55.275
You have a service in the cloud,
and every once in a while you

00:14:55.275 --> 00:14:56.608
want to tell the user something.

00:14:56.608 --> 00:14:58.840
So you send them
a timeline card.

00:14:58.840 --> 00:15:00.150
Another one is sharing.

00:15:00.150 --> 00:15:02.650
The user has an image on Glass
and they want to share it out

00:15:02.650 --> 00:15:06.010
to a Google+ circle and they
share that again with a Mirror

00:15:06.010 --> 00:15:09.029
API Glassware.

00:15:09.029 --> 00:15:10.820
The ones that I'm going
to dive deeper into

00:15:10.820 --> 00:15:13.160
are the GDK patterns
that you can do now

00:15:13.160 --> 00:15:16.250
but you couldn't do with Glass
before the GDK was available.

00:15:16.250 --> 00:15:18.290
One of those is ongoing tasks.

00:15:18.290 --> 00:15:19.810
The user's doing
something, and they

00:15:19.810 --> 00:15:22.490
want to frequently look
back at that ongoing task,

00:15:22.490 --> 00:15:24.345
either for information
or interact.

00:15:27.420 --> 00:15:29.410
The other one is immersion.

00:15:29.410 --> 00:15:32.419
Immersion is when the
user has a focused task.

00:15:32.419 --> 00:15:33.960
They want to stop
what they're doing,

00:15:33.960 --> 00:15:35.430
focus on this task
for a little while,

00:15:35.430 --> 00:15:36.850
and then when they
exit back they're

00:15:36.850 --> 00:15:38.433
back at their normal
Glass experience.

00:15:41.650 --> 00:15:44.720
For ongoing tasks, what
I'd like to show you--

00:15:44.720 --> 00:15:46.500
And for all these
partners, they've

00:15:46.500 --> 00:15:49.660
done an incredible job
of testing this API

00:15:49.660 --> 00:15:51.970
and finding our bugs
and really getting

00:15:51.970 --> 00:15:53.500
it ready for you to play with.

00:15:53.500 --> 00:15:57.300
But they also have really
cool Glassware, Glassware

00:15:57.300 --> 00:15:59.570
that I've enjoyed
using every day

00:15:59.570 --> 00:16:01.220
and we think you're
going to love too.

00:16:01.220 --> 00:16:04.300
One of those is Strava.

00:16:04.300 --> 00:16:06.730
Strava is a great service
built for athletes

00:16:06.730 --> 00:16:09.830
that helps you track
your runs and your rides.

00:16:09.830 --> 00:16:13.150
I don't know about you, but
I use Strava every time I'm

00:16:13.150 --> 00:16:13.930
on my bike.

00:16:13.930 --> 00:16:16.160
But I do find it kind of
annoying and difficult

00:16:16.160 --> 00:16:17.900
to get my phone out
of whatever pocket

00:16:17.900 --> 00:16:20.200
I've decided to stash it in.

00:16:20.200 --> 00:16:23.680
And when I'm riding, I still
want the benefits of Strava

00:16:23.680 --> 00:16:26.386
and I want to get that coaching
and I want to see that data,

00:16:26.386 --> 00:16:28.260
but I want to keep my
hands on the handlebars

00:16:28.260 --> 00:16:31.510
and keep focused on my path
and the experience of riding

00:16:31.510 --> 00:16:32.010
my bike.

00:16:32.010 --> 00:16:33.940
That's why I'm out there.

00:16:33.940 --> 00:16:37.707
With Strava on Glass, you
just speak to start tracking.

00:16:37.707 --> 00:16:39.540
You just look up to see
the information that

00:16:39.540 --> 00:16:40.560
matters to you.

00:16:40.560 --> 00:16:43.770
And you can see your
personal records

00:16:43.770 --> 00:16:47.900
relative to your best times
all by just looking up.

00:16:47.900 --> 00:16:49.325
Shall we take a look at this?

00:16:49.325 --> 00:16:50.255
[APPLAUSE]

00:16:50.255 --> 00:16:52.920
TIMOTHY JORDAN: OK.

00:16:52.920 --> 00:16:55.150
I'm spoofing
location on a tablet

00:16:55.150 --> 00:16:58.010
here so that it thinks that
I'm out there riding my bike.

00:16:58.010 --> 00:16:59.220
It works pretty well.

00:16:59.220 --> 00:17:00.670
We'll see how it looks.

00:17:00.670 --> 00:17:03.848
OK, Glass, start a bike ride.

00:17:06.599 --> 00:17:07.329
And there I am.

00:17:07.329 --> 00:17:10.060
Ooh, I'm going fast.

00:17:10.060 --> 00:17:12.240
That's great.

00:17:12.240 --> 00:17:14.880
The wind must be at my back.

00:17:14.880 --> 00:17:17.700
The great thing about
this is a couple things.

00:17:17.700 --> 00:17:19.770
All I did was say, OK,
Glass, start a bike ride,

00:17:19.770 --> 00:17:20.520
and it started.

00:17:20.520 --> 00:17:21.480
There were no settings.

00:17:21.480 --> 00:17:22.855
There were no
things to navigate.

00:17:22.855 --> 00:17:25.060
I wasn't looking for the app.

00:17:25.060 --> 00:17:25.990
It happened for me.

00:17:25.990 --> 00:17:27.670
And that's the Glass experience.

00:17:27.670 --> 00:17:29.470
Also, Glass went to standby.

00:17:29.470 --> 00:17:33.090
But if I want, I just
look up, and there's all

00:17:33.090 --> 00:17:34.280
my Strava information.

00:17:34.280 --> 00:17:36.980
It's pretty cool, right?

00:17:36.980 --> 00:17:40.422
And let's say if
I tap, you can see

00:17:40.422 --> 00:17:42.130
that I can go through
my Segment History.

00:17:42.130 --> 00:17:43.920
Those of you who use
Strava every day,

00:17:43.920 --> 00:17:45.860
you know they have
these cool segments.

00:17:45.860 --> 00:17:47.750
And one of the
things I like to do

00:17:47.750 --> 00:17:50.879
is if I know where the
segment is I ride faster,

00:17:50.879 --> 00:17:52.670
because that's the
thing that gets recorded

00:17:52.670 --> 00:17:54.720
and I can share with my friends.

00:17:54.720 --> 00:17:58.291
And typically, I
just sort of have

00:17:58.291 --> 00:17:59.540
to know where that segment is.

00:17:59.540 --> 00:18:01.800
Well, with Strava on
Glass, it tells me

00:18:01.800 --> 00:18:03.810
as I just start the
segment, about halfway

00:18:03.810 --> 00:18:05.860
through, and near
the end as well so

00:18:05.860 --> 00:18:07.700
that I'm really
charging as fast as I

00:18:07.700 --> 00:18:09.260
can so I can get that good time.

00:18:09.260 --> 00:18:11.630
And then as I pass
through the segments,

00:18:11.630 --> 00:18:15.340
it will load up Segment
History with what I've passed.

00:18:15.340 --> 00:18:17.740
And as the segment's
ongoing, it'll

00:18:17.740 --> 00:18:20.380
create an additional live
card, like this one right here.

00:18:20.380 --> 00:18:22.980
That was good timing.

00:18:22.980 --> 00:18:26.420
This is Hawk Hill, which is a
great climb in San Francisco.

00:18:26.420 --> 00:18:29.710
I have not done
it in six minutes.

00:18:29.710 --> 00:18:34.240
But maybe today I will
when I have pretend GPS.

00:18:34.240 --> 00:18:37.985
I can look at this,
and it's giving me

00:18:37.985 --> 00:18:40.650
my progress on this segment.

00:18:40.650 --> 00:18:45.920
Anyway, I'm going to go back
to the Strava experience here.

00:18:45.920 --> 00:18:49.940
I'm going to tap and hit Finish.

00:18:49.940 --> 00:18:52.580
It saved the ride, and
it's uploaded to Strava.

00:18:52.580 --> 00:18:55.060
And I can share it
with my friends later.

00:18:55.060 --> 00:18:56.496
Pretty cool, huh?

00:18:56.496 --> 00:19:02.227
[APPLAUSE]

00:19:02.227 --> 00:19:03.310
TIMOTHY JORDAN: All right.

00:19:03.310 --> 00:19:04.460
I just showed you the demo.

00:19:04.460 --> 00:19:08.450
I want to now look at the
flow just on a static page

00:19:08.450 --> 00:19:10.930
here and describe some
of the platform features

00:19:10.930 --> 00:19:15.250
that Strava is using
to make this happen.

00:19:15.250 --> 00:19:19.600
The voice command is
invoked by the user,

00:19:19.600 --> 00:19:22.140
and then this live
card is created.

00:19:22.140 --> 00:19:25.610
Now you'll notice that Strava
looks like a Glassware.

00:19:25.610 --> 00:19:27.850
It looks like the rest
of the Glass experience.

00:19:27.850 --> 00:19:29.980
It's consistent, and it's
familiar with the user.

00:19:29.980 --> 00:19:32.580
And that's because theming
is built into the SDK.

00:19:32.580 --> 00:19:35.500
So all of those minor
implementation details

00:19:35.500 --> 00:19:37.060
around colors and
fonts, you just

00:19:37.060 --> 00:19:39.470
get that free with the GDK.

00:19:39.470 --> 00:19:41.655
Also, they're using live
cards to draw directly

00:19:41.655 --> 00:19:44.450
into the timeline,
which means that time

00:19:44.450 --> 00:19:46.080
is ticking as you would expect.

00:19:46.080 --> 00:19:48.290
I can zoom around that
timeline, I can zoom out,

00:19:48.290 --> 00:19:50.140
and that live card
is still going.

00:19:50.140 --> 00:19:53.720
It's directly rendering
into my timeline.

00:19:53.720 --> 00:19:55.989
Then Strava is also
using authentication.

00:19:55.989 --> 00:19:58.030
To start this up, I use
the flow that I mentioned

00:19:58.030 --> 00:20:01.720
before where I clicked On, I
signed into my Strava account,

00:20:01.720 --> 00:20:03.710
that account got
sent down to Glass,

00:20:03.710 --> 00:20:07.900
and then Strava just used
it using the normal Android

00:20:07.900 --> 00:20:08.660
Account Manager.

00:20:11.410 --> 00:20:11.910
All right.

00:20:11.910 --> 00:20:14.120
Let me show you another one.

00:20:14.120 --> 00:20:20.270
And I'm going to need some
more GPS spoofing for this.

00:20:20.270 --> 00:20:24.400
This is GolfSight by SkyDroid.

00:20:24.400 --> 00:20:26.430
Golf is another
one of those things

00:20:26.430 --> 00:20:29.740
that I like to do where I do
not want technology in the way,

00:20:29.740 --> 00:20:31.750
but I still want
the benefits of it.

00:20:31.750 --> 00:20:33.430
For example, when
I'm choosing my club,

00:20:33.430 --> 00:20:35.780
I want to kind of how
far I am to the green.

00:20:35.780 --> 00:20:38.579
And that changes, as you
know, because you hit,

00:20:38.579 --> 00:20:39.870
and then you're in the fairway.

00:20:39.870 --> 00:20:42.540
Or in my case, you're
usually off to the right,

00:20:42.540 --> 00:20:45.490
and I'm not sure how
far I am to the green.

00:20:45.490 --> 00:20:48.250
But with GolfSight,
I'll always know

00:20:48.250 --> 00:20:50.190
how far I am both to
the front, middle,

00:20:50.190 --> 00:20:53.120
and the back of the green, the
hazards that are on the course,

00:20:53.120 --> 00:20:55.089
and all of that
just by looking up.

00:20:55.089 --> 00:20:55.880
You want to see it?

00:21:00.720 --> 00:21:01.220
OK.

00:21:01.220 --> 00:21:05.060
Let me just go ahead
and say, OK, Glass,

00:21:05.060 --> 00:21:06.050
start a round of golf.

00:21:10.360 --> 00:21:12.280
It's going to find a
nearby golf courses.

00:21:12.280 --> 00:21:13.900
And SkyDroid is so great.

00:21:13.900 --> 00:21:16.680
Even though I'm spoofing my
GPS and it's not working well,

00:21:16.680 --> 00:21:18.600
I can just select
the park that I want,

00:21:18.600 --> 00:21:23.690
which is Golden Gate
Park golf course.

00:21:23.690 --> 00:21:26.960
And it's going to load it up.

00:21:26.960 --> 00:21:28.450
There I am.

00:21:28.450 --> 00:21:31.670
There we are, 149
yards to the hole.

00:21:31.670 --> 00:21:35.910
And you'll notice this hole is a
par 3, which is my skill level,

00:21:35.910 --> 00:21:38.250
and I'd probably still hit a 5.

00:21:38.250 --> 00:21:41.847
And if I want, I can just tap
on this card and maybe swipe

00:21:41.847 --> 00:21:43.180
over to the hazards and targets.

00:21:43.180 --> 00:21:45.437
I know there's a bunker
just the right of the green.

00:21:45.437 --> 00:21:47.520
All this information I get
while I'm on the course

00:21:47.520 --> 00:21:49.180
without breaking my stride.

00:21:49.180 --> 00:21:52.240
And it's never in the way
when I don't want it to be.

00:21:52.240 --> 00:21:54.850
Once I get to that green,
and with a little bit

00:21:54.850 --> 00:21:58.737
of wishful thinking--
Let's say birdie, shall we?

00:21:58.737 --> 00:21:59.320
Let's pretend.

00:21:59.320 --> 00:22:01.880
It can be whatever I want.

00:22:01.880 --> 00:22:03.430
And now I'm on to
the second hole.

00:22:03.430 --> 00:22:04.650
Super simple.

00:22:04.650 --> 00:22:06.630
But everything that
I otherwise would

00:22:06.630 --> 00:22:08.150
have been like
ruffling in my bag

00:22:08.150 --> 00:22:10.560
or like, nah, maybe in
the middle of the fairway

00:22:10.560 --> 00:22:13.200
it knows, because it has
access to my location,

00:22:13.200 --> 00:22:14.730
and it's giving me
that information

00:22:14.730 --> 00:22:16.205
exactly when I need it.

00:22:16.205 --> 00:22:22.186
Let's go ahead and end
this round, and we're done.

00:22:22.186 --> 00:22:28.609
[APPLAUSE]

00:22:28.609 --> 00:22:29.400
TIMOTHY JORDAN: OK.

00:22:29.400 --> 00:22:30.700
That's GolfSight.

00:22:30.700 --> 00:22:34.570
Again, let me take a moment
to talk about the GDK features

00:22:34.570 --> 00:22:38.320
that GolfSight by
SkyDroid is using.

00:22:38.320 --> 00:22:43.210
There's voice invocation,
and then I select the course.

00:22:43.210 --> 00:22:49.770
And it lands on this page,
where I've got an Options menu.

00:22:49.770 --> 00:22:52.430
This Options menu is your
Android Options menu.

00:22:52.430 --> 00:22:55.570
But when it's rendered on
Glass, it's a Glass menu.

00:22:55.570 --> 00:22:58.690
That's that second row there.

00:22:58.690 --> 00:23:04.370
Also, they are using the
live card, like Strava,

00:23:04.370 --> 00:23:06.150
and the Location Provider.

00:23:06.150 --> 00:23:09.830
They're accessing GPS
all throughout my game

00:23:09.830 --> 00:23:12.440
to know exactly where
I am, and they're

00:23:12.440 --> 00:23:14.700
doing this like
normal on Android

00:23:14.700 --> 00:23:18.670
with the Location Provider.

00:23:18.670 --> 00:23:19.210
OK.

00:23:19.210 --> 00:23:23.385
Let's talk about this next
pattern, which is immersion.

00:23:23.385 --> 00:23:25.090
This is really new for Glass.

00:23:25.090 --> 00:23:28.900
It's when the user wants to have
a focused task in front of them

00:23:28.900 --> 00:23:31.240
where the rest of the
UI kind of fades away.

00:23:31.240 --> 00:23:34.440
And a great example
of this game play.

00:23:34.440 --> 00:23:34.940
The

00:23:34.940 --> 00:23:37.610
New form factors always open
up incredible possibilities

00:23:37.610 --> 00:23:38.560
for game play.

00:23:38.560 --> 00:23:41.610
And our friends at Glu
built this really cool game

00:23:41.610 --> 00:23:42.800
Spellista.

00:23:42.800 --> 00:23:46.510
One of my favorite things about
this is the natural interface.

00:23:46.510 --> 00:23:49.400
It allows me to play this
game completely hands-free.

00:23:49.400 --> 00:23:50.759
Shall we take a look?

00:23:50.759 --> 00:23:52.136
[APPLAUSE]

00:23:52.136 --> 00:23:56.625
TIMOTHY JORDAN: [LAUGHS] OK.

00:23:56.625 --> 00:23:59.900
OK, Glass, play a game.

00:23:59.900 --> 00:24:01.820
I love how simple that is.

00:24:01.820 --> 00:24:02.940
Here we are in Spellista.

00:24:02.940 --> 00:24:05.030
It's a word jumble
game, and I'm playing

00:24:05.030 --> 00:24:06.480
the level Under the Sea.

00:24:06.480 --> 00:24:09.090
I'm terrible at it, but Jeff in
the front row is really good.

00:24:09.090 --> 00:24:09.980
What is this?

00:24:09.980 --> 00:24:10.934
JEFF: Turtles.

00:24:10.934 --> 00:24:12.309
TIMOTHY JORDAN:
Oh, he's so good.

00:24:12.309 --> 00:24:15.566
[LAUGHTER]

00:24:15.566 --> 00:24:16.770
TIMOTHY JORDAN: Turtles.

00:24:16.770 --> 00:24:18.651
Is it L-E or E-L?

00:24:18.651 --> 00:24:22.651
JEFF: L-E.

00:24:22.651 --> 00:24:23.650
TIMOTHY JORDAN: Turtles.

00:24:23.650 --> 00:24:24.150
Yay.

00:24:24.150 --> 00:24:24.670
I win.

00:24:24.670 --> 00:24:27.151
That's so cool.

00:24:27.151 --> 00:24:27.650
JEFF: Crabs.

00:24:27.650 --> 00:24:28.566
TIMOTHY JORDAN: Crabs?

00:24:28.566 --> 00:24:29.420
OK.

00:24:29.420 --> 00:24:31.390
You guys don't mind if I just
play this for a little while,

00:24:31.390 --> 00:24:31.890
do you?

00:24:31.890 --> 00:24:33.530
That is fun.

00:24:33.530 --> 00:24:35.480
So super simple and easy.

00:24:35.480 --> 00:24:37.484
And I love playing this
just about any time

00:24:37.484 --> 00:24:38.900
during my day,
because it's always

00:24:38.900 --> 00:24:41.210
right there whenever I want it.

00:24:41.210 --> 00:24:46.010
Another cool thing about this
game is-- that was dolphins,

00:24:46.010 --> 00:24:49.660
I know-- they built this
really cool feature that

00:24:49.660 --> 00:24:51.690
lets me build my
own levels, and I

00:24:51.690 --> 00:24:53.260
can share them with my friends.

00:24:53.260 --> 00:24:58.270
And Lian built this Red
Sox Nation, go figure,

00:24:58.270 --> 00:24:59.860
level that I can play.

00:24:59.860 --> 00:25:02.780
She actually took
a picture on Glass

00:25:02.780 --> 00:25:06.180
and then spoke some words
aloud, and that just

00:25:06.180 --> 00:25:06.930
created the level.

00:25:06.930 --> 00:25:08.550
And she could send
it to me, again,

00:25:08.550 --> 00:25:10.410
from Glass, which
is a really cool way

00:25:10.410 --> 00:25:12.340
to stay in touch with
your friends and family

00:25:12.340 --> 00:25:13.884
when you're far away.

00:25:13.884 --> 00:25:14.675
AUDIENCE: New York.

00:25:14.675 --> 00:25:16.340
AUDIENCE: Boston.

00:25:16.340 --> 00:25:17.970
TIMOTHY JORDAN:
Somebody said New York,

00:25:17.970 --> 00:25:19.680
and I don't think it is.

00:25:23.170 --> 00:25:25.930
I wonder what the next one is.

00:25:25.930 --> 00:25:28.330
Again, very simple
and intuitive.

00:25:28.330 --> 00:25:30.540
And the interface
is just delightful,

00:25:30.540 --> 00:25:33.750
the way the scene moves
around as I look around.

00:25:33.750 --> 00:25:37.460
It's really glanceable and
still feels very Glass-like.

00:25:37.460 --> 00:25:39.510
All right.

00:25:39.510 --> 00:25:42.470
Let's look at some of
the tools from the GDK

00:25:42.470 --> 00:25:46.080
that Glu used to
build Spellista.

00:25:46.080 --> 00:25:49.010
It's the voice invocation,
like before, only this voice

00:25:49.010 --> 00:25:53.326
invocation then creates
an Android activity.

00:25:53.326 --> 00:25:57.710
That Android activity
is the immersion.

00:25:57.710 --> 00:25:59.580
It's just your normal
Android activity,

00:25:59.580 --> 00:26:02.780
but on Glass it
creates that immersion.

00:26:02.780 --> 00:26:05.850
Then Spellista is using a
couple really cool things here.

00:26:05.850 --> 00:26:09.810
You notice that first row uses
sort of that rich imagery that

00:26:09.810 --> 00:26:11.210
represents the levels.

00:26:11.210 --> 00:26:14.280
They're using the cards
class to build those cards,

00:26:14.280 --> 00:26:16.030
and they're using the
card scroller class

00:26:16.030 --> 00:26:20.340
to make this feel like a
natural Glass timeline.

00:26:20.340 --> 00:26:21.717
They're also using
the gyroscope.

00:26:21.717 --> 00:26:23.550
And they're using the
gyroscope like normal,

00:26:23.550 --> 00:26:25.890
like you would on any
other Android device,

00:26:25.890 --> 00:26:29.180
except now it's me moving
my head in this natural way.

00:26:32.570 --> 00:26:33.070
OK.

00:26:33.070 --> 00:26:35.757
Another immersion
example is Word Lens.

00:26:35.757 --> 00:26:37.590
I've already showed the
demo, so let me just

00:26:37.590 --> 00:26:40.650
give you the details.

00:26:40.650 --> 00:26:44.310
Word Lens has this really cool
real time translation overlay.

00:26:44.310 --> 00:26:46.910
But on Glass, I
think you saw, it's

00:26:46.910 --> 00:26:48.870
really what makes it come alive.

00:26:48.870 --> 00:26:51.230
All I need to do is look at
the text I want translated,

00:26:51.230 --> 00:26:53.140
and through Glass
I see it translate

00:26:53.140 --> 00:26:54.430
into my natural language.

00:26:57.280 --> 00:26:58.870
And I think the
cool thing that I

00:26:58.870 --> 00:27:01.025
want to mention about Word
Lens is once I invoke it

00:27:01.025 --> 00:27:04.380
it immediately uses the camera
and accesses that camera

00:27:04.380 --> 00:27:06.186
feed directly.

00:27:06.186 --> 00:27:09.740
It does some optical character
recognition using the NDK

00:27:09.740 --> 00:27:12.860
on Glass, like you would on
any other Android device.

00:27:12.860 --> 00:27:16.500
It computes the translation
and overlays that on the video

00:27:16.500 --> 00:27:18.100
and shows that back to me.

00:27:18.100 --> 00:27:20.360
They're also using the
gyroscope, so whenever it knows

00:27:20.360 --> 00:27:24.590
I'm looking at something that's
when it starts translating it.

00:27:24.590 --> 00:27:27.460
Again, it uses these
features of the GDK

00:27:27.460 --> 00:27:31.530
that are really straightforward
Android paradigms but now

00:27:31.530 --> 00:27:34.470
makes it a Glass-specific,
natural experience.

00:27:37.230 --> 00:27:37.730
All right.

00:27:37.730 --> 00:27:40.485
One more demo?

00:27:40.485 --> 00:27:40.985
[APPLAUSE]

00:27:40.985 --> 00:27:46.990
TIMOTHY JORDAN: [LAUGHS]
One more demo, Allthecooks.

00:27:46.990 --> 00:27:50.640
Allthecooks is a social cooking
app for Android and iPhone,

00:27:50.640 --> 00:27:53.310
and it is really cool.

00:27:53.310 --> 00:27:55.050
I found with using
Allthecooks I'm

00:27:55.050 --> 00:27:57.092
cooking more, because
recipes are there.

00:27:57.092 --> 00:27:58.800
But also I'm doing
something that I never

00:27:58.800 --> 00:28:00.950
did before because of
Allthecooks on Glass.

00:28:00.950 --> 00:28:05.019
I'm actually taking pictures and
recording notes on my recipes

00:28:05.019 --> 00:28:06.310
and sending them to my friends.

00:28:06.310 --> 00:28:09.500
I never did this before
because it was always

00:28:09.500 --> 00:28:10.350
kind of in the way.

00:28:10.350 --> 00:28:12.700
You've got to get the
camera and the notepad.

00:28:12.700 --> 00:28:15.370
I'm like, I need a better
shot, and then it's burnt.

00:28:15.370 --> 00:28:17.860
It's just sort of an
awkward experience.

00:28:17.860 --> 00:28:20.190
But cooking, you
really need your hands,

00:28:20.190 --> 00:28:22.850
and that's where Glass
really shines in this case.

00:28:25.530 --> 00:28:31.180
OK, Glass, find a recipe.

00:28:31.180 --> 00:28:32.380
Oops.

00:28:32.380 --> 00:28:35.890
OK, Glass, find a recipe.

00:28:35.890 --> 00:28:38.830
Avocado.

00:28:38.830 --> 00:28:43.360
I did the old cover the
microphone trick for-- there

00:28:43.360 --> 00:28:47.460
we are-- the live demo that
works great the first time.

00:28:47.460 --> 00:28:50.480
Allthecooks is now searching
for avocado recipes

00:28:50.480 --> 00:28:53.850
on the internet, and I get
some really cool pictures here.

00:28:53.850 --> 00:28:57.580
I'm going to scroll over back
and choose avocado relish,

00:28:57.580 --> 00:29:00.110
and here's my recipe.

00:29:00.110 --> 00:29:02.950
I can swipe forward and back
through these recipe steps.

00:29:02.950 --> 00:29:05.840
And again, I can follow
the steps hands-free.

00:29:05.840 --> 00:29:09.290
If ever I forget how
many avocados or onions,

00:29:09.290 --> 00:29:11.605
I just look up, and there's
my ingredients list.

00:29:11.605 --> 00:29:12.530
It's really nice.

00:29:12.530 --> 00:29:13.490
It's simple.

00:29:13.490 --> 00:29:14.470
It's intuitive.

00:29:14.470 --> 00:29:18.030
It's that natural user
interface you'd expect on Glass.

00:29:18.030 --> 00:29:23.416
And I don't know about you,
but usually when I'm cooking

00:29:23.416 --> 00:29:24.970
it takes a long
time because I've

00:29:24.970 --> 00:29:28.590
got to try things two or three
times before I get it right.

00:29:28.590 --> 00:29:31.320
With Allthecooks on Glass,
they also insert a live card

00:29:31.320 --> 00:29:35.010
so I can get back to that
experience easily on my Glass

00:29:35.010 --> 00:29:37.793
timeline whenever I want.

00:29:37.793 --> 00:29:45.859
[APPLAUSE]

00:29:45.859 --> 00:29:46.650
TIMOTHY JORDAN: OK.

00:29:46.650 --> 00:29:51.720
Let's take a look at this again
and the GDK implementation

00:29:51.720 --> 00:29:55.030
details that they used to
make this experience happen.

00:29:55.030 --> 00:29:57.120
Allthecooks is using
cards and card scroller.

00:29:57.120 --> 00:29:59.245
When it created those
recipes and they were bundles

00:29:59.245 --> 00:30:02.310
and you tapped into them and
you were able to drill down,

00:30:02.310 --> 00:30:04.380
all that is building
with the cards class

00:30:04.380 --> 00:30:07.200
and using the card scroller
to keep that natural timeline

00:30:07.200 --> 00:30:09.090
interface that you'd
expect on Glass.

00:30:09.090 --> 00:30:11.060
They're also using
the RecognizerIntent.

00:30:11.060 --> 00:30:14.200
Now this, again, is the
RecognizerIntent from Android.

00:30:14.200 --> 00:30:16.120
But on Glass when you
run it, it gives you

00:30:16.120 --> 00:30:19.090
the Glass-specific
speech-to-text interface.

00:30:28.710 --> 00:30:29.630
OK.

00:30:29.630 --> 00:30:34.180
Those patterns were periodic
notifications and sharing,

00:30:34.180 --> 00:30:35.890
which you already do
on the Mirror API.

00:30:35.890 --> 00:30:38.910
And the new ones that are
possible today with the GDK

00:30:38.910 --> 00:30:43.880
are ongoing task and immersion.

00:30:43.880 --> 00:30:46.362
All of these partners that
we've been working with,

00:30:46.362 --> 00:30:48.070
again they've done a
great job of helping

00:30:48.070 --> 00:30:49.150
us test the platform.

00:30:49.150 --> 00:30:54.020
But also, I've really loved
using these Glassware on Glass

00:30:54.020 --> 00:30:56.850
day in and day out, and
we think you will too.

00:30:56.850 --> 00:31:00.036
All of these will be available
on my Glass later today.

00:31:00.036 --> 00:31:05.590
[APPLAUSE]

00:31:05.590 --> 00:31:07.090
TIMOTHY JORDAN: And
we have a couple

00:31:07.090 --> 00:31:11.100
more simple Glassware that
we're throwing on there,

00:31:11.100 --> 00:31:14.400
the compass and the
stopwatch, both GDK Glassware

00:31:14.400 --> 00:31:16.409
that we built and open sourced.

00:31:16.409 --> 00:31:18.825
They're going to be available
on the documentation for you

00:31:18.825 --> 00:31:22.290
to learn how to use
the GDK even quicker.

00:31:22.290 --> 00:31:25.874
And the Mirror API
has been going strong,

00:31:25.874 --> 00:31:28.040
and more people have been
submitting their Glassware

00:31:28.040 --> 00:31:28.740
for review.

00:31:28.740 --> 00:31:31.390
Three more just got
available and are

00:31:31.390 --> 00:31:35.165
going to be launching today as
well, Umano, which allows you

00:31:35.165 --> 00:31:38.011
to get trendy news articles
on Glass read to you

00:31:38.011 --> 00:31:40.510
by professional voice actors,
so you can get your news while

00:31:40.510 --> 00:31:42.990
still on the go, and
Jewish Guide for Glass.

00:31:42.990 --> 00:31:45.690
Let's say you're
traveling in a local place

00:31:45.690 --> 00:31:47.610
and you need some kosher food.

00:31:47.610 --> 00:31:50.010
You can set a reminder
on Jewish Guide,

00:31:50.010 --> 00:31:53.400
and it will come up at lunch
time with all the kosher

00:31:53.400 --> 00:31:55.520
restaurants nearby.

00:31:55.520 --> 00:31:56.900
And If This Then That.

00:31:56.900 --> 00:31:59.050
If This Then That has
a ton of cool recipes

00:31:59.050 --> 00:32:02.739
that you can use now with Glass.

00:32:02.739 --> 00:32:04.780
Say, for example, you're
looking for an apartment

00:32:04.780 --> 00:32:05.870
in San Francisco.

00:32:05.870 --> 00:32:08.670
You can use If This Then
That to get notified

00:32:08.670 --> 00:32:13.086
as soon as a new listing
is posted on Craigslist.

00:32:13.086 --> 00:32:14.710
All this stuff is
going to be available

00:32:14.710 --> 00:32:20.590
later today on my Glass, and
it joins a lot of the Glassware

00:32:20.590 --> 00:32:21.620
that's already up there.

00:32:21.620 --> 00:32:24.480
It's just a handful of Glassware
that we have on my Glass,

00:32:24.480 --> 00:32:26.690
because we're just
getting started.

00:32:26.690 --> 00:32:30.380
And even so, we've been
delighted and surprised

00:32:30.380 --> 00:32:34.630
by the cool new things that
people want to do with Glass.

00:32:34.630 --> 00:32:37.080
But today, now that
the GDK's available,

00:32:37.080 --> 00:32:38.890
more than ever
we're excited to see

00:32:38.890 --> 00:32:41.850
what you will do next, both
the things that we know you're

00:32:41.850 --> 00:32:44.360
going to do with this that
are great use cases on Glass

00:32:44.360 --> 00:32:47.279
and the things that we
haven't even thought of yet.

00:32:47.279 --> 00:32:49.820
Because one thing we know about
our Explorer community is you

00:32:49.820 --> 00:32:51.990
guys dream really
big, and we can't

00:32:51.990 --> 00:32:56.010
wait to see how you make those
dreams tangible with the Glass

00:32:56.010 --> 00:32:58.310
Development Kit.

00:32:58.310 --> 00:33:01.240
Let's take a quick look
at the walk-through,

00:33:01.240 --> 00:33:04.640
just so you know how easy it is
to get started with the Glass

00:33:04.640 --> 00:33:06.250
Development Kit.

00:33:06.250 --> 00:33:09.790
Again, I keep saying this is
Android development that you're

00:33:09.790 --> 00:33:10.290
used to.

00:33:13.280 --> 00:33:16.980
Let's go ahead and load
up Eclipse with ADT.

00:33:16.980 --> 00:33:24.650
Now this is pretty much fresh
install on my computer here.

00:33:24.650 --> 00:33:28.000
Remember, there was
the part of the GDK

00:33:28.000 --> 00:33:29.860
that's built into
the platform on Glass

00:33:29.860 --> 00:33:32.810
using normal Android
platform APIs,

00:33:32.810 --> 00:33:35.037
but they'll just work on
Glass the way they should.

00:33:35.037 --> 00:33:36.495
And then there's
the add-on library

00:33:36.495 --> 00:33:39.360
that gives you deeper access
to the Glass-specific features.

00:33:39.360 --> 00:33:43.020
You need to get that add-on
library before you start

00:33:43.020 --> 00:33:46.820
building on the GDK, and it's
available through the SDK

00:33:46.820 --> 00:33:47.700
Manager.

00:33:47.700 --> 00:33:49.860
Now I've already gone
ahead and installed it.

00:33:49.860 --> 00:33:50.970
It's this item right here.

00:33:50.970 --> 00:33:53.770
You look under API
Level 15, and you'll

00:33:53.770 --> 00:33:56.430
see Glass Development
Kit Sneak Peek.

00:33:56.430 --> 00:34:00.430
You click on that, install
the package, read the license,

00:34:00.430 --> 00:34:05.190
accept the terms, and then come
back to your Eclipse interface.

00:34:05.190 --> 00:34:07.530
What I'm going to do is I'm
going to create a new sample

00:34:07.530 --> 00:34:09.639
project from the add-on.

00:34:09.639 --> 00:34:12.540
So I'm just going to
go to File, New, Other.

00:34:12.540 --> 00:34:15.880
And I'm going to choose
Android Sample Project

00:34:15.880 --> 00:34:17.810
and select the Glass
Development Kit.

00:34:20.389 --> 00:34:22.660
Let's try the stopwatch.

00:34:33.969 --> 00:34:34.610
OK.

00:34:34.610 --> 00:34:36.124
I've got the stopwatch
here, and I'm

00:34:36.124 --> 00:34:37.415
going to choose-- I don't know.

00:34:37.415 --> 00:34:40.690
Let's just run it,
see what happens.

00:34:40.690 --> 00:34:43.889
Choose my Glass
device and click OK.

00:34:43.889 --> 00:34:46.090
Now I might have another
stopwatch APK here,

00:34:46.090 --> 00:34:47.570
but it just compiled it.

00:34:47.570 --> 00:34:49.370
And now it's installing it.

00:34:49.370 --> 00:34:50.219
And it's done.

00:34:50.219 --> 00:34:51.880
Cool.

00:34:51.880 --> 00:34:54.200
Let's take a look
at my Glass device.

00:35:03.580 --> 00:35:08.578
OK, Glass, start a stopwatch.

00:35:08.578 --> 00:35:12.660
[LAUGHS] And there it is.

00:35:12.660 --> 00:35:16.170
From installing Eclipse to on
Glass in-- what was that?--

00:35:16.170 --> 00:35:16.850
a minute?

00:35:16.850 --> 00:35:18.390
Two minutes?

00:35:18.390 --> 00:35:19.626
That's the GDK.

00:35:19.626 --> 00:35:39.970
[APPLAUSE]

00:35:39.970 --> 00:35:40.950
TIMOTHY JORDAN: OK.

00:35:40.950 --> 00:35:47.000
The GDK and the documentation
are right now a sneak peek.

00:35:47.000 --> 00:35:49.670
That means the full developer
preview is coming later.

00:35:49.670 --> 00:35:51.760
But we still wanted
to give it to you guys

00:35:51.760 --> 00:35:55.501
to get your hands on it so you
could test it, find some bugs,

00:35:55.501 --> 00:35:57.750
and also find the stuff
that's missing that you really

00:35:57.750 --> 00:36:02.280
want to really be able
to make great Glassware.

00:36:02.280 --> 00:36:05.360
We're making it available as
this sneak peek later today.

00:36:05.360 --> 00:36:09.420
And you'll find the instructions
for getting the add-on and all

00:36:09.420 --> 00:36:16.020
the documentation at
developers.google.com/glass.

00:36:16.020 --> 00:36:19.070
Now we are just getting started,
and we do want that feedback.

00:36:19.070 --> 00:36:22.150
We want to build this
platform with you.

00:36:22.150 --> 00:36:24.270
So please just add
a slash community

00:36:24.270 --> 00:36:25.950
on the end of that
URL, and you'll

00:36:25.950 --> 00:36:28.885
come to links for our
Stack Overflow tag

00:36:28.885 --> 00:36:30.380
as well as our Issue Tracker.

00:36:30.380 --> 00:36:32.170
We really want to hear
from you about how

00:36:32.170 --> 00:36:35.430
we can make this platform great.

00:36:35.430 --> 00:36:39.260
Then, finally,
Android development.

00:36:39.260 --> 00:36:42.270
The GDK is built on
the Android platform.

00:36:42.270 --> 00:36:44.670
So you'll also want to take
a look at that documentation

00:36:44.670 --> 00:36:45.320
to get started.

00:36:47.850 --> 00:36:50.730
And again, what's
really going to happen

00:36:50.730 --> 00:36:54.724
next is you get to build
Glassware using the Mirror API

00:36:54.724 --> 00:36:56.390
and now with all these
new features that

00:36:56.390 --> 00:36:59.110
are available to
the GDK the really

00:36:59.110 --> 00:37:01.580
open up these
magical experiences

00:37:01.580 --> 00:37:05.060
that let you build Glassware
that fit into people's lives

00:37:05.060 --> 00:37:07.080
in a natural way.

00:37:07.080 --> 00:37:10.080
A lot of the stuff that you saw
today wasn't available on Glass

00:37:10.080 --> 00:37:11.510
before the GDK.

00:37:11.510 --> 00:37:14.690
You just couldn't do that
kind of user experience.

00:37:14.690 --> 00:37:17.080
But a lot of those demos
also, you may have noticed,

00:37:17.080 --> 00:37:20.514
weren't possible before Glass.

00:37:20.514 --> 00:37:22.180
There's something
about this form factor

00:37:22.180 --> 00:37:25.040
that really opens up a
new realm of possibilities

00:37:25.040 --> 00:37:27.240
for building great
user experiences

00:37:27.240 --> 00:37:29.860
and solving real user problems.

00:37:29.860 --> 00:37:33.580
And we can can't wait to see
you do just that with the GDK.

00:37:33.580 --> 00:37:34.520
Thank you so much.

00:37:34.520 --> 00:37:48.077
[APPLAUSE]

