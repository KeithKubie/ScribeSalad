WEBVTT
Kind: captions
Language: en

00:00:00.780 --> 00:00:02.125
 With the arrival of Android Support Library version 26 

00:00:02.502 --> 00:00:04.258
 We are focusing on a few key elements 

00:00:04.877 --> 00:00:07.310
 We got a few new features about text and animation. 

00:00:07.874 --> 00:00:11.169
 Balanced with the Android framework and multiple platforms 

00:00:11.589 --> 00:00:12.668
 Support for (such as Wear and TV) 

00:00:13.163 --> 00:00:16.933
 Also by moving the main SDK to 14 

00:00:17.258 --> 00:00:19.082
 Abandoning 1400 methods and other means to reduce the size of the code base 

00:00:19.914 --> 00:00:22.436
 Let's take a look at the new changes in text and fonts. 

00:00:23.340 --> 00:00:25.476
 In the Support Library 26 we simplified 

00:00:25.767 --> 00:00:26.750
 The process of manipulating custom fonts 

00:00:27.175 --> 00:00:29.169
 Now you can use them just like any other resource. 

00:00:29.516 --> 00:00:31.137
 Put it directly into a brand new font resource folder 

00:00:32.025 --> 00:00:33.962
 We also now support downloadable fonts 

00:00:34.682 --> 00:00:37.230
 This means you don't need to bind font files in the APK 

00:00:37.878 --> 00:00:40.278
 The system will come from the font provider (Provider, as by Google Play Services 

00:00:40.603 --> 00:00:41.570
 Provided by Google Fonts) 

00:00:41.919 --> 00:00:42.954
 Find the right file for you 

00:00:43.957 --> 00:00:47.090
 We need to talk about the expression before we mention the text. 

00:00:47.537 --> 00:00:50.665
 You may have seen this sad square wrong character 

00:00:50.991 --> 00:00:52.296
 This means that this app can't display emoticons 

00:00:52.885 --> 00:00:54.830
 Adding a Unicode standard means 

00:00:55.145 --> 00:00:58.256
 The operating system does not always have the latest fonts to display newer logos 

00:00:59.670 --> 00:01:01.338
 Your app after the emoticon adapter appears 

00:01:01.712 --> 00:01:04.633
 Easily compatible with emoticon support on the device 

00:01:04.954 --> 00:01:06.492
 As long as the device APL level is not less than 19 

00:01:07.187 --> 00:01:08.478
 Now you have three widgets 

00:01:08.886 --> 00:01:11.895
 EmojiEditText EmojiTextView EmojiButton 

00:01:12.579 --> 00:01:14.854
 Also supports widgets for the app 

00:01:15.190 --> 00:01:18.320
 And the Helper class lets you use your own custom widgets 

00:01:19.242 --> 00:01:23.420
 Emoticon adaptation can be configured as a binding or downloadable font 

00:01:24.151 --> 00:01:26.373
 See the attached documentation for how to use it. 

00:01:27.790 --> 00:01:30.241
 Suppose you want the text size of your text area 

00:01:30.602 --> 00:01:33.775
 Can automatically expand or shrink to fill the layout 

00:01:34.617 --> 00:01:36.078
 After the Support Library version 26 arrives 

00:01:36.511 --> 00:01:39.390
 All you need to do is set the AutoView property of the TextView. 

00:01:39.886 --> 00:01:42.193
 You can control the spacing size to use 

00:01:42.880 --> 00:01:45.625
 Maximum and minimum text size definition step size 

00:01:46.517 --> 00:01:49.362
 You can also provide a range of discrete sizes for use. 

00:01:50.872 --> 00:01:52.457
 Our next topic is animation 

00:01:53.177 --> 00:01:56.409
 Now you can implement animations driven by real physics 

00:01:56.794 --> 00:01:58.962
 That is based on speed rather than time 

00:01:59.590 --> 00:02:02.295
 This helps create smooth, natural animations 

00:02:02.779 --> 00:02:04.940
 The effect will change as the target changes. 

00:02:05.800 --> 00:02:08.690
 It also simplifies the process of switching between gestures and animations 

00:02:09.617 --> 00:02:12.537
 We have two main entity-based animations 

00:02:13.133 --> 00:02:14.361
 Spring and throw 

00:02:15.238 --> 00:02:18.108
 If you have a view you can drag around the screen 

00:02:18.516 --> 00:02:19.673
 But when you loose it 

00:02:20.040 --> 00:02:21.251
 You want it to return to its original position 

00:02:21.923 --> 00:02:24.017
 Using a spring-style animation will make the view look 

00:02:24.389 --> 00:02:27.135
 Like being brought back by an invisible but familiar force 

00:02:27.991 --> 00:02:30.833
 You can customize the stiffness damping coefficient of the elastic 

00:02:31.299 --> 00:02:32.502
 And the final location 

00:02:33.088 --> 00:02:35.644
 If you want to animate the properties of an object 

00:02:36.002 --> 00:02:37.289
 And want this animation to end 

00:02:37.748 --> 00:02:39.156
 Please use throwing animation 

00:02:39.661 --> 00:02:42.126
 You can customize a variety of parameters such as initial speed 

00:02:42.655 --> 00:02:45.188
 Friction and minimum and maximum animation values 

00:02:47.000 --> 00:02:48.509
 If you work with vector graphics 

00:02:48.858 --> 00:02:49.779
 Then you will be happy to see 

00:02:50.107 --> 00:02:51.459
 Some features in your SDK 

00:02:51.829 --> 00:02:54.013
 Also part of the support library 

00:02:55.127 --> 00:02:58.012
 Vector drawing compatibility has a brand new attribute fill type 

00:02:58.469 --> 00:03:01.508
 It determines which part of the image is inside the shape 

00:03:01.982 --> 00:03:04.276
 This is similar to SPG's fill rule properties 

00:03:05.248 --> 00:03:07.676
 Vector drawing compatibility is now available 

00:03:08.036 --> 00:03:11.404
 Implement deformation and define path-based interpolators 

00:03:11.829 --> 00:03:14.868
 Creating rich animations that can be traced back to API 14 

00:03:16.545 --> 00:03:18.661
 Are you developing for Android Wear and Android TV? 

00:03:19.011 --> 00:03:19.945
 We have good news for you. 

00:03:20.609 --> 00:03:23.244
 The Wear online library is now a complete support library 

00:03:23.742 --> 00:03:25.854
 Contains some classes that you may already be using 

00:03:26.405 --> 00:03:29.545
 Such as box insertion layout slide to cancel the frame layout 

00:03:29.939 --> 00:03:31.585
 Wearable recycler view 

00:03:31.943 --> 00:03:34.826
 And some new components designed for action and navigation drawers 

00:03:36.039 --> 00:03:38.573
 Leanback's API has made several changes 

00:03:39.023 --> 00:03:40.949
 Includes new video playback controls with point-in-time positioning support 

00:03:41.319 --> 00:03:44.209
 See the Leanback documentation to learn more 

00:03:45.101 --> 00:03:46.441
 Support library for this version 

00:03:46.778 --> 00:03:47.859
 We have other changes worth mentioning. 

00:03:48.308 --> 00:03:50.210
 Percentage support module is deprecated 

00:03:50.638 --> 00:03:52.945
 So you should use ConstraintLayout to handle the scale problem 

00:03:54.105 --> 00:03:56.682
 We also have a new PreferenceDataStore API 

00:03:56.999 --> 00:03:58.572
 Allows you to implement the storage you want 

00:03:59.473 --> 00:04:02.098
 We also made behavior changes for the FragmentManager. 

00:04:02.658 --> 00:04:04.774
 executePendingtransaction commitNow 

00:04:05.137 --> 00:04:06.429
 And similar transaction calls 

00:04:06.793 --> 00:04:09.221
 Will not be available when the FragmentManager status changes 

00:04:10.097 --> 00:04:12.439
 Font emoticons automatically resize the TextView 

00:04:12.723 --> 00:04:13.667
 Animation effect based on real physical laws 

00:04:13.958 --> 00:04:16.469
 Vector graphics multi-device platform support, etc. 

00:04:17.000 --> 00:04:19.012
 The new support library contains a lot of APIs 

00:04:19.384 --> 00:04:21.478
 You can use them to build the best experience for your users. 

00:04:21.994 --> 00:04:24.370
 For more information, please see the documentation page. 

00:04:24.639 --> 00:04:25.779
 And Google I/O conversations 

00:04:26.057 --> 00:04:27.534
 Contents about What's New in Support Library 

