WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:00.860
&gt;&gt; Alright, what do you got?

00:00:00.860 --> 00:00:01.470
&gt;&gt; Who me?

00:00:01.470 --> 00:00:04.700
&gt;&gt; Yeah. So, for each one, tell me whether or not it's infinite.

00:00:04.700 --> 00:00:08.080
&gt;&gt; Okay. Linear separators they seeming like half

00:00:08.080 --> 00:00:11.440
planes, or lines, or, you know, depending upon dimensionality.

00:00:11.440 --> 00:00:12.880
There are, of course, an infinite number of

00:00:12.880 --> 00:00:14.480
these things. There are an infinite number of lines.

00:00:14.480 --> 00:00:16.660
&gt;&gt; So, that, we'll check that one off.

00:00:16.660 --> 00:00:19.930
&gt;&gt; So, y equals mx plus b. And, I can put any real number for m. Any real

00:00:19.930 --> 00:00:23.240
number for b. Infinite number of those, in fact

00:00:23.240 --> 00:00:25.480
theres not just an infinite number of those there is

00:00:25.480 --> 00:00:28.910
alif one of those infinite numbers. We should

00:00:28.910 --> 00:00:31.500
talk about that one day. Artificial neutral networks

00:00:31.500 --> 00:00:33.170
are exactly the same thing, they have weights

00:00:33.170 --> 00:00:35.040
those weights are real numbers, so even if there

00:00:35.040 --> 00:00:36.470
were only one weight there is an infinite

00:00:36.470 --> 00:00:38.710
number Of real numbers to chose from, so

00:00:38.710 --> 00:00:42.190
that's also the limit. Decision trees, with discrete

00:00:42.190 --> 00:00:45.090
inputs. I have two answers for you here Michael.

00:00:45.090 --> 00:00:45.840
&gt;&gt; O, Oh!

00:00:45.840 --> 00:00:48.440
&gt;&gt; Answer one is, of course, it's finite,

00:00:48.440 --> 00:00:50.800
a, a, assuming there is only a finite number

00:00:50.800 --> 00:00:54.590
of features. The other answer is it could be infinite if I'm allowed

00:00:54.590 --> 00:00:58.880
to re-use features over and over again even if they're useless to reuse.

00:00:58.880 --> 00:01:01.470
But that is sort of insane ans silly, and no one will ever

00:01:01.470 --> 00:01:04.560
do that, so I think the, that right answer is to leave it unchecked.

00:01:04.560 --> 00:01:05.390
&gt;&gt; Okay.

00:01:05.390 --> 00:01:07.810
&gt;&gt; And then finally decision tree with continuous inputs. Well,

00:01:07.810 --> 00:01:10.220
that's the same. We had a long conversation about this when

00:01:10.220 --> 00:01:13.250
we talked about decision trees. We can keep asking questions

00:01:13.250 --> 00:01:15.970
about them so if there's a sort of an infinite number

00:01:15.970 --> 00:01:18.370
of questions you can ask. I can say, well, is this

00:01:18.370 --> 00:01:21.300
feature greater than .1. And then ask is it greater than

00:01:21.300 --> 00:01:23.040
.11. Then is it greater than .111, then .1111, then 1111111

00:01:23.040 --> 00:01:27.610
and so on and so forth. So, that is also infinite.

00:01:27.610 --> 00:01:30.170
&gt;&gt; So basically everything we've talked

00:01:30.170 --> 00:01:31.430
about, or nearly everything we've talked

00:01:31.430 --> 00:01:34.650
about actually doesn't fit the analysis that we talked about last time.

00:01:34.650 --> 00:01:35.590
&gt;&gt; What about k and n?

00:01:35.590 --> 00:01:38.180
&gt;&gt; Yeah so k and n is a little bit of a mess.

00:01:38.180 --> 00:01:41.100
I think you and I maybe don't completely agree on this one. So

00:01:41.100 --> 00:01:45.170
I think of k and n, the classifier that comes out of a k

00:01:45.170 --> 00:01:49.330
and n is defined by the set of data points that are the, the neighbors.

00:01:49.330 --> 00:01:50.381
&gt;&gt; Mm-hm.

00:01:50.381 --> 00:01:52.970
&gt;&gt; And. There's an infinite number of ways of

00:01:52.970 --> 00:01:54.640
laying out those points. So theres an infinite number

00:01:54.640 --> 00:01:56.960
of different tan N base classifiers that you could

00:01:56.960 --> 00:01:59.490
have. But you have a counter argument to that.

00:01:59.490 --> 00:02:02.940
&gt;&gt; Right, which is that if you assume the training set

00:02:02.940 --> 00:02:06.440
is fixed. And that's just part of the parameters of the hypothese

00:02:06.440 --> 00:02:08.440
base then. It is an infinite. There's, in

00:02:08.440 --> 00:02:10.580
fact, only one. It all just depends upon

00:02:10.580 --> 00:02:11.830
Q. And it always gives you the same

00:02:11.830 --> 00:02:13.740
answer, no matter what. So I think the hypothesis

00:02:13.740 --> 00:02:15.550
space, you could argue, is finite. It all

00:02:15.550 --> 00:02:17.450
depends upon what it is you're taking as

00:02:17.450 --> 00:02:19.030
part of the hypothesis. And what it is

00:02:19.030 --> 00:02:20.370
you aren't taking as part of the hypothesis space.

00:02:20.370 --> 00:02:22.800
&gt;&gt; Right. Sort of, whether the data is built in

00:02:22.800 --> 00:02:25.010
or not. But it, but it, you know? Is strikes

00:02:25.010 --> 00:02:28.390
me that these other methods are also similar in that,

00:02:28.390 --> 00:02:31.240
if you bake in the data, there's just the one answer.

00:02:31.240 --> 00:02:32.680
But yeah it's a, k and n

00:02:32.680 --> 00:02:36.015
is weird. Right? Because it's sometimes called non-parametric.

00:02:36.015 --> 00:02:36.340
&gt;&gt; Right.

00:02:36.340 --> 00:02:38.860
&gt;&gt; Which sounds like it should mean that it has no parameters

00:02:38.860 --> 00:02:41.610
but what it actually means that it has an infinite number of parameters.

00:02:41.610 --> 00:02:43.820
&gt;&gt; Right. By the way, I don't think that's true about baking

00:02:43.820 --> 00:02:48.320
things in. So, for example, if I give you a set of data.

00:02:48.320 --> 00:02:49.785
There's still an infinite number of

00:02:49.785 --> 00:02:52.420
neuro-networks that are consistent with that data.

00:02:52.420 --> 00:02:56.350
There's a whole bunch of decision trees that are consistent with that data.

00:02:56.350 --> 00:02:58.780
So you don't always get the same answer every time. Certainly

00:02:58.780 --> 00:03:01.070
with neuro-networks you don't because you're starting at a random place.

00:03:01.070 --> 00:03:02.850
&gt;&gt; But it, but if you, right. If you're

00:03:02.850 --> 00:03:04.920
bake in the algorithm and the data and I think

00:03:04.920 --> 00:03:06.570
in k and n that is exactly what you're doing.

00:03:06.570 --> 00:03:09.540
But I agree that we can agree to not agree.

00:03:09.540 --> 00:03:10.470
&gt;&gt; Agreed.

