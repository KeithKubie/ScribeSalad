WEBVTT
Kind: captions
Language: en

00:00:08.387 --> 00:00:09.470
ANDREW WALES: Hi everyone.

00:00:09.470 --> 00:00:10.910
Welcome to Behind the Code.

00:00:10.910 --> 00:00:12.951
On today's episode, we're
going to be talking all

00:00:12.951 --> 00:00:14.550
about using the data layer.

00:00:14.550 --> 00:00:17.008
Actually today, we're going to
be talking a little bit more

00:00:17.008 --> 00:00:18.540
abstractly about the data layer.

00:00:18.540 --> 00:00:20.766
As most of you probably
know it, the data layer

00:00:20.766 --> 00:00:23.140
is something you might use in
conjunction with Google Tag

00:00:23.140 --> 00:00:24.290
Manager, for example.

00:00:24.290 --> 00:00:27.249
So you might have some analytics
tags in Google Tag Manager.

00:00:27.249 --> 00:00:29.290
And then you push information
into the data layer

00:00:29.290 --> 00:00:31.410
from your page, and
that fires the tags.

00:00:31.410 --> 00:00:33.139
And that's kind of
the common use case.

00:00:33.139 --> 00:00:34.930
But we're actually
designing the data layer

00:00:34.930 --> 00:00:39.650
to be a messaging bus that any
vendor, not just Google Tag

00:00:39.650 --> 00:00:41.290
Manager, but other
vendors and services

00:00:41.290 --> 00:00:42.970
might be able to
consume as well.

00:00:42.970 --> 00:00:45.480
So we're going to talk about
what the data layer is,

00:00:45.480 --> 00:00:48.690
and also how other services,
outside of Tag Manager,

00:00:48.690 --> 00:00:52.410
can also consume the information
in the data layer using

00:00:52.410 --> 00:00:55.750
a open source library that
we recently published.

00:00:55.750 --> 00:00:57.780
And so to help us do
that, I've actually

00:00:57.780 --> 00:01:02.620
got Brian Kuhn as a tech lead
on the tag Manager project.

00:01:02.620 --> 00:01:06.262
And Lukas Bergstrom is our
Product Manager as well.

00:01:06.262 --> 00:01:08.220
Brian, do you want to
give just a quick summary

00:01:08.220 --> 00:01:09.390
of what you do on the team?

00:01:09.390 --> 00:01:09.710
What's your role?

00:01:09.710 --> 00:01:09.857
BRIAN KUHN: Yeah, sure.

00:01:09.857 --> 00:01:12.000
So I lead the engineering
team in charge

00:01:12.000 --> 00:01:13.106
of Google Tag Manager.

00:01:15.750 --> 00:01:17.880
I was involved Google
Analytics for a long time,

00:01:17.880 --> 00:01:19.980
writing they're
tracking code, and that

00:01:19.980 --> 00:01:24.050
evolved into the product
we built for Tag Manager.

00:01:24.050 --> 00:01:25.050
ANDREW WALES: And Lukas.

00:01:25.050 --> 00:01:27.920
LUKAS BERGSTROM: The Product
Manager for Google Tag Manager.

00:01:27.920 --> 00:01:32.830
And so originally, in ancient
times, a software engineer.

00:01:32.830 --> 00:01:38.020
And then kind of lost the
plot and ended up as a PM.

00:01:38.020 --> 00:01:43.952
But I work on collaborating with
Brian on the product road map,

00:01:43.952 --> 00:01:45.910
being this kind of central
point of integration

00:01:45.910 --> 00:01:50.050
for sales, marketing,
support, engineering,

00:01:50.050 --> 00:01:52.720
to make sure that everybody
is talking to each other

00:01:52.720 --> 00:01:53.550
and coordinated.

00:01:53.550 --> 00:01:53.780
ANDREW WALES: Cool.

00:01:53.780 --> 00:01:55.990
So it's safe to say that
between the two of you,

00:01:55.990 --> 00:01:58.335
you guys are kind of steering--

00:01:58.335 --> 00:01:59.460
LUKAS BERGSTROM: Hopefully.

00:01:59.460 --> 00:02:00.490
ANDREW WALES: And a day later.

00:02:00.490 --> 00:02:01.480
BRIAN KUHN: We're trying.

00:02:01.480 --> 00:02:02.270
ANDREW WALES: Try.

00:02:02.270 --> 00:02:02.769
Cool.

00:02:02.769 --> 00:02:04.550
Let's get into it.

00:02:04.550 --> 00:02:06.205
I'll just quick show
the agenda roughly

00:02:06.205 --> 00:02:07.760
of what we're going
to talk about.

00:02:07.760 --> 00:02:10.260
We'll talk about overview of
the overview of the data layer.

00:02:10.260 --> 00:02:12.119
Some of the design
principles behind it.

00:02:12.119 --> 00:02:13.660
We'll talk about
using the data layer

00:02:13.660 --> 00:02:16.070
to track State and Events.

00:02:16.070 --> 00:02:18.320
Show some example
use cases when a data

00:02:18.320 --> 00:02:20.010
layer might be
particularly useful.

00:02:20.010 --> 00:02:22.994
And then we'll give you
some resources at the end.

00:02:22.994 --> 00:02:24.160
So let's jump right into it.

00:02:24.160 --> 00:02:25.960
Maybe we'll start with
the overview right

00:02:25.960 --> 00:02:28.580
at the beginning.

00:02:28.580 --> 00:02:30.770
And maybe Lukas,
I'll start with you.

00:02:30.770 --> 00:02:31.829
LUKAS BERGSTROM: Sure.

00:02:31.829 --> 00:02:33.370
ANDREW WALES:
Basically, what problem

00:02:33.370 --> 00:02:34.453
is the data layer solving?

00:02:34.453 --> 00:02:37.960
What was wrong with the way
people were tracking before?

00:02:37.960 --> 00:02:39.730
LUKAS BERGSTROM:
So when you talk

00:02:39.730 --> 00:02:42.390
about tracking user
behavior on the web,

00:02:42.390 --> 00:02:43.880
I think the first
thing that people

00:02:43.880 --> 00:02:48.350
think about is
page view tracking.

00:02:48.350 --> 00:02:50.450
At the base level,
you started out

00:02:50.450 --> 00:02:52.010
by everyone put a
Google Analytics

00:02:52.010 --> 00:02:53.926
tag on every page of
their site, and then they

00:02:53.926 --> 00:02:55.840
could see which pages
got the most traffic,

00:02:55.840 --> 00:02:58.850
and where people
were coming from.

00:02:58.850 --> 00:03:00.920
We're a long way from that now.

00:03:00.920 --> 00:03:03.900
We now are in a world
where people want to know,

00:03:03.900 --> 00:03:07.570
who interacted with
this image carousel.

00:03:07.570 --> 00:03:09.945
Who added something to their
shopping cart more than $500

00:03:09.945 --> 00:03:12.710
in value?

00:03:12.710 --> 00:03:17.470
So we want to know like really
detailed stuff about what

00:03:17.470 --> 00:03:18.990
user behavior is.

00:03:18.990 --> 00:03:22.500
And all of that requires
little bits of JavaScript

00:03:22.500 --> 00:03:25.210
that ping servers with data.

00:03:25.210 --> 00:03:27.690
And so where we
are today is, we've

00:03:27.690 --> 00:03:31.590
got-- maybe the next
slide would be good here.

00:03:31.590 --> 00:03:34.770
We've got dozens of
different services

00:03:34.770 --> 00:03:38.640
that we use for things like web
analytics, conversion tracking,

00:03:38.640 --> 00:03:40.640
remarketing.

00:03:40.640 --> 00:03:43.080
And they all have their
own implementations of,

00:03:43.080 --> 00:03:45.260
this is how you send me data.

00:03:45.260 --> 00:03:49.960
And we've got on the next slide,
a bunch of different stuff

00:03:49.960 --> 00:03:51.360
that we want to track.

00:03:51.360 --> 00:03:56.630
And what that leads to
is, these M events N

00:03:56.630 --> 00:03:58.710
services we need
to track them with.

00:03:58.710 --> 00:04:01.510
So we've got, this is
matrix a different ad hoc

00:04:01.510 --> 00:04:02.858
implementations that--

00:04:02.858 --> 00:04:04.082
BRIAN KUHN: A mess.

00:04:04.082 --> 00:04:08.410
LUKAS BERGSTROM: They get broken
every time your site changes.

00:04:08.410 --> 00:04:13.380
So the idea of the data layer
is instead, on the next slide,

00:04:13.380 --> 00:04:15.480
let's just abstract away that.

00:04:15.480 --> 00:04:17.060
Just say like, all
right we're just

00:04:17.060 --> 00:04:21.116
going to publish everything
that happens in the page,

00:04:21.116 --> 00:04:22.490
that we know we're
interested in,

00:04:22.490 --> 00:04:25.390
to just a common message bus.

00:04:25.390 --> 00:04:27.890
And then all these different
services can subscribe to that.

00:04:31.250 --> 00:04:32.625
So that's the
idea, I think Brian

00:04:32.625 --> 00:04:36.650
can talk to what that gets you.

00:04:36.650 --> 00:04:40.640
ANDREW WALES: So as a developer
then your concern is less,

00:04:40.640 --> 00:04:43.472
how do I interact with all
these different tracking

00:04:43.472 --> 00:04:45.805
libraries that I might be
working with on the same page.

00:04:45.805 --> 00:04:48.260
And moves more to, how
do I just make sure

00:04:48.260 --> 00:04:50.520
that I'm exposing with the
interesting things that

00:04:50.520 --> 00:04:51.390
are happening on the page.

00:04:51.390 --> 00:04:51.850
BRIAN KUHN: Exactly.

00:04:51.850 --> 00:04:52.891
LUKAS BERGSTROM: Exactly.

00:04:52.891 --> 00:04:54.420
Exactly.

00:04:54.420 --> 00:04:56.400
ANDREW WALES: Cool.

00:04:56.400 --> 00:04:58.526
Yes, so there's obviously
like a bunch of benefits,

00:04:58.526 --> 00:05:00.025
we talked about a
few of them there.

00:05:00.025 --> 00:05:02.620
It sounds like it makes things
a little bit less complicated.

00:05:02.620 --> 00:05:04.650
But do you want to cover some
of these other ones as well?

00:05:04.650 --> 00:05:06.316
Cause these actually
pretty interesting.

00:05:06.316 --> 00:05:09.477
BRIAN KUHN: Yeah I can
probably talk some about this.

00:05:09.477 --> 00:05:11.310
So when we're were
designing the data layer,

00:05:11.310 --> 00:05:13.070
there were a couple constraints
that we wanted to deal with.

00:05:13.070 --> 00:05:14.660
We didn't want to
slow down the page.

00:05:14.660 --> 00:05:19.460
We didn't want to introduce
any additional global variables

00:05:19.460 --> 00:05:21.777
other than just a
single data layer.

00:05:21.777 --> 00:05:24.110
Because then in the mess that
he's talking about before,

00:05:24.110 --> 00:05:26.300
you end up with global
variables for just

00:05:26.300 --> 00:05:28.080
about every single
vendor that you're

00:05:28.080 --> 00:05:32.270
talking about, and sometimes
multiple pieces of code

00:05:32.270 --> 00:05:34.810
in that global name space.

00:05:34.810 --> 00:05:37.690
So the data layer
really is confined

00:05:37.690 --> 00:05:41.170
to that single variable,
that simple message bus.

00:05:41.170 --> 00:05:43.495
The other thing that is
interesting about the mess,

00:05:43.495 --> 00:05:47.010
is that every vendor has
their own different way

00:05:47.010 --> 00:05:49.460
of capturing this data.

00:05:49.460 --> 00:05:51.430
Some of them have
synchronous API's.

00:05:51.430 --> 00:05:54.480
Some of them have boot
loaders that have to come in,

00:05:54.480 --> 00:05:58.370
and pieces of JavaScript that
have to load before any of this

00:05:58.370 --> 00:05:59.510
happens.

00:05:59.510 --> 00:06:01.690
We wanted to avoid all that.

00:06:01.690 --> 00:06:03.170
So if you go to
the next slide, I

00:06:03.170 --> 00:06:06.030
can show you the
data layer really

00:06:06.030 --> 00:06:10.320
is a basic JavaScript array.

00:06:10.320 --> 00:06:13.542
It starts as a piece
of code that you

00:06:13.542 --> 00:06:14.750
can put directly in the page.

00:06:14.750 --> 00:06:17.810
There's no boot loader, there's
no piece of JavaScript that has

00:06:17.810 --> 00:06:21.010
to load and provide API's.

00:06:21.010 --> 00:06:23.515
No complicated things
for the page author

00:06:23.515 --> 00:06:25.044
to actually put into the page.

00:06:25.044 --> 00:06:27.710
Really we wanted to keep this as
simple as possible for the page

00:06:27.710 --> 00:06:28.210
author.

00:06:28.210 --> 00:06:31.470
So they really just have
to define this one array.

00:06:31.470 --> 00:06:34.150
And then basically
append messages on to it.

00:06:34.150 --> 00:06:36.390
ANDREW WALES: So it's an
array with some conventions

00:06:36.390 --> 00:06:37.370
around how you use it.

00:06:37.370 --> 00:06:38.080
LUKAS BERGSTROM: Right.

00:06:38.080 --> 00:06:38.420
BRIAN KUHN: Right.

00:06:38.420 --> 00:06:39.690
ANDREW WALES: Now if
you we're using it

00:06:39.690 --> 00:06:41.480
with Google Tag
Manager for example,

00:06:41.480 --> 00:06:43.850
there is some code
for Tag Manager

00:06:43.850 --> 00:06:46.280
that you would also need
to include, in addition.

00:06:46.280 --> 00:06:47.030
BRIAN KUHN: Right.

00:06:47.030 --> 00:06:50.170
So that's another goal of this
is really so your instrumenting

00:06:50.170 --> 00:06:53.300
your site once and any
vendors that are on the page,

00:06:53.300 --> 00:06:55.740
like Google Tag Manager,
or Google Analytics,

00:06:55.740 --> 00:06:59.830
or other vendors out there,
they can consume that data.

00:06:59.830 --> 00:07:02.700
So this puts a little bit
more work on the vendor side,

00:07:02.700 --> 00:07:04.910
but it keeps the page author's
job very, very simple.

00:07:04.910 --> 00:07:06.451
They basically just
create this array

00:07:06.451 --> 00:07:08.780
of pushing messages onto it.

00:07:08.780 --> 00:07:11.230
And then any vendors that have
to be installed on the page

00:07:11.230 --> 00:07:14.900
can just consume that
data as it comes in.

00:07:14.900 --> 00:07:18.310
The other nice thing
about this approach

00:07:18.310 --> 00:07:22.160
is that it allows these vendors
to be loaded asynchronous.

00:07:22.160 --> 00:07:24.580
So again, they don't slow
down the page either.

00:07:24.580 --> 00:07:26.657
So if they come
along, they're not

00:07:26.657 --> 00:07:28.240
going to actually
lose any of the data

00:07:28.240 --> 00:07:30.226
that you're appending
onto the queue.

00:07:30.226 --> 00:07:32.280
So you append message,
message, message.

00:07:32.280 --> 00:07:34.380
And then they come along
somewhere along the line

00:07:34.380 --> 00:07:36.421
and then they can actually
see the entire history

00:07:36.421 --> 00:07:37.640
of what's been pushed.

00:07:37.640 --> 00:07:40.640
And they can consume
it piece by piece.

00:07:40.640 --> 00:07:44.560
So you can see in
this next slide,

00:07:44.560 --> 00:07:51.400
this is an example of an initial
message on the data layer.

00:07:51.400 --> 00:07:53.490
If your needs are simple
and you really just

00:07:53.490 --> 00:07:56.070
have a static set
of key value pairs,

00:07:56.070 --> 00:07:57.430
you can actually just do this.

00:07:57.430 --> 00:07:59.880
You just basically have an
array with a single message

00:07:59.880 --> 00:08:02.110
of the inside of it, and
then the key value pairs

00:08:02.110 --> 00:08:04.640
that you want to use.

00:08:04.640 --> 00:08:08.270
And then in the next slide,
we can show you how later on,

00:08:08.270 --> 00:08:12.410
let's say you've got that
static set of key value pairs

00:08:12.410 --> 00:08:13.550
in the page.

00:08:13.550 --> 00:08:15.590
And let's say some
event happens.

00:08:15.590 --> 00:08:20.030
You view part of the page,
or you click on a link,

00:08:20.030 --> 00:08:24.200
or you view a carousel
like you said.

00:08:24.200 --> 00:08:26.980
You can instrument those
actions in your page

00:08:26.980 --> 00:08:30.500
to push additional
messages on to the queue.

00:08:30.500 --> 00:08:32.270
And they'll get
processed in order,

00:08:32.270 --> 00:08:35.230
by the various vendors they
want to read those messages.

00:08:35.230 --> 00:08:37.684
And some vendors will
ignore messages and not

00:08:37.684 --> 00:08:39.600
care about certain
messages, but other vendors

00:08:39.600 --> 00:08:43.360
will care about your
carousel clicks.

00:08:43.360 --> 00:08:46.784
LUKAS BERGSTROM: So we're
using the data layer

00:08:46.784 --> 00:08:48.200
for two different
types of things.

00:08:48.200 --> 00:08:52.220
And one is like, this
variable has this value.

00:08:52.220 --> 00:08:54.150
Maybe just like a
static page level thing

00:08:54.150 --> 00:08:56.310
you know when the page loads.

00:08:56.310 --> 00:08:59.790
But we're also using it for
things are happening in time.

00:08:59.790 --> 00:09:03.576
This event has happened, here
are some associated values.

00:09:03.576 --> 00:09:04.974
BRIAN KUHN: Right.

00:09:04.974 --> 00:09:06.770
ANDREW WALES: When
you say vendor,

00:09:06.770 --> 00:09:08.520
just so everybody's
clear, would you

00:09:08.520 --> 00:09:10.322
consider Tag Manager
itself one of those.

00:09:10.322 --> 00:09:11.280
BRIAN KUHN: Absolutely.

00:09:11.280 --> 00:09:11.695
Absolutely.

00:09:11.695 --> 00:09:13.050
ANDREW WALES: So Tag
Manager's one vendor

00:09:13.050 --> 00:09:15.110
but there could be some
other solution, that

00:09:15.110 --> 00:09:17.110
also wants to use the
data layer which is fine.

00:09:17.110 --> 00:09:17.860
BRIAN KUHN: Right.

00:09:17.860 --> 00:09:20.710
We look at basically two
actors here, the page author

00:09:20.710 --> 00:09:21.490
and vendors.

00:09:21.490 --> 00:09:23.387
So we want to keep
it as simplest

00:09:23.387 --> 00:09:24.720
possible for those page authors.

00:09:27.390 --> 00:09:31.940
So this gets actually
into how vendors actually

00:09:31.940 --> 00:09:33.400
consume the messages
that are being

00:09:33.400 --> 00:09:34.635
pushed on to the data layer.

00:09:34.635 --> 00:09:36.010
And now it's
probably a good time

00:09:36.010 --> 00:09:38.080
to talk about something
Lukas was mentioning,

00:09:38.080 --> 00:09:40.595
which is the abstract
data model underneath.

00:09:40.595 --> 00:09:41.970
So for each message,
you're going

00:09:41.970 --> 00:09:45.250
to pass in some key value pairs.

00:09:45.250 --> 00:09:48.950
So over time, we keep
an internal memory

00:09:48.950 --> 00:09:52.030
of that or a storage location
for all of those key value

00:09:52.030 --> 00:09:52.810
pairs.

00:09:52.810 --> 00:09:56.172
Basically keeping the most
recent value for any given key.

00:09:56.172 --> 00:09:57.880
This kind of acts like
a database for all

00:09:57.880 --> 00:09:59.921
those key value pairs, so
that you can come along

00:09:59.921 --> 00:10:04.427
and it acts as a page view
level storage basically.

00:10:04.427 --> 00:10:06.760
So if you're using a tool
like GTM or some other vendor,

00:10:06.760 --> 00:10:09.970
you can use like a macro to read
those values at any given time.

00:10:09.970 --> 00:10:12.480
You don't have to be there
at the time of the message.

00:10:12.480 --> 00:10:13.313
ANDREW WALES: Right.

00:10:16.640 --> 00:10:19.974
BRIAN KUHN: Because this is
baked into GTM at the moment,

00:10:19.974 --> 00:10:21.390
we really wanted
to make the point

00:10:21.390 --> 00:10:25.070
that, these vendors out
there other than GTM,

00:10:25.070 --> 00:10:27.720
can also consume the data layer.

00:10:27.720 --> 00:10:31.360
So we actually put out a
data layer helper library,

00:10:31.360 --> 00:10:37.540
which is basically the piece of
GTM, that consumes the messages

00:10:37.540 --> 00:10:40.430
and keeps track of the
abstract data model.

00:10:40.430 --> 00:10:42.810
So this is actually out
on GitHub right now.

00:10:42.810 --> 00:10:44.840
So vendors can actually
go and play with it,

00:10:44.840 --> 00:10:47.446
incorporate into their
own products if they like.

00:10:47.446 --> 00:10:53.300
And we can start collaborating
on kind of a industry standard.

00:10:53.300 --> 00:10:55.410
ANDREW WALES: And you
mentioned industry standard,

00:10:55.410 --> 00:10:58.897
was there some work you guys
were doing around the W3C?

00:10:58.897 --> 00:11:01.230
LUKAS BERGSTROM: So we're
working with the W3C community

00:11:01.230 --> 00:11:06.580
group to develop some kind
of common approach to this.

00:11:06.580 --> 00:11:11.160
So this is the
architecture side.

00:11:11.160 --> 00:11:15.520
So how you actually
encode, do this stuff.

00:11:15.520 --> 00:11:17.330
Another part of
the W3C effort is,

00:11:17.330 --> 00:11:19.376
what's the vocabulary you use?

00:11:19.376 --> 00:11:20.750
What are the key
value pairs that

00:11:20.750 --> 00:11:24.390
describe e-commerce events?

00:11:24.390 --> 00:11:27.060
But we're working with
this and proposing

00:11:27.060 --> 00:11:31.660
this as the standard
approach to how

00:11:31.660 --> 00:11:35.330
you represent the data on page.

00:11:35.330 --> 00:11:40.950
So a common message bus that the
other participants in W3C group

00:11:40.950 --> 00:11:44.210
are mostly other tag
management systems.

00:11:44.210 --> 00:11:47.830
So this would be hopefully
in a common message bus,

00:11:47.830 --> 00:11:50.610
regardless of the Tag Management
solution you're using.

00:11:50.610 --> 00:11:52.440
You can just push
data to that and know

00:11:52.440 --> 00:11:54.440
that they'll be able to
consume it successfully.

00:11:54.440 --> 00:11:55.856
ANDREW WALES: So
as a page author,

00:11:55.856 --> 00:11:58.569
you don't have to worry about
dealing with different APIs.

00:11:58.569 --> 00:12:00.610
BRIAN KUHN: Yeah so you
can use multiple vendors.

00:12:00.610 --> 00:12:03.210
You can switch
vendors seamlessly.

00:12:03.210 --> 00:12:04.269
It's very easy for you.

00:12:08.470 --> 00:12:09.970
ANDREW WALES: And
I think Lukas, you

00:12:09.970 --> 00:12:13.290
had some examples of
like real world use cases

00:12:13.290 --> 00:12:15.040
where data layer would
really be helpful.

00:12:15.040 --> 00:12:19.195
LUKAS BERGSTROM: Yes who
are examples of developers

00:12:19.195 --> 00:12:23.350
who would gain value from
working with this right.

00:12:23.350 --> 00:12:27.300
One example is e-commerce
platform vendors.

00:12:27.300 --> 00:12:34.290
If you want your users to be
able to track visitor behavior

00:12:34.290 --> 00:12:39.820
if you're a site like
Yahoo stores or Shopify,

00:12:39.820 --> 00:12:45.720
then you can either do dozens
of ad hoc integrations right.

00:12:45.720 --> 00:12:49.410
Or you can basically
push data events

00:12:49.410 --> 00:12:51.017
on to the data layer right.

00:12:51.017 --> 00:12:51.975
For vendors to consume.

00:12:54.810 --> 00:12:57.250
And in the near
term, when there are

00:12:57.250 --> 00:13:01.000
vendors that still haven't
built in support for this,

00:13:01.000 --> 00:13:03.120
you may have a
translation layer that

00:13:03.120 --> 00:13:05.180
listen to the stuff
on the data layer

00:13:05.180 --> 00:13:09.690
and then pushes it to the vendor
in the format they expect.

00:13:09.690 --> 00:13:17.260
But at least there
you've abstracted away,

00:13:17.260 --> 00:13:20.030
you don't have a direct
coupling between this vendor

00:13:20.030 --> 00:13:22.660
and this button click
on a button with this ID

00:13:22.660 --> 00:13:24.100
in class right.

00:13:24.100 --> 00:13:26.100
All you all you need
to know is, what's

00:13:26.100 --> 00:13:28.110
the interesting stuff
I want to track,

00:13:28.110 --> 00:13:32.870
and then map those vendors
on to the data layer format.

00:13:32.870 --> 00:13:34.800
So for e-commerce
platform vendors,

00:13:34.800 --> 00:13:38.780
they get to basically just
instrument the site once

00:13:38.780 --> 00:13:41.910
and then their users can
plug-in whatever performance

00:13:41.910 --> 00:13:43.140
tracking vendors they want.

00:13:43.140 --> 00:13:45.210
ANDREW WALES: On the
other hand, would it make

00:13:45.210 --> 00:13:48.830
sense if you were pushing
things to the data layer

00:13:48.830 --> 00:13:52.440
and you also using Google Tag
Manager, or one such vendor

00:13:52.440 --> 00:13:56.690
and you can implement other
vendors via tags in Google site

00:13:56.690 --> 00:13:58.070
manager, then that
would give you

00:13:58.070 --> 00:13:59.990
a complete solution without
having to do the mapping.

00:13:59.990 --> 00:14:01.170
LUKAS BERGSTROM: Yeah exactly.

00:14:01.170 --> 00:14:02.586
ANDREW WALES: But
otherwise if you

00:14:02.586 --> 00:14:04.670
couldn't do that thought
GTM for whatever reason,

00:14:04.670 --> 00:14:06.840
you're talking about kind
of having a second layer

00:14:06.840 --> 00:14:09.476
translation thing to
look at the data layer

00:14:09.476 --> 00:14:12.760
and then make it into the
format that the vendor needs.

00:14:12.760 --> 00:14:14.870
LUKAS BERGSTROM: Yeah
so like in the near term

00:14:14.870 --> 00:14:17.950
is we're building
industry support,

00:14:17.950 --> 00:14:20.800
you might need to build in
kind of just little translation

00:14:20.800 --> 00:14:21.550
shims.

00:14:21.550 --> 00:14:24.280
But it's still like a net win
because they're abstracted away

00:14:24.280 --> 00:14:29.499
from the particular like
structure of like the website.

00:14:29.499 --> 00:14:31.040
ANDREW WALES: And
then, I think there

00:14:31.040 --> 00:14:33.572
was a-- we've talked about this.

00:14:33.572 --> 00:14:35.530
LUKAS BERGSTROM: We've
been talking about this.

00:14:35.530 --> 00:14:37.750
If your page author,
you just need

00:14:37.750 --> 00:14:40.880
to think about the interesting
events and data once and then

00:14:40.880 --> 00:14:43.170
plug-in vendors.

00:14:43.170 --> 00:14:49.055
So I guess, looking two or
three years out, how do you see,

00:14:49.055 --> 00:14:51.180
it sounds like you're seeing
the data layer as kind

00:14:51.180 --> 00:14:54.090
of like a new standard
way for page authors

00:14:54.090 --> 00:14:55.327
to pushing this information.

00:14:55.327 --> 00:14:57.660
And hopefully we're going to
see other vendors, not just

00:14:57.660 --> 00:14:59.787
Google Tag Manager but
a lot of other solutions

00:14:59.787 --> 00:15:01.370
to be about to read
from that as well.

00:15:01.370 --> 00:15:02.786
BRIAN KUHN: We'd
would like to see

00:15:02.786 --> 00:15:05.160
this become the
mechanism in which data

00:15:05.160 --> 00:15:06.744
is instrumented on a page.

00:15:06.744 --> 00:15:08.910
And it really is like I
said, an event driven model,

00:15:08.910 --> 00:15:11.140
so we're really
trying to be capture

00:15:11.140 --> 00:15:13.270
all those pieces
of data, not just

00:15:13.270 --> 00:15:15.940
like the constants in the page.

00:15:15.940 --> 00:15:20.270
But all the data based on events
happening throughout the page.

00:15:20.270 --> 00:15:22.890
Ajax apps, things like that.

00:15:22.890 --> 00:15:25.530
LUKAS BERGSTROM: So as sites
get more and more dynamic,

00:15:25.530 --> 00:15:28.140
this is like the perfect
architecture to support that.

00:15:28.140 --> 00:15:30.350
And I think where
we'd like to see

00:15:30.350 --> 00:15:32.915
this go-- one
example of the change

00:15:32.915 --> 00:15:35.730
is have more and more content
management system self

00:15:35.730 --> 00:15:37.110
instrument.

00:15:37.110 --> 00:15:40.180
Just have them by default be
just pushing interesting stuff

00:15:40.180 --> 00:15:43.970
on to the data layer, because
right now we live in a world

00:15:43.970 --> 00:15:47.330
where, you've got content
management systems here, tag

00:15:47.330 --> 00:15:50.850
management systems here, and
the CMS doesn't know anything

00:15:50.850 --> 00:15:52.780
about the TMS, these
two parallel systems,

00:15:52.780 --> 00:15:55.300
so when the CM'S
changes right, someone

00:15:55.300 --> 00:15:57.020
changes the structure
of the site,

00:15:57.020 --> 00:15:59.723
your tag management
setup might break.

00:15:59.723 --> 00:16:02.680
But if the CMS is
self instrumenting,

00:16:02.680 --> 00:16:04.677
you don't have that problem.

00:16:04.677 --> 00:16:05.760
ANDREW WALES: That's cool.

00:16:05.760 --> 00:16:10.870
And this also, you guys work
mainly with web apps, but does

00:16:10.870 --> 00:16:12.930
this also apply to the
world of native apps,

00:16:12.930 --> 00:16:14.170
because we do have a native.

00:16:14.170 --> 00:16:16.420
BRIAN KUHN: Yeah we
use the same concept

00:16:16.420 --> 00:16:19.110
on the native apps, the
available SDK as well.

00:16:19.110 --> 00:16:22.224
ANDREW WALES: So it's the
same thing it's a dictionary.

00:16:22.224 --> 00:16:23.140
LUKAS BERGSTROM: Yeah.

00:16:23.140 --> 00:16:25.010
BRIAN KUHN: Yeah because
there's no boot loading issues

00:16:25.010 --> 00:16:27.176
there having to load scripts
and slow down the page,

00:16:27.176 --> 00:16:29.880
they can actually have
a kind of more rich API.

00:16:29.880 --> 00:16:34.085
But it's virtually the
same, same concepts.

00:16:37.097 --> 00:16:38.930
ANDREW WALES: So just
get to some resources.

00:16:38.930 --> 00:16:40.690
Make sure you guys have
links to some of the stuff

00:16:40.690 --> 00:16:41.742
that we talked about.

00:16:41.742 --> 00:16:43.450
We showed you the link
earlier but if you

00:16:43.450 --> 00:16:46.769
want to check out the data layer
helper library, the open source

00:16:46.769 --> 00:16:49.060
library that's on GitHub, we
have a link for you there.

00:16:49.060 --> 00:16:51.350
And this would really
be for other vendors

00:16:51.350 --> 00:16:54.660
out there, who might
want to also consume data

00:16:54.660 --> 00:16:55.659
from the Date layer.

00:16:55.659 --> 00:16:57.200
BRIAN KUHN: This is
open source so we

00:16:57.200 --> 00:16:58.966
expect this to be collaborative.

00:16:58.966 --> 00:17:02.810
If anybody wants to
contribute please let us know.

00:17:02.810 --> 00:17:04.810
ANDREW WALES: And we did
talk about a little bit

00:17:04.810 --> 00:17:06.020
about Tag Manager.

00:17:06.020 --> 00:17:09.240
Tag Manager, obviously works
very well the data layer

00:17:09.240 --> 00:17:13.139
and you can implement a lot of
other vendors tags through GTM,

00:17:13.139 --> 00:17:14.680
so if you haven't
checked it out yet,

00:17:14.680 --> 00:17:19.151
you can see Tag Manager
at Google.com/tagmanager.

00:17:19.151 --> 00:17:19.650
Cool.

00:17:19.650 --> 00:17:21.609
I think that's it
for today, if you

00:17:21.609 --> 00:17:23.770
have any questions,
as always, feel

00:17:23.770 --> 00:17:27.839
free to reach out to us on G
plus or reach out to me on G

00:17:27.839 --> 00:17:29.070
plus as well.

00:17:29.070 --> 00:17:31.370
Brian and Lukas, thank you
guys so much for joining us.

00:17:31.370 --> 00:17:31.810
LUKAS BERGSTROM: Thanks, Andrew.

00:17:31.810 --> 00:17:32.640
BRIAN KUHN: Thanks.

00:17:32.640 --> 00:17:35.910
ANDREW WALES: And thank you guys
and we'll see you in next time.

