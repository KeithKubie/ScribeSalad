WEBVTT
Kind: captions
Language: en

00:00:00.730 --> 00:00:04.094
At this point, you should have
successfully made your first network

00:00:04.094 --> 00:00:07.005
request, but let's say,
I want to load a different image.

00:00:07.005 --> 00:00:11.865
Specifically, let's say I want to load
an image that uses HTTP instead of

00:00:11.865 --> 00:00:12.430
HTTPS.

00:00:12.430 --> 00:00:16.859
Let's switch the URL and
rerun our project.

00:00:16.859 --> 00:00:19.386
Now when we launch the app,
we see this error.

00:00:19.386 --> 00:00:24.177
It says, App Transport Security has
blocked cleartext HTTP resource

00:00:24.177 --> 00:00:26.134
load since it's insecure.

00:00:26.134 --> 00:00:30.503
Temporary exceptions can be configured
in your app's Info.plist file.

00:00:30.503 --> 00:00:32.150
What's this all about?

00:00:32.150 --> 00:00:35.365
Well, it has to do with Apple's
new security feature called

00:00:35.365 --> 00:00:37.074
App Transport Security or ATS.

00:00:37.074 --> 00:00:41.260
ATS helps our apps be more secure
by forcing them to abide by certain

00:00:41.260 --> 00:00:46.043
security standards and as we can see
in this little documentation, one such

00:00:46.043 --> 00:00:51.074
standard is the recommendation to use
HTTPS exclusively, but what's HTTPS?

00:00:51.074 --> 00:00:55.090
Well, it's like HTTP, but
with an added layer of security.

00:00:55.090 --> 00:00:58.468
We'll talk about it more later
in this course, but for now,

00:00:58.468 --> 00:01:01.913
just know that HTTPS helps ensure
that the data we send back and

00:01:01.913 --> 00:01:04.245
forth across the network is more secure.

00:01:04.245 --> 00:01:07.434
So, does this mean that we
can't use things that use HTTP?

00:01:07.434 --> 00:01:08.328
Not exactly.

00:01:08.328 --> 00:01:12.680
We can actually enable the use of HTTP
in our apps by changing some settings in

00:01:12.680 --> 00:01:14.046
the Info.plist file.

00:01:14.046 --> 00:01:16.484
This is what was recommended
in the debugger.

00:01:16.484 --> 00:01:19.124
So, let's go to the Info.plist file.

00:01:19.124 --> 00:01:23.697
Here at the top, let's click the plus
sign and add a new key value pair.

00:01:23.697 --> 00:01:28.978
Start typing app transport and
select App Transport Security Settings.

00:01:28.978 --> 00:01:32.752
This should automatically default
to a dictionary value and

00:01:32.752 --> 00:01:35.643
we can add additional
settings to allow HTTP.

00:01:35.643 --> 00:01:40.113
Click the arrow to expand the ATS
settings and then click the plus and

00:01:40.113 --> 00:01:44.278
the setting we'll want to use
is called Allow Arbitrary Loads.

00:01:44.278 --> 00:01:47.102
This is a Boolean value and
we'll set it to YES.

00:01:47.102 --> 00:01:50.207
Setting this to YES is like saying, yes,

00:01:50.207 --> 00:01:53.420
I want to allow any HTTP request for
my app.

00:01:53.420 --> 00:01:58.373
Now we can actually be more specific and
configure settings that are like saying,

00:01:58.373 --> 00:02:01.627
I want HTTP request, but
only for a specific domain.

00:02:01.627 --> 00:02:04.710
For instance, .com and
I won't show that now, but

00:02:04.710 --> 00:02:08.473
I'll post a how to link in the
instructor notes, if you're interested.

00:02:08.473 --> 00:02:15.468
With these settings changed,
let's try running our project, nice.

00:02:15.468 --> 00:02:16.045
There we go.

00:02:16.045 --> 00:02:19.160
Our request works and there's no error.

00:02:19.160 --> 00:02:22.300
There's one more thing that
I want to say about ATS.

00:02:22.300 --> 00:02:25.800
As app developers, we may run into
situations where the data we want to

00:02:25.800 --> 00:02:29.260
access over the network only uses HTTP.

00:02:29.260 --> 00:02:34.130
So, how do we follow Apple's
guidelines and try to move to HTTPS?

00:02:34.130 --> 00:02:35.190
Is there anything that we can do?

00:02:36.220 --> 00:02:38.690
Well, if you find yourself
in that situation,

00:02:38.690 --> 00:02:41.100
it's somewhat out of your hands.

00:02:41.100 --> 00:02:45.530
The switch from HTTP to HTTPS is
something that the individual or

00:02:45.530 --> 00:02:50.000
company running the server where you
access the data is responsible for.

00:02:50.000 --> 00:02:51.880
So I'd recommend getting
in touch with them,

00:02:51.880 --> 00:02:54.750
encouraging them to upgrade
their security standards.

00:02:55.940 --> 00:02:57.590
If they're unable to upgrade to HTTPS,

00:02:57.590 --> 00:03:02.570
you may also consider using a different
server or resource all together.

00:03:02.570 --> 00:03:06.260
Whatever the case, the security of
data should always be top priority.

00:03:06.260 --> 00:03:08.890
Otherwise, users may not be
willing to download your apps.

