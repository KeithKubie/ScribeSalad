WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.000
For this question, your goal is to find a hash collision.

00:00:03.000 --> 00:00:06.000
We've defined a bad hash function,

00:00:06.000 --> 00:00:10.000
which is using counter mode to encrypt

00:00:10.000 --> 00:00:14.000
and then XORing all the blocks of cipher text that come out

00:00:14.000 --> 00:00:17.000
and using that as the hash output.

00:00:17.000 --> 00:00:20.000
And we've provided the code for our hash function.

00:00:20.000 --> 00:00:23.000
Your goal is to find 2 strings where the hash outputs are the same

00:00:23.000 --> 00:00:26.000
but the actual strings are different.

00:00:26.000 --> 00:00:28.000
For this problem, we've provided an implementation of counter mode

00:00:28.000 --> 00:00:30.000
to be used as a hash function.

00:00:30.000 --> 00:00:32.000
The counter mode will take in a plaintext input

00:00:32.000 --> 00:00:34.000
and calculate the cipher blocks as expected,

00:00:34.000 --> 00:00:37.000
which are then XORed together to return the hash.

00:00:37.000 --> 00:00:40.000
Your job will be to implement find&lt;u&gt;collision&lt;/u&gt;

00:00:40.000 --> 00:00:42.000
to find a collision given an input message.

00:00:42.000 --> 00:00:44.000
We've provided 4 test cases for you to use

00:00:44.000 --> 00:00:46.000
to see if your code works

00:00:46.000 --> 99:59:59.000
along with some  utility functions that you might find useful.

