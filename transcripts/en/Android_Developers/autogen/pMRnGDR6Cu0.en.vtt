WEBVTT
Kind: captions
Language: en

00:00:05.600 --> 00:00:08.089
 
welcome to part 4 of the dev bytes

00:00:08.089 --> 00:00:08.099
welcome to part 4 of the dev bytes
 

00:00:08.099 --> 00:00:11.299
welcome to part 4 of the dev bytes
series making apps beautiful thus far

00:00:11.299 --> 00:00:11.309
series making apps beautiful thus far
 

00:00:11.309 --> 00:00:12.799
series making apps beautiful thus far
we've managed to make our app look

00:00:12.799 --> 00:00:12.809
we've managed to make our app look
 

00:00:12.809 --> 00:00:15.079
we've managed to make our app look
beautiful on modern phones and tablets

00:00:15.079 --> 00:00:15.089
beautiful on modern phones and tablets
 

00:00:15.089 --> 00:00:17.090
beautiful on modern phones and tablets
but we haven't really looked at the

00:00:17.090 --> 00:00:17.100
but we haven't really looked at the
 

00:00:17.100 --> 00:00:20.060
but we haven't really looked at the
performance aspect having a beautiful

00:00:20.060 --> 00:00:20.070
performance aspect having a beautiful
 

00:00:20.070 --> 00:00:22.370
performance aspect having a beautiful
app is more than just how it looks when

00:00:22.370 --> 00:00:22.380
app is more than just how it looks when
 

00:00:22.380 --> 00:00:25.009
app is more than just how it looks when
it's not moving or animating it's about

00:00:25.009 --> 00:00:25.019
it's not moving or animating it's about
 

00:00:25.019 --> 00:00:27.019
it's not moving or animating it's about
making sure it's about also making sure

00:00:27.019 --> 00:00:27.029
making sure it's about also making sure
 

00:00:27.029 --> 00:00:31.550
making sure it's about also making sure
that it's smooth and jank free so from a

00:00:31.550 --> 00:00:31.560
that it's smooth and jank free so from a
 

00:00:31.560 --> 00:00:33.049
that it's smooth and jank free so from a
performance tuning point of view what

00:00:33.049 --> 00:00:33.059
performance tuning point of view what
 

00:00:33.059 --> 00:00:36.470
performance tuning point of view what
I'd like to do is profile my device on

00:00:36.470 --> 00:00:36.480
I'd like to do is profile my device on
 

00:00:36.480 --> 00:00:38.600
I'd like to do is profile my device on
the lowest common denominator which is

00:00:38.600 --> 00:00:38.610
the lowest common denominator which is
 

00:00:38.610 --> 00:00:40.010
the lowest common denominator which is
exactly what we're going to do today

00:00:40.010 --> 00:00:40.020
exactly what we're going to do today
 

00:00:40.020 --> 00:00:42.920
exactly what we're going to do today
we're going to use the Nexus S running

00:00:42.920 --> 00:00:42.930
we're going to use the Nexus S running
 

00:00:42.930 --> 00:00:45.680
we're going to use the Nexus S running
Android 2.3 fondly known as Gingerbread

00:00:45.680 --> 00:00:45.690
Android 2.3 fondly known as Gingerbread
 

00:00:45.690 --> 00:00:47.990
Android 2.3 fondly known as Gingerbread
so let's see let's switch over to our

00:00:47.990 --> 00:00:48.000
so let's see let's switch over to our
 

00:00:48.000 --> 00:00:50.690
so let's see let's switch over to our
Nexus S and see what our app looks like

00:00:50.690 --> 00:00:50.700
Nexus S and see what our app looks like
 

00:00:50.700 --> 00:00:56.720
Nexus S and see what our app looks like
in its current state Bom Bom it crashed

00:00:56.720 --> 00:00:56.730
in its current state Bom Bom it crashed
 

00:00:56.730 --> 00:00:59.779
in its current state Bom Bom it crashed
now we're going to switch back to the

00:00:59.779 --> 00:00:59.789
now we're going to switch back to the
 

00:00:59.789 --> 00:01:03.470
now we're going to switch back to the
slides and see why the reality of it is

00:01:03.470 --> 00:01:03.480
slides and see why the reality of it is
 

00:01:03.480 --> 00:01:04.969
slides and see why the reality of it is
is that we're loading these

00:01:04.969 --> 00:01:04.979
is that we're loading these
 

00:01:04.979 --> 00:01:08.210
is that we're loading these
high-resolution meet images and then

00:01:08.210 --> 00:01:08.220
high-resolution meet images and then
 

00:01:08.220 --> 00:01:11.510
high-resolution meet images and then
displaying them as some nails so we're

00:01:11.510 --> 00:01:11.520
displaying them as some nails so we're
 

00:01:11.520 --> 00:01:13.370
displaying them as some nails so we're
actually exhausting the memory on the

00:01:13.370 --> 00:01:13.380
actually exhausting the memory on the
 

00:01:13.380 --> 00:01:16.520
actually exhausting the memory on the
Nexus S much sooner than we would on our

00:01:16.520 --> 00:01:16.530
Nexus S much sooner than we would on our
 

00:01:16.530 --> 00:01:18.380
Nexus S much sooner than we would on our
more modern devices and it would have

00:01:18.380 --> 00:01:18.390
more modern devices and it would have
 

00:01:18.390 --> 00:01:20.719
more modern devices and it would have
even happened with those ones if we had

00:01:20.719 --> 00:01:20.729
even happened with those ones if we had
 

00:01:20.729 --> 00:01:23.749
even happened with those ones if we had
more images so let's now switch to the

00:01:23.749 --> 00:01:23.759
more images so let's now switch to the
 

00:01:23.759 --> 00:01:26.420
more images so let's now switch to the
code and see how we can better optimize

00:01:26.420 --> 00:01:26.430
code and see how we can better optimize
 

00:01:26.430 --> 00:01:29.510
code and see how we can better optimize
this what we're going to do is load

00:01:29.510 --> 00:01:29.520
this what we're going to do is load
 

00:01:29.520 --> 00:01:32.030
this what we're going to do is load
these images in that at the resolution

00:01:32.030 --> 00:01:32.040
these images in that at the resolution
 

00:01:32.040 --> 00:01:33.920
these images in that at the resolution
that we're going to display them rather

00:01:33.920 --> 00:01:33.930
that we're going to display them rather
 

00:01:33.930 --> 00:01:37.399
that we're going to display them rather
than the resolution that they their

00:01:37.399 --> 00:01:37.409
than the resolution that they their
 

00:01:37.409 --> 00:01:39.469
than the resolution that they their
source resolution so we use this bitmap

00:01:39.469 --> 00:01:39.479
source resolution so we use this bitmap
 

00:01:39.479 --> 00:01:42.560
source resolution so we use this bitmap
factory options object and we then set

00:01:42.560 --> 00:01:42.570
factory options object and we then set
 

00:01:42.570 --> 00:01:44.840
factory options object and we then set
this in just the code bounds to true

00:01:44.840 --> 00:01:44.850
this in just the code bounds to true
 

00:01:44.850 --> 00:01:47.179
this in just the code bounds to true
what that does is that it makes sure

00:01:47.179 --> 00:01:47.189
what that does is that it makes sure
 

00:01:47.189 --> 00:01:49.550
what that does is that it makes sure
that the code resources only looks at

00:01:49.550 --> 00:01:49.560
that the code resources only looks at
 

00:01:49.560 --> 00:01:51.440
that the code resources only looks at
the metadata of that bitmap and in this

00:01:51.440 --> 00:01:51.450
the metadata of that bitmap and in this
 

00:01:51.450 --> 00:01:54.050
the metadata of that bitmap and in this
case the resolution so once we've loaded

00:01:54.050 --> 00:01:54.060
case the resolution so once we've loaded
 

00:01:54.060 --> 00:01:56.240
case the resolution so once we've loaded
that we're going to go into our own

00:01:56.240 --> 00:01:56.250
that we're going to go into our own
 

00:01:56.250 --> 00:01:58.630
that we're going to go into our own
method called calculate in sample size

00:01:58.630 --> 00:01:58.640
method called calculate in sample size
 

00:01:58.640 --> 00:02:00.620
method called calculate in sample size
we're going to try and calculate what

00:02:00.620 --> 00:02:00.630
we're going to try and calculate what
 

00:02:00.630 --> 00:02:04.219
we're going to try and calculate what
the value of this should be basically in

00:02:04.219 --> 00:02:04.229
the value of this should be basically in
 

00:02:04.229 --> 00:02:07.039
the value of this should be basically in
sample size is a is a value that's used

00:02:07.039 --> 00:02:07.049
sample size is a is a value that's used
 

00:02:07.049 --> 00:02:09.440
sample size is a is a value that's used
like a power of two so in sample size of

00:02:09.440 --> 00:02:09.450
like a power of two so in sample size of
 

00:02:09.450 --> 00:02:11.750
like a power of two so in sample size of
one we'll mean we load the image in its

00:02:11.750 --> 00:02:11.760
one we'll mean we load the image in its
 

00:02:11.760 --> 00:02:14.000
one we'll mean we load the image in its
native resolution or source resolution

00:02:14.000 --> 00:02:14.010
native resolution or source resolution
 

00:02:14.010 --> 00:02:17.089
native resolution or source resolution
- will mean it'll be halved horizontally

00:02:17.089 --> 00:02:17.099
- will mean it'll be halved horizontally
 

00:02:17.099 --> 00:02:19.130
- will mean it'll be halved horizontally
and hard vertically so it'll be a

00:02:19.130 --> 00:02:19.140
and hard vertically so it'll be a
 

00:02:19.140 --> 00:02:20.809
and hard vertically so it'll be a
quarter of the size of the original

00:02:20.809 --> 00:02:20.819
quarter of the size of the original
 

00:02:20.819 --> 00:02:24.080
quarter of the size of the original
image so we just basically use some

00:02:24.080 --> 00:02:24.090
image so we just basically use some
 

00:02:24.090 --> 00:02:28.339
image so we just basically use some
basic arithmetics here to work out based

00:02:28.339 --> 00:02:28.349
basic arithmetics here to work out based
 

00:02:28.349 --> 00:02:30.140
basic arithmetics here to work out based
on the source resolution of the image

00:02:30.140 --> 00:02:30.150
on the source resolution of the image
 

00:02:30.150 --> 00:02:32.449
on the source resolution of the image
versus the display or required

00:02:32.449 --> 00:02:32.459
versus the display or required
 

00:02:32.459 --> 00:02:35.420
versus the display or required
resolution and then based on that ratio

00:02:35.420 --> 00:02:35.430
resolution and then based on that ratio
 

00:02:35.430 --> 00:02:38.990
resolution and then based on that ratio
we we return this in sample size from

00:02:38.990 --> 00:02:39.000
we we return this in sample size from
 

00:02:39.000 --> 00:02:41.869
we we return this in sample size from
this method so scrolling back up we've

00:02:41.869 --> 00:02:41.879
this method so scrolling back up we've
 

00:02:41.879 --> 00:02:43.940
this method so scrolling back up we've
calculated our insamplesize passed it to

00:02:43.940 --> 00:02:43.950
calculated our insamplesize passed it to
 

00:02:43.950 --> 00:02:46.309
calculated our insamplesize passed it to
our bitmap factory options we then need

00:02:46.309 --> 00:02:46.319
our bitmap factory options we then need
 

00:02:46.319 --> 00:02:48.350
our bitmap factory options we then need
to remember to set in just decoded

00:02:48.350 --> 00:02:48.360
to remember to set in just decoded
 

00:02:48.360 --> 00:02:50.990
to remember to set in just decoded
bounce to false and then go ahead and

00:02:50.990 --> 00:02:51.000
bounce to false and then go ahead and
 

00:02:51.000 --> 00:02:53.780
bounce to false and then go ahead and
load the bitmap with our options so now

00:02:53.780 --> 00:02:53.790
load the bitmap with our options so now
 

00:02:53.790 --> 00:02:54.979
load the bitmap with our options so now
that we've optimized it and we're

00:02:54.979 --> 00:02:54.989
that we've optimized it and we're
 

00:02:54.989 --> 00:02:56.869
that we've optimized it and we're
loading these bitmaps in the the

00:02:56.869 --> 00:02:56.879
loading these bitmaps in the the
 

00:02:56.879 --> 00:02:58.789
loading these bitmaps in the the
resolution that we need them in let's go

00:02:58.789 --> 00:02:58.799
resolution that we need them in let's go
 

00:02:58.799 --> 00:03:01.960
resolution that we need them in let's go
see what it looks like on the Nexus S

00:03:01.960 --> 00:03:01.970
see what it looks like on the Nexus S
 

00:03:01.970 --> 00:03:06.680
see what it looks like on the Nexus S
shouldn't crash this time there we go it

00:03:06.680 --> 00:03:06.690
shouldn't crash this time there we go it
 

00:03:06.690 --> 00:03:09.470
shouldn't crash this time there we go it
launched and we can see the apps running

00:03:09.470 --> 00:03:09.480
launched and we can see the apps running
 

00:03:09.480 --> 00:03:12.710
launched and we can see the apps running
but it's not running great as we scroll

00:03:12.710 --> 00:03:12.720
but it's not running great as we scroll
 

00:03:12.720 --> 00:03:14.690
but it's not running great as we scroll
here you can see that we're getting some

00:03:14.690 --> 00:03:14.700
here you can see that we're getting some
 

00:03:14.700 --> 00:03:17.660
here you can see that we're getting some
jitter and jank so let's look at how we

00:03:17.660 --> 00:03:17.670
jitter and jank so let's look at how we
 

00:03:17.670 --> 00:03:20.120
jitter and jank so let's look at how we
can optimize this and let's switch over

00:03:20.120 --> 00:03:20.130
can optimize this and let's switch over
 

00:03:20.130 --> 00:03:23.270
can optimize this and let's switch over
to our slides once again the reason that

00:03:23.270 --> 00:03:23.280
to our slides once again the reason that
 

00:03:23.280 --> 00:03:24.620
to our slides once again the reason that
we're getting this jank is that we're

00:03:24.620 --> 00:03:24.630
we're getting this jank is that we're
 

00:03:24.630 --> 00:03:26.870
we're getting this jank is that we're
loading those images in the main thread

00:03:26.870 --> 00:03:26.880
loading those images in the main thread
 

00:03:26.880 --> 00:03:29.330
loading those images in the main thread
in the UI thread and we really shouldn't

00:03:29.330 --> 00:03:29.340
in the UI thread and we really shouldn't
 

00:03:29.340 --> 00:03:31.009
in the UI thread and we really shouldn't
do that we should be doing these in a

00:03:31.009 --> 00:03:31.019
do that we should be doing these in a
 

00:03:31.019 --> 00:03:32.780
do that we should be doing these in a
background thread an hour an hour friend

00:03:32.780 --> 00:03:32.790
background thread an hour an hour friend
 

00:03:32.790 --> 00:03:36.050
background thread an hour an hour friend
the async task object class is going to

00:03:36.050 --> 00:03:36.060
the async task object class is going to
 

00:03:36.060 --> 00:03:38.089
the async task object class is going to
help us so let's switch over to some

00:03:38.089 --> 00:03:38.099
help us so let's switch over to some
 

00:03:38.099 --> 00:03:40.430
help us so let's switch over to some
code again and we'll see here we've got

00:03:40.430 --> 00:03:40.440
code again and we'll see here we've got
 

00:03:40.440 --> 00:03:42.800
code again and we'll see here we've got
an async task for loading our bitmap we

00:03:42.800 --> 00:03:42.810
an async task for loading our bitmap we
 

00:03:42.810 --> 00:03:44.900
an async task for loading our bitmap we
actually passed the image view to this

00:03:44.900 --> 00:03:44.910
actually passed the image view to this
 

00:03:44.910 --> 00:03:48.170
actually passed the image view to this
to this pacing task and we store it as a

00:03:48.170 --> 00:03:48.180
to this pacing task and we store it as a
 

00:03:48.180 --> 00:03:50.449
to this pacing task and we store it as a
weak reference so that if the framework

00:03:50.449 --> 00:03:50.459
weak reference so that if the framework
 

00:03:50.459 --> 00:03:52.640
weak reference so that if the framework
needs to free that image view we're not

00:03:52.640 --> 00:03:52.650
needs to free that image view we're not
 

00:03:52.650 --> 00:03:53.990
needs to free that image view we're not
going to hold on to and we're going to

00:03:53.990 --> 00:03:54.000
going to hold on to and we're going to
 

00:03:54.000 --> 00:03:56.720
going to hold on to and we're going to
allow it to be garbage collected anyway

00:03:56.720 --> 00:03:56.730
allow it to be garbage collected anyway
 

00:03:56.730 --> 00:03:58.039
allow it to be garbage collected anyway
it's going to the doing background

00:03:58.039 --> 00:03:58.049
it's going to the doing background
 

00:03:58.049 --> 00:03:59.720
it's going to the doing background
method on our async task this is

00:03:59.720 --> 00:03:59.730
method on our async task this is
 

00:03:59.730 --> 00:04:01.789
method on our async task this is
happening in a background thread so

00:04:01.789 --> 00:04:01.799
happening in a background thread so
 

00:04:01.799 --> 00:04:04.309
happening in a background thread so
we'll go ahead and actually load our

00:04:04.309 --> 00:04:04.319
we'll go ahead and actually load our
 

00:04:04.319 --> 00:04:06.740
we'll go ahead and actually load our
sampled bitmap and this is that code

00:04:06.740 --> 00:04:06.750
sampled bitmap and this is that code
 

00:04:06.750 --> 00:04:08.720
sampled bitmap and this is that code
that we saw earlier so it will kick in

00:04:08.720 --> 00:04:08.730
that we saw earlier so it will kick in
 

00:04:08.730 --> 00:04:10.849
that we saw earlier so it will kick in
with those optimizations once this is

00:04:10.849 --> 00:04:10.859
with those optimizations once this is
 

00:04:10.859 --> 00:04:13.460
with those optimizations once this is
done in onpostexecute we're just going

00:04:13.460 --> 00:04:13.470
done in onpostexecute we're just going
 

00:04:13.470 --> 00:04:16.039
done in onpostexecute we're just going
to go ahead and apply the bitmap so now

00:04:16.039 --> 00:04:16.049
to go ahead and apply the bitmap so now
 

00:04:16.049 --> 00:04:18.830
to go ahead and apply the bitmap so now
let's see how the app looks like when we

00:04:18.830 --> 00:04:18.840
let's see how the app looks like when we
 

00:04:18.840 --> 00:04:26.210
let's see how the app looks like when we
run it on an XSS

00:04:26.210 --> 00:04:26.220
 
 

00:04:26.220 --> 00:04:30.060
 
great we can see here that as we scroll

00:04:30.060 --> 00:04:30.070
great we can see here that as we scroll
 

00:04:30.070 --> 00:04:32.460
great we can see here that as we scroll
the images get loaded in now because

00:04:32.460 --> 00:04:32.470
the images get loaded in now because
 

00:04:32.470 --> 00:04:34.499
the images get loaded in now because
we're doing it in the background what

00:04:34.499 --> 00:04:34.509
we're doing it in the background what
 

00:04:34.509 --> 00:04:35.939
we're doing it in the background what
happens is that we get this placeholder

00:04:35.939 --> 00:04:35.949
happens is that we get this placeholder
 

00:04:35.949 --> 00:04:38.520
happens is that we get this placeholder
we're just using a white it's just a

00:04:38.520 --> 00:04:38.530
we're just using a white it's just a
 

00:04:38.530 --> 00:04:41.370
we're just using a white it's just a
empty image there until the image loads

00:04:41.370 --> 00:04:41.380
empty image there until the image loads
 

00:04:41.380 --> 00:04:43.110
empty image there until the image loads
but it's happening in the background and

00:04:43.110 --> 00:04:43.120
but it's happening in the background and
 

00:04:43.120 --> 00:04:44.219
but it's happening in the background and
the important thing is that our

00:04:44.219 --> 00:04:44.229
the important thing is that our
 

00:04:44.229 --> 00:04:46.529
the important thing is that our
scrolling is now smooth but we have a

00:04:46.529 --> 00:04:46.539
scrolling is now smooth but we have a
 

00:04:46.539 --> 00:04:49.439
scrolling is now smooth but we have a
new problem now every time an image goes

00:04:49.439 --> 00:04:49.449
new problem now every time an image goes
 

00:04:49.449 --> 00:04:50.460
new problem now every time an image goes
off the screen

00:04:50.460 --> 00:04:50.470
off the screen
 

00:04:50.470 --> 00:04:52.740
off the screen
we're actually relinquishing that image

00:04:52.740 --> 00:04:52.750
we're actually relinquishing that image
 

00:04:52.750 --> 00:04:54.210
we're actually relinquishing that image
we're freeing it and then loading it

00:04:54.210 --> 00:04:54.220
we're freeing it and then loading it
 

00:04:54.220 --> 00:04:56.310
we're freeing it and then loading it
back in that's not a very good thing to

00:04:56.310 --> 00:04:56.320
back in that's not a very good thing to
 

00:04:56.320 --> 00:04:58.260
back in that's not a very good thing to
do so what we're going to look at is how

00:04:58.260 --> 00:04:58.270
do so what we're going to look at is how
 

00:04:58.270 --> 00:05:00.090
do so what we're going to look at is how
to fix that so switching back to the

00:05:00.090 --> 00:05:00.100
to fix that so switching back to the
 

00:05:00.100 --> 00:05:03.779
to fix that so switching back to the
slides what we're going to do is we're

00:05:03.779 --> 00:05:03.789
slides what we're going to do is we're
 

00:05:03.789 --> 00:05:06.629
slides what we're going to do is we're
going to use an image cache now what an

00:05:06.629 --> 00:05:06.639
going to use an image cache now what an
 

00:05:06.639 --> 00:05:08.070
going to use an image cache now what an
image cache does is hold on to the

00:05:08.070 --> 00:05:08.080
image cache does is hold on to the
 

00:05:08.080 --> 00:05:10.050
image cache does is hold on to the
images so we'll load the image and then

00:05:10.050 --> 00:05:10.060
images so we'll load the image and then
 

00:05:10.060 --> 00:05:11.490
images so we'll load the image and then
we'll throw it into the image cache and

00:05:11.490 --> 00:05:11.500
we'll throw it into the image cache and
 

00:05:11.500 --> 00:05:13.320
we'll throw it into the image cache and
it'll hold on to the images for as long

00:05:13.320 --> 00:05:13.330
it'll hold on to the images for as long
 

00:05:13.330 --> 00:05:16.710
it'll hold on to the images for as long
as it can and then when we go to request

00:05:16.710 --> 00:05:16.720
as it can and then when we go to request
 

00:05:16.720 --> 00:05:18.029
as it can and then when we go to request
an image we're going to look in the

00:05:18.029 --> 00:05:18.039
an image we're going to look in the
 

00:05:18.039 --> 00:05:20.070
an image we're going to look in the
image cache first so let's switch over

00:05:20.070 --> 00:05:20.080
image cache first so let's switch over
 

00:05:20.080 --> 00:05:23.610
image cache first so let's switch over
to code and in the oncreate method of

00:05:23.610 --> 00:05:23.620
to code and in the oncreate method of
 

00:05:23.620 --> 00:05:26.159
to code and in the oncreate method of
our fragment what we're going to do is

00:05:26.159 --> 00:05:26.169
our fragment what we're going to do is
 

00:05:26.169 --> 00:05:29.790
our fragment what we're going to do is
initialize our LRU cache that's the

00:05:29.790 --> 00:05:29.800
initialize our LRU cache that's the
 

00:05:29.800 --> 00:05:31.950
initialize our LRU cache that's the
image cache we're going to use but for

00:05:31.950 --> 00:05:31.960
image cache we're going to use but for
 

00:05:31.960 --> 00:05:34.110
image cache we're going to use but for
the cache size what we're going to do is

00:05:34.110 --> 00:05:34.120
the cache size what we're going to do is
 

00:05:34.120 --> 00:05:36.779
the cache size what we're going to do is
we're going to set the cache size based

00:05:36.779 --> 00:05:36.789
we're going to set the cache size based
 

00:05:36.789 --> 00:05:39.750
we're going to set the cache size based
on the maximum available memory on the

00:05:39.750 --> 00:05:39.760
on the maximum available memory on the
 

00:05:39.760 --> 00:05:43.320
on the maximum available memory on the
device for our app in kilobytes so

00:05:43.320 --> 00:05:43.330
device for our app in kilobytes so
 

00:05:43.330 --> 00:05:46.110
device for our app in kilobytes so
dividing it by 1,024 but we're actually

00:05:46.110 --> 00:05:46.120
dividing it by 1,024 but we're actually
 

00:05:46.120 --> 00:05:49.649
dividing it by 1,024 but we're actually
going to get 1/8 of that that that size

00:05:49.649 --> 00:05:49.659
going to get 1/8 of that that that size
 

00:05:49.659 --> 00:05:51.870
going to get 1/8 of that that that size
so our K should be 1/8 of the available

00:05:51.870 --> 00:05:51.880
so our K should be 1/8 of the available
 

00:05:51.880 --> 00:05:54.450
so our K should be 1/8 of the available
memory in kilobytes and that's what we

00:05:54.450 --> 00:05:54.460
memory in kilobytes and that's what we
 

00:05:54.460 --> 00:05:56.129
memory in kilobytes and that's what we
will use to initialize our LRU cache

00:05:56.129 --> 00:05:56.139
will use to initialize our LRU cache
 

00:05:56.139 --> 00:05:58.620
will use to initialize our LRU cache
also keep in mind that we're overriding

00:05:58.620 --> 00:05:58.630
also keep in mind that we're overriding
 

00:05:58.630 --> 00:06:00.899
also keep in mind that we're overriding
the the sizeof method so that we can

00:06:00.899 --> 00:06:00.909
the the sizeof method so that we can
 

00:06:00.909 --> 00:06:03.510
the the sizeof method so that we can
tell the cache how big our bitmaps are

00:06:03.510 --> 00:06:03.520
tell the cache how big our bitmaps are
 

00:06:03.520 --> 00:06:05.189
tell the cache how big our bitmaps are
going to be that's it

00:06:05.189 --> 00:06:05.199
going to be that's it
 

00:06:05.199 --> 00:06:07.649
going to be that's it
with that let's see what our next

00:06:07.649 --> 00:06:07.659
with that let's see what our next
 

00:06:07.659 --> 00:06:10.770
with that let's see what our next
success looks like now so we're going to

00:06:10.770 --> 00:06:10.780
success looks like now so we're going to
 

00:06:10.780 --> 00:06:13.439
success looks like now so we're going to
launch it we expect it to be nice and

00:06:13.439 --> 00:06:13.449
launch it we expect it to be nice and
 

00:06:13.449 --> 00:06:17.279
launch it we expect it to be nice and
smooth which it is and what we're seeing

00:06:17.279 --> 00:06:17.289
smooth which it is and what we're seeing
 

00:06:17.289 --> 00:06:19.770
smooth which it is and what we're seeing
here is that as the images go off the

00:06:19.770 --> 00:06:19.780
here is that as the images go off the
 

00:06:19.780 --> 00:06:22.350
here is that as the images go off the
screen they're not actually being

00:06:22.350 --> 00:06:22.360
screen they're not actually being
 

00:06:22.360 --> 00:06:24.240
screen they're not actually being
relinquished out cache is kicking in of

00:06:24.240 --> 00:06:24.250
relinquished out cache is kicking in of
 

00:06:24.250 --> 00:06:28.649
relinquished out cache is kicking in of
course if we blew our memory limit it

00:06:28.649 --> 00:06:28.659
course if we blew our memory limit it
 

00:06:28.659 --> 00:06:30.750
course if we blew our memory limit it
would start to dispose and throw away of

00:06:30.750 --> 00:06:30.760
would start to dispose and throw away of
 

00:06:30.760 --> 00:06:31.890
would start to dispose and throw away of
those images and

00:06:31.890 --> 00:06:31.900
those images and
 

00:06:31.900 --> 00:06:33.360
those images and
the most necessary but we don't need to

00:06:33.360 --> 00:06:33.370
the most necessary but we don't need to
 

00:06:33.370 --> 00:06:36.270
the most necessary but we don't need to
in this situation so we've reached the

00:06:36.270 --> 00:06:36.280
in this situation so we've reached the
 

00:06:36.280 --> 00:06:38.640
in this situation so we've reached the
end of this devbyte let's switch over to

00:06:38.640 --> 00:06:38.650
end of this devbyte let's switch over to
 

00:06:38.650 --> 00:06:40.320
end of this devbyte let's switch over to
the slides let's this is where we

00:06:40.320 --> 00:06:40.330
the slides let's this is where we
 

00:06:40.330 --> 00:06:42.270
the slides let's this is where we
started on the left hand side with a an

00:06:42.270 --> 00:06:42.280
started on the left hand side with a an
 

00:06:42.280 --> 00:06:45.050
started on the left hand side with a an
outdated looking at it now looks

00:06:45.050 --> 00:06:45.060
outdated looking at it now looks
 

00:06:45.060 --> 00:06:48.240
outdated looking at it now looks
beautiful and modern on modern devices

00:06:48.240 --> 00:06:48.250
beautiful and modern on modern devices
 

00:06:48.250 --> 00:06:51.600
beautiful and modern on modern devices
it runs really well but one thing we

00:06:51.600 --> 00:06:51.610
it runs really well but one thing we
 

00:06:51.610 --> 00:06:53.430
it runs really well but one thing we
haven't looked at yet is how to make it

00:06:53.430 --> 00:06:53.440
haven't looked at yet is how to make it
 

00:06:53.440 --> 00:06:55.650
haven't looked at yet is how to make it
look equally beautiful on all the

00:06:55.650 --> 00:06:55.660
look equally beautiful on all the
 

00:06:55.660 --> 00:06:57.749
look equally beautiful on all the
devices and we're going to do that in

00:06:57.749 --> 00:06:57.759
devices and we're going to do that in
 

00:06:57.759 --> 00:07:00.780
devices and we're going to do that in
the next episode

