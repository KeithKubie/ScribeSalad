WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.430
[MUSIC PLAYING]

00:00:04.247 --> 00:00:05.830
STEFAN KUHNE: My
name is Stefan Kuhne.

00:00:05.830 --> 00:00:08.470
I am one of the tech
leads bringing Chrome OS--

00:00:08.470 --> 00:00:10.060
no, Android to Chrome OS.

00:00:10.060 --> 00:00:11.530
Ha, very funny.

00:00:11.530 --> 00:00:14.410
With me today is
Sara and Emilie.

00:00:14.410 --> 00:00:19.120
And we are telling you a lot
about accessibility on Android

00:00:19.120 --> 00:00:21.220
applications on Chromebooks.

00:00:21.220 --> 00:00:24.740
So and with that,
well, you had that one.

00:00:24.740 --> 00:00:27.830
First off, who of
you did any kind of

00:00:27.830 --> 00:00:32.150
work bringing your applications
into the accessibility realm?

00:00:32.150 --> 00:00:33.740
Did anyone?

00:00:33.740 --> 00:00:34.700
Awesome.

00:00:34.700 --> 00:00:37.207
Well you know what, you
are possibly already done.

00:00:37.207 --> 00:00:38.540
But you don't have to leave now.

00:00:38.540 --> 00:00:40.100
Please stay.

00:00:40.100 --> 00:00:41.630
We have actually
some more things

00:00:41.630 --> 00:00:43.460
which might be of
interest for you.

00:00:43.460 --> 00:00:45.740
So and therefore
we have, hopefully,

00:00:45.740 --> 00:00:48.100
some good tidbits for you.

00:00:48.100 --> 00:00:50.520
So first of all, this
is one of the questions

00:00:50.520 --> 00:00:51.960
for the rest of the folks.

00:00:51.960 --> 00:00:54.690
Why should you care
about accessibility?

00:00:54.690 --> 00:00:56.460
Well, it's a very
good question right?

00:00:56.460 --> 00:00:59.820
Well within the US, for
example, one out of eight people

00:00:59.820 --> 00:01:01.800
have a kind of a disability.

00:01:01.800 --> 00:01:03.758
That is a shocking
big number, right?

00:01:03.758 --> 00:01:05.550
So the thing is, like,
if you do not really

00:01:05.550 --> 00:01:07.470
address this in
your applications,

00:01:07.470 --> 00:01:10.170
you will actually miss
out on a lot of people.

00:01:10.170 --> 00:01:13.740
Or look at it like
on a worldwide scale.

00:01:13.740 --> 00:01:15.490
According to World
Health Organization,

00:01:15.490 --> 00:01:18.990
there is 15% of people
which do not really--

00:01:18.990 --> 00:01:20.668
well, which have some
kind of disability

00:01:20.668 --> 00:01:22.710
and possibly some problems
with your applications

00:01:22.710 --> 00:01:24.280
if you do not access that.

00:01:24.280 --> 00:01:26.220
That is a big number.

00:01:26.220 --> 00:01:28.800
So and then comes the
very interesting part

00:01:28.800 --> 00:01:30.810
which nobody really
thinks about, that is

00:01:30.810 --> 00:01:32.010
temporal disability.

00:01:32.010 --> 00:01:35.120
That is something like what
everybody has every day.

00:01:35.120 --> 00:01:37.080
When I am coming into
the office in the morning

00:01:37.080 --> 00:01:39.780
and I am not really that awake
and I am looking at the screen

00:01:39.780 --> 00:01:41.820
and the font is teeny
tiny, I will possibly

00:01:41.820 --> 00:01:45.210
use a zoom in order to zoom
it up a little bit, which

00:01:45.210 --> 00:01:47.835
is already an accessibility
feature in itself.

00:01:47.835 --> 00:01:49.350
So and over the
course of the day,

00:01:49.350 --> 00:01:51.870
I might actually revert
everything and make it actually

00:01:51.870 --> 00:01:53.453
that the font is
getting smaller and I

00:01:53.453 --> 00:01:55.938
get more information, which
is then maybe the reverse

00:01:55.938 --> 00:01:56.730
if you want to say.

00:01:56.730 --> 00:01:59.820
But the thing is, like, I'm
using that thing every day.

00:01:59.820 --> 00:02:04.350
Or you are actually going
to a ski trip to Lake Tahoe,

00:02:04.350 --> 00:02:07.230
and you broke a finger or
your wrist or anything else.

00:02:07.230 --> 00:02:09.127
And, well, voila.

00:02:09.127 --> 00:02:10.169
Try to use your keyboard.

00:02:10.169 --> 00:02:11.748
Good luck.

00:02:11.748 --> 00:02:13.790
There are problems which
everybody is facing once

00:02:13.790 --> 00:02:16.200
in a while in your life.

00:02:16.200 --> 00:02:18.860
Or look at this awesome event.

00:02:18.860 --> 00:02:21.500
We have nice sunny
weather, except for now

00:02:21.500 --> 00:02:22.880
when I'm looking outside.

00:02:22.880 --> 00:02:26.120
But, well, it'll come
later today, again.

00:02:26.120 --> 00:02:28.170
And then you're looking
at your screen outside.

00:02:28.170 --> 00:02:30.503
You are trying to do something
on a notebook and you see

00:02:30.503 --> 00:02:32.540
screen glare and you
cannot see anything.

00:02:32.540 --> 00:02:33.870
So what do you do then?

00:02:33.870 --> 00:02:35.340
Well, there is
actually a feature

00:02:35.340 --> 00:02:37.250
which actually might
help you on that,

00:02:37.250 --> 00:02:39.230
and you might actually
not be aware of it.

00:02:39.230 --> 00:02:41.097
Coming to that one later.

00:02:41.097 --> 00:02:43.430
And then there are other nice
features, like for example

00:02:43.430 --> 00:02:45.860
the dictate feature, which
we heard already something

00:02:45.860 --> 00:02:48.648
about in our keynote.

00:02:48.648 --> 00:02:50.940
And things like this feature
is really totally awesome.

00:02:50.940 --> 00:02:52.820
And I compare that
to 15 years ago.

00:02:52.820 --> 00:02:55.820
I remember on a PC it was like
you had to train everything,

00:02:55.820 --> 00:02:59.030
and it took a long time until
it finally understood you.

00:02:59.030 --> 00:02:59.930
No problem at all.

00:02:59.930 --> 00:03:02.450
I'm talking to that thing,
it transcribes everything.

00:03:02.450 --> 00:03:03.990
And really, try it out.

00:03:03.990 --> 00:03:04.830
It's awesome.

00:03:04.830 --> 00:03:07.610
And/or do something
like, well, you

00:03:07.610 --> 00:03:09.530
want to actually do
something while you're

00:03:09.530 --> 00:03:10.460
working on something.

00:03:10.460 --> 00:03:14.480
And well, you want to
read out, for example,

00:03:14.480 --> 00:03:16.880
the latest article from
Maker News or something

00:03:16.880 --> 00:03:18.680
like that while
you're doing this.

00:03:18.680 --> 00:03:20.348
So it's another
accessibility feature,

00:03:20.348 --> 00:03:22.140
because the thing is
at that point in time,

00:03:22.140 --> 00:03:23.840
you're reading the screen.

00:03:23.840 --> 00:03:25.820
So with that, let's go
into the features, what

00:03:25.820 --> 00:03:29.240
we have on Chrome OS and
look at them one by one

00:03:29.240 --> 00:03:32.180
what you have to do in order
to make these features happen.

00:03:32.180 --> 00:03:34.910
And what we are, of
course, doing to do so.

00:03:34.910 --> 00:03:36.450
Oh yeah, there
was another slide.

00:03:36.450 --> 00:03:37.830
Look at that.

00:03:37.830 --> 00:03:39.980
So we have actually
more form factors.

00:03:39.980 --> 00:03:42.290
Well, you know, of course
a phone is this kind

00:03:42.290 --> 00:03:43.880
of small device, right?

00:03:43.880 --> 00:03:45.860
But we have a lot
of big devices.

00:03:45.860 --> 00:03:48.800
So we have today coming
in all kinds of forms.

00:03:48.800 --> 00:03:49.700
You have tablets.

00:03:49.700 --> 00:03:51.710
You have convertibles,
clamshells.

00:03:51.710 --> 00:03:54.380
And then there's
also boxes, which

00:03:54.380 --> 00:03:57.350
means, like, you have really,
like, only an external screen

00:03:57.350 --> 00:04:00.090
hooked up, which is of course
giant, which is awesome.

00:04:00.090 --> 00:04:01.820
So make use of the space.

00:04:01.820 --> 00:04:05.630
So and there are keyboards
and all these other things.

00:04:05.630 --> 00:04:07.490
Chrome OS in a nutshell.

00:04:07.490 --> 00:04:11.300
It's definitely much
more than only a phone.

00:04:11.300 --> 00:04:12.960
So features.

00:04:12.960 --> 00:04:15.530
So one other thing, the most
important feature, I think,

00:04:15.530 --> 00:04:17.870
is this one, which
is ChromeVox, which

00:04:17.870 --> 00:04:21.269
is, it reads out loud
what is on the screen.

00:04:21.269 --> 00:04:25.220
It tells the user exactly what
is in a dialogue, in a window.

00:04:25.220 --> 00:04:29.220
And it's actually guiding the
users through your dialogue.

00:04:29.220 --> 00:04:30.890
And this is a very
important feature.

00:04:30.890 --> 00:04:32.390
And if there is any
feature what you

00:04:32.390 --> 00:04:34.070
have to really do
to your application

00:04:34.070 --> 00:04:36.320
to make it accessible,
I think supporting

00:04:36.320 --> 00:04:38.300
this one is really it.

00:04:38.300 --> 00:04:41.540
Because things like this is
addressing 90% of the problems.

00:04:41.540 --> 00:04:44.630
And that is essentially, like,
for every label you have--

00:04:44.630 --> 00:04:49.380
no, for every screen element
you actually add another label,

00:04:49.380 --> 00:04:51.648
which is giving you the talk.

00:04:51.648 --> 00:04:53.440
What should actually
be talked of this way.

00:04:53.440 --> 00:04:55.430
But Sara will actually
go more into depth later

00:04:55.430 --> 00:04:56.870
on that in her talk.

00:04:56.870 --> 00:04:59.840
So yes.

00:04:59.840 --> 00:05:01.250
So next one.

00:05:01.250 --> 00:05:02.270
Selector speech.

00:05:02.270 --> 00:05:03.885
I was mentioning that already.

00:05:03.885 --> 00:05:04.760
It's a great feature.

00:05:04.760 --> 00:05:07.292
You can simply mark
something on the screen

00:05:07.292 --> 00:05:08.750
and the screen
reader will actually

00:05:08.750 --> 00:05:11.120
read everything to you aloud.

00:05:11.120 --> 00:05:13.700
So what do you have to do in
order to support this thing?

00:05:13.700 --> 00:05:16.250
Well, you should actually
have your text order

00:05:16.250 --> 00:05:19.040
grouped in a certain way that
it's actually really readable.

00:05:19.040 --> 00:05:22.130
But again, Sara will talk about
that one later in her talk

00:05:22.130 --> 00:05:24.770
as well.

00:05:24.770 --> 00:05:26.760
Another feature is
focus highlighting.

00:05:26.760 --> 00:05:27.760
That is something like--

00:05:27.760 --> 00:05:29.950
I mean, UI designers, they
are really very picky.

00:05:29.950 --> 00:05:32.920
Everything needs to be exactly
the color as they specify them.

00:05:32.920 --> 00:05:35.890
And sometimes that
is really very nice,

00:05:35.890 --> 00:05:38.735
but not really very well
distinguishable for people

00:05:38.735 --> 00:05:40.610
which cannot really see
these kind of things.

00:05:40.610 --> 00:05:42.193
And sometimes, I
even have the problem

00:05:42.193 --> 00:05:45.390
of actually seeing what is
really the focus or not.

00:05:45.390 --> 00:05:47.380
And this feature, for
example, gives you

00:05:47.380 --> 00:05:50.772
a much better visible focus
for all these kind of elements.

00:05:50.772 --> 00:05:52.980
When you're typing in
something you see, for example,

00:05:52.980 --> 00:05:55.900
a round circle
around your cursor

00:05:55.900 --> 00:05:58.810
and so on, which makes it
much better visually so

00:05:58.810 --> 00:06:00.230
that you can actually see this.

00:06:00.230 --> 00:06:02.900
What do you have to do in
order to support this feature?

00:06:02.900 --> 00:06:06.430
Well, basically everything
what you would always do.

00:06:06.430 --> 00:06:09.420
Like for example, all the
UI elements you want to use

00:06:09.420 --> 00:06:11.950
make them that they
are on the screen.

00:06:11.950 --> 00:06:14.795
So don't move them out of the
screen only that they cannot be

00:06:14.795 --> 00:06:15.670
visible or something.

00:06:15.670 --> 00:06:17.450
Because when you're
Alt-Tab through them,

00:06:17.450 --> 00:06:19.120
it might actually
come active, then you

00:06:19.120 --> 00:06:20.230
don't even see what it is.

00:06:20.230 --> 00:06:23.932
And/or you should also make
sure that the order of the items

00:06:23.932 --> 00:06:26.140
is actually in the proper
order that you can actually

00:06:26.140 --> 00:06:27.400
[? retab ?] through them.

00:06:27.400 --> 00:06:31.520
Again, Sara Kato will actually
talk about that one later on.

00:06:31.520 --> 00:06:34.570
So with that, we
have various features

00:06:34.570 --> 00:06:37.360
in regards of how to
magnify the screen

00:06:37.360 --> 00:06:39.190
to make it better visible.

00:06:39.190 --> 00:06:42.920
The first one is the
docked zoom mode,

00:06:42.920 --> 00:06:46.300
which is basically we are taking
apart one part of the screen.

00:06:46.300 --> 00:06:48.520
And it's actually the
zoom, it's like a loop

00:06:48.520 --> 00:06:51.950
where you can actually see then
what is underneath the cursor.

00:06:51.950 --> 00:06:54.500
So this feature is very helpful.

00:06:54.500 --> 00:06:57.010
You can even zoom
inside this area.

00:06:57.010 --> 00:06:59.660
So you can select the zoom
factor you want to use.

00:06:59.660 --> 00:07:02.110
So what do you have to do in
order to support this thing?

00:07:02.110 --> 00:07:04.840
Well, your application
should be better resizeable

00:07:04.840 --> 00:07:08.110
and/or at least re-layoutable
so that the content is actually

00:07:08.110 --> 00:07:11.110
staying on the screen.

00:07:11.110 --> 00:07:13.840
Another nice feature
is this one, which

00:07:13.840 --> 00:07:16.820
is a full screen magnifier.

00:07:16.820 --> 00:07:18.220
Basically the
desktop, everything

00:07:18.220 --> 00:07:20.040
stays exactly as it is.

00:07:20.040 --> 00:07:22.510
But there is only an
area of the screen

00:07:22.510 --> 00:07:26.287
like this which is being shown
to the user on the full screen.

00:07:26.287 --> 00:07:28.120
And then when you're
swiping with your mouse

00:07:28.120 --> 00:07:29.680
over the screen,
you can actually

00:07:29.680 --> 00:07:33.190
then reveal what is
hidden in the virtual area

00:07:33.190 --> 00:07:34.960
of the desktop.

00:07:34.960 --> 00:07:37.330
And what do you have
to do for this feature?

00:07:37.330 --> 00:07:37.870
Nothing.

00:07:37.870 --> 00:07:38.995
This is free off the house.

00:07:38.995 --> 00:07:40.340
We are doing that for you.

00:07:40.340 --> 00:07:41.960
I hope that helps.

00:07:41.960 --> 00:07:46.040
Another thing is, well, we
have the full screen zoom

00:07:46.040 --> 00:07:47.810
factor, which is
basically we are changing

00:07:47.810 --> 00:07:49.400
the density on the fly.

00:07:49.400 --> 00:07:51.810
So instead of seeing this
with a teeny tiny icon

00:07:51.810 --> 00:07:54.380
size on the bottom, you
can make them much bigger.

00:07:54.380 --> 00:07:56.070
And everything is
getting bigger,

00:07:56.070 --> 00:07:58.490
which means bigger touch
targets, bigger screen, bigger

00:07:58.490 --> 00:07:59.870
font, bigger everything.

00:07:59.870 --> 00:08:02.270
Which means we are
changing the density.

00:08:02.270 --> 00:08:05.160
What do you have to do in
order to support this feature?

00:08:05.160 --> 00:08:08.570
Well, at the moment, you
should actually be resizeable,

00:08:08.570 --> 00:08:10.880
and you should actually
listen to density changes.

00:08:10.880 --> 00:08:12.920
So going forward,
you should definitely

00:08:12.920 --> 00:08:16.130
check out if the density of
your application is changing

00:08:16.130 --> 00:08:18.150
and react then accordingly.

00:08:18.150 --> 00:08:20.160
So when you're using on
configuration changes,

00:08:20.160 --> 00:08:24.500
make sure that you are
reading them accordingly.

00:08:24.500 --> 00:08:26.200
So then there's a mouse.

00:08:26.200 --> 00:08:29.020
The mouse is something many
people are simply like, hey,

00:08:29.020 --> 00:08:29.740
where's my mouse.

00:08:29.740 --> 00:08:30.907
Well, shake it a little bit.

00:08:30.907 --> 00:08:33.468
Oh there it is, because you
can actually see the movement.

00:08:33.468 --> 00:08:36.010
But the problem is if you cannot
really see even the movement

00:08:36.010 --> 00:08:37.593
because the cursor
is still too small,

00:08:37.593 --> 00:08:39.100
there's no way to
see that thing.

00:08:39.100 --> 00:08:41.080
So therefore, we have
a special feature

00:08:41.080 --> 00:08:44.140
where you can actually increase
the size of the mouse cursor.

00:08:44.140 --> 00:08:47.350
What do we have to
do to support that?

00:08:47.350 --> 00:08:49.580
Actually not very much.

00:08:49.580 --> 00:08:52.330
In fact, nothing if you're
using the standard mouse cursor.

00:08:52.330 --> 00:08:54.070
If you have a
separate mouse cursor,

00:08:54.070 --> 00:08:57.310
however, you want to possibly
add multiple densities

00:08:57.310 --> 00:08:58.972
for this particular resource.

00:08:58.972 --> 00:09:00.430
Because otherwise
it might actually

00:09:00.430 --> 00:09:02.110
look like the '80s,
with some kind

00:09:02.110 --> 00:09:06.250
of very jaggy lines outside,
which looks interesting

00:09:06.250 --> 00:09:09.710
but maybe not that nice.

00:09:09.710 --> 00:09:11.240
So dictation feature.

00:09:11.240 --> 00:09:13.940
Well, you simply click
into an input field.

00:09:13.940 --> 00:09:17.200
You click on the button for
dictate, and you type away.

00:09:17.200 --> 00:09:18.830
Well, talk away.

00:09:18.830 --> 00:09:22.190
And what do you have to do in
order to support this feature?

00:09:22.190 --> 00:09:22.910
Nothing.

00:09:22.910 --> 00:09:23.930
Comes free of the house.

00:09:23.930 --> 00:09:25.810
You're welcome.

00:09:25.810 --> 00:09:28.010
It's awesome.

00:09:28.010 --> 00:09:29.740
Another thing,
high contrast mode.

00:09:29.740 --> 00:09:31.490
I was mentioning it already.

00:09:31.490 --> 00:09:33.920
If you go outside,
sun glare and whatnot.

00:09:33.920 --> 00:09:37.100
You can actually put the
screen into a special mode,

00:09:37.100 --> 00:09:40.330
which is actually
improving the contrast.

00:09:40.330 --> 00:09:42.520
What do we have to do
to support that thing?

00:09:42.520 --> 00:09:43.150
Nothing.

00:09:43.150 --> 00:09:44.530
We do everything for you.

00:09:44.530 --> 00:09:46.550
You are done.

00:09:46.550 --> 00:09:48.710
Well, then there are
many, many more features.

00:09:48.710 --> 00:09:51.390
But the thing is for now
let's stay with that one.

00:09:51.390 --> 00:09:54.062
And with that, I'm
passing it on to Sara.

00:09:54.062 --> 00:09:54.770
SARA KATO: Great.

00:09:54.770 --> 00:09:55.910
Thanks, Stefan.

00:09:55.910 --> 00:09:57.650
So I'm Sara Kato.

00:09:57.650 --> 00:10:00.830
I've come from Tokyo, and
I am a software engineer

00:10:00.830 --> 00:10:04.010
working on accessibility
for Android applications

00:10:04.010 --> 00:10:05.930
running on Chrome OS.

00:10:05.930 --> 00:10:09.590
So you've just heard from Stefan
the importance of accessibility

00:10:09.590 --> 00:10:11.960
as well as some other
accessibility features that

00:10:11.960 --> 00:10:14.450
are available on Chrome OS.

00:10:14.450 --> 00:10:16.970
What I want to do is to
talk to you developers

00:10:16.970 --> 00:10:19.160
as to what you can do in
order to give the best

00:10:19.160 --> 00:10:21.350
possible experience
for users who

00:10:21.350 --> 00:10:25.130
are using accessibility features
to navigate with and interact

00:10:25.130 --> 00:10:27.290
with your application.

00:10:27.290 --> 00:10:29.480
With Chrome OS, users
are going to want

00:10:29.480 --> 00:10:31.880
to use a keyboard as
a means of navigating

00:10:31.880 --> 00:10:36.560
around the application
by moving focus.

00:10:36.560 --> 00:10:38.390
And when you do
so, you need to be

00:10:38.390 --> 00:10:41.780
aware of some of the subtle
details of how users are going

00:10:41.780 --> 00:10:43.640
to interact with
your application,

00:10:43.640 --> 00:10:46.430
and provide appropriate
feedback to users

00:10:46.430 --> 00:10:49.110
based on their interactions.

00:10:49.110 --> 00:10:52.090
You might know that since
Chrome OS has been launched,

00:10:52.090 --> 00:10:54.900
it's been available in a number
of different form factors,

00:10:54.900 --> 00:10:56.760
as Stefan just mentioned.

00:10:56.760 --> 00:11:00.510
To provide some examples,
this includes the Samsung DeX,

00:11:00.510 --> 00:11:05.280
Huawei desktop mode, Xiaomi,
Sony, LG, and the Pixel Slate

00:11:05.280 --> 00:11:06.390
devices.

00:11:06.390 --> 00:11:09.330
And I'm sure that you all own
probably more than one type

00:11:09.330 --> 00:11:11.470
of laptop, more than
one type of phone.

00:11:11.470 --> 00:11:13.260
And across these
different devices,

00:11:13.260 --> 00:11:15.960
you expect your
applications to work.

00:11:15.960 --> 00:11:18.480
And users who use
accessibility features also

00:11:18.480 --> 00:11:21.760
expect the same experience.

00:11:21.760 --> 00:11:25.500
And when the users use Android
applications on Chrome OS,

00:11:25.500 --> 00:11:27.750
they need to be able
to accomplish actions

00:11:27.750 --> 00:11:30.390
without the need
to rely on a mouse.

00:11:30.390 --> 00:11:34.030
And you need to be
able to cater for this.

00:11:34.030 --> 00:11:35.640
When users want to
use the keyboard

00:11:35.640 --> 00:11:37.780
to interact with
your application,

00:11:37.780 --> 00:11:40.000
they are probably going
to use the Tab key.

00:11:40.000 --> 00:11:42.700
And with the screen reader
that Stefan just mentioned,

00:11:42.700 --> 00:11:46.300
the Tab key is what allows
you to navigate linearly

00:11:46.300 --> 00:11:47.980
using ChromeVox.

00:11:47.980 --> 00:11:49.750
Users can also
choose to navigate

00:11:49.750 --> 00:11:53.150
through a directional manner
that can move in the up, down,

00:11:53.150 --> 00:11:54.610
left, and right direction.

00:11:54.610 --> 00:11:57.160
And they can achieve
this using other controls

00:11:57.160 --> 00:12:00.850
such as a directional pad,
also known as a D-pad.

00:12:00.850 --> 00:12:03.070
And in both of these
cases, you need

00:12:03.070 --> 00:12:07.610
to take note of when focus
does not get applied correctly.

00:12:07.610 --> 00:12:09.620
Some other types
of input devices

00:12:09.620 --> 00:12:13.130
that users may want to use
are trackpads or switch

00:12:13.130 --> 00:12:14.630
for switch access.

00:12:14.630 --> 00:12:17.320
And the types of users
who might be using these

00:12:17.320 --> 00:12:21.380
are users with, say, mobility
issues or dexterity issues.

00:12:21.380 --> 00:12:23.120
And they can find
an alternate means

00:12:23.120 --> 00:12:27.560
to provide input and navigate
around your application.

00:12:27.560 --> 00:12:32.530
So I've been talking a lot about
focus, but what exactly is it?

00:12:32.530 --> 00:12:34.630
It's when the widget
is highlighted

00:12:34.630 --> 00:12:36.550
to show a change of focus.

00:12:36.550 --> 00:12:39.310
So you might be doing this
when you're navigating

00:12:39.310 --> 00:12:41.495
a spreadsheet, for example.

00:12:41.495 --> 00:12:43.120
When you're navigating
the spreadsheet,

00:12:43.120 --> 00:12:44.830
you would often
use the arrow keys

00:12:44.830 --> 00:12:47.430
to move between
adjacent cells, and you

00:12:47.430 --> 00:12:49.780
would see that the cell
that you're currently at

00:12:49.780 --> 00:12:51.650
is highlighted in blue.

00:12:51.650 --> 00:12:56.210
And you can also do the same
in your Android application.

00:12:56.210 --> 00:12:58.520
However, in your
Android application,

00:12:58.520 --> 00:13:00.910
the order in which
focus is applied

00:13:00.910 --> 00:13:03.700
is determined by the order
in which the elements appear

00:13:03.700 --> 00:13:06.740
in the layout or the XML.

00:13:06.740 --> 00:13:09.150
And if you find
that in this case,

00:13:09.150 --> 00:13:12.170
linear navigation or even
directional navigation

00:13:12.170 --> 00:13:14.750
doesn't work in the
way you expect it to,

00:13:14.750 --> 00:13:17.540
then you'll need to
manually specify focus.

00:13:17.540 --> 00:13:19.900
And this is what I
want to talk about now.

00:13:19.900 --> 00:13:21.650
The examples that I'm
going to talk to you

00:13:21.650 --> 00:13:24.188
about are going to
be in Kotlin, but you

00:13:24.188 --> 00:13:25.730
should note that
you'll be able to do

00:13:25.730 --> 00:13:29.290
the same using Java and XML.

00:13:29.290 --> 00:13:32.170
And I want to show
you how in order

00:13:32.170 --> 00:13:34.540
to make your application
more accessible,

00:13:34.540 --> 00:13:38.260
you don't need excessive code
restructuring in addition

00:13:38.260 --> 00:13:39.820
to what you've done already.

00:13:39.820 --> 00:13:42.130
It's only a little
bit of extra code

00:13:42.130 --> 00:13:45.880
that you need do to in order
to really help some users.

00:13:45.880 --> 00:13:47.710
The first thing that
I want you to do

00:13:47.710 --> 00:13:50.480
is to set your widget
to be focusable.

00:13:50.480 --> 00:13:54.980
You can do this by setting the
setFocusable attribute to true.

00:13:54.980 --> 00:13:57.380
Once you've done
that on your widget,

00:13:57.380 --> 00:14:00.860
we can specify the behavior
for directional navigation.

00:14:00.860 --> 00:14:03.080
And as I just mentioned,
this is for users

00:14:03.080 --> 00:14:06.350
who might be using a
D-pad or a trackball.

00:14:06.350 --> 00:14:10.130
And before this, the system
will provide a best guess

00:14:10.130 --> 00:14:12.680
as to which viewer
should receive focus

00:14:12.680 --> 00:14:14.450
based on the direction
of the layout

00:14:14.450 --> 00:14:16.520
of the views of the screen.

00:14:16.520 --> 00:14:22.070
But to specify the order, we can
use the setNextFocus attribute

00:14:22.070 --> 00:14:23.690
and specify the
direction that should

00:14:23.690 --> 00:14:26.600
receive focus and provide
the ID of the widget that

00:14:26.600 --> 00:14:28.340
should receive focus.

00:14:28.340 --> 00:14:30.260
And something that
I want you to note

00:14:30.260 --> 00:14:33.080
is that if you fully support
directional navigation

00:14:33.080 --> 00:14:34.940
in your application,
it's going to make

00:14:34.940 --> 00:14:38.030
testing much easier because
it's going to give you

00:14:38.030 --> 00:14:40.550
tools such as the UI
Automator, and you

00:14:40.550 --> 00:14:44.520
will be able to automate
a lot of your UI testing.

00:14:44.520 --> 00:14:46.710
I also talked about
linear navigation

00:14:46.710 --> 00:14:49.350
using the Tab key for the
ChromeVox screen reader.

00:14:49.350 --> 00:14:51.870
You can also specify
this behavior

00:14:51.870 --> 00:14:55.530
using the setNextFocusForward
and specifying

00:14:55.530 --> 00:14:59.280
the ID of the widget
in a similar manner.

00:14:59.280 --> 00:15:01.830
I've talked a lot about
using the keyboard,

00:15:01.830 --> 00:15:06.720
and we often use the keyboard as
a means of convenience as well.

00:15:06.720 --> 00:15:09.890
For example, I'm sure that
you all use the Enter key.

00:15:09.890 --> 00:15:12.230
You might use the Enter
key to submit forms

00:15:12.230 --> 00:15:13.840
or to send messages.

00:15:13.840 --> 00:15:17.300
And this is much easier than
clicking the submit button

00:15:17.300 --> 00:15:21.100
or finding the correct
location on the screen.

00:15:21.100 --> 00:15:24.100
And accessibility users
also expect the same.

00:15:24.100 --> 00:15:27.220
They would expect the Enter
key to be able to provide them

00:15:27.220 --> 00:15:28.690
with the same actions.

00:15:28.690 --> 00:15:31.240
And you, as developers,
you can also

00:15:31.240 --> 00:15:33.417
do this by setting
a key listener,

00:15:33.417 --> 00:15:35.500
and I'm going to show you
how to add this behavior

00:15:35.500 --> 00:15:38.040
to your application.

00:15:38.040 --> 00:15:41.640
You first start by detecting
that a key was pressed down,

00:15:41.640 --> 00:15:44.340
and you'll do this
using the ACTION_UP.

00:15:44.340 --> 00:15:46.350
So this actually tells
you when you've actually

00:15:46.350 --> 00:15:48.120
released the Enter key.

00:15:48.120 --> 00:15:51.700
And since we're using ACTION_UP,
you might think, well,

00:15:51.700 --> 00:15:52.950
is there an ACTION_DOWN event?

00:15:52.950 --> 00:15:54.330
And there is.

00:15:54.330 --> 00:15:57.330
And what is the difference
between these two?

00:15:57.330 --> 00:16:01.020
Well, the ACTION_DOWN
returns multiple times.

00:16:01.020 --> 00:16:02.640
And this can be
useful when you're

00:16:02.640 --> 00:16:04.960
pressing the Enter key
for a long period of time,

00:16:04.960 --> 00:16:06.060
for example.

00:16:06.060 --> 00:16:08.430
Whereas the ACTION_UP
only returns once.

00:16:08.430 --> 00:16:11.550
So maybe when you've
just held the key down,

00:16:11.550 --> 00:16:13.290
like in this example.

00:16:13.290 --> 00:16:16.680
Once we've detected that
we've indeed pressed the key,

00:16:16.680 --> 00:16:18.780
we can go on to detect
that it was actually

00:16:18.780 --> 00:16:20.730
the Enter key that was pressed.

00:16:20.730 --> 00:16:23.580
And we can do this
by using the KeyEvent

00:16:23.580 --> 00:16:25.890
and specifying that
we want the Enter key.

00:16:25.890 --> 00:16:29.225
And you can change the
keyCode of the KeyEvent,

00:16:29.225 --> 00:16:30.850
and I'll show you
how to do this later.

00:16:34.010 --> 00:16:36.190
So I've talked about
using the keyboard

00:16:36.190 --> 00:16:39.100
and how important it is
for Android applications

00:16:39.100 --> 00:16:41.530
to be able to be
accessible by the keyboard

00:16:41.530 --> 00:16:44.720
as they are able to
be run on Chrome OS.

00:16:44.720 --> 00:16:47.360
And when you're adding
keyboard navigation,

00:16:47.360 --> 00:16:50.750
you should remember that
accessibility users are going

00:16:50.750 --> 00:16:54.170
to expect common keyboard
shortcuts, such as undo

00:16:54.170 --> 00:16:55.460
and redo, to work.

00:16:55.460 --> 00:16:57.770
So I'll show you
what you can do here.

00:16:57.770 --> 00:17:00.197
A shortcut that you all
probably use everyday--

00:17:00.197 --> 00:17:02.780
I mean, I know I use this every
day when I'm writing my code--

00:17:02.780 --> 00:17:04.950
is the undo action.

00:17:04.950 --> 00:17:08.010
This undo action,
the keyboard shortcut

00:17:08.010 --> 00:17:13.220
is Control-Z. And let's take
a look at how we will do this.

00:17:13.220 --> 00:17:16.480
So I just talked about how
you can use the keyCode.

00:17:16.480 --> 00:17:19.359
And now in this example,
let's change the keyCode

00:17:19.359 --> 00:17:22.470
to be Z because we're
looking for Control-Z.

00:17:22.470 --> 00:17:26.119
Once we've done that, the
Control key is a special key

00:17:26.119 --> 00:17:29.250
and we need to do something
that we call a meta state check.

00:17:29.250 --> 00:17:34.190
And this also applies to
the Alt and the Shift keys.

00:17:34.190 --> 00:17:36.070
So once we've done
that, we'll use

00:17:36.070 --> 00:17:38.650
the hasModifiers function,
which returns true

00:17:38.650 --> 00:17:40.090
once this is pressed.

00:17:40.090 --> 00:17:42.790
And so now this example
gives us the ability

00:17:42.790 --> 00:17:45.830
to detect the Control-Z action.

00:17:45.830 --> 00:17:48.850
You can also combine
multiple hasModifiers.

00:17:48.850 --> 00:17:51.250
So in this example,
we have the Control

00:17:51.250 --> 00:17:53.080
and the Shift key pressed down.

00:17:53.080 --> 00:17:57.370
So this allows us to detect
the Control-Alt-Z action, which

00:17:57.370 --> 00:18:01.820
you might all know
as the redo action.

00:18:01.820 --> 00:18:05.830
So another really important
concept is grouping.

00:18:05.830 --> 00:18:09.040
Grouping is when related
content on your application

00:18:09.040 --> 00:18:12.760
is organized into groups so
that accessibility services,

00:18:12.760 --> 00:18:14.950
for example, a
screen reader, will

00:18:14.950 --> 00:18:18.400
be able to announce the content
in a way which would reflect

00:18:18.400 --> 00:18:20.200
its natural groupings.

00:18:20.200 --> 00:18:23.740
This means that users
won't need to swipe,

00:18:23.740 --> 00:18:27.610
scan, or wait in order to
find some other additional

00:18:27.610 --> 00:18:29.000
information.

00:18:29.000 --> 00:18:32.440
So let's think about who
these users might be.

00:18:32.440 --> 00:18:35.290
These users might be
some blind people.

00:18:35.290 --> 00:18:37.000
My blind friend, for example.

00:18:37.000 --> 00:18:40.540
Or might be those with,
say, temporal impairments,

00:18:40.540 --> 00:18:41.740
like Stefan mentioned.

00:18:41.740 --> 00:18:44.260
Maybe you're driving
home from I/O today

00:18:44.260 --> 00:18:46.480
and you really want to
use your application,

00:18:46.480 --> 00:18:48.400
but you've got to keep
your eyes on the road

00:18:48.400 --> 00:18:50.860
so we can't view the screen.

00:18:50.860 --> 00:18:54.320
Maybe it's for my grandparents
whose vision is deteriorating,

00:18:54.320 --> 00:18:55.930
and they need to
use a screen reader

00:18:55.930 --> 00:18:58.030
to navigate an application.

00:18:58.030 --> 00:19:01.120
So I want to show you an
example of what grouping might

00:19:01.120 --> 00:19:04.260
be like in an application.

00:19:04.260 --> 00:19:07.040
So I have an application
here for a grocery store

00:19:07.040 --> 00:19:08.840
that I want to go to.

00:19:08.840 --> 00:19:12.230
This application shows the
grocery item as well as

00:19:12.230 --> 00:19:13.340
the prices.

00:19:13.340 --> 00:19:16.100
And let's just see what
happens if we don't

00:19:16.100 --> 00:19:18.650
specify any grouping at all.

00:19:18.650 --> 00:19:21.890
The screen reader might read
out something like this.

00:19:21.890 --> 00:19:23.460
Bread.

00:19:23.460 --> 00:19:24.870
OJ.

00:19:24.870 --> 00:19:26.361
$1.50.

00:19:26.361 --> 00:19:29.820
$2.99.

00:19:29.820 --> 00:19:32.940
As you've just heard,
after hearing the item

00:19:32.940 --> 00:19:35.610
it takes a while before
we can hear the price.

00:19:35.610 --> 00:19:38.640
But what might a
better example be?

00:19:38.640 --> 00:19:41.700
A better example might
be the following.

00:19:41.700 --> 00:19:42.900
Bread.

00:19:42.900 --> 00:19:44.430
$1.50.

00:19:44.430 --> 00:19:45.330
OJ.

00:19:45.330 --> 00:19:47.310
$2.99.

00:19:47.310 --> 00:19:51.150
You can immediately hear the
price of bread, which is $1.50,

00:19:51.150 --> 00:19:52.260
after its announcement.

00:19:52.260 --> 00:19:54.180
The same goes for OJ.

00:19:54.180 --> 00:19:56.460
And this makes such
a big difference

00:19:56.460 --> 00:19:59.610
for users who primarily
rely on the screen reader.

00:19:59.610 --> 00:20:03.840
And you can do this with
the power of grouping.

00:20:03.840 --> 00:20:07.080
For this, you would use the
android:screenReaderFocusable

00:20:07.080 --> 00:20:07.950
attribute.

00:20:07.950 --> 00:20:12.270
And this was introduced in
Android P and Android X,

00:20:12.270 --> 00:20:15.390
and is preferred over the
android:focusable attribute,

00:20:15.390 --> 00:20:18.690
which had some unwanted
effects in regards to focus

00:20:18.690 --> 00:20:22.230
and navigation for users who
primarily relied on the screen

00:20:22.230 --> 00:20:24.130
reader.

00:20:24.130 --> 00:20:26.590
So in the previous example
for my grocery store,

00:20:26.590 --> 00:20:29.970
you would group the item
as well as the price

00:20:29.970 --> 00:20:34.170
into a single focusable
container, so that the screen

00:20:34.170 --> 00:20:36.480
reader will be able to
present this information

00:20:36.480 --> 00:20:40.140
into a single announcement and
show that these two items are

00:20:40.140 --> 00:20:42.400
related to each other.

00:20:42.400 --> 00:20:45.810
This means that users such as
you, such as my blind friend,

00:20:45.810 --> 00:20:48.750
such as my grandparents,
will be able to understand

00:20:48.750 --> 00:20:52.902
that these views are logically
related to one another.

00:20:52.902 --> 00:20:57.300
Another important concept that I
want to talk about is labeling.

00:20:57.300 --> 00:20:58.140
So labeling.

00:20:58.140 --> 00:21:00.270
The purpose of
this is to explain

00:21:00.270 --> 00:21:03.700
the meaning of interactive
elements to users.

00:21:03.700 --> 00:21:05.340
I mean, I think you
often put labels

00:21:05.340 --> 00:21:07.830
on physical items
in everyday life

00:21:07.830 --> 00:21:10.420
just so you get a better
understanding of them.

00:21:10.420 --> 00:21:12.210
This also makes
sense in the context

00:21:12.210 --> 00:21:15.300
of an Android application.

00:21:15.300 --> 00:21:19.970
By adding correct labels,
screen readers such as ChromeVox

00:21:19.970 --> 00:21:23.760
will be able to properly explain
the function of the UI widgets

00:21:23.760 --> 00:21:26.160
in your applications to users.

00:21:26.160 --> 00:21:28.770
And I also think I can
demonstrate this better

00:21:28.770 --> 00:21:31.410
with an example.

00:21:31.410 --> 00:21:35.960
So I have an application here,
which is called Josie's Cafe.

00:21:35.960 --> 00:21:41.980
This application allows you to
order items from Josie's Cafe.

00:21:41.980 --> 00:21:46.460
And let's go and look at how
we structured this application.

00:21:46.460 --> 00:21:49.760
So you can see that I've added
some image buttons as well

00:21:49.760 --> 00:21:52.580
as the ID and the
source attribute.

00:21:52.580 --> 00:21:54.710
Everything looks good, right?

00:21:54.710 --> 00:21:58.430
So now let's go and see what
a screen reader might read.

00:21:58.430 --> 00:21:59.990
So I have a friend.

00:21:59.990 --> 00:22:02.430
His name is Reese.

00:22:02.430 --> 00:22:06.270
Reese is low vision and relies
on the use of a screen reader

00:22:06.270 --> 00:22:08.220
to navigate the application.

00:22:08.220 --> 00:22:11.520
And Reese's favorite
food is pizza.

00:22:11.520 --> 00:22:15.030
He really, really wants to
order pizza from Josie's Cafe,

00:22:15.030 --> 00:22:19.090
so he turns on his screen reader
and opens the application.

00:22:19.090 --> 00:22:21.280
What does he hear immediately?

00:22:21.280 --> 00:22:23.520
He hears button.

00:22:23.520 --> 00:22:24.950
Hm.

00:22:24.950 --> 00:22:27.110
Let's see if there's
anything else available.

00:22:27.110 --> 00:22:29.330
So Reese presses Tab.

00:22:29.330 --> 00:22:31.424
He hears button.

00:22:31.424 --> 00:22:32.720
Hm.

00:22:32.720 --> 00:22:33.370
OK.

00:22:33.370 --> 00:22:34.330
One last time.

00:22:34.330 --> 00:22:37.290
I'm going to press Tab again
to see what else I can get.

00:22:37.290 --> 00:22:39.200
Presses Tab again.

00:22:39.200 --> 00:22:39.955
Button.

00:22:39.955 --> 00:22:42.410
Hm.

00:22:42.410 --> 00:22:45.320
As you can see, this
type of navigation

00:22:45.320 --> 00:22:48.200
doesn't really support
users such as Reese

00:22:48.200 --> 00:22:50.190
to navigate the application.

00:22:50.190 --> 00:22:53.190
But it's really easy
for you to change this.

00:22:53.190 --> 00:22:56.480
And let's look at how
we'll do that using labels.

00:22:56.480 --> 00:22:58.460
So I have some image buttons.

00:22:58.460 --> 00:23:01.680
So we're going to use the
content description tag.

00:23:01.680 --> 00:23:05.400
And you can see here that for
these content description tags

00:23:05.400 --> 00:23:10.730
I've added the actual item that
the image button represents.

00:23:10.730 --> 00:23:12.950
And the actual attributes
that you might use

00:23:12.950 --> 00:23:16.380
would depend on the type
of element that you have.

00:23:16.380 --> 00:23:18.860
But once I've added all
my content descriptions,

00:23:18.860 --> 00:23:22.400
let's just see what the screen
reader would now read to Reese.

00:23:22.400 --> 00:23:24.230
So Reese decides to
give it one last shot

00:23:24.230 --> 00:23:26.780
and opens the application again.

00:23:26.780 --> 00:23:29.500
He immediately hears chocolate.

00:23:29.500 --> 00:23:30.680
OK.

00:23:30.680 --> 00:23:33.080
Not really in the mood
for chocolate now.

00:23:33.080 --> 00:23:36.810
Let's see what else is
available in Josie's Cafe.

00:23:36.810 --> 00:23:38.730
Eeew.

00:23:38.730 --> 00:23:43.430
OK, let's just hope that he
doesn't end up with this.

00:23:43.430 --> 00:23:44.700
Pizza.

00:23:44.700 --> 00:23:45.890
Awesome.

00:23:45.890 --> 00:23:49.280
Reese is now able to
order his favorite pizza

00:23:49.280 --> 00:23:51.730
from Josie's Cafe.

00:23:51.730 --> 00:23:54.970
As you can see, just by
adding content descriptions

00:23:54.970 --> 00:23:59.260
made such a big difference
to users such as Reese.

00:23:59.260 --> 00:24:02.350
So I've talked about
some simple views,

00:24:02.350 --> 00:24:05.530
but if you have some more
complicated or custom views

00:24:05.530 --> 00:24:08.620
in your application, you might
need some additional work

00:24:08.620 --> 00:24:10.810
in order to make
it more accessible.

00:24:10.810 --> 00:24:13.090
And the Android
Developer documentation

00:24:13.090 --> 00:24:15.910
has more detail on
the specific tasks

00:24:15.910 --> 00:24:17.440
that you might need to do.

00:24:17.440 --> 00:24:21.750
So with that, I'll hand over
to my colleague, Emilie.

00:24:21.750 --> 00:24:23.500
EMILIE ROBERTS: Thanks, Sarah.

00:24:23.500 --> 00:24:26.680
My name's Emilie Roberts,
and I'm a developer advocate

00:24:26.680 --> 00:24:28.450
with Chrome OS.

00:24:28.450 --> 00:24:29.970
And-- what's my
next line, I forget?

00:24:29.970 --> 00:24:30.470
OK.

00:24:30.470 --> 00:24:30.970
There we go.

00:24:34.040 --> 00:24:36.490
We've been talking a lot
about input and keyboard.

00:24:36.490 --> 00:24:39.280
And I think fundamentally
what this talk is really about

00:24:39.280 --> 00:24:43.577
is how users interact with and
experience your applications.

00:24:43.577 --> 00:24:45.160
And we're going to
talk a little bit--

00:24:45.160 --> 00:24:47.493
I'm going to talk a little
bit about screens and layout,

00:24:47.493 --> 00:24:49.300
which is near and
dear to my heart.

00:24:49.300 --> 00:24:52.390
And doing this right,
doing all of this right,

00:24:52.390 --> 00:24:54.250
can be the difference
between a user

00:24:54.250 --> 00:24:56.260
not being able to
use your app at all

00:24:56.260 --> 00:24:58.000
or at least being
able to use it.

00:24:58.000 --> 00:25:01.520
For it to be convenient to use
or to be inconvenient to use.

00:25:01.520 --> 00:25:03.100
And I think where
we all want to get

00:25:03.100 --> 00:25:06.640
is for your users to find
your app delightful to use,

00:25:06.640 --> 00:25:07.540
natural to use.

00:25:07.540 --> 00:25:10.540
So whatever the service or
content they want is just,

00:25:10.540 --> 00:25:11.900
that's the choice for your app.

00:25:11.900 --> 00:25:14.200
And I think that
applies for all users,

00:25:14.200 --> 00:25:17.450
and for accessibility
users that's magnified.

00:25:17.450 --> 00:25:20.860
So I see some familiar
faces, some Chrome OS fans.

00:25:20.860 --> 00:25:24.630
And I've talked about some of
this stuff in my last talk.

00:25:24.630 --> 00:25:27.420
This is the dress I wear when I
talk about screens and layouts,

00:25:27.420 --> 00:25:29.897
so that's why it's
the same dress.

00:25:29.897 --> 00:25:31.980
If you ever see this dress,
you can skip the talk.

00:25:31.980 --> 00:25:34.020
No, just kidding.

00:25:34.020 --> 00:25:36.130
We have some really
great sandboxes around,

00:25:36.130 --> 00:25:40.690
so if you haven't seen your app
on a Chrome OS device check it

00:25:40.690 --> 00:25:41.190
out.

00:25:41.190 --> 00:25:43.023
And see if which
category-- hopefully you're

00:25:43.023 --> 00:25:45.875
not in the unusable category
for accessibility folks,

00:25:45.875 --> 00:25:48.000
but hopefully you're in
the delightful and easy and

00:25:48.000 --> 00:25:48.500
natural.

00:25:48.500 --> 00:25:51.720
And that's where we want to go.

00:25:51.720 --> 00:25:53.700
So we're in an era
of changing screens.

00:25:53.700 --> 00:25:55.560
We heard that in the
keynote announcement

00:25:55.560 --> 00:25:57.300
and in many of the sandboxes.

00:25:57.300 --> 00:26:01.020
There's phones, tablets,
Chromebooks, external monitors,

00:26:01.020 --> 00:26:02.460
foldables, you name it.

00:26:02.460 --> 00:26:05.640
And who knows what's coming
out this year and next year?

00:26:05.640 --> 00:26:08.850
The app world is
changing, and you really

00:26:08.850 --> 00:26:10.470
want your apps to
just work seamlessly

00:26:10.470 --> 00:26:12.600
across all of these devices.

00:26:12.600 --> 00:26:15.460
In a big way--

00:26:15.460 --> 00:26:16.970
oh wait, I got to
tell you my story.

00:26:16.970 --> 00:26:18.012
I wrote this on the side.

00:26:18.012 --> 00:26:20.060
So I want to talk about
my mom because I bought

00:26:20.060 --> 00:26:22.910
her a Pixelbook, and there's
so many Android apps she would

00:26:22.910 --> 00:26:24.860
never think of using her phone.

00:26:24.860 --> 00:26:27.620
And my mom has pretty good
vision-- she's very able--

00:26:27.620 --> 00:26:29.570
and just having it
on a larger screen

00:26:29.570 --> 00:26:32.690
makes it so much more delightful
and easier to engage with.

00:26:32.690 --> 00:26:34.880
And for many
accessibility users,

00:26:34.880 --> 00:26:37.520
using an external monitor
can be life-changing

00:26:37.520 --> 00:26:41.720
or using a-- not life-changing,
but completely enabling.

00:26:41.720 --> 00:26:47.040
And using a screen reader can
mean your app can be used.

00:26:47.040 --> 00:26:47.540
Cool.

00:26:47.540 --> 00:26:51.550
So for many applications, this
is about layout and screen

00:26:51.550 --> 00:26:52.300
size.

00:26:52.300 --> 00:26:55.640
And the easiest way to do
this, or a really great way,

00:26:55.640 --> 00:26:58.270
in my opinion, to do this is to
have different layout buckets

00:26:58.270 --> 00:26:59.950
for different screen sizes.

00:26:59.950 --> 00:27:02.830
In this case, I'm using width.

00:27:02.830 --> 00:27:06.460
So for a large landscape
or a large portrait,

00:27:06.460 --> 00:27:08.680
I might have a different
layout versus a mobile phone

00:27:08.680 --> 00:27:09.610
portrait or landscape.

00:27:09.610 --> 00:27:12.250
You can have six, eight,
two layouts depending

00:27:12.250 --> 00:27:14.080
on what your UI looks like.

00:27:14.080 --> 00:27:16.750
In the Codelab tent, we
have a resizing codelab

00:27:16.750 --> 00:27:19.660
which can help you with this.

00:27:19.660 --> 00:27:22.420
My focus on my
team this year has

00:27:22.420 --> 00:27:25.450
been looking at navigation
patterns for large screens,

00:27:25.450 --> 00:27:29.590
especially as we see
foldable devices and more

00:27:29.590 --> 00:27:31.580
external monitors happening.

00:27:31.580 --> 00:27:34.360
And of course the growing
range of Chromebooks.

00:27:34.360 --> 00:27:39.100
And they're very closely
related to screen layout,

00:27:39.100 --> 00:27:41.930
but I think it deserves
its own separate topic.

00:27:41.930 --> 00:27:45.310
So imagine you have a mobile
phone application designed

00:27:45.310 --> 00:27:49.326
for narrow portrait screens, and
you plug in an external monitor

00:27:49.326 --> 00:27:51.080
to see what that looks like.

00:27:51.080 --> 00:27:52.820
And it looks horrible.

00:27:52.820 --> 00:27:56.690
It looks terrible, and the
designer should go back

00:27:56.690 --> 00:27:58.490
to design school.

00:27:58.490 --> 00:28:00.530
I'm recycling my
joke from yesterday.

00:28:00.530 --> 00:28:02.280
So throw her out of the room.

00:28:02.280 --> 00:28:03.600
She's horrible.

00:28:03.600 --> 00:28:05.070
Look at that
stretched out screen.

00:28:05.070 --> 00:28:06.700
This is a photo
viewer, by the way.

00:28:06.700 --> 00:28:08.670
So maybe on a phone
it makes sense

00:28:08.670 --> 00:28:10.230
if you have 100
photos not to try

00:28:10.230 --> 00:28:12.450
to show 100 previews
on a phone screen,

00:28:12.450 --> 00:28:14.190
but on an external
monitor, come on.

00:28:14.190 --> 00:28:16.300
We can do better than that.

00:28:16.300 --> 00:28:18.810
And what I think is
specifically important

00:28:18.810 --> 00:28:20.820
for many users with
accessibility needs

00:28:20.820 --> 00:28:22.810
is the navigation.

00:28:22.810 --> 00:28:25.180
Along the bottom, here
is the bottom navigation.

00:28:25.180 --> 00:28:26.650
It's all stretched out.

00:28:26.650 --> 00:28:32.050
The icons are tiny, and they're
just in this vast sea of space.

00:28:32.050 --> 00:28:35.710
So even if your eagle eyed
and have excellent dexterity,

00:28:35.710 --> 00:28:38.410
it's very difficult to see,
to understand, and to interact

00:28:38.410 --> 00:28:40.940
with these elements.

00:28:40.940 --> 00:28:43.400
And you can imagine
it being literally

00:28:43.400 --> 00:28:46.510
impossible for some people.

00:28:46.510 --> 00:28:47.090
OK.

00:28:47.090 --> 00:28:48.920
I was the designer.

00:28:48.920 --> 00:28:50.570
Give me a second chance.

00:28:50.570 --> 00:28:51.590
I did a better job.

00:28:51.590 --> 00:28:53.782
I even included a photo
preview on the side

00:28:53.782 --> 00:28:56.240
and made a little bit better
use of the screen real estate.

00:28:56.240 --> 00:28:57.740
This is like moving
in the direction

00:28:57.740 --> 00:29:01.645
of making my app easy and
delightful, convenient to use.

00:29:01.645 --> 00:29:03.770
I've done a little bit
better in the middle column.

00:29:03.770 --> 00:29:05.145
And most importantly,
take a look

00:29:05.145 --> 00:29:07.750
at the navigation on the left.

00:29:07.750 --> 00:29:08.940
Side navigation.

00:29:08.940 --> 00:29:10.360
There's labels.

00:29:10.360 --> 00:29:11.440
There's icons.

00:29:11.440 --> 00:29:12.820
They're visible.

00:29:12.820 --> 00:29:16.570
And they're all grouped nicely
together so I can easily

00:29:16.570 --> 00:29:18.520
go from one to the
other without having

00:29:18.520 --> 00:29:20.634
to search around on the screen.

00:29:20.634 --> 00:29:23.280
Oh, I've got to go back.

00:29:23.280 --> 00:29:26.580
This, live, about
30 minutes ago.

00:29:26.580 --> 00:29:30.150
This beautiful, amazing
photo viewing sample

00:29:30.150 --> 00:29:32.600
is available on GitHub
for your perusal.

00:29:32.600 --> 00:29:33.600
It's just a little demo.

00:29:33.600 --> 00:29:36.530
It's not that amazing,
but check it out.

00:29:36.530 --> 00:29:37.740
Okey dokey.

00:29:37.740 --> 00:29:40.590
More information is available
on the material design site.

00:29:40.590 --> 00:29:42.960
They have a number of material
studies, a number of case

00:29:42.960 --> 00:29:44.790
studies that you can look at.

00:29:44.790 --> 00:29:47.400
This is the reply app, and
they're doing just this.

00:29:47.400 --> 00:29:50.100
So four different layouts
depending on the screen

00:29:50.100 --> 00:29:51.176
size you're looking at.

00:29:54.750 --> 00:29:58.350
In the first example with
the long stretched out bottom

00:29:58.350 --> 00:30:02.548
navigation, the targets were
very small, hard to see,

00:30:02.548 --> 00:30:04.590
and hard to interact with,
especially for someone

00:30:04.590 --> 00:30:06.890
with any dexterity needs.

00:30:06.890 --> 00:30:10.400
We recommend a minimum
touch target size of 48dp.

00:30:10.400 --> 00:30:11.540
That's not new.

00:30:11.540 --> 00:30:13.820
Hopefully you all
know that, but it's

00:30:13.820 --> 00:30:16.580
super important for all the
reasons I've just outlined.

00:30:16.580 --> 00:30:18.080
You can also use
ConstraintLayout

00:30:18.080 --> 00:30:21.170
and allow it to scale up
naturally using percentages

00:30:21.170 --> 00:30:25.550
and make it easier to squish
those little pink aliens.

00:30:25.550 --> 00:30:27.450
Here's just a quick example.

00:30:27.450 --> 00:30:30.710
A little bit exaggerated, but
on a portrait mobile phone,

00:30:30.710 --> 00:30:32.450
why not have the
icons visible and easy

00:30:32.450 --> 00:30:34.130
to interact with and clear.

00:30:37.090 --> 00:30:39.150
I don't have a lot of
time left, but I just

00:30:39.150 --> 00:30:42.240
want to give a big shout-out
to ViewModel and Navigation

00:30:42.240 --> 00:30:45.910
and Jetpack as a whole, if
you haven't been using it.

00:30:45.910 --> 00:30:48.300
Check out their sandbox,
and the codelabs,

00:30:48.300 --> 00:30:50.220
and their talks and
the documentation.

00:30:50.220 --> 00:30:51.240
It's awesome.

00:30:51.240 --> 00:30:55.120
As an Android developer, my main
pain points have just, like,

00:30:55.120 --> 00:30:57.580
disappeared with it.

00:30:57.580 --> 00:30:59.680
When you're handling
different screen layouts,

00:30:59.680 --> 00:31:03.445
ViewModel makes state so elegant
and easy to just maintain.

00:31:03.445 --> 00:31:06.070
You don't have to worry about if
you're resizing on a Chrome OS

00:31:06.070 --> 00:31:10.037
app and you're getting
20 configuration changes.

00:31:10.037 --> 00:31:11.620
This is real, and
it goes up and down.

00:31:11.620 --> 00:31:13.960
It can be 100
configuration changes.

00:31:13.960 --> 00:31:15.630
It's hard to handle
all by yourself,

00:31:15.630 --> 00:31:19.100
but if you use ViewModel,
done, finished.

00:31:19.100 --> 00:31:19.780
Finished.

00:31:19.780 --> 00:31:20.480
Navigation.

00:31:20.480 --> 00:31:23.105
If you're working with all those
different navigation patterns,

00:31:23.105 --> 00:31:24.620
fragments can be a headache.

00:31:24.620 --> 00:31:26.810
Popping the stack and
if you have a fragment

00:31:26.810 --> 00:31:28.733
in a fragment in a fragment.

00:31:28.733 --> 00:31:30.900
If you know what I'm talking
about, it's super hard.

00:31:30.900 --> 00:31:34.228
Navigation makes that a lot
easy. d.android.com/jetpack,

00:31:34.228 --> 00:31:34.770
check it out.

00:31:37.877 --> 00:31:39.710
I'm going to take the
last couple of seconds

00:31:39.710 --> 00:31:43.160
just to call out something
that's unique to Chromeboxes,

00:31:43.160 --> 00:31:43.760
espec--

00:31:43.760 --> 00:31:45.667
or, Chromebooks.

00:31:45.667 --> 00:31:46.500
Let me say it again.

00:31:46.500 --> 00:31:48.860
It's not necessarily
unique to Chrome OS,

00:31:48.860 --> 00:31:50.690
because lots of
phones these days

00:31:50.690 --> 00:31:53.000
are supporting desktop mode.

00:31:53.000 --> 00:31:55.610
So it's in the Android Q APIs.

00:31:55.610 --> 00:32:00.350
Huawei, Samsung, LG, I believe
all have desktop modes.

00:32:00.350 --> 00:32:02.910
Plugging external monitors
into your Android devices.

00:32:02.910 --> 00:32:05.660
On Chrome OS, this is even
easier and much more common.

00:32:05.660 --> 00:32:10.070
And with Chromeboxes-- sorry,
I should say with Chromeboxes--

00:32:10.070 --> 00:32:10.870
it's required.

00:32:10.870 --> 00:32:12.170
There's no other screen.

00:32:12.170 --> 00:32:16.040
So we can have up to
seven external monitors.

00:32:16.040 --> 00:32:18.090
For the most part, you
don't have to do anything.

00:32:18.090 --> 00:32:20.640
Your apps will just work and
the users can move them around.

00:32:20.640 --> 00:32:22.240
If you check out the live--

00:32:22.240 --> 00:32:25.250
or sorry, the recorded
version of our talk, Stefan

00:32:25.250 --> 00:32:29.070
went into a bit more detail
about how density works.

00:32:29.070 --> 00:32:32.130
But if you just want to do
something with your activities,

00:32:32.130 --> 00:32:35.630
you can get a look at
the number of displays

00:32:35.630 --> 00:32:38.680
connected to your system
using the display manager.

00:32:38.680 --> 00:32:40.430
And then if you want
an activity to appear

00:32:40.430 --> 00:32:45.810
on a specific display, you can
use launchDisplayID and pop it

00:32:45.810 --> 00:32:46.310
over there.

00:32:48.840 --> 00:32:50.100
OK, couple last mentions.

00:32:50.100 --> 00:32:51.480
We have a couple of codelabs.

00:32:51.480 --> 00:32:53.040
One is on resizing.

00:32:53.040 --> 00:32:56.920
One is on optimizing input
for Chrome OS devices.

00:32:56.920 --> 00:32:59.550
So that's keyboard,
mouse, drag and drop.

00:32:59.550 --> 00:33:01.200
All that great stuff.

00:33:01.200 --> 00:33:03.210
These have been
refreshed for 2019.

00:33:03.210 --> 00:33:05.250
Accessibility has
their own codelab,

00:33:05.250 --> 00:33:06.660
which goes a lot
more into detail

00:33:06.660 --> 00:33:08.520
with grouping and labeling.

00:33:08.520 --> 00:33:11.270
And this has also had a
nice refresh for 2019.

00:33:11.270 --> 00:33:14.700
So check that out in
the Codelab tents.

00:33:14.700 --> 00:33:16.680
As I mentioned, there
are some great sandboxes.

00:33:16.680 --> 00:33:21.510
The accessibility and material
design sandbox is over there.

00:33:21.510 --> 00:33:24.960
It's close by, so check that
out as well as our Chrome OS

00:33:24.960 --> 00:33:28.680
sandboxes where you can try out
first of all your applications

00:33:28.680 --> 00:33:31.680
and see where you fall on the
scale of unusable, convenient,

00:33:31.680 --> 00:33:33.160
and amazing.

00:33:33.160 --> 00:33:37.240
Hopefully towards the A
side, the amazing side.

00:33:37.240 --> 00:33:40.800
And you can also look at
developing your apps right

00:33:40.800 --> 00:33:43.020
on Chromebooks
for web, for game,

00:33:43.020 --> 00:33:45.840
for Android, which
is also pretty cool.

00:33:45.840 --> 00:33:48.720
And don't forget
while you're there

00:33:48.720 --> 00:33:51.780
to collect your really
cool Chrome OS enamel pins.

00:33:51.780 --> 00:33:54.723
We have seven of them with
the secret eighth one,

00:33:54.723 --> 00:33:56.640
which I don't know if
I'm supposed to mention.

00:33:56.640 --> 00:33:59.490
But collect them around
at the Android sandbox,

00:33:59.490 --> 00:34:02.250
at the Chrome OS sandbox, at
the gaming sandbox, Codelabs,

00:34:02.250 --> 00:34:05.330
and our office hours.

00:34:05.330 --> 00:34:08.300
With that, it's about
time to say goodbye.

00:34:08.300 --> 00:34:10.670
I think accessibility
matters and you

00:34:10.670 --> 00:34:15.719
should implement it because it's
the right thing to do, period.

00:34:15.719 --> 00:34:17.699
At the same time,
it enables all users

00:34:17.699 --> 00:34:20.699
for all the cases we've
been talking about,

00:34:20.699 --> 00:34:21.580
including yourself.

00:34:21.580 --> 00:34:23.580
It makes your app much,
much more easier to use,

00:34:23.580 --> 00:34:27.290
much more delightful to engage
with, better to engage with.

00:34:27.290 --> 00:34:30.045
So you have more
users, more enabled,

00:34:30.045 --> 00:34:34.270
more users more happy
users, more empowered users.

00:34:34.270 --> 00:34:36.010
And that's the sum of my talk.

00:34:36.010 --> 00:34:39.389
I want to say if you take three
things away from this support

00:34:39.389 --> 00:34:41.880
keyboard, think about your
layouts and navigation,

00:34:41.880 --> 00:34:45.449
and most importantly add labels
and grouping to your app.

00:34:45.449 --> 00:34:48.810
Adding labels and grouping
can go a really long way

00:34:48.810 --> 00:34:52.560
to enable OSs to then
do intelligent things

00:34:52.560 --> 00:34:54.630
with your apps and make
them available to lots

00:34:54.630 --> 00:34:56.350
and lots of users.

00:34:56.350 --> 00:35:00.090
So I'd like to thank you
for your time this morning.

00:35:00.090 --> 00:35:02.040
And building awesome
apps, thinking

00:35:02.040 --> 00:35:06.010
about Chrome OS, and all this
stuff and your energy here.

00:35:06.010 --> 00:35:08.910
And also to thank Sara and
Stefan, my fellow copresenters.

00:35:08.910 --> 00:35:11.368
Have a wonderful last
day of I/O. Enjoy it.

00:35:11.368 --> 00:35:11.910
Thanks a lot.

00:35:11.910 --> 00:35:12.510
[APPLAUSE]

00:35:12.510 --> 00:35:15.860
[MUSIC PLAYING]

