WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.880
[MUSIC PLAYING]

00:00:05.479 --> 00:00:07.020
EMILY FORTUNA: I'm
here with Maurice,

00:00:07.020 --> 00:00:09.710
who is part of the-- a software
engineer on the Flutter, team,

00:00:09.710 --> 00:00:13.860
and he's particularly focused
on the plugins and ecosystem

00:00:13.860 --> 00:00:15.060
part of Flutter.

00:00:15.060 --> 00:00:18.630
So I know that you've worked
a lot on the Firebase plugins.

00:00:18.630 --> 00:00:20.220
Is there a particular
Firebase plugin

00:00:20.220 --> 00:00:23.760
that you think is
especially underappreciated

00:00:23.760 --> 00:00:26.360
that should have some
more love, more usage?

00:00:26.360 --> 00:00:29.080
MAURICE PARRISH: Yeah, I really
like the Firebase Dynamic Links

00:00:29.080 --> 00:00:30.090
plugin.

00:00:30.090 --> 00:00:32.130
With that plugin, it
makes it really easy

00:00:32.130 --> 00:00:35.580
to navigate to the part of
your app that you really like.

00:00:35.580 --> 00:00:37.980
And combined with
Flutter's route

00:00:37.980 --> 00:00:40.020
and how easy it is to
navigate with Flutter,

00:00:40.020 --> 00:00:42.835
I think it fits really
well inside the ecosystem.

00:00:42.835 --> 00:00:44.460
EMILY FORTUNA: So
how would you combine

00:00:44.460 --> 00:00:47.624
Dynamic Links with the
route navigation in Flutter?

00:00:47.624 --> 00:00:49.290
MAURICE PARRISH: So
since you would just

00:00:49.290 --> 00:00:52.080
go to the Firebase website,
you get your configuration file

00:00:52.080 --> 00:00:56.060
for your Android and your
iOS, just plug that in,

00:00:56.060 --> 00:00:58.520
and then you include the
dependency and your [INAUDIBLE]

00:00:58.520 --> 00:00:59.592
spec and everything.

00:00:59.592 --> 00:01:01.050
Then after that,
all you have to do

00:01:01.050 --> 00:01:02.540
is just retrieve
the Dynamic Link,

00:01:02.540 --> 00:01:03.960
and then you just parse it.

00:01:03.960 --> 00:01:05.640
And then you can
use the navigation

00:01:05.640 --> 00:01:08.670
with pushes and routes to set
up automatic navigation when

00:01:08.670 --> 00:01:09.750
your app starts.

00:01:09.750 --> 00:01:12.070
So it's really just
straightforward to implement.

00:01:12.070 --> 00:01:13.611
EMILY FORTUNA: Do
you have any advice

00:01:13.611 --> 00:01:16.530
for people who are looking
to create new plugins

00:01:16.530 --> 00:01:17.530
or packages for Flutter?

00:01:17.530 --> 00:01:18.988
MAURICE PARRISH:
I would definitely

00:01:18.988 --> 00:01:21.030
look at the language guide
for an effective Dart.

00:01:21.030 --> 00:01:24.505
Looking at that language guide
really helps you not only learn

00:01:24.505 --> 00:01:25.380
a lot about all the--

00:01:25.380 --> 00:01:26.838
Dart and all its
features, it helps

00:01:26.838 --> 00:01:28.590
you write a lot cleaner code.

00:01:28.590 --> 00:01:32.490
And also looking at the
language guide makes it--

00:01:32.490 --> 00:01:34.887
help your app get
a lot more exposure

00:01:34.887 --> 00:01:35.970
by following those guides.

00:01:35.970 --> 00:01:38.250
Because when we run the
test on the plugin website,

00:01:38.250 --> 00:01:40.174
we run through a
lot of Dart format

00:01:40.174 --> 00:01:41.715
and how you implement
certain things.

00:01:41.715 --> 00:01:42.756
EMILY FORTUNA: It's true.

00:01:42.756 --> 00:01:44.580
And also I know that
the score that you

00:01:44.580 --> 00:01:48.810
see on the package on pub, when
you're looking at packages,

00:01:48.810 --> 00:01:51.415
is partly based on if it's
following proper style guides.

00:01:51.415 --> 00:01:52.790
MAURICE PARRISH:
Yes, definitely.

00:01:52.790 --> 00:01:54.847
It looks through to make sure--

00:01:54.847 --> 00:01:56.430
it basically runs a
Dart format, which

00:01:56.430 --> 00:01:58.680
is a plug-in tool you can
already use to automatically

00:01:58.680 --> 00:02:00.130
format your code.

00:02:00.130 --> 00:02:02.640
And then it just makes sure
your dependencies are you--

00:02:02.640 --> 00:02:03.950
all your dependencies are use.

00:02:03.950 --> 00:02:06.660
They're lined up right and a
lot of other checks as well.

00:02:06.660 --> 00:02:09.180
EMILY FORTUNA: Makes your
code more readable as well.

00:02:09.180 --> 00:02:11.160
Is there any particular
package or plugin

00:02:11.160 --> 00:02:13.466
that you would like to see
that doesn't exist yet?

00:02:13.466 --> 00:02:15.090
MAURICE PARRISH: For
me, I'd definitely

00:02:15.090 --> 00:02:18.900
like to see a plug-in
for a graphics engine.

00:02:18.900 --> 00:02:20.710
Right now, for my
own personal project,

00:02:20.710 --> 00:02:24.280
I'm making a game with the
Flame plugin, the really basic

00:02:24.280 --> 00:02:26.080
2D graphics engine.

00:02:26.080 --> 00:02:28.980
But I would like to see
a fully fleshed out one.

00:02:28.980 --> 00:02:31.600
I think that'd be really
great for a lot of developers.

00:02:31.600 --> 00:02:32.400
EMILY FORTUNA:
Maurice, thank you

00:02:32.400 --> 00:02:33.608
so much for chatting with us.

00:02:33.608 --> 00:02:35.390
This has been great.

