WEBVTT
Kind: captions
Language: en

00:00:01.816 --> 00:00:02.270
SATYAJEET SALGAR: All right.

00:00:02.270 --> 00:00:04.040
Good afternoon, everyone.

00:00:04.040 --> 00:00:06.860
Thank you for coming here
and watching online.

00:00:06.860 --> 00:00:08.570
My name is Satyajeet Salgar.

00:00:08.570 --> 00:00:09.850
I'm here with Ibrahim.

00:00:09.850 --> 00:00:12.530
And we're here to talk about the
YouTube Live platform and

00:00:12.530 --> 00:00:14.810
the YouTube Live APIs.

00:00:14.810 --> 00:00:16.740
I'm going to talk a little bit
about the platform, what

00:00:16.740 --> 00:00:17.720
creators are doing.

00:00:17.720 --> 00:00:20.220
Ibrahim is going to dive into
details of the API and show

00:00:20.220 --> 00:00:21.630
you a demo.

00:00:21.630 --> 00:00:23.880
And we'll save some time at
the end for questions.

00:00:23.880 --> 00:00:25.330
Does that sound good?

00:00:25.330 --> 00:00:27.630
We're also going to take
questions from the live

00:00:27.630 --> 00:00:29.950
streaming audience on the Google
Moderator link that you

00:00:29.950 --> 00:00:31.150
see online.

00:00:31.150 --> 00:00:32.700
So we look forward to
your questions.

00:00:32.700 --> 00:00:34.710
All right.

00:00:34.710 --> 00:00:37.490
This is a live streaming talk
with a live streaming demo

00:00:37.490 --> 00:00:39.650
that will be live streamed,
but we can go deeper if

00:00:39.650 --> 00:00:40.560
someone live streams us.

00:00:40.560 --> 00:00:41.880
So it is possible.

00:00:44.610 --> 00:00:45.760
YouTube.

00:00:45.760 --> 00:00:46.900
How many people watched
a YouTube

00:00:46.900 --> 00:00:48.150
video in the last month?

00:00:50.500 --> 00:00:53.180
You are part of 1 billion
people, which is about half

00:00:53.180 --> 00:00:55.660
the people that are on the
internet right now.

00:00:55.660 --> 00:00:58.940
They watch 6 billion hours
every month, and

00:00:58.940 --> 00:01:00.710
really across platforms.

00:01:00.710 --> 00:01:05.379
So 25% of our views globally
are on mobile devices.

00:01:05.379 --> 00:01:08.360
YouTube is also the largest
search engine in the world.

00:01:08.360 --> 00:01:13.170
So clearly, we believe YouTube
and video is a great tool to

00:01:13.170 --> 00:01:15.570
build engagement and
create great

00:01:15.570 --> 00:01:16.840
experiences for your audience.

00:01:16.840 --> 00:01:19.430
We think live, particularly
so.

00:01:19.430 --> 00:01:22.380
So I'm going to talk a little
bit about Live on YouTube.

00:01:25.740 --> 00:01:29.500
How many people recognize
this image?

00:01:29.500 --> 00:01:30.630
Almost everyone.

00:01:30.630 --> 00:01:35.520
So for those of you who don't,
on the 14th of October, an

00:01:35.520 --> 00:01:38.300
Austrian gentleman by the name
of Felix Baumgartner got into

00:01:38.300 --> 00:01:42.640
that space capsule, went up 24
miles into space, looked down

00:01:42.640 --> 00:01:46.350
over New Mexico, and
then jumped.

00:01:46.350 --> 00:01:48.830
The jump was about 10 minutes,
and he was in free fall for

00:01:48.830 --> 00:01:50.870
about four minutes.

00:01:50.870 --> 00:01:53.970
This is what we saw internet
traffic looking like during

00:01:53.970 --> 00:01:55.220
that period.

00:01:57.720 --> 00:01:57.940
Yeah.

00:01:57.940 --> 00:02:00.030
A couple of people, like me,
stayed for the press

00:02:00.030 --> 00:02:00.700
conference.

00:02:00.700 --> 00:02:01.940
But this was the peak.

00:02:01.940 --> 00:02:06.260
And at its peak, 8.2 million
people tuned in.

00:02:06.260 --> 00:02:08.699
And there are 52 million
playbacks.

00:02:08.699 --> 00:02:12.160
That is the kind of scale and
excitement that a live event

00:02:12.160 --> 00:02:14.690
on YouTube can generate.

00:02:14.690 --> 00:02:17.600
By the way, fun piece of trivia,
at that point-- those

00:02:17.600 --> 00:02:19.525
four minutes-- about
8% of all internet

00:02:19.525 --> 00:02:21.140
traffic was that video.

00:02:23.840 --> 00:02:27.220
Fortunately, you don't have to
jump from space to create

00:02:27.220 --> 00:02:28.810
great live entertainment.

00:02:28.810 --> 00:02:31.420
And we're seeing tons and
tons of partners do

00:02:31.420 --> 00:02:34.650
that today on YouTube.

00:02:34.650 --> 00:02:37.760
Up on the top left over there,
whenever soccer powerhouse

00:02:37.760 --> 00:02:40.330
Spartak Moscow plays in Russia,
we see live traffic

00:02:40.330 --> 00:02:42.220
from Russia spike.

00:02:42.220 --> 00:02:45.880
Live sports is a great way
to build entertainment on

00:02:45.880 --> 00:02:49.240
YouTube, whether it's cricket
in India or major league

00:02:49.240 --> 00:02:52.690
baseball that live streams its
games internationally, or the

00:02:52.690 --> 00:02:54.220
NBA developmental league.

00:02:54.220 --> 00:02:57.800
Or it's really sports that
anyone looks for that are hard

00:02:57.800 --> 00:02:59.260
to find anywhere in the world.

00:02:59.260 --> 00:03:03.880
For example, surfing from
Australia, boys high school

00:03:03.880 --> 00:03:08.990
soccer, or badminton in
Indonesia, local hockey in

00:03:08.990 --> 00:03:10.170
India-- all of these

00:03:10.170 --> 00:03:12.420
experiences are live on YouTube.

00:03:12.420 --> 00:03:16.120
And audiences are finding
these, and channels are

00:03:16.120 --> 00:03:18.460
building their audiences
on YouTube.

00:03:18.460 --> 00:03:21.680
But our vision for sports
isn't just the game.

00:03:21.680 --> 00:03:24.100
We think there's tons of live
stuff around the game, whether

00:03:24.100 --> 00:03:26.540
it's the tunnel cam as you're
walking into the auditorium,

00:03:26.540 --> 00:03:28.550
whether it's the interview
afterwards.

00:03:28.550 --> 00:03:31.260
These are all part of the
live sports experience.

00:03:31.260 --> 00:03:35.460
How many people know
who Juventus is?

00:03:35.460 --> 00:03:37.030
Not that many people-- all
right, a couple of people.

00:03:37.030 --> 00:03:38.970
So Juventus is a soccer
club in Italy.

00:03:38.970 --> 00:03:41.950
They just won the league.

00:03:41.950 --> 00:03:46.130
That is a live stream that the
club put together when the

00:03:46.130 --> 00:03:49.830
entire town celebrated
their win.

00:03:49.830 --> 00:03:52.910
Tens of thousands of people
tuned in, and it was a way for

00:03:52.910 --> 00:03:56.320
their global fans to participate
in that.

00:03:56.320 --> 00:04:00.250
We see this happening in tons
and tons of dimensions.

00:04:00.250 --> 00:04:06.220
Music is another great one,
whether it's the Ultra Music

00:04:06.220 --> 00:04:10.920
Festival in Miami, or Coachella,
or AKB48 in Japan,

00:04:10.920 --> 00:04:14.610
or that gentleman, PSY, who
debuted his new album in a

00:04:14.610 --> 00:04:17.160
live stream on YouTube.

00:04:17.160 --> 00:04:20.450
We're seeing artists of all the
sorts come to YouTube and

00:04:20.450 --> 00:04:23.340
create great live experiences
for their audience.

00:04:23.340 --> 00:04:24.870
And we think this is
just the beginning.

00:04:24.870 --> 00:04:26.920
We think this is going to
extend to all sorts of

00:04:26.920 --> 00:04:28.160
independent artists.

00:04:28.160 --> 00:04:30.565
And I say artists to mean much
more than just musicians.

00:04:33.610 --> 00:04:36.880
Of course, we think gaming is
going to be a huge part of

00:04:36.880 --> 00:04:38.220
Live on YouTube.

00:04:38.220 --> 00:04:40.200
We're starting to see this
already with lots of major

00:04:40.200 --> 00:04:43.110
e-sports tournaments coming
out of the platform.

00:04:43.110 --> 00:04:46.150
Ride Games, for example, streams
its League of Legends

00:04:46.150 --> 00:04:46.910
tournaments.

00:04:46.910 --> 00:04:48.570
We're seeing tons more.

00:04:48.570 --> 00:04:54.490
We recently did an API
integration with Call of Duty,

00:04:54.490 --> 00:04:57.740
Black Ops II, which actually
allows you to live stream your

00:04:57.740 --> 00:04:59.200
multiplayer gameplay.

00:04:59.200 --> 00:05:02.160
Now, we all understand the
value of watching someone

00:05:02.160 --> 00:05:04.640
who's really good play, right?

00:05:04.640 --> 00:05:05.980
But it extends to
more than that.

00:05:05.980 --> 00:05:08.750
For example, a few weeks ago,
I was clicking through the

00:05:08.750 --> 00:05:10.060
Call of Duty shelf,
and I happened to

00:05:10.060 --> 00:05:12.010
stumble on someone playing.

00:05:12.010 --> 00:05:14.240
And it became pretty clear
within a couple of seconds

00:05:14.240 --> 00:05:17.960
that this person actually
wasn't very good.

00:05:17.960 --> 00:05:20.630
But suddenly, she paused and
actually started chatting with

00:05:20.630 --> 00:05:22.160
the audience saying,
hey, thank you

00:05:22.160 --> 00:05:23.010
for watching me play.

00:05:23.010 --> 00:05:25.120
I know I'm not that great, but
I'm getting a lot better.

00:05:25.120 --> 00:05:27.150
And this is what
I did recently.

00:05:27.150 --> 00:05:30.410
Now, the act of two or three of
us that were watching her

00:05:30.410 --> 00:05:31.700
made her experience better.

00:05:31.700 --> 00:05:33.460
It became more than just
a game for her.

00:05:33.460 --> 00:05:35.610
That is the power of live
streaming and connecting with

00:05:35.610 --> 00:05:37.680
an audience that we're seeing
every day on YouTube.

00:05:40.840 --> 00:05:43.010
And it extends to entertainment
of all sorts,

00:05:43.010 --> 00:05:46.650
whether it's product launches,
or conferences exactly like

00:05:46.650 --> 00:05:51.010
this, or very elaborate
April Fools pranks.

00:05:51.010 --> 00:05:52.795
Do people recognize the YouTube
April Fools prank in

00:05:52.795 --> 00:05:53.480
the top right?

00:05:53.480 --> 00:05:54.330
A few people?

00:05:54.330 --> 00:05:56.660
Yeah, this was a live stream
that went on for 12 hours

00:05:56.660 --> 00:06:00.630
where these very brave anchors
actually read the titles and

00:06:00.630 --> 00:06:03.440
descriptions of basically
hundreds of thousands of

00:06:03.440 --> 00:06:05.540
YouTube videos.

00:06:05.540 --> 00:06:09.920
Or something like red
carpet premieres.

00:06:09.920 --> 00:06:13.050
What can we do that's better?

00:06:13.050 --> 00:06:15.520
Check out the multi-cam
on top.

00:06:15.520 --> 00:06:16.950
You can't do this
anywhere else.

00:06:16.950 --> 00:06:21.000
So we weren't just streaming
one particular view.

00:06:21.000 --> 00:06:22.920
But we were letting audiences
select where

00:06:22.920 --> 00:06:23.970
they wanted to go.

00:06:23.970 --> 00:06:28.560
We can do this across genres.

00:06:28.560 --> 00:06:31.820
For example, recently
the PGA live

00:06:31.820 --> 00:06:34.150
streamed just Tiger Woods.

00:06:34.150 --> 00:06:36.360
So if you wanted to follow
just Tiger Woods during a

00:06:36.360 --> 00:06:38.290
tournament, you could
actually do that.

00:06:41.110 --> 00:06:44.100
And of course, this extends
to much, much more.

00:06:44.100 --> 00:06:46.700
It also goes to news
and current events.

00:06:46.700 --> 00:06:48.390
We had the pope on YouTube.

00:06:48.390 --> 00:06:51.280
We had the presidential debate
on YouTube, and not just the

00:06:51.280 --> 00:06:52.450
US presidential debate.

00:06:52.450 --> 00:06:54.950
What you see here on the top
right is the first ever

00:06:54.950 --> 00:06:56.790
presidential debate in Kenya.

00:06:56.790 --> 00:06:59.680
And we had a huge traffic spike
in Kenya, and we were

00:06:59.680 --> 00:07:00.910
wondering what it is.

00:07:00.910 --> 00:07:03.520
And it turned out to
be this event.

00:07:03.520 --> 00:07:05.460
Tons of international
news channels

00:07:05.460 --> 00:07:07.130
broadcast live on YouTube.

00:07:07.130 --> 00:07:11.150
And of course, we have a lot
of topical coverage.

00:07:11.150 --> 00:07:16.530
Now, we're really excited by
everything that our creator

00:07:16.530 --> 00:07:18.270
community is doing on YouTube.

00:07:18.270 --> 00:07:20.330
But what makes this possible?

00:07:20.330 --> 00:07:25.790
What we're really excited about
is the powerful solution

00:07:25.790 --> 00:07:27.900
that we've built.

00:07:27.900 --> 00:07:30.260
The YouTube engineering team has
worked hard over the last

00:07:30.260 --> 00:07:31.860
couple of years to
build a solution

00:07:31.860 --> 00:07:35.380
that I feel is amazing.

00:07:35.380 --> 00:07:39.480
As a viewer, we offer you
unmatched stream quality.

00:07:39.480 --> 00:07:41.270
We offer things like
adaptive bit rate.

00:07:41.270 --> 00:07:44.320
So as you move around and your
bandwidth changes, we figure

00:07:44.320 --> 00:07:48.140
that out, and you don't suffer
a loss in stream quality.

00:07:48.140 --> 00:07:50.200
We let you skip back and
forth in the stream.

00:07:50.200 --> 00:07:51.790
And we work across devices.

00:07:51.790 --> 00:07:53.840
So whether you go from
your desktop or your

00:07:53.840 --> 00:07:56.260
phone, it just works.

00:07:56.260 --> 00:07:58.600
Unmatched scale and quality.

00:07:58.600 --> 00:08:03.920
As a creator, we offer you the
ability to easily insert ads,

00:08:03.920 --> 00:08:06.800
to send us just one high quality
stream and we do all

00:08:06.800 --> 00:08:10.060
the transcoding in real time for
you in the cloud, and to

00:08:10.060 --> 00:08:12.230
all the necessary devices
and resolutions.

00:08:12.230 --> 00:08:14.250
We offer you multiple
camera angles.

00:08:14.250 --> 00:08:15.500
We let you insert ads.

00:08:15.500 --> 00:08:16.360
We let you do slates.

00:08:16.360 --> 00:08:18.870
We make it really easy to
insert closed captions.

00:08:18.870 --> 00:08:21.900
There's a lot more, and we're
just getting started.

00:08:21.900 --> 00:08:23.860
We're going to continue to build
out this platform and

00:08:23.860 --> 00:08:27.240
make it more valuable to our
creator community and to

00:08:27.240 --> 00:08:28.870
developers.

00:08:28.870 --> 00:08:31.810
We released a Live API which
lets partners and developers

00:08:31.810 --> 00:08:33.539
build incredible things.

00:08:33.539 --> 00:08:35.123
Thank you to all the beta
partners-- many of

00:08:35.123 --> 00:08:36.640
you are in the room--

00:08:36.640 --> 00:08:38.820
for helping us grow this API.

00:08:38.820 --> 00:08:43.270
And we're excited to see what
more you do with this.

00:08:43.270 --> 00:08:45.400
Finally, what we're really
excited about is the fact that

00:08:45.400 --> 00:08:48.510
we're making this platform more
accessible to creators.

00:08:48.510 --> 00:08:51.370
Yesterday, we announced that
anyone on YouTube with over

00:08:51.370 --> 00:08:55.220
1,000 subscribers can
now stream live.

00:08:55.220 --> 00:08:57.980
We think this will make this
platform even more valuable to

00:08:57.980 --> 00:08:58.850
develop for.

00:08:58.850 --> 00:09:01.710
And we're really excited about
both what the creator

00:09:01.710 --> 00:09:04.590
community can do as well is how
you can take advantage of

00:09:04.590 --> 00:09:07.380
this as developers.

00:09:07.380 --> 00:09:09.890
With that, Ibrahim do you want
to tell them about the API?

00:09:09.890 --> 00:09:12.740
IBRAHIM ULUKAYA: Sure.

00:09:12.740 --> 00:09:14.360
So I'm Ibrahim Ulukaya,
developer

00:09:14.360 --> 00:09:16.300
programs engineer at YouTube.

00:09:16.300 --> 00:09:19.750
Today, I will actually give an
overview of the API itself.

00:09:19.750 --> 00:09:21.700
Then I will try to suggest
the settings

00:09:21.700 --> 00:09:23.520
for the live streaming.

00:09:23.520 --> 00:09:26.660
And we'll go over a little bit
on the Java sample code.

00:09:26.660 --> 00:09:29.040
At the end, we will see an
Android demo actually.

00:09:29.040 --> 00:09:32.180
We will see it live since
we are talking live.

00:09:32.180 --> 00:09:34.200
So let's get it started.

00:09:34.200 --> 00:09:36.080
YouTube live streaming API.

00:09:36.080 --> 00:09:38.760
With the live streaming API,
you can actually schedule

00:09:38.760 --> 00:09:42.360
updates and manage your live
events on YouTube.

00:09:42.360 --> 00:09:45.950
You can instantiate your own
streams and make them happen

00:09:45.950 --> 00:09:47.800
inside these events.

00:09:47.800 --> 00:09:51.870
If you're a YouTube content
partner, you can also insert

00:09:51.870 --> 00:09:53.120
advertisements.

00:09:55.150 --> 00:09:57.980
I want to talk right now a
little bit about the concepts.

00:09:57.980 --> 00:10:01.490
The first concept I want to talk
today is the broadcast.

00:10:01.490 --> 00:10:03.750
Think about the broadcast
as a calendar event like

00:10:03.750 --> 00:10:06.430
a show, like news.

00:10:06.430 --> 00:10:08.770
They're scheduled for
some time, and it's

00:10:08.770 --> 00:10:11.000
like an event container.

00:10:11.000 --> 00:10:14.420
And when you go to YouTube/live,
you will see

00:10:14.420 --> 00:10:15.150
this image.

00:10:15.150 --> 00:10:20.070
You will see the events that are
either happening right now

00:10:20.070 --> 00:10:24.060
or they are scheduled for
some future time.

00:10:24.060 --> 00:10:26.316
The second concept
is a stream.

00:10:26.316 --> 00:10:28.730
A stream is what we are
sending to YouTube.

00:10:28.730 --> 00:10:32.100
It is your entry point
to those events.

00:10:32.100 --> 00:10:35.610
So I want to differentiate
those two.

00:10:35.610 --> 00:10:38.320
The broadcast is the event--

00:10:38.320 --> 00:10:41.640
the event that was scheduled
for some specific time.

00:10:41.640 --> 00:10:44.480
And the stream is your
own content, the

00:10:44.480 --> 00:10:45.730
entry point to YouTube.

00:10:48.280 --> 00:10:51.730
So this actually covers those,
broadcast was the event, the

00:10:51.730 --> 00:10:54.810
event metadata, and the
stream was the live

00:10:54.810 --> 00:10:57.380
streaming your content.

00:10:57.380 --> 00:11:01.810
The reason we separated
together, we want you to have

00:11:01.810 --> 00:11:05.230
flexibility so that you can
have multiple streams.

00:11:05.230 --> 00:11:07.460
You can't switch in and out
those streams for the

00:11:07.460 --> 00:11:09.400
broadcast event itself.

00:11:09.400 --> 00:11:13.380
And if you are maybe having your
own streams, and you use

00:11:13.380 --> 00:11:15.990
that stream, you may want to
use the same stream, same

00:11:15.990 --> 00:11:19.560
ingestion settings,
to another event.

00:11:19.560 --> 00:11:23.770
So we make it flexible that
we separated those two.

00:11:23.770 --> 00:11:27.120
And last but not least,
the cuepoint.

00:11:27.120 --> 00:11:29.610
Cuepoint is in-stream ads.

00:11:29.610 --> 00:11:31.000
They are built on
the partner API.

00:11:31.000 --> 00:11:34.330
If you are a YouTube content
partner, you'll be also able

00:11:34.330 --> 00:11:35.580
to insert advertisement.

00:11:38.360 --> 00:11:40.640
So how do they play
with each other?

00:11:40.640 --> 00:11:42.720
As I said, the broadcast
is the event.

00:11:42.720 --> 00:11:45.180
And when you want
your stream--

00:11:45.180 --> 00:11:47.970
your content to appear in the
event, you are just binding

00:11:47.970 --> 00:11:49.930
them together.

00:11:49.930 --> 00:11:52.310
And when you want to insert
an advertisement, you are

00:11:52.310 --> 00:11:54.535
inserting the advertisement
to the event.

00:11:54.535 --> 00:11:58.710
When you combine this stream to
the broadcast, your stream

00:11:58.710 --> 00:12:00.190
happens to be in
this broadcast.

00:12:00.190 --> 00:12:02.340
It streams inside this event.

00:12:02.340 --> 00:12:04.710
When you want another stream,
you can't connect them.

00:12:04.710 --> 00:12:08.370
There's always one-to-one
mapping.

00:12:08.370 --> 00:12:11.420
Right, now I want to deep
dive on these concepts.

00:12:11.420 --> 00:12:14.170
So the broadcast is a metadata,
as I explained.

00:12:14.170 --> 00:12:17.210
It has a title, description,
scheduled time.

00:12:17.210 --> 00:12:21.650
You can make it a private
or a public event.

00:12:21.650 --> 00:12:24.370
With the new platform, you can
actually enable recording.

00:12:24.370 --> 00:12:28.510
So if the users didn't see your
live stream, they may go

00:12:28.510 --> 00:12:31.460
to YouTube and still see
the video later on.

00:12:31.460 --> 00:12:34.980
And you can enable them to use
DVR settings such that they

00:12:34.980 --> 00:12:38.670
can go back and forth
inside the video.

00:12:38.670 --> 00:12:40.510
This was scheduling the event.

00:12:40.510 --> 00:12:43.700
And what about managing
the event live cycle?

00:12:43.700 --> 00:12:46.040
So when you first created
the event, you start

00:12:46.040 --> 00:12:49.290
as a creative slate.

00:12:49.290 --> 00:12:51.780
And when you bind them together
and it's ready to

00:12:51.780 --> 00:12:53.540
start, we are in the
ready state.

00:12:53.540 --> 00:12:58.360
So users see that your event
will start soon.

00:12:58.360 --> 00:13:02.070
And as an optional state,
you can go to preview.

00:13:02.070 --> 00:13:05.760
So this is a really good state
that actually before your

00:13:05.760 --> 00:13:08.500
event goes to live, you can
monitor your stream.

00:13:08.500 --> 00:13:12.715
We send you another monitor URL
that you can go there and

00:13:12.715 --> 00:13:16.870
you can see your stream
before it goes public.

00:13:16.870 --> 00:13:20.800
And when you are ready
to go, magic happens.

00:13:20.800 --> 00:13:22.650
It goes street live.

00:13:22.650 --> 00:13:26.010
And every good thing needs to
end at some point, so when you

00:13:26.010 --> 00:13:30.090
want to complete this, you just
go to complete cycle.

00:13:30.090 --> 00:13:32.240
What about the stream?

00:13:32.240 --> 00:13:33.430
Stream was your entry point.

00:13:33.430 --> 00:13:37.380
It is where your streamer
talks to YouTube.

00:13:37.380 --> 00:13:39.380
So you create this
entry point.

00:13:39.380 --> 00:13:42.760
You set a name for yourself
so you can remember.

00:13:42.760 --> 00:13:46.050
And then you set the highest
bitrate you want to support.

00:13:46.050 --> 00:13:49.520
You set the highest resolution
you want to support.

00:13:49.520 --> 00:13:52.680
And one thing really important
about the stream is that entry

00:13:52.680 --> 00:13:56.140
point, once you create this,
you are actually getting a

00:13:56.140 --> 00:14:01.490
RTMP URL and stream name so
that you know where is the

00:14:01.490 --> 00:14:04.430
point you will talk
to access these

00:14:04.430 --> 00:14:07.490
streams, send your streamer.

00:14:07.490 --> 00:14:10.770
And the latest one
is the cuepoint.

00:14:10.770 --> 00:14:14.220
As I explained, it was
the in-stream ad.

00:14:14.220 --> 00:14:18.710
So you're setting the in-stream
ad to start and how

00:14:18.710 --> 00:14:20.980
long it will be.

00:14:20.980 --> 00:14:22.190
Let's remember how
they interact

00:14:22.190 --> 00:14:23.480
with each other again.

00:14:23.480 --> 00:14:27.220
And your stream is bound to
the broadcast so that your

00:14:27.220 --> 00:14:28.950
stream happens to be
in this event.

00:14:28.950 --> 00:14:32.190
And once you want to insert
advertisements if you're a

00:14:32.190 --> 00:14:36.340
content partner, you are
using the insert.

00:14:36.340 --> 00:14:38.880
So how many people used
live streaming

00:14:38.880 --> 00:14:41.590
before in any channel?

00:14:41.590 --> 00:14:42.720
OK, I see a few.

00:14:42.720 --> 00:14:45.930
And how many people use encoding
and decoding, maybe

00:14:45.930 --> 00:14:47.790
not in live streaming?

00:14:47.790 --> 00:14:48.530
OK.

00:14:48.530 --> 00:14:49.820
I see a few more.

00:14:49.820 --> 00:14:51.940
And maybe you are wondering
right now-- you saw these

00:14:51.940 --> 00:14:55.350
concepts and the API, but what
about the best live streaming

00:14:55.350 --> 00:14:58.500
settings for YouTube?

00:14:58.500 --> 00:15:00.890
So right now, with this amazing
new platform, we are

00:15:00.890 --> 00:15:04.750
supporting all the standard
bitrates, all the standard

00:15:04.750 --> 00:15:08.040
resolutions from 240p
up to 1080p.

00:15:08.040 --> 00:15:12.950
And a great feature about this
product is you don't need to

00:15:12.950 --> 00:15:15.960
send all these different
bitrates, all these different

00:15:15.960 --> 00:15:17.520
resolutions to YouTube.

00:15:17.520 --> 00:15:20.970
You just want to send us the
highest bitrate you want to

00:15:20.970 --> 00:15:22.280
support, the highest

00:15:22.280 --> 00:15:23.800
resolution you want to support.

00:15:23.800 --> 00:15:27.800
And from there, in real time,
we will transcode it to all

00:15:27.800 --> 00:15:28.890
lower qualities.

00:15:28.890 --> 00:15:30.870
So you are saving
the bandwidth.

00:15:30.870 --> 00:15:33.170
You are saving the
processing power.

00:15:33.170 --> 00:15:36.970
And we'll do the whole heavy
lifting for you.

00:15:36.970 --> 00:15:38.940
What about the encoder?

00:15:38.940 --> 00:15:42.140
Currently, we are supporting
the RTMP flash streaming.

00:15:42.140 --> 00:15:44.900
And you want to use
the H.264 video.

00:15:44.900 --> 00:15:49.680
And for older codecs, we
are supporting the AAC.

00:15:49.680 --> 00:15:52.250
Similar to what I explained
earlier, as we transcode to

00:15:52.250 --> 00:15:55.100
lower bitrates, we also
transcode to different

00:15:55.100 --> 00:15:58.180
containers and different
qualities so that people

00:15:58.180 --> 00:16:02.770
coming from iOS, Android, and
Google TV can also see your

00:16:02.770 --> 00:16:03.830
stream as well.

00:16:03.830 --> 00:16:06.720
So you don't need to think about
how you will change your

00:16:06.720 --> 00:16:08.370
stream into those different
settings.

00:16:08.370 --> 00:16:11.560
We will do this for you.

00:16:11.560 --> 00:16:13.910
So this was the first streaming

00:16:13.910 --> 00:16:15.750
settings and the API overview.

00:16:15.750 --> 00:16:18.250
And as you may actually have--

00:16:18.250 --> 00:16:21.250
I know there are developers in
this platform, and I want to

00:16:21.250 --> 00:16:24.710
talk about with our
other sample.

00:16:24.710 --> 00:16:27.600
All the samples I will be
talking today, they are open

00:16:27.600 --> 00:16:29.740
sourced under the YouTube
API samples.

00:16:29.740 --> 00:16:31.130
So if you are missing
one thing or

00:16:31.130 --> 00:16:32.350
two, don't be excited.

00:16:32.350 --> 00:16:33.800
They are all open sourced.

00:16:33.800 --> 00:16:37.230
You can go there and
still access them.

00:16:37.230 --> 00:16:40.380
And today I will be talking
about just the Java sample,

00:16:40.380 --> 00:16:43.720
but we support all client
libraries from Python to

00:16:43.720 --> 00:16:46.520
PHP.net to Objective-C,
many of them.

00:16:46.520 --> 00:16:49.790
And you can see what other
client libraries we support.

00:16:49.790 --> 00:16:51.400
And it's a totally
RESTful API.

00:16:51.400 --> 00:16:54.760
Even though if you don't want to
use the client library, you

00:16:54.760 --> 00:16:57.630
can just use the REST API.

00:16:57.630 --> 00:16:59.540
So the first example I
want to go through

00:16:59.540 --> 00:17:02.150
is the create broadcast.

00:17:02.150 --> 00:17:04.099
Today, I want to do
three things.

00:17:04.099 --> 00:17:09.210
I want to start creating a
broadcast, then create the

00:17:09.210 --> 00:17:10.910
stream and connect
them together.

00:17:10.910 --> 00:17:14.049
So I will have something that
is ready to live stream.

00:17:14.049 --> 00:17:16.280
Create broadcast is I will
start with setting the

00:17:16.280 --> 00:17:19.240
metadata, and then I will
set the status.

00:17:19.240 --> 00:17:22.619
And using those two, I will
create a broadcast object.

00:17:22.619 --> 00:17:25.430
And now I want to create this
broadcast object in YouTube.

00:17:25.430 --> 00:17:29.870
So I will create an Insert
request and execute it.

00:17:29.870 --> 00:17:31.300
So I will start with
the broadcast

00:17:31.300 --> 00:17:33.220
snippet, the metadata.

00:17:33.220 --> 00:17:36.200
I set it, and I created
the title.

00:17:36.200 --> 00:17:37.960
I set my scheduled time.

00:17:37.960 --> 00:17:41.270
And one thing to remember, I'm
setting today just the

00:17:41.270 --> 00:17:42.590
required parameters.

00:17:42.590 --> 00:17:46.090
There are other parameters I
explained earlier, but I'm

00:17:46.090 --> 00:17:49.300
just doing the minimal
right now.

00:17:49.300 --> 00:17:51.170
And the second was the status.

00:17:51.170 --> 00:17:52.960
With the status, for
the sake of this

00:17:52.960 --> 00:17:55.380
example, I set it to private.

00:17:55.380 --> 00:17:58.940
Using the previous, I set the
snippet and the status, I'm

00:17:58.940 --> 00:18:01.550
creating a broadcast object.

00:18:01.550 --> 00:18:05.110
Now I want to insert this
broadcast object to YouTube so

00:18:05.110 --> 00:18:07.750
it will appear in YouTube too.

00:18:07.750 --> 00:18:10.070
So I create that
insert request.

00:18:10.070 --> 00:18:12.640
And using the client library,
I have the live broadcast

00:18:12.640 --> 00:18:16.840
insert request, insert class.

00:18:16.840 --> 00:18:18.920
And I wrap my broadcast
object I created

00:18:18.920 --> 00:18:22.070
earlier inside this request.

00:18:22.070 --> 00:18:23.740
And I executed it.

00:18:23.740 --> 00:18:25.830
And I explained, it
was a RESTful API.

00:18:25.830 --> 00:18:29.950
If everything got successfully
by the client library, the

00:18:29.950 --> 00:18:33.850
JSON is passed, and I got the
return broadcast, which the

00:18:33.850 --> 00:18:36.980
broadcast actually was inserted
inside YouTube.

00:18:36.980 --> 00:18:40.030
So from then on, I can check
like everything I did was

00:18:40.030 --> 00:18:43.390
successful or not.

00:18:43.390 --> 00:18:46.050
So after you create the
broadcast, the second step was

00:18:46.050 --> 00:18:47.540
the stream.

00:18:47.540 --> 00:18:48.110
The stream will be--

00:18:48.110 --> 00:18:50.620
I will do a similar tree.

00:18:50.620 --> 00:18:52.570
I will start with
the metadata.

00:18:52.570 --> 00:18:54.760
I will set my ingestion
settings.

00:18:54.760 --> 00:18:56.480
And I will create the
stream object.

00:18:56.480 --> 00:18:59.550
At the end, I will insert
it into YouTube.

00:18:59.550 --> 00:19:01.180
So I start with the snippet.

00:19:01.180 --> 00:19:03.920
I will set the title since
this was the metadata.

00:19:03.920 --> 00:19:06.880
Then I will go over the
ingestion settings.

00:19:06.880 --> 00:19:10.160
In the ingestion settings,
as I explained, we

00:19:10.160 --> 00:19:12.310
support right now RTMP.

00:19:12.310 --> 00:19:17.040
And just for the sake of this
example, I set it at 1080p.

00:19:17.040 --> 00:19:23.500
So this one is the maximum
resolution I want to support.

00:19:23.500 --> 00:19:26.340
I will create the stream object
right now and set the

00:19:26.340 --> 00:19:29.870
snippet and the ingestion
settings I just created.

00:19:29.870 --> 00:19:33.780
Now is the time to insert
it into YouTube.

00:19:33.780 --> 00:19:36.420
So I create the insert
object again.

00:19:36.420 --> 00:19:39.180
This time it's the live
stream insert object.

00:19:39.180 --> 00:19:41.620
And I put my stream inside it.

00:19:41.620 --> 00:19:47.010
Once I executed it, I return
that the created stream is

00:19:47.010 --> 00:19:49.040
from YouTube.

00:19:49.040 --> 00:19:49.980
Something to remember.

00:19:49.980 --> 00:19:52.830
As I explained earlier, this
is your entry point to

00:19:52.830 --> 00:19:54.740
YouTube, your stream's
entry point.

00:19:54.740 --> 00:19:57.500
So once you create this stream,
you are actually

00:19:57.500 --> 00:20:00.290
getting an ingestion address,
the RTMP URL

00:20:00.290 --> 00:20:02.700
and the stream name.

00:20:02.700 --> 00:20:07.100
So using the same API, we are
actually resolving them-- the

00:20:07.100 --> 00:20:09.850
ingestion address, the stream
name, so we know where to

00:20:09.850 --> 00:20:14.180
steam, where to send
our streamer to.

00:20:14.180 --> 00:20:15.700
So we create the
stream as well.

00:20:15.700 --> 00:20:19.590
So far, we created the event,
we created the stream.

00:20:19.590 --> 00:20:21.690
Something is missing.

00:20:21.690 --> 00:20:22.750
I think it's the connection.

00:20:22.750 --> 00:20:27.430
So we want to let the stream
happen inside this event.

00:20:27.430 --> 00:20:29.690
So we will create
a bind request.

00:20:29.690 --> 00:20:32.675
We will set the broadcast
ID inside it.

00:20:32.675 --> 00:20:34.940
We will set the set stream ID.

00:20:34.940 --> 00:20:38.520
Once we execute it, if it's
successful, we will return the

00:20:38.520 --> 00:20:39.810
broadcast as well.

00:20:39.810 --> 00:20:44.020
Now we can check if the binding
is successful or not.

00:20:44.020 --> 00:20:48.240
So this was a java sample, but
I want to run it on my

00:20:48.240 --> 00:20:53.027
computer so we see that it
will be going to YouTube.

00:20:57.870 --> 00:21:02.360
So I'm using the same example
I just showed, the create

00:21:02.360 --> 00:21:03.610
broadcast example.

00:21:06.320 --> 00:21:07.580
I will run it.

00:21:07.580 --> 00:21:11.750
And I'm using the OAuth 2.0
method so that it will do this

00:21:11.750 --> 00:21:14.330
creating stream, this example,
create the stream on my

00:21:14.330 --> 00:21:15.900
account, on my behalf.

00:21:15.900 --> 00:21:19.940
So I will allow access.

00:21:19.940 --> 00:21:24.970
And once I allow access, I
will start using my demo.

00:21:24.970 --> 00:21:30.100
So just for the stream broadcast
event titled "I/O

00:21:30.100 --> 00:21:30.530
'13

00:21:30.530 --> 00:21:33.620
Event." OK.

00:21:33.620 --> 00:21:35.080
So I see that the event
is created.

00:21:35.080 --> 00:21:38.520
It's just published.

00:21:38.520 --> 00:21:39.770
I will create an
actual stream.

00:21:45.310 --> 00:21:47.500
So I just create the
stream as well.

00:21:47.500 --> 00:21:50.560
As I explained earlier, once you
create the stream, I see

00:21:50.560 --> 00:21:53.090
that I have an ingestion
address.

00:21:53.090 --> 00:21:56.100
And I have my stream name--
my unique stream name.

00:21:56.100 --> 00:22:00.740
So using those two, I know where
to stream my data into.

00:22:00.740 --> 00:22:02.830
And last thing, as I explained,

00:22:02.830 --> 00:22:05.060
now I bind them together.

00:22:05.060 --> 00:22:08.160
So the broadcast ID I created
and stream ID I created, I

00:22:08.160 --> 00:22:11.560
bind them together
so my event knows

00:22:11.560 --> 00:22:12.810
which stream to broadcast.

00:22:17.820 --> 00:22:21.860
Let's go one level down and
go to YouTube website.

00:22:21.860 --> 00:22:25.250
I am in my account as my account
is enabled for live.

00:22:25.250 --> 00:22:28.500
So I can see that I have
live events here.

00:22:28.500 --> 00:22:32.890
The event I just created, "I/O
'13 Event." And let's click on

00:22:32.890 --> 00:22:35.600
this event.

00:22:35.600 --> 00:22:38.280
And I see that it's private,
as I explained.

00:22:38.280 --> 00:22:40.830
It's scheduled ahead of time.

00:22:40.830 --> 00:22:44.370
I will go to ingestion
settings.

00:22:44.370 --> 00:22:47.780
And I see that the event I
just created, "I/O Stream

00:22:47.780 --> 00:22:49.520
Event," is here.

00:22:49.520 --> 00:22:53.440
And it is 1080p as
I just described.

00:22:53.440 --> 00:22:56.440
So this was a demo for Java.

00:22:56.440 --> 00:22:58.960
And I really want to go
one level further.

00:22:58.960 --> 00:23:02.370
And I created a small streaming
app that I will try

00:23:02.370 --> 00:23:05.330
to stream from here.

00:23:05.330 --> 00:23:06.580
Let's see.

00:23:18.430 --> 00:23:21.120
So first I will start the--

00:23:21.120 --> 00:23:22.445
let me turn this.

00:23:26.900 --> 00:23:27.900
OK.

00:23:27.900 --> 00:23:30.410
So first I will start
with sign in.

00:23:34.120 --> 00:23:36.110
I use the Google Play
account manager.

00:23:36.110 --> 00:23:38.990
So from there, my
account is here.

00:23:38.990 --> 00:23:40.900
I will just pick my account.

00:23:40.900 --> 00:23:44.080
And now I will authorize
the event.

00:23:44.080 --> 00:23:45.880
And I will create my event.

00:23:45.880 --> 00:23:49.690
So right now what's happening
is I created the event, I

00:23:49.690 --> 00:23:55.980
created my unique steam, and
then I connect them together.

00:23:55.980 --> 00:23:59.545
And as I went to the live
events, I just list them.

00:23:59.545 --> 00:24:02.460
And as you see, the one I just
created before, the "I/O '13"

00:24:02.460 --> 00:24:03.870
is over there.

00:24:03.870 --> 00:24:06.510
The one I just created right
now, it is a live streaming

00:24:06.510 --> 00:24:08.190
event here.

00:24:08.190 --> 00:24:09.880
So I'm seeing this.

00:24:09.880 --> 00:24:12.800
And I will start streaming
right now.

00:24:12.800 --> 00:24:17.370
And so it looks like I
started streaming.

00:24:17.370 --> 00:24:19.120
So let's see on the
YouTube website.

00:24:36.570 --> 00:24:38.140
And my live stream event.

00:24:38.140 --> 00:24:40.290
I will actually go to live
streaming to see what's

00:24:40.290 --> 00:24:41.540
happening here right now.

00:24:44.580 --> 00:24:45.060
Yeah.

00:24:45.060 --> 00:24:47.090
My streaming started
happening here.

00:24:47.090 --> 00:24:50.360
And from my API, I already
clicked to start streaming

00:24:50.360 --> 00:24:51.400
from the API.

00:24:51.400 --> 00:24:53.780
So I didn't have to click,
because it was already--

00:24:53.780 --> 00:24:56.130
I requested to start
the stream.

00:24:56.130 --> 00:24:59.710
And right now, our servers
are transcoding it.

00:24:59.710 --> 00:25:03.260
And in just a few seconds,
we'll go live.

00:25:03.260 --> 00:25:05.910
So let's see it.

00:25:05.910 --> 00:25:11.102
I'll go back to my account,
to my event.

00:25:11.102 --> 00:25:12.400
This time I will just click.

00:25:15.950 --> 00:25:20.220
And my event is about
to start.

00:25:20.220 --> 00:25:22.220
Just give it a few seconds.

00:25:22.220 --> 00:25:22.935
SATYAJEET SALGAR: Give it
a couple of seconds.

00:25:22.935 --> 00:25:26.770
It looks like the demo gods
are being favorable today.

00:25:26.770 --> 00:25:28.882
Can we blame the network?

00:25:28.882 --> 00:25:29.280
IBRAHIM ULUKAYA: Sorry?

00:25:29.280 --> 00:25:30.340
SATYAJEET SALGAR: Can we
blame the network?

00:25:30.340 --> 00:25:31.350
IBRAHIM ULUKAYA: Yeah,
sure, why not?

00:25:31.350 --> 00:25:31.590
SATYAJEET SALGAR: Why not?

00:25:31.590 --> 00:25:32.500
All right.

00:25:32.500 --> 00:25:34.710
Give us a couple of seconds.

00:25:34.710 --> 00:25:35.960
AUDIENCE: [INAUDIBLE]?

00:25:39.360 --> 00:25:41.190
IBRAHIM ULUKAYA: No.

00:25:41.190 --> 00:25:44.410
The question was, if I was
streaming to I/O '13 or to

00:25:44.410 --> 00:25:45.040
this event.

00:25:45.040 --> 00:25:48.770
Actually, as I just did here,
I actually seem to do a live

00:25:48.770 --> 00:25:49.730
streaming event.

00:25:49.730 --> 00:25:53.270
I/O '13 was the one I used
from my Java Eclipse.

00:25:53.270 --> 00:25:55.540
So today I showed the Eclipse.

00:25:55.540 --> 00:25:59.020
But you are free to use the
language of your choice as

00:25:59.020 --> 00:26:01.590
well as-- something
is happening.

00:26:01.590 --> 00:26:03.550
And yeah, we are live.

00:26:03.550 --> 00:26:05.258
SATYAJEET SALGAR: Yeah,
there we go.

00:26:05.258 --> 00:26:06.246
[APPLAUSE]

00:26:06.246 --> 00:26:08.630
SATYAJEET SALGAR: We should
get the audience on.

00:26:08.630 --> 00:26:11.850
IBRAHIM ULUKAYA: I didn't
want to send audio.

00:26:11.850 --> 00:26:14.310
So that was all about
my demo today.

00:26:14.310 --> 00:26:18.040
I just wanted you to see that it
was that easy to create the

00:26:18.040 --> 00:26:20.920
live event and go live.

00:26:20.920 --> 00:26:23.900
And from now on, we can start
taking questions.

00:26:23.900 --> 00:26:24.540
SATYAJEET SALGAR: We're happy
to take questions.

00:26:24.540 --> 00:26:26.100
IBRAHIM ULUKAYA: If you have a
question, fee free to go to a

00:26:26.100 --> 00:26:26.720
microphone.

00:26:26.720 --> 00:26:29.340
And we'll take live questions
as well as we will take

00:26:29.340 --> 00:26:31.630
questions from the
moderator link.

00:26:31.630 --> 00:26:33.340
SATYAJEET SALGAR: The only
question on the moderator link

00:26:33.340 --> 00:26:35.510
is, "why is Ibrahim
so awesome?" And I

00:26:35.510 --> 00:26:36.760
think I asked that.

00:26:39.680 --> 00:26:40.720
Yeah, please.

00:26:40.720 --> 00:26:42.100
AUDIENCE: So it's
all very nice.

00:26:42.100 --> 00:26:47.020
On iOS, you are presumably using
HLS as the protocol--

00:26:47.020 --> 00:26:49.960
HTTP live streaming,
right, on iOS?

00:26:49.960 --> 00:26:50.650
SATYAJEET SALGAR: Yes.

00:26:50.650 --> 00:26:51.840
IBRAHIM ULUKAYA: We
are using RTMP.

00:26:51.840 --> 00:26:53.540
AUDIENCE: Now, on Android, the
Android has had a much more

00:26:53.540 --> 00:26:55.970
tortured history of
the implementation

00:26:55.970 --> 00:26:57.673
of multimedia protocols.

00:26:57.673 --> 00:26:58.540
SATYAJEET SALGAR: I'm sorry.

00:26:58.540 --> 00:27:00.130
I missed what you said
there a little bit.

00:27:00.130 --> 00:27:01.790
AUDIENCE: On Android.

00:27:01.790 --> 00:27:05.700
On Android, are you also using
HLS, which is supported by the

00:27:05.700 --> 00:27:08.570
Chrome browser it appears, or
are you using a different

00:27:08.570 --> 00:27:12.030
protocol to stream
live to Android?

00:27:12.030 --> 00:27:15.800
IBRAHIM ULUKAYA: The question
was if we are using HLS or

00:27:15.800 --> 00:27:16.515
another protocol.

00:27:16.515 --> 00:27:17.110
AUDIENCE: On Android.

00:27:17.110 --> 00:27:18.530
IBRAHIM ULUKAYA: With Android,
we are actually using

00:27:18.530 --> 00:27:19.810
the RTMP right now.

00:27:19.810 --> 00:27:21.680
SATYAJEET SALGAR: Are you
talking about playback or the

00:27:21.680 --> 00:27:23.570
streamer from the
creator side?

00:27:23.570 --> 00:27:24.015
AUDIENCE: Playback.

00:27:24.015 --> 00:27:24.800
SATYAJEET SALGAR: Playback.

00:27:24.800 --> 00:27:25.980
Playback, HLS.

00:27:25.980 --> 00:27:27.230
AUDIENCE: HLS on Android?

00:27:29.520 --> 00:27:30.270
SATYAJEET SALGAR: I believe so.

00:27:30.270 --> 00:27:32.630
Jarek?

00:27:32.630 --> 00:27:33.640
Yep.

00:27:33.640 --> 00:27:34.121
JAREK WILKIEWICZ: Yeah.

00:27:34.121 --> 00:27:36.526
I think it's just until the
version of Android.

00:27:36.526 --> 00:27:38.450
So we do transcode
[INAUDIBLE].

00:27:38.450 --> 00:27:38.940
IBRAHIM ULUKAYA: Sorry.

00:27:38.940 --> 00:27:40.188
SATYAJEET SALGAR: Oh, sorry.

00:27:40.188 --> 00:27:42.872
JAREK WILKIEWICZ: One key
feature of this platform is it

00:27:42.872 --> 00:27:44.580
transcodes to a number
of different formats.

00:27:44.580 --> 00:27:45.830
[INAUDIBLE].

00:27:56.800 --> 00:27:57.960
SATYAJEET SALGAR: Yeah,
come on up.

00:27:57.960 --> 00:28:02.680
Oh, by the way, the answer, for
most people that didn't

00:28:02.680 --> 00:28:05.690
hear it, was we transcode to a
number of different formats.

00:28:05.690 --> 00:28:08.780
On most versions of Android, it
is HLS, on the later ones.

00:28:08.780 --> 00:28:10.660
On some, it's something
different.

00:28:10.660 --> 00:28:11.052
Yeah.

00:28:11.052 --> 00:28:16.070
AUDIENCE: Is the API open to
anyone or just open to some

00:28:16.070 --> 00:28:16.800
organizations?

00:28:16.800 --> 00:28:18.300
SATYAJEET SALGAR: The API
is open to everyone.

00:28:18.300 --> 00:28:18.690
AUDIENCE: Anyone?

00:28:18.690 --> 00:28:21.550
SATYAJEET SALGAR: It's
public, and it's--

00:28:21.550 --> 00:28:23.395
yeah, it's public, and
it's open right now.

00:28:23.395 --> 00:28:23.770
AUDIENCE: OK.

00:28:23.770 --> 00:28:28.970
So if I create a mobile app to
anyone so they had to log into

00:28:28.970 --> 00:28:32.940
their account to allow
them [INAUDIBLE]?

00:28:35.580 --> 00:28:37.530
SATYAJEET SALGAR: Yeah,
so anyone can develop

00:28:37.530 --> 00:28:39.020
using the Live API.

00:28:39.020 --> 00:28:42.700
The constraint we have right now
is you need at least 1,000

00:28:42.700 --> 00:28:46.430
subscribers before you can
stream into your account.

00:28:46.430 --> 00:28:47.600
That's something we're
working on.

00:28:47.600 --> 00:28:49.460
We're working on expanding
live access.

00:28:49.460 --> 00:28:52.480
But the constraint right now
is the person whose account

00:28:52.480 --> 00:28:55.380
you're streaming to needs to
have a certain number of

00:28:55.380 --> 00:28:57.926
subscribers and be in good
standing as a YouTube account.

00:28:57.926 --> 00:29:01.410
AUDIENCE: OK, then that's
also my next question.

00:29:01.410 --> 00:29:04.490
What's the limitation to
use the API, then?

00:29:04.490 --> 00:29:05.130
SATYAJEET SALGAR: Sorry?

00:29:05.130 --> 00:29:08.030
AUDIENCE: What's the limitation
to use the API?

00:29:08.030 --> 00:29:09.240
SATYAJEET SALGAR: Anyone
can use the API.

00:29:09.240 --> 00:29:12.500
So if you're developing tools
to live stream to YouTube.

00:29:12.500 --> 00:29:15.490
The API is public.

00:29:15.490 --> 00:29:17.810
There's no-- other than
the developer key.

00:29:17.810 --> 00:29:20.110
IBRAHIM ULUKAYA: No, the API is
all public as well as the

00:29:20.110 --> 00:29:21.520
documentation.

00:29:21.520 --> 00:29:25.480
The only thing that we are
constrained about is the

00:29:25.480 --> 00:29:27.660
channel that you will
be live streaming.

00:29:27.660 --> 00:29:30.790
So if you have a test channel,
or if you use one channel to

00:29:30.790 --> 00:29:33.320
use the API, you can
always use the API.

00:29:33.320 --> 00:29:35.990
But once you start
live steaming--

00:29:35.990 --> 00:29:40.090
At the end, when you develop
your product and your product

00:29:40.090 --> 00:29:43.330
is ready, the people who will
use the product will need a

00:29:43.330 --> 00:29:45.950
channel that they will actually
send their live

00:29:45.950 --> 00:29:47.055
streams into.

00:29:47.055 --> 00:29:48.010
AUDIENCE: Oh, OK.

00:29:48.010 --> 00:29:49.505
They need a channel.

00:29:49.505 --> 00:29:56.280
But how do you screen the
content of the live stream?

00:29:56.280 --> 00:29:58.560
SATYAJEET SALGAR: So how
do we manage content?

00:29:58.560 --> 00:30:01.750
AUDIENCE: For example, if you
stream something that should

00:30:01.750 --> 00:30:03.290
not be public, how do
you detect that?

00:30:03.290 --> 00:30:04.400
How do you prevent it?

00:30:04.400 --> 00:30:05.560
SATYAJEET SALGAR: Aha, you're
worried about spam.

00:30:05.560 --> 00:30:06.690
AUDIENCE: Yeah.

00:30:06.690 --> 00:30:08.650
SATYAJEET SALGAR: So we have--
this is something that we've

00:30:08.650 --> 00:30:10.780
invested a lot of time and
effort in at YouTube.

00:30:10.780 --> 00:30:16.170
So all the mechanisms that
protect content on YouTube in

00:30:16.170 --> 00:30:18.510
general for video also apply
to live streams.

00:30:18.510 --> 00:30:21.020
So people can flag the stream,
and it goes down.

00:30:21.020 --> 00:30:23.700
We have a tool called content
ID, which screens for

00:30:23.700 --> 00:30:25.100
infringing content.

00:30:25.100 --> 00:30:27.030
That's run against live
streams as well.

00:30:33.200 --> 00:30:34.450
Anything else?

00:30:36.612 --> 00:30:37.430
All right.

00:30:37.430 --> 00:30:38.300
It's a shy audience.

00:30:38.300 --> 00:30:39.760
Thank you very much for
listening to our talk.

00:30:39.760 --> 00:30:40.595
Thank you for listening
online.

00:30:40.595 --> 00:30:41.220
IBRAHIM ULUKAYA: Thanks,
everyone.

00:30:41.220 --> 00:30:42.840
SATYAJEET SALGAR: Ibrahim and
I are hanging out here.

00:30:42.840 --> 00:30:44.590
Feel free to come up
and ask questions.

00:30:44.590 --> 00:30:45.910
IBRAHIM ULUKAYA: If you have any
other questions, we will

00:30:45.910 --> 00:30:48.490
be in the sandbox area all
day, as well as the other

00:30:48.490 --> 00:30:49.060
YouTube experts.

00:30:49.060 --> 00:30:51.040
So you can always come and ask
other questions there.

00:30:51.040 --> 00:30:52.540
We will follow up
on everything.

00:30:52.540 --> 00:30:53.440
Thanks.

00:30:53.440 --> 00:30:54.690
SATYAJEET SALGAR: Thank you.

