WEBVTT
Kind: captions
Language: en

00:00:00.025 --> 00:00:04.313
Instancing is the idea that a single geometric set of triangles can be reused

00:00:04.313 --> 00:00:08.300
again and again. For example, for a lamp, you might have a single piece of

00:00:08.300 --> 00:00:12.795
geometry for a bulb fixture. If you want three bulb fixtures, you then set up

00:00:12.795 --> 00:00:17.745
transforms for where the objects go but reuse the same set of triangles for each

00:00:17.745 --> 00:00:22.644
one. In three.js a mesh of triangles is called its geometry. Though you often

00:00:22.644 --> 00:00:27.216
hear it called no objects mesh, a mesh in three.js, is a type of object. This is

00:00:27.216 --> 00:00:31.887
easy enough to do in three.js. If the geometry doesn't change, just reuse it.

00:00:31.888 --> 00:00:36.524
Here's a simple example. I create the geometry for a cylinder, and then reuse it

00:00:36.524 --> 00:00:40.718
again and again for each mesh object that I make. Note that an object is made

00:00:40.718 --> 00:00:45.254
from some geometry and a material. This means I could've given each cylinder a

00:00:45.254 --> 00:00:49.770
different material while we're using the same geometry. Say, I have a car model

00:00:49.770 --> 00:00:54.398
with 4 tires. The question to you is, which of these are valid reasons for using

00:00:54.398 --> 00:00:58.914
instancing for tires? It allows an individual tire to be shown as our of air and

00:00:58.914 --> 00:01:03.064
flat. It reduces the number of transforms needed. It can use less memory. It

00:01:03.064 --> 00:01:07.503
allows some tires to be drawn with less geometry than others.

