WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:09.300
[MUSIC PLAYING]

00:00:09.300 --> 00:00:10.260
Splines.

00:00:10.260 --> 00:00:12.220
Splines are great.

00:00:12.220 --> 00:00:16.079
Splines can make your
animations smooth and elegant.

00:00:16.079 --> 00:00:19.920
Splines can make
your fonts curvy.

00:00:19.920 --> 00:00:24.630
And splines can make
your data compact.

00:00:24.630 --> 00:00:26.370
It's as easy as
connecting the dots.

00:00:26.370 --> 00:00:28.580
That's all a spline
is, a nice curve

00:00:28.580 --> 00:00:30.300
that connects points together.

00:00:30.300 --> 00:00:33.297
Just like this.

00:00:33.297 --> 00:00:35.130
There's a lot of different
kinds of splines.

00:00:35.130 --> 00:00:37.870
Most of the time, we
use Bezier splines.

00:00:37.870 --> 00:00:38.920
These guys are friendly.

00:00:38.920 --> 00:00:40.085
They listen to you.

00:00:40.085 --> 00:00:40.960
They do what you ask.

00:00:40.960 --> 00:00:43.350
And they don't do
anything unpredictable.

00:00:43.350 --> 00:00:47.830
In mathematical terms, we
say they are well-behaved.

00:00:47.830 --> 00:00:50.190
But today, I'm going to
talk about cubic splines.

00:00:50.190 --> 00:00:51.990
Cubic splines are cruel.

00:00:51.990 --> 00:00:54.400
They are the
rebellious teenagers

00:00:54.400 --> 00:00:55.670
of the spline community.

00:00:55.670 --> 00:00:57.716
When you're not telling
them exactly what to do,

00:00:57.716 --> 00:00:59.340
they'll do whatever
the heck they want.

00:00:59.340 --> 00:01:03.140
For example, here we
like a nice, smooth curve

00:01:03.140 --> 00:01:06.380
between these two points,
like the red line.

00:01:06.380 --> 00:01:08.500
But the rebellious
cubic teenager

00:01:08.500 --> 00:01:11.840
decides to overshoot the target
and give us the blue line

00:01:11.840 --> 00:01:12.980
instead.

00:01:12.980 --> 00:01:15.580
This curve fits our
points mathematically,

00:01:15.580 --> 00:01:17.484
but it's not at all we want.

00:01:17.484 --> 00:01:19.900
So why the heck don't we just
stick with Bezier's splines?

00:01:19.900 --> 00:01:21.390
Look how friendly this guy is.

00:01:21.390 --> 00:01:23.032
He's so nice to work with.

00:01:25.680 --> 00:01:28.070
The problem is he's slow.

00:01:28.070 --> 00:01:31.300
Bezier's define a curve
in two-dimensional space.

00:01:31.300 --> 00:01:33.870
If we want the y value
for a given x value,

00:01:33.870 --> 00:01:37.250
for instance, we have to
search along the curve

00:01:37.250 --> 00:01:38.970
until we find that exact point.

00:01:38.970 --> 00:01:40.120
The searching takes time.

00:01:43.330 --> 00:01:46.550
So today, I'm going to
talk about how we can make

00:01:46.550 --> 00:01:48.730
cubic splines well-behaved.

00:01:48.730 --> 00:01:50.810
Because, you know, with
some guidance, teenagers,

00:01:50.810 --> 00:01:52.702
they can be great, too.

00:01:52.702 --> 00:01:53.410
And they're fast.

00:01:53.410 --> 00:01:54.900
I mean, the guy's
got a skateboard.

00:01:57.720 --> 00:01:59.820
And you're thinking,
hey, big deal.

00:01:59.820 --> 00:02:02.060
Data interpolation is
something I never think about.

00:02:02.060 --> 00:02:02.920
We have it.

00:02:02.920 --> 00:02:03.930
It already works.

00:02:03.930 --> 00:02:05.420
But this can be huge for you.

00:02:05.420 --> 00:02:08.759
Data interpolation is
something that's fundamental.

00:02:08.759 --> 00:02:11.350
And if you make a
fundamental thing fast,

00:02:11.350 --> 00:02:12.750
you open a lot of new doors.

00:02:12.750 --> 00:02:15.430
You can process thousands
instead of dozens.

00:02:15.430 --> 00:02:19.330
Or your program can be
snappy instead of clunky.

00:02:19.330 --> 00:02:21.680
So let's jump right into it.

00:02:21.680 --> 00:02:23.910
You might remember
cubics from high school.

00:02:23.910 --> 00:02:26.350
You have something like
this, an x and a y.

00:02:26.350 --> 00:02:28.600
And they're two variables.

00:02:28.600 --> 00:02:30.700
And they make a nice curve.

00:02:30.700 --> 00:02:31.807
Pretty simple.

00:02:31.807 --> 00:02:33.140
But I know what you're thinking.

00:02:33.140 --> 00:02:33.645
Oh, my god.

00:02:33.645 --> 00:02:35.895
This is a guy who's going
to start talking about math.

00:02:35.895 --> 00:02:37.160
I hate math.

00:02:37.160 --> 00:02:37.660
Yeah, true.

00:02:37.660 --> 00:02:38.030
Listen.

00:02:38.030 --> 00:02:38.530
OK.

00:02:38.530 --> 00:02:41.200
I could have talked about
espresso or something

00:02:41.200 --> 00:02:44.130
more immediately
relevant to your job.

00:02:44.130 --> 00:02:47.690
But this is useful,
and I'll keep it light.

00:02:47.690 --> 00:02:50.510
Some people even like
this stuff, you know.

00:02:50.510 --> 00:02:51.590
So back to cubics.

00:02:51.590 --> 00:02:55.170
We have four coefficients,
a, b, c, and d.

00:02:55.170 --> 00:02:57.340
And you can use these
coefficients to set

00:02:57.340 --> 00:02:59.350
four things in your curve.

00:02:59.350 --> 00:03:03.620
We use them to set the start
and end values and slopes.

00:03:03.620 --> 00:03:05.705
Four things to set,
four coefficients.

00:03:05.705 --> 00:03:08.770
It all works out.

00:03:08.770 --> 00:03:11.410
Now, if you write the
equation like this,

00:03:11.410 --> 00:03:16.890
you can see it only takes
three multiply-add instructions

00:03:16.890 --> 00:03:18.330
to evaluate a cubic.

00:03:18.330 --> 00:03:20.410
So cubics are very
fast to evaluate.

00:03:20.410 --> 00:03:22.030
One, two, three instructions.

00:03:22.030 --> 00:03:24.350
That's pretty darn quick.

00:03:24.350 --> 00:03:26.355
But how do we
solve this problem?

00:03:29.090 --> 00:03:32.850
Well, we can just stick an extra
control point in the middle.

00:03:32.850 --> 00:03:35.010
That's essentially
what dual cubics are.

00:03:35.010 --> 00:03:36.070
It's pretty simple.

00:03:36.070 --> 00:03:37.540
So what's the big idea then?

00:03:37.540 --> 00:03:39.290
Well, the idea is
in the details.

00:03:39.290 --> 00:03:41.610
Where should that
control point go?

00:03:41.610 --> 00:03:45.160
And what should the
value and slope be?

00:03:45.160 --> 00:03:47.420
Dual cubics provide
some formulas

00:03:47.420 --> 00:03:49.200
that answer these questions.

00:03:49.200 --> 00:03:51.800
These formulas allow you
to automatically insert

00:03:51.800 --> 00:03:54.040
intermediate
points, one required

00:03:54.040 --> 00:03:55.530
to keep the cubics well-behaved.

00:03:58.690 --> 00:04:02.430
Also, since we have
two cubics, we now

00:04:02.430 --> 00:04:05.226
have eight coefficients
to work with.

00:04:05.226 --> 00:04:06.600
We need two of
those coefficients

00:04:06.600 --> 00:04:08.180
to set the midpoint.

00:04:08.180 --> 00:04:11.590
But with the other two, we
can set the start and end

00:04:11.590 --> 00:04:12.660
curvature.

00:04:12.660 --> 00:04:14.580
So by curvature, I mean
the second derivative.

00:04:14.580 --> 00:04:15.940
And this is important.

00:04:15.940 --> 00:04:19.529
With curvature, you can get
a lot more variety of shapes

00:04:19.529 --> 00:04:22.010
from your cubics.

00:04:22.010 --> 00:04:24.510
For example, in this
example here, we

00:04:24.510 --> 00:04:27.270
have the swift out
curve, which has

00:04:27.270 --> 00:04:29.350
a very sharp
curvature at the start

00:04:29.350 --> 00:04:32.580
and a smooth
curvature at the end.

00:04:32.580 --> 00:04:35.110
On the surface, it's very
similar to the basic ease

00:04:35.110 --> 00:04:35.890
curve.

00:04:35.890 --> 00:04:39.370
But the curvature makes the
motion feel very different.

00:04:39.370 --> 00:04:42.830
So to summarize, dual cubics
are a fast alternative

00:04:42.830 --> 00:04:44.190
to Bezier splines.

00:04:44.190 --> 00:04:45.640
They're fairly well-behaved.

00:04:45.640 --> 00:04:47.460
And they let you
set the curvature

00:04:47.460 --> 00:04:50.890
at the control points.

00:04:50.890 --> 00:04:52.309
If you're still
interested in this

00:04:52.309 --> 00:04:54.100
and you want to check
out the math further,

00:04:54.100 --> 00:04:56.850
there's a white paper
online at this address.

00:04:56.850 --> 00:04:59.590
The math uses nothing more
than high school calculus,

00:04:59.590 --> 00:05:01.410
so it's pretty straightforward.

00:05:01.410 --> 00:05:02.660
I hope you find this useful.

00:05:02.660 --> 00:05:03.868
Thanks for listening.

00:05:03.868 --> 00:05:06.736
[APPLAUSE]

00:05:06.736 --> 00:05:10.860
[MUSIC PLAYING]

