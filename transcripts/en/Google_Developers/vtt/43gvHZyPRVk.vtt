WEBVTT
Kind: captions
Language: en

00:00:00.210 --> 00:00:01.000
Hi.

00:00:01.000 --> 00:00:04.000
Please join me for a quick
tour of Google Compute Engine.

00:00:04.000 --> 00:00:06.686
Our vision is to help
you run your applications

00:00:06.686 --> 00:00:08.060
on the same
infrastructure we use

00:00:08.060 --> 00:00:10.290
for hosting Google's
applications.

00:00:10.290 --> 00:00:12.220
And Compute Engine
is three things.

00:00:12.220 --> 00:00:13.650
It's virtual machines.

00:00:13.650 --> 00:00:14.650
It's networking.

00:00:14.650 --> 00:00:16.050
And it's disks.

00:00:16.050 --> 00:00:17.550
So you start with a project.

00:00:17.550 --> 00:00:20.810
And it's an administrative
grouping of Google's APIs.

00:00:20.810 --> 00:00:22.590
And we have a lot
of APIs, including

00:00:22.590 --> 00:00:25.260
other services for
compute and storage.

00:00:25.260 --> 00:00:27.720
But right now, we're going
to focus on Compute Engine.

00:00:27.720 --> 00:00:29.620
And here, we can
think of the project

00:00:29.620 --> 00:00:33.710
as your virtual private cluster
to use for whatever you need.

00:00:33.710 --> 00:00:35.970
Inside the project, we
have virtual machines,

00:00:35.970 --> 00:00:37.540
we have networks,
and we have disks.

00:00:37.540 --> 00:00:40.370
So the network-- and the
network is Google's network.

00:00:40.370 --> 00:00:43.210
It's the same network we use
to serve all of our products,

00:00:43.210 --> 00:00:45.650
and we work very hard to get
traffic from the internet

00:00:45.650 --> 00:00:47.350
onto our dedicated
infrastructure

00:00:47.350 --> 00:00:48.810
and get it to your
virtual machines

00:00:48.810 --> 00:00:50.950
as quickly as possible.

00:00:50.950 --> 00:00:54.122
And your part of this network
is private to your project.

00:00:54.122 --> 00:00:56.580
All of your virtual machines
can see each other on the same

00:00:56.580 --> 00:00:58.980
network, but nobody else
can see your project,

00:00:58.980 --> 00:01:01.280
and you can't see anyone else's.

00:01:01.280 --> 00:01:03.310
We work hard to
make it easy to use,

00:01:03.310 --> 00:01:05.840
including a DNS server
that maps the names

00:01:05.840 --> 00:01:08.470
of your virtual machines to
their internal IP addresses,

00:01:08.470 --> 00:01:12.130
making it easy to configure
and connect to other machines.

00:01:12.130 --> 00:01:14.940
The Compute Engine Load Balancer
is Google's network level

00:01:14.940 --> 00:01:17.670
distributed load balancer,
bringing packets directly

00:01:17.670 --> 00:01:18.930
to your virtual machines.

00:01:18.930 --> 00:01:20.638
So you've got a pool
of virtual machines,

00:01:20.638 --> 00:01:22.850
and Google's infrastructure
balances the load

00:01:22.850 --> 00:01:24.530
to all of those machines.

00:01:24.530 --> 00:01:26.160
We published a
blog post recently

00:01:26.160 --> 00:01:29.540
with details of scaling the Load
Balancer to one million queries

00:01:29.540 --> 00:01:33.190
per second, without any
advance warning or pre-warming.

00:01:33.190 --> 00:01:36.120
And it only hits virtual
machines that are healthy.

00:01:36.120 --> 00:01:38.900
And you get to define
for your application

00:01:38.900 --> 00:01:41.224
exactly what healthy means.

00:01:41.224 --> 00:01:42.140
So we've got networks.

00:01:42.140 --> 00:01:44.370
We've got load balance
traffic on those networks.

00:01:44.370 --> 00:01:46.370
And next up, we have
virtual machines.

00:01:46.370 --> 00:01:48.190
And virtual machines
are literally

00:01:48.190 --> 00:01:50.430
the core of Compute Engine.

00:01:50.430 --> 00:01:52.070
When creating a
virtual machine, you

00:01:52.070 --> 00:01:56.114
choose what balance of CPU to
RAM is right for your needs.

00:01:56.114 --> 00:01:57.530
And these virtual
machines are all

00:01:57.530 --> 00:01:59.870
running on Google's
infrastructure in the same data

00:01:59.870 --> 00:02:02.380
centers we use for our products.

00:02:02.380 --> 00:02:05.410
We work very hard to keep the
underlying machines up to date.

00:02:05.410 --> 00:02:06.870
They get software updates.

00:02:06.870 --> 00:02:10.250
Hardware gets replaced when it
needs to-- that sort of thing.

00:02:10.250 --> 00:02:11.670
These virtual
machines are billed

00:02:11.670 --> 00:02:14.000
by the minute with
a 10-minute minimum.

00:02:14.000 --> 00:02:16.580
So you can use them in a
wide variety of situations

00:02:16.580 --> 00:02:19.080
that just wouldn't be possible
if the billing intervals were

00:02:19.080 --> 00:02:20.060
longer.

00:02:20.060 --> 00:02:23.090
All of these instances boot
off of Persistent Disk,

00:02:23.090 --> 00:02:25.530
which is a logical block
storage device that's

00:02:25.530 --> 00:02:27.220
spread out in the data centers.

00:02:27.220 --> 00:02:30.360
And it's been designed for high
performance and very consistent

00:02:30.360 --> 00:02:31.629
I/O latency.

00:02:31.629 --> 00:02:33.670
If you already have a
database you're happy with,

00:02:33.670 --> 00:02:37.040
this is a great place to host it
and any other latency-sensitive

00:02:37.040 --> 00:02:38.762
workloads you have.

00:02:38.762 --> 00:02:40.720
Your virtual machines
get that high performance

00:02:40.720 --> 00:02:43.900
and consistent I/O latency
because the infrastructure

00:02:43.900 --> 00:02:46.960
is distributing the underlying
blocks across hundreds

00:02:46.960 --> 00:02:49.320
or thousands of machines,
optimizing the reads

00:02:49.320 --> 00:02:51.970
and writes to give
excellent performance.

00:02:51.970 --> 00:02:53.870
And did I mention the
consistent I/O latency?

00:02:53.870 --> 00:02:57.250
We strive to make it work at
the same speed all the time.

00:02:57.250 --> 00:02:59.390
Workloads should perform
the same from day to day,

00:02:59.390 --> 00:03:01.600
from machine to machine.

00:03:01.600 --> 00:03:03.590
And I don't know about
you, but I really

00:03:03.590 --> 00:03:05.190
like sleeping through the night.

00:03:05.190 --> 00:03:07.660
So the key to that
is automation.

00:03:07.660 --> 00:03:10.540
We've all got this virtual
machines and hardware,

00:03:10.540 --> 00:03:12.400
so let's take advantage
of that fact--

00:03:12.400 --> 00:03:15.969
the fact that it's virtual-- by
automating everything we can.

00:03:15.969 --> 00:03:17.510
So we've got tools
to help, and we've

00:03:17.510 --> 00:03:19.630
partnered with several
excellent groups

00:03:19.630 --> 00:03:21.690
to offer services for
scaling and managing

00:03:21.690 --> 00:03:22.590
your infrastructure.

00:03:22.590 --> 00:03:25.400
We've also created plug-ins for
a wide variety of open source

00:03:25.400 --> 00:03:27.340
management tools.

00:03:27.340 --> 00:03:30.600
All of this access, all the
access to Compute Engine,

00:03:30.600 --> 00:03:33.600
is via our HTTP and JSON API.

00:03:33.600 --> 00:03:34.810
Everything I just mentioned.

00:03:34.810 --> 00:03:38.100
Also our command line tools
and our developer console,

00:03:38.100 --> 00:03:39.670
built on the same API.

00:03:39.670 --> 00:03:42.030
This means your code
has the same access

00:03:42.030 --> 00:03:45.080
to all the features of
Google Compute Engine.

00:03:45.080 --> 00:03:47.390
And now you know the
fundamentals of Compute Engine.

00:03:47.390 --> 00:03:49.627
We have a lot more details
in the documentation.

00:03:49.627 --> 00:03:50.460
Thanks for watching.

00:03:50.460 --> 00:03:52.876
And we're really looking forward
to seeing what you build.

00:03:52.876 --> 00:03:54.120
Happy computing.

