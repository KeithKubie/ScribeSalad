WEBVTT
Kind: captions
Language: en

00:00:00.520 --> 00:00:01.020
Hello.

00:00:01.020 --> 00:00:02.540
My name is Arun
Nagarajan and I'm

00:00:02.540 --> 00:00:04.400
a developer advocate at Google.

00:00:04.400 --> 00:00:07.790
Today we'll talk about building
iOS apps with Google APIs.

00:00:07.790 --> 00:00:10.280
Did you know that Google's
one of the top application

00:00:10.280 --> 00:00:12.370
developers on the iOS app store?

00:00:12.370 --> 00:00:14.890
We build dozens of
applications for iPhone

00:00:14.890 --> 00:00:18.220
and the iPad that are used
by 10s of millions of users.

00:00:18.220 --> 00:00:21.960
We also provide a lot APIs and
services to iOS developers,

00:00:21.960 --> 00:00:24.610
so that you too can build a lot
of these amazing experiences

00:00:24.610 --> 00:00:26.020
for your users.

00:00:26.020 --> 00:00:28.795
We are big believers in
reaching users wherever they are

00:00:28.795 --> 00:00:32.350
and our tools go beyond
Chrome and Android.

00:00:32.350 --> 00:00:35.080
In this session, we'll walk
through several of these APIs

00:00:35.080 --> 00:00:37.940
and services that we
provide for iOS developers.

00:00:37.940 --> 00:00:39.960
And we'll approach them
in terms of the problem

00:00:39.960 --> 00:00:42.290
that you as a developer
might try to solve

00:00:42.290 --> 00:00:43.810
and then talk about
the Google API

00:00:43.810 --> 00:00:46.990
that we think will help
you immensely in that case.

00:00:46.990 --> 00:00:50.080
First, let's talk about building
your application's backend data

00:00:50.080 --> 00:00:51.340
store and logic.

00:00:51.340 --> 00:00:54.280
Every great application needs a
powerful backend infrastructure

00:00:54.280 --> 00:00:56.680
that constantly scales
what the application needs.

00:00:56.680 --> 00:01:00.400
Your application's backend might
perform some operations that

00:01:00.400 --> 00:01:02.640
are asynchronous or
store some photos

00:01:02.640 --> 00:01:04.475
or do push notifications.

00:01:04.475 --> 00:01:06.100
There are really a
lot of the scenarios

00:01:06.100 --> 00:01:09.640
that you can imagine for an
application that you may build.

00:01:09.640 --> 00:01:11.484
And the nice thing
is that Google

00:01:11.484 --> 00:01:13.150
has got you covered
with a great service

00:01:13.150 --> 00:01:15.500
that we call Google
Cloud Endpoints.

00:01:15.500 --> 00:01:17.790
We can build services
on App Engine

00:01:17.790 --> 00:01:20.780
and expose them as
APIs for your iOS apps.

00:01:20.780 --> 00:01:23.470
And the nice thing is
that these APIs are also

00:01:23.470 --> 00:01:25.630
accessible from
Android and web apps,

00:01:25.630 --> 00:01:27.670
so you're covered in all fronts.

00:01:27.670 --> 00:01:30.570
Here you can see a
server logic in Python--

00:01:30.570 --> 00:01:33.670
a really straightforward with
the client-side API called

00:01:33.670 --> 00:01:34.480
below it.

00:01:34.480 --> 00:01:37.130
And you can see how the server
logic is annotated with the API

00:01:37.130 --> 00:01:39.030
semantics and the
client-side API

00:01:39.030 --> 00:01:42.040
is generated fully on the
API spec in the server side.

00:01:42.040 --> 00:01:45.070
So it feels very natural
and conforming to the API

00:01:45.070 --> 00:01:46.760
that you have defined.

00:01:46.760 --> 00:01:50.640
Next up, you need to be able to
register and sign in new users.

00:01:50.640 --> 00:01:53.880
And this is really important
for a quality application,

00:01:53.880 --> 00:01:56.210
because you want to
personalize your application,

00:01:56.210 --> 00:01:59.670
store some settings, and be able
to restore to the user's state

00:01:59.670 --> 00:02:01.780
and you need to know who
they are at the keyboard.

00:02:01.780 --> 00:02:05.450
And Google+ Sign-in for iOS
really lets you solve this very

00:02:05.450 --> 00:02:06.500
easily.

00:02:06.500 --> 00:02:09.340
Drop in the G+ Sign-in framework
and Xcode and you're off

00:02:09.340 --> 00:02:10.389
to the races.

00:02:10.389 --> 00:02:12.855
The GPP sign-in instance
will control the registration

00:02:12.855 --> 00:02:14.480
and the login flows.

00:02:14.480 --> 00:02:16.070
And once the user
is signed in, you

00:02:16.070 --> 00:02:17.800
can actually use
the API to request

00:02:17.800 --> 00:02:21.230
additional information,
like their profile,

00:02:21.230 --> 00:02:23.840
for instance their picture,
or other information

00:02:23.840 --> 00:02:25.710
about their social graph itself.

00:02:25.710 --> 00:02:27.580
You can even add in
additional scopes,

00:02:27.580 --> 00:02:30.210
like access to Google
Drive or calendar,

00:02:30.210 --> 00:02:32.640
so that you can securely
interact with those resources

00:02:32.640 --> 00:02:33.360
as well.

00:02:33.360 --> 00:02:35.800
And all that can be taken
care of in one single sign-in

00:02:35.800 --> 00:02:38.260
and authorization flow.

00:02:38.260 --> 00:02:40.800
Adding Google+ Sign-in
improves your apps registration

00:02:40.800 --> 00:02:42.940
and sign-in rates quite a bit.

00:02:42.940 --> 00:02:46.190
As an example, edjing
a DJ app for iOS,

00:02:46.190 --> 00:02:49.190
saw an increase of the number
of signed in users on the iPhone

00:02:49.190 --> 00:02:54.370
by 32% and their iPad app by 42%
after adding Google+ Sign-in.

00:02:54.370 --> 00:02:56.600
So that's quite a bit
of increase there.

00:02:56.600 --> 00:02:58.822
And now that you have
your users logged in,

00:02:58.822 --> 00:03:00.280
you want to be able
to provide them

00:03:00.280 --> 00:03:02.237
with some pretty
immersive experiences.

00:03:02.237 --> 00:03:04.570
And the good news is we've
got you covered on that front

00:03:04.570 --> 00:03:05.720
as well.

00:03:05.720 --> 00:03:07.530
So let's talk about
Google Maps first.

00:03:07.530 --> 00:03:10.090
Google Maps provides
high-quality, map imagery,

00:03:10.090 --> 00:03:10.920
and information.

00:03:10.920 --> 00:03:12.190
You're familiar with that.

00:03:12.190 --> 00:03:16.510
And now you can easily embed
Google Maps in your app

00:03:16.510 --> 00:03:17.530
as well.

00:03:17.530 --> 00:03:19.420
You can easily build
a great map experience

00:03:19.420 --> 00:03:23.125
with your custom location
data using Google Maps SDK.

00:03:23.125 --> 00:03:25.720
Now here's a small
snippet of code and notice

00:03:25.720 --> 00:03:28.240
how we are using
the GMS map view

00:03:28.240 --> 00:03:31.240
and providing it a marker
and a camera instance.

00:03:31.240 --> 00:03:32.630
And there's some
deeper APIs that

00:03:32.630 --> 00:03:35.660
go beyond this to add
further interactivity

00:03:35.660 --> 00:03:40.220
or other additional
advanced functionality.

00:03:40.220 --> 00:03:43.060
Google Cast enables
multiscreen experiences that

00:03:43.060 --> 00:03:47.070
lets your users send and control
content from a small device,

00:03:47.070 --> 00:03:50.370
like a phone or tablet, on a
large screen device, like a TV.

00:03:50.370 --> 00:03:54.280
So if your app displays video
or other visual content that

00:03:54.280 --> 00:03:55.670
would look great
on a big screen,

00:03:55.670 --> 00:03:59.030
we highly encourage you to
take advantage of the Cast SDK.

00:03:59.030 --> 00:04:00.750
It's really straightforward
to implement.

00:04:00.750 --> 00:04:04.070
The flow is first, you
try to scan for devices.

00:04:04.070 --> 00:04:06.190
And once you've registered
against a device,

00:04:06.190 --> 00:04:09.330
you simply send the media
content up to that device.

00:04:09.330 --> 00:04:11.850
The device is called a
receiver and you can actually

00:04:11.850 --> 00:04:15.270
customize the look and feel on
the receiver using standard web

00:04:15.270 --> 00:04:18.959
technology in case of
advanced scenarios.

00:04:18.959 --> 00:04:21.970
If you're a game developer,
we've got a great SDK for you.

00:04:21.970 --> 00:04:24.160
It's called Play Games Services.

00:04:24.160 --> 00:04:27.100
You can power up your games
with achievements, leaderboards,

00:04:27.100 --> 00:04:30.920
real-time multiplayer, and
Cloud Save capabilities.

00:04:30.920 --> 00:04:32.590
SDK is across
platforms, so you're

00:04:32.590 --> 00:04:34.120
covered on all platforms.

00:04:34.120 --> 00:04:36.910
And the user could start
the game on an iOS device

00:04:36.910 --> 00:04:39.250
and finish it on a
web browser or compete

00:04:39.250 --> 00:04:43.240
against another user on an
Android form, for instance.

00:04:43.240 --> 00:04:46.190
Let's take a look at just one
of these features of the Play

00:04:46.190 --> 00:04:48.310
Games Services
called leaderboards.

00:04:48.310 --> 00:04:49.720
And leaderboards
can be a fun way

00:04:49.720 --> 00:04:52.340
to drive competition
amongst your players,

00:04:52.340 --> 00:04:55.060
even if they are
just casual gamers.

00:04:55.060 --> 00:04:56.620
And here's a simple
example of how

00:04:56.620 --> 00:05:00.490
you use the leaderboard using
a GPG leaderboard controller,

00:05:00.490 --> 00:05:02.660
which provides a
lot of simple APIs

00:05:02.660 --> 00:05:05.160
that you can launch and show
the leaderboard without having

00:05:05.160 --> 00:05:07.405
to do much magic.

00:05:07.405 --> 00:05:08.780
There are probably
many scenarios

00:05:08.780 --> 00:05:10.860
where you want to
embed and show YouTube

00:05:10.860 --> 00:05:12.770
content in your application.

00:05:12.770 --> 00:05:16.440
Some of the content that you
may have for help, for instance,

00:05:16.440 --> 00:05:18.605
or other instructional
information

00:05:18.605 --> 00:05:21.590
are really well served by
having that on YouTube.

00:05:21.590 --> 00:05:24.100
And the YouTube
iOS Player Helper

00:05:24.100 --> 00:05:26.290
is an open-source library
that you can easily

00:05:26.290 --> 00:05:28.340
embed into your
application and be

00:05:28.340 --> 00:05:31.370
able to show off this
in a simple iframe.

00:05:31.370 --> 00:05:35.010
You can see that the YT player
view is a simple library.

00:05:35.010 --> 00:05:37.700
And you can see how easy
it is to load and control

00:05:37.700 --> 00:05:39.630
a video from there.

00:05:39.630 --> 00:05:42.240
Let's now talk about how you
can make your app get better

00:05:42.240 --> 00:05:43.220
with time.

00:05:43.220 --> 00:05:46.300
You'll of course want to know
how your app is being used--

00:05:46.300 --> 00:05:49.350
what the popular sections and
the not so popular sections

00:05:49.350 --> 00:05:49.920
are.

00:05:49.920 --> 00:05:52.710
And you'll want to be able to
experiment and change things

00:05:52.710 --> 00:05:55.690
on the fly, so that you're
not always rebuilding

00:05:55.690 --> 00:05:57.950
and resubmitting
your application.

00:05:57.950 --> 00:06:00.212
Luckily, we have two
great tools for that.

00:06:00.212 --> 00:06:02.420
First, you're probably
familiar with Google Analytics

00:06:02.420 --> 00:06:06.230
for websites, but you know that
there's also a Google Analytics

00:06:06.230 --> 00:06:09.010
SDK for you iOS native app?

00:06:09.010 --> 00:06:11.630
Here you can see how you
can use that SDK-- really

00:06:11.630 --> 00:06:14.490
straightforward to track the
analytics of a home screen,

00:06:14.490 --> 00:06:15.730
in this example.

00:06:15.730 --> 00:06:18.760
And all that, of course, is
securely tracked and logged

00:06:18.760 --> 00:06:21.730
in the Google
Analytics web console.

00:06:21.730 --> 00:06:23.530
Another great tool
for app developers

00:06:23.530 --> 00:06:25.565
is the Google Tag Manager.

00:06:25.565 --> 00:06:27.790
Google Tag Manager
allows developers

00:06:27.790 --> 00:06:30.240
to change configuration
values in their app

00:06:30.240 --> 00:06:32.630
without having to constantly
rebuild and resubmit

00:06:32.630 --> 00:06:33.760
their apps.

00:06:33.760 --> 00:06:36.640
This is really useful for
changing configuration values

00:06:36.640 --> 00:06:39.130
and settings in your
application, like strings

00:06:39.130 --> 00:06:41.550
or various UI
settings that you want

00:06:41.550 --> 00:06:44.420
to be able to have
dynamic control over.

00:06:44.420 --> 00:06:47.350
And this sample snippet shows
how the Tag containers opened

00:06:47.350 --> 00:06:50.180
and how the value can be
retrieved using a simple API

00:06:50.180 --> 00:06:51.730
call.

00:06:51.730 --> 00:06:54.130
Now it's time to talk about
how you can generate money

00:06:54.130 --> 00:06:56.350
from your application.

00:06:56.350 --> 00:06:59.790
If you're app sells physical
goods, tickets, or services,

00:06:59.790 --> 00:07:02.030
you should really look
into Google Wallet.

00:07:02.030 --> 00:07:03.510
Google Wallet
Instant Buy enables

00:07:03.510 --> 00:07:05.090
you to access
hundreds of millions

00:07:05.090 --> 00:07:08.750
of users that use Google Wallet
and can pay via Google Wallet.

00:07:08.750 --> 00:07:10.532
And this also minimizes
the data entry

00:07:10.532 --> 00:07:11.615
that they have to perform.

00:07:11.615 --> 00:07:14.450
So this is a really good
for everybody involved,

00:07:14.450 --> 00:07:17.040
including yourself
as the developer.

00:07:17.040 --> 00:07:18.720
The two key parts
in the sample code

00:07:18.720 --> 00:07:20.580
here are the masked
Wallet request

00:07:20.580 --> 00:07:22.160
that defines all
the fields that you

00:07:22.160 --> 00:07:24.510
need in order to
create an order.

00:07:24.510 --> 00:07:28.920
And the second part talks about
how once order is authorized,

00:07:28.920 --> 00:07:31.150
how you can get the proxy
card to send the payment

00:07:31.150 --> 00:07:33.210
information to your processor.

00:07:33.210 --> 00:07:36.660
Another great way to monetize is
by displaying high-quality ads

00:07:36.660 --> 00:07:37.830
in your application.

00:07:37.830 --> 00:07:41.170
And you can easily do
that with the AdMob SDK.

00:07:41.170 --> 00:07:43.210
Banner ads use a small
portion of the screen

00:07:43.210 --> 00:07:45.960
to entice users to click
through to a richer

00:07:45.960 --> 00:07:47.460
full-screen experience.

00:07:47.460 --> 00:07:49.080
And notice in this
snippet, we're

00:07:49.080 --> 00:07:51.750
creating a GAD banner
view and adding

00:07:51.750 --> 00:07:56.000
that as a sub-view within your
application UI right there.

00:07:56.000 --> 00:07:57.220
So, now to recap.

00:07:57.220 --> 00:07:59.710
We walked through ten
different APIs and services

00:07:59.710 --> 00:08:02.190
that Google offers
for iOS developers.

00:08:02.190 --> 00:08:05.470
As you can see, these APIs help
you solve a lot of the problems

00:08:05.470 --> 00:08:07.240
that you as a
developer might have

00:08:07.240 --> 00:08:10.125
regardless of the type of
application you're building.

00:08:10.125 --> 00:08:12.250
We believe that you could
build amazing experiences

00:08:12.250 --> 00:08:16.030
with these APIs for
your users on iOS.

00:08:16.030 --> 00:08:19.180
We've just barely scratched
the surface with this APIs.

00:08:19.180 --> 00:08:23.065
Feel free to dig in and learn
more at developer.google.com.

