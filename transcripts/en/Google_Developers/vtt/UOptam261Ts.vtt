WEBVTT
Kind: captions
Language: en

00:00:05.239 --> 00:00:06.530
ANDREW BROGDON: Hey, everybody.

00:00:06.530 --> 00:00:07.680
I'm Andrew Brogdon.

00:00:07.680 --> 00:00:09.750
Welcome back to the
"Mobile Ads Garage."

00:00:09.750 --> 00:00:11.880
Today, with the help of
my intrepid partner, Gary,

00:00:11.880 --> 00:00:15.420
the graphics guy, we're
going to cover the AdMob

00:00:15.420 --> 00:00:17.940
plug-in for the Unity
game development platform,

00:00:17.940 --> 00:00:20.700
and show how to use it to
display rewarded video ads.

00:00:20.700 --> 00:00:23.576
But first, I have a really
important announcement to make.

00:00:23.576 --> 00:00:25.240
[TRUMPET PLAYING]

00:00:25.240 --> 00:00:27.640
Thank you, Gary.

00:00:27.640 --> 00:00:30.491
If you saw our previous
episode on rewarded video,

00:00:30.491 --> 00:00:31.990
you know that when
that format first

00:00:31.990 --> 00:00:34.300
launched it was only
available through mediation,

00:00:34.300 --> 00:00:37.000
and AdMob didn't have
its own ads to display.

00:00:37.000 --> 00:00:39.277
Well, I'm happy to say
that after so many of you

00:00:39.277 --> 00:00:41.110
guys went out and
implemented rewarded video

00:00:41.110 --> 00:00:43.150
in your apps, that's changed.

00:00:43.150 --> 00:00:45.460
You can now go to
apps.admob.com,

00:00:45.460 --> 00:00:49.020
create a rewarded video ad unit,
and with no mediation required

00:00:49.020 --> 00:00:52.126
get live ads directly
from AdMob's advertisers.

00:00:52.126 --> 00:00:53.500
So if you're not
using mediation,

00:00:53.500 --> 00:00:55.150
you don't have to
miss out on rewarded.

00:00:55.150 --> 00:00:57.340
And if you are mediating,
that's one more network

00:00:57.340 --> 00:01:00.169
competing for your impressions.

00:01:00.169 --> 00:01:02.210
Today we're going to put
these new rewarded video

00:01:02.210 --> 00:01:03.750
ads to work in a Unity app.

00:01:03.750 --> 00:01:05.600
So let's talk about that.

00:01:05.600 --> 00:01:08.570
Unity has a cross-platform game
engine that lets you write apps

00:01:08.570 --> 00:01:11.780
once in C# and then compile
them for a number of different

00:01:11.780 --> 00:01:15.140
platforms, including
Android and iOS.

00:01:15.140 --> 00:01:18.380
AdMob created a plug-in to make
it easy to use the mobile ads

00:01:18.380 --> 00:01:19.730
SDK with Unity.

00:01:19.730 --> 00:01:23.090
There's a single C# interface
for publishers to code against.

00:01:23.090 --> 00:01:24.770
And then under the
hood, the plug-in

00:01:24.770 --> 00:01:27.350
takes care of communicating
with the native iOS and Android

00:01:27.350 --> 00:01:28.187
SDKs.

00:01:28.187 --> 00:01:30.770
So you're actually dealing with
the same SDK that you normally

00:01:30.770 --> 00:01:34.310
would, but doing it with
calls into C# classes.

00:01:34.310 --> 00:01:37.280
The plug-in offers banners,
interstitials, rewarded video,

00:01:37.280 --> 00:01:38.240
and native ads.

00:01:38.240 --> 00:01:42.190
And it's been around for
almost four years now.

00:01:42.190 --> 00:01:42.790
That's true.

00:01:42.790 --> 00:01:44.330
I was just a poor
boy back in Ohio

00:01:44.330 --> 00:01:45.710
when version 1.0 was launched.

00:01:45.710 --> 00:01:48.430
So it's pretty battle
tested at this point.

00:01:48.430 --> 00:01:51.580
Another nice thing is that
the whole deal is open source

00:01:51.580 --> 00:01:52.944
under the Apache license.

00:01:52.944 --> 00:01:54.610
So if you're curious
about the codebase,

00:01:54.610 --> 00:01:55.750
you can actually clone it.

00:01:55.750 --> 00:01:57.640
And if you want to try
tweaking how it works,

00:01:57.640 --> 00:02:00.267
you can fork the
repo and hack away.

00:02:00.267 --> 00:02:02.350
And speaking of hacking,
let's get into the editor

00:02:02.350 --> 00:02:05.016
and take a look at how to import
the Google plug-in into a Unity

00:02:05.016 --> 00:02:06.220
project.

00:02:06.220 --> 00:02:08.240
Here are the steps we're
going to cover today.

00:02:08.240 --> 00:02:11.020
If you've done rewarded with
our native iOS or Android SDKs,

00:02:11.020 --> 00:02:12.740
these are going to
look really familiar.

00:02:12.740 --> 00:02:14.290
The Unity plug-in
sticks pretty well

00:02:14.290 --> 00:02:17.320
toward native interfaces,
which helps keep things simple.

00:02:17.320 --> 00:02:19.030
All right, let's
get right to it.

00:02:19.030 --> 00:02:23.030
Time to get into the Unity
editor and import the plug-in.

00:02:23.030 --> 00:02:24.440
So I've got a simple app here.

00:02:24.440 --> 00:02:26.314
It's just got two buttons,
one for requesting

00:02:26.314 --> 00:02:28.310
a video and one for showing it.

00:02:28.310 --> 00:02:29.480
So that was my scene.

00:02:29.480 --> 00:02:33.081
And I'm going to go up to Import
Plug-in in the Assets menu,

00:02:33.081 --> 00:02:35.330
and I'm going to go find the
package that I downloaded

00:02:35.330 --> 00:02:35.870
from GitHub.

00:02:35.870 --> 00:02:38.299
You can get this right
on our GitHub repo.

00:02:38.299 --> 00:02:39.590
And there's all the code in it.

00:02:39.590 --> 00:02:40.881
I'm going to import everything.

00:02:40.881 --> 00:02:44.510
So I'll just go straight down
to Import and hit the button.

00:02:44.510 --> 00:02:45.500
And there we go.

00:02:45.500 --> 00:02:48.386
I am now imported.

00:02:48.386 --> 00:02:49.760
Now, I can come
in here, and this

00:02:49.760 --> 00:02:52.520
is a script editor for the
scene you were just looking at.

00:02:52.520 --> 00:02:54.740
And I can start referencing
some of the stuff that's

00:02:54.740 --> 00:02:55.370
in that name space.

00:02:55.370 --> 00:02:57.120
So Google mobile ads,
I can do it using up

00:02:57.120 --> 00:03:00.500
here and googlemobileads.api.

00:03:00.500 --> 00:03:03.470
There we go--
plug-in's imported.

00:03:03.470 --> 00:03:05.910
So that's how to get the
plug-in into your project.

00:03:05.910 --> 00:03:07.980
Now let's put it to work,
loading and displaying

00:03:07.980 --> 00:03:10.646
an AdMob rewarded video ad.

00:03:10.646 --> 00:03:12.020
So here are the
five steps again.

00:03:12.020 --> 00:03:13.880
And we're on getting
the singleton instance.

00:03:13.880 --> 00:03:18.380
So rewarded video ads is
backed by a singleton object.

00:03:18.380 --> 00:03:20.270
And within the
script for my app I'm

00:03:20.270 --> 00:03:22.550
going to go and make
a private member right

00:03:22.550 --> 00:03:25.700
here for reward-based video ad.

00:03:25.700 --> 00:03:27.410
And in the Start
method, I'm going

00:03:27.410 --> 00:03:29.840
to grab an instance
of the singleton

00:03:29.840 --> 00:03:31.400
and store it there
for later use.

00:03:31.400 --> 00:03:31.900
There we go.

00:03:34.540 --> 00:03:35.930
So that's two down, three to go.

00:03:35.930 --> 00:03:38.080
Next step is loading an ad.

00:03:38.080 --> 00:03:40.750
And so I'd like to wire up that
first button, Request Rewarded

00:03:40.750 --> 00:03:45.280
Video, to a function that
will load an ad for me.

00:03:45.280 --> 00:03:47.170
So here in the onGUI
method, you can

00:03:47.170 --> 00:03:48.670
see I've just got
a simple GUI here.

00:03:48.670 --> 00:03:50.140
It's just the two buttons.

00:03:50.140 --> 00:03:53.632
And I've got a couple of event
handlers down at the bottom.

00:03:53.632 --> 00:03:55.590
And there's the one for
request rewarded video.

00:03:55.590 --> 00:03:58.120
So I'm just going to drop
in a function call here.

00:03:58.120 --> 00:04:00.774
And I'll call it
load reward-based ad.

00:04:00.774 --> 00:04:02.440
And I need to define
that at the bottom.

00:04:02.440 --> 00:04:04.954
So let me put that in here.

00:04:04.954 --> 00:04:06.370
So it's just a
private void member

00:04:06.370 --> 00:04:08.590
that I can dump some code into.

00:04:08.590 --> 00:04:09.814
There we go.

00:04:09.814 --> 00:04:11.480
So I'm going to paste
some code in here.

00:04:11.480 --> 00:04:13.146
It's going to look
like a lot, but we're

00:04:13.146 --> 00:04:14.560
going to talk about it.

00:04:14.560 --> 00:04:16.870
So AdMob, as you know,
uses separate ad units

00:04:16.870 --> 00:04:18.820
for iOS and Android.

00:04:18.820 --> 00:04:20.290
But Unity can compile for both.

00:04:20.290 --> 00:04:22.344
So what I've done here is
use compiler directives

00:04:22.344 --> 00:04:24.010
to make sure that I'm
using the right ad

00:04:24.010 --> 00:04:25.580
unit for each platform.

00:04:25.580 --> 00:04:27.430
So if I'm building
for Android, my string

00:04:27.430 --> 00:04:29.170
ends up being the
Android ad unit.

00:04:29.170 --> 00:04:31.030
And if I'm building
for iPhone, my string

00:04:31.030 --> 00:04:33.250
ends up being the iOS ad unit.

00:04:33.250 --> 00:04:35.540
There we go.

00:04:35.540 --> 00:04:38.830
Now I can just drop
in a load add call

00:04:38.830 --> 00:04:40.990
on my reward-based
video ad object.

00:04:40.990 --> 00:04:42.430
And I need an ad
request, which I

00:04:42.430 --> 00:04:44.170
can build using a
builder interface that

00:04:44.170 --> 00:04:46.690
should look very familiar
to anybody using Android.

00:04:46.690 --> 00:04:48.460
It's the same kind
of fluid style.

00:04:48.460 --> 00:04:49.990
And all the same
information you can

00:04:49.990 --> 00:04:51.982
put into an ad request
for the other platforms,

00:04:51.982 --> 00:04:52.690
you can use here.

00:04:52.690 --> 00:04:54.890
We have methods for it.

00:04:54.890 --> 00:04:55.390
Cool.

00:04:55.390 --> 00:04:56.500
So that's one, two, three.

00:04:56.500 --> 00:04:58.972
Now let's try showing an ad.

00:04:58.972 --> 00:05:00.430
So I have that
second button, and I

00:05:00.430 --> 00:05:03.997
want to wire that up to show.

00:05:03.997 --> 00:05:05.580
So I'm going to pop
down here, and I'm

00:05:05.580 --> 00:05:07.980
going to add a
new function call.

00:05:07.980 --> 00:05:10.820
And I'll call it
show reward-based ad.

00:05:10.820 --> 00:05:12.570
And I'll define it
right down here.

00:05:12.570 --> 00:05:14.170
So another private void member--

00:05:14.170 --> 00:05:16.980
show reward-based ad.

00:05:16.980 --> 00:05:18.990
There we go.

00:05:18.990 --> 00:05:21.390
So the first step here
is to see if I definitely

00:05:21.390 --> 00:05:23.640
have an ad loaded when
that button gets pressed.

00:05:23.640 --> 00:05:26.630
I can do that by calling
is loaded right there.

00:05:26.630 --> 00:05:29.330
And so if I've got an ad at
the ready, I can call show,

00:05:29.330 --> 00:05:31.110
and up pops my video ad.

00:05:31.110 --> 00:05:33.210
If I don't, I'm just going
to log a statement here

00:05:33.210 --> 00:05:35.640
to say, hey, don't
have an ad yet.

00:05:35.640 --> 00:05:38.001
There we go.

00:05:38.001 --> 00:05:38.500
Cool.

00:05:38.500 --> 00:05:40.080
So four steps down.

00:05:40.080 --> 00:05:44.130
One step left-- using
events to get the reward.

00:05:44.130 --> 00:05:46.380
So one of the nice parts
about the Unity plug-in

00:05:46.380 --> 00:05:47.550
is that it's open source.

00:05:47.550 --> 00:05:50.590
So you can actually go in
and look at what's going on.

00:05:50.590 --> 00:05:52.445
There's the reward-based
video ad class.

00:05:52.445 --> 00:05:54.070
And I'm looking for
the events in here.

00:05:54.070 --> 00:05:54.990
There they are.

00:05:54.990 --> 00:05:57.930
So these are the public
events exposed by this class

00:05:57.930 --> 00:05:59.610
that you can use to
know what's going on

00:05:59.610 --> 00:06:01.410
with your rewarded video ads.

00:06:01.410 --> 00:06:04.050
So I'm going to
grab those events.

00:06:04.050 --> 00:06:05.990
And I want to make
handlers for them.

00:06:05.990 --> 00:06:08.512
So I'm just going to cut and
paste these just as a shorthand

00:06:08.512 --> 00:06:10.470
so I know which events
I'm making handlers for.

00:06:10.470 --> 00:06:10.970
There we go.

00:06:10.970 --> 00:06:14.520
I'm just going to paste
these in at the bottom.

00:06:14.520 --> 00:06:17.040
And what I'm going to do
here is create handlers

00:06:17.040 --> 00:06:17.880
for each of these.

00:06:17.880 --> 00:06:20.590
And I'm just going to paste this
in because it's a lot of code.

00:06:20.590 --> 00:06:21.960
There we go.

00:06:21.960 --> 00:06:24.090
So where I used to have
the events themselves

00:06:24.090 --> 00:06:25.740
just as a shorthand to
know which ones they are,

00:06:25.740 --> 00:06:27.406
I just dropped it
handlers for each one.

00:06:27.406 --> 00:06:29.040
So I've got a handler
for onAdLoaded,

00:06:29.040 --> 00:06:31.920
onAdFailedToLoad, all the
way down to onAdRewarded

00:06:31.920 --> 00:06:33.480
and leaving application.

00:06:33.480 --> 00:06:36.540
So this is how, like, you'd use
a delegate or an ad listener

00:06:36.540 --> 00:06:37.890
on Android and iOS--

00:06:37.890 --> 00:06:40.050
this is how you get
these events on Unity.

00:06:40.050 --> 00:06:41.010
Cool.

00:06:41.010 --> 00:06:43.890
So I can come in here, and
I could put a reload in here

00:06:43.890 --> 00:06:46.290
onAdFailedToLoad.

00:06:46.290 --> 00:06:48.210
In onAdOpening, for
example, I might

00:06:48.210 --> 00:06:50.820
want to pause the action if
I've got a game engine going,

00:06:50.820 --> 00:06:53.070
because I know I've got an
ad that's being displayed.

00:06:53.070 --> 00:06:55.380
And any others, all the normal
things you'd usually do,

00:06:55.380 --> 00:06:58.800
like onAdStarted, you might
want to mute your audio.

00:06:58.800 --> 00:07:01.650
In onAdClosed, you might want
to kick your game engine--

00:07:01.650 --> 00:07:04.051
crank the party back
up, get it going again.

00:07:04.051 --> 00:07:05.550
And this is the one
I'm particularly

00:07:05.550 --> 00:07:06.550
interested for rewarded.

00:07:06.550 --> 00:07:08.640
This is onAdRewarded,
which gets called

00:07:08.640 --> 00:07:10.500
when the user has
completely viewed an ad

00:07:10.500 --> 00:07:11.820
and deserves a reward.

00:07:11.820 --> 00:07:15.060
So let's put some code in
here just to log the reward.

00:07:15.060 --> 00:07:17.610
You do get a reward
object as the arguments,

00:07:17.610 --> 00:07:20.400
and it has an amount
and a type, just like it

00:07:20.400 --> 00:07:21.990
does on iOS and Android.

00:07:21.990 --> 00:07:23.640
So you get both
a numerical value

00:07:23.640 --> 00:07:25.680
for the amount of
the word and a string

00:07:25.680 --> 00:07:26.737
that represents the type.

00:07:26.737 --> 00:07:28.320
And those are the
same values that you

00:07:28.320 --> 00:07:31.310
put into the
adapps.admob.com front end.

00:07:31.310 --> 00:07:31.810
There we go.

00:07:34.750 --> 00:07:36.190
So I've got these methods ready.

00:07:36.190 --> 00:07:38.170
Now it's time to
get them wired in.

00:07:38.170 --> 00:07:40.540
So let's go back up into
the start method, where

00:07:40.540 --> 00:07:41.890
I'm grabbing my instance.

00:07:41.890 --> 00:07:43.640
I'm going to drop a
block of code in here.

00:07:43.640 --> 00:07:45.931
It's going to look like a
lot, but we'll talk about it.

00:07:45.931 --> 00:07:46.739
There we go.

00:07:46.739 --> 00:07:49.030
So all I'm doing here is
adding my methods as listeners

00:07:49.030 --> 00:07:51.490
for these events one
by one the C# way,

00:07:51.490 --> 00:07:55.077
using the plus equals operator.

00:07:55.077 --> 00:07:56.410
And so those are the five steps.

00:07:56.410 --> 00:07:58.076
We've covered all of
them at this point.

00:07:58.076 --> 00:08:02.020
So I can run the app, and
let's see what the log says.

00:08:02.020 --> 00:08:03.220
Here we go.

00:08:03.220 --> 00:08:06.130
So I'm running my Unity app.

00:08:06.130 --> 00:08:08.970
There goes my app request.

00:08:08.970 --> 00:08:09.970
And it finished loading.

00:08:13.730 --> 00:08:16.250
And there's the reward in
the log, one reward, which is

00:08:16.250 --> 00:08:17.942
the default for this ad unit.

00:08:17.942 --> 00:08:21.260
All right, so that's a
working Unity implementation

00:08:21.260 --> 00:08:23.077
for AdMob rewarded video ads.

00:08:23.077 --> 00:08:24.410
That's going to do it for today.

00:08:24.410 --> 00:08:26.480
But I've got some links
for you on the way out.

00:08:26.480 --> 00:08:28.850
First up is our GitHub
repo for Unity, which has

00:08:28.850 --> 00:08:30.920
the plug-in plus some samples.

00:08:30.920 --> 00:08:33.110
I've got a link to our
Get Started Guide as well.

00:08:33.110 --> 00:08:35.109
If you're just setting
out with Unity and AdMob,

00:08:35.109 --> 00:08:37.159
these are great places to start.

00:08:37.159 --> 00:08:39.230
We've also got guides
for individual formats.

00:08:39.230 --> 00:08:41.461
Here's Rewarded Video
and Native Ads Express,

00:08:41.461 --> 00:08:43.669
but you can find guides for
banners and interstitials

00:08:43.669 --> 00:08:47.040
too right next to those
on our developer site.

00:08:47.040 --> 00:08:49.710
And as always, you're welcome to
bring your technical questions

00:08:49.710 --> 00:08:51.040
to our support forum.

00:08:51.040 --> 00:08:52.200
And if you've got an
idea for something

00:08:52.200 --> 00:08:54.325
you'd like us to cover in
this series or a question

00:08:54.325 --> 00:08:56.890
about what you've just
seen, leave a comment below,

00:08:56.890 --> 00:08:59.450
and Gary and I will
see you next time.

