WEBVTT
Kind: captions
Language: en

00:00:00.570 --> 00:00:02.730
TODD KERPELMAN: So yeah,
welcome, everybody.

00:00:02.730 --> 00:00:03.590
Thanks for coming.

00:00:03.590 --> 00:00:04.610
I'm Todd Kerpelman.

00:00:04.610 --> 00:00:10.150
I'm a developer advocate
here on the games team

00:00:10.150 --> 00:00:11.180
STEVE MARTIN: I'm Steve
Martin, and

00:00:11.180 --> 00:00:12.320
I am not the actor.

00:00:12.320 --> 00:00:14.810
And I'm the engineering lead
for the games team.

00:00:14.810 --> 00:00:15.475
DAVE SANTORO: I'm
Dave Santoro.

00:00:15.475 --> 00:00:18.000
I'm the Android tactical
lead on the games team.

00:00:18.000 --> 00:00:20.770
TODD KERPELMAN: And so we are
all here because of in spite

00:00:20.770 --> 00:00:23.840
of our formally vaguely worded
title, which we kind of had to

00:00:23.840 --> 00:00:25.215
keep up for secrecy reasons.

00:00:28.920 --> 00:00:33.020
What we're actually here to
talk to you about today is

00:00:33.020 --> 00:00:35.910
Google Play game services.

00:00:35.910 --> 00:00:36.820
There we go.

00:00:36.820 --> 00:00:37.780
All right.

00:00:37.780 --> 00:00:40.600
So let's start by asking
ourselves what are Google Play

00:00:40.600 --> 00:00:42.140
game services?

00:00:42.140 --> 00:00:44.650
As many of you saw in the
keynote, these are an entire

00:00:44.650 --> 00:00:48.690
ecosystem designed to support
your users' gaming experience.

00:00:48.690 --> 00:00:49.800
And what does that mean?

00:00:49.800 --> 00:00:53.160
Well, that means features like
achievements and leader boards

00:00:53.160 --> 00:00:55.000
and saving your game
in the cloud.

00:00:55.000 --> 00:00:57.080
It means a real-time multiplayer
framework on

00:00:57.080 --> 00:00:58.480
Android devices.

00:00:58.480 --> 00:01:02.100
It is a new developer console
experience that is created to

00:01:02.100 --> 00:01:05.459
support the whole thing, and
it's cross platform.

00:01:05.459 --> 00:01:08.090
So you can earn achievements on
your Nexus 7, and you can

00:01:08.090 --> 00:01:09.550
see it on your Chromebook.

00:01:09.550 --> 00:01:12.280
I can compare the scores I'm
getting on my Android device

00:01:12.280 --> 00:01:15.580
to what my friend might be
getting on his or her iPad.

00:01:15.580 --> 00:01:17.910
And in case you're wondering
why we're doing this and

00:01:17.910 --> 00:01:20.780
maybe, in particular,
why cross platform.

00:01:20.780 --> 00:01:22.830
I suppose the reason is we want
the whole world to play

00:01:22.830 --> 00:01:26.420
together, which I know is a
little bit touchy feely, kids

00:01:26.420 --> 00:01:28.130
holding hands around
the world.

00:01:28.130 --> 00:01:30.230
But at a core level,
it's really true.

00:01:30.230 --> 00:01:33.340
All of us on the team
are gamers.

00:01:33.340 --> 00:01:35.620
And by that, I don't just
mean that we play games.

00:01:35.620 --> 00:01:37.820
We haven't had a lot
of time lately.

00:01:37.820 --> 00:01:40.670
It's more that we understand
that games are powerful.

00:01:40.670 --> 00:01:42.400
I hope many of you here
are game developers.

00:01:42.400 --> 00:01:43.570
You understand this.

00:01:43.570 --> 00:01:45.850
Games can push technology
forward.

00:01:45.850 --> 00:01:47.620
They drive platform adoption.

00:01:47.620 --> 00:01:50.630
They can fulfill human needs
in a way that a spreadsheet

00:01:50.630 --> 00:01:52.110
application just can't.

00:01:52.110 --> 00:01:55.100
So, sorry, Docs people,
if you're in the room.

00:01:55.100 --> 00:01:57.290
We also know most gamers don't
really look like this.

00:01:57.290 --> 00:01:59.746
This guy's a little extreme.

00:01:59.746 --> 00:02:00.120
There we go.

00:02:00.120 --> 00:02:01.600
That's better.

00:02:01.600 --> 00:02:03.990
And so we want to make mobile
games more fun and engaging

00:02:03.990 --> 00:02:05.350
for everybody.

00:02:05.350 --> 00:02:08.139
And we can do this partly by
letting them find good games

00:02:08.139 --> 00:02:09.930
that they're interested
in playing.

00:02:09.930 --> 00:02:13.850
Let them demonstrate a sense of
mastery and get a sense of

00:02:13.850 --> 00:02:14.800
accomplishment.

00:02:14.800 --> 00:02:17.290
And let them socialize with
their friends through gaming.

00:02:17.290 --> 00:02:20.480
Something that games have
essentially let players do for

00:02:20.480 --> 00:02:22.150
thousands and thousands
of years.

00:02:22.150 --> 00:02:24.910
So this, in turn, hopefully
helps you as game developers,

00:02:24.910 --> 00:02:28.545
because you get a high quality,
engaged audience that

00:02:28.545 --> 00:02:30.440
is interested in the games
you're producing.

00:02:30.440 --> 00:02:32.570
And you get some of the big
studio features without

00:02:32.570 --> 00:02:35.680
needing an entire backend
services team to manage your

00:02:35.680 --> 00:02:38.490
database and security, and have
pagers when things go

00:02:38.490 --> 00:02:40.310
wrong at 2:00 in the morning.

00:02:40.310 --> 00:02:42.010
Hopefully, all of that
makes you happy.

00:02:42.010 --> 00:02:44.670
And having you happy
makes us happy.

00:02:44.670 --> 00:02:48.620
Also, you've been asking for
this, and we do listen to you.

00:02:48.620 --> 00:02:51.970
So we will get into the meat
of these services soon.

00:02:51.970 --> 00:02:54.940
But before we do, let's spend
a little time talking about

00:02:54.940 --> 00:02:59.250
the ecosystem that we have to
support these services.

00:02:59.250 --> 00:03:02.130
We're going to start with Google
Play game services

00:03:02.130 --> 00:03:03.920
being social from the start.

00:03:03.920 --> 00:03:07.050
We use Google+ sign in for your
identity, which is great

00:03:07.050 --> 00:03:09.190
because, particularly on Android
devices, most of your

00:03:09.190 --> 00:03:11.110
users are already going
to have an account.

00:03:11.110 --> 00:03:13.060
Don't need to create a
username, password.

00:03:13.060 --> 00:03:14.390
They're probably going
to be logged in.

00:03:14.390 --> 00:03:17.190
And so clicking that sign in
button is then a one or two

00:03:17.190 --> 00:03:19.690
click process to sign up
for game services and

00:03:19.690 --> 00:03:21.080
get into your game.

00:03:21.080 --> 00:03:24.100
If they're like me, they have
their name and their profile

00:03:24.100 --> 00:03:27.570
picture set up so that their
friends can find them.

00:03:27.570 --> 00:03:30.030
And all my friends can find me
and challenge me to a game.

00:03:30.030 --> 00:03:32.760
We don't need to exchange
nicknames or code words or

00:03:32.760 --> 00:03:34.660
aliases, or anything
like that.

00:03:34.660 --> 00:03:37.410
And social leader boards
are ready to go.

00:03:37.410 --> 00:03:39.100
I got 700 people
in my circles.

00:03:39.100 --> 00:03:43.360
The minute I click Sign In on
your application, my social

00:03:43.360 --> 00:03:45.660
leader boards, the most
interesting kind of leader

00:03:45.660 --> 00:03:46.630
boards, are ready to go.

00:03:46.630 --> 00:03:49.990
And I can compare scores with
my friends, my family, my

00:03:49.990 --> 00:03:52.950
co-workers, and not just some
random dude in a country I may

00:03:52.950 --> 00:03:54.450
or may not have heard of.

00:03:54.450 --> 00:03:57.330
And by the way, all those
interactive posts, deep

00:03:57.330 --> 00:04:00.370
linking, app activities, all of
the other Google+ platform

00:04:00.370 --> 00:04:02.970
features, are essentially
available for free when you

00:04:02.970 --> 00:04:04.180
implement game services.

00:04:04.180 --> 00:04:06.680
So that's nice.

00:04:06.680 --> 00:04:08.900
We do know that people are more
willing to sign in with

00:04:08.900 --> 00:04:11.760
Google because they trust us,
and they know that we're not

00:04:11.760 --> 00:04:14.030
going to inadvertently spam
their friends when they

00:04:14.030 --> 00:04:15.920
perform social sign in.

00:04:15.920 --> 00:04:18.380
And so to that end, the team has
added some pretty powerful

00:04:18.380 --> 00:04:19.680
privacy controls.

00:04:19.680 --> 00:04:22.100
The first thing we do is let
the user control which of

00:04:22.100 --> 00:04:25.210
their friends they let you, as
game developers, know about.

00:04:25.210 --> 00:04:27.490
By default, this is set to
everybody in my circles.

00:04:27.490 --> 00:04:30.040
But I might, for instance, have
my secret second family

00:04:30.040 --> 00:04:32.720
up in Canada circle that they
don't want anyone, even you,

00:04:32.720 --> 00:04:33.865
knowing about.

00:04:33.865 --> 00:04:36.030
Oh, so I shouldn't have
mentioned it here.

00:04:36.030 --> 00:04:39.100
But I can basically opt to hide
that particular circle

00:04:39.100 --> 00:04:40.800
when I sign in to your
application.

00:04:40.800 --> 00:04:42.460
We could also ask the
user who can see

00:04:42.460 --> 00:04:44.090
their gameplay activity.

00:04:44.090 --> 00:04:46.250
Again, by default, this
is set to public.

00:04:46.250 --> 00:04:48.590
If I get a high score in a game,
I'm generally pretty

00:04:48.590 --> 00:04:49.270
proud of that.

00:04:49.270 --> 00:04:50.570
I'm OK if people see it.

00:04:50.570 --> 00:04:53.500
But maybe I don't want my boss
to know how much time I spend

00:04:53.500 --> 00:04:54.690
playing Rocket Island.

00:04:54.690 --> 00:04:58.920
So I can opt to make this kind
of activity visible only to my

00:04:58.920 --> 00:05:01.640
friends or, even better, only
to my gamer friends.

00:05:01.640 --> 00:05:02.890
It's really up to me.

00:05:06.295 --> 00:05:08.510
STEVE MARTIN: So let me start by
explaining why being cross

00:05:08.510 --> 00:05:09.830
platform is incredibly
important

00:05:09.830 --> 00:05:11.840
to Play game services.

00:05:11.840 --> 00:05:13.640
As you're probably aware, there
are a lot of people out

00:05:13.640 --> 00:05:16.380
there today that own and play
games on Android devices.

00:05:16.380 --> 00:05:18.660
And likewise, there are a lot
of people out there who own

00:05:18.660 --> 00:05:21.510
and play games on other
types of devices.

00:05:21.510 --> 00:05:24.430
Our goal is to enable everyone
to play with who they want,

00:05:24.430 --> 00:05:26.560
not just folks who have a
particular type of device in

00:05:26.560 --> 00:05:27.820
their pocket.

00:05:27.820 --> 00:05:30.590
This is why being accessible on
any platform is incredibly

00:05:30.590 --> 00:05:32.110
important to us.

00:05:32.110 --> 00:05:34.430
So let me make that a little
more concrete.

00:05:34.430 --> 00:05:37.050
The Play game services are
implemented as a RESTful API.

00:05:37.050 --> 00:05:39.090
And what that means is that you
can access them from any

00:05:39.090 --> 00:05:40.280
connected device--

00:05:40.280 --> 00:05:43.720
phones, tablets, desktop
computers, printers, probably

00:05:43.720 --> 00:05:44.790
microwaves.

00:05:44.790 --> 00:05:46.700
No platforms excluded.

00:05:46.700 --> 00:05:48.980
We're offering generated
libraries in lots of different

00:05:48.980 --> 00:05:51.420
languages in addition to custom
library specifically

00:05:51.420 --> 00:05:53.420
geared towards mobile games.

00:05:53.420 --> 00:05:54.865
So let's talk more about
those custom libraries.

00:06:00.030 --> 00:06:01.340
Our custom libraries
are specifically

00:06:01.340 --> 00:06:02.800
built for iOS and Android.

00:06:02.800 --> 00:06:04.490
We recognize these
as the common use

00:06:04.490 --> 00:06:06.240
cases at the moment.

00:06:06.240 --> 00:06:08.260
The libraries simplify
development by taking care of

00:06:08.260 --> 00:06:09.120
a lot of details.

00:06:09.120 --> 00:06:12.050
So for example, some of the
nasty edge cases in OAuth 2.0.

00:06:12.050 --> 00:06:13.300
And I'm sure there's some people
out there who know what

00:06:13.300 --> 00:06:15.130
I'm talking about.

00:06:15.130 --> 00:06:17.370
The libraries also offer a
lot of extra good stuff.

00:06:17.370 --> 00:06:19.900
So for example, auto-retry
if your gamer happens

00:06:19.900 --> 00:06:21.280
to go into a tunnel.

00:06:21.280 --> 00:06:22.960
Air handling and trapping.

00:06:22.960 --> 00:06:24.710
A whole set of UX widgets
that you can drop

00:06:24.710 --> 00:06:25.980
right into your game.

00:06:25.980 --> 00:06:28.930
Also caching to reduce network
use and prevent your game from

00:06:28.930 --> 00:06:30.380
draining the battery.

00:06:30.380 --> 00:06:32.210
All the code samples in this
presentation use these

00:06:32.210 --> 00:06:35.170
libraries, and you
should as well.

00:06:35.170 --> 00:06:37.560
So as you probably expect,
library integration differs

00:06:37.560 --> 00:06:38.945
between iOS and Android.

00:06:38.945 --> 00:06:41.590
On iOS, you download a
framework, and then you add it

00:06:41.590 --> 00:06:42.420
to your project.

00:06:42.420 --> 00:06:44.510
Every time you update that
framework, you need to publish

00:06:44.510 --> 00:06:46.200
a new app update which
your users need to

00:06:46.200 --> 00:06:47.690
go and get and install.

00:06:47.690 --> 00:06:50.020
This is a standard,
well-understood of the life

00:06:50.020 --> 00:06:52.750
cycle flow for iOS
application.

00:06:52.750 --> 00:06:54.840
On Android, we have a thin
client that talks

00:06:54.840 --> 00:06:56.610
to on-device service.

00:06:56.610 --> 00:06:59.290
The client library is in the
Android SDK, which you see

00:06:59.290 --> 00:07:00.910
here in the lower right.

00:07:00.910 --> 00:07:03.100
The core functionality for
Play game services is in

00:07:03.100 --> 00:07:04.460
Google Play services.

00:07:04.460 --> 00:07:06.290
And this service is being
updated on all your gamers'

00:07:06.290 --> 00:07:09.130
phones even as we speak
here today.

00:07:09.130 --> 00:07:10.590
So what does this mean?

00:07:10.590 --> 00:07:12.890
Well, it means that Play game
services updates and bug

00:07:12.890 --> 00:07:14.930
fixes, we automatically
distribute it to all your

00:07:14.930 --> 00:07:17.540
gamers without them having
to do anything.

00:07:17.540 --> 00:07:19.250
We really like this design
because we think it's going to

00:07:19.250 --> 00:07:21.445
be a great benefit to both
developers and your gamers.

00:07:23.980 --> 00:07:25.960
So there are many other benefits
to integrating Play

00:07:25.960 --> 00:07:27.270
game services on Android.

00:07:27.270 --> 00:07:29.470
And one of them is the
introduction of additional

00:07:29.470 --> 00:07:31.790
anti-piracy protection for games
that are distributed

00:07:31.790 --> 00:07:34.610
through the Play store.

00:07:34.610 --> 00:07:35.900
I love that.

00:07:35.900 --> 00:07:38.000
All right, so the games team
shares your concerns about the

00:07:38.000 --> 00:07:39.340
impact of piracy on games.

00:07:39.340 --> 00:07:42.140
I mean not every Android game
has to be free to play.

00:07:42.140 --> 00:07:44.830
We'd much rather you guys have
a choice in the matter.

00:07:44.830 --> 00:07:46.200
So how does this work?

00:07:46.200 --> 00:07:49.440
Well, our backend server can
detect when a player hasn't

00:07:49.440 --> 00:07:51.380
downloaded the game from
the Play store.

00:07:51.380 --> 00:07:54.300
And we can return an error to
the game if you so choose, and

00:07:54.300 --> 00:07:56.750
then you can decide what
your games does next.

00:07:56.750 --> 00:07:58.960
This means that you can choose
whether or not to let pirated

00:07:58.960 --> 00:08:00.690
games use Play game services.

00:08:00.690 --> 00:08:02.100
So for example, multiplayer.

00:08:02.100 --> 00:08:04.500
You can choose a pirated
game to not let it

00:08:04.500 --> 00:08:06.510
use multiplayer features.

00:08:06.510 --> 00:08:08.500
You can turn this on or off
via our developer tools.

00:08:08.500 --> 00:08:12.200
And we'll be getting into that
more in just a second.

00:08:12.200 --> 00:08:14.210
Play games services also
brings significant

00:08:14.210 --> 00:08:15.590
enhancements to discovery.

00:08:15.590 --> 00:08:17.360
And one of these is the
introduction of badging in a

00:08:17.360 --> 00:08:19.140
Play store.

00:08:19.140 --> 00:08:21.350
This highlights games that use
Play game services that a

00:08:21.350 --> 00:08:22.380
gamer might find interesting.

00:08:22.380 --> 00:08:24.500
So for example, this game uses
leader boards, achievements,

00:08:24.500 --> 00:08:25.740
and multiplayer.

00:08:25.740 --> 00:08:27.690
This will make it easier for
gamers to find games that

00:08:27.690 --> 00:08:29.360
interest them.

00:08:29.360 --> 00:08:30.370
OK, so enough intro.

00:08:30.370 --> 00:08:31.420
Let's dive into an example.

00:08:31.420 --> 00:08:33.360
TODD KERPELMAN: All right.

00:08:33.360 --> 00:08:36.799
So this is our studio's hot
new game, Angry Fruit.

00:08:36.799 --> 00:08:39.010
This is a game where you help
fruit resolve their anger

00:08:39.010 --> 00:08:40.789
issues through active
listening and

00:08:40.789 --> 00:08:42.419
deep breathing exercises.

00:08:42.419 --> 00:08:46.260
And we did check, a tomato
is a fruit so it counts.

00:08:46.260 --> 00:08:47.380
We think this is going
to be the hot

00:08:47.380 --> 00:08:48.270
new game of the summer.

00:08:48.270 --> 00:08:50.810
However, early play tests have
shown that the game has two

00:08:50.810 --> 00:08:52.340
significant issues.

00:08:52.340 --> 00:08:55.190
First, nobody's really trying
out Blended Fruit Mode.

00:08:55.190 --> 00:08:56.050
We don't know why.

00:08:56.050 --> 00:08:56.820
Maybe it's the name.

00:08:56.820 --> 00:08:59.310
Maybe they can't find
it in the menu.

00:08:59.310 --> 00:09:01.710
Second, Endless Mode isn't
retaining particularly well.

00:09:01.710 --> 00:09:04.730
People do try it, but then they
kind of give up after one

00:09:04.730 --> 00:09:05.640
or two plays.

00:09:05.640 --> 00:09:08.230
So let's think about how we
would solve these problems by

00:09:08.230 --> 00:09:11.040
adding some Google Play
game services love.

00:09:11.040 --> 00:09:14.120
And the first thing we need to
do is visit the new Google

00:09:14.120 --> 00:09:16.300
Play Developer Console.

00:09:16.300 --> 00:09:18.730
You might recognize this console
if you have uploaded

00:09:18.730 --> 00:09:20.540
or published any Android
games in the past.

00:09:20.540 --> 00:09:23.470
And if you're here at Google I/O
in the Android track, I'm

00:09:23.470 --> 00:09:25.110
guessing maybe you have.

00:09:25.110 --> 00:09:27.660
What might be new, however, is
this little controller icon

00:09:27.660 --> 00:09:29.090
here on the left.

00:09:29.090 --> 00:09:29.960
There it is.

00:09:29.960 --> 00:09:33.360
So following this will take you
to the new game services

00:09:33.360 --> 00:09:34.600
section of the console.

00:09:34.600 --> 00:09:37.130
And this is where we could add
a new entry for our Angry

00:09:37.130 --> 00:09:38.520
Fruit game.

00:09:38.520 --> 00:09:41.910
We would add our game's
name and description.

00:09:41.910 --> 00:09:44.720
We would add a few graphics,
and these would basically

00:09:44.720 --> 00:09:47.910
determine how this game would
appear throughout our service.

00:09:47.910 --> 00:09:50.290
At this point, we could link
our game to an Android

00:09:50.290 --> 00:09:51.250
application.

00:09:51.250 --> 00:09:54.390
You can link the same game entry
to both an Android and

00:09:54.390 --> 00:09:57.450
an iOS application if you wanted
them to share leader

00:09:57.450 --> 00:09:59.000
boards and achievements.

00:09:59.000 --> 00:10:00.790
You could also keep them
completely separate.

00:10:00.790 --> 00:10:03.250
If it turns out the browser
version of Angry Fruit is

00:10:03.250 --> 00:10:05.170
significantly different than
the mobile version, and we

00:10:05.170 --> 00:10:07.800
don't really want them to share
leader boards, we can

00:10:07.800 --> 00:10:09.600
basically have two entries
and just keep them

00:10:09.600 --> 00:10:10.780
separate that way.

00:10:10.780 --> 00:10:12.390
It's basically up to you
as developers what

00:10:12.390 --> 00:10:14.240
you'd like to do.

00:10:14.240 --> 00:10:16.860
There's a whole lot more, by the
way, that this Developer

00:10:16.860 --> 00:10:19.620
Console does, including creating
OAuth 2 client IDs

00:10:19.620 --> 00:10:22.590
for you, publishing just to
trusted testers, adding

00:10:22.590 --> 00:10:25.180
localization support, adding
seasonal updates,

00:10:25.180 --> 00:10:26.230
and much, much more.

00:10:26.230 --> 00:10:28.860
If you are interested, drop by
the Practical Play Games

00:10:28.860 --> 00:10:31.270
Pointers talk that is
immediately following this

00:10:31.270 --> 00:10:32.920
one, but I think over
in room five.

00:10:32.920 --> 00:10:35.880
So you're going to have walk.

00:10:35.880 --> 00:10:37.550
All right, so that was
a lot of setup talk.

00:10:37.550 --> 00:10:40.750
Let's talk about adding some
code starting with the Android

00:10:40.750 --> 00:10:42.770
version, which is something
I know nothing about.

00:10:42.770 --> 00:10:45.820
So it's a really good
thing Dave is here.

00:10:45.820 --> 00:10:48.080
DAVE SANTORO: Thanks, Todd.

00:10:48.080 --> 00:10:50.170
So to integrate with our
services on Android, the main

00:10:50.170 --> 00:10:52.730
class you'll be working with
is called GamesClient.

00:10:52.730 --> 00:10:54.320
This basically provides
the entry point

00:10:54.320 --> 00:10:56.160
to Google Play services.

00:10:56.160 --> 00:10:58.950
It handles getting the user
connected and signed in and in

00:10:58.950 --> 00:11:01.010
a good state to interact
with your game.

00:11:01.010 --> 00:11:03.880
And it takes care of, basically,
providing all the

00:11:03.880 --> 00:11:09.060
access to the APIs that you
have through our service.

00:11:09.060 --> 00:11:12.640
So generally when you're
creating a GamesClient, you'll

00:11:12.640 --> 00:11:14.440
need to hook this into
your activity or

00:11:14.440 --> 00:11:16.540
fragments life cycle.

00:11:16.540 --> 00:11:18.860
We basically want to make sure
that you don't keep the

00:11:18.860 --> 00:11:21.860
service connection around
longer than necessary.

00:11:21.860 --> 00:11:23.660
So the main pattern that we
recommend is that you'll

00:11:23.660 --> 00:11:26.520
create the GamesClient in
your onCreate method.

00:11:26.520 --> 00:11:28.150
And as you can see, it takes
three parameters to

00:11:28.150 --> 00:11:28.920
create one of these.

00:11:28.920 --> 00:11:30.700
You'll need to pass
in a context.

00:11:30.700 --> 00:11:32.810
You'll need to pass in a
connection call back listener

00:11:32.810 --> 00:11:34.160
and a connection failed
listener.

00:11:34.160 --> 00:11:35.910
And if you're using an activity
or fragment, all

00:11:35.910 --> 00:11:38.560
these can just be
the same thing.

00:11:38.560 --> 00:11:41.140
Next, we'll handle connecting
and disconnecting the client.

00:11:41.140 --> 00:11:43.000
For this, we recommend that
you just hook these into

00:11:43.000 --> 00:11:44.850
onStart and onStop methods.

00:11:44.850 --> 00:11:46.590
We just want to make sure
they stay symmetrical.

00:11:46.590 --> 00:11:50.280
So anything you create,
you also clean up.

00:11:50.280 --> 00:11:52.720
Next, we'll handle connection
failure case.

00:11:52.720 --> 00:11:53.990
So there are a couple different
things that could

00:11:53.990 --> 00:11:55.740
cause connection failure.

00:11:55.740 --> 00:11:58.930
The most common case is that
the user isn't signed in.

00:11:58.930 --> 00:12:00.790
If that's the case, the
connection results that you

00:12:00.790 --> 00:12:04.190
get back from this call will
give you a resolution intent.

00:12:04.190 --> 00:12:06.200
And all you need to do is launch
that intent, and this

00:12:06.200 --> 00:12:07.970
will take the user through
the sign in flow.

00:12:07.970 --> 00:12:09.760
Get them signed up for
G+, if necessary.

00:12:09.760 --> 00:12:13.020
Get them into a good state
to use the service.

00:12:13.020 --> 00:12:15.820
Another possibility is that
something more broadly is

00:12:15.820 --> 00:12:17.610
wrong with the device.

00:12:17.610 --> 00:12:19.440
So for example, maybe they don't
have the latest version

00:12:19.440 --> 00:12:20.970
of Google Play services.

00:12:20.970 --> 00:12:23.040
If that's the case, you can use
this Google Play services

00:12:23.040 --> 00:12:24.760
util method to get
an error dialog.

00:12:24.760 --> 00:12:26.760
Display that to the user and
this will walk them through

00:12:26.760 --> 00:12:29.660
what they need to do to
get into a good state.

00:12:29.660 --> 00:12:32.140
This may seem a little bit heavy
weight, but really all

00:12:32.140 --> 00:12:33.820
the code up here is just
kind of boilerplate.

00:12:33.820 --> 00:12:35.470
And you won't need to do
much different than

00:12:35.470 --> 00:12:37.890
what this is showing.

00:12:37.890 --> 00:12:39.830
Finally, we'll handle
connection success.

00:12:39.830 --> 00:12:41.930
If you get the onConnected
callback, it means everything

00:12:41.930 --> 00:12:42.570
is ready to go.

00:12:42.570 --> 00:12:45.080
You can call any of the other
APIs that we support through

00:12:45.080 --> 00:12:46.450
GamesClient.

00:12:46.450 --> 00:12:48.870
You don't necessarily need
to do anything here.

00:12:48.870 --> 00:12:52.320
Some of our Trusted Tester games
have done things like

00:12:52.320 --> 00:12:54.810
get the user's name and show it
in-game to make it really

00:12:54.810 --> 00:12:56.465
clear who the user
is playing as.

00:12:56.465 --> 00:13:00.720
But you can do whatever
else you need to do.

00:13:00.720 --> 00:13:02.240
TODD KERPELMAN: All right, so
before I start talking about

00:13:02.240 --> 00:13:04.170
the iOS implementation,
just show of hands.

00:13:04.170 --> 00:13:06.996
Who here does iOS development
on a regular basis?

00:13:06.996 --> 00:13:08.550
All right. there's
a few of you.

00:13:08.550 --> 00:13:11.310
Everyone else, get them!

00:13:11.310 --> 00:13:13.910
Everyone check your email or
just look at all the brackets,

00:13:13.910 --> 00:13:15.160
it's up to you.

00:13:18.300 --> 00:13:22.170
So the first thing you want to
do in iOS is set up your

00:13:22.170 --> 00:13:23.890
GPPSignIn object.

00:13:23.890 --> 00:13:26.330
This is a process that you've
done already if you've

00:13:26.330 --> 00:13:29.470
implemented Google+ sign-in in
any of your applications.

00:13:29.470 --> 00:13:32.640
Basically, you're going to
access this shared singleton

00:13:32.640 --> 00:13:35.400
instance, and then you're
going to set a number of

00:13:35.400 --> 00:13:36.090
properties on it.

00:13:36.090 --> 00:13:38.330
You'll set your Auth client
ID, your default

00:13:38.330 --> 00:13:39.870
language, and so on.

00:13:39.870 --> 00:13:41.520
The one thing that should
probably look different to you

00:13:41.520 --> 00:13:43.626
is this scope.

00:13:43.626 --> 00:13:45.910
I should look over
this shoulder.

00:13:45.910 --> 00:13:47.880
This is the game scope,
and this is

00:13:47.880 --> 00:13:49.050
obviously for game services.

00:13:49.050 --> 00:13:52.220
You would do this instead
of the plus.login scope.

00:13:52.220 --> 00:13:54.580
Games is kind of a superset,
so you don't need this in

00:13:54.580 --> 00:13:56.780
addition to plus.login.

00:13:56.780 --> 00:13:59.230
Once that happens, you would
call authenticate.

00:13:59.230 --> 00:14:02.770
You could either do this through
your own game engine

00:14:02.770 --> 00:14:03.510
rendered button.

00:14:03.510 --> 00:14:05.570
Or if you're using the official
Google+ sign-in

00:14:05.570 --> 00:14:07.510
button, it makes this
call for you.

00:14:07.510 --> 00:14:08.940
At that point, the user
will be taken

00:14:08.940 --> 00:14:10.420
to the sign-in process.

00:14:10.420 --> 00:14:12.670
And assuming they click accept,
they'll come back to

00:14:12.670 --> 00:14:15.170
your application, and that
moment will be captured here

00:14:15.170 --> 00:14:15.800
in the finished

00:14:15.800 --> 00:14:17.880
finishedWithAuth:error handler.

00:14:17.880 --> 00:14:19.980
At this point, you would check
if there any errors.

00:14:19.980 --> 00:14:22.350
The most common one is the
user clicked Cancel.

00:14:22.350 --> 00:14:24.340
But if they didn't,
we'll assume that

00:14:24.340 --> 00:14:25.620
everything went well.

00:14:25.620 --> 00:14:29.350
And at that point, you can
take your GPPSignIn

00:14:29.350 --> 00:14:30.660
sharedInstance--

00:14:30.660 --> 00:14:31.280
there we go--

00:14:31.280 --> 00:14:34.300
and you can pass it in
to your GPGManager.

00:14:34.300 --> 00:14:37.360
GPGManager here is for Google
Play games manager.

00:14:37.360 --> 00:14:41.630
And this is kind of the master
class that handles all of the

00:14:41.630 --> 00:14:45.380
main game services
for your app.

00:14:45.380 --> 00:14:47.390
You would also add a reauthorize
handler, and this

00:14:47.390 --> 00:14:50.690
basically specifies what to do
if Auth fails for some reason.

00:14:50.690 --> 00:14:52.070
9 times out of 10, the
right thing to do

00:14:52.070 --> 00:14:53.990
is try Authing again.

00:14:53.990 --> 00:14:56.960
At this point, the user should
be signed in to game services.

00:14:56.960 --> 00:14:59.120
They'll see a little "welcome
back, Todd" message at the top

00:14:59.120 --> 00:15:00.260
of their app.

00:15:00.260 --> 00:15:02.430
Results might be different
if your name isn't Todd.

00:15:02.430 --> 00:15:04.680
And at that point, they're ready
to go and implement some

00:15:04.680 --> 00:15:05.660
game services.

00:15:05.660 --> 00:15:06.880
So let's add in achievements.

00:15:06.880 --> 00:15:07.610
What do you think, Steve?

00:15:07.610 --> 00:15:08.860
STEVE MARTIN: I think there's
a great idea.

00:15:11.180 --> 00:15:13.420
So we think achievements are
super important in games for a

00:15:13.420 --> 00:15:14.810
couple of different reasons.

00:15:14.810 --> 00:15:16.450
So first of all, they give
players a feeling of

00:15:16.450 --> 00:15:17.240
accomplishment.

00:15:17.240 --> 00:15:18.090
I mean, I did something.

00:15:18.090 --> 00:15:19.080
The game recognizes that.

00:15:19.080 --> 00:15:19.880
Pops a nice toast.

00:15:19.880 --> 00:15:20.440
I get an achievement.

00:15:20.440 --> 00:15:22.080
I feel good.

00:15:22.080 --> 00:15:23.500
And secondly, they give
your hardcore players

00:15:23.500 --> 00:15:24.350
something to aim for.

00:15:24.350 --> 00:15:26.460
So I got that rare headshot
achievement.

00:15:26.460 --> 00:15:27.470
None of my buddies have it.

00:15:27.470 --> 00:15:29.130
Serious bragging rights.

00:15:29.130 --> 00:15:32.120
Thirdly, they encourage
exploration and repeat play.

00:15:32.120 --> 00:15:33.710
So I can personally
attest to that.

00:15:33.710 --> 00:15:36.280
I've stayed up way too late
multiple times, possibly even

00:15:36.280 --> 00:15:38.040
this week, in trying to get
all the achievements in a

00:15:38.040 --> 00:15:39.900
particular game.

00:15:39.900 --> 00:15:41.810
And finally, they can drive
player behavior.

00:15:41.810 --> 00:15:44.520
So your solo player might be
enticed to give multiplayer a

00:15:44.520 --> 00:15:47.490
shot if there's an achievement
for it.

00:15:47.490 --> 00:15:48.840
So achievements look
like this in the

00:15:48.840 --> 00:15:50.040
client UI that we provide.

00:15:50.040 --> 00:15:51.420
This is the iOS version.

00:15:51.420 --> 00:15:53.050
You can actually make your own
client UI, and we'll be

00:15:53.050 --> 00:15:55.160
talking more about how
to do that later.

00:15:55.160 --> 00:15:56.420
There are three states.

00:15:56.420 --> 00:15:58.470
Unlock, hidden, and locked.

00:15:58.470 --> 00:16:00.265
Unlocked and locked work pretty
much exactly as you

00:16:00.265 --> 00:16:01.000
would expect.

00:16:01.000 --> 00:16:03.030
And hidden lets your game choose
when to reveal the

00:16:03.030 --> 00:16:05.700
existence of this achievement
to the player.

00:16:05.700 --> 00:16:07.480
We have two flavors
of achievements.

00:16:07.480 --> 00:16:09.290
What I like to call traditional,
which has just

00:16:09.290 --> 00:16:11.720
the three states that I talked
about previously, and also

00:16:11.720 --> 00:16:13.180
incremental, which records
additional

00:16:13.180 --> 00:16:14.850
progress towards an unlock.

00:16:14.850 --> 00:16:16.280
All the states for these
achievements

00:16:16.280 --> 00:16:17.460
is kept on the server.

00:16:17.460 --> 00:16:21.230
There's nothing for you to do
locally except ask the server.

00:16:21.230 --> 00:16:24.260
OK, so if you remember our Angry
Fruit example, we had a

00:16:24.260 --> 00:16:24.950
problem with it.

00:16:24.950 --> 00:16:27.290
And that was nobody was trying
Blended Fruit Mode.

00:16:27.290 --> 00:16:29.940
So why don't we try and entice
users to explore this mode by

00:16:29.940 --> 00:16:31.990
adding an achievement?

00:16:31.990 --> 00:16:32.550
So let's do it.

00:16:32.550 --> 00:16:34.450
We're going to add an
achievement for completing 10

00:16:34.450 --> 00:16:35.920
levels of Blended Fruit Mode.

00:16:35.920 --> 00:16:38.220
We're going to call that
achievement Smoothie Operator.

00:16:38.220 --> 00:16:41.120
So here's how we set it up in
the Play Developer Console.

00:16:41.120 --> 00:16:42.200
First, the basics.

00:16:42.200 --> 00:16:43.820
You need to give us a name
and a description.

00:16:43.820 --> 00:16:45.680
These are localizable, and we'll
be discussing that in a

00:16:45.680 --> 00:16:46.845
talk later today.

00:16:46.845 --> 00:16:48.880
These will also appear in the
client UI that I showed a few

00:16:48.880 --> 00:16:51.120
slides back.

00:16:51.120 --> 00:16:52.840
From there, we'll
need an icon.

00:16:52.840 --> 00:16:54.460
We need to know the type
of the achievement.

00:16:54.460 --> 00:16:55.500
In this case, it's
incremental.

00:16:55.500 --> 00:16:57.820
Remember, 10 levels of
Blended Fruit Mode.

00:16:57.820 --> 00:16:58.860
We need to know the
initial state.

00:16:58.860 --> 00:17:01.830
So in this case, it's revealed
so the user knows whether or

00:17:01.830 --> 00:17:03.820
not the achievement
actually exists.

00:17:03.820 --> 00:17:05.880
We need to know a measure of
this achievement's importance.

00:17:05.880 --> 00:17:07.359
And we express that
via points.

00:17:07.359 --> 00:17:09.260
We don't do anything with the
points right now, but we have

00:17:09.260 --> 00:17:10.700
big plans for it later.

00:17:10.700 --> 00:17:12.910
And finally, where to show this
achievement in a list of

00:17:12.910 --> 00:17:13.300
achievements.

00:17:13.300 --> 00:17:15.890
And in this case, it
shows up first.

00:17:15.890 --> 00:17:17.290
So once it's saved--

00:17:17.290 --> 00:17:17.790
bam.

00:17:17.790 --> 00:17:18.560
You get back an ID.

00:17:18.560 --> 00:17:20.339
You use this in the code to
refer this achievement.

00:17:20.339 --> 00:17:22.660
And while we're at , let's
add a couple other ones.

00:17:22.660 --> 00:17:24.550
We'll add a Fruit Whisperer
achievement for winning the

00:17:24.550 --> 00:17:26.589
game and then a Top Banana
achievement, which is a hidden

00:17:26.589 --> 00:17:28.830
achievement, for winning
the bonus level.

00:17:28.830 --> 00:17:31.800
So let's hook these up.

00:17:31.800 --> 00:17:33.720
DAVE SANTORO: All
right, great.

00:17:33.720 --> 00:17:35.250
So we have some achievements.

00:17:35.250 --> 00:17:38.960
On Android, you hook
them up like this.

00:17:38.960 --> 00:17:41.260
First thing we'll do is create
some local string constants.

00:17:41.260 --> 00:17:42.857
We don't want to be referring
to those gnarly strings from

00:17:42.857 --> 00:17:43.730
the Play Console everywhere.

00:17:43.730 --> 00:17:45.990
So we'll create some local
constants here for Smoothie

00:17:45.990 --> 00:17:48.640
Operator and for Fruit Whisperer
and Top Banana, and

00:17:48.640 --> 00:17:51.360
all the other achievements
that we've defined.

00:17:51.360 --> 00:17:53.720
Now we'll do the handler for
when a user wins the game.

00:17:53.720 --> 00:17:56.130
So in this handler, the first
thing we want to do is unlock

00:17:56.130 --> 00:17:58.335
the Fruit Whisperer achievement,
because we want

00:17:58.335 --> 00:18:01.090
to unlock that anytime the
user wins the game.

00:18:01.090 --> 00:18:03.060
You'll notice that in this
case, we're calling this

00:18:03.060 --> 00:18:04.670
without any listener
attached to it.

00:18:04.670 --> 00:18:05.880
This is what we call
the fire-and-forget

00:18:05.880 --> 00:18:07.950
form of these APIs.

00:18:07.950 --> 00:18:10.200
Regardless of whether you're
listening or not, this will

00:18:10.200 --> 00:18:11.460
basically go to the service.

00:18:11.460 --> 00:18:12.950
The service will keep retrying
to the server if

00:18:12.950 --> 00:18:14.290
the device is offline.

00:18:14.290 --> 00:18:17.370
You don't need to worry about
it anymore as a developer.

00:18:17.370 --> 00:18:19.400
For our incremental achievement,
we do care about

00:18:19.400 --> 00:18:20.520
the result.

00:18:20.520 --> 00:18:25.740
So in this case, we're going to
call the Smoothie Operator

00:18:25.740 --> 00:18:29.530
achievement in a mode that
contains a listener.

00:18:29.530 --> 00:18:31.660
So in this case, we call
incrementAchievementimmediate,

00:18:31.660 --> 00:18:33.500
which means we want this to
go out to the network

00:18:33.500 --> 00:18:33.835
immediately.

00:18:33.835 --> 00:18:35.630
And we want to hear what
the result was.

00:18:35.630 --> 00:18:37.955
We pass in the listener, and we
pass in the number of steps

00:18:37.955 --> 00:18:40.250
to increment it by.

00:18:40.250 --> 00:18:42.880
So the listeners all look
something like this.

00:18:42.880 --> 00:18:44.740
You'll always get back a status
code, and this lets you

00:18:44.740 --> 00:18:47.380
know basically what happened
when you did this operation.

00:18:47.380 --> 00:18:50.520
Maybe the device was offline,
maybe it was successful.

00:18:50.520 --> 00:18:53.670
You could look at the Java doc
for the listeners to see what

00:18:53.670 --> 00:18:56.910
status codes you might expect,
and what all those signify.

00:18:56.910 --> 00:18:59.400
In this case, what we'll do is
check to see was this the

00:18:59.400 --> 00:19:00.960
Smoothie Operator achievement?

00:19:00.960 --> 00:19:02.340
And was it finally unlocked?

00:19:02.340 --> 00:19:05.210
And if that's the case, we'll do
a couple different things.

00:19:05.210 --> 00:19:07.445
First, in game, we'll enable the
bonus stage for the user,

00:19:07.445 --> 00:19:09.330
because we want unlock some
additional content for them in

00:19:09.330 --> 00:19:10.870
response to this achievement.

00:19:10.870 --> 00:19:13.230
And then we'll reveal the
achievement for Top Banana,

00:19:13.230 --> 00:19:17.280
which they'll earn by completing
the bonus level.

00:19:17.280 --> 00:19:19.130
So how do we display
achievements?

00:19:19.130 --> 00:19:21.630
Whether you pass in a listener
or not, a toast just popped up

00:19:21.630 --> 00:19:21.940
automatically.

00:19:21.940 --> 00:19:24.160
It looks something like this.

00:19:24.160 --> 00:19:25.950
If you don't want your pop-up
to display at the top of the

00:19:25.950 --> 00:19:27.940
screen, you can very easily
control that.

00:19:27.940 --> 00:19:30.380
There are some methods on
GamesClient Builder that let

00:19:30.380 --> 00:19:33.680
you set the particular view that
you want to anchor all of

00:19:33.680 --> 00:19:36.426
our pop-ups to, as well as which
part of the screen you

00:19:36.426 --> 00:19:37.040
want to display it in.

00:19:37.040 --> 00:19:39.060
So if we want to show in the
corner or on the bottom

00:19:39.060 --> 00:19:42.130
instead of the top, you can do
that using these methods.

00:19:42.130 --> 00:19:44.130
It's also really easy to
bring up our in-game

00:19:44.130 --> 00:19:44.660
achievements widget.

00:19:44.660 --> 00:19:46.255
This is what it looks
like on Android.

00:19:46.255 --> 00:19:48.040
All you have to do is ask
the GamesClient for the

00:19:48.040 --> 00:19:49.950
achievement's intent
and launch that.

00:19:49.950 --> 00:19:51.200
And you're good to go.

00:19:53.210 --> 00:19:56.090
So we recognize that not
everybody wants to use the

00:19:56.090 --> 00:19:57.680
stock achievement widgets.

00:19:57.680 --> 00:20:00.586
So we want to have the ability
for you to build your own.

00:20:00.586 --> 00:20:02.790
To that end, you can ask
the GamesClient to load

00:20:02.790 --> 00:20:04.140
achievements.

00:20:04.140 --> 00:20:06.160
And in the call back for that,
you'll get back an achievement

00:20:06.160 --> 00:20:08.430
buffer that contains all the
achievements that you've

00:20:08.430 --> 00:20:10.430
defined along with the user's
progression on each.

00:20:13.240 --> 00:20:14.270
TODD KERPELMAN: All right,
let's talk about

00:20:14.270 --> 00:20:16.740
achievements on iOS.

00:20:16.740 --> 00:20:19.350
All achievements, basically, you
interact with by creating

00:20:19.350 --> 00:20:21.240
a GPGAchievement object.

00:20:21.240 --> 00:20:23.670
And you do that by calling
this helper class method

00:20:23.670 --> 00:20:25.000
achievement with ID.

00:20:25.000 --> 00:20:26.580
And here we're passing
in the NSString.

00:20:26.580 --> 00:20:28.410
That's the hardcoded string
we got back from

00:20:28.410 --> 00:20:30.160
the Developer Console.

00:20:30.160 --> 00:20:31.780
Once we have this, we
can interact with it

00:20:31.780 --> 00:20:33.030
in a number of ways.

00:20:36.250 --> 00:20:36.745
There we go.

00:20:36.745 --> 00:20:39.280
We can unlock our achievements
by calling our

00:20:39.280 --> 00:20:41.370
unlockAchievemen
etWithCompletionHandler method

00:20:41.370 --> 00:20:44.550
because we're in iOS, and we
like really long method names.

00:20:44.550 --> 00:20:46.030
My handler here is set to nil.

00:20:46.030 --> 00:20:49.830
But really I should be setting
my call back here so that I

00:20:49.830 --> 00:20:51.610
can check for any errors.

00:20:51.610 --> 00:20:54.270
I can also find out whether
this was a newly unlocked

00:20:54.270 --> 00:20:55.370
achievement by the user.

00:20:55.370 --> 00:20:57.400
Again, you don't need to keep
track of this on the client.

00:20:57.400 --> 00:20:58.650
The server will keep
track for you.

00:21:01.810 --> 00:21:04.480
We can increment our Smoothie
Operator achievement by

00:21:04.480 --> 00:21:06.700
calling
incrementAchievementNumSteps--

00:21:06.700 --> 00:21:08.980
NumSteps is the amount of
progress you're making--

00:21:08.980 --> 00:21:10.650
and then another
completionHandler, where we

00:21:10.650 --> 00:21:13.220
tell you was this newly unlocked
and how much total

00:21:13.220 --> 00:21:16.090
progress has the user made
up until this point.

00:21:16.090 --> 00:21:18.240
At this point, we decide, hey,
this is a newly unlocked

00:21:18.240 --> 00:21:18.770
achievement.

00:21:18.770 --> 00:21:20.000
We'll unlock our bonus level.

00:21:20.000 --> 00:21:22.810
And we can also reveal the
previously hidden Top Banana

00:21:22.810 --> 00:21:25.615
achievement, which we would do
by calling revealAchievemen

00:21:25.615 --> 00:21:27.790
tWithCompletionHandler.

00:21:27.790 --> 00:21:30.170
Hopefully, all that is pretty
straightforward.

00:21:30.170 --> 00:21:33.720
Notifications are brought up
automatically by the library.

00:21:33.720 --> 00:21:36.400
However, we know that maybe
on iOS there are other

00:21:36.400 --> 00:21:38.230
achievement systems you
might be implementing.

00:21:38.230 --> 00:21:39.880
So we give you the option
to hide these

00:21:39.880 --> 00:21:41.410
notifications if you want.

00:21:41.410 --> 00:21:42.960
So bye.

00:21:42.960 --> 00:21:44.960
It's very simple to bring up
the achievement widget.

00:21:44.960 --> 00:21:46.310
It's about three
lines of code.

00:21:46.310 --> 00:21:49.870
And this is basically all UI
generated by our library that

00:21:49.870 --> 00:21:52.420
displays all of the user's
progress to them in terms of

00:21:52.420 --> 00:21:55.140
the amount of achievements
they've earned and unlocked.

00:21:55.140 --> 00:21:57.550
and we also have raw
data APIs if you

00:21:57.550 --> 00:21:59.050
want to do this yourself.

00:21:59.050 --> 00:22:01.680
And so with our achievements
done, let's add a leaderboard.

00:22:01.680 --> 00:22:02.440
STEVE MARTIN: Yes.

00:22:02.440 --> 00:22:03.240
Leaderboards.

00:22:03.240 --> 00:22:05.630
So we feel that this is a super
important engagement

00:22:05.630 --> 00:22:06.600
tool for developers.

00:22:06.600 --> 00:22:08.740
And the primary reason why is
that it's probably not a

00:22:08.740 --> 00:22:10.630
stretch to say that most
players like comparing

00:22:10.630 --> 00:22:12.490
themselves against
other gamers.

00:22:12.490 --> 00:22:14.120
And leaderboards can
help with this.

00:22:14.120 --> 00:22:15.980
They bring a simple, lightweight
competitive

00:22:15.980 --> 00:22:17.140
element to your game.

00:22:17.140 --> 00:22:19.310
They'll make your games
much more engaging.

00:22:19.310 --> 00:22:20.670
So we've built two types
of leaderboards

00:22:20.670 --> 00:22:22.490
in Play game services.

00:22:22.490 --> 00:22:24.870
The first of these is public
leaderboards, and this is your

00:22:24.870 --> 00:22:27.540
score compared to the scores of
everyone else in the world

00:22:27.540 --> 00:22:30.400
who have also chosen to show
their scores publicly.

00:22:30.400 --> 00:22:32.420
And if you can't make it to the
top all-time across the

00:22:32.420 --> 00:22:33.880
entire world, well that's OK.

00:22:33.880 --> 00:22:34.890
We got your back.

00:22:34.890 --> 00:22:36.620
You can try any other
timespans we offer--

00:22:36.620 --> 00:22:38.640
weekly and daily.

00:22:38.640 --> 00:22:40.150
So comparing yourself
to a list of total

00:22:40.150 --> 00:22:41.490
strangers can be fun.

00:22:41.490 --> 00:22:44.200
I mean, we all remember the
arcade days when there were

00:22:44.200 --> 00:22:45.960
lists of unintelligible
initials.

00:22:45.960 --> 00:22:47.180
No idea who these people were.

00:22:47.180 --> 00:22:49.640
You just know that you put in
a quarter, and you beat XYZ.

00:22:49.640 --> 00:22:51.100
And that's pretty cool.

00:22:51.100 --> 00:22:54.140
Well, imagine instead of that
experience, you had a list of

00:22:54.140 --> 00:22:56.980
people with profiles
and names.

00:22:56.980 --> 00:22:59.380
And these were all people
that you actually knew.

00:22:59.380 --> 00:23:01.970
And furthermore, these are all
people that you know that

00:23:01.970 --> 00:23:04.240
actually have lower scores
than you now.

00:23:04.240 --> 00:23:06.400
So we think that's a much more
engaging experience.

00:23:06.400 --> 00:23:09.580
So we are also adding
social leaderboards.

00:23:09.580 --> 00:23:11.880
And what this will do is let you
compare your score to the

00:23:11.880 --> 00:23:13.850
scores of your friends,
your family,

00:23:13.850 --> 00:23:15.660
anyone in your G+ Circles.

00:23:15.660 --> 00:23:18.140
You can add to your Circles on
the website or via the apps,

00:23:18.140 --> 00:23:20.160
and those scores will
show up here.

00:23:20.160 --> 00:23:21.900
And of course, you control
your data.

00:23:21.900 --> 00:23:23.760
As Todd mentioned earlier, if
you don't want your scores to

00:23:23.760 --> 00:23:26.670
show up, well, we give
you tools for that.

00:23:26.670 --> 00:23:28.520
And of course, if you can't beat
your friend's all-time,

00:23:28.520 --> 00:23:31.746
well, again, we have the weekly
and daily timespans.

00:23:31.746 --> 00:23:34.120
So we're extremely excited about
social leaderboards.

00:23:34.120 --> 00:23:36.660
With the amount of truly
ridiculous competition in the

00:23:36.660 --> 00:23:38.910
office is any indication
whatsoever, pretty sure these

00:23:38.910 --> 00:23:40.810
are going to drive engagement.

00:23:40.810 --> 00:23:42.820
All right, so back
to Angry Fruit.

00:23:42.820 --> 00:23:45.250
We solved our Blended Fruit Mode
issue with achievements.

00:23:45.250 --> 00:23:46.360
So you remember that.

00:23:46.360 --> 00:23:48.270
But if you remember, we also
had a second problem.

00:23:48.270 --> 00:23:50.680
And that problem was our Endless
Mode isn't retaining

00:23:50.680 --> 00:23:51.240
users well.

00:23:51.240 --> 00:23:52.180
I mean, they come in.

00:23:52.180 --> 00:23:52.750
They play.

00:23:52.750 --> 00:23:53.950
They get a score.

00:23:53.950 --> 00:23:55.230
But they never come back.

00:23:55.230 --> 00:23:56.930
So let's use social leaderboards
to add a little

00:23:56.930 --> 00:23:58.090
special sauce.

00:23:58.090 --> 00:23:59.540
When you add a little social
competition, that'll keep

00:23:59.540 --> 00:24:02.620
people re-engaging and competing
with their friends.

00:24:02.620 --> 00:24:04.100
All right, so let's do this.

00:24:04.100 --> 00:24:05.940
We'll make a leaderboard
for our Endless Mode.

00:24:05.940 --> 00:24:07.300
Like all leaderboards,
it'll have both

00:24:07.300 --> 00:24:09.055
public and social views.

00:24:09.055 --> 00:24:11.070
To start, we'll need a name.

00:24:11.070 --> 00:24:13.490
We'll need you to optionally
tell us how to interpret the

00:24:13.490 --> 00:24:14.315
scores that you submit.

00:24:14.315 --> 00:24:16.280
A score formatting.

00:24:16.280 --> 00:24:17.680
We'll need an icon.

00:24:17.680 --> 00:24:19.530
We'll need to know the ordering
for your score, so

00:24:19.530 --> 00:24:20.840
basketball or golf order.

00:24:20.840 --> 00:24:23.190
We'll need optional limits, and
what these limits will do

00:24:23.190 --> 00:24:25.920
will cause a server to reject
any score outside the limits

00:24:25.920 --> 00:24:26.780
that you specify.

00:24:26.780 --> 00:24:28.830
This is also optional.

00:24:28.830 --> 00:24:30.800
And then we need to know where
to show this leaderboard in

00:24:30.800 --> 00:24:31.550
our list of leaderboards.

00:24:31.550 --> 00:24:34.170
And in this case, we're going
to have it show up first.

00:24:34.170 --> 00:24:36.520
So once you save it,
you get an ID back.

00:24:36.520 --> 00:24:37.840
Very similar to the achievements
process.

00:24:37.840 --> 00:24:40.070
This is the ID that you
use in your code.

00:24:40.070 --> 00:24:42.840
But before we get to that, let
me talk a little bit about how

00:24:42.840 --> 00:24:44.190
scores are rendered.

00:24:44.190 --> 00:24:46.860
So you submit scores
as 64-bit integers.

00:24:46.860 --> 00:24:50.030
However, the API returns both
the values that you submit and

00:24:50.030 --> 00:24:50.900
rendered strings.

00:24:50.900 --> 00:24:52.380
And these strings are there so
that you can make your own

00:24:52.380 --> 00:24:55.216
leaderboard UI with your
own list of scores.

00:24:55.216 --> 00:24:57.420
So here's an example
of how this works.

00:24:57.420 --> 00:24:58.550
As you can see here
on the left, we

00:24:58.550 --> 00:25:00.025
have the English example.

00:25:00.025 --> 00:25:02.930
The time interprets your
values as milliseconds,

00:25:02.930 --> 00:25:04.600
whereas the currency interprets
your values as

00:25:04.600 --> 00:25:06.570
micro dollars-- one one
millionth of a dollar.

00:25:06.570 --> 00:25:08.370
Apparently, that's a standard.

00:25:08.370 --> 00:25:10.510
On the right side, we actually
do localize these scores.

00:25:10.510 --> 00:25:12.850
So a German caller might find
these a little more easy to

00:25:12.850 --> 00:25:14.470
understand.

00:25:14.470 --> 00:25:15.410
All right, so now let's add our

00:25:15.410 --> 00:25:16.798
leaderboard to Angry Fruit.

00:25:20.280 --> 00:25:22.290
DAVE SANTORO: So integrating
with leaderboards works very

00:25:22.290 --> 00:25:23.960
much the same way as integrating
achievements.

00:25:23.960 --> 00:25:25.590
The first thing we'll probably
want to do is add some

00:25:25.590 --> 00:25:28.330
constants to refer to those
leaderboard IDs that we got

00:25:28.330 --> 00:25:30.720
from the dev console.

00:25:30.720 --> 00:25:34.820
With the leaderboard ID, you can
then submit a score either

00:25:34.820 --> 00:25:36.640
immediately or using the
fire-and-forget mode.

00:25:36.640 --> 00:25:38.765
And you'll just pass in the raw
score that you want to add

00:25:38.765 --> 00:25:40.015
for the user.

00:25:41.910 --> 00:25:43.470
If you pass in a listener,
you'll get a bunch of

00:25:43.470 --> 00:25:45.780
information back about what
actually happened here.

00:25:45.780 --> 00:25:47.640
So this will include information
about what the

00:25:47.640 --> 00:25:50.590
user's top score is for all the
timespans that we support,

00:25:50.590 --> 00:25:52.570
as well as whether the score
that you just submitted is the

00:25:52.570 --> 00:25:55.090
new top score for the user
for that time period.

00:25:55.090 --> 00:25:56.820
So you can use this to show
something cool for the user if

00:25:56.820 --> 00:25:59.490
you want to.

00:25:59.490 --> 00:26:01.220
Displaying leaderboards.

00:26:01.220 --> 00:26:02.870
Again, similar to
achievements.

00:26:02.870 --> 00:26:05.790
We have one intent that lets you
show the list of all the

00:26:05.790 --> 00:26:06.720
leaderboards for the game.

00:26:06.720 --> 00:26:08.160
So this is what that
looks like for

00:26:08.160 --> 00:26:10.860
Asphalt 7 by Gameloft.

00:26:10.860 --> 00:26:13.150
And you can also show a specific
leaderboard by

00:26:13.150 --> 00:26:15.860
calling getLeaderboardIntent
for the leaderboard ID that

00:26:15.860 --> 00:26:17.390
you care about.

00:26:17.390 --> 00:26:19.850
And, once again, if you don't
like the leaderboard UI that

00:26:19.850 --> 00:26:23.370
we've created, we can provide
raw data APIs so you can load

00:26:23.370 --> 00:26:26.030
in the data for scores of
everyone and display the UI

00:26:26.030 --> 00:26:28.380
however you want to.

00:26:28.380 --> 00:26:29.450
TODD KERPELMAN: Cool.

00:26:29.450 --> 00:26:30.280
Thank you.

00:26:30.280 --> 00:26:34.060
So on iOS, we interact with
leaderboard similar to how we

00:26:34.060 --> 00:26:35.310
interact with achievements.

00:26:35.310 --> 00:26:37.790
Instead of creating a
GPGAchievement object, we

00:26:37.790 --> 00:26:39.200
create a GPGScore object.

00:26:39.200 --> 00:26:42.040
And we associate it with the
leaderboard by calling this

00:26:42.040 --> 00:26:44.080
scoreWithLeaderboardId
helper method.

00:26:44.080 --> 00:26:45.400
You assign it a value.

00:26:45.400 --> 00:26:47.480
And then, basically, to submit
the score, you call

00:26:47.480 --> 00:26:49.790
submitScoreWithC
ompletionHandler.

00:26:49.790 --> 00:26:51.130
You'll get back, in
that completion

00:26:51.130 --> 00:26:53.130
handler, a GPGScore report.

00:26:53.130 --> 00:26:55.840
And you can analyze this report
to find out whether

00:26:55.840 --> 00:26:58.230
this is a new daily, weekly,
or all-time high

00:26:58.230 --> 00:26:59.790
score for this user.

00:26:59.790 --> 00:27:02.190
And if it isn't, what's the
previous high score that they

00:27:02.190 --> 00:27:03.830
need to beat.

00:27:03.830 --> 00:27:06.800
We let you display a single
leaderboard by, again, about

00:27:06.800 --> 00:27:07.900
three lines of code.

00:27:07.900 --> 00:27:10.280
And we also let you display
a list of all available

00:27:10.280 --> 00:27:12.950
leaderboards if your game
supports more than one.

00:27:12.950 --> 00:27:15.600
We also have raw data
APIs available.

00:27:15.600 --> 00:27:17.890
Although, leaderboards tend to
be a little more complicated

00:27:17.890 --> 00:27:20.090
than achievement, so sometimes
people just go with the

00:27:20.090 --> 00:27:21.810
built-in widgets.

00:27:21.810 --> 00:27:24.520
So let's assume things are going
well with Angry Fruit.

00:27:24.520 --> 00:27:26.670
People are now playing Endless
Mode because they want to beat

00:27:26.670 --> 00:27:28.240
their friends.

00:27:28.240 --> 00:27:30.290
However, it turns out there's
one more problem that we are

00:27:30.290 --> 00:27:31.590
now seeing.

00:27:31.590 --> 00:27:34.630
A long time, loyal players
suddenly stopped playing and

00:27:34.630 --> 00:27:36.340
for no apparent reason.

00:27:36.340 --> 00:27:39.090
And except maybe for the fact
that their device seems to

00:27:39.090 --> 00:27:39.930
have changed.

00:27:39.930 --> 00:27:42.120
And this brings us to my
favorite feature which is

00:27:42.120 --> 00:27:42.970
Cloud Save.

00:27:42.970 --> 00:27:45.580
It might not be as sexy as
leaderboards, but it's really

00:27:45.580 --> 00:27:48.070
my favorite feature
and here is why.

00:27:48.070 --> 00:27:50.330
Think about how many households
out there have a

00:27:50.330 --> 00:27:51.990
phone and a tablet right now.

00:27:51.990 --> 00:27:52.960
In fact, show of hands.

00:27:52.960 --> 00:27:55.210
How many of you have more than
one device at home used on a

00:27:55.210 --> 00:27:56.445
regular basis?

00:27:56.445 --> 00:27:57.840
All right, that's
like all of you.

00:27:57.840 --> 00:28:01.280
So based on this completely
unbiased Google I/O attendees

00:28:01.280 --> 00:28:05.240
sample, 100% of the world has
more than one device.

00:28:05.240 --> 00:28:07.740
More interestingly, how many
of you have an iOS and an

00:28:07.740 --> 00:28:10.800
Android device that use
on a regular basis?

00:28:10.800 --> 00:28:12.960
All right, that's a pretty
significant number of you, and

00:28:12.960 --> 00:28:15.240
I think that number is
going to be growing.

00:28:15.240 --> 00:28:18.180
So now think about it, how many
times have you unlocked

00:28:18.180 --> 00:28:21.770
the first 30 or 40 levels of
a game, gone to play it on

00:28:21.770 --> 00:28:24.590
another device only to find that
you need to start over

00:28:24.590 --> 00:28:25.870
again from level one.

00:28:25.870 --> 00:28:28.880
And said to yourself, wow,
this is a fantastic user

00:28:28.880 --> 00:28:29.610
experience.

00:28:29.610 --> 00:28:33.770
I can't believe I get to play
the entire game over again.

00:28:33.770 --> 00:28:34.770
All right, I saw one hand.

00:28:34.770 --> 00:28:37.670
I think he's just raising
his hand for fun.

00:28:37.670 --> 00:28:40.230
So maybe more importantly, how
many of you have decided not

00:28:40.230 --> 00:28:42.730
to continue playing a game as
soon as you got another

00:28:42.730 --> 00:28:45.090
device, because you didn't want
to have to start over?

00:28:45.090 --> 00:28:45.790
I know I haven't.

00:28:45.790 --> 00:28:48.340
All right, so all those hands
in the air, those are people

00:28:48.340 --> 00:28:50.250
that are no longer playing
your game.

00:28:50.250 --> 00:28:51.550
They're not seeing ads.

00:28:51.550 --> 00:28:54.200
They're not telling their
friends about your game.

00:28:54.200 --> 00:28:56.880
They are not contributing to
leaderboards, and they are not

00:28:56.880 --> 00:28:58.340
buying in-game items.

00:28:58.340 --> 00:29:00.410
Which is a shame and it's
money out the window.

00:29:00.410 --> 00:29:02.720
And it's a problem that
we want to fix.

00:29:02.720 --> 00:29:05.660
And so for that, we have
introduced a very simple cross

00:29:05.660 --> 00:29:08.830
platform, save info for this
user to the cloud kind of

00:29:08.830 --> 00:29:11.170
functionality.

00:29:11.170 --> 00:29:13.400
In case you are wondering how
this fits into our other

00:29:13.400 --> 00:29:15.890
services because we are Google,
we like to do a lot of

00:29:15.890 --> 00:29:17.145
things in the cloud--

00:29:17.145 --> 00:29:19.380
cloud saving really is just
designed to do one thing and

00:29:19.380 --> 00:29:20.790
do it well and do it simply.

00:29:20.790 --> 00:29:23.580
We have other services like
Google Drive, which lets

00:29:23.580 --> 00:29:25.780
multiple people edit
the same file.

00:29:25.780 --> 00:29:27.410
Lets you view revision
history.

00:29:27.410 --> 00:29:29.710
Lets you see very large files
to a folder that can be

00:29:29.710 --> 00:29:30.970
re-shared later.

00:29:30.970 --> 00:29:33.770
And we've got App Engine which
allows for a very complex

00:29:33.770 --> 00:29:37.090
server side functionality and
database-like storage and cron

00:29:37.090 --> 00:29:39.220
jobs, and that sort of thing.

00:29:39.220 --> 00:29:40.980
These are much more
powerful systems.

00:29:40.980 --> 00:29:44.300
But with great power comes great
responsibility, and a

00:29:44.300 --> 00:29:45.780
little more setup time.

00:29:45.780 --> 00:29:49.590
So the analogy I like to use is
Cloud Save is a little like

00:29:49.590 --> 00:29:51.090
a cheese grater.

00:29:51.090 --> 00:29:54.190
Google Drive and App Engine is
a little more like a chainsaw

00:29:54.190 --> 00:29:56.530
There are a lot of things you
can do with a chainsaw.

00:29:56.530 --> 00:29:59.640
You can cut down trees, juggle,
carve ice sculptures,

00:29:59.640 --> 00:30:01.310
fight zombies.

00:30:01.310 --> 00:30:04.020
But if all you want to do is
grate some cheese for taco

00:30:04.020 --> 00:30:06.610
night, the chainsaw's probably
going to be more power than

00:30:06.610 --> 00:30:08.880
you need, and you're going to
make a mess of your kitchen.

00:30:08.880 --> 00:30:12.190
So similarly, if all you want to
do is keep the user's data

00:30:12.190 --> 00:30:15.640
from one device to the next as
they play your game, start

00:30:15.640 --> 00:30:17.220
with something simple
like Cloud Save.

00:30:17.220 --> 00:30:20.440
And then as you find your server
needs to grow, and you

00:30:20.440 --> 00:30:23.200
need more sophisticated
functionality, then consider

00:30:23.200 --> 00:30:25.450
switching to something like
the App Engine or Compute

00:30:25.450 --> 00:30:28.462
Engine, or some of our
other cloud services.

00:30:28.462 --> 00:30:30.690
We're going to give you a really
whirlwind overview of

00:30:30.690 --> 00:30:32.040
how Cloud Save works.

00:30:32.040 --> 00:30:35.030
You have four save game slots
in which you could say data,

00:30:35.030 --> 00:30:37.270
which in a fit of creativity
we've labeled zero through

00:30:37.270 --> 00:30:39.430
three because we're engineers.

00:30:39.430 --> 00:30:42.570
They hold 128K of data each,
and these could be used to

00:30:42.570 --> 00:30:45.380
manage multiple save
slots per user.

00:30:45.380 --> 00:30:47.190
You can also use them
to intelligently

00:30:47.190 --> 00:30:48.970
partition your Save data.

00:30:48.970 --> 00:30:51.090
For instance, if I were making
a role playing game, I could

00:30:51.090 --> 00:30:56.190
save the user's avatar, their
avatar look in one slot, their

00:30:56.190 --> 00:30:58.270
inventory in another,
and their quest

00:30:58.270 --> 00:30:59.450
progress in a third.

00:30:59.450 --> 00:31:01.970
And that way, if my user decides
to change the look of

00:31:01.970 --> 00:31:04.430
their avatar, I only
have to upload that

00:31:04.430 --> 00:31:05.640
chunk of the Save file.

00:31:05.640 --> 00:31:07.650
I don't have to upload
the entire thing.

00:31:07.650 --> 00:31:11.880
So let's see what that process
looks like behind the scenes.

00:31:11.880 --> 00:31:14.750
Up in the cloud, you've got your
game's data along with a

00:31:14.750 --> 00:31:15.790
unique version string.

00:31:15.790 --> 00:31:19.190
You can think of this like a
timestamp or [? NE ?] tag.

00:31:19.190 --> 00:31:21.840
When I want to retrieve this
data, I make a GET call.

00:31:21.840 --> 00:31:25.090
And in the GET call I specify
the state game slot I want.

00:31:25.090 --> 00:31:28.740
And the service returns that
data along with the unique

00:31:28.740 --> 00:31:29.530
version string.

00:31:29.530 --> 00:31:30.840
And I store that on my device.

00:31:30.840 --> 00:31:33.120
So that's fairly
straightforward.

00:31:33.120 --> 00:31:35.340
Now let's say I were to update
this data, and I

00:31:35.340 --> 00:31:36.790
want to save it now.

00:31:36.790 --> 00:31:39.680
I would send across this new
data to the cloud along with

00:31:39.680 --> 00:31:41.130
the old version string.

00:31:41.130 --> 00:31:42.520
The service would make
sure that those two

00:31:42.520 --> 00:31:43.610
version strings match.

00:31:43.610 --> 00:31:45.970
If it does, it says, OK,
this looks legit.

00:31:45.970 --> 00:31:49.820
It will update its version of
the data, update its version

00:31:49.820 --> 00:31:52.980
string, and then send me down a
200 code along with the new

00:31:52.980 --> 00:31:54.680
version string.

00:31:54.680 --> 00:31:56.430
So let's look at the
case of a conflict.

00:31:56.430 --> 00:32:01.390
Let's say I update the data on
my phone, and then I'm also

00:32:01.390 --> 00:32:03.910
ambidextrous and playing on my
tablet with my other hand.

00:32:03.910 --> 00:32:05.360
And I save data there, too.

00:32:05.360 --> 00:32:08.000
So up in the cloud, there's
this new data and this new

00:32:08.000 --> 00:32:09.500
version string.

00:32:09.500 --> 00:32:12.950
This time, when I send across
my data from my phone, the

00:32:12.950 --> 00:32:15.730
service will check and see if
the two version strings match.

00:32:15.730 --> 00:32:18.570
If it doesn't, that's a sign
that somebody else has gone

00:32:18.570 --> 00:32:21.530
ahead and updated the data while
my phone wasn't looking.

00:32:21.530 --> 00:32:23.590
And the service gets
unhappy about that.

00:32:23.590 --> 00:32:25.750
It doesn't quite know what to
do, and so it sends me down a

00:32:25.750 --> 00:32:28.810
409 conflict code.

00:32:28.810 --> 00:32:31.970
At this point, the iOS and
Android libraries will go out,

00:32:31.970 --> 00:32:33.700
and it will retrieve both
sets of data and

00:32:33.700 --> 00:32:35.190
present those to me--

00:32:35.190 --> 00:32:37.060
or to you, as the
game developer.

00:32:37.060 --> 00:32:39.460
And you'll get sort of the local
data, the data that you

00:32:39.460 --> 00:32:42.270
are attempting to save, along
with the data that has been

00:32:42.270 --> 00:32:44.480
updated in the cloud while
you weren't looking.

00:32:44.480 --> 00:32:47.230
And it's up to you to decide how
you want to resolve these.

00:32:47.230 --> 00:32:49.070
Maybe you sort of
perform a union.

00:32:49.070 --> 00:32:50.400
Maybe you pick one
over the other.

00:32:50.400 --> 00:32:53.020
Maybe you give the user
a dialog box.

00:32:53.020 --> 00:32:55.400
Maybe you find some other
intelligent way to merge based

00:32:55.400 --> 00:32:56.980
on your game's logic.

00:32:56.980 --> 00:32:59.920
It's basically up to you, but
that data would then be used,

00:32:59.920 --> 00:33:01.830
again, to update to the cloud.

00:33:01.830 --> 00:33:03.980
I know we sort of went through
this kind of fast.

00:33:03.980 --> 00:33:06.280
We're going to be covering this
in more detail in the

00:33:06.280 --> 00:33:08.160
Advanced Game Topics talk
that I believe is

00:33:08.160 --> 00:33:10.940
happening at 5:00 or so.

00:33:10.940 --> 00:33:12.320
So stick around for that.

00:33:12.320 --> 00:33:14.090
So let's talk about
code and what this

00:33:14.090 --> 00:33:17.250
looks like on Android.

00:33:17.250 --> 00:33:20.350
DAVE SANTORO: So to interact
with Cloud Save, you'll be

00:33:20.350 --> 00:33:23.070
using AppStateClient instead
of GamesClient.

00:33:23.070 --> 00:33:25.030
The setup for AppStateClient
looks almost exactly like

00:33:25.030 --> 00:33:25.950
GamesClient.

00:33:25.950 --> 00:33:28.200
You'll still pass in three
parameters to construct one.

00:33:28.200 --> 00:33:29.710
You'll need a context
and a success

00:33:29.710 --> 00:33:31.940
listener and failure listener.

00:33:31.940 --> 00:33:35.400
And then we also recommend that
you hook this into your

00:33:35.400 --> 00:33:38.040
activity or fragment's lifecycle
the same way.

00:33:38.040 --> 00:33:39.720
Create and uncreate.

00:33:39.720 --> 00:33:40.720
Connecting and disconnecting
it.

00:33:40.720 --> 00:33:43.370
And on start and on
stop, and so on.

00:33:43.370 --> 00:33:44.850
If you are going to use both
the GamesClient and the

00:33:44.850 --> 00:33:46.920
AppStateClient, I do recommend
that you attend the Advanced

00:33:46.920 --> 00:33:48.560
Game Topic session.

00:33:48.560 --> 00:33:50.350
They have a lot of really good
tips on how to gracefully

00:33:50.350 --> 00:33:53.490
interact with multiple
clients at once.

00:33:53.490 --> 00:33:55.750
So once you have a connect to
AppStateClient, you can call

00:33:55.750 --> 00:33:57.590
the sort of methods
you'd expect.

00:33:57.590 --> 00:33:59.830
So we have a loadState method
that lets you load the state

00:33:59.830 --> 00:34:01.570
for a particular key.

00:34:01.570 --> 00:34:03.870
There's a listStates method the
lets you see which keys

00:34:03.870 --> 00:34:06.020
you've stored data for so far.

00:34:06.020 --> 00:34:07.130
And you can update.

00:34:07.130 --> 00:34:09.739
And as with the other APIs,
you can either update this

00:34:09.739 --> 00:34:11.250
immediately and attach
to listeners

00:34:11.250 --> 00:34:12.510
so can get the response.

00:34:12.510 --> 00:34:14.370
Or you can update it in the
fire-and-forget form and trust

00:34:14.370 --> 00:34:17.440
the service to get it to
the server for you.

00:34:17.440 --> 00:34:20.010
So conflict handling on Android
happens at load time.

00:34:20.010 --> 00:34:22.219
If you get an
OnStateloadedListener, there

00:34:22.219 --> 00:34:25.290
are two possible call backs
that could be hit.

00:34:25.290 --> 00:34:26.630
First one is onStateLoaded.

00:34:26.630 --> 00:34:28.000
This means everything
was fine.

00:34:28.000 --> 00:34:29.980
The data got up to the server
correctly, and you have

00:34:29.980 --> 00:34:32.310
everything up-to-date on the
device, so there's nothing

00:34:32.310 --> 00:34:34.170
special you need to do here.

00:34:34.170 --> 00:34:37.060
If you get an onStateConflict
callback, you get into this

00:34:37.060 --> 00:34:39.300
case that Todd just mentioned
where the data on the server

00:34:39.300 --> 00:34:40.600
differs from what you
have on the client.

00:34:40.600 --> 00:34:43.889
And in this case, you get back
the server version, as well as

00:34:43.889 --> 00:34:47.150
the local and server-based
data.

00:34:47.150 --> 00:34:49.179
And then you can compare those
two and do whatever sort of

00:34:49.179 --> 00:34:51.300
merge makes sense for you.

00:34:51.300 --> 00:34:53.380
And then to resolve that, you
just call resolveState.

00:34:53.380 --> 00:34:56.130
You pass up the version string
that you got from the conflict

00:34:56.130 --> 00:34:57.780
callback, and you pass
up the new data

00:34:57.780 --> 00:34:59.030
that you want to store.

00:35:01.190 --> 00:35:01.590
TODD KERPELMAN: Cool.

00:35:01.590 --> 00:35:05.720
So on iOS, you access Cloud Save
data by referencing your

00:35:05.720 --> 00:35:07.500
GPGAppStateModel.

00:35:07.500 --> 00:35:10.440
AppState's kind of our internal
name for Cloud Save.

00:35:10.440 --> 00:35:12.980
Once you get this model, you can
load data from the cloud

00:35:12.980 --> 00:35:14.520
by calling loadForKey.

00:35:14.520 --> 00:35:17.230
Key is an NS number between
zero and three, with a

00:35:17.230 --> 00:35:18.420
completion handler.

00:35:18.420 --> 00:35:21.900
And the two most common status
messages you get back in the

00:35:21.900 --> 00:35:25.220
completion handler are either
not found, which generally

00:35:25.220 --> 00:35:28.610
happens if this is a user that
has never saved data before.

00:35:28.610 --> 00:35:30.420
Usually it's a brand new player,
and you load up some

00:35:30.420 --> 00:35:31.420
default data.

00:35:31.420 --> 00:35:34.690
And success, which means, yay,
everything went fine.

00:35:34.690 --> 00:35:37.050
This method does have
a conflictHandler.

00:35:37.050 --> 00:35:39.720
I like to think of this more
as a heads up handler.

00:35:39.720 --> 00:35:42.090
It is basically the service
telling you, hey, looks like

00:35:42.090 --> 00:35:43.970
some other device, not
this one, has been

00:35:43.970 --> 00:35:45.610
saving data to the cloud.

00:35:45.610 --> 00:35:47.730
And you might want to just
take a look at it.

00:35:47.730 --> 00:35:49.670
Sanity check it, and make
sure everything is cool.

00:35:49.670 --> 00:35:51.920
Give the user a dialog box
saying, hey, we got to reload

00:35:51.920 --> 00:35:53.000
the interface.

00:35:53.000 --> 00:35:55.090
Something like that.

00:35:55.090 --> 00:35:57.520
To save data to the cloud, you
call updateForKey with a

00:35:57.520 --> 00:36:01.240
completionHandler, and also
with a conflictHandler.

00:36:01.240 --> 00:36:03.840
And this conflictHandler
contains the two sets of data

00:36:03.840 --> 00:36:06.120
that you will need to
work to resolve.

00:36:06.120 --> 00:36:07.850
This is sort of the local state
that you're trying to

00:36:07.850 --> 00:36:10.910
save and the server state, which
is apparently the state

00:36:10.910 --> 00:36:12.620
that's been updated in
the cloud while your

00:36:12.620 --> 00:36:14.360
client wasn't looking.

00:36:14.360 --> 00:36:16.020
Again, you can resolve this
in a way that makes

00:36:16.020 --> 00:36:17.190
sense for your game.

00:36:17.190 --> 00:36:20.090
Return it, and then the library
will try once again to

00:36:20.090 --> 00:36:21.320
save this to the cloud.

00:36:21.320 --> 00:36:25.895
And hopefully then, it'll hit
your completionHandler.

00:36:25.895 --> 00:36:26.960
STEVE MARTIN: All right.

00:36:26.960 --> 00:36:27.350
Cool.

00:36:27.350 --> 00:36:29.380
So let's wrap up quickly
with one more feature.

00:36:29.380 --> 00:36:31.110
Possibly our coolest
feature overall.

00:36:31.110 --> 00:36:33.800
Real-time multiplayer
for Android.

00:36:33.800 --> 00:36:35.900
So this works across all Android
devices running Google

00:36:35.900 --> 00:36:37.530
Play services, which is
currently for [? AO ?]

00:36:37.530 --> 00:36:38.000
and newer.

00:36:38.000 --> 00:36:40.140
There are a number of games both
out today and coming soon

00:36:40.140 --> 00:36:41.170
that have integrated with it.

00:36:41.170 --> 00:36:43.450
Example here is Riptide 2.

00:36:43.450 --> 00:36:45.270
We actually have that running
over in the multiplayer kiosk

00:36:45.270 --> 00:36:46.020
right outside this room.

00:36:46.020 --> 00:36:46.620
Please go play it.

00:36:46.620 --> 00:36:48.540
It's actually a really
great game.

00:36:48.540 --> 00:36:50.606
We actually really enjoy
that quite a bit.

00:36:50.606 --> 00:36:52.850
The API supports two
to four players.

00:36:52.850 --> 00:36:55.350
Our client UI, shown here,
actually makes it easy to

00:36:55.350 --> 00:36:57.980
invite friends directly
from your G+ Circles.

00:36:57.980 --> 00:36:59.870
You can use our auto-matcher to
fill in any empty slots in

00:36:59.870 --> 00:37:01.890
a match, or create a quick
match with nothing but

00:37:01.890 --> 00:37:03.690
auto-matcher.

00:37:03.690 --> 00:37:05.810
Once a match is formed, the
Android service in your device

00:37:05.810 --> 00:37:07.890
creates a peer-to-peer network
between the devices.

00:37:07.890 --> 00:37:10.180
And the networks supports both
reliable and unreliable

00:37:10.180 --> 00:37:13.170
messaging, which is available
through both message type and

00:37:13.170 --> 00:37:16.295
socket type APIs.

00:37:16.295 --> 00:37:19.070
OK, so briefly, I want to talk
about how multiplayer invites

00:37:19.070 --> 00:37:20.870
can actually enhance discovery
for your game.

00:37:20.870 --> 00:37:23.000
It's a great way for gamers
to find great games.

00:37:23.000 --> 00:37:25.160
So here's an example scenario.

00:37:25.160 --> 00:37:27.250
So let's say a player in my
Circles has a great new game,

00:37:27.250 --> 00:37:28.990
and he wants to invite
me to play with him.

00:37:28.990 --> 00:37:29.990
So he creates a match.

00:37:29.990 --> 00:37:31.260
Puts me in it.

00:37:31.260 --> 00:37:32.400
Clicks play.

00:37:32.400 --> 00:37:35.440
This causes an invite to get
created which causes, in turn,

00:37:35.440 --> 00:37:38.040
a notification to get sent
to my Android device.

00:37:38.040 --> 00:37:39.890
So I click the notification.

00:37:39.890 --> 00:37:41.670
I get taken to the
invite card.

00:37:41.670 --> 00:37:43.710
So I don't know what this game
is, but this guy, he looks

00:37:43.710 --> 00:37:44.220
pretty shifty.

00:37:44.220 --> 00:37:44.850
But I know him.

00:37:44.850 --> 00:37:45.470
He's legit.

00:37:45.470 --> 00:37:46.660
He's a cool dude.

00:37:46.660 --> 00:37:49.550
So I have the option here to
decline the invite if I don't

00:37:49.550 --> 00:37:50.930
want to play it.

00:37:50.930 --> 00:37:52.660
Well, again, I like this guy.

00:37:52.660 --> 00:37:53.940
I'll give it a shot.

00:37:53.940 --> 00:37:56.600
So I click the other option
instead, which is game info.

00:37:56.600 --> 00:37:58.980
And clicking this takes
me to the Play store.

00:37:58.980 --> 00:38:00.470
In the Play store, I have the
option to learn more about the

00:38:00.470 --> 00:38:02.150
game, read the reviews,
and, most

00:38:02.150 --> 00:38:03.670
importantly, install the game.

00:38:03.670 --> 00:38:06.060
Assuming I install the game, I
can use the notification to

00:38:06.060 --> 00:38:07.500
get back to the invite card.

00:38:07.500 --> 00:38:09.180
This time, I'll have
the play option.

00:38:09.180 --> 00:38:10.290
So I click that.

00:38:10.290 --> 00:38:11.520
And I'm taken right into
the game to play the

00:38:11.520 --> 00:38:12.900
match with my friend.

00:38:12.900 --> 00:38:14.520
And thanks to my friend's
invite, I now have a great

00:38:14.520 --> 00:38:17.700
game that I can use to play
with my other friends.

00:38:17.700 --> 00:38:18.430
All right.

00:38:18.430 --> 00:38:19.890
Briefly because I'm really
low on time here.

00:38:19.890 --> 00:38:21.410
If you want more multiplayer,
I skipped

00:38:21.410 --> 00:38:22.530
over a lot of details.

00:38:22.530 --> 00:38:23.770
Please definitely attend
the session later

00:38:23.770 --> 00:38:25.520
today in room five.

00:38:25.520 --> 00:38:26.950
And let's quickly look
at the summary.

00:38:26.950 --> 00:38:28.810
We introduced the
services today.

00:38:28.810 --> 00:38:30.280
I talked about how the
services can increase

00:38:30.280 --> 00:38:31.770
discovery through
both badging and

00:38:31.770 --> 00:38:33.070
through multiplayer invites.

00:38:33.070 --> 00:38:34.980
Lots of libraries and tools.

00:38:34.980 --> 00:38:37.290
Certainly, we talked about the
iOS and Android integration

00:38:37.290 --> 00:38:38.460
with a bunch of code samples.

00:38:38.460 --> 00:38:40.530
And finally, the absolute best
part of the presentation was

00:38:40.530 --> 00:38:42.500
this [INAUDIBLE] summary.

00:38:42.500 --> 00:38:44.700
If you want to find out more,
this is but one of a plethora

00:38:44.700 --> 00:38:46.880
of talks available at
I/O. We have four

00:38:46.880 --> 00:38:48.380
more, plus a code lab.

00:38:48.380 --> 00:38:50.970
This is all online, so I'm not
going to read over it.

00:38:50.970 --> 00:38:53.200
We actually just posted our
developer documentation.

00:38:53.200 --> 00:38:54.010
This is live.

00:38:54.010 --> 00:38:56.140
Definitely check it out.

00:38:56.140 --> 00:38:57.350
If you have questions,
we have answers.

00:38:57.350 --> 00:38:58.590
But we're not going
to take them here.

00:38:58.590 --> 00:39:00.330
We're actually going to have
Office Hours for 30 minutes

00:39:00.330 --> 00:39:01.150
following the talk.

00:39:01.150 --> 00:39:02.360
You can come find
all of us there.

00:39:02.360 --> 00:39:03.660
Definitely ask lots
of questions.

00:39:03.660 --> 00:39:05.300
We're also going to be
around the show for

00:39:05.300 --> 00:39:06.390
the rest of the week.

00:39:06.390 --> 00:39:07.740
Please talk to us any time.

00:39:07.740 --> 00:39:09.280
We're happy to chat with you.

00:39:09.280 --> 00:39:10.820
And that is it.

00:39:10.820 --> 00:39:12.070
Thank you very much.

