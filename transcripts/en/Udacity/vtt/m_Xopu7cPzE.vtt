WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
Let's talk about the solution to the bonus problem now, which was add version history.

00:00:05.000 --> 00:00:10.000
The way that works remember is if I click history, we can see the previous versions of this page.

00:00:10.000 --> 00:00:14.000
If I were to make a new version of this page, I can click any of these edit links.

00:00:14.000 --> 00:00:16.000
If I click save, we can see we edited the page.

00:00:16.000 --> 00:00:20.000
If I click on history again, we can see this new version--version 3.

00:00:20.000 --> 00:00:22.000
You can see the content of that page up here.

00:00:22.000 --> 00:00:26.000
That was feature number one required for the bonus, which is view the history of all these pages.

00:00:26.000 --> 00:00:30.000
Feature number two is view any particular version of this.

00:00:30.000 --> 00:00:34.000
I can't just go to /new page. I have to also say what version it is.

00:00:34.000 --> 00:00:39.000
If I were to go to this middle version here, I'm going to newpage,

00:00:39.000 --> 00:00:42.000
and then I added a get parameter for what version it is. In this case it's 5.

00:00:42.000 --> 00:00:44.000
That's just the database ID.

00:00:44.000 --> 00:00:49.000
I think this one is version 10, because I've made other objects.

00:00:49.000 --> 00:00:51.000
So Google is just assigning the IDs and it doesn't really matter.

00:00:51.000 --> 00:00:54.000
Now, of course, I can edit any version of these.

00:00:54.000 --> 00:00:56.000
They have their own special URL.

00:00:56.000 --> 00:01:00.000
This is editing new page v4, which is that first version.

00:01:00.000 --> 00:01:05.000
If I were to save this, it overwrites the newest version.

00:01:05.000 --> 00:01:09.000
If we were to look at history again, we can see it's plopped up on the top.

00:01:09.000 --> 00:01:13.000
If I want to just store the most recent version, I can just click edit, save,

00:01:13.000 --> 00:01:18.000
and there is our page again, and if we go to history, we can see all the history.

00:01:18.000 --> 00:01:22.000
That's pretty cool. Let's talk about the implementation.

00:01:22.000 --> 00:01:27.000
The first thing is there are a number of ways you could've done this.

00:01:27.000 --> 00:01:33.000
You could have one page that has, instead of content, it could have a list of contents.

00:01:33.000 --> 00:01:36.000
There is a way to store lists of things in datastore. That's a fine way to do it.

00:01:36.000 --> 00:01:45.000
What I did is I basically said every page has a name, which is always going to be pages,

00:01:45.000 --> 00:01:51.000
and it has a parent called /root plus the path.

00:01:51.000 --> 00:01:56.000
I put /root in there because I thought it was going to be more complicated than it was.

00:01:56.000 --> 00:02:01.000
But basically remember entities in the datastore can have these ancestors--

00:02:01.000 --> 00:02:04.000
this hierarchy of objects. Now, we didn't spend a whole lot of time talking about this.

00:02:04.000 --> 00:02:09.000
Understanding that isn't required for doing this homework,

00:02:09.000 --> 00:02:11.000
because there are many ways you could have done it.

00:02:11.000 --> 00:02:13.000
This is how I chose to do it.

00:02:13.000 --> 00:02:16.000
Every URL has basically this common ancestor.

00:02:16.000 --> 00:02:21.000
So when we look up a page by path,

00:02:21.000 --> 00:02:25.000
all I'm really doing is I'm saying get me all the pages that have this ancestor.

00:02:25.000 --> 00:02:29.000
Basically give me all of the pages that belong to this URL sorted by most recent.

00:02:29.000 --> 00:02:32.000
Then I always just use 'get' to get the most recent.

00:02:32.000 --> 00:02:36.000
If I want to get an old version, I use the get<u>by</u>id function,

00:02:36.000 --> 00:02:39.000
which takes an ID, and it also takes a parent key,

00:02:39.000 --> 00:02:45.000
which uses the same key as the main path query.

00:02:45.000 --> 00:02:50.000
What this is saying is get me the page--in this case class refers to the page,

00:02:50.000 --> 00:02:53.000
because it's the class method and we're in page--

00:02:53.000 --> 00:02:56.000
get me the page by ID. This is built in the datastore.

00:02:56.000 --> 00:02:59.000
I want this ID and this parent.

00:02:59.000 --> 00:03:02.000
So we can go get older versions out of history.

00:03:02.000 --> 00:03:06.000
Then we we're rendering this stuff, you can see here on EditPage

00:03:06.000 --> 00:03:10.000
I can call by_path and then call get to get the first response out of the query,

00:03:10.000 --> 00:03:14.000
or I can do this other thing, which is look for the v parameter, which is the version.

00:03:14.000 --> 00:03:21.000
If it's there and if it's a digit--if it's basically valid--try to run by_id on it.

00:03:21.000 --> 00:03:25.000
If that's not there, that page, that version just doesn't exist--Not Found.

00:03:25.000 --> 00:03:29.000
Otherwise--basically if there's no v parameter--just look up the normal version.

00:03:29.000 --> 00:03:34.000
We have the same block of code in the normal wiki page for viewing any page on the wiki.

00:03:34.000 --> 00:03:38.000
This exact same block of code, and of course we'd want to clean this up.

00:03:38.000 --> 00:03:41.000
The code that I'll give to you will probably have this cleaned up in it.

00:03:41.000 --> 00:03:43.000
Let's take a look at some of these templates real quick so we can see

00:03:43.000 --> 00:03:46.000
the last bit of how all this fits together.

00:03:46.000 --> 00:03:48.000
I'm using template inheritance again.

00:03:48.000 --> 00:03:51.000
My base template basically has the title of the wiki.

00:03:51.000 --> 00:03:54.000
It references my style sheet, and it's got the basic structure of my document,

00:03:54.000 --> 00:03:59.000
which is going to have a body tag and then a couple of divs.

00:03:59.000 --> 00:04:04.000
These classes are just for styling--not required for completing this homework.

00:04:04.000 --> 00:04:07.000
Just required to make your homework look a little bit better.

00:04:07.000 --> 00:04:11.000
I want my stuff to look slightly good, so I use them.

00:04:11.000 --> 00:04:14.000
This is the whole header area where we draw those links.

00:04:14.000 --> 00:04:19.000
Basically, if there is a user, we print the user name and then we print the logout link,

00:04:19.000 --> 00:04:22.000
which is just a basic link to /logout.

00:04:22.000 --> 00:04:26.000
If the user is not logged in, we draw two links--one for login and one for signup.

00:04:26.000 --> 00:04:28.000
Those are also just basic links.

00:04:28.000 --> 00:04:31.000
They both have the gray link style, which is how I make them gray

00:04:31.000 --> 00:04:33.000
and I make that underline hover thing work.

00:04:33.000 --> 00:04:36.000
Then I have a div here that basically doesn't have any thing in it.

00:04:36.000 --> 00:04:41.000
This is just a block. Remember this is kind of a way of doing this kind of templated inheritance stuff,

00:04:41.000 --> 00:04:43.000
so you don't have to write the same HTML over and over.

00:04:43.000 --> 00:04:47.000
Other templates that inherit from base will fill in this block.

00:04:47.000 --> 00:04:52.000
This where we put in the controls for editing a page, viewing a page or viewing the history of a page.

00:04:52.000 --> 00:04:54.000
All that stuff gets overwritten in the other templates.

00:04:54.000 --> 00:04:59.000
This clear div technique--the technique I use to float those links over to the right is called "float."

00:04:59.000 --> 00:05:01.000
When you float something it doesn't take up any space.

00:05:01.000 --> 00:05:04.000
One of the techniques to make it take up space is use this clear div.

00:05:04.000 --> 00:05:08.000
I'm not going to attempt to explain that here, but it's basically a CSS trick for

00:05:08.000 --> 00:05:11.000
floating something over to the edge of the screen and still having it have vertical height.

00:05:11.000 --> 00:05:13.000
Here we have the actual content.

00:05:13.000 --> 00:05:17.000
This is where the edit window is going to go or the wiki content page.

00:05:17.082 --> 00:05:20.588
And again there's no content in here, we just define the block and the other templates will override it.

00:05:20.588 --> 00:05:27.790
Let's look at the template for page html which basically draws the actual wiki content page.

00:05:27.790 --> 00:05:34.069
It extends base.html, which basically says use all that other stuff and then we can just override the two blocks.

00:05:34.069 --> 00:05:38.286
On an edit page, or I mean sorry on a viewing page, a normal wiki page, you have two links.

00:05:38.286 --> 00:05:40.954
One for edit and for viewing the history.

00:05:40.954 --> 00:05:43.915
But we only draw the edit link if the user is logged in.

00:05:43.915 --> 00:05:50.707
If the user is logged in, draw the edit link, regardless of whether the user is logged in, draw the history link.

00:05:50.707 --> 00:05:57.091
And these two links are simple. One is _edit and the path, remember the path was passed into my render function.

00:05:57.091 --> 00:05:59.959
And one is _history to the path.

00:05:59.959 --> 00:06:05.399
Both those links are simple links that are handled by the appropriate handler .

00:06:05.399 --> 00:06:11.079
Then, the actual content, we render the page content and I use the jinja safe notation which

00:06:11.079 --> 00:06:18.989
basically says don't escape this, which basically says take the html that was typed in and insert directly in the page.

00:06:18.989 --> 00:06:23.698
Security issues be damned, since I entered all the html, I know it's okay.

00:06:23.698 --> 00:06:28.995
Now, if you're going to put this website online, you want to have probably some special escaping.

00:06:28.995 --> 00:06:34.239
What a lot of websites do, is they only allow some html or they have a special language that turns into html

00:06:34.239 --> 00:06:38.409
or they don't allow html at all but that wouldn't allow links and then the wiki wouldn't be very useful.

00:06:39.070 --> 00:06:41.381
That's a design issue, that's up to you.

00:06:41.381 --> 00:06:44.346
Edit html, this is our template for the edit page.

00:06:44.346 --> 00:06:47.221
The controls are very similar to the viewing page.

00:06:47.221 --> 00:06:53.394
We have a link to just called view which links to the page itself, basically kind of like a cancel button.

00:06:53.394 --> 00:06:57.398
Then we have a link to the history of the page so you can view the history of the page right from the edit page.

00:06:57.398 --> 00:07:00.770
And these are just basic links and we only draw these links if the page already exists.

00:07:00.770 --> 00:07:06.181
If you're creating a new page, there's nothing to view and there's no history so that's what if page is done.

00:07:06.181 --> 00:07:08.109
And remember when we call this template, we pass in whether the page existed.

00:07:09.683 --> 00:07:15.999
Now here is my form, it's a method post, it has this class, it's called main edit, that's just for styling purposes

00:07:15.999 --> 00:07:18.312
to make it render nice and big.

00:07:18.312 --> 00:07:26.648
It's basically a giant text area whose name is "content" and who includes basically page and page.content.

00:07:26.648 --> 00:07:32.687
So if the page exists, render its content, otherwise render an empty string, that's what going on there.

00:07:32.687 --> 00:07:38.791
Then, at the bottom of the form, we have this little area called form footer which just has the safe button.

00:07:38.791 --> 00:07:40.873
We'll go through all that CSS.

00:07:40.873 --> 00:07:42.622
So the edit page is actually fairly simple as well.

00:07:42.622 --> 00:07:46.700
The history page is for viewing the history of a wiki page.

00:07:46.700 --> 00:07:52.976
Again, we've got our controls, if the user exists, draw the edit link, just like the main wiki view page.

00:07:52.976 --> 00:07:59.978
Regardless of whether user is logged in, draw the view link to just view the page instead of viewing the history.

00:07:59.978 --> 00:08:02.789
Then our content here, I'm drawing a table.

00:08:02.789 --> 00:08:07.184
Now, we didn't spend a whole lot of time or any time at all on tables in this class so use some

00:08:07.184 --> 00:08:08.598
of the examples that I've given you.

00:08:08.598 --> 00:08:10.304
But it does what you would expect, it draws a table.

00:08:10.304 --> 00:08:13.519
We draw a table, history table is what I used to style it.

00:08:13.519 --> 00:08:16.890
Now, I will show you that function again called gray style.

00:08:16.890 --> 00:08:24.027
What this does is basically for p and posts, return the p and basically whether that row is even or odd,

00:08:24.027 --> 00:08:28.432
so that's how I do that effect where each row, one is white and one is gray.

00:08:28.432 --> 00:08:29.972
So I will show you the effect first.

00:08:29.972 --> 00:08:31.705
Here it is, this is the history page.

00:08:31.705 --> 00:08:36.133
You can see the first row is white, second row gray, white, gray, white.

00:08:36.133 --> 00:08:38.508
That's kind of a nice effect when you have a table.

00:08:38.831 --> 00:08:40.734
I just did a simple version of that.

00:08:40.734 --> 00:08:45.349
The code to generate which of these rows should be gray is something like this.

00:08:45.349 --> 00:08:51.186
Here is that gray style function, we'll look at this in template again but basically it takes a list and it enumerates

00:08:51.186 --> 00:08:57.143
over the list, this is a built in python function that basically says return the elements of list in a tuple along with

00:08:57.143 --> 00:08:59.150
the index of that element in the list.

00:08:59.150 --> 00:09:03.675
For x and list, it would return basically each page, page 1, page 2, page 3.

00:09:03.675 --> 00:09:11.759
For n x in enumerate list basically says index into the list, 0, page 1, 0, page 2 as tuples.

00:09:14.135 --> 00:09:24.798
Then if n is modulo 2 = 0 basically if it's even, the row should be blank or basically return x and blank.

00:09:24.798 --> 00:09:27.760
If it's odd, return x and gray.

00:09:27.760 --> 00:09:29.190
There's a lot of stuff going on in this function.

00:09:29.190 --> 00:09:31.872
It's also using yield which is how you build generators.

00:09:31.872 --> 00:09:39.199
This is complex stuff, not required for the homework at all but this is how I wanted to create that effect.

00:09:39.199 --> 00:09:43.735
You can also create the effect in the template itself by having a variable that you create

00:09:43.735 --> 00:09:45.955
and check to see if it's even or odd.

00:09:45.955 --> 00:09:48.172
This is the more pythonic way of doing it.

00:09:48.172 --> 00:09:54.178
Back to the template, p rowstyle so rowstyle is either going to be a blank string or the string gray.

00:09:54.178 --> 00:09:57.821
Then I use that in the class name for each row.

00:09:57.821 --> 00:10:02.820
Each row is either going to have a class of nothing or of the word gray and that's how in the CSS

00:10:02.820 --> 00:10:04.532
I decide whether to make the row gray or not.

00:10:04.532 --> 00:10:07.531
So then I have three columns, that's what TD does.

00:10:07.531 --> 00:10:11.424
First column is the date, so I just print the last modified time.

00:10:11.424 --> 00:10:17.284
The second column is the content, I print the first 100 characters of the content and then the

00:10:17.284 --> 00:10:20.621
next column is a link to view that version of the page,

00:10:20.621 --> 00:10:25.108
which is just a normal link, it's got that gray link style on it

00:10:25.108 --> 00:10:28.141
which makes it look like my other links.

00:10:28.141 --> 00:10:36.702
Then href points to the path and then I add a gip parameter v = and then the ID of that post.

00:10:36.702 --> 00:10:43.254
Remember .key.ID is how you get the ID of an element in Google datastore or of an entity.

00:10:43.254 --> 00:10:50.140
The url would be basically the path of the page we're on plus the ID stored in the v parameter.

00:10:50.140 --> 00:10:56.407
We saw in the edit and the wiki handlers, we look for that v parameter to see if we can find a specific item.

00:10:56.407 --> 00:11:01.898
Going a little bit further down, if the user is logged in, if user, we create the "edit" link.

00:11:01.898 --> 00:11:09.740
This is a link to edit or it's a link called "edit" and it's a link to /_edit and then basically the same link as up here.

00:11:09.740 --> 00:11:14.838
Path, v = and then we include the idea of the page.

00:11:14.838 --> 00:11:22.313
Now, I should probably clean this up, I should probably have a function maybe on page that says "edit url", "history url",

00:11:22.313 --> 00:11:26.649
"normal url", "version url", that sort stuff would be really handy and I would have to keep

00:11:26.649 --> 00:11:31.110
including that in the template and that's probably one of the first changes I'll make because this is kind of error prone,

00:11:31.110 --> 00:11:35.605
you've got all this code that's the same, these two lines are the same basically and you don't want to get into

00:11:35.605 --> 00:11:39.392
that situation, because if I edit one I've got to remember to edit the other, etc., etc.

00:11:39.392 --> 00:11:43.688
Then we just close out our if statement, our four loop and our table and that's how we do the history page.

00:11:44.487 --> 00:11:49.349
So that's all the templates, I'll walk you to the CSS real quick, that I use to style things and then we'll be done.

00:11:49.349 --> 00:11:54.458
First I say "html", remember outside the body element is the html element, I say height 100 percent and this is

00:11:54.458 --> 00:11:59.892
part of what allows me to make that text area on the edit page take up the whole page.

00:11:59.892 --> 00:12:01.283
Let's take a look at that real quick.

00:12:01.283 --> 00:12:09.315
If I click edit up here, my technique for making this text area fill the entire browser is basically to make the html

00:12:09.315 --> 00:12:15.001
which normally is just the size of the content, actually take up 100 percent of the space

00:12:15.001 --> 00:12:17.475
so that's what that 100 percent does.

00:12:17.475 --> 00:12:20.868
The body element also needs to be 100 percent for the same reason.

00:12:20.868 --> 00:12:27.441
Position relative is when you need to adjust where things appear relative to where they should appear or

00:12:27.441 --> 00:12:33.143
you need to have position relative on a parent element of an element that you're going to position absolutely which is

00:12:33.143 --> 00:12:38.590
what you do when you want something to be positioned specifically on the page and we'll come down to that.

00:12:38.590 --> 00:12:43.026
I choose my font, my default font size, the width of the whole document which is 800 pixels.

00:12:43.026 --> 00:12:45.931
Margin 0 auto basically says center that.

00:12:45.931 --> 00:12:49.145
Our default color which is this gray color for all our text.

00:12:49.145 --> 00:12:55.437
The header area of the page is 30 pixels tall, the line height is 30 which causes the text to actually center vertically.

00:12:55.437 --> 00:12:59.012
We get a 10 pixel margin for the content.

00:12:59.012 --> 00:13:04.650
The control element floats to the right, control element, those are the links for editing, viewing and history

00:13:04.650 --> 00:13:06.647
that appear over here in the browser.

00:13:06.647 --> 00:13:09.421
Float right says take the content and float it to the right.

00:13:09.421 --> 00:13:11.644
And it's gray, font size 13.

00:13:11.644 --> 00:13:15.646
Controls following controls, give it a little space between them, remember we have separate controls for

00:13:15.646 --> 00:13:20.039
logging in and sign-up and for doing the page actions, then just put some space between it.

00:13:20.039 --> 00:13:21.309
I can show you that real quick.

00:13:21.309 --> 00:13:26.610
Right here, this is that 20 pixels, between those two things, this is one control element and this is another

00:13:26.610 --> 00:13:29.449
control element and they're both floated to the right so they kind of stack over there.

00:13:29.449 --> 00:13:30.982
That's what those two things do.

00:13:30.982 --> 00:13:35.211
A gray link , we use this all over the place, basically make our links gray and don't underline them.

00:13:35.211 --> 00:13:39.418
If they're visited, instead of drawing them as purple, draw them as gray.

00:13:39.418 --> 00:13:45.954
If the mouse is over them, that's what hover does, draw the underline, so that behavior will look something like this:

00:13:45.954 --> 00:13:53.149
when I put the mouse over the log out here you can see the underline appears and all of our links have that effect

00:13:53.149 --> 00:13:55.399
and that's kind of an effect I like.

00:13:55.399 --> 00:13:59.501
You can see we used the gray link over here on all these styles as well so the underline appears when the mouse

00:13:59.501 --> 00:14:02.178
goes over it and you can do that all in CSS.

00:14:02.178 --> 00:14:04.398
Errors should be red, we use that all the time.

00:14:04.398 --> 00:14:09.455
Main edit, this is the class that's on that main form and it's position absolute so that allows me to basically

00:14:09.455 --> 00:14:15.567
force the positioning of this element so I say positioning at 45 pixels from the top of the page, 0 pixels from the right,

00:14:15.567 --> 00:14:21.898
10 pixels from the bottom, 0 pixels from the left so that makes our form grow up to fill the whole space.

00:14:21.898 --> 00:14:29.801
Then text area under main edit is the same thing except 0 pixels from the top of the form, 30 pixels

00:14:29.801 --> 00:14:35.547
from the bottom of the form, that gives us room for the button and then 0 pixels from the left, 0 pixels from the right.

00:14:35.547 --> 00:14:39.148
That makes our text area take up nearly the entire form.

00:14:39.148 --> 00:14:44.226
Our form footer is also positioned absolute and that's at the bottom, 0 pixels from the bottom, 0 pixels from the left,

00:14:44.226 --> 00:14:46.125
0 pixels from the right.

00:14:46.125 --> 00:14:52.524
I didn't specify top which basically means draw it normally and I say height 30 pixels so that draws a row along

00:14:52.524 --> 00:14:56.476
the bottom for a save button that is 30 pixels tall.

00:14:56.476 --> 00:15:01.097
Our submit button is font size 18 pixels.

00:15:01.097 --> 00:15:06.810
Here is our table, border collapse, collapse basically just shrinks our table a little bit, otherwise tables have this

00:15:06.810 --> 00:15:08.909
default spacing between all of the cells.

00:15:10.154 --> 00:15:17.575
If a table has a CSS attribute of gray, which is how we do alternating rows, set the background color

00:15:17.575 --> 00:15:20.118
to "eee" which is basically light gray.

00:15:20.118 --> 00:15:23.759
If it's a date cell, make the width 200 pixels.

00:15:24.620 --> 00:15:29.626
If it's a content cell give it some padding so it fattens up our table a little bit.

00:15:29.626 --> 00:15:37.563
If it's a link cell have a little--padding, just giving it a number says put padding on top, bottom, left and right 10 pixels.

00:15:37.563 --> 00:15:43.144
If you do it like this, the first number is vertical padding which we say zero and this is

00:15:43.144 --> 00:15:47.240
horizontal padding five pixels and this gives us this effect.

00:15:47.240 --> 00:15:51.169
The little five pixels between the view and edit here, if I got rid of that these would actually--

00:15:51.169 --> 00:15:56.238
there would be no space between these words because we're in a table so that just adds that little space.

00:15:56.238 --> 00:15:58.339
That's it, I know it's a lot.

00:15:58.339 --> 00:16:02.136
We didn't cover CSS in this course but I'd still like to show you it in case you have questions.

00:16:02.136 --> 00:16:07.469
I'll provide the CSS and you can play around with it in your own projects and that's it for the final.

00:16:07.469 --> 00:16:10.219
If you managed to figure all that out, that's really impressive.

00:16:10.219 --> 00:16:17.794
I know that the final stuff was challenging and the bonus question of doing the history itself was also pretty tricky.

00:16:17.794 --> 00:16:24.404
So if you managed to get all of this working that's a very good job, that's really cool and that's a sign that you have

00:16:24.404 --> 00:16:30.188
learned a lot in this class and for those of you who didn't figure it out or didn't try that's something

00:16:30.188 --> 00:16:32.638
to aspire to down the road.

00:16:32.638 --> 00:16:35.449
So that's it for the class, I want to thank you all for

00:16:35.449 --> 00:16:37.972
hanging with me this far, it's been a really fun experience

00:16:37.972 --> 00:16:40.992
and I hope you learned as much as I did.

00:16:40.992 --> 00:16:42.978
Over the last few weeks, it's been a lot of fun.

00:16:42.978 --> 00:16:46.379
I'll see you around the internet and good luck out there!

