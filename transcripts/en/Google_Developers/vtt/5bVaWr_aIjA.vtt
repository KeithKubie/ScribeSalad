WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.444
[MUSIC PLAYING]

00:00:08.242 --> 00:00:10.200
JEN TONG: Ready to get
going with another talk?

00:00:10.200 --> 00:00:12.090
OK, in this talk, we
are going to be building

00:00:12.090 --> 00:00:14.970
a universal translator
with Firebase

00:00:14.970 --> 00:00:18.690
and Google Cloud Platform
in front of your very eyes.

00:00:18.690 --> 00:00:19.440
Sound like a plan?

00:00:19.440 --> 00:00:20.290
AUDIENCE: Yeah.

00:00:20.290 --> 00:00:20.915
JEN TONG: Cool.

00:00:20.915 --> 00:00:24.160
And it takes three of us to do
it, to build an app altogether.

00:00:24.160 --> 00:00:26.072
So I'm going to be doing
a lot of the talking

00:00:26.072 --> 00:00:27.030
and some of the coding.

00:00:27.030 --> 00:00:28.260
I'm Jen.

00:00:28.260 --> 00:00:29.580
And joining me is--

00:00:29.580 --> 00:00:30.750
Hi, Hi, I'm Kathy.

00:00:30.750 --> 00:00:31.750
BRET MCGOWEN: I'm Brett.

00:00:31.750 --> 00:00:32.430
JEN TONG: Cool.

00:00:32.430 --> 00:00:34.750
And we are going to get
going in just a minute.

00:00:34.750 --> 00:00:37.530
But before we do that,
let me tell you a story,

00:00:37.530 --> 00:00:40.720
because everybody likes
story time, right?

00:00:40.720 --> 00:00:41.752
I like story time.

00:00:41.752 --> 00:00:43.710
And I'm going to tell
you a story about science

00:00:43.710 --> 00:00:45.480
fiction, because I love sci-fi.

00:00:45.480 --> 00:00:48.003
Are there any other sci-fi
fans in the audience?

00:00:48.003 --> 00:00:48.730
Yay!

00:00:48.730 --> 00:00:50.310
Sci-fi is great.

00:00:50.310 --> 00:00:54.380
And one of my favorite science
fiction shows is "Star Trek."

00:00:54.380 --> 00:00:57.270
And one of the things that
makes "Star Trek" so awesome

00:00:57.270 --> 00:01:01.080
is all of the different
technology that's in the show.

00:01:01.080 --> 00:01:03.210
For example, you
have the captain,

00:01:03.210 --> 00:01:07.290
who can ask a computer with
his own voice for a cup of tea,

00:01:07.290 --> 00:01:11.100
and the computer will respond
by making it magically appear.

00:01:11.100 --> 00:01:14.942
And although we can't make
tea appear from air yet,

00:01:14.942 --> 00:01:16.400
we're actually
making good progress

00:01:16.400 --> 00:01:19.029
on a lot of "Star
Trek" technology.

00:01:19.029 --> 00:01:21.570
You can talk to a computer with
things like Google Assistant,

00:01:21.570 --> 00:01:24.420
and it can understand you
and comprehend your question

00:01:24.420 --> 00:01:27.400
and come up with
a great response.

00:01:27.400 --> 00:01:29.460
Another really cool
technology from "Star Trek"

00:01:29.460 --> 00:01:31.525
was the universal
translator, which

00:01:31.525 --> 00:01:33.150
I think it was more
of just convenience

00:01:33.150 --> 00:01:35.120
to make the plots
easier to write,

00:01:35.120 --> 00:01:38.100
that the way team would beam
down on some foreign world

00:01:38.100 --> 00:01:41.410
and encounter some alien race
they had never seen before,

00:01:41.410 --> 00:01:43.860
and within the first
couple words they muttered,

00:01:43.860 --> 00:01:46.680
they were instantly able
to communicate perfectly.

00:01:46.680 --> 00:01:48.990
And it was really cool.

00:01:48.990 --> 00:01:50.850
In fact, that is
the technology I

00:01:50.850 --> 00:01:54.900
would love to have today because
I travel around a little bit

00:01:54.900 --> 00:01:57.060
to do things like give talks.

00:01:57.060 --> 00:01:59.370
But I'm one of those
monolingual people.

00:01:59.370 --> 00:02:01.080
I can only speak one language.

00:02:01.080 --> 00:02:02.217
I'm ashamed.

00:02:02.217 --> 00:02:04.050
And it would be great
if I could communicate

00:02:04.050 --> 00:02:08.550
with people in their preferred
language more easily.

00:02:08.550 --> 00:02:10.050
So we're going to
solve that problem

00:02:10.050 --> 00:02:14.100
today using the technique we
use to solve all of the problems

00:02:14.100 --> 00:02:16.610
in our life, which is software.

00:02:16.610 --> 00:02:21.180
Specifically, we're going
to build mobile apps.

00:02:21.180 --> 00:02:23.880
But we want to be able
to work with everybody,

00:02:23.880 --> 00:02:25.860
whether they have a
specific preferred language

00:02:25.860 --> 00:02:27.780
or a specific preferred
mobile platform.

00:02:27.780 --> 00:02:33.570
So we want this app to
work on iOS and Android.

00:02:33.570 --> 00:02:37.475
And this is where
Firebase comes in.

00:02:37.475 --> 00:02:39.600
Whereas traditionally, if
we wanted to build an app

00:02:39.600 --> 00:02:42.016
that allowed us to communicate
between different platforms

00:02:42.016 --> 00:02:44.280
and do it in a hurry,
we'd have some challenges,

00:02:44.280 --> 00:02:47.220
because we'd probably want to
spin up a big old cluster--

00:02:47.220 --> 00:02:50.760
maybe a Redis here,
maybe a PostgreSQL there,

00:02:50.760 --> 00:02:52.860
a whole bunch of Compute
Engine instances--

00:02:52.860 --> 00:02:56.340
and probably wire those
into some cool backend APIs

00:02:56.340 --> 00:02:58.810
to take up some of
the heavy lifting.

00:02:58.810 --> 00:03:01.620
But we don't have time
for that, so we want

00:03:01.620 --> 00:03:03.030
to take a different approach.

00:03:03.030 --> 00:03:05.970
And this is where Firebase can
help us get a lot of motion

00:03:05.970 --> 00:03:07.320
really quickly.

00:03:07.320 --> 00:03:09.330
Firebase gives us both--

00:03:09.330 --> 00:03:11.490
in addition to all sorts
of cool backend stuff,

00:03:11.490 --> 00:03:14.029
also gives us a whole
bunch of client libraries

00:03:14.029 --> 00:03:15.570
and easy bindings
to those components

00:03:15.570 --> 00:03:19.650
to make it easier than ever
to build stuff rapidly.

00:03:19.650 --> 00:03:21.360
One way I like to
think about Firebase

00:03:21.360 --> 00:03:24.930
is, it is my biggest bag
of app development goodies.

00:03:24.930 --> 00:03:27.510
So it has all sorts of things
to make my web and mobile app

00:03:27.510 --> 00:03:28.660
development easier.

00:03:28.660 --> 00:03:31.020
It has things like
authentication helpers,

00:03:31.020 --> 00:03:34.530
and static file hosting,
and deep dynamic links,

00:03:34.530 --> 00:03:36.160
and crash reporting.

00:03:36.160 --> 00:03:39.240
And I could wax on about
this stuff for a long time.

00:03:39.240 --> 00:03:41.839
But we only have
20-something minutes left,

00:03:41.839 --> 00:03:43.380
so we're just going
to focus on a few

00:03:43.380 --> 00:03:45.600
of these different goodies.

00:03:45.600 --> 00:03:49.410
We're going to talk about
Cloud storage for Firebase.

00:03:49.410 --> 00:03:52.860
We're going to talk about
authentication and the Realtime

00:03:52.860 --> 00:03:54.480
Database.

00:03:54.480 --> 00:03:57.970
So let's dig into each one
of these little bit deeper.

00:03:57.970 --> 00:04:01.050
First, Cloud storage
for Firebase--

00:04:01.050 --> 00:04:02.730
a lot of modern
applications have

00:04:02.730 --> 00:04:06.420
to move binary chunks of
stuff around, like files.

00:04:06.420 --> 00:04:08.910
You might have to upload
photos, or in our case,

00:04:08.910 --> 00:04:10.920
we might have some
recorded audio

00:04:10.920 --> 00:04:13.110
that we want to move around.

00:04:13.110 --> 00:04:15.150
And Firebase for
Cloud storage makes

00:04:15.150 --> 00:04:17.760
this a lot easier because
it gives you cool client

00:04:17.760 --> 00:04:19.260
library stuff that
allows you to not

00:04:19.260 --> 00:04:20.426
have to think much about it.

00:04:20.426 --> 00:04:24.060
You just send off your
blob of data into the sky,

00:04:24.060 --> 00:04:25.770
and then all of
your other clients

00:04:25.770 --> 00:04:29.520
can automatically get that
access to that binary data

00:04:29.520 --> 00:04:30.810
really easily.

00:04:30.810 --> 00:04:33.150
And it takes advantage of all
of the cool infrastructure

00:04:33.150 --> 00:04:36.180
that Google provides--
its super-fast network,

00:04:36.180 --> 00:04:38.400
high reliability, all
that stuff that's really

00:04:38.400 --> 00:04:41.250
a pain to build on your own.

00:04:41.250 --> 00:04:45.940
So now we have all of our
binary stuff dealt with.

00:04:45.940 --> 00:04:48.300
Next, we want to
handle authentication.

00:04:48.300 --> 00:04:50.440
And authentication
is an important thing

00:04:50.440 --> 00:04:52.600
that's useful for many
different applications.

00:04:52.600 --> 00:04:54.766
You always want to know
who's doing an action so you

00:04:54.766 --> 00:04:56.311
can control access to data.

00:04:56.311 --> 00:04:57.810
But in the case of
this application,

00:04:57.810 --> 00:04:59.393
we just want to
control it little bit.

00:04:59.393 --> 00:05:01.340
We want to make sure
that only those of us

00:05:01.340 --> 00:05:05.257
onstage can write data into
our universal translator,

00:05:05.257 --> 00:05:06.840
because we know some
of you might want

00:05:06.840 --> 00:05:09.300
to play some trickery on us.

00:05:09.300 --> 00:05:12.321
So we're going to use
Firebase Auth for that.

00:05:12.321 --> 00:05:14.790
And has anybody ever rolled
their own authentication

00:05:14.790 --> 00:05:16.421
from scratch?

00:05:16.421 --> 00:05:16.920
No one?

00:05:16.920 --> 00:05:18.120
A couple people.

00:05:18.120 --> 00:05:20.010
It's really kind of a
pain, whether you're

00:05:20.010 --> 00:05:23.040
doing email and password
login and then you

00:05:23.040 --> 00:05:25.100
have to make sure you're
doing the right hashing

00:05:25.100 --> 00:05:28.410
on those passwords, or if
you're integrating with an OAuth

00:05:28.410 --> 00:05:32.340
provider from Google or
Facebook, there's a lot of work

00:05:32.340 --> 00:05:34.740
there that we seem to do
over and over and over again.

00:05:34.740 --> 00:05:37.140
And it never gets more fun.

00:05:37.140 --> 00:05:39.120
And that's where
Firebase Authentication

00:05:39.120 --> 00:05:40.936
takes a lot of the
heavy parts of that

00:05:40.936 --> 00:05:42.810
and just gives you easy
binding to the client

00:05:42.810 --> 00:05:45.630
libraries so you can
get authentication done

00:05:45.630 --> 00:05:48.064
and move on with your app.

00:05:48.064 --> 00:05:49.980
And one of the cool
things about Firebase Auth

00:05:49.980 --> 00:05:52.470
is that even if you
support multiple different

00:05:52.470 --> 00:05:57.150
authentication providers, like
email and Twitter and Facebook,

00:05:57.150 --> 00:05:59.640
all of your users still
have a single identifier

00:05:59.640 --> 00:06:03.870
that you can use to identify
them across your application.

00:06:03.870 --> 00:06:07.110
So we have authentication taken
care of and the binary object

00:06:07.110 --> 00:06:08.120
stuff.

00:06:08.120 --> 00:06:09.870
This is where my
favorite part of Firebase

00:06:09.870 --> 00:06:11.760
comes in-- the
Realtime Database.

00:06:11.760 --> 00:06:13.170
It is awesome.

00:06:13.170 --> 00:06:15.430
And this is how it works.

00:06:15.430 --> 00:06:18.650
So it is like a big old
ball of JSON in the sky,

00:06:18.650 --> 00:06:20.640
because we like JSON, right?

00:06:20.640 --> 00:06:21.660
It's great.

00:06:21.660 --> 00:06:24.118
What do you do is, you take
any of your data that you could

00:06:24.118 --> 00:06:27.570
represent as JSON-- so
text, booleans, numbers,

00:06:27.570 --> 00:06:28.830
that kind of stuff--

00:06:28.830 --> 00:06:31.890
and you have all your clients
write to different locations

00:06:31.890 --> 00:06:34.050
on this big old tree of JSON.

00:06:34.050 --> 00:06:36.100
And then this is where
the magic comes in,

00:06:36.100 --> 00:06:38.910
because instead of your other
clients explicitly reading

00:06:38.910 --> 00:06:41.130
a location and having to
deal with all that network

00:06:41.130 --> 00:06:44.490
asynchronous stuff, what
the Firebase clients allow

00:06:44.490 --> 00:06:50.070
you to do is just have your
clients tell Firebase what node

00:06:50.070 --> 00:06:53.160
or what subtree, or even
a query against a subtree,

00:06:53.160 --> 00:06:56.034
in that JSON blob
that they care about.

00:06:56.034 --> 00:06:57.450
And then the client
libraries take

00:06:57.450 --> 00:07:00.814
care of calling your function
whenever there's a change.

00:07:00.814 --> 00:07:02.730
And we also take care
of all that hard stuff--

00:07:02.730 --> 00:07:05.850
like cache invalidation and
handling online and offline

00:07:05.850 --> 00:07:07.140
network blips--

00:07:07.140 --> 00:07:08.610
handles all of that for you.

00:07:08.610 --> 00:07:11.130
And it's awesome.

00:07:11.130 --> 00:07:14.250
So I could talk about this
stuff for a long time,

00:07:14.250 --> 00:07:17.190
but you're here to
see some code, right?

00:07:17.190 --> 00:07:19.110
We're going to build
the apps right now.

00:07:19.110 --> 00:07:20.693
And I'm going to
hand it over to Brat,

00:07:20.693 --> 00:07:23.320
who's going to help guide us
through the coding process.

00:07:23.320 --> 00:07:25.530
And we're going to go
to the coding view now.

00:07:25.530 --> 00:07:27.196
BRET MCGOWEN: All
right, thank you, Jen.

00:07:27.196 --> 00:07:29.940
So not only are we going to
live code an app in front of you

00:07:29.940 --> 00:07:33.760
today, we're actually going
to live code two apps.

00:07:33.760 --> 00:07:34.900
So we have Kathy here.

00:07:34.900 --> 00:07:36.776
She's going to be working
on the iOS version.

00:07:36.776 --> 00:07:38.191
And we have Jen,
who's going to be

00:07:38.191 --> 00:07:39.800
working on the Android version.

00:07:39.800 --> 00:07:43.060
So let's get started.

00:07:43.060 --> 00:07:45.780
So let's talk a little bit
about what this app looks

00:07:45.780 --> 00:07:47.675
like from a UI perspective.

00:07:47.675 --> 00:07:48.630
What are the pieces?

00:07:48.630 --> 00:07:51.150
So we've got a language picker.

00:07:51.150 --> 00:07:52.890
This is going to set
the language that's

00:07:52.890 --> 00:07:54.180
my preferred language.

00:07:54.180 --> 00:07:57.090
This will both be the language
that I'm speaking into the app,

00:07:57.090 --> 00:07:59.760
and it's also the language
that I will hear spoken back

00:07:59.760 --> 00:08:02.142
to me as messages come in.

00:08:02.142 --> 00:08:04.350
So again, messages can be
coming in from any language

00:08:04.350 --> 00:08:06.440
and their point of origin,
but when it gets to me,

00:08:06.440 --> 00:08:09.944
it'll be translated out loud
into my preferred language.

00:08:09.944 --> 00:08:11.360
So the way that
you'll do this is,

00:08:11.360 --> 00:08:12.720
you'll hit the Record button.

00:08:12.720 --> 00:08:16.200
It will create an audio
file local on your device.

00:08:16.200 --> 00:08:18.180
And what we will code
up in front of you

00:08:18.180 --> 00:08:21.330
is how to upload that to the
Cloud, do the processing,

00:08:21.330 --> 00:08:23.370
and return the translation back.

00:08:23.370 --> 00:08:25.200
So let's dive right
into the code.

00:08:25.200 --> 00:08:26.990
We've actually
preconfigured these apps.

00:08:26.990 --> 00:08:29.280
Not only did we flesh
out the UI already,

00:08:29.280 --> 00:08:32.610
we've also used Gradle
and CocoaPods to set up

00:08:32.610 --> 00:08:36.701
Firebase for Android
and iOS, respectively.

00:08:36.701 --> 00:08:38.159
So the first thing
we need to do is

00:08:38.159 --> 00:08:40.679
connect to our three services.

00:08:40.679 --> 00:08:43.530
So we're going to create an
instance to the Firebase Auth

00:08:43.530 --> 00:08:45.570
service, the Firebase
Realtime Database

00:08:45.570 --> 00:08:49.380
service, and the
Firebase Storage service.

00:08:49.380 --> 00:08:51.300
Once we have those
references, we're

00:08:51.300 --> 00:08:54.210
actually going to prep some
data, including the file

00:08:54.210 --> 00:08:57.150
to be uploaded, before we
actually do the upload.

00:08:57.150 --> 00:08:58.980
So we're going to
get two references.

00:08:58.980 --> 00:09:01.410
One is where we're going to
upload this file into Cloud

00:09:01.410 --> 00:09:04.020
storage-- what location--
which would be under uploads,

00:09:04.020 --> 00:09:06.540
and then also where in the
database, the Firebase Realtime

00:09:06.540 --> 00:09:08.956
Database, we're going to write
this data, which would also

00:09:08.956 --> 00:09:11.310
be under the uploads
node in the database.

00:09:11.310 --> 00:09:12.720
We're going to
set some metadata.

00:09:12.720 --> 00:09:15.920
Specifically, we'll set
the audio file type.

00:09:15.920 --> 00:09:20.746
So it'll be AMR for Android
and it'll be Linear 16 for iOS.

00:09:20.746 --> 00:09:22.620
So once we have that
data set, let's actually

00:09:22.620 --> 00:09:24.120
perform the upload.

00:09:24.120 --> 00:09:26.790
So we're going to use
Firebase's putFile method, which

00:09:26.790 --> 00:09:29.340
gives us a few event listeners.

00:09:29.340 --> 00:09:31.320
The first listener will
respond to its failure.

00:09:31.320 --> 00:09:33.450
So in case something
goes wrong, we're

00:09:33.450 --> 00:09:37.950
going to show the user a toast--
wah, wah, your upload failed.

00:09:37.950 --> 00:09:39.480
And in the case
of success, we'll

00:09:39.480 --> 00:09:42.420
have a listener that will take
some metadata-- specifically,

00:09:42.420 --> 00:09:46.410
the type of encoding,
the language of origin,

00:09:46.410 --> 00:09:48.285
and the location
in Cloud storage--

00:09:48.285 --> 00:09:51.060
and we're going to write that to
the Firebase Realtime Database.

00:09:51.060 --> 00:09:53.310
And because we're writing
it to the Realtime Database,

00:09:53.310 --> 00:09:56.550
this will enable all of our
clients to, in realtime,

00:09:56.550 --> 00:09:59.560
get updates when
something happens.

00:09:59.560 --> 00:10:01.470
So that's actually all
the code that we need.

00:10:01.470 --> 00:10:04.060
We are able to upload the file
and write it to the database.

00:10:04.060 --> 00:10:05.440
So let's see a demo.

00:10:05.440 --> 00:10:11.070
So if we fire this up in the
emulator, and once it loads--

00:10:11.070 --> 00:10:12.800
all right, let's
see, let's try iOS.

00:10:12.800 --> 00:10:14.765
Kathy, do you want
to say something?

00:10:14.765 --> 00:10:15.390
KATHY LI: Yeah.

00:10:15.390 --> 00:10:17.820
So I've selected my
language picker to English,

00:10:17.820 --> 00:10:20.520
and I'm going to
make a recording.

00:10:20.520 --> 00:10:22.970
Hello, world.

00:10:22.970 --> 00:10:23.970
BRET MCGOWEN: All right.

00:10:23.970 --> 00:10:24.678
KATHY LI: Oh, no.

00:10:24.678 --> 00:10:26.370
So it says, failed
to upload audio

00:10:26.370 --> 00:10:28.780
with a 403 permission denied.

00:10:28.780 --> 00:10:31.490
BRET MCGOWEN: OK, so our
first demo failure of the day.

00:10:31.490 --> 00:10:32.985
Actually not, this is good.

00:10:32.985 --> 00:10:34.500
It's the rare case
where we actually

00:10:34.500 --> 00:10:36.210
want to see this error message.

00:10:36.210 --> 00:10:38.250
And that's because we
have no authentication,

00:10:38.250 --> 00:10:41.699
and our Firebase storage, our
Cloud storage, is secured.

00:10:41.699 --> 00:10:43.740
So there's two ways we
can get around this error.

00:10:43.740 --> 00:10:45.407
The first, which I
know a lot of you do,

00:10:45.407 --> 00:10:46.865
is you just open
it up for everyone

00:10:46.865 --> 00:10:48.540
and just let anyone
in the internet read

00:10:48.540 --> 00:10:49.914
and write to your
storage bucket.

00:10:49.914 --> 00:10:51.390
That's super easy,
and that's not

00:10:51.390 --> 00:10:52.350
what we're going to do today.

00:10:52.350 --> 00:10:53.808
So we'll actually
show you how easy

00:10:53.808 --> 00:10:57.000
it is to do the correct way,
which is to put authentication

00:10:57.000 --> 00:10:59.130
onto your app so that
you can make sure

00:10:59.130 --> 00:11:00.630
that not any schmuck
on the internet

00:11:00.630 --> 00:11:01.950
is uploading audio files.

00:11:01.950 --> 00:11:03.840
What could possibly go wrong?

00:11:03.840 --> 00:11:06.090
So the first thing we'll
do is, we will set up

00:11:06.090 --> 00:11:08.460
the off flow,
which is basically,

00:11:08.460 --> 00:11:11.350
is the user already
authenticated or not?

00:11:11.350 --> 00:11:12.810
And if they're
not authenticated,

00:11:12.810 --> 00:11:15.180
we're going to use something
called Firebase UI, which

00:11:15.180 --> 00:11:20.130
is an open source library that
has entire social flows for all

00:11:20.130 --> 00:11:23.040
of your providers, like Google,
Twitter, Facebook, email,

00:11:23.040 --> 00:11:23.860
and so forth.

00:11:23.860 --> 00:11:26.200
So not just the backend and
the managing of the tokens

00:11:26.200 --> 00:11:28.560
and the OAuth, but
actually UI, out-of-the-box

00:11:28.560 --> 00:11:31.620
that's configurable, so you can
get an out-of-the-box UI with

00:11:31.620 --> 00:11:33.180
very minimal effort.

00:11:33.180 --> 00:11:36.540
So now that we actually have
that authentication working,

00:11:36.540 --> 00:11:39.660
let's try our demo again.

00:11:39.660 --> 00:11:42.782
And hopefully, we'll get
a little better result.

00:11:42.782 --> 00:11:44.490
So really, with just
a few lines of code,

00:11:44.490 --> 00:11:48.592
we're enabling authentication
with Google or with email.

00:11:48.592 --> 00:11:49.230
So--

00:11:49.230 --> 00:11:56.010
KATHY LI: So now I'll
sign in as prompted,

00:11:56.010 --> 00:11:59.440
and once I've signed in,
make another recording.

00:11:59.440 --> 00:12:02.340
Hello, awesome developers.

00:12:02.340 --> 00:12:03.340
BRET MCGOWEN: All right.

00:12:03.340 --> 00:12:05.189
And hopefully,
uploaded-- positive.

00:12:05.189 --> 00:12:05.980
All right, awesome.

00:12:05.980 --> 00:12:07.000
So cool.

00:12:07.000 --> 00:12:07.930
Thank you, Kathy.

00:12:07.930 --> 00:12:09.775
Now, to prove that
that wasn't a trick,

00:12:09.775 --> 00:12:11.380
that we actually did an upload--

00:12:11.380 --> 00:12:13.340
so Jen has got the
console here in Firebase,

00:12:13.340 --> 00:12:15.400
so she's showing the
Firebase Realtime Database.

00:12:15.400 --> 00:12:18.580
And you can see that it has
some data about the file we just

00:12:18.580 --> 00:12:21.910
uploaded, like the encoding
type, the file type, and also

00:12:21.910 --> 00:12:23.996
the location in Cloud storage.

00:12:23.996 --> 00:12:25.870
So let's actually go to
Cloud storage and see

00:12:25.870 --> 00:12:31.090
the file that we just created
when Kathy recorded her voice.

00:12:31.090 --> 00:12:34.960
So we'll actually download this
to Jen's local workstation.

00:12:34.960 --> 00:12:36.700
And we'll put it into
our audio player,

00:12:36.700 --> 00:12:39.570
and so you can
actually hear Kathy's--

00:12:39.570 --> 00:12:40.820
maybe.

00:12:40.820 --> 00:12:42.880
KATHY LI (RECORDING):
Hello, awesome developers.

00:12:42.880 --> 00:12:44.590
BRET MCGOWEN: All
right, cool, awesome.

00:12:44.590 --> 00:12:45.090
Yes.

00:12:45.090 --> 00:12:45.990
[LAUGHS]

00:12:45.990 --> 00:12:48.599
[APPLAUSE]

00:12:48.599 --> 00:12:49.890
So we're actually almost there.

00:12:49.890 --> 00:12:52.512
So we've got the final recording
and uploading successfully.

00:12:52.512 --> 00:12:53.970
There's only one
more thing we need

00:12:53.970 --> 00:12:56.940
to add to our client, which
is when a translation happens,

00:12:56.940 --> 00:12:59.760
we need to actually
display that in the client,

00:12:59.760 --> 00:13:01.735
and then play the text out loud.

00:13:01.735 --> 00:13:02.610
So let's do that now.

00:13:02.610 --> 00:13:04.559
If we pop back
over into our code,

00:13:04.559 --> 00:13:06.100
we're going to do
a couple of things.

00:13:06.100 --> 00:13:09.850
We're going to connect to the
Firebase Realtime Database.

00:13:09.850 --> 00:13:14.580
And once we do that, we're going
to listen on the translations

00:13:14.580 --> 00:13:16.140
node in the JSON tree.

00:13:16.140 --> 00:13:17.620
So the way the
data is structured,

00:13:17.620 --> 00:13:18.990
we've got a translation node.

00:13:18.990 --> 00:13:22.560
And every time a new phrase
or whatever comes in,

00:13:22.560 --> 00:13:24.300
it gets a new child
node under that.

00:13:24.300 --> 00:13:27.460
And then under that,
there's a list of languages.

00:13:27.460 --> 00:13:28.560
And it's all asynchronous.

00:13:28.560 --> 00:13:31.170
So as they're
getting translated,

00:13:31.170 --> 00:13:34.679
asynchronously, it's populating
that node when it's finished,

00:13:34.679 --> 00:13:35.470
if that make sense.

00:13:35.470 --> 00:13:37.620
So Hindi finishes
first, and maybe English

00:13:37.620 --> 00:13:39.624
comes in second, and then
French, and so forth.

00:13:39.624 --> 00:13:41.040
So what we're
actually going to do

00:13:41.040 --> 00:13:43.926
is have a listener for when
a new translation comes in,

00:13:43.926 --> 00:13:46.050
and then we're going to
have a second listener just

00:13:46.050 --> 00:13:47.719
on the language
we're interested in.

00:13:47.719 --> 00:13:49.510
So that way, if we're
listening for English

00:13:49.510 --> 00:13:51.903
and it gets finished
first, then our app

00:13:51.903 --> 00:13:53.850
will get updated right
away without having

00:13:53.850 --> 00:13:55.766
to wait for all the other
languages to finish,

00:13:55.766 --> 00:13:57.150
because we don't
care about those

00:13:57.150 --> 00:13:59.760
for our particular client.

00:13:59.760 --> 00:14:01.320
And once we have
that finished, we're

00:14:01.320 --> 00:14:03.450
going to take the text that
comes back from Firebase--

00:14:03.450 --> 00:14:05.200
it'll have been
pre-translated-- and we're

00:14:05.200 --> 00:14:07.500
going to pipe it to our
update and play method here

00:14:07.500 --> 00:14:09.480
in our apps, which
actually uses text

00:14:09.480 --> 00:14:14.370
to speech within the Android and
iOS app to play that out loud.

00:14:14.370 --> 00:14:16.380
So I think those
are all the pieces.

00:14:16.380 --> 00:14:18.240
Let's actually load
up the demo again.

00:14:23.320 --> 00:14:27.930
And so the piece we
don't have yet is

00:14:27.930 --> 00:14:32.220
the part that actually takes
the audio file, listens to it,

00:14:32.220 --> 00:14:34.770
turns it into text,
and then translate that

00:14:34.770 --> 00:14:36.111
into another language.

00:14:36.111 --> 00:14:37.860
Well, we actually do
have that technology,

00:14:37.860 --> 00:14:39.300
and that is called Jen.

00:14:39.300 --> 00:14:42.174
So we've got some
Jen-powered translation.

00:14:42.174 --> 00:14:43.840
You've heard of
test-driven development,

00:14:43.840 --> 00:14:46.880
this is Jen-driven
translation, JDT.

00:14:46.880 --> 00:14:49.830
And so what Jen is going
to do is manually listen

00:14:49.830 --> 00:14:52.980
to that audio file, go
into the Firebase Database,

00:14:52.980 --> 00:14:56.310
add a child under the
translations object,

00:14:56.310 --> 00:14:59.730
and put in her desired
translation in English,

00:14:59.730 --> 00:15:00.800
for this case.

00:15:00.800 --> 00:15:02.871
And so as soon as
that's done, you

00:15:02.871 --> 00:15:04.370
can see it actually
shows up already

00:15:04.370 --> 00:15:06.229
onto Kathy's iOS device.

00:15:06.229 --> 00:15:07.770
So as far as I'm
concerned, actually,

00:15:07.770 --> 00:15:09.353
we have all the
pieces we need, right?

00:15:09.353 --> 00:15:11.520
We've got audio files
recording, they're uploading,

00:15:11.520 --> 00:15:15.510
we've got Jen doing the
listening in the translation.

00:15:15.510 --> 00:15:17.730
As far as I know,
everything is good.

00:15:17.730 --> 00:15:19.453
But I sleep sometimes?

00:15:19.453 --> 00:15:21.055
Oh, so that's a problem.

00:15:21.055 --> 00:15:23.055
So if you need any
translation between the hours

00:15:23.055 --> 00:15:26.310
of 11:00 PM and 7:00 AM,
unfortunately, our service

00:15:26.310 --> 00:15:27.840
would be offline.

00:15:27.840 --> 00:15:30.480
If only there were
some buzzword we

00:15:30.480 --> 00:15:34.080
could add to serverless that
would do some of this for us,

00:15:34.080 --> 00:15:37.620
maybe something like
machine learning.

00:15:37.620 --> 00:15:38.580
Let's bring Kathy out.

00:15:38.580 --> 00:15:40.920
And Kathy is going to talk
to us about how we can solve

00:15:40.920 --> 00:15:42.350
this using machine learning.

00:15:42.350 --> 00:15:43.770
Welcome, Kathy.

00:15:43.770 --> 00:15:45.810
KATHY LI: Thanks, Bret.

00:15:45.810 --> 00:15:49.710
So to avoid the problem of Jen
having to manually translate

00:15:49.710 --> 00:15:52.455
all of our recordings,
we're going to instead plug

00:15:52.455 --> 00:15:54.300
in some software.

00:15:54.300 --> 00:15:56.190
And while it would
be a cool project

00:15:56.190 --> 00:16:00.960
to design and train our own
machine learning models, that

00:16:00.960 --> 00:16:04.290
would take longer than we want
now, as we want to quickly

00:16:04.290 --> 00:16:06.640
get this app up and running.

00:16:06.640 --> 00:16:11.130
So that's where we go to
Google Cloud Platform's machine

00:16:11.130 --> 00:16:14.880
learning pre-trained
machine learning APIs.

00:16:14.880 --> 00:16:20.080
And there are a set of different
APIs to solve common use cases,

00:16:20.080 --> 00:16:22.750
such as image recognition.

00:16:22.750 --> 00:16:26.110
And in this case, we'll pick
the two that work for our app.

00:16:26.110 --> 00:16:29.880
So we'll be using the Cloud
Speech API to transcribe

00:16:29.880 --> 00:16:32.790
audio recordings into text,
and then the Cloud Translation

00:16:32.790 --> 00:16:38.640
API to translate text among
all the different languages.

00:16:38.640 --> 00:16:41.880
So now, do we have all the
components to make our app

00:16:41.880 --> 00:16:42.600
work?

00:16:42.600 --> 00:16:43.230
Seems like it.

00:16:43.230 --> 00:16:45.870
We're almost there,
except how are we

00:16:45.870 --> 00:16:50.070
going to wire these cool Cloud
APIs into our serverless app?

00:16:50.070 --> 00:16:52.200
Traditionally,
with Firebase apps,

00:16:52.200 --> 00:16:54.010
you would bake everything
into the client,

00:16:54.010 --> 00:16:57.130
which is great and convenient
because it's serverless.

00:16:57.130 --> 00:16:59.070
But we do run into
a few challenges

00:16:59.070 --> 00:17:03.120
here that many apps will
come across as they scale.

00:17:03.120 --> 00:17:06.180
For example, your app
may have some secrets.

00:17:06.180 --> 00:17:09.030
In our case, we
have API keys that

00:17:09.030 --> 00:17:12.630
will be used with
those two cloud APIs,

00:17:12.630 --> 00:17:16.079
and you may have
some pre-release,

00:17:16.079 --> 00:17:20.250
like feature-flagged code
packaged with your app that is

00:17:20.250 --> 00:17:23.300
possibly discoverable by users.

00:17:23.300 --> 00:17:27.109
Also, we may have some logic
that's resource-intensive.

00:17:27.109 --> 00:17:29.730
Our end users'
devices could have

00:17:29.730 --> 00:17:34.080
their battery drained
quickly by performing

00:17:34.080 --> 00:17:36.000
all these translations.

00:17:36.000 --> 00:17:37.380
And so we don't want that.

00:17:37.380 --> 00:17:41.460
And building mobile
applications across platforms

00:17:41.460 --> 00:17:45.180
often requires writing
logic multiple times,

00:17:45.180 --> 00:17:48.090
and we would prefer to
avoid that, if possible.

00:17:48.090 --> 00:17:50.310
So our app has all
of these challenges,

00:17:50.310 --> 00:17:56.760
but we can mitigate them
by moving our API secrets

00:17:56.760 --> 00:17:59.880
and resource-intensive
code into the Cloud, where

00:17:59.880 --> 00:18:02.610
we can write the translation
logic once and have it work

00:18:02.610 --> 00:18:06.330
for our Android and iOS apps.

00:18:06.330 --> 00:18:08.590
What might that actually
look like, though?

00:18:08.590 --> 00:18:10.560
We might think
first of something

00:18:10.560 --> 00:18:13.980
like this, where you spin up
some compute instances that

00:18:13.980 --> 00:18:17.430
will serve your APIs.

00:18:17.430 --> 00:18:19.500
But there's actually
some complexity to that.

00:18:19.500 --> 00:18:23.400
As you scale, you'll have
to deal with load balancing,

00:18:23.400 --> 00:18:28.050
caching, routing requests to
your various microservices.

00:18:28.050 --> 00:18:31.410
And soon, you may end up
actually managing something

00:18:31.410 --> 00:18:36.120
that looks like this, which is
more complexity than we'd like.

00:18:36.120 --> 00:18:38.610
However, at Google,
we've been helping

00:18:38.610 --> 00:18:41.540
to manage your app architecture
stress for a long time.

00:18:41.540 --> 00:18:43.500
Google Cloud platform
actually started

00:18:43.500 --> 00:18:48.610
with App Engine in 2008, the
original platform as a service.

00:18:48.610 --> 00:18:51.450
And while a lot has
changed since then,

00:18:51.450 --> 00:18:53.970
we've built on our
decade of experience

00:18:53.970 --> 00:18:56.220
providing compute
solutions for your apps

00:18:56.220 --> 00:19:00.460
to deliver the right
solution for our use case.

00:19:00.460 --> 00:19:02.790
So now, instead of
this, we'll actually

00:19:02.790 --> 00:19:05.010
use Cloud Functions,
which will serve

00:19:05.010 --> 00:19:08.850
as the glue for
our serverless app.

00:19:08.850 --> 00:19:10.380
And now we have
a new recipe that

00:19:10.380 --> 00:19:16.800
looks like this, where we'll
put our API keys into our Cloud

00:19:16.800 --> 00:19:19.320
functions, and any
other secrets have

00:19:19.320 --> 00:19:22.830
that drive, the
resource-intensive computation.

00:19:22.830 --> 00:19:25.020
And then we can write
the functions once,

00:19:25.020 --> 00:19:30.940
and have them execute the
logic for both mobile apps.

00:19:30.940 --> 00:19:33.300
So now Brett will show us
what writing these Cloud

00:19:33.300 --> 00:19:36.720
Functions actually looks like.

00:19:36.720 --> 00:19:38.250
To get started with
Cloud Functions,

00:19:38.250 --> 00:19:41.920
unlike writing a mobile app,
it's actually pretty simple.

00:19:41.920 --> 00:19:45.630
We have, initially, a
few variables up top

00:19:45.630 --> 00:19:50.820
that include our credentials for
using the Cloud APIs, as well

00:19:50.820 --> 00:19:53.010
as a function stub here.

00:19:53.010 --> 00:19:56.760
Then we'll start with our
first Cloud Function, which

00:19:56.760 --> 00:19:59.640
you specify the trigger that
invokes the function, which,

00:19:59.640 --> 00:20:06.390
in this case, would be a new
upload of the audio recording

00:20:06.390 --> 00:20:08.460
to the Firebase
Realtime Database.

00:20:08.460 --> 00:20:10.510
And we listen on
the uploads node.

00:20:10.510 --> 00:20:14.490
And when we get a new
upload in that subtree,

00:20:14.490 --> 00:20:17.400
then we'll pull some
metadata from it,

00:20:17.400 --> 00:20:19.620
such as the language
that the recording was in

00:20:19.620 --> 00:20:22.650
and the encoding
and sample rate,

00:20:22.650 --> 00:20:25.890
and then make a call
to the Cloud Speech API

00:20:25.890 --> 00:20:28.950
to get the transcript
of the text.

00:20:28.950 --> 00:20:33.750
And we send along the
location in Cloud storage

00:20:33.750 --> 00:20:36.990
of the actual binary
data, the audio recording.

00:20:36.990 --> 00:20:38.940
And when we get
back the transcript,

00:20:38.940 --> 00:20:41.910
we'll write it back to
the Realtime Database

00:20:41.910 --> 00:20:44.970
under transcripts to set us
up for the next part, which

00:20:44.970 --> 00:20:46.956
is translation.

00:20:46.956 --> 00:20:50.760
And for translation, we'll
create a second Cloud Function,

00:20:50.760 --> 00:20:54.330
this time listening
on the translations

00:20:54.330 --> 00:20:56.490
subtree in our
Realtime Database.

00:20:56.490 --> 00:21:00.720
And upon getting a new
transcript written,

00:21:00.720 --> 00:21:04.860
we'll take that and iterate
through all the languages

00:21:04.860 --> 00:21:07.740
that our app supports,
and for each language,

00:21:07.740 --> 00:21:10.950
make a call to the
Cloud translation API,

00:21:10.950 --> 00:21:14.190
get the translation, and
write it back to our Realtime

00:21:14.190 --> 00:21:16.770
Database under translations.

00:21:16.770 --> 00:21:19.680
And at the end, having
processed all our languages,

00:21:19.680 --> 00:21:22.650
we'll signal that the
function is complete.

00:21:22.650 --> 00:21:25.560
So actually, at this point,
we have all the logic

00:21:25.560 --> 00:21:27.330
we need to make our app work.

00:21:27.330 --> 00:21:30.900
And all we have
left is to deploy

00:21:30.900 --> 00:21:34.500
the functions, which is
pretty straightforward.

00:21:34.500 --> 00:21:36.630
With a Firebase
deploy command, you

00:21:36.630 --> 00:21:38.820
can deploy all the
functions you've written.

00:21:38.820 --> 00:21:41.880
And it might take
a couple minutes.

00:21:41.880 --> 00:21:44.910
And we have precious time here,
so we've done the deployment.

00:21:44.910 --> 00:21:46.510
This is what it looks like.

00:21:46.510 --> 00:21:47.950
And now I'll hand
it back to Jen,

00:21:47.950 --> 00:21:50.310
who will show us what
the working translation

00:21:50.310 --> 00:21:53.470
app looks like.

00:21:53.470 --> 00:21:55.990
JEN TONG: Thanks.

00:21:55.990 --> 00:21:58.720
So this is where I
need all of your help,

00:21:58.720 --> 00:22:00.820
those of you here in
person and those of you

00:22:00.820 --> 00:22:03.400
on the internet via
the live stream.

00:22:03.400 --> 00:22:06.190
I know all of you have some kind
of computing device with you,

00:22:06.190 --> 00:22:08.680
and many of those
contain web browsers.

00:22:08.680 --> 00:22:14.140
I want you all to go to this
URL on your computing thing.

00:22:14.140 --> 00:22:15.850
And then if you want
to be extra awesome,

00:22:15.850 --> 00:22:19.210
turn your volume up a little
bit, maybe all the way.

00:22:19.210 --> 00:22:22.410
I promise there won't be a
Rickroll or anything like that.

00:22:22.410 --> 00:22:25.120
But we want all of you to
participate in our demo

00:22:25.120 --> 00:22:27.470
and help us test our app.

00:22:27.470 --> 00:22:30.880
So-- oops-- we are
going to go back over

00:22:30.880 --> 00:22:35.330
to see our app with
everything together.

00:22:35.330 --> 00:22:37.651
So I'm going to switch
on over to the one that's

00:22:37.651 --> 00:22:39.400
wired up to the Cloud
Functions, and we're

00:22:39.400 --> 00:22:41.020
going to give it a spin.

00:22:41.020 --> 00:22:43.480
And I mentioned before that
I'm a monolingual person,

00:22:43.480 --> 00:22:45.700
but I'm going to do my
best attempt at speaking

00:22:45.700 --> 00:22:47.830
another language and see
if we can use this app

00:22:47.830 --> 00:22:50.200
to translate this
message to all of you

00:22:50.200 --> 00:22:52.542
and my peers on the stage.

00:22:52.542 --> 00:22:54.110
[SPEAKING JAPANESE]

00:22:55.320 --> 00:22:58.000
There's my terrible attempt
at a foreign language.

00:22:58.000 --> 00:23:00.280
Let's see if it does stuff.

00:23:00.280 --> 00:23:02.230
So it's uploaded, and
now it's up in the Cloud

00:23:02.230 --> 00:23:04.630
doing the translation.

00:23:04.630 --> 00:23:05.500
And--

00:23:05.500 --> 00:23:08.110
COMPUTER: Good morning, baby.

00:23:08.110 --> 00:23:10.900
JEN TONG: So I hear it
muttering many languages about.

00:23:10.900 --> 00:23:14.940
If we switch over to English, we
can see, "Good morning, baby."

00:23:14.940 --> 00:23:17.960
OK, so my Japanese
is not that good.

00:23:17.960 --> 00:23:20.230
But would anyone like
to give me a reply

00:23:20.230 --> 00:23:21.260
in a different language?

00:23:21.260 --> 00:23:23.093
KATHY LI: I do have a
response for you, Jen.

00:23:23.093 --> 00:23:25.990
And actually, I will switch
the language picker over

00:23:25.990 --> 00:23:29.300
to yet another language.

00:23:29.300 --> 00:23:33.580
And here we go.

00:23:33.580 --> 00:23:36.502
[SPEAKING FRENCH]

00:23:40.750 --> 00:23:42.767
So the function
should be triggering.

00:23:47.640 --> 00:23:49.440
COMPUTER: In fact,
it's the afternoon now.

00:23:49.440 --> 00:23:51.720
JEN TONG: In fact, it
is the afternoon now.

00:23:51.720 --> 00:23:55.200
Yes, it is, but I only know how
to say good morning, kind of,

00:23:55.200 --> 00:23:55.890
in Japanese.

00:23:55.890 --> 00:23:58.510
That's about as close as
we can get for the demo.

00:23:58.510 --> 00:24:00.930
So I heard a lot of other
people in the audience using it,

00:24:00.930 --> 00:24:03.400
and I heard a lot of syllables,
phonemes, and languages

00:24:03.400 --> 00:24:04.375
I don't understand.

00:24:04.375 --> 00:24:05.250
How did it translate?

00:24:05.250 --> 00:24:07.500
Did anybody try a language
other than English, French,

00:24:07.500 --> 00:24:09.144
or Japanese?

00:24:09.144 --> 00:24:09.810
How did it work?

00:24:09.810 --> 00:24:11.190
Did it translate successfully?

00:24:11.190 --> 00:24:11.800
AUDIENCE: Yes.

00:24:11.800 --> 00:24:12.550
JEN TONG: Kind of?

00:24:12.550 --> 00:24:13.740
OK, kind of, kind of.

00:24:13.740 --> 00:24:16.240
I hear a lot of this going on.

00:24:16.240 --> 00:24:18.840
Well, it's our first rev and we
built it in about 20 minutes,

00:24:18.840 --> 00:24:20.760
so we'll fix all of that
in the next version.

00:24:24.000 --> 00:24:27.580
But I think it's time for
us to start to wrap up.

00:24:27.580 --> 00:24:32.040
So let's take a peek at what
we all did over the last 20

00:24:32.040 --> 00:24:33.230
minutes or so.

00:24:33.230 --> 00:24:36.630
So we went in with a
plan to help us translate

00:24:36.630 --> 00:24:40.620
and more easily communicate
with people all over the world.

00:24:40.620 --> 00:24:42.144
And we accomplished
it how we solve

00:24:42.144 --> 00:24:43.560
all of our
accomplishments, how we

00:24:43.560 --> 00:24:46.770
solve all of our problems in
life, by writing mobile apps.

00:24:46.770 --> 00:24:47.880
And we wrote two apps.

00:24:47.880 --> 00:24:48.990
We wrote an Android app.

00:24:48.990 --> 00:24:50.990
We wrote an iOS app.

00:24:50.990 --> 00:24:52.650
And then once those
were built, we also

00:24:52.650 --> 00:24:55.560
built out a backend to
connect those all together

00:24:55.560 --> 00:24:58.864
and to connect them
into third-party APIs.

00:24:58.864 --> 00:25:00.780
So whereas in the past,
we might have ended up

00:25:00.780 --> 00:25:02.940
building something like
this, which we could not

00:25:02.940 --> 00:25:06.150
have possibly done in
a half-hour session,

00:25:06.150 --> 00:25:11.280
but we have a new arrow in
our quiver with Firebase.

00:25:11.280 --> 00:25:13.814
We're able to
connect the signaling

00:25:13.814 --> 00:25:16.230
between the mobile apps together
using the Firebase client

00:25:16.230 --> 00:25:18.330
libraries and backend
services, and then

00:25:18.330 --> 00:25:21.300
take it a step further
with Cloud Functions.

00:25:21.300 --> 00:25:22.830
And this allows us
to take advantage

00:25:22.830 --> 00:25:24.660
of all of the cool
stuff that Firebase

00:25:24.660 --> 00:25:27.900
has to offer and easily
connect into all sorts

00:25:27.900 --> 00:25:31.260
of other third-party APIs out
there, whether they be APIs

00:25:31.260 --> 00:25:33.300
from Google Cloud
Platform or APIs

00:25:33.300 --> 00:25:36.140
from other vendors or
your own home-brew APIs.

00:25:36.140 --> 00:25:39.617
It's a great glue for
a lot of your projects.

00:25:39.617 --> 00:25:41.700
So here's where I have a
challenge for all of you.

00:25:41.700 --> 00:25:44.700
Hopefully, you have another
arrow in your app dev quiver

00:25:44.700 --> 00:25:47.600
that you can use to solve
all of your app dev problems.

00:25:47.600 --> 00:25:50.100
So I want all of you to go out
there and try and build stuff

00:25:50.100 --> 00:25:51.700
with this formula.

00:25:51.700 --> 00:25:54.380
And I want you to tell us
about what you've built,

00:25:54.380 --> 00:25:57.310
because we love
hearing from you.

00:25:57.310 --> 00:26:00.510
So go ahead, build stuff, and
then let us know how it goes.

00:26:00.510 --> 00:26:04.020
So we love to hear from you
about questions, concerns,

00:26:04.020 --> 00:26:05.880
and just awesome stuff
you want to share.

00:26:05.880 --> 00:26:07.269
Here are our Twitter handles.

00:26:07.269 --> 00:26:08.310
We love hearing from you.

00:26:08.310 --> 00:26:10.110
DMs are definitely welcome.

00:26:10.110 --> 00:26:12.390
And of course, getting
a little meta here,

00:26:12.390 --> 00:26:14.770
we love feedback on
our sessions, as well.

00:26:14.770 --> 00:26:18.425
So please go ahead and scan
this QR code or go to the URL

00:26:18.425 --> 00:26:19.800
at the bottom of
the page and let

00:26:19.800 --> 00:26:22.360
us know what you
thought of the session.

00:26:22.360 --> 00:26:24.540
And with that, thank
you all very much.

00:26:24.540 --> 00:26:26.640
[APPLAUSE]

00:26:26.640 --> 00:26:29.690
[MUSIC PLAYING]

