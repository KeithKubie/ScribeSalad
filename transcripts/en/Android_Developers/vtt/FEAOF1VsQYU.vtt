WEBVTT
Kind: captions
Language: en

00:00:00.710 --> 00:00:03.530
Android 6.0, also
known as Marshmallow,

00:00:03.530 --> 00:00:06.810
has a new permissions model
that streamlines the app install

00:00:06.810 --> 00:00:08.670
and auto update process.

00:00:08.670 --> 00:00:11.640
This new model gives your
users great flexibility

00:00:11.640 --> 00:00:13.940
but you need to make sure
that your app behaves

00:00:13.940 --> 00:00:17.890
as expected when they allow
or deny specific permissions.

00:00:17.890 --> 00:00:18.400
Hi.

00:00:18.400 --> 00:00:19.774
I'm Laurence
Moroney and I'm here

00:00:19.774 --> 00:00:21.820
today to take you
through the steps that

00:00:21.820 --> 00:00:25.040
will ensure your apps give
your users the best possible

00:00:25.040 --> 00:00:27.390
experience in Marshmallow.

00:00:27.390 --> 00:00:31.140
Step one, set your API
level and target SDK

00:00:31.140 --> 00:00:33.330
to at least version 23.

00:00:33.330 --> 00:00:35.550
You can see them in
your gradle code here.

00:00:35.550 --> 00:00:38.730
Also, make sure that you
are using the V4 support

00:00:38.730 --> 00:00:41.410
library to verify and
request permissions.

00:00:41.410 --> 00:00:44.710
Add it to your gradle file,
if you don't already have it.

00:00:44.710 --> 00:00:46.750
Step two, go back to your code.

00:00:46.750 --> 00:00:48.880
When you connect to
Google Play services,

00:00:48.880 --> 00:00:51.780
you first connect to
a Google API client.

00:00:51.780 --> 00:00:54.170
It's a common step that
you may have seen a hundred

00:00:54.170 --> 00:00:56.250
times before, but before
you skip over this,

00:00:56.250 --> 00:00:58.850
it's extremely important
to set your code

00:00:58.850 --> 00:01:02.680
to handle Google API client
connection failures gracefully

00:01:02.680 --> 00:01:05.050
using the proper
resolution process.

00:01:05.050 --> 00:01:08.390
For details and code samples,
take a look at the link here.

00:01:08.390 --> 00:01:11.220
Step three, at this
point you've likely

00:01:11.220 --> 00:01:13.370
connected to Google
Play services.

00:01:13.370 --> 00:01:15.860
And it's easy to assume
that once you've done this,

00:01:15.860 --> 00:01:18.130
that you can just go
ahead and call the APIs.

00:01:18.130 --> 00:01:20.360
Well, that's mostly true.

00:01:20.360 --> 00:01:23.760
Prior to Marshmallow, users had
to agree to your permissions

00:01:23.760 --> 00:01:25.150
before installing.

00:01:25.150 --> 00:01:27.200
So by the time your
code was running,

00:01:27.200 --> 00:01:29.300
you could assume that
you had the permissions

00:01:29.300 --> 00:01:31.480
to do what you needed to do.

00:01:31.480 --> 00:01:34.600
In the new model, that's
not necessarily the case.

00:01:34.600 --> 00:01:37.900
Before calling any of the
APIs that require permissions,

00:01:37.900 --> 00:01:40.450
you need to check that
you have those permissions

00:01:40.450 --> 00:01:43.770
every single time because
users may have changed

00:01:43.770 --> 00:01:45.900
the privileges
granted to your app

00:01:45.900 --> 00:01:48.690
and you may need to re-request
the permissions again.

00:01:48.690 --> 00:01:51.340
You do this by calling
the check self permission

00:01:51.340 --> 00:01:55.570
method on the activity compact
fragment or contacts compact.

00:01:55.570 --> 00:01:57.080
You can see it here.

00:01:57.080 --> 00:02:00.530
If this call returns false,
then the requested permission

00:02:00.530 --> 00:02:02.310
is no longer available.

00:02:02.310 --> 00:02:05.230
It might have been
previously, but it isn't now.

00:02:05.230 --> 00:02:07.380
So don't call the API.

00:02:07.380 --> 00:02:10.470
The good news is that this
request permissions method

00:02:10.470 --> 00:02:12.970
that you can use to
inform your user that you

00:02:12.970 --> 00:02:17.400
need those permissions and that
they can choose to grant them.

00:02:17.400 --> 00:02:20.900
In the previous step, you
requested the permission again

00:02:20.900 --> 00:02:23.490
and the system would call
you back with an on request

00:02:23.490 --> 00:02:25.270
permissions result function.

00:02:25.270 --> 00:02:28.480
So step four is to implement
this callback function.

00:02:28.480 --> 00:02:31.190
The callback gives you a
request code parameter,

00:02:31.190 --> 00:02:34.440
which you can check against
the particular API call types

00:02:34.440 --> 00:02:35.730
that you want to access.

00:02:35.730 --> 00:02:37.910
And if it gives you
the go ahead by passing

00:02:37.910 --> 00:02:40.230
the permission granted
constant, then you

00:02:40.230 --> 00:02:44.190
can safely call the API,
knowing that it's permitted.

00:02:44.190 --> 00:02:48.570
Step five, if your user has
explicitly denied a permission

00:02:48.570 --> 00:02:52.590
to your app but your app needs
that permission to continue,

00:02:52.590 --> 00:02:55.090
you will need to manage
their expectations

00:02:55.090 --> 00:02:57.730
and help them understand
what your app needs

00:02:57.730 --> 00:03:00.630
for that specific
permission to function.

00:03:00.630 --> 00:03:03.760
You can do this with the
should show request permissions

00:03:03.760 --> 00:03:07.710
rationale method on an
activity fragment or context.

00:03:07.710 --> 00:03:10.830
So for example, here you can
see that a permission has

00:03:10.830 --> 00:03:13.380
been granted for fine location.

00:03:13.380 --> 00:03:16.340
So UI can be generated
to tell the user that.

00:03:16.340 --> 00:03:18.430
What this UI is is up to you.

00:03:18.430 --> 00:03:21.750
It can be as simple as a toast
notification or an entirely new

00:03:21.750 --> 00:03:22.500
activity.

00:03:22.500 --> 00:03:24.240
It's entirely up to you.

00:03:24.240 --> 00:03:26.490
From there, you can
go into the user flow

00:03:26.490 --> 00:03:28.540
to request permissions
again but be

00:03:28.540 --> 00:03:32.520
sure to be respectful and clear
in the message that you give.

00:03:32.520 --> 00:03:33.540
And that's it.

00:03:33.540 --> 00:03:36.010
Android Marshmallow is the
latest, greatest version

00:03:36.010 --> 00:03:38.960
of this mobile operating system
and while the permissions model

00:03:38.960 --> 00:03:41.380
has changed quite a bit,
it's pretty straightforward

00:03:41.380 --> 00:03:43.290
to get your apps
ready to use it.

00:03:43.290 --> 00:03:45.800
By allowing users to choose
their permissions when they're

00:03:45.800 --> 00:03:48.120
relevant and in
context, instead of

00:03:48.120 --> 00:03:50.750
being overwhelmed when
they first install the app,

00:03:50.750 --> 00:03:53.302
their experience with your
app will be much better.

00:03:53.302 --> 00:03:54.760
We have some great
samples that you

00:03:54.760 --> 00:03:57.040
can look at and to
see how to handle user

00:03:57.040 --> 00:03:59.020
permissions in Marshmallow.

00:03:59.020 --> 00:03:59.740
Thank you.

00:03:59.740 --> 00:04:02.650
I'm Laurence Moroney and you're
going to go build better apps.

00:04:02.650 --> 00:04:04.200
[MUSIC PLAYING]

