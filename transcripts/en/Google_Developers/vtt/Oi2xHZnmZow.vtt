WEBVTT
Kind: captions
Language: en

00:00:04.160 --> 00:00:07.010
Hello, and welcome back
to "Route 85," our road

00:00:07.010 --> 00:00:09.150
trip of knowledge
for iOS developers

00:00:09.150 --> 00:00:11.720
where we don't have rest
stops, we have great points.

00:00:11.720 --> 00:00:13.660
And part three on
our little series

00:00:13.660 --> 00:00:16.400
on opening a link in Chrome iOS.

00:00:16.400 --> 00:00:18.840
Now as you recall from last
time-- which you should watch

00:00:18.840 --> 00:00:20.750
if you haven't yet--
we were able to open

00:00:20.750 --> 00:00:22.822
a link from our app
directly in Google Chrome

00:00:22.822 --> 00:00:24.530
and add a button in
Chrome that goes back

00:00:24.530 --> 00:00:27.840
to our app using this giant
URL that takes advantage

00:00:27.840 --> 00:00:30.440
of the x-callback URL format.

00:00:30.440 --> 00:00:32.350
But there's one
little problem here--

00:00:32.350 --> 00:00:34.910
it turns out that if you have
a very old version of Chrome,

00:00:34.910 --> 00:00:37.440
like you haven't updated
it in over two years,

00:00:37.440 --> 00:00:39.773
and you tried to open this
URL, it wouldn't work.

00:00:39.773 --> 00:00:42.920
You see, Chrome didn't add
support for the x-callback URL

00:00:42.920 --> 00:00:46.160
stack until like
November of 2012.

00:00:46.160 --> 00:00:49.060
But because this URL still
begins with the Google Chrome

00:00:49.060 --> 00:00:52.030
scheme our UI
applications can open

00:00:52.030 --> 00:00:55.760
URL method would evaluate
to "true" or "yes."

00:00:55.760 --> 00:00:57.600
It's only once our
old version of Chrome

00:00:57.600 --> 00:01:00.460
receives this URL
that it barfs, so we

00:01:00.460 --> 00:01:03.020
have no way of knowing whether
or not our version of Chrome

00:01:03.020 --> 00:01:06.510
is recent enough to handle
this x-callback URL.

00:01:06.510 --> 00:01:07.600
Or do we?

00:01:07.600 --> 00:01:09.240
Dun, dun dun.

00:01:09.240 --> 00:01:11.000
You see, what the
Google Chrome team did--

00:01:11.000 --> 00:01:12.630
which I think is
kind of clever--

00:01:12.630 --> 00:01:14.710
is they added a third
URL scheme called

00:01:14.710 --> 00:01:16.480
Google Chrome x-callback.

00:01:16.480 --> 00:01:19.610
This was added at the same time
that the team added support

00:01:19.610 --> 00:01:23.080
for x-callback URL, which means
that you can check and see

00:01:23.080 --> 00:01:26.360
if Google Chrome supports
x-callback URL by asking if it

00:01:26.360 --> 00:01:29.110
can open a URL that begins
with the Google Chrome

00:01:29.110 --> 00:01:30.880
x-callback scheme.

00:01:30.880 --> 00:01:32.990
Now if it can't, then
that's OK-- you just

00:01:32.990 --> 00:01:35.770
revert back to the
basic Google Chrome URL.

00:01:35.770 --> 00:01:39.730
But if it can, then you just
pass in the full URL as is.

00:01:39.730 --> 00:01:41.690
So let's go back to
our sample application

00:01:41.690 --> 00:01:44.190
here and put this into action.

00:01:44.190 --> 00:01:47.090
Here I am back in my
ViewController.m file

00:01:47.090 --> 00:01:48.590
and what I'm going
to do here is I'm

00:01:48.590 --> 00:01:51.410
going to change my callback URL
so that instead of beginning

00:01:51.410 --> 00:01:53.382
with googlechrome-s,
it's going to begin

00:01:53.382 --> 00:01:54.590
with googlechrome-x-callback.

00:01:59.130 --> 00:02:02.080
I'm running out of space
here, so let's put this

00:02:02.080 --> 00:02:03.250
on another line.

00:02:03.250 --> 00:02:04.740
Great.

00:02:04.740 --> 00:02:07.330
And so now I have three
URLs that I can use.

00:02:07.330 --> 00:02:10.759
I've got my callback URL for
modern versions of Chrome,

00:02:10.759 --> 00:02:14.260
my basic Chrome URL for
fairly old versions of Chrome,

00:02:14.260 --> 00:02:16.690
and my plain old Safari URL.

00:02:16.690 --> 00:02:18.761
So now let's go into
my "if" clause here.

00:02:18.761 --> 00:02:20.260
So first I'm going
to check and see,

00:02:20.260 --> 00:02:22.570
can I open my
fancy callback URL?

00:02:22.570 --> 00:02:24.570
If I can, then I know
my version of Chrome

00:02:24.570 --> 00:02:27.080
supports the
x-callback URL scheme

00:02:27.080 --> 00:02:29.100
and can therefore
handle this URL that

00:02:29.100 --> 00:02:30.860
points back to my application.

00:02:30.860 --> 00:02:34.240
If it can't, then I'm going to
add another check here and see,

00:02:34.240 --> 00:02:38.750
well, at the very
least can you open

00:02:38.750 --> 00:02:41.320
the URL that is my Chrome URL?

00:02:41.320 --> 00:02:44.630
If so, then I know that I have
a version of Chrome installed,

00:02:44.630 --> 00:02:46.250
albeit a fairly old one.

00:02:46.250 --> 00:02:48.800
But still, I can have
my UI application,

00:02:48.800 --> 00:02:53.490
shared application,
open URL, or Chrome URL.

00:02:53.490 --> 00:02:56.810
And otherwise if it can't
open either of those,

00:02:56.810 --> 00:02:58.720
I know I don't have
Chrome installed at all

00:02:58.720 --> 00:03:01.700
and I will fall
back to use Safari.

00:03:01.700 --> 00:03:02.790
So there we go.

00:03:02.790 --> 00:03:09.950
If we open this app
again on my device,

00:03:09.950 --> 00:03:13.930
we can see that clicking on this
button will bring up Chrome.

00:03:13.930 --> 00:03:16.880
And the fact that Chrome has
this back button pointing back

00:03:16.880 --> 00:03:20.190
to my app means that we passed
along the x-callback version

00:03:20.190 --> 00:03:22.616
of the URL and not
the basic Chrome one.

00:03:22.616 --> 00:03:24.490
And that's because I
have a version of Chrome

00:03:24.490 --> 00:03:27.060
that is less than two years old.

00:03:27.060 --> 00:03:31.080
I actually can't show you this
working on a really old version

00:03:31.080 --> 00:03:33.160
of Chrome-- I'm not quite
sure where to get it--

00:03:33.160 --> 00:03:35.030
but I guess you'll
just have to trust me

00:03:35.030 --> 00:03:37.530
that that would work too.

00:03:37.530 --> 00:03:40.180
So this is all fine and
dandy, but I have now

00:03:40.180 --> 00:03:43.820
expanded my simple code
to open a URL from one

00:03:43.820 --> 00:03:46.600
or two lines to,
like, what-- 12?

00:03:46.600 --> 00:03:50.710
And we did a bunch of manual
URL escaping in the process.

00:03:50.710 --> 00:03:53.910
So it seems like I probably
want to abstract this logic out

00:03:53.910 --> 00:03:55.860
into a separate class
or something, right?

00:03:55.860 --> 00:03:57.720
Well as luck would
have it, Google

00:03:57.720 --> 00:03:59.750
has already done
the work for us.

00:03:59.750 --> 00:04:02.980
So let's take a
look at that next.

00:04:02.980 --> 00:04:06.226
So let's go visit the
OpenInChrome GitHub page over

00:04:06.226 --> 00:04:07.934
at GitHub.com/Googl
eChrome/OpenInChrome.

00:04:17.200 --> 00:04:20.940
Now you can go ahead and grab
these files however you'd like.

00:04:20.940 --> 00:04:24.490
You can download the ZIP or
clone the repository locally.

00:04:24.490 --> 00:04:27.350
I think I am just going
to grab the ZIP file here.

00:04:32.490 --> 00:04:40.270
And then once it's done, I'm
going to open up my ZIP file.

00:04:40.270 --> 00:04:42.650
And within here
are the two files

00:04:42.650 --> 00:04:45.760
you're going to need--
OpenInChromeController.h

00:04:45.760 --> 00:04:48.010
and OpenInChromeController.m.

00:04:48.010 --> 00:04:51.520
So I'm just going to
drag these two directly

00:04:51.520 --> 00:04:55.150
into my project in Xcode here.

00:04:55.150 --> 00:04:58.780
I'm going to say,
yes, let's copy these.

00:04:58.780 --> 00:05:01.270
And you can go ahead and check
out these files if you want.

00:05:01.270 --> 00:05:04.942
If you've been following these
lessons up until this point,

00:05:04.942 --> 00:05:07.150
most of this code should
look pretty familiar to you.

00:05:07.150 --> 00:05:09.525
They're just being a little
more robust and a little more

00:05:09.525 --> 00:05:11.300
bulletproof than
our sample code.

00:05:11.300 --> 00:05:13.730
So go ahead and check these out.

00:05:13.730 --> 00:05:16.390
You can check out most
importantly the .h file,

00:05:16.390 --> 00:05:19.320
which is the actual public
interface of this class.

00:05:19.320 --> 00:05:21.270
You could see that
basically it's a singleton.

00:05:21.270 --> 00:05:23.730
We have a nice Boolean,
IsChromeInstalled,

00:05:23.730 --> 00:05:27.540
and we can either open a URL in
Chrome or open a URL in Chrome

00:05:27.540 --> 00:05:29.070
with a callback URL.

00:05:29.070 --> 00:05:30.980
So let's go back to
my ViewController

00:05:30.980 --> 00:05:35.180
here and go back to my
"Open In Web Page" method.

00:05:35.180 --> 00:05:38.590
And basically, let's
just delete all of this.

00:05:38.590 --> 00:05:40.110
All that hard work-- gone.

00:05:42.630 --> 00:05:46.260
So I'm going to go ahead
and define two URLs here.

00:05:46.260 --> 00:05:52.000
The first is the URL that
I actually want to open.

00:05:52.000 --> 00:05:57.100
We'll call it pageToOpen, it'll
be an NSURL, URL with string,

00:05:57.100 --> 00:05:59.450
and this can be
just a plain old URL

00:05:59.450 --> 00:06:04.370
that opens up www.google.com.

00:06:04.370 --> 00:06:07.290
Then let's add a second URL,
which is our callback URL.

00:06:13.575 --> 00:06:15.950
And this is going to become
'googleOpenInChromeExample;'.

00:06:23.990 --> 00:06:25.900
Again, note the colon
at the end there,

00:06:25.900 --> 00:06:30.140
and clearly you should make
this specific to your app.

00:06:30.140 --> 00:06:32.750
Now the code to open
this up is much simpler.

00:06:32.750 --> 00:06:34.709
First, let me go
ahead and import

00:06:34.709 --> 00:06:35.875
my OpenInChromeController.h.

00:06:39.424 --> 00:06:41.090
And I'm just going
to add an "if" clause

00:06:41.090 --> 00:06:45.340
that says if
OpenInChromeController shared

00:06:45.340 --> 00:06:51.950
instance is Chrome-installed--
well, if that's the case, then

00:06:51.950 --> 00:06:53.310
let's just open it in Chrome.

00:06:53.310 --> 00:06:55.705
And I can do that by calling
the method OpenInChromeCont

00:06:55.705 --> 00:06:56.580
rollerSharedInstance.

00:06:58.990 --> 00:07:01.860
OpenInChrome-- for
this URL, I'm going

00:07:01.860 --> 00:07:04.410
to make it the page to open.

00:07:04.410 --> 00:07:08.000
With callback URL, can
be our callback URL.

00:07:08.000 --> 00:07:10.760
And create a new tab-- it's
probably not necessary,

00:07:10.760 --> 00:07:13.720
so I'll say "No" here.

00:07:13.720 --> 00:07:15.370
Format this nicely.

00:07:15.370 --> 00:07:18.560
And otherwise, user doesn't
have Chrome installed.

00:07:18.560 --> 00:07:21.530
So we'll just fall back to
opening up this link in Safari.

00:07:21.530 --> 00:07:24.580
And this is our plain old UI
application/ shared application

00:07:24.580 --> 00:07:25.370
open URL method.

00:07:29.020 --> 00:07:31.660
And the nice thing here is
that the OpenInChromeController

00:07:31.660 --> 00:07:35.530
is doing all the heavy lifting
in converting my ordinary URL

00:07:35.530 --> 00:07:39.340
into an x-callback URL with all
that percent escape information

00:07:39.340 --> 00:07:40.640
all over the place.

00:07:40.640 --> 00:07:43.970
In fact, let's go into
this controller here

00:07:43.970 --> 00:07:47.070
and we'll add a little
NSLog statement that

00:07:47.070 --> 00:07:50.680
shows what URL it actually
ends up trying to open.

00:07:50.680 --> 00:07:56.670
So right here, I'm going to
add a little NSLog that says,

00:07:56.670 --> 00:08:01.050
I am attempting to
open-- and we'll

00:08:01.050 --> 00:08:03.050
look at our Chrome
URL absolute string.

00:08:05.700 --> 00:08:09.650
So we can give this a
try now by running it.

00:08:09.650 --> 00:08:11.850
And just like always,
I have a button.

00:08:11.850 --> 00:08:14.100
I can click on it,
takes me into Chrome,

00:08:14.100 --> 00:08:16.590
and there's a Back button
that once again takes me back

00:08:16.590 --> 00:08:18.200
to my application.

00:08:18.200 --> 00:08:20.060
And we go back to
our console and we

00:08:20.060 --> 00:08:21.670
look at what's been
generated here.

00:08:21.670 --> 00:08:25.060
We can see that yes, it has
taken our very simple URL

00:08:25.060 --> 00:08:29.170
and converted it into the giant
x-callback URL that is required

00:08:29.170 --> 00:08:32.159
to open this in Chrome
with the Back button.

00:08:32.159 --> 00:08:33.610
So we'll stop this.

00:08:33.610 --> 00:08:36.150
And so now I'm sure you can
see we have some logic that

00:08:36.150 --> 00:08:40.120
is really easy to convert to
a more general purpose method.

00:08:40.120 --> 00:08:43.200
Now maybe in a real application,
when the user starts up

00:08:43.200 --> 00:08:45.780
the app, you can check and see
if they have Chrome installed.

00:08:45.780 --> 00:08:48.040
If they do have Google
Chrome installed, then maybe

00:08:48.040 --> 00:08:49.890
the first time the
user clicks on a link,

00:08:49.890 --> 00:08:52.140
you can bring up an alert
view or an action sheet that

00:08:52.140 --> 00:08:54.110
lets them select
their default browser.

00:08:54.110 --> 00:08:56.300
Save that information
in NS User Defaults,

00:08:56.300 --> 00:08:57.910
remember that choice
in the future.

00:08:57.910 --> 00:09:00.050
And then you could write
a simple "open URLs

00:09:00.050 --> 00:09:02.540
in preferred browser"
method that takes a URL

00:09:02.540 --> 00:09:04.430
and makes the appropriate
call to open it.

00:09:04.430 --> 00:09:05.600
And there you go.

00:09:05.600 --> 00:09:07.470
I now have an
application that opens up

00:09:07.470 --> 00:09:11.710
links in the user's browser of
choice, whatever it might be.

00:09:11.710 --> 00:09:14.080
And in case you're wondering,
do extensions in iOS 8

00:09:14.080 --> 00:09:16.040
make this entire
system obsolete?

00:09:16.040 --> 00:09:17.570
The answer would
appear to be no.

00:09:17.570 --> 00:09:20.520
iOS 8 does support a number
of actions with extensions.

00:09:20.520 --> 00:09:23.750
And I suspect that there are
some use cases of URL schemes

00:09:23.750 --> 00:09:25.880
that could now be better
handled by extensions.

00:09:25.880 --> 00:09:29.869
However, opening up a web page
isn't currently one of them.

00:09:29.869 --> 00:09:31.410
So now at this point,
we're basically

00:09:31.410 --> 00:09:32.993
done with our main
goal of showing you

00:09:32.993 --> 00:09:35.500
how to open up a link
in Chrome on iOS,

00:09:35.500 --> 00:09:37.190
but we can still have
a little more fun

00:09:37.190 --> 00:09:39.476
with that x-callback
URL and see how

00:09:39.476 --> 00:09:40.850
we can take
advantage of the link

00:09:40.850 --> 00:09:43.820
that Chrome is using to send
the user back to our app.

00:09:43.820 --> 00:09:46.320
And I'll show you how to
do that in the next lesson.

00:09:46.320 --> 00:09:47.770
So stay tuned.

00:09:47.770 --> 00:09:50.820
[ROCK MUSIC PLAYING]

