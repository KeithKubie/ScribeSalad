WEBVTT
Kind: captions
Language: en

00:00:10.100 --> 00:00:13.320
ROMAN NURIK: We're hoping
there's audio this time.

00:00:13.320 --> 00:00:15.050
Anyway, hello, once again.

00:00:15.050 --> 00:00:17.200
Welcome to Android
Design in Action.

00:00:17.200 --> 00:00:19.090
Your host, Roman Nurik.

00:00:19.090 --> 00:00:20.895
ADAM KOCH: Hey guys,
my name's Adam Koch.

00:00:20.895 --> 00:00:23.380
NICK BUTCHER: And hi,
my name's Nick Butcher.

00:00:23.380 --> 00:00:25.310
ROMAN NURIK: So
today's episode is

00:00:25.310 --> 00:00:27.790
going to be about
presenting images.

00:00:27.790 --> 00:00:29.880
We're going to share a
bunch of tips and tricks

00:00:29.880 --> 00:00:33.750
on how to present kind of
images in a delightful way

00:00:33.750 --> 00:00:34.880
inside your apps.

00:00:34.880 --> 00:00:36.838
A lot of the things that
we'll talk about today

00:00:36.838 --> 00:00:38.910
have been covered
in past episodes.

00:00:38.910 --> 00:00:41.820
But we felt that it was good
to have kind of a recap episode

00:00:41.820 --> 00:00:44.654
as well as talk about
some minor new things.

00:00:44.654 --> 00:00:46.320
Not necessarily new
in Android, but kind

00:00:46.320 --> 00:00:49.210
of new things you
should be thinking about

00:00:49.210 --> 00:00:53.210
related to showing photos and
thumbnails inside your apps.

00:00:53.210 --> 00:00:56.320
So without further ado,
should we get started?

00:00:56.320 --> 00:00:59.779
And Nick, do you want to
introduce the Design Principle?

00:00:59.779 --> 00:01:00.820
NICK BUTCHER: Absolutely.

00:01:00.820 --> 00:01:02.543
The images are such
an important part

00:01:02.543 --> 00:01:05.001
of your user interface that
they're specifically called out

00:01:05.001 --> 00:01:06.870
in Android's Design
Principles which

00:01:06.870 --> 00:01:09.460
say that pictures are
faster than words.

00:01:09.460 --> 00:01:11.970
And that you should use them
to get people's attention

00:01:11.970 --> 00:01:14.700
and be more efficient.

00:01:14.700 --> 00:01:19.065
So there's a much quicker way
to express your information

00:01:19.065 --> 00:01:21.220
in your user interface
by using imagery.

00:01:21.220 --> 00:01:23.190
If you have screen
full of images

00:01:23.190 --> 00:01:25.530
versus a screen full of text
and labels and so forth,

00:01:25.530 --> 00:01:27.280
one is going to be
instantly a lot quicker

00:01:27.280 --> 00:01:30.240
to kind of understand,
to kind of grok

00:01:30.240 --> 00:01:32.030
what's going on, than the other.

00:01:32.030 --> 00:01:34.824
So you should really make
use of them while you can.

00:01:34.824 --> 00:01:37.365
And the other thing I think is
very important about this kind

00:01:37.365 --> 00:01:39.979
of principle is that a lot
of these kind of devices

00:01:39.979 --> 00:01:41.645
out there these days,
phones and tablets

00:01:41.645 --> 00:01:45.850
and so forth, really kind
of beautiful high resolution

00:01:45.850 --> 00:01:46.580
screens.

00:01:46.580 --> 00:01:48.080
So it's a real
missed opportunity

00:01:48.080 --> 00:01:50.090
not to provide really
useful, crisp imagery

00:01:50.090 --> 00:01:52.525
wherever you can to enrich
your user interfaces.

00:01:55.200 --> 00:01:56.325
So shall we push on?

00:01:58.960 --> 00:02:01.480
So one of the most
important things

00:02:01.480 --> 00:02:04.240
when thinking about using
imagery in your application

00:02:04.240 --> 00:02:05.210
is very minor.

00:02:05.210 --> 00:02:07.640
Designing for Android
is designing for scale,

00:02:07.640 --> 00:02:11.164
designing for a variety
of devices out there.

00:02:11.164 --> 00:02:12.580
So what that means
is, when you're

00:02:12.580 --> 00:02:13.700
thinking about your
images and you're

00:02:13.700 --> 00:02:16.033
thinking about how they're
going to display in your user

00:02:16.033 --> 00:02:16.650
interface.

00:02:16.650 --> 00:02:19.770
You need to build in a level
of flexibility in there

00:02:19.770 --> 00:02:21.770
so that your user
interface can work

00:02:21.770 --> 00:02:25.190
on a variety of different
screen sizes and shapes

00:02:25.190 --> 00:02:28.365
and that your imagery can stand
up to that and still look good.

00:02:28.365 --> 00:02:30.823
So this is a technique that
we've covered a couple of times

00:02:30.823 --> 00:02:32.800
on the show, so I'll go
quite quickly over it.

00:02:32.800 --> 00:02:34.640
But one technique
that works very well

00:02:34.640 --> 00:02:38.580
is to respect the aspect
ratio of the image you want

00:02:38.580 --> 00:02:40.240
to show but to be
a little bit more

00:02:40.240 --> 00:02:42.640
flexible about the exact
balance in which you show.

00:02:42.640 --> 00:02:45.970
And one way you can do this is
using a center crop technique.

00:02:45.970 --> 00:02:48.300
So what this will
do is, depending

00:02:48.300 --> 00:02:50.850
on how much space you have
available to show the image,

00:02:50.850 --> 00:02:52.990
it'll kind of blow it
up or crop off the sides

00:02:52.990 --> 00:02:56.120
and so forth in order to
maintain the aspect ratio

00:02:56.120 --> 00:02:59.560
but to fit in the amount of
space available to the image.

00:02:59.560 --> 00:03:02.020
It's a very important
technique to kind of embrace.

00:03:02.020 --> 00:03:04.270
And I think as we've said
before, this technique works

00:03:04.270 --> 00:03:07.860
really, really well if
you have images which

00:03:07.860 --> 00:03:09.940
don't have a
particular focal point.

00:03:09.940 --> 00:03:12.950
So for example if you have this
picture of some bacon, which

00:03:12.950 --> 00:03:15.760
we always seem to come
back to here on ADiA,

00:03:15.760 --> 00:03:18.460
then it works particularly
well for this kind of content.

00:03:18.460 --> 00:03:21.530
If you have people's faces you
might risk kind of cropping off

00:03:21.530 --> 00:03:24.490
something you might consider
the focal point of the picture,

00:03:24.490 --> 00:03:27.050
so just bear that in mind.

00:03:27.050 --> 00:03:27.840
ROMAN NURIK: Cool.

00:03:27.840 --> 00:03:29.390
Should we move on?

00:03:34.848 --> 00:03:36.306
NICK BUTCHER: Next
step we're going

00:03:36.306 --> 00:03:38.320
to talk about have
different ways

00:03:38.320 --> 00:03:41.520
that you can kind of
decorate or change

00:03:41.520 --> 00:03:43.021
the imagery which
you're looking at.

00:03:43.021 --> 00:03:44.936
And the first thing we're
going to [INAUDIBLE]

00:03:44.936 --> 00:03:46.360
here is using different masks.

00:03:46.360 --> 00:03:50.420
So Android has a kind
of particular look

00:03:50.420 --> 00:03:52.090
and feel when it
comes to shapes.

00:03:52.090 --> 00:03:54.950
So for example, you don't
see many kind of pill shapes

00:03:54.950 --> 00:03:56.220
or rounded rectangle shapes.

00:03:56.220 --> 00:03:58.770
But what you will see is lots
of simple geometric shapes,

00:03:58.770 --> 00:04:00.842
like squares, circles and
so forth. [INAUDIBLE] maybe?

00:04:00.842 --> 00:04:01.383
I don't know.

00:04:03.971 --> 00:04:05.720
One technique you can
use with your images

00:04:05.720 --> 00:04:08.720
in order to break out of a
rhythm and make them pop,

00:04:08.720 --> 00:04:10.782
in order to kind of set
them out of new content

00:04:10.782 --> 00:04:14.940
somehow is using different
kind of decorations,

00:04:14.940 --> 00:04:16.720
like a circular mask
in this instance,

00:04:16.720 --> 00:04:19.640
in order to kind of
make it stand out.

00:04:19.640 --> 00:04:21.640
ROMAN NURIK: The nice
thing about circular masks

00:04:21.640 --> 00:04:25.150
for avatar photos, too,
is that it's a bit softer.

00:04:25.150 --> 00:04:28.420
I guess in general circles
are a bit softer than squares

00:04:28.420 --> 00:04:30.020
or other things like that.

00:04:30.020 --> 00:04:36.230
And it's kind of nice to unify
or to tie this visual element,

00:04:36.230 --> 00:04:39.150
the circle, to the
idea of a person.

00:04:39.150 --> 00:04:41.040
So not necessarily
circles, it could

00:04:41.040 --> 00:04:42.880
be other things, but
kind of making sure

00:04:42.880 --> 00:04:44.480
that throughout your
app any time you

00:04:44.480 --> 00:04:46.500
show a type, a single
type of object,

00:04:46.500 --> 00:04:48.080
that there's visual consistency.

00:04:48.080 --> 00:04:49.900
And using a circle
mask is one of the ways

00:04:49.900 --> 00:04:51.560
in which you can achieve that.

00:04:55.845 --> 00:04:57.220
NICK BUTCHER: And
moving on, here

00:04:57.220 --> 00:05:00.490
is an example from
the Path application

00:05:00.490 --> 00:05:02.440
which combines that
idea of using a circle

00:05:02.440 --> 00:05:06.876
mask with providing kind of a
slight white border and a drop

00:05:06.876 --> 00:05:07.500
shadow onto it.

00:05:07.500 --> 00:05:10.040
Just in order to set it
apart from the content,

00:05:10.040 --> 00:05:12.816
give it a little bit
of content protection

00:05:12.816 --> 00:05:14.690
if you're not sure what
the color of an image

00:05:14.690 --> 00:05:17.760
is going to be-- it's user
provided-- you can stop that

00:05:17.760 --> 00:05:19.906
from contrasting with
the background elements,

00:05:19.906 --> 00:05:20.536
for example.

00:05:20.536 --> 00:05:22.202
And make it stand out
as well, giving it

00:05:22.202 --> 00:05:23.452
a little bit of visual effect.

00:05:27.404 --> 00:05:30.700
ROMAN NURIK: Should we
move on to text overlays?

00:05:30.700 --> 00:05:33.600
So any time you show
images-- and actually this

00:05:33.600 --> 00:05:35.510
is the something we'll
talk about in a bit

00:05:35.510 --> 00:05:37.650
with full bleed imagery--
but basically anytime

00:05:37.650 --> 00:05:39.850
you show images and you
want to show captions

00:05:39.850 --> 00:05:42.990
next to those images, there's
a couple ways to do that.

00:05:42.990 --> 00:05:45.610
So first of all, obviously
you could have the photo

00:05:45.610 --> 00:05:48.240
and you can show captions below
it, if you have the space.

00:05:48.240 --> 00:05:51.580
But one of the ways in which
you can kind of maximize

00:05:51.580 --> 00:05:56.940
the use of space, also I guess
maximize the effectiveness

00:05:56.940 --> 00:05:59.940
of the photo or of the image,
is to make the image take up

00:05:59.940 --> 00:06:04.010
as much space as possible and
overlay any sort of metadata

00:06:04.010 --> 00:06:07.480
or titles or captions or things
like that on top of the image.

00:06:07.480 --> 00:06:11.110
So here's just a couple of
examples of that in action, I

00:06:11.110 --> 00:06:11.620
guess.

00:06:11.620 --> 00:06:14.800
So this is from the ADiA app,
the Android Design In Action

00:06:14.800 --> 00:06:17.002
app from Andreas.

00:06:17.002 --> 00:06:18.710
And you could see that
the images take up

00:06:18.710 --> 00:06:20.530
as much space is possible.

00:06:20.530 --> 00:06:24.630
There aren't big white
gaps in between them

00:06:24.630 --> 00:06:27.890
and then having text
inside those gaps.

00:06:27.890 --> 00:06:30.300
This is purely kind of
letting the image take

00:06:30.300 --> 00:06:33.850
as much as possible and using
the space on top the image

00:06:33.850 --> 00:06:36.677
as a space for the metadata.

00:06:36.677 --> 00:06:37.760
So here's another example.

00:06:37.760 --> 00:06:39.390
This is the circa app.

00:06:39.390 --> 00:06:44.920
The circa app is a recently
published news app.

00:06:44.920 --> 00:06:50.250
And here they also have the news
article, or the news thumbnail,

00:06:50.250 --> 00:06:53.756
take up almost half the
entire screen, maybe even

00:06:53.756 --> 00:06:54.560
a little more.

00:06:54.560 --> 00:06:56.590
And then the title is
just kind of an overlay.

00:06:56.590 --> 00:06:59.230
And here are just a couple of
other examples from Google Play

00:06:59.230 --> 00:07:01.685
Music and the People app.

00:07:01.685 --> 00:07:03.310
The reason we wanted
to point these out

00:07:03.310 --> 00:07:05.510
is that these are a
couple different examples,

00:07:05.510 --> 00:07:08.892
but they each use a different
form of background protection.

00:07:08.892 --> 00:07:10.850
And background protection
is basically the idea

00:07:10.850 --> 00:07:14.870
that if you just overlay text of
whichever color, black, white,

00:07:14.870 --> 00:07:18.150
whatever-- if you just
overlay text over an image,

00:07:18.150 --> 00:07:20.280
very frequently
the image itself is

00:07:20.280 --> 00:07:22.740
going to contrast too
highly with the text.

00:07:22.740 --> 00:07:24.880
And the text won't be
very readable, won't

00:07:24.880 --> 00:07:26.060
be very legible.

00:07:26.060 --> 00:07:27.662
So background
protection is something

00:07:27.662 --> 00:07:29.620
that you place in the
background or some effect

00:07:29.620 --> 00:07:33.110
that you provide that
makes the text legible.

00:07:33.110 --> 00:07:35.510
So here's an example
in the ADiA app,

00:07:35.510 --> 00:07:38.000
there's a kind of
a dark black drop

00:07:38.000 --> 00:07:40.645
or rather a black gradient.

00:07:40.645 --> 00:07:43.350
And that's a very,
very common form.

00:07:43.350 --> 00:07:46.396
Here in the top right
there is the people app,

00:07:46.396 --> 00:07:48.020
and instead of a
gradient they just use

00:07:48.020 --> 00:07:52.510
kind of a semi-transparent
black rectangle.

00:07:52.510 --> 00:07:54.850
That's another common
way of doing things.

00:07:54.850 --> 00:07:57.900
And then here in the
Google Play Music app

00:07:57.900 --> 00:08:01.250
the action bar is
also using a gradient

00:08:01.250 --> 00:08:02.510
for background protection.

00:08:02.510 --> 00:08:04.960
So whatever the background
is, whatever this photo is,

00:08:04.960 --> 00:08:06.440
even if it's just
pure white you'll

00:08:06.440 --> 00:08:11.182
still be able to read the title
here and see the controls.

00:08:11.182 --> 00:08:12.890
So the one thing I
did want to talk about

00:08:12.890 --> 00:08:15.220
is the way circa does it is
actually very interesting.

00:08:15.220 --> 00:08:17.150
It does a combination
of a slight drop

00:08:17.150 --> 00:08:20.970
shadow on the text,
which alone is usually

00:08:20.970 --> 00:08:22.550
enough to make it legible.

00:08:22.550 --> 00:08:25.420
But it also applies
this blurring effect.

00:08:25.420 --> 00:08:27.150
And the actual
execution here, I think,

00:08:27.150 --> 00:08:27.920
could be a little better.

00:08:27.920 --> 00:08:29.920
There could be kind of a faded
blur or something like that.

00:08:29.920 --> 00:08:31.919
There's kind of a sharp
edge between the blurred

00:08:31.919 --> 00:08:33.470
and not blurred image.

00:08:33.470 --> 00:08:35.700
But the idea is that they're
blurring the background

00:08:35.700 --> 00:08:38.549
to provide as much
contrast on the text.

00:08:38.549 --> 00:08:41.070
So any time you see
edges, for example,

00:08:41.070 --> 00:08:44.390
in this photo of a
turtle-- that hard edge

00:08:44.390 --> 00:08:46.920
between the turtle
and the hand--

00:08:46.920 --> 00:08:49.112
that's actually
visual distraction.

00:08:49.112 --> 00:08:51.320
In this case, when you're
just focusing on the image,

00:08:51.320 --> 00:08:52.350
that's a good thing.

00:08:52.350 --> 00:08:54.710
You want to focus on the
different details in the image.

00:08:54.710 --> 00:08:57.450
But here, where
you just want kind

00:08:57.450 --> 00:08:59.022
of a more vague
sense of the image,

00:08:59.022 --> 00:09:00.730
but you really want
to focus on the text,

00:09:00.730 --> 00:09:02.271
they kind of blur
out the background,

00:09:02.271 --> 00:09:04.930
make those edges
much, much blurrier.

00:09:04.930 --> 00:09:06.690
And make the text
much easier to read.

00:09:06.690 --> 00:09:09.820
So a couple of different
ways to overlay text

00:09:09.820 --> 00:09:12.210
or overly metadata
on top of your photos

00:09:12.210 --> 00:09:15.924
to maximize the amount of
space dedicated to images.

00:09:15.924 --> 00:09:17.340
NICK BUTCHER:
Another great aspect

00:09:17.340 --> 00:09:19.070
of using these kind
of overlay labels

00:09:19.070 --> 00:09:23.720
is that it lets you kind of
say that this whole item is

00:09:23.720 --> 00:09:24.714
the interface.

00:09:24.714 --> 00:09:26.880
It's kind of the idea of
putting your content first,

00:09:26.880 --> 00:09:30.810
and that anything is kind of
within it, contained within it.

00:09:30.810 --> 00:09:33.150
So it's like saying
on the People app,

00:09:33.150 --> 00:09:35.554
on the example where you have
them calling the contact,

00:09:35.554 --> 00:09:37.220
this is the thing
that you can click on.

00:09:37.220 --> 00:09:38.457
This is the person.

00:09:38.457 --> 00:09:40.540
This is the kind of data
item I can interact with.

00:09:40.540 --> 00:09:42.230
And there isn't another
label off slightly somewhere

00:09:42.230 --> 00:09:44.146
to the side, so you have
to kind of expand out

00:09:44.146 --> 00:09:46.230
of the area to
click on [INAUDIBLE]

00:09:46.230 --> 00:09:47.640
or whatever it might be.

00:09:47.640 --> 00:09:48.822
It's completely contained.

00:09:48.822 --> 00:09:50.280
So this overlay
layer will help you

00:09:50.280 --> 00:09:53.995
to build this kind of
data-centric kind of UI.

00:09:53.995 --> 00:09:56.370
ROMAN NURIK: It's really--
the image is the touch target,

00:09:56.370 --> 00:09:57.040
right?

00:09:57.040 --> 00:10:02.630
It's almost like if you look
at modern UIs versus past UIs,

00:10:02.630 --> 00:10:04.300
really the content
is the Chrome.

00:10:04.300 --> 00:10:08.600
The content is the
interactive target.

00:10:08.600 --> 00:10:13.100
And you have here-- when
you let the image be

00:10:13.100 --> 00:10:18.170
the target I think you end
up with a much more rich UI.

00:10:18.170 --> 00:10:18.670
OK.

00:10:18.670 --> 00:10:21.082
Should we move on?

00:10:21.082 --> 00:10:22.290
Let's move on to full bleeds.

00:10:22.290 --> 00:10:27.000
So this falls-- this is kind
of related to text overlays.

00:10:27.000 --> 00:10:30.690
Kind of in a similar manner, we
have some similar screen shots.

00:10:30.690 --> 00:10:34.480
But here the idea is
that you want to-- sorry,

00:10:34.480 --> 00:10:37.170
we keep hearing IM noises.

00:10:37.170 --> 00:10:40.790
Anyway, here the
idea is that you

00:10:40.790 --> 00:10:44.834
want the image to take as much
physical space as possible.

00:10:44.834 --> 00:10:47.000
You want it to take as much
real estate as possible.

00:10:47.000 --> 00:10:51.630
You want your UI, basically,
to be as immersive as possible.

00:10:51.630 --> 00:10:53.600
So here's an example
of that where

00:10:53.600 --> 00:10:56.510
basically rather than
having the image start

00:10:56.510 --> 00:10:59.910
at the bottom of the action
bar, and maybe kind of pushing

00:10:59.910 --> 00:11:02.440
the rest of this content
down in Google Play Music,

00:11:02.440 --> 00:11:05.450
they actually decided that,
hey, why can't the image be

00:11:05.450 --> 00:11:06.670
part of the action bar?

00:11:06.670 --> 00:11:08.990
So here they used kind of
a translucent action bar

00:11:08.990 --> 00:11:10.740
with again that
backup protection

00:11:10.740 --> 00:11:14.320
and let the image go
as high up as possible.

00:11:14.320 --> 00:11:17.120
And so here is
basically the concept

00:11:17.120 --> 00:11:21.017
of maximum space for content,
maximum space for images.

00:11:21.017 --> 00:11:23.600
When you have multiple images,
like in the case of thumbnails,

00:11:23.600 --> 00:11:25.224
what that means is
you want to minimize

00:11:25.224 --> 00:11:26.360
the gaps between images.

00:11:26.360 --> 00:11:29.000
You want to minimize
the space between them.

00:11:29.000 --> 00:11:31.290
And so here's again an
example of the People app,

00:11:31.290 --> 00:11:32.860
where the space
between each image

00:11:32.860 --> 00:11:35.800
is only about one or two dips.

00:11:35.800 --> 00:11:39.390
And the idea here is that if
you had larger space, if you

00:11:39.390 --> 00:11:41.575
had larger gaps, whether
they be white or black--

00:11:41.575 --> 00:11:44.860
it would be extra
visual distraction.

00:11:44.860 --> 00:11:48.210
It would potentially help
further the visual hierarchy,

00:11:48.210 --> 00:11:51.440
but the hierarchy here is
well established already.

00:11:51.440 --> 00:11:56.070
And so extra space there would
be just kind of static space

00:11:56.070 --> 00:11:57.470
that's not being used.

00:11:57.470 --> 00:12:02.960
That's not really assisting
in presenting this content.

00:12:02.960 --> 00:12:06.016
So I think that the fact
there are small gaps here,

00:12:06.016 --> 00:12:09.218
I think it services this
content really well.

00:12:11.910 --> 00:12:13.420
And then two quick
other examples.

00:12:13.420 --> 00:12:15.800
Here's another example
of a flip board.

00:12:15.800 --> 00:12:18.090
Again, with very minimal
space between photos,

00:12:18.090 --> 00:12:19.305
between thumbnails.

00:12:19.305 --> 00:12:21.930
And then here's another example
of going completely full bleed,

00:12:21.930 --> 00:12:25.365
where basically the
entire screen is a photo.

00:12:25.365 --> 00:12:27.200
And it's not a static photo.

00:12:27.200 --> 00:12:29.590
This is kind of an important
distinction to make.

00:12:29.590 --> 00:12:31.060
It's not just a
static photo that

00:12:31.060 --> 00:12:33.650
is the same for every
time you launch the app.

00:12:33.650 --> 00:12:37.390
It is a piece of content and
it's still very, very dynamic.

00:12:37.390 --> 00:12:40.230
So the idea is here is that
they spent as much space

00:12:40.230 --> 00:12:44.240
as possible showing the content
and then overlaid things

00:12:44.240 --> 00:12:48.810
on top of it in a background
protected kind of way-- the app

00:12:48.810 --> 00:12:52.470
branding as well as some
of the kind of things

00:12:52.470 --> 00:12:55.730
that you could look at once
you've opened the magazine.

00:12:55.730 --> 00:12:57.055
So that's full bleed imagery.

00:12:57.055 --> 00:13:00.260
Should we move on
to touch feedback?

00:13:00.260 --> 00:13:02.230
ADAM KOCH: Yes,
so, touch feedback.

00:13:02.230 --> 00:13:04.080
If you've been watching
our other episodes

00:13:04.080 --> 00:13:06.630
we tend to mention
this quite frequently.

00:13:06.630 --> 00:13:08.620
And one of the reasons
for that is we actually

00:13:08.620 --> 00:13:10.150
see many apps that
don't actually

00:13:10.150 --> 00:13:11.740
implement touch feedback.

00:13:11.740 --> 00:13:14.490
One of the areas where
people often forget

00:13:14.490 --> 00:13:17.240
is image touch targets
or touch targets

00:13:17.240 --> 00:13:21.260
that are made up
largely of images.

00:13:21.260 --> 00:13:26.400
And so one of the problems
with touch feedback

00:13:26.400 --> 00:13:29.090
where the touch target is
largely made up of an image

00:13:29.090 --> 00:13:33.492
is that you can't really
engage the touch feedback

00:13:33.492 --> 00:13:35.450
on the background like
you normally could, with

00:13:35.450 --> 00:13:37.430
say text or something like that.

00:13:37.430 --> 00:13:40.117
So for touchable areas that
are largely made up an image,

00:13:40.117 --> 00:13:42.450
you should really use a sort
of semi-transparent overlay

00:13:42.450 --> 00:13:45.961
that covers the
full touchable area.

00:13:45.961 --> 00:13:47.710
In terms of the color
that you should use,

00:13:47.710 --> 00:13:50.630
it should really match well
with whatever your highlight

00:13:50.630 --> 00:13:54.470
color is or your accent color
is for your application.

00:13:54.470 --> 00:13:56.960
And the focused
and checked state

00:13:56.960 --> 00:13:59.440
should really be about
50% of the pressed state

00:13:59.440 --> 00:14:01.760
in terms of capacity.

00:14:01.760 --> 00:14:03.480
Actually, let's just
jump across here

00:14:03.480 --> 00:14:06.260
and quickly look
at some examples.

00:14:06.260 --> 00:14:09.310
So the two on the left
are sort of no-nos.

00:14:09.310 --> 00:14:11.360
You can see the very
left example here.

00:14:14.380 --> 00:14:17.534
It's highlighting the
background and I actually

00:14:17.534 --> 00:14:18.950
increased the
borders a little bit

00:14:18.950 --> 00:14:20.845
here so you could even see it.

00:14:20.845 --> 00:14:22.470
So to the points that
Roman was talking

00:14:22.470 --> 00:14:24.719
about just before, the full
bleed imagery and the text

00:14:24.719 --> 00:14:27.455
overlays, often you won't
even have any background

00:14:27.455 --> 00:14:29.550
to highlight in these cases.

00:14:29.550 --> 00:14:32.160
So that's just not really going
to work where the image makes

00:14:32.160 --> 00:14:33.960
up the majority of
the touch target.

00:14:33.960 --> 00:14:39.540
The second no-no example here
is not having any transparency.

00:14:39.540 --> 00:14:41.590
So not only does this
not look that great,

00:14:41.590 --> 00:14:43.440
but you can actually
see some of the content

00:14:43.440 --> 00:14:45.840
that you're touching behind.

00:14:45.840 --> 00:14:48.400
And here's an example of
just sort of a good way

00:14:48.400 --> 00:14:51.300
to do touch feedback
on a particular image.

00:14:56.050 --> 00:14:59.200
Another couple of examples, the
press state and check state--

00:14:59.200 --> 00:15:02.940
and actually this is a
little tricky to see here,

00:15:02.940 --> 00:15:09.960
simply because the
opacity is 50%.

00:15:09.960 --> 00:15:11.520
Let's see if we
can zoom in a bit.

00:15:11.520 --> 00:15:14.120
You can see it's slightly
darker here than it is here.

00:15:14.120 --> 00:15:15.520
But it's a little tricky to see.

00:15:19.170 --> 00:15:22.190
So here's a few good
examples of touch feedback

00:15:22.190 --> 00:15:25.542
where the image is the
majority of the touch target.

00:15:25.542 --> 00:15:27.500
So on the left here we
have Google Play-- oops.

00:15:31.180 --> 00:15:33.790
On the left here we
have Google Play Music.

00:15:33.790 --> 00:15:36.490
And you can see here they're
highlighting the entire card.

00:15:36.490 --> 00:15:38.260
And they're also using
the accent color,

00:15:38.260 --> 00:15:40.066
the sort of orange
accent color that's

00:15:40.066 --> 00:15:41.690
sort of matches with
Google Play Music.

00:15:45.020 --> 00:15:48.230
The second example
here is in Google Play,

00:15:48.230 --> 00:15:50.050
the app store itself.

00:15:50.050 --> 00:15:52.300
And this is one of the
collections, the beautiful apps

00:15:52.300 --> 00:15:52.800
collection.

00:15:52.800 --> 00:15:55.920
So you can see here the
cards are actually larger.

00:15:55.920 --> 00:15:58.320
And again, the entire card
is being highlighted here

00:15:58.320 --> 00:16:00.560
to indicate the
touchable region.

00:16:00.560 --> 00:16:02.744
And you can see here the
text is not overlaid.

00:16:02.744 --> 00:16:04.160
The description
of the application

00:16:04.160 --> 00:16:06.474
actually falls below
the main image.

00:16:06.474 --> 00:16:08.515
But the entire touch target
is being highlighted.

00:16:11.910 --> 00:16:15.130
And then the last example
here is the Google I/O 2013

00:16:15.130 --> 00:16:16.700
application.

00:16:16.700 --> 00:16:18.190
And you can see
the avatars that we

00:16:18.190 --> 00:16:21.550
were talking about before
with the rounded circle.

00:16:21.550 --> 00:16:24.306
And in this case, just
the circle of the image

00:16:24.306 --> 00:16:25.180
is being highlighted.

00:16:27.187 --> 00:16:29.020
NICK BUTCHER: And as
you were saying before,

00:16:29.020 --> 00:16:30.686
I think this is an
excellent opportunity

00:16:30.686 --> 00:16:32.492
to really embed your
branding in there.

00:16:32.492 --> 00:16:35.050
So I think Google Play Music
is doing a great job there

00:16:35.050 --> 00:16:41.270
with extending its orange
branding into the touch states.

00:16:41.270 --> 00:16:44.082
Holo design language is in no
way descriptive about color.

00:16:44.082 --> 00:16:46.540
And you should really see this
as an opportunity break away

00:16:46.540 --> 00:16:48.870
from that default
Holo blue and really

00:16:48.870 --> 00:16:50.810
kind of bring your own
branding to the table.

00:16:50.810 --> 00:16:53.370
ADAM KOCH: Yeah, definitely.

00:16:53.370 --> 00:16:56.480
All right, should
we move on to focus?

00:16:56.480 --> 00:16:58.330
NICK BUTCHER: Yeah, absolutely.

00:16:58.330 --> 00:17:01.911
So while images are beautiful
and great for grabbing

00:17:01.911 --> 00:17:04.160
attention, sometimes that's
not exactly what you want.

00:17:04.160 --> 00:17:07.410
And you want to be able to
emphasize other information

00:17:07.410 --> 00:17:11.180
or kind of mute that
information somehow.

00:17:11.180 --> 00:17:13.940
Some good examples of doing
that, that we've picked out

00:17:13.940 --> 00:17:19.310
to showcases today-- the first
one is from the Currents app,

00:17:19.310 --> 00:17:22.050
a Google app for kind
of reading newsfeeds.

00:17:22.050 --> 00:17:23.760
So on the left you
can see there's

00:17:23.760 --> 00:17:26.410
a newsfeed with kind of
nice big beautiful pictures,

00:17:26.410 --> 00:17:29.760
and kind of a title and
strapline and so on.

00:17:29.760 --> 00:17:31.730
But once you've
actually read that story

00:17:31.730 --> 00:17:33.670
and you kind of come
back up to the list view,

00:17:33.670 --> 00:17:35.169
they do something
quite interesting.

00:17:35.169 --> 00:17:38.200
They actually completely
grayscale the image

00:17:38.200 --> 00:17:40.010
and they mute the text as well.

00:17:40.010 --> 00:17:42.522
So it fades away
visually, because I've

00:17:42.522 --> 00:17:43.480
kind of processed that.

00:17:43.480 --> 00:17:44.270
I don't need to go back to that.

00:17:44.270 --> 00:17:46.232
And it makes it really
easy to kind of pick up

00:17:46.232 --> 00:17:47.640
where you left off or
see what you've read

00:17:47.640 --> 00:17:48.340
and what you haven't read.

00:17:48.340 --> 00:17:50.910
So this is a great example
of having both visual images

00:17:50.910 --> 00:17:53.060
and then subduing them
when you want them to not

00:17:53.060 --> 00:17:54.444
grab the attention so much.

00:17:54.444 --> 00:17:55.860
And just a second
example, example

00:17:55.860 --> 00:17:57.930
just to show you
its versatility,

00:17:57.930 --> 00:18:01.580
is actually when I was taking a
screenshot of the Currents app,

00:18:01.580 --> 00:18:03.680
I noticed that the
screen shot notification

00:18:03.680 --> 00:18:06.330
in the notification bar
does the same thing.

00:18:06.330 --> 00:18:09.239
And so the notification
bar-- you're

00:18:09.239 --> 00:18:11.072
going to be rubbing
shoulders with all kinds

00:18:11.072 --> 00:18:12.245
of different content,
most of it going

00:18:12.245 --> 00:18:13.539
to be presented by the system.

00:18:13.539 --> 00:18:15.330
It's going to have a
uniform look and feel.

00:18:15.330 --> 00:18:18.420
So if you were to use kind
of a full bleed, very kind

00:18:18.420 --> 00:18:22.145
of colorful image there, it
might look really out of place.

00:18:22.145 --> 00:18:24.750
And it might be kind of
a jarring experience.

00:18:24.750 --> 00:18:26.390
It might not look
like a notification.

00:18:26.390 --> 00:18:29.590
So they do a nice job of
desaturating the image there,

00:18:29.590 --> 00:18:32.997
so it fits in better
with its surroundings

00:18:32.997 --> 00:18:34.580
and you can focus
on what's important,

00:18:34.580 --> 00:18:40.480
which is the touched target and
the secondary action to check.

00:18:40.480 --> 00:18:42.500
ROMAN NURIK: Should we
move on to the next one?

00:18:42.500 --> 00:18:44.166
NICK BUTCHER: A slight
variation on this

00:18:44.166 --> 00:18:48.460
is combining that desaturation
with the touch feedback

00:18:48.460 --> 00:18:50.740
that Adam was talking about.

00:18:50.740 --> 00:18:52.925
Sometimes if you
just apply a kind

00:18:52.925 --> 00:18:55.957
of semi-transparent highlight
over the top of an image,

00:18:55.957 --> 00:18:58.415
you can get unexpected results
with colors bleeding through

00:18:58.415 --> 00:19:00.982
and so forth, especially if
it's user generated content

00:19:00.982 --> 00:19:02.690
and you don't know
what it's going to be.

00:19:02.690 --> 00:19:04.379
To provide more
control to this, you

00:19:04.379 --> 00:19:05.920
can actually combine
these techniques

00:19:05.920 --> 00:19:08.420
and on touch,
desaturate out the image

00:19:08.420 --> 00:19:11.150
and then overlay
your touch feedback

00:19:11.150 --> 00:19:13.370
to give a slightly more
controlled appearance.

00:19:13.370 --> 00:19:15.137
So in this example,
I didn't include--

00:19:15.137 --> 00:19:16.845
the natural state is
kind of a maps image

00:19:16.845 --> 00:19:18.250
that had grays, blues, yellows.

00:19:18.250 --> 00:19:20.350
But we kind of
muted those colors

00:19:20.350 --> 00:19:23.020
and just add the touch target to
have a slightly more controlled

00:19:23.020 --> 00:19:23.997
effect.

00:19:23.997 --> 00:19:25.580
ROMAN NURIK: Yeah,
I think Google Play

00:19:25.580 --> 00:19:26.660
Music is another example.

00:19:26.660 --> 00:19:30.450
Orange doesn't really overlay
well with some other colors.

00:19:30.450 --> 00:19:33.330
So desaturating and then
applying the orange, almost

00:19:33.330 --> 00:19:38.760
like applying-- I think it's
a hue layer in Photoshop,

00:19:38.760 --> 00:19:40.750
just kind of manually
changing the hue

00:19:40.750 --> 00:19:43.370
of every color in the image.

00:19:43.370 --> 00:19:48.484
That can kind of make it a
more even look to the photo.

00:19:48.484 --> 00:19:49.900
NICK BUTCHER: And
the next example

00:19:49.900 --> 00:19:51.600
of providing focus
in the application

00:19:51.600 --> 00:19:54.320
is using blur effects.

00:19:54.320 --> 00:19:57.130
So similar to the Circa
example you saw earlier,

00:19:57.130 --> 00:19:59.500
I think that this is a
Yahoo! weather application.

00:19:59.500 --> 00:20:02.710
Which is kind of trying
to run in to mostly

00:20:02.710 --> 00:20:03.520
in the same screen.

00:20:03.520 --> 00:20:06.150
So on the first thing, it wants
to give as much prominence

00:20:06.150 --> 00:20:08.930
to this beautiful imagery, which
its sources can flicker out,

00:20:08.930 --> 00:20:12.052
showing just how
rainy London is.

00:20:12.052 --> 00:20:14.010
But then when you want
to show more information

00:20:14.010 --> 00:20:16.400
on the screen, when you
scroll up to show the forecast

00:20:16.400 --> 00:20:19.420
and so forth, you want
to mute that information.

00:20:19.420 --> 00:20:22.685
So they do a great job of
applying the blur effect there

00:20:22.685 --> 00:20:25.590
to kind of really re-emphasize
the content's changed.

00:20:25.590 --> 00:20:28.240
So the content is now prominent
rather than the imagery.

00:20:28.240 --> 00:20:29.448
So this is a great technique.

00:20:34.840 --> 00:20:36.410
ROMAN NURIK: Should we move on?

00:20:36.410 --> 00:20:38.160
NICK BUTCHER: Yeah,
the last kind of focus

00:20:38.160 --> 00:20:39.576
that we want to
talk about is just

00:20:39.576 --> 00:20:41.420
really applying
a dimming effect.

00:20:41.420 --> 00:20:45.011
So you can use this to
the great effect just

00:20:45.011 --> 00:20:47.520
to kind of show an
imagery, and then

00:20:47.520 --> 00:20:49.350
as you scroll some
text over the top,

00:20:49.350 --> 00:20:51.310
in this example from
Grand St., it then just

00:20:51.310 --> 00:20:53.620
applies this kind of
fade mask on top of it

00:20:53.620 --> 00:20:56.330
in order to give some background
protection to the text

00:20:56.330 --> 00:20:59.000
and bring the text to the
forefront for your attention

00:20:59.000 --> 00:21:00.360
as well.

00:21:00.360 --> 00:21:02.410
This can be really simply
achieved by developers

00:21:02.410 --> 00:21:05.670
just by setting the hint
flag on an image as well.

00:21:10.110 --> 00:21:11.910
[INAUDIBLE]

00:21:11.910 --> 00:21:14.370
ADAM KOCH: Let's talk a
little bit about placeholders.

00:21:14.370 --> 00:21:17.850
So I think most apps actually
do get this right, for the most

00:21:17.850 --> 00:21:20.680
part, but any image that
loads in your UI that

00:21:20.680 --> 00:21:23.130
has any sort of load time,
any load time at all,

00:21:23.130 --> 00:21:26.007
should really have some
sort of placeholder there.

00:21:26.007 --> 00:21:27.840
I was playing with an
app the other day that

00:21:27.840 --> 00:21:30.060
had no placeholders,
and I was just blindly

00:21:30.060 --> 00:21:32.450
scrolling through a list not
knowing what was happening.

00:21:32.450 --> 00:21:34.330
So it really gives a good
visual indication to the user

00:21:34.330 --> 00:21:36.110
that something is
going to load there

00:21:36.110 --> 00:21:38.260
once it gets around to loading.

00:21:38.260 --> 00:21:40.880
Ideally you should try
and tailor the placeholder

00:21:40.880 --> 00:21:42.864
to the final image, if you can.

00:21:42.864 --> 00:21:44.780
If you have any sort of
additional information

00:21:44.780 --> 00:21:48.230
about the image, maybe the
dimensions, the colors,

00:21:48.230 --> 00:21:49.500
things like that.

00:21:49.500 --> 00:21:51.250
ROMAN NURIK: Even like a low
res cached version of the image.

00:21:51.250 --> 00:21:52.660
ADAM KOCH: Low res
cached version--

00:21:52.660 --> 00:21:54.243
and I'll show you a
couple of examples

00:21:54.243 --> 00:21:56.154
on the next slides about that.

00:21:56.154 --> 00:21:57.820
And then finally when
the image actually

00:21:57.820 --> 00:22:00.760
finishes loading a sort
of subtle animation

00:22:00.760 --> 00:22:03.640
to transition to the final
image is definitely recommended.

00:22:03.640 --> 00:22:06.999
Normally that just means
a fade in or a cross fade.

00:22:06.999 --> 00:22:08.790
You could do something
a little more fancy,

00:22:08.790 --> 00:22:11.370
but I would just urge
you not to go too fancy.

00:22:11.370 --> 00:22:14.300
Really, it should
be quite subtle.

00:22:14.300 --> 00:22:16.180
And then on the
development side,

00:22:16.180 --> 00:22:18.590
you should just make sure
that image or that animation

00:22:18.590 --> 00:22:23.949
doesn't run every time the
list view scrolls up and down.

00:22:23.949 --> 00:22:24.990
Getting kicked out, Nick?

00:22:24.990 --> 00:22:27.899
[LAUGHTER]

00:22:27.899 --> 00:22:29.440
ADAM KOCH: The way
that the list view

00:22:29.440 --> 00:22:30.840
works, it does recycle views.

00:22:30.840 --> 00:22:33.870
So you've got to make sure that
the animation isn't running

00:22:33.870 --> 00:22:35.940
constantly every
time that the list

00:22:35.940 --> 00:22:37.590
view is scrolling up and down.

00:22:37.590 --> 00:22:40.680
So let's have a look at
some examples quickly.

00:22:40.680 --> 00:22:44.040
So this is the Google
Play app again.

00:22:44.040 --> 00:22:45.540
And you can see
here-- it's actually

00:22:45.540 --> 00:22:48.135
hard to get these screenshots,
because it does load

00:22:48.135 --> 00:22:48.760
pretty quickly.

00:22:48.760 --> 00:22:51.020
I had to go in
the airplane mode.

00:22:51.020 --> 00:22:55.700
Because of the sort of
card-based UI of Google Play,

00:22:55.700 --> 00:22:59.450
you don't even need sort of an
additional placeholder image

00:22:59.450 --> 00:22:59.950
here.

00:22:59.950 --> 00:23:03.140
The card already
conveys that something's

00:23:03.140 --> 00:23:05.160
going to load in that space.

00:23:05.160 --> 00:23:07.350
So it's a pretty
nice example of sort

00:23:07.350 --> 00:23:10.830
of baking it into
the existing UI.

00:23:10.830 --> 00:23:14.116
This is the system
gallery application.

00:23:14.116 --> 00:23:15.490
It's kind of hard
to notice here,

00:23:15.490 --> 00:23:18.430
but actually they
use the dimensions

00:23:18.430 --> 00:23:22.460
of the image that will
load to sort of show that.

00:23:22.460 --> 00:23:24.717
I guess Nick's having
some room issues.

00:23:24.717 --> 00:23:26.550
ROMAN NURIK: OK, so
Nick will join us again.

00:23:26.550 --> 00:23:28.008
ADAM KOCH: He'll
rejoin us shortly.

00:23:30.140 --> 00:23:30.890
What was I saying?

00:23:30.890 --> 00:23:35.060
Yes, so-- as I said, it's
kind of hard to see here,

00:23:35.060 --> 00:23:37.240
but the dimensions of
the placeholder image

00:23:37.240 --> 00:23:40.010
actually match the dimensions
of the final image.

00:23:40.010 --> 00:23:43.650
So if you have a long panorama
or something it'll be thinner.

00:23:43.650 --> 00:23:45.620
And if you have a sort
of portrait photo,

00:23:45.620 --> 00:23:46.980
it'll be taller.

00:23:46.980 --> 00:23:48.110
ROMAN NURIK: It's almost
kind of like you're

00:23:48.110 --> 00:23:49.490
at an airport, when the
airplane is landing.

00:23:49.490 --> 00:23:52.010
It's almost like the landing
strip for the airplane.

00:23:52.010 --> 00:23:53.036
It's kind of guiding it.

00:23:53.036 --> 00:23:55.410
It's not really guiding the
airplane-- well, in that case

00:23:55.410 --> 00:23:56.320
it's guiding the airplane.

00:23:56.320 --> 00:23:57.730
But here it's guiding the user.

00:23:57.730 --> 00:24:00.010
It's saying, the thing that
will load will be here.

00:24:00.010 --> 00:24:01.594
It's almost like the
helipad, I guess.

00:24:01.594 --> 00:24:04.135
ADAM KOCH: And obviously it's
not always possible to do this.

00:24:04.135 --> 00:24:06.960
But where you can, where you
have the extra information,

00:24:06.960 --> 00:24:09.894
it's definitely a
nice enhancement.

00:24:09.894 --> 00:24:11.810
ROMAN NURIK: Seems like
Nick has joined again.

00:24:11.810 --> 00:24:13.464
Is that right?

00:24:13.464 --> 00:24:14.463
ADAM KOCH: I don't know.

00:24:14.463 --> 00:24:15.504
ROMAN NURIK: There he is.

00:24:19.550 --> 00:24:21.050
ADAM KOCH: And then
this placeholder

00:24:21.050 --> 00:24:22.640
example we really like.

00:24:22.640 --> 00:24:24.040
It's the Pinterest application.

00:24:24.040 --> 00:24:26.510
And I'm actually not sure
exactly what they're doing.

00:24:26.510 --> 00:24:28.660
It looks like some sort
of, I guess, average

00:24:28.660 --> 00:24:32.920
of the colors in the final
image that will load,

00:24:32.920 --> 00:24:35.380
something along
those lines anyway.

00:24:35.380 --> 00:24:37.434
Not only do they show
the sort of dimensions

00:24:37.434 --> 00:24:39.350
of the image in the
placeholder, but they also

00:24:39.350 --> 00:24:41.058
approximate the color
of the image that's

00:24:41.058 --> 00:24:42.680
going to eventually load.

00:24:42.680 --> 00:24:45.409
So, again, it was kind of hard
to get these screen shots.

00:24:45.409 --> 00:24:47.950
And you'll see the scroll is a
little offset from each other.

00:24:47.950 --> 00:24:50.960
But you can see here that
the images sort of roughly

00:24:50.960 --> 00:24:54.041
match up across these
two screenshots.

00:24:54.041 --> 00:24:55.290
ROMAN NURIK: Yeah, it's great.

00:24:55.290 --> 00:24:57.340
This is one extra
database field, right?

00:24:57.340 --> 00:24:59.180
Just one extra
database field that's

00:24:59.180 --> 00:25:02.160
computed on the server side.

00:25:02.160 --> 00:25:04.320
It just says, take the
image, maybe average

00:25:04.320 --> 00:25:07.230
the pixels in some way,
and store that hex color

00:25:07.230 --> 00:25:08.640
in this database row.

00:25:08.640 --> 00:25:11.610
And with that you get
this massive improvement

00:25:11.610 --> 00:25:13.302
in the experience.

00:25:13.302 --> 00:25:14.260
And Nick is gone again.

00:25:19.570 --> 00:25:21.209
ADAM KOCH: We'll
just keep moving on

00:25:21.209 --> 00:25:22.750
and hopefully Nick
can join us again.

00:25:26.470 --> 00:25:28.110
The next topic is
fullscreen galleries.

00:25:30.467 --> 00:25:32.300
The biggest advice here
is you should really

00:25:32.300 --> 00:25:34.720
be using lights-out mode.

00:25:34.720 --> 00:25:37.910
And then hiding the
system UI, any sort of app

00:25:37.910 --> 00:25:41.390
UI you may have, and the action
bar, all at the same time.

00:25:41.390 --> 00:25:45.290
Generally that's engaged
in one of two ways.

00:25:45.290 --> 00:25:47.140
Normally tapping
anywhere on the screen

00:25:47.140 --> 00:25:49.900
will sort of engage
lights-out mode.

00:25:49.900 --> 00:25:53.620
And then tapping back will
bring back all the Chrome.

00:25:53.620 --> 00:25:55.720
And then normally there's
a timeout of some sort

00:25:55.720 --> 00:25:59.356
as well, like maybe three,
four, five seconds of inactivity

00:25:59.356 --> 00:26:00.730
of the user not
touching anything

00:26:00.730 --> 00:26:03.520
and the Chrome will
also just fade out.

00:26:03.520 --> 00:26:06.709
Lights-out mode will be engaged.

00:26:06.709 --> 00:26:08.750
The other thing you should
always make sure to do

00:26:08.750 --> 00:26:10.160
is support the
standard gestures,

00:26:10.160 --> 00:26:15.550
so pinch open and close
to zoom in and out.

00:26:15.550 --> 00:26:18.112
Keep doing moves, Nick.

00:26:18.112 --> 00:26:20.480
NICK BUTCHER: Yeah, I think
because we're running late.

00:26:20.480 --> 00:26:22.813
ROMAN NURIK: This is what
happens when we do shows live.

00:26:24.352 --> 00:26:25.810
ADAM KOCH: And then
double touching

00:26:25.810 --> 00:26:28.877
to zoom in and zoom out again.

00:26:28.877 --> 00:26:30.710
And you should always
use the standards sort

00:26:30.710 --> 00:26:34.860
of paging physics as well as the
standard overscroll glow that

00:26:34.860 --> 00:26:38.574
appears when you reach
the edge of the gallery.

00:26:38.574 --> 00:26:40.240
And then I guess on
the development side

00:26:40.240 --> 00:26:42.860
that normally means just
using the standard ViewPager

00:26:42.860 --> 00:26:45.380
class from the Support Library.

00:26:45.380 --> 00:26:48.310
For photos, there's a
class called PhotoView

00:26:48.310 --> 00:26:51.950
by Chris Banes, who's on
our team based in London,

00:26:51.950 --> 00:26:56.100
that you can also use
on the development side.

00:26:56.100 --> 00:26:59.907
The last point is really--
in this particular case,

00:26:59.907 --> 00:27:01.490
touch feedback is
not really required.

00:27:01.490 --> 00:27:04.240
Simply because the entire screen
is really the touch target.

00:27:04.240 --> 00:27:08.040
It doesn't really make sense
to highlight the entire screen.

00:27:08.040 --> 00:27:10.930
And also the UI really
will respond instantly

00:27:10.930 --> 00:27:14.470
to the user's touch, anyway,
because the lights-out mode

00:27:14.470 --> 00:27:17.621
will be engaged and
disengaged immediately.

00:27:17.621 --> 00:27:18.662
Any other comments, guys?

00:27:18.662 --> 00:27:19.870
ROMAN NURIK: No, looks good.

00:27:19.870 --> 00:27:21.536
NICK BUTCHER: One of
my bugbears on this

00:27:21.536 --> 00:27:25.260
is people who don't implement
the pinch physics right.

00:27:25.260 --> 00:27:28.650
So things like, when you have
two fingers down doing a pinch,

00:27:28.650 --> 00:27:30.637
you should still be
able to pan around.

00:27:30.637 --> 00:27:32.970
So I would just say, use one
of these standard libraries

00:27:32.970 --> 00:27:35.480
like PhotoView, because
they do it all right.

00:27:35.480 --> 00:27:37.200
They tend to have the right UX.

00:27:37.200 --> 00:27:39.200
ROMAN NURIK: Actually,
I'll talk at the very end

00:27:39.200 --> 00:27:42.290
when we talk about graphs, I'll
share a piece of sample code

00:27:42.290 --> 00:27:46.190
that actually helps
to do that as well.

00:27:46.190 --> 00:27:47.970
ADAM KOCH: Quick,
very quick ample

00:27:47.970 --> 00:27:50.370
of lights-out mode being used.

00:27:50.370 --> 00:27:53.320
Actually, bit of inception here.

00:27:53.320 --> 00:27:57.790
We can show the gallery engaging
and disengaging lights-out mode

00:27:57.790 --> 00:28:01.220
here, right now, with the
slides that we're using.

00:28:01.220 --> 00:28:03.030
And on the development
side, there's

00:28:03.030 --> 00:28:06.760
actually a template that you can
use called FullScreenActivity

00:28:06.760 --> 00:28:09.494
that is part of Android Studio,
and is it still part of--

00:28:09.494 --> 00:28:11.160
ROMAN NURIK: Yeah,
it's part of Eclipse.

00:28:11.160 --> 00:28:12.618
ADAM KOCH: --Still
part of Eclipse.

00:28:12.618 --> 00:28:14.620
You can actually go
and create all the code

00:28:14.620 --> 00:28:17.090
that will get the
exact right behavior

00:28:17.090 --> 00:28:19.890
for engaging the
full screen view.

00:28:22.770 --> 00:28:24.520
The last thing I wanted
to quickly mention

00:28:24.520 --> 00:28:27.720
is transition animations.

00:28:27.720 --> 00:28:30.080
So this is an
example from tumblr,

00:28:30.080 --> 00:28:33.290
and if you're viewing
posts in screen on the left

00:28:33.290 --> 00:28:34.960
and then you tap one
on of the images,

00:28:34.960 --> 00:28:38.190
that image will actually
zoom out to be full screen.

00:28:38.190 --> 00:28:40.980
And then when you tap, it
actually zooms back again.

00:28:40.980 --> 00:28:42.220
And this is quite nice.

00:28:42.220 --> 00:28:45.650
So you're not breaking
the user's flow.

00:28:45.650 --> 00:28:48.450
On the development
side, is there

00:28:48.450 --> 00:28:51.940
is a class you can use
called ActivityOptions.

00:28:51.940 --> 00:28:54.650
This is mostly useful though,
when moving between activities,

00:28:54.650 --> 00:28:57.260
rather than staying
within the same activity.

00:28:57.260 --> 00:29:00.210
But it can sort
of help assist you

00:29:00.210 --> 00:29:02.440
build that animation
between, say,

00:29:02.440 --> 00:29:05.820
a grid of photos
transitioning to a full screen

00:29:05.820 --> 00:29:06.847
view of gallery photos.

00:29:06.847 --> 00:29:09.430
ROMAN NURIK: And if you want to
do this not between activities

00:29:09.430 --> 00:29:12.924
but between different views
for the developers out there,

00:29:12.924 --> 00:29:14.340
there's actually
a training class,

00:29:14.340 --> 00:29:16.820
developer.android.com/training.

00:29:16.820 --> 00:29:19.100
One of the training
classes on animation

00:29:19.100 --> 00:29:22.760
specifically shows you how
to do these kind of zoom ups

00:29:22.760 --> 00:29:24.535
and zoom outs animations.

00:29:27.510 --> 00:29:28.190
All right.

00:29:28.190 --> 00:29:30.145
So I think we were
super long on time.

00:29:30.145 --> 00:29:31.520
So I'm going to
quickly just jump

00:29:31.520 --> 00:29:34.280
into a bonus topic,
which is graphs.

00:29:34.280 --> 00:29:36.430
So graphs aren't really images.

00:29:36.430 --> 00:29:39.012
They 're really more
interactive images, if you will.

00:29:39.012 --> 00:29:40.470
But we wanted to
just show a couple

00:29:40.470 --> 00:29:43.280
of quick examples of
graphs done right.

00:29:43.280 --> 00:29:46.042
First I want to mention
that in general, these

00:29:46.042 --> 00:29:47.500
are going to be
interactive graphs.

00:29:47.500 --> 00:29:50.420
So it's almost like
an interactive image.

00:29:50.420 --> 00:29:53.220
I think any time you look at
interactivity, or zooming,

00:29:53.220 --> 00:29:54.695
or anything like
that, the Gallery

00:29:54.695 --> 00:29:56.704
app-- the System
Gallery app is generally

00:29:56.704 --> 00:29:57.870
a very good example of that.

00:29:57.870 --> 00:30:01.060
So you see multiple
fingers going on.

00:30:01.060 --> 00:30:03.070
Double touch works, and so on.

00:30:03.070 --> 00:30:05.520
So I just want to show
a couple quick examples

00:30:05.520 --> 00:30:09.740
of graphs in use.

00:30:09.740 --> 00:30:13.800
So the first is this
interactive chart demo.

00:30:13.800 --> 00:30:18.554
And this is available in the
Android training classes.

00:30:18.554 --> 00:30:19.970
So here you'll
notice that you can

00:30:19.970 --> 00:30:24.200
do the same thing you can
with a full screen photo view.

00:30:24.200 --> 00:30:25.360
You could zoom.

00:30:25.360 --> 00:30:27.422
You can double touch to zoom in.

00:30:27.422 --> 00:30:29.130
And then the other
nice thing is that you

00:30:29.130 --> 00:30:30.560
get edge effects, right?

00:30:30.560 --> 00:30:32.110
So if you're looking
to do something

00:30:32.110 --> 00:30:36.200
like a graph, or basically an
interactive, information-based

00:30:36.200 --> 00:30:39.730
image of some kind, this is
kind of a good starting point.

00:30:39.730 --> 00:30:42.814
Another quick example
is the Quotes app.

00:30:42.814 --> 00:30:44.230
And we've covered
this one before.

00:30:44.230 --> 00:30:45.980
It's by the developer
Michael Pardo.

00:30:45.980 --> 00:30:48.520
I think the publisher name
is slightly different.

00:30:48.520 --> 00:30:50.275
But if you look at
one of the graphs,

00:30:50.275 --> 00:30:52.150
they actually do things
a little differently.

00:30:52.150 --> 00:30:56.711
They have this zoom bar,
whatever you want to call it,

00:30:56.711 --> 00:30:57.210
I guess.

00:30:57.210 --> 00:30:58.560
And they have these
little handles.

00:30:58.560 --> 00:31:00.601
And you'll notice that
these handles are actually

00:31:00.601 --> 00:31:03.710
using the same visuals as text
selection handles on Android,

00:31:03.710 --> 00:31:05.894
so it's very, very
clear what they do.

00:31:05.894 --> 00:31:07.310
I think they're
actually inverted.

00:31:07.310 --> 00:31:08.660
They should probably be
facing the opposite direction.

00:31:08.660 --> 00:31:11.076
But it is still kind of cool
that you can kind of do this.

00:31:11.076 --> 00:31:13.180
And then as you touch
and scroll across,

00:31:13.180 --> 00:31:17.750
you see the specific
values of those points.

00:31:17.750 --> 00:31:21.091
So those are just
two quick examples.

00:31:21.091 --> 00:31:23.590
If you want to take a look at
the sample code for developers

00:31:23.590 --> 00:31:26.600
for how to do an interactive
chart thing, here's the code.

00:31:26.600 --> 00:31:28.380
There it is.

00:31:28.380 --> 00:31:31.730
All right, so with
that we quickly

00:31:31.730 --> 00:31:35.510
want to do a shout out to
Mike Denny who has just

00:31:35.510 --> 00:31:38.120
joined the Android Developer
Relations team as an Android

00:31:38.120 --> 00:31:38.929
design advocate.

00:31:38.929 --> 00:31:39.720
ADAM KOCH: Woo hoo.

00:31:39.720 --> 00:31:40.720
ROMAN NURIK: He's going to be
be based out of Mountain View.

00:31:40.720 --> 00:31:42.212
Welcome, Mike.

00:31:42.212 --> 00:31:44.170
He'll probably be joining
us on future episodes

00:31:44.170 --> 00:31:46.001
of Android Design in Action.

00:31:46.001 --> 00:31:48.000
And yeah, I think this
is probably a link to his

00:31:48.000 --> 00:31:50.230
announcement post on Google+.

00:31:50.230 --> 00:31:52.420
Please, all welcome Mike.

00:31:52.420 --> 00:31:54.870
All right, I think
that's it for our episode

00:31:54.870 --> 00:31:56.620
after a rough start.

00:31:56.620 --> 00:31:59.100
As always, I am your
host, Roman Nurik.

00:31:59.100 --> 00:32:01.140
ADAM KOCH: See you
guys, Adam Koch.

00:32:01.140 --> 00:32:02.770
NICK BUTCHER: Bye
from Nick Butcher.

00:32:02.770 --> 00:32:04.186
ROMAN NURIK: Bye
from Nick Butcher

00:32:04.186 --> 00:32:06.502
across three different
conference rooms, right?

00:32:06.502 --> 00:32:08.500
NICK BUTCHER: Yeah, you've had
a little tour of the Google

00:32:08.500 --> 00:32:09.230
London offices today.

00:32:09.230 --> 00:32:09.950
Thanks for staying with me.

00:32:09.950 --> 00:32:11.340
ADAM KOCH: See you guys.

00:32:11.340 --> 00:32:13.880
NICK BUTCHER: See you
guys when next time.

