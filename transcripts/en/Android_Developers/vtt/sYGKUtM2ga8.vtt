WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.340
[ROCKET BLASTING OFF]

00:00:05.725 --> 00:00:07.100
FLORINA MUNTENESCU:
Have you seen

00:00:07.100 --> 00:00:10.460
this sad blank square
character called tofu when

00:00:10.460 --> 00:00:12.580
an app can't display an emoji?

00:00:12.580 --> 00:00:15.770
New emojis are constantly being
added to the Unicode standards.

00:00:15.770 --> 00:00:18.170
But since they are
bundled as a font,

00:00:18.170 --> 00:00:21.800
your phone's emojis are set
in stone with each OS release.

00:00:21.800 --> 00:00:23.780
Well, they were.

00:00:23.780 --> 00:00:26.120
With the Emoji Compact
Library, part of Jetpack,

00:00:26.120 --> 00:00:28.880
your app can get backwards
compatible emoji support

00:00:28.880 --> 00:00:33.740
on devices with API level 19
and higher, and get rid of tofu.

00:00:33.740 --> 00:00:35.610
For a given char
sequence, Emoji Compact

00:00:35.610 --> 00:00:39.170
can identify the emojis,
replace them with emoji spans,

00:00:39.170 --> 00:00:41.330
and then render the glyphs.

00:00:41.330 --> 00:00:43.790
On versions prior
to API level 19,

00:00:43.790 --> 00:00:47.100
well, you'll still get
the tofu characters.

00:00:47.100 --> 00:00:50.240
Emoji Compact builds on the
downloadable font mechanism

00:00:50.240 --> 00:00:51.770
to make sure that
you always have

00:00:51.770 --> 00:00:53.550
the latest emoji available.

00:00:53.550 --> 00:00:56.890
So if you want the emoji font
to be downloaded when you're

00:00:56.890 --> 00:01:01.220
installed from Play Store, add
this metadata in your manifest,

00:01:01.220 --> 00:01:02.090
like this.

00:01:02.090 --> 00:01:03.710
The font will be
downloaded, and ready

00:01:03.710 --> 00:01:06.920
to be used when your app
starts for the first time.

00:01:06.920 --> 00:01:09.230
Before being used, the
Emoji Compact library

00:01:09.230 --> 00:01:11.990
needs a one time
asynchronous setup.

00:01:11.990 --> 00:01:14.000
We recommend doing this
in your launch activity,

00:01:14.000 --> 00:01:19.220
or in the first activity
that uses emojis, like this.

00:01:19.220 --> 00:01:21.290
When using the downloadable
font configuration,

00:01:21.290 --> 00:01:23.150
create your form
request, and create

00:01:23.150 --> 00:01:25.280
the
fontRequestEmojiCompactConfig

00:01:25.280 --> 00:01:26.840
object.

00:01:26.840 --> 00:01:28.640
If you can't use
downloadable fonts,

00:01:28.640 --> 00:01:32.130
then you can bundle the
emoji font like this.

00:01:32.130 --> 00:01:34.460
Note that the size of the
font is multiple megabytes,

00:01:34.460 --> 00:01:37.130
increasing your APK
size considerably.

00:01:37.130 --> 00:01:39.980
On top of this, you will have
to ship updates of your app

00:01:39.980 --> 00:01:42.750
whenever the emoji
font is updated.

00:01:42.750 --> 00:01:44.720
Independent of the
way you're using it,

00:01:44.720 --> 00:01:47.960
the initialization takes
at least 150 milliseconds,

00:01:47.960 --> 00:01:49.550
even up to a few seconds.

00:01:49.550 --> 00:01:52.280
So you might want to get
notified about this state.

00:01:52.280 --> 00:01:55.800
For this, use the
registerInitCallback method.

00:01:55.800 --> 00:01:57.530
Here's a pro tip for debugging.

00:01:57.530 --> 00:02:01.030
You can enable a span
indicator like this.

00:02:01.030 --> 00:02:03.800
Display emojis by using
widgets that extend

00:02:03.800 --> 00:02:06.680
from app compact widgets.

00:02:06.680 --> 00:02:08.690
You can preprocess
a char sequence

00:02:08.690 --> 00:02:10.630
using the process method.

00:02:10.630 --> 00:02:12.470
It can then reuse
the result instead

00:02:12.470 --> 00:02:14.990
of the initial raw
string in any widget that

00:02:14.990 --> 00:02:17.540
can render spanned
instances, and needs

00:02:17.540 --> 00:02:18.920
to display the same string.

00:02:18.920 --> 00:02:22.190
So, for example, if you are
doing your own custom drawing,

00:02:22.190 --> 00:02:25.340
you can use this to
display emoji text.

00:02:25.340 --> 00:02:28.330
If you want to add emoji
support to a TextView subclass

00:02:28.330 --> 00:02:31.310
beyond the provided ones,
for example, to an AppCompact

00:02:31.310 --> 00:02:36.690
checkbox, you can use the
emojiTextViewHelper class.

00:02:36.690 --> 00:02:38.720
So now, with the new
Emoji Compact Library,

00:02:38.720 --> 00:02:41.000
I can see that my
friend isn't asking me

00:02:41.000 --> 00:02:43.790
if I want tofu for
brunch, but avocados.

00:02:43.790 --> 00:02:45.860
And the answer for this
is, of course, yes.

00:02:45.860 --> 00:02:48.910
[ROCKET SOARING]

