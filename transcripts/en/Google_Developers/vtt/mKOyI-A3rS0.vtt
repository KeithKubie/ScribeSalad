WEBVTT
Kind: captions
Language: en

00:16:29.379 --> 00:16:31.379
  ButBut we have we have a  a 
more fundamentalmore fundamental

00:16:31.741 --> 00:16:33.741
which  which is that 
we'rewe're all all taking taking

00:16:33.269 --> 00:16:35.689
 devices devices that that 
run  on batterieson batteries 

00:16:35.690 --> 00:16:37.228
and  and try totry  
create  experiencesexperiences 

00:16:37.229 --> 00:16:38.637
for for them them  that 
feel  just asjust as compelling 

00:16:38.638 --> 00:16:42.035
compelling as as 
experiences  for  computers

00:16:42.036 --> 00:16:43.057
computers that that 
plug into into your  friendly

00:16:43.058 --> 00:16:44.900
your friendly 
neighborhood power power plant 

00:16:44.901 --> 00:16:45.598
plant..
AndAnd closing closing that  gap

00:16:45.599 --> 00:16:47.527
that gap is is 
fundamentallyly difficult 

00:16:47.528 --> 00:16:50.624
difficult..
So theSo the way way  wewe solve

00:16:51.152 --> 00:16:52.982
 solve that that with with  
day dream is is with with 

00:16:52.983 --> 00:16:53.971
hardware hardware and and 
software  designed in  concertin

00:16:53.972 --> 00:16:55.718
 concert  
with one another another..

00:16:55.719 --> 00:16:56.624
We've triedWe've tried  toto  
make suremake  thatsure that 

00:16:56.625 --> 00:16:58.533
every facet facet of the of the 
 platform 

00:16:58.534 --> 00:17:00.963
supports  every otherevery other
..

00:17:03.978 --> 00:17:05.511
Today I'mToday I'm  going to
going to walk walk you 

00:17:05.512 --> 00:17:06.826
through you  the developer 
developer tools tools that that 

00:17:06.827 --> 00:17:07.728
we are are going going to be to 
be providing providing 

00:17:07.729 --> 00:17:09.040
that  help you you  take 
advantagetake advantage  of 

00:17:09.041 --> 00:17:11.041
all of it of it..

00:17:14.123 --> 00:17:15.393
For usFor us the the foundation 
foundation  of 

00:17:15.394 --> 00:17:18.421
Daydream require great hardware.
You have to have all of the 

00:17:18.422 --> 00:17:20.133
right parts to ensure ensure a a
 high high 

00:17:20.134 --> 00:17:22.056
quality,,  low latencylow 
latency experience experience..

00:17:22.057 --> 00:17:23.275
SoSo we've we've insured insured
  that everythat every 

00:17:23.276 --> 00:17:25.296
Daydream phone phone has has a a
 low low 

00:17:25.297 --> 00:17:26.904
persistence display display to 
to make make  sure 

00:17:26.905 --> 00:17:28.325
there's no no ghost ghostinging 
 or 

00:17:28.326 --> 00:17:29.545
unnecessary lag lag coming 
coming from from  the 

00:17:29.546 --> 00:17:33.138
display itself itself..
We have a high quality quality S

00:17:33.139 --> 00:17:35.294
 SOOCC,, 
which will will let let all all 

00:17:35.295 --> 00:17:36.605
of of you you create
create  create  amazing  

00:17:36.606 --> 00:17:37.898
experiences andexperiences and  
render themthem  atat  60 frames

00:17:38.419 --> 00:17:39.951
 a60 frames a  
second.

00:17:39.952 --> 00:17:41.745
AndAnd of course of course the 
the sensors sensors in the  

00:17:41.746 --> 00:17:43.493
phone are are super super 
critical critical..

00:17:43.494 --> 00:17:44.587
We've madeWe've made sure sure 
that that they're they're all 

00:17:44.588 --> 00:17:47.887
all 
high  performance,performance, 

00:17:47.888 --> 00:17:50.199
high high quality quality,, 
low latency latency connect 

00:17:50.200 --> 00:17:52.647
connectorsors so so that that 
there's  a  connection between

00:17:52.648 --> 00:17:53.638
connection between 
what you do you in the do in the

00:17:53.639 --> 00:17:55.792
 real real world  
and what what  you seeyou see  

00:17:55.793 --> 00:17:57.416
in the virtualin the virtual 
world..

00:17:57.417 --> 00:17:58.822
Now, ielts notNow, ielts not 
actually actually a a single 

00:17:58.823 --> 00:18:00.028
single 
phone  for Daydream Daydream 

00:18:00.029 --> 00:18:02.049
it's it's  a 
standarda  for phones phones 

00:18:02.050 --> 00:18:03.279
called  
Daydream--readyready..

00:18:03.280 --> 00:18:04.248
And the greatAnd the great  
thingthing  about thisabout this

00:18:05.470 --> 00:18:07.002
     for for developers 
developers,,  

00:18:07.003 --> 00:18:08.422
it gives you you a a platform 
platform you you can  

00:18:08.423 --> 00:18:09.437
feel  confident aboutconfident 
about..

00:18:09.438 --> 00:18:11.248
You knowYou know if if you're 
you're building building for 

00:18:11.249 --> 00:18:13.575
the for  DaydreamDaydream--ready
ready  spec,spec, any any 

00:18:13.576 --> 00:18:15.704
Daydream phone phone will will 
run run your your app app 

00:18:15.705 --> 00:18:17.211
well.
ItIt  givesgives consumers 

00:18:17.212 --> 00:18:17.822
consumers confidence confidence 

00:18:17.823 --> 00:18:20.044
that when they they buy buy a a 
 DaydreamDaydream  

00:18:20.045 --> 00:18:22.354
app,  it willit will run run  on
 anyon any phone phone 

00:18:22.355 --> 00:18:23.869
they have have as  as long as 
it'slong as it's 

00:18:23.870 --> 00:18:25.593
Daydream--readyready..
GreatGreat hardware hardware 

00:18:25.594 --> 00:18:26.380
doesn't doesn't just just give 
you give  a cents of  presence

00:18:26.381 --> 00:18:29.231
cents of presence,, it it 
requires great great software 

00:18:29.232 --> 00:18:30.153
software,, as as  well
well.

00:18:30.154 --> 00:18:31.669
Which isWhich is why why we we 
worked worked really really 

00:18:31.670 --> 00:18:34.480
closely on the on the Android 
Android team team an an 

00:18:34.482 --> 00:18:36.812
on  Android N onAndroid N on VR 
VR mode mode..

00:18:36.830 --> 00:18:38.323
We needWe need make make sure 
sure it's it's great great for 

00:18:38.324 --> 00:18:39.135
for 
VR .

00:18:39.136 --> 00:18:41.764
And there'sAnd there's a a few 
few key key  components 

00:18:41.765 --> 00:18:43.171
thatcomponents  we've made made 
available available to to 

00:18:43.172 --> 00:18:43.843
developers..
TheThe first first of those of 

00:18:43.844 --> 00:18:48.187
those is a is a low low 
latency  support  forfor Android

00:18:48.188 --> 00:18:50.434
  Android N 
andN  that'sthat's the the 

00:18:50.435 --> 00:18:50.747
foundation for foundation for VR
 VR 

00:18:50.748 --> 00:18:55.175
and for for presence presence..
We have aWe have  sustaineda 

00:18:55.176 --> 00:18:56.398
sustained performance 
performance 

00:18:56.399 --> 00:18:57.424
moped  that manages manages the 
the hardware hardware 

00:18:57.425 --> 00:18:59.124
andand  makes suremakes sure  
when userswhen  deusers de    

00:18:59.125 --> 00:19:00.418
decide decide 
to  get in in VR VR,, they they 

00:19:00.419 --> 00:19:01.514
can can stay stay in in 
VR  as long as theyas long as 

00:19:01.515 --> 00:19:03.871
they want want..
With we haveWith we have  high 

00:19:03.872 --> 00:19:04.977
qualityhigh quality head head  
tracking algorithmgorithmss that

00:19:04.978 --> 00:19:06.907
 that  fuse 
allfuse  of theof the data data 

00:19:06.385 --> 00:19:08.018
from from the the sensors 
sensors 

00:19:08.019 --> 00:19:11.339
in the the  phone andphone  
trackand track your your head  

00:19:11.340 --> 00:19:11.944
movement somovement so  that 
lookingthat looking around 

00:19:11.945 --> 00:19:13.052
around  
in the virtual worldvirtual 

00:19:13.053 --> 00:19:15.088
world is is just just as as 
natural asnatural as it  it is 

00:19:15.089 --> 00:19:16.012
in theis in the real real 
 world.

00:19:16.013 --> 00:19:18.016
But forBut  allfor all  ofof  
thisthis,, we we  know 

00:19:18.023 --> 00:19:19.932
thatknow  your phoneyour phone 
is is still  

00:19:19.933 --> 00:19:22.968
fundamentallyly your your phone 
and 

00:19:22.976 --> 00:19:24.069
you're going to get phone calls 
and 

00:19:24.070 --> 00:19:25.280
you'reou're going  going to get 
textto get text  

00:19:25.281 --> 00:19:27.312
messages,  so weso we  make sure
make sure  to 

00:19:27.319 --> 00:19:28.827
portto  key components 
components of  of thethe  

00:19:28.828 --> 00:19:30.735
Android UII  intointo  VR soVR 
so that that if if 

00:19:30.736 --> 00:19:32.566
you get  a calla call or or  you
 get ayou get a text text 

00:19:32.567 --> 00:19:34.388
message , we we render render it
 it for for you in you in  

00:19:34.389 --> 00:19:35.599
stereo and youand you  can 
decidecan decide  

00:19:35.600 --> 00:19:36.903
whether you  want to staywant to
 stay  in VRin VR  

00:19:36.904 --> 00:19:38.124
or leave to to act act  onon 
that that  

00:19:38.125 --> 00:19:42.124
notification.
Now,Now,  if you takeif you take

00:19:42.125 --> 00:19:43.834
 a a Daydream Daydream 
phone running running Android N 

00:19:43.835 --> 00:19:46.467
Android N and and you you  
combine it with with a viewer a 

00:19:46.468 --> 00:19:47.899
viewer,, you  
get anget an incredible 

00:19:47.900 --> 00:19:49.634
incredible sense of 
presence.

00:19:49.635 --> 00:19:50.937
You feel like you're somewhere 
sense 

00:19:50.938 --> 00:19:52.353
else.
But toBut to a certain a certain

00:19:52.354 --> 00:19:53.466
 extent extent,, all all you you

00:19:53.467 --> 00:19:55.196
can  do  is lookis look  around.
around.

00:19:55.197 --> 00:19:56.494
You know,You know, I I spent 
spent much much of of my my  

00:19:56.495 --> 00:19:57.936
career as a gameas a game 
developer developer..

00:19:57.937 --> 00:19:59.841
And IAnd I developed developed a
 a deep deep respect respect  

00:19:59.842 --> 00:20:01.842
for the powerpower of of 
interactive interactive ity.ity.

00:20:02.372 --> 00:20:03.500
You know,You know, when when you
 you think think about about 

00:20:03.501 --> 00:20:06.401
the things we we learn learn,, 
really 

00:20:06.405 --> 00:20:08.227
early really  in life life,, in 
 infancyin infancy,, the the 

00:20:08.228 --> 00:20:09.451
firstfirst thing thing we we 
learn learn is is  how to 

00:20:09.452 --> 00:20:10.763
lookhow to  around..
AndAnd then then we we learn 

00:20:10.764 --> 00:20:11.574
learn how to how to use use our 
our 

00:20:11.575 --> 00:20:12.161
hands..
WeWe  learnlearn  how to reach

00:20:12.162 --> 00:20:13.999
how to  out andreach out and 
touch thetouch the world world..

00:20:14.000 --> 00:20:15.515
We learnWe learn about about  
ourour heads heads and and  our 

00:20:15.516 --> 00:20:17.199
handsour  together..
InIn Daydream Daydream  we sawwe

00:20:17.200 --> 00:20:19.247
 saw an an 
opportunity  toto  provide 

00:20:19.248 --> 00:20:21.051
accessprovide access to to  
both heads  and handsand hands 

00:20:21.052 --> 00:20:24.108
in in VR VR..
WeWe  did thatdid that  through 

00:20:24.109 --> 00:20:24.711
thethrough the creation creation

00:20:24.712 --> 00:20:26.653
of the Daydream Daydream 
controller controller..

00:20:26.654 --> 00:20:28.150
This controllerThis controller 
is is simple simple enough 

00:20:28.151 --> 00:20:29.245
enough 
that  anyone can can use it use 

00:20:29.246 --> 00:20:32.086
it,, even even  
while they're in in VR VR and 

00:20:32.087 --> 00:20:33.519
and can't  
actuallycan't  see their their  

00:20:33.520 --> 00:20:34.823
hands.hands.
ButBut  we've alsowe've also  

00:20:34.824 --> 00:20:36.548
made itmade it  
expressive enough that 

00:20:36.549 --> 00:20:37.958
developers can use it to develop

00:20:37.959 --> 00:20:39.671
rich, amazing interactions.
enough that

00:20:39.672 --> 00:20:41.396
It's precise  enough thatenough 
that you you can can  

00:20:41.397 --> 00:20:43.030
use it as a laseras a laser 
pointer pointer..

00:20:43.031 --> 00:20:44.090
ButBut it's it's also also 
responsive responsive enough 

00:20:44.091 --> 00:20:45.720
enough 
to  use ituse it to to swing 

00:20:45.721 --> 00:20:48.156
swing  it as ait as a  
tennis racquet.

00:20:48.171 --> 00:20:50.276
We'veWe've added added a a  
clickableclickable touch touch 

00:20:50.277 --> 00:20:52.087
padpad  so thatso that  you can
you can  both grabboth grab  

00:20:52.088 --> 00:20:53.609
and interactnteract with with 
virtual virtual  

00:20:53.610 --> 00:20:55.128
objects as well asas well as  
effortlesseffortlesslyly 

00:20:55.129 --> 00:20:56.556
browse  the media media  
collection.collection.

00:20:56.557 --> 00:20:57.854
There'sThere's  an appan  button
app button which  which isis  

00:20:57.855 --> 00:20:59.790
totally under thethe developer's
 developer's 

00:20:59.791 --> 00:21:01.302
control  andand  a homea home 
button button which which  

00:21:01.303 --> 00:21:03.620
we reserve for for  critical 
usercritical user  

00:21:03.625 --> 00:21:04.526
interactions like returning 
returning to  

00:21:04.527 --> 00:21:07.967
thehe Daydream Daydream home 
home screen screen..Now

00:21:07.987 --> 00:21:09.374
Now, we, we know know that that 
for for developers developers

00:21:10.182 --> 00:21:11.221
stable  
platform..

00:21:11.222 --> 00:21:12.711
You need inputYou need input 
that that you you can can rely 

00:21:12.712 --> 00:21:13.242
rely 
on.

00:21:13.243 --> 00:21:14.840
So we'veSo we've designed 
designed the the viewer viewer  

00:21:14.841 --> 00:21:16.852
and 
theand  phone to to go go 

00:21:16.853 --> 00:21:19.565
together together,, 
literally ,  and we'lland we'll 

00:21:19.566 --> 00:21:22.200
require require  
every user to to have have the 

00:21:22.201 --> 00:21:23.894
the Daydream Daydream 
controller  when we we  enter VR

00:21:23.895 --> 00:21:25.720
enter VR..
ThatThat way way when when 

00:21:25.721 --> 00:21:26.755
someone someone launches 
launches  

00:21:26.756 --> 00:21:28.077
your Daydream app app,, you  you
 know 

00:21:28.078 --> 00:21:29.592
exactlyknow  what  controller 
they 

00:21:29.593 --> 00:21:30.713
have inhave in their their hand 
hand..

00:21:30.714 --> 00:21:32.108
AndAnd  we believewe believe 
that that this this 

00:21:32.109 --> 00:21:34.141
combination  of Daydreamof 
Daydream--readyready  

00:21:34.146 --> 00:21:36.853
phones with  dayday     Daydream
 Daydream users users and and 

00:21:36.854 --> 00:21:39.182
controllercontroller will will 
allow allow incredible 

00:21:39.183 --> 00:21:40.589
incredible
incredible,      rich,, immerse 

00:21:40.590 --> 00:21:41.614
immerseive ive VR VR  
experiences..

00:21:41.615 --> 00:21:43.615
ButBut that's that's not not 
just just a a theory theory..

00:21:43.842 --> 00:21:44.837
We've beenWe've been working 
working with with some some of  

00:21:44.838 --> 00:21:46.056
of 
the best developers in in the 

00:21:46.057 --> 00:21:47.992
tworld the  make thatmake that a
 a reality reality..

00:21:47.993 --> 00:21:49.499
I'd like toI'd like to welcome 
welcome a a studio studio to to 

00:21:49.500 --> 00:21:51.013
the  stage whose whose known 
known for for 

00:21:51.014 --> 00:21:52.227
continually  pushing the the 
bounds bounds  

00:21:52.228 --> 00:21:53.753
of what'swhat's  possible in
possible in  realtime 

00:21:53.754 --> 00:21:55.483
graphics..
One of theOne of the most most 

00:21:55.484 --> 00:21:56.997
invasive invasive  
developers in the the world 

00:21:56.998 --> 00:21:58.885
world,,  - -- 
innovateive ive T Tcreators

00:21:58.886 --> 00:22:01.844
creators T  creators         
Tcreators of  of thethe  in

00:22:01.845 --> 00:22:03.262
inreal engineinreal engine..
We've beenWe've been  working 

00:22:03.263 --> 00:22:04.582
withworking with them them on on

00:22:04.583 --> 00:22:06.888
Daydream.
ToTo talk talk more more about 

00:22:06.889 --> 00:22:08.414
about the 
partnershipartnership I'd I'd 

00:22:08.415 --> 00:22:10.734
like to like to  
introduce theirtheir  CECEOO,,  

00:22:10.932 --> 00:22:12.977
KimKim la la  
Barry.

00:22:12.996 --> 00:22:15.771
[Applause.]
Thanks, NathanThanks, Nathan;; .

00:22:16.296 --> 00:22:17.067
.
AndAnd hello hello Google Google

00:22:17.068 --> 00:22:21.044
 I IOO..
To giveTo give developers 

00:22:21.045 --> 00:22:22.562
developers immerse immerse ive
ive and 

00:22:22.563 --> 00:22:24.172
visually and  impressive 
experiences experiences 

00:22:24.173 --> 00:22:25.794
with  fantastic  performance
performance on on 

00:22:25.795 --> 00:22:27.015
all the  platformsplatforms that
 that we we  

00:22:27.016 --> 00:22:30.836
support.
We'veWe've been been creating 

00:22:30.837 --> 00:22:32.260
creating VR VR 
experiencesexperiences for for 

00:22:32.261 --> 00:22:34.261
many many years years that 
not that  only push push visual 

00:22:34.568 --> 00:22:36.161
visual fidelity fidelity 
but  inputinput,, interaction 

00:22:36.162 --> 00:22:37.401
interaction,, 
character s and and game game 

00:22:37.402 --> 00:22:38.846
play play 
mechanics..

00:22:38.847 --> 00:22:40.666
EveryEvery project project that 
that we we work work on on 

00:22:40.667 --> 00:22:41.242
extends theextends the 
capabilities capabilities of of 

00:22:41.243 --> 00:22:42.337
un un
unreal   engineengine and and we

00:22:42.338 --> 00:22:44.677
 we give give these these  
back to developers on a on a 

00:22:44.678 --> 00:22:49.227
daily daily 
basis  through Github Github..

00:22:49.434 --> 00:22:50.645
TodayToday we're we're very very
,, very very proud proud to  to 

00:22:50.646 --> 00:22:53.278
be part  ofof new new chapter 
chapter in in VR VR 

00:22:53.284 --> 00:22:55.623
history  and we've we've been 
been eg eg eager    eagerlyly  

00:22:55.624 --> 00:22:57.533
preparing for thethe arrive 
arrive arrival        arrival of

00:22:57.534 --> 00:22:58.935
 of 
Daydream  and we're we're ready 

00:22:58.936 --> 00:23:00.234
ready to to let 
you let see a a project project 

00:23:00.235 --> 00:23:02.391
we've we've been been  
working on so so you you  can 

00:23:02.392 --> 00:23:04.213
seecan see this this  
awesome new platform platform 

00:23:04.214 --> 00:23:05.330
and and what what 
developers  can do  itdo it on 

00:23:05.331 --> 00:23:06.350
on real real  
engine 4.

00:23:06.351 --> 00:23:08.963
CheckCheck out out video video..

00:23:14.717 --> 00:23:15.490
&gt;&gt; For&gt;&gt; For  years weyears we 
made made  video gamesvideo 

00:23:15.491 --> 00:23:16.505
games  
where you'd sit sit on the on 

00:23:16.506 --> 00:23:18.045
the  other 
sideother  of the glass glass..

00:23:18.046 --> 00:23:20.046
NowNow you're you're inside 
inside the the real real 3- 3-DD

00:23:21.186 --> 00:23:22.200
feeling offeeling  
presence..

00:23:22.201 --> 00:23:23.922
&gt;&gt; &gt;&gt; DaydreamDaydream's's an an
 exciting exciting new new  

00:23:23.923 --> 00:23:25.327
mobile VR platform platform and 
and what what it it 

00:23:25.328 --> 00:23:27.259
does  is take take some some of 
 of the highthe high VR VR 

00:23:27.260 --> 00:23:29.077
features  we've seen inwe've 
seen desktop in desktop 

00:23:29.078 --> 00:23:29.977
VR applications applications and
 and brings brings them them  

00:23:29.978 --> 00:23:31.721
to Android so so that that we we
 can can really 

00:23:31.722 --> 00:23:33.124
up the really level of fidelity 
 in ourin our  

00:23:33.125 --> 00:23:33.839
mobile VRVR experiences 
experiences.

00:23:33.840 --> 00:23:35.247
&gt;&gt; &gt;&gt; What'sWhat's especially 
especially exciting exciting 

00:23:35.248 --> 00:23:37.172
aboutabout Daydream Daydream is 
is that that you have you have  

00:23:37.173 --> 00:23:40.196
complete freedom of movement.
You don't have a cord tangling 

00:23:40.197 --> 00:23:45.591
you up.
You also have this amazing of 

00:23:37.269 --> 00:23:39.269
movement

00:23:42.629 --> 00:23:43.658
lets lets you you 
interact .

00:23:43.659 --> 00:23:44.975
ItIt lets lets you you  throw 
thingsthrow things..

00:23:44.976 --> 00:23:46.289
It letsIt lets you you choose 
choose  where youwhere you 

00:23:46.290 --> 00:23:47.594
want towant to  movemove..
&gt;&gt; &gt;&gt; SoSo when when people 

00:23:47.595 --> 00:23:49.311
people think think about about 
mobile  VR you you generally 

00:23:49.312 --> 00:23:49.798
generally think  ofthink of
of, you knowf, you know,, look 

00:23:49.799 --> 00:23:51.386
look,, aiming aiming,,  are 
yourare  hands lockedhands 

00:23:51.387 --> 00:23:53.447
locked to your to  headyour 
head??

00:23:53.467 --> 00:23:54.968
AboutAbout with with the the 
Daydream Daydream 

00:23:54.969 --> 00:23:56.389
controller , it's it's a a  
whole newwhole new  

00:23:56.390 --> 00:23:57.579
ball game..
You canYou can  freely interact

00:23:57.580 --> 00:23:58.613
freely interact with with the 
the 

00:23:58.614 --> 00:24:00.033
world  in a naturalin a natural 
way way  andand that that 

00:24:00.034 --> 00:24:00.951
feels  reallyreally  good.good.
&gt;&gt;

00:24:00.952 --> 00:24:02.963
&gt;&gt; The The  Daydream integration
Daydream  wasintegration was 

00:24:02.964 --> 00:24:03.549
unrealnreal..It
It works works out out of the of

00:24:03.550 --> 00:24:06.095
 the box box  forfor all all 
the interfaces you're you're 

00:24:06.096 --> 00:24:06.818
already already 
familiaramiliar with with..

00:24:06.819 --> 00:24:07.745
There's nothingThere's nothing 
new new to to learn learn..

00:24:07.746 --> 00:24:08.937
YouYou can can jump jump in in 
there and there and  start 

00:24:08.938 --> 00:24:10.855
createstart ing experiences 
experiences  with thewith the  

00:24:10.856 --> 00:24:13.049
tools.
&gt;&gt; We're excited excited about 

00:24:13.050 --> 00:24:14.882
about Daydream Daydream  
while everyoneeveryone  has ahas

00:24:14.883 --> 00:24:16.693
 a phone phone,, this this  
really takes VR VR to to the the

00:24:16.694 --> 00:24:17.720
  mathmath..
ItIt gives gives you you the the

00:24:17.721 --> 00:24:20.259
  ability to haveability to  
the samethe same kind  kind of 

00:24:20.260 --> 00:24:20.470
experiencesof experiences you  
you 

00:24:20.471 --> 00:24:22.188
have on really really  highhigh 
VR VR systems systems  

00:24:22.189 --> 00:24:24.096
but now completely completely  
immerseimmerse iveive and 

00:24:24.097 --> 00:24:26.217
with and  this beautiful  
controllerbeautiful controller..

00:24:26.419 --> 00:24:28.747
AndAnd we we know know that that
 it it will will power power 

00:24:28.748 --> 00:24:30.876
some  actually amazing amazing  
incredible 

00:24:30.883 --> 00:24:32.869
experiencesincredible  there..
&gt;&gt; &gt;&gt; TheThe     this  this isis

00:24:32.870 --> 00:24:35.017
 a a sample sample  project I
project  

00:24:35.023 --> 00:24:36.031
madeI  with assets assets from 
from the the 

00:24:36.032 --> 00:24:37.338
marketplace .
I'm reallyI'm really excited 

00:24:37.339 --> 00:24:38.154
excited to to see see what what 

00:24:38.155 --> 00:24:40.078
you guys doguys  withdo with 
Daydream Daydream and on and on 

00:24:44.827 --> 00:24:46.827
[Applause.]

00:24:50.044 --> 00:24:51.486
&gt;&gt; Kim&gt;&gt; Kim::  Thank you  Thank
 you..

00:24:51.487 --> 00:24:53.087
Pretty amazingPretty amazing..
MobileMobile  VR isVR is going 

00:24:53.088 --> 00:24:54.222
going to look to look that that 
good .

00:24:54.223 --> 00:24:55.827
It's amazingIt's amazing..
This isThis is barely barely 

00:24:55.828 --> 00:24:57.139
scratch ingscratching of of the 
the 

00:24:57.140 --> 00:24:58.540
surface  ofof what's  what's 
going to begoing to be ibleible

00:24:59.573 --> 00:25:01.480
TheThe Daydream Daydream 
controller controller is a is a 

00:25:01.481 --> 00:25:03.207
major advancement advancement in
 in terms terms  ofof  

00:25:03.208 --> 00:25:06.125
how you can can craft craft 
mechanics mechanics,, 

00:25:06.126 --> 00:25:07.450
explore a a mobile mobile world 
world  all onall on 

00:25:07.451 --> 00:25:08.690
your mobileyour mobile device 
device..

00:25:08.691 --> 00:25:09.985
Natural inputNatural input made 
made for for VR VR is is  

00:25:09.986 --> 00:25:11.409
hugely important important in 
terms in terms of of 

00:25:11.410 --> 00:25:12.305
makeing youmake ing you believe 
believe that that you've you've 

00:25:12.306 --> 00:25:13.223
been  transported to to  another

00:25:13.224 --> 00:25:13.728
placeanother .
AndAnd what's what's better 

00:25:13.729 --> 00:25:16.151
better is is that that if you if

00:25:16.152 --> 00:25:17.381
incorporate motion motion 
controls controls,, you you 

00:25:17.382 --> 00:25:18.890
reallyeally,, really feel a 
really feel a high high level 

00:25:18.891 --> 00:25:22.623
of  emotion.emotion.
DaydreamDaydream empower empower

00:25:22.921 --> 00:25:24.946
ss you you to to  create 
rich,ich, deeply deeply 

00:25:24.947 --> 00:25:25.653
interactive interactive content 
content  

00:25:25.654 --> 00:25:27.375
for mobilemobile..
AndAnd we we can't can't wait 

00:25:27.376 --> 00:25:29.667
wait to to see see the the 
awesome  contentcontent  andand 

00:25:29.668 --> 00:25:31.528
games games and and 
demosdemos  and alland all the 

00:25:31.529 --> 00:25:32.241
the amazing amazing things 
things  

00:25:32.242 --> 00:25:33.561
that are going to to follow 
follow using using 

00:25:33.562 --> 00:25:35.873
Daydream  and unand unrealreal 
engine engine 4. 4.

00:25:35.892 --> 00:25:37.719
ThanksThanks very very much. 
much.[Applause.]

00:25:37.720 --> 00:25:41.417
[Applause.]
Back to NathanBack to Nathan..

00:25:42.543 --> 00:25:46.463
&gt;&gt; Thanks,&gt;&gt; Thanks, Kim Kim..
ThanksThanks  so muchso much..

00:25:48.792 --> 00:25:50.187
&gt;&gt; So&gt;&gt; So,, it's it's so so  
cool tocool to see see what what

00:25:50.896 --> 00:25:52.246
already make ing for for 
Daydream .

00:25:52.247 --> 00:25:53.553
ButBut  I'm sureI'm sure many 
many of  youof you are are 

00:25:53.554 --> 00:25:55.472
wonderingondering::  When  When 
 can Ican I  be abe a  

00:25:55.473 --> 00:25:56.573
Daydream developer??
AndAnd I'm I'm really really 

00:25:56.574 --> 00:25:57.800
proud proud to to say say that 
that 

00:25:57.801 --> 00:26:00.107
you can do do  that rightthat 
right now now..

00:26:00.122 --> 00:26:01.829
For those ofFor those of you you
  who arewho are  C++ 

00:26:01.830 --> 00:26:03.450
developersC++  and we we know 
know that that many many 

00:26:03.451 --> 00:26:05.540
ofof our our core core VR VR 
developers developers love love 

00:26:06.670 --> 00:26:08.893
just launched an an N NDDKK    
NDK for Daydream that that gives

00:26:09.416 --> 00:26:11.023
 gives you you 
direct  low level level access 

00:26:11.024 --> 00:26:12.033
access to to all 
of the features features of of 

00:26:12.034 --> 00:26:14.034
our our hardware hardware  
and softwaresoftware  platform

00:26:14.247 --> 00:26:15.683
platform..
And weAnd we know know that  

00:26:15.684 --> 00:26:17.602
manythat many  ofof you you 
actually  like to to use use 

00:26:17.603 --> 00:26:18.597
game game  
engines likelike  unity andunity

00:26:18.598 --> 00:26:20.633
 and un unrealreal..We've
We've  got yougot you covered 

00:26:20.634 --> 00:26:23.268
covered,, as as well well..
If you'reIf you're  a unity 

00:26:23.269 --> 00:26:24.575
developera unity developer,, 
we're really really proud proud 

00:26:24.576 --> 00:26:26.297
to to say say that that 
there'sthere's  aa plug plug--in

00:26:26.298 --> 00:26:26.995
in available available 
today andtoday and we'll we'll 

00:26:26.996 --> 00:26:29.227
have have a a  native 
integration coming coming up 

00:26:29.228 --> 00:26:30.079
this up this 
summer..

00:26:30.080 --> 00:26:32.266
IfIf you're you're  anan un un
realreal developer developer,, 

00:26:32.267 --> 00:26:34.364
you canou can start start tod 
today,ay, right right now, now, 

00:26:35.701 --> 00:26:38.729
version version of of  UnUn
UnrealUnreal 4.12. 4.12.

00:26:38.742 --> 00:26:40.654
ForFor  allall of of this this 
information information 

00:26:40.655 --> 00:26:42.470
about how how you you can be can
 be a a Daydream Daydream 

00:26:42.471 --> 00:26:43.596
developerdeveloper,, including 
including how  how to 

00:26:43.597 --> 00:26:44.905
buildto  your own own Daydream 
Daydream  

00:26:44.906 --> 00:26:46.221
developer kitit  checkcheck out 
out 

00:26:46.222 --> 00:26:49.650
developersdevelopers..google
google.com.com//VRVR..

00:26:49.669 --> 00:26:50.633
AndAnd I'm I'm going to going 
hand to hand it it over over to 

00:26:50.634 --> 00:26:52.634
to  
Lindsay Metcalf,, one of one of 

00:26:53.087 --> 00:26:54.093
 ourour  
team's lead designers designers 

00:26:54.094 --> 00:26:55.614
 toto show show 
you  the Daydreamthe Daydream  

00:26:55.615 --> 00:26:56.306
experiences andexperiences and  
what they'll look look like like

00:26:56.307 --> 00:26:58.247
 for for our our  
users and how how we're we're 

00:26:58.248 --> 00:26:59.767
going to  
helpgoing to  them  discover the

00:26:59.511 --> 00:27:00.573
 experiences experiences that 
that all all 

00:27:00.574 --> 00:27:01.899
of  you will will create  create
  ..

00:27:01.900 --> 00:27:04.427
Thank youThank you..
[Applause.]

00:27:07.623 --> 00:27:10.872
&gt;&gt; Thanks&gt;&gt; Thanks..
Thank youThank you..

00:27:10.886 --> 00:27:12.477
Thanks, NathanThanks, Nathan..
We've learnedWe've learned so so

00:27:12.478 --> 00:27:14.225
 much much about about 
design ing  good VRgood VR..

00:27:14.226 --> 00:27:15.519
AndAnd we're we're looking 
looking forward forward to to 

00:27:15.520 --> 00:27:17.952
sharing  it with  you allyou all
 at at I/O I/O  

00:27:17.955 --> 00:27:20.467
this weekweek..
So I'llSo I'll walk walk you 

00:27:20.469 --> 00:27:21.849
through you through  
Daydream home and tell youhome 

00:27:21.850 --> 00:27:22.869
and tell how you how 
wee designed designed the the 

00:27:22.870 --> 00:27:24.311
experience experience to to  
really connectconnect people 

00:27:24.312 --> 00:27:25.948
people to to the the 
best  VR contentVR content..

00:27:25.949 --> 00:27:27.145
Then I'mThen I'm going going to 
take you to take 

00:27:27.146 --> 00:27:28.353
through you  a couple of thea 
couple of the app appss  

00:27:28.354 --> 00:27:29.582
that we've designed designed  
and shareand share  

00:27:29.583 --> 00:27:30.578
some of the the  thingsthings  
that we'vethat we've 

00:27:30.579 --> 00:27:31.600
learned that that will will help
 help you you  

00:27:31.601 --> 00:27:35.827
create your very very own  VR 
appown VRs apps..

00:27:35.845 --> 00:27:37.150
This is DaydreamThis is Daydream
  home.home.

00:27:37.151 --> 00:27:39.057
ItIt  comes withcomes with every
 every Daydream Daydream--

00:27:39.058 --> 00:27:39.767
Daydream-ready     phonephone  
and it'sand it's 

00:27:39.768 --> 00:27:40.365
the firstthe first th thing that
ing that people people will will

00:27:42.201 --> 00:27:43.312
their 
Daydreamtheir  VR experience 

00:27:43.313 --> 00:27:44.097
experience..
And forAnd for  VR,VR, craft 

00:27:44.098 --> 00:27:45.340
craftinging the right the right 

00:27:45.341 --> 00:27:46.750
environment is so so important 
important for for  

00:27:46.751 --> 00:27:48.265
facilitating presence,, so so 
for for  

00:27:48.266 --> 00:27:49.580
Daydream home,, we we really 
really wanted wanted  

00:27:49.581 --> 00:27:51.314
to create a welcomingcreate a 
welcoming space space that  

00:27:51.315 --> 00:27:52.732
had a bit a bit of of wonder 
wonder and and delight delight 

00:27:52.733 --> 00:27:54.055
inside  ofof  it andit and it it
 was 

00:27:54.056 --> 00:27:55.265
somewhere was  that you'd you'd 
want to want 

00:27:55.266 --> 00:27:56.375
stop and hang and hang out out 
for for a bit a bit 

00:27:56.376 --> 00:27:57.697
beforebefore you you embarked 
embarked on on your your next 

00:27:57.698 --> 00:27:58.539
next 
experience .

00:27:58.540 --> 00:28:00.125
Daydream homeDaydream home is 
also is also  your 

00:28:00.126 --> 00:28:01.052
experienceyour  launchlauncherer
..

00:28:01.053 --> 00:28:02.365
This is whereThis is where you 
you  can seecan see and and 

00:28:02.366 --> 00:28:04.480
launch  your favorite favorite 
app appss,, 

00:28:04.482 --> 00:28:05.592
access play play store store to 
to get get new new  

00:28:05.593 --> 00:28:08.328
content and  also accessalso 
access system system 

00:28:08.337 --> 00:28:10.749
settings .
But DaydreamBut Daydream  home 

00:28:10.750 --> 00:28:12.399
isn'thome isn't just just a a  
list ofof  appsapps..

00:28:12.400 --> 00:28:13.254
SoSo up up here here on on the 
the top top row row,, these 

00:28:13.255 --> 00:28:15.212
these  
are discovery windows windows..

00:28:15.213 --> 00:28:16.100
AndAnd  discovery windows
discovery windows  are whereare 

00:28:16.101 --> 00:28:17.650
where  
we're going to to promote 

00:28:17.651 --> 00:28:19.072
promote and and cure cure
curate the very very best best  

00:28:19.073 --> 00:28:20.265
content 
thatcontent  you create  create 

00:28:20.266 --> 00:28:21.811
 ..
DiscoveryDiscovery windows 

00:28:21.812 --> 00:28:23.840
windows,,  we've 
designed,,  with a sensewith a  

00:28:23.841 --> 00:28:24.619
ofsense of depth depth 
and parapara  lacks solacks  you

00:28:24.620 --> 00:28:26.144
so  canyou can really really  
get aa sense sense of of peak 

00:28:26.145 --> 00:28:28.702
peakinging into into a a 
newew 3-D 3-D world world..

00:28:28.729 --> 00:28:30.921
You canYou can  step up tostep 
up to a a discovery discovery  

00:28:30.922 --> 00:28:32.239
window andand peer peer in in 
and and really really 

00:28:32.240 --> 00:28:33.860
get  a sense sense of the of the
  world itworld  willit will  

00:28:33.861 --> 00:28:35.036
teleport you you to to..
AndAnd using  Androidusing 

00:28:35.037 --> 00:28:36.780
Android  deep linksdeep links 
you you 

00:28:36.781 --> 00:28:38.805
can  add intent intent filters 
filters  toto these these 

00:28:38.814 --> 00:28:39.922
discovery  windows and they will
 they will  

00:28:39.923 --> 00:28:41.738
take users direct directlyly to 
to content content 

00:28:41.739 --> 00:28:42.857
inside  of your your  appsapps..
The importanceThe importance of 

00:28:42.858 --> 00:28:43.963
of this this,, it it means means

00:28:43.964 --> 00:28:45.683
that if you if you add add a a  
newnew episode episode or or  

00:28:45.684 --> 00:28:46.818
level to your your game game,, 
it it means means  

00:28:46.819 --> 00:28:48.431
that you can can promote promote
 it it,, or or them them   

00:28:48.432 --> 00:28:50.258
them, andand you you don't 
actually don't  

00:28:50.259 --> 00:28:51.883
havehave to  to have ahave a new
 new app app..

00:28:51.884 --> 00:28:53.166
UsersUsers  can alreadycan 
already have have the the app 

00:28:53.167 --> 00:28:55.167
app 
installed  on their their phone 

00:28:55.350 --> 00:28:57.105
phone..
NextNext  let's takelet's take  

00:28:57.106 --> 00:29:01.653
a looka look  atat  play 
store  in VRin .VR.Play

00:29:01.673 --> 00:29:02.871
Play store  willstore will 
connect connect people people 

00:29:02.872 --> 00:29:03.908
to all all of of your your app 
appss..

00:29:03.909 --> 00:29:05.710
AndAnd since since this is this 
is play store, it 

00:29:05.711 --> 00:29:06.723
means we're starting with play a

00:29:06.724 --> 00:29:08.035
largea  developer community
developer community.

00:29:08.036 --> 00:29:09.250
AllAll of of you you out out 
here here..

00:29:09.251 --> 00:29:11.062
And itAnd it also also means 
means that that we have a 

00:29:11.063 --> 00:29:12.887
global payments and distribution
 we 

00:29:13.150 --> 00:29:15.285
support support  
things like in inopo p purchases

00:29:15.286 --> 00:29:17.525
purchases  from 
day one.

00:29:17.540 --> 00:29:18.751
We  designed storedesigned store
 to to make make it it  

00:29:18.752 --> 00:29:19.975
easy to  browsebrowse for for 
app appss and and  

00:29:19.976 --> 00:29:21.784
games in VR VR by by showcase 
showcase inging 

00:29:21.785 --> 00:29:23.596
collections  of cure cureated
 ated content content 

00:29:23.597 --> 00:29:25.113
as well as make makeing it ing 
it easy easy to to  

00:29:25.114 --> 00:29:26.128
navigate by  swipeswipe ing 
throughing through the the 

00:29:26.129 --> 00:29:27.665
content  with the the Daydream 
Daydream  

00:29:27.666 --> 00:29:30.165
controller.
NowNow I'm I'm going to going 

00:29:30.166 --> 00:29:32.970
dive to dive into the into the  
Google street view view app app 

00:29:32.971 --> 00:29:34.826
in in play play 
store VR VR an and taked take a 

00:29:34.827 --> 00:29:36.827
a more 
detailed more  look..

00:29:42.873 --> 00:29:44.505
HereHere we've we've  added VR
added VR--specificspecific  

00:29:44.506 --> 00:29:45.725
features to help help you you 
promote promote 

00:29:45.726 --> 00:29:48.040
your app appss..
SuchSuch as as 360 photosphere  

00:29:47.504 --> 00:29:48.440
360 photosphere previews 
previews 

00:29:48.441 --> 00:29:50.156
that  you can can preview 
preview all all  around 

00:29:50.157 --> 00:29:52.278
youaround  instead of of just 
just  flat staticflat static  

00:29:52.280 --> 00:29:53.808
screen shots..
And inAnd in VR VR,, even even 

00:29:53.809 --> 00:29:54.997
with with the the  most 
excitingmost  gamesgames,, it's 

00:29:54.998 --> 00:29:56.308
it's really really 
important  to  make suremake 

00:29:56.309 --> 00:29:57.023
sure we're we're 
design ing comfortable 

00:29:57.024 --> 00:29:58.779
comfortable 
experiences .

00:29:58.780 --> 00:30:00.289
SoSo  we've addedwe've added a a
 motion motion 

00:30:00.290 --> 00:30:01.900
intensityintensity rating rating
 to to  help peoplehelp people 

00:30:01.901 --> 00:30:03.827
find content content that's 
that's right right  for 

00:30:03.828 --> 00:30:09.032
themfor .
AndAnd let's let's be be 

00:30:09.033 --> 00:30:11.774
realistic realistic here here..

00:30:18.950 --> 00:30:20.882
No matter how awesome VR is,No 
matter how awesome VR is,  

00:30:20.883 --> 00:30:22.101
we're still going going to spend
 to spend most most 

00:30:22.102 --> 00:30:23.312
of our  time in thetime in the  
real worldreal world..

00:30:23.313 --> 00:30:24.534
SoSo for  for the timesthe times
 that that you're  

00:30:24.535 --> 00:30:26.247
awayyou're  from your your 
Daydream Daydream viewer viewer,

00:30:26.248 --> 00:30:26.914
, 
our  Daydream mobileDaydream 

00:30:26.915 --> 00:30:28.851
mobile app app will will 
makeake it it really really easy

00:30:28.852 --> 00:30:31.170
 easy to to discover discover 
and  cuuee  upup  content to

00:30:31.171 --> 00:30:32.620
content to try try it it  
later.

00:30:32.621 --> 00:30:33.931
So whenSo when  you're on the
you're on the  go andgo and you 

00:30:33.932 --> 00:30:34.310
 you 
have somesome  time to vowstime 

00:30:34.311 --> 00:30:36.258
to vows      browse browse but 
but you you 

00:30:36.259 --> 00:30:37.759
don't have your your viewer 
viewer on on hand hand 

00:30:37.760 --> 00:30:39.884
you  can queuecan queue  them up
 tothem up to watch watch 

00:30:39.892 --> 00:30:40.998
later .
Or you'reOr you're at  at a 

00:30:40.999 --> 00:30:42.391
friend'sa friend's house house  
and you hearhear about about a a

00:30:42.392 --> 00:30:43.907
 an an 
incredible  newnew VR VR game ,

00:30:43.908 --> 00:30:45.946
game,  you canyou can  
download the app app from from 

00:30:45.947 --> 00:30:46.762
your your  
mobile phone and and the the 

00:30:46.763 --> 00:30:47.048
game game  will 
be therethere  next timenext 

00:30:47.049 --> 00:30:48.282
time you you return return to to

00:30:48.283 --> 00:30:50.283
Daydream  homehome..

00:30:53.513 --> 00:30:54.094
YesterdayYesterday we we 
mentioned mentioned that that a 

00:30:54.095 --> 00:30:55.557
a VR VR 
version  of YouTube YouTube is 

00:30:55.558 --> 00:30:57.556
is coming coming..So
So now now  let's takelet's take

00:30:57.557 --> 00:31:02.100
 a a look look..
With stauroscopicWith 

00:31:02.101 --> 00:31:06.775
stauroscopic  VRVR video video  
through 360 livelive streaming 

00:31:06.776 --> 00:31:08.393
streaming and and  
spatial audio we've we've built 

00:31:08.394 --> 00:31:09.197
an built 
awesome an  foundation for truly

00:31:09.198 --> 00:31:10.802
 for truly  
immerseive video video with with

00:31:10.803 --> 00:31:12.451
 YouTube YouTube..
YouYou  can stepcan step inside 

00:31:12.452 --> 00:31:13.868
inside a a video video and  
havehave  it allit all around 

00:31:13.869 --> 00:31:14.779
around you you and and you 
can you  really feel feel like 

00:31:14.780 --> 00:31:18.718
like you're you're 
there .

00:31:18.733 --> 00:31:19.617
Including hangingIncluding 
hanging out out with with great 

00:31:19.618 --> 00:31:21.057
great 
white Sharks Sharks which which 

00:31:21.058 --> 00:31:23.588
in in VR VR is is  
actually pretty scary scary..

00:31:24.095 --> 00:31:25.606
YouTubeYouTube is is also also a
 a huge huge part part of of  

00:31:25.607 --> 00:31:27.727
discovery for  VR.VR.
I thinkI think many many of of  

00:31:27.728 --> 00:31:29.947
us andus and many 
people have had their first 

00:31:29.959 --> 00:31:31.580
experience many with  Virtual 
Reality 

00:31:31.581 --> 00:31:33.100
here in in YouTube YouTube so so
  we've beenwe've been 

00:31:33.101 --> 00:31:33.460
working with with our our  
friends atfriends at  you 

00:31:33.461 --> 00:31:36.121
you tub to bringto bring this 
this all all  together 

00:31:36.126 --> 00:31:38.228
intogether  a stand alone alone 
VR VR app app..

00:31:38.242 --> 00:31:38.837
.
I'mI'm  sharing thissharing this

00:31:38.838 --> 00:31:40.467
 with with you you 
because webecause we think think

00:31:40.468 --> 00:31:41.585
 YouTube YouTube is is  
going to beto be one one of the 

00:31:41.586 --> 00:31:42.458
best of the best Waze Waze 
for you  too reach reach users 

00:31:42.459 --> 00:31:45.326
users and and show 
off show your app sapps..

00:31:45.340 --> 00:31:46.529
A lot ofA lot of  us areus are 
already already using using  

00:31:46.530 --> 00:31:47.945
YouTube toto share share 
development  

00:31:47.946 --> 00:31:50.853
tips and and tricks tricks..
Now withNow with the the VR VR 

00:31:51.382 --> 00:31:52.583
video video creation creation 
tools  that the the YouTube 

00:31:52.584 --> 00:31:54.507
YouTube team team is is  
hard at  workwork on on,, it it 

00:31:54.508 --> 00:31:55.697
will will also also be be  
an incredible  way for youway 

00:31:55.698 --> 00:31:57.157
for you to to 
connect  with your your audience

00:31:57.158 --> 00:31:58.572
 audience and and  
build a community community.

00:31:58.573 --> 00:32:00.889
SoSo you'll you'll be be  able
able to to up uploadload 360 

00:32:00.890 --> 00:32:02.614
video 360 , trailers trailers,, 
game game  play,play, 

00:32:02.615 --> 00:32:03.399
basicallyasically everything 
everything that that you'd you'd

00:32:04.100 --> 00:32:05.541
 really  
excited about thethe content 

00:32:05.542 --> 00:32:08.325
content that that  
you're going to to  create .

00:32:08.326 --> 00:32:10.326
create  

00:32:11.384 --> 00:32:14.100
SoSo,, we've we've designed 
designed the the Daydream 

00:32:14.101 --> 00:32:15.300
Daydream  
experience by help helpinging 

00:32:15.301 --> 00:32:16.022
people people 
connect  to your your content 

00:32:16.023 --> 00:32:18.023
content and  
continuecontinue  to reto re

00:32:18.242 --> 00:32:19.889
engageengage with with it it 
over  time.

00:32:19.890 --> 00:32:22.001
But more than anything wh what 
we'rewe're really really  

00:32:22.002 --> 00:32:22.496
excited aboutexcited about is is

00:32:22.497 --> 00:32:24.320
seeingseeing what what you you  
all areall are going going to 

00:32:24.321 --> 00:32:24.802
create .
And we we know know  thatthat 

00:32:25.343 --> 00:32:27.159
arethat there are  
thousands of  undiscovered 

00:32:27.160 --> 00:32:27.639
thingsundiscovered things  
left to explore explore in in VR

00:32:27.640 --> 00:32:29.558
 .VR.So to
So to help help,, whatever 

00:32:29.559 --> 00:32:31.470
whatever we we learn learn  
from performance  optimizations

00:32:31.471 --> 00:32:32.715
optimizations 
toto user user experience 

00:32:32.716 --> 00:32:33.533
experience,, we we want want to 
to  

00:32:33.534 --> 00:32:36.151
share that  with youwith you..

00:32:39.588 --> 00:32:41.603
So todaySo today we're we're 
excited excited to to 

00:32:41.604 --> 00:32:43.604
introduce  Daydream labs labs..
DaydreamDaydream labs labs is is

00:32:43.816 --> 00:32:45.224
 where where we're we're  
going to experimentto experiment

00:32:45.225 --> 00:32:46.339
 and and share share 
what we've we've learned learned

00:32:46.340 --> 00:32:48.479
 with with the the  
world.

00:32:48.494 --> 00:32:50.110
We'reWe're  hard athard at work 
work right right here here in in

00:32:50.277 --> 00:32:51.524
and  we're explorewe're explore

00:32:51.525 --> 00:32:53.272
exploring everything from from  
usability to  hardware to

00:32:53.273 --> 00:32:55.340
hardware to new new 
user experiences experiences  

00:32:55.341 --> 00:32:58.058
for Virtual 
Realityeality..

00:32:58.072 --> 00:32:59.577
AndAnd as as part part of of 
this this  effort,effort,  

00:32:59.578 --> 00:33:02.018
we're rapid prototype prototype
 inging  to seeto see 

00:33:02.023 --> 00:33:04.528
what  makes VRmakes VR use use
fulful,, fun fun and and 

00:33:04.533 --> 00:33:06.557
also  sometimes bad bad..
So,So, so so far far we've we've

00:33:06.750 --> 00:33:08.275
 been been building building  
about two app app experiments 

00:33:08.276 --> 00:33:09.461
experiments a week a week  
for a while and and today today 

00:33:09.462 --> 00:33:11.010
we're we're 
going  to start sharing sharing 

00:33:11.011 --> 00:33:13.011
these these  
lessons with everyone everyone..

00:33:17.150 --> 00:33:19.887
We'llWe'll give  give you access
you access,, first first  

00:33:19.892 --> 00:33:21.309
we'll start by by giving giving 
you you  access 

00:33:21.310 --> 00:33:22.626
toaccess  our Daydream Daydream 
design design  

00:33:22.627 --> 00:33:24.732
playground to  get youget you 
started 

00:33:24.737 --> 00:33:26.155
develop ing for the for  
Daydreamthe Daydream  

00:33:26.156 --> 00:33:27.024
controller.
We'll give youWe'll give you 

00:33:27.025 --> 00:33:28.779
access access to to all all the 
different the  types of 

00:33:28.780 --> 00:33:29.760
experiences 
that we've created so far we've 

00:33:29.761 --> 00:33:30.875
created so far and and 
from  flippingping pancakes 

00:33:30.876 --> 00:33:32.615
pancakes to to 
playing  tennis,, we have we 

00:33:32.616 --> 00:33:33.891
have  about 15 
differentabout  Waze to to 

00:33:33.892 --> 00:33:35.768
interact interact with with  
the controller  that wethat we 

00:33:35.769 --> 00:33:37.192
thought thought  
of so  far.far.

00:33:37.193 --> 00:33:38.479
We'reWe're also also giving 
giving another another  talk 

00:33:38.480 --> 00:33:39.712
thistalk  morning on on lessons 
lessons learned learned 

00:33:39.713 --> 00:33:40.941
fromfrom Daydream Daydream  labs
labs..

00:33:40.942 --> 00:33:43.041
This isThis is focused focused 
on on our our rapid rapid  

00:33:43.042 --> 00:33:44.264
prototypeing initiative 
initiative..

00:33:44.265 --> 00:33:44.917
AndAnd we're we're going to 
going to start start sharing 

00:33:44.918 --> 00:33:45.668
sharing 
all of of this this regularly 

00:33:45.669 --> 00:33:48.701
regularly on the on the  
Google VR blog blog..

00:33:48.717 --> 00:33:50.703
We'reWe're so so excited  to
excited to  join thejoin  

00:33:50.704 --> 00:33:51.729
conversation,, and and we we 
can't can't wait wait 

00:33:51.730 --> 00:33:54.151
toto see see what what everyone 
everyone  individuals

00:33:54.161 --> 00:33:54.632
individuals.individuals    
I'dI'd now now like to like to 

00:33:54.633 --> 00:33:56.292
hand hand this this back back 
to clay..

00:33:56.293 --> 00:33:58.293
Thank youThank you..
[Applause.]

00:34:02.438 --> 00:34:03.241
&gt;&gt; CLAY BAVOR:&gt;&gt; CLAY BAVOR:  
One  One of  of the 

00:34:03.242 --> 00:34:04.749
prototypesthe  you'll getyou'll 
 toget to see see as 

00:34:04.750 --> 00:34:07.238
part of the session Lindsay 
mentionedmentioned is is a VR a 

00:34:07.239 --> 00:34:10.902
VR watering watering can can..
We took aWe took a Vive Vive 

00:34:10.903 --> 00:34:12.108
controller controller and and 
jammed it it in the in the front

00:34:12.109 --> 00:34:13.450
 front of of a a  
watering can..

00:34:13.451 --> 00:34:14.939
AndAnd it it turns turns  outout
 it's it's very very  

00:34:14.940 --> 00:34:16.360
natural to water water things 
things in in  VR 

00:34:16.361 --> 00:34:17.591
whenVR  you have aave a watering
 watering can can..

00:34:17.592 --> 00:34:18.675
SoSo,, anyway anyway,, stay 
tuned stay tuned  for thatfor 

00:34:18.676 --> 00:34:20.257
that..
May beMay be even even better 

00:34:20.258 --> 00:34:22.529
better than the 
pancakes.

00:34:22.547 --> 00:34:23.754
So than hopefully this this all 
all gives gives  you 

00:34:23.755 --> 00:34:25.055
an idea ofidea of how how some 
some of  of the partsthe  

00:34:25.056 --> 00:34:26.669
of Daydream Daydream come come 
together together,, from from 

00:34:26.670 --> 00:34:28.192
the  Daydream--readyready 
smartphones smartphones 

00:34:28.193 --> 00:34:30.018
and  the VR VR optimization 
optimizationss as as part part 

00:34:30.019 --> 00:34:31.127
ofof N N,, the the controller 
controller,, the the viewer 

00:34:31.128 --> 00:34:31.953
viewer  
viewer.

00:34:31.954 --> 00:34:32.645
AndAnd  some of thesome of the 
tools tools that 

00:34:32.646 --> 00:34:33.853
you'll that have accesshave  to
access to  as 

00:34:33.854 --> 00:34:35.049
developers..
LikeLike the the discovery 

00:34:35.050 --> 00:34:36.381
discovery windows windows where 
where 

00:34:36.382 --> 00:34:37.994
youyou can can push push new new
 experiences experiences and  

00:34:37.995 --> 00:34:39.108
and 
so on to to  users asusers as  

00:34:39.109 --> 00:34:41.118
part ofpart of 
DaydreamDaydream home home..

00:34:41.133 --> 00:34:42.940
But of courseBut of course the 
the smartphones smartphones,, 

00:34:42.941 --> 00:34:44.162
the operatingthe operating 
systems systems,, the the  

00:34:44.163 --> 00:34:46.090
headset tcontrollercontroller,, 
it's it's not not 

00:34:46.091 --> 00:34:47.063
what  VR is is  about.about.
It'sIt's about about the stuff 

00:34:47.064 --> 00:34:48.794
the  thatstuff that you you  
can do,, the the experiences 

00:34:48.795 --> 00:34:51.747
experiences..
AndAnd we we hope hope you're 

00:34:51.748 --> 00:34:52.766
you're going to  
create many of thosecreate many 

00:34:52.767 --> 00:34:53.669
of those..
AndAnd  fromfrom the the begin 

00:34:53.670 --> 00:34:55.408
beginningning,,  from 
early onarly on with with 

00:34:55.409 --> 00:34:56.499
Daydream Daydream,, we've we've 
been very very focused focused 

00:34:56.500 --> 00:34:58.129
on on makeing make ing it it 
really  easy for for developers 

00:34:58.130 --> 00:35:00.866
developers..
AndAnd one one of the of  

00:35:00.867 --> 00:35:01.380
companiesthe companies that's 
that's  

00:35:01.381 --> 00:35:03.098
been at the forefrontthe 
forefront of of VR VR  

00:35:03.099 --> 00:35:05.685
development is  UnityUnity..
And JohnAnd John  Rick anRick an

00:35:06.287 --> 00:35:08.452
 tell tell oh oh,, their their 
CEEOO  has beenhas been one one 

00:35:08.453 --> 00:35:10.478
of the of the earliest earliest 
support ers have have what wha 

00:35:09.946 --> 00:35:11.997
we've we've been been  
doing with Google Google and and

00:35:12.198 --> 00:35:14.198
 VR VR and and 
Daydream and and he he gets gets

00:35:14.217 --> 00:35:15.726
 what  
Daydream is about and I think he

00:35:16.737 --> 00:35:17.966
and I'm and  
delighteddelighted to  to have 

00:35:17.967 --> 00:35:19.396
himhave him here here to to  
say aa few few words words..

00:35:19.397 --> 00:35:21.008
SoSo,,  John,John, please please
..

00:35:21.009 --> 00:35:23.009
[Applause.]

00:35:25.948 --> 00:35:29.479
&gt;&gt; John&gt;&gt; John::  So  So  thanks
,thanks,  ClayClay..

00:35:29.493 --> 00:35:30.370
It's anIt's an incredible 
incredible honor honor to be to 

00:35:30.371 --> 00:35:31.825
be  
here.

00:35:31.826 --> 00:35:33.550
And IAnd I want to want to start
 start by by just just make

00:35:33.551 --> 00:35:35.263
making make a simple observation
 observation..

00:35:35.264 --> 00:35:37.369
Google andGoogle and  UnityUnity
 are deeply are deeply  

00:35:37.375 --> 00:35:39.803
aligned on our our values values
,, in in 

00:35:39.804 --> 00:35:42.728
particular  about thethe way way
 we we see 

00:35:42.732 --> 00:35:44.559
Virtual Reality, see how we see 
see VR VR..

00:35:44.560 --> 00:35:45.970
Now, theNow, the mission mission
 of of  

00:35:45.971 --> 00:35:47.277
democratization has been at the
been at the 

00:35:47.278 --> 00:35:49.613
core of  UnityUnity technology 
technology since since  

00:35:49.614 --> 00:35:54.544
our founding about about 10 10 
years ago years ago..

00:35:54.565 --> 00:35:58.385
DmomDmom rat rat           
dem democratizationization..

00:35:58.402 --> 00:35:59.723
WhatWhat that that means means 
is is putting putting the the  

00:35:59.724 --> 00:36:03.143
power of technology technology  
the hands ofthe hands 

00:36:03.144 --> 00:36:04.256
users afford affordablyably 
whether whether they they 

00:36:04.257 --> 00:36:05.484
can  afford afford it it or or 
not not..

00:36:05.485 --> 00:36:07.200
AA  reallyreally  bigbig day day
..

00:36:07.201 --> 00:36:09.105
Google  VR underVR under  Clay
Clay is is about about  

00:36:09.106 --> 00:36:10.835
mobile, leveraging leveraging  
the powerthe power of  of 

00:36:10.836 --> 00:36:12.936
the CPPUU  literallyliterally in
 in billions  ofbillions of  

00:36:12.937 --> 00:36:14.167
pockets around thearound the 
world world..

00:36:14.168 --> 00:36:15.705
Everyone'sEveryone's included 
included..

00:36:15.706 --> 00:36:20.106
That's anotherThat's another 
type of type of democrat 

00:36:20.107 --> 00:36:22.818
democrat 
it ization  it's at theit's at t

00:36:23.651 --> 00:36:25.039
 valuehe value that  that 
we're fundamentally alignedly 

00:36:25.040 --> 00:36:26.278
aligned..
Now,Now,  from thefrom the begin

00:36:26.279 --> 00:36:28.799
 beginningning our our  
orientation towards supporting 

00:36:28.800 --> 00:36:29.282
supporting 
the  developer has has brought 

00:36:29.283 --> 00:36:31.283
brought us us a a  
fairly sizable audience audience

00:36:31.603 --> 00:36:32.394
..
AsAs you can see you can see 

00:36:32.395 --> 00:36:34.375
behind behind me me  5-1/25-1/2 

00:36:34.376 --> 00:36:35.594
million developers,, that's 
that's  a lot 

00:36:35.595 --> 00:36:36.800
of people usingpeople using a a 
game game  

00:36:36.801 --> 00:36:38.125
management or game game 
technology technology..

00:36:38.126 --> 00:36:39.823
TheseThese developers developers
,, in in aggregate aggregate,,  

00:36:39.824 --> 00:36:41.752
produce games that aregames that
 are down    down

00:36:41.753 --> 00:36:44.793
downloaded 6 to 76 to 70000 
times per times per 

00:36:44.803 --> 00:36:47.417
secondsecond,, 1.6 billion times
  per1.6 billion times per  

00:36:47.427 --> 00:36:49.233
month.
And if youAnd if you want to 

00:36:49.234 --> 00:36:50.653
want to think think about about 
that  as an an aggregate 

00:36:50.654 --> 00:36:53.574
aggregate audience audience,, 
it's aboutit's about 5 500 

00:36:53.575 --> 00:36:54.706
million D00 million DAAUUss of 
of 

00:36:54.707 --> 00:36:57.018
games  built on on  UnityUnity,,
 so so this this 

00:36:57.025 --> 00:36:58.029
development communitydevelopment
 community,, all  ofall of 

00:36:58.030 --> 00:37:00.354
you,ou, is a is a very very,, 
very very big big  thingthing..

00:37:00.655 --> 00:37:01.964
If you thinkIf you think about 
about it it,, perhaps perhaps  

00:37:01.965 --> 00:37:05.213
you'd say that that 
democratization democratization 

00:37:05.214 --> 00:37:07.030
across  5 million developers is
developers is 

00:37:07.031 --> 00:37:12.076
very  serious scale scale..
Now, unityNow, unity,, as as  

00:37:12.077 --> 00:37:13.496
clay hasclay has 
mentioned , from from the the 

00:37:13.497 --> 00:37:14.268
begin ningbeginning 
has been makeinghas been make

00:37:14.269 --> 00:37:15.951
 ing  big investmentsbig  
inin VR VR..

00:37:15.952 --> 00:37:17.050
Some of youSome of you  may have
 seen ourmay have seen our  

00:37:17.051 --> 00:37:19.059
version of theof the met met 
averse averse 

00:37:19.065 --> 00:37:21.296
creatingcreating VR VR from from
  within VRwithin VR..

00:37:21.309 --> 00:37:22.594
That certainlyThat certainly got
 got a lot of a lot of  

00:37:22.595 --> 00:37:24.220
people lit up up on on YouTube 
YouTube and and in in 

00:37:24.221 --> 00:37:25.525
our  community..
And we're also also very much 

00:37:25.526 --> 00:37:27.252
very much aware aware 
of Google Google's's roadmap 

00:37:27.253 --> 00:37:29.967
roadmap in in VR VR..
AndAnd we we intend intend to b 

00:37:29.968 --> 00:37:30.654
to be ande  areand are  
there every  step of thestep of 

00:37:30.655 --> 00:37:33.920
the way way..
Now,Now, as as part part  of 

00:37:33.921 --> 00:37:35.938
thatof ,that, we're we're 
announcing  support for for 

00:37:35.943 --> 00:37:37.776
Daydream Daydream..
Surprise.Surprise.

00:37:37.777 --> 00:37:40.378
We'll beWe'll be there there..
We areWe are there there..

00:37:40.395 --> 00:37:42.395
It'llIt'll be be native native 
inside inside of of  UnityUnity,

00:37:42.698 --> 00:37:43.843
,  
very easy to to use use..

00:37:43.844 --> 00:37:45.227
And we'reAnd we're also also 
providing providing support 

00:37:45.228 --> 00:37:46.115
support  
for vulcanvulcan  which we're

00:37:46.116 --> 00:37:47.671
which we're launching launching 

00:37:47.672 --> 00:37:48.739
next quarterquarter..
SoSo the the core core 

00:37:49.278 --> 00:37:49.682
fundamental fundamental 
technologyiestechnology ies that

00:37:49.683 --> 00:37:51.611
 that you you need will 
be right right out out of  of 

00:37:51.612 --> 00:37:53.439
the boxthe box  ready toready to

00:37:53.440 --> 00:37:55.547
use from  UnityUnity but but 
beyond beyond that that,,  

00:37:55.553 --> 00:37:57.295
simple announcement..
We're hereWe're here..

00:37:57.296 --> 00:37:59.011
We'reWe're ready ready..
GetGet on on board. board.

00:37:59.012 --> 00:38:00.509
I gotI got two two things things
 I I want want to talk to talk  

00:38:00.510 --> 00:38:02.729
about briefly..
Two ideasTwo ideas..

00:38:02.742 --> 00:38:05.347
TheThe first first of of  them
them really really is is that 

00:38:05.348 --> 00:38:06.969
that 
I think mobile think mobile is 

00:38:06.970 --> 00:38:09.368
is going going to be to be  
driven by mobile mobile -- -- 

00:38:09.369 --> 00:38:11.830
excuse excuse me me//isis  
going to bebe driven driven by 

00:38:11.831 --> 00:38:12.706
by mobile mobile..
WeWe envision envision a a world

00:38:12.707 --> 00:38:14.121
 world where where 
literally billions billions of 

00:38:14.122 --> 00:38:15.979
of people people  
have access to to VR VR..

00:38:15.980 --> 00:38:17.593
AndAnd the the fact fact that 
that there's there's really  

00:38:17.594 --> 00:38:19.579
twice astwice as  many people
many people with with mobile 

00:38:19.580 --> 00:38:21.803
mobile  
devices as PC PCss makes makes i

00:38:22.322 --> 00:38:23.353
 it 
obvious.obvious.

00:38:23.354 --> 00:38:25.668
It's just  mathjust math..
SoSo mobile mobile's's going 

00:38:25.669 --> 00:38:26.776
going to to drive drive this 
this 

00:38:26.777 --> 00:38:27.900
in the fullness the fullness of 
of  time.time.

00:38:27.901 --> 00:38:29.109
And againAnd again we're we're 
there there to to support 

00:38:29.110 --> 00:38:30.524
support 
that .

00:38:30.525 --> 00:38:32.327
AndAnd the the second second 
idea idea that that I I want 

00:38:32.328 --> 00:38:33.637
want 
to get acrossget across is is I 

00:38:33.638 --> 00:38:35.354
don't believe I don't believe  
that VR is is going going  to be

00:38:34.824 --> 00:38:36.536
to be about about 
games  oror simple simple shop 

00:38:36.537 --> 00:38:38.998
shoppingping app appss..
I thinkI think it's it's 

00:38:38.999 --> 00:38:39.801
literally literally going going 
to 

00:38:39.802 --> 00:38:41.632
extend the the human human 
experience experience..

00:38:41.633 --> 00:38:43.936
You knowYou know,, imagine 
imagine  in ain a world world 10

00:38:44.242 --> 00:38:46.144
where you you blink blink 
andnd  you're standingyou're 

00:38:46.145 --> 00:38:48.391
standing in the in the  Taj 
Mahal.

00:38:48.406 --> 00:38:50.119
OrOr  you blinkyou blink and and
 you're you're in in New 

00:38:50.120 --> 00:38:51.611
York City New .
Or youOr you blink yet blink yet

00:38:51.612 --> 00:38:53.645
  again andagain and  
instead of being being in in  a 

00:38:53.650 --> 00:38:56.274
silver 
tube flyingtube flying 40,000  

00:38:56.275 --> 00:38:57.285
40,000 feetfeet,, you're you're 

00:38:57.286 --> 00:38:59.604
soaring on the  won the winging 
tips tips of the of the  

00:38:59.609 --> 00:39:00.828
plane and experience experience
 inging flight flight  

00:39:00.829 --> 00:39:02.647
like you've never  never seen 
beforeseen before..

00:39:02.648 --> 00:39:04.761
OrOr you're you're on on stage 
stage with with your 

00:39:04.767 --> 00:39:05.888
favorite your  band..
NotNot in in front like front 

00:39:05.889 --> 00:39:07.238
like  all ofall of you you are 
are  

00:39:07.239 --> 00:39:08.890
are, but rightbut  thereright 
there  involved in 

00:39:08.891 --> 00:39:10.499
ainvolved  way that that feels 
feels intimate intimate and and 

00:39:10.500 --> 00:39:12.632
connected toconnected to the the
 people people you you  idol

00:39:12.633 --> 00:39:15.453
idolizeidol  .
OrOr  blink againblink again..

00:39:15.652 --> 00:39:17.779
You're in aYou're in a classroom
 classroom taking taking a a 

00:39:17.781 --> 00:39:19.505
physics  class from from your 
your favorite favorite 

00:39:19.506 --> 00:39:21.116
professorrofessor at at  Cal 
Tech.Cal Tech.

00:39:21.117 --> 00:39:23.117
Or you'reOr you're inside inside
 a a game game in a in way a way

00:39:23.337 --> 00:39:25.142
before before..
Or perhaps perhaps you're you're

00:39:25.143 --> 00:39:26.444
 talking talking to to  
your best friend friend and your

00:39:26.445 --> 00:39:28.092
 and best your best 
friend is thousands thousands of

00:39:28.093 --> 00:39:29.822
 of  miles 
away..

00:39:29.823 --> 00:39:31.034
ButBut they're they're sitting 
sitting next next  to you 

00:39:31.035 --> 00:39:32.348
into you  your couch couch in a 
in a way way that that  

00:39:32.349 --> 00:39:34.967
feels intimate,, full full and 
and fully fully  

00:39:34.973 --> 00:39:37.778
present.
These willThese will all all 

00:39:37.779 --> 00:39:38.354
happen happen..
Imagine if youImagine if you 

00:39:38.355 --> 00:39:39.520
want want another another one 
one..

00:39:39.521 --> 00:39:41.521
ThinkThink about about that that
 old old silly silly movie movie

00:39:42.033 --> 00:39:43.430
fantastic voyage .voyage.
You'll beYou'll be in in that 

00:39:43.431 --> 00:39:45.977
that capsule capsule 
traveling  to the the  

00:39:45.979 --> 00:39:46.562
bloodstream 
frombloodstream  the brain brain

00:39:46.563 --> 00:39:48.306
  and quiteand quite  
possibly through to to the the 

00:39:48.307 --> 00:39:49.823
end end of of 
it  in the bowel the bowel..It's

00:39:49.824 --> 00:39:51.677
It's all all going going to be 
to be possible possible..

00:39:51.678 --> 00:39:53.267
MaybeMaybe you you don't want 
don't want tha that lastt last  

00:39:53.268 --> 00:39:56.503
experience,  but thinkbut think 
about about shop shop

00:39:56.509 --> 00:39:58.106
shopping     online..
ExceptExcept it'll it'll be be 

00:39:58.107 --> 00:40:00.233
social social and and you 
can try try the the clothes 

00:40:00.234 --> 00:40:03.578
clothes on on against against 
ann  avataravatar that that 

00:40:03.579 --> 00:40:04.899
matches matches your your 
body's  dimensions..

00:40:04.900 --> 00:40:06.650
AgainAgain,, all all  a lot 
closera lot closer..

00:40:06.651 --> 00:40:07.735
WalkingWalking alongside 
alongside  thethe surface 

00:40:07.736 --> 00:40:09.274
surface of of 
Mars  with awith a future future

00:40:09.275 --> 00:40:10.569
 astronaut astronaut 
except unexcept unlikelike  hehe

00:40:10.570 --> 00:40:12.719
 or or she she which which 
will  probably be be stuck stuck

00:40:12.808 --> 00:40:14.744
 there there for 
the  rest of of their their 

00:40:14.745 --> 00:40:15.693
lives lives,, all all you 
have you  to do do  is takeis 

00:40:15.694 --> 00:40:17.363
take  off theoff the H HMMDD  
HMD and     you're homeyou're 

00:40:17.364 --> 00:40:21.781
home..
SoSo th the holodecke holodeck 

00:40:21.782 --> 00:40:23.838
will will happen happen..We've
We've all all seen seen Star 

00:40:23.840 --> 00:40:24.440
Trek Star Trek..
ThatThat level level of of 

00:40:24.441 --> 00:40:25.473
presence presence is is going 
going 

00:40:25.474 --> 00:40:28.184
to happen..You'll
You'll be be  closest toclosest 

00:40:28.185 --> 00:40:30.285
to your your near near
nearest    and dear dearestest..

00:40:31.043 --> 00:40:32.669
MyMy two two daughters daughters
 live live in in  citiescities  

00:40:32.670 --> 00:40:33.551
away from me me..
I'm lookingI'm  forwardlooking 

00:40:33.552 --> 00:40:36.463
forward to to con con      
connecting with them them in a 

00:40:36.464 --> 00:40:37.674
in a much much 
moremore,, I don't know I don't 

00:40:37.675 --> 00:40:39.675
know,, close close way way 
that  makes me me feel feel like

00:40:40.046 --> 00:40:40.963
 like I'm I'm 
right  there..

00:40:40.964 --> 00:40:42.061
I'veI've already already 
experienced experienced that 

00:40:42.062 --> 00:40:42.841
that in in  
some VR  chat developmentchat 

00:40:42.842 --> 00:40:45.393
development  that's 
prettythat's  amazing..

00:40:45.407 --> 00:40:47.008
And at the coreAnd at the  of
core of all all this this is is 

00:40:47.009 --> 00:40:49.439
we built built the the  Unity
Unity engine engine to to 

00:40:49.446 --> 00:40:50.856
support 3-Dupport 3-D 
development development and and 

00:40:50.857 --> 00:40:52.267
quitequite naturally naturally 
to to support support 

00:40:52.268 --> 00:40:54.388
Daydream .
We've gotWe've got 5 million 

00:40:54.400 --> 00:40:55.093
developers 5 million developers,
, 

00:40:55.094 --> 00:40:56.514
all  of you you ready ready to 
to  jumpjump on on 

00:40:56.515 --> 00:40:58.816
board.
And allAnd all of of you you,, I

00:40:59.346 --> 00:41:00.122
 I hope hope you're you're 
dreaming  about all the all the 

00:41:00.123 --> 00:41:02.279
ideas ideas I I  
lay out andand many many,,  many

00:41:02.463 --> 00:41:04.884
 moremany more..
DreamDream them them,, .

00:41:04.901 --> 00:41:05.379
Build them.Build them.
LifeLife will will never never 

00:41:05.380 --> 00:41:07.089
be be  the samethe same..
ItIt will  will be onebe one 

00:41:07.090 --> 00:41:08.653
heck heck of of a a lot lot  
better.

00:41:08.654 --> 00:41:10.357
AndAnd  with thatwith that,,  
ClayClay,, you're you're back 

00:41:10.358 --> 00:41:12.298
back 
on stage stage..

00:41:12.299 --> 00:41:14.299
[Applause.]

00:41:15.496 --> 00:41:15.888
&gt;&gt; CLAY BAVOR:  Thank you so 
much&gt;&gt; CLAY BAVOR:  Thank you , 

00:41:15.889 --> 00:41:18.095
John John..
As As JohnJohn said said,, we're

00:41:18.096 --> 00:41:19.425
 we're just just deeply deeply 
alignedaligned on on this this 

00:41:19.426 --> 00:41:25.199
idea idea of of  democrat
democratizing VR VR the the 

00:41:25.200 --> 00:41:25.891
create create inging of of 
it  and consumption consumption 

00:41:25.892 --> 00:41:27.611
of of it it so so it's it's 
been a a natural natural 

00:41:27.612 --> 00:41:28.545
partnership partnership from 
from  

00:41:28.546 --> 00:41:30.058
the beginningbeginning..
I want toI want to thank thank  

00:41:30.059 --> 00:41:30.780
John and all theJohn and all the

00:41:30.781 --> 00:41:33.298
folks at  UnityUnity who have 
been so  

00:41:33.301 --> 00:41:34.827
supportive of of what we're what
 we're  doing.doing.

00:41:34.828 --> 00:41:35.940
Now,Now, John John talked talked
  about the 

00:41:35.941 --> 00:41:37.748
future.
And that's where I want to end, 

00:41:37.749 --> 00:41:40.070
as well.
And one of the Waze of figuring 

00:41:40.071 --> 00:41:42.805
out what's going to happen in 
the future is to the look back 

00:41:42.806 --> 00:41:47.466
on the recent past and recent 
progress.

00:41:47.481 --> 00:41:50.997
So he want to look back to last 
year's Google IOhave and a 

00:41:51.000 --> 00:41:52.235
couple things we talked about 
there.

00:41:52.236 --> 00:41:54.449
The first is something called 
expeditions.

00:41:54.470 --> 00:41:55.760
Expeditions, if you remember, is

00:41:55.761 --> 00:41:57.172
this tool for teachers that make

00:41:57.173 --> 00:42:00.418
it possible for them to take 
classes on field trips to 

00:42:00.419 --> 00:42:04.246
anywhere.
From coral reefs to Machu Picchu

00:42:05.691 --> 00:42:08.592
And for the last school year, 
expeditions has been on the road

00:42:12.046 --> 00:42:16.480
And in just this school year, 
we've taken over 1 million 

00:42:16.482 --> 00:42:18.482
students on expeditions.
[CHEERS AND APPLAUSE]

00:42:24.633 --> 00:42:27.375
The other thing we announced 
last year was something we 

00:42:27.376 --> 00:42:31.402
called jump.
Jump is a camera system and 

00:42:31.403 --> 00:42:33.843
processing software that works 
in the cloud that makes the 

00:42:33.844 --> 00:42:38.672
creation of VR video seamless 
and very high quality.

00:42:38.692 --> 00:42:40.090
We built it because we think the

00:42:40.091 --> 00:42:43.231
world is awesome but we didn't 
see a great way of capturing it 

00:42:43.232 --> 00:42:47.666
immerseively in VR.
And we partnered with Go Pro to 

00:42:47.667 --> 00:42:51.310
build what's called the can  
Odyssey.

00:42:51.329 --> 00:42:54.229
We happen to have one here.
If you're tuneing in from VR 

00:42:54.230 --> 00:42:57.870
later, great to see you.
If everyone could wave and say 

00:42:57.871 --> 00:43:01.297
hi to our.
Great, thanks, thanks for being 

00:43:01.298 --> 00:43:04.034
here.
So the Odyssey is rolling out to

00:43:06.366 --> 00:43:10.293
And the likes of discovery, 
paramount, the New York Times.

00:43:10.494 --> 00:43:13.636
And people are saying really 
nice thing things about it.

00:43:13.654 --> 00:43:15.169
The quality.
How fast it is.

00:43:15.170 --> 00:43:17.884
How seamless it is.
But I think the best summary of 

00:43:17.885 --> 00:43:19.605
it was, we were at the New York 
Times and one of the New York 

00:43:19.606 --> 00:43:23.140
Times creative leads, after 
seeing it all came together, 

00:43:23.141 --> 00:43:26.883
just turned to one of the tech 
leads of Jump and said "can I 

00:43:26.884 --> 00:43:30.415
give you a hug"?
So, we took that hug, thank you 

00:43:30.416 --> 00:43:34.352
very much.
So Jump from the beginning was 

00:43:34.353 --> 00:43:36.478
built as a platform, meaning the

00:43:36.479 --> 00:43:39.200
software, which we call the Jump

00:43:39.202 --> 00:43:42.248
Assembler, the stuff that does 
the magic of turning 16 camera 

00:43:42.249 --> 00:43:45.060
views into Omni directional 
stereo 

00:43:45.061 --> 00:43:47.587
stauroscopic video.
We built it to be flexible to 

00:43:47.588 --> 00:43:49.522
support multiple camera 
architectures.

00:43:49.523 --> 00:43:51.636
There's two new ones we'd like 
to introduce today.

00:43:51.656 --> 00:43:57.074
The first is from ye technology.
Yi is a Chinese company with a 

00:43:57.075 --> 00:43:59.313
strong presence in Asia.
They're going to be using their 

00:43:59.314 --> 00:44:02.841
4 K action cam to build a Jump-
Jump-ready camera that will be 

00:44:02.842 --> 00:44:05.372
available later this year.
We've got a lot of interest from

00:44:07.310 --> 00:44:10.820
And that's from Hollywood.
Hollywood is asking us for a 

00:44:10.821 --> 00:44:14.870
cinema-grade Jump camera.
We're going to build them one 

00:44:14.871 --> 00:44:18.093
with Imax.
[CHEERS AND APPLAUSE]

00:44:18.116 --> 00:44:23.763
I'm excited about that.
So Imax, of course, is known 

00:44:23.764 --> 00:44:27.498
around the world for incredibly 
immerseive capture and audio and

00:44:29.202 --> 00:44:31.952
their decades of experience in 
camera design, optics, sensors 

00:44:31.953 --> 00:44:35.905
and more to Jump and we're just 
incredibly excited about what 

00:44:35.906 --> 00:44:37.341
we're going to be able to do 
with them.

00:44:37.342 --> 00:44:39.042
So, looking ahead, it's exciting

00:44:39.043 --> 00:44:41.981
to think about just where we'll 
be in the near future with 

00:44:41.982 --> 00:44:43.902
Daydream.
By the end of this year, there 

00:44:43.903 --> 00:44:46.933
will be multiple Daydream-ready 
phones out on the market.

00:44:46.956 --> 00:44:49.369
And I hope your next phone is 
one of them.

00:44:49.388 --> 00:44:52.401
The first Daydream-ready 
headsets and controllers will be

00:44:54.018 --> 00:44:56.135
design.
And by the way, it's not just 

00:44:56.136 --> 00:44:58.764
going to be partners building 
from the reference design.

00:44:58.779 --> 00:45:01.807
We, Google, are also going to 
build a controller and a headset

00:45:03.935 --> 00:45:05.935
[CHEERS AND APPLAUSE]

00:45:09.977 --> 00:45:13.219
And beyond that, the technology 
just gets better and better and 

00:45:13.220 --> 00:45:15.041
better.
VR is just going to get better 

00:45:15.042 --> 00:45:17.278
and better and better.
And one of the Waze that we with

00:45:21.425 --> 00:45:23.637
project Tang oh.

00:45:27.360 --> 00:45:29.072
Now Tango and Google were in the

00:45:29.073 --> 00:45:31.199
same building.
I'll let you extrapolate from 

00:45:31.200 --> 00:45:36.749
there but we're pretty excited 
about what's ahead.

00:45:36.767 --> 00:45:40.704
So over the next two days there 
are 17 sessions covering all of 

00:45:40.705 --> 00:45:42.420
this in a lot more detail, about

00:45:42.421 --> 00:45:45.852
how to monetize and distribute 
the apps, designing with the 

00:45:45.853 --> 00:45:48.181
controller, everything you need 
to build for Daydream and also 

00:45:48.182 --> 00:45:51.715
for Tango.
And there's some great sessions 

00:45:51.716 --> 00:45:53.761
on all of this.
So we really hope to see you 

00:45:53.762 --> 00:45:55.261
there.
Thank you so much for joining us

00:45:55.795 --> 00:45:57.713
I really appreciate it.
Thank you.

00:45:57.714 --> 00:45:59.714
[Applause.]

00:46:03.947 --> 00:46:06.712
[Music.] 

01:07:31.840 --> 01:07:33.840
 [Music.]

01:08:26.532 --> 01:08:29.852
&gt;&gt; Hi, everyone.
How's it going?

01:08:29.876 --> 01:08:33.891
Hope you are having a great O/O 
O/O so for.

01:08:33.921 --> 01:08:37.838
Anyone go to the Kigo concert
last night?

01:08:37.857 --> 01:08:39.857
[Music.]

01:09:15.201 --> 01:09:19.041
&gt;&gt; Good morning!.
Hello!

01:09:19.064 --> 01:09:23.306
[Applause.]
Welcome, everybody, to our talk

01:09:23.496 --> 01:09:26.919
today on what's new in Android
developer tools.

01:09:26.933 --> 01:09:29.855
It is awesome to see so many
developers here from around the

01:09:29.963 --> 01:09:32.372
world.
And in a concert venue.

01:09:32.391 --> 01:09:36.514
I just want you guys to know: 
This is pretty cool for us.

01:09:36.545 --> 01:09:40.371
I'm Stef Cuthbertson.
I'm here today with a wonderful

01:09:41.055 --> 01:09:43.274
Tor Norbye and wonderful Jamal
Eason.

01:09:43.286 --> 01:09:46.403
We will give you an insiders
tour of Android studio.

01:09:46.430 --> 01:09:49.246
And for those of you who are
already real insiders and notice

01:09:49.562 --> 01:09:53.403
that Zav is not on the stage
this year, I'm just filling in

01:09:53.594 --> 01:09:56.010
for him.
He's on a beach in Hawaii.

01:09:56.024 --> 01:09:58.955
So hello, Zav.
When we first started working on

01:09:59.165 --> 01:10:03.195
Android studio, you know we
wanted a purpose-built IDE,

01:10:03.196 --> 01:10:06.306
which was tuned for our
languages.

01:10:06.326 --> 01:10:11.264
That's why we picked IntelliJ, a
native to the Android platform.

01:10:11.464 --> 01:10:14.731
Now the Android studio has built
tremendous momentum in a short

01:10:14.900 --> 01:10:17.025
period of time.
One.  Things we announced

01:10:17.026 --> 01:10:24.903
yesterday is that now 92 percent
of the top 125 apps and games

01:10:27.436 --> 01:10:29.837
Android studio.
Since we announced here here at

01:10:30.034 --> 01:10:32.676
IO three years ago.
You may remember it was Tor who

01:10:32.874 --> 01:10:38.430
did the demo, we've released 131
times across our preview, beta

01:10:38.734 --> 01:10:42.054
and stable releases.
And what that reflects is

01:10:42.055 --> 01:10:45.794
actually a big part of what's
driving our success.

01:10:45.806 --> 01:10:50.437
We have an incredibly engaged
developer community.

01:10:50.455 --> 01:10:52.870
Trying all of your o early
builds and giving us wonderful

01:10:53.274 --> 01:10:55.196
feedback.
That is what is lessing the team

01:10:55.197 --> 01:10:57.712
focus and helping us go very
quickly.

01:10:57.736 --> 01:11:00.433
We've been thinking a lot the
past year about what else we

01:11:00.434 --> 01:11:03.575
could do to help accelerate
productivity and make your lives

01:11:03.884 --> 01:11:09.930
better.
So for those of you in the

01:11:09.931 --> 01:11:13.263
audience who don't know Android
studio quite as well, I'm going

01:11:13.266 --> 01:11:16.501
to give you a whirlwind tour of
2016 and what we've done so far

01:11:16.704 --> 01:11:19.347
just in about 60 seconds.
So I'll bring everybody up to

01:11:19.439 --> 01:11:22.477
the same level and then we'll go
on and talk about 2.2 and the

01:11:22.871 --> 01:11:26.107
road ahead.
So, already this year, we

01:11:26.108 --> 01:11:32.345
launched 2.0.
That fok you used on speed with

01:11:32.536 --> 01:11:34.900
instability run and the emulate,
.

01:11:34.901 --> 01:11:40.884
We also launched wonderful
emulator, the debugger preview.

01:11:42.199 --> 01:11:46.841
Testing and much more.
That shortly followed 2.1 which

01:11:47.045 --> 01:11:50.186
we built side by side with N.
And that brings you support

01:11:50.187 --> 01:11:52.712
support for all N's features and
APIs.

01:11:52.752 --> 01:11:55.152
It blings you emulator so you
can test N.

01:11:55.188 --> 01:11:59.394
The new jack compiler so you can
try out Java 8 support and in

01:12:00.107 --> 01:12:03.746
par you lar in 2.1 we also
accelerated instant run and the

01:12:03.954 --> 01:12:06.694
way we did that by moving our
deck step to happen in process

01:12:06.996 --> 01:12:09.712
which gave us wonderful speed
advances.

01:12:09.745 --> 01:12:16.090
Now, all of this brings us now
to 2.2.

01:12:16.124 --> 01:12:19.858
Which focuses on speed, smarts
and Android platform support.

01:12:20.142 --> 01:12:23.295
Now, one of the things that's
wonderful for us about I/O is

01:12:23.574 --> 01:12:26.530
this is a developer audience.
So what we're going to do is

01:12:26.531 --> 01:12:30.353
spend the first 25 minutes of
today's talk giving you a live

01:12:30.856 --> 01:12:35.000
demo of nearly every single
feature in the 2.2 preview which

01:12:35.184 --> 01:12:37.184
you can also use.
[CHEERS AND APPLAUSE]

01:12:42.369 --> 01:12:44.997
Now, just a reminder.
This is a preview build.

01:12:45.014 --> 01:12:48.149
So expect preview quality.
And then we'll do the normal

01:12:48.150 --> 01:12:50.978
thing we always do over the next
several weeks we'll be

01:12:50.979 --> 01:12:54.517
stabilizing this as we do as we
move through beta and stable.

01:12:54.718 --> 01:12:58.473
After that, Jamal and I will
then take it back and we'll walk

01:12:58.475 --> 01:13:04.242
you through design, develop
build and test to give you a

01:13:04.243 --> 01:13:06.967
nice structured overview with
screen shots and also take you

01:13:07.077 --> 01:13:09.588
behind the scenes to talk about
how and why features were built.

01:13:09.885 --> 01:13:12.937
So with that, to take you on a
lap around 2.2, would you guys

01:13:13.138 --> 01:13:17.762
please give a very warm welcome
to Tor Norbye?

01:13:17.779 --> 01:13:19.779
[CHEERS AND APPLAUSE]

01:13:23.310 --> 01:13:26.026
&gt;&gt; TOR NORBYE:  All right.
Can you see the screen?

01:13:26.046 --> 01:13:28.447
Demo?
All right.

01:13:28.470 --> 01:13:33.406
Can we get the demo machine?
Thank you.

01:13:33.418 --> 01:13:35.640
All right.
So I'm going to start with

01:13:35.641 --> 01:13:38.249
something very small and simple,
but I think you'll like it.

01:13:38.278 --> 01:13:42.091
So we released a lot of SDK come
components yesterday.

01:13:42.105 --> 01:13:46.246
Once you installed 2.2 and you
go to install them, notice how

01:13:46.343 --> 01:13:50.775
we have a background button now.
[CHEERS AND APPLAUSE]

01:13:50.796 --> 01:13:53.731
So you could keep coding while
you're installing the latest

01:13:53.732 --> 01:13:56.152
goodies.
So we spent the last year

01:13:56.153 --> 01:13:58.264
focusing on making builds faster
faster.

01:13:58.293 --> 01:14:00.495
We know that's a top concern for
all of you.

01:14:00.541 --> 01:14:02.925
And so I'm going to show you
where we are with instant run

01:14:03.124 --> 01:14:06.682
right now.
So this is the I/O app running

01:14:07.092 --> 01:14:09.092
on the right.
And I can go ahead and comment

01:14:09.098 --> 01:14:12.268
out some code here and run it.
And when I make that change, you

01:14:12.462 --> 01:14:16.087
can see that within about a
second, it reflects that change

01:14:16.391 --> 01:14:18.528
on the device.
That would have taken 15 seconds

01:14:19.118 --> 01:14:21.649
without instant run.
I can also make some

01:14:21.650 --> 01:14:23.876
incompatible changes, for
example, extracting this into a

01:14:24.291 --> 01:14:28.923
method.
And making that change is

01:14:28.924 --> 01:14:34.890
another second or two to deploy.
So after the demo, Stef is going

01:14:34.905 --> 01:14:39.980
to talk more about what it is
we're doing next with instant

01:14:40.155 --> 01:14:42.901
run with 2 and 3.
One of the things we had to

01:14:42.902 --> 01:14:45.139
figure out with instant run is
figure out what's going on

01:14:45.140 --> 01:14:47.967
inside the APK files.
So to do that, we built this new

01:14:48.185 --> 01:14:52.340
feature the APKanalyzeer.
So I can open up any APK, or the

01:14:52.542 --> 01:14:56.076
one in my project, and now I can
drill into what's going on in

01:14:56.089 --> 01:14:58.094
the file.
So I can see, for example,

01:14:58.095 --> 01:15:01.772
what's inside the assets folder
or the rest folder or in this

01:15:01.775 --> 01:15:07.137
case instant run, the way we're
repackageing application into

01:15:07.234 --> 01:15:09.153
slices.
So let me drag in a real

01:15:09.154 --> 01:15:13.105
production app, the Chrome APK.
The purpose of this tool,

01:15:13.106 --> 01:15:15.227
there's a couple things.
First one is to be able to look

01:15:15.528 --> 01:15:17.871
at the download side.
So in some markets it's very

01:15:17.872 --> 01:15:20.306
important that you make the
download small and install size

01:15:20.514 --> 01:15:22.514
small.
So this lets you look at what is

01:15:22.967 --> 01:15:25.684
actually in your app and focus
on whether you can get rid of it

01:15:25.798 --> 01:15:27.414
it.
So I can drill into the assets

01:15:27.415 --> 01:15:31.074
folder and look at the files.
I can look at the, let's say lay

01:15:31.261 --> 01:15:35.103
layout folder.
We decompiled the binary XML 

01:15:35.400 --> 01:15:37.450
XML into source.
Although we can do a better job

01:15:38.150 --> 01:15:41.591
with resource references.
So then we will map those into

01:15:41.996 --> 01:15:44.009
resource names.
You can also look at the value

01:15:44.218 --> 01:15:47.150
table which has been sort of an
opaque file to look at before.

01:15:47.338 --> 01:15:50.399
Now I will have a viewer.
So you can go ahead and see just

01:15:50.687 --> 01:15:53.231
what's inside.
And last but not least --

01:15:53.252 --> 01:15:55.954
[CHEERS AND APPLAUSE]
Yes.

01:15:55.988 --> 01:15:59.200
And last but not least this lets
you look at the decks files.

01:15:59.225 --> 01:16:03.041
So you're probably all aware of
the 64 K method limit.

01:16:03.067 --> 01:16:07.203
Et's not actually method limit.
It's method plus reference limit

01:16:07.404 --> 01:16:09.404
limit.
Now you can drill into it, what

01:16:09.734 --> 01:16:14.591
is it you're declaring and what
it is it you're referencing so

01:16:14.696 --> 01:16:18.219
you can get below that 64 K or
turn on multidecks.

01:16:18.233 --> 01:16:20.648
[CHEERS AND APPLAUSE]
So if you ever looked at a

01:16:20.649 --> 01:16:23.498
manifest file in the build
outputs, there's a lot of stuff

01:16:23.797 --> 01:16:27.024
in the manifest file that you
did not right, write?

01:16:27.045 --> 01:16:30.270
Where did it come from?
We have a new Ed to are in 2.2

01:16:30.275 --> 01:16:33.123
the manifest editor.
This is the XML tab.

01:16:33.160 --> 01:16:35.436
You can see there's now a merged
manifest tab.

01:16:35.477 --> 01:16:38.477
And when I click on that, you
can see that we now give you a

01:16:38.796 --> 01:16:42.122
full merge, updated live
whenever you make edits.

01:16:42.151 --> 01:16:44.467
There's a legend on the right
which tells you where stuff is

01:16:44.667 --> 01:16:46.667
coming from.
So, for example, I could see now

01:16:47.797 --> 01:16:49.797
the permission --
[CHEERS AND APPLAUSE]

01:16:52.935 --> 01:16:56.198
-- is coming from play services.
I can go in here and navigate to

01:16:56.900 --> 01:16:59.529
the line that is the source for
the merge.

01:16:59.561 --> 01:17:02.676
So hopefully that will help de
de demystify what's going on

01:17:02.677 --> 01:17:07.830
with the manifest process.
Speaking of gradele.

01:17:07.845 --> 01:17:12.079
We don't want you to have to
learn how to build if files in

01:17:12.277 --> 01:17:16.125
order to complete your project.
We're in the rewrite middle of

01:17:16.134 --> 01:17:18.559
the rewrite process.
All we've done is dependency,

01:17:18.870 --> 01:17:21.180
though arguably it's probably
the hardest part.

01:17:21.212 --> 01:17:25.649
So my favorite part if the new P
PSD is the messages Payne pane.

01:17:25.838 --> 01:17:28.373
So what this shows me is
suggestions the ID is making.

01:17:28.468 --> 01:17:32.122
You can see here my project
happens to be using Jcenter for

01:17:32.517 --> 01:17:34.446
dependencyies.
They're saying hey, there's a

01:17:34.447 --> 01:17:36.654
newer version of this dependency
available.

01:17:36.678 --> 01:17:39.501
I click on this update link and
using the latest.

01:17:39.521 --> 01:17:43.138
I can click update all to take
all suggestions.

01:17:43.154 --> 01:17:47.291
This is not just looking at
local repositories for you.

01:17:47.306 --> 01:17:50.228
It goes out and searches remote,
as well.

01:17:50.242 --> 01:17:53.176
If I switch to the den dencyies
viewy can drill into the

01:17:53.177 --> 01:17:56.822
dependencyies either by module
or I can look at the overall

01:17:56.823 --> 01:17:59.745
dependencies for all nodules
across the project and I can

01:17:59.746 --> 01:18:03.183
drill in and see, for example,
the transitive dependencies to

01:18:03.483 --> 01:18:06.525
see basically how I'm reaching
certain dependencies in my

01:18:06.526 --> 01:18:08.935
project.
I can also go and add

01:18:08.936 --> 01:18:11.675
dependencies.
So we have a nice UI now where I

01:18:11.876 --> 01:18:14.419
could go and search.
Again, just like with the up

01:18:14.420 --> 01:18:17.540
updates, with the update
suggestions, this looks at

01:18:17.541 --> 01:18:20.480
remote repositories.
It also looks at local

01:18:20.481 --> 01:18:22.204
repositories.
It shows all the available

01:18:22.205 --> 01:18:24.634
versions.
And it even helps me tweak the

01:18:25.216 --> 01:18:28.353
scope string in the dependency
list.

01:18:28.389 --> 01:18:31.208
So you can turn this on today in
the experimental settings if you

01:18:31.505 --> 01:18:33.935
want to play with it and we'll
try to finish that in the next

01:18:34.150 --> 01:18:36.150
couple of releases.
[Applause.]

01:18:40.899 --> 01:18:44.143
Next let's talk about C++ so
last year we showed you that we

01:18:44.147 --> 01:18:45.978
have really great editing
supports.

01:18:45.979 --> 01:18:50.732
This is the Cline, C++
functionality from Jeff brain

01:18:50.936 --> 01:18:52.357
stef stead.
And we integrated.

01:18:52.358 --> 01:18:56.165
However it required the
experimental plug-in.

01:18:56.184 --> 01:18:59.823
The big news for 2.2 is that we
now added support for external

01:19:00.028 --> 01:19:03.353
build systems.
So you can actually use Cmick to

01:19:03.464 --> 01:19:05.973
build your native code.
You just declare it like so with

01:19:05.975 --> 01:19:10.213
a stable plug-in.
And now you can build C++.

01:19:10.236 --> 01:19:13.273
And for C++, we will have the
wizard in the next couple of

01:19:13.274 --> 01:19:17.023
builds, so you can very easily
go in and add C++ support to

01:19:17.024 --> 01:19:19.355
your project.
And when you do that, you end up

01:19:19.548 --> 01:19:22.498
with a sample project that looks
exactly like this one so you

01:19:22.499 --> 01:19:27.235
have the main activity that
loads the native library and

01:19:27.236 --> 01:19:29.952
then you have a sample hello
world native library string.

01:19:29.981 --> 01:19:32.823
So let's set this up.
First of all set the breakpoint

01:19:33.125 --> 01:19:36.666
here in the C++ code.
This main activity is just

01:19:36.667 --> 01:19:39.292
showing the default layout that
has a string in the middle.

01:19:39.315 --> 01:19:43.245
So let me go back and change
that string to show the value

01:19:43.534 --> 01:19:47.182
from C++.
So we'll do text view.

01:19:47.206 --> 01:19:52.861
Text view = find view by ID.
Then we'll hookup that ID.

01:19:52.887 --> 01:19:56.312
We go to cast it.
And then we will call set text

01:19:56.514 --> 01:19:59.846
on that text with the call from
C++.

01:19:59.870 --> 01:20:02.074
Now let's also set a breakpoint
here.

01:20:02.094 --> 01:20:09.042
So now I'm going to launch the
debugger, this front, which

01:20:09.043 --> 01:20:13.281
builds everything, packages it.
And in a second, this app should

01:20:13.284 --> 01:20:18.641
be running on the emulateor.
There it is.

01:20:18.655 --> 01:20:23.088
We hit the break breakpoint.
We can be looking around at the

01:20:23.587 --> 01:20:26.805
manifest state.
Activity state.

01:20:26.825 --> 01:20:30.782
If I resume the debugger now.
You can see now we're in C++ and

01:20:31.064 --> 01:20:33.064
I can drill around.
[Applause.]

01:20:36.931 --> 01:20:39.760
So that's the hybrid debugger
and the Cmick support.

01:20:39.792 --> 01:20:42.515
The last thing I'll show you in
the build system area is

01:20:42.516 --> 01:20:45.266
something on the command line.
So let's say that you've gotten

01:20:45.853 --> 01:20:51.029
the project from a co-worker or
maybe you did a Git pole poll.

01:20:51.307 --> 01:20:54.338
And somebody changed something
on your project.

01:20:54.378 --> 01:20:58.384
And then you build and you hit a
message like this one.

01:20:58.400 --> 01:21:03.045
You don't have build tools 0221
Twhat you do is open STK manager

01:21:03.268 --> 01:21:06.495
and install it.
Well, in 2.2 alpha1 we now have

01:21:06.614 --> 01:21:10.012
an experimental flag you can set
set.

01:21:10.047 --> 01:21:15.074
And when I run the build, if
I've already agreed to this

01:21:15.075 --> 01:21:17.806
license, gradele will just go
and download it for me on the

01:21:18.021 --> 01:21:20.021
fly as you can see right here.
[CHEERS AND APPLAUSE]

01:21:24.664 --> 01:21:27.595
So that should also make
configureing continuing

01:21:27.596 --> 01:21:29.715
integration servers a lot easier
easier.

01:21:29.737 --> 01:21:32.181
Let's go to the extreme of
command line to visual editors.

01:21:32.357 --> 01:21:35.216
So let's take a look at our new
layout editor.

01:21:35.238 --> 01:21:37.860
Actually, I shouldn't call it
layout editor because it does

01:21:38.141 --> 01:21:42.597
more than layouts.
So first of all, I can open up a

01:21:43.017 --> 01:21:45.940
menu file.
Here's a menu.

01:21:45.967 --> 01:21:47.800
I can drag and drop design menus
now.

01:21:47.801 --> 01:21:51.698
We can also open up --
[Applause.]

01:21:51.733 --> 01:21:54.639
Preference files and I can drag
and drop preference files.

01:21:54.668 --> 01:21:58.172
Obviously there's component
spectre.

01:21:58.195 --> 01:22:01.016
[Applause.]
&gt;&gt; Did a really nice job on this

01:22:02.717 --> 01:22:03.945
this.
&gt;&gt; TOR NORBYE:  Of course lay

01:22:03.946 --> 01:22:06.384
layouts are a big part of this.
You can see component inspector

01:22:06.789 --> 01:22:08.212
on the right.
You can see the important

01:22:08.213 --> 01:22:10.843
attributes for the selected
component text view in this case

01:22:11.043 --> 01:22:12.663
case.
So, for example, for text view,

01:22:12.664 --> 01:22:15.703
we show you the text appearance.
Notice how there's some gray

01:22:15.704 --> 01:22:17.905
text here in the component
inspector?

01:22:17.926 --> 01:22:19.946
Even though I haven't set the
text appearance, we're showing

01:22:20.146 --> 01:22:22.797
you what it actually is going to
be at run time so I can see the

01:22:22.994 --> 01:22:25.307
font will be 14 SPes, for
example,.

01:22:25.322 --> 01:22:27.331
If I switch to something else,
it will compute what that should

01:22:27.342 --> 01:22:30.971
be.
Now, we only have a subset of

01:22:30.991 --> 01:22:34.814
the properties here to make it
simple to find but if you need

01:22:35.122 --> 01:22:37.446
anything else, the full set of
properties is just a full click

01:22:37.844 --> 01:22:39.954
away up here.
So on the design surface, we

01:22:39.955 --> 01:22:43.213
have blueprint mode.
So blueprint mode is basically

01:22:44.205 --> 01:22:47.356
showing the structure.
It's like an extra of what your

01:22:47.558 --> 01:22:50.182
app is doing.
I can have blueprint mode and

01:22:50.478 --> 01:22:53.950
design mode on side by side.
One new thing we have which you

01:22:53.962 --> 01:22:56.298
asked for is this is the scroll
view and I can scroll the design

01:22:56.577 --> 01:22:58.577
surface directly.
[CHEERS AND APPLAUSE]

01:23:03.451 --> 01:23:05.998
Now, blueprint mode is
particularly useful for the new

01:23:06.187 --> 01:23:08.105
constraint layout.
So let's take a look at

01:23:08.106 --> 01:23:10.758
constraint layout.
So first of all, I'm going turn

01:23:11.060 --> 01:23:14.001
off auto connect mode.
So let's drag in some components

01:23:14.294 --> 01:23:16.424
components.
So put a text view here.

01:23:16.444 --> 01:23:24.501
We'll put an edit text.
Another text view.

01:23:24.530 --> 01:23:26.822
And another password field,
maybe.

01:23:26.846 --> 01:23:32.390
And then we'll add some buttons
on the bottom right.

01:23:32.426 --> 01:23:35.249
So you can notice I'm being kind
of sloppy because after the fact

01:23:35.341 --> 01:23:37.859
fact, I can go in and I can make
a selection.

01:23:37.875 --> 01:23:40.686
I can right click and say hey, I
want to align these things on

01:23:41.008 --> 01:23:42.813
the bottom.
I want to align all these things

01:23:42.814 --> 01:23:46.064
on the left.
Maybe I also want to pack them

01:23:46.261 --> 01:23:48.261
vertically

01:23:49.698 --> 01:23:51.705
.
So here I have my design.

01:23:51.740 --> 01:23:55.464
Now let's see what happens if I
go to landscape mode.

01:23:55.515 --> 01:23:58.119
That's not good, right?
So I have buttons off screen.

01:23:58.311 --> 01:24:01.969
So let's try to fix that.
So there's this little light

01:24:01.970 --> 01:24:06.733
bulb icon for infer constraints.
Notice what happens when I click

01:24:06.828 --> 01:24:09.043
it.
I now have these constraints

01:24:09.044 --> 01:24:11.759
where it's tried to guess what
we probably mean here.

01:24:11.790 --> 01:24:15.221
And when I try to resize this
now, you can see the buttons are

01:24:15.505 --> 01:24:17.505
moving correctly.
[Applause.]

01:24:22.556 --> 01:24:25.290
So, normally you're actually in
auto connect mode.

01:24:25.315 --> 01:24:28.446
So if I want to drag in a button
here, you can see that the

01:24:28.447 --> 01:24:30.666
second I drop it, it actually
goes and adds these constraints

01:24:31.067 --> 01:24:32.810
for me.
And if I don't like them, of

01:24:32.811 --> 01:24:34.830
course I can delete the
constraint by just clicking on

01:24:35.041 --> 01:24:36.744
them.
I can also drag new constraints.

01:24:36.745 --> 01:24:39.494
And we sort of show you preview
of what it's going to do when

01:24:39.684 --> 01:24:41.923
you commit to it.
And the constraints can also

01:24:41.924 --> 01:24:44.260
have strength.
So as I'm dragging, you could

01:24:44.454 --> 01:24:47.872
see it auto snaps to a quarter
or specific percentage.

01:24:47.894 --> 01:24:51.634
So someone asked yesterday if
this also works from XML editing

01:24:51.924 --> 01:24:54.964
if that's what you prefer.
Yes it does.

01:24:55.003 --> 01:24:57.125
Here we are in XML.
I can continue to play with the

01:24:57.305 --> 01:25:00.758
constraints over here.
And you can see the XML Eddied

01:25:01.276 --> 01:25:04.994
editing works very well.
[Applause.]

01:25:05.015 --> 01:25:07.015
Thank you.
So this is a very powerful

01:25:09.356 --> 01:25:14.620
constraint solveer.
And what that lets you do is

01:25:14.621 --> 01:25:17.858
flatten your layout hierarchies
and that's very, very, very good

01:25:18.059 --> 01:25:21.074
for performance.
So we've added a feature to help

01:25:21.493 --> 01:25:23.614
jump start that.
So let me open this other layout

01:25:25.336 --> 01:25:26.973
layout.
This one.

01:25:26.974 --> 01:25:30.278
Let me switch to blueprint mode
so you could sort of see what's

01:25:30.280 --> 01:25:32.423
going on.
So here's a layout that is

01:25:32.424 --> 01:25:36.060
actually a set of nested linear
layouts.

01:25:36.088 --> 01:25:40.422
And if I now go and say "convert
this linear layout to constraint

01:25:40.824 --> 01:25:43.446
layout" it offers to flatten the
whole thing.

01:25:43.469 --> 01:25:47.432
And as you can see, visually it
looks the same now except we

01:25:47.433 --> 01:25:49.433
have constraints.
On the left you can see a single

01:25:49.639 --> 01:25:51.639
flat list.
[Applause.]

01:25:58.307 --> 01:26:03.385
Let's go look at editing.
So in Ted iting area we'veedded

01:26:04.074 --> 01:26:05.617
ed
 we've added a couple of

01:26:05.618 --> 01:26:08.934
features.
First of all there's the

01:26:08.935 --> 01:26:11.874
Firebase integration.
If you're trying to accomplish

01:26:12.185 --> 01:26:15.107
something with Firebase, crash
reporting, open the assistant

01:26:15.415 --> 01:26:17.415
window.
Pick the task you want to do.

01:26:17.619 --> 01:26:19.283
For example, crash reporting.
You drill into this.

01:26:19.284 --> 01:26:22.204
You can see you get this
step-by-step set of instructions

01:26:22.404 --> 01:26:24.405
that sits next to your stores
editor.

01:26:24.420 --> 01:26:27.153
If you, for example, see that
you want to perform these lines,

01:26:27.246 --> 01:26:30.374
you can just drag it into your
source code to make that edit

01:26:30.575 --> 01:26:32.575
for example.

01:26:34.211 --> 01:26:37.840
If you are trying to figure out
how to use an API.

01:26:37.853 --> 01:26:40.681
Let's say you heard you should
use the job scheduler.

01:26:40.719 --> 01:26:43.525
Yes, you should use the job
scheduler, you could right click

01:26:43.716 --> 01:26:46.653
on it and say find me some
sample code for this.

01:26:46.668 --> 01:26:48.668
[CHEERS AND APPLAUSE]

01:26:52.999 --> 01:26:55.764
So as you can see it basically
goes to the server and finds

01:26:55.765 --> 01:26:58.084
recommended samples so that you
can then drill into and right

01:26:58.197 --> 01:27:00.527
click and say open this in a
browseer and let me learn more

01:27:00.716 --> 01:27:08.197
about this.
2.2 is based on IntelliJ 16.1 so

01:27:08.293 --> 01:27:10.511
we have a number of new features
for that, as well.

01:27:10.537 --> 01:27:16.680
So one thing we got is support
for editing bidirectional

01:27:16.681 --> 01:27:19.514
strings.
So this is something our

01:27:19.515 --> 01:27:21.529
international audience has been
asking for for a while.

01:27:21.546 --> 01:27:24.275
So here we have some Arabic text
texts and you can see the source

01:27:24.675 --> 01:27:26.699
editor is now more than happy to
handle this correctly.

01:27:26.713 --> 01:27:28.828
I know this has been a big pain
point.

01:27:28.845 --> 01:27:31.951
So finally we've got it, thank
you IntelliJ.

01:27:31.966 --> 01:27:35.518
So IntelliJ 16 also comes with a
bunch of new inspection this is

01:27:35.917 --> 01:27:37.917
the editors.
And on top of that, we've added

01:27:38.947 --> 01:27:42.779
to a number of new inspections
that are Android-specific.

01:27:42.795 --> 01:27:48.352
Let's take a look at those.
So first first of all, I hope

01:27:48.635 --> 01:27:50.799
everybody knows that it's really
really, really bad practice to

01:27:51.086 --> 01:27:53.747
solve the problem of passing
data from activities by makeing

01:27:53.925 --> 01:27:56.048
your field static.
That's a no-no.

01:27:56.064 --> 01:27:57.700
And now lint will flag it for
you.

01:27:57.701 --> 01:28:02.454
Not just because it's a leak but
it makes instant run very happy

01:28:02.635 --> 01:28:04.870
when you do this.
This is also not as simple as

01:28:05.155 --> 01:28:07.696
just this case.
For example, we have if I make

01:28:07.907 --> 01:28:13.562
these other fields here static,
app data 1 is no problem but app

01:28:13.856 --> 01:28:17.199
data 2 turns out that one has
instant state that is a context

01:28:17.479 --> 01:28:19.904
about you now there's a static
reference to it, which is bad.

01:28:20.620 --> 01:28:22.620
[Applause.]

01:28:24.251 --> 01:28:26.898
So let's look at some of the new
support and notations we

01:28:26.899 --> 01:28:29.714
released the support library
yesterday and there's some new

01:28:29.938 --> 01:28:31.964
good ones.
So first of all you can finally

01:28:32.055 --> 01:28:34.796
say hey, this method even though
it's inside of a worker thread

01:28:34.903 --> 01:28:40.653
class, this one is thread safe.
You can call it from any thread.

01:28:41.144 --> 01:28:44.875
For a while we've had API check.
So lint will look at the

01:28:44.876 --> 01:28:48.813
platform APIs and compare them
to your minute SDK.

01:28:48.832 --> 01:28:51.857
We have a quick fix where you
can say okay, insert the check

01:28:52.069 --> 01:28:54.186
for me.
However, what you can now do is

01:28:54.390 --> 01:28:58.841
you can say, sorry.
You can say I expect my method

01:28:59.125 --> 01:29:02.480
to require this API.
So you're passing on the

01:29:02.481 --> 01:29:05.721
responsibility to call the API.
So you can now get API check for

01:29:05.908 --> 01:29:08.947
your libraries to client.
So you can see now these other

01:29:09.150 --> 01:29:11.383
calls even though they're
calling your API, it's the API

01:29:11.566 --> 01:29:19.344
check is applied.
The next thing I will do is show

01:29:19.555 --> 01:29:24.701
you the dimension resource.
The dimension antotation.

01:29:24.727 --> 01:29:29.245
This one says this integer
represents.

01:29:29.270 --> 01:29:31.970
There's various you can apply.
Pixel is important.

01:29:31.986 --> 01:29:34.814
Most operate in pixel space so
we have a new annotation to say

01:29:35.228 --> 01:29:37.344
just pixels.
So that's at PX.

01:29:37.359 --> 01:29:39.899
When I do that, you can see
we're now flagging incorrect

01:29:39.900 --> 01:29:42.105
usages where you're passing a
dimension resource that should

01:29:42.118 --> 01:29:44.060
be a dimension.
So hopefully that will be useful

01:29:44.061 --> 01:29:46.781
useful.
And the last annotation I want

01:29:46.784 --> 01:29:49.290
to highlight is the keep Anno
Annotation.

01:29:49.304 --> 01:29:53.338
So you can do keep on your
classes.

01:29:53.365 --> 01:29:57.977
[Applause.]
Yes.

01:29:57.993 --> 01:30:01.622
So as of gradele plug in 2.2 we
now automatically make sure if

01:30:01.625 --> 01:30:05.684
you use pro guard or the new
incremental shrinker, these

01:30:05.685 --> 01:30:08.918
methods will not be reproved
removed at release time.

01:30:08.950 --> 01:30:11.449
So if you like the support anno
annotations, we have a feature

01:30:11.758 --> 01:30:13.688
that I think will make them even
more useful to you.

01:30:13.689 --> 01:30:18.220
That's the new inference.
So IntelliJ has for a while had

01:30:18.417 --> 01:30:21.544
this analysis action to infer
nullity.

01:30:21.578 --> 01:30:24.575
Well we have a new feature, it's
behind a flag, you can try it if

01:30:24.596 --> 01:30:28.218
you want torques support refer
annotations.

01:30:28.234 --> 01:30:30.852
So when I run this on the
current file, it does a bunch of

01:30:31.167 --> 01:30:34.586
alliances to figure out a lot of
new annotations based on usage

01:30:34.903 --> 01:30:37.934
in your project.
So if I go back into my file

01:30:37.935 --> 01:30:42.683
here, all the new dif annotation
dif annotations, that will

01:30:42.684 --> 01:30:46.524
hopefully jump start annotations
and help lint find more bugs in

01:30:46.724 --> 01:30:51.474
your code we have auto e we've
also been collaborateing with a

01:30:52.075 --> 01:30:54.822
research team at Oregon state to
work on permissions.

01:30:54.854 --> 01:30:56.967
So this is still a work in
progress.

01:30:56.987 --> 01:31:01.633
But when this is done, this will
let you migrate your app to

01:31:01.634 --> 01:31:04.871
enter and end permissions.
So here I can invoke this action

01:31:05.059 --> 01:31:08.696
action.
It'll help me perform the right

01:31:08.902 --> 01:31:15.448
requests and handle callbacks
for enter and permissions.

01:31:15.467 --> 01:31:20.504
[Applause.]
We also have a refactoring to

01:31:21.012 --> 01:31:23.455
remove unused resources.
So if I add some resources that

01:31:23.735 --> 01:31:27.810
aren't actually used, I can now
just go to retrackry menu and

01:31:28.075 --> 01:31:31.837
say remove unused resources.
And the IDE will find them and

01:31:31.931 --> 01:31:36.668
nuke them for you, which helps
make your app leaner.

01:31:36.684 --> 01:31:38.684
[Applause.]

01:31:39.701 --> 01:31:42.358
All right.
So now last thing I'm going to

01:31:42.524 --> 01:31:47.981
show you is the Espresso test
recorder.

01:31:48.004 --> 01:31:51.810
I'm hearing oo in the audience.
[Laughter]

01:31:51.846 --> 01:31:56.517
So to do that, all I have to do
is go into my project and go to

01:31:56.697 --> 01:32:01.461
the run menu and say "record
Espresso test" notice it's

01:32:01.462 --> 01:32:04.785
Espresso not expresso.
And so when I do that, you can

01:32:04.997 --> 01:32:08.627
see that it actually builds the
app.

01:32:08.647 --> 01:32:12.968
And it starts this event
recorder on the left here.

01:32:12.996 --> 01:32:15.902
And on the right, we have our
app running.

01:32:15.941 --> 01:32:19.356
So now I can, for example, go
and click on this category over

01:32:19.572 --> 01:32:21.572
here.
And you can see it records an

01:32:21.786 --> 01:32:25.026
event for that.
I can click on on the back

01:32:25.027 --> 01:32:26.854
button.
And then I can go down and let's

01:32:26.855 --> 01:32:31.308
say click on the music tile.
Notice as I'm clicking it's

01:32:31.309 --> 01:32:33.624
recording the events over here
and it tries to make sense of

01:32:34.030 --> 01:32:36.263
what it is I'm clicking.
For example, when I click on the

01:32:36.465 --> 01:32:40.624
are red button, it's recording
that I clicked the fab quiz

01:32:40.625 --> 01:32:42.523
button.
So another cool thing I can do

01:32:42.524 --> 01:32:45.465
while I'm recording.
I can add assertions.

01:32:45.505 --> 01:32:48.698
So I'm going click on the add
assertion button here.

01:32:48.726 --> 01:32:54.375
And it's now pulling down a
screen shot in view hierarchy of

01:32:54.971 --> 01:32:57.416
what's going on in the app.
And I can now, you can see I can

01:32:57.716 --> 01:33:00.841
move around in the logical
structure of the app.

01:33:00.866 --> 01:33:03.481
And if I click, for example, on
the question who was the

01:33:03.482 --> 01:33:06.416
youngest beatle, it pulls it
down and suggests an assertion

01:33:06.704 --> 01:33:09.246
which is hey, at this point,
when the Tess is the running, we

01:33:09.543 --> 01:33:15.495
expect this search to be who was
the youngest beatle.

01:33:15.528 --> 01:33:17.528
[Applause.]

01:33:19.017 --> 01:33:21.338
So then I press save assertion
and I keep going.

01:33:21.359 --> 01:33:25.904
So does anyone, I'm going click
some wrong answers until you

01:33:25.905 --> 01:33:31.529
stop me.
So, still wrong.

01:33:31.545 --> 01:33:35.263
Still wrong.
George is right.

01:33:35.285 --> 01:33:40.228
And I'm going to finally click
on the submit button.

01:33:40.245 --> 01:33:42.658
And you can see that that was
the correct answer.

01:33:42.678 --> 01:33:44.999
And I think that's probably good
enough for the test recording

01:33:45.290 --> 01:33:47.205
part.
So now I'm going to say complete

01:33:47.206 --> 01:33:49.354
recording.
When I do that, it's asking me

01:33:49.855 --> 01:33:52.275
what class I want to save the
test as.

01:33:52.309 --> 01:33:54.734
Accept the default.
And here we have our Espresso

01:33:55.436 --> 01:33:58.856
test.
So notice that I clicked some

01:33:59.074 --> 01:34:02.104
wrong stuff in the beginning.
I can now edit this Tess if the

01:34:02.312 --> 01:34:04.227
I want.
For example, I can take out the

01:34:04.228 --> 01:34:07.046
clicking the wrong tile and
going back.

01:34:07.073 --> 01:34:10.884
And then I can run the test.
So let's do that.

01:34:10.930 --> 01:34:15.752
So all I have to do is click on
this run button right here.

01:34:15.814 --> 01:34:19.719
EnAnd you can actually do cloud
testing, as well.

01:34:19.738 --> 01:34:21.848
I don't have time to show it.
But you can sign up for that and

01:34:21.953 --> 01:34:25.805
then it will run your UI test
across a number of different

01:34:25.806 --> 01:34:28.626
harbor form factors which is
pretty useful.

01:34:28.645 --> 01:34:31.354
So let's just run this on the
emulateor again.

01:34:31.374 --> 01:34:34.108
So it will build the tests,
deploy and let's look over on

01:34:34.297 --> 01:34:36.297
the right here when the app
starts running because it can

01:34:36.636 --> 01:34:41.479
click faster than I can.
Installing APK.

01:34:41.516 --> 01:34:42.613
Here we go.
Click.

01:34:42.614 --> 01:34:43.428
Click.
Click.

01:34:43.429 --> 01:34:49.058
Click.
And we have our green pass.

01:34:49.076 --> 01:34:51.076
[CHEERS AND APPLAUSE]

01:34:53.400 --> 01:34:55.338
Thank you.
So with that, I'm going to turn

01:34:55.339 --> 01:34:59.799
it back over to jammal Jamal who
will be talking about the visual

01:35:00.106 --> 01:35:02.228
editors.
[Applause.]

01:35:05.635 --> 01:35:08.874
&gt;&gt; JAMAL EASON:  So thanks, Tor.
Great demo.

01:35:08.895 --> 01:35:11.624
So what Tor showed you is what
we're doing.

01:35:11.649 --> 01:35:14.668
I'm going to spend a little bit
of time talking about why we're

01:35:14.954 --> 01:35:18.010
doing it and why you might want
to implement it into your work

01:35:18.199 --> 01:35:19.933
flow.
So for design, we're thinking

01:35:19.934 --> 01:35:25.371
about two main topics.
XML and layouts.

01:35:25.401 --> 01:35:31.259
So for comvment ML for XML.
I know a few of you enjoy your

01:35:32.172 --> 01:35:34.278
entire in XML.
That's great.

01:35:34.295 --> 01:35:37.438
But for me and many others, it's
good to have some visualization

01:35:38.048 --> 01:35:40.759
tool to allow you to see how
your app's going to render.

01:35:40.805 --> 01:35:43.918
Our team set a goal for
ourselves thinking is it

01:35:43.919 --> 01:35:49.853
possible for us to create tool
where no XML is is required?

01:35:49.880 --> 01:35:52.000
You can look at it afterwards
but it shouldn't be in the way

01:35:52.012 --> 01:35:54.012
to get your job done.
So that was the reason behind

01:35:54.315 --> 01:35:57.056
the new layout editor.
As Tor showed, you have a whole

01:35:57.262 --> 01:36:00.095
host of new features, including
ways to drag widgets onto the

01:36:00.815 --> 01:36:04.354
componentry onto the design
surface or the new blueprint

01:36:04.355 --> 01:36:07.788
mode that allows you to peer
behind to see how all the

01:36:07.789 --> 01:36:10.729
widgets are together.
And the new properties panel.

01:36:11.323 --> 01:36:14.658
In the past it showed all the
different that are available for

01:36:15.184 --> 01:36:17.717
view.
Now we cureated those to show

01:36:17.924 --> 01:36:22.463
the most impactful ones to use
for your new view layout.

01:36:22.490 --> 01:36:25.105
The second is layouts.
So for enter layouts a couple

01:36:25.307 --> 01:36:27.624
different.
You have linear layout,

01:36:27.625 --> 01:36:29.871
horizontal and linear.
But then you're thinking well

01:36:30.082 --> 01:36:33.205
perhaps I need to use the frame
layout or the table layout.

01:36:33.226 --> 01:36:35.043
That's not going to work,
actually.

01:36:35.044 --> 01:36:38.478
Let's think about using the grid
layout or the relative layout.

01:36:38.665 --> 01:36:40.588
Wait.
So which one should we use here?

01:36:40.589 --> 01:36:42.840
That's the problem we're trying
to think about because many

01:36:42.841 --> 01:36:45.763
times we're thinking about
should I use, which container

01:36:46.268 --> 01:36:50.515
should I use for my layouts?
So the constraint layout is the

01:36:50.713 --> 01:36:53.343
solution for this problem where
you c think less about the

01:36:53.344 --> 01:36:57.588
container and more about the
content and how you lay out your

01:36:57.793 --> 01:37:02.048
widgets on your layouts.
So let's talk about why you

01:37:02.049 --> 01:37:03.772
might want to use the constraint
layout.

01:37:03.773 --> 01:37:06.981
So number 1, it's fast UI 
UI development.

01:37:07.012 --> 01:37:10.137
As you saw in the demo, we can
actually add widgets pretty

01:37:10.138 --> 01:37:13.154
quickly and connect all the
different constraints.

01:37:13.175 --> 01:37:15.589
While it's also very important
to think about is that this

01:37:15.590 --> 01:37:18.495
helps you have more responsive
design.

01:37:18.520 --> 01:37:23.656
Instead of thinking about how
has my screen stood on Nexus 4

01:37:23.667 --> 01:37:27.507
or tablet or Nexus 6 device, we
can create constraints which

01:37:27.508 --> 01:37:30.247
allows you to respond your
content based on the screen size

01:37:30.338 --> 01:37:31.643
size.
And the third most important

01:37:31.644 --> 01:37:35.399
aspect is performance.
SoSo as you saw in the

01:37:35.400 --> 01:37:38.134
demonstration, we can now flat
flatten your hierarchy for you.

01:37:38.421 --> 01:37:42.586
If you didn't know, if you put a
relative layout underneath

01:37:42.587 --> 01:37:45.415
another relative layout, that is
slower for the Android operating

01:37:45.715 --> 01:37:47.954
system to process.
So all that Nesting can be now

01:37:48.169 --> 01:37:50.275
flattened with a new constraint
layout.

01:37:50.289 --> 01:37:53.142
And,  lastly, it's backwards
compatible, which means you can

01:37:53.421 --> 01:37:56.953
use it obviously for new
projects, but it's a support

01:37:56.954 --> 01:37:59.886
library that allows you to use
it for existing projects, as

01:37:59.887 --> 01:38:01.887
well.
[Applause.]

01:38:04.636 --> 01:38:08.370
And so the third tool that we
demonstrated around design is

01:38:08.383 --> 01:38:11.024
the layout instructor.
So sometimes when you're loading

01:38:11.321 --> 01:38:13.962
your application, you're
wondering well why is my view

01:38:14.357 --> 01:38:16.573
overlapping?
Or perhaps why is one of my

01:38:16.574 --> 01:38:18.522
attributes not what I expected
it to be?

01:38:18.523 --> 01:38:21.432
So what you can do now with our
roolz is right click and take a

01:38:21.743 --> 01:38:25.477
snapshot of your current layout
and visually inspect all

01:38:25.478 --> 01:38:28.604
different attributes and look at
the entire view hierarchy of

01:38:28.605 --> 01:38:30.655
your layout.
That should be very helpful in

01:38:31.042 --> 01:38:34.184
debugging.
Now spend a little bit of time

01:38:34.989 --> 01:38:37.216
talking about develop and what
tools we've enabled to help you

01:38:37.228 --> 01:38:41.853
with that.
So as we showed in the demo, we

01:38:41.857 --> 01:38:45.415
have now a new Firebase plug in.
And this supports a new Firebase

01:38:45.824 --> 01:38:48.633
services that we launched
yesterday at Google I/O.

01:38:48.656 --> 01:38:52.886
And you can now add things like
Google analytics, adds, client

01:38:53.186 --> 01:38:57.242
messaging all in a click of a
button in inside of Android

01:38:57.243 --> 01:39:00.389
studio 2.0.
The other cool thing we talked

01:39:00.576 --> 01:39:03.839
about is the samples browseer.
And as demonstrated, if you're

01:39:04.138 --> 01:39:08.086
looking for an exam of how to
use something, now we provide

01:39:08.277 --> 01:39:11.233
the power of all the Google
samples at the click of a button

01:39:11.626 --> 01:39:15.282
to make it easier for you to now
look and have a good starting

01:39:15.479 --> 01:39:18.292
point for your application
development.

01:39:18.318 --> 01:39:21.646
And now with that, I'd like to
talk a little bit about the

01:39:21.647 --> 01:39:24.473
build tools and I'll invited
Stef to talk about those new

01:39:24.474 --> 01:39:26.474
changes.
[Applause.]

01:39:30.230 --> 01:39:32.165
&gt;&gt; STEPHANIE CUTHBERTSON: 
Thanks very much, Jamal.

01:39:32.166 --> 01:39:35.698
For build, I want to start by
talking about instant run.

01:39:35.716 --> 01:39:38.841
Now, as a developer, I think one
of the best feelings in the

01:39:38.842 --> 01:39:42.184
world is being in the flow.
And one of our goals for Android

01:39:42.407 --> 01:39:45.729
is to make Android development
feel as lightweight as web

01:39:45.730 --> 01:39:47.544
development.
So you can make your code

01:39:47.545 --> 01:39:50.089
changes and then see them
essentially refresh so that you

01:39:50.298 --> 01:39:53.126
can really stay in the flow as
you're coding.

01:39:53.154 --> 01:39:56.698
That's why we built instant run.
So I want to talk a little bit

01:39:57.014 --> 01:40:00.743
first about how it works.
The IDE swaps your changes in

01:40:01.329 --> 01:40:04.574
one of three ways.
For incremental changes, we do

01:40:04.886 --> 01:40:07.512
the fastest swap, which is
called a hot swap.

01:40:07.534 --> 01:40:10.750
And here what we do is we
instrument your bite code on the

01:40:11.261 --> 01:40:14.605
first build and then after that
when you make changes, we just

01:40:15.013 --> 01:40:18.119
redirect the code path to pick
up the changed code.

01:40:18.135 --> 01:40:20.655
The second type of swap is a
warm swap.

01:40:20.676 --> 01:40:23.384
And that's when we need to do an
activity restart.

01:40:23.419 --> 01:40:26.434
So that's what you need whenever
you're going to do for instance

01:40:27.140 --> 01:40:29.258
resource changes.
Cold swaps are when we need to

01:40:29.461 --> 01:40:33.119
restart the app.
And that's required when you do

01:40:33.627 --> 01:40:35.627
structural changes.
So examples much those would be

01:40:35.834 --> 01:40:40.299
changes to inheritance or if you
change your method signature.

01:40:40.388 --> 01:40:43.933
So what I'd like to do is backup
and unpack a little bit some of

01:40:43.937 --> 01:40:47.874
the benchmarks that we talked
about yesterday in the keynote.

01:40:47.970 --> 01:40:50.818
We benchmarked using a wide
range of different applications

01:40:51.206 --> 01:40:53.344
and different tools.
I won't take you through all of

01:40:53.560 --> 01:40:55.086
it.
Just one example.

01:40:55.087 --> 01:40:57.417
We benchmark with the Wikipedia
app.

01:40:57.446 --> 01:41:00.268
It's an open source app.
You can get it on Github.

01:41:00.297 --> 01:41:03.603
And I posted here all of our
criteria in case it's

01:41:03.604 --> 01:41:06.844
interesting to repeat them.
What you'll notice is that we

01:41:07.560 --> 01:41:11.297
benchmark against 2.0 with
instant run disabled.

01:41:11.313 --> 01:41:17.456
And you can see in 2.1 with cold
swap it's 4.7 times faster and

01:41:17.844 --> 01:41:22.507
hot swap is 10.7 times faster.
Now, what that means if you

01:41:22.508 --> 01:41:26.759
think about it is our build
speeds are actually faster than

01:41:27.446 --> 01:41:30.090
10 X because we're benchmarking
against 2.0.

01:41:30.120 --> 01:41:34.061
And 2.0's faster than 1.5
because of changes we made in

01:41:34.259 --> 01:41:36.689
decks.
And we also made ADB push speeds

01:41:37.198 --> 01:41:40.018
10 times faster.
So we're underselling a little

01:41:40.031 --> 01:41:43.977
bit, but what we care about most
is really that you guys are

01:41:43.978 --> 01:41:47.122
getting super fast builds and so
that's what we focused on.

01:41:47.151 --> 01:41:50.262
And this gives us a nice apples
to apples comparison in our own

01:41:50.668 --> 01:41:53.190
benchmarks.
Let me talk about another type

01:41:53.195 --> 01:41:56.949
of benchmarking we do.
So we look at the user stats for

01:41:57.342 --> 01:42:00.280
users who opt in.
And we instrument in a bunch of

01:42:00.579 --> 01:42:02.901
different very cool ways.
So for all of you guys who opt

01:42:03.118 --> 01:42:06.246
in, thank you.
This is an example of a stat we

01:42:06.353 --> 01:42:09.078
look at.
This is average run time,

01:42:09.079 --> 01:42:12.089
average build time for instant
run on hot swap.

01:42:12.105 --> 01:42:14.519
And this is showing across all
users.

01:42:14.534 --> 01:42:18.246
So this is worldwide.
All operating systems.

01:42:18.269 --> 01:42:20.085
All countries.
All hardware.

01:42:20.086 --> 01:42:23.214
And that includes very old
hardware with slow processors

01:42:23.421 --> 01:42:26.649
and things of that nature.
What you can see is that most

01:42:26.845 --> 01:42:31.906
users are seeing hot swap happen
in 4 to 5 seconds or less.

01:42:31.931 --> 01:42:34.218
And our goal is always to push
that graph over.

01:42:34.254 --> 01:42:36.855
We're trying to make as possible
as possible this happen one

01:42:36.856 --> 01:42:40.406
second.  So what we look for is
we're trying to figure out how

01:42:40.606 --> 01:42:44.655
do we drive full build speeds
down, how do we make hot swaps

01:42:44.946 --> 01:42:47.685
faster, and how do we make as
possible swaps as possible be

01:42:47.874 --> 01:42:50.309
hot swaps?
So we look at things like this.

01:42:50.493 --> 01:42:54.071
We look at the distribution of
hot swaps, warm swaps and cold

01:42:54.278 --> 01:42:58.617
swaps and full build times as
well as what's causing cold

01:42:58.618 --> 01:43:01.852
swaps to happen.
And it was looking at that

01:43:01.853 --> 01:43:04.289
instrumentation, really, all of
your wonderful data, that gave

01:43:04.374 --> 01:43:08.027
us the clue for one of the big
changes you'll see in 2.2.

01:43:08.045 --> 01:43:13.260
So 2.2 includes a change to AAPT
AAPT.

01:43:13.284 --> 01:43:18.417
A lot of you guys know when you
change your resource, AAPT 

01:43:18.418 --> 01:43:21.433
AAPT inserts an ID in the
manifest.

01:43:21.455 --> 01:43:26.888
Now, what you may not know and
what we didn't know is that if

01:43:26.906 --> 01:43:31.249
you change your resource or add
a new one, AAPT was renumbering

01:43:31.745 --> 01:43:34.979
those IDs.
So the impact is you make a code

01:43:35.389 --> 01:43:37.124
change but you would get a cold
swap.

01:43:37.125 --> 01:43:40.555
We identified this was driving
about, I call it 16 to

01:43:40.556 --> 01:43:45.987
19 percent of our cold swaps.
So with 2.2, we've changed AAPT.

01:43:46.188 --> 01:43:48.714
So it hold all the resource IDs
constant.

01:43:48.740 --> 01:43:51.480
So I'm kind of taking you guys
on an insider view of what will

01:43:51.687 --> 01:43:55.214
just occur to you in 2.2 as an
acceleration and instant run

01:43:55.215 --> 01:43:57.638
because you will see a lot more
hot swaps.

01:43:57.655 --> 01:44:01.606
Another change we made is we're
taking advantage of split APK.

01:44:01.791 --> 01:44:06.153
So now when you build, we'll
break your app into about 11 to

01:44:07.244 --> 01:44:09.385
12 decks files.
And when you do a full build,

01:44:09.698 --> 01:44:16.229
we'll actually only rebuild the
changed code.

01:44:16.246 --> 01:44:19.478
We plan to keep driving build
speeds down in multiple

01:44:19.479 --> 01:44:23.321
successive releases, not 2.2.
So if any of you guys are seeing

01:44:23.626 --> 01:44:26.059
still slow build speeds, the
engineering team would really

01:44:26.259 --> 01:44:31.104
appreciate it if you come find
us.

01:44:31.124 --> 01:44:33.235
Let me talk next about project
structure.

01:44:33.254 --> 01:44:35.260
Now, Tor already gave a
wonderful demo.

01:44:35.293 --> 01:44:38.405
So I'm just going to give you
guys the insiders look.

01:44:38.437 --> 01:44:41.044
Underneath the project structure
dialogue is some very

01:44:41.045 --> 01:44:43.857
interesting changes to the grade
gradele build model.

01:44:43.885 --> 01:44:46.994
Now gradele has been wonderful
for us.

01:44:47.015 --> 01:44:50.325
It's a very flexible language,
very powerful for Android.

01:44:50.346 --> 01:44:53.482
But let's think about it.
An IDE expects structured inputs

01:44:53.875 --> 01:44:56.608
and gradele is a programming
Lange language.

01:44:56.625 --> 01:44:59.157
So that's pretty complex.
One of the changes we made in

01:45:00.043 --> 01:45:03.905
2.2 is we completely rewrote the
gradele parseer from the bottom

01:45:04.094 --> 01:45:06.094
up.
So what that means is we're now

01:45:06.234 --> 01:45:09.266
much more accurate when we read
in gradele files.

01:45:09.284 --> 01:45:12.705
And we're also much more
accurate in the IDE when we

01:45:12.706 --> 01:45:15.752
write them back out.
So an example of what you'll see

01:45:15.754 --> 01:45:18.493
is, for instance, if you write
variables into your gradele file

01:45:18.685 --> 01:45:21.516
file, we will now read those
correctly in the IDE.

01:45:21.535 --> 01:45:24.453
And in the future, in the
project structure dialogue,

01:45:24.454 --> 01:45:28.389
you'll be able to modify those
in the UI, as well.

01:45:28.435 --> 01:45:30.435
[Applause.]

01:45:31.605 --> 01:45:36.153
The gradele rewrite of the model
is done already in 2.2.

01:45:36.174 --> 01:45:39.416
As Tor mentioned, the project
structure dialogue is partially

01:45:40.515 --> 01:45:44.254
complete in 2.2 and you'll be
able to try it under an

01:45:44.255 --> 01:45:47.074
experimental flag.
We plan to complete it in 2.3

01:45:47.086 --> 01:45:50.823
and at that point it will become
the default.

01:45:50.843 --> 01:45:53.656
This is scwhrussate nice screen
shot of the merged manifest

01:45:53.657 --> 01:45:56.296
viewer which Tor also showed.
For time I want to skip ahead

01:45:56.798 --> 01:45:59.524
and talk a little bit about jack
jack.

01:45:59.548 --> 01:46:03.375
Now, the Jack compiler was
integrated with gradele in 2.1.

01:46:03.575 --> 01:46:07.512
And in 2.2 we now include anno
annotation processing.

01:46:07.542 --> 01:46:11.254
So you can now use annotation
processors on your class pass.

01:46:12.074 --> 01:46:14.074
[Applause.]

01:46:17.704 --> 01:46:22.378
So this would include such an
dependency and they will be

01:46:22.379 --> 01:46:24.903
applied.
Details how to use this is in

01:46:25.092 --> 01:46:26.826
our Docs.
One.  Things I wanted to call

01:46:26.827 --> 01:46:31.478
out here in I/O is if you're
swhoin is writing tools and

01:46:31.479 --> 01:46:34.398
doing preor post processing on
class files, one of the very

01:46:34.399 --> 01:46:37.648
nice things about jack is that
it has a structured API for

01:46:37.649 --> 01:46:39.167
manipulations.
Now we are going to be looking

01:46:39.168 --> 01:46:41.988
to move more and more to Jack in
coming releases.

01:46:42.014 --> 01:46:44.528
So please do try this out and
let us know if there's anything

01:46:45.027 --> 01:46:50.073
that's missing for you.
Our last topic will be C++

01:46:50.074 --> 01:46:51.714
support.
And for this I'm going give you

01:46:51.715 --> 01:46:53.656
guys the whole arc of what we're
doing.

01:46:53.657 --> 01:46:57.182
I think it's a nice way to just
understand C++ from end-to-end.

01:46:57.183 --> 01:47:00.227
The reason we're investing so
much is because we know there's

01:47:00.731 --> 01:47:04.774
a lot of you who are doing very
graphics-rich apps and games.

01:47:04.877 --> 01:47:08.627
And you've talked to us and told
us that C++ is critical.

01:47:08.648 --> 01:47:12.260
We already support C++ editing
and debugging.

01:47:12.290 --> 01:47:14.698
And all of that is coming
through IntelliJ.

01:47:14.728 --> 01:47:22.076
So one of the new things you're
going to get with 206.1 is also

01:47:22.798 --> 01:47:27.649
IntelliJ's improved for C++.
The biggest change you'll see is

01:47:27.839 --> 01:47:31.063
Cmick and gradele.
Let me walk through a CMake

01:47:31.064 --> 01:47:33.064
example.
You can now reference a CMake

01:47:34.124 --> 01:47:37.248
project in your gradele file.
This will build your SO files so

01:47:37.545 --> 01:47:39.670
they're packages packaged in the
APK.

01:47:39.697 --> 01:47:42.401
How it works is gradele now
shells out to CMake.

01:47:42.430 --> 01:47:45.671
And we're getting CMake to admit
more metadata about the project

01:47:45.758 --> 01:47:48.899
itself, both how to build it and
what files are in the project.

01:47:48.997 --> 01:47:51.749
So that's how, as Tor was
showing you, you're able to see

01:47:53.255 --> 01:47:57.916
the cpp files show up in the
project hierarchy and your dot H

01:47:58.017 --> 01:48:01.545
dot H files, as well, if those
are in the same folder.

01:48:01.566 --> 01:48:05.803
The files themselves will show
up in a note in the project

01:48:05.804 --> 01:48:08.234
hierarchy, as well, under
external build file so you can

01:48:08.638 --> 01:48:10.853
edit those, as well, from the ID
IDE.

01:48:10.878 --> 01:48:13.387
You can run the app, set a
breakpoint.

01:48:13.404 --> 01:48:17.144
It will all work as expected.
Setting up NDKBuild works the

01:48:17.357 --> 01:48:21.888
same way so you can reference an
Android.mk file from your build.

01:48:24.421 --> 01:48:27.763
I'd also like to give you guys a
brief tour of the C++ debugger

01:48:28.181 --> 01:48:31.314
enhancements.
So, first, in 2.2 as we

01:48:31.315 --> 01:48:35.469
mentioned, you no longer have to
explicitly choose the C++, Java

01:48:35.670 --> 01:48:39.012
or hybrid debugger.
You can just use auto and the ID

01:48:39.104 --> 01:48:43.352
IDE will automatically select
the right debugger for you.

01:48:43.374 --> 01:48:46.595
If you're debugging an N, you
can actually use one single

01:48:46.596 --> 01:48:50.448
debugger for Java and C++.
And then a final thing we added

01:48:50.746 --> 01:48:54.287
is Watchpoints.
So you can add a variable and

01:48:54.299 --> 01:48:57.603
you can freeze the process if
those are read or if they're

01:48:57.604 --> 01:49:01.640
modified.
Watchpoints can be used on X86

01:49:01.647 --> 01:49:04.184
and Nexus 9.
We're planning to bring more

01:49:04.185 --> 01:49:06.607
devices online.
For now, a great way if you want

01:49:06.623 --> 01:49:09.231
to try them is to try them out
with our emulateors.

01:49:09.257 --> 01:49:11.874
We also fixed several
compatibility issues with

01:49:11.875 --> 01:49:16.950
Samsung, S5 and S6 devices.
So that covers C++ and 2.2 and

01:49:17.231 --> 01:49:19.571
you should expect to continue to
see enhancements in coming

01:49:19.572 --> 01:49:21.493
releases.
The last area we'd like to talk

01:49:21.494 --> 01:49:23.815
about is testing.
And so with that, I would love

01:49:24.015 --> 01:49:27.856
to bring Jamal back.
Thank youThank you, guys, very

01:49:27.869 --> 01:49:31.793
much.
[Applause.]

01:49:31.809 --> 01:49:35.157
&gt;&gt; JAMAL EASON:  So for testing,
a core feature you need is a

01:49:35.158 --> 01:49:37.979
local testing environment.
So we're really excited that we

01:49:38.092 --> 01:49:41.214
launched the Android emulator
earlier this year.  If you

01:49:41.215 --> 01:49:43.045
haven't tried it, it's a great
tool.

01:49:43.046 --> 01:49:47.516
What's great about it is it's
improved the CPU, GPU and IO

01:49:47.517 --> 01:49:51.450
IOspeeds so it's even faster
than a device we improved the AD

01:49:51.650 --> 01:49:53.763
ADB speeds.
Believe it or not the

01:49:53.764 --> 01:49:55.764
bottlenecks between you pushing
your assets in your application

01:49:55.900 --> 01:49:58.634
is is ADB.
So that's actually now 10 times

01:49:59.045 --> 01:50:02.373
fast we are the new Android
emulator.

01:50:02.397 --> 01:50:05.518
We have the new UI.
We do things like rotate, take

01:50:05.711 --> 01:50:09.235
screen shots but extended UI, as
well which allows you to control

01:50:09.354 --> 01:50:11.978
sensors like taking location.
Makeing phone calls.

01:50:12.031 --> 01:50:16.418
All tools allowing you to test
your application.

01:50:16.434 --> 01:50:20.953
[Applause.]
So in addition to the local

01:50:20.954 --> 01:50:24.715
testing, we also launched the
Firebase test lab inside Android

01:50:25.008 --> 01:50:27.008
studio.
So if you click on that cloud

01:50:27.043 --> 01:50:30.155
tab that Tor showed in the demo,
it allows you to choose devices

01:50:30.767 --> 01:50:32.767
in the cloud.
And now you can run the device

01:50:33.196 --> 01:50:38.757
that you may not own and try and
simulate STK to help you test

01:50:38.955 --> 01:50:42.687
your application.
And as I showed earlier, we have

01:50:42.887 --> 01:50:46.727
the Espresso test recorder.
That's a very cool demo.

01:50:46.758 --> 01:50:49.173
Why this is very important is we
found that making tests can be

01:50:49.465 --> 01:50:52.000
tedious.
And sometimes not all people

01:50:52.001 --> 01:50:53.946
like to do it.
So now you can click on your

01:50:53.947 --> 01:50:56.074
device.
We can capture all those tests

01:50:56.560 --> 01:51:00.524
and you can now upload those to
the test lab or run them locally

01:51:00.825 --> 01:51:04.355
on your machine.
And,  lastly, we talked about

01:51:04.666 --> 01:51:07.499
the APX analyzeer.
Again why this is very important

01:51:07.709 --> 01:51:10.017
is because sometimes you think
you're done.

01:51:10.045 --> 01:51:13.853
You built your application.
And the APK is too big.

01:51:13.876 --> 01:51:16.403
Because at the end of the day,
the users that download the

01:51:16.404 --> 01:51:20.633
application on Google Play wants
the smallest possible.

01:51:20.662 --> 01:51:23.477
This allows you to look into the
APK, your assets and figure out

01:51:23.696 --> 01:51:29.937
what might be the problem of why
my APK is large.

01:51:29.961 --> 01:51:33.792
The next time we don't have time
to work at every single feature.

01:51:35.403 --> 01:51:39.266
IntelyIntelliJ.
We made a big for accessible

01:51:39.267 --> 01:51:41.588
accessibility.
This is what we added into

01:51:41.589 --> 01:51:43.699
Android 2.2.
So just to recap.

01:51:43.716 --> 01:51:46.233
We launched a whole host of
features around design.

01:51:46.256 --> 01:51:49.766
A new constraint layout manager
and chorus line designer.

01:51:49.784 --> 01:51:53.009
New Firebase integration to help
you code better, enhanced C++

01:51:53.814 --> 01:51:57.044
support, build support, and a
test recorder to help you test.

01:52:00.071 --> 01:52:03.316
And how to get started.
All you have to do if you're

01:52:03.317 --> 01:52:06.747
using and dried studio 2.2 today
today, check for updates and

01:52:06.748 --> 01:52:10.074
prompt to the Android 2.2 in the
Canary channel.

01:52:10.094 --> 01:52:15.046
And if you're not using Android
studio, anyone?

01:52:15.066 --> 01:52:17.777
Let's go to this link here and
download a fresh copy.

01:52:17.809 --> 01:52:21.525
And again change the channel to
the Canary channel to download

01:52:21.924 --> 01:52:24.655
Android studio 2.2.
And that's it.

01:52:24.670 --> 01:52:26.670
Thank you so much.
[Applause.]

01:52:40.187 --> 01:52:42.187
[Music.]

02:09:06.293 --> 02:09:08.293
 [Music.]

02:09:17.548 --> 02:09:19.548
[CHEERS AND APPLAUSE]

02:09:20.983 --> 02:09:25.030
&gt;&gt; Good morning, everybody.
Hi, I'm Ellie Powers and I'm a

02:09:25.433 --> 02:09:29.544
product manager here on the
Google Play team.

02:09:29.558 --> 02:09:31.587
We have so many different
announcements about what's new

02:09:31.780 --> 02:09:33.780
for all of you app developers on
Google Play

02:09:37.249 --> 02:09:39.249
 that we had to
create one session with a whole

02:09:39.259 --> 02:09:42.078
bunch of people to take you
through all of them.

02:09:42.104 --> 02:09:44.517
But before we get into that, I
want to take a couple minutes to

02:09:44.917 --> 02:09:47.728
talk to you more about why I'm
really excited to work on Google

02:09:47.749 --> 02:09:49.749
Play.
I've been on the team for about

02:09:50.074 --> 02:09:54.106
4-1/2 years.
And one of the things that

02:09:54.107 --> 02:09:58.453
really gets me excited even now
is really meeting each of you

02:09:58.767 --> 02:10:02.367
and hearing your stories for
every app and game on the Google

02:10:02.388 --> 02:10:05.091
Play store, there's a real story
behind it.

02:10:05.103 --> 02:10:07.840
You know, I love hearing "how
did you come up with that idea

02:10:08.239 --> 02:10:10.980
for that newer app or game"?
What's really special about it

02:10:11.169 --> 02:10:13.694
to you?
And I love trying out all the

02:10:13.918 --> 02:10:16.122
different apps and seeing how
they work.

02:10:16.147 --> 02:10:18.446
And I love hearing about what
happens after you launch your

02:10:18.654 --> 02:10:21.985
app, how it's helping you build
a business and how you're using

02:10:22.198 --> 02:10:26.418
that app to really transform
people's lives.

02:10:26.434 --> 02:10:29.758
So, before we see what's new in
Google Play, we're going to see

02:10:29.955 --> 02:10:32.498
a video and take a look at some
of your stories.

02:10:32.522 --> 02:10:35.121
Let's play the video.
[Music.]

02:10:35.134 --> 02:10:38.367
&gt;&gt; I started running in marathon
marathons to raise money for

02:10:38.368 --> 02:10:40.390
Parkinson's research in honor of
my grandfather.

02:10:40.405 --> 02:10:42.823
I always had this idea that if I
could get enough people together

02:10:43.327 --> 02:10:45.635
together, then collectively we
would have the clout of a

02:10:45.636 --> 02:10:48.370
celebrity and then companies
would want to sponsor us.

02:10:48.384 --> 02:10:51.214
&gt;&gt; Being on the Android platform
has enabled us to reach people

02:10:51.422 --> 02:10:53.438
all over the world.
They can help raise money for

02:10:53.654 --> 02:10:57.463
our charity partners and it's
helped make our movement a

02:10:57.464 --> 02:10:59.698
global one.
&gt;&gt; It's been cool to take your

02:11:00.012 --> 02:11:04.018
hobby and put it into your
full-time job.

02:11:04.031 --> 02:11:07.481
Talk is an Android app that
allows you to see all the

02:11:07.482 --> 02:11:10.081
sensors on your vehicle and to
look at the codes.

02:11:10.106 --> 02:11:13.124
From the way it's happened on
the Google Play store I've

02:11:13.125 --> 02:11:14.743
touched over a million people
with the app.

02:11:14.744 --> 02:11:17.479
The community's drag gd me along
with it and told me what they

02:11:17.575 --> 02:11:19.318
want.
I've done that for them.

02:11:19.319 --> 02:11:21.037
I'm very grateful for where I am
now.

02:11:21.038 --> 02:11:24.358
And it's staggering to see that
something I've written for from

02:11:24.557 --> 02:11:29.415
my garden shed is liked by that
many people across the planet.

02:11:31.104 --> 02:11:32.951
&gt;&gt; It started right after
university.

02:11:32.952 --> 02:11:35.871
It was myself, my husband and
his brother.

02:11:35.911 --> 02:11:38.518
Making games was our childhood
dream and this is what we wanted

02:11:38.594 --> 02:11:40.594
do.
Since we released cooking fever

02:11:40.935 --> 02:11:43.946
on Android, it totally clicked.
We realized that this is the way

02:11:43.964 --> 02:11:46.205
to go.
And this is the platform of the

02:11:46.792 --> 02:11:49.123
future.
We had millions of downloads

02:11:49.124 --> 02:11:51.750
within the first months.
When we started, it was just

02:11:51.751 --> 02:11:54.780
three of us and now we're a
company of over 100 people

02:11:54.781 --> 02:11:57.199
making games that we decide we
want to make.

02:11:57.228 --> 02:12:00.434
This has been very successful
dream.

02:12:00.465 --> 02:12:02.465
[Music.]

02:12:10.497 --> 02:12:11.737
[Applause.]
&gt;&gt; ELLIE POWERS:  I really love

02:12:11.738 --> 02:12:14.862
watching this video because it
really shows the different

02:12:14.863 --> 02:12:17.094
developers we have in the
Android and Google Play

02:12:17.095 --> 02:12:18.920
community.
So now let's get on with what's

02:12:18.921 --> 02:12:22.649
new on Google Play this year.
Here at Google we found that we

02:12:22.854 --> 02:12:25.684
build the best products we're
able to launch and iterate our

02:12:25.874 --> 02:12:29.841
products using user feedback,
products like Gmail, Chrome,

02:12:29.842 --> 02:12:32.656
maps and Google search are all
great examples of how we've

02:12:32.657 --> 02:12:35.290
about enable to do this.
And we want app developers like

02:12:35.495 --> 02:12:38.498
you to be able to do the same
things.

02:12:38.519 --> 02:12:41.546
So, Google Play has been giving
all of you the biggest user base

02:12:41.761 --> 02:12:43.761
base, right?
Access to a very wide range of

02:12:43.887 --> 02:12:46.798
people all around the world.
But now it's also become the

02:12:46.799 --> 02:12:50.743
best place to optimize your apps
to take on user feedback and to

02:12:51.045 --> 02:12:53.267
measure how your app is doing
and to make those little tweaks

02:12:53.475 --> 02:12:58.324
to make your app truly great.
So, imagine that I brought a big

02:12:58.511 --> 02:13:01.541
team of people to help me
deliver these announcements.

02:13:01.557 --> 02:13:04.092
So lightning talk style we're
going to bring each of them on

02:13:04.290 --> 02:13:06.691
to share something new on Google
Play with you.

02:13:06.714 --> 02:13:09.654
And with that, I'd like to bring
out our engineering director,

02:13:09.931 --> 02:13:11.981
Miles Barr.
[Applause.]

02:13:17.386 --> 02:13:19.135
&gt;&gt; MILES BARR:  Hi.
I'm Miles Barr.

02:13:19.136 --> 02:13:22.441
I'm here today to talk to you
about the prelaunch report.

02:13:22.456 --> 02:13:25.589
It's an exciting new feature
that we launched at Google I/O

02:13:26.205 --> 02:13:28.723
this year.
The prelaunch report is built on

02:13:28.725 --> 02:13:32.080
the Firebase test lab.
The Firebase test lab is our

02:13:32.081 --> 02:13:34.876
data center of real Android
devices where you can test your

02:13:35.075 --> 02:13:38.605
app.
It allows you to test your app

02:13:38.829 --> 02:13:44.075
across a variety of devices,
Android versions and languages.

02:13:44.352 --> 02:13:46.401
It's already performed over
1 million tests for developers

02:13:46.791 --> 02:13:49.321
like you.
You can run your own custom

02:13:49.322 --> 02:13:52.259
tests straight from Android
studio or from the Firebase

02:13:52.260 --> 02:13:56.999
console.
Beta testing has always been one

02:13:57.187 --> 02:14:00.720
of the most popular and powerful
features but we wanted to make

02:14:00.815 --> 02:14:03.650
it even better by performing a
comprehensive set of tests on

02:14:03.968 --> 02:14:08.385
your app before it goes live.
You can now opt in to generating

02:14:08.687 --> 02:14:13.245
a prelaunch report for every APK
APK you upload to the alpha and

02:14:13.654 --> 02:14:16.791
beta channels to Google Play.
Releasing a new version of your

02:14:16.977 --> 02:14:19.510
app can be an exciting time you
want to make sure everything

02:14:19.511 --> 02:14:23.144
goes right.
After about an hour you'll get a

02:14:23.435 --> 02:14:29.899
report summarizing any issues we
found when testing your app.

02:14:29.915 --> 02:14:32.524
The first thing we look at is
the stability of your app.

02:14:32.544 --> 02:14:37.385
We use the Firebase test lab to
run your app on real devices,

02:14:37.497 --> 02:14:40.531
telling you on which devices
your app crashed on startup or

02:14:40.624 --> 02:14:44.852
if it crashes off a deeper crol
of the April.

02:14:44.877 --> 02:14:47.289
This means it won't be the users
finding the crashes and giving

02:14:47.489 --> 02:14:52.439
you 1 star reviews.
We also show you what your app

02:14:52.639 --> 02:14:54.950
looks like on these different
devices.

02:14:54.986 --> 02:14:57.978
You get to see how it looks like
in different screen resolutions,

02:14:58.486 --> 02:15:01.203
Android OS versions and
languages.

02:15:01.233 --> 02:15:04.362
In allows you to spot any
problems, such as overflowing

02:15:04.651 --> 02:15:07.775
text in your translations before
your app goes live, allowing you

02:15:08.183 --> 02:15:14.249
to fix them quickly and easily.
The final part of the report

02:15:14.250 --> 02:15:16.861
highlights any security
vulnerabilities we find.

02:15:16.876 --> 02:15:20.010
This includes any versions of
third-party lie brer whiz known

02:15:20.496 --> 02:15:23.214
vulnerabilityies or if you've
accidentally followed any

02:15:23.215 --> 02:15:26.354
security anti-patterns.
Previously this information was

02:15:26.655 --> 02:15:30.387
only available after your app's
gone live.

02:15:30.417 --> 02:15:33.313
The prelaunch report brings all
this information together,

02:15:33.314 --> 02:15:35.649
telling you about these
potential issues, allowing you

02:15:35.852 --> 02:15:39.386
to fix them before your April
goes to production, ensureing

02:15:39.589 --> 02:15:43.715
that you and Google Play give
your users the best experience

02:15:43.936 --> 02:15:47.345
possible.
Now, I'd like to bring on stage

02:15:47.746 --> 02:15:49.872
Kobi Glick, product manager for
Google Play.

02:15:49.890 --> 02:15:51.890
Thank you.
[Applause.]

02:15:57.827 --> 02:16:00.170
&gt;&gt; KOBI GLICK:,000, miles.
Hi, I want to talk to you about

02:16:00.576 --> 02:16:03.809
beta testing.
Beta testing is the most popular

02:16:03.900 --> 02:16:06.622
feature on the Google Play
developer console.

02:16:07.139 --> 02:16:10.777
60 percent of the top 1,000 apps
on Google Play are running a

02:16:10.778 --> 02:16:15.291
beta test right now.
And users notice it.

02:16:15.305 --> 02:16:19.027
After trying the beta test have
higher rating on average.

02:16:19.044 --> 02:16:22.374
Last year we made it easier for
users to discover and join beta

02:16:22.598 --> 02:16:24.717
programs.
With open beta, it's as simple

02:16:24.922 --> 02:16:29.352
as clicking a URL.
We know that you love and use

02:16:29.666 --> 02:16:34.618
beta testing and we also get
feedback like you the one you

02:16:34.795 --> 02:16:38.450
see from Pocket how beta testing
allows them to connect to their

02:16:38.534 --> 02:16:41.464
users, get feedback on new ideas
and make sure the app is ready

02:16:41.480 --> 02:16:46.124
to go to production.
To make it even easier for users

02:16:46.328 --> 02:16:49.452
to discover and join beta
programs, we will allow users to

02:16:49.666 --> 02:16:53.169
join them directly from your
stories theing page on Google

02:16:53.182 --> 02:16:55.306
Play.
This will help you grow larger

02:16:55.923 --> 02:17:01.042
beta programs and connect to
more testers.

02:17:01.087 --> 02:17:04.696
Now, once you have beta testers
you want to get their feedback,

02:17:04.795 --> 02:17:06.704
right?
You used to get the feedback

02:17:06.705 --> 02:17:09.325
from various so forth and had to
parse a lot of information.

02:17:09.341 --> 02:17:12.572
We will allow users to give you
private feedback directly for

02:17:12.871 --> 02:17:15.092
Google Play.
This feedback is private.

02:17:15.114 --> 02:17:17.825
It goes only to you and you can
see it in the Google Play

02:17:17.826 --> 02:17:20.264
developer console.
Private means other users don't

02:17:20.465 --> 02:17:25.907
get to see it and it doesn't
impact your app star rating.

02:17:25.925 --> 02:17:29.148
Now, we believe that apps should
run in open beta test even

02:17:29.149 --> 02:17:33.400
before they go to production.
This is why we're introducing a

02:17:33.609 --> 02:17:37.827
new section called early access
on Google Play.

02:17:37.859 --> 02:17:40.465
This section will feature
exciting apps and games that are

02:17:40.576 --> 02:17:43.090
still in development or running
a beta test and haven't launched

02:17:43.310 --> 02:17:46.133
to production yet.
This will allow early adopters

02:17:46.437 --> 02:17:50.157
and influenceers to discover
those apps, try them out and

02:17:50.158 --> 02:17:53.996
give you valuable feedback, help
helping you find product market

02:17:54.409 --> 02:17:58.231
earlier and find you in your
games APIs.

02:17:58.263 --> 02:18:02.887
In our first collection, we have
28 apps and games, as you can

02:18:03.074 --> 02:18:07.321
see here.
With some pretty cool titles.

02:18:07.714 --> 02:18:12.874
For example, read feed, an
Android first online book club.

02:18:14.173 --> 02:18:17.823
Or Eva, the founder whose
parents and sisters are deaf,

02:18:18.224 --> 02:18:20.652
created this app to help deaf
people and people with hearing

02:18:20.845 --> 02:18:27.493
disabilities to participate in
real life conversations.

02:18:27.509 --> 02:18:30.245
We have Lego, the kids and
family power brand with the

02:18:30.246 --> 02:18:33.965
first-ever in-house mobile game.
It's a 3-D Lego set you can

02:18:33.966 --> 02:18:36.920
touch, twist and build just like
the brick sets we all grew up

02:18:37.027 --> 02:18:40.651
with.
This is not just for free to

02:18:40.652 --> 02:18:42.355
play tiles.
They have ear loan and gorgeous

02:18:42.356 --> 02:18:45.509
game evolved by lie media who
researched together with the

02:18:45.510 --> 02:18:49.138
Alaska Nateives is coming to
Google Play on early access as a

02:18:49.246 --> 02:18:52.371
premium title.
We are sure that those changes

02:18:52.672 --> 02:18:55.122
that we're making to beta
testing will help you grow even

02:18:55.516 --> 02:18:58.446
bigger beta programs, get
feedback from users, and make

02:18:59.355 --> 02:19:02.888
your AP staff and games even
more -- apps and games even more

02:19:03.096 --> 02:19:05.204
awesome.
Thank you.

02:19:05.232 --> 02:19:10.654
[Applause.]
I'd like to invited invite Wei

02:19:10.666 --> 02:19:15.103
Chai, a manager in Google Play.
[Applause.]

02:19:15.115 --> 02:19:19.633
&gt;&gt; WEI CHAI:  Thank you.
Hi.

02:19:19.659 --> 02:19:26.715
I'm here to talk about some new
feature for play apps discovery.

02:19:27.513 --> 02:19:31.758
Google Play is the primary
destination for discovering apps

02:19:32.162 --> 02:19:37.102
and games on Android.
Today, we provide various ways

02:19:37.502 --> 02:19:41.446
in the store to assist users in
finding new apps and to drive

02:19:41.957 --> 02:19:47.071
developer outcomes by helping
you get discovered.

02:19:47.108 --> 02:19:51.122
Recently, we've been developing
and experimenting with a new way

02:19:51.526 --> 02:19:57.967
for users to find new apps,
contextual app discovery.

02:19:57.998 --> 02:20:01.718
It targets underlying needs that
drive when and why you might

02:20:01.719 --> 02:20:06.040
need new apps.
This could be the ones in our

02:20:06.326 --> 02:20:12.292
everyday life such as learn
something new, plan a vacation

02:20:14.198 --> 02:20:20.150
or eat at home.
Our users study show that most

02:20:20.359 --> 02:20:23.461
users look for new apps at the
time they need them.

02:20:23.495 --> 02:20:28.325
Therefore, we want to explicitly
target the needs by building

02:20:28.326 --> 02:20:33.462
contextual collections of apps
so that users can find

02:20:33.463 --> 02:20:37.080
complementary apps needed at the
same time.

02:20:37.105 --> 02:20:41.745
It also makes it easier for
users to find apps or types of

02:20:42.352 --> 02:20:47.375
apps. they may not have heard of
before coming to play.

02:20:47.391 --> 02:20:52.153
For example, imagine a user is
searching for wallpaper or might

02:20:53.248 --> 02:20:56.265
recognize user is interested in
a broader need, personalize my

02:20:56.479 --> 02:21:00.813
phone, and show complimentary
apps, including not only

02:21:00.814 --> 02:21:07.576
wallpapers but also personalize
able keyboards, themes and ring

02:21:07.776 --> 02:21:14.124
tones.
Similarly, -- oh, let's take a

02:21:14.434 --> 02:21:17.370
look how it works.
We identify the underlying needs

02:21:18.358 --> 02:21:23.009
based on user searches, views,
contests and interests and show

02:21:23.504 --> 02:21:29.367
complimentary apps around the
need on such result pages as

02:21:29.368 --> 02:21:34.805
install pages or home pages
where it makes sense to do so.

02:21:39.525 --> 02:21:44.075
So another example.
If the user is at app install

02:21:44.298 --> 02:21:49.731
page for Trulia, maybe he or she
is buying a house and we'll show

02:21:49.938 --> 02:21:54.784
great other apps for finding
houses for sale, calculating

02:21:54.785 --> 02:21:59.904
your mortgage, and doing
interior design.

02:21:59.933 --> 02:22:04.360
If a user is traveling to San
Francisco, we might anticipate

02:22:04.544 --> 02:22:09.393
the user's needs for apps for up
upcoming trip and show a

02:22:09.394 --> 02:22:14.155
collection of relevant apps for
exploring San Francisco on the

02:22:14.355 --> 02:22:21.213
user's home page.
To further demonstrate the idea,

02:22:21.597 --> 02:22:26.057
if you look at your play store
home page now, for some of you

02:22:26.747 --> 02:22:30.290
based on your interest and
context we are showing a

02:22:30.291 --> 02:22:35.743
collection of apps called best
of Google I/O where you can find

02:22:35.934 --> 02:22:40.373
nominees of this year's Google
Play awards.

02:22:40.385 --> 02:22:42.385
Thank you.
[Applause.]

02:22:44.586 --> 02:22:48.746
Now I would like to introduce
Fergus Hurley, product manager

02:22:49.154 --> 02:22:53.896
of Google Play.
&gt;&gt; FERGUS HURLEY:  Thanks, Wei.

02:22:54.074 --> 02:22:58.328
Hi, everyone, my name is Fergus
Hurley, I'm protect product

02:22:58.329 --> 02:23:00.639
manager in Google Play I'm here
to talk about reviews.

02:23:00.704 --> 02:23:03.590
So, building on top of the
phenomenal engagement developers

02:23:04.797 --> 02:23:07.623
have had with the reply to
review functionality, we made a

02:23:07.626 --> 02:23:10.165
lot of changes on functionality
and play over the last few

02:23:10.166 --> 02:23:11.873
months.
We've added being able to see

02:23:11.874 --> 02:23:15.313
your ratings over time, be able
to see ratings breakdown across

02:23:15.706 --> 02:23:19.966
country, language, device.
Be able to see the device

02:23:19.967 --> 02:23:22.902
metadata for each individual
review so you would be able to

02:23:23.294 --> 02:23:25.916
understand what was the ram of
that user on that device?

02:23:25.934 --> 02:23:29.047
And even be able to search
within all the reviews.

02:23:29.078 --> 02:23:32.382
We've also enabled you to be
able to now get an email

02:23:32.383 --> 02:23:36.013
notification when user updates
their review after you've

02:23:36.014 --> 02:23:40.541
responded.
We also added highlights.

02:23:40.569 --> 02:23:44.388
These are snippets that users
see when they come to your app

02:23:44.686 --> 02:23:48.013
listing page on the play store.
And they can be able to see

02:23:48.014 --> 02:23:50.228
these to be able to make their
purchase decision.

02:23:50.263 --> 02:23:52.861
You will be able to see them in
the play developer console and

02:23:52.862 --> 02:23:55.311
you will be able to figure out
which ones are the ones you want

02:23:55.390 --> 02:23:58.013
to be able to invest in more and
be able to respond to the

02:23:58.014 --> 02:24:01.650
reviews that are happening in
those highlights.

02:24:01.666 --> 02:24:05.906
This year at I/O we announced
reviews analysis.

02:24:05.931 --> 02:24:07.931
Two parts.
First part is topics.

02:24:07.936 --> 02:24:11.246
Topics are unique words that are
relevant to your application.

02:24:11.557 --> 02:24:16.624
And we surface them, for
example, for this language

02:24:16.625 --> 02:24:23.055
learning app, cling on is thetic
the  the top topic.

02:24:23.079 --> 02:24:25.701
You can see there's a volume
distribution for each of these

02:24:25.924 --> 02:24:28.239
topics.
We even tell you what is the

02:24:28.240 --> 02:24:31.549
effect that each one of these is
having on your overall rating in

02:24:31.565 --> 02:24:38.517
the play store.
The next part of the reviews

02:24:38.518 --> 02:24:41.530
analysis is benchmarks.
Benchmarks shows you what are

02:24:41.547 --> 02:24:45.265
the common topics that people
talk about, your application,

02:24:45.578 --> 02:24:48.605
and nearly all other
applications on the play store.

02:24:48.886 --> 02:24:52.436
You can be able to see design,
stability, resource usage.

02:24:52.470 --> 02:24:56.075
And then you can be able to see
how you compare to the other

02:24:56.076 --> 02:25:01.016
apps in your category in the
play store.

02:25:01.046 --> 02:25:03.655
We also show you what is the
effect that each one of these

02:25:03.946 --> 02:25:07.258
common topics is having on your
rating in the play store.

02:25:07.276 --> 02:25:09.389
So you would be able to
prioritize your investment of

02:25:09.593 --> 02:25:12.028
your resources and even have
your team be able to go in and

02:25:12.235 --> 02:25:14.544
be able to read all the reviews
about design.

02:25:14.577 --> 02:25:17.669
For now, reviews analysis works
for English-only.

02:25:17.695 --> 02:25:20.505
And only when you have a certain
number of reviews that fall

02:25:20.506 --> 02:25:27.774
within these categories.
So, when we have all these

02:25:27.775 --> 02:25:30.309
reviews on the play store and we
have this ability to be able to

02:25:30.512 --> 02:25:34.344
do reviews analysis on all the
reviews, we said let's have a

02:25:34.448 --> 02:25:37.681
look at all the reviews and say
what are all the common topics

02:25:38.198 --> 02:25:43.422
that are impacting one star and
five star reviews so they can

02:25:43.425 --> 02:25:47.855
get a higher rating on Play?
We found across all the one star

02:25:48.064 --> 02:25:50.588
reviews that have a common topic
topic, 50 percent are about

02:25:50.589 --> 02:25:52.589
stability.
So really investing in building

02:25:52.712 --> 02:25:56.139
a high quality app that does not
crash is really important.

02:25:56.154 --> 02:26:00.293
We also found that for when you
want to get your app to 5 star

02:26:00.375 --> 02:26:03.013
app and you fix the stability
issues, really investing in

02:26:03.014 --> 02:26:06.040
design, performance and
usability and speed of your

02:26:06.041 --> 02:26:08.565
application is really, really
important because that results

02:26:09.291 --> 02:26:11.701
in 65 percent of the 5 star
reviews.

02:26:14.917 --> 02:26:19.057
We also launched at I/O this
year the reviews APIthis enables

02:26:19.356 --> 02:26:22.186
you to be able to respond to
your reviews on the play store

02:26:22.399 --> 02:26:25.637
with whatever work flow you use
yourself to be able to do

02:26:25.638 --> 02:26:29.576
customer support.
We partnered with Zen desk and

02:26:29.764 --> 02:26:32.495
conference social on this and
you can launch those tools today

02:26:33.593 --> 02:26:37.123
to be to start responding to
your play store reviews.

02:26:37.154 --> 02:26:41.180
Now I'm going hand it over to
Riccardo Govoni who is the

02:26:41.181 --> 02:26:43.222
engineering manager on Play.
[Applause.]

02:26:47.213 --> 02:26:49.213
&gt;&gt; RICCARDO GOVONI:  Hello.
So today I'm here to give you

02:26:49.347 --> 02:26:52.777
tips on how you can better
understand who your users are

02:26:53.188 --> 02:26:57.028
and where they come from.
You're probably familiar with

02:26:57.224 --> 02:26:59.650
user acquisition report that we
launched in the play developer

02:27:00.050 --> 02:27:04.794
console last year that tells you
how many visitors installed your

02:27:05.005 --> 02:27:08.540
app and converted into buyers.
And it does so by breaking the

02:27:08.839 --> 02:27:11.056
information down by acquisition
channel.

02:27:11.081 --> 02:27:14.295
So you know how many people
discovered your app organic in

02:27:14.309 --> 02:27:16.437
the play store versus coming
from different channels like

02:27:16.438 --> 02:27:20.953
your website or AdWords
campaigns.

02:27:20.979 --> 02:27:23.103
Over the past year we received
great feedback about this

02:27:23.104 --> 02:27:25.509
feature, like this one from
Trulia.

02:27:25.531 --> 02:27:27.744
And it helped many developers
like you optimize your business

02:27:27.946 --> 02:27:31.674
in Play.
So you'll be happy to hear that

02:27:31.887 --> 02:27:35.919
we recently announce ad new
feature being able to measure

02:27:36.212 --> 02:27:38.246
your user acquisition
performance at the country level

02:27:38.434 --> 02:27:39.759
level.
And this is great when you're

02:27:39.760 --> 02:27:42.389
entering new markets like
emerging ones like Brazil or

02:27:42.390 --> 02:27:47.124
India and really optimize your
app experience for all your

02:27:47.125 --> 02:27:51.354
users across the world.
But optimizing your business

02:27:51.355 --> 02:27:55.794
performance in isolation is not
really that helpful.

02:27:55.823 --> 02:27:58.344
How do you know, for example, if
you look at your organic

02:27:58.345 --> 02:28:02.356
conversion rate if it is as good
as it could be?

02:28:02.382 --> 02:28:04.117
If you're leaving opportunities
on the table.

02:28:04.118 --> 02:28:07.624
So right now it's not that easy.
But we're about to make it a lot

02:28:08.044 --> 02:28:11.275
better.
So, soon, we will be launching

02:28:11.966 --> 02:28:15.700
another great feature,
benchmarks against your peers.

02:28:15.888 --> 02:28:22.360
So you will be able to compare
how your listing conversion rate

02:28:22.544 --> 02:28:25.470
is against similar apps in your
category.

02:28:25.484 --> 02:28:29.434
First, we'll provide an overall
benchmark about your organic

02:28:29.435 --> 02:28:32.760
user acquisition performance.
And this will give you an

02:28:32.761 --> 02:28:37.008
indication on how your tool
listing is performing globally.

02:28:37.293 --> 02:28:41.045
But, more, you will be also able
to measure your user acquisition

02:28:41.470 --> 02:28:43.874
performance at the country level
against the benchmark at that

02:28:44.200 --> 02:28:46.814
level.
For example, here you can see

02:28:47.214 --> 02:28:51.059
that our app is getting some
traction in Korea, but at

02:28:51.060 --> 02:28:53.664
24 percent, we are lagging
behind the benchmark.

02:28:53.681 --> 02:28:56.206
This is a moment where maybe you
want to review the quality of

02:28:56.906 --> 02:28:59.546
your listing translations or
consider localizeing your assets

02:29:00.853 --> 02:29:03.996
.
We'll also give you an

02:29:03.997 --> 02:29:07.321
indication on how you're
progressing against the

02:29:07.322 --> 02:29:09.446
benchmark so you know if you
still have room for improvement

02:29:09.749 --> 02:29:14.374
or if you're really aMong the
best and aim for the top.

02:29:14.399 --> 02:29:17.321
And when you're ready to take
action, play developer console

02:29:17.614 --> 02:29:20.559
has plenty of features to help
you optimize your tool listing

02:29:21.157 --> 02:29:25.813
performance and your original
success such as tool listing

02:29:25.814 --> 02:29:29.124
experiments and we'll offer
experiences about those right

02:29:29.322 --> 02:29:33.758
next to the benchmarking results
when relevant.

02:29:33.789 --> 02:29:36.295
So this is everything I have for
you today.

02:29:36.311 --> 02:29:41.228
I believe that we've with
counter, and with benchmarks you

02:29:41.243 --> 02:29:46.374
will be able to -- benchmarks
will roll Ucountry breakdowns is

02:29:46.595 --> 02:29:49.218
already there.
Benchmarks will roll out in a

02:29:49.235 --> 02:29:54.060
couple weeks.
I want to introduce Mona Mona

02:29:54.075 --> 02:29:56.775
Vajolahni.
Thank you.

02:29:56.798 --> 02:29:58.313
[Applause.]
&gt;&gt; MONA VAJOLAHNI:  Thanks,ry

02:29:58.314 --> 02:30:00.247
Ricardo.
I'm here to talk about what

02:30:00.248 --> 02:30:04.056
we're doing in Google Play for
the next billion users.

02:30:04.082 --> 02:30:07.589
Android is growing really fast
in emerging markets.

02:30:07.613 --> 02:30:12.750
By 2018, we expect 1.2 billion
new Android users to come online

02:30:13.158 --> 02:30:16.483
in emerging markets.
In Google Play, we have been

02:30:16.484 --> 02:30:20.434
working really hard to make sure
those users have a great

02:30:20.435 --> 02:30:22.450
experience, especially given
some of the infrastructure

02:30:22.451 --> 02:30:27.902
challenges in those markets.
One key pillar is to have a

02:30:27.903 --> 02:30:31.633
product and an ecosystem of apps
that work well on slow

02:30:31.634 --> 02:30:34.650
connections and on low end
devices.

02:30:34.675 --> 02:30:38.309
Our user studies have shown over
and over again that connectivity

02:30:38.705 --> 02:30:42.040
and data challenges affect all
users in emerging markets

02:30:42.041 --> 02:30:45.874
regardless of where they live or
how much money they make.

02:30:45.899 --> 02:30:48.292
Connectivity challenges are here
to stay.

02:30:48.318 --> 02:30:54.249
By 2020, still 300 million users
in India will be on connection

02:30:54.747 --> 02:30:56.502
times that are equivalent of 2 G
G.

02:30:56.503 --> 02:31:00.715
And even then when WiFi is
available, it's often patchy and

02:31:01.138 --> 02:31:04.166
unreliable unreliable.
So one of the key areas of focus

02:31:05.189 --> 02:31:09.118
for us in Google Play has been
to build an experience that is

02:31:09.513 --> 02:31:13.542
fast, lightweight and reliable
where every user, regardless of

02:31:13.735 --> 02:31:17.996
their connection type, can find
and download apps that meet

02:31:17.997 --> 02:31:22.213
their needs.
Over the past year, we have

02:31:22.214 --> 02:31:26.962
optimized the performance of the
play store app and they did much

02:31:27.166 --> 02:31:29.493
faster on 2 G.
We have also reduced the amount

02:31:29.686 --> 02:31:32.931
of data used by the store itself
for key activities like

02:31:32.932 --> 02:31:35.743
downloading apps and uploading
apps.

02:31:35.765 --> 02:31:38.766
These changes have brought more
users to the store.

02:31:38.794 --> 02:31:45.329
They visit the store more often.
And they download more apps.

02:31:45.375 --> 02:31:49.384
We also know that our users
everywhere, especially in

02:31:49.385 --> 02:31:53.824
emerging markets, want to store
experience that reflect the

02:31:53.825 --> 02:31:56.650
local interest and the needs of
their country and their region.

02:31:56.951 --> 02:31:59.775
We've been working closely with
local developers in markets like

02:31:59.996 --> 02:32:04.027
India and Brazil to make sure
those apps reach their local

02:32:04.028 --> 02:32:07.955
audience in the store.
In addition, we have been super

02:32:08.075 --> 02:32:11.509
charging our editorial content
in the store to make sure users

02:32:11.794 --> 02:32:16.544
are able to easily find locally
relevant apps that meet the

02:32:16.545 --> 02:32:20.469
needs of different segments of
user in the market.

02:32:20.486 --> 02:32:25.011
And with that, I'd like to bring
up to stage.

02:32:25.023 --> 02:32:29.251
&gt;&gt; KUNAL SONI:  Who is the head
of business games in southeast

02:32:29.259 --> 02:32:30.683
Asia.
Thank you.

02:32:30.684 --> 02:32:34.809
[Applause.]
&gt;&gt; KUNAL SONI:  Thanks, Mona.

02:32:34.901 --> 02:32:37.947
Hi, everyone, I'm her to talk to
you about creating great quality

02:32:38.155 --> 02:32:40.856
apps that will work effectively
not just for smartphone users

02:32:41.076 --> 02:32:44.604
today but also for the next
billion users as they get

02:32:44.605 --> 02:32:49.076
connected in the years to come.
We were seeing incredible

02:32:49.077 --> 02:32:51.370
momentum in emerging markets all
around the world.

02:32:51.386 --> 02:32:53.512
They're expected to account for
80 percent of total smartphone

02:32:54.216 --> 02:32:58.043
growth globally.
In order to be relevant and

02:32:58.044 --> 02:33:00.774
successful in these markets,
it's important for us to design

02:33:02.285 --> 02:33:05.423
the right app experience aimed
at solving three important

02:33:05.424 --> 02:33:08.137
challenges.
Firstly

02:33:11.275 --> 02:33:14.094
, while 4 G and LT
LTspevment and other network

02:33:14.095 --> 02:33:17.543
technologies will grow fast,
they will still be 1 billion

02:33:17.544 --> 02:33:22.265
mobile Internet users in 2020
who will be on 2 G.

02:33:22.284 --> 02:33:26.204
That's a sizable segment for you
to think about and solve for.

02:33:26.806 --> 02:33:31.258
Secondly, mobile data speeds
vary a lot across markets,

02:33:31.259 --> 02:33:35.294
requiring you to tailor the app
experience accordingly.

02:33:35.319 --> 02:33:40.150
And, finally, data is expensive
relative to income levels in

02:33:40.151 --> 02:33:42.759
several markets.
And therefore helping your users

02:33:43.076 --> 02:33:47.901
manage their data costs should
be an important priority.

02:33:47.933 --> 02:33:51.446
In order to help you tackle
these challenges and support

02:33:51.447 --> 02:33:54.689
your growth, we've identified a
set of tools and best practices

02:33:55.404 --> 02:33:59.025
that we believe can help you.
This is what is called the

02:33:59.026 --> 02:34:02.454
building for billions framework
focused on three important areas

02:34:03.153 --> 02:34:08.185
areas:  Connectivity, device
compatibility, and data cost.

02:34:08.705 --> 02:34:11.924
By the way, what I'm covering
here is by no means limited to

02:34:12.245 --> 02:34:14.978
emerging markets.
These principles will apply

02:34:14.979 --> 02:34:18.216
equally well across the world.
Let's start by looking at

02:34:18.217 --> 02:34:21.354
connectivity.
In order to optimize for un

02:34:21.355 --> 02:34:24.185
unreliable or intermittent
connectivity, ensure that your

02:34:24.576 --> 02:34:28.620
app prioritizes bandwidth
requests, fetching text before

02:34:28.816 --> 02:34:32.954
rich media or data.
Ensure that you offer a great

02:34:33.464 --> 02:34:35.885
offline experience so that all
your users can interact with the

02:34:36.286 --> 02:34:42.236
app at all times regardless of a
connectivity using cacheed data.

02:34:44.234 --> 02:34:47.487
Let's talk about devices.
Many devices in emerging markets

02:34:47.795 --> 02:34:50.609
have smaller, lower resolution
screens.

02:34:50.631 --> 02:34:54.556
In order to ensure a seamless
user experience across devices,

02:34:54.846 --> 02:34:59.384
use density independent pixels
while defineing app layouts.

02:34:59.408 --> 02:35:02.946
Ensure that your graphics and
text work well on low and medium

02:35:03.134 --> 02:35:06.982
density screens.
And adjust your memory for print

02:35:07.566 --> 02:35:10.396
dynamically to ensure
compatibility across devices

02:35:10.397 --> 02:35:14.122
with different ram
configurations.

02:35:14.151 --> 02:35:16.952
Finally, let's talk about data
costs.

02:35:16.975 --> 02:35:20.285
The first cost your users will
incur will be related to the

02:35:20.286 --> 02:35:22.226
cost of installation of your app
app.

02:35:22.227 --> 02:35:26.154
And, therefore, it's important
to keep a tight focus on

02:35:26.155 --> 02:35:30.701
reducing the AP gate size.
Ideally well below 10 megabytes.

02:35:30.997 --> 02:35:34.733
In order to accomplish this, you
should reduce the number and

02:35:34.734 --> 02:35:39.576
size of images within the APK 
APK using tools like web P and

02:35:39.781 --> 02:35:45.953
scalable vector graphics or SVG.
You can shrink the code size of

02:35:46.125 --> 02:35:50.374
APK using tools such as pro
guard which removes unused code.

02:35:50.561 --> 02:35:54.322
And, finally, you can consider
multiAPK as an option to create 

02:35:54.531 --> 02:35:57.967
create APKs split by density so
that users target the right

02:35:57.968 --> 02:36:00.875
version of the app that
specifically targets their

02:36:00.876 --> 02:36:05.214
device density.
With that, we come to the end of

02:36:05.514 --> 02:36:07.154
my session.
If you're interested to know

02:36:07.155 --> 02:36:10.287
more, do join us for the session
on building for billions in

02:36:10.288 --> 02:36:16.016
Android today at 3 p.m.
Next, I'd like to invite Milena

02:36:16.031 --> 02:36:20.056
Nikolic, manager on Google Play.
Thank you.

02:36:20.075 --> 02:36:24.915
[Applause.]
&gt;&gt; MILENA NIKOLIC:  Thanks, cun

02:36:24.996 --> 02:36:30.571
cunnal cun cunnal  Kunal.
I'm here to talk to you about

02:36:31.370 --> 02:36:34.512
play console app.
Yes, we have finally launched an

02:36:34.813 --> 02:36:36.813
Android app for Google Play
console.

02:36:36.828 --> 02:36:38.240
Thank you.
[Applause.]

02:36:38.241 --> 02:36:40.241
Thank you.
We have to admit that it took us

02:36:40.367 --> 02:36:42.279
a while.
It took us much longer than it

02:36:42.280 --> 02:36:44.701
took you guys.
But we've made it.

02:36:44.729 --> 02:36:47.526
And we can tell you this app
stuff is pretty sweet.

02:36:47.546 --> 02:36:53.485
We really like it now.
Our new app can help you follow

02:36:53.686 --> 02:36:57.339
the performance of your app on
Google Play and do time critical

02:36:57.844 --> 02:37:01.073
actions on the go.
When you're rapidly iterating,

02:37:01.468 --> 02:37:04.497
you need a powerful tool that's
in your pocket all the time.

02:37:04.520 --> 02:37:07.947
And we've built play console app
exactly with those use cases in

02:37:08.354 --> 02:37:11.088
mind.
Whether you're looking to

02:37:11.089 --> 02:37:13.915
quickly reply to user review or
to show off the performance of

02:37:14.121 --> 02:37:17.142
your app when running to a
meeting, play console app should

02:37:17.146 --> 02:37:22.296
be there to support you.
Regarding an initial feature set

02:37:22.591 --> 02:37:25.520
set, obviously you can check
installs and uninstalled of your

02:37:25.715 --> 02:37:28.263
app and you can break them down
based on the number of different

02:37:28.470 --> 02:37:32.402
dimensions including country,
device, app version and much

02:37:32.403 --> 02:37:34.604
more.
In addition to that, you can

02:37:34.605 --> 02:37:38.967
check out crash reports,
including hourly data and full

02:37:39.263 --> 02:37:42.296
stack races.
You can also follow your app's

02:37:42.495 --> 02:37:45.823
ratings and reviews and you can
reply to reviews.

02:37:45.858 --> 02:37:49.170
You can also follow the state of
your release as it moves from

02:37:49.465 --> 02:37:52.185
beta through stage rollout all
the way to production and much

02:37:52.293 --> 02:37:55.814
more.
Oh, also you can get push

02:37:55.815 --> 02:37:58.446
notifications when something
important happens with your app.

02:37:58.734 --> 02:38:04.671
For example, when your app
update goes live.

02:38:04.685 --> 02:38:08.030
App is now available in Google
Play Nthe last 24 hours since we

02:38:08.440 --> 02:38:12.152
launched it, more than 10,000
developers installed it and

02:38:12.153 --> 02:38:14.153
rated it at

02:38:16.884 --> 02:38:18.899
 4.85 stars on
average.

02:38:18.921 --> 02:38:22.648
If you're not among those 10,000
developers, please go and

02:38:22.649 --> 02:38:24.971
install it.
We think you'll find it very use

02:38:25.178 --> 02:38:27.575
useful.
Also, we are very keen to hear

02:38:27.993 --> 02:38:31.014
your feedback, so please send us
any feedback that you have.

02:38:31.039 --> 02:38:33.446
We plan to work on it.
We plan to add much more

02:38:33.447 --> 02:38:36.355
functionality in the next couple
of versions.

02:38:36.377 --> 02:38:39.015
And if you're still not
convinced, please do come visit

02:38:39.102 --> 02:38:42.446
us in the play sandbox where you
can see it in action for

02:38:42.447 --> 02:38:43.854
yourself.
Thank you.

02:38:43.855 --> 02:38:45.855
[Applause.]

02:38:48.374 --> 02:38:55.730
Next I would like to invite sure
sure sure and Shobani Ravi.

02:38:55.759 --> 02:39:02.402
&gt;&gt; Thanks, Milena.
We showed you the keynote

02:39:02.403 --> 02:39:04.325
yesterday.
Today I want to talk to you

02:39:04.326 --> 02:39:07.233
about how to build Android
instant apps and the new

02:39:07.234 --> 02:39:08.799
opportunities this could open up
up.

02:39:08.800 --> 02:39:11.389
First, let's do a quick recap of
the announcement yesterday for

02:39:11.407 --> 02:39:17.158
those of you who weren't around.
So, Android instant answer apps

02:39:17.345 --> 02:39:20.472
lets you access apps by simply
tap tapping on links even if you

02:39:20.475 --> 02:39:24.620
don't have the app installed.
As a developer e, this means

02:39:24.621 --> 02:39:27.951
that this is just at upgrade to
your existing Android app.

02:39:27.963 --> 02:39:32.404
This is not a new separate app.
It's with Andrew jelly bean and

02:39:32.594 --> 02:39:35.211
up and will reach over a billion
users.

02:39:35.224 --> 02:39:37.734
Now, we understand that this is
a big change and we want to get

02:39:37.860 --> 02:39:40.680
it right so we will be rolling
this out gradually to both users

02:39:40.966 --> 02:39:44.203
and developers over the next
year.

02:39:44.224 --> 02:39:47.156
So let's talk about how you'd up
upgrade your app to run

02:39:47.157 --> 02:39:50.977
instantly.
As a developer, you start by

02:39:50.978 --> 02:39:54.011
telling us the links to your
domain that your app can open.

02:39:54.309 --> 02:39:57.655
This is really easy to do with
Android app links which we

02:39:57.656 --> 02:40:00.786
announced last year.
Next, if your app is really big,

02:40:00.993 --> 02:40:04.015
you may want to consider
splitting it into modules.

02:40:04.036 --> 02:40:06.854
This allows Google Play to
download only the parts of the

02:40:07.061 --> 02:40:12.094
app that are required on the fly
when the user taps on the link.

02:40:12.796 --> 02:40:16.836
Next, we think that users may
have slightly different

02:40:16.837 --> 02:40:20.465
expectations of what an app can
do when it's running instantly.

02:40:20.669 --> 02:40:23.814
So instant apps will not have
access to some capabilities,

02:40:23.815 --> 02:40:26.431
like creating a home screen
widget.

02:40:26.468 --> 02:40:30.686
Finally, we're building a whole
new set of features for instant

02:40:30.874 --> 02:40:33.603
apps that we want you to take
advantage of.

02:40:33.631 --> 02:40:36.134
My favorite is run time
permissions.

02:40:36.161 --> 02:40:39.466
Android instant apps will use
run time permissions going all

02:40:39.480 --> 02:40:45.754
the way back to jelly bean.
Now, I want to talk a little

02:40:45.755 --> 02:40:49.354
about some new opportunities
that instant apps could open up.

02:40:49.759 --> 02:40:52.605
We've hacked together a couple
of fun demos that I want to show

02:40:52.810 --> 02:40:55.946
you as fun examples.
Can we switch to the demo feed,

02:40:56.134 --> 02:40:59.261
please?
Okay.

02:40:59.285 --> 02:41:03.513
So instant apps lets you deliver
the same rich and immerseive

02:41:03.514 --> 02:41:06.325
experiences to both users who
have installed your app and the

02:41:06.543 --> 02:41:09.875
ones who haven't.
So the demo here is, my buddy

02:41:10.370 --> 02:41:12.878
Jay created this really cool
photo sharing app.

02:41:12.904 --> 02:41:17.139
It can capture panoramas and
display them in a really unique

02:41:17.257 --> 02:41:19.257
way.
Now, he sent me a picture that

02:41:19.376 --> 02:41:23.918
he captured on his app that he
captured at match you pitch you.

02:41:24.196 --> 02:41:28.035
I really want to see the picture
that he installed shared, but

02:41:28.354 --> 02:41:31.077
I'm not sure I want to install
the app yet.

02:41:31.094 --> 02:41:33.298
With instant app, this is not a
problem.

02:41:33.315 --> 02:41:37.747
All I have to do is tap a link.
With one tap, the app opens up,

02:41:38.150 --> 02:41:41.086
instantly deep linked right to
the panorama that Jake shared.

02:41:41.376 --> 02:41:48.760
It even uses the sensors on the
phone to pan the image as

02:41:48.761 --> 02:41:52.071
Shobana moves the device.
Isn't that amazing?

02:41:52.114 --> 02:41:55.298
[Applause.]
Thank you.

02:41:55.311 --> 02:41:58.344
At the other end of the spectrum
spectrum, instant apps also lets

02:41:58.545 --> 02:42:01.560
you create very lightweight
answer that don't even have to

02:42:01.768 --> 02:42:05.291
take the user out of con text to
what they were doing.

02:42:05.322 --> 02:42:08.121
Shobana and I recently made
plans to go to a concert.

02:42:08.156 --> 02:42:13.375
So I booked my tickets, it was a
shins concert and sent her a

02:42:13.376 --> 02:42:15.712
message asking her to book hers.
She doesn't have the ticketing

02:42:16.104 --> 02:42:18.746
app on her phone.
When she taps the link, the app

02:42:18.847 --> 02:42:21.077
opens up instantly.
But it didn't open up as a full

02:42:21.478 --> 02:42:25.310
screen app.
It opened up just as a dialogue.

02:42:25.393 --> 02:42:27.718
It is all the information she
needs prefilled.

02:42:27.748 --> 02:42:29.243
Her seats are right next to mine
mine.

02:42:29.244 --> 02:42:32.173
And with Android pay, it's one
tap to pay.

02:42:32.201 --> 02:42:36.512
All of this while the hangouts
app is still in the background.

02:42:37.313 --> 02:42:43.259
[CHEERS AND APPLAUSE]
Shobana -- thank you.

02:42:43.287 --> 02:42:45.588
Shobana didn't have to leave her
conversation with me to buy

02:42:45.589 --> 02:42:47.589
these tickets.
This can be really interesting

02:42:47.609 --> 02:42:51.244
if you want to help the user
complete a simple task with as

02:42:51.637 --> 02:42:54.779
little friction as possible.
So those are the two examples

02:42:55.175 --> 02:42:59.636
that we have for you today.
Can we switch back, please?

02:43:04.353 --> 02:43:07.595
Can we switch back to the slides
slides?

02:43:15.730 --> 02:43:18.668
We'll be just a moment.
Perfect.

02:43:18.692 --> 02:43:21.594
I wanted you to see the URL so
you can learn more.

02:43:21.618 --> 02:43:26.432
So if you go to the website, you
can learn more.

02:43:26.465 --> 02:43:28.967
There's a signup form if you're
interested in upgrading your app

02:43:29.293 --> 02:43:34.135
to run instantly.
With that, I'd like to introduce

02:43:34.527 --> 02:43:37.555
Purnima Kochikar who leads the
business develop development

02:43:37.556 --> 02:43:39.509
team on stage.
Thank you.

02:43:39.510 --> 02:43:44.637
[Applause.]
&gt;&gt; PURNIMA KOCHIKAR:  Thank you.

02:43:45.729 --> 02:43:47.744
How many think that instant apps
are amazing.

02:43:47.756 --> 02:43:51.389
[CHEERS AND APPLAUSE]
You know, I have been so excited

02:43:51.495 --> 02:43:53.406
excited.
I was in Uber this morning and

02:43:53.407 --> 02:43:57.749
it was on the radio.
And I was like thrilled to bits.

02:43:57.842 --> 02:44:01.479
Good morning, everyone.
I am Purnima Kochikar and I work

02:44:01.667 --> 02:44:05.728
for you.
My team and I have the great

02:44:05.729 --> 02:44:08.946
privilege to work with each and
every one of you to help you

02:44:08.947 --> 02:44:15.090
build successful businesses on
Google Play Google Play.

02:44:15.106 --> 02:44:21.155
Android powers increasingly new
screens across new markets,

02:44:21.156 --> 02:44:23.667
empowering people across the
world.

02:44:23.690 --> 02:44:30.040
And it is this scale that allows
Google Play to provide you the

02:44:30.453 --> 02:44:35.282
largest app distribution
platform in the world.

02:44:35.312 --> 02:44:42.433
Let's look at some numbers.
In 2015, 1 billion monthly

02:44:42.434 --> 02:44:51.620
active users across 190
countries drove 65 billion

02:44:51.621 --> 02:44:55.456
installs on Google Play.
[Applause.]

02:44:55.485 --> 02:45:02.121
Mind boggling, isn't it?
In 2015, the number of game

02:45:02.122 --> 02:45:07.982
developers who had a game with
more than 1 million installs

02:45:07.983 --> 02:45:12.704
grew by over 50 percent, which
means more people are being

02:45:12.705 --> 02:45:15.540
successful.
And if you look back and you say

02:45:15.934 --> 02:45:19.374
okay, there is installs.
There is more installs per game,

02:45:19.589 --> 02:45:23.825
but are we making money?
In 2015, the average spend per

02:45:24.829 --> 02:45:32.064
user across Play grew by over
30 percent when compared to

02:45:32.065 --> 02:45:34.401
2014.
So as you can see, we have a

02:45:34.402 --> 02:45:39.854
very thriving community waiting
for the things that you create .

02:45:39.951 --> 02:45:42.971
These are incredibly impressive
numbers.

02:45:43.002 --> 02:45:48.923
But none of it would be possible
without you, our developer

02:45:48.924 --> 02:45:50.924
community.

02:45:53.841 --> 02:46:00.404
So, where I sit on a daily basis
basis, we see developers across

02:46:00.420 --> 02:46:06.374
the world, big and small,
creating apps that change lives

02:46:07.178 --> 02:46:12.215
and games that delight.
Each day, my team and I are

02:46:12.216 --> 02:46:16.450
inspired and humbled by how you
are taking your personal

02:46:16.451 --> 02:46:21.681
passions and converting them
into successful businesses.

02:46:21.695 --> 02:46:26.822
I hope the video thately shared
with you was as inspirational to

02:46:26.825 --> 02:46:32.190
you as it is to us.
Over the last year, we connected

02:46:33.105 --> 02:46:38.854
with 1 million of you across
various channels to help you

02:46:38.855 --> 02:46:43.292
understand and access the tools
we are building as well as to

02:46:43.580 --> 02:46:45.611
tell you about the market
opportunities that are there in

02:46:45.619 --> 02:46:49.564
front of you.
You heard today emerging markets

02:46:49.764 --> 02:46:52.690
markets, new ways to build your
business, all these tools really

02:46:52.874 --> 02:46:58.731
help you build your business.
Now here's the interesting thing

02:46:59.235 --> 02:47:04.779
thing:  Each of those instances
we learned, we figured out how

02:47:04.790 --> 02:47:08.418
to improve our products.
So I hope you will take the time

02:47:08.431 --> 02:47:12.977
to visit us in the sandbox to
tell us how we can do things

02:47:12.978 --> 02:47:15.186
better.
And I'm also excited to see what

02:47:15.478 --> 02:47:18.320
you will do with the new
capabilities that we have

02:47:18.321 --> 02:47:22.954
announced today.
We also used this opportunity to

02:47:23.172 --> 02:47:24.881
get you connected with each
other.

02:47:24.882 --> 02:47:28.809
How many of you are sitting with
people that you already know?

02:47:30.012 --> 02:47:33.566
Should you be?
So I hope you take this

02:47:33.567 --> 02:47:37.590
opportunity to really step out
and meet each other, understand

02:47:37.905 --> 02:47:40.316
what everybody's doing.
There are people from around the

02:47:40.516 --> 02:47:44.947
globe here today.
It is a unique opportunity.

02:47:44.965 --> 02:47:51.623
And therefore I am extremely
excited to announce the very

02:47:51.624 --> 02:47:57.855
first Google Play awards this
evening, 7 p.m. at stage 7.

02:47:57.886 --> 02:48:01.372
You can't forget that.
7 p.m. at stage 7.

02:48:01.407 --> 02:48:06.837
So please come to see the great
apps and games that are being

02:48:07.136 --> 02:48:09.542
showcaseed.
Get inspired.

02:48:09.568 --> 02:48:13.498
Join us.
Thank you very much for coming.

02:48:13.681 --> 02:48:16.305
And here's how you can keep in
touch with us.

02:48:16.333 --> 02:48:18.432
We hope to see you this evening
at 7 p.m.

02:48:18.448 --> 02:48:20.448
Thank you.
[Applause.]

02:48:23.277 --> 02:48:25.277
[Music.]

03:54:53.613 --> 03:54:56.718
    (Please stand by.  The sessi
on Search and the 

03:54:56.719 --> 03:54:58.238
 Mobile Content Ecosystem will b
egin at the top of the 

03:54:58.239 --> 03:55:00.239
 hour.)

04:07:14.194 --> 04:07:19.487
    (Please stand by.  The 
session Search and the 

04:07:19.488 --> 04:07:21.488
 Mobile Content Ecosystem will b
egin momentarily.)

04:08:57.599 --> 04:09:02.400
    (Applause.)
    &gt;&gt; Good afternoon.  I'm 

04:09:02.401 --> 04:09:07.005
Richard Gingras, head of 
 News@Google.  In my job I spend

04:09:07.006 --> 04:09:10.896
 a lot of time working 
 with publishers and partners a

04:09:11.100 --> 04:09:15.296
round the world.  It is 
 such a pleasure to be here atio

04:09:15.789 --> 04:09:20.715
 with so many of you 
 in this exquisite space.  I 

04:09:20.716 --> 04:09:24.421
wanted to be on this 
 stage my entire life.

04:09:24.422 --> 04:09:27.006
    (Cheering.)
    &gt;&gt; RICHARD GINGRAS:  As you 

04:09:27.007 --> 04:09:30.111
probably noticed, I'm 
 not 27.  So what is the lesson 

04:09:30.328 --> 04:09:38.312
in that?  Don't give  Don't ever
 give up!    

04:09:38.313 --> 04:09:43.289
    (Laughter.)
    (Cheers and applause.)

04:09:43.290 --> 04:09:45.506
    &gt;&gt; RICHARD GINGRAS:  Google 
as you know has apply     

04:09:45.507 --> 04:09:49.405
 applied great focus on people 
who use Google to ur content and

04:09:49.406 --> 04:09:52.594
 your brands.  We continue 
 to evolve our understanding of 

04:09:52.915 --> 04:09:55.612
users and their 
 intentions and interests and 

04:09:55.911 --> 04:09:58.397
then connecting those 
 users to the highest quality 

04:09:58.709 --> 04:10:02.608
third-party content in 
 services.  We are proud of our 

04:10:03.203 --> 04:10:05.708
symbiotic relationship 
 with publishers enable ing 

04:10:05.894 --> 04:10:08.130
users to benefit from your 
 products.

04:10:08.131 --> 04:10:12.210
    It is the Web's rich ecosy
stem of knowledge that 

04:10:12.608 --> 04:10:15.418
 allows products like Google 
search to have relevance 

04:10:15.727 --> 04:10:17.928
 and value.
    And it is the open platform 

04:10:17.929 --> 04:10:22.726
of the Web that allows 
 publishers to easily reach out 

04:10:23.216 --> 04:10:26.526
to new audiences.  In 
 that sense I believe that 

04:10:26.821 --> 04:10:31.826
Google and publishers share 
 a common cause.  We both desire

04:10:31.827 --> 04:10:35.304
 a rich and open 
 ecosystem for media 

04:10:35.603 --> 04:10:37.603
distribution.

04:10:39.924 --> 04:10:43.129
    Today we all have s
martphones in our pockets, 

04:10:43.130 --> 04:10:45.515
 smart TVs in our living rooms 
and increasingly 

04:10:45.618 --> 04:10:50.820
 computers on our wrists and 
cars, woven into the very 

04:10:50.821 --> 04:10:55.231
 fabric of our lives.  People 
come to Google billions times 

04:10:55.232 --> 04:10:58.071
each day to fulfill their daily 
information 

04:10:58.072 --> 04:11:02.227
 needs, whether that's catching 
up on the Presidential 

04:11:02.228 --> 04:11:06.340
 election, finding near by 
concerts or if it's me, 

04:11:06.341 --> 04:11:09.829
 discovering a recipe for a new 
cocktail.  Primarily 

04:11:09.830 --> 04:11:13.025
 these needs are fulfilled on 
mobile.  In fact more 

04:11:13.026 --> 04:11:15.424
 Google Searches take place on 
mobile than on the 

04:11:15.425 --> 04:11:19.206
 desktop.  The mobile momentum, 
as you all know, is 

04:11:19.207 --> 04:11:21.811
 only increasing.
    By some projections the 

04:11:21.812 --> 04:11:26.427
world will have 5 billion 
 people accessing the Internet 

04:11:27.131 --> 04:11:29.716
by 2020.  5 billion 
 people.  From the coffee farmer

04:11:29.717 --> 04:11:33.633
 in Kenya to the high 
 school student in thigh land to

04:11:33.634 --> 04:11:37.334
 my geek friends in 
 this space with half a dozen 

04:11:37.537 --> 04:11:40.816
smart devices.
    We are building Search to 

04:11:40.817 --> 04:11:43.924
meet their daily needs.  
 We want all of these users to 

04:11:43.925 --> 04:11:46.315
have a great Search 
 experience so that they can 

04:11:46.518 --> 04:11:49.232
discover and engage with 
 your content.

04:11:49.233 --> 04:11:52.878
    If you are a publisher, 
Search, I'm guessing, is 

04:11:52.879 --> 04:11:56.240
probably a pretty important s
ource of traffic.  As 

04:11:56.522 --> 04:11:59.931
 the next billion come online it
 is only going to 

04:12:00.202 --> 04:12:03.528
 become more important.
    But before I tell you about 

04:12:03.529 --> 04:12:07.114
all the things that 
 Google can do today, let's take

04:12:07.115 --> 04:12:10.141
 a step back and 
 remember how Google started.  

04:12:11.533 --> 04:12:14.824
Remember 1998?  You  one of 
these sitting in your house.  

04:12:15.626 --> 04:12:17.626
You 
 go to Google.com on this 

04:12:18.016 --> 04:12:20.819
monster machine, type in a 
 few words and you would get 

04:12:21.013 --> 04:12:23.823
links to relevant 
 websites.  At the time the 

04:12:24.246 --> 04:12:26.935
experience was truly 
 magical.  The world of 

04:12:27.230 --> 04:12:29.852
information at your fingertips  

04:12:29.853 --> 04:12:31.107
 fingertips.
    Today that experience is 

04:12:31.108 --> 04:12:35.617
still magical.  When you 
 recognize that mobile is 

04:12:36.324 --> 04:12:39.814
fundamentally different than 
 desktop, one can't simply port 

04:12:39.815 --> 04:12:43.348
the same desktop 
 experience over to consumers' 

04:12:43.414 --> 04:12:46.037
phones.  The needs of 
 our users and their mobile 

04:12:46.240 --> 04:12:48.640
behaviors are so different 
 today.

04:12:48.838 --> 04:12:51.727
    How many of you have been on
 a desktop or laptop 

04:12:51.940 --> 04:12:55.920
 since arriving atio?  Maybe in 
your hotel room you 

04:12:56.337 --> 04:13:00.424
 used your laptop or on your 
flight here.  Think about 

04:13:01.026 --> 04:13:03.131
 how many times you've checked 
your phone today.  On 

04:13:03.132 --> 04:13:06.814
 average?  People check their 
phone 150 times a day.  

04:13:06.815 --> 04:13:09.741
 Among those of us in publishing
 or tech, it's 

04:13:09.742 --> 04:13:12.246
 probably even more.
    We twitch with stolen 

04:13:12.439 --> 04:13:16.912
glances at our phones, lured 
 back to the device for another 

04:13:17.218 --> 04:13:19.639
convenient burst of 
 digital activity.

04:13:19.640 --> 04:13:23.728
    These short sessions add up.
  We spend 177 minutes 

04:13:23.729 --> 04:13:27.448
 on our phones every day.  
Almost three hours.  

04:13:33.139 --> 04:13:35.339
That 
 means we are having mobile 

04:13:33.139 --> 04:13:33.452
sessions that average more 
 than a minute long, more than 

04:13:33.453 --> 04:13:36.534
150 times a day.
    In these short sessions w

04:13:36.928 --> 04:13:39.638
e're productive.  In the 
 past year along websites in the

04:13:39.933 --> 04:13:43.029
 United States have 
 seen a 29 percent increase in 

04:13:43.369 --> 04:13:47.837
mobile conversion rates     
 rates.  We've completely 

04:13:49.029 --> 04:13:52.447
rebuilt Search for this 
 mobile always connected world. 

04:13:52.448 --> 04:13:55.022
 People want answers 
 instantly.  We are no longer 

04:13:55.547 --> 04:13:59.345
sitting at desktop 
 computers surfing the Web for 

04:13:59.652 --> 04:14:03.736
hours on end.  We are 
 whipping out our phones in the 

04:14:03.927 --> 04:14:06.551
lunch line, airport or 
 while watching TV.  We are 

04:14:06.737 --> 04:14:09.246
searching for things 
 happening right now and using 

04:14:09.540 --> 04:14:11.133
many new types of 
 devices.

04:14:11.134 --> 04:14:14.738
    Let me share a video that 
gives a quick glimpse 

04:14:14.843 --> 04:14:18.027
 into Google's evolution over 
the past 17 years.  

04:14:18.028 --> 04:14:20.028
 Please run the video.

04:14:22.034 --> 04:14:26.252
    (Sounds of modem.)
    &gt;&gt; We actually went through 

04:14:26.253 --> 04:14:28.535
thousands of names.
    &gt;&gt; The name of the company 

04:14:28.536 --> 04:14:30.536
has now become its own 
 verb.

04:14:31.242 --> 04:14:33.444
    &gt;&gt; Let's Google it.
    &gt;&gt; Put the Google.

04:14:34.054 --> 04:14:36.740
    &gt;&gt; Make simple letters on a 
plain white page.

04:14:37.535 --> 04:14:40.431
    &gt;&gt; Being able to do searches
 in any language, any 

04:14:40.432 --> 04:14:42.248
 country.
    &gt;&gt; Before you finish the 

04:14:42.249 --> 04:14:43.691
question, they finish the 
 question for you.

04:14:43.692 --> 04:14:46.956
    &gt;&gt; We work on organizing the
 information.

04:14:46.957 --> 04:14:50.553
    &gt;&gt; Our goal is to digitize 
all the work.

04:14:50.554 --> 04:14:53.058
    &gt;&gt; Today Google announce ed 
Gmail,.

04:14:53.760 --> 04:14:57.037
    &gt;&gt; Google is making the 
world accessible to people 

04:14:57.038 --> 04:14:59.251
 everywhere.
    &gt;&gt; Android is built as open 

04:14:59.252 --> 04:15:01.252
platform for everyone 
 to use and build on.

04:15:01.338 --> 04:15:05.956
    &gt;&gt; This is a faster save er 
browse er for the open Web   

04:15:06.343 --> 04:15:08.081
 Web.
    &gt;&gt; Google is unveiling what 

04:15:08.082 --> 04:15:10.441
they call the 
 knowledge graph.

04:15:10.442 --> 04:15:12.146
    &gt;&gt; We needed to understand 
the world the way you 

04:15:12.147 --> 04:15:15.845
 and I do, as objects and ships 
between objects.

04:15:15.846 --> 04:15:20.453
    &gt;&gt; Today Google got another 
useful feature with 

04:15:20.454 --> 04:15:22.251
 Google Maps.
    &gt;&gt; We provide answers before

04:15:22.252 --> 04:15:26.746
 you ask them.
    &gt;&gt; One of my favorite is sho

04:15:27.042 --> 04:15:28.745
wing traffic to and 
 from work.

04:15:28.746 --> 04:15:32.771
    &gt;&gt; Think about how far 
Google has evolve ed from the 

04:15:32.772 --> 04:15:35.954
 ten blue links.
    &gt;&gt; We asked ourselves:  How 

04:15:35.955 --> 04:15:38.354
can we assist you 
 right when you need it?

04:15:38.355 --> 04:15:41.844
    &gt;&gt; Okay, Google, call the Wa
lker art center.

04:15:42.246 --> 04:15:45.946
    &gt;&gt; It's not desktops, phones
 laptops anymore.

04:15:46.364 --> 04:15:49.255
    &gt;&gt; Okay, Google.
    &gt;&gt; Watches with displays, c

04:15:49.551 --> 04:15:52.935
ar consoles with 
 displays., Google, let's go to 

04:15:52.936 --> 04:15:55.756
the aquarium.
    &gt;&gt; How can we help you get 

04:15:55.757 --> 04:15:58.651
things done and as few 
 steps as possible.

04:15:59.056 --> 04:16:04.658
    &gt;&gt; Okay, Google, show me my 
photos of Lucas with 

04:16:04.659 --> 04:16:09.467
 the pumpkin.
    &gt;&gt; This is the tip of the 

04:16:09.758 --> 04:16:11.758
iceberg.  We have a long 
 way to go.

04:16:21.382 --> 04:16:21.863
(Applause.)
    &gt;&gt; RICHARD GINGRAS:  It has 

04:16:21.864 --> 04:16:24.771
been a fabulous 17 
 years.  We have completely 

04:16:25.459 --> 04:16:29.657
rebuilt search for this 
 mobile always connected world. 

04:16:29.658 --> 04:16:33.059
 And we've come a long 
 way both in our abilities, our 

04:16:33.250 --> 04:16:37.757
features, and the way 
 Google looks.  Google has a few

04:16:37.758 --> 04:16:42.055
 new moves to go along 
 with its new look.  Let me call

04:16:42.056 --> 04:16:44.545
 out several recent 
 launches.  With our story ies 

04:16:44.546 --> 04:16:48.170
to read cards in Google 
 Now we success news stories 

04:16:48.467 --> 04:16:53.157
based on the reader's 
 content, context and interest. 

04:16:53.158 --> 04:16:55.985
 Since many of the 
 next billion users will be on 

04:16:55.986 --> 04:17:01.266
slow 2G connections we 
 created searchlight to ensure 

04:17:01.267 --> 04:17:05.358
that they still get a 
 great search experience.  

04:17:05.756 --> 04:17:08.355
Search light uses 90    
 90 percent less data than 

04:17:08.672 --> 04:17:13.062
standard search results.
    We also started using mobile

04:17:13.354 --> 04:17:17.048
 for mobile Search 
 Results.  Searchers can find 

04:17:17.276 --> 04:17:20.261
high quality and 
 relevant results that support 

04:17:20.573 --> 04:17:21.274
great mobile experience   

04:17:21.275 --> 04:17:22.860
 experiences.
    Whether it's our election e

04:17:22.861 --> 04:17:25.671
xperiences or our 
 health results over the past 

04:17:25.973 --> 04:17:28.877
few years we've launched 
 new features that feel right at

04:17:28.878 --> 04:17:30.667
 home on a mobile 
 device.

04:17:30.668 --> 04:17:34.751
    And that is just the start. 
 Although the device 

04:17:35.368 --> 04:17:38.659
 landscape has changed, search 
plays the same role it 

04:17:38.660 --> 04:17:42.477
 did in 1998.  Understanding a 
user's intent and 

04:17:42.875 --> 04:17:46.190
 presenting the best possible 
content.

04:17:46.191 --> 04:17:48.191
    Users have an increasing 
number of needs:  Needs 

04:17:48.273 --> 04:17:50.972
 that can be answered by the c
ontent and services you 

04:17:50.973 --> 04:17:53.160
 provide.  With he are creating 
the tools and features 

04:17:53.464 --> 04:17:56.874
 that we believe will help users
 and publishers make 

04:17:56.875 --> 04:17:59.778
 the most of Search in this new 
world.

04:17:59.779 --> 04:18:03.587
    If you attendedio sessions 
over the past few years 

04:18:03.588 --> 04:18:07.477
 you may be familiar with 
features such as AppIndexing   

04:18:10.186 --> 04:18:13.260
he Voice Messaging API.  
 These features drive new ways 

04:18:13.466 --> 04:18:17.467
of discovery, whether 
 it's directing organic search 

04:18:17.840 --> 04:18:21.972
to your app or reaching 
 users with third-party Now 

04:18:21.973 --> 04:18:26.068
cards.  Today is about the 
 ways Google can help you grow 

04:18:26.370 --> 04:18:28.571
your audience and your 
 business.  We'll discuss how 

04:18:28.966 --> 04:18:32.066
you can preview fresh 
 realtime content in Search to 

04:18:32.381 --> 04:18:35.570
drive discovery and 
 reach.  We will show you how we

04:18:35.571 --> 04:18:38.668
 are leveraging 
 accelerated mobile pages in 

04:18:39.062 --> 04:18:42.161
Search to provide blazing       
 blazingly fast experiences for 

04:18:42.682 --> 04:18:45.769
all the great content 
 you build.  When your site 

04:18:45.984 --> 04:18:49.087
surfaces in Search, we 
 want you to be sure it loads 

04:18:49.262 --> 04:18:52.178
instantly.  Because if 
 it doesn't, abandonment 

04:18:52.574 --> 04:18:55.576
increases and opportunity ies 
 are lost.

04:18:55.577 --> 04:18:58.575
    Finally, we will show you 
the new tools and report      

04:18:58.576 --> 04:19:00.958
 reports we've built to help you
 measure impact and 

04:19:01.165 --> 04:19:07.479
 results.  Let's talk about rich
 previews in Search.  

04:19:07.480 --> 04:19:09.568
 I'll hazard a guess that you're
 familiar with the 

04:19:09.569 --> 04:19:12.674
 image on the left.  Standard 
search results.  Since 

04:19:12.675 --> 04:19:16.358
 the very beginning of Search, 
these blue links have 

04:19:16.359 --> 04:19:19.080
 been incredibly effective at 
driving discoverability 

04:19:19.081 --> 04:19:22.182
 of your content and the growth 
of your business.

04:19:22.183 --> 04:19:25.188
    You probably already know th
at by including 

04:19:25.874 --> 04:19:28.274
 structured data, appropriate to
 your content, your 

04:19:28.275 --> 04:19:32.000
 site can enhance its presence 
on Search and go beyond 

04:19:32.001 --> 04:19:36.779
 the traditional blue links.  In
 this example what was 

04:19:36.780 --> 04:19:40.683
 once links to recipe websites 
is now much more visual 

04:19:40.684 --> 04:19:44.771
 and engaging.  We call these 
rich snippets.  With 

04:19:44.772 --> 04:19:48.985
 simple mark-up you present a 
compelling result with 

04:19:49.183 --> 04:19:52.677
 views, images and more.  When 
you look at the results 

04:19:52.678 --> 04:19:55.769
 side-by-side it is clear that 
rich snippets are more 

04:19:55.770 --> 04:19:58.991
 entice ing to the user, more 
entice ing means more clicks  

04:20:00.851 --> 04:20:04.380
sneap pets help users 
 make informed decisions with 

04:20:04.987 --> 04:20:07.180
greater likelihood of 
 user satisfaction and deeper 

04:20:07.382 --> 04:20:10.982
engagement with your 
 site.  It is a win-win 

04:20:11.184 --> 04:20:13.896
situation.  Users get much 
 more engaging Search 

04:20:14.069 --> 04:20:17.780
experiences, publishers get 
 increased discoverability and 

04:20:17.993 --> 04:20:21.490
traffic to their sites.
    But we want to use mark-up 

04:20:21.491 --> 04:20:24.272
to make your content 
 even more engaging to users.  

04:20:24.487 --> 04:20:26.389
We want to take it a 
 step further.

04:20:26.390 --> 04:20:30.885
    We are beginning to roll out
 a new format, rich      Rich 

04:20:30.886 --> 04:20:33.783
 Cards, which makes your 
evergreen content more 

04:20:34.193 --> 04:20:38.198
 prominent on results pages.
    Rich Cards further enhance 

04:20:38.199 --> 04:20:41.899
content previews on 
 Search results pages.  If 

04:20:41.900 --> 04:20:45.676
you're in the kitchen 
 desperate for your next sugar 

04:20:45.677 --> 04:20:48.792
hit, and I'm always 
 desperate for the next sugar 

04:20:48.793 --> 04:20:50.793
hit,

04:20:52.180 --> 04:20:53.891
 a quick Search of 
 desert recipes will get you 

04:20:53.892 --> 04:20:55.884
some mouth watering 
 possibilities.

04:20:55.885 --> 04:20:57.977
    Remember what I mentioned 
earlier.  In the short 

04:20:58.183 --> 04:21:01.085
 bursts of digital actively the
re isn't much time to 

04:21:01.086 --> 04:21:03.975
 grab a user's attention.  The 
more visual and 

04:21:03.976 --> 04:21:05.799
 engaging the content, the 
better.

04:21:05.800 --> 04:21:10.760
    For a user like me, I want 
to be seduce ed by that 

04:21:10.761 --> 04:21:14.908
 lemon cupcake image.  The recip
e, I want to tap it, 

04:21:14.909 --> 04:21:19.087
 bake it, eat it.  A digitally 
driven burst of 

04:21:19.088 --> 04:21:22.090
 culinary activity.
    What are Rich Cards?  First,

04:21:22.091 --> 04:21:26.317
 Rich Cards are built 
 upon rich snippets.  It's a fu

04:21:27.579 --> 04:21:31.599
rther evolution of the , preview
ing richer content on search is 

04:21:31.779 --> 04:21:34.698
 good for publishers and good 
for users.  Instead of 

04:21:34.699 --> 04:21:37.691
 links we are able to surface 
information about events      

04:21:37.692 --> 04:21:41.480
 events, recipes, and movies in 
a highly compelling, 

04:21:41.481 --> 04:21:45.251
 highly visual fashion.  Just 
like rich snippets, Rich 

04:21:45.252 --> 04:21:50.189
 Cards use schema.org markup to 
enhance the previews 

04:21:50.190 --> 04:21:54.079
 of a site's content.  A Rich 
Card is a 

04:21:54.080 --> 04:21:55.794
 compartmentalized template of 
information that can 

04:21:55.795 --> 04:21:59.288
 take on multiple forms.  
Depending on where they are 

04:21:59.289 --> 04:22:03.389
 displayed.  Let's walk through 
a few examples.

04:22:03.390 --> 04:22:06.198
    Let's say you are waiting 
for the subway on the 

04:22:06.452 --> 04:22:10.490
 way to meet your best friend 
who is a movie buff.  

04:22:10.491 --> 04:22:14.083
 She is annoyingly smart.  We 
all have friends like 

04:22:14.084 --> 04:22:16.789
 that.  You need to learn 
something about great movies 

04:22:17.188 --> 04:22:19.425
 so you can be reasonably 
prepared for the intense 

04:22:19.426 --> 04:22:23.752
 debates that always happen when
 you hang out.  You 

04:22:23.753 --> 04:22:25.789
 type best movies of all time 
into search.

04:22:25.790 --> 04:22:28.208
    On the left you see standard
 search results with 

04:22:28.392 --> 04:22:32.527
 links to relevant sites that h
ave top movie lists.  

04:22:32.528 --> 04:22:35.405
 There may be some great 
information on those sites,  not

04:22:35.406 --> 04:22:39.387
 sure.  You can hear the rumble 
of the 

04:22:39.388 --> 04:22:42.248
 approaching subway train.  You 
have very little time 

04:22:42.249 --> 04:22:44.909
 to get smart.
    Now let's look at the right 

04:22:44.910 --> 04:22:48.015
side.  You can see 
 results with a rich      Rich 

04:22:48.016 --> 04:22:49.700
Card from Timeout New York City.

04:22:49.701 --> 04:22:52.700
 You have a nice visual carousel
 with previews of the 

04:22:52.998 --> 04:22:56.305
 listed movies, lots of visual 
temptation.  You've 

04:22:56.306 --> 04:23:04.016
 never heard of Ingamar better 
man's persona.  Maybe 

04:23:04.017 --> 04:23:06.702
 your friend hasn't either.  You
 tap on it and off you 

04:23:07.030 --> 04:23:11.044
 go to the Timeout New York City
 website.

04:23:11.045 --> 04:23:14.313
    These Rich Cards can take on
 many different forms.  

04:23:14.314 --> 04:23:17.316
 Say you have a cooking website.
  First your Rich Card    

04:23:17.317 --> 04:23:20.916
 Cards can appear as I part of 
list of recipes from 

04:23:20.917 --> 04:23:23.714
 multiple sites.  For example, 
if you search for pasta 

04:23:23.715 --> 04:23:29.565
 recipes, you might find Mac and
 cheese variations 

04:23:29.566 --> 04:23:36.406
 from Epi curious and the New 
York Times.  I love Mac 

04:23:36.407 --> 04:23:39.705
 and cheese.  I will do both.  
The Rich Cards can list 

04:23:39.706 --> 04:23:44.514
 as a -- appear as a list of 
recipes on your site.  

04:23:44.515 --> 04:23:49.036
 All of these tempting waist 
line expanding recipes 

04:23:49.037 --> 04:23:53.617
 are from the food network.  Tap
 on a recipe, go to site.  Start

04:23:53.618 --> 04:23:56.012
 cooking.
    Users are coming to Google 

04:23:56.013 --> 04:23:59.118
billions of times each 
 day with query ies just like 

04:23:59.223 --> 04:24:03.109
these.  When a publisher's 
 content appears in more places 

04:24:03.110 --> 04:24:07.806
in richer, more forms, discovery
 opportunity ies increase.  

04:24:07.807 --> 04:24:11.207
 And those who click are more 
likely to have a strong 

04:24:11.208 --> 04:24:15.012
 Erin tenth to take action, to 
cook that recipe, to 

04:24:15.013 --> 04:24:18.222
 attend an event, to subscribe 
to a premium feature.

04:24:18.223 --> 04:24:20.721
    Today the Rich Card program 
is open for recipes 

04:24:20.915 --> 04:24:24.141
 and it is being tested for mo
vies.  In the future 

04:24:24.142 --> 04:24:29.225
 we'll expands to many other 
categories of results as 

04:24:29.226 --> 04:24:34.329
    Creating a Rich Card is 
simple.  It only requires 

04:24:34.330 --> 04:24:39.309
 structured data markup.  Mark 
up your recipe pages  schema, 

04:24:39.520 --> 04:24:43.030
movie pages with movie schema.  
 You get the idea.  Many of you 

04:24:43.306 --> 04:24:46.195
have already done this 
 markup on your pages.  Then you

04:24:46.196 --> 04:24:48.920
 add item list markup 
 on the list page that contains 

04:24:49.119 --> 04:24:51.722
all the recipes or 
 movies.

04:24:51.723 --> 04:24:54.916
    We do recommend that you 
submit a site map contain       

04:24:54.917 --> 04:24:57.710
 containing the marked up pages 
through the Google 

04:24:58.007 --> 04:25:00.708
 Search console.  This will also
 help increase the 

04:25:00.709 --> 04:25:04.519
 discoverability of your 
content.

04:25:04.520 --> 04:25:06.915
    We are just getting started 
in this area.  We 

04:25:07.111 --> 04:25:09.620
 would like to thank the publish
ers who participate ed 

04:25:10.020 --> 04:25:15.408
 in early tests.  The effort 
just made us hungry for 

04:25:15.409 --> 04:25:22.316
 more.  We are eager to expand 
the content of rich 

04:25:22.519 --> 04:25:26.011
 Search.  Users are coming to 
soip for more than 

04:25:26.012 --> 04:25:29.228
 recipes, movies, events.  They 
are searching for 

04:25:29.229 --> 04:25:32.326
 things happening right now.  
Right now, I mean right 

04:25:32.327 --> 04:25:35.413
 this moment.  Not hours ago, 
not 15 minutes ago.

04:25:35.414 --> 04:25:38.008
    Under the current model, 
publishers have to wait 

04:25:38.214 --> 04:25:41.529
 for Google to index their 
content.  That means the  c

04:25:42.327 --> 04:25:44.312
ontent isn't reaching users at 
the moment 

04:25:44.313 --> 04:25:48.425
 that matters most.
    Take a look at this chart of

04:25:48.611 --> 04:25:52.129
 searchers during this 
 year's NFL draft.  At the start

04:25:52.130 --> 04:25:56.137
 of the draft, query ies 
 peaked and remained high 

04:25:56.521 --> 04:25:59.725
throughout the event.  These 
 users reacted to the live event

04:25:59.726 --> 04:26:03.794
 and came to Search 
 looking for fresh information. 

04:26:03.795 --> 04:26:05.795
 Maybe they are on 
 their couch watching the draft 

04:26:05.829 --> 04:26:09.613
on TV.  Or sneaking a 
 look while sitting in a meeting

04:26:09.614 --> 04:26:13.410
 at work, looking for 
 the latest draft news.

04:26:13.411 --> 04:26:15.629
    This is not unique to sports
 fans.  People are 

04:26:16.021 --> 04:26:19.177
 coming to Google for realtime 
info about all kinds of 

04:26:19.178 --> 04:26:22.415
 things.  The Oscars, the 
elections, and of course 

04:26:22.636 --> 04:26:26.714
 breaking news.  During the 
world cup, searchers 

04:26:26.715 --> 04:26:30.641
 related to the World Cup peaked
 at over 20 percent of 

04:26:30.642 --> 04:26:33.929
 all Search volume.
    People come to Google to 

04:26:33.930 --> 04:26:39.133
find information about 
 what is happening now.  That 

04:26:39.134 --> 04:26:42.226
led us to think:  How 
 can we surface realtime results

04:26:42.515 --> 04:26:47.826
 more quickly and those realtime
 spikes in query ies?  The 

04:26:47.827 --> 04:26:50.935
 question kicked off the 
development of our realtime 

04:26:50.936 --> 04:26:54.020
 indexing efforts.  Instead of 
waiting for your 

04:26:54.021 --> 04:26:56.926
 content to be crawled and 
indexed, publishers will be 

04:26:57.118 --> 04:27:02.021
 able to use the Google 
publishing indexing API to 

04:27:02.022 --> 04:27:05.229
 trigger the indexing of their 
content.  Users get 

04:27:05.230 --> 04:27:09.033
 realtime result insurance 
Search and publishers 

04:27:09.034 --> 04:27:11.230
 increase their reach.  It's an 
exciting new area and 

04:27:11.231 --> 04:27:14.934
 we are just getting started.  
We launched a pilot 

04:27:14.935 --> 04:27:16.935
 within the next few

04:27:18.922 --> 04:27:21.055
 months and we'll roll it out to

04:27:18.922 --> 04:27:20.636
 more publishers over the next 
year.

04:27:20.637 --> 04:27:23.032
    As you know better than I do
, it is not enough to 

04:27:23.440 --> 04:27:28.314
 simply appear on the search r
esults page.  To grow s you need

04:27:28.315 --> 04:27:32.028
 users to engage.  But far too 
users are experiencing pages 

04:27:32.285 --> 04:27:38.225
that are awkwardly 
 slow-loading.  We know people 

04:27:38.226 --> 04:27:41.737
abandon slow-loading 
 sites.  Those occasions end up 

04:27:42.029 --> 04:27:42.529
being lost opportunity 

04:27:42.530 --> 04:27:45.213
 opportunities, plain and 
simple.  What publisher can 

04:27:45.214 --> 04:27:50.840
 afford that?  In fact 40 
percent of people abandon a 

04:27:50.841 --> 04:27:53.738
 website that takes more than 
three seconds to load.  

04:27:53.739 --> 04:27:56.518
 With every millisecond users 
have to wait for a page 

04:27:56.519 --> 04:28:00.424
 to load, the more likely they 
will give up and simply 

04:28:00.425 --> 04:28:03.330
 go someplace else.
    The experience of reading 

04:28:03.642 --> 04:28:07.631
content on the Web today 
 can be painful.  We've all had 

04:28:07.932 --> 04:28:11.127
these bad experiences.  
 There is that slow-loading Web 

04:28:11.443 --> 04:28:15.645
page, heavy pages       pages  
do way too much when the network

04:28:15.646 --> 04:28:17.943
 connection 
 or the device simply isn't up 

04:28:17.944 --> 04:28:21.526
to the task.
    You can almost feel the page

04:28:21.527 --> 04:28:24.836
 straining under the 
 weight of the data.  Sucking t

04:28:25.132 --> 04:28:27.943
he life out of the 
 battery and bringing your phony

04:28:27.944 --> 04:28:33.357
 processor to its knee    
 knees.  All you can do is wait 

04:28:34.354 --> 04:28:37.931
and wait and wait.
    And then there's that page 

04:28:37.932 --> 04:28:41.440
with the sticky scroll.  
 You start to scroll.  You get n

04:28:42.530 --> 04:28:46.447
othing.  No bullet ter   
 tery smooth scroll for you.  

04:28:47.054 --> 04:28:49.745
Your finger isn't strong 
 enough to scroll that page.

04:28:49.746 --> 04:28:54.040
    Last but not least, that 
page that seems to fully 

04:28:54.241 --> 04:28:57.240
 load, you think it has, and 
you're happy ily reading 

04:28:57.742 --> 04:29:00.443
 along with all of a sudden a 
late loading ad or some 

04:29:01.140 --> 04:29:03.859
component pops in.  Shifting the
 content you 

04:29:04.031 --> 04:29:06.634
 were trying to read off screen 
someplace.

04:29:06.635 --> 04:29:09.944
    All you wanted was a 
compelling read, but apparent  

04:29:11.637 --> 04:29:15.255
 you wanted to play 
 hide and seek.  An effective 

04:29:15.256 --> 04:29:18.053
user engagement strategy        
 strategy?  Hmm, I don't think 

04:29:18.054 --> 04:29:22.549
so.
    It was challenges like these

04:29:22.550 --> 04:29:25.661
 that were at the core 
 of the initiative that we t

04:29:26.150 --> 04:29:29.660
ogether with three dozen 
 publishers and tech companies 

04:29:29.661 --> 04:29:36.368
started last fall  Accelerated 
Mobile Pages project.  The AMP 

04:29:36.369 --> 04:29:40.144
 project is an open source 
initiative that embody ies 

04:29:40.145 --> 04:29:43.653
 the vision that publishers can 
create content once 

04:29:43.654 --> 04:29:46.549
 and have it load instantly 
everywhere.

04:29:46.550 --> 04:29:50.045
    To the benefit of their user
 experiences, their 

04:29:50.247 --> 04:29:53.559
 business models, their de
stiny ies.  It has been 

04:29:53.560 --> 04:29:57.145
 amazing to see so many people, 
so many companies come 

04:29:57.445 --> 04:30:00.854
 together and build a solution 
that would improve the 

04:30:01.243 --> 04:30:05.008
 mobile Web experience for 
everyone.  Not only 

04:30:05.009 --> 04:30:07.242
publish       
 publishers, but ad tech 

04:30:07.243 --> 04:30:11.363
companies, Analytics  discovery 
platforms, CMS providers.  

04:30:11.364 --> 04:30:14.344
 During the development of the 
project, competitors 

04:30:14.345 --> 04:30:17.748
 came together in the same room 
and collaborated on a 

04:30:17.749 --> 04:30:20.065
 common cause.
    It was really inspires   

04:30:20.354 --> 04:30:22.660
              really inspiring 
to see.  This is the way 

04:30:22.958 --> 04:30:26.369
 it had to be.  We felt it was 
important that a 

04:30:26.749 --> 04:30:30.457
 solution be driven by the 
industry, not just a single   

04:30:31.258 --> 04:30:35.963
This way everyone is invested, 
everyone can 

04:30:35.964 --> 04:30:38.144
 share their expertise and we 
can learn from one 

04:30:38.145 --> 04:30:42.315
 another in order to achieve the
 best possible outcome       

04:30:42.316 --> 04:30:43.870
 outcome.
    Let me share a video that I 

04:30:43.871 --> 04:30:47.849
think captures this 
 collaborative spirit of the AMP

04:30:47.850 --> 04:30:50.766
 project.  Let's check 
 it out.

04:30:50.767 --> 04:30:53.155
            (Music playing.)
    &gt;&gt; Those of us when we first

04:30:53.156 --> 04:30:55.318
 started playing with 
 the Web, the great thing, you 

04:30:55.575 --> 04:30:59.473
could surf.  You go to  read 
something.  Find a link there.  

04:30:59.659 --> 04:31:01.659
Click, 
 you're off to the next site.

04:31:02.948 --> 04:31:05.645
    &gt;&gt; Single best innovation 
we've seen.

04:31:06.079 --> 04:31:08.770
    &gt;&gt; Thanks to smartphones, 
everybody has it in the 

04:31:08.771 --> 04:31:12.258
 pockets.
    &gt;&gt; It's at odds with what ev

04:31:12.554 --> 04:31:16.552
erybody does on the 
 Web, which is surf, browse, 

04:31:16.553 --> 04:31:18.955
fast and easy and it cant    
 cant.

04:31:18.956 --> 04:31:21.462
    &gt;&gt; This thing that should be
 a source of wonder is 

04:31:21.463 --> 04:31:27.156
 a source of frustration.
    &gt;&gt; Waiting.  Waiting.

04:31:27.671 --> 04:31:31.862
    &gt;&gt; Not letting me scroll.
    &gt;&gt; Now it's loaded.

04:31:31.863 --> 04:31:34.974
    &gt;&gt; People bounce.  If the 
page doesn't load within 

04:31:35.368 --> 04:31:37.565
 a couple seconds they move on 
to the next page.

04:31:37.873 --> 04:31:40.864
    &gt;&gt; That is the worst 
possible outcome for everyone 

04:31:40.865 --> 04:31:42.771
 involved.
    &gt;&gt; Google together with d

04:31:42.772 --> 04:31:46.672
ozens of other publishers 
 and technology companies sat 

04:31:46.862 --> 04:31:49.452
down to try to find a 
 solution for this.  Our 

04:31:49.669 --> 04:31:53.653
solution was the AMP project.
    &gt;&gt; AMP is a fantastic 

04:31:53.654 --> 04:31:57.764
industry clab a rative 
 approach to make mobile app 

04:31:57.975 --> 04:31:59.653
better.
    &gt;&gt; The first thing you see 

04:31:59.654 --> 04:32:02.660
is instant speed.
    &gt;&gt; Next click is only one 

04:32:02.661 --> 04:32:05.959
little scroll away.
    &gt;&gt; More people will see us. 

04:32:05.960 --> 04:32:09.054
 More people will see 
 our ads.  More people will be 

04:32:09.055 --> 04:32:10.565
able to read our 
 content.

04:32:10.566 --> 04:32:14.758
    &gt;&gt; We love the ability to 
silo our own pages.  A 

04:32:14.965 --> 04:32:17.372
 great opportunity to look and 
feel like our brand.

04:32:17.373 --> 04:32:21.467
    &gt;&gt; With this open phi
losophy, it's unfettered, un  

04:32:21.468 --> 04:32:23.653
 unrestricted.  You can do 
pretty much whatever you 

04:32:23.760 --> 04:32:25.971
 like with it.
    &gt;&gt; Publishers can maintain 

04:32:25.972 --> 04:32:29.165
control over their own 
 destiny ies, control over their

04:32:29.166 --> 04:32:31.556
 own products, control 
 over their own business models.

04:32:31.655 --> 04:32:34.559
  The best way to do with an 
engineering project is to make 

04:32:34.560 --> 04:32:37.579
it an source project.
    &gt;&gt; We feel it's important 

04:32:37.580 --> 04:32:40.155
that there is not a gate 
 keeper between the publisher 

04:32:40.156 --> 04:32:44.471
and them reaching the     &gt;&gt; The
 success of the AMP project is 

04:32:44.472 --> 04:32:46.472
not based on 
 the leadership of one.  It is g

04:32:46.879 --> 04:32:48.950
oing to be based on 
 the leadership of many.

04:32:48.951 --> 04:32:51.067
    &gt;&gt; You have a problem that 
is common to others.  

04:32:51.068 --> 04:32:54.077
 You work together to find a c
ommon solution.

04:32:54.078 --> 04:32:57.576
    &gt;&gt; So it's all of a sudden 
everybody jumping in 

04:32:57.881 --> 04:32:59.964
 and doing stuff.  Something co
mes out which is great.

04:33:00.035 --> 04:33:02.775
    &gt;&gt; Something we needed   
     needed to do for a loping 

04:33:02.978 --> 04:33:04.268
time as 
 an industry.  This is the sp

04:33:04.269 --> 04:33:06.174
irit of the Web at its 
 best.

04:33:06.175 --> 04:33:08.175
    &gt;&gt; Just give it a try.  Show
 up

04:33:10.994 --> 04:33:11.175
 at the GitHub page    
 page.  Read the documentation. 

04:33:11.176 --> 04:33:13.176
 See what it means for 
 your pages.

04:33:13.369 --> 04:33:16.876
    &gt;&gt; We shouldn't be fighting 
over what a hyperlink 

04:33:17.062 --> 04:33:20.360
 is anymore.  It's time to tell 
the best story ies.

04:33:20.361 --> 04:33:24.582
    &gt;&gt; Those of us involved with
 the AMP project are 

04:33:24.583 --> 04:33:26.787
 involved because we love the 
Web and want it to be as d h

04:33:27.158 --> 04:33:29.165
ealthy as all of us know it can 
be.  We 

04:33:29.166 --> 04:33:32.169
 want it to be fast and 
furiously compelling.  We want 

04:33:32.170 --> 04:33:35.569
 to make the Web great again.
    &gt;&gt; It's as simple as that.  

04:33:35.570 --> 04:33:38.677
Can we make the Web 
 great again?

04:33:41.877 --> 04:33:42.475
        (Music playing.)
    &gt;&gt; RICHARD GINGRAS:  Who was

04:33:42.476 --> 04:33:44.476
 that guy?

04:33:48.166 --> 04:33:48.375
(Applause.)
    &gt;&gt; RICHARD GINGRAS:  Some of

04:33:48.376 --> 04:33:50.059
 you might have notice      
 noticed that a couple of people

04:33:50.060 --> 04:33:53.085
 in that video have 
 moved on to impressive new 

04:33:53.274 --> 04:33:55.883
opportunity ies.  I think of 
 that as another demonstration 

04:33:56.098 --> 04:33:59.967
of the power of AMP, to 
 accelerate careers!    

04:34:04.270 --> 04:34:04.883
    (Chuckles.)
    &gt;&gt; RICHARD GINGRAS:  AMP is 

04:34:04.884 --> 04:34:09.273
very easy to use, if 
 you haven't tried it.  Its 

04:34:09.882 --> 04:34:13.258
underpinnings should be to 
anyone creating Web content 

04:34:13.259 --> 04:34:14.992
today.  We've 
 invited a lot of familiar fri

04:34:14.993 --> 04:34:19.966
ends to this party.  AMP 
 HTML is HTML with a couple of 

04:34:20.170 --> 04:34:26.978
extra twists and.  
 Javascript plays a role with 

04:34:27.477 --> 04:34:30.728
its library and within 
 Sandbox components you can 

04:34:30.729 --> 04:34:34.194
build.  CMS continues to 
 be at your disposal for 

04:34:34.491 --> 04:34:37.874
styling.  We brought smart 
 cache ing into the model.

04:34:37.875 --> 04:34:39.968
    AMP is based on Web 
technologies and Web 

04:34:40.383 --> 04:34:41.697
principle         
 principles.  We didn't want to 

04:34:41.698 --> 04:34:44.985
turn our backs on what 
 makes the Web the Web.  We 

04:34:45.183 --> 04:34:47.266
didn't want to build 
 entirely new technologies  

04:34:47.974 --> 04:34:50.574
            technology stacks.  
Instead all it took 

04:34:50.575 --> 04:34:54.288
 was some imagination to smartly
 rearrange the exist     

04:34:54.289 --> 04:34:57.469
 existing bits that were already
 there.  Simply stated 

04:34:57.470 --> 04:35:01.493
 it's just in time loading of 
data, just in time 

04:35:01.494 --> 04:35:04.398
 processing of components, just 
in time rendering of 

04:35:04.399 --> 04:35:07.290
 pages.
    To be clear, AMP isn't just 

04:35:07.476 --> 04:35:09.960
about instantly 
 surfacing content on Google 

04:35:10.296 --> 04:35:12.891
Search or other discovery 
 platforms.  It is about 

04:35:13.478 --> 04:35:17.277
building fast, elegant 
 websites.

04:35:17.278 --> 04:35:20.781
    When we bring it all 
together we find that an AMP 

04:35:20.782 --> 04:35:24.976
 page loads four times faster 
and uses ten times less 

04:35:25.188 --> 04:35:29.286
 data compared to a non-AMP page
.  That doesn't  added perfo

04:35:29.884 --> 04:35:33.365
rmance benefits when smart 
 cache ing and pre-rendering are

04:35:33.366 --> 04:35:36.680
 brought into the 
 equation.

04:35:36.681 --> 04:35:39.886
    Like I mentioned earlier, AM
P is an open source 

04:35:40.286 --> 04:35:43.693
 project.  The activity and 
engagement we've seen has 

04:35:43.694 --> 04:35:47.792
 been tremendous and inspiring. 
 Over 7300 developers 

04:35:48.187 --> 04:35:51.504
 have engaged with the effort.  
There have been over 

04:35:51.505 --> 04:35:54.395
 1900 code submissions from 
developers.  The project 

04:35:54.396 --> 04:35:58.623
 has put out 88 releases so far,
 about two releases 

04:35:58.624 --> 04:36:02.305
 per week.  Not bad for a 
project that is about eight 

04:36:02.306 --> 04:36:05.500
 months old.  The velocity has 
been incredible.  I 

04:36:05.501 --> 04:36:08.808
 thank each and every one of you
 who helped to make 

04:36:08.809 --> 04:36:12.937
 that happen.
    From discovery platforms 

04:36:12.938 --> 04:36:16.893
like Twitter, line, 
 Pinterest, CMS providers like 

04:36:16.894 --> 04:36:19.997
Wordpress and Droopul, 
 to dozens of Analytics 

04:36:20.415 --> 04:36:23.099
providers and ad networks, it 
 has been great to see the 

04:36:24.319 --> 04:36:26.523
momentum behind AMP, but 
 the proof is in the adoption.  

04:36:26.820 --> 04:36:31.098
The adoption curve is 
 remarkable.  We've seen 125 

04:36:31.099 --> 04:36:33.099
million AMP documents in

04:36:34.782 --> 04:36:37.412
domains, from every 
 corner of the globe.  It 

04:36:37.619 --> 04:36:41.046
continues to increase every 
 day.

04:36:41.047 --> 04:36:44.508
    Just like many publishers, 
Google is also making 

04:36:44.720 --> 04:36:49.925
 good use of AMP.  Earlier this 
year we launched AMP 

04:36:50.221 --> 04:36:53.424
 news carousels within Google 
Search on the mobile Web   

04:36:53.425 --> 04:36:56.410
 Web.  That makes it easier to 
get discovered on 

04:36:56.618 --> 04:36:59.433
 Google Search.  With those 
carousels users can read 

04:37:00.271 --> 04:37:03.615
 instantly            
 instantly loaded articles but 

04:37:04.415 --> 04:37:07.307
swipe between articles 
 that load instantly.  I'm not a

04:37:07.308 --> 04:37:10.904
 rocket scientist but 
 I know we can't expand the 

04:37:11.214 --> 04:37:15.929
amount of time during the 
 day, but we can help users 

04:37:15.930 --> 04:37:18.105
consume more content in 
 the time they have.

04:37:18.106 --> 04:37:21.524
    We are expanding AMP both 
within Search and across 

04:37:21.722 --> 04:37:24.229
 over Google properties like the
 recently launched 

04:37:24.617 --> 04:37:29.735
 Google news and weather app in 
the United States   Over the 

04:37:30.019 --> 04:37:32.511
next several weeks we will be 
 rolling out the AMP experience 

04:37:32.512 --> 04:37:37.117
to the osis and Android 
 search apps as well and we will

04:37:37.118 --> 04:37:39.506
 continue beyond that.
    We are also working to bring

04:37:39.714 --> 04:37:42.622
 AMP to new types of 
 content.  We just started to 

04:37:42.907 --> 04:37:46.019
experiment with 
 combining Rich Cards and AMP.  

04:37:46.020 --> 04:37:49.019
When you combine the 
 two, users get an incredibly 

04:37:49.020 --> 04:37:50.728
rich and fast experience   

04:37:50.729 --> 04:37:53.125
 experience.  Users can tap on 
your Rich Card and view 

04:37:53.417 --> 04:37:58.808
 a recipe instantly.  They can 
preview more recipes 

04:37:58.809 --> 04:38:00.650
 instantly by swipe ing left or 
right within the 

04:38:00.651 --> 04:38:04.406
 carousel thanks to the instant 
nature of AMP.

04:38:04.407 --> 04:38:08.421
    We are launching this first 
with recipes and plan 

04:38:08.422 --> 04:38:10.914
 to support many other content 
types soon.  AMP will 

04:38:10.915 --> 04:38:15.924
 be part of the realtime index
ing effort I talked earlier.

04:38:15.925 --> 04:38:18.712
    Now, let's take a look at 
the tools we built to 

04:38:19.023 --> 04:38:21.216
 help you measure the results of
 the features I've 

04:38:21.426 --> 04:38:26.725
 talked about.  Search Console 
helps you monitor and 

04:38:26.726 --> 04:38:29.224
 maintain your site's presence 
on Google Search.  If 

04:38:29.225 --> 04:38:32.521
 you haven't done it so far, we 
strongly recommend you 

04:38:32.613 --> 04:38:36.034
 verify ownership of your site 
in Search Console.  It 

04:38:36.035 --> 04:38:38.430
 provides many tools to improve 
the search experience 

04:38:38.431 --> 04:38:43.220
 for your content.
    We've added a new report to 

04:38:43.625 --> 04:38:45.949
Search console that 
 will help you understand you 

04:38:45.950 --> 04:38:48.712
have implementation 
 errors in Rich Cards.  It will 

04:38:49.009 --> 04:38:51.119
even suggest which 
 cards can benefit from 

04:38:51.409 --> 04:38:55.030
additional markup.  To use the 
 tool, log into Search Console 

04:38:55.340 --> 04:38:58.837
and select the Rich 
 Card report.  The report will 

04:38:59.028 --> 04:39:01.277
show you the overall 
 status for your site.  In this 

04:39:01.620 --> 04:39:03.931
case you can see the 
 site has done a fine job and 

04:39:04.153 --> 04:39:07.539
they don't have any 
 invalid cards.  They do, 

04:39:07.838 --> 04:39:10.536
however, have many cards on 
 the site that can benefit from 

04:39:10.738 --> 04:39:13.533
marking up more fields      
 fields.  We mark them as 

04:39:14.172 --> 04:39:16.730
enhanceable cards.
    The report will also show 

04:39:16.731 --> 04:39:20.127
you examples of any 
 errors down to the specific fi

04:39:20.620 --> 04:39:24.226
eld on a specific URL.
    It can also guide you to the

04:39:24.624 --> 04:39:29.633
 updated structure ed 
 data testing tool.  The s

04:39:30.122 --> 04:39:33.931
tructure ed data testing tool 
 allows you to run a live test 

04:39:34.220 --> 04:39:37.017
on your pages.  This 
 can highlight all the errors 

04:39:37.622 --> 04:39:39.418
and enhancement 
 opportunity ies you have on 

04:39:39.419 --> 04:39:42.822
your cards.  This is one of 
 the most popular tools and is 

04:39:43.474 --> 04:39:45.474
incredibly useful for 
 stamping out problems before 

04:39:45.720 --> 04:39:50.132
they occur.
    You can even simulate how 

04:39:50.322 --> 04:39:55.740
your card will actually 
 look on the Search results page

04:39:55.741 --> 04:40:00.531
 by adding the new 
functionality.  It should make 

04:40:00.835 --> 04:40:04.058
the tool ever effective.
    The AMP project, by the way,

04:40:04.346 --> 04:40:10.237
 also provides a  validate AMP 
files in Search console we 

04:40:10.238 --> 04:40:13.915
 surface AMP errors in your 
crawled AMP content to 

04:40:13.916 --> 04:40:16.629
 make it easier for you to addre
ss any fixes.  This 

04:40:16.630 --> 04:40:19.429
 includes the structured data 
requirements for AMP 

04:40:19.430 --> 04:40:23.536
 features like the top story ies
 carousel.

04:40:23.537 --> 04:40:27.027
    We also recently launched an
 AMP report that shows 

04:40:27.946 --> 04:40:32.653
 impression, click, and CTR data
 for just your AMP   You can try

04:40:32.654 --> 04:40:36.323
 the feature today by simply 
 logging into your Search 

04:40:36.324 --> 04:40:39.040
Console account, go to the 
 search and Analytics report and

04:40:39.041 --> 04:40:41.839
 filter to AMP for 
 search types.  You can even 

04:40:43.574 --> 04:40:45.842
compare how AMP metrics 
 stack against other search 

04:40:45.843 --> 04:40:49.144
features like the search        
Search 

04:40:49.145 --> 04:40:51.831
 result links.
    AMP has been a fast moving 

04:40:51.832 --> 04:40:55.130
initiative as I noted.  
 We want to thank the many AMP 

04:40:55.343 --> 04:40:57.928
developers who 
 contributed valuable feedback b

04:40:58.332 --> 04:41:01.227
ut also code and help    
 helped us tweak the tools I'm 

04:41:01.348 --> 04:41:04.239
talking about here as 
 the will project evolve ed.

04:41:04.240 --> 04:41:07.739
    For some hands-on experience
 check out the Sandbox       

04:41:07.740 --> 04:41:09.659
 Sandbox.  We have members from 
our developer relation        

04:41:09.660 --> 04:41:12.248
 relations and product teams to 
answer any and all 

04:41:12.249 --> 04:41:15.448
 questions and show you live 
demos.

04:41:15.449 --> 04:41:18.555
    That was a lot to cover in 
half an hour.  I would 

04:41:18.556 --> 04:41:21.067
 like to take a moment to recap 
what we talked about 

04:41:22.160 --> 04:41:25.882
 today.  We talked about how you
 can preview richer 

04:41:25.883 --> 04:41:28.744
 content in Search for increased
 discovery.  We 

04:41:29.157 --> 04:41:32.252
 announced our efforts in r
ealtime indexing to help 

04:41:32.447 --> 04:41:35.041
 connect users with the most up 
to date content you 

04:41:35.042 --> 04:41:38.456
 offer.
    We showed how AMP can drive 

04:41:38.457 --> 04:41:41.854
blazingly fast 
 consumption across the mobile 

04:41:42.311 --> 04:41:45.145
Web and how we are work    
 working to bring it to new 

04:41:45.435 --> 04:41:49.865
surfaces and new content ly we 
walked through the new Rich Card

04:41:49.866 --> 04:41:52.560
 and 
 AMP reports and the updated 

04:41:53.852 --> 04:41:56.253
structured data testing 
 tool.

04:41:56.254 --> 04:41:59.302
    To learn more check out 
these sessions that deep 

04:41:59.545 --> 04:42:02.544
 dive into the individual topics
.  Again, if you are 

04:42:02.647 --> 04:42:06.251
 interested in getting some 
hands on time with these  want 

04:42:06.756 --> 04:42:09.756
to review documentation, please 
stop by 

04:42:09.757 --> 04:42:12.841
 the Sandbox, which you can do 
at any time during the 

04:42:13.249 --> 04:42:15.249
 rest ofio.

04:42:16.866 --> 04:42:19.647
    Google Search looks 
completely different from 17 

04:42:19.648 --> 04:42:23.387
 years ago.  That's the point.  
As you heard yesterday 

04:42:23.554 --> 04:42:27.857
 in Sundar's keynote, Google is 
continuing to evolve.  

04:42:27.858 --> 04:42:31.350
 All those -- although Search 
may look different, 

04:42:31.351 --> 04:42:33.968
 content discovery is at the 
core of everything we do.  

04:42:33.969 --> 04:42:36.280
 Whether that discovery comes 
from the search results 

04:42:36.281 --> 04:42:41.555
 page or the interfaces of the 
future such as the 

04:42:41.556 --> 04:42:46.367
 Google assistant or Allo or Hom
e, we want to make 

04:42:46.368 --> 04:42:49.071
 sure that living and growing 
with Google is possible.  

04:42:49.072 --> 04:42:52.363
 Stay tune ed as you'll have 
much more to announce as 

04:42:52.364 --> 04:42:55.044
 more and more features and 
capability ies move from 

04:42:55.045 --> 04:42:57.045
 concept to reality.
    As I mentioned at the begin

04:42:57.164 --> 04:43:02.379
ning, I believe Google 
 and pubs share a common cause. 

04:43:03.170 --> 04:43:06.065
-- publishers share a 
 common cause.  I'm excited to 

04:43:06.149 --> 04:43:10.769
see so many people come  assure 
that the next billion users can 

04:43:10.964 --> 04:43:13.727
 experience the same magic and 
universal access to 

04:43:13.728 --> 04:43:16.872
 information that we've all 
enjoyed over the first 25 

04:43:16.873 --> 04:43:19.754
 years of the Web's history.
    I thank you very much.

04:43:26.377 --> 04:43:29.270
(Applause.)
    (Cheers and applause.)

04:43:29.271 --> 04:43:31.271
            (Music playing.)
    (The session concluded.)

04:59:57.088 --> 04:59:59.088
&gt;

05:00:08.140 --> 05:00:09.140
&gt;
&gt;&gt;

05:00:08.140 --> 05:00:08.817
&gt;&gt;
&gt;&gt;

05:00:08.818 --> 05:00:09.818
&gt;&gt;
&gt;&gt;

05:00:08.818 --> 05:00:09.818
&gt;&gt;
&gt;&gt;

05:00:08.818 --> 05:00:09.818
&gt;&gt;
&gt;&gt;

05:00:08.818 --> 05:00:11.533
&gt;&gt;
&gt;&gt; May 19,

05:00:25.925 --> 05:00:27.403
 2016
MW68. 

05:00:27.404 --> 05:00:29.404
The

05:00:30.411 --> 05:00:33.251
 Mobile Web:  State of the

05:08:51.654 --> 05:08:52.787
  Union.Union.
&gt;&gt; 

05:08:51.654 --> 05:08:53.654
Union.

05:09:54.523 --> 05:09:55.523
&gt;&gt;
&gt;&gt;

05:09:54.523 --> 05:09:55.523
&gt;&gt;
&gt;&gt; 

05:09:54.523 --> 05:09:56.377
&gt;&gt; RAHUL ROY-CHOWDHURY:  Hello 
everybody!  I'm Rahul 

05:09:56.378 --> 05:10:00.098
Roy-Chowdhury, I work on the 
Chrome team and I'm glad to be 

05:10:00.099 --> 05:10:07.359
here.  Welcome to the mobile Web
 state of the Of the Union this 

05:10:07.360 --> 05:10:10.953
session is all about the mobile 
Web, what's been happening, 

05:10:10.954 --> 05:10:13.813
what's coming up, demos, 
launches, case studies, stats 

05:10:14.004 --> 05:10:17.722
and a lot more.  There is a lot 
happening here. 

05:10:17.723 --> 05:10:19.723
But before 

05:10:21.161 --> 05:10:22.866
we get into all of that, let me 
take a moment to reflect on why 

05:10:22.867 --> 05:10:28.498
I'm here, why I care about the 
mobile Web, and why I think you 

05:10:28.499 --> 05:10:34.734
all should as well.  The Web is 
amazing!  And it's so familiar 

05:10:34.735 --> 05:10:36.735
to us that 

05:10:39.385 --> 05:10:43.251
sometimes we take it for g 
ranted, but just think about i 

05:10:39.385 --> 05:10:42.490
t. 
About it's easy to discover Web 

05:10:42.491 --> 05:10:46.273
content through a search engine 
or just by sharing a link with a

05:10:47.019 --> 05:10:50.071
 friend, and because everything 
is a link click away, it's very 

05:10:50.072 --> 05:10:54.962
low friction to interact with 
the Web just link a link.  And 

05:10:54.963 --> 05:11:01.507
the Web works everywhere, from 
the earliest PCs and feature 

05:11:01.508 --> 05:11:04.640
phones to the latest and 
greatest Smart Phones and t 

05:11:04.641 --> 05:11:08.060
ablets, there is one thing that 
all of these devices have in 

05:11:08.061 --> 05:11:11.192
common, they have a Web browser.

05:11:11.193 --> 05:11:18.326
The Web has the broadest reach 
by far of any platform out t 

05:11:18.327 --> 05:11:22.039
here.  But perhaps the best 
thing about the Web is how it 

05:11:22.040 --> 05:11:26.176
operates.  It's completely open.
  New features, new 

05:11:26.177 --> 05:11:28.794
functionality are added, debated
 and discussed right there in 

05:11:28.795 --> 05:11:30.795
the

05:11:34.427 --> 05:11:37.834
 open.  And the Web is 
decentralized, no one owns it or

05:11:38.049 --> 05:11:40.756
 rather we all own it 
collectively and it's our 

05:11:40.757 --> 05:11:43.881
responsibility to be good 
stewards of the Web flat form.  

05:11:43.882 --> 05:11:47.904
We work collaboratively across 
all vendor browsers to make sure

05:11:48.216 --> 05:11:50.325
 we can uphold that 
responsibility.  The Web is one 

05:11:50.326 --> 05:11:55.706
of the most amazing things ever 
invented, and Google loves 

05:11:58.799 --> 05:11:59.709
the Web!
&gt;&gt;

05:11:59.710 --> 05:12:03.912
(Applause). 
The Web is great for users, the 

05:12:03.913 --> 05:12:08.436
Web is great for developers, and
 it's our mission on the Chrome 

05:12:08.437 --> 05:12:13.197
team to move the Web platform 
forward and to make you all Web 

05:12:13.198 --> 05:12:16.196
developers successful.  That's 
what gets us motivated.  That's 

05:12:16.197 --> 05:12:21.559
what gets me out of bed every 
morning.  That's why imown on 

05:12:21.560 --> 05:12:26.759
stage.
 I'm up on stage. 

05:12:26.760 --> 05:12:31.192
The Web is more important than 
ever before.  Four years ago 

05:12:31.193 --> 05:12:35.610
Chrome had no preference on 
mobile at all, and just last 

05:12:35.611 --> 05:12:40.138
month, Chrome grew to over 1 
billion monthly active users on 

05:12:40.139 --> 05:12:42.139
mobile

05:12:43.598 --> 05:12:48.194
 alone..
(Applause). 

05:12:48.803 --> 05:12:53.249
It's really amazing to see this 
kind of growth!  Now, while the 

05:12:53.250 --> 05:12:56.850
mobile Web, the growth of the 
mobile Web has been phenomenal, 

05:12:56.851 --> 05:13:01.063
we do have to remember that the 
Web came of age when computing 

05:13:01.064 --> 05:13:06.107
looked a little bit more like 
this.  And some of you may be 

05:13:06.108 --> 05:13:09.535
too young to remember the old 
school Google home page, but 

05:13:09.536 --> 05:13:13.966
most computing was done on these
 big beefy desk top machines 

05:13:13.967 --> 05:13:19.290
connected to an ethernet cable 
or to a modem and then mobile 

05:13:19.291 --> 05:13:23.328
came along and changed the rules
 of the game. 

05:13:23.329 --> 05:13:26.964
These devices are small, they 
had less power, less memory.  

05:13:26.965 --> 05:13:30.042
They had flaky networks, they 
will touch screens.  Everything 

05:13:30.043 --> 05:13:36.507
was different.  And to figure 
out what would makes a great 

05:13:36.508 --> 05:13:40.452
mobile Web experience, the Web 
platform and mobile Web browsers

05:13:40.925 --> 05:13:42.925
 had to do 

05:13:44.389 --> 05:13:46.871
a complete yond up rethink -- 
ground up rethink.  I'm not 

05:13:46.872 --> 05:13:49.674
talking a few tweaks here or 
there, I'm talking about going 

05:13:49.675 --> 05:13:53.007
back to first principles and  
figuring out what would make the

05:13:53.329 --> 05:13:55.329
 mobile Web

05:13:56.766 --> 05:13:58.234
 awesome. 
We believe the keys to a great 

05:13:58.235 --> 05:14:00.235
mobile Web experience rests on 
four

05:14:03.777 --> 05:14:06.798
 pillars.  First, accelerate the
 experience.  Make everything 

05:14:06.799 --> 05:14:11.040
fast.  Make the page load fast, 
make it scroll fast.  That's 

05:14:11.041 --> 05:14:16.373
what gets people in.  And once 
people are in, provide an 

05:14:16.374 --> 05:14:20.183
engaging experience, an i 
mmersive experience, a polished 

05:14:20.184 --> 05:14:23.121
app experience.  That's what g 
ets people to stay. 

05:14:23.122 --> 05:14:25.944
And once you have a fast 
engaging experience, you are 

05:14:25.945 --> 05:14:29.577
going to get a lot of visitors. 
 The Web does have broad reach, 

05:14:29.578 --> 05:14:34.095
after all.  And so the third 
pillar is just take all of those

05:14:34.908 --> 05:14:39.451
 visitors and convert them into 
loyal users.  This could be by 

05:14:39.452 --> 05:14:42.451
having users sign up so you can 
personalize the experience.  It 

05:14:42.452 --> 05:14:44.881
could be by completing a 
transaction or some other

05:14:50.486 --> 05:14:51.922
 flow.  And the final pillar for
 mobile Web success is once you 

05:14:51.923 --> 05:14:55.855
have all of those users, you 
want to retain them.  You want 

05:14:55.856 --> 05:14:58.979
to Re-engage with them and bring
 them back into the experience 

05:14:58.980 --> 05:15:04.311
at the right time.  These are 
all hard problems to solve and 

05:15:04.312 --> 05:15:07.773
solving them requires many 
changes to the Web platform and 

05:15:07.774 --> 05:15:12.784
to mobile browsers.  But this 
transformation is now largely 

05:15:12.785 --> 05:15:16.076
complete. 
It is possible to build a mobile

05:15:16.289 --> 05:15:20.928
 Web experience that is fast, 
engaging, good at c onverting 

05:15:20.929 --> 05:15:25.143
visitors into users and good at 
retaining and Re-engaging the 

05:15:25.144 --> 05:15:28.465
users at the right times.  We 
call such experiences 

05:15:28.466 --> 05:15:32.938
progressive Web A pps.  Remember
 back when Ajax completely 

05:15:32.939 --> 05:15:34.939
changed what 

05:15:36.910 --> 05:15:39.434
was possible on the desktop Web.
  Progressive Web Apps are that 

05:15:39.435 --> 05:15:44.068
same fundamental shift for the 
mobile Web.  And as you see, 

05:15:44.069 --> 05:15:48.103
many people are already d 
eploying progressive Web Apps 

05:15:48.104 --> 05:15:52.612
and seeing success with them.  
And I hope that when you all 

05:15:52.613 --> 05:15:56.053
leave Google I/O, all of you 
will go out and do the same.  In

05:15:56.452 --> 05:15:58.647
 other words, the mobile Web is 
open 

05:16:02.562 --> 05:16:07.118
for business.
(Applause). 

05:16:07.119 --> 05:16:12.462
So let's dig into what that 
means.  Speed is the killer 

05:16:12.463 --> 05:16:15.670
feature.  If you have your 
finger on a screen and you are 

05:16:15.671 --> 05:16:19.182
trying to scroll and the page 
doesn't respond to your finger 

05:16:19.183 --> 05:16:22.924
right away, it's a physically 
unpleasant sensation.  We all 

05:16:22.925 --> 05:16:27.447
know this intuitively.  
Responsive scrolling is not a 

05:16:27.448 --> 05:16:30.652
nice to have feature as n 
absolute necessity.  And there 

05:16:30.952 --> 05:16:35.320
is data that backs this up.
For example, Facebook did an 

05:16:35.321 --> 05:16:38.416
experiment where they reduce the
 frame rates from 60 frames a 

05:16:38.417 --> 05:16:41.262
second, which is smooth 
controlling to 30 frames a 

05:16:41.263 --> 05:16:45.787
second, which is slow scrolling 
and what they found was user 

05:16:45.788 --> 05:16:51.639
engagement collapses.  Speed 
matters.  We do a lot of work in

05:16:51.823 --> 05:16:54.743
 Chrome to make it easy for you 
to build smooth and fast 

05:16:54.744 --> 05:16:58.687
experiences for your users, but 
sometimes we need your help.  We

05:16:58.978 --> 05:17:02.004
 need to work together to 
provide the best possible 

05:17:02.005 --> 05:17:05.393
experience.
For example, we recently l 

05:17:05.394 --> 05:17:08.935
aunched passive event l 
isteners.  This is an API that 

05:17:08.936 --> 05:17:13.067
lets you, the Web developer, 
provide hints to the browser 

05:17:13.068 --> 05:17:17.703
about why you are listening for 
touch events.  And using this A 

05:17:17.704 --> 05:17:21.235
PI, the browser can do a better 
job of responding to scroll.  

05:17:21.236 --> 05:17:25.154
This can make a huge difference.
  I will show you a video in a 

05:17:25.155 --> 05:17:29.676
second but just to tee it up, 
you will see two phones side by 

05:17:29.677 --> 05:17:33.264
side, both running CNN.com. 
The phone on the left, your 

05:17:34.009 --> 05:17:37.649
left, does not have this API 
implemented, and the phone on 

05:17:37.650 --> 05:17:42.174
the right does have this API 
implemented.  And if we can roll

05:17:42.479 --> 05:17:48.013
 the video, as you will see, as 
we start loading up both pages, 

05:17:48.014 --> 05:17:51.170
and scrolling, the phone on the 
left has noticeable lag between 

05:17:51.356 --> 05:17:55.665
when I move my finger and when 
the page responds where as the 

05:17:55.666 --> 05:17:58.395
phone on the right responds 
right away as I scroll my finger

05:17:58.650 --> 05:18:03.617
 up the page.  There is a huge 
difference in responsiveness.  

05:18:03.618 --> 05:18:06.632
And I'm glad to say that CNN is 
rolling out this change to all 

05:18:06.633 --> 05:18:08.869
of their users as we speak so 
that's great

05:18:17.297 --> 05:18:21.435
 news.  It's not only about 
scroll r esponsiveness.  Studies

05:18:22.646 --> 05:18:27.279
 have shown that 40% of users 
will a brandon a Web page if it 

05:18:27.280 --> 05:18:31.294
takes longer than three seconds 
to load.  We want to make it 

05:18:31.295 --> 05:18:34.033
easier for developers to build 
websites that are extremely 

05:18:35.024 --> 05:18:40.768
fast.  That led us to create 
accelerated mobile pages or AMP 

05:18:40.769 --> 05:18:42.589
and if you were here in the 
session before this, you have 

05:18:42.590 --> 05:18:44.590
heard all about AMP, but the 

05:18:48.111 --> 05:18:51.711
summary high level is this.  AMP
 lets developers take 

05:18:48.111 --> 05:18:50.111
performance to the next level 
and make

05:18:52.371 --> 05:18:57.769
 content experience experiences 
fast.  AMP pages load four times

05:18:58.077 --> 05:19:04.023
 faster and use ten times less 
data.  And we launched AMP a few

05:19:04.333 --> 05:19:09.854
 months ago, and the response 
has been tremendous.  There are 

05:19:09.855 --> 05:19:12.950
currently 125 million AMP 
documents out there from over 

05:19:12.951 --> 05:19:19.295
640,000 unique domains. 
And AMP is all about the Web.  

05:19:19.296 --> 05:19:25.204
AMP content is nothing about H 
TML and JavaScript.  It is 

05:19:25.205 --> 05:19:30.968
amazing that AMP shows the 
performance on the Web platform.

05:19:30.969 --> 05:19:33.607
  We have talked about how to 
make experiences fast.  The 

05:19:33.608 --> 05:19:37.348
second pillar of mobile Web 
success is to deepen the 

05:19:37.349 --> 05:19:41.269
engagement.  This is all about 
creating polished app 

05:19:41.270 --> 05:19:43.872
experiences, experiences that 
are resilient to network 

05:19:43.873 --> 05:19:48.006
conditions whether off line or 
just have a flaky network. 

05:19:49.214 --> 05:19:51.236
Progressive Web Apps enable 
engaging experiences through a 

05:19:51.237 --> 05:19:55.134
key piece of underlying 
technology called service w 

05:19:55.135 --> 05:19:58.886
orkers.  And service workers 
provide full clientside control 

05:19:58.887 --> 05:20:04.609
over fetching and caching, and 
using progressive workers and 

05:20:04.610 --> 05:20:07.744
using service workers and 
progressive Web Apps you can 

05:20:07.745 --> 05:20:12.374
build really polished app 
experiences.  Take the case of 

05:20:15.392 --> 05:20:23.344
g ilanticus, a tech site in 
Asia.  And when I tap that icon,

05:20:23.528 --> 05:20:30.620
 what I see is Gilanicus shows a
 splash screen which is smooth 

05:20:30.875 --> 05:20:34.811
and polished and then it loads 
up in full screen mode.  As I 

05:20:34.812 --> 05:20:38.030
navigate around you can see the 
transitions and man nations are 

05:20:38.031 --> 05:20:41.945
rock solid.  It's a polished 
experience. 

05:20:41.946 --> 05:20:46.187
And if you nts there is no 
Chrome UI here.  This is all 

05:20:49.336 --> 05:20:52.831
G ilanticus's progressive Web A 
pp.  Progressive Web  Web Apps 

05:20:52.832 --> 05:20:56.664
and service workers enable you 
to make your app work well off l

05:20:56.665 --> 05:21:02.198
 ine.  Let's take the example of
 flip cart.  They have built an 

05:21:02.199 --> 05:21:04.611
awesome progressive Web App and 
it works well off line.  So if I

05:21:05.109 --> 05:21:09.048
 go to flipcart.com, and I go

05:21:12.155 --> 05:21:17.478
 off line, I go off line there. 
 You will see that flipcart 

05:21:17.479 --> 05:21:20.999
changes the UI to gray scale to 
indicate to the user that I am 

05:21:21.000 --> 05:21:26.050
off line but the user can 
continue to navigate in the app 

05:21:26.051 --> 05:21:30.982
and view cached content.  It's a
 very seamless experience. 

05:21:30.983 --> 05:21:35.599
Now, progressive Web Apps and 
AMP work really well together.  

05:21:35.600 --> 05:21:40.127
And The "Washington Post" has 
put together a really cool 

05:21:40.128 --> 05:21:43.671
integration as well.  So to show
 you this in action, let me 

05:21:43.672 --> 05:21:47.578
invite up on stage David Merrell
 senior product manager from The

05:21:47.579 --> 05:21:49.838
 "Washington Post."
(Applause).

05:21:54.453 --> 05:21:59.057
&gt;&gt; DAVID MERRELL:  All right.  
Thanks, we are really excited at

05:21:59.944 --> 05:22:03.798
 the Post to be able to show you
 guys today some new investments

05:22:04.087 --> 05:22:07.509
 we have been making in the 
mobile Web space.  As pretty 

05:22:07.510 --> 05:22:11.038
much everyone here probably k 
nows we joined dozens of 

05:22:11.039 --> 05:22:15.357
publishers and goog  Google this
 year with the launch of AMP.  

05:22:15.358 --> 05:22:19.407
We have been thrilled with 
results so far.  AMP has lived 

05:22:19.408 --> 05:22:25.115
up to his name.  We see the 
articles load in 400 

05:22:25.116 --> 05:22:27.638
milliseconds.  That is a huge 
gain over the traditional mobile

05:22:28.069 --> 05:22:30.952
 Web.  One of the great benefits
 of being with AMP right at 

05:22:30.953 --> 05:22:34.086
launch is we is see the metrics 
on our end about the load times 

05:22:34.087 --> 05:22:38.188
and we can also see exactly how 
users are reacting to them, and 

05:22:38.189 --> 05:22:42.944
not surprisingly, users love it.
  They love the speed. 

05:22:42.945 --> 05:22:46.980
Before AMP, 51% of mobile users 
who visited The "Washington 

05:22:46.981 --> 05:22:50.798
Post" from Google search 
returned within seven days.  N 

05:22:50.799 --> 05:22:56.449
ow, with AMP, that number is up 
to 63%.  And we give a huge 

05:22:56.450 --> 05:23:01.160
amount of credit to the speed of
 AMP for that data there.  So we

05:23:01.511 --> 05:23:04.814
 know that users love speed.  We
 know that we love speed because

05:23:05.000 --> 05:23:09.124
 it's easier for us and because 
it makes our users happy, but 

05:23:09.125 --> 05:23:12.850
the question that faces 
publishers today is how can we 

05:23:12.851 --> 05:23:17.678
build engaging and fast 
experiences that will build 

05:23:17.679 --> 05:23:21.383
relationships with users beyond 
the search carousel.  We get 

05:23:21.384 --> 05:23:24.516
people once or twice a week from
 search, we love to convert 

05:23:24.517 --> 05:23:27.737
those people three or four times
 a week, every day using new 

05:23:27.738 --> 05:23:30.360
experiences.  So we took what we
 learned with AMP and we started

05:23:31.472 --> 05:23:35.205
  working on a progressive Web A
 pp.  I am thrilled to be able 

05:23:35.206 --> 05:23:37.620
to show you guys what that looks
 like. 

05:23:37.621 --> 05:23:39.621
Could we get the phone up on the

05:23:50.883 --> 05:23:55.809
 screens?  Great!  So I'm going 
to find us a Washington Post AMP

05:23:56.018 --> 05:24:00.043
 article now.  And live demos in
 search can be a little bit 

05:24:00.044 --> 05:24:02.857
dicey because you don't know 
what the algorithm is going to 

05:24:02.858 --> 05:24:07.009
turn up.  But here we go.  
Washington Post AMP story here, 

05:24:07.010 --> 05:24:11.821
we will tap in it.  Everyone can
 see it loads really fast.  Now,

05:24:11.822 --> 05:24:14.838
 what you can't see happening on
 the AMP article now is we are 

05:24:14.839 --> 05:24:18.976
using a service worker to 
install a very small piece of 

05:24:18.977 --> 05:24:22.601
progressive Web App code into 
the Chrome browser so that we 

05:24:22.602 --> 05:24:27.005
can very quickly and seamlessly 
upgrade the user to a rich, 

05:24:31.262 --> 05:24:35.528
engaging experience.  So for the
 purposes of the demo, we put a 

05:24:31.262 --> 05:24:35.185
link to the progressive Web App 
at the top of the menu.  In the 

05:24:35.186 --> 05:24:38.516
future, we are looking at 
testing having all links within 

05:24:38.517 --> 05:24:41.219
AMP open to this progressive 
experience because users will 

05:24:41.220 --> 05:24:43.437
have that app already installed.

05:24:43.438 --> 05:24:48.097
We will go into the app now.  
Here it is.  You can see that 

05:24:48.098 --> 05:24:51.594
loaded really fast.  We have got
 load times here under a second 

05:24:51.595 --> 05:24:59.450
when coming from the AMP page.
(Applause).

05:24:59.856 --> 05:25:05.394
So once I'm in the app, we 
focused on making a smooth 

05:25:05.395 --> 05:25:12.732
scrolling experience.  So it  
feels very native.  We are   We 

05:25:12.733 --> 05:25:16.780
are on Washington Post.com 
domain and as we scroll through 

05:25:16.781 --> 05:25:20.665
we used ideas and principles of 
AMP to make these pages light 

05:25:20.666 --> 05:25:25.133
and then we added on the caching
 ability of service workers on 

05:25:25.134 --> 05:25:29.017
the progressive Web App to pre 
cache pieces the article before 

05:25:29.018 --> 05:25:32.395
you get there.  And thanks to 
that, we have brought load times

05:25:32.577 --> 05:25:36.219
 within this PWA down to 80 
milliseconds for each

05:25:39.568 --> 05:25:41.568
 article.
(Applause).

05:25:41.736 --> 05:25:45.244
We were a little surprised we 
got it down that load.  We are 

05:25:45.245 --> 05:25:50.006
happy about it.  We think users 
will love it!  So that p 

05:25:50.007 --> 05:25:55.017
re-caching that the PWA gives us
 let's us solve another 

05:25:55.018 --> 05:25:57.338
important user experience issue 
that everyone faces.  That is 

05:25:57.339 --> 05:26:02.575
what happens when you go off 
line?  Now, lots of people take 

05:26:02.576 --> 05:26:05.798
the metro to work, metro goes 
above ground, underground, you 

05:26:05.799 --> 05:26:09.106
are in and out of cell service. 
 So show you what we do there, 

05:26:09.107 --> 05:26:13.353
let's go to airplane mode. 
So now just like regular 

05:26:13.354 --> 05:26:16.151
website, the article I'm on 
still works, but because I have 

05:26:16.152 --> 05:26:20.284
used the progressive Web to 
cache the content around it, I 

05:26:20.285 --> 05:26:22.285
can keep reading new articles 
even though 

05:26:25.237 --> 05:26:27.237
I'm off line.

05:26:28.478 --> 05:26:30.478
(Applause).

05:26:31.757 --> 05:26:34.575
All right.  So that is our new 
progressive Web experience we 

05:26:34.576 --> 05:26:38.815
are testing now.  I think it 
really brings together the power

05:26:38.816 --> 05:26:42.312
 of the Web in a great way.  We 
have got that lightning fast 

05:26:42.313 --> 05:26:45.560
first load under AMP followed up
 by using the service worker and

05:26:46.445 --> 05:26:50.470
 the progressive Web App to do a
 seamless really fast upgrade to

05:26:50.671 --> 05:26:53.112
 user experience that we hope 
will get people coming back 

05:26:53.113 --> 05:26:55.660
again and again to The 
"Washington Post."  So I really 

05:26:55.916 --> 05:26:59.841
think this is going to help 
bring our journalism to people 

05:26:59.842 --> 05:27:01.962
around the world and make it 
more accessible and we are happy

05:27:02.168 --> 05:27:05.795
 about that.  So I would invite 
all of you to check it out.  You

05:27:06.002 --> 05:27:09.483
 can get it today on your 
phones.  If you go to any AMP 

05:27:09.484 --> 05:27:12.536
article, either through Google 
search or Google news like I did

05:27:12.733 --> 05:27:16.652
 and go to the menu you can go 
to the PWA or go to Washington 

05:27:16.653 --> 05:27:21.720
Post. Washington Post.com/PWA on
 your phones.

05:27:27.332 --> 05:27:31.951
&gt;&gt; RAHUL ROY-CHOWDHURY:  Awesom 
e.  Thank you David, that was 

05:27:31.952 --> 05:27:34.667
awesome!  I hope you are 
convinced that it's possible to 

05:27:34.668 --> 05:27:38.697
build an experience on the 
mobile Web that is fast and 

05:27:38.698 --> 05:27:41.651
engaging.  And this should get 
you lots and lots of visitors 

05:27:41.652 --> 05:27:46.176
because the Web does have broad 
reach.  Let's turn our attention

05:27:46.177 --> 05:27:48.177
 to the third pillar for mobile 
Web success which is now we take

05:27:48.307 --> 05:27:54.423
 the visitors and convert them 
into loyal users.  Now, there is

05:27:55.036 --> 05:27:57.036
 something you may have noticed 
about 

05:28:00.555 --> 05:28:06.373
mobile, typing on mobile is 
hard.  This happens to me more 

05:28:06.374 --> 05:28:09.418
times a day than I feel 
comfortable admitting in public,

05:28:09.620 --> 05:28:13.650
 but because typing on mobile is
 hard, asking users to sign in 

05:28:13.651 --> 05:28:17.672
is hard and in fact we have seen
 that if a user doesn't sign in 

05:28:17.673 --> 05:28:22.009
correctly the first time maybe 
because they mistyped their 

05:28:22.010 --> 05:28:25.117
credentials, 92% of them will 
give up rather than have to 

05:28:25.118 --> 05:28:32.783
retype their credentials again. 
And we do our bit in Chrome to 

05:28:32.784 --> 05:28:34.883
try to help the users.  We have 
a password manager feature and 

05:28:34.884 --> 05:28:39.903
through the password manager 
feature we try to help by auto 

05:28:39.904 --> 05:28:42.930
filling in sign in fields and 
using the password manager 

05:28:42.931 --> 05:28:46.350
feature we help users sign in 
over 8 billion times every 

05:28:46.351 --> 05:28:52.047
single month.  So that's great. 
 We are helping our users.  But 

05:28:52.048 --> 05:28:56.429
we asked ourselves, what if we 
could do it better?  And we 

05:28:56.430 --> 05:28:59.950
realized that, yes, we can do it
 better.  We can do it better if

05:29:00.061 --> 05:29:03.369
 we turn the reins over to you, 
the developer, and give you 

05:29:03.370 --> 05:29:07.890
control over the experience.  So
 in that spirit I'm pleased to 

05:29:07.891 --> 05:29:11.734
announce the launch of the 
credentialed manager API which 

05:29:11.910 --> 05:29:16.357
does just that. 
This API let's you interact with

05:29:17.178 --> 05:29:20.097
 safe credentials inside the 
browser and works with fed rated

05:29:22.207 --> 05:29:26.319
 sign-ins.  One company using 
this API is kayak and kayak is a

05:29:26.320 --> 05:29:29.668
 travel company and it's 
important to them that users be 

05:29:29.669 --> 05:29:33.264
signed in so they can keep track
 of travel information across 

05:29:33.265 --> 05:29:38.701
devices and platforms.  Using 
this API Kayak users who have 

05:29:38.702 --> 05:29:41.229
saved credentials in Chrome will
 never need to retype them 

05:29:42.124 --> 05:29:47.263
again.  And so a user who goes 
to Kayak and taps the sign-in

05:29:53.391 --> 05:29:57.115
 button, will see a prompt to 
select the credentials they want

05:29:57.625 --> 05:30:00.844
 to sign in with and that's it. 
 They are signed in.  One tap, 

05:30:00.845 --> 05:30:04.878
and you are in.  It's a really 
smooth experience! 

05:30:04.879 --> 05:30:09.293
What's even cooler --
(Applause). 

05:30:09.294 --> 05:30:11.294
Yes.  What's even cooler is

05:30:13.836 --> 05:30:14.341
 that Kayak can remember that 
the user used those credentials 

05:30:14.342 --> 05:30:20.084
to sign in so the next time the 
user goes back to Kayak, Kayak 

05:30:20.085 --> 05:30:25.427
can sign the user in 
automatically.  Instead of 

05:30:25.428 --> 05:30:28.047
launching up the Kayak website 
and you will see a little blue 

05:30:28.048 --> 05:30:31.775
bar at the bottom that is saying
 we are signing you in so the 

05:30:31.776 --> 05:30:34.803
user knows what's going on but 
then the user is signed in.  The

05:30:35.013 --> 05:30:39.219
 user had to do nothing, zero t 
aps. 

05:30:39.220 --> 05:30:41.709
So it's a really smooth 
experience.

05:30:47.558 --> 05:30:49.701
(Applause). 
So now in addition to helping 

05:30:49.702 --> 05:30:51.885
users sign in we want to help 
users complete transactions on 

05:30:51.886 --> 05:30:55.127
the Web to pay for things on the
 Web and to set this problem up 

05:30:55.128 --> 05:30:57.334
there is just one number you 
need to know which

05:31:00.867 --> 05:31:05.793
 is 66%.  There is a good 66% 
and a bad 66%.  So the good news

05:31:06.604 --> 05:31:12.544
 is that 66% of mobile commerce 
happens on the mobile Web is the

05:31:12.722 --> 05:31:16.046
 mobile Web is critically 
important for commerce.  On the 

05:31:16.047 --> 05:31:22.896
other hand, conversions on the 
mobile Web happen a rate that's 

05:31:22.897 --> 05:31:28.247
66% lower than the desktop Web. 
 So the mobile Web is critically

05:31:28.735 --> 05:31:32.862
 important for commerce, but 
it's also very inefficient.  And

05:31:33.186 --> 05:31:37.001
 we all know why that is.  
Completing a transaction on the 

05:31:37.192 --> 05:31:39.811
mobile Web is hard.  There are 
many forms to fill out.  There 

05:31:39.812 --> 05:31:42.532
are many screens to go through 
and many opportunities for the 

05:31:42.533 --> 05:31:47.555
user to drop off.  And, again, 
in Chrome we try our bit, do our

05:31:47.636 --> 05:31:51.401
 bit to help users.  We have 
auto fill feature and we try and

05:31:51.665 --> 05:31:53.665
 fill in form 

05:31:57.022 --> 05:32:01.222
fields to help the user through 
the flow.  And in fact studies 

05:31:57.022 --> 05:32:00.980
have shown that users on Android
 who use auto fill complete 

05:32:00.981 --> 05:32:04.226
transactions and form 
submissions on the Web 25% high 

05:32:04.227 --> 05:32:07.977
orates than other users. 
So that's great!  We are h 

05:32:07.978 --> 05:32:13.845
elping our users!  But, again, 
we asked ourselves what if we 

05:32:13.846 --> 05:32:18.259
could do it better.  And, again,
 we realized, yes, we can do it 

05:32:18.260 --> 05:32:22.908
better.  We can do it better if 
we turn the rains over to you --

05:32:23.383 --> 05:32:25.706
 reins over to you the developer
 and gave you complete control 

05:32:25.707 --> 05:32:28.954
of the experience.  So I'm 
really excited to announce a 

05:32:28.955 --> 05:32:34.887
launch of the Web payments API. 
 The new API that brings one tap

05:32:35.179 --> 05:32:41.548
 checkout to the Web for the 
first time ever!

05:32:41.549 --> 05:32:43.549
(

05:32:46.053 --> 05:32:47.760
Applause). 
This is awesome.  One company 

05:32:47.761 --> 05:32:53.190
that is making use of the API to
 streamline flow is shop I few. 

05:32:56.814 --> 05:33:02.253
  shopify.  So here they are 
using shopify and they have 

05:33:02.254 --> 05:33:05.463
items in the cart and ready to 
check out.  And when they hit 

05:33:05.464 --> 05:33:11.705
check out it does an API call to
 the browser to fill all of the 

05:33:11.706 --> 05:33:13.829
information needed to complete 
the transaction.  Rather than 

05:33:13.830 --> 05:33:16.040
user having to go through a 
bunch of form fields 

05:33:19.777 --> 05:33:21.775
and a bunch of screens, the user
 sees this, which is everything 

05:33:21.776 --> 05:33:25.006
they need to complete this 
trance x.  And when the user h 

05:33:25.007 --> 05:33:31.838
its pay, the transaction is 
done.  That's it.  One tap, and 

05:33:31.839 --> 05:33:35.099
the transaction is done.
(Applause).

05:33:40.792 --> 05:33:45.218
And this example I showed you 
this working with a credit card,

05:33:45.847 --> 05:33:51.038
 but this API also works with 
Android pay so we are bringing 

05:33:51.039 --> 05:33:53.668
Android pay into the browse ire 
with this API as well.  The flow

05:33:53.882 --> 05:33:57.200
 is exactly the same.  And in 
the future, this will work on 

05:33:57.201 --> 05:33:59.201
all other types of payment 
applications

05:34:02.036 --> 05:34:05.154
 also.  And with all of these 
APIs, we are working right out 

05:34:05.155 --> 05:34:08.563
in the open and collaborating 
closely across all of our 

05:34:08.564 --> 05:34:13.598
different browser vendors as 
well.  So we talked about making

05:34:15.208 --> 05:34:20.534
 experiences fast, making them 
engaging, converting visitors 

05:34:20.535 --> 05:34:24.764
into users, so let's look at the
 fourth pillar for mobile Web 

05:34:24.765 --> 05:34:28.302
success which is how do we then 
retain those users and Re-engage

05:34:28.684 --> 05:34:33.429
 with them at the right times.  
Now, one big thing that changed 

05:34:33.430 --> 05:34:37.265
in the shift to mobile was the 
importance of push-based 

05:34:37.266 --> 05:34:40.763
interactions.  We have these 
devices with us all of the time,

05:34:41.801 --> 05:34:44.782
 and we are allowing push notify
 okayings to stay up to date on 

05:34:44.783 --> 05:34:47.934
the things we care about.  This 
is why we are excited about push

05:34:48.238 --> 05:34:52.260
 notifications for the Web.  
These work exactly as you would 

05:34:52.261 --> 05:34:55.578
expect once a user ops into to 
receiving notifications from 

05:34:55.579 --> 05:34:59.399
your site, they will get those 
notifications, and they will get

05:34:59.701 --> 05:35:02.040
 them whether or not the site is
 open or whether or not the 

05:35:02.041 --> 05:35:06.251
browser is open.  And they show 
up exactly where users expect to

05:35:06.574 --> 05:35:12.713
 see them on the notifications 
tray or on the lock screen.  N 

05:35:12.714 --> 05:35:16.925
ow, one company sha is making 
use of push notifications is a 

05:35:16.926 --> 05:35:24.391
company called Jumia, a large 
eCommerce  provider in Africa.  

05:35:24.392 --> 05:35:27.608
Jumia was trying to figure out a
 problem they had have abandoned

05:35:28.009 --> 05:35:31.998
 shopping carts.  They turned to
 progressive Web Apps and they 

05:35:31.999 --> 05:35:34.953
implemented push notifications 
for the Web as a way to 

05:35:34.954 --> 05:35:38.892
Re-engage those users who had 
abandoned shopping carts.  This 

05:35:38.893 --> 05:35:43.715
is early days, but the results 
have been spectacular.  In fact,

05:35:43.810 --> 05:35:46.756
 Jumia reports that they see a 
nine-fold increase in 

05:35:46.757 --> 05:35:49.997
conversions of abandoned 
shopping carts for users who 

05:35:49.998 --> 05:35:52.676
come in through push 
notifications.  So well done, 

05:35:52.677 --> 05:35:55.613
Jumia, this is the kind of 
success we love to see!

05:36:02.333 --> 05:36:05.067
companies are implementing and 
rolling out push notifications 

05:36:05.068 --> 05:36:07.068
and seeing

05:36:08.916 --> 05:36:11.961
 success.  Last November at 
Chrome dev summit, we announced 

05:36:11.962 --> 05:36:16.211
we were sending out 350 million 
push notifications every day 

05:36:16.212 --> 05:36:21.252
across mobile and d esktop, and 
today I'm pleased to report less

05:36:21.447 --> 05:36:26.685
 than six months later, that 
number has grown to 10 billion 

05:36:26.891 --> 05:36:30.932
push notifications every single 
day.

05:36:32.632 --> 05:36:36.045
(Applause). 
And it continues to grow.  

05:36:39.756 --> 05:36:44.276
Amazing!  So there you have it, 
the four pillars for mobile Web 

05:36:44.277 --> 05:36:48.023
success.  Accelerate the 
experience, make it engaging, 

05:36:48.024 --> 05:36:53.356
immerse sive and polished, 
convert visitors into users and 

05:36:53.357 --> 05:36:56.964
then retain and Re-engage those 
users at the right times.  And 

05:36:56.965 --> 05:37:00.089
to show you an example of a 
great progressive Web App, one 

05:37:00.090 --> 05:37:04.668
that is made very effective use 
of these four pillars, let me 

05:37:04.669 --> 05:37:06.669
invite up on stage swag,

05:37:16.101 --> 05:37:17.915
 swag. 
&gt;&gt; HANNES SCHWAGER:  Hi, 

05:37:17.916 --> 05:37:22.114
everyone, for those who are not 
familiar with AirBerlin, we are 

05:37:22.115 --> 05:37:27.561
Germany's second largest a 
irline.  We fly to 147 

05:37:27.562 --> 05:37:31.293
destinations worldwide including
 San Francisco since May, and we

05:37:31.685 --> 05:37:37.730
 serve over 30 million 
passengers in 2015.  As an 

05:37:37.731 --> 05:37:42.647
airline, we are constantly 
working on new ways to improve 

05:37:42.648 --> 05:37:48.199
the travel journey, right, even 
off line.  And it's very 

05:37:48.200 --> 05:37:53.429
exciting to be here to tell you 
or to show you how we have been 

05:37:53.430 --> 05:37:57.955
building a progressive Web App 
to improve the customer check-in

05:37:59.355 --> 05:38:02.104
 experience.  Like any business,
 we know that not all of our 

05:38:03.702 --> 05:38:06.803
customers will download the app,
 especially those who are 

05:38:06.804 --> 05:38:11.932
traveling just once or twice a 
year.  And so I have been 

05:38:11.933 --> 05:38:16.256
looking quite a long time to 
find a solution how we can 

05:38:16.257 --> 05:38:22.340
improve or how we can make an 
easy check-in  via the mobile W 

05:38:22.341 --> 05:38:24.620
eb. 
Because a lot of people check in

05:38:24.912 --> 05:38:28.351
 via mobile Web.  So that's why 
I'm here today to show you what 

05:38:28.352 --> 05:38:33.080
we have built over the last 
month, and, therefore, I booked 

05:38:33.081 --> 05:38:37.411
a flight going to Rome.  I love 
going to Rome, and I booked it a

05:38:37.725 --> 05:38:43.199
 couple of weeks ago, and 
everyone was asking me if I want

05:38:43.538 --> 05:38:47.745
 to accept push notifications 
and I say, yes, why not, give me

05:38:48.168 --> 05:38:52.728
 a reminder when check-in is 
open.  Let's see if it worked.

05:39:07.278 --> 05:39:10.105
 ready.  It worked out.  There 
it is snchts

05:39:13.131 --> 05:39:16.019
!  Tapping on a push 
notification takes me directly 

05:39:16.020 --> 05:39:20.563
to a page where I have access to
 all of my flight details, where

05:39:20.746 --> 05:39:24.993
 I can just check in by one c 
lick, and that's what we are 

05:39:24.994 --> 05:39:29.143
going to do.  It really opens up
 the page very quickly, and just

05:39:29.407 --> 05:39:36.249
 by tapping, get the boarding 
pass, check-in was successful.  

05:39:36.250 --> 05:39:42.792
So now I have my boarding pass 
right away there thanks to the 

05:39:42.793 --> 05:39:46.418
progressive Web App, and I can 
see, okay, there are some 

05:39:46.419 --> 05:39:52.275
journey details, check in, done,
 boarding 30 minutes, just 

05:39:52.276 --> 05:39:55.191
checked to be ready for s 
ecurity, and snacks and drinks 

05:39:55.192 --> 05:40:00.107
will be served.  Good to know. 
And AirBerlin is asking me at 

05:40:00.108 --> 05:40:03.548
the home screen.  I think it was
 just a great experience what I 

05:40:03.549 --> 05:40:08.523
had and I'm traveling tomorrow 
to Rome, so it's fine to add it 

05:40:08.524 --> 05:40:11.593
to home screen because then I 
have a much faster access to all

05:40:11.803 --> 05:40:17.326
 of my AirBerlin information.  
But it's not only having a cool 

05:40:17.327 --> 05:40:21.559
and convenient experience with 
the push notification for the 

05:40:21.560 --> 05:40:23.781
check-in, it's more.  It's being
 there for the customer 

05:40:23.782 --> 05:40:31.119
throughout the whole journey.  
So as all of you know that often

05:40:31.312 --> 05:40:35.456
 on airports, the Internet is 
very bad or you don't have any 

05:40:35.457 --> 05:40:40.159
connectivity.  You are in a r 
ush.  You are in a hurry, and 

05:40:40.160 --> 05:40:42.160
I'm not sure if you can have 
access to the

05:40:46.531 --> 05:40:52.237
 Internet.  So, therefore, I go 
for airplane mode to say, okay, 

05:40:52.238 --> 05:40:58.480
I'm off line.  And I will have 
the possibility to get back via 

05:40:58.481 --> 05:41:02.727
the home screen icon in full 
screen mode.  So you have seen 

05:41:02.728 --> 05:41:06.646
it loaded very, very quickly and
 I have all of my details there,

05:41:07.356 --> 05:41:12.117
 all critical content.  I can 
explore destination, even in 

05:41:12.118 --> 05:41:16.227
offline mode can read what I can
 do in Rome, get some 

05:41:16.228 --> 05:41:20.024
information about Rome.  And 
most important thing is I have 

05:41:20.025 --> 05:41:24.771
access to my boarding pass.  And
 I think we don't need to do 

05:41:24.772 --> 05:41:28.361
screen shots anymore of our 
boarding pass being sure that I 

05:41:28.490 --> 05:41:33.319
have it with me, right?  I do 
this.  So I think with t hat, we

05:41:33.824 --> 05:41:38.677
 really can cancel that and be 
sure having it right away with 

05:41:38.678 --> 05:41:42.792
you. 
Thanks to this --

05:41:45.816 --> 05:41:47.816
(Applause). 
So thanks to the progressive Web

05:41:48.298 --> 05:41:51.440
 App and service work here we 
have been able to improve the 

05:41:51.441 --> 05:41:55.152
journey for all of our c 
ustomers, not only those who 

05:41:55.153 --> 05:41:58.888
have installed our app, and the 
check-in is just the first step,

05:41:58.993 --> 05:42:05.115
 I would say.  It's, we already 
are thinking of rolling out the 

05:42:05.116 --> 05:42:08.234
technology to other critical 
parts of the travel journey, and

05:42:08.541 --> 05:42:12.122
 I'm very happy to say that we 
are going to roll out this 

05:42:12.123 --> 05:42:16.304
version within the next weeks to
 our users, and a big thanks to 

05:42:16.305 --> 05:42:20.192
the team who did a very good job
 within the last couple of 

05:42:20.193 --> 05:42:22.350
weeks.  Thank you.

05:42:28.178 --> 05:42:30.576
(Applause). 
&gt;&gt; RAHUL ROY-CHOWDHURY:  Thank 

05:42:30.577 --> 05:42:36.848
you.  That was great!  More and 
more companies are deploying 

05:42:36.849 --> 05:42:38.849
progressive Web apps and seeing

05:42:41.231 --> 05:42:44.729
 success.  Sumo, this is Japan's
 largest real estate site and 

05:42:44.730 --> 05:42:48.699
they recently deployed a 
progressive Web App and saw huge

05:42:48.889 --> 05:42:55.148
 improve wills in speed and 
re-engagement.    Sumo reports 

05:42:55.149 --> 05:42:58.670
they were able to reduce page 
load times by 75%, and then when

05:42:58.859 --> 05:43:03.097
 they added push notifications 
as a way to Re-engage users by 

05:43:03.098 --> 05:43:06.614
sending them information about 
new real estate listings they 

05:43:06.615 --> 05:43:11.335
might care about, they saw a 31%
 open rate on those n 

05:43:11.336 --> 05:43:15.263
otifications.  It's truly 
astounding.  This is great 

05:43:15.264 --> 05:43:19.402
success, well done, Suumo this 
is the kind of success we love 

05:43:19.403 --> 05:43:23.527
to see.  (
(Applause). 

05:43:24.079 --> 05:43:29.066
Or ache alley express, a l 
eading global online 

05:43:29.067 --> 05:43:32.085
marketplace, they deployed a 
progressive Web App as well and 

05:43:32.086 --> 05:43:36.220
they report increased engagement
 across all browsers across all 

05:43:36.221 --> 05:43:40.935
platforms.  In act, Aliexpress 
says the time spend in their app

05:43:41.963 --> 05:43:47.797
 went up 74% and they saw an 82%
 increase in conversions on iOS.

05:43:47.798 --> 05:43:52.727
  So these investments make 
sense across all browsers, 

05:43:52.728 --> 05:43:57.556
across all platforms, not just 
Chrome. 

05:43:58.166 --> 05:44:01.286
And the momentum continues to 
grow.  More and more companies 

05:44:01.287 --> 05:44:05.324
are deploying progressive Web 
Apps and seeing success, and I 

05:44:05.325 --> 05:44:12.453
hope that all of you when you 
leave Google I dlsh /O will go 

05:44:12.454 --> 05:44:14.979
out and do the same.  We are not
 done yet.  The Web will 

05:44:14.980 --> 05:44:18.471
continue to evolve as the world 
of computing evolves, and here 

05:44:18.472 --> 05:44:21.675
on the Chrome team we are 
working on a long list of 

05:44:21.676 --> 05:44:27.328
exciting new projects. 
So let me take the next six 

05:44:27.329 --> 05:44:32.181
hours and walk through each of 
these in a lot of detail.  I see

05:44:32.368 --> 05:44:36.395
 people heading for the exits.  
No, no, I'm not going to do t 

05:44:36.396 --> 05:44:38.921
hat!  Let me give you two 
examples to give you a flavor 

05:44:38.922 --> 05:44:42.150
for the kinds of things we are 
working on.  We are working on 

05:44:42.151 --> 05:44:45.571
the physical Web.  The physical 
Web is a way to bring the Web, 

05:44:45.572 --> 05:44:49.410
to extend the Web to objects 
around us.  Wouldn't it be cool 

05:44:49.411 --> 05:44:52.529
if you got on a bus and you 
could get the bus schedule 

05:44:52.530 --> 05:44:55.341
available on your phone 
instantly right when you needed 

05:44:55.342 --> 05:44:59.253
it?  This is possible today in 
public buses across London using

05:44:59.474 --> 05:45:03.682
 the physical Web.  And more 
generally the physical Web is a 

05:45:03.683 --> 05:45:07.722
way for objects to broadcast U 
RLs to us and for us to use the 

05:45:07.723 --> 05:45:11.351
URLs to interact with those 
objects right on demand when we 

05:45:11.352 --> 05:45:19.290
need it.  We are also working on
 Web assembly.  Web assembly is 

05:45:19.291 --> 05:45:23.518
an ambitious effort across many 
different browser vendors to 

05:45:23.519 --> 05:45:28.964
define a new low level language,
 one that runs at native speeds 

05:45:28.965 --> 05:45:33.371
but securely and on the Web.  It
 is still early days but we are 

05:45:33.372 --> 05:45:37.323
really excited about the 
potential here for unlocking new

05:45:37.591 --> 05:45:41.680
 high performance cases, use 
cases, things from gaming to 

05:45:41.681 --> 05:45:43.738
media to scientific computing 
and who knows what

05:45:47.273 --> 05:45:51.502
 else.  So as we work on 
improving the mobile Web today, 

05:45:51.503 --> 05:45:55.323
and as we look to the future, 
there is one key thing to

05:45:58.551 --> 05:46:02.743
 remember, which is that we are 
all in this together.  My 

05:46:02.880 --> 05:46:06.603
session is almost over, but this
 conversation is not over.  This

05:46:06.990 --> 05:46:10.787
 conversation is just getting 
started.  We are going to have a

05:46:10.788 --> 05:46:15.164
 series of events throughout the
 remainder of this year all 

05:46:15.165 --> 05:46:18.759
across the world as part of the 
progressive Web Apps road show 

05:46:18.760 --> 05:46:23.396
and there is a dev summit in 
Amsterdam next month and a  

05:46:23.608 --> 05:46:26.619
registration link you can use to
 sign up.  And if you can't make

05:46:26.828 --> 05:46:34.790
 one of these events, we are 
active and engaged on Twitter, 

05:46:34.791 --> 05:46:39.214
on StackOverflow, on github and 
we have a developer  portal with

05:46:39.509 --> 05:46:42.146
 a lot more information.  We 
would love to hear from you.  We

05:46:42.344 --> 05:46:46.980
 would love to work with you. 
We would love to help you be 

05:46:46.981 --> 05:46:49.889
successful.  And, of course, we 
work collaboratively across all 

05:46:49.890 --> 05:46:53.682
of the different browser v 
endors.  Ultimately it's up to 

05:46:53.683 --> 05:47:00.857
all of us, browser  vendors and 
Web developers to write the 

05:47:00.858 --> 05:47:05.022
future of the Web.  So go out 
there and build a great 

05:47:05.023 --> 05:47:09.025
progressive Web App!  The future
 of the mobile Web looks very, 

05:47:09.026 --> 05:47:12.866
very bright indeed.  Thank you!

05:50:33.096 --> 05:50:35.096
Applause).

05:54:32.929 --> 05:54:34.929
&gt;

05:54:36.439 --> 05:54:38.439
&gt;

05:54:42.028 --> 05:54:43.028
&gt;&gt;
&gt;&gt;

05:54:42.028 --> 05:54:44.028
&gt;&gt; eb

05:55:02.156 --> 05:55:04.156
 App,?
&gt;&gt; TAYLOR SAVAGE:  

05:55:06.205 --> 05:55:07.471
, Taylor Savage,.
&gt;&gt;

05:55:06.205 --> 05:55:08.504
&gt;&gt;
&gt;&gt;

05:55:08.505 --> 05:55:09.505
&gt;&gt;
&gt;&gt;

05:55:08.505 --> 05:55:09.505
&gt;&gt;
&gt;&gt;

05:55:08.505 --> 05:55:10.505
&gt;&gt;
&gt;&gt; 5/

05:55:12.625 --> 05:55:17.536
1/16. 
Polymer and Progressive Web

05:55:21.500 --> 05:55:24.212
 A pps: Building on the Modern W
 eb.

06:09:15.685 --> 06:09:17.501
&gt;&gt; TAYLOR SAVAGE:  Good 
afternoon, everybody, I'm the 

06:09:17.502 --> 06:09:20.829
product manager here at Google 
on will Polymer project.  How 

06:09:20.830 --> 06:09:25.163
many people are familiar with or
 have used Polymer or Web 

06:09:25.164 --> 06:09:28.492
components before.  Wow!  
Awesome!  I don't have to do the

06:09:29.301 --> 06:09:32.316
 talking.  That's great!  I have
 got a lot of exciting new 

06:09:32.317 --> 06:09:34.518
features, a lot of exciting 
product to talk about.  Before I

06:09:34.733 --> 06:09:37.657
 get started, I want to begin at
 the beginning. 

06:09:37.658 --> 06:09:40.972
We have one overarching goal on 
the Polymer project, which is to

06:09:41.277 --> 06:09:45.735
 build the tools and libraries 
using the latest Web platform 

06:09:45.736 --> 06:09:48.678
features so that you, the 
developers can build the next 

06:09:49.145 --> 06:09:51.769
generation of Web Apps.  If you 
have been following Web 

06:09:51.770 --> 06:09:54.687
development or if you were at 
the talk that came right before 

06:09:54.688 --> 06:09:58.187
mine, you know the next 
generation of Web Apps are here 

06:09:58.188 --> 06:10:01.950
and they are calls progressive 
Web Apps.  So the Polymer 

06:10:01.951 --> 06:10:05.245
project mission is to provide 
tools and libraries to make it 

06:10:05.246 --> 06:10:11.305
easy to use the latest Web 
platform features to build  

06:10:11.306 --> 06:10:15.699
progressive Web Apps but that's 
wordy for a vision statement.  

06:10:15.700 --> 06:10:18.829
So let's make it more concise. 
The Polymer project's mission is

06:10:19.041 --> 06:10:22.971
 to use the platform to deliver 
great user experiences. 

06:10:22.972 --> 06:10:27.294
The key part here is to use the 
platform.  On the Polymer 

06:10:27.295 --> 06:10:30.290
project, we are not trying to 
build massive abstractions, not 

06:10:30.291 --> 06:10:34.332
trying to build mega frameworks.
  We are trying to let, you the 

06:10:34.333 --> 06:10:38.172
developer, use what is cutting 
edge in the Web App it accepted 

06:10:38.173 --> 06:10:43.906
so you can instead of building 
massive tool chains you can 

06:10:43.907 --> 06:10:46.654
focus on delivering great 
experiences to users on the Web.

06:10:49.333 --> 06:10:54.861
traditionally the Web  platform 
hasn't been a great platform for

06:10:55.692 --> 06:10:59.817
 delivering immersive app-like 
experiences.  The lowest level 

06:10:59.818 --> 06:11:05.030
that you get is an HTML tag.  
These  HTML tags you are 

06:11:05.031 --> 06:11:07.549
provided for things like 
headings, paragraphs and lists 

06:11:07.550 --> 06:11:13.810
work great for document markup, 
but they are not so great for c 

06:11:13.811 --> 06:11:16.763
onstructing immersive app-lick 
experiences.  Over the past 20 

06:11:17.222 --> 06:11:21.733
years that HTML has existed, the
 language hasn't evolved much 

06:11:21.734 --> 06:11:26.182
and user expectations have 
evolved significantly.  What has

06:11:26.495 --> 06:11:30.713
 evolved and what has gotten s 
ignificantly more powerful is 

06:11:30.714 --> 06:11:33.922
JavaScript.  And so to create 
the app-like experiences on the 

06:11:33.923 --> 06:11:36.937
mobile Web we have used 
JavaScript as an escape hatch.  

06:11:36.938 --> 06:11:42.385
We have built meta platforms, we
 have built JavaScript run 

06:11:42.386 --> 06:11:45.221
times, tool chains all in 
JavaScript to allow us, the 

06:11:45.222 --> 06:11:48.123
developers to develop app 450EU6
 like experiences.  This might 

06:11:48.124 --> 06:11:51.249
have been fine on desk top where
 we have beefy machines 

06:11:51.250 --> 06:11:54.666
connected by cables or Wi-Fi, 
but there has been a major 

06:11:54.667 --> 06:12:00.619
change in the Web, which is the 
mobile Web.  And the mobile Web 

06:12:00.620 --> 06:12:03.327
is incredibly powerful.  You 
don't have to ask permission 

06:12:03.328 --> 06:12:07.040
fromin to publish your 
application to the Web and then 

06:12:07.041 --> 06:12:10.085
nearly every single device out 
there is going to have a browser

06:12:10.271 --> 06:12:14.589
 and that user can access your 
application.  That's awesome!  

06:12:14.590 --> 06:12:18.028
The mobile Web has incredible 
reach and it reaches into places

06:12:18.551 --> 06:12:21.836
 where data connections are 
limited, where device hardware 

06:12:21.837 --> 06:12:25.981
is limited, and for the next 
billion users coming on line 

06:12:25.982 --> 06:12:30.526
today, they typically have the 
worst combination, slow data 

06:12:30.527 --> 06:12:37.583
connections, and low hardware. 
So building these towering meta 

06:12:37.584 --> 06:12:42.485
platforms all on JavaScript to 
deliver an app-like experience 

06:12:42.486 --> 06:12:46.598
doesn't fly on the Web.  When 
flaky connections are the norm, 

06:12:46.599 --> 06:12:50.929
you need minimal overhead, min 
nail redundancy, maximal 

06:12:50.930 --> 06:12:53.361
efficiency to be able to deliver
 that great experience.  So what

06:12:53.559 --> 06:12:58.185
 do we do as Web developers?  
How do we solve this new 

06:12:58.186 --> 06:13:02.405
challenge of the mobile Web?  
Well, the answer so far has been

06:13:02.732 --> 06:13:05.867
 more JavaScript.  We keep 
piling on more and more 

06:13:06.132 --> 06:13:09.055
JavaScript so get this to work 
to the point where we are 

06:13:09.056 --> 06:13:12.173
running JavaScript son our 
servers so we can representedder

06:13:12.386 --> 06:13:17.919
 our application we can send it 
to the device, we can paint and 

06:13:17.920 --> 06:13:20.924
we download more JavaScript so 
it can rehigh descrait and boot 

06:13:20.925 --> 06:13:25.695
up and it's more interactive.  
And it is frustrating for users 

06:13:25.696 --> 06:13:29.287
and developers as well. 
We think there is a better 

06:13:29.288 --> 06:13:34.008
solution, which is less 
JavaScript.  Use the platform to

06:13:34.939 --> 06:13:37.895
 build modern mobile Web Apps 
use what's already there on your

06:13:38.451 --> 06:13:41.378
 user's device, the browser.  
They have the vast majority of 

06:13:41.379 --> 06:13:43.979
what they need to run your 
application sitting right on 

06:13:43.980 --> 06:13:48.818
their device.  Use it.  And 
thanks to powerful new features 

06:13:48.819 --> 06:13:52.654
baked into the Web Platte form, 
it's increasingly possible.  

06:13:52.655 --> 06:13:56.782
It's increasingly possible to as
 the developer construct using 

06:13:56.783 --> 06:14:01.704
immersive app-like experiences 
using what's baked into the 

06:14:01.705 --> 06:14:05.917
browser.  We want to make it 
easy using tools and libraries 

06:14:05.918 --> 06:14:09.357
to build less overhead, higher 
quality application. 

06:14:09.358 --> 06:14:12.989
So so far we have focused on two
 things on the Polymer project, 

06:14:12.990 --> 06:14:16.905
using Web components and 
building Web components.  Let's 

06:14:16.906 --> 06:14:20.747
start with using Web components.
  We want the browser itself to 

06:14:20.748 --> 06:14:26.993
be more capable by introducing 
the notion of a standardized 

06:14:26.994 --> 06:14:31.407
encapsulated component into the 
platform i tself.  The hardest 

06:14:31.408 --> 06:14:34.421
part of building a Web 
application today is knowing 

06:14:34.422 --> 06:14:38.362
where to start.  And for just 
about any large application of 

06:14:38.363 --> 06:14:42.596
any meaningful size, chances are
 the place to start is to pick a

06:14:42.796 --> 06:14:46.826
 JavaScript framework. 
And by my last count, there are 

06:14:46.827 --> 06:14:49.448
approximately one million 
JavaScript frameworks out there 

06:14:49.449 --> 06:14:53.069
to choose from, and this is a 
really critical decision.  It's 

06:14:53.070 --> 06:14:57.198
going to be before you write a 
line of code you will have to 

06:14:57.199 --> 06:15:00.000
pick a JavaScript framework and 
every single line of code you 

06:15:00.001 --> 06:15:03.552
write from that point forward 
will likely be directly tied to 

06:15:03.553 --> 06:15:06.683
that decision, to that 
JavaScript framework that you 

06:15:06.684 --> 06:15:09.072
picked. 
Now, JavaScript frameworks can 

06:15:09.073 --> 06:15:13.119
be really powerful.  They can 
give you useful features for 

06:15:13.120 --> 06:15:16.038
structuring large scale 
applications, features like 

06:15:16.039 --> 06:15:18.117
internationalization, making 
routing easier and they can also

06:15:18.746 --> 06:15:21.360
 provide a convenient mental 
model to think about how you are

06:15:21.768 --> 06:15:24.811
 building this application, make
 it easier as a developer to 

06:15:24.812 --> 06:15:27.814
create that large scale app.  
There are a couple of very high 

06:15:27.815 --> 06:15:32.644
costs to using a JavaScript 
framework or meta platform to 

06:15:32.645 --> 06:15:35.982
build your application on the 
Web.  The first cost is a cost 

06:15:35.983 --> 06:15:40.191
that your users pay.  When you 
use a meta platform, when you 

06:15:40.192 --> 06:15:43.529
use this big towering 
abstraction JavaScript not don't

06:15:45.257 --> 06:15:47.954
  only do you have to send the 
code to write the application 

06:15:47.955 --> 06:15:51.879
but you have to send the 
JavaScript code to supply the 

06:15:51.880 --> 06:15:55.406
meta platform.  You need to 
execute that platform on the 

06:15:55.407 --> 06:15:59.513
device before your app can 
execute.  This might have been 

06:15:59.514 --> 06:16:06.487
fine on desktop with big  beefy 
medications with cable and Wi-Fi

06:16:06.878 --> 06:16:10.404
 connections but on mobile, 
throw, flaky 3G connections are 

06:16:10.405 --> 06:16:14.340
the norm, slow devices are the 
norm and using abstractions 

06:16:14.341 --> 06:16:18.043
users pay the cost both in time 
it takes to download the meta 

06:16:18.044 --> 06:16:21.270
platform onto their device and 
boot it up and also very 

06:16:21.271 --> 06:16:24.248
literally they pay the cost in 
their data plan of the extra 

06:16:24.249 --> 06:16:27.734
hundreds of kilobytes or 
megabytes of JavaScript that has

06:16:28.110 --> 06:16:31.368
 to be downloaded so you can run
 your application on the Web. 

06:16:31.647 --> 06:16:34.875
And the second cost of these 
abstractions is a cost that you,

06:16:35.290 --> 06:16:40.713
 the developer, pay.  When you 
build a component in your Web 

06:16:40.714 --> 06:16:43.836
App, it's directly tied to the 
framework you chose.  So no work

06:16:44.046 --> 06:16:47.779
 you do for those components are
 useful in alternate frameworks.

06:16:47.780 --> 06:16:51.991
  So if your next project you 
are going to choose a different 

06:16:51.992 --> 06:16:54.620
JavaScript framework because a 
new one has come out you have to

06:16:54.711 --> 06:16:58.983
 throw away the old component 
code.  And if you are a company 

06:17:00.648 --> 06:17:02.460
with multiple teams and they 
have slightly different 

06:17:02.461 --> 06:17:05.785
framework stacks you can't share
 components across teams using 

06:17:05.786 --> 06:17:09.210
different stacks so though there
 are many benefits to using a 

06:17:09.211 --> 06:17:12.854
large meta platform mega 
framework, users pay the cost of

06:17:13.032 --> 06:17:16.465
 that abstraction and you, the 
developer also pay the cost of 

06:17:16.466 --> 06:17:20.800
that abstraction in terms of 
framework lock in. 

06:17:20.801 --> 06:17:26.233
What if there was a better way? 
 Every single framework has a 

06:17:26.234 --> 06:17:29.535
notion of an encapsulated 
component.  What if rather than 

06:17:29.536 --> 06:17:33.963
a framework having to provide 
that encapsulated component the 

06:17:34.270 --> 06:17:37.919
browser itself let you dough 
fine your own components and 

06:17:37.920 --> 06:17:41.022
those components could work with
 any JavaScript framework you 

06:17:41.023 --> 06:17:43.450
might want to use.  You could 
pick components off a shelf that

06:17:43.743 --> 06:17:45.951
 other developers have built in 
open source that solve a problem

06:17:46.152 --> 06:17:48.879
 that you are faced with to use 
in your own application.  And 

06:17:48.880 --> 06:17:52.412
the components would be 
compatible no matter what 

06:17:52.413 --> 06:17:56.643
JavaScript stack you are using. 
 This is the promise of Web 

06:17:56.644 --> 06:18:02.716
components.  Web components are 
a new set of W3C standards, Web 

06:18:02.717 --> 06:18:05.907
platform standards that extend a
 native component model in the 

06:18:05.908 --> 06:18:09.252
platform itself.  Because the 
Web already has a component 

06:18:09.253 --> 06:18:14.061
model baked in, the DOM.  The 
DOM has DOM nodes which you can 

06:18:14.062 --> 06:18:16.996
call methods on which have 
properties and can send

06:18:22.215 --> 06:18:26.148
 DOM events.  And they have a 
declarative way to construct 

06:18:22.215 --> 06:18:25.540
that DOM with the HTML language.
  But the problem is HTML is f 

06:18:25.541 --> 06:18:29.478
ixed.  And with Web components, 
you can extend the language of 

06:18:29.479 --> 06:18:32.991
HTML itself by creating new 
elements that you can then use 

06:18:32.992 --> 06:18:36.824
in your application, 
encapsulated reusable components

06:18:37.011 --> 06:18:40.740
 without the cost of this 
framework overhead.  And what's 

06:18:40.741 --> 06:18:44.356
great is with Web components 
HTML becomes your 

06:18:44.357 --> 06:18:47.466
interoperability layer.  Every 
single framework if it has to 

06:18:47.467 --> 06:18:50.814
have an application run on the 
Web platform at the end of the 

06:18:50.815 --> 06:18:55.310
day has to speak HTMLs the 
lowest level visual primitive of

06:18:55.544 --> 06:18:59.364
 the Web.  A Web component 
essentially comes another HTML 

06:18:59.365 --> 06:19:04.101
tab just like your dibs, Ps, L 
Is.  So now that we can extend 

06:19:04.102 --> 06:19:08.309
HTML now that we create our own 
HTML  tags we can reuse them 

06:19:08.310 --> 06:19:13.258
regardless of what JavaScript 
stack we are using. 

06:19:13.565 --> 06:19:16.260
So one challenge is as many of 
you know if you have been 

06:19:16.261 --> 06:19:20.305
following the Web component and 
start it's taken a long time.  

06:19:20.306 --> 06:19:24.718
So the very first version of 
this Web component spec came out

06:19:25.326 --> 06:19:28.855
 in 2012, almost four years ago 
to the day.  And these specs 

06:19:28.856 --> 06:19:31.782
have gone through many changes 
and this is the nature of 

06:19:31.783 --> 06:19:37.981
standards work, the nature of 
spec work but I'm extremely 

06:19:37.982 --> 06:19:40.235
excited that today thanks to 
broad cross browser 

06:19:40.236 --> 06:19:43.216
collaboration we are in the home
 stretch for Web component 

06:19:43.217 --> 06:19:46.779
support. 
So Web components is really an 

06:19:46.780 --> 06:19:50.067
umbrella term for the lower 
level primitives, template, HTML

06:19:50.068 --> 06:19:54.129
 imports, custom elements and 
shadow DOM.  Template elements 

06:19:54.130 --> 06:19:57.756
be broadly shipped across 
browser.  HTML imports of 

06:19:57.757 --> 06:19:59.757
shipped in Chrome and others are

06:20:02.490 --> 06:20:06.815
 pending 6 module.  The most 
powerful primitive is to let you

06:20:06.938 --> 06:20:11.750
 extend HTML, let you create 
your own Web components and 

06:20:11.751 --> 06:20:14.882
thanks to broad cross-browser 
cooperation from the major 

06:20:14.883 --> 06:20:20.508
browser vendors, custom elements
 and shadow DOM specs hit a 

06:20:20.509 --> 06:20:26.344
major milestone with V1.  V1 is 
the latest iteration of the two 

06:20:26.345 --> 06:20:30.481
specs, why V1 we like to index 
by zero in speckland, I'm not 

06:20:30.482 --> 06:20:34.698
really sure.  But most 
importantly all major browser 

06:20:35.209 --> 06:20:38.436
venders are on board with 
driving implementations of these

06:20:38.830 --> 06:20:43.981
 V1 specs, FireFox, edge, 
Safari, Chrome we are all 

06:20:43.982 --> 06:20:48.103
involved to get to this point 
with these V1 versions.  Its aI 

06:20:48.104 --> 06:20:51.437
high priority roadmap item for 
the edge team to implement.  

06:20:51.438 --> 06:20:53.847
FireFox and Chrome 
implementations of V1 are well 

06:20:53.848 --> 06:20:57.969
under way, and Safari has 
working versions of V1, shadow 

06:20:57.970 --> 06:21:01.492
DOM and custom elements in their
 nightly builds.  So with the 

06:21:01.493 --> 06:21:07.026
Web components right around the 
corner, and using the polyfills 

06:21:07.027 --> 06:21:10.556
that exist today to use thighs 
features, many major companies 

06:21:10.557 --> 06:21:15.888
are already using Web components
 in production.  Github today 

06:21:15.889 --> 06:21:21.477
uses custom elements for all of 
its time stamps and emoggy 

06:21:21.478 --> 06:21:23.478
across the 

06:21:24.725 --> 06:21:28.725
site.  Twitter just announced 
they will be using shadow DOM 

06:21:24.725 --> 06:21:29.662
for all of their embedded  
Tweets rather than the much 

06:21:29.663 --> 06:21:35.601
heavier wait iframes.  And the 
ecosystem around building these 

06:21:35.602 --> 06:21:38.731
Web components is starting to 
accelerate and take off.  Custom

06:21:39.526 --> 06:21:44.758
 elements.IO which is a major 
aggregator, c omponents built by

06:21:45.481 --> 06:21:49.518
 Web developers across the world
 has 2,000 components on it 

06:21:49.519 --> 06:21:53.430
written by over 800 authors an 
more are being added every 

06:21:53.431 --> 06:21:56.839
single day.  So browsers are 
actively building support for 

06:21:56.840 --> 06:21:59.988
Web components.  Major sites are
 already using Web components in

06:22:00.457 --> 06:22:04.207
 production.  The ecosystem is 
already beginning to flourish. 

06:22:04.706 --> 06:22:07.607
Grued native Web component 
browser support is no longer a 

06:22:07.608 --> 06:22:10.947
matter of if, but a matter of 
when, and when could be as soon 

06:22:10.948 --> 06:22:15.812
as later this year.  So in the 
past, when we have talked a bout

06:22:15.813 --> 06:22:17.813
 -- prep

06:22:21.119 --> 06:22:21.704
 -
(Applause).

06:22:21.705 --> 06:22:23.705
In the  

06:22:28.361 --> 06:22:32.561
past when we have talked about 
Web components they have been on

06:22:28.361 --> 06:22:29.965
 the bleeding edge of Web 
development and now Web 

06:22:29.966 --> 06:22:33.886
components are just on the l 
eading edge of Web development. 

06:22:33.887 --> 06:22:38.503
 So as you saw, Web components 
are four lower level specs and 

06:22:38.504 --> 06:22:41.058
they are great and great to use,
 but they can be hard to figure 

06:22:41.059 --> 06:22:46.172
out how to actually build and 
encapsulate a Web component so 

06:22:46.173 --> 06:22:50.603
we built the Polymer library to 
make it easier to create your 

06:22:50.604 --> 06:22:54.638
own Web components.  We first 
announced the developer preview 

06:22:54.639 --> 06:23:01.166
of the Polymer lib two years ago
 at Google  I/O.  We were trying

06:23:01.318 --> 06:23:04.189
 to see would it be possible to 
tie the low level specs together

06:23:04.280 --> 06:23:07.927
 to make it easier for 
developers to create reusable 

06:23:07.928 --> 06:23:11.447
components.  And the answer, 
yes, but it n eeds to be faster,

06:23:11.693 --> 06:23:16.396
 last year at Google I/O we 
announced Polymer 1.0.  It was a

06:23:16.595 --> 06:23:20.000
 ground up rewrite of the 
library focused on making it 

06:23:20.001 --> 06:23:22.523
fast, lean, ready to use in 
production and it was 

06:23:22.524 --> 06:23:26.641
significantly faster.  Three to 
four times faster than the 

06:23:26.642 --> 06:23:30.592
developer preview version for 
element construction.  With 1.0 

06:23:30.593 --> 06:23:34.818
we want 9 to show the Web 
component process was not just 

06:23:34.819 --> 06:23:37.547
theoretical but you could use 
Web components in production 

06:23:37.548 --> 06:23:41.294
today.  Since this 1.0 launch, 
the library has seen in, many 

06:23:41.295 --> 06:23:44.878
new features and enhancements 
and it's gotten even faster so 

06:23:44.879 --> 06:23:48.604
since this 1.0 release which i 
tself was three to four times 

06:23:48.605 --> 06:23:52.731
faster than the original 
developer preview the latest 

06:23:52.732 --> 06:23:55.702
version is now another 10% 
faster on Safari and another 25%

06:23:56.156 --> 06:23:59.609
 faster on Chrome for element 
construction.

06:23:59.698 --> 06:24:01.698
(

06:24:03.549 --> 06:24:05.710
Applause). 
So everything we do with Polymer

06:24:05.811 --> 06:24:10.127
 we build is open source first 
on github in the open and we 

06:24:10.128 --> 06:24:14.182
pull the latest releases into 
Google conversion Tim to Google 

06:24:14.183 --> 06:24:17.900
teams can use Polymer for their 
 applications.  Polymer is one 

06:24:17.901 --> 06:24:24.038
of the fastest growing front end
 technologies within Google.  

06:24:24.039 --> 06:24:27.852
Over 400 Google projects today 
are using Polymer with over 

06:24:27.853 --> 06:24:32.296
4,000 unique components built by
 Google teams to use in their 

06:24:32.297 --> 06:24:35.312
products and Polymer is already 
launched in production across 

06:24:35.313 --> 06:24:38.694
major Google properties, 
including Chrome, translate, 

06:24:38.695 --> 06:24:43.851
play music, You Tube gaming, 
Google 5 and the Google I/O Web 

06:24:43.852 --> 06:24:46.785
App which I'm sure you are 
familiar with.  You can see how 

06:24:46.786 --> 06:24:50.718
serious a strategic initiative 
Polymer is for Google and that 

06:24:50.719 --> 06:24:55.156
it's already being serve in 
production to over a billion 

06:24:55.157 --> 06:24:58.543
users on Google products.  Not 
only that, Polymer is being used

06:24:58.763 --> 06:25:02.840
 outside of Google by companies 
big and small.  In fact, Polymer

06:25:02.841 --> 06:25:08.134
  adoption in the wild has 
quietly skyrocketed.  There are 

06:25:08.135 --> 06:25:12.059
over 4 million Web pages using 
policy mer on the open Web and 

06:25:12.060 --> 06:25:15.380
many large companies are 
investing in Polymer and Web 

06:25:15.381 --> 06:25:18.066
components for the future of 
their front end stacks.  I want 

06:25:18.067 --> 06:25:22.740
to talk about a couple of these 
companies today.  The first is 

06:25:22.741 --> 06:25:28.073
net-a-porter.  Net-a-porter is  
a online leader in fashion.  

06:25:28.074 --> 06:25:33.098
They discovered Polymer at 
Google a year ago.  They started

06:25:33.801 --> 06:25:37.037
 implementing individual pieces 
of their products with Polymer 

06:25:37.038 --> 06:25:40.057
elements.  They have a complete 
end-to-end life cycle for all of

06:25:40.251 --> 06:25:44.090
 the components they use across 
all of their sites and pages.  

06:25:44.091 --> 06:25:50.240
They have their custom Yeoman 
for generating net-a-porter 

06:25:50.241 --> 06:25:52.346
components. 
They generate documentation to 

06:25:52.347 --> 06:25:59.102
make it easier for engineers to 
across the team to use other 

06:25:59.103 --> 06:26:04.003
components other engineers have 
built.  And then they use the 

06:26:04.004 --> 06:26:06.311
components across all of the 
different pages across the 

06:26:06.312 --> 06:26:10.301
net-a-porter site which allows 
them to have visual consistency 

06:26:10.302 --> 06:26:14.215
because it's the same components
 and functional consistency.  

06:26:14.216 --> 06:26:18.392
And this has made it much easier
 for the net-a-porter to scale 

06:26:18.393 --> 06:26:23.752
this very large multifaceted 
site by reusing the same 

06:26:23.753 --> 06:26:25.867
components.  Second company I 
want to talk about using Polymer

06:26:26.060 --> 06:26:32.694
 is BBVA.  BBVA is a 
multinational banking group.  

06:26:32.695 --> 06:26:36.923
130,000 employees, 66 million 
customers.  You can imagine with

06:26:36.924 --> 06:26:40.654
 such a massive operation in so 
many countries they are going to

06:26:40.751 --> 06:26:44.076
 have many, many different types
 of applications to build.  

06:26:44.077 --> 06:26:47.189
Rather than building a unique 
one off native app every time 

06:26:47.190 --> 06:26:51.317
they switched to using Web 
technology based on Polymer.  

06:26:51.318 --> 06:26:55.235
And so they have this internal 
catalog that all of the 

06:26:55.236 --> 06:26:58.171
different components that their 
teams build so instead of 

06:26:58.172 --> 06:27:00.548
building one off applications 
they can take component from 

06:27:00.797 --> 06:27:05.198
this catalog to assemble 
applications and when I say 

06:27:05.199 --> 06:27:08.744
assemble, I mean assemble.  Web 
components lend themselves 

06:27:08.745 --> 06:27:10.745
nicely to drag and drop

06:27:13.981 --> 06:27:14.976
 WYSIWYG construction 
experiences so they have built 

06:27:14.977 --> 06:27:17.202
these tools to create and 
construct and assemble 

06:27:17.203 --> 06:27:19.922
applications out of the 
components they have built.  And

06:27:20.115 --> 06:27:23.128
 this ease of application 
creation has had a very tangible

06:27:23.342 --> 06:27:26.762
 benefit on their business.  For
 the first project that they 

06:27:26.763 --> 06:27:30.107
switched to Polymer Web 
components they saved 70% budget

06:27:30.688 --> 06:27:33.019
 and 50% time and the 
engineering efforts are 

06:27:33.020 --> 06:27:38.733
significantly more scalable and 
easier to manage.  So since 1.0,

06:27:39.049 --> 06:27:43.861
 Polymer has become faster, more
 feature rich, it's seeing 

06:27:43.862 --> 06:27:47.084
exponential growth in Google 
served to over a billion users 

06:27:47.085 --> 06:27:52.924
and major companies are 
investing in Polymer and Web 

06:27:52.925 --> 06:27:56.464
components.  The Polymer library
 is for building components, 

06:27:56.465 --> 06:27:58.465
major companies, 

06:28:00.265 --> 06:28:03.998
major Google products are 
adopting these components and 

06:28:00.265 --> 06:28:02.689
building components but they are
 not just building components.  

06:28:02.690 --> 06:28:05.532
They are building applications 
out of these components.  So we 

06:28:05.533 --> 06:28:08.840
get this question asked a lot.  
Web components are great but how

06:28:09.161 --> 06:28:13.068
 do they take these Web 
components and construct an 

06:28:13.069 --> 06:28:15.573
application?  Our answer has 
been components can be 

06:28:15.574 --> 06:28:18.806
arbitrarily complex.  You can 
build a component out of other 

06:28:18.807 --> 06:28:21.926
components out of components, 
and  yadda, yadda, you have got 

06:28:21.927 --> 06:28:24.547
an app. 
But, of course, that's not a 

06:28:24.548 --> 06:28:27.761
very satisfying answer.  
Developers wanted guidance on 

06:28:27.762 --> 06:28:32.732
how to put components together 
in a platform idiot mattic way. 

06:28:32.733 --> 06:28:36.710
 So recently as the team has 
been growing as the project has 

06:28:36.711 --> 06:28:41.152
been growing, we have expanded 
our focus a bit.  To think not 

06:28:41.153 --> 06:28:44.788
just about how to build Web c 
omponents but also how to take 

06:28:44.789 --> 06:28:49.716
the Web components and build 
full-fledged cutting edge mobile

06:28:51.628 --> 06:28:55.353
 Web Apps.  And not just any 
kind of Web application but 

06:28:55.354 --> 06:28:57.694
progressive Web App, progressive
 Web Apps that took all of the 

06:28:57.695 --> 06:29:04.718
right viet a viet amins and we 
don't want to just build 

06:29:04.719 --> 06:29:08.046
progressive Web applications we 
want to build great progressive 

06:29:08.047 --> 06:29:09.743
Web applications, great user 
experiences. 

06:29:09.744 --> 06:29:13.969
How do you do this?  How do you 
build a great progressive Web 

06:29:13.970 --> 06:29:16.777
App on the mobile Web with all 
of the challenges that that 

06:29:16.778 --> 06:29:20.702
entails?  Of course, our answer 
is to use the platform.  Use the

06:29:21.008 --> 06:29:24.137
 platform to build great apps.  
Use what the broizer gives you 

06:29:24.138 --> 06:29:28.261
to achief minimal payload, 
minimal overhead, design offline

06:29:29.896 --> 06:29:32.890
 first, and this is a hard 
challenge.  So we wanted to make

06:29:33.196 --> 06:29:37.013
 this easier, to use the 
platform to build cutting edge 

06:29:37.014 --> 06:29:40.755
progressive Web applications.  
So I'm really excited today to 

06:29:40.756 --> 06:29:42.756
announce the Polymer app tool

06:29:45.962 --> 06:29:47.962
 box.
(Applause).

06:29:49.407 --> 06:29:53.545
And the tool box is just a set 
of components and tools based 

06:29:53.546 --> 06:29:56.570
around Web platform primitives 
that make it easy to build 

06:29:57.379 --> 06:30:00.075
cutting edge progressive Web 
applications.  So what's in the 

06:30:00.076 --> 06:30:02.771
tool box?  Well, all of the 
things you would expect to build

06:30:03.193 --> 06:30:07.630
 a large scale progressive Web 
App, components for layout, 

06:30:07.631 --> 06:30:11.145
routing, localization, storage, 
and then a command line tool to 

06:30:11.146 --> 06:30:15.878
tie it together.  So let's go 
through each of these one at a 

06:30:15.879 --> 06:30:21.608
time.  The fist is layout.  All 
UI design begins with layout.  

06:30:21.609 --> 06:30:25.321
It's the visual structure that 
makes up the application and a 

06:30:25.322 --> 06:30:30.273
high quality immersive mobile 
app requires high quality app 

06:30:30.274 --> 06:30:32.993
structure.  It requires the a 
pp-like look and feel that users

06:30:33.196 --> 06:30:37.514
 have come to expect on mobile 
devices and those high quality 

06:30:37.515 --> 06:30:40.332
layout components, things like 
Toolbars that will disappear 

06:30:40.333 --> 06:30:43.872
when you scroll down and 
reappear when you scroll up or a

06:30:44.568 --> 06:30:48.171
 drawer that you open and you 
can swipe it closed with 

06:30:48.172 --> 06:30:52.133
momentum.  These are components 
that don't exist in HTML. 

06:30:52.134 --> 06:30:55.751
So we built it.  Using the 
Polymer library, the app layout 

06:30:57.244 --> 06:31:00.185
elements.  An app layout has a 
number of UI components that 

06:31:00.186 --> 06:31:04.790
make it easier to structure 
mobile app like experiences and 

06:31:04.791 --> 06:31:08.318
they are designed to be f 
lexible, responsive and  fast.  

06:31:08.319 --> 06:31:13.555
So app layout elements have 
contained con K30E7B9s for t 

06:31:13.556 --> 06:31:17.376
hings like Toolbars, drawers and
 headers.  You can use them 

06:31:17.377 --> 06:31:19.390
regardless of what your 
application looks like.  They 

06:31:19.391 --> 06:31:22.531
are responsive by default so 
they work across all different 

06:31:22.532 --> 06:31:26.539
screen sizes.  They make hard 
things easy, things like fanly 

06:31:26.540 --> 06:31:30.380
scroll behaviors that user have 
come to expect on mobile d 

06:31:30.381 --> 06:31:35.145
evices.  They critically help 
insure Exhibit which  

06:31:36.041 --> 06:31:41.235
accessibility.
(Applause). 

06:31:41.236 --> 06:31:43.560
So let's take a look at a couple
 of these

06:31:47.079 --> 06:31:52.561
 components.  Here is a really 
simple example of using the app 

06:31:52.562 --> 06:31:55.630
layout components.  You have 
drawer to the left and middle 

06:31:55.631 --> 06:31:58.965
section content that scrolls.  A
 drawer opens and closes with 

06:31:58.966 --> 06:32:02.602
momentum.  You can swipe it 
closed.  Then you have the 

06:32:02.603 --> 06:32:05.302
header layout section which is 
the main content section that 

06:32:05.303 --> 06:32:09.011
the user can scroll through.  
This is done declaratively in 

06:32:09.012 --> 06:32:12.946
markup and you are writing HTML 
using Web components.  I want to

06:32:13.045 --> 06:32:16.868
 draw your Ascension to these 
two attributes on the app 

06:32:16.869 --> 06:32:21.796
header, fixed and effects.  
Fixed said I want the Toolbar to

06:32:22.121 --> 06:32:26.945
 remain fix as the user scrolls 
and the waterfall effect says I 

06:32:26.946 --> 06:32:30.879
want a shadow to appear under 
the Toolbar when the user 

06:32:30.880 --> 06:32:35.382
scrolls down so it looks like 
the content is water falling out

06:32:35.791 --> 06:32:41.127
 from the Toolbar.  Nice shuttle
 user experiences that make it 

06:32:41.128 --> 06:32:44.347
feel top quality.  You can get 
more complicated.  Here is a 

06:32:44.348 --> 06:32:48.810
similar example, a little more 
markup, and we have a few more 

06:32:48.811 --> 06:32:53.313
attributes on the app header 
here.  The first is condenses.  

06:32:53.314 --> 06:32:55.314
So you can see when you get to 
the top, the 

06:32:58.345 --> 06:32:58.862
header is expanded and large and
 it condenses as the user 

06:32:58.863 --> 06:33:02.171
scrolls down.  Reveal says when 
the user scrolls down below the 

06:33:02.778 --> 06:33:06.714
header,  hide the header and if 
though scroll up slightly, show 

06:33:06.715 --> 06:33:10.864
the header again and then the 
waterfall effect is the same 

06:33:10.865 --> 06:33:14.103
one.  So really subtle polish 
that makes it look and feel like

06:33:14.479 --> 06:33:20.207
 a first class progressive 
mobile Web App.  There are lots 

06:33:20.208 --> 06:33:23.552
of different combinations for 
different attributes so we built

06:33:24.708 --> 06:33:29.557
 a demo called test drive.  
Which literally allows you to 

06:33:29.558 --> 06:33:32.926
tick off the boxes and let's you
 experience what that would feel

06:33:32.927 --> 06:33:35.903
 like.  So any animation that we
 provide if you don't like it, 

06:33:35.904 --> 06:33:40.166
you can easily build your own 
and plug it in to the app layout

06:33:40.167 --> 06:33:44.056
 components and get a completely
 custom look and feel.  We can 

06:33:44.057 --> 06:33:47.986
lay out our application.  What 
if we want  multiple views.  How

06:33:48.288 --> 06:33:51.198
 do we route between multiple 
views?  This is a common 

06:33:51.199 --> 06:33:53.199
question we have gotten.  

06:33:58.373 --> 06:34:02.373
What router should I use?  We 
have said they are just Web c 

06:33:58.373 --> 06:34:00.575
omponents, use whatever router 
they want.  There are tons of 

06:34:00.576 --> 06:34:04.408
JavaScript routers out there.  
We surveyed the router space and

06:34:04.902 --> 06:34:07.922
 we realized that most 
JavaScript routers have a single

06:34:08.123 --> 06:34:13.170
 global view of the world.  And 
we wanted to build a router that

06:34:13.472 --> 06:34:17.179
 didn't just work with Web 
components but that works like 

06:34:17.180 --> 06:34:20.795
Web components and that it was 
modular and composable, that it 

06:34:20.796 --> 06:34:24.511
could route from an entire 
application down to a single 

06:34:24.512 --> 06:34:29.242
component.  So we built the app 
route component.  Let's say you 

06:34:29.243 --> 06:34:33.152
wanted to build a typical 
application you have three r 

06:34:33.153 --> 06:34:36.715
outes/item/cart and you want to 
route between different views.  

06:34:36.938 --> 06:34:39.943
You could use the app route 
component to have a path that 

06:34:39.944 --> 06:34:43.719
will match on the royalty.  It 
will provide a -- route, it will

06:34:44.139 --> 06:34:47.153
 provide a property and you can 
easily toggle on and off 

06:34:47.154 --> 06:34:50.992
different views in your 
application.  It can get more 

06:34:50.993 --> 06:34:53.812
complicated than that.  Let's 
say you wanted to extract data 

06:34:53.813 --> 06:34:59.425
from that URL, from that route. 
 So you have/detail/item ID and 

06:34:59.426 --> 06:35:03.089
you want to extract that item ID
 value to use in your a 

06:35:03.090 --> 06:35:07.812
pplication.  App route lets you 
do that.  And it provides the 

06:35:07.813 --> 06:35:11.221
value of the item ID as a 
property on the DOM node.  And 

06:35:11.222 --> 06:35:13.857
what's cool about app route is 
you could have this at the top 

06:35:13.858 --> 06:35:16.959
of your document, you could have
 it globally like a typical r 

06:35:16.960 --> 06:35:20.564
outer or you could compose this 
app route into the component 

06:35:20.565 --> 06:35:23.481
responsible for showing this 
detail of you.  So you can 

06:35:23.482 --> 06:35:27.246
delegate the responsibility of 
deciding how to use this item ID

06:35:27.325 --> 06:35:32.042
 value to the component that 
actually is going to show that 

06:35:32.043 --> 06:35:35.488
view.  So the app route is 
flexible, modular, composable, 

06:35:35.489 --> 06:35:37.489
it 

06:35:38.998 --> 06:35:42.864
doesn't just work with Web 
compone ebilities, it can know 

06:35:38.998 --> 06:35:42.207
about your entire app or it can 
be responsible for routing one 

06:35:42.208 --> 06:35:45.136
small section of your 
application. 

06:35:45.524 --> 06:35:48.064
That's great!  We can lay out 
the application.  We can route 

06:35:48.065 --> 06:35:50.966
between different views.  What 
if we want to localize our UI?  

06:35:50.967 --> 06:35:54.508
What if we want to translate it 
into different languages?  A 

06:35:54.509 --> 06:35:57.694
gain, very common question.  We 
have always said they are just 

06:35:57.695 --> 06:36:00.752
Web components there are a 
million ways to localize an app.

06:36:00.753 --> 06:36:03.167
  Use whatever one is most 
appropriate for what you are 

06:36:03.168 --> 06:36:10.703
building.  We wanted to build an
 idio mattic platform embracing 

06:36:10.704 --> 06:36:14.740
way.  We built the app localized
 behavior.  What is great is it 

06:36:14.741 --> 06:36:19.881
uses the platform.  It uses the 
Intel object which is a standard

06:36:20.074 --> 06:36:23.399
 JavaScript object to provide 
localization data.  It's broadly

06:36:24.235 --> 06:36:27.015
 cross-browser supported and 
where it doesn't support it 

06:36:27.016 --> 06:36:30.337
there is a polyfill.  So use the
 app localized behavior you use 

06:36:30.338 --> 06:36:38.193
it in any in any Polymer 
component responsible for  for 

06:36:39.299 --> 06:36:43.323
translating strings.  To use app
 localized behavior you add it 

06:36:43.324 --> 06:36:46.442
as a behavior to your component 
and you give it two properties. 

06:36:46.630 --> 06:36:49.372
 The first is a language 
property which will be the 

06:36:49.373 --> 06:36:52.389
language you want this component
 to be translated to and we have

06:36:52.600 --> 06:36:56.822
 it statically defined here that
 you could bind to it to 

06:36:56.823 --> 06:36:59.047
dynamically switch it.  Then we 
will give it this resources 

06:36:59.233 --> 06:37:01.903
property which is going to be 
all of the different keys and 

06:37:01.904 --> 06:37:04.778
translation strings we are going
 to need for this particular 

06:37:04.779 --> 06:37:07.977
component.  Here again it's 
statically defined but we could 

06:37:07.978 --> 06:37:10.828
easily fetch this off the 
network, however, we want to 

06:37:10.829 --> 06:37:14.337
provide this resources to the 
component.  And then to use 

06:37:14.338 --> 06:37:18.274
these resources to localize the 
component, anywhere we have a 

06:37:18.275 --> 06:37:21.179
string, instead of the static 
string, we will bind to the 

06:37:21.180 --> 06:37:24.746
localize function.  We will pass
 it a key at any variable, any 

06:37:24.747 --> 06:37:29.546
content that will need to be in 
that spring.  And so what you 

06:37:29.547 --> 06:37:34.377
can achieve with it is you can 
achieve simple strings but also 

06:37:34.378 --> 06:37:38.000
localize currencies, numbers and
 dates and it supports plurals 

06:37:38.001 --> 06:37:41.843
and genders.  So a simple tool 
that uses the platform to 

06:37:41.844 --> 06:37:43.844
elegantly solve complex use

06:37:48.571 --> 06:37:50.571
 cases.

06:37:53.248 --> 06:37:56.127
(Applause). 
So we are doing great.  We can 

06:37:56.128 --> 06:37:58.329
lay out the application, we 
request route between views we 

06:37:58.330 --> 06:38:01.859
can localize views.  Let's say 
we want to store data and we 

06:38:01.860 --> 06:38:05.083
want to store data on the Cloud 
offer locally on the device to 

06:38:05.084 --> 06:38:10.621
use in your application.  Again,
 very similar conundrum, how do 

06:38:10.622 --> 06:38:16.557
I connect data to my app.  We 
wanted to provide a platform I 

06:38:16.558 --> 06:38:21.600
DIO mattic way to take  data 
from the Cloud and provide it to

06:38:22.014 --> 06:38:27.161
 the platform.  So we built app 
storage.  What app storage is 

06:38:28.229 --> 06:38:30.751
it's essentially an interest 
every face.  It allows you, the 

06:38:30.752 --> 06:38:34.401
developer to create your own Web
 component to connect data from 

06:38:34.402 --> 06:38:38.800
a service whether in the Cloud 
or on the device and surface 

06:38:38.801 --> 06:38:42.545
that data in a way that the ache
 can use.  The way that app 

06:38:42.546 --> 06:38:48.184
storage surfaces the data is in 
an idiot mattic way.  Prescribe 

06:38:48.185 --> 06:38:52.806
any changes are expressed as DOM
 events and conveniently that is

06:38:53.217 --> 06:38:57.857
 how Polymer's own data mining 
system works it uses the 

06:38:57.858 --> 06:39:04.073
platform mode.  So app storage 
provides turnkey integration.  

06:39:04.074 --> 06:39:07.110
So let's give an example of how 
you might use this.  Say you are

06:39:07.295 --> 06:39:10.236
 building a note taking 
progressive Web App you will 

06:39:10.237 --> 06:39:13.238
want to launch from the home 
screen because it's progressive 

06:39:13.239 --> 06:39:16.164
Web App.  You can add title, 
information to your notes and 

06:39:16.165 --> 06:39:20.802
all of this data you are going 
to store in a rest API you have 

06:39:20.803 --> 06:39:22.997
built in the Cloud.  But it's a 
progressive Web App so it needs 

06:39:22.998 --> 06:39:27.322
to be able to work off line.  So
 if we go off line, launch from 

06:39:27.323 --> 06:39:30.768
the home screen if we are r 
elying on getting data from our 

06:39:30.769 --> 06:39:33.946
rest API, we are not going to be
 able to launch the application 

06:39:33.947 --> 06:39:36.713
at all.  We are not going to 
have access to the Internet to 

06:39:36.714 --> 06:39:40.238
launch that application.  But 
app storage makes it easy to 

06:39:40.239 --> 06:39:43.952
architect your app so you can 
support this use case very 

06:39:43.953 --> 06:39:46.588
simply.  So here is how we are 
going to build it.  You are 

06:39:46.589 --> 06:39:49.902
going to build your own 
component that implements this 

06:39:49.903 --> 06:39:54.029
app storage interface, your 
Cloud API component and that 

06:39:54.030 --> 06:39:56.449
will manage coming up indicating
 with your rest API in the Cloud

06:39:56.546 --> 06:40:00.578
 and then you will use a 
component app indem DB mirror 

06:40:00.579 --> 06:40:03.380
that we have provided.  What 
that does is take data that's 

06:40:03.381 --> 06:40:06.931
passed through it and mirrors it
 into a local index DB instance 

06:40:07.011 --> 06:40:12.361
and that will pass data into 
your application. 

06:40:12.362 --> 06:40:14.280
So here is how it looks when the
 data is wired up.  When you are

06:40:14.281 --> 06:40:17.404
 on line your Cloud API 
component has no problem 

06:40:17.405 --> 06:40:20.914
interfaces with your rest API.  
It's going to pipe that data 

06:40:20.915 --> 06:40:26.050
through the index DB in mirror 
component which will pipe the 

06:40:26.051 --> 06:40:30.875
data to your app.  So you are on
 line.  When you go off line, 

06:40:30.876 --> 06:40:34.697
your Cloud API component can no 
longer communicate with the rest

06:40:34.899 --> 06:40:37.457
 end point, but since we have 
been piping that data through 

06:40:37.712 --> 06:40:41.556
the app index DB mirror 
component we have all of that 

06:40:41.557 --> 06:40:45.280
locally stored on the device so 
we can boot up our application 

06:40:45.281 --> 06:40:51.119
even when we are off line.  But 
what if you don't want to build 

06:40:51.120 --> 06:40:55.967
your own  component?  What if 
you wanted to use a database as 

06:40:55.968 --> 06:41:00.884
a service in the Cloud? 
Well, fortunately there is an 

06:41:01.077 --> 06:41:09.151
element for that the app storage
 element with  Polymerfire.

06:41:09.597 --> 06:41:12.465
(Applause). 
So Polymerfire is actually a 

06:41:12.466 --> 06:41:15.888
coat of Polymer-based Web 
components that the Firebase 

06:41:15.889 --> 06:41:19.190
team has built that makes it 
trivial to communicate with the 

06:41:19.191 --> 06:41:21.191
Firebase database instance and 
to use that data in

06:41:24.435 --> 06:41:26.847
 your application.  Okay.  We 
are d oing great, we can lay out

06:41:27.559 --> 06:41:32.350
 our application.  We can route 
between views.  We can localize 

06:41:32.351 --> 06:41:35.195
those views.  We can commune 
carte with a back end and store 

06:41:35.196 --> 06:41:37.960
data, but we still need to 
deliver the application to our 

06:41:37.961 --> 06:41:40.521
users. 
And, remember, this is the 

06:41:40.522 --> 06:41:44.705
mobile Web, flaky 3G connections
 are the norm, slow devices are 

06:41:44.965 --> 06:41:49.295
the norm we mean min nail 
payload and JavaScript and 

06:41:49.296 --> 06:41:53.557
maximum efficiency to be able to
 minimize time to first m 

06:41:53.558 --> 06:41:59.057
eaningful action for our users. 
 This is the great challenge.  

06:41:59.142 --> 06:42:03.186
So there is the hard way.  We 
can use the same old JavaScript 

06:42:03.187 --> 06:42:07.195
escape hatch.  We can build a 
massive tool chain, server side 

06:42:07.196 --> 06:42:12.732
render, get a fast first paint 
with the serve side rendered app

06:42:13.236 --> 06:42:18.179
 and then  down load, boot it up
 and make it interactive.  But 

06:42:18.180 --> 06:42:26.330
23-Z frustrating to sit and 
watch a splash screen. 

06:42:26.826 --> 06:42:30.464
And time to first flash screen, 
time to first spinner is not the

06:42:30.715 --> 06:42:34.375
 same thing as time to first 
meaningful interaction.  So 

06:42:34.376 --> 06:42:37.316
server side rendering like this 
to deliver an application 

06:42:37.317 --> 06:42:41.728
whether you get an app view or a
 spinner is really a poo tem kin

06:42:42.729 --> 06:42:46.061
 village your user has to wait 
for the extraction to load 

06:42:46.062 --> 06:42:49.399
before the plirks is  
application is u seful.  We 

06:42:49.400 --> 06:42:53.614
think there is a better way, 
which is to use the Platte norm 

06:42:53.615 --> 06:42:57.719
to deliver apps.  The tighter 
the platform you can build your 

06:42:57.824 --> 06:43:00.864
application the faster it will 
be especially on slow networks 

06:43:00.865 --> 06:43:03.375
and devices.  Let the browser be
 your application. 

06:43:03.376 --> 06:43:06.600
And thanks to brand new Web 
platform primitives we can throw

06:43:06.790 --> 06:43:09.601
 out a lot of the old knowledge 
about how to make an application

06:43:09.806 --> 06:43:12.831
 fast on mobile and embrace new 
primitives and technologies that

06:43:13.035 --> 06:43:17.061
 the browser provides. 
So there are really three 

06:43:17.062 --> 06:43:22.392
important primitives for 
delivering a modern mobile Web 

06:43:22.393 --> 06:43:25.319
application, Web components 
which allow you to construct 

06:43:25.320 --> 06:43:29.326
your application out of these 
granular dependencies, out of 

06:43:29.327 --> 06:43:33.874
granular components, HTTP2 and 
server push which allows you to 

06:43:33.875 --> 06:43:39.003
serve granular dependencies in a
 granular way to users without 

06:43:39.004 --> 06:43:42.408
incurring massive round trips 
and to most efficiently utilize 

06:43:42.409 --> 06:43:47.360
the bandwidth and then service 
worker which let's you  reliably

06:43:47.665 --> 06:43:53.687
 cache granular components  
components op you're user's 

06:43:53.688 --> 06:43:57.132
device.  Let's take a look at 
how they work together nicely.  

06:43:57.133 --> 06:44:02.851
We have built the app before, we
 have three routes.  Each has a 

06:44:02.852 --> 06:44:05.859
view, they share similar UI 
between the views. 

06:44:05.860 --> 06:44:10.488
If we built this the old way as 
an old skill single-page app, 

06:44:10.489 --> 06:44:13.913
for each of these views no 
matter which route the user hit 

06:44:13.914 --> 06:44:19.567
we would have none no lithic H 
TML and we would send all of 

06:44:19.568 --> 06:44:22.078
them down to the client and on 
the client the framework would 

06:44:22.079 --> 06:44:24.589
boot up, then the application, 
then it would match the route to

06:44:24.803 --> 06:44:29.133
 the view and render that view. 
 Obviously very slow, obviously 

06:44:29.134 --> 06:44:33.064
very inefficient. 
Let's take a step back.  We have

06:44:33.147 --> 06:44:37.276
 three views here, some are 
independent, some overlap in 

06:44:37.277 --> 06:44:41.108
terms of what they show on the 
screen.  Let's use the platform 

06:44:41.109 --> 06:44:45.737
to serve this application as 
efficiently as possible.  So 

06:44:46.558 --> 06:44:49.341
let's split the view down, let's
 break it down into individual 

06:44:49.342 --> 06:44:52.275
Web components, some of these 
components will be shared 

06:44:52.276 --> 06:44:54.901
between views, some will be 
unique to a particular view.  

06:44:54.902 --> 06:45:00.519
Let's say the user requests t 
his/route.  The server can know 

06:45:00.520 --> 06:45:03.342
exactly what components are 
needed in order to render that 

06:45:03.343 --> 06:45:08.294
view and to make it usable on 
the device.  And so the Serber 

06:45:08.295 --> 06:45:15.150
can use HTP2 and Serber push to 
push down the min ma'am  

06:45:15.434 --> 06:45:18.025
components miles an hour mall 
components needs to make the 

06:45:18.026 --> 06:45:21.457
view interactive without 
multiple round trips.  We have 

06:45:21.458 --> 06:45:25.065
that on the device that the user
 can start interacting with 

06:45:25.066 --> 06:45:28.405
minimal overhead and we can take
 those granular components and 

06:45:28.406 --> 06:45:32.738
stick them in the service worker
 cache.  Then in the background 

06:45:32.739 --> 06:45:35.959
as the user is interacting with 
the first view the service w 

06:45:35.960 --> 06:45:39.433
orker can start fetching 
additional granular components 

06:45:42.601 --> 06:45:43.310
from the network and pre-cache 
those.  We can get those from 

06:45:43.311 --> 06:45:48.567
the network and stick those two 
in its service worker cache.  So

06:45:48.568 --> 06:45:52.259
 that if the user then navigates
 to the next view slash item 

06:45:52.260 --> 06:45:55.278
there's is a good comans that 
you will already have every 

06:45:55.279 --> 06:45:58.409
component that you will need to 
render that view and make it 

06:45:58.410 --> 06:46:00.727
interactive already right there 
sitting in your cache.  You 

06:46:00.728 --> 06:46:04.059
don't have to go to the network 
at all.  But, of course, it's 

06:46:04.060 --> 06:46:08.487
not practical to necessarily 
cache every dependencecy for 

06:46:08.488 --> 06:46:11.724
your application so for future 
views you can lazily load and 

06:46:12.401 --> 06:46:15.207
lazily instantiate additional 
components you need to render 

06:46:15.208 --> 06:46:18.138
shows views.  Some of those 
might be sitting in your cache 

06:46:18.139 --> 06:46:21.275
and for those that aren't, you 
can use the server to push down 

06:46:21.276 --> 06:46:24.590
only the minimal set of 
dependencies that the user 

06:46:24.591 --> 06:46:28.306
doesn't already have in their 
cache.  So there is a pattern 

06:46:28.307 --> 06:46:32.737
starting to emerge here.  You 
push components that are needed 

06:46:32.738 --> 06:46:35.862
for your initial route, you 
render that initial route and 

06:46:35.863 --> 06:46:40.494
make it interactive as soon as 
possible, you pre-cache in the 

06:46:40.495 --> 06:46:43.711
background using service worker,
 additional components needed 

06:46:43.712 --> 06:46:47.717
for remaining routes, and then 
you lazy load and create future 

06:46:48.750 --> 06:46:53.271
routes on demand as the user 
navigates to them.  We like 

06:46:53.272 --> 06:46:56.181
acronyms on the Polymer project 
so we have been calling this the

06:46:56.699 --> 06:47:00.214
 purple pattern.  And the purple
 pattern is not Polymer 

06:47:00.215 --> 06:47:03.463
specific, it's just a pattern 
for progressively loading and 

06:47:04.072 --> 06:47:07.712
representedderring a modern 
progressive Web App using 

06:47:07.713 --> 06:47:11.596
technologies and primitives in 
the Web platform.  So with the 

06:47:11.597 --> 06:47:16.568
purple pattern you get min ma'am
 payload,  minimal overhead, 

06:47:16.849 --> 06:47:19.658
minimal time to first 
interaction and optimal user 

06:47:19.659 --> 06:47:22.877
experience and the crux of the 
pattern is the ability to break 

06:47:22.878 --> 06:47:27.430
up application into individual 
granular components which 

06:47:28.700 --> 06:47:30.831
require minimum overhead to 
build up.

06:47:39.059 --> 06:47:43.993
PRPL pattern, how do we align i 
t?  There are different  tools 

06:47:43.994 --> 06:47:46.916
for building and opt miosessing 
component-based applications and

06:47:47.110 --> 06:47:51.650
 we wanted a maximally simple 
tool to make it easier to get 

06:47:51.651 --> 06:47:54.252
started building an application 
using this pattern to develop 

06:47:54.253 --> 06:48:00.200
and ultimately to build and to 
play it.  We built the Polymer C

06:48:00.201 --> 06:48:02.582
 LI, the Polymer command line 
Command Line

06:48:07.533 --> 06:48:11.753
 Tool.  And the goal of the 
Polymer CLI is to stay focused 

06:48:11.754 --> 06:48:15.291
and simple.  It provides a few 
set of commands that can help 

06:48:15.292 --> 06:48:18.713
support you throughout the 
entire development experience 

06:48:18.714 --> 06:48:21.607
whether building a Polymer 
component or an entire 

06:48:24.144 --> 06:48:25.959
application out of Web c 
omponents.  So this includes 

06:48:25.960 --> 06:48:32.916
Polymer and knit which makes it 
easy to  scaffold out a Web 

06:48:32.917 --> 06:48:38.036
component or an application 
built out of Web components and 

06:48:38.037 --> 06:48:40.547
it will set up the folder 
structure needed for these two 

06:48:40.548 --> 06:48:43.469
and we built starter templates 
to get you started with 

06:48:43.470 --> 06:48:45.909
applications you might want to 
build.  Polymer serve will 

06:48:45.910 --> 06:48:48.298
locally serve your application 
or your component so that you 

06:48:48.299 --> 06:48:51.238
can play with it as you develop,
 and what's cool about Polymer 

06:48:51.239 --> 06:48:55.555
serve is that not only will it 
serve your component and your 

06:48:55.556 --> 06:48:59.687
application, it will also serve 
all of the documentation 

06:48:59.688 --> 06:49:01.798
automatically generated from all
 of the components that you are 

06:49:01.799 --> 06:49:06.629
using to build your application,
 so you can develop on a second 

06:49:06.630 --> 06:49:09.571
browser tab you can have all of 
the documentation you are using 

06:49:09.660 --> 06:49:13.881
to develop.  So it's a great 
experience.

06:49:19.311 --> 06:49:21.718
(Applause). 
Polymer lint will lint your code

06:49:21.929 --> 06:49:24.633
 and check for common errors 
that occur when you are building

06:49:24.940 --> 06:49:28.960
 with Web components in Polymer 
and Polymer build will let us 

06:49:28.961 --> 06:49:33.090
specify a main entry point and 
then an application shell and it

06:49:33.713 --> 06:49:37.728
 will generate a bundled and 
unbundled version of your 

06:49:37.729 --> 06:49:41.840
application that you can then 
serve.  The unbundled version is

06:49:42.313 --> 06:49:48.175
 perfect for serving with the P 
RPL pattern.  We also generate a

06:49:48.789 --> 06:49:52.404
 bundled version for a fall back
 for browsers that don't yet 

06:49:52.405 --> 06:49:56.216
support HTP2. 
And Polymer build also uses a 

06:49:56.217 --> 06:50:00.072
tool called service worker 
pre-cache to generate service 

06:50:00.073 --> 06:50:04.180
workers that do this p 
re-caching, pre fetching and 

06:50:04.181 --> 06:50:07.402
sticking components in the cache
 for you so you don't have to 

06:50:07.403 --> 06:50:10.434
write a line of service worker 
code.  All of it is generated 

06:50:10.435 --> 06:50:12.435
for you based on your

06:50:14.785 --> 06:50:15.801
 application.
(Applause). 

06:50:15.802 --> 06:50:19.509
So that's the tool box.  L 
ayout, routing, localization, 

06:50:19.510 --> 06:50:22.833
storage, and a command line tool
 to tie it together.  And you 

06:50:22.834 --> 06:50:27.261
might be thinking didn't we just
 build another stack?  Didn't we

06:50:27.641 --> 06:50:31.480
 just build another monolithic 
stack?  But this stack is 

06:50:31.481 --> 06:50:36.197
different.  In fact, it's not a 
stack at all.  It is just a set 

06:50:36.198 --> 06:50:41.853
of loosely coupled interoperable
 Web components that can be used

06:50:42.355 --> 06:50:48.178
 piecemeal individually or all 
together and it's not a mono 

06:50:48.179 --> 06:50:50.720
inning  m onolith.  Each 
component is a light weight 

06:50:50.721 --> 06:50:53.438
layer on top of platform 
primitives that already exist in

06:50:53.612 --> 06:50:58.452
 the browser.  So with the 
Polymer app tool box, we are 

06:50:58.754 --> 06:51:03.568
showing that you don't need a 
massive meta  platform.  You 

06:51:03.569 --> 06:51:08.521
don't need a mega framework to 
build a high quality Web 

06:51:08.522 --> 06:51:12.846
application.  You don't need t 
ons of JavaScript.  You just  

06:51:12.847 --> 06:51:16.446
need to use the platform and use
 all of the modern primitives 

06:51:16.447 --> 06:51:21.179
that the Web platform provides. 
 Now, of course, we didn't want 

06:51:21.180 --> 06:51:26.321
this to just be a theoretical 
exercise.  So we built an app 

06:51:26.322 --> 06:51:32.169
using all of these techniques.  
We call is Shup.  As an e 

06:51:32.170 --> 06:51:34.490
Commerce application.  It 
doesn't actually sell Google 

06:51:34.491 --> 06:51:37.998
gear so you can't check out and 
buy anything so don't expect 

06:51:37.999 --> 06:51:42.229
anything to show up  at your d 
oor.  It has a home page, 

06:51:42.230 --> 06:51:45.558
product listing view, individual
 product pages and it's got a 

06:51:45.559 --> 06:51:51.189
cart and check out.  And it's 
built and served using all of 

06:51:51.190 --> 06:51:54.838
these components, using all of 
these patterns, Web component, 

06:51:54.839 --> 06:52:01.068
service worker, HTP2 and the P 
RPL pattern.  And the Polymer C 

06:52:01.069 --> 06:52:04.078
I to develop and build.  You can
 check out this demo as well as 

06:52:04.079 --> 06:52:07.005
everything that's in the tool 
box and documentation about all 

06:52:07.006 --> 06:52:10.917
of the things in the tool box at
 the brand new Polymer documents

06:52:12.060 --> 06:52:14.060
 site WWW.Polymer project.

06:52:16.693 --> 06:52:21.089
org.  So in summary, the Polymer
 project's approach to modern 

06:52:21.090 --> 06:52:25.005
Web development is different.  
It's different than that of a 

06:52:25.006 --> 06:52:27.926
typical JavaScript framework.  
Because it uses the platform, it

06:52:28.229 --> 06:52:33.769
 uses what's already there in 
user's frauders rather  user's 

06:52:33.770 --> 06:52:38.210
broaders rather than creating 
massive abstractions on top.  

06:52:38.211 --> 06:52:42.334
And thanks to these new powerful
 Web platform from time to t 

06:52:42.335 --> 06:52:45.453
imeitives this is finally 
possible as Web developers to 

06:52:45.454 --> 06:52:50.070
create these ingaging immersive 
app-like services on the Web.  

06:52:50.071 --> 06:52:53.708
So the result of using the 
platform is a first class 

06:52:53.709 --> 06:52:58.031
progressive Web App built out of
 interoperable Web components. 

06:52:58.120 --> 06:53:01.162
So if you would like to learn 
more about Polymer or Web 

06:53:01.163 --> 06:53:06.283
components or the PRPL pattern 
there are tons more talks here 

06:53:06.284 --> 06:53:09.213
good exactly this.  Progressive 
performance Polymer is right 

06:53:09.214 --> 06:53:12.108
after this one is there are two 
more tomorrow.  And if you have 

06:53:12.109 --> 06:53:14.842
a time machine or a You Tube, 
you can check out the talks that

06:53:15.130 --> 06:53:17.130
 have already happened

06:53:19.776 --> 06:53:24.410
 earlier.  So I'm really excited
 by this.  I hope you are too.  

06:53:24.411 --> 06:53:28.331
And if you would like to learn 
more about Polymer, about 

06:53:28.332 --> 06:53:32.439
progressive Web Apps about the 
PRPL pattern, there is a 

06:53:32.440 --> 06:53:35.382
conference for that the next 
Polymer summit which will be 

06:53:35.383 --> 06:53:38.813
later this year in London.

06:53:42.444 --> 06:53:44.219
(Applause). 
So you can sign up at this link 

06:53:44.220 --> 06:53:47.238
to be notified when registration
 opens.  If it's anything like 

06:53:47.239 --> 06:53:50.263
last year's Polymer summit that 
we held in Amsterdam.  It's 

06:53:50.264 --> 06:53:54.889
going to be awesome!  There were
 800 developers in a beautiful 

06:53:54.890 --> 06:53:58.618
vend you.  A full day of talks, 
I night of code labs and I'm 

06:53:58.619 --> 06:54:02.234
excited to do it all again.  So 
that's all for today.  I hope to

06:54:02.322 --> 06:54:06.160
 see you at the Polymer summit 
and, remember, use the flat f 

06:54:06.161 --> 06:54:10.728
orm.  Thank you!  (
(Applause).

07:08:32.239 --> 07:08:35.409
    (Please stand by for

07:09:15.015 --> 07:09:17.015
.
    &gt;&gt; JAKE ARCHIBALD:  Hello, e

07:09:17.851 --> 07:09:22.121
veryone!  Welcome to 
 Instant Loading: Building 

07:09:22.122 --> 07:09:24.522
Offline-First Progressive 
 Web Apps.

07:09:22.122 --> 07:09:25.464
    It turns out if you put all 
the buzz words in your 

07:09:25.640 --> 07:09:28.751
 title they let you have the big
 stage.  I'm Jake 

07:09:29.246 --> 07:09:33.249
 Archibald one of the designers 
of ServiceWorker and 

07:09:33.456 --> 07:09:36.756
 one of the editors of the spec 
as well.  I want to 

07:09:36.757 --> 07:09:39.838
 talk to you about spam phone 
calls which I get a lot 

07:09:39.839 --> 07:09:41.428
 of.  You know the sort, have 
you been in an accident 

07:09:41.429 --> 07:09:44.535
 in the last 200 years?  Would 
you like cars in for 

07:09:44.536 --> 07:09:47.545
 all of wore pets, et cetera, et
 cetera?  I actually 

07:09:47.546 --> 07:09:50.933
 get enough of these phone calls
 that I started invent      

07:09:50.934 --> 07:09:55.563
 inventing games to play.  My 
favorite game is, hmm, 

07:09:55.564 --> 07:09:59.243
 and in this game I become the 
most indecisive person 

07:09:59.532 --> 07:10:02.951
 that has ever existed.
    It goes like this:  Hello, 

07:10:03.244 --> 07:10:05.746
Mr. Archibald.  Are you 
 interested in saving money on 

07:10:05.747 --> 07:10:10.462
your mobile phone bill?  
 I reply ...  Hmm, well, I 

07:10:10.463 --> 07:10:14.539
suppose if ... at this 
 point the caller usually tries 

07:10:14.540 --> 07:10:17.565
to hurry things along 
 but it's very important that 

07:10:17.566 --> 07:10:20.539
you do not let them.
    Well, we've got a great deal

07:10:20.744 --> 07:10:25.735
.  Wait, wait, wait.  
 Do you, hmm ... is it one of 

07:10:26.156 --> 07:10:31.050
the hmm ... hmm ...
    And you get a point for ever

07:10:31.459 --> 07:10:34.051
y second that they 
 aren't talking.  It's a really 

07:10:34.749 --> 07:10:36.856
difficult game because 
 the caller gets frustrated 

07:10:37.058 --> 07:10:40.138
quickly.  You are directly 
 blocking a conversation which 

07:10:40.139 --> 07:10:43.457
is a very synchronous 
 transaction where each person 

07:10:43.749 --> 07:10:46.044
wants an instant 
 response and you are breaking 

07:10:46.164 --> 07:10:51.043
that model.  We expect 
 the same thing when you get 

07:10:51.044 --> 07:10:53.649
data from a computer.  
 Twenty-five years ago the 

07:10:54.157 --> 07:10:56.857
expectations were low.  If 
 you wanted to know directions 

07:10:57.158 --> 07:10:59.145
somewhere, you would 
 have to go to the room with the

07:10:59.146 --> 07:11:02.865
 computer in it.  The 
 room.  Turn it on and the fans 

07:11:03.301 --> 07:11:06.955
would start whirring.  
 You get the static crack em as 

07:11:07.148 --> 07:11:11.935
the CRT would start.  
 Windows 3.1 would start booting

07:11:12.152 --> 07:11:16.358
 up.  Eventually you 
 get your desktop.  Then it did 

07:11:17.641 --> 07:11:20.465
this.
    (Sound of Windows starting.)

07:11:20.661 --> 07:11:22.466
    (Laughter.)
    &gt;&gt; JAKE ARCHIBALD:  This is 

07:11:22.467 --> 07:11:28.161
an era when booting up 
 was a fanfare worthy moment.  

07:11:28.347 --> 07:11:31.647
Even after that you had 
 to find and insert the map 

07:11:31.954 --> 07:11:34.242
credited and print off 
 directions, off you went.  

07:11:34.549 --> 07:11:38.462
These days we don't have 
 to boot up the one computer we 

07:11:38.657 --> 07:11:40.949
own.  We have a 
 computer in our pocket already 

07:11:41.173 --> 07:11:44.860
booted up and we can 
 give it directions.

07:11:44.861 --> 07:11:46.641
    If you have zero 
connectivity and you ask the 

07:11:46.642 --> 07:11:51.256
 Internet for something, the Web
's answer is often:  

07:11:51.257 --> 07:11:55.057
 No.  I remember when I first 
realize ed how problematic 

07:11:55.058 --> 07:11:59.054
 this is.  A few years ago I was
 working at a Web 

07:11:59.055 --> 07:12:02.748
 agency.  I found myself needing
 to go to the toilet 

07:12:02.749 --> 07:12:05.955
 following a lunch that my 
stomach was unhappy about.  

07:12:05.956 --> 07:12:09.247
 There were five cubicles to 
choose from.  In this 

07:12:09.248 --> 07:12:12.859
 instance the first four were 
occupied.  That's 

07:12:12.860 --> 07:12:16.565
 usually okay.  Even in this 
situation I felt that one 

07:12:16.566 --> 07:12:19.248
 cubicle would be enough for me.
    (Laughter.)

07:12:19.249 --> 07:12:22.159
    &gt;&gt; JAKE ARCHIBALD:  But from
 previous experience I 

07:12:22.160 --> 07:12:25.744
 knew that mobile connectivity 
and the office WiFi 

07:12:25.745 --> 07:12:27.968
 only extended to the first four
 cubicles.

07:12:33.158 --> 07:12:33.461
    (Laughter.)
    &gt;&gt; JAKE ARCHIBALD:  I thou

07:12:33.462 --> 07:12:37.538
ght for a moment and 
 decided, no, this is not 

07:12:37.539 --> 07:12:41.365
acceptable.  And I returned 
 to my desk and I waited until 

07:12:41.366 --> 07:12:45.061
later despite being in 
 some discomfort. day that I 

07:12:45.269 --> 07:12:48.064
discovered that as a human 
 being I required an Internet 

07:12:48.065 --> 07:12:50.156
connection in order to 
 take a dumb due process

07:12:50.157 --> 07:12:52.160
    (Laughter.)
    &gt;&gt; JAKE ARCHIBALD:  So this 

07:12:52.161 --> 07:12:55.557
is a problem worth 
 solving.  Until recently there 

07:12:55.558 --> 07:12:58.771
was nothing you could 
 do about it, especially during 

07:12:58.772 --> 07:13:01.874
the initial page work 
 but that all changes with 

07:13:02.264 --> 07:13:04.954
ServiceWorker.  I was told 
 this slide wasn't impactful 

07:13:04.955 --> 07:13:07.464
enough.  It's one of 
 those management buzz words I 

07:13:07.898 --> 07:13:08.461
don't really understand  

07:13:08.462 --> 07:13:10.758
 understand.  I did give it 
another go and came up 

07:13:10.759 --> 07:13:12.960
 with this.
    (Laughter.)

07:13:12.961 --> 07:13:14.468
    &gt;&gt; JAKE ARCHIBALD:  
Apparently this has branding 

07:13:14.469 --> 07:13:18.367
 issues.  It's got loads of 
brands that I don't 

07:13:18.368 --> 07:13:23.357
 understand.
    Bruce Lawson, deputy CTO of 

07:13:23.358 --> 07:13:26.775
Opera he gave it a go 
 and came up with this.  It's 

07:13:26.849 --> 07:13:29.871
freakky.  If you stare 
 at it, it looks like the colors

07:13:30.168 --> 07:13:33.780
 are changing.  They 
 are.  It has a filter on it.

07:13:33.781 --> 07:13:41.775
    But Ben Jaffe, he had a go, 
at udacity, he came up  

07:13:42.770 --> 07:13:45.758
 up:
    &gt;&gt;:  Too long, users have 

07:13:45.759 --> 07:13:50.182
been left staring at a 
 white screen.  Too long they 

07:13:50.183 --> 07:13:54.676
have been let down by 
 the cruel network connectivity.

07:13:54.983 --> 07:13:58.064
  Too long we have 
 been powerless to help.

07:13:58.065 --> 07:14:02.379
    We have been left waiting.

07:14:10.070 --> 07:14:14.767
    By no longer.  A new browse
 er feature has arrived.

07:14:15.180 --> 07:14:17.180
    A total game change er.

07:14:20.880 --> 07:14:24.265
    A feature that lets you 
control the network.

07:14:24.266 --> 07:14:26.266
    Rather than letting the

07:14:29.470 --> 07:14:33.866
 network control you.
    Who is this new feature?  

07:14:33.867 --> 07:14:35.867
What promises does it 
 bring?

07:14:42.575 --> 07:14:45.781
Introducing the ServiceWorker!  

07:14:45.782 --> 07:14:47.782
    (Dramatic music.)

07:14:51.286 --> 07:14:55.371
    (Cheers and applause.)
    &gt;&gt; JAKE ARCHIBALD:  It's a 

07:14:55.372 --> 07:14:59.379
bit much, isn't it, 
 really?  I prefer mine.  It's 

07:15:01.372 --> 07:15:04.682
got a high fie with a 
 cat's head in it.  What does 

07:15:04.967 --> 07:15:08.177
this all mean?  What can 
 ServiceWorker really do.  We're

07:15:08.178 --> 07:15:10.687
 going to look 

07:15:16.011 --> 07:15:18.094
at 
 emoji joy.

07:15:22.003 --> 07:15:24.209
 look at鈥�Emojoy!  A little
 progressive web app you can

07:15:25.327 --> 07:15:26.214
 find at鈥�鈥his URL.  It's a
 simple version of Hangouts, but

07:15:26.215 --> 07:15:28.081
 only lets you enter Emoji. It
 started life as a mere website,

07:15:28.082 --> 07:15:29.482
 but over time it was built up
 to a full progressive web app.

07:15:29.483 --> 07:15:31.142
 And it didn't require a full
 rewrite, it was something that

07:15:39.020 --> 07:15:39.754
 happened incrementally,
    This here is V1. It runs at

07:15:39.755 --> 07:15:41.314
 60 fps It's really simple, so I
 didn't use any kind of

07:15:41.315 --> 07:15:43.920
 framework, so it's only 25k -
 loads fast Unless of course鈥�

07:15:46.693 --> 07:15:49.015
 experience isn't optimal.  Or
 at least this is what it was

07:15:49.016 --> 07:15:51.759
 like when I first launched it.
    Here's how I fixed it鈥�To

07:15:51.760 --> 07:15:55.881
 begin, register for a
 ServiceWorker . And it isn't

07:15:55.882 --> 07:15:59.229
 some magic manifest, or a
 config file. It's just

07:16:02.228 --> 07:16:04.917
 JavaScript Why invent some new
 thing, then we have a world

07:16:06.197 --> 07:16:08.197
 full of JS devs.  And loads of
 tooling.

07:16:08.834 --> 07:16:10.834
    Oh, but of course we should
 wrap our register call in a

07:16:12.268 --> 07:16:13.608
 basic feature detect because,
 well鈥�There are older browsers

07:16:13.609 --> 07:16:17.646
 out there that don't support
 SW. And a simple feature detect

07:16:17.647 --> 07:16:19.647
 prevents them hurting

07:16:22.109 --> 07:16:24.684
themselves and others. And in
 that script鈥�I'll just put a

07:16:24.685 --> 07:16:26.685
 simple log.

07:16:32.309 --> 07:16:34.309
 Now if I load the
 page Open Chrome's Devtools

07:16:34.792 --> 07:16:36.170
 Console. There it is! There's
 our log.

07:16:36.171 --> 07:16:38.183
    Also in the new application
 tab there's a ServiceWorker

07:16:39.999 --> 07:16:40.594
 section. And there's our
 ServiceWorker there!  As you

07:16:40.595 --> 07:16:42.595
 can see, it was last modified
 in 1970.  Meaning this

07:16:43.580 --> 07:16:45.580
 ServiceWorker predates the

07:16:51.583 --> 07:16:52.996
 internet .So we're way ahead of
 we'll have that fixed soon.

07:16:52.997 --> 07:16:54.865
    So, how has this changed
 things? To find out, let's pit

07:16:54.866 --> 07:16:59.071
 the original online-only site
 against our shiny new

07:16:59.072 --> 07:17:01.072
 ServiceWorker version. Let's go

07:17:07.913 --> 07:17:08.123
 to鈥�the compare-inator.  First 

07:17:08.124 --> 07:17:09.618
 First.
    Up, the online experience.  

07:17:09.619 --> 07:17:13.627
So, okay.  Pretty much 
 the same.  Both load reasonably

07:17:13.628 --> 07:17:19.241
 quick.  I recorded 
 these with a

07:17:24.000 --> 07:17:26.024
 these with a throttled internet
 connection.  Or as most of the

07:17:26.025 --> 07:17:27.412
 world calls it, their internet
 connection. I also closed the

07:17:27.413 --> 07:17:29.221
 browser before clicking the
 shortcut. So the load time

07:17:29.222 --> 07:17:32.466
 includes the browser loading.
    What about鈥�Offline? GO!

07:17:33.939 --> 07:17:35.340
 Okay, so, both failing.  Now,
 you've probably noticed, not

07:17:35.341 --> 07:17:37.341
 much has changed. Well, one

07:17:43.535 --> 07:17:46.655
 thing happened鈥�It logged .
    That's how swo weds works.  

07:17:46.738 --> 07:17:50.925
I'm sick of the magic 
 APIs.  Compare to Appcache if 

07:17:50.926 --> 07:17:56.444
we gave Emojoy a --

07:18:02.232 --> 07:18:03.012
    Compare it to Appcache鈥�If
 we gave Emojoy an Appcache

07:18:03.013 --> 07:18:04.235
 manifest鈥�And that manifest is
 empty aside from Cache Manifest

07:18:04.236 --> 07:18:05.817
 which is required to make it a
 valid manifest. That would turn

07:18:05.818 --> 07:18:07.818
 the render of Emojoy from this
 to this.

07:18:09.127 --> 07:18:10.400
    And I鈥�I can't help feeling
 that isn't what I told it to do

07:18:10.401 --> 07:18:12.674
 Appcache was a bit of a
 disaster. It had a very simple

07:18:12.675 --> 07:18:14.923
 format, but a massive
 complicated rulebook. And if

07:18:14.924 --> 07:18:18.013
 you didn't like any of those
 rules, tough .You were

07:18:19.131 --> 07:18:20.175
 restricted to the way the
 designers of Appcache wanted

07:18:20.176 --> 07:18:22.222
 you to work. And those
 designers hadn't created many

07:18:22.223 --> 07:18:26.148
 offline web experiences.
    This gave rise to the

07:18:29.261 --> 07:18:30.425
 extensible web manifesto,which
 most browser vendors are now

07:18:30.426 --> 07:18:33.453
 behind. Here we acknowledge
 that browser developers and

07:18:34.785 --> 07:18:36.785
 standards developers, are NOT

07:18:48.299 --> 07:18:48.782
 better at building web sites
 than web developers. We should

07:18:48.783 --> 07:18:50.283
 stop tossing out scraps from
 our ivory towers - like

07:18:50.284 --> 07:18:50.878
 Appcache, like a CSS to do a
 reflection in one particular

07:18:50.879 --> 07:18:52.057
 way. And instead, give
 developers full control.  Give

07:18:52.058 --> 07:18:53.909
 you as much information as we
 can, and as many hooks as we

07:18:53.910 --> 07:18:55.627
 can.
    By providing you with this

07:18:55.628 --> 07:18:57.628
 kind of low-level access, you

07:19:00.153 --> 07:19:01.048
 can create things we didn't
 consider. You can use patterns

07:19:01.049 --> 07:19:03.049
 we didn't invent.  And those
 become evidence for higher

07:19:05.146 --> 07:19:06.430
 level features that make the
 common stuff easier, or faster

07:19:06.431 --> 07:19:08.550
 . ServiceWorker was built to
 this model, so the things I

07:19:18.052 --> 07:19:18.753
 show you today are just the
 patterns I us. But you'll find

07:19:18.754 --> 07:19:20.380
 your own patterns that work
 best for what you're building.

07:19:20.381 --> 07:19:21.839
 The ServiceWorker is driven by
 events. One of these is鈥�Fetch!

07:19:21.840 --> 07:19:24.290
 So I've got a listener for
 that. With a debugger

07:19:27.796 --> 07:19:29.796
 statement.  Before I run that,
 I'm going update on reload

07:19:30.587 --> 07:19:32.529
 using this checkbox.  I'll
 cover why in a bit.

07:19:32.530 --> 07:19:34.530
    Now if I refresh the page, I
 hit that break point.  The

07:19:35.884 --> 07:19:37.742
 event object has a request
 property. This is the request

07:19:37.743 --> 07:19:40.027
 for the page itself. The
 request object shows me the

07:19:41.296 --> 07:19:43.296
 URL, headers, type of request.
 But I also get one of these

07:19:46.932 --> 07:19:47.619
 events for every request the
 page makes. The CSS, JS, fonts,

07:19:47.620 --> 07:19:50.617
 images.  I get an event for the
 avatars even though they're on

07:19:53.632 --> 07:19:55.632
another origin.

07:19:56.664 --> 07:19:57.173
    By-default requests go from
 the page to the network. And

07:19:57.174 --> 07:20:00.000
 there's not a lot you can do
 about it. But once you

07:20:01.351 --> 07:20:03.120
 introduce a ServiceWorker, it
 controls pages, and requests go

07:20:03.121 --> 07:20:06.350
 through it.  But like other
 events, you can prevent the

07:20:06.351 --> 07:20:09.225
 default, and do your own thing.
 So instead of triggering the

07:20:16.677 --> 07:20:18.590
 debugger鈥�I'm going to call
 event.respond.with.  And I'm

07:20:18.591 --> 07:20:20.591
 going to respond with a

07:20:27.476 --> 07:20:29.377
 response. It says hello.
    Let's give that a spin.  

07:20:29.378 --> 07:20:31.154
Refresh the page and 
 there it is.

07:20:31.155 --> 07:20:34.969
    So instead of going to the 
network, the 

07:20:34.970 --> 07:20:39.051
 ServiceWorker took care of it. 
 This example works 

07:20:39.052 --> 07:20:43.351
 offline.  It's rubbish but it 
works offline.  You 

07:20:43.352 --> 07:20:45.569
 don't have 

07:20:55.882 --> 07:20:56.402
to
    You don't have to respond to

07:20:56.403 --> 07:20:57.767
 every URL the same either. You
 could parse the URL. And if the

07:20:57.768 --> 07:21:00.058
 pathname ends in .jpg respond
 with a network fetch for

07:21:00.059 --> 07:21:01.581
 cat.jpg. Event.repond.with
 takes a response object, or a

07:21:01.582 --> 07:21:03.932
 promise for a response fetch
 returns us a promise for a

07:21:05.199 --> 07:21:06.827
 response from the network. So
 they compose really well. So if

07:21:06.828 --> 07:21:09.903
 we refresh the page and it's
 back, but all the avatars are

07:21:09.904 --> 07:21:12.737
 cats! Instead of doing
 something special based on the

07:21:12.738 --> 07:21:16.149
 request, you can do things
 based on the response .

07:21:17.705 --> 07:21:19.629
    Here I respond with a fetch
 for event.request . This tells

07:21:19.630 --> 07:21:23.716
 the browser to make the same
 request it would have anyway,

07:21:23.717 --> 07:21:27.111
 but fetch returns a promise for
 a response. So we can take a

07:21:27.112 --> 07:21:29.112
 look at it. And if its status

07:21:31.751 --> 07:21:33.751
 code is 404, we respond with

07:21:36.603 --> 07:21:37.313
 svg or whatever else return 
the    

07:21:37.314 --> 07:21:38.805
 the.
    Otherwise we return with the

07:21:38.806 --> 07:21:40.806
 response we got from 
 the ne

07:21:44.775 --> 07:21:46.410
twork
    So refresh the page. Our

07:21:46.411 --> 07:21:48.411
 avatars are back!  But if I
 navigate to a nonsense URL,

07:21:48.505 --> 07:21:50.460
 there's our 404 message.
 ServiceWorker lets you

07:21:50.461 --> 07:21:51.259
 intercept requests and provide
 a different response. And you

07:21:51.260 --> 07:21:53.260
 can do that based on the
 request, or the response of

07:21:56.361 --> 07:21:58.093
 another request .
    But this is just playing

07:21:58.094 --> 07:21:58.973
 around really. You wouldn't use
 ServiceWorker for a 404 page,

07:21:58.974 --> 07:22:00.974
 you'd let your server do that.

07:22:03.118 --> 07:22:04.621
 Let's do something practical
 instead. A good way to dip your

07:22:04.622 --> 07:22:07.501
 foot into the SW pool is to
 make an offline-fallback page,

07:22:07.502 --> 07:22:10.328
 something to show to the user
 if the page fails to load.

07:22:11.501 --> 07:22:13.120
 Because the current state of
 things is pretty bad. You know

07:22:16.372 --> 07:22:17.744
 the user comes to us wanting
 our content. It's our moment to

07:22:17.745 --> 07:22:20.462
 shine. But without a connection
 we crap ourselves to the extent

07:22:20.463 --> 07:22:23.113
 that Mama browser has to step
 in and defend us by blaming the

07:22:26.580 --> 07:22:28.580
 user.  Chrome can't display
 this page because "your"

07:22:28.607 --> 07:22:30.607
 computer isn't connected to the
 internet.

07:22:31.750 --> 07:22:33.750
    If we're competing with
 native, this is like an

07:22:35.308 --> 07:22:37.159
 operating-system error message.
 We can do better.  So I created

07:22:37.160 --> 07:22:39.660
 a custom error page.  It's
 still an error, but at least

07:22:39.661 --> 07:22:42.530
 we're owning it . And it's
 something we can build on

07:22:44.011 --> 07:22:46.011
 later.
    I want to show this when

07:22:46.836 --> 07:22:48.836
 there's no connection. So I

07:22:50.386 --> 07:22:52.386
 need to save it somewhere, and

07:22:53.563 --> 07:22:55.021
 I want to store it up front.
 The ServiceWorker has an event

07:22:58.275 --> 07:22:58.896
 for doing things up-front鈥� install . And I pass a promise

07:22:58.897 --> 07:23:02.922
 to wait until to let the
 ServiceWorker know I'm doing

07:23:02.923 --> 07:23:05.937
 install work. The install event
 is fired the very first time

07:23:05.938 --> 07:23:07.938
 the browser runs the
 ServiceWorker. It's your

07:23:08.444 --> 07:23:10.444
 opportunity to get everything

07:23:12.879 --> 07:23:15.664
you need from the network.  
    CSS, Java scrip, HTML and 

07:23:15.665 --> 07:23:20.598
all this stuff
 Before you need to start

07:23:22.077 --> 07:23:22.783
 controlling pages.
    For storing these requests

07:23:22.784 --> 07:23:24.784
 and responses, there's a new
 storage API. The cache API.

07:23:25.122 --> 07:23:25.787
 This cache API specializes in
 request/response storage, but

07:23:25.788 --> 07:23:27.383
 unlike the regular browser
 cache, stuff isn't removed at

07:23:27.384 --> 07:23:29.246
 the browser's whim. So we put
 all our stuff in there.  Once

07:23:29.247 --> 07:23:32.049
 that's done, our SW can move in
 and start controlling pages.

07:23:32.050 --> 07:23:34.666
    So let's do that.  We open a
 cache. We can call it whatever

07:23:34.667 --> 07:23:36.667
 we want, but I'm calling it
 static-v1. Then we add the

07:23:37.856 --> 07:23:40.466
 offline page, and the CSS. If
 the cache fails to open, runs

07:23:40.467 --> 07:23:44.480
 out of space, or one of these
 fetches fails or returns a 404.

07:23:44.481 --> 07:23:48.078
 The promise rejects, signalling
 to the browser that the install

07:23:48.079 --> 07:23:51.586
 failed. If that happens, this
 SW will be discarded.

07:23:55.485 --> 07:23:57.769
    So once we're controlling .
    It will never return pages

07:24:02.578 --> 07:24:03.500
    So once we're controlling
 pages, we know this cache

07:24:03.501 --> 07:24:04.863
 population worked. Note that
 both the offline page and CSS

07:24:04.864 --> 07:24:06.955
 have a version in their URL.
 This means we can give them

07:24:07.814 --> 07:24:08.737
 good caching headers, and we
 just change the URL when their

07:24:08.738 --> 07:24:11.049
 content changes.
    You can work around bad

07:24:12.041 --> 07:24:14.476
 caching with a SW, but it's
 much better to work with good

07:24:14.477 --> 07:24:15.934
 caching. But now we need to use
 this cache over in our fetch

07:24:15.935 --> 07:24:18.679
 event . We'll respond with a
 match in the cache, one that

07:24:18.680 --> 07:24:21.686
 matches this request.Matching
 is done similar to HTTP

07:24:23.612 --> 07:24:25.340
 matching. So it matches on URL,
 method, vary headers, but it

07:24:25.341 --> 07:24:28.453
 ignores freshness headers.
 Match returns a promise for a

07:24:28.454 --> 07:24:31.839
 response.
    So if we request the offline

07:24:31.840 --> 07:24:34.566
 page directly, or the CSS, it
 comes straight from the cache.

07:24:34.567 --> 07:24:38.404
 If there's no match found, it
 resolves with undefined.  So we

07:24:44.533 --> 07:24:44.731
 return the response if we get 

07:24:44.732 --> 07:24:49.603
 get.
    So we need to respond to 

07:24:49.604 --> 07:24:51.604
that

07:24:52.844 --> 07:24:54.580
 resolves with undefined.  So we
 return the response if we get

07:24:54.581 --> 07:24:56.101
 one or do a regular network
 fetch for the content. If the

07:24:56.102 --> 07:24:57.797
 fetch fails, it'll reject the
 promise. So we'll catch that.

07:24:57.798 --> 07:25:00.023
 And if the request was a
 navigation we'll return our

07:25:01.167 --> 07:25:02.297
 offline page from the cache.
    We only want to return our

07:25:02.298 --> 07:25:04.601
 offline page for navigations.
 It won't help if we return it

07:25:04.602 --> 07:25:07.111
 for images, or javascript, et
 cetera. But that's it鈥�

07:25:09.732 --> 07:25:12.093
 changed, but over in the
 application tab there's a bit

07:25:12.094 --> 07:25:14.726
 that shows our caches. There's
 static V1, and our offline

07:25:22.314 --> 07:25:23.363
 page
 and CSS If we simulate offline

07:25:23.364 --> 07:25:25.364
 and refresh. There we go! Done.

07:25:31.733 --> 07:25:33.733
 Ship it.
    We can ship this.

07:25:36.527 --> 07:25:38.331
    And that's what The Guardian
 did on their developer blog. If

07:25:38.332 --> 07:25:40.447
 you don't have any connectivity
 it serves you a sorry page but

07:25:44.004 --> 07:25:46.004
 also gives you a crossword to
 do instead.  I'm no good at

07:25:46.585 --> 07:25:48.585
 crosswords, but this is a

07:25:50.298 --> 07:25:51.231
 lovely Easter egg. Actually, I
 didn't even look at the clue

07:25:51.232 --> 07:25:54.355
 when I recorded this.  A
 Californian city, 3 letters

07:25:56.858 --> 07:25:58.395
 then 9 letters. I probably
 should have got that one.

07:25:58.396 --> 07:25:59.779
    Of course, we may want to
 make changes to this in future.

07:25:59.780 --> 07:26:02.646
 Maybe add some things like a
 refresh button or some JS that

07:26:02.647 --> 07:26:04.647
 keeps checking to see if
 connectivity returns. And to do

07:26:05.796 --> 07:26:08.546
 that you need to work with
 ServiceWorker's update system,

07:26:08.547 --> 07:26:11.199
 which we've been avoiding so
 far thanks to this checkbox.

07:26:11.200 --> 07:26:13.203
    Let's take those training
 wheels off.  Let's say we

07:26:14.900 --> 07:26:17.324
 wanted to change the text here
 to say "no connectivity" rather

07:26:17.325 --> 07:26:19.676
 than "no connection."  Well,

07:26:24.699 --> 07:26:26.088
 we'll change our offline page's
 html . But we need to update

07:26:26.089 --> 07:26:28.784
 our ServiceWorker too. The URLs
 are generated from the file's

07:26:28.785 --> 07:26:30.785
 content. So we'll need to

07:26:33.869 --> 07:26:35.869
 change the URL for offline

07:26:40.363 --> 07:26:41.110
 page.  Bingo! There we go.
 page.

07:26:41.111 --> 07:26:42.854
    And we'd make the same
 change in our fetch event, so

07:26:42.855 --> 07:26:44.547
 we're serving up this new page.
 We're also going to change the

07:26:44.548 --> 07:26:47.810
 version of the cache, from 1 to
 2. And I'll show you why in a

07:26:47.811 --> 07:26:49.647
 moment.  But let's give that a
 spin. Reload the page to pick

07:26:49.648 --> 07:26:51.650
 up those changes. Change the
 network state to 'offline' And

07:26:51.651 --> 07:26:54.075
 reload again.
    But the text hasn't changed.

07:26:54.076 --> 07:26:57.762
 It still says connection, not
 connectivity. Here's what

07:26:59.471 --> 07:27:01.500
 happened. We reloaded the page,
 which triggered the browser to

07:27:01.501 --> 07:27:05.089
 check the ServiceWorker for
 updates. It fetched the

07:27:06.478 --> 07:27:07.585
 ServiceWorker and went, huh,
 this is different to the one I

07:27:07.586 --> 07:27:12.842
 have. And it spins it up .
    As a new version running

07:27:13.993 --> 07:27:15.199
 alongside the old version, but
 the old one remains because the

07:27:15.200 --> 07:27:18.106
 new one isn't ready yet. The
 new one goes through its

07:27:18.107 --> 07:27:21.855
 install event. Get all the
 stuff it needs, including the

07:27:21.856 --> 07:27:24.680
 new offline page. Then it puts
 them in the cache. That's why

07:27:24.681 --> 07:27:26.871
 we gave the cache a different
 name, so it wouldn't overwrite

07:27:26.872 --> 07:27:30.751
 the stuff the old version was
 using.  By default, the new

07:27:32.241 --> 07:27:34.593
 version wait. It doesn't take
 over while the old version is

07:27:34.594 --> 07:27:36.871
 in use because having multiple
 tabs open to the same site

07:27:37.930 --> 07:27:39.930
 running different versions Is a

07:27:42.104 --> 07:27:45.088
 huge source of really nasty
 difficult-to-debug stuff.

07:27:45.089 --> 07:27:48.670
    We could see this waiting
 ServiceWorker in devtools, in

07:27:48.671 --> 07:27:50.892
 the resources panel. We've got
 a ServiceWorker that's active,

07:27:50.893 --> 07:27:54.060
 but we also have a
 ServiceWorker waiting. We can

07:27:54.061 --> 07:27:56.061
 also see our new cache in the

07:28:00.542 --> 07:28:01.376
 caches view. This new worker 

07:28:01.377 --> 07:28:03.208
 worker.
    -- static V2 will be there 

07:28:03.209 --> 07:28:06.395
as well.  This one will 
 stay there until the old one is

07:28:06.396 --> 07:28:10.535
 in longer in use.
    When this closes, there's 

07:28:10.536 --> 07:28:13.302
nothing left to control.  
 The old version isn't needed 

07:28:13.581 --> 07:28:18.889
anymore.  It becomes, 
 well, re-dun Dan            

07:28:19.086 --> 07:28:21.593
redundant and it goes away.
    (Sad music.)

07:28:31.822 --> 07:28:35.390
    But that means the new
 version can move in and start

07:28:35.391 --> 07:28:37.485
 controlling pages. We can make

07:28:40.790 --> 07:28:43.123
 that happen by navigating away.
 Still in offline mode. Then

07:28:43.124 --> 07:28:44.158
 clicking back.
     And there we go, the text

07:28:44.159 --> 07:28:46.581
 has changed. We still have that
 old cache hanging around,

07:28:48.045 --> 07:28:49.468
 though, but we can deal with
 that. Once the old SW is gone,

07:28:49.469 --> 07:28:53.105
 the new SW gets an activate
 event and we can use that to

07:28:57.736 --> 07:28:59.736
 perform cleanup and migrate
 databases if we want to.

07:29:00.706 --> 07:29:02.192
    I tend to have an array of
 caches I expect to be there.

07:29:02.193 --> 07:29:04.193
 Then I use the activate event
 to go through the caches and

07:29:06.119 --> 07:29:10.374
 delete the ones that aren't in
 that array. It's a slightly

07:29:18.296 --> 07:29:20.562
 ugly bit of code, but you 
can    

07:29:27.394 --> 07:29:28.045
can.
    --

07:29:28.046 --> 07:29:29.901
    This behavior of one SW
 waiting for another is the

07:29:29.902 --> 07:29:30.925
 default, but it doesn't have to
 be this way. Your new worker

07:29:30.926 --> 07:29:33.206
 can call skip waiting, which
 means it doesn't want to wait

07:29:33.207 --> 07:29:35.312
 behind an older version. That
 just kicks the old version out

07:29:35.313 --> 07:29:37.624
 and takes over straight away.
 Just be aware you're now

07:29:38.719 --> 07:29:40.530
 controlling pages that were
 loaded with some older

07:29:40.531 --> 07:29:41.973
 ServiceWorker.
    You can track this happening

07:29:45.937 --> 07:29:47.495
 from pages if you want to show
 messages like "refresh to get

07:29:47.496 --> 07:29:50.682
 the latest version."  Or maybe
 you can get away with

07:29:52.496 --> 07:29:53.847
 auto-refreshing if the user
 hasn't interacted yet.  But for

07:29:56.859 --> 07:29:58.250
 most of development, I really
 recommend update on reload.

07:29:58.251 --> 07:30:01.207
 This checkbox in the
 ServiceWorker panel. This

07:30:01.208 --> 07:30:03.208
 changes the update flow to

07:30:04.919 --> 07:30:05.951
 speed things up.
    With update-on-reload, you

07:30:05.952 --> 07:30:07.989
 hit refresh, the browser
 fetches the ServiceWorker from

07:30:07.990 --> 07:30:11.137
 the network. It treats it as a
 new version, even if it hasn't

07:30:11.138 --> 07:30:13.138
 changed. It installs so all the

07:30:15.651 --> 07:30:17.651
 caches get updated with the

07:30:21.702 --> 07:30:22.187
 latest stuff.
    And once that's done it

07:30:22.188 --> 07:30:23.083
 kicks the old version out鈥� Takes over鈥�And then the page

07:30:23.084 --> 07:30:25.667
 refreshe. That's a lot, but the
 result is you get your latest

07:30:25.668 --> 07:30:29.250
 ServiceWorker  and  assets
 every load.

07:30:30.131 --> 07:30:32.970
    Okay, that was a lot to take
 in, but how are we doing? We

07:30:37.204 --> 07:30:39.204
 must return to the
 compare-inator.  First up:

07:30:42.277 --> 07:30:46.043
 ONLINE GO! Well, we haven't
 changed anything, but content

07:30:46.044 --> 07:30:50.202
 is still arriving pretty
 quickly.

07:30:51.094 --> 07:30:52.331
    How about: Offline? GO! Yay,
 we're taking responsibility for

07:30:52.332 --> 07:30:54.614
 network failures. We're
 catching the error .We can ship

07:30:54.615 --> 07:30:58.394
 this .
    But we're not quite a

07:30:59.271 --> 07:31:00.305
 progressive web app yet. We
 need to tell the browser we're

07:31:00.306 --> 07:31:03.859
 ready to offer a native-like
 experience. In the head of the

07:31:03.860 --> 07:31:05.860
 page we can declare a theme
 color, which Chrome uses to

07:31:07.103 --> 07:31:09.826
 style the location bar.  So
 that's a quick win, but we want

07:31:09.827 --> 07:31:13.100
 users to be able to add this to
 their homescreen.  And there's

07:31:13.101 --> 07:31:15.437
 a lot of ways to do that to
 cover all the browsers.

07:31:16.638 --> 07:31:17.899
    You'll need to specify an
 icon, and icon, and probably

07:31:17.900 --> 07:31:20.957
 another icon.  And did I
 mention the icon? Most of this

07:31:20.958 --> 07:31:22.958
 meta crap isn't needed until
 the user opts into adding your

07:31:23.659 --> 07:31:26.691
 site to their homescreen.
 Meanwhile it's being sent down

07:31:26.692 --> 07:31:28.692
 with every page Increasing the

07:31:32.988 --> 07:31:35.291
 time to first render.
    So we got rid of this and 

07:31:35.292 --> 07:31:37.997
replaced it with a 
 reference to a manifest.  It no

07:31:38.199 --> 07:31:42.182
 longer clogs up the 
 load of every page.  

07:31:43.469 --> 07:31:45.173
Furthermore it's a great time to

07:31:45.174 --> 07:31:49.700
 standardize the meat crap.  
Once you have this and 

07:31:49.701 --> 07:31:52.184
 the ServiceWorker,

07:32:03.315 --> 07:32:04.367
 interested in this site. This
 icon here comes from the icon

07:32:04.368 --> 07:32:05.934
 field in the manifest. You can
 specify icons of multiple

07:32:05.935 --> 07:32:06.806
 sizes, and Chrome will pick the
 one closest to what it needs.

07:32:06.807 --> 07:32:08.797
    Here I'm just serving one
 512x512 icon and letting Chrome

07:32:08.798 --> 07:32:11.147
 do the scaling. You should
 serve smaller icons if your

07:32:11.148 --> 07:32:13.148
 large icon is a big download.

07:32:15.574 --> 07:32:18.031
 But in this case the big icon
 is 5 kilobytes. The name comes

07:32:18.032 --> 07:32:20.217
 from the name property. You see
 how this works.

07:32:21.212 --> 07:32:23.212
    Then, if the user taps "add
 to homescreen," they get an

07:32:23.361 --> 07:32:25.361
 icon on their homescreen. We've
 already seen where the icon

07:32:25.617 --> 07:32:27.367
 comes from, but the text
 beneath it comes from the short

07:32:27.368 --> 07:32:31.417
 name. If your short name and
 name are the same, you can omit

07:32:31.418 --> 07:32:36.358
 short name. Later when the user
 launches your app, a

07:32:38.087 --> 07:32:39.461
 splashscreen is displayed while
 the browser is spinning up and

07:32:39.462 --> 07:32:42.307
 the page is loading.
    The icon comes from the icon

07:32:42.308 --> 07:32:47.095
 list. If you have multiple
 icons listed it'll go for one

07:32:47.096 --> 07:32:49.195
 of the bigger ones. The name
 here comes from the name field.

07:32:49.196 --> 07:32:51.678
 The background color comes from
 the background color and the

07:32:51.679 --> 07:32:55.055
 color of the status bar is from
 the theme color.

07:32:56.130 --> 07:32:57.671
    Then once the page is ready,
 the splashscreen goes away. The

07:32:57.672 --> 07:33:02.333
 page that loaded is the one
 listed as the start URL. This

07:33:02.334 --> 07:33:04.334
 is pretty cool as it means your

07:33:07.784 --> 07:33:09.149
 site can make use of many URLs
 but have a specific starting

07:33:09.150 --> 07:33:11.111
 location when launched. But
 you'll also notice the URL bar

07:33:11.112 --> 07:33:13.325
 isn't there. That's because
 this web app is standalone.

07:33:14.514 --> 07:33:15.710
    All this adds together to
 make the whole experience feel

07:33:15.711 --> 07:33:17.969
 like a native app. And that's
 why it becomes so important

07:33:17.970 --> 07:33:20.177
 that we, at the very least, own
 our own connection errors. We

07:33:20.178 --> 07:33:22.227
 don't want the default browser
 error breaking this native

07:33:26.659 --> 07:33:28.864
 feel. We can ship this, it's an
 incremental improvement. When

07:33:28.865 --> 07:33:31.457
 developing offline-capable
 sites, it's a common error to

07:33:31.458 --> 07:33:34.144
 start iterating on this. For
 example, make it show cached

07:33:34.145 --> 07:33:39.049
 messages, make it a fuller
 offline experience. But that's

07:33:39.050 --> 07:33:42.001
 an online-first approach, which
 works fine if the user is truly

07:33:42.002 --> 07:33:46.267
 offline.
    But zero connectivity is not

07:33:50.826 --> 07:33:52.826
 the worst thing we face. This

07:33:54.755 --> 07:33:56.755
 is. I call it Lie-fi This is
 when your phone says it has

07:33:57.821 --> 07:33:59.225
 connectivity, but it doesn't
 really.  If you have lie-fi and

07:34:03.698 --> 07:34:05.698
 you ask for content, the web

07:34:08.859 --> 07:34:10.859
 says鈥� ummmmmmm ummmmmmm. Well
 if鈥�ummmmmmmmm .

07:34:12.532 --> 07:34:13.562
    And this is it, it's worse
 than offline. With offline you

07:34:17.070 --> 07:34:19.070
 get a quick answer. But here,
 you're just left waiting. You

07:34:22.221 --> 07:34:24.811
 I'm sure you've had this 
yourself.  

07:34:24.812 --> 07:34:26.812
 You

07:34:27.924 --> 07:34:30.298
 done want to give up.
 don't want to give up, just in

07:34:30.299 --> 07:34:33.643
 case the data arrives in the
 next few seconds. But does it?

07:34:33.644 --> 07:34:35.644
 鈥o!  You're forcing the user

07:34:39.182 --> 07:34:43.248
 to stare at this, or give up.
 And with every passing second,

07:34:39.182 --> 07:34:42.284
 they hate the experience a
 little more.

07:34:44.856 --> 07:34:46.282
    Our current online-first
 pattern works great when the

07:34:46.283 --> 07:34:48.283
 user has a good connection.
 They get the latest messages

07:34:48.796 --> 07:34:51.295
 pretty fast.  It's great when
 the user's offline, because

07:34:54.056 --> 07:34:56.056
 they instantly get some cached

07:34:58.411 --> 07:35:00.808
 data, or a failure page.  But
 with lie-fi鈥�This is it. Chrome

07:35:00.809 --> 07:35:04.630
 removes the splashscreen when
 the page renders. With lie-fi,

07:35:04.631 --> 07:35:07.341
 the page never renders. We've
 improved things for offline

07:35:08.590 --> 07:35:10.590
 users, but lie-fi users are in
 the same hell as they were

07:35:10.871 --> 07:35:12.871
 before.
    This is the problem with

07:35:13.246 --> 07:35:14.296
 online-first.  We're giving
 users with some connectivity a

07:35:14.297 --> 07:35:17.593
 worse experience than users
 with no connectivity. And this

07:35:17.594 --> 07:35:20.462
 isn't just down to poor
 connectivity on the user's

07:35:25.237 --> 07:35:27.329
 device. Sometimes you can have
 full signal, and still be

07:35:30.351 --> 07:35:31.415
 experiencing lie-fi.  A lot
 happens to get data from the

07:35:31.416 --> 07:35:34.469
 web. The phone sends the
 request to the wifi router or

07:35:34.470 --> 07:35:37.812
 cell tower. Then on to the ISP,
 through intermediate proxies;

07:35:37.813 --> 07:35:42.745
 potentially across to the other
 side of the world And

07:35:44.037 --> 07:35:46.037
 eventually the request reaches
 the destination server.

07:35:47.130 --> 07:35:49.130
    But that's only half the
 journey because the server

07:35:50.157 --> 07:35:51.163
 responds, and that response
 needs to go all the way back

07:35:51.164 --> 07:35:53.289
 across the world, through
 proxies, through ISPs, over the

07:35:53.290 --> 07:35:55.290
 air, and land safe and sound on

07:35:57.916 --> 07:35:59.316
 your phone. But if something
 along the way runs slowly, the

07:36:02.708 --> 07:36:04.189
 whole thing runs slow .And
 therein lies lie-fi. And you

07:36:04.190 --> 07:36:08.588
 don't know how good the network
 connection is until you try.

07:36:08.589 --> 07:36:11.795
 And that takes time
    There are a couple of APIs

07:36:11.796 --> 07:36:14.766
 on the web that attempt to
 predict

07:36:29.241 --> 07:36:29.552
 the network, such as   
 as.

07:36:29.553 --> 07:36:32.148
    That's interesting.  There 
was supposed to be a 

07:36:32.149 --> 07:36:38.637
 slide there.is not part of the 
act.  It's just some fun.ALD:  

07:36:38.638 --> 07:36:44.139
Oh, yeah!    
    &gt;&gt;Audience:  Lie-fi!    

07:36:44.140 --> 07:36:45.285
    &gt;&gt; JAKE ARCHIBALD:  Lie-fi. 
 No this entire 

07:36:45.286 --> 07:36:49.237
 presentation works offline.  
Maybe I'll unplug this 

07:36:49.238 --> 07:36:53.254
 and plug it back in again?
    (Chuckles.)

07:36:53.255 --> 07:36:56.050
    &gt;&gt; JAKE ARCHIBALD:  Do we 
have a dodgy connection 

07:36:56.252 --> 07:36:58.252
 here?

07:37:05.759 --> 07:37:10.018
    Don't present for ... I do 
want to present from my 

07:37:10.335 --> 07:37:14.644
 own laptop.
    How are we for the -- oh, my

07:37:14.836 --> 07:37:18.746
 God, it's starting to 
 work!  This is amazing!  So my 

07:37:18.747 --> 07:37:22.747
colleagues always tell 
 me I'm stupid for doing my own 

07:37:23.061 --> 07:37:27.749
slide framework.
    There we go!  Let's see if 

07:37:27.750 --> 07:37:29.750
this continues to work.

07:37:31.981 --> 07:37:36.134
    Oh, my God, it's working ag
ain.  Yes!    

07:37:36.135 --> 07:37:38.135
    (Cheers and applause.)

07:37:41.447 --> 07:37:43.429
    &gt;&gt; JAKE ARCHIBALD:  Okay, h
ere we go.  Where was I 

07:37:43.430 --> 07:37:46.063
 I?  There are a couple of APIs 
in the Web that 

07:37:46.064 --> 07:37:53.647
 attempt to predict the network.
  These are navigate          

07:37:53.648 --> 07:37:56.441
 navigate -- those are weak 
signals.  Those APIs only 

07:37:56.442 --> 07:37:58.860
 know about that bit.  They 
don't know about any of 

07:37:58.861 --> 07:38:04.851
 the rest.  For instance, when 
navigate.online is 

07:38:04.852 --> 07:38:09.845
 false, you have no connection. 
 That much is certain 

07:38:09.846 --> 07:38:14.053
 when navigator.onLine is on you
 have no -- 

07:38:14.054 --> 07:38:16.754
 navigator.onLine is true when 
you are connected to a 

07:38:16.755 --> 07:38:19.661
 cell tower or router although 
that may only be plug    

07:38:19.662 --> 07:38:22.646
 plugged into some soil.
    (Laughter.)

07:38:23.540 --> 07:38:24.239
    &gt;&gt; JAKE ARCHIBALD:  
Navigator.onLine will still be 

07:38:24.240 --> 07:38:28.069
 true.  Anything have that first
 hop cannot be predict       

07:38:28.070 --> 07:38:30.557
 predicted.  You have to make a 
connection and see.  

07:38:30.558 --> 07:38:33.752
 That takes time.  If user wants
 to look at past 

07:38:33.753 --> 07:38:36.551
 messages why should they need a
 connection?  Why 

07:38:36.552 --> 07:38:39.058
 should they have to wait for a 
connection to fail 

07:38:39.059 --> 07:38:41.761
 just to see stuff already on 
their phone?  The great 

07:38:41.762 --> 07:38:44.259
 thing about local data, you 
don't need to make an 

07:38:44.260 --> 07:38:46.852
 Internet connection for it.
    This is why the gold st

07:38:48.858 --> 07:38:53.839
andard is Offline-First.  
 Offline-First solves these 

07:38:53.840 --> 07:38:56.519
problems.  You get content 
 from the network and the more 

07:38:56.520 --> 07:38:59.844
you get to render bout 
 a connection, the better.  

07:39:00.041 --> 07:39:03.161
Think of the network as a 
 piece of enhancement, an 

07:39:03.309 --> 07:39:06.251
enhancement that might not 
 be there.  We need to rethink 

07:39:06.762 --> 07:39:09.454
our approach a bit here    
 here.  I'm going to create an 

07:39:09.675 --> 07:39:11.675
application shell and 
 that's just a site without 

07:39:11.758 --> 07:39:14.944
messages.  We'll leave it 
 to Javascript to populate it.  

07:39:15.068 --> 07:39:18.059
So we are going to 
 change the install event so it 

07:39:18.256 --> 07:39:22.370
caches the app shell, 
 the CSS and the Javascript.

07:39:22.371 --> 07:39:24.669
    Meanwhile over in the fetch 
event we start by 

07:39:24.762 --> 07:39:28.457
 parse ing the URL so we can 
read the component part.  

07:39:28.458 --> 07:39:31.558
 If the request is to the same 
origin as the 

07:39:31.559 --> 07:39:33.850
 ServiceWorker and the path name
 is slash, the root 

07:39:33.851 --> 07:39:38.360
 page, we respond with the app 
shell from the cache.  

07:39:38.361 --> 07:39:41.261
 Done.  Otherwise we'll respond 
to cache content and 

07:39:41.262 --> 07:39:43.948
 fall back to the network.  So 
all together, we are 

07:39:43.949 --> 07:39:48.058
 going to fetch the HTML, CSS 
and Javascript from the 

07:39:48.059 --> 07:39:51.457
 cache and that gets us the 
first render.  And that 

07:39:51.458 --> 07:39:54.570
 goes to the network and gets 
the messages for us 

07:39:54.571 --> 07:40:00.666
 which gets the render going for
 us.  That can show a 

07:40:00.667 --> 07:40:04.354
 error message as well.
    Doing all that, what do we 

07:40:04.355 --> 07:40:08.562
win?  It is time to 
 return to the compare

07:40:12.920 --> 07:40:16.559
inato  tor.
    How are we doing?  The onlin

07:40:16.759 --> 07:40:21.163
e experience.  Look at 
 that, we massively improved the

07:40:21.164 --> 07:40:24.901
 render time.  The 
 messages are coming from the 

07:40:24.902 --> 07:40:27.661
sappled old network, 
 they come because the down 

07:40:27.952 --> 07:40:30.763
loads starts earlier.  
 What about offline?  Great, the

07:40:31.156 --> 07:40:35.563
 app shell opened and 
 the pages of Javascript showed 

07:40:35.883 --> 07:40:40.158
no connection error.  
 What about lie-fi?  So we have 

07:40:40.448 --> 07:40:43.460
the blank screen.  The 
 Java discriminate can show a 

07:40:44.177 --> 07:40:47.837
spinning or something, 
 but you can see the benefits of

07:40:47.838 --> 07:40:52.778
 Offline-First versus 
 online first.  Rather than 

07:40:52.779 --> 07:40:54.462
improving things for one 
 connection time, we improved 

07:40:54.463 --> 07:40:57.168
across the board.  It 
 has taken us little code to get

07:40:57.169 --> 07:40:59.273
 there.  We can ship 
 this.

07:40:59.274 --> 07:41:03.462
    What about cache ing chat 
mess      messages, displaying t

07:41:04.876 --> 07:41:07.281
hose     
 those.  Messages arrive one by 

07:41:07.282 --> 07:41:12.058
one, the continual 
 feed of data is request and 

07:41:12.265 --> 07:41:15.578
response based.  We want 
 a store that we can add and 

07:41:15.960 --> 07:41:18.908
remove messages from.  
 The Web platform has such a 

07:41:18.909 --> 07:41:27.471
thing.  It is called 
 index DB.  Index DB has a bad r

07:41:28.267 --> 07:41:31.865
eputation among 
 developers.  It's the worst API

07:41:31.866 --> 07:41:34.175
 ever designed in the 
 history of computer science.  

07:41:34.471 --> 07:41:37.192
Other than that it's 
 pretty good.  60 percent of the

07:41:37.193 --> 07:41:41.086
 awful comes from the event 
system it uses.  It predates 

07:41:41.266 --> 07:41:43.675
promises.  
 If it was invented today it 

07:41:43.975 --> 07:41:47.571
would use promises.  
 There is a effort underway to 

07:41:47.716 --> 07:41:54.262
patch it up.  I prefer 
 teaching the, IDB is a little 

07:41:54.668 --> 07:41:59.180
liesh they put together 
 that mimics the, where it used 

07:41:59.363 --> 07:42:03.275
promises.  Other than 
 that you are still using method

07:42:03.276 --> 07:42:05.276
 names, with 60    
 60 percent of the awful 

07:42:05.560 --> 07:42:07.583
eliminate ed.

07:42:26.197 --> 07:42:27.325
     I much prefer teaching the
 web platform rather than

07:42:27.326 --> 07:42:27.839
 libraries or frameworks, but
 I'm going to make a bit of an

07:42:27.840 --> 07:42:28.580
 exception here. IDB is a little
 library I built that mirrors

07:42:28.581 --> 07:42:29.279
 the IndexedDB API, but it uses
 promises where IDB should have

07:42:29.280 --> 07:42:29.980
 used promises. But other than
 that, you're using IDB, just

07:42:29.981 --> 07:42:31.134
 with 60% of the awful
 eliminated.  It's 1.2k, but

07:42:31.135 --> 07:42:31.489
 there are bigger higher level
 APIs out there such as dexie.

07:42:31.490 --> 07:42:32.628
 This library only eliminates
 the worst of IDB.

07:42:32.629 --> 07:42:33.004
     So, let's build a database
 for our messages Messages look

07:42:33.005 --> 07:42:33.818
 like this: They arrive in JSON
 format.  Let's build an indexed

07:42:33.819 --> 07:42:34.676
 database for them using the IDB
 library. Start by opening the

07:42:34.677 --> 07:42:35.423
 DB, giving it name "Emojoy."  1
 is the version number of the

07:42:35.424 --> 07:42:36.235
 database.
    Then we have a callback to

07:42:36.236 --> 07:42:37.331
 define it's schema. First we
 need to create somewhere to

07:42:37.332 --> 07:42:39.367
 store the messages. Relational
 databases call them tables. IDB

07:42:39.368 --> 07:42:42.818
 calls them object stores.  We
 create one called messages, and

07:42:45.966 --> 07:42:47.375
 tell it our primary key is ID.
 We're often going to look up

07:42:47.376 --> 07:42:50.662
 messages in date order, so
 we'll create an index called

07:42:50.663 --> 07:42:53.693
 by-date on the date property.
 And that's it, not too painful.

07:42:53.694 --> 07:42:56.642
    Now we can take this DB
 promise and add messages to it

07:42:56.643 --> 07:42:59.956
 as they arrive. Say we had a
 function like this鈥�A function

07:42:59.957 --> 07:43:02.393
 that gets called every time a
 new message arrives. And it's

07:43:02.394 --> 07:43:05.391
 added to the page.  We get our
 database from the promise,

07:43:05.392 --> 07:43:09.803
 create a read/write transaction
 on our messages store. Then add

07:43:09.804 --> 07:43:11.773
 the message to the object
 store. I don't expect you to

07:43:11.774 --> 07:43:14.156
 remember all this code. I'm
 just trying to show that

07:43:15.683 --> 07:43:17.683
 IndexedDB can be a little less
 scary with promises.

07:43:18.106 --> 07:43:19.415
    Getting messages isn't too
 bad either: Transaction on

07:43:19.416 --> 07:43:21.812
 messages. Go into the object
 store. Get the index where

07:43:22.597 --> 07:43:24.597
 everything's date ordered. Get
 them all. Done.

07:43:24.880 --> 07:43:26.186
    Of course, we can't just
 keep adding messages into the

07:43:26.187 --> 07:43:29.169
 DB. We'll need to perform some
 cleanup. Say we wanted to

07:43:30.943 --> 07:43:32.966
 delete everything but the
 newest 30 messages. Create a

07:43:32.967 --> 07:43:34.967
 transaction. Get our date

07:43:38.565 --> 07:43:40.065
 index. Open a cursor. The
 'prev' here means we go through

07:43:40.066 --> 07:43:42.936
 the index backwards . So
 starting with the newest

07:43:44.639 --> 07:43:47.255
 message. Skip the first 30
 items, since we want to keep

07:43:47.256 --> 07:43:49.256
 those. Then loop through the
 rest calling delete on each

07:43:51.202 --> 07:43:52.525
    Okay, this isn't so pretty.
 Like I said the library only

07:43:52.526 --> 07:43:54.974
 adds promises in. You're still
 exposed to the rest of IDB's

07:43:54.975 --> 07:43:58.271
 ugliness. That's still a lot
 cleaner than it would be in

07:44:00.407 --> 07:44:02.004
 standard IDB. Having a database
 full of messages means we can

07:44:02.005 --> 07:44:07.476
 fetch our page shell, js, css
 from the cache. Then render

07:44:09.599 --> 07:44:11.599
 with messages from the
 database. We get content on

07:44:12.012 --> 07:44:14.571
 screen without going to the
 network. Then we go to the

07:44:14.572 --> 07:44:18.361
 network for newer messages and
 avatars And update the page.

07:44:18.362 --> 07:44:21.377
    If the network request
 fails, doesn't matter, we're

07:44:21.378 --> 07:44:24.707
 displaying content .That's a
 great offline experience. If

07:44:24.708 --> 07:44:29.417
 the network request is slow,
 that might be okay if the user

07:44:29.418 --> 07:44:32.494
 is just wanting to check a
 previous message.

07:44:35.502 --> 07:44:37.277
    To see the benefits of this,
 we once again must gaze upon

07:44:43.277 --> 07:44:43.565
 the compare-inator鈥�       

07:44:43.566 --> 07:44:45.566
 compare-inator鈥�
    Fight! 

07:44:58.760 --> 07:44:59.541
 difference! That's huge. What
 about Offline? We have content!

07:44:59.542 --> 07:45:02.460
 Okay, the avatars have failed,
 but hey, we've gone from a

07:45:03.212 --> 07:45:03.988
 total failure offline, to
 instant content! This is way

07:45:03.989 --> 07:45:05.866
 better than the 'sorry' message
 we had before. And how about

07:45:05.867 --> 07:45:07.824
 lie-fi? We've gone from the
 most frustrating experience in

07:45:07.825 --> 07:45:09.825
 the world, the white screen of

07:45:14.248 --> 07:45:15.582
 eternal misery, to instant
 content! We can Ship it!

07:45:15.583 --> 07:45:18.149
    The only missing bit in
 terms of a full offline-first

07:45:18.150 --> 07:45:20.376
 experience, is the avatars. But
 we can fix that. Here's our

07:45:22.193 --> 07:45:23.672
 current fetch code.  We want to
 do something special for our

07:45:23.673 --> 07:45:27.934
 avatars, so let's rewind a bit.
 If the request is to gravatar,

07:45:27.935 --> 07:45:31.002
 which is where the avatars come
 from , we'll call out to

07:45:32.444 --> 07:45:33.523
 another function,
 handleAvatarRequest.

07:45:33.524 --> 07:45:36.630
 Otherwise, we'll handle the
 request as we were before.

07:45:37.619 --> 07:45:39.619
    So, what does
 handleAvatarRequest do? We

07:45:41.749 --> 07:45:43.498
 could fetch the avatar from the
 network and if that fails we

07:45:43.499 --> 07:45:47.594
 can serve a default from the
 cache. We'd cache this fallback

07:45:54.370 --> 07:45:56.004
 avatar in our install step.
 Cool, ship it! Of course,

07:45:56.005 --> 07:45:56.980
 later, we could do something
 even better. when we get the

07:45:56.981 --> 07:46:00.782
 request for the avatar. Try and
 get it from the cache. If we

07:46:00.783 --> 07:46:03.112
 get a response, send it to the
 page! That gives us an avatar

07:46:03.113 --> 07:46:05.645
 without going to the network.
    But we should go to the

07:46:08.204 --> 07:46:09.710
 network too, not only in case
 we don't get a cached response

07:46:09.711 --> 07:46:13.768
 But also just to update what we
 have in the cache. The user may

07:46:13.769 --> 07:46:16.150
 have updated their avatar.
 Showing an old avatar is okay,

07:46:16.151 --> 07:46:18.151
 but we should update it for
 next time.

07:46:19.148 --> 07:46:20.551
     So off to the network we
 go. And if we get a response

07:46:20.552 --> 07:46:24.879
 back. Put it in the cache .And
 that's us done, unless the

07:46:26.490 --> 07:46:28.120
 avatar wasn't already in the
 cache. In that case, send back

07:46:28.121 --> 07:46:33.331
 the network response. Done!
    This is what HTTP calls

07:46:35.511 --> 07:46:37.511
 stale-while-revalidate caching.

07:46:39.514 --> 07:46:42.246
 It's an experimental feature in
 Chrome, behind a flag .But we

07:46:42.247 --> 07:46:45.472
 can emulate it in ServiceWorker
 so people can have it today.

07:46:45.473 --> 07:46:49.997
 Thankfully the code for this is
 way simpler than describing it.

07:46:49.998 --> 07:46:53.818
 We start by making a network
 request because we always need

07:46:53.819 --> 07:46:56.428
 to. Sometimes it's just to
 update the cache. Sometimes

07:47:02.523 --> 07:47:02.921
 we'll send it back to the page
 too. We use waitUntil to say

07:47:02.922 --> 07:47:07.295
 we're going to do some work in
 addition to providing a

07:47:08.091 --> 07:47:09.652
 response. And in the additional
 work we'll take our network

07:47:09.653 --> 07:47:10.534
 response and clone it.
    The body of a response can

07:47:10.535 --> 07:47:13.727
 only be read by one thing, but
 we're wanting to use it to feed

07:47:13.728 --> 07:47:15.877
 into the cache, but potentially
 also back to the page. So we

07:47:15.878 --> 07:47:18.937
 need to clone it so we have 
two    

07:47:18.938 --> 07:47:22.042
 two.
    This is how you can read a 

07:47:22.043 --> 07:47:24.043
free gigabyte,.

07:47:27.293 --> 07:47:27.941
    We
 of them. We open a cache called

07:47:27.942 --> 07:47:30.681
 "avatars." Unlike our static
 cache, we're going to preserve

07:47:34.076 --> 07:47:36.720
 this between versions Then put
 the avatar in the cache .

07:47:38.240 --> 07:47:40.211
    Meanwhile we return a
 response from the cache, and if

07:47:40.212 --> 07:47:42.212
 the cache doesn't have one, we

07:47:45.279 --> 07:47:45.767
 use the network fetch as the
 response. Done! Sooner or later

07:47:45.768 --> 07:47:48.266
 you'll need some code to go
 into the cache and look for

07:47:50.222 --> 07:47:52.222
 avatars you no longer need. But

07:47:55.862 --> 07:47:59.167
this helps a lot.
    So to see how this affects 

07:48:00.641 --> 07:48:03.094
things,
    For the final time, I

07:48:05.039 --> 07:48:07.039
 promise, we approach the

07:48:15.448 --> 07:48:16.890
 compare-inator. First up:
 online experience So quick,

07:48:16.891 --> 07:48:18.724
 full content. Offline? GO! So
 quick, full content lie-fi. So

07:48:18.725 --> 07:48:20.725
 quick, full content. In fact,

07:48:27.259 --> 07:48:29.259
 the experience is the same 
with 

07:48:32.491 --> 07:48:33.073
    (Applause.)
    &gt;&gt; JAKE ARCHIBALD:  

07:48:33.074 --> 07:48:33.647
    In fact, the experience is
 the same with every connection

07:48:33.648 --> 07:48:35.563
 type.The network only matters
 when it comes to fetching new

07:48:35.564 --> 07:48:37.880
 content. Ship it! So we've
 achieved network resilience

07:48:38.696 --> 07:48:39.760
 right? Well, we're doing great
 when it comes to sending data

07:48:44.107 --> 07:48:45.573
 to the user, but less so鈥�    When it comes to the user

07:48:54.406 --> 07:48:56.127
 sending data to us, I hate this
 - the user's transaction is

07:48:56.128 --> 07:48:56.801
 complete. They've said here are
 some smiley faces, please send

07:48:56.802 --> 07:48:58.293
 them to people - done. But no,
 we're requiring them to watch

07:49:05.892 --> 07:49:07.459
 it through to completion.
    can do better.

07:49:07.460 --> 07:49:08.863
    Background sync  landed in
 Chrome a couple of months ago.

07:49:08.864 --> 07:49:11.150
 It's a ServiceWorker event that
 you request. You're asking to

07:49:11.151 --> 07:49:12.812
 do some work when the user has
 a connection. Straight away if

07:49:12.813 --> 07:49:15.060
 the user already has a
 connection, otherwise later.

07:49:15.061 --> 07:49:17.234
 So say we had a function that
 was called whenever the user

07:49:17.235 --> 07:49:19.999
 typed a message and hit send.
 We'd add the message to an

07:49:22.691 --> 07:49:25.448
 outbox. This is a function we'd
 write that puts the message

07:49:27.222 --> 07:49:28.906
 into IDB or whatever. Then get
 the ServiceWorker registration.

07:49:28.907 --> 07:49:30.907
 We register for a sync and give
 it a name.

07:49:33.762 --> 07:49:35.762
    That can fail. So we should

07:49:37.032 --> 07:49:39.032
 catch that and fall back to our

07:49:41.806 --> 07:49:43.156
 regular
 you-must-watch-this-send

07:49:43.157 --> 07:49:44.462
 approach.  Otherwise, over in
 the ServiceWorker we get a sync

07:49:44.463 --> 07:49:48.358
 event.We can check the tag name
 so we know how to react .We use

07:49:48.359 --> 07:49:51.214
 our old friend waitUntil to let
 the ServiceWorker know how long

07:49:51.215 --> 07:49:53.283
 things take. Then we get the
 messages from the outbox, send

07:49:53.284 --> 07:49:57.119
 them to the server and remove
 them from the outbox. The

07:49:58.086 --> 07:49:59.832
 effect of this, the user can be
 on lie-fi, or totally offline

07:49:59.833 --> 07:50:01.833
 but they can use the app as if

07:50:05.122 --> 07:50:07.949
 it were online.
     When they send a message,

07:50:11.298 --> 07:50:13.298
 we can add it straight to the

07:50:17.818 --> 07:50:18.618
 chat output It says "sending" 

07:50:18.619 --> 07:50:20.395
 "sending".
    I can hit some pictures of 

07:50:20.396 --> 07:50:24.411
cats and it says send    
 sending therein and in tiny 

07:50:24.618 --> 07:50:27.646
letters, but it doesn't 
 have a lot of emphasis.  The 

07:50:28.013 --> 07:50:31.625
user is free to close 
 their phone or the browse er.  

07:50:31.913 --> 07:50:34.530
It doesn't matter.  At 
 some point later when they reg

07:50:35.012 --> 07:50:37.012
ain connectivity, the 
 message will be September in 

07:50:37.521 --> 07:50:41.417
the background.
    There it goes.

07:50:41.418 --> 07:50:44.329
    And the user didn't know 
this happened, didn't 

07:50:44.623 --> 07:50:48.114
 know it was sent in the 
background.  From their point 

07:50:48.115 --> 07:50:50.100
 of view the transaction was 
complete.  They said send 

07:50:50.101 --> 07:50:54.410
 this.  The time they get to 
know about it is with a 

07:50:54.930 --> 07:50:58.819
 push notification with a reply 
from another user.  By 

07:50:58.820 --> 07:51:01.830
 using sync, we get out of the 
user's way.  They don't 

07:51:02.024 --> 07:51:05.332
 have to check for new messages.
  We tell them about 

07:51:05.333 --> 07:51:09.127
 this.  This improves the user 
experience.  If you do 

07:51:09.128 --> 07:51:11.923
 this stuff, I think it's 
totally cool to brag about 

07:51:11.924 --> 07:51:16.007
 it.  This is something that the
 I/O Web app does, 

07:51:16.008 --> 07:51:18.412
 cache ing complete, this 
workings offline.  I think 

07:51:18.413 --> 07:51:20.908
 this is great, but I do hope 
that it goes out of 

07:51:20.909 --> 07:51:25.631
 fashion.  I remember those 
little site pages that 

07:51:25.632 --> 07:51:29.569
 said this site was built using 
CSS2.  Now you say CSS   

07:51:29.570 --> 07:51:31.634
 CSS, well done you
    (Laughter.)

07:51:31.635 --> 07:51:33.635
    &gt;&gt; JAKE ARCHIBALD:  I hope 
one day this will seem 

07:51:34.324 --> 07:51:38.344
 as ridiculous.  Before that we 
do need to build up 

07:51:38.345 --> 07:51:40.943
 user trust.
    I don't know if someone has 

07:51:40.944 --> 07:51:43.432
seen this before.  
 This is what I'm greeted with 

07:51:43.433 --> 07:51:47.022
on the bathroom on 
 board the trains I compute to 

07:51:47.023 --> 07:51:50.733
work in.  You have to 
 press D to close the door and L

07:51:50.734 --> 07:51:52.921
 when it's flashing to 
 lock the door.  There's braille

07:51:53.123 --> 07:51:55.524
 there as well.  Even 
 blind people know they have to 

07:51:55.725 --> 07:51:57.230
wait for the flashing 
 light

07:51:57.231 --> 07:51:59.629
    (Laughter.)
    &gt;&gt; JAKE ARCHIBALD:  But the 

07:51:59.630 --> 07:52:04.920
buttons aren't proper 
 buttons eacher.  They are flat 

07:52:04.921 --> 07:52:07.239
touch things, horrible        
 horrible.  I don't trust this. 

07:52:07.240 --> 07:52:09.629
 I don't trust this 
 because once it failed on me.  

07:52:09.829 --> 07:52:12.714
And I was slowly 
 revealed to the carriage like a

07:52:12.715 --> 07:52:14.715
 bad game show prize.
    (Laughter.)

07:52:18.538 --> 07:52:21.440
    &gt;&gt; JAKE ARCHIBALD:  
Similarly users don't trust 

07:52:22.538 --> 07:52:28.320
 the Web.  Messages do use, all 
the epiphany ies I had in 

07:52:28.321 --> 07:52:31.336
bathrooms.  ServiceWorker used 
that.  In 

07:52:31.337 --> 07:52:33.849
 the future weapon are going to 
tighten the rules to 

07:52:33.850 --> 07:52:38.028
 try to detect some kind of 
offline cable experience.  

07:52:38.029 --> 07:52:39.937
 We want everything on the 
Homescreen to be 

07:52:39.938 --> 07:52:43.538
 competitive with native apps.  
We want to make the 

07:52:43.539 --> 07:52:46.334
 Web a first class part of the 
operating system in the 

07:52:46.335 --> 07:52:48.335
 user's mind.
    On that note I want to com

07:52:48.428 --> 07:52:52.338
pare the launching of a 
 native app Google Photos, well 

07:52:52.339 --> 07:52:56.136
built and well 
 optimize ed, to Emojoy and 

07:52:56.320 --> 07:52:58.134
launch them at the same time    
 time.

07:52:58.135 --> 07:53:02.921
    Oh, it's really close, like 
Emojoy is naught point 

07:53:02.922 --> 07:53:05.444
 two-seconds closer.  200 
milliseconds, almost 

07:53:05.529 --> 07:53:07.716
nothing       
 nothing.  That's a well built 

07:53:07.717 --> 07:53:10.147
native app.  That's 
 starting from cold, the 

07:53:10.349 --> 07:53:13.223
browse er not in memory at all.
    If the user had looked at 

07:53:13.224 --> 07:53:16.525
the browse er at some 
 point recently, let's face it 

07:53:17.132 --> 07:53:20.026
the browse er, fairly 
 popular app, that's quite like

07:53:20.226 --> 07:53:24.622
ly.  This happens.
    This is a progressive Web 

07:53:24.837 --> 07:53:26.837
app.

07:53:28.929 --> 07:53:29.135
(Applause.)
    &gt;&gt; JAKE ARCHIBALD:  That's 

07:53:29.136 --> 07:53:33.230
beating a native app to 
 content render by almost half a

07:53:33.449 --> 07:53:36.227
 sepgd.  That's the 
 power of ServiceWorker and the 

07:53:36.228 --> 07:53:40.347
power of offline first     
 first.  It was incremental, 

07:53:40.830 --> 07:53:43.029
improving the experience 
 every step for everyone.  

07:53:43.435 --> 07:53:47.320
Things get faster for users 
 with decent connections, things

07:53:47.321 --> 07:53:50.546
 top being frustrating 
 with lie-fi and impossible for 

07:53:50.805 --> 07:53:52.832
users that are offline       
 offline.  A few people today 

07:53:52.833 --> 07:53:55.837
asked me about Android 
 instant apps and what that 

07:53:56.047 --> 07:53:58.852
means for the Web.  
 Progressive apps are possible 

07:53:59.348 --> 07:54:02.747
today.  One app across 
 thousands of devices operating 

07:54:02.748 --> 07:54:06.653
systems and browse ers, 
 already beating a pre-installed

07:54:06.654 --> 07:54:12.938
 native app to render.
    ServiceWorker is in the 

07:54:12.939 --> 07:54:18.724
stable Chrome, Opera and 
 others now.  Under 

07:54:18.725 --> 07:54:21.438
consideration by apple.  
 Progressive enhancement means 

07:54:21.439 --> 07:54:24.655
you can use it today as 
 we saw people talking about it 

07:54:25.247 --> 07:54:28.859
earlier.  If you use 
 ServiceWorker and things become

07:54:28.860 --> 07:54:33.323
 faster in Chrome and 
 Firefox than in Safari, that 

07:54:33.324 --> 07:54:37.520
gives Apple reason to 
 use it.  You get to guide the 

07:54:37.521 --> 07:54:41.936
future of the 
 ostensible Web.  ServiceWorker 

07:54:42.238 --> 07:54:46.648
creates great users.  
 Polly filling network features,

07:54:46.649 --> 07:54:49.349
 I've gone through a 
 lot of stuff.  There is a free 

07:54:49.350 --> 07:54:52.651
udacity course fully 
 interactive where you take a 

07:54:52.652 --> 07:54:57.943
website from online only 
 to Offline-First.  Going into 

07:54:57.944 --> 07:54:59.944
everything I talked 
 about.  Don't remember the URL.

07:55:00.441 --> 07:55:03.840
  Google udacity 
 offline.  It shows up.

07:55:03.841 --> 07:55:06.841
    With that, it has been a 
pleasure.  Thank you very 

07:55:06.842 --> 07:55:07.830
 much.
    (Applause.)

07:55:07.831 --> 07:55:11.455
    (Cheers and applause.)
    (The session concluded.)

08:02:13.920 --> 08:02:16.419
indr.  Wayfindr.  Way

08:02:33.286 --> 08:02:33.485
 finder.
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:34.486
&gt;&gt;
&gt;&gt;

08:02:33.486 --> 08:02:35.486
&gt;&gt; Test test test test test test
 test test

08:02:48.149 --> 08:02:50.149
 test

08:02:51.890 --> 08:02:52.756
 test.
&gt;&gt;

08:02:52.757 --> 08:02:53.757
&gt;&gt;
&gt;&gt;

08:02:52.757 --> 08:02:53.757
&gt;&gt;
&gt;&gt;

08:02:52.757 --> 08:02:53.757
&gt;&gt;
&gt;&gt;

08:02:52.757 --> 08:02:54.757
&gt;&gt; 5/19/16

08:03:00.029 --> 08:03:06.569
Google.org:  Accelerating 
Invasion for people with 

08:03:06.570 --> 08:03:08.570
disabilities

08:08:55.185 --> 08:08:57.207
&gt;&gt;
&gt;&gt; Everyone, lightning!  Thanks 

08:08:57.208 --> 08:09:01.748
for sticking with us through a 
long time.  I'm Brigette Hoyer 

08:09:01.749 --> 08:09:07.375
Gosselink, I'm part of the team 
at Google.org.  Yesterday as the

08:09:08.179 --> 08:09:10.770
 keynote, how many made it flu 
the keynote and heard the 

08:09:10.771 --> 08:09:14.542
closing?  Not bad.  Good job!  
If you haven't, I think it's 

08:09:14.543 --> 08:09:18.240
worth watching.  It's relevant 
to content we have today.  He 

08:09:18.241 --> 08:09:21.747
talked about the power of a 
pplying the most cutting edge 

08:09:21.748 --> 08:09:25.712
computing we have to the world's
 biggest  challenges.  At G 

08:09:25.713 --> 08:09:28.434
oogle.org we fund and support 
organizations chough are working

08:09:28.638 --> 08:09:31.862
 to make that promise, the 
promise of technology to have 

08:09:31.863 --> 08:09:34.768
social impact a reality. 
And it was interesting for me 

08:09:34.769 --> 08:09:37.400
because yesterday's keynote 
actually brought me a little bit

08:09:37.786 --> 08:09:41.807
 full circle back to last year's
 keynote.  Last year's keynote 

08:09:41.808 --> 08:09:47.151
there was a video that profiled 
a man from Brazil who is working

08:09:47.550 --> 08:09:50.174
 on a piece of assistive 
technology for his daughter.  

08:09:50.175 --> 08:09:53.799
The organizations that we are 
working with here today that are

08:09:53.800 --> 08:09:57.224
 here to share their work with 
you as well as many of the 

08:09:57.225 --> 08:10:00.351
organizations we supported last 
year actually were working to 

08:10:00.352 --> 08:10:03.999
tackle a specific set of 
challenges facing people with 

08:10:04.000 --> 08:10:06.979
disabilities. 
So first, a quick poll, how many

08:10:08.112 --> 08:10:12.027
 people here either identify 
themselves as having a 

08:10:12.028 --> 08:10:14.028
disability or know someone who 
does?

08:10:18.380 --> 08:10:20.984
.  It's a lot of people.  As 
many of you probably know one in

08:10:21.045 --> 08:10:25.123
 seven people in the world have 
some form of disability.  It's a

08:10:25.226 --> 08:10:27.927
 billion people.  It's the w 
orld's largest minority. 

08:10:27.928 --> 08:10:32.261
And we know that technology has 
the potential to help increase 

08:10:32.262 --> 08:10:35.179
independence and opportunity for
 people with disabilities for 

08:10:35.180 --> 08:10:40.091
that billion people.  Something 
very exciting is  happening 

08:10:40.092 --> 08:10:44.827
outside!  And here, which is 
great.  So last year at I/O we 

08:10:44.828 --> 08:10:49.272
announced plans to award $20 
million in funding and funding 

08:10:49.273 --> 08:10:52.199
and support for n on-profit 
organizations chough were trying

08:10:52.490 --> 08:10:55.114
 to help push forward 
independence and opportunity.  

08:10:55.115 --> 08:10:58.746
We launched an open call and we 
were blown away by the response 

08:10:58.747 --> 08:11:03.254
we got.  We had more than a 
thousand applications from 88 

08:11:03.255 --> 08:11:05.878
countries.  One of those 
applications was from Carlos.  

08:11:05.879 --> 08:11:10.857
And Carlos actually proposed to 
use natural language processing 

08:11:10.858 --> 08:11:16.949
and context, a couple of things 
we heard about here at I /0 to 

08:11:16.950 --> 08:11:19.173
improve the assist of 
communication software he was 

08:11:19.174 --> 08:11:21.989
building to his daughter could 
communicate.  She has 

08:11:21.990 --> 08:11:24.814
communicate limitations as 
someone with cerebral palsy.  So

08:11:25.017 --> 08:11:27.830
 he wants the software to be 
able to in the morning when they

08:11:28.336 --> 08:11:31.852
 w akes up suggest on her 
picture board breakfast items 

08:11:31.853 --> 08:11:34.476
because it knows that she is at 
home and she knows in the 

08:11:34.477 --> 08:11:37.316
morning she wants breakfast.  
She wouldn't have to navigate in

08:11:38.126 --> 08:11:41.445
 to find, through several menus 
to find options so she can say 

08:11:41.446 --> 08:11:45.850
she wants oatmeal. 
So it was exciting for me to 

08:11:45.851 --> 08:11:49.683
here Cinder talking about the 
promise of those practices and 

08:11:49.684 --> 08:11:52.987
we are excited to be funding 
Carlos to do the work and what 

08:11:52.988 --> 08:11:57.033
he will be building will be open
 source so other assistive d 

08:11:57.034 --> 08:12:00.950
evices and software can benefit 
from the same work he is using. 

08:12:01.039 --> 08:12:04.582
I'm thrilled to have here today 
four other organizations who won

08:12:04.583 --> 08:12:07.901
 funding through that challenge,
 who are all working on really 

08:12:07.902 --> 08:12:10.907
hard problems.  If you want to 
check out any of the other 

08:12:10.908 --> 08:12:13.333
projects and ideas that we 
funded, they are all available, 

08:12:13.334 --> 08:12:19.998
you can check them out at G.C O/
disabilities.  With that I will 

08:12:19.999 --> 08:12:23.005
turn it over to the panelists to
 introduce themselves and tell 

08:12:23.006 --> 08:12:26.432
you about their work.    They 
will talk about who they are as 

08:12:26.433 --> 08:12:29.437
people, technologists working on
 social challenges.  Hopefully 

08:12:29.438 --> 08:12:32.357
that's interesting to some of 
you, and what the problem is 

08:12:32.358 --> 08:12:35.489
they are working on  as well as 
the approach to try to solve 

08:12:35.490 --> 08:12:38.606
that problem. 
&gt;&gt; ARNON ZAMIR:  Very excited to

08:12:38.813 --> 08:12:43.238
 be here.  My name is Arnon Z 
amir, I came from Tel Aviv where

08:12:43.352 --> 08:12:49.892
 I run an organization named 
TOM.  Myself, I'm a software 

08:12:49.893 --> 08:12:55.216
developer by profession and by 
occupational history, but in the

08:12:55.516 --> 08:13:00.246
 last many years or so I have 
been running social technology 

08:13:00.247 --> 08:13:02.247
involved

08:13:04.777 --> 08:13:09.198
 projects.  What we do with TOM 
is kind he create an umbrella 

08:13:09.199 --> 08:13:12.952
system for technologies to be 
involved in assisting and 

08:13:12.953 --> 08:13:17.272
empowering people with 
disabilities.  We are  looking 

08:13:17.273 --> 08:13:19.668
for challenges that can and, 
therefore, should be addressed 

08:13:20.092 --> 08:13:24.525
by technology and we are looking
 for two main cases, either as a

08:13:25.416 --> 08:13:28.647
 solution if a challenge does 
not exist or where a solution 

08:13:28.648 --> 08:13:36.104
exists but it is not affordable 
to many people due to either IP 

08:13:36.105 --> 08:13:39.511
rights on the design or other 
reasons usually customization 

08:13:39.512 --> 08:13:44.170
which makes it very expensive.  
We are looking for technology 

08:13:44.171 --> 08:13:46.453
makers that are willing to put 
some time into development of 

08:13:46.454 --> 08:13:51.561
solutions and then people with 
disabilities and experts which 

08:13:51.562 --> 08:13:56.622
we call need knowers, those that
 can  describe the need.  We 

08:13:56.623 --> 08:14:01.327
facilitate the meeting of the 
two by making make-a-thons, 

08:14:01.328 --> 08:14:05.580
marathons of m akers and taking 
the products of those into 

08:14:05.581 --> 08:14:09.602
continuous developing products, 
and finally with the assistance 

08:14:09.603 --> 08:14:15.344
of G oogle.org we are able to 
take the pack path to market as 

08:14:15.345 --> 08:14:18.981
I non-profit organization on an 
open source version of 

08:14:18.982 --> 08:14:25.286
everything that we require and 
develop.  That said one line, a 

08:14:25.287 --> 08:14:29.516
long line. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Gr

08:14:29.517 --> 08:14:29.820
 eat,. 
&gt;&gt; GINNY GRANT:  I'm Ginny Grant

08:14:29.821 --> 08:14:33.541
 Benetech I'm senior product 
manager at Ben  Ben they tech 

08:14:33.542 --> 08:14:38.273
and I have been a technologist, 
a classroom teacher and 

08:14:38.274 --> 08:14:40.274
volunteer and when I came to

08:14:44.626 --> 08:14:47.545
 Benetech is a completely 
different kind of technology 

08:14:47.546 --> 08:14:50.551
company.  Like you we look for 
opportunities where we can serve

08:14:51.461 --> 08:14:54.573
 communities that otherwise are 
not as well s erved, whether 

08:14:54.574 --> 08:14:59.830
it's in an environmental sense. 
 We have tools which allow c 

08:14:59.831 --> 08:15:03.232
onservationists to report issues
 with their ecosystem.  We also 

08:15:03.233 --> 08:15:08.683
have secure tools that our human
 rights advocates are able to 

08:15:08.684 --> 08:15:10.388
report human rights v iolations 
around the world. 

08:15:10.389 --> 08:15:15.782
And then in the group that I'm 
most focused on our global 

08:15:15.783 --> 08:15:18.947
literacy team, we serve over 
400,000 members who are able to 

08:15:18.948 --> 08:15:22.480
get our books in an accessible 
format for their needs whether 

08:15:22.481 --> 08:15:25.998
it's because they have a vision 
impairment or they have lost the

08:15:26.182 --> 08:15:31.122
 use of a limb, perhaps whether 
cerebral palsy or they have 

08:15:31.123 --> 08:15:34.852
served their country and lost an
 arm, had a stroke or they have 

08:15:34.853 --> 08:15:37.461
a learning difference, a 
disability such as dyslexia that

08:15:37.867 --> 08:15:43.082
 causes the words not to form 
properly unless they are served 

08:15:43.083 --> 08:15:48.118
in multimodal both visually and 
auditorially and highlighted.  

08:15:48.119 --> 08:15:50.773
We are it's exciting we are able
 to bring those technologies to 

08:15:50.865 --> 08:15:54.270
people around the world and I 
will be talking later about the 

08:15:54.271 --> 08:15:56.271
details of how we are doing

08:15:58.202 --> 08:15:59.198
 t hat. 
&gt;&gt; HOLGER DIETERICH:  Hello, my 

08:15:59.199 --> 08:16:03.721
name is Holger Hieterich, I'm 
the cofounder of wheel map. map.

08:16:03.833 --> 08:16:07.033
org I have a degree in design 
and work in product management a

08:16:07.652 --> 08:16:13.902
 lot.  The problem I have found 
with my best friendra usual  

08:16:14.071 --> 08:16:19.231
friend Rahul who is using an 
electric wheelchair is where can

08:16:19.319 --> 08:16:22.793
 we hang out, have coffee, 
mundane things and we think that

08:16:22.794 --> 08:16:26.481
 inclusion means that everybody 
should take part in daily life 

08:16:26.482 --> 08:16:29.982
equally, no matter if they have 
a disability or not.  So what I 

08:16:29.983 --> 08:16:33.514
figured out is why do we always 
go to the cafe in your area.  

08:16:33.515 --> 08:16:36.443
Why don't you come to my 
neighborhood?  So we are from 

08:16:36.444 --> 08:16:40.458
Berlin, Germany, and we have 
lots of old  buildings and what 

08:16:40.459 --> 08:16:43.283
I didn't know is lots of 
buildings have steps in the 

08:16:43.284 --> 08:16:46.933
entrance so you cannot get in 
when you have an electric 

08:16:46.934 --> 08:16:50.637
wheelchair.  He said I don't 
know where I can get in in your 

08:16:50.638 --> 08:16:53.913
neighborhood.  I'm l ike,io, but
 you cannot be the only 

08:16:53.914 --> 08:16:56.983
wheelchair user in Berlin or in 
this neighborhood.  So what 

08:16:56.984 --> 08:17:00.769
about building an app where 
everybody can, you know, look 

08:17:01.313 --> 08:17:05.773
around and mark places, physical
 places like restaurants, cafes,

08:17:06.347 --> 08:17:11.395
 anything, any public places and
 say, yes, they are wheelchair 

08:17:11.396 --> 08:17:15.799
accessible or no, they are not 
wheelchair accessible.  So we 

08:17:15.800 --> 08:17:19.050
built that like five years ago 
and it's now the largest data 

08:17:19.051 --> 08:17:22.562
set in the world with more than 
650,000 marked places and we are

08:17:22.863 --> 08:17:28.197
 on line in 22 languages.  So 
what we do now is we want to 

08:17:28.198 --> 08:17:34.331
bring this to other l 
ocation-based  services and maps

08:17:34.729 --> 08:17:38.067
 apps so that they can augment 
their service with wheelchair 

08:17:38.068 --> 08:17:40.965
accessibility, but not only our 
resources but from other n 

08:17:40.966 --> 08:17:44.233
on-profits from other data 
sources as  

08:17:47.449 --> 08:17:49.222
as well. 
&gt;&gt; UMESH PANDYA:  I'm Umesh 

08:17:49.223 --> 08:17:52.287
Pandya, my full name is Umesh 
Pandya.  I have been a designer 

08:17:52.556 --> 08:17:57.193
for 15 years.  And we work out 
of London and I look after an 

08:17:57.194 --> 08:18:04.218
organization called Wayfindr.  
Way finder's mission is to 

08:18:04.219 --> 08:18:07.159
empower vision impaired people 
to navigate the world.  That's 

08:18:07.160 --> 08:18:11.290
what we do day in and day out.  
What we do, we could not create 

08:18:11.291 --> 08:18:16.019
an app.  We are creating an open
 standard for audio-based way 

08:18:16.020 --> 08:18:19.945
finding.  What that allows 
people to do is it allows venue 

08:18:20.134 --> 08:18:23.478
owners such as transport n 
etworks and retailers and 

08:18:23.479 --> 08:18:26.492
navigation app developers to 
have a common language together.

08:18:26.493 --> 08:18:29.003
  So they can look at the 
standard and understand how they

08:18:29.335 --> 08:18:32.333
 might make their space 
accessible for indoor navigation

08:18:32.531 --> 08:18:36.146
 for blind people.  Now, 
currently we are using BLE, so 

08:18:36.147 --> 08:18:41.686
we are using bluetooth beacons 
to allow turn by turn.  We have 

08:18:41.687 --> 08:18:45.004
done i nstallations over in 
London and Sydney and that tells

08:18:45.500 --> 08:18:49.337
 the user walk straight or turn 
right or go down an escalator 

08:18:49.338 --> 08:18:52.129
and all of the instructions and 
guidelines are baked in the 

08:18:52.670 --> 08:18:57.192
guidelines we published last 
week in the open standards. 

08:18:57.193 --> 08:18:58.705
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Pe
 rfect.  Thanks so much for the 

08:18:58.706 --> 08:19:01.306
overviews.  I think I would like
 to start with a discussion 

08:19:01.307 --> 08:19:04.136
about inclusive design in 
general and in specific how we 

08:19:04.137 --> 08:19:07.780
can think about technology 
really being part of the answer 

08:19:07.976 --> 08:19:11.669
for some of the challenges that 
face people with disabilities.  

08:19:11.670 --> 08:19:15.811
And obviously that's the core of
 what you all could do, but I 

08:19:15.812 --> 08:19:18.787
thought it would be useful for 
the audience to give more of the

08:19:18.788 --> 08:19:21.343
 advice you would have for 
designing with this user 

08:19:21.344 --> 08:19:25.983
population in mind.  Ginny,  do 
you want to start off? 

08:19:25.984 --> 08:19:28.202
&gt;&gt; GINNY GRANT:  A number of 
things.  The first thing is 

08:19:28.203 --> 08:19:31.450
start early, think about 
accessibility as soon as you can

08:19:31.451 --> 08:19:34.657
 right with usability.  You 
never want to bake it back in 

08:19:34.658 --> 08:19:38.767
later.  You can't change the i 
ngredients.S so much better to 

08:19:38.768 --> 08:19:42.289
start up front. 
So look for all of the design 

08:19:42.290 --> 08:19:44.439
standards and I know other 
people will be talking about 

08:19:44.440 --> 08:19:51.480
this too, but thinking about t 
he, POUR, that's a good a 

08:19:51.481 --> 08:19:56.310
cronym.  So Google that.  Making
 sure that every illustration or

08:19:56.498 --> 08:20:01.335
 image that's in your, on your 
Web page or in your tool is 

08:20:01.336 --> 08:20:07.860
accessible to all.  Turn off 
volume.  Turn own  down the 

08:20:07.861 --> 08:20:13.290
monitor or try to use an oven 
mitt to navigate.  If you had to

08:20:13.516 --> 08:20:16.548
 use a switch and needed to be 
able to mooch around, you can't 

08:20:16.549 --> 08:20:20.569
assume that people have all of 
the dexterity that some others 

08:20:20.570 --> 08:20:25.491
do.  So work that in from the 
very get-go.  There are lots of 

08:20:25.492 --> 08:20:28.906
other things but work through 
standards.  Umy you mentioned 

08:20:28.907 --> 08:20:32.524
that earlier, try to improve the
 standards so that more people 

08:20:32.525 --> 08:20:38.056
can spread the capability of 
technology that is accessible.  

08:20:38.057 --> 08:20:43.613
I think that's a good starting 
point. 

08:20:43.614 --> 08:20:43.699
&gt;&gt; BRIGITTE HOYER GOSSELINK:  De
 finitely. 

08:20:43.700 --> 08:20:46.216
&gt;&gt; ARNON ZAMIR:  I would like to
 add to that and that's a very 

08:20:46.217 --> 08:20:51.446
important part of creating 
anything inclusive and anything 

08:20:51.447 --> 08:20:55.104
accessible is being in a concept
 dialogue with the people that 

08:20:55.105 --> 08:21:02.013
need it.  One of the principles 
which is articulated in the s 

08:21:02.014 --> 08:21:08.351
aying from Holger, nothing about
 us without us.  Don't do 

08:21:08.352 --> 08:21:14.797
anything for someone, always do 
with someone.  When we 

08:21:14.798 --> 08:21:18.054
work-a-thon we define our goal 
and methodology as facilitating 

08:21:18.055 --> 08:21:21.758
meeting points of challenge and 
talent.  We bring people that 

08:21:21.759 --> 08:21:24.995
can donate some of their time 
and we sit them in the same room

08:21:24.996 --> 08:21:28.091
 in the same table with the 
people that can understand the 

08:21:28.092 --> 08:21:31.231
challenge. 
So imagine that you were 

08:21:31.232 --> 08:21:36.330
developing an app, a 
productivity app for young 

08:21:36.331 --> 08:21:38.835
mothers.  The first thing you 
would have done is go meet young

08:21:39.258 --> 08:21:41.961
 mothers and analyze their 
productivity challenges.  Right.

08:21:41.962 --> 08:21:47.404
  That's obvious for every 
development team working on 

08:21:47.405 --> 08:21:52.442
designing the new app.  The same
 thick is true for -- thing is 

08:21:52.443 --> 08:21:56.861
true from wheelchair 
accessibility for applications 

08:21:56.862 --> 08:22:02.302
for people with disabilities.  
Just have your client with you. 

08:22:02.596 --> 08:22:06.835
 And another small angle on 
that, is that accessibility is 

08:22:06.836 --> 08:22:10.748
one thing.  Design your 
application to be accessible for

08:22:10.749 --> 08:22:13.752
 people with certain 
limitations.  Another angle can 

08:22:13.753 --> 08:22:17.684
be when you are m eeting with a 
new technology or when you are 

08:22:17.685 --> 08:22:20.812
creating a new technology, one 
of the things we found out some 

08:22:20.813 --> 08:22:25.746
people right away think what can
 this technology do for people 

08:22:25.747 --> 08:22:28.163
with disabilities?  So if we 
have a new

08:22:31.583 --> 08:22:36.012
 visual design or if we have a 
contextual engine or if we have 

08:22:36.013 --> 08:22:39.932
anything new happening in the 
big technology world, right away

08:22:40.230 --> 08:22:44.186
 we think how can this be used 
for people with disabilities?  

08:22:44.187 --> 08:22:48.408
There is no  advancement today 
that is not tied with technology

08:22:48.499 --> 08:22:50.499
 and this is not an

08:22:54.838 --> 08:22:55.931
 exception. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Br

08:22:55.932 --> 08:23:01.068
 ing in as I use case and not an
 add on or something you need a 

08:23:01.069 --> 08:23:06.394
different piece of software for.
  I think that speaks to 

08:23:06.395 --> 08:23:10.012
inclusive nature.  For those who
 may be uncertain for those to 

08:23:10.013 --> 08:23:14.054
get close to the user needs.  It
 can feel like a barrier when 

08:23:14.055 --> 08:23:20.256
developing solutions in this 
base.  What advice would you 

08:23:20.257 --> 08:23:22.401
have for people to get close to 
those needs. 

08:23:29.787 --> 08:23:30.647
 H olger? 
&gt;&gt; HOLGER DIETERICH:  The way we

08:23:30.648 --> 08:23:36.785
 do it we use build, measure 
learn and we use a can sentinel 

08:23:36.786 --> 08:23:38.786
design in everything we do.  For
 example, in some of the 

08:23:38.990 --> 08:23:42.025
stations we have done we have 
worked with users over three 

08:23:42.026 --> 08:23:46.350
weeks so every station we have 
done every installation we have 

08:23:46.351 --> 08:23:50.779
done 25 users.  We bring them 
in, test one to one, we  

08:23:50.780 --> 08:23:52.980
iterate, that means we get five 
iterations of products in one 

08:23:52.981 --> 08:23:56.024
day, that's amazing.  Over the 
course of three weeks we have 

08:23:56.025 --> 08:23:58.547
something validated.  All of 
that information is pushed into 

08:23:58.548 --> 08:24:02.766
standard and we have an awesome 
backlog that we need to attack 

08:24:02.767 --> 08:24:07.100
in the next round of user 
testing.  Having users at the 

08:24:07.101 --> 08:24:10.209
center is useful.  Prototyping 
is a good way to manage 

08:24:10.210 --> 08:24:12.640
uncertainty.  If you are 
developing something and unsure 

08:24:12.641 --> 08:24:16.250
am I doing the right thing or 
should I be doing it this way?  

08:24:16.251 --> 08:24:20.382
Get users in the room.  Try and 
hunt out the actual people that 

08:24:20.383 --> 08:24:24.219
have the needs that  you can 
help support.  If you can't 

08:24:24.220 --> 08:24:27.447
access them, try to find experts
 that can help with that.  The 

08:24:27.448 --> 08:24:30.452
core thing is bake them into 
your process and bake them into 

08:24:30.453 --> 08:24:34.686
your organization and how you do
 it.  You can't do it at a 

08:24:34.687 --> 08:24:36.687
distance.  It's difficult.  You 
have to have them with you at 

08:24:36.688 --> 08:24:40.129
all times. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  I 

08:24:40.130 --> 08:24:45.243
think Holger's story of finding 
the organization that he found 

08:24:45.244 --> 08:24:50.589
with Rahul, is the visceral way.
  Just hire someone and have 

08:24:50.590 --> 08:24:54.125
them on your staff but if you 
daunt do that, think I what you 

08:24:54.126 --> 08:24:56.588
suggested is quite useful.  We 
mentioned the idea of 

08:24:57.053 --> 08:24:59.711
experimentation.  And this is 
actually beyond this space 

08:24:59.712 --> 08:25:04.294
something that is interesting in
 the social impact sector in 

08:25:04.295 --> 08:25:08.918
generally.  We actually don't 
think a lot, in the same way we 

08:25:08.919 --> 08:25:12.149
talk about launching an iterate 
in Google and many of the 

08:25:12.150 --> 08:25:14.864
technology that we build, we 
don't think as much about it 

08:25:14.865 --> 08:25:17.695
sometimes when it comes to 
social challenges and that's 

08:25:17.696 --> 08:25:19.913
because there are some real 
barriers to that.  It's 

08:25:19.914 --> 08:25:22.525
something that we encourage in 
the work that we support and 

08:25:22.526 --> 08:25:25.401
fund and a lot of the groups 
that are represented here are 

08:25:25.402 --> 08:25:28.551
trying to do that.  I wonder if 
you could get reflections on 

08:25:28.552 --> 08:25:31.690
some of the difficulties and 
barriers to doing that well 

08:25:31.691 --> 08:25:35.313
given that you are trying to 
with your work have great social

08:25:37.020 --> 08:25:39.020
 impact?
&gt;&gt; Maybe I can give an example. 

08:25:39.044 --> 08:25:42.762
 So there were other non-profit 
organizations who try to do what

08:25:43.564 --> 08:25:48.387
 he we did.  We are finding 
wheelchair accessible places and

08:25:48.388 --> 08:25:51.028
 they are experts in their needs
 as we said before, but they are

08:25:51.213 --> 08:25:56.148
 not experts in building end 
read apps or Web Apps or making 

08:25:56.149 --> 08:26:01.074
it scale.  So our data set is 
based on open street maps so we 

08:26:01.075 --> 08:26:05.214
have to know the access.  You 
have to be able to access the 

08:26:05.215 --> 08:26:09.142
APIs and build around it and 
make it stable, maybe interact 

08:26:09.143 --> 08:26:12.057
with others and have a good 
design.  I think where things 

08:26:12.058 --> 08:26:16.493
come together is to learn from 
each other and so that you as an

08:26:16.798 --> 08:26:20.197
 expert in software development 
have a beginner's mind set in 

08:26:20.198 --> 08:26:23.045
learning about people with 
disabilities and vice versa.  So

08:26:23.218 --> 08:26:27.048
 I think there is always 
something people can help each 

08:26:27.049 --> 08:26:29.049
other

08:26:31.498 --> 08:26:32.285
 with. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Um

08:26:32.286 --> 08:26:34.100
 i did you have anything to add.

08:26:34.101 --> 08:26:36.613
&gt;&gt; UMESH PANDYA:  What we have 
learned because we are a joint 

08:26:36.614 --> 08:26:44.155
venture between digital products
 studio and a charity, so it's a

08:26:44.567 --> 08:26:47.886
 joint venture between us and 
the royal London society for 

08:26:47.887 --> 08:26:51.141
blind people.  We are learning 
both ways.  We are bringing 

08:26:51.142 --> 08:26:53.915
digital products, design 
processes and all of that in, 

08:26:53.916 --> 08:26:57.660
but what the R LSB are helping 
us understand is the user and 

08:26:57.661 --> 08:27:01.379
the social impact.  Let me talk 
about measure and build, 

08:27:01.380 --> 08:27:05.908
measure, learn, 2 gets expanded 
a bit.  When you talk about 

08:27:05.909 --> 08:27:08.343
measure we can measure 
usability, whether the 

08:27:08.344 --> 08:27:10.446
instructions are correct, how 
many people are using it, 

08:27:10.447 --> 08:27:14.164
regular stuff like that.  
However, if you are talking 

08:27:14.165 --> 08:27:17.881
about measurement in a kind of 
social impact space is how do 

08:27:17.882 --> 08:27:21.939
you measure how someone felt 
before they used the Wayfindr 

08:27:21.940 --> 08:27:25.442
enabled system?  How did they 
feel after it.  How we moved 

08:27:25.443 --> 08:27:28.976
them along the journey to better
 well being.  These are i 

08:27:28.977 --> 08:27:31.978
nteresting challenges that take 
us out of the product space and 

08:27:31.979 --> 08:27:35.227
into a special impact space.  
These are exciting times when we

08:27:35.412 --> 08:27:39.794
 start to unpack these things. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  I 

08:27:39.795 --> 08:27:42.575
don't know if people on live 
stream can here cheering outside

08:27:42.576 --> 08:27:45.582
 of the tent but this is a 
popular discussion.  Getting a 

08:27:45.583 --> 08:27:49.116
lot of support.  Ginny, I think 
you that you have great 

08:27:49.117 --> 08:27:52.018
experience with the idea of 
iterating. 

08:27:52.019 --> 08:27:58.275
&gt;&gt; GINNY GRANT:  Book share and 
Benetech have been around before

08:27:58.276 --> 08:28:01.280
 Kindle.  When we first parted 
to make books available online 

08:28:01.281 --> 08:28:04.898
our mantra was about making 
books accessible in the digital 

08:28:04.899 --> 08:28:07.430
format that she need and people 
get it through the Web and we 

08:28:07.431 --> 08:28:10.855
have been starting as we have 
been expanding out to other 

08:28:10.856 --> 08:28:14.269
countries and other places that 
aren't as economically affluent,

08:28:14.476 --> 08:28:19.788
 and it's been fascinating to 
see all of the technology that 

08:28:19.789 --> 08:28:26.546
still has I E6 people 6 embedded
 in it.  And now they are 

08:28:26.547 --> 08:28:30.168
putting their library of books 
on CDs and sending them through 

08:28:30.169 --> 08:28:33.286
the postal service every month 
to their patrons and we are 

08:28:33.287 --> 08:28:39.430
trying to change socially the 
culture as  as well as 

08:28:39.431 --> 08:28:41.555
technology.  So we are 
definitely hitting constraints 

08:28:41.556 --> 08:28:45.779
where people who may not be as 
economically advantaged can't 

08:28:45.780 --> 08:28:50.417
switch out technology as fast as
 we here especially in this 

08:28:50.418 --> 08:28:52.641
wonderful Silicon Valley think 
can happen, but we are trying to

08:28:52.840 --> 08:28:57.156
 make the strides to get us, get
 people to that point again w 

08:28:57.157 --> 08:29:01.666
orking with and not for.  So 
that's been an interesting 

08:29:01.667 --> 08:29:03.594
challenge. 
What are some of the strategies 

08:29:03.595 --> 08:29:06.925
you have taken to try to deal 
with that?  Some is updating 

08:29:06.926 --> 08:29:13.080
your software to work back to I 
E6 so congratulations to you.

08:29:13.081 --> 08:29:17.588
&gt;&gt; GINNY GRANT:  We had to last 
November cut the umbilical cord.

08:29:18.192 --> 08:29:20.289
think they are at 8 now.
&gt;&gt; GINNY GRANT:  They are out of

08:29:20.598 --> 08:29:24.035
 the nest now, but they have 
other ways of doing it.  

08:29:24.036 --> 08:29:26.551
Unfortunately there were some 
people that were still asus c 

08:29:26.552 --> 08:29:30.997
omed and some of it is comfort 
levels because people have been 

08:29:30.998 --> 08:29:33.901
accustomed to doing things the 
way they have been doing things 

08:29:33.902 --> 08:29:36.533
so it's been an interesting 
journey to work with people and,

08:29:37.343 --> 08:29:40.352
 again, baby steps of getting 
people to try something out, 

08:29:40.353 --> 08:29:44.146
feel comfortable.  I love the 
idea of not just looking at 

08:29:44.147 --> 08:29:47.775
metrics from a purely objective 
perspective but that subjective 

08:29:49.737 --> 08:29:52.429
nature as well.  It's really 
cool.  So I guess that's some of

08:29:52.430 --> 08:29:54.845
 it is that we are also, we work
 with open source as well, so 

08:29:54.846 --> 08:29:57.872
that we want to make sure that 
other people can use pieces that

08:29:58.776 --> 08:30:04.817
 we built out.  We have a Math 
ML club that we are evolving 

08:30:04.818 --> 08:30:09.068
that people will be able to help
 expand and then use the Math ML

08:30:09.244 --> 08:30:12.468
 that's there in the repository 
goes goings what's Math

08:30:17.299 --> 08:30:18.504
  -- 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Wh

08:30:18.505 --> 08:30:22.221
 at is Math ML. 
&gt;&gt; GINNY GRANT:  Imagine you are

08:30:22.414 --> 08:30:25.460
 looking at a stem book and as a
 visual user you can see that 

08:30:25.461 --> 08:30:28.366
but what if you can't see it, 
you have to hear it.  So if it's

08:30:28.561 --> 08:30:32.260
 spoken out in a markup language
 that can be translated and 

08:30:34.227 --> 08:30:39.335
voiced, chem ML has the name 
concept.  So being able to refer

08:30:39.336 --> 08:30:44.792
 to those different image 
descriptions, ways that you can 

08:30:44.793 --> 08:30:48.198
describe what to a visual person
 is just an image makes it 

08:30:48.199 --> 08:30:50.199
accessible to

08:30:52.027 --> 08:30:52.628
 all. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Yo

08:30:52.629 --> 08:30:55.557
 u touched on something there is
 that I guess I touched on in my

08:30:55.840 --> 08:30:59.163
 intro in talking what Carlos is
 doing which is the idea 6 open 

08:30:59.164 --> 08:31:02.908
source.  One of the things that 
we promote as Google.org is the 

08:31:02.909 --> 08:31:06.340
idea of openness and it's not 
just for the principle of it but

08:31:06.620 --> 08:31:09.836
 because it's really critical to
 see some of the solutions come 

08:31:09.837 --> 08:31:12.867
to scale.  So when we think 
about the size of the problems 

08:31:12.868 --> 08:31:18.291
that people are working on that 
these   organizations and others

08:31:18.507 --> 08:31:21.516
 are working on, how could we 
imagine one organization solving

08:31:22.135 --> 08:31:24.720
 this, and frankly, you can't.  
So actually all of these 

08:31:24.721 --> 08:31:27.673
organizations and most of those 
that we support are actually 

08:31:27.674 --> 08:31:31.184
working to have people actively 
adopt what it is that they are 

08:31:31.185 --> 08:31:33.701
doing outside of sort of the 
walls of their organization, 

08:31:33.702 --> 08:31:39.466
which in many ways is different 
than how I think about a f 

08:31:39.467 --> 08:31:42.481
or-profit enterprise.  In some 
ways there is a wall built in 

08:31:42.482 --> 08:31:46.703
order to protect that and you 
ideally don't see a lot of 

08:31:46.704 --> 08:31:50.830
copycats.  It cuts into revenue.
  This is a split model with 

08:31:50.831 --> 08:31:54.135
what we are working with. 
We would love you to explore the

08:31:54.542 --> 08:31:58.180
 challenges of that.  If you say
 there aren't -- we have talked 

08:31:58.181 --> 08:32:01.297
about them and also some of what
 you have seen to be successful 

08:32:01.298 --> 08:32:04.305
in trying to drive that adoption
 beyond your own

08:32:13.075 --> 08:32:13.775
 walls. 
&gt;&gt; ARNON ZAMIR:  That's a huge 

08:32:13.776 --> 08:32:16.992
part of what we are doing.  
Imagine you are building a 

08:32:16.993 --> 08:32:19.795
product and it's relatively 
successful, you want it to grow 

08:32:19.996 --> 08:32:25.350
up and you want to scale it up. 
 And now imagine that your goal 

08:32:25.351 --> 08:32:30.275
is not to sell it but to 
transform a situation to move 

08:32:30.276 --> 08:32:34.121
the needle, in our case, our 
goal is to move the needle into 

08:32:34.122 --> 08:32:40.044
accessibility to assistive 
technology.  So we want that 

08:32:40.045 --> 08:32:41.650
every assistive technology 
whatever that is for your needs 

08:32:41.651 --> 08:32:44.181
will be available for you r 
egardless of how much money you 

08:32:44.182 --> 08:32:49.117
have or where you are.  
Obviously being a team of seven 

08:32:49.118 --> 08:32:55.781
people now, three people until 
recently, we cannot do that 

08:32:55.782 --> 08:32:58.267
alone. 
So from the ground app, the 

08:32:58.268 --> 08:33:00.671
whole mechanism behind the work 
at home is community engagement.

08:33:00.672 --> 08:33:03.989
  We actively work to transfer 
ownership from our own team to 

08:33:03.990 --> 08:33:07.621
the teams that are working on 
specific projects.  So if we 

08:33:07.622 --> 08:33:10.863
have, for example, a t 
ablet-based accessibility app, 

08:33:10.864 --> 08:33:15.384
we don't want to direct the t 
eam.  We don't want to own the 

08:33:15.385 --> 08:33:18.172
product.  We just want to 
support them as they own the 

08:33:18.173 --> 08:33:24.783
process and their results.  And 
this is through prosthetic arms 

08:33:24.784 --> 08:33:27.972
that we are doing sometimes 
based on open source existing 

08:33:27.973 --> 08:33:31.187
models or with wheelchair 
adjustments or everything else. 

08:33:31.387 --> 08:33:36.224
 And then we actively 
incorporate into our system 

08:33:36.225 --> 08:33:40.223
mechanisms for replication.  We 
are building a website that is 

08:33:40.224 --> 08:33:45.264
going to be an eBay style 
experience and m arketplace 

08:33:45.265 --> 08:33:48.995
experience for people to 
actively go on line and download

08:33:48.996 --> 08:33:54.515
 our material and copy and 
transform it, and we are heavily

08:33:55.344 --> 08:33:57.755
 encouraging teams to do this.  
One of the challenges is on one 

08:33:57.756 --> 08:34:01.495
hand how do we get as many 
groups in the world as possible,

08:34:01.673 --> 08:34:04.991
 take the product, transform to 
their local needs and implement 

08:34:04.992 --> 08:34:08.154
them.  On the other hand, make 
sure no one is doing something 

08:34:08.155 --> 08:34:12.550
unwanted with i t.  What will 
something unwanted be?  Use it 

08:34:12.551 --> 08:34:17.992
for something that we consider 
immoral or just irresponsible, 

08:34:17.993 --> 08:34:20.616
or use it. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Co

08:34:20.617 --> 08:34:22.617
 mmercializing

08:34:25.333 --> 08:34:26.665
 going against your 
affordability, for example.

08:34:26.666 --> 08:34:29.762
&gt;&gt; ARNON ZAMIR:  We are not 
against commercializing as long 

08:34:29.763 --> 08:34:32.986
as you keep the open files 
available.  So some commercial 

08:34:32.987 --> 08:34:37.527
models can work as open source 
products.  Some of you might 

08:34:37.528 --> 08:34:42.535
know, word press and a semi f 
amous operation system called 

08:34:42.536 --> 08:34:45.458
Android you might have heard of,
 they are all based on open 

08:34:45.459 --> 08:34:50.002
source products, projects, or 
they are open source projects 

08:34:50.003 --> 08:34:52.325
and they are relatively p 
rofitable.  So that's not 

08:34:52.326 --> 08:34:56.340
necessarily a contribution, but 
then again, if someone tries to 

08:34:56.341 --> 08:35:00.653
clone what we are doing and not 
share it with the world at all 

08:35:00.654 --> 08:35:03.993
we will have a problem with t 
hat.  Organization-wise, we had 

08:35:03.994 --> 08:35:09.040
a couple of months ago we had a 
team in Canada, very strong, 

08:35:09.041 --> 08:35:11.041
very

08:35:12.558 --> 08:35:15.792
 enthusiastic about work, 
running a make-a-thon on their 

08:35:15.793 --> 08:35:18.385
own and working on the second 
one and building a ground up 

08:35:18.386 --> 08:35:23.544
operation in a city called 
Calgary on the west coast of 

08:35:23.545 --> 08:35:30.106
Canada.  They went ahead and 
organized an organization called

08:35:30.107 --> 08:35:34.613
  TOM.  And we said, okay, how 
do we do that?  And in case 

08:35:34.614 --> 08:35:40.154
which of you watching the video,
 hi. 

08:35:40.155 --> 08:35:43.353
One approach, the commercial 
approach would be this is our 

08:35:43.354 --> 08:35:45.489
name, you are not going to do 
anything with that.  We are 

08:35:45.490 --> 08:35:49.074
going to protect ourselves 
against this infringement, but 

08:35:49.075 --> 08:35:52.933
then we want the community to 
grow.  So it's a constant d 

08:35:52.934 --> 08:35:55.748
ebate, constant dialogue with 
them understanding the limits 

08:35:55.749 --> 08:35:58.961
and remember that we are very 
young.  We have been doing this 

08:35:58.962 --> 08:36:02.897
for about two years, and there 
is no other organization to look

08:36:03.186 --> 08:36:08.820
 and learn from, almost none.  
So it's a concern balancing and 

08:36:08.821 --> 08:36:12.954
pushing back and forward p 
rocess.  Right now, very 

08:36:12.955 --> 08:36:14.955
challenging, but very

08:36:18.075 --> 08:36:19.866
 s atisfying.
&gt;&gt; Actually also what we learned

08:36:19.867 --> 08:36:24.611
 is that, you know, I have a lot
 of friends who working s 

08:36:24.612 --> 08:36:29.150
tart-outs and they say what is 
the business model, will you put

08:36:29.151 --> 08:36:33.573
 advertising on it?  Do you have
 API and sell it by the thousand

08:36:34.488 --> 08:36:36.908
 maps you surf.  But we are a 
non-profit organization so we 

08:36:36.909 --> 08:36:39.817
will never be millionaires.  We 
are out there to save the world.

08:36:39.818 --> 08:36:43.350
  So what we want to maximize is
 impact.  The more people that 

08:36:43.351 --> 08:36:47.371
use it, the better.  If I put a 
price tag on this, it will 

08:36:47.372 --> 08:36:51.482
hinder my goal, and we will 
potentially not meet as many 

08:36:51.483 --> 08:36:55.139
people.  So our apps are free.  
We want to encourage that data 

08:36:55.140 --> 08:36:59.148
is open and free.  At least it's
 available in an understandable 

08:36:59.149 --> 08:37:02.957
format so that people can 
understand where to find this 

08:37:02.958 --> 08:37:05.768
because once you decide that's 
your goal, you should put all of

08:37:05.985 --> 08:37:08.808
 your effort into that.  What we
 learned along the way working 

08:37:08.809 --> 08:37:12.808
also with organizations like 
Google and other commercial 

08:37:12.809 --> 08:37:17.487
organizations is that they 
appreciate what we do and want 

08:37:17.488 --> 08:37:23.296
to help and they help us do this
 along the way.  So, for 

08:37:23.297 --> 08:37:27.302
example, we are doing a project 
with a German railway system.  

08:37:27.303 --> 08:37:34.257
So the railway corporation, it's
 an organization with 3  300,000

08:37:35.385 --> 08:37:38.207
 employees.  You don't want to 
get stuck at a train station 

08:37:38.208 --> 08:37:40.917
because the elevator is not w 
orking.  So you need real time 

08:37:40.918 --> 08:37:47.055
information on  is an elevator 
working.  We built a project to 

08:37:47.056 --> 08:37:50.893
highlight that but there wasn't 
a good real time API.  So we 

08:37:50.894 --> 08:37:54.407
built something on scraping and 
stealing from their website to 

08:37:54.408 --> 08:37:57.931
show them what we could do, and 
instead of hatetion us, they 

08:37:57.932 --> 08:38:01.464
said, hey, let's talk, how can 
we make this happen.  We don't 

08:38:01.465 --> 08:38:03.473
understand. 
Now, they have a full-fledged 

08:38:03.474 --> 08:38:08.813
open data initiative to open 
make this  happen and they have 

08:38:08.814 --> 08:38:12.920
a realtime API which can be 
included in all travel planning 

08:38:12.921 --> 08:38:16.793
around Germany.  That's our g 
oal.  And actually now we are 

08:38:17.069 --> 08:38:21.267
kind of consulting them and they
 pay us for this.  So that's 

08:38:21.268 --> 08:38:24.515
maybe how good things can happen
 and we maximize our impact.  So

08:38:25.013 --> 08:38:28.946
 if we would charge for that, we
 wouldn't have this liaison, 

08:38:29.646 --> 08:38:32.153
this relationship in the first 
place.  So it's very different 

08:38:32.154 --> 08:38:36.192
from, well, in one area also we 
need to make, we must not go b 

08:38:36.193 --> 08:38:40.104
ankrupt, otherwise we cannot 
save the world, but otherwise we

08:38:40.105 --> 08:38:43.354
 need to trust in our cause.
&gt;&gt; I would like to iterate on 

08:38:43.522 --> 08:38:48.070
both of your points that we 
believe that kind of adoption of

08:38:48.071 --> 08:38:49.959
 the standard directly equals to
 the social impact, and we know 

08:38:49.960 --> 08:38:53.686
that as an organization we can't
 do it all, right.  We need to 

08:38:53.687 --> 08:38:57.806
bring together transport n 
etworks or built environment 

08:38:57.807 --> 08:39:01.769
owner, we immediate to bring 
together charts and vision 

08:39:01.770 --> 08:39:04.166
impaired people.  We need to 
bring together the software and 

08:39:04.167 --> 08:39:07.700
the hardware, guys that work in 
the indoor navigation space.  We

08:39:07.883 --> 08:39:10.205
 need to bring in the 
researchers and universities 

08:39:10.206 --> 08:39:14.614
that are dealing with this and 
so we have created the Wayfindr 

08:39:14.615 --> 08:39:16.948
community where we have a good 
amount of members in there now 

08:39:16.949 --> 08:39:19.772
and we are scaling that up 
because we have now kind of the 

08:39:19.773 --> 08:39:22.702
second part of our standard 
development which we released 

08:39:22.703 --> 08:39:25.276
last week is to now work 
together with these 

08:39:25.277 --> 08:39:29.058
organizations to develop the 
standard together.  So our 

08:39:29.059 --> 08:39:32.056
potential clients or the 
potential people that will 

08:39:32.057 --> 08:39:35.476
increase the adoption are also 
baked into the process of 

08:39:35.477 --> 08:39:38.706
creating the product.  So not 
only are users a part of the 

08:39:38.707 --> 08:39:41.753
process, our customers are part 
of the process to send that out 

08:39:41.754 --> 08:39:44.539
and develop our product.  So we 
know we are making something 

08:39:44.540 --> 08:39:47.059
that's useable and somebody n 
eeds rather than something 

08:39:47.060 --> 08:39:50.493
that's a pure guess.  That's why
 it's important to have these 

08:39:50.494 --> 08:39:54.017
people really close and work 
alongside you in a collaborative

08:39:56.240 --> 08:39:56.521
 manner. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  I 

08:39:56.522 --> 08:40:01.677
feel like you guys are making it
 easy to save the world, which 

08:40:01.678 --> 08:40:05.062
is great, because we would love 
to have more people working on t

08:40:05.063 --> 08:40:08.308
 his, but I know it's pretty 
hard and is that you all have 

08:40:08.309 --> 08:40:11.823
had a bunch of challenges that 
you are experiencing all of the 

08:40:11.824 --> 08:40:14.853
time.  And I think some of these
 are parts of those, but I would

08:40:15.054 --> 08:40:18.162
 love to hear a couple of 
stories about some of the hard 

08:40:18.163 --> 08:40:21.804
part of this, what has been a 
really challenging problem you 

08:40:21.805 --> 08:40:24.321
have encountered and how you 
have sort of worked through that

08:40:24.795 --> 08:40:27.236
 or the craziest day at work you
 had or something like

08:40:31.572 --> 08:40:33.673
 that. 
&gt;&gt; GINNY GRANT:  I can do one.  

08:40:33.674 --> 08:40:36.988
There are many crazy days at 
work but that's why we do it.  

08:40:36.989 --> 08:40:44.628
We love it.  When book share  
started there was a concern or 

08:40:44.629 --> 08:40:48.881
threat felt by the publishing 
industry that we were stealing 

08:40:48.882 --> 08:40:50.882
intellectual property.  If you 
think about the shared music 

08:40:51.271 --> 08:40:57.512
services that there were for a 
while, but Benetech is clear on 

08:40:57.513 --> 08:41:00.433
digital rights management and 
policies so we have had to step 

08:41:00.434 --> 08:41:05.991
up our game there and prove that
 we are not trying to share 

08:41:05.992 --> 08:41:07.992
intellectual property.  The 
other thing we have done is we 

08:41:08.000 --> 08:41:12.540
have worked with the publishing 
industry to produce standards 

08:41:12.541 --> 08:41:16.442
that they will then in turn 
start to build out all of the 

08:41:16.443 --> 08:41:19.392
books and magazines and 
literature that with the 

08:41:21.081 --> 08:41:23.339
standards that will allow, 
enable everybody to 

08:41:27.207 --> 08:41:29.746
use them, accessible, accessible
 for all.  So I think it was a 

08:41:29.747 --> 08:41:32.976
huge challenge at the beginning 
and we now have publishers 

08:41:32.977 --> 08:41:37.601
coming to us saying how can we 
get into your group and teach us

08:41:37.696 --> 08:41:40.801
 how to make the books that we 
make more accessible.  So that 

08:41:40.927 --> 08:41:45.539
has been a huge switch, again, 
needle moving. 

08:41:45.646 --> 08:41:47.800
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Do
 you want to add. 

08:41:47.801 --> 08:41:50.990
&gt;&gt; UMESH PANDYA:  We move daily 
between kind of granular to high

08:41:51.293 --> 08:41:54.113
 level.  What I mean by that is 
how we develop the product, what

08:41:54.410 --> 08:41:58.246
 the process is, what the 
upcombraids we are going to d o 

08:41:58.653 --> 08:42:04.572
-- upgrades, to the bigger, how 
are we going to change policy in

08:42:04.988 --> 08:42:09.007
 London.  How do you deal with 
that when you are flipping 

08:42:09.008 --> 08:42:12.115
between these two things and 
it's hard because when you are 

08:42:12.116 --> 08:42:15.857
used to making digital products 
which you can evolve overnight 

08:42:15.858 --> 08:42:19.499
or every hour and then you are 
working with a system that 

08:42:19.500 --> 08:42:21.500
changes over years, how do you 
insure that you are going to be 

08:42:22.609 --> 08:42:24.895
still alive to see the fruits of
 your labor, and see whether 

08:42:24.896 --> 08:42:29.537
it's actually delivered an 
impact.  So these are the things

08:42:29.845 --> 08:42:32.976
 that bounce around in our minds
 which is are we using our time 

08:42:32.977 --> 08:42:35.703
efficiently and where do we push
 our e fforts.  Before when we 

08:42:35.982 --> 08:42:39.099
would work for clients and 
products it's like are we going 

08:42:39.100 --> 08:42:43.258
to push the pixels around and 
make it nice but when it becomes

08:42:43.459 --> 08:42:47.865
 about delivering this change, 
it's that some of it can stay 

08:42:47.866 --> 08:42:51.896
there, don't worry about that.  
We need need to deliver this 

08:42:51.897 --> 08:42:55.635
because this is the impact we 
need to deliver.  So it's a flip

08:42:55.838 --> 08:42:58.931
 for us. 
&gt;&gt; HOLGER DIETERICH:  Small 

08:42:58.932 --> 08:43:01.851
thing I can tell you, maybe you 
as developers can relate to, 

08:43:01.852 --> 08:43:05.992
it's like  being a charity is 
not an excuse for bad quality.  

08:43:05.993 --> 08:43:08.826
We, for example, we didn't have 
a lot of testing and we were 

08:43:08.827 --> 08:43:11.421
learning along the way and in 
the beginning when you didn't 

08:43:11.422 --> 08:43:15.159
allow location and you opened 
the app you were getting weird 

08:43:15.245 --> 08:43:18.688
error messages like something is
 not working and you have to 

08:43:18.689 --> 08:43:21.788
click it five times to get rid 
of it.  And then you lose 

08:43:21.789 --> 08:43:23.124
interest or something like that.

08:43:23.125 --> 08:43:25.320
So we didn't notice that 
somebody would do this because 

08:43:25.321 --> 08:43:28.344
we didn't think of it, and we 
are stupid maybe, but we 

08:43:28.345 --> 08:43:31.602
immediately got like one star 
reviews on the app store for 

08:43:31.603 --> 08:43:35.596
free app run by a charity on 
donor's money and we are like, 

08:43:35.597 --> 08:43:38.326
what?  We are putting our heart 
into this and you are still like

08:43:38.825 --> 08:43:42.943
 immediately one star, one star.
  So but actually it's also good

08:43:43.136 --> 08:43:47.575
 because it proves a point that 
they deserve good quality, and 

08:43:47.576 --> 08:43:51.497
that we must deliver this as 
well, and we are just considered

08:43:51.797 --> 08:43:55.625
 another app is actually an 
achievement, it's not like it's 

08:43:55.626 --> 08:44:00.267
kind of crappy, but as charity. 
 It's not anymore.  It has to be

08:44:00.560 --> 08:44:04.895
 well designed and we worked a 
long time on doing this, and you

08:44:05.096 --> 08:44:09.391
 don't have to have location 
enabled all of the time. 

08:44:09.392 --> 08:44:10.328
&gt;&gt; BRIGITTE HOYER GOSSELINK:  We
 have this myth a little bit 

08:44:10.329 --> 08:44:13.761
that products that are done 
through non-profits can be, you 

08:44:13.762 --> 08:44:17.174
know, fine but not great, or 
that d oing this work is 

08:44:17.175 --> 08:44:20.485
actually easier than harder.  I 
think it's both.  It's fun and 

08:44:20.486 --> 08:44:24.545
you get inspired by it, but 
there is also I lot of hard 

08:44:25.039 --> 08:44:27.456
challenges.  I would love for 
you all who have made this move 

08:44:27.457 --> 08:44:32.181
from being technologists in 
maybe a more mainstream 

08:44:32.182 --> 08:44:35.096
environment for using the 
technical skims for good.  

08:44:35.097 --> 08:44:40.429
Inspire people to do the same 
who are listening to you all 

08:44:40.430 --> 08:44:42.950
speak.  Arnon Zamir this is what
 you do every day so I will turn

08:44:42.951 --> 08:44:45.265
 to you to start. 
&gt;&gt; ARNON ZAMIR:  Yes, this is 

08:44:45.266 --> 08:44:49.288
what we do every day, and we 
have a very simple strategic 

08:44:50.113 --> 08:44:55.546
approach, which is do and do n 
ow.  We are very open for 

08:44:55.547 --> 08:44:58.967
technologists and half 
technologists and sometimes n 

08:44:58.968 --> 08:45:05.083
on-technologists to join us and 
participate in a development of 

08:45:05.084 --> 08:45:10.733
some feature in a product.  And 
as a person which is partially 

08:45:10.734 --> 08:45:18.175
our inspiration, John shool from
 enable says a prosthetic arm 

08:45:18.176 --> 08:45:22.904
needs to be diminishingly better
 than nothing.  We are good at 

08:45:22.905 --> 08:45:27.432
bringing together people to 
develop solutions that are 

08:45:27.433 --> 08:45:29.941
diminishingly better than 
nothing and then very, very 

08:45:29.942 --> 08:45:31.942
better than

08:45:33.652 --> 08:45:37.601
 nothing.  And you are all 
invited to join because you 

08:45:37.602 --> 08:45:40.421
don't need to change everything.
  We are not asking people to 

08:45:40.422 --> 08:45:43.938
stop what they are d oing and 
start doing just work for 

08:45:43.939 --> 08:45:47.343
society.  We are asking people 
to donate either three days in 

08:45:47.344 --> 08:45:51.592
the year or three hours in the 
week, and we have a n on-written

08:45:51.782 --> 08:45:54.207
 agreement with them.  You give 
us your time and we will make 

08:45:54.208 --> 08:45:57.829
sure it's dedicated to something
 very good, which is many times 

08:45:57.830 --> 08:46:01.053
going to sustain and move 
forward and grow and change 

08:46:01.054 --> 08:46:05.363
somebody's life.  And the world 
is full with opportunities to do

08:46:05.788 --> 08:46:11.216
 good things and to marvel in 
them, and I'm very happy to 

08:46:11.217 --> 08:46:16.437
engage everyone online and 
offline in activity.  I want 

08:46:16.438 --> 08:46:21.479
tell a very short story about a 
product that you can see in our 

08:46:21.480 --> 08:46:22.575
booth here. 
&gt;&gt; BRIGITTE HOYER GOSSELINK:  In

08:46:22.576 --> 08:46:26.811
 the access and onlipathy sand 
box. 

08:46:26.812 --> 08:46:29.528
&gt;&gt; ARNON ZAMIR:  There is a 
product called the grabber.  It 

08:46:29.529 --> 08:46:32.868
looks like a bear of clamps with
 a mouth operated thingy at the 

08:46:32.869 --> 08:46:40.008
end of the it was created with a
 friend named Kim from northern 

08:46:40.009 --> 08:46:43.522
California.  She was born 
unfortunately with no limbs and 

08:46:43.523 --> 08:46:46.631
 she had some difficulties 
reaching things that are far 

08:46:46.632 --> 08:46:51.894
from her side, from her reach by
 her mouth and it was created 

08:46:51.895 --> 08:46:55.413
act life to her measurement, to 
her need and relatively 

08:46:55.414 --> 08:46:58.323
successful.  About a week ago, I
 got this video of

08:47:01.369 --> 08:47:05.467
 what's app showing the same 
instrument transferred into 

08:47:05.468 --> 08:47:09.492
something new, forked like a 
software open source software 

08:47:09.493 --> 08:47:15.238
can be forked.  The guys took it
 and on the clamps they put the 

08:47:15.239 --> 08:47:18.802
hands of a doll and head of a 
doll and two bells at the end.  

08:47:18.959 --> 08:47:25.103
And now it is clapping doll that
 is used for a parent which is 

08:47:25.104 --> 08:47:30.145
disabled from the neck down to 
play with his 4-year-old 

08:47:30.146 --> 08:47:34.476
daughter.  He is holding it and 
he can clap the hands which he 

08:47:34.477 --> 08:47:36.477
couldn't before.  Same m 
echanism, different 

08:47:36.478 --> 08:47:41.312
interpretation.  We could never 
have gotten to this without open

08:47:41.505 --> 08:47:43.836
 source accessibility and 
without the community being so 

08:47:43.837 --> 08:47:51.188
daring and doing stuff we are 
never thinking of.  So join us. 

08:47:51.189 --> 08:47:56.203
&gt;&gt; BRIGITTE HOYER GOSSELINK:  Gi
 nny what advice  do you have? 

08:47:56.204 --> 08:47:58.409
&gt;&gt; GINNY GRANT:  Besides making 
sure anything you build can be 

08:47:58.410 --> 08:48:02.737
used with a single oven mitt or 
turn off your monitor and your 

08:48:02.738 --> 08:48:05.258
volume to make sure that anyone 
and everyone can use whatever 

08:48:05.259 --> 08:48:07.799
you are building which will be 
great quality.  Of course, there

08:48:07.800 --> 08:48:13.845
 is always applying to Benetech.
  We have multiple jobs open.  

08:48:13.846 --> 08:48:17.038
But I would say build out your 
ecosystem.  Get to know people 

08:48:17.039 --> 08:48:19.456
who care about this and demand 
accessibility

08:48:23.299 --> 08:48:23.890
 everywhere. 
&gt;&gt; HOLGER DIETERICH:  What we 

08:48:23.891 --> 08:48:26.499
learn is if you want to do 
something and support a n 

08:48:26.500 --> 08:48:29.814
on-profit organization like o 
urs or like the others, 

08:48:30.635 --> 08:48:34.062
question, empathy is fine but 
what we do need is your 

08:48:34.063 --> 08:48:37.069
expertise.  One idea is in the 
beginning we had on our website,

08:48:37.333 --> 08:48:40.110
 you want to become a hero, help
 us, something like that.  

08:48:40.111 --> 08:48:43.115
Contact us.  So we got random 
people wanting to volunteer.  We

08:48:43.616 --> 08:48:47.259
 changed it completely.  We said
 we need a JavaScript fronted 

08:48:47.260 --> 08:48:51.967
expert in design like three 
months unpaid one day per week 

08:48:51.968 --> 08:48:55.596
for a non-profit organization as
 a volunteer work.  So we are 

08:48:55.597 --> 08:48:58.415
blunt and up front about this 
and we got something like 

08:48:58.416 --> 08:49:03.773
applications from really cool 
people we hired later.  Because 

08:49:03.774 --> 08:49:06.891
it was sometimes the first 
moment when they could say, hey,

08:49:07.592 --> 08:49:10.998
 I can play with this cool 
framework for the first time and

08:49:11.416 --> 08:49:16.657
 have an impact.  One  story is 
that the first was built by the 

08:49:16.658 --> 08:49:20.075
users that were hating that we 
were only an iOS.  And we said, 

08:49:20.076 --> 08:49:23.286
well, we don't have the means to
 pay somebody to do this, and 

08:49:23.287 --> 08:49:26.830
they said I can bring you 
together.  And actually three 

08:49:26.831 --> 08:49:29.237
people came together to build 
this remotely and one actually 

08:49:29.238 --> 08:49:32.847
quit his day job and became a 
freelance end developer 

08:49:32.848 --> 08:49:36.171
afterward because he had this 
reference of a successful app 

08:49:36.172 --> 08:49:40.012
with a worldwide impact, and 
building things like we 

08:49:40.013 --> 08:49:42.835
completely trusted this person 
because there was nothing what 

08:49:42.836 --> 08:49:46.648
can go wrong?  We have a back 
end.  We have an API.  Cool 

08:49:46.649 --> 08:49:50.361
things can be built, and I 
though this is like where you 

08:49:50.362 --> 08:49:52.693
should come from.  I'm 
interested in this framework and

08:49:53.096 --> 08:49:57.025
 new technology.  I always 
wanted to try this and that out 

08:49:57.026 --> 08:50:01.045
so there are places where you 
can Google or where you can 

08:50:01.046 --> 08:50:09.516
search for like  charities by 
the programs language, for 

08:50:09.517 --> 08:50:13.422
example.  On github we have all 
of our source code and we have 

08:50:13.423 --> 08:50:18.767
issues that have mentored so 
that we can bring new 

08:50:18.768 --> 08:50:21.259
contributors on board and not 
say check out the whole thing 

08:50:21.260 --> 08:50:24.078
and you can figure it out.  
Start with something that's easy

08:50:24.188 --> 08:50:28.425
 and if it it's fun, do more.  
As soon as you contribute and 

08:50:28.426 --> 08:50:30.928
submit a request, and then we 
will look at it and merge it and

08:50:31.049 --> 08:50:33.818
 maybe you do more.  So think of
 what you like to work on, 

08:50:35.058 --> 08:50:38.738
what's fun for you, and then, I 
 think, the collaboration will 

08:50:40.856 --> 08:50:41.487
work well. 
&gt;&gt; UMESH PANDYA:  I think it's 

08:50:41.488 --> 08:50:44.342
going to be quite immediate.  
I'm assuming that most of you 

08:50:44.343 --> 08:50:49.677
are developers.  I have done 
this before.  It might get you 

08:50:49.678 --> 08:50:54.909
neared   fired or it may not get
 you fired.  You are the guys 

08:50:54.910 --> 08:50:58.939
that implement the code.  Now, 
implement and accessibility into

08:50:58.940 --> 08:51:02.945
 it is not a hard effort, so 
start rogue.  Just, your client 

08:51:02.946 --> 08:51:07.408
gives you a project, start 
implementing it in there.  We 

08:51:07.409 --> 08:51:09.488
have done it before.  You can go
 to your client and say I would 

08:51:10.402 --> 08:51:13.018
like, 70% of your app is 
accessible, do you want to make 

08:51:13.019 --> 08:51:15.741
the rest accessible.  I have 
seen that many times before so I

08:51:15.954 --> 08:51:18.970
 would recommend you do that 
immediately.  From a Wayfindr 

08:51:18.971 --> 08:51:22.087
point of view we are open 
standard so we want you guys to 

08:51:22.088 --> 08:51:25.727
come along and if you can, 
contribute towards it, if you 

08:51:25.728 --> 08:51:28.549
can, share and we would love 
your feedback and this is how we

08:51:28.815 --> 08:51:36.066
 want to grow so hit yourself at
 way finder.net/standard and we 

08:51:36.067 --> 08:51:38.192
would love to hear your f 
eedback. 

08:51:38.193 --> 08:51:40.316
&gt;&gt; BRIGITTE HOYER GOSSELINK:  On
 e of my favorite parts of my 

08:51:40.317 --> 08:51:44.935
job is I have the privilege to 
meet passionate people who are w

08:51:44.936 --> 08:51:48.108
 orking to use technology for 
social good so I'm glad to have 

08:51:48.359 --> 08:51:50.669
been able to share that 
privilege with you today.  

