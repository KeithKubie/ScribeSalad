WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:04.270
So far the machines we've made
in our reductions ie the ends,

00:00:04.270 --> 00:00:06.640
have been relatively uncomplicated.

00:00:06.640 --> 00:00:11.180
They all either accepted every string or
they accepted no strings.

00:00:11.180 --> 00:00:14.220
Unfortunately, reductions
can't always be done that way.

00:00:14.220 --> 00:00:18.170
Since the machine that always loops and
the machine that always accepts.

00:00:18.170 --> 00:00:22.710
Might both be in or might not be
in the language we're reducing to.

00:00:22.710 --> 00:00:27.500
In these cases,
we need N to pay attention to its input.

00:00:27.500 --> 00:00:29.330
Here's an example were
we will need to do this.

00:00:29.330 --> 00:00:32.295
The language of descriptions
of Turing machines,

00:00:32.295 --> 00:00:35.015
where the Turing machine
accepts exactly one string.

00:00:35.015 --> 00:00:37.645
It doesn't make much
of a difference which

00:00:37.645 --> 00:00:39.845
undecidable language we reduce from.

00:00:39.845 --> 00:00:40.605
So this time,

00:00:40.605 --> 00:00:46.580
we'll reduce from the halting problem
to this single acceptance language.

00:00:46.580 --> 00:00:48.730
Again, there are many
possible reductions.

00:00:48.730 --> 00:00:50.090
I like this one.

00:00:50.090 --> 00:00:53.220
We run the input machine
M on the empty string.

00:00:53.220 --> 00:00:55.060
If M loops, then so will N.

00:00:56.130 --> 00:00:58.320
We don't accept one string,
we accept none.

00:00:59.520 --> 00:01:03.210
On the other hand,
if M does halt on the empty string,

00:01:03.210 --> 00:01:07.710
then we make N act like
a machine in this language, S.

00:01:07.710 --> 00:01:11.820
We'll have it just accept the empty
string, my favorite string.

00:01:11.820 --> 00:01:15.620
This works because if M
loops on the empty string

00:01:15.620 --> 00:01:19.590
than N will loop on every input and
hence accept nothing.

00:01:19.590 --> 00:01:22.085
On the other hand,
if M does halt on the empty string,

00:01:22.085 --> 00:01:27.020
then N will accept exactly one string,
the empty string.

00:01:27.020 --> 00:01:30.830
Once again, in one case,
the language of N is the empty set.

00:01:30.830 --> 00:01:35.730
In the other case,
the language of N is the empty string.

00:01:35.730 --> 00:01:38.620
A decider for
the language S can tell the difference.

00:01:38.620 --> 00:01:42.770
And therefore, would be able to decide
if M halted on the empty string or not.

00:01:43.830 --> 00:01:46.330
Since this is impossible, a decider for

00:01:46.330 --> 00:01:49.270
this single acceptance
language cannot exist.

