WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
Here's my solution.

00:00:02.000 --> 00:00:05.000
The key to my solution is a list of deltas,

00:00:05.000 --> 00:00:11.000
of differences in the states that correspond to these moves. What do I mean by that?

00:00:11.000 --> 00:00:17.000
One thing we can do is send two missionaries from a side with the boat to the other side.

00:00:17.000 --> 00:00:19.000
That would be a difference of 2 in the missionaries.

00:00:19.000 --> 00:00:24.000
We would add 2 to one side and subtract 2 from the other side

00:00:24.000 --> 00:00:27.000
and not change at all the number of cannibals

00:00:27.000 --> 00:00:30.000
and change the number of boats by 1.

00:00:30.000 --> 00:00:34.000
Or we could send 2 cannibals, or we could send one of each,

00:00:34.000 --> 00:00:37.000
or we could send only 1 missionary or cannibal.

00:00:37.000 --> 00:00:41.000
There are 5 possible moves, basically, depending on where the boat is.

00:00:41.000 --> 00:00:43.000
That's what csuccessors says.

00:00:43.000 --> 00:00:45.000
First we check for states with no successors.

00:00:45.000 --> 00:00:49.000
If there are more cannibals than missionaries but there are some missionaries,

00:00:49.000 --> 00:00:53.000
then they're going to get eaten, and so we return the empty dictionary as a result.

00:00:53.000 --> 00:00:57.000
Otherwise, we're going to collect up the number of items in our dictionary,

00:00:57.000 --> 00:01:01.000
and we're going to do that by going through these deltas

00:01:01.000 --> 00:01:05.000
and subtracting the deltas from the side where the boat is

00:01:05.000 --> 00:01:08.000
and adding them in to the other side.

00:01:08.000 --> 00:01:13.000
We have two directions we can go from left to right, start to the other side,

00:01:13.000 --> 00:01:17.000
or from the other side back to the original side.

00:01:17.000 --> 00:01:21.000
I made use here of vector addition and subtraction.

00:01:21.000 --> 00:01:27.000
I take the current state, which is 6 numbers, and I add or subtract these deltas.

00:01:27.000 --> 00:01:29.000
That's what these definitions say.

00:01:29.000 --> 00:01:33.000
Now, it would nice if this type of vector arithmetic was built into Python,

00:01:33.000 --> 00:01:37.000
and there are versions called "numeric Python" where you can do that,

00:01:37.000 --> 09:59:59.000
but here I had to write these functions myself.

