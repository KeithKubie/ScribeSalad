WEBVTT
Kind: captions
Language: en

00:00:01.370 --> 00:00:04.430
by now everyone knows that apk size is

00:00:04.430 --> 00:00:04.440
by now everyone knows that apk size is
 

00:00:04.440 --> 00:00:05.900
by now everyone knows that apk size is
an important factor when it comes to

00:00:05.900 --> 00:00:05.910
an important factor when it comes to
 

00:00:05.910 --> 00:00:07.760
an important factor when it comes to
user acquisition I mean who wants to

00:00:07.760 --> 00:00:07.770
user acquisition I mean who wants to
 

00:00:07.770 --> 00:00:09.680
user acquisition I mean who wants to
wait 30 minutes to download some massive

00:00:09.680 --> 00:00:09.690
wait 30 minutes to download some massive
 

00:00:09.690 --> 00:00:11.900
wait 30 minutes to download some massive
app on a 2g connection or pay the high

00:00:11.900 --> 00:00:11.910
app on a 2g connection or pay the high
 

00:00:11.910 --> 00:00:13.970
app on a 2g connection or pay the high
data rates required to download that app

00:00:13.970 --> 00:00:13.980
data rates required to download that app
 

00:00:13.980 --> 00:00:15.890
data rates required to download that app
on a metered network my name is Colt

00:00:15.890 --> 00:00:15.900
on a metered network my name is Colt
 

00:00:15.900 --> 00:00:17.630
on a metered network my name is Colt
McAnlis and to keep your app from being

00:00:17.630 --> 00:00:17.640
McAnlis and to keep your app from being
 

00:00:17.640 --> 00:00:19.160
McAnlis and to keep your app from being
one of those data hogs there's some

00:00:19.160 --> 00:00:19.170
one of those data hogs there's some
 

00:00:19.170 --> 00:00:20.689
one of those data hogs there's some
important tools and tricks that you

00:00:20.689 --> 00:00:20.699
important tools and tricks that you
 

00:00:20.699 --> 00:00:22.250
important tools and tricks that you
should keep up your sleeve at the

00:00:22.250 --> 00:00:22.260
should keep up your sleeve at the
 

00:00:22.260 --> 00:00:24.200
should keep up your sleeve at the
corridor reducing apk size comes the

00:00:24.200 --> 00:00:24.210
corridor reducing apk size comes the
 

00:00:24.210 --> 00:00:25.640
corridor reducing apk size comes the
understanding that bloat usually comes

00:00:25.640 --> 00:00:25.650
understanding that bloat usually comes
 

00:00:25.650 --> 00:00:27.980
understanding that bloat usually comes
from two key factors resources and code

00:00:27.980 --> 00:00:27.990
from two key factors resources and code
 

00:00:27.990 --> 00:00:29.900
from two key factors resources and code
and since resources can often account

00:00:29.900 --> 00:00:29.910
and since resources can often account
 

00:00:29.910 --> 00:00:31.580
and since resources can often account
for the largest bloat and is the easiest

00:00:31.580 --> 00:00:31.590
for the largest bloat and is the easiest
 

00:00:31.590 --> 00:00:33.889
for the largest bloat and is the easiest
to fix we're gonna start there the first

00:00:33.889 --> 00:00:33.899
to fix we're gonna start there the first
 

00:00:33.899 --> 00:00:35.360
to fix we're gonna start there the first
and most important thing you need to do

00:00:35.360 --> 00:00:35.370
and most important thing you need to do
 

00:00:35.370 --> 00:00:37.130
and most important thing you need to do
is make sure that you're properly using

00:00:37.130 --> 00:00:37.140
is make sure that you're properly using
 

00:00:37.140 --> 00:00:39.650
is make sure that you're properly using
the remove unused resources flag in your

00:00:39.650 --> 00:00:39.660
the remove unused resources flag in your
 

00:00:39.660 --> 00:00:41.930
the remove unused resources flag in your
Gradle files this flag will remove any

00:00:41.930 --> 00:00:41.940
Gradle files this flag will remove any
 

00:00:41.940 --> 00:00:43.670
Gradle files this flag will remove any
content that's not being used by your

00:00:43.670 --> 00:00:43.680
content that's not being used by your
 

00:00:43.680 --> 00:00:45.319
content that's not being used by your
application this includes anything that

00:00:45.319 --> 00:00:45.329
application this includes anything that
 

00:00:45.329 --> 00:00:46.610
application this includes anything that
you've forgotten to prune from your tree

00:00:46.610 --> 00:00:46.620
you've forgotten to prune from your tree
 

00:00:46.620 --> 00:00:48.650
you've forgotten to prune from your tree
and resources that have been included in

00:00:48.650 --> 00:00:48.660
and resources that have been included in
 

00:00:48.660 --> 00:00:50.540
and resources that have been included in
third-party libraries but your app

00:00:50.540 --> 00:00:50.550
third-party libraries but your app
 

00:00:50.550 --> 00:00:53.479
third-party libraries but your app
doesn't use secondly most resource bloat

00:00:53.479 --> 00:00:53.489
doesn't use secondly most resource bloat
 

00:00:53.489 --> 00:00:54.830
doesn't use secondly most resource bloat
comes from supporting multiple

00:00:54.830 --> 00:00:54.840
comes from supporting multiple
 

00:00:54.840 --> 00:00:57.650
comes from supporting multiple
resolutions in screen densities for your

00:00:57.650 --> 00:00:57.660
resolutions in screen densities for your
 

00:00:57.660 --> 00:01:00.080
resolutions in screen densities for your
app I mean as of Android 4.4 the

00:01:00.080 --> 00:01:00.090
app I mean as of Android 4.4 the
 

00:01:00.090 --> 00:01:05.080
app I mean as of Android 4.4 the
framework supports ldpi mdpi TV DPI hdpi

00:01:05.080 --> 00:01:05.090
framework supports ldpi mdpi TV DPI hdpi
 

00:01:05.090 --> 00:01:10.429
framework supports ldpi mdpi TV DPI hdpi
xhdpi xxhdpi and XXX hdpi but let's be

00:01:10.429 --> 00:01:10.439
xhdpi xxhdpi and XXX hdpi but let's be
 

00:01:10.439 --> 00:01:12.350
xhdpi xxhdpi and XXX hdpi but let's be
clear just because you can support all

00:01:12.350 --> 00:01:12.360
clear just because you can support all
 

00:01:12.360 --> 00:01:14.210
clear just because you can support all
these densities doesn't mean you should

00:01:14.210 --> 00:01:14.220
these densities doesn't mean you should
 

00:01:14.220 --> 00:01:15.950
these densities doesn't mean you should
have copies of your assets for each one

00:01:15.950 --> 00:01:15.960
have copies of your assets for each one
 

00:01:15.960 --> 00:01:17.870
have copies of your assets for each one
of them see if you don't have resources

00:01:17.870 --> 00:01:17.880
of them see if you don't have resources
 

00:01:17.880 --> 00:01:20.330
of them see if you don't have resources
for a specific resolution the framework

00:01:20.330 --> 00:01:20.340
for a specific resolution the framework
 

00:01:20.340 --> 00:01:22.609
for a specific resolution the framework
will rescale an existing resource to fit

00:01:22.609 --> 00:01:22.619
will rescale an existing resource to fit
 

00:01:22.619 --> 00:01:24.469
will rescale an existing resource to fit
the bill for you so if there is no

00:01:24.469 --> 00:01:24.479
the bill for you so if there is no
 

00:01:24.479 --> 00:01:25.760
the bill for you so if there is no
noticeable difference between the

00:01:25.760 --> 00:01:25.770
noticeable difference between the
 

00:01:25.770 --> 00:01:28.039
noticeable difference between the
resource you're scaling by hand and the

00:01:28.039 --> 00:01:28.049
resource you're scaling by hand and the
 

00:01:28.049 --> 00:01:30.200
resource you're scaling by hand and the
framework resized one you can toss your

00:01:30.200 --> 00:01:30.210
framework resized one you can toss your
 

00:01:30.210 --> 00:01:31.969
framework resized one you can toss your
custom one out the result is a much

00:01:31.969 --> 00:01:31.979
custom one out the result is a much
 

00:01:31.979 --> 00:01:34.160
custom one out the result is a much
leaner apk that has only the resources

00:01:34.160 --> 00:01:34.170
leaner apk that has only the resources
 

00:01:34.170 --> 00:01:37.550
leaner apk that has only the resources
it needs for distribution thirdly we all

00:01:37.550 --> 00:01:37.560
it needs for distribution thirdly we all
 

00:01:37.560 --> 00:01:38.960
it needs for distribution thirdly we all
know that images account for the largest

00:01:38.960 --> 00:01:38.970
know that images account for the largest
 

00:01:38.970 --> 00:01:41.810
know that images account for the largest
footprints so for icons or other small

00:01:41.810 --> 00:01:41.820
footprints so for icons or other small
 

00:01:41.820 --> 00:01:43.639
footprints so for icons or other small
simple graphics in your app you might

00:01:43.639 --> 00:01:43.649
simple graphics in your app you might
 

00:01:43.649 --> 00:01:45.410
simple graphics in your app you might
want to take a look at vector drawables

00:01:45.410 --> 00:01:45.420
want to take a look at vector drawables
 

00:01:45.420 --> 00:01:48.050
want to take a look at vector drawables
instead of PNG s or JPEGs these are

00:01:48.050 --> 00:01:48.060
instead of PNG s or JPEGs these are
 

00:01:48.060 --> 00:01:49.639
instead of PNG s or JPEGs these are
assets that describe the shape of your

00:01:49.639 --> 00:01:49.649
assets that describe the shape of your
 

00:01:49.649 --> 00:01:51.920
assets that describe the shape of your
graphic using XML instead of just raw

00:01:51.920 --> 00:01:51.930
graphic using XML instead of just raw
 

00:01:51.930 --> 00:01:53.719
graphic using XML instead of just raw
pixels the result is that instead of

00:01:53.719 --> 00:01:53.729
pixels the result is that instead of
 

00:01:53.729 --> 00:01:55.130
pixels the result is that instead of
keeping around one version of your

00:01:55.130 --> 00:01:55.140
keeping around one version of your
 

00:01:55.140 --> 00:01:56.840
keeping around one version of your
drawable for each supported resolution

00:01:56.840 --> 00:01:56.850
drawable for each supported resolution
 

00:01:56.850 --> 00:01:59.630
drawable for each supported resolution
you instead can use one file and it'll

00:01:59.630 --> 00:01:59.640
you instead can use one file and it'll
 

00:01:59.640 --> 00:02:02.030
you instead can use one file and it'll
generate the resolution you need at load

00:02:02.030 --> 00:02:02.040
generate the resolution you need at load
 

00:02:02.040 --> 00:02:04.910
generate the resolution you need at load
time fourthly try to reuse resources

00:02:04.910 --> 00:02:04.920
time fourthly try to reuse resources
 

00:02:04.920 --> 00:02:06.980
time fourthly try to reuse resources
wherever possible Android provides

00:02:06.980 --> 00:02:06.990
wherever possible Android provides
 

00:02:06.990 --> 00:02:09.229
wherever possible Android provides
several utilities to modify an existing

00:02:09.229 --> 00:02:09.239
several utilities to modify an existing
 

00:02:09.239 --> 00:02:11.869
several utilities to modify an existing
asset in layout code which could you

00:02:11.869 --> 00:02:11.879
asset in layout code which could you
 

00:02:11.879 --> 00:02:13.130
asset in layout code which could you
could use to get the look you

00:02:13.130 --> 00:02:13.140
could use to get the look you
 

00:02:13.140 --> 00:02:15.170
could use to get the look you
without having to include a whole new

00:02:15.170 --> 00:02:15.180
without having to include a whole new
 

00:02:15.180 --> 00:02:17.180
without having to include a whole new
unique image for example let's say

00:02:17.180 --> 00:02:17.190
unique image for example let's say
 

00:02:17.190 --> 00:02:18.559
unique image for example let's say
you've got two images that are just

00:02:18.559 --> 00:02:18.569
you've got two images that are just
 

00:02:18.569 --> 00:02:20.540
you've got two images that are just
rotations of each other you could get

00:02:20.540 --> 00:02:20.550
rotations of each other you could get
 

00:02:20.550 --> 00:02:22.699
rotations of each other you could get
rid of one by just creating a rotate

00:02:22.699 --> 00:02:22.709
rid of one by just creating a rotate
 

00:02:22.709 --> 00:02:25.820
rid of one by just creating a rotate
drawable to create the other now while

00:02:25.820 --> 00:02:25.830
drawable to create the other now while
 

00:02:25.830 --> 00:02:27.980
drawable to create the other now while
these may sound like small changes they

00:02:27.980 --> 00:02:27.990
these may sound like small changes they
 

00:02:27.990 --> 00:02:30.080
these may sound like small changes they
can yield a significant savings for your

00:02:30.080 --> 00:02:30.090
can yield a significant savings for your
 

00:02:30.090 --> 00:02:32.330
can yield a significant savings for your
apk for example the android framework

00:02:32.330 --> 00:02:32.340
apk for example the android framework
 

00:02:32.340 --> 00:02:34.880
apk for example the android framework
team was able to use color tint support

00:02:34.880 --> 00:02:34.890
team was able to use color tint support
 

00:02:34.890 --> 00:02:37.310
team was able to use color tint support
then go and replace nine patches with

00:02:37.310 --> 00:02:37.320
then go and replace nine patches with
 

00:02:37.320 --> 00:02:39.140
then go and replace nine patches with
xml shapes and then replace bit naps

00:02:39.140 --> 00:02:39.150
xml shapes and then replace bit naps
 

00:02:39.150 --> 00:02:41.600
xml shapes and then replace bit naps
with vector drawables the result their

00:02:41.600 --> 00:02:41.610
with vector drawables the result their
 

00:02:41.610 --> 00:02:45.830
with vector drawables the result their
apk drawable count shrunk by 80% now

00:02:45.830 --> 00:02:45.840
apk drawable count shrunk by 80% now
 

00:02:45.840 --> 00:02:47.210
apk drawable count shrunk by 80% now
once you get your assets in a smooth

00:02:47.210 --> 00:02:47.220
once you get your assets in a smooth
 

00:02:47.220 --> 00:02:49.190
once you get your assets in a smooth
state it's now time to make sure that

00:02:49.190 --> 00:02:49.200
state it's now time to make sure that
 

00:02:49.200 --> 00:02:51.740
state it's now time to make sure that
your code is as slim as possible see

00:02:51.740 --> 00:02:51.750
your code is as slim as possible see
 

00:02:51.750 --> 00:02:53.449
your code is as slim as possible see
even though code bloat is not as

00:02:53.449 --> 00:02:53.459
even though code bloat is not as
 

00:02:53.459 --> 00:02:55.699
even though code bloat is not as
problematic as resources remember when

00:02:55.699 --> 00:02:55.709
problematic as resources remember when
 

00:02:55.709 --> 00:02:57.800
problematic as resources remember when
you're downloading things on 2g every

00:02:57.800 --> 00:02:57.810
you're downloading things on 2g every
 

00:02:57.810 --> 00:03:00.170
you're downloading things on 2g every
bit counts now once again your first

00:03:00.170 --> 00:03:00.180
bit counts now once again your first
 

00:03:00.180 --> 00:03:02.150
bit counts now once again your first
step is to make sure that your use of

00:03:02.150 --> 00:03:02.160
step is to make sure that your use of
 

00:03:02.160 --> 00:03:04.759
step is to make sure that your use of
ProGuard is being done correctly to have

00:03:04.759 --> 00:03:04.769
ProGuard is being done correctly to have
 

00:03:04.769 --> 00:03:07.070
ProGuard is being done correctly to have
code removal simply set the minified

00:03:07.070 --> 00:03:07.080
code removal simply set the minified
 

00:03:07.080 --> 00:03:09.350
code removal simply set the minified
enabled flag to true in your Gradle

00:03:09.350 --> 00:03:09.360
enabled flag to true in your Gradle
 

00:03:09.360 --> 00:03:11.060
enabled flag to true in your Gradle
settings this will signal ProGuard to do

00:03:11.060 --> 00:03:11.070
settings this will signal ProGuard to do
 

00:03:11.070 --> 00:03:12.650
settings this will signal ProGuard to do
all the heavy lifting when you want to

00:03:12.650 --> 00:03:12.660
all the heavy lifting when you want to
 

00:03:12.660 --> 00:03:14.270
all the heavy lifting when you want to
compile your app oh yeah we did a video

00:03:14.270 --> 00:03:14.280
compile your app oh yeah we did a video
 

00:03:14.280 --> 00:03:16.130
compile your app oh yeah we did a video
on that if you want to learn more next

00:03:16.130 --> 00:03:16.140
on that if you want to learn more next
 

00:03:16.140 --> 00:03:17.900
on that if you want to learn more next
up try to optimize code which is

00:03:17.900 --> 00:03:17.910
up try to optimize code which is
 

00:03:17.910 --> 00:03:20.479
up try to optimize code which is
responsible for generating other code

00:03:20.479 --> 00:03:20.489
responsible for generating other code
 

00:03:20.489 --> 00:03:22.699
responsible for generating other code
there's lots of things like enums and

00:03:22.699 --> 00:03:22.709
there's lots of things like enums and
 

00:03:22.709 --> 00:03:24.259
there's lots of things like enums and
protocol buffers which can result in an

00:03:24.259 --> 00:03:24.269
protocol buffers which can result in an
 

00:03:24.269 --> 00:03:25.930
protocol buffers which can result in an
increased number of methods and classes

00:03:25.930 --> 00:03:25.940
increased number of methods and classes
 

00:03:25.940 --> 00:03:28.580
increased number of methods and classes
inside of your Dex file thus causing

00:03:28.580 --> 00:03:28.590
inside of your Dex file thus causing
 

00:03:28.590 --> 00:03:30.530
inside of your Dex file thus causing
bloat as such make sure to have a keen

00:03:30.530 --> 00:03:30.540
bloat as such make sure to have a keen
 

00:03:30.540 --> 00:03:32.960
bloat as such make sure to have a keen
eye or in some cases a flamethrower to

00:03:32.960 --> 00:03:32.970
eye or in some cases a flamethrower to
 

00:03:32.970 --> 00:03:35.030
eye or in some cases a flamethrower to
tune and optimize this type of code as

00:03:35.030 --> 00:03:35.040
tune and optimize this type of code as
 

00:03:35.040 --> 00:03:36.350
tune and optimize this type of code as
it can reduce the amount of code that

00:03:36.350 --> 00:03:36.360
it can reduce the amount of code that
 

00:03:36.360 --> 00:03:38.720
it can reduce the amount of code that
gets generated from it finally take a

00:03:38.720 --> 00:03:38.730
gets generated from it finally take a
 

00:03:38.730 --> 00:03:40.520
gets generated from it finally take a
hard look at libraries you've included

00:03:40.520 --> 00:03:40.530
hard look at libraries you've included
 

00:03:40.530 --> 00:03:42.289
hard look at libraries you've included
in your application some libraries

00:03:42.289 --> 00:03:42.299
in your application some libraries
 

00:03:42.299 --> 00:03:43.880
in your application some libraries
especially those designed for the server

00:03:43.880 --> 00:03:43.890
especially those designed for the server
 

00:03:43.890 --> 00:03:45.620
especially those designed for the server
or the desktop environments come with a

00:03:45.620 --> 00:03:45.630
or the desktop environments come with a
 

00:03:45.630 --> 00:03:47.300
or the desktop environments come with a
whole lot of objects and methods that

00:03:47.300 --> 00:03:47.310
whole lot of objects and methods that
 

00:03:47.310 --> 00:03:49.310
whole lot of objects and methods that
your Android app just doesn't need now

00:03:49.310 --> 00:03:49.320
your Android app just doesn't need now
 

00:03:49.320 --> 00:03:52.009
your Android app just doesn't need now
to be fair pro-gard helps solve part of

00:03:52.009 --> 00:03:52.019
to be fair pro-gard helps solve part of
 

00:03:52.019 --> 00:03:54.229
to be fair pro-gard helps solve part of
this problem but it can't fix everything

00:03:54.229 --> 00:03:54.239
this problem but it can't fix everything
 

00:03:54.239 --> 00:03:55.580
this problem but it can't fix everything
since some of these libraries can have

00:03:55.580 --> 00:03:55.590
since some of these libraries can have
 

00:03:55.590 --> 00:03:57.949
since some of these libraries can have
big internal dependencies that pro card

00:03:57.949 --> 00:03:57.959
big internal dependencies that pro card
 

00:03:57.959 --> 00:03:59.900
big internal dependencies that pro card
just can't remove not to mention that

00:03:59.900 --> 00:03:59.910
just can't remove not to mention that
 

00:03:59.910 --> 00:04:01.699
just can't remove not to mention that
for these large libraries this type of

00:04:01.699 --> 00:04:01.709
for these large libraries this type of
 

00:04:01.709 --> 00:04:03.410
for these large libraries this type of
probe our optimization can come at a

00:04:03.410 --> 00:04:03.420
probe our optimization can come at a
 

00:04:03.420 --> 00:04:05.289
probe our optimization can come at a
great cost of taking longer to compile

00:04:05.289 --> 00:04:05.299
great cost of taking longer to compile
 

00:04:05.299 --> 00:04:08.060
great cost of taking longer to compile
as such always make sure to try to find

00:04:08.060 --> 00:04:08.070
as such always make sure to try to find
 

00:04:08.070 --> 00:04:10.880
as such always make sure to try to find
a tiny mobile-friendly alternative

00:04:10.880 --> 00:04:10.890
a tiny mobile-friendly alternative
 

00:04:10.890 --> 00:04:12.650
a tiny mobile-friendly alternative
version of the library you need and if

00:04:12.650 --> 00:04:12.660
version of the library you need and if
 

00:04:12.660 --> 00:04:14.509
version of the library you need and if
that fails you could always just extract

00:04:14.509 --> 00:04:14.519
that fails you could always just extract
 

00:04:14.519 --> 00:04:15.800
that fails you could always just extract
the functions you need from the library

00:04:15.800 --> 00:04:15.810
the functions you need from the library
 

00:04:15.810 --> 00:04:17.060
the functions you need from the library
and put it in your own codebase if

00:04:17.060 --> 00:04:17.070
and put it in your own codebase if
 

00:04:17.070 --> 00:04:19.190
and put it in your own codebase if
you're willing to do that anyhow the

00:04:19.190 --> 00:04:19.200
you're willing to do that anyhow the
 

00:04:19.200 --> 00:04:21.170
you're willing to do that anyhow the
most important in all of this is

00:04:21.170 --> 00:04:21.180
most important in all of this is
 

00:04:21.180 --> 00:04:23.839
most important in all of this is
properly splitting your apk see there's

00:04:23.839 --> 00:04:23.849
properly splitting your apk see there's
 

00:04:23.849 --> 00:04:25.339
properly splitting your apk see there's
some content that is bundled into your

00:04:25.339 --> 00:04:25.349
some content that is bundled into your
 

00:04:25.349 --> 00:04:26.300
some content that is bundled into your
apk we

00:04:26.300 --> 00:04:26.310
apk we
 

00:04:26.310 --> 00:04:28.430
apk we
all users have to download but only some

00:04:28.430 --> 00:04:28.440
all users have to download but only some
 

00:04:28.440 --> 00:04:30.590
all users have to download but only some
so portion will ever use like having a

00:04:30.590 --> 00:04:30.600
so portion will ever use like having a
 

00:04:30.600 --> 00:04:32.780
so portion will ever use like having a
small screen device download a

00:04:32.780 --> 00:04:32.790
small screen device download a
 

00:04:32.790 --> 00:04:35.390
small screen device download a
high-resolution screen content to fix

00:04:35.390 --> 00:04:35.400
high-resolution screen content to fix
 

00:04:35.400 --> 00:04:37.100
high-resolution screen content to fix
this the Android platform allows you to

00:04:37.100 --> 00:04:37.110
this the Android platform allows you to
 

00:04:37.110 --> 00:04:39.890
this the Android platform allows you to
split content into different apks based

00:04:39.890 --> 00:04:39.900
split content into different apks based
 

00:04:39.900 --> 00:04:42.830
split content into different apks based
on things like apk levels screen sizes

00:04:42.830 --> 00:04:42.840
on things like apk levels screen sizes
 

00:04:42.840 --> 00:04:46.040
on things like apk levels screen sizes
and GPU texture support this way devices

00:04:46.040 --> 00:04:46.050
and GPU texture support this way devices
 

00:04:46.050 --> 00:04:48.379
and GPU texture support this way devices
with specific screen sizes won't receive

00:04:48.379 --> 00:04:48.389
with specific screen sizes won't receive
 

00:04:48.389 --> 00:04:50.480
with specific screen sizes won't receive
assets from sizes it won't use although

00:04:50.480 --> 00:04:50.490
assets from sizes it won't use although
 

00:04:50.490 --> 00:04:52.310
assets from sizes it won't use although
be warned that this does come with a

00:04:52.310 --> 00:04:52.320
be warned that this does come with a
 

00:04:52.320 --> 00:04:53.900
be warned that this does come with a
little extra overhead to build and

00:04:53.900 --> 00:04:53.910
little extra overhead to build and
 

00:04:53.910 --> 00:04:56.210
little extra overhead to build and
deploy oh and as as of Android studio

00:04:56.210 --> 00:04:56.220
deploy oh and as as of Android studio
 

00:04:56.220 --> 00:04:59.030
deploy oh and as as of Android studio
2.2 there's a really fancy new built in

00:04:59.030 --> 00:04:59.040
2.2 there's a really fancy new built in
 

00:04:59.040 --> 00:05:01.730
2.2 there's a really fancy new built in
apk analyzer which helps you understand

00:05:01.730 --> 00:05:01.740
apk analyzer which helps you understand
 

00:05:01.740 --> 00:05:03.080
apk analyzer which helps you understand
the contents and the sizes of different

00:05:03.080 --> 00:05:03.090
the contents and the sizes of different
 

00:05:03.090 --> 00:05:05.540
the contents and the sizes of different
components in your apk it gives you

00:05:05.540 --> 00:05:05.550
components in your apk it gives you
 

00:05:05.550 --> 00:05:07.100
components in your apk it gives you
direct access to see what's being

00:05:07.100 --> 00:05:07.110
direct access to see what's being
 

00:05:07.110 --> 00:05:09.080
direct access to see what's being
included it sizes and help you figure

00:05:09.080 --> 00:05:09.090
included it sizes and help you figure
 

00:05:09.090 --> 00:05:10.760
included it sizes and help you figure
out what's needed to make them smaller

00:05:10.760 --> 00:05:10.770
out what's needed to make them smaller
 

00:05:10.770 --> 00:05:13.400
out what's needed to make them smaller
see at its core making smaller apks

00:05:13.400 --> 00:05:13.410
see at its core making smaller apks
 

00:05:13.410 --> 00:05:15.200
see at its core making smaller apks
makes faster downloads which makes

00:05:15.200 --> 00:05:15.210
makes faster downloads which makes
 

00:05:15.210 --> 00:05:16.940
makes faster downloads which makes
happier users which makes happier

00:05:16.940 --> 00:05:16.950
happier users which makes happier
 

00:05:16.950 --> 00:05:19.430
happier users which makes happier
developers so make everybody happy err

00:05:19.430 --> 00:05:19.440
developers so make everybody happy err
 

00:05:19.440 --> 00:05:20.780
developers so make everybody happy err
by checking out the rest of the Android

00:05:20.780 --> 00:05:20.790
by checking out the rest of the Android
 

00:05:20.790 --> 00:05:22.430
by checking out the rest of the Android
performance patterns videos and don't

00:05:22.430 --> 00:05:22.440
performance patterns videos and don't
 

00:05:22.440 --> 00:05:24.200
performance patterns videos and don't
forget to ask the tough questions on our

00:05:24.200 --> 00:05:24.210
forget to ask the tough questions on our
 

00:05:24.210 --> 00:05:26.990
forget to ask the tough questions on our
Google+ community so keep calm profile

00:05:26.990 --> 00:05:27.000
Google+ community so keep calm profile
 

00:05:27.000 --> 00:05:28.280
Google+ community so keep calm profile
your code and always remember perf

00:05:28.280 --> 00:05:28.290
your code and always remember perf
 

00:05:28.290 --> 00:05:32.740
your code and always remember perf
matters

00:05:32.740 --> 00:05:32.750
 

00:05:32.750 --> 00:05:34.810
you

