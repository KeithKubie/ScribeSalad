WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.100
[MUSIC PLAYING]

00:00:03.365 --> 00:00:04.990
JOANNA KIM: Over the
last couple years,

00:00:04.990 --> 00:00:07.440
our team has been working
really hard to bring the first

00:00:07.440 --> 00:00:11.260
augmented reality feature to
one of our most-loved products--

00:00:11.260 --> 00:00:13.450
Google Maps.

00:00:13.450 --> 00:00:15.170
We're still in the
midst of this journey,

00:00:15.170 --> 00:00:17.320
but we thought we'd share
some of our learnings

00:00:17.320 --> 00:00:20.260
with all of you here today to
hopefully provide some insight

00:00:20.260 --> 00:00:23.380
into the process, and help you
avoid the same mistakes that we

00:00:23.380 --> 00:00:25.010
made.

00:00:25.010 --> 00:00:27.500
You know, people
often criticize AR

00:00:27.500 --> 00:00:32.100
as being a hammer without a
nail, and it's a fair point.

00:00:32.100 --> 00:00:35.130
Oftentimes, this is said
about a lot of new technology.

00:00:35.130 --> 00:00:37.880
However, we on the Maps
team saw an opportunity

00:00:37.880 --> 00:00:42.330
to address one of our
longest-standing user problems.

00:00:42.330 --> 00:00:45.000
This scene might look
familiar to some of you.

00:00:45.000 --> 00:00:48.402
You're in an unfamiliar
area, maybe exiting a subway,

00:00:48.402 --> 00:00:50.610
and then you pull up Google
Maps to try to figure out

00:00:50.610 --> 00:00:52.570
which direction to go.

00:00:52.570 --> 00:00:54.420
And then you just
stand there, thinking,

00:00:54.420 --> 00:00:57.387
am I facing this
way, or this way?

00:00:57.387 --> 00:00:59.970
And if you're anything like me,
you just get really impatient,

00:00:59.970 --> 00:01:02.400
and then you start
walking, only to realize

00:01:02.400 --> 00:01:05.470
that you've been going the
wrong way the entire time.

00:01:05.470 --> 00:01:08.490
Well, it turns out this is
a really common problem,

00:01:08.490 --> 00:01:10.860
and one that can cause
significant stress to some

00:01:10.860 --> 00:01:12.490
of our users.

00:01:12.490 --> 00:01:14.190
So we saw an
opportunity to introduce

00:01:14.190 --> 00:01:16.080
a complementary
technical approach,

00:01:16.080 --> 00:01:18.060
and combine it with
augmented reality

00:01:18.060 --> 00:01:21.960
to make navigation
better for our users.

00:01:21.960 --> 00:01:23.940
Our vision-based approach
works similar to how

00:01:23.940 --> 00:01:27.660
humans orient and navigate-- by
recognizing familiar features

00:01:27.660 --> 00:01:29.010
and landmarks.

00:01:29.010 --> 00:01:31.950
It's a human-like approach
to the human-scale problem

00:01:31.950 --> 00:01:35.280
of navigating on foot.

00:01:35.280 --> 00:01:36.822
Solving this has
been one of the most

00:01:36.822 --> 00:01:38.572
technically-challenging
projects that I've

00:01:38.572 --> 00:01:40.620
been a part of during my
eight years at Google,

00:01:40.620 --> 00:01:42.060
and I'm thrilled
to be here today

00:01:42.060 --> 00:01:44.272
with a team to tell you
more about how we did it.

00:01:44.272 --> 00:01:46.230
But rather than walk you
through the technology

00:01:46.230 --> 00:01:50.386
myself, let me introduce Jeremy,
our Tech Lead for Localization.

00:01:50.386 --> 00:01:53.802
[APPLAUSE]

00:01:55.760 --> 00:01:57.920
JEREMY PACK: Thanks, Joanna.

00:01:57.920 --> 00:02:00.080
So let's talk about
the blue dot--

00:02:00.080 --> 00:02:02.690
that is, that blue dot that
shows up in Google Maps

00:02:02.690 --> 00:02:04.820
to show you where
you are in the world,

00:02:04.820 --> 00:02:07.780
and which direction
your device is pointed.

00:02:07.780 --> 00:02:11.270
In augmented reality,
robotics, and related domains,

00:02:11.270 --> 00:02:13.640
we call this process
localization.

00:02:13.640 --> 00:02:16.070
That is, figuring out
where something is in space

00:02:16.070 --> 00:02:18.260
and how it's rotated.

00:02:18.260 --> 00:02:20.570
And humans have been
inventing technology

00:02:20.570 --> 00:02:23.510
to help us localize and
navigate in the real world

00:02:23.510 --> 00:02:24.800
for millennia.

00:02:24.800 --> 00:02:28.340
So think of things like star
maps and constellations,

00:02:28.340 --> 00:02:30.710
or handle compasses,
magnets that

00:02:30.710 --> 00:02:32.690
can point you towards north.

00:02:32.690 --> 00:02:37.580
Or think about street signs
and street maps, or astrolabes

00:02:37.580 --> 00:02:39.860
and sextants, and
other technology

00:02:39.860 --> 00:02:41.270
for navigating at sea.

00:02:41.270 --> 00:02:42.980
But in the past
few decades, there

00:02:42.980 --> 00:02:45.560
have been some
huge leaps forward

00:02:45.560 --> 00:02:49.080
in how we can localize
ourselves in the world.

00:02:49.080 --> 00:02:52.100
The global navigation
satellite systems--

00:02:52.100 --> 00:02:55.550
such as GPS,
GLONASS, or Galileo--

00:02:55.550 --> 00:02:59.330
consist of satellites in space
that can send signals to a GPS

00:02:59.330 --> 00:03:02.760
receiver-- such as
your smartphone--

00:03:02.760 --> 00:03:05.280
that allow the device
to then calculate

00:03:05.280 --> 00:03:07.650
the approximate distance
to those satellites,

00:03:07.650 --> 00:03:10.900
and triangulate its
position in the real world.

00:03:10.900 --> 00:03:13.590
And this technology
often results

00:03:13.590 --> 00:03:16.920
in very fast and very
accurate location information

00:03:16.920 --> 00:03:18.420
for our devices.

00:03:18.420 --> 00:03:21.100
Now, of course, for
walking navigation,

00:03:21.100 --> 00:03:23.250
we need a very high
level of accuracy.

00:03:23.250 --> 00:03:25.860
We need to be able to tell
you which side of the street

00:03:25.860 --> 00:03:28.530
to be on, and when to cross it.

00:03:28.530 --> 00:03:33.300
And, well, where do
people walk the most?

00:03:33.300 --> 00:03:38.450
Often in dense
urban environments.

00:03:38.450 --> 00:03:41.020
And so in these urban
canyons, we call them--

00:03:41.020 --> 00:03:43.960
so streets with big
buildings on either side--

00:03:43.960 --> 00:03:45.730
the signals from
these satellites

00:03:45.730 --> 00:03:48.430
can actually get blocked
by the buildings,

00:03:48.430 --> 00:03:52.120
or in some cases bounce
off of the buildings

00:03:52.120 --> 00:03:54.650
before they reach your device.

00:03:54.650 --> 00:03:57.130
And that makes the device
miscalculate the distance

00:03:57.130 --> 00:03:59.560
to the satellites and
incorrectly triangulate

00:03:59.560 --> 00:04:01.860
its position.

00:04:01.860 --> 00:04:04.310
Now, these aren't
the only difficulties

00:04:04.310 --> 00:04:09.380
with using this sort of
satellite-based GPS approach.

00:04:09.380 --> 00:04:14.060
In addition, when you're
calculating distances

00:04:14.060 --> 00:04:17.180
to satellites, it requires
estimating how much time

00:04:17.180 --> 00:04:19.220
has passed since the
signal left the satellite

00:04:19.220 --> 00:04:21.079
on your smartphone.

00:04:21.079 --> 00:04:24.410
And timing's already hard
enough in software engineering--

00:04:24.410 --> 00:04:26.570
getting time synchronized
across devices.

00:04:26.570 --> 00:04:28.430
But when you're talking
about signals moving

00:04:28.430 --> 00:04:33.340
at the speed of light,
even a nanosecond of error

00:04:33.340 --> 00:04:36.070
is going to result in you
miscalculating by a foot--

00:04:36.070 --> 00:04:39.190
or a third of a
meter for most of us.

00:04:39.190 --> 00:04:45.310
Now, a nanosecond
is small enough

00:04:45.310 --> 00:04:48.400
that even a highly
accurate atomic clock

00:04:48.400 --> 00:04:51.670
can drift by a nanosecond
once in a while.

00:04:51.670 --> 00:04:54.400
And I don't know about you,
but my smartphone does not

00:04:54.400 --> 00:04:56.800
have an atomic clock in it.

00:04:56.800 --> 00:05:01.440
And so I looked in--

00:05:01.440 --> 00:05:02.940
so I wanted to see
if maybe we could

00:05:02.940 --> 00:05:05.710
fit an atomic clock in there.

00:05:05.710 --> 00:05:09.200
So if we took a nice
$2,000 atomic clock,

00:05:09.200 --> 00:05:11.880
there are already
a lot of components

00:05:11.880 --> 00:05:14.448
in your average
smartphone, and so I

00:05:14.448 --> 00:05:16.740
think we could fit the atomic
clock in there if we just

00:05:16.740 --> 00:05:19.100
removed the battery.

00:05:19.100 --> 00:05:21.960
It's a nice trade-off.

00:05:21.960 --> 00:05:24.030
Now, honestly, I
don't think anybody's

00:05:24.030 --> 00:05:26.910
going to pay for that
type of smartphone,

00:05:26.910 --> 00:05:28.788
but as long as
we're in here, let's

00:05:28.788 --> 00:05:31.080
take a look at some of the
components we have in there.

00:05:31.080 --> 00:05:33.247
There are actually a lot
of different things in here

00:05:33.247 --> 00:05:35.310
that can help with localization.

00:05:35.310 --> 00:05:38.340
You see an arrow pointing,
there, to the GPS antenna.

00:05:38.340 --> 00:05:43.170
I'm actually told that you
can get better reception

00:05:43.170 --> 00:05:46.680
for your GPS chip if you replace
that little antenna there

00:05:46.680 --> 00:05:49.200
with a paperclip.

00:05:49.200 --> 00:05:51.390
Now, if any of you
are interested,

00:05:51.390 --> 00:05:53.928
I do have some paper clips
and a soldering iron,

00:05:53.928 --> 00:05:56.220
and if you would like to void
your warranty afterwards,

00:05:56.220 --> 00:05:57.690
just come talk to me.

00:05:57.690 --> 00:06:00.640
But don't tell the
Pixel team, OK?

00:06:00.640 --> 00:06:03.670
Now, in addition
to the GPS antenna,

00:06:03.670 --> 00:06:05.590
there's some other
ancient hardware--

00:06:05.590 --> 00:06:07.960
or the newest version of
ancient hardware in here.

00:06:07.960 --> 00:06:10.410
We talked about handheld
compasses, right?

00:06:10.410 --> 00:06:12.430
So if you've ever used
a handheld compass,

00:06:12.430 --> 00:06:14.490
you know that you have
to be careful with it.

00:06:14.490 --> 00:06:17.120
When I've taught kids how
to use a handheld compass,

00:06:17.120 --> 00:06:19.720
they inevitably
stand next to a pole,

00:06:19.720 --> 00:06:22.030
and then the compass
points at the pole.

00:06:22.030 --> 00:06:23.500
A big, metal object--

00:06:23.500 --> 00:06:26.650
or anything magnetic--
can actually throw off

00:06:26.650 --> 00:06:28.840
the direction of the compass.

00:06:28.840 --> 00:06:32.590
And so we're going to take one
of those handheld compasses,

00:06:32.590 --> 00:06:36.610
except we're going to shrink
it really, really small.

00:06:40.560 --> 00:06:42.710
And we're going to stick
it into your smartphone,

00:06:42.710 --> 00:06:44.540
and then we're
going to surround it

00:06:44.540 --> 00:06:46.550
with metal components
and other circuitry.

00:06:46.550 --> 00:06:48.680
And then we're going to
put a big battery in there,

00:06:48.680 --> 00:06:52.110
and we're going to run
electricity through everything.

00:06:52.110 --> 00:06:54.600
Now, on a completely
unrelated note,

00:06:54.600 --> 00:06:59.080
that's also how you
make an electromagnet.

00:06:59.080 --> 00:07:02.340
So now we have this
electromagnet smartphone thing,

00:07:02.340 --> 00:07:04.680
and we take it into
an urban environment,

00:07:04.680 --> 00:07:07.920
and we surround it
with, let's see,

00:07:07.920 --> 00:07:12.420
subway trains, cars, utility
poles, fire hydrants,

00:07:12.420 --> 00:07:16.440
and all sorts of nice, big,
metal, magnetic objects.

00:07:16.440 --> 00:07:19.230
And we should be surprised
that these smartphone compasses

00:07:19.230 --> 00:07:22.790
can work at all in that
type of environment.

00:07:22.790 --> 00:07:24.795
So we need some more sensors.

00:07:24.795 --> 00:07:26.170
There are some
additional sensors

00:07:26.170 --> 00:07:28.450
in the smartphone
that can help us.

00:07:28.450 --> 00:07:30.550
Inertial measurement
units consist

00:07:30.550 --> 00:07:32.590
of a set of sensors
that can be used

00:07:32.590 --> 00:07:35.350
to track how the
device is navigating,

00:07:35.350 --> 00:07:37.420
how it's moving through space.

00:07:37.420 --> 00:07:40.120
Things like gyros
and accelerometers

00:07:40.120 --> 00:07:42.310
can tell us how the
device is rotating

00:07:42.310 --> 00:07:44.810
and how it's position
changes over time.

00:07:44.810 --> 00:07:47.360
And so your
smartphone has these.

00:07:47.360 --> 00:07:51.100
But now, if we're trying
to use an accelerometer

00:07:51.100 --> 00:07:55.065
to measure how position
changes over time,

00:07:55.065 --> 00:07:56.440
I'll bet there
are a bunch of you

00:07:56.440 --> 00:07:58.960
out there now
thinking that if we

00:07:58.960 --> 00:08:02.590
have such a small,
inexpensive accelerometer

00:08:02.590 --> 00:08:06.090
and we're using it to
measure acceleration

00:08:06.090 --> 00:08:08.760
and it has small errors,
those errors will

00:08:08.760 --> 00:08:11.190
grow to big errors in
our positional estimates,

00:08:11.190 --> 00:08:13.760
especially over longer
periods of time.

00:08:13.760 --> 00:08:15.620
And so this type of
inertial odometry

00:08:15.620 --> 00:08:17.370
that is tracking the
movement of something

00:08:17.370 --> 00:08:19.890
through space using
inertial sensors

00:08:19.890 --> 00:08:22.860
needs additional signals
to keep it anchored,

00:08:22.860 --> 00:08:25.530
to keep it working
well over time,

00:08:25.530 --> 00:08:27.490
and keep accurately
estimating your position,

00:08:27.490 --> 00:08:29.490
especially when we have
to cram the sensors down

00:08:29.490 --> 00:08:30.600
so small in this device.

00:08:34.350 --> 00:08:36.549
We have one more
sensor in the device

00:08:36.549 --> 00:08:38.130
that we haven't talked about--

00:08:38.130 --> 00:08:39.659
the camera.

00:08:39.659 --> 00:08:43.260
So we can use the
camera in a smartphone

00:08:43.260 --> 00:08:47.920
to detect visual features
in the scene around us.

00:08:47.920 --> 00:08:54.150
Think corners of chairs, text on
the wall, texture on the floor.

00:08:54.150 --> 00:08:59.840
And use those to anchor
these inertial calculations.

00:08:59.840 --> 00:09:03.433
And so by estimating
where those things are,

00:09:03.433 --> 00:09:05.850
then we can correct for the
errors in the inertial sensors

00:09:05.850 --> 00:09:07.680
over time.

00:09:07.680 --> 00:09:09.810
And this visual
inertial odometry

00:09:09.810 --> 00:09:12.433
helps make this type
of relative tracking--

00:09:12.433 --> 00:09:14.850
this tracking how the device
is navigating through space--

00:09:14.850 --> 00:09:16.170
much more accurate.

00:09:16.170 --> 00:09:19.110
We can actually take it
a step further, though.

00:09:19.110 --> 00:09:23.550
We can have the device start to
memorize these visual features,

00:09:23.550 --> 00:09:26.880
making it so that the more
the device moves around

00:09:26.880 --> 00:09:28.830
within a given
environment, the better it

00:09:28.830 --> 00:09:30.538
can learn that
environment, the better it

00:09:30.538 --> 00:09:32.820
can map that environment,
and the better it

00:09:32.820 --> 00:09:35.040
can track its own movement
within that environment

00:09:35.040 --> 00:09:37.180
over time.

00:09:37.180 --> 00:09:39.540
And let's take that
a step further.

00:09:39.540 --> 00:09:45.327
We could actually precompute
a map using imagery

00:09:45.327 --> 00:09:46.910
that we've collected
around the world,

00:09:46.910 --> 00:09:49.510
say, from something
like Street View.

00:09:49.510 --> 00:09:51.620
And so we could take all
of these visual features

00:09:51.620 --> 00:09:55.070
from the world, build them
up into a precomputed map,

00:09:55.070 --> 00:09:57.430
and now use an image
from that same camera,

00:09:57.430 --> 00:10:00.950
match it against the Street
View, the visual features,

00:10:00.950 --> 00:10:02.780
and precisely
position and orient

00:10:02.780 --> 00:10:07.050
that device in the real world.

00:10:07.050 --> 00:10:10.240
Now, this visual
positioning system

00:10:10.240 --> 00:10:14.950
is the core piece that makes
our augmented reality walking

00:10:14.950 --> 00:10:19.380
navigation experience
so fast and accurate,

00:10:19.380 --> 00:10:22.290
and it achieves a
level of accuracy

00:10:22.290 --> 00:10:24.570
that is much higher
than you can achieve

00:10:24.570 --> 00:10:28.380
with those other sensors
that we just discussed.

00:10:28.380 --> 00:10:30.990
Now, the speed and
accuracy of localization

00:10:30.990 --> 00:10:32.700
that you see in
this example here

00:10:32.700 --> 00:10:36.360
is actually pretty typical
in that type of environment,

00:10:36.360 --> 00:10:40.260
and we need localization to
be that fast and accurate

00:10:40.260 --> 00:10:44.020
everywhere you live,
work, or travel.

00:10:44.020 --> 00:10:47.370
So for that reason,
we have built out

00:10:47.370 --> 00:10:52.080
this visual positioning
service to work everywhere

00:10:52.080 --> 00:10:55.540
that we have high-quality
Street View data.

00:10:55.540 --> 00:10:58.790
That is a lot of countries.

00:10:58.790 --> 00:11:01.880
Now, this is the result of more
than a decade of investment

00:11:01.880 --> 00:11:04.580
of collecting imagery
around the world

00:11:04.580 --> 00:11:07.440
so that we can build
products like this.

00:11:07.440 --> 00:11:12.860
Now, this map-- it makes me
happy and sad at the same time.

00:11:12.860 --> 00:11:14.930
You can already tell,
at this zoom level,

00:11:14.930 --> 00:11:18.920
that places like China
and most of Africa

00:11:18.920 --> 00:11:20.780
don't really have any imagery.

00:11:20.780 --> 00:11:24.175
And other places look
OK zoomed out this far,

00:11:24.175 --> 00:11:25.550
but if you zoom
in, you'll notice

00:11:25.550 --> 00:11:28.550
that coverage can be very
sparse in places like India,

00:11:28.550 --> 00:11:32.148
and that even in
places like here,

00:11:32.148 --> 00:11:34.190
there will be some streets
missing here or there,

00:11:34.190 --> 00:11:36.790
and some of these data is older.

00:11:36.790 --> 00:11:40.870
Now, lack of imagery, of
course, is not the only problem

00:11:40.870 --> 00:11:44.607
that we encounter when doing
a camera-based localization.

00:11:47.410 --> 00:11:49.750
So there are a
lot of things that

00:11:49.750 --> 00:11:53.210
can confuse a visual system--

00:11:53.210 --> 00:11:55.930
things like people,
cars, or anything

00:11:55.930 --> 00:11:58.700
in the environment that
changes frequently.

00:11:58.700 --> 00:12:00.700
And so for trees
in particular, we

00:12:00.700 --> 00:12:05.320
had to do a lot of machine
learning and a lot of geometry

00:12:05.320 --> 00:12:08.590
to help the system learn to
ignore things like leaves

00:12:08.590 --> 00:12:11.020
that change frequently.

00:12:11.020 --> 00:12:15.100
Visual algorithms love that
sort of high-quality feature.

00:12:15.100 --> 00:12:17.770
And we had to teach it to pay
attention to the structure that

00:12:17.770 --> 00:12:19.310
is more permanent--

00:12:19.310 --> 00:12:21.040
so things like the
building ourselves,

00:12:21.040 --> 00:12:22.240
and the trunks on the trees.

00:12:27.000 --> 00:12:28.810
Also, of course--

00:12:28.810 --> 00:12:31.110
I don't know about
you, but the last time

00:12:31.110 --> 00:12:33.180
I got myself hopelessly lost--

00:12:33.180 --> 00:12:35.273
which was very recent--

00:12:35.273 --> 00:12:36.940
I didn't check to
make sure it was going

00:12:36.940 --> 00:12:39.700
to be light outside first.

00:12:39.700 --> 00:12:43.390
And the core of the
problem is that the camera

00:12:43.390 --> 00:12:47.140
on your smartphone is far less
sensitive than the human eye.

00:12:47.140 --> 00:12:51.880
Your human eye is this marvelous
thing that does automatic HDR.

00:12:51.880 --> 00:12:54.460
I mean, it can correct for all
sorts of lighting conditions

00:12:54.460 --> 00:12:59.140
that your smartphone camera
just cannot handle as easily.

00:12:59.140 --> 00:13:01.960
And so in a scene that
looks reasonable to me

00:13:01.960 --> 00:13:06.190
where I can navigate fine, all
that the smartphone can see

00:13:06.190 --> 00:13:08.500
is the headlights on the cars.

00:13:08.500 --> 00:13:10.570
Now, those headlights
are generally

00:13:10.570 --> 00:13:14.050
moving, which means that
ARCore can't successfully

00:13:14.050 --> 00:13:16.510
latch onto any visual
features in order

00:13:16.510 --> 00:13:19.030
to tell how the device
moved through space,

00:13:19.030 --> 00:13:21.070
and none of the
permanent structure

00:13:21.070 --> 00:13:23.033
is actually visible
to the camera,

00:13:23.033 --> 00:13:24.700
meaning there is
nothing for us to match

00:13:24.700 --> 00:13:26.350
against from Street View.

00:13:26.350 --> 00:13:29.980
Now, even in the
middle image, as you

00:13:29.980 --> 00:13:31.900
start to get more
light in the scene

00:13:31.900 --> 00:13:36.340
and you start to be able to
see more of the structure,

00:13:36.340 --> 00:13:39.370
it still looks so
different from what

00:13:39.370 --> 00:13:42.520
it looked like when the Street
View car drove by a year

00:13:42.520 --> 00:13:47.980
before that it's very confusing,
still, to the visual system,

00:13:47.980 --> 00:13:49.930
and it usually still won't work.

00:13:49.930 --> 00:13:51.760
Now, as the light
increases a bit more,

00:13:51.760 --> 00:13:54.190
or in very well-lit areas--

00:13:54.190 --> 00:13:57.430
think like certain streets in
New York which are well-lit all

00:13:57.430 --> 00:13:58.720
the time--

00:13:58.720 --> 00:14:00.827
then the system can
start to work more often,

00:14:00.827 --> 00:14:02.410
but it's really not
something that you

00:14:02.410 --> 00:14:03.855
can rely on in low light.

00:14:08.300 --> 00:14:11.510
Now, I already showed you
how packed-in everything is

00:14:11.510 --> 00:14:15.020
in a smartphone, but the battery
takes up a lot of space--

00:14:15.020 --> 00:14:16.940
and that's for a good reason.

00:14:16.940 --> 00:14:18.900
We don't want it to run out.

00:14:18.900 --> 00:14:24.520
Now, if you've ever built an
app that uses the GPS a lot,

00:14:24.520 --> 00:14:27.110
that leaves it on for
long periods of time,

00:14:27.110 --> 00:14:30.840
you may have noticed that
that can run down the battery.

00:14:30.840 --> 00:14:33.450
But the cost of
using the GPS chip--

00:14:33.450 --> 00:14:36.000
or any of these other
localization sensors--

00:14:36.000 --> 00:14:39.840
pales in comparison to the
cost of using that camera.

00:14:39.840 --> 00:14:42.870
So turning on the camera
and putting that image

00:14:42.870 --> 00:14:47.630
on the screen of the device
is a significant power draw.

00:14:47.630 --> 00:14:49.830
And so just opening
up your camera app

00:14:49.830 --> 00:14:52.740
already uses up a lot of
power and isn't something

00:14:52.740 --> 00:14:56.310
that you can do for your
entire 2 or 3 kilometer walk--

00:15:01.270 --> 00:15:03.490
at least, not if you
want to have your phone

00:15:03.490 --> 00:15:05.470
last till the end of the day.

00:15:05.470 --> 00:15:11.100
Now, we looked into different
approaches for handling this.

00:15:11.100 --> 00:15:13.360
And the first idea
was just we need

00:15:13.360 --> 00:15:17.680
to make everybody carry around
an extra battery all the time.

00:15:17.680 --> 00:15:20.985
All we got to do is
make it socially cool

00:15:20.985 --> 00:15:22.610
to carry around a
battery all the time.

00:15:22.610 --> 00:15:24.010
And so we experimented
with this.

00:15:24.010 --> 00:15:24.910
I took a battery out.

00:15:24.910 --> 00:15:28.210
I plugged my phone into it with
a USB cable through the pocket,

00:15:28.210 --> 00:15:30.495
and walked around-- trying
to use walking nav--

00:15:30.495 --> 00:15:31.870
to see how people
reacted and see

00:15:31.870 --> 00:15:34.570
if anybody started adopting it.

00:15:34.570 --> 00:15:38.573
They did not, and
I felt pretty silly

00:15:38.573 --> 00:15:40.240
walking around like
that-- with my phone

00:15:40.240 --> 00:15:42.130
plugged into my pocket.

00:15:42.130 --> 00:15:45.040
In addition, of course,
just having that extra power

00:15:45.040 --> 00:15:46.840
going in from the
battery in my pocket

00:15:46.840 --> 00:15:48.550
made the compass
performance even worse.

00:15:51.460 --> 00:15:55.080
So my next idea was
that I was going

00:15:55.080 --> 00:15:58.310
to go get a map of Mountain View
printed on the back of my phone

00:15:58.310 --> 00:16:01.673
so that whenever the battery
dies, I still won't be lost.

00:16:01.673 --> 00:16:05.130
[LAUGHTER]

00:16:05.130 --> 00:16:07.130
But when it came
down to it, really

00:16:07.130 --> 00:16:09.710
realized that we have to
make some trade-offs, here.

00:16:09.710 --> 00:16:12.830
Just like any of your
location-based apps

00:16:12.830 --> 00:16:17.538
have to be careful about not
having the GPS on all day,

00:16:17.538 --> 00:16:19.080
we do the same thing
with the camera.

00:16:19.080 --> 00:16:20.760
We want to have
the camera on when

00:16:20.760 --> 00:16:24.930
it's essential to have
highly precise localization.

00:16:24.930 --> 00:16:27.090
And so when you want to
know exactly where to go

00:16:27.090 --> 00:16:31.660
and which turn to take,
then we have the camera on,

00:16:31.660 --> 00:16:34.320
and we can localize you
with very high quality.

00:16:34.320 --> 00:16:36.893
But once you are on
your way and know

00:16:36.893 --> 00:16:38.310
where you're
supposed to be going,

00:16:38.310 --> 00:16:41.880
then the camera turns off, and
we rely on the other sensors

00:16:41.880 --> 00:16:44.660
to localize the device and
keep you along your path.

00:16:48.490 --> 00:16:51.640
Of course, we've got to keep
you along the right path.

00:16:51.640 --> 00:16:53.410
Walking directions
have to be quite a bit

00:16:53.410 --> 00:16:56.140
different than during driving.

00:16:56.140 --> 00:17:00.680
Remember, we have to
keep you on a fast route.

00:17:00.680 --> 00:17:03.194
So we have to take into account
speed limits and traffic.

00:17:03.194 --> 00:17:04.569
We want to tell
you where to make

00:17:04.569 --> 00:17:07.750
the right turns,
legal turns, and we

00:17:07.750 --> 00:17:10.060
want to tell you
which lane of traffic

00:17:10.060 --> 00:17:12.040
you should be in when
you make that turn.

00:17:12.040 --> 00:17:15.190
Whereas in walking
navigation, it's very rare

00:17:15.190 --> 00:17:18.339
that I exceed the speed limit.

00:17:18.339 --> 00:17:21.727
And I need to know which side
of the street I should be on,

00:17:21.727 --> 00:17:23.560
and whether or not
there's a sidewalk there.

00:17:23.560 --> 00:17:25.185
I need to know where
the crosswalks are

00:17:25.185 --> 00:17:28.790
that I can cross safely on.

00:17:28.790 --> 00:17:33.930
And not all walking paths
are right next to a road.

00:17:33.930 --> 00:17:38.420
Many of them are actually
on a trail, or in a park.

00:17:38.420 --> 00:17:41.750
And often, there are very
convenient pedestrian

00:17:41.750 --> 00:17:44.990
overpasses and underpasses,
and all of these mechanisms--

00:17:44.990 --> 00:17:47.150
all of these different
types of pass--

00:17:47.150 --> 00:17:51.110
can actually be the
best and most scenic

00:17:51.110 --> 00:17:53.960
and safest ways to complete
your walking journey.

00:17:53.960 --> 00:17:56.330
So we need to take all
of these into account.

00:17:56.330 --> 00:17:58.490
Now, we get a lot of
the data about where

00:17:58.490 --> 00:18:03.223
these are from other
providers, but for much of it,

00:18:03.223 --> 00:18:05.390
we have to use all of this
imagery we've collected--

00:18:05.390 --> 00:18:08.360
so Street View data, and
aerial data from planes

00:18:08.360 --> 00:18:09.620
and satellites.

00:18:09.620 --> 00:18:12.650
And then using a combination
of manual labeling and machine

00:18:12.650 --> 00:18:15.650
learning, we find
all of these features

00:18:15.650 --> 00:18:19.520
that we can automatically to be
able to service them in the map

00:18:19.520 --> 00:18:28.080
and give you the best way to
get from point A to point B.

00:18:28.080 --> 00:18:32.513
All right, so we've talked
about some of the difficulty,

00:18:32.513 --> 00:18:34.930
some of the technology that
we've built to make it so that

00:18:34.930 --> 00:18:38.035
we can accurately
localize you at point A,

00:18:38.035 --> 00:18:42.190
and then direct you along
a good route to point B.

00:18:42.190 --> 00:18:48.620
But this core technology--
this navigation technology--

00:18:48.620 --> 00:18:51.380
doesn't really do any
good without being

00:18:51.380 --> 00:18:53.890
able to be presented to
the user in the right way.

00:18:53.890 --> 00:18:56.450
Now, remember, when
we're using this,

00:18:56.450 --> 00:18:59.060
we are walking
down a busy street,

00:18:59.060 --> 00:19:01.520
and we need to get there safely,
and we want our smartphone

00:19:01.520 --> 00:19:04.040
to surface the right information
in the way we need it,

00:19:04.040 --> 00:19:06.860
and that is hard
no matter how good

00:19:06.860 --> 00:19:09.770
the underlying
localization and map are.

00:19:09.770 --> 00:19:13.010
And so our user experience team
has done a lot of iteration

00:19:13.010 --> 00:19:15.500
on this, and Rachel here--

00:19:15.500 --> 00:19:18.772
who leads that-- team is
going to tell us all about it.

00:19:18.772 --> 00:19:22.244
[APPLAUSE]

00:19:23.740 --> 00:19:24.970
RACHEL INMAN: Thanks, Jeremy.

00:19:24.970 --> 00:19:27.970
So if developing a new
technical approach using

00:19:27.970 --> 00:19:32.020
VPS plus Street View plus
ML wasn't complex enough,

00:19:32.020 --> 00:19:35.590
we also had to dive into a
totally new area of interaction

00:19:35.590 --> 00:19:36.430
design--

00:19:36.430 --> 00:19:40.850
designing for outdoor,
world-scale AR experiences.

00:19:40.850 --> 00:19:43.750
So what does it mean to reinvent
walking navigation for people

00:19:43.750 --> 00:19:44.985
around the globe?

00:19:44.985 --> 00:19:46.360
Well, first we
have to understand

00:19:46.360 --> 00:19:49.330
how people navigate in a
variety of contexts, city

00:19:49.330 --> 00:19:51.310
layouts, and city densities.

00:19:51.310 --> 00:19:52.930
Just like Jeremy
and his team have

00:19:52.930 --> 00:19:56.470
to understand all the technical
factors for scaling globally,

00:19:56.470 --> 00:19:59.020
we have to make sure we take
all those different contexts

00:19:59.020 --> 00:20:01.580
into account.

00:20:01.580 --> 00:20:04.460
Most people don't realize it,
but cities across the globe

00:20:04.460 --> 00:20:07.400
are laid out really differently,
and these different layouts

00:20:07.400 --> 00:20:08.930
deeply affect the
way that people

00:20:08.930 --> 00:20:11.120
navigate on foot within them.

00:20:11.120 --> 00:20:12.710
In New York City,
for example, it's

00:20:12.710 --> 00:20:16.070
pretty easy to understand where
you are at any given time,

00:20:16.070 --> 00:20:18.350
especially above 14th
street, because it's all

00:20:18.350 --> 00:20:20.690
laid out on a grid, and you
can just follow the numbers

00:20:20.690 --> 00:20:21.880
as you go up.

00:20:21.880 --> 00:20:25.230
But in Tokyo, you don't
always see street signs,

00:20:25.230 --> 00:20:27.350
most people use
landmarks to navigate,

00:20:27.350 --> 00:20:30.050
and things are so dense
that that restaurant you're

00:20:30.050 --> 00:20:33.710
trying to get to might be inside
a building on the eighth floor,

00:20:33.710 --> 00:20:37.340
and only accessible
through the rear elevator.

00:20:37.340 --> 00:20:38.900
When starting this
project, we also

00:20:38.900 --> 00:20:40.940
wanted to investigate
the types of questions

00:20:40.940 --> 00:20:42.980
that people are asking
as they navigate

00:20:42.980 --> 00:20:44.810
on foot around the world.

00:20:44.810 --> 00:20:47.390
Which way should
I start walking?

00:20:47.390 --> 00:20:51.020
And is this my turn, or
is it one more block up?

00:20:51.020 --> 00:20:53.300
Where exactly is my destination?

00:20:53.300 --> 00:20:54.800
And these questions
are coming up

00:20:54.800 --> 00:20:57.410
because GPS and compass
aren't cutting it,

00:20:57.410 --> 00:20:59.330
but also, through
user research, we

00:20:59.330 --> 00:21:02.960
found that many people
struggle with map abstraction.

00:21:02.960 --> 00:21:04.670
For lots of folks, it's hard--

00:21:04.670 --> 00:21:07.100
and sometimes even
anxiety-inducing--

00:21:07.100 --> 00:21:09.140
to quickly understand
the relationship

00:21:09.140 --> 00:21:11.750
between what they're seeing
in the real world with what's

00:21:11.750 --> 00:21:14.720
on the 2D map.

00:21:14.720 --> 00:21:17.330
Well, turns out one
of the strengths of AR

00:21:17.330 --> 00:21:20.840
is allowing us to believably
place things in the real world,

00:21:20.840 --> 00:21:23.420
just like you might put
your favorite pink alligator

00:21:23.420 --> 00:21:25.110
on your dining room table.

00:21:25.110 --> 00:21:27.650
So we thought, what if we
took that strength of AR

00:21:27.650 --> 00:21:29.900
and combined it with a
new technical approach

00:21:29.900 --> 00:21:31.520
that Jeremy described?

00:21:31.520 --> 00:21:33.290
Could we solve
the, which way do I

00:21:33.290 --> 00:21:37.670
start walking problem, but maybe
also the abstraction issue?

00:21:37.670 --> 00:21:39.600
Well, that sounds
simple enough, right?

00:21:39.600 --> 00:21:42.830
All we have to do is put a
blue line on the ground, same

00:21:42.830 --> 00:21:46.410
as the one that we have
in the 2D map, right?

00:21:46.410 --> 00:21:49.090
Well, not quite.

00:21:49.090 --> 00:21:50.950
This is an early
design exploration

00:21:50.950 --> 00:21:53.080
where we tried exactly that.

00:21:53.080 --> 00:21:54.460
The trouble with
this approach is

00:21:54.460 --> 00:21:56.950
that putting a precise-looking
line on the ground

00:21:56.950 --> 00:22:00.580
doesn't flex well with varying
levels of localization or data

00:22:00.580 --> 00:22:01.630
quality.

00:22:01.630 --> 00:22:04.120
Plus, in user testing,
we found that people

00:22:04.120 --> 00:22:07.510
feel compelled to walk
right on that AR blue line.

00:22:07.510 --> 00:22:08.302
[LAUGHTER]

00:22:08.302 --> 00:22:09.980
So that's not good.

00:22:09.980 --> 00:22:11.470
We needed to find
a solution that

00:22:11.470 --> 00:22:13.840
would strike the right
balance between providing

00:22:13.840 --> 00:22:16.810
the specificity and clarity
users were looking for,

00:22:16.810 --> 00:22:19.930
but also flex well with those
varying levels of localization

00:22:19.930 --> 00:22:21.530
and data quality.

00:22:21.530 --> 00:22:25.000
So we did a lot
of explorations--

00:22:25.000 --> 00:22:29.230
over 120 prototype
variants, in fact.

00:22:29.230 --> 00:22:31.450
And the thing is
we had to do this.

00:22:31.450 --> 00:22:33.960
There's no material
design spec site

00:22:33.960 --> 00:22:37.840
that the team and I can pull
up to understand how to design

00:22:37.840 --> 00:22:40.360
for outdoor, world-scale AR.

00:22:40.360 --> 00:22:43.330
We've literally been
uncovering these best practices

00:22:43.330 --> 00:22:45.340
throughout this
project, and it wouldn't

00:22:45.340 --> 00:22:47.140
have been possible
without the ability

00:22:47.140 --> 00:22:51.110
to iterate quickly and test
with people on a weekly basis.

00:22:51.110 --> 00:22:54.010
So I wanted to walk you
through a few examples of how

00:22:54.010 --> 00:22:57.010
the experience evolved
throughout this project.

00:22:57.010 --> 00:22:59.950
But first, there might
be a prototype up here

00:22:59.950 --> 00:23:02.410
that looks familiar to you--

00:23:02.410 --> 00:23:07.370
maybe a furry friend that made
an appearance at I/O last year?

00:23:07.370 --> 00:23:08.240
JOANNA KIM: The fox!

00:23:08.240 --> 00:23:10.120
RACHEL INMAN: Joanna knows.

00:23:10.120 --> 00:23:14.530
OK, all right, I might as well
address the fox in the room.

00:23:14.530 --> 00:23:18.340
So at I/O last year, we showed
how AR walking navigation

00:23:18.340 --> 00:23:21.550
could provide a lot of
user value in Google Maps.

00:23:21.550 --> 00:23:25.060
We also showed this
friendly, navigating fox.

00:23:25.060 --> 00:23:28.720
Over the past year, we've done
over 25 prototype variants--

00:23:28.720 --> 00:23:31.740
and tested them with people--
of the fox experience.

00:23:31.740 --> 00:23:33.700
We've found that
it is really hard

00:23:33.700 --> 00:23:36.340
to get the experience
right between a helpful AR

00:23:36.340 --> 00:23:38.470
character and a person.

00:23:38.470 --> 00:23:42.340
People expect her to be a lot
smarter than she really is.

00:23:42.340 --> 00:23:44.020
Imbuing her with
intelligence, they

00:23:44.020 --> 00:23:47.410
expect her to know
shortcuts, to avoid poles,

00:23:47.410 --> 00:23:49.060
to avoid fire hydrants.

00:23:49.060 --> 00:23:52.240
Some people even expect her to
lead them to interesting things

00:23:52.240 --> 00:23:53.728
to do in the city.

00:23:53.728 --> 00:23:56.220
[LAUGHTER]

00:23:56.220 --> 00:23:57.450
I wish.

00:23:57.450 --> 00:23:59.910
Plus, people are
enamored by her.

00:23:59.910 --> 00:24:01.410
I mean, how could you not be?

00:24:01.410 --> 00:24:02.820
She's adorable!

00:24:02.820 --> 00:24:06.330
But with all these expectations
put on an AR character,

00:24:06.330 --> 00:24:09.450
it becomes even harder to
get the interaction right.

00:24:09.450 --> 00:24:12.870
So rest assured we're continuing
to prototype and test the fox

00:24:12.870 --> 00:24:14.880
experience, but we
want to make sure

00:24:14.880 --> 00:24:17.370
that we're providing a
delightful experience,

00:24:17.370 --> 00:24:21.655
but also being helpful in
the moments that matter.

00:24:21.655 --> 00:24:23.030
All right, so back
to walking you

00:24:23.030 --> 00:24:25.610
through a few examples of
how the experience evolved

00:24:25.610 --> 00:24:27.800
throughout the course
of this project.

00:24:27.800 --> 00:24:30.080
When working on the
localization experience,

00:24:30.080 --> 00:24:31.970
we needed to
understand how long it

00:24:31.970 --> 00:24:36.590
would take to get the user
effectively localized,

00:24:36.590 --> 00:24:39.240
and how we needed them to look
around at the environment.

00:24:39.240 --> 00:24:40.740
So at the beginning
of this project,

00:24:40.740 --> 00:24:42.880
I remember coming to Jeremy
over here and asking him,

00:24:42.880 --> 00:24:44.450
how long do you think it's
going to take the user

00:24:44.450 --> 00:24:45.260
to get localized?

00:24:45.260 --> 00:24:47.360
And I remember you said
something like 10 seconds.

00:24:47.360 --> 00:24:48.710
It's like, 10 seconds is a lot.

00:24:48.710 --> 00:24:51.323
OK, what can we
do with that time?

00:24:51.323 --> 00:24:52.990
So we developed this
particular approach

00:24:52.990 --> 00:24:55.520
where we're having the user
fill in these 3D shapes

00:24:55.520 --> 00:24:56.990
as they look around.

00:24:56.990 --> 00:24:59.720
So that was OK, but
a few months passed,

00:24:59.720 --> 00:25:03.020
and our localization technology
was getting better and better.

00:25:03.020 --> 00:25:05.100
It wasn't taking
10 seconds anymore.

00:25:05.100 --> 00:25:07.545
In fact, in some cases, it
was taking less than 1 second.

00:25:07.545 --> 00:25:09.170
So we decided to go
back to the drawing

00:25:09.170 --> 00:25:11.660
board on this
particular interaction,

00:25:11.660 --> 00:25:14.120
and we developed what you
see here in the experience.

00:25:14.120 --> 00:25:17.360
We're simply asking users to
point their phones at buildings

00:25:17.360 --> 00:25:19.490
and signs across the street--

00:25:19.490 --> 00:25:22.580
something that we know often
yields quick localization.

00:25:22.580 --> 00:25:24.890
We have a little bit of
a moment of confirmation

00:25:24.890 --> 00:25:26.630
when we get that
good localization,

00:25:26.630 --> 00:25:30.620
but it's pretty straightforward.

00:25:30.620 --> 00:25:32.920
When working on the
path visualization,

00:25:32.920 --> 00:25:36.120
we are really excited about
this particular direction.

00:25:36.120 --> 00:25:37.730
The idea was that
the user would be

00:25:37.730 --> 00:25:41.330
able to follow the stream
of 3D particles all

00:25:41.330 --> 00:25:43.018
the way to their destination.

00:25:43.018 --> 00:25:44.060
It was going to be great.

00:25:44.060 --> 00:25:47.600
The stream of particles would be
able to flex in width depending

00:25:47.600 --> 00:25:50.570
on if we had good localization
or good data quality,

00:25:50.570 --> 00:25:52.850
providing specificity when
we had it, and vagueness

00:25:52.850 --> 00:25:53.990
when we didn't have it.

00:25:53.990 --> 00:25:56.720
We were super excited
to test this with users.

00:25:56.720 --> 00:26:00.320
So user testing came around,
put in front of people,

00:26:00.320 --> 00:26:02.510
and people hated it.

00:26:02.510 --> 00:26:05.450
The whole reason they wanted
to use AR in the first place

00:26:05.450 --> 00:26:07.790
was for that
specificity and clarity,

00:26:07.790 --> 00:26:11.240
not to be shown some weird,
vague path of particles.

00:26:11.240 --> 00:26:13.660
Plus, the motion
was distracting.

00:26:13.660 --> 00:26:15.740
Oh, and people didn't
think that these particles

00:26:15.740 --> 00:26:18.710
were lovely and
ethereal like we did.

00:26:18.710 --> 00:26:21.035
They literally
described them as trash.

00:26:21.035 --> 00:26:24.000
[LAUGHTER]

00:26:24.500 --> 00:26:26.810
So not wanting our
users to follow trash,

00:26:26.810 --> 00:26:29.670
we kept iterating.

00:26:29.670 --> 00:26:32.020
In a design sprint, we
started to gravitate around

00:26:32.020 --> 00:26:33.683
this particular direction.

00:26:33.683 --> 00:26:36.100
The idea was that we could
show a little bit of the 2D map

00:26:36.100 --> 00:26:38.950
in combination with the
AR view, the thinking

00:26:38.950 --> 00:26:41.260
being that for many
people, using AR walking

00:26:41.260 --> 00:26:44.170
navigation in Maps will be
their very first time using

00:26:44.170 --> 00:26:46.540
any sort of AR
experience, so providing

00:26:46.540 --> 00:26:49.705
some familiar elements can
actually be really helpful.

00:26:49.705 --> 00:26:51.580
It might be the case
that one day we take out

00:26:51.580 --> 00:26:53.800
the 2D map at the
bottom, but for now, it

00:26:53.800 --> 00:26:57.950
provides a really
good gut check.

00:26:57.950 --> 00:27:00.710
Our journey with AR walking
navigation in Google Maps

00:27:00.710 --> 00:27:03.560
is nowhere near done, but
we have learned a few things

00:27:03.560 --> 00:27:05.810
that we think will
be helpful for anyone

00:27:05.810 --> 00:27:07.520
who might be thinking
about designing

00:27:07.520 --> 00:27:10.430
an outdoor, world-scale
AR experience.

00:27:10.430 --> 00:27:13.400
This is by no means meant to be
a comprehensive or definitive

00:27:13.400 --> 00:27:15.440
list, but merely
a starting point.

00:27:15.440 --> 00:27:18.500
We know that as we roll out to
more people, we'll learn more,

00:27:18.500 --> 00:27:20.048
and we'll revisit
these principles.

00:27:20.048 --> 00:27:21.840
I'm just not going to
move from this slide.

00:27:21.840 --> 00:27:22.600
OK.

00:27:22.600 --> 00:27:24.882
We'll learn more, and we'll
revisit these principles.

00:27:24.882 --> 00:27:26.840
But I wanted to give you
a peek into what we're

00:27:26.840 --> 00:27:29.660
thinking so far.

00:27:29.660 --> 00:27:33.210
So the first principle is to
embrace the sense of immediacy.

00:27:33.210 --> 00:27:36.130
What do we mean by that?

00:27:36.130 --> 00:27:39.570
Well, when your AR environment
includes nearby buildings,

00:27:39.570 --> 00:27:42.990
buildings in the distance,
streets, sidewalks, and more,

00:27:42.990 --> 00:27:45.627
it can be really hard to
manage the user's attention--

00:27:45.627 --> 00:27:47.460
especially through this
narrow field of view

00:27:47.460 --> 00:27:48.630
of the smartphone--

00:27:48.630 --> 00:27:52.110
while also communicating
how far away something is.

00:27:52.110 --> 00:27:54.630
You're much better off
focusing the user's attention

00:27:54.630 --> 00:27:58.500
on one thing at a time, and
highlighting that focused area.

00:27:58.500 --> 00:28:01.920
You also want to consider how
you're representing things that

00:28:01.920 --> 00:28:05.580
are included to make it even
clearer what's near versus far,

00:28:05.580 --> 00:28:06.660
visible versus not.

00:28:09.970 --> 00:28:13.090
The next principle is to provide
grounding and glanceability.

00:28:15.710 --> 00:28:18.800
When doing those 120
plus prototype variants,

00:28:18.800 --> 00:28:20.390
we began to realize
that we needed

00:28:20.390 --> 00:28:25.860
to strike a certain visual
balance to be most helpful.

00:28:25.860 --> 00:28:28.470
The AR objects need to
simultaneously stand out

00:28:28.470 --> 00:28:30.540
from their
surroundings, but also

00:28:30.540 --> 00:28:32.520
be placed in a
particular location

00:28:32.520 --> 00:28:35.250
to provide maximum
clarity to users.

00:28:35.250 --> 00:28:38.190
So show me exactly where
that turn is, but stand out

00:28:38.190 --> 00:28:39.900
from the real world.

00:28:39.900 --> 00:28:42.720
This balance of providing
grounding, but also

00:28:42.720 --> 00:28:44.850
glanceability, might be
a little bit different

00:28:44.850 --> 00:28:47.640
than what you're used to seeing
in other AR applications, where

00:28:47.640 --> 00:28:50.640
the whole idea is to blend into
the environment-- like how you

00:28:50.640 --> 00:28:53.310
might want to try out that
AR lamp in your living room

00:28:53.310 --> 00:28:55.080
before you buy it,
or how you want

00:28:55.080 --> 00:28:57.240
that realistic dragon
to look like it's really

00:28:57.240 --> 00:28:59.190
flying in front of your friend.

00:28:59.190 --> 00:29:02.100
But for outdoor,
world-scale AR experiences

00:29:02.100 --> 00:29:05.700
specifically focused on utility
rather than entertainment,

00:29:05.700 --> 00:29:10.540
it's important to be both
grounded and glanceable.

00:29:10.540 --> 00:29:13.540
All right, the third principle
is to leverage the familiar.

00:29:17.460 --> 00:29:20.580
Google Maps has long been
a 2D experience focused

00:29:20.580 --> 00:29:22.910
on navigation and discovery.

00:29:22.910 --> 00:29:27.880
AR now makes up a very small
percentage of that experience.

00:29:27.880 --> 00:29:30.270
The familiar that we're
referring to in this principle

00:29:30.270 --> 00:29:32.970
is all the representations
in the 2D UI

00:29:32.970 --> 00:29:35.400
that users have become
used to over the years--

00:29:35.400 --> 00:29:37.560
things like the fact
that we use a red pin

00:29:37.560 --> 00:29:40.860
to represent the destination,
or a blue callout for upcoming

00:29:40.860 --> 00:29:42.690
turns.

00:29:42.690 --> 00:29:46.470
If we had reinvented how we
presented information in AR

00:29:46.470 --> 00:29:48.960
and come up with a
new visual metaphor,

00:29:48.960 --> 00:29:50.610
people would have
had to have gotten

00:29:50.610 --> 00:29:53.640
used to that new visual
metaphor in addition

00:29:53.640 --> 00:29:56.820
to getting used to the whole
interaction patterns with AR,

00:29:56.820 --> 00:29:59.850
and that would have been
a lot to ask of people.

00:29:59.850 --> 00:30:01.470
All right, so our
last principle is

00:30:01.470 --> 00:30:03.990
one that extends
beyond UX design

00:30:03.990 --> 00:30:07.525
and has important, but
practical product implications.

00:30:07.525 --> 00:30:09.150
So I'm going to pass
it back to Joanna,

00:30:09.150 --> 00:30:11.692
and she's going to tell you a
little bit more about our last,

00:30:11.692 --> 00:30:15.060
and arguably most
important principle.

00:30:15.060 --> 00:30:18.490
[APPLAUSE]

00:30:19.470 --> 00:30:21.820
JOANNA KIM: Thanks, Rachel.

00:30:21.820 --> 00:30:24.370
So as Rachel just showed,
crafting this experience

00:30:24.370 --> 00:30:27.880
required considerations that go
far beyond the traditional 2D

00:30:27.880 --> 00:30:30.460
or web application,
and it introduced a lot

00:30:30.460 --> 00:30:32.830
of new and complex questions.

00:30:32.830 --> 00:30:34.300
When we first
started this project,

00:30:34.300 --> 00:30:36.280
we all envisioned
an AR mode where

00:30:36.280 --> 00:30:38.470
a user would both start
and end their journey,

00:30:38.470 --> 00:30:40.610
all while using the camera.

00:30:40.610 --> 00:30:42.250
But as we continued
to develop, we

00:30:42.250 --> 00:30:45.550
realized that this was
actually a really bad idea.

00:30:45.550 --> 00:30:48.640
For starters, people have a
lot of trouble paying attention

00:30:48.640 --> 00:30:51.250
to their surroundings if they're
only looking at the world

00:30:51.250 --> 00:30:53.360
through this small screen.

00:30:53.360 --> 00:30:56.140
In fact, people are often
overconfident in this regard,

00:30:56.140 --> 00:30:58.540
because they think that
by having the camera view,

00:30:58.540 --> 00:31:00.850
it actually erases the
negative effects of looking

00:31:00.850 --> 00:31:04.340
at your phone, but that's
definitely not the case.

00:31:04.340 --> 00:31:06.020
So we needed to
build in safeguards

00:31:06.020 --> 00:31:09.350
to effectively prevent people
from walking into a pole,

00:31:09.350 --> 00:31:12.050
or worse, the street.

00:31:12.050 --> 00:31:14.030
We did a lot of
experimentation to try

00:31:14.030 --> 00:31:17.323
to see what would work best
for this type of problem.

00:31:17.323 --> 00:31:18.740
In the beginning,
we actually just

00:31:18.740 --> 00:31:20.810
tried punting them
back to the 2D map

00:31:20.810 --> 00:31:22.670
once they started
walking, but it actually

00:31:22.670 --> 00:31:26.790
made them think that the
AR feature was broken.

00:31:26.790 --> 00:31:28.700
We also tried a pop-up
method, like you

00:31:28.700 --> 00:31:31.870
might see in some
other applications,

00:31:31.870 --> 00:31:36.230
but they said that they found
it obtrusive and annoying.

00:31:36.230 --> 00:31:37.940
We also tried
blurring the screen

00:31:37.940 --> 00:31:40.850
based on the amount of time
that they'd been in AR,

00:31:40.850 --> 00:31:44.480
but that didn't
really work either.

00:31:44.480 --> 00:31:46.650
Our current solution
looks like this.

00:31:46.650 --> 00:31:48.680
If a user starts
walking while using AR,

00:31:48.680 --> 00:31:51.710
we'll first ask really
nicely to pay attention

00:31:51.710 --> 00:31:53.960
by using a subtle
message at the top.

00:31:53.960 --> 00:31:56.120
If they continue, we'll
be a bit more insistent,

00:31:56.120 --> 00:31:59.030
with a full-screen overlay
that effectively prevents them

00:31:59.030 --> 00:32:01.780
from continuing to use AR.

00:32:01.780 --> 00:32:03.950
The feedback has
admittedly been mixed,

00:32:03.950 --> 00:32:07.220
with some people who find
it still too obtrusive,

00:32:07.220 --> 00:32:10.430
while others express gratitude
for the reminder to actually

00:32:10.430 --> 00:32:12.357
pay better attention.

00:32:12.357 --> 00:32:13.940
We know that we won't
please everyone,

00:32:13.940 --> 00:32:15.350
but it was really
important to us

00:32:15.350 --> 00:32:17.480
to try to build in
the right affordances

00:32:17.480 --> 00:32:20.690
to nudge people to be safe,
and ultimately just enjoy

00:32:20.690 --> 00:32:23.840
more of the world around them.

00:32:23.840 --> 00:32:26.910
We think that this design is
a step in the right direction,

00:32:26.910 --> 00:32:29.450
but if it's not, we'll
start again from scratch.

00:32:29.450 --> 00:32:30.890
Because at the
end of the day, we

00:32:30.890 --> 00:32:33.650
want to make sure that our
experience is not only helpful,

00:32:33.650 --> 00:32:36.770
but also responsibly designed.

00:32:36.770 --> 00:32:39.670
As you think about creating your
own world-scale AR experiences,

00:32:39.670 --> 00:32:41.420
we highly encourage
you to think about all

00:32:41.420 --> 00:32:43.712
the different environments
a user might find themselves

00:32:43.712 --> 00:32:45.963
in, and help build in
those right affordances

00:32:45.963 --> 00:32:48.380
to make sure that they're using
the experience in the most

00:32:48.380 --> 00:32:49.190
responsible way.

00:32:51.950 --> 00:32:54.620
Encouraging momentary uses
of AR versus one long,

00:32:54.620 --> 00:32:57.730
continuous path also
helps with battery usage.

00:32:57.730 --> 00:33:01.590
So as Jeremy mentioned, using
the camera is really expensive.

00:33:01.590 --> 00:33:04.400
But on the flip side,
using the camera more often

00:33:04.400 --> 00:33:06.350
actually results, often,
in better tracking

00:33:06.350 --> 00:33:08.840
and faster relocalization.

00:33:08.840 --> 00:33:10.880
Truly solving this
particular problem

00:33:10.880 --> 00:33:12.830
requires hardware
innovations that will

00:33:12.830 --> 00:33:14.810
take some time to be realized.

00:33:14.810 --> 00:33:18.500
But what we can do, as
product teams and developers,

00:33:18.500 --> 00:33:20.990
is encourage user
interaction patterns that

00:33:20.990 --> 00:33:24.560
help mitigate these efforts.

00:33:24.560 --> 00:33:27.080
Therefore, the last principle
that we wanted to emphasize

00:33:27.080 --> 00:33:30.400
is keep AR moments
short and assistive.

00:33:30.400 --> 00:33:32.570
In some of these earlier
builds, we actually

00:33:32.570 --> 00:33:34.520
presented all of the
information that you

00:33:34.520 --> 00:33:37.490
might find on a 2D Google
Maps view and the AR view--

00:33:37.490 --> 00:33:40.610
things like time and
distance to destination.

00:33:40.610 --> 00:33:43.015
And while that information
is undoubtedly useful,

00:33:43.015 --> 00:33:45.140
we realized that it was
actually encouraging people

00:33:45.140 --> 00:33:47.930
to stay in AR for
longer periods of time

00:33:47.930 --> 00:33:49.378
than they actually needed.

00:33:49.378 --> 00:33:51.920
We basically want to encourage
people to just use it for when

00:33:51.920 --> 00:33:53.990
they want those glanceable--

00:33:53.990 --> 00:33:56.150
that that visual information.

00:33:56.150 --> 00:33:58.790
And then for everything else,
send them back to the 2D map,

00:33:58.790 --> 00:34:01.080
or encourage them to
put their phones away.

00:34:01.080 --> 00:34:02.750
They don't really
need AR just to know

00:34:02.750 --> 00:34:08.550
that they need to walk five
minutes straight, right?

00:34:08.550 --> 00:34:11.280
So just to summarize, here
are the four principles

00:34:11.280 --> 00:34:12.929
that we talked about today--

00:34:12.929 --> 00:34:17.310
1, embrace the sense
of immediacy, 2,

00:34:17.310 --> 00:34:20.820
provide grounding
and glanceability, 3,

00:34:20.820 --> 00:34:23.520
leverage the
familiar, and 4, keep

00:34:23.520 --> 00:34:25.830
AR moments short and assistive.

00:34:25.830 --> 00:34:27.875
It's definitely not
a comprehensive list,

00:34:27.875 --> 00:34:30.250
but they're all things that
we had to learn the hard way,

00:34:30.250 --> 00:34:32.429
so we hope that you
enjoy them, because we

00:34:32.429 --> 00:34:36.969
had to fail a lot of times
to actually get to this.

00:34:36.969 --> 00:34:38.650
All right, so we
talked a lot today

00:34:38.650 --> 00:34:41.050
about why it's so
hard and challenging

00:34:41.050 --> 00:34:43.668
to make this experience
work well everywhere,

00:34:43.668 --> 00:34:46.210
but now I want to talk a little
bit about how we're balancing

00:34:46.210 --> 00:34:49.090
getting that real-world feedback
needed to actually improve

00:34:49.090 --> 00:34:51.820
the experience, with making
sure that it's robust enough

00:34:51.820 --> 00:34:54.130
to add value.

00:34:54.130 --> 00:34:56.409
Normally at Google, we
dogfood all of our products,

00:34:56.409 --> 00:34:59.050
meaning we basically have
Google just test and use it

00:34:59.050 --> 00:35:01.070
and provide feedback.

00:35:01.070 --> 00:35:03.820
However, we don't have Google
offices in all of the areas

00:35:03.820 --> 00:35:05.530
that we have Street View.

00:35:05.530 --> 00:35:07.630
Also, the world
changes really rapidly,

00:35:07.630 --> 00:35:09.460
like Jeremy was
talking about before,

00:35:09.460 --> 00:35:11.350
and it's just not
scalable to continuously

00:35:11.350 --> 00:35:16.180
collect Street View on a monthly
basis all over the world.

00:35:16.180 --> 00:35:18.760
Getting this experience and
the underlying technology right

00:35:18.760 --> 00:35:21.820
requires real-world
testing by a diverse set

00:35:21.820 --> 00:35:24.657
of users in all the locations
we hope to launch it in.

00:35:24.657 --> 00:35:26.740
But we also didn't want
to roll it out too quickly

00:35:26.740 --> 00:35:29.950
and see the headline, "Google
Maps Launches Useless AR

00:35:29.950 --> 00:35:32.110
Feature."

00:35:32.110 --> 00:35:35.230
So that's why, earlier
this year, we actually

00:35:35.230 --> 00:35:38.080
enlisted our most ardent
Google Maps fans--

00:35:38.080 --> 00:35:41.110
local guides-- any local guides
in the audience here today?

00:35:43.850 --> 00:35:47.050
So we're really lucky to have
a community of Google Maps fans

00:35:47.050 --> 00:35:50.740
who are willing to take some
of our most nascent experiences

00:35:50.740 --> 00:35:52.240
and test them out
in the real world,

00:35:52.240 --> 00:35:55.012
and provide really
valuable feedback to us.

00:35:55.012 --> 00:35:56.470
Over the last
several months, we've

00:35:56.470 --> 00:35:58.780
had local guides all
around the world tell us

00:35:58.780 --> 00:36:01.360
how AR was able to
help them figure out

00:36:01.360 --> 00:36:04.030
which way to go when they're
exiting the tube in London,

00:36:04.030 --> 00:36:07.030
or explore a rural
area of Sri Lanka,

00:36:07.030 --> 00:36:10.570
or find that nondescript
office building in Ghana.

00:36:10.570 --> 00:36:12.610
At the same time,
they've also told us

00:36:12.610 --> 00:36:15.100
how we've missed
opportunities to route them

00:36:15.100 --> 00:36:18.490
on walking paths, how it
can use a lot of battery,

00:36:18.490 --> 00:36:23.680
and how sometimes, those bright,
big, 3D arrows scare them

00:36:23.680 --> 00:36:26.440
when they pop up too suddenly.

00:36:26.440 --> 00:36:28.300
So we clearly have
a lot of work to do,

00:36:28.300 --> 00:36:31.330
but we're really thankful to
have this community of users

00:36:31.330 --> 00:36:36.680
stick by us as we try to improve
and create the future of Maps.

00:36:36.680 --> 00:36:39.110
All right, so what's next?

00:36:39.110 --> 00:36:41.760
We know that walking is
not confined to daytime--

00:36:41.760 --> 00:36:44.330
as convenient as that
would make our jobs--

00:36:44.330 --> 00:36:47.120
and so we're exploring new
ways where we can assist users

00:36:47.120 --> 00:36:48.107
better at night.

00:36:48.107 --> 00:36:50.190
It's a really hard
[? compute ?] division problem,

00:36:50.190 --> 00:36:53.360
but one that we're really
motivated to try to solve.

00:36:53.360 --> 00:36:55.328
We also want to expand
Street View coverage

00:36:55.328 --> 00:36:56.870
so that we can enable
this experience

00:36:56.870 --> 00:36:59.330
in more areas across the world.

00:36:59.330 --> 00:37:00.830
And ultimately, we
know that we need

00:37:00.830 --> 00:37:04.520
to get better at localizing
users faster and more reliably.

00:37:07.110 --> 00:37:10.320
But like I said earlier,
improving this experience

00:37:10.320 --> 00:37:13.300
requires knowing when and
where we fail to be useful,

00:37:13.300 --> 00:37:15.930
and then investigating
the causes why.

00:37:15.930 --> 00:37:18.360
That's why yesterday, we were
really excited to announce

00:37:18.360 --> 00:37:20.980
that we'll actually be expanding
the experience to all Pixel

00:37:20.980 --> 00:37:21.480
users.

00:37:24.190 --> 00:37:26.410
Our goal is to expand this
experience as widely as

00:37:26.410 --> 00:37:28.360
possible, but we
want to balance that

00:37:28.360 --> 00:37:30.280
with making sure that
we're adding value

00:37:30.280 --> 00:37:32.270
and making a good
first impression.

00:37:32.270 --> 00:37:34.870
So we'll be working with both
our local guides community

00:37:34.870 --> 00:37:38.380
and Pixel users to make sure
that we're continuing to shape

00:37:38.380 --> 00:37:41.860
and improve this experience.

00:37:41.860 --> 00:37:43.870
Thank you so much for
coming to our talk today.

00:37:43.870 --> 00:37:46.220
I can't wait to see what
all of you guys build.

00:37:46.220 --> 00:37:47.830
And if you have any
questions, we'll

00:37:47.830 --> 00:37:50.570
just be off to the side of the
stage, and our happy to chat.

00:37:50.570 --> 00:37:51.170
[APPLAUSE]

00:37:51.170 --> 00:37:53.920
[MUSIC PLAYING]

