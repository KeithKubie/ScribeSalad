WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:02.860
Let's walk through the code you wrote to complete the mapper function.

00:00:04.000 --> 00:00:09.000
First, we create an array data, which splits each row of data on the comma.

00:00:10.670 --> 00:00:13.030
If the length of the data array is not equal to 12,

00:00:13.030 --> 00:00:16.309
which is what we expect given our aadhaar data.

00:00:16.309 --> 00:00:19.180
Or the first entry is equal to registrar,

00:00:19.180 --> 00:00:21.880
which would indicate that this is the header row.

00:00:21.880 --> 00:00:23.230
We continue on the the next row.

00:00:24.230 --> 00:00:27.830
Otherwise, we print the district and

00:00:27.830 --> 00:00:31.440
the number of aadhaar generated separated by a tab.

00:00:31.440 --> 00:00:33.810
Now, let's talk about the reducer function.

00:00:33.810 --> 00:00:38.334
Recall that our reducer function will consume the key value pairs emitted by

00:00:38.334 --> 00:00:39.119
our mapper.

00:00:39.119 --> 00:00:41.876
So we create and array data for every single line,

00:00:41.876 --> 00:00:46.665
which will essentially be of length of two containing the key and the value.

00:00:46.665 --> 00:00:50.590
Note that we split on the tab, which we input into the output of our mapper.

00:00:51.760 --> 00:00:56.690
If for some reason data is less than or greater than length two, we continue on.

00:00:56.690 --> 00:01:00.080
There's something wrong with this key value pair and we shouldn't process it.

00:01:00.080 --> 00:01:01.640
Next, we set this key and

00:01:01.640 --> 00:01:05.940
count equal to the key and number of aadhaar generated in data.

00:01:05.940 --> 00:01:09.937
Recall that the reducer receives the key value pair sorted by key.

00:01:09.937 --> 00:01:14.370
So if this is a new key, let's submit the final key value pair.

00:01:14.370 --> 00:01:19.160
The key and the total number of aadhaar generated, separated by a tab.

00:01:19.160 --> 00:01:22.471
Then let's set aadhaar generated equal to zero.

00:01:22.471 --> 00:01:25.443
Otherwise, let's add the number of aadhaar generated in

00:01:25.443 --> 00:01:29.265
this particular key value pair to the total number of aadhaar generated for

00:01:29.265 --> 00:01:32.640
this key and let's continue onto the next value.

00:01:32.640 --> 00:01:36.210
We include this last if clause for the last key in our data.

00:01:36.210 --> 00:01:38.930
Because there's no next key after the last key.

00:01:38.930 --> 00:01:41.900
If we didn't have this, we would not admit a key value pair for

00:01:41.900 --> 00:01:44.160
the final key in our intermediate data.

00:01:45.260 --> 00:01:48.970
So here after we've done all this other processing up here, we just say for

00:01:48.970 --> 00:01:52.055
the last key, hey, let's make sure we emit the key value pair.

