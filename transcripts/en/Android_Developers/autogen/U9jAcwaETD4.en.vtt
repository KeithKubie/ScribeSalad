WEBVTT
Kind: captions
Language: en

00:00:08.500 --> 00:00:13.840
 Hello Andre Bandrod Developer Relations Team's Developer Program 

00:00:13.210 --> 00:00:19.930
 ng 

00:00:13.840 --> 00:00:24.580
 Today is the back of the sweet chocolate of Android 4.4 

00:00:19.930 --> 00:00:28.869
 We're here to introduce you to new features. 

00:00:24.580 --> 00:00:34.480
 Kiki's overseas version number is only a single decimal point. 

00:00:28.869 --> 00:00:37.920
 In fact, a lot of features have been added between these little changes. 

00:00:34.480 --> 00:00:43.149
 Old jellybean version of the sentence to express a word like butter 

00:00:37.920 --> 00:00:44.440
 If it was Android, then this keycap version is Android for everyone. 

00:00:43.149 --> 00:00:49.570
 I will. 

00:00:44.440 --> 00:00:54.489
 I've put a lot of effort into optimizing the memory, 

00:00:49.570 --> 00:00:57.700
 Designed to run smoothly even on low-end devices 

00:00:54.489 --> 00:01:02.110
 Also for application developers 

00:00:57.700 --> 00:01:06.729
 You can use api and memory to check whether the device is low memory. 

00:01:02.110 --> 00:01:10.600
 Added 2 to check if you are using it effectively 

00:01:06.729 --> 00:01:11.979
 Newly added Activities Manager's 2 weeks 

00:01:10.600 --> 00:01:16.420
 If you use 

00:01:11.979 --> 00:01:19.659
 Based on the method results, you can change the behavior of a particular feature 

00:01:16.420 --> 00:01:23.170
 You can disable it altogether 

00:01:19.659 --> 00:01:27.400
 A feature that requires a lot of memory is a device that uses less memory. 

00:01:23.170 --> 00:01:30.460
 It can be a feature that users simply do not have 

00:01:27.400 --> 00:01:32.320
 Of course, removing the feature is the last choice 

00:01:30.460 --> 00:01:36.479
 Previously 

00:01:32.320 --> 00:01:40.810
 First of all, if you look at the managing um memory entry in the Android developer documentation 

00:01:36.479 --> 00:01:42.040
 You can find useful tips on optimizing your application's memory usage. 

00:01:40.810 --> 00:01:47.350
 There is 

00:01:42.040 --> 00:01:50.050
 However, before your app's memory usage improves, 

00:01:47.350 --> 00:01:54.399
 You need to check how much you're using 

00:01:50.050 --> 00:01:57.640
 The newly added Proxy text allows the application to 

00:01:54.399 --> 00:02:02.500
 You can see at a glance whether you are using 

00:01:57.640 --> 00:02:03.580
 The proxy th tool can be run as db cetace ss prox ts command 

00:02:02.500 --> 00:02:07.720
 There is 

00:02:03.580 --> 00:02:12.610
 Command line tree There may be burdened people There is no need to worry 

00:02:07.720 --> 00:02:16.930
 Talk to Android Keti or go to the developer option of the emulator 

00:02:12.610 --> 00:02:18.340
 The memory profile of the application can be identified by a menu of statistics 

00:02:16.930 --> 00:02:22.810
 Added 

00:02:18.340 --> 00:02:25.450
 If you press it, system memory summary information and running for more than a certain time 

00:02:22.810 --> 00:02:29.920
 You can see a list of processes 

00:02:25.450 --> 00:02:33.580
 The blue half is relative to the upper right corner of the memory usage 

00:02:29.920 --> 00:02:38.380
 Indicates the percentage of processes running in the background 

00:02:33.580 --> 00:02:42.579
 When you touch an app in the list, the average used during this app 

00:02:38.380 --> 00:02:45.910
 And the maximum listing is well summarized in this information 

00:02:42.579 --> 00:02:49.750
 Not all changes to the ticket go to memory 

00:02:45.910 --> 00:02:51.190
 A new way to create beautiful Android apps is also easy 

00:02:49.750 --> 00:02:52.850
 Added 

00:02:51.190 --> 00:02:56.300
 first 

00:02:52.850 --> 00:03:01.460
 The Android design guidelines have been updated 

00:02:56.300 --> 00:03:04.520
 Developers can create a cool, core app and give users a magical experience 

00:03:01.460 --> 00:03:09.290
 It contains information on how you can provide 

00:03:04.520 --> 00:03:11.150
 For more information, see the recently updated Anjouide design action video 

00:03:09.290 --> 00:03:14.170
 Please take a look 

00:03:11.150 --> 00:03:18.310
 Looking at api 

00:03:14.170 --> 00:03:23.230
 A full scan to fill the entire screen 2 Clean up the scene with the chewing mode 

00:03:18.310 --> 00:03:27.489
 Movable Team Diction Primer The subtitle feature that many people are waiting for 

00:03:23.230 --> 00:03:31.180
 New tools have been added to easily record on screen 

00:03:27.489 --> 00:03:36.670
 With the new fullscreen Mercury model, 

00:03:31.180 --> 00:03:40.959
 Literally from the end of the screen to the system state and the navigation bar 

00:03:36.670 --> 00:03:44.200
 You can implement a full-screen ui with the system and the juxtaposition removed 

00:03:40.959 --> 00:03:49.360
 To express visually rich content 

00:03:44.200 --> 00:03:50.500
 For example, it might be a perfect fit for a photo hate or a pre-map game. 

00:03:49.360 --> 00:03:54.459
 Will 

00:03:50.500 --> 00:03:57.220
 This new mode is available via a simple flag 

00:03:54.459 --> 00:04:01.959
 I am a c9 stethki flag. 

00:03:57.220 --> 00:04:06.580
 It is also easy to use. 

00:04:01.959 --> 00:04:09.130
 This is the code that hides or reappears the child or after chewing tk 

00:04:06.580 --> 00:04:14.920
 You can also use the flag 

00:04:09.130 --> 00:04:18.549
 In this case, if a certain time has elapsed or the user touches the screen, 

00:04:14.920 --> 00:04:23.020
 ui disappears and is converted to full screen mode 

00:04:18.549 --> 00:04:27.220
 If you want to know more about all of the new full screen is easy 

00:04:23.020 --> 00:04:30.100
 Romanian glass dog chewed Owl looks at mode Daewoo Bytes video 

00:04:27.220 --> 00:04:34.270
 I recommend you take a look 

00:04:30.100 --> 00:04:36.070
 To make it easy for developers to apply cool animations, Android 4.4 

00:04:34.270 --> 00:04:39.850
 In 

00:04:36.070 --> 00:04:41.229
 Cutaway animation is a new kind of frenzy shampoo that you can perform 

00:04:39.850 --> 00:04:45.220
 Added 

00:04:41.229 --> 00:04:46.780
 Use animation to inform the user of ui's state change. 

00:04:45.220 --> 00:04:50.800
 There are a lot of cases 

00:04:46.780 --> 00:04:54.789
 This is especially true if the features supported by each state are different. 

00:04:50.800 --> 00:04:56.730
 You can use the new trendy chapter framework to set the scene 

00:04:54.789 --> 00:05:01.560
 There is 

00:04:56.730 --> 00:05:03.150
 The scene is a transition between this particular b5 hierarchy and the night scene, 

00:05:01.560 --> 00:05:08.040
 It consists of information 

00:05:03.150 --> 00:05:09.690
 In the transition state, the animation information used when entering or exiting the scene 

00:05:08.040 --> 00:05:14.389
 Included 

00:05:09.690 --> 00:05:19.380
 You can select one of several predefined transition types 

00:05:14.389 --> 00:05:22.460
 Or you can choose auto transition type to play with Android 

00:05:19.380 --> 00:05:27.870
 You can also apply the appropriate animation 

00:05:22.460 --> 00:05:29.610
 Like the magic, the bureau has reduced the size or the size of the deformed or deformed position 

00:05:27.870 --> 00:05:34.050
 I will do it. 

00:05:29.610 --> 00:05:36.840
 Of course, you can move the most appropriate aging, 

00:05:34.050 --> 00:05:40.979
 You can also apply animation styles 

00:05:36.840 --> 00:05:46.320
 For more information on the new transition framework, 

00:05:40.979 --> 00:05:51.630
 Please refer to the video of DebutByte 

00:05:46.320 --> 00:05:54.300
 System preference options have also been added to improve Android accessibility 

00:05:51.630 --> 00:05:59.300
 It's about captioning. 

00:05:54.300 --> 00:05:59.300
 This can be especially useful for Korean developers 

00:05:59.539 --> 00:06:09.470
 Developers can use the newly added Capture Manager to 

00:06:03.800 --> 00:06:13.729
 You can tell if you want to place subtitles and position, 

00:06:09.470 --> 00:06:18.380
 Only to add to the video video view in the web vtt format subtitle file streamer 

00:06:13.729 --> 00:06:19.610
 Screen caption is automatically set based on the user's preference value. 

00:06:18.380 --> 00:06:24.889
 Is displayed 

00:06:19.610 --> 00:06:27.380
 For more details, please see the treatment of Allen Librett 

00:06:24.889 --> 00:06:31.729
 Please refer to the byte video 

00:06:27.380 --> 00:06:35.060
 You are holding the video camera steady to capture the app demo video. 

00:06:31.729 --> 00:06:38.780
 There are a lot of people who have had a hard time. 

00:06:35.060 --> 00:06:42.830
 You seem to like the newly added screen recording frame very much 

00:06:38.780 --> 00:06:44.479
 You can record the scene using the device as an mp4 format video file. 

00:06:42.830 --> 00:06:48.500
 You can save 

00:06:44.479 --> 00:06:51.830
 It is possible to record any device and the aspect ratio of the recorded video image is 

00:06:48.500 --> 00:06:56.840
 The device screen analogy remains the same 

00:06:51.830 --> 00:07:01.820
 This cool new feature can be run through the adb shell screen record command 

00:06:56.840 --> 00:07:03.800
 The clutter is also available through the DMS panel in Clichy and Android Studios. 

00:07:01.820 --> 00:07:06.949
 Can be used 

00:07:03.800 --> 00:07:11.790
 Another Android 4.4 

00:07:06.949 --> 00:07:16.500
 Storage-related features have also been added 

00:07:11.790 --> 00:07:19.239
 The storage access framework has been added, and officially sms content 

00:07:16.500 --> 00:07:24.729
 Providers are supported 

00:07:19.239 --> 00:07:29.469
 Through the storage access framework, users can access data stored 

00:07:24.729 --> 00:07:30.639
 You can easily access all of the document image files that exist on the cloud. 

00:07:29.469 --> 00:07:35.289
 can 

00:07:30.639 --> 00:07:39.549
 If you are creating an application that handles documents quickly 

00:07:35.289 --> 00:07:44.139
 Through the crates document or the open document tent, 

00:07:39.549 --> 00:07:47.919
 Storage companies can interlock with spraying users can use the system ui 

00:07:44.139 --> 00:07:50.529
 You can increase the number of files provided by the promoter through 

00:07:47.919 --> 00:07:55.569
 You can create a new file 

00:07:50.529 --> 00:07:59.259
 The results are available through the activity Regents callback 

00:07:55.569 --> 00:08:02.349
 If you want to add a new storage provider 

00:07:59.259 --> 00:08:06.249
 I need to get a new reach Montfort provider 

00:08:02.349 --> 00:08:10.839
 The following four methods can be overridden to represent a file. 

00:08:06.249 --> 00:08:11.769
 You can browse, read and save any data you want 

00:08:10.839 --> 00:08:16.059
 There is 

00:08:11.769 --> 00:08:18.939
 And the most recent keynote permission in the manifest file, 

00:08:16.059 --> 00:08:22.899
 I need to add a provider intent filter 

00:08:18.939 --> 00:08:26.969
 When the app is installed, this new provider is automatically registered and the user 

00:08:22.899 --> 00:08:31.989
 When you want to read or create a file using the storage access framework 

00:08:26.969 --> 00:08:35.840
 System ui allows access to new providers 

00:08:31.989 --> 00:08:39.170
 Expensive meetings of my development team 

00:08:35.840 --> 00:08:42.740
 How to create a new provider 

00:08:39.170 --> 00:08:43.790
 We've got a Daewoo video on how to take advantage of the Stories access framework. 

00:08:42.740 --> 00:08:47.390
 I prepared 

00:08:43.790 --> 00:08:53.210
 For more information, please see the video 

00:08:47.390 --> 00:08:58.640
 Until now, we've opened a lot of sms-based 

00:08:53.210 --> 00:09:00.230
 Now that you've created your app, you can edit it to take advantage of the new official API 

00:08:58.640 --> 00:09:05.180
 It's time to 

00:09:00.230 --> 00:09:09.530
 For the TKE, the content provider for sms will finally 

00:09:05.180 --> 00:09:11.510
 The ability to set up your own default messaging app 

00:09:09.530 --> 00:09:18.960
 Added 

00:09:11.510 --> 00:09:22.740
 When you receive the message, the system will forward it to your default messaging app. 

00:09:18.960 --> 00:09:26.940
 A new intent called sms debugger is used 

00:09:22.740 --> 00:09:31.380
 Except for the default app, other apps, like previous ones, 

00:09:26.940 --> 00:09:32.610
 You can check the received message and read the message through the sms provider 

00:09:31.380 --> 00:09:37.800
 Can see 

00:09:32.610 --> 00:09:40.230
 However, only the user-specified default new messages are sent to the ms provider 

00:09:37.800 --> 00:09:44.190
 You can write directly on 

00:09:40.230 --> 00:09:48.450
 It's possible to send a message even if it's not your default app. 

00:09:44.190 --> 00:09:51.720
 The Android Android system replaces the message in the ms provider 

00:09:48.450 --> 00:09:56.460
 You can add and write in other apps 

00:09:51.720 --> 00:10:01.920
 You can check out the default messaging app for future messaging apps 

00:09:56.460 --> 00:10:04.950
 For more information, please see Adam's Loan Byte video 

00:10:01.920 --> 00:10:10.170
 And in Android 4.4 

00:10:04.950 --> 00:10:12.420
 A new feature that helps applications interact with the real world 

00:10:10.170 --> 00:10:17.010
 Added a lot 

00:10:12.420 --> 00:10:21.330
 Bluetooth hid for peripherals such as mouse joystick keyboard 

00:10:17.010 --> 00:10:24.030
 For over-watch tt profile and near-term message representation 

00:10:21.330 --> 00:10:28.980
 Supports Bluetooth map profile 

00:10:24.030 --> 00:10:30.330
 And an api to support the infrared receiver built into the device 

00:10:28.980 --> 00:10:34.710
 Added 

00:10:30.330 --> 00:10:36.840
 infrared receiver via APi Station and supporting frequency band still 

00:10:34.710 --> 00:10:40.650
 I can see the information. 

00:10:36.840 --> 00:10:45.780
 You can also transmit infrared signals directly. 

00:10:40.650 --> 00:10:50.460
 Post card emulation, hc 

00:10:45.780 --> 00:10:55.620
 Built-in fc card payment and membership card without the security elements 

00:10:50.460 --> 00:10:58.020
 The process of transmitting and receiving nfc-based data such as traffic cards 

00:10:55.620 --> 00:11:03.060
 Can be expressed to handle 

00:10:58.020 --> 00:11:06.990
 In addition, to support the new feel mode, 

00:11:03.060 --> 00:11:08.130
 The application can be implemented to read the transition information of the nfc card. 

00:11:06.990 --> 00:11:14.280
 There is 

00:11:08.130 --> 00:11:16.050
 Android h is smart card that complies with iso 7816 standard 

00:11:14.280 --> 00:11:21.930
 Can emulate 

00:11:16.050 --> 00:11:26.640
 At the time of data transaction, it is strict 4443 protocol 4 again 

00:11:21.930 --> 00:11:31.230
 When determining which trench transition is forwarded to an app, the iso 

00:11:26.640 --> 00:11:34.470
 7816 Actually sociable application follows the identity fire standard 

00:11:31.230 --> 00:11:39.150
 And for Kiki, 

00:11:34.470 --> 00:11:44.410
 Supports printer features. Wi-Fi virtue is like a Google Cland 

00:11:39.150 --> 00:11:48.519
 Added api to control cloud-based printers 

00:11:44.410 --> 00:11:52.689
 With this new pens apr you can express it as an Android canvas 

00:11:48.519 --> 00:11:57.220
 You can easily output all kinds of content 

00:11:52.689 --> 00:12:01.619
 Android is using pdf as the default file format for printing 

00:11:57.220 --> 00:12:06.489
 The image is converted into a bitmap and output using the focus helper class 

00:12:01.619 --> 00:12:10.720
 Content can be converted to pdf divided into pages and output 

00:12:06.489 --> 00:12:12.249
 E-cube and WebView-based 

00:12:10.720 --> 00:12:16.480
 ui is provided 

00:12:12.249 --> 00:12:20.709
 Of course, if you know how to draw the content, 

00:12:16.480 --> 00:12:23.579
 You can also draw content on the canvas and use it as a pdf 

00:12:20.709 --> 00:12:23.579
 Naz is far away 

00:12:23.650 --> 00:12:29.470
 How to use the panning feature in Android on Devvyte Video 

00:12:27.250 --> 00:12:34.060
 I have compiled the contents 

00:12:29.470 --> 00:12:36.760
 Kiki can improve the battery efficiency of applications that utilize sensors. 

00:12:34.060 --> 00:12:40.750
 All the batches have been added 

00:12:36.760 --> 00:12:46.090
 Batch mode allows you to play your app every time there is a 

00:12:40.750 --> 00:12:50.920
 It collects the results for a certain period of time and delivers the application. Therefore, 

00:12:46.090 --> 00:12:52.180
 An app process can remain in a low-power state until it receives placement results. 

00:12:50.920 --> 00:12:56.530
 There is 

00:12:52.180 --> 00:12:59.340
 You can adjust the interval at which you will receive the results, and if necessary 

00:12:56.530 --> 00:13:03.160
 You can request data directly at any time 

00:12:59.340 --> 00:13:08.050
 Two new sensors have been added 

00:13:03.160 --> 00:13:13.000
 The step detection sensor can detect the moment when the user starts to walk, 

00:13:08.050 --> 00:13:17.350
 The counting sensor can measure the number of steps you take like a network view 

00:13:13.000 --> 00:13:18.580
 2 Sensor Module To minimize battery usage, 

00:13:17.350 --> 00:13:25.620
 There is 

00:13:18.580 --> 00:13:25.620
 So far, we have a quick look at the new api 

00:13:26.040 --> 00:13:35.520
 There are a few big changes being made besides Android Kiki 

00:13:30.390 --> 00:13:39.839
 First, the clone is based on a moth project, and a map bone matt has been newly implemented 

00:13:35.520 --> 00:13:44.760
 Equipped with the same level of performance and compatibility as the Android Chrome browser 

00:13:39.839 --> 00:13:45.750
 Supports html5 standard technologies and includes v8 JavaScript engine 

00:13:44.760 --> 00:13:51.900
 There is 

00:13:45.750 --> 00:13:55.230
 Also look out for other characters that are written from right to left 

00:13:51.900 --> 00:14:00.000
 An API has been added for convenient support 

00:13:55.230 --> 00:14:01.260
 Mirroring is a function of the Pseudo-Locale for only minutes to auto-mirroring 

00:14:00.000 --> 00:14:05.940
 When you declare 

00:14:01.260 --> 00:14:08.430
 Users who have selected 15k for sickness will automatically 

00:14:05.940 --> 00:14:13.080
 I lend it to you on the screen. 

00:14:08.430 --> 00:14:17.940
 You do not need to have a duplicate list to support the sick environment. 

00:14:13.080 --> 00:14:19.529
 Using the Alkie idle roadkel feature, devices can be 

00:14:17.940 --> 00:14:24.060
 Layout changes to 

00:14:19.529 --> 00:14:25.860
 This allows you to lay out your layout without having to 

00:14:24.060 --> 00:14:30.240
 You can test 

00:14:25.860 --> 00:14:32.390
 Good news for those who are developing important apps 

00:14:30.240 --> 00:14:32.390
 There is 

00:14:32.880 --> 00:14:38.459
 For Android Kiki, you can also use the 

00:14:36.750 --> 00:14:42.290
 Can be used 

00:14:38.459 --> 00:14:46.589
 Using the new plus c plus plus api with ndk ndk 

00:14:42.290 --> 00:14:47.580
 As with using the framework api, take advantage of the vendor scrap 

00:14:46.589 --> 00:14:52.140
 can 

00:14:47.580 --> 00:14:56.820
 It supports both skate installation and features such as custom tunnels 

00:14:52.140 --> 00:15:00.480
 Finally, there are a number of security improvements 

00:14:56.820 --> 00:15:06.300
 All of the internal s2 linux goes from false seed mode to infocode mode 

00:15:00.480 --> 00:15:08.910
 Changed and improved encryption algorithm Added ellipses to keystore 

00:15:06.300 --> 00:15:13.080
 It supports algorithmic digital signature algorithm 

00:15:08.910 --> 00:15:15.089
 The entire disk is encrypted at the time of encryption to protect the q, especially the par 

00:15:13.080 --> 00:15:19.920
 3 function applied 

00:15:15.089 --> 00:15:21.810
 Also, as you all know, one important thing is that a new device 

00:15:19.920 --> 00:15:26.459
 Released 

00:15:21.810 --> 00:15:29.220
 It's the Nexus Five. Go to Google Play to see more details 

00:15:26.459 --> 00:15:34.110
 You can buy it right away 

00:15:29.220 --> 00:15:39.209
 Developers always need new development samples 

00:15:34.110 --> 00:15:40.620
 Finally, Android 4.4 sdk is down through sdk manager 

00:15:39.209 --> 00:15:45.209
 You can receive 

00:15:40.620 --> 00:15:51.170
 Also, when you visit ComSite with two of the developer's answers, the new Android Ticket 

00:15:45.209 --> 00:15:51.170
 You can read more about the version Thanks 

