WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.000
The answer is the second choice--that you can recover almost the full message--

00:00:05.000 --> 00:00:07.000
everything except for the very first block--

00:00:07.000 --> 00:00:10.000
that the point of the initialization vector is just to hide

00:00:10.000 --> 00:00:15.000
repetition among encryptions that would appear just looking at the first block.

00:00:15.000 --> 00:00:19.000
And the reason for this--we can look at how the encryption mode behaves--

00:00:19.000 --> 00:00:24.000
We saw that for all of the blocks except for the first one, the value of C&lt;u&gt;i&lt;/u&gt;

00:00:24.000 --> 00:00:28.000
is the encryption of the value m&lt;u&gt;i--include my key there--and we saw for&lt;/u&gt;

00:00:28.000 --> 00:00:32.000
the way the encryption mode works, C&lt;u&gt;i is equal to the encryption&lt;/u&gt;

00:00:32.000 --> 00:00:39.000
using the key K of M&lt;u&gt;i EXOR C&lt;u&gt;(i -1). The exception to that is block C&lt;u&gt;0.&lt;/u&gt;&lt;/u&gt;&lt;/u&gt;

00:00:39.000 --> 00:00:45.000
Where that's the value of encrypting m&lt;u&gt;0 EXOR'd with IV.&lt;/u&gt;

00:00:45.000 --> 00:00:48.000
So we didn't explain how to do decryption.

00:00:48.000 --> 00:00:51.000
But from the way the encryption was, you should be able to figure that out.

00:00:51.000 --> 00:00:57.000
We can look at this backwards--so in order to get the last message block--

00:00:57.000 --> 00:01:04.000
well, what we need to do is decrypt using key K, and input to decrypt

00:01:04.000 --> 00:01:09.000
is this last ciphertext block. So we're going backwards--

00:01:09.000 --> 00:01:12.000
we're decrypting. We don't have the message block yet. To get the message block,

00:01:12.000 --> 00:01:17.000
We need to do the EXOR to get the message block N - 1

00:01:17.000 --> 00:01:21.000
and so that means we're EXORing that with the ciphertext value

00:01:21.000 --> 00:01:24.000
of the previous block, which we already have.

00:01:24.000 --> 00:01:28.000
Remember we have--to decrypt, we start wtih all the ciphertext blocks.

00:01:28.000 --> 00:01:31.000
So this is how we decrypted the last block, but each

00:01:31.000 --> 00:01:36.000
block is the same. To get message block i, we need to decrypt ciphertext block i,

00:01:36.000 --> 00:01:40.000
and EXOR that with the previous ciphertext block.

00:01:40.000 --> 00:01:43.000
So we can do that for all the blocks, except for--we have this exception

00:01:43.000 --> 00:01:46.000
for the last one. The encryption for the last one used this IV--

00:01:46.000 --> 00:01:50.000
to get the last message block, what we need to do is decrypt

00:01:50.000 --> 00:01:55.000
the last ciphertext block--or the first ciphertext block--we're going backwards now.

00:01:55.000 --> 00:01:59.000
And then EXOR that result with the IV.

00:01:59.000 --> 00:02:02.000
So if we lose the IV but don't lose the key,

00:02:02.000 --> 00:02:06.000
and don't lose the ciphertext, we've lost just the first block.

00:02:06.000 --> 00:02:09.000
And if the IV was selected perfectly at random, well,

00:02:09.000 --> 00:02:12.000
we have no information at all about the first block.

00:02:12.000 --> 00:02:16.000
Because whatever we get out of this decryption is EXOR'd with that IV

00:02:16.000 --> 00:02:19.000
to get the message. So if we have no information about the IV,

00:02:19.000 --> 00:02:22.000
we have no information about the first message block.

00:02:22.000 --> 99:59:59.000
But we can decrypt all the other blocks.

