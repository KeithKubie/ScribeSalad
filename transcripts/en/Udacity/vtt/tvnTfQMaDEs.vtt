WEBVTT
Kind: captions
Language: en

00:00:00.300 --> 00:00:03.670
We have a nicely styled map,
we have some points.

00:00:03.670 --> 00:00:06.420
Now, let's show our customers what
the listed properties look like.

00:00:07.460 --> 00:00:08.560
Street View imagery,

00:00:08.560 --> 00:00:12.900
is one of the awesome features of Google
Maps that's widely used and loved.

00:00:12.900 --> 00:00:17.360
In case you don't know,
the word is big, really big.

00:00:17.360 --> 00:00:23.280
You just won't believe how vastly,
hugely, mind bogglingly, big it is.

00:00:23.280 --> 00:00:26.230
Street View imagery
is 360 degree imagery

00:00:26.230 --> 00:00:29.800
of a huge number of locations
throughout the world.

00:00:29.800 --> 00:00:32.780
The Google Maps APIs,
provide a service for obtaining and

00:00:32.780 --> 00:00:35.500
manipulating the imagery used
in Google Maps Street View.

00:00:36.910 --> 00:00:39.664
&gt;&gt; Now let's find out, how we can
get this imagery and show it in

00:00:39.664 --> 00:00:43.123
the InfoWindow, so our users don't
have to drive around to each building.

00:00:43.123 --> 00:00:45.688
[BLANK_AUDIO]

00:00:45.688 --> 00:00:48.940
&gt;&gt; First, let's understand what
makes up a Street View panorama.

00:00:50.130 --> 00:00:53.000
Obviously, we need to know
what place we're looking at.

00:00:53.000 --> 00:00:57.028
For example, this is my favorite dessert
place in New York City, Rice to Riches.

00:00:57.028 --> 00:01:00.880
They sell $7 rice pudding, but
it's totally worth it, believe me.

00:01:02.200 --> 00:01:03.590
Next, we need the point of view.

00:01:04.720 --> 00:01:08.220
Do we want to be looking at this
building from the east or the west?

00:01:08.220 --> 00:01:09.990
This is called the heading.

00:01:09.990 --> 00:01:13.350
Also, should we be looking down
on the building or up at it?

00:01:13.350 --> 00:01:14.560
This is called the pitch.

00:01:15.620 --> 00:01:19.400
We'll need to define these things
dynamically for each of our points.

00:01:19.400 --> 00:01:20.600
Let's dive back into the code.

00:01:21.890 --> 00:01:24.820
Okay, we're going to go back to our
populateInfoWindow function that

00:01:24.820 --> 00:01:26.640
we created before.

00:01:26.640 --> 00:01:28.580
This function needs to
do a few more things,

00:01:28.580 --> 00:01:31.335
besides just creating a string
to put inside the InfoWindow.

00:01:33.000 --> 00:01:34.440
The first thing we're
going to have it do is,

00:01:34.440 --> 00:01:36.457
create a new streetViewService object.

00:01:37.760 --> 00:01:41.300
This service needs to get the panorama
image based on the closest

00:01:41.300 --> 00:01:42.900
location to the marker.

00:01:42.900 --> 00:01:45.210
And it needs to find out which
way to point the camera,

00:01:45.210 --> 00:01:46.480
the heading and the pitch.

00:01:47.540 --> 00:01:51.340
Now, we could just create a panorama
object with the position of the exact

00:01:51.340 --> 00:01:53.180
landmark of the market, but

00:01:53.180 --> 00:01:56.650
what if there is no imagery for
that exact location?

00:01:56.650 --> 00:01:59.490
Since we're smart, we're going to
define a radius of 50 meters,

00:01:59.490 --> 00:02:01.830
that it's going to look for
a StreetView image within.

00:02:03.100 --> 00:02:06.920
Now we are going to use the
streetViewService.getPanoramaByLocation

00:02:06.920 --> 00:02:09.780
function and
pass in the position of the marker,

00:02:10.990 --> 00:02:16.692
the radius and call our getStreetView
function, which we'll define above.

00:02:16.692 --> 00:02:18.270
The getStreetView function,

00:02:18.270 --> 00:02:24.710
is basically going to take that nearby
StreetViewLocation and compute a heading

00:02:24.710 --> 00:02:28.980
based on the location of the nearest
StreetView and location of our marker.

00:02:30.660 --> 00:02:34.180
In order to do this we're going to
use the google maps geometry library.

00:02:35.430 --> 00:02:39.100
We're going to load the geometry
library when we load the API by using

00:02:39.100 --> 00:02:40.830
the library's perimeter.

00:02:40.830 --> 00:02:42.710
We'll talk more about this later.

00:02:42.710 --> 00:02:45.560
This will allow us to use everything
within the geometry library.

00:02:47.100 --> 00:02:49.151
In order to compute the correct heading,
so

00:02:49.151 --> 00:02:52.701
that we're looking at our building
from the nearest StreetViewLocation,

00:02:52.701 --> 00:02:54.984
we're going to use
the compute heading function.

00:02:54.984 --> 00:02:56.432
[BLANK_AUDIO]

00:02:56.432 --> 00:02:59.805
When we set our panoramaOptions,
we're going to tell it that it's in

00:02:59.805 --> 00:03:03.180
the position of that nearest
StreetViewLocation and that the point

00:03:03.180 --> 00:03:07.026
of view that we'll be using, is going to
be the heading that we just computed and

00:03:07.026 --> 00:03:11.780
a pitch of 30, which is going to have
us looking slightly up at the building.

00:03:11.780 --> 00:03:14.510
We're going to actually create
that panorama object and

00:03:14.510 --> 00:03:18.980
put it inside the infowindow at
the div with the id of panel.

00:03:18.980 --> 00:03:20.890
If no Street View image is found,

00:03:20.890 --> 00:03:23.840
then we'll put information into
that info window indicating that.

00:03:25.540 --> 00:03:28.660
Let's test it out, awesome.

00:03:28.660 --> 00:03:31.100
Now we can show users, what their
future new digs will look like.

00:03:33.670 --> 00:03:37.210
We've covered a bunch of
useful dynamic stuff so far.

00:03:37.210 --> 00:03:40.450
But what if you just want to show
a simple image, a Street View or

00:03:40.450 --> 00:03:42.300
a non dynamic map?

00:03:42.300 --> 00:03:45.770
You can see the same Street View
imagery, we were just working with and

00:03:45.770 --> 00:03:48.910
embed it in your site or
app just like any other image.

00:03:48.910 --> 00:03:51.470
You can also use the Street View
functionality without a map.

00:03:51.470 --> 00:03:54.360
You simply need to use
a URL as the image and

00:03:54.360 --> 00:03:56.890
pass in the parameters
we just discussed.

00:03:56.890 --> 00:04:00.610
The location, the heading and
pitch of the imagery and the size.

00:04:01.850 --> 00:04:04.010
We can use this in any
image element in your page.

00:04:05.020 --> 00:04:09.200
&gt;&gt; Similarly, if you just want to
display a simple non effective map.

00:04:09.200 --> 00:04:12.600
You don't need to use the full
JavaScript API, you can use the static

00:04:12.600 --> 00:04:17.790
maps API to do this more simply and it
will load more quickly for the end user.

00:04:17.790 --> 00:04:18.730
For example,

00:04:18.730 --> 00:04:23.030
if we wanted to show our users a list
view of our real estate listings,

00:04:23.030 --> 00:04:26.840
they might benefit from a small
thumbnail view of where the location is.

00:04:26.840 --> 00:04:29.920
We only need to create
a static map image URL and

00:04:29.920 --> 00:04:34.680
specify a zoom level, center and
size and optionally define some markers,

00:04:34.680 --> 00:04:38.980
info windows or other items, which will
also just be part of the image return.

00:04:40.040 --> 00:04:43.000
&gt;&gt; To learn more check out
the link in the notes.

00:04:43.000 --> 00:04:46.300
Let's take a short quiz on
the material we just went over and

00:04:46.300 --> 00:04:48.910
then we'll move back to
the JavaScript functionality and

00:04:48.910 --> 00:04:52.250
show some awesome ways you can create
geometric overlays on your map.

