WEBVTT
Kind: captions
Language: en

00:00:00.500 --> 00:00:02.020
Let me show you a few examples and

00:00:02.020 --> 00:00:04.338
how we can apply these to create linear filters.

00:00:04.338 --> 00:00:07.987
This is my original image, I'm just showing a small 64 by 64 and

00:00:07.987 --> 00:00:09.790
I hope you can see this in detail.

00:00:10.790 --> 00:00:11.990
Let's take this original image and

00:00:11.990 --> 00:00:14.180
we're going to apply a bunch of filters to it.

00:00:14.180 --> 00:00:19.888
Let's apply a simple kernel here, just a simple, again, an identity.

00:00:19.888 --> 00:00:21.810
What do you expect the output to be?

00:00:21.810 --> 00:00:25.428
Next one, we can apply where there is not just the identity, but

00:00:25.428 --> 00:00:27.240
now we have shifted this by one.

00:00:28.640 --> 00:00:30.060
What should the output be?

00:00:30.060 --> 00:00:33.540
Here of course, we've seen this kind of stuff before, just the average.

00:00:33.540 --> 00:00:36.930
We can not guesstimate as to what the output would be,

00:00:36.930 --> 00:00:38.370
what the output should be for that one.

00:00:39.380 --> 00:00:43.980
For this one, as you've looked at before, it should be the same image again.

00:00:43.980 --> 00:00:45.830
We haven't actually done anything, right?

00:00:45.830 --> 00:00:47.040
But just doing a convolution.

00:00:48.330 --> 00:00:52.220
We're doing this, basically, we'll see that the image has shifted by one.

00:00:52.220 --> 00:00:55.630
Basically what we've done is kind of given a shift to the image.

00:00:56.640 --> 00:00:59.390
This one we've seen many a times, and again applying a convolution to

00:00:59.390 --> 00:01:03.600
this one will give us a box blur, or an average blur.

00:01:04.599 --> 00:01:05.720
Let's look at another example.

00:01:06.980 --> 00:01:10.200
And this will give us example of how we can combine filters.

00:01:10.200 --> 00:01:15.012
Again, my original image, and this time around I have two different kernels.

00:01:15.012 --> 00:01:18.860
I want to take this kernel multiplied by 2, which basically is 1 now.

00:01:18.860 --> 00:01:21.720
Basically, it's saying is that I'm going to now try to give it

00:01:21.720 --> 00:01:24.890
a little bit more strength at the value itself.

00:01:24.890 --> 00:01:28.000
But then after that, I want to subtract it by an average.

00:01:28.000 --> 00:01:30.150
So, I can do this process.

00:01:30.150 --> 00:01:34.630
Remember, the properties of convolution allows me to do something before I

00:01:34.630 --> 00:01:35.490
apply it to the image.

00:01:35.490 --> 00:01:38.080
I can actually do this process individually.

00:01:38.080 --> 00:01:39.690
And this would be my new kernel, right?

00:01:39.690 --> 00:01:41.000
I mean, twice.

00:01:41.000 --> 00:01:44.929
1 subtracted by 1 over 9, 1.9, and this basically becomes, and

00:01:44.929 --> 00:01:48.910
this is what my height field of this kernel looks like.

00:01:48.910 --> 00:01:51.950
Applying this, any guesses what would the output be?

00:01:51.950 --> 00:01:56.840
In essence, by doing this, we have created a simple sharpening filter.

00:01:56.840 --> 00:01:59.490
What we've done is basically allowed it to

00:01:59.490 --> 00:02:03.145
actually create much more resolution information at the peak.

00:02:03.145 --> 00:02:05.718
And you move it further as you go down.

00:02:05.718 --> 00:02:10.458
So in essence this raise the information then we subtract it by the average, and

00:02:10.458 --> 00:02:13.970
the output is a simple sharpening filter.

00:02:13.970 --> 00:02:15.578
So, by doing these kinds of combinations,

00:02:15.578 --> 00:02:17.805
we can actually generate a lot of different types of things.

00:02:17.805 --> 00:02:21.075
And we will, trust me, get into a whole lot of these types of filters.

00:02:21.075 --> 00:02:24.133
And for those of you who are now started playing around with your

00:02:24.133 --> 00:02:26.558
different types of development platforms,

00:02:26.558 --> 00:02:30.018
please remember you can actually do this in Mac Lab, OpenCV Python, or

00:02:30.018 --> 00:02:33.854
filtering, or any times of tools that you've been playing around with this.

00:02:33.854 --> 00:02:35.660
And we will be doing assignments on this too

