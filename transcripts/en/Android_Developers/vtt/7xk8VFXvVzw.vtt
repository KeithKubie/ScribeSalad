WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.520
[MUSIC PLAYING]

00:00:05.520 --> 00:00:08.050
So now that we've written the
code to sign the user in,

00:00:08.050 --> 00:00:11.100
let's go through the process
of adding a sign-in button.

00:00:11.100 --> 00:00:14.000
And maybe before we do that, we
should ask ourselves, why

00:00:14.000 --> 00:00:15.730
are we even adding
a sign-in button?

00:00:15.730 --> 00:00:18.350
After all, Game Center kind of
does what we did, right?

00:00:18.350 --> 00:00:20.170
It signs the user in
as soon as your

00:00:20.170 --> 00:00:21.810
application is started.

00:00:21.810 --> 00:00:23.880
So what does Google Play
need to be different?

00:00:23.880 --> 00:00:26.600
And the answer is that Play
Games and Game Center are

00:00:26.600 --> 00:00:27.950
slightly different animals.

00:00:27.950 --> 00:00:30.120
With Game Center, we can have
a number of different

00:00:30.120 --> 00:00:33.200
applications that all use,
essentially, the same Game

00:00:33.200 --> 00:00:34.250
Center service.

00:00:34.250 --> 00:00:37.310
And what that means is, when the
first game the user ever

00:00:37.310 --> 00:00:40.382
attempts to play on this
device signs in to Game

00:00:40.382 --> 00:00:44.430
Center, the user will see an
approval dialogue, and maybe

00:00:44.430 --> 00:00:46.720
they'll have to go through
a few setup steps.

00:00:46.720 --> 00:00:49.800
But then for every other
application, when they attempt

00:00:49.800 --> 00:00:53.040
to sign the user into Game
Center, that request will be

00:00:53.040 --> 00:00:55.790
approved or denied
automatically.

00:00:55.790 --> 00:00:58.530
There's no additional dialogues
that the user needs

00:00:58.530 --> 00:00:59.660
to see at that point.

00:00:59.660 --> 00:01:03.070
So it's generally considered OK
behavior to try to sign the

00:01:03.070 --> 00:01:04.400
user in right away.

00:01:04.400 --> 00:01:07.010
Generally speaking, it's really
only that one first

00:01:07.010 --> 00:01:10.470
game where the user's going to
see any kind of dialogue.

00:01:10.470 --> 00:01:13.570
On the other hand, with Play
Games, you essentially have a

00:01:13.570 --> 00:01:16.500
separate service associated
with each application.

00:01:16.500 --> 00:01:19.510
And permission to access this
service is on an application

00:01:19.510 --> 00:01:21.220
by application basis.

00:01:21.220 --> 00:01:23.730
That means that the user may
go through an approval

00:01:23.730 --> 00:01:28.330
dialogue to, say, sign in to
Play Games on one game.

00:01:28.330 --> 00:01:30.850
But then they'll still need go
through an approval dialogue

00:01:30.850 --> 00:01:34.160
for every other game that wants
to use its own version

00:01:34.160 --> 00:01:36.090
of Play Game services.

00:01:36.090 --> 00:01:38.420
And the user can accept or
reject each of these

00:01:38.420 --> 00:01:41.580
applications as he
or she sees fit.

00:01:41.580 --> 00:01:44.350
And on top of that, these
generally aren't in-game

00:01:44.350 --> 00:01:45.290
approval dialogues.

00:01:45.290 --> 00:01:47.520
We have to switch to an
entirely different

00:01:47.520 --> 00:01:51.220
application, usually Google+ or
Mobile Safari, to show that

00:01:51.220 --> 00:01:52.760
OAuth sign-in dialogue.

00:01:52.760 --> 00:01:54.900
So it can be a jarring
experience to start up that

00:01:54.900 --> 00:01:57.770
game and immediately having to
switch to an OAuth screen

00:01:57.770 --> 00:02:00.280
without giving the user any kind
of context as to what's

00:02:00.280 --> 00:02:01.870
going on or why they're
switching to another

00:02:01.870 --> 00:02:02.840
application.

00:02:02.840 --> 00:02:04.770
And that's why we want to be
careful about signing the user

00:02:04.770 --> 00:02:07.630
in to play games as soon as
they start up your game.

00:02:07.630 --> 00:02:10.740
We want to avoid this
experience.

00:02:10.740 --> 00:02:13.200
So how do we present the sign-in
button to the player?

00:02:13.200 --> 00:02:16.910
Well, my recommendation is be
assertive yet friendly, much

00:02:16.910 --> 00:02:17.800
like this puppy.

00:02:17.800 --> 00:02:18.600
Hi, buddy.

00:02:18.600 --> 00:02:21.170
And what I mean by that is, yes,
you don't want to switch

00:02:21.170 --> 00:02:23.890
the user to an OAuth consent
screen as soon as they start

00:02:23.890 --> 00:02:24.850
up your game.

00:02:24.850 --> 00:02:28.230
But on the other hand, neither
do you want to hide the

00:02:28.230 --> 00:02:32.820
sign-in mechanism through some
hidden menu feature.

00:02:32.820 --> 00:02:36.910
I've seen applications that have
social login features.

00:02:36.910 --> 00:02:38.930
But they're often hidden
behind a menu.

00:02:38.930 --> 00:02:42.280
I've got to go into Options or
Features and Preferences, and

00:02:42.280 --> 00:02:44.410
somewhere in there is
my social login.

00:02:44.410 --> 00:02:46.770
And you might think it first
that maybe you want to put

00:02:46.770 --> 00:02:48.945
your Google+ sign-in
there as well.

00:02:48.945 --> 00:02:51.070
However, you have to remember
that this sign-in process

00:02:51.070 --> 00:02:55.270
enables a number of features
that aren't purely limited to,

00:02:55.270 --> 00:02:57.850
say, sharing something on
your social network.

00:02:57.850 --> 00:03:00.750
Play Games can also, for
instance, store your scores on

00:03:00.750 --> 00:03:03.730
leaderboards or save your game
in the cloud or record

00:03:03.730 --> 00:03:04.870
achievement progress.

00:03:04.870 --> 00:03:07.160
And if a user's in a situation
where they think they've

00:03:07.160 --> 00:03:09.890
submitted their score to a
leaderboard, and then it turns

00:03:09.890 --> 00:03:12.100
out that that leaderboard
never got their score

00:03:12.100 --> 00:03:14.180
submission in the first place
because they weren't signed

00:03:14.180 --> 00:03:17.100
in, the user could be
genuinely unhappy.

00:03:17.100 --> 00:03:18.710
Same deal if they thought
they were earning a

00:03:18.710 --> 00:03:21.230
difficult-to-earn achievement,
and then they don't get credit

00:03:21.230 --> 00:03:22.770
for it because they
weren't signed in.

00:03:22.770 --> 00:03:24.820
Or even worse, they think
they're saving their game to

00:03:24.820 --> 00:03:27.360
the cloud, and they're not,
because they forgot to sign in

00:03:27.360 --> 00:03:28.700
on this device.

00:03:28.700 --> 00:03:31.010
So I do recommend being a little
more aggressive with

00:03:31.010 --> 00:03:32.740
your sign-in button
than hiding it

00:03:32.740 --> 00:03:34.430
away in a menu somewhere.

00:03:34.430 --> 00:03:36.770
Two patterns that we've seen
that have generally been

00:03:36.770 --> 00:03:40.870
fairly successful are one, put
your sign-in button somewhere

00:03:40.870 --> 00:03:44.650
fairly prominent on, say, your
title screen, where the user

00:03:44.650 --> 00:03:45.900
will first see it.

00:03:45.900 --> 00:03:48.720
Maybe even include a little text
that says, hey, sign in

00:03:48.720 --> 00:03:52.460
here to save your scores to
social leaderboards, or

00:03:52.460 --> 00:03:53.650
something like that.

00:03:53.650 --> 00:03:56.860
A second pattern we started
seeing is games asking the

00:03:56.860 --> 00:03:59.720
user, through an in-game
dialogue box, when they first

00:03:59.720 --> 00:04:02.230
start up the game, if they
would like to sign in to

00:04:02.230 --> 00:04:04.290
Google to enable Cloud Save.

00:04:04.290 --> 00:04:07.200
I suppose this method is a
little more assertive than the

00:04:07.200 --> 00:04:11.330
previous method, so our puppy
is slightly more assertive.

00:04:11.330 --> 00:04:13.960
But this is a pattern worth
looking into, particularly if

00:04:13.960 --> 00:04:15.560
you're game uses Cloud Save.

00:04:15.560 --> 00:04:18.290
This is a case where if the user
isn't signed in, and they

00:04:18.290 --> 00:04:20.029
think they're saving their game
to the cloud and they're

00:04:20.029 --> 00:04:22.810
not, they could be
really unhappy.

00:04:22.810 --> 00:04:24.810
So in that case, it might be
worth being a little more

00:04:24.810 --> 00:04:26.950
assertive about promoting
sign-in.

00:04:26.950 --> 00:04:29.480
Again, stay polite
but assertive.

00:04:29.480 --> 00:04:32.100
So with that in mind, we can
finally go back to adding our

00:04:32.100 --> 00:04:34.220
sign-in button to our game.

00:04:34.220 --> 00:04:39.970
Now I'm going to switch to my
nib here, and I'm going to add

00:04:39.970 --> 00:04:41.220
two things.

00:04:46.580 --> 00:04:48.640
First, I'm going
to add a label.

00:04:48.640 --> 00:04:55.470
And let's put it here, and
it'll stretch out a bit.

00:04:55.470 --> 00:04:58.180
We'll have it display a nice
little message that says,

00:04:58.180 --> 00:05:06.020
"Sign in for Achievements and
Leaderboards." And I'll go up

00:05:06.020 --> 00:05:11.045
here and make it right aligned,
change the number of

00:05:11.045 --> 00:05:16.696
lines to 0, and maybe we can
fix the word-wrapping.

00:05:16.696 --> 00:05:19.440
There we go.

00:05:19.440 --> 00:05:22.530
And then we can resize this
thing a bit, so we can

00:05:22.530 --> 00:05:24.570
drag it like this.

00:05:24.570 --> 00:05:26.245
Sorry, this is kind of
painful to watch, but

00:05:26.245 --> 00:05:27.270
we'll move it over.

00:05:27.270 --> 00:05:28.520
All right.

00:05:32.480 --> 00:05:35.520
I could spend the rest of this
video futzing with this thing,

00:05:35.520 --> 00:05:36.770
but that's good enough.

00:05:41.620 --> 00:05:45.620
The next thing we're going to do
is add our sign-in button.

00:05:45.620 --> 00:05:47.180
Now, I'm going to show
you something.

00:05:47.180 --> 00:05:49.680
I'm going to use the official
Google+ sign-in button.

00:05:49.680 --> 00:05:51.800
And here's how I'm
going to do it.

00:05:51.800 --> 00:05:54.220
First, I'm going to drag
this button on screen.

00:05:54.220 --> 00:05:56.850
And then the next thing I'm
going to do is go back into my

00:05:56.850 --> 00:05:58.630
Downloads Library.

00:05:58.630 --> 00:06:02.670
And I'm going to open up
the Google+ iOS SDK.

00:06:02.670 --> 00:06:04.480
And you remember how I
told you not to add

00:06:04.480 --> 00:06:05.780
this Google+ bundle?

00:06:05.780 --> 00:06:08.710
Well, for demo purposes,
I'm going to add it.

00:06:08.710 --> 00:06:10.210
You can follow along if you
want, but we're going to

00:06:10.210 --> 00:06:11.980
delete this all in
a few seconds.

00:06:11.980 --> 00:06:13.610
So, up to you.

00:06:13.610 --> 00:06:15.640
But I'm going to add this
Google+ bundle.

00:06:15.640 --> 00:06:19.770
I'm not going to copy it,
just add as a reference.

00:06:19.770 --> 00:06:22.950
And then this button, I'm going
to change its class from

00:06:22.950 --> 00:06:27.160
a UI button to a GPP
sign-in button.

00:06:27.160 --> 00:06:30.390
This stands for Google+ Platform
Sign-In button.

00:06:30.390 --> 00:06:32.910
And then the last thing I'm
going to do is go into my

00:06:32.910 --> 00:06:36.830
IntroViewController, and I'm
going to remove this call here

00:06:36.830 --> 00:06:39.440
to authenticate within
viewDidLoad, right?

00:06:39.440 --> 00:06:41.100
We don't want that to happen
automatically.

00:06:41.100 --> 00:06:44.350
We want the user to click
the sign-in button.

00:06:44.350 --> 00:06:45.200
I forgot one thing.

00:06:45.200 --> 00:06:49.050
Let's go back to my Xcode
project, my nib.

00:06:49.050 --> 00:06:53.910
And using my springs and struts,
let's change this so

00:06:53.910 --> 00:06:58.030
that these all are anchored
to the bottom here.

00:06:58.030 --> 00:07:01.100
That'll make sure that when
the screen get shortened,

00:07:01.100 --> 00:07:03.710
which it will, because it's
within a navigation

00:07:03.710 --> 00:07:06.610
controller, these buttons
and labels will

00:07:06.610 --> 00:07:08.670
still be seen on screen.

00:07:08.670 --> 00:07:11.470
And the last thing we're going
to do is actually remove all

00:07:11.470 --> 00:07:13.090
the text from my button.

00:07:13.090 --> 00:07:15.440
So it looks like an empty button
with no text, right?

00:07:15.440 --> 00:07:17.110
But now watch what happens
when I run it.

00:07:21.080 --> 00:07:24.620
That empty button with no text
magically has been turned into

00:07:24.620 --> 00:07:26.280
a Google+ sign-in button.

00:07:26.280 --> 00:07:27.490
Isn't that cool?

00:07:27.490 --> 00:07:30.460
Not only that, but it follows
all of the proper branding

00:07:30.460 --> 00:07:31.260
guidelines.

00:07:31.260 --> 00:07:34.500
It turns out that making the
sign-in text slightly offset

00:07:34.500 --> 00:07:36.490
from the center like
this is not easy.

00:07:36.490 --> 00:07:38.990
And what's even cooler is that
if I were to view this in

00:07:38.990 --> 00:07:42.880
French or German or one of a
number of other languages that

00:07:42.880 --> 00:07:46.200
we support, this text would
be properly localized.

00:07:46.200 --> 00:07:49.750
There's no additional work I
would need to do to localize

00:07:49.750 --> 00:07:51.480
this thing.

00:07:51.480 --> 00:07:53.110
And now watch what happens
when I click the button.

00:07:56.620 --> 00:08:01.540
After a couple of moments, you
can see that authenticate was

00:08:01.540 --> 00:08:02.510
called for me.

00:08:02.510 --> 00:08:05.080
Again, I didn't have to add
any code for this to work.

00:08:05.080 --> 00:08:07.640
This Google+ button made all
the calls for me, right?

00:08:07.640 --> 00:08:10.540
It made a call to GPPSignIn
sharedInstance

00:08:10.540 --> 00:08:12.030
authenticate for me.

00:08:12.030 --> 00:08:14.520
I didn't have to do any other
code to hook it up, which is

00:08:14.520 --> 00:08:15.630
pretty cool.

00:08:15.630 --> 00:08:18.540
And so in case you're asking,
hey, Todd, if this Google+

00:08:18.540 --> 00:08:20.740
sign-in button is so great,
how come you're not

00:08:20.740 --> 00:08:21.990
actually using it?

00:08:21.990 --> 00:08:24.340
The reason is that these
tutorials are generally made

00:08:24.340 --> 00:08:25.430
for game developers.

00:08:25.430 --> 00:08:28.010
And so I know that for many of
you, you prefer to render your

00:08:28.010 --> 00:08:30.370
buttons inside your game
engine yourself.

00:08:30.370 --> 00:08:32.409
It can be somewhat problematic,
I think, to take

00:08:32.409 --> 00:08:36.130
a UI button or some class of a
UI button and somehow display

00:08:36.130 --> 00:08:38.570
it on top of your game engine.

00:08:38.570 --> 00:08:41.000
A lot of game engines just
don't work that way.

00:08:41.000 --> 00:08:44.110
And so my point here really is
just to show you that this

00:08:44.110 --> 00:08:47.520
Google+ sign-in button isn't
magical, but it does do three

00:08:47.520 --> 00:08:48.760
things for you.

00:08:48.760 --> 00:08:51.400
Number one, it properly displays
the sign-in button

00:08:51.400 --> 00:08:53.280
using all the proper branding.

00:08:53.280 --> 00:08:55.610
Number two, it localizes
the text for you.

00:08:55.610 --> 00:08:57.840
And number three, it
calls authenticate

00:08:57.840 --> 00:08:59.510
when you click it.

00:08:59.510 --> 00:09:01.950
But since I don't want you have
to rely on the Google+

00:09:01.950 --> 00:09:04.380
sign-in button, we're going to
get rid of this official

00:09:04.380 --> 00:09:07.640
sign-in button and just do it
ourselves with the regular UI

00:09:07.640 --> 00:09:11.640
button so that you can see the
code that would get called in

00:09:11.640 --> 00:09:13.740
case you want to render this
button inside your game

00:09:13.740 --> 00:09:15.790
object, which I imagine
many of you will.

00:09:15.790 --> 00:09:17.440
So let's do that.

00:09:17.440 --> 00:09:22.640
First thing to do is let's
delete this bundle, because

00:09:22.640 --> 00:09:23.977
we're not going to use it.

00:09:23.977 --> 00:09:25.227
Goodbye.

00:09:28.090 --> 00:09:32.930
And then we're going to say that
this button is, in fact,

00:09:32.930 --> 00:09:34.690
just a normal old UI button.

00:09:37.920 --> 00:09:40.810
The next question you might be
asking then is, OK, great.

00:09:40.810 --> 00:09:43.400
So how do I display this sign-in
button using all the

00:09:43.400 --> 00:09:46.280
proper branding guidelines and
the offset text and all that?

00:09:46.280 --> 00:09:48.690
And for me, the answer is
usually, let's just display

00:09:48.690 --> 00:09:50.430
these as graphic buttons.

00:09:50.430 --> 00:09:53.430
You don't get the advantage of
localizing your text, but it

00:09:53.430 --> 00:09:54.810
is a little easier.

00:09:54.810 --> 00:09:57.500
So if you go to this link that's
going to magically

00:09:57.500 --> 00:10:00.790
appear on your screen right now,
I have a link to a zip

00:10:00.790 --> 00:10:03.180
file that you can download that
contains some of the art

00:10:03.180 --> 00:10:05.450
work that you would need to
display your own Google+

00:10:05.450 --> 00:10:06.970
sign-in button.

00:10:06.970 --> 00:10:09.530
Once you download the zip file,
you'll have something

00:10:09.530 --> 00:10:10.770
that looks a little like this.

00:10:10.770 --> 00:10:15.150
We can unzip it, and we've got
a folder named Artwork.

00:10:15.150 --> 00:10:18.020
And let's just drag this
into our application.

00:10:18.020 --> 00:10:19.570
And yeah, let's copy it.

00:10:24.230 --> 00:10:27.810
And at this point, I'm just
going to take this UI button,

00:10:27.810 --> 00:10:30.950
and I'm going to say it's
Type is Custom.

00:10:30.950 --> 00:10:34.132
And let's start changing
the images.

00:10:34.132 --> 00:10:39.000
So Normal for when you're signed
in normally, or we're

00:10:39.000 --> 00:10:41.010
displaying the button
normally.

00:10:41.010 --> 00:10:42.620
Change our State
to Highlighted.

00:10:42.620 --> 00:10:46.840
And in that case, I'm going
to use the signin_pressed.

00:10:46.840 --> 00:10:48.150
We'll use the same
one for Selected.

00:10:54.090 --> 00:10:59.310
And then when you're Disabled,
I'm going to use

00:10:59.310 --> 00:11:00.560
signin_disabled.

00:11:02.160 --> 00:11:05.990
And so now our UI button is
still a UI button, but it has

00:11:05.990 --> 00:11:07.480
a complete clean,
graphic look.

00:11:07.480 --> 00:11:11.100
And so it kind of looks like the
official sign-in button.

00:11:11.100 --> 00:11:14.230
The next thing I'm going to
do is let's a few of these

00:11:14.230 --> 00:11:18.405
things, bring up our
Helper Editor.

00:11:23.120 --> 00:11:26.330
And I'm going to just start
adding some outlets for my

00:11:26.330 --> 00:11:28.110
button and my label.

00:11:28.110 --> 00:11:29.600
Some I'm going to drag
this in here.

00:11:29.600 --> 00:11:33.795
And it's an outlet, and I will
call it signinButton.

00:11:37.560 --> 00:11:39.850
And I'm going to do another
one for the label.

00:11:47.440 --> 00:11:50.330
And we'll be referencing these
later to hide the button or

00:11:50.330 --> 00:11:52.590
change the text of the label,
depending on whether the

00:11:52.590 --> 00:11:55.300
user's signed in or not.

00:11:55.300 --> 00:11:58.930
And then finally, I'm going to
take my sign-in, and I'm going

00:11:58.930 --> 00:12:02.580
to drag it in here and
create an action.

00:12:02.580 --> 00:12:04.060
We will call it
signinButtonWasPressed.

00:12:14.650 --> 00:12:18.980
And all I actually need to
do here is call GPPSignIn

00:12:18.980 --> 00:12:21.405
sharedInstance authenticate.

00:12:25.050 --> 00:12:27.880
Again, this is really all that
the official Google+ sign-in

00:12:27.880 --> 00:12:30.340
button does when you
click on it.

00:12:30.340 --> 00:12:32.970
So we needed to add in this
one action, but otherwise,

00:12:32.970 --> 00:12:35.460
we're going to get a button that
behaves pretty similarly.

00:12:35.460 --> 00:12:36.710
So now we can run this.

00:12:40.340 --> 00:12:44.480
And I'm going to click
the sign-in button,

00:12:44.480 --> 00:12:45.480
and there we go.

00:12:45.480 --> 00:12:49.290
We have our bearer token here
in our console log.

00:12:49.290 --> 00:12:50.840
So it looks like
sign in worked.

00:12:50.840 --> 00:12:53.590
By the way, in case you're
wondering why we're not seeing

00:12:53.590 --> 00:12:56.460
that OAuth dialogue that we
saw the first time, it's

00:12:56.460 --> 00:12:59.580
because our system is smart
enough to know that if you're

00:12:59.580 --> 00:13:02.290
logging in or signing in to
the same application as

00:13:02.290 --> 00:13:05.810
before, with the same account as
before, and the application

00:13:05.810 --> 00:13:08.660
isn't asking for any new scopes,
and you haven't done

00:13:08.660 --> 00:13:11.980
anything to deauthorize the
application, it will assume

00:13:11.980 --> 00:13:13.830
that you're still cool
with signing in.

00:13:13.830 --> 00:13:16.530
And so it won't show that
sign-in dialogue every time

00:13:16.530 --> 00:13:18.020
you want to sign in,
which would start

00:13:18.020 --> 00:13:19.430
to get pretty tedious.

00:13:19.430 --> 00:13:22.530
We can take advantage of the
situation by automatically

00:13:22.530 --> 00:13:25.650
signing the user in on
subsequent visits.

00:13:25.650 --> 00:13:28.690
So it kind of makes sense to
have this button on screen if

00:13:28.690 --> 00:13:32.170
it's the first time the user has
visited the application,

00:13:32.170 --> 00:13:33.630
or they haven't signed in.

00:13:33.630 --> 00:13:36.670
But if user's already designed
in, and we know that we can

00:13:36.670 --> 00:13:39.490
sign them in silently, well,
then at that point, it makes

00:13:39.490 --> 00:13:40.890
sense to go ahead and do so.

00:13:40.890 --> 00:13:43.040
And we can do that
by calling the

00:13:43.040 --> 00:13:45.190
trySilentAuthentication method.

00:13:45.190 --> 00:13:47.600
And we're going to do that
by going into my

00:13:47.600 --> 00:13:51.750
IntroViewController, and
viewDidLoad after I initialize

00:13:51.750 --> 00:13:56.770
GPPSignIn, I'm going to call
GPPSignIn shared instance

00:13:56.770 --> 00:13:58.020
trySilentAuthentication.

00:14:00.430 --> 00:14:03.600
Now, what this method does is it
basically looks and sees if

00:14:03.600 --> 00:14:05.980
I've signed in in the past
with this application.

00:14:05.980 --> 00:14:09.860
If I have, it'll just go ahead
and try and sign me in, no

00:14:09.860 --> 00:14:11.800
clicking on the sign-in
button required.

00:14:11.800 --> 00:14:13.410
So let's see what happens
now when I run it.

00:14:17.440 --> 00:14:19.230
So we started up the
application.

00:14:19.230 --> 00:14:23.050
I'm not going to click on
the sign-in button.

00:14:23.050 --> 00:14:26.290
But it looks like I've
successfully authed anyway,

00:14:26.290 --> 00:14:28.990
which is cool.

00:14:28.990 --> 00:14:30.570
Now, there are clearly
some cleanup tasks

00:14:30.570 --> 00:14:31.730
we need to do here.

00:14:31.730 --> 00:14:33.800
We don't want this sign-in
button sticking around if the

00:14:33.800 --> 00:14:35.600
user has already signed in.

00:14:35.600 --> 00:14:37.510
We probably want to hide
it, or maybe change

00:14:37.510 --> 00:14:38.920
it to sign-out button.

00:14:38.920 --> 00:14:40.580
We probably want to change
the label once the

00:14:40.580 --> 00:14:41.590
user is signed in.

00:14:41.590 --> 00:14:44.290
And we'll be dealing with all
that in a future lesson.

00:14:44.290 --> 00:14:46.790
But for right now, let's take
a closer look at this access

00:14:46.790 --> 00:14:49.990
token and see what magical
powers this has granted us now

00:14:49.990 --> 00:14:51.290
that the user has signed in.

00:14:51.290 --> 00:14:53.780
And we'll be looking at that
in the next lesson.

