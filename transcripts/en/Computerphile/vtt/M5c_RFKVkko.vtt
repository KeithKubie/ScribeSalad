WEBVTT
Kind: captions
Language: en-GB

00:00:00.000 --> 00:00:04.290
&gt;&gt; DFB: San Francisco, weather. 
&gt;&gt; Brady: Why don't you draw us the Golden Gate bridge?

00:00:04.290 --> 00:00:15.179
&gt;&gt; DFB: [laughs] I ccan't draw!
&gt;&gt; Brady: C'mon give us the Golden Gate bridge!
&gt;&gt; DFB: Oh Lord! I'm running out of space look!

00:00:15.179 --> 00:00:18.510
For the sake of argument we'll say there's only 
four possibilities

00:00:18.510 --> 00:00:27.510
It's sunny, cloudy, rainy or it's foggy.
And all you've got to say is: "OK what's the

00:00:27.510 --> 00:00:31.830
probability of these are they equally
probable or is one more likely than the

00:00:31.830 --> 00:00:36.930
other?" And for the sake of argument let's
say that in San Francisco - you do get all

00:00:36.930 --> 00:00:41.700
of these - it's amazing - every single one in about
an equal proportion, roughly.

00:00:41.700 --> 00:00:49.289
So let's say it's a quarter, and a
quarter, and a quarter, and a quarter. And all

00:00:49.289 --> 00:00:52.530
those of you who have been through high school
statistics know, if these are

00:00:52.530 --> 00:00:54.660
probabilities [you] add them all together.

00:00:54.660 --> 00:00:59.789
It's got to add up to 1.  1 is certainty,
hundred percent. So four quarters is 1.

00:00:59.789 --> 00:01:03.180
Let's say therefore that

00:01:03.180 --> 00:01:11.880
here am I in San Francisco and here is
my friend in Reno.
&gt;&gt; Brady: In Reno !
&gt;&gt; DFB: And we have got

00:01:11.880 --> 00:01:14.340
an electronic buzzer.

00:01:14.340 --> 00:01:17.970
You know one of those old-fashioned
things that you see in wartime movies

00:01:17.970 --> 00:01:22.680
where you tap out Morse code, or whatever.
But this is going to be very, very simple.

00:01:22.680 --> 00:01:24.900
At an agreed time in the day

00:01:24.900 --> 00:01:29.070
I've got to transmit the state of the
weather in San Francisco, from my weather

00:01:29.070 --> 00:01:35.520
station to the guy in Reno as compactly as
possible. Because this is the early days

00:01:35.520 --> 00:01:40.860
of electronic transmission and each bit costs 
me a thousand dollars to send, OK [exaggeration!]

00:01:40.860 --> 00:01:47.220
OK, so what's the minimum number of bits

00:01:47.220 --> 00:01:50.399
I need, because when I'm going to encode it 
in 0s and 1s.

00:01:50.399 --> 00:01:53.520
Well, you look at this. There's four 
states there, all 

00:01:53.520 --> 00:02:01.619
equally probable. How about something
like this 00 for Sunny,  01 for Cloudy, 10

00:02:01.619 --> 00:02:09.899
for Rainy and 11 for Foggy. Four completely
separate, distinguishable, possibilities, Right?

00:02:09.899 --> 00:02:13.650
So, if its sunny the guy here just goes

00:02:13.650 --> 00:02:20.129
tap, tap, two short dots for two zeros and
the guy at Reno knows, for only two thousand

00:02:20.129 --> 00:02:22.890
dollars,  that it's sunny at the weather 
station in San Francisco.

00:02:22.890 --> 00:02:26.220
Can you do any better than that?

00:02:26.220 --> 00:02:30.480
No. You can't. You've got four equally
probable things.

00:02:30.480 --> 00:02:37.140
There's no way in the world that,
losslessly, you can get better than that.

00:02:37.799 --> 00:02:41.130
Yeah?! However ...
&gt;&gt; Brady: It sounds very defeatist!

00:02:41.130 --> 00:02:46.230
&gt;&gt; DFB: Well, it is! But you asked, is there a  limit? 
And there is! Right? So long as you want it

00:02:46.230 --> 00:02:51.480
lossless there is a limit and you can't
get below it. It's the entropy limit and

00:02:51.480 --> 00:02:55.829
those who've done chemistry and physics
will know you can't beat it.

00:02:55.829 --> 00:03:00.720
All right? However if only things were
more predictable -

00:03:00.720 --> 00:03:06.030
this is not quite true but it's
virtually true - Sahara Desert.

00:03:06.030 --> 00:03:09.000
&gt;&gt; Brady: I'm not going to ask you draw a picture
for that because there's no ....

00:03:09.000 --> 00:03:12.329
&gt;&gt; DFB: Probability! The probability here is one

00:03:12.329 --> 00:03:15.600
- it is always sunny in the Sahara Desert.

00:03:15.600 --> 00:03:19.859
So if I've got my Sahara Desert

00:03:19.859 --> 00:03:26.519
keypad here and have got a transatlantic line to 
Reno, Nevada, where [let's say] they gather all

00:03:26.519 --> 00:03:27.690
of this data,

00:03:27.690 --> 00:03:32.880
How many bits of information do I need
to send to get that message

00:03:32.880 --> 00:03:36.989
to Reno? The answer is, if the weather 
never changes,

00:03:36.989 --> 00:03:40.500
you don't need to send any information
at all! It's  always sunny!

00:03:40.500 --> 00:03:49.770
Why ask? But if you want to be absolutely
sure let's just say: "Send a zero to be sure".

00:03:49.770 --> 00:03:53.040
&gt;&gt; Brady: OK, so send a zero if it's sunny?

00:03:53.040 --> 00:03:56.130
&gt;&gt; DFB: Send a zero if it's sunny. You didn't 
really need to because it always is. That's cost you

00:03:56.130 --> 00:04:00.900
... well probably cost you at least a thousand
dollars to send it again but, yeah, one bit.

00:04:00.900 --> 00:04:07.230
One bit would be more than ample. Actually
the information theory answer is zero

00:04:07.230 --> 00:04:10.230
bits, because if it's certain you don't
need to tell anybody!

00:04:11.280 --> 00:04:15.210
This will kill you ... you can edit this
out. But you do the Maths ones don't you ?

00:04:15.210 --> 00:04:17.610
&gt;&gt; Brady: We edit nothing out here!
Yeah! I do the Maths ones. 

00:04:17.610 --> 00:04:24.090
I do the Maths ones!
&gt;&gt; DFB: OK, so what we remember, of course, is

00:04:24.090 --> 00:04:29.370
that 1/4 is the same as 1 over 2
squared, which is the same as 2 to the

00:04:29.370 --> 00:04:39.390
power minus 2. Number of bits you need
equals probability of it happening.

00:04:39.900 --> 00:04:44.670
times log of the probability of it happening 
[with a minus sign].

00:04:45.630 --> 00:04:50.940
If you take  log to the base 2, of 2 to the
minus 2, the answer is -2. Turn it positive: 2.

00:04:50.940 --> 00:04:56.220
What the log of that probability is
telling you is the number of bits you

00:04:56.220 --> 00:04:59.700
need [at the] minimum. 
&gt;&gt; Brady: So there is, for any piece of information,

00:05:00.480 --> 00:05:04.350
there's a minimum number of bits?
&gt;&gt; DFB: So if one of these was an 1/8th

00:05:04.350 --> 00:05:10.800
how many bits would you need to encode it all? 
&gt;&gt; Brady: Why don't you tell me ?!

00:05:10.800 --> 00:05:14.790
&gt;&gt; DFB: Well I ... y'know ... If if there were eight things, right

00:05:15.330 --> 00:05:21.330
then what you could say is that 2 to the
power minus 3 is 1/8, so it will be a

00:05:21.330 --> 00:05:25.290
3-bit code.
&gt;&gt; Brady: Are  you auditioning for a place
on "Numberphile" here aren't you, I can tell!

00:05:25.290 --> 00:05:28.500
&gt;&gt; DFB: I don't know!
&gt;&gt; Brady: that's what happened back there, yeah.
We've got this minimum for this piece of information.

00:05:28.500 --> 00:05:33.120
Is that only on the playing field
of the system we use at the moment -

00:05:33.120 --> 00:05:37.620
these zeros and ones?  I mean is it
possible if we use - came up with - a new

00:05:37.620 --> 00:05:41.490
way of storing and transmitting
information it would be a game changer?

00:05:41.490 --> 00:05:44.580
Or is zeros and ones, you know ...

00:05:44.580 --> 00:05:49.830
&gt;&gt; DFB: No, if we ... leaving aside weird quantum
effects - who knows what might come out of

00:05:49.830 --> 00:05:52.320
that - as of the real world as we have it,

00:05:52.320 --> 00:05:58.249
this is just .... it's a showstopper.
You can't get beyond

00:05:58.249 --> 00:06:03.649
this entropy limit. When I was taught
about entropy - this irreversible sort of

00:06:03.649 --> 00:06:07.309
minimum that you can get - when you do it
from the point of view of physics and

00:06:07.309 --> 00:06:14.689
chemistry they love saying things like
this, and it sort of works. You've got

00:06:14.689 --> 00:06:17.749
a diamond close to absolute zero,

00:06:17.749 --> 00:06:24.529
yeah, that is a very low entropy system.
Low entropy means it is ultra-predictable.

00:06:24.529 --> 00:06:30.379
There's the crystal it's vibrating but only
just. You know where it is - it's not moving.

00:06:30.379 --> 00:06:35.539
High entropy is when the probabilities
are smeared out you don't know where it is.

00:06:35.539 --> 00:06:39.919
So by the time you get a gas, with millions
of molecules zooming here there and everywhere

00:06:39.919 --> 00:06:44.419
that's a very mixed, random, high entropy system

00:06:44.419 --> 00:06:49.610
Now you can see how I take the view
that it's a lot easier, instead of starting

00:06:49.610 --> 00:06:53.959
with 10 ^ 23 molecules in a gas,
start with four weather states in San

00:06:53.959 --> 00:06:58.609
Francisco and you get the idea. And then
you can transfer it to physics and

00:06:58.609 --> 00:07:02.959
chemistry and say Oh! well, in physics and chemistry 
unfortunately, we've  got to use natural logs and

00:07:02.959 --> 00:07:08.449
you've got to take a summation - not over
four states, right, but over 10 ^ 24.

00:07:08.449 --> 00:07:11.869
Because, you see, here ...
&gt;&gt; Brady: I definitely can't figure that one out!

00:07:11.869 --> 00:07:18.249
&gt;&gt; DFB: No here you can say average number of
bits I need is the sum over all these p log p's

00:07:18.349 --> 00:07:25.159
So it's a quarter times two bits, for
that one, plus a quarter times two bits

00:07:25.159 --> 00:07:31.519
plus a quarter times two bits plus a
quarter times two bits - wow isn't this amazing!

00:07:31.519 --> 00:07:37.339
The answer is that the average message
length is two bits.

00:07:38.620 --> 00:07:44.380
But if those were skewed a bit you can
kind of instinctely see what you

00:07:44.380 --> 00:07:46.300
would do. If one of these became a half

00:07:46.300 --> 00:07:50.500
you'd want to give it a short code? Right?
&gt;&gt; Brady: Because if it was

00:07:50.500 --> 00:07:51.850
sunny more often

00:07:51.850 --> 00:07:56.229
I would say: "Well let's make our code
for sunny short and some obscure

00:07:56.229 --> 00:07:57.669
weather like a tornado, I'll make it  ....

00:07:57.669 --> 00:08:03.010
&gt;&gt; DFB:  Exactly! So like it was a half 
your theory here would say,

00:08:03.010 --> 00:08:08.290
that's 2 to the minus 1, hey, let's try 
a 1-bit code there and let's use 2-bit

00:08:08.290 --> 00:08:10.990
codes for the others.

00:08:10.990 --> 00:08:16.660
So you could end up with something - if
it's like Los Angeles is reputed to be -

00:08:16.660 --> 00:08:20.710
that's Smoggy and that's Sunny, that's Rain,

00:08:21.400 --> 00:08:28.150
that's Cloud. What you could then start
saying: "Oh well, how about devoting the

00:08:28.150 --> 00:08:33.669
code 0 to denoting smoggy, yeah?
&gt;&gt; Brady: Because its more common ? 
&gt;&gt; DFB: Because its more common.

00:08:33.669 --> 00:08:36.849
Anybody who's watched World War II
movies and people tapping out Morse

00:08:36.849 --> 00:08:41.289
codes and a lot of people i'm sure we'll
know that the most common letter, 'e',  has

00:08:41.289 --> 00:08:42.460
got the shortest code?

00:08:42.460 --> 00:08:47.350
It's a single dot in Morse code,
whereas 'z' is quite long and so on.

00:08:47.350 --> 00:08:49.930
So it applies, y'know,

00:08:49.930 --> 00:08:54.850
all the way through this. So what you 
could say, therefore, is: "If I'm

00:08:54.850 --> 00:08:57.580
going to start with 0 for Smoggy

00:08:57.580 --> 00:09:03.370
then I'd better not confuse matters by
starting a longer code for any of these

00:09:03.370 --> 00:09:08.020
with 0". Right? Let's start them all with 1.

00:09:08.020 --> 00:09:12.250
So let's say something like 10,

00:09:12.250 --> 00:09:19.959
Sunny, but then you say: "Hmm! I'd better 
not start either of these with 10, otherwise

00:09:19.959 --> 00:09:23.050
things will get confused". So let's start them with 11

00:09:23.050 --> 00:09:28.810
Yeah but the trouble is, if I use 11, I'm
then running out of what I can use for

00:09:28.810 --> 00:09:35.860
Cloud. Can you see you'd have to say 110
and 111?k Because you've got to be able to

00:09:35.860 --> 00:09:41.020
uniquely decode it. And if you're not
very careful you will end up with

00:09:41.020 --> 00:09:45.970
something that can't be uniquely
unscrambled. Suppose to save telephone costs

00:09:45.970 --> 00:09:47.709
you just sent a week's weather, all at once.

00:09:47.709 --> 00:09:48.990
Seven things, one after another

00:09:48.990 --> 00:09:55.110
How can you uniquely unscramble it
into being these .... yeah! it happens with

00:09:55.110 --> 00:09:56.100
telephone numbers!

00:09:56.100 --> 00:10:03.930
It happens to me at home. This, and my telephone 
number, has to have the "prefix property".

00:10:03.930 --> 00:10:09.870
I live in a village where my telephone
number is a five-digit code.

00:10:10.529 --> 00:10:13.620
Unfortunately some people in the village
have got six-digit codes.

00:10:13.620 --> 00:10:20.040
Yes, telephone codes have the prefix
property. They connect the moment they've

00:10:20.040 --> 00:10:22.589
been unambiguously satisfied.

00:10:22.589 --> 00:10:27.060
So, if you have a legal five-digit 
telephone code

00:10:27.060 --> 00:10:33.839
it cannot be the prefix of a longer code,
because the telephone exchange goes "bang!"

00:10:33.839 --> 00:10:36.959
and connects you the moment you give it
something sensible.

00:10:36.959 --> 00:10:42.029
Yeah, the trouble then is that the
Ocado delivery system doesn't

00:10:42.029 --> 00:10:45.720
understand this and thinks everybody's got
to have six digits. So, do  you know what I do?

00:10:45.720 --> 00:10:48.990
&gt;&gt; Brady: So when you're ordering groceries you
deliberately put a wrong number in ?!

00:10:48.990 --> 00:10:50.070
&gt;&gt; DFB: Yes, at the very end

00:10:50.070 --> 00:10:53.459
&gt;&gt; Brady: This might be a good tip for new
players. If smeone won't accept your 

00:10:53.459 --> 00:10:56.820
phone number just add any digits at the end
&gt;&gt; DFB: Just add any digits to the end.

00:10:56.820 --> 00:11:00.060
&gt;&gt; Brady: If a weather condition was more 
common, like sunny weather in California,

00:11:00.060 --> 00:11:03.149
you give that a shorter code to
save information?

00:11:03.899 --> 00:11:09.870
Did the people that invented the JPEG
format, or do other people that are doing

00:11:09.870 --> 00:11:13.829
compression, use probabilities in the same way?

00:11:13.829 --> 00:11:17.790
&gt;&gt; DFB: Oh yes!
&gt;&gt; Brady: So do they know that blue is more
common in pictures, or how do they use them?

00:11:17.790 --> 00:11:24.750
&gt;&gt; DFB: No, it doesn't quite come down to that.
It's more - in the jJPEG standard that it's more,

00:11:24.750 --> 00:11:31.110
as it were, spatially aware as well as
colour aware in terms of what it's doing.

00:11:31.110 --> 00:11:36.690
But, yeah, in one respect or another
probabilities is at the root of all of

00:11:36.690 --> 00:11:41.010
this and, like I say, that's particularly
true if you want lossless compression

00:11:41.010 --> 00:11:42.940
because you run up against

00:11:42.940 --> 00:11:48.220
unstoppable entropy limits about how far
you can compress and not lose anything

00:11:48.220 --> 00:11:50.110
in in the compression.

00:11:50.110 --> 00:11:54.910
&gt;&gt; Brady: Well I'm glad it's not my job to
compress this video!

