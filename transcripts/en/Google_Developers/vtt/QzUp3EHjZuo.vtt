WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.833
GUSTAVO MOREIRA: Do you
want to get your iOS

00:00:01.833 --> 00:00:03.280
apps on the big screen?

00:00:03.280 --> 00:00:06.260
Well, we have made it
easier than ever before.

00:00:06.260 --> 00:00:06.820
Hi.

00:00:06.820 --> 00:00:09.261
I'm Gustavo Moreira from the
Google Developer Relations

00:00:09.261 --> 00:00:09.760
team.

00:00:09.760 --> 00:00:12.210
And I'm going to talk to you
about the Google Cast SDK

00:00:12.210 --> 00:00:14.300
version 3 for iOS.

00:00:14.300 --> 00:00:17.650
In June in 2016, we
launched a new version 3 API

00:00:17.650 --> 00:00:19.850
for the Google Cast SDK.

00:00:19.850 --> 00:00:22.140
That new Cast SDK
simplifies several parts

00:00:22.140 --> 00:00:25.440
of the previous Google Cast SDK
and addresses the major pain

00:00:25.440 --> 00:00:28.880
points identified by content
partners and developers.

00:00:28.880 --> 00:00:31.310
The new Cast SDK greatly
reduces the amount

00:00:31.310 --> 00:00:34.280
of code needed by
providing UI widgets that

00:00:34.280 --> 00:00:38.050
fully comply with the
Cast UX design checklist.

00:00:38.050 --> 00:00:41.800
First, here's some terminology
about how Casting works.

00:00:41.800 --> 00:00:43.560
The Google Cast
sender application

00:00:43.560 --> 00:00:47.050
refers to an app running on
a mobile device or laptop.

00:00:47.050 --> 00:00:50.040
And the receiver application
refers to an HTML application

00:00:50.040 --> 00:00:52.890
running on a Chromecast or
any other Google Cast receiver

00:00:52.890 --> 00:00:54.410
devices.

00:00:54.410 --> 00:00:56.430
Let's take a quick look
at the typical lifecycle

00:00:56.430 --> 00:00:58.680
off a Cast sender app.

00:00:58.680 --> 00:01:00.760
When the Cast sender
app is launched,

00:01:00.760 --> 00:01:02.910
Cast receiver devices
need to be discovered

00:01:02.910 --> 00:01:04.739
on the local network.

00:01:04.739 --> 00:01:07.220
Once the user selects a
device, the sender app

00:01:07.220 --> 00:01:10.830
will connect to that device
and launch the receiver app.

00:01:10.830 --> 00:01:13.490
The sender app then
creates a message channel

00:01:13.490 --> 00:01:17.770
to the receiver app to
send and receive messages.

00:01:17.770 --> 00:01:22.420
The user can also disconnect
from that device at any time.

00:01:22.420 --> 00:01:25.710
The new SDK implements
these new features.

00:01:25.710 --> 00:01:29.920
UI widgets that comply with the
Google Cast design checklist,

00:01:29.920 --> 00:01:32.560
notification and
lock screen controls,

00:01:32.560 --> 00:01:34.450
automatic device
discovery, so you

00:01:34.450 --> 00:01:37.390
don't have to manage
that in your code,

00:01:37.390 --> 00:01:40.070
centralized cast session
state management,

00:01:40.070 --> 00:01:43.300
and a reconnection service
that automatically handles

00:01:43.300 --> 00:01:45.450
network issues to
keep your sender app

00:01:45.450 --> 00:01:47.370
connected to the receiver.

00:01:47.370 --> 00:01:49.080
Even when a user
leaves their room

00:01:49.080 --> 00:01:51.110
and goes out of the
range of the network,

00:01:51.110 --> 00:01:53.520
the session will be
automatically reconnected

00:01:53.520 --> 00:01:55.800
when the user returns.

00:01:55.800 --> 00:01:57.820
To get your hands
on the new SDK,

00:01:57.820 --> 00:02:00.790
you just need to install the
Google Cast SDK version 3

00:02:00.790 --> 00:02:03.020
or higher from cocoapods.

00:02:03.020 --> 00:02:07.710
Make sure to use iOS 8.0
as the deployment platform.

00:02:07.710 --> 00:02:10.460
Let's take a look at how
to add Cast to your app.

00:02:10.460 --> 00:02:14.240
The Cast framework has a global
singleton object, the GCK Cast

00:02:14.240 --> 00:02:18.380
context, which coordinates
all the cast interactions.

00:02:18.380 --> 00:02:21.290
You must create a Cast
options object to initialize

00:02:21.290 --> 00:02:23.970
to Cast context singleton.

00:02:23.970 --> 00:02:27.040
The most important option is
the receiver application ID,

00:02:27.040 --> 00:02:30.950
which you get from the Google
Cast Developer Console.

00:02:30.950 --> 00:02:33.640
You can then get the
Cast context instance

00:02:33.640 --> 00:02:37.510
by using the static
shared instance method.

00:02:37.510 --> 00:02:39.000
You can also set
a default logger

00:02:39.000 --> 00:02:41.860
to the logger shared instance.

00:02:41.860 --> 00:02:44.930
For your app's UI, the first
step in supporting Cast

00:02:44.930 --> 00:02:47.100
is to add the Cast button.

00:02:47.100 --> 00:02:49.610
The SDK provides a
Cast button widget

00:02:49.610 --> 00:02:53.190
that automatically manages
its visibility and state,

00:02:53.190 --> 00:02:55.670
and provides all the
necessary dialogs for user

00:02:55.670 --> 00:02:58.200
to select and
disconnect devices.

00:02:58.200 --> 00:03:00.850
The Cast button
UI is a UI button

00:03:00.850 --> 00:03:03.140
that can be added to
the Navigation bar

00:03:03.140 --> 00:03:06.430
as a ride bar button item.

00:03:06.430 --> 00:03:09.370
Just initialize the Cast
button with the proper size,

00:03:09.370 --> 00:03:12.310
and add it to the
Navigation bar.

00:03:12.310 --> 00:03:15.430
When a user selects a Cast
device using the Cast button

00:03:15.430 --> 00:03:18.890
menu, a new Cast session
is started automatically

00:03:18.890 --> 00:03:20.740
by the framework.

00:03:20.740 --> 00:03:22.450
All these
interactions, including

00:03:22.450 --> 00:03:25.950
backing out of this menu,
are handled by the widget.

00:03:25.950 --> 00:03:28.250
The list of devices
is filtered based

00:03:28.250 --> 00:03:31.280
on the app ID configuration
in the Google Cast Developer

00:03:31.280 --> 00:03:32.810
Console.

00:03:32.810 --> 00:03:34.970
For the Cast framework,
a Cast session

00:03:34.970 --> 00:03:37.490
encapsulates the
connection to a device,

00:03:37.490 --> 00:03:39.220
managing the
receiver application,

00:03:39.220 --> 00:03:44.390
and initializing a media control
channel for the media apps.

00:03:44.390 --> 00:03:47.180
Cast sessions are managed by
the session manager, which

00:03:47.180 --> 00:03:49.470
can be accessed via the
session manager property

00:03:49.470 --> 00:03:51.750
on the Cast context object.

00:03:51.750 --> 00:03:54.220
The GCK session manager
listener callbacks

00:03:54.220 --> 00:03:57.340
can be used to monitor session
events such as creation,

00:03:57.340 --> 00:04:01.360
suspension, resumption,
and termination.

00:04:01.360 --> 00:04:03.460
To play media on the
receiver, the sender app

00:04:03.460 --> 00:04:06.670
has to the media metadata
of the media stream.

00:04:06.670 --> 00:04:09.620
Here you can see how it just
add the media type, title,

00:04:09.620 --> 00:04:13.360
and images using the
media metadata class.

00:04:13.360 --> 00:04:17.019
And here you can see how it just
add the media URL, string type,

00:04:17.019 --> 00:04:21.490
and other metadata using
the media information class.

00:04:21.490 --> 00:04:23.330
The remote media
client class is then

00:04:23.330 --> 00:04:27.080
used to load a media
stream on the receiver.

00:04:27.080 --> 00:04:31.020
The sender app then invokes
commands such as play and pause

00:04:31.020 --> 00:04:33.710
using the remote media client.

00:04:33.710 --> 00:04:36.150
The sender app can use the
session manager listener

00:04:36.150 --> 00:04:38.230
callbacks to track
the session estate,

00:04:38.230 --> 00:04:42.810
and decide when to enable and
disable the local media player.

00:04:42.810 --> 00:04:45.290
As required by the
Cast UX guidelines,

00:04:45.290 --> 00:04:48.830
the SDK provides a widget
called the mini controller that

00:04:48.830 --> 00:04:51.600
appears when the user navigates
away from the current content

00:04:51.600 --> 00:04:54.720
page to another part of the app.

00:04:54.720 --> 00:04:56.910
The mini controller
provides instant access

00:04:56.910 --> 00:04:59.320
to playback controls
and a visible reminder

00:04:59.320 --> 00:05:02.110
for the current Cast session.

00:05:02.110 --> 00:05:04.340
The Cast SDK provides
a custom field

00:05:04.340 --> 00:05:06.930
UI mini controls view
controller, which

00:05:06.930 --> 00:05:09.530
can be created from
the Cast context object

00:05:09.530 --> 00:05:13.070
and added to any container
view in your app.

00:05:13.070 --> 00:05:15.220
The Google Cast
design checklist also

00:05:15.220 --> 00:05:18.250
requires a sender app to
provide an expanded controller

00:05:18.250 --> 00:05:20.290
for the media being cast.

00:05:20.290 --> 00:05:22.860
The expanded controller
is a full screen version

00:05:22.860 --> 00:05:24.700
of the MIDI controller.

00:05:24.700 --> 00:05:27.830
The Cast SDK provides a widget
for the expanded controller

00:05:27.830 --> 00:05:32.280
that can be presented directly
from the Cast context object.

00:05:32.280 --> 00:05:35.060
To add an expanded
controller, just enable it

00:05:35.060 --> 00:05:37.530
in the Act Delegate Affair app.

00:05:37.530 --> 00:05:40.310
In the Did Finish Launching
with Options method,

00:05:40.310 --> 00:05:43.300
just enable the default
expanded media controls off

00:05:43.300 --> 00:05:47.090
the SDK in the Cast
context object.

00:05:47.090 --> 00:05:48.780
The Cast SDK provides
a custom view

00:05:48.780 --> 00:05:52.610
called Call Cast Instructions
View Controller that

00:05:52.610 --> 00:05:55.210
can be used to highlight a
Cast button when it's first

00:05:55.210 --> 00:05:57.010
shown to users.

00:05:57.010 --> 00:06:00.970
This code shows how you can use
the Cast Context Present Cast

00:06:00.970 --> 00:06:03.090
Instructions View
Controller Once method

00:06:03.090 --> 00:06:06.330
to show the overlay in your
app only the first time

00:06:06.330 --> 00:06:08.900
the user accesses it.

00:06:08.900 --> 00:06:11.780
That's everything you need
to Cast enable your app.

00:06:11.780 --> 00:06:14.305
You can get more details
about the Google Cast SDK

00:06:14.305 --> 00:06:17.490
at developers.Google.com/cast.

00:06:17.490 --> 00:06:20.050
We have also open source
sample Cast apps that you

00:06:20.050 --> 00:06:21.820
can use as a reference.

00:06:21.820 --> 00:06:24.330
And if you have any
developer questions,

00:06:24.330 --> 00:06:26.840
pose those on the
Stack Overflow.

00:06:26.840 --> 00:06:30.380
Join our Google Cast developers
community on G+ to keep up

00:06:30.380 --> 00:06:34.200
to date with SDK updates and
to chat with other developers

00:06:34.200 --> 00:06:36.230
and share ideas.

00:06:36.230 --> 00:06:38.330
Thanks for watching,
and see you next time.

00:06:38.330 --> 00:06:42.280
[MUSIC PLAYING]

