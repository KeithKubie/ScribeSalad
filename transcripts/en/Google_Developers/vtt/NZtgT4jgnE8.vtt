WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.140
MICHAEL FINK: My name is Michael
Fink, and I'm the

00:00:06.140 --> 00:00:09.520
product manager Google Chart
Tools, which is the team

00:00:09.520 --> 00:00:11.640
within Google that's responsible
for building

00:00:11.640 --> 00:00:14.670
visualization tools both for
Google products and for the

00:00:14.670 --> 00:00:17.030
external developer community.

00:00:17.030 --> 00:00:18.860
And before I start,
I want to--

00:00:18.860 --> 00:00:22.070
this is a talk about data
visualization and live data

00:00:22.070 --> 00:00:23.060
visualization.

00:00:23.060 --> 00:00:27.500
So we want to collect live data
from you guys and use

00:00:27.500 --> 00:00:29.710
that data in heard order to
present all of the great tools

00:00:29.710 --> 00:00:31.230
that our team has
been building in

00:00:31.230 --> 00:00:32.650
the last two months.

00:00:32.650 --> 00:00:35.430
Now we're going to collect data
using a game, which we

00:00:35.430 --> 00:00:37.310
call The Unique Game.

00:00:37.310 --> 00:00:39.340
So what I need is, actually,
open your laptops, which

00:00:39.340 --> 00:00:41.050
you've probably already done.

00:00:41.050 --> 00:00:42.710
And I'll tell you a bit
about the rules of

00:00:42.710 --> 00:00:44.512
this very simple game.

00:00:44.512 --> 00:00:48.610
So The Unique Game is a game
where each and everyone of you

00:00:48.610 --> 00:00:51.220
should choose a number,
a natural number.

00:00:51.220 --> 00:00:53.850
And so far it's fairly easy.

00:00:53.850 --> 00:00:57.400
And you have to choose a number
that you will be the

00:00:57.400 --> 00:01:00.270
only person that will choose
that number, OK?

00:01:00.270 --> 00:01:02.930
So it still sounds
fairly easy.

00:01:02.930 --> 00:01:06.520
And the last rule, which puts
in the twist, is that the

00:01:06.520 --> 00:01:10.650
winner will be the person that
chooses the lowest, unique

00:01:10.650 --> 00:01:11.520
natural number.

00:01:11.520 --> 00:01:14.090
So I'll let you ponder
on that for a second.

00:01:14.090 --> 00:01:18.620
And I'd like you to go into this
URL here on the bottom,

00:01:18.620 --> 00:01:21.070
io2011charts.

00:01:21.070 --> 00:01:24.420
And we need each and every one
of you to participate in this

00:01:24.420 --> 00:01:28.290
game, because otherwise we won't
have data to visualize.

00:01:28.290 --> 00:01:31.900
And now, what you can see here,
is once you enter that

00:01:31.900 --> 00:01:35.100
URL, you'll see this
small form.

00:01:35.100 --> 00:01:39.740
Let me put in some data, so I
think that the lowest number

00:01:39.740 --> 00:01:42.640
will probably five.

00:01:42.640 --> 00:01:46.870
OK, and I could put in my email
because the person that

00:01:46.870 --> 00:01:49.170
will win will get
a grand prize.

00:01:49.170 --> 00:01:50.770
And I won't tell
you, all right?

00:01:54.270 --> 00:01:56.970
And I'm exposing my email here,
but that's great so you

00:01:56.970 --> 00:01:59.170
could feel free to send
me emails later on.

00:01:59.170 --> 00:02:01.020
And I'll submit it.

00:02:01.020 --> 00:02:06.480
And what you see here, on the
bottom right is a gauge that

00:02:06.480 --> 00:02:09.030
should be reflecting
the number of

00:02:09.030 --> 00:02:11.360
votes that we're receiving.

00:02:11.360 --> 00:02:14.020
Is there like a severe
connectivity issue?

00:02:14.020 --> 00:02:15.270
AUDIENCE: Yeah.

00:02:18.484 --> 00:02:21.280
MICHAEL FINK: OK, so we just
killed live, and we'll stay

00:02:21.280 --> 00:02:23.340
with data visualization
without live.

00:02:28.650 --> 00:02:30.550
If half of the demos that we're
planning will still

00:02:30.550 --> 00:02:33.900
work, we'll be happy
with that.

00:02:33.900 --> 00:02:37.890
So what we have here
is this live gauge.

00:02:37.890 --> 00:02:40.470
What's nice about these slides
is that all visualizations

00:02:40.470 --> 00:02:42.680
that you'll see are essentially
embedded

00:02:42.680 --> 00:02:44.380
into this HTML page.

00:02:44.380 --> 00:02:47.900
And all of the slides are
essentially one HTML file that

00:02:47.900 --> 00:02:50.970
we'll make accessible
later down the road.

00:02:50.970 --> 00:02:54.600
And you'll be able to pull it,
and take a look at all of the

00:02:54.600 --> 00:02:56.890
source code behind what
we're presenting.

00:02:59.600 --> 00:03:02.830
So The Unique Game, maybe if
you've written down the URL

00:03:02.830 --> 00:03:05.250
and if connectivity comes back
later on, you could try and

00:03:05.250 --> 00:03:06.045
fill it up.

00:03:06.045 --> 00:03:07.990
So as I said, my name
is Michael Fink,

00:03:07.990 --> 00:03:08.990
I'm the product manager.

00:03:08.990 --> 00:03:10.760
And what we're going to talk
about today is data

00:03:10.760 --> 00:03:13.550
visualization and a lot of great
tools that our team has

00:03:13.550 --> 00:03:15.150
been building in the
last few months.

00:03:15.150 --> 00:03:19.060
And the climax of the talk
will be in a short

00:03:19.060 --> 00:03:22.310
demonstration on how you can
create full interactive

00:03:22.310 --> 00:03:25.790
dashboards, using the tools
that we've built.

00:03:25.790 --> 00:03:28.740
Now the talk will be composed
of two parts.

00:03:28.740 --> 00:03:31.280
The first part will be called,
charts for everyone, and I'll

00:03:31.280 --> 00:03:34.920
be delivering that
part, AKA fluff.

00:03:34.920 --> 00:03:36.940
No actual code there.

00:03:36.940 --> 00:03:40.820
And then the second part will
be delivered by our two tech

00:03:40.820 --> 00:03:43.940
leads: Riccardo and Amit.

00:03:43.940 --> 00:03:45.650
And that will be a
hands-on session.

00:03:45.650 --> 00:03:48.510
And if we still don't have
connectivity, it will be a

00:03:48.510 --> 00:03:50.430
virtual hands-on session.

00:03:50.430 --> 00:03:54.740
And they will be covering how
to use charts in the context

00:03:54.740 --> 00:03:56.480
of app scripts.

00:03:56.480 --> 00:04:01.180
They will be talking about our
new ChartWrapper, which is a

00:04:01.180 --> 00:04:06.230
new syntax for very simply
writing and spec'ing out a

00:04:06.230 --> 00:04:09.630
chart, and serializing
it later on.

00:04:09.630 --> 00:04:12.160
They'll be talking about our new
chart editor, and how you

00:04:12.160 --> 00:04:15.610
could embed a full chart editor
into your website.

00:04:15.610 --> 00:04:18.709
And then Riccardo will conclude
with an introduction

00:04:18.709 --> 00:04:23.050
to controls and dashboards,
which will explain how to use

00:04:23.050 --> 00:04:27.750
multiple charts and multiple
controls into creating a full

00:04:27.750 --> 00:04:31.040
data exploration experience.

00:04:31.040 --> 00:04:34.580
Now if you look up out on a few
efforts that Google has

00:04:34.580 --> 00:04:36.770
gone into in the last few years,
you could see that in a

00:04:36.770 --> 00:04:40.990
very systematic way, we took
domains that were specialized

00:04:40.990 --> 00:04:43.745
domains to experts, and we
try to democratize them.

00:04:43.745 --> 00:04:46.110
So we've done that with map
maker, and democratizing

00:04:46.110 --> 00:04:48.480
cartography, so suddenly
everyone could

00:04:48.480 --> 00:04:50.430
create his own map.

00:04:50.430 --> 00:04:52.340
And we've done that
with YouTube, and

00:04:52.340 --> 00:04:53.980
democratizing video.

00:04:53.980 --> 00:04:57.630
So, until a few years ago, if
you wanted to have any chance

00:04:57.630 --> 00:05:00.080
to have a video that reaches
millions of people, you had to

00:05:00.080 --> 00:05:02.940
probably work in a studio
in Hollywood.

00:05:02.940 --> 00:05:06.410
And today, you could sit for
one afternoon, and make a

00:05:06.410 --> 00:05:09.320
viral video, and suddenly
that capability is

00:05:09.320 --> 00:05:11.340
available for everyone.

00:05:11.340 --> 00:05:17.100
And we've democratized 3D
modeling, using Google

00:05:17.100 --> 00:05:19.390
SketchUp other tools.

00:05:19.390 --> 00:05:22.250
And what I want to challenge us
as a community, is can we

00:05:22.250 --> 00:05:24.010
democratize data
visualization?

00:05:24.010 --> 00:05:26.180
Can we make the process of data
visualization something

00:05:26.180 --> 00:05:31.270
that everyone could do in
an effortless manner?

00:05:31.270 --> 00:05:34.210
So how many people are familiar
with this chart?

00:05:37.390 --> 00:05:42.900
OK, that's all the XKCD
readers here, great.

00:05:42.900 --> 00:05:47.160
So what's nice about
this chart--

00:05:47.160 --> 00:05:51.340
it kind of explains our
motivation in democratizing

00:05:51.340 --> 00:05:56.310
data visualization is the fact
that one chart is often worth

00:05:56.310 --> 00:05:58.090
1,000 images.

00:05:58.090 --> 00:06:06.140
And this beautiful chart
explains why the gravity wells

00:06:06.140 --> 00:06:08.770
are in our solar system.

00:06:08.770 --> 00:06:14.340
And you can see that it nicely
explains in that small box why

00:06:14.340 --> 00:06:17.570
going from a very low well, like
Earth, all the way to the

00:06:17.570 --> 00:06:19.630
moon requires a fairly
big rocket.

00:06:19.630 --> 00:06:22.170
But if you want to return from
the moon back to Earth, you

00:06:22.170 --> 00:06:24.380
need a very small rocket,
because you the only barrier

00:06:24.380 --> 00:06:26.810
that you have to pass
is the small gravity

00:06:26.810 --> 00:06:29.120
barrier of the moon.

00:06:29.120 --> 00:06:32.510
So a nice visualization, a
nice chart, could really

00:06:32.510 --> 00:06:35.780
communicate a lot
of information.

00:06:35.780 --> 00:06:39.640
And we were inspired by the
work of Randall Munroe and

00:06:39.640 --> 00:06:45.950
XKCD over the last recent years,
by observing how time

00:06:45.950 --> 00:06:50.670
and time again Randall was able
to create different chart

00:06:50.670 --> 00:06:52.530
types and different
visualizations that we were

00:06:52.530 --> 00:06:55.940
all familiar with, but give
them a new flavor.

00:06:55.940 --> 00:06:58.530
So he's been using
scatter plots.

00:06:58.530 --> 00:07:01.580
And you can see a scatter
plot here to the left.

00:07:01.580 --> 00:07:04.430
The y-axis is whether
the fruit is tasty.

00:07:04.430 --> 00:07:08.790
The x-axis is how difficult or
easy it is to eat that fruit.

00:07:08.790 --> 00:07:12.570
And does anyone know what this
scatter plot was titled?

00:07:15.430 --> 00:07:18.310
"Fuck Grapefruit."

00:07:18.310 --> 00:07:20.600
Now let's understand why: so
grapefruit is all the way here

00:07:20.600 --> 00:07:24.950
on the bottom because it's
difficult and un-tasty, OK?

00:07:24.950 --> 00:07:27.490
And you have seedless grapes
here in the top, because

00:07:27.490 --> 00:07:29.650
they're easy and tasty.

00:07:29.650 --> 00:07:32.050
Grapes with pits are
not that easy.

00:07:32.050 --> 00:07:34.590
And one visualization, one
scatter plot can really

00:07:34.590 --> 00:07:37.170
communicate a lot
of information.

00:07:37.170 --> 00:07:39.690
He's been using bar charts
along the years.

00:07:39.690 --> 00:07:43.120
This is a bar chart that shows
that a lot more people search

00:07:43.120 --> 00:07:47.330
for the sentence, I should have
kissed her, rather than,

00:07:47.330 --> 00:07:49.020
I shouldn't have kissed her.

00:07:49.020 --> 00:07:51.670
And I won't even go into this
heat map down here.

00:07:55.552 --> 00:08:00.860
Oops, I'm trying to switch
a slide, but.

00:08:00.860 --> 00:08:02.290
Are we stuck on this slide?

00:08:08.517 --> 00:08:09.870
Let me try to refresh, maybe?

00:08:15.380 --> 00:08:16.720
Complete browser crash.

00:08:22.850 --> 00:08:24.810
OK, perfect now.

00:08:24.810 --> 00:08:26.785
Everyone close your eyes for
three seconds, so you won't

00:08:26.785 --> 00:08:31.260
have to see the entire talk.

00:08:31.260 --> 00:08:33.980
OK perfect.

00:08:33.980 --> 00:08:40.010
So taking these great examples
as inspiration, we defined our

00:08:40.010 --> 00:08:42.650
team's mission to make the
world's structured data

00:08:42.650 --> 00:08:46.040
universally accessible and
useful using visualizations.

00:08:46.040 --> 00:08:49.090
And our motif is to try to build
charts that could be

00:08:49.090 --> 00:08:50.300
used by anyone.

00:08:50.300 --> 00:08:53.790
And anyone, we mean like the
end-users, the end-consumers,

00:08:53.790 --> 00:08:57.930
that we might be dealing with,
developers such as yourself,

00:08:57.930 --> 00:09:01.230
people that work in the apps
and enterprise contexts.

00:09:01.230 --> 00:09:04.220
So we really tried to build set
of tools that anyone could

00:09:04.220 --> 00:09:07.260
use, and I'll try to
demonstrate that.

00:09:07.260 --> 00:09:09.170
So let's start from consumers.

00:09:09.170 --> 00:09:12.470
We view consumers as people that
don't write code at all.

00:09:12.470 --> 00:09:15.610
So we want something that
is complete UI based.

00:09:15.610 --> 00:09:17.180
And if you want to create
a chart, and that's the

00:09:17.180 --> 00:09:20.900
limitation that you have to
start with, then we provide,

00:09:20.900 --> 00:09:26.300
within Google Spreadsheets,
a set of charts.

00:09:26.300 --> 00:09:28.660
Here's the spreadsheet that
actually connects--

00:09:28.660 --> 00:09:32.180
oh I see that a lot of people
did manage to respond.

00:09:32.180 --> 00:09:36.230
So here all of the responses
that we got.

00:09:36.230 --> 00:09:40.740
Who provided 65,000?

00:09:40.740 --> 00:09:42.370
Guys, you're way off.

00:09:42.370 --> 00:09:46.820
And here's a short histogram
of the actual selection.

00:09:46.820 --> 00:09:49.050
So we see that 20 people--
the smart-asses--

00:09:49.050 --> 00:09:50.300
chose one.

00:09:52.760 --> 00:09:54.315
And if I just want
to add a chart, I

00:09:54.315 --> 00:09:55.940
select the data range.

00:09:55.940 --> 00:09:58.240
And I could get a chart
with one click.

00:09:58.240 --> 00:10:02.590
And this new chart editor that
we've created is very cleverly

00:10:02.590 --> 00:10:05.580
done, in a way that if you
select a data range, we

00:10:05.580 --> 00:10:08.530
observe the data and try to
filter out, or prioritize the

00:10:08.530 --> 00:10:11.840
charts that are best compatible
with the data rage

00:10:11.840 --> 00:10:13.440
that the user has selected.

00:10:13.440 --> 00:10:16.510
And so that's one feature
of this chart editor.

00:10:16.510 --> 00:10:20.740
And you know, you could easily
switch over to customize it,

00:10:20.740 --> 00:10:22.640
or select a different flavor,
you know, if you want to

00:10:22.640 --> 00:10:23.930
change different colors,
you want to

00:10:23.930 --> 00:10:26.360
change the legend position.

00:10:26.360 --> 00:10:29.360
All of these are options that
could be easily done.

00:10:29.360 --> 00:10:31.970
So even as a consumer, you're in
a position where you could

00:10:31.970 --> 00:10:37.700
really, in a very quick
manner, provide data

00:10:37.700 --> 00:10:39.970
visualization that was
not available.

00:10:39.970 --> 00:10:41.990
But that's obviously less
exciting for the audience

00:10:41.990 --> 00:10:44.570
here, and what's more exciting
is the offering that we have

00:10:44.570 --> 00:10:46.260
for developers.

00:10:46.260 --> 00:10:49.870
So what's nice about Google
Chart Tools is that we have--

00:10:49.870 --> 00:10:52.170
and this is an advanced talk,
so I assume that most of you

00:10:52.170 --> 00:10:53.260
are familiar with our tools.

00:10:53.260 --> 00:10:55.780
So I'll just glance through
it, and assume that you're

00:10:55.780 --> 00:10:57.310
familiar with this stack.

00:10:57.310 --> 00:11:00.320
But Google Chart Tools provide
a very rich gallery of charts

00:11:00.320 --> 00:11:02.560
and visualizations that
you've already seen.

00:11:02.560 --> 00:11:05.540
But we also provide a common
data structure, which we call

00:11:05.540 --> 00:11:08.760
the data table that all
visualizations work over that

00:11:08.760 --> 00:11:09.660
same data table.

00:11:09.660 --> 00:11:11.980
So if you want to switch between
visualizations, since

00:11:11.980 --> 00:11:15.610
they all work over the same data
structure, that's a very

00:11:15.610 --> 00:11:16.670
simple task.

00:11:16.670 --> 00:11:18.840
And there are a lot of utilities
over that data

00:11:18.840 --> 00:11:22.370
table, where, if you want to
create views, or add rows on

00:11:22.370 --> 00:11:23.820
the fly, all of these
are things that you

00:11:23.820 --> 00:11:26.180
could very easily do.

00:11:26.180 --> 00:11:28.920
And then we have even a deeper
layer that goes back to the

00:11:28.920 --> 00:11:31.340
data sources that you might
have. And we also provide some

00:11:31.340 --> 00:11:33.780
built-in data sources, like
Google Spreadsheets, and

00:11:33.780 --> 00:11:36.420
Fusion Tables, and others,
that could hook

00:11:36.420 --> 00:11:37.200
up into your data.

00:11:37.200 --> 00:11:40.310
And we provide Java and Python
libraries that help you hook

00:11:40.310 --> 00:11:44.140
up your data and layout in
back end to the actual

00:11:44.140 --> 00:11:45.860
visualizations that you want
to [UNINTELLIGIBLE].

00:11:45.860 --> 00:11:52.160
So we really provide an entire
stack of the tools.

00:11:52.160 --> 00:11:55.590
And what I want to talk about a
bit is kind of give you the

00:11:55.590 --> 00:11:59.540
highlights, and what's
new in the stack.

00:11:59.540 --> 00:12:02.770
So what we've had it for a while
already is the option to

00:12:02.770 --> 00:12:03.630
customize charts.

00:12:03.630 --> 00:12:08.470
So this is a very important
thing for developers, is make

00:12:08.470 --> 00:12:10.550
sure that we have very coherent
experience with the

00:12:10.550 --> 00:12:12.270
general site.

00:12:12.270 --> 00:12:15.740
This is a great pie chart that
tries to convey the fact that

00:12:15.740 --> 00:12:18.390
the ninja turtle, Michelangelo,
right now is

00:12:18.390 --> 00:12:22.460
more popular, or is searched
more in Google, than the

00:12:22.460 --> 00:12:26.100
actual Renaissance artist.
So the green slice is

00:12:26.100 --> 00:12:29.830
Michelangelo, the ninja turtle,
and the brown one is

00:12:29.830 --> 00:12:31.560
Michelangelo, the artist.

00:12:31.560 --> 00:12:35.030
And you can see that this is
the XKCD original, and you

00:12:35.030 --> 00:12:38.700
know, with two very simple
options, you could say, oh,

00:12:38.700 --> 00:12:39.910
put the legend in the bottom.

00:12:39.910 --> 00:12:43.170
Make sure that the colors are
this shade of green, and

00:12:43.170 --> 00:12:45.770
here's the appropriate
shade of brown.

00:12:45.770 --> 00:12:48.560
And voila, I have the customized
chart that I could

00:12:48.560 --> 00:12:51.390
take and plug into my website.

00:12:51.390 --> 00:12:54.900
Another demonstration of
customization is--

00:12:54.900 --> 00:12:58.340
so here's that stacked area
chart of the gravity wells

00:12:58.340 --> 00:13:00.080
that we saw earlier on.

00:13:00.080 --> 00:13:03.620
And here's the version that you
will get if you use the

00:13:03.620 --> 00:13:05.850
visualizations out of the box.

00:13:05.850 --> 00:13:08.500
And say this is not really
working for you.

00:13:08.500 --> 00:13:10.590
You don't really need the grid
lines, you don't really need

00:13:10.590 --> 00:13:13.200
the numbers on the
x- and y- axes.

00:13:13.200 --> 00:13:15.260
You definitely don't like this
color palette, so you could

00:13:15.260 --> 00:13:19.420
easily customize pretty much
anything that you want and

00:13:19.420 --> 00:13:23.140
make sure that it fits nicely
into your website.

00:13:23.140 --> 00:13:25.560
By the way, quick question,
what's our favorite moon in

00:13:25.560 --> 00:13:27.910
the solar system?

00:13:27.910 --> 00:13:28.580
Io.

00:13:28.580 --> 00:13:31.150
Very good.

00:13:31.150 --> 00:13:33.800
OK cool.

00:13:33.800 --> 00:13:35.980
So those are things that were
available for a while and then

00:13:35.980 --> 00:13:39.680
on the new stuff is we're fully
committed to switching

00:13:39.680 --> 00:13:40.870
over to HTML5.

00:13:40.870 --> 00:13:43.170
And people here that are
familiar with our gallery know

00:13:43.170 --> 00:13:48.870
that we still had some flash
visualizations in our gallery.

00:13:48.870 --> 00:13:52.080
And we are pretty much in the
process of phasing them out

00:13:52.080 --> 00:13:54.240
and coming out with new versions
that are completely

00:13:54.240 --> 00:13:56.430
HTML5 compatible.

00:13:56.430 --> 00:13:59.960
You could see this GeoMap here
on the top of the chart, which

00:13:59.960 --> 00:14:04.420
is purely SVG-based.

00:14:04.420 --> 00:14:10.080
And what we see in this charge
is the gradual popularity

00:14:10.080 --> 00:14:12.700
overtime of Dilbert
versus XKCD.

00:14:12.700 --> 00:14:16.820
So how many people here have
ever read Dilbert?

00:14:16.820 --> 00:14:17.470
A nice crowd.

00:14:17.470 --> 00:14:19.466
How many people have
ever read XKCD?

00:14:19.466 --> 00:14:21.882
Everyone, no?

00:14:21.882 --> 00:14:24.330
I don't know, I always assumed
that that was the case.

00:14:24.330 --> 00:14:27.500
So what we can do now is we can
see over time, we can see

00:14:27.500 --> 00:14:31.500
that way back in 2006 there
was no XKCD, right?

00:14:31.500 --> 00:14:34.750
And Dilbert was pretty much a
common thing, specifically

00:14:34.750 --> 00:14:38.970
around California which is a
Silicon Valley stronghold.

00:14:38.970 --> 00:14:44.020
And then around 2008
XKCD came in.

00:14:44.020 --> 00:14:47.770
And I think Randall Munroe
started from Massachusetts.

00:14:47.770 --> 00:14:51.680
And you could see that he had
his followers develop there.

00:14:51.680 --> 00:14:54.390
And by today, XKCD is
a lot more popular

00:14:54.390 --> 00:14:55.760
than Dilbert worldwide.

00:14:58.450 --> 00:15:02.210
So what's nice about this is
that there was this GeoMap

00:15:02.210 --> 00:15:05.160
visualization on the top, but
then there's this time control

00:15:05.160 --> 00:15:06.110
on the bottom.

00:15:06.110 --> 00:15:08.000
And we built it in a very
generic way, so you could

00:15:08.000 --> 00:15:11.160
pretty much plug and play
between any visualization that

00:15:11.160 --> 00:15:14.520
you would like on the top, and
the independent time selector

00:15:14.520 --> 00:15:15.110
on the bottom.

00:15:15.110 --> 00:15:18.770
And Riccardo will talk a bit
about selectors later on, and

00:15:18.770 --> 00:15:23.820
hopefully this will be available
by our next release.

00:15:23.820 --> 00:15:28.460
OK so, other new things that
we've been working on.

00:15:28.460 --> 00:15:32.070
So we completely redesigned
our website.

00:15:32.070 --> 00:15:37.030
I encourage you all to go to
code.google.com/apis/chart/.

00:15:37.030 --> 00:15:40.970
So we kind of unified the two
APIs that we previously had

00:15:40.970 --> 00:15:46.610
there and we're releasing a new
version of our data source

00:15:46.610 --> 00:15:47.470
library in Java.

00:15:47.470 --> 00:15:50.210
So you could easily hook up any
data source that you have

00:15:50.210 --> 00:15:52.900
in your backend to create
[UNINTELLIGIBLE]

00:15:52.900 --> 00:15:54.270
tables in the client.

00:15:54.270 --> 00:15:56.530
And I mentioned earlier on that
Fusion Tables are now an

00:15:56.530 --> 00:16:02.310
official, compliant
data source.

00:16:02.310 --> 00:16:04.710
So you could hook up your
visualizations to any Fusion

00:16:04.710 --> 00:16:08.020
Table that you might have. And
we're, almost on a weekly

00:16:08.020 --> 00:16:11.040
basis, releasing new charts and
new visualizations that

00:16:11.040 --> 00:16:12.050
you could start playing
around with.

00:16:12.050 --> 00:16:15.900
And then you could see this
candlestick chart, and many

00:16:15.900 --> 00:16:20.530
others that are coming out
in the next few weeks.

00:16:20.530 --> 00:16:21.140
Cool.

00:16:21.140 --> 00:16:24.270
So now, the grand winner
of our Unique

00:16:24.270 --> 00:16:28.350
competition is Tom J.

00:16:28.350 --> 00:16:29.836
Could you raise your hand?

00:16:29.836 --> 00:16:30.540
Is Tom J.

00:16:30.540 --> 00:16:32.080
here?

00:16:32.080 --> 00:16:33.170
Are you Tom J.?

00:16:33.170 --> 00:16:34.420
No.

00:16:36.530 --> 00:16:37.560
Could you stand up?

00:16:37.560 --> 00:16:38.810
Could you come over?

00:16:41.900 --> 00:16:46.740
So, lower your expectations
as you step by, OK?

00:16:46.740 --> 00:16:50.130
Now lower them a bit more.

00:16:50.130 --> 00:16:51.050
You get a T-shirt.

00:16:51.050 --> 00:16:53.150
Not anything more sophisticated
than that, but

00:16:53.150 --> 00:16:54.400
congratulations.

00:17:00.540 --> 00:17:02.880
Now what's cool about this is
that, you know, you see this

00:17:02.880 --> 00:17:03.540
projected here.

00:17:03.540 --> 00:17:05.700
But if each and every one of you
could look into your email

00:17:05.700 --> 00:17:09.430
right now, you see that you got
a chart sent over to you

00:17:09.430 --> 00:17:12.910
with live results of how
unique you were.

00:17:12.910 --> 00:17:15.349
So if you chose three, probably

00:17:15.349 --> 00:17:16.260
you're not very unique.

00:17:16.260 --> 00:17:17.810
You're one of nine.

00:17:17.810 --> 00:17:19.750
If you chose six, you're
the winner.

00:17:19.750 --> 00:17:21.040
Congratulations, Tom.

00:17:21.040 --> 00:17:23.550
And now I'll switch over to Amit
who will explain how we

00:17:23.550 --> 00:17:27.930
were able, as the talk went on,
to send out all of these

00:17:27.930 --> 00:17:31.190
emails, using the Google
App Scripts.

00:17:35.950 --> 00:17:40.250
AMIT WEINSTEIN: Thank
you, Michael.

00:17:40.250 --> 00:17:43.120
So my name is Amit Weinstein,
and I'm a software engineer in

00:17:43.120 --> 00:17:44.640
the Google Chart Tools team.

00:17:44.640 --> 00:17:49.000
And let's talk about Google app
scripts and how we sent

00:17:49.000 --> 00:17:50.310
you all these emails.

00:17:50.310 --> 00:17:52.420
So most of you are probably
familiar with the Google apps

00:17:52.420 --> 00:17:55.870
script, but just in a few words,
Google apps script is a

00:17:55.870 --> 00:17:59.750
framework to run code, script,
in the Google cloud.

00:17:59.750 --> 00:18:02.360
So you have the benefit of
Google running the scripts for

00:18:02.360 --> 00:18:05.360
you, at the time that you
specify, or according to

00:18:05.360 --> 00:18:07.450
triggers that you define
in advance.

00:18:07.450 --> 00:18:11.650
And it has the resources that
Google has, so you can access

00:18:11.650 --> 00:18:13.210
your email, you can access
your calendar,

00:18:13.210 --> 00:18:14.670
you can access Docs.

00:18:14.670 --> 00:18:17.650
And in that example that we
showed, we sent you an email

00:18:17.650 --> 00:18:20.610
to all the players that
played the game.

00:18:20.610 --> 00:18:22.630
And how is this related
to charts?

00:18:22.630 --> 00:18:26.100
So until today, you couldn't
actually create charts inside

00:18:26.100 --> 00:18:26.965
the Google [? apps ?]

00:18:26.965 --> 00:18:27.950
framework.

00:18:27.950 --> 00:18:29.600
But it's something that
is very natural.

00:18:29.600 --> 00:18:32.220
So if I have a Google
spreadsheet with all the

00:18:32.220 --> 00:18:34.490
inventory that I have in
my store, for example.

00:18:34.490 --> 00:18:39.230
And I want to, every week, to
get an email summarizing the

00:18:39.230 --> 00:18:40.530
inventory and what happened
this week.

00:18:40.530 --> 00:18:43.530
How much did I sell, and how
much is left in the inventory.

00:18:43.530 --> 00:18:46.510
Then it's very natural for me
to ask for such a script.

00:18:46.510 --> 00:18:49.050
And it's really easy to write
such a script if I had support

00:18:49.050 --> 00:18:51.410
for charts in the framework.

00:18:51.410 --> 00:18:56.400
So coming up pretty soon you
would have built-in support

00:18:56.400 --> 00:18:58.460
for charts in the Google
Apps Scripts platform.

00:18:58.460 --> 00:18:59.720
What does it mean?

00:18:59.720 --> 00:19:03.710
You will be able to collect the
data as you already do in

00:19:03.710 --> 00:19:04.550
the Google Apps Scripts.

00:19:04.550 --> 00:19:08.300
So you have the spreadsheets
maybe from your email, so you

00:19:08.300 --> 00:19:10.360
collect all the data, and
you create the chart.

00:19:10.360 --> 00:19:12.860
And you customize the chart
according to whatever you want

00:19:12.860 --> 00:19:16.270
the chart to look like, as
we will see in a minute.

00:19:16.270 --> 00:19:18.660
And then you embed that chart
whenever you want.

00:19:18.660 --> 00:19:21.830
So one option is to send the
chart as a separate image into

00:19:21.830 --> 00:19:23.890
your email, as we did
in the example.

00:19:23.890 --> 00:19:27.740
But there are other examples,
such as any adding the chart

00:19:27.740 --> 00:19:31.180
into your doc list, so you can
just see all the statistics

00:19:31.180 --> 00:19:35.060
from each week you will have an
additional item in your doc

00:19:35.060 --> 00:19:36.870
list with the new chart.

00:19:36.870 --> 00:19:39.740
So you can look at the flow that
we have in our case, we

00:19:39.740 --> 00:19:42.470
have spreadsheets, which
stores all the data.

00:19:42.470 --> 00:19:47.240
And you submitted the form as
we gave you the link today.

00:19:47.240 --> 00:19:50.570
So the form answers are
aggregated into a spreadsheet

00:19:50.570 --> 00:19:52.640
and then the script
was triggered.

00:19:52.640 --> 00:19:54.910
So you can trigger the script
by form submission, for

00:19:54.910 --> 00:19:58.570
example, or to define it
at a specific time.

00:19:58.570 --> 00:20:03.315
And then the script just ran
over the votes that you

00:20:03.315 --> 00:20:05.900
submitted and created
individual

00:20:05.900 --> 00:20:07.260
charts for each player.

00:20:07.260 --> 00:20:10.810
So the chart that you saw before
was a chart specific

00:20:10.810 --> 00:20:12.540
for the control group
number three.

00:20:12.540 --> 00:20:15.310
So it showed that
[UNINTELLIGIBLE PHRASE]

00:20:15.310 --> 00:20:18.340
chose three, and the winner
chose six, and how is the

00:20:18.340 --> 00:20:21.290
distribution of the other
players in the game.

00:20:21.290 --> 00:20:23.760
So let's take a look at
some code snippets.

00:20:23.760 --> 00:20:26.080
So the first part is collecting
the data.

00:20:26.080 --> 00:20:28.810
I won't get that too much into
it, because this is part of

00:20:28.810 --> 00:20:31.340
the Google apps general
framework and if you're

00:20:31.340 --> 00:20:34.000
interested, there just a talk
in room two just following

00:20:34.000 --> 00:20:36.630
this talk about that framework
in general.

00:20:36.630 --> 00:20:39.470
So let's assume that I already
have the data, so I create a

00:20:39.470 --> 00:20:40.130
new data table.

00:20:40.130 --> 00:20:43.420
Michael already mentioned that
we have some protocol to shift

00:20:43.420 --> 00:20:45.600
data from one place to another,
and to fit it to a

00:20:45.600 --> 00:20:46.550
visualization.

00:20:46.550 --> 00:20:48.530
And I just create a
new data table.

00:20:48.530 --> 00:20:50.880
And I fill in the values that
I had from the Google

00:20:50.880 --> 00:20:51.750
spreadsheet.

00:20:51.750 --> 00:20:54.715
So I add different columns
according to the series that I

00:20:54.715 --> 00:20:56.980
need to have in my chart.

00:20:56.980 --> 00:20:58.840
Once I have the date
ready, I want to

00:20:58.840 --> 00:21:00.340
create the charge itself.

00:21:00.340 --> 00:21:02.620
So I initialize a new
column chart.

00:21:02.620 --> 00:21:05.070
And I customize a chart
according to what I need.

00:21:05.070 --> 00:21:08.560
So one important thing
is to fit the data

00:21:08.560 --> 00:21:10.120
itself into the chart.

00:21:10.120 --> 00:21:13.950
So this can be done using the
set data table method.

00:21:13.950 --> 00:21:16.610
And the other thing, I can
customize the chart as I want.

00:21:16.610 --> 00:21:19.160
For example, I can set the
dimensions, I can set the

00:21:19.160 --> 00:21:22.670
title, and eventually just
build the chart.

00:21:22.670 --> 00:21:23.970
And now I have a
chart instant.

00:21:23.970 --> 00:21:26.275
And the question, what do I
do with the chart instant.

00:21:26.275 --> 00:21:28.190
We have several options.

00:21:28.190 --> 00:21:29.610
I our example we
sent an email.

00:21:29.610 --> 00:21:31.670
So in order to send an
attachment in an email, I

00:21:31.670 --> 00:21:34.950
first convert the chart
into PNG image.

00:21:34.950 --> 00:21:38.760
So I can get the bytes of the
PNG image using this line.

00:21:38.760 --> 00:21:41.510
And then I just attach to the
email and send it to each

00:21:41.510 --> 00:21:43.800
different user.

00:21:43.800 --> 00:21:44.770
So that's about it.

00:21:44.770 --> 00:21:46.920
It's a very small script,
short script.

00:21:46.920 --> 00:21:48.270
And it's very easy.

00:21:48.270 --> 00:21:50.850
And hopefully in a few weeks,
you will be able to play with

00:21:50.850 --> 00:21:54.430
it in your own rule abstracts.

00:21:54.430 --> 00:21:57.680
So the next topic that I want
to cover is ChartWrapper.

00:21:57.680 --> 00:22:01.660
So the point of ChartWrapper
that we introduced in the

00:22:01.660 --> 00:22:04.910
release that we shipped
yesterday is

00:22:04.910 --> 00:22:06.120
making things simpler.

00:22:06.120 --> 00:22:08.750
So let's take a look at the
example of loading a Google

00:22:08.750 --> 00:22:11.830
visualization without
using ChartWrapper.

00:22:11.830 --> 00:22:14.860
So we have several sections
in our page.

00:22:14.860 --> 00:22:17.590
The first one is loading
the visualization API.

00:22:17.590 --> 00:22:20.430
So here I write Google
load visualization.

00:22:20.430 --> 00:22:22.850
And I ask for a version,
number one.

00:22:22.850 --> 00:22:25.970
And I specify the package that
they want, specifically here I

00:22:25.970 --> 00:22:27.200
ask for [UNINTELLIGIBLE PHRASE]

00:22:27.200 --> 00:22:27.620
package.

00:22:27.620 --> 00:22:28.590
And then I have [UNINTELLIGIBLE]

00:22:28.590 --> 00:22:29.860
method.

00:22:29.860 --> 00:22:32.720
And assuming that I want the
data to come from the Google

00:22:32.720 --> 00:22:34.620
spreadsheets, I have
some specific

00:22:34.620 --> 00:22:37.750
spreadsheets URL that l query.

00:22:37.750 --> 00:22:39.170
And I send that query.

00:22:39.170 --> 00:22:43.490
And I specify the handler
to be run when

00:22:43.490 --> 00:22:45.640
the query is returned.

00:22:45.640 --> 00:22:49.090
And the handler makes sure that
the query was successful,

00:22:49.090 --> 00:22:51.930
that there was no error, and
assuming there was no error, I

00:22:51.930 --> 00:22:53.790
have a data table
from the query.

00:22:53.790 --> 00:22:57.600
And I just initialize the
chart, and draw it.

00:22:57.600 --> 00:23:02.540
So let's see how we can make
this snippet a bit shorter.

00:23:02.540 --> 00:23:04.900
So this is a new snippet
with ChartWrapper.

00:23:04.900 --> 00:23:07.980
So first I load the
visualization API without

00:23:07.980 --> 00:23:09.520
specifying any specific chart.

00:23:09.520 --> 00:23:13.990
I only want the core part of
the API, only what contains

00:23:13.990 --> 00:23:15.240
ChartWrapper.

00:23:15.240 --> 00:23:18.725
And then once I have the core
API, it just initializes a

00:23:18.725 --> 00:23:20.200
ChartWrapper, and I
specify all the

00:23:20.200 --> 00:23:21.380
parameters that I need.

00:23:21.380 --> 00:23:24.590
So I specify the data source
URL, which is the same URL

00:23:24.590 --> 00:23:26.010
from the previous slide.

00:23:26.010 --> 00:23:29.060
I specify what chart type I
want to present, which is

00:23:29.060 --> 00:23:30.100
column chart.

00:23:30.100 --> 00:23:34.000
And then I specify the container
ID, where in the

00:23:34.000 --> 00:23:36.360
page I want to display
the chart.

00:23:36.360 --> 00:23:37.300
And that's it.

00:23:37.300 --> 00:23:39.840
My next call is to
the Draw method.

00:23:39.840 --> 00:23:41.660
And this handles all
things for me.

00:23:41.660 --> 00:23:44.490
So it loads the correct package
from the visualization

00:23:44.490 --> 00:23:45.840
API dynamically.

00:23:45.840 --> 00:23:49.500
It sends the query to Google
spreadsheet without me having

00:23:49.500 --> 00:23:50.810
to specify--

00:23:50.810 --> 00:23:52.690
to query it myself.

00:23:52.690 --> 00:23:55.610
And it then draws the
visualization into the view

00:23:55.610 --> 00:23:58.040
that I specified.

00:23:58.040 --> 00:24:00.810
In addition, it also allows
you to modify

00:24:00.810 --> 00:24:01.770
the chart very easily.

00:24:01.770 --> 00:24:05.450
So now let's say I want to
change the chart form from

00:24:05.450 --> 00:24:07.040
column chart to area chart.

00:24:07.040 --> 00:24:10.790
I adjust chart type
with area chart.

00:24:10.790 --> 00:24:13.640
And for example, I can also set
some option like the title

00:24:13.640 --> 00:24:14.910
to be, My New Area Chart.

00:24:14.910 --> 00:24:16.970
And to call the draw
method again.

00:24:16.970 --> 00:24:19.480
So everything is taken care
of behind the scenes.

00:24:19.480 --> 00:24:23.530
So the new package is being
loaded, and the new chart is

00:24:23.530 --> 00:24:27.170
being initialized and drawn
to the [? supreme. ?]

00:24:27.170 --> 00:24:28.960
So we already discussed some
of the features of

00:24:28.960 --> 00:24:29.530
ChartWrapper.

00:24:29.530 --> 00:24:31.960
Here is a list of some more.

00:24:31.960 --> 00:24:35.500
So we saw that we created from
JSON that has all the

00:24:35.500 --> 00:24:37.320
information that the
chart needed.

00:24:37.320 --> 00:24:40.790
Basically, encapsulated the
information that represents a

00:24:40.790 --> 00:24:43.290
chart that we draw later
on the screen.

00:24:43.290 --> 00:24:48.210
It loads the packages for us,
and it runs a query for us,

00:24:48.210 --> 00:24:50.120
provides the handler.

00:24:50.120 --> 00:24:53.030
We can easily modify and
redraw the chart.

00:24:53.030 --> 00:24:55.970
And another feature that we
haven't discussed so far, is

00:24:55.970 --> 00:24:58.640
that this object is serialized
and clone-able.

00:24:58.640 --> 00:25:02.095
So basically once we have that
ChartWrapper, and we modify

00:25:02.095 --> 00:25:03.470
it, we can store it.

00:25:03.470 --> 00:25:06.670
And we can store it so that the
next time we want to show

00:25:06.670 --> 00:25:09.230
the chart, we would be able
to show the unmodified

00:25:09.230 --> 00:25:10.030
version of the chart.

00:25:10.030 --> 00:25:12.330
So we can hold a state.

00:25:12.330 --> 00:25:16.450
And one more thing that in order
to make life easier, we

00:25:16.450 --> 00:25:20.310
have a function named
GoogleVisualization creates

00:25:20.310 --> 00:25:23.660
snippets that takes the JSON
format of the ChartWrapper,

00:25:23.660 --> 00:25:26.250
and create a snippet that you
can embed in your site.

00:25:26.250 --> 00:25:30.500
So I can modify the chart
dynamically, and then take the

00:25:30.500 --> 00:25:32.850
snippet of the chart and
embed it in whatever

00:25:32.850 --> 00:25:34.780
web page that I want.

00:25:34.780 --> 00:25:38.120
And we will now see an example
how this encapsulation helps

00:25:38.120 --> 00:25:42.720
us to work with the
visualization API.

00:25:42.720 --> 00:25:44.400
So the next topic
is Chart Editor.

00:25:44.400 --> 00:25:47.330
So Michael only showed the Chart
Editor inside the Google

00:25:47.330 --> 00:25:48.380
Spreadsheet environment.

00:25:48.380 --> 00:25:50.970
But sometimes you have the data
outside of the Google

00:25:50.970 --> 00:25:53.400
Spreadsheet environment, and
freely want to allow your

00:25:53.400 --> 00:25:56.670
users, or even yourself, to
easily modify the chart and

00:25:56.670 --> 00:25:57.810
customize it.

00:25:57.810 --> 00:26:01.180
So the Chart Editor's a powerful
tool for customizing

00:26:01.180 --> 00:26:02.380
the charts.

00:26:02.380 --> 00:26:04.260
So we already saw some
of the features.

00:26:04.260 --> 00:26:07.110
And as of today, you can
embed the Chart Editor

00:26:07.110 --> 00:26:08.530
inside your own pages.

00:26:08.530 --> 00:26:12.850
So for example, we embedded the
Editor inside the slide on

00:26:12.850 --> 00:26:16.230
this doc, so I can just
click the open Editor.

00:26:16.230 --> 00:26:16.590
And [UNINTELLIGIBLE]

00:26:16.590 --> 00:26:19.270
and I have the data from the
game that we played before,

00:26:19.270 --> 00:26:21.680
the live game from the results
that you submitted.

00:26:21.680 --> 00:26:22.150
And I have it here.

00:26:22.150 --> 00:26:24.480
And I can modify the chart.

00:26:24.480 --> 00:26:27.690
So if Tom would say what
is his favorite color.

00:26:27.690 --> 00:26:30.935
Let me see.

00:26:30.935 --> 00:26:32.980
Is he here?

00:26:32.980 --> 00:26:35.007
OK, so let's say we want to
change the color of the

00:26:35.007 --> 00:26:38.380
winner, and let's say that his
favorite color is pink.

00:26:38.380 --> 00:26:41.230
Then I choose pink, and
then I press OK.

00:26:41.230 --> 00:26:44.080
And then the chart is embedded
inside these slides.

00:26:44.080 --> 00:26:45.020
And it's persistent.

00:26:45.020 --> 00:26:48.200
So now when I go back to
the slide, the color

00:26:48.200 --> 00:26:49.460
would remain modified.

00:26:49.460 --> 00:26:51.800
And I can modify the chart
again, and I can change, for

00:26:51.800 --> 00:26:54.710
example, the title
and say, specify

00:26:54.710 --> 00:26:56.560
the name of the winner.

00:26:56.560 --> 00:27:00.350
And it's immediately reflected
to the slide that we see.

00:27:00.350 --> 00:27:02.530
So you can embed your Editor
inside your own page.

00:27:06.370 --> 00:27:09.930
OK so here is a very short
concept on how to create this

00:27:09.930 --> 00:27:10.730
on your own.

00:27:10.730 --> 00:27:12.790
So first we create
a ChartWrapper.

00:27:12.790 --> 00:27:15.280
As we said, the ChartWrapper
encapsulates the information

00:27:15.280 --> 00:27:17.580
that the visualization needs
in order to be drawn.

00:27:17.580 --> 00:27:20.630
And in this case, we only
specify the data source URL

00:27:20.630 --> 00:27:23.750
because everything else will be
defined by the user in the

00:27:23.750 --> 00:27:24.560
Chart Editor.

00:27:24.560 --> 00:27:27.030
So we don't need to specify the
options, and we don't need

00:27:27.030 --> 00:27:29.900
to specify the container
at this time.

00:27:29.900 --> 00:27:31.770
And we don't need to specify
the chart type.

00:27:31.770 --> 00:27:34.120
Everything will be defined
in the Editor.

00:27:34.120 --> 00:27:35.950
And the next step is to
create the Editor.

00:27:35.950 --> 00:27:37.710
So we initialize a Google
visualization

00:27:37.710 --> 00:27:39.810
Chart Editor object.

00:27:39.810 --> 00:27:42.160
And we listen to the OK event.

00:27:42.160 --> 00:27:44.860
So we want to decide what
happens when the user clicks

00:27:44.860 --> 00:27:49.790
on the event button in the
Chart Editor window.

00:27:49.790 --> 00:27:52.850
And in this example, we take
the Editor, and we ask the

00:27:52.850 --> 00:27:55.205
Editor for the current,
up-to-date ChartWrapper

00:27:55.205 --> 00:27:58.720
instance, which has
the serialized

00:27:58.720 --> 00:28:00.790
representation of the chart.

00:28:00.790 --> 00:28:03.320
And we just call the draw method
to the container that

00:28:03.320 --> 00:28:04.170
we specify.

00:28:04.170 --> 00:28:05.060
And that's it.

00:28:05.060 --> 00:28:08.580
The chart is immediately updated
and is persistent.

00:28:08.580 --> 00:28:10.830
And then we just need
to open the dialogue

00:28:10.830 --> 00:28:11.520
whenever you want.

00:28:11.520 --> 00:28:15.020
So we decided that it would be
open on the click on the open

00:28:15.020 --> 00:28:17.820
dialog button that you can have
whatever trigger that you

00:28:17.820 --> 00:28:20.560
want to open the Editor.

00:28:20.560 --> 00:28:21.010
That's it.

00:28:21.010 --> 00:28:23.630
Now I will hand over to Riccardo
to tell you about

00:28:23.630 --> 00:28:24.880
Controls and Dashboards.

00:28:31.320 --> 00:28:35.010
RICCARDO GOVONI: Welcome,
everybody.

00:28:35.010 --> 00:28:37.260
My name is Riccardo, and I'm
going to guide you through the

00:28:37.260 --> 00:28:38.970
last part of this presentation,
which is going

00:28:38.970 --> 00:28:41.350
to be Controls and Dashboards.

00:28:41.350 --> 00:28:43.990
So, before we start, let
me spend a minute

00:28:43.990 --> 00:28:46.010
with a small story.

00:28:46.010 --> 00:28:48.570
How many times has it happened
to you that you tried to solve

00:28:48.570 --> 00:28:51.760
a problem using a chart, and
if you're [UNINTELLIGIBLE]

00:28:51.760 --> 00:28:54.050
it would only solve part
of the problem.

00:28:54.050 --> 00:28:56.240
It would only give you
a partial answer.

00:28:56.240 --> 00:29:00.200
For example, a few weeks back,
my manager came around and he

00:29:00.200 --> 00:29:03.810
asked me, can you show me the
number of bugs that a team

00:29:03.810 --> 00:29:05.140
created over the last week.

00:29:05.140 --> 00:29:08.340
And I said, OK, here is a pie
chart, number of bugs created

00:29:08.340 --> 00:29:10.310
over the last week
by the team.

00:29:10.310 --> 00:29:12.762
He was happy, went away, came
back five minutes later and

00:29:12.762 --> 00:29:15.270
said, can you also show me
the trend over time.

00:29:15.270 --> 00:29:16.210
I said, OK.

00:29:16.210 --> 00:29:18.340
I aggregated the data
over time, then

00:29:18.340 --> 00:29:19.700
created a line chart.

00:29:19.700 --> 00:29:22.140
He was happy, went away.

00:29:22.140 --> 00:29:24.960
Came back five minutes later
and asked me again, can you

00:29:24.960 --> 00:29:26.100
show me the data maybe
aggregated

00:29:26.100 --> 00:29:28.420
over months and year.

00:29:28.420 --> 00:29:30.620
OK, two more pie charts,
month and year.

00:29:30.620 --> 00:29:31.390
Should be fine.

00:29:31.390 --> 00:29:33.280
Went away, came back.

00:29:33.280 --> 00:29:36.310
And, can I see the data also
aggregated maybe by geography

00:29:36.310 --> 00:29:38.260
because your team is distributed
and you have

00:29:38.260 --> 00:29:40.100
people all over the place and
I want to see the bugs that

00:29:40.100 --> 00:29:41.720
they created in other places?

00:29:41.720 --> 00:29:44.060
OK, go through the data
again, aggregate by

00:29:44.060 --> 00:29:44.950
geography this time.

00:29:44.950 --> 00:29:46.290
Sum everything up.

00:29:46.290 --> 00:29:47.640
Put a GeoChart in place.

00:29:47.640 --> 00:29:49.380
And he was happy,
but I was not.

00:29:49.380 --> 00:29:52.215
By this time, I was reasonably
annoyed because I created a

00:29:52.215 --> 00:29:54.880
very sketch dashboard with logic
to keep everything in

00:29:54.880 --> 00:29:58.170
place, and everything was a bit
of Javascript nightmare.

00:29:58.170 --> 00:29:59.670
Why was that?

00:29:59.670 --> 00:30:00.710
Well for two reasons.

00:30:00.710 --> 00:30:03.940
One is that, today,
visualizations are helpful,

00:30:03.940 --> 00:30:06.010
but they offer a single
perspective.

00:30:06.010 --> 00:30:10.360
You have to choose one or a few
of dimensions out of all

00:30:10.360 --> 00:30:13.100
the data that you might have,
out of the data table that you

00:30:13.100 --> 00:30:16.020
might have, and it might span
multiple dimensions, and use

00:30:16.020 --> 00:30:17.070
them for your chart, right?

00:30:17.070 --> 00:30:19.730
And in a pie chart, you can
only pick one dimension.

00:30:19.730 --> 00:30:23.070
And maybe the dimension does not
give you the full picture.

00:30:23.070 --> 00:30:25.660
It only gives you a partial
presentation of the data that

00:30:25.660 --> 00:30:26.820
you have.

00:30:26.820 --> 00:30:32.170
The other issue is that so far
wiring together multiple

00:30:32.170 --> 00:30:34.470
visualizations has been hard.

00:30:34.470 --> 00:30:37.010
You had to take care of all the
events, making sure that

00:30:37.010 --> 00:30:39.150
all of the visualizations
were ready.

00:30:39.150 --> 00:30:43.060
And maybe taking care of
distributing the correct data

00:30:43.060 --> 00:30:45.990
to each visualization, because
they have different rules for

00:30:45.990 --> 00:30:48.390
the kind of columns
that they expect.

00:30:48.390 --> 00:30:49.710
And so, so far it
has been hard.

00:30:49.710 --> 00:30:52.720
And you had write a lot of
JavaScript boilerplate.

00:30:52.720 --> 00:30:54.850
And in the end, I mean, it's
not really that fun.

00:30:54.850 --> 00:30:58.450
And so we thought, can
we make anything--

00:30:58.450 --> 00:31:01.390
can we do anything to
make this simpler?

00:31:01.390 --> 00:31:02.790
And we thought about
it for a while.

00:31:02.790 --> 00:31:05.390
And at least to make my life
simpler, so I don't have to

00:31:05.390 --> 00:31:08.210
create that many dashboards
for my code, we decided to

00:31:08.210 --> 00:31:09.870
introduce two entities.

00:31:09.870 --> 00:31:12.020
The first one is a control.

00:31:12.020 --> 00:31:15.530
Well what is a Control A control
is a UI widget that

00:31:15.530 --> 00:31:19.450
collects user input and uses
that information to decide

00:31:19.450 --> 00:31:22.950
which data to hand over to
the charts that followed.

00:31:22.950 --> 00:31:25.730
So for example, a control could
be an auto-completer, a

00:31:25.730 --> 00:31:30.820
slider, a data picker, range
selector, you name it.

00:31:30.820 --> 00:31:33.920
And that will let you the
user specify and give us

00:31:33.920 --> 00:31:35.630
information about the
data that he wants

00:31:35.630 --> 00:31:37.820
to see in the charts.

00:31:37.820 --> 00:31:41.690
And here you see an example of
the gallery of widgets that

00:31:41.690 --> 00:31:43.730
we're going to roll out as
part of the controls and

00:31:43.730 --> 00:31:45.490
dashboard APIs.

00:31:45.490 --> 00:31:48.790
And as you can see here, we
have sliders, we have

00:31:48.790 --> 00:31:48.960
[UNINTELLIGIBLE]

00:31:48.960 --> 00:31:53.500
pickers, we have
auto-completers.

00:31:53.500 --> 00:31:57.330
You can imagine, for example,
having a data chart and a

00:31:57.330 --> 00:31:57.680
[UNINTELLIGIBLE]

00:31:57.680 --> 00:31:58.810
slider on top of that.

00:31:58.810 --> 00:32:01.910
And let the user, with the
slider, select the fraction of

00:32:01.910 --> 00:32:03.790
the data that he cares about,
and he might be more

00:32:03.790 --> 00:32:05.300
interested in.

00:32:05.300 --> 00:32:07.920
So now you need to wire
everything together, and for

00:32:07.920 --> 00:32:11.550
this we're introducing
a dashboard.

00:32:11.550 --> 00:32:12.900
What is a dashboard?

00:32:12.900 --> 00:32:15.990
A dashboard is just a collection
of controls and

00:32:15.990 --> 00:32:19.340
charts that play together
over the same set

00:32:19.340 --> 00:32:20.980
of underlying data.

00:32:20.980 --> 00:32:24.010
It's the wiring, it's the
binding logic, so that you

00:32:24.010 --> 00:32:27.400
don't have to, that takes care
of basically propagating the

00:32:27.400 --> 00:32:30.130
data through all the controls
and charts that are part of

00:32:30.130 --> 00:32:32.260
the dashboard and making
them behave like a

00:32:32.260 --> 00:32:33.560
[? query info. ?]

00:32:33.560 --> 00:32:37.390
So let's look at how the
API would look like.

00:32:37.390 --> 00:32:41.220
So we tried to keep the API
simple, and thus similar to

00:32:41.220 --> 00:32:43.810
the ones that you're already
familiar with.

00:32:43.810 --> 00:32:45.530
Well what would you do then?

00:32:45.530 --> 00:32:47.330
Well, the first thing is we
said, they're going to

00:32:47.330 --> 00:32:49.330
probably create some charts.

00:32:49.330 --> 00:32:51.430
And for this, they're going to
use the google.visualiza

00:32:51.430 --> 00:32:56.150
tion.ChartWrapper that
Amit just introduced.

00:32:56.150 --> 00:32:59.130
And as we said, it's a single,
self-contained wrapper that

00:32:59.130 --> 00:33:01.210
describes what the
chart should be.

00:33:01.210 --> 00:33:03.570
It has a type, for example,
a pie chart,

00:33:03.570 --> 00:33:04.550
there's some options.

00:33:04.550 --> 00:33:07.057
And it has a place older
in the page that

00:33:07.057 --> 00:33:09.150
would contain it.

00:33:09.150 --> 00:33:11.350
Then you're going to have
controls that will let the

00:33:11.350 --> 00:33:14.620
user play with the data,
and affect the charts.

00:33:14.620 --> 00:33:16.280
And for this, we're going
to introduce--

00:33:16.280 --> 00:33:17.590
we're introducing now--

00:33:17.590 --> 00:33:20.220
an equivalent class which
has the same semantics--

00:33:20.220 --> 00:33:21.470
google.visualiza
tion.ControlWrapper.

00:33:22.930 --> 00:33:26.400
It is configured in the same
way with a JSON object, and

00:33:26.400 --> 00:33:28.690
you use that to specify the
kind of controls that you

00:33:28.690 --> 00:33:32.090
would like to have. In this
case, we are introducing a

00:33:32.090 --> 00:33:35.260
control of type number range
filter, which is going to be a

00:33:35.260 --> 00:33:38.520
slider, a range selector
over numbers.

00:33:38.520 --> 00:33:39.810
And it's going to have
a few options.

00:33:39.810 --> 00:33:42.060
It's going to work on the
data table column,

00:33:42.060 --> 00:33:43.800
which is called, salary.

00:33:43.800 --> 00:33:46.710
It is going to limit the
range from 10 to 100.

00:33:46.710 --> 00:33:49.090
If you don't specify it, it will
figure itself out from

00:33:49.090 --> 00:33:50.580
the data that you gave it.

00:33:50.580 --> 00:33:54.070
And it has a container where
it's going to render itself.

00:33:54.070 --> 00:33:56.450
Then you need to wire
the two together.

00:33:56.450 --> 00:33:57.940
And for this, we're
going to use

00:33:57.940 --> 00:34:00.570
google.visualization.dashboard.

00:34:00.570 --> 00:34:02.950
And as you can see, it
has a bind method.

00:34:02.950 --> 00:34:05.800
And in the bind method, you
specify the controls and the

00:34:05.800 --> 00:34:07.860
charts that will be part
of your visualization.

00:34:07.860 --> 00:34:09.699
Controls first, charts second.

00:34:09.699 --> 00:34:12.639
The dashboard will take care
of everything for you.

00:34:12.639 --> 00:34:14.750
So it will take care of wiring
all of the events of

00:34:14.750 --> 00:34:16.969
propagating the data through
all of the elements, making

00:34:16.969 --> 00:34:19.739
sure everybody gets
the right data.

00:34:19.739 --> 00:34:22.510
And finally while clearly we
need the data at some point.

00:34:22.510 --> 00:34:26.400
So until now, you were used
to giving the data

00:34:26.400 --> 00:34:27.710
to the chart itself.

00:34:27.710 --> 00:34:30.110
But now we have a dashboard
that props everything up.

00:34:30.110 --> 00:34:32.110
And so you're going to give
the data to the dashboard

00:34:32.110 --> 00:34:33.100
through a familiar
[UNINTELLIGIBLE]

00:34:33.100 --> 00:34:33.850
method.

00:34:33.850 --> 00:34:37.870
And so in the end, what you have
is a hopefully short and

00:34:37.870 --> 00:34:40.870
simple API that will let you
specify a dashboard, which is

00:34:40.870 --> 00:34:43.610
a composition of controls and
charts and [UNINTELLIGIBLE],

00:34:43.610 --> 00:34:46.189
with letter table
that you have.

00:34:46.189 --> 00:34:47.850
So let's recap a bit.

00:34:47.850 --> 00:34:49.359
As we said, we have introduced
the google.visualiza

00:34:49.359 --> 00:34:53.630
tion.ChartWrapper as a single,
self-contained descriptor for

00:34:53.630 --> 00:34:56.730
what the chart should
look like.

00:34:56.730 --> 00:35:00.050
We have the google.visualiza
tion.ControlWrapper, single

00:35:00.050 --> 00:35:01.610
self-contained descriptor
for what the

00:35:01.610 --> 00:35:02.970
control should look like.

00:35:02.970 --> 00:35:05.800
And again, it is a user
interface element that

00:35:05.800 --> 00:35:10.530
collects the user input, and
uses it to decide which data

00:35:10.530 --> 00:35:12.220
goes to the charts.

00:35:12.220 --> 00:35:15.720
As you can see, again, it has a
type that decides which kind

00:35:15.720 --> 00:35:19.340
of control you want to have, a
placeholder for the position

00:35:19.340 --> 00:35:21.960
in the page, where you want to
render it in, [? pairs ?]

00:35:21.960 --> 00:35:24.390
options, the edition
is the state.

00:35:24.390 --> 00:35:28.390
State describes basically the
user input that we collected.

00:35:28.390 --> 00:35:31.150
For our range slider, it would
describe the position and the

00:35:31.150 --> 00:35:32.440
value of the two
[UNINTELLIGIBLE]

00:35:32.440 --> 00:35:34.360
of the range slider.

00:35:34.360 --> 00:35:36.860
You can define an initial
state, so if you want to

00:35:36.860 --> 00:35:39.870
prepare the control in the
defined state when you

00:35:39.870 --> 00:35:41.360
initialize the dashboard.

00:35:41.360 --> 00:35:43.370
And it can also-- it change
after the fact,

00:35:43.370 --> 00:35:45.370
programmatically, for example,
to integrate

00:35:45.370 --> 00:35:46.620
with your own logic.

00:35:49.200 --> 00:35:52.320
And then we have the
google.visualization.dashboard

00:35:52.320 --> 00:35:57.080
and simple constructor, a bind
method where you specify which

00:35:57.080 --> 00:35:59.350
controls are part of the
dashboard, which charts are

00:35:59.350 --> 00:36:01.940
part of the dashboard, and we
will take care of wiring

00:36:01.940 --> 00:36:03.270
everything together.

00:36:03.270 --> 00:36:05.080
It also as a method--

00:36:05.080 --> 00:36:07.230
it also lets you drop--

00:36:07.230 --> 00:36:11.560
sorry, bind together controls
with other controls to create

00:36:11.560 --> 00:36:12.540
sort of the dependency chains.

00:36:12.540 --> 00:36:15.400
And we will go over this
later if we have time.

00:36:15.400 --> 00:36:17.900
And finally, you have
draw method that

00:36:17.900 --> 00:36:19.400
accepts a data table.

00:36:19.400 --> 00:36:22.240
And once you give the data table
to the dashboard, then

00:36:22.240 --> 00:36:23.420
the entire dashboard
will go live.

00:36:23.420 --> 00:36:27.670
And it would work on its own
from that point onward.

00:36:27.670 --> 00:36:30.530
Whenever the user will interact
with a control, the

00:36:30.530 --> 00:36:34.090
dashboard will take care of
updating all the affected jobs

00:36:34.090 --> 00:36:38.070
and keeping the old
page coherent.

00:36:38.070 --> 00:36:40.340
But enough with the slides, and
let's see if we can cover

00:36:40.340 --> 00:36:42.030
it with a demo.

00:36:42.030 --> 00:36:44.990
So many of you are familiar with
this data site that was,

00:36:44.990 --> 00:36:48.000
I think, originally presented
by Rosling, and shows the

00:36:48.000 --> 00:36:53.900
correlation between life
expectancy kids per woman.

00:36:53.900 --> 00:36:54.410
Not many?

00:36:54.410 --> 00:36:54.950
OK.

00:36:54.950 --> 00:36:58.600
For those of you that are not,
this was a great presentation

00:36:58.600 --> 00:37:02.080
that showed basically a life
expectancy and number of kids

00:37:02.080 --> 00:37:04.490
per women, change over time, for
all the countries in the

00:37:04.490 --> 00:37:08.260
world and showed basically the
world evolved to where

00:37:08.260 --> 00:37:10.830
countries where people lived
longer and because of having

00:37:10.830 --> 00:37:12.020
fewer kids.

00:37:12.020 --> 00:37:13.610
It's a very powerful
presentation--

00:37:13.610 --> 00:37:15.000
visualization.

00:37:15.000 --> 00:37:16.480
But it's monolithic, right?

00:37:16.480 --> 00:37:18.500
You cannot really change
and [? doubt ?]

00:37:18.500 --> 00:37:18.910
the radius.

00:37:18.910 --> 00:37:20.930
It's kind of a flash component,
where, suppose you

00:37:20.930 --> 00:37:24.300
want to change the bubble chart
with a GeoMap, or with a

00:37:24.300 --> 00:37:25.760
different kind of
visualization.

00:37:25.760 --> 00:37:29.130
Or suppose you want to present
another kind of information

00:37:29.130 --> 00:37:31.020
along with this bubble
chart as the time

00:37:31.020 --> 00:37:32.360
slider moves along.

00:37:32.360 --> 00:37:34.660
It's not really easy to
change this chart.

00:37:34.660 --> 00:37:36.070
I cannot actually
do it right now.

00:37:36.070 --> 00:37:38.230
But maybe we can create
something similar with the

00:37:38.230 --> 00:37:40.490
APIs that we just introduced.

00:37:40.490 --> 00:37:42.750
Let's see if we can build
something like

00:37:42.750 --> 00:37:44.760
this, not this one.

00:37:44.760 --> 00:37:47.530
So ideally, what we would like
to assemble in the next few

00:37:47.530 --> 00:37:49.240
minutes is something
like this one.

00:37:49.240 --> 00:37:52.190
You see on the top, we have
a bunch of controls.

00:37:52.190 --> 00:37:57.100
We have a year selector, we have
a country selector, we

00:37:57.100 --> 00:37:58.570
have a life expectancy slider.

00:37:58.570 --> 00:38:01.975
And whenever you operate one
of the controls, all the

00:38:01.975 --> 00:38:04.700
charts in the bottom will
react in real time.

00:38:04.700 --> 00:38:06.950
In this case we are showing
different metrics, for

00:38:06.950 --> 00:38:10.700
example, life expectancy and
GDP per capita, which is an

00:38:10.700 --> 00:38:13.250
indication of how rich
were the people on

00:38:13.250 --> 00:38:15.120
average in that country.

00:38:15.120 --> 00:38:19.270
So for example, for 2008, if
you look at which countries

00:38:19.270 --> 00:38:22.780
have a life expectancy below
60 years, you will see that

00:38:22.780 --> 00:38:25.120
unfortunately most of Africa
sill has a low life

00:38:25.120 --> 00:38:26.170
expectancy.

00:38:26.170 --> 00:38:28.560
But at the same time, you have
seen how the charts and

00:38:28.560 --> 00:38:30.305
everything updated in
real time when the

00:38:30.305 --> 00:38:32.040
user applied the control.

00:38:32.040 --> 00:38:34.500
So let's try and build
something like that.

00:38:37.990 --> 00:38:39.530
So the first thing we're
going to start

00:38:39.530 --> 00:38:42.110
with is with the data.

00:38:42.110 --> 00:38:47.040
The data that we are using is a
selection of basically here,

00:38:47.040 --> 00:38:50.820
country name, GDP for that
country, and life expectancy

00:38:50.820 --> 00:38:54.100
over a range of 40 years for
different countries.

00:38:54.100 --> 00:38:57.570
This is a data set that I have
prepared beforehand, and it's

00:38:57.570 --> 00:39:00.390
stored in a data
table locally.

00:39:00.390 --> 00:39:03.960
So on the left, you can see
that we are visualizing it

00:39:03.960 --> 00:39:05.620
using a ChartWrapper.

00:39:05.620 --> 00:39:08.970
We are specifying that the type
is going to be a table.

00:39:08.970 --> 00:39:11.300
We have a container, because
there is the element that it's

00:39:11.300 --> 00:39:15.710
going to contain the chart in
a webpage, the data, a few

00:39:15.710 --> 00:39:17.810
options, and the draw method.

00:39:17.810 --> 00:39:19.710
So far, so good.

00:39:19.710 --> 00:39:21.560
So let's change it a bit.

00:39:21.560 --> 00:39:25.316
On the right, now you see that
I've added a control.

00:39:25.316 --> 00:39:26.380
A year--

00:39:26.380 --> 00:39:28.500
basically a category
picker for year.

00:39:28.500 --> 00:39:31.070
And whenever I operate the
control, so let's move to the

00:39:31.070 --> 00:39:33.930
'60s, the data on the
bottom changes.

00:39:33.930 --> 00:39:37.930
So here we are saying, data from
the '60s, move to '77,

00:39:37.930 --> 00:39:40.320
and we've got the data
from year '77.

00:39:40.320 --> 00:39:43.820
And let's go over this code
on the left side.

00:39:43.820 --> 00:39:46.580
So again, we have the
ChartWrapper on top, for the

00:39:46.580 --> 00:39:48.710
table, as we said before.

00:39:48.710 --> 00:39:51.800
Here in the middle, you see a
ControlWrapper instance that

00:39:51.800 --> 00:39:53.880
says I'm going to use
the [UNINTELLIGIBLE]

00:39:53.880 --> 00:39:55.440
filter.

00:39:55.440 --> 00:39:57.940
It's going to apply itself
on the column,

00:39:57.940 --> 00:39:59.440
which is named here.

00:39:59.440 --> 00:40:01.450
It has a few options for
the user interface.

00:40:01.450 --> 00:40:04.020
It says, will it allow multiple
entries or not?

00:40:04.020 --> 00:40:06.760
Will it allow the user to type
something in an auto-completer

00:40:06.760 --> 00:40:08.260
fashion or not?

00:40:08.260 --> 00:40:13.240
It used to have the initial
selected year as 2008.

00:40:13.240 --> 00:40:16.320
And then we have a dashboard
instance.

00:40:16.320 --> 00:40:18.590
Create a dashboard instance, and
as I demonstrated to you

00:40:18.590 --> 00:40:21.400
before, you kill the
bind method.

00:40:21.400 --> 00:40:23.960
You tell that you want the year
selector to affect the

00:40:23.960 --> 00:40:27.360
chart, and then you call draw
with the data table.

00:40:27.360 --> 00:40:29.790
From this point onward, whenever
I operate the year

00:40:29.790 --> 00:40:32.560
selector, but chart updates.

00:40:32.560 --> 00:40:35.410
But a simple table is not really
that helpful for our

00:40:35.410 --> 00:40:37.940
case, so let's try and change
it to something else.

00:40:37.940 --> 00:40:41.860
So what we're going to do is
change it to a pie chart.

00:40:41.860 --> 00:40:43.310
We're going to change
the options.

00:40:43.310 --> 00:40:47.780
So we're going to say that the
width is going to be 500

00:40:47.780 --> 00:40:52.010
pixels and 500 pixels.

00:40:52.010 --> 00:40:54.870
And the slide's visibility
threshold--

00:40:54.870 --> 00:40:56.150
sorry, a bit boring--

00:40:56.150 --> 00:40:58.870
is going to be 160, because
we don't slides

00:40:58.870 --> 00:41:00.110
that are too small.

00:41:00.110 --> 00:41:03.680
We're going to use the view
option to say which columns we

00:41:03.680 --> 00:41:05.730
want from the data table.

00:41:05.730 --> 00:41:08.880
Since a pie chart only allows
you to pick two columns.

00:41:08.880 --> 00:41:10.870
We're going to use column
one, country name,

00:41:10.870 --> 00:41:12.870
and column two, GDP.

00:41:12.870 --> 00:41:14.450
And that's pretty much it.

00:41:14.450 --> 00:41:18.750
And we just redraw it, and
we got the pie chart now.

00:41:18.750 --> 00:41:20.130
So let's move back
to the sixties,

00:41:20.130 --> 00:41:21.820
the pie chart updates.

00:41:21.820 --> 00:41:23.950
What was a good place where
we should have been

00:41:23.950 --> 00:41:24.940
living in the '60s?

00:41:24.940 --> 00:41:28.500
Well, the United States seem
pretty good, big slice.

00:41:28.500 --> 00:41:33.780
Here we are representing the
GDP, so, how much money the

00:41:33.780 --> 00:41:36.960
average person used to
have in the '60s.

00:41:36.960 --> 00:41:39.100
Luxembourg, pretty good.

00:41:39.100 --> 00:41:40.920
What about the '80s?

00:41:40.920 --> 00:41:44.930
Where do you think we should
have been living in the '80s?

00:41:44.930 --> 00:41:45.810
Any idea?

00:41:45.810 --> 00:41:48.650
Who said that?

00:41:48.650 --> 00:41:49.670
Monaco!

00:41:49.670 --> 00:41:51.850
Good choice.

00:41:51.850 --> 00:41:55.620
But as you can see, the pie
chart itself is still a bit

00:41:55.620 --> 00:41:56.370
confused, right?

00:41:56.370 --> 00:41:58.070
There are too many slices and
not really very helpful.

00:41:58.070 --> 00:41:59.720
So let's add another control.

00:41:59.720 --> 00:42:03.610
It would be nice if we could
let the user choose the

00:42:03.610 --> 00:42:05.500
country and select between
multiple countries.

00:42:05.500 --> 00:42:07.190
So we're going to copy
this control here.

00:42:11.740 --> 00:42:12.340
There we go.

00:42:12.340 --> 00:42:15.750
And we're going to introduce a
new control over the country.

00:42:15.750 --> 00:42:17.150
So we're going to call
it, country.

00:42:17.150 --> 00:42:20.660
It will still be a
category filter.

00:42:20.660 --> 00:42:21.630
We'll call it, country.

00:42:21.630 --> 00:42:26.480
We'll work on the column which
is called country name.

00:42:26.480 --> 00:42:32.770
And, for a change, let the
user type something in.

00:42:32.770 --> 00:42:34.080
Allow multiple choices.

00:42:34.080 --> 00:42:36.540
We don't really care about
the initial state.

00:42:36.540 --> 00:42:42.830
OK, we defined a new control,
here, using the control

00:42:42.830 --> 00:42:44.370
wrapper object that
we described.

00:42:44.370 --> 00:42:48.400
And next, the only thing that
we're going to say is, OK,

00:42:48.400 --> 00:42:52.330
when both the country or the
year control are operated by

00:42:52.330 --> 00:42:55.890
the user, please update
the chart.

00:42:55.890 --> 00:42:57.120
OK, good enough.

00:42:57.120 --> 00:42:58.640
Let's move back to
the '60s again.

00:42:58.640 --> 00:43:02.940
We got a category picker here,
with all the nations here.

00:43:02.940 --> 00:43:06.010
Since we specified that it
should work from the country

00:43:06.010 --> 00:43:08.160
name column, and the country
name column contains all the

00:43:08.160 --> 00:43:10.960
countries, it's already
auto-populated itself with all

00:43:10.960 --> 00:43:12.880
the countries that it could
find over there.

00:43:12.880 --> 00:43:15.980
And so we can say, I don't
know, in the '60s, China

00:43:15.980 --> 00:43:18.050
versus Thailand.

00:43:18.050 --> 00:43:21.120
Wealth distribution seems
to be pretty equal.

00:43:21.120 --> 00:43:23.240
Let's move to the '80s.

00:43:23.240 --> 00:43:25.480
Thailand got over.

00:43:25.480 --> 00:43:26.910
You can start adding
countries--

00:43:26.910 --> 00:43:29.850
United States, United
Kingdom, et cetera.

00:43:29.850 --> 00:43:30.520
And you get the picture.

00:43:30.520 --> 00:43:33.370
You see how the charts
update in real time.

00:43:33.370 --> 00:43:38.320
From this point onward, well,
it's only a matter of adding a

00:43:38.320 --> 00:43:41.050
lot more charts, and more
controls, and using the same

00:43:41.050 --> 00:43:44.030
simple logic that I already
described to you.

00:43:44.030 --> 00:43:46.440
Create a ChartWrapper, create
a ControlWrapper--

00:43:46.440 --> 00:43:48.240
one for the charts, one
for the controls--

00:43:48.240 --> 00:43:50.440
create a dashboard, and use
the dashboard to bind

00:43:50.440 --> 00:43:51.980
everything together.

00:43:51.980 --> 00:43:54.980
And you should be able to
get to this final result

00:43:54.980 --> 00:43:57.070
reasonably quickly.

00:43:57.070 --> 00:43:59.130
And this, from this point
onward, is just a matter of

00:43:59.130 --> 00:43:59.760
applying, right?

00:43:59.760 --> 00:44:02.895
So for example, you could say,
let me show only the countries

00:44:02.895 --> 00:44:05.720
that have a life expectancy over
70 years, and let's look

00:44:05.720 --> 00:44:07.380
how we change it over time.

00:44:07.380 --> 00:44:11.710
In the '60s, all in the Nordic
countries and Canada.

00:44:11.710 --> 00:44:16.220
In the '70s, America's come in,
Australia, most of Europe.

00:44:16.220 --> 00:44:20.790
In the '80s, strengthen
their position.

00:44:20.790 --> 00:44:24.150
In the '90s, South
America comes in.

00:44:24.150 --> 00:44:27.360
2008, a lot of countries
have a life

00:44:27.360 --> 00:44:28.950
expectancy over 70 years.

00:44:28.950 --> 00:44:31.210
Southern Africa is
still missing.

00:44:31.210 --> 00:44:34.760
And so you can see how easy
it is to combine together

00:44:34.760 --> 00:44:38.420
multiple charts and control and
assemble an interactive

00:44:38.420 --> 00:44:41.180
dashboard out of that.

00:44:41.180 --> 00:44:42.430
OK.

00:44:44.000 --> 00:44:44.460
So good.

00:44:44.460 --> 00:44:46.640
So these are controls
and dashboards.

00:44:46.640 --> 00:44:49.090
Word of warning, they are an
experimental package that we

00:44:49.090 --> 00:44:50.070
are rolling out--

00:44:50.070 --> 00:44:51.860
we actually rolled
it out yesterday.

00:44:51.860 --> 00:44:53.510
So they are in version 1.1.

00:44:53.510 --> 00:44:57.010
So when you load the Google
visualization API, saying

00:44:57.010 --> 00:45:01.810
google.load/visualization and
you specify a version number,

00:45:01.810 --> 00:45:04.950
use version 1.1 if you
want the controls.

00:45:04.950 --> 00:45:08.750
Being experimental, they might
break and change over time,

00:45:08.750 --> 00:45:11.540
but we are very interested in
learning from you-- what you

00:45:11.540 --> 00:45:14.890
think they should be, or what
you think they should be, what

00:45:14.890 --> 00:45:17.880
you think we should do on top of
them, what kind of features

00:45:17.880 --> 00:45:19.460
they should have, and whatnot.

00:45:19.460 --> 00:45:23.010
So please, give them a try.

00:45:23.010 --> 00:45:24.080
We're going to listen
to your feedback.

00:45:24.080 --> 00:45:27.560
We have some ideas on our
own, but give them a

00:45:27.560 --> 00:45:30.030
try, and let us know.

00:45:30.030 --> 00:45:31.310
And that's pretty much it.

00:45:31.310 --> 00:45:35.270
So for all the four topics that
we covered, starting from

00:45:35.270 --> 00:45:40.670
consumer, create your own
charts, tricks, spreadsheets,

00:45:40.670 --> 00:45:44.690
the integration for enterprise
with app script, and finally

00:45:44.690 --> 00:45:46.830
for developers with controls
and dashboards.

00:45:46.830 --> 00:45:48.605
The main communication
link is over there:

00:45:48.605 --> 00:45:51.930
code.google.com/apis/charts.

00:45:51.930 --> 00:45:54.470
We rolled out the brand new
version of the documentation

00:45:54.470 --> 00:45:57.050
yesterday, and we are now
open for Q and A.

00:45:57.050 --> 00:46:01.040
So if the police want to come
back, any questions that you

00:46:01.040 --> 00:46:01.590
might have.

00:46:01.590 --> 00:46:02.840
AUDIENCE: [APPLAUSE]

00:46:14.330 --> 00:46:16.760
Have you guys thought about
hooking up, instead of passing

00:46:16.760 --> 00:46:19.550
the data table, passing
it a data source.

00:46:19.550 --> 00:46:22.290
So I'm not sure if you've seen
things like Spotfire where you

00:46:22.290 --> 00:46:25.520
actively, dynamically slide
in your running queries

00:46:25.520 --> 00:46:26.900
essentially in the background.

00:46:26.900 --> 00:46:27.840
Is that something that
you guys are

00:46:27.840 --> 00:46:28.830
planning for in the future?

00:46:28.830 --> 00:46:30.660
RICCARDO GOVONI: You mean
for the dashboard thing?

00:46:30.660 --> 00:46:32.100
AUDIENCE: Yep.

00:46:32.100 --> 00:46:34.670
Having a control, actually,
maybe control

00:46:34.670 --> 00:46:35.680
a data source API.

00:46:35.680 --> 00:46:38.325
RICCARDO GOVONI: Yes, so
version 1 is local data

00:46:38.325 --> 00:46:42.460
source, but version 2.x
is going to remodel

00:46:42.460 --> 00:46:43.710
the sources as well.

00:46:46.156 --> 00:46:51.690
AUDIENCE: Do you plan on
releasing some of the extra

00:46:51.690 --> 00:46:56.390
features from the annotated
timeline from Google Finance?

00:46:56.390 --> 00:46:59.650
AMIT WEINSTEIN: Yeah, so the
control that Michael showed

00:46:59.650 --> 00:47:04.610
today, that you can select the
time range dynamically is one

00:47:04.610 --> 00:47:08.230
step in the direction of
creating an HTML5 version of

00:47:08.230 --> 00:47:11.980
the annotated timeline charts.

00:47:11.980 --> 00:47:12.420
We are heading there.

00:47:12.420 --> 00:47:14.380
AUDIENCE: So things like real
time updates will be

00:47:14.380 --> 00:47:15.540
available, and that
kind of stuff?

00:47:15.540 --> 00:47:17.200
AMIT WEINSTEIN: I didn't hear.

00:47:17.200 --> 00:47:19.300
AUDIENCE: Like real
time updates from

00:47:19.300 --> 00:47:20.660
the annotated timeline?

00:47:20.660 --> 00:47:24.290
AMIT WEINSTEIN: We will send an
email to the group in the

00:47:24.290 --> 00:47:24.860
next few [UNINTELLIGIBLE]

00:47:24.860 --> 00:47:27.200
that we add another component
on the way to

00:47:27.200 --> 00:47:28.660
enriching the chart.

00:47:28.660 --> 00:47:35.350
AUDIENCE: Hi, as I understand
correctly, we don't have a way

00:47:35.350 --> 00:47:38.560
to connect to a database, and
run a query and create a

00:47:38.560 --> 00:47:39.453
chart, right?

00:47:39.453 --> 00:47:41.490
AMIT WEINSTEIN: You can
create the data

00:47:41.490 --> 00:47:42.500
table locally if you--

00:47:42.500 --> 00:47:45.645
AUDIENCE: Locally, but with a
query that's just for it?

00:47:45.645 --> 00:47:47.150
AMIT WEINSTEIN: No, no, you
can create the data table

00:47:47.150 --> 00:47:49.360
without any query, just
in Javascript.

00:47:49.360 --> 00:47:51.900
AUDIENCE: OK I can
use something

00:47:51.900 --> 00:47:53.410
else to load the data.

00:47:53.410 --> 00:47:56.530
But in the future need you may
have a version which would run

00:47:56.530 --> 00:47:58.120
the queries live and
create charts?

00:47:58.120 --> 00:47:59.846
Did I understand
that correctly?

00:47:59.846 --> 00:48:02.756
AMIT WEINSTEIN: I think I don't
understand the question.

00:48:02.756 --> 00:48:06.330
AUDIENCE: A person before me
asked that question, that you

00:48:06.330 --> 00:48:10.360
could run a query, or line of
running queries and creating

00:48:10.360 --> 00:48:13.190
charts at the same time.

00:48:13.190 --> 00:48:16.100
I'm more concerned about
enterprise applications where

00:48:16.100 --> 00:48:19.230
you have large databases and
you don't have smaller data

00:48:19.230 --> 00:48:22.940
sets, so what would the utility
in such applications?

00:48:22.940 --> 00:48:26.820
AMIT WEINSTEIN: OK so the new
data source library that we

00:48:26.820 --> 00:48:28.980
submitted a little while
back allowed you

00:48:28.980 --> 00:48:30.260
to sample the data.

00:48:30.260 --> 00:48:31.660
So if you have a
[UNINTELLIGIBLE]

00:48:31.660 --> 00:48:35.380
data source which is big, we
added some capabilities to the

00:48:35.380 --> 00:48:37.500
query language to allow
it to sample it.

00:48:37.500 --> 00:48:40.595
And currently the dashboard only
works with a local data

00:48:40.595 --> 00:48:43.240
table, so we have to
store all the data

00:48:43.240 --> 00:48:44.870
locally in you browser.

00:48:44.870 --> 00:48:47.870
But in the future version, we
hope that we would be able to

00:48:47.870 --> 00:48:51.790
connect to remote data sources
and combining with sampling,

00:48:51.790 --> 00:48:54.870
every time that you narrow
your view, you

00:48:54.870 --> 00:48:56.070
would use less sampling.

00:48:56.070 --> 00:49:00.155
So a chart would remain with a
reasonable amount of data, and

00:49:00.155 --> 00:49:02.765
it would reflect the
current slice that

00:49:02.765 --> 00:49:04.690
you are looking for.

00:49:04.690 --> 00:49:10.985
AUDIENCE: How easy is it going
to be to customize a team of

00:49:10.985 --> 00:49:11.480
the [? skin ?]

00:49:11.480 --> 00:49:13.930
of this, of the dashboard
and the tools?

00:49:13.930 --> 00:49:18.030
RICCARDO GOVONI: So hopefully
it should be easy.

00:49:18.030 --> 00:49:21.750
If you go through the APIs,
you will see that they all

00:49:21.750 --> 00:49:24.060
have a consistence with
standard API.

00:49:24.060 --> 00:49:26.990
You create an instance of the
kind of thing you want, a

00:49:26.990 --> 00:49:29.450
chart, a control, or a
dashboard, you configure it

00:49:29.450 --> 00:49:30.900
with some standard options.

00:49:30.900 --> 00:49:33.720
And then you just draw it.

00:49:33.720 --> 00:49:34.970
And it's very--

00:49:34.970 --> 00:49:35.610
sorry, go ahead.

00:49:35.610 --> 00:49:40.440
AUDIENCE: So something like,
a scattered chart to have a

00:49:40.440 --> 00:49:43.420
custom background or something
like that, is that possible?

00:49:43.420 --> 00:49:45.840
Or does it all have to be
solid colors for now?

00:49:45.840 --> 00:49:48.650
RICCARDO GOVONI: You can
customize, I think you can

00:49:48.650 --> 00:49:50.240
customize the background
as well, already.

00:49:50.240 --> 00:49:52.490
AMIT WEINSTEIN: So there are
two different things.

00:49:52.490 --> 00:49:54.440
Customizing the chart is
something that we provide as

00:49:54.440 --> 00:49:55.870
part of the chart.

00:49:55.870 --> 00:49:59.110
So every chart has its own
customization options.

00:49:59.110 --> 00:50:01.220
And you can send us an email
if you need some other

00:50:01.220 --> 00:50:03.430
customizations if they're
currently not there.

00:50:03.430 --> 00:50:08.450
And I think that Riccardo, he
meant that controllers,

00:50:08.450 --> 00:50:11.010
hopefully in the future, you
would be able to create your

00:50:11.010 --> 00:50:15.550
own controller that blends more
smoothly in your page to

00:50:15.550 --> 00:50:18.391
interact with the chart
that you provide.

00:50:18.391 --> 00:50:22.230
AUDIENCE: Hi, I still
have questions

00:50:22.230 --> 00:50:23.570
about the data source.

00:50:23.570 --> 00:50:26.918
What data source options are
there currently for this?

00:50:26.918 --> 00:50:31.160
And what options maybe in the
future will you guys be

00:50:31.160 --> 00:50:31.880
looking at?

00:50:31.880 --> 00:50:35.720
AMIT WEINSTEIN: There are
several data sources that

00:50:35.720 --> 00:50:36.990
already exist today.

00:50:36.990 --> 00:50:40.180
So one example is Google
Spreadsheet, another is Fusion

00:50:40.180 --> 00:50:42.150
Tables, and it's
also by Google.

00:50:42.150 --> 00:50:45.590
I think there's also Salesforce,
data is provided

00:50:45.590 --> 00:50:48.310
as a Google Fusion
data source.

00:50:48.310 --> 00:50:50.330
And you can create your
own data source.

00:50:50.330 --> 00:50:53.800
We have open source libraries
in several languages,

00:50:53.800 --> 00:50:56.770
including Java and Python,
that you can create.

00:50:56.770 --> 00:51:00.600
If you have the data stored in
your location, you can just

00:51:00.600 --> 00:51:05.100
include our code, and become
a proper data source.

00:51:07.990 --> 00:51:10.650
If you have the data in a
specific place, you can just

00:51:10.650 --> 00:51:11.570
plug in our library.

00:51:11.570 --> 00:51:14.470
If you have it in some third
party that doesn't support the

00:51:14.470 --> 00:51:20.190
data source API, then I guess
the only option is to ask them

00:51:20.190 --> 00:51:21.080
to support it.

00:51:21.080 --> 00:51:28.590
AUDIENCE: Just a quick question
about the interface

00:51:28.590 --> 00:51:29.810
with the dashboard.

00:51:29.810 --> 00:51:32.390
You know with current charts you
have some events that are

00:51:32.390 --> 00:51:34.410
kicked off when you select a
data series or when you click

00:51:34.410 --> 00:51:37.660
on a data point, are those
events going to be able to

00:51:37.660 --> 00:51:41.200
kick off things in other parts
of the chart the way you guys

00:51:41.200 --> 00:51:42.200
have implemented it?

00:51:42.200 --> 00:51:45.150
RICCARDO GOVONI: Right, so if
I understand correctly, the

00:51:45.150 --> 00:51:47.690
question is whether interaction
on a specific

00:51:47.690 --> 00:51:50.940
chart would propagate to the
rest of the dashboard.

00:51:50.940 --> 00:51:52.675
Again, not in the experimental
version that

00:51:52.675 --> 00:51:54.140
we're rolling out.

00:51:54.140 --> 00:51:55.920
But one of, basically, the
first pictures that we're

00:51:55.920 --> 00:51:57.980
going to roll out is the fact,
for example, that when you

00:51:57.980 --> 00:52:01.410
select a specific data point
in a chart, like we've

00:52:01.410 --> 00:52:02.190
[UNINTELLIGIBLE]

00:52:02.190 --> 00:52:04.190
representation of that
to the point,

00:52:04.190 --> 00:52:05.680
across the entire dashboard.

00:52:05.680 --> 00:52:08.960
So if it's a country, maybe the
country in the GeoMap will

00:52:08.960 --> 00:52:10.000
be highlighted as well.

00:52:10.000 --> 00:52:12.390
So for example, the selection
event will propagate across

00:52:12.390 --> 00:52:12.720
the dashboard.

00:52:12.720 --> 00:52:21.000
AUDIENCE: So you guys might have
gone through this stuff a

00:52:21.000 --> 00:52:24.600
little quickly, so I might
be wrong, but then the

00:52:24.600 --> 00:52:25.900
interactions on the
dashboards--

00:52:25.900 --> 00:52:29.420
you know, the controls for the
past parameters, or whatever,

00:52:29.420 --> 00:52:32.770
filters to the charts--

00:52:32.770 --> 00:52:34.540
that's hardwired together,
right?

00:52:34.540 --> 00:52:37.700
You wire a controlled
two-way chart.

00:52:37.700 --> 00:52:40.160
Is there some sort of more loose
type coupling you guys

00:52:40.160 --> 00:52:42.210
were thinking of, like
event-to-run mechanisms or

00:52:42.210 --> 00:52:45.930
something, just so you can do a
bit more easily, instead of

00:52:45.930 --> 00:52:46.720
hard-wiring it all together?

00:52:46.720 --> 00:52:50.030
RICCARDO GOVONI: So under the
scenes, it's all event-based,

00:52:50.030 --> 00:52:53.290
and asynchronous, so the bind
method that you see is

00:52:53.290 --> 00:52:58.450
basically shortcut, shorthand to
wire everything up quickly.

00:52:58.450 --> 00:53:02.030
But at the moment, it's already
a sort of fairly

00:53:02.030 --> 00:53:03.200
detached model.

00:53:03.200 --> 00:53:05.780
I'm not sure what kind of--

00:53:05.780 --> 00:53:08.220
you would like an event-based
[UNINTELLIGIBLE]?

00:53:08.220 --> 00:53:09.380
AUDIENCE: It might be right.

00:53:09.380 --> 00:53:13.750
In this case, I guess, if you
have a country name, and if

00:53:13.750 --> 00:53:15.850
there's a bunch of charts and
I'm looking for country name,

00:53:15.850 --> 00:53:18.190
if the control is filtering on a
country name, all the charts

00:53:18.190 --> 00:53:19.940
just kind of obey it, right?

00:53:19.940 --> 00:53:21.900
Yeah, so then that's great.

00:53:21.900 --> 00:53:22.610
I just wanted to
[INTERPOSING VOICES]

00:53:22.610 --> 00:53:25.540
RICCARDO GOVONI: Yeah, so by
the bind method, you can

00:53:25.540 --> 00:53:26.880
specify any number of jobs.

00:53:26.880 --> 00:53:29.050
You can do one-to-one,
one-to-many, many-to-one.

00:53:29.050 --> 00:53:31.770
So you can have one control
driving 10 charts or no--

00:53:31.770 --> 00:53:39.020
AUDIENCE: Can you have a click
on a chart drive other

00:53:39.020 --> 00:53:40.910
elements on the page,
right now?

00:53:40.910 --> 00:53:45.740
Like if I were to select say,
Australia, on one of the

00:53:45.740 --> 00:53:48.250
charts, like the map, can I
actually have, instead of

00:53:48.250 --> 00:53:51.710
selecting Australia from a
control, can the chart itself

00:53:51.710 --> 00:53:52.820
behave like a control?

00:53:52.820 --> 00:53:57.100
RICCARDO GOVONI: We are about
to have something similar.

00:53:57.100 --> 00:54:01.250
Maybe I can go back
1,000 slides.

00:54:01.250 --> 00:54:05.860
The time selector control
that Michael showed

00:54:05.860 --> 00:54:11.740
up initially, maybe--

00:54:11.740 --> 00:54:14.740
it's certainly not this
slide too fast.

00:54:14.740 --> 00:54:15.770
OK, this one.

00:54:15.770 --> 00:54:19.010
So you see this one on the
bottom is a control that lets

00:54:19.010 --> 00:54:21.750
you choose, in this case it's
a time interval, and it's

00:54:21.750 --> 00:54:24.970
built on top of an underlying
line chart.

00:54:24.970 --> 00:54:27.905
So there's already the concept
of combining controls with a

00:54:27.905 --> 00:54:29.790
specific chart.

00:54:29.790 --> 00:54:33.040
We may not have, right out of
the box, the kind of control

00:54:33.040 --> 00:54:35.300
over a GeoMap that you are
talking about, but there's

00:54:35.300 --> 00:54:36.550
already something like that.

00:54:39.020 --> 00:54:39.990
Good.

00:54:39.990 --> 00:54:41.910
Anything else?

00:54:41.910 --> 00:54:42.600
Then we're good.

00:54:42.600 --> 00:54:44.400
AMIT WEINSTEIN: Thank
you very much.

