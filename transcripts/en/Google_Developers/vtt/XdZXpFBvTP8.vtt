WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.266
[MUSIC PLAYING]

00:00:04.266 --> 00:00:07.830
NICK FELKER: Hey, I'm
Nick Felker, and today--

00:00:07.830 --> 00:00:10.380
hold on, give me a second.

00:00:10.380 --> 00:00:12.690
OK Google, turn on
the studio lights.

00:00:12.690 --> 00:00:16.290
GOOGLE ASSISTANT: OK,
turning the studio lights on.

00:00:16.290 --> 00:00:17.800
NICK FELKER: Hey,
I'm Nick Felker,

00:00:17.800 --> 00:00:19.110
and today I'm going to
talk to you about how

00:00:19.110 --> 00:00:21.900
to make your Smart Home devices
work with the Google Assistant

00:00:21.900 --> 00:00:24.379
without building a
conversational interface.

00:00:24.379 --> 00:00:25.920
Right now that Google
Assistant works

00:00:25.920 --> 00:00:27.720
with more than
1,500 smart devices

00:00:27.720 --> 00:00:29.777
from over 200 popular brands.

00:00:29.777 --> 00:00:31.860
I'll show you just how
easy it is for your devices

00:00:31.860 --> 00:00:35.410
to be part of this ecosystem.

00:00:35.410 --> 00:00:37.960
Hey Google, what's the weather
going to be like today?

00:00:37.960 --> 00:00:39.751
GOOGLE ASSISTANT: Today
in Mountain View it

00:00:39.751 --> 00:00:41.500
will be a high of 101 degrees.

00:00:41.500 --> 00:00:44.020
NICK FELKER: Wow,
that's really hot.

00:00:44.020 --> 00:00:46.040
I should find a way to cool off.

00:00:46.040 --> 00:00:48.310
So imagine you have
a company selling

00:00:48.310 --> 00:00:51.160
internet-connected fans, and you
want your users to control them

00:00:51.160 --> 00:00:53.140
from the Google
Assistant, whether using

00:00:53.140 --> 00:00:54.760
a voice-activated
speaker like Google

00:00:54.760 --> 00:00:57.640
Home, their phone, an
Android TV, or any other

00:00:57.640 --> 00:00:59.190
supported surface.

00:00:59.190 --> 00:01:01.404
With the Actions on
Google Smart Home API,

00:01:01.404 --> 00:01:03.820
you can integrate your existing
cloud-connected Smart Home

00:01:03.820 --> 00:01:06.410
devices with the
Google Assistant.

00:01:06.410 --> 00:01:09.680
In this example, our smart
fan has plastic fan blades

00:01:09.680 --> 00:01:11.782
and a motor connected
to a developer board.

00:01:11.782 --> 00:01:13.740
This device listens to
messages from our server

00:01:13.740 --> 00:01:15.366
to turn on and off.

00:01:15.366 --> 00:01:17.740
You can use any cloud service
and device operating system

00:01:17.740 --> 00:01:18.610
that you want.

00:01:18.610 --> 00:01:19.879
The choice is yours.

00:01:19.879 --> 00:01:22.420
So let's get started with making
our fan work with the Google

00:01:22.420 --> 00:01:23.141
Assistant.

00:01:23.141 --> 00:01:25.390
You will need to connect
your web server to the Google

00:01:25.390 --> 00:01:26.830
Assistant.

00:01:26.830 --> 00:01:29.290
Your web hook will be called
when the user gives a command,

00:01:29.290 --> 00:01:31.289
and your server will have
to process the request

00:01:31.289 --> 00:01:32.860
and complete the user's query.

00:01:32.860 --> 00:01:35.110
You can link this web hook
to a project in the Actions

00:01:35.110 --> 00:01:36.490
on Google console.

00:01:36.490 --> 00:01:38.720
Just select the option
to build for a Smart Home

00:01:38.720 --> 00:01:41.117
and provide the URL
for your web hook.

00:01:41.117 --> 00:01:43.450
In order to make sure that
each user is only controlling

00:01:43.450 --> 00:01:46.590
their own fan, you will need
to set up OAuth credentials

00:01:46.590 --> 00:01:48.640
so the Google Assistant
can communicate securely

00:01:48.640 --> 00:01:50.320
to your server.

00:01:50.320 --> 00:01:53.170
Smart home devices connect to
the HomeGraph, a database which

00:01:53.170 --> 00:01:56.050
stores and provides contextual
information about the user's

00:01:56.050 --> 00:01:58.090
home and the devices inside.

00:01:58.090 --> 00:02:00.100
For example, HomeGraph
can store the concept

00:02:00.100 --> 00:02:02.740
of a living room which contains
multiple types of devices

00:02:02.740 --> 00:02:04.060
from different manufacturers.

00:02:04.060 --> 00:02:06.780
Without having to deal with
parsing sentences yourself,

00:02:06.780 --> 00:02:10.090
you can handle complex queries
like cool down living room

00:02:10.090 --> 00:02:12.370
or make my living
room light brighter.

00:02:12.370 --> 00:02:14.200
The Google Assistant
uses information

00:02:14.200 --> 00:02:16.000
in order to execute
user requests based

00:02:16.000 --> 00:02:17.420
on the appropriate context.

00:02:17.420 --> 00:02:19.940
Your web hook communicates
with the Assistant servers,

00:02:19.940 --> 00:02:23.260
receiving intents and responding
by taking action on devices,

00:02:23.260 --> 00:02:26.560
or responding with information
about a user's devices.

00:02:26.560 --> 00:02:28.150
For example, your
web hook will be

00:02:28.150 --> 00:02:30.490
asked to provide a list of
user's connected devices

00:02:30.490 --> 00:02:32.354
via a sync intent.

00:02:32.354 --> 00:02:34.270
It can also be asked to
turn the fan on or off

00:02:34.270 --> 00:02:35.722
with an execute intent.

00:02:35.722 --> 00:02:37.930
Your client will have to
handle the actual management

00:02:37.930 --> 00:02:39.850
of the state and execution.

00:02:39.850 --> 00:02:42.045
If asked whether the fan
is on, a query intent

00:02:42.045 --> 00:02:43.420
will ask your web
hook to provide

00:02:43.420 --> 00:02:45.100
the current state of the fan.

00:02:45.100 --> 00:02:47.830
When using Smart Home API,
you provide a list of traits

00:02:47.830 --> 00:02:49.660
that your device can support.

00:02:49.660 --> 00:02:52.077
For example, my fan
can turn on and off.

00:02:52.077 --> 00:02:54.160
The Google Assistant handles
all the possible ways

00:02:54.160 --> 00:02:55.510
you can say that.

00:02:55.510 --> 00:02:56.920
You don't write
your own grammars

00:02:56.920 --> 00:02:59.050
nor build a conversational app.

00:02:59.050 --> 00:03:02.200
When you just say, "turn my
workshop fan on, please,"

00:03:02.200 --> 00:03:04.286
the Google Assistant
processes your command.

00:03:04.286 --> 00:03:06.910
The home graph understands that
you have a fan in your workshop

00:03:06.910 --> 00:03:08.544
and that it can turn on and off.

00:03:08.544 --> 00:03:10.210
Then the Google
Assistant will turn that

00:03:10.210 --> 00:03:12.760
into a structured JSON payload
that it sends to your web

00:03:12.760 --> 00:03:14.230
hook for processing.

00:03:14.230 --> 00:03:16.212
After creating your
Smart Home integration,

00:03:16.212 --> 00:03:17.920
you can use the Actions
on Google console

00:03:17.920 --> 00:03:19.960
to view the usage and
health of your integration

00:03:19.960 --> 00:03:21.890
from your users.

00:03:21.890 --> 00:03:23.320
Now that web hook
is done, we can

00:03:23.320 --> 00:03:26.550
open the Home Control Settings
in the Google Assistant.

00:03:26.550 --> 00:03:30.590
I can link to the NIC app and
get back all of my devices.

00:03:30.590 --> 00:03:34.510
Once the devices are
synced, I can control them.

00:03:34.510 --> 00:03:36.750
OK Google, turn on
the workshop fan.

00:03:36.750 --> 00:03:40.980
GOOGLE ASSISTANT: OK,
turning the workshop fan on.

00:03:40.980 --> 00:03:42.745
NICK FELKER: Ah,
this is much better.

00:03:42.745 --> 00:03:44.680
I hope this video
helped explain how

00:03:44.680 --> 00:03:46.960
to get started with integrated
your Smart Home devices

00:03:46.960 --> 00:03:50.340
with the Google Assistant.

00:03:50.340 --> 00:03:53.580
I think I'm
forgetting something.

00:03:53.580 --> 00:03:55.800
OK Google, is my
smart fan still on?

00:03:55.800 --> 00:03:58.400
GOOGLE ASSISTANT: Yes,
the workshop fan is on.

00:03:58.400 --> 00:03:59.155
NICK FELKER: Visit
the documentation

00:03:59.155 --> 00:04:01.380
to learn more about Smart
Home, and join our community

00:04:01.380 --> 00:04:02.963
to discuss this with
other developers.

00:04:02.963 --> 00:04:06.260
[MUSIC PLAYING]

