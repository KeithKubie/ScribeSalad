WEBVTT
Kind: captions
Language: en

00:00:00.290 --> 00:00:03.800
Effective Inter-domain Traffic Engineering has three goals.

00:00:03.800 --> 00:00:06.220
One is predictability. In other words, it

00:00:06.220 --> 00:00:08.960
should be possible to predict how traffic

00:00:08.960 --> 00:00:12.660
flows will change in response to changes in

00:00:12.660 --> 00:00:14.990
the network configuration. Another goal is to,

00:00:14.990 --> 00:00:18.440
limit the influence of neighbouring domains. In particular,

00:00:18.440 --> 00:00:21.050
we'd like to use BGP policies and

00:00:21.050 --> 00:00:25.850
changes to those policies that. Limit how neighbouring

00:00:25.850 --> 00:00:29.750
ASes might change their behaviour in response to

00:00:29.750 --> 00:00:32.640
changes to the PGP configuration that we make

00:00:32.640 --> 00:00:34.790
in our own network. And finally, we'd like

00:00:34.790 --> 00:00:37.260
to reduce the overhead of routing changes by

00:00:37.260 --> 00:00:40.250
achieving our traffic engineering goals with changes to

00:00:40.250 --> 00:00:43.810
as few IP prefixes as possible. To understand

00:00:43.810 --> 00:00:47.590
the factors that confound predictability Let's look at

00:00:47.590 --> 00:00:51.240
how the inter-domain routing choices of a particular

00:00:51.240 --> 00:00:55.460
autonomous system, can wreak havoc, on predictability. Let's

00:00:55.460 --> 00:00:58.680
suppose that a downstream neighbor, is trying to reach,

00:00:58.680 --> 00:01:00.860
the autonomous system at the top of this

00:01:00.860 --> 00:01:04.410
figure. The AS here might wish to relieve congestion,

00:01:04.410 --> 00:01:06.850
on a particular peering link. To do so,

00:01:06.850 --> 00:01:10.640
this AS, might now send traffic to that destination

00:01:10.640 --> 00:01:13.800
out a different set of atonimous systems. But once

00:01:13.800 --> 00:01:16.650
this AS makes that change, note that it's choosing

00:01:16.650 --> 00:01:20.020
a longer AS path. Now taking a path

00:01:20.020 --> 00:01:23.140
of three half's rather than two. In response,

00:01:23.140 --> 00:01:25.970
the down stream neighbor might decide not to

00:01:25.970 --> 00:01:28.890
send its traffic for that destination Through this

00:01:28.890 --> 00:01:32.330
attonomous system at all. Thus affecting the traffic

00:01:32.330 --> 00:01:35.170
matrix that this AS sees. So, all the

00:01:35.170 --> 00:01:41.360
work that went in to optimizing the traffic load balance for this AS is for not,

00:01:41.360 --> 00:01:44.210
because the change that it made, effectively

00:01:44.210 --> 00:01:46.560
changed the offered traffic loads and hence

00:01:46.560 --> 00:01:49.760
the traffic matrix. One way to avoid

00:01:49.760 --> 00:01:52.710
this type of problem, and achieve predictable traffic

00:01:52.710 --> 00:01:56.510
flow changes. Is to avoid making changes

00:01:56.510 --> 00:02:00.820
like this that are globally visible. In particular,

00:02:00.820 --> 00:02:06.680
note that this change caused a change in the AS path link of the advertisement

00:02:06.680 --> 00:02:09.650
to this particular destination, from two to

00:02:09.650 --> 00:02:12.760
three. Thus, other neighbors, such as the downstream

00:02:12.760 --> 00:02:16.120
neighbor here. Might decide to use an alternate

00:02:16.120 --> 00:02:18.620
path as a result of that globally visible

00:02:18.620 --> 00:02:20.870
routing change. By avoiding these types of

00:02:20.870 --> 00:02:24.750
globally visible changes, we can achieve predicitability. Another

00:02:24.750 --> 00:02:28.360
way to achieve effective inter-domain traffic engineering is

00:02:28.360 --> 00:02:31.720
to limit the influence of neighbors. For example,

00:02:31.720 --> 00:02:36.300
an autonomous system might try to make a path look longer with AS path

00:02:36.300 --> 00:02:39.080
prepending. If we consider treating paths that

00:02:39.080 --> 00:02:41.470
have almost the same AS path length as

00:02:41.470 --> 00:02:46.504
a common group, we can achieve additional flexibility. Additionally, if we

00:02:46.504 --> 00:02:51.650
enforce a constraint that our neighbors should advertise consistent BGP

00:02:51.650 --> 00:02:56.879
route advertisements, over multiple appearing links, should multiple

00:02:56.879 --> 00:03:00.830
appearing links exists? That gives us additional flexibility,

00:03:00.830 --> 00:03:04.420
to send traffic over different e-egress points to the

00:03:04.420 --> 00:03:06.650
same autonomous system. Enforcing egress points to the same

00:03:06.650 --> 00:03:08.640
autonomous system. Enforcing consistent advertisments turns out to be

00:03:08.640 --> 00:03:11.510
difficult in practice, but it is doable. To

00:03:11.510 --> 00:03:14.650
reduce the overhead of routing changes. We can group

00:03:14.650 --> 00:03:19.270
related prefixes. Rather than exploring all combinations of prefixes

00:03:19.270 --> 00:03:22.150
to move a particular volume of traffic. We can

00:03:22.150 --> 00:03:25.380
identify routing choices that group routes that have

00:03:25.380 --> 00:03:27.950
the same AS paths and we can move

00:03:27.950 --> 00:03:31.430
groups of prefixes according to these groups of

00:03:31.430 --> 00:03:34.380
prefixes that share an AS path. This allows us

00:03:34.380 --> 00:03:37.430
to move groups of prefixes by making tweaks

00:03:37.430 --> 00:03:41.000
to local preference on. Regular expressions on AS

00:03:41.000 --> 00:03:43.500
path. We can also focus on the small

00:03:43.500 --> 00:03:47.020
fraction of prefixes that carry the majority of traffic.

00:03:47.020 --> 00:03:49.350
Ten percent of origin AS is responsible

00:03:49.350 --> 00:03:53.160
for about 82 percent of outbound traffic,

00:03:53.160 --> 00:03:56.790
therefore we can achieve significant gains in

00:03:56.790 --> 00:03:59.690
rebalancing traffic in the network by focusing on

00:03:59.690 --> 00:04:02.640
the heavy hitters. In summary, to achieve

00:04:02.640 --> 00:04:06.270
predictability, we effect changes that are not globally

00:04:06.270 --> 00:04:09.050
visible. To limit the influence of neighbors,

00:04:09.050 --> 00:04:12.440
we enforce consistent advertisments and limit the influence

00:04:12.440 --> 00:04:14.690
of a s pass length. And to reduce

00:04:14.690 --> 00:04:17.839
the overhead of routing changes, we group pre fixed

00:04:17.839 --> 00:04:20.380
according to those that have common AS paths.

00:04:20.380 --> 00:04:24.020
And, move traffic, in terms of groups of prefixes.

