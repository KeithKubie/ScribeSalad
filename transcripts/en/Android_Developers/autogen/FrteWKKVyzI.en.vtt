WEBVTT
Kind: captions
Language: en

00:00:01.500 --> 00:00:04.570
 
[Music]

00:00:04.570 --> 00:00:04.580
[Music]
 

00:00:04.580 --> 00:00:07.849
[Music]
so hi I'm Mike Lauren I'm on the Android

00:00:07.849 --> 00:00:07.859
so hi I'm Mike Lauren I'm on the Android
 

00:00:07.859 --> 00:00:11.240
so hi I'm Mike Lauren I'm on the Android
team I manage the system UI framework

00:00:11.240 --> 00:00:11.250
team I manage the system UI framework
 

00:00:11.250 --> 00:00:14.959
team I manage the system UI framework
and UI toolkit team share we're going to

00:00:14.959 --> 00:00:14.969
and UI toolkit team share we're going to
 

00:00:14.969 --> 00:00:17.269
and UI toolkit team share we're going to
be talking today in a lot of detail

00:00:17.269 --> 00:00:17.279
be talking today in a lot of detail
 

00:00:17.279 --> 00:00:20.240
be talking today in a lot of detail
about some big changes to how we

00:00:20.240 --> 00:00:20.250
about some big changes to how we
 

00:00:20.250 --> 00:00:22.220
about some big changes to how we
recommend that you build Android

00:00:22.220 --> 00:00:22.230
recommend that you build Android
 

00:00:22.230 --> 00:00:25.130
recommend that you build Android
applications but before we go into a lot

00:00:25.130 --> 00:00:25.140
applications but before we go into a lot
 

00:00:25.140 --> 00:00:26.660
applications but before we go into a lot
of the details I thought it'd be helpful

00:00:26.660 --> 00:00:26.670
of the details I thought it'd be helpful
 

00:00:26.670 --> 00:00:29.480
of the details I thought it'd be helpful
to step back a bit and frame the

00:00:29.480 --> 00:00:29.490
to step back a bit and frame the
 

00:00:29.490 --> 00:00:31.609
to step back a bit and frame the
discussion by talking about where we

00:00:31.609 --> 00:00:31.619
discussion by talking about where we
 

00:00:31.619 --> 00:00:34.880
discussion by talking about where we
came from and where we're going so let's

00:00:34.880 --> 00:00:34.890
came from and where we're going so let's
 

00:00:34.890 --> 00:00:35.240
came from and where we're going so let's
do that

00:00:35.240 --> 00:00:35.250
do that
 

00:00:35.250 --> 00:00:38.600
do that
so to start Android has always been

00:00:38.600 --> 00:00:38.610
so to start Android has always been
 

00:00:38.610 --> 00:00:41.299
so to start Android has always been
based on some strong principles not

00:00:41.299 --> 00:00:41.309
based on some strong principles not
 

00:00:41.309 --> 00:00:43.190
based on some strong principles not
surprisingly those were best expressed

00:00:43.190 --> 00:00:43.200
surprisingly those were best expressed
 

00:00:43.200 --> 00:00:45.380
surprisingly those were best expressed
by Dianne Hackborn she's the one who

00:00:45.380 --> 00:00:45.390
by Dianne Hackborn she's the one who
 

00:00:45.390 --> 00:00:47.540
by Dianne Hackborn she's the one who
actually architected most of the android

00:00:47.540 --> 00:00:47.550
actually architected most of the android
 

00:00:47.550 --> 00:00:47.990
actually architected most of the android
framework

00:00:47.990 --> 00:00:48.000
framework
 

00:00:48.000 --> 00:00:50.540
framework
she would have post about this a few

00:00:50.540 --> 00:00:50.550
she would have post about this a few
 

00:00:50.550 --> 00:00:52.100
she would have post about this a few
months back and I have some excerpts

00:00:52.100 --> 00:00:52.110
months back and I have some excerpts
 

00:00:52.110 --> 00:00:55.220
months back and I have some excerpts
from that here if you look at our core

00:00:55.220 --> 00:00:55.230
from that here if you look at our core
 

00:00:55.230 --> 00:00:57.830
from that here if you look at our core
primitive activity broadcast receiver

00:00:57.830 --> 00:00:57.840
primitive activity broadcast receiver
 

00:00:57.840 --> 00:01:00.380
primitive activity broadcast receiver
service content provider you might

00:01:00.380 --> 00:01:00.390
service content provider you might
 

00:01:00.390 --> 00:01:02.869
service content provider you might
reasonably think that those constitute

00:01:02.869 --> 00:01:02.879
reasonably think that those constitute
 

00:01:02.879 --> 00:01:05.810
reasonably think that those constitute
and application framework but that's not

00:01:05.810 --> 00:01:05.820
and application framework but that's not
 

00:01:05.820 --> 00:01:07.070
and application framework but that's not
the right way to think about it these

00:01:07.070 --> 00:01:07.080
the right way to think about it these
 

00:01:07.080 --> 00:01:10.190
the right way to think about it these
classes are actually contracts between

00:01:10.190 --> 00:01:10.200
classes are actually contracts between
 

00:01:10.200 --> 00:01:13.899
classes are actually contracts between
the application and the operating system

00:01:13.899 --> 00:01:13.909
the application and the operating system
 

00:01:13.909 --> 00:01:16.280
the application and the operating system
they represent the minimal amount of

00:01:16.280 --> 00:01:16.290
they represent the minimal amount of
 

00:01:16.290 --> 00:01:18.649
they represent the minimal amount of
information necessary so the OS knows

00:01:18.649 --> 00:01:18.659
information necessary so the OS knows
 

00:01:18.659 --> 00:01:20.990
information necessary so the OS knows
what's going on inside your app so we

00:01:20.990 --> 00:01:21.000
what's going on inside your app so we
 

00:01:21.000 --> 00:01:23.960
what's going on inside your app so we
can manage it properly so as an example

00:01:23.960 --> 00:01:23.970
can manage it properly so as an example
 

00:01:23.970 --> 00:01:26.270
can manage it properly so as an example
if your app is running in the background

00:01:26.270 --> 00:01:26.280
if your app is running in the background
 

00:01:26.280 --> 00:01:28.700
if your app is running in the background
but it's also exposing data to another

00:01:28.700 --> 00:01:28.710
but it's also exposing data to another
 

00:01:28.710 --> 00:01:30.289
but it's also exposing data to another
application through a content provider

00:01:30.289 --> 00:01:30.299
application through a content provider
 

00:01:30.299 --> 00:01:32.749
application through a content provider
the OS needs to know that and we need to

00:01:32.749 --> 00:01:32.759
the OS needs to know that and we need to
 

00:01:32.759 --> 00:01:34.280
the OS needs to know that and we need to
know that so we don't accidentally kill

00:01:34.280 --> 00:01:34.290
know that so we don't accidentally kill
 

00:01:34.290 --> 00:01:36.170
know that so we don't accidentally kill
you the content provider is a mechanism

00:01:36.170 --> 00:01:36.180
you the content provider is a mechanism
 

00:01:36.180 --> 00:01:38.060
you the content provider is a mechanism
that tells us that so that we can keep

00:01:38.060 --> 00:01:38.070
that tells us that so that we can keep
 

00:01:38.070 --> 00:01:41.210
that tells us that so that we can keep
you alive so we think of these core

00:01:41.210 --> 00:01:41.220
you alive so we think of these core
 

00:01:41.220 --> 00:01:42.980
you alive so we think of these core
classes as really being like the

00:01:42.980 --> 00:01:42.990
classes as really being like the
 

00:01:42.990 --> 00:01:45.830
classes as really being like the
fundamental laws of physics for Android

00:01:45.830 --> 00:01:45.840
fundamental laws of physics for Android
 

00:01:45.840 --> 00:01:48.800
fundamental laws of physics for Android
hence the illustration that is the cover

00:01:48.800 --> 00:01:48.810
hence the illustration that is the cover
 

00:01:48.810 --> 00:01:50.600
hence the illustration that is the cover
of the manuscript where Isaac Newton

00:01:50.600 --> 00:01:50.610
of the manuscript where Isaac Newton
 

00:01:50.610 --> 00:01:55.569
of the manuscript where Isaac Newton
first presented the basic laws of motion

00:01:55.569 --> 00:01:55.579
 
 

00:01:55.579 --> 00:01:59.060
 
now fundamental laws are a good thing I

00:01:59.060 --> 00:01:59.070
now fundamental laws are a good thing I
 

00:01:59.070 --> 00:02:01.039
now fundamental laws are a good thing I
use the shorthand when talking about

00:02:01.039 --> 00:02:01.049
use the shorthand when talking about
 

00:02:01.049 --> 00:02:02.060
use the shorthand when talking about
this I say

00:02:02.060 --> 00:02:02.070
this I say
 

00:02:02.070 --> 00:02:03.800
this I say
Android has good bones even though

00:02:03.800 --> 00:02:03.810
Android has good bones even though
 

00:02:03.810 --> 00:02:05.830
Android has good bones even though
people look at me funny after I say that

00:02:05.830 --> 00:02:05.840
people look at me funny after I say that
 

00:02:05.840 --> 00:02:09.770
people look at me funny after I say that
but what I mean by that is that Android

00:02:09.770 --> 00:02:09.780
but what I mean by that is that Android
 

00:02:09.780 --> 00:02:13.020
but what I mean by that is that Android
is based on a small stable cohesive

00:02:13.020 --> 00:02:13.030
is based on a small stable cohesive
 

00:02:13.030 --> 00:02:16.350
is based on a small stable cohesive
set of core primitives and that allows a

00:02:16.350 --> 00:02:16.360
set of core primitives and that allows a
 

00:02:16.360 --> 00:02:19.199
set of core primitives and that allows a
common programming model across a really

00:02:19.199 --> 00:02:19.209
common programming model across a really
 

00:02:19.209 --> 00:02:22.260
common programming model across a really
incredibly diverse range of devices from

00:02:22.260 --> 00:02:22.270
incredibly diverse range of devices from
 

00:02:22.270 --> 00:02:25.110
incredibly diverse range of devices from
wearables to phones to tablets to TVs

00:02:25.110 --> 00:02:25.120
wearables to phones to tablets to TVs
 

00:02:25.120 --> 00:02:28.800
wearables to phones to tablets to TVs
the cars and more this model also gives

00:02:28.800 --> 00:02:28.810
the cars and more this model also gives
 

00:02:28.810 --> 00:02:30.780
the cars and more this model also gives
application developers the freedom to

00:02:30.780 --> 00:02:30.790
application developers the freedom to
 

00:02:30.790 --> 00:02:32.580
application developers the freedom to
choose whatever framework they want

00:02:32.580 --> 00:02:32.590
choose whatever framework they want
 

00:02:32.590 --> 00:02:34.410
choose whatever framework they want
inside their application for their

00:02:34.410 --> 00:02:34.420
inside their application for their
 

00:02:34.420 --> 00:02:36.690
inside their application for their
internal framework so that means that we

00:02:36.690 --> 00:02:36.700
internal framework so that means that we
 

00:02:36.700 --> 00:02:38.670
internal framework so that means that we
on the a droid team don't have to get

00:02:38.670 --> 00:02:38.680
on the a droid team don't have to get
 

00:02:38.680 --> 00:02:41.280
on the a droid team don't have to get
involved in debates about whether MVC is

00:02:41.280 --> 00:02:41.290
involved in debates about whether MVC is
 

00:02:41.290 --> 00:02:43.949
involved in debates about whether MVC is
better than MVP or whether MVP is better

00:02:43.949 --> 00:02:43.959
better than MVP or whether MVP is better
 

00:02:43.959 --> 00:02:46.590
better than MVP or whether MVP is better
than the MVP p.m. you guys can pick

00:02:46.590 --> 00:02:46.600
than the MVP p.m. you guys can pick
 

00:02:46.600 --> 00:02:49.800
than the MVP p.m. you guys can pick
whatever makes sense to you now that's a

00:02:49.800 --> 00:02:49.810
whatever makes sense to you now that's a
 

00:02:49.810 --> 00:02:52.050
whatever makes sense to you now that's a
pretty good story if you are in the

00:02:52.050 --> 00:02:52.060
pretty good story if you are in the
 

00:02:52.060 --> 00:02:55.160
pretty good story if you are in the
operating system business like say me

00:02:55.160 --> 00:02:55.170
operating system business like say me
 

00:02:55.170 --> 00:02:57.270
operating system business like say me
but if you're in the app development

00:02:57.270 --> 00:02:57.280
but if you're in the app development
 

00:02:57.280 --> 00:03:00.960
but if you're in the app development
business like say all of you that's

00:03:00.960 --> 00:03:00.970
business like say all of you that's
 

00:03:00.970 --> 00:03:02.790
business like say all of you that's
really only chapter one of the story and

00:03:02.790 --> 00:03:02.800
really only chapter one of the story and
 

00:03:02.800 --> 00:03:05.009
really only chapter one of the story and
the reason for that is because while

00:03:05.009 --> 00:03:05.019
the reason for that is because while
 

00:03:05.019 --> 00:03:07.770
the reason for that is because while
strong fundamentals and freedom of

00:03:07.770 --> 00:03:07.780
strong fundamentals and freedom of
 

00:03:07.780 --> 00:03:10.440
strong fundamentals and freedom of
choice are good things we know that in

00:03:10.440 --> 00:03:10.450
choice are good things we know that in
 

00:03:10.450 --> 00:03:12.360
choice are good things we know that in
your day to day jobs and we know this

00:03:12.360 --> 00:03:12.370
your day to day jobs and we know this
 

00:03:12.370 --> 00:03:14.729
your day to day jobs and we know this
because you told us you want more from

00:03:14.729 --> 00:03:14.739
because you told us you want more from
 

00:03:14.739 --> 00:03:18.479
because you told us you want more from
us so I'm going to abuse my analogy a

00:03:18.479 --> 00:03:18.489
us so I'm going to abuse my analogy a
 

00:03:18.489 --> 00:03:20.910
us so I'm going to abuse my analogy a
bit here we can all appreciate the

00:03:20.910 --> 00:03:20.920
bit here we can all appreciate the
 

00:03:20.920 --> 00:03:22.680
bit here we can all appreciate the
simple elegance of Newton's laws of

00:03:22.680 --> 00:03:22.690
simple elegance of Newton's laws of
 

00:03:22.690 --> 00:03:26.610
simple elegance of Newton's laws of
motion but if your job is to land a

00:03:26.610 --> 00:03:26.620
motion but if your job is to land a
 

00:03:26.620 --> 00:03:28.740
motion but if your job is to land a
rover on Mars you don't want to come to

00:03:28.740 --> 00:03:28.750
rover on Mars you don't want to come to
 

00:03:28.750 --> 00:03:30.150
rover on Mars you don't want to come to
work each day and start with only F

00:03:30.150 --> 00:03:30.160
work each day and start with only F
 

00:03:30.160 --> 00:03:31.860
work each day and start with only F
equals MA and drive everything from

00:03:31.860 --> 00:03:31.870
equals MA and drive everything from
 

00:03:31.870 --> 00:03:36.180
equals MA and drive everything from
first principles so we've been talking

00:03:36.180 --> 00:03:36.190
first principles so we've been talking
 

00:03:36.190 --> 00:03:38.280
first principles so we've been talking
to developers both inside and outside of

00:03:38.280 --> 00:03:38.290
to developers both inside and outside of
 

00:03:38.290 --> 00:03:40.979
to developers both inside and outside of
Google and taking a hard look at the app

00:03:40.979 --> 00:03:40.989
Google and taking a hard look at the app
 

00:03:40.989 --> 00:03:42.900
Google and taking a hard look at the app
development experience and we've

00:03:42.900 --> 00:03:42.910
development experience and we've
 

00:03:42.910 --> 00:03:45.900
development experience and we've
realized a couple of things first there

00:03:45.900 --> 00:03:45.910
realized a couple of things first there
 

00:03:45.910 --> 00:03:48.690
realized a couple of things first there
are peaks and valleys some aspects of

00:03:48.690 --> 00:03:48.700
are peaks and valleys some aspects of
 

00:03:48.700 --> 00:03:50.699
are peaks and valleys some aspects of
app development are better served by our

00:03:50.699 --> 00:03:50.709
app development are better served by our
 

00:03:50.709 --> 00:03:54.199
app development are better served by our
API s and others for example we think

00:03:54.199 --> 00:03:54.209
API s and others for example we think
 

00:03:54.209 --> 00:03:56.580
API s and others for example we think
recyclerview is at the better end of

00:03:56.580 --> 00:03:56.590
recyclerview is at the better end of
 

00:03:56.590 --> 00:03:57.300
recyclerview is at the better end of
that spectrum

00:03:57.300 --> 00:03:57.310
that spectrum
 

00:03:57.310 --> 00:04:00.660
that spectrum
so with recyclerview we didn't say okay

00:04:00.660 --> 00:04:00.670
so with recyclerview we didn't say okay
 

00:04:00.670 --> 00:04:02.970
so with recyclerview we didn't say okay
we give you events and you can draw

00:04:02.970 --> 00:04:02.980
we give you events and you can draw
 

00:04:02.980 --> 00:04:05.400
we give you events and you can draw
stuff and in between you have a Turing

00:04:05.400 --> 00:04:05.410
stuff and in between you have a Turing
 

00:04:05.410 --> 00:04:07.530
stuff and in between you have a Turing
complete language so good luck with

00:04:07.530 --> 00:04:07.540
complete language so good luck with
 

00:04:07.540 --> 00:04:11.819
complete language so good luck with
everything else on the other hand maybe

00:04:11.819 --> 00:04:11.829
everything else on the other hand maybe
 

00:04:11.829 --> 00:04:13.979
everything else on the other hand maybe
activity and fragment life cycles belong

00:04:13.979 --> 00:04:13.989
activity and fragment life cycles belong
 

00:04:13.989 --> 00:04:16.800
activity and fragment life cycles belong
down in that dark shadowy place because

00:04:16.800 --> 00:04:16.810
down in that dark shadowy place because
 

00:04:16.810 --> 00:04:19.349
down in that dark shadowy place because
they're I think too much of it is indeed

00:04:19.349 --> 00:04:19.359
they're I think too much of it is indeed
 

00:04:19.359 --> 00:04:21.270
they're I think too much of it is indeed
left as an exercise for the reader and

00:04:21.270 --> 00:04:21.280
left as an exercise for the reader and
 

00:04:21.280 --> 00:04:23.770
left as an exercise for the reader and
you want to fix that

00:04:23.770 --> 00:04:23.780
you want to fix that
 

00:04:23.780 --> 00:04:26.390
you want to fix that
so as we thought about this we realized

00:04:26.390 --> 00:04:26.400
so as we thought about this we realized
 

00:04:26.400 --> 00:04:28.400
so as we thought about this we realized
the good solution has some key

00:04:28.400 --> 00:04:28.410
the good solution has some key
 

00:04:28.410 --> 00:04:30.950
the good solution has some key
properties first we have to solve the

00:04:30.950 --> 00:04:30.960
properties first we have to solve the
 

00:04:30.960 --> 00:04:32.780
properties first we have to solve the
right problems this is going to be a

00:04:32.780 --> 00:04:32.790
right problems this is going to be a
 

00:04:32.790 --> 00:04:34.820
right problems this is going to be a
sustained effort like sustained for us

00:04:34.820 --> 00:04:34.830
sustained effort like sustained for us
 

00:04:34.830 --> 00:04:37.550
sustained effort like sustained for us
on Android but for the first cut we want

00:04:37.550 --> 00:04:37.560
on Android but for the first cut we want
 

00:04:37.560 --> 00:04:39.410
on Android but for the first cut we want
to make sure that we're going after the

00:04:39.410 --> 00:04:39.420
to make sure that we're going after the
 

00:04:39.420 --> 00:04:41.480
to make sure that we're going after the
problems that every developer faces the

00:04:41.480 --> 00:04:41.490
problems that every developer faces the
 

00:04:41.490 --> 00:04:43.760
problems that every developer faces the
things that are hard to do right right

00:04:43.760 --> 00:04:43.770
things that are hard to do right right
 

00:04:43.770 --> 00:04:46.730
things that are hard to do right right
now again app life cycles is a really

00:04:46.730 --> 00:04:46.740
now again app life cycles is a really
 

00:04:46.740 --> 00:04:48.140
now again app life cycles is a really
good example if you don't get that right

00:04:48.140 --> 00:04:48.150
good example if you don't get that right
 

00:04:48.150 --> 00:04:50.150
good example if you don't get that right
in your app nothing is going to work on

00:04:50.150 --> 00:04:50.160
in your app nothing is going to work on
 

00:04:50.160 --> 00:04:51.980
in your app nothing is going to work on
top of that and that's true for your app

00:04:51.980 --> 00:04:51.990
top of that and that's true for your app
 

00:04:51.990 --> 00:04:53.780
top of that and that's true for your app
but that's also true for the frameworks

00:04:53.780 --> 00:04:53.790
but that's also true for the frameworks
 

00:04:53.790 --> 00:04:55.010
but that's also true for the frameworks
we're trying to build you have to get

00:04:55.010 --> 00:04:55.020
we're trying to build you have to get
 

00:04:55.020 --> 00:04:56.480
we're trying to build you have to get
that right before we can do anything

00:04:56.480 --> 00:04:56.490
that right before we can do anything
 

00:04:56.490 --> 00:04:59.570
that right before we can do anything
else second we have to play well with

00:04:59.570 --> 00:04:59.580
else second we have to play well with
 

00:04:59.580 --> 00:05:01.550
else second we have to play well with
others we know that you all have huge

00:05:01.550 --> 00:05:01.560
others we know that you all have huge
 

00:05:01.560 --> 00:05:03.410
others we know that you all have huge
investments in your existing code bases

00:05:03.410 --> 00:05:03.420
investments in your existing code bases
 

00:05:03.420 --> 00:05:05.450
investments in your existing code bases
and we can't create a model where the

00:05:05.450 --> 00:05:05.460
and we can't create a model where the
 

00:05:05.460 --> 00:05:07.040
and we can't create a model where the
first thing we say to you is throw all

00:05:07.040 --> 00:05:07.050
first thing we say to you is throw all
 

00:05:07.050 --> 00:05:09.230
first thing we say to you is throw all
that out and start over so we're trying

00:05:09.230 --> 00:05:09.240
that out and start over so we're trying
 

00:05:09.240 --> 00:05:11.390
that out and start over so we're trying
to create api's that you can adopt a

00:05:11.390 --> 00:05:11.400
to create api's that you can adopt a
 

00:05:11.400 --> 00:05:14.090
to create api's that you can adopt a
little bit of it at a time and also that

00:05:14.090 --> 00:05:14.100
little bit of it at a time and also that
 

00:05:14.100 --> 00:05:16.340
little bit of it at a time and also that
interoperate well with other libraries

00:05:16.340 --> 00:05:16.350
interoperate well with other libraries
 

00:05:16.350 --> 00:05:20.750
interoperate well with other libraries
or other frameworks third we want to be

00:05:20.750 --> 00:05:20.760
or other frameworks third we want to be
 

00:05:20.760 --> 00:05:22.490
or other frameworks third we want to be
more opinionated we're going to take a

00:05:22.490 --> 00:05:22.500
more opinionated we're going to take a
 

00:05:22.500 --> 00:05:24.680
more opinionated we're going to take a
stronger clear stance on how to Android

00:05:24.680 --> 00:05:24.690
stronger clear stance on how to Android
 

00:05:24.690 --> 00:05:26.720
stronger clear stance on how to Android
an app the right way East as we see it

00:05:26.720 --> 00:05:26.730
an app the right way East as we see it
 

00:05:26.730 --> 00:05:29.510
an app the right way East as we see it
now this is all still optional and if

00:05:29.510 --> 00:05:29.520
now this is all still optional and if
 

00:05:29.520 --> 00:05:30.680
now this is all still optional and if
you already have something that works

00:05:30.680 --> 00:05:30.690
you already have something that works
 

00:05:30.690 --> 00:05:33.740
you already have something that works
for you then great but developers are

00:05:33.740 --> 00:05:33.750
for you then great but developers are
 

00:05:33.750 --> 00:05:35.930
for you then great but developers are
telling us that they want more guidance

00:05:35.930 --> 00:05:35.940
telling us that they want more guidance
 

00:05:35.940 --> 00:05:38.150
telling us that they want more guidance
on how apps should be built and by the

00:05:38.150 --> 00:05:38.160
on how apps should be built and by the
 

00:05:38.160 --> 00:05:39.560
on how apps should be built and by the
way we're not changing any of the laws

00:05:39.560 --> 00:05:39.570
way we're not changing any of the laws
 

00:05:39.570 --> 00:05:41.660
way we're not changing any of the laws
of physics here we're just layering some

00:05:41.660 --> 00:05:41.670
of physics here we're just layering some
 

00:05:41.670 --> 00:05:44.000
of physics here we're just layering some
higher level constructs on top because

00:05:44.000 --> 00:05:44.010
higher level constructs on top because
 

00:05:44.010 --> 00:05:46.280
higher level constructs on top because
after all F is going to equal na whether

00:05:46.280 --> 00:05:46.290
after all F is going to equal na whether
 

00:05:46.290 --> 00:05:50.360
after all F is going to equal na whether
you believe it should or not next it

00:05:50.360 --> 00:05:50.370
you believe it should or not next it
 

00:05:50.370 --> 00:05:52.970
you believe it should or not next it
needs to scale we want solutions that

00:05:52.970 --> 00:05:52.980
needs to scale we want solutions that
 

00:05:52.980 --> 00:05:54.680
needs to scale we want solutions that
are industrial-strength and that will

00:05:54.680 --> 00:05:54.690
are industrial-strength and that will
 

00:05:54.690 --> 00:05:56.720
are industrial-strength and that will
scale to the real-world requirements of

00:05:56.720 --> 00:05:56.730
scale to the real-world requirements of
 

00:05:56.730 --> 00:05:59.180
scale to the real-world requirements of
real-world applications we don't want to

00:05:59.180 --> 00:05:59.190
real-world applications we don't want to
 

00:05:59.190 --> 00:06:00.560
real-world applications we don't want to
build something that's awesome for hello

00:06:00.560 --> 00:06:00.570
build something that's awesome for hello
 

00:06:00.570 --> 00:06:01.850
build something that's awesome for hello
world but then it's going to collapse

00:06:01.850 --> 00:06:01.860
world but then it's going to collapse
 

00:06:01.860 --> 00:06:04.190
world but then it's going to collapse
the first time it bumps into the messy

00:06:04.190 --> 00:06:04.200
the first time it bumps into the messy
 

00:06:04.200 --> 00:06:08.000
the first time it bumps into the messy
complexities of reality and finally

00:06:08.000 --> 00:06:08.010
complexities of reality and finally
 

00:06:08.010 --> 00:06:10.730
complexities of reality and finally
reach for this problem for making it

00:06:10.730 --> 00:06:10.740
reach for this problem for making it
 

00:06:10.740 --> 00:06:12.050
reach for this problem for making it
easier for you to write Android

00:06:12.050 --> 00:06:12.060
easier for you to write Android
 

00:06:12.060 --> 00:06:14.120
easier for you to write Android
applications the right way what we think

00:06:14.120 --> 00:06:14.130
applications the right way what we think
 

00:06:14.130 --> 00:06:15.920
applications the right way what we think
is the right way we want to use

00:06:15.920 --> 00:06:15.930
is the right way we want to use
 

00:06:15.930 --> 00:06:18.050
is the right way we want to use
libraries like support libera possible

00:06:18.050 --> 00:06:18.060
libraries like support libera possible
 

00:06:18.060 --> 00:06:20.000
libraries like support libera possible
rather than adding new api's to the

00:06:20.000 --> 00:06:20.010
rather than adding new api's to the
 

00:06:20.010 --> 00:06:22.220
rather than adding new api's to the
platform because that lets our solution

00:06:22.220 --> 00:06:22.230
platform because that lets our solution
 

00:06:22.230 --> 00:06:25.930
platform because that lets our solution
reach older versions of the OS as well

00:06:25.930 --> 00:06:25.940
reach older versions of the OS as well
 

00:06:25.940 --> 00:06:28.130
reach older versions of the OS as well
okay so that's the background on what

00:06:28.130 --> 00:06:28.140
okay so that's the background on what
 

00:06:28.140 --> 00:06:29.600
okay so that's the background on what
we're trying to accomplish and why we're

00:06:29.600 --> 00:06:29.610
we're trying to accomplish and why we're
 

00:06:29.610 --> 00:06:32.200
we're trying to accomplish and why we're
here now I'd like to introduce yeet

00:06:32.200 --> 00:06:32.210
here now I'd like to introduce yeet
 

00:06:32.210 --> 00:06:34.760
here now I'd like to introduce yeet
toolkit engineer extraordinaire and he's

00:06:34.760 --> 00:06:34.770
toolkit engineer extraordinaire and he's
 

00:06:34.770 --> 00:06:35.540
toolkit engineer extraordinaire and he's
going to walk you through what we

00:06:35.540 --> 00:06:35.550
going to walk you through what we
 

00:06:35.550 --> 00:06:36.320
going to walk you through what we
actually built

00:06:36.320 --> 00:06:36.330
actually built
 

00:06:36.330 --> 00:06:44.300
actually built
thank you okay hello everybody

00:06:44.300 --> 00:06:44.310
thank you okay hello everybody
 

00:06:44.310 --> 00:06:47.540
thank you okay hello everybody
so okay that was the back up what are we

00:06:47.540 --> 00:06:47.550
so okay that was the back up what are we
 

00:06:47.550 --> 00:06:49.969
so okay that was the back up what are we
shipping today the very first thing we

00:06:49.969 --> 00:06:49.979
shipping today the very first thing we
 

00:06:49.979 --> 00:06:52.990
shipping today the very first thing we
are shipping is an architecture guide on

00:06:52.990 --> 00:06:53.000
are shipping is an architecture guide on
 

00:06:53.000 --> 00:06:57.110
are shipping is an architecture guide on
developer.android.com/design as 'king us

00:06:57.110 --> 00:06:57.120
developer.android.com/design as 'king us
 

00:06:57.120 --> 00:06:59.149
developer.android.com/design as 'king us
for our opinion like how do we think

00:06:59.149 --> 00:06:59.159
for our opinion like how do we think
 

00:06:59.159 --> 00:07:01.580
for our opinion like how do we think
then an application should be built and

00:07:01.580 --> 00:07:01.590
then an application should be built and
 

00:07:01.590 --> 00:07:05.330
then an application should be built and
this is that guide so we believe that is

00:07:05.330 --> 00:07:05.340
this is that guide so we believe that is
 

00:07:05.340 --> 00:07:07.640
this is that guide so we believe that is
very good covers lots of application

00:07:07.640 --> 00:07:07.650
very good covers lots of application
 

00:07:07.650 --> 00:07:10.070
very good covers lots of application
cases but even if you have an

00:07:10.070 --> 00:07:10.080
cases but even if you have an
 

00:07:10.080 --> 00:07:11.480
cases but even if you have an
architecture that you are comfortable

00:07:11.480 --> 00:07:11.490
architecture that you are comfortable
 

00:07:11.490 --> 00:07:14.420
architecture that you are comfortable
with you can keep it but you can

00:07:14.420 --> 00:07:14.430
with you can keep it but you can
 

00:07:14.430 --> 00:07:17.649
with you can keep it but you can
probably learn something from this guide

00:07:17.649 --> 00:07:17.659
probably learn something from this guide
 

00:07:17.659 --> 00:07:20.149
probably learn something from this guide
second we are shipping a new set of

00:07:20.149 --> 00:07:20.159
second we are shipping a new set of
 

00:07:20.159 --> 00:07:22.010
second we are shipping a new set of
libraries that we call architecture

00:07:22.010 --> 00:07:22.020
libraries that we call architecture
 

00:07:22.020 --> 00:07:24.260
libraries that we call architecture
components these are more fundamental

00:07:24.260 --> 00:07:24.270
components these are more fundamental
 

00:07:24.270 --> 00:07:25.700
components these are more fundamental
components where you can build your

00:07:25.700 --> 00:07:25.710
components where you can build your
 

00:07:25.710 --> 00:07:29.029
components where you can build your
application on top the first thing is

00:07:29.029 --> 00:07:29.039
application on top the first thing is
 

00:07:29.039 --> 00:07:31.040
application on top the first thing is
lifecycle so this is the biggest

00:07:31.040 --> 00:07:31.050
lifecycle so this is the biggest
 

00:07:31.050 --> 00:07:33.559
lifecycle so this is the biggest
developer company we have life cycles

00:07:33.559 --> 00:07:33.569
developer company we have life cycles
 

00:07:33.569 --> 00:07:36.020
developer company we have life cycles
are hard life cycles are hard it's okay

00:07:36.020 --> 00:07:36.030
are hard life cycles are hard it's okay
 

00:07:36.030 --> 00:07:38.059
are hard life cycles are hard it's okay
we should solve this problem and the

00:07:38.059 --> 00:07:38.069
we should solve this problem and the
 

00:07:38.069 --> 00:07:39.740
we should solve this problem and the
first of all this is new set of

00:07:39.740 --> 00:07:39.750
first of all this is new set of
 

00:07:39.750 --> 00:07:43.129
first of all this is new set of
components second life cycle where

00:07:43.129 --> 00:07:43.139
components second life cycle where
 

00:07:43.139 --> 00:07:44.930
components second life cycle where
observables which we'll go in detail

00:07:44.930 --> 00:07:44.940
observables which we'll go in detail
 

00:07:44.940 --> 00:07:47.899
observables which we'll go in detail
later but this is basically kinks they

00:07:47.899 --> 00:07:47.909
later but this is basically kinks they
 

00:07:47.909 --> 00:07:50.830
later but this is basically kinks they
can do something based on the life cycle

00:07:50.830 --> 00:07:50.840
can do something based on the life cycle
 

00:07:50.840 --> 00:07:53.029
can do something based on the life cycle
third we are going to introduce a

00:07:53.029 --> 00:07:53.039
third we are going to introduce a
 

00:07:53.039 --> 00:07:55.249
third we are going to introduce a
lightweight view model which is all of

00:07:55.249 --> 00:07:55.259
lightweight view model which is all of
 

00:07:55.259 --> 00:07:58.010
lightweight view model which is all of
our effort to take out that code outside

00:07:58.010 --> 00:07:58.020
our effort to take out that code outside
 

00:07:58.020 --> 00:08:00.439
our effort to take out that code outside
of your activities and fragments and put

00:08:00.439 --> 00:08:00.449
of your activities and fragments and put
 

00:08:00.449 --> 00:08:01.879
of your activities and fragments and put
it somewhere else where you can easily

00:08:01.879 --> 00:08:01.889
it somewhere else where you can easily
 

00:08:01.889 --> 00:08:05.149
it somewhere else where you can easily
test it last but not least we are going

00:08:05.149 --> 00:08:05.159
test it last but not least we are going
 

00:08:05.159 --> 00:08:07.309
test it last but not least we are going
to introduce any object mapping library

00:08:07.309 --> 00:08:07.319
to introduce any object mapping library
 

00:08:07.319 --> 00:08:11.600
to introduce any object mapping library
for SQLite and all of this is available

00:08:11.600 --> 00:08:11.610
for SQLite and all of this is available
 

00:08:11.610 --> 00:08:21.900
for SQLite and all of this is available
for you today on maven calm

00:08:21.900 --> 00:08:21.910
 
 

00:08:21.910 --> 00:08:25.900
 
okay let's talk about life cycles so

00:08:25.900 --> 00:08:25.910
okay let's talk about life cycles so
 

00:08:25.910 --> 00:08:27.760
okay let's talk about life cycles so
what is what's hard about life cycles

00:08:27.760 --> 00:08:27.770
what is what's hard about life cycles
 

00:08:27.770 --> 00:08:29.379
what is what's hard about life cycles
why do we hear so many complains about

00:08:29.379 --> 00:08:29.389
why do we hear so many complains about
 

00:08:29.389 --> 00:08:31.750
why do we hear so many complains about
that let's go through an example assume

00:08:31.750 --> 00:08:31.760
that let's go through an example assume
 

00:08:31.760 --> 00:08:33.610
that let's go through an example assume
we have an activity where we want to

00:08:33.610 --> 00:08:33.620
we have an activity where we want to
 

00:08:33.620 --> 00:08:35.740
we have an activity where we want to
show the location of the device on the

00:08:35.740 --> 00:08:35.750
show the location of the device on the
 

00:08:35.750 --> 00:08:37.959
show the location of the device on the
screen so you'll dry something like this

00:08:37.959 --> 00:08:37.969
screen so you'll dry something like this
 

00:08:37.969 --> 00:08:39.850
screen so you'll dry something like this
you create a location listener you know

00:08:39.850 --> 00:08:39.860
you create a location listener you know
 

00:08:39.860 --> 00:08:42.070
you create a location listener you know
on create method you need to initialize

00:08:42.070 --> 00:08:42.080
on create method you need to initialize
 

00:08:42.080 --> 00:08:43.630
on create method you need to initialize
it with the context and you have a

00:08:43.630 --> 00:08:43.640
it with the context and you have a
 

00:08:43.640 --> 00:08:45.970
it with the context and you have a
callback that it calls whenever the

00:08:45.970 --> 00:08:45.980
callback that it calls whenever the
 

00:08:45.980 --> 00:08:48.010
callback that it calls whenever the
location changes and then you update the

00:08:48.010 --> 00:08:48.020
location changes and then you update the
 

00:08:48.020 --> 00:08:49.990
location changes and then you update the
I now if you have ever written an

00:08:49.990 --> 00:08:50.000
I now if you have ever written an
 

00:08:50.000 --> 00:08:52.270
I now if you have ever written an
Android application you know that this

00:08:52.270 --> 00:08:52.280
Android application you know that this
 

00:08:52.280 --> 00:08:55.120
Android application you know that this
code is never enough you also need to go

00:08:55.120 --> 00:08:55.130
code is never enough you also need to go
 

00:08:55.130 --> 00:08:57.579
code is never enough you also need to go
ahead and alright on start and then tell

00:08:57.579 --> 00:08:57.589
ahead and alright on start and then tell
 

00:08:57.589 --> 00:08:59.829
ahead and alright on start and then tell
it to start and overwrite on stop and

00:08:59.829 --> 00:08:59.839
it to start and overwrite on stop and
 

00:08:59.839 --> 00:09:02.980
it to start and overwrite on stop and
tell it to stop you always need to do

00:09:02.980 --> 00:09:02.990
tell it to stop you always need to do
 

00:09:02.990 --> 00:09:04.960
tell it to stop you always need to do
this babysitting for these components

00:09:04.960 --> 00:09:04.970
this babysitting for these components
 

00:09:04.970 --> 00:09:07.390
this babysitting for these components
but this is acceptable this is a simple

00:09:07.390 --> 00:09:07.400
but this is acceptable this is a simple
 

00:09:07.400 --> 00:09:10.120
but this is acceptable this is a simple
example this looks alright but then your

00:09:10.120 --> 00:09:10.130
example this looks alright but then your
 

00:09:10.130 --> 00:09:11.800
example this looks alright but then your
product manager comes and says oh you

00:09:11.800 --> 00:09:11.810
product manager comes and says oh you
 

00:09:11.810 --> 00:09:13.510
product manager comes and says oh you
know what we need to first check the

00:09:13.510 --> 00:09:13.520
know what we need to first check the
 

00:09:13.520 --> 00:09:16.390
know what we need to first check the
user settings before enabled like asking

00:09:16.390 --> 00:09:16.400
user settings before enabled like asking
 

00:09:16.400 --> 00:09:19.600
user settings before enabled like asking
for location then your developer says ok

00:09:19.600 --> 00:09:19.610
for location then your developer says ok
 

00:09:19.610 --> 00:09:20.500
for location then your developer says ok
sure

00:09:20.500 --> 00:09:20.510
sure
 

00:09:20.510 --> 00:09:22.510
sure
less they need to change I'm going to

00:09:22.510 --> 00:09:22.520
less they need to change I'm going to
 

00:09:22.520 --> 00:09:25.090
less they need to change I'm going to
change this method to first call the

00:09:25.090 --> 00:09:25.100
change this method to first call the
 

00:09:25.100 --> 00:09:27.040
change this method to first call the
futile tomatoes which probably makes the

00:09:27.040 --> 00:09:27.050
futile tomatoes which probably makes the
 

00:09:27.050 --> 00:09:28.600
futile tomatoes which probably makes the
web service call to check the user

00:09:28.600 --> 00:09:28.610
web service call to check the user
 

00:09:28.610 --> 00:09:30.820
web service call to check the user
settings and then if the user is

00:09:30.820 --> 00:09:30.830
settings and then if the user is
 

00:09:30.830 --> 00:09:33.130
settings and then if the user is
enrolled then we want to start the

00:09:33.130 --> 00:09:33.140
enrolled then we want to start the
 

00:09:33.140 --> 00:09:35.410
enrolled then we want to start the
location listener which looks like a

00:09:35.410 --> 00:09:35.420
location listener which looks like a
 

00:09:35.420 --> 00:09:37.570
location listener which looks like a
very simple change you will think this

00:09:37.570 --> 00:09:37.580
very simple change you will think this
 

00:09:37.580 --> 00:09:39.640
very simple change you will think this
would work but let's look at what

00:09:39.640 --> 00:09:39.650
would work but let's look at what
 

00:09:39.650 --> 00:09:41.890
would work but let's look at what
happens in that activity is life cycle

00:09:41.890 --> 00:09:41.900
happens in that activity is life cycle
 

00:09:41.900 --> 00:09:44.890
happens in that activity is life cycle
so activity was created we said okay

00:09:44.890 --> 00:09:44.900
so activity was created we said okay
 

00:09:44.900 --> 00:09:47.950
so activity was created we said okay
when start check if the users Studies is

00:09:47.950 --> 00:09:47.960
when start check if the users Studies is
 

00:09:47.960 --> 00:09:51.280
when start check if the users Studies is
enrolled the meanwhile user wants to

00:09:51.280 --> 00:09:51.290
enrolled the meanwhile user wants to
 

00:09:51.290 --> 00:09:53.320
enrolled the meanwhile user wants to
rotate the device which rotation means a

00:09:53.320 --> 00:09:53.330
rotate the device which rotation means a
 

00:09:53.330 --> 00:09:55.630
rotate the device which rotation means a
configuration change which means Android

00:09:55.630 --> 00:09:55.640
configuration change which means Android
 

00:09:55.640 --> 00:09:58.510
configuration change which means Android
is going to recreate that activity so in

00:09:58.510 --> 00:09:58.520
is going to recreate that activity so in
 

00:09:58.520 --> 00:10:00.820
is going to recreate that activity so in
also we knew about this and we said ok

00:10:00.820 --> 00:10:00.830
also we knew about this and we said ok
 

00:10:00.830 --> 00:10:04.030
also we knew about this and we said ok
location manager stop and then the new

00:10:04.030 --> 00:10:04.040
location manager stop and then the new
 

00:10:04.040 --> 00:10:06.280
location manager stop and then the new
activity came it also goes through the

00:10:06.280 --> 00:10:06.290
activity came it also goes through the
 

00:10:06.290 --> 00:10:09.310
activity came it also goes through the
same thing looks so right except do you

00:10:09.310 --> 00:10:09.320
same thing looks so right except do you
 

00:10:09.320 --> 00:10:12.160
same thing looks so right except do you
remember this call we make before the

00:10:12.160 --> 00:10:12.170
remember this call we make before the
 

00:10:12.170 --> 00:10:14.829
remember this call we make before the
little change and then it decides to

00:10:14.829 --> 00:10:14.839
little change and then it decides to
 

00:10:14.839 --> 00:10:17.290
little change and then it decides to
come back hey users enrolled and then

00:10:17.290 --> 00:10:17.300
come back hey users enrolled and then
 

00:10:17.300 --> 00:10:21.040
come back hey users enrolled and then
what we did we said ok that's part you

00:10:21.040 --> 00:10:21.050
what we did we said ok that's part you
 

00:10:21.050 --> 00:10:23.440
what we did we said ok that's part you
realize the bug we call start after

00:10:23.440 --> 00:10:23.450
realize the bug we call start after
 

00:10:23.450 --> 00:10:27.160
realize the bug we call start after
calling on stop which means our activity

00:10:27.160 --> 00:10:27.170
calling on stop which means our activity
 

00:10:27.170 --> 00:10:29.230
calling on stop which means our activity
will live forever we are going to

00:10:29.230 --> 00:10:29.240
will live forever we are going to
 

00:10:29.240 --> 00:10:31.540
will live forever we are going to
observe the location forever the battery

00:10:31.540 --> 00:10:31.550
observe the location forever the battery
 

00:10:31.550 --> 00:10:32.310
observe the location forever the battery
will drain we

00:10:32.310 --> 00:10:32.320
will drain we
 

00:10:32.320 --> 00:10:37.740
will drain we
have said users Leslie really this is a

00:10:37.740 --> 00:10:37.750
have said users Leslie really this is a
 

00:10:37.750 --> 00:10:39.840
have said users Leslie really this is a
situation right we want to get rid of

00:10:39.840 --> 00:10:39.850
situation right we want to get rid of
 

00:10:39.850 --> 00:10:42.000
situation right we want to get rid of
this not to put an end to this so we

00:10:42.000 --> 00:10:42.010
this not to put an end to this so we
 

00:10:42.010 --> 00:10:43.470
this not to put an end to this so we
said okay we know we need to acknowledge

00:10:43.470 --> 00:10:43.480
said okay we know we need to acknowledge
 

00:10:43.480 --> 00:10:45.570
said okay we know we need to acknowledge
against Mike mentioned we cannot change

00:10:45.570 --> 00:10:45.580
against Mike mentioned we cannot change
 

00:10:45.580 --> 00:10:47.880
against Mike mentioned we cannot change
the laws but we can make it easier to

00:10:47.880 --> 00:10:47.890
the laws but we can make it easier to
 

00:10:47.890 --> 00:10:50.730
the laws but we can make it easier to
deal with these things so we decided to

00:10:50.730 --> 00:10:50.740
deal with these things so we decided to
 

00:10:50.740 --> 00:10:52.230
deal with these things so we decided to
introduce a new interface called

00:10:52.230 --> 00:10:52.240
introduce a new interface called
 

00:10:52.240 --> 00:10:55.200
introduce a new interface called
lifecycle owner this is a thing with a

00:10:55.200 --> 00:10:55.210
lifecycle owner this is a thing with a
 

00:10:55.210 --> 00:10:57.120
lifecycle owner this is a thing with a
lifecycle is your activity is your

00:10:57.120 --> 00:10:57.130
lifecycle is your activity is your
 

00:10:57.130 --> 00:10:59.490
lifecycle is your activity is your
fragment or maybe you have your own UI

00:10:59.490 --> 00:10:59.500
fragment or maybe you have your own UI
 

00:10:59.500 --> 00:11:01.890
fragment or maybe you have your own UI
framework whatever the container you

00:11:01.890 --> 00:11:01.900
framework whatever the container you
 

00:11:01.900 --> 00:11:05.760
framework whatever the container you
have there is a lifecycle owner and we

00:11:05.760 --> 00:11:05.770
have there is a lifecycle owner and we
 

00:11:05.770 --> 00:11:09.030
have there is a lifecycle owner and we
have these lifecycle observers which are

00:11:09.030 --> 00:11:09.040
have these lifecycle observers which are
 

00:11:09.040 --> 00:11:10.920
have these lifecycle observers which are
the things that care about a lifecycle

00:11:10.920 --> 00:11:10.930
the things that care about a lifecycle
 

00:11:10.930 --> 00:11:13.290
the things that care about a lifecycle
like the location listener we have it

00:11:13.290 --> 00:11:13.300
like the location listener we have it
 

00:11:13.300 --> 00:11:15.240
like the location listener we have it
cares about the lifecycle it wants to

00:11:15.240 --> 00:11:15.250
cares about the lifecycle it wants to
 

00:11:15.250 --> 00:11:17.550
cares about the lifecycle it wants to
stop itself if the lifecycle is not

00:11:17.550 --> 00:11:17.560
stop itself if the lifecycle is not
 

00:11:17.560 --> 00:11:20.160
stop itself if the lifecycle is not
active so we said okay we will

00:11:20.160 --> 00:11:20.170
active so we said okay we will
 

00:11:20.170 --> 00:11:21.960
active so we said okay we will
acknowledge this and we have lifecycle

00:11:21.960 --> 00:11:21.970
acknowledge this and we have lifecycle
 

00:11:21.970 --> 00:11:24.840
acknowledge this and we have lifecycle
observers I'm going to go through our

00:11:24.840 --> 00:11:24.850
observers I'm going to go through our
 

00:11:24.850 --> 00:11:28.080
observers I'm going to go through our
activity now we make our activity extend

00:11:28.080 --> 00:11:28.090
activity now we make our activity extend
 

00:11:28.090 --> 00:11:30.510
activity now we make our activity extend
the lifecycle activity class this is the

00:11:30.510 --> 00:11:30.520
the lifecycle activity class this is the
 

00:11:30.520 --> 00:11:32.610
the lifecycle activity class this is the
set up pretty close until these

00:11:32.610 --> 00:11:32.620
set up pretty close until these
 

00:11:32.620 --> 00:11:35.040
set up pretty close until these
components reach 1.0 then everything in

00:11:35.040 --> 00:11:35.050
components reach 1.0 then everything in
 

00:11:35.050 --> 00:11:36.840
components reach 1.0 then everything in
support library will implement this

00:11:36.840 --> 00:11:36.850
support library will implement this
 

00:11:36.850 --> 00:11:40.350
support library will implement this
lifecycle owner interface inside the

00:11:40.350 --> 00:11:40.360
lifecycle owner interface inside the
 

00:11:40.360 --> 00:11:42.630
lifecycle owner interface inside the
reactivity when we initialize our

00:11:42.630 --> 00:11:42.640
reactivity when we initialize our
 

00:11:42.640 --> 00:11:45.270
reactivity when we initialize our
location listener we are going to tell

00:11:45.270 --> 00:11:45.280
location listener we are going to tell
 

00:11:45.280 --> 00:11:47.580
location listener we are going to tell
if this is the lifecycle you care about

00:11:47.580 --> 00:11:47.590
if this is the lifecycle you care about
 

00:11:47.590 --> 00:11:51.150
if this is the lifecycle you care about
and this all we will do rest is the same

00:11:51.150 --> 00:11:51.160
and this all we will do rest is the same
 

00:11:51.160 --> 00:11:54.600
and this all we will do rest is the same
it calls back the update the UI so how

00:11:54.600 --> 00:11:54.610
it calls back the update the UI so how
 

00:11:54.610 --> 00:11:57.090
it calls back the update the UI so how
can we change our location listener to

00:11:57.090 --> 00:11:57.100
can we change our location listener to
 

00:11:57.100 --> 00:12:01.140
can we change our location listener to
take advantage of this lifecycle or we

00:12:01.140 --> 00:12:01.150
take advantage of this lifecycle or we
 

00:12:01.150 --> 00:12:03.030
take advantage of this lifecycle or we
do the same thing for the user's force

00:12:03.030 --> 00:12:03.040
do the same thing for the user's force
 

00:12:03.040 --> 00:12:07.260
do the same thing for the user's force
as well ok so there's some boilerplate

00:12:07.260 --> 00:12:07.270
as well ok so there's some boilerplate
 

00:12:07.270 --> 00:12:09.240
as well ok so there's some boilerplate
code here to get the fields it doesn't

00:12:09.240 --> 00:12:09.250
code here to get the fields it doesn't
 

00:12:09.250 --> 00:12:11.520
code here to get the fields it doesn't
really matter but we have this enable

00:12:11.520 --> 00:12:11.530
really matter but we have this enable
 

00:12:11.530 --> 00:12:13.620
really matter but we have this enable
method which gets called if the user is

00:12:13.620 --> 00:12:13.630
method which gets called if the user is
 

00:12:13.630 --> 00:12:16.230
method which gets called if the user is
a role inside this enable method now we

00:12:16.230 --> 00:12:16.240
a role inside this enable method now we
 

00:12:16.240 --> 00:12:18.090
a role inside this enable method now we
want to start listening the location

00:12:18.090 --> 00:12:18.100
want to start listening the location
 

00:12:18.100 --> 00:12:21.450
want to start listening the location
only if the activity is started now you

00:12:21.450 --> 00:12:21.460
only if the activity is started now you
 

00:12:21.460 --> 00:12:24.330
only if the activity is started now you
can do this you can say what is my

00:12:24.330 --> 00:12:24.340
can do this you can say what is my
 

00:12:24.340 --> 00:12:26.640
can do this you can say what is my
current state which is amazing we had we

00:12:26.640 --> 00:12:26.650
current state which is amazing we had we
 

00:12:26.650 --> 00:12:29.400
current state which is amazing we had we
didn't have this API until now but now

00:12:29.400 --> 00:12:29.410
didn't have this API until now but now
 

00:12:29.410 --> 00:12:34.170
didn't have this API until now but now
you can circuit rather simple change but

00:12:34.170 --> 00:12:34.180
you can circuit rather simple change but
 

00:12:34.180 --> 00:12:36.330
you can circuit rather simple change but
we also get notified what if we get

00:12:36.330 --> 00:12:36.340
we also get notified what if we get
 

00:12:36.340 --> 00:12:38.070
we also get notified what if we get
enrolled when the activity was in the

00:12:38.070 --> 00:12:38.080
enrolled when the activity was in the
 

00:12:38.080 --> 00:12:39.810
enrolled when the activity was in the
back stake and user comes back to the

00:12:39.810 --> 00:12:39.820
back stake and user comes back to the
 

00:12:39.820 --> 00:12:41.730
back stake and user comes back to the
activity now we should actually start

00:12:41.730 --> 00:12:41.740
activity now we should actually start
 

00:12:41.740 --> 00:12:44.040
activity now we should actually start
the location manager for this we want to

00:12:44.040 --> 00:12:44.050
the location manager for this we want to
 

00:12:44.050 --> 00:12:46.019
the location manager for this we want to
observe that lifecycle

00:12:46.019 --> 00:12:46.029
observe that lifecycle
 

00:12:46.029 --> 00:12:48.150
observe that lifecycle
to do that we implies this interface

00:12:48.150 --> 00:12:48.160
to do that we implies this interface
 

00:12:48.160 --> 00:12:50.550
to do that we implies this interface
which allows us to write these methods

00:12:50.550 --> 00:12:50.560
which allows us to write these methods
 

00:12:50.560 --> 00:12:53.040
which allows us to write these methods
you can annotate a method saying that if

00:12:53.040 --> 00:12:53.050
you can annotate a method saying that if
 

00:12:53.050 --> 00:12:55.590
you can annotate a method saying that if
once that happens call this method and

00:12:55.590 --> 00:12:55.600
once that happens call this method and
 

00:12:55.600 --> 00:12:57.780
once that happens call this method and
the new components will take care of

00:12:57.780 --> 00:12:57.790
the new components will take care of
 

00:12:57.790 --> 00:12:59.360
the new components will take care of
calling it so if you are already enabled

00:12:59.360 --> 00:12:59.370
calling it so if you are already enabled
 

00:12:59.370 --> 00:13:03.329
calling it so if you are already enabled
now you start and onstop will disconnect

00:13:03.329 --> 00:13:03.339
now you start and onstop will disconnect
 

00:13:03.339 --> 00:13:05.759
now you start and onstop will disconnect
and last but not least if the activity

00:13:05.759 --> 00:13:05.769
and last but not least if the activity
 

00:13:05.769 --> 00:13:07.499
and last but not least if the activity
is destroyed there is nothing you want

00:13:07.499 --> 00:13:07.509
is destroyed there is nothing you want
 

00:13:07.509 --> 00:13:09.509
is destroyed there is nothing you want
to do with that activity so you can

00:13:09.509 --> 00:13:09.519
to do with that activity so you can
 

00:13:09.519 --> 00:13:10.939
to do with that activity so you can
unregister

00:13:10.939 --> 00:13:10.949
unregister
 

00:13:10.949 --> 00:13:13.410
unregister
so now you might be asking yourself well

00:13:13.410 --> 00:13:13.420
so now you might be asking yourself well
 

00:13:13.420 --> 00:13:15.240
so now you might be asking yourself well
you just move those on start on stop

00:13:15.240 --> 00:13:15.250
you just move those on start on stop
 

00:13:15.250 --> 00:13:17.069
you just move those on start on stop
methods from the activity into this

00:13:17.069 --> 00:13:17.079
methods from the activity into this
 

00:13:17.079 --> 00:13:19.050
methods from the activity into this
location manager like how come it is

00:13:19.050 --> 00:13:19.060
location manager like how come it is
 

00:13:19.060 --> 00:13:21.569
location manager like how come it is
simpler it's simply because those

00:13:21.569 --> 00:13:21.579
simpler it's simply because those
 

00:13:21.579 --> 00:13:23.639
simpler it's simply because those
methods live in the right place it's the

00:13:23.639 --> 00:13:23.649
methods live in the right place it's the
 

00:13:23.649 --> 00:13:26.429
methods live in the right place it's the
location manager which cares about the

00:13:26.429 --> 00:13:26.439
location manager which cares about the
 

00:13:26.439 --> 00:13:29.069
location manager which cares about the
life cycle so it should be able to do it

00:13:29.069 --> 00:13:29.079
life cycle so it should be able to do it
 

00:13:29.079 --> 00:13:31.769
life cycle so it should be able to do it
without the activity babysitting itself

00:13:31.769 --> 00:13:31.779
without the activity babysitting itself
 

00:13:31.779 --> 00:13:33.749
without the activity babysitting itself
like I'm sure if you look at your code

00:13:33.749 --> 00:13:33.759
like I'm sure if you look at your code
 

00:13:33.759 --> 00:13:35.759
like I'm sure if you look at your code
today your activity on start on stop

00:13:35.759 --> 00:13:35.769
today your activity on start on stop
 

00:13:35.769 --> 00:13:37.889
today your activity on start on stop
methods are like at least 20 30 lines of

00:13:37.889 --> 00:13:37.899
methods are like at least 20 30 lines of
 

00:13:37.899 --> 00:13:40.170
methods are like at least 20 30 lines of
code we want them to be zero lines of

00:13:40.170 --> 00:13:40.180
code we want them to be zero lines of
 

00:13:40.180 --> 00:13:43.829
code we want them to be zero lines of
code if we go back to activity I want to

00:13:43.829 --> 00:13:43.839
code if we go back to activity I want to
 

00:13:43.839 --> 00:13:46.379
code if we go back to activity I want to
point out something that look in

00:13:46.379 --> 00:13:46.389
point out something that look in
 

00:13:46.389 --> 00:13:48.689
point out something that look in
oncreate we initialize these components

00:13:48.689 --> 00:13:48.699
oncreate we initialize these components
 

00:13:48.699 --> 00:13:51.629
oncreate we initialize these components
and this only did we didn't overwrite we

00:13:51.629 --> 00:13:51.639
and this only did we didn't overwrite we
 

00:13:51.639 --> 00:13:53.490
and this only did we didn't overwrite we
didn't or stop on start we don't

00:13:53.490 --> 00:13:53.500
didn't or stop on start we don't
 

00:13:53.500 --> 00:13:55.319
didn't or stop on start we don't
overwrite any of those things because

00:13:55.319 --> 00:13:55.329
overwrite any of those things because
 

00:13:55.329 --> 00:13:58.199
overwrite any of those things because
the location manager is a life cycle

00:13:58.199 --> 00:13:58.209
the location manager is a life cycle
 

00:13:58.209 --> 00:14:02.999
the location manager is a life cycle
area confident now so the new constraint

00:14:02.999 --> 00:14:03.009
area confident now so the new constraint
 

00:14:03.009 --> 00:14:04.829
area confident now so the new constraint
we want to introduce a life cycle event

00:14:04.829 --> 00:14:04.839
we want to introduce a life cycle event
 

00:14:04.839 --> 00:14:06.960
we want to introduce a life cycle event
component is a component that can get a

00:14:06.960 --> 00:14:06.970
component is a component that can get a
 

00:14:06.970 --> 00:14:09.360
component is a component that can get a
life cycle and do the writing we can

00:14:09.360 --> 00:14:09.370
life cycle and do the writing we can
 

00:14:09.370 --> 00:14:10.559
life cycle and do the writing we can
take care of itself

00:14:10.559 --> 00:14:10.569
take care of itself
 

00:14:10.569 --> 00:14:13.110
take care of itself
so that your activity you can just

00:14:13.110 --> 00:14:13.120
so that your activity you can just
 

00:14:13.120 --> 00:14:15.030
so that your activity you can just
initialize it and forget about it you

00:14:15.030 --> 00:14:15.040
initialize it and forget about it you
 

00:14:15.040 --> 00:14:19.110
initialize it and forget about it you
know that it's not going to make you now

00:14:19.110 --> 00:14:19.120
know that it's not going to make you now
 

00:14:19.120 --> 00:14:21.809
know that it's not going to make you now
of course it was like more of moving the

00:14:21.809 --> 00:14:21.819
of course it was like more of moving the
 

00:14:21.819 --> 00:14:23.999
of course it was like more of moving the
complexity from activity to the location

00:14:23.999 --> 00:14:24.009
complexity from activity to the location
 

00:14:24.009 --> 00:14:25.740
complexity from activity to the location
manager and then it still needs to deal

00:14:25.740 --> 00:14:25.750
manager and then it still needs to deal
 

00:14:25.750 --> 00:14:28.799
manager and then it still needs to deal
with life cycle with it ok what do we

00:14:28.799 --> 00:14:28.809
with life cycle with it ok what do we
 

00:14:28.809 --> 00:14:30.600
with life cycle with it ok what do we
want is nice to be able to do that do

00:14:30.600 --> 00:14:30.610
want is nice to be able to do that do
 

00:14:30.610 --> 00:14:33.150
want is nice to be able to do that do
what we want more we want take very

00:14:33.150 --> 00:14:33.160
what we want more we want take very
 

00:14:33.160 --> 00:14:35.009
what we want more we want take very
convenient to handle this common case

00:14:35.009 --> 00:14:35.019
convenient to handle this common case
 

00:14:35.019 --> 00:14:37.350
convenient to handle this common case
it's very common that your activity or

00:14:37.350 --> 00:14:37.360
it's very common that your activity or
 

00:14:37.360 --> 00:14:39.569
it's very common that your activity or
fragment it observes some data and

00:14:39.569 --> 00:14:39.579
fragment it observes some data and
 

00:14:39.579 --> 00:14:42.299
fragment it observes some data and
whenever the data changes its runs the

00:14:42.299 --> 00:14:42.309
whenever the data changes its runs the
 

00:14:42.309 --> 00:14:44.519
whenever the data changes its runs the
refresh itself like it happens basically

00:14:44.519 --> 00:14:44.529
refresh itself like it happens basically
 

00:14:44.529 --> 00:14:47.429
refresh itself like it happens basically
almost every single UI and we want to

00:14:47.429 --> 00:14:47.439
almost every single UI and we want to
 

00:14:47.439 --> 00:14:49.170
almost every single UI and we want to
share resources across multiple

00:14:49.170 --> 00:14:49.180
share resources across multiple
 

00:14:49.180 --> 00:14:51.329
share resources across multiple
fragments or activities like the

00:14:51.329 --> 00:14:51.339
fragments or activities like the
 

00:14:51.339 --> 00:14:53.970
fragments or activities like the
location of the device is the same from

00:14:53.970 --> 00:14:53.980
location of the device is the same from
 

00:14:53.980 --> 00:14:55.679
location of the device is the same from
fragment to fragment if you have two

00:14:55.679 --> 00:14:55.689
fragment to fragment if you have two
 

00:14:55.689 --> 00:14:57.749
fragment to fragment if you have two
fragments why do you need to create two

00:14:57.749 --> 00:14:57.759
fragments why do you need to create two
 

00:14:57.759 --> 00:14:59.310
fragments why do you need to create two
listeners to listen the same

00:14:59.310 --> 00:14:59.320
listeners to listen the same
 

00:14:59.320 --> 00:15:03.420
listeners to listen the same
location has we created this new live

00:15:03.420 --> 00:15:03.430
location has we created this new live
 

00:15:03.430 --> 00:15:05.820
location has we created this new live
data cause let's look at that

00:15:05.820 --> 00:15:05.830
data cause let's look at that
 

00:15:05.830 --> 00:15:08.820
data cause let's look at that
so live data is a data holder it just

00:15:08.820 --> 00:15:08.830
so live data is a data holder it just
 

00:15:08.830 --> 00:15:12.210
so live data is a data holder it just
has some data like an observable but the

00:15:12.210 --> 00:15:12.220
has some data like an observable but the
 

00:15:12.220 --> 00:15:14.130
has some data like an observable but the
tricky thing about live data is that it

00:15:14.130 --> 00:15:14.140
tricky thing about live data is that it
 

00:15:14.140 --> 00:15:16.800
tricky thing about live data is that it
is life cycle away it understands about

00:15:16.800 --> 00:15:16.810
is life cycle away it understands about
 

00:15:16.810 --> 00:15:19.500
is life cycle away it understands about
life cycles because it understands our

00:15:19.500 --> 00:15:19.510
life cycles because it understands our
 

00:15:19.510 --> 00:15:21.990
life cycles because it understands our
life cycles it automatically manages

00:15:21.990 --> 00:15:22.000
life cycles it automatically manages
 

00:15:22.000 --> 00:15:23.700
life cycles it automatically manages
subscriptions so very similar to the

00:15:23.700 --> 00:15:23.710
subscriptions so very similar to the
 

00:15:23.710 --> 00:15:26.190
subscriptions so very similar to the
previous example if you are observing a

00:15:26.190 --> 00:15:26.200
previous example if you are observing a
 

00:15:26.200 --> 00:15:28.290
previous example if you are observing a
live data you don't need to ascribe

00:15:28.290 --> 00:15:28.300
live data you don't need to ascribe
 

00:15:28.300 --> 00:15:30.210
live data you don't need to ascribe
unsubscribe the right things will happen

00:15:30.210 --> 00:15:30.220
unsubscribe the right things will happen
 

00:15:30.220 --> 00:15:34.770
unsubscribe the right things will happen
in the right times so if that location

00:15:34.770 --> 00:15:34.780
in the right times so if that location
 

00:15:34.780 --> 00:15:37.560
in the right times so if that location
ELISA was a live data and a single time

00:15:37.560 --> 00:15:37.570
ELISA was a live data and a single time
 

00:15:37.570 --> 00:15:40.110
ELISA was a live data and a single time
because vocation singleton we could

00:15:40.110 --> 00:15:40.120
because vocation singleton we could
 

00:15:40.120 --> 00:15:41.880
because vocation singleton we could
write the code like this like get

00:15:41.880 --> 00:15:41.890
write the code like this like get
 

00:15:41.890 --> 00:15:44.220
write the code like this like get
business start observing and when you

00:15:44.220 --> 00:15:44.230
business start observing and when you
 

00:15:44.230 --> 00:15:46.920
business start observing and when you
observe you say this is my life cycle

00:15:46.920 --> 00:15:46.930
observe you say this is my life cycle
 

00:15:46.930 --> 00:15:48.810
observe you say this is my life cycle
this all you need to do before on

00:15:48.810 --> 00:15:48.820
this all you need to do before on
 

00:15:48.820 --> 00:15:51.090
this all you need to do before on
Android if you are observing something

00:15:51.090 --> 00:15:51.100
Android if you are observing something
 

00:15:51.100 --> 00:15:54.090
Android if you are observing something
singleton from an activity everyone will

00:15:54.090 --> 00:15:54.100
singleton from an activity everyone will
 

00:15:54.100 --> 00:15:56.760
singleton from an activity everyone will
give like - to the code reveal now you

00:15:56.760 --> 00:15:56.770
give like - to the code reveal now you
 

00:15:56.770 --> 00:15:58.740
give like - to the code reveal now you
can do this this is safe

00:15:58.740 --> 00:15:58.750
can do this this is safe
 

00:15:58.750 --> 00:16:02.100
can do this this is safe
nothing ever leaks so if you want to

00:16:02.100 --> 00:16:02.110
nothing ever leaks so if you want to
 

00:16:02.110 --> 00:16:03.990
nothing ever leaks so if you want to
change your location listener to use

00:16:03.990 --> 00:16:04.000
change your location listener to use
 

00:16:04.000 --> 00:16:06.570
change your location listener to use
this new API we get rid of all the

00:16:06.570 --> 00:16:06.580
this new API we get rid of all the
 

00:16:06.580 --> 00:16:08.580
this new API we get rid of all the
necessary things all we need the context

00:16:08.580 --> 00:16:08.590
necessary things all we need the context
 

00:16:08.590 --> 00:16:11.610
necessary things all we need the context
conduct but we say this is a live data

00:16:11.610 --> 00:16:11.620
conduct but we say this is a live data
 

00:16:11.620 --> 00:16:15.990
conduct but we say this is a live data
is alive date of a location then we get

00:16:15.990 --> 00:16:16.000
is alive date of a location then we get
 

00:16:16.000 --> 00:16:18.570
is alive date of a location then we get
these two new methods one of those

00:16:18.570 --> 00:16:18.580
these two new methods one of those
 

00:16:18.580 --> 00:16:21.210
these two new methods one of those
things on active which means you have an

00:16:21.210 --> 00:16:21.220
things on active which means you have an
 

00:16:21.220 --> 00:16:23.640
things on active which means you have an
active observer and the other one says

00:16:23.640 --> 00:16:23.650
active observer and the other one says
 

00:16:23.650 --> 00:16:25.590
active observer and the other one says
on inactive issues you don't have any

00:16:25.590 --> 00:16:25.600
on inactive issues you don't have any
 

00:16:25.600 --> 00:16:28.050
on inactive issues you don't have any
observers that are active now at this

00:16:28.050 --> 00:16:28.060
observers that are active now at this
 

00:16:28.060 --> 00:16:29.670
observers that are active now at this
point you are probably asking yourself

00:16:29.670 --> 00:16:29.680
point you are probably asking yourself
 

00:16:29.680 --> 00:16:33.150
point you are probably asking yourself
what is an active observer now we define

00:16:33.150 --> 00:16:33.160
what is an active observer now we define
 

00:16:33.160 --> 00:16:35.160
what is an active observer now we define
an active observer as an observer that's

00:16:35.160 --> 00:16:35.170
an active observer as an observer that's
 

00:16:35.170 --> 00:16:37.710
an active observer as an observer that's
in the started or resumed state which is

00:16:37.710 --> 00:16:37.720
in the started or resumed state which is
 

00:16:37.720 --> 00:16:39.480
in the started or resumed state which is
like an activity user is currently

00:16:39.480 --> 00:16:39.490
like an activity user is currently
 

00:16:39.490 --> 00:16:41.820
like an activity user is currently
seeing so here an observer in the back

00:16:41.820 --> 00:16:41.830
seeing so here an observer in the back
 

00:16:41.830 --> 00:16:44.130
seeing so here an observer in the back
stack there is no reason to call this

00:16:44.130 --> 00:16:44.140
stack there is no reason to call this
 

00:16:44.140 --> 00:16:45.960
stack there is no reason to call this
inactive like there is no reason to

00:16:45.960 --> 00:16:45.970
inactive like there is no reason to
 

00:16:45.970 --> 00:16:48.000
inactive like there is no reason to
update that activity because user will

00:16:48.000 --> 00:16:48.010
update that activity because user will
 

00:16:48.010 --> 00:16:52.340
update that activity because user will
never ever see what's going on there

00:16:52.340 --> 00:16:52.350
 
 

00:16:52.350 --> 00:16:55.560
 
so insider will connect method all we

00:16:55.560 --> 00:16:55.570
so insider will connect method all we
 

00:16:55.570 --> 00:16:57.150
so insider will connect method all we
need to do is whenever the system

00:16:57.150 --> 00:16:57.160
need to do is whenever the system
 

00:16:57.160 --> 00:16:59.220
need to do is whenever the system
location measure sends us a new location

00:16:59.220 --> 00:16:59.230
location measure sends us a new location
 

00:16:59.230 --> 00:17:02.280
location measure sends us a new location
we call set value on ourselves then the

00:17:02.280 --> 00:17:02.290
we call set value on ourselves then the
 

00:17:02.290 --> 00:17:04.710
we call set value on ourselves then the
line data knows which are the active

00:17:04.710 --> 00:17:04.720
line data knows which are the active
 

00:17:04.720 --> 00:17:07.230
line data knows which are the active
observers and delivers the data to those

00:17:07.230 --> 00:17:07.240
observers and delivers the data to those
 

00:17:07.240 --> 00:17:10.150
observers and delivers the data to those
observers or if one of the observers

00:17:10.150 --> 00:17:10.160
observers or if one of the observers
 

00:17:10.160 --> 00:17:12.490
observers or if one of the observers
like on the back stack and then becomes

00:17:12.490 --> 00:17:12.500
like on the back stack and then becomes
 

00:17:12.500 --> 00:17:13.390
like on the back stack and then becomes
visible again

00:17:13.390 --> 00:17:13.400
visible again
 

00:17:13.400 --> 00:17:15.520
visible again
live data takes care of sending the

00:17:15.520 --> 00:17:15.530
live data takes care of sending the
 

00:17:15.530 --> 00:17:18.930
live data takes care of sending the
latest data back to that observer and

00:17:18.930 --> 00:17:18.940
latest data back to that observer and
 

00:17:18.940 --> 00:17:21.750
latest data back to that observer and
then we can make our location listener

00:17:21.750 --> 00:17:21.760
then we can make our location listener
 

00:17:21.760 --> 00:17:24.400
then we can make our location listener
singleton because but we don't need

00:17:24.400 --> 00:17:24.410
singleton because but we don't need
 

00:17:24.410 --> 00:17:26.380
singleton because but we don't need
multiple instances so if you look at

00:17:26.380 --> 00:17:26.390
multiple instances so if you look at
 

00:17:26.390 --> 00:17:28.900
multiple instances so if you look at
live data it is a life cycle of eight

00:17:28.900 --> 00:17:28.910
live data it is a life cycle of eight
 

00:17:28.910 --> 00:17:31.810
live data it is a life cycle of eight
observables it is very simple status of

00:17:31.810 --> 00:17:31.820
observables it is very simple status of
 

00:17:31.820 --> 00:17:33.370
observables it is very simple status of
semantics doesn't matter how many

00:17:33.370 --> 00:17:33.380
semantics doesn't matter how many
 

00:17:33.380 --> 00:17:35.500
semantics doesn't matter how many
observers you have or what state they

00:17:35.500 --> 00:17:35.510
observers you have or what state they
 

00:17:35.510 --> 00:17:37.960
observers you have or what state they
are we merge all of it into one life

00:17:37.960 --> 00:17:37.970
are we merge all of it into one life
 

00:17:37.970 --> 00:17:41.290
are we merge all of it into one life
cycle and it doesn't have any activities

00:17:41.290 --> 00:17:41.300
cycle and it doesn't have any activities
 

00:17:41.300 --> 00:17:43.360
cycle and it doesn't have any activities
or fragments inside it but it works with

00:17:43.360 --> 00:17:43.370
or fragments inside it but it works with
 

00:17:43.370 --> 00:17:45.880
or fragments inside it but it works with
both of them and it's also going to test

00:17:45.880 --> 00:17:45.890
both of them and it's also going to test
 

00:17:45.890 --> 00:17:48.070
both of them and it's also going to test
live data because it's kind of Android

00:17:48.070 --> 00:17:48.080
live data because it's kind of Android
 

00:17:48.080 --> 00:17:51.100
live data because it's kind of Android
free and if you know about this like in

00:17:51.100 --> 00:17:51.110
free and if you know about this like in
 

00:17:51.110 --> 00:17:53.890
free and if you know about this like in
famous for net transaction exception we

00:17:53.890 --> 00:17:53.900
famous for net transaction exception we
 

00:17:53.900 --> 00:17:56.410
famous for net transaction exception we
guarantee that your observer will never

00:17:56.410 --> 00:17:56.420
guarantee that your observer will never
 

00:17:56.420 --> 00:17:59.350
guarantee that your observer will never
ever be cold in a state where you cannot

00:17:59.350 --> 00:17:59.360
ever be cold in a state where you cannot
 

00:17:59.360 --> 00:18:01.810
ever be cold in a state where you cannot
run a fragment transaction so this is

00:18:01.810 --> 00:18:01.820
run a fragment transaction so this is
 

00:18:01.820 --> 00:18:04.270
run a fragment transaction so this is
very specifically designed to work well

00:18:04.270 --> 00:18:04.280
very specifically designed to work well
 

00:18:04.280 --> 00:18:08.320
very specifically designed to work well
with your activities and fragments okay

00:18:08.320 --> 00:18:08.330
with your activities and fragments okay
 

00:18:08.330 --> 00:18:10.870
with your activities and fragments okay
let's think about configuration changes

00:18:10.870 --> 00:18:10.880
let's think about configuration changes
 

00:18:10.880 --> 00:18:13.060
let's think about configuration changes
now that example was easy because

00:18:13.060 --> 00:18:13.070
now that example was easy because
 

00:18:13.070 --> 00:18:15.340
now that example was easy because
location is global but most of the times

00:18:15.340 --> 00:18:15.350
location is global but most of the times
 

00:18:15.350 --> 00:18:18.400
location is global but most of the times
the data belongs to a UI so if we had an

00:18:18.400 --> 00:18:18.410
the data belongs to a UI so if we had an
 

00:18:18.410 --> 00:18:21.610
the data belongs to a UI so if we had an
activity where we show a user profile

00:18:21.610 --> 00:18:21.620
activity where we show a user profile
 

00:18:21.620 --> 00:18:24.310
activity where we show a user profile
and we implemented a web service that

00:18:24.310 --> 00:18:24.320
and we implemented a web service that
 

00:18:24.320 --> 00:18:26.230
and we implemented a web service that
can return the death either live data

00:18:26.230 --> 00:18:26.240
can return the death either live data
 

00:18:26.240 --> 00:18:29.650
can return the death either live data
which we can safely observe without

00:18:29.650 --> 00:18:29.660
which we can safely observe without
 

00:18:29.660 --> 00:18:32.770
which we can safely observe without
risking leaking over activity this one

00:18:32.770 --> 00:18:32.780
risking leaking over activity this one
 

00:18:32.780 --> 00:18:34.090
risking leaking over activity this one
looks nice you will never leave this

00:18:34.090 --> 00:18:34.100
looks nice you will never leave this
 

00:18:34.100 --> 00:18:36.730
looks nice you will never leave this
activity it will work very well except

00:18:36.730 --> 00:18:36.740
activity it will work very well except
 

00:18:36.740 --> 00:18:38.920
activity it will work very well except
what happens if the user rotates the

00:18:38.920 --> 00:18:38.930
what happens if the user rotates the
 

00:18:38.930 --> 00:18:41.560
what happens if the user rotates the
device let's look at the lifecycle graph

00:18:41.560 --> 00:18:41.570
device let's look at the lifecycle graph
 

00:18:41.570 --> 00:18:44.680
device let's look at the lifecycle graph
again so activity skated it says okay

00:18:44.680 --> 00:18:44.690
again so activity skated it says okay
 

00:18:44.690 --> 00:18:47.560
again so activity skated it says okay
fetch the user and then while you are

00:18:47.560 --> 00:18:47.570
fetch the user and then while you are
 

00:18:47.570 --> 00:18:49.840
fetch the user and then while you are
fetching the user user decides up I want

00:18:49.840 --> 00:18:49.850
fetching the user user decides up I want
 

00:18:49.850 --> 00:18:51.790
fetching the user user decides up I want
to rotate the phone and then the

00:18:51.790 --> 00:18:51.800
to rotate the phone and then the
 

00:18:51.800 --> 00:18:53.800
to rotate the phone and then the
activity is destroyed luckily we don't

00:18:53.800 --> 00:18:53.810
activity is destroyed luckily we don't
 

00:18:53.810 --> 00:18:56.260
activity is destroyed luckily we don't
leak it which is great but then the new

00:18:56.260 --> 00:18:56.270
leak it which is great but then the new
 

00:18:56.270 --> 00:18:58.420
leak it which is great but then the new
activities fast which makes the name

00:18:58.420 --> 00:18:58.430
activities fast which makes the name
 

00:18:58.430 --> 00:19:02.290
activities fast which makes the name
call now this is okay but not great what

00:19:02.290 --> 00:19:02.300
call now this is okay but not great what
 

00:19:02.300 --> 00:19:04.720
call now this is okay but not great what
do we want we want to actually retain

00:19:04.720 --> 00:19:04.730
do we want we want to actually retain
 

00:19:04.730 --> 00:19:06.550
do we want we want to actually retain
the data right we're already making that

00:19:06.550 --> 00:19:06.560
the data right we're already making that
 

00:19:06.560 --> 00:19:07.240
the data right we're already making that
request

00:19:07.240 --> 00:19:07.250
request
 

00:19:07.250 --> 00:19:11.440
request
why we make it so we want our graph to

00:19:11.440 --> 00:19:11.450
why we make it so we want our graph to
 

00:19:11.450 --> 00:19:13.900
why we make it so we want our graph to
look like this so if the live activity

00:19:13.900 --> 00:19:13.910
look like this so if the live activity
 

00:19:13.910 --> 00:19:15.460
look like this so if the live activity
comes we should be able to give it like

00:19:15.460 --> 00:19:15.470
comes we should be able to give it like
 

00:19:15.470 --> 00:19:16.680
comes we should be able to give it like
the same v-model

00:19:16.680 --> 00:19:16.690
the same v-model
 

00:19:16.690 --> 00:19:19.750
the same v-model
which is a new class called v-model

00:19:19.750 --> 00:19:19.760
which is a new class called v-model
 

00:19:19.760 --> 00:19:22.420
which is a new class called v-model
so we are introducing this new cost very

00:19:22.420 --> 00:19:22.430
so we are introducing this new cost very
 

00:19:22.430 --> 00:19:24.040
so we are introducing this new cost very
specific to this thing where you

00:19:24.040 --> 00:19:24.050
specific to this thing where you
 

00:19:24.050 --> 00:19:27.400
specific to this thing where you
put two data inside your activities into

00:19:27.400 --> 00:19:27.410
put two data inside your activities into
 

00:19:27.410 --> 00:19:28.060
put two data inside your activities into
the v-model

00:19:28.060 --> 00:19:28.070
the v-model
 

00:19:28.070 --> 00:19:31.000
the v-model
and make the activities data free so if

00:19:31.000 --> 00:19:31.010
and make the activities data free so if
 

00:19:31.010 --> 00:19:33.190
and make the activities data free so if
you want to change this activity we

00:19:33.190 --> 00:19:33.200
you want to change this activity we
 

00:19:33.200 --> 00:19:35.200
you want to change this activity we
create this new class it takes times the

00:19:35.200 --> 00:19:35.210
create this new class it takes times the
 

00:19:35.210 --> 00:19:38.050
create this new class it takes times the
v-model class whatever data we have

00:19:38.050 --> 00:19:38.060
v-model class whatever data we have
 

00:19:38.060 --> 00:19:41.010
v-model class whatever data we have
inside the activity we move it there and

00:19:41.010 --> 00:19:41.020
inside the activity we move it there and
 

00:19:41.020 --> 00:19:44.320
inside the activity we move it there and
in the v-model all we do is inside to

00:19:44.320 --> 00:19:44.330
in the v-model all we do is inside to
 

00:19:44.330 --> 00:19:46.420
in the v-model all we do is inside to
get user method if this is the first

00:19:46.420 --> 00:19:46.430
get user method if this is the first
 

00:19:46.430 --> 00:19:48.100
get user method if this is the first
goal get it from the web service

00:19:48.100 --> 00:19:48.110
goal get it from the web service
 

00:19:48.110 --> 00:19:51.820
goal get it from the web service
otherwise return the existing value now

00:19:51.820 --> 00:19:51.830
otherwise return the existing value now
 

00:19:51.830 --> 00:19:54.100
otherwise return the existing value now
super simple and inside the reactivity

00:19:54.100 --> 00:19:54.110
super simple and inside the reactivity
 

00:19:54.110 --> 00:19:56.740
super simple and inside the reactivity
we get rid of all that code we say get

00:19:56.740 --> 00:19:56.750
we get rid of all that code we say get
 

00:19:56.750 --> 00:19:58.900
we get rid of all that code we say get
the v-model providers of this so each

00:19:58.900 --> 00:19:58.910
the v-model providers of this so each
 

00:19:58.910 --> 00:20:00.970
the v-model providers of this so each
activity or fragment has a we model

00:20:00.970 --> 00:20:00.980
activity or fragment has a we model
 

00:20:00.980 --> 00:20:03.400
activity or fragment has a we model
provider that you can obtain and that we

00:20:03.400 --> 00:20:03.410
provider that you can obtain and that we
 

00:20:03.410 --> 00:20:05.320
provider that you can obtain and that we
model provided knows how to give you the

00:20:05.320 --> 00:20:05.330
model provided knows how to give you the
 

00:20:05.330 --> 00:20:07.720
model provided knows how to give you the
we model so when you call get my view

00:20:07.720 --> 00:20:07.730
we model so when you call get my view
 

00:20:07.730 --> 00:20:10.060
we model so when you call get my view
model the very first time you make this

00:20:10.060 --> 00:20:10.070
model the very first time you make this
 

00:20:10.070 --> 00:20:11.590
model the very first time you make this
call we will give you a new instance

00:20:11.590 --> 00:20:11.600
call we will give you a new instance
 

00:20:11.600 --> 00:20:13.600
call we will give you a new instance
when the rotated activity comes back

00:20:13.600 --> 00:20:13.610
when the rotated activity comes back
 

00:20:13.610 --> 00:20:15.400
when the rotated activity comes back
it's going to reconnect to the same D

00:20:15.400 --> 00:20:15.410
it's going to reconnect to the same D
 

00:20:15.410 --> 00:20:17.890
it's going to reconnect to the same D
model and then the rest of the code is

00:20:17.890 --> 00:20:17.900
model and then the rest of the code is
 

00:20:17.900 --> 00:20:27.499
model and then the rest of the code is
the same

00:20:27.499 --> 00:20:27.509
 
 

00:20:27.509 --> 00:20:30.389
 
so if you look at the lifecycle this how

00:20:30.389 --> 00:20:30.399
so if you look at the lifecycle this how
 

00:20:30.399 --> 00:20:32.190
so if you look at the lifecycle this how
it looks this is what we wanted the new

00:20:32.190 --> 00:20:32.200
it looks this is what we wanted the new
 

00:20:32.200 --> 00:20:35.129
it looks this is what we wanted the new
activities started it reconnects and

00:20:35.129 --> 00:20:35.139
activities started it reconnects and
 

00:20:35.139 --> 00:20:38.159
activities started it reconnects and
when the new activity is finished like

00:20:38.159 --> 00:20:38.169
when the new activity is finished like
 

00:20:38.169 --> 00:20:39.450
when the new activity is finished like
when we don't have anything to do with

00:20:39.450 --> 00:20:39.460
when we don't have anything to do with
 

00:20:39.460 --> 00:20:41.940
when we don't have anything to do with
that activity and then we go and tell

00:20:41.940 --> 00:20:41.950
that activity and then we go and tell
 

00:20:41.950 --> 00:20:43.739
that activity and then we go and tell
the model that it's not needed anymore

00:20:43.739 --> 00:20:43.749
the model that it's not needed anymore
 

00:20:43.749 --> 00:20:46.139
the model that it's not needed anymore
this is actually the only method in the

00:20:46.139 --> 00:20:46.149
this is actually the only method in the
 

00:20:46.149 --> 00:20:49.739
this is actually the only method in the
v-model class so it's very simple so if

00:20:49.739 --> 00:20:49.749
v-model class so it's very simple so if
 

00:20:49.749 --> 00:20:51.989
v-model class so it's very simple so if
you look at life cycles they hold the

00:20:51.989 --> 00:20:51.999
you look at life cycles they hold the
 

00:20:51.999 --> 00:20:53.789
you look at life cycles they hold the
data for the activity they survived

00:20:53.789 --> 00:20:53.799
data for the activity they survived
 

00:20:53.799 --> 00:20:57.149
data for the activity they survived
configuration changes they should never

00:20:57.149 --> 00:20:57.159
configuration changes they should never
 

00:20:57.159 --> 00:20:59.340
configuration changes they should never
ever reference views because they

00:20:59.340 --> 00:20:59.350
ever reference views because they
 

00:20:59.350 --> 00:21:01.470
ever reference views because they
outlive the activity so you cannot

00:21:01.470 --> 00:21:01.480
outlive the activity so you cannot
 

00:21:01.480 --> 00:21:03.509
outlive the activity so you cannot
reference back to the activity that's

00:21:03.509 --> 00:21:03.519
reference back to the activity that's
 

00:21:03.519 --> 00:21:05.430
reference back to the activity that's
why you use things like live data or

00:21:05.430 --> 00:21:05.440
why you use things like live data or
 

00:21:05.440 --> 00:21:08.759
why you use things like live data or
extra data binding observables to the

00:21:08.759 --> 00:21:08.769
extra data binding observables to the
 

00:21:08.769 --> 00:21:11.310
extra data binding observables to the
dead communication and this is what our

00:21:11.310 --> 00:21:11.320
dead communication and this is what our
 

00:21:11.320 --> 00:21:13.259
dead communication and this is what our
activity talks it always talks every

00:21:13.259 --> 00:21:13.269
activity talks it always talks every
 

00:21:13.269 --> 00:21:17.629
activity talks it always talks every
model now another big topic is

00:21:17.629 --> 00:21:17.639
model now another big topic is
 

00:21:17.639 --> 00:21:20.669
model now another big topic is
persistence now we need to write a good

00:21:20.669 --> 00:21:20.679
persistence now we need to write a good
 

00:21:20.679 --> 00:21:22.619
persistence now we need to write a good
responsive Android app you need to save

00:21:22.619 --> 00:21:22.629
responsive Android app you need to save
 

00:21:22.629 --> 00:21:23.789
responsive Android app you need to save
the data on disk

00:21:23.789 --> 00:21:23.799
the data on disk
 

00:21:23.799 --> 00:21:26.159
the data on disk
if you come to Android there's these

00:21:26.159 --> 00:21:26.169
if you come to Android there's these
 

00:21:26.169 --> 00:21:28.200
if you come to Android there's these
three major api's we have one of them is

00:21:28.200 --> 00:21:28.210
three major api's we have one of them is
 

00:21:28.210 --> 00:21:31.169
three major api's we have one of them is
content providers which is to talk

00:21:31.169 --> 00:21:31.179
content providers which is to talk
 

00:21:31.179 --> 00:21:33.060
content providers which is to talk
between processes it really has nothing

00:21:33.060 --> 00:21:33.070
between processes it really has nothing
 

00:21:33.070 --> 00:21:35.549
between processes it really has nothing
to do with persistence in reality the

00:21:35.549 --> 00:21:35.559
to do with persistence in reality the
 

00:21:35.559 --> 00:21:37.590
to do with persistence in reality the
other one is shared preferences which

00:21:37.590 --> 00:21:37.600
other one is shared preferences which
 

00:21:37.600 --> 00:21:40.799
other one is shared preferences which
says the detain XML so you can only put

00:21:40.799 --> 00:21:40.809
says the detain XML so you can only put
 

00:21:40.809 --> 00:21:43.440
says the detain XML so you can only put
very little data into that and the last

00:21:43.440 --> 00:21:43.450
very little data into that and the last
 

00:21:43.450 --> 00:21:45.419
very little data into that and the last
one is SQLite which is something maybe

00:21:45.419 --> 00:21:45.429
one is SQLite which is something maybe
 

00:21:45.429 --> 00:21:48.419
one is SQLite which is something maybe
shipping since Android one so you know

00:21:48.419 --> 00:21:48.429
shipping since Android one so you know
 

00:21:48.429 --> 00:21:50.100
shipping since Android one so you know
you need to use SQLite if you want to

00:21:50.100 --> 00:21:50.110
you need to use SQLite if you want to
 

00:21:50.110 --> 00:21:53.070
you need to use SQLite if you want to
say big data and so you go into the

00:21:53.070 --> 00:21:53.080
say big data and so you go into the
 

00:21:53.080 --> 00:21:55.529
say big data and so you go into the
developer Android comm this is the very

00:21:55.529 --> 00:21:55.539
developer Android comm this is the very
 

00:21:55.539 --> 00:21:58.529
developer Android comm this is the very
first saving your data slide this this

00:21:58.529 --> 00:21:58.539
first saving your data slide this this
 

00:21:58.539 --> 00:22:03.570
first saving your data slide this this
is so confusing this is very sad so is

00:22:03.570 --> 00:22:03.580
is so confusing this is very sad so is
 

00:22:03.580 --> 00:22:05.999
is so confusing this is very sad so is
it okay we want to make this that set

00:22:05.999 --> 00:22:06.009
it okay we want to make this that set
 

00:22:06.009 --> 00:22:08.460
it okay we want to make this that set
you want to make it happy so we look at

00:22:08.460 --> 00:22:08.470
you want to make it happy so we look at
 

00:22:08.470 --> 00:22:10.950
you want to make it happy so we look at
the example right so there's on top it

00:22:10.950 --> 00:22:10.960
the example right so there's on top it
 

00:22:10.960 --> 00:22:12.480
the example right so there's on top it
tries to say I want to select these

00:22:12.480 --> 00:22:12.490
tries to say I want to select these
 

00:22:12.490 --> 00:22:15.779
tries to say I want to select these
three columns with this constraint and I

00:22:15.779 --> 00:22:15.789
three columns with this constraint and I
 

00:22:15.789 --> 00:22:17.700
three columns with this constraint and I
want to order them like this it's

00:22:17.700 --> 00:22:17.710
want to order them like this it's
 

00:22:17.710 --> 00:22:20.759
want to order them like this it's
actually very very simple SQL query but

00:22:20.759 --> 00:22:20.769
actually very very simple SQL query but
 

00:22:20.769 --> 00:22:22.379
actually very very simple SQL query but
you need to write all this code plus

00:22:22.379 --> 00:22:22.389
you need to write all this code plus
 

00:22:22.389 --> 00:22:24.210
you need to write all this code plus
this code doesn't even show where you

00:22:24.210 --> 00:22:24.220
this code doesn't even show where you
 

00:22:24.220 --> 00:22:28.080
this code doesn't even show where you
define all those constants so what do we

00:22:28.080 --> 00:22:28.090
define all those constants so what do we
 

00:22:28.090 --> 00:22:30.509
define all those constants so what do we
really want we want to get rid of that

00:22:30.509 --> 00:22:30.519
really want we want to get rid of that
 

00:22:30.519 --> 00:22:32.369
really want we want to get rid of that
boilerplate free code when you're

00:22:32.369 --> 00:22:32.379
boilerplate free code when you're
 

00:22:32.379 --> 00:22:34.739
boilerplate free code when you're
writing Java if you make a typo in Java

00:22:34.739 --> 00:22:34.749
writing Java if you make a typo in Java
 

00:22:34.749 --> 00:22:36.930
writing Java if you make a typo in Java
it doesn't compile right we want the

00:22:36.930 --> 00:22:36.940
it doesn't compile right we want the
 

00:22:36.940 --> 00:22:38.280
it doesn't compile right we want the
same thing for a square

00:22:38.280 --> 00:22:38.290
same thing for a square
 

00:22:38.290 --> 00:22:40.830
same thing for a square
we still want to use SQLite because on

00:22:40.830 --> 00:22:40.840
we still want to use SQLite because on
 

00:22:40.840 --> 00:22:43.020
we still want to use SQLite because on
every single Android device is a proven

00:22:43.020 --> 00:22:43.030
every single Android device is a proven
 

00:22:43.030 --> 00:22:45.289
every single Android device is a proven
technology we know it works very well

00:22:45.289 --> 00:22:45.299
technology we know it works very well
 

00:22:45.299 --> 00:22:48.090
technology we know it works very well
but we want to compile time verification

00:22:48.090 --> 00:22:48.100
but we want to compile time verification
 

00:22:48.100 --> 00:22:50.010
but we want to compile time verification
so we don't want the boilerplate code we

00:22:50.010 --> 00:22:50.020
so we don't want the boilerplate code we
 

00:22:50.020 --> 00:22:52.680
so we don't want the boilerplate code we
want to compile time verification so is

00:22:52.680 --> 00:22:52.690
want to compile time verification so is
 

00:22:52.690 --> 00:22:55.799
want to compile time verification so is
it well we came up with room which is an

00:22:55.799 --> 00:22:55.809
it well we came up with room which is an
 

00:22:55.809 --> 00:23:06.030
it well we came up with room which is an
object mapping library for SQLite so if

00:23:06.030 --> 00:23:06.040
object mapping library for SQLite so if
 

00:23:06.040 --> 00:23:08.400
object mapping library for SQLite so if
you look at this query we said okay

00:23:08.400 --> 00:23:08.410
you look at this query we said okay
 

00:23:08.410 --> 00:23:10.650
you look at this query we said okay
let's move this query inside annotation

00:23:10.650 --> 00:23:10.660
let's move this query inside annotation
 

00:23:10.660 --> 00:23:13.110
let's move this query inside annotation
we like annotations and we have this

00:23:13.110 --> 00:23:13.120
we like annotations and we have this
 

00:23:13.120 --> 00:23:15.210
we like annotations and we have this
feed object which we want to save in the

00:23:15.210 --> 00:23:15.220
feed object which we want to save in the
 

00:23:15.220 --> 00:23:18.299
feed object which we want to save in the
database I want to put that query inside

00:23:18.299 --> 00:23:18.309
database I want to put that query inside
 

00:23:18.309 --> 00:23:19.890
database I want to put that query inside
an interface like you want to created

00:23:19.890 --> 00:23:19.900
an interface like you want to created
 

00:23:19.900 --> 00:23:23.130
an interface like you want to created
the feed dog doll stats or data access

00:23:23.130 --> 00:23:23.140
the feed dog doll stats or data access
 

00:23:23.140 --> 00:23:25.350
the feed dog doll stats or data access
object usually in database the best

00:23:25.350 --> 00:23:25.360
object usually in database the best
 

00:23:25.360 --> 00:23:27.690
object usually in database the best
practice to put your database access

00:23:27.690 --> 00:23:27.700
practice to put your database access
 

00:23:27.700 --> 00:23:30.060
practice to put your database access
into certain interfaces then we just

00:23:30.060 --> 00:23:30.070
into certain interfaces then we just
 

00:23:30.070 --> 00:23:32.880
into certain interfaces then we just
need to tell the room the Sirdar parent

00:23:32.880 --> 00:23:32.890
need to tell the room the Sirdar parent
 

00:23:32.890 --> 00:23:35.580
need to tell the room the Sirdar parent
is an entity and finally we had a

00:23:35.580 --> 00:23:35.590
is an entity and finally we had a
 

00:23:35.590 --> 00:23:38.400
is an entity and finally we had a
database class which says I have these

00:23:38.400 --> 00:23:38.410
database class which says I have these
 

00:23:38.410 --> 00:23:39.960
database class which says I have these
entities so you have multiple entities

00:23:39.960 --> 00:23:39.970
entities so you have multiple entities
 

00:23:39.970 --> 00:23:43.860
entities so you have multiple entities
and I have these data access objects as

00:23:43.860 --> 00:23:43.870
and I have these data access objects as
 

00:23:43.870 --> 00:23:46.320
and I have these data access objects as
if so them the soul you're right once

00:23:46.320 --> 00:23:46.330
if so them the soul you're right once
 

00:23:46.330 --> 00:23:47.580
if so them the soul you're right once
you write that you can get an

00:23:47.580 --> 00:23:47.590
you write that you can get an
 

00:23:47.590 --> 00:23:49.980
you write that you can get an
implementation of it from room is really

00:23:49.980 --> 00:23:49.990
implementation of it from room is really
 

00:23:49.990 --> 00:23:51.960
implementation of it from room is really
similar to how we use retrofit or dagger

00:23:51.960 --> 00:23:51.970
similar to how we use retrofit or dagger
 

00:23:51.970 --> 00:23:54.840
similar to how we use retrofit or dagger
you define the interfaces we provide the

00:23:54.840 --> 00:23:54.850
you define the interfaces we provide the
 

00:23:54.850 --> 00:23:58.080
you define the interfaces we provide the
implementation now once we know they

00:23:58.080 --> 00:23:58.090
implementation now once we know they
 

00:23:58.090 --> 00:24:00.750
implementation now once we know they
said oh well we can do these shortcut

00:24:00.750 --> 00:24:00.760
said oh well we can do these shortcut
 

00:24:00.760 --> 00:24:02.640
said oh well we can do these shortcut
methods like insert these items or

00:24:02.640 --> 00:24:02.650
methods like insert these items or
 

00:24:02.650 --> 00:24:05.310
methods like insert these items or
delete these items or update like a

00:24:05.310 --> 00:24:05.320
delete these items or update like a
 

00:24:05.320 --> 00:24:07.380
delete these items or update like a
bunch of shortcut methods you can place

00:24:07.380 --> 00:24:07.390
bunch of shortcut methods you can place
 

00:24:07.390 --> 00:24:09.450
bunch of shortcut methods you can place
multiple parameters as long as you can

00:24:09.450 --> 00:24:09.460
multiple parameters as long as you can
 

00:24:09.460 --> 00:24:11.580
multiple parameters as long as you can
read it and it makes sense you will

00:24:11.580 --> 00:24:11.590
read it and it makes sense you will
 

00:24:11.590 --> 00:24:15.120
read it and it makes sense you will
understand it but the most important

00:24:15.120 --> 00:24:15.130
understand it but the most important
 

00:24:15.130 --> 00:24:17.880
understand it but the most important
part of room is it understands your SQL

00:24:17.880 --> 00:24:17.890
part of room is it understands your SQL
 

00:24:17.890 --> 00:24:20.340
part of room is it understands your SQL
so the part like all those concepts I

00:24:20.340 --> 00:24:20.350
so the part like all those concepts I
 

00:24:20.350 --> 00:24:22.260
so the part like all those concepts I
mentioned we defined to get compile time

00:24:22.260 --> 00:24:22.270
mentioned we defined to get compile time
 

00:24:22.270 --> 00:24:25.140
mentioned we defined to get compile time
grantees room actually gives all of

00:24:25.140 --> 00:24:25.150
grantees room actually gives all of
 

00:24:25.150 --> 00:24:28.169
grantees room actually gives all of
these for free so when RUC's discrete is

00:24:28.169 --> 00:24:28.179
these for free so when RUC's discrete is
 

00:24:28.179 --> 00:24:29.909
these for free so when RUC's discrete is
okay you are receiving these three

00:24:29.909 --> 00:24:29.919
okay you are receiving these three
 

00:24:29.919 --> 00:24:33.360
okay you are receiving these three
columns from the stables where the title

00:24:33.360 --> 00:24:33.370
columns from the stables where the title
 

00:24:33.370 --> 00:24:35.250
columns from the stables where the title
looks like this keyword where is this

00:24:35.250 --> 00:24:35.260
looks like this keyword where is this
 

00:24:35.260 --> 00:24:37.350
looks like this keyword where is this
keyword coming from oh it's coming from

00:24:37.350 --> 00:24:37.360
keyword coming from oh it's coming from
 

00:24:37.360 --> 00:24:39.930
keyword coming from oh it's coming from
the function parameters makes us what

00:24:39.930 --> 00:24:39.940
the function parameters makes us what
 

00:24:39.940 --> 00:24:41.280
the function parameters makes us what
does it want to return it wants to

00:24:41.280 --> 00:24:41.290
does it want to return it wants to
 

00:24:41.290 --> 00:24:43.470
does it want to return it wants to
return a list of feeds and then room

00:24:43.470 --> 00:24:43.480
return a list of feeds and then room
 

00:24:43.480 --> 00:24:44.520
return a list of feeds and then room
goes and checks

00:24:44.520 --> 00:24:44.530
goes and checks
 

00:24:44.530 --> 00:24:47.880
goes and checks
does the columns return mesh the object

00:24:47.880 --> 00:24:47.890
does the columns return mesh the object
 

00:24:47.890 --> 00:24:49.919
does the columns return mesh the object
the user wants to return and once

00:24:49.919 --> 00:24:49.929
the user wants to return and once
 

00:24:49.929 --> 00:24:51.840
the user wants to return and once
they're equal stays okay

00:24:51.840 --> 00:24:51.850
they're equal stays okay
 

00:24:51.850 --> 00:24:54.390
they're equal stays okay
in generate this code you can never say

00:24:54.390 --> 00:24:54.400
in generate this code you can never say
 

00:24:54.400 --> 00:24:55.919
in generate this code you can never say
select star like you don't need to list

00:24:55.919 --> 00:24:55.929
select star like you don't need to list
 

00:24:55.929 --> 00:24:56.940
select star like you don't need to list
them room

00:24:56.940 --> 00:24:56.950
them room
 

00:24:56.950 --> 00:24:59.180
them room
I really really understand your query

00:24:59.180 --> 00:24:59.190
I really really understand your query
 

00:24:59.190 --> 00:25:01.740
I really really understand your query
you can never like join ten tables it

00:25:01.740 --> 00:25:01.750
you can never like join ten tables it
 

00:25:01.750 --> 00:25:04.919
you can never like join ten tables it
was to work but what if you made a typo

00:25:04.919 --> 00:25:04.929
was to work but what if you made a typo
 

00:25:04.929 --> 00:25:06.630
was to work but what if you made a typo
instead of saying three table you don't

00:25:06.630 --> 00:25:06.640
instead of saying three table you don't
 

00:25:06.640 --> 00:25:10.200
instead of saying three table you don't
feat now if this happens room is going

00:25:10.200 --> 00:25:10.210
feat now if this happens room is going
 

00:25:10.210 --> 00:25:12.990
feat now if this happens room is going
to give you an error at compile time so

00:25:12.990 --> 00:25:13.000
to give you an error at compile time so
 

00:25:13.000 --> 00:25:14.700
to give you an error at compile time so
it goes that and verifies your query

00:25:14.700 --> 00:25:14.710
it goes that and verifies your query
 

00:25:14.710 --> 00:25:16.740
it goes that and verifies your query
against the schema you have defined and

00:25:16.740 --> 00:25:16.750
against the schema you have defined and
 

00:25:16.750 --> 00:25:20.380
against the schema you have defined and
it tells you if something is wrong but

00:25:20.380 --> 00:25:20.390
it tells you if something is wrong but
 

00:25:20.390 --> 00:25:27.169
it tells you if something is wrong but
[Applause]

00:25:27.169 --> 00:25:27.179
 
 

00:25:27.179 --> 00:25:29.610
 
it's not the only thing it does so if

00:25:29.610 --> 00:25:29.620
it's not the only thing it does so if
 

00:25:29.620 --> 00:25:32.220
it's not the only thing it does so if
you say if your query is correct you

00:25:32.220 --> 00:25:32.230
you say if your query is correct you
 

00:25:32.230 --> 00:25:34.560
you say if your query is correct you
want to fetch ID and title this develops

00:25:34.560 --> 00:25:34.570
want to fetch ID and title this develops
 

00:25:34.570 --> 00:25:36.690
want to fetch ID and title this develops
query but you want to return it as a

00:25:36.690 --> 00:25:36.700
query but you want to return it as a
 

00:25:36.700 --> 00:25:38.789
query but you want to return it as a
string and the rule says while you are

00:25:38.789 --> 00:25:38.799
string and the rule says while you are
 

00:25:38.799 --> 00:25:40.350
string and the rule says while you are
returning two columns

00:25:40.350 --> 00:25:40.360
returning two columns
 

00:25:40.360 --> 00:25:42.270
returning two columns
but you only have one string that

00:25:42.270 --> 00:25:42.280
but you only have one string that
 

00:25:42.280 --> 00:25:43.680
but you only have one string that
doesn't make sense and it's going to

00:25:43.680 --> 00:25:43.690
doesn't make sense and it's going to
 

00:25:43.690 --> 00:25:47.250
doesn't make sense and it's going to
give you a compile time Aragon and if

00:25:47.250 --> 00:25:47.260
give you a compile time Aragon and if
 

00:25:47.260 --> 00:25:49.020
give you a compile time Aragon and if
they're very nicely to fix the same room

00:25:49.020 --> 00:25:49.030
they're very nicely to fix the same room
 

00:25:49.030 --> 00:25:51.029
they're very nicely to fix the same room
you can basically create any Java class

00:25:51.029 --> 00:25:51.039
you can basically create any Java class
 

00:25:51.039 --> 00:25:52.680
you can basically create any Java class
it doesn't need to be annotating there's

00:25:52.680 --> 00:25:52.690
it doesn't need to be annotating there's
 

00:25:52.690 --> 00:25:55.500
it doesn't need to be annotating there's
nothing special about that POJO and tell

00:25:55.500 --> 00:25:55.510
nothing special about that POJO and tell
 

00:25:55.510 --> 00:25:57.510
nothing special about that POJO and tell
the room to return it as long as

00:25:57.510 --> 00:25:57.520
the room to return it as long as
 

00:25:57.520 --> 00:26:00.539
the room to return it as long as
whatever query returns matches what you

00:26:00.539 --> 00:26:00.549
whatever query returns matches what you
 

00:26:00.549 --> 00:26:02.490
whatever query returns matches what you
wanted to return wrong we'll write the

00:26:02.490 --> 00:26:02.500
wanted to return wrong we'll write the
 

00:26:02.500 --> 00:26:06.630
wanted to return wrong we'll write the
code for you and also root which is very

00:26:06.630 --> 00:26:06.640
code for you and also root which is very
 

00:26:06.640 --> 00:26:08.250
code for you and also root which is very
important right if you have a query like

00:26:08.250 --> 00:26:08.260
important right if you have a query like
 

00:26:08.260 --> 00:26:10.320
important right if you have a query like
this now you're showing list of feeds

00:26:10.320 --> 00:26:10.330
this now you're showing list of feeds
 

00:26:10.330 --> 00:26:12.899
this now you're showing list of feeds
you always want to get notified when the

00:26:12.899 --> 00:26:12.909
you always want to get notified when the
 

00:26:12.909 --> 00:26:16.260
you always want to get notified when the
data changes and in room if you have to

00:26:16.260 --> 00:26:16.270
data changes and in room if you have to
 

00:26:16.270 --> 00:26:19.350
data changes and in room if you have to
do this all you have to do tell it tell

00:26:19.350 --> 00:26:19.360
do this all you have to do tell it tell
 

00:26:19.360 --> 00:26:21.720
do this all you have to do tell it tell
it to return a light data it will do it

00:26:21.720 --> 00:26:21.730
it to return a light data it will do it
 

00:26:21.730 --> 00:26:24.360
it to return a light data it will do it
for you because it knows your query it

00:26:24.360 --> 00:26:24.370
for you because it knows your query it
 

00:26:24.370 --> 00:26:27.210
for you because it knows your query it
knows what things affect it so it can

00:26:27.210 --> 00:26:27.220
knows what things affect it so it can
 

00:26:27.220 --> 00:26:29.250
knows what things affect it so it can
let you know if that code changes and

00:26:29.250 --> 00:26:29.260
let you know if that code changes and
 

00:26:29.260 --> 00:26:31.020
let you know if that code changes and
this is the part where all these

00:26:31.020 --> 00:26:31.030
this is the part where all these
 

00:26:31.030 --> 00:26:32.640
this is the part where all these
architectural components work well

00:26:32.640 --> 00:26:32.650
architectural components work well
 

00:26:32.650 --> 00:26:34.980
architectural components work well
together room already knows about live

00:26:34.980 --> 00:26:34.990
together room already knows about live
 

00:26:34.990 --> 00:26:38.549
together room already knows about live
data so your me models all you would

00:26:38.549 --> 00:26:38.559
data so your me models all you would
 

00:26:38.559 --> 00:26:40.680
data so your me models all you would
write is from the data is called this

00:26:40.680 --> 00:26:40.690
write is from the data is called this
 

00:26:40.690 --> 00:26:42.810
write is from the data is called this
query and this only will do whenever

00:26:42.810 --> 00:26:42.820
query and this only will do whenever
 

00:26:42.820 --> 00:26:45.419
query and this only will do whenever
they taste changes your UI will get any

00:26:45.419 --> 00:26:45.429
they taste changes your UI will get any
 

00:26:45.429 --> 00:26:48.060
they taste changes your UI will get any
updates and it only happens if the UI is

00:26:48.060 --> 00:26:48.070
updates and it only happens if the UI is
 

00:26:48.070 --> 00:26:50.880
updates and it only happens if the UI is
visible last but not least room also

00:26:50.880 --> 00:26:50.890
visible last but not least room also
 

00:26:50.890 --> 00:26:53.700
visible last but not least room also
suppose X Java to

00:26:53.700 --> 00:26:53.710
suppose X Java to
 

00:26:53.710 --> 00:27:01.370
suppose X Java to
[Applause]

00:27:01.370 --> 00:27:01.380
 
 

00:27:01.380 --> 00:27:03.420
 
okay if you look at the room in a

00:27:03.420 --> 00:27:03.430
okay if you look at the room in a
 

00:27:03.430 --> 00:27:05.640
okay if you look at the room in a
nutshell it writes the boilerplate code

00:27:05.640 --> 00:27:05.650
nutshell it writes the boilerplate code
 

00:27:05.650 --> 00:27:08.070
nutshell it writes the boilerplate code
for you it has full SQLite support you

00:27:08.070 --> 00:27:08.080
for you it has full SQLite support you
 

00:27:08.080 --> 00:27:09.990
for you it has full SQLite support you
can just write in SQLite there is no

00:27:09.990 --> 00:27:10.000
can just write in SQLite there is no
 

00:27:10.000 --> 00:27:12.420
can just write in SQLite there is no
builders it verifies your queries at

00:27:12.420 --> 00:27:12.430
builders it verifies your queries at
 

00:27:12.430 --> 00:27:15.180
builders it verifies your queries at
compile time it is centralizes best

00:27:15.180 --> 00:27:15.190
compile time it is centralizes best
 

00:27:15.190 --> 00:27:18.240
compile time it is centralizes best
practices which helps you with testing

00:27:18.240 --> 00:27:18.250
practices which helps you with testing
 

00:27:18.250 --> 00:27:20.610
practices which helps you with testing
migrations and it's also observable

00:27:20.610 --> 00:27:20.620
migrations and it's also observable
 

00:27:20.620 --> 00:27:24.480
migrations and it's also observable
out-of-the-box okay like pictures our

00:27:24.480 --> 00:27:24.490
out-of-the-box okay like pictures our
 

00:27:24.490 --> 00:27:29.100
out-of-the-box okay like pictures our
last topic today so we restarted right

00:27:29.100 --> 00:27:29.110
last topic today so we restarted right
 

00:27:29.110 --> 00:27:31.380
last topic today so we restarted right
and now you might be asking yourselves

00:27:31.380 --> 00:27:31.390
and now you might be asking yourselves
 

00:27:31.390 --> 00:27:34.350
and now you might be asking yourselves
what has changed in 2017 that you are

00:27:34.350 --> 00:27:34.360
what has changed in 2017 that you are
 

00:27:34.360 --> 00:27:37.320
what has changed in 2017 that you are
talking about architecture well actually

00:27:37.320 --> 00:27:37.330
talking about architecture well actually
 

00:27:37.330 --> 00:27:39.270
talking about architecture well actually
nothing has changed we've been talking

00:27:39.270 --> 00:27:39.280
nothing has changed we've been talking
 

00:27:39.280 --> 00:27:41.460
nothing has changed we've been talking
about this topic a like Adam Powell and

00:27:41.460 --> 00:27:41.470
about this topic a like Adam Powell and
 

00:27:41.470 --> 00:27:43.550
about this topic a like Adam Powell and
I gave a lot of talks on this topic

00:27:43.550 --> 00:27:43.560
I gave a lot of talks on this topic
 

00:27:43.560 --> 00:27:47.010
I gave a lot of talks on this topic
there is even a talk from 2010 which I

00:27:47.010 --> 00:27:47.020
there is even a talk from 2010 which I
 

00:27:47.020 --> 00:27:49.800
there is even a talk from 2010 which I
watch as a developer so this is a topic

00:27:49.800 --> 00:27:49.810
watch as a developer so this is a topic
 

00:27:49.810 --> 00:27:52.140
watch as a developer so this is a topic
we have been vocal about but what is

00:27:52.140 --> 00:27:52.150
we have been vocal about but what is
 

00:27:52.150 --> 00:27:54.570
we have been vocal about but what is
missing was a well-defined reference

00:27:54.570 --> 00:27:54.580
missing was a well-defined reference
 

00:27:54.580 --> 00:27:56.670
missing was a well-defined reference
architecture so it's what we are

00:27:56.670 --> 00:27:56.680
architecture so it's what we are
 

00:27:56.680 --> 00:27:58.440
architecture so it's what we are
shipping today if you go to the aprender

00:27:58.440 --> 00:27:58.450
shipping today if you go to the aprender
 

00:27:58.450 --> 00:28:00.900
shipping today if you go to the aprender
it come to the after session there is a

00:28:00.900 --> 00:28:00.910
it come to the after session there is a
 

00:28:00.910 --> 00:28:03.180
it come to the after session there is a
section about how to architect an

00:28:03.180 --> 00:28:03.190
section about how to architect an
 

00:28:03.190 --> 00:28:12.680
section about how to architect an
Android application

00:28:12.680 --> 00:28:12.690
 
 

00:28:12.690 --> 00:28:15.479
 
so I by the way this is a reference

00:28:15.479 --> 00:28:15.489
so I by the way this is a reference
 

00:28:15.489 --> 00:28:17.820
so I by the way this is a reference
guide this is not your religious book we

00:28:17.820 --> 00:28:17.830
guide this is not your religious book we
 

00:28:17.830 --> 00:28:19.619
guide this is not your religious book we
believe this is a very good way to write

00:28:19.619 --> 00:28:19.629
believe this is a very good way to write
 

00:28:19.629 --> 00:28:21.060
believe this is a very good way to write
applications but you don't need to

00:28:21.060 --> 00:28:21.070
applications but you don't need to
 

00:28:21.070 --> 00:28:25.379
applications but you don't need to
follow it line by line so I'm going to

00:28:25.379 --> 00:28:25.389
follow it line by line so I'm going to
 

00:28:25.389 --> 00:28:27.479
follow it line by line so I'm going to
briefly go through this architecture but

00:28:27.479 --> 00:28:27.489
briefly go through this architecture but
 

00:28:27.489 --> 00:28:29.279
briefly go through this architecture but
if you get lost don't worry we have all

00:28:29.279 --> 00:28:29.289
if you get lost don't worry we have all
 

00:28:29.289 --> 00:28:31.769
if you get lost don't worry we have all
of this documented on the aprender it's

00:28:31.769 --> 00:28:31.779
of this documented on the aprender it's
 

00:28:31.779 --> 00:28:34.499
of this documented on the aprender it's
come with sample applications so we

00:28:34.499 --> 00:28:34.509
come with sample applications so we
 

00:28:34.509 --> 00:28:36.389
come with sample applications so we
think that applications composed of four

00:28:36.389 --> 00:28:36.399
think that applications composed of four
 

00:28:36.399 --> 00:28:37.080
think that applications composed of four
main things

00:28:37.080 --> 00:28:37.090
main things
 

00:28:37.090 --> 00:28:39.210
main things
there's your eye controllers the Wii

00:28:39.210 --> 00:28:39.220
there's your eye controllers the Wii
 

00:28:39.220 --> 00:28:42.060
there's your eye controllers the Wii
models and upholstery and the data

00:28:42.060 --> 00:28:42.070
models and upholstery and the data
 

00:28:42.070 --> 00:28:44.659
models and upholstery and the data
sources let's look at these in detail

00:28:44.659 --> 00:28:44.669
sources let's look at these in detail
 

00:28:44.669 --> 00:28:47.479
sources let's look at these in detail
your eye controllers are your activities

00:28:47.479 --> 00:28:47.489
your eye controllers are your activities
 

00:28:47.489 --> 00:28:51.599
your eye controllers are your activities
fragments custom use they have very

00:28:51.599 --> 00:28:51.609
fragments custom use they have very
 

00:28:51.609 --> 00:28:53.970
fragments custom use they have very
simple tasks they observe the fields of

00:28:53.970 --> 00:28:53.980
simple tasks they observe the fields of
 

00:28:53.980 --> 00:28:56.430
simple tasks they observe the fields of
the v-model and update themselves and

00:28:56.430 --> 00:28:56.440
the v-model and update themselves and
 

00:28:56.440 --> 00:28:58.349
the v-model and update themselves and
they have one more responsibility

00:28:58.349 --> 00:28:58.359
they have one more responsibility
 

00:28:58.359 --> 00:29:00.810
they have one more responsibility
whenever user takes an action on the UI

00:29:00.810 --> 00:29:00.820
whenever user takes an action on the UI
 

00:29:00.820 --> 00:29:03.690
whenever user takes an action on the UI
they understand detection and call the V

00:29:03.690 --> 00:29:03.700
they understand detection and call the V
 

00:29:03.700 --> 00:29:05.970
they understand detection and call the V
models so experts whatever the user

00:29:05.970 --> 00:29:05.980
models so experts whatever the user
 

00:29:05.980 --> 00:29:09.810
models so experts whatever the user
wanted to do if you go to a we model the

00:29:09.810 --> 00:29:09.820
wanted to do if you go to a we model the
 

00:29:09.820 --> 00:29:12.419
wanted to do if you go to a we model the
model is the one which prepares the data

00:29:12.419 --> 00:29:12.429
model is the one which prepares the data
 

00:29:12.429 --> 00:29:14.849
model is the one which prepares the data
for the eye and horizontal this is very

00:29:14.849 --> 00:29:14.859
for the eye and horizontal this is very
 

00:29:14.859 --> 00:29:17.729
for the eye and horizontal this is very
data for the UI lives B model knows how

00:29:17.729 --> 00:29:17.739
data for the UI lives B model knows how
 

00:29:17.739 --> 00:29:19.399
data for the UI lives B model knows how
to get that beta

00:29:19.399 --> 00:29:19.409
to get that beta
 

00:29:19.409 --> 00:29:22.080
to get that beta
usually it has like live data if you're

00:29:22.080 --> 00:29:22.090
usually it has like live data if you're
 

00:29:22.090 --> 00:29:24.029
usually it has like live data if you're
using accelerators observable or data

00:29:24.029 --> 00:29:24.039
using accelerators observable or data
 

00:29:24.039 --> 00:29:27.450
using accelerators observable or data
binding observables it survives

00:29:27.450 --> 00:29:27.460
binding observables it survives
 

00:29:27.460 --> 00:29:29.190
binding observables it survives
configuration changes they survive where

00:29:29.190 --> 00:29:29.200
configuration changes they survive where
 

00:29:29.200 --> 00:29:31.580
configuration changes they survive where
we put the data into the V models and

00:29:31.580 --> 00:29:31.590
we put the data into the V models and
 

00:29:31.590 --> 00:29:33.989
we put the data into the V models and
it's also the gateway you can also

00:29:33.989 --> 00:29:33.999
it's also the gateway you can also
 

00:29:33.999 --> 00:29:36.659
it's also the gateway you can also
consider it as your UI controller only

00:29:36.659 --> 00:29:36.669
consider it as your UI controller only
 

00:29:36.669 --> 00:29:38.310
consider it as your UI controller only
ever talks to the v-model

00:29:38.310 --> 00:29:38.320
ever talks to the v-model
 

00:29:38.320 --> 00:29:40.669
ever talks to the v-model
to reach to the rest of the application

00:29:40.669 --> 00:29:40.679
to reach to the rest of the application
 

00:29:40.679 --> 00:29:45.119
to reach to the rest of the application
and I was the repository now the remodel

00:29:45.119 --> 00:29:45.129
and I was the repository now the remodel
 

00:29:45.129 --> 00:29:47.669
and I was the repository now the remodel
serves as a data store for your UI

00:29:47.669 --> 00:29:47.679
serves as a data store for your UI
 

00:29:47.679 --> 00:29:50.129
serves as a data store for your UI
control the right repository says is the

00:29:50.129 --> 00:29:50.139
control the right repository says is the
 

00:29:50.139 --> 00:29:52.379
control the right repository says is the
data store for all of your applications

00:29:52.379 --> 00:29:52.389
data store for all of your applications
 

00:29:52.389 --> 00:29:55.470
data store for all of your applications
so it's the complete data model for the

00:29:55.470 --> 00:29:55.480
so it's the complete data model for the
 

00:29:55.480 --> 00:29:57.450
so it's the complete data model for the
app and it provides this data with

00:29:57.450 --> 00:29:57.460
app and it provides this data with
 

00:29:57.460 --> 00:29:59.099
app and it provides this data with
simple API to the rest of the

00:29:59.099 --> 00:29:59.109
simple API to the rest of the
 

00:29:59.109 --> 00:30:01.019
simple API to the rest of the
application like you can never use the

00:30:01.019 --> 00:30:01.029
application like you can never use the
 

00:30:01.029 --> 00:30:03.149
application like you can never use the
repository where you pass a user ID and

00:30:03.149 --> 00:30:03.159
repository where you pass a user ID and
 

00:30:03.159 --> 00:30:06.090
repository where you pass a user ID and
it returns your live data of users how

00:30:06.090 --> 00:30:06.100
it returns your live data of users how
 

00:30:06.100 --> 00:30:08.430
it returns your live data of users how
it gets the data you don't care it's

00:30:08.430 --> 00:30:08.440
it gets the data you don't care it's
 

00:30:08.440 --> 00:30:11.099
it gets the data you don't care it's
preposterous job so how does it do that

00:30:11.099 --> 00:30:11.109
preposterous job so how does it do that
 

00:30:11.109 --> 00:30:13.499
preposterous job so how does it do that
it talks to the like fetching thinking

00:30:13.499 --> 00:30:13.509
it talks to the like fetching thinking
 

00:30:13.509 --> 00:30:16.409
it talks to the like fetching thinking
take a looking at database we're talking

00:30:16.409 --> 00:30:16.419
take a looking at database we're talking
 

00:30:16.419 --> 00:30:18.210
take a looking at database we're talking
to your retrofit back end is the

00:30:18.210 --> 00:30:18.220
to your retrofit back end is the
 

00:30:18.220 --> 00:30:21.570
to your retrofit back end is the
repositories job and last but not least

00:30:21.570 --> 00:30:21.580
repositories job and last but not least
 

00:30:21.580 --> 00:30:24.029
repositories job and last but not least
we have our data sources like your lace

00:30:24.029 --> 00:30:24.039
we have our data sources like your lace
 

00:30:24.039 --> 00:30:25.440
we have our data sources like your lace
API client you might be

00:30:25.440 --> 00:30:25.450
API client you might be
 

00:30:25.450 --> 00:30:27.899
API client you might be
using retrofit or you have SQLite

00:30:27.899 --> 00:30:27.909
using retrofit or you have SQLite
 

00:30:27.909 --> 00:30:29.850
using retrofit or you have SQLite
storage you might be using room or you

00:30:29.850 --> 00:30:29.860
storage you might be using room or you
 

00:30:29.860 --> 00:30:31.259
storage you might be using room or you
might be using that doesn't really

00:30:31.259 --> 00:30:31.269
might be using that doesn't really
 

00:30:31.269 --> 00:30:33.659
might be using that doesn't really
matter or you might be talking to other

00:30:33.659 --> 00:30:33.669
matter or you might be talking to other
 

00:30:33.669 --> 00:30:35.909
matter or you might be talking to other
content providers from other processes

00:30:35.909 --> 00:30:35.919
content providers from other processes
 

00:30:35.919 --> 00:30:38.090
content providers from other processes
these are things we call data sources

00:30:38.090 --> 00:30:38.100
these are things we call data sources
 

00:30:38.100 --> 00:30:41.000
these are things we call data sources
and we think that all of these layers

00:30:41.000 --> 00:30:41.010
and we think that all of these layers
 

00:30:41.010 --> 00:30:43.710
and we think that all of these layers
can discover each other to read

00:30:43.710 --> 00:30:43.720
can discover each other to read
 

00:30:43.720 --> 00:30:45.720
can discover each other to read
dependency injection system which will

00:30:45.720 --> 00:30:45.730
dependency injection system which will
 

00:30:45.730 --> 00:30:47.730
dependency injection system which will
recommend using dagger but we also

00:30:47.730 --> 00:30:47.740
recommend using dagger but we also
 

00:30:47.740 --> 00:30:49.769
recommend using dagger but we also
realize that understanding dependence

00:30:49.769 --> 00:30:49.779
realize that understanding dependence
 

00:30:49.779 --> 00:30:51.870
realize that understanding dependence
situation is not very trivial like it's

00:30:51.870 --> 00:30:51.880
situation is not very trivial like it's
 

00:30:51.880 --> 00:30:54.629
situation is not very trivial like it's
a more complex topic and sometimes might

00:30:54.629 --> 00:30:54.639
a more complex topic and sometimes might
 

00:30:54.639 --> 00:30:57.120
a more complex topic and sometimes might
be an overkill I can also use a service

00:30:57.120 --> 00:30:57.130
be an overkill I can also use a service
 

00:30:57.130 --> 00:30:58.590
be an overkill I can also use a service
locator if you feel more comfortable

00:30:58.590 --> 00:30:58.600
locator if you feel more comfortable
 

00:30:58.600 --> 00:31:04.500
locator if you feel more comfortable
with it so it's going to go through a

00:31:04.500 --> 00:31:04.510
with it so it's going to go through a
 

00:31:04.510 --> 00:31:07.500
with it so it's going to go through a
concrete example let's say we have a UI

00:31:07.500 --> 00:31:07.510
concrete example let's say we have a UI
 

00:31:07.510 --> 00:31:10.529
concrete example let's say we have a UI
that shows a user profile and we have

00:31:10.529 --> 00:31:10.539
that shows a user profile and we have
 

00:31:10.539 --> 00:31:12.930
that shows a user profile and we have
the data sources which like we save it

00:31:12.930 --> 00:31:12.940
the data sources which like we save it
 

00:31:12.940 --> 00:31:15.149
the data sources which like we save it
to database we also can get it from the

00:31:15.149 --> 00:31:15.159
to database we also can get it from the
 

00:31:15.159 --> 00:31:17.250
to database we also can get it from the
network how do we connect these two

00:31:17.250 --> 00:31:17.260
network how do we connect these two
 

00:31:17.260 --> 00:31:19.529
network how do we connect these two
things well we said you first need a

00:31:19.529 --> 00:31:19.539
things well we said you first need a
 

00:31:19.539 --> 00:31:22.259
things well we said you first need a
user repository use the repository knows

00:31:22.259 --> 00:31:22.269
user repository use the repository knows
 

00:31:22.269 --> 00:31:24.090
user repository use the repository knows
it should check the database it's not

00:31:24.090 --> 00:31:24.100
it should check the database it's not
 

00:31:24.100 --> 00:31:26.399
it should check the database it's not
there make a web request or meanwhile

00:31:26.399 --> 00:31:26.409
there make a web request or meanwhile
 

00:31:26.409 --> 00:31:28.889
there make a web request or meanwhile
also turn on the database it doesn't

00:31:28.889 --> 00:31:28.899
also turn on the database it doesn't
 

00:31:28.899 --> 00:31:31.440
also turn on the database it doesn't
matter how it does it but it knows how

00:31:31.440 --> 00:31:31.450
matter how it does it but it knows how
 

00:31:31.450 --> 00:31:34.070
matter how it does it but it knows how
to create a live date of a user or

00:31:34.070 --> 00:31:34.080
to create a live date of a user or
 

00:31:34.080 --> 00:31:37.200
to create a live date of a user or
unobservable doesn't know and then we

00:31:37.200 --> 00:31:37.210
unobservable doesn't know and then we
 

00:31:37.210 --> 00:31:39.060
unobservable doesn't know and then we
need to be mobile right because the data

00:31:39.060 --> 00:31:39.070
need to be mobile right because the data
 

00:31:39.070 --> 00:31:40.980
need to be mobile right because the data
for the UI lives in the v-model

00:31:40.980 --> 00:31:40.990
for the UI lives in the v-model
 

00:31:40.990 --> 00:31:44.310
for the UI lives in the v-model
so we create this profile v-model which

00:31:44.310 --> 00:31:44.320
so we create this profile v-model which
 

00:31:44.320 --> 00:31:46.620
so we create this profile v-model which
talks to the repository to get this

00:31:46.620 --> 00:31:46.630
talks to the repository to get this
 

00:31:46.630 --> 00:31:49.169
talks to the repository to get this
information and then the actual fragment

00:31:49.169 --> 00:31:49.179
information and then the actual fragment
 

00:31:49.179 --> 00:31:51.930
information and then the actual fragment
gets the data from the v-model so that

00:31:51.930 --> 00:31:51.940
gets the data from the v-model so that
 

00:31:51.940 --> 00:31:54.690
gets the data from the v-model so that
if the fragment comes back the light

00:31:54.690 --> 00:31:54.700
if the fragment comes back the light
 

00:31:54.700 --> 00:31:56.279
if the fragment comes back the light
data will be there in the profile

00:31:56.279 --> 00:31:56.289
data will be there in the profile
 

00:31:56.289 --> 00:31:58.769
data will be there in the profile
remodel but if the fragment disappears

00:31:58.769 --> 00:31:58.779
remodel but if the fragment disappears
 

00:31:58.779 --> 00:32:00.779
remodel but if the fragment disappears
completely we will get rid of the

00:32:00.779 --> 00:32:00.789
completely we will get rid of the
 

00:32:00.789 --> 00:32:02.669
completely we will get rid of the
remodel and the data can be garbage

00:32:02.669 --> 00:32:02.679
remodel and the data can be garbage
 

00:32:02.679 --> 00:32:04.279
remodel and the data can be garbage
collected

00:32:04.279 --> 00:32:04.289
collected
 

00:32:04.289 --> 00:32:07.230
collected
now all this abstraction we made if you

00:32:07.230 --> 00:32:07.240
now all this abstraction we made if you
 

00:32:07.240 --> 00:32:09.779
now all this abstraction we made if you
notice every single component only talks

00:32:09.779 --> 00:32:09.789
notice every single component only talks
 

00:32:09.789 --> 00:32:12.570
notice every single component only talks
to the one right below it which is how

00:32:12.570 --> 00:32:12.580
to the one right below it which is how
 

00:32:12.580 --> 00:32:15.000
to the one right below it which is how
to scale your application it also is a

00:32:15.000 --> 00:32:15.010
to scale your application it also is a
 

00:32:15.010 --> 00:32:16.889
to scale your application it also is a
great side benefit which is called

00:32:16.889 --> 00:32:16.899
great side benefit which is called
 

00:32:16.899 --> 00:32:23.570
great side benefit which is called
testing your testing right

00:32:23.570 --> 00:32:23.580
 
 

00:32:23.580 --> 00:32:25.920
 
so let's say you want to test your UI

00:32:25.920 --> 00:32:25.930
so let's say you want to test your UI
 

00:32:25.930 --> 00:32:28.020
so let's say you want to test your UI
now people say UI testing is hard UI

00:32:28.020 --> 00:32:28.030
now people say UI testing is hard UI
 

00:32:28.030 --> 00:32:31.080
now people say UI testing is hard UI
testing is yes is harder but it's

00:32:31.080 --> 00:32:31.090
testing is yes is harder but it's
 

00:32:31.090 --> 00:32:32.820
testing is yes is harder but it's
usually hard because you put all of your

00:32:32.820 --> 00:32:32.830
usually hard because you put all of your
 

00:32:32.830 --> 00:32:36.750
usually hard because you put all of your
code into that activity now we said put

00:32:36.750 --> 00:32:36.760
code into that activity now we said put
 

00:32:36.760 --> 00:32:39.180
code into that activity now we said put
most of it into the remodeled and united

00:32:39.180 --> 00:32:39.190
most of it into the remodeled and united
 

00:32:39.190 --> 00:32:41.100
most of it into the remodeled and united
the UI only talks to the v-model

00:32:41.100 --> 00:32:41.110
the UI only talks to the v-model
 

00:32:41.110 --> 00:32:43.500
the UI only talks to the v-model
so you can get rid of the other two you

00:32:43.500 --> 00:32:43.510
so you can get rid of the other two you
 

00:32:43.510 --> 00:32:46.020
so you can get rid of the other two you
only need to create a fake me model to

00:32:46.020 --> 00:32:46.030
only need to create a fake me model to
 

00:32:46.030 --> 00:32:48.330
only need to create a fake me model to
test your UID testing your you become

00:32:48.330 --> 00:32:48.340
test your UID testing your you become
 

00:32:48.340 --> 00:32:51.090
test your UID testing your you become
super super easy with espresso and we

00:32:51.090 --> 00:32:51.100
super super easy with espresso and we
 

00:32:51.100 --> 00:32:53.250
super super easy with espresso and we
have a sample app on github that you can

00:32:53.250 --> 00:32:53.260
have a sample app on github that you can
 

00:32:53.260 --> 00:32:56.760
have a sample app on github that you can
check how we test the UI and the same

00:32:56.760 --> 00:32:56.770
check how we test the UI and the same
 

00:32:56.770 --> 00:32:58.470
check how we test the UI and the same
thing is valid for remodels if you want

00:32:58.470 --> 00:32:58.480
thing is valid for remodels if you want
 

00:32:58.480 --> 00:32:59.520
thing is valid for remodels if you want
to test the v-model

00:32:59.520 --> 00:32:59.530
to test the v-model
 

00:32:59.530 --> 00:33:01.020
to test the v-model
you know it only talks to the

00:33:01.020 --> 00:33:01.030
you know it only talks to the
 

00:33:01.030 --> 00:33:03.390
you know it only talks to the
repositories you replace it with a mock

00:33:03.390 --> 00:33:03.400
repositories you replace it with a mock
 

00:33:03.400 --> 00:33:06.180
repositories you replace it with a mock
repository and it works and you can you

00:33:06.180 --> 00:33:06.190
repository and it works and you can you
 

00:33:06.190 --> 00:33:09.120
repository and it works and you can you
will test your remodels on your host

00:33:09.120 --> 00:33:09.130
will test your remodels on your host
 

00:33:09.130 --> 00:33:11.970
will test your remodels on your host
machine on JVM and last but not least

00:33:11.970 --> 00:33:11.980
machine on JVM and last but not least
 

00:33:11.980 --> 00:33:13.800
machine on JVM and last but not least
you can test the repository the same way

00:33:13.800 --> 00:33:13.810
you can test the repository the same way
 

00:33:13.810 --> 00:33:16.260
you can test the repository the same way
you just mock the data sources you can

00:33:16.260 --> 00:33:16.270
you just mock the data sources you can
 

00:33:16.270 --> 00:33:18.780
you just mock the data sources you can
either test your repositories SJ in a

00:33:18.780 --> 00:33:18.790
either test your repositories SJ in a
 

00:33:18.790 --> 00:33:22.290
either test your repositories SJ in a
test now I know these days being out of

00:33:22.290 --> 00:33:22.300
test now I know these days being out of
 

00:33:22.300 --> 00:33:23.820
test now I know these days being out of
information we have two sessions

00:33:23.820 --> 00:33:23.830
information we have two sessions
 

00:33:23.830 --> 00:33:26.610
information we have two sessions
tomorrow and also documentation but now

00:33:26.610 --> 00:33:26.620
tomorrow and also documentation but now
 

00:33:26.620 --> 00:33:29.010
tomorrow and also documentation but now
I want to call our product major Lucas

00:33:29.010 --> 00:33:29.020
I want to call our product major Lucas
 

00:33:29.020 --> 00:33:41.520
I want to call our product major Lucas
to talk about what to do next

00:33:41.520 --> 00:33:41.530
 
 

00:33:41.530 --> 00:33:43.800
 
like you said we just covered a lot of

00:33:43.800 --> 00:33:43.810
like you said we just covered a lot of
 

00:33:43.810 --> 00:33:46.110
like you said we just covered a lot of
ground and actually we glossed over a

00:33:46.110 --> 00:33:46.120
ground and actually we glossed over a
 

00:33:46.120 --> 00:33:48.150
ground and actually we glossed over a
lot of detail while we did that but

00:33:48.150 --> 00:33:48.160
lot of detail while we did that but
 

00:33:48.160 --> 00:33:49.770
lot of detail while we did that but
luckily you don't have to remember

00:33:49.770 --> 00:33:49.780
luckily you don't have to remember
 

00:33:49.780 --> 00:33:52.920
luckily you don't have to remember
everything that you just heard we have a

00:33:52.920 --> 00:33:52.930
everything that you just heard we have a
 

00:33:52.930 --> 00:33:56.190
everything that you just heard we have a
lot of material for you to check out at

00:33:56.190 --> 00:33:56.200
lot of material for you to check out at
 

00:33:56.200 --> 00:33:58.680
lot of material for you to check out at
developer.android.com slash arch and

00:33:58.680 --> 00:33:58.690
developer.android.com slash arch and
 

00:33:58.690 --> 00:34:02.820
developer.android.com slash arch and
that link should start working in 21

00:34:02.820 --> 00:34:02.830
that link should start working in 21
 

00:34:02.830 --> 00:34:06.810
that link should start working in 21
minutes we had so we wanted to give you

00:34:06.810 --> 00:34:06.820
minutes we had so we wanted to give you
 

00:34:06.820 --> 00:34:08.730
minutes we had so we wanted to give you
guys a chance to kind of blog and tweet

00:34:08.730 --> 00:34:08.740
guys a chance to kind of blog and tweet
 

00:34:08.740 --> 00:34:10.980
guys a chance to kind of blog and tweet
about this before anybody else so that's

00:34:10.980 --> 00:34:10.990
about this before anybody else so that's
 

00:34:10.990 --> 00:34:13.890
about this before anybody else so that's
why we held it back so yeah we made

00:34:13.890 --> 00:34:13.900
why we held it back so yeah we made
 

00:34:13.900 --> 00:34:16.050
why we held it back so yeah we made
having good documentation and samples a

00:34:16.050 --> 00:34:16.060
having good documentation and samples a
 

00:34:16.060 --> 00:34:17.310
having good documentation and samples a
priority from the beginning of this

00:34:17.310 --> 00:34:17.320
priority from the beginning of this
 

00:34:17.320 --> 00:34:19.560
priority from the beginning of this
project since you know providing good

00:34:19.560 --> 00:34:19.570
project since you know providing good
 

00:34:19.570 --> 00:34:21.060
project since you know providing good
guidance is really one of the major

00:34:21.060 --> 00:34:21.070
guidance is really one of the major
 

00:34:21.070 --> 00:34:23.520
guidance is really one of the major
goals so you're going to find in-depth

00:34:23.520 --> 00:34:23.530
goals so you're going to find in-depth
 

00:34:23.530 --> 00:34:25.200
goals so you're going to find in-depth
documentation that's written from the

00:34:25.200 --> 00:34:25.210
documentation that's written from the
 

00:34:25.210 --> 00:34:27.330
documentation that's written from the
perspective of an app developer you're

00:34:27.330 --> 00:34:27.340
perspective of an app developer you're
 

00:34:27.340 --> 00:34:29.130
perspective of an app developer you're
going to find really needy sample apps

00:34:29.130 --> 00:34:29.140
going to find really needy sample apps
 

00:34:29.140 --> 00:34:30.830
going to find really needy sample apps
that show how to build a real app and

00:34:30.830 --> 00:34:30.840
that show how to build a real app and
 

00:34:30.840 --> 00:34:33.600
that show how to build a real app and
just as an example of how much work went

00:34:33.600 --> 00:34:33.610
just as an example of how much work went
 

00:34:33.610 --> 00:34:35.310
just as an example of how much work went
into this we have a github browser

00:34:35.310 --> 00:34:35.320
into this we have a github browser
 

00:34:35.320 --> 00:34:37.650
into this we have a github browser
sample app that probably has better test

00:34:37.650 --> 00:34:37.660
sample app that probably has better test
 

00:34:37.660 --> 00:34:39.890
sample app that probably has better test
coverage than many real-world apps

00:34:39.890 --> 00:34:39.900
coverage than many real-world apps
 

00:34:39.900 --> 00:34:45.390
coverage than many real-world apps
written by that guy and and of course

00:34:45.390 --> 00:34:45.400
written by that guy and and of course
 

00:34:45.400 --> 00:34:47.070
written by that guy and and of course
we've had the guide to a parka texture

00:34:47.070 --> 00:34:47.080
we've had the guide to a parka texture
 

00:34:47.080 --> 00:34:49.350
we've had the guide to a parka texture
which internally we call the opinionated

00:34:49.350 --> 00:34:49.360
which internally we call the opinionated
 

00:34:49.360 --> 00:34:51.930
which internally we call the opinionated
guide for awhile and we think that label

00:34:51.930 --> 00:34:51.940
guide for awhile and we think that label
 

00:34:51.940 --> 00:34:53.910
guide for awhile and we think that label
still applies but even if you're not

00:34:53.910 --> 00:34:53.920
still applies but even if you're not
 

00:34:53.920 --> 00:34:55.440
still applies but even if you're not
planning to use our recommended

00:34:55.440 --> 00:34:55.450
planning to use our recommended
 

00:34:55.450 --> 00:34:57.630
planning to use our recommended
architecture we think people should

00:34:57.630 --> 00:34:57.640
architecture we think people should
 

00:34:57.640 --> 00:34:59.790
architecture we think people should
check out the guide it has principles

00:34:59.790 --> 00:34:59.800
check out the guide it has principles
 

00:34:59.800 --> 00:35:01.410
check out the guide it has principles
that we think apply to all apps on

00:35:01.410 --> 00:35:01.420
that we think apply to all apps on
 

00:35:01.420 --> 00:35:05.040
that we think apply to all apps on
Android and you're probably asking

00:35:05.040 --> 00:35:05.050
Android and you're probably asking
 

00:35:05.050 --> 00:35:08.400
Android and you're probably asking
yourself do I not you know what's the

00:35:08.400 --> 00:35:08.410
yourself do I not you know what's the
 

00:35:08.410 --> 00:35:09.930
yourself do I not you know what's the
impact of this going to be on me am I

00:35:09.930 --> 00:35:09.940
impact of this going to be on me am I
 

00:35:09.940 --> 00:35:11.130
impact of this going to be on me am I
going to have to kind of like change the

00:35:11.130 --> 00:35:11.140
going to have to kind of like change the
 

00:35:11.140 --> 00:35:13.260
going to have to kind of like change the
way that I'm doing everything you know

00:35:13.260 --> 00:35:13.270
way that I'm doing everything you know
 

00:35:13.270 --> 00:35:15.690
way that I'm doing everything you know
if you're starting a new project or if

00:35:15.690 --> 00:35:15.700
if you're starting a new project or if
 

00:35:15.700 --> 00:35:17.040
if you're starting a new project or if
you have an existing app that you want

00:35:17.040 --> 00:35:17.050
you have an existing app that you want
 

00:35:17.050 --> 00:35:19.230
you have an existing app that you want
to improve the core architecture then

00:35:19.230 --> 00:35:19.240
to improve the core architecture then
 

00:35:19.240 --> 00:35:20.880
to improve the core architecture then
yeah you know we recommend taking a look

00:35:20.880 --> 00:35:20.890
yeah you know we recommend taking a look
 

00:35:20.890 --> 00:35:24.180
yeah you know we recommend taking a look
at this stuff it's still preview we

00:35:24.180 --> 00:35:24.190
at this stuff it's still preview we
 

00:35:24.190 --> 00:35:26.040
at this stuff it's still preview we
won't be hitting 1.0 for a few months

00:35:26.040 --> 00:35:26.050
won't be hitting 1.0 for a few months
 

00:35:26.050 --> 00:35:29.010
won't be hitting 1.0 for a few months
but you know we think it's it's

00:35:29.010 --> 00:35:29.020
but you know we think it's it's
 

00:35:29.020 --> 00:35:30.300
but you know we think it's it's
definitely ready for you guys to check

00:35:30.300 --> 00:35:30.310
definitely ready for you guys to check
 

00:35:30.310 --> 00:35:33.300
definitely ready for you guys to check
out and use in projects but if you're

00:35:33.300 --> 00:35:33.310
out and use in projects but if you're
 

00:35:33.310 --> 00:35:34.530
out and use in projects but if you're
happy with what you have you don't need

00:35:34.530 --> 00:35:34.540
happy with what you have you don't need
 

00:35:34.540 --> 00:35:38.280
happy with what you have you don't need
to rewrite your app so in the spirit of

00:35:38.280 --> 00:35:38.290
to rewrite your app so in the spirit of
 

00:35:38.290 --> 00:35:39.600
to rewrite your app so in the spirit of
be together not the same we're not

00:35:39.600 --> 00:35:39.610
be together not the same we're not
 

00:35:39.610 --> 00:35:41.850
be together not the same we're not
dictating what everyone has to use if

00:35:41.850 --> 00:35:41.860
dictating what everyone has to use if
 

00:35:41.860 --> 00:35:43.140
dictating what everyone has to use if
you're happy with your app architecture

00:35:43.140 --> 00:35:43.150
you're happy with your app architecture
 

00:35:43.150 --> 00:35:45.060
you're happy with your app architecture
you can keep it if you're happy with

00:35:45.060 --> 00:35:45.070
you can keep it if you're happy with
 

00:35:45.070 --> 00:35:46.920
you can keep it if you're happy with
your existing or EMM you don't have to

00:35:46.920 --> 00:35:46.930
your existing or EMM you don't have to
 

00:35:46.930 --> 00:35:48.430
your existing or EMM you don't have to
use room

00:35:48.430 --> 00:35:48.440
use room
 

00:35:48.440 --> 00:35:50.410
use room
architecture components are designed to

00:35:50.410 --> 00:35:50.420
architecture components are designed to
 

00:35:50.420 --> 00:35:52.750
architecture components are designed to
work well together but they do work

00:35:52.750 --> 00:35:52.760
work well together but they do work
 

00:35:52.760 --> 00:35:56.920
work well together but they do work
perfectly fine standalone and mixing and

00:35:56.920 --> 00:35:56.930
perfectly fine standalone and mixing and
 

00:35:56.930 --> 00:35:58.319
perfectly fine standalone and mixing and
matching applies not only to

00:35:58.319 --> 00:35:58.329
matching applies not only to
 

00:35:58.329 --> 00:36:01.019
matching applies not only to
Architecture components but also

00:36:01.019 --> 00:36:01.029
Architecture components but also
 

00:36:01.029 --> 00:36:08.620
Architecture components but also
third-party libraries so waiting for

00:36:08.620 --> 00:36:08.630
third-party libraries so waiting for
 

00:36:08.630 --> 00:36:13.660
third-party libraries so waiting for
sled to come up so yeah so you can kind

00:36:13.660 --> 00:36:13.670
sled to come up so yeah so you can kind
 

00:36:13.670 --> 00:36:14.890
sled to come up so yeah so you can kind
of use what you have and to start to

00:36:14.890 --> 00:36:14.900
of use what you have and to start to
 

00:36:14.900 --> 00:36:16.630
of use what you have and to start to
integrate architecture components where

00:36:16.630 --> 00:36:16.640
integrate architecture components where
 

00:36:16.640 --> 00:36:19.150
integrate architecture components where
they make sense so for example if you're

00:36:19.150 --> 00:36:19.160
they make sense so for example if you're
 

00:36:19.160 --> 00:36:21.609
they make sense so for example if you're
happy with our X Java but you really

00:36:21.609 --> 00:36:21.619
happy with our X Java but you really
 

00:36:21.619 --> 00:36:23.529
happy with our X Java but you really
like the life cycle aware components

00:36:23.529 --> 00:36:23.539
like the life cycle aware components
 

00:36:23.539 --> 00:36:26.109
like the life cycle aware components
stuff they eat just showed so you have

00:36:26.109 --> 00:36:26.119
stuff they eat just showed so you have
 

00:36:26.119 --> 00:36:27.309
stuff they eat just showed so you have
these kind of like self-sufficient

00:36:27.309 --> 00:36:27.319
these kind of like self-sufficient
 

00:36:27.319 --> 00:36:29.440
these kind of like self-sufficient
components you can use live data

00:36:29.440 --> 00:36:29.450
components you can use live data
 

00:36:29.450 --> 00:36:32.260
components you can use live data
together with rx Java so you can get all

00:36:32.260 --> 00:36:32.270
together with rx Java so you can get all
 

00:36:32.270 --> 00:36:34.960
together with rx Java so you can get all
the power of rx Java operators and now

00:36:34.960 --> 00:36:34.970
the power of rx Java operators and now
 

00:36:34.970 --> 00:36:37.180
the power of rx Java operators and now
it's life cycle safe so kind of the best

00:36:37.180 --> 00:36:37.190
it's life cycle safe so kind of the best
 

00:36:37.190 --> 00:36:40.390
it's life cycle safe so kind of the best
of both worlds and we've got additional

00:36:40.390 --> 00:36:40.400
of both worlds and we've got additional
 

00:36:40.400 --> 00:36:41.980
of both worlds and we've got additional
integrations to come we're definitely

00:36:41.980 --> 00:36:41.990
integrations to come we're definitely
 

00:36:41.990 --> 00:36:45.010
integrations to come we're definitely
looking at a lot of stuff internally

00:36:45.010 --> 00:36:45.020
looking at a lot of stuff internally
 

00:36:45.020 --> 00:36:47.410
looking at a lot of stuff internally
that would be nice if it were kind of

00:36:47.410 --> 00:36:47.420
that would be nice if it were kind of
 

00:36:47.420 --> 00:36:49.089
that would be nice if it were kind of
like self-sufficient and life cycle

00:36:49.089 --> 00:36:49.099
like self-sufficient and life cycle
 

00:36:49.099 --> 00:36:53.230
like self-sufficient and life cycle
aware and if you're a library developer

00:36:53.230 --> 00:36:53.240
aware and if you're a library developer
 

00:36:53.240 --> 00:36:55.269
aware and if you're a library developer
we really recommend checking out life

00:36:55.269 --> 00:36:55.279
we really recommend checking out life
 

00:36:55.279 --> 00:36:57.190
we really recommend checking out life
cycles and life cycle observer because

00:36:57.190 --> 00:36:57.200
cycles and life cycle observer because
 

00:36:57.200 --> 00:36:58.450
cycles and life cycle observer because
we think there is a really bright future

00:36:58.450 --> 00:36:58.460
we think there is a really bright future
 

00:36:58.460 --> 00:37:00.880
we think there is a really bright future
and a lot of potential in making

00:37:00.880 --> 00:37:00.890
and a lot of potential in making
 

00:37:00.890 --> 00:37:02.980
and a lot of potential in making
libraries and components that are life

00:37:02.980 --> 00:37:02.990
libraries and components that are life
 

00:37:02.990 --> 00:37:07.779
libraries and components that are life
cycle aware by default but before you go

00:37:07.779 --> 00:37:07.789
cycle aware by default but before you go
 

00:37:07.789 --> 00:37:09.579
cycle aware by default but before you go
do that we have a lot more for you at

00:37:09.579 --> 00:37:09.589
do that we have a lot more for you at
 

00:37:09.589 --> 00:37:13.720
do that we have a lot more for you at
i/o this year we have two more talks one

00:37:13.720 --> 00:37:13.730
i/o this year we have two more talks one
 

00:37:13.730 --> 00:37:16.210
i/o this year we have two more talks one
on life cycles it's even more in depth

00:37:16.210 --> 00:37:16.220
on life cycles it's even more in depth
 

00:37:16.220 --> 00:37:18.160
on life cycles it's even more in depth
than what we just showed tomorrow

00:37:18.160 --> 00:37:18.170
than what we just showed tomorrow
 

00:37:18.170 --> 00:37:21.880
than what we just showed tomorrow
morning we have another one on room and

00:37:21.880 --> 00:37:21.890
morning we have another one on room and
 

00:37:21.890 --> 00:37:24.730
morning we have another one on room and
persistence and going a little bit

00:37:24.730 --> 00:37:24.740
persistence and going a little bit
 

00:37:24.740 --> 00:37:26.589
persistence and going a little bit
beyond room starting at 12:30 tomorrow

00:37:26.589 --> 00:37:26.599
beyond room starting at 12:30 tomorrow
 

00:37:26.599 --> 00:37:30.250
beyond room starting at 12:30 tomorrow
and we'll be well we'll have people who

00:37:30.250 --> 00:37:30.260
and we'll be well we'll have people who
 

00:37:30.260 --> 00:37:31.870
and we'll be well we'll have people who
are kind of well versed in architecture

00:37:31.870 --> 00:37:31.880
are kind of well versed in architecture
 

00:37:31.880 --> 00:37:34.990
are kind of well versed in architecture
components in the sandbox for all i/o

00:37:34.990 --> 00:37:35.000
components in the sandbox for all i/o
 

00:37:35.000 --> 00:37:39.099
components in the sandbox for all i/o
and we also have code labs which were

00:37:39.099 --> 00:37:39.109
and we also have code labs which were
 

00:37:39.109 --> 00:37:41.309
and we also have code labs which were
which we're pretty happy with and

00:37:41.309 --> 00:37:41.319
which we're pretty happy with and
 

00:37:41.319 --> 00:37:44.289
which we're pretty happy with and
there's more to come so we think we've

00:37:44.289 --> 00:37:44.299
there's more to come so we think we've
 

00:37:44.299 --> 00:37:46.089
there's more to come so we think we've
just scratched the surface of ways that

00:37:46.089 --> 00:37:46.099
just scratched the surface of ways that
 

00:37:46.099 --> 00:37:47.680
just scratched the surface of ways that
we can improve the experience of using

00:37:47.680 --> 00:37:47.690
we can improve the experience of using
 

00:37:47.690 --> 00:37:49.480
we can improve the experience of using
Android frameworks and we're looking to

00:37:49.480 --> 00:37:49.490
Android frameworks and we're looking to
 

00:37:49.490 --> 00:37:51.579
Android frameworks and we're looking to
apply applying this approach in other

00:37:51.579 --> 00:37:51.589
apply applying this approach in other
 

00:37:51.589 --> 00:37:54.160
apply applying this approach in other
areas as well so some things already in

00:37:54.160 --> 00:37:54.170
areas as well so some things already in
 

00:37:54.170 --> 00:37:56.019
areas as well so some things already in
the works and we're also interested in

00:37:56.019 --> 00:37:56.029
the works and we're also interested in
 

00:37:56.029 --> 00:37:57.580
the works and we're also interested in
hearing from you on

00:37:57.580 --> 00:37:57.590
hearing from you on
 

00:37:57.590 --> 00:37:59.770
hearing from you on
kind of what else you'd like to see so

00:37:59.770 --> 00:37:59.780
kind of what else you'd like to see so
 

00:37:59.780 --> 00:38:02.800
kind of what else you'd like to see so
come by talk to us you know tell us what

00:38:02.800 --> 00:38:02.810
come by talk to us you know tell us what
 

00:38:02.810 --> 00:38:04.660
come by talk to us you know tell us what
you like what you don't and stay tuned

00:38:04.660 --> 00:38:04.670
you like what you don't and stay tuned
 

00:38:04.670 --> 00:38:06.100
you like what you don't and stay tuned
because we're really excited about the

00:38:06.100 --> 00:38:06.110
because we're really excited about the
 

00:38:06.110 --> 00:38:09.360
because we're really excited about the
future of Android development thank

00:38:09.360 --> 00:38:09.370
future of Android development thank
 

00:38:09.370 --> 00:38:12.330
future of Android development thank
[Applause]

00:38:12.330 --> 00:38:12.340
[Applause]
 

00:38:12.340 --> 00:38:23.240
[Applause]
[Music]

00:38:23.240 --> 00:38:23.250
 
 

00:38:23.250 --> 00:38:26.269
 
[Music]

