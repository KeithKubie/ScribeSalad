WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:06.850
&gt;&gt; BOYD: All right. Hi, everyone. My name
is Ryan Boyd. I'm a developer advocate at

00:00:06.850 --> 00:00:11.030
Google. I'm working on Google Apps and the
Apps Marketplace. How many of you attended

00:00:11.030 --> 00:00:20.349
the last session? Okay. The last session that
I did just a few minutes ago. So, there may

00:00:20.349 --> 00:00:24.020
be a slight bit of overlap at the beginning
here, but then we're going to be diving into--in

00:00:24.020 --> 00:00:30.740
application. So, we're going to give an overview
of Google Apps and the Apps Marketplace. And

00:00:30.740 --> 00:00:35.510
then we're going to dive into this application
that I built called SaaSy Voice. SaaSy Voice

00:00:35.510 --> 00:00:40.820
is an online voicemail application for a small
business. And we're going to be talking about

00:00:40.820 --> 00:00:46.570
how you build, integrate, test and sell that
application on the Google Apps Marketplace.

00:00:46.570 --> 00:00:51.030
So, first of all, and this is kind of the
repetitive material, bear with me, but Google

00:00:51.030 --> 00:00:56.309
Apps is about messaging and collaboration.
It's about tools like Gmail, Calendar, Docs,

00:00:56.309 --> 00:01:03.679
et cetera that allow organizations to efficiently
message and collaborate with each other with

00:01:03.679 --> 00:01:11.570
minimal IT cost. We have 30 million active
users on Google Apps with three million businesses.

00:01:11.570 --> 00:01:16.119
There are more than 3,000 new businesses signing
up everyday and these businesses are of all

00:01:16.119 --> 00:01:21.510
different types and sizes. We have the small
mom-and-pop shops, small retail stores, et

00:01:21.510 --> 00:01:30.560
cetera, all the way up through major enterprises
and educational institutions. These organizations

00:01:30.560 --> 00:01:35.909
don't just want the messaging and collaboration
tools that we offer them in the cloud. They

00:01:35.909 --> 00:01:40.580
want other different types of applications
in the cloud. They want things like a CRM

00:01:40.580 --> 00:01:45.280
or a project management application and they
want that to be accessible wherever they are,

00:01:45.280 --> 00:01:50.740
whether it'd be from their mobile device or
from the web browser. And in order to do that,

00:01:50.740 --> 00:01:56.799
we've launched the Apps Marketplace. We launched
the Apps Marketplace back in March and basically,

00:01:56.799 --> 00:02:03.429
it's a place for you guys to build applications
and launch them to customers of Google Apps

00:02:03.429 --> 00:02:08.649
where they can discover, purchase and install
these applications which are well integrated

00:02:08.649 --> 00:02:13.891
with their data that they store in Google
Apps. So, this is what the Apps Marketplace

00:02:13.891 --> 00:02:20.820
looks like. It's at google.com/appsmarketplace.
Since we're--we're in an environment that

00:02:20.820 --> 00:02:25.500
most of you probably speak Portuguese as your
first language; I will say the Apps Marketplace

00:02:25.500 --> 00:02:31.980
right now is English only. But we do have
applications which are written in foreign

00:02:31.980 --> 00:02:38.380
languages. And on the Marketplace, there's
a number of Japanese apps as an example. And

00:02:38.380 --> 00:02:44.520
we definitely plan on internationalizing at
some point, so. The Apps Marketplace has over

00:02:44.520 --> 00:02:51.930
200 cloud applications on it and it's definitely
growing. We show some logos here, these are--these

00:02:51.930 --> 00:02:56.510
are people who initially launched with us
back in March. There were 50 applications

00:02:56.510 --> 00:03:01.840
which launched with us, so we've grown significantly
since then. And there are applications of

00:03:01.840 --> 00:03:06.440
all different types. There's expense-reporting
applications, there's image editors, there's

00:03:06.440 --> 00:03:16.380
mailing and marketing applications, all sorts
of types of apps. So, the steps to sell your

00:03:16.380 --> 00:03:20.810
application to Google Apps customers: One,
you build your application. You can build

00:03:20.810 --> 00:03:25.250
your application using any tools and the hosting
providers you want. You won't believe the

00:03:25.250 --> 00:03:29.130
number of phone calls I've been on where a
potential partner says, "But our App isn't

00:03:29.130 --> 00:03:34.700
written on an App Engine." I don't care. You
can have your application on Easy2 and launch

00:03:34.700 --> 00:03:38.060
it on the Apps Marketplace. Of course, we'd
love App Engine to be a great environment

00:03:38.060 --> 00:03:42.830
for you to build your application on, but
we understand you may be invested in other

00:03:42.830 --> 00:03:48.450
technologies. Second, you integrate your application.
After you build it, you want to integrate

00:03:48.450 --> 00:03:53.250
it with Google Apps. The first and only required
method of integration right now is adding

00:03:53.250 --> 00:03:59.510
Single Sign-On via OpenID. And we'll see what
that experience is here shortly. And you can

00:03:59.510 --> 00:04:04.480
also go to my next talk, in this same room,
where I talk a little bit more about OpenID

00:04:04.480 --> 00:04:09.060
and OAuth in the different used cases. The
second thing that you want to integrate with

00:04:09.060 --> 00:04:15.400
is some of the over dozen different data integration
points. You don't want to have users have

00:04:15.400 --> 00:04:21.109
data silos. They want to reuse their Google
Calendar data. They want to reuse their contacts

00:04:21.109 --> 00:04:26.810
and all within your applications. So it makes
it a lot easier for them if you integrate

00:04:26.810 --> 00:04:32.039
with these APIs. And then, there are some
gadgets that we'll talk about as well. And

00:04:32.039 --> 00:04:36.190
after you build and integrate your application,
you can sell your application, go wherever

00:04:36.190 --> 00:04:42.000
Google Apps goes. And there is a one time
fee of $100 to create your listing and then

00:04:42.000 --> 00:04:48.240
there is a 25--or 20% revenue share when our
Billing APIs are available in a country where

00:04:48.240 --> 00:04:53.969
you are located. So right now, there's a revenue
share exemption. You can bill your customers

00:04:53.969 --> 00:05:01.569
however you want using your own, like, credit
card merchant provider or what have you and

00:05:01.569 --> 00:05:05.761
you can do that directly. So, you can launch
paid applications in the Marketplace and then

00:05:05.761 --> 00:05:10.629
eventually, when our Billing APIs are available,
and I'll show a demo of that later, you'll

00:05:10.629 --> 00:05:15.259
be--you'll be required to integrate with them
and that's when the register will take place.

00:05:15.259 --> 00:05:21.080
So, SaaSy Voice. Like I said, SaaSy Voice
is an online voicemail application for small

00:05:21.080 --> 00:05:25.849
and medium-sized businesses. It's not an application
which I've launched and tried to make money

00:05:25.849 --> 00:05:33.689
on, but it is a functional application which
we've written. And here's what the app looks

00:05:33.689 --> 00:05:39.979
like. So, I'm logged in here, I'm seeing--here's
my phone number and my extension, here is

00:05:39.979 --> 00:05:45.909
one of the voicemails that I've received.
The target customer of SaaSy Voice is something

00:05:45.909 --> 00:05:53.129
like Smart Law Firm. Smart Law Firm is a fictitious
small law firm that has, you know, a number

00:05:53.129 --> 00:05:58.220
of different employees, but they don't have
an IT staff. They don't want to have to maintain

00:05:58.220 --> 00:06:02.449
an IT staff and they want to have all our
services in the cloud. So, we're going to

00:06:02.449 --> 00:06:07.879
be using both SaaSy Voice and Smart Law Firm
in these examples. So first, I want to talk

00:06:07.879 --> 00:06:14.289
about the features of SaaSy Voice before it
was integrated with Google Apps. So, it has

00:06:14.289 --> 00:06:18.900
an online sign-up. As a small business, you
could go to SaaSy Voice and you could create

00:06:18.900 --> 00:06:23.710
a new account. Once your business create an
account by providing an email address and

00:06:23.710 --> 00:06:31.199
a password, you paid for the application with
the credit card and then you would assign

00:06:31.199 --> 00:06:37.479
all the different extensions within your company.
You would input the names and extension numbers

00:06:37.479 --> 00:06:43.570
for each person within the company, so that
they could receive voicemail. Every user within

00:06:43.570 --> 00:06:47.139
the company would then receive an email that
looks something like this; you're all very

00:06:47.139 --> 00:06:51.389
familiar with it. It basically says, "Hey,
your administrator has created an account

00:06:51.389 --> 00:06:58.620
for you, click on this link and set a password."
The user would then set a password and then

00:06:58.620 --> 00:07:03.870
they'd be able see their voicemail. Fairly
simple but, you know, much more difficult

00:07:03.870 --> 00:07:07.530
than it actually needs to be. So, we're going
to talk about how we make that easier for

00:07:07.530 --> 00:07:14.900
both the users and the administrators by integrating
SaaSy Voice with Google Apps. So, there are

00:07:14.900 --> 00:07:18.830
many different types of integration points.
But like I said, the first and required integration

00:07:18.830 --> 00:07:24.780
point for the Apps Marketplace is OpenID.
OpenID is used to create a single sign-on

00:07:24.780 --> 00:07:29.879
experience. This single sign-on experience
all starts from the universal navigation menu

00:07:29.879 --> 00:07:34.340
that's at the top of Google Apps. You may
notice in Google Apps, at the top of Gmail

00:07:34.340 --> 00:07:40.110
and Calendar, you have this navigation menu
that say's, you know, Mail, Calendar, Document,

00:07:40.110 --> 00:07:45.590
Sites, and then there's a More menu. We want
your users to be able to access all their

00:07:45.590 --> 00:07:51.560
cloud applications from one place. So when
they click on SaaSy Voice in this menu, they're

00:07:51.560 --> 00:07:57.990
immediately signed into the application. There's
no need for the user to grant authorization

00:07:57.990 --> 00:08:05.029
to pass their identity to the app, as you
typically see with OpenID because the domain

00:08:05.029 --> 00:08:09.439
administrator has already granted that on
their behalf. In addition to the users having

00:08:09.439 --> 00:08:14.419
one central place to access their applications
in this menu, the administrators also have

00:08:14.419 --> 00:08:18.449
one central place to access all their cloud
applications from the Google Apps Control

00:08:18.449 --> 00:08:24.789
Panel and configure them, enable data access
and that sort of thing. So, there are many

00:08:24.789 --> 00:08:31.289
different integration points that you can
use for a Marketplace Application. This is

00:08:31.289 --> 00:08:36.220
some of them, the, you know, most popular
sort of integration points are things like

00:08:36.220 --> 00:08:43.400
Calendar and Contacts. But Document List is
becoming increasingly popular as well amongst

00:08:43.400 --> 00:08:50.730
the Apps Marketplace applications. So, let
me show you what the SaaSy Voice application

00:08:50.730 --> 00:09:00.140
looks like to install and start using by a
single sign-on. So, here is what we call the

00:09:00.140 --> 00:09:05.600
listing page in the Apps Marketplace for SaaSy
Voice. At the bottom here, you have Recent

00:09:05.600 --> 00:09:10.970
Customer Views. Unfortunately, I've not published
this listing yet. I don't have any great reviews.

00:09:10.970 --> 00:09:16.600
But if I did, I'm sure I'd get a lot of customers.
And then at the top right is our Call to Action.

00:09:16.600 --> 00:09:22.600
We want administrators to add the application,
so when they hit that--the Add button, it

00:09:22.600 --> 00:09:27.270
asks them to input their domain name. So,
I've inputted smart-lawfirm.com here. Hopefully,

00:09:27.270 --> 00:09:38.810
that makes it a little easier to see. And
then I can hit Go. And--okay, Internet is

00:09:38.810 --> 00:09:45.310
working. That's great. I had some little--little
problems before. All right. So, I've logged-in

00:09:45.310 --> 00:09:50.200
to the application and then I go through this
install process. This install process is a

00:09:50.200 --> 00:09:55.200
very simple install process that's similar
for all applications in the Marketplace. The

00:09:55.200 --> 00:10:00.020
first thing it asks me to do is agree to the
Terms of Service. I have a very simple Terms

00:10:00.020 --> 00:10:04.630
of Service for this sample application, it
says, "You agree that you will love this application."

00:10:04.630 --> 00:10:09.660
I'm sure my lawyer would not be very happy
with that Terms of Service, but it will work

00:10:09.660 --> 00:10:19.620
for today. I agree, I continue and then we
see a list of data access that the application

00:10:19.620 --> 00:10:24.820
has requested. So when an application is created,
it creates a manifest file. We'll show that

00:10:24.820 --> 00:10:30.510
here during the presentation. And that manifest
file describes lists of resources that that

00:10:30.510 --> 00:10:35.000
application needs access to. In this case,
the application needs access to the list of

00:10:35.000 --> 00:10:40.510
users on my domain. It needs access to my
Google Docs and my Google Contacts. And when

00:10:40.510 --> 00:10:46.270
I say "my" I mean my company. So it's basically
access to those resources for the entire company.

00:10:46.270 --> 00:10:51.940
And so, I'm really comfortable with this application,
I built it myself. If you do not build the

00:10:51.940 --> 00:10:56.220
application yourself, you want to do a little
due diligence and make sure you trust the

00:10:56.220 --> 00:11:02.640
application vendor, but then you grant data
access. And then the next step is an optional

00:11:02.640 --> 00:11:07.280
step during the install flow where you can
configure the application. So I'm going to

00:11:07.280 --> 00:11:15.700
hit Configure Application here. And this is
going to actually jump over to the SaaSy Voice

00:11:15.700 --> 00:11:22.480
website and go through a new customer forum.
It needs–-it already knows my email address,

00:11:22.480 --> 00:11:26.890
but it needs a little bit more information.
Because this application is currently doing

00:11:26.890 --> 00:11:32.250
billing in the application itself, it's not
using Google for billing, it also asks for

00:11:32.250 --> 00:11:36.400
my credit card number. So I'm going to say
my company name here as Smart Law Firm, a

00:11:36.400 --> 00:11:41.960
little auto-complete action helps. And I have
my credit card number that is a fake test

00:11:41.960 --> 00:11:48.490
account, please don't write it down and try
to use it, it won't work. And then I am prompted

00:11:48.490 --> 00:11:53.810
to set-up voicemail for my company. Here you
see the first integration. So, it knows who

00:11:53.810 --> 00:11:58.800
I am but not only does it know who I am, it
knows who the other people are in the company.

00:11:58.800 --> 00:12:04.370
If you were to set-up this application, SaaSy
Voice, and you didn't have Google Apps, or

00:12:04.370 --> 00:12:08.310
the application wasn't integrated with Google
Apps, you would literally have to type in

00:12:08.310 --> 00:12:13.470
the username, first name and last name for
every single user in the company. Well, it

00:12:13.470 --> 00:12:17.160
makes it--this application, by integrating
with Google Apps in the Apps Marketplace,

00:12:17.160 --> 00:12:23.450
makes it a lot easier. It just lists out each
of the users in the app and I can scroll down

00:12:23.450 --> 00:12:31.810
and hit the set-up voicemail button. And it
says, "Congrats. You've set-up your voicemail.

00:12:31.810 --> 00:12:37.510
Please click the button below to continue
the installation." I hit that. Now, I have

00:12:37.510 --> 00:12:42.190
a choice right now. I can enable the app now
or enable it later. By enabling it, every

00:12:42.190 --> 00:12:47.850
user within the organization gets the navigation
menu for a SaaSy Voice. So I'll show you what

00:12:47.850 --> 00:12:53.060
that looks like. The application is now enabled,
this is where I would go in the control panel,

00:12:53.060 --> 00:13:00.660
in the future, to configure settings for it
but for now, I'm going to click the inbox

00:13:00.660 --> 00:13:07.620
and I'm going to show you my More Menu here
and we can see SaaSy Voice is listed here.

00:13:07.620 --> 00:13:15.620
When I click SaaSy Voice, I'm immediately
logged into the application and I have access

00:13:15.620 --> 00:13:20.120
to my voicemail. So it's as if the application
was part of the Google Apps suite, it has

00:13:20.120 --> 00:13:26.500
a lot of the same capabilities. I don't have
the microphone hooked up, but this is a voicemail

00:13:26.500 --> 00:13:31.300
from a guy named Litigious Larry. Larry likes
to sue a lot of hospitals and he was calling

00:13:31.300 --> 00:13:38.050
to check up on the status of his most recent
case. But when Litigious Larry called me,

00:13:38.050 --> 00:13:42.660
typically for most voicemail systems, you
might have caller ID. You might know their

00:13:42.660 --> 00:13:47.480
phone number and you might know their name,
but this actually looks up in Google Contacts

00:13:47.480 --> 00:13:51.140
and gets a lot more information. And we're
going to be talking about that in the next--as

00:13:51.140 --> 00:13:58.800
part of the presentation here. So let me jump
back to the presentation and show you how

00:13:58.800 --> 00:14:04.430
we did the Single Sign-On. First of all, Single
Sign-On and OpenID has a lot of terminology

00:14:04.430 --> 00:14:08.370
associated with it. You can see some of the
terms there, we'll be talking a little bit

00:14:08.370 --> 00:14:13.470
more detail about that in the next talk, but
it sounds really complicated. It's not hard

00:14:13.470 --> 00:14:18.220
in practice because a lot of people have done
the hard work for you. They've created libraries

00:14:18.220 --> 00:14:24.280
that do all of this. Now, Google Apps OpenID
has a slight different discovery process than

00:14:24.280 --> 00:14:29.800
regular OpenID, but there's also libraries
to handle that for you. In today's examples,

00:14:29.800 --> 00:14:34.720
we're going to actually be using PHP; not
necessarily everyone's favorite language,

00:14:34.720 --> 00:14:42.340
but a language a lot of people understand.
So here's some code about how I'm doing the

00:14:42.340 --> 00:14:47.610
Single Sign-On via OpenID. In order to do
the Single Sign-On via OpenID, I first need

00:14:47.610 --> 00:14:53.690
an OpenID consumer object and it goes through
here and creates that consumer object. You'll

00:14:53.690 --> 00:15:01.720
notice the first line uses memcacheD in order
to create a store. This is basically the OpenID

00:15:01.720 --> 00:15:06.480
relying party in speaking of this terminology,
but you can copy and paste this code, it will

00:15:06.480 --> 00:15:11.850
work. But the OpenID relying party, which
is the SaaSy Voice application, actually needs

00:15:11.850 --> 00:15:16.280
to store associations with the server. So
those are stored there, you don't need to

00:15:16.280 --> 00:15:23.490
know all the details, but copy and paste this,
it will work. And then you make the request.

00:15:23.490 --> 00:15:28.600
So, when making the request, you can see at
the top it says--we got the OpenID consumer

00:15:28.600 --> 00:15:34.250
from the last method that we just demonstrated,
and then we go begin. And we're passing the

00:15:34.250 --> 00:15:39.410
domain name. The way Google Apps OpenID works
is you need to know the domain name of your

00:15:39.410 --> 00:15:45.440
user to log them in. From that universal navigation
menu, when you clicked on SaaSy Voice there,

00:15:45.440 --> 00:15:50.190
Google actually automatically passes the domain
name to the application for that application

00:15:50.190 --> 00:15:55.230
to use it for this process. But if you're
having a user log-on from your own website,

00:15:55.230 --> 00:15:59.450
you have to ask them for their email address
or their domain name. Then the middle part

00:15:59.450 --> 00:16:03.230
here builds up, what's called an Attribute
Exchange Request. Attribute exchange is an

00:16:03.230 --> 00:16:08.790
extension to OpenID and it provides things
like the email address of the user and the

00:16:08.790 --> 00:16:14.371
first name or last name, language and some
other things for the application. And then

00:16:14.371 --> 00:16:19.850
basically, you're forming up the request,
you're sending it over to Google and once

00:16:19.850 --> 00:16:24.910
you get back a response, you need to parse
that response. So here's a little code for

00:16:24.910 --> 00:16:31.650
doing that using the PHP OpenID library. Basically,
it's getting out the user information, the

00:16:31.650 --> 00:16:37.820
email address, the first name, and then it's
looking up in the database for that user.

00:16:37.820 --> 00:16:42.350
And that's like the typical process in the
database; you would store the OpenID for a

00:16:42.350 --> 00:16:48.260
user and you'd get a--fetch the record for
that user based off the OpenID and then create

00:16:48.260 --> 00:16:55.000
a native session within your application.
So you saw some of the data access and you

00:16:55.000 --> 00:17:01.120
saw how we created that universal navigation
link. This is the application manifest which

00:17:01.120 --> 00:17:06.299
is user--used to configure those items. And
you can see at the top here, you have a link

00:17:06.299 --> 00:17:12.610
set-up. That is the URL that my application
went to during the very beginning of installing

00:17:12.610 --> 00:17:17.140
the application that allowed me to configure
the extensions for my users. Then there's

00:17:17.140 --> 00:17:25.399
the navigation link and an OpenID realm. So,
like I mentioned before, OpenID provides certain

00:17:25.399 --> 00:17:31.100
information about the user. It's generally
declaimed ID. This is a URL that represents

00:17:31.100 --> 00:17:35.629
or a URI that represents the user. You can
store that in your database and that's what

00:17:35.629 --> 00:17:41.190
you use to match when you're logging in--a
user in. But there's also that additional

00:17:41.190 --> 00:17:45.970
information that you can get. You want to
be sure that you're talking just with the

00:17:45.970 --> 00:17:50.781
Google Apps OpenID providers if you're going
to trust the email address, the first name

00:17:50.781 --> 00:17:56.200
and the last name. If you're definitely talking
to the Google Apps OpenID provider, then the

00:17:56.200 --> 00:18:00.350
email address is what's provided by the domain
administrator and the first name and last

00:18:00.350 --> 00:18:08.710
name are the same. So when we fetched users
on the domain--so we saw the list of all the

00:18:08.710 --> 00:18:14.720
different users that we could assign voicemail
boxes to. We did that based off of OAuth access

00:18:14.720 --> 00:18:20.590
to the data on the domain. It's called two-legged
OAuth in this case, but basically what happens

00:18:20.590 --> 00:18:26.190
here--as a developer, you configure this manifest
and you say your application needs access

00:18:26.190 --> 00:18:36.009
to this information for this reason and that's
what gets displayed in the installation process.

00:18:36.009 --> 00:18:40.529
So in order to fetch users on the domain,
you know, previously you saw with OpenID,

00:18:40.529 --> 00:18:45.320
we created an OpenID client. In this case,
we're going to create an OAuth client which

00:18:45.320 --> 00:18:54.269
is basically an object. We use Zen framework
for the PHP Google Data API's library. And

00:18:54.269 --> 00:19:00.100
so I use the Zen OAuth classes and like the
Zen HTTP client here. But basically what it

00:19:00.100 --> 00:19:05.110
does is configure a consumer key and a consumer
seeker which Google gives you as a developer

00:19:05.110 --> 00:19:12.850
when you register your application. And then
it builds up an object, an HTTP client, that

00:19:12.850 --> 00:19:17.389
whenever you send requests using that client,
it automatically adds the appropriate OAuth

00:19:17.389 --> 00:19:21.820
signatures. So, the OAuth is a part [INDISTINCT]
what we're really here to talk about, we're

00:19:21.820 --> 00:19:26.309
here to talk about is provisioning API and
how you get the users on the domain. As you

00:19:26.309 --> 00:19:32.590
can see, it's a fairly simple process. Basically,
you pass that OAuth client, you create a few

00:19:32.590 --> 00:19:38.200
objects, you retrieve a feed from Google that
is authorized by OAuth and that has a list

00:19:38.200 --> 00:19:42.769
of all the users in the domain. You can then
build up an array of those list of users and

00:19:42.769 --> 00:19:48.669
pass that over to whatever is rendering your
webpage if that's how you're using them. So

00:19:48.669 --> 00:19:53.159
I want to go back to the demo here and show
the next little bit of functionality. Actually,

00:19:53.159 --> 00:19:59.120
I already started talking about some of this.
In particular, how the contacts API's are

00:19:59.120 --> 00:20:06.700
used. So when I receive a phone call at--or
receive a voicemail, this system actually

00:20:06.700 --> 00:20:13.179
looks up in the user's Google Contacts who
this voice mail is from. In this case, it

00:20:13.179 --> 00:20:17.429
knows a number of different phone numbers
for Litigious Larry. So if he calls from any

00:20:17.429 --> 00:20:23.269
of them, the system can look it up and it
knows that it's from Litigious Larry. And

00:20:23.269 --> 00:20:26.309
then we have all sorts of other information.
We have other phone numbers we can call him

00:20:26.309 --> 00:20:31.279
back on. We have an email address we can use
to return his email, all because we integrated

00:20:31.279 --> 00:20:36.001
with the users Google Contacts. Now, I haven't
mentioned this thus far, but this application

00:20:36.001 --> 00:20:43.029
uses what's called Twilio. It's an API for
voice applications and I definitely encourage

00:20:43.029 --> 00:20:48.210
you all to check it out. It's a really great
API. It's very easy to use. Anyway, so now

00:20:48.210 --> 00:20:54.309
I've looked up the information about the user,
made it a lot easier for the employees of

00:20:54.309 --> 00:20:58.970
my company to know who they're receiving voicemails
from and contact them back. I also have a

00:20:58.970 --> 00:21:06.100
call log. So the administrator is--within
this application can get a call log, a log

00:21:06.100 --> 00:21:12.789
of all the different voicemails that were
left in the organization. Very handy for auditing

00:21:12.789 --> 00:21:18.310
purposes, but not so handy if you just have
a list of them, you know, in a web browser.

00:21:18.310 --> 00:21:24.230
It's much more handy to have a link like this
that says "Export to Google Docs." I'm going

00:21:24.230 --> 00:21:34.710
to click on that and you could see a new tab
was opened. And in a second here we will have

00:21:34.710 --> 00:21:42.190
a Google Doc representing that call log. And
the Google Doc is as a spreadsheet. Now, why

00:21:42.190 --> 00:21:48.090
might this be powerful? It's powerful because
users are familiar with certain tools. A lot

00:21:48.090 --> 00:21:52.039
of business users are familiar with spreadsheets
and they're familiar with analyzing data in

00:21:52.039 --> 00:21:58.580
spreadsheets. So what are we going to do here
is build a quick formula here to see how many

00:21:58.580 --> 00:22:07.669
voicemails my users are getting. So I'm going
to say, "Give me unique values of column C."

00:22:07.669 --> 00:22:22.399
And then I'm going to count. Oops, sorry.
I'm going to count for each of these unique

00:22:22.399 --> 00:22:28.220
values or unique users, how many voicemails
they've received. I'm going to drag this down

00:22:28.220 --> 00:22:42.230
here, call these "Voicemails" and then insert
a chart. So now, we're going to show you how

00:22:42.230 --> 00:22:44.879
you would do that. How you would fetch the
user's Google Contacts and how you would export

00:22:44.879 --> 00:22:49.830
the docs. It's very similar on the authorization
side to what we saw earlier, so we don't repeat

00:22:49.830 --> 00:22:56.409
that. But in this case, you're adding one
additional parameter here, the xoauth_requestor_id.

00:22:56.409 --> 00:23:03.360
The xoauth_requestor_id represents the user
on behalf of whom you're making requests.

00:23:03.360 --> 00:23:08.759
So if you're make--if you have a user John
logged-in, the xoauth_requestor_id should

00:23:08.759 --> 00:23:14.700
be John because the request that you're making
are going to act with the privileges of Don--of

00:23:14.700 --> 00:23:21.820
John. And what it's going to do is say, "I
want to retrieve John's contacts feed." So

00:23:21.820 --> 00:23:27.010
we're building up a URL which is just the
kind of generic query URL, we're not passing

00:23:27.010 --> 00:23:31.710
any parameters. But we're building up a generic
contacts URL and say, "Retrieve the feed of

00:23:31.710 --> 00:23:36.610
John's contacts." And then we loop through
the contacts and add them to an array. And

00:23:36.610 --> 00:23:40.080
after we have the contacts in an array with
all the phone numbers and all, it's fairly

00:23:40.080 --> 00:23:47.470
easy to look it up and figure out who this
user is and--oh, sorry, who the caller is.

00:23:47.470 --> 00:23:51.690
For exporting a spreadsheet, there are a couple
of different ways to do this, but the easiest

00:23:51.690 --> 00:23:56.789
way to export a spreadsheet is to create a
CSV file. That's what Write Call Log does

00:23:56.789 --> 00:24:01.980
and you're all probably familiar with creating
CSV files. It's very simple. So Write Call

00:24:01.980 --> 00:24:09.500
Log creates a CSV file then forms up a URL.
Again, having that xoauth_requestor_id, identifying

00:24:09.500 --> 00:24:16.670
the email address of the currently logged-in
user and uploads that file. It's a one simple

00:24:16.670 --> 00:24:21.619
line to upload that file. You're passing the
MIME type as a CSV, so Google Docs knows to

00:24:21.619 --> 00:24:27.850
create it as a spreadsheet. And then you're
getting the URL back from Google Docs and

00:24:27.850 --> 00:24:32.080
that's what was displayed in the web browser.
So the web browser opened up that new URL

00:24:32.080 --> 00:24:40.539
with the Google spreadsheet, fairly simple.
So we had about a hundred lines of code. I

00:24:40.539 --> 00:24:44.499
did count them, but it was quite manual because
I counted them from the slides, but hopefully

00:24:44.499 --> 00:24:49.269
that hundred number is right. In a hundred
lines of code, we added Single Sign-On via

00:24:49.269 --> 00:24:55.059
OpenID. We had a very quick set-up process
using OpenID attribute exchange and the provisioning

00:24:55.059 --> 00:25:06.320
API. And we integrated the user's data with
the contacts API and Google Docs. So let me

00:25:06.320 --> 00:25:17.049
show you one other feature that I built in
this application.

00:25:17.049 --> 00:25:21.710
And you may have actually seen this earlier
when I was logged-in, but I actually have

00:25:21.710 --> 00:25:27.700
a gadget as part of this application. So that
when I'm actually checking my email on a regular

00:25:27.700 --> 00:25:32.499
basis--I unfortunately spend the majority
of my day in email, I'm sure a lot of you

00:25:32.499 --> 00:25:36.369
do as well--I want to see all my different
voicemails. I don't want to just come--have

00:25:36.369 --> 00:25:40.929
it in as an email, but I wanted to know what
my task list--what voicemails I have to listen

00:25:40.929 --> 00:25:46.590
to. I want to be able to easily call one of
my contacts from the Contacts API, and I can

00:25:46.590 --> 00:25:52.350
do that all with this gadget. Now, gadgets
like this aren't actually installable as part

00:25:52.350 --> 00:25:59.399
of Marketplace applications, but they can
access the same OpenID services and you can

00:25:59.399 --> 00:26:04.289
provide as a developer some instructions to
the user on how to install the gadget. It's

00:26:04.289 --> 00:26:16.789
a fairly simple process, but in the future
we plan on having more installable services.

00:26:16.789 --> 00:26:21.600
So the future, you're probably wondering,
you know, the Marketplace has been around

00:26:21.600 --> 00:26:26.179
for a little bit now. What's happening? The
number one thing our engineering team has

00:26:26.179 --> 00:26:31.159
been working on are the Billing APIs. The
idea behind the Billing APIs, as an addition

00:26:31.159 --> 00:26:36.280
for our domain administrators to have one
central place to manage their data access

00:26:36.280 --> 00:26:40.850
for the cloud applications, for users to have
one place that they can log in to all their

00:26:40.850 --> 00:26:46.049
applications and have all those integrated
experience. You also want to have administrators

00:26:46.049 --> 00:26:50.759
to be able to manage the payment for all the
applications in one place. Now I'm talking

00:26:50.759 --> 00:26:57.759
about this slightly prematurely. We're planning
on launching it for U.S. vendors soon. International

00:26:57.759 --> 00:27:02.249
availability will be sometime next year. We're
going to be rolling out on a country by country

00:27:02.249 --> 00:27:08.669
basis. Believe it or not Billing is very difficult
for legal and tax reasons and all that stuff.

00:27:08.669 --> 00:27:13.740
And like I said before, until we have the
Billing API available for your country, you

00:27:13.740 --> 00:27:18.759
can feel free still to launch applications
in the Marketplace, collect money from customers

00:27:18.759 --> 00:27:24.779
using your existing payment collecting methods
and those will be revenue share exempt. Let

00:27:24.779 --> 00:27:29.919
me give you a demo though of what the Billing
APIs will look like once they're available.

00:27:29.919 --> 00:27:40.109
And this is a YouTube video, so hopefully
this will play well. All right, so you could

00:27:40.109 --> 00:27:45.940
see it's the same sort of start of the installation
process. I'm logging in to Sassy Voice here.

00:27:45.940 --> 00:27:51.389
Sassy Voice is displaying a couple of different
billing plans. I'm going to choose the $8

00:27:51.389 --> 00:27:57.230
per user per month plan for a toll-free number.
I'm going to say I have three users in my

00:27:57.230 --> 00:28:03.269
organization that need voicemail. And then
I get an invoice. And at the bottom here,

00:28:03.269 --> 00:28:08.070
because my credit card is already stored because
I've added other applications, I can just

00:28:08.070 --> 00:28:25.859
agree and pay. My order's going to be processed
using that credit card. And I must've been

00:28:25.859 --> 00:28:32.749
recording this on a very slow connection or--all
right. And then I can enable the application

00:28:32.749 --> 00:28:37.580
right as soon as I've agreed to the billing.
Then Google will handle the monthly recurring

00:28:37.580 --> 00:28:43.149
building--billing for the application. And
then I can actually select individual users

00:28:43.149 --> 00:28:48.509
to give voicemail and those users are the
ones that will receive those navigation elements.

00:28:48.509 --> 00:28:52.359
In the universal navigation, those are the
ones that have gained access to the application

00:28:52.359 --> 00:28:58.379
and those are the users I'm paying for. So
basically, it streamlines that flow a lot

00:28:58.379 --> 00:29:04.289
more. Now, so I've gone through the whole
process. I've talked to you about how you

00:29:04.289 --> 00:29:08.720
build an application, how you integrate with
OpenID, how you integrate with various sets

00:29:08.720 --> 00:29:14.170
of data, all to launch your application and
make it available for the three million businesses

00:29:14.170 --> 00:29:19.960
that are using Google Apps to go out and purchase.
Now, here's some resources. There's a lot

00:29:19.960 --> 00:29:24.120
here, but if there's any ones that you want
to scramble down quickly, you're welcome to.

00:29:24.120 --> 00:29:29.779
And I'll send my Twitter profile at the end
there if you want to contact me. But I definitely

00:29:29.779 --> 00:29:34.009
encourage you all to check it--check this
out. If you have any great application ideas

00:29:34.009 --> 00:29:39.429
for business to business web applications,
the Apps Marketplace is a great way to distribute

00:29:39.429 --> 00:29:44.460
them. Right now, there's another talk going
on, on the Chrome Web Store. It uses a lot

00:29:44.460 --> 00:29:48.100
of the same technologies if you're trying
to distribute applications to consumer. So

00:29:48.100 --> 00:29:53.071
you can reuse a lot of the knowledge that
you've gained via OpenID, et cetera, if you

00:29:53.071 --> 00:29:58.669
want to write an application and distribute
it both to businesses and consumers. So I'm

00:29:58.669 --> 00:30:03.289
available up here for any questions. I'm going
to give another session starting here shortly

00:30:03.289 --> 00:30:08.600
going in through OpenID and OAuth, but until
then feel free to come up and ask me questions,

00:30:08.600 --> 00:30:12.129
then I'll be available, obviously, at the
end of the day as well. Thank you very much.

