WEBVTT
Kind: captions
Language: en

00:00:00.540 --> 00:00:01.610
ANDREW BROGDON: Hey,
everybody, and welcome

00:00:01.610 --> 00:00:03.609
to the first episode of
the "Mobile Ads Garage,"

00:00:03.609 --> 00:00:05.780
where we cover the nuts and
bolts of mobile ads code

00:00:05.780 --> 00:00:09.550
in a format that's just like
my grandma-- short and sweet.

00:00:09.550 --> 00:00:11.470
I'm Andrew Brogdon,
a developer programs

00:00:11.470 --> 00:00:14.064
engineer with the Google
Mobile Ads SDK team.

00:00:14.064 --> 00:00:15.730
We've heard from a
lot of our publishers

00:00:15.730 --> 00:00:17.354
that you'd love more
technical content.

00:00:17.354 --> 00:00:20.320
So we're here to get our hands
dirty, to wire things up, turn

00:00:20.320 --> 00:00:21.870
them on, and see how they work.

00:00:21.870 --> 00:00:23.960
We'll have screencasts
of real code, hack

00:00:23.960 --> 00:00:25.790
on real applications,
and, with the help

00:00:25.790 --> 00:00:29.100
of my intrepid partner,
Gary the graphics guy,

00:00:29.100 --> 00:00:30.586
we'll show you the results.

00:00:30.586 --> 00:00:32.960
So if you've ever taken a look
at the AdMob documentation

00:00:32.960 --> 00:00:35.130
and thought, that's
great, but could you

00:00:35.130 --> 00:00:37.030
have a ginger explain
it to me in a format I

00:00:37.030 --> 00:00:40.334
can watch on my phone,
turns out we can do that.

00:00:40.334 --> 00:00:41.750
For our first
episode, we're going

00:00:41.750 --> 00:00:44.820
to focus on how easy it is
to get started with the SDK.

00:00:44.820 --> 00:00:48.979
Let's imagine that I'm in
an application-- exactly.

00:00:48.979 --> 00:00:50.770
One of the simplest
ways to monetize an app

00:00:50.770 --> 00:00:53.650
is just by adding a banner.

00:00:53.650 --> 00:00:57.070
But there's also
interstitial ads like these,

00:00:57.070 --> 00:00:59.984
or even native ads like these.

00:00:59.984 --> 00:01:01.900
The one thing all these
formats have in common

00:01:01.900 --> 00:01:03.530
is the Mobile Ads SDK.

00:01:03.530 --> 00:01:05.940
Properly importing and
referencing it in your project

00:01:05.940 --> 00:01:06.839
is step one.

00:01:06.839 --> 00:01:08.380
So let's take a look
at how to do it.

00:01:08.380 --> 00:01:10.560
We'll start with iOS.

00:01:10.560 --> 00:01:13.170
So here we are in Xcode with
a very simple Hello World app

00:01:13.170 --> 00:01:15.120
that I'd like to
import the SDK into.

00:01:15.120 --> 00:01:17.019
So how do I do it?

00:01:17.019 --> 00:01:18.060
Well, here are the steps.

00:01:18.060 --> 00:01:19.450
I'll be using CocoaPods today.

00:01:19.450 --> 00:01:22.340
So the first step is to
create or update the PodFile.

00:01:22.340 --> 00:01:25.070
Then I'll run pod install,
which will download the SDK

00:01:25.070 --> 00:01:26.900
and integrate it
into the project.

00:01:26.900 --> 00:01:29.670
And then I'll open the workspace
file that CocoaPods creates.

00:01:29.670 --> 00:01:33.260
And I'll be right back
in Xcode ready to go.

00:01:33.260 --> 00:01:36.400
So here I am in the root
directory of my Xcode project.

00:01:36.400 --> 00:01:38.752
And I'm going to open the
PodFile in a text editor.

00:01:43.312 --> 00:01:44.770
And I'm going to
drop in some text.

00:01:44.770 --> 00:01:46.186
If you're familiar
with CocoaPods,

00:01:46.186 --> 00:01:48.080
this should look
really familiar to you.

00:01:48.080 --> 00:01:49.880
The important part is
this line right here.

00:01:53.090 --> 00:01:54.830
That tells CocoaPods
that the project

00:01:54.830 --> 00:01:58.080
has a dependency on version
7.0 or higher of the Mobile Ads

00:01:58.080 --> 00:02:00.550
SDK.

00:02:00.550 --> 00:02:03.270
So I'll save this.

00:02:03.270 --> 00:02:05.140
And then I'll run
pod install, which

00:02:05.140 --> 00:02:07.438
will download the SDK
automatically and integrate it

00:02:07.438 --> 00:02:08.104
into my project.

00:02:10.759 --> 00:02:13.300
And as you can see, we've got
a lot more stuff in this folder

00:02:13.300 --> 00:02:14.577
now.

00:02:14.577 --> 00:02:16.410
So I'm going to open
up that workspace file.

00:02:24.190 --> 00:02:26.174
And now I'm right back in Xcode.

00:02:26.174 --> 00:02:27.590
And just like any
other framework,

00:02:27.590 --> 00:02:29.754
I can use an import
statement to reference it

00:02:29.754 --> 00:02:30.545
in one of my files.

00:02:33.054 --> 00:02:34.470
And now that I
have GADBannerView,

00:02:34.470 --> 00:02:36.920
which is an AdMob class,
it's properly recognized.

00:02:36.920 --> 00:02:39.577
So you know the SDK is in here.

00:02:39.577 --> 00:02:41.660
We try to make it as easy
as possible to integrate

00:02:41.660 --> 00:02:42.580
mobile ads.

00:02:42.580 --> 00:02:44.940
Time is money, and we're all
about keeping costs down.

00:02:44.940 --> 00:02:47.432
For example, the garage
behind me-- that's

00:02:47.432 --> 00:02:48.390
not even a real garage.

00:02:48.390 --> 00:02:49.920
This is, like, a
holodeck situation.

00:02:49.920 --> 00:02:52.490
Watch, I could be
in outer space.

00:02:52.490 --> 00:02:54.387
Or I could be swimming
with the dolphins.

00:02:54.387 --> 00:02:57.020
I could even be backstage
with Justin Bieber

00:02:57.020 --> 00:02:59.510
if I wanted to be.

00:02:59.510 --> 00:03:01.880
Gary, get it-- oh.

00:03:01.880 --> 00:03:03.950
Legal didn't approve
the-- so I shouldn't even

00:03:03.950 --> 00:03:06.500
do the Bieber joke at all?

00:03:06.500 --> 00:03:09.650
Well, legal fees aside, we
try to keep costs down so

00:03:09.650 --> 00:03:11.260
we can keep your revenue up.

00:03:11.260 --> 00:03:13.910
Let's take a look at importing
the SDK into an Android Studio

00:03:13.910 --> 00:03:15.020
project.

00:03:15.020 --> 00:03:17.810
OK, so here I am in Android
Studio with a Hello World app

00:03:17.810 --> 00:03:19.550
that I'd like to
get the SDK into.

00:03:19.550 --> 00:03:22.600
So what are the steps?

00:03:22.600 --> 00:03:24.420
For Android, there is just two.

00:03:24.420 --> 00:03:26.690
First, I'll update the
app's build.gradle file

00:03:26.690 --> 00:03:28.650
to add a dependency
on Mobile Ads.

00:03:28.650 --> 00:03:32.910
Then I'll do a Gradle
sync, and I'm ready to go.

00:03:32.910 --> 00:03:34.065
OK, here's my build.gradle.

00:03:34.065 --> 00:03:35.940
And I'm going to go to
the dependency section

00:03:35.940 --> 00:03:36.950
and add a line.

00:03:36.950 --> 00:03:37.955
That's right down here.

00:03:42.920 --> 00:03:46.280
The Google Mobile Ads SDK is
part of Google Play services.

00:03:46.280 --> 00:03:48.900
So what we're doing is telling
Gradle to pull in just the ads

00:03:48.900 --> 00:03:50.420
code with play-services-ads.

00:03:56.784 --> 00:03:58.575
And the numbers at the
end are the version.

00:03:58.575 --> 00:04:02.820
You should always try
to use the latest one.

00:04:02.820 --> 00:04:05.160
Now that that's done, I'm
going to do a Gradle sync.

00:04:05.160 --> 00:04:07.980
That's where Gradle pulls in all
the resources my project needs,

00:04:07.980 --> 00:04:10.615
checks all the references, and
makes sure everything's OK.

00:04:10.615 --> 00:04:13.530
If this is the first time you've
used Google Play services,

00:04:13.530 --> 00:04:15.280
Android Studio might
pop up a window

00:04:15.280 --> 00:04:17.404
and ask you to download
something called the Google

00:04:17.404 --> 00:04:18.152
Repository.

00:04:18.152 --> 00:04:19.360
If that happens, don't worry.

00:04:19.360 --> 00:04:20.901
That's just Android
Studio and Gradle

00:04:20.901 --> 00:04:24.207
downloading the SDK for you.

00:04:24.207 --> 00:04:26.040
OK, now that we've
finished the Gradle sync,

00:04:26.040 --> 00:04:27.740
let me come back to
my activity and try

00:04:27.740 --> 00:04:31.680
to use one of the SDK's classes.

00:04:31.680 --> 00:04:33.866
Here we go.

00:04:33.866 --> 00:04:35.490
You can see it
automatically suggesting

00:04:35.490 --> 00:04:38.020
the package and class,
so the SDK is definitely

00:04:38.020 --> 00:04:39.930
in the project now.

00:04:39.930 --> 00:04:40.970
So that's it.

00:04:40.970 --> 00:04:43.300
Getting the SDK into a
project is the first step

00:04:43.300 --> 00:04:45.574
toward displaying ads
and earning revenue.

00:04:45.574 --> 00:04:46.990
In our next video,
we'll cover how

00:04:46.990 --> 00:04:48.870
to use the SDK to
display banners

00:04:48.870 --> 00:04:51.549
on both iOS and Android.

00:04:51.549 --> 00:04:53.840
In the meantime, I've got
some great resources for you,

00:04:53.840 --> 00:04:56.460
like our AdMob Quick
Starts for iOS and Android,

00:04:56.460 --> 00:04:59.850
which have notes for Java,
Objective C, and Swift.

00:04:59.850 --> 00:05:01.410
We also have sample
code up on GitHub

00:05:01.410 --> 00:05:03.410
for both operating
systems, so check those out

00:05:03.410 --> 00:05:04.827
if you're interested.

00:05:04.827 --> 00:05:06.910
You might also like AdMob's
mobs no nonsense guide

00:05:06.910 --> 00:05:08.260
to app monetization.

00:05:08.260 --> 00:05:10.270
It's an overview of
monetization strategies

00:05:10.270 --> 00:05:12.869
that includes code and
tips from other engineers.

00:05:12.869 --> 00:05:14.660
If you've got a technical
question relating

00:05:14.660 --> 00:05:17.094
to anything you've just seen,
stop by our support forum.

00:05:17.094 --> 00:05:19.260
And if you've got a question
about this video series

00:05:19.260 --> 00:05:21.320
or a tip on something
you'd like us to cover,

00:05:21.320 --> 00:05:24.520
leave a comment below, and Gary
and I will see you next time.

00:05:24.520 --> 00:05:28.170
[MUSIC PLAYING]

