WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
You already know one language we've been using--the Python language obviously.

00:00:04.000 --> 00:00:11.000
That has a syntax for statements and expressions,

00:00:11.000 --> 00:00:15.000
but there are also some subparts of Python that seems like quite a different language.

00:00:15.000 --> 00:00:19.000
One example would be the language for formatting strings.

00:00:19.000 --> 00:00:22.000
Here's an example from the Python reference language.

00:00:22.000 --> 00:00:30.000
You see that this rather bizarre string here with %(#)03D and so on.

00:00:30.000 --> 00:00:35.000
There's a language of format strings itself to produce this type of output.

00:00:35.000 --> 00:00:38.000
There are other parts of the Python language that allow you to customize it to your use.

00:00:38.000 --> 00:00:42.000
You can create your own type of classes,

00:00:42.000 --> 00:00:45.000
and they can have their own type of expression,

00:00:45.000 --> 00:00:48.000
including operator overloading.

00:00:48.000 --> 00:00:51.000
We're used to expressions like x + y.

00:00:51.000 --> 00:00:56.000
Say if x is 2 and y is 3 then that would be 5.

00:00:56.000 --> 00:01:01.000
But you can also say x + y where x and y are your own types of data types.

00:01:01.000 --> 00:01:03.000
They might be matrices.

00:01:03.000 --> 00:01:07.000
They might be components of some kind of building that you're building,

00:01:07.000 --> 00:01:09.000
and this can say to put them together.

00:01:09.000 --> 00:01:12.000
It may be two shapes that you can concatenate on the screen.

00:01:12.000 --> 00:01:17.000
You can define your own language over the types of objects you want to deal with.

00:01:17.000 --> 00:01:22.000
You can go one step farther than that and define your own domain specific language.

00:01:22.000 --> 00:01:24.000
Here's an example.

00:01:24.000 --> 00:01:29.000
This is a language for describing an optimization problem having to do with the price

00:01:29.000 --> 00:01:32.000
on octane and various types of fuels,

00:01:32.000 --> 00:01:36.000
and you can describe the parameters and then build the language processor

00:01:36.000 --> 00:01:40.000
to take this as input and compute the output.

00:01:40.000 --> 00:01:45.000
Of course, you could do that with a regular Python statement just as well,

00:01:45.000 --> 00:01:49.000
but here what we've done is design the language specifically for this problem

00:01:49.000 --> 00:01:52.000
and then written the problem description in that language.

00:01:52.000 --> 00:01:56.000
In this unit we'll cover what is a language, what is a grammar,

00:01:56.000 --> 00:02:00.000
the difference between a compiler and an interpreter,

00:02:00.000 --> 99:59:59.000
and how to use languages as a design tool.

