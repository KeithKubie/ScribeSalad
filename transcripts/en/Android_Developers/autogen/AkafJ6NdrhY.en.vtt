WEBVTT
Kind: captions
Language: en

00:00:01.429 --> 00:00:04.039
as developers there's nothing we like

00:00:04.039 --> 00:00:04.049
as developers there's nothing we like
 

00:00:04.049 --> 00:00:05.749
as developers there's nothing we like
more than an amazing activity that

00:00:05.749 --> 00:00:05.759
more than an amazing activity that
 

00:00:05.759 --> 00:00:07.610
more than an amazing activity that
delights and entertains our users but

00:00:07.610 --> 00:00:07.620
delights and entertains our users but
 

00:00:07.620 --> 00:00:09.620
delights and entertains our users but
sadly initializing all the subsystems

00:00:09.620 --> 00:00:09.630
sadly initializing all the subsystems
 

00:00:09.630 --> 00:00:11.419
sadly initializing all the subsystems
resources and layouts to provide that

00:00:11.419 --> 00:00:11.429
resources and layouts to provide that
 

00:00:11.429 --> 00:00:13.039
resources and layouts to provide that
experience takes a bit of time and

00:00:13.039 --> 00:00:13.049
experience takes a bit of time and
 

00:00:13.049 --> 00:00:14.629
experience takes a bit of time and
memory meaning the users are going to

00:00:14.629 --> 00:00:14.639
memory meaning the users are going to
 

00:00:14.639 --> 00:00:15.980
memory meaning the users are going to
have to wait for their transcendent

00:00:15.980 --> 00:00:15.990
have to wait for their transcendent
 

00:00:15.990 --> 00:00:18.320
have to wait for their transcendent
experience my name is Colt McAnlis and

00:00:18.320 --> 00:00:18.330
experience my name is Colt McAnlis and
 

00:00:18.330 --> 00:00:19.429
experience my name is Colt McAnlis and
one of the most important things that

00:00:19.429 --> 00:00:19.439
one of the most important things that
 

00:00:19.439 --> 00:00:20.630
one of the most important things that
you can do for the health and

00:00:20.630 --> 00:00:20.640
you can do for the health and
 

00:00:20.640 --> 00:00:21.920
you can do for the health and
performance perception of your

00:00:21.920 --> 00:00:21.930
performance perception of your
 

00:00:21.930 --> 00:00:23.779
performance perception of your
application is optimizing the

00:00:23.779 --> 00:00:23.789
application is optimizing the
 

00:00:23.789 --> 00:00:25.310
application is optimizing the
performance of loading your activities

00:00:25.310 --> 00:00:25.320
performance of loading your activities
 

00:00:25.320 --> 00:00:27.439
performance of loading your activities
remember when the user launches your app

00:00:27.439 --> 00:00:27.449
remember when the user launches your app
 

00:00:27.449 --> 00:00:29.359
remember when the user launches your app
they'll be shown a start window while

00:00:29.359 --> 00:00:29.369
they'll be shown a start window while
 

00:00:29.369 --> 00:00:30.769
they'll be shown a start window while
your app is loading and getting ready to

00:00:30.769 --> 00:00:30.779
your app is loading and getting ready to
 

00:00:30.779 --> 00:00:32.659
your app is loading and getting ready to
display now most of the time if your

00:00:32.659 --> 00:00:32.669
display now most of the time if your
 

00:00:32.669 --> 00:00:34.400
display now most of the time if your
user is spending too much time staring

00:00:34.400 --> 00:00:34.410
user is spending too much time staring
 

00:00:34.410 --> 00:00:36.709
user is spending too much time staring
at the screen the problem is most likely

00:00:36.709 --> 00:00:36.719
at the screen the problem is most likely
 

00:00:36.719 --> 00:00:38.630
at the screen the problem is most likely
to be in the creation of your main

00:00:38.630 --> 00:00:38.640
to be in the creation of your main
 

00:00:38.640 --> 00:00:40.760
to be in the creation of your main
activity I mean a bunch of stuff happens

00:00:40.760 --> 00:00:40.770
activity I mean a bunch of stuff happens
 

00:00:40.770 --> 00:00:42.200
activity I mean a bunch of stuff happens
here you're setting the theme data

00:00:42.200 --> 00:00:42.210
here you're setting the theme data
 

00:00:42.210 --> 00:00:43.850
here you're setting the theme data
inflating view hierarchies loading

00:00:43.850 --> 00:00:43.860
inflating view hierarchies loading
 

00:00:43.860 --> 00:00:45.590
inflating view hierarchies loading
bitmaps deserializing Network fetches

00:00:45.590 --> 00:00:45.600
bitmaps deserializing Network fetches
 

00:00:45.600 --> 00:00:47.389
bitmaps deserializing Network fetches
writing user preferences you know all

00:00:47.389 --> 00:00:47.399
writing user preferences you know all
 

00:00:47.399 --> 00:00:48.920
writing user preferences you know all
the stuff you need to display your

00:00:48.920 --> 00:00:48.930
the stuff you need to display your
 

00:00:48.930 --> 00:00:50.930
the stuff you need to display your
activity but if you're not careful each

00:00:50.930 --> 00:00:50.940
activity but if you're not careful each
 

00:00:50.940 --> 00:00:52.850
activity but if you're not careful each
of these little operations can fall into

00:00:52.850 --> 00:00:52.860
of these little operations can fall into
 

00:00:52.860 --> 00:00:54.560
of these little operations can fall into
their own performance pitfalls things

00:00:54.560 --> 00:00:54.570
their own performance pitfalls things
 

00:00:54.570 --> 00:00:55.910
their own performance pitfalls things
like multiple garbage collection events

00:00:55.910 --> 00:00:55.920
like multiple garbage collection events
 

00:00:55.920 --> 00:00:58.010
like multiple garbage collection events
or waiting to inflate views or blocking

00:00:58.010 --> 00:00:58.020
or waiting to inflate views or blocking
 

00:00:58.020 --> 00:01:00.319
or waiting to inflate views or blocking
on Network requests all things which can

00:01:00.319 --> 00:01:00.329
on Network requests all things which can
 

00:01:00.329 --> 00:01:01.819
on Network requests all things which can
delay the time it takes for the first

00:01:01.819 --> 00:01:01.829
delay the time it takes for the first
 

00:01:01.829 --> 00:01:04.579
delay the time it takes for the first
pixel to be shown to the user so if

00:01:04.579 --> 00:01:04.589
pixel to be shown to the user so if
 

00:01:04.589 --> 00:01:06.230
pixel to be shown to the user so if
you'd like to streamline your activity

00:01:06.230 --> 00:01:06.240
you'd like to streamline your activity
 

00:01:06.240 --> 00:01:07.370
you'd like to streamline your activity
loading to give users the best

00:01:07.370 --> 00:01:07.380
loading to give users the best
 

00:01:07.380 --> 00:01:09.380
loading to give users the best
experience possible here's what you need

00:01:09.380 --> 00:01:09.390
experience possible here's what you need
 

00:01:09.390 --> 00:01:11.450
experience possible here's what you need
to do first figure out if you actually

00:01:11.450 --> 00:01:11.460
to do first figure out if you actually
 

00:01:11.460 --> 00:01:13.490
to do first figure out if you actually
have a problem which you can do with the

00:01:13.490 --> 00:01:13.500
have a problem which you can do with the
 

00:01:13.500 --> 00:01:15.410
have a problem which you can do with the
method tracing tool this will give you a

00:01:15.410 --> 00:01:15.420
method tracing tool this will give you a
 

00:01:15.420 --> 00:01:17.030
method tracing tool this will give you a
snapshot of your call stack and let you

00:01:17.030 --> 00:01:17.040
snapshot of your call stack and let you
 

00:01:17.040 --> 00:01:18.740
snapshot of your call stack and let you
visually see what functions are taking

00:01:18.740 --> 00:01:18.750
visually see what functions are taking
 

00:01:18.750 --> 00:01:20.719
visually see what functions are taking
longer than others if the oncreate

00:01:20.719 --> 00:01:20.729
longer than others if the oncreate
 

00:01:20.729 --> 00:01:22.190
longer than others if the oncreate
function of your activity is taking

00:01:22.190 --> 00:01:22.200
function of your activity is taking
 

00:01:22.200 --> 00:01:24.320
function of your activity is taking
longer than 16 to 30 milliseconds then

00:01:24.320 --> 00:01:24.330
longer than 16 to 30 milliseconds then
 

00:01:24.330 --> 00:01:25.940
longer than 16 to 30 milliseconds then
it's worth exploring more to see what

00:01:25.940 --> 00:01:25.950
it's worth exploring more to see what
 

00:01:25.950 --> 00:01:27.830
it's worth exploring more to see what
might be causing the delay and this can

00:01:27.830 --> 00:01:27.840
might be causing the delay and this can
 

00:01:27.840 --> 00:01:30.020
might be causing the delay and this can
be done by inserting trace commands at

00:01:30.020 --> 00:01:30.030
be done by inserting trace commands at
 

00:01:30.030 --> 00:01:32.359
be done by inserting trace commands at
various parts of your code when you do

00:01:32.359 --> 00:01:32.369
various parts of your code when you do
 

00:01:32.369 --> 00:01:33.980
various parts of your code when you do
this the timing between the begin

00:01:33.980 --> 00:01:33.990
this the timing between the begin
 

00:01:33.990 --> 00:01:35.870
this the timing between the begin
section and end sections will be logged

00:01:35.870 --> 00:01:35.880
section and end sections will be logged
 

00:01:35.880 --> 00:01:37.730
section and end sections will be logged
and then displayed in your sisterís

00:01:37.730 --> 00:01:37.740
and then displayed in your sisterís
 

00:01:37.740 --> 00:01:39.530
and then displayed in your sisterís
captures so that you can see more

00:01:39.530 --> 00:01:39.540
captures so that you can see more
 

00:01:39.540 --> 00:01:41.179
captures so that you can see more
information about where your time is

00:01:41.179 --> 00:01:41.189
information about where your time is
 

00:01:41.189 --> 00:01:43.850
information about where your time is
going now if you found that your load

00:01:43.850 --> 00:01:43.860
going now if you found that your load
 

00:01:43.860 --> 00:01:46.460
going now if you found that your load
time is taking too long hopefully you've

00:01:46.460 --> 00:01:46.470
time is taking too long hopefully you've
 

00:01:46.470 --> 00:01:47.899
time is taking too long hopefully you've
been able to narrow it down using the in

00:01:47.899 --> 00:01:47.909
been able to narrow it down using the in
 

00:01:47.909 --> 00:01:50.149
been able to narrow it down using the in
line tracing code if not here's a couple

00:01:50.149 --> 00:01:50.159
line tracing code if not here's a couple
 

00:01:50.159 --> 00:01:51.830
line tracing code if not here's a couple
of common problems and how to address

00:01:51.830 --> 00:01:51.840
of common problems and how to address
 

00:01:51.840 --> 00:01:54.319
of common problems and how to address
them firstly the most common problem we

00:01:54.319 --> 00:01:54.329
them firstly the most common problem we
 

00:01:54.329 --> 00:01:56.600
them firstly the most common problem we
see with slow activity loads has to be

00:01:56.600 --> 00:01:56.610
see with slow activity loads has to be
 

00:01:56.610 --> 00:01:59.120
see with slow activity loads has to be
the time it takes to inflate a view

00:01:59.120 --> 00:01:59.130
the time it takes to inflate a view
 

00:01:59.130 --> 00:02:01.550
the time it takes to inflate a view
hierarchy see the larger your hierarchy

00:02:01.550 --> 00:02:01.560
hierarchy see the larger your hierarchy
 

00:02:01.560 --> 00:02:03.440
hierarchy see the larger your hierarchy
the more time it's taken to inflate it

00:02:03.440 --> 00:02:03.450
the more time it's taken to inflate it
 

00:02:03.450 --> 00:02:05.630
the more time it's taken to inflate it
and the more bitmaps or resources it

00:02:05.630 --> 00:02:05.640
and the more bitmaps or resources it
 

00:02:05.640 --> 00:02:07.910
and the more bitmaps or resources it
requires to load also adds to it loads

00:02:07.910 --> 00:02:07.920
requires to load also adds to it loads
 

00:02:07.920 --> 00:02:10.160
requires to load also adds to it loads
time as such anything you can do to

00:02:10.160 --> 00:02:10.170
time as such anything you can do to
 

00:02:10.170 --> 00:02:12.110
time as such anything you can do to
flatten the hierarchy reduce complexity

00:02:12.110 --> 00:02:12.120
flatten the hierarchy reduce complexity
 

00:02:12.120 --> 00:02:13.790
flatten the hierarchy reduce complexity
or stub out portions that aren't visible

00:02:13.790 --> 00:02:13.800
or stub out portions that aren't visible
 

00:02:13.800 --> 00:02:15.650
or stub out portions that aren't visible
right now will help to reduce the time

00:02:15.650 --> 00:02:15.660
right now will help to reduce the time
 

00:02:15.660 --> 00:02:17.480
right now will help to reduce the time
spent doing this work at the creation

00:02:17.480 --> 00:02:17.490
spent doing this work at the creation
 

00:02:17.490 --> 00:02:19.730
spent doing this work at the creation
time of your activity secondly try to

00:02:19.730 --> 00:02:19.740
time of your activity secondly try to
 

00:02:19.740 --> 00:02:21.560
time of your activity secondly try to
structure your code to rely on lazy

00:02:21.560 --> 00:02:21.570
structure your code to rely on lazy
 

00:02:21.570 --> 00:02:24.080
structure your code to rely on lazy
loading and async processing as much as

00:02:24.080 --> 00:02:24.090
loading and async processing as much as
 

00:02:24.090 --> 00:02:26.990
loading and async processing as much as
possible commonly the oncreate method of

00:02:26.990 --> 00:02:27.000
possible commonly the oncreate method of
 

00:02:27.000 --> 00:02:28.820
possible commonly the oncreate method of
your activity becomes a junk drawer for

00:02:28.820 --> 00:02:28.830
your activity becomes a junk drawer for
 

00:02:28.830 --> 00:02:30.440
your activity becomes a junk drawer for
all sorts of different initialization

00:02:30.440 --> 00:02:30.450
all sorts of different initialization
 

00:02:30.450 --> 00:02:32.600
all sorts of different initialization
routines some of those things do need to

00:02:32.600 --> 00:02:32.610
routines some of those things do need to
 

00:02:32.610 --> 00:02:34.580
routines some of those things do need to
happen right now others can be delayed

00:02:34.580 --> 00:02:34.590
happen right now others can be delayed
 

00:02:34.590 --> 00:02:36.260
happen right now others can be delayed
until later this includes things like

00:02:36.260 --> 00:02:36.270
until later this includes things like
 

00:02:36.270 --> 00:02:37.760
until later this includes things like
doing additional minimum loading of your

00:02:37.760 --> 00:02:37.770
doing additional minimum loading of your
 

00:02:37.770 --> 00:02:39.770
doing additional minimum loading of your
hierarchy loading all of your initial

00:02:39.770 --> 00:02:39.780
hierarchy loading all of your initial
 

00:02:39.780 --> 00:02:42.200
hierarchy loading all of your initial
images in an async fashion and waiting

00:02:42.200 --> 00:02:42.210
images in an async fashion and waiting
 

00:02:42.210 --> 00:02:44.150
images in an async fashion and waiting
to initialize heavy so systems until

00:02:44.150 --> 00:02:44.160
to initialize heavy so systems until
 

00:02:44.160 --> 00:02:45.940
to initialize heavy so systems until
they are absolutely needed

00:02:45.940 --> 00:02:45.950
they are absolutely needed
 

00:02:45.950 --> 00:02:48.620
they are absolutely needed
really the lazier you can make the

00:02:48.620 --> 00:02:48.630
really the lazier you can make the
 

00:02:48.630 --> 00:02:50.150
really the lazier you can make the
creation and loading of your activity

00:02:50.150 --> 00:02:50.160
creation and loading of your activity
 

00:02:50.160 --> 00:02:52.340
creation and loading of your activity
the better your performance will be but

00:02:52.340 --> 00:02:52.350
the better your performance will be but
 

00:02:52.350 --> 00:02:54.020
the better your performance will be but
that doesn't mean you need to be lazy

00:02:54.020 --> 00:02:54.030
that doesn't mean you need to be lazy
 

00:02:54.030 --> 00:02:55.730
that doesn't mean you need to be lazy
about the rest of your application

00:02:55.730 --> 00:02:55.740
about the rest of your application
 

00:02:55.740 --> 00:02:57.140
about the rest of your application
performance which is why you should

00:02:57.140 --> 00:02:57.150
performance which is why you should
 

00:02:57.150 --> 00:02:58.280
performance which is why you should
check out the rest of the Android

00:02:58.280 --> 00:02:58.290
check out the rest of the Android
 

00:02:58.290 --> 00:03:00.050
check out the rest of the Android
performance patterns videos and don't

00:03:00.050 --> 00:03:00.060
performance patterns videos and don't
 

00:03:00.060 --> 00:03:01.970
performance patterns videos and don't
forget to join our Google+ community too

00:03:01.970 --> 00:03:01.980
forget to join our Google+ community too
 

00:03:01.980 --> 00:03:04.430
forget to join our Google+ community too
so keep calm profile your code and

00:03:04.430 --> 00:03:04.440
so keep calm profile your code and
 

00:03:04.440 --> 00:03:08.030
so keep calm profile your code and
always remember perf matters

