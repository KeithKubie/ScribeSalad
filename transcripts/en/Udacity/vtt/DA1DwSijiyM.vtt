WEBVTT
Kind: captions
Language: en

00:00:00.490 --> 00:00:04.310
So now we know about the when,
what, and how of adaptive design.

00:00:04.310 --> 00:00:07.330
Let's look back at those
suboptimal tablet UIs, and

00:00:07.330 --> 00:00:09.650
see what we can do to improve them.

00:00:09.650 --> 00:00:14.070
So this Gmailesque example previously
let's uncomfortable reading experiences

00:00:14.070 --> 00:00:16.270
on wider screens.

00:00:16.270 --> 00:00:21.120
We can use the divide pattern to show
message details on larger devices,

00:00:21.120 --> 00:00:23.320
to make better use of the space, and

00:00:23.320 --> 00:00:28.310
contain either column from becoming
too wide, and uncomfortable to read.

00:00:28.310 --> 00:00:31.460
Here we're capping the list
at a maximum width, and

00:00:31.460 --> 00:00:35.270
then filling the remaining
space with the message details.

00:00:35.270 --> 00:00:40.110
Notice that we are also using the expand
pattern within the message details.

00:00:40.110 --> 00:00:43.510
Where it also caps the body
at a maximum width,

00:00:43.510 --> 00:00:48.420
to ensure a comfortable reading, by
introducing margins beyond that point.

00:00:48.420 --> 00:00:51.540
This adaptation could
also help with context.

00:00:51.540 --> 00:00:55.080
We can read a message within
the larger context of other emails.

00:00:55.080 --> 00:00:57.150
For example,
seeing if a new message comes in.

00:00:58.210 --> 00:01:00.270
If we don't have more
content that we can reveal,

00:01:00.270 --> 00:01:02.650
then we can restrict
the width of the surface.

00:01:02.650 --> 00:01:06.050
And use generous margins to stop
it from becoming unbalanced.

00:01:06.050 --> 00:01:08.800
Before this example felt
unbalanced on larger devices,

00:01:08.800 --> 00:01:11.600
leaving large areas of white space.

00:01:11.600 --> 00:01:16.310
We can apply the extend pattern,
and introduce this new surface,

00:01:16.310 --> 00:01:19.110
to contain the form on larger screens.

00:01:19.110 --> 00:01:20.750
We center this surface, and

00:01:20.750 --> 00:01:24.680
apply generous margins within it,
to maintain balance.

00:01:24.680 --> 00:01:28.710
In our last example, we previously had a
number of issues with unbalanced layout,

00:01:28.710 --> 00:01:31.790
overly wide buttons, and
poor use of imagery.

00:01:31.790 --> 00:01:37.370
When adapting to wider devices, we can
set a maximum width on the buttons.

00:01:37.370 --> 00:01:40.270
And here, we reflow them to the right,

00:01:40.270 --> 00:01:42.530
preventing them from
reaching awkward sizes.

00:01:42.530 --> 00:01:44.810
We can also use the expand
pattern on the content,

00:01:44.810 --> 00:01:48.450
to center on its own surface,
beyond a certain width.

00:01:48.450 --> 00:01:52.690
And lastly, we switch to a more
immersive image position,

00:01:52.690 --> 00:01:55.900
with the content overlapping it,
to prevent the issues we saw before.

