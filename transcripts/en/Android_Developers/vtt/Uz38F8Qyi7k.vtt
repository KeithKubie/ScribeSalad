WEBVTT
Kind: captions
Language: en

00:00:00.060 --> 00:00:01.560
RAJ AJRAWAT: My
name is Raj Ajrawat.

00:00:01.560 --> 00:00:04.170
I'm a product specialist
here at Google

00:00:04.170 --> 00:00:05.910
for the Android platform.

00:00:05.910 --> 00:00:08.550
And today, I'll be sharing
with you some key updates

00:00:08.550 --> 00:00:10.570
from the Android
Instant Apps team,

00:00:10.570 --> 00:00:12.660
including a lot of
the efforts that we're

00:00:12.660 --> 00:00:15.510
doing to scale the
product as well as sharing

00:00:15.510 --> 00:00:18.000
details and best practices
and key learnings

00:00:18.000 --> 00:00:21.600
from a lot of our partners who
have launched Instant Apps.

00:00:21.600 --> 00:00:23.400
At the end, I'll
introduce Jean on stage,

00:00:23.400 --> 00:00:26.340
and we'll have them talk
about a lot of the work

00:00:26.340 --> 00:00:28.560
that they did to actually
get their instant app up

00:00:28.560 --> 00:00:29.730
and running.

00:00:29.730 --> 00:00:33.770
And hopefully we can learn
from what they did as well.

00:00:33.770 --> 00:00:36.610
So let's start by actually
reviewing a lot of the work

00:00:36.610 --> 00:00:40.660
that our team has done
up until this point.

00:00:40.660 --> 00:00:43.600
As I'm sure you all know,
Android Instant Apps

00:00:43.600 --> 00:00:47.980
officially launched back
at Google IO in May.

00:00:47.980 --> 00:00:50.170
Any developer can now
build an instant app

00:00:50.170 --> 00:00:53.440
and publish that instant
app to the Play Store.

00:00:53.440 --> 00:00:55.210
And what's been
really exciting for me

00:00:55.210 --> 00:00:57.790
is to actually
see apps in places

00:00:57.790 --> 00:01:01.600
that they really
weren't ever in before.

00:01:01.600 --> 00:01:04.530
You can see things
like previously,

00:01:04.530 --> 00:01:05.920
the Play Store
was the gatekeeper

00:01:05.920 --> 00:01:08.170
to all the traffic
and engagement

00:01:08.170 --> 00:01:09.970
that you had as a developer.

00:01:09.970 --> 00:01:12.700
Or you had to configure
very complex deep links

00:01:12.700 --> 00:01:15.790
to get users inside
your native experience.

00:01:15.790 --> 00:01:18.100
But users are now
actually accessing

00:01:18.100 --> 00:01:19.630
your native
experience across all

00:01:19.630 --> 00:01:22.600
of these different
services, from Google search

00:01:22.600 --> 00:01:26.560
to email and messaging,
and even from Twitter.

00:01:26.560 --> 00:01:29.110
I'm also really happy to
announce that we've now

00:01:29.110 --> 00:01:32.850
enabled over 800 million
devices globally for Instant

00:01:32.850 --> 00:01:36.910
Apps, which is actually well
over the 500 million devices

00:01:36.910 --> 00:01:40.030
that we enabled only
just eight weeks ago.

00:01:40.030 --> 00:01:44.440
So we're actually accelerating
a lot of the Instant App usage

00:01:44.440 --> 00:01:47.920
that users are able to access,
and we're really working hard

00:01:47.920 --> 00:01:51.280
to make sure that users are able
to experience these Instant App

00:01:51.280 --> 00:01:54.500
experiences.

00:01:54.500 --> 00:01:57.290
Now, looking at all
of these new services

00:01:57.290 --> 00:01:59.870
to drive users into
your Instant App,

00:01:59.870 --> 00:02:01.460
we asked ourselves
what could we be

00:02:01.460 --> 00:02:04.820
doing on Play to actually
help drive your users

00:02:04.820 --> 00:02:06.570
to those experiences.

00:02:06.570 --> 00:02:10.070
That's why I'm really happy to
announce the Try Now button.

00:02:10.070 --> 00:02:12.680
For Instant Apps that
have a default URL,

00:02:12.680 --> 00:02:15.770
users will be able to
navigate to your Instant app

00:02:15.770 --> 00:02:19.010
from your Play Store listing.

00:02:19.010 --> 00:02:22.820
Here you can see the Try
Now button for Skyscanner.

00:02:22.820 --> 00:02:25.100
When a user taps on
the Try Now button,

00:02:25.100 --> 00:02:28.430
they are taken to the
Skyscanner Instant App.

00:02:28.430 --> 00:02:31.320
Users are still able to
install your full app.

00:02:31.320 --> 00:02:33.004
Nothing is going to
change with that.

00:02:33.004 --> 00:02:34.670
And in fact, we're
seeing that we're not

00:02:34.670 --> 00:02:38.480
seeing any cannibalization
from that experience, either.

00:02:38.480 --> 00:02:41.240
We're really excited about
this initial bit of results.

00:02:41.240 --> 00:02:43.400
This is still in
experimentation,

00:02:43.400 --> 00:02:45.560
but it should be rolling
out, hopefully, very soon.

00:02:48.282 --> 00:02:50.240
The other piece that I
want to talk about, too,

00:02:50.240 --> 00:02:52.490
on the platform side
is that we're also

00:02:52.490 --> 00:02:55.730
making it really easy for
users to engage and discover

00:02:55.730 --> 00:02:58.520
these Instant App experiences
from Android, which

00:02:58.520 --> 00:03:00.800
is why we've integrated
on the Launcher,

00:03:00.800 --> 00:03:02.330
and we're also
adding the feature

00:03:02.330 --> 00:03:04.700
to pin your Instant App to home.

00:03:04.700 --> 00:03:07.280
The idea behind this is
to basically give users

00:03:07.280 --> 00:03:10.580
more abilities to interact with
your Instant App experience

00:03:10.580 --> 00:03:12.080
and ensure that
users are actually

00:03:12.080 --> 00:03:15.630
able to experience these
across all these new surfaces.

00:03:15.630 --> 00:03:17.672
This is rolling out as
part of the latest O

00:03:17.672 --> 00:03:19.880
update that's going to be
happening in the next month

00:03:19.880 --> 00:03:20.781
or so.

00:03:20.781 --> 00:03:22.280
So by the end of
the year, we expect

00:03:22.280 --> 00:03:25.045
users to actually be able
to access this on O devices.

00:03:28.490 --> 00:03:31.590
Now, in order to make all
these features work for you,

00:03:31.590 --> 00:03:35.300
you'll need to set up what we
call a canonical landing page.

00:03:35.300 --> 00:03:37.610
This ensures that when
users come to your Instant

00:03:37.610 --> 00:03:41.660
App via a button like Try
Now or through the launcher

00:03:41.660 --> 00:03:44.110
integration that I just
showed you on the screen,

00:03:44.110 --> 00:03:47.300
they'll have, essentially,
like a home screen experience.

00:03:47.300 --> 00:03:49.509
Previously, when users would
tap on your Instant App,

00:03:49.509 --> 00:03:51.300
they'd tap on a deep
link, and then they're

00:03:51.300 --> 00:03:52.850
taken to a very
particular moment,

00:03:52.850 --> 00:03:56.750
such as watching a video
or booking a restaurant.

00:03:56.750 --> 00:03:58.670
But with this
default URL, they're

00:03:58.670 --> 00:04:02.660
now able to access a home screen
experience on your Instant App.

00:04:02.660 --> 00:04:05.270
Skyscanner, One
Football, Red Bull TV--

00:04:05.270 --> 00:04:07.430
all of these apps have
canonical landing pages,

00:04:07.430 --> 00:04:09.920
and it's really easy to
set up in the manifest.

00:04:09.920 --> 00:04:12.470
And we encourage all of you,
as you're building your Instant

00:04:12.470 --> 00:04:15.024
App, to set up a
default URL to take

00:04:15.024 --> 00:04:17.149
advantage of these new
services that are coming up.

00:04:21.389 --> 00:04:23.180
So the team and I are
very happy with a lot

00:04:23.180 --> 00:04:24.650
of the progress
that we are seeing

00:04:24.650 --> 00:04:27.539
and the scale we've
achieved with the product.

00:04:27.539 --> 00:04:30.080
But I'm going to shift gears a
little bit and talk about some

00:04:30.080 --> 00:04:31.765
of the best practices
and key learnings

00:04:31.765 --> 00:04:33.890
from many of the partners
that we're seeing who are

00:04:33.890 --> 00:04:37.730
live within Instant Apps today.

00:04:37.730 --> 00:04:40.290
We've talked to hundreds of
developers around the world.

00:04:40.290 --> 00:04:42.734
And I've been involved in a
lot of those conversations,

00:04:42.734 --> 00:04:44.900
so I can say it's definitely
been a lot of developer

00:04:44.900 --> 00:04:46.910
conversations.

00:04:46.910 --> 00:04:48.980
And in many cases,
the first conversation

00:04:48.980 --> 00:04:52.670
that we always have is all
about what is your use case.

00:04:52.670 --> 00:04:55.640
What do you want a
user to do when they're

00:04:55.640 --> 00:04:57.950
in your native experience
now that they don't have

00:04:57.950 --> 00:05:00.579
to actually install your app?

00:05:00.579 --> 00:05:02.870
Do you want to increase the
conversion on your shopping

00:05:02.870 --> 00:05:04.280
cart?

00:05:04.280 --> 00:05:07.100
Do you want to get people
to watch more videos?

00:05:07.100 --> 00:05:09.620
Jet was able to actually
increase their conversions

00:05:09.620 --> 00:05:14.090
by 27%, and Vimeo
saw 130% increase

00:05:14.090 --> 00:05:17.150
in engagement with their
videos just by having users

00:05:17.150 --> 00:05:19.460
drive into their Instant App.

00:05:19.460 --> 00:05:21.830
Understanding your use case
and what you want to achieve

00:05:21.830 --> 00:05:24.650
is critical to understanding
the kinds of user journeys

00:05:24.650 --> 00:05:27.680
that you want to create for
your Instant App experience.

00:05:30.740 --> 00:05:32.990
I'm also happy to see that
developers are actually

00:05:32.990 --> 00:05:35.450
building new
Android apps and are

00:05:35.450 --> 00:05:38.000
thinking about Instant
Apps from day one.

00:05:38.000 --> 00:05:41.870
The concept of modularizing
your code is not something new.

00:05:41.870 --> 00:05:44.580
Everyone in the audience has
been thinking about that.

00:05:44.580 --> 00:05:47.630
But as Instant Apps become
more embedded in the Android

00:05:47.630 --> 00:05:50.000
platform, it's
imperative to think

00:05:50.000 --> 00:05:52.250
about modularization
and Instant Apps

00:05:52.250 --> 00:05:54.830
as one before you
start building.

00:05:54.830 --> 00:05:58.100
Hit List up here had
modularization and Instant Apps

00:05:58.100 --> 00:06:00.890
in mind when they started
Android development only eight

00:06:00.890 --> 00:06:02.150
weeks ago.

00:06:02.150 --> 00:06:05.030
As a result, they had a working
prototype of their Instant App

00:06:05.030 --> 00:06:07.064
experience in under six weeks.

00:06:07.064 --> 00:06:08.480
And we expect them
to actually get

00:06:08.480 --> 00:06:10.970
to full launch in
the next two weeks.

00:06:13.720 --> 00:06:16.270
Now, a key portion
of the work involved

00:06:16.270 --> 00:06:18.250
in building your
Instant App is actually

00:06:18.250 --> 00:06:21.700
building the modules for each
of the Instant App experiences.

00:06:21.700 --> 00:06:23.980
I'm happy to announce,
as part of the latest SDK

00:06:23.980 --> 00:06:26.440
release, which just
went out a week ago,

00:06:26.440 --> 00:06:30.010
we've recently enabled
configuration APKs as well as

00:06:30.010 --> 00:06:34.190
launching a shared
library support in Q4.

00:06:34.190 --> 00:06:38.110
Now, configuration APKs
separate APK resources

00:06:38.110 --> 00:06:40.870
for pictures,
strings, layout files

00:06:40.870 --> 00:06:45.520
based on device architecture,
language, and screen density.

00:06:45.520 --> 00:06:48.670
That allows you to generate
config splits according

00:06:48.670 --> 00:06:51.670
to your specific needs,
ensuring users only get

00:06:51.670 --> 00:06:54.700
a single set of resources
for any single Instant App

00:06:54.700 --> 00:06:56.080
experience.

00:06:56.080 --> 00:06:59.720
For example, if the APK has
English, French, Spanish,

00:06:59.720 --> 00:07:03.340
and Italian resources
inside, and the end user

00:07:03.340 --> 00:07:06.340
is using a Spanish
device, Play is only

00:07:06.340 --> 00:07:08.470
going to deliver the
Spanish resources

00:07:08.470 --> 00:07:13.510
to that particular user, saving
you space on your actual module

00:07:13.510 --> 00:07:18.050
that you can use for your own
experiences and for your code.

00:07:18.050 --> 00:07:20.110
Additionally, in speaking
to a lot of partners

00:07:20.110 --> 00:07:22.090
live with Instant
Apps, they found

00:07:22.090 --> 00:07:24.370
that there was a lot of
low-hanging fruit in terms

00:07:24.370 --> 00:07:26.770
of simple optimizations
for reducing

00:07:26.770 --> 00:07:31.090
APK size, such as removing
unused assets that were simply

00:07:31.090 --> 00:07:34.630
not needed for their Instant App
as well as compressing pictures

00:07:34.630 --> 00:07:37.240
using technologies like WebP.

00:07:37.240 --> 00:07:39.310
Many partners viewed
the refactoring work

00:07:39.310 --> 00:07:41.830
as a part of a larger
[INAUDIBLE] exercise

00:07:41.830 --> 00:07:45.520
and were able to rework their
code base with a modular code

00:07:45.520 --> 00:07:47.680
structure in mind.

00:07:47.680 --> 00:07:49.900
Last, our team is
actually in the process

00:07:49.900 --> 00:07:52.090
of testing shared
library support,

00:07:52.090 --> 00:07:54.820
and we expect that
to go live in Q4.

00:07:54.820 --> 00:07:57.400
The idea here is to help
with module size limits

00:07:57.400 --> 00:08:00.040
by allowing you
to reuse code that

00:08:00.040 --> 00:08:02.380
would be helpful
for shared resources

00:08:02.380 --> 00:08:05.500
across your different
Instant App experiences.

00:08:05.500 --> 00:08:08.530
The idea here is for us to
help reduce latency for the end

00:08:08.530 --> 00:08:10.900
user, but also make sure
that you have plenty

00:08:10.900 --> 00:08:14.020
of available space to stay
within the module size limit

00:08:14.020 --> 00:08:15.449
to deliver whatever
experience you

00:08:15.449 --> 00:08:16.615
want to have for your users.

00:08:20.900 --> 00:08:23.440
Now, we're really
bullish on Instant Apps

00:08:23.440 --> 00:08:26.470
because we're excited about all
the new user interactions that

00:08:26.470 --> 00:08:29.400
are actually coming
up that this has

00:08:29.400 --> 00:08:31.390
enabled for you as partners.

00:08:31.390 --> 00:08:34.990
We're starting to see a few
key UX considerations emerge

00:08:34.990 --> 00:08:37.679
as we've talked to partners
who have gone live with Instant

00:08:37.679 --> 00:08:39.970
Apps, and we want to make
sure that we share those best

00:08:39.970 --> 00:08:42.460
practices with you guys.

00:08:42.460 --> 00:08:46.060
Now, a lot of our partners are
reconsidering their success

00:08:46.060 --> 00:08:47.140
metrics.

00:08:47.140 --> 00:08:49.390
As an industry and
as an ecosystem,

00:08:49.390 --> 00:08:52.390
for the past nine years,
we've been simply talking

00:08:52.390 --> 00:08:54.837
about installs constantly.

00:08:54.837 --> 00:08:56.920
That's not to say that
we're going to change that.

00:08:56.920 --> 00:09:00.010
But remember now that as
you remove the install, ask

00:09:00.010 --> 00:09:03.400
yourself, what do I really
want the user to achieve

00:09:03.400 --> 00:09:04.700
post-install?

00:09:04.700 --> 00:09:06.340
Do I want them to buy a ticket?

00:09:06.340 --> 00:09:08.260
Do I want them to
book a restaurant?

00:09:08.260 --> 00:09:11.680
Do I want them to send a
message, watch a video?

00:09:11.680 --> 00:09:14.410
You have the user
captured at that moment.

00:09:14.410 --> 00:09:18.951
So look at that KPI as
your biggest metric now.

00:09:18.951 --> 00:09:20.950
Partners who have been
able to use the same code

00:09:20.950 --> 00:09:23.500
base in a project are
also seeing benefits

00:09:23.500 --> 00:09:25.150
in terms of code maintenance.

00:09:25.150 --> 00:09:27.010
A lot of our early
partners actually

00:09:27.010 --> 00:09:30.460
built a separate code base
specifically for Instant Apps

00:09:30.460 --> 00:09:32.170
just to get their
feet wet, just to see

00:09:32.170 --> 00:09:34.030
what the experience was like.

00:09:34.030 --> 00:09:36.010
But actually, a lot of
them have moved over

00:09:36.010 --> 00:09:37.630
to reusing a lot
of the same code

00:09:37.630 --> 00:09:40.390
that they have in their
fully-installed experience

00:09:40.390 --> 00:09:43.420
in order to make sure that
their code is in sync and also

00:09:43.420 --> 00:09:46.600
their user experiences
are in sync.

00:09:46.600 --> 00:09:48.280
Some of the best
partner experiences

00:09:48.280 --> 00:09:51.280
ensure that they don't
interfere with task completion.

00:09:51.280 --> 00:09:53.530
Now, this is a really
big one because you

00:09:53.530 --> 00:09:56.332
have to remember when
a user taps on a URL,

00:09:56.332 --> 00:09:57.790
they're not asking
themselves, am I

00:09:57.790 --> 00:09:59.980
going to a native experience
or an installed app

00:09:59.980 --> 00:10:02.290
or a mobile web experience.

00:10:02.290 --> 00:10:04.150
They just want to
send a message.

00:10:04.150 --> 00:10:05.650
They just want to
book a restaurant.

00:10:05.650 --> 00:10:07.450
They just want to watch a video.

00:10:07.450 --> 00:10:08.980
So the last thing
you'd want to do

00:10:08.980 --> 00:10:11.830
is to interrupt that
flow for the user

00:10:11.830 --> 00:10:16.330
by asking them to log in to
your app, or create an account,

00:10:16.330 --> 00:10:18.280
or go through some
sort of tutorial.

00:10:18.280 --> 00:10:21.800
You never want to actually
break a user flow post-install.

00:10:21.800 --> 00:10:23.590
And you'll find a
lot of better results

00:10:23.590 --> 00:10:27.040
once you allow the user to
complete a full journey.

00:10:27.040 --> 00:10:31.090
And last, remember to maintain
the user state from Instant App

00:10:31.090 --> 00:10:33.010
into the installed app.

00:10:33.010 --> 00:10:35.350
There are some updates
in the latest SDK where

00:10:35.350 --> 00:10:37.060
we allow you to
actually carry over

00:10:37.060 --> 00:10:39.070
a lot more detail
from your Instant App

00:10:39.070 --> 00:10:40.540
into the installed app.

00:10:40.540 --> 00:10:43.680
So you can imagine, as a user
is interacting with your Instant

00:10:43.680 --> 00:10:46.000
App, you're actually able
to take a lot of the data

00:10:46.000 --> 00:10:47.620
that you gathered from there--

00:10:47.620 --> 00:10:50.050
Raj watched a
certain video, or he

00:10:50.050 --> 00:10:52.970
made a certain message, or
something along those lines--

00:10:52.970 --> 00:10:54.850
and then provide me
with a warm install

00:10:54.850 --> 00:10:56.470
once I actually install the app.

00:11:05.941 --> 00:11:06.440
Cool.

00:11:06.440 --> 00:11:07.770
Sorry.

00:11:07.770 --> 00:11:08.270
All right.

00:11:08.270 --> 00:11:10.850
So all of the items that I
pointed out on the last slide

00:11:10.850 --> 00:11:14.012
are aimed at simply
reducing friction on mobile.

00:11:14.012 --> 00:11:16.220
We set about building Android
Instant Apps because we

00:11:16.220 --> 00:11:17.840
felt the friction
from installing

00:11:17.840 --> 00:11:20.360
an app was simply unnecessary.

00:11:20.360 --> 00:11:22.820
In a similar vein,
we provide tools

00:11:22.820 --> 00:11:26.210
like Smart Lock for passwords as
well as the new Google Payment

00:11:26.210 --> 00:11:30.050
API to reduce friction
on authentication as well

00:11:30.050 --> 00:11:32.000
as on payments.

00:11:32.000 --> 00:11:35.810
Now I'd like to invite Jean from
LaFourchette up to the stage

00:11:35.810 --> 00:11:39.530
to talk about his experiences
with building an Instant app.

00:11:39.530 --> 00:11:41.920
Please join me in
welcoming Jean.

00:11:41.920 --> 00:11:44.295
[APPLAUSE]

00:11:49.520 --> 00:11:50.400
JEAN OKECKI: Hi.

00:11:50.400 --> 00:11:52.140
I'm very happy to be here.

00:11:52.140 --> 00:11:53.220
My name is Jean.

00:11:53.220 --> 00:11:57.520
I'm responsible for the
apps at LaFourchette.

00:11:57.520 --> 00:12:01.220
LaFourchette is a
restaurant booking company.

00:12:01.220 --> 00:12:05.290
We are present in 11 countries,
mostly across Europe.

00:12:05.290 --> 00:12:08.570
And as a company,
our goal is pretty

00:12:08.570 --> 00:12:11.240
simple-- it's connecting
the right restaurant

00:12:11.240 --> 00:12:13.860
to the right customer
at the right time.

00:12:13.860 --> 00:12:17.150
So in other words, it's
reducing that friction

00:12:17.150 --> 00:12:19.290
that you may have when
booking restaurants.

00:12:19.290 --> 00:12:20.780
We're reducing
that friction which

00:12:20.780 --> 00:12:24.320
is calling the restaurant,
waiting for it to be opened,

00:12:24.320 --> 00:12:26.630
waiting for someone
to answer, and then

00:12:26.630 --> 00:12:31.440
having to talk to someone who's
busy answering other clients.

00:12:31.440 --> 00:12:34.490
So you'd be really
surprised to know

00:12:34.490 --> 00:12:38.720
how many people still call
the restaurants to book

00:12:38.720 --> 00:12:39.970
a reservation.

00:12:39.970 --> 00:12:42.197
And we thought Instant
App was a good way

00:12:42.197 --> 00:12:43.280
of reducing that friction.

00:12:46.360 --> 00:12:48.150
So the use case--

00:12:48.150 --> 00:12:49.810
Raj made it very clear.

00:12:49.810 --> 00:12:53.670
It's very important to
rightly select your use case.

00:12:53.670 --> 00:12:57.510
And for us, our key success
metric is the booking.

00:12:57.510 --> 00:13:01.450
This is basically
how we are evaluated,

00:13:01.450 --> 00:13:04.140
and this is, in the
end, how we make money.

00:13:04.140 --> 00:13:07.260
So when we make
product decisions,

00:13:07.260 --> 00:13:10.630
we always optimize for bookings.

00:13:10.630 --> 00:13:12.750
So when we looked
at Instant Apps,

00:13:12.750 --> 00:13:16.960
we looked at our
mobile web traffic.

00:13:16.960 --> 00:13:19.170
And when you look at this
data, what you find out

00:13:19.170 --> 00:13:24.810
is that a huge majority of
our traffic comes from Google

00:13:24.810 --> 00:13:26.550
and comes from
people who directly

00:13:26.550 --> 00:13:30.120
type the name of a
restaurant in Google.

00:13:30.120 --> 00:13:32.764
So we recognize that,
for this group of users,

00:13:32.764 --> 00:13:34.680
they already know the
name of the restaurants.

00:13:34.680 --> 00:13:37.800
They know the number of
people that will go there.

00:13:37.800 --> 00:13:39.060
They know the date.

00:13:39.060 --> 00:13:40.770
They know the hour, et cetera.

00:13:40.770 --> 00:13:43.140
So we don't want
them to download

00:13:43.140 --> 00:13:45.590
the app to sign
up for an account,

00:13:45.590 --> 00:13:47.190
to search the restaurant again.

00:13:47.190 --> 00:13:50.940
That's way too much of a
hassle for a first experience

00:13:50.940 --> 00:13:52.870
with our brand.

00:13:52.870 --> 00:13:55.740
So in this context,
Instant Apps allowed

00:13:55.740 --> 00:14:00.840
us to allow the user to
perform the action directly.

00:14:00.840 --> 00:14:04.760
He just searches for the
restaurant, makes the booking,

00:14:04.760 --> 00:14:06.570
and it's done.

00:14:06.570 --> 00:14:11.400
It was really an opportunity to
improve our key metric again ,

00:14:11.400 --> 00:14:12.600
which is the bookings.

00:14:17.090 --> 00:14:17.690
How did it go?

00:14:20.820 --> 00:14:26.570
So back in March, when we joined
the Instant App Early Access

00:14:26.570 --> 00:14:29.370
program, Google
asked us one thing,

00:14:29.370 --> 00:14:33.320
which was to be ready
before Google I/O.

00:14:33.320 --> 00:14:35.690
And that left us
with three weeks.

00:14:35.690 --> 00:14:39.710
That's really not a
lot for two reasons,

00:14:39.710 --> 00:14:41.750
and those were our
two big challenges

00:14:41.750 --> 00:14:43.890
that ended up as opportunities.

00:14:43.890 --> 00:14:47.120
The first one is the
legacy code of our app.

00:14:47.120 --> 00:14:49.610
Especially for the booking
flow, it was full legacy.

00:14:49.610 --> 00:14:53.950
And as you know, Instant App are
all about modular architecture,

00:14:53.950 --> 00:14:56.840
modular code, which means
that the feature should

00:14:56.840 --> 00:14:59.098
be able to run independently.

00:15:01.910 --> 00:15:02.870
That was pretty scary.

00:15:02.870 --> 00:15:05.480
But in the end, it
was rather fast.

00:15:05.480 --> 00:15:07.130
We decided to
start from scratch,

00:15:07.130 --> 00:15:10.210
and we developed
the booking process.

00:15:10.210 --> 00:15:12.560
And in less than two
weeks, that was done.

00:15:15.090 --> 00:15:20.215
Also, because we started
modularizing our app,

00:15:20.215 --> 00:15:23.310
we found out all of the
advantages that proved to us.

00:15:23.310 --> 00:15:26.370
And now every new feature
that we are developing

00:15:26.370 --> 00:15:28.890
is based on this new
modular architecture, which

00:15:28.890 --> 00:15:32.400
means that turning those
features into Instant App

00:15:32.400 --> 00:15:35.410
is very, very quick, and
it's almost painless.

00:15:35.410 --> 00:15:38.130
So if your features
are already modular,

00:15:38.130 --> 00:15:40.370
this wouldn't cost you much.

00:15:40.370 --> 00:15:42.750
And if they're not, it's
really an opportunity

00:15:42.750 --> 00:15:45.380
to modularize your code.

00:15:45.380 --> 00:15:47.230
The second challenge
was the size.

00:15:47.230 --> 00:15:50.500
So your Instant App shouldn't
be more than four megabytes.

00:15:50.500 --> 00:15:53.230
And in those four megabytes,
you have shared resources which

00:15:53.230 --> 00:15:55.870
are not directly your feature.

00:15:55.870 --> 00:16:01.270
So we had to find ways to reduce
the size of our Instant App.

00:16:01.270 --> 00:16:06.010
The first thing we did was to
access the libraries we had.

00:16:06.010 --> 00:16:08.470
For instance, we found
out that Fresco was

00:16:08.470 --> 00:16:12.230
a library that was way too big.

00:16:12.230 --> 00:16:14.650
It was almost as big as
the Instant app itself.

00:16:14.650 --> 00:16:15.370
So we removed it.

00:16:15.370 --> 00:16:20.710
We removed this one, and we
replaced it by another one.

00:16:20.710 --> 00:16:26.290
And our main app now
benefits from those changes.

00:16:26.290 --> 00:16:28.390
In terms of designs,
we couldn't,

00:16:28.390 --> 00:16:32.400
with this four-megabyte limit,
have PNGs for design assets.

00:16:32.400 --> 00:16:35.140
So we moved to fully
vectorial assets.

00:16:35.140 --> 00:16:37.774
We asked our design team
to provide us with those.

00:16:37.774 --> 00:16:39.190
And now this is
something we still

00:16:39.190 --> 00:16:42.430
do right now for
our new features,

00:16:42.430 --> 00:16:46.680
and our app benefits from it.

00:16:46.680 --> 00:16:51.290
Results-- because the experience
is better with an Instant App,

00:16:51.290 --> 00:16:53.070
we see a better conversion rate.

00:16:53.070 --> 00:16:56.410
And that's, once
again, key for us.

00:16:56.410 --> 00:16:57.660
Booking is our key metric.

00:16:57.660 --> 00:16:59.690
So when we have an increase
in compression rate,

00:16:59.690 --> 00:17:02.860
this means we get more money.

00:17:02.860 --> 00:17:05.650
Also, we found out that
this allowed us to open

00:17:05.650 --> 00:17:08.920
our experience to new users.

00:17:08.920 --> 00:17:12.220
Because we-- usually,
have about 10%

00:17:12.220 --> 00:17:15.130
of users who book
from a restaurant

00:17:15.130 --> 00:17:17.500
that is not in
their own country,

00:17:17.500 --> 00:17:21.069
because we made the
brand available to people

00:17:21.069 --> 00:17:26.890
who don't know our brand, we now
have this share reaching 30%.

00:17:26.890 --> 00:17:30.580
So it's a good way of reaching
customers who otherwise

00:17:30.580 --> 00:17:32.814
wouldn't go too LaFourchette.

00:17:36.550 --> 00:17:37.180
What's next?

00:17:37.180 --> 00:17:39.860
The first thing we'll do
is optimize the user flow.

00:17:39.860 --> 00:17:43.040
We'll try to reduce
the number of steps.

00:17:43.040 --> 00:17:46.660
Then one key thing
we'd like to make

00:17:46.660 --> 00:17:50.830
is develop the restaurant
page as an Instant App.

00:17:50.830 --> 00:17:53.380
As you understood,
we try to leverage

00:17:53.380 --> 00:17:56.320
the huge volume of traffic
that comes from Google.

00:17:56.320 --> 00:17:59.440
And most of this traffic
is on the restaurant page

00:17:59.440 --> 00:18:02.050
because people type directly
the restaurant name.

00:18:02.050 --> 00:18:04.690
So when we'll manage
to have this restaurant

00:18:04.690 --> 00:18:07.420
page modularized and
available on Instant App,

00:18:07.420 --> 00:18:10.060
we'll be able to offer a full
experience, native experience

00:18:10.060 --> 00:18:12.640
to users without
app installation,

00:18:12.640 --> 00:18:14.380
search for a restaurant
name in Google,

00:18:14.380 --> 00:18:16.750
land on the native
restaurant page

00:18:16.750 --> 00:18:20.980
with a video and a
native map, and then go

00:18:20.980 --> 00:18:23.700
to the native booking flow.

00:18:23.700 --> 00:18:26.740
And then we'd like to
implement canonical page that

00:18:26.740 --> 00:18:30.840
were just announced and
leverage the icon launcher that

00:18:30.840 --> 00:18:34.240
will be available on Android O.

00:18:34.240 --> 00:18:37.040
So in the end, Instant
App brought us two things.

00:18:37.040 --> 00:18:40.390
The first thing is incremental
traffic and bookings,

00:18:40.390 --> 00:18:42.670
and the second thing
is that it brought us

00:18:42.670 --> 00:18:47.430
a [INAUDIBLE] of our code
base, which was a good thing.

00:18:47.430 --> 00:18:49.630
Thank you, and back to you, Raj.

00:18:49.630 --> 00:18:51.980
[APPLAUSE]

00:18:54.340 --> 00:18:56.770
RAJ AJRAWAT: Thank you, Jean.

00:18:56.770 --> 00:18:57.650
Cool.

00:18:57.650 --> 00:19:00.009
So it's great to see
what they've accomplished

00:19:00.009 --> 00:19:01.300
in such a short amount of time.

00:19:01.300 --> 00:19:04.620
And I'd like to leave you with
three key things to remember.

00:19:04.620 --> 00:19:07.040
Instant Apps is about
discovery and engagement,

00:19:07.040 --> 00:19:09.580
not just reducing
friction on mobile.

00:19:09.580 --> 00:19:11.380
Remember that this
somewhat represents

00:19:11.380 --> 00:19:14.620
a paradigm shift in how we've
been thinking about apps so

00:19:14.620 --> 00:19:15.550
far.

00:19:15.550 --> 00:19:17.710
Because while we
remove the install,

00:19:17.710 --> 00:19:19.610
we're now asking you
to think about what

00:19:19.610 --> 00:19:21.610
do you want to drive the
user to do once they're

00:19:21.610 --> 00:19:23.625
in your native experience.

00:19:23.625 --> 00:19:25.750
We're here to help you with
development and design,

00:19:25.750 --> 00:19:28.930
and we recognize that this
work can be pretty heavy.

00:19:28.930 --> 00:19:30.790
But we're hoping
that you can see

00:19:30.790 --> 00:19:33.550
that the benefits for your
code base are very clear

00:19:33.550 --> 00:19:36.640
and can also affect your
bottom line as well.

00:19:36.640 --> 00:19:39.610
And we're deeply embedding
Instant Apps across both the OS

00:19:39.610 --> 00:19:41.860
and the platform,
from the launcher

00:19:41.860 --> 00:19:43.810
to Pin to Home to other
features that we're

00:19:43.810 --> 00:19:45.322
working on currently.

00:19:45.322 --> 00:19:46.780
And we're really
excited for what's

00:19:46.780 --> 00:19:49.590
in store for Instant
Apps going forward.

