WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
So here we have the figure that we know and love

00:00:02.000 --> 00:00:04.000
of the input domain for some software under test.

00:00:04.000 --> 00:00:08.000
If we think about what the generative random tester is going to do,

00:00:08.000 --> 00:00:11.000
what it's probably really going to do is cluster them in some part

00:00:11.000 --> 00:00:14.000
because it's very hard to cover the actual full space of inputs.

00:00:14.000 --> 00:00:17.000
But in any case, they're going to be spread out over some part of the region.

00:00:17.000 --> 00:00:22.000
What a mutation-based random tester is going to do is start with some known input,

00:00:22.000 --> 00:00:24.000
and what it's going to do is randomly modify it,

00:00:24.000 --> 00:00:26.000
and so it's going to end up with test cases

00:00:26.000 --> 00:00:29.000
that in some sense are kind of in the same neighborhood as the original input.

00:00:29.000 --> 00:00:33.000
And so our mutation-based random tester is going to be able to access points like this.

00:00:33.000 --> 00:00:36.000
If we start with a different input, it's going to be able to get points like this.

00:00:36.000 --> 00:00:39.000
And so what's happening is we're exploring interesting parts of the input domain,

00:00:39.000 --> 00:00:43.000
and it could be that we could have never reached this part of the input domain

00:00:43.000 --> 00:00:47.000
using any kind of a generative random test case generator that we have time to make.

00:00:47.000 --> 00:00:50.000
So this approach is extremely useful and extremely valid.

00:00:50.000 --> 00:00:52.000
But on the other hand, it's generally limited to

00:00:52.000 --> 00:00:55.000
exploring sort of a region of the input space that's close to the starting point.

00:00:55.000 --> 00:00:57.000
One thing that you should be asking yourself right now is,

00:00:57.000 --> 00:01:02.000
what are the operators that we use to mutate test cases to create new random test cases?

00:01:02.000 --> 00:01:04.000
And so let's look at that a little bit.

