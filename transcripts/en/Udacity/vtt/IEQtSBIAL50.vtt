WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.000
So one extremely important operation in analyzing social networks

00:00:04.000 --> 00:00:08.000
is finding the shortest path between individuals in the graph--

00:00:08.000 --> 00:00:11.000
not generally because we need the actual path

00:00:11.000 --> 00:00:15.000
but because we want to have some sense of how closely connected

00:00:15.000 --> 00:00:17.000
different pieces of the graph are.

00:00:17.000 --> 00:00:21.000
But the pairwise shortest path problem is of independent interest.

00:00:21.000 --> 00:00:24.000
It's actually kind of fun and interesting to see

00:00:24.000 --> 00:00:28.000
essentially what allows Google Maps or MapQuest or Yahoo Maps

00:00:28.000 --> 00:00:31.000
to plot shortest paths for you to drive.

00:00:31.000 --> 00:00:37.000
But another kind of whimsical version of this problem is the Kevin Bacon game.

00:00:37.000 --> 00:00:41.000
Kevin Bacon is an actor. He's been in a lot of movies.

00:00:41.000 --> 00:00:43.000
And for some strange reason, he's been in lots of different movies

00:00:43.000 --> 00:00:45.000
with lots of different kinds of people.

00:00:45.000 --> 00:00:49.000
And so it turns out to be interesting and not always very difficult

00:00:49.000 --> 00:00:53.000
to connect Kevin Bacon to any actor you want.

00:00:53.000 --> 00:00:55.000
So imagine the problem goes like this.

00:00:55.000 --> 00:01:01.000
I'm going to give you a graph, G, and some node in the graph, v1--call it Kevin Bacon--

00:01:01.000 --> 00:01:05.000
and some other node in the graph--let's say Emma Watson--

00:01:05.000 --> 00:01:08.000
and we're going to try to find the shortest path between them.

00:01:08.000 --> 00:01:15.000
In the movie version, the graph consists of the actors connected to each other

00:01:15.000 --> 00:01:18.000
if they were in a movie together.

00:01:18.000 --> 00:01:22.000
Kevin Bacon and Emma Watson have not been in any movies together,

00:01:22.000 --> 00:01:24.000
but there is a short path between them.

00:01:24.000 --> 00:01:26.000
We haven't designed an algorithm to do this yet,

00:01:26.000 --> 00:01:29.000
but, fortunately, there is a source on the Internet--

00:01:29.000 --> 00:01:31.000
because there's always a source on the Internet--

00:01:31.000 --> 00:01:33.000
that will help us with this kind of problem.

00:01:33.000 --> 00:01:38.000
There is a website called The Oracle of Bacon. There's Kevin Bacon now.

00:01:38.000 --> 00:01:41.000
And what it allows you to do is solve exactly this problem

00:01:41.000 --> 00:01:46.000
on the graph of movie actors and movies that they've appeared in.

00:01:46.000 --> 00:01:49.000
It defaults to Kevin Bacon, but you can actually put in anything you want here.

00:01:49.000 --> 00:01:51.000
But we're going to leave it as Kevin Bacon for the moment

00:01:51.000 --> 00:01:55.000
and ask it to find a connection to Emma Watson.

00:01:55.000 --> 00:01:59.000
You can see that I tried this in advance.

00:01:59.000 --> 00:02:02.000
And we look for a link and, bang, it found one.

00:02:02.000 --> 00:02:05.000
It turns out that Emma Watson from the Harry Potter movies

00:02:05.000 --> 00:02:09.000
was in Harry Potter and the Deathly Hallows: Part 2 (2011)

00:02:09.000 --> 00:02:11.000
and John Hurt was one of the actors in that movie.

00:02:11.000 --> 00:02:15.000
Well, it turns out John Hurt was actually in a movie with Kevin Bacon--

00:02:15.000 --> 00:02:19.000
or is about to be--called Jayne Mansfield's Car.

00:02:19.000 --> 00:02:23.000
This isn't possibly the most interesting chain,

00:02:23.000 --> 00:02:25.000
but one of the things that really is interesting, it's very hard--

00:02:25.000 --> 00:02:28.000
at least it was very hard for me--to find actors

00:02:28.000 --> 00:02:31.000
that are more than 2 steps away from Kevin Bacon.

00:02:31.000 --> 00:02:39.000
So I tried kind of recent people

00:02:39.000 --> 00:02:42.000
who you wouldn't think would be in movies with Kevin Bacon,

00:02:42.000 --> 00:02:45.000
and you find out that they're pretty closely connected.

00:02:45.000 --> 00:02:52.000
I tried really much older people like Cary Grant.

00:02:52.000 --> 00:02:58.000
He is also 2 steps away via Walter Matthau.

00:02:58.000 --> 00:03:00.000
So it's just crazy.

00:03:00.000 --> 00:03:05.000
People back from silent movies back in the very beginning of movies being made

00:03:05.000 --> 00:03:10.000
are 2 steps away from Kevin Bacon through people I haven't heard of.

00:03:10.000 --> 00:03:16.000
So there's something special about the position that Kevin Bacon occupies in this graph.

00:03:16.000 --> 00:03:20.000
We can find other people. Let's connect Charlie Chaplin and Justin Bieber.

00:03:20.000 --> 00:03:23.000
We'll see that that ends up being more than 2 links--at least I expect.

00:03:23.000 --> 00:03:26.000
Three? Four? Three.

00:03:26.000 --> 00:03:34.000
So Charlie Chaplin--oh!--to, oh, Marjorie Bennett to Fred Willard to Justin Bieber.

00:03:34.000 --> 00:03:39.000
1, 2, 3 links. So it could be that the movie graph is just not really all that wide,

00:03:39.000 --> 00:03:42.000
at least among the people that are reasonably well known,

00:03:42.000 --> 00:03:46.000
but that gives you a feel for the way that the problem works.

00:03:46.000 --> 00:03:49.000
Now let's talk about how we can actually solve this algorithmically.

