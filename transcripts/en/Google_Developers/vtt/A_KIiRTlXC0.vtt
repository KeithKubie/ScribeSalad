WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:01:15.349
[MUSIC PLAYING]

00:01:25.400 --> 00:01:27.330
JAKE ARCHIBALD: Hi, welcome
to Google Developers Live.

00:01:27.330 --> 00:01:28.880
This is mobile web Thursday.

00:01:28.880 --> 00:01:30.350
But actually, we're not live.

00:01:30.350 --> 00:01:31.730
We're pre-recording this.

00:01:31.730 --> 00:01:33.980
And I guess it's not really
Google Developers, either,

00:01:33.980 --> 00:01:36.740
because you're not
one of the gang.

00:01:36.740 --> 00:01:40.000
So I guess it's just developers
not live in a

00:01:40.000 --> 00:01:40.710
Google studio.

00:01:40.710 --> 00:01:46.890
So it's not GDL it's DNLIAGS,
din-a-lags, DNLIAGS.

00:01:46.890 --> 00:01:48.410
That's cool.

00:01:48.410 --> 00:01:50.310
It kind of sounds a bit
like dinner ladies.

00:01:50.310 --> 00:01:51.550
We could go with that.

00:01:51.550 --> 00:01:52.120
REMY SHARP: Din ladies.

00:01:52.120 --> 00:01:52.770
JAKE ARCHIBALD: Yeah.

00:01:52.770 --> 00:01:56.650
Anyway the studio today, we've
got Remy Sharp from off of the

00:01:56.650 --> 00:02:00.010
internet, from down
in Brighton.

00:02:00.010 --> 00:02:03.486
And I certainly hope he's going
to brighten the studio.

00:02:03.486 --> 00:02:04.300
REMY SHARP: [DRUM ROLL]

00:02:04.300 --> 00:02:06.250
JAKE ARCHIBALD: Yeah.

00:02:06.250 --> 00:02:08.259
This is the third one that I've
done of this, so I can

00:02:08.259 --> 00:02:10.810
teach you some TV
producing tips.

00:02:10.810 --> 00:02:15.550
So whenever you do a complete
zinger like that, it's good to

00:02:15.550 --> 00:02:18.550
kind of look at the camera and
just smile and nod a bit,

00:02:18.550 --> 00:02:21.120
because you want to give people
time to recover from

00:02:21.120 --> 00:02:23.810
their kind of gut-wrenching
laughter, or else they'll

00:02:23.810 --> 00:02:27.160
start missing the important
facts and stuff.

00:02:27.160 --> 00:02:31.000
So you're the big boss
of Left Logic, right?

00:02:31.000 --> 00:02:31.920
REMY SHARP: That's right.

00:02:31.920 --> 00:02:35.870
I run my own little
JavaScript-based development

00:02:35.870 --> 00:02:38.890
agency thingamajiggy
in Brighton.

00:02:38.890 --> 00:02:39.380
JAKE ARCHIBALD: Cool.

00:02:39.380 --> 00:02:42.990
So let's see what you Hove
got in store for us.

00:02:42.990 --> 00:02:44.890
It kind of works, because
Brighton and Hove, right?

00:02:44.890 --> 00:02:45.696
No, it doesn't work.

00:02:45.696 --> 00:02:46.870
REMY SHARP: Separate place.

00:02:46.870 --> 00:02:50.260
JAKE ARCHIBALD: So you built a
game for Google I/O, right?

00:02:50.260 --> 00:02:51.140
REMY SHARP: Yeah, that's right.

00:02:51.140 --> 00:02:52.550
If I--

00:02:52.550 --> 00:02:53.800
well, we can demo
it now, right?

00:02:53.800 --> 00:02:54.250
JAKE ARCHIBALD: Yeah.

00:02:54.250 --> 00:02:55.890
It's called-- what
is it called?

00:02:55.890 --> 00:02:57.950
Face balls, ball faces?

00:02:57.950 --> 00:03:00.850
REMY SHARP: Well, I'll show you
the game, and then I'll

00:03:00.850 --> 00:03:01.680
give you some back story.

00:03:01.680 --> 00:03:02.490
So--

00:03:02.490 --> 00:03:03.700
JAKE ARCHIBALD: Live
demos never fail.

00:03:03.700 --> 00:03:06.460
REMY SHARP: The game's called
"Head Shots." You don't see

00:03:06.460 --> 00:03:08.960
that bit where we did
it earlier, and the

00:03:08.960 --> 00:03:09.850
whole machine crashed.

00:03:09.850 --> 00:03:10.440
JAKE ARCHIBALD: Oh yeah.

00:03:10.440 --> 00:03:12.250
If we seem a little bit
depressed, it's because we've

00:03:12.250 --> 00:03:13.640
done a whole half an
hour recording.

00:03:13.640 --> 00:03:15.030
It went really well.

00:03:15.030 --> 00:03:19.610
And then Paul Kinlan, who's our
resident DJ today, just

00:03:19.610 --> 00:03:21.235
kind of started crying.

00:03:21.235 --> 00:03:23.160
A little tear ran down his
face, and he said, the

00:03:23.160 --> 00:03:24.140
machine's crashed, dude.

00:03:24.140 --> 00:03:24.810
Machine's crashed.

00:03:24.810 --> 00:03:27.100
So this is our second
go at all of this.

00:03:27.100 --> 00:03:27.720
But it's going to be
better, right?

00:03:27.720 --> 00:03:27.980
REMY SHARP: Yes.

00:03:27.980 --> 00:03:29.100
JAKE ARCHIBALD: We should
positive about

00:03:29.100 --> 00:03:29.930
it rather than depressed.

00:03:29.930 --> 00:03:30.440
REMY SHARP: It's going
to be amazing.

00:03:30.440 --> 00:03:34.420
So this amazing game is called
"Head Shots," and I'm going to

00:03:34.420 --> 00:03:36.630
amazingly hit New Game.

00:03:36.630 --> 00:03:37.780
And it's going to give
me a PIN number.

00:03:37.780 --> 00:03:41.326
And that PIN number, Jake is
going to put into his phone.

00:03:41.326 --> 00:03:42.220
JAKE ARCHIBALD: I am.

00:03:42.220 --> 00:03:43.030
It's a good feeling,
by the way.

00:03:43.030 --> 00:03:43.435
REMY SHARP: Thanks.

00:03:43.435 --> 00:03:44.600
JAKE ARCHIBALD: This
is excellent.

00:03:44.600 --> 00:03:47.610
I really like-- because I'm on
the PIN screen now, and it's

00:03:47.610 --> 00:03:49.365
nice that when I go into the--

00:03:49.365 --> 00:03:50.720
I don't know if this
is going to work.

00:03:50.720 --> 00:03:53.120
When I go into the screen to
enter the PIN, it comes up,

00:03:53.120 --> 00:03:57.610
and it's only got the numbers,
the digits on there, which

00:03:57.610 --> 00:03:58.840
it's just putting them--

00:03:58.840 --> 00:03:59.900
REMY SHARP: No, it's not.

00:03:59.900 --> 00:04:01.195
It's a pattern.

00:04:01.195 --> 00:04:04.550
So I think I might
not have mobile

00:04:04.550 --> 00:04:05.740
connectivity, which is--

00:04:05.740 --> 00:04:06.880
yes I do.

00:04:06.880 --> 00:04:08.620
JAKE ARCHIBALD: We could put an
awkward transition in here

00:04:08.620 --> 00:04:10.970
where we just put like a screen
and some hold music

00:04:10.970 --> 00:04:11.630
until we're ready.

00:04:11.630 --> 00:04:13.842
[HUMMING MUSIC]

00:04:13.842 --> 00:04:16.769
REMY SHARP: Let's
try that again.

00:04:16.769 --> 00:04:17.709
JAKE ARCHIBALD: And
we're back.

00:04:17.709 --> 00:04:19.700
And we had a massive network
failure, right?

00:04:19.700 --> 00:04:22.810
Because you're using a data
roaming SIM card.

00:04:22.810 --> 00:04:24.170
You didn't realize you
were doing that.

00:04:24.170 --> 00:04:26.070
And you've run out of credit,
which is probably costing you

00:04:26.070 --> 00:04:26.820
quite a lot of money.

00:04:26.820 --> 00:04:30.510
But we'll take you for a
beer to make up for it.

00:04:30.510 --> 00:04:31.210
That'll be OK.

00:04:31.210 --> 00:04:32.060
REMY SHARP: Beer equals data.

00:04:32.060 --> 00:04:33.130
JAKE ARCHIBALD: This
could be the moment

00:04:33.130 --> 00:04:34.580
where Remy became bankrupt.

00:04:34.580 --> 00:04:37.070
But we're going to soldier on.

00:04:37.070 --> 00:04:38.800
What we're going to do is you've
got a pre-recorded

00:04:38.800 --> 00:04:40.560
video of the game working.

00:04:40.560 --> 00:04:42.500
We're going to look at that.

00:04:42.500 --> 00:04:45.400
There was a great moment where
Paul was going to have the

00:04:45.400 --> 00:04:50.190
whole camera running through us
fumbling and trying to make

00:04:50.190 --> 00:04:51.200
the stream work and failing.

00:04:51.200 --> 00:04:52.820
But Remy, you came up with
a good solution,

00:04:52.820 --> 00:04:53.410
though, didn't you?

00:04:53.410 --> 00:04:59.060
You just fired out a string of
obscene words, and that means

00:04:59.060 --> 00:05:00.010
we can't put it out.

00:05:00.010 --> 00:05:01.670
So I might use that
trick next time.

00:05:01.670 --> 00:05:03.320
REMY SHARP: So yeah, that pretty
much guaranteed it

00:05:03.320 --> 00:05:04.440
could never make it
to the public.

00:05:04.440 --> 00:05:06.090
JAKE ARCHIBALD: Exactly,
exactly.

00:05:06.090 --> 00:05:07.680
So yeah, let's go through
the video.

00:05:07.680 --> 00:05:11.170
REMY SHARP: Yeah, I'll walk you
through "Head Shots," the

00:05:11.170 --> 00:05:14.160
pre-recorded version of
the interactive game.

00:05:14.160 --> 00:05:16.490
So you're presented with
a welcome screen.

00:05:16.490 --> 00:05:18.980
You tap on New Game
or Join Game.

00:05:18.980 --> 00:05:22.260
So in this case, I'm going
to join a game.

00:05:22.260 --> 00:05:25.950
I'm given a PIN number by the
other player, which actually

00:05:25.950 --> 00:05:26.760
is going to be me.

00:05:26.760 --> 00:05:29.570
So get prepared for your
minds to be blown.

00:05:29.570 --> 00:05:32.520
And then when it prompts you, it
asks you if you want access

00:05:32.520 --> 00:05:34.650
to the camera or not.

00:05:34.650 --> 00:05:35.250
I say yes.

00:05:35.250 --> 00:05:36.710
And you can see my face
being streamed

00:05:36.710 --> 00:05:38.190
directly into the camera.

00:05:38.190 --> 00:05:40.720
So here I get to throw a
ball at my own face.

00:05:40.720 --> 00:05:43.050
And boom, in my face.

00:05:43.050 --> 00:05:45.210
One down.

00:05:45.210 --> 00:05:47.365
And then the other player kind
of flicks back, and you'll see

00:05:47.365 --> 00:05:49.480
him throw the ball towards
me like that.

00:05:49.480 --> 00:05:50.990
Awful shot, Remy, terrible.

00:05:50.990 --> 00:05:54.290
And again.

00:05:54.290 --> 00:05:55.150
Ah.

00:05:55.150 --> 00:05:57.270
See now, I look like I hit
myself in the face with my

00:05:57.270 --> 00:05:58.060
ball, but I didn't.

00:05:58.060 --> 00:05:59.150
JAKE ARCHIBALD: So it's actually
a live stream there?

00:05:59.150 --> 00:06:00.320
REMY SHARP: It's
a live stream.

00:06:00.320 --> 00:06:03.210
It's UDP data, peer to peer.

00:06:03.210 --> 00:06:08.610
In this case, I was at home
using my own local network,

00:06:08.610 --> 00:06:11.270
which means that the
connectivity should be superb,

00:06:11.270 --> 00:06:17.010
because it's basically point
to point, almost.

00:06:17.010 --> 00:06:21.410
There is one part that sits
on the server, the

00:06:21.410 --> 00:06:23.010
discoverability of the game.

00:06:23.010 --> 00:06:26.530
So knowing what PIN number, the
PIN number is what joins

00:06:26.530 --> 00:06:27.830
us together in the
first place.

00:06:27.830 --> 00:06:29.265
So there's a web--

00:06:29.265 --> 00:06:30.540
oh, I hit myself again.

00:06:33.440 --> 00:06:36.320
The server is running a
WebSockets server, which we

00:06:36.320 --> 00:06:43.230
use to basically go up to and
say, what is the WebRTC

00:06:43.230 --> 00:06:45.690
library, tell me what I need to
know to be able to connect

00:06:45.690 --> 00:06:46.590
to this person.

00:06:46.590 --> 00:06:53.100
It then sends down this data,
this magical data about where

00:06:53.100 --> 00:06:55.020
the person's located, I guess.

00:06:55.020 --> 00:06:57.590
And then it starts using things
like STUN, straight out

00:06:57.590 --> 00:07:02.300
of "Star Wars," "Star Trek,"
in fact, TURN servers, ICE.

00:07:02.300 --> 00:07:04.960
Because we like a bit of ICE
as well, some cool words.

00:07:04.960 --> 00:07:07.005
JAKE ARCHIBALD: So this is all
part of WebRTC, right?

00:07:07.005 --> 00:07:07.340
REMY SHARP: Yeah.

00:07:07.340 --> 00:07:12.120
And that then penetrates all the
firewalls and proxies and

00:07:12.120 --> 00:07:17.490
gets us to hold hands and share
data and eventually be

00:07:17.490 --> 00:07:19.300
able to get a peer
to peer point.

00:07:19.300 --> 00:07:19.910
Hopefully.

00:07:19.910 --> 00:07:21.590
It's still new technology,
that's the thing.

00:07:21.590 --> 00:07:22.610
JAKE ARCHIBALD: It's good.

00:07:22.610 --> 00:07:25.860
I deliberately made a decision
not to learn any WebRTC

00:07:25.860 --> 00:07:28.260
because it would make
this interview flow

00:07:28.260 --> 00:07:28.980
a lot better, right?

00:07:28.980 --> 00:07:31.390
It's not just because I'm
slightly incompetent, and

00:07:31.390 --> 00:07:33.500
there's a big part of web
technology that I haven't even

00:07:33.500 --> 00:07:34.260
looked at yet.

00:07:34.260 --> 00:07:36.070
This is a deliberate interview
technique.

00:07:36.070 --> 00:07:36.730
It's quite good.

00:07:36.730 --> 00:07:37.620
REMY SHARP: Sound, sound.

00:07:37.620 --> 00:07:39.080
JAKE ARCHIBALD: Shall we have
a look at some of the code

00:07:39.080 --> 00:07:41.670
that you're using to actually
make this connection happen?

00:07:41.670 --> 00:07:42.000
REMY SHARP: Yeah.

00:07:42.000 --> 00:07:47.555
So like you, I'm not that
well versed with WebRTC.

00:07:47.555 --> 00:07:52.680
I should say as a caveat that
I'm a developer with the

00:07:52.680 --> 00:07:56.430
approached that basically
bash away at

00:07:56.430 --> 00:07:58.460
something until it fits.

00:07:58.460 --> 00:08:01.010
And I watched my son putting
some blocks into a wall.

00:08:01.010 --> 00:08:03.856
And basically, the way he was
getting the blocks through the

00:08:03.856 --> 00:08:05.260
wall was the same
way as I code.

00:08:05.260 --> 00:08:07.210
I basically just keep turning it
and turning it, and once it

00:08:07.210 --> 00:08:09.060
works, it works,
and I move on.

00:08:09.060 --> 00:08:10.650
JAKE ARCHIBALD: Even if it's not
the right shape, it fits.

00:08:10.650 --> 00:08:12.875
REMY SHARP: Yeah, if you can
take a circle and turn it so

00:08:12.875 --> 00:08:15.380
it looks like a square and push
it through a square hole,

00:08:15.380 --> 00:08:17.280
then superb.

00:08:17.280 --> 00:08:19.230
JAKE ARCHIBALD: So we should
say the WebRTC stuff that

00:08:19.230 --> 00:08:22.920
you're using there requires a
beta version of Chrome for

00:08:22.920 --> 00:08:23.625
Android at the moment.

00:08:23.625 --> 00:08:24.390
REMY SHARP: Yes, sorry.

00:08:24.390 --> 00:08:26.980
JAKE ARCHIBALD: But it's in
the full stable version of

00:08:26.980 --> 00:08:27.850
Chrome desktop.

00:08:27.850 --> 00:08:30.580
And it's also in the beta
version of Firefox as well.

00:08:30.580 --> 00:08:31.340
REMY SHARP: Yeah.

00:08:31.340 --> 00:08:32.120
JAKE ARCHIBALD: But even though
it's in the beta,

00:08:32.120 --> 00:08:34.820
you're having to turn on
some flags before that.

00:08:34.820 --> 00:08:35.270
REMY SHARP: Yeah.

00:08:35.270 --> 00:08:37.390
So it might be worth
just looking at the

00:08:37.390 --> 00:08:42.590
phone briefly, producer.

00:08:42.590 --> 00:08:44.640
So down here, oh gosh,
somewhere.

00:08:44.640 --> 00:08:50.050
So you probably have to do like
Find in Page, WebRTC.

00:08:50.050 --> 00:08:50.850
And there we go.

00:08:50.850 --> 00:08:54.910
So we've got the WebRTC flag
has been enabled manually.

00:08:54.910 --> 00:09:02.130
And then you get the goodness
of the WebRTC technology.

00:09:02.130 --> 00:09:05.900
Which I should, before I
show you some code, is

00:09:05.900 --> 00:09:08.360
three sets of APIs.

00:09:08.360 --> 00:09:11.960
So WebRTC is firstly,
getUserMedia, which is the API

00:09:11.960 --> 00:09:16.930
that gets you the webcam and
basic video and audio.

00:09:16.930 --> 00:09:19.750
And we've seen lots of demos
where people are mashing it up

00:09:19.750 --> 00:09:22.230
with WebGL and so on.

00:09:22.230 --> 00:09:26.390
The second part is the
DataChannel API, so

00:09:26.390 --> 00:09:29.770
RTCDataChannel, which is like
WebSockets but gives you that

00:09:29.770 --> 00:09:31.930
peer to peer connection.

00:09:31.930 --> 00:09:33.260
JAKE ARCHIBALD: So you're not
just restricted to sending

00:09:33.260 --> 00:09:33.990
video and audio.

00:09:33.990 --> 00:09:35.640
It's normal data as well.

00:09:35.640 --> 00:09:36.340
REMY SHARP: Yeah, yeah.

00:09:36.340 --> 00:09:39.800
And with that, there's a flag
that allows you to set whether

00:09:39.800 --> 00:09:42.560
it's reliable or not.

00:09:42.560 --> 00:09:45.000
And reliable, true or
false, means switch

00:09:45.000 --> 00:09:46.690
between UDP or TCP.

00:09:46.690 --> 00:09:51.630
So you can use this for first
person shooter type games,

00:09:51.630 --> 00:09:54.380
where it doesn't matter how many
bullets you fire, maybe.

00:09:54.380 --> 00:09:55.060
I don't know.

00:09:55.060 --> 00:09:57.380
I'm not the best games
developer, which is why I

00:09:57.380 --> 00:09:58.100
wrote a game.

00:09:58.100 --> 00:09:59.265
JAKE ARCHIBALD: I don't
call it UDP.

00:09:59.265 --> 00:10:01.640
I call it UPD.

00:10:01.640 --> 00:10:03.110
REMY SHARP: Because we've
done this four times, I

00:10:03.110 --> 00:10:04.122
now know that joke.

00:10:04.122 --> 00:10:04.600
JAKE ARCHIBALD: Yeah.

00:10:04.600 --> 00:10:06.770
I'm trying to recreate all the
spontaneous jokes we did in

00:10:06.770 --> 00:10:08.010
the first record.

00:10:08.010 --> 00:10:09.095
I don't think that one
was actually--

00:10:09.095 --> 00:10:09.410
REMY SHARP: On the second.

00:10:09.410 --> 00:10:10.200
JAKE ARCHIBALD: On the
second record.

00:10:10.200 --> 00:10:13.590
Yeah, we're having a difficult
time trying to do--

00:10:13.590 --> 00:10:15.740
REMY SHARP: Technology.

00:10:15.740 --> 00:10:18.530
And the third part is
the DataChannel API.

00:10:18.530 --> 00:10:23.130
So the DataChannel is what
allows me to stream video into

00:10:23.130 --> 00:10:25.780
your device or stream video
out to multiple

00:10:25.780 --> 00:10:27.320
devices peer to peer.

00:10:27.320 --> 00:10:30.080
So it's those three technologies
put together that

00:10:30.080 --> 00:10:31.700
gives you all of WebRTC.

00:10:31.700 --> 00:10:33.600
JAKE ARCHIBALD: So when we were
seeing the video there

00:10:33.600 --> 00:10:36.540
and the game logic being sent,
that was just direct from

00:10:36.540 --> 00:10:37.250
device to device.

00:10:37.250 --> 00:10:38.865
It wasn't all going through
a central circle.

00:10:38.865 --> 00:10:39.280
REMY SHARP: Yeah.

00:10:39.280 --> 00:10:39.550
JAKE ARCHIBALD: OK.

00:10:39.550 --> 00:10:43.450
So if you were making a game
that was player to player, you

00:10:43.450 --> 00:10:45.920
don't need to have a huge server
that could control 100

00:10:45.920 --> 00:10:48.520
games at once, because you can
sort of pass it off to

00:10:48.520 --> 00:10:49.300
individuals.

00:10:49.300 --> 00:10:51.610
REMY SHARP: Which does also
kind of bring its own

00:10:51.610 --> 00:10:54.630
problems, like where does
the game logic belong?

00:10:54.630 --> 00:10:56.710
How do you protect your game
from being hacked?

00:10:56.710 --> 00:11:00.260
The way that I cleverly got
around that problem was to not

00:11:00.260 --> 00:11:01.480
put any protection in there.

00:11:01.480 --> 00:11:04.000
So if you want to hack
the game, you can do.

00:11:04.000 --> 00:11:06.780
If I'm playing Jake and throwing
my balls at his face,

00:11:06.780 --> 00:11:08.460
then I could just cheat.

00:11:08.460 --> 00:11:10.955
And I could say, every single
one of them hit.

00:11:10.955 --> 00:11:12.640
And I would win.

00:11:12.640 --> 00:11:14.740
But obviously, I've cheated
you, and that would

00:11:14.740 --> 00:11:16.345
make us both sad.

00:11:16.345 --> 00:11:17.940
JAKE ARCHIBALD: It's for fun.

00:11:17.940 --> 00:11:18.650
It's not a competitive--

00:11:18.650 --> 00:11:19.860
REMY SHARP: Yeah, there's
no leader board or

00:11:19.860 --> 00:11:21.790
anything like that.

00:11:21.790 --> 00:11:25.790
So if I show you some of the
code, a lot of it's kind of--

00:11:25.790 --> 00:11:28.870
there's events flying back and
forth inside of the game.

00:11:28.870 --> 00:11:32.630
So when the game actually
starts--

00:11:32.630 --> 00:11:34.150
let me scroll up just
a little bit.

00:11:34.150 --> 00:11:39.490
I was actually on the right
line of code, pinchange.

00:11:39.490 --> 00:11:43.070
I have this event that says
pinchange, which the server

00:11:43.070 --> 00:11:44.990
will give me a new PIN
to start the game.

00:11:44.990 --> 00:11:48.920
And when you enter a PIN into
your phone to start the "Head

00:11:48.920 --> 00:11:52.010
Shots" game, it will trigger
this event called pinchange,

00:11:52.010 --> 00:11:55.530
which tells the entire
application, right, go and

00:11:55.530 --> 00:11:59.550
connect to the WebSocket
on the server

00:11:59.550 --> 00:12:01.030
and send it the PIN.

00:12:01.030 --> 00:12:03.750
And that's the room
I'm joining.

00:12:03.750 --> 00:12:04.950
Because we need to be in
a room to be able to

00:12:04.950 --> 00:12:06.140
communicate--

00:12:06.140 --> 00:12:08.520
to discover each other
in the first place.

00:12:08.520 --> 00:12:12.880
Once we've gotten into
that room, it then

00:12:12.880 --> 00:12:14.620
fires a bunch of events.

00:12:14.620 --> 00:12:16.760
JAKE ARCHIBALD: So this dollar
on you've got there is just--

00:12:16.760 --> 00:12:17.800
REMY SHARP: Yeah, so I
should say this is

00:12:17.800 --> 00:12:19.350
not jQuery or Prototype.

00:12:19.350 --> 00:12:23.950
This is I've written my own
little library that's min.js,

00:12:23.950 --> 00:12:29.160
this tiny library just to
give me a few bits of--

00:12:29.160 --> 00:12:30.040
a few shortcuts.

00:12:30.040 --> 00:12:32.800
So on is an event listener.

00:12:32.800 --> 00:12:35.740
And dollar on is just hitting
a dummy element.

00:12:35.740 --> 00:12:39.460
So I've got this one, it's like
a simple pub/sub system.

00:12:39.460 --> 00:12:43.980
And dollar is just
querySelectorAll with a smiley

00:12:43.980 --> 00:12:48.190
face because it needs
a value, basically.

00:12:48.190 --> 00:12:49.480
JAKE ARCHIBALD: I completely
understand doing that.

00:12:49.480 --> 00:12:51.680
Because I kind of worry about
the amount of finger skin that

00:12:51.680 --> 00:12:53.980
I've lost to typing
addEventListener and

00:12:53.980 --> 00:12:58.560
querySelectorAll when it--
yeah, on and dollar.

00:12:58.560 --> 00:13:02.530
REMY SHARP: So I've got this
global event, pinchange, which

00:13:02.530 --> 00:13:05.700
then tells the code to
go ahead and connect.

00:13:05.700 --> 00:13:12.430
And this line above, rtc.on
connect, RTC is the webrtc.io

00:13:12.430 --> 00:13:14.050
library's global object.

00:13:14.050 --> 00:13:17.170
So there are a bunch of
different WebRTC libraries.

00:13:17.170 --> 00:13:20.920
I settled on webrtc.io, mostly
because the demo was there in

00:13:20.920 --> 00:13:21.490
the first place.

00:13:21.490 --> 00:13:22.980
The demo is very hackable.

00:13:22.980 --> 00:13:24.610
It meant that I had my prototype
up and running

00:13:24.610 --> 00:13:25.260
really quickly.

00:13:25.260 --> 00:13:27.470
It took me a couple of hours to
get my prototype working,

00:13:27.470 --> 00:13:29.070
just based on that code.

00:13:29.070 --> 00:13:30.500
There are a few bugs in it.

00:13:30.500 --> 00:13:34.340
I should send pull requests
to fix the bugs.

00:13:34.340 --> 00:13:41.560
There's some others, peer.js,
simplewebrtc.js.

00:13:41.560 --> 00:13:43.360
I've got a feeling there's
another word in there

00:13:43.360 --> 00:13:46.080
somewhere, but maybe not.

00:13:46.080 --> 00:13:47.580
These are two libraries.

00:13:47.580 --> 00:13:51.000
I think peer.js only did data,
and simplewebrtc only did

00:13:51.000 --> 00:13:53.860
video and audio, but that
have changed by now.

00:13:53.860 --> 00:13:56.130
This was a month ago or two
months ago I was working on

00:13:56.130 --> 00:13:56.540
the project.

00:13:56.540 --> 00:14:01.390
So webrtc.io is the one I
settled on just because I

00:14:01.390 --> 00:14:03.640
needed to kind of hit the ground
running with WebRTC.

00:14:03.640 --> 00:14:05.960
JAKE ARCHIBALD: I think this
is the real domain of

00:14:05.960 --> 00:14:07.060
libraries in the future.

00:14:07.060 --> 00:14:10.410
We used to use libraries just
to fix all the cross-browser

00:14:10.410 --> 00:14:11.160
issues with the DOM.

00:14:11.160 --> 00:14:13.560
But I think if you're dealing
with just modern browsers, the

00:14:13.560 --> 00:14:15.310
need to do something like
that is less and less.

00:14:15.310 --> 00:14:18.210
Like you have there just a tiny
micro-library to save

00:14:18.210 --> 00:14:19.270
yourself some typing.

00:14:19.270 --> 00:14:21.750
But we've got all of these new
web APIs, and a lot of them

00:14:21.750 --> 00:14:23.910
are really low-level,
like WebGL

00:14:23.910 --> 00:14:26.070
especially, Web Audio, WebRTC.

00:14:26.070 --> 00:14:29.860
So I think this is where
libraries can really guide the

00:14:29.860 --> 00:14:32.300
standards to show, these
are the common

00:14:32.300 --> 00:14:33.110
actions people are doing.

00:14:33.110 --> 00:14:35.290
And then that'll feed back into
the spec and hopefully

00:14:35.290 --> 00:14:36.110
make it simpler.

00:14:36.110 --> 00:14:38.920
REMY SHARP: So like in the
webrtc.io library, there's

00:14:38.920 --> 00:14:45.190
code that looks for the Opus
codec or way of sending video,

00:14:45.190 --> 00:14:48.410
which has to do with Firefox and
getting interoperability

00:14:48.410 --> 00:14:51.030
between Firefox and Chrome.

00:14:51.030 --> 00:14:52.250
I wouldn't know how
to do that.

00:14:52.250 --> 00:14:54.690
And they're taking the message
and doing some kind of

00:14:54.690 --> 00:14:57.850
rewriting magic stuff.

00:14:57.850 --> 00:14:58.510
So magic.

00:14:58.510 --> 00:15:01.790
That's what I'm looking for out
of my library is magic.

00:15:01.790 --> 00:15:04.990
So when I get this connect
event, I then connect the

00:15:04.990 --> 00:15:06.940
video, which is basically I
want to take your face and

00:15:06.940 --> 00:15:09.820
stream it straight
into my phone.

00:15:09.820 --> 00:15:12.465
And that connect video
looks like this.

00:15:15.060 --> 00:15:16.750
Pretty straightforward.

00:15:16.750 --> 00:15:19.770
I check that I can do
PeerConnection API.

00:15:19.770 --> 00:15:21.570
I set up these options,
which says video

00:15:21.570 --> 00:15:23.810
should be 320 by 180.

00:15:23.810 --> 00:15:25.790
I'll come onto that
in a second.

00:15:25.790 --> 00:15:28.970
And then WebRTC has this
helper, createStream.

00:15:28.970 --> 00:15:34.950
And it fires this callback,
which I then trigger a custom

00:15:34.950 --> 00:15:37.600
event that says the local
stream is ready.

00:15:37.600 --> 00:15:39.820
And if I'm in debug mode, I
actually want to see it.

00:15:39.820 --> 00:15:43.190
And the way that I've got my
game set up is that the local

00:15:43.190 --> 00:15:43.740
feed is ready.

00:15:43.740 --> 00:15:44.810
The remote feed is ready.

00:15:44.810 --> 00:15:47.470
When they're both ready, we're
ready to play the game and

00:15:47.470 --> 00:15:49.920
actually throw the balls.

00:15:49.920 --> 00:15:54.610
Just going onto this bit, the
video mandatory maxWidth.

00:15:54.610 --> 00:15:59.090
This is to say, basically, send
the video at 320 by 180.

00:15:59.090 --> 00:16:01.690
And that's because my game only
has a very small kind of

00:16:01.690 --> 00:16:04.730
icon for the video.

00:16:04.730 --> 00:16:08.980
I had this kind of assumption
that, because it's with peer

00:16:08.980 --> 00:16:10.810
to peer, that latency wouldn't
be a problem.

00:16:10.810 --> 00:16:15.110
But realistically, if we're
playing a game, I could be

00:16:15.110 --> 00:16:17.020
playing someone in the
US from the UK.

00:16:17.020 --> 00:16:19.740
I'm still going over the wire,
still a lot of data.

00:16:19.740 --> 00:16:21.505
This isn't a Skype
application.

00:16:21.505 --> 00:16:23.850
It doesn't need all that data
to be going over the wire.

00:16:23.850 --> 00:16:25.520
So I might as well make
it as small as I

00:16:25.520 --> 00:16:27.550
need it in the game.

00:16:27.550 --> 00:16:29.530
JAKE ARCHIBALD: Would it make
sense to have a similar option

00:16:29.530 --> 00:16:30.470
for frames per second?

00:16:30.470 --> 00:16:31.980
Is it something that you
could bring down?

00:16:31.980 --> 00:16:32.260
REMY SHARP: Yeah.

00:16:32.260 --> 00:16:35.140
I think that there's stuff
to do with aspect ratio

00:16:35.140 --> 00:16:36.160
that you can set.

00:16:36.160 --> 00:16:37.750
There might be stuff to do
with frames per second.

00:16:37.750 --> 00:16:38.810
Not all of it's implemented.

00:16:38.810 --> 00:16:39.550
That's the thing.

00:16:39.550 --> 00:16:42.270
And I, in fact, found that this
wasn't doing anything for

00:16:42.270 --> 00:16:46.190
my code, because there's a bug
in webrtc.io where it's just

00:16:46.190 --> 00:16:49.990
ignoring this value, which
could be fixed already.

00:16:49.990 --> 00:16:53.030
But it's really new,
this technology.

00:16:53.030 --> 00:16:54.800
So there's some parts that you
read about, like there's

00:16:54.800 --> 00:16:56.150
mandatory and optional.

00:16:56.150 --> 00:16:59.450
And I don't know if there's
frames per second.

00:16:59.450 --> 00:17:00.120
There could well be.

00:17:00.120 --> 00:17:04.550
It makes sense that you
would have that.

00:17:04.550 --> 00:17:06.139
JAKE ARCHIBALD: So
if the device--

00:17:06.139 --> 00:17:08.660
I assume there's equivalents
for minimum

00:17:08.660 --> 00:17:09.670
width and minimum height?

00:17:09.670 --> 00:17:11.380
REMY SHARP: Yeah, I think so.

00:17:11.380 --> 00:17:12.930
JAKE ARCHIBALD: So I guess that
would be somewhere where

00:17:12.930 --> 00:17:14.960
if the device was incapable of
doing that, it would kind of

00:17:14.960 --> 00:17:15.725
announce that.

00:17:15.725 --> 00:17:17.030
REMY SHARP: Yeah.

00:17:17.030 --> 00:17:22.130
I don't know what happens if
it can't make it smaller.

00:17:22.130 --> 00:17:22.420
Right.

00:17:22.420 --> 00:17:25.740
So now, in this code, we've
made a connection to the

00:17:25.740 --> 00:17:28.160
WebSockets server, discovered
the room, shared what room

00:17:28.160 --> 00:17:29.500
we're joining.

00:17:29.500 --> 00:17:32.040
We've got your face
into the game.

00:17:32.040 --> 00:17:36.140
So this rtc.createStream is
behind the scenes basically

00:17:36.140 --> 00:17:39.310
going to send it down the
PeerConnection API.

00:17:39.310 --> 00:17:44.940
And this piece of code exposes
this init method.

00:17:44.940 --> 00:17:48.470
And the init method inits
the connection.

00:17:48.470 --> 00:17:51.800
And what that does is basically
listen for remote

00:17:51.800 --> 00:17:55.050
streams, which is basically
me joining your game.

00:17:55.050 --> 00:17:58.840
And when I join your game, it
attaches the stream, which is

00:17:58.840 --> 00:18:04.035
the getUserMedia stream,
typically, to an element that

00:18:04.035 --> 00:18:05.800
has an ID of remote.

00:18:05.800 --> 00:18:08.850
And then I have this extra
check, which is where I've

00:18:08.850 --> 00:18:12.620
found problems with not this
particular line of code.

00:18:12.620 --> 00:18:14.950
But this is the line of code
that blocks the game from

00:18:14.950 --> 00:18:15.340
actually running.

00:18:15.340 --> 00:18:17.260
So when we were testing
earlier, we

00:18:17.260 --> 00:18:19.210
were having some problems.

00:18:19.210 --> 00:18:21.720
There's some kind of weird
network situation where the

00:18:21.720 --> 00:18:23.230
data channel wouldn't open.

00:18:23.230 --> 00:18:25.100
And if the data channel doesn't
open, the game's not

00:18:25.100 --> 00:18:27.250
ready to play.

00:18:27.250 --> 00:18:29.640
And only when the data channel
is open does it trigger the

00:18:29.640 --> 00:18:33.280
remote is ready or
readyremote.

00:18:33.280 --> 00:18:36.730
And when the readyremote
triggers, the game has a full

00:18:36.730 --> 00:18:39.940
connection, both
video and data.

00:18:39.940 --> 00:18:45.150
As in video and kind
of arbitrary data.

00:18:45.150 --> 00:18:46.590
JAKE ARCHIBALD: Is this
the point where the

00:18:46.590 --> 00:18:47.850
race condition happens?

00:18:47.850 --> 00:18:48.220
REMY SHARP: Right.

00:18:48.220 --> 00:18:54.990
OK, so the first version of this
code, I really wanted to

00:18:54.990 --> 00:18:57.770
embrace the web in terms of
having URLs to access

00:18:57.770 --> 00:18:58.150
different pages.

00:18:58.150 --> 00:18:59.880
So I had a welcome page.

00:18:59.880 --> 00:19:02.350
You hit Join, you go
to the join page.

00:19:02.350 --> 00:19:04.150
And you have to put
in a PIN code.

00:19:04.150 --> 00:19:06.760
And when you hit go, it would
take you to a waiting page,

00:19:06.760 --> 00:19:09.680
and it would have this hanging
XHR request that would sit,

00:19:09.680 --> 00:19:13.590
asking the server, is
the game ready?

00:19:13.590 --> 00:19:15.430
And the game would say, no,
I'm in waiting stage.

00:19:15.430 --> 00:19:18.410
I'm going to leave this
XHR connection open.

00:19:18.410 --> 00:19:21.440
Now you would have your phone,
or I'd do it, whichever way

00:19:21.440 --> 00:19:23.175
round I started.

00:19:23.175 --> 00:19:26.350
And you would start a game, and
you would get a PIN code.

00:19:26.350 --> 00:19:28.340
I've done this the wrong way
around, but you're still with

00:19:28.340 --> 00:19:28.900
me anyways.

00:19:28.900 --> 00:19:30.040
JAKE ARCHIBALD: Yeah,
yeah, I'm following.

00:19:30.040 --> 00:19:32.980
REMY SHARP: You get a PIN code,
and it has the same

00:19:32.980 --> 00:19:35.340
hanging XHR request
to the server.

00:19:35.340 --> 00:19:38.090
And the game's one,
two, three.

00:19:38.090 --> 00:19:39.770
And the server says, right,
we now have two

00:19:39.770 --> 00:19:40.840
players in the game.

00:19:40.840 --> 00:19:43.630
Change the state from
waiting to ready,

00:19:43.630 --> 00:19:44.730
which closes the XHR.

00:19:44.730 --> 00:19:47.635
The hanging XHR request comes
back to both of us.

00:19:47.635 --> 00:19:50.350
It refreshes the page on
both of our devices.

00:19:50.350 --> 00:19:54.360
And we're immediately then both
asked at the same time,

00:19:54.360 --> 00:19:57.710
do you want to give access
to the audio and video?

00:19:57.710 --> 00:20:01.350
Do you want to open up a data
stream to the other person?

00:20:01.350 --> 00:20:04.836
And what I've found was it would
go, yep, they are, then

00:20:04.836 --> 00:20:05.810
oh, it's broken.

00:20:05.810 --> 00:20:07.300
JAKE ARCHIBALD: So you tried to
explain this to me before

00:20:07.300 --> 00:20:08.080
we started recording.

00:20:08.080 --> 00:20:11.430
And it wasn't quite
going on ahead.

00:20:11.430 --> 00:20:14.930
So we decided, and I'm very
excited about the props, you

00:20:14.930 --> 00:20:16.290
were going to try and
explain this.

00:20:16.290 --> 00:20:17.160
REMY SHARP: I have an analogy.

00:20:17.160 --> 00:20:18.370
JAKE ARCHIBALD: So we have--

00:20:18.370 --> 00:20:19.230
what do we have?

00:20:19.230 --> 00:20:19.360
What is this?

00:20:19.360 --> 00:20:20.290
REMY SHARP: So this
is my analogy for

00:20:20.290 --> 00:20:21.390
trying to make a call.

00:20:21.390 --> 00:20:24.080
So I'm trying to make
a call to you.

00:20:24.080 --> 00:20:26.810
And I have my WebRTC
paper cup phone.

00:20:26.810 --> 00:20:28.560
And the thing is, you're trying
to make a call to me,

00:20:28.560 --> 00:20:30.280
and you have your WebRTC
paper cup phone.

00:20:30.280 --> 00:20:35.050
So if I put my phone up to my
ear, and I try and make a call

00:20:35.050 --> 00:20:36.810
to you, you want to
do the same thing.

00:20:36.810 --> 00:20:38.640
So we're both trying to make
a call to each other.

00:20:38.640 --> 00:20:39.520
JAKE ARCHIBALD: I can
hear the ocean.

00:20:39.520 --> 00:20:41.110
REMY SHARP: And I'm going to--

00:20:41.110 --> 00:20:41.260
concentrate.

00:20:41.260 --> 00:20:42.510
JAKE ARCHIBALD: Sorry.

00:20:44.140 --> 00:20:45.830
REMY SHARP: I'm going to try
and make a call to you.

00:20:45.830 --> 00:20:46.830
So I'm going to give you this
side, and you're going to put

00:20:46.830 --> 00:20:49.180
it up to your ear.

00:20:49.180 --> 00:20:50.870
And you're going to give
me your phone.

00:20:50.870 --> 00:20:51.460
JAKE ARCHIBALD: Yeah, because
you need to make a call to me.

00:20:51.460 --> 00:20:51.600
REMY SHARP: Yeah.

00:20:51.600 --> 00:20:53.410
And then I'm going to listen.

00:20:53.410 --> 00:20:56.510
And see now, we're dangling.

00:20:56.510 --> 00:20:58.880
We have dangly bits.

00:20:58.880 --> 00:21:01.640
And this is why there's
like a flash of--

00:21:01.640 --> 00:21:04.250
the moment I had the phone
still, there was a flash of

00:21:04.250 --> 00:21:04.790
connectivity.

00:21:04.790 --> 00:21:07.750
And the moment I kind of
let go, it just goes.

00:21:07.750 --> 00:21:11.520
So that was with the help of
Paul Kinlan that I needed to

00:21:11.520 --> 00:21:13.850
rewrite all my code into
a single-page app.

00:21:13.850 --> 00:21:15.560
And by rewriting the code--

00:21:15.560 --> 00:21:16.770
JAKE ARCHIBALD: Are we done?

00:21:16.770 --> 00:21:17.470
Sorry.

00:21:17.470 --> 00:21:22.580
REMY SHARP: By rewriting the
code into a single-page app,

00:21:22.580 --> 00:21:26.380
what happens is you start the
game, and you get your phone,

00:21:26.380 --> 00:21:28.346
and you make your connection,
and you tell me what

00:21:28.346 --> 00:21:29.180
the PIN number is.

00:21:29.180 --> 00:21:31.980
And instead of me trying to
dial you, I already know

00:21:31.980 --> 00:21:32.840
you're there.

00:21:32.840 --> 00:21:34.450
And you give me the cup.

00:21:34.450 --> 00:21:37.370
So then we can talk
to each other.

00:21:37.370 --> 00:21:38.760
JAKE ARCHIBALD: That's
not-- oh yes,

00:21:38.760 --> 00:21:40.680
that's how phones work.

00:21:40.680 --> 00:21:42.620
REMY SHARP: It should
be ear to ear.

00:21:42.620 --> 00:21:43.460
JAKE ARCHIBALD: I guess it's--

00:21:43.460 --> 00:21:44.550
REMY SHARP: Streaming
consciousness.

00:21:44.550 --> 00:21:46.580
JAKE ARCHIBALD: I think
if WebRTC is--

00:21:46.580 --> 00:21:48.760
because the model we've built
here is you're either talking

00:21:48.760 --> 00:21:49.080
or listening.

00:21:49.080 --> 00:21:50.550
But WebRTC can do both, right?

00:21:50.550 --> 00:21:52.090
So you would have--

00:21:52.090 --> 00:21:53.490
REMY SHARP: I would have
a second one for data.

00:21:53.490 --> 00:21:55.520
JAKE ARCHIBALD: No,
other way around.

00:21:55.520 --> 00:21:59.630
So my ear to your mouth.

00:21:59.630 --> 00:22:00.786
REMY SHARP: This is why--

00:22:00.786 --> 00:22:01.640
JAKE ARCHIBALD: There we go.

00:22:01.640 --> 00:22:03.160
So that's WebRTC, right?

00:22:03.160 --> 00:22:04.260
REMY SHARP: This is
the data-- yeah.

00:22:04.260 --> 00:22:05.510
JAKE ARCHIBALD: This is two
developers who don't know how

00:22:05.510 --> 00:22:07.270
basic telephony works.

00:22:07.270 --> 00:22:09.080
OK.

00:22:09.080 --> 00:22:09.570
That helps.

00:22:09.570 --> 00:22:12.110
I think that actually,
everyone would really

00:22:12.110 --> 00:22:14.370
understand there, especially
with the cups.

00:22:14.370 --> 00:22:16.930
REMY SHARP: The thing is, I
don't know if there's a bug in

00:22:16.930 --> 00:22:20.600
my code, there's a bug in the
webrtc.io library, or if

00:22:20.600 --> 00:22:25.100
there's just a bug generally
in the workflow of WebRTC.

00:22:25.100 --> 00:22:29.170
And it was on Paul Kinlan's
advice to move to a

00:22:29.170 --> 00:22:31.610
single-page app so that
you don't have that

00:22:31.610 --> 00:22:32.410
race condition anymore.

00:22:32.410 --> 00:22:34.930
And it solved the problem, and
I just wanted to move on and

00:22:34.930 --> 00:22:36.810
work on the rest
of the problem.

00:22:36.810 --> 00:22:43.360
But one day I'll revisit that
and try and work out where the

00:22:43.360 --> 00:22:43.830
problem is.

00:22:43.830 --> 00:22:48.020
And the thing is it's such new
technology that we need to be

00:22:48.020 --> 00:22:49.250
making these mistakes.

00:22:49.250 --> 00:22:50.530
And maybe that's the way
that you have to do it.

00:22:50.530 --> 00:22:52.660
You need the single-page
app for persistence.

00:22:52.660 --> 00:22:55.640
The example I was giving you
before, when we were talking

00:22:55.640 --> 00:23:01.110
earlier, is if JSBin had a
video stream, if you were

00:23:01.110 --> 00:23:03.480
teaching using JSBin, and you
had WebRTC in a video down in

00:23:03.480 --> 00:23:07.180
the corner, if you wanted to
create a new bin, and you had

00:23:07.180 --> 00:23:09.720
everyone kind of following
along, you couldn't refresh

00:23:09.720 --> 00:23:13.050
the page, because when you
refresh, it will lose the

00:23:13.050 --> 00:23:14.450
WebRTC connection.

00:23:14.450 --> 00:23:14.820
You'll kill it.

00:23:14.820 --> 00:23:19.410
So you'll need a single-page
app to say, right, new bin,

00:23:19.410 --> 00:23:22.880
and it keeps the video, and I
can tell the people in my

00:23:22.880 --> 00:23:26.970
class that here's the URL
via the chat window.

00:23:26.970 --> 00:23:29.350
So someone should build
me that feature, too.

00:23:29.350 --> 00:23:30.456
But yeah.

00:23:30.456 --> 00:23:31.470
Anyway.

00:23:31.470 --> 00:23:33.670
JAKE ARCHIBALD: So the
other part of it was

00:23:33.670 --> 00:23:35.090
the graphics, right?

00:23:35.090 --> 00:23:39.120
You had things moving
in multiple layers.

00:23:39.120 --> 00:23:41.060
How did you go about drawing
what we were

00:23:41.060 --> 00:23:41.990
seeing on the screen?

00:23:41.990 --> 00:23:45.470
REMY SHARP: So I started off
with just DOM nodes.

00:23:45.470 --> 00:23:47.290
And the idea was
I'd just make--

00:23:47.290 --> 00:23:51.990
I'd use a scale, translate
scale, transform scale.

00:23:51.990 --> 00:23:53.830
I know how to code it.

00:23:53.830 --> 00:23:55.900
I don't know how to say it.

00:23:55.900 --> 00:23:58.800
And that would work, right?

00:23:58.800 --> 00:24:01.825
So I thought I'd sit down with
Seb Lee-Delisle and just

00:24:01.825 --> 00:24:03.640
borrow some advice off him.

00:24:03.640 --> 00:24:06.730
And he kind of went, no.

00:24:06.730 --> 00:24:08.280
You need to use three.js.

00:24:08.280 --> 00:24:14.530
So I kind of put aside my lame
attempts at doing 3D with just

00:24:14.530 --> 00:24:16.180
scaling a DOM, which
you can do.

00:24:16.180 --> 00:24:19.200
It's more that I wouldn't
have managed to do it.

00:24:19.200 --> 00:24:20.000
It would have looked crap.

00:24:20.000 --> 00:24:23.830
And he pointed out that by using
three.js, we're able to

00:24:23.830 --> 00:24:26.800
create a camera and a point of
view, and there's a real 3D

00:24:26.800 --> 00:24:28.120
scene there in the
first place.

00:24:28.120 --> 00:24:31.680
And the character that you're
throwing the ball at would

00:24:31.680 --> 00:24:34.200
look the right size and
the right perspective.

00:24:34.200 --> 00:24:35.870
And the ball as it
went through 3D

00:24:35.870 --> 00:24:37.290
space would scale correctly.

00:24:37.290 --> 00:24:41.400
Not your dodgy algorithm
to scale it.

00:24:41.400 --> 00:24:44.525
JAKE ARCHIBALD: I had the same
problem because I haven't done

00:24:44.525 --> 00:24:45.460
a lot of 3D programming.

00:24:45.460 --> 00:24:47.170
So when it came to doing
something where something was

00:24:47.170 --> 00:24:49.400
going to go away from the
camera, my first reaction was,

00:24:49.400 --> 00:24:50.400
well, I've got the
scale value.

00:24:50.400 --> 00:24:51.950
I can just move from
one to the other.

00:24:51.950 --> 00:24:55.140
And you start to realize that
it doesn't quite move in the

00:24:55.140 --> 00:24:57.580
same way, because it doesn't
have the perspective.

00:24:57.580 --> 00:25:01.140
It's scaling linearly, whereas
when something moves further

00:25:01.140 --> 00:25:03.170
away from you, it doesn't
scale linearly.

00:25:03.170 --> 00:25:06.480
And I hacked it by using a
sine wave or something.

00:25:06.480 --> 00:25:09.720
And it has that uncanny
valley of, it

00:25:09.720 --> 00:25:11.080
doesn't look quite right.

00:25:11.080 --> 00:25:12.880
So that's-- three.js
would solve that.

00:25:12.880 --> 00:25:14.480
REMY SHARP: Yeah, that's what
he was pointing out, that by

00:25:14.480 --> 00:25:17.360
using three.js to do this
properly, it will feel right

00:25:17.360 --> 00:25:19.250
and will look right.

00:25:19.250 --> 00:25:22.850
So I spent a couple of hours
with him and created this new

00:25:22.850 --> 00:25:27.010
kind of scene with the floor,
and this object, it would

00:25:27.010 --> 00:25:30.420
throw into the scene and
bounce off the floor.

00:25:30.420 --> 00:25:30.910
Great.

00:25:30.910 --> 00:25:34.510
Took that back to the office,
loaded it on the Android, had

00:25:34.510 --> 00:25:36.440
a beautiful 60 frames per
second on the desktop.

00:25:36.440 --> 00:25:39.680
Got a beautiful four frames
per second on the Android.

00:25:39.680 --> 00:25:43.820
Pretty much wept into my lap.

00:25:43.820 --> 00:25:45.480
JAKE ARCHIBALD: What renderer
were you using

00:25:45.480 --> 00:25:46.290
in three.js, though?

00:25:46.290 --> 00:25:47.770
REMY SHARP: So that's just
the canvas renderer.

00:25:47.770 --> 00:25:49.210
JAKE ARCHIBALD: Normal
2D canvas, yeah?

00:25:49.210 --> 00:25:50.200
REMY SHARP: The 2D
canvas, yeah.

00:25:50.200 --> 00:25:53.390
And it's only post-project
I was like, oh, maybe I

00:25:53.390 --> 00:25:55.910
should've had the
WebGL renderer.

00:25:55.910 --> 00:25:59.110
Because I was allowed to choose
any technology I want.

00:25:59.110 --> 00:26:01.530
But, you know, hindsight.

00:26:01.530 --> 00:26:05.670
So I actually realized that the
problem that I was facing

00:26:05.670 --> 00:26:07.845
was I was rendering a massive
scene, or a massive scene for

00:26:07.845 --> 00:26:09.990
the device, at least.

00:26:09.990 --> 00:26:12.930
And I found that by putting--

00:26:12.930 --> 00:26:16.390
so I originally had both video
feeds going into the DOMs.

00:26:16.390 --> 00:26:20.390
Both streams of video
were fueling these

00:26:20.390 --> 00:26:21.910
two video DOM nodes.

00:26:21.910 --> 00:26:24.320
And then I had this big canvas
that was being repainted all

00:26:24.320 --> 00:26:26.860
the time, the entire background,
the whole thing.

00:26:26.860 --> 00:26:29.190
So I changed the
code to being--

00:26:29.190 --> 00:26:31.350
I created two three.js scenes.

00:26:31.350 --> 00:26:36.180
One is the background, which
is the background, the 3D

00:26:36.180 --> 00:26:40.030
floor, and the character who
is mostly stationary.

00:26:40.030 --> 00:26:43.450
And then the second front
layer is the ball that

00:26:43.450 --> 00:26:46.070
bounces, kind of comes down,
bounces, and then goes off and

00:26:46.070 --> 00:26:48.880
reacts to the user flicking,
basically.

00:26:48.880 --> 00:26:50.760
And instead of having two videos
in there, I got rid of

00:26:50.760 --> 00:26:54.270
the second video, the video of
me, because I wouldn't need to

00:26:54.270 --> 00:26:55.990
see myself when I'm
playing you.

00:26:55.990 --> 00:26:58.690
And I just have your
face in there.

00:26:58.690 --> 00:27:01.950
And that got the frames per
second back up to--

00:27:01.950 --> 00:27:05.060
I think on Nexus 4, I was seeing
50 frames per second.

00:27:05.060 --> 00:27:07.780
That isn't the end
of the project.

00:27:07.780 --> 00:27:11.020
It kept on dipping up
and down, and I

00:27:11.020 --> 00:27:12.130
would change something.

00:27:12.130 --> 00:27:13.500
And suddenly it'd be 50
frames per second.

00:27:13.500 --> 00:27:15.045
I'd change something else,
and suddenly it was

00:27:15.045 --> 00:27:16.270
20 frames per second.

00:27:16.270 --> 00:27:19.550
And I could have just been
mashing my keys, and that

00:27:19.550 --> 00:27:21.760
would have kept changing,
basically.

00:27:21.760 --> 00:27:24.080
JAKE ARCHIBALD: So by having the
ball in its own layer, it

00:27:24.080 --> 00:27:26.060
means you can move that
independently without having

00:27:26.060 --> 00:27:28.410
to redraw this whole
background.

00:27:28.410 --> 00:27:30.440
REMY SHARP: That layer
wasn't even moving.

00:27:30.440 --> 00:27:33.170
It's just that there was less to
draw, less pixels to commit

00:27:33.170 --> 00:27:34.090
to that canvas.

00:27:34.090 --> 00:27:36.840
JAKE ARCHIBALD: Yeah, and then
composite, it does the rest.

00:27:36.840 --> 00:27:38.630
REMY SHARP: Yeah, exactly, so
you could see through, and

00:27:38.630 --> 00:27:40.660
you'd see the background
of the character.

00:27:40.660 --> 00:27:43.506
And I would fake the--

00:27:43.506 --> 00:27:47.270
the ball would think it's hit
your face, but what I've

00:27:47.270 --> 00:27:51.730
worked out is this is where
Jake's face should be and

00:27:51.730 --> 00:27:55.580
bounce off of that, then cause
the background, the second

00:27:55.580 --> 00:27:58.420
layer with the character to kind
of animate and fall down

00:27:58.420 --> 00:28:01.556
and cry and spit blood
and eyeball falls out

00:28:01.556 --> 00:28:02.290
and stuff like that.

00:28:02.290 --> 00:28:03.830
JAKE ARCHIBALD: It reminds
me of my childhood.

00:28:03.830 --> 00:28:06.340
I guess what you forfeit, then,
is you wouldn't be able

00:28:06.340 --> 00:28:07.250
to make the ball go behind
the player, right?

00:28:07.250 --> 00:28:09.070
Because you've got those
two separate layers.

00:28:09.070 --> 00:28:11.390
But you don't have
that problem.

00:28:11.390 --> 00:28:12.320
REMY SHARP: I did actually.

00:28:12.320 --> 00:28:14.030
I do do that.

00:28:14.030 --> 00:28:19.150
There is some code in there
that, again, with Seb's help--

00:28:19.150 --> 00:28:21.380
I'm not a 3D programmer
in the first place.

00:28:21.380 --> 00:28:24.540
And he was showing me, pointing
out the point where

00:28:24.540 --> 00:28:26.880
the ball in the 3D scene would
have moved-- so if this is the

00:28:26.880 --> 00:28:28.750
character here, and this
is our scene, the

00:28:28.750 --> 00:28:30.020
ball would move forward.

00:28:30.020 --> 00:28:32.490
And with the--

00:28:32.490 --> 00:28:34.070
which one is that, x?

00:28:34.070 --> 00:28:34.610
JAKE ARCHIBALD: We'll
pretend it's x.

00:28:34.610 --> 00:28:35.040
REMY SHARP: That's x.

00:28:35.040 --> 00:28:39.770
And so when the x went behind
the character, I actually

00:28:39.770 --> 00:28:42.820
flipped the canvases around.

00:28:45.650 --> 00:28:48.270
Because I was only painting the
floor and the character on

00:28:48.270 --> 00:28:50.780
there, the mountains are
actually completely

00:28:50.780 --> 00:28:55.550
background, like a CSS
background on the actual body

00:28:55.550 --> 00:28:56.460
of the element.

00:28:56.460 --> 00:28:58.260
So it can go behind it.

00:28:58.260 --> 00:29:01.780
There are moments where I think
the ball can bounce off

00:29:01.780 --> 00:29:04.150
of something, and suddenly it's
coming forward, but it's

00:29:04.150 --> 00:29:04.990
behind, or--

00:29:04.990 --> 00:29:05.765
JAKE ARCHIBALD: I've seen
you bounce it back.

00:29:05.765 --> 00:29:07.480
REMY SHARP: There's something,
if you hit it between the

00:29:07.480 --> 00:29:10.360
legs, there's something about
hitting that I've noticed.

00:29:10.360 --> 00:29:12.710
If you hit the character between
the legs, the ball's

00:29:12.710 --> 00:29:14.340
z-index doesn't work
out quite right.

00:29:14.340 --> 00:29:16.270
JAKE ARCHIBALD: Hang on, what?

00:29:16.270 --> 00:29:17.260
REMY SHARP: I don't
really know.

00:29:17.260 --> 00:29:18.790
It's tricky to debug.

00:29:18.790 --> 00:29:19.510
JAKE ARCHIBALD: Let's
gloss over that.

00:29:19.510 --> 00:29:23.760
Your game is just rife
with innuendo.

00:29:23.760 --> 00:29:25.490
"Head Shots" was definitely the
best name you could have

00:29:25.490 --> 00:29:26.050
picked for this.

00:29:26.050 --> 00:29:26.930
Everything else is wrong.

00:29:26.930 --> 00:29:29.175
REMY SHARP: There's these little
areas that basically

00:29:29.175 --> 00:29:32.730
I've shaved corners off to try
and get a game that works and

00:29:32.730 --> 00:29:36.832
people can see the technology
that is available natively in

00:29:36.832 --> 00:29:38.200
the browser without plug-ins.

00:29:38.200 --> 00:29:41.250
And if there's a few hitches
here and there, I'm

00:29:41.250 --> 00:29:42.385
kind of OK with it.

00:29:42.385 --> 00:29:46.430
It's the kind of thing I'd like
to go back and revisit.

00:29:46.430 --> 00:29:47.400
JAKE ARCHIBALD: What drove
the physics, then?

00:29:47.400 --> 00:29:48.820
Because you've got the sort
of bouncy physics.

00:29:48.820 --> 00:29:50.400
Was that just code you wrote, or
was that something that's--

00:29:50.400 --> 00:29:51.873
you've got to use another
library, or

00:29:51.873 --> 00:29:53.160
is that within three.js?

00:29:53.160 --> 00:29:53.770
REMY SHARP: So I'd
like to show you

00:29:53.770 --> 00:29:55.135
some of the code here.

00:29:55.135 --> 00:29:56.995
In--

00:29:56.995 --> 00:30:00.400
oh, where is it-- the game.js.

00:30:00.400 --> 00:30:03.690
It, again, is just kind of
having Seb, but I think I knew

00:30:03.690 --> 00:30:05.900
this already.

00:30:05.900 --> 00:30:11.020
There's a lot of code
in the 3D stuff.

00:30:11.020 --> 00:30:12.640
JAKE ARCHIBALD: This is stuff
you wrote, right?

00:30:12.640 --> 00:30:14.240
REMY SHARP: This is
code I've written.

00:30:14.240 --> 00:30:18.700
Seb did give me kind of large
chunks like the hit detection.

00:30:18.700 --> 00:30:22.550
He gave me that, and the
projection, which I can

00:30:22.550 --> 00:30:24.440
explain is mind-numbing.

00:30:24.440 --> 00:30:28.490
So this stuff, he gave me,
when we sat down for that

00:30:28.490 --> 00:30:32.000
two-hour session, he kind of
helped me get right as well.

00:30:32.000 --> 00:30:34.190
He literally had to come around
to my office and sit

00:30:34.190 --> 00:30:35.780
with me and say, Remy, Remy,
what are you doing?

00:30:35.780 --> 00:30:37.600
Why are you doing this?

00:30:37.600 --> 00:30:40.180
JAKE ARCHIBALD: So I can see
when it hits, the velocity is

00:30:40.180 --> 00:30:41.625
obviously going to go in
the other direction.

00:30:41.625 --> 00:30:43.840
REMY SHARP: Exactly.

00:30:43.840 --> 00:30:47.160
So this, because we're doing
multiply recalls, we're

00:30:47.160 --> 00:30:50.910
basically flipping the direction
every time it hits

00:30:50.910 --> 00:30:53.030
that boundary.

00:30:53.030 --> 00:30:55.390
So it's not that clever.

00:30:55.390 --> 00:30:57.010
There's not much physics there
in the first place.

00:30:57.010 --> 00:31:01.620
It just kind of slows it down.

00:31:01.620 --> 00:31:02.220
Actually, there's no physics.

00:31:02.220 --> 00:31:04.570
It's not proper physics,
at least.

00:31:04.570 --> 00:31:06.240
There's just-- that's
not the code.

00:31:06.240 --> 00:31:07.280
It's not pretty.

00:31:07.280 --> 00:31:12.150
But it's just multiply by 0.7
each time on each bounce, so

00:31:12.150 --> 00:31:15.820
it just eventually gets less
and less and less.

00:31:15.820 --> 00:31:18.130
JAKE ARCHIBALD: So how did you
go about building this?

00:31:18.130 --> 00:31:19.180
What was your strategy?

00:31:19.180 --> 00:31:22.300
Were you building it mostly in
the browser, or were you

00:31:22.300 --> 00:31:24.550
building it alongside the
phone for the whole

00:31:24.550 --> 00:31:26.720
development process?

00:31:26.720 --> 00:31:29.200
REMY SHARP: It's
a bit of a mix.

00:31:29.200 --> 00:31:31.470
Certainly, in fact,
that's pretty

00:31:31.470 --> 00:31:33.350
much my workflow generally.

00:31:33.350 --> 00:31:36.210
I try to do a bulk amount of
work directly in the browser.

00:31:36.210 --> 00:31:41.380
So I've got Chrome
and Canary here.

00:31:41.380 --> 00:31:46.430
So I do the bulk of my work
on the desktop browser.

00:31:46.430 --> 00:31:50.120
And where I can, I'll be--

00:31:50.120 --> 00:31:52.880
let's dock that bad boy.

00:31:52.880 --> 00:31:55.050
Where I can, I'll use dev
tools to do all my

00:31:55.050 --> 00:31:56.080
development.

00:31:56.080 --> 00:31:59.080
And I've started using that in
JSBin as well, actually, just

00:31:59.080 --> 00:32:01.210
using dev tools to
do the coding.

00:32:01.210 --> 00:32:04.105
Let's make this nice and big.

00:32:04.105 --> 00:32:08.830
I'm a big fan of right-click,
Save As, and then linking--

00:32:08.830 --> 00:32:10.426
what's background.js?

00:32:10.426 --> 00:32:11.955
That doesn't sound
like a real file.

00:32:16.160 --> 00:32:17.630
Oh, confusing.

00:32:17.630 --> 00:32:18.490
Hang on.

00:32:18.490 --> 00:32:18.920
Bear with me.

00:32:18.920 --> 00:32:21.290
So I don't know what that is.

00:32:21.290 --> 00:32:21.930
No domain.

00:32:21.930 --> 00:32:24.330
You guys build browsers.

00:32:24.330 --> 00:32:25.800
JAKE ARCHIBALD: Hey,
it's your site.

00:32:25.800 --> 00:32:28.522
REMY SHARP: That's true.

00:32:28.522 --> 00:32:31.030
Oh, it's because no JavaScript
loaded on this page.

00:32:31.030 --> 00:32:32.660
You have to actually
get into a game.

00:32:32.660 --> 00:32:32.920
JAKE ARCHIBALD: Ah, I see.

00:32:32.920 --> 00:32:34.990
So the first intro page--

00:32:34.990 --> 00:32:36.100
REMY SHARP: The first page
doesn't have any

00:32:36.100 --> 00:32:36.860
JavaScript in there.

00:32:36.860 --> 00:32:38.010
JAKE ARCHIBALD: That
makes sense.

00:32:38.010 --> 00:32:39.590
So part of the reason I guess
we're building it as just a

00:32:39.590 --> 00:32:41.920
single-page app is because
you've got the full screen

00:32:41.920 --> 00:32:43.120
support in there as well.

00:32:43.120 --> 00:32:46.820
And once you have full screen,
if you were to change URL,

00:32:46.820 --> 00:32:47.540
you'd lose that.

00:32:47.540 --> 00:32:49.620
REMY SHARP: Yeah.

00:32:49.620 --> 00:32:56.700
So going back, using dev tools
here, there's a bug with the

00:32:56.700 --> 00:32:58.170
PIN code coming down.

00:32:58.170 --> 00:33:02.990
I will find the code
that handles that.

00:33:02.990 --> 00:33:05.830
So let's just assume
it's start.js.

00:33:05.830 --> 00:33:10.680
And I tend to just to be safe,
right-click, Save As, and then

00:33:10.680 --> 00:33:14.290
put it to the right
directory, so JS.

00:33:14.290 --> 00:33:16.350
And just overwrite it.

00:33:16.350 --> 00:33:20.440
And I have live reload
turned on, don't I?

00:33:20.440 --> 00:33:22.236
Have I?

00:33:22.236 --> 00:33:23.500
Let's allow that.

00:33:23.500 --> 00:33:25.400
And then I'll be just making
changes directly into this

00:33:25.400 --> 00:33:27.150
code, so it's saving
directly to disk.

00:33:27.150 --> 00:33:30.260
So I'm trying to debug what
PIN number is coming in.

00:33:30.260 --> 00:33:32.810
So console log pin, save.

00:33:32.810 --> 00:33:35.900
I think I've got live
reload going on.

00:33:35.900 --> 00:33:38.100
JAKE ARCHIBALD: I like how the
dev tools are building up to

00:33:38.100 --> 00:33:39.020
their own ID.

00:33:39.020 --> 00:33:45.120
I think going back a few years
or certainly months, there was

00:33:45.120 --> 00:33:48.050
kind of a push back on that.

00:33:48.050 --> 00:33:50.630
It was like they didn't want
it to turn into a full ID.

00:33:50.630 --> 00:33:52.110
But I think that's kind
of drifting now.

00:33:52.110 --> 00:33:54.080
And it's nice to see some of
those features where you could

00:33:54.080 --> 00:33:55.940
just start developing straight
into the dev tools.

00:33:55.940 --> 00:33:56.180
REMY SHARP: Yeah.

00:33:56.180 --> 00:33:58.630
I'm a huge fan of--

00:33:58.630 --> 00:34:01.616
sorry, I'm just going to save
it and live reload.

00:34:01.616 --> 00:34:05.840
I'm a huge fan of coding
directly in dev tools.

00:34:05.840 --> 00:34:08.860
Particularly with the animation
loops, where I've

00:34:08.860 --> 00:34:13.940
got a loop that's rendering the
canvas each time, being

00:34:13.940 --> 00:34:17.510
able to just change that inside
of the loop, seeing the

00:34:17.510 --> 00:34:19.750
change instantly
is huge for me.

00:34:19.750 --> 00:34:22.870
Being able to replay XHR.

00:34:22.870 --> 00:34:25.810
Because I'm doing an XHR request
for the status of the

00:34:25.810 --> 00:34:28.850
game, and if it kept coming back
and failing because there

00:34:28.850 --> 00:34:30.380
was something wrong with the
server, all you need to do is

00:34:30.380 --> 00:34:31.580
boot the server back
up and then

00:34:31.580 --> 00:34:34.400
replay the network request.

00:34:34.400 --> 00:34:37.100
And then I get to get that--

00:34:37.100 --> 00:34:37.469
where is it?

00:34:37.469 --> 00:34:41.396
Replay, replay--

00:34:41.396 --> 00:34:42.460
it's somewhere, isn't it?

00:34:42.460 --> 00:34:43.750
JAKE ARCHIBALD: See,
this is the thing.

00:34:43.750 --> 00:34:45.440
This is the part I was hoping
you would show me, because

00:34:45.440 --> 00:34:47.510
it's the feature I've
not actually used

00:34:47.510 --> 00:34:49.370
in development myself.

00:34:49.370 --> 00:34:50.900
I've always just, developing,
refresh the

00:34:50.900 --> 00:34:53.020
page, do it all again.

00:34:53.020 --> 00:34:57.870
So when you came to do stuff on
the device, did you use the

00:34:57.870 --> 00:35:00.350
remote tools there?

00:35:00.350 --> 00:35:00.770
I say that.

00:35:00.770 --> 00:35:01.820
I saw you use it before.

00:35:01.820 --> 00:35:02.480
REMY SHARP: Yeah.

00:35:02.480 --> 00:35:04.110
JAKE ARCHIBALD: That's an
interview technique to pretend

00:35:04.110 --> 00:35:07.880
that I don't actually know
what you're doing.

00:35:07.880 --> 00:35:09.950
REMY SHARP: Like I said, the
first bulk is done on desktop.

00:35:09.950 --> 00:35:13.840
And then the tweaking and the
refinement, I do between the

00:35:13.840 --> 00:35:14.930
phone and desktop.

00:35:14.930 --> 00:35:19.990
So do you want me to join me
show you it live on the phone?

00:35:19.990 --> 00:35:21.080
JAKE ARCHIBALD: Yeah, it'd
be cool to see that.

00:35:21.080 --> 00:35:24.990
REMY SHARP: We might have to
pause during setup and--

00:35:24.990 --> 00:35:28.750
JAKE ARCHIBALD: Oh, well, if
it's too much effort, we can

00:35:28.750 --> 00:35:30.432
do something else.

00:35:30.432 --> 00:35:31.520
Because it would be interesting
to see.

00:35:31.520 --> 00:35:33.510
Because I know that we've
changed some stuff in Canary

00:35:33.510 --> 00:35:37.350
that makes it easier to
do device discovery

00:35:37.350 --> 00:35:40.430
as part of dev tools.

00:35:40.430 --> 00:35:44.180
So we had this thing for so long
where you would have to

00:35:44.180 --> 00:35:45.750
open up a command line.

00:35:45.750 --> 00:35:47.360
We had a whole sort
of ADB thing.

00:35:47.360 --> 00:35:49.510
The last time I was here,
I was doing that.

00:35:49.510 --> 00:35:52.580
You have to type the thing that
everyone can remember.

00:35:52.580 --> 00:35:53.890
I can't even remember it
off the top of my head.

00:35:53.890 --> 00:35:55.690
I know it's in my
bash history.

00:35:55.690 --> 00:35:58.660
But we're getting around a lot
of that stuff now with the

00:35:58.660 --> 00:36:00.950
inspect menu in Canary.

00:36:00.950 --> 00:36:01.640
How's that going, Remy?

00:36:01.640 --> 00:36:02.770
I'm doing a very good
job of filling.

00:36:02.770 --> 00:36:03.440
REMY SHARP: You're good.

00:36:03.440 --> 00:36:04.130
I'm almost there, actually.

00:36:04.130 --> 00:36:04.410
JAKE ARCHIBALD: Oh, brilliant.

00:36:04.410 --> 00:36:06.500
REMY SHARP: So what I'm doing
here is basically finding the

00:36:06.500 --> 00:36:08.455
IP address of this machine, and
I want to point my mobile

00:36:08.455 --> 00:36:12.920
phone to the IP address
of the machine.

00:36:12.920 --> 00:36:14.200
So 192--

00:36:14.200 --> 00:36:15.710
I hope this works--

00:36:15.710 --> 00:36:17.800
168.--

00:36:17.800 --> 00:36:19.150
JAKE ARCHIBALD: All of the stuff
we've been doing so far

00:36:19.150 --> 00:36:21.550
has been just successful
straightaway on the first try,

00:36:21.550 --> 00:36:22.650
which is great.

00:36:22.650 --> 00:36:24.270
REMY SHARP: Pretty much
out of the box.

00:36:24.270 --> 00:36:29.400
It's like we can't do
anything wrong here.

00:36:29.400 --> 00:36:32.370
So wow, look at that.

00:36:32.370 --> 00:36:33.220
Right.

00:36:33.220 --> 00:36:34.970
So I've got--

00:36:34.970 --> 00:36:37.060
this is literally the setup
that I will use.

00:36:37.060 --> 00:36:40.890
I'll point my phone to my
machine that I'm working on.

00:36:40.890 --> 00:36:44.063
I'm working in Chrome, so I've
got Chrome Inspector.

00:36:46.865 --> 00:36:47.840
What am I doing?

00:36:47.840 --> 00:36:48.750
I'm not taking that route.

00:36:48.750 --> 00:36:50.280
So sorry.

00:36:50.280 --> 00:36:53.730
I use Chrome, all right.

00:36:53.730 --> 00:37:00.160
I now have live reload
mixed into things.

00:37:00.160 --> 00:37:06.430
And say I want to make a change
to this font size.

00:37:06.430 --> 00:37:08.640
Let's see if this just works.

00:37:08.640 --> 00:37:09.640
1.5 is way too small.

00:37:09.640 --> 00:37:11.756
We want 7.5.

00:37:11.756 --> 00:37:12.555
Oh yes.

00:37:12.555 --> 00:37:14.650
JAKE ARCHIBALD: That's not
going to work, is it?

00:37:14.650 --> 00:37:15.550
REMY SHARP: That should
have worked.

00:37:15.550 --> 00:37:17.580
So it should have caused--

00:37:17.580 --> 00:37:18.110
JAKE ARCHIBALD: Oh wow.

00:37:18.110 --> 00:37:20.020
REMY SHARP: Well, I don't want
to hit refresh on the phone

00:37:20.020 --> 00:37:22.100
manually, because I've got
live reload in there.

00:37:22.100 --> 00:37:23.040
It should be doing it.

00:37:23.040 --> 00:37:24.500
JAKE ARCHIBALD: Oh
there we go.

00:37:24.500 --> 00:37:29.500
REMY SHARP: So I'm making
changes in dev tools in Chrome

00:37:29.500 --> 00:37:31.550
that it's saving.

00:37:31.550 --> 00:37:35.000
Because it's saving the
style.css directly to disk,

00:37:35.000 --> 00:37:37.800
it's causing the live reload
to trigger, which causes my

00:37:37.800 --> 00:37:39.280
mobile phone to update.

00:37:39.280 --> 00:37:43.810
Which means it can make those
fine grained adjustments.

00:37:43.810 --> 00:37:47.300
Like maybe the height of the
page isn't quite right,

00:37:47.300 --> 00:37:48.950
because there's too
much scroll.

00:37:48.950 --> 00:37:51.670
I want to bring the About
links up a little bit.

00:37:51.670 --> 00:37:54.400
I doubt I'll be able to
do this properly.

00:37:54.400 --> 00:37:56.600
JAKE ARCHIBALD: So I suppose
you could connect dev tools

00:37:56.600 --> 00:37:58.000
straight to the phone and
make these changes.

00:37:58.000 --> 00:38:00.490
But the benefit you've got here
is that you're linked to

00:38:00.490 --> 00:38:03.580
the files on the disk on your
laptop, and you're getting to

00:38:03.580 --> 00:38:05.220
see the changes both
on desktop and on

00:38:05.220 --> 00:38:06.470
mobile at the same time.

00:38:06.470 --> 00:38:06.805
REMY SHARP: Yeah.

00:38:06.805 --> 00:38:10.122
And I'm kind of hoping that--

00:38:10.122 --> 00:38:11.490
oh, it's not affecting it now.

00:38:11.490 --> 00:38:15.405
But I'm kind of hoping that
because I can go ahead and

00:38:15.405 --> 00:38:18.410
inspect the page that we're
looking at on the phone

00:38:18.410 --> 00:38:21.661
directly from Canary here--

00:38:21.661 --> 00:38:23.630
I think I've got all kinds
of things running here.

00:38:23.630 --> 00:38:24.420
So--

00:38:24.420 --> 00:38:25.020
JAKE ARCHIBALD: That's
the bit I like.

00:38:25.020 --> 00:38:27.270
Because that's the bit, we don't
have to use ADB anymore

00:38:27.270 --> 00:38:30.520
to do that weird incantation
just to connect to the device.

00:38:33.720 --> 00:38:35.410
REMY SHARP: This, for me, is
perfect, because I've got the

00:38:35.410 --> 00:38:37.620
newest version of dev tools.

00:38:37.620 --> 00:38:39.110
I've got all the
network stacks.

00:38:39.110 --> 00:38:40.360
Refresh there.

00:38:42.800 --> 00:38:45.270
Let me try that again.

00:38:45.270 --> 00:38:47.550
Yeah, so I've got the
full network stack.

00:38:47.550 --> 00:38:52.000
Here, if I had XHR requests, I
could replay them actually on

00:38:52.000 --> 00:38:52.900
the device.

00:38:52.900 --> 00:38:57.650
My full debugger, break
points and so on.

00:38:57.650 --> 00:39:00.950
The one bit that I'm missing,
and since I'm here at Google--

00:39:00.950 --> 00:39:02.200
JAKE ARCHIBALD: Hi, welcome
to Google Developers Live.

00:39:02.200 --> 00:39:03.380
This is mobile web Thur--

00:39:03.380 --> 00:39:04.900
Hi, welcome to Google
Developers Live.

00:39:04.900 --> 00:39:06.450
This is mobile web Thursday.

00:39:06.450 --> 00:39:07.920
But actually, we're not live.

00:39:07.920 --> 00:39:09.250
We're pre-recording this.

00:39:09.250 --> 00:39:11.490
And I guess it's not really
Google Developers either,

00:39:11.490 --> 00:39:14.310
because you're not
one of the gang.

00:39:14.310 --> 00:39:17.600
So I guess it's just developers,
not live, in the

00:39:17.600 --> 00:39:18.310
Google studios.

00:39:18.310 --> 00:39:21.585
It's not GDL, it's DNLIAGS.

00:39:21.585 --> 00:39:23.380
Din-a-lags.

00:39:23.380 --> 00:39:24.460
DNLIAGS.

00:39:24.460 --> 00:39:25.550
That's cool.

00:39:25.550 --> 00:39:27.890
That sounds a bit like dinner
ladies, I don't know.

00:39:27.890 --> 00:39:28.780
We could go with that.

00:39:28.780 --> 00:39:29.620
REMY SHARP: Din ladies.

00:39:29.620 --> 00:39:30.340
JAKE ARCHIBALD: Yeah.

00:39:30.340 --> 00:39:34.010
Anyway, in the studio today,
we've got Remy Sharp, from off

00:39:34.010 --> 00:39:37.570
of the internet, from
down in Brighton.

00:39:37.570 --> 00:39:41.462
And I certainly hope he's going
to brighten the studio.

00:39:41.462 --> 00:39:42.310
REMY SHARP: [DRUM ROLL].

00:39:42.310 --> 00:39:43.810
JAKE ARCHIBALD: Yeah.

00:39:43.810 --> 00:39:45.830
This is the third one that I've
done of this, so I can

00:39:45.830 --> 00:39:48.380
kind of teach you some
TV producing tips.

00:39:48.380 --> 00:39:53.120
So whenever you do a complete
zinger like that, it's good to

00:39:53.120 --> 00:39:56.120
kind of look at the camera and
just smile and nod a bit.

00:39:56.120 --> 00:39:58.690
Because you want to give people
time to recover from

00:39:58.690 --> 00:39:59.940
their kind of gut-wrenching--

