WEBVTT
Kind: captions
Language: en

00:00:00.190 --> 00:00:05.850
So, now that we know that the cache is
a small memory inside our processor

00:00:05.850 --> 00:00:10.660
where we are trying to find the data
before we go to the main memory.

00:00:10.660 --> 00:00:14.720
Let's take some time and
recap what we need out of cache.

00:00:14.720 --> 00:00:16.090
We need it to be fast.

00:00:16.090 --> 00:00:18.320
Which means it has to be small.

00:00:18.320 --> 00:00:20.890
Because it's small,
not everything will fit.

00:00:22.150 --> 00:00:26.440
There will be a lot of memory
locations that we do not have room for

00:00:26.440 --> 00:00:27.600
in our cache.

00:00:27.600 --> 00:00:32.640
So when a processor wants to access
some memory, we can have a cache hit,

00:00:32.640 --> 00:00:36.100
which occurs when we find what
we are looking for in the cache.

00:00:36.100 --> 00:00:40.190
The memory location we are interested in
was already brought from the memory to

00:00:40.190 --> 00:00:41.530
the cache before.

00:00:41.530 --> 00:00:45.760
So now we're accessing it, and
we can just find it in the cache.

00:00:45.760 --> 00:00:49.520
And the access is then very quick,
so this is what we want.

00:00:49.520 --> 00:00:54.700
We want fast accesses for
most of our memory accesses,

00:00:54.700 --> 00:00:57.390
and that happens when we
have a lot of cache hits.

00:00:57.390 --> 00:00:59.270
But because the cache is very small and

00:00:59.270 --> 00:01:03.440
not everything fits in it,
we can also have a cache miss.

00:01:03.440 --> 00:01:07.110
This happens when what we're looking for
is not in the cache, and in that case,

00:01:07.110 --> 00:01:09.330
we have to access the slow memory.

00:01:09.330 --> 00:01:13.550
When we have a cache miss, we want to
copy this location to the cache so

00:01:13.550 --> 00:01:17.070
that next time we access it, and
hopefully we will because of locality,

00:01:17.070 --> 00:01:19.500
we will have a cache hit.

00:01:19.500 --> 00:01:24.000
So it is necessary to have cache misses
because that's how we really bring

00:01:24.000 --> 00:01:26.950
stuff into the cache
in order to have hits.

00:01:26.950 --> 00:01:31.820
The more locality we have,
the more cache hits we will have and

00:01:31.820 --> 00:01:33.180
the fewer cache misses.

00:01:33.180 --> 00:01:35.990
Because one miss will bring
the data into the cache and

00:01:35.990 --> 00:01:38.990
then hopefully we will use it many,
many times.

00:01:38.990 --> 00:01:43.630
When we a cache miss, that is slow,
that access is going to take some time.

00:01:43.630 --> 00:01:45.300
But that should happen very rarely.

00:01:45.300 --> 00:01:48.060
Most of the time when we need something,
we find it in the cache.

00:01:49.150 --> 00:01:51.080
Or, at least we hope to do that.

00:01:51.080 --> 00:01:53.670
And we want to design our caches so
that that's how it works.

