WEBVTT
Kind: captions
Language: en

00:00:03.060 --> 00:00:05.700
Hi, I'm Carrie Anne, and welcome to Crash
Course Computer Science!

00:00:05.700 --> 00:00:09.849
We’ve talked about computer memory several
times in this series, and we even designed

00:00:09.849 --> 00:00:11.070
some in Episode 6.

00:00:11.070 --> 00:00:13.710
In general, computer memory is non-permanent.

00:00:13.710 --> 00:00:17.840
If your xbox accidently gets unplugged and
turns off, any data saved in memory is lost.

00:00:17.840 --> 00:00:20.240
For this reason, it’s called volatile memory.

00:00:20.240 --> 00:00:24.540
What we haven’t talked so much about this
series is storage, which is a tad different.

00:00:24.550 --> 00:00:28.220
Any data written to storage, like your hard
drive, will stay there until it’s over-written

00:00:28.220 --> 00:00:30.660
or deleted, even if the power goes out.

00:00:30.660 --> 00:00:31.660
It’s non-volatile.

00:00:31.660 --> 00:00:36.329
It used to be that volatile memory was fast
and non-volatile storage was slow, but as

00:00:36.329 --> 00:00:40.149
computing technologies have improved, this
distinction is becoming less true, and the

00:00:40.149 --> 00:00:41.949
terms have started to blend together.

00:00:41.949 --> 00:00:46.420
Nowadays, we take for granted technologies
like this little USB stick, which offers gigabytes

00:00:46.420 --> 00:00:51.940
of memory, reliable over long periods of time, all at low cost, but this wasn’t always true.

00:00:52.040 --> 00:01:01.060
INTRO

00:01:01.060 --> 00:01:05.660
The earliest computer storage was paper punch cards, and its close cousin, punched paper tape.

00:01:05.660 --> 00:01:11.140
By the 1940s, punch cards had largely standardized
into a grid of 80 columns and 12 rows, allowing

00:01:11.150 --> 00:01:15.480
for a maximum of 960 bits of data to be stored
on a single card.

00:01:15.480 --> 00:01:19.780
The largest program ever punched onto cards,
that we know of, was the US Military’s Semi-Automatic

00:01:19.780 --> 00:01:24.970
Ground Environment, or SAGE, an Air Defense
System that became operational in 1958.

00:01:24.970 --> 00:01:30.860
The main program was stored on 62,500 punchcards,
roughly equivalent to 5 megabytes of data,

00:01:30.860 --> 00:01:34.070
that’s the size of an average smartphone
photo today.

00:01:34.070 --> 00:01:38.000
Punch cards were a useful and popular form
of storage for decades, they didn’t need

00:01:38.000 --> 00:01:40.280
power, plus paper was cheap and reasonably
durable.

00:01:40.280 --> 00:01:44.820
However, punchcards were slow and write-once,
you can’t easily un-punch a hole.

00:01:44.820 --> 00:01:48.842
So they were a less useful form of memory,
where a value might only be needed for a fraction

00:01:48.842 --> 00:01:51.780
of a second during a program's execution,
and then discarded.

00:01:51.780 --> 00:01:55.440
A faster, larger and more flexible form of
computer memory was needed.

00:01:55.440 --> 00:01:59.260
An early and practical approach was developed
by J. Presper Eckert, as he was finishing

00:01:59.260 --> 00:02:01.610
work on ENIAC in 1944.

00:02:01.610 --> 00:02:05.130
His invention was called Delay Line Memory,
and it worked like this.

00:02:05.130 --> 00:02:07.750
You take a tube and fill it with a liquid,
like mercury.

00:02:07.750 --> 00:02:10.689
Then, you put a speaker at one end and microphone
at the other.

00:02:10.689 --> 00:02:13.280
When you pulse the speaker, it creates a pressure
wave.

00:02:13.280 --> 00:02:17.200
This takes time to propagate to the other
end of the tube, where it hits the microphone,

00:02:17.200 --> 00:02:19.469
converting it back into an electrical signal.

00:02:19.469 --> 00:02:22.440
And we can use this propagation delay to store
data!

00:02:22.440 --> 00:02:26.140
Imagine that the presence of a pressure wave
is a 1 and the absence of a pressure wave

00:02:26.140 --> 00:02:27.200
is a 0.

00:02:27.200 --> 00:02:30.900
Our speaker can output a binary sequence like
1010 0111.

00:02:30.900 --> 00:02:35.370
The corresponding waves will travel down the
tube, in order, and a little while later,

00:02:35.370 --> 00:02:38.950
hit the microphone, which converts the signal
back into 1’s and 0’s.

00:02:38.950 --> 00:02:43.019
If we create a circuit that connects the microphone
to the speaker, plus a little amplifier to

00:02:43.019 --> 00:02:46.750
compensate for any loss, we can create a loop
that stores data.

00:02:46.750 --> 00:02:50.829
The signal traveling along the wire is near
instantaneous, so there’s only ever one

00:02:50.829 --> 00:02:53.340
bit of data showing at any moment in time.

00:02:53.340 --> 00:02:55.880
But in the tube, you can store many bits!

00:02:55.880 --> 00:02:59.971
After working on ENIAC, Eckert and his colleague
John Mauchly, set out to build a bigger and

00:02:59.980 --> 00:03:03.909
better computer called EDVAC, incorporating
Delay Line Memory.

00:03:03.909 --> 00:03:09.940
In total, the computer had 128 Delay Lines,
each capable of storing 352 bits.

00:03:09.940 --> 00:03:15.090
That’s a grand total of 45 thousands bits
of memory, not too shabby for 1949!

00:03:15.090 --> 00:03:19.530
This allowed EDVAC to be one of the very earliest
Stored-Program Computers, which we talked

00:03:19.530 --> 00:03:20.860
about in Episode 10.

00:03:20.860 --> 00:03:24.600
However, a big drawback with delay line memory
is that you could only read one bit of data

00:03:24.609 --> 00:03:26.680
from a tube at any given instant.

00:03:26.680 --> 00:03:29.689
If you wanted to access a specific bit, like
bit 112, you’d have to wait for it to come

00:03:29.689 --> 00:03:34.419
around in the loop, what’s called sequential
or cyclic-access memory, whereas we really

00:03:34.420 --> 00:03:38.189
want random access memory, where we can access
any bit at any time.

00:03:38.189 --> 00:03:41.940
It also proved challenging to increase the
density of the memory, packing waves closer

00:03:41.950 --> 00:03:44.010
together meant they were more easily mixed
up.

00:03:44.010 --> 00:03:48.609
In response, new forms of delay line memory
were invented, such as magnetostrictive delay

00:03:48.609 --> 00:03:49.180
lines.

00:03:49.180 --> 00:03:52.880
These delay lines use a metal wire that could
be twisted, creating little torsional waves

00:03:52.889 --> 00:03:54.439
that represented data.

00:03:54.440 --> 00:03:59.760
By forming the wire into a coil, you could
store around 1000 bits in a 1 foot by 1 foot square.

00:03:59.760 --> 00:04:04.700
However, delay line memory was largely obsolete
by the mid 1950s, surpassed in performance,

00:04:04.700 --> 00:04:09.260
reliability and cost by a new kid on the block:
magnetic core memory which was constructed

00:04:09.269 --> 00:04:11.430
out of little magnetic donuts, called cores.

00:04:11.430 --> 00:04:15.160
If you loop a wire around this core…. and
run an electrical current through the wire,

00:04:15.160 --> 00:04:17.879
we can magnetize the core in a certain direction.

00:04:17.880 --> 00:04:20.680
If we turn the current off, the core will
stay magnetized.

00:04:20.680 --> 00:04:25.200
If we pass current through the wire in the
opposite direction, the magnetization direction,

00:04:25.200 --> 00:04:27.440
called polarity, flips the other way.

00:04:27.440 --> 00:04:29.690
In this way, we can store 1’s and 0’s!

00:04:29.690 --> 00:04:34.199
1 bit of memory isn’t very useful, so these
little donuts were arranged into grids.

00:04:34.199 --> 00:04:37.990
There were wires for selecting the right row
and column, and a wire that ran through every

00:04:37.990 --> 00:04:40.330
core, which could be used to read or write
a bit.

00:04:40.330 --> 00:04:42.699
Here is an actual piece of core memory!

00:04:42.699 --> 00:04:47.510
In each of these little yellow squares, there
are 32 rows and 32 columns of tiny cores,

00:04:47.510 --> 00:04:49.180
each one holding 1 bit of data.

00:04:49.180 --> 00:04:53.059
So, each of these yellow squares could hold
1024 bits.

00:04:53.059 --> 00:04:59.490
In total, there are 9 of these, so this memory
board could hold a maximum of 9216 bits, which

00:04:59.490 --> 00:05:00.800
is around 9 kilobytes.

00:05:00.800 --> 00:05:06.639
The first big use of core memory was MIT’s
Whirlwind 1 computer, in 1953, which used

00:05:06.640 --> 00:05:08.580
a 32 by 32 core arrangement.

00:05:08.580 --> 00:05:13.080
And, instead of just a single plane of cores,
like this, it was 16 boards deep, providing

00:05:13.080 --> 00:05:15.520
roughly 16 thousand bits of storage.

00:05:15.520 --> 00:05:19.390
Importantly, unlike delay line memory, any
bit could be accessed at any time.

00:05:19.390 --> 00:05:23.159
This was a killer feature, and magnetic core
memory became the predominant Random Access

00:05:23.159 --> 00:05:28.199
Memory technology for two decades, beginning
in the mid 1950s even though it was typically

00:05:28.199 --> 00:05:29.849
woven by hand!

00:05:29.849 --> 00:05:34.379
Although starting at roughly 1 dollar per
bit, the cost fell to around 1 cent per bit

00:05:34.379 --> 00:05:35.630
by the 1970s.

00:05:35.630 --> 00:05:39.540
Unfortunately, even 1 cent per bit isn’t
cheap enough for storage.

00:05:39.540 --> 00:05:44.220
As previously mentioned, an average smartphone
photo is around 5 megabytes in size, that’s

00:05:44.220 --> 00:05:45.940
roughly 40 million bits.

00:05:45.940 --> 00:05:50.190
Would you pay 4 hundred thousand dollars to
store a photo on core memory?

00:05:50.190 --> 00:05:54.000
If you have that kind of money to drop, did
you know that Crash Course is on Patreon?

00:05:54.000 --> 00:05:54.680
Right?

00:05:54.760 --> 00:05:55.260
Wink wink.

00:05:55.320 --> 00:05:59.600
Anyway, there was tremendous research into
storage technologies happening at this time.

00:05:59.600 --> 00:06:04.380
By 1951, Eckert and Mauchly had started their
own company, and designed a new computer called

00:06:04.380 --> 00:06:07.509
UNIVAC, one of the earliest commercially sold
computers.

00:06:07.509 --> 00:06:10.610
It debuted with a new form of computer storage:
magnetic tape.

00:06:10.610 --> 00:06:15.280
This was a long, thin and flexible strip of
magnetic material, stored in reels.

00:06:15.280 --> 00:06:19.040
The tape could be moved forwards or backwards
inside of a machine called a tape drive.

00:06:19.040 --> 00:06:23.020
Inside is a write head, which passes current
through a wound wire to generate a magnetic

00:06:23.020 --> 00:06:26.340
field, causing a small section of the tape
to become magnetized.

00:06:26.340 --> 00:06:30.900
The direction of the current sets the polarity,
again, perfect for storing 1’s and 0’s.

00:06:30.900 --> 00:06:34.660
There was also a separate read head could
detect the polarity non-destructively.

00:06:34.660 --> 00:06:40.280
The UNIVAC used half-inch-wide tape with 8
parallel data tracks, each able to store 128

00:06:40.289 --> 00:06:41.970
bits of data per inch.

00:06:41.970 --> 00:06:46.761
With each reel containing 1200 feet of tape,
it meant you could store roughly 15 million

00:06:46.761 --> 00:06:48.950
bits – that’s almost 2 megabytes!

00:06:48.950 --> 00:06:53.681
Although tape drives were expensive, the magnetic
tape itself was cheap and compact, and for

00:06:53.681 --> 00:06:56.759
this reason, they’re still used today for
archiving data.

00:06:56.760 --> 00:06:58.900
The main drawback is access speed.

00:06:58.900 --> 00:07:03.220
Tape is inherently sequential, you have to
rewind or fast-forward to get to data you

00:07:03.240 --> 00:07:03.920
want.

00:07:03.920 --> 00:07:08.260
This might mean traversing hundreds of feet
of tape to retrieve a single byte, which is

00:07:08.260 --> 00:07:08.760
slow.

00:07:08.760 --> 00:07:13.600
A related popular technology in the 1950s
and 60s was Magnetic Drum Memory.

00:07:13.610 --> 00:07:17.860
This was a metal cylinder – called a drum
– coated in a magnetic material for recording data.

00:07:18.480 --> 00:07:23.480
The drum was rotated continuously, and positioned along its length were dozens of read and write heads.

00:07:23.480 --> 00:07:27.760
These would wait for the right spot to rotate underneath them to read or write a bit of data.

00:07:27.780 --> 00:07:32.780
To keep this delay as short as possible, drums
were rotated thousand of revolutions per minute!

00:07:32.780 --> 00:07:37.980
By 1953, when the technology started to take
off, you could buy units able to record 80,000

00:07:37.980 --> 00:07:43.160
bits of data – that’s 10 kilobytes, but
the manufacture of drums ceased in the 1970s.

00:07:43.160 --> 00:07:47.260
However, Magnetic Drums did directly lead
to the development of Hard Disk Drives, which

00:07:47.260 --> 00:07:50.860
are very similar, but use a different geometric
configuration.

00:07:50.860 --> 00:07:54.260
Instead of large cylinder, hard disks use,
well… disks… that are hard.

00:07:54.260 --> 00:07:55.260
Hence the name!

00:07:55.260 --> 00:07:59.360
The storage principle is the same, the surface
of a disk is magnetic, allowing write and

00:07:59.360 --> 00:08:01.539
read heads to store and retrieve 1’s and
0’s.

00:08:01.539 --> 00:08:06.130
The great thing about disks is that they are
thin, so you can stack many of them together,

00:08:06.130 --> 00:08:08.560
providing a lot of surface area for data storage.

00:08:08.560 --> 00:08:13.620
That’s exactly what IBM did for the world's
first computer with a disk drive: the RAMAC 305.

00:08:13.620 --> 00:08:14.740
Sweet name BTW.

00:08:14.740 --> 00:08:19.560
It contained fifty, 24-inch diameter disks,
offering a total storage capacity of roughly

00:08:19.560 --> 00:08:20.560
5 megabytes.Yess!!

00:08:20.560 --> 00:08:25.080
We’ve finally gotten to a technology that
can store a single smartphone photo!

00:08:25.080 --> 00:08:27.539
The year was 1956.

00:08:27.539 --> 00:08:31.770
To access any bit of data, a read/write head
would travel up or down the stack to the right

00:08:31.770 --> 00:08:34.029
disk, and then slide in between them.

00:08:34.029 --> 00:08:38.000
Like drum memory, the disks are spinning,
so the head has to wait for the right section

00:08:38.000 --> 00:08:39.209
to come around.

00:08:39.209 --> 00:08:44.690
The RAMAC 305 could access any block of data,
on average, in around 6/10ths of a second,

00:08:44.690 --> 00:08:46.360
what’s called the seek time.

00:08:46.360 --> 00:08:50.910
While great for storage, this was not nearly
fast enough for memory, so the RAMAC 305 also

00:08:50.910 --> 00:08:53.700
had drum memory and magnetic core memory.

00:08:53.700 --> 00:08:57.980
This is an example of a memory hierarchy,
where you have a little bit of fast memory,

00:08:57.980 --> 00:09:02.420
which is expensive, slightly more medium-speed
memory, which is less expensive, and then

00:09:02.420 --> 00:09:04.860
a lot of slowish memory, which is cheap.

00:09:04.860 --> 00:09:07.880
This mixed approach strikes a balance between
cost and speed.

00:09:07.880 --> 00:09:11.700
Hard disk drives rapidly improved and became
commonplace by the 1970s.

00:09:11.700 --> 00:09:16.360
A hard disk like this can easily hold 1 terabyte
of data today – that’s a trillion bytes

00:09:16.360 --> 00:09:19.460
– or roughly 200,000 five megabyte photos!

00:09:19.460 --> 00:09:23.560
And these types of drives can be bought online
for as little as 40 US dollars.

00:09:23.560 --> 00:09:29.600
That’s 0.0000000005 cents per bit.

00:09:29.610 --> 00:09:32.320
A huge improvement over core memory’s 1
cent per bit!

00:09:32.320 --> 00:09:36.670
Also, modern drives have an average seek time
of under 1/100th of a second.

00:09:36.670 --> 00:09:41.100
I should also briefly mention a close cousin
of hard disks, the floppy disk, which is basically

00:09:41.100 --> 00:09:44.530
the same thing, but uses a magnetic medium
that’s, floppy.

00:09:44.530 --> 00:09:48.420
You might recognise it as the save icon on
some of your applications, but it was once

00:09:48.420 --> 00:09:50.220
a real physical object!

00:09:50.220 --> 00:09:54.390
It was most commonly used for portable storage,
and became near ubiquitous from the mid 1970s

00:09:54.390 --> 00:09:56.339
up to the mid 90s.

00:09:56.339 --> 00:09:58.300
And today it makes a pretty good coaster.

00:09:58.300 --> 00:10:03.440
Higher density floppy disks, like Zip Disks,
became popular in the mid 1990s, but fell

00:10:03.440 --> 00:10:04.920
out of favor within a decade.

00:10:04.920 --> 00:10:09.640
Optical storage came onto the scene in 1972,
in the form of a 12-inch “laser disc.”

00:10:09.640 --> 00:10:13.320
However, you are probably more familiar with
its later, smaller, are more popular cousin,

00:10:13.320 --> 00:10:17.880
the Compact Disk, or CD,  as well as the DVD which took off in the 90s.

00:10:17.880 --> 00:10:21.639
Functionally, these technologies are pretty
similar to hard disks and floppy disks, but

00:10:21.639 --> 00:10:25.339
instead of storing data magnetically, optical
disks have little physical divots in their

00:10:25.339 --> 00:10:30.030
surface that cause light to be reflected differently,
which is captured by an optical sensor, and

00:10:30.030 --> 00:10:31.640
decoded into 1’s and 0’s.

00:10:31.640 --> 00:10:35.620
However, today, things are moving to solid
state technologies, with no moving parts,

00:10:35.620 --> 00:10:38.080
like this hard drive and also this USB stick.

00:10:38.080 --> 00:10:41.860
Inside are Integrated Circuits, which we talked
about in Episode 15.

00:10:41.860 --> 00:10:47.480
The first RAM integrated circuits became available
in 1972 at 1 cent per bit, quickly making

00:10:47.480 --> 00:10:49.290
magnetic core memory obsolete.

00:10:49.290 --> 00:10:54.220
Today, costs have fallen so far, that hard
disk drives are being replaced with non-volatile,

00:10:54.220 --> 00:10:57.140
Solid State Drives, or SSDs, as the cool kids
say.

00:10:57.140 --> 00:11:01.180
Because they contain no moving parts, they
don’t really have to seek anywhere, so SSD

00:11:01.180 --> 00:11:04.170
access times are typically under 1/1000th
of a second.

00:11:04.170 --> 00:11:05.250
That’s fast!

00:11:05.250 --> 00:11:08.060
But it’s still many times slower than your
computer’s RAM.

00:11:08.060 --> 00:11:11.360
For this reason, computers today still use
memory hierarchies.

00:11:11.360 --> 00:11:14.240
So, we’ve come along way since the 1940s.

00:11:14.240 --> 00:11:18.160
Much like transistor count and Moore’s law,
which we talked about in Episode 14, memory

00:11:18.161 --> 00:11:21.820
and storage technologies have followed a similar
exponential trend.

00:11:21.820 --> 00:11:25.850
From early core memory costing millions of
dollars per megabyte, we’re steadily fallen,

00:11:25.850 --> 00:11:29.220
to mere cents by 2000, and only fractions
of a cent today.

00:11:29.220 --> 00:11:31.980
Plus, there’s WAY less punch cards to keep
track of.

00:11:31.980 --> 00:11:34.839
Seriously, can you imagine if there was a
slight breeze in that room containing the

00:11:34.840 --> 00:11:36.420
SAGE program?

00:11:36.420 --> 00:11:38.000
62,500 punch cards.

00:11:38.000 --> 00:11:39.980
I don’t even want to think about it.

00:11:39.980 --> 00:11:41.500
I'll see you next week.

