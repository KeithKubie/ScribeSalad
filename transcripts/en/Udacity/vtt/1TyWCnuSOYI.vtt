WEBVTT
Kind: captions
Language: en

00:00:01.320 --> 00:00:04.430
The Android plugin can reduce
the size of your app by stripping out

00:00:04.430 --> 00:00:06.530
unused code and resources.

00:00:06.530 --> 00:00:09.357
It does this with the help
of a tool called Proguard.

00:00:09.357 --> 00:00:13.080
Proguard can do a lot of interesting
stuff including obfuscating your code by

00:00:13.080 --> 00:00:15.840
giving all your classes and
methods meaningless names.

00:00:15.840 --> 00:00:18.622
Though that's mostly of interest if
you're really worried about your code

00:00:18.622 --> 00:00:20.450
being reverse engineered.

00:00:20.450 --> 00:00:23.450
For our purposes, the properties we
want to configure on our build type

00:00:23.450 --> 00:00:27.310
are minifyEnabled and shrinkResources.

00:00:27.310 --> 00:00:28.540
In this project,

00:00:28.540 --> 00:00:32.100
we have declared a dependency on
Google's mobile services library.

00:00:32.100 --> 00:00:34.830
But we're not actually using
anything from that library.

00:00:34.830 --> 00:00:37.130
Proguard is smart enough
to figure that out and

00:00:37.130 --> 00:00:39.160
will strip out the unused
code from our APK.

00:00:39.160 --> 00:00:43.800
The mobile services library also
includes many resources like drawables

00:00:43.800 --> 00:00:45.290
for sign in buttons.

00:00:45.290 --> 00:00:48.701
Turning on shrinkResources will
strip out any unused resources.

00:00:48.701 --> 00:00:51.260
We've configured two new build types.

00:00:51.260 --> 00:00:54.360
One of which has turned on magnification
and resource shrinking and

00:00:54.360 --> 00:00:55.930
one of which has not.

00:00:55.930 --> 00:00:59.960
Let's check out the relative sizes of
the APK's generated by each filed type.

00:00:59.960 --> 00:01:03.560
Let's run the assemble task
to generate both APKs.

00:01:03.560 --> 00:01:07.760
If we then go find out APKs in App,
build, outputs, APK.

00:01:07.760 --> 00:01:12.920
We see that our big APK is 2.9
megabytes, whereas our shrunk APK,

00:01:12.920 --> 00:01:17.480
that was using minification and resource
shrinking, is only 1.2 megabytes.

00:01:17.480 --> 00:01:20.910
There's a lot more you can do to
optimize your APK using Proguard.

00:01:20.910 --> 00:01:23.580
We've included some resources in the
course code, where you can learn more.

