WEBVTT
Kind: captions
Language: en

00:00:00.730 --> 00:00:03.230
WOJTEK KALICINSKI: You know how
sometimes your phone battery

00:00:03.230 --> 00:00:05.200
dies, and you plug your
device in for the night

00:00:05.200 --> 00:00:07.740
but fall asleep before
it finishes booting?

00:00:07.740 --> 00:00:10.260
Then you wake up an hour
late because your alarm clock

00:00:10.260 --> 00:00:11.340
didn't work.

00:00:11.340 --> 00:00:13.560
What if I told you that
you can save your users

00:00:13.560 --> 00:00:16.230
from this disaster by
enabling your apps to run

00:00:16.230 --> 00:00:18.090
in the new Direct Boot mode?

00:00:18.090 --> 00:00:21.860
Direct Boot is available on
supported devices with API 24

00:00:21.860 --> 00:00:25.350
and up, and it lets applications
run in a limited environment

00:00:25.350 --> 00:00:28.140
right after their device boots
before the user has a chance

00:00:28.140 --> 00:00:30.235
to unlock it for the first time.

00:00:30.235 --> 00:00:31.610
There are a couple
of changes you

00:00:31.610 --> 00:00:34.050
will have to make to your
app to support Direct Boot.

00:00:34.050 --> 00:00:36.380
But before you start,
first take a moment

00:00:36.380 --> 00:00:39.650
to decide whether your app
should run during this mode.

00:00:39.650 --> 00:00:41.120
The best candidates
are apps that

00:00:41.120 --> 00:00:43.770
provide timely and important
notifications, like alarm

00:00:43.770 --> 00:00:45.420
clocks or messaging clients.

00:00:45.420 --> 00:00:47.880
Another use case will be
applications that implement

00:00:47.880 --> 00:00:49.920
accessibility services.

00:00:49.920 --> 00:00:52.050
In any case, once
you've made the decision

00:00:52.050 --> 00:00:54.490
to support Direct Boot,
the next thing to do

00:00:54.490 --> 00:00:56.420
is figure out which
components of your app

00:00:56.420 --> 00:00:58.450
will run before unlocking.

00:00:58.450 --> 00:01:00.900
Only components that
you explicitly mark with

00:01:00.900 --> 00:01:05.129
directbootaware=true in the
manifest will be eligible

00:01:05.129 --> 00:01:06.950
to run during Direct Boot.

00:01:06.950 --> 00:01:08.910
You can listen for
the new action locked

00:01:08.910 --> 00:01:12.390
boot completed broadcast
to schedule any jobs

00:01:12.390 --> 00:01:15.470
or alarms that you need as
soon as the device boots.

00:01:15.470 --> 00:01:17.980
Note that once the user
unlocks the device,

00:01:17.980 --> 00:01:20.600
all apps will still receive
the Action Boot Completed

00:01:20.600 --> 00:01:22.470
broadcast as usual.

00:01:22.470 --> 00:01:25.070
If you want to directly query
the state of the device,

00:01:25.070 --> 00:01:27.770
you can call user
manager is user unlocked

00:01:27.770 --> 00:01:30.660
or listen for the action user
unlock broadcast from a running

00:01:30.660 --> 00:01:32.490
component of your app.

00:01:32.490 --> 00:01:36.150
And finally, the last step to
make your app Direct Boot ready

00:01:36.150 --> 00:01:38.390
is to move any private
app data needed

00:01:38.390 --> 00:01:40.360
by your Direct Boot
aware components

00:01:40.360 --> 00:01:43.080
to the new device
protected storage area.

00:01:43.080 --> 00:01:45.300
Now, the default
storage area for apps

00:01:45.300 --> 00:01:47.840
is called the credential
protected storage.

00:01:47.840 --> 00:01:49.590
This is the location
that is accessed

00:01:49.590 --> 00:01:52.830
when you use all the file
APIs on the context object

00:01:52.830 --> 00:01:55.550
and can only be decrypted
once the user enters

00:01:55.550 --> 00:01:57.140
their credentials.

00:01:57.140 --> 00:02:00.590
To be able to store and read
data during Direct Boot,

00:02:00.590 --> 00:02:04.240
you have to get and use a device
protected storage context so

00:02:04.240 --> 00:02:07.530
that any file related API
calls use the device protected

00:02:07.530 --> 00:02:09.180
storage area.

00:02:09.180 --> 00:02:11.540
If there is any data that
previous versions of your app

00:02:11.540 --> 00:02:14.720
created, or which was restored
from automatic backup,

00:02:14.720 --> 00:02:17.790
and you need to migrate it to
the device protected storage,

00:02:17.790 --> 00:02:19.510
you can use one of
the helper functions

00:02:19.510 --> 00:02:22.650
for moving shared
preferences and databases.

00:02:22.650 --> 00:02:24.730
Remember to think
carefully about what

00:02:24.730 --> 00:02:27.400
to store in the device
protected storage.

00:02:27.400 --> 00:02:30.360
All sensitive user data,
like full message history,

00:02:30.360 --> 00:02:32.500
access tokens, and
passwords, should

00:02:32.500 --> 00:02:34.710
go in the credential
protected storage.

00:02:34.710 --> 00:02:37.080
Only use the device
protected storage area

00:02:37.080 --> 00:02:39.000
for any information
that is absolutely

00:02:39.000 --> 00:02:42.620
necessary for your app to
work while in Direct Boot.

00:02:42.620 --> 00:02:45.210
Direct Boot mode will be
enabled out of the box

00:02:45.210 --> 00:02:47.390
by default on new
devices that come out

00:02:47.390 --> 00:02:49.650
with API 24 pre-installed.

00:02:49.650 --> 00:02:53.570
You can test Direct Boot now if
you own a Nexus 5x, Nexus 6b,

00:02:53.570 --> 00:02:56.320
or a Pixel C. Go
into Developer Tools

00:02:56.320 --> 00:02:58.750
and select Convert
to File Encryption.

00:02:58.750 --> 00:03:01.420
A word of warning though,
this will wipe all data

00:03:01.420 --> 00:03:02.900
on your device.

00:03:02.900 --> 00:03:06.030
Remember, users are counting
on those timely notifications,

00:03:06.030 --> 00:03:09.970
so build better apps by
implementing Direct Boot now.

00:03:09.970 --> 00:03:12.160
And check out our playlist
for other new features

00:03:12.160 --> 00:03:14.610
that we're introducing
at Android.

