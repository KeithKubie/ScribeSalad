WEBVTT
Kind: captions
Language: en

00:00:00.420 --> 00:00:01.900
David, what did you come up with?

00:00:01.900 --> 00:00:02.750
&gt;&gt; So the descend-ladder

00:00:02.750 --> 00:00:05.620
operator is pretty similar to
the climb-ladder operator.

00:00:05.620 --> 00:00:08.990
We still have to have a dry ladder in
order to climb up or down the ladder.

00:00:08.990 --> 00:00:10.740
This time in order to
climb down the ladder,

00:00:10.740 --> 00:00:12.448
we have to already be on the ladder.

00:00:12.448 --> 00:00:15.432
So our preconditions are that we are on
the ladder and the ladder is dry.

00:00:15.432 --> 00:00:18.050
Our postcondition is that
we are now on the floor.

00:00:18.050 --> 00:00:20.552
So we just kind of flipped
the climb ladder operator.

00:00:20.552 --> 00:00:23.670
For paint-ceiling we know that the robot
has to already be on the ladder in order

00:00:23.670 --> 00:00:26.820
to reach the ceiling so the precondition
here is that the robot is on the ladder.

00:00:27.900 --> 00:00:29.980
After its painted the ceiling
we have two things,

00:00:29.980 --> 00:00:33.504
the ceiling is now painted and
the ladder is not dry.

00:00:33.504 --> 00:00:34.430
We haven't seen this before but

00:00:34.430 --> 00:00:39.170
this goes back to what you were saying
Ashok about we have to explicitly negate

00:00:39.170 --> 00:00:40.930
things that were true
in the world before.

00:00:40.930 --> 00:00:44.790
The ceiling was dry,
but now it's not dry.

00:00:44.790 --> 00:00:47.610
Similarly, for painting the ladder,
the robot has to be on the floor.

00:00:47.610 --> 00:00:49.730
It can't paint the ladder
while it's standing on it.

00:00:49.730 --> 00:00:52.140
And the post condition is that
the ladder is painted and

00:00:52.140 --> 00:00:54.090
that the ladder is not dry.

00:00:54.090 --> 00:00:55.300
&gt;&gt; This is right, David.

00:00:55.300 --> 00:00:56.920
Let us note a couple of other things.

00:00:56.920 --> 00:00:59.430
First, note how a precondition
logic is providing

00:00:59.430 --> 00:01:02.350
precision to this specification or
these operators.

00:01:02.350 --> 00:01:06.270
That's the power of logic,
it provides clarity and precision.

00:01:06.270 --> 00:01:08.970
The other is once again note
that the preconditions have only

00:01:08.970 --> 00:01:10.290
positive literals.

00:01:10.290 --> 00:01:13.891
While the postconditions may
have negative literals as well.

00:01:13.891 --> 00:01:16.103
&gt;&gt; So, Ashok why is it that we
can't have negative literals in

00:01:16.103 --> 00:01:16.909
our preconditions?

00:01:16.909 --> 00:01:20.770
Why can't we just say not painted
ladder instead of dry ladder?

00:01:20.770 --> 00:01:23.830
&gt;&gt; David just has to do something
the history of these notations.

00:01:23.830 --> 00:01:25.768
This notation comes from scripts,

00:01:25.768 --> 00:01:30.280
a planner developed in the late 60s
at a Stanford research institute.

00:01:30.280 --> 00:01:33.719
One of the early robot planners that ran
under ran under a robot called Shakey.

00:01:35.170 --> 00:01:39.950
Strips the planner use tier
improving to form plans and

00:01:39.950 --> 00:01:42.490
it turned out that the use
of only positive requals

00:01:42.490 --> 00:01:46.900
in the preconditions made the cure
improving processes more efficient.

00:01:46.900 --> 00:01:50.125
This conventions is just stayed in AI
since the times of strips and Shakey.

