WEBVTT
Kind: captions
Language: en

00:00:00.002 --> 00:00:00.960
ALICE YANG COLEMAN: Hi.

00:00:00.960 --> 00:00:03.850
My name is Alice, and I'm an
engineer on the Glass software

00:00:03.850 --> 00:00:05.090
team.

00:00:05.090 --> 00:00:07.540
After initial launch
in the United States,

00:00:07.540 --> 00:00:11.570
Glass is expanding
to other countries.

00:00:11.570 --> 00:00:14.240
I'd like to show you how to make
your GDK Glassware support more

00:00:14.240 --> 00:00:19.280
languages and therefore
reach more users.

00:00:19.280 --> 00:00:22.620
Here are some basic techniques
for localizing Android GDK

00:00:22.620 --> 00:00:24.450
Glassware.

00:00:24.450 --> 00:00:26.140
First, make sure
all visible text

00:00:26.140 --> 00:00:30.346
is declared in a base
strings.xml file.

00:00:30.346 --> 00:00:31.720
You can then refer
to each string

00:00:31.720 --> 00:00:33.790
by its name and your Java code.

00:00:33.790 --> 00:00:36.920
It's good practice to include
a comment for each string

00:00:36.920 --> 00:00:41.080
so your translators have more
context on how it's used.

00:00:41.080 --> 00:00:42.640
Once your translations
come back,

00:00:42.640 --> 00:00:45.280
simply put them into the
corresponding values directory

00:00:45.280 --> 00:00:47.020
for that language.

00:00:47.020 --> 00:00:49.870
You can also have different
versions of images, audio,

00:00:49.870 --> 00:00:52.030
and video files for
different locales,

00:00:52.030 --> 00:00:54.100
but it's better if
the same icon can just

00:00:54.100 --> 00:00:56.139
apply to all languages.

00:00:56.139 --> 00:00:57.680
That's pretty much
all that's needed.

00:00:57.680 --> 00:00:59.390
Piece of cake.

00:00:59.390 --> 00:01:03.230
Now, let's look at some
issues you might run into.

00:01:03.230 --> 00:01:06.810
One common oversight is using
hard-coded strings in the code.

00:01:06.810 --> 00:01:09.420
This will lead to
untranslated text.

00:01:09.420 --> 00:01:11.230
Another problem is
translations that

00:01:11.230 --> 00:01:14.520
are too long, causing
overlapping text.

00:01:14.520 --> 00:01:16.940
You can avoid this by
suggesting a character limit

00:01:16.940 --> 00:01:19.080
in your original
strings definition

00:01:19.080 --> 00:01:21.840
so translators know
not to exceed it.

00:01:21.840 --> 00:01:25.350
One more thing to look out
for is parameters and text.

00:01:25.350 --> 00:01:27.930
It may be tempting to simply
concatenate substrings

00:01:27.930 --> 00:01:28.810
together.

00:01:28.810 --> 00:01:31.350
In this example,
"received at" followed

00:01:31.350 --> 00:01:34.420
by the variable 2
followed by o'clock.

00:01:34.420 --> 00:01:37.840
But in the Chinese translation,
[SPEAKING CHINESE],

00:01:37.840 --> 00:01:41.740
the time variable moved to the
front of the sentence instead.

00:01:41.740 --> 00:01:44.450
As shown here, the solution
is to use place holders

00:01:44.450 --> 00:01:47.360
in your string definition so
that the entire sentence gets

00:01:47.360 --> 00:01:50.060
translated as a whole.

00:01:50.060 --> 00:01:53.250
That concludes how GDK
Glassware can be localized.

00:01:53.250 --> 00:01:55.100
Once your Glassware
is ready, remember

00:01:55.100 --> 00:01:57.630
to submit it to the
Glass team for review.

00:01:57.630 --> 00:01:59.440
We look forward to
seeing your submissions,

00:01:59.440 --> 00:02:01.870
and thank you for watching.

