WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.808
[MUSIC PLAYING]

00:00:05.179 --> 00:00:07.720
LAURENCE MORONEY: So first of
all, welcome to the Big Android

00:00:07.720 --> 00:00:08.230
BBQ.

00:00:08.230 --> 00:00:09.659
This is my first
Big Android BBQ.

00:00:09.659 --> 00:00:10.450
How about you guys?

00:00:10.450 --> 00:00:11.325
Have you been before?

00:00:11.325 --> 00:00:13.162
Or are you guys all
first timers today?

00:00:13.162 --> 00:00:14.802
AUDIENCE: First timers.

00:00:14.802 --> 00:00:16.260
LAURENCE MORONEY:
How is it so far?

00:00:16.260 --> 00:00:18.340
Key note sounds like
it was fun, right?

00:00:18.340 --> 00:00:21.130
I'm looking forward
to the food later too.

00:00:21.130 --> 00:00:22.700
My name is Laurence Moroney.

00:00:22.700 --> 00:00:25.500
I work for Google as
a Developer Advocate.

00:00:25.500 --> 00:00:29.240
I specialize in a technology
called Google Play services.

00:00:29.240 --> 00:00:34.050
And my role is generally
speaking, writing,

00:00:34.050 --> 00:00:37.350
working with developers around
using Google Play services,

00:00:37.350 --> 00:00:39.690
and some of the related
technologies around Google Play

00:00:39.690 --> 00:00:41.640
services in your application.

00:00:41.640 --> 00:00:43.120
And one of the
related technologies

00:00:43.120 --> 00:00:45.130
is Google Cloud Messaging.

00:00:45.130 --> 00:00:48.750
And today I just wanted to
talk a bit about messaging,

00:00:48.750 --> 00:00:50.990
talk about the type
of things that you can

00:00:50.990 --> 00:00:52.300
do with Google Cloud Messaging.

00:00:52.300 --> 00:00:53.970
And most of the
session, I'm actually

00:00:53.970 --> 00:00:56.600
going to be building a
very simple Google Cloud

00:00:56.600 --> 00:00:59.670
Messaging based app on
stage with you guys.

00:00:59.670 --> 00:01:02.640
And it's actually going to have
a live server where messages

00:01:02.640 --> 00:01:04.160
can be sent to my phone.

00:01:04.160 --> 00:01:05.825
And the URL will be exposed.

00:01:05.825 --> 00:01:07.700
And people tell me it's
a mistake to do that,

00:01:07.700 --> 00:01:09.366
but I assume you're
all going to behave.

00:01:12.997 --> 00:01:15.580
So without further ado, Google
Cloud Messaging is what I said.

00:01:15.580 --> 00:01:17.650
And I always, whenever
I talk about messaging,

00:01:17.650 --> 00:01:20.190
I always like to begin with a
story of what messaging used

00:01:20.190 --> 00:01:21.220
to be like.

00:01:21.220 --> 00:01:24.740
About 10 years ago, I was
working in Wall Street

00:01:24.740 --> 00:01:26.230
as an enterprise architect.

00:01:26.230 --> 00:01:29.470
And there was one
project that was

00:01:29.470 --> 00:01:33.100
given to my company to deliver
for a major international bank.

00:01:33.100 --> 00:01:34.930
And this project
was that they wanted

00:01:34.930 --> 00:01:38.240
to have instant
messaging, chat style

00:01:38.240 --> 00:01:40.670
messaging, for all
of there terminals,

00:01:40.670 --> 00:01:42.550
they had 30,000 terminals.

00:01:42.550 --> 00:01:45.850
And they wanted instant,
direct messaging.

00:01:45.850 --> 00:01:49.070
Every terminal receives every
message within a certain time

00:01:49.070 --> 00:01:49.700
frame.

00:01:49.700 --> 00:01:51.170
And on average,
each terminal would

00:01:51.170 --> 00:01:53.260
issue about 100 messages a day.

00:01:53.260 --> 00:01:56.392
So can anybody do the math
say for 30,000 terminals

00:01:56.392 --> 00:01:57.100
around the globe?

00:01:57.100 --> 00:01:59.700
How many messages would that be?

00:01:59.700 --> 00:02:00.867
It's a lot, right?

00:02:00.867 --> 00:02:03.200
So if you think about it, you
have 30,000 terminals each

00:02:03.200 --> 00:02:06.330
issuing 100 messages, and
each receiving 100 messages

00:02:06.330 --> 00:02:11.050
from each of 29,999
other terminals.

00:02:11.050 --> 00:02:12.930
You're talking
about, what was it?

00:02:12.930 --> 00:02:15.000
It was like 9 by
10 to the 9 number

00:02:15.000 --> 00:02:17.980
of messages floating around
in this system every day.

00:02:17.980 --> 00:02:19.170
That's a lot of messages.

00:02:19.170 --> 00:02:20.710
That's a lot of scale.

00:02:20.710 --> 00:02:22.880
Now, of course,
when we brought it

00:02:22.880 --> 00:02:25.330
to the customers who were
saying that they wanted

00:02:25.330 --> 00:02:27.125
to build a system this
way, we're saying,

00:02:27.125 --> 00:02:28.500
you can't just
flood your network

00:02:28.500 --> 00:02:29.510
with messages like that.

00:02:29.510 --> 00:02:32.190
You've got to design your
system in particular ways.

00:02:32.190 --> 00:02:35.530
You keep closely related
messages close to each other.

00:02:35.530 --> 00:02:37.340
So take, for example,
this customer

00:02:37.340 --> 00:02:40.542
had branches in Singapore,
in London, and in New York.

00:02:40.542 --> 00:02:42.000
And we were saying,
well, you know,

00:02:42.000 --> 00:02:45.454
99% of the messages in
Singapore, the people in London

00:02:45.454 --> 00:02:46.370
don't care about them.

00:02:46.370 --> 00:02:49.170
And 99% of the messages in
London, the people in Singapore

00:02:49.170 --> 00:02:50.170
don't care about them.

00:02:50.170 --> 00:02:51.850
So we started
carefully designing

00:02:51.850 --> 00:02:55.120
the network for these messages
so that you wouldn't completely

00:02:55.120 --> 00:02:58.070
flood your network with
messages in order of 10

00:02:58.070 --> 00:03:00.520
to the 9 every single day.

00:03:00.520 --> 00:03:03.720
And so we ended up-- we spent
about six months designing what

00:03:03.720 --> 00:03:04.939
this thing would look like.

00:03:04.939 --> 00:03:06.730
And then we brought it
back to the company.

00:03:06.730 --> 00:03:08.544
And we brought it
to their ops people.

00:03:08.544 --> 00:03:10.210
And their ops people
took one look at it

00:03:10.210 --> 00:03:12.534
and said, nope, not
going to happen.

00:03:12.534 --> 00:03:14.700
You know, because even with
all the design work that

00:03:14.700 --> 00:03:17.440
was put into this, the
amount of infrastructure that

00:03:17.440 --> 00:03:19.760
would be necessary to be
able to handle something

00:03:19.760 --> 00:03:23.490
like this was just obscenely
expensive for them to build.

00:03:23.490 --> 00:03:24.860
It was way ahead of its time.

00:03:24.860 --> 00:03:25.960
It was pre-Cloud.

00:03:25.960 --> 00:03:28.630
And it just-- the
project got canned and it

00:03:28.630 --> 00:03:31.300
ended up being replaced by a
bulletin board system, which

00:03:31.300 --> 00:03:34.447
effectively gave them the same
functionality where anybody

00:03:34.447 --> 00:03:36.030
could go and take a
look at a bulletin

00:03:36.030 --> 00:03:38.840
board of the messages that
had been posted by anybody

00:03:38.840 --> 00:03:42.510
else-- sorry-- anybody else,
anywhere else in the world.

00:03:42.510 --> 00:03:44.310
And as a result, they
got the same kind

00:03:44.310 --> 00:03:46.580
of functionality but
without that instantaneous

00:03:46.580 --> 00:03:48.216
communication.

00:03:48.216 --> 00:03:50.590
Now when I look at something
like Google Cloud Messaging,

00:03:50.590 --> 00:03:52.770
I'm not going to tell
you that you can quickly

00:03:52.770 --> 00:03:56.039
and easily and cheaply scale to
10 to the 9 messages every day,

00:03:56.039 --> 00:03:57.580
but you don't have
to think about all

00:03:57.580 --> 00:03:59.270
this backend infrastructure.

00:03:59.270 --> 00:04:02.330
And that's what Google Cloud
Messaging, to me, is all about.

00:04:02.330 --> 00:04:04.570
I like to look at
it as a black box.

00:04:04.570 --> 00:04:07.000
And in that black box,
I can send messages.

00:04:07.000 --> 00:04:09.580
And that black box
routes messages

00:04:09.580 --> 00:04:12.730
to all of the clients that are
registered for my application.

00:04:12.730 --> 00:04:14.030
It does it for free.

00:04:14.030 --> 00:04:15.025
It does it instantly.

00:04:15.025 --> 00:04:17.399
And it does it with lots of
other types of functionality.

00:04:17.399 --> 00:04:19.670
I can go Upstream messages,
Downstream messages,

00:04:19.670 --> 00:04:21.660
Peer to Peer messages,
all that kind of stuff.

00:04:21.660 --> 00:04:23.130
And did I say it was free?

00:04:23.130 --> 00:04:24.180
It is, actually, free.

00:04:24.180 --> 00:04:26.340
And because it's
Cloud technology,

00:04:26.340 --> 00:04:27.462
it scales really nicely.

00:04:27.462 --> 00:04:28.920
So what we're going
to do today, is

00:04:28.920 --> 00:04:30.480
we're going to take a
little bit of a look at what

00:04:30.480 --> 00:04:32.850
an application built on
Google Cloud Messaging

00:04:32.850 --> 00:04:34.952
looks like in action,
how it will perform,

00:04:34.952 --> 00:04:36.410
the type of
performance that you're

00:04:36.410 --> 00:04:38.432
getting for free, the
type of scale ability

00:04:38.432 --> 00:04:39.640
that you're getting for free.

00:04:39.640 --> 00:04:41.056
And we'll take a
look at what does

00:04:41.056 --> 00:04:43.640
it look like to build a simple
application in Android that

00:04:43.640 --> 00:04:46.290
uses this, and then
an App server that

00:04:46.290 --> 00:04:49.120
also uses this built
in PHP and MySQL

00:04:49.120 --> 00:04:52.610
and hosted on a free web host.

00:04:52.610 --> 00:04:54.930
So as I mentioned, what
is Google Cloud Messaging?

00:04:54.930 --> 00:04:56.690
First of all, it's
a hosted service,

00:04:56.690 --> 00:05:00.220
Google hosted service on our
infrastructure, on your behalf.

00:05:00.220 --> 00:05:03.660
It manages the queueing and
delivery of your messages.

00:05:03.660 --> 00:05:06.767
Your messages can be
Upstream to servers,

00:05:06.767 --> 00:05:09.100
and may be stored in servers
like a bulletin board style

00:05:09.100 --> 00:05:10.230
system that I mentioned.

00:05:10.230 --> 00:05:13.190
They can be Downstream, which
is much more interesting, where

00:05:13.190 --> 00:05:15.760
your users can receive instant
notifications of messages

00:05:15.760 --> 00:05:16.510
in the system.

00:05:16.510 --> 00:05:18.560
Or they can be Peer to Peer.

00:05:18.560 --> 00:05:20.870
So my people in Singapore,
my people in New York,

00:05:20.870 --> 00:05:22.680
in my earlier example,
could communicate

00:05:22.680 --> 00:05:25.350
with each other over something
like Google Cloud Messaging.

00:05:25.350 --> 00:05:27.660
You can target single
devices with messages

00:05:27.660 --> 00:05:29.930
or you can target groups
of devices with messages.

00:05:29.930 --> 00:05:32.060
And what I'm going to build
a little bit later on,

00:05:32.060 --> 00:05:34.210
you'll see where I
have two devices.

00:05:34.210 --> 00:05:35.980
Number one is the
emulator on my machine.

00:05:35.980 --> 00:05:37.910
And number two is
this phone beside me.

00:05:37.910 --> 00:05:41.210
And I'll show how I can target
messages to either of those

00:05:41.210 --> 00:05:43.130
or to both of those
at the same time.

00:05:43.130 --> 00:05:44.430
It supports topics.

00:05:44.430 --> 00:05:46.940
So again, thinking
of my bank example,

00:05:46.940 --> 00:05:50.020
I could have a set of topics
that are relevant for Singapore

00:05:50.020 --> 00:05:52.330
and a set of topics that
are relevant for London

00:05:52.330 --> 00:05:54.930
and people can subscribe to
what they're interested in.

00:05:54.930 --> 00:05:57.520
And the infrastructure, this
black box infrastructure,

00:05:57.520 --> 00:05:59.080
will handle the rest.

00:05:59.080 --> 00:06:01.015
And it's relatively
easy to build.

00:06:01.015 --> 00:06:03.140
First of all, that backend
infrastructure nightmare

00:06:03.140 --> 00:06:04.352
is taken out of your hands.

00:06:04.352 --> 00:06:06.810
And while there's a few hoops
that you have to jump through

00:06:06.810 --> 00:06:09.477
in order to, for example,
get things like an API key,

00:06:09.477 --> 00:06:11.310
we're working on making
it easier and easier

00:06:11.310 --> 00:06:13.590
all the time to do that.

00:06:13.590 --> 00:06:15.670
All right so what
does it look like?

00:06:15.670 --> 00:06:17.309
So this is what a
basic system would

00:06:17.309 --> 00:06:18.600
look like as we're building it.

00:06:18.600 --> 00:06:20.830
So the first thing is--
remember I've been talking

00:06:20.830 --> 00:06:22.520
about GCM as a black box.

00:06:22.520 --> 00:06:24.720
So this GCM black
box on the right

00:06:24.720 --> 00:06:26.960
is something that your
apps will register with.

00:06:26.960 --> 00:06:29.240
And when they register with
Google Cloud Messaging,

00:06:29.240 --> 00:06:31.270
using an API key
that you set up,

00:06:31.270 --> 00:06:33.520
you'll get a token
back that identifies

00:06:33.520 --> 00:06:36.760
your app in the Google Cloud
Messaging infrastructure.

00:06:36.760 --> 00:06:39.410
So that black box on the
left, is provided by Google,

00:06:39.410 --> 00:06:40.390
you build nothing.

00:06:40.390 --> 00:06:41.880
You call APIs on that.

00:06:41.880 --> 00:06:44.510
You get your registration
tokens back from it.

00:06:44.510 --> 00:06:47.350
Step two, then, in a
server based system

00:06:47.350 --> 00:06:50.560
like I'm talking about is
you build your own App Server

00:06:50.560 --> 00:06:52.720
that then stores these
registration tokens

00:06:52.720 --> 00:06:55.454
in order to identify the
people who are using your App,

00:06:55.454 --> 00:06:57.870
and in order to be able to
send messages to the people who

00:06:57.870 --> 00:06:59.060
are using your App.

00:06:59.060 --> 00:07:00.726
And that's what I'm
going to be building

00:07:00.726 --> 00:07:01.910
in PHP in just a moment.

00:07:01.910 --> 00:07:04.740
So your Apps will then
pass registration details

00:07:04.740 --> 00:07:07.710
that they have achieved from
GCM to your server, where

00:07:07.710 --> 00:07:09.110
your server can store them.

00:07:09.110 --> 00:07:10.640
And you can store
them with whatever

00:07:10.640 --> 00:07:13.260
identifiers you feel are
appropriate for your customers,

00:07:13.260 --> 00:07:15.140
for your clients, within
an enterprise that

00:07:15.140 --> 00:07:18.420
may be different than if
you're working with the public.

00:07:18.420 --> 00:07:23.230
And then step three-- if
my slide will cooperate.

00:07:23.230 --> 00:07:23.940
There we go.

00:07:23.940 --> 00:07:26.450
So then step three is your
App Server, in this case,

00:07:26.450 --> 00:07:29.520
will tell Google Cloud Messaging
what to send and to whom.

00:07:29.520 --> 00:07:31.880
It calls APIs in that black box.

00:07:31.880 --> 00:07:35.100
And it says, send this
message to the person who's

00:07:35.100 --> 00:07:37.580
identified by this token,
or send this message

00:07:37.580 --> 00:07:40.840
to everybody identified by this
token, or send this message

00:07:40.840 --> 00:07:41.730
to this topic.

00:07:41.730 --> 00:07:44.400
And then people who subscribe
to that topic will receive it.

00:07:44.400 --> 00:07:47.210
And then Google Cloud Messaging
will deliver those messages

00:07:47.210 --> 00:07:49.930
on your behalf for you.

00:07:49.930 --> 00:07:52.330
All righty.

00:07:52.330 --> 00:07:53.740
So how do you build it?

00:07:53.740 --> 00:07:57.830
The first part of doing this is
going to the Google Developers

00:07:57.830 --> 00:08:01.260
console and getting an
API Key and a Sender ID.

00:08:01.260 --> 00:08:05.150
So your API Key is
what identifies you.

00:08:05.150 --> 00:08:08.300
It's a unique thing for you as
a developer on the Google Cloud

00:08:08.300 --> 00:08:12.470
Console that will allow us
to understand who's using it,

00:08:12.470 --> 00:08:13.660
how they're using it.

00:08:13.660 --> 00:08:14.750
There are no throttles.

00:08:14.750 --> 00:08:17.211
There are no rates or anything
like that on the system.

00:08:17.211 --> 00:08:18.710
So it's not going
to be used to say,

00:08:18.710 --> 00:08:20.251
you can only have
this many messages.

00:08:20.251 --> 00:08:22.130
But it just allows
us to prevent people

00:08:22.130 --> 00:08:24.180
from being naughty
by maybe having

00:08:24.180 --> 00:08:28.910
trying to do a denial of service
using Google Cloud Messaging

00:08:28.910 --> 00:08:30.240
or something along those lines.

00:08:30.240 --> 00:08:31.989
And then the Sender
ID is something that's

00:08:31.989 --> 00:08:33.120
unique to your application.

00:08:33.120 --> 00:08:34.744
So maybe you have
multiple applications

00:08:34.744 --> 00:08:37.695
that you're building, and
that Sender ID would like--

00:08:37.695 --> 00:08:40.070
in my banking scenario, you
might have one message that's

00:08:40.070 --> 00:08:42.350
used by the buy side--
sorry, one application that's

00:08:42.350 --> 00:08:43.820
used by the buy side
and another one that's

00:08:43.820 --> 00:08:46.200
used by the south side and
you have different Sender ID's

00:08:46.200 --> 00:08:48.160
for these, just so that
you can separate them.

00:08:48.160 --> 00:08:49.340
There's two ways for doing this.

00:08:49.340 --> 00:08:50.756
You can go to
Google Cloud Console

00:08:50.756 --> 00:08:52.298
and step through
everything yourself.

00:08:52.298 --> 00:08:54.422
Or there's this new thing
that's only just come out

00:08:54.422 --> 00:08:55.360
in the last few days.

00:08:55.360 --> 00:08:56.530
And it's the URL
at the bottom here.

00:08:56.530 --> 00:08:58.029
It's a quick start,
developers.googl

00:08:58.029 --> 00:09:00.470
e.com/mobile/add.

00:09:00.470 --> 00:09:01.890
And there's a
wizard on there that

00:09:01.890 --> 00:09:04.920
will register your
application, get your API Key,

00:09:04.920 --> 00:09:07.440
get your Sender Key,
turn on the APIs for you

00:09:07.440 --> 00:09:09.960
to use and all that good stuff.

00:09:09.960 --> 00:09:12.907
Then step two is to build the
Android Application itself.

00:09:12.907 --> 00:09:14.740
So how do you build the
Android Application?

00:09:14.740 --> 00:09:17.073
Well first of all, you need
to use Google Play Services.

00:09:17.073 --> 00:09:20.120
Actually, who's familiar
with Google Play Services?

00:09:20.120 --> 00:09:20.620
OK.

00:09:20.620 --> 00:09:21.120
Most of you.

00:09:21.120 --> 00:09:21.780
Cool.

00:09:21.780 --> 00:09:25.430
So Google Play Services,
it's a set of APIs

00:09:25.430 --> 00:09:28.370
that we ship that get updated
roughly every six weeks.

00:09:28.370 --> 00:09:30.430
And it allows you to
access a lot of Google

00:09:30.430 --> 00:09:32.860
back services,
things like location,

00:09:32.860 --> 00:09:34.590
maps, fit, et cetera, et cetera.

00:09:34.590 --> 00:09:38.040
And Google Cloud Messaging APIs
are shipped as part of that.

00:09:38.040 --> 00:09:40.820
Now you need to set up some
permissions in your Android

00:09:40.820 --> 00:09:43.474
Application to allow Google
Cloud Messaging to work.

00:09:43.474 --> 00:09:45.140
Typical things that
you need to turn on,

00:09:45.140 --> 00:09:47.261
like internet access,
that type of stuff.

00:09:47.261 --> 00:09:49.260
In your manifest, you're
going to do two things.

00:09:49.260 --> 00:09:50.400
You going to add a receiver.

00:09:50.400 --> 00:09:51.730
And you're going
to add a service.

00:09:51.730 --> 00:09:52.900
If this isn't
clear, don't worry,

00:09:52.900 --> 00:09:55.170
I have code in a moment that
shows that I'm-- I don't know

00:09:55.170 --> 00:09:57.540
if you are like me, I tend
to think in code rather than

00:09:57.540 --> 00:10:00.020
in slide where, but I just
want to list the things here.

00:10:00.020 --> 00:10:01.790
So you're going to
need a receiver,

00:10:01.790 --> 00:10:03.500
and you going to need a
service in your manifest.

00:10:03.500 --> 00:10:05.458
And then finally, you're
going to need a class.

00:10:05.458 --> 00:10:07.500
In order to receive
messages in your app,

00:10:07.500 --> 00:10:08.875
you're going to
need a class that

00:10:08.875 --> 00:10:10.940
extends the GcmListenerService.

00:10:10.940 --> 00:10:14.090
So earlier on, I had that
black box sending messages

00:10:14.090 --> 00:10:15.210
down to your application.

00:10:15.210 --> 00:10:17.860
If your application
extends GcmListenerService,

00:10:17.860 --> 00:10:20.140
and your application is
registered with Google Cloud

00:10:20.140 --> 00:10:22.600
Messaging, then that's the
part of your application

00:10:22.600 --> 00:10:25.620
that will receive those messages
and know what to do with them.

00:10:25.620 --> 00:10:27.140
So what does this
code look like?

00:10:27.140 --> 00:10:27.639
OK.

00:10:27.639 --> 00:10:30.930
First of all, including Google
Play Services in Europe,

00:10:30.930 --> 00:10:33.729
is as simple as adding
something to your gradle file.

00:10:33.729 --> 00:10:35.520
Can anybody spot the
mistake in this slide?

00:10:35.520 --> 00:10:37.910
Or spot something that's
outdated in this slide?

00:10:37.910 --> 00:10:38.705
Yep.

00:10:38.705 --> 00:10:40.104
AUDIENCE: [INAUDIBLE]

00:10:40.104 --> 00:10:42.020
LAURENCE MORONEY: I'm
using the +, rather than

00:10:42.020 --> 00:10:44.610
a particular version number,
which is naughty, you're right.

00:10:44.610 --> 00:10:45.526
But there's one other.

00:10:45.526 --> 00:10:46.151
AUDIENCE: 8, 1.

00:10:46.151 --> 00:10:47.067
LAURENCE MORONEY: 8.1.

00:10:47.067 --> 00:10:47.660
Thank you.

00:10:47.660 --> 00:10:49.220
I've actually put
7.8 in this slide

00:10:49.220 --> 00:10:50.730
for a very specific reason.

00:10:50.730 --> 00:10:53.000
And that is, if you try
doing 8,1 with the emulator

00:10:53.000 --> 00:10:54.790
right now, it doesn't
actually work.

00:10:54.790 --> 00:10:59.119
So I downgraded my code to
use Google Play Services 7,8,

00:10:59.119 --> 00:11:01.160
just so that I could use
it in the emulator here.

00:11:01.160 --> 00:11:03.450
So well spotted, both of you.

00:11:03.450 --> 00:11:05.550
Now secondly, it's just
defining the permissions

00:11:05.550 --> 00:11:07.300
that you need in your
application in order

00:11:07.300 --> 00:11:09.170
to, for example,
access the internet.

00:11:09.170 --> 00:11:11.870
The wake clock, allows
a message coming in

00:11:11.870 --> 00:11:14.050
to be received by
your application

00:11:14.050 --> 00:11:16.020
so that it can generate
a notification.

00:11:16.020 --> 00:11:17.470
And then this last
one is, again,

00:11:17.470 --> 00:11:20.190
it's the received
permission for Google--

00:11:20.190 --> 00:11:22.510
so for I almost said
Google Play services--

00:11:22.510 --> 00:11:26.080
it's the received permission
for Google Cloud Messaging.

00:11:26.080 --> 00:11:28.827
Next up, you're going to find
a receiver in your application.

00:11:28.827 --> 00:11:31.160
And it's pretty straightforward
XML in your application,

00:11:31.160 --> 00:11:31.800
like this.

00:11:31.800 --> 00:11:34.524
By the way, if anybody wants
the source code for this app,

00:11:34.524 --> 00:11:35.440
I'm happy to share it.

00:11:35.440 --> 00:11:38.130
My contact details will be at
the end of the presentation,

00:11:38.130 --> 00:11:41.160
instead of trying to scribble
down code off a slide.

00:11:41.160 --> 00:11:43.424
And then, finally, you need
the service, of course,

00:11:43.424 --> 00:11:44.340
for your applications.

00:11:44.340 --> 00:11:46.433
This service, you're
just going to define it.

00:11:46.433 --> 00:11:48.182
My application was
called com.google.daver

00:11:48.182 --> 00:11:49.057
ell.lmoroney.gcmtalk.

00:11:51.350 --> 00:11:53.940
And I put a class in there
called my GCM listener.

00:11:53.940 --> 00:11:58.110
And I just had to set that up as
a service with an intent filter

00:11:58.110 --> 00:12:00.826
specifying that it's
going to be received.

00:12:00.826 --> 00:12:02.950
And here's what the listener
class would look like.

00:12:02.950 --> 00:12:05.202
So once we've set up all
the metadata that we need,

00:12:05.202 --> 00:12:06.660
this is what a
listener class would

00:12:06.660 --> 00:12:08.659
look like, something that
would receive messages

00:12:08.659 --> 00:12:09.404
on your behalf.

00:12:09.404 --> 00:12:10.570
It's pretty straightforward.

00:12:10.570 --> 00:12:12.770
It extends the
GcmListenerService.

00:12:12.770 --> 00:12:15.020
And it overrides on
message received.

00:12:15.020 --> 00:12:16.890
And on message received,
you get two things.

00:12:16.890 --> 00:12:19.140
Number one, you get a string
with the from, and that's

00:12:19.140 --> 00:12:21.200
the person that's sending
you an-- idea of what's

00:12:21.200 --> 00:12:22.090
sending you the message.

00:12:22.090 --> 00:12:23.089
It's usually the server.

00:12:23.089 --> 00:12:25.160
And then you get a
bundle with the data.

00:12:25.160 --> 00:12:26.830
And the bundle with
the data is going

00:12:26.830 --> 00:12:29.700
to be a JSON message with a
lot of details about the data.

00:12:29.700 --> 00:12:32.330
But the actual message
that I'm sending

00:12:32.330 --> 00:12:34.220
through my server,
the text message,

00:12:34.220 --> 00:12:35.769
gets prefixed with an m.

00:12:35.769 --> 00:12:37.310
That's why I have
here string message

00:12:37.310 --> 00:12:39.182
equals data dot get string m.

00:12:39.182 --> 00:12:40.640
And then out of
that I'm just going

00:12:40.640 --> 00:12:41.830
to generate a notification.

00:12:41.830 --> 00:12:43.420
You can do whatever you
like, of course, when you

00:12:43.420 --> 00:12:44.586
receive an incoming message.

00:12:44.586 --> 00:12:46.590
You can render it in
one of your activities.

00:12:46.590 --> 00:12:48.450
But for this demo,
I'm just generating

00:12:48.450 --> 00:12:50.170
a notification in
the notification tray

00:12:50.170 --> 00:12:52.620
with the actual message.

00:12:52.620 --> 00:12:53.120
OK.

00:12:53.120 --> 00:12:54.744
So let's take a look
at what this would

00:12:54.744 --> 00:12:56.840
look like in Android Studio.

00:12:56.840 --> 00:12:57.340
OK.

00:12:57.340 --> 00:12:58.923
Well that's what the
application looks

00:12:58.923 --> 00:13:00.630
like with my beautiful design.

00:13:00.630 --> 00:13:02.296
I'm not known for
my design skills.

00:13:06.640 --> 00:13:09.210
OK.

00:13:09.210 --> 00:13:12.310
So first of all, I
mentioned, build.gradle.

00:13:12.310 --> 00:13:14.799
So here if I go into my
build.gradle on my app.

00:13:14.799 --> 00:13:17.215
You can just see I've defined--
I'm using com.google.andro

00:13:17.215 --> 00:13:19.790
id.gmsplayservices.

00:13:19.790 --> 00:13:22.280
I started this
application just by doing

00:13:22.280 --> 00:13:25.030
an Android Studio a file
new MT activity application.

00:13:25.030 --> 00:13:26.494
And I've added a
few things to it.

00:13:26.494 --> 00:13:28.160
Instead of going
through all those steps

00:13:28.160 --> 00:13:29.170
and boring you
here, I'm just going

00:13:29.170 --> 00:13:30.570
to show you the completed one.

00:13:30.570 --> 00:13:34.330
So here was where I've
added Play Services 7.8.

00:13:34.330 --> 00:13:39.620
In my Android Manifest--
is this font too big

00:13:39.620 --> 00:13:41.690
or can the people
at the back read it?

00:13:41.690 --> 00:13:44.610
Because I know there's not a lot
of code visible on the screen.

00:13:44.610 --> 00:13:46.240
I just made it nice and big.

00:13:46.240 --> 00:13:48.090
So again, in my
Android Manifest,

00:13:48.090 --> 00:13:50.150
I've set up the permissions
that I want to use.

00:13:50.150 --> 00:13:51.816
So there's the user's
permission and you

00:13:51.816 --> 00:13:53.370
can see the three entries here.

00:13:53.370 --> 00:13:55.100
Then, there's the
receiver that I want.

00:13:55.100 --> 00:13:58.080
And it's going to be a com
Google Android GMS GCM GCM

00:13:58.080 --> 00:13:59.170
receiver.

00:13:59.170 --> 00:14:02.370
And then, under my activity,
you will see the service.

00:14:02.370 --> 00:14:03.350
And that's it.

00:14:03.350 --> 00:14:05.240
So the three things
that I had set up,

00:14:05.240 --> 00:14:08.100
the permissions, the
receiver, and the service,

00:14:08.100 --> 00:14:10.770
are all that added to
your Android Manifest.

00:14:10.770 --> 00:14:13.280
Now in my main activity--
let me show you

00:14:13.280 --> 00:14:15.980
what my main activity
would look like.

00:14:15.980 --> 00:14:19.100
It's pretty boring.

00:14:19.100 --> 00:14:21.350
So I just wanted to
create a very simple one.

00:14:21.350 --> 00:14:22.480
A couple of text boxes.

00:14:22.480 --> 00:14:24.580
One where you enter your name,
one where you enter your email.

00:14:24.580 --> 00:14:25.940
Sorry, it's hard to see on here.

00:14:25.940 --> 00:14:28.520
And then a button that you use
to register this application

00:14:28.520 --> 00:14:30.310
with Google Cloud Messaging.

00:14:30.310 --> 00:14:34.190
So if I go to my main activity,
and in my main activity

00:14:34.190 --> 00:14:37.200
you'll see there's a
text box for a name,

00:14:37.200 --> 00:14:38.820
or an edit text
field for a name,

00:14:38.820 --> 00:14:40.840
there's an Edit text
field for the email,

00:14:40.840 --> 00:14:42.062
and then there's a button.

00:14:42.062 --> 00:14:43.520
On that button what
I'm going to do

00:14:43.520 --> 00:14:47.260
is register the application
with Google Cloud Messaging.

00:14:47.260 --> 00:14:49.910
And that's done in here,
where I'm just setting up.

00:14:49.910 --> 00:14:51.480
I'm doing as a
background task, which

00:14:51.480 --> 00:14:53.690
is where you see the
asynchronous stuff there.

00:14:53.690 --> 00:14:56.030
And on Google Cloud
Messaging, this number

00:14:56.030 --> 00:14:59.480
here was the Sender ID, that
I spoke about earlier on.

00:14:59.480 --> 00:15:02.640
So I get my API Key, which
is associated with my Google

00:15:02.640 --> 00:15:03.400
account.

00:15:03.400 --> 00:15:06.390
And I get a Sender ID, which is
associated with my application.

00:15:06.390 --> 00:15:09.510
So this is the sender ID for
this specific application.

00:15:09.510 --> 00:15:11.630
And I just get that
back as a reg ID.

00:15:11.630 --> 00:15:13.610
And then the rest of it,
that's the only thing

00:15:13.610 --> 00:15:16.050
that I'm doing to register
with Google Cloud Messaging.

00:15:16.050 --> 00:15:19.900
And then the rest of this is now
posting to my backend server.

00:15:19.900 --> 00:15:22.420
You can see here on
the client I just

00:15:22.420 --> 00:15:24.820
went to one of these free
web hosting companies that

00:15:24.820 --> 00:15:27.240
will give you PHP and MySQL.

00:15:27.240 --> 00:15:31.380
And they gave me this
URL, gcmtalk.side40.net.

00:15:31.380 --> 00:15:33.220
I put a PHP file on
there, which I'll

00:15:33.220 --> 00:15:34.467
be showing in a few moments.

00:15:34.467 --> 00:15:36.800
And I'm just posting the name
that the user has entered,

00:15:36.800 --> 00:15:38.420
the email that the
user has entered,

00:15:38.420 --> 00:15:40.740
and the registration ID
that the user has entered.

00:15:40.740 --> 00:15:42.420
Sorry, the registration
ID that the user

00:15:42.420 --> 00:15:44.030
has gotten back from GCM.

00:15:44.030 --> 00:15:46.000
And then I'm posting
that up to my server.

00:15:46.000 --> 00:15:48.690
So my server will get
that registration ID,

00:15:48.690 --> 00:15:50.690
so that whenever I want
to try and send messages

00:15:50.690 --> 00:15:53.360
to any of my clients, it
has that registration ID

00:15:53.360 --> 00:15:56.280
and it will send it down to the
client that I'm executing here.

00:15:56.280 --> 00:15:57.840
Clear.

00:15:57.840 --> 00:15:58.340
OK.

00:15:58.340 --> 00:16:00.880
So if I'm going too fast or if
there's any thing confusing,

00:16:00.880 --> 00:16:02.430
just feel free to interrupt.

00:16:02.430 --> 00:16:03.720
We're all very informal here.

00:16:03.720 --> 00:16:06.430
Just yell out if
you've any questions.

00:16:06.430 --> 00:16:09.730
And that's pretty much it for
registering my application

00:16:09.730 --> 00:16:12.060
with Google Cloud
Messaging in order

00:16:12.060 --> 00:16:15.940
for my server to be able to
send messages via Google Cloud

00:16:15.940 --> 00:16:17.267
Messaging to my application.

00:16:17.267 --> 00:16:18.850
And then a quick
look at the listener.

00:16:23.112 --> 00:16:23.931
Let's see.

00:16:31.002 --> 00:16:32.960
Earlier I mentioned, and
I showed in the slide,

00:16:32.960 --> 00:16:35.970
it's just something that
extends GcmListenerService.

00:16:35.970 --> 00:16:37.600
And then I override
the on message

00:16:37.600 --> 00:16:39.090
receives method in that.

00:16:39.090 --> 00:16:41.850
And there I'm getting my from
and getting my bundle of data.

00:16:41.850 --> 00:16:44.350
I'm taking a message out
of that, as a string,

00:16:44.350 --> 00:16:45.966
and I'm sending a notification.

00:16:45.966 --> 00:16:47.840
And then this code here,
if you've ever built

00:16:47.840 --> 00:16:50.270
a notification in Android
will look very familiar.

00:16:50.270 --> 00:16:52.720
I'm just using a
notification compat.builder.

00:16:52.720 --> 00:16:55.780
This send notification has
nothing to do with Google Cloud

00:16:55.780 --> 00:16:56.460
Messaging.

00:16:56.460 --> 00:16:58.220
This is just taking
that string that

00:16:58.220 --> 00:17:01.100
was received from the Google
Cloud Messaging server

00:17:01.100 --> 00:17:02.755
and turning it into
a notification.

00:17:02.755 --> 00:17:03.630
It's straightforward.

00:17:03.630 --> 00:17:05.791
It's pretty standard code.

00:17:05.791 --> 00:17:06.290
All right.

00:17:06.290 --> 00:17:10.610
So when I run this, I will get
something that looks like this.

00:17:10.610 --> 00:17:11.109
All right.

00:17:11.109 --> 00:17:13.344
So it's the two text
fields that I mentioned

00:17:13.344 --> 00:17:14.760
that I'm going to
enter, you know,

00:17:14.760 --> 00:17:16.560
I can put whatever
I want in there.

00:17:16.560 --> 00:17:19.460
And it was a name and an email.

00:17:19.460 --> 00:17:21.470
So I'm just saying my
name is phone demo name.

00:17:21.470 --> 00:17:24.119
The email was hello@room and
there was a register button.

00:17:24.119 --> 00:17:27.500
Now I had done this
earlier, so I will show you

00:17:27.500 --> 00:17:30.220
what the server looks like.

00:17:30.220 --> 00:17:35.880
So who's familiar with
PHP here, first of all.

00:17:35.880 --> 00:17:36.510
OK.

00:17:36.510 --> 00:17:39.482
And then you've probably heard
of a tool called my PHP admin.

00:17:39.482 --> 00:17:40.190
All right.

00:17:40.190 --> 00:17:42.350
So my PHP admin
is a tool, that's

00:17:42.350 --> 00:17:45.110
a web based tool, that allows
you to inspect and play

00:17:45.110 --> 00:17:47.850
with MySQL backend database.

00:17:47.850 --> 00:17:50.570
So I know the font is really
small here in my browser.

00:17:50.570 --> 00:17:53.462
But what I had done
here was I earlier

00:17:53.462 --> 00:17:54.920
while you guys were
in the keynote,

00:17:54.920 --> 00:17:56.730
I ran this application
in the emulator.

00:17:56.730 --> 00:17:58.600
I ran this application
on my phone.

00:17:58.600 --> 00:18:01.920
And I hit that register button
in order to generate a token

00:18:01.920 --> 00:18:02.880
and register it.

00:18:02.880 --> 00:18:05.780
And as a result, I got these
two records in my database.

00:18:05.780 --> 00:18:09.180
And you can see the GCM reg
ID is that long string, is

00:18:09.180 --> 00:18:10.020
the actual token.

00:18:10.020 --> 00:18:13.810
And that's the unique
identifier for the device that's

00:18:13.810 --> 00:18:15.629
running the Cloud
Messaging-- sorry,

00:18:15.629 --> 00:18:17.920
for the device that's running
the app that will consume

00:18:17.920 --> 00:18:19.010
the Cloud Messaging.

00:18:19.010 --> 00:18:21.551
But what I'm going to do now,
just to show that this is real,

00:18:21.551 --> 00:18:23.380
is I'm going to delete them.

00:18:23.380 --> 00:18:24.440
So I'll come in here.

00:18:24.440 --> 00:18:27.999
And in PHP admin
I can delete them.

00:18:27.999 --> 00:18:29.165
And that will take a moment.

00:18:31.900 --> 00:18:32.400
All right.

00:18:32.400 --> 00:18:34.590
So now I have
nothing registered.

00:18:34.590 --> 00:18:36.280
And if I go back to
my site-- and I'll

00:18:36.280 --> 00:18:38.920
talk about how to build a
site like this in a moment--

00:18:38.920 --> 00:18:40.820
we should see after
refresher-- there

00:18:40.820 --> 00:18:42.980
are no devices registered yet.

00:18:42.980 --> 00:18:45.290
So now if I come
into my emulator,

00:18:45.290 --> 00:18:49.130
and I'll just say, hello@room
again, something like that.

00:18:49.130 --> 00:18:50.520
So we see it
something different.

00:18:50.520 --> 00:18:51.780
I'll hit register.

00:18:51.780 --> 00:18:53.550
It's a really poorly
designed application.

00:18:53.550 --> 00:18:55.407
I don't have a spinning
status or anything

00:18:55.407 --> 00:18:56.490
like that on the register.

00:18:56.490 --> 00:18:58.180
So it will take a
moment to register.

00:18:58.180 --> 00:19:01.230
I'll come back and
I'll refresh the site.

00:19:01.230 --> 00:19:04.740
And we should see, in
a moment-- like I said

00:19:04.740 --> 00:19:08.510
this is a free public site.

00:19:08.510 --> 00:19:11.294
Hopefully, my Wi-Fi is working.

00:19:15.350 --> 00:19:18.270
And he hasn't registered.

00:19:18.270 --> 00:19:21.170
I'll try and rerun
it again in a moment.

00:19:21.170 --> 00:19:23.170
Just let that refresh.

00:19:23.170 --> 00:19:25.630
Everybody hitting
Wi-Fi at the same time.

00:19:25.630 --> 00:19:27.990
So it's still waiting.

00:19:27.990 --> 00:19:28.970
Nope.

00:19:28.970 --> 00:19:31.260
OK.

00:19:31.260 --> 00:19:32.950
Isn't it always
like that when you

00:19:32.950 --> 00:19:36.260
try to run a demo live
on stage it never works.

00:19:36.260 --> 00:19:39.430
You run it before hand
while-- I ran it before hand

00:19:39.430 --> 00:19:41.680
while you guys were in the
keynote and it worked great

00:19:41.680 --> 00:19:44.860
and I run it now
and it's like, no.

00:19:44.860 --> 00:19:48.070
It's another try.

00:19:48.070 --> 00:19:49.224
Call it that.

00:19:52.800 --> 00:19:57.070
phone@home.com, something
like that, let me register.

00:20:04.690 --> 00:20:06.560
And refresh.

00:20:06.560 --> 00:20:08.740
Pray to the demo gods.

00:20:08.740 --> 00:20:10.730
Pray to the Wi-Fi gods
and nothing's happening.

00:20:10.730 --> 00:20:13.790
I'll come back to
that in a moment.

00:20:13.790 --> 00:20:15.950
All right.

00:20:15.950 --> 00:20:17.950
So we can talk a little
bit about the App Server

00:20:17.950 --> 00:20:22.690
and then I'll see if the
demo is behaving after that.

00:20:22.690 --> 00:20:25.770
So earlier we saw this was how
I built the Android App, which

00:20:25.770 --> 00:20:26.850
isn't working right now.

00:20:26.850 --> 00:20:30.060
But the Android app was
just very straightforward.

00:20:30.060 --> 00:20:31.210
It was a single activity.

00:20:31.210 --> 00:20:32.520
There were a couple
of text fields.

00:20:32.520 --> 00:20:34.020
There was a register
button on that.

00:20:34.020 --> 00:20:36.500
When I registered I
called GCMs black box

00:20:36.500 --> 00:20:38.412
in order to get that
registration token back.

00:20:38.412 --> 00:20:40.120
I had a couple of them
from that, which I

00:20:40.120 --> 00:20:42.390
deleted before the demo failed.

00:20:42.390 --> 00:20:44.510
And those registration
tokens would then

00:20:44.510 --> 00:20:48.570
be captured by my backend server
and stored by my backend server

00:20:48.570 --> 00:20:50.060
and then used by
my backend server

00:20:50.060 --> 00:20:52.830
if I want to talk to
individual devices,

00:20:52.830 --> 00:20:54.430
or I could take all
of them if I want

00:20:54.430 --> 00:20:55.915
to talk to all of my devices.

00:20:55.915 --> 00:20:57.290
So how do we build
an App Server?

00:20:57.290 --> 00:20:58.680
What does this thing look like?

00:20:58.680 --> 00:21:00.240
Well, first of all,
there's a database in it.

00:21:00.240 --> 00:21:02.090
And I gave a sneak peek
of that a moment ago

00:21:02.090 --> 00:21:05.010
when I was using my PHP admin.

00:21:05.010 --> 00:21:06.800
So in this case,
very simple MySQL

00:21:06.800 --> 00:21:09.680
backend database and storing
the registration tokens.

00:21:09.680 --> 00:21:12.010
And it's storing just the
name and ID that I had.

00:21:12.010 --> 00:21:13.640
I have a UI for
sending messages.

00:21:13.640 --> 00:21:14.810
You saw that, basic UI.

00:21:14.810 --> 00:21:16.997
It's just a simple HTML UI.

00:21:16.997 --> 00:21:19.330
And then there's the interface
to Google Cloud Messaging

00:21:19.330 --> 00:21:22.670
itself that requests the
messages to be routed

00:21:22.670 --> 00:21:25.670
either to one device
or multiple devices

00:21:25.670 --> 00:21:28.390
based on those registration
ID's that had come out

00:21:28.390 --> 00:21:30.260
of the devices.

00:21:30.260 --> 00:21:32.610
And this is pretty much
what it would look like.

00:21:32.610 --> 00:21:34.744
In this application
that I was showing

00:21:34.744 --> 00:21:36.160
a moment ago would
look like this.

00:21:36.160 --> 00:21:40.380
So my Android would
call register.php,

00:21:40.380 --> 00:21:44.240
pass the three things, the
name, the email address,

00:21:44.240 --> 00:21:48.000
and the registration token and
register.php would then just

00:21:48.000 --> 00:21:49.800
store them in the database.

00:21:49.800 --> 00:21:51.920
Then the user
interface for this,

00:21:51.920 --> 00:21:54.960
what I was using in my browser,
I'm just calling index of PHP.

00:21:54.960 --> 00:21:58.080
And what index PHP was doing
was do a query of everybody

00:21:58.080 --> 00:22:00.290
in the database, get
their registration tokens,

00:22:00.290 --> 00:22:02.360
and just generate that
UI that would allow

00:22:02.360 --> 00:22:05.110
me to send to individual
ones or allow me to send them

00:22:05.110 --> 00:22:06.115
all in one shot.

00:22:06.115 --> 00:22:07.990
And then ultimately--
and then, the main part

00:22:07.990 --> 00:22:10.190
was the gcmsend.php.

00:22:10.190 --> 00:22:11.770
And this file, what
it does is just

00:22:11.770 --> 00:22:15.520
using cURL to talk to the
Google Cloud Messaging backend,

00:22:15.520 --> 00:22:17.980
picking the IDs that it wants
to-- based on the tokens

00:22:17.980 --> 00:22:19.600
that it wants to
send the messages to,

00:22:19.600 --> 00:22:21.110
sticking them into
headers, taking

00:22:21.110 --> 00:22:22.910
the string of the
message, passing that

00:22:22.910 --> 00:22:25.500
to Google Cloud Messaging,
and then fire and forget.

00:22:25.500 --> 00:22:26.140
It's done.

00:22:26.140 --> 00:22:28.740
At that point, the messages
would be routed back

00:22:28.740 --> 00:22:31.530
to my various devices.

00:22:31.530 --> 00:22:33.350
So here's a quick
example of this

00:22:33.350 --> 00:22:35.160
is what the registration
would look like.

00:22:35.160 --> 00:22:39.889
So if you've ever seen
PHP, this is PHP 001.

00:22:39.889 --> 00:22:41.680
I'm taking a look at
the post for the name,

00:22:41.680 --> 00:22:43.300
I'm taking a look at
the post of the email

00:22:43.300 --> 00:22:45.600
and I'm taking a look at the
post for the register ID.

00:22:45.600 --> 00:22:49.200
I'm taking them and I'm
using a just MySQL query

00:22:49.200 --> 00:22:50.590
to store them in the database.

00:22:50.590 --> 00:22:54.240
I have a couple of things
here, the DB functions,

00:22:54.240 --> 00:22:57.860
which is just a class that
wraps the mySQL-- what

00:22:57.860 --> 00:22:58.610
do they call them?

00:22:58.610 --> 00:22:59.650
MySQL admin stuff.

00:22:59.650 --> 00:23:02.200
So that I can actually
just call DB store user

00:23:02.200 --> 00:23:06.590
and pass those parameters to
it and then an insert query

00:23:06.590 --> 00:23:08.570
will be generated for
me that will push them

00:23:08.570 --> 00:23:10.600
into the database.

00:23:10.600 --> 00:23:13.500
Sending messages with cURL
This is how easy it is.

00:23:13.500 --> 00:23:18.530
First of all the URL is
android.googleapis.com/gcm/send.

00:23:18.530 --> 00:23:20.150
On that, I pass a
couple of headers.

00:23:20.150 --> 00:23:22.500
The first of these
is my API key.

00:23:22.500 --> 00:23:25.140
If you remember way back in
the beginning, I was saying,

00:23:25.140 --> 00:23:28.089
you use the Google Developers
Console with the Wizard

00:23:28.089 --> 00:23:29.880
that was at that URL
and that will give you

00:23:29.880 --> 00:23:31.830
the Sender ID and your API Key.

00:23:31.830 --> 00:23:34.695
This is your API Key, you put
it in the authorization header.

00:23:34.695 --> 00:23:36.820
And the content type then
I'm going to post to this

00:23:36.820 --> 00:23:39.010
is JSON, that also
goes in the header.

00:23:39.010 --> 00:23:42.030
And then, finally, the,
how I send the data to it.

00:23:42.030 --> 00:23:43.570
I have a string
that I call data,

00:23:43.570 --> 00:23:45.850
which you can see here,
towards the bottom.

00:23:45.850 --> 00:23:48.480
So I have a data field.

00:23:48.480 --> 00:23:50.230
And I put that string into that.

00:23:50.230 --> 00:23:53.100
And then I have an array
of registration IDs.

00:23:53.100 --> 00:23:56.050
So if I'm picking one
registration ID, one based

00:23:56.050 --> 00:23:58.660
on its tokens to send to
just a target one device,

00:23:58.660 --> 00:23:59.704
I'd put one in there.

00:23:59.704 --> 00:24:01.120
If I want to send
it to everybody,

00:24:01.120 --> 00:24:02.820
I just send it to
everybody in there.

00:24:02.820 --> 00:24:04.710
And then I just cURL it out.

00:24:04.710 --> 00:24:08.500
So there's a set the
headers, set the URL,

00:24:08.500 --> 00:24:10.960
tell it that I'm posting
it, encoding in JSON.

00:24:10.960 --> 00:24:13.770
And then call cURL exec, to
actually just do the cURL

00:24:13.770 --> 00:24:14.920
and send the message.

00:24:14.920 --> 00:24:19.100
So very, very straightforward,
very much 101 type PHP.

00:24:19.100 --> 00:24:22.152
And it's just about getting
those registration IDs.

00:24:22.152 --> 00:24:24.110
And if you know what
those registration IDs are

00:24:24.110 --> 00:24:27.055
that you want to send to, and
GCM provides them for you,

00:24:27.055 --> 00:24:30.210
you stick them into the
array, you encode it in JSON

00:24:30.210 --> 00:24:32.970
and then you cURL exec back.

00:24:32.970 --> 00:24:33.580
All right.

00:24:33.580 --> 00:24:35.670
Let's look at the code
for the App Server.

00:24:35.670 --> 00:24:39.180
And then I'll come back and
try and get the demo to work.

00:24:39.180 --> 00:24:42.110
Oops.

00:24:42.110 --> 00:24:43.580
My power saver kicked in.

00:24:53.070 --> 00:24:55.100
Anybody familiar with coda?

00:24:55.100 --> 00:24:56.680
Anybody use coda?

00:24:56.680 --> 00:24:57.520
It's a great editor.

00:24:57.520 --> 00:24:58.140
I love it.

00:24:58.140 --> 00:25:01.030
So I'm just showing
the code here in coda.

00:25:01.030 --> 00:25:03.535
Let me see if I can make
the font a little bigger.

00:25:06.390 --> 00:25:19.530
Let's do-- Does
that look clearer?

00:25:19.530 --> 00:25:20.360
All right.

00:25:20.360 --> 00:25:22.540
Cool.

00:25:22.540 --> 00:25:25.182
So again, the files that
I have in this, if I just

00:25:25.182 --> 00:25:26.390
take a look at a few of them.

00:25:26.390 --> 00:25:31.204
So first of all,
for registering-- I

00:25:31.204 --> 00:25:33.142
got caught in my scroll
bar a little bit.

00:25:33.142 --> 00:25:35.100
Let me see if I can get
rid of that corruption.

00:25:35.100 --> 00:25:35.831
Weird.

00:25:35.831 --> 00:25:36.330
OK.

00:25:36.330 --> 00:25:38.662
So again, for
registering PHP 101.

00:25:38.662 --> 00:25:40.870
I'm taking a look at the
post and pulling in the data

00:25:40.870 --> 00:25:41.694
from the post.

00:25:41.694 --> 00:25:43.610
And then I'm storing the
user in the database,

00:25:43.610 --> 00:25:46.250
using these database
functions that I created.

00:25:46.250 --> 00:25:48.630
And we can see what
they look like.

00:25:48.630 --> 00:25:51.590
You know, to store a
user-- I'm sure you're all

00:25:51.590 --> 00:25:52.871
familiar with an insert query.

00:25:52.871 --> 00:25:53.370
OK.

00:25:53.370 --> 00:25:56.400
I'm not doing any kind
of sensible programming

00:25:56.400 --> 00:25:58.034
here by doing a
parameter validation

00:25:58.034 --> 00:25:58.950
or anything like that.

00:25:58.950 --> 00:26:02.140
I'm sure you could issue
a denial of service attack

00:26:02.140 --> 00:26:05.412
on this because I'm not
filtering my parameters.

00:26:05.412 --> 00:26:07.620
But, you know, you'll forgive
me for that, hopefully,

00:26:07.620 --> 00:26:09.070
because this is a rough demo.

00:26:09.070 --> 00:26:11.080
But again, it's just
it's MySQL query

00:26:11.080 --> 00:26:12.830
I'm inserting into
this GCM users

00:26:12.830 --> 00:26:15.620
table, the name, the
email, and the registration

00:26:15.620 --> 00:26:16.914
ID for that user.

00:26:16.914 --> 00:26:18.580
And then if I ever
want to get them back

00:26:18.580 --> 00:26:22.000
it's just the same kind of thing
in MySQL query to get them out.

00:26:22.000 --> 00:26:30.540
The user interface for the
app itself is indexed.php.

00:26:30.540 --> 00:26:34.630
And if I come down to the
index.php for a second--

00:26:34.630 --> 00:26:38.390
and you'll just see I'm
querying the database.

00:26:38.390 --> 00:26:40.040
See I'm just
queueing my database.

00:26:40.040 --> 00:26:42.880
I have a db.getallusers.

00:26:42.880 --> 00:26:45.800
And then I'm going to loop
through and just generate

00:26:45.800 --> 00:26:48.360
HTML forms, one for each user.

00:26:48.360 --> 00:26:50.490
And then one for
all of these users.

00:26:50.490 --> 00:26:52.870
And then those HTML forms.

00:26:52.870 --> 00:26:54.830
As we can see
here, they're going

00:26:54.830 --> 00:26:56.750
to-- when I submit
them, they're just

00:26:56.750 --> 00:27:01.040
going to call the send PHP, that
I spoke about earlier on where

00:27:01.040 --> 00:27:02.700
I put the message
into it and I put

00:27:02.700 --> 00:27:04.320
the list of all the
registration IDs

00:27:04.320 --> 00:27:06.670
that I want to have
in there in it.

00:27:06.670 --> 00:27:12.100
And if I go back to my
browser for a second

00:27:12.100 --> 00:27:14.190
what that looks
like was this one.

00:27:14.190 --> 00:27:18.230
So let's see if that
user got registered yet.

00:27:18.230 --> 00:27:18.730
no.

00:27:18.730 --> 00:27:19.550
Oh, there it is.

00:27:19.550 --> 00:27:20.050
OK.

00:27:20.050 --> 00:27:21.550
So if finally came out.

00:27:21.550 --> 00:27:23.360
So when I was running
on my emulator,

00:27:23.360 --> 00:27:26.940
you see now this box that
appeared was for that user.

00:27:26.940 --> 00:27:28.677
I'll rerun it on my
phone in a moment

00:27:28.677 --> 00:27:30.260
so we can see what
it would look like.

00:27:30.260 --> 00:27:32.110
But now I have one
user in the database.

00:27:32.110 --> 00:27:35.060
So I have one GCM
token in the database,

00:27:35.060 --> 00:27:36.440
which is for this user.

00:27:36.440 --> 00:27:40.530
And if I type a message in
here say like, hello room

00:27:40.530 --> 00:27:41.340
and send it.

00:27:43.992 --> 00:27:45.700
Hopefully, it'll show
up in the emulator.

00:27:45.700 --> 00:27:46.480
There it goes.

00:27:46.480 --> 00:27:49.390
And you see the notification
just appeared in the emulator.

00:27:49.390 --> 00:27:51.010
And when I drag
it down we can see

00:27:51.010 --> 00:27:52.930
that GCM message, hello room.

00:27:52.930 --> 00:27:57.402
So if anybody wants to send a
message to me, keep it clean.

00:27:57.402 --> 00:27:58.860
You can actually
see the URL there.

00:27:58.860 --> 00:28:00.750
This is running live-- this
app server's running live

00:28:00.750 --> 00:28:01.680
on the internet.

00:28:01.680 --> 00:28:05.330
And like right now I
also have here, just say,

00:28:05.330 --> 00:28:08.120
please keep it
clean on this one.

00:28:08.120 --> 00:28:10.926
And this is just to send
to all registered devices.

00:28:10.926 --> 00:28:12.800
And I don't know if you
can actually hear it.

00:28:12.800 --> 00:28:14.560
And there is the message
actually appearing.

00:28:14.560 --> 00:28:17.143
And you can see how quick that
was, as soon as I had typed it.

00:28:17.143 --> 00:28:19.370
And that's going to my emulator.

00:28:19.370 --> 00:28:22.550
So the emulator is receiving
that message from GCM

00:28:22.550 --> 00:28:25.220
and actually
rendering it in there.

00:28:25.220 --> 00:28:27.910
OK.

00:28:27.910 --> 00:28:32.090
So any questions
on the PHP part?

00:28:32.090 --> 00:28:33.432
Is it clear?

00:28:33.432 --> 00:28:34.485
Clear as mud?

00:28:38.430 --> 00:28:41.310
So that's what a
very, very simple app

00:28:41.310 --> 00:28:42.726
server would look like.

00:28:42.726 --> 00:28:45.100
This really-- there's several
things that it needs to do.

00:28:45.100 --> 00:28:48.430
First of all, you need to--
and just, I heard the sounds.

00:28:48.430 --> 00:28:51.010
Did somebody just
send something?

00:28:51.010 --> 00:28:53.660
I just heard the sound
of a notification.

00:28:53.660 --> 00:28:54.160
Yep.

00:28:54.160 --> 00:28:57.294
We got a smiley face up there.

00:28:57.294 --> 00:28:59.210
So there's several things
that it needs to do.

00:28:59.210 --> 00:29:04.050
So first of all, when your
Android application has-- I

00:29:04.050 --> 00:29:05.440
need to turn off my sound.

00:29:05.440 --> 00:29:09.110
Messages are all popping in now.

00:29:09.110 --> 00:29:12.760
So when your Android application
registers with Google Cloud

00:29:12.760 --> 00:29:15.270
Messaging, you will get a token.

00:29:15.270 --> 00:29:18.600
You need to-- Google
Cloud Messaging doesn't

00:29:18.600 --> 00:29:21.550
have any intelligence about
sending the messages for you.

00:29:21.550 --> 00:29:23.150
It's just the black box.

00:29:23.150 --> 00:29:26.120
You call that black box and
tell it to send messages

00:29:26.120 --> 00:29:27.850
to devices on your behalf.

00:29:27.850 --> 00:29:30.030
That token is the
identifier for it.

00:29:30.030 --> 00:29:33.150
So in your App Server, you
need to store that token.

00:29:33.150 --> 00:29:35.830
Now there's a million different
ways you could have done it.

00:29:35.830 --> 00:29:39.700
I just decided to use this free
public PHP server to do it,

00:29:39.700 --> 00:29:42.084
stored the token in
a MySQL database.

00:29:42.084 --> 00:29:44.000
You could add a lot more
intelligence to that.

00:29:44.000 --> 00:29:46.520
You could have, for example,
people from Singapore

00:29:46.520 --> 00:29:48.362
have a column in the
database to identify

00:29:48.362 --> 00:29:50.320
they're from Singapore,
and people from London.

00:29:50.320 --> 00:29:51.510
If you came in
late, I was talking

00:29:51.510 --> 00:29:52.940
about an example of
an application that

00:29:52.940 --> 00:29:54.940
ran in Singapore and New
York and London, that's

00:29:54.940 --> 00:29:56.390
why I'm picking those two.

00:29:56.390 --> 00:29:59.736
And it's obviously it's up to
you how you would build it.

00:29:59.736 --> 00:30:01.360
It's up to you how
you would design it.

00:30:01.360 --> 00:30:03.530
It's up to you how you would
filter out your messages.

00:30:03.530 --> 00:30:04.950
And how you would
have users work

00:30:04.950 --> 00:30:06.501
in peer groups or whatever.

00:30:06.501 --> 00:30:08.250
But don't forget,
there's also the concept

00:30:08.250 --> 00:30:10.154
of topics in Google
Cloud Messaging, which

00:30:10.154 --> 00:30:11.320
I'll talk about in a moment.

00:30:11.320 --> 00:30:13.100
But that's the most
important thing,

00:30:13.100 --> 00:30:14.780
is that your
application server needs

00:30:14.780 --> 00:30:16.270
to be able to send
the messages--

00:30:16.270 --> 00:30:18.929
or needs to be able to tell
Google Cloud Messaging to send

00:30:18.929 --> 00:30:19.470
the messages.

00:30:19.470 --> 00:30:22.040
And as a result, you need
to track the user's tokens.

00:30:22.040 --> 00:30:23.810
So my demonstration
there was just

00:30:23.810 --> 00:30:26.340
to take them and stick
them into a MySQL PHP.

00:30:26.340 --> 00:30:28.640
And then your application
server, the other thing

00:30:28.640 --> 00:30:31.860
that it has to do, is then just
simply call the Google Cloud

00:30:31.860 --> 00:30:33.450
Messaging APIs.

00:30:33.450 --> 00:30:37.660
Pass it, if you're using
the HTTP post methodology,

00:30:37.660 --> 00:30:39.850
you pass it a JSON
encoded string that

00:30:39.850 --> 00:30:41.610
has a list of the
registration IDs

00:30:41.610 --> 00:30:43.590
plus the message
that you want to send

00:30:43.590 --> 00:30:44.910
and then it handles the rest.

00:30:44.910 --> 00:30:48.340
And it does it pretty
quickly as you saw.

00:30:48.340 --> 00:30:51.805
Is it safe to look at the other
messages you guys have sent?

00:30:51.805 --> 00:30:52.680
AUDIENCE: [INAUDIBLE]

00:30:52.680 --> 00:30:54.590
LAURENCE MORONEY: How
does this work in iOS?

00:30:54.590 --> 00:30:55.450
Well, that's a great idea.

00:30:55.450 --> 00:30:57.866
We should actually have this
as a way for doing questions.

00:31:01.110 --> 00:31:02.532
It does work on iOS.

00:31:02.532 --> 00:31:03.990
We don't have Google
Play Services,

00:31:03.990 --> 00:31:07.270
but there are a set of
GCM libraries for iOS.

00:31:07.270 --> 00:31:09.920
I don't know that much
about them to be honest.

00:31:09.920 --> 00:31:12.830
But GCM works across-- we
have a web client for it.

00:31:12.830 --> 00:31:14.230
So you can actually
send messages

00:31:14.230 --> 00:31:17.360
to HTML, JavaScript, base sites.

00:31:17.360 --> 00:31:18.860
There is an iOS client for it.

00:31:18.860 --> 00:31:21.760
There are a number of libraries
that you can use in iOS.

00:31:21.760 --> 00:31:23.500
They're not in
Google Play Services.

00:31:23.500 --> 00:31:25.370
And then, of course, on Android
there's Google Play Service.

00:31:25.370 --> 00:31:26.513
Another question over here.

00:31:26.513 --> 00:31:27.388
AUDIENCE: [INAUDIBLE]

00:31:36.357 --> 00:31:37.523
LAURENCE MORONEY: I'm sorry.

00:31:37.951 --> 00:31:39.742
AUDIENCE: My understanding
is that in order

00:31:39.742 --> 00:31:41.491
to be able to receive
properly, your phone

00:31:41.491 --> 00:31:47.235
has to send [INAUDIBLE] in order
for the message to be sent.

00:31:47.235 --> 00:31:52.548
So when you register for
it, is this something

00:31:52.548 --> 00:31:54.567
that's always on when
you have the Google Play

00:31:54.567 --> 00:31:55.525
Services on your phone?

00:31:55.525 --> 00:31:57.450
Is it just on by default?

00:31:57.450 --> 00:31:57.950
[INAUDIBLE]

00:32:03.679 --> 00:32:05.970
LAURENCE MORONEY: That's a
lot of good questions there.

00:32:05.970 --> 00:32:09.350
So first of all,
it's not always on.

00:32:09.350 --> 00:32:11.230
It's on when your
application is running,

00:32:11.230 --> 00:32:13.830
if your application is
built for using GCM.

00:32:13.830 --> 00:32:16.250
That wake lock permission
that I spoke about earlier on,

00:32:16.250 --> 00:32:17.420
is the key to it.

00:32:17.420 --> 00:32:19.250
So the idea behind that
is that like that's

00:32:19.250 --> 00:32:21.250
what you're giving
your app permission to

00:32:21.250 --> 00:32:24.150
wake the phone upon
an incoming message.

00:32:24.150 --> 00:32:26.827
I don't know the specifics about
how much battery it's using.

00:32:26.827 --> 00:32:28.660
But one of the things
is that we've actually

00:32:28.660 --> 00:32:30.520
built this to
optimize for battery

00:32:30.520 --> 00:32:33.180
use in these connected
messaging scenarios.

00:32:33.180 --> 00:32:35.230
So you're always
listening for messages,

00:32:35.230 --> 00:32:37.222
but it's extremely
low battery usage.

00:32:37.222 --> 00:32:38.930
I don't have the stats
on how much it is,

00:32:38.930 --> 00:32:41.221
but that's one of the core
tenets of how we've actually

00:32:41.221 --> 00:32:44.270
built it was to keep the battery
usage as low as possible.

00:32:44.270 --> 00:32:46.500
Just to repeat the question--
sorry for the folks who

00:32:46.500 --> 00:32:49.430
didn't hear it-- it
was if Google Cloud

00:32:49.430 --> 00:32:51.520
Messaging, if an
app builds using it

00:32:51.520 --> 00:32:53.750
is always connected in
order to listen to messages,

00:32:53.750 --> 00:32:55.624
what's the impact going
to be on the battery?

00:32:55.624 --> 00:32:57.657
And is there any
way to turn it off?

00:32:57.657 --> 00:32:58.157
Right.

00:32:58.157 --> 00:32:59.032
AUDIENCE: [INAUDIBLE]

00:33:06.580 --> 00:33:07.580
LAURENCE MORONEY: Right.

00:33:07.580 --> 00:33:10.140
So you can build
your app to sniff

00:33:10.140 --> 00:33:12.260
for when a connection
fails and then you

00:33:12.260 --> 00:33:15.890
would generate a notification
to your user if that happens.

00:33:15.890 --> 00:33:16.760
So yes.

00:33:16.760 --> 00:33:18.714
And if you are
actually disconnected

00:33:18.714 --> 00:33:20.880
for a period of time, like
you go off the grid, when

00:33:20.880 --> 00:33:23.880
you come back on the grid GCM
actually has your messages

00:33:23.880 --> 00:33:26.330
for you and will
resend them to you.

00:33:26.330 --> 00:33:27.566
The messages don't get lost.

00:33:27.566 --> 00:33:28.650
AUDIENCE: [INAUDIBLE]

00:33:28.650 --> 00:33:30.050
LAURENCE MORONEY: Yes.

00:33:30.050 --> 00:33:30.926
AUDIENCE: [INAUDIBLE]

00:33:30.926 --> 00:33:32.508
LAURENCE MORONEY:
Something like that.

00:33:32.508 --> 00:33:33.340
Yeah.

00:33:33.340 --> 00:33:33.965
Yep.

00:33:33.965 --> 00:33:34.840
AUDIENCE: [INAUDIBLE]

00:33:46.550 --> 00:33:48.770
LAURENCE MORONEY:
So just moving on.

00:33:48.770 --> 00:33:51.385
So step four is just
enjoy the awesomeness,

00:33:51.385 --> 00:33:52.260
as I like to call it.

00:33:52.260 --> 00:33:54.920
So as you saw there I
run it in the emulator.

00:33:54.920 --> 00:33:56.240
I can also run it on my phone.

00:33:56.240 --> 00:33:59.120
It's registering and sending
messages to any or all devices.

00:33:59.120 --> 00:34:00.610
It's totally free of charge.

00:34:00.610 --> 00:34:01.800
We don't charge anything.

00:34:01.800 --> 00:34:03.250
And answering a
question for you,

00:34:03.250 --> 00:34:04.890
there is a guaranteed
message delivery.

00:34:04.890 --> 00:34:06.348
So that if you do
get disconnected,

00:34:06.348 --> 00:34:08.600
the messages will actually
be resent for you.

00:34:08.600 --> 00:34:12.310
Next steps, Upstream
messages are also possible.

00:34:12.310 --> 00:34:14.590
So in this case, I
had a server that I

00:34:14.590 --> 00:34:17.130
had built that was sending
a message down to my device,

00:34:17.130 --> 00:34:20.690
but I could also send from
my device up to the server

00:34:20.690 --> 00:34:23.070
and have that route my
message to other devices.

00:34:23.070 --> 00:34:24.655
So I could have like
that type of-- I

00:34:24.655 --> 00:34:26.219
can either have Upstream
messages for something

00:34:26.219 --> 00:34:28.030
like a bulletin board,
or Upstream messages

00:34:28.030 --> 00:34:29.150
to have them routed.

00:34:29.150 --> 00:34:31.380
So I can do a Peer
to Peer type thing.

00:34:31.380 --> 00:34:33.219
This topic, so that
you don't get flooded

00:34:33.219 --> 00:34:35.810
with too many messages, you
can actually subscribe or send

00:34:35.810 --> 00:34:37.300
to particular topics.

00:34:37.300 --> 00:34:40.659
So again, using my
scenario of the bank

00:34:40.659 --> 00:34:42.850
that I was talking about
with Singapore, London,

00:34:42.850 --> 00:34:46.159
and New York branches, the
buy side and the sell side,

00:34:46.159 --> 00:34:47.885
in each of these,
could have a topic.

00:34:47.885 --> 00:34:50.010
And as a result, not
everybody reads every message.

00:34:50.010 --> 00:34:52.504
If I'm only interested in
the buy side in Singapore,

00:34:52.504 --> 00:34:53.920
then I could just
receive messages

00:34:53.920 --> 00:34:56.480
for the buy side in
Singapore, that type of thing.

00:34:56.480 --> 00:34:59.100
Priorities, there are
messages priorities too,

00:34:59.100 --> 00:35:01.270
so that you can set
different levels of priority

00:35:01.270 --> 00:35:02.000
of a message.

00:35:02.000 --> 00:35:04.490
That's something that's
actually evolving in Google Play

00:35:04.490 --> 00:35:08.702
Services so watch out for--
we have some new stuff coming

00:35:08.702 --> 00:35:10.410
into Google Play
Services very, very soon

00:35:10.410 --> 00:35:12.360
and there's some changes
in priorities there.

00:35:12.360 --> 00:35:13.855
But just in managing
priorities, so

00:35:13.855 --> 00:35:15.980
you can have like high
level messages and low level

00:35:15.980 --> 00:35:18.780
messages so that if you have
built an application that,

00:35:18.780 --> 00:35:20.960
for example, receives
messages as notifications,

00:35:20.960 --> 00:35:23.499
like the one that I build
here, so that you don't get,

00:35:23.499 --> 00:35:25.040
keep getting pinged
by notifications,

00:35:25.040 --> 00:35:26.920
you can change
priority of messages,

00:35:26.920 --> 00:35:28.750
maybe some generate
a notification,

00:35:28.750 --> 00:35:32.110
maybe some get routed to an
intent for later viewing.

00:35:32.110 --> 00:35:34.950
To learn more, we have
this side developers.googl

00:35:34.950 --> 00:35:39.110
e.com/cloudmessaging/gcm.

00:35:39.110 --> 00:35:40.690
There's also this
new thing, I think

00:35:40.690 --> 00:35:41.980
it has been released by now.

00:35:41.980 --> 00:35:43.550
If not, it's
releasing imminently

00:35:43.550 --> 00:35:45.576
called the gcm-playground.

00:35:45.576 --> 00:35:47.450
The guys told me I could
talk about it today.

00:35:47.450 --> 00:35:48.740
So it's all right.

00:35:48.740 --> 00:35:50.448
If you go to
github.com/googlesamples/gcm

00:35:50.448 --> 00:35:54.920
playground, and they have a
similar type of application

00:35:54.920 --> 00:35:57.460
to what I've built here, except
they've built it in Goal,

00:35:57.460 --> 00:36:00.215
because they thought Goal
was much nicer than PHP.

00:36:00.215 --> 00:36:01.760
No flame wars, please.

00:36:01.760 --> 00:36:04.890
And there's also some
great DevBytes out there.

00:36:04.890 --> 00:36:07.870
So DevBytes, if you're familiar
with Google Developers,

00:36:07.870 --> 00:36:09.600
these short videos
that we produce,

00:36:09.600 --> 00:36:12.700
three to five minutes long,
just talking about technology.

00:36:12.700 --> 00:36:17.629
And there's one great one
here from my colleague, Jarek.

00:36:17.629 --> 00:36:19.920
I don't know why they put
the about the speaker's slide

00:36:19.920 --> 00:36:21.399
at the end of the deck.

00:36:21.399 --> 00:36:21.940
I don't know.

00:36:21.940 --> 00:36:22.780
That was a template.

00:36:22.780 --> 00:36:24.795
So about the speaker,
that I mentioned

00:36:24.795 --> 00:36:26.700
I'm a Developer and
Advocate at Google.

00:36:26.700 --> 00:36:29.190
I've authored like about
20 programming books.

00:36:29.190 --> 00:36:32.027
And I've changed into
writing children's novels.

00:36:32.027 --> 00:36:33.110
Now this is my latest one.

00:36:33.110 --> 00:36:36.220
It's the cover reveal
was just yesterday.

00:36:36.220 --> 00:36:39.310
So I was so happy that I was
able to put it into my slides.

00:36:39.310 --> 00:36:40.870
And it's coming out next month.

00:36:40.870 --> 00:36:42.660
And I'm the host at
Google, a show called

00:36:42.660 --> 00:36:43.660
"Coffee with a Googler."

00:36:43.660 --> 00:36:45.040
Anybody watch it?

00:36:45.040 --> 00:36:45.540
Yeah.

00:36:45.540 --> 00:36:47.700
Thank you.

00:36:47.700 --> 00:36:49.700
You know, and by the way,
if you've any requests

00:36:49.700 --> 00:36:52.033
for people for me to talk to
at "Coffee with a Googler,"

00:36:52.033 --> 00:36:53.140
please let me know.

00:36:53.140 --> 00:36:56.750
And contact details, so
on Twitter I'm @lmoroney.

00:36:56.750 --> 00:36:58.880
On +, I'm +laurencemoroney.

00:36:58.880 --> 00:37:00.735
And facebook.com
laurence.moroney.

00:37:00.735 --> 00:37:02.110
And if you want
to email me, it's

00:37:02.110 --> 00:37:03.360
the same, lmoroney@google.com.

00:37:05.280 --> 00:37:08.565
So we have a few minutes if
anybody has any questions.

00:37:08.565 --> 00:37:09.440
AUDIENCE: [INAUDIBLE]

00:37:12.769 --> 00:37:14.310
LAURENCE MORONEY:
Around what, sorry?

00:37:14.310 --> 00:37:15.290
AUDIENCE: Token invalidation.

00:37:15.290 --> 00:37:16.165
LAURENCE MORONEY: OK.

00:37:16.664 --> 00:37:18.742
AUDIENCE: Do we need to
register any receivers

00:37:18.742 --> 00:37:21.356
or check to see if
the GCM code that we

00:37:21.356 --> 00:37:23.494
have has been validated?

00:37:23.494 --> 00:37:25.660
LAURENCE MORONEY: So the
question for everybody else

00:37:25.660 --> 00:37:27.050
was that, in the past,
there have been issues

00:37:27.050 --> 00:37:28.640
around token invalidations.

00:37:28.640 --> 00:37:33.920
Do we need to double
check our tokens to see?

00:37:33.920 --> 00:37:36.010
I'm not familiar with
any token invalidation

00:37:36.010 --> 00:37:37.060
problems, first of all.

00:37:37.060 --> 00:37:39.230
But I would argue that
it's always a good idea

00:37:39.230 --> 00:37:40.600
to double check.

00:37:40.600 --> 00:37:43.310
And so we have this
new instance ID

00:37:43.310 --> 00:37:45.886
API, which is part of
Google Cloud Messaging.

00:37:45.886 --> 00:37:48.010
And I believe you can use
that to check your token.

00:37:48.010 --> 00:37:50.620
So maybe every few
days or something

00:37:50.620 --> 00:37:52.940
of running an
application-- excuse me--

00:37:52.940 --> 00:37:55.360
that you could just do a
recheck and validate your token.

00:37:55.360 --> 00:37:56.710
It would be a good idea.

00:37:56.710 --> 00:37:57.860
So over here again.

00:37:57.860 --> 00:37:58.735
AUDIENCE: [INAUDIBLE]

00:38:05.180 --> 00:38:07.180
LAURENCE MORONEY: Is there
a round trip facility

00:38:07.180 --> 00:38:08.500
where a server can receive--

00:38:08.500 --> 00:38:09.375
AUDIENCE: [INAUDIBLE]

00:38:18.710 --> 00:38:19.940
LAURENCE MORONEY: I'm sorry.

00:38:19.940 --> 00:38:20.682
It's hard to--

00:38:21.606 --> 00:38:23.460
AUDIENCE: I seem
to remember there

00:38:23.460 --> 00:38:25.364
was a round trip
method where you

00:38:25.364 --> 00:38:28.009
can send a response [INAUDIBLE]

00:38:28.009 --> 00:38:28.925
LAURENCE MORONEY: Yep.

00:38:28.925 --> 00:38:29.800
AUDIENCE: [INAUDIBLE]

00:38:44.197 --> 00:38:45.530
LAURENCE MORONEY: Good question.

00:38:45.530 --> 00:38:46.320
I've never tried it.

00:38:46.320 --> 00:38:46.986
So I don't know.

00:38:46.986 --> 00:38:48.450
I'm only going to guess.

00:38:48.450 --> 00:38:51.090
My reckon-- my
guess would be no.

00:38:51.090 --> 00:38:52.830
That it would be
better to send them up

00:38:52.830 --> 00:38:54.610
through the regular
channel so that way

00:38:54.610 --> 00:38:56.916
you get the guaranteed delivery.

00:38:56.916 --> 00:38:58.290
If you have that
open connection,

00:38:58.290 --> 00:38:59.960
I have no idea what's
on the other end

00:38:59.960 --> 00:39:01.560
and how it would respond to it.

00:39:01.560 --> 00:39:06.780
I would always just recommend
go through door number one.

00:39:06.780 --> 00:39:08.810
But I don't know for sure.

00:39:08.810 --> 00:39:09.500
Over here.

00:39:09.500 --> 00:39:10.375
AUDIENCE: [INAUDIBLE]

00:39:16.835 --> 00:39:17.710
LAURENCE MORONEY: OK.

00:39:17.710 --> 00:39:19.626
So the question is when
I got the registration

00:39:19.626 --> 00:39:21.760
token for a device,
is it device specific?

00:39:21.760 --> 00:39:24.280
I've a funny story
about that question.

00:39:24.280 --> 00:39:26.740
Because I knew somebody
was going to ask it today.

00:39:26.740 --> 00:39:28.840
So I decided to go
and look up the code

00:39:28.840 --> 00:39:32.990
that I had used in my demo
to just check that for sure.

00:39:32.990 --> 00:39:35.310
And it turned out I was
using deprecated code.

00:39:35.310 --> 00:39:38.480
And that was like 20
minutes before my talk.

00:39:38.480 --> 00:39:41.035
And so we made a
note up stairs that

00:39:41.035 --> 00:39:42.410
was saying, before
you do a talk,

00:39:42.410 --> 00:39:44.270
make sure you don't
do a deprecated code.

00:39:44.270 --> 00:39:44.770
So anyway.

00:39:44.770 --> 00:39:47.870
But to answer your question,
if you're using the instance ID

00:39:47.870 --> 00:39:52.370
APIs, you can have a
single registration token

00:39:52.370 --> 00:39:55.187
across multiple devices
so that if you receive

00:39:55.187 --> 00:39:56.770
a notification on
one of your devices,

00:39:56.770 --> 00:39:58.630
you want to receive
it on all of them,

00:39:58.630 --> 00:40:01.922
rather than it being routed
to multiple ones that has them

00:40:01.922 --> 00:40:03.130
being identified differently.

00:40:03.130 --> 00:40:05.520
AUDIENCE: [INAUDIBLE]

00:40:05.520 --> 00:40:07.070
LAURENCE MORONEY: It can be.

00:40:07.070 --> 00:40:10.620
So you can have it so that
you have a registration

00:40:10.620 --> 00:40:14.150
token that's unique pair device,
or you can have a registration

00:40:14.150 --> 00:40:19.730
token that's shared across
ones based on your Google ID.

00:40:19.730 --> 00:40:20.648
In the back here.

00:40:20.648 --> 00:40:21.523
AUDIENCE: [INAUDIBLE]

00:40:24.274 --> 00:40:26.190
LAURENCE MORONEY: What
communications protocol

00:40:26.190 --> 00:40:27.700
does GCM use?

00:40:27.700 --> 00:40:33.704
So when you're coming Downstream
from GCM to the server,

00:40:33.704 --> 00:40:34.620
I actually don't know.

00:40:34.620 --> 00:40:35.650
I've never looked at it.

00:40:35.650 --> 00:40:39.100
If I'm going Upstream
from my App Server to GCM,

00:40:39.100 --> 00:40:40.536
it's just an HDTP post.

00:40:43.467 --> 00:40:44.342
AUDIENCE: [INAUDIBLE]

00:40:49.550 --> 00:40:51.050
LAURENCE MORONEY:
So if you've built

00:40:51.050 --> 00:40:53.720
an application for
Android TV, how do you

00:40:53.720 --> 00:40:56.010
receive the notification?

00:40:56.010 --> 00:40:57.450
I believe it's just the same.

00:40:57.450 --> 00:40:58.710
You extend the same class.

00:40:58.710 --> 00:41:00.620
AUDIENCE: [INAUDIBLE]

00:41:00.620 --> 00:41:02.578
LAURENCE MORONEY: The
service is not available?

00:41:05.252 --> 00:41:07.460
Can I get your details and
I'll check in on that when

00:41:07.460 --> 00:41:08.660
I've-- I've never tried it.

00:41:08.660 --> 00:41:10.720
So I don't really know.

00:41:10.720 --> 00:41:12.650
Time for maybe two
more questions.

00:41:12.650 --> 00:41:13.301
The front here.

00:41:13.301 --> 00:41:14.176
AUDIENCE: [INAUDIBLE]

00:41:17.079 --> 00:41:18.870
LAURENCE MORONEY: What
are the what, sorry?

00:41:18.870 --> 00:41:19.760
AUDIENCE: Payload size.

00:41:19.760 --> 00:41:21.926
LAURENCE MORONEY: Payload
size for messages, oh boy.

00:41:24.720 --> 00:41:25.220
Yeah.

00:41:25.220 --> 00:41:26.810
It's on the sites.

00:41:26.810 --> 00:41:27.962
What was it?

00:41:27.962 --> 00:41:29.240
AUDIENCE: [INAUDIBLE]

00:41:29.240 --> 00:41:31.800
LAURENCE MORONEY: 256 kilobytes.

00:41:31.800 --> 00:41:32.300
OK.

00:41:32.300 --> 00:41:32.942
Thank you.

00:41:35.991 --> 00:41:36.490
All right.

00:41:36.490 --> 00:41:37.760
Well, thank you everybody.

00:41:37.760 --> 00:41:40.060
And enjoy the rest
of your Android BBQ.

00:41:40.060 --> 00:41:40.560
Thanks.

00:41:44.460 --> 00:41:47.510
[MUSIC PLAYING]

