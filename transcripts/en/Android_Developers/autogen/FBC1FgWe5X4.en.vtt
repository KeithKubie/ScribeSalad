WEBVTT
Kind: captions
Language: en

00:00:03.420 --> 00:00:05.690
 Ian Lick: No actions like stopping music 

00:00:05.690 --> 00:00:07.730
 To be very far, if necessary. 

00:00:07.730 --> 00:00:09.210
 Android has provided many ways 

00:00:09.210 --> 00:00:11.120
 To do this like screen lock controls, 

00:00:11.120 --> 00:00:13.940
 Media controls for notifications, Android ware, 

00:00:13.940 --> 00:00:16.110
 And even "Android Auto", for example. 

00:00:16.110 --> 00:00:19.180
 So how does your audio application work with all this quality? 

00:00:19.180 --> 00:00:21.660
 This is easy with MediaSessionCombat 

00:00:21.660 --> 00:00:25.100
 A single API is available through the Android Help Library 

00:00:25.100 --> 00:00:26.780
 Which do most of the merger work 

00:00:26.780 --> 00:00:28.570
 With Android instead of you. 

00:00:28.570 --> 00:00:32.000
 I'm Ian Lick , and I 'll talk to MediaSessionCombat 

00:00:32.000 --> 00:00:34.850
 , How you can start making Metadata your modes 

00:00:34.850 --> 00:00:37.350
 Your controls are everywhere. 

00:00:37.350 --> 00:00:40.420
 Think of MedaiSession as a general interface 

00:00:40.420 --> 00:00:41.450
 To restart your media. 

00:00:41.450 --> 00:00:44.430
 No matter whether you're playing, audio file, tape, or even remotely 

00:00:44.430 --> 00:00:47.720
 Through Google Cast, if you do not tell the system what you are doing, 

00:00:47.720 --> 00:00:49.029
 It can not help you. 

00:00:49.029 --> 00:00:50.820
 It gives you many ways to help you, 

00:00:50.820 --> 00:00:54.590
 By posting metadata such as photo album or artist name 

00:00:54.590 --> 00:00:57.160
 And tell him what controls the mediator 

00:00:57.160 --> 00:00:59.180
 Such as playback and stop-backs. 

00:00:59.180 --> 00:01:00.590
 But I speak quickly. 

00:01:00.590 --> 00:01:04.840
 Let's create a MediaSessionCombat component to get started. 

00:01:04.858 --> 00:01:07.490
 Unfortunately, the versions of Android pre- Lollipop 

00:01:07.490 --> 00:01:09.780
 This would require a preliminary step, 

00:01:09.780 --> 00:01:12.600
 By creating what we call the receiver of the intermediate button. 

00:01:12.600 --> 00:01:14.500
 Which captures media controls 

00:01:14.500 --> 00:01:17.090
 From things like Bluetooth headsets and Android devices, 

00:01:17.090 --> 00:01:20.860
 And connect it to your application on devices smaller than Android 5.0. 

00:01:20.860 --> 00:01:22.450
 It is a simple transmission future, 

00:01:22.450 --> 00:01:24.830
 In your file, 

00:01:24.830 --> 00:01:27.420
 And translate the important event you reach 

00:01:27.420 --> 00:01:29.590
 To actions in your app. 

00:01:29.590 --> 00:01:33.080
 In general, delegated operating and suspension controls 

00:01:33.080 --> 00:01:35.130
 To the service they control 

00:01:35.130 --> 00:01:36.210
 In the background of running your broker. 

00:01:36.210 --> 00:01:38.840
 See our training documents for example. 

00:01:38.840 --> 00:01:41.980
 Well, finally, MediaSessionCombat 

00:01:41.980 --> 00:01:45.210
 You will need a context: any string to serve as a debug tag 

00:01:45.210 --> 00:01:48.610
 And the component name for the future of your broker button. 

00:01:48.610 --> 00:01:50.600
 The last null is Intent . 

00:01:50.600 --> 00:01:54.400
 You can use it instead of the component name in Android 4.3. 

00:01:54.400 --> 00:01:56.400
 It is created for us if we pass null 

00:01:56.400 --> 00:01:58.620
 It is often the right thing to do. 

00:01:58.620 --> 00:02:00.800
 You may want to do these three things 

00:02:00.800 --> 00:02:02.510
 Before you go further. 

00:02:02.510 --> 00:02:06.320
 Place the appropriate flags to say that we already have media controls buttons 

00:02:06.320 --> 00:02:10.060
 And we want to send it to our application. 

00:02:10.060 --> 00:02:12.290
 Next, we want to put resend. 

00:02:12.290 --> 00:02:14.070
 Here is where Lollipop reaches the top devices 

00:02:14.070 --> 00:02:17.880
 Re-connect with playback, stop and others 

00:02:17.880 --> 00:02:19.590
 When the button is pressed. 

00:02:19.590 --> 00:02:21.710
 Finally, place the session on playback mode 

00:02:21.710 --> 00:02:23.550
 When you are ready to run something. 

00:02:23.550 --> 00:02:27.140
 This is the directory to the system to direct the middleman buttons 

00:02:27.140 --> 00:02:31.000
 And other controls to your app. 

00:02:31.000 --> 00:02:33.040
 Well, the setting is running and ready, 

00:02:33.040 --> 00:02:35.610
 But we do not let the butterflies sink us 

00:02:35.610 --> 00:02:37.290
 About playing our media. 

00:02:37.290 --> 00:02:40.760
 How does he know what he is supposed to occupy, and what controls do we support? 

00:02:40.760 --> 00:02:44.170
 MediaMetadatCompat costs the first part. 

00:02:44.170 --> 00:02:46.420
 It uses a build style, where you only have to 

00:02:46.420 --> 00:02:48.490
 To add all the information you have, 

00:02:48.490 --> 00:02:51.490
 Then call setMetadata () in the MediaSession 

00:02:51.490 --> 00:02:53.066
 But media controls are still absent. 

00:02:53.066 --> 00:02:55.170
 Because we did not do the other part, 

00:02:55.170 --> 00:02:57.190
 It is a PlaybackStateCompat deployment 

00:02:57.190 --> 00:03:00.260
 For PlaybackStateCompat two goals, 

00:03:00.260 --> 00:03:03.190
 Immediate status: such as turning on or off 

00:03:03.190 --> 00:03:07.460
 Or download, via setState () 

00:03:07.460 --> 00:03:11.670
 And immediate actions such as stop or stop, 

00:03:11.670 --> 00:03:14.510
 SetActions () 

00:03:14.510 --> 00:03:17.240
 They contain them together, because often things change 

00:03:17.240 --> 00:03:18.850
 At the same time with the case. 

00:03:18.850 --> 00:03:21.700
 Suspension is often not available on the arrest act, 

00:03:21.700 --> 00:03:23.560
 for example. 

00:03:23.560 --> 00:03:26.060
 This is enough to make MediaSync Combat work. 

00:03:26.060 --> 00:03:29.120
 You will find integrated media and Bluetooth buttons in all API devices 

00:03:29.120 --> 00:03:32.240
 Top hardware, and screen close controls 

00:03:32.240 --> 00:03:35.950
 In Ice Cream Sandwich, Jelly Bean and Kitkat. 

00:03:35.950 --> 00:03:37.820
 You will also find MediaSessionCompat 

00:03:37.820 --> 00:03:39.450
 Works well with NotificationCompat.MediaStyle 

00:03:39.450 --> 00:03:43.480
 Part of the AppCompat Support Library 

00:03:43.480 --> 00:03:46.460
 Which will give you very beautiful media notifications 

00:03:46.460 --> 00:03:50.170
 At all API levels, including even the built-in media controls on the API 

00:03:50.170 --> 00:03:52.030
 On devices 14 and above. 

00:03:52.030 --> 00:03:54.430
 Just remember to call SetMediaSession 

00:03:54.430 --> 00:03:56.230
 With code for special and unique media session 

00:03:56.230 --> 00:03:58.490
 Of your media course. 

00:03:58.490 --> 00:04:01.380
 This brings your media session to "Android wear" 

00:04:01.380 --> 00:04:04.550
 And gives you controls for media in Android 5.0 

00:04:04.550 --> 00:04:05.540
 And above. 

00:04:05.540 --> 00:04:08.320
 Do not forget to release it when you finish 

00:04:08.320 --> 00:04:09.550
 Fully cycle your media. 

00:04:09.550 --> 00:04:12.050
 Honestly, Latensua. 

00:04:12.050 --> 00:04:15.200
 We just talked about the basics of MediaSessionCombat 

00:04:15.200 --> 00:04:17.820
 We did not talk about media browsers 

00:04:17.820 --> 00:04:19.529
 Media controls, and many things 

00:04:19.529 --> 00:04:21.509
 Based on the media cycle. 

00:04:21.509 --> 00:04:24.050
 But this will enable you to start, and make the information run 

00:04:24.050 --> 00:04:26.860
 Media, and operating controls are available 

00:04:26.860 --> 00:04:28.620
 Wherever he was. 

00:04:28.620 --> 00:04:31.260
 I look forward to seeing your wonderful media 

00:04:31.260 --> 00:04:33.440
 Using MediaCentCompat, I hope 

00:04:33.440 --> 00:04:35.910
 They will help you build better applications. 

00:04:35.910 --> 00:04:38.090
 And launch. 

