WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.000
We've talked about Onion Routing and TOR, and

00:00:02.830 --> 00:00:05.800
now i'd like to address the prickly subject of

00:00:05.800 --> 00:00:08.380
hidden services, right? AKA the "dark web".

00:00:08.700 --> 00:00:11.560
So Max has done a good video on the Dark Web,

00:00:11.560 --> 00:00:14.380
and so you should definitely watch that one first,

00:00:14.380 --> 00:00:17.520
so you know what it is. But it's quite a controversial topic,

00:00:17.520 --> 00:00:19.820
because a lot of what happens on the Dark Web

00:00:19.820 --> 00:00:24.500
is illegal, right? There's no two ways about it, that is true.

00:00:24.500 --> 00:00:27.680
Some of it isn't, right, and a lot of what happens on TOR

00:00:27.680 --> 00:00:30.060
in general--in fact the majority of what happens on TOR

00:00:30.060 --> 00:00:31.960
in general, you know high Into the 90%

00:00:31.960 --> 00:00:34.720
and that, and above--is perfectly fine, right?

00:00:34.720 --> 00:00:36.400
it's just anonymous users browsing the web,

00:00:36.400 --> 00:00:38.720
doing regular things but the TOR Hidden Services

00:00:38.720 --> 00:00:41.260
are ones that the debate is about because

00:00:41.260 --> 00:00:44.060
they're the ones where you sort of say

00:00:44.070 --> 00:00:47.100
'well, look, is it worth this bit of encryption?

00:00:47.100 --> 00:00:49.440
Is it worth, you know, all the criminality that's on there and so on?'

00:00:52.200 --> 00:00:54.040
So here's my Cloud--my TOR Cloud

00:00:54.040 --> 00:00:56.780
and in essence, we've got lots of people going into

00:00:56.780 --> 00:00:59.500
the network. lots of encrypted layers and things

00:00:59.500 --> 00:01:01.920
happening, bouncing around, and then people

00:01:01.920 --> 00:01:03.680
coming out of the network to servers, right?

00:01:03.680 --> 00:01:05.480
Now the issue, from a security standpoint

00:01:05.489 --> 00:01:07.618
Is what happens if There's someone Sniffing?

00:01:07.960 --> 00:01:08.799
Here and

00:01:08.800 --> 00:01:10.560
someone's Sniffing here

00:01:10.560 --> 00:01:12.440
and They Can Correlate Traffic between the in and The out

00:01:12.440 --> 00:01:14.720
and Work out what it is that I am Doing

00:01:14.920 --> 00:01:18.860
Specifically Right then the whole Report the whole Point of Tor Which is Anonymization?

00:01:19.270 --> 00:01:23.820
Has been defeated, Right? We already have encryption, so that isn't the point of talk,

00:01:24.369 --> 00:01:26.879
that's just how, They do the anonymous communication

00:01:27.400 --> 00:01:32.400
so the Dark web. or a hidden service to use the Proper Term, is

00:01:32.799 --> 00:01:39.659
in Essence Where This server Moves inside this Cloud right so now We have a hidden service Running Inside this Cloud and

00:01:40.329 --> 00:01:47.939
There is no B that's the Idea right so it Makes it very very difficult to find so there is Now a circuit that goes

00:01:48.660 --> 00:01:50.360
Somewhere Between A

00:01:50.820 --> 00:01:52.100
Around the Place

00:01:52.740 --> 00:01:53.520
To this Hidden Service

00:01:53.620 --> 00:01:57.480
and at no point has that left the network so there's no traffic correlation that can be done, Right?

00:01:57.660 --> 00:02:00.860
All of these are just TOR  sale messages that all look exacly the same.

00:02:00.900 --> 00:02:03.380
Now, the way that TOR does this Is very very clever.

00:02:03.960 --> 00:02:07.660
Euh, and I Look I will look into a little bit of detail on the protocol that it uses

00:02:07.920 --> 00:02:10.720
But It's managed to form a

00:02:11.860 --> 00:02:14.749
protocol where neither I nor the server

00:02:15.390 --> 00:02:19.220
know who each other are, but we can still have a conversation which Is kind of nifty?

00:02:20.100 --> 00:02:20.980
Okay

00:02:22.040 --> 00:02:24.300
So then, let's start again with Onion routing

00:02:24.460 --> 00:02:27.280
So, Onion routing is a protocol that could theoretically be implemented elsewhere.

00:02:27.460 --> 00:02:31.720
There are other Mixing networks and things and other anonymization networks

00:02:31.740 --> 00:02:34.820
But Hidden Services Is put predominately in the domain of TOR.

00:02:34.820 --> 00:02:39.480
And TOR got the most users and the most nodes and it's the biggest and is in the News the most.

00:02:39.500 --> 00:02:41.800
Let's Draw a little bit of a Network again, so

00:02:41.840 --> 00:02:44.560
I shouldn't Have Drawn These Boxes Like This Because Now it takes me ages

00:02:44.720 --> 00:02:46.840
So here's my server

00:02:47.160 --> 00:02:50.080
Here's my Client and these

00:02:50.080 --> 00:02:52.660
I'm Just going to Drawn with Boxes Because otherwise it's going to take far too long

00:02:52.740 --> 00:02:55.340
These are Onion routers, so remember in normal Onion routing

00:02:55.890 --> 00:02:57.660
The Client will Produce some

00:02:57.660 --> 00:03:02.990
[Circuits] [or] some Hops and then they will Just Talk to the server but A server will be out on the normal Web Doing normal

00:03:02.990 --> 00:03:04.380
Server Things

00:03:04.380 --> 00:03:08.299
and won't be Anonymous what Hidden Services do Is

00:03:08.820 --> 00:03:14.479
Anonymize This Server so they Allow Both the Server and The Client to talk to each other Despite the fact that

00:03:14.480 --> 00:03:17.119
No One Knows who each other is Which Is quite Impressive

00:03:17.940 --> 00:03:22.309
[Now] of Course if You then use [that] service Connection to Log in You're going to know you are but You get the idea

00:03:22.470 --> 00:03:28.669
The Server Has To lay some Groundwork Down before A client Connects use a hidden Service Right so there's protocols in the Tor

00:03:29.400 --> 00:03:35.780
Specification for doing This but [what] the server will do when they come online Is they will pick Three Onion Routers at Random and

00:03:37.200 --> 00:03:44.209
Name Them as Introduction Points so let's Pick Them at Random now These are just normal Onion Routers They're very Likely to be Just doing

00:03:44.209 --> 00:03:45.060
Regular

00:03:45.060 --> 00:03:50.209
Normal Routing Tasks Like Circuits Through other Clients Into Servers and Things Some of These might be Exit Nodes

00:03:50.430 --> 00:03:55.100
Entry Nodes and so on but As far as I know all Onion Routers Can, also act as

00:03:55.110 --> 00:03:59.929
Introduction Points it's not A big Job [I] didn't Require A Huge Amount of Bandwidth the server will Make Connections

00:04:00.360 --> 00:04:00.959
Circuits

00:04:00.959 --> 00:04:07.849
to These introduction Points They've Either Full on tour Circuits with Three hops in Between Them the idea being That These introduction Points Know They're

00:04:07.850 --> 00:04:09.660
Going to be introducing People to this server

00:04:09.660 --> 00:04:11.489
But they don't know who it Is

00:04:11.489 --> 00:04:16.548
Why it's Already the server is Hiding behind A layer of Anonymity here it will send Them a message to say I'd like you to

00:04:16.549 --> 00:04:18.540
Act As an Introduction Point and Then

00:04:18.540 --> 00:04:25.460
It will Create something Called A server Hidden Service Descriptor which I was [write] Down here that will Include the service Public key for

00:04:25.800 --> 00:04:28.800
Occasion Purposes But I won't dwell on that Particularly but

00:04:28.800 --> 00:04:35.310
Also Crucially the ip Addresses [of] These introduction Points Here Now These are all public Anyway they will Publicly Listed

00:04:35.680 --> 00:04:42.359
Now it will Publish This Descriptor to something Called a Distributed hash Table that is to [Say] all [of] the Routers on Tor

00:04:42.639 --> 00:04:46.769
will Hold Some in Some Part of the Information [on] all of These hidden Services

00:04:47.050 --> 00:04:50.759
And the idea Is that if I try and Look up a hidden Service

00:04:50.889 --> 00:04:55.288
The [Roots] Are Responsible for it will Give Me Back the Descriptor by including the Addresses

00:04:55.509 --> 00:05:00.718
[Over] The Introduction Points Now the key for this Hash table is the Onion Address

00:05:00.909 --> 00:05:02.909
Right so the Onion dress that Everyone Knows about

00:05:02.949 --> 00:05:08.369
Is actually derived from the public key [of] this Server and Is in Essence the key but Gets

00:05:08.590 --> 00:05:15.479
These ips Out of the Distributed hash table the whole Point of this Is [that] the Onion Address isn't publicized on the Global Tor Network

00:05:15.690 --> 00:05:17.580
You Just find it other Ways like on A net

00:05:17.580 --> 00:05:19.479
On an Internet or your friend tells you or?

00:05:19.479 --> 00:05:23.279
in an Email or something like this the [Waiver] [the] Distributed hash Table Is

00:05:23.349 --> 00:05:27.809
Programmed The vast Majority of Nodes Won't know what the description Is for A given Key I?

00:05:27.909 --> 00:05:32.999
Only want more Probably or couple so there's an Inherent Security here it doesn't until Recently it's

00:05:33.000 --> 00:05:37.859
Also Made it Quite difficult to Work at how Many Hidden services There were so this Is all set up now the server sits There

00:05:37.860 --> 00:05:42.599
And Waits for [Internet] [Connections] [Or] People to ask for A, web web file Now

00:05:43.270 --> 00:05:45.960
and These Onion Routers These ips the

00:05:46.240 --> 00:05:52.380
Introduction Points Just sit There Being in Being normal Routed and Waiting here me I want to connect to this Hidden Service and Someone gave

00:05:52.380 --> 00:05:56.969
Me the Onion Address so that's Really, what I need so what I do is I?

00:05:57.520 --> 00:06:04.590
Request The descriptor off the hash Table and it gives it back that has the Three ip

00:06:05.229 --> 00:06:07.589
And i pick one At random right let's Say This Top

00:06:07.590 --> 00:06:10.829
One here what I'm going to do in Essence The Short Version

00:06:10.830 --> 00:06:14.729
Is i'm going to ask this ip to Introduce me to a server and Then

00:06:14.729 --> 00:06:19.019
We're Going to meet in The Middle at someone [debut] Point that's the idea so let's Work out How it Works

00:06:19.419 --> 00:06:21.300
I'Ve Sort of run out of colors so i'm going to go?

00:06:21.300 --> 00:06:23.699
Over the Orange Pen Here it's A bit bright I choose A

00:06:23.699 --> 00:06:31.378
Rendezvous Point at Random and I create A [tour] Circuit to that Rendezvous Point Remember that Essentially all of These Arrows are the full

00:06:31.599 --> 00:06:35.849
Connections This One has Two Hops on it not Three Because the Rendezvous Point is a third Hop

00:06:36.130 --> 00:06:42.659
So it Goes on like this Now I send a message to the one 7-Point Saying I'd like you to Introduce me [to] the server

00:06:42.850 --> 00:06:46.889
By This Introduction Point and I want you to send it the word

00:06:47.169 --> 00:06:53.609
Cookie Right now that Could Be Any string [it's] not Important [the] point Is sort of like a One-Time Password Kind of Thing to verify

00:06:53.610 --> 00:07:00.689
but no
One Else has got Involved in This Conversation the Rendezvous Point Creates a circuit to this IP and sends it the Word Cookie it

00:07:00.690 --> 00:07:06.269
Also sends its Own Address Because of Course this, doesn't know it because the Circuit and We [need] to be at a rendezvous Here

00:07:06.789 --> 00:07:08.789
so this ip

00:07:08.860 --> 00:07:14.550
Forwards The Cookie On to the Server and At this Point the Server Can Either Accept it and Decide to try and Make a Connection

00:07:14.650 --> 00:07:19.799
Or do Nothing right so you Can Imagine a situation where Instead of A cookie Some kind of special Password

00:07:19.990 --> 00:07:22.139
But you need to be able to connect to this Website and

00:07:22.479 --> 00:07:28.409
The Server Just Does Nothing that's that's One Thing that Could happen right They Have an Authentication Token I think but at

00:07:28.410 --> 00:07:31.859
This Point the Introduction Points Job is done There is no more

00:07:32.139 --> 00:07:36.389
These Would be the serve Their Purpose all they do is Forward the Cookie [Onto] the server right

00:07:37.509 --> 00:07:39.509
Bear in Mind, We don't know where it Is and

00:07:40.000 --> 00:07:42.389
Eat the server Decides Whether it's going to connect

00:07:43.660 --> 00:07:45.360
Let's Assume because Otherwise this will

00:07:45.360 --> 00:07:50.970
Be a much Shorter Video that the server does want to talk said he to the Rendezvous Point so it creates

00:07:51.430 --> 00:07:54.630
Another Circuit I don't know How Many 1 2 3 4 5 but at

00:07:54.630 --> 00:08:01.169
[5] we've got [Six] Circuit right Across the Tor Network to the one David point Which is the cookie of The Wrong very Important Details

00:08:01.539 --> 00:08:03.809
yes That Rendezvous Point Details will be

00:08:03.810 --> 00:08:07.109
Well [it] be attached to the same message with the Cookie and yes Good Question now

00:08:07.270 --> 00:08:09.780
The Server Sends The One They've Appoint A

00:08:09.780 --> 00:08:15.419
Rendezvous Please Essentially Message [Weave] the Cookie in it and the Mod Labelled Point Looks at These Two cookies and Goes

00:08:15.419 --> 00:08:19.889
Well I was requested of [One] They [blew] by this guy With this Cookie I've Received a Connection from some server

00:08:20.199 --> 00:08:26.069
Also with the cookie They must be Talking About each other right that's the Idea it Could be doing Lots of on the Moves at

00:08:26.070 --> 00:08:29.070
The Same Time With Different Cookies and it will then

00:08:29.470 --> 00:08:34.169
Act as Just Another Hop on This Network and Connect These two up so this Comes over here like this and

00:08:34.690 --> 00:08:39.599
This Comes Down Here and They Kind of get Bridged by this Rendezvous Point here Convened

00:08:39.599 --> 00:08:42.359
On the Rendezvous Point [Acts] like A normal [Onion] mu 2 and Just decrypt Messages

00:08:42.969 --> 00:08:44.969
Passes Them out the other Side like Always

00:08:45.910 --> 00:08:47.320
so

00:08:47.320 --> 00:08:49.320
for Anyone That's Sort of Lost count

00:08:49.480 --> 00:08:50.520
There are at

00:08:50.520 --> 00:08:57.659
Least six Hops here Right There Two intermediate Node on this Circuit then the Rendezvous Point in Three Intermediate Nodes on

00:08:58.000 --> 00:09:03.629
This Circuit Right it's Just Part of the Protocol [that] There's only [Two] this Side that's Obviously going to be quite A lot slower than

00:09:03.629 --> 00:09:04.620
Normal Talk These Could

00:09:04.620 --> 00:09:07.469
Be all over the World like this it's going to Take quite a long Time

00:09:07.779 --> 00:09:10.078
But There is no real Way of getting in on this Conversation

00:09:10.300 --> 00:09:17.339
Right if You're Sniffing here or sniffing here all you're Seeing Is encrypted [tor] cells all of 512 bytes Long Jumping Around this Place

00:09:17.620 --> 00:09:23.579
She's got, no Idea what any of Them are right very very difficult to track that's why, it's so difficult to find

00:09:24.279 --> 00:09:30.328
Hidden Services okay Because They're Hidden yeah kind of the Point they, wouldn't Have Couldn't They?

00:09:30.329 --> 00:09:32.399
[did] Something Else no they did in Term

00:09:33.279 --> 00:09:35.230
They Didn't Name it Incorrectly to Say

00:09:35.230 --> 00:09:42.569
Sometimes Were Vulnerabilities Found in The Protocol right or Compromised knows Which Allow Hidden Services to be Found this happened for example Silk Road -

00:09:43.750 --> 00:09:51.149
But that's not [That] Common right and There's the bigger the Network Gets The more beautiful no Combinations are The heart of That Process Gets

00:09:52.300 --> 00:09:54.300
Now as an Aside

00:09:55.569 --> 00:10:01.619
Some Servers don't need Anonymity and this Many hops is too slow [all] right so they want to protect Their Clients but

00:10:01.620 --> 00:10:06.329
They don't Care About but if People know who they are Facebook for example so Facebook Work

00:10:06.360 --> 00:10:11.600
Foot-Tall Recently to Introduce Something Called Single Onion in That case the only Difference is the bit Server

00:10:11.600 --> 00:10:14.180
Doesn't bother With These Three hops it just goes straight to the Rendezvous Point

00:10:14.740 --> 00:10:16.740
Now That Obviously [Forgoes]

00:10:16.740 --> 00:10:21.820
Servers Anonymity Because [The] One Living Point knows what it Is but it Takes a puppy

00:10:21.839 --> 00:10:27.419
We know [Whether] servers are I think right so they don't mind about that Their Business Is protecting Their Customers

00:10:27.430 --> 00:10:34.019
They don't Care but We know Where Their servers are so that's an Alternative and you it's quite A lot faster because you've Removed Three

00:10:34.300 --> 00:10:41.250
Possibly Global Hops from There What Benefit Is [that] Facebook - you know some of Just using A normal tor

00:10:41.800 --> 00:10:48.839
Connection Facebook There's a small Chance if You're using a normal tor Connection that some will be Sniffing Here and Sniffing Here and do Traffic

00:10:48.970 --> 00:10:50.970
Correlation and Work out what's going on?

00:10:51.059 --> 00:10:56.789
Right [There's] no chance About happening when it's a hidden server it Never leaves the Tor Network that's the thing if you Imagine that Cloud

00:10:57.129 --> 00:11:01.499
You're Talking to Facebook Entirely Inside That Cloud very Hard to get in but on the other Hand

00:11:02.170 --> 00:11:04.800
Facebook Server Location is Actually Known because if you

00:11:04.800 --> 00:11:10.560
Were Operating the Rendezvous Point and Facebook said we'd like to connect back to the Client you'd immediately know that Because it's [Facebook's] Server so

00:11:12.010 --> 00:11:14.010
it's like a Halfway Compromise

00:11:14.260 --> 00:11:21.510
And i think a fairly reasonable Compromise so it's Facebook Putting one Foot, Inside the Cloud yeah yeah one Foot

00:11:21.510 --> 00:11:23.510
Inside did to Talk Loud

00:11:24.700 --> 00:11:31.080
With messages Encrypted Once With K3 it's encrypted Another Time with K2 and

00:11:31.420 --> 00:11:33.420
When it's encrypted a final Time

00:11:33.610 --> 00:11:40.769
With K1 Now Let's Think about what that means it Means that only This Routes are Here

