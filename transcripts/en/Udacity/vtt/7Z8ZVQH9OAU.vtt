WEBVTT
Kind: captions
Language: en

00:00:00.238 --> 00:00:03.290
We finished encoding our states
in the BURLAP domain, so

00:00:03.290 --> 00:00:06.440
now let's add actions
to the domain as well.

00:00:06.440 --> 00:00:09.340
To add actions to domain
objects we generate,

00:00:09.340 --> 00:00:14.590
we can use a method built into the
GraphDefinedDomain class, setTransition.

00:00:14.590 --> 00:00:17.900
This method is used to define
both the set of actions and

00:00:17.900 --> 00:00:19.960
the transition function for the MDP.

00:00:21.030 --> 00:00:24.680
The first argument is an int
giving the ID of the state

00:00:24.680 --> 00:00:26.760
S we are transitioning from.

00:00:26.760 --> 00:00:29.010
The second argument is also an int,

00:00:29.010 --> 00:00:31.610
giving the ID the action
we are defining.

00:00:31.610 --> 00:00:33.870
I'll talk about that
more in just a second.

00:00:33.870 --> 00:00:36.810
The third argument is an int
giving the ID of the state

00:00:36.810 --> 00:00:39.180
T we are transitioning into.

00:00:39.180 --> 00:00:40.760
And the fourth argument is a double,

00:00:40.760 --> 00:00:45.520
giving the probability of transitioning
to state T upon taking this action.

00:00:45.520 --> 00:00:49.972
Note that many different actions
coming out of the same state can have

00:00:49.972 --> 00:00:50.824
the same ID.

00:00:50.824 --> 00:00:55.380
But the probabilities of the actions
with the same ID leaving

00:00:55.380 --> 00:00:57.801
a given state must add up to one.

00:00:57.801 --> 00:01:03.908
Looking at our state diagram again,
if we want to define the action a,

00:01:03.908 --> 00:01:09.291
taking us from state 0 to state 1,
we can call setTransition

00:01:09.291 --> 00:01:14.483
with the arguments 0 for
the ID of the state we are leaving.

00:01:14.483 --> 00:01:19.243
0, since this is the first action
we're defining from state 0.

00:01:21.566 --> 00:01:25.421
1, which is the ID of the state
we are transitioning into.

00:01:28.426 --> 00:01:33.200
And 1, and I'm adding a decimal point
to denote that this is a double.

00:01:34.500 --> 00:01:39.248
Since this is a deterministic action,
with probability 1 we

00:01:39.248 --> 00:01:44.900
will always enter state 1 by
taking action 0 from state 0.

00:01:44.900 --> 00:01:50.477
To define action b, we call
setTransition with the arguments,

00:01:50.477 --> 00:01:54.313
0, again because we are leaving state 0.

00:01:54.313 --> 00:01:59.020
1, since this is going to
be action 1 from state 0.

00:02:00.070 --> 00:02:04.282
2, which is the ID of
the state we are entering.

00:02:04.282 --> 00:02:10.910
And 1., since again,
this is a deterministic action.

00:02:10.910 --> 00:02:16.670
With probability 1, this action
will always take us from S0 to S2.

00:02:16.670 --> 00:02:23.454
Similarly, action c will be defined by
calling setTransition with arguments 0,

00:02:23.454 --> 00:02:28.824
2, since this is action 2
coming out from state 0.

00:02:28.824 --> 00:02:33.312
3 for
the ID of the state we're entering, and

00:02:33.312 --> 00:02:37.950
1, since this is a deterministic action.

00:02:37.950 --> 00:02:39.630
Now let's put this into our code.

00:02:40.680 --> 00:02:46.510
Notice that I am casting this.dg,
which is our DomainGenerator object,

00:02:46.510 --> 00:02:51.080
to a GraphDefinedDomain
before calling setTransition.

00:02:51.080 --> 00:02:53.980
This is needed because
setTransition is not defined for

00:02:53.980 --> 00:02:55.530
the DomainGenerator class.

00:02:56.720 --> 00:02:59.460
Another point to notice is that
we are defining all of these

00:02:59.460 --> 00:03:03.856
actions before we call
this.dg.generateDomain.

00:03:03.856 --> 00:03:08.220
We're calling the setTransition
functions first

00:03:08.220 --> 00:03:13.000
because it tells the GraphDefinedDomain
object to include these transitions

00:03:13.000 --> 00:03:16.110
in its blueprint when it
generates a new domain object.

00:03:17.160 --> 00:03:21.920
Calling generateDomain first would
create a domain with six states but

00:03:21.920 --> 00:03:25.630
no transitions, as I found out myself
as I was learning to use BURLAP.

