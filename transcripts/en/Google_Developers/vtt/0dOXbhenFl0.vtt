WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:03.684
[MUSIC PLAYING]

00:00:03.684 --> 00:00:05.850
BRIAN DORSEY: I'm Brian
Dorsey from Google Developer

00:00:05.850 --> 00:00:06.410
Relations.

00:00:06.410 --> 00:00:07.430
And this is Eric Johnson--

00:00:07.430 --> 00:00:07.960
ERIC JOHNSON: Hi.

00:00:07.960 --> 00:00:09.335
BRIAN DORSEY:
--also from Google.

00:00:09.335 --> 00:00:11.962
And we have with us today
from SaltStack Joseph Hall.

00:00:11.962 --> 00:00:12.920
JOSEPH HALL: Hey, guys.

00:00:12.920 --> 00:00:13.820
BRIAN DORSEY: And
we're going to talk

00:00:13.820 --> 00:00:15.710
about how SaltStack
and Google Compute

00:00:15.710 --> 00:00:17.640
Engine work very
smoothly together.

00:00:17.640 --> 00:00:20.740
So Compute Engine itself
is virtual machines

00:00:20.740 --> 00:00:22.580
hosted on Google's
infrastructure.

00:00:22.580 --> 00:00:25.810
It's disk, network, and
the virtual machines.

00:00:25.810 --> 00:00:27.704
And what's SaltStack?

00:00:27.704 --> 00:00:29.870
JOSEPH HALL: SaltStack is
a configuration management

00:00:29.870 --> 00:00:30.930
and automation framework.

00:00:30.930 --> 00:00:32.763
And it's designed for
ease of use and speed.

00:00:32.763 --> 00:00:36.000
And it's geared especially for
massive scale and flexibility.

00:00:36.000 --> 00:00:37.750
BRIAN DORSEY: Massive
scale is a good fit.

00:00:37.750 --> 00:00:38.590
Let's go straight to the demo.

00:00:38.590 --> 00:00:41.214
ERIC JOHNSON: Absolutely, OK, so
for the demo today, what we're

00:00:41.214 --> 00:00:45.570
going to do is use Salt to
spin up four Compute Engine

00:00:45.570 --> 00:00:48.420
instances and configure
them as Salt minions.

00:00:48.420 --> 00:00:51.900
We'll install Apache and a
custom index dot HTML page.

00:00:51.900 --> 00:00:55.690
We'll open up port 80 to
allow HTTP traffic in.

00:00:55.690 --> 00:00:58.560
We'll set up a Compute
Engine load balancer.

00:00:58.560 --> 00:01:00.350
And then we'll demo
that out, make sure

00:01:00.350 --> 00:01:02.250
that everything's
working correctly.

00:01:02.250 --> 00:01:06.250
So if you're interested
in wanting to repeat this,

00:01:06.250 --> 00:01:09.370
we have a Get Help
repository set up.

00:01:09.370 --> 00:01:11.270
And I'll show you links
at the end of this.

00:01:11.270 --> 00:01:13.394
But this goes through all
of the details on what we

00:01:13.394 --> 00:01:15.290
did to get this demo
set up, including

00:01:15.290 --> 00:01:18.910
all of the configuration that
you would need to have set up.

00:01:18.910 --> 00:01:21.030
But what we'll do for
the purposes of this

00:01:21.030 --> 00:01:23.240
is we'll just skip
right down to Demo Time.

00:01:23.240 --> 00:01:25.110
And the first
command I'll show you

00:01:25.110 --> 00:01:27.860
is how we can use
Salt Cloud, which

00:01:27.860 --> 00:01:31.170
is a utility baked into
Salt, to go ahead and create

00:01:31.170 --> 00:01:32.420
four Compute Engine instances.

00:01:32.420 --> 00:01:33.961
So why don't you
tell us a little bit

00:01:33.961 --> 00:01:34.850
about Compute Engine.

00:01:34.850 --> 00:01:36.960
BRIAN DORSEY: Awesome,
OK, so, like I said,

00:01:36.960 --> 00:01:40.705
this is virtual machines
on Google's network

00:01:40.705 --> 00:01:42.330
infrastructure,
Google's infrastructure

00:01:42.330 --> 00:01:43.163
all the way through.

00:01:43.163 --> 00:01:46.960
And the whole system
is designed to be fast.

00:01:46.960 --> 00:01:49.140
And this is fast and consistent.

00:01:49.140 --> 00:01:51.820
So we've got instances
booting right now.

00:01:51.820 --> 00:01:53.240
In fact, they just booted.

00:01:53.240 --> 00:01:57.970
So that was four instances that
allocated new block storage

00:01:57.970 --> 00:02:01.310
devices, copied
over the boot image

00:02:01.310 --> 00:02:03.920
to those-- the latest image--
actually booted from them

00:02:03.920 --> 00:02:06.634
and handed off to a script
to run whatever software

00:02:06.634 --> 00:02:07.300
you want to run.

00:02:07.300 --> 00:02:09.020
And in this case, that is Salt.

00:02:09.020 --> 00:02:12.190
So, Joseph, what's
going on here?

00:02:12.190 --> 00:02:13.966
JOSEPH HALL: So
once the Salt Cloud

00:02:13.966 --> 00:02:15.840
determines that the
machine is up and running

00:02:15.840 --> 00:02:18.325
and ready to be connected to,
then it's going to log in.

00:02:18.325 --> 00:02:21.530
And it's going to upload this
bootstrap script for Salt.

00:02:21.530 --> 00:02:23.030
That's going to
detect the operating

00:02:23.030 --> 00:02:24.196
system that it's running on.

00:02:24.196 --> 00:02:27.290
It's going to configure the
repositories for that OS,

00:02:27.290 --> 00:02:30.730
and download and install Salt,
and get it up and running,

00:02:30.730 --> 00:02:35.145
and get all the keys
accepted and ready to go

00:02:35.145 --> 00:02:37.350
so that we can start
throwing Salt Cloud

00:02:37.350 --> 00:02:39.760
commands at the instance.

00:02:39.760 --> 00:02:43.290
And since Salt itself is
an automation framework

00:02:43.290 --> 00:02:45.740
and remote execution
engine, then

00:02:45.740 --> 00:02:48.930
we can throw commands at it
to figure which packages need

00:02:48.930 --> 00:02:52.440
to be installed, to find which
files need to be laid down

00:02:52.440 --> 00:02:58.050
in the system and what they
need to look like, and also

00:02:58.050 --> 00:03:00.034
throw remote execution
commands at it

00:03:00.034 --> 00:03:02.450
and have it perform just our
regular tasks that we perform

00:03:02.450 --> 00:03:04.279
on a regular basis.

00:03:04.279 --> 00:03:05.070
BRIAN DORSEY: Nice.

00:03:05.070 --> 00:03:07.750
ERIC JOHNSON: Yeah, so I think
it looks like we're probably

00:03:07.750 --> 00:03:10.990
just waiting here for the
last couple ones to finish.

00:03:10.990 --> 00:03:12.420
And there they come in.

00:03:12.420 --> 00:03:14.900
So what we should end
up seeing is a list

00:03:14.900 --> 00:03:17.237
of attributes for each
of these instances

00:03:17.237 --> 00:03:18.570
once it goes ahead and displays.

00:03:18.570 --> 00:03:22.050
And sure enough, there's the
JSON output for each of these.

00:03:22.050 --> 00:03:24.240
So what we're going
to want to do next

00:03:24.240 --> 00:03:28.250
is show you a little bit
about Salt's remote execution.

00:03:28.250 --> 00:03:33.156
And we'll use this
command over here.

00:03:33.156 --> 00:03:35.330
And what I'll do
is paste that in.

00:03:35.330 --> 00:03:38.140
And what this is going to do
is it's going to use Salt.

00:03:38.140 --> 00:03:42.107
And the asterisk there means
to match all of the minions.

00:03:42.107 --> 00:03:44.440
And it's going to execute a
command with the command dot

00:03:44.440 --> 00:03:46.200
run module, or the
command module.

00:03:46.200 --> 00:03:48.990
And it's just going to
execute the uname-a function

00:03:48.990 --> 00:03:51.320
across each those
or the command,

00:03:51.320 --> 00:03:53.389
and then automatically
return those results back.

00:03:53.389 --> 00:03:55.430
So you can see it executed
all those in parallel.

00:03:55.430 --> 00:03:57.804
We didn't have to wait for
each one of those to complete.

00:03:57.804 --> 00:03:58.980
We got all of the data back.

00:03:58.980 --> 00:04:02.560
So that verifies that everything
was provisioned correctly.

00:04:02.560 --> 00:04:06.260
The minion is listening for
commands from the master.

00:04:06.260 --> 00:04:08.010
So the next thing I
want to do is go ahead

00:04:08.010 --> 00:04:10.560
and use the high state command.

00:04:10.560 --> 00:04:12.840
And what this is going to
do since I have this already

00:04:12.840 --> 00:04:15.465
configured ahead of time--
what those configuration files

00:04:15.465 --> 00:04:16.839
I have set up
ahead of time, it's

00:04:16.839 --> 00:04:18.410
going to go ahead
and install Apache

00:04:18.410 --> 00:04:20.190
on each of these
instances, and then

00:04:20.190 --> 00:04:22.800
lay down a custom
index dot HTML file.

00:04:22.800 --> 00:04:24.850
The index dot HTML
file that we lay down

00:04:24.850 --> 00:04:28.759
is going to have the host name
of that instance baked into it.

00:04:28.759 --> 00:04:30.300
The next thing I
want to do is I just

00:04:30.300 --> 00:04:31.930
want to make sure
that since I'm going

00:04:31.930 --> 00:04:34.305
to be doing this is a web
server-- so I want to make sure

00:04:34.305 --> 00:04:36.160
that port 80 traffic is allowed.

00:04:36.160 --> 00:04:39.780
So we'll go ahead and use the
Salt Cloud utility to configure

00:04:39.780 --> 00:04:41.920
Compute Engine's
networking firewall

00:04:41.920 --> 00:04:45.015
rules to allow TCP colon 80.

00:04:45.015 --> 00:04:48.630
And it looks like that command
is completed successfully.

00:04:48.630 --> 00:04:52.540
And the next thing I want to
do is use Salt Cloud again

00:04:52.540 --> 00:04:56.807
to configure Compute
Engine's load balancer.

00:04:56.807 --> 00:04:58.140
Let me just paste that in there.

00:04:58.140 --> 00:04:59.830
And then hopefully
Brian can tell us

00:04:59.830 --> 00:05:01.429
a little bit about
load balancing.

00:05:01.429 --> 00:05:02.970
BRIAN DORSEY: Yes,
this load balancer

00:05:02.970 --> 00:05:04.780
were configuring
right now is actually

00:05:04.780 --> 00:05:07.170
a Google data center
level load balancer.

00:05:07.170 --> 00:05:09.250
So if you're
interested in more this

00:05:09.250 --> 00:05:10.990
is a very powerful
load balancer.

00:05:10.990 --> 00:05:14.130
It's aware of the health of the
instances as they come and go.

00:05:14.130 --> 00:05:16.600
And we published a
blog post recently

00:05:16.600 --> 00:05:18.470
where we documented
testing this out

00:05:18.470 --> 00:05:22.770
to 1 million queries per second
without any pre-warming at all.

00:05:22.770 --> 00:05:24.225
So it's really powerful.

00:05:24.225 --> 00:05:26.100
ERIC JOHNSON: Great,
and so we've already got

00:05:26.100 --> 00:05:26.910
it configured.

00:05:26.910 --> 00:05:29.220
And one of the attributes
that comes back from here

00:05:29.220 --> 00:05:31.820
is the public IP address
for this load balancer.

00:05:31.820 --> 00:05:33.170
And so it's a single IP address.

00:05:33.170 --> 00:05:35.890
Now, in this case, I
only have four instances,

00:05:35.890 --> 00:05:38.110
but let's say I have
200 instances behind.

00:05:38.110 --> 00:05:41.345
I can still send all my traffic
just to that single IP address.

00:05:41.345 --> 00:05:42.970
So let's go ahead
and see what happens.

00:05:42.970 --> 00:05:45.730
If things worked correctly what
we should be able to do here

00:05:45.730 --> 00:05:49.800
is see the web page for each
of our instances served up

00:05:49.800 --> 00:05:51.680
through our load balancer.

00:05:51.680 --> 00:05:52.400
So it should--

00:05:52.400 --> 00:05:55.600
BRIAN DORSEY: Nice, as the
color-- oh, just changed.

00:05:55.600 --> 00:05:57.907
ERIC JOHNSON: Yeah, so
hopefully, we've seen what?

00:05:57.907 --> 00:05:58.490
One and three.

00:05:58.490 --> 00:06:00.000
There's four and two.

00:06:00.000 --> 00:06:01.490
So it looks like
all four of them

00:06:01.490 --> 00:06:03.620
are provisioned, being
successfully behind the load

00:06:03.620 --> 00:06:04.120
balancer.

00:06:04.120 --> 00:06:05.691
And we did all of
that with Salt.

00:06:05.691 --> 00:06:06.690
BRIAN DORSEY: Excellent.

00:06:06.690 --> 00:06:08.170
ERIC JOHNSON: Here's some
links for more information.

00:06:08.170 --> 00:06:10.120
So as I said, there's
a Get Help repository

00:06:10.120 --> 00:06:12.731
if you want to replicate
all of this on your own

00:06:12.731 --> 00:06:14.980
as well as a link over there
to the documentation that

00:06:14.980 --> 00:06:18.250
shows all of the functionality
that is available to you

00:06:18.250 --> 00:06:21.240
for Compute Engine from
Salt, and more information

00:06:21.240 --> 00:06:23.497
about the Google Cloud
Platform and SaltStack.

00:06:23.497 --> 00:06:25.330
And I'd like to say a
very special thank you

00:06:25.330 --> 00:06:28.877
for Joseph Hall for joining
us today to talk about this.

00:06:28.877 --> 00:06:29.960
JOSEPH HALL: Thanks, guys.

00:06:29.960 --> 00:06:32.230
BRIAN DORSEY: And
thank you for watching.

