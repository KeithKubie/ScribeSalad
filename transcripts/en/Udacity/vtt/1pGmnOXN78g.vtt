WEBVTT
Kind: captions
Language: en

00:00:00.480 --> 00:00:04.524
All right so we're going to talk about a
particular kind of function approximator

00:00:04.524 --> 00:00:06.398
here that we refer to as an averager and

00:00:06.398 --> 00:00:09.114
the whole class of averager
function approximators.

00:00:09.114 --> 00:00:09.880
&gt;&gt; Okay.

00:00:09.880 --> 00:00:13.756
&gt;&gt; So this is a kind of function
approximator that was actually or

00:00:13.756 --> 00:00:17.110
at least in this context
introduced by Jeff Gordon and

00:00:17.110 --> 00:00:21.806
when he did it there was this sort of
collective head slapping that happened

00:00:21.806 --> 00:00:26.150
over the entire community of
reinforcement learning researchers.

00:00:26.150 --> 00:00:28.370
Because it was just there.

00:00:28.370 --> 00:00:31.980
It was so beautiful and
nobody saw it except for him.

00:00:31.980 --> 00:00:35.330
And so it really was at that time,
the age of Gordon.

00:00:36.370 --> 00:00:39.010
&gt;&gt; [LAUGH] That's fantastic.

00:00:39.010 --> 00:00:42.770
&gt;&gt; So moving on.

00:00:42.770 --> 00:00:45.960
So we're going to introduce this
averages concept in the context

00:00:45.960 --> 00:00:48.330
of a simple example.

00:00:48.330 --> 00:00:53.950
So imagine that we're trying to do is
represent a function over the line.

00:00:53.950 --> 00:00:55.880
So over the over this
one dimensional space.

00:00:55.880 --> 00:00:59.039
So it's going to be some
kind of curve [SOUND] And

00:00:59.039 --> 00:01:03.656
the parameters that we're going to
get to set are the actual value of

00:01:03.656 --> 00:01:06.501
that function at some particular point.

00:01:06.501 --> 00:01:11.017
So at X1, at X2, and at X3 we can,
you know, move these up and

00:01:11.017 --> 00:01:12.900
down, these points.

00:01:12.900 --> 00:01:16.800
And what we'd like is that we
define a function approximator so

00:01:16.800 --> 00:01:18.490
that once we've defined these points,

00:01:18.490 --> 00:01:21.610
the rest of them will get kind
of filled in in a natural way.

00:01:21.610 --> 00:01:23.120
Let's say.

00:01:23.120 --> 00:01:26.270
And for this story to make
sense they're going to have

00:01:26.270 --> 00:01:28.330
to somehow be related to averaging
&gt;&gt; Sure.

00:01:28.330 --> 00:01:31.660
&gt;&gt; How do we define the value of
points in between here between x1 and

00:01:31.660 --> 00:01:37.340
x to say we want to get going to get
the value of some point Just plain old x

00:01:37.340 --> 00:01:39.950
as a function of the value at x1 and
the value of x2.

00:01:39.950 --> 00:01:40.770
Yeah.
So so

00:01:40.770 --> 00:01:42.100
what would be a natural way to do that?

00:01:42.100 --> 00:01:44.570
I know you can say more than
one if you can think of it.

00:01:44.570 --> 00:01:47.800
&gt;&gt; Sure there's lots ways of doing it
but I guess the simplest one would be

00:01:47.800 --> 00:01:50.380
just to take our weighted
average based on distance.

00:01:50.380 --> 00:01:53.590
&gt;&gt; Yes which is why these
things are called Averagers.

00:01:53.590 --> 00:01:56.590
So what we're going to do is we're
going to say okay the value of x I don't

00:01:56.590 --> 00:02:01.955
know what it is, but we're always
going to make sure it's, I don't know,

00:02:01.955 --> 00:02:08.500
0.8 times the value of x1,
which is a parameter,

00:02:08.500 --> 00:02:13.660
plus 0.2 times the value at x2,
which is another one of our parameters.

00:02:13.660 --> 00:02:17.200
&gt;&gt; And that's because of the relative
distance between Vx1 and x2.

00:02:17.200 --> 00:02:19.080
&gt;&gt; Yeah, so
it turns out it doesn't matter but

00:02:19.080 --> 00:02:20.390
that is a very natural thing to do.

00:02:20.390 --> 00:02:22.400
To kind of do a linear interpolation.

00:02:22.400 --> 00:02:25.665
And so what that means is once you
nail down where x1, x2, and x3 are.

00:02:25.665 --> 00:02:26.210
The way that it generalizes,

00:02:26.210 --> 00:02:31.220
the way that it fills in the rest of the
function is like little line segments.

00:02:32.460 --> 00:02:34.830
There's a bunch of other
things you could do and

00:02:34.830 --> 00:02:38.990
they're all okay as long as what we do
is any point that we want to define,

00:02:38.990 --> 00:02:44.857
we define it as a convex
combination of the anchor points.

00:02:44.857 --> 00:02:48.770
So the anchor points are the ones that
we get to set as free parameters and

00:02:48.770 --> 00:02:51.760
the value at any other state needs to be
expressible as a convex combination of

00:02:51.760 --> 00:02:52.460
the anchor points.

00:02:52.460 --> 00:02:54.540
So this doesn't really tell
us what should we do for

00:02:54.540 --> 00:02:57.990
beyond x3 for things that
are out here in the state space.

00:02:57.990 --> 00:02:58.570
&gt;&gt; Well that's funny.

00:02:58.570 --> 00:02:59.740
That is just what I
was going to ask you.

00:02:59.740 --> 00:03:01.870
What we do for
extrapolation instead of interpolation?

00:03:01.870 --> 00:03:03.845
&gt;&gt; Yeah, so this is very interpolative.

00:03:03.845 --> 00:03:06.190
[LAUGH] Is that a word?

00:03:06.190 --> 00:03:06.980
&gt;&gt; It is now.

00:03:06.980 --> 00:03:10.040
&gt;&gt; Interpolative,
it's sort of interpolation related.

00:03:10.040 --> 00:03:11.570
So the constraint that we've got.

00:03:11.570 --> 00:03:15.040
For it to be an averager, it needs
to be that the value of any point

00:03:15.040 --> 00:03:17.770
is the convex combination
of a set of anchor points.

00:03:17.770 --> 00:03:21.080
So, we get to define how
things extrapolate but

00:03:21.080 --> 00:03:25.430
it has to be the case that for
example for some point X prime out here,

00:03:25.430 --> 00:03:29.060
its value needs to be defined in terms
of these black points, in terms of

00:03:29.060 --> 00:03:32.660
the these other anchor points whose
values are going to get to be set.

00:03:32.660 --> 00:03:36.430
So, one natural thing would be to say
okay,we're out to the right of X1.

00:03:36.430 --> 00:03:40.430
Let's just set anything out
here to be the value of X3.

00:03:40.430 --> 00:03:41.030
&gt;&gt; Sure.

00:03:41.030 --> 00:03:42.710
&gt;&gt; So we don't really extrapolate so

00:03:42.710 --> 00:03:45.690
much as just you know flick
flatten it out on the two ends.

00:03:45.690 --> 00:03:47.340
So we don't get too kind of crazy up or

00:03:47.340 --> 00:03:50.310
down from from where we were but there's
other things that we could do as well

00:03:50.310 --> 00:03:53.610
you could also say that if you're far
enough away from the points then it's

00:03:53.610 --> 00:03:56.680
going to be the average the just
straight up average of these guys.

00:03:56.680 --> 00:04:00.730
And as you get closer it's going to
be more influenced by the near ones.

00:04:00.730 --> 00:04:03.310
By virtue of the fact that
it's a convex combination.

00:04:03.310 --> 00:04:05.990
What does that tell us
about the value out here?

00:04:05.990 --> 00:04:09.740
&gt;&gt; Well, it has to be in between
the highest and lowest value.

00:04:09.740 --> 00:04:10.360
That's for sure.

00:04:10.360 --> 00:04:11.140
&gt;&gt; Exactly.

00:04:11.140 --> 00:04:11.720
That's right.

00:04:11.720 --> 00:04:13.220
So we are extrapolating, but

00:04:13.220 --> 00:04:15.880
we're not really extrapolating
outside of the data that we've got.

00:04:15.880 --> 00:04:16.670
&gt;&gt; Okay.
&gt;&gt; And this is,

00:04:16.670 --> 00:04:18.290
this is going to be a really
important property.

00:04:18.290 --> 00:04:20.560
These averages to make sure that
they're going to be well behaved.

00:04:20.560 --> 00:04:22.280
Right?
So that, that makes sense so far?

00:04:22.280 --> 00:04:23.470
&gt;&gt; Yeah.
&gt;&gt; Do I have a good definition

00:04:23.470 --> 00:04:24.130
of an average or?

00:04:24.130 --> 00:04:24.630
&gt;&gt; I think you do

