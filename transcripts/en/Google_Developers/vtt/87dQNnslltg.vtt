WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.833
RONY ROZEN: Imagine
you've released your app

00:00:01.833 --> 00:00:03.990
in the United States,
and it's an instant hit.

00:00:03.990 --> 00:00:06.402
Tons of users, rave
reviews, the works.

00:00:06.402 --> 00:00:07.860
You're now feeling
confident enough

00:00:07.860 --> 00:00:09.620
to release your app worldwide.

00:00:09.620 --> 00:00:11.370
But when you do,
the feedback you get

00:00:11.370 --> 00:00:13.370
isn't nearly as positive
as you expected.

00:00:13.370 --> 00:00:14.610
What gives?

00:00:14.610 --> 00:00:16.660
Join us as we try to get
to the bottom of this

00:00:16.660 --> 00:00:18.538
on this episode of "Route 85."

00:00:18.538 --> 00:00:19.882
[MUSIC PLAYING]

00:00:21.199 --> 00:00:23.740
So what happened, and what could
you have done to prevent it?

00:00:23.740 --> 00:00:25.090
It's quite simple, actually.

00:00:25.090 --> 00:00:27.437
Many users prefer apps
in their native language.

00:00:27.437 --> 00:00:29.770
In order for your app to
succeed in non-English speaking

00:00:29.770 --> 00:00:31.650
countries, you need
to localize it.

00:00:31.650 --> 00:00:33.400
The more languages you
support, the bigger

00:00:33.400 --> 00:00:35.672
your potential target
population gets.

00:00:35.672 --> 00:00:37.630
If you didn't do the
initial prep work required

00:00:37.630 --> 00:00:40.720
for localizing your app from the
start, this may take some time,

00:00:40.720 --> 00:00:42.160
and is prone to errors.

00:00:42.160 --> 00:00:44.385
But if you spend just
a little bit of time

00:00:44.385 --> 00:00:46.510
preparing your app for
localization from the start,

00:00:46.510 --> 00:00:49.180
you'll save yourself a
lot of time in the future.

00:00:49.180 --> 00:00:51.430
Not yet convinced it's
worth the extra effort?

00:00:51.430 --> 00:00:53.530
Let me show you just how
easy it is to add support

00:00:53.530 --> 00:00:57.190
for localization if you plan it
right and do it from the start.

00:00:57.190 --> 00:00:59.020
Let's go over a few key rules.

00:00:59.020 --> 00:01:01.840
One, add NSLocalized
string to any string,

00:01:01.840 --> 00:01:05.050
and I mean any string,
that display to your users.

00:01:05.050 --> 00:01:08.590
And yes, that even includes that
OK button text on that alert.

00:01:08.590 --> 00:01:11.320
This doesn't require you to
provide the actual translations

00:01:11.320 --> 00:01:12.310
in any language.

00:01:12.310 --> 00:01:14.380
Just wrap the text with
NSLocalized string,

00:01:14.380 --> 00:01:16.750
preparing it to be translated
to various languages

00:01:16.750 --> 00:01:18.220
in the future.

00:01:18.220 --> 00:01:21.310
Two, make sure to add support
for localization right

00:01:21.310 --> 00:01:22.060
from the start.

00:01:22.060 --> 00:01:24.400
This will save you time,
and prevent potential errors

00:01:24.400 --> 00:01:26.861
as you move forward with
localizing your app.

00:01:26.861 --> 00:01:28.360
If you don't do
this from the start,

00:01:28.360 --> 00:01:30.443
and then find yourself
wanting to add localization

00:01:30.443 --> 00:01:32.794
to your app, you'll find
yourself going over your code,

00:01:32.794 --> 00:01:34.460
searching for strings,
and wrapping them

00:01:34.460 --> 00:01:36.190
with NSLocalized string.

00:01:36.190 --> 00:01:37.960
There's a relatively
high probability

00:01:37.960 --> 00:01:39.910
of missing something,
or adding localization

00:01:39.910 --> 00:01:42.400
to something that shouldn't be
localized, like a file name,

00:01:42.400 --> 00:01:43.810
for example.

00:01:43.810 --> 00:01:46.450
So save yourself the extra
wasted time down the line

00:01:46.450 --> 00:01:49.140
and localize all your
strings from the start.

00:01:49.140 --> 00:01:52.750
Three, always set text
displayed to the user via code.

00:01:52.750 --> 00:01:54.996
Try to avoid setting the
text in Interface Builder,

00:01:54.996 --> 00:01:56.620
even if it's a text
that doesn't change

00:01:56.620 --> 00:01:58.453
throughout the entire
life cycle of the app,

00:01:58.453 --> 00:02:00.840
like the OK button
text on that alert.

00:02:00.840 --> 00:02:02.620
These texts and
all others should

00:02:02.620 --> 00:02:06.230
be set via code so they
can be easier to localize.

00:02:06.230 --> 00:02:09.039
Four, there is no need to worry
about the actual translations

00:02:09.039 --> 00:02:09.789
at this point.

00:02:09.789 --> 00:02:11.872
And that's what makes
this process so painless.

00:02:11.872 --> 00:02:13.330
You're just preparing
the app to be

00:02:13.330 --> 00:02:14.947
easily localized in the future.

00:02:14.947 --> 00:02:17.530
You'll have enough time to worry
about the actual translations

00:02:17.530 --> 00:02:18.340
later.

00:02:18.340 --> 00:02:19.210
Sounds easy, right?

00:02:19.210 --> 00:02:21.180
Told ya.

00:02:21.180 --> 00:02:24.400
So this is how you used to
set your labels text via code.

00:02:24.400 --> 00:02:26.340
This is how you'll do it now.

00:02:26.340 --> 00:02:27.870
The method takes two values.

00:02:27.870 --> 00:02:29.010
One is the key.

00:02:29.010 --> 00:02:30.750
For now, we'll
simply use the string

00:02:30.750 --> 00:02:33.270
that we actually want to
be presented to the user.

00:02:33.270 --> 00:02:34.680
The other is a comment.

00:02:34.680 --> 00:02:37.350
Many developers tend to
ignore the comment parameter.

00:02:37.350 --> 00:02:40.770
They either leave it blank, or
use the same value as the key.

00:02:40.770 --> 00:02:42.900
This is not the right way
to treat this parameter.

00:02:42.900 --> 00:02:45.330
The truth is that it's almost
as important as the key,

00:02:45.330 --> 00:02:47.580
and you should give it
the attention it deserves.

00:02:47.580 --> 00:02:49.770
The goal of the comment is
to provide the translator

00:02:49.770 --> 00:02:51.750
with all the context he
or she needs in order

00:02:51.750 --> 00:02:54.630
to translate the key string
in the best possible way.

00:02:54.630 --> 00:02:56.310
This comment is all
that the translator

00:02:56.310 --> 00:02:57.768
will know about
the string, and may

00:02:57.768 --> 00:03:00.150
improve the quality of the
localized version of your app.

00:03:00.150 --> 00:03:02.834
It's a shame not
to use it properly.

00:03:02.834 --> 00:03:04.500
When your app is ready
to be translated,

00:03:04.500 --> 00:03:06.510
meaning all of the
strings are set via code

00:03:06.510 --> 00:03:08.400
and use NSLocalized
string, there

00:03:08.400 --> 00:03:11.310
are several ways of generating
the strings file translation.

00:03:11.310 --> 00:03:13.540
We'll use this terminal script.

00:03:13.540 --> 00:03:15.580
This will locate all uses
of NSLocalized string

00:03:15.580 --> 00:03:17.040
throughout the code,
and will generate

00:03:17.040 --> 00:03:18.414
the strings file,
which you'll be

00:03:18.414 --> 00:03:20.400
able to send to the translator.

00:03:20.400 --> 00:03:22.410
The file will be made out
of sections like this,

00:03:22.410 --> 00:03:24.246
one for each relevant string.

00:03:24.246 --> 00:03:25.620
The comment is
actually the value

00:03:25.620 --> 00:03:27.990
you provided for the comment
parameter of NSLocalized

00:03:27.990 --> 00:03:28.920
string.

00:03:28.920 --> 00:03:30.960
As you can see, this
is the only context

00:03:30.960 --> 00:03:33.970
the translator has about where
or when the string is displayed

00:03:33.970 --> 00:03:35.762
so that it may affect
the translation.

00:03:35.762 --> 00:03:38.220
It's even more important that
the string can be interpreted

00:03:38.220 --> 00:03:39.960
in more than one way.

00:03:39.960 --> 00:03:42.240
On the left side of the
equation, you'll see the key.

00:03:42.240 --> 00:03:43.830
Unless you do
anything else, this

00:03:43.830 --> 00:03:45.870
is what will be
displayed to the user.

00:03:45.870 --> 00:03:48.240
The right side of the equation
contains a translation

00:03:48.240 --> 00:03:49.115
for this string.

00:03:49.115 --> 00:03:50.490
This is what the
translator would

00:03:50.490 --> 00:03:52.530
change to the actual
translation of the key

00:03:52.530 --> 00:03:54.332
in the relevant language.

00:03:54.332 --> 00:03:56.040
The file you get back
from the translator

00:03:56.040 --> 00:03:57.580
should contain
translations for all

00:03:57.580 --> 00:03:59.130
of the strings in
the same structure,

00:03:59.130 --> 00:04:01.369
and in only one
language per file.

00:04:01.369 --> 00:04:03.660
If you want to support multiple
languages, which you're

00:04:03.660 --> 00:04:06.180
very encouraged to do,
you need to have one file

00:04:06.180 --> 00:04:07.740
for each supported language.

00:04:07.740 --> 00:04:10.320
So now that you have one
or more localization files

00:04:10.320 --> 00:04:12.820
for the different languages
you want your app to support,

00:04:12.820 --> 00:04:13.920
what do you do with them?

00:04:13.920 --> 00:04:15.260
Good question.

00:04:15.260 --> 00:04:18.839
All localization files should
be named localizable.strings.

00:04:18.839 --> 00:04:20.860
The way we can tell them
apart is by the folder

00:04:20.860 --> 00:04:22.110
they'll be placed in.

00:04:22.110 --> 00:04:25.230
For English, the folder
name will be en.lproj.

00:04:25.230 --> 00:04:28.940
For Spanish, it'll be es,
and for Chinese it'll be zh.

00:04:28.940 --> 00:04:30.529
You probably get
the point by now.

00:04:30.529 --> 00:04:32.820
The folder name should be
the two-letter representation

00:04:32.820 --> 00:04:37.260
of the language you want to
support, followed by dot lproj.

00:04:37.260 --> 00:04:40.346
Testing different localizations
is pretty straightforward.

00:04:40.346 --> 00:04:41.970
Once you added the
various localization

00:04:41.970 --> 00:04:44.380
files and their folders
to your Xcode target,

00:04:44.380 --> 00:04:46.710
run the app on your device,
or on the simulator, if you

00:04:46.710 --> 00:04:48.750
prefer, and change
the device's language

00:04:48.750 --> 00:04:52.200
by going to Settings, General,
Language and Region, iPhone

00:04:52.200 --> 00:04:54.894
Language, and selecting the
language you want to test.

00:04:54.894 --> 00:04:57.560
Just make sure that you remember
how to change the language back

00:04:57.560 --> 00:04:58.800
once you're done testing.

00:04:58.800 --> 00:05:00.870
Reading the menu options
is slightly harder

00:05:00.870 --> 00:05:03.926
when they're written in a
language you don't understand.

00:05:03.926 --> 00:05:06.300
So now you know how to add
basic support for localization

00:05:06.300 --> 00:05:06.990
to your app.

00:05:06.990 --> 00:05:08.970
But what more do you
need to do in order

00:05:08.970 --> 00:05:11.280
to make sure users from
different countries or cultures

00:05:11.280 --> 00:05:12.930
are getting the most
out of your app?

00:05:12.930 --> 00:05:14.280
What if the same word
in English should

00:05:14.280 --> 00:05:16.571
be translated to different
words in different scenarios

00:05:16.571 --> 00:05:18.030
in other languages?

00:05:18.030 --> 00:05:20.310
Are there other ways to
generate the strings files?

00:05:20.310 --> 00:05:21.420
Great questions.

00:05:21.420 --> 00:05:23.340
Join us on the next
episode of "Route 85"

00:05:23.340 --> 00:05:25.260
for more localization
tips and tricks.

00:05:25.260 --> 00:05:26.940
Until then, I'm Rony Rozen.

00:05:26.940 --> 00:05:28.170
Thanks for watching.

00:05:28.170 --> 00:05:31.820
[MUSIC PLAYING]

