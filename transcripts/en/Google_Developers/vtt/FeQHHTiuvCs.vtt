WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.807
[MUSIC PLAYING]

00:00:02.807 --> 00:00:04.140
LAURENCE MORONEY: Hi, everybody.

00:00:04.140 --> 00:00:05.910
Laurence Moroney from
The Developer Show.

00:00:05.910 --> 00:00:08.250
I'm here at the TensorFlow
Developer Summit.

00:00:08.250 --> 00:00:10.320
And it's my honor to
speak with Justine Tunney.

00:00:10.320 --> 00:00:12.335
Justine, you're the Dev
Lead for TensorBoard.

00:00:12.335 --> 00:00:13.210
JUSTINE TUNNEY: I am.

00:00:13.210 --> 00:00:14.440
Thank you for having me.

00:00:14.440 --> 00:00:15.250
LAURENCE MORONEY: Oh,
you're very welcome.

00:00:15.250 --> 00:00:17.041
And, Justine, you've
just done a great talk

00:00:17.041 --> 00:00:19.971
on TensorBoard and on the plugin
ecosystem for TensorBoard.

00:00:19.971 --> 00:00:21.220
It's a very vibrant ecosystem.

00:00:21.220 --> 00:00:21.540
JUSTINE TUNNEY: Oh, yes.

00:00:21.540 --> 00:00:23.414
LAURENCE MORONEY: Could
you tell us about it?

00:00:23.414 --> 00:00:24.706
And the debugger in particular.

00:00:24.706 --> 00:00:25.914
LAURENCE MORONEY: Absolutely.

00:00:25.914 --> 00:00:28.380
JUSTINE TUNNEY: We've had
many amazing plugins developed

00:00:28.380 --> 00:00:31.140
for TensorBoard
over the past year.

00:00:31.140 --> 00:00:33.960
And the featured plugin
was the debugger plugin,

00:00:33.960 --> 00:00:37.020
which sort of gives you
an X-ray into your models,

00:00:37.020 --> 00:00:39.200
in terms of black
box explainability.

00:00:39.200 --> 00:00:42.390
TensorBoard originally
had, I guess

00:00:42.390 --> 00:00:45.840
you could say,
features like scalers

00:00:45.840 --> 00:00:47.680
that were the flashlight.

00:00:47.680 --> 00:00:49.380
This is an X-ray,
because it actually

00:00:49.380 --> 00:00:51.990
allows you to step
and set breakpoints

00:00:51.990 --> 00:00:53.940
interactively in your model.

00:00:53.940 --> 00:00:56.460
And you can literally
watch the tensors

00:00:56.460 --> 00:00:58.260
as they flow in real time.

00:00:58.260 --> 00:00:59.570
It's pretty incredible.

00:00:59.570 --> 00:01:00.450
LAURENCE MORONEY: So
people will believe

00:01:00.450 --> 00:01:01.900
we called it
TensorFlow for a reason

00:01:01.900 --> 00:01:03.240
now, because you can
see them, like you say,

00:01:03.240 --> 00:01:04.115
flowing in real time.

00:01:04.115 --> 00:01:04.680
So, cool.

00:01:04.680 --> 00:01:06.680
JUSTINE TUNNEY: And
speaking of tensors flowing,

00:01:06.680 --> 00:01:10.080
like one of the illuminating
things about this debugger

00:01:10.080 --> 00:01:14.190
plugin is that it operates
on the actual graph.

00:01:14.190 --> 00:01:17.390
A lot of times when we
write code for TensorFlow

00:01:17.390 --> 00:01:19.110
or our machine
learning models, we're

00:01:19.110 --> 00:01:21.960
using really high-level
frameworks and libraries

00:01:21.960 --> 00:01:24.270
like CARIS and Estimator.

00:01:24.270 --> 00:01:28.840
And underneath those frameworks,
and the nice Python code,

00:01:28.840 --> 00:01:30.080
are now Swift code.

00:01:30.080 --> 00:01:33.420
There's the reality of the graph
through which the tensors flow,

00:01:33.420 --> 00:01:35.430
and that's what this
debugger operates on.

00:01:35.430 --> 00:01:38.850
It lets you see the reality
beneath the abstractions when

00:01:38.850 --> 00:01:41.225
you need to, even though we
[INAUDIBLE] the abstractions.

00:01:41.225 --> 00:01:42.724
LAURENCE MORONEY:
That's super cool.

00:01:42.724 --> 00:01:44.910
But just the thought of
like, as a developer,

00:01:44.910 --> 00:01:47.030
I load my data
into a model, train

00:01:47.030 --> 00:01:48.780
my model, that kind
of thing, and then run

00:01:48.780 --> 00:01:50.100
my model against test data.

00:01:50.100 --> 00:01:51.720
And you have that
whole black box.

00:01:51.720 --> 00:01:54.220
I couldn't really figure out
if I'd optimized my model,

00:01:54.220 --> 00:01:55.460
but you're saying I can--

00:01:55.460 --> 00:01:57.660
JUSTINE TUNNEY: Well,
speaking of optimizing models,

00:01:57.660 --> 00:02:00.120
like one interesting
thing is there is now

00:02:00.120 --> 00:02:02.790
a supervised training
plugin that was contributed

00:02:02.790 --> 00:02:04.849
by Francois Luus at IBM.

00:02:04.849 --> 00:02:05.890
LAURENCE MORONEY: Ah, OK.

00:02:05.890 --> 00:02:08.330
JUSTINE TUNNEY: And this is
part of the embedded projector

00:02:08.330 --> 00:02:08.829
[INAUDIBLE].

00:02:08.829 --> 00:02:10.800
He sent us some poll
requests, because we

00:02:10.800 --> 00:02:13.050
do our development in the open.

00:02:13.050 --> 00:02:15.930
And what it allows you
to do is interactively

00:02:15.930 --> 00:02:18.570
assign labels to your data set.

00:02:18.570 --> 00:02:22.620
And you allow the
algorithms, such as t-SNE,

00:02:22.620 --> 00:02:25.174
to sort of reveal the
structure of your data.

00:02:25.174 --> 00:02:26.090
LAURENCE MORONEY: Wow.

00:02:26.090 --> 00:02:28.423
JUSTINE TUNNEY: And you edit
the labels as you go along.

00:02:28.423 --> 00:02:29.170
It's pretty cool.

00:02:29.170 --> 00:02:30.810
LAURENCE MORONEY: What
was that called again?

00:02:30.810 --> 00:02:32.460
JUSTINE TUNNEY: You
can search for, I

00:02:32.460 --> 00:02:35.830
believe it was called supervised
training with TensorBoard.

00:02:35.830 --> 00:02:38.110
There's an IBM blog
post that explains it.

00:02:38.110 --> 00:02:40.747
It's part of TensorBoard's
embedding projector plugin.

00:02:40.747 --> 00:02:43.080
LAURENCE MORONEY: So we'll
put a link in the description

00:02:43.080 --> 00:02:45.114
below for people
watching it on YouTube.

00:02:45.114 --> 00:02:46.530
So you've mentioned
the debugging.

00:02:46.530 --> 00:02:47.580
You've mentioned
this other plugin.

00:02:47.580 --> 00:02:49.977
There's a massive, vibrant
ecosystem, right, of plugins.

00:02:49.977 --> 00:02:51.310
JUSTINE TUNNEY: Indeed there is.

00:02:51.310 --> 00:02:54.330
And, in many ways, the role
of the TensorBoard team

00:02:54.330 --> 00:02:56.820
and my latest
[INAUDIBLE] developer

00:02:56.820 --> 00:03:01.050
is to provide a really
sturdy, solid foundation

00:03:01.050 --> 00:03:03.810
for all these contributions
from many teams

00:03:03.810 --> 00:03:08.040
and a few companies with
which we've been entrusted.

00:03:08.040 --> 00:03:12.120
For example, we've got a
rock-solid build foundation,

00:03:12.120 --> 00:03:14.500
where you can actually
build your code in China,

00:03:14.500 --> 00:03:16.590
America, any other nation.

00:03:16.590 --> 00:03:18.180
And we do a lot of things.

00:03:18.180 --> 00:03:22.650
We actually pack like more
than 10 web applications

00:03:22.650 --> 00:03:25.244
into a tiny two-megabyte
package that

00:03:25.244 --> 00:03:27.660
doesn't have a whole lot of
dependencies, and most of them

00:03:27.660 --> 00:03:29.700
are sort of schlepped
into the package.

00:03:29.700 --> 00:03:30.690
LAURENCE MORONEY:
Usually the small ones

00:03:30.690 --> 00:03:31.870
have a lot of dependencies.

00:03:31.870 --> 00:03:32.640
So this is nice.

00:03:32.640 --> 00:03:33.598
JUSTINE TUNNEY: I know.

00:03:33.598 --> 00:03:35.940
And when I first joined
the TensorBoard team,

00:03:35.940 --> 00:03:39.747
we actually had, in terms of our
tooling, over 900 dependencies.

00:03:39.747 --> 00:03:40.830
LAURENCE MORONEY: Oh, wow.

00:03:40.830 --> 00:03:41.770
JUSTINE TUNNEY:
Yeah, and I managed

00:03:41.770 --> 00:03:43.200
to pare that down
somewhat, thanks

00:03:43.200 --> 00:03:45.030
to the benefits of Bazel.

00:03:45.030 --> 00:03:45.420
LAURENCE MORONEY:
That would just

00:03:45.420 --> 00:03:48.045
take a long time to compile with
all those dependencies, right?

00:03:48.045 --> 00:03:50.980
JUSTINE TUNNEY: No, TensorBoard
actually compiles very fast.

00:03:50.980 --> 00:03:52.230
LAURENCE MORONEY: Oh, it does?

00:03:52.230 --> 00:03:54.271
JUSTINE TUNNEY: Like, you
can compile TensorBoard

00:03:54.271 --> 00:03:55.860
and download all
its dependencies

00:03:55.860 --> 00:03:58.150
in maybe five to
10 seconds or so.

00:03:58.150 --> 00:03:59.400
LAURENCE MORONEY: Oh, wow, OK.

00:03:59.400 --> 00:04:01.358
JUSTINE TUNNEY: Yeah,
it's not like TensorFlow,

00:04:01.358 --> 00:04:04.230
where it takes 30 minutes.

00:04:04.230 --> 00:04:07.690
Speaking of which, if you've
got a 96 core Cloud VM,

00:04:07.690 --> 00:04:08.822
it takes five.

00:04:08.822 --> 00:04:10.780
LAURENCE MORONEY: Well,
it's worth waiting for.

00:04:10.780 --> 00:04:11.850
JUSTINE TUNNEY: It is.

00:04:11.850 --> 00:04:15.135
LAURENCE MORONEY: So, say I
want to be a plugin developer,

00:04:15.135 --> 00:04:17.117
and I want to start
building my own plugin.

00:04:17.117 --> 00:04:19.200
I've come up with a great
idea for great scenario.

00:04:19.200 --> 00:04:20.709
How would I get
started doing this?

00:04:20.709 --> 00:04:22.750
JUSTINE TUNNEY: Well, the
best way to get started

00:04:22.750 --> 00:04:26.990
is we have a repo
call on GitHub called

00:04:26.990 --> 00:04:31.170
TensorFlow/TensorBoard
plugin example.

00:04:31.170 --> 00:04:33.840
And this is an
independent repository.

00:04:33.840 --> 00:04:37.280
It does not vendor
TensorBoard or TensorFlow.

00:04:37.280 --> 00:04:41.460
And it basically
shows you how you

00:04:41.460 --> 00:04:44.270
can configure Bazel to
do a custom static build

00:04:44.270 --> 00:04:46.530
of TensorBoard, where
you can do whatever

00:04:46.530 --> 00:04:48.222
you want in a separate repo.

00:04:48.222 --> 00:04:49.430
LAURENCE MORONEY: Nice, nice.

00:04:49.430 --> 00:04:51.680
JUSTINE TUNNEY: So this is
basically our escape hatch.

00:04:54.140 --> 00:04:57.000
Because with the security and
various other requirements

00:04:57.000 --> 00:05:01.350
of TensorBoard, sometimes
merging things upstream cannot

00:05:01.350 --> 00:05:03.030
always be approved.

00:05:03.030 --> 00:05:05.450
But we provide this alternative.

00:05:05.450 --> 00:05:07.460
But we are, of course,
open and welcome

00:05:07.460 --> 00:05:09.980
to accepting contributions
on our main GitHub.

00:05:09.980 --> 00:05:15.350
And you'll notice inside
our main GitHub repository,

00:05:15.350 --> 00:05:17.600
there's a list of
plugins, and each one

00:05:17.600 --> 00:05:19.676
has a README with
documentation on how it works.

00:05:19.676 --> 00:05:21.300
LAURENCE MORONEY:
Oh, perfect, perfect.

00:05:21.300 --> 00:05:23.434
So thanks, everybody,
for watching this episode

00:05:23.434 --> 00:05:24.350
of The Developer Show.

00:05:24.350 --> 00:05:26.100
Don't forget to check out
the description below,

00:05:26.100 --> 00:05:27.740
and we'll put all the links
that we spoke about today.

00:05:27.740 --> 00:05:28.994
And thanks so much, Justine.

00:05:28.994 --> 00:05:30.660
JUSTINE TUNNEY: Thank
you for having me.

00:05:30.660 --> 00:05:32.035
LAURENCE MORONEY:
You're welcome.

00:05:32.035 --> 00:05:35.260
[MUSIC PLAYING]

