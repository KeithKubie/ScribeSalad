WEBVTT
Kind: captions
Language: en

00:00:00.920 --> 00:00:01.920
FLORIAN LOITSCH: Thanks.

00:00:01.920 --> 00:00:04.050
So my name is
Florian, and I want

00:00:04.050 --> 00:00:07.500
to present you how to write
Google Apps Scripts in Dart.

00:00:07.500 --> 00:00:10.802
So I have only two slides,
and one of them was the title.

00:00:10.802 --> 00:00:12.760
Mainly it's because
I want to make

00:00:12.760 --> 00:00:15.010
sure you understand the
difference between Google Apps

00:00:15.010 --> 00:00:17.060
Script and Google APIs.

00:00:17.060 --> 00:00:18.760
So one of them, the
Google App Scripts,

00:00:18.760 --> 00:00:20.280
is the scripting
language you use

00:00:20.280 --> 00:00:23.970
or the scripts you use to
control Google Drive, Gmail,

00:00:23.970 --> 00:00:27.180
spreadsheets, docs, and
so on, and Google APIs is

00:00:27.180 --> 00:00:30.440
a RESTful service where
you can access many--

00:00:30.440 --> 00:00:33.660
a RESTful API where you can
access many, many more Google

00:00:33.660 --> 00:00:35.550
services.

00:00:35.550 --> 00:00:37.780
I use both in this talk.

00:00:37.780 --> 00:00:40.970
So Google APIs, that's the
REST, and Google Apps Scripts,

00:00:40.970 --> 00:00:45.600
that's controlling
the docs, and so on.

00:00:45.600 --> 00:00:49.620
So what-- no,
that's not the one.

00:00:53.430 --> 00:00:55.080
So what is a Google Apps Script?

00:00:55.080 --> 00:00:57.730
So here I have a spreadsheet.

00:00:57.730 --> 00:01:01.980
And if we go to
Tools, Script Editor,

00:01:01.980 --> 00:01:04.400
we can write a
small script-- let's

00:01:04.400 --> 00:01:12.416
say, a spreadsheet app that gets
UI and dot alert "Hello world."

00:01:12.416 --> 00:01:13.950
We save it.

00:01:13.950 --> 00:01:16.290
This is, somewhere,
the Run button.

00:01:16.290 --> 00:01:17.790
Run.

00:01:17.790 --> 00:01:20.520
And we have a hello
world on the spreadsheet.

00:01:20.520 --> 00:01:22.480
I mean, this is the
easiest thing to do.

00:01:22.480 --> 00:01:24.021
So there are two
things we don't like

00:01:24.021 --> 00:01:27.270
about the way this is written
with the Google Apps Editor.

00:01:27.270 --> 00:01:29.070
One is it's JavaScript--

00:01:29.070 --> 00:01:29.910
[AUDIENCE LAUGHING]

00:01:29.910 --> 00:01:31.380
--and the second one is--

00:01:31.380 --> 00:01:33.780
so, no, no, it's not Dart.

00:01:33.780 --> 00:01:38.850
And the second one is it's not
using the editor that we like,

00:01:38.850 --> 00:01:40.790
and it's not using
Git, and so on.

00:01:40.790 --> 00:01:45.729
So for the first
thing, not using Dart,

00:01:45.729 --> 00:01:47.520
we can actually make
that work quite nicely

00:01:47.520 --> 00:01:51.120
by using Dart-to-JavaScript
and compiling to JavaScript.

00:01:51.120 --> 00:01:55.180
So here I have a demo ready
where it's just compiled

00:01:55.180 --> 00:01:57.270
with Dart-to-JavaScript.

00:01:57.270 --> 00:01:59.682
And the important
thing here is that when

00:01:59.682 --> 00:02:01.140
you compile for
Google Apps Script,

00:02:01.140 --> 00:02:03.450
you need to use the
CSP flag, but once you

00:02:03.450 --> 00:02:07.200
have that and a few other
things, it kind of works.

00:02:07.200 --> 00:02:10.229
And now, the second part we want
is we want to take that code

00:02:10.229 --> 00:02:13.690
and actually get
this ready for--

00:02:13.690 --> 00:02:16.260
get this deployed
on our scripts.

00:02:16.260 --> 00:02:22.620
And for that, I wrote another
app that watches a specific

00:02:22.620 --> 00:02:27.370
directory-- so in this case,
the file that it just compiled--

00:02:27.370 --> 00:02:30.510
then automatically uploads
it using Google APIs--

00:02:30.510 --> 00:02:34.560
so we just use the thing
to connect to the drive--

00:02:34.560 --> 00:02:40.620
and then creates a script
on our Google Drive.

00:02:40.620 --> 00:02:45.175
So once we do that and we load--

00:02:45.175 --> 00:02:48.330
I should load it like this--

00:02:48.330 --> 00:02:51.110
and we load the
apps, you can see

00:02:51.110 --> 00:02:54.840
there is an add-ons up behind
the work in this add-ons

00:02:54.840 --> 00:02:57.240
in Help, and once it
has loaded enough,

00:02:57.240 --> 00:03:01.350
it actually adds now a new
menu item that we created.

00:03:01.350 --> 00:03:05.940
And when I run this one, we
now run the Dart Hello World.

00:03:05.940 --> 00:03:08.760
And I can show you the
actual code for that.

00:03:08.760 --> 00:03:11.490
It's here, down there.

00:03:11.490 --> 00:03:14.500
And if I changed it, let's
say, "Hello Dartconf."

00:03:14.500 --> 00:03:17.430
Save it.

00:03:17.430 --> 00:03:20.180
Recompile it.

00:03:20.180 --> 00:03:23.660
And watch in the background
the script that uploads.

00:03:23.660 --> 00:03:25.160
Once it's compiled,
it automatically

00:03:25.160 --> 00:03:28.360
detects that it has been
changed, uploads it again.

00:03:28.360 --> 00:03:33.300
And if you now go back
to the spreadsheet,

00:03:33.300 --> 00:03:36.990
we can now run that thing again,
and it's now "Hello Dartconf."

00:03:36.990 --> 00:03:39.894
[APPLAUSE]

00:03:42.314 --> 00:03:43.770
Thank you.

00:03:43.770 --> 00:03:46.247
So pretty much, that's
the most important thing

00:03:46.247 --> 00:03:47.580
about the Google Apps scripting.

00:03:47.580 --> 00:03:49.140
It's a very nice
workflow and so on.

00:03:49.140 --> 00:03:51.360
But I have prepared
two more demos.

00:03:51.360 --> 00:03:57.470
So if we go to the demo 2--

00:03:57.470 --> 00:04:03.360
and again, in the background,
I should show this.

00:04:03.360 --> 00:04:05.470
If I compile now, it
will automatically

00:04:05.470 --> 00:04:07.850
upload in the background--

00:04:07.850 --> 00:04:09.490
uploading done.

00:04:09.490 --> 00:04:10.550
And if we now--

00:04:10.550 --> 00:04:15.190
there it is-- run it
again, we should get--

00:04:15.190 --> 00:04:16.399
this is a little bit bigger.

00:04:16.399 --> 00:04:19.225
This is now a script that just
modified the columns, and so

00:04:19.225 --> 00:04:20.600
on, and set the
background color.

00:04:20.600 --> 00:04:23.408
[APPLAUSE]

00:04:27.630 --> 00:04:31.830
And the last demo
just shows that it's

00:04:31.830 --> 00:04:35.300
not just Google spreadsheets
that we can control.

00:04:35.300 --> 00:04:39.600
We can also modify and
create Google Docs.

00:04:39.600 --> 00:04:41.280
But let's see that.

00:04:41.280 --> 00:04:44.560
So the first thing it's going
to do it will show as a sidebar.

00:04:44.560 --> 00:04:46.230
So you can write sidebars.

00:04:46.230 --> 00:04:49.860
Those are actually HTML, so
there's a little bit of HTML,

00:04:49.860 --> 00:04:50.890
and so on.

00:04:50.890 --> 00:04:55.070
So if I now select or
some other things--

00:04:55.070 --> 00:04:58.440
some old dialogs--
so this one now

00:04:58.440 --> 00:05:00.390
connects back to the server.

00:05:00.390 --> 00:05:04.500
Then there's a script that runs,
which is, again, Dart script.

00:05:04.500 --> 00:05:06.690
In this case, I
created a document,

00:05:06.690 --> 00:05:11.820
and that document now shows us
that we also have a document--

00:05:11.820 --> 00:05:14.160
Google Docs that can be
controlled from Dart.

00:05:14.160 --> 00:05:17.902
And with that, I
finished my talk.

00:05:17.902 --> 00:05:18.402
Thank you.

00:05:18.402 --> 00:05:21.348
[APPLAUSE]

00:05:23.803 --> 00:05:25.720
Oh yes-- it's not
open source yet,

00:05:25.720 --> 00:05:27.867
but I will try to
make that happen.

00:05:27.867 --> 00:05:29.420
SPEAKER 1: That's great.

00:05:29.420 --> 00:05:30.820
Thanks.

