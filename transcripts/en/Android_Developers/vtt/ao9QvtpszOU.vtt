WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.794
[MUSIC PLAYING]

00:00:01.794 --> 00:00:03.210
RAHUL GANJDO:
Zomato first started

00:00:03.210 --> 00:00:06.840
as an app which lets you
browse digital menus.

00:00:06.840 --> 00:00:08.920
Now, we are this big
food tech company that

00:00:08.920 --> 00:00:11.250
is operational in 24 countries.

00:00:11.250 --> 00:00:14.040
More than 150 million users
visit the platform every month.

00:00:14.040 --> 00:00:16.360
We are available
in 10 languages.

00:00:16.360 --> 00:00:17.820
And on the delivery
side, we have

00:00:17.820 --> 00:00:20.760
a fleet of around
60,000 delivery drivers.

00:00:20.760 --> 00:00:22.860
If you want to discover
great places to go out,

00:00:22.860 --> 00:00:25.780
if you want to order in, if
you want to reserve tables,

00:00:25.780 --> 00:00:28.680
and if you just want to browse
food, you can use Zomato.

00:00:28.680 --> 00:00:30.091
Zomato serves a
lot of use cases,

00:00:30.091 --> 00:00:32.340
and that makes it challenging
for the development team

00:00:32.340 --> 00:00:34.722
to put it in a coherent
way inside the app.

00:00:34.722 --> 00:00:36.930
PRATEEK SHARMA: After all
the buzz in the development

00:00:36.930 --> 00:00:39.360
community about
Kotlin, I was intrigued

00:00:39.360 --> 00:00:43.900
by how Kotlin was able to uphold
the object-oriented paradigm

00:00:43.900 --> 00:00:46.170
and solve many of the
architectural flaws

00:00:46.170 --> 00:00:48.330
in the compiled time itself.

00:00:48.330 --> 00:00:50.630
I almost instantly
recognized that Kotlin

00:00:50.630 --> 00:00:54.120
will enable me to develop
more architecturally-sound

00:00:54.120 --> 00:00:56.940
applications.

00:00:56.940 --> 00:00:58.820
Kotlin provides us
with null-safety

00:00:58.820 --> 00:01:00.320
at compile-time itself.

00:01:00.320 --> 00:01:03.686
This is one of the most
used features by our team.

00:01:03.686 --> 00:01:06.140
If we would convert a
Java class to Kotlin,

00:01:06.140 --> 00:01:10.630
there will be about 15% to 20%
decrease in the line of code.

00:01:10.630 --> 00:01:12.140
But if you take
data classes, there

00:01:12.140 --> 00:01:15.620
is a drastic improvement
of about 55% decrease

00:01:15.620 --> 00:01:18.020
in the lines of code.

00:01:18.020 --> 00:01:20.600
Switching to Kotlin is
efficient and very exciting.

00:01:20.600 --> 00:01:23.330
At Zomato, now, almost
every new feature

00:01:23.330 --> 00:01:25.760
is being developed in Kotlin.

00:01:25.760 --> 00:01:28.640
We, as Android developers, have
not experienced the functional

00:01:28.640 --> 00:01:32.050
paradigm like the
developers of JavaScript,

00:01:32.050 --> 00:01:34.510
so Kotlin providing a
function-oriented style

00:01:34.510 --> 00:01:37.930
of coding was a
very good feature.

00:01:37.930 --> 00:01:39.460
Often a use case
comes when we are

00:01:39.460 --> 00:01:42.130
using code of third
party libraries, where

00:01:42.130 --> 00:01:44.830
we want the class to
have another function.

00:01:44.830 --> 00:01:47.350
Kotlin makes this
hassle-free by the support

00:01:47.350 --> 00:01:49.180
of extension functions.

00:01:49.180 --> 00:01:52.650
Almost all the new SDKs and
APIs that Google is releasing,

00:01:52.650 --> 00:01:55.022
right now, has Kotlin support.

00:01:55.022 --> 00:01:57.810
On top of that, the third
party library developers

00:01:57.810 --> 00:02:00.505
are also adding support of
Kotlin, which is increasing

00:02:00.505 --> 00:02:02.626
our Kotlin experience.

00:02:02.626 --> 00:02:05.820
RAHUL GANJDO: Zomato is rated
4.3 on the Google Play Store,

00:02:05.820 --> 00:02:08.070
and we've been lucky with
the support of the ecosystem

00:02:08.070 --> 00:02:09.365
that Android provides.

00:02:09.365 --> 00:02:10.740
PRATEEK SHARMA:
I would recommend

00:02:10.740 --> 00:02:14.700
switching to Kotlin because
its interoperability with Java.

00:02:14.700 --> 00:02:16.890
With recent updates,
Android Studio

00:02:16.890 --> 00:02:19.310
has drastically
improved Kotlin support.

00:02:19.310 --> 00:02:20.730
It is almost frictionless.

00:02:20.730 --> 00:02:24.080
[MUSIC PLAYING]

