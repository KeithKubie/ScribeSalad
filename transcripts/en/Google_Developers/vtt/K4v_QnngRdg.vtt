WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:05.124
[MUSIC PLAYING]

00:00:05.124 --> 00:00:06.540
ILYA GELFENBEYN:
Today, we will be

00:00:06.540 --> 00:00:09.480
talking about
designing, deploying

00:00:09.480 --> 00:00:14.590
your agents across platforms,
and then analyzing them.

00:00:14.590 --> 00:00:15.690
So my name is Ilya.

00:00:15.690 --> 00:00:18.310
I'm the Product Lead of API.AI.

00:00:18.310 --> 00:00:21.870
API.AI is Google's platform for
building conversational apps

00:00:21.870 --> 00:00:26.370
or agents for Google Assistant,
Google Home, and also

00:00:26.370 --> 00:00:29.730
all the other platforms
through API or integration.

00:00:29.730 --> 00:00:33.540
So you can also build
a chatbot with it,

00:00:33.540 --> 00:00:40.070
or add voice to your robot
car, or any other home device.

00:00:40.070 --> 00:00:42.930
In a few minutes,
I will show you

00:00:42.930 --> 00:00:45.090
how to build a conversational
agent from scratch

00:00:45.090 --> 00:00:46.830
and deploy it across platforms.

00:00:46.830 --> 00:00:50.724
And Ofer will tell you how to
analyze it and optimize it.

00:00:50.724 --> 00:00:51.515
OFER RONEN: Thanks.

00:00:51.515 --> 00:00:54.450
So I am Ofer, the
Product Lead on Chatbase.

00:00:54.450 --> 00:00:56.280
It's an up-and-coming
service that

00:00:56.280 --> 00:00:59.760
helps developers
analyze and optimize

00:00:59.760 --> 00:01:02.100
conversational experiences.

00:01:02.100 --> 00:01:04.560
And so, today, I'm
going to go over

00:01:04.560 --> 00:01:09.390
how Chatbase can help
developers with key metrics

00:01:09.390 --> 00:01:12.780
and workflows that
can help you create

00:01:12.780 --> 00:01:16.460
engaging and high-converting
conversational agents.

00:01:16.460 --> 00:01:17.360
ILYA GELFENBEYN: OK.

00:01:17.360 --> 00:01:20.520
But let's first
think why would you

00:01:20.520 --> 00:01:22.860
start building a
conversational agent.

00:01:22.860 --> 00:01:27.570
So let's say you are building
a online bagel ordering

00:01:27.570 --> 00:01:30.240
app or service.

00:01:30.240 --> 00:01:33.960
So now, what you will
be actually caring about

00:01:33.960 --> 00:01:37.710
is to get a really great
app for Android and iPhone,

00:01:37.710 --> 00:01:40.290
and probably a popular
web service for it.

00:01:40.290 --> 00:01:43.050
But it seems like it's
not enough anymore.

00:01:43.050 --> 00:01:45.990
So as you can see,
analysts predict

00:01:45.990 --> 00:01:49.200
that voice interfaces and
natural language interfaces

00:01:49.200 --> 00:01:51.600
will be extremely popular.

00:01:51.600 --> 00:01:56.820
So by 2020, more than 30% of
all the web browsing sessions

00:01:56.820 --> 00:01:58.370
will be done without a screen.

00:01:58.370 --> 00:02:02.330
Meaning that while
users will be asking

00:02:02.330 --> 00:02:07.440
their requests through home
devices or cars, or assistance.

00:02:07.440 --> 00:02:12.570
More than 50% of all the web
searches will be done by voice.

00:02:12.570 --> 00:02:16.830
So through, again, mobile
assistants or some other apps.

00:02:16.830 --> 00:02:20.460
And more than 85% of all
the customer interactions

00:02:20.460 --> 00:02:22.830
with brands will be
done without a human,

00:02:22.830 --> 00:02:24.970
through chatbots
or anything else.

00:02:24.970 --> 00:02:28.020
So basically, your
users will expect

00:02:28.020 --> 00:02:30.360
you to be able to
provide service

00:02:30.360 --> 00:02:33.150
through a conversational
agent and not just

00:02:33.150 --> 00:02:37.120
a mobile app or a web service.

00:02:37.120 --> 00:02:40.710
So this is why we are
working on API.AI.

00:02:40.710 --> 00:02:44.100
So what is important about it?

00:02:44.100 --> 00:02:47.010
It is an extremely
popular platform

00:02:47.010 --> 00:02:50.070
to build conversational agents
across different platforms.

00:02:50.070 --> 00:02:52.740
We have more than
150,000 developers

00:02:52.740 --> 00:02:54.470
working with the platform.

00:02:54.470 --> 00:02:56.860
It supports 14
different languages.

00:02:56.860 --> 00:03:00.000
So you can now start building
your agent for English,

00:03:00.000 --> 00:03:04.650
Spanish, Portuguese, French,
Chinese, Korean, Japanese.

00:03:04.650 --> 00:03:08.010
And we are adding new
languages constantly.

00:03:08.010 --> 00:03:10.290
And what is extremely
important about it,

00:03:10.290 --> 00:03:12.960
as I already mentioned,
it is cross-platform.

00:03:12.960 --> 00:03:15.900
So you can build your
agent in one place

00:03:15.900 --> 00:03:19.090
and then deploy it across
multiple platforms.

00:03:19.090 --> 00:03:20.920
So why is it important?

00:03:20.920 --> 00:03:24.780
So one thing which is extremely
important is, as you know,

00:03:24.780 --> 00:03:29.250
while there are multiple
different platforms out there

00:03:29.250 --> 00:03:32.220
which have audience,
so you may have

00:03:32.220 --> 00:03:36.600
like a Facebook bot
or a home device

00:03:36.600 --> 00:03:38.550
or some kind of an assistant.

00:03:38.550 --> 00:03:41.250
And let's say if
you are an agent

00:03:41.250 --> 00:03:43.470
and you service to
your product, it

00:03:43.470 --> 00:03:49.620
may be extremely difficult
to update your agent across

00:03:49.620 --> 00:03:51.750
for each individual
platform, so it makes sense

00:03:51.750 --> 00:03:53.970
to have everything in one place.

00:03:53.970 --> 00:03:57.930
Second, and probably the most
important thing is training.

00:03:57.930 --> 00:04:02.400
And I mean both manual
training and machine learning.

00:04:02.400 --> 00:04:05.480
So if we talk about
manual training,

00:04:05.480 --> 00:04:07.844
let's say, well, you
have your agent deployed

00:04:07.844 --> 00:04:09.510
across different
platforms and while you

00:04:09.510 --> 00:04:14.010
get some logs from real users,
and you are analyzing them

00:04:14.010 --> 00:04:16.529
and optimizing your agent.

00:04:16.529 --> 00:04:20.130
So having it all in one
place makes a lot of sense

00:04:20.130 --> 00:04:22.749
because if you
update something, it

00:04:22.749 --> 00:04:24.540
will be available across
all the platforms.

00:04:24.540 --> 00:04:26.220
So basically all the
platforms benefit

00:04:26.220 --> 00:04:28.540
from all the
interactions with you,

00:04:28.540 --> 00:04:31.580
as your agent or product has.

00:04:31.580 --> 00:04:35.260
Another one is related
to machine learning.

00:04:35.260 --> 00:04:38.910
So in order to train a really
good machine learning model

00:04:38.910 --> 00:04:42.300
to understand what users
actually want and support

00:04:42.300 --> 00:04:44.400
a meaningful
conversation, you have

00:04:44.400 --> 00:04:48.000
to provide it with
real life data,

00:04:48.000 --> 00:04:51.030
like logs that you mark up.

00:04:51.030 --> 00:04:55.860
And if you have the data in
different several platforms,

00:04:55.860 --> 00:04:58.520
it may be much less
beneficial than having

00:04:58.520 --> 00:04:59.560
everything in one place.

00:04:59.560 --> 00:05:02.190
So building a very
sophisticated training

00:05:02.190 --> 00:05:06.190
set for your agent
to better understand.

00:05:06.190 --> 00:05:11.620
And third, while natural
language is unique as a UX

00:05:11.620 --> 00:05:15.520
media because you cannot really
control what users will be

00:05:15.520 --> 00:05:19.160
asking about, so you cannot
tell that my service, well,

00:05:19.160 --> 00:05:22.810
my chatbot implementation
of service supports these

00:05:22.810 --> 00:05:27.070
commands, and my home
implementation supports those.

00:05:27.070 --> 00:05:35.440
So users are not limited by any
sets of commands, or anything,

00:05:35.440 --> 00:05:37.360
so they can ask
about everything.

00:05:37.360 --> 00:05:40.930
So you really want to
have a consistent UX

00:05:40.930 --> 00:05:42.680
across all the platforms.

00:05:42.680 --> 00:05:44.320
But let's switch to
the demo and I will

00:05:44.320 --> 00:05:48.950
show how to build the agent.

00:05:48.950 --> 00:05:51.500
So this is the
developer console.

00:05:51.500 --> 00:05:54.640
So this is where you get when
you register with API.AI.

00:05:54.640 --> 00:05:57.610
I just created an empty agent.

00:05:57.610 --> 00:06:00.820
And I will show how to build
your bagel ordering app

00:06:00.820 --> 00:06:01.910
from scratch.

00:06:01.910 --> 00:06:05.230
So as you can see, well,
there are two main concepts

00:06:05.230 --> 00:06:06.190
in API.AI.

00:06:06.190 --> 00:06:08.650
One is Intents, and
another one is Entities.

00:06:08.650 --> 00:06:11.810
So Intents are types of actions
that you want to support.

00:06:11.810 --> 00:06:14.980
So what my user
may ask me about.

00:06:14.980 --> 00:06:16.690
And Entities are
objects that are

00:06:16.690 --> 00:06:18.590
being used in these Intents.

00:06:18.590 --> 00:06:20.320
So as you can see,
there are a couple

00:06:20.320 --> 00:06:22.060
of intents that are pre-build.

00:06:22.060 --> 00:06:23.410
One is a Fallback Intent.

00:06:23.410 --> 00:06:26.500
So if system doesn't
understand, it

00:06:26.500 --> 00:06:28.120
will trigger Fallback
Intent, so it

00:06:28.120 --> 00:06:29.890
can say, "Well, I
don't understand,

00:06:29.890 --> 00:06:30.790
can you rephrase it?"

00:06:30.790 --> 00:06:31.748
Or something like this.

00:06:31.748 --> 00:06:33.250
And you can obviously
customize it.

00:06:33.250 --> 00:06:34.650
Second one is Welcome Intent.

00:06:34.650 --> 00:06:37.750
So this one is triggered
when you start your agent

00:06:37.750 --> 00:06:40.120
from Google Assistant
or Facebook bot,

00:06:40.120 --> 00:06:42.290
or like Slack bot
or something else.

00:06:42.290 --> 00:06:44.950
So it also has some
pre-built responses.

00:06:44.950 --> 00:06:48.760
I can actually update and
it will say, "Greetings,

00:06:48.760 --> 00:06:51.940
I am your bagel agent."

00:06:54.760 --> 00:06:56.560
So I save it.

00:06:56.560 --> 00:07:00.010
And then lets just create
our first Custom Intent.

00:07:00.010 --> 00:07:04.180
So for bagel ordering service,
it will be bagel ordering.

00:07:04.180 --> 00:07:05.890
So I can tell something like--

00:07:05.890 --> 00:07:10.000
well, so here I am defining how
my end users may address it.

00:07:10.000 --> 00:07:14.540
So My end user might
just say, "I'm hungry."

00:07:14.540 --> 00:07:22.580
or something like "Get
me a bagel by 2 PM."

00:07:22.580 --> 00:07:25.200
And as you can see, the dual
name mintage recognition.

00:07:25.200 --> 00:07:27.740
So we mark up 2 PM as time.

00:07:27.740 --> 00:07:30.930
Or let's say, I can
say something like,

00:07:30.930 --> 00:07:40.760
"I'd like to order bagels
to 123 East street."

00:07:40.760 --> 00:07:43.110
And it understands
it is an address.

00:07:43.110 --> 00:07:48.780
And, let's say, we'll say
something like, "Why don't we

00:07:48.780 --> 00:07:50.915
order some bagels?"

00:07:54.580 --> 00:07:56.410
So if my user says
something like this,

00:07:56.410 --> 00:07:59.350
we will return an action order.

00:07:59.350 --> 00:08:03.100
And it will also return
the result parameters.

00:08:03.100 --> 00:08:07.660
And we will-- let's call
it Bagel Order Intent.

00:08:07.660 --> 00:08:09.870
And we will reply with
something like, "OK.

00:08:12.480 --> 00:08:12.980
Ordered."

00:08:15.610 --> 00:08:17.550
And I save it.

00:08:17.550 --> 00:08:20.830
So as you can see here, I'm
providing a default response

00:08:20.830 --> 00:08:21.330
here.

00:08:21.330 --> 00:08:26.360
So if my user will ask to do
it, it will just respond, "OK.

00:08:26.360 --> 00:08:27.150
Ordered."

00:08:27.150 --> 00:08:29.940
So in real life, you would want
to connect it to your business

00:08:29.940 --> 00:08:31.860
logic, to your service.

00:08:31.860 --> 00:08:33.929
So you can implement
a Fulfillment.

00:08:33.929 --> 00:08:37.620
So you can set up
which service to call.

00:08:37.620 --> 00:08:39.580
And so now, we can try it.

00:08:39.580 --> 00:08:43.375
So I can say something
basic like, "I'm so hungry."

00:08:48.930 --> 00:08:53.790
What happens is, it says,
OK, so this is the JSON

00:08:53.790 --> 00:08:55.140
that the operator will get.

00:08:55.140 --> 00:08:59.040
So user asked "I'm so hungry."

00:08:59.040 --> 00:09:01.710
and you return an Action Order
and there are no parameters

00:09:01.710 --> 00:09:02.474
here.

00:09:02.474 --> 00:09:03.640
Or I can try something else.

00:09:03.640 --> 00:09:12.930
I can say something like,
"I want to buy a bagel."

00:09:12.930 --> 00:09:14.580
again, it understands it.

00:09:14.580 --> 00:09:16.590
And what is important
here, what's

00:09:16.590 --> 00:09:20.490
the first magic here is that,
well, the phrase that I'm using

00:09:20.490 --> 00:09:24.420
does not really look
like the phrases

00:09:24.420 --> 00:09:25.870
that I was using in the demo.

00:09:25.870 --> 00:09:28.620
So the system, the
Intent recognition part

00:09:28.620 --> 00:09:32.430
will try to understand and try
to classify anything that is

00:09:32.430 --> 00:09:34.680
similar to what you provided.

00:09:34.680 --> 00:09:37.170
So this is like understanding
single commands.

00:09:37.170 --> 00:09:39.120
But obviously, we want
to support some kind

00:09:39.120 --> 00:09:40.982
of conversation with the user.

00:09:40.982 --> 00:09:42.940
So let's make it a little
bit more complicated.

00:09:42.940 --> 00:09:44.380
So instead of "OK.

00:09:44.380 --> 00:09:44.970
Ordered."

00:09:44.970 --> 00:09:47.670
we will reply
something like, "OK.

00:09:47.670 --> 00:09:51.270
Would you like to
have a drink with it?"

00:09:58.520 --> 00:10:00.060
I save it.

00:10:00.060 --> 00:10:01.950
And in order to support
this conversation,

00:10:01.950 --> 00:10:05.220
I will want to create
some Intents that

00:10:05.220 --> 00:10:08.470
work in the context
of this question.

00:10:08.470 --> 00:10:10.810
So there is an easy way
to do it automatically.

00:10:10.810 --> 00:10:14.640
So I can tell add a follow-up
intent to the bagel order.

00:10:14.640 --> 00:10:18.270
And I will choose
Select a Confirmation.

00:10:18.270 --> 00:10:21.740
And I can also just create
a custom empty intent.

00:10:21.740 --> 00:10:24.180
So Create Confirmation.

00:10:24.180 --> 00:10:27.600
And, let's say I'll
create a rejection.

00:10:27.600 --> 00:10:30.070
And I'll customize those.

00:10:30.070 --> 00:10:35.500
So I'll call it "Drink confirm."

00:10:35.500 --> 00:10:39.230
And as you can see, it
has an input context.

00:10:39.230 --> 00:10:42.010
So this is a topic
that starts when

00:10:42.010 --> 00:10:44.230
the user asks to order a bagel.

00:10:44.230 --> 00:10:47.740
So we have this bagel
order contacts active now.

00:10:47.740 --> 00:10:52.030
And if user confirms, and there
is a set of some confirmation

00:10:52.030 --> 00:10:59.470
phrases, then we will reply
with something like "Great.

00:10:59.470 --> 00:11:03.790
Your order is on its way."

00:11:07.190 --> 00:11:09.750
So let's save it.

00:11:09.750 --> 00:11:16.730
And then, we will also
rename our second intent

00:11:16.730 --> 00:11:22.460
and we'll call it
"Order reject."

00:11:22.460 --> 00:11:23.490
sorry, "Drink reject".

00:11:28.710 --> 00:11:31.950
So you can also
create these contexts

00:11:31.950 --> 00:11:33.780
and manage contexts
automatically.

00:11:33.780 --> 00:11:39.990
So let's say we want to make it
possible for the user to check

00:11:39.990 --> 00:11:42.040
their status order at any time.

00:11:42.040 --> 00:11:46.970
So I'm going to my main
bagel order intent.

00:11:46.970 --> 00:11:51.480
And I will add
Ordering context here.

00:11:51.480 --> 00:11:56.120
And it is possible
to set the lifespan.

00:11:56.120 --> 00:11:59.220
So we are basically trying
to emulate human memory,

00:11:59.220 --> 00:12:01.470
so you may have a limited
number of topics that

00:12:01.470 --> 00:12:04.030
are active at the same time.

00:12:04.030 --> 00:12:06.390
And they will expire if
you're not talking about it

00:12:06.390 --> 00:12:07.320
for a while.

00:12:07.320 --> 00:12:09.120
And they will be
refreshed if user

00:12:09.120 --> 00:12:11.460
keeps talking about something.

00:12:11.460 --> 00:12:12.150
So I save it.

00:12:12.150 --> 00:12:15.170
And then I will create
a new intent that

00:12:15.170 --> 00:12:18.520
will be called "Oder Status."

00:12:18.520 --> 00:12:25.220
And that you will work in
the context of ordering,

00:12:25.220 --> 00:12:28.430
and if my user says
"Where are my bagels?"

00:12:31.010 --> 00:12:34.205
or, "What's the order status?"

00:12:37.030 --> 00:12:42.267
Then, it will return status
action to the app developer,

00:12:42.267 --> 00:12:44.600
and then the developer will
implement the business logic

00:12:44.600 --> 00:12:46.450
here.

00:12:46.450 --> 00:12:48.480
So let's try it again.

00:12:48.480 --> 00:12:51.570
So I can say something like,
"I want to buy a bagel."

00:12:51.570 --> 00:12:53.820
so you can see that
it responds with "OK.

00:12:53.820 --> 00:12:55.800
Would you like to
have a drink with it?"

00:12:55.800 --> 00:12:58.320
I can say, "Sure."

00:12:58.320 --> 00:12:59.430
and it says, "Yes.

00:12:59.430 --> 00:13:01.270
The order is on its way."

00:13:01.270 --> 00:13:06.720
So this is a really basic
way to build conversations.

00:13:06.720 --> 00:13:08.660
But let's say my user--

00:13:08.660 --> 00:13:12.350
well, my agent cannot understand
the user because the user is

00:13:12.350 --> 00:13:14.080
asking something very different.

00:13:14.080 --> 00:13:19.450
So I can tell
something like Take--

00:13:19.450 --> 00:13:21.390
well, "My usual order, please."

00:13:25.030 --> 00:13:27.921
Let's see if it works.

00:13:27.921 --> 00:13:28.420
Yeah.

00:13:28.420 --> 00:13:31.210
So it responds with
Fallback Intent.

00:13:31.210 --> 00:13:32.470
It says, "I didn't get that.

00:13:32.470 --> 00:13:33.520
Can you say it again?"

00:13:33.520 --> 00:13:37.240
so you, as a developer, can
go to the Training section.

00:13:37.240 --> 00:13:40.170
See your logs, and
see that, well,

00:13:40.170 --> 00:13:42.360
if user says something
like this, may be I

00:13:42.360 --> 00:13:46.270
will assign a
bagel order intent.

00:13:46.270 --> 00:13:48.940
So I prove it, and
now, if I again say,

00:13:48.940 --> 00:13:50.920
"My usual order, please."

00:13:50.920 --> 00:13:55.765
It will actually proceed
with the bagel order routine.

00:13:55.765 --> 00:13:59.500
Now, with context you can
build these conversations.

00:13:59.500 --> 00:14:01.240
But you cannot
really think, well,

00:14:01.240 --> 00:14:04.060
create a pre-built
dialogue three.

00:14:04.060 --> 00:14:07.420
So you cannot think of all
the possible ways of ordering

00:14:07.420 --> 00:14:08.200
bagels.

00:14:08.200 --> 00:14:11.570
So there are some
optimization techniques.

00:14:11.570 --> 00:14:12.640
One is Slot Filling.

00:14:12.640 --> 00:14:14.330
So let me show how it works.

00:14:14.330 --> 00:14:16.690
But first, I will create
a couple of entities.

00:14:16.690 --> 00:14:21.040
So let's say we want
to order bagel types.

00:14:21.040 --> 00:14:22.090
Type.

00:14:22.090 --> 00:14:29.490
So have a plain bagel, and
Asiago bagel, and sesame bagel,

00:14:29.490 --> 00:14:32.150
let's say.

00:14:32.150 --> 00:14:34.280
So I save this entity.

00:14:34.280 --> 00:14:39.040
I can also create fillings.

00:14:39.040 --> 00:14:42.700
Let's have salmon here.

00:14:42.700 --> 00:14:44.080
And I can add some synonyms.

00:14:44.080 --> 00:14:47.050
So it can be also
called lox, for example.

00:14:47.050 --> 00:14:52.380
Or I'll have also
tomatoes or cucumbers.

00:14:56.340 --> 00:15:02.590
And the final one
will be spreads.

00:15:02.590 --> 00:15:14.200
So I may have cream
cheese, or mustard, or jam.

00:15:14.200 --> 00:15:14.700
OK.

00:15:14.700 --> 00:15:16.130
I save it.

00:15:16.130 --> 00:15:19.300
So now, I can get back to
my bagel ordering intent.

00:15:19.300 --> 00:15:22.330
And by the way, so everything
that I've shown here also

00:15:22.330 --> 00:15:23.620
is available through API.

00:15:23.620 --> 00:15:27.520
So you can on-the-fly update
your Intents and Entities.

00:15:27.520 --> 00:15:30.720
You can create end
user-specific entities.

00:15:30.720 --> 00:15:34.600
So if it's like,
say, end users' list

00:15:34.600 --> 00:15:37.730
of favorite artists
or an address book,

00:15:37.730 --> 00:15:40.730
you can also take
it into account.

00:15:40.730 --> 00:15:43.490
So let me add some more
interesting examples.

00:15:43.490 --> 00:15:45.640
So I can say
something like, "I'd

00:15:45.640 --> 00:15:58.870
like to order five bagels
with cream cheese."

00:15:58.870 --> 00:16:01.180
so it figures out
that five is a number,

00:16:01.180 --> 00:16:03.170
cream cheese is a spread.

00:16:03.170 --> 00:16:10.345
And I can also say, "I want
an Asiago bagel with salmon."

00:16:13.970 --> 00:16:16.940
so it figures out the
type and the fillings.

00:16:16.940 --> 00:16:21.390
And so, here, let's say, I want
to get the type and filling

00:16:21.390 --> 00:16:25.070
and spread always from the
user in order to order.

00:16:25.070 --> 00:16:27.890
So I can check them as required.

00:16:27.890 --> 00:16:29.490
And let's say I have
several fillings,

00:16:29.490 --> 00:16:32.500
so I will say that
this is the list.

00:16:32.500 --> 00:16:34.160
So I save it.

00:16:34.160 --> 00:16:35.760
And let's start again.

00:16:35.760 --> 00:16:38.730
So I say something
like, "I want a bagel."

00:16:42.952 --> 00:16:47.370
it takes some time to
train, or I'm just hungry.

00:16:47.370 --> 00:16:50.672
So as you can see, it figures
out that the action is ordered,

00:16:50.672 --> 00:16:52.130
but there are no
parameters filled.

00:16:52.130 --> 00:16:53.730
And it starts
asking me questions,

00:16:53.730 --> 00:16:55.150
like, "What's the spread?"

00:16:55.150 --> 00:16:56.910
And you can reply
one by one, but it

00:16:56.910 --> 00:16:59.130
may be pretty difficult to do.

00:16:59.130 --> 00:17:01.410
Well, it's hard to
expect from end users

00:17:01.410 --> 00:17:03.090
to follow your instructions.

00:17:03.090 --> 00:17:05.339
So they can all reply
in different order.

00:17:05.339 --> 00:17:07.599
They can combine
parameters, and so on.

00:17:07.599 --> 00:17:13.895
So I can say
something like, well,

00:17:13.895 --> 00:17:28.630
"I've always preferred sesame
bagels/" So, as you can see,

00:17:28.630 --> 00:17:32.020
type is "sesame" now,
but it keeps asking me

00:17:32.020 --> 00:17:32.960
what's the spread.

00:17:32.960 --> 00:17:35.690
And I can obviously customize
the prompt, as well.

00:17:35.690 --> 00:17:38.350
So I can ask something like
what kind of bagel is it,

00:17:38.350 --> 00:17:40.630
or anything like this.

00:17:40.630 --> 00:17:42.970
Or I can also reply
with something like,

00:17:42.970 --> 00:17:48.600
"My mom would like
cream cheese."

00:17:51.280 --> 00:17:57.900
well, actually say,
"lox and tomato."

00:17:57.900 --> 00:18:00.694
again, I'm not responding
to this question.

00:18:00.694 --> 00:18:02.110
But what happens
if it figures out

00:18:02.110 --> 00:18:04.960
that the fillings are
salmon and tomatoes.

00:18:04.960 --> 00:18:08.140
And then, let's finally
tell what's the spread.

00:18:08.140 --> 00:18:13.961
So I say, cream
cheese is my favorite.

00:18:16.607 --> 00:18:20.500
It figures out the spread
and now, all the required

00:18:20.500 --> 00:18:24.760
parameters are filled, so it
keeps going with the drink.

00:18:24.760 --> 00:18:28.220
I can say, yep.

00:18:28.220 --> 00:18:30.080
And order is on the way.

00:18:30.080 --> 00:18:33.050
So, I've built this basic agent.

00:18:33.050 --> 00:18:35.660
So the next step for
me would be to deploy

00:18:35.660 --> 00:18:37.710
to different platforms.

00:18:37.710 --> 00:18:39.770
So I can go to integrations.

00:18:39.770 --> 00:18:41.600
And again, you can just use API.

00:18:41.600 --> 00:18:44.240
So to deploy to any
type of platform.

00:18:44.240 --> 00:18:46.580
But we have easy-to-use
integrations

00:18:46.580 --> 00:18:48.050
to popular platforms.

00:18:48.050 --> 00:18:54.080
So let's start with, Actions
on Google, of course.

00:18:54.080 --> 00:18:58.920
So I go to Create a
Project in the console.

00:18:58.920 --> 00:19:03.250
So then I go back and say test.

00:19:07.610 --> 00:19:10.890
I will open the simulator.

00:19:10.890 --> 00:19:16.690
And I can see something like,
well, "Talk to my test app."

00:19:16.690 --> 00:19:20.011
I don't need to re-sign in.

00:19:20.011 --> 00:19:20.510
OK.

00:19:20.510 --> 00:19:22.170
So it replies, "Greetings.

00:19:22.170 --> 00:19:23.310
I'm your bagel agent."

00:19:23.310 --> 00:19:26.310
As you may remember, this
is our welcome intent.

00:19:26.310 --> 00:19:28.230
So I'll say, "I'm hungry."

00:19:31.710 --> 00:19:35.000
and it starts asking
me all the questions.

00:19:35.000 --> 00:19:40.540
So similarly, I can enable
a web demo, for example.

00:19:40.540 --> 00:19:42.360
I can set a name for it.

00:19:42.360 --> 00:19:48.180
So let's say it's
my IO bagel demo.

00:19:52.720 --> 00:19:55.980
So this is my agent, again.

00:19:55.980 --> 00:19:58.630
I'm hungry.

00:19:58.630 --> 00:20:00.590
Cancel.

00:20:00.590 --> 00:20:04.430
And by the way, I can also make
it much more conversational

00:20:04.430 --> 00:20:05.470
by enabling small talk.

00:20:05.470 --> 00:20:07.740
So if I say, "Hi, now."

00:20:07.740 --> 00:20:09.500
it doesn't understand me.

00:20:09.500 --> 00:20:13.730
I can go and enable
small talk here.

00:20:13.730 --> 00:20:15.780
And I can customize it.

00:20:15.780 --> 00:20:18.280
So, let's say, if
asks, "Who are you?"

00:20:18.280 --> 00:20:29.750
I will reply "I am IO
Bagel Ordering system."

00:20:29.750 --> 00:20:31.080
Save.

00:20:31.080 --> 00:20:34.280
So if Small Talk is
enabled, I can try it again.

00:20:34.280 --> 00:20:35.360
Say, "Hi."

00:20:35.360 --> 00:20:39.500
"Hi there, friend"
"Who are you?"

00:20:39.500 --> 00:20:40.480
Oops.

00:20:40.480 --> 00:20:42.080
Takes some time to train.

00:20:42.080 --> 00:20:44.820
Anyway, you got the idea.

00:20:44.820 --> 00:20:51.580
So and then, let's also enable
some sort of budget platform.

00:20:51.580 --> 00:20:52.970
Let's say, Slack.

00:20:52.970 --> 00:20:57.930
So I go to Slack,
say, Test on Slack.

00:20:57.930 --> 00:21:00.280
Enable it for my group.

00:21:03.110 --> 00:21:05.810
It takes some time
to check the status.

00:21:05.810 --> 00:21:06.310
OK.

00:21:06.310 --> 00:21:07.950
That mode is activated.

00:21:07.950 --> 00:21:08.450
And yes.

00:21:08.450 --> 00:21:10.800
So I've got this API bot.

00:21:10.800 --> 00:21:11.680
So same stuff.

00:21:11.680 --> 00:21:12.640
I can say, "Hi."

00:21:16.450 --> 00:21:19.220
It takes some time to launch it.

00:21:19.220 --> 00:21:20.060
Like, let's say--

00:21:23.970 --> 00:21:26.310
"Hungry."

00:21:26.310 --> 00:21:29.130
I guess I was using it for
another demo, and that's--

00:21:29.130 --> 00:21:30.930
oh, yeah.

00:21:30.930 --> 00:21:34.650
So it replies to me now.

00:21:34.650 --> 00:21:36.000
So this is all good.

00:21:36.000 --> 00:21:40.380
So what is interesting
and what was announced

00:21:40.380 --> 00:21:43.470
at this event is that,
well, now Google Assistant

00:21:43.470 --> 00:21:47.460
is also available for Androids
and iPhones, which actually

00:21:47.460 --> 00:21:50.640
makes you build
agents that will be

00:21:50.640 --> 00:21:53.310
available to a much larger
audience, which is great.

00:21:53.310 --> 00:21:55.827
So let's say we will
build this agent

00:21:55.827 --> 00:21:56.910
and that it is voice-only.

00:21:56.910 --> 00:21:59.730
As you can see, it doesn't
reply with some white cards

00:21:59.730 --> 00:22:01.990
or anything like this.

00:22:01.990 --> 00:22:04.470
So I can go back and upgrade it.

00:22:04.470 --> 00:22:10.500
So I'm going to my,
say, bagel order.

00:22:10.500 --> 00:22:14.400
And add an Actions on
Google integration.

00:22:14.400 --> 00:22:16.260
And I will say something like--

00:22:16.260 --> 00:22:19.080
so for the drink
information, we will

00:22:19.080 --> 00:22:21.540
add some suggestions shapes.

00:22:21.540 --> 00:22:27.660
And it will be like,
"Sure" or "Nope"

00:22:27.660 --> 00:22:35.070
and then, when I'm going
into Drink Confirmation,

00:22:35.070 --> 00:22:39.720
I will also add a picture here.

00:22:46.680 --> 00:22:49.100
Hmm, yummy.

00:22:49.100 --> 00:22:50.860
Save it.

00:22:50.860 --> 00:22:54.921
And let's try it again.

00:22:54.921 --> 00:22:55.420
OK.

00:22:58.680 --> 00:23:01.114
Cancel the previous
conversation.

00:23:01.114 --> 00:23:03.500
OK.

00:23:03.500 --> 00:23:04.470
Talk to my desktop.

00:23:07.740 --> 00:23:09.670
Greetings.

00:23:09.670 --> 00:23:10.350
I'm hungry.

00:23:13.966 --> 00:23:16.100
Oops, I didn't save it, I guess.

00:23:16.100 --> 00:23:17.500
Oh, yeah.

00:23:17.500 --> 00:23:25.180
Sorry, I have to reply, so
let's say, cream cheese and--

00:23:25.180 --> 00:23:26.271
what's the type?

00:23:26.271 --> 00:23:26.770
sesame.

00:23:30.110 --> 00:23:32.300
And fillings, salmon.

00:23:36.940 --> 00:23:42.460
So as you can see, it edited the
"sure" and "nope" suggestions.

00:23:42.460 --> 00:23:43.765
So I say, "Sure".

00:23:47.030 --> 00:23:50.500
And it will respond with
the answer and the card.

00:23:50.500 --> 00:23:53.260
You can also add galleries
and some other types

00:23:53.260 --> 00:23:56.320
of rich content and it
can connect transactions.

00:23:56.320 --> 00:24:00.850
So by the way, the simulator,
as soon as you start testing it,

00:24:00.850 --> 00:24:03.880
it is also available on
your physical device.

00:24:03.880 --> 00:24:06.400
As your new home
or a pixel device,

00:24:06.400 --> 00:24:09.160
for example, or Android.

00:24:09.160 --> 00:24:12.790
So this is how you build
and deploy rich agents

00:24:12.790 --> 00:24:14.690
across different platforms.

00:24:14.690 --> 00:24:17.350
And when the agent is
deployed, well, next step

00:24:17.350 --> 00:24:20.110
you would want to see how
real users are actually

00:24:20.110 --> 00:24:23.530
talking into it, and Ofer
will be talking about it.

00:24:23.530 --> 00:24:25.340
So how you analyze
it and optimize it.

00:24:30.010 --> 00:24:30.510
Yes.

00:24:30.510 --> 00:24:30.980
OK.

00:24:30.980 --> 00:24:31.520
OFER RONEN: OK.

00:24:31.520 --> 00:24:32.020
Well.

00:24:32.020 --> 00:24:33.260
Thanks, Ilya.

00:24:33.260 --> 00:24:34.385
ILYA GELFENBEYN: Thank you.

00:24:37.712 --> 00:24:38.420
OFER RONEN: Well.

00:24:38.420 --> 00:24:40.280
First, I want to
apologize for talking

00:24:40.280 --> 00:24:43.370
about the bagels with cream
cheese, slightly warm,

00:24:43.370 --> 00:24:44.570
all before lunch.

00:24:44.570 --> 00:24:47.360
So sorry about that.

00:24:47.360 --> 00:24:51.770
Good news, people
building agents on API.AI

00:24:51.770 --> 00:24:53.780
now have analytics.

00:24:53.780 --> 00:24:57.320
There's a new tab that is there.

00:24:57.320 --> 00:25:00.050
And it shows you the
volume of sessions

00:25:00.050 --> 00:25:03.110
that you had for your agent.

00:25:03.110 --> 00:25:07.460
And also, how deep into the
conversation the users went.

00:25:07.460 --> 00:25:09.260
So the kind of engagement.

00:25:09.260 --> 00:25:11.270
And then, pro-intent.

00:25:11.270 --> 00:25:13.370
For example, ordering bagel.

00:25:13.370 --> 00:25:16.940
You can see metrics,
including how often

00:25:16.940 --> 00:25:20.990
did the user leave the
session right after an intent.

00:25:20.990 --> 00:25:24.470
And so you can really
understand what's broken

00:25:24.470 --> 00:25:27.120
and what to optimize.

00:25:27.120 --> 00:25:29.140
So that's the end of the demo.

00:25:29.140 --> 00:25:31.295
Now, I'm going to go
back to some slides.

00:25:35.460 --> 00:25:40.520
So this analytics service
is powered by Chatbase.

00:25:40.520 --> 00:25:44.360
And Chatbase is this new
up-and-coming service

00:25:44.360 --> 00:25:45.860
for analytics.

00:25:45.860 --> 00:25:49.500
We're currently in
early access program.

00:25:49.500 --> 00:25:52.130
So people can go on
Chatbase.com and request access

00:25:52.130 --> 00:25:54.720
if they want even more
detailed analytics

00:25:54.720 --> 00:25:56.870
than what I've shown right now.

00:25:56.870 --> 00:25:59.120
So let's talk about the
detail, the analytics.

00:26:04.390 --> 00:26:05.700
Next slide.

00:26:05.700 --> 00:26:06.760
ILYA GELFENBEYN: Oh, there
is the clicker, there.

00:26:06.760 --> 00:26:07.510
OFER RONEN: OK.

00:26:07.510 --> 00:26:08.680
So, yes.

00:26:08.680 --> 00:26:11.200
So Chatbase is all for chat bot.

00:26:11.200 --> 00:26:15.280
What we've learned from talking
to tens of chat bot developers

00:26:15.280 --> 00:26:18.400
over the last few months, some
of the top ones out there,

00:26:18.400 --> 00:26:20.460
is that--

00:26:20.460 --> 00:26:22.510
oh, that's what I mean.

00:26:22.510 --> 00:26:24.970
OK.

00:26:24.970 --> 00:26:28.760
We learned that traditional
analytics just don't cut it.

00:26:28.760 --> 00:26:33.290
That because chatbots
are built differently,

00:26:33.290 --> 00:26:36.880
they're multi-turn
experiences that

00:26:36.880 --> 00:26:41.230
are expected to handle
variable kinds of input,

00:26:41.230 --> 00:26:45.190
you can't just use a normal web
site or app analytics product.

00:26:45.190 --> 00:26:47.440
And so talking to
all these developers,

00:26:47.440 --> 00:26:50.045
we learn best
practices and input it

00:26:50.045 --> 00:26:51.770
all into this
easy-to-use service.

00:26:55.000 --> 00:26:59.350
So just like API.AI, Chatbase
is also cross-platform.

00:26:59.350 --> 00:27:01.210
Because what we learned
is that developers

00:27:01.210 --> 00:27:03.950
like to deploy on
multiple platforms.

00:27:03.950 --> 00:27:05.860
They don't just do one, usually.

00:27:05.860 --> 00:27:10.450
And so, being able to
compare metrics per platform

00:27:10.450 --> 00:27:13.690
is really powerful and the
way that developers often

00:27:13.690 --> 00:27:15.550
use this is, they
might have, let's

00:27:15.550 --> 00:27:18.160
say, a voice agent that
has good engagement.

00:27:18.160 --> 00:27:22.030
But let's say, their
text-based one is suffering,

00:27:22.030 --> 00:27:24.130
is not doing as well.

00:27:24.130 --> 00:27:26.590
You can zero in on that
and fix the text one.

00:27:29.270 --> 00:27:32.810
And so let's talk about
the bagel example more.

00:27:32.810 --> 00:27:36.290
So you've deployed
your bagel agent

00:27:36.290 --> 00:27:38.570
and now you want to know
how well it's growing.

00:27:38.570 --> 00:27:40.910
That's often the first
question you ask.

00:27:40.910 --> 00:27:42.770
And so, we can give
you some metrics

00:27:42.770 --> 00:27:46.940
that are familiar, like active
users and number of sessions.

00:27:46.940 --> 00:27:49.070
But also you can see
pro-intent what's going on.

00:27:49.070 --> 00:27:51.050
Like the kind of
growth you're getting.

00:27:51.050 --> 00:27:54.120
On the engagement side,
you can see how deep people

00:27:54.120 --> 00:27:55.860
went into the conversation.

00:27:55.860 --> 00:27:57.830
But also we heard that
a lot of chat bots

00:27:57.830 --> 00:28:01.250
drive traffic to their
existing web site or app.

00:28:01.250 --> 00:28:03.627
So we show that kind
of activity, as well.

00:28:03.627 --> 00:28:05.210
In the bagel example,
maybe you wanted

00:28:05.210 --> 00:28:09.020
to see the nutritional
details of the bagel.

00:28:09.020 --> 00:28:11.170
You know, that might
be on the web page.

00:28:11.170 --> 00:28:12.560
So that's captured.

00:28:12.560 --> 00:28:14.810
And then, with
retention, we show you

00:28:14.810 --> 00:28:17.630
cohorts that can
filter by intent.

00:28:17.630 --> 00:28:23.180
And so you can zero in on
particular repeatable actions

00:28:23.180 --> 00:28:27.140
around specific things
in your chatbot.

00:28:27.140 --> 00:28:29.780
Also, on the retention
side, especially

00:28:29.780 --> 00:28:33.710
for text-based agents, you
often send notifications

00:28:33.710 --> 00:28:35.390
to reengage the user.

00:28:35.390 --> 00:28:37.640
And so, we show you how
those campaigns are doing

00:28:37.640 --> 00:28:42.280
and you can AV test it there.

00:28:42.280 --> 00:28:44.440
But what we learn is
that the real work

00:28:44.440 --> 00:28:48.160
of optimizing an agent is
really done at the intent level.

00:28:48.160 --> 00:28:50.930
And so, we show
you those details.

00:28:50.930 --> 00:28:53.680
And you can see, in
this case, with bagels

00:28:53.680 --> 00:28:57.520
that after the-- a lot of people
did the initial ordering, 9,000

00:28:57.520 --> 00:28:59.920
people, or 7,000.

00:28:59.920 --> 00:29:03.340
And then, a lot of
them rejected the drink

00:29:03.340 --> 00:29:04.990
up sell or cross-sell.

00:29:04.990 --> 00:29:06.700
And then left the session.

00:29:06.700 --> 00:29:07.630
They didn't complete.

00:29:07.630 --> 00:29:09.730
They didn't get through
the order at phase.

00:29:09.730 --> 00:29:13.630
And so you can start to see
a story of what's happening

00:29:13.630 --> 00:29:16.320
and where people
are dropping off.

00:29:16.320 --> 00:29:17.934
And you also see response time.

00:29:17.934 --> 00:29:19.600
Sometimes people are
exiting, let's say,

00:29:19.600 --> 00:29:24.490
the drink up sell
was taking forever

00:29:24.490 --> 00:29:25.990
to get back to the user.

00:29:25.990 --> 00:29:29.280
We show you 50% or
90% response time.

00:29:29.280 --> 00:29:33.099
And that can be really
useful at the intent level.

00:29:33.099 --> 00:29:34.140
But we went even further.

00:29:34.140 --> 00:29:37.350
Developers told us
that looking at a table

00:29:37.350 --> 00:29:40.590
can be daunting, especially as
you have more and more intents.

00:29:40.590 --> 00:29:42.300
And so what we do
is, we automatically

00:29:42.300 --> 00:29:44.970
generate something we
call the session flow.

00:29:44.970 --> 00:29:48.240
And what that is, is that
is the sequence of intents

00:29:48.240 --> 00:29:50.010
that the users went through.

00:29:50.010 --> 00:29:53.490
And if we look at the
example we talked about,

00:29:53.490 --> 00:29:58.620
you can see that the places
where people dropped off.

00:29:58.620 --> 00:30:01.620
And where this is
useful is really

00:30:01.620 --> 00:30:05.310
to help you understand what
steps should optimize along

00:30:05.310 --> 00:30:07.170
the way.

00:30:07.170 --> 00:30:09.360
And also, this is
that 10,000 foot view

00:30:09.360 --> 00:30:13.320
of what are people really
doing in my chatbot.

00:30:13.320 --> 00:30:17.070
So let's talk about one of
our early access partners

00:30:17.070 --> 00:30:20.240
and the benefit they
saw from Chatbase.

00:30:20.240 --> 00:30:24.870
So, Viber is a messaging
app with over 800

00:30:24.870 --> 00:30:27.270
million registered users.

00:30:27.270 --> 00:30:30.660
And they have their own chat
bot platform with their own bots

00:30:30.660 --> 00:30:33.730
and also third party ones.

00:30:33.730 --> 00:30:36.740
And they realized pretty
quickly that normal analytics

00:30:36.740 --> 00:30:37.990
wasn't going to work for them.

00:30:37.990 --> 00:30:39.780
And so they started using us.

00:30:39.780 --> 00:30:42.600
And for one of
their top chat bots,

00:30:42.600 --> 00:30:45.630
which is like a digital
sticker sharing bot,

00:30:45.630 --> 00:30:48.570
you can send your friends
stickers of cats, dogs,

00:30:48.570 --> 00:30:50.080
and so on.

00:30:50.080 --> 00:30:53.190
They saw that really
popular queries

00:30:53.190 --> 00:30:54.900
were having high exit rates.

00:30:54.900 --> 00:30:57.540
And so they optimized those.

00:30:57.540 --> 00:31:02.800
And after that, they saw a
35% bump in total queries,

00:31:02.800 --> 00:31:04.230
in query volume.

00:31:04.230 --> 00:31:07.740
So I'm really excited
to hear more stories

00:31:07.740 --> 00:31:12.570
about how some of you out there
will benefit from Chatbase.

00:31:12.570 --> 00:31:20.160
And in terms of next steps,
go API.AI and build an agent.

00:31:20.160 --> 00:31:23.130
You can also go to
Chatbase.com and request access

00:31:23.130 --> 00:31:26.380
to the early access program.

00:31:26.380 --> 00:31:27.720
We also have code labs.

00:31:27.720 --> 00:31:30.600
So whether online or
here on the premise,

00:31:30.600 --> 00:31:35.310
you can try a code lab both
for Chatbase and for API.AI.

00:31:35.310 --> 00:31:38.670
If you're building
actions, then please join

00:31:38.670 --> 00:31:42.510
our vibrant community online.

00:31:42.510 --> 00:31:46.230
And at this point, we're going
to open it up for questions.

00:31:46.230 --> 00:31:48.180
If we don't get
to your question,

00:31:48.180 --> 00:31:50.260
please stop by our
sandbox right out here

00:31:50.260 --> 00:31:51.870
in the assistant space.

00:31:51.870 --> 00:31:53.190
And we can answer it there.

00:31:53.190 --> 00:31:56.120
And also demo for
you both products.

00:31:56.120 --> 00:31:56.826
Thank you.

00:31:56.826 --> 00:31:59.256
[APPLAUSE]

00:31:59.256 --> 00:32:03.050
[MUSIC PLAYING]

